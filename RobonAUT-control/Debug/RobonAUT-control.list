
RobonAUT-control.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00010fec  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000758  080111c0  080111c0  000211c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08011918  08011918  00030310  2**0
                  CONTENTS
  4 .ARM          00000008  08011918  08011918  00021918  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08011920  08011920  00030310  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08011920  08011920  00021920  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08011924  08011924  00021924  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000310  20000000  08011928  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000097c  20000310  08011c38  00030310  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000c8c  08011c38  00030c8c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00030310  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001818a  00000000  00000000  00030340  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003822  00000000  00000000  000484ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000012a8  00000000  00000000  0004bcf0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001188  00000000  00000000  0004cf98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00026427  00000000  00000000  0004e120  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00019875  00000000  00000000  00074547  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000e170f  00000000  00000000  0008ddbc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0016f4cb  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000060bc  00000000  00000000  0016f51c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000310 	.word	0x20000310
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080111a4 	.word	0x080111a4

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000314 	.word	0x20000314
 800020c:	080111a4 	.word	0x080111a4

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295
 8000c9c:	f000 b974 	b.w	8000f88 <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f806 	bl	8000cb8 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__udivmoddi4>:
 8000cb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cbc:	9d08      	ldr	r5, [sp, #32]
 8000cbe:	4604      	mov	r4, r0
 8000cc0:	468e      	mov	lr, r1
 8000cc2:	2b00      	cmp	r3, #0
 8000cc4:	d14d      	bne.n	8000d62 <__udivmoddi4+0xaa>
 8000cc6:	428a      	cmp	r2, r1
 8000cc8:	4694      	mov	ip, r2
 8000cca:	d969      	bls.n	8000da0 <__udivmoddi4+0xe8>
 8000ccc:	fab2 f282 	clz	r2, r2
 8000cd0:	b152      	cbz	r2, 8000ce8 <__udivmoddi4+0x30>
 8000cd2:	fa01 f302 	lsl.w	r3, r1, r2
 8000cd6:	f1c2 0120 	rsb	r1, r2, #32
 8000cda:	fa20 f101 	lsr.w	r1, r0, r1
 8000cde:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ce2:	ea41 0e03 	orr.w	lr, r1, r3
 8000ce6:	4094      	lsls	r4, r2
 8000ce8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000cec:	0c21      	lsrs	r1, r4, #16
 8000cee:	fbbe f6f8 	udiv	r6, lr, r8
 8000cf2:	fa1f f78c 	uxth.w	r7, ip
 8000cf6:	fb08 e316 	mls	r3, r8, r6, lr
 8000cfa:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000cfe:	fb06 f107 	mul.w	r1, r6, r7
 8000d02:	4299      	cmp	r1, r3
 8000d04:	d90a      	bls.n	8000d1c <__udivmoddi4+0x64>
 8000d06:	eb1c 0303 	adds.w	r3, ip, r3
 8000d0a:	f106 30ff 	add.w	r0, r6, #4294967295
 8000d0e:	f080 811f 	bcs.w	8000f50 <__udivmoddi4+0x298>
 8000d12:	4299      	cmp	r1, r3
 8000d14:	f240 811c 	bls.w	8000f50 <__udivmoddi4+0x298>
 8000d18:	3e02      	subs	r6, #2
 8000d1a:	4463      	add	r3, ip
 8000d1c:	1a5b      	subs	r3, r3, r1
 8000d1e:	b2a4      	uxth	r4, r4
 8000d20:	fbb3 f0f8 	udiv	r0, r3, r8
 8000d24:	fb08 3310 	mls	r3, r8, r0, r3
 8000d28:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000d2c:	fb00 f707 	mul.w	r7, r0, r7
 8000d30:	42a7      	cmp	r7, r4
 8000d32:	d90a      	bls.n	8000d4a <__udivmoddi4+0x92>
 8000d34:	eb1c 0404 	adds.w	r4, ip, r4
 8000d38:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d3c:	f080 810a 	bcs.w	8000f54 <__udivmoddi4+0x29c>
 8000d40:	42a7      	cmp	r7, r4
 8000d42:	f240 8107 	bls.w	8000f54 <__udivmoddi4+0x29c>
 8000d46:	4464      	add	r4, ip
 8000d48:	3802      	subs	r0, #2
 8000d4a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d4e:	1be4      	subs	r4, r4, r7
 8000d50:	2600      	movs	r6, #0
 8000d52:	b11d      	cbz	r5, 8000d5c <__udivmoddi4+0xa4>
 8000d54:	40d4      	lsrs	r4, r2
 8000d56:	2300      	movs	r3, #0
 8000d58:	e9c5 4300 	strd	r4, r3, [r5]
 8000d5c:	4631      	mov	r1, r6
 8000d5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d62:	428b      	cmp	r3, r1
 8000d64:	d909      	bls.n	8000d7a <__udivmoddi4+0xc2>
 8000d66:	2d00      	cmp	r5, #0
 8000d68:	f000 80ef 	beq.w	8000f4a <__udivmoddi4+0x292>
 8000d6c:	2600      	movs	r6, #0
 8000d6e:	e9c5 0100 	strd	r0, r1, [r5]
 8000d72:	4630      	mov	r0, r6
 8000d74:	4631      	mov	r1, r6
 8000d76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d7a:	fab3 f683 	clz	r6, r3
 8000d7e:	2e00      	cmp	r6, #0
 8000d80:	d14a      	bne.n	8000e18 <__udivmoddi4+0x160>
 8000d82:	428b      	cmp	r3, r1
 8000d84:	d302      	bcc.n	8000d8c <__udivmoddi4+0xd4>
 8000d86:	4282      	cmp	r2, r0
 8000d88:	f200 80f9 	bhi.w	8000f7e <__udivmoddi4+0x2c6>
 8000d8c:	1a84      	subs	r4, r0, r2
 8000d8e:	eb61 0303 	sbc.w	r3, r1, r3
 8000d92:	2001      	movs	r0, #1
 8000d94:	469e      	mov	lr, r3
 8000d96:	2d00      	cmp	r5, #0
 8000d98:	d0e0      	beq.n	8000d5c <__udivmoddi4+0xa4>
 8000d9a:	e9c5 4e00 	strd	r4, lr, [r5]
 8000d9e:	e7dd      	b.n	8000d5c <__udivmoddi4+0xa4>
 8000da0:	b902      	cbnz	r2, 8000da4 <__udivmoddi4+0xec>
 8000da2:	deff      	udf	#255	; 0xff
 8000da4:	fab2 f282 	clz	r2, r2
 8000da8:	2a00      	cmp	r2, #0
 8000daa:	f040 8092 	bne.w	8000ed2 <__udivmoddi4+0x21a>
 8000dae:	eba1 010c 	sub.w	r1, r1, ip
 8000db2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000db6:	fa1f fe8c 	uxth.w	lr, ip
 8000dba:	2601      	movs	r6, #1
 8000dbc:	0c20      	lsrs	r0, r4, #16
 8000dbe:	fbb1 f3f7 	udiv	r3, r1, r7
 8000dc2:	fb07 1113 	mls	r1, r7, r3, r1
 8000dc6:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000dca:	fb0e f003 	mul.w	r0, lr, r3
 8000dce:	4288      	cmp	r0, r1
 8000dd0:	d908      	bls.n	8000de4 <__udivmoddi4+0x12c>
 8000dd2:	eb1c 0101 	adds.w	r1, ip, r1
 8000dd6:	f103 38ff 	add.w	r8, r3, #4294967295
 8000dda:	d202      	bcs.n	8000de2 <__udivmoddi4+0x12a>
 8000ddc:	4288      	cmp	r0, r1
 8000dde:	f200 80cb 	bhi.w	8000f78 <__udivmoddi4+0x2c0>
 8000de2:	4643      	mov	r3, r8
 8000de4:	1a09      	subs	r1, r1, r0
 8000de6:	b2a4      	uxth	r4, r4
 8000de8:	fbb1 f0f7 	udiv	r0, r1, r7
 8000dec:	fb07 1110 	mls	r1, r7, r0, r1
 8000df0:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000df4:	fb0e fe00 	mul.w	lr, lr, r0
 8000df8:	45a6      	cmp	lr, r4
 8000dfa:	d908      	bls.n	8000e0e <__udivmoddi4+0x156>
 8000dfc:	eb1c 0404 	adds.w	r4, ip, r4
 8000e00:	f100 31ff 	add.w	r1, r0, #4294967295
 8000e04:	d202      	bcs.n	8000e0c <__udivmoddi4+0x154>
 8000e06:	45a6      	cmp	lr, r4
 8000e08:	f200 80bb 	bhi.w	8000f82 <__udivmoddi4+0x2ca>
 8000e0c:	4608      	mov	r0, r1
 8000e0e:	eba4 040e 	sub.w	r4, r4, lr
 8000e12:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000e16:	e79c      	b.n	8000d52 <__udivmoddi4+0x9a>
 8000e18:	f1c6 0720 	rsb	r7, r6, #32
 8000e1c:	40b3      	lsls	r3, r6
 8000e1e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000e22:	ea4c 0c03 	orr.w	ip, ip, r3
 8000e26:	fa20 f407 	lsr.w	r4, r0, r7
 8000e2a:	fa01 f306 	lsl.w	r3, r1, r6
 8000e2e:	431c      	orrs	r4, r3
 8000e30:	40f9      	lsrs	r1, r7
 8000e32:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000e36:	fa00 f306 	lsl.w	r3, r0, r6
 8000e3a:	fbb1 f8f9 	udiv	r8, r1, r9
 8000e3e:	0c20      	lsrs	r0, r4, #16
 8000e40:	fa1f fe8c 	uxth.w	lr, ip
 8000e44:	fb09 1118 	mls	r1, r9, r8, r1
 8000e48:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e4c:	fb08 f00e 	mul.w	r0, r8, lr
 8000e50:	4288      	cmp	r0, r1
 8000e52:	fa02 f206 	lsl.w	r2, r2, r6
 8000e56:	d90b      	bls.n	8000e70 <__udivmoddi4+0x1b8>
 8000e58:	eb1c 0101 	adds.w	r1, ip, r1
 8000e5c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000e60:	f080 8088 	bcs.w	8000f74 <__udivmoddi4+0x2bc>
 8000e64:	4288      	cmp	r0, r1
 8000e66:	f240 8085 	bls.w	8000f74 <__udivmoddi4+0x2bc>
 8000e6a:	f1a8 0802 	sub.w	r8, r8, #2
 8000e6e:	4461      	add	r1, ip
 8000e70:	1a09      	subs	r1, r1, r0
 8000e72:	b2a4      	uxth	r4, r4
 8000e74:	fbb1 f0f9 	udiv	r0, r1, r9
 8000e78:	fb09 1110 	mls	r1, r9, r0, r1
 8000e7c:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000e80:	fb00 fe0e 	mul.w	lr, r0, lr
 8000e84:	458e      	cmp	lr, r1
 8000e86:	d908      	bls.n	8000e9a <__udivmoddi4+0x1e2>
 8000e88:	eb1c 0101 	adds.w	r1, ip, r1
 8000e8c:	f100 34ff 	add.w	r4, r0, #4294967295
 8000e90:	d26c      	bcs.n	8000f6c <__udivmoddi4+0x2b4>
 8000e92:	458e      	cmp	lr, r1
 8000e94:	d96a      	bls.n	8000f6c <__udivmoddi4+0x2b4>
 8000e96:	3802      	subs	r0, #2
 8000e98:	4461      	add	r1, ip
 8000e9a:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000e9e:	fba0 9402 	umull	r9, r4, r0, r2
 8000ea2:	eba1 010e 	sub.w	r1, r1, lr
 8000ea6:	42a1      	cmp	r1, r4
 8000ea8:	46c8      	mov	r8, r9
 8000eaa:	46a6      	mov	lr, r4
 8000eac:	d356      	bcc.n	8000f5c <__udivmoddi4+0x2a4>
 8000eae:	d053      	beq.n	8000f58 <__udivmoddi4+0x2a0>
 8000eb0:	b15d      	cbz	r5, 8000eca <__udivmoddi4+0x212>
 8000eb2:	ebb3 0208 	subs.w	r2, r3, r8
 8000eb6:	eb61 010e 	sbc.w	r1, r1, lr
 8000eba:	fa01 f707 	lsl.w	r7, r1, r7
 8000ebe:	fa22 f306 	lsr.w	r3, r2, r6
 8000ec2:	40f1      	lsrs	r1, r6
 8000ec4:	431f      	orrs	r7, r3
 8000ec6:	e9c5 7100 	strd	r7, r1, [r5]
 8000eca:	2600      	movs	r6, #0
 8000ecc:	4631      	mov	r1, r6
 8000ece:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ed2:	f1c2 0320 	rsb	r3, r2, #32
 8000ed6:	40d8      	lsrs	r0, r3
 8000ed8:	fa0c fc02 	lsl.w	ip, ip, r2
 8000edc:	fa21 f303 	lsr.w	r3, r1, r3
 8000ee0:	4091      	lsls	r1, r2
 8000ee2:	4301      	orrs	r1, r0
 8000ee4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ee8:	fa1f fe8c 	uxth.w	lr, ip
 8000eec:	fbb3 f0f7 	udiv	r0, r3, r7
 8000ef0:	fb07 3610 	mls	r6, r7, r0, r3
 8000ef4:	0c0b      	lsrs	r3, r1, #16
 8000ef6:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000efa:	fb00 f60e 	mul.w	r6, r0, lr
 8000efe:	429e      	cmp	r6, r3
 8000f00:	fa04 f402 	lsl.w	r4, r4, r2
 8000f04:	d908      	bls.n	8000f18 <__udivmoddi4+0x260>
 8000f06:	eb1c 0303 	adds.w	r3, ip, r3
 8000f0a:	f100 38ff 	add.w	r8, r0, #4294967295
 8000f0e:	d22f      	bcs.n	8000f70 <__udivmoddi4+0x2b8>
 8000f10:	429e      	cmp	r6, r3
 8000f12:	d92d      	bls.n	8000f70 <__udivmoddi4+0x2b8>
 8000f14:	3802      	subs	r0, #2
 8000f16:	4463      	add	r3, ip
 8000f18:	1b9b      	subs	r3, r3, r6
 8000f1a:	b289      	uxth	r1, r1
 8000f1c:	fbb3 f6f7 	udiv	r6, r3, r7
 8000f20:	fb07 3316 	mls	r3, r7, r6, r3
 8000f24:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f28:	fb06 f30e 	mul.w	r3, r6, lr
 8000f2c:	428b      	cmp	r3, r1
 8000f2e:	d908      	bls.n	8000f42 <__udivmoddi4+0x28a>
 8000f30:	eb1c 0101 	adds.w	r1, ip, r1
 8000f34:	f106 38ff 	add.w	r8, r6, #4294967295
 8000f38:	d216      	bcs.n	8000f68 <__udivmoddi4+0x2b0>
 8000f3a:	428b      	cmp	r3, r1
 8000f3c:	d914      	bls.n	8000f68 <__udivmoddi4+0x2b0>
 8000f3e:	3e02      	subs	r6, #2
 8000f40:	4461      	add	r1, ip
 8000f42:	1ac9      	subs	r1, r1, r3
 8000f44:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000f48:	e738      	b.n	8000dbc <__udivmoddi4+0x104>
 8000f4a:	462e      	mov	r6, r5
 8000f4c:	4628      	mov	r0, r5
 8000f4e:	e705      	b.n	8000d5c <__udivmoddi4+0xa4>
 8000f50:	4606      	mov	r6, r0
 8000f52:	e6e3      	b.n	8000d1c <__udivmoddi4+0x64>
 8000f54:	4618      	mov	r0, r3
 8000f56:	e6f8      	b.n	8000d4a <__udivmoddi4+0x92>
 8000f58:	454b      	cmp	r3, r9
 8000f5a:	d2a9      	bcs.n	8000eb0 <__udivmoddi4+0x1f8>
 8000f5c:	ebb9 0802 	subs.w	r8, r9, r2
 8000f60:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000f64:	3801      	subs	r0, #1
 8000f66:	e7a3      	b.n	8000eb0 <__udivmoddi4+0x1f8>
 8000f68:	4646      	mov	r6, r8
 8000f6a:	e7ea      	b.n	8000f42 <__udivmoddi4+0x28a>
 8000f6c:	4620      	mov	r0, r4
 8000f6e:	e794      	b.n	8000e9a <__udivmoddi4+0x1e2>
 8000f70:	4640      	mov	r0, r8
 8000f72:	e7d1      	b.n	8000f18 <__udivmoddi4+0x260>
 8000f74:	46d0      	mov	r8, sl
 8000f76:	e77b      	b.n	8000e70 <__udivmoddi4+0x1b8>
 8000f78:	3b02      	subs	r3, #2
 8000f7a:	4461      	add	r1, ip
 8000f7c:	e732      	b.n	8000de4 <__udivmoddi4+0x12c>
 8000f7e:	4630      	mov	r0, r6
 8000f80:	e709      	b.n	8000d96 <__udivmoddi4+0xde>
 8000f82:	4464      	add	r4, ip
 8000f84:	3802      	subs	r0, #2
 8000f86:	e742      	b.n	8000e0e <__udivmoddi4+0x156>

08000f88 <__aeabi_idiv0>:
 8000f88:	4770      	bx	lr
 8000f8a:	bf00      	nop

08000f8c <__NVIC_SystemReset>:
/**
  \brief   System Reset
  \details Initiates a system reset request to reset the MCU.
 */
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
 8000f8c:	b480      	push	{r7}
 8000f8e:	af00      	add	r7, sp, #0
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000f90:	f3bf 8f4f 	dsb	sy
}
 8000f94:	bf00      	nop
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 8000f96:	4b06      	ldr	r3, [pc, #24]	; (8000fb0 <__NVIC_SystemReset+0x24>)
 8000f98:	68db      	ldr	r3, [r3, #12]
 8000f9a:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 8000f9e:	4904      	ldr	r1, [pc, #16]	; (8000fb0 <__NVIC_SystemReset+0x24>)
 8000fa0:	4b04      	ldr	r3, [pc, #16]	; (8000fb4 <__NVIC_SystemReset+0x28>)
 8000fa2:	4313      	orrs	r3, r2
 8000fa4:	60cb      	str	r3, [r1, #12]
  __ASM volatile ("dsb 0xF":::"memory");
 8000fa6:	f3bf 8f4f 	dsb	sy
}
 8000faa:	bf00      	nop
                            SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchanged */
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
 8000fac:	bf00      	nop
 8000fae:	e7fd      	b.n	8000fac <__NVIC_SystemReset+0x20>
 8000fb0:	e000ed00 	.word	0xe000ed00
 8000fb4:	05fa0004 	.word	0x05fa0004

08000fb8 <F4_Basic_Init>:
uint8_t mode;
float v_ref; //mm/s
uint8_t leaveLineEnabled;

void F4_Basic_Init(UART_HandleTypeDef *huart_debugg,TIM_HandleTypeDef *htim_scheduler,TIM_HandleTypeDef *htim_motor,TIM_HandleTypeDef *htim_servo1,TIM_HandleTypeDef *htim_servo2, TIM_HandleTypeDef *htim_encoder,TIM_HandleTypeDef *htim_delay,TIM_HandleTypeDef *htim_rand)
{
 8000fb8:	b580      	push	{r7, lr}
 8000fba:	b08e      	sub	sp, #56	; 0x38
 8000fbc:	af00      	add	r7, sp, #0
 8000fbe:	60f8      	str	r0, [r7, #12]
 8000fc0:	60b9      	str	r1, [r7, #8]
 8000fc2:	607a      	str	r2, [r7, #4]
 8000fc4:	603b      	str	r3, [r7, #0]
	char buf[40];
	LED_R(0);
 8000fc6:	2201      	movs	r2, #1
 8000fc8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000fcc:	484f      	ldr	r0, [pc, #316]	; (800110c <F4_Basic_Init+0x154>)
 8000fce:	f008 f967 	bl	80092a0 <HAL_GPIO_WritePin>
	LED_B(0);
 8000fd2:	2201      	movs	r2, #1
 8000fd4:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000fd8:	484c      	ldr	r0, [pc, #304]	; (800110c <F4_Basic_Init+0x154>)
 8000fda:	f008 f961 	bl	80092a0 <HAL_GPIO_WritePin>
	LED_G(0);
 8000fde:	2201      	movs	r2, #1
 8000fe0:	2102      	movs	r1, #2
 8000fe2:	484a      	ldr	r0, [pc, #296]	; (800110c <F4_Basic_Init+0x154>)
 8000fe4:	f008 f95c 	bl	80092a0 <HAL_GPIO_WritePin>
	LED_Y(0);
 8000fe8:	2201      	movs	r2, #1
 8000fea:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000fee:	4847      	ldr	r0, [pc, #284]	; (800110c <F4_Basic_Init+0x154>)
 8000ff0:	f008 f956 	bl	80092a0 <HAL_GPIO_WritePin>
	LED_NUCLEO(0);
 8000ff4:	2200      	movs	r2, #0
 8000ff6:	2120      	movs	r1, #32
 8000ff8:	4845      	ldr	r0, [pc, #276]	; (8001110 <F4_Basic_Init+0x158>)
 8000ffa:	f008 f951 	bl	80092a0 <HAL_GPIO_WritePin>
	sprintf(buf,"\r\nRobonAUT 2023 Bit Bangers F4\r\n");// a buff tömb-be beleírom (stringprint) a string-emet. 1 karakter = 1 byte = 1 tömbelem
 8000ffe:	f107 0310 	add.w	r3, r7, #16
 8001002:	4944      	ldr	r1, [pc, #272]	; (8001114 <F4_Basic_Init+0x15c>)
 8001004:	4618      	mov	r0, r3
 8001006:	f00c fc07 	bl	800d818 <siprintf>
	HAL_UART_Transmit(huart_debugg,(uint8_t*) buf, strlen(buf), 100);// A UART2-őn (ide van kötve a programozó) kiküldöm a buf karaktertömböt (string) és maximum 10-ms -ot várok hogy ezt elvégezze a periféria
 800100a:	f107 0310 	add.w	r3, r7, #16
 800100e:	4618      	mov	r0, r3
 8001010:	f7ff f8fe 	bl	8000210 <strlen>
 8001014:	4603      	mov	r3, r0
 8001016:	b29a      	uxth	r2, r3
 8001018:	f107 0110 	add.w	r1, r7, #16
 800101c:	2364      	movs	r3, #100	; 0x64
 800101e:	68f8      	ldr	r0, [r7, #12]
 8001020:	f00a fe91 	bl	800bd46 <HAL_UART_Transmit>

	//MotorEnable engedélyezése
	motorEnRemote=0;//csak akkor ha megnyomtuk a ravaszt
 8001024:	4b3c      	ldr	r3, [pc, #240]	; (8001118 <F4_Basic_Init+0x160>)
 8001026:	2200      	movs	r2, #0
 8001028:	701a      	strb	r2, [r3, #0]
	motorEnLineOk=1;
 800102a:	4b3c      	ldr	r3, [pc, #240]	; (800111c <F4_Basic_Init+0x164>)
 800102c:	2201      	movs	r2, #1
 800102e:	701a      	strb	r2, [r3, #0]
	leaveLineEnabled=0;
 8001030:	4b3b      	ldr	r3, [pc, #236]	; (8001120 <F4_Basic_Init+0x168>)
 8001032:	2200      	movs	r2, #0
 8001034:	701a      	strb	r2, [r3, #0]

	swState[0] = SW1;
 8001036:	f44f 7180 	mov.w	r1, #256	; 0x100
 800103a:	4835      	ldr	r0, [pc, #212]	; (8001110 <F4_Basic_Init+0x158>)
 800103c:	f008 f918 	bl	8009270 <HAL_GPIO_ReadPin>
 8001040:	4603      	mov	r3, r0
 8001042:	461a      	mov	r2, r3
 8001044:	4b37      	ldr	r3, [pc, #220]	; (8001124 <F4_Basic_Init+0x16c>)
 8001046:	701a      	strb	r2, [r3, #0]
	swState[1] = SW2;
 8001048:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800104c:	482f      	ldr	r0, [pc, #188]	; (800110c <F4_Basic_Init+0x154>)
 800104e:	f008 f90f 	bl	8009270 <HAL_GPIO_ReadPin>
 8001052:	4603      	mov	r3, r0
 8001054:	461a      	mov	r2, r3
 8001056:	4b33      	ldr	r3, [pc, #204]	; (8001124 <F4_Basic_Init+0x16c>)
 8001058:	705a      	strb	r2, [r3, #1]
	if(SW2)LED_R(1);
 800105a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800105e:	482b      	ldr	r0, [pc, #172]	; (800110c <F4_Basic_Init+0x154>)
 8001060:	f008 f906 	bl	8009270 <HAL_GPIO_ReadPin>
 8001064:	4603      	mov	r3, r0
 8001066:	2b00      	cmp	r3, #0
 8001068:	d006      	beq.n	8001078 <F4_Basic_Init+0xc0>
 800106a:	2200      	movs	r2, #0
 800106c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001070:	4826      	ldr	r0, [pc, #152]	; (800110c <F4_Basic_Init+0x154>)
 8001072:	f008 f915 	bl	80092a0 <HAL_GPIO_WritePin>
 8001076:	e005      	b.n	8001084 <F4_Basic_Init+0xcc>
	else LED_R(0);
 8001078:	2201      	movs	r2, #1
 800107a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800107e:	4823      	ldr	r0, [pc, #140]	; (800110c <F4_Basic_Init+0x154>)
 8001080:	f008 f90e 	bl	80092a0 <HAL_GPIO_WritePin>

	bFlag[0] = bFlag[1] = bFlag[2] = 0;
 8001084:	2200      	movs	r2, #0
 8001086:	4b28      	ldr	r3, [pc, #160]	; (8001128 <F4_Basic_Init+0x170>)
 8001088:	4611      	mov	r1, r2
 800108a:	7099      	strb	r1, [r3, #2]
 800108c:	4b26      	ldr	r3, [pc, #152]	; (8001128 <F4_Basic_Init+0x170>)
 800108e:	4611      	mov	r1, r2
 8001090:	7059      	strb	r1, [r3, #1]
 8001092:	4b25      	ldr	r3, [pc, #148]	; (8001128 <F4_Basic_Init+0x170>)
 8001094:	701a      	strb	r2, [r3, #0]
	fromPC[0]=150;
 8001096:	4b25      	ldr	r3, [pc, #148]	; (800112c <F4_Basic_Init+0x174>)
 8001098:	2296      	movs	r2, #150	; 0x96
 800109a:	701a      	strb	r2, [r3, #0]
	fromPC[1]=150;
 800109c:	4b23      	ldr	r3, [pc, #140]	; (800112c <F4_Basic_Init+0x174>)
 800109e:	2296      	movs	r2, #150	; 0x96
 80010a0:	705a      	strb	r2, [r3, #1]
	mode=SKILL;
 80010a2:	4b23      	ldr	r3, [pc, #140]	; (8001130 <F4_Basic_Init+0x178>)
 80010a4:	2252      	movs	r2, #82	; 0x52
 80010a6:	701a      	strb	r2, [r3, #0]
	v_ref = 1000;
 80010a8:	4b22      	ldr	r3, [pc, #136]	; (8001134 <F4_Basic_Init+0x17c>)
 80010aa:	4a23      	ldr	r2, [pc, #140]	; (8001138 <F4_Basic_Init+0x180>)
 80010ac:	601a      	str	r2, [r3, #0]
	v=0;
 80010ae:	4b23      	ldr	r3, [pc, #140]	; (800113c <F4_Basic_Init+0x184>)
 80010b0:	f04f 0200 	mov.w	r2, #0
 80010b4:	601a      	str	r2, [r3, #0]

	//timerek elindítása
	TIM1->CCR4=SERVO_REAR_CCR_MIDDLE;
 80010b6:	4b22      	ldr	r3, [pc, #136]	; (8001140 <F4_Basic_Init+0x188>)
 80010b8:	f44f 722a 	mov.w	r2, #680	; 0x2a8
 80010bc:	641a      	str	r2, [r3, #64]	; 0x40
	TIM2->CCR1=SERVO_FRONT_CCR_MIDDLE;
 80010be:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80010c2:	f44f 722d 	mov.w	r2, #692	; 0x2b4
 80010c6:	635a      	str	r2, [r3, #52]	; 0x34
	//TIM2->CCR1=684; //servot középre
	//TIM3->CCR1=499; //0 kitöltési tényező a motorra
	//TIM3->CCR2=499;
	HAL_TIM_Base_Start(htim_scheduler);//heart beat timer tick start
 80010c8:	68b8      	ldr	r0, [r7, #8]
 80010ca:	f008 ffbd 	bl	800a048 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(htim_delay);//heart beat timer tick start
 80010ce:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 80010d0:	f008 ffba 	bl	800a048 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(htim_rand);//heart beat timer tick start
 80010d4:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 80010d6:	f008 ffb7 	bl	800a048 <HAL_TIM_Base_Start>
	HAL_TIM_PWM_Start(htim_motor, TIM_CHANNEL_1);//motor PWM-ek elindítása
 80010da:	2100      	movs	r1, #0
 80010dc:	6878      	ldr	r0, [r7, #4]
 80010de:	f009 f875 	bl	800a1cc <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim_motor, TIM_CHANNEL_2);
 80010e2:	2104      	movs	r1, #4
 80010e4:	6878      	ldr	r0, [r7, #4]
 80010e6:	f009 f871 	bl	800a1cc <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim_servo1, TIM_CHANNEL_1); //servo RC pwm elindítása
 80010ea:	2100      	movs	r1, #0
 80010ec:	6838      	ldr	r0, [r7, #0]
 80010ee:	f009 f86d 	bl	800a1cc <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim_servo2, TIM_CHANNEL_4); //servo RC pwm elindítása
 80010f2:	210c      	movs	r1, #12
 80010f4:	6c38      	ldr	r0, [r7, #64]	; 0x40
 80010f6:	f009 f869 	bl	800a1cc <HAL_TIM_PWM_Start>
	HAL_TIM_Encoder_Start(htim_encoder,TIM_CHANNEL_ALL);
 80010fa:	213c      	movs	r1, #60	; 0x3c
 80010fc:	6c78      	ldr	r0, [r7, #68]	; 0x44
 80010fe:	f009 fbd7 	bl	800a8b0 <HAL_TIM_Encoder_Start>

	//Ha a PC-ről küldünk vmit azt fogadjuk
	//HAL_UART_Receive_IT(huart_debugg, fromPC, 2);
}
 8001102:	bf00      	nop
 8001104:	3738      	adds	r7, #56	; 0x38
 8001106:	46bd      	mov	sp, r7
 8001108:	bd80      	pop	{r7, pc}
 800110a:	bf00      	nop
 800110c:	40020400 	.word	0x40020400
 8001110:	40020000 	.word	0x40020000
 8001114:	080111c0 	.word	0x080111c0
 8001118:	20000c40 	.word	0x20000c40
 800111c:	20000c41 	.word	0x20000c41
 8001120:	2000033c 	.word	0x2000033c
 8001124:	2000032c 	.word	0x2000032c
 8001128:	20000330 	.word	0x20000330
 800112c:	20000334 	.word	0x20000334
 8001130:	20000336 	.word	0x20000336
 8001134:	20000338 	.word	0x20000338
 8001138:	447a0000 	.word	0x447a0000
 800113c:	20000754 	.word	0x20000754
 8001140:	40010000 	.word	0x40010000

08001144 <HDI_Read_Task>:


void HDI_Read_Task(UART_HandleTypeDef *huart_debugg,TIM_HandleTypeDef *htim_servo,uint32_t tick, uint32_t period)
{
 8001144:	b580      	push	{r7, lr}
 8001146:	b084      	sub	sp, #16
 8001148:	af00      	add	r7, sp, #0
 800114a:	60f8      	str	r0, [r7, #12]
 800114c:	60b9      	str	r1, [r7, #8]
 800114e:	607a      	str	r2, [r7, #4]
 8001150:	603b      	str	r3, [r7, #0]
	static uint32_t hdi_read_task_tick=0;

	if(hdi_read_task_tick>tick) return;
 8001152:	4b29      	ldr	r3, [pc, #164]	; (80011f8 <HDI_Read_Task+0xb4>)
 8001154:	681b      	ldr	r3, [r3, #0]
 8001156:	687a      	ldr	r2, [r7, #4]
 8001158:	429a      	cmp	r2, r3
 800115a:	d349      	bcc.n	80011f0 <HDI_Read_Task+0xac>
	hdi_read_task_tick = tick + period;
 800115c:	687a      	ldr	r2, [r7, #4]
 800115e:	683b      	ldr	r3, [r7, #0]
 8001160:	4413      	add	r3, r2
 8001162:	4a25      	ldr	r2, [pc, #148]	; (80011f8 <HDI_Read_Task+0xb4>)
 8001164:	6013      	str	r3, [r2, #0]

	swState[0]=SW1;
 8001166:	f44f 7180 	mov.w	r1, #256	; 0x100
 800116a:	4824      	ldr	r0, [pc, #144]	; (80011fc <HDI_Read_Task+0xb8>)
 800116c:	f008 f880 	bl	8009270 <HAL_GPIO_ReadPin>
 8001170:	4603      	mov	r3, r0
 8001172:	461a      	mov	r2, r3
 8001174:	4b22      	ldr	r3, [pc, #136]	; (8001200 <HDI_Read_Task+0xbc>)
 8001176:	701a      	strb	r2, [r3, #0]
	swState[1]=SW2;
 8001178:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800117c:	4821      	ldr	r0, [pc, #132]	; (8001204 <HDI_Read_Task+0xc0>)
 800117e:	f008 f877 	bl	8009270 <HAL_GPIO_ReadPin>
 8001182:	4603      	mov	r3, r0
 8001184:	461a      	mov	r2, r3
 8001186:	4b1e      	ldr	r3, [pc, #120]	; (8001200 <HDI_Read_Task+0xbc>)
 8001188:	705a      	strb	r2, [r3, #1]

	if(swState[0] && mode==FAST) LED_G(1);
 800118a:	4b1d      	ldr	r3, [pc, #116]	; (8001200 <HDI_Read_Task+0xbc>)
 800118c:	781b      	ldrb	r3, [r3, #0]
 800118e:	2b00      	cmp	r3, #0
 8001190:	d008      	beq.n	80011a4 <HDI_Read_Task+0x60>
 8001192:	4b1d      	ldr	r3, [pc, #116]	; (8001208 <HDI_Read_Task+0xc4>)
 8001194:	781b      	ldrb	r3, [r3, #0]
 8001196:	2b3f      	cmp	r3, #63	; 0x3f
 8001198:	d104      	bne.n	80011a4 <HDI_Read_Task+0x60>
 800119a:	2200      	movs	r2, #0
 800119c:	2102      	movs	r1, #2
 800119e:	4819      	ldr	r0, [pc, #100]	; (8001204 <HDI_Read_Task+0xc0>)
 80011a0:	f008 f87e 	bl	80092a0 <HAL_GPIO_WritePin>
	if(!swState[0] && mode==FAST) LED_G(0);
 80011a4:	4b16      	ldr	r3, [pc, #88]	; (8001200 <HDI_Read_Task+0xbc>)
 80011a6:	781b      	ldrb	r3, [r3, #0]
 80011a8:	2b00      	cmp	r3, #0
 80011aa:	d108      	bne.n	80011be <HDI_Read_Task+0x7a>
 80011ac:	4b16      	ldr	r3, [pc, #88]	; (8001208 <HDI_Read_Task+0xc4>)
 80011ae:	781b      	ldrb	r3, [r3, #0]
 80011b0:	2b3f      	cmp	r3, #63	; 0x3f
 80011b2:	d104      	bne.n	80011be <HDI_Read_Task+0x7a>
 80011b4:	2201      	movs	r2, #1
 80011b6:	2102      	movs	r1, #2
 80011b8:	4812      	ldr	r0, [pc, #72]	; (8001204 <HDI_Read_Task+0xc0>)
 80011ba:	f008 f871 	bl	80092a0 <HAL_GPIO_WritePin>
	if(swState[1]) LED_R(1);
 80011be:	4b10      	ldr	r3, [pc, #64]	; (8001200 <HDI_Read_Task+0xbc>)
 80011c0:	785b      	ldrb	r3, [r3, #1]
 80011c2:	2b00      	cmp	r3, #0
 80011c4:	d005      	beq.n	80011d2 <HDI_Read_Task+0x8e>
 80011c6:	2200      	movs	r2, #0
 80011c8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011cc:	480d      	ldr	r0, [pc, #52]	; (8001204 <HDI_Read_Task+0xc0>)
 80011ce:	f008 f867 	bl	80092a0 <HAL_GPIO_WritePin>
	if(!swState[1]) LED_R(0);
 80011d2:	4b0b      	ldr	r3, [pc, #44]	; (8001200 <HDI_Read_Task+0xbc>)
 80011d4:	785b      	ldrb	r3, [r3, #1]
 80011d6:	2b00      	cmp	r3, #0
 80011d8:	d105      	bne.n	80011e6 <HDI_Read_Task+0xa2>
 80011da:	2201      	movs	r2, #1
 80011dc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011e0:	4808      	ldr	r0, [pc, #32]	; (8001204 <HDI_Read_Task+0xc0>)
 80011e2:	f008 f85d 	bl	80092a0 <HAL_GPIO_WritePin>

	if(bFlag[0]);
 80011e6:	4b09      	ldr	r3, [pc, #36]	; (800120c <HDI_Read_Task+0xc8>)
 80011e8:	781b      	ldrb	r3, [r3, #0]
	if(bFlag[1]);
 80011ea:	4b08      	ldr	r3, [pc, #32]	; (800120c <HDI_Read_Task+0xc8>)
 80011ec:	785b      	ldrb	r3, [r3, #1]
 80011ee:	e000      	b.n	80011f2 <HDI_Read_Task+0xae>
	if(hdi_read_task_tick>tick) return;
 80011f0:	bf00      	nop

}
 80011f2:	3710      	adds	r7, #16
 80011f4:	46bd      	mov	sp, r7
 80011f6:	bd80      	pop	{r7, pc}
 80011f8:	20000340 	.word	0x20000340
 80011fc:	40020000 	.word	0x40020000
 8001200:	2000032c 	.word	0x2000032c
 8001204:	40020400 	.word	0x40020400
 8001208:	20000336 	.word	0x20000336
 800120c:	20000330 	.word	0x20000330

08001210 <Uart_Receive_From_PC_ISR>:

void Uart_Receive_From_PC_ISR(UART_HandleTypeDef *huart)
{
 8001210:	b580      	push	{r7, lr}
 8001212:	b082      	sub	sp, #8
 8001214:	af00      	add	r7, sp, #0
 8001216:	6078      	str	r0, [r7, #4]
	LED_Y_TOGGLE;
 8001218:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800121c:	480b      	ldr	r0, [pc, #44]	; (800124c <Uart_Receive_From_PC_ISR+0x3c>)
 800121e:	f008 f858 	bl	80092d2 <HAL_GPIO_TogglePin>
	HAL_UART_Receive_IT(huart, (uint8_t*)fromPC, 2);
 8001222:	2202      	movs	r2, #2
 8001224:	490a      	ldr	r1, [pc, #40]	; (8001250 <Uart_Receive_From_PC_ISR+0x40>)
 8001226:	6878      	ldr	r0, [r7, #4]
 8001228:	f00a fec1 	bl	800bfae <HAL_UART_Receive_IT>
	TIM2->CCR1 = 4*fromPC[0];
 800122c:	4b08      	ldr	r3, [pc, #32]	; (8001250 <Uart_Receive_From_PC_ISR+0x40>)
 800122e:	781b      	ldrb	r3, [r3, #0]
 8001230:	009a      	lsls	r2, r3, #2
 8001232:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001236:	635a      	str	r2, [r3, #52]	; 0x34
	TIM1->CCR4 = 4*fromPC[1];
 8001238:	4b05      	ldr	r3, [pc, #20]	; (8001250 <Uart_Receive_From_PC_ISR+0x40>)
 800123a:	785b      	ldrb	r3, [r3, #1]
 800123c:	009a      	lsls	r2, r3, #2
 800123e:	4b05      	ldr	r3, [pc, #20]	; (8001254 <Uart_Receive_From_PC_ISR+0x44>)
 8001240:	641a      	str	r2, [r3, #64]	; 0x40
}
 8001242:	bf00      	nop
 8001244:	3708      	adds	r7, #8
 8001246:	46bd      	mov	sp, r7
 8001248:	bd80      	pop	{r7, pc}
 800124a:	bf00      	nop
 800124c:	40020400 	.word	0x40020400
 8001250:	20000334 	.word	0x20000334
 8001254:	40010000 	.word	0x40010000

08001258 <B1_ISR>:

void B1_ISR(UART_HandleTypeDef *huart_debugg)
{
 8001258:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 800125c:	b084      	sub	sp, #16
 800125e:	af00      	add	r7, sp, #0
 8001260:	6078      	str	r0, [r7, #4]
		HAL_FLASH_Unlock();
 8001262:	f007 fcb7 	bl	8008bd4 <HAL_FLASH_Unlock>
		Delay(50);
 8001266:	2032      	movs	r0, #50	; 0x32
 8001268:	f005 fb0a 	bl	8006880 <Delay>
		FLASH_Erase_Sector(6, FLASH_VOLTAGE_RANGE_3);
 800126c:	2102      	movs	r1, #2
 800126e:	2006      	movs	r0, #6
 8001270:	f007 fe22 	bl	8008eb8 <FLASH_Erase_Sector>
		Delay(50);
 8001274:	2032      	movs	r0, #50	; 0x32
 8001276:	f005 fb03 	bl	8006880 <Delay>
		HAL_FLASH_Lock();
 800127a:	f007 fccd 	bl	8008c18 <HAL_FLASH_Lock>

		int i;
		for(i=0;i<8;i++)
 800127e:	2300      	movs	r3, #0
 8001280:	60fb      	str	r3, [r7, #12]
 8001282:	e00a      	b.n	800129a <B1_ISR+0x42>
		{
			LED_R_TOGGLE;
 8001284:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001288:	4828      	ldr	r0, [pc, #160]	; (800132c <B1_ISR+0xd4>)
 800128a:	f008 f822 	bl	80092d2 <HAL_GPIO_TogglePin>
			Delay(150);
 800128e:	2096      	movs	r0, #150	; 0x96
 8001290:	f005 faf6 	bl	8006880 <Delay>
		for(i=0;i<8;i++)
 8001294:	68fb      	ldr	r3, [r7, #12]
 8001296:	3301      	adds	r3, #1
 8001298:	60fb      	str	r3, [r7, #12]
 800129a:	68fb      	ldr	r3, [r7, #12]
 800129c:	2b07      	cmp	r3, #7
 800129e:	ddf1      	ble.n	8001284 <B1_ISR+0x2c>
		}
		LED_R(0);
 80012a0:	2201      	movs	r2, #1
 80012a2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80012a6:	4821      	ldr	r0, [pc, #132]	; (800132c <B1_ISR+0xd4>)
 80012a8:	f007 fffa 	bl	80092a0 <HAL_GPIO_WritePin>

		HAL_FLASH_Unlock();
 80012ac:	f007 fc92 	bl	8008bd4 <HAL_FLASH_Unlock>
		Delay(50);
 80012b0:	2032      	movs	r0, #50	; 0x32
 80012b2:	f005 fae5 	bl	8006880 <Delay>
		for(i=0;i<22;i++)
 80012b6:	2300      	movs	r3, #0
 80012b8:	60fb      	str	r3, [r7, #12]
 80012ba:	e01a      	b.n	80012f2 <B1_ISR+0x9a>
		{
			HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+i, Nodes[i].worth);
 80012bc:	68fb      	ldr	r3, [r7, #12]
 80012be:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 80012c2:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
 80012c6:	4618      	mov	r0, r3
 80012c8:	4919      	ldr	r1, [pc, #100]	; (8001330 <B1_ISR+0xd8>)
 80012ca:	68fa      	ldr	r2, [r7, #12]
 80012cc:	4613      	mov	r3, r2
 80012ce:	009b      	lsls	r3, r3, #2
 80012d0:	4413      	add	r3, r2
 80012d2:	00db      	lsls	r3, r3, #3
 80012d4:	440b      	add	r3, r1
 80012d6:	3304      	adds	r3, #4
 80012d8:	681b      	ldr	r3, [r3, #0]
 80012da:	17da      	asrs	r2, r3, #31
 80012dc:	4698      	mov	r8, r3
 80012de:	4691      	mov	r9, r2
 80012e0:	4642      	mov	r2, r8
 80012e2:	464b      	mov	r3, r9
 80012e4:	4601      	mov	r1, r0
 80012e6:	2000      	movs	r0, #0
 80012e8:	f007 fc20 	bl	8008b2c <HAL_FLASH_Program>
		for(i=0;i<22;i++)
 80012ec:	68fb      	ldr	r3, [r7, #12]
 80012ee:	3301      	adds	r3, #1
 80012f0:	60fb      	str	r3, [r7, #12]
 80012f2:	68fb      	ldr	r3, [r7, #12]
 80012f4:	2b15      	cmp	r3, #21
 80012f6:	dde1      	ble.n	80012bc <B1_ISR+0x64>
		}
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+22, collectedPoints);
 80012f8:	4b0e      	ldr	r3, [pc, #56]	; (8001334 <B1_ISR+0xdc>)
 80012fa:	781b      	ldrb	r3, [r3, #0]
 80012fc:	b2db      	uxtb	r3, r3
 80012fe:	2200      	movs	r2, #0
 8001300:	461c      	mov	r4, r3
 8001302:	4615      	mov	r5, r2
 8001304:	4622      	mov	r2, r4
 8001306:	462b      	mov	r3, r5
 8001308:	490b      	ldr	r1, [pc, #44]	; (8001338 <B1_ISR+0xe0>)
 800130a:	2000      	movs	r0, #0
 800130c:	f007 fc0e 	bl	8008b2c <HAL_FLASH_Program>
		Delay(50);
 8001310:	2032      	movs	r0, #50	; 0x32
 8001312:	f005 fab5 	bl	8006880 <Delay>
		HAL_FLASH_Lock();
 8001316:	f007 fc7f 	bl	8008c18 <HAL_FLASH_Lock>
		HAL_UART_Transmit(huart_debugg,(uint8_t*) "\n\rBackup save!\n\r", 16, 10);
 800131a:	230a      	movs	r3, #10
 800131c:	2210      	movs	r2, #16
 800131e:	4907      	ldr	r1, [pc, #28]	; (800133c <B1_ISR+0xe4>)
 8001320:	6878      	ldr	r0, [r7, #4]
 8001322:	f00a fd10 	bl	800bd46 <HAL_UART_Transmit>
		NVIC_SystemReset(); //SW reseteljük a mikorvezérlőt
 8001326:	f7ff fe31 	bl	8000f8c <__NVIC_SystemReset>
 800132a:	bf00      	nop
 800132c:	40020400 	.word	0x40020400
 8001330:	20000360 	.word	0x20000360
 8001334:	20000347 	.word	0x20000347
 8001338:	08040016 	.word	0x08040016
 800133c:	080111e4 	.word	0x080111e4

08001340 <B_NUCLEO_ISR>:
}

void B_NUCLEO_ISR(UART_HandleTypeDef *huart_debugg)
{
 8001340:	b580      	push	{r7, lr}
 8001342:	b084      	sub	sp, #16
 8001344:	af00      	add	r7, sp, #0
 8001346:	6078      	str	r0, [r7, #4]
	//Milyen módban voltunk eddig?
	uint8_t tmp= *(__IO uint8_t *) FLASH_ADDRESS_MODESELECTOR;
 8001348:	4b41      	ldr	r3, [pc, #260]	; (8001450 <B_NUCLEO_ISR+0x110>)
 800134a:	781b      	ldrb	r3, [r3, #0]
 800134c:	72fb      	strb	r3, [r7, #11]
	if(tmp==SKILL || tmp==FAST)mode=tmp;
 800134e:	7afb      	ldrb	r3, [r7, #11]
 8001350:	2b52      	cmp	r3, #82	; 0x52
 8001352:	d002      	beq.n	800135a <B_NUCLEO_ISR+0x1a>
 8001354:	7afb      	ldrb	r3, [r7, #11]
 8001356:	2b3f      	cmp	r3, #63	; 0x3f
 8001358:	d103      	bne.n	8001362 <B_NUCLEO_ISR+0x22>
 800135a:	4a3e      	ldr	r2, [pc, #248]	; (8001454 <B_NUCLEO_ISR+0x114>)
 800135c:	7afb      	ldrb	r3, [r7, #11]
 800135e:	7013      	strb	r3, [r2, #0]
 8001360:	e002      	b.n	8001368 <B_NUCLEO_ISR+0x28>
	else mode=SKILL;
 8001362:	4b3c      	ldr	r3, [pc, #240]	; (8001454 <B_NUCLEO_ISR+0x114>)
 8001364:	2252      	movs	r2, #82	; 0x52
 8001366:	701a      	strb	r2, [r3, #0]

	//section 7 törlése, hogy újraírhassuk a módot jelző bytot
	HAL_FLASH_Unlock();
 8001368:	f007 fc34 	bl	8008bd4 <HAL_FLASH_Unlock>
	Delay(50);
 800136c:	2032      	movs	r0, #50	; 0x32
 800136e:	f005 fa87 	bl	8006880 <Delay>
	FLASH_Erase_Sector(7, FLASH_VOLTAGE_RANGE_3);
 8001372:	2102      	movs	r1, #2
 8001374:	2007      	movs	r0, #7
 8001376:	f007 fd9f 	bl	8008eb8 <FLASH_Erase_Sector>
	Delay(50);
 800137a:	2032      	movs	r0, #50	; 0x32
 800137c:	f005 fa80 	bl	8006880 <Delay>
	HAL_FLASH_Lock();
 8001380:	f007 fc4a 	bl	8008c18 <HAL_FLASH_Lock>

	LED_NUCLEO(0);
 8001384:	2200      	movs	r2, #0
 8001386:	2120      	movs	r1, #32
 8001388:	4833      	ldr	r0, [pc, #204]	; (8001458 <B_NUCLEO_ISR+0x118>)
 800138a:	f007 ff89 	bl	80092a0 <HAL_GPIO_WritePin>
	LED_Y(0);
 800138e:	2201      	movs	r2, #1
 8001390:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001394:	4831      	ldr	r0, [pc, #196]	; (800145c <B_NUCLEO_ISR+0x11c>)
 8001396:	f007 ff83 	bl	80092a0 <HAL_GPIO_WritePin>
	LED_G(0);
 800139a:	2201      	movs	r2, #1
 800139c:	2102      	movs	r1, #2
 800139e:	482f      	ldr	r0, [pc, #188]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013a0:	f007 ff7e 	bl	80092a0 <HAL_GPIO_WritePin>
	LED_B(0);
 80013a4:	2201      	movs	r2, #1
 80013a6:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80013aa:	482c      	ldr	r0, [pc, #176]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013ac:	f007 ff78 	bl	80092a0 <HAL_GPIO_WritePin>
	LED_R(0);
 80013b0:	2201      	movs	r2, #1
 80013b2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013b6:	4829      	ldr	r0, [pc, #164]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013b8:	f007 ff72 	bl	80092a0 <HAL_GPIO_WritePin>
	int i;
	for(i=0;i<8;i++)
 80013bc:	2300      	movs	r3, #0
 80013be:	60fb      	str	r3, [r7, #12]
 80013c0:	e01c      	b.n	80013fc <B_NUCLEO_ISR+0xbc>
	{
		LED_NUCLEO_TOGGLE;
 80013c2:	2120      	movs	r1, #32
 80013c4:	4824      	ldr	r0, [pc, #144]	; (8001458 <B_NUCLEO_ISR+0x118>)
 80013c6:	f007 ff84 	bl	80092d2 <HAL_GPIO_TogglePin>
		LED_Y_TOGGLE;
 80013ca:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80013ce:	4823      	ldr	r0, [pc, #140]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013d0:	f007 ff7f 	bl	80092d2 <HAL_GPIO_TogglePin>
		LED_G_TOGGLE;
 80013d4:	2102      	movs	r1, #2
 80013d6:	4821      	ldr	r0, [pc, #132]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013d8:	f007 ff7b 	bl	80092d2 <HAL_GPIO_TogglePin>
		LED_B_TOGGLE;
 80013dc:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80013e0:	481e      	ldr	r0, [pc, #120]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013e2:	f007 ff76 	bl	80092d2 <HAL_GPIO_TogglePin>
		LED_R_TOGGLE;
 80013e6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013ea:	481c      	ldr	r0, [pc, #112]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013ec:	f007 ff71 	bl	80092d2 <HAL_GPIO_TogglePin>
		Delay(150);
 80013f0:	2096      	movs	r0, #150	; 0x96
 80013f2:	f005 fa45 	bl	8006880 <Delay>
	for(i=0;i<8;i++)
 80013f6:	68fb      	ldr	r3, [r7, #12]
 80013f8:	3301      	adds	r3, #1
 80013fa:	60fb      	str	r3, [r7, #12]
 80013fc:	68fb      	ldr	r3, [r7, #12]
 80013fe:	2b07      	cmp	r3, #7
 8001400:	dddf      	ble.n	80013c2 <B_NUCLEO_ISR+0x82>
	}

	//Állítsuk át a módot
	HAL_FLASH_Unlock();
 8001402:	f007 fbe7 	bl	8008bd4 <HAL_FLASH_Unlock>
	Delay(50);
 8001406:	2032      	movs	r0, #50	; 0x32
 8001408:	f005 fa3a 	bl	8006880 <Delay>
	if(mode==SKILL) HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_MODESELECTOR, FAST); //ha eddig skill mód volt akor msot gyors lesz
 800140c:	4b11      	ldr	r3, [pc, #68]	; (8001454 <B_NUCLEO_ISR+0x114>)
 800140e:	781b      	ldrb	r3, [r3, #0]
 8001410:	2b52      	cmp	r3, #82	; 0x52
 8001412:	d108      	bne.n	8001426 <B_NUCLEO_ISR+0xe6>
 8001414:	f04f 023f 	mov.w	r2, #63	; 0x3f
 8001418:	f04f 0300 	mov.w	r3, #0
 800141c:	490c      	ldr	r1, [pc, #48]	; (8001450 <B_NUCLEO_ISR+0x110>)
 800141e:	2000      	movs	r0, #0
 8001420:	f007 fb84 	bl	8008b2c <HAL_FLASH_Program>
 8001424:	e007      	b.n	8001436 <B_NUCLEO_ISR+0xf6>
	else HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_MODESELECTOR, SKILL); //ha eddig gyors mód vagy memóriaszemét volt akkor msot skil lesz
 8001426:	f04f 0252 	mov.w	r2, #82	; 0x52
 800142a:	f04f 0300 	mov.w	r3, #0
 800142e:	4908      	ldr	r1, [pc, #32]	; (8001450 <B_NUCLEO_ISR+0x110>)
 8001430:	2000      	movs	r0, #0
 8001432:	f007 fb7b 	bl	8008b2c <HAL_FLASH_Program>
	Delay(50);
 8001436:	2032      	movs	r0, #50	; 0x32
 8001438:	f005 fa22 	bl	8006880 <Delay>
	HAL_FLASH_Lock();
 800143c:	f007 fbec 	bl	8008c18 <HAL_FLASH_Lock>
	HAL_UART_Transmit(huart_debugg, (uint8_t*)"\n\rMode change!\n\r", 16, 10);
 8001440:	230a      	movs	r3, #10
 8001442:	2210      	movs	r2, #16
 8001444:	4906      	ldr	r1, [pc, #24]	; (8001460 <B_NUCLEO_ISR+0x120>)
 8001446:	6878      	ldr	r0, [r7, #4]
 8001448:	f00a fc7d 	bl	800bd46 <HAL_UART_Transmit>
	NVIC_SystemReset(); //SW reseteljük a mikorvezérlőt
 800144c:	f7ff fd9e 	bl	8000f8c <__NVIC_SystemReset>
 8001450:	08060000 	.word	0x08060000
 8001454:	20000336 	.word	0x20000336
 8001458:	40020000 	.word	0x40020000
 800145c:	40020400 	.word	0x40020400
 8001460:	080111f8 	.word	0x080111f8

08001464 <Create_Nodes>:
uint8_t dir[2];

node Nodes[22];

void Create_Nodes(UART_HandleTypeDef *huart_debugg)
{
 8001464:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8001468:	b09c      	sub	sp, #112	; 0x70
 800146a:	af00      	add	r7, sp, #0
 800146c:	6078      	str	r0, [r7, #4]
	int i;
	orientation=FORWARD;
 800146e:	4b10      	ldr	r3, [pc, #64]	; (80014b0 <Create_Nodes+0x4c>)
 8001470:	2200      	movs	r2, #0
 8001472:	701a      	strb	r2, [r3, #0]
	collectedPoints=0;
 8001474:	4b0f      	ldr	r3, [pc, #60]	; (80014b4 <Create_Nodes+0x50>)
 8001476:	2200      	movs	r2, #0
 8001478:	701a      	strb	r2, [r3, #0]
	laneChange=0;
 800147a:	4b0f      	ldr	r3, [pc, #60]	; (80014b8 <Create_Nodes+0x54>)
 800147c:	2200      	movs	r2, #0
 800147e:	701a      	strb	r2, [r3, #0]
	path=LEFT;
 8001480:	4b0e      	ldr	r3, [pc, #56]	; (80014bc <Create_Nodes+0x58>)
 8001482:	2200      	movs	r2, #0
 8001484:	701a      	strb	r2, [r3, #0]

	nodeDetected=0;
 8001486:	4b0e      	ldr	r3, [pc, #56]	; (80014c0 <Create_Nodes+0x5c>)
 8001488:	2200      	movs	r2, #0
 800148a:	701a      	strb	r2, [r3, #0]
	v_control=STOP;
 800148c:	4b0d      	ldr	r3, [pc, #52]	; (80014c4 <Create_Nodes+0x60>)
 800148e:	2200      	movs	r2, #0
 8001490:	701a      	strb	r2, [r3, #0]
	pos[MY]	='S';
 8001492:	4b0d      	ldr	r3, [pc, #52]	; (80014c8 <Create_Nodes+0x64>)
 8001494:	2253      	movs	r2, #83	; 0x53
 8001496:	701a      	strb	r2, [r3, #0]
	pos[NEXT]='Q'; 				//my, next,
 8001498:	4b0b      	ldr	r3, [pc, #44]	; (80014c8 <Create_Nodes+0x64>)
 800149a:	2251      	movs	r2, #81	; 0x51
 800149c:	705a      	strb	r2, [r3, #1]

	if(mode!=SKILL)return;
 800149e:	4b0b      	ldr	r3, [pc, #44]	; (80014cc <Create_Nodes+0x68>)
 80014a0:	781b      	ldrb	r3, [r3, #0]
 80014a2:	2b52      	cmp	r3, #82	; 0x52
 80014a4:	f041 80e4 	bne.w	8002670 <Create_Nodes+0x120c>

	for(i=0;i<22;i++)
 80014a8:	2300      	movs	r3, #0
 80014aa:	66fb      	str	r3, [r7, #108]	; 0x6c
 80014ac:	e0e8      	b.n	8001680 <Create_Nodes+0x21c>
 80014ae:	bf00      	nop
 80014b0:	20000344 	.word	0x20000344
 80014b4:	20000347 	.word	0x20000347
 80014b8:	20000348 	.word	0x20000348
 80014bc:	20000346 	.word	0x20000346
 80014c0:	20000345 	.word	0x20000345
 80014c4:	20000349 	.word	0x20000349
 80014c8:	20000358 	.word	0x20000358
 80014cc:	20000336 	.word	0x20000336
	{
		Nodes[i].id=65+i;
 80014d0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80014d2:	b2db      	uxtb	r3, r3
 80014d4:	3341      	adds	r3, #65	; 0x41
 80014d6:	b2d8      	uxtb	r0, r3
 80014d8:	49c4      	ldr	r1, [pc, #784]	; (80017ec <Create_Nodes+0x388>)
 80014da:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80014dc:	4613      	mov	r3, r2
 80014de:	009b      	lsls	r3, r3, #2
 80014e0:	4413      	add	r3, r2
 80014e2:	00db      	lsls	r3, r3, #3
 80014e4:	440b      	add	r3, r1
 80014e6:	4602      	mov	r2, r0
 80014e8:	701a      	strb	r2, [r3, #0]
		Nodes[i].worth=0;
 80014ea:	49c0      	ldr	r1, [pc, #768]	; (80017ec <Create_Nodes+0x388>)
 80014ec:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80014ee:	4613      	mov	r3, r2
 80014f0:	009b      	lsls	r3, r3, #2
 80014f2:	4413      	add	r3, r2
 80014f4:	00db      	lsls	r3, r3, #3
 80014f6:	440b      	add	r3, r1
 80014f8:	3304      	adds	r3, #4
 80014fa:	2200      	movs	r2, #0
 80014fc:	601a      	str	r2, [r3, #0]
		Nodes[i].type=0;
 80014fe:	49bb      	ldr	r1, [pc, #748]	; (80017ec <Create_Nodes+0x388>)
 8001500:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001502:	4613      	mov	r3, r2
 8001504:	009b      	lsls	r3, r3, #2
 8001506:	4413      	add	r3, r2
 8001508:	00db      	lsls	r3, r3, #3
 800150a:	440b      	add	r3, r1
 800150c:	3308      	adds	r3, #8
 800150e:	2200      	movs	r2, #0
 8001510:	601a      	str	r2, [r3, #0]
		VALUE_2(Nodes[i].neighbours,0,0,0,0,0,0);
 8001512:	49b6      	ldr	r1, [pc, #728]	; (80017ec <Create_Nodes+0x388>)
 8001514:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001516:	4613      	mov	r3, r2
 8001518:	009b      	lsls	r3, r3, #2
 800151a:	4413      	add	r3, r2
 800151c:	00db      	lsls	r3, r3, #3
 800151e:	440b      	add	r3, r1
 8001520:	330c      	adds	r3, #12
 8001522:	2200      	movs	r2, #0
 8001524:	701a      	strb	r2, [r3, #0]
 8001526:	49b1      	ldr	r1, [pc, #708]	; (80017ec <Create_Nodes+0x388>)
 8001528:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800152a:	4613      	mov	r3, r2
 800152c:	009b      	lsls	r3, r3, #2
 800152e:	4413      	add	r3, r2
 8001530:	00db      	lsls	r3, r3, #3
 8001532:	440b      	add	r3, r1
 8001534:	330d      	adds	r3, #13
 8001536:	2200      	movs	r2, #0
 8001538:	701a      	strb	r2, [r3, #0]
 800153a:	49ac      	ldr	r1, [pc, #688]	; (80017ec <Create_Nodes+0x388>)
 800153c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800153e:	4613      	mov	r3, r2
 8001540:	009b      	lsls	r3, r3, #2
 8001542:	4413      	add	r3, r2
 8001544:	00db      	lsls	r3, r3, #3
 8001546:	440b      	add	r3, r1
 8001548:	330e      	adds	r3, #14
 800154a:	2200      	movs	r2, #0
 800154c:	701a      	strb	r2, [r3, #0]
 800154e:	49a7      	ldr	r1, [pc, #668]	; (80017ec <Create_Nodes+0x388>)
 8001550:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001552:	4613      	mov	r3, r2
 8001554:	009b      	lsls	r3, r3, #2
 8001556:	4413      	add	r3, r2
 8001558:	00db      	lsls	r3, r3, #3
 800155a:	440b      	add	r3, r1
 800155c:	330f      	adds	r3, #15
 800155e:	2200      	movs	r2, #0
 8001560:	701a      	strb	r2, [r3, #0]
 8001562:	49a2      	ldr	r1, [pc, #648]	; (80017ec <Create_Nodes+0x388>)
 8001564:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001566:	4613      	mov	r3, r2
 8001568:	009b      	lsls	r3, r3, #2
 800156a:	4413      	add	r3, r2
 800156c:	00db      	lsls	r3, r3, #3
 800156e:	440b      	add	r3, r1
 8001570:	3310      	adds	r3, #16
 8001572:	2200      	movs	r2, #0
 8001574:	701a      	strb	r2, [r3, #0]
 8001576:	499d      	ldr	r1, [pc, #628]	; (80017ec <Create_Nodes+0x388>)
 8001578:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800157a:	4613      	mov	r3, r2
 800157c:	009b      	lsls	r3, r3, #2
 800157e:	4413      	add	r3, r2
 8001580:	00db      	lsls	r3, r3, #3
 8001582:	440b      	add	r3, r1
 8001584:	3311      	adds	r3, #17
 8001586:	2200      	movs	r2, #0
 8001588:	701a      	strb	r2, [r3, #0]
		VALUE_2(Nodes[i].directions,0,0,0,0,0,0);
 800158a:	4998      	ldr	r1, [pc, #608]	; (80017ec <Create_Nodes+0x388>)
 800158c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800158e:	4613      	mov	r3, r2
 8001590:	009b      	lsls	r3, r3, #2
 8001592:	4413      	add	r3, r2
 8001594:	00db      	lsls	r3, r3, #3
 8001596:	440b      	add	r3, r1
 8001598:	3312      	adds	r3, #18
 800159a:	2200      	movs	r2, #0
 800159c:	701a      	strb	r2, [r3, #0]
 800159e:	4993      	ldr	r1, [pc, #588]	; (80017ec <Create_Nodes+0x388>)
 80015a0:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015a2:	4613      	mov	r3, r2
 80015a4:	009b      	lsls	r3, r3, #2
 80015a6:	4413      	add	r3, r2
 80015a8:	00db      	lsls	r3, r3, #3
 80015aa:	440b      	add	r3, r1
 80015ac:	3313      	adds	r3, #19
 80015ae:	2200      	movs	r2, #0
 80015b0:	701a      	strb	r2, [r3, #0]
 80015b2:	498e      	ldr	r1, [pc, #568]	; (80017ec <Create_Nodes+0x388>)
 80015b4:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015b6:	4613      	mov	r3, r2
 80015b8:	009b      	lsls	r3, r3, #2
 80015ba:	4413      	add	r3, r2
 80015bc:	00db      	lsls	r3, r3, #3
 80015be:	440b      	add	r3, r1
 80015c0:	3314      	adds	r3, #20
 80015c2:	2200      	movs	r2, #0
 80015c4:	701a      	strb	r2, [r3, #0]
 80015c6:	4989      	ldr	r1, [pc, #548]	; (80017ec <Create_Nodes+0x388>)
 80015c8:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015ca:	4613      	mov	r3, r2
 80015cc:	009b      	lsls	r3, r3, #2
 80015ce:	4413      	add	r3, r2
 80015d0:	00db      	lsls	r3, r3, #3
 80015d2:	440b      	add	r3, r1
 80015d4:	3315      	adds	r3, #21
 80015d6:	2200      	movs	r2, #0
 80015d8:	701a      	strb	r2, [r3, #0]
 80015da:	4984      	ldr	r1, [pc, #528]	; (80017ec <Create_Nodes+0x388>)
 80015dc:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015de:	4613      	mov	r3, r2
 80015e0:	009b      	lsls	r3, r3, #2
 80015e2:	4413      	add	r3, r2
 80015e4:	00db      	lsls	r3, r3, #3
 80015e6:	440b      	add	r3, r1
 80015e8:	3316      	adds	r3, #22
 80015ea:	2200      	movs	r2, #0
 80015ec:	701a      	strb	r2, [r3, #0]
 80015ee:	497f      	ldr	r1, [pc, #508]	; (80017ec <Create_Nodes+0x388>)
 80015f0:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015f2:	4613      	mov	r3, r2
 80015f4:	009b      	lsls	r3, r3, #2
 80015f6:	4413      	add	r3, r2
 80015f8:	00db      	lsls	r3, r3, #3
 80015fa:	440b      	add	r3, r1
 80015fc:	3317      	adds	r3, #23
 80015fe:	2200      	movs	r2, #0
 8001600:	701a      	strb	r2, [r3, #0]
		VALUE_2(Nodes[i].distance,0,0,0,0,0,0);
 8001602:	497a      	ldr	r1, [pc, #488]	; (80017ec <Create_Nodes+0x388>)
 8001604:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001606:	4613      	mov	r3, r2
 8001608:	009b      	lsls	r3, r3, #2
 800160a:	4413      	add	r3, r2
 800160c:	00db      	lsls	r3, r3, #3
 800160e:	440b      	add	r3, r1
 8001610:	3318      	adds	r3, #24
 8001612:	2200      	movs	r2, #0
 8001614:	801a      	strh	r2, [r3, #0]
 8001616:	4975      	ldr	r1, [pc, #468]	; (80017ec <Create_Nodes+0x388>)
 8001618:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800161a:	4613      	mov	r3, r2
 800161c:	009b      	lsls	r3, r3, #2
 800161e:	4413      	add	r3, r2
 8001620:	00db      	lsls	r3, r3, #3
 8001622:	440b      	add	r3, r1
 8001624:	331a      	adds	r3, #26
 8001626:	2200      	movs	r2, #0
 8001628:	801a      	strh	r2, [r3, #0]
 800162a:	4970      	ldr	r1, [pc, #448]	; (80017ec <Create_Nodes+0x388>)
 800162c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800162e:	4613      	mov	r3, r2
 8001630:	009b      	lsls	r3, r3, #2
 8001632:	4413      	add	r3, r2
 8001634:	00db      	lsls	r3, r3, #3
 8001636:	440b      	add	r3, r1
 8001638:	331c      	adds	r3, #28
 800163a:	2200      	movs	r2, #0
 800163c:	801a      	strh	r2, [r3, #0]
 800163e:	496b      	ldr	r1, [pc, #428]	; (80017ec <Create_Nodes+0x388>)
 8001640:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001642:	4613      	mov	r3, r2
 8001644:	009b      	lsls	r3, r3, #2
 8001646:	4413      	add	r3, r2
 8001648:	00db      	lsls	r3, r3, #3
 800164a:	440b      	add	r3, r1
 800164c:	331e      	adds	r3, #30
 800164e:	2200      	movs	r2, #0
 8001650:	801a      	strh	r2, [r3, #0]
 8001652:	4966      	ldr	r1, [pc, #408]	; (80017ec <Create_Nodes+0x388>)
 8001654:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001656:	4613      	mov	r3, r2
 8001658:	009b      	lsls	r3, r3, #2
 800165a:	4413      	add	r3, r2
 800165c:	00db      	lsls	r3, r3, #3
 800165e:	440b      	add	r3, r1
 8001660:	3320      	adds	r3, #32
 8001662:	2200      	movs	r2, #0
 8001664:	801a      	strh	r2, [r3, #0]
 8001666:	4961      	ldr	r1, [pc, #388]	; (80017ec <Create_Nodes+0x388>)
 8001668:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800166a:	4613      	mov	r3, r2
 800166c:	009b      	lsls	r3, r3, #2
 800166e:	4413      	add	r3, r2
 8001670:	00db      	lsls	r3, r3, #3
 8001672:	440b      	add	r3, r1
 8001674:	3322      	adds	r3, #34	; 0x22
 8001676:	2200      	movs	r2, #0
 8001678:	801a      	strh	r2, [r3, #0]
	for(i=0;i<22;i++)
 800167a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800167c:	3301      	adds	r3, #1
 800167e:	66fb      	str	r3, [r7, #108]	; 0x6c
 8001680:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001682:	2b15      	cmp	r3, #21
 8001684:	f77f af24 	ble.w	80014d0 <Create_Nodes+0x6c>
	}
	//A node
	N('A').worth=2;
 8001688:	4b58      	ldr	r3, [pc, #352]	; (80017ec <Create_Nodes+0x388>)
 800168a:	2202      	movs	r2, #2
 800168c:	605a      	str	r2, [r3, #4]
	N('A').type=1;
 800168e:	4b57      	ldr	r3, [pc, #348]	; (80017ec <Create_Nodes+0x388>)
 8001690:	2201      	movs	r2, #1
 8001692:	609a      	str	r2, [r3, #8]
	VALUE_2(N('A').neighbours,'C',0,0,'B',0,'D');
 8001694:	4b55      	ldr	r3, [pc, #340]	; (80017ec <Create_Nodes+0x388>)
 8001696:	2243      	movs	r2, #67	; 0x43
 8001698:	731a      	strb	r2, [r3, #12]
 800169a:	4b54      	ldr	r3, [pc, #336]	; (80017ec <Create_Nodes+0x388>)
 800169c:	2200      	movs	r2, #0
 800169e:	735a      	strb	r2, [r3, #13]
 80016a0:	4b52      	ldr	r3, [pc, #328]	; (80017ec <Create_Nodes+0x388>)
 80016a2:	2200      	movs	r2, #0
 80016a4:	739a      	strb	r2, [r3, #14]
 80016a6:	4b51      	ldr	r3, [pc, #324]	; (80017ec <Create_Nodes+0x388>)
 80016a8:	2242      	movs	r2, #66	; 0x42
 80016aa:	73da      	strb	r2, [r3, #15]
 80016ac:	4b4f      	ldr	r3, [pc, #316]	; (80017ec <Create_Nodes+0x388>)
 80016ae:	2200      	movs	r2, #0
 80016b0:	741a      	strb	r2, [r3, #16]
 80016b2:	4b4e      	ldr	r3, [pc, #312]	; (80017ec <Create_Nodes+0x388>)
 80016b4:	2244      	movs	r2, #68	; 0x44
 80016b6:	745a      	strb	r2, [r3, #17]
	VALUE_2(N('A').directions,1,0,0,2,0,1);
 80016b8:	4b4c      	ldr	r3, [pc, #304]	; (80017ec <Create_Nodes+0x388>)
 80016ba:	2201      	movs	r2, #1
 80016bc:	749a      	strb	r2, [r3, #18]
 80016be:	4b4b      	ldr	r3, [pc, #300]	; (80017ec <Create_Nodes+0x388>)
 80016c0:	2200      	movs	r2, #0
 80016c2:	74da      	strb	r2, [r3, #19]
 80016c4:	4b49      	ldr	r3, [pc, #292]	; (80017ec <Create_Nodes+0x388>)
 80016c6:	2200      	movs	r2, #0
 80016c8:	751a      	strb	r2, [r3, #20]
 80016ca:	4b48      	ldr	r3, [pc, #288]	; (80017ec <Create_Nodes+0x388>)
 80016cc:	2202      	movs	r2, #2
 80016ce:	755a      	strb	r2, [r3, #21]
 80016d0:	4b46      	ldr	r3, [pc, #280]	; (80017ec <Create_Nodes+0x388>)
 80016d2:	2200      	movs	r2, #0
 80016d4:	759a      	strb	r2, [r3, #22]
 80016d6:	4b45      	ldr	r3, [pc, #276]	; (80017ec <Create_Nodes+0x388>)
 80016d8:	2201      	movs	r2, #1
 80016da:	75da      	strb	r2, [r3, #23]
	VALUE_2(N('A').distance,199,0,0,241,0,198);
 80016dc:	4b43      	ldr	r3, [pc, #268]	; (80017ec <Create_Nodes+0x388>)
 80016de:	22c7      	movs	r2, #199	; 0xc7
 80016e0:	831a      	strh	r2, [r3, #24]
 80016e2:	4b42      	ldr	r3, [pc, #264]	; (80017ec <Create_Nodes+0x388>)
 80016e4:	2200      	movs	r2, #0
 80016e6:	835a      	strh	r2, [r3, #26]
 80016e8:	4b40      	ldr	r3, [pc, #256]	; (80017ec <Create_Nodes+0x388>)
 80016ea:	2200      	movs	r2, #0
 80016ec:	839a      	strh	r2, [r3, #28]
 80016ee:	4b3f      	ldr	r3, [pc, #252]	; (80017ec <Create_Nodes+0x388>)
 80016f0:	22f1      	movs	r2, #241	; 0xf1
 80016f2:	83da      	strh	r2, [r3, #30]
 80016f4:	4b3d      	ldr	r3, [pc, #244]	; (80017ec <Create_Nodes+0x388>)
 80016f6:	2200      	movs	r2, #0
 80016f8:	841a      	strh	r2, [r3, #32]
 80016fa:	4b3c      	ldr	r3, [pc, #240]	; (80017ec <Create_Nodes+0x388>)
 80016fc:	22c6      	movs	r2, #198	; 0xc6
 80016fe:	845a      	strh	r2, [r3, #34]	; 0x22
	N('A').middle=NEIGHBOUR6;
 8001700:	4b3a      	ldr	r3, [pc, #232]	; (80017ec <Create_Nodes+0x388>)
 8001702:	2205      	movs	r2, #5
 8001704:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24

	//B node
	N('B').worth=2;
 8001708:	4b38      	ldr	r3, [pc, #224]	; (80017ec <Create_Nodes+0x388>)
 800170a:	2202      	movs	r2, #2
 800170c:	62da      	str	r2, [r3, #44]	; 0x2c
	N('B').type=1;
 800170e:	4b37      	ldr	r3, [pc, #220]	; (80017ec <Create_Nodes+0x388>)
 8001710:	2201      	movs	r2, #1
 8001712:	631a      	str	r2, [r3, #48]	; 0x30
	VALUE_2(N('B').neighbours,'D',0,'A',0,0,'E');
 8001714:	4b35      	ldr	r3, [pc, #212]	; (80017ec <Create_Nodes+0x388>)
 8001716:	2244      	movs	r2, #68	; 0x44
 8001718:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800171c:	4b33      	ldr	r3, [pc, #204]	; (80017ec <Create_Nodes+0x388>)
 800171e:	2200      	movs	r2, #0
 8001720:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001724:	4b31      	ldr	r3, [pc, #196]	; (80017ec <Create_Nodes+0x388>)
 8001726:	2241      	movs	r2, #65	; 0x41
 8001728:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 800172c:	4b2f      	ldr	r3, [pc, #188]	; (80017ec <Create_Nodes+0x388>)
 800172e:	2200      	movs	r2, #0
 8001730:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 8001734:	4b2d      	ldr	r3, [pc, #180]	; (80017ec <Create_Nodes+0x388>)
 8001736:	2200      	movs	r2, #0
 8001738:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800173c:	4b2b      	ldr	r3, [pc, #172]	; (80017ec <Create_Nodes+0x388>)
 800173e:	2245      	movs	r2, #69	; 0x45
 8001740:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
	VALUE_2(N('B').directions,1,0,1,0,0,1);
 8001744:	4b29      	ldr	r3, [pc, #164]	; (80017ec <Create_Nodes+0x388>)
 8001746:	2201      	movs	r2, #1
 8001748:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 800174c:	4b27      	ldr	r3, [pc, #156]	; (80017ec <Create_Nodes+0x388>)
 800174e:	2200      	movs	r2, #0
 8001750:	f883 203b 	strb.w	r2, [r3, #59]	; 0x3b
 8001754:	4b25      	ldr	r3, [pc, #148]	; (80017ec <Create_Nodes+0x388>)
 8001756:	2201      	movs	r2, #1
 8001758:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800175c:	4b23      	ldr	r3, [pc, #140]	; (80017ec <Create_Nodes+0x388>)
 800175e:	2200      	movs	r2, #0
 8001760:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001764:	4b21      	ldr	r3, [pc, #132]	; (80017ec <Create_Nodes+0x388>)
 8001766:	2200      	movs	r2, #0
 8001768:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800176c:	4b1f      	ldr	r3, [pc, #124]	; (80017ec <Create_Nodes+0x388>)
 800176e:	2201      	movs	r2, #1
 8001770:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
	VALUE_2(N('B').distance,199,0,241,0,0,198);
 8001774:	4b1d      	ldr	r3, [pc, #116]	; (80017ec <Create_Nodes+0x388>)
 8001776:	22c7      	movs	r2, #199	; 0xc7
 8001778:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 800177c:	4b1b      	ldr	r3, [pc, #108]	; (80017ec <Create_Nodes+0x388>)
 800177e:	2200      	movs	r2, #0
 8001780:	f8a3 2042 	strh.w	r2, [r3, #66]	; 0x42
 8001784:	4b19      	ldr	r3, [pc, #100]	; (80017ec <Create_Nodes+0x388>)
 8001786:	22f1      	movs	r2, #241	; 0xf1
 8001788:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 800178c:	4b17      	ldr	r3, [pc, #92]	; (80017ec <Create_Nodes+0x388>)
 800178e:	2200      	movs	r2, #0
 8001790:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8001794:	4b15      	ldr	r3, [pc, #84]	; (80017ec <Create_Nodes+0x388>)
 8001796:	2200      	movs	r2, #0
 8001798:	f8a3 2048 	strh.w	r2, [r3, #72]	; 0x48
 800179c:	4b13      	ldr	r3, [pc, #76]	; (80017ec <Create_Nodes+0x388>)
 800179e:	22c6      	movs	r2, #198	; 0xc6
 80017a0:	f8a3 204a 	strh.w	r2, [r3, #74]	; 0x4a
	N('B').middle=NEIGHBOUR1;
 80017a4:	4b11      	ldr	r3, [pc, #68]	; (80017ec <Create_Nodes+0x388>)
 80017a6:	2200      	movs	r2, #0
 80017a8:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c

	//C node
	N('C').worth=2;
 80017ac:	4b0f      	ldr	r3, [pc, #60]	; (80017ec <Create_Nodes+0x388>)
 80017ae:	2202      	movs	r2, #2
 80017b0:	655a      	str	r2, [r3, #84]	; 0x54
	N('C').type=2;
 80017b2:	4b0e      	ldr	r3, [pc, #56]	; (80017ec <Create_Nodes+0x388>)
 80017b4:	2202      	movs	r2, #2
 80017b6:	659a      	str	r2, [r3, #88]	; 0x58
	VALUE_2(N('C').neighbours,'F',0,0,0,0,'A');
 80017b8:	4b0c      	ldr	r3, [pc, #48]	; (80017ec <Create_Nodes+0x388>)
 80017ba:	2246      	movs	r2, #70	; 0x46
 80017bc:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 80017c0:	4b0a      	ldr	r3, [pc, #40]	; (80017ec <Create_Nodes+0x388>)
 80017c2:	2200      	movs	r2, #0
 80017c4:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 80017c8:	4b08      	ldr	r3, [pc, #32]	; (80017ec <Create_Nodes+0x388>)
 80017ca:	2200      	movs	r2, #0
 80017cc:	f883 205e 	strb.w	r2, [r3, #94]	; 0x5e
 80017d0:	4b06      	ldr	r3, [pc, #24]	; (80017ec <Create_Nodes+0x388>)
 80017d2:	2200      	movs	r2, #0
 80017d4:	f883 205f 	strb.w	r2, [r3, #95]	; 0x5f
 80017d8:	4b04      	ldr	r3, [pc, #16]	; (80017ec <Create_Nodes+0x388>)
 80017da:	2200      	movs	r2, #0
 80017dc:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
 80017e0:	4b02      	ldr	r3, [pc, #8]	; (80017ec <Create_Nodes+0x388>)
 80017e2:	2241      	movs	r2, #65	; 0x41
 80017e4:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
 80017e8:	e002      	b.n	80017f0 <Create_Nodes+0x38c>
 80017ea:	bf00      	nop
 80017ec:	20000360 	.word	0x20000360
	VALUE_2(N('C').directions,2,0,0,0,0,2);
 80017f0:	4bc9      	ldr	r3, [pc, #804]	; (8001b18 <Create_Nodes+0x6b4>)
 80017f2:	2202      	movs	r2, #2
 80017f4:	f883 2062 	strb.w	r2, [r3, #98]	; 0x62
 80017f8:	4bc7      	ldr	r3, [pc, #796]	; (8001b18 <Create_Nodes+0x6b4>)
 80017fa:	2200      	movs	r2, #0
 80017fc:	f883 2063 	strb.w	r2, [r3, #99]	; 0x63
 8001800:	4bc5      	ldr	r3, [pc, #788]	; (8001b18 <Create_Nodes+0x6b4>)
 8001802:	2200      	movs	r2, #0
 8001804:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
 8001808:	4bc3      	ldr	r3, [pc, #780]	; (8001b18 <Create_Nodes+0x6b4>)
 800180a:	2200      	movs	r2, #0
 800180c:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
 8001810:	4bc1      	ldr	r3, [pc, #772]	; (8001b18 <Create_Nodes+0x6b4>)
 8001812:	2200      	movs	r2, #0
 8001814:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
 8001818:	4bbf      	ldr	r3, [pc, #764]	; (8001b18 <Create_Nodes+0x6b4>)
 800181a:	2202      	movs	r2, #2
 800181c:	f883 2067 	strb.w	r2, [r3, #103]	; 0x67
	VALUE_2(N('C').distance,198,0,0,0,0,199);
 8001820:	4bbd      	ldr	r3, [pc, #756]	; (8001b18 <Create_Nodes+0x6b4>)
 8001822:	22c6      	movs	r2, #198	; 0xc6
 8001824:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 8001828:	4bbb      	ldr	r3, [pc, #748]	; (8001b18 <Create_Nodes+0x6b4>)
 800182a:	2200      	movs	r2, #0
 800182c:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 8001830:	4bb9      	ldr	r3, [pc, #740]	; (8001b18 <Create_Nodes+0x6b4>)
 8001832:	2200      	movs	r2, #0
 8001834:	f8a3 206c 	strh.w	r2, [r3, #108]	; 0x6c
 8001838:	4bb7      	ldr	r3, [pc, #732]	; (8001b18 <Create_Nodes+0x6b4>)
 800183a:	2200      	movs	r2, #0
 800183c:	f8a3 206e 	strh.w	r2, [r3, #110]	; 0x6e
 8001840:	4bb5      	ldr	r3, [pc, #724]	; (8001b18 <Create_Nodes+0x6b4>)
 8001842:	2200      	movs	r2, #0
 8001844:	f8a3 2070 	strh.w	r2, [r3, #112]	; 0x70
 8001848:	4bb3      	ldr	r3, [pc, #716]	; (8001b18 <Create_Nodes+0x6b4>)
 800184a:	22c7      	movs	r2, #199	; 0xc7
 800184c:	f8a3 2072 	strh.w	r2, [r3, #114]	; 0x72
	N('C').middle=NEIGHBOUR1;
 8001850:	4bb1      	ldr	r3, [pc, #708]	; (8001b18 <Create_Nodes+0x6b4>)
 8001852:	2200      	movs	r2, #0
 8001854:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

	//D node
	N('D').worth=2;
 8001858:	4baf      	ldr	r3, [pc, #700]	; (8001b18 <Create_Nodes+0x6b4>)
 800185a:	2202      	movs	r2, #2
 800185c:	67da      	str	r2, [r3, #124]	; 0x7c
	N('D').type=2;
 800185e:	4bae      	ldr	r3, [pc, #696]	; (8001b18 <Create_Nodes+0x6b4>)
 8001860:	2202      	movs	r2, #2
 8001862:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	VALUE_2(N('D').neighbours,'G','I','F','A',0,'B');
 8001866:	4bac      	ldr	r3, [pc, #688]	; (8001b18 <Create_Nodes+0x6b4>)
 8001868:	2247      	movs	r2, #71	; 0x47
 800186a:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 800186e:	4baa      	ldr	r3, [pc, #680]	; (8001b18 <Create_Nodes+0x6b4>)
 8001870:	2249      	movs	r2, #73	; 0x49
 8001872:	f883 2085 	strb.w	r2, [r3, #133]	; 0x85
 8001876:	4ba8      	ldr	r3, [pc, #672]	; (8001b18 <Create_Nodes+0x6b4>)
 8001878:	2246      	movs	r2, #70	; 0x46
 800187a:	f883 2086 	strb.w	r2, [r3, #134]	; 0x86
 800187e:	4ba6      	ldr	r3, [pc, #664]	; (8001b18 <Create_Nodes+0x6b4>)
 8001880:	2241      	movs	r2, #65	; 0x41
 8001882:	f883 2087 	strb.w	r2, [r3, #135]	; 0x87
 8001886:	4ba4      	ldr	r3, [pc, #656]	; (8001b18 <Create_Nodes+0x6b4>)
 8001888:	2200      	movs	r2, #0
 800188a:	f883 2088 	strb.w	r2, [r3, #136]	; 0x88
 800188e:	4ba2      	ldr	r3, [pc, #648]	; (8001b18 <Create_Nodes+0x6b4>)
 8001890:	2242      	movs	r2, #66	; 0x42
 8001892:	f883 2089 	strb.w	r2, [r3, #137]	; 0x89
	VALUE_2(N('D').directions,2,1,1,1,0,2);
 8001896:	4ba0      	ldr	r3, [pc, #640]	; (8001b18 <Create_Nodes+0x6b4>)
 8001898:	2202      	movs	r2, #2
 800189a:	f883 208a 	strb.w	r2, [r3, #138]	; 0x8a
 800189e:	4b9e      	ldr	r3, [pc, #632]	; (8001b18 <Create_Nodes+0x6b4>)
 80018a0:	2201      	movs	r2, #1
 80018a2:	f883 208b 	strb.w	r2, [r3, #139]	; 0x8b
 80018a6:	4b9c      	ldr	r3, [pc, #624]	; (8001b18 <Create_Nodes+0x6b4>)
 80018a8:	2201      	movs	r2, #1
 80018aa:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
 80018ae:	4b9a      	ldr	r3, [pc, #616]	; (8001b18 <Create_Nodes+0x6b4>)
 80018b0:	2201      	movs	r2, #1
 80018b2:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 80018b6:	4b98      	ldr	r3, [pc, #608]	; (8001b18 <Create_Nodes+0x6b4>)
 80018b8:	2200      	movs	r2, #0
 80018ba:	f883 208e 	strb.w	r2, [r3, #142]	; 0x8e
 80018be:	4b96      	ldr	r3, [pc, #600]	; (8001b18 <Create_Nodes+0x6b4>)
 80018c0:	2202      	movs	r2, #2
 80018c2:	f883 208f 	strb.w	r2, [r3, #143]	; 0x8f
	VALUE_2(N('D').distance,198,241,197,198,0,199);
 80018c6:	4b94      	ldr	r3, [pc, #592]	; (8001b18 <Create_Nodes+0x6b4>)
 80018c8:	22c6      	movs	r2, #198	; 0xc6
 80018ca:	f8a3 2090 	strh.w	r2, [r3, #144]	; 0x90
 80018ce:	4b92      	ldr	r3, [pc, #584]	; (8001b18 <Create_Nodes+0x6b4>)
 80018d0:	22f1      	movs	r2, #241	; 0xf1
 80018d2:	f8a3 2092 	strh.w	r2, [r3, #146]	; 0x92
 80018d6:	4b90      	ldr	r3, [pc, #576]	; (8001b18 <Create_Nodes+0x6b4>)
 80018d8:	22c5      	movs	r2, #197	; 0xc5
 80018da:	f8a3 2094 	strh.w	r2, [r3, #148]	; 0x94
 80018de:	4b8e      	ldr	r3, [pc, #568]	; (8001b18 <Create_Nodes+0x6b4>)
 80018e0:	22c6      	movs	r2, #198	; 0xc6
 80018e2:	f8a3 2096 	strh.w	r2, [r3, #150]	; 0x96
 80018e6:	4b8c      	ldr	r3, [pc, #560]	; (8001b18 <Create_Nodes+0x6b4>)
 80018e8:	2200      	movs	r2, #0
 80018ea:	f8a3 2098 	strh.w	r2, [r3, #152]	; 0x98
 80018ee:	4b8a      	ldr	r3, [pc, #552]	; (8001b18 <Create_Nodes+0x6b4>)
 80018f0:	22c7      	movs	r2, #199	; 0xc7
 80018f2:	f8a3 209a 	strh.w	r2, [r3, #154]	; 0x9a
	N('D').middle=NEIGHBOUR2;
 80018f6:	4b88      	ldr	r3, [pc, #544]	; (8001b18 <Create_Nodes+0x6b4>)
 80018f8:	2201      	movs	r2, #1
 80018fa:	f883 209c 	strb.w	r2, [r3, #156]	; 0x9c

	//E node
	N('E').worth=2;
 80018fe:	4b86      	ldr	r3, [pc, #536]	; (8001b18 <Create_Nodes+0x6b4>)
 8001900:	2202      	movs	r2, #2
 8001902:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
	N('E').type=2;
 8001906:	4b84      	ldr	r3, [pc, #528]	; (8001b18 <Create_Nodes+0x6b4>)
 8001908:	2202      	movs	r2, #2
 800190a:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
	VALUE_2(N('E').neighbours,'J',0,'G','B',0,0);
 800190e:	4b82      	ldr	r3, [pc, #520]	; (8001b18 <Create_Nodes+0x6b4>)
 8001910:	224a      	movs	r2, #74	; 0x4a
 8001912:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 8001916:	4b80      	ldr	r3, [pc, #512]	; (8001b18 <Create_Nodes+0x6b4>)
 8001918:	2200      	movs	r2, #0
 800191a:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 800191e:	4b7e      	ldr	r3, [pc, #504]	; (8001b18 <Create_Nodes+0x6b4>)
 8001920:	2247      	movs	r2, #71	; 0x47
 8001922:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8001926:	4b7c      	ldr	r3, [pc, #496]	; (8001b18 <Create_Nodes+0x6b4>)
 8001928:	2242      	movs	r2, #66	; 0x42
 800192a:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 800192e:	4b7a      	ldr	r3, [pc, #488]	; (8001b18 <Create_Nodes+0x6b4>)
 8001930:	2200      	movs	r2, #0
 8001932:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 8001936:	4b78      	ldr	r3, [pc, #480]	; (8001b18 <Create_Nodes+0x6b4>)
 8001938:	2200      	movs	r2, #0
 800193a:	f883 20b1 	strb.w	r2, [r3, #177]	; 0xb1
	VALUE_2(N('E').directions,1,0,1,1,0,0);
 800193e:	4b76      	ldr	r3, [pc, #472]	; (8001b18 <Create_Nodes+0x6b4>)
 8001940:	2201      	movs	r2, #1
 8001942:	f883 20b2 	strb.w	r2, [r3, #178]	; 0xb2
 8001946:	4b74      	ldr	r3, [pc, #464]	; (8001b18 <Create_Nodes+0x6b4>)
 8001948:	2200      	movs	r2, #0
 800194a:	f883 20b3 	strb.w	r2, [r3, #179]	; 0xb3
 800194e:	4b72      	ldr	r3, [pc, #456]	; (8001b18 <Create_Nodes+0x6b4>)
 8001950:	2201      	movs	r2, #1
 8001952:	f883 20b4 	strb.w	r2, [r3, #180]	; 0xb4
 8001956:	4b70      	ldr	r3, [pc, #448]	; (8001b18 <Create_Nodes+0x6b4>)
 8001958:	2201      	movs	r2, #1
 800195a:	f883 20b5 	strb.w	r2, [r3, #181]	; 0xb5
 800195e:	4b6e      	ldr	r3, [pc, #440]	; (8001b18 <Create_Nodes+0x6b4>)
 8001960:	2200      	movs	r2, #0
 8001962:	f883 20b6 	strb.w	r2, [r3, #182]	; 0xb6
 8001966:	4b6c      	ldr	r3, [pc, #432]	; (8001b18 <Create_Nodes+0x6b4>)
 8001968:	2200      	movs	r2, #0
 800196a:	f883 20b7 	strb.w	r2, [r3, #183]	; 0xb7
	VALUE_2(N('E').distance,241,0,197,198,0,0);
 800196e:	4b6a      	ldr	r3, [pc, #424]	; (8001b18 <Create_Nodes+0x6b4>)
 8001970:	22f1      	movs	r2, #241	; 0xf1
 8001972:	f8a3 20b8 	strh.w	r2, [r3, #184]	; 0xb8
 8001976:	4b68      	ldr	r3, [pc, #416]	; (8001b18 <Create_Nodes+0x6b4>)
 8001978:	2200      	movs	r2, #0
 800197a:	f8a3 20ba 	strh.w	r2, [r3, #186]	; 0xba
 800197e:	4b66      	ldr	r3, [pc, #408]	; (8001b18 <Create_Nodes+0x6b4>)
 8001980:	22c5      	movs	r2, #197	; 0xc5
 8001982:	f8a3 20bc 	strh.w	r2, [r3, #188]	; 0xbc
 8001986:	4b64      	ldr	r3, [pc, #400]	; (8001b18 <Create_Nodes+0x6b4>)
 8001988:	22c6      	movs	r2, #198	; 0xc6
 800198a:	f8a3 20be 	strh.w	r2, [r3, #190]	; 0xbe
 800198e:	4b62      	ldr	r3, [pc, #392]	; (8001b18 <Create_Nodes+0x6b4>)
 8001990:	2200      	movs	r2, #0
 8001992:	f8a3 20c0 	strh.w	r2, [r3, #192]	; 0xc0
 8001996:	4b60      	ldr	r3, [pc, #384]	; (8001b18 <Create_Nodes+0x6b4>)
 8001998:	2200      	movs	r2, #0
 800199a:	f8a3 20c2 	strh.w	r2, [r3, #194]	; 0xc2
	N('E').middle=NEIGHBOUR3;
 800199e:	4b5e      	ldr	r3, [pc, #376]	; (8001b18 <Create_Nodes+0x6b4>)
 80019a0:	2202      	movs	r2, #2
 80019a2:	f883 20c4 	strb.w	r2, [r3, #196]	; 0xc4

	//F node
	N('F').worth=2;
 80019a6:	4b5c      	ldr	r3, [pc, #368]	; (8001b18 <Create_Nodes+0x6b4>)
 80019a8:	2202      	movs	r2, #2
 80019aa:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
	N('F').type=1;
 80019ae:	4b5a      	ldr	r3, [pc, #360]	; (8001b18 <Create_Nodes+0x6b4>)
 80019b0:	2201      	movs	r2, #1
 80019b2:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
	VALUE_2(N('F').neighbours,'H',0,'C','D','G','I');
 80019b6:	4b58      	ldr	r3, [pc, #352]	; (8001b18 <Create_Nodes+0x6b4>)
 80019b8:	2248      	movs	r2, #72	; 0x48
 80019ba:	f883 20d4 	strb.w	r2, [r3, #212]	; 0xd4
 80019be:	4b56      	ldr	r3, [pc, #344]	; (8001b18 <Create_Nodes+0x6b4>)
 80019c0:	2200      	movs	r2, #0
 80019c2:	f883 20d5 	strb.w	r2, [r3, #213]	; 0xd5
 80019c6:	4b54      	ldr	r3, [pc, #336]	; (8001b18 <Create_Nodes+0x6b4>)
 80019c8:	2243      	movs	r2, #67	; 0x43
 80019ca:	f883 20d6 	strb.w	r2, [r3, #214]	; 0xd6
 80019ce:	4b52      	ldr	r3, [pc, #328]	; (8001b18 <Create_Nodes+0x6b4>)
 80019d0:	2244      	movs	r2, #68	; 0x44
 80019d2:	f883 20d7 	strb.w	r2, [r3, #215]	; 0xd7
 80019d6:	4b50      	ldr	r3, [pc, #320]	; (8001b18 <Create_Nodes+0x6b4>)
 80019d8:	2247      	movs	r2, #71	; 0x47
 80019da:	f883 20d8 	strb.w	r2, [r3, #216]	; 0xd8
 80019de:	4b4e      	ldr	r3, [pc, #312]	; (8001b18 <Create_Nodes+0x6b4>)
 80019e0:	2249      	movs	r2, #73	; 0x49
 80019e2:	f883 20d9 	strb.w	r2, [r3, #217]	; 0xd9
	VALUE_2(N('F').directions,1,0,2,2,2,1);
 80019e6:	4b4c      	ldr	r3, [pc, #304]	; (8001b18 <Create_Nodes+0x6b4>)
 80019e8:	2201      	movs	r2, #1
 80019ea:	f883 20da 	strb.w	r2, [r3, #218]	; 0xda
 80019ee:	4b4a      	ldr	r3, [pc, #296]	; (8001b18 <Create_Nodes+0x6b4>)
 80019f0:	2200      	movs	r2, #0
 80019f2:	f883 20db 	strb.w	r2, [r3, #219]	; 0xdb
 80019f6:	4b48      	ldr	r3, [pc, #288]	; (8001b18 <Create_Nodes+0x6b4>)
 80019f8:	2202      	movs	r2, #2
 80019fa:	f883 20dc 	strb.w	r2, [r3, #220]	; 0xdc
 80019fe:	4b46      	ldr	r3, [pc, #280]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a00:	2202      	movs	r2, #2
 8001a02:	f883 20dd 	strb.w	r2, [r3, #221]	; 0xdd
 8001a06:	4b44      	ldr	r3, [pc, #272]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a08:	2202      	movs	r2, #2
 8001a0a:	f883 20de 	strb.w	r2, [r3, #222]	; 0xde
 8001a0e:	4b42      	ldr	r3, [pc, #264]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a10:	2201      	movs	r2, #1
 8001a12:	f883 20df 	strb.w	r2, [r3, #223]	; 0xdf
	VALUE_2(N('F').distance,200,0,198,197,241,198);
 8001a16:	4b40      	ldr	r3, [pc, #256]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a18:	22c8      	movs	r2, #200	; 0xc8
 8001a1a:	f8a3 20e0 	strh.w	r2, [r3, #224]	; 0xe0
 8001a1e:	4b3e      	ldr	r3, [pc, #248]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a20:	2200      	movs	r2, #0
 8001a22:	f8a3 20e2 	strh.w	r2, [r3, #226]	; 0xe2
 8001a26:	4b3c      	ldr	r3, [pc, #240]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a28:	22c6      	movs	r2, #198	; 0xc6
 8001a2a:	f8a3 20e4 	strh.w	r2, [r3, #228]	; 0xe4
 8001a2e:	4b3a      	ldr	r3, [pc, #232]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a30:	22c5      	movs	r2, #197	; 0xc5
 8001a32:	f8a3 20e6 	strh.w	r2, [r3, #230]	; 0xe6
 8001a36:	4b38      	ldr	r3, [pc, #224]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a38:	22f1      	movs	r2, #241	; 0xf1
 8001a3a:	f8a3 20e8 	strh.w	r2, [r3, #232]	; 0xe8
 8001a3e:	4b36      	ldr	r3, [pc, #216]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a40:	22c6      	movs	r2, #198	; 0xc6
 8001a42:	f8a3 20ea 	strh.w	r2, [r3, #234]	; 0xea
	N('F').middle=NEIGHBOUR6;
 8001a46:	4b34      	ldr	r3, [pc, #208]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a48:	2205      	movs	r2, #5
 8001a4a:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec

	//G node
	N('G').worth=2;
 8001a4e:	4b32      	ldr	r3, [pc, #200]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a50:	2202      	movs	r2, #2
 8001a52:	f8c3 20f4 	str.w	r2, [r3, #244]	; 0xf4
	N('G').type=1;
 8001a56:	4b30      	ldr	r3, [pc, #192]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a58:	2201      	movs	r2, #1
 8001a5a:	f8c3 20f8 	str.w	r2, [r3, #248]	; 0xf8
	VALUE_2(N('G').neighbours,'I','F','D','E',0,'J');
 8001a5e:	4b2e      	ldr	r3, [pc, #184]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a60:	2249      	movs	r2, #73	; 0x49
 8001a62:	f883 20fc 	strb.w	r2, [r3, #252]	; 0xfc
 8001a66:	4b2c      	ldr	r3, [pc, #176]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a68:	2246      	movs	r2, #70	; 0x46
 8001a6a:	f883 20fd 	strb.w	r2, [r3, #253]	; 0xfd
 8001a6e:	4b2a      	ldr	r3, [pc, #168]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a70:	2244      	movs	r2, #68	; 0x44
 8001a72:	f883 20fe 	strb.w	r2, [r3, #254]	; 0xfe
 8001a76:	4b28      	ldr	r3, [pc, #160]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a78:	2245      	movs	r2, #69	; 0x45
 8001a7a:	f883 20ff 	strb.w	r2, [r3, #255]	; 0xff
 8001a7e:	4b26      	ldr	r3, [pc, #152]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a80:	2200      	movs	r2, #0
 8001a82:	f883 2100 	strb.w	r2, [r3, #256]	; 0x100
 8001a86:	4b24      	ldr	r3, [pc, #144]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a88:	224a      	movs	r2, #74	; 0x4a
 8001a8a:	f883 2101 	strb.w	r2, [r3, #257]	; 0x101
	VALUE_2(N('G').directions,1,1,2,2,0,1);
 8001a8e:	4b22      	ldr	r3, [pc, #136]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a90:	2201      	movs	r2, #1
 8001a92:	f883 2102 	strb.w	r2, [r3, #258]	; 0x102
 8001a96:	4b20      	ldr	r3, [pc, #128]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a98:	2201      	movs	r2, #1
 8001a9a:	f883 2103 	strb.w	r2, [r3, #259]	; 0x103
 8001a9e:	4b1e      	ldr	r3, [pc, #120]	; (8001b18 <Create_Nodes+0x6b4>)
 8001aa0:	2202      	movs	r2, #2
 8001aa2:	f883 2104 	strb.w	r2, [r3, #260]	; 0x104
 8001aa6:	4b1c      	ldr	r3, [pc, #112]	; (8001b18 <Create_Nodes+0x6b4>)
 8001aa8:	2202      	movs	r2, #2
 8001aaa:	f883 2105 	strb.w	r2, [r3, #261]	; 0x105
 8001aae:	4b1a      	ldr	r3, [pc, #104]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ab0:	2200      	movs	r2, #0
 8001ab2:	f883 2106 	strb.w	r2, [r3, #262]	; 0x106
 8001ab6:	4b18      	ldr	r3, [pc, #96]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ab8:	2201      	movs	r2, #1
 8001aba:	f883 2107 	strb.w	r2, [r3, #263]	; 0x107
	VALUE_2(N('G').distance,199,241,197,197,0,198);
 8001abe:	4b16      	ldr	r3, [pc, #88]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ac0:	22c7      	movs	r2, #199	; 0xc7
 8001ac2:	f8a3 2108 	strh.w	r2, [r3, #264]	; 0x108
 8001ac6:	4b14      	ldr	r3, [pc, #80]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ac8:	22f1      	movs	r2, #241	; 0xf1
 8001aca:	f8a3 210a 	strh.w	r2, [r3, #266]	; 0x10a
 8001ace:	4b12      	ldr	r3, [pc, #72]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ad0:	22c5      	movs	r2, #197	; 0xc5
 8001ad2:	f8a3 210c 	strh.w	r2, [r3, #268]	; 0x10c
 8001ad6:	4b10      	ldr	r3, [pc, #64]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ad8:	22c5      	movs	r2, #197	; 0xc5
 8001ada:	f8a3 210e 	strh.w	r2, [r3, #270]	; 0x10e
 8001ade:	4b0e      	ldr	r3, [pc, #56]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ae0:	2200      	movs	r2, #0
 8001ae2:	f8a3 2110 	strh.w	r2, [r3, #272]	; 0x110
 8001ae6:	4b0c      	ldr	r3, [pc, #48]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ae8:	22c6      	movs	r2, #198	; 0xc6
 8001aea:	f8a3 2112 	strh.w	r2, [r3, #274]	; 0x112
	N('G').middle=NEIGHBOUR1;
 8001aee:	4b0a      	ldr	r3, [pc, #40]	; (8001b18 <Create_Nodes+0x6b4>)
 8001af0:	2200      	movs	r2, #0
 8001af2:	f883 2114 	strb.w	r2, [r3, #276]	; 0x114

	//H node
	N('H').worth=2;
 8001af6:	4b08      	ldr	r3, [pc, #32]	; (8001b18 <Create_Nodes+0x6b4>)
 8001af8:	2202      	movs	r2, #2
 8001afa:	f8c3 211c 	str.w	r2, [r3, #284]	; 0x11c
	N('H').type=2;
 8001afe:	4b06      	ldr	r3, [pc, #24]	; (8001b18 <Create_Nodes+0x6b4>)
 8001b00:	2202      	movs	r2, #2
 8001b02:	f8c3 2120 	str.w	r2, [r3, #288]	; 0x120
	VALUE_2(N('H').neighbours,'K',0,'M',0,0,'F');
 8001b06:	4b04      	ldr	r3, [pc, #16]	; (8001b18 <Create_Nodes+0x6b4>)
 8001b08:	224b      	movs	r2, #75	; 0x4b
 8001b0a:	f883 2124 	strb.w	r2, [r3, #292]	; 0x124
 8001b0e:	4b02      	ldr	r3, [pc, #8]	; (8001b18 <Create_Nodes+0x6b4>)
 8001b10:	2200      	movs	r2, #0
 8001b12:	f883 2125 	strb.w	r2, [r3, #293]	; 0x125
 8001b16:	e001      	b.n	8001b1c <Create_Nodes+0x6b8>
 8001b18:	20000360 	.word	0x20000360
 8001b1c:	4bca      	ldr	r3, [pc, #808]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b1e:	224d      	movs	r2, #77	; 0x4d
 8001b20:	f883 2126 	strb.w	r2, [r3, #294]	; 0x126
 8001b24:	4bc8      	ldr	r3, [pc, #800]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b26:	2200      	movs	r2, #0
 8001b28:	f883 2127 	strb.w	r2, [r3, #295]	; 0x127
 8001b2c:	4bc6      	ldr	r3, [pc, #792]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b2e:	2200      	movs	r2, #0
 8001b30:	f883 2128 	strb.w	r2, [r3, #296]	; 0x128
 8001b34:	4bc4      	ldr	r3, [pc, #784]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b36:	2246      	movs	r2, #70	; 0x46
 8001b38:	f883 2129 	strb.w	r2, [r3, #297]	; 0x129
	VALUE_2(N('H').directions,2,0,1,0,0,2);
 8001b3c:	4bc2      	ldr	r3, [pc, #776]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b3e:	2202      	movs	r2, #2
 8001b40:	f883 212a 	strb.w	r2, [r3, #298]	; 0x12a
 8001b44:	4bc0      	ldr	r3, [pc, #768]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b46:	2200      	movs	r2, #0
 8001b48:	f883 212b 	strb.w	r2, [r3, #299]	; 0x12b
 8001b4c:	4bbe      	ldr	r3, [pc, #760]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b4e:	2201      	movs	r2, #1
 8001b50:	f883 212c 	strb.w	r2, [r3, #300]	; 0x12c
 8001b54:	4bbc      	ldr	r3, [pc, #752]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b56:	2200      	movs	r2, #0
 8001b58:	f883 212d 	strb.w	r2, [r3, #301]	; 0x12d
 8001b5c:	4bba      	ldr	r3, [pc, #744]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b5e:	2200      	movs	r2, #0
 8001b60:	f883 212e 	strb.w	r2, [r3, #302]	; 0x12e
 8001b64:	4bb8      	ldr	r3, [pc, #736]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b66:	2202      	movs	r2, #2
 8001b68:	f883 212f 	strb.w	r2, [r3, #303]	; 0x12f
	VALUE_2(N('H').distance,198,0,241,0,0,200);
 8001b6c:	4bb6      	ldr	r3, [pc, #728]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b6e:	22c6      	movs	r2, #198	; 0xc6
 8001b70:	f8a3 2130 	strh.w	r2, [r3, #304]	; 0x130
 8001b74:	4bb4      	ldr	r3, [pc, #720]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b76:	2200      	movs	r2, #0
 8001b78:	f8a3 2132 	strh.w	r2, [r3, #306]	; 0x132
 8001b7c:	4bb2      	ldr	r3, [pc, #712]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b7e:	22f1      	movs	r2, #241	; 0xf1
 8001b80:	f8a3 2134 	strh.w	r2, [r3, #308]	; 0x134
 8001b84:	4bb0      	ldr	r3, [pc, #704]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b86:	2200      	movs	r2, #0
 8001b88:	f8a3 2136 	strh.w	r2, [r3, #310]	; 0x136
 8001b8c:	4bae      	ldr	r3, [pc, #696]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b8e:	2200      	movs	r2, #0
 8001b90:	f8a3 2138 	strh.w	r2, [r3, #312]	; 0x138
 8001b94:	4bac      	ldr	r3, [pc, #688]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b96:	22c8      	movs	r2, #200	; 0xc8
 8001b98:	f8a3 213a 	strh.w	r2, [r3, #314]	; 0x13a
	N('H').middle=NEIGHBOUR1;
 8001b9c:	4baa      	ldr	r3, [pc, #680]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b9e:	2200      	movs	r2, #0
 8001ba0:	f883 213c 	strb.w	r2, [r3, #316]	; 0x13c

	//I node
	N('I').worth=2;
 8001ba4:	4ba8      	ldr	r3, [pc, #672]	; (8001e48 <Create_Nodes+0x9e4>)
 8001ba6:	2202      	movs	r2, #2
 8001ba8:	f8c3 2144 	str.w	r2, [r3, #324]	; 0x144
	N('I').type=2;
 8001bac:	4ba6      	ldr	r3, [pc, #664]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bae:	2202      	movs	r2, #2
 8001bb0:	f8c3 2148 	str.w	r2, [r3, #328]	; 0x148
	VALUE_2(N('I').neighbours,'L','N','K','F','D','G');
 8001bb4:	4ba4      	ldr	r3, [pc, #656]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bb6:	224c      	movs	r2, #76	; 0x4c
 8001bb8:	f883 214c 	strb.w	r2, [r3, #332]	; 0x14c
 8001bbc:	4ba2      	ldr	r3, [pc, #648]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bbe:	224e      	movs	r2, #78	; 0x4e
 8001bc0:	f883 214d 	strb.w	r2, [r3, #333]	; 0x14d
 8001bc4:	4ba0      	ldr	r3, [pc, #640]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bc6:	224b      	movs	r2, #75	; 0x4b
 8001bc8:	f883 214e 	strb.w	r2, [r3, #334]	; 0x14e
 8001bcc:	4b9e      	ldr	r3, [pc, #632]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bce:	2246      	movs	r2, #70	; 0x46
 8001bd0:	f883 214f 	strb.w	r2, [r3, #335]	; 0x14f
 8001bd4:	4b9c      	ldr	r3, [pc, #624]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bd6:	2244      	movs	r2, #68	; 0x44
 8001bd8:	f883 2150 	strb.w	r2, [r3, #336]	; 0x150
 8001bdc:	4b9a      	ldr	r3, [pc, #616]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bde:	2247      	movs	r2, #71	; 0x47
 8001be0:	f883 2151 	strb.w	r2, [r3, #337]	; 0x151
	VALUE_2(N('I').directions,2,1,1,1,2,2);
 8001be4:	4b98      	ldr	r3, [pc, #608]	; (8001e48 <Create_Nodes+0x9e4>)
 8001be6:	2202      	movs	r2, #2
 8001be8:	f883 2152 	strb.w	r2, [r3, #338]	; 0x152
 8001bec:	4b96      	ldr	r3, [pc, #600]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bee:	2201      	movs	r2, #1
 8001bf0:	f883 2153 	strb.w	r2, [r3, #339]	; 0x153
 8001bf4:	4b94      	ldr	r3, [pc, #592]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bf6:	2201      	movs	r2, #1
 8001bf8:	f883 2154 	strb.w	r2, [r3, #340]	; 0x154
 8001bfc:	4b92      	ldr	r3, [pc, #584]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bfe:	2201      	movs	r2, #1
 8001c00:	f883 2155 	strb.w	r2, [r3, #341]	; 0x155
 8001c04:	4b90      	ldr	r3, [pc, #576]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c06:	2202      	movs	r2, #2
 8001c08:	f883 2156 	strb.w	r2, [r3, #342]	; 0x156
 8001c0c:	4b8e      	ldr	r3, [pc, #568]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c0e:	2202      	movs	r2, #2
 8001c10:	f883 2157 	strb.w	r2, [r3, #343]	; 0x157
	VALUE_2(N('I').distance,198,241,197,198,241,199);
 8001c14:	4b8c      	ldr	r3, [pc, #560]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c16:	22c6      	movs	r2, #198	; 0xc6
 8001c18:	f8a3 2158 	strh.w	r2, [r3, #344]	; 0x158
 8001c1c:	4b8a      	ldr	r3, [pc, #552]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c1e:	22f1      	movs	r2, #241	; 0xf1
 8001c20:	f8a3 215a 	strh.w	r2, [r3, #346]	; 0x15a
 8001c24:	4b88      	ldr	r3, [pc, #544]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c26:	22c5      	movs	r2, #197	; 0xc5
 8001c28:	f8a3 215c 	strh.w	r2, [r3, #348]	; 0x15c
 8001c2c:	4b86      	ldr	r3, [pc, #536]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c2e:	22c6      	movs	r2, #198	; 0xc6
 8001c30:	f8a3 215e 	strh.w	r2, [r3, #350]	; 0x15e
 8001c34:	4b84      	ldr	r3, [pc, #528]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c36:	22f1      	movs	r2, #241	; 0xf1
 8001c38:	f8a3 2160 	strh.w	r2, [r3, #352]	; 0x160
 8001c3c:	4b82      	ldr	r3, [pc, #520]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c3e:	22c7      	movs	r2, #199	; 0xc7
 8001c40:	f8a3 2162 	strh.w	r2, [r3, #354]	; 0x162
	N('I').middle=NEIGHBOUR6;
 8001c44:	4b80      	ldr	r3, [pc, #512]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c46:	2205      	movs	r2, #5
 8001c48:	f883 2164 	strb.w	r2, [r3, #356]	; 0x164

	//J node
	N('J').worth=2;
 8001c4c:	4b7e      	ldr	r3, [pc, #504]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c4e:	2202      	movs	r2, #2
 8001c50:	f8c3 216c 	str.w	r2, [r3, #364]	; 0x16c
	N('J').type=2;
 8001c54:	4b7c      	ldr	r3, [pc, #496]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c56:	2202      	movs	r2, #2
 8001c58:	f8c3 2170 	str.w	r2, [r3, #368]	; 0x170
	VALUE_2(N('J').neighbours,0,0,'L','G',0,'E');
 8001c5c:	4b7a      	ldr	r3, [pc, #488]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c5e:	2200      	movs	r2, #0
 8001c60:	f883 2174 	strb.w	r2, [r3, #372]	; 0x174
 8001c64:	4b78      	ldr	r3, [pc, #480]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c66:	2200      	movs	r2, #0
 8001c68:	f883 2175 	strb.w	r2, [r3, #373]	; 0x175
 8001c6c:	4b76      	ldr	r3, [pc, #472]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c6e:	224c      	movs	r2, #76	; 0x4c
 8001c70:	f883 2176 	strb.w	r2, [r3, #374]	; 0x176
 8001c74:	4b74      	ldr	r3, [pc, #464]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c76:	2247      	movs	r2, #71	; 0x47
 8001c78:	f883 2177 	strb.w	r2, [r3, #375]	; 0x177
 8001c7c:	4b72      	ldr	r3, [pc, #456]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c7e:	2200      	movs	r2, #0
 8001c80:	f883 2178 	strb.w	r2, [r3, #376]	; 0x178
 8001c84:	4b70      	ldr	r3, [pc, #448]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c86:	2245      	movs	r2, #69	; 0x45
 8001c88:	f883 2179 	strb.w	r2, [r3, #377]	; 0x179
	VALUE_2(N('J').directions,0,0,1,1,0,2);
 8001c8c:	4b6e      	ldr	r3, [pc, #440]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c8e:	2200      	movs	r2, #0
 8001c90:	f883 217a 	strb.w	r2, [r3, #378]	; 0x17a
 8001c94:	4b6c      	ldr	r3, [pc, #432]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c96:	2200      	movs	r2, #0
 8001c98:	f883 217b 	strb.w	r2, [r3, #379]	; 0x17b
 8001c9c:	4b6a      	ldr	r3, [pc, #424]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c9e:	2201      	movs	r2, #1
 8001ca0:	f883 217c 	strb.w	r2, [r3, #380]	; 0x17c
 8001ca4:	4b68      	ldr	r3, [pc, #416]	; (8001e48 <Create_Nodes+0x9e4>)
 8001ca6:	2201      	movs	r2, #1
 8001ca8:	f883 217d 	strb.w	r2, [r3, #381]	; 0x17d
 8001cac:	4b66      	ldr	r3, [pc, #408]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cae:	2200      	movs	r2, #0
 8001cb0:	f883 217e 	strb.w	r2, [r3, #382]	; 0x17e
 8001cb4:	4b64      	ldr	r3, [pc, #400]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cb6:	2202      	movs	r2, #2
 8001cb8:	f883 217f 	strb.w	r2, [r3, #383]	; 0x17f
	VALUE_2(N('J').distance,0,0,197,198,0,241);
 8001cbc:	4b62      	ldr	r3, [pc, #392]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cbe:	2200      	movs	r2, #0
 8001cc0:	f8a3 2180 	strh.w	r2, [r3, #384]	; 0x180
 8001cc4:	4b60      	ldr	r3, [pc, #384]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cc6:	2200      	movs	r2, #0
 8001cc8:	f8a3 2182 	strh.w	r2, [r3, #386]	; 0x182
 8001ccc:	4b5e      	ldr	r3, [pc, #376]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cce:	22c5      	movs	r2, #197	; 0xc5
 8001cd0:	f8a3 2184 	strh.w	r2, [r3, #388]	; 0x184
 8001cd4:	4b5c      	ldr	r3, [pc, #368]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cd6:	22c6      	movs	r2, #198	; 0xc6
 8001cd8:	f8a3 2186 	strh.w	r2, [r3, #390]	; 0x186
 8001cdc:	4b5a      	ldr	r3, [pc, #360]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cde:	2200      	movs	r2, #0
 8001ce0:	f8a3 2188 	strh.w	r2, [r3, #392]	; 0x188
 8001ce4:	4b58      	ldr	r3, [pc, #352]	; (8001e48 <Create_Nodes+0x9e4>)
 8001ce6:	22f1      	movs	r2, #241	; 0xf1
 8001ce8:	f8a3 218a 	strh.w	r2, [r3, #394]	; 0x18a
	N('J').middle=NEIGHBOUR4;
 8001cec:	4b56      	ldr	r3, [pc, #344]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cee:	2203      	movs	r2, #3
 8001cf0:	f883 218c 	strb.w	r2, [r3, #396]	; 0x18c

	//K node
	N('K').worth=2;
 8001cf4:	4b54      	ldr	r3, [pc, #336]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cf6:	2202      	movs	r2, #2
 8001cf8:	f8c3 2194 	str.w	r2, [r3, #404]	; 0x194
	N('K').type=1;
 8001cfc:	4b52      	ldr	r3, [pc, #328]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cfe:	2201      	movs	r2, #1
 8001d00:	f8c3 2198 	str.w	r2, [r3, #408]	; 0x198
	VALUE_2(N('K').neighbours,'M',0,'H','I','L','N');
 8001d04:	4b50      	ldr	r3, [pc, #320]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d06:	224d      	movs	r2, #77	; 0x4d
 8001d08:	f883 219c 	strb.w	r2, [r3, #412]	; 0x19c
 8001d0c:	4b4e      	ldr	r3, [pc, #312]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d0e:	2200      	movs	r2, #0
 8001d10:	f883 219d 	strb.w	r2, [r3, #413]	; 0x19d
 8001d14:	4b4c      	ldr	r3, [pc, #304]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d16:	2248      	movs	r2, #72	; 0x48
 8001d18:	f883 219e 	strb.w	r2, [r3, #414]	; 0x19e
 8001d1c:	4b4a      	ldr	r3, [pc, #296]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d1e:	2249      	movs	r2, #73	; 0x49
 8001d20:	f883 219f 	strb.w	r2, [r3, #415]	; 0x19f
 8001d24:	4b48      	ldr	r3, [pc, #288]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d26:	224c      	movs	r2, #76	; 0x4c
 8001d28:	f883 21a0 	strb.w	r2, [r3, #416]	; 0x1a0
 8001d2c:	4b46      	ldr	r3, [pc, #280]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d2e:	224e      	movs	r2, #78	; 0x4e
 8001d30:	f883 21a1 	strb.w	r2, [r3, #417]	; 0x1a1
	VALUE_2(N('K').directions,1,0,2,2,2,1);
 8001d34:	4b44      	ldr	r3, [pc, #272]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d36:	2201      	movs	r2, #1
 8001d38:	f883 21a2 	strb.w	r2, [r3, #418]	; 0x1a2
 8001d3c:	4b42      	ldr	r3, [pc, #264]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d3e:	2200      	movs	r2, #0
 8001d40:	f883 21a3 	strb.w	r2, [r3, #419]	; 0x1a3
 8001d44:	4b40      	ldr	r3, [pc, #256]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d46:	2202      	movs	r2, #2
 8001d48:	f883 21a4 	strb.w	r2, [r3, #420]	; 0x1a4
 8001d4c:	4b3e      	ldr	r3, [pc, #248]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d4e:	2202      	movs	r2, #2
 8001d50:	f883 21a5 	strb.w	r2, [r3, #421]	; 0x1a5
 8001d54:	4b3c      	ldr	r3, [pc, #240]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d56:	2202      	movs	r2, #2
 8001d58:	f883 21a6 	strb.w	r2, [r3, #422]	; 0x1a6
 8001d5c:	4b3a      	ldr	r3, [pc, #232]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d5e:	2201      	movs	r2, #1
 8001d60:	f883 21a7 	strb.w	r2, [r3, #423]	; 0x1a7
	VALUE_2(N('K').distance,200,0,198,197,241,198);
 8001d64:	4b38      	ldr	r3, [pc, #224]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d66:	22c8      	movs	r2, #200	; 0xc8
 8001d68:	f8a3 21a8 	strh.w	r2, [r3, #424]	; 0x1a8
 8001d6c:	4b36      	ldr	r3, [pc, #216]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d6e:	2200      	movs	r2, #0
 8001d70:	f8a3 21aa 	strh.w	r2, [r3, #426]	; 0x1aa
 8001d74:	4b34      	ldr	r3, [pc, #208]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d76:	22c6      	movs	r2, #198	; 0xc6
 8001d78:	f8a3 21ac 	strh.w	r2, [r3, #428]	; 0x1ac
 8001d7c:	4b32      	ldr	r3, [pc, #200]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d7e:	22c5      	movs	r2, #197	; 0xc5
 8001d80:	f8a3 21ae 	strh.w	r2, [r3, #430]	; 0x1ae
 8001d84:	4b30      	ldr	r3, [pc, #192]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d86:	22f1      	movs	r2, #241	; 0xf1
 8001d88:	f8a3 21b0 	strh.w	r2, [r3, #432]	; 0x1b0
 8001d8c:	4b2e      	ldr	r3, [pc, #184]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d8e:	22c6      	movs	r2, #198	; 0xc6
 8001d90:	f8a3 21b2 	strh.w	r2, [r3, #434]	; 0x1b2
	N('K').middle=NEIGHBOUR4;
 8001d94:	4b2c      	ldr	r3, [pc, #176]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d96:	2203      	movs	r2, #3
 8001d98:	f883 21b4 	strb.w	r2, [r3, #436]	; 0x1b4

	//L node
	N('L').worth=2;
 8001d9c:	4b2a      	ldr	r3, [pc, #168]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d9e:	2202      	movs	r2, #2
 8001da0:	f8c3 21bc 	str.w	r2, [r3, #444]	; 0x1bc
	N('L').type=2;
 8001da4:	4b28      	ldr	r3, [pc, #160]	; (8001e48 <Create_Nodes+0x9e4>)
 8001da6:	2202      	movs	r2, #2
 8001da8:	f8c3 21c0 	str.w	r2, [r3, #448]	; 0x1c0
	VALUE_2(N('L').neighbours,'N','K','I','J',0,'O');
 8001dac:	4b26      	ldr	r3, [pc, #152]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dae:	224e      	movs	r2, #78	; 0x4e
 8001db0:	f883 21c4 	strb.w	r2, [r3, #452]	; 0x1c4
 8001db4:	4b24      	ldr	r3, [pc, #144]	; (8001e48 <Create_Nodes+0x9e4>)
 8001db6:	224b      	movs	r2, #75	; 0x4b
 8001db8:	f883 21c5 	strb.w	r2, [r3, #453]	; 0x1c5
 8001dbc:	4b22      	ldr	r3, [pc, #136]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dbe:	2249      	movs	r2, #73	; 0x49
 8001dc0:	f883 21c6 	strb.w	r2, [r3, #454]	; 0x1c6
 8001dc4:	4b20      	ldr	r3, [pc, #128]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dc6:	224a      	movs	r2, #74	; 0x4a
 8001dc8:	f883 21c7 	strb.w	r2, [r3, #455]	; 0x1c7
 8001dcc:	4b1e      	ldr	r3, [pc, #120]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dce:	2200      	movs	r2, #0
 8001dd0:	f883 21c8 	strb.w	r2, [r3, #456]	; 0x1c8
 8001dd4:	4b1c      	ldr	r3, [pc, #112]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dd6:	224f      	movs	r2, #79	; 0x4f
 8001dd8:	f883 21c9 	strb.w	r2, [r3, #457]	; 0x1c9
	VALUE_2(N('L').directions,1,1,2,2,0,1);
 8001ddc:	4b1a      	ldr	r3, [pc, #104]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dde:	2201      	movs	r2, #1
 8001de0:	f883 21ca 	strb.w	r2, [r3, #458]	; 0x1ca
 8001de4:	4b18      	ldr	r3, [pc, #96]	; (8001e48 <Create_Nodes+0x9e4>)
 8001de6:	2201      	movs	r2, #1
 8001de8:	f883 21cb 	strb.w	r2, [r3, #459]	; 0x1cb
 8001dec:	4b16      	ldr	r3, [pc, #88]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dee:	2202      	movs	r2, #2
 8001df0:	f883 21cc 	strb.w	r2, [r3, #460]	; 0x1cc
 8001df4:	4b14      	ldr	r3, [pc, #80]	; (8001e48 <Create_Nodes+0x9e4>)
 8001df6:	2202      	movs	r2, #2
 8001df8:	f883 21cd 	strb.w	r2, [r3, #461]	; 0x1cd
 8001dfc:	4b12      	ldr	r3, [pc, #72]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dfe:	2200      	movs	r2, #0
 8001e00:	f883 21ce 	strb.w	r2, [r3, #462]	; 0x1ce
 8001e04:	4b10      	ldr	r3, [pc, #64]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e06:	2201      	movs	r2, #1
 8001e08:	f883 21cf 	strb.w	r2, [r3, #463]	; 0x1cf
	VALUE_2(N('L').distance,199,241,198,197,0,198);
 8001e0c:	4b0e      	ldr	r3, [pc, #56]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e0e:	22c7      	movs	r2, #199	; 0xc7
 8001e10:	f8a3 21d0 	strh.w	r2, [r3, #464]	; 0x1d0
 8001e14:	4b0c      	ldr	r3, [pc, #48]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e16:	22f1      	movs	r2, #241	; 0xf1
 8001e18:	f8a3 21d2 	strh.w	r2, [r3, #466]	; 0x1d2
 8001e1c:	4b0a      	ldr	r3, [pc, #40]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e1e:	22c6      	movs	r2, #198	; 0xc6
 8001e20:	f8a3 21d4 	strh.w	r2, [r3, #468]	; 0x1d4
 8001e24:	4b08      	ldr	r3, [pc, #32]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e26:	22c5      	movs	r2, #197	; 0xc5
 8001e28:	f8a3 21d6 	strh.w	r2, [r3, #470]	; 0x1d6
 8001e2c:	4b06      	ldr	r3, [pc, #24]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e2e:	2200      	movs	r2, #0
 8001e30:	f8a3 21d8 	strh.w	r2, [r3, #472]	; 0x1d8
 8001e34:	4b04      	ldr	r3, [pc, #16]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e36:	22c6      	movs	r2, #198	; 0xc6
 8001e38:	f8a3 21da 	strh.w	r2, [r3, #474]	; 0x1da
	N('L').middle=NEIGHBOUR3;
 8001e3c:	4b02      	ldr	r3, [pc, #8]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e3e:	2202      	movs	r2, #2
 8001e40:	f883 21dc 	strb.w	r2, [r3, #476]	; 0x1dc
 8001e44:	e002      	b.n	8001e4c <Create_Nodes+0x9e8>
 8001e46:	bf00      	nop
 8001e48:	20000360 	.word	0x20000360

	//M node
	N('M').worth=2;
 8001e4c:	4bcb      	ldr	r3, [pc, #812]	; (800217c <Create_Nodes+0xd18>)
 8001e4e:	2202      	movs	r2, #2
 8001e50:	f8c3 21e4 	str.w	r2, [r3, #484]	; 0x1e4
	N('M').type=2;
 8001e54:	4bc9      	ldr	r3, [pc, #804]	; (800217c <Create_Nodes+0xd18>)
 8001e56:	2202      	movs	r2, #2
 8001e58:	f8c3 21e8 	str.w	r2, [r3, #488]	; 0x1e8
	VALUE_2(N('M').neighbours,'P','U',0,'H',0,'K');
 8001e5c:	4bc7      	ldr	r3, [pc, #796]	; (800217c <Create_Nodes+0xd18>)
 8001e5e:	2250      	movs	r2, #80	; 0x50
 8001e60:	f883 21ec 	strb.w	r2, [r3, #492]	; 0x1ec
 8001e64:	4bc5      	ldr	r3, [pc, #788]	; (800217c <Create_Nodes+0xd18>)
 8001e66:	2255      	movs	r2, #85	; 0x55
 8001e68:	f883 21ed 	strb.w	r2, [r3, #493]	; 0x1ed
 8001e6c:	4bc3      	ldr	r3, [pc, #780]	; (800217c <Create_Nodes+0xd18>)
 8001e6e:	2200      	movs	r2, #0
 8001e70:	f883 21ee 	strb.w	r2, [r3, #494]	; 0x1ee
 8001e74:	4bc1      	ldr	r3, [pc, #772]	; (800217c <Create_Nodes+0xd18>)
 8001e76:	2248      	movs	r2, #72	; 0x48
 8001e78:	f883 21ef 	strb.w	r2, [r3, #495]	; 0x1ef
 8001e7c:	4bbf      	ldr	r3, [pc, #764]	; (800217c <Create_Nodes+0xd18>)
 8001e7e:	2200      	movs	r2, #0
 8001e80:	f883 21f0 	strb.w	r2, [r3, #496]	; 0x1f0
 8001e84:	4bbd      	ldr	r3, [pc, #756]	; (800217c <Create_Nodes+0xd18>)
 8001e86:	224b      	movs	r2, #75	; 0x4b
 8001e88:	f883 21f1 	strb.w	r2, [r3, #497]	; 0x1f1
	VALUE_2(N('M').directions,2,2,0,2,0,2);
 8001e8c:	4bbb      	ldr	r3, [pc, #748]	; (800217c <Create_Nodes+0xd18>)
 8001e8e:	2202      	movs	r2, #2
 8001e90:	f883 21f2 	strb.w	r2, [r3, #498]	; 0x1f2
 8001e94:	4bb9      	ldr	r3, [pc, #740]	; (800217c <Create_Nodes+0xd18>)
 8001e96:	2202      	movs	r2, #2
 8001e98:	f883 21f3 	strb.w	r2, [r3, #499]	; 0x1f3
 8001e9c:	4bb7      	ldr	r3, [pc, #732]	; (800217c <Create_Nodes+0xd18>)
 8001e9e:	2200      	movs	r2, #0
 8001ea0:	f883 21f4 	strb.w	r2, [r3, #500]	; 0x1f4
 8001ea4:	4bb5      	ldr	r3, [pc, #724]	; (800217c <Create_Nodes+0xd18>)
 8001ea6:	2202      	movs	r2, #2
 8001ea8:	f883 21f5 	strb.w	r2, [r3, #501]	; 0x1f5
 8001eac:	4bb3      	ldr	r3, [pc, #716]	; (800217c <Create_Nodes+0xd18>)
 8001eae:	2200      	movs	r2, #0
 8001eb0:	f883 21f6 	strb.w	r2, [r3, #502]	; 0x1f6
 8001eb4:	4bb1      	ldr	r3, [pc, #708]	; (800217c <Create_Nodes+0xd18>)
 8001eb6:	2202      	movs	r2, #2
 8001eb8:	f883 21f7 	strb.w	r2, [r3, #503]	; 0x1f7
	VALUE_2(N('M').distance,198,319-25,0,241,0,200);
 8001ebc:	4baf      	ldr	r3, [pc, #700]	; (800217c <Create_Nodes+0xd18>)
 8001ebe:	22c6      	movs	r2, #198	; 0xc6
 8001ec0:	f8a3 21f8 	strh.w	r2, [r3, #504]	; 0x1f8
 8001ec4:	4bad      	ldr	r3, [pc, #692]	; (800217c <Create_Nodes+0xd18>)
 8001ec6:	f44f 7293 	mov.w	r2, #294	; 0x126
 8001eca:	f8a3 21fa 	strh.w	r2, [r3, #506]	; 0x1fa
 8001ece:	4bab      	ldr	r3, [pc, #684]	; (800217c <Create_Nodes+0xd18>)
 8001ed0:	2200      	movs	r2, #0
 8001ed2:	f8a3 21fc 	strh.w	r2, [r3, #508]	; 0x1fc
 8001ed6:	4ba9      	ldr	r3, [pc, #676]	; (800217c <Create_Nodes+0xd18>)
 8001ed8:	22f1      	movs	r2, #241	; 0xf1
 8001eda:	f8a3 21fe 	strh.w	r2, [r3, #510]	; 0x1fe
 8001ede:	4ba7      	ldr	r3, [pc, #668]	; (800217c <Create_Nodes+0xd18>)
 8001ee0:	2200      	movs	r2, #0
 8001ee2:	f8a3 2200 	strh.w	r2, [r3, #512]	; 0x200
 8001ee6:	4ba5      	ldr	r3, [pc, #660]	; (800217c <Create_Nodes+0xd18>)
 8001ee8:	22c8      	movs	r2, #200	; 0xc8
 8001eea:	f8a3 2202 	strh.w	r2, [r3, #514]	; 0x202
	N('M').middle=NEIGHBOUR6;
 8001eee:	4ba3      	ldr	r3, [pc, #652]	; (800217c <Create_Nodes+0xd18>)
 8001ef0:	2205      	movs	r2, #5
 8001ef2:	f883 2204 	strb.w	r2, [r3, #516]	; 0x204

	//N node
	N('N').worth=2;
 8001ef6:	4ba1      	ldr	r3, [pc, #644]	; (800217c <Create_Nodes+0xd18>)
 8001ef8:	2202      	movs	r2, #2
 8001efa:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
	N('N').type=2;
 8001efe:	4b9f      	ldr	r3, [pc, #636]	; (800217c <Create_Nodes+0xd18>)
 8001f00:	2202      	movs	r2, #2
 8001f02:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210
	VALUE_2(N('N').neighbours,'Q','T','P','K','I','L');
 8001f06:	4b9d      	ldr	r3, [pc, #628]	; (800217c <Create_Nodes+0xd18>)
 8001f08:	2251      	movs	r2, #81	; 0x51
 8001f0a:	f883 2214 	strb.w	r2, [r3, #532]	; 0x214
 8001f0e:	4b9b      	ldr	r3, [pc, #620]	; (800217c <Create_Nodes+0xd18>)
 8001f10:	2254      	movs	r2, #84	; 0x54
 8001f12:	f883 2215 	strb.w	r2, [r3, #533]	; 0x215
 8001f16:	4b99      	ldr	r3, [pc, #612]	; (800217c <Create_Nodes+0xd18>)
 8001f18:	2250      	movs	r2, #80	; 0x50
 8001f1a:	f883 2216 	strb.w	r2, [r3, #534]	; 0x216
 8001f1e:	4b97      	ldr	r3, [pc, #604]	; (800217c <Create_Nodes+0xd18>)
 8001f20:	224b      	movs	r2, #75	; 0x4b
 8001f22:	f883 2217 	strb.w	r2, [r3, #535]	; 0x217
 8001f26:	4b95      	ldr	r3, [pc, #596]	; (800217c <Create_Nodes+0xd18>)
 8001f28:	2249      	movs	r2, #73	; 0x49
 8001f2a:	f883 2218 	strb.w	r2, [r3, #536]	; 0x218
 8001f2e:	4b93      	ldr	r3, [pc, #588]	; (800217c <Create_Nodes+0xd18>)
 8001f30:	224c      	movs	r2, #76	; 0x4c
 8001f32:	f883 2219 	strb.w	r2, [r3, #537]	; 0x219
	VALUE_2(N('N').directions,2,1,1,1,2,2);
 8001f36:	4b91      	ldr	r3, [pc, #580]	; (800217c <Create_Nodes+0xd18>)
 8001f38:	2202      	movs	r2, #2
 8001f3a:	f883 221a 	strb.w	r2, [r3, #538]	; 0x21a
 8001f3e:	4b8f      	ldr	r3, [pc, #572]	; (800217c <Create_Nodes+0xd18>)
 8001f40:	2201      	movs	r2, #1
 8001f42:	f883 221b 	strb.w	r2, [r3, #539]	; 0x21b
 8001f46:	4b8d      	ldr	r3, [pc, #564]	; (800217c <Create_Nodes+0xd18>)
 8001f48:	2201      	movs	r2, #1
 8001f4a:	f883 221c 	strb.w	r2, [r3, #540]	; 0x21c
 8001f4e:	4b8b      	ldr	r3, [pc, #556]	; (800217c <Create_Nodes+0xd18>)
 8001f50:	2201      	movs	r2, #1
 8001f52:	f883 221d 	strb.w	r2, [r3, #541]	; 0x21d
 8001f56:	4b89      	ldr	r3, [pc, #548]	; (800217c <Create_Nodes+0xd18>)
 8001f58:	2202      	movs	r2, #2
 8001f5a:	f883 221e 	strb.w	r2, [r3, #542]	; 0x21e
 8001f5e:	4b87      	ldr	r3, [pc, #540]	; (800217c <Create_Nodes+0xd18>)
 8001f60:	2202      	movs	r2, #2
 8001f62:	f883 221f 	strb.w	r2, [r3, #543]	; 0x21f
	VALUE_2(N('N').distance,198,120-25,197,198,241,199);
 8001f66:	4b85      	ldr	r3, [pc, #532]	; (800217c <Create_Nodes+0xd18>)
 8001f68:	22c6      	movs	r2, #198	; 0xc6
 8001f6a:	f8a3 2220 	strh.w	r2, [r3, #544]	; 0x220
 8001f6e:	4b83      	ldr	r3, [pc, #524]	; (800217c <Create_Nodes+0xd18>)
 8001f70:	225f      	movs	r2, #95	; 0x5f
 8001f72:	f8a3 2222 	strh.w	r2, [r3, #546]	; 0x222
 8001f76:	4b81      	ldr	r3, [pc, #516]	; (800217c <Create_Nodes+0xd18>)
 8001f78:	22c5      	movs	r2, #197	; 0xc5
 8001f7a:	f8a3 2224 	strh.w	r2, [r3, #548]	; 0x224
 8001f7e:	4b7f      	ldr	r3, [pc, #508]	; (800217c <Create_Nodes+0xd18>)
 8001f80:	22c6      	movs	r2, #198	; 0xc6
 8001f82:	f8a3 2226 	strh.w	r2, [r3, #550]	; 0x226
 8001f86:	4b7d      	ldr	r3, [pc, #500]	; (800217c <Create_Nodes+0xd18>)
 8001f88:	22f1      	movs	r2, #241	; 0xf1
 8001f8a:	f8a3 2228 	strh.w	r2, [r3, #552]	; 0x228
 8001f8e:	4b7b      	ldr	r3, [pc, #492]	; (800217c <Create_Nodes+0xd18>)
 8001f90:	22c7      	movs	r2, #199	; 0xc7
 8001f92:	f8a3 222a 	strh.w	r2, [r3, #554]	; 0x22a
	N('N').middle=NEIGHBOUR4;
 8001f96:	4b79      	ldr	r3, [pc, #484]	; (800217c <Create_Nodes+0xd18>)
 8001f98:	2203      	movs	r2, #3
 8001f9a:	f883 222c 	strb.w	r2, [r3, #556]	; 0x22c

	//O node
	N('O').worth=2;
 8001f9e:	4b77      	ldr	r3, [pc, #476]	; (800217c <Create_Nodes+0xd18>)
 8001fa0:	2202      	movs	r2, #2
 8001fa2:	f8c3 2234 	str.w	r2, [r3, #564]	; 0x234
	N('O').type=2;
 8001fa6:	4b75      	ldr	r3, [pc, #468]	; (800217c <Create_Nodes+0xd18>)
 8001fa8:	2202      	movs	r2, #2
 8001faa:	f8c3 2238 	str.w	r2, [r3, #568]	; 0x238
	VALUE_2(N('O').neighbours,0,'V','Q','L',0,0);
 8001fae:	4b73      	ldr	r3, [pc, #460]	; (800217c <Create_Nodes+0xd18>)
 8001fb0:	2200      	movs	r2, #0
 8001fb2:	f883 223c 	strb.w	r2, [r3, #572]	; 0x23c
 8001fb6:	4b71      	ldr	r3, [pc, #452]	; (800217c <Create_Nodes+0xd18>)
 8001fb8:	2256      	movs	r2, #86	; 0x56
 8001fba:	f883 223d 	strb.w	r2, [r3, #573]	; 0x23d
 8001fbe:	4b6f      	ldr	r3, [pc, #444]	; (800217c <Create_Nodes+0xd18>)
 8001fc0:	2251      	movs	r2, #81	; 0x51
 8001fc2:	f883 223e 	strb.w	r2, [r3, #574]	; 0x23e
 8001fc6:	4b6d      	ldr	r3, [pc, #436]	; (800217c <Create_Nodes+0xd18>)
 8001fc8:	224c      	movs	r2, #76	; 0x4c
 8001fca:	f883 223f 	strb.w	r2, [r3, #575]	; 0x23f
 8001fce:	4b6b      	ldr	r3, [pc, #428]	; (800217c <Create_Nodes+0xd18>)
 8001fd0:	2200      	movs	r2, #0
 8001fd2:	f883 2240 	strb.w	r2, [r3, #576]	; 0x240
 8001fd6:	4b69      	ldr	r3, [pc, #420]	; (800217c <Create_Nodes+0xd18>)
 8001fd8:	2200      	movs	r2, #0
 8001fda:	f883 2241 	strb.w	r2, [r3, #577]	; 0x241
	VALUE_2(N('O').directions,0,1,1,1,0,0);
 8001fde:	4b67      	ldr	r3, [pc, #412]	; (800217c <Create_Nodes+0xd18>)
 8001fe0:	2200      	movs	r2, #0
 8001fe2:	f883 2242 	strb.w	r2, [r3, #578]	; 0x242
 8001fe6:	4b65      	ldr	r3, [pc, #404]	; (800217c <Create_Nodes+0xd18>)
 8001fe8:	2201      	movs	r2, #1
 8001fea:	f883 2243 	strb.w	r2, [r3, #579]	; 0x243
 8001fee:	4b63      	ldr	r3, [pc, #396]	; (800217c <Create_Nodes+0xd18>)
 8001ff0:	2201      	movs	r2, #1
 8001ff2:	f883 2244 	strb.w	r2, [r3, #580]	; 0x244
 8001ff6:	4b61      	ldr	r3, [pc, #388]	; (800217c <Create_Nodes+0xd18>)
 8001ff8:	2201      	movs	r2, #1
 8001ffa:	f883 2245 	strb.w	r2, [r3, #581]	; 0x245
 8001ffe:	4b5f      	ldr	r3, [pc, #380]	; (800217c <Create_Nodes+0xd18>)
 8002000:	2200      	movs	r2, #0
 8002002:	f883 2246 	strb.w	r2, [r3, #582]	; 0x246
 8002006:	4b5d      	ldr	r3, [pc, #372]	; (800217c <Create_Nodes+0xd18>)
 8002008:	2200      	movs	r2, #0
 800200a:	f883 2247 	strb.w	r2, [r3, #583]	; 0x247
	VALUE_2(N('O').distance,0,318-25,197,198,0,0);
 800200e:	4b5b      	ldr	r3, [pc, #364]	; (800217c <Create_Nodes+0xd18>)
 8002010:	2200      	movs	r2, #0
 8002012:	f8a3 2248 	strh.w	r2, [r3, #584]	; 0x248
 8002016:	4b59      	ldr	r3, [pc, #356]	; (800217c <Create_Nodes+0xd18>)
 8002018:	f240 1225 	movw	r2, #293	; 0x125
 800201c:	f8a3 224a 	strh.w	r2, [r3, #586]	; 0x24a
 8002020:	4b56      	ldr	r3, [pc, #344]	; (800217c <Create_Nodes+0xd18>)
 8002022:	22c5      	movs	r2, #197	; 0xc5
 8002024:	f8a3 224c 	strh.w	r2, [r3, #588]	; 0x24c
 8002028:	4b54      	ldr	r3, [pc, #336]	; (800217c <Create_Nodes+0xd18>)
 800202a:	22c6      	movs	r2, #198	; 0xc6
 800202c:	f8a3 224e 	strh.w	r2, [r3, #590]	; 0x24e
 8002030:	4b52      	ldr	r3, [pc, #328]	; (800217c <Create_Nodes+0xd18>)
 8002032:	2200      	movs	r2, #0
 8002034:	f8a3 2250 	strh.w	r2, [r3, #592]	; 0x250
 8002038:	4b50      	ldr	r3, [pc, #320]	; (800217c <Create_Nodes+0xd18>)
 800203a:	2200      	movs	r2, #0
 800203c:	f8a3 2252 	strh.w	r2, [r3, #594]	; 0x252
	N('O').middle=NEIGHBOUR3;
 8002040:	4b4e      	ldr	r3, [pc, #312]	; (800217c <Create_Nodes+0xd18>)
 8002042:	2202      	movs	r2, #2
 8002044:	f883 2254 	strb.w	r2, [r3, #596]	; 0x254

	//P node
	N('P').worth=2;
 8002048:	4b4c      	ldr	r3, [pc, #304]	; (800217c <Create_Nodes+0xd18>)
 800204a:	2202      	movs	r2, #2
 800204c:	f8c3 225c 	str.w	r2, [r3, #604]	; 0x25c
	N('P').type=1;
 8002050:	4b4a      	ldr	r3, [pc, #296]	; (800217c <Create_Nodes+0xd18>)
 8002052:	2201      	movs	r2, #1
 8002054:	f8c3 2260 	str.w	r2, [r3, #608]	; 0x260
	VALUE_2(N('P').neighbours,0,0,'M','N',0,'Q');
 8002058:	4b48      	ldr	r3, [pc, #288]	; (800217c <Create_Nodes+0xd18>)
 800205a:	2200      	movs	r2, #0
 800205c:	f883 2264 	strb.w	r2, [r3, #612]	; 0x264
 8002060:	4b46      	ldr	r3, [pc, #280]	; (800217c <Create_Nodes+0xd18>)
 8002062:	2200      	movs	r2, #0
 8002064:	f883 2265 	strb.w	r2, [r3, #613]	; 0x265
 8002068:	4b44      	ldr	r3, [pc, #272]	; (800217c <Create_Nodes+0xd18>)
 800206a:	224d      	movs	r2, #77	; 0x4d
 800206c:	f883 2266 	strb.w	r2, [r3, #614]	; 0x266
 8002070:	4b42      	ldr	r3, [pc, #264]	; (800217c <Create_Nodes+0xd18>)
 8002072:	224e      	movs	r2, #78	; 0x4e
 8002074:	f883 2267 	strb.w	r2, [r3, #615]	; 0x267
 8002078:	4b40      	ldr	r3, [pc, #256]	; (800217c <Create_Nodes+0xd18>)
 800207a:	2200      	movs	r2, #0
 800207c:	f883 2268 	strb.w	r2, [r3, #616]	; 0x268
 8002080:	4b3e      	ldr	r3, [pc, #248]	; (800217c <Create_Nodes+0xd18>)
 8002082:	2251      	movs	r2, #81	; 0x51
 8002084:	f883 2269 	strb.w	r2, [r3, #617]	; 0x269
	VALUE_2(N('P').directions,0,0,2,2,0,2);
 8002088:	4b3c      	ldr	r3, [pc, #240]	; (800217c <Create_Nodes+0xd18>)
 800208a:	2200      	movs	r2, #0
 800208c:	f883 226a 	strb.w	r2, [r3, #618]	; 0x26a
 8002090:	4b3a      	ldr	r3, [pc, #232]	; (800217c <Create_Nodes+0xd18>)
 8002092:	2200      	movs	r2, #0
 8002094:	f883 226b 	strb.w	r2, [r3, #619]	; 0x26b
 8002098:	4b38      	ldr	r3, [pc, #224]	; (800217c <Create_Nodes+0xd18>)
 800209a:	2202      	movs	r2, #2
 800209c:	f883 226c 	strb.w	r2, [r3, #620]	; 0x26c
 80020a0:	4b36      	ldr	r3, [pc, #216]	; (800217c <Create_Nodes+0xd18>)
 80020a2:	2202      	movs	r2, #2
 80020a4:	f883 226d 	strb.w	r2, [r3, #621]	; 0x26d
 80020a8:	4b34      	ldr	r3, [pc, #208]	; (800217c <Create_Nodes+0xd18>)
 80020aa:	2200      	movs	r2, #0
 80020ac:	f883 226e 	strb.w	r2, [r3, #622]	; 0x26e
 80020b0:	4b32      	ldr	r3, [pc, #200]	; (800217c <Create_Nodes+0xd18>)
 80020b2:	2202      	movs	r2, #2
 80020b4:	f883 226f 	strb.w	r2, [r3, #623]	; 0x26f
	VALUE_2(N('P').distance,0,0,198,197,0,241);
 80020b8:	4b30      	ldr	r3, [pc, #192]	; (800217c <Create_Nodes+0xd18>)
 80020ba:	2200      	movs	r2, #0
 80020bc:	f8a3 2270 	strh.w	r2, [r3, #624]	; 0x270
 80020c0:	4b2e      	ldr	r3, [pc, #184]	; (800217c <Create_Nodes+0xd18>)
 80020c2:	2200      	movs	r2, #0
 80020c4:	f8a3 2272 	strh.w	r2, [r3, #626]	; 0x272
 80020c8:	4b2c      	ldr	r3, [pc, #176]	; (800217c <Create_Nodes+0xd18>)
 80020ca:	22c6      	movs	r2, #198	; 0xc6
 80020cc:	f8a3 2274 	strh.w	r2, [r3, #628]	; 0x274
 80020d0:	4b2a      	ldr	r3, [pc, #168]	; (800217c <Create_Nodes+0xd18>)
 80020d2:	22c5      	movs	r2, #197	; 0xc5
 80020d4:	f8a3 2276 	strh.w	r2, [r3, #630]	; 0x276
 80020d8:	4b28      	ldr	r3, [pc, #160]	; (800217c <Create_Nodes+0xd18>)
 80020da:	2200      	movs	r2, #0
 80020dc:	f8a3 2278 	strh.w	r2, [r3, #632]	; 0x278
 80020e0:	4b26      	ldr	r3, [pc, #152]	; (800217c <Create_Nodes+0xd18>)
 80020e2:	22f1      	movs	r2, #241	; 0xf1
 80020e4:	f8a3 227a 	strh.w	r2, [r3, #634]	; 0x27a
	N('P').middle=NEIGHBOUR4;
 80020e8:	4b24      	ldr	r3, [pc, #144]	; (800217c <Create_Nodes+0xd18>)
 80020ea:	2203      	movs	r2, #3
 80020ec:	f883 227c 	strb.w	r2, [r3, #636]	; 0x27c

	//Q node
	N('Q').worth=2;
 80020f0:	4b22      	ldr	r3, [pc, #136]	; (800217c <Create_Nodes+0xd18>)
 80020f2:	2202      	movs	r2, #2
 80020f4:	f8c3 2284 	str.w	r2, [r3, #644]	; 0x284
	N('Q').type=1;
 80020f8:	4b20      	ldr	r3, [pc, #128]	; (800217c <Create_Nodes+0xd18>)
 80020fa:	2201      	movs	r2, #1
 80020fc:	f8c3 2288 	str.w	r2, [r3, #648]	; 0x288
	VALUE_2(N('Q').neighbours,'P',0,'N','O',0,0);
 8002100:	4b1e      	ldr	r3, [pc, #120]	; (800217c <Create_Nodes+0xd18>)
 8002102:	2250      	movs	r2, #80	; 0x50
 8002104:	f883 228c 	strb.w	r2, [r3, #652]	; 0x28c
 8002108:	4b1c      	ldr	r3, [pc, #112]	; (800217c <Create_Nodes+0xd18>)
 800210a:	2200      	movs	r2, #0
 800210c:	f883 228d 	strb.w	r2, [r3, #653]	; 0x28d
 8002110:	4b1a      	ldr	r3, [pc, #104]	; (800217c <Create_Nodes+0xd18>)
 8002112:	224e      	movs	r2, #78	; 0x4e
 8002114:	f883 228e 	strb.w	r2, [r3, #654]	; 0x28e
 8002118:	4b18      	ldr	r3, [pc, #96]	; (800217c <Create_Nodes+0xd18>)
 800211a:	224f      	movs	r2, #79	; 0x4f
 800211c:	f883 228f 	strb.w	r2, [r3, #655]	; 0x28f
 8002120:	4b16      	ldr	r3, [pc, #88]	; (800217c <Create_Nodes+0xd18>)
 8002122:	2200      	movs	r2, #0
 8002124:	f883 2290 	strb.w	r2, [r3, #656]	; 0x290
 8002128:	4b14      	ldr	r3, [pc, #80]	; (800217c <Create_Nodes+0xd18>)
 800212a:	2200      	movs	r2, #0
 800212c:	f883 2291 	strb.w	r2, [r3, #657]	; 0x291
	VALUE_2(N('Q').directions,1,0,2,2,0,0);
 8002130:	4b12      	ldr	r3, [pc, #72]	; (800217c <Create_Nodes+0xd18>)
 8002132:	2201      	movs	r2, #1
 8002134:	f883 2292 	strb.w	r2, [r3, #658]	; 0x292
 8002138:	4b10      	ldr	r3, [pc, #64]	; (800217c <Create_Nodes+0xd18>)
 800213a:	2200      	movs	r2, #0
 800213c:	f883 2293 	strb.w	r2, [r3, #659]	; 0x293
 8002140:	4b0e      	ldr	r3, [pc, #56]	; (800217c <Create_Nodes+0xd18>)
 8002142:	2202      	movs	r2, #2
 8002144:	f883 2294 	strb.w	r2, [r3, #660]	; 0x294
 8002148:	4b0c      	ldr	r3, [pc, #48]	; (800217c <Create_Nodes+0xd18>)
 800214a:	2202      	movs	r2, #2
 800214c:	f883 2295 	strb.w	r2, [r3, #661]	; 0x295
 8002150:	4b0a      	ldr	r3, [pc, #40]	; (800217c <Create_Nodes+0xd18>)
 8002152:	2200      	movs	r2, #0
 8002154:	f883 2296 	strb.w	r2, [r3, #662]	; 0x296
 8002158:	4b08      	ldr	r3, [pc, #32]	; (800217c <Create_Nodes+0xd18>)
 800215a:	2200      	movs	r2, #0
 800215c:	f883 2297 	strb.w	r2, [r3, #663]	; 0x297
	VALUE_2(N('Q').distance,241,0,198,197,0,0);
 8002160:	4b06      	ldr	r3, [pc, #24]	; (800217c <Create_Nodes+0xd18>)
 8002162:	22f1      	movs	r2, #241	; 0xf1
 8002164:	f8a3 2298 	strh.w	r2, [r3, #664]	; 0x298
 8002168:	4b04      	ldr	r3, [pc, #16]	; (800217c <Create_Nodes+0xd18>)
 800216a:	2200      	movs	r2, #0
 800216c:	f8a3 229a 	strh.w	r2, [r3, #666]	; 0x29a
 8002170:	4b02      	ldr	r3, [pc, #8]	; (800217c <Create_Nodes+0xd18>)
 8002172:	22c6      	movs	r2, #198	; 0xc6
 8002174:	f8a3 229c 	strh.w	r2, [r3, #668]	; 0x29c
 8002178:	e002      	b.n	8002180 <Create_Nodes+0xd1c>
 800217a:	bf00      	nop
 800217c:	20000360 	.word	0x20000360
 8002180:	4bca      	ldr	r3, [pc, #808]	; (80024ac <Create_Nodes+0x1048>)
 8002182:	22c5      	movs	r2, #197	; 0xc5
 8002184:	f8a3 229e 	strh.w	r2, [r3, #670]	; 0x29e
 8002188:	4bc8      	ldr	r3, [pc, #800]	; (80024ac <Create_Nodes+0x1048>)
 800218a:	2200      	movs	r2, #0
 800218c:	f8a3 22a0 	strh.w	r2, [r3, #672]	; 0x2a0
 8002190:	4bc6      	ldr	r3, [pc, #792]	; (80024ac <Create_Nodes+0x1048>)
 8002192:	2200      	movs	r2, #0
 8002194:	f8a3 22a2 	strh.w	r2, [r3, #674]	; 0x2a2
	N('Q').middle=NEIGHBOUR3;
 8002198:	4bc4      	ldr	r3, [pc, #784]	; (80024ac <Create_Nodes+0x1048>)
 800219a:	2202      	movs	r2, #2
 800219c:	f883 22a4 	strb.w	r2, [r3, #676]	; 0x2a4

	//R node
	N('R').worth=0;
 80021a0:	4bc2      	ldr	r3, [pc, #776]	; (80024ac <Create_Nodes+0x1048>)
 80021a2:	2200      	movs	r2, #0
 80021a4:	f8c3 22ac 	str.w	r2, [r3, #684]	; 0x2ac
	N('R').type=3;
 80021a8:	4bc0      	ldr	r3, [pc, #768]	; (80024ac <Create_Nodes+0x1048>)
 80021aa:	2203      	movs	r2, #3
 80021ac:	f8c3 22b0 	str.w	r2, [r3, #688]	; 0x2b0
	VALUE_2(N('R').neighbours,0,0,0,'M',0,'P');
 80021b0:	4bbe      	ldr	r3, [pc, #760]	; (80024ac <Create_Nodes+0x1048>)
 80021b2:	2200      	movs	r2, #0
 80021b4:	f883 22b4 	strb.w	r2, [r3, #692]	; 0x2b4
 80021b8:	4bbc      	ldr	r3, [pc, #752]	; (80024ac <Create_Nodes+0x1048>)
 80021ba:	2200      	movs	r2, #0
 80021bc:	f883 22b5 	strb.w	r2, [r3, #693]	; 0x2b5
 80021c0:	4bba      	ldr	r3, [pc, #744]	; (80024ac <Create_Nodes+0x1048>)
 80021c2:	2200      	movs	r2, #0
 80021c4:	f883 22b6 	strb.w	r2, [r3, #694]	; 0x2b6
 80021c8:	4bb8      	ldr	r3, [pc, #736]	; (80024ac <Create_Nodes+0x1048>)
 80021ca:	224d      	movs	r2, #77	; 0x4d
 80021cc:	f883 22b7 	strb.w	r2, [r3, #695]	; 0x2b7
 80021d0:	4bb6      	ldr	r3, [pc, #728]	; (80024ac <Create_Nodes+0x1048>)
 80021d2:	2200      	movs	r2, #0
 80021d4:	f883 22b8 	strb.w	r2, [r3, #696]	; 0x2b8
 80021d8:	4bb4      	ldr	r3, [pc, #720]	; (80024ac <Create_Nodes+0x1048>)
 80021da:	2250      	movs	r2, #80	; 0x50
 80021dc:	f883 22b9 	strb.w	r2, [r3, #697]	; 0x2b9
	VALUE_2(N('R').directions,0,0,0,2,0,2);
 80021e0:	4bb2      	ldr	r3, [pc, #712]	; (80024ac <Create_Nodes+0x1048>)
 80021e2:	2200      	movs	r2, #0
 80021e4:	f883 22ba 	strb.w	r2, [r3, #698]	; 0x2ba
 80021e8:	4bb0      	ldr	r3, [pc, #704]	; (80024ac <Create_Nodes+0x1048>)
 80021ea:	2200      	movs	r2, #0
 80021ec:	f883 22bb 	strb.w	r2, [r3, #699]	; 0x2bb
 80021f0:	4bae      	ldr	r3, [pc, #696]	; (80024ac <Create_Nodes+0x1048>)
 80021f2:	2200      	movs	r2, #0
 80021f4:	f883 22bc 	strb.w	r2, [r3, #700]	; 0x2bc
 80021f8:	4bac      	ldr	r3, [pc, #688]	; (80024ac <Create_Nodes+0x1048>)
 80021fa:	2202      	movs	r2, #2
 80021fc:	f883 22bd 	strb.w	r2, [r3, #701]	; 0x2bd
 8002200:	4baa      	ldr	r3, [pc, #680]	; (80024ac <Create_Nodes+0x1048>)
 8002202:	2200      	movs	r2, #0
 8002204:	f883 22be 	strb.w	r2, [r3, #702]	; 0x2be
 8002208:	4ba8      	ldr	r3, [pc, #672]	; (80024ac <Create_Nodes+0x1048>)
 800220a:	2202      	movs	r2, #2
 800220c:	f883 22bf 	strb.w	r2, [r3, #703]	; 0x2bf
	VALUE_2(N('R').distance,0,0,0,197,0,241);
 8002210:	4ba6      	ldr	r3, [pc, #664]	; (80024ac <Create_Nodes+0x1048>)
 8002212:	2200      	movs	r2, #0
 8002214:	f8a3 22c0 	strh.w	r2, [r3, #704]	; 0x2c0
 8002218:	4ba4      	ldr	r3, [pc, #656]	; (80024ac <Create_Nodes+0x1048>)
 800221a:	2200      	movs	r2, #0
 800221c:	f8a3 22c2 	strh.w	r2, [r3, #706]	; 0x2c2
 8002220:	4ba2      	ldr	r3, [pc, #648]	; (80024ac <Create_Nodes+0x1048>)
 8002222:	2200      	movs	r2, #0
 8002224:	f8a3 22c4 	strh.w	r2, [r3, #708]	; 0x2c4
 8002228:	4ba0      	ldr	r3, [pc, #640]	; (80024ac <Create_Nodes+0x1048>)
 800222a:	22c5      	movs	r2, #197	; 0xc5
 800222c:	f8a3 22c6 	strh.w	r2, [r3, #710]	; 0x2c6
 8002230:	4b9e      	ldr	r3, [pc, #632]	; (80024ac <Create_Nodes+0x1048>)
 8002232:	2200      	movs	r2, #0
 8002234:	f8a3 22c8 	strh.w	r2, [r3, #712]	; 0x2c8
 8002238:	4b9c      	ldr	r3, [pc, #624]	; (80024ac <Create_Nodes+0x1048>)
 800223a:	22f1      	movs	r2, #241	; 0xf1
 800223c:	f8a3 22ca 	strh.w	r2, [r3, #714]	; 0x2ca
	N('R').middle=NEIGHBOUR6;
 8002240:	4b9a      	ldr	r3, [pc, #616]	; (80024ac <Create_Nodes+0x1048>)
 8002242:	2205      	movs	r2, #5
 8002244:	f883 22cc 	strb.w	r2, [r3, #716]	; 0x2cc

	//S node
	N('S').worth=0;
 8002248:	4b98      	ldr	r3, [pc, #608]	; (80024ac <Create_Nodes+0x1048>)
 800224a:	2200      	movs	r2, #0
 800224c:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
	N('S').type=3;
 8002250:	4b96      	ldr	r3, [pc, #600]	; (80024ac <Create_Nodes+0x1048>)
 8002252:	2203      	movs	r2, #3
 8002254:	f8c3 22d8 	str.w	r2, [r3, #728]	; 0x2d8
	VALUE_2(N('S').neighbours,'Q',0,'O',0,0,0);
 8002258:	4b94      	ldr	r3, [pc, #592]	; (80024ac <Create_Nodes+0x1048>)
 800225a:	2251      	movs	r2, #81	; 0x51
 800225c:	f883 22dc 	strb.w	r2, [r3, #732]	; 0x2dc
 8002260:	4b92      	ldr	r3, [pc, #584]	; (80024ac <Create_Nodes+0x1048>)
 8002262:	2200      	movs	r2, #0
 8002264:	f883 22dd 	strb.w	r2, [r3, #733]	; 0x2dd
 8002268:	4b90      	ldr	r3, [pc, #576]	; (80024ac <Create_Nodes+0x1048>)
 800226a:	224f      	movs	r2, #79	; 0x4f
 800226c:	f883 22de 	strb.w	r2, [r3, #734]	; 0x2de
 8002270:	4b8e      	ldr	r3, [pc, #568]	; (80024ac <Create_Nodes+0x1048>)
 8002272:	2200      	movs	r2, #0
 8002274:	f883 22df 	strb.w	r2, [r3, #735]	; 0x2df
 8002278:	4b8c      	ldr	r3, [pc, #560]	; (80024ac <Create_Nodes+0x1048>)
 800227a:	2200      	movs	r2, #0
 800227c:	f883 22e0 	strb.w	r2, [r3, #736]	; 0x2e0
 8002280:	4b8a      	ldr	r3, [pc, #552]	; (80024ac <Create_Nodes+0x1048>)
 8002282:	2200      	movs	r2, #0
 8002284:	f883 22e1 	strb.w	r2, [r3, #737]	; 0x2e1
	VALUE_2(N('S').directions,1,0,2,0,0,0);
 8002288:	4b88      	ldr	r3, [pc, #544]	; (80024ac <Create_Nodes+0x1048>)
 800228a:	2201      	movs	r2, #1
 800228c:	f883 22e2 	strb.w	r2, [r3, #738]	; 0x2e2
 8002290:	4b86      	ldr	r3, [pc, #536]	; (80024ac <Create_Nodes+0x1048>)
 8002292:	2200      	movs	r2, #0
 8002294:	f883 22e3 	strb.w	r2, [r3, #739]	; 0x2e3
 8002298:	4b84      	ldr	r3, [pc, #528]	; (80024ac <Create_Nodes+0x1048>)
 800229a:	2202      	movs	r2, #2
 800229c:	f883 22e4 	strb.w	r2, [r3, #740]	; 0x2e4
 80022a0:	4b82      	ldr	r3, [pc, #520]	; (80024ac <Create_Nodes+0x1048>)
 80022a2:	2200      	movs	r2, #0
 80022a4:	f883 22e5 	strb.w	r2, [r3, #741]	; 0x2e5
 80022a8:	4b80      	ldr	r3, [pc, #512]	; (80024ac <Create_Nodes+0x1048>)
 80022aa:	2200      	movs	r2, #0
 80022ac:	f883 22e6 	strb.w	r2, [r3, #742]	; 0x2e6
 80022b0:	4b7e      	ldr	r3, [pc, #504]	; (80024ac <Create_Nodes+0x1048>)
 80022b2:	2200      	movs	r2, #0
 80022b4:	f883 22e7 	strb.w	r2, [r3, #743]	; 0x2e7
	VALUE_2(N('S').distance,241,0,198,0,0,0);
 80022b8:	4b7c      	ldr	r3, [pc, #496]	; (80024ac <Create_Nodes+0x1048>)
 80022ba:	22f1      	movs	r2, #241	; 0xf1
 80022bc:	f8a3 22e8 	strh.w	r2, [r3, #744]	; 0x2e8
 80022c0:	4b7a      	ldr	r3, [pc, #488]	; (80024ac <Create_Nodes+0x1048>)
 80022c2:	2200      	movs	r2, #0
 80022c4:	f8a3 22ea 	strh.w	r2, [r3, #746]	; 0x2ea
 80022c8:	4b78      	ldr	r3, [pc, #480]	; (80024ac <Create_Nodes+0x1048>)
 80022ca:	22c6      	movs	r2, #198	; 0xc6
 80022cc:	f8a3 22ec 	strh.w	r2, [r3, #748]	; 0x2ec
 80022d0:	4b76      	ldr	r3, [pc, #472]	; (80024ac <Create_Nodes+0x1048>)
 80022d2:	2200      	movs	r2, #0
 80022d4:	f8a3 22ee 	strh.w	r2, [r3, #750]	; 0x2ee
 80022d8:	4b74      	ldr	r3, [pc, #464]	; (80024ac <Create_Nodes+0x1048>)
 80022da:	2200      	movs	r2, #0
 80022dc:	f8a3 22f0 	strh.w	r2, [r3, #752]	; 0x2f0
 80022e0:	4b72      	ldr	r3, [pc, #456]	; (80024ac <Create_Nodes+0x1048>)
 80022e2:	2200      	movs	r2, #0
 80022e4:	f8a3 22f2 	strh.w	r2, [r3, #754]	; 0x2f2
	N('S').middle=NEIGHBOUR1;
 80022e8:	4b70      	ldr	r3, [pc, #448]	; (80024ac <Create_Nodes+0x1048>)
 80022ea:	2200      	movs	r2, #0
 80022ec:	f883 22f4 	strb.w	r2, [r3, #756]	; 0x2f4

	//T node
	N('T').worth=0;
 80022f0:	4b6e      	ldr	r3, [pc, #440]	; (80024ac <Create_Nodes+0x1048>)
 80022f2:	2200      	movs	r2, #0
 80022f4:	f8c3 22fc 	str.w	r2, [r3, #764]	; 0x2fc
	N('T').type=4;
 80022f8:	4b6c      	ldr	r3, [pc, #432]	; (80024ac <Create_Nodes+0x1048>)
 80022fa:	2204      	movs	r2, #4
 80022fc:	f8c3 2300 	str.w	r2, [r3, #768]	; 0x300
	VALUE_2(N('T').neighbours,'V',0,'U','N',0,0);
 8002300:	4b6a      	ldr	r3, [pc, #424]	; (80024ac <Create_Nodes+0x1048>)
 8002302:	2256      	movs	r2, #86	; 0x56
 8002304:	f883 2304 	strb.w	r2, [r3, #772]	; 0x304
 8002308:	4b68      	ldr	r3, [pc, #416]	; (80024ac <Create_Nodes+0x1048>)
 800230a:	2200      	movs	r2, #0
 800230c:	f883 2305 	strb.w	r2, [r3, #773]	; 0x305
 8002310:	4b66      	ldr	r3, [pc, #408]	; (80024ac <Create_Nodes+0x1048>)
 8002312:	2255      	movs	r2, #85	; 0x55
 8002314:	f883 2306 	strb.w	r2, [r3, #774]	; 0x306
 8002318:	4b64      	ldr	r3, [pc, #400]	; (80024ac <Create_Nodes+0x1048>)
 800231a:	224e      	movs	r2, #78	; 0x4e
 800231c:	f883 2307 	strb.w	r2, [r3, #775]	; 0x307
 8002320:	4b62      	ldr	r3, [pc, #392]	; (80024ac <Create_Nodes+0x1048>)
 8002322:	2200      	movs	r2, #0
 8002324:	f883 2308 	strb.w	r2, [r3, #776]	; 0x308
 8002328:	4b60      	ldr	r3, [pc, #384]	; (80024ac <Create_Nodes+0x1048>)
 800232a:	2200      	movs	r2, #0
 800232c:	f883 2309 	strb.w	r2, [r3, #777]	; 0x309
	VALUE_2(N('T').directions,2,0,1,2,0,0);
 8002330:	4b5e      	ldr	r3, [pc, #376]	; (80024ac <Create_Nodes+0x1048>)
 8002332:	2202      	movs	r2, #2
 8002334:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
 8002338:	4b5c      	ldr	r3, [pc, #368]	; (80024ac <Create_Nodes+0x1048>)
 800233a:	2200      	movs	r2, #0
 800233c:	f883 230b 	strb.w	r2, [r3, #779]	; 0x30b
 8002340:	4b5a      	ldr	r3, [pc, #360]	; (80024ac <Create_Nodes+0x1048>)
 8002342:	2201      	movs	r2, #1
 8002344:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
 8002348:	4b58      	ldr	r3, [pc, #352]	; (80024ac <Create_Nodes+0x1048>)
 800234a:	2202      	movs	r2, #2
 800234c:	f883 230d 	strb.w	r2, [r3, #781]	; 0x30d
 8002350:	4b56      	ldr	r3, [pc, #344]	; (80024ac <Create_Nodes+0x1048>)
 8002352:	2200      	movs	r2, #0
 8002354:	f883 230e 	strb.w	r2, [r3, #782]	; 0x30e
 8002358:	4b54      	ldr	r3, [pc, #336]	; (80024ac <Create_Nodes+0x1048>)
 800235a:	2200      	movs	r2, #0
 800235c:	f883 230f 	strb.w	r2, [r3, #783]	; 0x30f
	VALUE_2(N('T').distance,199-40,0,198-40,120-25,0,0);
 8002360:	4b52      	ldr	r3, [pc, #328]	; (80024ac <Create_Nodes+0x1048>)
 8002362:	229f      	movs	r2, #159	; 0x9f
 8002364:	f8a3 2310 	strh.w	r2, [r3, #784]	; 0x310
 8002368:	4b50      	ldr	r3, [pc, #320]	; (80024ac <Create_Nodes+0x1048>)
 800236a:	2200      	movs	r2, #0
 800236c:	f8a3 2312 	strh.w	r2, [r3, #786]	; 0x312
 8002370:	4b4e      	ldr	r3, [pc, #312]	; (80024ac <Create_Nodes+0x1048>)
 8002372:	229e      	movs	r2, #158	; 0x9e
 8002374:	f8a3 2314 	strh.w	r2, [r3, #788]	; 0x314
 8002378:	4b4c      	ldr	r3, [pc, #304]	; (80024ac <Create_Nodes+0x1048>)
 800237a:	225f      	movs	r2, #95	; 0x5f
 800237c:	f8a3 2316 	strh.w	r2, [r3, #790]	; 0x316
 8002380:	4b4a      	ldr	r3, [pc, #296]	; (80024ac <Create_Nodes+0x1048>)
 8002382:	2200      	movs	r2, #0
 8002384:	f8a3 2318 	strh.w	r2, [r3, #792]	; 0x318
 8002388:	4b48      	ldr	r3, [pc, #288]	; (80024ac <Create_Nodes+0x1048>)
 800238a:	2200      	movs	r2, #0
 800238c:	f8a3 231a 	strh.w	r2, [r3, #794]	; 0x31a
	N('T').middle=NEIGHBOUR4;
 8002390:	4b46      	ldr	r3, [pc, #280]	; (80024ac <Create_Nodes+0x1048>)
 8002392:	2203      	movs	r2, #3
 8002394:	f883 231c 	strb.w	r2, [r3, #796]	; 0x31c

	//U node
	N('U').worth=0;
 8002398:	4b44      	ldr	r3, [pc, #272]	; (80024ac <Create_Nodes+0x1048>)
 800239a:	2200      	movs	r2, #0
 800239c:	f8c3 2324 	str.w	r2, [r3, #804]	; 0x324
	N('U').type=3;
 80023a0:	4b42      	ldr	r3, [pc, #264]	; (80024ac <Create_Nodes+0x1048>)
 80023a2:	2203      	movs	r2, #3
 80023a4:	f8c3 2328 	str.w	r2, [r3, #808]	; 0x328
	VALUE_2(N('U').neighbours,0,'M',0,'T',0,'V');
 80023a8:	4b40      	ldr	r3, [pc, #256]	; (80024ac <Create_Nodes+0x1048>)
 80023aa:	2200      	movs	r2, #0
 80023ac:	f883 232c 	strb.w	r2, [r3, #812]	; 0x32c
 80023b0:	4b3e      	ldr	r3, [pc, #248]	; (80024ac <Create_Nodes+0x1048>)
 80023b2:	224d      	movs	r2, #77	; 0x4d
 80023b4:	f883 232d 	strb.w	r2, [r3, #813]	; 0x32d
 80023b8:	4b3c      	ldr	r3, [pc, #240]	; (80024ac <Create_Nodes+0x1048>)
 80023ba:	2200      	movs	r2, #0
 80023bc:	f883 232e 	strb.w	r2, [r3, #814]	; 0x32e
 80023c0:	4b3a      	ldr	r3, [pc, #232]	; (80024ac <Create_Nodes+0x1048>)
 80023c2:	2254      	movs	r2, #84	; 0x54
 80023c4:	f883 232f 	strb.w	r2, [r3, #815]	; 0x32f
 80023c8:	4b38      	ldr	r3, [pc, #224]	; (80024ac <Create_Nodes+0x1048>)
 80023ca:	2200      	movs	r2, #0
 80023cc:	f883 2330 	strb.w	r2, [r3, #816]	; 0x330
 80023d0:	4b36      	ldr	r3, [pc, #216]	; (80024ac <Create_Nodes+0x1048>)
 80023d2:	2256      	movs	r2, #86	; 0x56
 80023d4:	f883 2331 	strb.w	r2, [r3, #817]	; 0x331
	VALUE_2(N('U').directions,0,2,0,2,0,2);
 80023d8:	4b34      	ldr	r3, [pc, #208]	; (80024ac <Create_Nodes+0x1048>)
 80023da:	2200      	movs	r2, #0
 80023dc:	f883 2332 	strb.w	r2, [r3, #818]	; 0x332
 80023e0:	4b32      	ldr	r3, [pc, #200]	; (80024ac <Create_Nodes+0x1048>)
 80023e2:	2202      	movs	r2, #2
 80023e4:	f883 2333 	strb.w	r2, [r3, #819]	; 0x333
 80023e8:	4b30      	ldr	r3, [pc, #192]	; (80024ac <Create_Nodes+0x1048>)
 80023ea:	2200      	movs	r2, #0
 80023ec:	f883 2334 	strb.w	r2, [r3, #820]	; 0x334
 80023f0:	4b2e      	ldr	r3, [pc, #184]	; (80024ac <Create_Nodes+0x1048>)
 80023f2:	2202      	movs	r2, #2
 80023f4:	f883 2335 	strb.w	r2, [r3, #821]	; 0x335
 80023f8:	4b2c      	ldr	r3, [pc, #176]	; (80024ac <Create_Nodes+0x1048>)
 80023fa:	2200      	movs	r2, #0
 80023fc:	f883 2336 	strb.w	r2, [r3, #822]	; 0x336
 8002400:	4b2a      	ldr	r3, [pc, #168]	; (80024ac <Create_Nodes+0x1048>)
 8002402:	2202      	movs	r2, #2
 8002404:	f883 2337 	strb.w	r2, [r3, #823]	; 0x337
	VALUE_2(N('U').distance,0,319-25,0,198,0,241-25);
 8002408:	4b28      	ldr	r3, [pc, #160]	; (80024ac <Create_Nodes+0x1048>)
 800240a:	2200      	movs	r2, #0
 800240c:	f8a3 2338 	strh.w	r2, [r3, #824]	; 0x338
 8002410:	4b26      	ldr	r3, [pc, #152]	; (80024ac <Create_Nodes+0x1048>)
 8002412:	f44f 7293 	mov.w	r2, #294	; 0x126
 8002416:	f8a3 233a 	strh.w	r2, [r3, #826]	; 0x33a
 800241a:	4b24      	ldr	r3, [pc, #144]	; (80024ac <Create_Nodes+0x1048>)
 800241c:	2200      	movs	r2, #0
 800241e:	f8a3 233c 	strh.w	r2, [r3, #828]	; 0x33c
 8002422:	4b22      	ldr	r3, [pc, #136]	; (80024ac <Create_Nodes+0x1048>)
 8002424:	22c6      	movs	r2, #198	; 0xc6
 8002426:	f8a3 233e 	strh.w	r2, [r3, #830]	; 0x33e
 800242a:	4b20      	ldr	r3, [pc, #128]	; (80024ac <Create_Nodes+0x1048>)
 800242c:	2200      	movs	r2, #0
 800242e:	f8a3 2340 	strh.w	r2, [r3, #832]	; 0x340
 8002432:	4b1e      	ldr	r3, [pc, #120]	; (80024ac <Create_Nodes+0x1048>)
 8002434:	22d8      	movs	r2, #216	; 0xd8
 8002436:	f8a3 2342 	strh.w	r2, [r3, #834]	; 0x342
	N('U').middle=NEIGHBOUR3;
 800243a:	4b1c      	ldr	r3, [pc, #112]	; (80024ac <Create_Nodes+0x1048>)
 800243c:	2202      	movs	r2, #2
 800243e:	f883 2344 	strb.w	r2, [r3, #836]	; 0x344

	//V node
	N('V').worth=0;
 8002442:	4b1a      	ldr	r3, [pc, #104]	; (80024ac <Create_Nodes+0x1048>)
 8002444:	2200      	movs	r2, #0
 8002446:	f8c3 234c 	str.w	r2, [r3, #844]	; 0x34c
	N('V').type=3;
 800244a:	4b18      	ldr	r3, [pc, #96]	; (80024ac <Create_Nodes+0x1048>)
 800244c:	2203      	movs	r2, #3
 800244e:	f8c3 2350 	str.w	r2, [r3, #848]	; 0x350
	VALUE_2(N('V').neighbours,'U',0,'T','O',0,0);
 8002452:	4b16      	ldr	r3, [pc, #88]	; (80024ac <Create_Nodes+0x1048>)
 8002454:	2255      	movs	r2, #85	; 0x55
 8002456:	f883 2354 	strb.w	r2, [r3, #852]	; 0x354
 800245a:	4b14      	ldr	r3, [pc, #80]	; (80024ac <Create_Nodes+0x1048>)
 800245c:	2200      	movs	r2, #0
 800245e:	f883 2355 	strb.w	r2, [r3, #853]	; 0x355
 8002462:	4b12      	ldr	r3, [pc, #72]	; (80024ac <Create_Nodes+0x1048>)
 8002464:	2254      	movs	r2, #84	; 0x54
 8002466:	f883 2356 	strb.w	r2, [r3, #854]	; 0x356
 800246a:	4b10      	ldr	r3, [pc, #64]	; (80024ac <Create_Nodes+0x1048>)
 800246c:	224f      	movs	r2, #79	; 0x4f
 800246e:	f883 2357 	strb.w	r2, [r3, #855]	; 0x357
 8002472:	4b0e      	ldr	r3, [pc, #56]	; (80024ac <Create_Nodes+0x1048>)
 8002474:	2200      	movs	r2, #0
 8002476:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
 800247a:	4b0c      	ldr	r3, [pc, #48]	; (80024ac <Create_Nodes+0x1048>)
 800247c:	2200      	movs	r2, #0
 800247e:	f883 2359 	strb.w	r2, [r3, #857]	; 0x359
	VALUE_2(N('V').directions,1,0,2,2,0,0);
 8002482:	4b0a      	ldr	r3, [pc, #40]	; (80024ac <Create_Nodes+0x1048>)
 8002484:	2201      	movs	r2, #1
 8002486:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 800248a:	4b08      	ldr	r3, [pc, #32]	; (80024ac <Create_Nodes+0x1048>)
 800248c:	2200      	movs	r2, #0
 800248e:	f883 235b 	strb.w	r2, [r3, #859]	; 0x35b
 8002492:	4b06      	ldr	r3, [pc, #24]	; (80024ac <Create_Nodes+0x1048>)
 8002494:	2202      	movs	r2, #2
 8002496:	f883 235c 	strb.w	r2, [r3, #860]	; 0x35c
 800249a:	4b04      	ldr	r3, [pc, #16]	; (80024ac <Create_Nodes+0x1048>)
 800249c:	2202      	movs	r2, #2
 800249e:	f883 235d 	strb.w	r2, [r3, #861]	; 0x35d
 80024a2:	4b02      	ldr	r3, [pc, #8]	; (80024ac <Create_Nodes+0x1048>)
 80024a4:	2200      	movs	r2, #0
 80024a6:	f883 235e 	strb.w	r2, [r3, #862]	; 0x35e
 80024aa:	e001      	b.n	80024b0 <Create_Nodes+0x104c>
 80024ac:	20000360 	.word	0x20000360
 80024b0:	4b72      	ldr	r3, [pc, #456]	; (800267c <Create_Nodes+0x1218>)
 80024b2:	2200      	movs	r2, #0
 80024b4:	f883 235f 	strb.w	r2, [r3, #863]	; 0x35f
	VALUE_2(N('V').distance,241-25,0,199,318-25,0,0);
 80024b8:	4b70      	ldr	r3, [pc, #448]	; (800267c <Create_Nodes+0x1218>)
 80024ba:	22d8      	movs	r2, #216	; 0xd8
 80024bc:	f8a3 2360 	strh.w	r2, [r3, #864]	; 0x360
 80024c0:	4b6e      	ldr	r3, [pc, #440]	; (800267c <Create_Nodes+0x1218>)
 80024c2:	2200      	movs	r2, #0
 80024c4:	f8a3 2362 	strh.w	r2, [r3, #866]	; 0x362
 80024c8:	4b6c      	ldr	r3, [pc, #432]	; (800267c <Create_Nodes+0x1218>)
 80024ca:	22c7      	movs	r2, #199	; 0xc7
 80024cc:	f8a3 2364 	strh.w	r2, [r3, #868]	; 0x364
 80024d0:	4b6a      	ldr	r3, [pc, #424]	; (800267c <Create_Nodes+0x1218>)
 80024d2:	f240 1225 	movw	r2, #293	; 0x125
 80024d6:	f8a3 2366 	strh.w	r2, [r3, #870]	; 0x366
 80024da:	4b68      	ldr	r3, [pc, #416]	; (800267c <Create_Nodes+0x1218>)
 80024dc:	2200      	movs	r2, #0
 80024de:	f8a3 2368 	strh.w	r2, [r3, #872]	; 0x368
 80024e2:	4b66      	ldr	r3, [pc, #408]	; (800267c <Create_Nodes+0x1218>)
 80024e4:	2200      	movs	r2, #0
 80024e6:	f8a3 236a 	strh.w	r2, [r3, #874]	; 0x36a
	N('V').middle=NEIGHBOUR3;
 80024ea:	4b64      	ldr	r3, [pc, #400]	; (800267c <Create_Nodes+0x1218>)
 80024ec:	2202      	movs	r2, #2
 80024ee:	f883 236c 	strb.w	r2, [r3, #876]	; 0x36c

	//Nodeértékek backup mentésből való visszatöltése
	if(SW2)//ha a kacsapoló2 a megfelelő állapotban van (világít a piros LED)
 80024f2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80024f6:	4862      	ldr	r0, [pc, #392]	; (8002680 <Create_Nodes+0x121c>)
 80024f8:	f006 feba 	bl	8009270 <HAL_GPIO_ReadPin>
 80024fc:	4603      	mov	r3, r0
 80024fe:	2b00      	cmp	r3, #0
 8002500:	f000 80a0 	beq.w	8002644 <Create_Nodes+0x11e0>
	{
		uint32_t check_flash = *(__IO uint32_t *) FLASH_ADDRESS_NODEWORTH; //tényleg ottvanak  flashbena megfelelő helyen a worth értékek?
 8002504:	4b5f      	ldr	r3, [pc, #380]	; (8002684 <Create_Nodes+0x1220>)
 8002506:	681b      	ldr	r3, [r3, #0]
 8002508:	66bb      	str	r3, [r7, #104]	; 0x68

		if(check_flash==0xffffffff)//nincs semmi a flashben
 800250a:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800250c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002510:	d161      	bne.n	80025d6 <Create_Nodes+0x1172>
		{
			char str[]="Default worths because of FLASH ERROR!\n\r";
 8002512:	4b5d      	ldr	r3, [pc, #372]	; (8002688 <Create_Nodes+0x1224>)
 8002514:	f107 040c 	add.w	r4, r7, #12
 8002518:	461d      	mov	r5, r3
 800251a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800251c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800251e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002520:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002522:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002526:	c403      	stmia	r4!, {r0, r1}
 8002528:	7022      	strb	r2, [r4, #0]
			HAL_UART_Transmit(huart_debugg,(uint8_t*) str, strlen(str), 10);
 800252a:	f107 030c 	add.w	r3, r7, #12
 800252e:	4618      	mov	r0, r3
 8002530:	f7fd fe6e 	bl	8000210 <strlen>
 8002534:	4603      	mov	r3, r0
 8002536:	b29a      	uxth	r2, r3
 8002538:	f107 010c 	add.w	r1, r7, #12
 800253c:	230a      	movs	r3, #10
 800253e:	6878      	ldr	r0, [r7, #4]
 8002540:	f009 fc01 	bl	800bd46 <HAL_UART_Transmit>
			HAL_FLASH_Unlock();
 8002544:	f006 fb46 	bl	8008bd4 <HAL_FLASH_Unlock>
			HAL_Delay(50);
 8002548:	2032      	movs	r0, #50	; 0x32
 800254a:	f005 f80f 	bl	800756c <HAL_Delay>
			FLASH_Erase_Sector(6, FLASH_VOLTAGE_RANGE_3);
 800254e:	2102      	movs	r1, #2
 8002550:	2006      	movs	r0, #6
 8002552:	f006 fcb1 	bl	8008eb8 <FLASH_Erase_Sector>
			HAL_Delay(50);
 8002556:	2032      	movs	r0, #50	; 0x32
 8002558:	f005 f808 	bl	800756c <HAL_Delay>
			HAL_FLASH_Lock();
 800255c:	f006 fb5c 	bl	8008c18 <HAL_FLASH_Lock>
			HAL_Delay(50);
 8002560:	2032      	movs	r0, #50	; 0x32
 8002562:	f005 f803 	bl	800756c <HAL_Delay>
			HAL_FLASH_Unlock();
 8002566:	f006 fb35 	bl	8008bd4 <HAL_FLASH_Unlock>
			HAL_Delay(50);
 800256a:	2032      	movs	r0, #50	; 0x32
 800256c:	f004 fffe 	bl	800756c <HAL_Delay>
			for(i=0;i<22;i++)
 8002570:	2300      	movs	r3, #0
 8002572:	66fb      	str	r3, [r7, #108]	; 0x6c
 8002574:	e01a      	b.n	80025ac <Create_Nodes+0x1148>
			{
				HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+i, Nodes[i].worth);
 8002576:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002578:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 800257c:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
 8002580:	4618      	mov	r0, r3
 8002582:	493e      	ldr	r1, [pc, #248]	; (800267c <Create_Nodes+0x1218>)
 8002584:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8002586:	4613      	mov	r3, r2
 8002588:	009b      	lsls	r3, r3, #2
 800258a:	4413      	add	r3, r2
 800258c:	00db      	lsls	r3, r3, #3
 800258e:	440b      	add	r3, r1
 8002590:	3304      	adds	r3, #4
 8002592:	681b      	ldr	r3, [r3, #0]
 8002594:	17da      	asrs	r2, r3, #31
 8002596:	469a      	mov	sl, r3
 8002598:	4693      	mov	fp, r2
 800259a:	4652      	mov	r2, sl
 800259c:	465b      	mov	r3, fp
 800259e:	4601      	mov	r1, r0
 80025a0:	2000      	movs	r0, #0
 80025a2:	f006 fac3 	bl	8008b2c <HAL_FLASH_Program>
			for(i=0;i<22;i++)
 80025a6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80025a8:	3301      	adds	r3, #1
 80025aa:	66fb      	str	r3, [r7, #108]	; 0x6c
 80025ac:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80025ae:	2b15      	cmp	r3, #21
 80025b0:	dde1      	ble.n	8002576 <Create_Nodes+0x1112>
			}
			HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+22, collectedPoints);
 80025b2:	4b36      	ldr	r3, [pc, #216]	; (800268c <Create_Nodes+0x1228>)
 80025b4:	781b      	ldrb	r3, [r3, #0]
 80025b6:	b2db      	uxtb	r3, r3
 80025b8:	2200      	movs	r2, #0
 80025ba:	4698      	mov	r8, r3
 80025bc:	4691      	mov	r9, r2
 80025be:	4642      	mov	r2, r8
 80025c0:	464b      	mov	r3, r9
 80025c2:	4933      	ldr	r1, [pc, #204]	; (8002690 <Create_Nodes+0x122c>)
 80025c4:	2000      	movs	r0, #0
 80025c6:	f006 fab1 	bl	8008b2c <HAL_FLASH_Program>
			HAL_Delay(50);
 80025ca:	2032      	movs	r0, #50	; 0x32
 80025cc:	f004 ffce 	bl	800756c <HAL_Delay>
			HAL_FLASH_Lock();
 80025d0:	f006 fb22 	bl	8008c18 <HAL_FLASH_Lock>
 80025d4:	e04d      	b.n	8002672 <Create_Nodes+0x120e>
			return; //ha nem akkor használjuk a default értékeket
		}
		for(i=0;i<22;i++)
 80025d6:	2300      	movs	r3, #0
 80025d8:	66fb      	str	r3, [r7, #108]	; 0x6c
 80025da:	e013      	b.n	8002604 <Create_Nodes+0x11a0>
		{
			Nodes[i].worth=*(__IO uint8_t *) (FLASH_ADDRESS_NODEWORTH+i); //ha igen akkor töltsük be a backup mentést
 80025dc:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80025de:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 80025e2:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
 80025e6:	781b      	ldrb	r3, [r3, #0]
 80025e8:	b2db      	uxtb	r3, r3
 80025ea:	4618      	mov	r0, r3
 80025ec:	4923      	ldr	r1, [pc, #140]	; (800267c <Create_Nodes+0x1218>)
 80025ee:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80025f0:	4613      	mov	r3, r2
 80025f2:	009b      	lsls	r3, r3, #2
 80025f4:	4413      	add	r3, r2
 80025f6:	00db      	lsls	r3, r3, #3
 80025f8:	440b      	add	r3, r1
 80025fa:	3304      	adds	r3, #4
 80025fc:	6018      	str	r0, [r3, #0]
		for(i=0;i<22;i++)
 80025fe:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002600:	3301      	adds	r3, #1
 8002602:	66fb      	str	r3, [r7, #108]	; 0x6c
 8002604:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002606:	2b15      	cmp	r3, #21
 8002608:	dde8      	ble.n	80025dc <Create_Nodes+0x1178>
		}
		collectedPoints=*(__IO uint8_t *) (FLASH_ADDRESS_NODEWORTH+22);
 800260a:	4b21      	ldr	r3, [pc, #132]	; (8002690 <Create_Nodes+0x122c>)
 800260c:	781b      	ldrb	r3, [r3, #0]
 800260e:	b2da      	uxtb	r2, r3
 8002610:	4b1e      	ldr	r3, [pc, #120]	; (800268c <Create_Nodes+0x1228>)
 8002612:	701a      	strb	r2, [r3, #0]
		char str[]="Worths from FLASH backup!\n\r";
 8002614:	4b1f      	ldr	r3, [pc, #124]	; (8002694 <Create_Nodes+0x1230>)
 8002616:	f107 044c 	add.w	r4, r7, #76	; 0x4c
 800261a:	461d      	mov	r5, r3
 800261c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800261e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002620:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002624:	e884 0007 	stmia.w	r4, {r0, r1, r2}
		HAL_UART_Transmit(huart_debugg,(uint8_t*) str, strlen(str), 10);
 8002628:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800262c:	4618      	mov	r0, r3
 800262e:	f7fd fdef 	bl	8000210 <strlen>
 8002632:	4603      	mov	r3, r0
 8002634:	b29a      	uxth	r2, r3
 8002636:	f107 014c 	add.w	r1, r7, #76	; 0x4c
 800263a:	230a      	movs	r3, #10
 800263c:	6878      	ldr	r0, [r7, #4]
 800263e:	f009 fb82 	bl	800bd46 <HAL_UART_Transmit>
 8002642:	e016      	b.n	8002672 <Create_Nodes+0x120e>
	}
	else
	{
		char str[]="Default worths!\n\r";
 8002644:	4b14      	ldr	r3, [pc, #80]	; (8002698 <Create_Nodes+0x1234>)
 8002646:	f107 0438 	add.w	r4, r7, #56	; 0x38
 800264a:	461d      	mov	r5, r3
 800264c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800264e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002650:	682b      	ldr	r3, [r5, #0]
 8002652:	8023      	strh	r3, [r4, #0]
		HAL_UART_Transmit(huart_debugg,(uint8_t*) str, strlen(str), 10);
 8002654:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8002658:	4618      	mov	r0, r3
 800265a:	f7fd fdd9 	bl	8000210 <strlen>
 800265e:	4603      	mov	r3, r0
 8002660:	b29a      	uxth	r2, r3
 8002662:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8002666:	230a      	movs	r3, #10
 8002668:	6878      	ldr	r0, [r7, #4]
 800266a:	f009 fb6c 	bl	800bd46 <HAL_UART_Transmit>
 800266e:	e000      	b.n	8002672 <Create_Nodes+0x120e>
	if(mode!=SKILL)return;
 8002670:	bf00      	nop
	}
}
 8002672:	3770      	adds	r7, #112	; 0x70
 8002674:	46bd      	mov	sp, r7
 8002676:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800267a:	bf00      	nop
 800267c:	20000360 	.word	0x20000360
 8002680:	40020400 	.word	0x40020400
 8002684:	08040000 	.word	0x08040000
 8002688:	0801120c 	.word	0x0801120c
 800268c:	20000347 	.word	0x20000347
 8002690:	08040016 	.word	0x08040016
 8002694:	08011238 	.word	0x08011238
 8002698:	08011254 	.word	0x08011254
 800269c:	00000000 	.word	0x00000000

080026a0 <Control_Task>:


void Control_Task(UART_HandleTypeDef *huart_debugg,TIM_HandleTypeDef *htim_rand,uint32_t tick, uint32_t period)
{
 80026a0:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 80026a4:	b088      	sub	sp, #32
 80026a6:	af00      	add	r7, sp, #0
 80026a8:	60f8      	str	r0, [r7, #12]
 80026aa:	60b9      	str	r1, [r7, #8]
 80026ac:	607a      	str	r2, [r7, #4]
 80026ae:	603b      	str	r3, [r7, #0]

	static uint32_t control_task_tick = 0;
	static uint8_t control_task_state=NEIGHBOUR1;//5 db állapot ->5.után megint 1.jön
	//szomszéd1,szomszéd2,szomszéd3,szomszéd4,kiértékelés

	uint8_t nID=0;
 80026b0:	2300      	movs	r3, #0
 80026b2:	76fb      	strb	r3, [r7, #27]

	if(control_task_tick>tick)return;
 80026b4:	4b7c      	ldr	r3, [pc, #496]	; (80028a8 <Control_Task+0x208>)
 80026b6:	681b      	ldr	r3, [r3, #0]
 80026b8:	687a      	ldr	r2, [r7, #4]
 80026ba:	429a      	cmp	r2, r3
 80026bc:	f0c0 837e 	bcc.w	8002dbc <Control_Task+0x71c>
	control_task_tick=tick+period;
 80026c0:	687a      	ldr	r2, [r7, #4]
 80026c2:	683b      	ldr	r3, [r7, #0]
 80026c4:	4413      	add	r3, r2
 80026c6:	4a78      	ldr	r2, [pc, #480]	; (80028a8 <Control_Task+0x208>)
 80026c8:	6013      	str	r3, [r2, #0]
	if(mode!=SKILL || laneChange!=1)return;
 80026ca:	4b78      	ldr	r3, [pc, #480]	; (80028ac <Control_Task+0x20c>)
 80026cc:	781b      	ldrb	r3, [r3, #0]
 80026ce:	2b52      	cmp	r3, #82	; 0x52
 80026d0:	f040 8376 	bne.w	8002dc0 <Control_Task+0x720>
 80026d4:	4b76      	ldr	r3, [pc, #472]	; (80028b0 <Control_Task+0x210>)
 80026d6:	781b      	ldrb	r3, [r3, #0]
 80026d8:	2b01      	cmp	r3, #1
 80026da:	f040 8371 	bne.w	8002dc0 <Control_Task+0x720>
	//if(!readytorace)return;

	//ha kapu nélküli nodeba tartunk éppen, akkor időzítéssel "detektáljuk" a nodot
	if(N(pos[MY]).type>2)
 80026de:	4b75      	ldr	r3, [pc, #468]	; (80028b4 <Control_Task+0x214>)
 80026e0:	781b      	ldrb	r3, [r3, #0]
 80026e2:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80026e6:	4974      	ldr	r1, [pc, #464]	; (80028b8 <Control_Task+0x218>)
 80026e8:	4613      	mov	r3, r2
 80026ea:	009b      	lsls	r3, r3, #2
 80026ec:	4413      	add	r3, r2
 80026ee:	00db      	lsls	r3, r3, #3
 80026f0:	440b      	add	r3, r1
 80026f2:	3308      	adds	r3, #8
 80026f4:	681b      	ldr	r3, [r3, #0]
 80026f6:	2b02      	cmp	r3, #2
 80026f8:	d94c      	bls.n	8002794 <Control_Task+0xf4>
	{
		s += (float)(tick-tick_prev)*fabs(v)/10000;
 80026fa:	4b70      	ldr	r3, [pc, #448]	; (80028bc <Control_Task+0x21c>)
 80026fc:	681b      	ldr	r3, [r3, #0]
 80026fe:	4618      	mov	r0, r3
 8002700:	f7fd ff42 	bl	8000588 <__aeabi_f2d>
 8002704:	4604      	mov	r4, r0
 8002706:	460d      	mov	r5, r1
 8002708:	4b6d      	ldr	r3, [pc, #436]	; (80028c0 <Control_Task+0x220>)
 800270a:	681b      	ldr	r3, [r3, #0]
 800270c:	687a      	ldr	r2, [r7, #4]
 800270e:	1ad3      	subs	r3, r2, r3
 8002710:	ee07 3a90 	vmov	s15, r3
 8002714:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002718:	ee17 0a90 	vmov	r0, s15
 800271c:	f7fd ff34 	bl	8000588 <__aeabi_f2d>
 8002720:	4680      	mov	r8, r0
 8002722:	4689      	mov	r9, r1
 8002724:	4b67      	ldr	r3, [pc, #412]	; (80028c4 <Control_Task+0x224>)
 8002726:	edd3 7a00 	vldr	s15, [r3]
 800272a:	eef0 7ae7 	vabs.f32	s15, s15
 800272e:	ee17 0a90 	vmov	r0, s15
 8002732:	f7fd ff29 	bl	8000588 <__aeabi_f2d>
 8002736:	4602      	mov	r2, r0
 8002738:	460b      	mov	r3, r1
 800273a:	4640      	mov	r0, r8
 800273c:	4649      	mov	r1, r9
 800273e:	f7fd ff7b 	bl	8000638 <__aeabi_dmul>
 8002742:	4602      	mov	r2, r0
 8002744:	460b      	mov	r3, r1
 8002746:	4610      	mov	r0, r2
 8002748:	4619      	mov	r1, r3
 800274a:	a355      	add	r3, pc, #340	; (adr r3, 80028a0 <Control_Task+0x200>)
 800274c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002750:	f7fe f89c 	bl	800088c <__aeabi_ddiv>
 8002754:	4602      	mov	r2, r0
 8002756:	460b      	mov	r3, r1
 8002758:	4620      	mov	r0, r4
 800275a:	4629      	mov	r1, r5
 800275c:	f7fd fdb6 	bl	80002cc <__adddf3>
 8002760:	4602      	mov	r2, r0
 8002762:	460b      	mov	r3, r1
 8002764:	4610      	mov	r0, r2
 8002766:	4619      	mov	r1, r3
 8002768:	f7fe fa3e 	bl	8000be8 <__aeabi_d2f>
 800276c:	4603      	mov	r3, r0
 800276e:	4a53      	ldr	r2, [pc, #332]	; (80028bc <Control_Task+0x21c>)
 8002770:	6013      	str	r3, [r2, #0]
		if(s>sMAX)nodeDetected=1;
 8002772:	4b55      	ldr	r3, [pc, #340]	; (80028c8 <Control_Task+0x228>)
 8002774:	681b      	ldr	r3, [r3, #0]
 8002776:	ee07 3a90 	vmov	s15, r3
 800277a:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800277e:	4b4f      	ldr	r3, [pc, #316]	; (80028bc <Control_Task+0x21c>)
 8002780:	edd3 7a00 	vldr	s15, [r3]
 8002784:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002788:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800278c:	d502      	bpl.n	8002794 <Control_Task+0xf4>
 800278e:	4b4f      	ldr	r3, [pc, #316]	; (80028cc <Control_Task+0x22c>)
 8002790:	2201      	movs	r2, #1
 8002792:	701a      	strb	r2, [r3, #0]

	}
	tick_prev=tick;//mostantól mérjük az időt
 8002794:	4a4a      	ldr	r2, [pc, #296]	; (80028c0 <Control_Task+0x220>)
 8002796:	687b      	ldr	r3, [r7, #4]
 8002798:	6013      	str	r3, [r2, #0]

	//ha odaértünk a myPositionbe, akkor indulhat a mozgás a nextPosition felé
	if(nodeDetected)
 800279a:	4b4c      	ldr	r3, [pc, #304]	; (80028cc <Control_Task+0x22c>)
 800279c:	781b      	ldrb	r3, [r3, #0]
 800279e:	2b00      	cmp	r3, #0
 80027a0:	f000 80ae 	beq.w	8002900 <Control_Task+0x260>
	{
		LED_B_TOGGLE;
 80027a4:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80027a8:	4849      	ldr	r0, [pc, #292]	; (80028d0 <Control_Task+0x230>)
 80027aa:	f006 fd92 	bl	80092d2 <HAL_GPIO_TogglePin>
		if(N(pos[NEXT]).type>2)//ha a kövi node-on nincs kapu
 80027ae:	4b41      	ldr	r3, [pc, #260]	; (80028b4 <Control_Task+0x214>)
 80027b0:	785b      	ldrb	r3, [r3, #1]
 80027b2:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80027b6:	4940      	ldr	r1, [pc, #256]	; (80028b8 <Control_Task+0x218>)
 80027b8:	4613      	mov	r3, r2
 80027ba:	009b      	lsls	r3, r3, #2
 80027bc:	4413      	add	r3, r2
 80027be:	00db      	lsls	r3, r3, #3
 80027c0:	440b      	add	r3, r1
 80027c2:	3308      	adds	r3, #8
 80027c4:	681b      	ldr	r3, [r3, #0]
 80027c6:	2b02      	cmp	r3, #2
 80027c8:	d917      	bls.n	80027fa <Control_Task+0x15a>
		{
			s=0;
 80027ca:	4b3c      	ldr	r3, [pc, #240]	; (80028bc <Control_Task+0x21c>)
 80027cc:	f04f 0200 	mov.w	r2, #0
 80027d0:	601a      	str	r2, [r3, #0]
			sMAX=N(pos[MY]).distance[bestNb[NEXT]]+25;
 80027d2:	4b38      	ldr	r3, [pc, #224]	; (80028b4 <Control_Task+0x214>)
 80027d4:	781b      	ldrb	r3, [r3, #0]
 80027d6:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80027da:	4b3e      	ldr	r3, [pc, #248]	; (80028d4 <Control_Task+0x234>)
 80027dc:	785b      	ldrb	r3, [r3, #1]
 80027de:	4618      	mov	r0, r3
 80027e0:	4935      	ldr	r1, [pc, #212]	; (80028b8 <Control_Task+0x218>)
 80027e2:	4613      	mov	r3, r2
 80027e4:	009b      	lsls	r3, r3, #2
 80027e6:	4413      	add	r3, r2
 80027e8:	009b      	lsls	r3, r3, #2
 80027ea:	4403      	add	r3, r0
 80027ec:	330c      	adds	r3, #12
 80027ee:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80027f2:	3319      	adds	r3, #25
 80027f4:	461a      	mov	r2, r3
 80027f6:	4b34      	ldr	r3, [pc, #208]	; (80028c8 <Control_Task+0x228>)
 80027f8:	601a      	str	r2, [r3, #0]
		}
		//pontok nyugtázása
		if(laneChange==1 && pos[MY]=='V' && pos[NEXT]=='U')//ha a tett színhelyén vagyunk
 80027fa:	4b2d      	ldr	r3, [pc, #180]	; (80028b0 <Control_Task+0x210>)
 80027fc:	781b      	ldrb	r3, [r3, #0]
 80027fe:	2b01      	cmp	r3, #1
 8002800:	d10a      	bne.n	8002818 <Control_Task+0x178>
 8002802:	4b2c      	ldr	r3, [pc, #176]	; (80028b4 <Control_Task+0x214>)
 8002804:	781b      	ldrb	r3, [r3, #0]
 8002806:	2b56      	cmp	r3, #86	; 0x56
 8002808:	d106      	bne.n	8002818 <Control_Task+0x178>
 800280a:	4b2a      	ldr	r3, [pc, #168]	; (80028b4 <Control_Task+0x214>)
 800280c:	785b      	ldrb	r3, [r3, #1]
 800280e:	2b55      	cmp	r3, #85	; 0x55
 8002810:	d102      	bne.n	8002818 <Control_Task+0x178>
		{
			laneChange=2;
 8002812:	4b27      	ldr	r3, [pc, #156]	; (80028b0 <Control_Task+0x210>)
 8002814:	2202      	movs	r2, #2
 8002816:	701a      	strb	r2, [r3, #0]
		}
		static char str[15]; //kiiratás
		sprintf(str,"d,d\n\r");
 8002818:	492f      	ldr	r1, [pc, #188]	; (80028d8 <Control_Task+0x238>)
 800281a:	4830      	ldr	r0, [pc, #192]	; (80028dc <Control_Task+0x23c>)
 800281c:	f00a fffc 	bl	800d818 <siprintf>
		str[0]=pos[MY];
 8002820:	4b24      	ldr	r3, [pc, #144]	; (80028b4 <Control_Task+0x214>)
 8002822:	781a      	ldrb	r2, [r3, #0]
 8002824:	4b2d      	ldr	r3, [pc, #180]	; (80028dc <Control_Task+0x23c>)
 8002826:	701a      	strb	r2, [r3, #0]
		str[2]=pos[NEXT];
 8002828:	4b22      	ldr	r3, [pc, #136]	; (80028b4 <Control_Task+0x214>)
 800282a:	785a      	ldrb	r2, [r3, #1]
 800282c:	4b2b      	ldr	r3, [pc, #172]	; (80028dc <Control_Task+0x23c>)
 800282e:	709a      	strb	r2, [r3, #2]
		HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 2);
 8002830:	482a      	ldr	r0, [pc, #168]	; (80028dc <Control_Task+0x23c>)
 8002832:	f7fd fced 	bl	8000210 <strlen>
 8002836:	4603      	mov	r3, r0
 8002838:	b29a      	uxth	r2, r3
 800283a:	2302      	movs	r3, #2
 800283c:	4927      	ldr	r1, [pc, #156]	; (80028dc <Control_Task+0x23c>)
 800283e:	68f8      	ldr	r0, [r7, #12]
 8002840:	f009 fa81 	bl	800bd46 <HAL_UART_Transmit>

		if(Cross_Collision(pos[MY], pos[NEXT]))
 8002844:	4b1b      	ldr	r3, [pc, #108]	; (80028b4 <Control_Task+0x214>)
 8002846:	781b      	ldrb	r3, [r3, #0]
 8002848:	4a1a      	ldr	r2, [pc, #104]	; (80028b4 <Control_Task+0x214>)
 800284a:	7852      	ldrb	r2, [r2, #1]
 800284c:	4611      	mov	r1, r2
 800284e:	4618      	mov	r0, r3
 8002850:	f001 f9fe 	bl	8003c50 <Cross_Collision>
 8002854:	4603      	mov	r3, r0
 8002856:	2b00      	cmp	r3, #0
 8002858:	d006      	beq.n	8002868 <Control_Task+0x1c8>
		{
			control_task_state = WAIT;
 800285a:	4b21      	ldr	r3, [pc, #132]	; (80028e0 <Control_Task+0x240>)
 800285c:	2207      	movs	r2, #7
 800285e:	701a      	strb	r2, [r3, #0]
			t_stamp=tick;
 8002860:	4a20      	ldr	r2, [pc, #128]	; (80028e4 <Control_Task+0x244>)
 8002862:	687b      	ldr	r3, [r7, #4]
 8002864:	6013      	str	r3, [r2, #0]
 8002866:	e002      	b.n	800286e <Control_Task+0x1ce>
		}
		else control_task_state = NEIGHBOUR1;
 8002868:	4b1d      	ldr	r3, [pc, #116]	; (80028e0 <Control_Task+0x240>)
 800286a:	2200      	movs	r2, #0
 800286c:	701a      	strb	r2, [r3, #0]

		pos[MY]=pos[NEXT];
 800286e:	4b11      	ldr	r3, [pc, #68]	; (80028b4 <Control_Task+0x214>)
 8002870:	785a      	ldrb	r2, [r3, #1]
 8002872:	4b10      	ldr	r3, [pc, #64]	; (80028b4 <Control_Task+0x214>)
 8002874:	701a      	strb	r2, [r3, #0]
		path=nextPath;
 8002876:	4b1c      	ldr	r3, [pc, #112]	; (80028e8 <Control_Task+0x248>)
 8002878:	781a      	ldrb	r2, [r3, #0]
 800287a:	4b1c      	ldr	r3, [pc, #112]	; (80028ec <Control_Task+0x24c>)
 800287c:	701a      	strb	r2, [r3, #0]
		dir[MY]=dir[NEXT];
 800287e:	4b1c      	ldr	r3, [pc, #112]	; (80028f0 <Control_Task+0x250>)
 8002880:	785a      	ldrb	r2, [r3, #1]
 8002882:	4b1b      	ldr	r3, [pc, #108]	; (80028f0 <Control_Task+0x250>)
 8002884:	701a      	strb	r2, [r3, #0]
		orientation=nextOri;//FORWARD
 8002886:	4b1b      	ldr	r3, [pc, #108]	; (80028f4 <Control_Task+0x254>)
 8002888:	781a      	ldrb	r2, [r3, #0]
 800288a:	4b1b      	ldr	r3, [pc, #108]	; (80028f8 <Control_Task+0x258>)
 800288c:	701a      	strb	r2, [r3, #0]

		dontGoBack=0;
 800288e:	4b1b      	ldr	r3, [pc, #108]	; (80028fc <Control_Task+0x25c>)
 8002890:	2200      	movs	r2, #0
 8002892:	701a      	strb	r2, [r3, #0]
		nodeDetected=0;
 8002894:	4b0d      	ldr	r3, [pc, #52]	; (80028cc <Control_Task+0x22c>)
 8002896:	2200      	movs	r2, #0
 8002898:	701a      	strb	r2, [r3, #0]
		return;
 800289a:	e292      	b.n	8002dc2 <Control_Task+0x722>
 800289c:	f3af 8000 	nop.w
 80028a0:	00000000 	.word	0x00000000
 80028a4:	40c38800 	.word	0x40c38800
 80028a8:	200006d0 	.word	0x200006d0
 80028ac:	20000336 	.word	0x20000336
 80028b0:	20000348 	.word	0x20000348
 80028b4:	20000358 	.word	0x20000358
 80028b8:	20000360 	.word	0x20000360
 80028bc:	200006d4 	.word	0x200006d4
 80028c0:	200006d8 	.word	0x200006d8
 80028c4:	20000754 	.word	0x20000754
 80028c8:	20000000 	.word	0x20000000
 80028cc:	20000345 	.word	0x20000345
 80028d0:	40020400 	.word	0x40020400
 80028d4:	200006dc 	.word	0x200006dc
 80028d8:	08011268 	.word	0x08011268
 80028dc:	200006e0 	.word	0x200006e0
 80028e0:	200006ef 	.word	0x200006ef
 80028e4:	200006f0 	.word	0x200006f0
 80028e8:	200006f4 	.word	0x200006f4
 80028ec:	20000346 	.word	0x20000346
 80028f0:	2000035c 	.word	0x2000035c
 80028f4:	200006f5 	.word	0x200006f5
 80028f8:	20000344 	.word	0x20000344
 80028fc:	20000004 	.word	0x20000004
	}

	if(thunderboardFlag)//ha új kalózpozíció jött a TB-től ujrakezdjük a számolást (első szomszéd vizsgálata jön)
 8002900:	4ba7      	ldr	r3, [pc, #668]	; (8002ba0 <Control_Task+0x500>)
 8002902:	781b      	ldrb	r3, [r3, #0]
 8002904:	b2db      	uxtb	r3, r3
 8002906:	2b00      	cmp	r3, #0
 8002908:	d019      	beq.n	800293e <Control_Task+0x29e>
	{
		if(control_task_state!=WAIT)//wait állapotból nem tud mindekt kibillenteni az új kalózrobot pozíció
 800290a:	4ba6      	ldr	r3, [pc, #664]	; (8002ba4 <Control_Task+0x504>)
 800290c:	781b      	ldrb	r3, [r3, #0]
 800290e:	2b07      	cmp	r3, #7
 8002910:	d002      	beq.n	8002918 <Control_Task+0x278>
			control_task_state=NEIGHBOUR1;//kezdjük előrröl a fitneszérték számítást az 1. szomszédtól
 8002912:	4ba4      	ldr	r3, [pc, #656]	; (8002ba4 <Control_Task+0x504>)
 8002914:	2200      	movs	r2, #0
 8002916:	701a      	strb	r2, [r3, #0]

		piratePos_prev[0]=piratePos[0];//előző kalozpozíció frissítése
 8002918:	4ba3      	ldr	r3, [pc, #652]	; (8002ba8 <Control_Task+0x508>)
 800291a:	781a      	ldrb	r2, [r3, #0]
 800291c:	4ba3      	ldr	r3, [pc, #652]	; (8002bac <Control_Task+0x50c>)
 800291e:	701a      	strb	r2, [r3, #0]
		piratePos_prev[1]=piratePos[1];
 8002920:	4ba1      	ldr	r3, [pc, #644]	; (8002ba8 <Control_Task+0x508>)
 8002922:	785a      	ldrb	r2, [r3, #1]
 8002924:	4ba1      	ldr	r3, [pc, #644]	; (8002bac <Control_Task+0x50c>)
 8002926:	705a      	strb	r2, [r3, #1]
		piratePos_prev[2]=piratePos[2];
 8002928:	4b9f      	ldr	r3, [pc, #636]	; (8002ba8 <Control_Task+0x508>)
 800292a:	789a      	ldrb	r2, [r3, #2]
 800292c:	4b9f      	ldr	r3, [pc, #636]	; (8002bac <Control_Task+0x50c>)
 800292e:	709a      	strb	r2, [r3, #2]
		piratePos_prev[3]=piratePos[3];
 8002930:	4b9d      	ldr	r3, [pc, #628]	; (8002ba8 <Control_Task+0x508>)
 8002932:	78da      	ldrb	r2, [r3, #3]
 8002934:	4b9d      	ldr	r3, [pc, #628]	; (8002bac <Control_Task+0x50c>)
 8002936:	70da      	strb	r2, [r3, #3]

		thunderboardFlag=0; //várjuk az újabb kalózrobot pozíciókat a thunderboardtól
 8002938:	4b99      	ldr	r3, [pc, #612]	; (8002ba0 <Control_Task+0x500>)
 800293a:	2200      	movs	r2, #0
 800293c:	701a      	strb	r2, [r3, #0]
	}

	/******************LEGJOBB SZOMSZÉD KIVÁLASZTÁSA (első 4 állapot)******************/
	if(control_task_state < EVALUATE)//1.szomszéd/2.szomszéd/3.szomszéd/4.szomszéd
 800293e:	4b99      	ldr	r3, [pc, #612]	; (8002ba4 <Control_Task+0x504>)
 8002940:	781b      	ldrb	r3, [r3, #0]
 8002942:	2b05      	cmp	r3, #5
 8002944:	f200 8171 	bhi.w	8002c2a <Control_Task+0x58a>
	{
		if(control_task_state==NEIGHBOUR1)
 8002948:	4b96      	ldr	r3, [pc, #600]	; (8002ba4 <Control_Task+0x504>)
 800294a:	781b      	ldrb	r3, [r3, #0]
 800294c:	2b00      	cmp	r3, #0
 800294e:	d102      	bne.n	8002956 <Control_Task+0x2b6>
		{
			bestFitness=-200.0;//az előző számolás legjob fitneszértéke volt még benne
 8002950:	4b97      	ldr	r3, [pc, #604]	; (8002bb0 <Control_Task+0x510>)
 8002952:	4a98      	ldr	r2, [pc, #608]	; (8002bb4 <Control_Task+0x514>)
 8002954:	601a      	str	r2, [r3, #0]
		}
		nID=N(pos[MY]).neighbours[control_task_state]; //a vizsgált 1.rendű szomszéd azonosítója
 8002956:	4b98      	ldr	r3, [pc, #608]	; (8002bb8 <Control_Task+0x518>)
 8002958:	781b      	ldrb	r3, [r3, #0]
 800295a:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800295e:	4b91      	ldr	r3, [pc, #580]	; (8002ba4 <Control_Task+0x504>)
 8002960:	781b      	ldrb	r3, [r3, #0]
 8002962:	4618      	mov	r0, r3
 8002964:	4995      	ldr	r1, [pc, #596]	; (8002bbc <Control_Task+0x51c>)
 8002966:	4613      	mov	r3, r2
 8002968:	009b      	lsls	r3, r3, #2
 800296a:	4413      	add	r3, r2
 800296c:	00db      	lsls	r3, r3, #3
 800296e:	440b      	add	r3, r1
 8002970:	4403      	add	r3, r0
 8002972:	330c      	adds	r3, #12
 8002974:	781b      	ldrb	r3, [r3, #0]
 8002976:	76fb      	strb	r3, [r7, #27]
		if(nID) //ha létezik a szomszéd
 8002978:	7efb      	ldrb	r3, [r7, #27]
 800297a:	2b00      	cmp	r3, #0
 800297c:	f000 812c 	beq.w	8002bd8 <Control_Task+0x538>
		{
			fitness[control_task_state]=(float)N(nID).worth; //fitneszérték 1.rendű szomszéd alapján
 8002980:	7efb      	ldrb	r3, [r7, #27]
 8002982:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002986:	498d      	ldr	r1, [pc, #564]	; (8002bbc <Control_Task+0x51c>)
 8002988:	4613      	mov	r3, r2
 800298a:	009b      	lsls	r3, r3, #2
 800298c:	4413      	add	r3, r2
 800298e:	00db      	lsls	r3, r3, #3
 8002990:	440b      	add	r3, r1
 8002992:	3304      	adds	r3, #4
 8002994:	681a      	ldr	r2, [r3, #0]
 8002996:	4b83      	ldr	r3, [pc, #524]	; (8002ba4 <Control_Task+0x504>)
 8002998:	781b      	ldrb	r3, [r3, #0]
 800299a:	ee07 2a90 	vmov	s15, r2
 800299e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80029a2:	4a87      	ldr	r2, [pc, #540]	; (8002bc0 <Control_Task+0x520>)
 80029a4:	009b      	lsls	r3, r3, #2
 80029a6:	4413      	add	r3, r2
 80029a8:	edc3 7a00 	vstr	s15, [r3]
			//kalozrobot hatása az 1.rendű szomszéd esetén
			if(piratePos[1]==nID) fitness[control_task_state] -= 80/*P*/;//ha a kalóz is ebbe az 1.rendű tart éppen akkor kerüljük el az ütközést
 80029ac:	4b7e      	ldr	r3, [pc, #504]	; (8002ba8 <Control_Task+0x508>)
 80029ae:	785b      	ldrb	r3, [r3, #1]
 80029b0:	7efa      	ldrb	r2, [r7, #27]
 80029b2:	429a      	cmp	r2, r3
 80029b4:	d112      	bne.n	80029dc <Control_Task+0x33c>
 80029b6:	4b7b      	ldr	r3, [pc, #492]	; (8002ba4 <Control_Task+0x504>)
 80029b8:	781b      	ldrb	r3, [r3, #0]
 80029ba:	4a81      	ldr	r2, [pc, #516]	; (8002bc0 <Control_Task+0x520>)
 80029bc:	009b      	lsls	r3, r3, #2
 80029be:	4413      	add	r3, r2
 80029c0:	edd3 7a00 	vldr	s15, [r3]
 80029c4:	4b77      	ldr	r3, [pc, #476]	; (8002ba4 <Control_Task+0x504>)
 80029c6:	781b      	ldrb	r3, [r3, #0]
 80029c8:	ed9f 7a7e 	vldr	s14, [pc, #504]	; 8002bc4 <Control_Task+0x524>
 80029cc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80029d0:	4a7b      	ldr	r2, [pc, #492]	; (8002bc0 <Control_Task+0x520>)
 80029d2:	009b      	lsls	r3, r3, #2
 80029d4:	4413      	add	r3, r2
 80029d6:	edc3 7a00 	vstr	s15, [r3]
 80029da:	e06f      	b.n	8002abc <Control_Task+0x41c>

			else if(piratePos[2]==nID) fitness[control_task_state] -= 60/*P*/;//ha még csak tervezi, hogy odamegy, akkor is kerüljük a pontot
 80029dc:	4b72      	ldr	r3, [pc, #456]	; (8002ba8 <Control_Task+0x508>)
 80029de:	789b      	ldrb	r3, [r3, #2]
 80029e0:	7efa      	ldrb	r2, [r7, #27]
 80029e2:	429a      	cmp	r2, r3
 80029e4:	d112      	bne.n	8002a0c <Control_Task+0x36c>
 80029e6:	4b6f      	ldr	r3, [pc, #444]	; (8002ba4 <Control_Task+0x504>)
 80029e8:	781b      	ldrb	r3, [r3, #0]
 80029ea:	4a75      	ldr	r2, [pc, #468]	; (8002bc0 <Control_Task+0x520>)
 80029ec:	009b      	lsls	r3, r3, #2
 80029ee:	4413      	add	r3, r2
 80029f0:	edd3 7a00 	vldr	s15, [r3]
 80029f4:	4b6b      	ldr	r3, [pc, #428]	; (8002ba4 <Control_Task+0x504>)
 80029f6:	781b      	ldrb	r3, [r3, #0]
 80029f8:	ed9f 7a73 	vldr	s14, [pc, #460]	; 8002bc8 <Control_Task+0x528>
 80029fc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002a00:	4a6f      	ldr	r2, [pc, #444]	; (8002bc0 <Control_Task+0x520>)
 8002a02:	009b      	lsls	r3, r3, #2
 8002a04:	4413      	add	r3, r2
 8002a06:	edc3 7a00 	vstr	s15, [r3]
 8002a0a:	e057      	b.n	8002abc <Control_Task+0x41c>
			/**/
			else if(piratePos[0]==nID)//ha elhaygta azt  apontot akkor 3 szomszédot is büntetünk
 8002a0c:	4b66      	ldr	r3, [pc, #408]	; (8002ba8 <Control_Task+0x508>)
 8002a0e:	781b      	ldrb	r3, [r3, #0]
 8002a10:	7efa      	ldrb	r2, [r7, #27]
 8002a12:	429a      	cmp	r2, r3
 8002a14:	d152      	bne.n	8002abc <Control_Task+0x41c>
			{
				fitness[control_task_state] -= 20;
 8002a16:	4b63      	ldr	r3, [pc, #396]	; (8002ba4 <Control_Task+0x504>)
 8002a18:	781b      	ldrb	r3, [r3, #0]
 8002a1a:	4a69      	ldr	r2, [pc, #420]	; (8002bc0 <Control_Task+0x520>)
 8002a1c:	009b      	lsls	r3, r3, #2
 8002a1e:	4413      	add	r3, r2
 8002a20:	edd3 7a00 	vldr	s15, [r3]
 8002a24:	4b5f      	ldr	r3, [pc, #380]	; (8002ba4 <Control_Task+0x504>)
 8002a26:	781b      	ldrb	r3, [r3, #0]
 8002a28:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 8002a2c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002a30:	4a63      	ldr	r2, [pc, #396]	; (8002bc0 <Control_Task+0x520>)
 8002a32:	009b      	lsls	r3, r3, #2
 8002a34:	4413      	add	r3, r2
 8002a36:	edc3 7a00 	vstr	s15, [r3]
				if(control_task_state<=NEIGHBOUR3)
 8002a3a:	4b5a      	ldr	r3, [pc, #360]	; (8002ba4 <Control_Task+0x504>)
 8002a3c:	781b      	ldrb	r3, [r3, #0]
 8002a3e:	2b02      	cmp	r3, #2
 8002a40:	d81e      	bhi.n	8002a80 <Control_Task+0x3e0>
				{
					fitness[NEIGHBOUR1]-=60;
 8002a42:	4b5f      	ldr	r3, [pc, #380]	; (8002bc0 <Control_Task+0x520>)
 8002a44:	edd3 7a00 	vldr	s15, [r3]
 8002a48:	ed9f 7a5f 	vldr	s14, [pc, #380]	; 8002bc8 <Control_Task+0x528>
 8002a4c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002a50:	4b5b      	ldr	r3, [pc, #364]	; (8002bc0 <Control_Task+0x520>)
 8002a52:	edc3 7a00 	vstr	s15, [r3]
					fitness[NEIGHBOUR2]-=60;
 8002a56:	4b5a      	ldr	r3, [pc, #360]	; (8002bc0 <Control_Task+0x520>)
 8002a58:	edd3 7a01 	vldr	s15, [r3, #4]
 8002a5c:	ed9f 7a5a 	vldr	s14, [pc, #360]	; 8002bc8 <Control_Task+0x528>
 8002a60:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002a64:	4b56      	ldr	r3, [pc, #344]	; (8002bc0 <Control_Task+0x520>)
 8002a66:	edc3 7a01 	vstr	s15, [r3, #4]
					fitness[NEIGHBOUR3]-=60;
 8002a6a:	4b55      	ldr	r3, [pc, #340]	; (8002bc0 <Control_Task+0x520>)
 8002a6c:	edd3 7a02 	vldr	s15, [r3, #8]
 8002a70:	ed9f 7a55 	vldr	s14, [pc, #340]	; 8002bc8 <Control_Task+0x528>
 8002a74:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002a78:	4b51      	ldr	r3, [pc, #324]	; (8002bc0 <Control_Task+0x520>)
 8002a7a:	edc3 7a02 	vstr	s15, [r3, #8]
 8002a7e:	e01d      	b.n	8002abc <Control_Task+0x41c>
				}
				else
				{
					fitness[NEIGHBOUR4]-=60;
 8002a80:	4b4f      	ldr	r3, [pc, #316]	; (8002bc0 <Control_Task+0x520>)
 8002a82:	edd3 7a03 	vldr	s15, [r3, #12]
 8002a86:	ed9f 7a50 	vldr	s14, [pc, #320]	; 8002bc8 <Control_Task+0x528>
 8002a8a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002a8e:	4b4c      	ldr	r3, [pc, #304]	; (8002bc0 <Control_Task+0x520>)
 8002a90:	edc3 7a03 	vstr	s15, [r3, #12]
					fitness[NEIGHBOUR5]-=60;
 8002a94:	4b4a      	ldr	r3, [pc, #296]	; (8002bc0 <Control_Task+0x520>)
 8002a96:	edd3 7a04 	vldr	s15, [r3, #16]
 8002a9a:	ed9f 7a4b 	vldr	s14, [pc, #300]	; 8002bc8 <Control_Task+0x528>
 8002a9e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002aa2:	4b47      	ldr	r3, [pc, #284]	; (8002bc0 <Control_Task+0x520>)
 8002aa4:	edc3 7a04 	vstr	s15, [r3, #16]
					fitness[NEIGHBOUR6]-=60;
 8002aa8:	4b45      	ldr	r3, [pc, #276]	; (8002bc0 <Control_Task+0x520>)
 8002aaa:	edd3 7a05 	vldr	s15, [r3, #20]
 8002aae:	ed9f 7a46 	vldr	s14, [pc, #280]	; 8002bc8 <Control_Task+0x528>
 8002ab2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002ab6:	4b42      	ldr	r3, [pc, #264]	; (8002bc0 <Control_Task+0x520>)
 8002ab8:	edc3 7a05 	vstr	s15, [r3, #20]
			}

			int i;
			uint8_t nnID;
			float nnFit;
			for(i=0;i<6;i++)//2.rednű szomszédok
 8002abc:	2300      	movs	r3, #0
 8002abe:	61fb      	str	r3, [r7, #28]
 8002ac0:	e046      	b.n	8002b50 <Control_Task+0x4b0>
			{
				nnFit=0.0;
 8002ac2:	f04f 0300 	mov.w	r3, #0
 8002ac6:	617b      	str	r3, [r7, #20]
				nnID=N(nID).neighbours[i]; //2.rednű szomszéd ID-ja
 8002ac8:	7efb      	ldrb	r3, [r7, #27]
 8002aca:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002ace:	493b      	ldr	r1, [pc, #236]	; (8002bbc <Control_Task+0x51c>)
 8002ad0:	4613      	mov	r3, r2
 8002ad2:	009b      	lsls	r3, r3, #2
 8002ad4:	4413      	add	r3, r2
 8002ad6:	00db      	lsls	r3, r3, #3
 8002ad8:	18ca      	adds	r2, r1, r3
 8002ada:	69fb      	ldr	r3, [r7, #28]
 8002adc:	4413      	add	r3, r2
 8002ade:	330c      	adds	r3, #12
 8002ae0:	781b      	ldrb	r3, [r3, #0]
 8002ae2:	74fb      	strb	r3, [r7, #19]
				if(nnID && nnID!=pos[MY])//ha létezik a 2.rendű szomszéd (és nem a myposition az)
 8002ae4:	7cfb      	ldrb	r3, [r7, #19]
 8002ae6:	2b00      	cmp	r3, #0
 8002ae8:	d02f      	beq.n	8002b4a <Control_Task+0x4aa>
 8002aea:	4b33      	ldr	r3, [pc, #204]	; (8002bb8 <Control_Task+0x518>)
 8002aec:	781b      	ldrb	r3, [r3, #0]
 8002aee:	7cfa      	ldrb	r2, [r7, #19]
 8002af0:	429a      	cmp	r2, r3
 8002af2:	d02a      	beq.n	8002b4a <Control_Task+0x4aa>
				{
					nnFit += (float)N(nnID).worth;
 8002af4:	7cfb      	ldrb	r3, [r7, #19]
 8002af6:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002afa:	4930      	ldr	r1, [pc, #192]	; (8002bbc <Control_Task+0x51c>)
 8002afc:	4613      	mov	r3, r2
 8002afe:	009b      	lsls	r3, r3, #2
 8002b00:	4413      	add	r3, r2
 8002b02:	00db      	lsls	r3, r3, #3
 8002b04:	440b      	add	r3, r1
 8002b06:	3304      	adds	r3, #4
 8002b08:	681b      	ldr	r3, [r3, #0]
 8002b0a:	ee07 3a90 	vmov	s15, r3
 8002b0e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002b12:	ed97 7a05 	vldr	s14, [r7, #20]
 8002b16:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002b1a:	edc7 7a05 	vstr	s15, [r7, #20]
					//if(piratePos[1]==nnID) nnFit -= 0.5/*P*/;//ha a kalóz is ebbe a pontba tart éppen akkor kerüljük el az ütközést
					//else if(piratePos[2]==nnID) fitness[control_task_state] -= 0.25/*P*/;//ha még csak tervezi, hogy odamegy, akkor se fogjuk tudni megelőnzi, mert mi 3 nodnyira vagyunk ő pedig csak 2
					//if(!lane_change)nnFit = nnFit * (float)DIST_AVG/N(nID).distance[i];//a 2.rendű szomszédhoz tartozó fitneszérték jobb ha az közelebb van az 1.rendű szomszédjához
					//ha a sávváltó szakaszt keressük akkor viszont nem díjazzuk a közelséget
					fitness[control_task_state] += nnFit/6/*P*/;
 8002b1e:	4b21      	ldr	r3, [pc, #132]	; (8002ba4 <Control_Task+0x504>)
 8002b20:	781b      	ldrb	r3, [r3, #0]
 8002b22:	4a27      	ldr	r2, [pc, #156]	; (8002bc0 <Control_Task+0x520>)
 8002b24:	009b      	lsls	r3, r3, #2
 8002b26:	4413      	add	r3, r2
 8002b28:	ed93 7a00 	vldr	s14, [r3]
 8002b2c:	edd7 6a05 	vldr	s13, [r7, #20]
 8002b30:	eeb1 6a08 	vmov.f32	s12, #24	; 0x40c00000  6.0
 8002b34:	eec6 7a86 	vdiv.f32	s15, s13, s12
 8002b38:	4b1a      	ldr	r3, [pc, #104]	; (8002ba4 <Control_Task+0x504>)
 8002b3a:	781b      	ldrb	r3, [r3, #0]
 8002b3c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002b40:	4a1f      	ldr	r2, [pc, #124]	; (8002bc0 <Control_Task+0x520>)
 8002b42:	009b      	lsls	r3, r3, #2
 8002b44:	4413      	add	r3, r2
 8002b46:	edc3 7a00 	vstr	s15, [r3]
			for(i=0;i<6;i++)//2.rednű szomszédok
 8002b4a:	69fb      	ldr	r3, [r7, #28]
 8002b4c:	3301      	adds	r3, #1
 8002b4e:	61fb      	str	r3, [r7, #28]
 8002b50:	69fb      	ldr	r3, [r7, #28]
 8002b52:	2b05      	cmp	r3, #5
 8002b54:	ddb5      	ble.n	8002ac2 <Control_Task+0x422>
				}
			}
			//if(!lane_change) fitness[control_task_state] =fitness[control_task_state] * (float)DIST_AVG/N(pos[MY]).distance[control_task_state]; //minél közelebb van a szomszéd annál jobb
			//ha a sávváltó szakaszt keressük akkor viszont nem díjazzuk a közelséget
			if(dontGoBack)
 8002b56:	4b1d      	ldr	r3, [pc, #116]	; (8002bcc <Control_Task+0x52c>)
 8002b58:	781b      	ldrb	r3, [r3, #0]
 8002b5a:	2b00      	cmp	r3, #0
 8002b5c:	d043      	beq.n	8002be6 <Control_Task+0x546>
			{
				if(control_task_state<=NEIGHBOUR3 && dir[MY]==2)
 8002b5e:	4b11      	ldr	r3, [pc, #68]	; (8002ba4 <Control_Task+0x504>)
 8002b60:	781b      	ldrb	r3, [r3, #0]
 8002b62:	2b02      	cmp	r3, #2
 8002b64:	d80b      	bhi.n	8002b7e <Control_Task+0x4de>
 8002b66:	4b1a      	ldr	r3, [pc, #104]	; (8002bd0 <Control_Task+0x530>)
 8002b68:	781b      	ldrb	r3, [r3, #0]
 8002b6a:	2b02      	cmp	r3, #2
 8002b6c:	d107      	bne.n	8002b7e <Control_Task+0x4de>
				{
					fitness[control_task_state]=-160;
 8002b6e:	4b0d      	ldr	r3, [pc, #52]	; (8002ba4 <Control_Task+0x504>)
 8002b70:	781b      	ldrb	r3, [r3, #0]
 8002b72:	4a13      	ldr	r2, [pc, #76]	; (8002bc0 <Control_Task+0x520>)
 8002b74:	009b      	lsls	r3, r3, #2
 8002b76:	4413      	add	r3, r2
 8002b78:	4a16      	ldr	r2, [pc, #88]	; (8002bd4 <Control_Task+0x534>)
 8002b7a:	601a      	str	r2, [r3, #0]
 8002b7c:	e033      	b.n	8002be6 <Control_Task+0x546>
				}
				else if(control_task_state >= NEIGHBOUR4 && dir[MY]==1)
 8002b7e:	4b09      	ldr	r3, [pc, #36]	; (8002ba4 <Control_Task+0x504>)
 8002b80:	781b      	ldrb	r3, [r3, #0]
 8002b82:	2b02      	cmp	r3, #2
 8002b84:	d92f      	bls.n	8002be6 <Control_Task+0x546>
 8002b86:	4b12      	ldr	r3, [pc, #72]	; (8002bd0 <Control_Task+0x530>)
 8002b88:	781b      	ldrb	r3, [r3, #0]
 8002b8a:	2b01      	cmp	r3, #1
 8002b8c:	d12b      	bne.n	8002be6 <Control_Task+0x546>
				{
					fitness[control_task_state]=-160;
 8002b8e:	4b05      	ldr	r3, [pc, #20]	; (8002ba4 <Control_Task+0x504>)
 8002b90:	781b      	ldrb	r3, [r3, #0]
 8002b92:	4a0b      	ldr	r2, [pc, #44]	; (8002bc0 <Control_Task+0x520>)
 8002b94:	009b      	lsls	r3, r3, #2
 8002b96:	4413      	add	r3, r2
 8002b98:	4a0e      	ldr	r2, [pc, #56]	; (8002bd4 <Control_Task+0x534>)
 8002b9a:	601a      	str	r2, [r3, #0]
 8002b9c:	e023      	b.n	8002be6 <Control_Task+0x546>
 8002b9e:	bf00      	nop
 8002ba0:	2000034a 	.word	0x2000034a
 8002ba4:	200006ef 	.word	0x200006ef
 8002ba8:	20000354 	.word	0x20000354
 8002bac:	200006f8 	.word	0x200006f8
 8002bb0:	20000008 	.word	0x20000008
 8002bb4:	c3480000 	.word	0xc3480000
 8002bb8:	20000358 	.word	0x20000358
 8002bbc:	20000360 	.word	0x20000360
 8002bc0:	200006fc 	.word	0x200006fc
 8002bc4:	42a00000 	.word	0x42a00000
 8002bc8:	42700000 	.word	0x42700000
 8002bcc:	20000004 	.word	0x20000004
 8002bd0:	2000035c 	.word	0x2000035c
 8002bd4:	c3200000 	.word	0xc3200000
				}
			}
		}
		else fitness[control_task_state]=-150.0;//ha nem létezik a szomszéd erre tuti ne menjünk
 8002bd8:	4b7c      	ldr	r3, [pc, #496]	; (8002dcc <Control_Task+0x72c>)
 8002bda:	781b      	ldrb	r3, [r3, #0]
 8002bdc:	4a7c      	ldr	r2, [pc, #496]	; (8002dd0 <Control_Task+0x730>)
 8002bde:	009b      	lsls	r3, r3, #2
 8002be0:	4413      	add	r3, r2
 8002be2:	4a7c      	ldr	r2, [pc, #496]	; (8002dd4 <Control_Task+0x734>)
 8002be4:	601a      	str	r2, [r3, #0]
		//uint16_t tmp= __HAL_TIM_GET_COUNTER(htim_rand)%2;
		if(fitness[control_task_state]>=bestFitness) //ha ez a fitness jobb mint az eddigi legjobb, akkor mostantól ez a legjobb
 8002be6:	4b79      	ldr	r3, [pc, #484]	; (8002dcc <Control_Task+0x72c>)
 8002be8:	781b      	ldrb	r3, [r3, #0]
 8002bea:	4a79      	ldr	r2, [pc, #484]	; (8002dd0 <Control_Task+0x730>)
 8002bec:	009b      	lsls	r3, r3, #2
 8002bee:	4413      	add	r3, r2
 8002bf0:	ed93 7a00 	vldr	s14, [r3]
 8002bf4:	4b78      	ldr	r3, [pc, #480]	; (8002dd8 <Control_Task+0x738>)
 8002bf6:	edd3 7a00 	vldr	s15, [r3]
 8002bfa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002bfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002c02:	db0b      	blt.n	8002c1c <Control_Task+0x57c>
		{
			bestFitness=fitness[control_task_state];
 8002c04:	4b71      	ldr	r3, [pc, #452]	; (8002dcc <Control_Task+0x72c>)
 8002c06:	781b      	ldrb	r3, [r3, #0]
 8002c08:	4a71      	ldr	r2, [pc, #452]	; (8002dd0 <Control_Task+0x730>)
 8002c0a:	009b      	lsls	r3, r3, #2
 8002c0c:	4413      	add	r3, r2
 8002c0e:	681b      	ldr	r3, [r3, #0]
 8002c10:	4a71      	ldr	r2, [pc, #452]	; (8002dd8 <Control_Task+0x738>)
 8002c12:	6013      	str	r3, [r2, #0]
			bestNb[TMP] = control_task_state;//ez az egy érték amivel a task első 4 (fitnesszámoló) álapota kommunikál a kiértékelő álapottal
 8002c14:	4b6d      	ldr	r3, [pc, #436]	; (8002dcc <Control_Task+0x72c>)
 8002c16:	781a      	ldrb	r2, [r3, #0]
 8002c18:	4b70      	ldr	r3, [pc, #448]	; (8002ddc <Control_Task+0x73c>)
 8002c1a:	701a      	strb	r2, [r3, #0]
		}
		control_task_state++;
 8002c1c:	4b6b      	ldr	r3, [pc, #428]	; (8002dcc <Control_Task+0x72c>)
 8002c1e:	781b      	ldrb	r3, [r3, #0]
 8002c20:	3301      	adds	r3, #1
 8002c22:	b2da      	uxtb	r2, r3
 8002c24:	4b69      	ldr	r3, [pc, #420]	; (8002dcc <Control_Task+0x72c>)
 8002c26:	701a      	strb	r2, [r3, #0]
		return; //ha csak valamelyik szomszédot vizsgáltuk még akkor eddig tartott ez a task futás, itt kilépünk
 8002c28:	e0cb      	b.n	8002dc2 <Control_Task+0x722>
	}
	/**************************************************************************************/
	//ide csak akkor jutunk el ha control_task_state>NEIGHBOUR4

	/**********************KIÉRTÉKELÉS (control_task_state=EVALUATE ->5.állapot)**********************/
	else if(control_task_state==EVALUATE)
 8002c2a:	4b68      	ldr	r3, [pc, #416]	; (8002dcc <Control_Task+0x72c>)
 8002c2c:	781b      	ldrb	r3, [r3, #0]
 8002c2e:	2b06      	cmp	r3, #6
 8002c30:	f040 80a6 	bne.w	8002d80 <Control_Task+0x6e0>
	{
		if(bestFitness==0 && fitness[N(pos[MY]).middle]==0) bestNb[TMP]=N(pos[MY]).middle;
 8002c34:	4b68      	ldr	r3, [pc, #416]	; (8002dd8 <Control_Task+0x738>)
 8002c36:	edd3 7a00 	vldr	s15, [r3]
 8002c3a:	eef5 7a40 	vcmp.f32	s15, #0.0
 8002c3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002c42:	d123      	bne.n	8002c8c <Control_Task+0x5ec>
 8002c44:	4b66      	ldr	r3, [pc, #408]	; (8002de0 <Control_Task+0x740>)
 8002c46:	781b      	ldrb	r3, [r3, #0]
 8002c48:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002c4c:	4965      	ldr	r1, [pc, #404]	; (8002de4 <Control_Task+0x744>)
 8002c4e:	4613      	mov	r3, r2
 8002c50:	009b      	lsls	r3, r3, #2
 8002c52:	4413      	add	r3, r2
 8002c54:	00db      	lsls	r3, r3, #3
 8002c56:	440b      	add	r3, r1
 8002c58:	3324      	adds	r3, #36	; 0x24
 8002c5a:	781b      	ldrb	r3, [r3, #0]
 8002c5c:	4a5c      	ldr	r2, [pc, #368]	; (8002dd0 <Control_Task+0x730>)
 8002c5e:	009b      	lsls	r3, r3, #2
 8002c60:	4413      	add	r3, r2
 8002c62:	edd3 7a00 	vldr	s15, [r3]
 8002c66:	eef5 7a40 	vcmp.f32	s15, #0.0
 8002c6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002c6e:	d10d      	bne.n	8002c8c <Control_Task+0x5ec>
 8002c70:	4b5b      	ldr	r3, [pc, #364]	; (8002de0 <Control_Task+0x740>)
 8002c72:	781b      	ldrb	r3, [r3, #0]
 8002c74:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002c78:	495a      	ldr	r1, [pc, #360]	; (8002de4 <Control_Task+0x744>)
 8002c7a:	4613      	mov	r3, r2
 8002c7c:	009b      	lsls	r3, r3, #2
 8002c7e:	4413      	add	r3, r2
 8002c80:	00db      	lsls	r3, r3, #3
 8002c82:	440b      	add	r3, r1
 8002c84:	3324      	adds	r3, #36	; 0x24
 8002c86:	781a      	ldrb	r2, [r3, #0]
 8002c88:	4b54      	ldr	r3, [pc, #336]	; (8002ddc <Control_Task+0x73c>)
 8002c8a:	701a      	strb	r2, [r3, #0]
		bestNb[NEXT]=bestNb[TMP];
 8002c8c:	4b53      	ldr	r3, [pc, #332]	; (8002ddc <Control_Task+0x73c>)
 8002c8e:	781a      	ldrb	r2, [r3, #0]
 8002c90:	4b52      	ldr	r3, [pc, #328]	; (8002ddc <Control_Task+0x73c>)
 8002c92:	705a      	strb	r2, [r3, #1]
		pos[NEXT]=N(pos[MY]).neighbours[bestNb[NEXT]];//a következő poziciónk a legjobb szomszéd lesz
 8002c94:	4b52      	ldr	r3, [pc, #328]	; (8002de0 <Control_Task+0x740>)
 8002c96:	781b      	ldrb	r3, [r3, #0]
 8002c98:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002c9c:	4b4f      	ldr	r3, [pc, #316]	; (8002ddc <Control_Task+0x73c>)
 8002c9e:	785b      	ldrb	r3, [r3, #1]
 8002ca0:	4618      	mov	r0, r3
 8002ca2:	4950      	ldr	r1, [pc, #320]	; (8002de4 <Control_Task+0x744>)
 8002ca4:	4613      	mov	r3, r2
 8002ca6:	009b      	lsls	r3, r3, #2
 8002ca8:	4413      	add	r3, r2
 8002caa:	00db      	lsls	r3, r3, #3
 8002cac:	440b      	add	r3, r1
 8002cae:	4403      	add	r3, r0
 8002cb0:	330c      	adds	r3, #12
 8002cb2:	781a      	ldrb	r2, [r3, #0]
 8002cb4:	4b4a      	ldr	r3, [pc, #296]	; (8002de0 <Control_Task+0x740>)
 8002cb6:	705a      	strb	r2, [r3, #1]
		dir[NEXT]=N(pos[MY]).directions[bestNb[NEXT]];//már most tudjuk, mi lesz az irányunk, ha odaértünk
 8002cb8:	4b49      	ldr	r3, [pc, #292]	; (8002de0 <Control_Task+0x740>)
 8002cba:	781b      	ldrb	r3, [r3, #0]
 8002cbc:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002cc0:	4b46      	ldr	r3, [pc, #280]	; (8002ddc <Control_Task+0x73c>)
 8002cc2:	785b      	ldrb	r3, [r3, #1]
 8002cc4:	4618      	mov	r0, r3
 8002cc6:	4947      	ldr	r1, [pc, #284]	; (8002de4 <Control_Task+0x744>)
 8002cc8:	4613      	mov	r3, r2
 8002cca:	009b      	lsls	r3, r3, #2
 8002ccc:	4413      	add	r3, r2
 8002cce:	00db      	lsls	r3, r3, #3
 8002cd0:	440b      	add	r3, r1
 8002cd2:	4403      	add	r3, r0
 8002cd4:	3312      	adds	r3, #18
 8002cd6:	781a      	ldrb	r2, [r3, #0]
 8002cd8:	4b43      	ldr	r3, [pc, #268]	; (8002de8 <Control_Task+0x748>)
 8002cda:	705a      	strb	r2, [r3, #1]

		//a kocsi az egyik node-ból átmegy egy másikba-> az irányok segítségével meghatározzu az új orientationt
		if(bestNb[NEXT] < NEIGHBOUR4) //ha balra/fel kell majd mennünk a nextPosition -höz
 8002cdc:	4b3f      	ldr	r3, [pc, #252]	; (8002ddc <Control_Task+0x73c>)
 8002cde:	785b      	ldrb	r3, [r3, #1]
 8002ce0:	2b02      	cmp	r3, #2
 8002ce2:	d813      	bhi.n	8002d0c <Control_Task+0x66c>
		{
			if(dir[MY]==2)//és eddig jobbra/fel mentünk,
 8002ce4:	4b40      	ldr	r3, [pc, #256]	; (8002de8 <Control_Task+0x748>)
 8002ce6:	781b      	ldrb	r3, [r3, #0]
 8002ce8:	2b02      	cmp	r3, #2
 8002cea:	d10a      	bne.n	8002d02 <Control_Task+0x662>
				nextOri = !orientation;//akkor most orientációt kell váltanunk
 8002cec:	4b3f      	ldr	r3, [pc, #252]	; (8002dec <Control_Task+0x74c>)
 8002cee:	781b      	ldrb	r3, [r3, #0]
 8002cf0:	2b00      	cmp	r3, #0
 8002cf2:	bf0c      	ite	eq
 8002cf4:	2301      	moveq	r3, #1
 8002cf6:	2300      	movne	r3, #0
 8002cf8:	b2db      	uxtb	r3, r3
 8002cfa:	461a      	mov	r2, r3
 8002cfc:	4b3c      	ldr	r3, [pc, #240]	; (8002df0 <Control_Task+0x750>)
 8002cfe:	701a      	strb	r2, [r3, #0]
 8002d00:	e017      	b.n	8002d32 <Control_Task+0x692>
			else nextOri = orientation; //különben nem kell
 8002d02:	4b3a      	ldr	r3, [pc, #232]	; (8002dec <Control_Task+0x74c>)
 8002d04:	781a      	ldrb	r2, [r3, #0]
 8002d06:	4b3a      	ldr	r3, [pc, #232]	; (8002df0 <Control_Task+0x750>)
 8002d08:	701a      	strb	r2, [r3, #0]
 8002d0a:	e012      	b.n	8002d32 <Control_Task+0x692>
		}
		else //ha jobbra/le kell majd mennünk
		{
			if(dir[MY]==1)//és eddig balra/fel mentünk,
 8002d0c:	4b36      	ldr	r3, [pc, #216]	; (8002de8 <Control_Task+0x748>)
 8002d0e:	781b      	ldrb	r3, [r3, #0]
 8002d10:	2b01      	cmp	r3, #1
 8002d12:	d10a      	bne.n	8002d2a <Control_Task+0x68a>
				nextOri =! orientation;//akkor most irányt kell váltanunk
 8002d14:	4b35      	ldr	r3, [pc, #212]	; (8002dec <Control_Task+0x74c>)
 8002d16:	781b      	ldrb	r3, [r3, #0]
 8002d18:	2b00      	cmp	r3, #0
 8002d1a:	bf0c      	ite	eq
 8002d1c:	2301      	moveq	r3, #1
 8002d1e:	2300      	movne	r3, #0
 8002d20:	b2db      	uxtb	r3, r3
 8002d22:	461a      	mov	r2, r3
 8002d24:	4b32      	ldr	r3, [pc, #200]	; (8002df0 <Control_Task+0x750>)
 8002d26:	701a      	strb	r2, [r3, #0]
 8002d28:	e003      	b.n	8002d32 <Control_Task+0x692>
			else nextOri = orientation; //különben nem kell
 8002d2a:	4b30      	ldr	r3, [pc, #192]	; (8002dec <Control_Task+0x74c>)
 8002d2c:	781a      	ldrb	r2, [r3, #0]
 8002d2e:	4b30      	ldr	r3, [pc, #192]	; (8002df0 <Control_Task+0x750>)
 8002d30:	701a      	strb	r2, [r3, #0]
		}

		//path kiválasztás -> az orientációt mostmár tudjuk (tolatás/előre), már csak az ösvény kell kivákasztani, hogy a megfelelő szomszédhoz jussunk

		if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)nextPath=LEFT;
 8002d32:	4b2a      	ldr	r3, [pc, #168]	; (8002ddc <Control_Task+0x73c>)
 8002d34:	785b      	ldrb	r3, [r3, #1]
 8002d36:	2b00      	cmp	r3, #0
 8002d38:	d003      	beq.n	8002d42 <Control_Task+0x6a2>
 8002d3a:	4b28      	ldr	r3, [pc, #160]	; (8002ddc <Control_Task+0x73c>)
 8002d3c:	785b      	ldrb	r3, [r3, #1]
 8002d3e:	2b03      	cmp	r3, #3
 8002d40:	d103      	bne.n	8002d4a <Control_Task+0x6aa>
 8002d42:	4b2c      	ldr	r3, [pc, #176]	; (8002df4 <Control_Task+0x754>)
 8002d44:	2200      	movs	r2, #0
 8002d46:	701a      	strb	r2, [r3, #0]
 8002d48:	e016      	b.n	8002d78 <Control_Task+0x6d8>
		else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)nextPath=MIDDLE;
 8002d4a:	4b24      	ldr	r3, [pc, #144]	; (8002ddc <Control_Task+0x73c>)
 8002d4c:	785b      	ldrb	r3, [r3, #1]
 8002d4e:	2b01      	cmp	r3, #1
 8002d50:	d003      	beq.n	8002d5a <Control_Task+0x6ba>
 8002d52:	4b22      	ldr	r3, [pc, #136]	; (8002ddc <Control_Task+0x73c>)
 8002d54:	785b      	ldrb	r3, [r3, #1]
 8002d56:	2b04      	cmp	r3, #4
 8002d58:	d103      	bne.n	8002d62 <Control_Task+0x6c2>
 8002d5a:	4b26      	ldr	r3, [pc, #152]	; (8002df4 <Control_Task+0x754>)
 8002d5c:	2201      	movs	r2, #1
 8002d5e:	701a      	strb	r2, [r3, #0]
 8002d60:	e00a      	b.n	8002d78 <Control_Task+0x6d8>
		else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)nextPath=RIGHT;
 8002d62:	4b1e      	ldr	r3, [pc, #120]	; (8002ddc <Control_Task+0x73c>)
 8002d64:	785b      	ldrb	r3, [r3, #1]
 8002d66:	2b02      	cmp	r3, #2
 8002d68:	d003      	beq.n	8002d72 <Control_Task+0x6d2>
 8002d6a:	4b1c      	ldr	r3, [pc, #112]	; (8002ddc <Control_Task+0x73c>)
 8002d6c:	785b      	ldrb	r3, [r3, #1]
 8002d6e:	2b05      	cmp	r3, #5
 8002d70:	d102      	bne.n	8002d78 <Control_Task+0x6d8>
 8002d72:	4b20      	ldr	r3, [pc, #128]	; (8002df4 <Control_Task+0x754>)
 8002d74:	2202      	movs	r2, #2
 8002d76:	701a      	strb	r2, [r3, #0]

		control_task_state=NEIGHBOUR1;
 8002d78:	4b14      	ldr	r3, [pc, #80]	; (8002dcc <Control_Task+0x72c>)
 8002d7a:	2200      	movs	r2, #0
 8002d7c:	701a      	strb	r2, [r3, #0]
		return;
 8002d7e:	e020      	b.n	8002dc2 <Control_Task+0x722>
	}
	/**************************************************************************************/

	/**********ÜTKÖZÉSELKERÜLÉS VÁRAKOZÁSSAL (control_task_state=EVALUATE ->6.állapot)***********/
	else if(control_task_state==WAIT)
 8002d80:	4b12      	ldr	r3, [pc, #72]	; (8002dcc <Control_Task+0x72c>)
 8002d82:	781b      	ldrb	r3, [r3, #0]
 8002d84:	2b07      	cmp	r3, #7
 8002d86:	d11c      	bne.n	8002dc2 <Control_Task+0x722>
	{
		if(tick-t_stamp<4000)
 8002d88:	4b1b      	ldr	r3, [pc, #108]	; (8002df8 <Control_Task+0x758>)
 8002d8a:	681b      	ldr	r3, [r3, #0]
 8002d8c:	687a      	ldr	r2, [r7, #4]
 8002d8e:	1ad3      	subs	r3, r2, r3
 8002d90:	f5b3 6f7a 	cmp.w	r3, #4000	; 0xfa0
 8002d94:	d206      	bcs.n	8002da4 <Control_Task+0x704>
		{
			v_control=STOP;
 8002d96:	4b19      	ldr	r3, [pc, #100]	; (8002dfc <Control_Task+0x75c>)
 8002d98:	2200      	movs	r2, #0
 8002d9a:	701a      	strb	r2, [r3, #0]
			control_task_state=WAIT;
 8002d9c:	4b0b      	ldr	r3, [pc, #44]	; (8002dcc <Control_Task+0x72c>)
 8002d9e:	2207      	movs	r2, #7
 8002da0:	701a      	strb	r2, [r3, #0]
 8002da2:	e00e      	b.n	8002dc2 <Control_Task+0x722>
		}
		else
		{
			LED_G(0);
 8002da4:	2201      	movs	r2, #1
 8002da6:	2102      	movs	r1, #2
 8002da8:	4815      	ldr	r0, [pc, #84]	; (8002e00 <Control_Task+0x760>)
 8002daa:	f006 fa79 	bl	80092a0 <HAL_GPIO_WritePin>
			v_control=NORMAL_VEL;
 8002dae:	4b13      	ldr	r3, [pc, #76]	; (8002dfc <Control_Task+0x75c>)
 8002db0:	2202      	movs	r2, #2
 8002db2:	701a      	strb	r2, [r3, #0]
			control_task_state=NEIGHBOUR1;
 8002db4:	4b05      	ldr	r3, [pc, #20]	; (8002dcc <Control_Task+0x72c>)
 8002db6:	2200      	movs	r2, #0
 8002db8:	701a      	strb	r2, [r3, #0]
 8002dba:	e002      	b.n	8002dc2 <Control_Task+0x722>
	if(control_task_tick>tick)return;
 8002dbc:	bf00      	nop
 8002dbe:	e000      	b.n	8002dc2 <Control_Task+0x722>
	if(mode!=SKILL || laneChange!=1)return;
 8002dc0:	bf00      	nop
		}
	}
	/**************************************************************************************/
}
 8002dc2:	3720      	adds	r7, #32
 8002dc4:	46bd      	mov	sp, r7
 8002dc6:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8002dca:	bf00      	nop
 8002dcc:	200006ef 	.word	0x200006ef
 8002dd0:	200006fc 	.word	0x200006fc
 8002dd4:	c3160000 	.word	0xc3160000
 8002dd8:	20000008 	.word	0x20000008
 8002ddc:	200006dc 	.word	0x200006dc
 8002de0:	20000358 	.word	0x20000358
 8002de4:	20000360 	.word	0x20000360
 8002de8:	2000035c 	.word	0x2000035c
 8002dec:	20000344 	.word	0x20000344
 8002df0:	200006f5 	.word	0x200006f5
 8002df4:	200006f4 	.word	0x200006f4
 8002df8:	200006f0 	.word	0x200006f0
 8002dfc:	20000349 	.word	0x20000349
 8002e00:	40020400 	.word	0x40020400
 8002e04:	00000000 	.word	0x00000000

08002e08 <Control_Task_2>:

void Control_Task_2(UART_HandleTypeDef *huart_debugg,uint32_t tick, uint32_t period)
{
 8002e08:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8002e0c:	b084      	sub	sp, #16
 8002e0e:	af00      	add	r7, sp, #0
 8002e10:	60f8      	str	r0, [r7, #12]
 8002e12:	60b9      	str	r1, [r7, #8]
 8002e14:	607a      	str	r2, [r7, #4]
	static uint8_t i=0;
	static char str[30];

	static uint32_t control_task_2_tick = 0;

	if(mode!=SKILL || laneChange)return;
 8002e16:	4baa      	ldr	r3, [pc, #680]	; (80030c0 <Control_Task_2+0x2b8>)
 8002e18:	781b      	ldrb	r3, [r3, #0]
 8002e1a:	2b52      	cmp	r3, #82	; 0x52
 8002e1c:	f040 84c2 	bne.w	80037a4 <Control_Task_2+0x99c>
 8002e20:	4ba8      	ldr	r3, [pc, #672]	; (80030c4 <Control_Task_2+0x2bc>)
 8002e22:	781b      	ldrb	r3, [r3, #0]
 8002e24:	2b00      	cmp	r3, #0
 8002e26:	f040 84bd 	bne.w	80037a4 <Control_Task_2+0x99c>

	else if(control_task_2_tick>tick)return;
 8002e2a:	4ba7      	ldr	r3, [pc, #668]	; (80030c8 <Control_Task_2+0x2c0>)
 8002e2c:	681b      	ldr	r3, [r3, #0]
 8002e2e:	68ba      	ldr	r2, [r7, #8]
 8002e30:	429a      	cmp	r2, r3
 8002e32:	f0c0 84b9 	bcc.w	80037a8 <Control_Task_2+0x9a0>
	control_task_2_tick=tick+period;
 8002e36:	68ba      	ldr	r2, [r7, #8]
 8002e38:	687b      	ldr	r3, [r7, #4]
 8002e3a:	4413      	add	r3, r2
 8002e3c:	4aa2      	ldr	r2, [pc, #648]	; (80030c8 <Control_Task_2+0x2c0>)
 8002e3e:	6013      	str	r3, [r2, #0]

	//ha kapu nélküli nodeba tartunk éppen, akkor időzítéssel "detektáljuk" a nodot
/**/
	if(N(pos[MY]).type>2 && control_task_2_state==2)
 8002e40:	4ba2      	ldr	r3, [pc, #648]	; (80030cc <Control_Task_2+0x2c4>)
 8002e42:	781b      	ldrb	r3, [r3, #0]
 8002e44:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002e48:	49a1      	ldr	r1, [pc, #644]	; (80030d0 <Control_Task_2+0x2c8>)
 8002e4a:	4613      	mov	r3, r2
 8002e4c:	009b      	lsls	r3, r3, #2
 8002e4e:	4413      	add	r3, r2
 8002e50:	00db      	lsls	r3, r3, #3
 8002e52:	440b      	add	r3, r1
 8002e54:	3308      	adds	r3, #8
 8002e56:	681b      	ldr	r3, [r3, #0]
 8002e58:	2b02      	cmp	r3, #2
 8002e5a:	d950      	bls.n	8002efe <Control_Task_2+0xf6>
 8002e5c:	4b9d      	ldr	r3, [pc, #628]	; (80030d4 <Control_Task_2+0x2cc>)
 8002e5e:	781b      	ldrb	r3, [r3, #0]
 8002e60:	2b02      	cmp	r3, #2
 8002e62:	d14c      	bne.n	8002efe <Control_Task_2+0xf6>
	{
		s += (float)(tick-tick_prev)*fabs(v)/10000;
 8002e64:	4b9c      	ldr	r3, [pc, #624]	; (80030d8 <Control_Task_2+0x2d0>)
 8002e66:	681b      	ldr	r3, [r3, #0]
 8002e68:	4618      	mov	r0, r3
 8002e6a:	f7fd fb8d 	bl	8000588 <__aeabi_f2d>
 8002e6e:	4604      	mov	r4, r0
 8002e70:	460d      	mov	r5, r1
 8002e72:	4b9a      	ldr	r3, [pc, #616]	; (80030dc <Control_Task_2+0x2d4>)
 8002e74:	681b      	ldr	r3, [r3, #0]
 8002e76:	68ba      	ldr	r2, [r7, #8]
 8002e78:	1ad3      	subs	r3, r2, r3
 8002e7a:	ee07 3a90 	vmov	s15, r3
 8002e7e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002e82:	ee17 0a90 	vmov	r0, s15
 8002e86:	f7fd fb7f 	bl	8000588 <__aeabi_f2d>
 8002e8a:	4680      	mov	r8, r0
 8002e8c:	4689      	mov	r9, r1
 8002e8e:	4b94      	ldr	r3, [pc, #592]	; (80030e0 <Control_Task_2+0x2d8>)
 8002e90:	edd3 7a00 	vldr	s15, [r3]
 8002e94:	eef0 7ae7 	vabs.f32	s15, s15
 8002e98:	ee17 0a90 	vmov	r0, s15
 8002e9c:	f7fd fb74 	bl	8000588 <__aeabi_f2d>
 8002ea0:	4602      	mov	r2, r0
 8002ea2:	460b      	mov	r3, r1
 8002ea4:	4640      	mov	r0, r8
 8002ea6:	4649      	mov	r1, r9
 8002ea8:	f7fd fbc6 	bl	8000638 <__aeabi_dmul>
 8002eac:	4602      	mov	r2, r0
 8002eae:	460b      	mov	r3, r1
 8002eb0:	4610      	mov	r0, r2
 8002eb2:	4619      	mov	r1, r3
 8002eb4:	a380      	add	r3, pc, #512	; (adr r3, 80030b8 <Control_Task_2+0x2b0>)
 8002eb6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002eba:	f7fd fce7 	bl	800088c <__aeabi_ddiv>
 8002ebe:	4602      	mov	r2, r0
 8002ec0:	460b      	mov	r3, r1
 8002ec2:	4620      	mov	r0, r4
 8002ec4:	4629      	mov	r1, r5
 8002ec6:	f7fd fa01 	bl	80002cc <__adddf3>
 8002eca:	4602      	mov	r2, r0
 8002ecc:	460b      	mov	r3, r1
 8002ece:	4610      	mov	r0, r2
 8002ed0:	4619      	mov	r1, r3
 8002ed2:	f7fd fe89 	bl	8000be8 <__aeabi_d2f>
 8002ed6:	4603      	mov	r3, r0
 8002ed8:	4a7f      	ldr	r2, [pc, #508]	; (80030d8 <Control_Task_2+0x2d0>)
 8002eda:	6013      	str	r3, [r2, #0]
		/*sprintf(str,"%4.0f\n\r",s);
		HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);*/
		if(s>sMAX)
 8002edc:	4b7e      	ldr	r3, [pc, #504]	; (80030d8 <Control_Task_2+0x2d0>)
 8002ede:	ed93 7a00 	vldr	s14, [r3]
 8002ee2:	4b80      	ldr	r3, [pc, #512]	; (80030e4 <Control_Task_2+0x2dc>)
 8002ee4:	edd3 7a00 	vldr	s15, [r3]
 8002ee8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002eec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002ef0:	dd05      	ble.n	8002efe <Control_Task_2+0xf6>
		{
			/*sprintf(str,"hehe %3.2f\n\r",sMAX);
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);*/
			nodeDetected=1;
 8002ef2:	4b7d      	ldr	r3, [pc, #500]	; (80030e8 <Control_Task_2+0x2e0>)
 8002ef4:	2201      	movs	r2, #1
 8002ef6:	701a      	strb	r2, [r3, #0]
			sMAX=30000;
 8002ef8:	4b7a      	ldr	r3, [pc, #488]	; (80030e4 <Control_Task_2+0x2dc>)
 8002efa:	4a7c      	ldr	r2, [pc, #496]	; (80030ec <Control_Task_2+0x2e4>)
 8002efc:	601a      	str	r2, [r3, #0]
		}
	}
	tick_prev=tick;
 8002efe:	4a77      	ldr	r2, [pc, #476]	; (80030dc <Control_Task_2+0x2d4>)
 8002f00:	68bb      	ldr	r3, [r7, #8]
 8002f02:	6013      	str	r3, [r2, #0]

	if(thunderboardFlag==1)		//uj adat erkezik (minden 200ms)
 8002f04:	4b7a      	ldr	r3, [pc, #488]	; (80030f0 <Control_Task_2+0x2e8>)
 8002f06:	781b      	ldrb	r3, [r3, #0]
 8002f08:	b2db      	uxtb	r3, r3
 8002f0a:	2b01      	cmp	r3, #1
 8002f0c:	d14f      	bne.n	8002fae <Control_Task_2+0x1a6>
	{
		if(piratePos_prev[1]!=piratePos[1])//a kalóz átment egy Node-on
 8002f0e:	4b79      	ldr	r3, [pc, #484]	; (80030f4 <Control_Task_2+0x2ec>)
 8002f10:	785a      	ldrb	r2, [r3, #1]
 8002f12:	4b79      	ldr	r3, [pc, #484]	; (80030f8 <Control_Task_2+0x2f0>)
 8002f14:	785b      	ldrb	r3, [r3, #1]
 8002f16:	429a      	cmp	r2, r3
 8002f18:	d036      	beq.n	8002f88 <Control_Task_2+0x180>
		{
			if(N(piratePos[0]).worth > 0)
 8002f1a:	4b77      	ldr	r3, [pc, #476]	; (80030f8 <Control_Task_2+0x2f0>)
 8002f1c:	781b      	ldrb	r3, [r3, #0]
 8002f1e:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002f22:	496b      	ldr	r1, [pc, #428]	; (80030d0 <Control_Task_2+0x2c8>)
 8002f24:	4613      	mov	r3, r2
 8002f26:	009b      	lsls	r3, r3, #2
 8002f28:	4413      	add	r3, r2
 8002f2a:	00db      	lsls	r3, r3, #3
 8002f2c:	440b      	add	r3, r1
 8002f2e:	3304      	adds	r3, #4
 8002f30:	681b      	ldr	r3, [r3, #0]
 8002f32:	2b00      	cmp	r3, #0
 8002f34:	dd1b      	ble.n	8002f6e <Control_Task_2+0x166>
			{
				N(piratePos[0]).worth--; //az a node már kevesebbet ér
 8002f36:	4b70      	ldr	r3, [pc, #448]	; (80030f8 <Control_Task_2+0x2f0>)
 8002f38:	781b      	ldrb	r3, [r3, #0]
 8002f3a:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002f3e:	4964      	ldr	r1, [pc, #400]	; (80030d0 <Control_Task_2+0x2c8>)
 8002f40:	4613      	mov	r3, r2
 8002f42:	009b      	lsls	r3, r3, #2
 8002f44:	4413      	add	r3, r2
 8002f46:	00db      	lsls	r3, r3, #3
 8002f48:	440b      	add	r3, r1
 8002f4a:	3304      	adds	r3, #4
 8002f4c:	681b      	ldr	r3, [r3, #0]
 8002f4e:	1e59      	subs	r1, r3, #1
 8002f50:	485f      	ldr	r0, [pc, #380]	; (80030d0 <Control_Task_2+0x2c8>)
 8002f52:	4613      	mov	r3, r2
 8002f54:	009b      	lsls	r3, r3, #2
 8002f56:	4413      	add	r3, r2
 8002f58:	00db      	lsls	r3, r3, #3
 8002f5a:	4403      	add	r3, r0
 8002f5c:	3304      	adds	r3, #4
 8002f5e:	6019      	str	r1, [r3, #0]
				collectedPoints ++;
 8002f60:	4b66      	ldr	r3, [pc, #408]	; (80030fc <Control_Task_2+0x2f4>)
 8002f62:	781b      	ldrb	r3, [r3, #0]
 8002f64:	3301      	adds	r3, #1
 8002f66:	b2da      	uxtb	r2, r3
 8002f68:	4b64      	ldr	r3, [pc, #400]	; (80030fc <Control_Task_2+0x2f4>)
 8002f6a:	701a      	strb	r2, [r3, #0]
 8002f6c:	e00c      	b.n	8002f88 <Control_Task_2+0x180>
			}
			else N(piratePos[0]).worth=0;
 8002f6e:	4b62      	ldr	r3, [pc, #392]	; (80030f8 <Control_Task_2+0x2f0>)
 8002f70:	781b      	ldrb	r3, [r3, #0]
 8002f72:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002f76:	4956      	ldr	r1, [pc, #344]	; (80030d0 <Control_Task_2+0x2c8>)
 8002f78:	4613      	mov	r3, r2
 8002f7a:	009b      	lsls	r3, r3, #2
 8002f7c:	4413      	add	r3, r2
 8002f7e:	00db      	lsls	r3, r3, #3
 8002f80:	440b      	add	r3, r1
 8002f82:	3304      	adds	r3, #4
 8002f84:	2200      	movs	r2, #0
 8002f86:	601a      	str	r2, [r3, #0]
		}
		piratePos_prev[0]=piratePos[0];//előző kalozpozíció frissítése P
 8002f88:	4b5b      	ldr	r3, [pc, #364]	; (80030f8 <Control_Task_2+0x2f0>)
 8002f8a:	781a      	ldrb	r2, [r3, #0]
 8002f8c:	4b59      	ldr	r3, [pc, #356]	; (80030f4 <Control_Task_2+0x2ec>)
 8002f8e:	701a      	strb	r2, [r3, #0]
		piratePos_prev[1]=piratePos[1];			//M
 8002f90:	4b59      	ldr	r3, [pc, #356]	; (80030f8 <Control_Task_2+0x2f0>)
 8002f92:	785a      	ldrb	r2, [r3, #1]
 8002f94:	4b57      	ldr	r3, [pc, #348]	; (80030f4 <Control_Task_2+0x2ec>)
 8002f96:	705a      	strb	r2, [r3, #1]
		piratePos_prev[2]=piratePos[2];			//K
 8002f98:	4b57      	ldr	r3, [pc, #348]	; (80030f8 <Control_Task_2+0x2f0>)
 8002f9a:	789a      	ldrb	r2, [r3, #2]
 8002f9c:	4b55      	ldr	r3, [pc, #340]	; (80030f4 <Control_Task_2+0x2ec>)
 8002f9e:	709a      	strb	r2, [r3, #2]
		piratePos_prev[3]=piratePos[3];			//65
 8002fa0:	4b55      	ldr	r3, [pc, #340]	; (80030f8 <Control_Task_2+0x2f0>)
 8002fa2:	78da      	ldrb	r2, [r3, #3]
 8002fa4:	4b53      	ldr	r3, [pc, #332]	; (80030f4 <Control_Task_2+0x2ec>)
 8002fa6:	70da      	strb	r2, [r3, #3]


		thunderboardFlag=0;
 8002fa8:	4b51      	ldr	r3, [pc, #324]	; (80030f0 <Control_Task_2+0x2e8>)
 8002faa:	2200      	movs	r2, #0
 8002fac:	701a      	strb	r2, [r3, #0]
	}
	if(piratePos_prev[0]==0)return; //ha nem kaptunk még adatot a TB-tol return
 8002fae:	4b51      	ldr	r3, [pc, #324]	; (80030f4 <Control_Task_2+0x2ec>)
 8002fb0:	781b      	ldrb	r3, [r3, #0]
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	f000 83fa 	beq.w	80037ac <Control_Task_2+0x9a4>


	if(control_task_2_state==0)
 8002fb8:	4b46      	ldr	r3, [pc, #280]	; (80030d4 <Control_Task_2+0x2cc>)
 8002fba:	781b      	ldrb	r3, [r3, #0]
 8002fbc:	2b00      	cmp	r3, #0
 8002fbe:	f040 81b0 	bne.w	8003322 <Control_Task_2+0x51a>
	{

		if(nodeDetected)
 8002fc2:	4b49      	ldr	r3, [pc, #292]	; (80030e8 <Control_Task_2+0x2e0>)
 8002fc4:	781b      	ldrb	r3, [r3, #0]
 8002fc6:	2b00      	cmp	r3, #0
 8002fc8:	f000 80e6 	beq.w	8003198 <Control_Task_2+0x390>
		{
			LED_B_TOGGLE;
 8002fcc:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8002fd0:	484b      	ldr	r0, [pc, #300]	; (8003100 <Control_Task_2+0x2f8>)
 8002fd2:	f006 f97e 	bl	80092d2 <HAL_GPIO_TogglePin>
			//pontok nyugtázása
			collectedPoints +=N(pos[MY]).worth;//sávváltás módik vizsgáljuk az össezgyűjtött kapuk számát
 8002fd6:	4b3d      	ldr	r3, [pc, #244]	; (80030cc <Control_Task_2+0x2c4>)
 8002fd8:	781b      	ldrb	r3, [r3, #0]
 8002fda:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002fde:	493c      	ldr	r1, [pc, #240]	; (80030d0 <Control_Task_2+0x2c8>)
 8002fe0:	4613      	mov	r3, r2
 8002fe2:	009b      	lsls	r3, r3, #2
 8002fe4:	4413      	add	r3, r2
 8002fe6:	00db      	lsls	r3, r3, #3
 8002fe8:	440b      	add	r3, r1
 8002fea:	3304      	adds	r3, #4
 8002fec:	681b      	ldr	r3, [r3, #0]
 8002fee:	b2da      	uxtb	r2, r3
 8002ff0:	4b42      	ldr	r3, [pc, #264]	; (80030fc <Control_Task_2+0x2f4>)
 8002ff2:	781b      	ldrb	r3, [r3, #0]
 8002ff4:	4413      	add	r3, r2
 8002ff6:	b2da      	uxtb	r2, r3
 8002ff8:	4b40      	ldr	r3, [pc, #256]	; (80030fc <Control_Task_2+0x2f4>)
 8002ffa:	701a      	strb	r2, [r3, #0]
			N(pos[MY]).worth=0;//ez a kapu már nem ér pontot
 8002ffc:	4b33      	ldr	r3, [pc, #204]	; (80030cc <Control_Task_2+0x2c4>)
 8002ffe:	781b      	ldrb	r3, [r3, #0]
 8003000:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003004:	4932      	ldr	r1, [pc, #200]	; (80030d0 <Control_Task_2+0x2c8>)
 8003006:	4613      	mov	r3, r2
 8003008:	009b      	lsls	r3, r3, #2
 800300a:	4413      	add	r3, r2
 800300c:	00db      	lsls	r3, r3, #3
 800300e:	440b      	add	r3, r1
 8003010:	3304      	adds	r3, #4
 8003012:	2200      	movs	r2, #0
 8003014:	601a      	str	r2, [r3, #0]

			sprintf(str,"%d\n\r",collectedPoints);
 8003016:	4b39      	ldr	r3, [pc, #228]	; (80030fc <Control_Task_2+0x2f4>)
 8003018:	781b      	ldrb	r3, [r3, #0]
 800301a:	461a      	mov	r2, r3
 800301c:	4939      	ldr	r1, [pc, #228]	; (8003104 <Control_Task_2+0x2fc>)
 800301e:	483a      	ldr	r0, [pc, #232]	; (8003108 <Control_Task_2+0x300>)
 8003020:	f00a fbfa 	bl	800d818 <siprintf>
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);
 8003024:	4838      	ldr	r0, [pc, #224]	; (8003108 <Control_Task_2+0x300>)
 8003026:	f7fd f8f3 	bl	8000210 <strlen>
 800302a:	4603      	mov	r3, r0
 800302c:	b29a      	uxth	r2, r3
 800302e:	2303      	movs	r3, #3
 8003030:	4935      	ldr	r1, [pc, #212]	; (8003108 <Control_Task_2+0x300>)
 8003032:	68f8      	ldr	r0, [r7, #12]
 8003034:	f008 fe87 	bl	800bd46 <HAL_UART_Transmit>

			if (route[route_index+2]==0)//még nincs kész az eléállás
 8003038:	4b34      	ldr	r3, [pc, #208]	; (800310c <Control_Task_2+0x304>)
 800303a:	781b      	ldrb	r3, [r3, #0]
 800303c:	3302      	adds	r3, #2
 800303e:	4a34      	ldr	r2, [pc, #208]	; (8003110 <Control_Task_2+0x308>)
 8003040:	5cd3      	ldrb	r3, [r2, r3]
 8003042:	2b00      	cmp	r3, #0
 8003044:	d105      	bne.n	8003052 <Control_Task_2+0x24a>
			{
				//WAITING
				v_control=STOP;
 8003046:	4b33      	ldr	r3, [pc, #204]	; (8003114 <Control_Task_2+0x30c>)
 8003048:	2200      	movs	r2, #0
 800304a:	701a      	strb	r2, [r3, #0]
				control_task_2_state=1;
 800304c:	4b21      	ldr	r3, [pc, #132]	; (80030d4 <Control_Task_2+0x2cc>)
 800304e:	2201      	movs	r2, #1
 8003050:	701a      	strb	r2, [r3, #0]

			}

			pos[MY]=pos[NEXT]; //route 2 eetén a végén még hulyeség kerül ide
 8003052:	4b1e      	ldr	r3, [pc, #120]	; (80030cc <Control_Task_2+0x2c4>)
 8003054:	785a      	ldrb	r2, [r3, #1]
 8003056:	4b1d      	ldr	r3, [pc, #116]	; (80030cc <Control_Task_2+0x2c4>)
 8003058:	701a      	strb	r2, [r3, #0]
			pos[NEXT]=route[route_index+1];
 800305a:	4b2c      	ldr	r3, [pc, #176]	; (800310c <Control_Task_2+0x304>)
 800305c:	781b      	ldrb	r3, [r3, #0]
 800305e:	3301      	adds	r3, #1
 8003060:	4a2b      	ldr	r2, [pc, #172]	; (8003110 <Control_Task_2+0x308>)
 8003062:	5cd2      	ldrb	r2, [r2, r3]
 8003064:	4b19      	ldr	r3, [pc, #100]	; (80030cc <Control_Task_2+0x2c4>)
 8003066:	705a      	strb	r2, [r3, #1]
			nodeDetected=0;
 8003068:	4b1f      	ldr	r3, [pc, #124]	; (80030e8 <Control_Task_2+0x2e0>)
 800306a:	2200      	movs	r2, #0
 800306c:	701a      	strb	r2, [r3, #0]
			route_index++;
 800306e:	4b27      	ldr	r3, [pc, #156]	; (800310c <Control_Task_2+0x304>)
 8003070:	781b      	ldrb	r3, [r3, #0]
 8003072:	3301      	adds	r3, #1
 8003074:	b2da      	uxtb	r2, r3
 8003076:	4b25      	ldr	r3, [pc, #148]	; (800310c <Control_Task_2+0x304>)
 8003078:	701a      	strb	r2, [r3, #0]

			for(i=0; i<6;i++)
 800307a:	4b27      	ldr	r3, [pc, #156]	; (8003118 <Control_Task_2+0x310>)
 800307c:	2200      	movs	r2, #0
 800307e:	701a      	strb	r2, [r3, #0]
 8003080:	e054      	b.n	800312c <Control_Task_2+0x324>
			{
				if (N(pos[MY]).neighbours[i]==pos[NEXT])//O=O-2
 8003082:	4b12      	ldr	r3, [pc, #72]	; (80030cc <Control_Task_2+0x2c4>)
 8003084:	781b      	ldrb	r3, [r3, #0]
 8003086:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800308a:	4b23      	ldr	r3, [pc, #140]	; (8003118 <Control_Task_2+0x310>)
 800308c:	781b      	ldrb	r3, [r3, #0]
 800308e:	4618      	mov	r0, r3
 8003090:	490f      	ldr	r1, [pc, #60]	; (80030d0 <Control_Task_2+0x2c8>)
 8003092:	4613      	mov	r3, r2
 8003094:	009b      	lsls	r3, r3, #2
 8003096:	4413      	add	r3, r2
 8003098:	00db      	lsls	r3, r3, #3
 800309a:	440b      	add	r3, r1
 800309c:	4403      	add	r3, r0
 800309e:	330c      	adds	r3, #12
 80030a0:	781a      	ldrb	r2, [r3, #0]
 80030a2:	4b0a      	ldr	r3, [pc, #40]	; (80030cc <Control_Task_2+0x2c4>)
 80030a4:	785b      	ldrb	r3, [r3, #1]
 80030a6:	429a      	cmp	r2, r3
 80030a8:	d13a      	bne.n	8003120 <Control_Task_2+0x318>
				{
					bestNb[NEXT]=i;
 80030aa:	4b1b      	ldr	r3, [pc, #108]	; (8003118 <Control_Task_2+0x310>)
 80030ac:	781a      	ldrb	r2, [r3, #0]
 80030ae:	4b1b      	ldr	r3, [pc, #108]	; (800311c <Control_Task_2+0x314>)
 80030b0:	705a      	strb	r2, [r3, #1]
					break;// ha megvan akkor breakkel kilépünk a for ciklusból azonnal
 80030b2:	e03f      	b.n	8003134 <Control_Task_2+0x32c>
 80030b4:	f3af 8000 	nop.w
 80030b8:	00000000 	.word	0x00000000
 80030bc:	40c38800 	.word	0x40c38800
 80030c0:	20000336 	.word	0x20000336
 80030c4:	20000348 	.word	0x20000348
 80030c8:	2000070c 	.word	0x2000070c
 80030cc:	20000358 	.word	0x20000358
 80030d0:	20000360 	.word	0x20000360
 80030d4:	20000710 	.word	0x20000710
 80030d8:	20000714 	.word	0x20000714
 80030dc:	20000718 	.word	0x20000718
 80030e0:	20000754 	.word	0x20000754
 80030e4:	2000000c 	.word	0x2000000c
 80030e8:	20000345 	.word	0x20000345
 80030ec:	46ea6000 	.word	0x46ea6000
 80030f0:	2000034a 	.word	0x2000034a
 80030f4:	2000071c 	.word	0x2000071c
 80030f8:	20000354 	.word	0x20000354
 80030fc:	20000347 	.word	0x20000347
 8003100:	40020400 	.word	0x40020400
 8003104:	08011270 	.word	0x08011270
 8003108:	20000720 	.word	0x20000720
 800310c:	2000073e 	.word	0x2000073e
 8003110:	20000740 	.word	0x20000740
 8003114:	20000349 	.word	0x20000349
 8003118:	20000746 	.word	0x20000746
 800311c:	20000748 	.word	0x20000748
			for(i=0; i<6;i++)
 8003120:	4b94      	ldr	r3, [pc, #592]	; (8003374 <Control_Task_2+0x56c>)
 8003122:	781b      	ldrb	r3, [r3, #0]
 8003124:	3301      	adds	r3, #1
 8003126:	b2da      	uxtb	r2, r3
 8003128:	4b92      	ldr	r3, [pc, #584]	; (8003374 <Control_Task_2+0x56c>)
 800312a:	701a      	strb	r2, [r3, #0]
 800312c:	4b91      	ldr	r3, [pc, #580]	; (8003374 <Control_Task_2+0x56c>)
 800312e:	781b      	ldrb	r3, [r3, #0]
 8003130:	2b05      	cmp	r3, #5
 8003132:	d9a6      	bls.n	8003082 <Control_Task_2+0x27a>
				}
			}
			if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)path=LEFT;
 8003134:	4b90      	ldr	r3, [pc, #576]	; (8003378 <Control_Task_2+0x570>)
 8003136:	785b      	ldrb	r3, [r3, #1]
 8003138:	2b00      	cmp	r3, #0
 800313a:	d003      	beq.n	8003144 <Control_Task_2+0x33c>
 800313c:	4b8e      	ldr	r3, [pc, #568]	; (8003378 <Control_Task_2+0x570>)
 800313e:	785b      	ldrb	r3, [r3, #1]
 8003140:	2b03      	cmp	r3, #3
 8003142:	d103      	bne.n	800314c <Control_Task_2+0x344>
 8003144:	4b8d      	ldr	r3, [pc, #564]	; (800337c <Control_Task_2+0x574>)
 8003146:	2200      	movs	r2, #0
 8003148:	701a      	strb	r2, [r3, #0]
 800314a:	e016      	b.n	800317a <Control_Task_2+0x372>
			else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)path=MIDDLE;
 800314c:	4b8a      	ldr	r3, [pc, #552]	; (8003378 <Control_Task_2+0x570>)
 800314e:	785b      	ldrb	r3, [r3, #1]
 8003150:	2b01      	cmp	r3, #1
 8003152:	d003      	beq.n	800315c <Control_Task_2+0x354>
 8003154:	4b88      	ldr	r3, [pc, #544]	; (8003378 <Control_Task_2+0x570>)
 8003156:	785b      	ldrb	r3, [r3, #1]
 8003158:	2b04      	cmp	r3, #4
 800315a:	d103      	bne.n	8003164 <Control_Task_2+0x35c>
 800315c:	4b87      	ldr	r3, [pc, #540]	; (800337c <Control_Task_2+0x574>)
 800315e:	2201      	movs	r2, #1
 8003160:	701a      	strb	r2, [r3, #0]
 8003162:	e00a      	b.n	800317a <Control_Task_2+0x372>
			else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)path=RIGHT;
 8003164:	4b84      	ldr	r3, [pc, #528]	; (8003378 <Control_Task_2+0x570>)
 8003166:	785b      	ldrb	r3, [r3, #1]
 8003168:	2b02      	cmp	r3, #2
 800316a:	d003      	beq.n	8003174 <Control_Task_2+0x36c>
 800316c:	4b82      	ldr	r3, [pc, #520]	; (8003378 <Control_Task_2+0x570>)
 800316e:	785b      	ldrb	r3, [r3, #1]
 8003170:	2b05      	cmp	r3, #5
 8003172:	d102      	bne.n	800317a <Control_Task_2+0x372>
 8003174:	4b81      	ldr	r3, [pc, #516]	; (800337c <Control_Task_2+0x574>)
 8003176:	2202      	movs	r2, #2
 8003178:	701a      	strb	r2, [r3, #0]

#ifdef ADIBUGG
			sprintf(str,"d;\n\r");
 800317a:	4981      	ldr	r1, [pc, #516]	; (8003380 <Control_Task_2+0x578>)
 800317c:	4881      	ldr	r0, [pc, #516]	; (8003384 <Control_Task_2+0x57c>)
 800317e:	f00a fb4b 	bl	800d818 <siprintf>

			str[0]=pos[MY];//honnan
 8003182:	4b81      	ldr	r3, [pc, #516]	; (8003388 <Control_Task_2+0x580>)
 8003184:	781a      	ldrb	r2, [r3, #0]
 8003186:	4b7f      	ldr	r3, [pc, #508]	; (8003384 <Control_Task_2+0x57c>)
 8003188:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 4, 3);
 800318a:	2303      	movs	r3, #3
 800318c:	2204      	movs	r2, #4
 800318e:	497d      	ldr	r1, [pc, #500]	; (8003384 <Control_Task_2+0x57c>)
 8003190:	68f8      	ldr	r0, [r7, #12]
 8003192:	f008 fdd8 	bl	800bd46 <HAL_UART_Transmit>
 8003196:	e1c9      	b.n	800352c <Control_Task_2+0x724>
#endif
		}
		else if(!stage)
 8003198:	4b7c      	ldr	r3, [pc, #496]	; (800338c <Control_Task_2+0x584>)
 800319a:	781b      	ldrb	r3, [r3, #0]
 800319c:	2b00      	cmp	r3, #0
 800319e:	f040 81c5 	bne.w	800352c <Control_Task_2+0x724>
		{
			LED_B_TOGGLE;
 80031a2:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80031a6:	487a      	ldr	r0, [pc, #488]	; (8003390 <Control_Task_2+0x588>)
 80031a8:	f006 f893 	bl	80092d2 <HAL_GPIO_TogglePin>
			switch(piratePos_prev[2])
 80031ac:	4b79      	ldr	r3, [pc, #484]	; (8003394 <Control_Task_2+0x58c>)
 80031ae:	789b      	ldrb	r3, [r3, #2]
 80031b0:	3b48      	subs	r3, #72	; 0x48
 80031b2:	2b09      	cmp	r3, #9
 80031b4:	d842      	bhi.n	800323c <Control_Task_2+0x434>
 80031b6:	a201      	add	r2, pc, #4	; (adr r2, 80031bc <Control_Task_2+0x3b4>)
 80031b8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80031bc:	08003211 	.word	0x08003211
 80031c0:	0800323d 	.word	0x0800323d
 80031c4:	0800323d 	.word	0x0800323d
 80031c8:	080031fb 	.word	0x080031fb
 80031cc:	0800323d 	.word	0x0800323d
 80031d0:	0800323d 	.word	0x0800323d
 80031d4:	08003227 	.word	0x08003227
 80031d8:	0800323d 	.word	0x0800323d
 80031dc:	0800323d 	.word	0x0800323d
 80031e0:	080031e5 	.word	0x080031e5
			{
			case 'Q':
				memcpy(route, route_1,6);
 80031e4:	4b6c      	ldr	r3, [pc, #432]	; (8003398 <Control_Task_2+0x590>)
 80031e6:	4a6d      	ldr	r2, [pc, #436]	; (800339c <Control_Task_2+0x594>)
 80031e8:	e892 0003 	ldmia.w	r2, {r0, r1}
 80031ec:	6018      	str	r0, [r3, #0]
 80031ee:	3304      	adds	r3, #4
 80031f0:	8019      	strh	r1, [r3, #0]
				selected_route=1;
 80031f2:	4b6b      	ldr	r3, [pc, #428]	; (80033a0 <Control_Task_2+0x598>)
 80031f4:	2201      	movs	r2, #1
 80031f6:	701a      	strb	r2, [r3, #0]
				break;
 80031f8:	e020      	b.n	800323c <Control_Task_2+0x434>
			case 'K':
				memcpy(route, route_2,6);
 80031fa:	4b67      	ldr	r3, [pc, #412]	; (8003398 <Control_Task_2+0x590>)
 80031fc:	4a69      	ldr	r2, [pc, #420]	; (80033a4 <Control_Task_2+0x59c>)
 80031fe:	e892 0003 	ldmia.w	r2, {r0, r1}
 8003202:	6018      	str	r0, [r3, #0]
 8003204:	3304      	adds	r3, #4
 8003206:	8019      	strh	r1, [r3, #0]
				selected_route=2;
 8003208:	4b65      	ldr	r3, [pc, #404]	; (80033a0 <Control_Task_2+0x598>)
 800320a:	2202      	movs	r2, #2
 800320c:	701a      	strb	r2, [r3, #0]
				break;
 800320e:	e015      	b.n	800323c <Control_Task_2+0x434>
			case 'H':
				memcpy(route, route_3,6);
 8003210:	4b61      	ldr	r3, [pc, #388]	; (8003398 <Control_Task_2+0x590>)
 8003212:	4a65      	ldr	r2, [pc, #404]	; (80033a8 <Control_Task_2+0x5a0>)
 8003214:	e892 0003 	ldmia.w	r2, {r0, r1}
 8003218:	6018      	str	r0, [r3, #0]
 800321a:	3304      	adds	r3, #4
 800321c:	8019      	strh	r1, [r3, #0]
				selected_route=3;
 800321e:	4b60      	ldr	r3, [pc, #384]	; (80033a0 <Control_Task_2+0x598>)
 8003220:	2203      	movs	r2, #3
 8003222:	701a      	strb	r2, [r3, #0]
				break;
 8003224:	e00a      	b.n	800323c <Control_Task_2+0x434>
			case 'N':
				memcpy(route, route_4,6);
 8003226:	4b5c      	ldr	r3, [pc, #368]	; (8003398 <Control_Task_2+0x590>)
 8003228:	4a60      	ldr	r2, [pc, #384]	; (80033ac <Control_Task_2+0x5a4>)
 800322a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800322e:	6018      	str	r0, [r3, #0]
 8003230:	3304      	adds	r3, #4
 8003232:	8019      	strh	r1, [r3, #0]
				selected_route=4;
 8003234:	4b5a      	ldr	r3, [pc, #360]	; (80033a0 <Control_Task_2+0x598>)
 8003236:	2204      	movs	r2, #4
 8003238:	701a      	strb	r2, [r3, #0]
				break;
 800323a:	bf00      	nop
			}

			pos[MY]=route[route_index];
 800323c:	4b5c      	ldr	r3, [pc, #368]	; (80033b0 <Control_Task_2+0x5a8>)
 800323e:	781b      	ldrb	r3, [r3, #0]
 8003240:	461a      	mov	r2, r3
 8003242:	4b55      	ldr	r3, [pc, #340]	; (8003398 <Control_Task_2+0x590>)
 8003244:	5c9a      	ldrb	r2, [r3, r2]
 8003246:	4b50      	ldr	r3, [pc, #320]	; (8003388 <Control_Task_2+0x580>)
 8003248:	701a      	strb	r2, [r3, #0]
			pos[NEXT]=route[route_index+1];
 800324a:	4b59      	ldr	r3, [pc, #356]	; (80033b0 <Control_Task_2+0x5a8>)
 800324c:	781b      	ldrb	r3, [r3, #0]
 800324e:	3301      	adds	r3, #1
 8003250:	4a51      	ldr	r2, [pc, #324]	; (8003398 <Control_Task_2+0x590>)
 8003252:	5cd2      	ldrb	r2, [r2, r3]
 8003254:	4b4c      	ldr	r3, [pc, #304]	; (8003388 <Control_Task_2+0x580>)
 8003256:	705a      	strb	r2, [r3, #1]
			route_index++;
 8003258:	4b55      	ldr	r3, [pc, #340]	; (80033b0 <Control_Task_2+0x5a8>)
 800325a:	781b      	ldrb	r3, [r3, #0]
 800325c:	3301      	adds	r3, #1
 800325e:	b2da      	uxtb	r2, r3
 8003260:	4b53      	ldr	r3, [pc, #332]	; (80033b0 <Control_Task_2+0x5a8>)
 8003262:	701a      	strb	r2, [r3, #0]
			////////////////////////////////////////////////////////////
			for(i=0; i<6;i++)
 8003264:	4b43      	ldr	r3, [pc, #268]	; (8003374 <Control_Task_2+0x56c>)
 8003266:	2200      	movs	r2, #0
 8003268:	701a      	strb	r2, [r3, #0]
 800326a:	e01e      	b.n	80032aa <Control_Task_2+0x4a2>
			{
				if (N(pos[MY]).neighbours[i]==pos[NEXT])//O=O-2
 800326c:	4b46      	ldr	r3, [pc, #280]	; (8003388 <Control_Task_2+0x580>)
 800326e:	781b      	ldrb	r3, [r3, #0]
 8003270:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003274:	4b3f      	ldr	r3, [pc, #252]	; (8003374 <Control_Task_2+0x56c>)
 8003276:	781b      	ldrb	r3, [r3, #0]
 8003278:	4618      	mov	r0, r3
 800327a:	494e      	ldr	r1, [pc, #312]	; (80033b4 <Control_Task_2+0x5ac>)
 800327c:	4613      	mov	r3, r2
 800327e:	009b      	lsls	r3, r3, #2
 8003280:	4413      	add	r3, r2
 8003282:	00db      	lsls	r3, r3, #3
 8003284:	440b      	add	r3, r1
 8003286:	4403      	add	r3, r0
 8003288:	330c      	adds	r3, #12
 800328a:	781a      	ldrb	r2, [r3, #0]
 800328c:	4b3e      	ldr	r3, [pc, #248]	; (8003388 <Control_Task_2+0x580>)
 800328e:	785b      	ldrb	r3, [r3, #1]
 8003290:	429a      	cmp	r2, r3
 8003292:	d104      	bne.n	800329e <Control_Task_2+0x496>
				{
					bestNb[NEXT]=i;
 8003294:	4b37      	ldr	r3, [pc, #220]	; (8003374 <Control_Task_2+0x56c>)
 8003296:	781a      	ldrb	r2, [r3, #0]
 8003298:	4b37      	ldr	r3, [pc, #220]	; (8003378 <Control_Task_2+0x570>)
 800329a:	705a      	strb	r2, [r3, #1]
					break;// ha megvan akkor breakkel kilépünk a for ciklusból azonnal
 800329c:	e009      	b.n	80032b2 <Control_Task_2+0x4aa>
			for(i=0; i<6;i++)
 800329e:	4b35      	ldr	r3, [pc, #212]	; (8003374 <Control_Task_2+0x56c>)
 80032a0:	781b      	ldrb	r3, [r3, #0]
 80032a2:	3301      	adds	r3, #1
 80032a4:	b2da      	uxtb	r2, r3
 80032a6:	4b33      	ldr	r3, [pc, #204]	; (8003374 <Control_Task_2+0x56c>)
 80032a8:	701a      	strb	r2, [r3, #0]
 80032aa:	4b32      	ldr	r3, [pc, #200]	; (8003374 <Control_Task_2+0x56c>)
 80032ac:	781b      	ldrb	r3, [r3, #0]
 80032ae:	2b05      	cmp	r3, #5
 80032b0:	d9dc      	bls.n	800326c <Control_Task_2+0x464>
				}
			}
			if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)path=LEFT;
 80032b2:	4b31      	ldr	r3, [pc, #196]	; (8003378 <Control_Task_2+0x570>)
 80032b4:	785b      	ldrb	r3, [r3, #1]
 80032b6:	2b00      	cmp	r3, #0
 80032b8:	d003      	beq.n	80032c2 <Control_Task_2+0x4ba>
 80032ba:	4b2f      	ldr	r3, [pc, #188]	; (8003378 <Control_Task_2+0x570>)
 80032bc:	785b      	ldrb	r3, [r3, #1]
 80032be:	2b03      	cmp	r3, #3
 80032c0:	d103      	bne.n	80032ca <Control_Task_2+0x4c2>
 80032c2:	4b2e      	ldr	r3, [pc, #184]	; (800337c <Control_Task_2+0x574>)
 80032c4:	2200      	movs	r2, #0
 80032c6:	701a      	strb	r2, [r3, #0]
 80032c8:	e016      	b.n	80032f8 <Control_Task_2+0x4f0>
			else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)path=MIDDLE;
 80032ca:	4b2b      	ldr	r3, [pc, #172]	; (8003378 <Control_Task_2+0x570>)
 80032cc:	785b      	ldrb	r3, [r3, #1]
 80032ce:	2b01      	cmp	r3, #1
 80032d0:	d003      	beq.n	80032da <Control_Task_2+0x4d2>
 80032d2:	4b29      	ldr	r3, [pc, #164]	; (8003378 <Control_Task_2+0x570>)
 80032d4:	785b      	ldrb	r3, [r3, #1]
 80032d6:	2b04      	cmp	r3, #4
 80032d8:	d103      	bne.n	80032e2 <Control_Task_2+0x4da>
 80032da:	4b28      	ldr	r3, [pc, #160]	; (800337c <Control_Task_2+0x574>)
 80032dc:	2201      	movs	r2, #1
 80032de:	701a      	strb	r2, [r3, #0]
 80032e0:	e00a      	b.n	80032f8 <Control_Task_2+0x4f0>
			else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)path=RIGHT;
 80032e2:	4b25      	ldr	r3, [pc, #148]	; (8003378 <Control_Task_2+0x570>)
 80032e4:	785b      	ldrb	r3, [r3, #1]
 80032e6:	2b02      	cmp	r3, #2
 80032e8:	d003      	beq.n	80032f2 <Control_Task_2+0x4ea>
 80032ea:	4b23      	ldr	r3, [pc, #140]	; (8003378 <Control_Task_2+0x570>)
 80032ec:	785b      	ldrb	r3, [r3, #1]
 80032ee:	2b05      	cmp	r3, #5
 80032f0:	d102      	bne.n	80032f8 <Control_Task_2+0x4f0>
 80032f2:	4b22      	ldr	r3, [pc, #136]	; (800337c <Control_Task_2+0x574>)
 80032f4:	2202      	movs	r2, #2
 80032f6:	701a      	strb	r2, [r3, #0]
			stage=1;
 80032f8:	4b24      	ldr	r3, [pc, #144]	; (800338c <Control_Task_2+0x584>)
 80032fa:	2201      	movs	r2, #1
 80032fc:	701a      	strb	r2, [r3, #0]
			v_control=NORMAL_VEL;
 80032fe:	4b2e      	ldr	r3, [pc, #184]	; (80033b8 <Control_Task_2+0x5b0>)
 8003300:	2202      	movs	r2, #2
 8003302:	701a      	strb	r2, [r3, #0]
			//////////////////////////////////////////////////////////////
#ifdef ADIBUGG
			sprintf(str,"d;\n\r");
 8003304:	491e      	ldr	r1, [pc, #120]	; (8003380 <Control_Task_2+0x578>)
 8003306:	481f      	ldr	r0, [pc, #124]	; (8003384 <Control_Task_2+0x57c>)
 8003308:	f00a fa86 	bl	800d818 <siprintf>
			str[0]=pos[MY];
 800330c:	4b1e      	ldr	r3, [pc, #120]	; (8003388 <Control_Task_2+0x580>)
 800330e:	781a      	ldrb	r2, [r3, #0]
 8003310:	4b1c      	ldr	r3, [pc, #112]	; (8003384 <Control_Task_2+0x57c>)
 8003312:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 4, 3);
 8003314:	2303      	movs	r3, #3
 8003316:	2204      	movs	r2, #4
 8003318:	491a      	ldr	r1, [pc, #104]	; (8003384 <Control_Task_2+0x57c>)
 800331a:	68f8      	ldr	r0, [r7, #12]
 800331c:	f008 fd13 	bl	800bd46 <HAL_UART_Transmit>
 8003320:	e104      	b.n	800352c <Control_Task_2+0x724>
#endif
		}
	}

	else if(control_task_2_state==1)
 8003322:	4b26      	ldr	r3, [pc, #152]	; (80033bc <Control_Task_2+0x5b4>)
 8003324:	781b      	ldrb	r3, [r3, #0]
 8003326:	2b01      	cmp	r3, #1
 8003328:	f040 8100 	bne.w	800352c <Control_Task_2+0x724>
	{
		//O-ban várakoz
		if (selected_route==1 && piratePos_prev[1]=='O')
 800332c:	4b1c      	ldr	r3, [pc, #112]	; (80033a0 <Control_Task_2+0x598>)
 800332e:	781b      	ldrb	r3, [r3, #0]
 8003330:	2b01      	cmp	r3, #1
 8003332:	d10b      	bne.n	800334c <Control_Task_2+0x544>
 8003334:	4b17      	ldr	r3, [pc, #92]	; (8003394 <Control_Task_2+0x58c>)
 8003336:	785b      	ldrb	r3, [r3, #1]
 8003338:	2b4f      	cmp	r3, #79	; 0x4f
 800333a:	d107      	bne.n	800334c <Control_Task_2+0x544>
		{
			control_task_2_state=2;//pos[MY]=piratePos[2];//amíg a kalózrobot azt célba nem veszi
 800333c:	4b1f      	ldr	r3, [pc, #124]	; (80033bc <Control_Task_2+0x5b4>)
 800333e:	2202      	movs	r2, #2
 8003340:	701a      	strb	r2, [r3, #0]
			pos[MY]=piratePos_prev[2];
 8003342:	4b14      	ldr	r3, [pc, #80]	; (8003394 <Control_Task_2+0x58c>)
 8003344:	789a      	ldrb	r2, [r3, #2]
 8003346:	4b10      	ldr	r3, [pc, #64]	; (8003388 <Control_Task_2+0x580>)
 8003348:	701a      	strb	r2, [r3, #0]
 800334a:	e08d      	b.n	8003468 <Control_Task_2+0x660>
		}
		else if (selected_route==2) //L-ben várakozunk
 800334c:	4b14      	ldr	r3, [pc, #80]	; (80033a0 <Control_Task_2+0x598>)
 800334e:	781b      	ldrb	r3, [r3, #0]
 8003350:	2b02      	cmp	r3, #2
 8003352:	d144      	bne.n	80033de <Control_Task_2+0x5d6>
		{
			if(piratePos_prev[1]=='K' && piratePos_prev[2] != 'L')
 8003354:	4b0f      	ldr	r3, [pc, #60]	; (8003394 <Control_Task_2+0x58c>)
 8003356:	785b      	ldrb	r3, [r3, #1]
 8003358:	2b4b      	cmp	r3, #75	; 0x4b
 800335a:	d131      	bne.n	80033c0 <Control_Task_2+0x5b8>
 800335c:	4b0d      	ldr	r3, [pc, #52]	; (8003394 <Control_Task_2+0x58c>)
 800335e:	789b      	ldrb	r3, [r3, #2]
 8003360:	2b4c      	cmp	r3, #76	; 0x4c
 8003362:	d02d      	beq.n	80033c0 <Control_Task_2+0x5b8>
			{
				pos[MY]=piratePos_prev[2];//menjünk oda ahova ő akar, ez akkor jo ha nem felénk jön, felülbíráljuk a pos[my]='I'-t
 8003364:	4b0b      	ldr	r3, [pc, #44]	; (8003394 <Control_Task_2+0x58c>)
 8003366:	789a      	ldrb	r2, [r3, #2]
 8003368:	4b07      	ldr	r3, [pc, #28]	; (8003388 <Control_Task_2+0x580>)
 800336a:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 800336c:	4b13      	ldr	r3, [pc, #76]	; (80033bc <Control_Task_2+0x5b4>)
 800336e:	2202      	movs	r2, #2
 8003370:	701a      	strb	r2, [r3, #0]
 8003372:	e079      	b.n	8003468 <Control_Task_2+0x660>
 8003374:	20000746 	.word	0x20000746
 8003378:	20000748 	.word	0x20000748
 800337c:	20000346 	.word	0x20000346
 8003380:	08011278 	.word	0x08011278
 8003384:	20000720 	.word	0x20000720
 8003388:	20000358 	.word	0x20000358
 800338c:	2000074a 	.word	0x2000074a
 8003390:	40020400 	.word	0x40020400
 8003394:	2000071c 	.word	0x2000071c
 8003398:	20000740 	.word	0x20000740
 800339c:	20000010 	.word	0x20000010
 80033a0:	2000074b 	.word	0x2000074b
 80033a4:	20000018 	.word	0x20000018
 80033a8:	20000020 	.word	0x20000020
 80033ac:	20000028 	.word	0x20000028
 80033b0:	2000073e 	.word	0x2000073e
 80033b4:	20000360 	.word	0x20000360
 80033b8:	20000349 	.word	0x20000349
 80033bc:	20000710 	.word	0x20000710
			}
			else if(piratePos_prev[1]=='L') //waiting
 80033c0:	4b86      	ldr	r3, [pc, #536]	; (80035dc <Control_Task_2+0x7d4>)
 80033c2:	785b      	ldrb	r3, [r3, #1]
 80033c4:	2b4c      	cmp	r3, #76	; 0x4c
 80033c6:	d14f      	bne.n	8003468 <Control_Task_2+0x660>
			{
				pos[MY]=piratePos_prev[2];
 80033c8:	4b84      	ldr	r3, [pc, #528]	; (80035dc <Control_Task_2+0x7d4>)
 80033ca:	789a      	ldrb	r2, [r3, #2]
 80033cc:	4b84      	ldr	r3, [pc, #528]	; (80035e0 <Control_Task_2+0x7d8>)
 80033ce:	701a      	strb	r2, [r3, #0]
				orientation=REVERSE;
 80033d0:	4b84      	ldr	r3, [pc, #528]	; (80035e4 <Control_Task_2+0x7dc>)
 80033d2:	2201      	movs	r2, #1
 80033d4:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 80033d6:	4b84      	ldr	r3, [pc, #528]	; (80035e8 <Control_Task_2+0x7e0>)
 80033d8:	2202      	movs	r2, #2
 80033da:	701a      	strb	r2, [r3, #0]
 80033dc:	e044      	b.n	8003468 <Control_Task_2+0x660>
				sprintf(str,"Wait!\n\r");
				HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);
#endif
			}
		}
		else if(selected_route==3)//I-ben várakozunk
 80033de:	4b83      	ldr	r3, [pc, #524]	; (80035ec <Control_Task_2+0x7e4>)
 80033e0:	781b      	ldrb	r3, [r3, #0]
 80033e2:	2b03      	cmp	r3, #3
 80033e4:	d11e      	bne.n	8003424 <Control_Task_2+0x61c>
		{
			if(piratePos_prev[1]=='F' && piratePos_prev[2] != 'I')
 80033e6:	4b7d      	ldr	r3, [pc, #500]	; (80035dc <Control_Task_2+0x7d4>)
 80033e8:	785b      	ldrb	r3, [r3, #1]
 80033ea:	2b46      	cmp	r3, #70	; 0x46
 80033ec:	d10b      	bne.n	8003406 <Control_Task_2+0x5fe>
 80033ee:	4b7b      	ldr	r3, [pc, #492]	; (80035dc <Control_Task_2+0x7d4>)
 80033f0:	789b      	ldrb	r3, [r3, #2]
 80033f2:	2b49      	cmp	r3, #73	; 0x49
 80033f4:	d007      	beq.n	8003406 <Control_Task_2+0x5fe>
			{
				pos[MY]=piratePos_prev[2];//menjünk oda ahova ő akar, ez akkor jo ha nem felénk jön, felülbíráljuk a pos[my]='D'-t
 80033f6:	4b79      	ldr	r3, [pc, #484]	; (80035dc <Control_Task_2+0x7d4>)
 80033f8:	789a      	ldrb	r2, [r3, #2]
 80033fa:	4b79      	ldr	r3, [pc, #484]	; (80035e0 <Control_Task_2+0x7d8>)
 80033fc:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 80033fe:	4b7a      	ldr	r3, [pc, #488]	; (80035e8 <Control_Task_2+0x7e0>)
 8003400:	2202      	movs	r2, #2
 8003402:	701a      	strb	r2, [r3, #0]
 8003404:	e030      	b.n	8003468 <Control_Task_2+0x660>
			}
			else if(piratePos_prev[1]=='I')
 8003406:	4b75      	ldr	r3, [pc, #468]	; (80035dc <Control_Task_2+0x7d4>)
 8003408:	785b      	ldrb	r3, [r3, #1]
 800340a:	2b49      	cmp	r3, #73	; 0x49
 800340c:	d12c      	bne.n	8003468 <Control_Task_2+0x660>
			{
				//waiting
				pos[MY]=piratePos_prev[2];
 800340e:	4b73      	ldr	r3, [pc, #460]	; (80035dc <Control_Task_2+0x7d4>)
 8003410:	789a      	ldrb	r2, [r3, #2]
 8003412:	4b73      	ldr	r3, [pc, #460]	; (80035e0 <Control_Task_2+0x7d8>)
 8003414:	701a      	strb	r2, [r3, #0]
				orientation=REVERSE;
 8003416:	4b73      	ldr	r3, [pc, #460]	; (80035e4 <Control_Task_2+0x7dc>)
 8003418:	2201      	movs	r2, #1
 800341a:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 800341c:	4b72      	ldr	r3, [pc, #456]	; (80035e8 <Control_Task_2+0x7e0>)
 800341e:	2202      	movs	r2, #2
 8003420:	701a      	strb	r2, [r3, #0]
 8003422:	e021      	b.n	8003468 <Control_Task_2+0x660>
				HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);
#endif
			}
		}

		else if (selected_route==4){//I-ben várakozunk
 8003424:	4b71      	ldr	r3, [pc, #452]	; (80035ec <Control_Task_2+0x7e4>)
 8003426:	781b      	ldrb	r3, [r3, #0]
 8003428:	2b04      	cmp	r3, #4
 800342a:	d11d      	bne.n	8003468 <Control_Task_2+0x660>

			if(piratePos_prev[1]=='N' && piratePos_prev[2]!='L')
 800342c:	4b6b      	ldr	r3, [pc, #428]	; (80035dc <Control_Task_2+0x7d4>)
 800342e:	785b      	ldrb	r3, [r3, #1]
 8003430:	2b4e      	cmp	r3, #78	; 0x4e
 8003432:	d10b      	bne.n	800344c <Control_Task_2+0x644>
 8003434:	4b69      	ldr	r3, [pc, #420]	; (80035dc <Control_Task_2+0x7d4>)
 8003436:	789b      	ldrb	r3, [r3, #2]
 8003438:	2b4c      	cmp	r3, #76	; 0x4c
 800343a:	d007      	beq.n	800344c <Control_Task_2+0x644>
			{
				pos[MY]=piratePos_prev[2];//menjünk oda ahova ő akar, ez akkor jo ha nem felénk jön, felülbíráljuk a pos[my]='I'-t
 800343c:	4b67      	ldr	r3, [pc, #412]	; (80035dc <Control_Task_2+0x7d4>)
 800343e:	789a      	ldrb	r2, [r3, #2]
 8003440:	4b67      	ldr	r3, [pc, #412]	; (80035e0 <Control_Task_2+0x7d8>)
 8003442:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 8003444:	4b68      	ldr	r3, [pc, #416]	; (80035e8 <Control_Task_2+0x7e0>)
 8003446:	2202      	movs	r2, #2
 8003448:	701a      	strb	r2, [r3, #0]
 800344a:	e00d      	b.n	8003468 <Control_Task_2+0x660>
			}
			else if(piratePos_prev[1]=='L')//waiting
 800344c:	4b63      	ldr	r3, [pc, #396]	; (80035dc <Control_Task_2+0x7d4>)
 800344e:	785b      	ldrb	r3, [r3, #1]
 8003450:	2b4c      	cmp	r3, #76	; 0x4c
 8003452:	d109      	bne.n	8003468 <Control_Task_2+0x660>
			{
				pos[MY]=piratePos_prev[2];
 8003454:	4b61      	ldr	r3, [pc, #388]	; (80035dc <Control_Task_2+0x7d4>)
 8003456:	789a      	ldrb	r2, [r3, #2]
 8003458:	4b61      	ldr	r3, [pc, #388]	; (80035e0 <Control_Task_2+0x7d8>)
 800345a:	701a      	strb	r2, [r3, #0]
				orientation=REVERSE;
 800345c:	4b61      	ldr	r3, [pc, #388]	; (80035e4 <Control_Task_2+0x7dc>)
 800345e:	2201      	movs	r2, #1
 8003460:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 8003462:	4b61      	ldr	r3, [pc, #388]	; (80035e8 <Control_Task_2+0x7e0>)
 8003464:	2202      	movs	r2, #2
 8003466:	701a      	strb	r2, [r3, #0]
				sprintf(str,"Wait!\n\r");
				HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);
#endif
			}
		}
		if (control_task_2_state==2)
 8003468:	4b5f      	ldr	r3, [pc, #380]	; (80035e8 <Control_Task_2+0x7e0>)
 800346a:	781b      	ldrb	r3, [r3, #0]
 800346c:	2b02      	cmp	r3, #2
 800346e:	d15d      	bne.n	800352c <Control_Task_2+0x724>
		{
			for(i=0;i<6;i++)
 8003470:	4b5f      	ldr	r3, [pc, #380]	; (80035f0 <Control_Task_2+0x7e8>)
 8003472:	2200      	movs	r2, #0
 8003474:	701a      	strb	r2, [r3, #0]
 8003476:	e021      	b.n	80034bc <Control_Task_2+0x6b4>
			{
				if (N(route[route_index-1]).neighbours[i]==piratePos_prev[2])//O-hanyadik szomszedja L?
 8003478:	4b5e      	ldr	r3, [pc, #376]	; (80035f4 <Control_Task_2+0x7ec>)
 800347a:	781b      	ldrb	r3, [r3, #0]
 800347c:	3b01      	subs	r3, #1
 800347e:	4a5e      	ldr	r2, [pc, #376]	; (80035f8 <Control_Task_2+0x7f0>)
 8003480:	5cd3      	ldrb	r3, [r2, r3]
 8003482:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003486:	4b5a      	ldr	r3, [pc, #360]	; (80035f0 <Control_Task_2+0x7e8>)
 8003488:	781b      	ldrb	r3, [r3, #0]
 800348a:	4618      	mov	r0, r3
 800348c:	495b      	ldr	r1, [pc, #364]	; (80035fc <Control_Task_2+0x7f4>)
 800348e:	4613      	mov	r3, r2
 8003490:	009b      	lsls	r3, r3, #2
 8003492:	4413      	add	r3, r2
 8003494:	00db      	lsls	r3, r3, #3
 8003496:	440b      	add	r3, r1
 8003498:	4403      	add	r3, r0
 800349a:	330c      	adds	r3, #12
 800349c:	781a      	ldrb	r2, [r3, #0]
 800349e:	4b4f      	ldr	r3, [pc, #316]	; (80035dc <Control_Task_2+0x7d4>)
 80034a0:	789b      	ldrb	r3, [r3, #2]
 80034a2:	429a      	cmp	r2, r3
 80034a4:	d104      	bne.n	80034b0 <Control_Task_2+0x6a8>
				{
					bestNb[NEXT]=i;
 80034a6:	4b52      	ldr	r3, [pc, #328]	; (80035f0 <Control_Task_2+0x7e8>)
 80034a8:	781a      	ldrb	r2, [r3, #0]
 80034aa:	4b55      	ldr	r3, [pc, #340]	; (8003600 <Control_Task_2+0x7f8>)
 80034ac:	705a      	strb	r2, [r3, #1]
					break;
 80034ae:	e009      	b.n	80034c4 <Control_Task_2+0x6bc>
			for(i=0;i<6;i++)
 80034b0:	4b4f      	ldr	r3, [pc, #316]	; (80035f0 <Control_Task_2+0x7e8>)
 80034b2:	781b      	ldrb	r3, [r3, #0]
 80034b4:	3301      	adds	r3, #1
 80034b6:	b2da      	uxtb	r2, r3
 80034b8:	4b4d      	ldr	r3, [pc, #308]	; (80035f0 <Control_Task_2+0x7e8>)
 80034ba:	701a      	strb	r2, [r3, #0]
 80034bc:	4b4c      	ldr	r3, [pc, #304]	; (80035f0 <Control_Task_2+0x7e8>)
 80034be:	781b      	ldrb	r3, [r3, #0]
 80034c0:	2b05      	cmp	r3, #5
 80034c2:	d9d9      	bls.n	8003478 <Control_Task_2+0x670>
				}
			}
			if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)path=LEFT;
 80034c4:	4b4e      	ldr	r3, [pc, #312]	; (8003600 <Control_Task_2+0x7f8>)
 80034c6:	785b      	ldrb	r3, [r3, #1]
 80034c8:	2b00      	cmp	r3, #0
 80034ca:	d003      	beq.n	80034d4 <Control_Task_2+0x6cc>
 80034cc:	4b4c      	ldr	r3, [pc, #304]	; (8003600 <Control_Task_2+0x7f8>)
 80034ce:	785b      	ldrb	r3, [r3, #1]
 80034d0:	2b03      	cmp	r3, #3
 80034d2:	d103      	bne.n	80034dc <Control_Task_2+0x6d4>
 80034d4:	4b4b      	ldr	r3, [pc, #300]	; (8003604 <Control_Task_2+0x7fc>)
 80034d6:	2200      	movs	r2, #0
 80034d8:	701a      	strb	r2, [r3, #0]
 80034da:	e016      	b.n	800350a <Control_Task_2+0x702>
			else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)path=MIDDLE;
 80034dc:	4b48      	ldr	r3, [pc, #288]	; (8003600 <Control_Task_2+0x7f8>)
 80034de:	785b      	ldrb	r3, [r3, #1]
 80034e0:	2b01      	cmp	r3, #1
 80034e2:	d003      	beq.n	80034ec <Control_Task_2+0x6e4>
 80034e4:	4b46      	ldr	r3, [pc, #280]	; (8003600 <Control_Task_2+0x7f8>)
 80034e6:	785b      	ldrb	r3, [r3, #1]
 80034e8:	2b04      	cmp	r3, #4
 80034ea:	d103      	bne.n	80034f4 <Control_Task_2+0x6ec>
 80034ec:	4b45      	ldr	r3, [pc, #276]	; (8003604 <Control_Task_2+0x7fc>)
 80034ee:	2201      	movs	r2, #1
 80034f0:	701a      	strb	r2, [r3, #0]
 80034f2:	e00a      	b.n	800350a <Control_Task_2+0x702>
			else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)path=RIGHT;
 80034f4:	4b42      	ldr	r3, [pc, #264]	; (8003600 <Control_Task_2+0x7f8>)
 80034f6:	785b      	ldrb	r3, [r3, #1]
 80034f8:	2b02      	cmp	r3, #2
 80034fa:	d003      	beq.n	8003504 <Control_Task_2+0x6fc>
 80034fc:	4b40      	ldr	r3, [pc, #256]	; (8003600 <Control_Task_2+0x7f8>)
 80034fe:	785b      	ldrb	r3, [r3, #1]
 8003500:	2b05      	cmp	r3, #5
 8003502:	d102      	bne.n	800350a <Control_Task_2+0x702>
 8003504:	4b3f      	ldr	r3, [pc, #252]	; (8003604 <Control_Task_2+0x7fc>)
 8003506:	2202      	movs	r2, #2
 8003508:	701a      	strb	r2, [r3, #0]
			v_control=NORMAL_VEL;
 800350a:	4b3f      	ldr	r3, [pc, #252]	; (8003608 <Control_Task_2+0x800>)
 800350c:	2202      	movs	r2, #2
 800350e:	701a      	strb	r2, [r3, #0]
			sprintf(str,"d\n\r");
			str[0]=pos[MY];//honnan
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 3, 3);
#endif
#ifdef ADIBUGG
			sprintf(str,"d;\n\r");
 8003510:	493e      	ldr	r1, [pc, #248]	; (800360c <Control_Task_2+0x804>)
 8003512:	483f      	ldr	r0, [pc, #252]	; (8003610 <Control_Task_2+0x808>)
 8003514:	f00a f980 	bl	800d818 <siprintf>
			str[0]=pos[MY];//honnan
 8003518:	4b31      	ldr	r3, [pc, #196]	; (80035e0 <Control_Task_2+0x7d8>)
 800351a:	781a      	ldrb	r2, [r3, #0]
 800351c:	4b3c      	ldr	r3, [pc, #240]	; (8003610 <Control_Task_2+0x808>)
 800351e:	701a      	strb	r2, [r3, #0]

			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 4, 3);
 8003520:	2303      	movs	r3, #3
 8003522:	2204      	movs	r2, #4
 8003524:	493a      	ldr	r1, [pc, #232]	; (8003610 <Control_Task_2+0x808>)
 8003526:	68f8      	ldr	r0, [r7, #12]
 8003528:	f008 fc0d 	bl	800bd46 <HAL_UART_Transmit>
#endif
		}
	}

	if (control_task_2_state==2)//elotte mozgas
 800352c:	4b2e      	ldr	r3, [pc, #184]	; (80035e8 <Control_Task_2+0x7e0>)
 800352e:	781b      	ldrb	r3, [r3, #0]
 8003530:	2b02      	cmp	r3, #2
 8003532:	f040 813c 	bne.w	80037ae <Control_Task_2+0x9a6>
	{
		static uint8_t stopAfterNode=0;

		if(nodeDetected || stopAfterNode)
 8003536:	4b37      	ldr	r3, [pc, #220]	; (8003614 <Control_Task_2+0x80c>)
 8003538:	781b      	ldrb	r3, [r3, #0]
 800353a:	2b00      	cmp	r3, #0
 800353c:	d104      	bne.n	8003548 <Control_Task_2+0x740>
 800353e:	4b36      	ldr	r3, [pc, #216]	; (8003618 <Control_Task_2+0x810>)
 8003540:	781b      	ldrb	r3, [r3, #0]
 8003542:	2b00      	cmp	r3, #0
 8003544:	f000 8133 	beq.w	80037ae <Control_Task_2+0x9a6>
		{

			if(nodeDetected)//ha nem sávváltó üzemmódban vagyunk pontotszámolunk és felszedett kapukat nullázzuk
 8003548:	4b32      	ldr	r3, [pc, #200]	; (8003614 <Control_Task_2+0x80c>)
 800354a:	781b      	ldrb	r3, [r3, #0]
 800354c:	2b00      	cmp	r3, #0
 800354e:	d035      	beq.n	80035bc <Control_Task_2+0x7b4>
			{



				LED_B_TOGGLE;
 8003550:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8003554:	4831      	ldr	r0, [pc, #196]	; (800361c <Control_Task_2+0x814>)
 8003556:	f005 febc 	bl	80092d2 <HAL_GPIO_TogglePin>
				collectedPoints +=N(pos[MY]).worth;//sávváltás módik vizsgáljuk az össezgyűjtött kapuk számát
 800355a:	4b21      	ldr	r3, [pc, #132]	; (80035e0 <Control_Task_2+0x7d8>)
 800355c:	781b      	ldrb	r3, [r3, #0]
 800355e:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003562:	4926      	ldr	r1, [pc, #152]	; (80035fc <Control_Task_2+0x7f4>)
 8003564:	4613      	mov	r3, r2
 8003566:	009b      	lsls	r3, r3, #2
 8003568:	4413      	add	r3, r2
 800356a:	00db      	lsls	r3, r3, #3
 800356c:	440b      	add	r3, r1
 800356e:	3304      	adds	r3, #4
 8003570:	681b      	ldr	r3, [r3, #0]
 8003572:	b2da      	uxtb	r2, r3
 8003574:	4b2a      	ldr	r3, [pc, #168]	; (8003620 <Control_Task_2+0x818>)
 8003576:	781b      	ldrb	r3, [r3, #0]
 8003578:	4413      	add	r3, r2
 800357a:	b2da      	uxtb	r2, r3
 800357c:	4b28      	ldr	r3, [pc, #160]	; (8003620 <Control_Task_2+0x818>)
 800357e:	701a      	strb	r2, [r3, #0]
				N(pos[MY]).worth=0;//ez a kapu már nem ér pontot
 8003580:	4b17      	ldr	r3, [pc, #92]	; (80035e0 <Control_Task_2+0x7d8>)
 8003582:	781b      	ldrb	r3, [r3, #0]
 8003584:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003588:	491c      	ldr	r1, [pc, #112]	; (80035fc <Control_Task_2+0x7f4>)
 800358a:	4613      	mov	r3, r2
 800358c:	009b      	lsls	r3, r3, #2
 800358e:	4413      	add	r3, r2
 8003590:	00db      	lsls	r3, r3, #3
 8003592:	440b      	add	r3, r1
 8003594:	3304      	adds	r3, #4
 8003596:	2200      	movs	r2, #0
 8003598:	601a      	str	r2, [r3, #0]

				sprintf(str,"%d\n\r",collectedPoints);
 800359a:	4b21      	ldr	r3, [pc, #132]	; (8003620 <Control_Task_2+0x818>)
 800359c:	781b      	ldrb	r3, [r3, #0]
 800359e:	461a      	mov	r2, r3
 80035a0:	4920      	ldr	r1, [pc, #128]	; (8003624 <Control_Task_2+0x81c>)
 80035a2:	481b      	ldr	r0, [pc, #108]	; (8003610 <Control_Task_2+0x808>)
 80035a4:	f00a f938 	bl	800d818 <siprintf>
				HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);
 80035a8:	4819      	ldr	r0, [pc, #100]	; (8003610 <Control_Task_2+0x808>)
 80035aa:	f7fc fe31 	bl	8000210 <strlen>
 80035ae:	4603      	mov	r3, r0
 80035b0:	b29a      	uxth	r2, r3
 80035b2:	2303      	movs	r3, #3
 80035b4:	4916      	ldr	r1, [pc, #88]	; (8003610 <Control_Task_2+0x808>)
 80035b6:	68f8      	ldr	r0, [r7, #12]
 80035b8:	f008 fbc5 	bl	800bd46 <HAL_UART_Transmit>
			}

			if(piratePos_prev[1]==pos[MY])//ha celja a mi pozink, tudjuk a kovi celt
 80035bc:	4b07      	ldr	r3, [pc, #28]	; (80035dc <Control_Task_2+0x7d4>)
 80035be:	785a      	ldrb	r2, [r3, #1]
 80035c0:	4b07      	ldr	r3, [pc, #28]	; (80035e0 <Control_Task_2+0x7d8>)
 80035c2:	781b      	ldrb	r3, [r3, #0]
 80035c4:	429a      	cmp	r2, r3
 80035c6:	f040 80e3 	bne.w	8003790 <Control_Task_2+0x988>
			{
				pos[MY]=piratePos_prev[2];
 80035ca:	4b04      	ldr	r3, [pc, #16]	; (80035dc <Control_Task_2+0x7d4>)
 80035cc:	789a      	ldrb	r2, [r3, #2]
 80035ce:	4b04      	ldr	r3, [pc, #16]	; (80035e0 <Control_Task_2+0x7d8>)
 80035d0:	701a      	strb	r2, [r3, #0]
				for(i=0; i<6;i++)
 80035d2:	4b07      	ldr	r3, [pc, #28]	; (80035f0 <Control_Task_2+0x7e8>)
 80035d4:	2200      	movs	r2, #0
 80035d6:	701a      	strb	r2, [r3, #0]
 80035d8:	e057      	b.n	800368a <Control_Task_2+0x882>
 80035da:	bf00      	nop
 80035dc:	2000071c 	.word	0x2000071c
 80035e0:	20000358 	.word	0x20000358
 80035e4:	20000344 	.word	0x20000344
 80035e8:	20000710 	.word	0x20000710
 80035ec:	2000074b 	.word	0x2000074b
 80035f0:	20000746 	.word	0x20000746
 80035f4:	2000073e 	.word	0x2000073e
 80035f8:	20000740 	.word	0x20000740
 80035fc:	20000360 	.word	0x20000360
 8003600:	20000748 	.word	0x20000748
 8003604:	20000346 	.word	0x20000346
 8003608:	20000349 	.word	0x20000349
 800360c:	08011278 	.word	0x08011278
 8003610:	20000720 	.word	0x20000720
 8003614:	20000345 	.word	0x20000345
 8003618:	2000074c 	.word	0x2000074c
 800361c:	40020400 	.word	0x40020400
 8003620:	20000347 	.word	0x20000347
 8003624:	08011270 	.word	0x08011270
				{
					if (N(piratePos_prev[1]).neighbours[i]==piratePos_prev[2])//O-hanyadik szomszedja L?
 8003628:	4b63      	ldr	r3, [pc, #396]	; (80037b8 <Control_Task_2+0x9b0>)
 800362a:	785b      	ldrb	r3, [r3, #1]
 800362c:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003630:	4b62      	ldr	r3, [pc, #392]	; (80037bc <Control_Task_2+0x9b4>)
 8003632:	781b      	ldrb	r3, [r3, #0]
 8003634:	4618      	mov	r0, r3
 8003636:	4962      	ldr	r1, [pc, #392]	; (80037c0 <Control_Task_2+0x9b8>)
 8003638:	4613      	mov	r3, r2
 800363a:	009b      	lsls	r3, r3, #2
 800363c:	4413      	add	r3, r2
 800363e:	00db      	lsls	r3, r3, #3
 8003640:	440b      	add	r3, r1
 8003642:	4403      	add	r3, r0
 8003644:	330c      	adds	r3, #12
 8003646:	781a      	ldrb	r2, [r3, #0]
 8003648:	4b5b      	ldr	r3, [pc, #364]	; (80037b8 <Control_Task_2+0x9b0>)
 800364a:	789b      	ldrb	r3, [r3, #2]
 800364c:	429a      	cmp	r2, r3
 800364e:	d116      	bne.n	800367e <Control_Task_2+0x876>
					{
						bestNb[NEXT]=i;
 8003650:	4b5a      	ldr	r3, [pc, #360]	; (80037bc <Control_Task_2+0x9b4>)
 8003652:	781a      	ldrb	r2, [r3, #0]
 8003654:	4b5b      	ldr	r3, [pc, #364]	; (80037c4 <Control_Task_2+0x9bc>)
 8003656:	705a      	strb	r2, [r3, #1]
						dir[MY]=N(piratePos_prev[1]).directions[i];
 8003658:	4b57      	ldr	r3, [pc, #348]	; (80037b8 <Control_Task_2+0x9b0>)
 800365a:	785b      	ldrb	r3, [r3, #1]
 800365c:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003660:	4b56      	ldr	r3, [pc, #344]	; (80037bc <Control_Task_2+0x9b4>)
 8003662:	781b      	ldrb	r3, [r3, #0]
 8003664:	4618      	mov	r0, r3
 8003666:	4956      	ldr	r1, [pc, #344]	; (80037c0 <Control_Task_2+0x9b8>)
 8003668:	4613      	mov	r3, r2
 800366a:	009b      	lsls	r3, r3, #2
 800366c:	4413      	add	r3, r2
 800366e:	00db      	lsls	r3, r3, #3
 8003670:	440b      	add	r3, r1
 8003672:	4403      	add	r3, r0
 8003674:	3312      	adds	r3, #18
 8003676:	781a      	ldrb	r2, [r3, #0]
 8003678:	4b53      	ldr	r3, [pc, #332]	; (80037c8 <Control_Task_2+0x9c0>)
 800367a:	701a      	strb	r2, [r3, #0]
						break;
 800367c:	e009      	b.n	8003692 <Control_Task_2+0x88a>
				for(i=0; i<6;i++)
 800367e:	4b4f      	ldr	r3, [pc, #316]	; (80037bc <Control_Task_2+0x9b4>)
 8003680:	781b      	ldrb	r3, [r3, #0]
 8003682:	3301      	adds	r3, #1
 8003684:	b2da      	uxtb	r2, r3
 8003686:	4b4d      	ldr	r3, [pc, #308]	; (80037bc <Control_Task_2+0x9b4>)
 8003688:	701a      	strb	r2, [r3, #0]
 800368a:	4b4c      	ldr	r3, [pc, #304]	; (80037bc <Control_Task_2+0x9b4>)
 800368c:	781b      	ldrb	r3, [r3, #0]
 800368e:	2b05      	cmp	r3, #5
 8003690:	d9ca      	bls.n	8003628 <Control_Task_2+0x820>
					}
				}
				if(N(pos[MY]).type>2)//ha a kövi node-on nincs kapu
 8003692:	4b4e      	ldr	r3, [pc, #312]	; (80037cc <Control_Task_2+0x9c4>)
 8003694:	781b      	ldrb	r3, [r3, #0]
 8003696:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800369a:	4949      	ldr	r1, [pc, #292]	; (80037c0 <Control_Task_2+0x9b8>)
 800369c:	4613      	mov	r3, r2
 800369e:	009b      	lsls	r3, r3, #2
 80036a0:	4413      	add	r3, r2
 80036a2:	00db      	lsls	r3, r3, #3
 80036a4:	440b      	add	r3, r1
 80036a6:	3308      	adds	r3, #8
 80036a8:	681b      	ldr	r3, [r3, #0]
 80036aa:	2b02      	cmp	r3, #2
 80036ac:	d91b      	bls.n	80036e6 <Control_Task_2+0x8de>
				{
					s=0;
 80036ae:	4b48      	ldr	r3, [pc, #288]	; (80037d0 <Control_Task_2+0x9c8>)
 80036b0:	f04f 0200 	mov.w	r2, #0
 80036b4:	601a      	str	r2, [r3, #0]
					sMAX=N(piratePos_prev[1]).distance[bestNb[NEXT]]+25;
 80036b6:	4b40      	ldr	r3, [pc, #256]	; (80037b8 <Control_Task_2+0x9b0>)
 80036b8:	785b      	ldrb	r3, [r3, #1]
 80036ba:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80036be:	4b41      	ldr	r3, [pc, #260]	; (80037c4 <Control_Task_2+0x9bc>)
 80036c0:	785b      	ldrb	r3, [r3, #1]
 80036c2:	4618      	mov	r0, r3
 80036c4:	493e      	ldr	r1, [pc, #248]	; (80037c0 <Control_Task_2+0x9b8>)
 80036c6:	4613      	mov	r3, r2
 80036c8:	009b      	lsls	r3, r3, #2
 80036ca:	4413      	add	r3, r2
 80036cc:	009b      	lsls	r3, r3, #2
 80036ce:	4403      	add	r3, r0
 80036d0:	330c      	adds	r3, #12
 80036d2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80036d6:	3319      	adds	r3, #25
 80036d8:	ee07 3a90 	vmov	s15, r3
 80036dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80036e0:	4b3c      	ldr	r3, [pc, #240]	; (80037d4 <Control_Task_2+0x9cc>)
 80036e2:	edc3 7a00 	vstr	s15, [r3]
				}
				if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)path=LEFT;
 80036e6:	4b37      	ldr	r3, [pc, #220]	; (80037c4 <Control_Task_2+0x9bc>)
 80036e8:	785b      	ldrb	r3, [r3, #1]
 80036ea:	2b00      	cmp	r3, #0
 80036ec:	d003      	beq.n	80036f6 <Control_Task_2+0x8ee>
 80036ee:	4b35      	ldr	r3, [pc, #212]	; (80037c4 <Control_Task_2+0x9bc>)
 80036f0:	785b      	ldrb	r3, [r3, #1]
 80036f2:	2b03      	cmp	r3, #3
 80036f4:	d103      	bne.n	80036fe <Control_Task_2+0x8f6>
 80036f6:	4b38      	ldr	r3, [pc, #224]	; (80037d8 <Control_Task_2+0x9d0>)
 80036f8:	2200      	movs	r2, #0
 80036fa:	701a      	strb	r2, [r3, #0]
 80036fc:	e016      	b.n	800372c <Control_Task_2+0x924>
				else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)path=MIDDLE;
 80036fe:	4b31      	ldr	r3, [pc, #196]	; (80037c4 <Control_Task_2+0x9bc>)
 8003700:	785b      	ldrb	r3, [r3, #1]
 8003702:	2b01      	cmp	r3, #1
 8003704:	d003      	beq.n	800370e <Control_Task_2+0x906>
 8003706:	4b2f      	ldr	r3, [pc, #188]	; (80037c4 <Control_Task_2+0x9bc>)
 8003708:	785b      	ldrb	r3, [r3, #1]
 800370a:	2b04      	cmp	r3, #4
 800370c:	d103      	bne.n	8003716 <Control_Task_2+0x90e>
 800370e:	4b32      	ldr	r3, [pc, #200]	; (80037d8 <Control_Task_2+0x9d0>)
 8003710:	2201      	movs	r2, #1
 8003712:	701a      	strb	r2, [r3, #0]
 8003714:	e00a      	b.n	800372c <Control_Task_2+0x924>
				else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)path=RIGHT;
 8003716:	4b2b      	ldr	r3, [pc, #172]	; (80037c4 <Control_Task_2+0x9bc>)
 8003718:	785b      	ldrb	r3, [r3, #1]
 800371a:	2b02      	cmp	r3, #2
 800371c:	d003      	beq.n	8003726 <Control_Task_2+0x91e>
 800371e:	4b29      	ldr	r3, [pc, #164]	; (80037c4 <Control_Task_2+0x9bc>)
 8003720:	785b      	ldrb	r3, [r3, #1]
 8003722:	2b05      	cmp	r3, #5
 8003724:	d102      	bne.n	800372c <Control_Task_2+0x924>
 8003726:	4b2c      	ldr	r3, [pc, #176]	; (80037d8 <Control_Task_2+0x9d0>)
 8003728:	2202      	movs	r2, #2
 800372a:	701a      	strb	r2, [r3, #0]
				v_control=NORMAL_VEL;
 800372c:	4b2b      	ldr	r3, [pc, #172]	; (80037dc <Control_Task_2+0x9d4>)
 800372e:	2202      	movs	r2, #2
 8003730:	701a      	strb	r2, [r3, #0]
				stopAfterNode=0;
 8003732:	4b2b      	ldr	r3, [pc, #172]	; (80037e0 <Control_Task_2+0x9d8>)
 8003734:	2200      	movs	r2, #0
 8003736:	701a      	strb	r2, [r3, #0]
				if(collectedPoints >= 34 && N(pos[MY]).type<3)
 8003738:	4b2a      	ldr	r3, [pc, #168]	; (80037e4 <Control_Task_2+0x9dc>)
 800373a:	781b      	ldrb	r3, [r3, #0]
 800373c:	2b21      	cmp	r3, #33	; 0x21
 800373e:	d918      	bls.n	8003772 <Control_Task_2+0x96a>
 8003740:	4b22      	ldr	r3, [pc, #136]	; (80037cc <Control_Task_2+0x9c4>)
 8003742:	781b      	ldrb	r3, [r3, #0]
 8003744:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003748:	491d      	ldr	r1, [pc, #116]	; (80037c0 <Control_Task_2+0x9b8>)
 800374a:	4613      	mov	r3, r2
 800374c:	009b      	lsls	r3, r3, #2
 800374e:	4413      	add	r3, r2
 8003750:	00db      	lsls	r3, r3, #3
 8003752:	440b      	add	r3, r1
 8003754:	3308      	adds	r3, #8
 8003756:	681b      	ldr	r3, [r3, #0]
 8003758:	2b02      	cmp	r3, #2
 800375a:	d80a      	bhi.n	8003772 <Control_Task_2+0x96a>
				{
					laneChange=1; //flag állítás
 800375c:	4b22      	ldr	r3, [pc, #136]	; (80037e8 <Control_Task_2+0x9e0>)
 800375e:	2201      	movs	r2, #1
 8003760:	701a      	strb	r2, [r3, #0]
					Lane_Change_Init(); //a sávváltóhely felé nőnek a rewardok
 8003762:	f000 fa0b 	bl	8003b7c <Lane_Change_Init>
					LED_Y(1); //sárga led világít
 8003766:	2200      	movs	r2, #0
 8003768:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800376c:	481f      	ldr	r0, [pc, #124]	; (80037ec <Control_Task_2+0x9e4>)
 800376e:	f005 fd97 	bl	80092a0 <HAL_GPIO_WritePin>
				}
#ifdef ADIBUGG
			sprintf(str,"d;\n\r");
 8003772:	491f      	ldr	r1, [pc, #124]	; (80037f0 <Control_Task_2+0x9e8>)
 8003774:	481f      	ldr	r0, [pc, #124]	; (80037f4 <Control_Task_2+0x9ec>)
 8003776:	f00a f84f 	bl	800d818 <siprintf>
			str[0]=pos[MY];//honnan
 800377a:	4b14      	ldr	r3, [pc, #80]	; (80037cc <Control_Task_2+0x9c4>)
 800377c:	781a      	ldrb	r2, [r3, #0]
 800377e:	4b1d      	ldr	r3, [pc, #116]	; (80037f4 <Control_Task_2+0x9ec>)
 8003780:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 4, 3);
 8003782:	2303      	movs	r3, #3
 8003784:	2204      	movs	r2, #4
 8003786:	491b      	ldr	r1, [pc, #108]	; (80037f4 <Control_Task_2+0x9ec>)
 8003788:	68f8      	ldr	r0, [r7, #12]
 800378a:	f008 fadc 	bl	800bd46 <HAL_UART_Transmit>
 800378e:	e005      	b.n	800379c <Control_Task_2+0x994>
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 3, 3);
#endif
			}
			else
			{
				v_control=STOP;//wait
 8003790:	4b12      	ldr	r3, [pc, #72]	; (80037dc <Control_Task_2+0x9d4>)
 8003792:	2200      	movs	r2, #0
 8003794:	701a      	strb	r2, [r3, #0]
				stopAfterNode=1;
 8003796:	4b12      	ldr	r3, [pc, #72]	; (80037e0 <Control_Task_2+0x9d8>)
 8003798:	2201      	movs	r2, #1
 800379a:	701a      	strb	r2, [r3, #0]
			}
			nodeDetected=0;
 800379c:	4b16      	ldr	r3, [pc, #88]	; (80037f8 <Control_Task_2+0x9f0>)
 800379e:	2200      	movs	r2, #0
 80037a0:	701a      	strb	r2, [r3, #0]
 80037a2:	e004      	b.n	80037ae <Control_Task_2+0x9a6>
	if(mode!=SKILL || laneChange)return;
 80037a4:	bf00      	nop
 80037a6:	e002      	b.n	80037ae <Control_Task_2+0x9a6>
	else if(control_task_2_tick>tick)return;
 80037a8:	bf00      	nop
 80037aa:	e000      	b.n	80037ae <Control_Task_2+0x9a6>
	if(piratePos_prev[0]==0)return; //ha nem kaptunk még adatot a TB-tol return
 80037ac:	bf00      	nop
		}
	}
}
 80037ae:	3710      	adds	r7, #16
 80037b0:	46bd      	mov	sp, r7
 80037b2:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 80037b6:	bf00      	nop
 80037b8:	2000071c 	.word	0x2000071c
 80037bc:	20000746 	.word	0x20000746
 80037c0:	20000360 	.word	0x20000360
 80037c4:	20000748 	.word	0x20000748
 80037c8:	2000035c 	.word	0x2000035c
 80037cc:	20000358 	.word	0x20000358
 80037d0:	20000714 	.word	0x20000714
 80037d4:	2000000c 	.word	0x2000000c
 80037d8:	20000346 	.word	0x20000346
 80037dc:	20000349 	.word	0x20000349
 80037e0:	2000074c 	.word	0x2000074c
 80037e4:	20000347 	.word	0x20000347
 80037e8:	20000348 	.word	0x20000348
 80037ec:	40020400 	.word	0x40020400
 80037f0:	08011278 	.word	0x08011278
 80037f4:	20000720 	.word	0x20000720
 80037f8:	20000345 	.word	0x20000345

080037fc <Mode_Selector>:

void Mode_Selector(UART_HandleTypeDef *huart_debugg, UART_HandleTypeDef *huart_stm)
{
 80037fc:	b580      	push	{r7, lr}
 80037fe:	b08e      	sub	sp, #56	; 0x38
 8003800:	af00      	add	r7, sp, #0
 8003802:	6078      	str	r0, [r7, #4]
 8003804:	6039      	str	r1, [r7, #0]
	//Milyen módban kell működni?
	uint8_t buffer[40];
	uint8_t tmp=*(__IO uint8_t *) FLASH_ADDRESS_MODESELECTOR; //FLASH-ből kiolvassuk, hogy milyen módban vagyunk
 8003806:	4b5f      	ldr	r3, [pc, #380]	; (8003984 <Mode_Selector+0x188>)
 8003808:	781b      	ldrb	r3, [r3, #0]
 800380a:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37

	if(tmp==SKILL || tmp==FAST) mode = tmp;
 800380e:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8003812:	2b52      	cmp	r3, #82	; 0x52
 8003814:	d003      	beq.n	800381e <Mode_Selector+0x22>
 8003816:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 800381a:	2b3f      	cmp	r3, #63	; 0x3f
 800381c:	d104      	bne.n	8003828 <Mode_Selector+0x2c>
 800381e:	4a5a      	ldr	r2, [pc, #360]	; (8003988 <Mode_Selector+0x18c>)
 8003820:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8003824:	7013      	strb	r3, [r2, #0]
 8003826:	e022      	b.n	800386e <Mode_Selector+0x72>
	else
	{
		HAL_FLASH_Unlock();
 8003828:	f005 f9d4 	bl	8008bd4 <HAL_FLASH_Unlock>
		HAL_Delay(50);
 800382c:	2032      	movs	r0, #50	; 0x32
 800382e:	f003 fe9d 	bl	800756c <HAL_Delay>
		FLASH_Erase_Sector(7, FLASH_VOLTAGE_RANGE_3);
 8003832:	2102      	movs	r1, #2
 8003834:	2007      	movs	r0, #7
 8003836:	f005 fb3f 	bl	8008eb8 <FLASH_Erase_Sector>
		HAL_Delay(50);
 800383a:	2032      	movs	r0, #50	; 0x32
 800383c:	f003 fe96 	bl	800756c <HAL_Delay>
		HAL_FLASH_Lock();
 8003840:	f005 f9ea 	bl	8008c18 <HAL_FLASH_Lock>
		HAL_FLASH_Unlock();
 8003844:	f005 f9c6 	bl	8008bd4 <HAL_FLASH_Unlock>
		HAL_Delay(50);
 8003848:	2032      	movs	r0, #50	; 0x32
 800384a:	f003 fe8f 	bl	800756c <HAL_Delay>
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_MODESELECTOR, SKILL); //ha eddig skill mód volt akor msot gyors lesz
 800384e:	f04f 0252 	mov.w	r2, #82	; 0x52
 8003852:	f04f 0300 	mov.w	r3, #0
 8003856:	494b      	ldr	r1, [pc, #300]	; (8003984 <Mode_Selector+0x188>)
 8003858:	2000      	movs	r0, #0
 800385a:	f005 f967 	bl	8008b2c <HAL_FLASH_Program>
		HAL_Delay(50);
 800385e:	2032      	movs	r0, #50	; 0x32
 8003860:	f003 fe84 	bl	800756c <HAL_Delay>
		HAL_FLASH_Lock();
 8003864:	f005 f9d8 	bl	8008c18 <HAL_FLASH_Lock>

		mode=SKILL;
 8003868:	4b47      	ldr	r3, [pc, #284]	; (8003988 <Mode_Selector+0x18c>)
 800386a:	2252      	movs	r2, #82	; 0x52
 800386c:	701a      	strb	r2, [r3, #0]
	}

	if(mode==SKILL)
 800386e:	4b46      	ldr	r3, [pc, #280]	; (8003988 <Mode_Selector+0x18c>)
 8003870:	781b      	ldrb	r3, [r3, #0]
 8003872:	2b52      	cmp	r3, #82	; 0x52
 8003874:	d135      	bne.n	80038e2 <Mode_Selector+0xe6>
	{
		buffer[0] = CMD_MODE_SKILL; //szólunk a g0-nak, hogy ügyességi módban vagyunk
 8003876:	2352      	movs	r3, #82	; 0x52
 8003878:	733b      	strb	r3, [r7, #12]
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 800387a:	f107 010c 	add.w	r1, r7, #12
 800387e:	230a      	movs	r3, #10
 8003880:	2201      	movs	r2, #1
 8003882:	6838      	ldr	r0, [r7, #0]
 8003884:	f008 fa5f 	bl	800bd46 <HAL_UART_Transmit>
		HAL_Delay(10);
 8003888:	200a      	movs	r0, #10
 800388a:	f003 fe6f 	bl	800756c <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);//3 szór is szólunk neki, hogy tuti megkapja a módváltásról az üzenetet
 800388e:	f107 010c 	add.w	r1, r7, #12
 8003892:	230a      	movs	r3, #10
 8003894:	2201      	movs	r2, #1
 8003896:	6838      	ldr	r0, [r7, #0]
 8003898:	f008 fa55 	bl	800bd46 <HAL_UART_Transmit>
		HAL_Delay(10);
 800389c:	200a      	movs	r0, #10
 800389e:	f003 fe65 	bl	800756c <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 80038a2:	f107 010c 	add.w	r1, r7, #12
 80038a6:	230a      	movs	r3, #10
 80038a8:	2201      	movs	r2, #1
 80038aa:	6838      	ldr	r0, [r7, #0]
 80038ac:	f008 fa4b 	bl	800bd46 <HAL_UART_Transmit>

		sprintf((char*)buffer,"Skill mode!\n\r"); //Debugg uart-ra is kiküldjük, hogy milyen módban vagyunk
 80038b0:	f107 030c 	add.w	r3, r7, #12
 80038b4:	4935      	ldr	r1, [pc, #212]	; (800398c <Mode_Selector+0x190>)
 80038b6:	4618      	mov	r0, r3
 80038b8:	f009 ffae 	bl	800d818 <siprintf>
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
 80038bc:	f107 030c 	add.w	r3, r7, #12
 80038c0:	4618      	mov	r0, r3
 80038c2:	f7fc fca5 	bl	8000210 <strlen>
 80038c6:	4603      	mov	r3, r0
 80038c8:	b29a      	uxth	r2, r3
 80038ca:	f107 010c 	add.w	r1, r7, #12
 80038ce:	2364      	movs	r3, #100	; 0x64
 80038d0:	6878      	ldr	r0, [r7, #4]
 80038d2:	f008 fa38 	bl	800bd46 <HAL_UART_Transmit>
		LED_NUCLEO(1); //A NUCLEO zöld LED-je világít, ha ügyeségi üzemmódban vagyunk
 80038d6:	2201      	movs	r2, #1
 80038d8:	2120      	movs	r1, #32
 80038da:	482d      	ldr	r0, [pc, #180]	; (8003990 <Mode_Selector+0x194>)
 80038dc:	f005 fce0 	bl	80092a0 <HAL_GPIO_WritePin>
	else
	{
		sprintf((char*)buffer,"Flash error! Press blue button!\n\r");
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
	}
}
 80038e0:	e04c      	b.n	800397c <Mode_Selector+0x180>
	else if(mode==FAST)
 80038e2:	4b29      	ldr	r3, [pc, #164]	; (8003988 <Mode_Selector+0x18c>)
 80038e4:	781b      	ldrb	r3, [r3, #0]
 80038e6:	2b3f      	cmp	r3, #63	; 0x3f
 80038e8:	d135      	bne.n	8003956 <Mode_Selector+0x15a>
		buffer[0] = CMD_MODE_FAST;
 80038ea:	233f      	movs	r3, #63	; 0x3f
 80038ec:	733b      	strb	r3, [r7, #12]
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 80038ee:	f107 010c 	add.w	r1, r7, #12
 80038f2:	230a      	movs	r3, #10
 80038f4:	2201      	movs	r2, #1
 80038f6:	6838      	ldr	r0, [r7, #0]
 80038f8:	f008 fa25 	bl	800bd46 <HAL_UART_Transmit>
		HAL_Delay(10);
 80038fc:	200a      	movs	r0, #10
 80038fe:	f003 fe35 	bl	800756c <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 8003902:	f107 010c 	add.w	r1, r7, #12
 8003906:	230a      	movs	r3, #10
 8003908:	2201      	movs	r2, #1
 800390a:	6838      	ldr	r0, [r7, #0]
 800390c:	f008 fa1b 	bl	800bd46 <HAL_UART_Transmit>
		HAL_Delay(10);
 8003910:	200a      	movs	r0, #10
 8003912:	f003 fe2b 	bl	800756c <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 8003916:	f107 010c 	add.w	r1, r7, #12
 800391a:	230a      	movs	r3, #10
 800391c:	2201      	movs	r2, #1
 800391e:	6838      	ldr	r0, [r7, #0]
 8003920:	f008 fa11 	bl	800bd46 <HAL_UART_Transmit>
		sprintf((char*)buffer,"Fast mode!\n\r");
 8003924:	f107 030c 	add.w	r3, r7, #12
 8003928:	491a      	ldr	r1, [pc, #104]	; (8003994 <Mode_Selector+0x198>)
 800392a:	4618      	mov	r0, r3
 800392c:	f009 ff74 	bl	800d818 <siprintf>
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
 8003930:	f107 030c 	add.w	r3, r7, #12
 8003934:	4618      	mov	r0, r3
 8003936:	f7fc fc6b 	bl	8000210 <strlen>
 800393a:	4603      	mov	r3, r0
 800393c:	b29a      	uxth	r2, r3
 800393e:	f107 010c 	add.w	r1, r7, #12
 8003942:	2364      	movs	r3, #100	; 0x64
 8003944:	6878      	ldr	r0, [r7, #4]
 8003946:	f008 f9fe 	bl	800bd46 <HAL_UART_Transmit>
		LED_NUCLEO(0);
 800394a:	2200      	movs	r2, #0
 800394c:	2120      	movs	r1, #32
 800394e:	4810      	ldr	r0, [pc, #64]	; (8003990 <Mode_Selector+0x194>)
 8003950:	f005 fca6 	bl	80092a0 <HAL_GPIO_WritePin>
}
 8003954:	e012      	b.n	800397c <Mode_Selector+0x180>
		sprintf((char*)buffer,"Flash error! Press blue button!\n\r");
 8003956:	f107 030c 	add.w	r3, r7, #12
 800395a:	490f      	ldr	r1, [pc, #60]	; (8003998 <Mode_Selector+0x19c>)
 800395c:	4618      	mov	r0, r3
 800395e:	f009 ff5b 	bl	800d818 <siprintf>
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
 8003962:	f107 030c 	add.w	r3, r7, #12
 8003966:	4618      	mov	r0, r3
 8003968:	f7fc fc52 	bl	8000210 <strlen>
 800396c:	4603      	mov	r3, r0
 800396e:	b29a      	uxth	r2, r3
 8003970:	f107 010c 	add.w	r1, r7, #12
 8003974:	2364      	movs	r3, #100	; 0x64
 8003976:	6878      	ldr	r0, [r7, #4]
 8003978:	f008 f9e5 	bl	800bd46 <HAL_UART_Transmit>
}
 800397c:	bf00      	nop
 800397e:	3738      	adds	r7, #56	; 0x38
 8003980:	46bd      	mov	sp, r7
 8003982:	bd80      	pop	{r7, pc}
 8003984:	08060000 	.word	0x08060000
 8003988:	20000336 	.word	0x20000336
 800398c:	08011280 	.word	0x08011280
 8003990:	40020000 	.word	0x40020000
 8003994:	08011290 	.word	0x08011290
 8003998:	080112a0 	.word	0x080112a0

0800399c <Wait_For_Start_Sigal>:
	HAL_UART_Transmit(huart_monitoring, data, 11, 4);
}


void Wait_For_Start_Sigal(UART_HandleTypeDef *huart_TB, UART_HandleTypeDef *huart_debugg)
{
 800399c:	b580      	push	{r7, lr}
 800399e:	b084      	sub	sp, #16
 80039a0:	af00      	add	r7, sp, #0
 80039a2:	6078      	str	r0, [r7, #4]
 80039a4:	6039      	str	r1, [r7, #0]
	uint8_t rcv[]={0};
 80039a6:	2300      	movs	r3, #0
 80039a8:	723b      	strb	r3, [r7, #8]
	static uint8_t cnt=5;
	if(mode!=SKILL)return;
 80039aa:	4b2f      	ldr	r3, [pc, #188]	; (8003a68 <Wait_For_Start_Sigal+0xcc>)
 80039ac:	781b      	ldrb	r3, [r3, #0]
 80039ae:	2b52      	cmp	r3, #82	; 0x52
 80039b0:	d156      	bne.n	8003a60 <Wait_For_Start_Sigal+0xc4>
	while(1)
	{
		//Bluetooth-on érkezika  start jel
		HAL_UART_Receive(huart_TB, rcv, 1, 7000);
 80039b2:	f107 0108 	add.w	r1, r7, #8
 80039b6:	f641 3358 	movw	r3, #7000	; 0x1b58
 80039ba:	2201      	movs	r2, #1
 80039bc:	6878      	ldr	r0, [r7, #4]
 80039be:	f008 fa54 	bl	800be6a <HAL_UART_Receive>
		if(rcv[0]==cnt+0x30)
 80039c2:	7a3b      	ldrb	r3, [r7, #8]
 80039c4:	461a      	mov	r2, r3
 80039c6:	4b29      	ldr	r3, [pc, #164]	; (8003a6c <Wait_For_Start_Sigal+0xd0>)
 80039c8:	781b      	ldrb	r3, [r3, #0]
 80039ca:	3330      	adds	r3, #48	; 0x30
 80039cc:	429a      	cmp	r2, r3
 80039ce:	d11a      	bne.n	8003a06 <Wait_For_Start_Sigal+0x6a>
		{
			if(cnt<4)
 80039d0:	4b26      	ldr	r3, [pc, #152]	; (8003a6c <Wait_For_Start_Sigal+0xd0>)
 80039d2:	781b      	ldrb	r3, [r3, #0]
 80039d4:	2b03      	cmp	r3, #3
 80039d6:	d80c      	bhi.n	80039f2 <Wait_For_Start_Sigal+0x56>
			{
				HAL_UART_Transmit(huart_debugg, rcv, 1, 2);
 80039d8:	f107 0108 	add.w	r1, r7, #8
 80039dc:	2302      	movs	r3, #2
 80039de:	2201      	movs	r2, #1
 80039e0:	6838      	ldr	r0, [r7, #0]
 80039e2:	f008 f9b0 	bl	800bd46 <HAL_UART_Transmit>
				HAL_UART_Transmit(huart_debugg, (uint8_t*)"\n\r", 2, 2);
 80039e6:	2302      	movs	r3, #2
 80039e8:	2202      	movs	r2, #2
 80039ea:	4921      	ldr	r1, [pc, #132]	; (8003a70 <Wait_For_Start_Sigal+0xd4>)
 80039ec:	6838      	ldr	r0, [r7, #0]
 80039ee:	f008 f9aa 	bl	800bd46 <HAL_UART_Transmit>
			}
			if(rcv[0]=='0')break;
 80039f2:	7a3b      	ldrb	r3, [r7, #8]
 80039f4:	2b30      	cmp	r3, #48	; 0x30
 80039f6:	d026      	beq.n	8003a46 <Wait_For_Start_Sigal+0xaa>
			cnt--;
 80039f8:	4b1c      	ldr	r3, [pc, #112]	; (8003a6c <Wait_For_Start_Sigal+0xd0>)
 80039fa:	781b      	ldrb	r3, [r3, #0]
 80039fc:	3b01      	subs	r3, #1
 80039fe:	b2da      	uxtb	r2, r3
 8003a00:	4b1a      	ldr	r3, [pc, #104]	; (8003a6c <Wait_For_Start_Sigal+0xd0>)
 8003a02:	701a      	strb	r2, [r3, #0]
 8003a04:	e002      	b.n	8003a0c <Wait_For_Start_Sigal+0x70>
		}
		else cnt=5;
 8003a06:	4b19      	ldr	r3, [pc, #100]	; (8003a6c <Wait_For_Start_Sigal+0xd0>)
 8003a08:	2205      	movs	r2, #5
 8003a0a:	701a      	strb	r2, [r3, #0]

		//Kézi próbaindítás
		if(B2)
 8003a0c:	2120      	movs	r1, #32
 8003a0e:	4819      	ldr	r0, [pc, #100]	; (8003a74 <Wait_For_Start_Sigal+0xd8>)
 8003a10:	f005 fc2e 	bl	8009270 <HAL_GPIO_ReadPin>
 8003a14:	4603      	mov	r3, r0
 8003a16:	2b00      	cmp	r3, #0
 8003a18:	d0cb      	beq.n	80039b2 <Wait_For_Start_Sigal+0x16>
		{
			int i;
			for(i=0;i<10;i++)
 8003a1a:	2300      	movs	r3, #0
 8003a1c:	60fb      	str	r3, [r7, #12]
 8003a1e:	e009      	b.n	8003a34 <Wait_For_Start_Sigal+0x98>
			{
				LED_G_TOGGLE;
 8003a20:	2102      	movs	r1, #2
 8003a22:	4814      	ldr	r0, [pc, #80]	; (8003a74 <Wait_For_Start_Sigal+0xd8>)
 8003a24:	f005 fc55 	bl	80092d2 <HAL_GPIO_TogglePin>
				Delay(200);
 8003a28:	20c8      	movs	r0, #200	; 0xc8
 8003a2a:	f002 ff29 	bl	8006880 <Delay>
			for(i=0;i<10;i++)
 8003a2e:	68fb      	ldr	r3, [r7, #12]
 8003a30:	3301      	adds	r3, #1
 8003a32:	60fb      	str	r3, [r7, #12]
 8003a34:	68fb      	ldr	r3, [r7, #12]
 8003a36:	2b09      	cmp	r3, #9
 8003a38:	ddf2      	ble.n	8003a20 <Wait_For_Start_Sigal+0x84>
			}
			LED_G(0);
 8003a3a:	2201      	movs	r2, #1
 8003a3c:	2102      	movs	r1, #2
 8003a3e:	480d      	ldr	r0, [pc, #52]	; (8003a74 <Wait_For_Start_Sigal+0xd8>)
 8003a40:	f005 fc2e 	bl	80092a0 <HAL_GPIO_WritePin>
			break;//ha megnyomtuka 2-es gombot kiugrunk a while ciklusból
 8003a44:	e000      	b.n	8003a48 <Wait_For_Start_Sigal+0xac>
			if(rcv[0]=='0')break;
 8003a46:	bf00      	nop
		}

	}
	HAL_UART_Receive_IT(huart_TB, tb_msg, 6);
 8003a48:	2206      	movs	r2, #6
 8003a4a:	490b      	ldr	r1, [pc, #44]	; (8003a78 <Wait_For_Start_Sigal+0xdc>)
 8003a4c:	6878      	ldr	r0, [r7, #4]
 8003a4e:	f008 faae 	bl	800bfae <HAL_UART_Receive_IT>
	HAL_UART_Transmit(huart_debugg, (uint8_t*)"START!\n\r",8, 3);
 8003a52:	2303      	movs	r3, #3
 8003a54:	2208      	movs	r2, #8
 8003a56:	4909      	ldr	r1, [pc, #36]	; (8003a7c <Wait_For_Start_Sigal+0xe0>)
 8003a58:	6838      	ldr	r0, [r7, #0]
 8003a5a:	f008 f974 	bl	800bd46 <HAL_UART_Transmit>
 8003a5e:	e000      	b.n	8003a62 <Wait_For_Start_Sigal+0xc6>
	if(mode!=SKILL)return;
 8003a60:	bf00      	nop
}
 8003a62:	3710      	adds	r7, #16
 8003a64:	46bd      	mov	sp, r7
 8003a66:	bd80      	pop	{r7, pc}
 8003a68:	20000336 	.word	0x20000336
 8003a6c:	2000002e 	.word	0x2000002e
 8003a70:	080112c4 	.word	0x080112c4
 8003a74:	40020400 	.word	0x40020400
 8003a78:	2000034c 	.word	0x2000034c
 8003a7c:	080112c8 	.word	0x080112c8

08003a80 <Uart_Receive_Thunderboard_ISR>:
void Uart_Receive_Thunderboard_ISR(UART_HandleTypeDef *huart_TB, UART_HandleTypeDef *huart_debugg)
{
 8003a80:	b580      	push	{r7, lr}
 8003a82:	b082      	sub	sp, #8
 8003a84:	af00      	add	r7, sp, #0
 8003a86:	6078      	str	r0, [r7, #4]
 8003a88:	6039      	str	r1, [r7, #0]
	static uint8_t sp[]={0};//slip protection
	static uint8_t cnt=0;
	if(tb_msg[0]>='A' && tb_msg[0]<='Z' && tb_msg[5]>='0' && tb_msg[5]<='9')
 8003a8a:	4b37      	ldr	r3, [pc, #220]	; (8003b68 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003a8c:	781b      	ldrb	r3, [r3, #0]
 8003a8e:	2b40      	cmp	r3, #64	; 0x40
 8003a90:	d93d      	bls.n	8003b0e <Uart_Receive_Thunderboard_ISR+0x8e>
 8003a92:	4b35      	ldr	r3, [pc, #212]	; (8003b68 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003a94:	781b      	ldrb	r3, [r3, #0]
 8003a96:	2b5a      	cmp	r3, #90	; 0x5a
 8003a98:	d839      	bhi.n	8003b0e <Uart_Receive_Thunderboard_ISR+0x8e>
 8003a9a:	4b33      	ldr	r3, [pc, #204]	; (8003b68 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003a9c:	795b      	ldrb	r3, [r3, #5]
 8003a9e:	2b2f      	cmp	r3, #47	; 0x2f
 8003aa0:	d935      	bls.n	8003b0e <Uart_Receive_Thunderboard_ISR+0x8e>
 8003aa2:	4b31      	ldr	r3, [pc, #196]	; (8003b68 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003aa4:	795b      	ldrb	r3, [r3, #5]
 8003aa6:	2b39      	cmp	r3, #57	; 0x39
 8003aa8:	d831      	bhi.n	8003b0e <Uart_Receive_Thunderboard_ISR+0x8e>
	{
		piratePos[0]=tb_msg[0];	piratePos[1]=tb_msg[1];	piratePos[2]=tb_msg[2];
 8003aaa:	4b2f      	ldr	r3, [pc, #188]	; (8003b68 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003aac:	781a      	ldrb	r2, [r3, #0]
 8003aae:	4b2f      	ldr	r3, [pc, #188]	; (8003b6c <Uart_Receive_Thunderboard_ISR+0xec>)
 8003ab0:	701a      	strb	r2, [r3, #0]
 8003ab2:	4b2d      	ldr	r3, [pc, #180]	; (8003b68 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003ab4:	785a      	ldrb	r2, [r3, #1]
 8003ab6:	4b2d      	ldr	r3, [pc, #180]	; (8003b6c <Uart_Receive_Thunderboard_ISR+0xec>)
 8003ab8:	705a      	strb	r2, [r3, #1]
 8003aba:	4b2b      	ldr	r3, [pc, #172]	; (8003b68 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003abc:	789a      	ldrb	r2, [r3, #2]
 8003abe:	4b2b      	ldr	r3, [pc, #172]	; (8003b6c <Uart_Receive_Thunderboard_ISR+0xec>)
 8003ac0:	709a      	strb	r2, [r3, #2]
		piratePos[3]=100*(tb_msg[3]-0x30) + 10*(tb_msg[4]-0x30) + (tb_msg[5]-0x30);
 8003ac2:	4b29      	ldr	r3, [pc, #164]	; (8003b68 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003ac4:	78db      	ldrb	r3, [r3, #3]
 8003ac6:	461a      	mov	r2, r3
 8003ac8:	0092      	lsls	r2, r2, #2
 8003aca:	4413      	add	r3, r2
 8003acc:	461a      	mov	r2, r3
 8003ace:	0091      	lsls	r1, r2, #2
 8003ad0:	461a      	mov	r2, r3
 8003ad2:	460b      	mov	r3, r1
 8003ad4:	4413      	add	r3, r2
 8003ad6:	009b      	lsls	r3, r3, #2
 8003ad8:	b2da      	uxtb	r2, r3
 8003ada:	4b23      	ldr	r3, [pc, #140]	; (8003b68 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003adc:	791b      	ldrb	r3, [r3, #4]
 8003ade:	4619      	mov	r1, r3
 8003ae0:	0089      	lsls	r1, r1, #2
 8003ae2:	440b      	add	r3, r1
 8003ae4:	005b      	lsls	r3, r3, #1
 8003ae6:	b2db      	uxtb	r3, r3
 8003ae8:	4413      	add	r3, r2
 8003aea:	b2da      	uxtb	r2, r3
 8003aec:	4b1e      	ldr	r3, [pc, #120]	; (8003b68 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003aee:	795b      	ldrb	r3, [r3, #5]
 8003af0:	4413      	add	r3, r2
 8003af2:	b2db      	uxtb	r3, r3
 8003af4:	3330      	adds	r3, #48	; 0x30
 8003af6:	b2da      	uxtb	r2, r3
 8003af8:	4b1c      	ldr	r3, [pc, #112]	; (8003b6c <Uart_Receive_Thunderboard_ISR+0xec>)
 8003afa:	70da      	strb	r2, [r3, #3]
		thunderboardFlag=1;
 8003afc:	4b1c      	ldr	r3, [pc, #112]	; (8003b70 <Uart_Receive_Thunderboard_ISR+0xf0>)
 8003afe:	2201      	movs	r2, #1
 8003b00:	701a      	strb	r2, [r3, #0]
		HAL_UART_Receive_IT(huart_TB, tb_msg, 6);
 8003b02:	2206      	movs	r2, #6
 8003b04:	4918      	ldr	r1, [pc, #96]	; (8003b68 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003b06:	6878      	ldr	r0, [r7, #4]
 8003b08:	f008 fa51 	bl	800bfae <HAL_UART_Receive_IT>
#ifdef TB_DEBUGG
		HAL_UART_Transmit(huart_debugg, tb_msg, 6, 2);
		HAL_UART_Transmit(huart_debugg, (uint8_t*)"\n\r", 2, 2);
#endif
		return;
 8003b0c:	e029      	b.n	8003b62 <Uart_Receive_Thunderboard_ISR+0xe2>
	}
	//SLIP PROTECTION
	if(sp[0]>='0' && sp[0]<='9')cnt++;
 8003b0e:	4b19      	ldr	r3, [pc, #100]	; (8003b74 <Uart_Receive_Thunderboard_ISR+0xf4>)
 8003b10:	781b      	ldrb	r3, [r3, #0]
 8003b12:	2b2f      	cmp	r3, #47	; 0x2f
 8003b14:	d90a      	bls.n	8003b2c <Uart_Receive_Thunderboard_ISR+0xac>
 8003b16:	4b17      	ldr	r3, [pc, #92]	; (8003b74 <Uart_Receive_Thunderboard_ISR+0xf4>)
 8003b18:	781b      	ldrb	r3, [r3, #0]
 8003b1a:	2b39      	cmp	r3, #57	; 0x39
 8003b1c:	d806      	bhi.n	8003b2c <Uart_Receive_Thunderboard_ISR+0xac>
 8003b1e:	4b16      	ldr	r3, [pc, #88]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003b20:	781b      	ldrb	r3, [r3, #0]
 8003b22:	3301      	adds	r3, #1
 8003b24:	b2da      	uxtb	r2, r3
 8003b26:	4b14      	ldr	r3, [pc, #80]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003b28:	701a      	strb	r2, [r3, #0]
 8003b2a:	e002      	b.n	8003b32 <Uart_Receive_Thunderboard_ISR+0xb2>
	else cnt=0;
 8003b2c:	4b12      	ldr	r3, [pc, #72]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003b2e:	2200      	movs	r2, #0
 8003b30:	701a      	strb	r2, [r3, #0]

	if(cnt<3) //3 darab ASCI számnak össze kell gyűlnie egymás után
 8003b32:	4b11      	ldr	r3, [pc, #68]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003b34:	781b      	ldrb	r3, [r3, #0]
 8003b36:	2b02      	cmp	r3, #2
 8003b38:	d805      	bhi.n	8003b46 <Uart_Receive_Thunderboard_ISR+0xc6>
	{
		HAL_UART_Receive_IT(huart_TB, sp, 1);//amig ez nincs meg addig cask egyesével olvasunk
 8003b3a:	2201      	movs	r2, #1
 8003b3c:	490d      	ldr	r1, [pc, #52]	; (8003b74 <Uart_Receive_Thunderboard_ISR+0xf4>)
 8003b3e:	6878      	ldr	r0, [r7, #4]
 8003b40:	f008 fa35 	bl	800bfae <HAL_UART_Receive_IT>
 8003b44:	e00d      	b.n	8003b62 <Uart_Receive_Thunderboard_ISR+0xe2>
	}
	else//ha megvan megint 6-ossával olvasunk
	{
		sp[0]=0;
 8003b46:	4b0b      	ldr	r3, [pc, #44]	; (8003b74 <Uart_Receive_Thunderboard_ISR+0xf4>)
 8003b48:	2200      	movs	r2, #0
 8003b4a:	701a      	strb	r2, [r3, #0]
		cnt=0;
 8003b4c:	4b0a      	ldr	r3, [pc, #40]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003b4e:	2200      	movs	r2, #0
 8003b50:	701a      	strb	r2, [r3, #0]
		HAL_UART_Receive_IT(huart_TB, tb_msg, 6);
 8003b52:	2206      	movs	r2, #6
 8003b54:	4904      	ldr	r1, [pc, #16]	; (8003b68 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003b56:	6878      	ldr	r0, [r7, #4]
 8003b58:	f008 fa29 	bl	800bfae <HAL_UART_Receive_IT>
		thunderboardFlag=1;
 8003b5c:	4b04      	ldr	r3, [pc, #16]	; (8003b70 <Uart_Receive_Thunderboard_ISR+0xf0>)
 8003b5e:	2201      	movs	r2, #1
 8003b60:	701a      	strb	r2, [r3, #0]
	}
}
 8003b62:	3708      	adds	r7, #8
 8003b64:	46bd      	mov	sp, r7
 8003b66:	bd80      	pop	{r7, pc}
 8003b68:	2000034c 	.word	0x2000034c
 8003b6c:	20000354 	.word	0x20000354
 8003b70:	2000034a 	.word	0x2000034a
 8003b74:	20000750 	.word	0x20000750
 8003b78:	20000751 	.word	0x20000751

08003b7c <Lane_Change_Init>:


void Lane_Change_Init(void)
{
 8003b7c:	b480      	push	{r7}
 8003b7e:	af00      	add	r7, sp, #0
	N('A').worth = N('B').worth = N('C').worth = N('E').worth = 0;
 8003b80:	4b32      	ldr	r3, [pc, #200]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003b82:	2200      	movs	r2, #0
 8003b84:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 8003b88:	4b30      	ldr	r3, [pc, #192]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003b8a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8003b8e:	4a2f      	ldr	r2, [pc, #188]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003b90:	6553      	str	r3, [r2, #84]	; 0x54
 8003b92:	4b2e      	ldr	r3, [pc, #184]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003b94:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003b96:	4a2d      	ldr	r2, [pc, #180]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003b98:	62d3      	str	r3, [r2, #44]	; 0x2c
 8003b9a:	4b2c      	ldr	r3, [pc, #176]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003b9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003b9e:	4a2b      	ldr	r2, [pc, #172]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003ba0:	6053      	str	r3, [r2, #4]
	N('F').worth = N('D').worth = N('G').worth = 1;
 8003ba2:	4b2a      	ldr	r3, [pc, #168]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003ba4:	2201      	movs	r2, #1
 8003ba6:	f8c3 20f4 	str.w	r2, [r3, #244]	; 0xf4
 8003baa:	4b28      	ldr	r3, [pc, #160]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003bac:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8003bb0:	4a26      	ldr	r2, [pc, #152]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003bb2:	67d3      	str	r3, [r2, #124]	; 0x7c
 8003bb4:	4b25      	ldr	r3, [pc, #148]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003bb6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8003bb8:	4a24      	ldr	r2, [pc, #144]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003bba:	f8c2 30cc 	str.w	r3, [r2, #204]	; 0xcc
	N('I').worth = 2;
 8003bbe:	4b23      	ldr	r3, [pc, #140]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003bc0:	2202      	movs	r2, #2
 8003bc2:	f8c3 2144 	str.w	r2, [r3, #324]	; 0x144
	N('H').worth = N('J').worth = N('K').worth = N('L').worth = N('Q').worth = N('P').worth =  4;
 8003bc6:	4b21      	ldr	r3, [pc, #132]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003bc8:	2204      	movs	r2, #4
 8003bca:	f8c3 225c 	str.w	r2, [r3, #604]	; 0x25c
 8003bce:	4b1f      	ldr	r3, [pc, #124]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003bd0:	f8d3 325c 	ldr.w	r3, [r3, #604]	; 0x25c
 8003bd4:	4a1d      	ldr	r2, [pc, #116]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003bd6:	f8c2 3284 	str.w	r3, [r2, #644]	; 0x284
 8003bda:	4b1c      	ldr	r3, [pc, #112]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003bdc:	f8d3 3284 	ldr.w	r3, [r3, #644]	; 0x284
 8003be0:	4a1a      	ldr	r2, [pc, #104]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003be2:	f8c2 31bc 	str.w	r3, [r2, #444]	; 0x1bc
 8003be6:	4b19      	ldr	r3, [pc, #100]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003be8:	f8d3 31bc 	ldr.w	r3, [r3, #444]	; 0x1bc
 8003bec:	4a17      	ldr	r2, [pc, #92]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003bee:	f8c2 3194 	str.w	r3, [r2, #404]	; 0x194
 8003bf2:	4b16      	ldr	r3, [pc, #88]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003bf4:	f8d3 3194 	ldr.w	r3, [r3, #404]	; 0x194
 8003bf8:	4a14      	ldr	r2, [pc, #80]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003bfa:	f8c2 316c 	str.w	r3, [r2, #364]	; 0x16c
 8003bfe:	4b13      	ldr	r3, [pc, #76]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003c00:	f8d3 316c 	ldr.w	r3, [r3, #364]	; 0x16c
 8003c04:	4a11      	ldr	r2, [pc, #68]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003c06:	f8c2 311c 	str.w	r3, [r2, #284]	; 0x11c
	N('N').worth = N('T').worth =8;
 8003c0a:	4b10      	ldr	r3, [pc, #64]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003c0c:	2208      	movs	r2, #8
 8003c0e:	f8c3 22fc 	str.w	r2, [r3, #764]	; 0x2fc
 8003c12:	4b0e      	ldr	r3, [pc, #56]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003c14:	f8d3 32fc 	ldr.w	r3, [r3, #764]	; 0x2fc
 8003c18:	4a0c      	ldr	r2, [pc, #48]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003c1a:	f8c2 320c 	str.w	r3, [r2, #524]	; 0x20c
	N('O').worth = N('M').worth = 9;
 8003c1e:	4b0b      	ldr	r3, [pc, #44]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003c20:	2209      	movs	r2, #9
 8003c22:	f8c3 21e4 	str.w	r2, [r3, #484]	; 0x1e4
 8003c26:	4b09      	ldr	r3, [pc, #36]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003c28:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8003c2c:	4a07      	ldr	r2, [pc, #28]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003c2e:	f8c2 3234 	str.w	r3, [r2, #564]	; 0x234
	N('U').worth = 16;
 8003c32:	4b06      	ldr	r3, [pc, #24]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003c34:	2210      	movs	r2, #16
 8003c36:	f8c3 2324 	str.w	r2, [r3, #804]	; 0x324
	N('V').worth = 32;
 8003c3a:	4b04      	ldr	r3, [pc, #16]	; (8003c4c <Lane_Change_Init+0xd0>)
 8003c3c:	2220      	movs	r2, #32
 8003c3e:	f8c3 234c 	str.w	r2, [r3, #844]	; 0x34c
}
 8003c42:	bf00      	nop
 8003c44:	46bd      	mov	sp, r7
 8003c46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c4a:	4770      	bx	lr
 8003c4c:	20000360 	.word	0x20000360

08003c50 <Cross_Collision>:

uint8_t Cross_Collision(uint8_t myPos, uint8_t nextPos)
{
 8003c50:	b480      	push	{r7}
 8003c52:	b083      	sub	sp, #12
 8003c54:	af00      	add	r7, sp, #0
 8003c56:	4603      	mov	r3, r0
 8003c58:	460a      	mov	r2, r1
 8003c5a:	71fb      	strb	r3, [r7, #7]
 8003c5c:	4613      	mov	r3, r2
 8003c5e:	71bb      	strb	r3, [r7, #6]
	/********************************NI, KL kereszteződés**********************/
	if((myPos=='N' && nextPos=='I') || (myPos=='I' && nextPos=='N'))
 8003c60:	79fb      	ldrb	r3, [r7, #7]
 8003c62:	2b4e      	cmp	r3, #78	; 0x4e
 8003c64:	d102      	bne.n	8003c6c <Cross_Collision+0x1c>
 8003c66:	79bb      	ldrb	r3, [r7, #6]
 8003c68:	2b49      	cmp	r3, #73	; 0x49
 8003c6a:	d005      	beq.n	8003c78 <Cross_Collision+0x28>
 8003c6c:	79fb      	ldrb	r3, [r7, #7]
 8003c6e:	2b49      	cmp	r3, #73	; 0x49
 8003c70:	d132      	bne.n	8003cd8 <Cross_Collision+0x88>
 8003c72:	79bb      	ldrb	r3, [r7, #6]
 8003c74:	2b4e      	cmp	r3, #78	; 0x4e
 8003c76:	d12f      	bne.n	8003cd8 <Cross_Collision+0x88>
	{
		if((piratePos[0]=='K' && piratePos[1]=='L') || (piratePos[0]=='L' && piratePos[1]=='K')){ if(piratePos[3]<60) return 1;}
 8003c78:	4b83      	ldr	r3, [pc, #524]	; (8003e88 <Cross_Collision+0x238>)
 8003c7a:	781b      	ldrb	r3, [r3, #0]
 8003c7c:	2b4b      	cmp	r3, #75	; 0x4b
 8003c7e:	d103      	bne.n	8003c88 <Cross_Collision+0x38>
 8003c80:	4b81      	ldr	r3, [pc, #516]	; (8003e88 <Cross_Collision+0x238>)
 8003c82:	785b      	ldrb	r3, [r3, #1]
 8003c84:	2b4c      	cmp	r3, #76	; 0x4c
 8003c86:	d007      	beq.n	8003c98 <Cross_Collision+0x48>
 8003c88:	4b7f      	ldr	r3, [pc, #508]	; (8003e88 <Cross_Collision+0x238>)
 8003c8a:	781b      	ldrb	r3, [r3, #0]
 8003c8c:	2b4c      	cmp	r3, #76	; 0x4c
 8003c8e:	d109      	bne.n	8003ca4 <Cross_Collision+0x54>
 8003c90:	4b7d      	ldr	r3, [pc, #500]	; (8003e88 <Cross_Collision+0x238>)
 8003c92:	785b      	ldrb	r3, [r3, #1]
 8003c94:	2b4b      	cmp	r3, #75	; 0x4b
 8003c96:	d105      	bne.n	8003ca4 <Cross_Collision+0x54>
 8003c98:	4b7b      	ldr	r3, [pc, #492]	; (8003e88 <Cross_Collision+0x238>)
 8003c9a:	78db      	ldrb	r3, [r3, #3]
 8003c9c:	2b3b      	cmp	r3, #59	; 0x3b
 8003c9e:	d81a      	bhi.n	8003cd6 <Cross_Collision+0x86>
 8003ca0:	2301      	movs	r3, #1
 8003ca2:	e12c      	b.n	8003efe <Cross_Collision+0x2ae>
		else if((piratePos[1]=='K' && piratePos[2]=='L') || (piratePos[1]=='L' && piratePos[2]=='K')){ if(piratePos[3]>50) return 1;}
 8003ca4:	4b78      	ldr	r3, [pc, #480]	; (8003e88 <Cross_Collision+0x238>)
 8003ca6:	785b      	ldrb	r3, [r3, #1]
 8003ca8:	2b4b      	cmp	r3, #75	; 0x4b
 8003caa:	d103      	bne.n	8003cb4 <Cross_Collision+0x64>
 8003cac:	4b76      	ldr	r3, [pc, #472]	; (8003e88 <Cross_Collision+0x238>)
 8003cae:	789b      	ldrb	r3, [r3, #2]
 8003cb0:	2b4c      	cmp	r3, #76	; 0x4c
 8003cb2:	d009      	beq.n	8003cc8 <Cross_Collision+0x78>
 8003cb4:	4b74      	ldr	r3, [pc, #464]	; (8003e88 <Cross_Collision+0x238>)
 8003cb6:	785b      	ldrb	r3, [r3, #1]
 8003cb8:	2b4c      	cmp	r3, #76	; 0x4c
 8003cba:	f040 8116 	bne.w	8003eea <Cross_Collision+0x29a>
 8003cbe:	4b72      	ldr	r3, [pc, #456]	; (8003e88 <Cross_Collision+0x238>)
 8003cc0:	789b      	ldrb	r3, [r3, #2]
 8003cc2:	2b4b      	cmp	r3, #75	; 0x4b
 8003cc4:	f040 8111 	bne.w	8003eea <Cross_Collision+0x29a>
 8003cc8:	4b6f      	ldr	r3, [pc, #444]	; (8003e88 <Cross_Collision+0x238>)
 8003cca:	78db      	ldrb	r3, [r3, #3]
 8003ccc:	2b32      	cmp	r3, #50	; 0x32
 8003cce:	f240 810c 	bls.w	8003eea <Cross_Collision+0x29a>
 8003cd2:	2301      	movs	r3, #1
 8003cd4:	e113      	b.n	8003efe <Cross_Collision+0x2ae>
		if((piratePos[0]=='K' && piratePos[1]=='L') || (piratePos[0]=='L' && piratePos[1]=='K')){ if(piratePos[3]<60) return 1;}
 8003cd6:	e108      	b.n	8003eea <Cross_Collision+0x29a>
	}
	else if((myPos=='K' && nextPos=='L') || (myPos=='L' && nextPos=='K'))
 8003cd8:	79fb      	ldrb	r3, [r7, #7]
 8003cda:	2b4b      	cmp	r3, #75	; 0x4b
 8003cdc:	d102      	bne.n	8003ce4 <Cross_Collision+0x94>
 8003cde:	79bb      	ldrb	r3, [r7, #6]
 8003ce0:	2b4c      	cmp	r3, #76	; 0x4c
 8003ce2:	d005      	beq.n	8003cf0 <Cross_Collision+0xa0>
 8003ce4:	79fb      	ldrb	r3, [r7, #7]
 8003ce6:	2b4c      	cmp	r3, #76	; 0x4c
 8003ce8:	d132      	bne.n	8003d50 <Cross_Collision+0x100>
 8003cea:	79bb      	ldrb	r3, [r7, #6]
 8003cec:	2b4b      	cmp	r3, #75	; 0x4b
 8003cee:	d12f      	bne.n	8003d50 <Cross_Collision+0x100>
	{
		if((piratePos[0]=='N' && piratePos[1]=='I') || (piratePos[0]=='I' && piratePos[1]=='N')){ if(piratePos[3]<60) return 1;}
 8003cf0:	4b65      	ldr	r3, [pc, #404]	; (8003e88 <Cross_Collision+0x238>)
 8003cf2:	781b      	ldrb	r3, [r3, #0]
 8003cf4:	2b4e      	cmp	r3, #78	; 0x4e
 8003cf6:	d103      	bne.n	8003d00 <Cross_Collision+0xb0>
 8003cf8:	4b63      	ldr	r3, [pc, #396]	; (8003e88 <Cross_Collision+0x238>)
 8003cfa:	785b      	ldrb	r3, [r3, #1]
 8003cfc:	2b49      	cmp	r3, #73	; 0x49
 8003cfe:	d007      	beq.n	8003d10 <Cross_Collision+0xc0>
 8003d00:	4b61      	ldr	r3, [pc, #388]	; (8003e88 <Cross_Collision+0x238>)
 8003d02:	781b      	ldrb	r3, [r3, #0]
 8003d04:	2b49      	cmp	r3, #73	; 0x49
 8003d06:	d109      	bne.n	8003d1c <Cross_Collision+0xcc>
 8003d08:	4b5f      	ldr	r3, [pc, #380]	; (8003e88 <Cross_Collision+0x238>)
 8003d0a:	785b      	ldrb	r3, [r3, #1]
 8003d0c:	2b4e      	cmp	r3, #78	; 0x4e
 8003d0e:	d105      	bne.n	8003d1c <Cross_Collision+0xcc>
 8003d10:	4b5d      	ldr	r3, [pc, #372]	; (8003e88 <Cross_Collision+0x238>)
 8003d12:	78db      	ldrb	r3, [r3, #3]
 8003d14:	2b3b      	cmp	r3, #59	; 0x3b
 8003d16:	d81a      	bhi.n	8003d4e <Cross_Collision+0xfe>
 8003d18:	2301      	movs	r3, #1
 8003d1a:	e0f0      	b.n	8003efe <Cross_Collision+0x2ae>
		else if((piratePos[1]=='N' && piratePos[2]=='I') || (piratePos[1]=='I' && piratePos[2]=='N')){ if(piratePos[3]>50) return 1;}
 8003d1c:	4b5a      	ldr	r3, [pc, #360]	; (8003e88 <Cross_Collision+0x238>)
 8003d1e:	785b      	ldrb	r3, [r3, #1]
 8003d20:	2b4e      	cmp	r3, #78	; 0x4e
 8003d22:	d103      	bne.n	8003d2c <Cross_Collision+0xdc>
 8003d24:	4b58      	ldr	r3, [pc, #352]	; (8003e88 <Cross_Collision+0x238>)
 8003d26:	789b      	ldrb	r3, [r3, #2]
 8003d28:	2b49      	cmp	r3, #73	; 0x49
 8003d2a:	d009      	beq.n	8003d40 <Cross_Collision+0xf0>
 8003d2c:	4b56      	ldr	r3, [pc, #344]	; (8003e88 <Cross_Collision+0x238>)
 8003d2e:	785b      	ldrb	r3, [r3, #1]
 8003d30:	2b49      	cmp	r3, #73	; 0x49
 8003d32:	f040 80dc 	bne.w	8003eee <Cross_Collision+0x29e>
 8003d36:	4b54      	ldr	r3, [pc, #336]	; (8003e88 <Cross_Collision+0x238>)
 8003d38:	789b      	ldrb	r3, [r3, #2]
 8003d3a:	2b4e      	cmp	r3, #78	; 0x4e
 8003d3c:	f040 80d7 	bne.w	8003eee <Cross_Collision+0x29e>
 8003d40:	4b51      	ldr	r3, [pc, #324]	; (8003e88 <Cross_Collision+0x238>)
 8003d42:	78db      	ldrb	r3, [r3, #3]
 8003d44:	2b32      	cmp	r3, #50	; 0x32
 8003d46:	f240 80d2 	bls.w	8003eee <Cross_Collision+0x29e>
 8003d4a:	2301      	movs	r3, #1
 8003d4c:	e0d7      	b.n	8003efe <Cross_Collision+0x2ae>
		if((piratePos[0]=='N' && piratePos[1]=='I') || (piratePos[0]=='I' && piratePos[1]=='N')){ if(piratePos[3]<60) return 1;}
 8003d4e:	e0ce      	b.n	8003eee <Cross_Collision+0x29e>
	}
	/**************************************************************************/


	/********************************ID, FG kereszteződés**********************/
	else if((myPos=='I' && nextPos=='D') || (myPos=='D' && nextPos=='I'))
 8003d50:	79fb      	ldrb	r3, [r7, #7]
 8003d52:	2b49      	cmp	r3, #73	; 0x49
 8003d54:	d102      	bne.n	8003d5c <Cross_Collision+0x10c>
 8003d56:	79bb      	ldrb	r3, [r7, #6]
 8003d58:	2b44      	cmp	r3, #68	; 0x44
 8003d5a:	d005      	beq.n	8003d68 <Cross_Collision+0x118>
 8003d5c:	79fb      	ldrb	r3, [r7, #7]
 8003d5e:	2b44      	cmp	r3, #68	; 0x44
 8003d60:	d132      	bne.n	8003dc8 <Cross_Collision+0x178>
 8003d62:	79bb      	ldrb	r3, [r7, #6]
 8003d64:	2b49      	cmp	r3, #73	; 0x49
 8003d66:	d12f      	bne.n	8003dc8 <Cross_Collision+0x178>
	{
		if((piratePos[0]=='F' && piratePos[1]=='G') || (piratePos[0]=='G' && piratePos[1]=='F')){ if(piratePos[3]<60) return 1;}
 8003d68:	4b47      	ldr	r3, [pc, #284]	; (8003e88 <Cross_Collision+0x238>)
 8003d6a:	781b      	ldrb	r3, [r3, #0]
 8003d6c:	2b46      	cmp	r3, #70	; 0x46
 8003d6e:	d103      	bne.n	8003d78 <Cross_Collision+0x128>
 8003d70:	4b45      	ldr	r3, [pc, #276]	; (8003e88 <Cross_Collision+0x238>)
 8003d72:	785b      	ldrb	r3, [r3, #1]
 8003d74:	2b47      	cmp	r3, #71	; 0x47
 8003d76:	d007      	beq.n	8003d88 <Cross_Collision+0x138>
 8003d78:	4b43      	ldr	r3, [pc, #268]	; (8003e88 <Cross_Collision+0x238>)
 8003d7a:	781b      	ldrb	r3, [r3, #0]
 8003d7c:	2b47      	cmp	r3, #71	; 0x47
 8003d7e:	d109      	bne.n	8003d94 <Cross_Collision+0x144>
 8003d80:	4b41      	ldr	r3, [pc, #260]	; (8003e88 <Cross_Collision+0x238>)
 8003d82:	785b      	ldrb	r3, [r3, #1]
 8003d84:	2b46      	cmp	r3, #70	; 0x46
 8003d86:	d105      	bne.n	8003d94 <Cross_Collision+0x144>
 8003d88:	4b3f      	ldr	r3, [pc, #252]	; (8003e88 <Cross_Collision+0x238>)
 8003d8a:	78db      	ldrb	r3, [r3, #3]
 8003d8c:	2b3b      	cmp	r3, #59	; 0x3b
 8003d8e:	d81a      	bhi.n	8003dc6 <Cross_Collision+0x176>
 8003d90:	2301      	movs	r3, #1
 8003d92:	e0b4      	b.n	8003efe <Cross_Collision+0x2ae>
		else if((piratePos[1]=='F' && piratePos[2]=='G') || (piratePos[1]=='G' && piratePos[2]=='F')){ if(piratePos[3]>50) return 1;}
 8003d94:	4b3c      	ldr	r3, [pc, #240]	; (8003e88 <Cross_Collision+0x238>)
 8003d96:	785b      	ldrb	r3, [r3, #1]
 8003d98:	2b46      	cmp	r3, #70	; 0x46
 8003d9a:	d103      	bne.n	8003da4 <Cross_Collision+0x154>
 8003d9c:	4b3a      	ldr	r3, [pc, #232]	; (8003e88 <Cross_Collision+0x238>)
 8003d9e:	789b      	ldrb	r3, [r3, #2]
 8003da0:	2b47      	cmp	r3, #71	; 0x47
 8003da2:	d009      	beq.n	8003db8 <Cross_Collision+0x168>
 8003da4:	4b38      	ldr	r3, [pc, #224]	; (8003e88 <Cross_Collision+0x238>)
 8003da6:	785b      	ldrb	r3, [r3, #1]
 8003da8:	2b47      	cmp	r3, #71	; 0x47
 8003daa:	f040 80a2 	bne.w	8003ef2 <Cross_Collision+0x2a2>
 8003dae:	4b36      	ldr	r3, [pc, #216]	; (8003e88 <Cross_Collision+0x238>)
 8003db0:	789b      	ldrb	r3, [r3, #2]
 8003db2:	2b46      	cmp	r3, #70	; 0x46
 8003db4:	f040 809d 	bne.w	8003ef2 <Cross_Collision+0x2a2>
 8003db8:	4b33      	ldr	r3, [pc, #204]	; (8003e88 <Cross_Collision+0x238>)
 8003dba:	78db      	ldrb	r3, [r3, #3]
 8003dbc:	2b32      	cmp	r3, #50	; 0x32
 8003dbe:	f240 8098 	bls.w	8003ef2 <Cross_Collision+0x2a2>
 8003dc2:	2301      	movs	r3, #1
 8003dc4:	e09b      	b.n	8003efe <Cross_Collision+0x2ae>
		if((piratePos[0]=='F' && piratePos[1]=='G') || (piratePos[0]=='G' && piratePos[1]=='F')){ if(piratePos[3]<60) return 1;}
 8003dc6:	e094      	b.n	8003ef2 <Cross_Collision+0x2a2>
	}
	else if((myPos=='F' && nextPos=='G') || (myPos=='G' && nextPos=='F'))
 8003dc8:	79fb      	ldrb	r3, [r7, #7]
 8003dca:	2b46      	cmp	r3, #70	; 0x46
 8003dcc:	d102      	bne.n	8003dd4 <Cross_Collision+0x184>
 8003dce:	79bb      	ldrb	r3, [r7, #6]
 8003dd0:	2b47      	cmp	r3, #71	; 0x47
 8003dd2:	d005      	beq.n	8003de0 <Cross_Collision+0x190>
 8003dd4:	79fb      	ldrb	r3, [r7, #7]
 8003dd6:	2b47      	cmp	r3, #71	; 0x47
 8003dd8:	d12f      	bne.n	8003e3a <Cross_Collision+0x1ea>
 8003dda:	79bb      	ldrb	r3, [r7, #6]
 8003ddc:	2b46      	cmp	r3, #70	; 0x46
 8003dde:	d12c      	bne.n	8003e3a <Cross_Collision+0x1ea>
	{
		if((piratePos[0]=='I' && piratePos[1]=='D') || (piratePos[0]=='D' && piratePos[1]=='I')){ if(piratePos[3]<60) return 1;}
 8003de0:	4b29      	ldr	r3, [pc, #164]	; (8003e88 <Cross_Collision+0x238>)
 8003de2:	781b      	ldrb	r3, [r3, #0]
 8003de4:	2b49      	cmp	r3, #73	; 0x49
 8003de6:	d103      	bne.n	8003df0 <Cross_Collision+0x1a0>
 8003de8:	4b27      	ldr	r3, [pc, #156]	; (8003e88 <Cross_Collision+0x238>)
 8003dea:	785b      	ldrb	r3, [r3, #1]
 8003dec:	2b44      	cmp	r3, #68	; 0x44
 8003dee:	d007      	beq.n	8003e00 <Cross_Collision+0x1b0>
 8003df0:	4b25      	ldr	r3, [pc, #148]	; (8003e88 <Cross_Collision+0x238>)
 8003df2:	781b      	ldrb	r3, [r3, #0]
 8003df4:	2b44      	cmp	r3, #68	; 0x44
 8003df6:	d109      	bne.n	8003e0c <Cross_Collision+0x1bc>
 8003df8:	4b23      	ldr	r3, [pc, #140]	; (8003e88 <Cross_Collision+0x238>)
 8003dfa:	785b      	ldrb	r3, [r3, #1]
 8003dfc:	2b49      	cmp	r3, #73	; 0x49
 8003dfe:	d105      	bne.n	8003e0c <Cross_Collision+0x1bc>
 8003e00:	4b21      	ldr	r3, [pc, #132]	; (8003e88 <Cross_Collision+0x238>)
 8003e02:	78db      	ldrb	r3, [r3, #3]
 8003e04:	2b3b      	cmp	r3, #59	; 0x3b
 8003e06:	d817      	bhi.n	8003e38 <Cross_Collision+0x1e8>
 8003e08:	2301      	movs	r3, #1
 8003e0a:	e078      	b.n	8003efe <Cross_Collision+0x2ae>
		else if((piratePos[1]=='I' && piratePos[2]=='D') || (piratePos[1]=='D' && piratePos[2]=='I')){ if(piratePos[3]>50) return 1;}
 8003e0c:	4b1e      	ldr	r3, [pc, #120]	; (8003e88 <Cross_Collision+0x238>)
 8003e0e:	785b      	ldrb	r3, [r3, #1]
 8003e10:	2b49      	cmp	r3, #73	; 0x49
 8003e12:	d103      	bne.n	8003e1c <Cross_Collision+0x1cc>
 8003e14:	4b1c      	ldr	r3, [pc, #112]	; (8003e88 <Cross_Collision+0x238>)
 8003e16:	789b      	ldrb	r3, [r3, #2]
 8003e18:	2b44      	cmp	r3, #68	; 0x44
 8003e1a:	d007      	beq.n	8003e2c <Cross_Collision+0x1dc>
 8003e1c:	4b1a      	ldr	r3, [pc, #104]	; (8003e88 <Cross_Collision+0x238>)
 8003e1e:	785b      	ldrb	r3, [r3, #1]
 8003e20:	2b44      	cmp	r3, #68	; 0x44
 8003e22:	d168      	bne.n	8003ef6 <Cross_Collision+0x2a6>
 8003e24:	4b18      	ldr	r3, [pc, #96]	; (8003e88 <Cross_Collision+0x238>)
 8003e26:	789b      	ldrb	r3, [r3, #2]
 8003e28:	2b49      	cmp	r3, #73	; 0x49
 8003e2a:	d164      	bne.n	8003ef6 <Cross_Collision+0x2a6>
 8003e2c:	4b16      	ldr	r3, [pc, #88]	; (8003e88 <Cross_Collision+0x238>)
 8003e2e:	78db      	ldrb	r3, [r3, #3]
 8003e30:	2b32      	cmp	r3, #50	; 0x32
 8003e32:	d960      	bls.n	8003ef6 <Cross_Collision+0x2a6>
 8003e34:	2301      	movs	r3, #1
 8003e36:	e062      	b.n	8003efe <Cross_Collision+0x2ae>
		if((piratePos[0]=='I' && piratePos[1]=='D') || (piratePos[0]=='D' && piratePos[1]=='I')){ if(piratePos[3]<60) return 1;}
 8003e38:	e05d      	b.n	8003ef6 <Cross_Collision+0x2a6>
	}
	/**************************************************************************/


	/********************************TN, PQ kereszteződés**********************/
	else if((myPos=='P' && nextPos=='Q') || (myPos=='Q' && nextPos=='P'))
 8003e3a:	79fb      	ldrb	r3, [r7, #7]
 8003e3c:	2b50      	cmp	r3, #80	; 0x50
 8003e3e:	d102      	bne.n	8003e46 <Cross_Collision+0x1f6>
 8003e40:	79bb      	ldrb	r3, [r7, #6]
 8003e42:	2b51      	cmp	r3, #81	; 0x51
 8003e44:	d005      	beq.n	8003e52 <Cross_Collision+0x202>
 8003e46:	79fb      	ldrb	r3, [r7, #7]
 8003e48:	2b51      	cmp	r3, #81	; 0x51
 8003e4a:	d11f      	bne.n	8003e8c <Cross_Collision+0x23c>
 8003e4c:	79bb      	ldrb	r3, [r7, #6]
 8003e4e:	2b50      	cmp	r3, #80	; 0x50
 8003e50:	d11c      	bne.n	8003e8c <Cross_Collision+0x23c>
	{
		if(piratePos[0]=='T'){ if(piratePos[3]<50) return 1; }
 8003e52:	4b0d      	ldr	r3, [pc, #52]	; (8003e88 <Cross_Collision+0x238>)
 8003e54:	781b      	ldrb	r3, [r3, #0]
 8003e56:	2b54      	cmp	r3, #84	; 0x54
 8003e58:	d105      	bne.n	8003e66 <Cross_Collision+0x216>
 8003e5a:	4b0b      	ldr	r3, [pc, #44]	; (8003e88 <Cross_Collision+0x238>)
 8003e5c:	78db      	ldrb	r3, [r3, #3]
 8003e5e:	2b31      	cmp	r3, #49	; 0x31
 8003e60:	d84b      	bhi.n	8003efa <Cross_Collision+0x2aa>
 8003e62:	2301      	movs	r3, #1
 8003e64:	e04b      	b.n	8003efe <Cross_Collision+0x2ae>
		else if(piratePos[1]=='T') return 1;
 8003e66:	4b08      	ldr	r3, [pc, #32]	; (8003e88 <Cross_Collision+0x238>)
 8003e68:	785b      	ldrb	r3, [r3, #1]
 8003e6a:	2b54      	cmp	r3, #84	; 0x54
 8003e6c:	d101      	bne.n	8003e72 <Cross_Collision+0x222>
 8003e6e:	2301      	movs	r3, #1
 8003e70:	e045      	b.n	8003efe <Cross_Collision+0x2ae>
		else if(piratePos[2]=='T'){ if(piratePos[3]>60) return 1; };
 8003e72:	4b05      	ldr	r3, [pc, #20]	; (8003e88 <Cross_Collision+0x238>)
 8003e74:	789b      	ldrb	r3, [r3, #2]
 8003e76:	2b54      	cmp	r3, #84	; 0x54
 8003e78:	d13f      	bne.n	8003efa <Cross_Collision+0x2aa>
 8003e7a:	4b03      	ldr	r3, [pc, #12]	; (8003e88 <Cross_Collision+0x238>)
 8003e7c:	78db      	ldrb	r3, [r3, #3]
 8003e7e:	2b3c      	cmp	r3, #60	; 0x3c
 8003e80:	d93b      	bls.n	8003efa <Cross_Collision+0x2aa>
 8003e82:	2301      	movs	r3, #1
 8003e84:	e03b      	b.n	8003efe <Cross_Collision+0x2ae>
 8003e86:	bf00      	nop
 8003e88:	20000354 	.word	0x20000354
	}
	else if(nextPos=='T')
 8003e8c:	79bb      	ldrb	r3, [r7, #6]
 8003e8e:	2b54      	cmp	r3, #84	; 0x54
 8003e90:	d134      	bne.n	8003efc <Cross_Collision+0x2ac>
	{
		if((piratePos[0]=='P' && piratePos[1]=='Q') || (piratePos[0]=='Q' && piratePos[1]=='P')){if(piratePos[3]<70)return 1;}
 8003e92:	4b1e      	ldr	r3, [pc, #120]	; (8003f0c <Cross_Collision+0x2bc>)
 8003e94:	781b      	ldrb	r3, [r3, #0]
 8003e96:	2b50      	cmp	r3, #80	; 0x50
 8003e98:	d103      	bne.n	8003ea2 <Cross_Collision+0x252>
 8003e9a:	4b1c      	ldr	r3, [pc, #112]	; (8003f0c <Cross_Collision+0x2bc>)
 8003e9c:	785b      	ldrb	r3, [r3, #1]
 8003e9e:	2b51      	cmp	r3, #81	; 0x51
 8003ea0:	d007      	beq.n	8003eb2 <Cross_Collision+0x262>
 8003ea2:	4b1a      	ldr	r3, [pc, #104]	; (8003f0c <Cross_Collision+0x2bc>)
 8003ea4:	781b      	ldrb	r3, [r3, #0]
 8003ea6:	2b51      	cmp	r3, #81	; 0x51
 8003ea8:	d109      	bne.n	8003ebe <Cross_Collision+0x26e>
 8003eaa:	4b18      	ldr	r3, [pc, #96]	; (8003f0c <Cross_Collision+0x2bc>)
 8003eac:	785b      	ldrb	r3, [r3, #1]
 8003eae:	2b50      	cmp	r3, #80	; 0x50
 8003eb0:	d105      	bne.n	8003ebe <Cross_Collision+0x26e>
 8003eb2:	4b16      	ldr	r3, [pc, #88]	; (8003f0c <Cross_Collision+0x2bc>)
 8003eb4:	78db      	ldrb	r3, [r3, #3]
 8003eb6:	2b45      	cmp	r3, #69	; 0x45
 8003eb8:	d820      	bhi.n	8003efc <Cross_Collision+0x2ac>
 8003eba:	2301      	movs	r3, #1
 8003ebc:	e01f      	b.n	8003efe <Cross_Collision+0x2ae>
		else if((piratePos[1]=='P' && piratePos[2]=='Q') || (piratePos[1]=='Q' && piratePos[2]=='P')){if(piratePos[3]>50)return 1;}
 8003ebe:	4b13      	ldr	r3, [pc, #76]	; (8003f0c <Cross_Collision+0x2bc>)
 8003ec0:	785b      	ldrb	r3, [r3, #1]
 8003ec2:	2b50      	cmp	r3, #80	; 0x50
 8003ec4:	d103      	bne.n	8003ece <Cross_Collision+0x27e>
 8003ec6:	4b11      	ldr	r3, [pc, #68]	; (8003f0c <Cross_Collision+0x2bc>)
 8003ec8:	789b      	ldrb	r3, [r3, #2]
 8003eca:	2b51      	cmp	r3, #81	; 0x51
 8003ecc:	d007      	beq.n	8003ede <Cross_Collision+0x28e>
 8003ece:	4b0f      	ldr	r3, [pc, #60]	; (8003f0c <Cross_Collision+0x2bc>)
 8003ed0:	785b      	ldrb	r3, [r3, #1]
 8003ed2:	2b51      	cmp	r3, #81	; 0x51
 8003ed4:	d112      	bne.n	8003efc <Cross_Collision+0x2ac>
 8003ed6:	4b0d      	ldr	r3, [pc, #52]	; (8003f0c <Cross_Collision+0x2bc>)
 8003ed8:	789b      	ldrb	r3, [r3, #2]
 8003eda:	2b50      	cmp	r3, #80	; 0x50
 8003edc:	d10e      	bne.n	8003efc <Cross_Collision+0x2ac>
 8003ede:	4b0b      	ldr	r3, [pc, #44]	; (8003f0c <Cross_Collision+0x2bc>)
 8003ee0:	78db      	ldrb	r3, [r3, #3]
 8003ee2:	2b32      	cmp	r3, #50	; 0x32
 8003ee4:	d90a      	bls.n	8003efc <Cross_Collision+0x2ac>
 8003ee6:	2301      	movs	r3, #1
 8003ee8:	e009      	b.n	8003efe <Cross_Collision+0x2ae>
		if((piratePos[0]=='K' && piratePos[1]=='L') || (piratePos[0]=='L' && piratePos[1]=='K')){ if(piratePos[3]<60) return 1;}
 8003eea:	bf00      	nop
 8003eec:	e006      	b.n	8003efc <Cross_Collision+0x2ac>
		if((piratePos[0]=='N' && piratePos[1]=='I') || (piratePos[0]=='I' && piratePos[1]=='N')){ if(piratePos[3]<60) return 1;}
 8003eee:	bf00      	nop
 8003ef0:	e004      	b.n	8003efc <Cross_Collision+0x2ac>
		if((piratePos[0]=='F' && piratePos[1]=='G') || (piratePos[0]=='G' && piratePos[1]=='F')){ if(piratePos[3]<60) return 1;}
 8003ef2:	bf00      	nop
 8003ef4:	e002      	b.n	8003efc <Cross_Collision+0x2ac>
		if((piratePos[0]=='I' && piratePos[1]=='D') || (piratePos[0]=='D' && piratePos[1]=='I')){ if(piratePos[3]<60) return 1;}
 8003ef6:	bf00      	nop
 8003ef8:	e000      	b.n	8003efc <Cross_Collision+0x2ac>
		if(piratePos[0]=='T'){ if(piratePos[3]<50) return 1; }
 8003efa:	bf00      	nop
	}
	/**************************************************************************/
	return 0;
 8003efc:	2300      	movs	r3, #0
}
 8003efe:	4618      	mov	r0, r3
 8003f00:	370c      	adds	r7, #12
 8003f02:	46bd      	mov	sp, r7
 8003f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f08:	4770      	bx	lr
 8003f0a:	bf00      	nop
 8003f0c:	20000354 	.word	0x20000354

08003f10 <Battery_Voltage_Compensate>:
float v=0;
//ha 1000 akkor a motor full csutkán megy előre
//ha -1000 akkor a motor full csutkán megy hátra

void Battery_Voltage_Compensate(ADC_HandleTypeDef *hadc_UNiMh,ADC_HandleTypeDef *hadc_ULiPo,UART_HandleTypeDef *huart_debugg)
{
 8003f10:	b580      	push	{r7, lr}
 8003f12:	b090      	sub	sp, #64	; 0x40
 8003f14:	af00      	add	r7, sp, #0
 8003f16:	60f8      	str	r0, [r7, #12]
 8003f18:	60b9      	str	r1, [r7, #8]
 8003f1a:	607a      	str	r2, [r7, #4]
	char msg[30];
	uint32_t raw=0;
 8003f1c:	2300      	movs	r3, #0
 8003f1e:	63fb      	str	r3, [r7, #60]	; 0x3c
	float bat;
	int i;

	//NiMh akku mérése
	for(i=0;i<20;i++)
 8003f20:	2300      	movs	r3, #0
 8003f22:	63bb      	str	r3, [r7, #56]	; 0x38
 8003f24:	e016      	b.n	8003f54 <Battery_Voltage_Compensate+0x44>
	{
		HAL_ADC_Start(hadc_UNiMh);
 8003f26:	68f8      	ldr	r0, [r7, #12]
 8003f28:	f003 fb88 	bl	800763c <HAL_ADC_Start>
		HAL_Delay(10);
 8003f2c:	200a      	movs	r0, #10
 8003f2e:	f003 fb1d 	bl	800756c <HAL_Delay>
		HAL_ADC_PollForConversion(hadc_UNiMh,20);
 8003f32:	2114      	movs	r1, #20
 8003f34:	68f8      	ldr	r0, [r7, #12]
 8003f36:	f003 fc53 	bl	80077e0 <HAL_ADC_PollForConversion>
		HAL_Delay(10);
 8003f3a:	200a      	movs	r0, #10
 8003f3c:	f003 fb16 	bl	800756c <HAL_Delay>
		raw += HAL_ADC_GetValue(hadc_UNiMh);
 8003f40:	68f8      	ldr	r0, [r7, #12]
 8003f42:	f003 fcd8 	bl	80078f6 <HAL_ADC_GetValue>
 8003f46:	4602      	mov	r2, r0
 8003f48:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003f4a:	4413      	add	r3, r2
 8003f4c:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(i=0;i<20;i++)
 8003f4e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003f50:	3301      	adds	r3, #1
 8003f52:	63bb      	str	r3, [r7, #56]	; 0x38
 8003f54:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003f56:	2b13      	cmp	r3, #19
 8003f58:	dde5      	ble.n	8003f26 <Battery_Voltage_Compensate+0x16>
	}
	bat=(float)raw * 0.00460575 / 20.0;//ez a mi feszültségünk V-ban
 8003f5a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003f5c:	ee07 3a90 	vmov	s15, r3
 8003f60:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003f64:	ee17 0a90 	vmov	r0, s15
 8003f68:	f7fc fb0e 	bl	8000588 <__aeabi_f2d>
 8003f6c:	a37b      	add	r3, pc, #492	; (adr r3, 800415c <Battery_Voltage_Compensate+0x24c>)
 8003f6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003f72:	f7fc fb61 	bl	8000638 <__aeabi_dmul>
 8003f76:	4602      	mov	r2, r0
 8003f78:	460b      	mov	r3, r1
 8003f7a:	4610      	mov	r0, r2
 8003f7c:	4619      	mov	r1, r3
 8003f7e:	f04f 0200 	mov.w	r2, #0
 8003f82:	4b71      	ldr	r3, [pc, #452]	; (8004148 <Battery_Voltage_Compensate+0x238>)
 8003f84:	f7fc fc82 	bl	800088c <__aeabi_ddiv>
 8003f88:	4602      	mov	r2, r0
 8003f8a:	460b      	mov	r3, r1
 8003f8c:	4610      	mov	r0, r2
 8003f8e:	4619      	mov	r1, r3
 8003f90:	f7fc fe2a 	bl	8000be8 <__aeabi_d2f>
 8003f94:	4603      	mov	r3, r0
 8003f96:	637b      	str	r3, [r7, #52]	; 0x34
	sprintf(msg,"NiMh charge: %2.2f V \r\n", bat);
 8003f98:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8003f9a:	f7fc faf5 	bl	8000588 <__aeabi_f2d>
 8003f9e:	4602      	mov	r2, r0
 8003fa0:	460b      	mov	r3, r1
 8003fa2:	f107 0014 	add.w	r0, r7, #20
 8003fa6:	4969      	ldr	r1, [pc, #420]	; (800414c <Battery_Voltage_Compensate+0x23c>)
 8003fa8:	f009 fc36 	bl	800d818 <siprintf>
	HAL_UART_Transmit(huart_debugg, (uint8_t*) msg, strlen(msg),10);
 8003fac:	f107 0314 	add.w	r3, r7, #20
 8003fb0:	4618      	mov	r0, r3
 8003fb2:	f7fc f92d 	bl	8000210 <strlen>
 8003fb6:	4603      	mov	r3, r0
 8003fb8:	b29a      	uxth	r2, r3
 8003fba:	f107 0114 	add.w	r1, r7, #20
 8003fbe:	230a      	movs	r3, #10
 8003fc0:	6878      	ldr	r0, [r7, #4]
 8003fc2:	f007 fec0 	bl	800bd46 <HAL_UART_Transmit>

	if(bat)compensation=7.75/bat;
 8003fc6:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8003fca:	eef5 7a40 	vcmp.f32	s15, #0.0
 8003fce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003fd2:	d009      	beq.n	8003fe8 <Battery_Voltage_Compensate+0xd8>
 8003fd4:	eef1 6a0f 	vmov.f32	s13, #31	; 0x40f80000  7.750
 8003fd8:	ed97 7a0d 	vldr	s14, [r7, #52]	; 0x34
 8003fdc:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003fe0:	4b5b      	ldr	r3, [pc, #364]	; (8004150 <Battery_Voltage_Compensate+0x240>)
 8003fe2:	edc3 7a00 	vstr	s15, [r3]
 8003fe6:	e003      	b.n	8003ff0 <Battery_Voltage_Compensate+0xe0>
	else compensation=1;
 8003fe8:	4b59      	ldr	r3, [pc, #356]	; (8004150 <Battery_Voltage_Compensate+0x240>)
 8003fea:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8003fee:	601a      	str	r2, [r3, #0]

	if(bat < 7.2)
 8003ff0:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8003ff2:	f7fc fac9 	bl	8000588 <__aeabi_f2d>
 8003ff6:	a34e      	add	r3, pc, #312	; (adr r3, 8004130 <Battery_Voltage_Compensate+0x220>)
 8003ff8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003ffc:	f7fc fd8e 	bl	8000b1c <__aeabi_dcmplt>
 8004000:	4603      	mov	r3, r0
 8004002:	2b00      	cmp	r3, #0
 8004004:	d010      	beq.n	8004028 <Battery_Voltage_Compensate+0x118>
	{
		for(i=0;i<10;i++)
 8004006:	2300      	movs	r3, #0
 8004008:	63bb      	str	r3, [r7, #56]	; 0x38
 800400a:	e00a      	b.n	8004022 <Battery_Voltage_Compensate+0x112>
		{
			LED_Y_TOGGLE;
 800400c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004010:	4850      	ldr	r0, [pc, #320]	; (8004154 <Battery_Voltage_Compensate+0x244>)
 8004012:	f005 f95e 	bl	80092d2 <HAL_GPIO_TogglePin>
			HAL_Delay(200);
 8004016:	20c8      	movs	r0, #200	; 0xc8
 8004018:	f003 faa8 	bl	800756c <HAL_Delay>
		for(i=0;i<10;i++)
 800401c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800401e:	3301      	adds	r3, #1
 8004020:	63bb      	str	r3, [r7, #56]	; 0x38
 8004022:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004024:	2b09      	cmp	r3, #9
 8004026:	ddf1      	ble.n	800400c <Battery_Voltage_Compensate+0xfc>
		}
	}

	//LiPo akku mérése
	raw=0;
 8004028:	2300      	movs	r3, #0
 800402a:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(i=0;i<20;i++)
 800402c:	2300      	movs	r3, #0
 800402e:	63bb      	str	r3, [r7, #56]	; 0x38
 8004030:	e016      	b.n	8004060 <Battery_Voltage_Compensate+0x150>
	{
		HAL_ADC_Start(hadc_ULiPo);
 8004032:	68b8      	ldr	r0, [r7, #8]
 8004034:	f003 fb02 	bl	800763c <HAL_ADC_Start>
		HAL_Delay(10);
 8004038:	200a      	movs	r0, #10
 800403a:	f003 fa97 	bl	800756c <HAL_Delay>
		HAL_ADC_PollForConversion(hadc_ULiPo,20);
 800403e:	2114      	movs	r1, #20
 8004040:	68b8      	ldr	r0, [r7, #8]
 8004042:	f003 fbcd 	bl	80077e0 <HAL_ADC_PollForConversion>
		HAL_Delay(10);
 8004046:	200a      	movs	r0, #10
 8004048:	f003 fa90 	bl	800756c <HAL_Delay>
		raw += HAL_ADC_GetValue(hadc_ULiPo);
 800404c:	68b8      	ldr	r0, [r7, #8]
 800404e:	f003 fc52 	bl	80078f6 <HAL_ADC_GetValue>
 8004052:	4602      	mov	r2, r0
 8004054:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8004056:	4413      	add	r3, r2
 8004058:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(i=0;i<20;i++)
 800405a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800405c:	3301      	adds	r3, #1
 800405e:	63bb      	str	r3, [r7, #56]	; 0x38
 8004060:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004062:	2b13      	cmp	r3, #19
 8004064:	dde5      	ble.n	8004032 <Battery_Voltage_Compensate+0x122>

	}
	bat = (float)raw * 0.003241242 / 20.0 + 0.02;//ez a mi feszültségünk V-ban
 8004066:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8004068:	ee07 3a90 	vmov	s15, r3
 800406c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004070:	ee17 0a90 	vmov	r0, s15
 8004074:	f7fc fa88 	bl	8000588 <__aeabi_f2d>
 8004078:	a32f      	add	r3, pc, #188	; (adr r3, 8004138 <Battery_Voltage_Compensate+0x228>)
 800407a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800407e:	f7fc fadb 	bl	8000638 <__aeabi_dmul>
 8004082:	4602      	mov	r2, r0
 8004084:	460b      	mov	r3, r1
 8004086:	4610      	mov	r0, r2
 8004088:	4619      	mov	r1, r3
 800408a:	f04f 0200 	mov.w	r2, #0
 800408e:	4b2e      	ldr	r3, [pc, #184]	; (8004148 <Battery_Voltage_Compensate+0x238>)
 8004090:	f7fc fbfc 	bl	800088c <__aeabi_ddiv>
 8004094:	4602      	mov	r2, r0
 8004096:	460b      	mov	r3, r1
 8004098:	4610      	mov	r0, r2
 800409a:	4619      	mov	r1, r3
 800409c:	a328      	add	r3, pc, #160	; (adr r3, 8004140 <Battery_Voltage_Compensate+0x230>)
 800409e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80040a2:	f7fc f913 	bl	80002cc <__adddf3>
 80040a6:	4602      	mov	r2, r0
 80040a8:	460b      	mov	r3, r1
 80040aa:	4610      	mov	r0, r2
 80040ac:	4619      	mov	r1, r3
 80040ae:	f7fc fd9b 	bl	8000be8 <__aeabi_d2f>
 80040b2:	4603      	mov	r3, r0
 80040b4:	637b      	str	r3, [r7, #52]	; 0x34
	sprintf(msg,"LiPo charge: %2.2f V \r\n", bat);
 80040b6:	6b78      	ldr	r0, [r7, #52]	; 0x34
 80040b8:	f7fc fa66 	bl	8000588 <__aeabi_f2d>
 80040bc:	4602      	mov	r2, r0
 80040be:	460b      	mov	r3, r1
 80040c0:	f107 0014 	add.w	r0, r7, #20
 80040c4:	4924      	ldr	r1, [pc, #144]	; (8004158 <Battery_Voltage_Compensate+0x248>)
 80040c6:	f009 fba7 	bl	800d818 <siprintf>
	HAL_UART_Transmit(huart_debugg, (uint8_t*)msg, strlen(msg),10);
 80040ca:	f107 0314 	add.w	r3, r7, #20
 80040ce:	4618      	mov	r0, r3
 80040d0:	f7fc f89e 	bl	8000210 <strlen>
 80040d4:	4603      	mov	r3, r0
 80040d6:	b29a      	uxth	r2, r3
 80040d8:	f107 0114 	add.w	r1, r7, #20
 80040dc:	230a      	movs	r3, #10
 80040de:	6878      	ldr	r0, [r7, #4]
 80040e0:	f007 fe31 	bl	800bd46 <HAL_UART_Transmit>

	/**/
	if(bat < 10)
 80040e4:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 80040e8:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80040ec:	eef4 7ac7 	vcmpe.f32	s15, s14
 80040f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80040f4:	d510      	bpl.n	8004118 <Battery_Voltage_Compensate+0x208>
	{
		for(i=0;i<20;i++)
 80040f6:	2300      	movs	r3, #0
 80040f8:	63bb      	str	r3, [r7, #56]	; 0x38
 80040fa:	e00a      	b.n	8004112 <Battery_Voltage_Compensate+0x202>
		{
			LED_Y_TOGGLE;
 80040fc:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004100:	4814      	ldr	r0, [pc, #80]	; (8004154 <Battery_Voltage_Compensate+0x244>)
 8004102:	f005 f8e6 	bl	80092d2 <HAL_GPIO_TogglePin>
			HAL_Delay(200);
 8004106:	20c8      	movs	r0, #200	; 0xc8
 8004108:	f003 fa30 	bl	800756c <HAL_Delay>
		for(i=0;i<20;i++)
 800410c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800410e:	3301      	adds	r3, #1
 8004110:	63bb      	str	r3, [r7, #56]	; 0x38
 8004112:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004114:	2b13      	cmp	r3, #19
 8004116:	ddf1      	ble.n	80040fc <Battery_Voltage_Compensate+0x1ec>
		}
	}

	LED_Y(0);
 8004118:	2201      	movs	r2, #1
 800411a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800411e:	480d      	ldr	r0, [pc, #52]	; (8004154 <Battery_Voltage_Compensate+0x244>)
 8004120:	f005 f8be 	bl	80092a0 <HAL_GPIO_WritePin>

}
 8004124:	bf00      	nop
 8004126:	3740      	adds	r7, #64	; 0x40
 8004128:	46bd      	mov	sp, r7
 800412a:	bd80      	pop	{r7, pc}
 800412c:	f3af 8000 	nop.w
 8004130:	cccccccd 	.word	0xcccccccd
 8004134:	401ccccc 	.word	0x401ccccc
 8004138:	8c6df334 	.word	0x8c6df334
 800413c:	3f6a8d60 	.word	0x3f6a8d60
 8004140:	47ae147b 	.word	0x47ae147b
 8004144:	3f947ae1 	.word	0x3f947ae1
 8004148:	40340000 	.word	0x40340000
 800414c:	080112d4 	.word	0x080112d4
 8004150:	20000030 	.word	0x20000030
 8004154:	40020400 	.word	0x40020400
 8004158:	080112ec 	.word	0x080112ec
 800415c:	99fa11a9 	.word	0x99fa11a9
 8004160:	3f72dd7a 	.word	0x3f72dd7a
 8004164:	00000000 	.word	0x00000000

08004168 <Measure_Velocity_Task>:

void Measure_Velocity_Task(TIM_HandleTypeDef *htim_encoder,uint32_t tick, uint32_t period)
{
 8004168:	b5b0      	push	{r4, r5, r7, lr}
 800416a:	b086      	sub	sp, #24
 800416c:	af00      	add	r7, sp, #0
 800416e:	60f8      	str	r0, [r7, #12]
 8004170:	60b9      	str	r1, [r7, #8]
 8004172:	607a      	str	r2, [r7, #4]
	static uint32_t tick_prev=0;
	static uint32_t measure_v_task_tick=4;
	static float alpha=0.4;
	static float invalpha=0.6;
	float v_uj=0;
 8004174:	f04f 0300 	mov.w	r3, #0
 8004178:	617b      	str	r3, [r7, #20]

	if(measure_v_task_tick>tick) return;
 800417a:	4b31      	ldr	r3, [pc, #196]	; (8004240 <Measure_Velocity_Task+0xd8>)
 800417c:	681b      	ldr	r3, [r3, #0]
 800417e:	68ba      	ldr	r2, [r7, #8]
 8004180:	429a      	cmp	r2, r3
 8004182:	d354      	bcc.n	800422e <Measure_Velocity_Task+0xc6>
	measure_v_task_tick= tick + period;
 8004184:	68ba      	ldr	r2, [r7, #8]
 8004186:	687b      	ldr	r3, [r7, #4]
 8004188:	4413      	add	r3, r2
 800418a:	4a2d      	ldr	r2, [pc, #180]	; (8004240 <Measure_Velocity_Task+0xd8>)
 800418c:	6013      	str	r3, [r2, #0]
	if(!tick_prev)
 800418e:	4b2d      	ldr	r3, [pc, #180]	; (8004244 <Measure_Velocity_Task+0xdc>)
 8004190:	681b      	ldr	r3, [r3, #0]
 8004192:	2b00      	cmp	r3, #0
 8004194:	d103      	bne.n	800419e <Measure_Velocity_Task+0x36>
	{
		tick_prev=tick;
 8004196:	4a2b      	ldr	r2, [pc, #172]	; (8004244 <Measure_Velocity_Task+0xdc>)
 8004198:	68bb      	ldr	r3, [r7, #8]
 800419a:	6013      	str	r3, [r2, #0]
		return;
 800419c:	e048      	b.n	8004230 <Measure_Velocity_Task+0xc8>
	}
	v_uj =((float) 0x8000 - (float) __HAL_TIM_GET_COUNTER(htim_encoder))*7.49/(float)period; //mm/s dimenzió
 800419e:	68fb      	ldr	r3, [r7, #12]
 80041a0:	681b      	ldr	r3, [r3, #0]
 80041a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80041a4:	ee07 3a90 	vmov	s15, r3
 80041a8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80041ac:	ed9f 7a26 	vldr	s14, [pc, #152]	; 8004248 <Measure_Velocity_Task+0xe0>
 80041b0:	ee77 7a67 	vsub.f32	s15, s14, s15
 80041b4:	ee17 0a90 	vmov	r0, s15
 80041b8:	f7fc f9e6 	bl	8000588 <__aeabi_f2d>
 80041bc:	a31e      	add	r3, pc, #120	; (adr r3, 8004238 <Measure_Velocity_Task+0xd0>)
 80041be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80041c2:	f7fc fa39 	bl	8000638 <__aeabi_dmul>
 80041c6:	4602      	mov	r2, r0
 80041c8:	460b      	mov	r3, r1
 80041ca:	4614      	mov	r4, r2
 80041cc:	461d      	mov	r5, r3
 80041ce:	687b      	ldr	r3, [r7, #4]
 80041d0:	ee07 3a90 	vmov	s15, r3
 80041d4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80041d8:	ee17 0a90 	vmov	r0, s15
 80041dc:	f7fc f9d4 	bl	8000588 <__aeabi_f2d>
 80041e0:	4602      	mov	r2, r0
 80041e2:	460b      	mov	r3, r1
 80041e4:	4620      	mov	r0, r4
 80041e6:	4629      	mov	r1, r5
 80041e8:	f7fc fb50 	bl	800088c <__aeabi_ddiv>
 80041ec:	4602      	mov	r2, r0
 80041ee:	460b      	mov	r3, r1
 80041f0:	4610      	mov	r0, r2
 80041f2:	4619      	mov	r1, r3
 80041f4:	f7fc fcf8 	bl	8000be8 <__aeabi_d2f>
 80041f8:	4603      	mov	r3, r0
 80041fa:	617b      	str	r3, [r7, #20]
	TIM8->CNT=0x8000;
 80041fc:	4b13      	ldr	r3, [pc, #76]	; (800424c <Measure_Velocity_Task+0xe4>)
 80041fe:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8004202:	625a      	str	r2, [r3, #36]	; 0x24
	//tick_prev=tick;
	//exponenciális szűrés
	v = alpha*(float)v_uj + invalpha*v;
 8004204:	4b12      	ldr	r3, [pc, #72]	; (8004250 <Measure_Velocity_Task+0xe8>)
 8004206:	ed93 7a00 	vldr	s14, [r3]
 800420a:	edd7 7a05 	vldr	s15, [r7, #20]
 800420e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8004212:	4b10      	ldr	r3, [pc, #64]	; (8004254 <Measure_Velocity_Task+0xec>)
 8004214:	edd3 6a00 	vldr	s13, [r3]
 8004218:	4b0f      	ldr	r3, [pc, #60]	; (8004258 <Measure_Velocity_Task+0xf0>)
 800421a:	edd3 7a00 	vldr	s15, [r3]
 800421e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8004222:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004226:	4b0c      	ldr	r3, [pc, #48]	; (8004258 <Measure_Velocity_Task+0xf0>)
 8004228:	edc3 7a00 	vstr	s15, [r3]
 800422c:	e000      	b.n	8004230 <Measure_Velocity_Task+0xc8>
	if(measure_v_task_tick>tick) return;
 800422e:	bf00      	nop
}
 8004230:	3718      	adds	r7, #24
 8004232:	46bd      	mov	sp, r7
 8004234:	bdb0      	pop	{r4, r5, r7, pc}
 8004236:	bf00      	nop
 8004238:	8f5c28f6 	.word	0x8f5c28f6
 800423c:	401df5c2 	.word	0x401df5c2
 8004240:	20000034 	.word	0x20000034
 8004244:	20000758 	.word	0x20000758
 8004248:	47000000 	.word	0x47000000
 800424c:	40010400 	.word	0x40010400
 8004250:	20000038 	.word	0x20000038
 8004254:	2000003c 	.word	0x2000003c
 8004258:	20000754 	.word	0x20000754
 800425c:	00000000 	.word	0x00000000

08004260 <Motor_Drive_Task>:

void Motor_Drive_Task(TIM_HandleTypeDef *htim_motor, UART_HandleTypeDef *huart, uint32_t tick, uint32_t period) //DUTY paramtert kiszedtem -> változtassuk a globális változót
{
 8004260:	b5b0      	push	{r4, r5, r7, lr}
 8004262:	b086      	sub	sp, #24
 8004264:	af00      	add	r7, sp, #0
 8004266:	60f8      	str	r0, [r7, #12]
 8004268:	60b9      	str	r1, [r7, #8]
 800426a:	607a      	str	r2, [r7, #4]
 800426c:	603b      	str	r3, [r7, #0]
	static uint32_t motor_drive_task_tick=5;
	static float v_prev,f,u=0;

	int32_t ccr1;
	int32_t ccr2;
	if(motor_drive_task_tick>tick) return;
 800426e:	4b9a      	ldr	r3, [pc, #616]	; (80044d8 <Motor_Drive_Task+0x278>)
 8004270:	681b      	ldr	r3, [r3, #0]
 8004272:	687a      	ldr	r2, [r7, #4]
 8004274:	429a      	cmp	r2, r3
 8004276:	f0c0 818a 	bcc.w	800458e <Motor_Drive_Task+0x32e>
	motor_drive_task_tick= tick + period;
 800427a:	687a      	ldr	r2, [r7, #4]
 800427c:	683b      	ldr	r3, [r7, #0]
 800427e:	4413      	add	r3, r2
 8004280:	4a95      	ldr	r2, [pc, #596]	; (80044d8 <Motor_Drive_Task+0x278>)
 8004282:	6013      	str	r3, [r2, #0]

	if(motorEnRemote && motorEnLineOk) //ha nem nyomtunk vészstopot és az akkuk is rendben vannak akkor pöröghet a motor
 8004284:	4b95      	ldr	r3, [pc, #596]	; (80044dc <Motor_Drive_Task+0x27c>)
 8004286:	781b      	ldrb	r3, [r3, #0]
 8004288:	2b00      	cmp	r3, #0
 800428a:	f000 80f7 	beq.w	800447c <Motor_Drive_Task+0x21c>
 800428e:	4b94      	ldr	r3, [pc, #592]	; (80044e0 <Motor_Drive_Task+0x280>)
 8004290:	781b      	ldrb	r3, [r3, #0]
 8004292:	2b00      	cmp	r3, #0
 8004294:	f000 80f2 	beq.w	800447c <Motor_Drive_Task+0x21c>
	{
		//az u paraméter a bevatkozó jel minusz holtásávot adja meg
		u= KC * (v_ref - v) * compensation + f;
 8004298:	4b92      	ldr	r3, [pc, #584]	; (80044e4 <Motor_Drive_Task+0x284>)
 800429a:	ed93 7a00 	vldr	s14, [r3]
 800429e:	4b92      	ldr	r3, [pc, #584]	; (80044e8 <Motor_Drive_Task+0x288>)
 80042a0:	edd3 7a00 	vldr	s15, [r3]
 80042a4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80042a8:	ee17 0a90 	vmov	r0, s15
 80042ac:	f7fc f96c 	bl	8000588 <__aeabi_f2d>
 80042b0:	a383      	add	r3, pc, #524	; (adr r3, 80044c0 <Motor_Drive_Task+0x260>)
 80042b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80042b6:	f7fc f9bf 	bl	8000638 <__aeabi_dmul>
 80042ba:	4602      	mov	r2, r0
 80042bc:	460b      	mov	r3, r1
 80042be:	4614      	mov	r4, r2
 80042c0:	461d      	mov	r5, r3
 80042c2:	4b8a      	ldr	r3, [pc, #552]	; (80044ec <Motor_Drive_Task+0x28c>)
 80042c4:	681b      	ldr	r3, [r3, #0]
 80042c6:	4618      	mov	r0, r3
 80042c8:	f7fc f95e 	bl	8000588 <__aeabi_f2d>
 80042cc:	4602      	mov	r2, r0
 80042ce:	460b      	mov	r3, r1
 80042d0:	4620      	mov	r0, r4
 80042d2:	4629      	mov	r1, r5
 80042d4:	f7fc f9b0 	bl	8000638 <__aeabi_dmul>
 80042d8:	4602      	mov	r2, r0
 80042da:	460b      	mov	r3, r1
 80042dc:	4614      	mov	r4, r2
 80042de:	461d      	mov	r5, r3
 80042e0:	4b83      	ldr	r3, [pc, #524]	; (80044f0 <Motor_Drive_Task+0x290>)
 80042e2:	681b      	ldr	r3, [r3, #0]
 80042e4:	4618      	mov	r0, r3
 80042e6:	f7fc f94f 	bl	8000588 <__aeabi_f2d>
 80042ea:	4602      	mov	r2, r0
 80042ec:	460b      	mov	r3, r1
 80042ee:	4620      	mov	r0, r4
 80042f0:	4629      	mov	r1, r5
 80042f2:	f7fb ffeb 	bl	80002cc <__adddf3>
 80042f6:	4602      	mov	r2, r0
 80042f8:	460b      	mov	r3, r1
 80042fa:	4610      	mov	r0, r2
 80042fc:	4619      	mov	r1, r3
 80042fe:	f7fc fc73 	bl	8000be8 <__aeabi_d2f>
 8004302:	4603      	mov	r3, r0
 8004304:	4a7b      	ldr	r2, [pc, #492]	; (80044f4 <Motor_Drive_Task+0x294>)
 8004306:	6013      	str	r3, [r2, #0]
		if(u>880) u=880;
 8004308:	4b7a      	ldr	r3, [pc, #488]	; (80044f4 <Motor_Drive_Task+0x294>)
 800430a:	edd3 7a00 	vldr	s15, [r3]
 800430e:	ed9f 7a7a 	vldr	s14, [pc, #488]	; 80044f8 <Motor_Drive_Task+0x298>
 8004312:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004316:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800431a:	dd03      	ble.n	8004324 <Motor_Drive_Task+0xc4>
 800431c:	4b75      	ldr	r3, [pc, #468]	; (80044f4 <Motor_Drive_Task+0x294>)
 800431e:	4a77      	ldr	r2, [pc, #476]	; (80044fc <Motor_Drive_Task+0x29c>)
 8004320:	601a      	str	r2, [r3, #0]
 8004322:	e00c      	b.n	800433e <Motor_Drive_Task+0xde>
		else if(u<-500)u=-500;
 8004324:	4b73      	ldr	r3, [pc, #460]	; (80044f4 <Motor_Drive_Task+0x294>)
 8004326:	edd3 7a00 	vldr	s15, [r3]
 800432a:	ed9f 7a75 	vldr	s14, [pc, #468]	; 8004500 <Motor_Drive_Task+0x2a0>
 800432e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004332:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004336:	d502      	bpl.n	800433e <Motor_Drive_Task+0xde>
 8004338:	4b6e      	ldr	r3, [pc, #440]	; (80044f4 <Motor_Drive_Task+0x294>)
 800433a:	4a72      	ldr	r2, [pc, #456]	; (8004504 <Motor_Drive_Task+0x2a4>)
 800433c:	601a      	str	r2, [r3, #0]
		f = ZD*f + (1-ZD)*u;
 800433e:	4b6c      	ldr	r3, [pc, #432]	; (80044f0 <Motor_Drive_Task+0x290>)
 8004340:	681b      	ldr	r3, [r3, #0]
 8004342:	4618      	mov	r0, r3
 8004344:	f7fc f920 	bl	8000588 <__aeabi_f2d>
 8004348:	a35f      	add	r3, pc, #380	; (adr r3, 80044c8 <Motor_Drive_Task+0x268>)
 800434a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800434e:	f7fc f973 	bl	8000638 <__aeabi_dmul>
 8004352:	4602      	mov	r2, r0
 8004354:	460b      	mov	r3, r1
 8004356:	4614      	mov	r4, r2
 8004358:	461d      	mov	r5, r3
 800435a:	4b66      	ldr	r3, [pc, #408]	; (80044f4 <Motor_Drive_Task+0x294>)
 800435c:	681b      	ldr	r3, [r3, #0]
 800435e:	4618      	mov	r0, r3
 8004360:	f7fc f912 	bl	8000588 <__aeabi_f2d>
 8004364:	a35a      	add	r3, pc, #360	; (adr r3, 80044d0 <Motor_Drive_Task+0x270>)
 8004366:	e9d3 2300 	ldrd	r2, r3, [r3]
 800436a:	f7fc f965 	bl	8000638 <__aeabi_dmul>
 800436e:	4602      	mov	r2, r0
 8004370:	460b      	mov	r3, r1
 8004372:	4620      	mov	r0, r4
 8004374:	4629      	mov	r1, r5
 8004376:	f7fb ffa9 	bl	80002cc <__adddf3>
 800437a:	4602      	mov	r2, r0
 800437c:	460b      	mov	r3, r1
 800437e:	4610      	mov	r0, r2
 8004380:	4619      	mov	r1, r3
 8004382:	f7fc fc31 	bl	8000be8 <__aeabi_d2f>
 8004386:	4603      	mov	r3, r0
 8004388:	4a59      	ldr	r2, [pc, #356]	; (80044f0 <Motor_Drive_Task+0x290>)
 800438a:	6013      	str	r3, [r2, #0]
		//ez alapján a kiadandó kitöltési tényező
		if(u>0) motorDuty=(int)u+70;
 800438c:	4b59      	ldr	r3, [pc, #356]	; (80044f4 <Motor_Drive_Task+0x294>)
 800438e:	edd3 7a00 	vldr	s15, [r3]
 8004392:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004396:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800439a:	dd0a      	ble.n	80043b2 <Motor_Drive_Task+0x152>
 800439c:	4b55      	ldr	r3, [pc, #340]	; (80044f4 <Motor_Drive_Task+0x294>)
 800439e:	edd3 7a00 	vldr	s15, [r3]
 80043a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043a6:	ee17 3a90 	vmov	r3, s15
 80043aa:	3346      	adds	r3, #70	; 0x46
 80043ac:	4a56      	ldr	r2, [pc, #344]	; (8004508 <Motor_Drive_Task+0x2a8>)
 80043ae:	6013      	str	r3, [r2, #0]
 80043b0:	e01b      	b.n	80043ea <Motor_Drive_Task+0x18a>
		else if(u<0) motorDuty=(int)u-70;
 80043b2:	4b50      	ldr	r3, [pc, #320]	; (80044f4 <Motor_Drive_Task+0x294>)
 80043b4:	edd3 7a00 	vldr	s15, [r3]
 80043b8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80043bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80043c0:	d50a      	bpl.n	80043d8 <Motor_Drive_Task+0x178>
 80043c2:	4b4c      	ldr	r3, [pc, #304]	; (80044f4 <Motor_Drive_Task+0x294>)
 80043c4:	edd3 7a00 	vldr	s15, [r3]
 80043c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043cc:	ee17 3a90 	vmov	r3, s15
 80043d0:	3b46      	subs	r3, #70	; 0x46
 80043d2:	4a4d      	ldr	r2, [pc, #308]	; (8004508 <Motor_Drive_Task+0x2a8>)
 80043d4:	6013      	str	r3, [r2, #0]
 80043d6:	e008      	b.n	80043ea <Motor_Drive_Task+0x18a>
		else motorDuty=(int)u;
 80043d8:	4b46      	ldr	r3, [pc, #280]	; (80044f4 <Motor_Drive_Task+0x294>)
 80043da:	edd3 7a00 	vldr	s15, [r3]
 80043de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043e2:	ee17 2a90 	vmov	r2, s15
 80043e6:	4b48      	ldr	r3, [pc, #288]	; (8004508 <Motor_Drive_Task+0x2a8>)
 80043e8:	601a      	str	r2, [r3, #0]
		if(fabs(v_ref)<100 && v*v_prev<=0)stop=1;
 80043ea:	4b3e      	ldr	r3, [pc, #248]	; (80044e4 <Motor_Drive_Task+0x284>)
 80043ec:	edd3 7a00 	vldr	s15, [r3]
 80043f0:	eef0 7ae7 	vabs.f32	s15, s15
 80043f4:	ed9f 7a45 	vldr	s14, [pc, #276]	; 800450c <Motor_Drive_Task+0x2ac>
 80043f8:	eef4 7ac7 	vcmpe.f32	s15, s14
 80043fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004400:	d50f      	bpl.n	8004422 <Motor_Drive_Task+0x1c2>
 8004402:	4b39      	ldr	r3, [pc, #228]	; (80044e8 <Motor_Drive_Task+0x288>)
 8004404:	ed93 7a00 	vldr	s14, [r3]
 8004408:	4b41      	ldr	r3, [pc, #260]	; (8004510 <Motor_Drive_Task+0x2b0>)
 800440a:	edd3 7a00 	vldr	s15, [r3]
 800440e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004412:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004416:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800441a:	d802      	bhi.n	8004422 <Motor_Drive_Task+0x1c2>
 800441c:	4b3d      	ldr	r3, [pc, #244]	; (8004514 <Motor_Drive_Task+0x2b4>)
 800441e:	2201      	movs	r2, #1
 8004420:	701a      	strb	r2, [r3, #0]
		if(stop)
 8004422:	4b3c      	ldr	r3, [pc, #240]	; (8004514 <Motor_Drive_Task+0x2b4>)
 8004424:	781b      	ldrb	r3, [r3, #0]
 8004426:	2b00      	cmp	r3, #0
 8004428:	d022      	beq.n	8004470 <Motor_Drive_Task+0x210>
		{
			if(fabs(v_ref)>100)
 800442a:	4b2e      	ldr	r3, [pc, #184]	; (80044e4 <Motor_Drive_Task+0x284>)
 800442c:	edd3 7a00 	vldr	s15, [r3]
 8004430:	eef0 7ae7 	vabs.f32	s15, s15
 8004434:	ed9f 7a35 	vldr	s14, [pc, #212]	; 800450c <Motor_Drive_Task+0x2ac>
 8004438:	eef4 7ac7 	vcmpe.f32	s15, s14
 800443c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004440:	dd08      	ble.n	8004454 <Motor_Drive_Task+0x1f4>
			{
				stop=0;
 8004442:	4b34      	ldr	r3, [pc, #208]	; (8004514 <Motor_Drive_Task+0x2b4>)
 8004444:	2200      	movs	r2, #0
 8004446:	701a      	strb	r2, [r3, #0]
				MOTOR_EN(1);
 8004448:	2201      	movs	r2, #1
 800444a:	2140      	movs	r1, #64	; 0x40
 800444c:	4832      	ldr	r0, [pc, #200]	; (8004518 <Motor_Drive_Task+0x2b8>)
 800444e:	f004 ff27 	bl	80092a0 <HAL_GPIO_WritePin>
		if(stop)
 8004452:	e020      	b.n	8004496 <Motor_Drive_Task+0x236>
			}
			else
			{
				f=u=0;
 8004454:	4b27      	ldr	r3, [pc, #156]	; (80044f4 <Motor_Drive_Task+0x294>)
 8004456:	f04f 0200 	mov.w	r2, #0
 800445a:	601a      	str	r2, [r3, #0]
 800445c:	4b25      	ldr	r3, [pc, #148]	; (80044f4 <Motor_Drive_Task+0x294>)
 800445e:	681b      	ldr	r3, [r3, #0]
 8004460:	4a23      	ldr	r2, [pc, #140]	; (80044f0 <Motor_Drive_Task+0x290>)
 8004462:	6013      	str	r3, [r2, #0]
				MOTOR_EN(0); //amugy stop
 8004464:	2200      	movs	r2, #0
 8004466:	2140      	movs	r1, #64	; 0x40
 8004468:	482b      	ldr	r0, [pc, #172]	; (8004518 <Motor_Drive_Task+0x2b8>)
 800446a:	f004 ff19 	bl	80092a0 <HAL_GPIO_WritePin>
		if(stop)
 800446e:	e012      	b.n	8004496 <Motor_Drive_Task+0x236>
			}

		}
		else MOTOR_EN(1);
 8004470:	2201      	movs	r2, #1
 8004472:	2140      	movs	r1, #64	; 0x40
 8004474:	4828      	ldr	r0, [pc, #160]	; (8004518 <Motor_Drive_Task+0x2b8>)
 8004476:	f004 ff13 	bl	80092a0 <HAL_GPIO_WritePin>
		if(stop)
 800447a:	e00c      	b.n	8004496 <Motor_Drive_Task+0x236>
	}
	else
	{	f=u=0;
 800447c:	4b1d      	ldr	r3, [pc, #116]	; (80044f4 <Motor_Drive_Task+0x294>)
 800447e:	f04f 0200 	mov.w	r2, #0
 8004482:	601a      	str	r2, [r3, #0]
 8004484:	4b1b      	ldr	r3, [pc, #108]	; (80044f4 <Motor_Drive_Task+0x294>)
 8004486:	681b      	ldr	r3, [r3, #0]
 8004488:	4a19      	ldr	r2, [pc, #100]	; (80044f0 <Motor_Drive_Task+0x290>)
 800448a:	6013      	str	r3, [r2, #0]
		MOTOR_EN(0); //amugy stop
 800448c:	2200      	movs	r2, #0
 800448e:	2140      	movs	r1, #64	; 0x40
 8004490:	4821      	ldr	r0, [pc, #132]	; (8004518 <Motor_Drive_Task+0x2b8>)
 8004492:	f004 ff05 	bl	80092a0 <HAL_GPIO_WritePin>
	}
	//A két érték amit irogatsz (TIM3->CCR1,CCR2) konkrét timer periféria regiszterek, nem feltétlen jó őket folyamatosan újraírni 10ms enként
	/**/
	if(mode==FAST && rxBuf[1]<1 && !leaveLineEnabled)
 8004496:	4b21      	ldr	r3, [pc, #132]	; (800451c <Motor_Drive_Task+0x2bc>)
 8004498:	781b      	ldrb	r3, [r3, #0]
 800449a:	2b3f      	cmp	r3, #63	; 0x3f
 800449c:	d146      	bne.n	800452c <Motor_Drive_Task+0x2cc>
 800449e:	4b20      	ldr	r3, [pc, #128]	; (8004520 <Motor_Drive_Task+0x2c0>)
 80044a0:	785b      	ldrb	r3, [r3, #1]
 80044a2:	2b00      	cmp	r3, #0
 80044a4:	d142      	bne.n	800452c <Motor_Drive_Task+0x2cc>
 80044a6:	4b1f      	ldr	r3, [pc, #124]	; (8004524 <Motor_Drive_Task+0x2c4>)
 80044a8:	781b      	ldrb	r3, [r3, #0]
 80044aa:	2b00      	cmp	r3, #0
 80044ac:	d13e      	bne.n	800452c <Motor_Drive_Task+0x2cc>
	{
		TIM3->CCR1=499;
 80044ae:	4b1e      	ldr	r3, [pc, #120]	; (8004528 <Motor_Drive_Task+0x2c8>)
 80044b0:	f240 12f3 	movw	r2, #499	; 0x1f3
 80044b4:	635a      	str	r2, [r3, #52]	; 0x34
		TIM3->CCR2=499;
 80044b6:	4b1c      	ldr	r3, [pc, #112]	; (8004528 <Motor_Drive_Task+0x2c8>)
 80044b8:	f240 12f3 	movw	r2, #499	; 0x1f3
 80044bc:	639a      	str	r2, [r3, #56]	; 0x38
 80044be:	e05d      	b.n	800457c <Motor_Drive_Task+0x31c>
 80044c0:	30be0ded 	.word	0x30be0ded
 80044c4:	3fd02a99 	.word	0x3fd02a99
 80044c8:	9b3d07c8 	.word	0x9b3d07c8
 80044cc:	3fef9f55 	.word	0x3fef9f55
 80044d0:	30be0e00 	.word	0x30be0e00
 80044d4:	3f882a99 	.word	0x3f882a99
 80044d8:	20000040 	.word	0x20000040
 80044dc:	20000c40 	.word	0x20000c40
 80044e0:	20000c41 	.word	0x20000c41
 80044e4:	20000338 	.word	0x20000338
 80044e8:	20000754 	.word	0x20000754
 80044ec:	20000030 	.word	0x20000030
 80044f0:	2000075c 	.word	0x2000075c
 80044f4:	20000760 	.word	0x20000760
 80044f8:	445c0000 	.word	0x445c0000
 80044fc:	445c0000 	.word	0x445c0000
 8004500:	c3fa0000 	.word	0xc3fa0000
 8004504:	c3fa0000 	.word	0xc3fa0000
 8004508:	20000764 	.word	0x20000764
 800450c:	42c80000 	.word	0x42c80000
 8004510:	20000768 	.word	0x20000768
 8004514:	2000076c 	.word	0x2000076c
 8004518:	40020400 	.word	0x40020400
 800451c:	20000336 	.word	0x20000336
 8004520:	20000774 	.word	0x20000774
 8004524:	2000033c 	.word	0x2000033c
 8004528:	40000400 	.word	0x40000400
		//LED_Y_TOGGLE;
	}
	else if(motorDuty!=motorDutyPrev)//csak akkor írjuk át őket ha tényleg muszáj (ha változtak az előző taskhívás óta)
 800452c:	4b1a      	ldr	r3, [pc, #104]	; (8004598 <Motor_Drive_Task+0x338>)
 800452e:	681a      	ldr	r2, [r3, #0]
 8004530:	4b1a      	ldr	r3, [pc, #104]	; (800459c <Motor_Drive_Task+0x33c>)
 8004532:	681b      	ldr	r3, [r3, #0]
 8004534:	429a      	cmp	r2, r3
 8004536:	d021      	beq.n	800457c <Motor_Drive_Task+0x31c>
	{
		ccr2 = (motorDuty + 1000)/2-1;
 8004538:	4b17      	ldr	r3, [pc, #92]	; (8004598 <Motor_Drive_Task+0x338>)
 800453a:	681b      	ldr	r3, [r3, #0]
 800453c:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8004540:	0fda      	lsrs	r2, r3, #31
 8004542:	4413      	add	r3, r2
 8004544:	105b      	asrs	r3, r3, #1
 8004546:	3b01      	subs	r3, #1
 8004548:	617b      	str	r3, [r7, #20]
		if(ccr2>950)ccr2=950;
 800454a:	697b      	ldr	r3, [r7, #20]
 800454c:	f240 32b6 	movw	r2, #950	; 0x3b6
 8004550:	4293      	cmp	r3, r2
 8004552:	dd02      	ble.n	800455a <Motor_Drive_Task+0x2fa>
 8004554:	f240 33b6 	movw	r3, #950	; 0x3b6
 8004558:	617b      	str	r3, [r7, #20]
		if(ccr2<-950)ccr2=-950;
 800455a:	697b      	ldr	r3, [r7, #20]
 800455c:	4a10      	ldr	r2, [pc, #64]	; (80045a0 <Motor_Drive_Task+0x340>)
 800455e:	4293      	cmp	r3, r2
 8004560:	da01      	bge.n	8004566 <Motor_Drive_Task+0x306>
 8004562:	4b0f      	ldr	r3, [pc, #60]	; (80045a0 <Motor_Drive_Task+0x340>)
 8004564:	617b      	str	r3, [r7, #20]
		ccr1= 998-ccr2;
 8004566:	697b      	ldr	r3, [r7, #20]
 8004568:	f5c3 7379 	rsb	r3, r3, #996	; 0x3e4
 800456c:	3302      	adds	r3, #2
 800456e:	613b      	str	r3, [r7, #16]

		//2 Referencia megadása
		//Ezeket a loopba kéne változtatni folyamatosan, pwm-elinditas mashova kell majd

		TIM3->CCR1=ccr1;
 8004570:	4a0c      	ldr	r2, [pc, #48]	; (80045a4 <Motor_Drive_Task+0x344>)
 8004572:	693b      	ldr	r3, [r7, #16]
 8004574:	6353      	str	r3, [r2, #52]	; 0x34
		TIM3->CCR2=ccr2;
 8004576:	4a0b      	ldr	r2, [pc, #44]	; (80045a4 <Motor_Drive_Task+0x344>)
 8004578:	697b      	ldr	r3, [r7, #20]
 800457a:	6393      	str	r3, [r2, #56]	; 0x38
	}
	motorDutyPrev=motorDuty;
 800457c:	4b06      	ldr	r3, [pc, #24]	; (8004598 <Motor_Drive_Task+0x338>)
 800457e:	681b      	ldr	r3, [r3, #0]
 8004580:	4a06      	ldr	r2, [pc, #24]	; (800459c <Motor_Drive_Task+0x33c>)
 8004582:	6013      	str	r3, [r2, #0]
	v_prev=v;
 8004584:	4b08      	ldr	r3, [pc, #32]	; (80045a8 <Motor_Drive_Task+0x348>)
 8004586:	681b      	ldr	r3, [r3, #0]
 8004588:	4a08      	ldr	r2, [pc, #32]	; (80045ac <Motor_Drive_Task+0x34c>)
 800458a:	6013      	str	r3, [r2, #0]
 800458c:	e000      	b.n	8004590 <Motor_Drive_Task+0x330>
	if(motor_drive_task_tick>tick) return;
 800458e:	bf00      	nop
}
 8004590:	3718      	adds	r7, #24
 8004592:	46bd      	mov	sp, r7
 8004594:	bdb0      	pop	{r4, r5, r7, pc}
 8004596:	bf00      	nop
 8004598:	20000764 	.word	0x20000764
 800459c:	20000770 	.word	0x20000770
 80045a0:	fffffc4a 	.word	0xfffffc4a
 80045a4:	40000400 	.word	0x40000400
 80045a8:	20000754 	.word	0x20000754
 80045ac:	20000768 	.word	0x20000768

080045b0 <G0_Read_Fast>:

uint16_t boostCnt=0;


uint8_t G0_Read_Fast(UART_HandleTypeDef *huart_stm,UART_HandleTypeDef *huart_debugg)
{
 80045b0:	b580      	push	{r7, lr}
 80045b2:	b084      	sub	sp, #16
 80045b4:	af00      	add	r7, sp, #0
 80045b6:	6078      	str	r0, [r7, #4]
 80045b8:	6039      	str	r1, [r7, #0]

	uint8_t state=0;
 80045ba:	2300      	movs	r3, #0
 80045bc:	73fb      	strb	r3, [r7, #15]
	txBuf[0]=CMD_READ_FAST;
 80045be:	4b13      	ldr	r3, [pc, #76]	; (800460c <G0_Read_Fast+0x5c>)
 80045c0:	222a      	movs	r2, #42	; 0x2a
 80045c2:	701a      	strb	r2, [r3, #0]
	HAL_UART_Transmit(huart_stm, txBuf,1, 2);
 80045c4:	2302      	movs	r3, #2
 80045c6:	2201      	movs	r2, #1
 80045c8:	4910      	ldr	r1, [pc, #64]	; (800460c <G0_Read_Fast+0x5c>)
 80045ca:	6878      	ldr	r0, [r7, #4]
 80045cc:	f007 fbbb 	bl	800bd46 <HAL_UART_Transmit>
	state=HAL_UART_Receive(huart_stm, rxBuf, 8, 4);
 80045d0:	2304      	movs	r3, #4
 80045d2:	2208      	movs	r2, #8
 80045d4:	490e      	ldr	r1, [pc, #56]	; (8004610 <G0_Read_Fast+0x60>)
 80045d6:	6878      	ldr	r0, [r7, #4]
 80045d8:	f007 fc47 	bl	800be6a <HAL_UART_Receive>
 80045dc:	4603      	mov	r3, r0
 80045de:	73fb      	strb	r3, [r7, #15]
	motorEnLineOk=1; //ha van akkor mehet a szabályozás
 80045e0:	4b0c      	ldr	r3, [pc, #48]	; (8004614 <G0_Read_Fast+0x64>)
 80045e2:	2201      	movs	r2, #1
 80045e4:	701a      	strb	r2, [r3, #0]
	if((state==HAL_OK)&&(rxBuf[0]==START_BYTE_FAST) && (rxBuf[7]==STOP_BYTE))//jöt adat a G0 tól és a keret is megfelelő
 80045e6:	7bfb      	ldrb	r3, [r7, #15]
 80045e8:	2b00      	cmp	r3, #0
 80045ea:	d109      	bne.n	8004600 <G0_Read_Fast+0x50>
 80045ec:	4b08      	ldr	r3, [pc, #32]	; (8004610 <G0_Read_Fast+0x60>)
 80045ee:	781b      	ldrb	r3, [r3, #0]
 80045f0:	2b41      	cmp	r3, #65	; 0x41
 80045f2:	d105      	bne.n	8004600 <G0_Read_Fast+0x50>
 80045f4:	4b06      	ldr	r3, [pc, #24]	; (8004610 <G0_Read_Fast+0x60>)
 80045f6:	79db      	ldrb	r3, [r3, #7]
 80045f8:	2b12      	cmp	r3, #18
 80045fa:	d101      	bne.n	8004600 <G0_Read_Fast+0x50>
	{
		return 0;
 80045fc:	2300      	movs	r3, #0
 80045fe:	e000      	b.n	8004602 <G0_Read_Fast+0x52>
	}
	else //nem jött szabályos adat a G0-tól
	{
		return 1;
 8004600:	2301      	movs	r3, #1
	}
}
 8004602:	4618      	mov	r0, r3
 8004604:	3710      	adds	r7, #16
 8004606:	46bd      	mov	sp, r7
 8004608:	bd80      	pop	{r7, pc}
 800460a:	bf00      	nop
 800460c:	20000044 	.word	0x20000044
 8004610:	20000774 	.word	0x20000774
 8004614:	20000c41 	.word	0x20000c41

08004618 <G0_Read_Skill>:

uint8_t G0_Read_Skill(UART_HandleTypeDef *huart_stm,UART_HandleTypeDef *huart_debugg, uint8_t command)
{
 8004618:	b580      	push	{r7, lr}
 800461a:	b086      	sub	sp, #24
 800461c:	af00      	add	r7, sp, #0
 800461e:	60f8      	str	r0, [r7, #12]
 8004620:	60b9      	str	r1, [r7, #8]
 8004622:	4613      	mov	r3, r2
 8004624:	71fb      	strb	r3, [r7, #7]
	uint8_t state=0;
 8004626:	2300      	movs	r3, #0
 8004628:	75fb      	strb	r3, [r7, #23]
	txBuf[0]=command;
 800462a:	4a15      	ldr	r2, [pc, #84]	; (8004680 <G0_Read_Skill+0x68>)
 800462c:	79fb      	ldrb	r3, [r7, #7]
 800462e:	7013      	strb	r3, [r2, #0]
	HAL_UART_Transmit(huart_stm, txBuf,1, 2);
 8004630:	2302      	movs	r3, #2
 8004632:	2201      	movs	r2, #1
 8004634:	4912      	ldr	r1, [pc, #72]	; (8004680 <G0_Read_Skill+0x68>)
 8004636:	68f8      	ldr	r0, [r7, #12]
 8004638:	f007 fb85 	bl	800bd46 <HAL_UART_Transmit>
	state = HAL_UART_Receive(huart_stm, rxBuf, 10, 4);
 800463c:	2304      	movs	r3, #4
 800463e:	220a      	movs	r2, #10
 8004640:	4910      	ldr	r1, [pc, #64]	; (8004684 <G0_Read_Skill+0x6c>)
 8004642:	68f8      	ldr	r0, [r7, #12]
 8004644:	f007 fc11 	bl	800be6a <HAL_UART_Receive>
 8004648:	4603      	mov	r3, r0
 800464a:	75fb      	strb	r3, [r7, #23]
	motorEnLineOk=1; //ha van akkor mehet a szabályozás
 800464c:	4b0e      	ldr	r3, [pc, #56]	; (8004688 <G0_Read_Skill+0x70>)
 800464e:	2201      	movs	r2, #1
 8004650:	701a      	strb	r2, [r3, #0]
	if((state==HAL_OK)&&(rxBuf[0]==START_BYTE_SKILL_FORWARD || rxBuf[0]==START_BYTE_SKILL_REVERSE) && (rxBuf[9]==STOP_BYTE))//jöt adat a G0 tól és a keret is megfelelő
 8004652:	7dfb      	ldrb	r3, [r7, #23]
 8004654:	2b00      	cmp	r3, #0
 8004656:	d10d      	bne.n	8004674 <G0_Read_Skill+0x5c>
 8004658:	4b0a      	ldr	r3, [pc, #40]	; (8004684 <G0_Read_Skill+0x6c>)
 800465a:	781b      	ldrb	r3, [r3, #0]
 800465c:	2b50      	cmp	r3, #80	; 0x50
 800465e:	d003      	beq.n	8004668 <G0_Read_Skill+0x50>
 8004660:	4b08      	ldr	r3, [pc, #32]	; (8004684 <G0_Read_Skill+0x6c>)
 8004662:	781b      	ldrb	r3, [r3, #0]
 8004664:	2ba8      	cmp	r3, #168	; 0xa8
 8004666:	d105      	bne.n	8004674 <G0_Read_Skill+0x5c>
 8004668:	4b06      	ldr	r3, [pc, #24]	; (8004684 <G0_Read_Skill+0x6c>)
 800466a:	7a5b      	ldrb	r3, [r3, #9]
 800466c:	2b12      	cmp	r3, #18
 800466e:	d101      	bne.n	8004674 <G0_Read_Skill+0x5c>
	{
		return 0;
 8004670:	2300      	movs	r3, #0
 8004672:	e000      	b.n	8004676 <G0_Read_Skill+0x5e>
	}
	else //nem jött szabályos adat a G0-tól
	{
		return 1;
 8004674:	2301      	movs	r3, #1
	}
}
 8004676:	4618      	mov	r0, r3
 8004678:	3718      	adds	r7, #24
 800467a:	46bd      	mov	sp, r7
 800467c:	bd80      	pop	{r7, pc}
 800467e:	bf00      	nop
 8004680:	20000044 	.word	0x20000044
 8004684:	20000774 	.word	0x20000774
 8004688:	20000c41 	.word	0x20000c41
 800468c:	00000000 	.word	0x00000000

08004690 <Line_Track_Task>:


void Line_Track_Task(UART_HandleTypeDef *huart_stm,UART_HandleTypeDef *huart_debugg, uint32_t tick, uint32_t period)
{
 8004690:	b580      	push	{r7, lr}
 8004692:	b086      	sub	sp, #24
 8004694:	af00      	add	r7, sp, #0
 8004696:	60f8      	str	r0, [r7, #12]
 8004698:	60b9      	str	r1, [r7, #8]
 800469a:	607a      	str	r2, [r7, #4]
 800469c:	603b      	str	r3, [r7, #0]
	static float PHI;
	static float gamma=0;
	static uint32_t ccr_rear_prev=0;
	static uint32_t tick_prev=0;

	if(line_track_task_tick>tick) return;
 800469e:	4b90      	ldr	r3, [pc, #576]	; (80048e0 <Line_Track_Task+0x250>)
 80046a0:	681b      	ldr	r3, [r3, #0]
 80046a2:	687a      	ldr	r2, [r7, #4]
 80046a4:	429a      	cmp	r2, r3
 80046a6:	f0c0 83c3 	bcc.w	8004e30 <Line_Track_Task+0x7a0>
	line_track_task_tick = tick + period;
 80046aa:	687a      	ldr	r2, [r7, #4]
 80046ac:	683b      	ldr	r3, [r7, #0]
 80046ae:	4413      	add	r3, r2
 80046b0:	4a8b      	ldr	r2, [pc, #556]	; (80048e0 <Line_Track_Task+0x250>)
 80046b2:	6013      	str	r3, [r2, #0]

	if(mode == SKILL)
 80046b4:	4b8b      	ldr	r3, [pc, #556]	; (80048e4 <Line_Track_Task+0x254>)
 80046b6:	781b      	ldrb	r3, [r3, #0]
 80046b8:	2b52      	cmp	r3, #82	; 0x52
 80046ba:	f040 81fa 	bne.w	8004ab2 <Line_Track_Task+0x422>
	{
		if(orientation==FORWARD)
 80046be:	4b8a      	ldr	r3, [pc, #552]	; (80048e8 <Line_Track_Task+0x258>)
 80046c0:	781b      	ldrb	r3, [r3, #0]
 80046c2:	2b00      	cmp	r3, #0
 80046c4:	f040 80df 	bne.w	8004886 <Line_Track_Task+0x1f6>
		{
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_FORWARD))return;
 80046c8:	2239      	movs	r2, #57	; 0x39
 80046ca:	68b9      	ldr	r1, [r7, #8]
 80046cc:	68f8      	ldr	r0, [r7, #12]
 80046ce:	f7ff ffa3 	bl	8004618 <G0_Read_Skill>
 80046d2:	4603      	mov	r3, r0
 80046d4:	2b00      	cmp	r3, #0
 80046d6:	f040 83ad 	bne.w	8004e34 <Line_Track_Task+0x7a4>

			uint8_t tmp=Lane_Changer(tick);
 80046da:	6878      	ldr	r0, [r7, #4]
 80046dc:	f001 f8e6 	bl	80058ac <Lane_Changer>
 80046e0:	4603      	mov	r3, r0
 80046e2:	75bb      	strb	r3, [r7, #22]
			if(v_control==NORMAL_VEL)v_ref=1100;
 80046e4:	4b81      	ldr	r3, [pc, #516]	; (80048ec <Line_Track_Task+0x25c>)
 80046e6:	781b      	ldrb	r3, [r3, #0]
 80046e8:	2b02      	cmp	r3, #2
 80046ea:	d103      	bne.n	80046f4 <Line_Track_Task+0x64>
 80046ec:	4b80      	ldr	r3, [pc, #512]	; (80048f0 <Line_Track_Task+0x260>)
 80046ee:	4a81      	ldr	r2, [pc, #516]	; (80048f4 <Line_Track_Task+0x264>)
 80046f0:	601a      	str	r2, [r3, #0]
 80046f2:	e00e      	b.n	8004712 <Line_Track_Task+0x82>
			else if(v_control==SLOW_DOWN)v_ref=600;
 80046f4:	4b7d      	ldr	r3, [pc, #500]	; (80048ec <Line_Track_Task+0x25c>)
 80046f6:	781b      	ldrb	r3, [r3, #0]
 80046f8:	2b01      	cmp	r3, #1
 80046fa:	d103      	bne.n	8004704 <Line_Track_Task+0x74>
 80046fc:	4b7c      	ldr	r3, [pc, #496]	; (80048f0 <Line_Track_Task+0x260>)
 80046fe:	4a7e      	ldr	r2, [pc, #504]	; (80048f8 <Line_Track_Task+0x268>)
 8004700:	601a      	str	r2, [r3, #0]
 8004702:	e006      	b.n	8004712 <Line_Track_Task+0x82>
			else if(v_control==STOP)v_ref=-99;
 8004704:	4b79      	ldr	r3, [pc, #484]	; (80048ec <Line_Track_Task+0x25c>)
 8004706:	781b      	ldrb	r3, [r3, #0]
 8004708:	2b00      	cmp	r3, #0
 800470a:	d102      	bne.n	8004712 <Line_Track_Task+0x82>
 800470c:	4b78      	ldr	r3, [pc, #480]	; (80048f0 <Line_Track_Task+0x260>)
 800470e:	4a7b      	ldr	r2, [pc, #492]	; (80048fc <Line_Track_Task+0x26c>)
 8004710:	601a      	str	r2, [r3, #0]
			if(tmp)return;
 8004712:	7dbb      	ldrb	r3, [r7, #22]
 8004714:	2b00      	cmp	r3, #0
 8004716:	f040 838f 	bne.w	8004e38 <Line_Track_Task+0x7a8>

			Detect_Node4(huart_debugg, tick);
 800471a:	6879      	ldr	r1, [r7, #4]
 800471c:	68b8      	ldr	r0, [r7, #8]
 800471e:	f001 f831 	bl	8005784 <Detect_Node4>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 8004722:	4b77      	ldr	r3, [pc, #476]	; (8004900 <Line_Track_Task+0x270>)
 8004724:	785b      	ldrb	r3, [r3, #1]
 8004726:	2b00      	cmp	r3, #0
 8004728:	f000 8388 	beq.w	8004e3c <Line_Track_Task+0x7ac>
 800472c:	4b74      	ldr	r3, [pc, #464]	; (8004900 <Line_Track_Task+0x270>)
 800472e:	785b      	ldrb	r3, [r3, #1]
 8004730:	2b04      	cmp	r3, #4
 8004732:	f200 8383 	bhi.w	8004e3c <Line_Track_Task+0x7ac>
			gamma = Skill_Mode(huart_debugg, 0.004, 0.004, tick); //kD 4ms -es futáshoz hangolva
 8004736:	6879      	ldr	r1, [r7, #4]
 8004738:	eddf 0a72 	vldr	s1, [pc, #456]	; 8004904 <Line_Track_Task+0x274>
 800473c:	ed9f 0a71 	vldr	s0, [pc, #452]	; 8004904 <Line_Track_Task+0x274>
 8004740:	68b8      	ldr	r0, [r7, #8]
 8004742:	f000 fee7 	bl	8005514 <Skill_Mode>
 8004746:	eef0 7a40 	vmov.f32	s15, s0
 800474a:	4b6f      	ldr	r3, [pc, #444]	; (8004908 <Line_Track_Task+0x278>)
 800474c:	edc3 7a00 	vstr	s15, [r3]

			//ELSŐSZERVÓ ELŐREMENETBEN
			PHI = atan((L/(L+D_FRONT))*tan(gamma));
 8004750:	4b6d      	ldr	r3, [pc, #436]	; (8004908 <Line_Track_Task+0x278>)
 8004752:	681b      	ldr	r3, [r3, #0]
 8004754:	4618      	mov	r0, r3
 8004756:	f7fb ff17 	bl	8000588 <__aeabi_f2d>
 800475a:	4602      	mov	r2, r0
 800475c:	460b      	mov	r3, r1
 800475e:	ec43 2b10 	vmov	d0, r2, r3
 8004762:	f00b fc7d 	bl	8010060 <tan>
 8004766:	ec51 0b10 	vmov	r0, r1, d0
 800476a:	a359      	add	r3, pc, #356	; (adr r3, 80048d0 <Line_Track_Task+0x240>)
 800476c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004770:	f7fb ff62 	bl	8000638 <__aeabi_dmul>
 8004774:	4602      	mov	r2, r0
 8004776:	460b      	mov	r3, r1
 8004778:	ec43 2b17 	vmov	d7, r2, r3
 800477c:	eeb0 0a47 	vmov.f32	s0, s14
 8004780:	eef0 0a67 	vmov.f32	s1, s15
 8004784:	f00b fac0 	bl	800fd08 <atan>
 8004788:	ec53 2b10 	vmov	r2, r3, d0
 800478c:	4610      	mov	r0, r2
 800478e:	4619      	mov	r1, r3
 8004790:	f7fc fa2a 	bl	8000be8 <__aeabi_d2f>
 8004794:	4603      	mov	r3, r0
 8004796:	4a5d      	ldr	r2, [pc, #372]	; (800490c <Line_Track_Task+0x27c>)
 8004798:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_FRONT_CCR_MIDDLE);//balra kanyarodás
 800479a:	4b5c      	ldr	r3, [pc, #368]	; (800490c <Line_Track_Task+0x27c>)
 800479c:	edd3 7a00 	vldr	s15, [r3]
 80047a0:	ed9f 7a5b 	vldr	s14, [pc, #364]	; 8004910 <Line_Track_Task+0x280>
 80047a4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80047a8:	ed9f 7a5a 	vldr	s14, [pc, #360]	; 8004914 <Line_Track_Task+0x284>
 80047ac:	ee77 7a87 	vadd.f32	s15, s15, s14
 80047b0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80047b4:	ee17 3a90 	vmov	r3, s15
 80047b8:	b29b      	uxth	r3, r3
 80047ba:	461a      	mov	r2, r3
 80047bc:	4b56      	ldr	r3, [pc, #344]	; (8004918 <Line_Track_Task+0x288>)
 80047be:	601a      	str	r2, [r3, #0]
			//ne feszítsük neki a mechanikai határnak a szervót
			FRONT_CCR(ccr);
 80047c0:	4b55      	ldr	r3, [pc, #340]	; (8004918 <Line_Track_Task+0x288>)
 80047c2:	681b      	ldr	r3, [r3, #0]
 80047c4:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 80047c8:	dc07      	bgt.n	80047da <Line_Track_Task+0x14a>
 80047ca:	4b53      	ldr	r3, [pc, #332]	; (8004918 <Line_Track_Task+0x288>)
 80047cc:	681b      	ldr	r3, [r3, #0]
 80047ce:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 80047d2:	bfb8      	it	lt
 80047d4:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 80047d8:	e001      	b.n	80047de <Line_Track_Task+0x14e>
 80047da:	f44f 7361 	mov.w	r3, #900	; 0x384
 80047de:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80047e2:	6353      	str	r3, [r2, #52]	; 0x34

			//HÁTSÓSZERVÓ ELŐREMENETBEN
			PHI = atan((L/(L+D_REAR))*tan(gamma))/3;
 80047e4:	4b48      	ldr	r3, [pc, #288]	; (8004908 <Line_Track_Task+0x278>)
 80047e6:	681b      	ldr	r3, [r3, #0]
 80047e8:	4618      	mov	r0, r3
 80047ea:	f7fb fecd 	bl	8000588 <__aeabi_f2d>
 80047ee:	4602      	mov	r2, r0
 80047f0:	460b      	mov	r3, r1
 80047f2:	ec43 2b10 	vmov	d0, r2, r3
 80047f6:	f00b fc33 	bl	8010060 <tan>
 80047fa:	ec51 0b10 	vmov	r0, r1, d0
 80047fe:	a336      	add	r3, pc, #216	; (adr r3, 80048d8 <Line_Track_Task+0x248>)
 8004800:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004804:	f7fb ff18 	bl	8000638 <__aeabi_dmul>
 8004808:	4602      	mov	r2, r0
 800480a:	460b      	mov	r3, r1
 800480c:	ec43 2b17 	vmov	d7, r2, r3
 8004810:	eeb0 0a47 	vmov.f32	s0, s14
 8004814:	eef0 0a67 	vmov.f32	s1, s15
 8004818:	f00b fa76 	bl	800fd08 <atan>
 800481c:	ec51 0b10 	vmov	r0, r1, d0
 8004820:	f04f 0200 	mov.w	r2, #0
 8004824:	4b3d      	ldr	r3, [pc, #244]	; (800491c <Line_Track_Task+0x28c>)
 8004826:	f7fc f831 	bl	800088c <__aeabi_ddiv>
 800482a:	4602      	mov	r2, r0
 800482c:	460b      	mov	r3, r1
 800482e:	4610      	mov	r0, r2
 8004830:	4619      	mov	r1, r3
 8004832:	f7fc f9d9 	bl	8000be8 <__aeabi_d2f>
 8004836:	4603      	mov	r3, r0
 8004838:	4a34      	ldr	r2, [pc, #208]	; (800490c <Line_Track_Task+0x27c>)
 800483a:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_REAR_CCR_MIDDLE);//balra kanyarodás
 800483c:	4b33      	ldr	r3, [pc, #204]	; (800490c <Line_Track_Task+0x27c>)
 800483e:	edd3 7a00 	vldr	s15, [r3]
 8004842:	ed9f 7a33 	vldr	s14, [pc, #204]	; 8004910 <Line_Track_Task+0x280>
 8004846:	ee67 7a87 	vmul.f32	s15, s15, s14
 800484a:	ed9f 7a35 	vldr	s14, [pc, #212]	; 8004920 <Line_Track_Task+0x290>
 800484e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004852:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004856:	ee17 3a90 	vmov	r3, s15
 800485a:	b29b      	uxth	r3, r3
 800485c:	461a      	mov	r2, r3
 800485e:	4b2e      	ldr	r3, [pc, #184]	; (8004918 <Line_Track_Task+0x288>)
 8004860:	601a      	str	r2, [r3, #0]
			REAR_CCR(ccr);
 8004862:	4b2d      	ldr	r3, [pc, #180]	; (8004918 <Line_Track_Task+0x288>)
 8004864:	681b      	ldr	r3, [r3, #0]
 8004866:	f5b3 7f52 	cmp.w	r3, #840	; 0x348
 800486a:	dc07      	bgt.n	800487c <Line_Track_Task+0x1ec>
 800486c:	4b2a      	ldr	r3, [pc, #168]	; (8004918 <Line_Track_Task+0x288>)
 800486e:	681b      	ldr	r3, [r3, #0]
 8004870:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 8004874:	bfb8      	it	lt
 8004876:	f44f 7302 	movlt.w	r3, #520	; 0x208
 800487a:	e001      	b.n	8004880 <Line_Track_Task+0x1f0>
 800487c:	f44f 7352 	mov.w	r3, #840	; 0x348
 8004880:	4a28      	ldr	r2, [pc, #160]	; (8004924 <Line_Track_Task+0x294>)
 8004882:	6413      	str	r3, [r2, #64]	; 0x40
 8004884:	e2d0      	b.n	8004e28 <Line_Track_Task+0x798>
		}
		else if(orientation==REVERSE)//TOLATÁS
 8004886:	4b18      	ldr	r3, [pc, #96]	; (80048e8 <Line_Track_Task+0x258>)
 8004888:	781b      	ldrb	r3, [r3, #0]
 800488a:	2b01      	cmp	r3, #1
 800488c:	f040 82cc 	bne.w	8004e28 <Line_Track_Task+0x798>
		{
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_REVERSE))return;
 8004890:	2291      	movs	r2, #145	; 0x91
 8004892:	68b9      	ldr	r1, [r7, #8]
 8004894:	68f8      	ldr	r0, [r7, #12]
 8004896:	f7ff febf 	bl	8004618 <G0_Read_Skill>
 800489a:	4603      	mov	r3, r0
 800489c:	2b00      	cmp	r3, #0
 800489e:	f040 82cf 	bne.w	8004e40 <Line_Track_Task+0x7b0>

			uint8_t tmp=Lane_Changer(tick);
 80048a2:	6878      	ldr	r0, [r7, #4]
 80048a4:	f001 f802 	bl	80058ac <Lane_Changer>
 80048a8:	4603      	mov	r3, r0
 80048aa:	75fb      	strb	r3, [r7, #23]
			if(v_control==NORMAL_VEL)v_ref=-1100;
 80048ac:	4b0f      	ldr	r3, [pc, #60]	; (80048ec <Line_Track_Task+0x25c>)
 80048ae:	781b      	ldrb	r3, [r3, #0]
 80048b0:	2b02      	cmp	r3, #2
 80048b2:	d103      	bne.n	80048bc <Line_Track_Task+0x22c>
 80048b4:	4b0e      	ldr	r3, [pc, #56]	; (80048f0 <Line_Track_Task+0x260>)
 80048b6:	4a1c      	ldr	r2, [pc, #112]	; (8004928 <Line_Track_Task+0x298>)
 80048b8:	601a      	str	r2, [r3, #0]
 80048ba:	e040      	b.n	800493e <Line_Track_Task+0x2ae>
			else if(v_control==SLOW_DOWN)v_ref=-600;
 80048bc:	4b0b      	ldr	r3, [pc, #44]	; (80048ec <Line_Track_Task+0x25c>)
 80048be:	781b      	ldrb	r3, [r3, #0]
 80048c0:	2b01      	cmp	r3, #1
 80048c2:	d135      	bne.n	8004930 <Line_Track_Task+0x2a0>
 80048c4:	4b0a      	ldr	r3, [pc, #40]	; (80048f0 <Line_Track_Task+0x260>)
 80048c6:	4a19      	ldr	r2, [pc, #100]	; (800492c <Line_Track_Task+0x29c>)
 80048c8:	601a      	str	r2, [r3, #0]
 80048ca:	e038      	b.n	800493e <Line_Track_Task+0x2ae>
 80048cc:	f3af 8000 	nop.w
 80048d0:	c4830201 	.word	0xc4830201
 80048d4:	3fe73a26 	.word	0x3fe73a26
 80048d8:	a3f47e90 	.word	0xa3f47e90
 80048dc:	3fe8fd1f 	.word	0x3fe8fd1f
 80048e0:	20000048 	.word	0x20000048
 80048e4:	20000336 	.word	0x20000336
 80048e8:	20000344 	.word	0x20000344
 80048ec:	20000349 	.word	0x20000349
 80048f0:	20000338 	.word	0x20000338
 80048f4:	44898000 	.word	0x44898000
 80048f8:	44160000 	.word	0x44160000
 80048fc:	c2c60000 	.word	0xc2c60000
 8004900:	20000774 	.word	0x20000774
 8004904:	3b83126f 	.word	0x3b83126f
 8004908:	20000784 	.word	0x20000784
 800490c:	20000788 	.word	0x20000788
 8004910:	44af0000 	.word	0x44af0000
 8004914:	442d0000 	.word	0x442d0000
 8004918:	2000004c 	.word	0x2000004c
 800491c:	40080000 	.word	0x40080000
 8004920:	442a0000 	.word	0x442a0000
 8004924:	40010000 	.word	0x40010000
 8004928:	c4898000 	.word	0xc4898000
 800492c:	c4160000 	.word	0xc4160000
			else if(v_control==STOP)v_ref=99;
 8004930:	4bb5      	ldr	r3, [pc, #724]	; (8004c08 <Line_Track_Task+0x578>)
 8004932:	781b      	ldrb	r3, [r3, #0]
 8004934:	2b00      	cmp	r3, #0
 8004936:	d102      	bne.n	800493e <Line_Track_Task+0x2ae>
 8004938:	4bb4      	ldr	r3, [pc, #720]	; (8004c0c <Line_Track_Task+0x57c>)
 800493a:	4ab5      	ldr	r2, [pc, #724]	; (8004c10 <Line_Track_Task+0x580>)
 800493c:	601a      	str	r2, [r3, #0]
			if(tmp)return;
 800493e:	7dfb      	ldrb	r3, [r7, #23]
 8004940:	2b00      	cmp	r3, #0
 8004942:	f040 827f 	bne.w	8004e44 <Line_Track_Task+0x7b4>

			Detect_Node4(huart_debugg, tick);
 8004946:	6879      	ldr	r1, [r7, #4]
 8004948:	68b8      	ldr	r0, [r7, #8]
 800494a:	f000 ff1b 	bl	8005784 <Detect_Node4>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 800494e:	4bb1      	ldr	r3, [pc, #708]	; (8004c14 <Line_Track_Task+0x584>)
 8004950:	785b      	ldrb	r3, [r3, #1]
 8004952:	2b00      	cmp	r3, #0
 8004954:	f000 8278 	beq.w	8004e48 <Line_Track_Task+0x7b8>
 8004958:	4bae      	ldr	r3, [pc, #696]	; (8004c14 <Line_Track_Task+0x584>)
 800495a:	785b      	ldrb	r3, [r3, #1]
 800495c:	2b04      	cmp	r3, #4
 800495e:	f200 8273 	bhi.w	8004e48 <Line_Track_Task+0x7b8>
			gamma = Skill_Mode(huart_debugg, 0.003, 0.032, tick);
 8004962:	6879      	ldr	r1, [r7, #4]
 8004964:	eddf 0aac 	vldr	s1, [pc, #688]	; 8004c18 <Line_Track_Task+0x588>
 8004968:	ed9f 0aac 	vldr	s0, [pc, #688]	; 8004c1c <Line_Track_Task+0x58c>
 800496c:	68b8      	ldr	r0, [r7, #8]
 800496e:	f000 fdd1 	bl	8005514 <Skill_Mode>
 8004972:	eef0 7a40 	vmov.f32	s15, s0
 8004976:	4baa      	ldr	r3, [pc, #680]	; (8004c20 <Line_Track_Task+0x590>)
 8004978:	edc3 7a00 	vstr	s15, [r3]

			//HÁTSÓ SZERVÓ HÁTRAMENETBEN
			PHI = atan((L/(L+D_REAR))*tan(gamma));////////////////////kiszámolni kézzel
 800497c:	4ba8      	ldr	r3, [pc, #672]	; (8004c20 <Line_Track_Task+0x590>)
 800497e:	681b      	ldr	r3, [r3, #0]
 8004980:	4618      	mov	r0, r3
 8004982:	f7fb fe01 	bl	8000588 <__aeabi_f2d>
 8004986:	4602      	mov	r2, r0
 8004988:	460b      	mov	r3, r1
 800498a:	ec43 2b10 	vmov	d0, r2, r3
 800498e:	f00b fb67 	bl	8010060 <tan>
 8004992:	ec51 0b10 	vmov	r0, r1, d0
 8004996:	a398      	add	r3, pc, #608	; (adr r3, 8004bf8 <Line_Track_Task+0x568>)
 8004998:	e9d3 2300 	ldrd	r2, r3, [r3]
 800499c:	f7fb fe4c 	bl	8000638 <__aeabi_dmul>
 80049a0:	4602      	mov	r2, r0
 80049a2:	460b      	mov	r3, r1
 80049a4:	ec43 2b17 	vmov	d7, r2, r3
 80049a8:	eeb0 0a47 	vmov.f32	s0, s14
 80049ac:	eef0 0a67 	vmov.f32	s1, s15
 80049b0:	f00b f9aa 	bl	800fd08 <atan>
 80049b4:	ec53 2b10 	vmov	r2, r3, d0
 80049b8:	4610      	mov	r0, r2
 80049ba:	4619      	mov	r1, r3
 80049bc:	f7fc f914 	bl	8000be8 <__aeabi_d2f>
 80049c0:	4603      	mov	r3, r0
 80049c2:	4a98      	ldr	r2, [pc, #608]	; (8004c24 <Line_Track_Task+0x594>)
 80049c4:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_REAR_CCR_MIDDLE);
 80049c6:	4b97      	ldr	r3, [pc, #604]	; (8004c24 <Line_Track_Task+0x594>)
 80049c8:	edd3 7a00 	vldr	s15, [r3]
 80049cc:	ed9f 7a96 	vldr	s14, [pc, #600]	; 8004c28 <Line_Track_Task+0x598>
 80049d0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80049d4:	ed9f 7a95 	vldr	s14, [pc, #596]	; 8004c2c <Line_Track_Task+0x59c>
 80049d8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80049dc:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80049e0:	ee17 3a90 	vmov	r3, s15
 80049e4:	b29b      	uxth	r3, r3
 80049e6:	461a      	mov	r2, r3
 80049e8:	4b91      	ldr	r3, [pc, #580]	; (8004c30 <Line_Track_Task+0x5a0>)
 80049ea:	601a      	str	r2, [r3, #0]
			REAR_CCR(ccr);
 80049ec:	4b90      	ldr	r3, [pc, #576]	; (8004c30 <Line_Track_Task+0x5a0>)
 80049ee:	681b      	ldr	r3, [r3, #0]
 80049f0:	f5b3 7f52 	cmp.w	r3, #840	; 0x348
 80049f4:	dc07      	bgt.n	8004a06 <Line_Track_Task+0x376>
 80049f6:	4b8e      	ldr	r3, [pc, #568]	; (8004c30 <Line_Track_Task+0x5a0>)
 80049f8:	681b      	ldr	r3, [r3, #0]
 80049fa:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 80049fe:	bfb8      	it	lt
 8004a00:	f44f 7302 	movlt.w	r3, #520	; 0x208
 8004a04:	e001      	b.n	8004a0a <Line_Track_Task+0x37a>
 8004a06:	f44f 7352 	mov.w	r3, #840	; 0x348
 8004a0a:	4a8a      	ldr	r2, [pc, #552]	; (8004c34 <Line_Track_Task+0x5a4>)
 8004a0c:	6413      	str	r3, [r2, #64]	; 0x40

			//ELSŐSZERVÓ HÁTRAMENETBEN
			PHI = atan((L/(L+D_FRONT))*tan(gamma))/3;
 8004a0e:	4b84      	ldr	r3, [pc, #528]	; (8004c20 <Line_Track_Task+0x590>)
 8004a10:	681b      	ldr	r3, [r3, #0]
 8004a12:	4618      	mov	r0, r3
 8004a14:	f7fb fdb8 	bl	8000588 <__aeabi_f2d>
 8004a18:	4602      	mov	r2, r0
 8004a1a:	460b      	mov	r3, r1
 8004a1c:	ec43 2b10 	vmov	d0, r2, r3
 8004a20:	f00b fb1e 	bl	8010060 <tan>
 8004a24:	ec51 0b10 	vmov	r0, r1, d0
 8004a28:	a375      	add	r3, pc, #468	; (adr r3, 8004c00 <Line_Track_Task+0x570>)
 8004a2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004a2e:	f7fb fe03 	bl	8000638 <__aeabi_dmul>
 8004a32:	4602      	mov	r2, r0
 8004a34:	460b      	mov	r3, r1
 8004a36:	ec43 2b17 	vmov	d7, r2, r3
 8004a3a:	eeb0 0a47 	vmov.f32	s0, s14
 8004a3e:	eef0 0a67 	vmov.f32	s1, s15
 8004a42:	f00b f961 	bl	800fd08 <atan>
 8004a46:	ec51 0b10 	vmov	r0, r1, d0
 8004a4a:	f04f 0200 	mov.w	r2, #0
 8004a4e:	4b7a      	ldr	r3, [pc, #488]	; (8004c38 <Line_Track_Task+0x5a8>)
 8004a50:	f7fb ff1c 	bl	800088c <__aeabi_ddiv>
 8004a54:	4602      	mov	r2, r0
 8004a56:	460b      	mov	r3, r1
 8004a58:	4610      	mov	r0, r2
 8004a5a:	4619      	mov	r1, r3
 8004a5c:	f7fc f8c4 	bl	8000be8 <__aeabi_d2f>
 8004a60:	4603      	mov	r3, r0
 8004a62:	4a70      	ldr	r2, [pc, #448]	; (8004c24 <Line_Track_Task+0x594>)
 8004a64:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_FRONT_CCR_MIDDLE);//balra kanyarodás
 8004a66:	4b6f      	ldr	r3, [pc, #444]	; (8004c24 <Line_Track_Task+0x594>)
 8004a68:	edd3 7a00 	vldr	s15, [r3]
 8004a6c:	ed9f 7a6e 	vldr	s14, [pc, #440]	; 8004c28 <Line_Track_Task+0x598>
 8004a70:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004a74:	ed9f 7a71 	vldr	s14, [pc, #452]	; 8004c3c <Line_Track_Task+0x5ac>
 8004a78:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004a7c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004a80:	ee17 3a90 	vmov	r3, s15
 8004a84:	b29b      	uxth	r3, r3
 8004a86:	461a      	mov	r2, r3
 8004a88:	4b69      	ldr	r3, [pc, #420]	; (8004c30 <Line_Track_Task+0x5a0>)
 8004a8a:	601a      	str	r2, [r3, #0]
			FRONT_CCR(ccr);
 8004a8c:	4b68      	ldr	r3, [pc, #416]	; (8004c30 <Line_Track_Task+0x5a0>)
 8004a8e:	681b      	ldr	r3, [r3, #0]
 8004a90:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8004a94:	dc07      	bgt.n	8004aa6 <Line_Track_Task+0x416>
 8004a96:	4b66      	ldr	r3, [pc, #408]	; (8004c30 <Line_Track_Task+0x5a0>)
 8004a98:	681b      	ldr	r3, [r3, #0]
 8004a9a:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8004a9e:	bfb8      	it	lt
 8004aa0:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 8004aa4:	e001      	b.n	8004aaa <Line_Track_Task+0x41a>
 8004aa6:	f44f 7361 	mov.w	r3, #900	; 0x384
 8004aaa:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004aae:	6353      	str	r3, [r2, #52]	; 0x34
 8004ab0:	e1ba      	b.n	8004e28 <Line_Track_Task+0x798>
		}
	}
	/*****Gyorsasági pálya üzemmód******/
	else if(mode == FAST)
 8004ab2:	4b63      	ldr	r3, [pc, #396]	; (8004c40 <Line_Track_Task+0x5b0>)
 8004ab4:	781b      	ldrb	r3, [r3, #0]
 8004ab6:	2b3f      	cmp	r3, #63	; 0x3f
 8004ab8:	f040 81b6 	bne.w	8004e28 <Line_Track_Task+0x798>
	{
		static uint8_t fast_mode_state=SC_MODE;

		if(G0_Read_Fast(huart_stm, huart_debugg)) return; //ha sikertelen az olvasás a G0 ból akkor nincs értelme az egésznek
 8004abc:	68b9      	ldr	r1, [r7, #8]
 8004abe:	68f8      	ldr	r0, [r7, #12]
 8004ac0:	f7ff fd76 	bl	80045b0 <G0_Read_Fast>
 8004ac4:	4603      	mov	r3, r0
 8004ac6:	2b00      	cmp	r3, #0
 8004ac8:	f040 81c0 	bne.w	8004e4c <Line_Track_Task+0x7bc>
		if((LINE_CNT<1 || LINE_CNT > 3) && !leaveLineEnabled) return;//ha nincs vonal a kocsi alatt
 8004acc:	4b51      	ldr	r3, [pc, #324]	; (8004c14 <Line_Track_Task+0x584>)
 8004ace:	785b      	ldrb	r3, [r3, #1]
 8004ad0:	2b00      	cmp	r3, #0
 8004ad2:	d003      	beq.n	8004adc <Line_Track_Task+0x44c>
 8004ad4:	4b4f      	ldr	r3, [pc, #316]	; (8004c14 <Line_Track_Task+0x584>)
 8004ad6:	785b      	ldrb	r3, [r3, #1]
 8004ad8:	2b03      	cmp	r3, #3
 8004ada:	d904      	bls.n	8004ae6 <Line_Track_Task+0x456>
 8004adc:	4b59      	ldr	r3, [pc, #356]	; (8004c44 <Line_Track_Task+0x5b4>)
 8004ade:	781b      	ldrb	r3, [r3, #0]
 8004ae0:	2b00      	cmp	r3, #0
 8004ae2:	f000 81b5 	beq.w	8004e50 <Line_Track_Task+0x7c0>
		gamma = Fast_Mode(huart_debugg, &fast_mode_state, tick);
 8004ae6:	687a      	ldr	r2, [r7, #4]
 8004ae8:	4957      	ldr	r1, [pc, #348]	; (8004c48 <Line_Track_Task+0x5b8>)
 8004aea:	68b8      	ldr	r0, [r7, #8]
 8004aec:	f000 f9d8 	bl	8004ea0 <Fast_Mode>
 8004af0:	eef0 7a40 	vmov.f32	s15, s0
 8004af4:	4b4a      	ldr	r3, [pc, #296]	; (8004c20 <Line_Track_Task+0x590>)
 8004af6:	edc3 7a00 	vstr	s15, [r3]
		PHI = atan((L/(L+D_FRONT))*tan(gamma));
 8004afa:	4b49      	ldr	r3, [pc, #292]	; (8004c20 <Line_Track_Task+0x590>)
 8004afc:	681b      	ldr	r3, [r3, #0]
 8004afe:	4618      	mov	r0, r3
 8004b00:	f7fb fd42 	bl	8000588 <__aeabi_f2d>
 8004b04:	4602      	mov	r2, r0
 8004b06:	460b      	mov	r3, r1
 8004b08:	ec43 2b10 	vmov	d0, r2, r3
 8004b0c:	f00b faa8 	bl	8010060 <tan>
 8004b10:	ec51 0b10 	vmov	r0, r1, d0
 8004b14:	a33a      	add	r3, pc, #232	; (adr r3, 8004c00 <Line_Track_Task+0x570>)
 8004b16:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004b1a:	f7fb fd8d 	bl	8000638 <__aeabi_dmul>
 8004b1e:	4602      	mov	r2, r0
 8004b20:	460b      	mov	r3, r1
 8004b22:	ec43 2b17 	vmov	d7, r2, r3
 8004b26:	eeb0 0a47 	vmov.f32	s0, s14
 8004b2a:	eef0 0a67 	vmov.f32	s1, s15
 8004b2e:	f00b f8eb 	bl	800fd08 <atan>
 8004b32:	ec53 2b10 	vmov	r2, r3, d0
 8004b36:	4610      	mov	r0, r2
 8004b38:	4619      	mov	r1, r3
 8004b3a:	f7fc f855 	bl	8000be8 <__aeabi_d2f>
 8004b3e:	4603      	mov	r3, r0
 8004b40:	4a38      	ldr	r2, [pc, #224]	; (8004c24 <Line_Track_Task+0x594>)
 8004b42:	6013      	str	r3, [r2, #0]

		if(fast_mode_state==FREERUN_MODE)
 8004b44:	4b40      	ldr	r3, [pc, #256]	; (8004c48 <Line_Track_Task+0x5b8>)
 8004b46:	781b      	ldrb	r3, [r3, #0]
 8004b48:	2b01      	cmp	r3, #1
 8004b4a:	f040 80bb 	bne.w	8004cc4 <Line_Track_Task+0x634>
		{
			if(v>2200)//egyenes
 8004b4e:	4b3f      	ldr	r3, [pc, #252]	; (8004c4c <Line_Track_Task+0x5bc>)
 8004b50:	edd3 7a00 	vldr	s15, [r3]
 8004b54:	ed9f 7a3e 	vldr	s14, [pc, #248]	; 8004c50 <Line_Track_Task+0x5c0>
 8004b58:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004b5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004b60:	dd29      	ble.n	8004bb6 <Line_Track_Task+0x526>
			{
				ccr = (uint16_t)(-SERVO_M_STRAIGHT * PHI + SERVO_FRONT_CCR_MIDDLE);
 8004b62:	4b30      	ldr	r3, [pc, #192]	; (8004c24 <Line_Track_Task+0x594>)
 8004b64:	edd3 7a00 	vldr	s15, [r3]
 8004b68:	ed9f 7a3a 	vldr	s14, [pc, #232]	; 8004c54 <Line_Track_Task+0x5c4>
 8004b6c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004b70:	ed9f 7a32 	vldr	s14, [pc, #200]	; 8004c3c <Line_Track_Task+0x5ac>
 8004b74:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004b78:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004b7c:	ee17 3a90 	vmov	r3, s15
 8004b80:	b29b      	uxth	r3, r3
 8004b82:	461a      	mov	r2, r3
 8004b84:	4b2a      	ldr	r3, [pc, #168]	; (8004c30 <Line_Track_Task+0x5a0>)
 8004b86:	601a      	str	r2, [r3, #0]
				FRONT_CCR(ccr);
 8004b88:	4b29      	ldr	r3, [pc, #164]	; (8004c30 <Line_Track_Task+0x5a0>)
 8004b8a:	681b      	ldr	r3, [r3, #0]
 8004b8c:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8004b90:	dc07      	bgt.n	8004ba2 <Line_Track_Task+0x512>
 8004b92:	4b27      	ldr	r3, [pc, #156]	; (8004c30 <Line_Track_Task+0x5a0>)
 8004b94:	681b      	ldr	r3, [r3, #0]
 8004b96:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8004b9a:	bfb8      	it	lt
 8004b9c:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 8004ba0:	e001      	b.n	8004ba6 <Line_Track_Task+0x516>
 8004ba2:	f44f 7361 	mov.w	r3, #900	; 0x384
 8004ba6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004baa:	6353      	str	r3, [r2, #52]	; 0x34
				REAR_CCR(SERVO_REAR_CCR_MIDDLE);
 8004bac:	4b21      	ldr	r3, [pc, #132]	; (8004c34 <Line_Track_Task+0x5a4>)
 8004bae:	f44f 722a 	mov.w	r2, #680	; 0x2a8
 8004bb2:	641a      	str	r2, [r3, #64]	; 0x40
 8004bb4:	e138      	b.n	8004e28 <Line_Track_Task+0x798>
			}
			else//kanyar
			{
				//Első szervó
				ccr =(uint16_t)(-SERVO_M_CORNER * PHI + SERVO_FRONT_CCR_MIDDLE);
 8004bb6:	4b1b      	ldr	r3, [pc, #108]	; (8004c24 <Line_Track_Task+0x594>)
 8004bb8:	edd3 7a00 	vldr	s15, [r3]
 8004bbc:	ed9f 7a26 	vldr	s14, [pc, #152]	; 8004c58 <Line_Track_Task+0x5c8>
 8004bc0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004bc4:	ed9f 7a1d 	vldr	s14, [pc, #116]	; 8004c3c <Line_Track_Task+0x5ac>
 8004bc8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004bcc:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004bd0:	ee17 3a90 	vmov	r3, s15
 8004bd4:	b29b      	uxth	r3, r3
 8004bd6:	461a      	mov	r2, r3
 8004bd8:	4b15      	ldr	r3, [pc, #84]	; (8004c30 <Line_Track_Task+0x5a0>)
 8004bda:	601a      	str	r2, [r3, #0]
				FRONT_CCR(ccr);
 8004bdc:	4b14      	ldr	r3, [pc, #80]	; (8004c30 <Line_Track_Task+0x5a0>)
 8004bde:	681b      	ldr	r3, [r3, #0]
 8004be0:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8004be4:	dc3a      	bgt.n	8004c5c <Line_Track_Task+0x5cc>
 8004be6:	4b12      	ldr	r3, [pc, #72]	; (8004c30 <Line_Track_Task+0x5a0>)
 8004be8:	681b      	ldr	r3, [r3, #0]
 8004bea:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8004bee:	bfb8      	it	lt
 8004bf0:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 8004bf4:	e034      	b.n	8004c60 <Line_Track_Task+0x5d0>
 8004bf6:	bf00      	nop
 8004bf8:	a3f47e90 	.word	0xa3f47e90
 8004bfc:	3fe8fd1f 	.word	0x3fe8fd1f
 8004c00:	c4830201 	.word	0xc4830201
 8004c04:	3fe73a26 	.word	0x3fe73a26
 8004c08:	20000349 	.word	0x20000349
 8004c0c:	20000338 	.word	0x20000338
 8004c10:	42c60000 	.word	0x42c60000
 8004c14:	20000774 	.word	0x20000774
 8004c18:	3d03126f 	.word	0x3d03126f
 8004c1c:	3b449ba6 	.word	0x3b449ba6
 8004c20:	20000784 	.word	0x20000784
 8004c24:	20000788 	.word	0x20000788
 8004c28:	44af0000 	.word	0x44af0000
 8004c2c:	442a0000 	.word	0x442a0000
 8004c30:	2000004c 	.word	0x2000004c
 8004c34:	40010000 	.word	0x40010000
 8004c38:	40080000 	.word	0x40080000
 8004c3c:	442d0000 	.word	0x442d0000
 8004c40:	20000336 	.word	0x20000336
 8004c44:	2000033c 	.word	0x2000033c
 8004c48:	2000078c 	.word	0x2000078c
 8004c4c:	20000754 	.word	0x20000754
 8004c50:	45098000 	.word	0x45098000
 8004c54:	c4610000 	.word	0xc4610000
 8004c58:	c47a0000 	.word	0xc47a0000
 8004c5c:	f44f 7361 	mov.w	r3, #900	; 0x384
 8004c60:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004c64:	6353      	str	r3, [r2, #52]	; 0x34
				//Hátsó szervó
				PHI/= 2;
 8004c66:	4b7c      	ldr	r3, [pc, #496]	; (8004e58 <Line_Track_Task+0x7c8>)
 8004c68:	ed93 7a00 	vldr	s14, [r3]
 8004c6c:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 8004c70:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8004c74:	4b78      	ldr	r3, [pc, #480]	; (8004e58 <Line_Track_Task+0x7c8>)
 8004c76:	edc3 7a00 	vstr	s15, [r3]
				ccr = (uint16_t)(-SERVO_M_CORNER * PHI + SERVO_REAR_CCR_MIDDLE);
 8004c7a:	4b77      	ldr	r3, [pc, #476]	; (8004e58 <Line_Track_Task+0x7c8>)
 8004c7c:	edd3 7a00 	vldr	s15, [r3]
 8004c80:	ed9f 7a76 	vldr	s14, [pc, #472]	; 8004e5c <Line_Track_Task+0x7cc>
 8004c84:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004c88:	ed9f 7a75 	vldr	s14, [pc, #468]	; 8004e60 <Line_Track_Task+0x7d0>
 8004c8c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004c90:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004c94:	ee17 3a90 	vmov	r3, s15
 8004c98:	b29b      	uxth	r3, r3
 8004c9a:	461a      	mov	r2, r3
 8004c9c:	4b71      	ldr	r3, [pc, #452]	; (8004e64 <Line_Track_Task+0x7d4>)
 8004c9e:	601a      	str	r2, [r3, #0]
				REAR_CCR(ccr);
 8004ca0:	4b70      	ldr	r3, [pc, #448]	; (8004e64 <Line_Track_Task+0x7d4>)
 8004ca2:	681b      	ldr	r3, [r3, #0]
 8004ca4:	f5b3 7f52 	cmp.w	r3, #840	; 0x348
 8004ca8:	dc07      	bgt.n	8004cba <Line_Track_Task+0x62a>
 8004caa:	4b6e      	ldr	r3, [pc, #440]	; (8004e64 <Line_Track_Task+0x7d4>)
 8004cac:	681b      	ldr	r3, [r3, #0]
 8004cae:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 8004cb2:	bfb8      	it	lt
 8004cb4:	f44f 7302 	movlt.w	r3, #520	; 0x208
 8004cb8:	e001      	b.n	8004cbe <Line_Track_Task+0x62e>
 8004cba:	f44f 7352 	mov.w	r3, #840	; 0x348
 8004cbe:	4a6a      	ldr	r2, [pc, #424]	; (8004e68 <Line_Track_Task+0x7d8>)
 8004cc0:	6413      	str	r3, [r2, #64]	; 0x40
 8004cc2:	e0b1      	b.n	8004e28 <Line_Track_Task+0x798>
			}
		}
		else if(fast_mode_state==SC_MODE)
 8004cc4:	4b69      	ldr	r3, [pc, #420]	; (8004e6c <Line_Track_Task+0x7dc>)
 8004cc6:	781b      	ldrb	r3, [r3, #0]
 8004cc8:	2b00      	cmp	r3, #0
 8004cca:	d153      	bne.n	8004d74 <Line_Track_Task+0x6e4>
		{
			//Első szervó
			ccr = (uint16_t)(-SERVO_M_SC * PHI + SERVO_FRONT_CCR_MIDDLE);
 8004ccc:	4b62      	ldr	r3, [pc, #392]	; (8004e58 <Line_Track_Task+0x7c8>)
 8004cce:	edd3 7a00 	vldr	s15, [r3]
 8004cd2:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8004e70 <Line_Track_Task+0x7e0>
 8004cd6:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004cda:	ed9f 7a66 	vldr	s14, [pc, #408]	; 8004e74 <Line_Track_Task+0x7e4>
 8004cde:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004ce2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004ce6:	ee17 3a90 	vmov	r3, s15
 8004cea:	b29b      	uxth	r3, r3
 8004cec:	461a      	mov	r2, r3
 8004cee:	4b5d      	ldr	r3, [pc, #372]	; (8004e64 <Line_Track_Task+0x7d4>)
 8004cf0:	601a      	str	r2, [r3, #0]
			FRONT_CCR(ccr);
 8004cf2:	4b5c      	ldr	r3, [pc, #368]	; (8004e64 <Line_Track_Task+0x7d4>)
 8004cf4:	681b      	ldr	r3, [r3, #0]
 8004cf6:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8004cfa:	dc07      	bgt.n	8004d0c <Line_Track_Task+0x67c>
 8004cfc:	4b59      	ldr	r3, [pc, #356]	; (8004e64 <Line_Track_Task+0x7d4>)
 8004cfe:	681b      	ldr	r3, [r3, #0]
 8004d00:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8004d04:	bfb8      	it	lt
 8004d06:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 8004d0a:	e001      	b.n	8004d10 <Line_Track_Task+0x680>
 8004d0c:	f44f 7361 	mov.w	r3, #900	; 0x384
 8004d10:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004d14:	6353      	str	r3, [r2, #52]	; 0x34

			//Hátsó szervó
			PHI/= 3;
 8004d16:	4b50      	ldr	r3, [pc, #320]	; (8004e58 <Line_Track_Task+0x7c8>)
 8004d18:	ed93 7a00 	vldr	s14, [r3]
 8004d1c:	eef0 6a08 	vmov.f32	s13, #8	; 0x40400000  3.0
 8004d20:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8004d24:	4b4c      	ldr	r3, [pc, #304]	; (8004e58 <Line_Track_Task+0x7c8>)
 8004d26:	edc3 7a00 	vstr	s15, [r3]
			ccr = (uint16_t)(-SERVO_M_SC * PHI + SERVO_REAR_CCR_MIDDLE);
 8004d2a:	4b4b      	ldr	r3, [pc, #300]	; (8004e58 <Line_Track_Task+0x7c8>)
 8004d2c:	edd3 7a00 	vldr	s15, [r3]
 8004d30:	ed9f 7a4f 	vldr	s14, [pc, #316]	; 8004e70 <Line_Track_Task+0x7e0>
 8004d34:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004d38:	ed9f 7a49 	vldr	s14, [pc, #292]	; 8004e60 <Line_Track_Task+0x7d0>
 8004d3c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004d40:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004d44:	ee17 3a90 	vmov	r3, s15
 8004d48:	b29b      	uxth	r3, r3
 8004d4a:	461a      	mov	r2, r3
 8004d4c:	4b45      	ldr	r3, [pc, #276]	; (8004e64 <Line_Track_Task+0x7d4>)
 8004d4e:	601a      	str	r2, [r3, #0]
			REAR_CCR(ccr);
 8004d50:	4b44      	ldr	r3, [pc, #272]	; (8004e64 <Line_Track_Task+0x7d4>)
 8004d52:	681b      	ldr	r3, [r3, #0]
 8004d54:	f5b3 7f52 	cmp.w	r3, #840	; 0x348
 8004d58:	dc07      	bgt.n	8004d6a <Line_Track_Task+0x6da>
 8004d5a:	4b42      	ldr	r3, [pc, #264]	; (8004e64 <Line_Track_Task+0x7d4>)
 8004d5c:	681b      	ldr	r3, [r3, #0]
 8004d5e:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 8004d62:	bfb8      	it	lt
 8004d64:	f44f 7302 	movlt.w	r3, #520	; 0x208
 8004d68:	e001      	b.n	8004d6e <Line_Track_Task+0x6de>
 8004d6a:	f44f 7352 	mov.w	r3, #840	; 0x348
 8004d6e:	4a3e      	ldr	r2, [pc, #248]	; (8004e68 <Line_Track_Task+0x7d8>)
 8004d70:	6413      	str	r3, [r2, #64]	; 0x40
 8004d72:	e059      	b.n	8004e28 <Line_Track_Task+0x798>
		}
		else if(fast_mode_state==OVERTAKE_MODE)
 8004d74:	4b3d      	ldr	r3, [pc, #244]	; (8004e6c <Line_Track_Task+0x7dc>)
 8004d76:	781b      	ldrb	r3, [r3, #0]
 8004d78:	2b02      	cmp	r3, #2
 8004d7a:	d155      	bne.n	8004e28 <Line_Track_Task+0x798>
		{
			static uint8_t overtake_state=0;
			static uint32_t t_stamp_overtake=0;
			if(overtake_state==0)
 8004d7c:	4b3e      	ldr	r3, [pc, #248]	; (8004e78 <Line_Track_Task+0x7e8>)
 8004d7e:	781b      	ldrb	r3, [r3, #0]
 8004d80:	2b00      	cmp	r3, #0
 8004d82:	d115      	bne.n	8004db0 <Line_Track_Task+0x720>
			{
				v_ref=1600;
 8004d84:	4b3d      	ldr	r3, [pc, #244]	; (8004e7c <Line_Track_Task+0x7ec>)
 8004d86:	4a3e      	ldr	r2, [pc, #248]	; (8004e80 <Line_Track_Task+0x7f0>)
 8004d88:	601a      	str	r2, [r3, #0]
				t_stamp_overtake=tick;
 8004d8a:	4a3e      	ldr	r2, [pc, #248]	; (8004e84 <Line_Track_Task+0x7f4>)
 8004d8c:	687b      	ldr	r3, [r7, #4]
 8004d8e:	6013      	str	r3, [r2, #0]
				leaveLineEnabled=1;
 8004d90:	4b3d      	ldr	r3, [pc, #244]	; (8004e88 <Line_Track_Task+0x7f8>)
 8004d92:	2201      	movs	r2, #1
 8004d94:	701a      	strb	r2, [r3, #0]
				FRONT_CCR(SERVO_FRONT_CCR_MIDDLE+160);
 8004d96:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004d9a:	f44f 7255 	mov.w	r2, #852	; 0x354
 8004d9e:	635a      	str	r2, [r3, #52]	; 0x34
				REAR_CCR(SERVO_REAR_CCR_MIDDLE-150);
 8004da0:	4b31      	ldr	r3, [pc, #196]	; (8004e68 <Line_Track_Task+0x7d8>)
 8004da2:	f240 2212 	movw	r2, #530	; 0x212
 8004da6:	641a      	str	r2, [r3, #64]	; 0x40
				overtake_state=1;
 8004da8:	4b33      	ldr	r3, [pc, #204]	; (8004e78 <Line_Track_Task+0x7e8>)
 8004daa:	2201      	movs	r2, #1
 8004dac:	701a      	strb	r2, [r3, #0]
 8004dae:	e03b      	b.n	8004e28 <Line_Track_Task+0x798>
			}
			else if(overtake_state==1 && (tick-t_stamp_overtake)>2200)
 8004db0:	4b31      	ldr	r3, [pc, #196]	; (8004e78 <Line_Track_Task+0x7e8>)
 8004db2:	781b      	ldrb	r3, [r3, #0]
 8004db4:	2b01      	cmp	r3, #1
 8004db6:	d11d      	bne.n	8004df4 <Line_Track_Task+0x764>
 8004db8:	4b32      	ldr	r3, [pc, #200]	; (8004e84 <Line_Track_Task+0x7f4>)
 8004dba:	681b      	ldr	r3, [r3, #0]
 8004dbc:	687a      	ldr	r2, [r7, #4]
 8004dbe:	1ad3      	subs	r3, r2, r3
 8004dc0:	f640 0298 	movw	r2, #2200	; 0x898
 8004dc4:	4293      	cmp	r3, r2
 8004dc6:	d915      	bls.n	8004df4 <Line_Track_Task+0x764>
			{
				v_ref=3000;
 8004dc8:	4b2c      	ldr	r3, [pc, #176]	; (8004e7c <Line_Track_Task+0x7ec>)
 8004dca:	4a30      	ldr	r2, [pc, #192]	; (8004e8c <Line_Track_Task+0x7fc>)
 8004dcc:	601a      	str	r2, [r3, #0]
				LED_Y(1);
 8004dce:	2200      	movs	r2, #0
 8004dd0:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004dd4:	482e      	ldr	r0, [pc, #184]	; (8004e90 <Line_Track_Task+0x800>)
 8004dd6:	f004 fa63 	bl	80092a0 <HAL_GPIO_WritePin>
				//FRONT_CCR(SERVO_FRONT_CCR_MIDDLE-50);
				TIM2->CCR1=SERVO_FRONT_CCR_MIDDLE-70;
 8004dda:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004dde:	f240 226e 	movw	r2, #622	; 0x26e
 8004de2:	635a      	str	r2, [r3, #52]	; 0x34
				TIM1->CCR4=SERVO_REAR_CCR_MIDDLE+50;
 8004de4:	4b20      	ldr	r3, [pc, #128]	; (8004e68 <Line_Track_Task+0x7d8>)
 8004de6:	f240 22da 	movw	r2, #730	; 0x2da
 8004dea:	641a      	str	r2, [r3, #64]	; 0x40
				//REAR_CCR(SERVO_REAR_CCR_MIDDLE+50);
				overtake_state=2;
 8004dec:	4b22      	ldr	r3, [pc, #136]	; (8004e78 <Line_Track_Task+0x7e8>)
 8004dee:	2202      	movs	r2, #2
 8004df0:	701a      	strb	r2, [r3, #0]
 8004df2:	e019      	b.n	8004e28 <Line_Track_Task+0x798>
			}
			else if(overtake_state==2 && LINE_CNT>0)
 8004df4:	4b20      	ldr	r3, [pc, #128]	; (8004e78 <Line_Track_Task+0x7e8>)
 8004df6:	781b      	ldrb	r3, [r3, #0]
 8004df8:	2b02      	cmp	r3, #2
 8004dfa:	d115      	bne.n	8004e28 <Line_Track_Task+0x798>
 8004dfc:	4b25      	ldr	r3, [pc, #148]	; (8004e94 <Line_Track_Task+0x804>)
 8004dfe:	785b      	ldrb	r3, [r3, #1]
 8004e00:	2b00      	cmp	r3, #0
 8004e02:	d011      	beq.n	8004e28 <Line_Track_Task+0x798>
			{
				v_ref=1200;
 8004e04:	4b1d      	ldr	r3, [pc, #116]	; (8004e7c <Line_Track_Task+0x7ec>)
 8004e06:	4a24      	ldr	r2, [pc, #144]	; (8004e98 <Line_Track_Task+0x808>)
 8004e08:	601a      	str	r2, [r3, #0]
				overtake_state=0;
 8004e0a:	4b1b      	ldr	r3, [pc, #108]	; (8004e78 <Line_Track_Task+0x7e8>)
 8004e0c:	2200      	movs	r2, #0
 8004e0e:	701a      	strb	r2, [r3, #0]
				fast_mode_state=FREERUN_MODE;
 8004e10:	4b16      	ldr	r3, [pc, #88]	; (8004e6c <Line_Track_Task+0x7dc>)
 8004e12:	2201      	movs	r2, #1
 8004e14:	701a      	strb	r2, [r3, #0]
				leaveLineEnabled=0;
 8004e16:	4b1c      	ldr	r3, [pc, #112]	; (8004e88 <Line_Track_Task+0x7f8>)
 8004e18:	2200      	movs	r2, #0
 8004e1a:	701a      	strb	r2, [r3, #0]
				LED_Y(0);
 8004e1c:	2201      	movs	r2, #1
 8004e1e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004e22:	481b      	ldr	r0, [pc, #108]	; (8004e90 <Line_Track_Task+0x800>)
 8004e24:	f004 fa3c 	bl	80092a0 <HAL_GPIO_WritePin>
			}
		}
	}

	tick_prev=tick;
 8004e28:	4a1c      	ldr	r2, [pc, #112]	; (8004e9c <Line_Track_Task+0x80c>)
 8004e2a:	687b      	ldr	r3, [r7, #4]
 8004e2c:	6013      	str	r3, [r2, #0]
 8004e2e:	e010      	b.n	8004e52 <Line_Track_Task+0x7c2>
	if(line_track_task_tick>tick) return;
 8004e30:	bf00      	nop
 8004e32:	e00e      	b.n	8004e52 <Line_Track_Task+0x7c2>
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_FORWARD))return;
 8004e34:	bf00      	nop
 8004e36:	e00c      	b.n	8004e52 <Line_Track_Task+0x7c2>
			if(tmp)return;
 8004e38:	bf00      	nop
 8004e3a:	e00a      	b.n	8004e52 <Line_Track_Task+0x7c2>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 8004e3c:	bf00      	nop
 8004e3e:	e008      	b.n	8004e52 <Line_Track_Task+0x7c2>
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_REVERSE))return;
 8004e40:	bf00      	nop
 8004e42:	e006      	b.n	8004e52 <Line_Track_Task+0x7c2>
			if(tmp)return;
 8004e44:	bf00      	nop
 8004e46:	e004      	b.n	8004e52 <Line_Track_Task+0x7c2>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 8004e48:	bf00      	nop
 8004e4a:	e002      	b.n	8004e52 <Line_Track_Task+0x7c2>
		if(G0_Read_Fast(huart_stm, huart_debugg)) return; //ha sikertelen az olvasás a G0 ból akkor nincs értelme az egésznek
 8004e4c:	bf00      	nop
 8004e4e:	e000      	b.n	8004e52 <Line_Track_Task+0x7c2>
		if((LINE_CNT<1 || LINE_CNT > 3) && !leaveLineEnabled) return;//ha nincs vonal a kocsi alatt
 8004e50:	bf00      	nop
}
 8004e52:	3718      	adds	r7, #24
 8004e54:	46bd      	mov	sp, r7
 8004e56:	bd80      	pop	{r7, pc}
 8004e58:	20000788 	.word	0x20000788
 8004e5c:	c47a0000 	.word	0xc47a0000
 8004e60:	442a0000 	.word	0x442a0000
 8004e64:	2000004c 	.word	0x2000004c
 8004e68:	40010000 	.word	0x40010000
 8004e6c:	2000078c 	.word	0x2000078c
 8004e70:	c4a28000 	.word	0xc4a28000
 8004e74:	442d0000 	.word	0x442d0000
 8004e78:	2000078d 	.word	0x2000078d
 8004e7c:	20000338 	.word	0x20000338
 8004e80:	44c80000 	.word	0x44c80000
 8004e84:	20000790 	.word	0x20000790
 8004e88:	2000033c 	.word	0x2000033c
 8004e8c:	453b8000 	.word	0x453b8000
 8004e90:	40020400 	.word	0x40020400
 8004e94:	20000774 	.word	0x20000774
 8004e98:	44960000 	.word	0x44960000
 8004e9c:	20000794 	.word	0x20000794

08004ea0 <Fast_Mode>:

float Fast_Mode(UART_HandleTypeDef *huart_debugg,uint8_t* state_pointer, uint32_t t)
{
 8004ea0:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8004ea4:	b088      	sub	sp, #32
 8004ea6:	af00      	add	r7, sp, #0
 8004ea8:	60f8      	str	r0, [r7, #12]
 8004eaa:	60b9      	str	r1, [r7, #8]
 8004eac:	607a      	str	r2, [r7, #4]
	static float x_elso_prev=0;
	static float x_hatso;
	static float delta;
	static float gamma;

	uint8_t state = *state_pointer;
 8004eae:	68bb      	ldr	r3, [r7, #8]
 8004eb0:	781b      	ldrb	r3, [r3, #0]
 8004eb2:	77fb      	strb	r3, [r7, #31]

	if(state==OVERTAKE_MODE)return 0;
 8004eb4:	7ffb      	ldrb	r3, [r7, #31]
 8004eb6:	2b02      	cmp	r3, #2
 8004eb8:	d102      	bne.n	8004ec0 <Fast_Mode+0x20>
 8004eba:	f04f 0300 	mov.w	r3, #0
 8004ebe:	e2df      	b.n	8005480 <Fast_Mode+0x5e0>
/**/
	//BOOST detect
	if(LINE_CNT != lineCnt_prev && (LINE_CNT==1 || LINE_CNT==3)) //ha változik az alattunk lévő vonalak száma 1 és 3 közt
 8004ec0:	4bad      	ldr	r3, [pc, #692]	; (8005178 <Fast_Mode+0x2d8>)
 8004ec2:	785a      	ldrb	r2, [r3, #1]
 8004ec4:	4bad      	ldr	r3, [pc, #692]	; (800517c <Fast_Mode+0x2dc>)
 8004ec6:	781b      	ldrb	r3, [r3, #0]
 8004ec8:	429a      	cmp	r2, r3
 8004eca:	f000 80cf 	beq.w	800506c <Fast_Mode+0x1cc>
 8004ece:	4baa      	ldr	r3, [pc, #680]	; (8005178 <Fast_Mode+0x2d8>)
 8004ed0:	785b      	ldrb	r3, [r3, #1]
 8004ed2:	2b01      	cmp	r3, #1
 8004ed4:	d004      	beq.n	8004ee0 <Fast_Mode+0x40>
 8004ed6:	4ba8      	ldr	r3, [pc, #672]	; (8005178 <Fast_Mode+0x2d8>)
 8004ed8:	785b      	ldrb	r3, [r3, #1]
 8004eda:	2b03      	cmp	r3, #3
 8004edc:	f040 80c6 	bne.w	800506c <Fast_Mode+0x1cc>
	{
		ds[index]=fabs(v)*(t-t_stamp_boost)/1000;
 8004ee0:	4ba7      	ldr	r3, [pc, #668]	; (8005180 <Fast_Mode+0x2e0>)
 8004ee2:	edd3 7a00 	vldr	s15, [r3]
 8004ee6:	eef0 7ae7 	vabs.f32	s15, s15
 8004eea:	ee17 0a90 	vmov	r0, s15
 8004eee:	f7fb fb4b 	bl	8000588 <__aeabi_f2d>
 8004ef2:	4604      	mov	r4, r0
 8004ef4:	460d      	mov	r5, r1
 8004ef6:	4ba3      	ldr	r3, [pc, #652]	; (8005184 <Fast_Mode+0x2e4>)
 8004ef8:	681b      	ldr	r3, [r3, #0]
 8004efa:	687a      	ldr	r2, [r7, #4]
 8004efc:	1ad3      	subs	r3, r2, r3
 8004efe:	4618      	mov	r0, r3
 8004f00:	f7fb fb20 	bl	8000544 <__aeabi_ui2d>
 8004f04:	4602      	mov	r2, r0
 8004f06:	460b      	mov	r3, r1
 8004f08:	4620      	mov	r0, r4
 8004f0a:	4629      	mov	r1, r5
 8004f0c:	f7fb fb94 	bl	8000638 <__aeabi_dmul>
 8004f10:	4602      	mov	r2, r0
 8004f12:	460b      	mov	r3, r1
 8004f14:	4610      	mov	r0, r2
 8004f16:	4619      	mov	r1, r3
 8004f18:	f04f 0200 	mov.w	r2, #0
 8004f1c:	4b9a      	ldr	r3, [pc, #616]	; (8005188 <Fast_Mode+0x2e8>)
 8004f1e:	f7fb fcb5 	bl	800088c <__aeabi_ddiv>
 8004f22:	4602      	mov	r2, r0
 8004f24:	460b      	mov	r3, r1
 8004f26:	4999      	ldr	r1, [pc, #612]	; (800518c <Fast_Mode+0x2ec>)
 8004f28:	7809      	ldrb	r1, [r1, #0]
 8004f2a:	460c      	mov	r4, r1
 8004f2c:	4610      	mov	r0, r2
 8004f2e:	4619      	mov	r1, r3
 8004f30:	f7fb fe5a 	bl	8000be8 <__aeabi_d2f>
 8004f34:	4602      	mov	r2, r0
 8004f36:	4996      	ldr	r1, [pc, #600]	; (8005190 <Fast_Mode+0x2f0>)
 8004f38:	00a3      	lsls	r3, r4, #2
 8004f3a:	440b      	add	r3, r1
 8004f3c:	601a      	str	r2, [r3, #0]
		float s_boost = ds[0]+ds[1]+ds[2]+ds[3]+ds[4]+ds[5]+ds[6]+ds[7];
 8004f3e:	4b94      	ldr	r3, [pc, #592]	; (8005190 <Fast_Mode+0x2f0>)
 8004f40:	ed93 7a00 	vldr	s14, [r3]
 8004f44:	4b92      	ldr	r3, [pc, #584]	; (8005190 <Fast_Mode+0x2f0>)
 8004f46:	edd3 7a01 	vldr	s15, [r3, #4]
 8004f4a:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004f4e:	4b90      	ldr	r3, [pc, #576]	; (8005190 <Fast_Mode+0x2f0>)
 8004f50:	edd3 7a02 	vldr	s15, [r3, #8]
 8004f54:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004f58:	4b8d      	ldr	r3, [pc, #564]	; (8005190 <Fast_Mode+0x2f0>)
 8004f5a:	edd3 7a03 	vldr	s15, [r3, #12]
 8004f5e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004f62:	4b8b      	ldr	r3, [pc, #556]	; (8005190 <Fast_Mode+0x2f0>)
 8004f64:	edd3 7a04 	vldr	s15, [r3, #16]
 8004f68:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004f6c:	4b88      	ldr	r3, [pc, #544]	; (8005190 <Fast_Mode+0x2f0>)
 8004f6e:	edd3 7a05 	vldr	s15, [r3, #20]
 8004f72:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004f76:	4b86      	ldr	r3, [pc, #536]	; (8005190 <Fast_Mode+0x2f0>)
 8004f78:	edd3 7a06 	vldr	s15, [r3, #24]
 8004f7c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004f80:	4b83      	ldr	r3, [pc, #524]	; (8005190 <Fast_Mode+0x2f0>)
 8004f82:	edd3 7a07 	vldr	s15, [r3, #28]
 8004f86:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004f8a:	edc7 7a06 	vstr	s15, [r7, #24]
		if(s_boost>250.0 && s_boost<800.0 && boostOrBrake==1) // ha 25 és 80 cm közt bekövetkezik 8 vonalszámváltás
 8004f8e:	edd7 7a06 	vldr	s15, [r7, #24]
 8004f92:	ed9f 7a80 	vldr	s14, [pc, #512]	; 8005194 <Fast_Mode+0x2f4>
 8004f96:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004f9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004f9e:	dd55      	ble.n	800504c <Fast_Mode+0x1ac>
 8004fa0:	edd7 7a06 	vldr	s15, [r7, #24]
 8004fa4:	ed9f 7a7c 	vldr	s14, [pc, #496]	; 8005198 <Fast_Mode+0x2f8>
 8004fa8:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004fac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004fb0:	d54c      	bpl.n	800504c <Fast_Mode+0x1ac>
 8004fb2:	4b7a      	ldr	r3, [pc, #488]	; (800519c <Fast_Mode+0x2fc>)
 8004fb4:	781b      	ldrb	r3, [r3, #0]
 8004fb6:	2b01      	cmp	r3, #1
 8004fb8:	d148      	bne.n	800504c <Fast_Mode+0x1ac>
		{
			LED_B(1);
 8004fba:	2200      	movs	r2, #0
 8004fbc:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8004fc0:	4877      	ldr	r0, [pc, #476]	; (80051a0 <Fast_Mode+0x300>)
 8004fc2:	f004 f96d 	bl	80092a0 <HAL_GPIO_WritePin>
			boostOrBrake=2;
 8004fc6:	4b75      	ldr	r3, [pc, #468]	; (800519c <Fast_Mode+0x2fc>)
 8004fc8:	2202      	movs	r2, #2
 8004fca:	701a      	strb	r2, [r3, #0]
			if(straightSpeed[boostCnt]==SC_MODE)state=SC_MODE;
 8004fcc:	4b75      	ldr	r3, [pc, #468]	; (80051a4 <Fast_Mode+0x304>)
 8004fce:	881b      	ldrh	r3, [r3, #0]
 8004fd0:	461a      	mov	r2, r3
 8004fd2:	4b75      	ldr	r3, [pc, #468]	; (80051a8 <Fast_Mode+0x308>)
 8004fd4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004fd8:	2b00      	cmp	r3, #0
 8004fda:	d102      	bne.n	8004fe2 <Fast_Mode+0x142>
 8004fdc:	2300      	movs	r3, #0
 8004fde:	77fb      	strb	r3, [r7, #31]
 8004fe0:	e02e      	b.n	8005040 <Fast_Mode+0x1a0>
			else if(straightSpeed[boostCnt]==OVERTAKE_MODE && !ot_delay)
 8004fe2:	4b70      	ldr	r3, [pc, #448]	; (80051a4 <Fast_Mode+0x304>)
 8004fe4:	881b      	ldrh	r3, [r3, #0]
 8004fe6:	461a      	mov	r2, r3
 8004fe8:	4b6f      	ldr	r3, [pc, #444]	; (80051a8 <Fast_Mode+0x308>)
 8004fea:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004fee:	2b02      	cmp	r3, #2
 8004ff0:	d10a      	bne.n	8005008 <Fast_Mode+0x168>
 8004ff2:	4b6e      	ldr	r3, [pc, #440]	; (80051ac <Fast_Mode+0x30c>)
 8004ff4:	781b      	ldrb	r3, [r3, #0]
 8004ff6:	2b00      	cmp	r3, #0
 8004ff8:	d106      	bne.n	8005008 <Fast_Mode+0x168>
			{
				ot_delay=1;
 8004ffa:	4b6c      	ldr	r3, [pc, #432]	; (80051ac <Fast_Mode+0x30c>)
 8004ffc:	2201      	movs	r2, #1
 8004ffe:	701a      	strb	r2, [r3, #0]
				t_overtake=t;
 8005000:	4a6b      	ldr	r2, [pc, #428]	; (80051b0 <Fast_Mode+0x310>)
 8005002:	687b      	ldr	r3, [r7, #4]
 8005004:	6013      	str	r3, [r2, #0]
 8005006:	e01b      	b.n	8005040 <Fast_Mode+0x1a0>

			}
			else if(straightSpeed[boostCnt]==-1) motorEnLineOk=0;
 8005008:	4b66      	ldr	r3, [pc, #408]	; (80051a4 <Fast_Mode+0x304>)
 800500a:	881b      	ldrh	r3, [r3, #0]
 800500c:	461a      	mov	r2, r3
 800500e:	4b66      	ldr	r3, [pc, #408]	; (80051a8 <Fast_Mode+0x308>)
 8005010:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005014:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005018:	d103      	bne.n	8005022 <Fast_Mode+0x182>
 800501a:	4b66      	ldr	r3, [pc, #408]	; (80051b4 <Fast_Mode+0x314>)
 800501c:	2200      	movs	r2, #0
 800501e:	701a      	strb	r2, [r3, #0]
 8005020:	e00e      	b.n	8005040 <Fast_Mode+0x1a0>
			else
			{
				state=FREERUN_MODE;
 8005022:	2301      	movs	r3, #1
 8005024:	77fb      	strb	r3, [r7, #31]
				v_ref=straightSpeed[boostCnt];
 8005026:	4b5f      	ldr	r3, [pc, #380]	; (80051a4 <Fast_Mode+0x304>)
 8005028:	881b      	ldrh	r3, [r3, #0]
 800502a:	461a      	mov	r2, r3
 800502c:	4b5e      	ldr	r3, [pc, #376]	; (80051a8 <Fast_Mode+0x308>)
 800502e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005032:	ee07 3a90 	vmov	s15, r3
 8005036:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800503a:	4b5f      	ldr	r3, [pc, #380]	; (80051b8 <Fast_Mode+0x318>)
 800503c:	edc3 7a00 	vstr	s15, [r3]
			}
			boostCnt++;
 8005040:	4b58      	ldr	r3, [pc, #352]	; (80051a4 <Fast_Mode+0x304>)
 8005042:	881b      	ldrh	r3, [r3, #0]
 8005044:	3301      	adds	r3, #1
 8005046:	b29a      	uxth	r2, r3
 8005048:	4b56      	ldr	r3, [pc, #344]	; (80051a4 <Fast_Mode+0x304>)
 800504a:	801a      	strh	r2, [r3, #0]
		}
		index++;
 800504c:	4b4f      	ldr	r3, [pc, #316]	; (800518c <Fast_Mode+0x2ec>)
 800504e:	781b      	ldrb	r3, [r3, #0]
 8005050:	3301      	adds	r3, #1
 8005052:	b2da      	uxtb	r2, r3
 8005054:	4b4d      	ldr	r3, [pc, #308]	; (800518c <Fast_Mode+0x2ec>)
 8005056:	701a      	strb	r2, [r3, #0]
		if(index>7) index=0;
 8005058:	4b4c      	ldr	r3, [pc, #304]	; (800518c <Fast_Mode+0x2ec>)
 800505a:	781b      	ldrb	r3, [r3, #0]
 800505c:	2b07      	cmp	r3, #7
 800505e:	d902      	bls.n	8005066 <Fast_Mode+0x1c6>
 8005060:	4b4a      	ldr	r3, [pc, #296]	; (800518c <Fast_Mode+0x2ec>)
 8005062:	2200      	movs	r2, #0
 8005064:	701a      	strb	r2, [r3, #0]
		t_stamp_boost = t;
 8005066:	4a47      	ldr	r2, [pc, #284]	; (8005184 <Fast_Mode+0x2e4>)
 8005068:	687b      	ldr	r3, [r7, #4]
 800506a:	6013      	str	r3, [r2, #0]
	}
	lineCnt_prev = LINE_CNT; //az előző értéket a jelenlegihez hangoljuk
 800506c:	4b42      	ldr	r3, [pc, #264]	; (8005178 <Fast_Mode+0x2d8>)
 800506e:	785a      	ldrb	r2, [r3, #1]
 8005070:	4b42      	ldr	r3, [pc, #264]	; (800517c <Fast_Mode+0x2dc>)
 8005072:	701a      	strb	r2, [r3, #0]
	if(ot_delay && (t-t_overtake)>1000)
 8005074:	4b4d      	ldr	r3, [pc, #308]	; (80051ac <Fast_Mode+0x30c>)
 8005076:	781b      	ldrb	r3, [r3, #0]
 8005078:	2b00      	cmp	r3, #0
 800507a:	d00f      	beq.n	800509c <Fast_Mode+0x1fc>
 800507c:	4b4c      	ldr	r3, [pc, #304]	; (80051b0 <Fast_Mode+0x310>)
 800507e:	681b      	ldr	r3, [r3, #0]
 8005080:	687a      	ldr	r2, [r7, #4]
 8005082:	1ad3      	subs	r3, r2, r3
 8005084:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005088:	d908      	bls.n	800509c <Fast_Mode+0x1fc>
	{
		*state_pointer=OVERTAKE_MODE;
 800508a:	68bb      	ldr	r3, [r7, #8]
 800508c:	2202      	movs	r2, #2
 800508e:	701a      	strb	r2, [r3, #0]
		ot_delay=0;
 8005090:	4b46      	ldr	r3, [pc, #280]	; (80051ac <Fast_Mode+0x30c>)
 8005092:	2200      	movs	r2, #0
 8005094:	701a      	strb	r2, [r3, #0]
		return 0;
 8005096:	f04f 0300 	mov.w	r3, #0
 800509a:	e1f1      	b.n	8005480 <Fast_Mode+0x5e0>
	}

	//BRAKING detect -> erre csak gyors üzemmódban van szükség
	if(LINE_CNT > 1) //ha 3 vonalat érzékelünk
 800509c:	4b36      	ldr	r3, [pc, #216]	; (8005178 <Fast_Mode+0x2d8>)
 800509e:	785b      	ldrb	r3, [r3, #1]
 80050a0:	2b01      	cmp	r3, #1
 80050a2:	f240 8093 	bls.w	80051cc <Fast_Mode+0x32c>
	{
		s_brake += fabs(v)*(t-t_prev)/1000;
 80050a6:	4b45      	ldr	r3, [pc, #276]	; (80051bc <Fast_Mode+0x31c>)
 80050a8:	681b      	ldr	r3, [r3, #0]
 80050aa:	4618      	mov	r0, r3
 80050ac:	f7fb fa6c 	bl	8000588 <__aeabi_f2d>
 80050b0:	4604      	mov	r4, r0
 80050b2:	460d      	mov	r5, r1
 80050b4:	4b32      	ldr	r3, [pc, #200]	; (8005180 <Fast_Mode+0x2e0>)
 80050b6:	edd3 7a00 	vldr	s15, [r3]
 80050ba:	eef0 7ae7 	vabs.f32	s15, s15
 80050be:	ee17 0a90 	vmov	r0, s15
 80050c2:	f7fb fa61 	bl	8000588 <__aeabi_f2d>
 80050c6:	4680      	mov	r8, r0
 80050c8:	4689      	mov	r9, r1
 80050ca:	4b3d      	ldr	r3, [pc, #244]	; (80051c0 <Fast_Mode+0x320>)
 80050cc:	681b      	ldr	r3, [r3, #0]
 80050ce:	687a      	ldr	r2, [r7, #4]
 80050d0:	1ad3      	subs	r3, r2, r3
 80050d2:	4618      	mov	r0, r3
 80050d4:	f7fb fa36 	bl	8000544 <__aeabi_ui2d>
 80050d8:	4602      	mov	r2, r0
 80050da:	460b      	mov	r3, r1
 80050dc:	4640      	mov	r0, r8
 80050de:	4649      	mov	r1, r9
 80050e0:	f7fb faaa 	bl	8000638 <__aeabi_dmul>
 80050e4:	4602      	mov	r2, r0
 80050e6:	460b      	mov	r3, r1
 80050e8:	4610      	mov	r0, r2
 80050ea:	4619      	mov	r1, r3
 80050ec:	f04f 0200 	mov.w	r2, #0
 80050f0:	4b25      	ldr	r3, [pc, #148]	; (8005188 <Fast_Mode+0x2e8>)
 80050f2:	f7fb fbcb 	bl	800088c <__aeabi_ddiv>
 80050f6:	4602      	mov	r2, r0
 80050f8:	460b      	mov	r3, r1
 80050fa:	4620      	mov	r0, r4
 80050fc:	4629      	mov	r1, r5
 80050fe:	f7fb f8e5 	bl	80002cc <__adddf3>
 8005102:	4602      	mov	r2, r0
 8005104:	460b      	mov	r3, r1
 8005106:	4610      	mov	r0, r2
 8005108:	4619      	mov	r1, r3
 800510a:	f7fb fd6d 	bl	8000be8 <__aeabi_d2f>
 800510e:	4603      	mov	r3, r0
 8005110:	4a2a      	ldr	r2, [pc, #168]	; (80051bc <Fast_Mode+0x31c>)
 8005112:	6013      	str	r3, [r2, #0]
		if(s_brake>300) //ha már legalább 30cm óta folyamatosan 3 vonal van alattunk
 8005114:	4b29      	ldr	r3, [pc, #164]	; (80051bc <Fast_Mode+0x31c>)
 8005116:	edd3 7a00 	vldr	s15, [r3]
 800511a:	ed9f 7a2a 	vldr	s14, [pc, #168]	; 80051c4 <Fast_Mode+0x324>
 800511e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005122:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005126:	dd55      	ble.n	80051d4 <Fast_Mode+0x334>
		{
			boostOrBrake=1;
 8005128:	4b1c      	ldr	r3, [pc, #112]	; (800519c <Fast_Mode+0x2fc>)
 800512a:	2201      	movs	r2, #1
 800512c:	701a      	strb	r2, [r3, #0]
			if(state == FREERUN_MODE)
 800512e:	7ffb      	ldrb	r3, [r7, #31]
 8005130:	2b01      	cmp	r3, #1
 8005132:	d14f      	bne.n	80051d4 <Fast_Mode+0x334>
			{
				if(cornerSpeed[boostCnt]==-1)motorEnLineOk=0;
 8005134:	4b1b      	ldr	r3, [pc, #108]	; (80051a4 <Fast_Mode+0x304>)
 8005136:	881b      	ldrh	r3, [r3, #0]
 8005138:	461a      	mov	r2, r3
 800513a:	4b23      	ldr	r3, [pc, #140]	; (80051c8 <Fast_Mode+0x328>)
 800513c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005140:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005144:	d103      	bne.n	800514e <Fast_Mode+0x2ae>
 8005146:	4b1b      	ldr	r3, [pc, #108]	; (80051b4 <Fast_Mode+0x314>)
 8005148:	2200      	movs	r2, #0
 800514a:	701a      	strb	r2, [r3, #0]
 800514c:	e00c      	b.n	8005168 <Fast_Mode+0x2c8>
				else v_ref = cornerSpeed[boostCnt];
 800514e:	4b15      	ldr	r3, [pc, #84]	; (80051a4 <Fast_Mode+0x304>)
 8005150:	881b      	ldrh	r3, [r3, #0]
 8005152:	461a      	mov	r2, r3
 8005154:	4b1c      	ldr	r3, [pc, #112]	; (80051c8 <Fast_Mode+0x328>)
 8005156:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800515a:	ee07 3a90 	vmov	s15, r3
 800515e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005162:	4b15      	ldr	r3, [pc, #84]	; (80051b8 <Fast_Mode+0x318>)
 8005164:	edc3 7a00 	vstr	s15, [r3]
				LED_B(0);
 8005168:	2201      	movs	r2, #1
 800516a:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800516e:	480c      	ldr	r0, [pc, #48]	; (80051a0 <Fast_Mode+0x300>)
 8005170:	f004 f896 	bl	80092a0 <HAL_GPIO_WritePin>
 8005174:	e02e      	b.n	80051d4 <Fast_Mode+0x334>
 8005176:	bf00      	nop
 8005178:	20000774 	.word	0x20000774
 800517c:	20000050 	.word	0x20000050
 8005180:	20000754 	.word	0x20000754
 8005184:	20000798 	.word	0x20000798
 8005188:	408f4000 	.word	0x408f4000
 800518c:	2000079c 	.word	0x2000079c
 8005190:	20000054 	.word	0x20000054
 8005194:	437a0000 	.word	0x437a0000
 8005198:	44480000 	.word	0x44480000
 800519c:	20000074 	.word	0x20000074
 80051a0:	40020400 	.word	0x40020400
 80051a4:	20000780 	.word	0x20000780
 80051a8:	20000078 	.word	0x20000078
 80051ac:	2000079d 	.word	0x2000079d
 80051b0:	200007a0 	.word	0x200007a0
 80051b4:	20000c41 	.word	0x20000c41
 80051b8:	20000338 	.word	0x20000338
 80051bc:	200007a4 	.word	0x200007a4
 80051c0:	200007a8 	.word	0x200007a8
 80051c4:	43960000 	.word	0x43960000
 80051c8:	200000bc 	.word	0x200000bc
			}
		}
	}
	else //ha 1 vonalat érzékelünk
	{
		s_brake=0;
 80051cc:	4bb6      	ldr	r3, [pc, #728]	; (80054a8 <Fast_Mode+0x608>)
 80051ce:	f04f 0200 	mov.w	r2, #0
 80051d2:	601a      	str	r2, [r3, #0]
	}
	t_prev=t;
 80051d4:	4ab5      	ldr	r2, [pc, #724]	; (80054ac <Fast_Mode+0x60c>)
 80051d6:	687b      	ldr	r3, [r7, #4]
 80051d8:	6013      	str	r3, [r2, #0]

	/*****SC üzemmód******/
	if(state==SC_MODE)
 80051da:	7ffb      	ldrb	r3, [r7, #31]
 80051dc:	2b00      	cmp	r3, #0
 80051de:	d11e      	bne.n	800521e <Fast_Mode+0x37e>
	{
		uint32_t dist=(((uint16_t)rxBuf[5])<<8) | ((uint16_t)rxBuf[6]);
 80051e0:	4bb3      	ldr	r3, [pc, #716]	; (80054b0 <Fast_Mode+0x610>)
 80051e2:	795b      	ldrb	r3, [r3, #5]
 80051e4:	021b      	lsls	r3, r3, #8
 80051e6:	4ab2      	ldr	r2, [pc, #712]	; (80054b0 <Fast_Mode+0x610>)
 80051e8:	7992      	ldrb	r2, [r2, #6]
 80051ea:	4313      	orrs	r3, r2
 80051ec:	617b      	str	r3, [r7, #20]
		if(dist>1000 || rxBuf[4]) v_ref=1500; //ha tul messze vana  SC vagy érvénytelen az olvasás
 80051ee:	697b      	ldr	r3, [r7, #20]
 80051f0:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80051f4:	d803      	bhi.n	80051fe <Fast_Mode+0x35e>
 80051f6:	4bae      	ldr	r3, [pc, #696]	; (80054b0 <Fast_Mode+0x610>)
 80051f8:	791b      	ldrb	r3, [r3, #4]
 80051fa:	2b00      	cmp	r3, #0
 80051fc:	d003      	beq.n	8005206 <Fast_Mode+0x366>
 80051fe:	4bad      	ldr	r3, [pc, #692]	; (80054b4 <Fast_Mode+0x614>)
 8005200:	4aad      	ldr	r2, [pc, #692]	; (80054b8 <Fast_Mode+0x618>)
 8005202:	601a      	str	r2, [r3, #0]
 8005204:	e00b      	b.n	800521e <Fast_Mode+0x37e>
		else v_ref = 2*dist-500;
 8005206:	697b      	ldr	r3, [r7, #20]
 8005208:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 800520c:	3bfa      	subs	r3, #250	; 0xfa
 800520e:	005b      	lsls	r3, r3, #1
 8005210:	ee07 3a90 	vmov	s15, r3
 8005214:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8005218:	4ba6      	ldr	r3, [pc, #664]	; (80054b4 <Fast_Mode+0x614>)
 800521a:	edc3 7a00 	vstr	s15, [r3]
	}

	x_elso=(float)rxBuf[2]*204/248.0-102;//248
 800521e:	4ba4      	ldr	r3, [pc, #656]	; (80054b0 <Fast_Mode+0x610>)
 8005220:	789b      	ldrb	r3, [r3, #2]
 8005222:	ee07 3a90 	vmov	s15, r3
 8005226:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800522a:	ed9f 7aa4 	vldr	s14, [pc, #656]	; 80054bc <Fast_Mode+0x61c>
 800522e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005232:	ee17 0a90 	vmov	r0, s15
 8005236:	f7fb f9a7 	bl	8000588 <__aeabi_f2d>
 800523a:	f04f 0200 	mov.w	r2, #0
 800523e:	4ba0      	ldr	r3, [pc, #640]	; (80054c0 <Fast_Mode+0x620>)
 8005240:	f7fb fb24 	bl	800088c <__aeabi_ddiv>
 8005244:	4602      	mov	r2, r0
 8005246:	460b      	mov	r3, r1
 8005248:	4610      	mov	r0, r2
 800524a:	4619      	mov	r1, r3
 800524c:	f04f 0200 	mov.w	r2, #0
 8005250:	4b9c      	ldr	r3, [pc, #624]	; (80054c4 <Fast_Mode+0x624>)
 8005252:	f7fb f839 	bl	80002c8 <__aeabi_dsub>
 8005256:	4602      	mov	r2, r0
 8005258:	460b      	mov	r3, r1
 800525a:	4610      	mov	r0, r2
 800525c:	4619      	mov	r1, r3
 800525e:	f7fb fcc3 	bl	8000be8 <__aeabi_d2f>
 8005262:	4603      	mov	r3, r0
 8005264:	4a98      	ldr	r2, [pc, #608]	; (80054c8 <Fast_Mode+0x628>)
 8005266:	6013      	str	r3, [r2, #0]
	x_hatso=(float)rxBuf[3]*204/248.0-102; //244
 8005268:	4b91      	ldr	r3, [pc, #580]	; (80054b0 <Fast_Mode+0x610>)
 800526a:	78db      	ldrb	r3, [r3, #3]
 800526c:	ee07 3a90 	vmov	s15, r3
 8005270:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8005274:	ed9f 7a91 	vldr	s14, [pc, #580]	; 80054bc <Fast_Mode+0x61c>
 8005278:	ee67 7a87 	vmul.f32	s15, s15, s14
 800527c:	ee17 0a90 	vmov	r0, s15
 8005280:	f7fb f982 	bl	8000588 <__aeabi_f2d>
 8005284:	f04f 0200 	mov.w	r2, #0
 8005288:	4b8d      	ldr	r3, [pc, #564]	; (80054c0 <Fast_Mode+0x620>)
 800528a:	f7fb faff 	bl	800088c <__aeabi_ddiv>
 800528e:	4602      	mov	r2, r0
 8005290:	460b      	mov	r3, r1
 8005292:	4610      	mov	r0, r2
 8005294:	4619      	mov	r1, r3
 8005296:	f04f 0200 	mov.w	r2, #0
 800529a:	4b8a      	ldr	r3, [pc, #552]	; (80054c4 <Fast_Mode+0x624>)
 800529c:	f7fb f814 	bl	80002c8 <__aeabi_dsub>
 80052a0:	4602      	mov	r2, r0
 80052a2:	460b      	mov	r3, r1
 80052a4:	4610      	mov	r0, r2
 80052a6:	4619      	mov	r1, r3
 80052a8:	f7fb fc9e 	bl	8000be8 <__aeabi_d2f>
 80052ac:	4603      	mov	r3, r0
 80052ae:	4a87      	ldr	r2, [pc, #540]	; (80054cc <Fast_Mode+0x62c>)
 80052b0:	6013      	str	r3, [r2, #0]
	delta=atan((x_elso-x_hatso)/L_SENSOR);
 80052b2:	4b85      	ldr	r3, [pc, #532]	; (80054c8 <Fast_Mode+0x628>)
 80052b4:	ed93 7a00 	vldr	s14, [r3]
 80052b8:	4b84      	ldr	r3, [pc, #528]	; (80054cc <Fast_Mode+0x62c>)
 80052ba:	edd3 7a00 	vldr	s15, [r3]
 80052be:	ee77 7a67 	vsub.f32	s15, s14, s15
 80052c2:	ee17 0a90 	vmov	r0, s15
 80052c6:	f7fb f95f 	bl	8000588 <__aeabi_f2d>
 80052ca:	f04f 0200 	mov.w	r2, #0
 80052ce:	4b80      	ldr	r3, [pc, #512]	; (80054d0 <Fast_Mode+0x630>)
 80052d0:	f7fb fadc 	bl	800088c <__aeabi_ddiv>
 80052d4:	4602      	mov	r2, r0
 80052d6:	460b      	mov	r3, r1
 80052d8:	ec43 2b17 	vmov	d7, r2, r3
 80052dc:	eeb0 0a47 	vmov.f32	s0, s14
 80052e0:	eef0 0a67 	vmov.f32	s1, s15
 80052e4:	f00a fd10 	bl	800fd08 <atan>
 80052e8:	ec53 2b10 	vmov	r2, r3, d0
 80052ec:	4610      	mov	r0, r2
 80052ee:	4619      	mov	r1, r3
 80052f0:	f7fb fc7a 	bl	8000be8 <__aeabi_d2f>
 80052f4:	4603      	mov	r3, r0
 80052f6:	4a77      	ldr	r2, [pc, #476]	; (80054d4 <Fast_Mode+0x634>)
 80052f8:	6013      	str	r3, [r2, #0]
	/**/
	//szabályozóparaméterek ujraszámolása az aktuális sebesség alapján
	if(state==SC_MODE)
 80052fa:	7ffb      	ldrb	r3, [r7, #31]
 80052fc:	2b00      	cmp	r3, #0
 80052fe:	d10a      	bne.n	8005316 <Fast_Mode+0x476>
	{
		k_p = -0.004;
 8005300:	4b75      	ldr	r3, [pc, #468]	; (80054d8 <Fast_Mode+0x638>)
 8005302:	4a76      	ldr	r2, [pc, #472]	; (80054dc <Fast_Mode+0x63c>)
 8005304:	601a      	str	r2, [r3, #0]
		kD = -0.004;
 8005306:	4b76      	ldr	r3, [pc, #472]	; (80054e0 <Fast_Mode+0x640>)
 8005308:	4a74      	ldr	r2, [pc, #464]	; (80054dc <Fast_Mode+0x63c>)
 800530a:	601a      	str	r2, [r3, #0]
		k_delta = 0;
 800530c:	4b75      	ldr	r3, [pc, #468]	; (80054e4 <Fast_Mode+0x644>)
 800530e:	f04f 0200 	mov.w	r2, #0
 8005312:	601a      	str	r2, [r3, #0]
 8005314:	e085      	b.n	8005422 <Fast_Mode+0x582>
	}

	else //FREERUN modes
	{
		if(v>150 || v<-150)
 8005316:	4b74      	ldr	r3, [pc, #464]	; (80054e8 <Fast_Mode+0x648>)
 8005318:	edd3 7a00 	vldr	s15, [r3]
 800531c:	ed9f 7a73 	vldr	s14, [pc, #460]	; 80054ec <Fast_Mode+0x64c>
 8005320:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005324:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005328:	dc09      	bgt.n	800533e <Fast_Mode+0x49e>
 800532a:	4b6f      	ldr	r3, [pc, #444]	; (80054e8 <Fast_Mode+0x648>)
 800532c:	edd3 7a00 	vldr	s15, [r3]
 8005330:	ed9f 7a6f 	vldr	s14, [pc, #444]	; 80054f0 <Fast_Mode+0x650>
 8005334:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005338:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800533c:	d568      	bpl.n	8005410 <Fast_Mode+0x570>
		{
			if(v<2200) //kanyar
 800533e:	4b6a      	ldr	r3, [pc, #424]	; (80054e8 <Fast_Mode+0x648>)
 8005340:	edd3 7a00 	vldr	s15, [r3]
 8005344:	ed9f 7a6b 	vldr	s14, [pc, #428]	; 80054f4 <Fast_Mode+0x654>
 8005348:	eef4 7ac7 	vcmpe.f32	s15, s14
 800534c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005350:	d50a      	bpl.n	8005368 <Fast_Mode+0x4c8>
			{
				k_p = -0.0026;//-L/(v*v)*S1MULTS2_SLOW;
 8005352:	4b61      	ldr	r3, [pc, #388]	; (80054d8 <Fast_Mode+0x638>)
 8005354:	4a68      	ldr	r2, [pc, #416]	; (80054f8 <Fast_Mode+0x658>)
 8005356:	601a      	str	r2, [r3, #0]
				k_delta = 0;//L/v*(S1ADDS2_SLOW-v*k_p);
 8005358:	4b62      	ldr	r3, [pc, #392]	; (80054e4 <Fast_Mode+0x644>)
 800535a:	f04f 0200 	mov.w	r2, #0
 800535e:	601a      	str	r2, [r3, #0]
				kD=-0.06;//-0.06
 8005360:	4b5f      	ldr	r3, [pc, #380]	; (80054e0 <Fast_Mode+0x640>)
 8005362:	4a66      	ldr	r2, [pc, #408]	; (80054fc <Fast_Mode+0x65c>)
 8005364:	601a      	str	r2, [r3, #0]
			if(v<2200) //kanyar
 8005366:	e05c      	b.n	8005422 <Fast_Mode+0x582>
			}
			else //egyenes
			{
				k_p = -L*S1MULTS2_FAST/(v*v);
 8005368:	4b5f      	ldr	r3, [pc, #380]	; (80054e8 <Fast_Mode+0x648>)
 800536a:	ed93 7a00 	vldr	s14, [r3]
 800536e:	4b5e      	ldr	r3, [pc, #376]	; (80054e8 <Fast_Mode+0x648>)
 8005370:	edd3 7a00 	vldr	s15, [r3]
 8005374:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005378:	ee17 0a90 	vmov	r0, s15
 800537c:	f7fb f904 	bl	8000588 <__aeabi_f2d>
 8005380:	4602      	mov	r2, r0
 8005382:	460b      	mov	r3, r1
 8005384:	a142      	add	r1, pc, #264	; (adr r1, 8005490 <Fast_Mode+0x5f0>)
 8005386:	e9d1 0100 	ldrd	r0, r1, [r1]
 800538a:	f7fb fa7f 	bl	800088c <__aeabi_ddiv>
 800538e:	4602      	mov	r2, r0
 8005390:	460b      	mov	r3, r1
 8005392:	4610      	mov	r0, r2
 8005394:	4619      	mov	r1, r3
 8005396:	f7fb fc27 	bl	8000be8 <__aeabi_d2f>
 800539a:	4603      	mov	r3, r0
 800539c:	4a4e      	ldr	r2, [pc, #312]	; (80054d8 <Fast_Mode+0x638>)
 800539e:	6013      	str	r3, [r2, #0]
				k_delta = L*(S1ADDS2_FAST-v*k_p)/v;
 80053a0:	4b51      	ldr	r3, [pc, #324]	; (80054e8 <Fast_Mode+0x648>)
 80053a2:	ed93 7a00 	vldr	s14, [r3]
 80053a6:	4b4c      	ldr	r3, [pc, #304]	; (80054d8 <Fast_Mode+0x638>)
 80053a8:	edd3 7a00 	vldr	s15, [r3]
 80053ac:	ee67 7a27 	vmul.f32	s15, s14, s15
 80053b0:	ee17 0a90 	vmov	r0, s15
 80053b4:	f7fb f8e8 	bl	8000588 <__aeabi_f2d>
 80053b8:	4602      	mov	r2, r0
 80053ba:	460b      	mov	r3, r1
 80053bc:	a136      	add	r1, pc, #216	; (adr r1, 8005498 <Fast_Mode+0x5f8>)
 80053be:	e9d1 0100 	ldrd	r0, r1, [r1]
 80053c2:	f7fa ff81 	bl	80002c8 <__aeabi_dsub>
 80053c6:	4602      	mov	r2, r0
 80053c8:	460b      	mov	r3, r1
 80053ca:	4610      	mov	r0, r2
 80053cc:	4619      	mov	r1, r3
 80053ce:	a334      	add	r3, pc, #208	; (adr r3, 80054a0 <Fast_Mode+0x600>)
 80053d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80053d4:	f7fb f930 	bl	8000638 <__aeabi_dmul>
 80053d8:	4602      	mov	r2, r0
 80053da:	460b      	mov	r3, r1
 80053dc:	4614      	mov	r4, r2
 80053de:	461d      	mov	r5, r3
 80053e0:	4b41      	ldr	r3, [pc, #260]	; (80054e8 <Fast_Mode+0x648>)
 80053e2:	681b      	ldr	r3, [r3, #0]
 80053e4:	4618      	mov	r0, r3
 80053e6:	f7fb f8cf 	bl	8000588 <__aeabi_f2d>
 80053ea:	4602      	mov	r2, r0
 80053ec:	460b      	mov	r3, r1
 80053ee:	4620      	mov	r0, r4
 80053f0:	4629      	mov	r1, r5
 80053f2:	f7fb fa4b 	bl	800088c <__aeabi_ddiv>
 80053f6:	4602      	mov	r2, r0
 80053f8:	460b      	mov	r3, r1
 80053fa:	4610      	mov	r0, r2
 80053fc:	4619      	mov	r1, r3
 80053fe:	f7fb fbf3 	bl	8000be8 <__aeabi_d2f>
 8005402:	4603      	mov	r3, r0
 8005404:	4a37      	ldr	r2, [pc, #220]	; (80054e4 <Fast_Mode+0x644>)
 8005406:	6013      	str	r3, [r2, #0]
				kD=-0.05;
 8005408:	4b35      	ldr	r3, [pc, #212]	; (80054e0 <Fast_Mode+0x640>)
 800540a:	4a3d      	ldr	r2, [pc, #244]	; (8005500 <Fast_Mode+0x660>)
 800540c:	601a      	str	r2, [r3, #0]
			if(v<2200) //kanyar
 800540e:	e008      	b.n	8005422 <Fast_Mode+0x582>
			}
		}
		else
		{
			k_p=K_P_200;
 8005410:	4b31      	ldr	r3, [pc, #196]	; (80054d8 <Fast_Mode+0x638>)
 8005412:	4a3c      	ldr	r2, [pc, #240]	; (8005504 <Fast_Mode+0x664>)
 8005414:	601a      	str	r2, [r3, #0]
			k_delta=K_DELTA_200;
 8005416:	4b33      	ldr	r3, [pc, #204]	; (80054e4 <Fast_Mode+0x644>)
 8005418:	4a3b      	ldr	r2, [pc, #236]	; (8005508 <Fast_Mode+0x668>)
 800541a:	601a      	str	r2, [r3, #0]
			kD=-0.06;
 800541c:	4b30      	ldr	r3, [pc, #192]	; (80054e0 <Fast_Mode+0x640>)
 800541e:	4a37      	ldr	r2, [pc, #220]	; (80054fc <Fast_Mode+0x65c>)
 8005420:	601a      	str	r2, [r3, #0]
		}
	}
	gamma = -k_p * x_elso -k_delta * delta - kD * (x_elso-x_elso_prev);
 8005422:	4b2d      	ldr	r3, [pc, #180]	; (80054d8 <Fast_Mode+0x638>)
 8005424:	edd3 7a00 	vldr	s15, [r3]
 8005428:	eeb1 7a67 	vneg.f32	s14, s15
 800542c:	4b26      	ldr	r3, [pc, #152]	; (80054c8 <Fast_Mode+0x628>)
 800542e:	edd3 7a00 	vldr	s15, [r3]
 8005432:	ee27 7a27 	vmul.f32	s14, s14, s15
 8005436:	4b2b      	ldr	r3, [pc, #172]	; (80054e4 <Fast_Mode+0x644>)
 8005438:	edd3 6a00 	vldr	s13, [r3]
 800543c:	4b25      	ldr	r3, [pc, #148]	; (80054d4 <Fast_Mode+0x634>)
 800543e:	edd3 7a00 	vldr	s15, [r3]
 8005442:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8005446:	ee37 7a67 	vsub.f32	s14, s14, s15
 800544a:	4b1f      	ldr	r3, [pc, #124]	; (80054c8 <Fast_Mode+0x628>)
 800544c:	edd3 6a00 	vldr	s13, [r3]
 8005450:	4b2e      	ldr	r3, [pc, #184]	; (800550c <Fast_Mode+0x66c>)
 8005452:	edd3 7a00 	vldr	s15, [r3]
 8005456:	ee76 6ae7 	vsub.f32	s13, s13, s15
 800545a:	4b21      	ldr	r3, [pc, #132]	; (80054e0 <Fast_Mode+0x640>)
 800545c:	edd3 7a00 	vldr	s15, [r3]
 8005460:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8005464:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005468:	4b29      	ldr	r3, [pc, #164]	; (8005510 <Fast_Mode+0x670>)
 800546a:	edc3 7a00 	vstr	s15, [r3]
	x_elso_prev = x_elso;
 800546e:	4b16      	ldr	r3, [pc, #88]	; (80054c8 <Fast_Mode+0x628>)
 8005470:	681b      	ldr	r3, [r3, #0]
 8005472:	4a26      	ldr	r2, [pc, #152]	; (800550c <Fast_Mode+0x66c>)
 8005474:	6013      	str	r3, [r2, #0]

	*state_pointer=state;
 8005476:	68bb      	ldr	r3, [r7, #8]
 8005478:	7ffa      	ldrb	r2, [r7, #31]
 800547a:	701a      	strb	r2, [r3, #0]
	return gamma;
 800547c:	4b24      	ldr	r3, [pc, #144]	; (8005510 <Fast_Mode+0x670>)
 800547e:	681b      	ldr	r3, [r3, #0]
}
 8005480:	ee07 3a90 	vmov	s15, r3
 8005484:	eeb0 0a67 	vmov.f32	s0, s15
 8005488:	3720      	adds	r7, #32
 800548a:	46bd      	mov	sp, r7
 800548c:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8005490:	b22d0e56 	.word	0xb22d0e56
 8005494:	c0b75f1d 	.word	0xc0b75f1d
 8005498:	8f5c28f6 	.word	0x8f5c28f6
 800549c:	c02275c2 	.word	0xc02275c2
 80054a0:	00000000 	.word	0x00000000
 80054a4:	40716000 	.word	0x40716000
 80054a8:	200007a4 	.word	0x200007a4
 80054ac:	200007a8 	.word	0x200007a8
 80054b0:	20000774 	.word	0x20000774
 80054b4:	20000338 	.word	0x20000338
 80054b8:	44bb8000 	.word	0x44bb8000
 80054bc:	434c0000 	.word	0x434c0000
 80054c0:	406f0000 	.word	0x406f0000
 80054c4:	40598000 	.word	0x40598000
 80054c8:	200007ac 	.word	0x200007ac
 80054cc:	200007b0 	.word	0x200007b0
 80054d0:	407c4000 	.word	0x407c4000
 80054d4:	200007b4 	.word	0x200007b4
 80054d8:	20000100 	.word	0x20000100
 80054dc:	bb83126f 	.word	0xbb83126f
 80054e0:	20000104 	.word	0x20000104
 80054e4:	20000108 	.word	0x20000108
 80054e8:	20000754 	.word	0x20000754
 80054ec:	43160000 	.word	0x43160000
 80054f0:	c3160000 	.word	0xc3160000
 80054f4:	45098000 	.word	0x45098000
 80054f8:	bb2a64c3 	.word	0xbb2a64c3
 80054fc:	bd75c28f 	.word	0xbd75c28f
 8005500:	bd4ccccd 	.word	0xbd4ccccd
 8005504:	ba30dc42 	.word	0xba30dc42
 8005508:	bf21eadf 	.word	0xbf21eadf
 800550c:	200007b8 	.word	0x200007b8
 8005510:	200007bc 	.word	0x200007bc

08005514 <Skill_Mode>:

float Skill_Mode(UART_HandleTypeDef *huart_debugg, float kP, float kD, uint32_t t)
{
 8005514:	b580      	push	{r7, lr}
 8005516:	b088      	sub	sp, #32
 8005518:	af00      	add	r7, sp, #0
 800551a:	60f8      	str	r0, [r7, #12]
 800551c:	ed87 0a02 	vstr	s0, [r7, #8]
 8005520:	edc7 0a01 	vstr	s1, [r7, #4]
 8005524:	6039      	str	r1, [r7, #0]
	static uint32_t t_prev=0;
	int byte=0;
 8005526:	2300      	movs	r3, #0
 8005528:	61fb      	str	r3, [r7, #28]
	static int byte_prev=0;
	int delta_byte;
	float p=0;
 800552a:	f04f 0300 	mov.w	r3, #0
 800552e:	617b      	str	r3, [r7, #20]
/*	uint8_t str[40];
	sprintf(str,"%d,  %d,  %d,  %d,  %d\n\r",rxBuf[1],rxBuf[2],rxBuf[3],rxBuf[4],rxBuf[5]);
	HAL_UART_Transmit(huart_debugg, str, strlen(str), 10);
*/

	if(LINE_CNT>3 || ignore)//ha éppen node-on vagyunk, akkor az átlagot követjük
 8005530:	4b85      	ldr	r3, [pc, #532]	; (8005748 <Skill_Mode+0x234>)
 8005532:	785b      	ldrb	r3, [r3, #1]
 8005534:	2b03      	cmp	r3, #3
 8005536:	d803      	bhi.n	8005540 <Skill_Mode+0x2c>
 8005538:	4b84      	ldr	r3, [pc, #528]	; (800574c <Skill_Mode+0x238>)
 800553a:	781b      	ldrb	r3, [r3, #0]
 800553c:	2b00      	cmp	r3, #0
 800553e:	d022      	beq.n	8005586 <Skill_Mode+0x72>
	{
		byte=0;
 8005540:	2300      	movs	r3, #0
 8005542:	61fb      	str	r3, [r7, #28]
		for(i=0;i<LINE_CNT;i++)
 8005544:	2300      	movs	r3, #0
 8005546:	61bb      	str	r3, [r7, #24]
 8005548:	e00a      	b.n	8005560 <Skill_Mode+0x4c>
		{
			byte += rxBuf[i+2];
 800554a:	69bb      	ldr	r3, [r7, #24]
 800554c:	3302      	adds	r3, #2
 800554e:	4a7e      	ldr	r2, [pc, #504]	; (8005748 <Skill_Mode+0x234>)
 8005550:	5cd3      	ldrb	r3, [r2, r3]
 8005552:	461a      	mov	r2, r3
 8005554:	69fb      	ldr	r3, [r7, #28]
 8005556:	4413      	add	r3, r2
 8005558:	61fb      	str	r3, [r7, #28]
		for(i=0;i<LINE_CNT;i++)
 800555a:	69bb      	ldr	r3, [r7, #24]
 800555c:	3301      	adds	r3, #1
 800555e:	61bb      	str	r3, [r7, #24]
 8005560:	4b79      	ldr	r3, [pc, #484]	; (8005748 <Skill_Mode+0x234>)
 8005562:	785b      	ldrb	r3, [r3, #1]
 8005564:	461a      	mov	r2, r3
 8005566:	69bb      	ldr	r3, [r7, #24]
 8005568:	4293      	cmp	r3, r2
 800556a:	dbee      	blt.n	800554a <Skill_Mode+0x36>
		}

		if(LINE_CNT) byte /= LINE_CNT;
 800556c:	4b76      	ldr	r3, [pc, #472]	; (8005748 <Skill_Mode+0x234>)
 800556e:	785b      	ldrb	r3, [r3, #1]
 8005570:	2b00      	cmp	r3, #0
 8005572:	f000 8097 	beq.w	80056a4 <Skill_Mode+0x190>
 8005576:	4b74      	ldr	r3, [pc, #464]	; (8005748 <Skill_Mode+0x234>)
 8005578:	785b      	ldrb	r3, [r3, #1]
 800557a:	461a      	mov	r2, r3
 800557c:	69fb      	ldr	r3, [r7, #28]
 800557e:	fb93 f3f2 	sdiv	r3, r3, r2
 8005582:	61fb      	str	r3, [r7, #28]
 8005584:	e08e      	b.n	80056a4 <Skill_Mode+0x190>
	}
	else if((path==LEFT && orientation==FORWARD) || (path==RIGHT && orientation==REVERSE))
 8005586:	4b72      	ldr	r3, [pc, #456]	; (8005750 <Skill_Mode+0x23c>)
 8005588:	781b      	ldrb	r3, [r3, #0]
 800558a:	2b00      	cmp	r3, #0
 800558c:	d103      	bne.n	8005596 <Skill_Mode+0x82>
 800558e:	4b71      	ldr	r3, [pc, #452]	; (8005754 <Skill_Mode+0x240>)
 8005590:	781b      	ldrb	r3, [r3, #0]
 8005592:	2b00      	cmp	r3, #0
 8005594:	d007      	beq.n	80055a6 <Skill_Mode+0x92>
 8005596:	4b6e      	ldr	r3, [pc, #440]	; (8005750 <Skill_Mode+0x23c>)
 8005598:	781b      	ldrb	r3, [r3, #0]
 800559a:	2b02      	cmp	r3, #2
 800559c:	d10f      	bne.n	80055be <Skill_Mode+0xaa>
 800559e:	4b6d      	ldr	r3, [pc, #436]	; (8005754 <Skill_Mode+0x240>)
 80055a0:	781b      	ldrb	r3, [r3, #0]
 80055a2:	2b01      	cmp	r3, #1
 80055a4:	d10b      	bne.n	80055be <Skill_Mode+0xaa>
	{
		byte = LINE1; //az első vonalt kell követni
 80055a6:	4b68      	ldr	r3, [pc, #416]	; (8005748 <Skill_Mode+0x234>)
 80055a8:	789b      	ldrb	r3, [r3, #2]
 80055aa:	61fb      	str	r3, [r7, #28]
		delta_byte=abs((int)byte-byte_prev);
 80055ac:	4b6a      	ldr	r3, [pc, #424]	; (8005758 <Skill_Mode+0x244>)
 80055ae:	681b      	ldr	r3, [r3, #0]
 80055b0:	69fa      	ldr	r2, [r7, #28]
 80055b2:	1ad3      	subs	r3, r2, r3
 80055b4:	2b00      	cmp	r3, #0
 80055b6:	bfb8      	it	lt
 80055b8:	425b      	neglt	r3, r3
 80055ba:	613b      	str	r3, [r7, #16]
 80055bc:	e072      	b.n	80056a4 <Skill_Mode+0x190>
			estuary=ESTUARY_MODE_OFF;
			LED_G(0);
		}
*/
	}
	else if((path==RIGHT && orientation==FORWARD) || (path==LEFT && orientation==REVERSE))
 80055be:	4b64      	ldr	r3, [pc, #400]	; (8005750 <Skill_Mode+0x23c>)
 80055c0:	781b      	ldrb	r3, [r3, #0]
 80055c2:	2b02      	cmp	r3, #2
 80055c4:	d103      	bne.n	80055ce <Skill_Mode+0xba>
 80055c6:	4b63      	ldr	r3, [pc, #396]	; (8005754 <Skill_Mode+0x240>)
 80055c8:	781b      	ldrb	r3, [r3, #0]
 80055ca:	2b00      	cmp	r3, #0
 80055cc:	d007      	beq.n	80055de <Skill_Mode+0xca>
 80055ce:	4b60      	ldr	r3, [pc, #384]	; (8005750 <Skill_Mode+0x23c>)
 80055d0:	781b      	ldrb	r3, [r3, #0]
 80055d2:	2b00      	cmp	r3, #0
 80055d4:	d112      	bne.n	80055fc <Skill_Mode+0xe8>
 80055d6:	4b5f      	ldr	r3, [pc, #380]	; (8005754 <Skill_Mode+0x240>)
 80055d8:	781b      	ldrb	r3, [r3, #0]
 80055da:	2b01      	cmp	r3, #1
 80055dc:	d10e      	bne.n	80055fc <Skill_Mode+0xe8>
	{
		byte = rxBuf[1+LINE_CNT];//az utolsó vonalat kell követni
 80055de:	4b5a      	ldr	r3, [pc, #360]	; (8005748 <Skill_Mode+0x234>)
 80055e0:	785b      	ldrb	r3, [r3, #1]
 80055e2:	3301      	adds	r3, #1
 80055e4:	4a58      	ldr	r2, [pc, #352]	; (8005748 <Skill_Mode+0x234>)
 80055e6:	5cd3      	ldrb	r3, [r2, r3]
 80055e8:	61fb      	str	r3, [r7, #28]
		delta_byte=abs((int)byte-byte_prev);
 80055ea:	4b5b      	ldr	r3, [pc, #364]	; (8005758 <Skill_Mode+0x244>)
 80055ec:	681b      	ldr	r3, [r3, #0]
 80055ee:	69fa      	ldr	r2, [r7, #28]
 80055f0:	1ad3      	subs	r3, r2, r3
 80055f2:	2b00      	cmp	r3, #0
 80055f4:	bfb8      	it	lt
 80055f6:	425b      	neglt	r3, r3
 80055f8:	613b      	str	r3, [r7, #16]
 80055fa:	e053      	b.n	80056a4 <Skill_Mode+0x190>
			estuary=ESTUARY_MODE_OFF;
			LED_G(0);
		}*/
	}

	else if(path==MIDDLE)
 80055fc:	4b54      	ldr	r3, [pc, #336]	; (8005750 <Skill_Mode+0x23c>)
 80055fe:	781b      	ldrb	r3, [r3, #0]
 8005600:	2b01      	cmp	r3, #1
 8005602:	d14f      	bne.n	80056a4 <Skill_Mode+0x190>
	{
		if(LINE_CNT==1)
 8005604:	4b50      	ldr	r3, [pc, #320]	; (8005748 <Skill_Mode+0x234>)
 8005606:	785b      	ldrb	r3, [r3, #1]
 8005608:	2b01      	cmp	r3, #1
 800560a:	d10b      	bne.n	8005624 <Skill_Mode+0x110>
		{
			byte = byte_middle = LINE1;//ha csak 1 vonal van, akkor azt követjük
 800560c:	4b4e      	ldr	r3, [pc, #312]	; (8005748 <Skill_Mode+0x234>)
 800560e:	789b      	ldrb	r3, [r3, #2]
 8005610:	461a      	mov	r2, r3
 8005612:	4b52      	ldr	r3, [pc, #328]	; (800575c <Skill_Mode+0x248>)
 8005614:	601a      	str	r2, [r3, #0]
 8005616:	4b51      	ldr	r3, [pc, #324]	; (800575c <Skill_Mode+0x248>)
 8005618:	681b      	ldr	r3, [r3, #0]
 800561a:	61fb      	str	r3, [r7, #28]
			middleLineState=1;
 800561c:	4b50      	ldr	r3, [pc, #320]	; (8005760 <Skill_Mode+0x24c>)
 800561e:	2201      	movs	r2, #1
 8005620:	701a      	strb	r2, [r3, #0]
 8005622:	e03f      	b.n	80056a4 <Skill_Mode+0x190>
		}
		else if(LINE_CNT==3)//ha 3 vonal van
 8005624:	4b48      	ldr	r3, [pc, #288]	; (8005748 <Skill_Mode+0x234>)
 8005626:	785b      	ldrb	r3, [r3, #1]
 8005628:	2b03      	cmp	r3, #3
 800562a:	d10b      	bne.n	8005644 <Skill_Mode+0x130>
		{
			byte = byte_middle = LINE2;//a középsőt követjük
 800562c:	4b46      	ldr	r3, [pc, #280]	; (8005748 <Skill_Mode+0x234>)
 800562e:	78db      	ldrb	r3, [r3, #3]
 8005630:	461a      	mov	r2, r3
 8005632:	4b4a      	ldr	r3, [pc, #296]	; (800575c <Skill_Mode+0x248>)
 8005634:	601a      	str	r2, [r3, #0]
 8005636:	4b49      	ldr	r3, [pc, #292]	; (800575c <Skill_Mode+0x248>)
 8005638:	681b      	ldr	r3, [r3, #0]
 800563a:	61fb      	str	r3, [r7, #28]
			//folyamatosan nézzük, hogy az 1. és 3.vonal milyen messze van a vonalszenor középontjától
			middleLineState=1;
 800563c:	4b48      	ldr	r3, [pc, #288]	; (8005760 <Skill_Mode+0x24c>)
 800563e:	2201      	movs	r2, #1
 8005640:	701a      	strb	r2, [r3, #0]
 8005642:	e02f      	b.n	80056a4 <Skill_Mode+0x190>
		}
		else if(LINE_CNT==2)//ha 2 vonal van, az azt jelenti, hogy az elágazás már annyira szétgáazott, hogy csak 2-t látunk a 3 vonalból
 8005644:	4b40      	ldr	r3, [pc, #256]	; (8005748 <Skill_Mode+0x234>)
 8005646:	785b      	ldrb	r3, [r3, #1]
 8005648:	2b02      	cmp	r3, #2
 800564a:	d12b      	bne.n	80056a4 <Skill_Mode+0x190>
		{
			if(middleLineState==1)
 800564c:	4b44      	ldr	r3, [pc, #272]	; (8005760 <Skill_Mode+0x24c>)
 800564e:	781b      	ldrb	r3, [r3, #0]
 8005650:	2b01      	cmp	r3, #1
 8005652:	d116      	bne.n	8005682 <Skill_Mode+0x16e>
			{
				tmp1=abs(byte_middle-LINE1);
 8005654:	4b41      	ldr	r3, [pc, #260]	; (800575c <Skill_Mode+0x248>)
 8005656:	681b      	ldr	r3, [r3, #0]
 8005658:	4a3b      	ldr	r2, [pc, #236]	; (8005748 <Skill_Mode+0x234>)
 800565a:	7892      	ldrb	r2, [r2, #2]
 800565c:	1a9b      	subs	r3, r3, r2
 800565e:	2b00      	cmp	r3, #0
 8005660:	bfb8      	it	lt
 8005662:	425b      	neglt	r3, r3
 8005664:	4a3f      	ldr	r2, [pc, #252]	; (8005764 <Skill_Mode+0x250>)
 8005666:	6013      	str	r3, [r2, #0]
				tmp2=abs(byte_middle-LINE2);
 8005668:	4b3c      	ldr	r3, [pc, #240]	; (800575c <Skill_Mode+0x248>)
 800566a:	681b      	ldr	r3, [r3, #0]
 800566c:	4a36      	ldr	r2, [pc, #216]	; (8005748 <Skill_Mode+0x234>)
 800566e:	78d2      	ldrb	r2, [r2, #3]
 8005670:	1a9b      	subs	r3, r3, r2
 8005672:	2b00      	cmp	r3, #0
 8005674:	bfb8      	it	lt
 8005676:	425b      	neglt	r3, r3
 8005678:	4a3b      	ldr	r2, [pc, #236]	; (8005768 <Skill_Mode+0x254>)
 800567a:	6013      	str	r3, [r2, #0]
				middleLineState=2;
 800567c:	4b38      	ldr	r3, [pc, #224]	; (8005760 <Skill_Mode+0x24c>)
 800567e:	2202      	movs	r2, #2
 8005680:	701a      	strb	r2, [r3, #0]
			}
			if(middleLineState==2)
 8005682:	4b37      	ldr	r3, [pc, #220]	; (8005760 <Skill_Mode+0x24c>)
 8005684:	781b      	ldrb	r3, [r3, #0]
 8005686:	2b02      	cmp	r3, #2
 8005688:	d10c      	bne.n	80056a4 <Skill_Mode+0x190>
			{
				if(tmp1<tmp2) byte = LINE1; //ha a jobboldali vonalat veszítettük el
 800568a:	4b36      	ldr	r3, [pc, #216]	; (8005764 <Skill_Mode+0x250>)
 800568c:	681a      	ldr	r2, [r3, #0]
 800568e:	4b36      	ldr	r3, [pc, #216]	; (8005768 <Skill_Mode+0x254>)
 8005690:	681b      	ldr	r3, [r3, #0]
 8005692:	429a      	cmp	r2, r3
 8005694:	da03      	bge.n	800569e <Skill_Mode+0x18a>
 8005696:	4b2c      	ldr	r3, [pc, #176]	; (8005748 <Skill_Mode+0x234>)
 8005698:	789b      	ldrb	r3, [r3, #2]
 800569a:	61fb      	str	r3, [r7, #28]
 800569c:	e002      	b.n	80056a4 <Skill_Mode+0x190>
				else byte = LINE2; //ha a baloldali vonalat veszítettük el
 800569e:	4b2a      	ldr	r3, [pc, #168]	; (8005748 <Skill_Mode+0x234>)
 80056a0:	78db      	ldrb	r3, [r3, #3]
 80056a2:	61fb      	str	r3, [r7, #28]
			}
		}
	}
	if(estuary==ESTUARY_MODE_INIT)estuary=ESTUARY_MODE_OFF;
 80056a4:	4b31      	ldr	r3, [pc, #196]	; (800576c <Skill_Mode+0x258>)
 80056a6:	781b      	ldrb	r3, [r3, #0]
 80056a8:	2b00      	cmp	r3, #0
 80056aa:	d102      	bne.n	80056b2 <Skill_Mode+0x19e>
 80056ac:	4b2f      	ldr	r3, [pc, #188]	; (800576c <Skill_Mode+0x258>)
 80056ae:	2201      	movs	r2, #1
 80056b0:	701a      	strb	r2, [r3, #0]
	//p = (float)byte * 204/248.0-102;
	p = (float)byte * 204/248.0-102;
 80056b2:	69fb      	ldr	r3, [r7, #28]
 80056b4:	ee07 3a90 	vmov	s15, r3
 80056b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80056bc:	ed9f 7a2c 	vldr	s14, [pc, #176]	; 8005770 <Skill_Mode+0x25c>
 80056c0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80056c4:	ee17 0a90 	vmov	r0, s15
 80056c8:	f7fa ff5e 	bl	8000588 <__aeabi_f2d>
 80056cc:	f04f 0200 	mov.w	r2, #0
 80056d0:	4b28      	ldr	r3, [pc, #160]	; (8005774 <Skill_Mode+0x260>)
 80056d2:	f7fb f8db 	bl	800088c <__aeabi_ddiv>
 80056d6:	4602      	mov	r2, r0
 80056d8:	460b      	mov	r3, r1
 80056da:	4610      	mov	r0, r2
 80056dc:	4619      	mov	r1, r3
 80056de:	f04f 0200 	mov.w	r2, #0
 80056e2:	4b25      	ldr	r3, [pc, #148]	; (8005778 <Skill_Mode+0x264>)
 80056e4:	f7fa fdf0 	bl	80002c8 <__aeabi_dsub>
 80056e8:	4602      	mov	r2, r0
 80056ea:	460b      	mov	r3, r1
 80056ec:	4610      	mov	r0, r2
 80056ee:	4619      	mov	r1, r3
 80056f0:	f7fb fa7a 	bl	8000be8 <__aeabi_d2f>
 80056f4:	4603      	mov	r3, r0
 80056f6:	617b      	str	r3, [r7, #20]
	gamma = -kP * p  - kD*(p-p_prev);
 80056f8:	edd7 7a02 	vldr	s15, [r7, #8]
 80056fc:	eeb1 7a67 	vneg.f32	s14, s15
 8005700:	edd7 7a05 	vldr	s15, [r7, #20]
 8005704:	ee27 7a27 	vmul.f32	s14, s14, s15
 8005708:	4b1c      	ldr	r3, [pc, #112]	; (800577c <Skill_Mode+0x268>)
 800570a:	edd3 7a00 	vldr	s15, [r3]
 800570e:	edd7 6a05 	vldr	s13, [r7, #20]
 8005712:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8005716:	edd7 7a01 	vldr	s15, [r7, #4]
 800571a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800571e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005722:	4b17      	ldr	r3, [pc, #92]	; (8005780 <Skill_Mode+0x26c>)
 8005724:	edc3 7a00 	vstr	s15, [r3]
	p_prev = p;
 8005728:	4a14      	ldr	r2, [pc, #80]	; (800577c <Skill_Mode+0x268>)
 800572a:	697b      	ldr	r3, [r7, #20]
 800572c:	6013      	str	r3, [r2, #0]
	byte_prev=byte;
 800572e:	4a0a      	ldr	r2, [pc, #40]	; (8005758 <Skill_Mode+0x244>)
 8005730:	69fb      	ldr	r3, [r7, #28]
 8005732:	6013      	str	r3, [r2, #0]

	return gamma;
 8005734:	4b12      	ldr	r3, [pc, #72]	; (8005780 <Skill_Mode+0x26c>)
 8005736:	681b      	ldr	r3, [r3, #0]
 8005738:	ee07 3a90 	vmov	s15, r3
}
 800573c:	eeb0 0a67 	vmov.f32	s0, s15
 8005740:	3720      	adds	r7, #32
 8005742:	46bd      	mov	sp, r7
 8005744:	bd80      	pop	{r7, pc}
 8005746:	bf00      	nop
 8005748:	20000774 	.word	0x20000774
 800574c:	2000077e 	.word	0x2000077e
 8005750:	20000346 	.word	0x20000346
 8005754:	20000344 	.word	0x20000344
 8005758:	200007c0 	.word	0x200007c0
 800575c:	200007c4 	.word	0x200007c4
 8005760:	2000010c 	.word	0x2000010c
 8005764:	200007c8 	.word	0x200007c8
 8005768:	200007cc 	.word	0x200007cc
 800576c:	200007d0 	.word	0x200007d0
 8005770:	434c0000 	.word	0x434c0000
 8005774:	406f0000 	.word	0x406f0000
 8005778:	40598000 	.word	0x40598000
 800577c:	200007d4 	.word	0x200007d4
 8005780:	200007d8 	.word	0x200007d8

08005784 <Detect_Node4>:
		ignore=0;
	}
}

void Detect_Node4(UART_HandleTypeDef *huart_debugg, uint32_t t)
{
 8005784:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8005788:	b082      	sub	sp, #8
 800578a:	af00      	add	r7, sp, #0
 800578c:	6078      	str	r0, [r7, #4]
 800578e:	6039      	str	r1, [r7, #0]
	static uint32_t t_prev=0;
	static uint32_t t_stamp=0;
	static uint8_t detect_node_state=0;
	static float s=0;

	if(LINE_CNT==4 && !detect_node_state)
 8005790:	4b3c      	ldr	r3, [pc, #240]	; (8005884 <Detect_Node4+0x100>)
 8005792:	785b      	ldrb	r3, [r3, #1]
 8005794:	2b04      	cmp	r3, #4
 8005796:	d111      	bne.n	80057bc <Detect_Node4+0x38>
 8005798:	4b3b      	ldr	r3, [pc, #236]	; (8005888 <Detect_Node4+0x104>)
 800579a:	781b      	ldrb	r3, [r3, #0]
 800579c:	2b00      	cmp	r3, #0
 800579e:	d10d      	bne.n	80057bc <Detect_Node4+0x38>
	{
		s=0;
 80057a0:	4b3a      	ldr	r3, [pc, #232]	; (800588c <Detect_Node4+0x108>)
 80057a2:	f04f 0200 	mov.w	r2, #0
 80057a6:	601a      	str	r2, [r3, #0]
		detect_node_state=1;//innentől mérünk
 80057a8:	4b37      	ldr	r3, [pc, #220]	; (8005888 <Detect_Node4+0x104>)
 80057aa:	2201      	movs	r2, #1
 80057ac:	701a      	strb	r2, [r3, #0]
		ignore=1;
 80057ae:	4b38      	ldr	r3, [pc, #224]	; (8005890 <Detect_Node4+0x10c>)
 80057b0:	2201      	movs	r2, #1
 80057b2:	701a      	strb	r2, [r3, #0]
		t_stamp=t;
 80057b4:	4a37      	ldr	r2, [pc, #220]	; (8005894 <Detect_Node4+0x110>)
 80057b6:	683b      	ldr	r3, [r7, #0]
 80057b8:	6013      	str	r3, [r2, #0]
 80057ba:	e03e      	b.n	800583a <Detect_Node4+0xb6>

	}
	else if(LINE_CNT==4 && detect_node_state)
 80057bc:	4b31      	ldr	r3, [pc, #196]	; (8005884 <Detect_Node4+0x100>)
 80057be:	785b      	ldrb	r3, [r3, #1]
 80057c0:	2b04      	cmp	r3, #4
 80057c2:	d13a      	bne.n	800583a <Detect_Node4+0xb6>
 80057c4:	4b30      	ldr	r3, [pc, #192]	; (8005888 <Detect_Node4+0x104>)
 80057c6:	781b      	ldrb	r3, [r3, #0]
 80057c8:	2b00      	cmp	r3, #0
 80057ca:	d036      	beq.n	800583a <Detect_Node4+0xb6>
	{
		s+=fabs(v)*(t-t_prev)/1000;
 80057cc:	4b2f      	ldr	r3, [pc, #188]	; (800588c <Detect_Node4+0x108>)
 80057ce:	681b      	ldr	r3, [r3, #0]
 80057d0:	4618      	mov	r0, r3
 80057d2:	f7fa fed9 	bl	8000588 <__aeabi_f2d>
 80057d6:	4604      	mov	r4, r0
 80057d8:	460d      	mov	r5, r1
 80057da:	4b2f      	ldr	r3, [pc, #188]	; (8005898 <Detect_Node4+0x114>)
 80057dc:	edd3 7a00 	vldr	s15, [r3]
 80057e0:	eef0 7ae7 	vabs.f32	s15, s15
 80057e4:	ee17 0a90 	vmov	r0, s15
 80057e8:	f7fa fece 	bl	8000588 <__aeabi_f2d>
 80057ec:	4680      	mov	r8, r0
 80057ee:	4689      	mov	r9, r1
 80057f0:	4b2a      	ldr	r3, [pc, #168]	; (800589c <Detect_Node4+0x118>)
 80057f2:	681b      	ldr	r3, [r3, #0]
 80057f4:	683a      	ldr	r2, [r7, #0]
 80057f6:	1ad3      	subs	r3, r2, r3
 80057f8:	4618      	mov	r0, r3
 80057fa:	f7fa fea3 	bl	8000544 <__aeabi_ui2d>
 80057fe:	4602      	mov	r2, r0
 8005800:	460b      	mov	r3, r1
 8005802:	4640      	mov	r0, r8
 8005804:	4649      	mov	r1, r9
 8005806:	f7fa ff17 	bl	8000638 <__aeabi_dmul>
 800580a:	4602      	mov	r2, r0
 800580c:	460b      	mov	r3, r1
 800580e:	4610      	mov	r0, r2
 8005810:	4619      	mov	r1, r3
 8005812:	f04f 0200 	mov.w	r2, #0
 8005816:	4b22      	ldr	r3, [pc, #136]	; (80058a0 <Detect_Node4+0x11c>)
 8005818:	f7fb f838 	bl	800088c <__aeabi_ddiv>
 800581c:	4602      	mov	r2, r0
 800581e:	460b      	mov	r3, r1
 8005820:	4620      	mov	r0, r4
 8005822:	4629      	mov	r1, r5
 8005824:	f7fa fd52 	bl	80002cc <__adddf3>
 8005828:	4602      	mov	r2, r0
 800582a:	460b      	mov	r3, r1
 800582c:	4610      	mov	r0, r2
 800582e:	4619      	mov	r1, r3
 8005830:	f7fb f9da 	bl	8000be8 <__aeabi_d2f>
 8005834:	4603      	mov	r3, r0
 8005836:	4a15      	ldr	r2, [pc, #84]	; (800588c <Detect_Node4+0x108>)
 8005838:	6013      	str	r3, [r2, #0]
	}
	if((t-t_stamp)>160 && detect_node_state)
 800583a:	4b16      	ldr	r3, [pc, #88]	; (8005894 <Detect_Node4+0x110>)
 800583c:	681b      	ldr	r3, [r3, #0]
 800583e:	683a      	ldr	r2, [r7, #0]
 8005840:	1ad3      	subs	r3, r2, r3
 8005842:	2ba0      	cmp	r3, #160	; 0xa0
 8005844:	d916      	bls.n	8005874 <Detect_Node4+0xf0>
 8005846:	4b10      	ldr	r3, [pc, #64]	; (8005888 <Detect_Node4+0x104>)
 8005848:	781b      	ldrb	r3, [r3, #0]
 800584a:	2b00      	cmp	r3, #0
 800584c:	d012      	beq.n	8005874 <Detect_Node4+0xf0>
	{
		detect_node_state=0;
 800584e:	4b0e      	ldr	r3, [pc, #56]	; (8005888 <Detect_Node4+0x104>)
 8005850:	2200      	movs	r2, #0
 8005852:	701a      	strb	r2, [r3, #0]
		ignore=0;
 8005854:	4b0e      	ldr	r3, [pc, #56]	; (8005890 <Detect_Node4+0x10c>)
 8005856:	2200      	movs	r2, #0
 8005858:	701a      	strb	r2, [r3, #0]
		if(s>50)//horizontal node
 800585a:	4b0c      	ldr	r3, [pc, #48]	; (800588c <Detect_Node4+0x108>)
 800585c:	edd3 7a00 	vldr	s15, [r3]
 8005860:	ed9f 7a10 	vldr	s14, [pc, #64]	; 80058a4 <Detect_Node4+0x120>
 8005864:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005868:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800586c:	dd02      	ble.n	8005874 <Detect_Node4+0xf0>
		{
			nodeDetected=1; //horizont node
 800586e:	4b0e      	ldr	r3, [pc, #56]	; (80058a8 <Detect_Node4+0x124>)
 8005870:	2201      	movs	r2, #1
 8005872:	701a      	strb	r2, [r3, #0]
			//LED_B_TOGGLE;
		}
	}
	t_prev=t;
 8005874:	4a09      	ldr	r2, [pc, #36]	; (800589c <Detect_Node4+0x118>)
 8005876:	683b      	ldr	r3, [r7, #0]
 8005878:	6013      	str	r3, [r2, #0]
}
 800587a:	bf00      	nop
 800587c:	3708      	adds	r7, #8
 800587e:	46bd      	mov	sp, r7
 8005880:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8005884:	20000774 	.word	0x20000774
 8005888:	200007dc 	.word	0x200007dc
 800588c:	200007e0 	.word	0x200007e0
 8005890:	2000077e 	.word	0x2000077e
 8005894:	200007e4 	.word	0x200007e4
 8005898:	20000754 	.word	0x20000754
 800589c:	200007e8 	.word	0x200007e8
 80058a0:	408f4000 	.word	0x408f4000
 80058a4:	42480000 	.word	0x42480000
 80058a8:	20000345 	.word	0x20000345

080058ac <Lane_Changer>:

uint8_t Lane_Changer(uint32_t t)
{
 80058ac:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 80058b0:	b084      	sub	sp, #16
 80058b2:	af00      	add	r7, sp, #0
 80058b4:	6078      	str	r0, [r7, #4]
	static uint8_t lineCnt_prev=1;
	static float s=0;
	static int i=0;
	static uint32_t dt[5]={1000,1000,1000,1000,1000};

	if(laneChange<2)return 0;
 80058b6:	4b79      	ldr	r3, [pc, #484]	; (8005a9c <Lane_Changer+0x1f0>)
 80058b8:	781b      	ldrb	r3, [r3, #0]
 80058ba:	2b01      	cmp	r3, #1
 80058bc:	d801      	bhi.n	80058c2 <Lane_Changer+0x16>
 80058be:	2300      	movs	r3, #0
 80058c0:	e0e6      	b.n	8005a90 <Lane_Changer+0x1e4>
	if(LINE_CNT != lineCnt_prev && (LINE_CNT==1 || LINE_CNT==2) && laneChange==2) //ha változik az alattunk lévő vonalak száma
 80058c2:	4b77      	ldr	r3, [pc, #476]	; (8005aa0 <Lane_Changer+0x1f4>)
 80058c4:	785a      	ldrb	r2, [r3, #1]
 80058c6:	4b77      	ldr	r3, [pc, #476]	; (8005aa4 <Lane_Changer+0x1f8>)
 80058c8:	781b      	ldrb	r3, [r3, #0]
 80058ca:	429a      	cmp	r2, r3
 80058cc:	d041      	beq.n	8005952 <Lane_Changer+0xa6>
 80058ce:	4b74      	ldr	r3, [pc, #464]	; (8005aa0 <Lane_Changer+0x1f4>)
 80058d0:	785b      	ldrb	r3, [r3, #1]
 80058d2:	2b01      	cmp	r3, #1
 80058d4:	d003      	beq.n	80058de <Lane_Changer+0x32>
 80058d6:	4b72      	ldr	r3, [pc, #456]	; (8005aa0 <Lane_Changer+0x1f4>)
 80058d8:	785b      	ldrb	r3, [r3, #1]
 80058da:	2b02      	cmp	r3, #2
 80058dc:	d139      	bne.n	8005952 <Lane_Changer+0xa6>
 80058de:	4b6f      	ldr	r3, [pc, #444]	; (8005a9c <Lane_Changer+0x1f0>)
 80058e0:	781b      	ldrb	r3, [r3, #0]
 80058e2:	2b02      	cmp	r3, #2
 80058e4:	d135      	bne.n	8005952 <Lane_Changer+0xa6>
	{
		dt[i] = t - t_stamp;
 80058e6:	4b70      	ldr	r3, [pc, #448]	; (8005aa8 <Lane_Changer+0x1fc>)
 80058e8:	681a      	ldr	r2, [r3, #0]
 80058ea:	4b70      	ldr	r3, [pc, #448]	; (8005aac <Lane_Changer+0x200>)
 80058ec:	681b      	ldr	r3, [r3, #0]
 80058ee:	6879      	ldr	r1, [r7, #4]
 80058f0:	1a8a      	subs	r2, r1, r2
 80058f2:	496f      	ldr	r1, [pc, #444]	; (8005ab0 <Lane_Changer+0x204>)
 80058f4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		uint32_t sum=dt[0] + dt[1] + dt[2] + dt[3]+ dt[4];
 80058f8:	4b6d      	ldr	r3, [pc, #436]	; (8005ab0 <Lane_Changer+0x204>)
 80058fa:	681a      	ldr	r2, [r3, #0]
 80058fc:	4b6c      	ldr	r3, [pc, #432]	; (8005ab0 <Lane_Changer+0x204>)
 80058fe:	685b      	ldr	r3, [r3, #4]
 8005900:	441a      	add	r2, r3
 8005902:	4b6b      	ldr	r3, [pc, #428]	; (8005ab0 <Lane_Changer+0x204>)
 8005904:	689b      	ldr	r3, [r3, #8]
 8005906:	441a      	add	r2, r3
 8005908:	4b69      	ldr	r3, [pc, #420]	; (8005ab0 <Lane_Changer+0x204>)
 800590a:	68db      	ldr	r3, [r3, #12]
 800590c:	441a      	add	r2, r3
 800590e:	4b68      	ldr	r3, [pc, #416]	; (8005ab0 <Lane_Changer+0x204>)
 8005910:	691b      	ldr	r3, [r3, #16]
 8005912:	4413      	add	r3, r2
 8005914:	60fb      	str	r3, [r7, #12]
		if((sum > 250) && (sum < 1000))//ha másfél másodpercen belül van8 váltás
 8005916:	68fb      	ldr	r3, [r7, #12]
 8005918:	2bfa      	cmp	r3, #250	; 0xfa
 800591a:	d90a      	bls.n	8005932 <Lane_Changer+0x86>
 800591c:	68fb      	ldr	r3, [r7, #12]
 800591e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005922:	d206      	bcs.n	8005932 <Lane_Changer+0x86>
		{
			s=0;
 8005924:	4b63      	ldr	r3, [pc, #396]	; (8005ab4 <Lane_Changer+0x208>)
 8005926:	f04f 0200 	mov.w	r2, #0
 800592a:	601a      	str	r2, [r3, #0]
			laneChange=3;
 800592c:	4b5b      	ldr	r3, [pc, #364]	; (8005a9c <Lane_Changer+0x1f0>)
 800592e:	2203      	movs	r2, #3
 8005930:	701a      	strb	r2, [r3, #0]
		}
		i++;
 8005932:	4b5e      	ldr	r3, [pc, #376]	; (8005aac <Lane_Changer+0x200>)
 8005934:	681b      	ldr	r3, [r3, #0]
 8005936:	3301      	adds	r3, #1
 8005938:	4a5c      	ldr	r2, [pc, #368]	; (8005aac <Lane_Changer+0x200>)
 800593a:	6013      	str	r3, [r2, #0]
		if(i>4) i=0;
 800593c:	4b5b      	ldr	r3, [pc, #364]	; (8005aac <Lane_Changer+0x200>)
 800593e:	681b      	ldr	r3, [r3, #0]
 8005940:	2b04      	cmp	r3, #4
 8005942:	dd02      	ble.n	800594a <Lane_Changer+0x9e>
 8005944:	4b59      	ldr	r3, [pc, #356]	; (8005aac <Lane_Changer+0x200>)
 8005946:	2200      	movs	r2, #0
 8005948:	601a      	str	r2, [r3, #0]
		t_stamp = t;
 800594a:	4a57      	ldr	r2, [pc, #348]	; (8005aa8 <Lane_Changer+0x1fc>)
 800594c:	687b      	ldr	r3, [r7, #4]
 800594e:	6013      	str	r3, [r2, #0]
	{
 8005950:	e096      	b.n	8005a80 <Lane_Changer+0x1d4>
	}
	else if(laneChange==3)
 8005952:	4b52      	ldr	r3, [pc, #328]	; (8005a9c <Lane_Changer+0x1f0>)
 8005954:	781b      	ldrb	r3, [r3, #0]
 8005956:	2b03      	cmp	r3, #3
 8005958:	d172      	bne.n	8005a40 <Lane_Changer+0x194>
	{
		s+=fabs(v)*(t-t_prev)/1000;
 800595a:	4b56      	ldr	r3, [pc, #344]	; (8005ab4 <Lane_Changer+0x208>)
 800595c:	681b      	ldr	r3, [r3, #0]
 800595e:	4618      	mov	r0, r3
 8005960:	f7fa fe12 	bl	8000588 <__aeabi_f2d>
 8005964:	4604      	mov	r4, r0
 8005966:	460d      	mov	r5, r1
 8005968:	4b53      	ldr	r3, [pc, #332]	; (8005ab8 <Lane_Changer+0x20c>)
 800596a:	edd3 7a00 	vldr	s15, [r3]
 800596e:	eef0 7ae7 	vabs.f32	s15, s15
 8005972:	ee17 0a90 	vmov	r0, s15
 8005976:	f7fa fe07 	bl	8000588 <__aeabi_f2d>
 800597a:	4680      	mov	r8, r0
 800597c:	4689      	mov	r9, r1
 800597e:	4b4f      	ldr	r3, [pc, #316]	; (8005abc <Lane_Changer+0x210>)
 8005980:	681b      	ldr	r3, [r3, #0]
 8005982:	687a      	ldr	r2, [r7, #4]
 8005984:	1ad3      	subs	r3, r2, r3
 8005986:	4618      	mov	r0, r3
 8005988:	f7fa fddc 	bl	8000544 <__aeabi_ui2d>
 800598c:	4602      	mov	r2, r0
 800598e:	460b      	mov	r3, r1
 8005990:	4640      	mov	r0, r8
 8005992:	4649      	mov	r1, r9
 8005994:	f7fa fe50 	bl	8000638 <__aeabi_dmul>
 8005998:	4602      	mov	r2, r0
 800599a:	460b      	mov	r3, r1
 800599c:	4610      	mov	r0, r2
 800599e:	4619      	mov	r1, r3
 80059a0:	f04f 0200 	mov.w	r2, #0
 80059a4:	4b46      	ldr	r3, [pc, #280]	; (8005ac0 <Lane_Changer+0x214>)
 80059a6:	f7fa ff71 	bl	800088c <__aeabi_ddiv>
 80059aa:	4602      	mov	r2, r0
 80059ac:	460b      	mov	r3, r1
 80059ae:	4620      	mov	r0, r4
 80059b0:	4629      	mov	r1, r5
 80059b2:	f7fa fc8b 	bl	80002cc <__adddf3>
 80059b6:	4602      	mov	r2, r0
 80059b8:	460b      	mov	r3, r1
 80059ba:	4610      	mov	r0, r2
 80059bc:	4619      	mov	r1, r3
 80059be:	f7fb f913 	bl	8000be8 <__aeabi_d2f>
 80059c2:	4603      	mov	r3, r0
 80059c4:	4a3b      	ldr	r2, [pc, #236]	; (8005ab4 <Lane_Changer+0x208>)
 80059c6:	6013      	str	r3, [r2, #0]
		if(orientation==REVERSE)
 80059c8:	4b3e      	ldr	r3, [pc, #248]	; (8005ac4 <Lane_Changer+0x218>)
 80059ca:	781b      	ldrb	r3, [r3, #0]
 80059cc:	2b01      	cmp	r3, #1
 80059ce:	d114      	bne.n	80059fa <Lane_Changer+0x14e>
		{
			FRONT_CCR(SERVO_FRONT_CCR_MIDDLE+160);
 80059d0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80059d4:	f44f 7255 	mov.w	r2, #852	; 0x354
 80059d8:	635a      	str	r2, [r3, #52]	; 0x34
			REAR_CCR(SERVO_REAR_CCR_MIDDLE-150);
 80059da:	4b3b      	ldr	r3, [pc, #236]	; (8005ac8 <Lane_Changer+0x21c>)
 80059dc:	f240 2212 	movw	r2, #530	; 0x212
 80059e0:	641a      	str	r2, [r3, #64]	; 0x40
			timeout=1500;
 80059e2:	4b3a      	ldr	r3, [pc, #232]	; (8005acc <Lane_Changer+0x220>)
 80059e4:	f240 52dc 	movw	r2, #1500	; 0x5dc
 80059e8:	601a      	str	r2, [r3, #0]
			laneChange=4;
 80059ea:	4b2c      	ldr	r3, [pc, #176]	; (8005a9c <Lane_Changer+0x1f0>)
 80059ec:	2204      	movs	r2, #4
 80059ee:	701a      	strb	r2, [r3, #0]
			t_stamp=t;
 80059f0:	4a2d      	ldr	r2, [pc, #180]	; (8005aa8 <Lane_Changer+0x1fc>)
 80059f2:	687b      	ldr	r3, [r7, #4]
 80059f4:	6013      	str	r3, [r2, #0]
			return 1;
 80059f6:	2301      	movs	r3, #1
 80059f8:	e04a      	b.n	8005a90 <Lane_Changer+0x1e4>
		}
		else if(orientation==FORWARD && s>800)
 80059fa:	4b32      	ldr	r3, [pc, #200]	; (8005ac4 <Lane_Changer+0x218>)
 80059fc:	781b      	ldrb	r3, [r3, #0]
 80059fe:	2b00      	cmp	r3, #0
 8005a00:	d13e      	bne.n	8005a80 <Lane_Changer+0x1d4>
 8005a02:	4b2c      	ldr	r3, [pc, #176]	; (8005ab4 <Lane_Changer+0x208>)
 8005a04:	edd3 7a00 	vldr	s15, [r3]
 8005a08:	ed9f 7a31 	vldr	s14, [pc, #196]	; 8005ad0 <Lane_Changer+0x224>
 8005a0c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005a10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005a14:	dd34      	ble.n	8005a80 <Lane_Changer+0x1d4>
		{
			FRONT_CCR(CCR_FRONT_MAX);
 8005a16:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8005a1a:	f44f 7261 	mov.w	r2, #900	; 0x384
 8005a1e:	635a      	str	r2, [r3, #52]	; 0x34
			REAR_CCR(CCR_REAR_MAX);
 8005a20:	4b29      	ldr	r3, [pc, #164]	; (8005ac8 <Lane_Changer+0x21c>)
 8005a22:	f44f 7252 	mov.w	r2, #840	; 0x348
 8005a26:	641a      	str	r2, [r3, #64]	; 0x40
			timeout=3000;
 8005a28:	4b28      	ldr	r3, [pc, #160]	; (8005acc <Lane_Changer+0x220>)
 8005a2a:	f640 32b8 	movw	r2, #3000	; 0xbb8
 8005a2e:	601a      	str	r2, [r3, #0]
			laneChange=4;
 8005a30:	4b1a      	ldr	r3, [pc, #104]	; (8005a9c <Lane_Changer+0x1f0>)
 8005a32:	2204      	movs	r2, #4
 8005a34:	701a      	strb	r2, [r3, #0]
			t_stamp=t;
 8005a36:	4a1c      	ldr	r2, [pc, #112]	; (8005aa8 <Lane_Changer+0x1fc>)
 8005a38:	687b      	ldr	r3, [r7, #4]
 8005a3a:	6013      	str	r3, [r2, #0]
			return 1;
 8005a3c:	2301      	movs	r3, #1
 8005a3e:	e027      	b.n	8005a90 <Lane_Changer+0x1e4>
		}
	}
	else if(laneChange==4)
 8005a40:	4b16      	ldr	r3, [pc, #88]	; (8005a9c <Lane_Changer+0x1f0>)
 8005a42:	781b      	ldrb	r3, [r3, #0]
 8005a44:	2b04      	cmp	r3, #4
 8005a46:	d11b      	bne.n	8005a80 <Lane_Changer+0x1d4>
	{
		LED_Y(0);
 8005a48:	2201      	movs	r2, #1
 8005a4a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8005a4e:	4821      	ldr	r0, [pc, #132]	; (8005ad4 <Lane_Changer+0x228>)
 8005a50:	f003 fc26 	bl	80092a0 <HAL_GPIO_WritePin>
		v_control=SLOW_DOWN;
 8005a54:	4b20      	ldr	r3, [pc, #128]	; (8005ad8 <Lane_Changer+0x22c>)
 8005a56:	2201      	movs	r2, #1
 8005a58:	701a      	strb	r2, [r3, #0]
		if((t-t_stamp)>timeout && LINE_CNT>0)
 8005a5a:	4b13      	ldr	r3, [pc, #76]	; (8005aa8 <Lane_Changer+0x1fc>)
 8005a5c:	681b      	ldr	r3, [r3, #0]
 8005a5e:	687a      	ldr	r2, [r7, #4]
 8005a60:	1ad2      	subs	r2, r2, r3
 8005a62:	4b1a      	ldr	r3, [pc, #104]	; (8005acc <Lane_Changer+0x220>)
 8005a64:	681b      	ldr	r3, [r3, #0]
 8005a66:	429a      	cmp	r2, r3
 8005a68:	d908      	bls.n	8005a7c <Lane_Changer+0x1d0>
 8005a6a:	4b0d      	ldr	r3, [pc, #52]	; (8005aa0 <Lane_Changer+0x1f4>)
 8005a6c:	785b      	ldrb	r3, [r3, #1]
 8005a6e:	2b00      	cmp	r3, #0
 8005a70:	d004      	beq.n	8005a7c <Lane_Changer+0x1d0>
		{
			ignore=1;
 8005a72:	4b1a      	ldr	r3, [pc, #104]	; (8005adc <Lane_Changer+0x230>)
 8005a74:	2201      	movs	r2, #1
 8005a76:	701a      	strb	r2, [r3, #0]
			return 0;
 8005a78:	2300      	movs	r3, #0
 8005a7a:	e009      	b.n	8005a90 <Lane_Changer+0x1e4>
		}
		else return 1;
 8005a7c:	2301      	movs	r3, #1
 8005a7e:	e007      	b.n	8005a90 <Lane_Changer+0x1e4>
	}
	lineCnt_prev=LINE_CNT;
 8005a80:	4b07      	ldr	r3, [pc, #28]	; (8005aa0 <Lane_Changer+0x1f4>)
 8005a82:	785a      	ldrb	r2, [r3, #1]
 8005a84:	4b07      	ldr	r3, [pc, #28]	; (8005aa4 <Lane_Changer+0x1f8>)
 8005a86:	701a      	strb	r2, [r3, #0]
	t_prev=t;
 8005a88:	4a0c      	ldr	r2, [pc, #48]	; (8005abc <Lane_Changer+0x210>)
 8005a8a:	687b      	ldr	r3, [r7, #4]
 8005a8c:	6013      	str	r3, [r2, #0]
	return 0;
 8005a8e:	2300      	movs	r3, #0
}
 8005a90:	4618      	mov	r0, r3
 8005a92:	3710      	adds	r7, #16
 8005a94:	46bd      	mov	sp, r7
 8005a96:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8005a9a:	bf00      	nop
 8005a9c:	20000348 	.word	0x20000348
 8005aa0:	20000774 	.word	0x20000774
 8005aa4:	2000010d 	.word	0x2000010d
 8005aa8:	200007ec 	.word	0x200007ec
 8005aac:	200007f0 	.word	0x200007f0
 8005ab0:	20000110 	.word	0x20000110
 8005ab4:	200007f4 	.word	0x200007f4
 8005ab8:	20000754 	.word	0x20000754
 8005abc:	200007f8 	.word	0x200007f8
 8005ac0:	408f4000 	.word	0x408f4000
 8005ac4:	20000344 	.word	0x20000344
 8005ac8:	40010000 	.word	0x40010000
 8005acc:	200007fc 	.word	0x200007fc
 8005ad0:	44480000 	.word	0x44480000
 8005ad4:	40020400 	.word	0x40020400
 8005ad8:	20000349 	.word	0x20000349
 8005adc:	2000077e 	.word	0x2000077e

08005ae0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8005ae0:	b580      	push	{r7, lr}
 8005ae2:	b084      	sub	sp, #16
 8005ae4:	af04      	add	r7, sp, #16
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8005ae6:	f001 fccf 	bl	8007488 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8005aea:	f000 f897 	bl	8005c1c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8005aee:	f000 fdb5 	bl	800665c <MX_GPIO_Init>
  MX_DMA_Init();
 8005af2:	f000 fd93 	bl	800661c <MX_DMA_Init>
  MX_TIM2_Init();
 8005af6:	f000 fa87 	bl	8006008 <MX_TIM2_Init>
  MX_USART1_UART_Init();
 8005afa:	f000 fd11 	bl	8006520 <MX_USART1_UART_Init>
  MX_TIM4_Init();
 8005afe:	f000 fb7b 	bl	80061f8 <MX_TIM4_Init>
  MX_ADC2_Init();
 8005b02:	f000 f98f 	bl	8005e24 <MX_ADC2_Init>
  MX_TIM3_Init();
 8005b06:	f000 faf5 	bl	80060f4 <MX_TIM3_Init>
  MX_UART5_Init();
 8005b0a:	f000 fcdf 	bl	80064cc <MX_UART5_Init>
  MX_USART2_UART_Init();
 8005b0e:	f000 fd31 	bl	8006574 <MX_USART2_UART_Init>
  MX_TIM8_Init();
 8005b12:	f000 fc3b 	bl	800638c <MX_TIM8_Init>
  MX_ADC1_Init();
 8005b16:	f000 f8f3 	bl	8005d00 <MX_ADC1_Init>
  MX_USART3_UART_Init();
 8005b1a:	f000 fd55 	bl	80065c8 <MX_USART3_UART_Init>
  MX_TIM5_Init();
 8005b1e:	f000 fbe7 	bl	80062f0 <MX_TIM5_Init>
  MX_TIM1_Init();
 8005b22:	f000 f9d1 	bl	8005ec8 <MX_TIM1_Init>
  MX_TIM14_Init();
 8005b26:	f000 fcad 	bl	8006484 <MX_TIM14_Init>
  MX_TIM13_Init();
 8005b2a:	f000 fc87 	bl	800643c <MX_TIM13_Init>
  /* USER CODE BEGIN 2 */
  F4_Basic_Init(&huart1, &htim5, &htim3, &htim2, &htim1, &htim8,&htim13,&htim14);
 8005b2e:	4b2e      	ldr	r3, [pc, #184]	; (8005be8 <main+0x108>)
 8005b30:	9303      	str	r3, [sp, #12]
 8005b32:	4b2e      	ldr	r3, [pc, #184]	; (8005bec <main+0x10c>)
 8005b34:	9302      	str	r3, [sp, #8]
 8005b36:	4b2e      	ldr	r3, [pc, #184]	; (8005bf0 <main+0x110>)
 8005b38:	9301      	str	r3, [sp, #4]
 8005b3a:	4b2e      	ldr	r3, [pc, #184]	; (8005bf4 <main+0x114>)
 8005b3c:	9300      	str	r3, [sp, #0]
 8005b3e:	4b2e      	ldr	r3, [pc, #184]	; (8005bf8 <main+0x118>)
 8005b40:	4a2e      	ldr	r2, [pc, #184]	; (8005bfc <main+0x11c>)
 8005b42:	492f      	ldr	r1, [pc, #188]	; (8005c00 <main+0x120>)
 8005b44:	482f      	ldr	r0, [pc, #188]	; (8005c04 <main+0x124>)
 8005b46:	f7fb fa37 	bl	8000fb8 <F4_Basic_Init>
  Remote_Control_Init(&htim4, TIM_CHANNEL_3);
 8005b4a:	2108      	movs	r1, #8
 8005b4c:	482e      	ldr	r0, [pc, #184]	; (8005c08 <main+0x128>)
 8005b4e:	f000 fed9 	bl	8006904 <Remote_Control_Init>
  Battery_Voltage_Compensate(&hadc2, &hadc1, &huart1);
 8005b52:	4a2c      	ldr	r2, [pc, #176]	; (8005c04 <main+0x124>)
 8005b54:	492d      	ldr	r1, [pc, #180]	; (8005c0c <main+0x12c>)
 8005b56:	482e      	ldr	r0, [pc, #184]	; (8005c10 <main+0x130>)
 8005b58:	f7fe f9da 	bl	8003f10 <Battery_Voltage_Compensate>

  Mode_Selector(&huart1, &huart5);
 8005b5c:	492d      	ldr	r1, [pc, #180]	; (8005c14 <main+0x134>)
 8005b5e:	4829      	ldr	r0, [pc, #164]	; (8005c04 <main+0x124>)
 8005b60:	f7fd fe4c 	bl	80037fc <Mode_Selector>
  Create_Nodes(&huart1);
 8005b64:	4827      	ldr	r0, [pc, #156]	; (8005c04 <main+0x124>)
 8005b66:	f7fb fc7d 	bl	8001464 <Create_Nodes>
  Wait_For_Start_Sigal(&huart3,&huart1);
 8005b6a:	4926      	ldr	r1, [pc, #152]	; (8005c04 <main+0x124>)
 8005b6c:	482a      	ldr	r0, [pc, #168]	; (8005c18 <main+0x138>)
 8005b6e:	f7fd ff15 	bl	800399c <Wait_For_Start_Sigal>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {/**/
	  Measure_Velocity_Task(&htim8,TICK, 4);
 8005b72:	4b23      	ldr	r3, [pc, #140]	; (8005c00 <main+0x120>)
 8005b74:	681b      	ldr	r3, [r3, #0]
 8005b76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b78:	2204      	movs	r2, #4
 8005b7a:	4619      	mov	r1, r3
 8005b7c:	481c      	ldr	r0, [pc, #112]	; (8005bf0 <main+0x110>)
 8005b7e:	f7fe faf3 	bl	8004168 <Measure_Velocity_Task>
	  Motor_Drive_Task(&htim3, &huart1, TICK, 10);
 8005b82:	4b1f      	ldr	r3, [pc, #124]	; (8005c00 <main+0x120>)
 8005b84:	681b      	ldr	r3, [r3, #0]
 8005b86:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005b88:	230a      	movs	r3, #10
 8005b8a:	491e      	ldr	r1, [pc, #120]	; (8005c04 <main+0x124>)
 8005b8c:	481b      	ldr	r0, [pc, #108]	; (8005bfc <main+0x11c>)
 8005b8e:	f7fe fb67 	bl	8004260 <Motor_Drive_Task>
	  Remote_Control_Task(&htim4, TIM_CHANNEL_3, &huart1, TICK, 43);
 8005b92:	4b1b      	ldr	r3, [pc, #108]	; (8005c00 <main+0x120>)
 8005b94:	681b      	ldr	r3, [r3, #0]
 8005b96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b98:	222b      	movs	r2, #43	; 0x2b
 8005b9a:	9200      	str	r2, [sp, #0]
 8005b9c:	4a19      	ldr	r2, [pc, #100]	; (8005c04 <main+0x124>)
 8005b9e:	2108      	movs	r1, #8
 8005ba0:	4819      	ldr	r0, [pc, #100]	; (8005c08 <main+0x128>)
 8005ba2:	f000 fecb 	bl	800693c <Remote_Control_Task>
	  Control_Task(&huart1,&htim14,TICK, 23);
 8005ba6:	4b16      	ldr	r3, [pc, #88]	; (8005c00 <main+0x120>)
 8005ba8:	681b      	ldr	r3, [r3, #0]
 8005baa:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005bac:	2317      	movs	r3, #23
 8005bae:	490e      	ldr	r1, [pc, #56]	; (8005be8 <main+0x108>)
 8005bb0:	4814      	ldr	r0, [pc, #80]	; (8005c04 <main+0x124>)
 8005bb2:	f7fc fd75 	bl	80026a0 <Control_Task>
	  Control_Task_2(&huart1,TICK, 23);
 8005bb6:	4b12      	ldr	r3, [pc, #72]	; (8005c00 <main+0x120>)
 8005bb8:	681b      	ldr	r3, [r3, #0]
 8005bba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005bbc:	2217      	movs	r2, #23
 8005bbe:	4619      	mov	r1, r3
 8005bc0:	4810      	ldr	r0, [pc, #64]	; (8005c04 <main+0x124>)
 8005bc2:	f7fd f921 	bl	8002e08 <Control_Task_2>
	  Line_Track_Task(&huart5, &huart1, TICK, 4);
 8005bc6:	4b0e      	ldr	r3, [pc, #56]	; (8005c00 <main+0x120>)
 8005bc8:	681b      	ldr	r3, [r3, #0]
 8005bca:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005bcc:	2304      	movs	r3, #4
 8005bce:	490d      	ldr	r1, [pc, #52]	; (8005c04 <main+0x124>)
 8005bd0:	4810      	ldr	r0, [pc, #64]	; (8005c14 <main+0x134>)
 8005bd2:	f7fe fd5d 	bl	8004690 <Line_Track_Task>
	  HDI_Read_Task(&huart1,&htim2,TICK, 200);
 8005bd6:	4b0a      	ldr	r3, [pc, #40]	; (8005c00 <main+0x120>)
 8005bd8:	681b      	ldr	r3, [r3, #0]
 8005bda:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005bdc:	23c8      	movs	r3, #200	; 0xc8
 8005bde:	4906      	ldr	r1, [pc, #24]	; (8005bf8 <main+0x118>)
 8005be0:	4808      	ldr	r0, [pc, #32]	; (8005c04 <main+0x124>)
 8005be2:	f7fb faaf 	bl	8001144 <HDI_Read_Task>
	  Measure_Velocity_Task(&htim8,TICK, 4);
 8005be6:	e7c4      	b.n	8005b72 <main+0x92>
 8005be8:	20000a88 	.word	0x20000a88
 8005bec:	20000a40 	.word	0x20000a40
 8005bf0:	200009f8 	.word	0x200009f8
 8005bf4:	20000890 	.word	0x20000890
 8005bf8:	200008d8 	.word	0x200008d8
 8005bfc:	20000920 	.word	0x20000920
 8005c00:	200009b0 	.word	0x200009b0
 8005c04:	20000b74 	.word	0x20000b74
 8005c08:	20000968 	.word	0x20000968
 8005c0c:	20000800 	.word	0x20000800
 8005c10:	20000848 	.word	0x20000848
 8005c14:	20000b30 	.word	0x20000b30
 8005c18:	20000bfc 	.word	0x20000bfc

08005c1c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8005c1c:	b580      	push	{r7, lr}
 8005c1e:	b094      	sub	sp, #80	; 0x50
 8005c20:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8005c22:	f107 031c 	add.w	r3, r7, #28
 8005c26:	2234      	movs	r2, #52	; 0x34
 8005c28:	2100      	movs	r1, #0
 8005c2a:	4618      	mov	r0, r3
 8005c2c:	f007 f982 	bl	800cf34 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8005c30:	f107 0308 	add.w	r3, r7, #8
 8005c34:	2200      	movs	r2, #0
 8005c36:	601a      	str	r2, [r3, #0]
 8005c38:	605a      	str	r2, [r3, #4]
 8005c3a:	609a      	str	r2, [r3, #8]
 8005c3c:	60da      	str	r2, [r3, #12]
 8005c3e:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8005c40:	2300      	movs	r3, #0
 8005c42:	607b      	str	r3, [r7, #4]
 8005c44:	4b2c      	ldr	r3, [pc, #176]	; (8005cf8 <SystemClock_Config+0xdc>)
 8005c46:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005c48:	4a2b      	ldr	r2, [pc, #172]	; (8005cf8 <SystemClock_Config+0xdc>)
 8005c4a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005c4e:	6413      	str	r3, [r2, #64]	; 0x40
 8005c50:	4b29      	ldr	r3, [pc, #164]	; (8005cf8 <SystemClock_Config+0xdc>)
 8005c52:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005c54:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005c58:	607b      	str	r3, [r7, #4]
 8005c5a:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8005c5c:	2300      	movs	r3, #0
 8005c5e:	603b      	str	r3, [r7, #0]
 8005c60:	4b26      	ldr	r3, [pc, #152]	; (8005cfc <SystemClock_Config+0xe0>)
 8005c62:	681b      	ldr	r3, [r3, #0]
 8005c64:	4a25      	ldr	r2, [pc, #148]	; (8005cfc <SystemClock_Config+0xe0>)
 8005c66:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005c6a:	6013      	str	r3, [r2, #0]
 8005c6c:	4b23      	ldr	r3, [pc, #140]	; (8005cfc <SystemClock_Config+0xe0>)
 8005c6e:	681b      	ldr	r3, [r3, #0]
 8005c70:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8005c74:	603b      	str	r3, [r7, #0]
 8005c76:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8005c78:	2301      	movs	r3, #1
 8005c7a:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8005c7c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8005c80:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8005c82:	2302      	movs	r3, #2
 8005c84:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8005c86:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8005c8a:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 4;
 8005c8c:	2304      	movs	r3, #4
 8005c8e:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 180;
 8005c90:	23b4      	movs	r3, #180	; 0xb4
 8005c92:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8005c94:	2302      	movs	r3, #2
 8005c96:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8005c98:	2302      	movs	r3, #2
 8005c9a:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8005c9c:	2302      	movs	r3, #2
 8005c9e:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8005ca0:	f107 031c 	add.w	r3, r7, #28
 8005ca4:	4618      	mov	r0, r3
 8005ca6:	f003 fee1 	bl	8009a6c <HAL_RCC_OscConfig>
 8005caa:	4603      	mov	r3, r0
 8005cac:	2b00      	cmp	r3, #0
 8005cae:	d001      	beq.n	8005cb4 <SystemClock_Config+0x98>
  {
    Error_Handler();
 8005cb0:	f000 fe00 	bl	80068b4 <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8005cb4:	f003 fb40 	bl	8009338 <HAL_PWREx_EnableOverDrive>
 8005cb8:	4603      	mov	r3, r0
 8005cba:	2b00      	cmp	r3, #0
 8005cbc:	d001      	beq.n	8005cc2 <SystemClock_Config+0xa6>
  {
    Error_Handler();
 8005cbe:	f000 fdf9 	bl	80068b4 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8005cc2:	230f      	movs	r3, #15
 8005cc4:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8005cc6:	2302      	movs	r3, #2
 8005cc8:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8005cca:	2300      	movs	r3, #0
 8005ccc:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 8005cce:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 8005cd2:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8005cd4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005cd8:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8005cda:	f107 0308 	add.w	r3, r7, #8
 8005cde:	2105      	movs	r1, #5
 8005ce0:	4618      	mov	r0, r3
 8005ce2:	f003 fb79 	bl	80093d8 <HAL_RCC_ClockConfig>
 8005ce6:	4603      	mov	r3, r0
 8005ce8:	2b00      	cmp	r3, #0
 8005cea:	d001      	beq.n	8005cf0 <SystemClock_Config+0xd4>
  {
    Error_Handler();
 8005cec:	f000 fde2 	bl	80068b4 <Error_Handler>
  }
}
 8005cf0:	bf00      	nop
 8005cf2:	3750      	adds	r7, #80	; 0x50
 8005cf4:	46bd      	mov	sp, r7
 8005cf6:	bd80      	pop	{r7, pc}
 8005cf8:	40023800 	.word	0x40023800
 8005cfc:	40007000 	.word	0x40007000

08005d00 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8005d00:	b580      	push	{r7, lr}
 8005d02:	b08c      	sub	sp, #48	; 0x30
 8005d04:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8005d06:	f107 0320 	add.w	r3, r7, #32
 8005d0a:	2200      	movs	r2, #0
 8005d0c:	601a      	str	r2, [r3, #0]
 8005d0e:	605a      	str	r2, [r3, #4]
 8005d10:	609a      	str	r2, [r3, #8]
 8005d12:	60da      	str	r2, [r3, #12]
  ADC_InjectionConfTypeDef sConfigInjected = {0};
 8005d14:	463b      	mov	r3, r7
 8005d16:	2220      	movs	r2, #32
 8005d18:	2100      	movs	r1, #0
 8005d1a:	4618      	mov	r0, r3
 8005d1c:	f007 f90a 	bl	800cf34 <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8005d20:	4b3c      	ldr	r3, [pc, #240]	; (8005e14 <MX_ADC1_Init+0x114>)
 8005d22:	4a3d      	ldr	r2, [pc, #244]	; (8005e18 <MX_ADC1_Init+0x118>)
 8005d24:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV6;
 8005d26:	4b3b      	ldr	r3, [pc, #236]	; (8005e14 <MX_ADC1_Init+0x114>)
 8005d28:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8005d2c:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8005d2e:	4b39      	ldr	r3, [pc, #228]	; (8005e14 <MX_ADC1_Init+0x114>)
 8005d30:	2200      	movs	r2, #0
 8005d32:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ENABLE;
 8005d34:	4b37      	ldr	r3, [pc, #220]	; (8005e14 <MX_ADC1_Init+0x114>)
 8005d36:	2201      	movs	r2, #1
 8005d38:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8005d3a:	4b36      	ldr	r3, [pc, #216]	; (8005e14 <MX_ADC1_Init+0x114>)
 8005d3c:	2200      	movs	r2, #0
 8005d3e:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8005d40:	4b34      	ldr	r3, [pc, #208]	; (8005e14 <MX_ADC1_Init+0x114>)
 8005d42:	2200      	movs	r2, #0
 8005d44:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8005d48:	4b32      	ldr	r3, [pc, #200]	; (8005e14 <MX_ADC1_Init+0x114>)
 8005d4a:	2200      	movs	r2, #0
 8005d4c:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8005d4e:	4b31      	ldr	r3, [pc, #196]	; (8005e14 <MX_ADC1_Init+0x114>)
 8005d50:	4a32      	ldr	r2, [pc, #200]	; (8005e1c <MX_ADC1_Init+0x11c>)
 8005d52:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8005d54:	4b2f      	ldr	r3, [pc, #188]	; (8005e14 <MX_ADC1_Init+0x114>)
 8005d56:	2200      	movs	r2, #0
 8005d58:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 3;
 8005d5a:	4b2e      	ldr	r3, [pc, #184]	; (8005e14 <MX_ADC1_Init+0x114>)
 8005d5c:	2203      	movs	r2, #3
 8005d5e:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8005d60:	4b2c      	ldr	r3, [pc, #176]	; (8005e14 <MX_ADC1_Init+0x114>)
 8005d62:	2200      	movs	r2, #0
 8005d64:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8005d68:	4b2a      	ldr	r3, [pc, #168]	; (8005e14 <MX_ADC1_Init+0x114>)
 8005d6a:	2201      	movs	r2, #1
 8005d6c:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8005d6e:	4829      	ldr	r0, [pc, #164]	; (8005e14 <MX_ADC1_Init+0x114>)
 8005d70:	f001 fc20 	bl	80075b4 <HAL_ADC_Init>
 8005d74:	4603      	mov	r3, r0
 8005d76:	2b00      	cmp	r3, #0
 8005d78:	d001      	beq.n	8005d7e <MX_ADC1_Init+0x7e>
  {
    Error_Handler();
 8005d7a:	f000 fd9b 	bl	80068b4 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_8;
 8005d7e:	2308      	movs	r3, #8
 8005d80:	623b      	str	r3, [r7, #32]
  sConfig.Rank = 1;
 8005d82:	2301      	movs	r3, #1
 8005d84:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8005d86:	2307      	movs	r3, #7
 8005d88:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8005d8a:	f107 0320 	add.w	r3, r7, #32
 8005d8e:	4619      	mov	r1, r3
 8005d90:	4820      	ldr	r0, [pc, #128]	; (8005e14 <MX_ADC1_Init+0x114>)
 8005d92:	f001 fdbd 	bl	8007910 <HAL_ADC_ConfigChannel>
 8005d96:	4603      	mov	r3, r0
 8005d98:	2b00      	cmp	r3, #0
 8005d9a:	d001      	beq.n	8005da0 <MX_ADC1_Init+0xa0>
  {
    Error_Handler();
 8005d9c:	f000 fd8a 	bl	80068b4 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Rank = 2;
 8005da0:	2302      	movs	r3, #2
 8005da2:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8005da4:	f107 0320 	add.w	r3, r7, #32
 8005da8:	4619      	mov	r1, r3
 8005daa:	481a      	ldr	r0, [pc, #104]	; (8005e14 <MX_ADC1_Init+0x114>)
 8005dac:	f001 fdb0 	bl	8007910 <HAL_ADC_ConfigChannel>
 8005db0:	4603      	mov	r3, r0
 8005db2:	2b00      	cmp	r3, #0
 8005db4:	d001      	beq.n	8005dba <MX_ADC1_Init+0xba>
  {
    Error_Handler();
 8005db6:	f000 fd7d 	bl	80068b4 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Rank = 3;
 8005dba:	2303      	movs	r3, #3
 8005dbc:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8005dbe:	f107 0320 	add.w	r3, r7, #32
 8005dc2:	4619      	mov	r1, r3
 8005dc4:	4813      	ldr	r0, [pc, #76]	; (8005e14 <MX_ADC1_Init+0x114>)
 8005dc6:	f001 fda3 	bl	8007910 <HAL_ADC_ConfigChannel>
 8005dca:	4603      	mov	r3, r0
 8005dcc:	2b00      	cmp	r3, #0
 8005dce:	d001      	beq.n	8005dd4 <MX_ADC1_Init+0xd4>
  {
    Error_Handler();
 8005dd0:	f000 fd70 	bl	80068b4 <Error_Handler>
  }

  /** Configures for the selected ADC injected channel its corresponding rank in the sequencer and its sample time
  */
  sConfigInjected.InjectedChannel = ADC_CHANNEL_8;
 8005dd4:	2308      	movs	r3, #8
 8005dd6:	603b      	str	r3, [r7, #0]
  sConfigInjected.InjectedRank = 1;
 8005dd8:	2301      	movs	r3, #1
 8005dda:	607b      	str	r3, [r7, #4]
  sConfigInjected.InjectedNbrOfConversion = 1;
 8005ddc:	2301      	movs	r3, #1
 8005dde:	613b      	str	r3, [r7, #16]
  sConfigInjected.InjectedSamplingTime = ADC_SAMPLETIME_3CYCLES;
 8005de0:	2300      	movs	r3, #0
 8005de2:	60bb      	str	r3, [r7, #8]
  sConfigInjected.ExternalTrigInjecConvEdge = ADC_EXTERNALTRIGINJECCONVEDGE_NONE;
 8005de4:	2300      	movs	r3, #0
 8005de6:	61fb      	str	r3, [r7, #28]
  sConfigInjected.ExternalTrigInjecConv = ADC_INJECTED_SOFTWARE_START;
 8005de8:	4b0d      	ldr	r3, [pc, #52]	; (8005e20 <MX_ADC1_Init+0x120>)
 8005dea:	61bb      	str	r3, [r7, #24]
  sConfigInjected.AutoInjectedConv = DISABLE;
 8005dec:	2300      	movs	r3, #0
 8005dee:	757b      	strb	r3, [r7, #21]
  sConfigInjected.InjectedDiscontinuousConvMode = DISABLE;
 8005df0:	2300      	movs	r3, #0
 8005df2:	753b      	strb	r3, [r7, #20]
  sConfigInjected.InjectedOffset = 0;
 8005df4:	2300      	movs	r3, #0
 8005df6:	60fb      	str	r3, [r7, #12]
  if (HAL_ADCEx_InjectedConfigChannel(&hadc1, &sConfigInjected) != HAL_OK)
 8005df8:	463b      	mov	r3, r7
 8005dfa:	4619      	mov	r1, r3
 8005dfc:	4805      	ldr	r0, [pc, #20]	; (8005e14 <MX_ADC1_Init+0x114>)
 8005dfe:	f001 ffb5 	bl	8007d6c <HAL_ADCEx_InjectedConfigChannel>
 8005e02:	4603      	mov	r3, r0
 8005e04:	2b00      	cmp	r3, #0
 8005e06:	d001      	beq.n	8005e0c <MX_ADC1_Init+0x10c>
  {
    Error_Handler();
 8005e08:	f000 fd54 	bl	80068b4 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8005e0c:	bf00      	nop
 8005e0e:	3730      	adds	r7, #48	; 0x30
 8005e10:	46bd      	mov	sp, r7
 8005e12:	bd80      	pop	{r7, pc}
 8005e14:	20000800 	.word	0x20000800
 8005e18:	40012000 	.word	0x40012000
 8005e1c:	0f000001 	.word	0x0f000001
 8005e20:	000f0001 	.word	0x000f0001

08005e24 <MX_ADC2_Init>:
  * @brief ADC2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC2_Init(void)
{
 8005e24:	b580      	push	{r7, lr}
 8005e26:	b084      	sub	sp, #16
 8005e28:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8005e2a:	463b      	mov	r3, r7
 8005e2c:	2200      	movs	r2, #0
 8005e2e:	601a      	str	r2, [r3, #0]
 8005e30:	605a      	str	r2, [r3, #4]
 8005e32:	609a      	str	r2, [r3, #8]
 8005e34:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC2_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc2.Instance = ADC2;
 8005e36:	4b21      	ldr	r3, [pc, #132]	; (8005ebc <MX_ADC2_Init+0x98>)
 8005e38:	4a21      	ldr	r2, [pc, #132]	; (8005ec0 <MX_ADC2_Init+0x9c>)
 8005e3a:	601a      	str	r2, [r3, #0]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV6;
 8005e3c:	4b1f      	ldr	r3, [pc, #124]	; (8005ebc <MX_ADC2_Init+0x98>)
 8005e3e:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8005e42:	605a      	str	r2, [r3, #4]
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 8005e44:	4b1d      	ldr	r3, [pc, #116]	; (8005ebc <MX_ADC2_Init+0x98>)
 8005e46:	2200      	movs	r2, #0
 8005e48:	609a      	str	r2, [r3, #8]
  hadc2.Init.ScanConvMode = DISABLE;
 8005e4a:	4b1c      	ldr	r3, [pc, #112]	; (8005ebc <MX_ADC2_Init+0x98>)
 8005e4c:	2200      	movs	r2, #0
 8005e4e:	611a      	str	r2, [r3, #16]
  hadc2.Init.ContinuousConvMode = DISABLE;
 8005e50:	4b1a      	ldr	r3, [pc, #104]	; (8005ebc <MX_ADC2_Init+0x98>)
 8005e52:	2200      	movs	r2, #0
 8005e54:	761a      	strb	r2, [r3, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 8005e56:	4b19      	ldr	r3, [pc, #100]	; (8005ebc <MX_ADC2_Init+0x98>)
 8005e58:	2200      	movs	r2, #0
 8005e5a:	f883 2020 	strb.w	r2, [r3, #32]
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8005e5e:	4b17      	ldr	r3, [pc, #92]	; (8005ebc <MX_ADC2_Init+0x98>)
 8005e60:	2200      	movs	r2, #0
 8005e62:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8005e64:	4b15      	ldr	r3, [pc, #84]	; (8005ebc <MX_ADC2_Init+0x98>)
 8005e66:	4a17      	ldr	r2, [pc, #92]	; (8005ec4 <MX_ADC2_Init+0xa0>)
 8005e68:	629a      	str	r2, [r3, #40]	; 0x28
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8005e6a:	4b14      	ldr	r3, [pc, #80]	; (8005ebc <MX_ADC2_Init+0x98>)
 8005e6c:	2200      	movs	r2, #0
 8005e6e:	60da      	str	r2, [r3, #12]
  hadc2.Init.NbrOfConversion = 1;
 8005e70:	4b12      	ldr	r3, [pc, #72]	; (8005ebc <MX_ADC2_Init+0x98>)
 8005e72:	2201      	movs	r2, #1
 8005e74:	61da      	str	r2, [r3, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 8005e76:	4b11      	ldr	r3, [pc, #68]	; (8005ebc <MX_ADC2_Init+0x98>)
 8005e78:	2200      	movs	r2, #0
 8005e7a:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8005e7e:	4b0f      	ldr	r3, [pc, #60]	; (8005ebc <MX_ADC2_Init+0x98>)
 8005e80:	2201      	movs	r2, #1
 8005e82:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8005e84:	480d      	ldr	r0, [pc, #52]	; (8005ebc <MX_ADC2_Init+0x98>)
 8005e86:	f001 fb95 	bl	80075b4 <HAL_ADC_Init>
 8005e8a:	4603      	mov	r3, r0
 8005e8c:	2b00      	cmp	r3, #0
 8005e8e:	d001      	beq.n	8005e94 <MX_ADC2_Init+0x70>
  {
    Error_Handler();
 8005e90:	f000 fd10 	bl	80068b4 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_13;
 8005e94:	230d      	movs	r3, #13
 8005e96:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8005e98:	2301      	movs	r3, #1
 8005e9a:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8005e9c:	2307      	movs	r3, #7
 8005e9e:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8005ea0:	463b      	mov	r3, r7
 8005ea2:	4619      	mov	r1, r3
 8005ea4:	4805      	ldr	r0, [pc, #20]	; (8005ebc <MX_ADC2_Init+0x98>)
 8005ea6:	f001 fd33 	bl	8007910 <HAL_ADC_ConfigChannel>
 8005eaa:	4603      	mov	r3, r0
 8005eac:	2b00      	cmp	r3, #0
 8005eae:	d001      	beq.n	8005eb4 <MX_ADC2_Init+0x90>
  {
    Error_Handler();
 8005eb0:	f000 fd00 	bl	80068b4 <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */

  /* USER CODE END ADC2_Init 2 */

}
 8005eb4:	bf00      	nop
 8005eb6:	3710      	adds	r7, #16
 8005eb8:	46bd      	mov	sp, r7
 8005eba:	bd80      	pop	{r7, pc}
 8005ebc:	20000848 	.word	0x20000848
 8005ec0:	40012100 	.word	0x40012100
 8005ec4:	0f000001 	.word	0x0f000001

08005ec8 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8005ec8:	b580      	push	{r7, lr}
 8005eca:	b096      	sub	sp, #88	; 0x58
 8005ecc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8005ece:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8005ed2:	2200      	movs	r2, #0
 8005ed4:	601a      	str	r2, [r3, #0]
 8005ed6:	605a      	str	r2, [r3, #4]
 8005ed8:	609a      	str	r2, [r3, #8]
 8005eda:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005edc:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8005ee0:	2200      	movs	r2, #0
 8005ee2:	601a      	str	r2, [r3, #0]
 8005ee4:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8005ee6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005eea:	2200      	movs	r2, #0
 8005eec:	601a      	str	r2, [r3, #0]
 8005eee:	605a      	str	r2, [r3, #4]
 8005ef0:	609a      	str	r2, [r3, #8]
 8005ef2:	60da      	str	r2, [r3, #12]
 8005ef4:	611a      	str	r2, [r3, #16]
 8005ef6:	615a      	str	r2, [r3, #20]
 8005ef8:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8005efa:	1d3b      	adds	r3, r7, #4
 8005efc:	2220      	movs	r2, #32
 8005efe:	2100      	movs	r1, #0
 8005f00:	4618      	mov	r0, r3
 8005f02:	f007 f817 	bl	800cf34 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8005f06:	4b3e      	ldr	r3, [pc, #248]	; (8006000 <MX_TIM1_Init+0x138>)
 8005f08:	4a3e      	ldr	r2, [pc, #248]	; (8006004 <MX_TIM1_Init+0x13c>)
 8005f0a:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 360-1;
 8005f0c:	4b3c      	ldr	r3, [pc, #240]	; (8006000 <MX_TIM1_Init+0x138>)
 8005f0e:	f240 1267 	movw	r2, #359	; 0x167
 8005f12:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8005f14:	4b3a      	ldr	r3, [pc, #232]	; (8006000 <MX_TIM1_Init+0x138>)
 8005f16:	2200      	movs	r2, #0
 8005f18:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 10000-1;
 8005f1a:	4b39      	ldr	r3, [pc, #228]	; (8006000 <MX_TIM1_Init+0x138>)
 8005f1c:	f242 720f 	movw	r2, #9999	; 0x270f
 8005f20:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8005f22:	4b37      	ldr	r3, [pc, #220]	; (8006000 <MX_TIM1_Init+0x138>)
 8005f24:	2200      	movs	r2, #0
 8005f26:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8005f28:	4b35      	ldr	r3, [pc, #212]	; (8006000 <MX_TIM1_Init+0x138>)
 8005f2a:	2200      	movs	r2, #0
 8005f2c:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8005f2e:	4b34      	ldr	r3, [pc, #208]	; (8006000 <MX_TIM1_Init+0x138>)
 8005f30:	2280      	movs	r2, #128	; 0x80
 8005f32:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8005f34:	4832      	ldr	r0, [pc, #200]	; (8006000 <MX_TIM1_Init+0x138>)
 8005f36:	f004 f837 	bl	8009fa8 <HAL_TIM_Base_Init>
 8005f3a:	4603      	mov	r3, r0
 8005f3c:	2b00      	cmp	r3, #0
 8005f3e:	d001      	beq.n	8005f44 <MX_TIM1_Init+0x7c>
  {
    Error_Handler();
 8005f40:	f000 fcb8 	bl	80068b4 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8005f44:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005f48:	64bb      	str	r3, [r7, #72]	; 0x48
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8005f4a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8005f4e:	4619      	mov	r1, r3
 8005f50:	482b      	ldr	r0, [pc, #172]	; (8006000 <MX_TIM1_Init+0x138>)
 8005f52:	f004 ffa1 	bl	800ae98 <HAL_TIM_ConfigClockSource>
 8005f56:	4603      	mov	r3, r0
 8005f58:	2b00      	cmp	r3, #0
 8005f5a:	d001      	beq.n	8005f60 <MX_TIM1_Init+0x98>
  {
    Error_Handler();
 8005f5c:	f000 fcaa 	bl	80068b4 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8005f60:	4827      	ldr	r0, [pc, #156]	; (8006000 <MX_TIM1_Init+0x138>)
 8005f62:	f004 f8d9 	bl	800a118 <HAL_TIM_PWM_Init>
 8005f66:	4603      	mov	r3, r0
 8005f68:	2b00      	cmp	r3, #0
 8005f6a:	d001      	beq.n	8005f70 <MX_TIM1_Init+0xa8>
  {
    Error_Handler();
 8005f6c:	f000 fca2 	bl	80068b4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8005f70:	2300      	movs	r3, #0
 8005f72:	643b      	str	r3, [r7, #64]	; 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8005f74:	2300      	movs	r3, #0
 8005f76:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8005f78:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8005f7c:	4619      	mov	r1, r3
 8005f7e:	4820      	ldr	r0, [pc, #128]	; (8006000 <MX_TIM1_Init+0x138>)
 8005f80:	f005 fdb2 	bl	800bae8 <HAL_TIMEx_MasterConfigSynchronization>
 8005f84:	4603      	mov	r3, r0
 8005f86:	2b00      	cmp	r3, #0
 8005f88:	d001      	beq.n	8005f8e <MX_TIM1_Init+0xc6>
  {
    Error_Handler();
 8005f8a:	f000 fc93 	bl	80068b4 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8005f8e:	2360      	movs	r3, #96	; 0x60
 8005f90:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigOC.Pulse = 750-1;
 8005f92:	f240 23ed 	movw	r3, #749	; 0x2ed
 8005f96:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8005f98:	2300      	movs	r3, #0
 8005f9a:	62fb      	str	r3, [r7, #44]	; 0x2c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8005f9c:	2300      	movs	r3, #0
 8005f9e:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8005fa0:	2300      	movs	r3, #0
 8005fa2:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8005fa4:	2300      	movs	r3, #0
 8005fa6:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8005fa8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005fac:	220c      	movs	r2, #12
 8005fae:	4619      	mov	r1, r3
 8005fb0:	4813      	ldr	r0, [pc, #76]	; (8006000 <MX_TIM1_Init+0x138>)
 8005fb2:	f004 feaf 	bl	800ad14 <HAL_TIM_PWM_ConfigChannel>
 8005fb6:	4603      	mov	r3, r0
 8005fb8:	2b00      	cmp	r3, #0
 8005fba:	d001      	beq.n	8005fc0 <MX_TIM1_Init+0xf8>
  {
    Error_Handler();
 8005fbc:	f000 fc7a 	bl	80068b4 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8005fc0:	2300      	movs	r3, #0
 8005fc2:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8005fc4:	2300      	movs	r3, #0
 8005fc6:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8005fc8:	2300      	movs	r3, #0
 8005fca:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8005fcc:	2300      	movs	r3, #0
 8005fce:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8005fd0:	2300      	movs	r3, #0
 8005fd2:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8005fd4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8005fd8:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8005fda:	2300      	movs	r3, #0
 8005fdc:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8005fde:	1d3b      	adds	r3, r7, #4
 8005fe0:	4619      	mov	r1, r3
 8005fe2:	4807      	ldr	r0, [pc, #28]	; (8006000 <MX_TIM1_Init+0x138>)
 8005fe4:	f005 fdfc 	bl	800bbe0 <HAL_TIMEx_ConfigBreakDeadTime>
 8005fe8:	4603      	mov	r3, r0
 8005fea:	2b00      	cmp	r3, #0
 8005fec:	d001      	beq.n	8005ff2 <MX_TIM1_Init+0x12a>
  {
    Error_Handler();
 8005fee:	f000 fc61 	bl	80068b4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8005ff2:	4803      	ldr	r0, [pc, #12]	; (8006000 <MX_TIM1_Init+0x138>)
 8005ff4:	f000 ff46 	bl	8006e84 <HAL_TIM_MspPostInit>

}
 8005ff8:	bf00      	nop
 8005ffa:	3758      	adds	r7, #88	; 0x58
 8005ffc:	46bd      	mov	sp, r7
 8005ffe:	bd80      	pop	{r7, pc}
 8006000:	20000890 	.word	0x20000890
 8006004:	40010000 	.word	0x40010000

08006008 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8006008:	b580      	push	{r7, lr}
 800600a:	b08e      	sub	sp, #56	; 0x38
 800600c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800600e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8006012:	2200      	movs	r2, #0
 8006014:	601a      	str	r2, [r3, #0]
 8006016:	605a      	str	r2, [r3, #4]
 8006018:	609a      	str	r2, [r3, #8]
 800601a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800601c:	f107 0320 	add.w	r3, r7, #32
 8006020:	2200      	movs	r2, #0
 8006022:	601a      	str	r2, [r3, #0]
 8006024:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8006026:	1d3b      	adds	r3, r7, #4
 8006028:	2200      	movs	r2, #0
 800602a:	601a      	str	r2, [r3, #0]
 800602c:	605a      	str	r2, [r3, #4]
 800602e:	609a      	str	r2, [r3, #8]
 8006030:	60da      	str	r2, [r3, #12]
 8006032:	611a      	str	r2, [r3, #16]
 8006034:	615a      	str	r2, [r3, #20]
 8006036:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8006038:	4b2d      	ldr	r3, [pc, #180]	; (80060f0 <MX_TIM2_Init+0xe8>)
 800603a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800603e:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 90-1;
 8006040:	4b2b      	ldr	r3, [pc, #172]	; (80060f0 <MX_TIM2_Init+0xe8>)
 8006042:	2259      	movs	r2, #89	; 0x59
 8006044:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8006046:	4b2a      	ldr	r3, [pc, #168]	; (80060f0 <MX_TIM2_Init+0xe8>)
 8006048:	2200      	movs	r2, #0
 800604a:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 10000-1;
 800604c:	4b28      	ldr	r3, [pc, #160]	; (80060f0 <MX_TIM2_Init+0xe8>)
 800604e:	f242 720f 	movw	r2, #9999	; 0x270f
 8006052:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8006054:	4b26      	ldr	r3, [pc, #152]	; (80060f0 <MX_TIM2_Init+0xe8>)
 8006056:	2200      	movs	r2, #0
 8006058:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800605a:	4b25      	ldr	r3, [pc, #148]	; (80060f0 <MX_TIM2_Init+0xe8>)
 800605c:	2280      	movs	r2, #128	; 0x80
 800605e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8006060:	4823      	ldr	r0, [pc, #140]	; (80060f0 <MX_TIM2_Init+0xe8>)
 8006062:	f003 ffa1 	bl	8009fa8 <HAL_TIM_Base_Init>
 8006066:	4603      	mov	r3, r0
 8006068:	2b00      	cmp	r3, #0
 800606a:	d001      	beq.n	8006070 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 800606c:	f000 fc22 	bl	80068b4 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8006070:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8006074:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8006076:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800607a:	4619      	mov	r1, r3
 800607c:	481c      	ldr	r0, [pc, #112]	; (80060f0 <MX_TIM2_Init+0xe8>)
 800607e:	f004 ff0b 	bl	800ae98 <HAL_TIM_ConfigClockSource>
 8006082:	4603      	mov	r3, r0
 8006084:	2b00      	cmp	r3, #0
 8006086:	d001      	beq.n	800608c <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 8006088:	f000 fc14 	bl	80068b4 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 800608c:	4818      	ldr	r0, [pc, #96]	; (80060f0 <MX_TIM2_Init+0xe8>)
 800608e:	f004 f843 	bl	800a118 <HAL_TIM_PWM_Init>
 8006092:	4603      	mov	r3, r0
 8006094:	2b00      	cmp	r3, #0
 8006096:	d001      	beq.n	800609c <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 8006098:	f000 fc0c 	bl	80068b4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800609c:	2300      	movs	r3, #0
 800609e:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80060a0:	2300      	movs	r3, #0
 80060a2:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80060a4:	f107 0320 	add.w	r3, r7, #32
 80060a8:	4619      	mov	r1, r3
 80060aa:	4811      	ldr	r0, [pc, #68]	; (80060f0 <MX_TIM2_Init+0xe8>)
 80060ac:	f005 fd1c 	bl	800bae8 <HAL_TIMEx_MasterConfigSynchronization>
 80060b0:	4603      	mov	r3, r0
 80060b2:	2b00      	cmp	r3, #0
 80060b4:	d001      	beq.n	80060ba <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 80060b6:	f000 fbfd 	bl	80068b4 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80060ba:	2360      	movs	r3, #96	; 0x60
 80060bc:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 750-1;
 80060be:	f240 23ed 	movw	r3, #749	; 0x2ed
 80060c2:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80060c4:	2300      	movs	r3, #0
 80060c6:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80060c8:	2300      	movs	r3, #0
 80060ca:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80060cc:	1d3b      	adds	r3, r7, #4
 80060ce:	2200      	movs	r2, #0
 80060d0:	4619      	mov	r1, r3
 80060d2:	4807      	ldr	r0, [pc, #28]	; (80060f0 <MX_TIM2_Init+0xe8>)
 80060d4:	f004 fe1e 	bl	800ad14 <HAL_TIM_PWM_ConfigChannel>
 80060d8:	4603      	mov	r3, r0
 80060da:	2b00      	cmp	r3, #0
 80060dc:	d001      	beq.n	80060e2 <MX_TIM2_Init+0xda>
  {
    Error_Handler();
 80060de:	f000 fbe9 	bl	80068b4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 80060e2:	4803      	ldr	r0, [pc, #12]	; (80060f0 <MX_TIM2_Init+0xe8>)
 80060e4:	f000 fece 	bl	8006e84 <HAL_TIM_MspPostInit>

}
 80060e8:	bf00      	nop
 80060ea:	3738      	adds	r7, #56	; 0x38
 80060ec:	46bd      	mov	sp, r7
 80060ee:	bd80      	pop	{r7, pc}
 80060f0:	200008d8 	.word	0x200008d8

080060f4 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 80060f4:	b580      	push	{r7, lr}
 80060f6:	b08e      	sub	sp, #56	; 0x38
 80060f8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80060fa:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80060fe:	2200      	movs	r2, #0
 8006100:	601a      	str	r2, [r3, #0]
 8006102:	605a      	str	r2, [r3, #4]
 8006104:	609a      	str	r2, [r3, #8]
 8006106:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8006108:	f107 0320 	add.w	r3, r7, #32
 800610c:	2200      	movs	r2, #0
 800610e:	601a      	str	r2, [r3, #0]
 8006110:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8006112:	1d3b      	adds	r3, r7, #4
 8006114:	2200      	movs	r2, #0
 8006116:	601a      	str	r2, [r3, #0]
 8006118:	605a      	str	r2, [r3, #4]
 800611a:	609a      	str	r2, [r3, #8]
 800611c:	60da      	str	r2, [r3, #12]
 800611e:	611a      	str	r2, [r3, #16]
 8006120:	615a      	str	r2, [r3, #20]
 8006122:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8006124:	4b32      	ldr	r3, [pc, #200]	; (80061f0 <MX_TIM3_Init+0xfc>)
 8006126:	4a33      	ldr	r2, [pc, #204]	; (80061f4 <MX_TIM3_Init+0x100>)
 8006128:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 2-1;
 800612a:	4b31      	ldr	r3, [pc, #196]	; (80061f0 <MX_TIM3_Init+0xfc>)
 800612c:	2201      	movs	r2, #1
 800612e:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED3;
 8006130:	4b2f      	ldr	r3, [pc, #188]	; (80061f0 <MX_TIM3_Init+0xfc>)
 8006132:	2260      	movs	r2, #96	; 0x60
 8006134:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 1000-1;
 8006136:	4b2e      	ldr	r3, [pc, #184]	; (80061f0 <MX_TIM3_Init+0xfc>)
 8006138:	f240 32e7 	movw	r2, #999	; 0x3e7
 800613c:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800613e:	4b2c      	ldr	r3, [pc, #176]	; (80061f0 <MX_TIM3_Init+0xfc>)
 8006140:	2200      	movs	r2, #0
 8006142:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8006144:	4b2a      	ldr	r3, [pc, #168]	; (80061f0 <MX_TIM3_Init+0xfc>)
 8006146:	2200      	movs	r2, #0
 8006148:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800614a:	4829      	ldr	r0, [pc, #164]	; (80061f0 <MX_TIM3_Init+0xfc>)
 800614c:	f003 ff2c 	bl	8009fa8 <HAL_TIM_Base_Init>
 8006150:	4603      	mov	r3, r0
 8006152:	2b00      	cmp	r3, #0
 8006154:	d001      	beq.n	800615a <MX_TIM3_Init+0x66>
  {
    Error_Handler();
 8006156:	f000 fbad 	bl	80068b4 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800615a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800615e:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8006160:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8006164:	4619      	mov	r1, r3
 8006166:	4822      	ldr	r0, [pc, #136]	; (80061f0 <MX_TIM3_Init+0xfc>)
 8006168:	f004 fe96 	bl	800ae98 <HAL_TIM_ConfigClockSource>
 800616c:	4603      	mov	r3, r0
 800616e:	2b00      	cmp	r3, #0
 8006170:	d001      	beq.n	8006176 <MX_TIM3_Init+0x82>
  {
    Error_Handler();
 8006172:	f000 fb9f 	bl	80068b4 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8006176:	481e      	ldr	r0, [pc, #120]	; (80061f0 <MX_TIM3_Init+0xfc>)
 8006178:	f003 ffce 	bl	800a118 <HAL_TIM_PWM_Init>
 800617c:	4603      	mov	r3, r0
 800617e:	2b00      	cmp	r3, #0
 8006180:	d001      	beq.n	8006186 <MX_TIM3_Init+0x92>
  {
    Error_Handler();
 8006182:	f000 fb97 	bl	80068b4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8006186:	2300      	movs	r3, #0
 8006188:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800618a:	2300      	movs	r3, #0
 800618c:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800618e:	f107 0320 	add.w	r3, r7, #32
 8006192:	4619      	mov	r1, r3
 8006194:	4816      	ldr	r0, [pc, #88]	; (80061f0 <MX_TIM3_Init+0xfc>)
 8006196:	f005 fca7 	bl	800bae8 <HAL_TIMEx_MasterConfigSynchronization>
 800619a:	4603      	mov	r3, r0
 800619c:	2b00      	cmp	r3, #0
 800619e:	d001      	beq.n	80061a4 <MX_TIM3_Init+0xb0>
  {
    Error_Handler();
 80061a0:	f000 fb88 	bl	80068b4 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80061a4:	2360      	movs	r3, #96	; 0x60
 80061a6:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80061a8:	2300      	movs	r3, #0
 80061aa:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80061ac:	2300      	movs	r3, #0
 80061ae:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80061b0:	2300      	movs	r3, #0
 80061b2:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80061b4:	1d3b      	adds	r3, r7, #4
 80061b6:	2200      	movs	r2, #0
 80061b8:	4619      	mov	r1, r3
 80061ba:	480d      	ldr	r0, [pc, #52]	; (80061f0 <MX_TIM3_Init+0xfc>)
 80061bc:	f004 fdaa 	bl	800ad14 <HAL_TIM_PWM_ConfigChannel>
 80061c0:	4603      	mov	r3, r0
 80061c2:	2b00      	cmp	r3, #0
 80061c4:	d001      	beq.n	80061ca <MX_TIM3_Init+0xd6>
  {
    Error_Handler();
 80061c6:	f000 fb75 	bl	80068b4 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80061ca:	1d3b      	adds	r3, r7, #4
 80061cc:	2204      	movs	r2, #4
 80061ce:	4619      	mov	r1, r3
 80061d0:	4807      	ldr	r0, [pc, #28]	; (80061f0 <MX_TIM3_Init+0xfc>)
 80061d2:	f004 fd9f 	bl	800ad14 <HAL_TIM_PWM_ConfigChannel>
 80061d6:	4603      	mov	r3, r0
 80061d8:	2b00      	cmp	r3, #0
 80061da:	d001      	beq.n	80061e0 <MX_TIM3_Init+0xec>
  {
    Error_Handler();
 80061dc:	f000 fb6a 	bl	80068b4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 80061e0:	4803      	ldr	r0, [pc, #12]	; (80061f0 <MX_TIM3_Init+0xfc>)
 80061e2:	f000 fe4f 	bl	8006e84 <HAL_TIM_MspPostInit>

}
 80061e6:	bf00      	nop
 80061e8:	3738      	adds	r7, #56	; 0x38
 80061ea:	46bd      	mov	sp, r7
 80061ec:	bd80      	pop	{r7, pc}
 80061ee:	bf00      	nop
 80061f0:	20000920 	.word	0x20000920
 80061f4:	40000400 	.word	0x40000400

080061f8 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 80061f8:	b580      	push	{r7, lr}
 80061fa:	b08a      	sub	sp, #40	; 0x28
 80061fc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80061fe:	f107 0318 	add.w	r3, r7, #24
 8006202:	2200      	movs	r2, #0
 8006204:	601a      	str	r2, [r3, #0]
 8006206:	605a      	str	r2, [r3, #4]
 8006208:	609a      	str	r2, [r3, #8]
 800620a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800620c:	f107 0310 	add.w	r3, r7, #16
 8006210:	2200      	movs	r2, #0
 8006212:	601a      	str	r2, [r3, #0]
 8006214:	605a      	str	r2, [r3, #4]
  TIM_IC_InitTypeDef sConfigIC = {0};
 8006216:	463b      	mov	r3, r7
 8006218:	2200      	movs	r2, #0
 800621a:	601a      	str	r2, [r3, #0]
 800621c:	605a      	str	r2, [r3, #4]
 800621e:	609a      	str	r2, [r3, #8]
 8006220:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8006222:	4b31      	ldr	r3, [pc, #196]	; (80062e8 <MX_TIM4_Init+0xf0>)
 8006224:	4a31      	ldr	r2, [pc, #196]	; (80062ec <MX_TIM4_Init+0xf4>)
 8006226:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 800-1;
 8006228:	4b2f      	ldr	r3, [pc, #188]	; (80062e8 <MX_TIM4_Init+0xf0>)
 800622a:	f240 321f 	movw	r2, #799	; 0x31f
 800622e:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8006230:	4b2d      	ldr	r3, [pc, #180]	; (80062e8 <MX_TIM4_Init+0xf0>)
 8006232:	2200      	movs	r2, #0
 8006234:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65536-1;
 8006236:	4b2c      	ldr	r3, [pc, #176]	; (80062e8 <MX_TIM4_Init+0xf0>)
 8006238:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800623c:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800623e:	4b2a      	ldr	r3, [pc, #168]	; (80062e8 <MX_TIM4_Init+0xf0>)
 8006240:	2200      	movs	r2, #0
 8006242:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8006244:	4b28      	ldr	r3, [pc, #160]	; (80062e8 <MX_TIM4_Init+0xf0>)
 8006246:	2280      	movs	r2, #128	; 0x80
 8006248:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 800624a:	4827      	ldr	r0, [pc, #156]	; (80062e8 <MX_TIM4_Init+0xf0>)
 800624c:	f003 feac 	bl	8009fa8 <HAL_TIM_Base_Init>
 8006250:	4603      	mov	r3, r0
 8006252:	2b00      	cmp	r3, #0
 8006254:	d001      	beq.n	800625a <MX_TIM4_Init+0x62>
  {
    Error_Handler();
 8006256:	f000 fb2d 	bl	80068b4 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800625a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800625e:	61bb      	str	r3, [r7, #24]
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8006260:	f107 0318 	add.w	r3, r7, #24
 8006264:	4619      	mov	r1, r3
 8006266:	4820      	ldr	r0, [pc, #128]	; (80062e8 <MX_TIM4_Init+0xf0>)
 8006268:	f004 fe16 	bl	800ae98 <HAL_TIM_ConfigClockSource>
 800626c:	4603      	mov	r3, r0
 800626e:	2b00      	cmp	r3, #0
 8006270:	d001      	beq.n	8006276 <MX_TIM4_Init+0x7e>
  {
    Error_Handler();
 8006272:	f000 fb1f 	bl	80068b4 <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim4) != HAL_OK)
 8006276:	481c      	ldr	r0, [pc, #112]	; (80062e8 <MX_TIM4_Init+0xf0>)
 8006278:	f004 f870 	bl	800a35c <HAL_TIM_IC_Init>
 800627c:	4603      	mov	r3, r0
 800627e:	2b00      	cmp	r3, #0
 8006280:	d001      	beq.n	8006286 <MX_TIM4_Init+0x8e>
  {
    Error_Handler();
 8006282:	f000 fb17 	bl	80068b4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8006286:	2300      	movs	r3, #0
 8006288:	613b      	str	r3, [r7, #16]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800628a:	2300      	movs	r3, #0
 800628c:	617b      	str	r3, [r7, #20]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 800628e:	f107 0310 	add.w	r3, r7, #16
 8006292:	4619      	mov	r1, r3
 8006294:	4814      	ldr	r0, [pc, #80]	; (80062e8 <MX_TIM4_Init+0xf0>)
 8006296:	f005 fc27 	bl	800bae8 <HAL_TIMEx_MasterConfigSynchronization>
 800629a:	4603      	mov	r3, r0
 800629c:	2b00      	cmp	r3, #0
 800629e:	d001      	beq.n	80062a4 <MX_TIM4_Init+0xac>
  {
    Error_Handler();
 80062a0:	f000 fb08 	bl	80068b4 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_BOTHEDGE;
 80062a4:	230a      	movs	r3, #10
 80062a6:	603b      	str	r3, [r7, #0]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 80062a8:	2301      	movs	r3, #1
 80062aa:	607b      	str	r3, [r7, #4]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 80062ac:	2300      	movs	r3, #0
 80062ae:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICFilter = 0;
 80062b0:	2300      	movs	r3, #0
 80062b2:	60fb      	str	r3, [r7, #12]
  if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_3) != HAL_OK)
 80062b4:	463b      	mov	r3, r7
 80062b6:	2208      	movs	r2, #8
 80062b8:	4619      	mov	r1, r3
 80062ba:	480b      	ldr	r0, [pc, #44]	; (80062e8 <MX_TIM4_Init+0xf0>)
 80062bc:	f004 fc8e 	bl	800abdc <HAL_TIM_IC_ConfigChannel>
 80062c0:	4603      	mov	r3, r0
 80062c2:	2b00      	cmp	r3, #0
 80062c4:	d001      	beq.n	80062ca <MX_TIM4_Init+0xd2>
  {
    Error_Handler();
 80062c6:	f000 faf5 	bl	80068b4 <Error_Handler>
  }
  if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_4) != HAL_OK)
 80062ca:	463b      	mov	r3, r7
 80062cc:	220c      	movs	r2, #12
 80062ce:	4619      	mov	r1, r3
 80062d0:	4805      	ldr	r0, [pc, #20]	; (80062e8 <MX_TIM4_Init+0xf0>)
 80062d2:	f004 fc83 	bl	800abdc <HAL_TIM_IC_ConfigChannel>
 80062d6:	4603      	mov	r3, r0
 80062d8:	2b00      	cmp	r3, #0
 80062da:	d001      	beq.n	80062e0 <MX_TIM4_Init+0xe8>
  {
    Error_Handler();
 80062dc:	f000 faea 	bl	80068b4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 80062e0:	bf00      	nop
 80062e2:	3728      	adds	r7, #40	; 0x28
 80062e4:	46bd      	mov	sp, r7
 80062e6:	bd80      	pop	{r7, pc}
 80062e8:	20000968 	.word	0x20000968
 80062ec:	40000800 	.word	0x40000800

080062f0 <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 80062f0:	b580      	push	{r7, lr}
 80062f2:	b086      	sub	sp, #24
 80062f4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80062f6:	f107 0308 	add.w	r3, r7, #8
 80062fa:	2200      	movs	r2, #0
 80062fc:	601a      	str	r2, [r3, #0]
 80062fe:	605a      	str	r2, [r3, #4]
 8006300:	609a      	str	r2, [r3, #8]
 8006302:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8006304:	463b      	mov	r3, r7
 8006306:	2200      	movs	r2, #0
 8006308:	601a      	str	r2, [r3, #0]
 800630a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 800630c:	4b1d      	ldr	r3, [pc, #116]	; (8006384 <MX_TIM5_Init+0x94>)
 800630e:	4a1e      	ldr	r2, [pc, #120]	; (8006388 <MX_TIM5_Init+0x98>)
 8006310:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 45000-1;
 8006312:	4b1c      	ldr	r3, [pc, #112]	; (8006384 <MX_TIM5_Init+0x94>)
 8006314:	f64a 72c7 	movw	r2, #44999	; 0xafc7
 8006318:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 800631a:	4b1a      	ldr	r3, [pc, #104]	; (8006384 <MX_TIM5_Init+0x94>)
 800631c:	2200      	movs	r2, #0
 800631e:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 8006320:	4b18      	ldr	r3, [pc, #96]	; (8006384 <MX_TIM5_Init+0x94>)
 8006322:	f04f 32ff 	mov.w	r2, #4294967295
 8006326:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8006328:	4b16      	ldr	r3, [pc, #88]	; (8006384 <MX_TIM5_Init+0x94>)
 800632a:	2200      	movs	r2, #0
 800632c:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800632e:	4b15      	ldr	r3, [pc, #84]	; (8006384 <MX_TIM5_Init+0x94>)
 8006330:	2280      	movs	r2, #128	; 0x80
 8006332:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 8006334:	4813      	ldr	r0, [pc, #76]	; (8006384 <MX_TIM5_Init+0x94>)
 8006336:	f003 fe37 	bl	8009fa8 <HAL_TIM_Base_Init>
 800633a:	4603      	mov	r3, r0
 800633c:	2b00      	cmp	r3, #0
 800633e:	d001      	beq.n	8006344 <MX_TIM5_Init+0x54>
  {
    Error_Handler();
 8006340:	f000 fab8 	bl	80068b4 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8006344:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8006348:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 800634a:	f107 0308 	add.w	r3, r7, #8
 800634e:	4619      	mov	r1, r3
 8006350:	480c      	ldr	r0, [pc, #48]	; (8006384 <MX_TIM5_Init+0x94>)
 8006352:	f004 fda1 	bl	800ae98 <HAL_TIM_ConfigClockSource>
 8006356:	4603      	mov	r3, r0
 8006358:	2b00      	cmp	r3, #0
 800635a:	d001      	beq.n	8006360 <MX_TIM5_Init+0x70>
  {
    Error_Handler();
 800635c:	f000 faaa 	bl	80068b4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8006360:	2300      	movs	r3, #0
 8006362:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8006364:	2300      	movs	r3, #0
 8006366:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8006368:	463b      	mov	r3, r7
 800636a:	4619      	mov	r1, r3
 800636c:	4805      	ldr	r0, [pc, #20]	; (8006384 <MX_TIM5_Init+0x94>)
 800636e:	f005 fbbb 	bl	800bae8 <HAL_TIMEx_MasterConfigSynchronization>
 8006372:	4603      	mov	r3, r0
 8006374:	2b00      	cmp	r3, #0
 8006376:	d001      	beq.n	800637c <MX_TIM5_Init+0x8c>
  {
    Error_Handler();
 8006378:	f000 fa9c 	bl	80068b4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 800637c:	bf00      	nop
 800637e:	3718      	adds	r7, #24
 8006380:	46bd      	mov	sp, r7
 8006382:	bd80      	pop	{r7, pc}
 8006384:	200009b0 	.word	0x200009b0
 8006388:	40000c00 	.word	0x40000c00

0800638c <MX_TIM8_Init>:
  * @brief TIM8 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM8_Init(void)
{
 800638c:	b580      	push	{r7, lr}
 800638e:	b08c      	sub	sp, #48	; 0x30
 8006390:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM8_Init 0 */

  /* USER CODE END TIM8_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8006392:	f107 030c 	add.w	r3, r7, #12
 8006396:	2224      	movs	r2, #36	; 0x24
 8006398:	2100      	movs	r1, #0
 800639a:	4618      	mov	r0, r3
 800639c:	f006 fdca 	bl	800cf34 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80063a0:	1d3b      	adds	r3, r7, #4
 80063a2:	2200      	movs	r2, #0
 80063a4:	601a      	str	r2, [r3, #0]
 80063a6:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM8_Init 1 */

  /* USER CODE END TIM8_Init 1 */
  htim8.Instance = TIM8;
 80063a8:	4b22      	ldr	r3, [pc, #136]	; (8006434 <MX_TIM8_Init+0xa8>)
 80063aa:	4a23      	ldr	r2, [pc, #140]	; (8006438 <MX_TIM8_Init+0xac>)
 80063ac:	601a      	str	r2, [r3, #0]
  htim8.Init.Prescaler = 0;
 80063ae:	4b21      	ldr	r3, [pc, #132]	; (8006434 <MX_TIM8_Init+0xa8>)
 80063b0:	2200      	movs	r2, #0
 80063b2:	605a      	str	r2, [r3, #4]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 80063b4:	4b1f      	ldr	r3, [pc, #124]	; (8006434 <MX_TIM8_Init+0xa8>)
 80063b6:	2200      	movs	r2, #0
 80063b8:	609a      	str	r2, [r3, #8]
  htim8.Init.Period = 65535;
 80063ba:	4b1e      	ldr	r3, [pc, #120]	; (8006434 <MX_TIM8_Init+0xa8>)
 80063bc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80063c0:	60da      	str	r2, [r3, #12]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80063c2:	4b1c      	ldr	r3, [pc, #112]	; (8006434 <MX_TIM8_Init+0xa8>)
 80063c4:	2200      	movs	r2, #0
 80063c6:	611a      	str	r2, [r3, #16]
  htim8.Init.RepetitionCounter = 0;
 80063c8:	4b1a      	ldr	r3, [pc, #104]	; (8006434 <MX_TIM8_Init+0xa8>)
 80063ca:	2200      	movs	r2, #0
 80063cc:	615a      	str	r2, [r3, #20]
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80063ce:	4b19      	ldr	r3, [pc, #100]	; (8006434 <MX_TIM8_Init+0xa8>)
 80063d0:	2280      	movs	r2, #128	; 0x80
 80063d2:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 80063d4:	2303      	movs	r3, #3
 80063d6:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 80063d8:	2300      	movs	r3, #0
 80063da:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 80063dc:	2301      	movs	r3, #1
 80063de:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 80063e0:	2300      	movs	r3, #0
 80063e2:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 12;
 80063e4:	230c      	movs	r3, #12
 80063e6:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 80063e8:	2300      	movs	r3, #0
 80063ea:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 80063ec:	2301      	movs	r3, #1
 80063ee:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 80063f0:	2300      	movs	r3, #0
 80063f2:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 12;
 80063f4:	230c      	movs	r3, #12
 80063f6:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim8, &sConfig) != HAL_OK)
 80063f8:	f107 030c 	add.w	r3, r7, #12
 80063fc:	4619      	mov	r1, r3
 80063fe:	480d      	ldr	r0, [pc, #52]	; (8006434 <MX_TIM8_Init+0xa8>)
 8006400:	f004 f9b0 	bl	800a764 <HAL_TIM_Encoder_Init>
 8006404:	4603      	mov	r3, r0
 8006406:	2b00      	cmp	r3, #0
 8006408:	d001      	beq.n	800640e <MX_TIM8_Init+0x82>
  {
    Error_Handler();
 800640a:	f000 fa53 	bl	80068b4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800640e:	2300      	movs	r3, #0
 8006410:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8006412:	2300      	movs	r3, #0
 8006414:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 8006416:	1d3b      	adds	r3, r7, #4
 8006418:	4619      	mov	r1, r3
 800641a:	4806      	ldr	r0, [pc, #24]	; (8006434 <MX_TIM8_Init+0xa8>)
 800641c:	f005 fb64 	bl	800bae8 <HAL_TIMEx_MasterConfigSynchronization>
 8006420:	4603      	mov	r3, r0
 8006422:	2b00      	cmp	r3, #0
 8006424:	d001      	beq.n	800642a <MX_TIM8_Init+0x9e>
  {
    Error_Handler();
 8006426:	f000 fa45 	bl	80068b4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM8_Init 2 */

  /* USER CODE END TIM8_Init 2 */

}
 800642a:	bf00      	nop
 800642c:	3730      	adds	r7, #48	; 0x30
 800642e:	46bd      	mov	sp, r7
 8006430:	bd80      	pop	{r7, pc}
 8006432:	bf00      	nop
 8006434:	200009f8 	.word	0x200009f8
 8006438:	40010400 	.word	0x40010400

0800643c <MX_TIM13_Init>:
  * @brief TIM13 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM13_Init(void)
{
 800643c:	b580      	push	{r7, lr}
 800643e:	af00      	add	r7, sp, #0
  /* USER CODE END TIM13_Init 0 */

  /* USER CODE BEGIN TIM13_Init 1 */

  /* USER CODE END TIM13_Init 1 */
  htim13.Instance = TIM13;
 8006440:	4b0e      	ldr	r3, [pc, #56]	; (800647c <MX_TIM13_Init+0x40>)
 8006442:	4a0f      	ldr	r2, [pc, #60]	; (8006480 <MX_TIM13_Init+0x44>)
 8006444:	601a      	str	r2, [r3, #0]
  htim13.Init.Prescaler = 45000-1;
 8006446:	4b0d      	ldr	r3, [pc, #52]	; (800647c <MX_TIM13_Init+0x40>)
 8006448:	f64a 72c7 	movw	r2, #44999	; 0xafc7
 800644c:	605a      	str	r2, [r3, #4]
  htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 800644e:	4b0b      	ldr	r3, [pc, #44]	; (800647c <MX_TIM13_Init+0x40>)
 8006450:	2200      	movs	r2, #0
 8006452:	609a      	str	r2, [r3, #8]
  htim13.Init.Period = 65535;
 8006454:	4b09      	ldr	r3, [pc, #36]	; (800647c <MX_TIM13_Init+0x40>)
 8006456:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800645a:	60da      	str	r2, [r3, #12]
  htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800645c:	4b07      	ldr	r3, [pc, #28]	; (800647c <MX_TIM13_Init+0x40>)
 800645e:	2200      	movs	r2, #0
 8006460:	611a      	str	r2, [r3, #16]
  htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8006462:	4b06      	ldr	r3, [pc, #24]	; (800647c <MX_TIM13_Init+0x40>)
 8006464:	2280      	movs	r2, #128	; 0x80
 8006466:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 8006468:	4804      	ldr	r0, [pc, #16]	; (800647c <MX_TIM13_Init+0x40>)
 800646a:	f003 fd9d 	bl	8009fa8 <HAL_TIM_Base_Init>
 800646e:	4603      	mov	r3, r0
 8006470:	2b00      	cmp	r3, #0
 8006472:	d001      	beq.n	8006478 <MX_TIM13_Init+0x3c>
  {
    Error_Handler();
 8006474:	f000 fa1e 	bl	80068b4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM13_Init 2 */

  /* USER CODE END TIM13_Init 2 */

}
 8006478:	bf00      	nop
 800647a:	bd80      	pop	{r7, pc}
 800647c:	20000a40 	.word	0x20000a40
 8006480:	40001c00 	.word	0x40001c00

08006484 <MX_TIM14_Init>:
  * @brief TIM14 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM14_Init(void)
{
 8006484:	b580      	push	{r7, lr}
 8006486:	af00      	add	r7, sp, #0
  /* USER CODE END TIM14_Init 0 */

  /* USER CODE BEGIN TIM14_Init 1 */

  /* USER CODE END TIM14_Init 1 */
  htim14.Instance = TIM14;
 8006488:	4b0e      	ldr	r3, [pc, #56]	; (80064c4 <MX_TIM14_Init+0x40>)
 800648a:	4a0f      	ldr	r2, [pc, #60]	; (80064c8 <MX_TIM14_Init+0x44>)
 800648c:	601a      	str	r2, [r3, #0]
  htim14.Init.Prescaler = 0;
 800648e:	4b0d      	ldr	r3, [pc, #52]	; (80064c4 <MX_TIM14_Init+0x40>)
 8006490:	2200      	movs	r2, #0
 8006492:	605a      	str	r2, [r3, #4]
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8006494:	4b0b      	ldr	r3, [pc, #44]	; (80064c4 <MX_TIM14_Init+0x40>)
 8006496:	2200      	movs	r2, #0
 8006498:	609a      	str	r2, [r3, #8]
  htim14.Init.Period = 1000;
 800649a:	4b0a      	ldr	r3, [pc, #40]	; (80064c4 <MX_TIM14_Init+0x40>)
 800649c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80064a0:	60da      	str	r2, [r3, #12]
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80064a2:	4b08      	ldr	r3, [pc, #32]	; (80064c4 <MX_TIM14_Init+0x40>)
 80064a4:	2200      	movs	r2, #0
 80064a6:	611a      	str	r2, [r3, #16]
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80064a8:	4b06      	ldr	r3, [pc, #24]	; (80064c4 <MX_TIM14_Init+0x40>)
 80064aa:	2280      	movs	r2, #128	; 0x80
 80064ac:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 80064ae:	4805      	ldr	r0, [pc, #20]	; (80064c4 <MX_TIM14_Init+0x40>)
 80064b0:	f003 fd7a 	bl	8009fa8 <HAL_TIM_Base_Init>
 80064b4:	4603      	mov	r3, r0
 80064b6:	2b00      	cmp	r3, #0
 80064b8:	d001      	beq.n	80064be <MX_TIM14_Init+0x3a>
  {
    Error_Handler();
 80064ba:	f000 f9fb 	bl	80068b4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM14_Init 2 */

  /* USER CODE END TIM14_Init 2 */

}
 80064be:	bf00      	nop
 80064c0:	bd80      	pop	{r7, pc}
 80064c2:	bf00      	nop
 80064c4:	20000a88 	.word	0x20000a88
 80064c8:	40002000 	.word	0x40002000

080064cc <MX_UART5_Init>:
  * @brief UART5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART5_Init(void)
{
 80064cc:	b580      	push	{r7, lr}
 80064ce:	af00      	add	r7, sp, #0
  /* USER CODE END UART5_Init 0 */

  /* USER CODE BEGIN UART5_Init 1 */

  /* USER CODE END UART5_Init 1 */
  huart5.Instance = UART5;
 80064d0:	4b11      	ldr	r3, [pc, #68]	; (8006518 <MX_UART5_Init+0x4c>)
 80064d2:	4a12      	ldr	r2, [pc, #72]	; (800651c <MX_UART5_Init+0x50>)
 80064d4:	601a      	str	r2, [r3, #0]
  huart5.Init.BaudRate = 460800;
 80064d6:	4b10      	ldr	r3, [pc, #64]	; (8006518 <MX_UART5_Init+0x4c>)
 80064d8:	f44f 22e1 	mov.w	r2, #460800	; 0x70800
 80064dc:	605a      	str	r2, [r3, #4]
  huart5.Init.WordLength = UART_WORDLENGTH_8B;
 80064de:	4b0e      	ldr	r3, [pc, #56]	; (8006518 <MX_UART5_Init+0x4c>)
 80064e0:	2200      	movs	r2, #0
 80064e2:	609a      	str	r2, [r3, #8]
  huart5.Init.StopBits = UART_STOPBITS_1;
 80064e4:	4b0c      	ldr	r3, [pc, #48]	; (8006518 <MX_UART5_Init+0x4c>)
 80064e6:	2200      	movs	r2, #0
 80064e8:	60da      	str	r2, [r3, #12]
  huart5.Init.Parity = UART_PARITY_NONE;
 80064ea:	4b0b      	ldr	r3, [pc, #44]	; (8006518 <MX_UART5_Init+0x4c>)
 80064ec:	2200      	movs	r2, #0
 80064ee:	611a      	str	r2, [r3, #16]
  huart5.Init.Mode = UART_MODE_TX_RX;
 80064f0:	4b09      	ldr	r3, [pc, #36]	; (8006518 <MX_UART5_Init+0x4c>)
 80064f2:	220c      	movs	r2, #12
 80064f4:	615a      	str	r2, [r3, #20]
  huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80064f6:	4b08      	ldr	r3, [pc, #32]	; (8006518 <MX_UART5_Init+0x4c>)
 80064f8:	2200      	movs	r2, #0
 80064fa:	619a      	str	r2, [r3, #24]
  huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 80064fc:	4b06      	ldr	r3, [pc, #24]	; (8006518 <MX_UART5_Init+0x4c>)
 80064fe:	2200      	movs	r2, #0
 8006500:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart5) != HAL_OK)
 8006502:	4805      	ldr	r0, [pc, #20]	; (8006518 <MX_UART5_Init+0x4c>)
 8006504:	f005 fbd2 	bl	800bcac <HAL_UART_Init>
 8006508:	4603      	mov	r3, r0
 800650a:	2b00      	cmp	r3, #0
 800650c:	d001      	beq.n	8006512 <MX_UART5_Init+0x46>
  {
    Error_Handler();
 800650e:	f000 f9d1 	bl	80068b4 <Error_Handler>
  }
  /* USER CODE BEGIN UART5_Init 2 */

  /* USER CODE END UART5_Init 2 */

}
 8006512:	bf00      	nop
 8006514:	bd80      	pop	{r7, pc}
 8006516:	bf00      	nop
 8006518:	20000b30 	.word	0x20000b30
 800651c:	40005000 	.word	0x40005000

08006520 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8006520:	b580      	push	{r7, lr}
 8006522:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8006524:	4b11      	ldr	r3, [pc, #68]	; (800656c <MX_USART1_UART_Init+0x4c>)
 8006526:	4a12      	ldr	r2, [pc, #72]	; (8006570 <MX_USART1_UART_Init+0x50>)
 8006528:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 800652a:	4b10      	ldr	r3, [pc, #64]	; (800656c <MX_USART1_UART_Init+0x4c>)
 800652c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8006530:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8006532:	4b0e      	ldr	r3, [pc, #56]	; (800656c <MX_USART1_UART_Init+0x4c>)
 8006534:	2200      	movs	r2, #0
 8006536:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8006538:	4b0c      	ldr	r3, [pc, #48]	; (800656c <MX_USART1_UART_Init+0x4c>)
 800653a:	2200      	movs	r2, #0
 800653c:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800653e:	4b0b      	ldr	r3, [pc, #44]	; (800656c <MX_USART1_UART_Init+0x4c>)
 8006540:	2200      	movs	r2, #0
 8006542:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8006544:	4b09      	ldr	r3, [pc, #36]	; (800656c <MX_USART1_UART_Init+0x4c>)
 8006546:	220c      	movs	r2, #12
 8006548:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800654a:	4b08      	ldr	r3, [pc, #32]	; (800656c <MX_USART1_UART_Init+0x4c>)
 800654c:	2200      	movs	r2, #0
 800654e:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8006550:	4b06      	ldr	r3, [pc, #24]	; (800656c <MX_USART1_UART_Init+0x4c>)
 8006552:	2200      	movs	r2, #0
 8006554:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8006556:	4805      	ldr	r0, [pc, #20]	; (800656c <MX_USART1_UART_Init+0x4c>)
 8006558:	f005 fba8 	bl	800bcac <HAL_UART_Init>
 800655c:	4603      	mov	r3, r0
 800655e:	2b00      	cmp	r3, #0
 8006560:	d001      	beq.n	8006566 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8006562:	f000 f9a7 	bl	80068b4 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8006566:	bf00      	nop
 8006568:	bd80      	pop	{r7, pc}
 800656a:	bf00      	nop
 800656c:	20000b74 	.word	0x20000b74
 8006570:	40011000 	.word	0x40011000

08006574 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8006574:	b580      	push	{r7, lr}
 8006576:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8006578:	4b11      	ldr	r3, [pc, #68]	; (80065c0 <MX_USART2_UART_Init+0x4c>)
 800657a:	4a12      	ldr	r2, [pc, #72]	; (80065c4 <MX_USART2_UART_Init+0x50>)
 800657c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 800657e:	4b10      	ldr	r3, [pc, #64]	; (80065c0 <MX_USART2_UART_Init+0x4c>)
 8006580:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8006584:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8006586:	4b0e      	ldr	r3, [pc, #56]	; (80065c0 <MX_USART2_UART_Init+0x4c>)
 8006588:	2200      	movs	r2, #0
 800658a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800658c:	4b0c      	ldr	r3, [pc, #48]	; (80065c0 <MX_USART2_UART_Init+0x4c>)
 800658e:	2200      	movs	r2, #0
 8006590:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8006592:	4b0b      	ldr	r3, [pc, #44]	; (80065c0 <MX_USART2_UART_Init+0x4c>)
 8006594:	2200      	movs	r2, #0
 8006596:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8006598:	4b09      	ldr	r3, [pc, #36]	; (80065c0 <MX_USART2_UART_Init+0x4c>)
 800659a:	220c      	movs	r2, #12
 800659c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800659e:	4b08      	ldr	r3, [pc, #32]	; (80065c0 <MX_USART2_UART_Init+0x4c>)
 80065a0:	2200      	movs	r2, #0
 80065a2:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80065a4:	4b06      	ldr	r3, [pc, #24]	; (80065c0 <MX_USART2_UART_Init+0x4c>)
 80065a6:	2200      	movs	r2, #0
 80065a8:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80065aa:	4805      	ldr	r0, [pc, #20]	; (80065c0 <MX_USART2_UART_Init+0x4c>)
 80065ac:	f005 fb7e 	bl	800bcac <HAL_UART_Init>
 80065b0:	4603      	mov	r3, r0
 80065b2:	2b00      	cmp	r3, #0
 80065b4:	d001      	beq.n	80065ba <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80065b6:	f000 f97d 	bl	80068b4 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80065ba:	bf00      	nop
 80065bc:	bd80      	pop	{r7, pc}
 80065be:	bf00      	nop
 80065c0:	20000bb8 	.word	0x20000bb8
 80065c4:	40004400 	.word	0x40004400

080065c8 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 80065c8:	b580      	push	{r7, lr}
 80065ca:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 80065cc:	4b11      	ldr	r3, [pc, #68]	; (8006614 <MX_USART3_UART_Init+0x4c>)
 80065ce:	4a12      	ldr	r2, [pc, #72]	; (8006618 <MX_USART3_UART_Init+0x50>)
 80065d0:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 80065d2:	4b10      	ldr	r3, [pc, #64]	; (8006614 <MX_USART3_UART_Init+0x4c>)
 80065d4:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80065d8:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 80065da:	4b0e      	ldr	r3, [pc, #56]	; (8006614 <MX_USART3_UART_Init+0x4c>)
 80065dc:	2200      	movs	r2, #0
 80065de:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 80065e0:	4b0c      	ldr	r3, [pc, #48]	; (8006614 <MX_USART3_UART_Init+0x4c>)
 80065e2:	2200      	movs	r2, #0
 80065e4:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 80065e6:	4b0b      	ldr	r3, [pc, #44]	; (8006614 <MX_USART3_UART_Init+0x4c>)
 80065e8:	2200      	movs	r2, #0
 80065ea:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 80065ec:	4b09      	ldr	r3, [pc, #36]	; (8006614 <MX_USART3_UART_Init+0x4c>)
 80065ee:	220c      	movs	r2, #12
 80065f0:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80065f2:	4b08      	ldr	r3, [pc, #32]	; (8006614 <MX_USART3_UART_Init+0x4c>)
 80065f4:	2200      	movs	r2, #0
 80065f6:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 80065f8:	4b06      	ldr	r3, [pc, #24]	; (8006614 <MX_USART3_UART_Init+0x4c>)
 80065fa:	2200      	movs	r2, #0
 80065fc:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 80065fe:	4805      	ldr	r0, [pc, #20]	; (8006614 <MX_USART3_UART_Init+0x4c>)
 8006600:	f005 fb54 	bl	800bcac <HAL_UART_Init>
 8006604:	4603      	mov	r3, r0
 8006606:	2b00      	cmp	r3, #0
 8006608:	d001      	beq.n	800660e <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 800660a:	f000 f953 	bl	80068b4 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 800660e:	bf00      	nop
 8006610:	bd80      	pop	{r7, pc}
 8006612:	bf00      	nop
 8006614:	20000bfc 	.word	0x20000bfc
 8006618:	40004800 	.word	0x40004800

0800661c <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 800661c:	b580      	push	{r7, lr}
 800661e:	b082      	sub	sp, #8
 8006620:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8006622:	2300      	movs	r3, #0
 8006624:	607b      	str	r3, [r7, #4]
 8006626:	4b0c      	ldr	r3, [pc, #48]	; (8006658 <MX_DMA_Init+0x3c>)
 8006628:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800662a:	4a0b      	ldr	r2, [pc, #44]	; (8006658 <MX_DMA_Init+0x3c>)
 800662c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8006630:	6313      	str	r3, [r2, #48]	; 0x30
 8006632:	4b09      	ldr	r3, [pc, #36]	; (8006658 <MX_DMA_Init+0x3c>)
 8006634:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006636:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800663a:	607b      	str	r3, [r7, #4]
 800663c:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream7_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream7_IRQn, 0, 0);
 800663e:	2200      	movs	r2, #0
 8006640:	2100      	movs	r1, #0
 8006642:	202f      	movs	r0, #47	; 0x2f
 8006644:	f001 fe2b 	bl	800829e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 8006648:	202f      	movs	r0, #47	; 0x2f
 800664a:	f001 fe44 	bl	80082d6 <HAL_NVIC_EnableIRQ>

}
 800664e:	bf00      	nop
 8006650:	3708      	adds	r7, #8
 8006652:	46bd      	mov	sp, r7
 8006654:	bd80      	pop	{r7, pc}
 8006656:	bf00      	nop
 8006658:	40023800 	.word	0x40023800

0800665c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800665c:	b580      	push	{r7, lr}
 800665e:	b08a      	sub	sp, #40	; 0x28
 8006660:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8006662:	f107 0314 	add.w	r3, r7, #20
 8006666:	2200      	movs	r2, #0
 8006668:	601a      	str	r2, [r3, #0]
 800666a:	605a      	str	r2, [r3, #4]
 800666c:	609a      	str	r2, [r3, #8]
 800666e:	60da      	str	r2, [r3, #12]
 8006670:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8006672:	2300      	movs	r3, #0
 8006674:	613b      	str	r3, [r7, #16]
 8006676:	4b64      	ldr	r3, [pc, #400]	; (8006808 <MX_GPIO_Init+0x1ac>)
 8006678:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800667a:	4a63      	ldr	r2, [pc, #396]	; (8006808 <MX_GPIO_Init+0x1ac>)
 800667c:	f043 0304 	orr.w	r3, r3, #4
 8006680:	6313      	str	r3, [r2, #48]	; 0x30
 8006682:	4b61      	ldr	r3, [pc, #388]	; (8006808 <MX_GPIO_Init+0x1ac>)
 8006684:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006686:	f003 0304 	and.w	r3, r3, #4
 800668a:	613b      	str	r3, [r7, #16]
 800668c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800668e:	2300      	movs	r3, #0
 8006690:	60fb      	str	r3, [r7, #12]
 8006692:	4b5d      	ldr	r3, [pc, #372]	; (8006808 <MX_GPIO_Init+0x1ac>)
 8006694:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006696:	4a5c      	ldr	r2, [pc, #368]	; (8006808 <MX_GPIO_Init+0x1ac>)
 8006698:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800669c:	6313      	str	r3, [r2, #48]	; 0x30
 800669e:	4b5a      	ldr	r3, [pc, #360]	; (8006808 <MX_GPIO_Init+0x1ac>)
 80066a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80066a2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80066a6:	60fb      	str	r3, [r7, #12]
 80066a8:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80066aa:	2300      	movs	r3, #0
 80066ac:	60bb      	str	r3, [r7, #8]
 80066ae:	4b56      	ldr	r3, [pc, #344]	; (8006808 <MX_GPIO_Init+0x1ac>)
 80066b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80066b2:	4a55      	ldr	r2, [pc, #340]	; (8006808 <MX_GPIO_Init+0x1ac>)
 80066b4:	f043 0301 	orr.w	r3, r3, #1
 80066b8:	6313      	str	r3, [r2, #48]	; 0x30
 80066ba:	4b53      	ldr	r3, [pc, #332]	; (8006808 <MX_GPIO_Init+0x1ac>)
 80066bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80066be:	f003 0301 	and.w	r3, r3, #1
 80066c2:	60bb      	str	r3, [r7, #8]
 80066c4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80066c6:	2300      	movs	r3, #0
 80066c8:	607b      	str	r3, [r7, #4]
 80066ca:	4b4f      	ldr	r3, [pc, #316]	; (8006808 <MX_GPIO_Init+0x1ac>)
 80066cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80066ce:	4a4e      	ldr	r2, [pc, #312]	; (8006808 <MX_GPIO_Init+0x1ac>)
 80066d0:	f043 0302 	orr.w	r3, r3, #2
 80066d4:	6313      	str	r3, [r2, #48]	; 0x30
 80066d6:	4b4c      	ldr	r3, [pc, #304]	; (8006808 <MX_GPIO_Init+0x1ac>)
 80066d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80066da:	f003 0302 	and.w	r3, r3, #2
 80066de:	607b      	str	r3, [r7, #4]
 80066e0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80066e2:	2300      	movs	r3, #0
 80066e4:	603b      	str	r3, [r7, #0]
 80066e6:	4b48      	ldr	r3, [pc, #288]	; (8006808 <MX_GPIO_Init+0x1ac>)
 80066e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80066ea:	4a47      	ldr	r2, [pc, #284]	; (8006808 <MX_GPIO_Init+0x1ac>)
 80066ec:	f043 0308 	orr.w	r3, r3, #8
 80066f0:	6313      	str	r3, [r2, #48]	; 0x30
 80066f2:	4b45      	ldr	r3, [pc, #276]	; (8006808 <MX_GPIO_Init+0x1ac>)
 80066f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80066f6:	f003 0308 	and.w	r3, r3, #8
 80066fa:	603b      	str	r3, [r7, #0]
 80066fc:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TEL_GPIO4_GPIO_Port, TEL_GPIO4_Pin, GPIO_PIN_RESET);
 80066fe:	2200      	movs	r2, #0
 8006700:	2102      	movs	r1, #2
 8006702:	4842      	ldr	r0, [pc, #264]	; (800680c <MX_GPIO_Init+0x1b0>)
 8006704:	f002 fdcc 	bl	80092a0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, TEL_GPIO7_Pin|On_Board_LED_Pin, GPIO_PIN_RESET);
 8006708:	2200      	movs	r2, #0
 800670a:	2122      	movs	r1, #34	; 0x22
 800670c:	4840      	ldr	r0, [pc, #256]	; (8006810 <MX_GPIO_Init+0x1b4>)
 800670e:	f002 fdc7 	bl	80092a0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED4_Pin|LED1_Pin|LED2_Pin|LED3_Pin
 8006712:	2200      	movs	r2, #0
 8006714:	f24e 0142 	movw	r1, #57410	; 0xe042
 8006718:	483e      	ldr	r0, [pc, #248]	; (8006814 <MX_GPIO_Init+0x1b8>)
 800671a:	f002 fdc1 	bl	80092a0 <HAL_GPIO_WritePin>
                          |Motor_EN_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin : On_Board_Button_Pin */
  GPIO_InitStruct.Pin = On_Board_Button_Pin;
 800671e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8006722:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8006724:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8006728:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800672a:	2300      	movs	r3, #0
 800672c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(On_Board_Button_GPIO_Port, &GPIO_InitStruct);
 800672e:	f107 0314 	add.w	r3, r7, #20
 8006732:	4619      	mov	r1, r3
 8006734:	4835      	ldr	r0, [pc, #212]	; (800680c <MX_GPIO_Init+0x1b0>)
 8006736:	f002 fc07 	bl	8008f48 <HAL_GPIO_Init>

  /*Configure GPIO pin : TEL_GPIO4_Pin */
  GPIO_InitStruct.Pin = TEL_GPIO4_Pin;
 800673a:	2302      	movs	r3, #2
 800673c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800673e:	2301      	movs	r3, #1
 8006740:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006742:	2300      	movs	r3, #0
 8006744:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006746:	2300      	movs	r3, #0
 8006748:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(TEL_GPIO4_GPIO_Port, &GPIO_InitStruct);
 800674a:	f107 0314 	add.w	r3, r7, #20
 800674e:	4619      	mov	r1, r3
 8006750:	482e      	ldr	r0, [pc, #184]	; (800680c <MX_GPIO_Init+0x1b0>)
 8006752:	f002 fbf9 	bl	8008f48 <HAL_GPIO_Init>

  /*Configure GPIO pins : TEL_GPIO7_Pin On_Board_LED_Pin */
  GPIO_InitStruct.Pin = TEL_GPIO7_Pin|On_Board_LED_Pin;
 8006756:	2322      	movs	r3, #34	; 0x22
 8006758:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800675a:	2301      	movs	r3, #1
 800675c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800675e:	2300      	movs	r3, #0
 8006760:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006762:	2300      	movs	r3, #0
 8006764:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8006766:	f107 0314 	add.w	r3, r7, #20
 800676a:	4619      	mov	r1, r3
 800676c:	4828      	ldr	r0, [pc, #160]	; (8006810 <MX_GPIO_Init+0x1b4>)
 800676e:	f002 fbeb 	bl	8008f48 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED4_Pin LED1_Pin LED2_Pin LED3_Pin
                           Motor_EN_Pin */
  GPIO_InitStruct.Pin = LED4_Pin|LED1_Pin|LED2_Pin|LED3_Pin
 8006772:	f24e 0342 	movw	r3, #57410	; 0xe042
 8006776:	617b      	str	r3, [r7, #20]
                          |Motor_EN_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8006778:	2301      	movs	r3, #1
 800677a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800677c:	2300      	movs	r3, #0
 800677e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006780:	2300      	movs	r3, #0
 8006782:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8006784:	f107 0314 	add.w	r3, r7, #20
 8006788:	4619      	mov	r1, r3
 800678a:	4822      	ldr	r0, [pc, #136]	; (8006814 <MX_GPIO_Init+0x1b8>)
 800678c:	f002 fbdc 	bl	8008f48 <HAL_GPIO_Init>

  /*Configure GPIO pins : SW2_Pin B2_Pin Motor_Feedback_Pin */
  GPIO_InitStruct.Pin = SW2_Pin|B2_Pin|Motor_Feedback_Pin;
 8006790:	f44f 6394 	mov.w	r3, #1184	; 0x4a0
 8006794:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8006796:	2300      	movs	r3, #0
 8006798:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800679a:	2300      	movs	r3, #0
 800679c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800679e:	f107 0314 	add.w	r3, r7, #20
 80067a2:	4619      	mov	r1, r3
 80067a4:	481b      	ldr	r0, [pc, #108]	; (8006814 <MX_GPIO_Init+0x1b8>)
 80067a6:	f002 fbcf 	bl	8008f48 <HAL_GPIO_Init>

  /*Configure GPIO pin : SW1_Pin */
  GPIO_InitStruct.Pin = SW1_Pin;
 80067aa:	f44f 7380 	mov.w	r3, #256	; 0x100
 80067ae:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80067b0:	2300      	movs	r3, #0
 80067b2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80067b4:	2300      	movs	r3, #0
 80067b6:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(SW1_GPIO_Port, &GPIO_InitStruct);
 80067b8:	f107 0314 	add.w	r3, r7, #20
 80067bc:	4619      	mov	r1, r3
 80067be:	4814      	ldr	r0, [pc, #80]	; (8006810 <MX_GPIO_Init+0x1b4>)
 80067c0:	f002 fbc2 	bl	8008f48 <HAL_GPIO_Init>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 80067c4:	2310      	movs	r3, #16
 80067c6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80067c8:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 80067cc:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80067ce:	2300      	movs	r3, #0
 80067d0:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 80067d2:	f107 0314 	add.w	r3, r7, #20
 80067d6:	4619      	mov	r1, r3
 80067d8:	480e      	ldr	r0, [pc, #56]	; (8006814 <MX_GPIO_Init+0x1b8>)
 80067da:	f002 fbb5 	bl	8008f48 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI4_IRQn, 0, 0);
 80067de:	2200      	movs	r2, #0
 80067e0:	2100      	movs	r1, #0
 80067e2:	200a      	movs	r0, #10
 80067e4:	f001 fd5b 	bl	800829e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 80067e8:	200a      	movs	r0, #10
 80067ea:	f001 fd74 	bl	80082d6 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 80067ee:	2200      	movs	r2, #0
 80067f0:	2100      	movs	r1, #0
 80067f2:	2028      	movs	r0, #40	; 0x28
 80067f4:	f001 fd53 	bl	800829e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 80067f8:	2028      	movs	r0, #40	; 0x28
 80067fa:	f001 fd6c 	bl	80082d6 <HAL_NVIC_EnableIRQ>

}
 80067fe:	bf00      	nop
 8006800:	3728      	adds	r7, #40	; 0x28
 8006802:	46bd      	mov	sp, r7
 8006804:	bd80      	pop	{r7, pc}
 8006806:	bf00      	nop
 8006808:	40023800 	.word	0x40023800
 800680c:	40020800 	.word	0x40020800
 8006810:	40020000 	.word	0x40020000
 8006814:	40020400 	.word	0x40020400

08006818 <HAL_GPIO_EXTI_Callback>:

/* USER CODE BEGIN 4 */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8006818:	b580      	push	{r7, lr}
 800681a:	b082      	sub	sp, #8
 800681c:	af00      	add	r7, sp, #0
 800681e:	4603      	mov	r3, r0
 8006820:	80fb      	strh	r3, [r7, #6]
	//ha meg lett nyomva a nucleon a kék gomb
	if(GPIO_Pin == On_Board_Button_Pin)B_NUCLEO_ISR(&huart1);
 8006822:	88fb      	ldrh	r3, [r7, #6]
 8006824:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006828:	d102      	bne.n	8006830 <HAL_GPIO_EXTI_Callback+0x18>
 800682a:	4806      	ldr	r0, [pc, #24]	; (8006844 <HAL_GPIO_EXTI_Callback+0x2c>)
 800682c:	f7fa fd88 	bl	8001340 <B_NUCLEO_ISR>
	if(GPIO_Pin == B1_Pin) B1_ISR(&huart1);
 8006830:	88fb      	ldrh	r3, [r7, #6]
 8006832:	2b10      	cmp	r3, #16
 8006834:	d102      	bne.n	800683c <HAL_GPIO_EXTI_Callback+0x24>
 8006836:	4803      	ldr	r0, [pc, #12]	; (8006844 <HAL_GPIO_EXTI_Callback+0x2c>)
 8006838:	f7fa fd0e 	bl	8001258 <B1_ISR>
}
 800683c:	bf00      	nop
 800683e:	3708      	adds	r7, #8
 8006840:	46bd      	mov	sp, r7
 8006842:	bd80      	pop	{r7, pc}
 8006844:	20000b74 	.word	0x20000b74

08006848 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8006848:	b580      	push	{r7, lr}
 800684a:	b082      	sub	sp, #8
 800684c:	af00      	add	r7, sp, #0
 800684e:	6078      	str	r0, [r7, #4]
	if(huart == &huart1)Uart_Receive_From_PC_ISR(&huart1);
 8006850:	687b      	ldr	r3, [r7, #4]
 8006852:	4a09      	ldr	r2, [pc, #36]	; (8006878 <HAL_UART_RxCpltCallback+0x30>)
 8006854:	4293      	cmp	r3, r2
 8006856:	d103      	bne.n	8006860 <HAL_UART_RxCpltCallback+0x18>
 8006858:	4807      	ldr	r0, [pc, #28]	; (8006878 <HAL_UART_RxCpltCallback+0x30>)
 800685a:	f7fa fcd9 	bl	8001210 <Uart_Receive_From_PC_ISR>
	else if(huart==&huart3)Uart_Receive_Thunderboard_ISR(&huart3, &huart1);
}
 800685e:	e007      	b.n	8006870 <HAL_UART_RxCpltCallback+0x28>
	else if(huart==&huart3)Uart_Receive_Thunderboard_ISR(&huart3, &huart1);
 8006860:	687b      	ldr	r3, [r7, #4]
 8006862:	4a06      	ldr	r2, [pc, #24]	; (800687c <HAL_UART_RxCpltCallback+0x34>)
 8006864:	4293      	cmp	r3, r2
 8006866:	d103      	bne.n	8006870 <HAL_UART_RxCpltCallback+0x28>
 8006868:	4903      	ldr	r1, [pc, #12]	; (8006878 <HAL_UART_RxCpltCallback+0x30>)
 800686a:	4804      	ldr	r0, [pc, #16]	; (800687c <HAL_UART_RxCpltCallback+0x34>)
 800686c:	f7fd f908 	bl	8003a80 <Uart_Receive_Thunderboard_ISR>
}
 8006870:	bf00      	nop
 8006872:	3708      	adds	r7, #8
 8006874:	46bd      	mov	sp, r7
 8006876:	bd80      	pop	{r7, pc}
 8006878:	20000b74 	.word	0x20000b74
 800687c:	20000bfc 	.word	0x20000bfc

08006880 <Delay>:

void Delay(uint16_t ms)
{
 8006880:	b480      	push	{r7}
 8006882:	b083      	sub	sp, #12
 8006884:	af00      	add	r7, sp, #0
 8006886:	4603      	mov	r3, r0
 8006888:	80fb      	strh	r3, [r7, #6]
	TIM13->CNT=0;
 800688a:	4b08      	ldr	r3, [pc, #32]	; (80068ac <Delay+0x2c>)
 800688c:	2200      	movs	r2, #0
 800688e:	625a      	str	r2, [r3, #36]	; 0x24
	while(1)
	{
		if(__HAL_TIM_GET_COUNTER(&htim13)>ms)break;
 8006890:	4b07      	ldr	r3, [pc, #28]	; (80068b0 <Delay+0x30>)
 8006892:	681b      	ldr	r3, [r3, #0]
 8006894:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006896:	88fb      	ldrh	r3, [r7, #6]
 8006898:	429a      	cmp	r2, r3
 800689a:	d800      	bhi.n	800689e <Delay+0x1e>
 800689c:	e7f8      	b.n	8006890 <Delay+0x10>
 800689e:	bf00      	nop
	}

}
 80068a0:	bf00      	nop
 80068a2:	370c      	adds	r7, #12
 80068a4:	46bd      	mov	sp, r7
 80068a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068aa:	4770      	bx	lr
 80068ac:	40001c00 	.word	0x40001c00
 80068b0:	20000a40 	.word	0x20000a40

080068b4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80068b4:	b580      	push	{r7, lr}
 80068b6:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 80068b8:	b672      	cpsid	i
}
 80068ba:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  TIM3->CCR1=499;
 80068bc:	4b0f      	ldr	r3, [pc, #60]	; (80068fc <Error_Handler+0x48>)
 80068be:	f240 12f3 	movw	r2, #499	; 0x1f3
 80068c2:	635a      	str	r2, [r3, #52]	; 0x34
  TIM3->CCR2=499;
 80068c4:	4b0d      	ldr	r3, [pc, #52]	; (80068fc <Error_Handler+0x48>)
 80068c6:	f240 12f3 	movw	r2, #499	; 0x1f3
 80068ca:	639a      	str	r2, [r3, #56]	; 0x38
  LED_B(1);
 80068cc:	2200      	movs	r2, #0
 80068ce:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80068d2:	480b      	ldr	r0, [pc, #44]	; (8006900 <Error_Handler+0x4c>)
 80068d4:	f002 fce4 	bl	80092a0 <HAL_GPIO_WritePin>
  LED_G(1);
 80068d8:	2200      	movs	r2, #0
 80068da:	2102      	movs	r1, #2
 80068dc:	4808      	ldr	r0, [pc, #32]	; (8006900 <Error_Handler+0x4c>)
 80068de:	f002 fcdf 	bl	80092a0 <HAL_GPIO_WritePin>
  LED_R(1);
 80068e2:	2200      	movs	r2, #0
 80068e4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80068e8:	4805      	ldr	r0, [pc, #20]	; (8006900 <Error_Handler+0x4c>)
 80068ea:	f002 fcd9 	bl	80092a0 <HAL_GPIO_WritePin>
  LED_Y(1);
 80068ee:	2200      	movs	r2, #0
 80068f0:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80068f4:	4802      	ldr	r0, [pc, #8]	; (8006900 <Error_Handler+0x4c>)
 80068f6:	f002 fcd3 	bl	80092a0 <HAL_GPIO_WritePin>
  while (1)
 80068fa:	e7fe      	b.n	80068fa <Error_Handler+0x46>
 80068fc:	40000400 	.word	0x40000400
 8006900:	40020400 	.word	0x40020400

08006904 <Remote_Control_Init>:
 8006904:	b580      	push	{r7, lr}
 8006906:	b082      	sub	sp, #8
 8006908:	af00      	add	r7, sp, #0
 800690a:	6078      	str	r0, [r7, #4]
 800690c:	6039      	str	r1, [r7, #0]
 800690e:	4b0a      	ldr	r3, [pc, #40]	; (8006938 <Remote_Control_Init+0x34>)
 8006910:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8006914:	601a      	str	r2, [r3, #0]
 8006916:	4b08      	ldr	r3, [pc, #32]	; (8006938 <Remote_Control_Init+0x34>)
 8006918:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800691c:	605a      	str	r2, [r3, #4]
 800691e:	4b06      	ldr	r3, [pc, #24]	; (8006938 <Remote_Control_Init+0x34>)
 8006920:	2200      	movs	r2, #0
 8006922:	609a      	str	r2, [r3, #8]
 8006924:	2303      	movs	r3, #3
 8006926:	4a04      	ldr	r2, [pc, #16]	; (8006938 <Remote_Control_Init+0x34>)
 8006928:	6839      	ldr	r1, [r7, #0]
 800692a:	6878      	ldr	r0, [r7, #4]
 800692c:	f003 fd70 	bl	800a410 <HAL_TIM_IC_Start_DMA>
 8006930:	bf00      	nop
 8006932:	3708      	adds	r7, #8
 8006934:	46bd      	mov	sp, r7
 8006936:	bd80      	pop	{r7, pc}
 8006938:	20000c44 	.word	0x20000c44

0800693c <Remote_Control_Task>:
 800693c:	b580      	push	{r7, lr}
 800693e:	b084      	sub	sp, #16
 8006940:	af00      	add	r7, sp, #0
 8006942:	60f8      	str	r0, [r7, #12]
 8006944:	60b9      	str	r1, [r7, #8]
 8006946:	607a      	str	r2, [r7, #4]
 8006948:	603b      	str	r3, [r7, #0]
 800694a:	4b50      	ldr	r3, [pc, #320]	; (8006a8c <Remote_Control_Task+0x150>)
 800694c:	681b      	ldr	r3, [r3, #0]
 800694e:	683a      	ldr	r2, [r7, #0]
 8006950:	429a      	cmp	r2, r3
 8006952:	f0c0 8096 	bcc.w	8006a82 <Remote_Control_Task+0x146>
 8006956:	683a      	ldr	r2, [r7, #0]
 8006958:	69bb      	ldr	r3, [r7, #24]
 800695a:	4413      	add	r3, r2
 800695c:	4a4b      	ldr	r2, [pc, #300]	; (8006a8c <Remote_Control_Task+0x150>)
 800695e:	6013      	str	r3, [r2, #0]
 8006960:	201e      	movs	r0, #30
 8006962:	f001 fcc6 	bl	80082f2 <HAL_NVIC_DisableIRQ>
 8006966:	4b4a      	ldr	r3, [pc, #296]	; (8006a90 <Remote_Control_Task+0x154>)
 8006968:	685a      	ldr	r2, [r3, #4]
 800696a:	4b49      	ldr	r3, [pc, #292]	; (8006a90 <Remote_Control_Task+0x154>)
 800696c:	681b      	ldr	r3, [r3, #0]
 800696e:	1ad3      	subs	r3, r2, r3
 8006970:	2b00      	cmp	r3, #0
 8006972:	bfb8      	it	lt
 8006974:	425b      	neglt	r3, r3
 8006976:	4a47      	ldr	r2, [pc, #284]	; (8006a94 <Remote_Control_Task+0x158>)
 8006978:	6013      	str	r3, [r2, #0]
 800697a:	4b45      	ldr	r3, [pc, #276]	; (8006a90 <Remote_Control_Task+0x154>)
 800697c:	689a      	ldr	r2, [r3, #8]
 800697e:	4b44      	ldr	r3, [pc, #272]	; (8006a90 <Remote_Control_Task+0x154>)
 8006980:	685b      	ldr	r3, [r3, #4]
 8006982:	1ad3      	subs	r3, r2, r3
 8006984:	2b00      	cmp	r3, #0
 8006986:	bfb8      	it	lt
 8006988:	425b      	neglt	r3, r3
 800698a:	4a43      	ldr	r2, [pc, #268]	; (8006a98 <Remote_Control_Task+0x15c>)
 800698c:	6013      	str	r3, [r2, #0]
 800698e:	4b40      	ldr	r3, [pc, #256]	; (8006a90 <Remote_Control_Task+0x154>)
 8006990:	681a      	ldr	r2, [r3, #0]
 8006992:	4b3f      	ldr	r3, [pc, #252]	; (8006a90 <Remote_Control_Task+0x154>)
 8006994:	689b      	ldr	r3, [r3, #8]
 8006996:	1ad3      	subs	r3, r2, r3
 8006998:	2b00      	cmp	r3, #0
 800699a:	bfb8      	it	lt
 800699c:	425b      	neglt	r3, r3
 800699e:	4a3f      	ldr	r2, [pc, #252]	; (8006a9c <Remote_Control_Task+0x160>)
 80069a0:	6013      	str	r3, [r2, #0]
 80069a2:	201e      	movs	r0, #30
 80069a4:	f001 fc97 	bl	80082d6 <HAL_NVIC_EnableIRQ>
 80069a8:	4b3a      	ldr	r3, [pc, #232]	; (8006a94 <Remote_Control_Task+0x158>)
 80069aa:	681b      	ldr	r3, [r3, #0]
 80069ac:	f241 3288 	movw	r2, #5000	; 0x1388
 80069b0:	4293      	cmp	r3, r2
 80069b2:	dd06      	ble.n	80069c2 <Remote_Control_Task+0x86>
 80069b4:	4b37      	ldr	r3, [pc, #220]	; (8006a94 <Remote_Control_Task+0x158>)
 80069b6:	681b      	ldr	r3, [r3, #0]
 80069b8:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 80069bc:	33ff      	adds	r3, #255	; 0xff
 80069be:	4a35      	ldr	r2, [pc, #212]	; (8006a94 <Remote_Control_Task+0x158>)
 80069c0:	6013      	str	r3, [r2, #0]
 80069c2:	4b35      	ldr	r3, [pc, #212]	; (8006a98 <Remote_Control_Task+0x15c>)
 80069c4:	681b      	ldr	r3, [r3, #0]
 80069c6:	f241 3288 	movw	r2, #5000	; 0x1388
 80069ca:	4293      	cmp	r3, r2
 80069cc:	dd06      	ble.n	80069dc <Remote_Control_Task+0xa0>
 80069ce:	4b32      	ldr	r3, [pc, #200]	; (8006a98 <Remote_Control_Task+0x15c>)
 80069d0:	681b      	ldr	r3, [r3, #0]
 80069d2:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 80069d6:	33ff      	adds	r3, #255	; 0xff
 80069d8:	4a2f      	ldr	r2, [pc, #188]	; (8006a98 <Remote_Control_Task+0x15c>)
 80069da:	6013      	str	r3, [r2, #0]
 80069dc:	4b2f      	ldr	r3, [pc, #188]	; (8006a9c <Remote_Control_Task+0x160>)
 80069de:	681b      	ldr	r3, [r3, #0]
 80069e0:	f241 3288 	movw	r2, #5000	; 0x1388
 80069e4:	4293      	cmp	r3, r2
 80069e6:	dd06      	ble.n	80069f6 <Remote_Control_Task+0xba>
 80069e8:	4b2c      	ldr	r3, [pc, #176]	; (8006a9c <Remote_Control_Task+0x160>)
 80069ea:	681b      	ldr	r3, [r3, #0]
 80069ec:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 80069f0:	33ff      	adds	r3, #255	; 0xff
 80069f2:	4a2a      	ldr	r2, [pc, #168]	; (8006a9c <Remote_Control_Task+0x160>)
 80069f4:	6013      	str	r3, [r2, #0]
 80069f6:	4b27      	ldr	r3, [pc, #156]	; (8006a94 <Remote_Control_Task+0x158>)
 80069f8:	681a      	ldr	r2, [r3, #0]
 80069fa:	4b27      	ldr	r3, [pc, #156]	; (8006a98 <Remote_Control_Task+0x15c>)
 80069fc:	681b      	ldr	r3, [r3, #0]
 80069fe:	429a      	cmp	r2, r3
 8006a00:	da0b      	bge.n	8006a1a <Remote_Control_Task+0xde>
 8006a02:	4b24      	ldr	r3, [pc, #144]	; (8006a94 <Remote_Control_Task+0x158>)
 8006a04:	681a      	ldr	r2, [r3, #0]
 8006a06:	4b25      	ldr	r3, [pc, #148]	; (8006a9c <Remote_Control_Task+0x160>)
 8006a08:	681b      	ldr	r3, [r3, #0]
 8006a0a:	429a      	cmp	r2, r3
 8006a0c:	da05      	bge.n	8006a1a <Remote_Control_Task+0xde>
 8006a0e:	4b21      	ldr	r3, [pc, #132]	; (8006a94 <Remote_Control_Task+0x158>)
 8006a10:	681b      	ldr	r3, [r3, #0]
 8006a12:	461a      	mov	r2, r3
 8006a14:	4b22      	ldr	r3, [pc, #136]	; (8006aa0 <Remote_Control_Task+0x164>)
 8006a16:	601a      	str	r2, [r3, #0]
 8006a18:	e016      	b.n	8006a48 <Remote_Control_Task+0x10c>
 8006a1a:	4b1f      	ldr	r3, [pc, #124]	; (8006a98 <Remote_Control_Task+0x15c>)
 8006a1c:	681a      	ldr	r2, [r3, #0]
 8006a1e:	4b1d      	ldr	r3, [pc, #116]	; (8006a94 <Remote_Control_Task+0x158>)
 8006a20:	681b      	ldr	r3, [r3, #0]
 8006a22:	429a      	cmp	r2, r3
 8006a24:	da0b      	bge.n	8006a3e <Remote_Control_Task+0x102>
 8006a26:	4b1c      	ldr	r3, [pc, #112]	; (8006a98 <Remote_Control_Task+0x15c>)
 8006a28:	681a      	ldr	r2, [r3, #0]
 8006a2a:	4b1c      	ldr	r3, [pc, #112]	; (8006a9c <Remote_Control_Task+0x160>)
 8006a2c:	681b      	ldr	r3, [r3, #0]
 8006a2e:	429a      	cmp	r2, r3
 8006a30:	da05      	bge.n	8006a3e <Remote_Control_Task+0x102>
 8006a32:	4b19      	ldr	r3, [pc, #100]	; (8006a98 <Remote_Control_Task+0x15c>)
 8006a34:	681b      	ldr	r3, [r3, #0]
 8006a36:	461a      	mov	r2, r3
 8006a38:	4b19      	ldr	r3, [pc, #100]	; (8006aa0 <Remote_Control_Task+0x164>)
 8006a3a:	601a      	str	r2, [r3, #0]
 8006a3c:	e004      	b.n	8006a48 <Remote_Control_Task+0x10c>
 8006a3e:	4b17      	ldr	r3, [pc, #92]	; (8006a9c <Remote_Control_Task+0x160>)
 8006a40:	681b      	ldr	r3, [r3, #0]
 8006a42:	461a      	mov	r2, r3
 8006a44:	4b16      	ldr	r3, [pc, #88]	; (8006aa0 <Remote_Control_Task+0x164>)
 8006a46:	601a      	str	r2, [r3, #0]
 8006a48:	4b15      	ldr	r3, [pc, #84]	; (8006aa0 <Remote_Control_Task+0x164>)
 8006a4a:	681b      	ldr	r3, [r3, #0]
 8006a4c:	2b46      	cmp	r3, #70	; 0x46
 8006a4e:	d903      	bls.n	8006a58 <Remote_Control_Task+0x11c>
 8006a50:	4b13      	ldr	r3, [pc, #76]	; (8006aa0 <Remote_Control_Task+0x164>)
 8006a52:	681b      	ldr	r3, [r3, #0]
 8006a54:	2b63      	cmp	r3, #99	; 0x63
 8006a56:	d904      	bls.n	8006a62 <Remote_Control_Task+0x126>
 8006a58:	4b11      	ldr	r3, [pc, #68]	; (8006aa0 <Remote_Control_Task+0x164>)
 8006a5a:	681b      	ldr	r3, [r3, #0]
 8006a5c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8006a60:	d103      	bne.n	8006a6a <Remote_Control_Task+0x12e>
 8006a62:	4b10      	ldr	r3, [pc, #64]	; (8006aa4 <Remote_Control_Task+0x168>)
 8006a64:	2200      	movs	r2, #0
 8006a66:	701a      	strb	r2, [r3, #0]
 8006a68:	e00c      	b.n	8006a84 <Remote_Control_Task+0x148>
 8006a6a:	4b0d      	ldr	r3, [pc, #52]	; (8006aa0 <Remote_Control_Task+0x164>)
 8006a6c:	681b      	ldr	r3, [r3, #0]
 8006a6e:	2b46      	cmp	r3, #70	; 0x46
 8006a70:	d803      	bhi.n	8006a7a <Remote_Control_Task+0x13e>
 8006a72:	4b0c      	ldr	r3, [pc, #48]	; (8006aa4 <Remote_Control_Task+0x168>)
 8006a74:	2201      	movs	r2, #1
 8006a76:	701a      	strb	r2, [r3, #0]
 8006a78:	e004      	b.n	8006a84 <Remote_Control_Task+0x148>
 8006a7a:	4b0a      	ldr	r3, [pc, #40]	; (8006aa4 <Remote_Control_Task+0x168>)
 8006a7c:	2202      	movs	r2, #2
 8006a7e:	701a      	strb	r2, [r3, #0]
 8006a80:	e000      	b.n	8006a84 <Remote_Control_Task+0x148>
 8006a82:	bf00      	nop
 8006a84:	3710      	adds	r7, #16
 8006a86:	46bd      	mov	sp, r7
 8006a88:	bd80      	pop	{r7, pc}
 8006a8a:	bf00      	nop
 8006a8c:	20000c50 	.word	0x20000c50
 8006a90:	20000c44 	.word	0x20000c44
 8006a94:	20000124 	.word	0x20000124
 8006a98:	20000128 	.word	0x20000128
 8006a9c:	2000012c 	.word	0x2000012c
 8006aa0:	20000130 	.word	0x20000130
 8006aa4:	20000c40 	.word	0x20000c40

08006aa8 <HAL_MspInit>:
 8006aa8:	b580      	push	{r7, lr}
 8006aaa:	b082      	sub	sp, #8
 8006aac:	af00      	add	r7, sp, #0
 8006aae:	2300      	movs	r3, #0
 8006ab0:	607b      	str	r3, [r7, #4]
 8006ab2:	4b10      	ldr	r3, [pc, #64]	; (8006af4 <HAL_MspInit+0x4c>)
 8006ab4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006ab6:	4a0f      	ldr	r2, [pc, #60]	; (8006af4 <HAL_MspInit+0x4c>)
 8006ab8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8006abc:	6453      	str	r3, [r2, #68]	; 0x44
 8006abe:	4b0d      	ldr	r3, [pc, #52]	; (8006af4 <HAL_MspInit+0x4c>)
 8006ac0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006ac2:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8006ac6:	607b      	str	r3, [r7, #4]
 8006ac8:	687b      	ldr	r3, [r7, #4]
 8006aca:	2300      	movs	r3, #0
 8006acc:	603b      	str	r3, [r7, #0]
 8006ace:	4b09      	ldr	r3, [pc, #36]	; (8006af4 <HAL_MspInit+0x4c>)
 8006ad0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006ad2:	4a08      	ldr	r2, [pc, #32]	; (8006af4 <HAL_MspInit+0x4c>)
 8006ad4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8006ad8:	6413      	str	r3, [r2, #64]	; 0x40
 8006ada:	4b06      	ldr	r3, [pc, #24]	; (8006af4 <HAL_MspInit+0x4c>)
 8006adc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006ade:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006ae2:	603b      	str	r3, [r7, #0]
 8006ae4:	683b      	ldr	r3, [r7, #0]
 8006ae6:	2007      	movs	r0, #7
 8006ae8:	f001 fbce 	bl	8008288 <HAL_NVIC_SetPriorityGrouping>
 8006aec:	bf00      	nop
 8006aee:	3708      	adds	r7, #8
 8006af0:	46bd      	mov	sp, r7
 8006af2:	bd80      	pop	{r7, pc}
 8006af4:	40023800 	.word	0x40023800

08006af8 <HAL_ADC_MspInit>:
 8006af8:	b580      	push	{r7, lr}
 8006afa:	b08c      	sub	sp, #48	; 0x30
 8006afc:	af00      	add	r7, sp, #0
 8006afe:	6078      	str	r0, [r7, #4]
 8006b00:	f107 031c 	add.w	r3, r7, #28
 8006b04:	2200      	movs	r2, #0
 8006b06:	601a      	str	r2, [r3, #0]
 8006b08:	605a      	str	r2, [r3, #4]
 8006b0a:	609a      	str	r2, [r3, #8]
 8006b0c:	60da      	str	r2, [r3, #12]
 8006b0e:	611a      	str	r2, [r3, #16]
 8006b10:	687b      	ldr	r3, [r7, #4]
 8006b12:	681b      	ldr	r3, [r3, #0]
 8006b14:	4a2e      	ldr	r2, [pc, #184]	; (8006bd0 <HAL_ADC_MspInit+0xd8>)
 8006b16:	4293      	cmp	r3, r2
 8006b18:	d128      	bne.n	8006b6c <HAL_ADC_MspInit+0x74>
 8006b1a:	2300      	movs	r3, #0
 8006b1c:	61bb      	str	r3, [r7, #24]
 8006b1e:	4b2d      	ldr	r3, [pc, #180]	; (8006bd4 <HAL_ADC_MspInit+0xdc>)
 8006b20:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006b22:	4a2c      	ldr	r2, [pc, #176]	; (8006bd4 <HAL_ADC_MspInit+0xdc>)
 8006b24:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006b28:	6453      	str	r3, [r2, #68]	; 0x44
 8006b2a:	4b2a      	ldr	r3, [pc, #168]	; (8006bd4 <HAL_ADC_MspInit+0xdc>)
 8006b2c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006b2e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006b32:	61bb      	str	r3, [r7, #24]
 8006b34:	69bb      	ldr	r3, [r7, #24]
 8006b36:	2300      	movs	r3, #0
 8006b38:	617b      	str	r3, [r7, #20]
 8006b3a:	4b26      	ldr	r3, [pc, #152]	; (8006bd4 <HAL_ADC_MspInit+0xdc>)
 8006b3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006b3e:	4a25      	ldr	r2, [pc, #148]	; (8006bd4 <HAL_ADC_MspInit+0xdc>)
 8006b40:	f043 0302 	orr.w	r3, r3, #2
 8006b44:	6313      	str	r3, [r2, #48]	; 0x30
 8006b46:	4b23      	ldr	r3, [pc, #140]	; (8006bd4 <HAL_ADC_MspInit+0xdc>)
 8006b48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006b4a:	f003 0302 	and.w	r3, r3, #2
 8006b4e:	617b      	str	r3, [r7, #20]
 8006b50:	697b      	ldr	r3, [r7, #20]
 8006b52:	2301      	movs	r3, #1
 8006b54:	61fb      	str	r3, [r7, #28]
 8006b56:	2303      	movs	r3, #3
 8006b58:	623b      	str	r3, [r7, #32]
 8006b5a:	2300      	movs	r3, #0
 8006b5c:	627b      	str	r3, [r7, #36]	; 0x24
 8006b5e:	f107 031c 	add.w	r3, r7, #28
 8006b62:	4619      	mov	r1, r3
 8006b64:	481c      	ldr	r0, [pc, #112]	; (8006bd8 <HAL_ADC_MspInit+0xe0>)
 8006b66:	f002 f9ef 	bl	8008f48 <HAL_GPIO_Init>
 8006b6a:	e02c      	b.n	8006bc6 <HAL_ADC_MspInit+0xce>
 8006b6c:	687b      	ldr	r3, [r7, #4]
 8006b6e:	681b      	ldr	r3, [r3, #0]
 8006b70:	4a1a      	ldr	r2, [pc, #104]	; (8006bdc <HAL_ADC_MspInit+0xe4>)
 8006b72:	4293      	cmp	r3, r2
 8006b74:	d127      	bne.n	8006bc6 <HAL_ADC_MspInit+0xce>
 8006b76:	2300      	movs	r3, #0
 8006b78:	613b      	str	r3, [r7, #16]
 8006b7a:	4b16      	ldr	r3, [pc, #88]	; (8006bd4 <HAL_ADC_MspInit+0xdc>)
 8006b7c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006b7e:	4a15      	ldr	r2, [pc, #84]	; (8006bd4 <HAL_ADC_MspInit+0xdc>)
 8006b80:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006b84:	6453      	str	r3, [r2, #68]	; 0x44
 8006b86:	4b13      	ldr	r3, [pc, #76]	; (8006bd4 <HAL_ADC_MspInit+0xdc>)
 8006b88:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006b8a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8006b8e:	613b      	str	r3, [r7, #16]
 8006b90:	693b      	ldr	r3, [r7, #16]
 8006b92:	2300      	movs	r3, #0
 8006b94:	60fb      	str	r3, [r7, #12]
 8006b96:	4b0f      	ldr	r3, [pc, #60]	; (8006bd4 <HAL_ADC_MspInit+0xdc>)
 8006b98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006b9a:	4a0e      	ldr	r2, [pc, #56]	; (8006bd4 <HAL_ADC_MspInit+0xdc>)
 8006b9c:	f043 0304 	orr.w	r3, r3, #4
 8006ba0:	6313      	str	r3, [r2, #48]	; 0x30
 8006ba2:	4b0c      	ldr	r3, [pc, #48]	; (8006bd4 <HAL_ADC_MspInit+0xdc>)
 8006ba4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006ba6:	f003 0304 	and.w	r3, r3, #4
 8006baa:	60fb      	str	r3, [r7, #12]
 8006bac:	68fb      	ldr	r3, [r7, #12]
 8006bae:	2308      	movs	r3, #8
 8006bb0:	61fb      	str	r3, [r7, #28]
 8006bb2:	2303      	movs	r3, #3
 8006bb4:	623b      	str	r3, [r7, #32]
 8006bb6:	2300      	movs	r3, #0
 8006bb8:	627b      	str	r3, [r7, #36]	; 0x24
 8006bba:	f107 031c 	add.w	r3, r7, #28
 8006bbe:	4619      	mov	r1, r3
 8006bc0:	4807      	ldr	r0, [pc, #28]	; (8006be0 <HAL_ADC_MspInit+0xe8>)
 8006bc2:	f002 f9c1 	bl	8008f48 <HAL_GPIO_Init>
 8006bc6:	bf00      	nop
 8006bc8:	3730      	adds	r7, #48	; 0x30
 8006bca:	46bd      	mov	sp, r7
 8006bcc:	bd80      	pop	{r7, pc}
 8006bce:	bf00      	nop
 8006bd0:	40012000 	.word	0x40012000
 8006bd4:	40023800 	.word	0x40023800
 8006bd8:	40020400 	.word	0x40020400
 8006bdc:	40012100 	.word	0x40012100
 8006be0:	40020800 	.word	0x40020800

08006be4 <HAL_TIM_Base_MspInit>:
 8006be4:	b580      	push	{r7, lr}
 8006be6:	b090      	sub	sp, #64	; 0x40
 8006be8:	af00      	add	r7, sp, #0
 8006bea:	6078      	str	r0, [r7, #4]
 8006bec:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006bf0:	2200      	movs	r2, #0
 8006bf2:	601a      	str	r2, [r3, #0]
 8006bf4:	605a      	str	r2, [r3, #4]
 8006bf6:	609a      	str	r2, [r3, #8]
 8006bf8:	60da      	str	r2, [r3, #12]
 8006bfa:	611a      	str	r2, [r3, #16]
 8006bfc:	687b      	ldr	r3, [r7, #4]
 8006bfe:	681b      	ldr	r3, [r3, #0]
 8006c00:	4a72      	ldr	r2, [pc, #456]	; (8006dcc <HAL_TIM_Base_MspInit+0x1e8>)
 8006c02:	4293      	cmp	r3, r2
 8006c04:	d10e      	bne.n	8006c24 <HAL_TIM_Base_MspInit+0x40>
 8006c06:	2300      	movs	r3, #0
 8006c08:	62bb      	str	r3, [r7, #40]	; 0x28
 8006c0a:	4b71      	ldr	r3, [pc, #452]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006c0c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006c0e:	4a70      	ldr	r2, [pc, #448]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006c10:	f043 0301 	orr.w	r3, r3, #1
 8006c14:	6453      	str	r3, [r2, #68]	; 0x44
 8006c16:	4b6e      	ldr	r3, [pc, #440]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006c18:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006c1a:	f003 0301 	and.w	r3, r3, #1
 8006c1e:	62bb      	str	r3, [r7, #40]	; 0x28
 8006c20:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006c22:	e0cf      	b.n	8006dc4 <HAL_TIM_Base_MspInit+0x1e0>
 8006c24:	687b      	ldr	r3, [r7, #4]
 8006c26:	681b      	ldr	r3, [r3, #0]
 8006c28:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006c2c:	d116      	bne.n	8006c5c <HAL_TIM_Base_MspInit+0x78>
 8006c2e:	2300      	movs	r3, #0
 8006c30:	627b      	str	r3, [r7, #36]	; 0x24
 8006c32:	4b67      	ldr	r3, [pc, #412]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006c34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c36:	4a66      	ldr	r2, [pc, #408]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006c38:	f043 0301 	orr.w	r3, r3, #1
 8006c3c:	6413      	str	r3, [r2, #64]	; 0x40
 8006c3e:	4b64      	ldr	r3, [pc, #400]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006c40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c42:	f003 0301 	and.w	r3, r3, #1
 8006c46:	627b      	str	r3, [r7, #36]	; 0x24
 8006c48:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006c4a:	2200      	movs	r2, #0
 8006c4c:	2100      	movs	r1, #0
 8006c4e:	201c      	movs	r0, #28
 8006c50:	f001 fb25 	bl	800829e <HAL_NVIC_SetPriority>
 8006c54:	201c      	movs	r0, #28
 8006c56:	f001 fb3e 	bl	80082d6 <HAL_NVIC_EnableIRQ>
 8006c5a:	e0b3      	b.n	8006dc4 <HAL_TIM_Base_MspInit+0x1e0>
 8006c5c:	687b      	ldr	r3, [r7, #4]
 8006c5e:	681b      	ldr	r3, [r3, #0]
 8006c60:	4a5c      	ldr	r2, [pc, #368]	; (8006dd4 <HAL_TIM_Base_MspInit+0x1f0>)
 8006c62:	4293      	cmp	r3, r2
 8006c64:	d10e      	bne.n	8006c84 <HAL_TIM_Base_MspInit+0xa0>
 8006c66:	2300      	movs	r3, #0
 8006c68:	623b      	str	r3, [r7, #32]
 8006c6a:	4b59      	ldr	r3, [pc, #356]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006c6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c6e:	4a58      	ldr	r2, [pc, #352]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006c70:	f043 0302 	orr.w	r3, r3, #2
 8006c74:	6413      	str	r3, [r2, #64]	; 0x40
 8006c76:	4b56      	ldr	r3, [pc, #344]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006c78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c7a:	f003 0302 	and.w	r3, r3, #2
 8006c7e:	623b      	str	r3, [r7, #32]
 8006c80:	6a3b      	ldr	r3, [r7, #32]
 8006c82:	e09f      	b.n	8006dc4 <HAL_TIM_Base_MspInit+0x1e0>
 8006c84:	687b      	ldr	r3, [r7, #4]
 8006c86:	681b      	ldr	r3, [r3, #0]
 8006c88:	4a53      	ldr	r2, [pc, #332]	; (8006dd8 <HAL_TIM_Base_MspInit+0x1f4>)
 8006c8a:	4293      	cmp	r3, r2
 8006c8c:	d15f      	bne.n	8006d4e <HAL_TIM_Base_MspInit+0x16a>
 8006c8e:	2300      	movs	r3, #0
 8006c90:	61fb      	str	r3, [r7, #28]
 8006c92:	4b4f      	ldr	r3, [pc, #316]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006c94:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c96:	4a4e      	ldr	r2, [pc, #312]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006c98:	f043 0304 	orr.w	r3, r3, #4
 8006c9c:	6413      	str	r3, [r2, #64]	; 0x40
 8006c9e:	4b4c      	ldr	r3, [pc, #304]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006ca0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006ca2:	f003 0304 	and.w	r3, r3, #4
 8006ca6:	61fb      	str	r3, [r7, #28]
 8006ca8:	69fb      	ldr	r3, [r7, #28]
 8006caa:	2300      	movs	r3, #0
 8006cac:	61bb      	str	r3, [r7, #24]
 8006cae:	4b48      	ldr	r3, [pc, #288]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006cb0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006cb2:	4a47      	ldr	r2, [pc, #284]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006cb4:	f043 0302 	orr.w	r3, r3, #2
 8006cb8:	6313      	str	r3, [r2, #48]	; 0x30
 8006cba:	4b45      	ldr	r3, [pc, #276]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006cbc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006cbe:	f003 0302 	and.w	r3, r3, #2
 8006cc2:	61bb      	str	r3, [r7, #24]
 8006cc4:	69bb      	ldr	r3, [r7, #24]
 8006cc6:	f44f 7340 	mov.w	r3, #768	; 0x300
 8006cca:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006ccc:	2302      	movs	r3, #2
 8006cce:	633b      	str	r3, [r7, #48]	; 0x30
 8006cd0:	2300      	movs	r3, #0
 8006cd2:	637b      	str	r3, [r7, #52]	; 0x34
 8006cd4:	2300      	movs	r3, #0
 8006cd6:	63bb      	str	r3, [r7, #56]	; 0x38
 8006cd8:	2302      	movs	r3, #2
 8006cda:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006cdc:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006ce0:	4619      	mov	r1, r3
 8006ce2:	483e      	ldr	r0, [pc, #248]	; (8006ddc <HAL_TIM_Base_MspInit+0x1f8>)
 8006ce4:	f002 f930 	bl	8008f48 <HAL_GPIO_Init>
 8006ce8:	4b3d      	ldr	r3, [pc, #244]	; (8006de0 <HAL_TIM_Base_MspInit+0x1fc>)
 8006cea:	4a3e      	ldr	r2, [pc, #248]	; (8006de4 <HAL_TIM_Base_MspInit+0x200>)
 8006cec:	601a      	str	r2, [r3, #0]
 8006cee:	4b3c      	ldr	r3, [pc, #240]	; (8006de0 <HAL_TIM_Base_MspInit+0x1fc>)
 8006cf0:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8006cf4:	605a      	str	r2, [r3, #4]
 8006cf6:	4b3a      	ldr	r3, [pc, #232]	; (8006de0 <HAL_TIM_Base_MspInit+0x1fc>)
 8006cf8:	2200      	movs	r2, #0
 8006cfa:	609a      	str	r2, [r3, #8]
 8006cfc:	4b38      	ldr	r3, [pc, #224]	; (8006de0 <HAL_TIM_Base_MspInit+0x1fc>)
 8006cfe:	2200      	movs	r2, #0
 8006d00:	60da      	str	r2, [r3, #12]
 8006d02:	4b37      	ldr	r3, [pc, #220]	; (8006de0 <HAL_TIM_Base_MspInit+0x1fc>)
 8006d04:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8006d08:	611a      	str	r2, [r3, #16]
 8006d0a:	4b35      	ldr	r3, [pc, #212]	; (8006de0 <HAL_TIM_Base_MspInit+0x1fc>)
 8006d0c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8006d10:	615a      	str	r2, [r3, #20]
 8006d12:	4b33      	ldr	r3, [pc, #204]	; (8006de0 <HAL_TIM_Base_MspInit+0x1fc>)
 8006d14:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8006d18:	619a      	str	r2, [r3, #24]
 8006d1a:	4b31      	ldr	r3, [pc, #196]	; (8006de0 <HAL_TIM_Base_MspInit+0x1fc>)
 8006d1c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006d20:	61da      	str	r2, [r3, #28]
 8006d22:	4b2f      	ldr	r3, [pc, #188]	; (8006de0 <HAL_TIM_Base_MspInit+0x1fc>)
 8006d24:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8006d28:	621a      	str	r2, [r3, #32]
 8006d2a:	4b2d      	ldr	r3, [pc, #180]	; (8006de0 <HAL_TIM_Base_MspInit+0x1fc>)
 8006d2c:	2200      	movs	r2, #0
 8006d2e:	625a      	str	r2, [r3, #36]	; 0x24
 8006d30:	482b      	ldr	r0, [pc, #172]	; (8006de0 <HAL_TIM_Base_MspInit+0x1fc>)
 8006d32:	f001 faf9 	bl	8008328 <HAL_DMA_Init>
 8006d36:	4603      	mov	r3, r0
 8006d38:	2b00      	cmp	r3, #0
 8006d3a:	d001      	beq.n	8006d40 <HAL_TIM_Base_MspInit+0x15c>
 8006d3c:	f7ff fdba 	bl	80068b4 <Error_Handler>
 8006d40:	687b      	ldr	r3, [r7, #4]
 8006d42:	4a27      	ldr	r2, [pc, #156]	; (8006de0 <HAL_TIM_Base_MspInit+0x1fc>)
 8006d44:	62da      	str	r2, [r3, #44]	; 0x2c
 8006d46:	4a26      	ldr	r2, [pc, #152]	; (8006de0 <HAL_TIM_Base_MspInit+0x1fc>)
 8006d48:	687b      	ldr	r3, [r7, #4]
 8006d4a:	6393      	str	r3, [r2, #56]	; 0x38
 8006d4c:	e03a      	b.n	8006dc4 <HAL_TIM_Base_MspInit+0x1e0>
 8006d4e:	687b      	ldr	r3, [r7, #4]
 8006d50:	681b      	ldr	r3, [r3, #0]
 8006d52:	4a25      	ldr	r2, [pc, #148]	; (8006de8 <HAL_TIM_Base_MspInit+0x204>)
 8006d54:	4293      	cmp	r3, r2
 8006d56:	d10e      	bne.n	8006d76 <HAL_TIM_Base_MspInit+0x192>
 8006d58:	2300      	movs	r3, #0
 8006d5a:	617b      	str	r3, [r7, #20]
 8006d5c:	4b1c      	ldr	r3, [pc, #112]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006d5e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d60:	4a1b      	ldr	r2, [pc, #108]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006d62:	f043 0308 	orr.w	r3, r3, #8
 8006d66:	6413      	str	r3, [r2, #64]	; 0x40
 8006d68:	4b19      	ldr	r3, [pc, #100]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006d6a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d6c:	f003 0308 	and.w	r3, r3, #8
 8006d70:	617b      	str	r3, [r7, #20]
 8006d72:	697b      	ldr	r3, [r7, #20]
 8006d74:	e026      	b.n	8006dc4 <HAL_TIM_Base_MspInit+0x1e0>
 8006d76:	687b      	ldr	r3, [r7, #4]
 8006d78:	681b      	ldr	r3, [r3, #0]
 8006d7a:	4a1c      	ldr	r2, [pc, #112]	; (8006dec <HAL_TIM_Base_MspInit+0x208>)
 8006d7c:	4293      	cmp	r3, r2
 8006d7e:	d10e      	bne.n	8006d9e <HAL_TIM_Base_MspInit+0x1ba>
 8006d80:	2300      	movs	r3, #0
 8006d82:	613b      	str	r3, [r7, #16]
 8006d84:	4b12      	ldr	r3, [pc, #72]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006d86:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d88:	4a11      	ldr	r2, [pc, #68]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006d8a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006d8e:	6413      	str	r3, [r2, #64]	; 0x40
 8006d90:	4b0f      	ldr	r3, [pc, #60]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006d92:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d94:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006d98:	613b      	str	r3, [r7, #16]
 8006d9a:	693b      	ldr	r3, [r7, #16]
 8006d9c:	e012      	b.n	8006dc4 <HAL_TIM_Base_MspInit+0x1e0>
 8006d9e:	687b      	ldr	r3, [r7, #4]
 8006da0:	681b      	ldr	r3, [r3, #0]
 8006da2:	4a13      	ldr	r2, [pc, #76]	; (8006df0 <HAL_TIM_Base_MspInit+0x20c>)
 8006da4:	4293      	cmp	r3, r2
 8006da6:	d10d      	bne.n	8006dc4 <HAL_TIM_Base_MspInit+0x1e0>
 8006da8:	2300      	movs	r3, #0
 8006daa:	60fb      	str	r3, [r7, #12]
 8006dac:	4b08      	ldr	r3, [pc, #32]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006dae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006db0:	4a07      	ldr	r2, [pc, #28]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006db2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006db6:	6413      	str	r3, [r2, #64]	; 0x40
 8006db8:	4b05      	ldr	r3, [pc, #20]	; (8006dd0 <HAL_TIM_Base_MspInit+0x1ec>)
 8006dba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006dbc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006dc0:	60fb      	str	r3, [r7, #12]
 8006dc2:	68fb      	ldr	r3, [r7, #12]
 8006dc4:	bf00      	nop
 8006dc6:	3740      	adds	r7, #64	; 0x40
 8006dc8:	46bd      	mov	sp, r7
 8006dca:	bd80      	pop	{r7, pc}
 8006dcc:	40010000 	.word	0x40010000
 8006dd0:	40023800 	.word	0x40023800
 8006dd4:	40000400 	.word	0x40000400
 8006dd8:	40000800 	.word	0x40000800
 8006ddc:	40020400 	.word	0x40020400
 8006de0:	20000ad0 	.word	0x20000ad0
 8006de4:	400260b8 	.word	0x400260b8
 8006de8:	40000c00 	.word	0x40000c00
 8006dec:	40001c00 	.word	0x40001c00
 8006df0:	40002000 	.word	0x40002000

08006df4 <HAL_TIM_Encoder_MspInit>:
 8006df4:	b580      	push	{r7, lr}
 8006df6:	b08a      	sub	sp, #40	; 0x28
 8006df8:	af00      	add	r7, sp, #0
 8006dfa:	6078      	str	r0, [r7, #4]
 8006dfc:	f107 0314 	add.w	r3, r7, #20
 8006e00:	2200      	movs	r2, #0
 8006e02:	601a      	str	r2, [r3, #0]
 8006e04:	605a      	str	r2, [r3, #4]
 8006e06:	609a      	str	r2, [r3, #8]
 8006e08:	60da      	str	r2, [r3, #12]
 8006e0a:	611a      	str	r2, [r3, #16]
 8006e0c:	687b      	ldr	r3, [r7, #4]
 8006e0e:	681b      	ldr	r3, [r3, #0]
 8006e10:	4a19      	ldr	r2, [pc, #100]	; (8006e78 <HAL_TIM_Encoder_MspInit+0x84>)
 8006e12:	4293      	cmp	r3, r2
 8006e14:	d12b      	bne.n	8006e6e <HAL_TIM_Encoder_MspInit+0x7a>
 8006e16:	2300      	movs	r3, #0
 8006e18:	613b      	str	r3, [r7, #16]
 8006e1a:	4b18      	ldr	r3, [pc, #96]	; (8006e7c <HAL_TIM_Encoder_MspInit+0x88>)
 8006e1c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006e1e:	4a17      	ldr	r2, [pc, #92]	; (8006e7c <HAL_TIM_Encoder_MspInit+0x88>)
 8006e20:	f043 0302 	orr.w	r3, r3, #2
 8006e24:	6453      	str	r3, [r2, #68]	; 0x44
 8006e26:	4b15      	ldr	r3, [pc, #84]	; (8006e7c <HAL_TIM_Encoder_MspInit+0x88>)
 8006e28:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006e2a:	f003 0302 	and.w	r3, r3, #2
 8006e2e:	613b      	str	r3, [r7, #16]
 8006e30:	693b      	ldr	r3, [r7, #16]
 8006e32:	2300      	movs	r3, #0
 8006e34:	60fb      	str	r3, [r7, #12]
 8006e36:	4b11      	ldr	r3, [pc, #68]	; (8006e7c <HAL_TIM_Encoder_MspInit+0x88>)
 8006e38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e3a:	4a10      	ldr	r2, [pc, #64]	; (8006e7c <HAL_TIM_Encoder_MspInit+0x88>)
 8006e3c:	f043 0304 	orr.w	r3, r3, #4
 8006e40:	6313      	str	r3, [r2, #48]	; 0x30
 8006e42:	4b0e      	ldr	r3, [pc, #56]	; (8006e7c <HAL_TIM_Encoder_MspInit+0x88>)
 8006e44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e46:	f003 0304 	and.w	r3, r3, #4
 8006e4a:	60fb      	str	r3, [r7, #12]
 8006e4c:	68fb      	ldr	r3, [r7, #12]
 8006e4e:	23c0      	movs	r3, #192	; 0xc0
 8006e50:	617b      	str	r3, [r7, #20]
 8006e52:	2302      	movs	r3, #2
 8006e54:	61bb      	str	r3, [r7, #24]
 8006e56:	2300      	movs	r3, #0
 8006e58:	61fb      	str	r3, [r7, #28]
 8006e5a:	2300      	movs	r3, #0
 8006e5c:	623b      	str	r3, [r7, #32]
 8006e5e:	2303      	movs	r3, #3
 8006e60:	627b      	str	r3, [r7, #36]	; 0x24
 8006e62:	f107 0314 	add.w	r3, r7, #20
 8006e66:	4619      	mov	r1, r3
 8006e68:	4805      	ldr	r0, [pc, #20]	; (8006e80 <HAL_TIM_Encoder_MspInit+0x8c>)
 8006e6a:	f002 f86d 	bl	8008f48 <HAL_GPIO_Init>
 8006e6e:	bf00      	nop
 8006e70:	3728      	adds	r7, #40	; 0x28
 8006e72:	46bd      	mov	sp, r7
 8006e74:	bd80      	pop	{r7, pc}
 8006e76:	bf00      	nop
 8006e78:	40010400 	.word	0x40010400
 8006e7c:	40023800 	.word	0x40023800
 8006e80:	40020800 	.word	0x40020800

08006e84 <HAL_TIM_MspPostInit>:
 8006e84:	b580      	push	{r7, lr}
 8006e86:	b08a      	sub	sp, #40	; 0x28
 8006e88:	af00      	add	r7, sp, #0
 8006e8a:	6078      	str	r0, [r7, #4]
 8006e8c:	f107 0314 	add.w	r3, r7, #20
 8006e90:	2200      	movs	r2, #0
 8006e92:	601a      	str	r2, [r3, #0]
 8006e94:	605a      	str	r2, [r3, #4]
 8006e96:	609a      	str	r2, [r3, #8]
 8006e98:	60da      	str	r2, [r3, #12]
 8006e9a:	611a      	str	r2, [r3, #16]
 8006e9c:	687b      	ldr	r3, [r7, #4]
 8006e9e:	681b      	ldr	r3, [r3, #0]
 8006ea0:	4a37      	ldr	r2, [pc, #220]	; (8006f80 <HAL_TIM_MspPostInit+0xfc>)
 8006ea2:	4293      	cmp	r3, r2
 8006ea4:	d11f      	bne.n	8006ee6 <HAL_TIM_MspPostInit+0x62>
 8006ea6:	2300      	movs	r3, #0
 8006ea8:	613b      	str	r3, [r7, #16]
 8006eaa:	4b36      	ldr	r3, [pc, #216]	; (8006f84 <HAL_TIM_MspPostInit+0x100>)
 8006eac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006eae:	4a35      	ldr	r2, [pc, #212]	; (8006f84 <HAL_TIM_MspPostInit+0x100>)
 8006eb0:	f043 0301 	orr.w	r3, r3, #1
 8006eb4:	6313      	str	r3, [r2, #48]	; 0x30
 8006eb6:	4b33      	ldr	r3, [pc, #204]	; (8006f84 <HAL_TIM_MspPostInit+0x100>)
 8006eb8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006eba:	f003 0301 	and.w	r3, r3, #1
 8006ebe:	613b      	str	r3, [r7, #16]
 8006ec0:	693b      	ldr	r3, [r7, #16]
 8006ec2:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8006ec6:	617b      	str	r3, [r7, #20]
 8006ec8:	2302      	movs	r3, #2
 8006eca:	61bb      	str	r3, [r7, #24]
 8006ecc:	2300      	movs	r3, #0
 8006ece:	61fb      	str	r3, [r7, #28]
 8006ed0:	2300      	movs	r3, #0
 8006ed2:	623b      	str	r3, [r7, #32]
 8006ed4:	2301      	movs	r3, #1
 8006ed6:	627b      	str	r3, [r7, #36]	; 0x24
 8006ed8:	f107 0314 	add.w	r3, r7, #20
 8006edc:	4619      	mov	r1, r3
 8006ede:	482a      	ldr	r0, [pc, #168]	; (8006f88 <HAL_TIM_MspPostInit+0x104>)
 8006ee0:	f002 f832 	bl	8008f48 <HAL_GPIO_Init>
 8006ee4:	e047      	b.n	8006f76 <HAL_TIM_MspPostInit+0xf2>
 8006ee6:	687b      	ldr	r3, [r7, #4]
 8006ee8:	681b      	ldr	r3, [r3, #0]
 8006eea:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006eee:	d11f      	bne.n	8006f30 <HAL_TIM_MspPostInit+0xac>
 8006ef0:	2300      	movs	r3, #0
 8006ef2:	60fb      	str	r3, [r7, #12]
 8006ef4:	4b23      	ldr	r3, [pc, #140]	; (8006f84 <HAL_TIM_MspPostInit+0x100>)
 8006ef6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006ef8:	4a22      	ldr	r2, [pc, #136]	; (8006f84 <HAL_TIM_MspPostInit+0x100>)
 8006efa:	f043 0301 	orr.w	r3, r3, #1
 8006efe:	6313      	str	r3, [r2, #48]	; 0x30
 8006f00:	4b20      	ldr	r3, [pc, #128]	; (8006f84 <HAL_TIM_MspPostInit+0x100>)
 8006f02:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006f04:	f003 0301 	and.w	r3, r3, #1
 8006f08:	60fb      	str	r3, [r7, #12]
 8006f0a:	68fb      	ldr	r3, [r7, #12]
 8006f0c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8006f10:	617b      	str	r3, [r7, #20]
 8006f12:	2302      	movs	r3, #2
 8006f14:	61bb      	str	r3, [r7, #24]
 8006f16:	2300      	movs	r3, #0
 8006f18:	61fb      	str	r3, [r7, #28]
 8006f1a:	2300      	movs	r3, #0
 8006f1c:	623b      	str	r3, [r7, #32]
 8006f1e:	2301      	movs	r3, #1
 8006f20:	627b      	str	r3, [r7, #36]	; 0x24
 8006f22:	f107 0314 	add.w	r3, r7, #20
 8006f26:	4619      	mov	r1, r3
 8006f28:	4817      	ldr	r0, [pc, #92]	; (8006f88 <HAL_TIM_MspPostInit+0x104>)
 8006f2a:	f002 f80d 	bl	8008f48 <HAL_GPIO_Init>
 8006f2e:	e022      	b.n	8006f76 <HAL_TIM_MspPostInit+0xf2>
 8006f30:	687b      	ldr	r3, [r7, #4]
 8006f32:	681b      	ldr	r3, [r3, #0]
 8006f34:	4a15      	ldr	r2, [pc, #84]	; (8006f8c <HAL_TIM_MspPostInit+0x108>)
 8006f36:	4293      	cmp	r3, r2
 8006f38:	d11d      	bne.n	8006f76 <HAL_TIM_MspPostInit+0xf2>
 8006f3a:	2300      	movs	r3, #0
 8006f3c:	60bb      	str	r3, [r7, #8]
 8006f3e:	4b11      	ldr	r3, [pc, #68]	; (8006f84 <HAL_TIM_MspPostInit+0x100>)
 8006f40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006f42:	4a10      	ldr	r2, [pc, #64]	; (8006f84 <HAL_TIM_MspPostInit+0x100>)
 8006f44:	f043 0301 	orr.w	r3, r3, #1
 8006f48:	6313      	str	r3, [r2, #48]	; 0x30
 8006f4a:	4b0e      	ldr	r3, [pc, #56]	; (8006f84 <HAL_TIM_MspPostInit+0x100>)
 8006f4c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006f4e:	f003 0301 	and.w	r3, r3, #1
 8006f52:	60bb      	str	r3, [r7, #8]
 8006f54:	68bb      	ldr	r3, [r7, #8]
 8006f56:	23c0      	movs	r3, #192	; 0xc0
 8006f58:	617b      	str	r3, [r7, #20]
 8006f5a:	2302      	movs	r3, #2
 8006f5c:	61bb      	str	r3, [r7, #24]
 8006f5e:	2300      	movs	r3, #0
 8006f60:	61fb      	str	r3, [r7, #28]
 8006f62:	2300      	movs	r3, #0
 8006f64:	623b      	str	r3, [r7, #32]
 8006f66:	2302      	movs	r3, #2
 8006f68:	627b      	str	r3, [r7, #36]	; 0x24
 8006f6a:	f107 0314 	add.w	r3, r7, #20
 8006f6e:	4619      	mov	r1, r3
 8006f70:	4805      	ldr	r0, [pc, #20]	; (8006f88 <HAL_TIM_MspPostInit+0x104>)
 8006f72:	f001 ffe9 	bl	8008f48 <HAL_GPIO_Init>
 8006f76:	bf00      	nop
 8006f78:	3728      	adds	r7, #40	; 0x28
 8006f7a:	46bd      	mov	sp, r7
 8006f7c:	bd80      	pop	{r7, pc}
 8006f7e:	bf00      	nop
 8006f80:	40010000 	.word	0x40010000
 8006f84:	40023800 	.word	0x40023800
 8006f88:	40020000 	.word	0x40020000
 8006f8c:	40000400 	.word	0x40000400

08006f90 <HAL_UART_MspInit>:
 8006f90:	b580      	push	{r7, lr}
 8006f92:	b090      	sub	sp, #64	; 0x40
 8006f94:	af00      	add	r7, sp, #0
 8006f96:	6078      	str	r0, [r7, #4]
 8006f98:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006f9c:	2200      	movs	r2, #0
 8006f9e:	601a      	str	r2, [r3, #0]
 8006fa0:	605a      	str	r2, [r3, #4]
 8006fa2:	609a      	str	r2, [r3, #8]
 8006fa4:	60da      	str	r2, [r3, #12]
 8006fa6:	611a      	str	r2, [r3, #16]
 8006fa8:	687b      	ldr	r3, [r7, #4]
 8006faa:	681b      	ldr	r3, [r3, #0]
 8006fac:	4a7c      	ldr	r2, [pc, #496]	; (80071a0 <HAL_UART_MspInit+0x210>)
 8006fae:	4293      	cmp	r3, r2
 8006fb0:	d14b      	bne.n	800704a <HAL_UART_MspInit+0xba>
 8006fb2:	2300      	movs	r3, #0
 8006fb4:	62bb      	str	r3, [r7, #40]	; 0x28
 8006fb6:	4b7b      	ldr	r3, [pc, #492]	; (80071a4 <HAL_UART_MspInit+0x214>)
 8006fb8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006fba:	4a7a      	ldr	r2, [pc, #488]	; (80071a4 <HAL_UART_MspInit+0x214>)
 8006fbc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8006fc0:	6413      	str	r3, [r2, #64]	; 0x40
 8006fc2:	4b78      	ldr	r3, [pc, #480]	; (80071a4 <HAL_UART_MspInit+0x214>)
 8006fc4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006fc6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8006fca:	62bb      	str	r3, [r7, #40]	; 0x28
 8006fcc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006fce:	2300      	movs	r3, #0
 8006fd0:	627b      	str	r3, [r7, #36]	; 0x24
 8006fd2:	4b74      	ldr	r3, [pc, #464]	; (80071a4 <HAL_UART_MspInit+0x214>)
 8006fd4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006fd6:	4a73      	ldr	r2, [pc, #460]	; (80071a4 <HAL_UART_MspInit+0x214>)
 8006fd8:	f043 0304 	orr.w	r3, r3, #4
 8006fdc:	6313      	str	r3, [r2, #48]	; 0x30
 8006fde:	4b71      	ldr	r3, [pc, #452]	; (80071a4 <HAL_UART_MspInit+0x214>)
 8006fe0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006fe2:	f003 0304 	and.w	r3, r3, #4
 8006fe6:	627b      	str	r3, [r7, #36]	; 0x24
 8006fe8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006fea:	2300      	movs	r3, #0
 8006fec:	623b      	str	r3, [r7, #32]
 8006fee:	4b6d      	ldr	r3, [pc, #436]	; (80071a4 <HAL_UART_MspInit+0x214>)
 8006ff0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006ff2:	4a6c      	ldr	r2, [pc, #432]	; (80071a4 <HAL_UART_MspInit+0x214>)
 8006ff4:	f043 0308 	orr.w	r3, r3, #8
 8006ff8:	6313      	str	r3, [r2, #48]	; 0x30
 8006ffa:	4b6a      	ldr	r3, [pc, #424]	; (80071a4 <HAL_UART_MspInit+0x214>)
 8006ffc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006ffe:	f003 0308 	and.w	r3, r3, #8
 8007002:	623b      	str	r3, [r7, #32]
 8007004:	6a3b      	ldr	r3, [r7, #32]
 8007006:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800700a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800700c:	2302      	movs	r3, #2
 800700e:	633b      	str	r3, [r7, #48]	; 0x30
 8007010:	2300      	movs	r3, #0
 8007012:	637b      	str	r3, [r7, #52]	; 0x34
 8007014:	2303      	movs	r3, #3
 8007016:	63bb      	str	r3, [r7, #56]	; 0x38
 8007018:	2308      	movs	r3, #8
 800701a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800701c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8007020:	4619      	mov	r1, r3
 8007022:	4861      	ldr	r0, [pc, #388]	; (80071a8 <HAL_UART_MspInit+0x218>)
 8007024:	f001 ff90 	bl	8008f48 <HAL_GPIO_Init>
 8007028:	2304      	movs	r3, #4
 800702a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800702c:	2302      	movs	r3, #2
 800702e:	633b      	str	r3, [r7, #48]	; 0x30
 8007030:	2300      	movs	r3, #0
 8007032:	637b      	str	r3, [r7, #52]	; 0x34
 8007034:	2303      	movs	r3, #3
 8007036:	63bb      	str	r3, [r7, #56]	; 0x38
 8007038:	2308      	movs	r3, #8
 800703a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800703c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8007040:	4619      	mov	r1, r3
 8007042:	485a      	ldr	r0, [pc, #360]	; (80071ac <HAL_UART_MspInit+0x21c>)
 8007044:	f001 ff80 	bl	8008f48 <HAL_GPIO_Init>
 8007048:	e0a6      	b.n	8007198 <HAL_UART_MspInit+0x208>
 800704a:	687b      	ldr	r3, [r7, #4]
 800704c:	681b      	ldr	r3, [r3, #0]
 800704e:	4a58      	ldr	r2, [pc, #352]	; (80071b0 <HAL_UART_MspInit+0x220>)
 8007050:	4293      	cmp	r3, r2
 8007052:	d135      	bne.n	80070c0 <HAL_UART_MspInit+0x130>
 8007054:	2300      	movs	r3, #0
 8007056:	61fb      	str	r3, [r7, #28]
 8007058:	4b52      	ldr	r3, [pc, #328]	; (80071a4 <HAL_UART_MspInit+0x214>)
 800705a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800705c:	4a51      	ldr	r2, [pc, #324]	; (80071a4 <HAL_UART_MspInit+0x214>)
 800705e:	f043 0310 	orr.w	r3, r3, #16
 8007062:	6453      	str	r3, [r2, #68]	; 0x44
 8007064:	4b4f      	ldr	r3, [pc, #316]	; (80071a4 <HAL_UART_MspInit+0x214>)
 8007066:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007068:	f003 0310 	and.w	r3, r3, #16
 800706c:	61fb      	str	r3, [r7, #28]
 800706e:	69fb      	ldr	r3, [r7, #28]
 8007070:	2300      	movs	r3, #0
 8007072:	61bb      	str	r3, [r7, #24]
 8007074:	4b4b      	ldr	r3, [pc, #300]	; (80071a4 <HAL_UART_MspInit+0x214>)
 8007076:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007078:	4a4a      	ldr	r2, [pc, #296]	; (80071a4 <HAL_UART_MspInit+0x214>)
 800707a:	f043 0301 	orr.w	r3, r3, #1
 800707e:	6313      	str	r3, [r2, #48]	; 0x30
 8007080:	4b48      	ldr	r3, [pc, #288]	; (80071a4 <HAL_UART_MspInit+0x214>)
 8007082:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007084:	f003 0301 	and.w	r3, r3, #1
 8007088:	61bb      	str	r3, [r7, #24]
 800708a:	69bb      	ldr	r3, [r7, #24]
 800708c:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8007090:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007092:	2302      	movs	r3, #2
 8007094:	633b      	str	r3, [r7, #48]	; 0x30
 8007096:	2300      	movs	r3, #0
 8007098:	637b      	str	r3, [r7, #52]	; 0x34
 800709a:	2303      	movs	r3, #3
 800709c:	63bb      	str	r3, [r7, #56]	; 0x38
 800709e:	2307      	movs	r3, #7
 80070a0:	63fb      	str	r3, [r7, #60]	; 0x3c
 80070a2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80070a6:	4619      	mov	r1, r3
 80070a8:	4842      	ldr	r0, [pc, #264]	; (80071b4 <HAL_UART_MspInit+0x224>)
 80070aa:	f001 ff4d 	bl	8008f48 <HAL_GPIO_Init>
 80070ae:	2200      	movs	r2, #0
 80070b0:	2100      	movs	r1, #0
 80070b2:	2025      	movs	r0, #37	; 0x25
 80070b4:	f001 f8f3 	bl	800829e <HAL_NVIC_SetPriority>
 80070b8:	2025      	movs	r0, #37	; 0x25
 80070ba:	f001 f90c 	bl	80082d6 <HAL_NVIC_EnableIRQ>
 80070be:	e06b      	b.n	8007198 <HAL_UART_MspInit+0x208>
 80070c0:	687b      	ldr	r3, [r7, #4]
 80070c2:	681b      	ldr	r3, [r3, #0]
 80070c4:	4a3c      	ldr	r2, [pc, #240]	; (80071b8 <HAL_UART_MspInit+0x228>)
 80070c6:	4293      	cmp	r3, r2
 80070c8:	d12c      	bne.n	8007124 <HAL_UART_MspInit+0x194>
 80070ca:	2300      	movs	r3, #0
 80070cc:	617b      	str	r3, [r7, #20]
 80070ce:	4b35      	ldr	r3, [pc, #212]	; (80071a4 <HAL_UART_MspInit+0x214>)
 80070d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80070d2:	4a34      	ldr	r2, [pc, #208]	; (80071a4 <HAL_UART_MspInit+0x214>)
 80070d4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80070d8:	6413      	str	r3, [r2, #64]	; 0x40
 80070da:	4b32      	ldr	r3, [pc, #200]	; (80071a4 <HAL_UART_MspInit+0x214>)
 80070dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80070de:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80070e2:	617b      	str	r3, [r7, #20]
 80070e4:	697b      	ldr	r3, [r7, #20]
 80070e6:	2300      	movs	r3, #0
 80070e8:	613b      	str	r3, [r7, #16]
 80070ea:	4b2e      	ldr	r3, [pc, #184]	; (80071a4 <HAL_UART_MspInit+0x214>)
 80070ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80070ee:	4a2d      	ldr	r2, [pc, #180]	; (80071a4 <HAL_UART_MspInit+0x214>)
 80070f0:	f043 0301 	orr.w	r3, r3, #1
 80070f4:	6313      	str	r3, [r2, #48]	; 0x30
 80070f6:	4b2b      	ldr	r3, [pc, #172]	; (80071a4 <HAL_UART_MspInit+0x214>)
 80070f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80070fa:	f003 0301 	and.w	r3, r3, #1
 80070fe:	613b      	str	r3, [r7, #16]
 8007100:	693b      	ldr	r3, [r7, #16]
 8007102:	230c      	movs	r3, #12
 8007104:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007106:	2302      	movs	r3, #2
 8007108:	633b      	str	r3, [r7, #48]	; 0x30
 800710a:	2300      	movs	r3, #0
 800710c:	637b      	str	r3, [r7, #52]	; 0x34
 800710e:	2303      	movs	r3, #3
 8007110:	63bb      	str	r3, [r7, #56]	; 0x38
 8007112:	2307      	movs	r3, #7
 8007114:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007116:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800711a:	4619      	mov	r1, r3
 800711c:	4825      	ldr	r0, [pc, #148]	; (80071b4 <HAL_UART_MspInit+0x224>)
 800711e:	f001 ff13 	bl	8008f48 <HAL_GPIO_Init>
 8007122:	e039      	b.n	8007198 <HAL_UART_MspInit+0x208>
 8007124:	687b      	ldr	r3, [r7, #4]
 8007126:	681b      	ldr	r3, [r3, #0]
 8007128:	4a24      	ldr	r2, [pc, #144]	; (80071bc <HAL_UART_MspInit+0x22c>)
 800712a:	4293      	cmp	r3, r2
 800712c:	d134      	bne.n	8007198 <HAL_UART_MspInit+0x208>
 800712e:	2300      	movs	r3, #0
 8007130:	60fb      	str	r3, [r7, #12]
 8007132:	4b1c      	ldr	r3, [pc, #112]	; (80071a4 <HAL_UART_MspInit+0x214>)
 8007134:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007136:	4a1b      	ldr	r2, [pc, #108]	; (80071a4 <HAL_UART_MspInit+0x214>)
 8007138:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800713c:	6413      	str	r3, [r2, #64]	; 0x40
 800713e:	4b19      	ldr	r3, [pc, #100]	; (80071a4 <HAL_UART_MspInit+0x214>)
 8007140:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007142:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8007146:	60fb      	str	r3, [r7, #12]
 8007148:	68fb      	ldr	r3, [r7, #12]
 800714a:	2300      	movs	r3, #0
 800714c:	60bb      	str	r3, [r7, #8]
 800714e:	4b15      	ldr	r3, [pc, #84]	; (80071a4 <HAL_UART_MspInit+0x214>)
 8007150:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007152:	4a14      	ldr	r2, [pc, #80]	; (80071a4 <HAL_UART_MspInit+0x214>)
 8007154:	f043 0304 	orr.w	r3, r3, #4
 8007158:	6313      	str	r3, [r2, #48]	; 0x30
 800715a:	4b12      	ldr	r3, [pc, #72]	; (80071a4 <HAL_UART_MspInit+0x214>)
 800715c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800715e:	f003 0304 	and.w	r3, r3, #4
 8007162:	60bb      	str	r3, [r7, #8]
 8007164:	68bb      	ldr	r3, [r7, #8]
 8007166:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 800716a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800716c:	2302      	movs	r3, #2
 800716e:	633b      	str	r3, [r7, #48]	; 0x30
 8007170:	2300      	movs	r3, #0
 8007172:	637b      	str	r3, [r7, #52]	; 0x34
 8007174:	2303      	movs	r3, #3
 8007176:	63bb      	str	r3, [r7, #56]	; 0x38
 8007178:	2307      	movs	r3, #7
 800717a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800717c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8007180:	4619      	mov	r1, r3
 8007182:	4809      	ldr	r0, [pc, #36]	; (80071a8 <HAL_UART_MspInit+0x218>)
 8007184:	f001 fee0 	bl	8008f48 <HAL_GPIO_Init>
 8007188:	2200      	movs	r2, #0
 800718a:	2100      	movs	r1, #0
 800718c:	2027      	movs	r0, #39	; 0x27
 800718e:	f001 f886 	bl	800829e <HAL_NVIC_SetPriority>
 8007192:	2027      	movs	r0, #39	; 0x27
 8007194:	f001 f89f 	bl	80082d6 <HAL_NVIC_EnableIRQ>
 8007198:	bf00      	nop
 800719a:	3740      	adds	r7, #64	; 0x40
 800719c:	46bd      	mov	sp, r7
 800719e:	bd80      	pop	{r7, pc}
 80071a0:	40005000 	.word	0x40005000
 80071a4:	40023800 	.word	0x40023800
 80071a8:	40020800 	.word	0x40020800
 80071ac:	40020c00 	.word	0x40020c00
 80071b0:	40011000 	.word	0x40011000
 80071b4:	40020000 	.word	0x40020000
 80071b8:	40004400 	.word	0x40004400
 80071bc:	40004800 	.word	0x40004800

080071c0 <NMI_Handler>:
 80071c0:	b480      	push	{r7}
 80071c2:	af00      	add	r7, sp, #0
 80071c4:	e7fe      	b.n	80071c4 <NMI_Handler+0x4>

080071c6 <HardFault_Handler>:
 80071c6:	b480      	push	{r7}
 80071c8:	af00      	add	r7, sp, #0
 80071ca:	e7fe      	b.n	80071ca <HardFault_Handler+0x4>

080071cc <MemManage_Handler>:
 80071cc:	b480      	push	{r7}
 80071ce:	af00      	add	r7, sp, #0
 80071d0:	e7fe      	b.n	80071d0 <MemManage_Handler+0x4>

080071d2 <BusFault_Handler>:
 80071d2:	b480      	push	{r7}
 80071d4:	af00      	add	r7, sp, #0
 80071d6:	e7fe      	b.n	80071d6 <BusFault_Handler+0x4>

080071d8 <UsageFault_Handler>:
 80071d8:	b480      	push	{r7}
 80071da:	af00      	add	r7, sp, #0
 80071dc:	e7fe      	b.n	80071dc <UsageFault_Handler+0x4>

080071de <SVC_Handler>:
 80071de:	b480      	push	{r7}
 80071e0:	af00      	add	r7, sp, #0
 80071e2:	bf00      	nop
 80071e4:	46bd      	mov	sp, r7
 80071e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071ea:	4770      	bx	lr

080071ec <DebugMon_Handler>:
 80071ec:	b480      	push	{r7}
 80071ee:	af00      	add	r7, sp, #0
 80071f0:	bf00      	nop
 80071f2:	46bd      	mov	sp, r7
 80071f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071f8:	4770      	bx	lr

080071fa <PendSV_Handler>:
 80071fa:	b480      	push	{r7}
 80071fc:	af00      	add	r7, sp, #0
 80071fe:	bf00      	nop
 8007200:	46bd      	mov	sp, r7
 8007202:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007206:	4770      	bx	lr

08007208 <SysTick_Handler>:
 8007208:	b580      	push	{r7, lr}
 800720a:	af00      	add	r7, sp, #0
 800720c:	f000 f98e 	bl	800752c <HAL_IncTick>
 8007210:	bf00      	nop
 8007212:	bd80      	pop	{r7, pc}

08007214 <EXTI4_IRQHandler>:
 8007214:	b580      	push	{r7, lr}
 8007216:	af00      	add	r7, sp, #0
 8007218:	2010      	movs	r0, #16
 800721a:	f002 f875 	bl	8009308 <HAL_GPIO_EXTI_IRQHandler>
 800721e:	bf00      	nop
 8007220:	bd80      	pop	{r7, pc}
	...

08007224 <TIM2_IRQHandler>:
 8007224:	b580      	push	{r7, lr}
 8007226:	af00      	add	r7, sp, #0
 8007228:	4802      	ldr	r0, [pc, #8]	; (8007234 <TIM2_IRQHandler+0x10>)
 800722a:	f003 fbcf 	bl	800a9cc <HAL_TIM_IRQHandler>
 800722e:	bf00      	nop
 8007230:	bd80      	pop	{r7, pc}
 8007232:	bf00      	nop
 8007234:	200008d8 	.word	0x200008d8

08007238 <USART1_IRQHandler>:
 8007238:	b580      	push	{r7, lr}
 800723a:	af00      	add	r7, sp, #0
 800723c:	4802      	ldr	r0, [pc, #8]	; (8007248 <USART1_IRQHandler+0x10>)
 800723e:	f004 fee7 	bl	800c010 <HAL_UART_IRQHandler>
 8007242:	bf00      	nop
 8007244:	bd80      	pop	{r7, pc}
 8007246:	bf00      	nop
 8007248:	20000b74 	.word	0x20000b74

0800724c <USART3_IRQHandler>:
 800724c:	b580      	push	{r7, lr}
 800724e:	af00      	add	r7, sp, #0
 8007250:	4802      	ldr	r0, [pc, #8]	; (800725c <USART3_IRQHandler+0x10>)
 8007252:	f004 fedd 	bl	800c010 <HAL_UART_IRQHandler>
 8007256:	bf00      	nop
 8007258:	bd80      	pop	{r7, pc}
 800725a:	bf00      	nop
 800725c:	20000bfc 	.word	0x20000bfc

08007260 <EXTI15_10_IRQHandler>:
 8007260:	b580      	push	{r7, lr}
 8007262:	af00      	add	r7, sp, #0
 8007264:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8007268:	f002 f84e 	bl	8009308 <HAL_GPIO_EXTI_IRQHandler>
 800726c:	bf00      	nop
 800726e:	bd80      	pop	{r7, pc}

08007270 <DMA1_Stream7_IRQHandler>:
 8007270:	b580      	push	{r7, lr}
 8007272:	af00      	add	r7, sp, #0
 8007274:	4802      	ldr	r0, [pc, #8]	; (8007280 <DMA1_Stream7_IRQHandler+0x10>)
 8007276:	f001 f9ef 	bl	8008658 <HAL_DMA_IRQHandler>
 800727a:	bf00      	nop
 800727c:	bd80      	pop	{r7, pc}
 800727e:	bf00      	nop
 8007280:	20000ad0 	.word	0x20000ad0

08007284 <_getpid>:
 8007284:	b480      	push	{r7}
 8007286:	af00      	add	r7, sp, #0
 8007288:	2301      	movs	r3, #1
 800728a:	4618      	mov	r0, r3
 800728c:	46bd      	mov	sp, r7
 800728e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007292:	4770      	bx	lr

08007294 <_kill>:
 8007294:	b580      	push	{r7, lr}
 8007296:	b082      	sub	sp, #8
 8007298:	af00      	add	r7, sp, #0
 800729a:	6078      	str	r0, [r7, #4]
 800729c:	6039      	str	r1, [r7, #0]
 800729e:	f005 fe1f 	bl	800cee0 <__errno>
 80072a2:	4603      	mov	r3, r0
 80072a4:	2216      	movs	r2, #22
 80072a6:	601a      	str	r2, [r3, #0]
 80072a8:	f04f 33ff 	mov.w	r3, #4294967295
 80072ac:	4618      	mov	r0, r3
 80072ae:	3708      	adds	r7, #8
 80072b0:	46bd      	mov	sp, r7
 80072b2:	bd80      	pop	{r7, pc}

080072b4 <_exit>:
 80072b4:	b580      	push	{r7, lr}
 80072b6:	b082      	sub	sp, #8
 80072b8:	af00      	add	r7, sp, #0
 80072ba:	6078      	str	r0, [r7, #4]
 80072bc:	f04f 31ff 	mov.w	r1, #4294967295
 80072c0:	6878      	ldr	r0, [r7, #4]
 80072c2:	f7ff ffe7 	bl	8007294 <_kill>
 80072c6:	e7fe      	b.n	80072c6 <_exit+0x12>

080072c8 <_read>:
 80072c8:	b580      	push	{r7, lr}
 80072ca:	b086      	sub	sp, #24
 80072cc:	af00      	add	r7, sp, #0
 80072ce:	60f8      	str	r0, [r7, #12]
 80072d0:	60b9      	str	r1, [r7, #8]
 80072d2:	607a      	str	r2, [r7, #4]
 80072d4:	2300      	movs	r3, #0
 80072d6:	617b      	str	r3, [r7, #20]
 80072d8:	e00a      	b.n	80072f0 <_read+0x28>
 80072da:	f3af 8000 	nop.w
 80072de:	4601      	mov	r1, r0
 80072e0:	68bb      	ldr	r3, [r7, #8]
 80072e2:	1c5a      	adds	r2, r3, #1
 80072e4:	60ba      	str	r2, [r7, #8]
 80072e6:	b2ca      	uxtb	r2, r1
 80072e8:	701a      	strb	r2, [r3, #0]
 80072ea:	697b      	ldr	r3, [r7, #20]
 80072ec:	3301      	adds	r3, #1
 80072ee:	617b      	str	r3, [r7, #20]
 80072f0:	697a      	ldr	r2, [r7, #20]
 80072f2:	687b      	ldr	r3, [r7, #4]
 80072f4:	429a      	cmp	r2, r3
 80072f6:	dbf0      	blt.n	80072da <_read+0x12>
 80072f8:	687b      	ldr	r3, [r7, #4]
 80072fa:	4618      	mov	r0, r3
 80072fc:	3718      	adds	r7, #24
 80072fe:	46bd      	mov	sp, r7
 8007300:	bd80      	pop	{r7, pc}

08007302 <_write>:
 8007302:	b580      	push	{r7, lr}
 8007304:	b086      	sub	sp, #24
 8007306:	af00      	add	r7, sp, #0
 8007308:	60f8      	str	r0, [r7, #12]
 800730a:	60b9      	str	r1, [r7, #8]
 800730c:	607a      	str	r2, [r7, #4]
 800730e:	2300      	movs	r3, #0
 8007310:	617b      	str	r3, [r7, #20]
 8007312:	e009      	b.n	8007328 <_write+0x26>
 8007314:	68bb      	ldr	r3, [r7, #8]
 8007316:	1c5a      	adds	r2, r3, #1
 8007318:	60ba      	str	r2, [r7, #8]
 800731a:	781b      	ldrb	r3, [r3, #0]
 800731c:	4618      	mov	r0, r3
 800731e:	f3af 8000 	nop.w
 8007322:	697b      	ldr	r3, [r7, #20]
 8007324:	3301      	adds	r3, #1
 8007326:	617b      	str	r3, [r7, #20]
 8007328:	697a      	ldr	r2, [r7, #20]
 800732a:	687b      	ldr	r3, [r7, #4]
 800732c:	429a      	cmp	r2, r3
 800732e:	dbf1      	blt.n	8007314 <_write+0x12>
 8007330:	687b      	ldr	r3, [r7, #4]
 8007332:	4618      	mov	r0, r3
 8007334:	3718      	adds	r7, #24
 8007336:	46bd      	mov	sp, r7
 8007338:	bd80      	pop	{r7, pc}

0800733a <_close>:
 800733a:	b480      	push	{r7}
 800733c:	b083      	sub	sp, #12
 800733e:	af00      	add	r7, sp, #0
 8007340:	6078      	str	r0, [r7, #4]
 8007342:	f04f 33ff 	mov.w	r3, #4294967295
 8007346:	4618      	mov	r0, r3
 8007348:	370c      	adds	r7, #12
 800734a:	46bd      	mov	sp, r7
 800734c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007350:	4770      	bx	lr

08007352 <_fstat>:
 8007352:	b480      	push	{r7}
 8007354:	b083      	sub	sp, #12
 8007356:	af00      	add	r7, sp, #0
 8007358:	6078      	str	r0, [r7, #4]
 800735a:	6039      	str	r1, [r7, #0]
 800735c:	683b      	ldr	r3, [r7, #0]
 800735e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8007362:	605a      	str	r2, [r3, #4]
 8007364:	2300      	movs	r3, #0
 8007366:	4618      	mov	r0, r3
 8007368:	370c      	adds	r7, #12
 800736a:	46bd      	mov	sp, r7
 800736c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007370:	4770      	bx	lr

08007372 <_isatty>:
 8007372:	b480      	push	{r7}
 8007374:	b083      	sub	sp, #12
 8007376:	af00      	add	r7, sp, #0
 8007378:	6078      	str	r0, [r7, #4]
 800737a:	2301      	movs	r3, #1
 800737c:	4618      	mov	r0, r3
 800737e:	370c      	adds	r7, #12
 8007380:	46bd      	mov	sp, r7
 8007382:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007386:	4770      	bx	lr

08007388 <_lseek>:
 8007388:	b480      	push	{r7}
 800738a:	b085      	sub	sp, #20
 800738c:	af00      	add	r7, sp, #0
 800738e:	60f8      	str	r0, [r7, #12]
 8007390:	60b9      	str	r1, [r7, #8]
 8007392:	607a      	str	r2, [r7, #4]
 8007394:	2300      	movs	r3, #0
 8007396:	4618      	mov	r0, r3
 8007398:	3714      	adds	r7, #20
 800739a:	46bd      	mov	sp, r7
 800739c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073a0:	4770      	bx	lr
	...

080073a4 <_sbrk>:
 80073a4:	b580      	push	{r7, lr}
 80073a6:	b086      	sub	sp, #24
 80073a8:	af00      	add	r7, sp, #0
 80073aa:	6078      	str	r0, [r7, #4]
 80073ac:	4a14      	ldr	r2, [pc, #80]	; (8007400 <_sbrk+0x5c>)
 80073ae:	4b15      	ldr	r3, [pc, #84]	; (8007404 <_sbrk+0x60>)
 80073b0:	1ad3      	subs	r3, r2, r3
 80073b2:	617b      	str	r3, [r7, #20]
 80073b4:	697b      	ldr	r3, [r7, #20]
 80073b6:	613b      	str	r3, [r7, #16]
 80073b8:	4b13      	ldr	r3, [pc, #76]	; (8007408 <_sbrk+0x64>)
 80073ba:	681b      	ldr	r3, [r3, #0]
 80073bc:	2b00      	cmp	r3, #0
 80073be:	d102      	bne.n	80073c6 <_sbrk+0x22>
 80073c0:	4b11      	ldr	r3, [pc, #68]	; (8007408 <_sbrk+0x64>)
 80073c2:	4a12      	ldr	r2, [pc, #72]	; (800740c <_sbrk+0x68>)
 80073c4:	601a      	str	r2, [r3, #0]
 80073c6:	4b10      	ldr	r3, [pc, #64]	; (8007408 <_sbrk+0x64>)
 80073c8:	681a      	ldr	r2, [r3, #0]
 80073ca:	687b      	ldr	r3, [r7, #4]
 80073cc:	4413      	add	r3, r2
 80073ce:	693a      	ldr	r2, [r7, #16]
 80073d0:	429a      	cmp	r2, r3
 80073d2:	d207      	bcs.n	80073e4 <_sbrk+0x40>
 80073d4:	f005 fd84 	bl	800cee0 <__errno>
 80073d8:	4603      	mov	r3, r0
 80073da:	220c      	movs	r2, #12
 80073dc:	601a      	str	r2, [r3, #0]
 80073de:	f04f 33ff 	mov.w	r3, #4294967295
 80073e2:	e009      	b.n	80073f8 <_sbrk+0x54>
 80073e4:	4b08      	ldr	r3, [pc, #32]	; (8007408 <_sbrk+0x64>)
 80073e6:	681b      	ldr	r3, [r3, #0]
 80073e8:	60fb      	str	r3, [r7, #12]
 80073ea:	4b07      	ldr	r3, [pc, #28]	; (8007408 <_sbrk+0x64>)
 80073ec:	681a      	ldr	r2, [r3, #0]
 80073ee:	687b      	ldr	r3, [r7, #4]
 80073f0:	4413      	add	r3, r2
 80073f2:	4a05      	ldr	r2, [pc, #20]	; (8007408 <_sbrk+0x64>)
 80073f4:	6013      	str	r3, [r2, #0]
 80073f6:	68fb      	ldr	r3, [r7, #12]
 80073f8:	4618      	mov	r0, r3
 80073fa:	3718      	adds	r7, #24
 80073fc:	46bd      	mov	sp, r7
 80073fe:	bd80      	pop	{r7, pc}
 8007400:	20020000 	.word	0x20020000
 8007404:	00000400 	.word	0x00000400
 8007408:	20000c54 	.word	0x20000c54
 800740c:	20000c90 	.word	0x20000c90

08007410 <SystemInit>:
 8007410:	b480      	push	{r7}
 8007412:	af00      	add	r7, sp, #0
 8007414:	4b06      	ldr	r3, [pc, #24]	; (8007430 <SystemInit+0x20>)
 8007416:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800741a:	4a05      	ldr	r2, [pc, #20]	; (8007430 <SystemInit+0x20>)
 800741c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8007420:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8007424:	bf00      	nop
 8007426:	46bd      	mov	sp, r7
 8007428:	f85d 7b04 	ldr.w	r7, [sp], #4
 800742c:	4770      	bx	lr
 800742e:	bf00      	nop
 8007430:	e000ed00 	.word	0xe000ed00

08007434 <Reset_Handler>:
 8007434:	f8df d034 	ldr.w	sp, [pc, #52]	; 800746c <LoopFillZerobss+0x12>
 8007438:	480d      	ldr	r0, [pc, #52]	; (8007470 <LoopFillZerobss+0x16>)
 800743a:	490e      	ldr	r1, [pc, #56]	; (8007474 <LoopFillZerobss+0x1a>)
 800743c:	4a0e      	ldr	r2, [pc, #56]	; (8007478 <LoopFillZerobss+0x1e>)
 800743e:	2300      	movs	r3, #0
 8007440:	e002      	b.n	8007448 <LoopCopyDataInit>

08007442 <CopyDataInit>:
 8007442:	58d4      	ldr	r4, [r2, r3]
 8007444:	50c4      	str	r4, [r0, r3]
 8007446:	3304      	adds	r3, #4

08007448 <LoopCopyDataInit>:
 8007448:	18c4      	adds	r4, r0, r3
 800744a:	428c      	cmp	r4, r1
 800744c:	d3f9      	bcc.n	8007442 <CopyDataInit>
 800744e:	4a0b      	ldr	r2, [pc, #44]	; (800747c <LoopFillZerobss+0x22>)
 8007450:	4c0b      	ldr	r4, [pc, #44]	; (8007480 <LoopFillZerobss+0x26>)
 8007452:	2300      	movs	r3, #0
 8007454:	e001      	b.n	800745a <LoopFillZerobss>

08007456 <FillZerobss>:
 8007456:	6013      	str	r3, [r2, #0]
 8007458:	3204      	adds	r2, #4

0800745a <LoopFillZerobss>:
 800745a:	42a2      	cmp	r2, r4
 800745c:	d3fb      	bcc.n	8007456 <FillZerobss>
 800745e:	f7ff ffd7 	bl	8007410 <SystemInit>
 8007462:	f005 fd43 	bl	800ceec <__libc_init_array>
 8007466:	f7fe fb3b 	bl	8005ae0 <main>
 800746a:	4770      	bx	lr
 800746c:	20020000 	.word	0x20020000
 8007470:	20000000 	.word	0x20000000
 8007474:	20000310 	.word	0x20000310
 8007478:	08011928 	.word	0x08011928
 800747c:	20000310 	.word	0x20000310
 8007480:	20000c8c 	.word	0x20000c8c

08007484 <ADC_IRQHandler>:
 8007484:	e7fe      	b.n	8007484 <ADC_IRQHandler>
	...

08007488 <HAL_Init>:
 8007488:	b580      	push	{r7, lr}
 800748a:	af00      	add	r7, sp, #0
 800748c:	4b0e      	ldr	r3, [pc, #56]	; (80074c8 <HAL_Init+0x40>)
 800748e:	681b      	ldr	r3, [r3, #0]
 8007490:	4a0d      	ldr	r2, [pc, #52]	; (80074c8 <HAL_Init+0x40>)
 8007492:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8007496:	6013      	str	r3, [r2, #0]
 8007498:	4b0b      	ldr	r3, [pc, #44]	; (80074c8 <HAL_Init+0x40>)
 800749a:	681b      	ldr	r3, [r3, #0]
 800749c:	4a0a      	ldr	r2, [pc, #40]	; (80074c8 <HAL_Init+0x40>)
 800749e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80074a2:	6013      	str	r3, [r2, #0]
 80074a4:	4b08      	ldr	r3, [pc, #32]	; (80074c8 <HAL_Init+0x40>)
 80074a6:	681b      	ldr	r3, [r3, #0]
 80074a8:	4a07      	ldr	r2, [pc, #28]	; (80074c8 <HAL_Init+0x40>)
 80074aa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80074ae:	6013      	str	r3, [r2, #0]
 80074b0:	2003      	movs	r0, #3
 80074b2:	f000 fee9 	bl	8008288 <HAL_NVIC_SetPriorityGrouping>
 80074b6:	2000      	movs	r0, #0
 80074b8:	f000 f808 	bl	80074cc <HAL_InitTick>
 80074bc:	f7ff faf4 	bl	8006aa8 <HAL_MspInit>
 80074c0:	2300      	movs	r3, #0
 80074c2:	4618      	mov	r0, r3
 80074c4:	bd80      	pop	{r7, pc}
 80074c6:	bf00      	nop
 80074c8:	40023c00 	.word	0x40023c00

080074cc <HAL_InitTick>:
 80074cc:	b580      	push	{r7, lr}
 80074ce:	b082      	sub	sp, #8
 80074d0:	af00      	add	r7, sp, #0
 80074d2:	6078      	str	r0, [r7, #4]
 80074d4:	4b12      	ldr	r3, [pc, #72]	; (8007520 <HAL_InitTick+0x54>)
 80074d6:	681a      	ldr	r2, [r3, #0]
 80074d8:	4b12      	ldr	r3, [pc, #72]	; (8007524 <HAL_InitTick+0x58>)
 80074da:	781b      	ldrb	r3, [r3, #0]
 80074dc:	4619      	mov	r1, r3
 80074de:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80074e2:	fbb3 f3f1 	udiv	r3, r3, r1
 80074e6:	fbb2 f3f3 	udiv	r3, r2, r3
 80074ea:	4618      	mov	r0, r3
 80074ec:	f000 ff0f 	bl	800830e <HAL_SYSTICK_Config>
 80074f0:	4603      	mov	r3, r0
 80074f2:	2b00      	cmp	r3, #0
 80074f4:	d001      	beq.n	80074fa <HAL_InitTick+0x2e>
 80074f6:	2301      	movs	r3, #1
 80074f8:	e00e      	b.n	8007518 <HAL_InitTick+0x4c>
 80074fa:	687b      	ldr	r3, [r7, #4]
 80074fc:	2b0f      	cmp	r3, #15
 80074fe:	d80a      	bhi.n	8007516 <HAL_InitTick+0x4a>
 8007500:	2200      	movs	r2, #0
 8007502:	6879      	ldr	r1, [r7, #4]
 8007504:	f04f 30ff 	mov.w	r0, #4294967295
 8007508:	f000 fec9 	bl	800829e <HAL_NVIC_SetPriority>
 800750c:	4a06      	ldr	r2, [pc, #24]	; (8007528 <HAL_InitTick+0x5c>)
 800750e:	687b      	ldr	r3, [r7, #4]
 8007510:	6013      	str	r3, [r2, #0]
 8007512:	2300      	movs	r3, #0
 8007514:	e000      	b.n	8007518 <HAL_InitTick+0x4c>
 8007516:	2301      	movs	r3, #1
 8007518:	4618      	mov	r0, r3
 800751a:	3708      	adds	r7, #8
 800751c:	46bd      	mov	sp, r7
 800751e:	bd80      	pop	{r7, pc}
 8007520:	20000134 	.word	0x20000134
 8007524:	2000013c 	.word	0x2000013c
 8007528:	20000138 	.word	0x20000138

0800752c <HAL_IncTick>:
 800752c:	b480      	push	{r7}
 800752e:	af00      	add	r7, sp, #0
 8007530:	4b06      	ldr	r3, [pc, #24]	; (800754c <HAL_IncTick+0x20>)
 8007532:	781b      	ldrb	r3, [r3, #0]
 8007534:	461a      	mov	r2, r3
 8007536:	4b06      	ldr	r3, [pc, #24]	; (8007550 <HAL_IncTick+0x24>)
 8007538:	681b      	ldr	r3, [r3, #0]
 800753a:	4413      	add	r3, r2
 800753c:	4a04      	ldr	r2, [pc, #16]	; (8007550 <HAL_IncTick+0x24>)
 800753e:	6013      	str	r3, [r2, #0]
 8007540:	bf00      	nop
 8007542:	46bd      	mov	sp, r7
 8007544:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007548:	4770      	bx	lr
 800754a:	bf00      	nop
 800754c:	2000013c 	.word	0x2000013c
 8007550:	20000c58 	.word	0x20000c58

08007554 <HAL_GetTick>:
 8007554:	b480      	push	{r7}
 8007556:	af00      	add	r7, sp, #0
 8007558:	4b03      	ldr	r3, [pc, #12]	; (8007568 <HAL_GetTick+0x14>)
 800755a:	681b      	ldr	r3, [r3, #0]
 800755c:	4618      	mov	r0, r3
 800755e:	46bd      	mov	sp, r7
 8007560:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007564:	4770      	bx	lr
 8007566:	bf00      	nop
 8007568:	20000c58 	.word	0x20000c58

0800756c <HAL_Delay>:
 800756c:	b580      	push	{r7, lr}
 800756e:	b084      	sub	sp, #16
 8007570:	af00      	add	r7, sp, #0
 8007572:	6078      	str	r0, [r7, #4]
 8007574:	f7ff ffee 	bl	8007554 <HAL_GetTick>
 8007578:	60b8      	str	r0, [r7, #8]
 800757a:	687b      	ldr	r3, [r7, #4]
 800757c:	60fb      	str	r3, [r7, #12]
 800757e:	68fb      	ldr	r3, [r7, #12]
 8007580:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007584:	d005      	beq.n	8007592 <HAL_Delay+0x26>
 8007586:	4b0a      	ldr	r3, [pc, #40]	; (80075b0 <HAL_Delay+0x44>)
 8007588:	781b      	ldrb	r3, [r3, #0]
 800758a:	461a      	mov	r2, r3
 800758c:	68fb      	ldr	r3, [r7, #12]
 800758e:	4413      	add	r3, r2
 8007590:	60fb      	str	r3, [r7, #12]
 8007592:	bf00      	nop
 8007594:	f7ff ffde 	bl	8007554 <HAL_GetTick>
 8007598:	4602      	mov	r2, r0
 800759a:	68bb      	ldr	r3, [r7, #8]
 800759c:	1ad3      	subs	r3, r2, r3
 800759e:	68fa      	ldr	r2, [r7, #12]
 80075a0:	429a      	cmp	r2, r3
 80075a2:	d8f7      	bhi.n	8007594 <HAL_Delay+0x28>
 80075a4:	bf00      	nop
 80075a6:	bf00      	nop
 80075a8:	3710      	adds	r7, #16
 80075aa:	46bd      	mov	sp, r7
 80075ac:	bd80      	pop	{r7, pc}
 80075ae:	bf00      	nop
 80075b0:	2000013c 	.word	0x2000013c

080075b4 <HAL_ADC_Init>:
 80075b4:	b580      	push	{r7, lr}
 80075b6:	b084      	sub	sp, #16
 80075b8:	af00      	add	r7, sp, #0
 80075ba:	6078      	str	r0, [r7, #4]
 80075bc:	2300      	movs	r3, #0
 80075be:	73fb      	strb	r3, [r7, #15]
 80075c0:	687b      	ldr	r3, [r7, #4]
 80075c2:	2b00      	cmp	r3, #0
 80075c4:	d101      	bne.n	80075ca <HAL_ADC_Init+0x16>
 80075c6:	2301      	movs	r3, #1
 80075c8:	e033      	b.n	8007632 <HAL_ADC_Init+0x7e>
 80075ca:	687b      	ldr	r3, [r7, #4]
 80075cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80075ce:	2b00      	cmp	r3, #0
 80075d0:	d109      	bne.n	80075e6 <HAL_ADC_Init+0x32>
 80075d2:	6878      	ldr	r0, [r7, #4]
 80075d4:	f7ff fa90 	bl	8006af8 <HAL_ADC_MspInit>
 80075d8:	687b      	ldr	r3, [r7, #4]
 80075da:	2200      	movs	r2, #0
 80075dc:	645a      	str	r2, [r3, #68]	; 0x44
 80075de:	687b      	ldr	r3, [r7, #4]
 80075e0:	2200      	movs	r2, #0
 80075e2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80075e6:	687b      	ldr	r3, [r7, #4]
 80075e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80075ea:	f003 0310 	and.w	r3, r3, #16
 80075ee:	2b00      	cmp	r3, #0
 80075f0:	d118      	bne.n	8007624 <HAL_ADC_Init+0x70>
 80075f2:	687b      	ldr	r3, [r7, #4]
 80075f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80075f6:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 80075fa:	f023 0302 	bic.w	r3, r3, #2
 80075fe:	f043 0202 	orr.w	r2, r3, #2
 8007602:	687b      	ldr	r3, [r7, #4]
 8007604:	641a      	str	r2, [r3, #64]	; 0x40
 8007606:	6878      	ldr	r0, [r7, #4]
 8007608:	f000 fab4 	bl	8007b74 <ADC_Init>
 800760c:	687b      	ldr	r3, [r7, #4]
 800760e:	2200      	movs	r2, #0
 8007610:	645a      	str	r2, [r3, #68]	; 0x44
 8007612:	687b      	ldr	r3, [r7, #4]
 8007614:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007616:	f023 0303 	bic.w	r3, r3, #3
 800761a:	f043 0201 	orr.w	r2, r3, #1
 800761e:	687b      	ldr	r3, [r7, #4]
 8007620:	641a      	str	r2, [r3, #64]	; 0x40
 8007622:	e001      	b.n	8007628 <HAL_ADC_Init+0x74>
 8007624:	2301      	movs	r3, #1
 8007626:	73fb      	strb	r3, [r7, #15]
 8007628:	687b      	ldr	r3, [r7, #4]
 800762a:	2200      	movs	r2, #0
 800762c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007630:	7bfb      	ldrb	r3, [r7, #15]
 8007632:	4618      	mov	r0, r3
 8007634:	3710      	adds	r7, #16
 8007636:	46bd      	mov	sp, r7
 8007638:	bd80      	pop	{r7, pc}
	...

0800763c <HAL_ADC_Start>:
 800763c:	b480      	push	{r7}
 800763e:	b085      	sub	sp, #20
 8007640:	af00      	add	r7, sp, #0
 8007642:	6078      	str	r0, [r7, #4]
 8007644:	2300      	movs	r3, #0
 8007646:	60bb      	str	r3, [r7, #8]
 8007648:	687b      	ldr	r3, [r7, #4]
 800764a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800764e:	2b01      	cmp	r3, #1
 8007650:	d101      	bne.n	8007656 <HAL_ADC_Start+0x1a>
 8007652:	2302      	movs	r3, #2
 8007654:	e0b2      	b.n	80077bc <HAL_ADC_Start+0x180>
 8007656:	687b      	ldr	r3, [r7, #4]
 8007658:	2201      	movs	r2, #1
 800765a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800765e:	687b      	ldr	r3, [r7, #4]
 8007660:	681b      	ldr	r3, [r3, #0]
 8007662:	689b      	ldr	r3, [r3, #8]
 8007664:	f003 0301 	and.w	r3, r3, #1
 8007668:	2b01      	cmp	r3, #1
 800766a:	d018      	beq.n	800769e <HAL_ADC_Start+0x62>
 800766c:	687b      	ldr	r3, [r7, #4]
 800766e:	681b      	ldr	r3, [r3, #0]
 8007670:	689a      	ldr	r2, [r3, #8]
 8007672:	687b      	ldr	r3, [r7, #4]
 8007674:	681b      	ldr	r3, [r3, #0]
 8007676:	f042 0201 	orr.w	r2, r2, #1
 800767a:	609a      	str	r2, [r3, #8]
 800767c:	4b52      	ldr	r3, [pc, #328]	; (80077c8 <HAL_ADC_Start+0x18c>)
 800767e:	681b      	ldr	r3, [r3, #0]
 8007680:	4a52      	ldr	r2, [pc, #328]	; (80077cc <HAL_ADC_Start+0x190>)
 8007682:	fba2 2303 	umull	r2, r3, r2, r3
 8007686:	0c9a      	lsrs	r2, r3, #18
 8007688:	4613      	mov	r3, r2
 800768a:	005b      	lsls	r3, r3, #1
 800768c:	4413      	add	r3, r2
 800768e:	60bb      	str	r3, [r7, #8]
 8007690:	e002      	b.n	8007698 <HAL_ADC_Start+0x5c>
 8007692:	68bb      	ldr	r3, [r7, #8]
 8007694:	3b01      	subs	r3, #1
 8007696:	60bb      	str	r3, [r7, #8]
 8007698:	68bb      	ldr	r3, [r7, #8]
 800769a:	2b00      	cmp	r3, #0
 800769c:	d1f9      	bne.n	8007692 <HAL_ADC_Start+0x56>
 800769e:	687b      	ldr	r3, [r7, #4]
 80076a0:	681b      	ldr	r3, [r3, #0]
 80076a2:	689b      	ldr	r3, [r3, #8]
 80076a4:	f003 0301 	and.w	r3, r3, #1
 80076a8:	2b01      	cmp	r3, #1
 80076aa:	d17a      	bne.n	80077a2 <HAL_ADC_Start+0x166>
 80076ac:	687b      	ldr	r3, [r7, #4]
 80076ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80076b0:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 80076b4:	f023 0301 	bic.w	r3, r3, #1
 80076b8:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 80076bc:	687b      	ldr	r3, [r7, #4]
 80076be:	641a      	str	r2, [r3, #64]	; 0x40
 80076c0:	687b      	ldr	r3, [r7, #4]
 80076c2:	681b      	ldr	r3, [r3, #0]
 80076c4:	685b      	ldr	r3, [r3, #4]
 80076c6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80076ca:	2b00      	cmp	r3, #0
 80076cc:	d007      	beq.n	80076de <HAL_ADC_Start+0xa2>
 80076ce:	687b      	ldr	r3, [r7, #4]
 80076d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80076d2:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80076d6:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 80076da:	687b      	ldr	r3, [r7, #4]
 80076dc:	641a      	str	r2, [r3, #64]	; 0x40
 80076de:	687b      	ldr	r3, [r7, #4]
 80076e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80076e2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80076e6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80076ea:	d106      	bne.n	80076fa <HAL_ADC_Start+0xbe>
 80076ec:	687b      	ldr	r3, [r7, #4]
 80076ee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80076f0:	f023 0206 	bic.w	r2, r3, #6
 80076f4:	687b      	ldr	r3, [r7, #4]
 80076f6:	645a      	str	r2, [r3, #68]	; 0x44
 80076f8:	e002      	b.n	8007700 <HAL_ADC_Start+0xc4>
 80076fa:	687b      	ldr	r3, [r7, #4]
 80076fc:	2200      	movs	r2, #0
 80076fe:	645a      	str	r2, [r3, #68]	; 0x44
 8007700:	687b      	ldr	r3, [r7, #4]
 8007702:	2200      	movs	r2, #0
 8007704:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007708:	4b31      	ldr	r3, [pc, #196]	; (80077d0 <HAL_ADC_Start+0x194>)
 800770a:	60fb      	str	r3, [r7, #12]
 800770c:	687b      	ldr	r3, [r7, #4]
 800770e:	681b      	ldr	r3, [r3, #0]
 8007710:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8007714:	601a      	str	r2, [r3, #0]
 8007716:	68fb      	ldr	r3, [r7, #12]
 8007718:	685b      	ldr	r3, [r3, #4]
 800771a:	f003 031f 	and.w	r3, r3, #31
 800771e:	2b00      	cmp	r3, #0
 8007720:	d12a      	bne.n	8007778 <HAL_ADC_Start+0x13c>
 8007722:	687b      	ldr	r3, [r7, #4]
 8007724:	681b      	ldr	r3, [r3, #0]
 8007726:	4a2b      	ldr	r2, [pc, #172]	; (80077d4 <HAL_ADC_Start+0x198>)
 8007728:	4293      	cmp	r3, r2
 800772a:	d015      	beq.n	8007758 <HAL_ADC_Start+0x11c>
 800772c:	687b      	ldr	r3, [r7, #4]
 800772e:	681b      	ldr	r3, [r3, #0]
 8007730:	4a29      	ldr	r2, [pc, #164]	; (80077d8 <HAL_ADC_Start+0x19c>)
 8007732:	4293      	cmp	r3, r2
 8007734:	d105      	bne.n	8007742 <HAL_ADC_Start+0x106>
 8007736:	4b26      	ldr	r3, [pc, #152]	; (80077d0 <HAL_ADC_Start+0x194>)
 8007738:	685b      	ldr	r3, [r3, #4]
 800773a:	f003 031f 	and.w	r3, r3, #31
 800773e:	2b00      	cmp	r3, #0
 8007740:	d00a      	beq.n	8007758 <HAL_ADC_Start+0x11c>
 8007742:	687b      	ldr	r3, [r7, #4]
 8007744:	681b      	ldr	r3, [r3, #0]
 8007746:	4a25      	ldr	r2, [pc, #148]	; (80077dc <HAL_ADC_Start+0x1a0>)
 8007748:	4293      	cmp	r3, r2
 800774a:	d136      	bne.n	80077ba <HAL_ADC_Start+0x17e>
 800774c:	4b20      	ldr	r3, [pc, #128]	; (80077d0 <HAL_ADC_Start+0x194>)
 800774e:	685b      	ldr	r3, [r3, #4]
 8007750:	f003 0310 	and.w	r3, r3, #16
 8007754:	2b00      	cmp	r3, #0
 8007756:	d130      	bne.n	80077ba <HAL_ADC_Start+0x17e>
 8007758:	687b      	ldr	r3, [r7, #4]
 800775a:	681b      	ldr	r3, [r3, #0]
 800775c:	689b      	ldr	r3, [r3, #8]
 800775e:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8007762:	2b00      	cmp	r3, #0
 8007764:	d129      	bne.n	80077ba <HAL_ADC_Start+0x17e>
 8007766:	687b      	ldr	r3, [r7, #4]
 8007768:	681b      	ldr	r3, [r3, #0]
 800776a:	689a      	ldr	r2, [r3, #8]
 800776c:	687b      	ldr	r3, [r7, #4]
 800776e:	681b      	ldr	r3, [r3, #0]
 8007770:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8007774:	609a      	str	r2, [r3, #8]
 8007776:	e020      	b.n	80077ba <HAL_ADC_Start+0x17e>
 8007778:	687b      	ldr	r3, [r7, #4]
 800777a:	681b      	ldr	r3, [r3, #0]
 800777c:	4a15      	ldr	r2, [pc, #84]	; (80077d4 <HAL_ADC_Start+0x198>)
 800777e:	4293      	cmp	r3, r2
 8007780:	d11b      	bne.n	80077ba <HAL_ADC_Start+0x17e>
 8007782:	687b      	ldr	r3, [r7, #4]
 8007784:	681b      	ldr	r3, [r3, #0]
 8007786:	689b      	ldr	r3, [r3, #8]
 8007788:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800778c:	2b00      	cmp	r3, #0
 800778e:	d114      	bne.n	80077ba <HAL_ADC_Start+0x17e>
 8007790:	687b      	ldr	r3, [r7, #4]
 8007792:	681b      	ldr	r3, [r3, #0]
 8007794:	689a      	ldr	r2, [r3, #8]
 8007796:	687b      	ldr	r3, [r7, #4]
 8007798:	681b      	ldr	r3, [r3, #0]
 800779a:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800779e:	609a      	str	r2, [r3, #8]
 80077a0:	e00b      	b.n	80077ba <HAL_ADC_Start+0x17e>
 80077a2:	687b      	ldr	r3, [r7, #4]
 80077a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80077a6:	f043 0210 	orr.w	r2, r3, #16
 80077aa:	687b      	ldr	r3, [r7, #4]
 80077ac:	641a      	str	r2, [r3, #64]	; 0x40
 80077ae:	687b      	ldr	r3, [r7, #4]
 80077b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80077b2:	f043 0201 	orr.w	r2, r3, #1
 80077b6:	687b      	ldr	r3, [r7, #4]
 80077b8:	645a      	str	r2, [r3, #68]	; 0x44
 80077ba:	2300      	movs	r3, #0
 80077bc:	4618      	mov	r0, r3
 80077be:	3714      	adds	r7, #20
 80077c0:	46bd      	mov	sp, r7
 80077c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077c6:	4770      	bx	lr
 80077c8:	20000134 	.word	0x20000134
 80077cc:	431bde83 	.word	0x431bde83
 80077d0:	40012300 	.word	0x40012300
 80077d4:	40012000 	.word	0x40012000
 80077d8:	40012100 	.word	0x40012100
 80077dc:	40012200 	.word	0x40012200

080077e0 <HAL_ADC_PollForConversion>:
 80077e0:	b580      	push	{r7, lr}
 80077e2:	b084      	sub	sp, #16
 80077e4:	af00      	add	r7, sp, #0
 80077e6:	6078      	str	r0, [r7, #4]
 80077e8:	6039      	str	r1, [r7, #0]
 80077ea:	2300      	movs	r3, #0
 80077ec:	60fb      	str	r3, [r7, #12]
 80077ee:	687b      	ldr	r3, [r7, #4]
 80077f0:	681b      	ldr	r3, [r3, #0]
 80077f2:	689b      	ldr	r3, [r3, #8]
 80077f4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80077f8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80077fc:	d113      	bne.n	8007826 <HAL_ADC_PollForConversion+0x46>
 80077fe:	687b      	ldr	r3, [r7, #4]
 8007800:	681b      	ldr	r3, [r3, #0]
 8007802:	689b      	ldr	r3, [r3, #8]
 8007804:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007808:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800780c:	d10b      	bne.n	8007826 <HAL_ADC_PollForConversion+0x46>
 800780e:	687b      	ldr	r3, [r7, #4]
 8007810:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007812:	f043 0220 	orr.w	r2, r3, #32
 8007816:	687b      	ldr	r3, [r7, #4]
 8007818:	641a      	str	r2, [r3, #64]	; 0x40
 800781a:	687b      	ldr	r3, [r7, #4]
 800781c:	2200      	movs	r2, #0
 800781e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007822:	2301      	movs	r3, #1
 8007824:	e063      	b.n	80078ee <HAL_ADC_PollForConversion+0x10e>
 8007826:	f7ff fe95 	bl	8007554 <HAL_GetTick>
 800782a:	60f8      	str	r0, [r7, #12]
 800782c:	e021      	b.n	8007872 <HAL_ADC_PollForConversion+0x92>
 800782e:	683b      	ldr	r3, [r7, #0]
 8007830:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007834:	d01d      	beq.n	8007872 <HAL_ADC_PollForConversion+0x92>
 8007836:	683b      	ldr	r3, [r7, #0]
 8007838:	2b00      	cmp	r3, #0
 800783a:	d007      	beq.n	800784c <HAL_ADC_PollForConversion+0x6c>
 800783c:	f7ff fe8a 	bl	8007554 <HAL_GetTick>
 8007840:	4602      	mov	r2, r0
 8007842:	68fb      	ldr	r3, [r7, #12]
 8007844:	1ad3      	subs	r3, r2, r3
 8007846:	683a      	ldr	r2, [r7, #0]
 8007848:	429a      	cmp	r2, r3
 800784a:	d212      	bcs.n	8007872 <HAL_ADC_PollForConversion+0x92>
 800784c:	687b      	ldr	r3, [r7, #4]
 800784e:	681b      	ldr	r3, [r3, #0]
 8007850:	681b      	ldr	r3, [r3, #0]
 8007852:	f003 0302 	and.w	r3, r3, #2
 8007856:	2b02      	cmp	r3, #2
 8007858:	d00b      	beq.n	8007872 <HAL_ADC_PollForConversion+0x92>
 800785a:	687b      	ldr	r3, [r7, #4]
 800785c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800785e:	f043 0204 	orr.w	r2, r3, #4
 8007862:	687b      	ldr	r3, [r7, #4]
 8007864:	641a      	str	r2, [r3, #64]	; 0x40
 8007866:	687b      	ldr	r3, [r7, #4]
 8007868:	2200      	movs	r2, #0
 800786a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800786e:	2303      	movs	r3, #3
 8007870:	e03d      	b.n	80078ee <HAL_ADC_PollForConversion+0x10e>
 8007872:	687b      	ldr	r3, [r7, #4]
 8007874:	681b      	ldr	r3, [r3, #0]
 8007876:	681b      	ldr	r3, [r3, #0]
 8007878:	f003 0302 	and.w	r3, r3, #2
 800787c:	2b02      	cmp	r3, #2
 800787e:	d1d6      	bne.n	800782e <HAL_ADC_PollForConversion+0x4e>
 8007880:	687b      	ldr	r3, [r7, #4]
 8007882:	681b      	ldr	r3, [r3, #0]
 8007884:	f06f 0212 	mvn.w	r2, #18
 8007888:	601a      	str	r2, [r3, #0]
 800788a:	687b      	ldr	r3, [r7, #4]
 800788c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800788e:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8007892:	687b      	ldr	r3, [r7, #4]
 8007894:	641a      	str	r2, [r3, #64]	; 0x40
 8007896:	687b      	ldr	r3, [r7, #4]
 8007898:	681b      	ldr	r3, [r3, #0]
 800789a:	689b      	ldr	r3, [r3, #8]
 800789c:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80078a0:	2b00      	cmp	r3, #0
 80078a2:	d123      	bne.n	80078ec <HAL_ADC_PollForConversion+0x10c>
 80078a4:	687b      	ldr	r3, [r7, #4]
 80078a6:	7e1b      	ldrb	r3, [r3, #24]
 80078a8:	2b00      	cmp	r3, #0
 80078aa:	d11f      	bne.n	80078ec <HAL_ADC_PollForConversion+0x10c>
 80078ac:	687b      	ldr	r3, [r7, #4]
 80078ae:	681b      	ldr	r3, [r3, #0]
 80078b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80078b2:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 80078b6:	2b00      	cmp	r3, #0
 80078b8:	d006      	beq.n	80078c8 <HAL_ADC_PollForConversion+0xe8>
 80078ba:	687b      	ldr	r3, [r7, #4]
 80078bc:	681b      	ldr	r3, [r3, #0]
 80078be:	689b      	ldr	r3, [r3, #8]
 80078c0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80078c4:	2b00      	cmp	r3, #0
 80078c6:	d111      	bne.n	80078ec <HAL_ADC_PollForConversion+0x10c>
 80078c8:	687b      	ldr	r3, [r7, #4]
 80078ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80078cc:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80078d0:	687b      	ldr	r3, [r7, #4]
 80078d2:	641a      	str	r2, [r3, #64]	; 0x40
 80078d4:	687b      	ldr	r3, [r7, #4]
 80078d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80078d8:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80078dc:	2b00      	cmp	r3, #0
 80078de:	d105      	bne.n	80078ec <HAL_ADC_PollForConversion+0x10c>
 80078e0:	687b      	ldr	r3, [r7, #4]
 80078e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80078e4:	f043 0201 	orr.w	r2, r3, #1
 80078e8:	687b      	ldr	r3, [r7, #4]
 80078ea:	641a      	str	r2, [r3, #64]	; 0x40
 80078ec:	2300      	movs	r3, #0
 80078ee:	4618      	mov	r0, r3
 80078f0:	3710      	adds	r7, #16
 80078f2:	46bd      	mov	sp, r7
 80078f4:	bd80      	pop	{r7, pc}

080078f6 <HAL_ADC_GetValue>:
 80078f6:	b480      	push	{r7}
 80078f8:	b083      	sub	sp, #12
 80078fa:	af00      	add	r7, sp, #0
 80078fc:	6078      	str	r0, [r7, #4]
 80078fe:	687b      	ldr	r3, [r7, #4]
 8007900:	681b      	ldr	r3, [r3, #0]
 8007902:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007904:	4618      	mov	r0, r3
 8007906:	370c      	adds	r7, #12
 8007908:	46bd      	mov	sp, r7
 800790a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800790e:	4770      	bx	lr

08007910 <HAL_ADC_ConfigChannel>:
 8007910:	b480      	push	{r7}
 8007912:	b085      	sub	sp, #20
 8007914:	af00      	add	r7, sp, #0
 8007916:	6078      	str	r0, [r7, #4]
 8007918:	6039      	str	r1, [r7, #0]
 800791a:	2300      	movs	r3, #0
 800791c:	60bb      	str	r3, [r7, #8]
 800791e:	687b      	ldr	r3, [r7, #4]
 8007920:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007924:	2b01      	cmp	r3, #1
 8007926:	d101      	bne.n	800792c <HAL_ADC_ConfigChannel+0x1c>
 8007928:	2302      	movs	r3, #2
 800792a:	e113      	b.n	8007b54 <HAL_ADC_ConfigChannel+0x244>
 800792c:	687b      	ldr	r3, [r7, #4]
 800792e:	2201      	movs	r2, #1
 8007930:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007934:	683b      	ldr	r3, [r7, #0]
 8007936:	681b      	ldr	r3, [r3, #0]
 8007938:	2b09      	cmp	r3, #9
 800793a:	d925      	bls.n	8007988 <HAL_ADC_ConfigChannel+0x78>
 800793c:	687b      	ldr	r3, [r7, #4]
 800793e:	681b      	ldr	r3, [r3, #0]
 8007940:	68d9      	ldr	r1, [r3, #12]
 8007942:	683b      	ldr	r3, [r7, #0]
 8007944:	681b      	ldr	r3, [r3, #0]
 8007946:	b29b      	uxth	r3, r3
 8007948:	461a      	mov	r2, r3
 800794a:	4613      	mov	r3, r2
 800794c:	005b      	lsls	r3, r3, #1
 800794e:	4413      	add	r3, r2
 8007950:	3b1e      	subs	r3, #30
 8007952:	2207      	movs	r2, #7
 8007954:	fa02 f303 	lsl.w	r3, r2, r3
 8007958:	43da      	mvns	r2, r3
 800795a:	687b      	ldr	r3, [r7, #4]
 800795c:	681b      	ldr	r3, [r3, #0]
 800795e:	400a      	ands	r2, r1
 8007960:	60da      	str	r2, [r3, #12]
 8007962:	687b      	ldr	r3, [r7, #4]
 8007964:	681b      	ldr	r3, [r3, #0]
 8007966:	68d9      	ldr	r1, [r3, #12]
 8007968:	683b      	ldr	r3, [r7, #0]
 800796a:	689a      	ldr	r2, [r3, #8]
 800796c:	683b      	ldr	r3, [r7, #0]
 800796e:	681b      	ldr	r3, [r3, #0]
 8007970:	b29b      	uxth	r3, r3
 8007972:	4618      	mov	r0, r3
 8007974:	4603      	mov	r3, r0
 8007976:	005b      	lsls	r3, r3, #1
 8007978:	4403      	add	r3, r0
 800797a:	3b1e      	subs	r3, #30
 800797c:	409a      	lsls	r2, r3
 800797e:	687b      	ldr	r3, [r7, #4]
 8007980:	681b      	ldr	r3, [r3, #0]
 8007982:	430a      	orrs	r2, r1
 8007984:	60da      	str	r2, [r3, #12]
 8007986:	e022      	b.n	80079ce <HAL_ADC_ConfigChannel+0xbe>
 8007988:	687b      	ldr	r3, [r7, #4]
 800798a:	681b      	ldr	r3, [r3, #0]
 800798c:	6919      	ldr	r1, [r3, #16]
 800798e:	683b      	ldr	r3, [r7, #0]
 8007990:	681b      	ldr	r3, [r3, #0]
 8007992:	b29b      	uxth	r3, r3
 8007994:	461a      	mov	r2, r3
 8007996:	4613      	mov	r3, r2
 8007998:	005b      	lsls	r3, r3, #1
 800799a:	4413      	add	r3, r2
 800799c:	2207      	movs	r2, #7
 800799e:	fa02 f303 	lsl.w	r3, r2, r3
 80079a2:	43da      	mvns	r2, r3
 80079a4:	687b      	ldr	r3, [r7, #4]
 80079a6:	681b      	ldr	r3, [r3, #0]
 80079a8:	400a      	ands	r2, r1
 80079aa:	611a      	str	r2, [r3, #16]
 80079ac:	687b      	ldr	r3, [r7, #4]
 80079ae:	681b      	ldr	r3, [r3, #0]
 80079b0:	6919      	ldr	r1, [r3, #16]
 80079b2:	683b      	ldr	r3, [r7, #0]
 80079b4:	689a      	ldr	r2, [r3, #8]
 80079b6:	683b      	ldr	r3, [r7, #0]
 80079b8:	681b      	ldr	r3, [r3, #0]
 80079ba:	b29b      	uxth	r3, r3
 80079bc:	4618      	mov	r0, r3
 80079be:	4603      	mov	r3, r0
 80079c0:	005b      	lsls	r3, r3, #1
 80079c2:	4403      	add	r3, r0
 80079c4:	409a      	lsls	r2, r3
 80079c6:	687b      	ldr	r3, [r7, #4]
 80079c8:	681b      	ldr	r3, [r3, #0]
 80079ca:	430a      	orrs	r2, r1
 80079cc:	611a      	str	r2, [r3, #16]
 80079ce:	683b      	ldr	r3, [r7, #0]
 80079d0:	685b      	ldr	r3, [r3, #4]
 80079d2:	2b06      	cmp	r3, #6
 80079d4:	d824      	bhi.n	8007a20 <HAL_ADC_ConfigChannel+0x110>
 80079d6:	687b      	ldr	r3, [r7, #4]
 80079d8:	681b      	ldr	r3, [r3, #0]
 80079da:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80079dc:	683b      	ldr	r3, [r7, #0]
 80079de:	685a      	ldr	r2, [r3, #4]
 80079e0:	4613      	mov	r3, r2
 80079e2:	009b      	lsls	r3, r3, #2
 80079e4:	4413      	add	r3, r2
 80079e6:	3b05      	subs	r3, #5
 80079e8:	221f      	movs	r2, #31
 80079ea:	fa02 f303 	lsl.w	r3, r2, r3
 80079ee:	43da      	mvns	r2, r3
 80079f0:	687b      	ldr	r3, [r7, #4]
 80079f2:	681b      	ldr	r3, [r3, #0]
 80079f4:	400a      	ands	r2, r1
 80079f6:	635a      	str	r2, [r3, #52]	; 0x34
 80079f8:	687b      	ldr	r3, [r7, #4]
 80079fa:	681b      	ldr	r3, [r3, #0]
 80079fc:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80079fe:	683b      	ldr	r3, [r7, #0]
 8007a00:	681b      	ldr	r3, [r3, #0]
 8007a02:	b29b      	uxth	r3, r3
 8007a04:	4618      	mov	r0, r3
 8007a06:	683b      	ldr	r3, [r7, #0]
 8007a08:	685a      	ldr	r2, [r3, #4]
 8007a0a:	4613      	mov	r3, r2
 8007a0c:	009b      	lsls	r3, r3, #2
 8007a0e:	4413      	add	r3, r2
 8007a10:	3b05      	subs	r3, #5
 8007a12:	fa00 f203 	lsl.w	r2, r0, r3
 8007a16:	687b      	ldr	r3, [r7, #4]
 8007a18:	681b      	ldr	r3, [r3, #0]
 8007a1a:	430a      	orrs	r2, r1
 8007a1c:	635a      	str	r2, [r3, #52]	; 0x34
 8007a1e:	e04c      	b.n	8007aba <HAL_ADC_ConfigChannel+0x1aa>
 8007a20:	683b      	ldr	r3, [r7, #0]
 8007a22:	685b      	ldr	r3, [r3, #4]
 8007a24:	2b0c      	cmp	r3, #12
 8007a26:	d824      	bhi.n	8007a72 <HAL_ADC_ConfigChannel+0x162>
 8007a28:	687b      	ldr	r3, [r7, #4]
 8007a2a:	681b      	ldr	r3, [r3, #0]
 8007a2c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8007a2e:	683b      	ldr	r3, [r7, #0]
 8007a30:	685a      	ldr	r2, [r3, #4]
 8007a32:	4613      	mov	r3, r2
 8007a34:	009b      	lsls	r3, r3, #2
 8007a36:	4413      	add	r3, r2
 8007a38:	3b23      	subs	r3, #35	; 0x23
 8007a3a:	221f      	movs	r2, #31
 8007a3c:	fa02 f303 	lsl.w	r3, r2, r3
 8007a40:	43da      	mvns	r2, r3
 8007a42:	687b      	ldr	r3, [r7, #4]
 8007a44:	681b      	ldr	r3, [r3, #0]
 8007a46:	400a      	ands	r2, r1
 8007a48:	631a      	str	r2, [r3, #48]	; 0x30
 8007a4a:	687b      	ldr	r3, [r7, #4]
 8007a4c:	681b      	ldr	r3, [r3, #0]
 8007a4e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8007a50:	683b      	ldr	r3, [r7, #0]
 8007a52:	681b      	ldr	r3, [r3, #0]
 8007a54:	b29b      	uxth	r3, r3
 8007a56:	4618      	mov	r0, r3
 8007a58:	683b      	ldr	r3, [r7, #0]
 8007a5a:	685a      	ldr	r2, [r3, #4]
 8007a5c:	4613      	mov	r3, r2
 8007a5e:	009b      	lsls	r3, r3, #2
 8007a60:	4413      	add	r3, r2
 8007a62:	3b23      	subs	r3, #35	; 0x23
 8007a64:	fa00 f203 	lsl.w	r2, r0, r3
 8007a68:	687b      	ldr	r3, [r7, #4]
 8007a6a:	681b      	ldr	r3, [r3, #0]
 8007a6c:	430a      	orrs	r2, r1
 8007a6e:	631a      	str	r2, [r3, #48]	; 0x30
 8007a70:	e023      	b.n	8007aba <HAL_ADC_ConfigChannel+0x1aa>
 8007a72:	687b      	ldr	r3, [r7, #4]
 8007a74:	681b      	ldr	r3, [r3, #0]
 8007a76:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007a78:	683b      	ldr	r3, [r7, #0]
 8007a7a:	685a      	ldr	r2, [r3, #4]
 8007a7c:	4613      	mov	r3, r2
 8007a7e:	009b      	lsls	r3, r3, #2
 8007a80:	4413      	add	r3, r2
 8007a82:	3b41      	subs	r3, #65	; 0x41
 8007a84:	221f      	movs	r2, #31
 8007a86:	fa02 f303 	lsl.w	r3, r2, r3
 8007a8a:	43da      	mvns	r2, r3
 8007a8c:	687b      	ldr	r3, [r7, #4]
 8007a8e:	681b      	ldr	r3, [r3, #0]
 8007a90:	400a      	ands	r2, r1
 8007a92:	62da      	str	r2, [r3, #44]	; 0x2c
 8007a94:	687b      	ldr	r3, [r7, #4]
 8007a96:	681b      	ldr	r3, [r3, #0]
 8007a98:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007a9a:	683b      	ldr	r3, [r7, #0]
 8007a9c:	681b      	ldr	r3, [r3, #0]
 8007a9e:	b29b      	uxth	r3, r3
 8007aa0:	4618      	mov	r0, r3
 8007aa2:	683b      	ldr	r3, [r7, #0]
 8007aa4:	685a      	ldr	r2, [r3, #4]
 8007aa6:	4613      	mov	r3, r2
 8007aa8:	009b      	lsls	r3, r3, #2
 8007aaa:	4413      	add	r3, r2
 8007aac:	3b41      	subs	r3, #65	; 0x41
 8007aae:	fa00 f203 	lsl.w	r2, r0, r3
 8007ab2:	687b      	ldr	r3, [r7, #4]
 8007ab4:	681b      	ldr	r3, [r3, #0]
 8007ab6:	430a      	orrs	r2, r1
 8007ab8:	62da      	str	r2, [r3, #44]	; 0x2c
 8007aba:	4b29      	ldr	r3, [pc, #164]	; (8007b60 <HAL_ADC_ConfigChannel+0x250>)
 8007abc:	60fb      	str	r3, [r7, #12]
 8007abe:	687b      	ldr	r3, [r7, #4]
 8007ac0:	681b      	ldr	r3, [r3, #0]
 8007ac2:	4a28      	ldr	r2, [pc, #160]	; (8007b64 <HAL_ADC_ConfigChannel+0x254>)
 8007ac4:	4293      	cmp	r3, r2
 8007ac6:	d10f      	bne.n	8007ae8 <HAL_ADC_ConfigChannel+0x1d8>
 8007ac8:	683b      	ldr	r3, [r7, #0]
 8007aca:	681b      	ldr	r3, [r3, #0]
 8007acc:	2b12      	cmp	r3, #18
 8007ace:	d10b      	bne.n	8007ae8 <HAL_ADC_ConfigChannel+0x1d8>
 8007ad0:	68fb      	ldr	r3, [r7, #12]
 8007ad2:	685b      	ldr	r3, [r3, #4]
 8007ad4:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 8007ad8:	68fb      	ldr	r3, [r7, #12]
 8007ada:	605a      	str	r2, [r3, #4]
 8007adc:	68fb      	ldr	r3, [r7, #12]
 8007ade:	685b      	ldr	r3, [r3, #4]
 8007ae0:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8007ae4:	68fb      	ldr	r3, [r7, #12]
 8007ae6:	605a      	str	r2, [r3, #4]
 8007ae8:	687b      	ldr	r3, [r7, #4]
 8007aea:	681b      	ldr	r3, [r3, #0]
 8007aec:	4a1d      	ldr	r2, [pc, #116]	; (8007b64 <HAL_ADC_ConfigChannel+0x254>)
 8007aee:	4293      	cmp	r3, r2
 8007af0:	d12b      	bne.n	8007b4a <HAL_ADC_ConfigChannel+0x23a>
 8007af2:	683b      	ldr	r3, [r7, #0]
 8007af4:	681b      	ldr	r3, [r3, #0]
 8007af6:	4a1c      	ldr	r2, [pc, #112]	; (8007b68 <HAL_ADC_ConfigChannel+0x258>)
 8007af8:	4293      	cmp	r3, r2
 8007afa:	d003      	beq.n	8007b04 <HAL_ADC_ConfigChannel+0x1f4>
 8007afc:	683b      	ldr	r3, [r7, #0]
 8007afe:	681b      	ldr	r3, [r3, #0]
 8007b00:	2b11      	cmp	r3, #17
 8007b02:	d122      	bne.n	8007b4a <HAL_ADC_ConfigChannel+0x23a>
 8007b04:	68fb      	ldr	r3, [r7, #12]
 8007b06:	685b      	ldr	r3, [r3, #4]
 8007b08:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 8007b0c:	68fb      	ldr	r3, [r7, #12]
 8007b0e:	605a      	str	r2, [r3, #4]
 8007b10:	68fb      	ldr	r3, [r7, #12]
 8007b12:	685b      	ldr	r3, [r3, #4]
 8007b14:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8007b18:	68fb      	ldr	r3, [r7, #12]
 8007b1a:	605a      	str	r2, [r3, #4]
 8007b1c:	683b      	ldr	r3, [r7, #0]
 8007b1e:	681b      	ldr	r3, [r3, #0]
 8007b20:	4a11      	ldr	r2, [pc, #68]	; (8007b68 <HAL_ADC_ConfigChannel+0x258>)
 8007b22:	4293      	cmp	r3, r2
 8007b24:	d111      	bne.n	8007b4a <HAL_ADC_ConfigChannel+0x23a>
 8007b26:	4b11      	ldr	r3, [pc, #68]	; (8007b6c <HAL_ADC_ConfigChannel+0x25c>)
 8007b28:	681b      	ldr	r3, [r3, #0]
 8007b2a:	4a11      	ldr	r2, [pc, #68]	; (8007b70 <HAL_ADC_ConfigChannel+0x260>)
 8007b2c:	fba2 2303 	umull	r2, r3, r2, r3
 8007b30:	0c9a      	lsrs	r2, r3, #18
 8007b32:	4613      	mov	r3, r2
 8007b34:	009b      	lsls	r3, r3, #2
 8007b36:	4413      	add	r3, r2
 8007b38:	005b      	lsls	r3, r3, #1
 8007b3a:	60bb      	str	r3, [r7, #8]
 8007b3c:	e002      	b.n	8007b44 <HAL_ADC_ConfigChannel+0x234>
 8007b3e:	68bb      	ldr	r3, [r7, #8]
 8007b40:	3b01      	subs	r3, #1
 8007b42:	60bb      	str	r3, [r7, #8]
 8007b44:	68bb      	ldr	r3, [r7, #8]
 8007b46:	2b00      	cmp	r3, #0
 8007b48:	d1f9      	bne.n	8007b3e <HAL_ADC_ConfigChannel+0x22e>
 8007b4a:	687b      	ldr	r3, [r7, #4]
 8007b4c:	2200      	movs	r2, #0
 8007b4e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007b52:	2300      	movs	r3, #0
 8007b54:	4618      	mov	r0, r3
 8007b56:	3714      	adds	r7, #20
 8007b58:	46bd      	mov	sp, r7
 8007b5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b5e:	4770      	bx	lr
 8007b60:	40012300 	.word	0x40012300
 8007b64:	40012000 	.word	0x40012000
 8007b68:	10000012 	.word	0x10000012
 8007b6c:	20000134 	.word	0x20000134
 8007b70:	431bde83 	.word	0x431bde83

08007b74 <ADC_Init>:
 8007b74:	b480      	push	{r7}
 8007b76:	b085      	sub	sp, #20
 8007b78:	af00      	add	r7, sp, #0
 8007b7a:	6078      	str	r0, [r7, #4]
 8007b7c:	4b79      	ldr	r3, [pc, #484]	; (8007d64 <ADC_Init+0x1f0>)
 8007b7e:	60fb      	str	r3, [r7, #12]
 8007b80:	68fb      	ldr	r3, [r7, #12]
 8007b82:	685b      	ldr	r3, [r3, #4]
 8007b84:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8007b88:	68fb      	ldr	r3, [r7, #12]
 8007b8a:	605a      	str	r2, [r3, #4]
 8007b8c:	68fb      	ldr	r3, [r7, #12]
 8007b8e:	685a      	ldr	r2, [r3, #4]
 8007b90:	687b      	ldr	r3, [r7, #4]
 8007b92:	685b      	ldr	r3, [r3, #4]
 8007b94:	431a      	orrs	r2, r3
 8007b96:	68fb      	ldr	r3, [r7, #12]
 8007b98:	605a      	str	r2, [r3, #4]
 8007b9a:	687b      	ldr	r3, [r7, #4]
 8007b9c:	681b      	ldr	r3, [r3, #0]
 8007b9e:	685a      	ldr	r2, [r3, #4]
 8007ba0:	687b      	ldr	r3, [r7, #4]
 8007ba2:	681b      	ldr	r3, [r3, #0]
 8007ba4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007ba8:	605a      	str	r2, [r3, #4]
 8007baa:	687b      	ldr	r3, [r7, #4]
 8007bac:	681b      	ldr	r3, [r3, #0]
 8007bae:	6859      	ldr	r1, [r3, #4]
 8007bb0:	687b      	ldr	r3, [r7, #4]
 8007bb2:	691b      	ldr	r3, [r3, #16]
 8007bb4:	021a      	lsls	r2, r3, #8
 8007bb6:	687b      	ldr	r3, [r7, #4]
 8007bb8:	681b      	ldr	r3, [r3, #0]
 8007bba:	430a      	orrs	r2, r1
 8007bbc:	605a      	str	r2, [r3, #4]
 8007bbe:	687b      	ldr	r3, [r7, #4]
 8007bc0:	681b      	ldr	r3, [r3, #0]
 8007bc2:	685a      	ldr	r2, [r3, #4]
 8007bc4:	687b      	ldr	r3, [r7, #4]
 8007bc6:	681b      	ldr	r3, [r3, #0]
 8007bc8:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8007bcc:	605a      	str	r2, [r3, #4]
 8007bce:	687b      	ldr	r3, [r7, #4]
 8007bd0:	681b      	ldr	r3, [r3, #0]
 8007bd2:	6859      	ldr	r1, [r3, #4]
 8007bd4:	687b      	ldr	r3, [r7, #4]
 8007bd6:	689a      	ldr	r2, [r3, #8]
 8007bd8:	687b      	ldr	r3, [r7, #4]
 8007bda:	681b      	ldr	r3, [r3, #0]
 8007bdc:	430a      	orrs	r2, r1
 8007bde:	605a      	str	r2, [r3, #4]
 8007be0:	687b      	ldr	r3, [r7, #4]
 8007be2:	681b      	ldr	r3, [r3, #0]
 8007be4:	689a      	ldr	r2, [r3, #8]
 8007be6:	687b      	ldr	r3, [r7, #4]
 8007be8:	681b      	ldr	r3, [r3, #0]
 8007bea:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007bee:	609a      	str	r2, [r3, #8]
 8007bf0:	687b      	ldr	r3, [r7, #4]
 8007bf2:	681b      	ldr	r3, [r3, #0]
 8007bf4:	6899      	ldr	r1, [r3, #8]
 8007bf6:	687b      	ldr	r3, [r7, #4]
 8007bf8:	68da      	ldr	r2, [r3, #12]
 8007bfa:	687b      	ldr	r3, [r7, #4]
 8007bfc:	681b      	ldr	r3, [r3, #0]
 8007bfe:	430a      	orrs	r2, r1
 8007c00:	609a      	str	r2, [r3, #8]
 8007c02:	687b      	ldr	r3, [r7, #4]
 8007c04:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007c06:	4a58      	ldr	r2, [pc, #352]	; (8007d68 <ADC_Init+0x1f4>)
 8007c08:	4293      	cmp	r3, r2
 8007c0a:	d022      	beq.n	8007c52 <ADC_Init+0xde>
 8007c0c:	687b      	ldr	r3, [r7, #4]
 8007c0e:	681b      	ldr	r3, [r3, #0]
 8007c10:	689a      	ldr	r2, [r3, #8]
 8007c12:	687b      	ldr	r3, [r7, #4]
 8007c14:	681b      	ldr	r3, [r3, #0]
 8007c16:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8007c1a:	609a      	str	r2, [r3, #8]
 8007c1c:	687b      	ldr	r3, [r7, #4]
 8007c1e:	681b      	ldr	r3, [r3, #0]
 8007c20:	6899      	ldr	r1, [r3, #8]
 8007c22:	687b      	ldr	r3, [r7, #4]
 8007c24:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8007c26:	687b      	ldr	r3, [r7, #4]
 8007c28:	681b      	ldr	r3, [r3, #0]
 8007c2a:	430a      	orrs	r2, r1
 8007c2c:	609a      	str	r2, [r3, #8]
 8007c2e:	687b      	ldr	r3, [r7, #4]
 8007c30:	681b      	ldr	r3, [r3, #0]
 8007c32:	689a      	ldr	r2, [r3, #8]
 8007c34:	687b      	ldr	r3, [r7, #4]
 8007c36:	681b      	ldr	r3, [r3, #0]
 8007c38:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8007c3c:	609a      	str	r2, [r3, #8]
 8007c3e:	687b      	ldr	r3, [r7, #4]
 8007c40:	681b      	ldr	r3, [r3, #0]
 8007c42:	6899      	ldr	r1, [r3, #8]
 8007c44:	687b      	ldr	r3, [r7, #4]
 8007c46:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007c48:	687b      	ldr	r3, [r7, #4]
 8007c4a:	681b      	ldr	r3, [r3, #0]
 8007c4c:	430a      	orrs	r2, r1
 8007c4e:	609a      	str	r2, [r3, #8]
 8007c50:	e00f      	b.n	8007c72 <ADC_Init+0xfe>
 8007c52:	687b      	ldr	r3, [r7, #4]
 8007c54:	681b      	ldr	r3, [r3, #0]
 8007c56:	689a      	ldr	r2, [r3, #8]
 8007c58:	687b      	ldr	r3, [r7, #4]
 8007c5a:	681b      	ldr	r3, [r3, #0]
 8007c5c:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8007c60:	609a      	str	r2, [r3, #8]
 8007c62:	687b      	ldr	r3, [r7, #4]
 8007c64:	681b      	ldr	r3, [r3, #0]
 8007c66:	689a      	ldr	r2, [r3, #8]
 8007c68:	687b      	ldr	r3, [r7, #4]
 8007c6a:	681b      	ldr	r3, [r3, #0]
 8007c6c:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8007c70:	609a      	str	r2, [r3, #8]
 8007c72:	687b      	ldr	r3, [r7, #4]
 8007c74:	681b      	ldr	r3, [r3, #0]
 8007c76:	689a      	ldr	r2, [r3, #8]
 8007c78:	687b      	ldr	r3, [r7, #4]
 8007c7a:	681b      	ldr	r3, [r3, #0]
 8007c7c:	f022 0202 	bic.w	r2, r2, #2
 8007c80:	609a      	str	r2, [r3, #8]
 8007c82:	687b      	ldr	r3, [r7, #4]
 8007c84:	681b      	ldr	r3, [r3, #0]
 8007c86:	6899      	ldr	r1, [r3, #8]
 8007c88:	687b      	ldr	r3, [r7, #4]
 8007c8a:	7e1b      	ldrb	r3, [r3, #24]
 8007c8c:	005a      	lsls	r2, r3, #1
 8007c8e:	687b      	ldr	r3, [r7, #4]
 8007c90:	681b      	ldr	r3, [r3, #0]
 8007c92:	430a      	orrs	r2, r1
 8007c94:	609a      	str	r2, [r3, #8]
 8007c96:	687b      	ldr	r3, [r7, #4]
 8007c98:	f893 3020 	ldrb.w	r3, [r3, #32]
 8007c9c:	2b00      	cmp	r3, #0
 8007c9e:	d01b      	beq.n	8007cd8 <ADC_Init+0x164>
 8007ca0:	687b      	ldr	r3, [r7, #4]
 8007ca2:	681b      	ldr	r3, [r3, #0]
 8007ca4:	685a      	ldr	r2, [r3, #4]
 8007ca6:	687b      	ldr	r3, [r7, #4]
 8007ca8:	681b      	ldr	r3, [r3, #0]
 8007caa:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8007cae:	605a      	str	r2, [r3, #4]
 8007cb0:	687b      	ldr	r3, [r7, #4]
 8007cb2:	681b      	ldr	r3, [r3, #0]
 8007cb4:	685a      	ldr	r2, [r3, #4]
 8007cb6:	687b      	ldr	r3, [r7, #4]
 8007cb8:	681b      	ldr	r3, [r3, #0]
 8007cba:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8007cbe:	605a      	str	r2, [r3, #4]
 8007cc0:	687b      	ldr	r3, [r7, #4]
 8007cc2:	681b      	ldr	r3, [r3, #0]
 8007cc4:	6859      	ldr	r1, [r3, #4]
 8007cc6:	687b      	ldr	r3, [r7, #4]
 8007cc8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007cca:	3b01      	subs	r3, #1
 8007ccc:	035a      	lsls	r2, r3, #13
 8007cce:	687b      	ldr	r3, [r7, #4]
 8007cd0:	681b      	ldr	r3, [r3, #0]
 8007cd2:	430a      	orrs	r2, r1
 8007cd4:	605a      	str	r2, [r3, #4]
 8007cd6:	e007      	b.n	8007ce8 <ADC_Init+0x174>
 8007cd8:	687b      	ldr	r3, [r7, #4]
 8007cda:	681b      	ldr	r3, [r3, #0]
 8007cdc:	685a      	ldr	r2, [r3, #4]
 8007cde:	687b      	ldr	r3, [r7, #4]
 8007ce0:	681b      	ldr	r3, [r3, #0]
 8007ce2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007ce6:	605a      	str	r2, [r3, #4]
 8007ce8:	687b      	ldr	r3, [r7, #4]
 8007cea:	681b      	ldr	r3, [r3, #0]
 8007cec:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007cee:	687b      	ldr	r3, [r7, #4]
 8007cf0:	681b      	ldr	r3, [r3, #0]
 8007cf2:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8007cf6:	62da      	str	r2, [r3, #44]	; 0x2c
 8007cf8:	687b      	ldr	r3, [r7, #4]
 8007cfa:	681b      	ldr	r3, [r3, #0]
 8007cfc:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007cfe:	687b      	ldr	r3, [r7, #4]
 8007d00:	69db      	ldr	r3, [r3, #28]
 8007d02:	3b01      	subs	r3, #1
 8007d04:	051a      	lsls	r2, r3, #20
 8007d06:	687b      	ldr	r3, [r7, #4]
 8007d08:	681b      	ldr	r3, [r3, #0]
 8007d0a:	430a      	orrs	r2, r1
 8007d0c:	62da      	str	r2, [r3, #44]	; 0x2c
 8007d0e:	687b      	ldr	r3, [r7, #4]
 8007d10:	681b      	ldr	r3, [r3, #0]
 8007d12:	689a      	ldr	r2, [r3, #8]
 8007d14:	687b      	ldr	r3, [r7, #4]
 8007d16:	681b      	ldr	r3, [r3, #0]
 8007d18:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8007d1c:	609a      	str	r2, [r3, #8]
 8007d1e:	687b      	ldr	r3, [r7, #4]
 8007d20:	681b      	ldr	r3, [r3, #0]
 8007d22:	6899      	ldr	r1, [r3, #8]
 8007d24:	687b      	ldr	r3, [r7, #4]
 8007d26:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8007d2a:	025a      	lsls	r2, r3, #9
 8007d2c:	687b      	ldr	r3, [r7, #4]
 8007d2e:	681b      	ldr	r3, [r3, #0]
 8007d30:	430a      	orrs	r2, r1
 8007d32:	609a      	str	r2, [r3, #8]
 8007d34:	687b      	ldr	r3, [r7, #4]
 8007d36:	681b      	ldr	r3, [r3, #0]
 8007d38:	689a      	ldr	r2, [r3, #8]
 8007d3a:	687b      	ldr	r3, [r7, #4]
 8007d3c:	681b      	ldr	r3, [r3, #0]
 8007d3e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007d42:	609a      	str	r2, [r3, #8]
 8007d44:	687b      	ldr	r3, [r7, #4]
 8007d46:	681b      	ldr	r3, [r3, #0]
 8007d48:	6899      	ldr	r1, [r3, #8]
 8007d4a:	687b      	ldr	r3, [r7, #4]
 8007d4c:	695b      	ldr	r3, [r3, #20]
 8007d4e:	029a      	lsls	r2, r3, #10
 8007d50:	687b      	ldr	r3, [r7, #4]
 8007d52:	681b      	ldr	r3, [r3, #0]
 8007d54:	430a      	orrs	r2, r1
 8007d56:	609a      	str	r2, [r3, #8]
 8007d58:	bf00      	nop
 8007d5a:	3714      	adds	r7, #20
 8007d5c:	46bd      	mov	sp, r7
 8007d5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d62:	4770      	bx	lr
 8007d64:	40012300 	.word	0x40012300
 8007d68:	0f000001 	.word	0x0f000001

08007d6c <HAL_ADCEx_InjectedConfigChannel>:
 8007d6c:	b480      	push	{r7}
 8007d6e:	b085      	sub	sp, #20
 8007d70:	af00      	add	r7, sp, #0
 8007d72:	6078      	str	r0, [r7, #4]
 8007d74:	6039      	str	r1, [r7, #0]
 8007d76:	687b      	ldr	r3, [r7, #4]
 8007d78:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007d7c:	2b01      	cmp	r3, #1
 8007d7e:	d101      	bne.n	8007d84 <HAL_ADCEx_InjectedConfigChannel+0x18>
 8007d80:	2302      	movs	r3, #2
 8007d82:	e17e      	b.n	8008082 <HAL_ADCEx_InjectedConfigChannel+0x316>
 8007d84:	687b      	ldr	r3, [r7, #4]
 8007d86:	2201      	movs	r2, #1
 8007d88:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007d8c:	683b      	ldr	r3, [r7, #0]
 8007d8e:	681b      	ldr	r3, [r3, #0]
 8007d90:	2b09      	cmp	r3, #9
 8007d92:	d925      	bls.n	8007de0 <HAL_ADCEx_InjectedConfigChannel+0x74>
 8007d94:	687b      	ldr	r3, [r7, #4]
 8007d96:	681b      	ldr	r3, [r3, #0]
 8007d98:	68d9      	ldr	r1, [r3, #12]
 8007d9a:	683b      	ldr	r3, [r7, #0]
 8007d9c:	681b      	ldr	r3, [r3, #0]
 8007d9e:	b29b      	uxth	r3, r3
 8007da0:	461a      	mov	r2, r3
 8007da2:	4613      	mov	r3, r2
 8007da4:	005b      	lsls	r3, r3, #1
 8007da6:	4413      	add	r3, r2
 8007da8:	3b1e      	subs	r3, #30
 8007daa:	2207      	movs	r2, #7
 8007dac:	fa02 f303 	lsl.w	r3, r2, r3
 8007db0:	43da      	mvns	r2, r3
 8007db2:	687b      	ldr	r3, [r7, #4]
 8007db4:	681b      	ldr	r3, [r3, #0]
 8007db6:	400a      	ands	r2, r1
 8007db8:	60da      	str	r2, [r3, #12]
 8007dba:	687b      	ldr	r3, [r7, #4]
 8007dbc:	681b      	ldr	r3, [r3, #0]
 8007dbe:	68d9      	ldr	r1, [r3, #12]
 8007dc0:	683b      	ldr	r3, [r7, #0]
 8007dc2:	689a      	ldr	r2, [r3, #8]
 8007dc4:	683b      	ldr	r3, [r7, #0]
 8007dc6:	681b      	ldr	r3, [r3, #0]
 8007dc8:	b29b      	uxth	r3, r3
 8007dca:	4618      	mov	r0, r3
 8007dcc:	4603      	mov	r3, r0
 8007dce:	005b      	lsls	r3, r3, #1
 8007dd0:	4403      	add	r3, r0
 8007dd2:	3b1e      	subs	r3, #30
 8007dd4:	409a      	lsls	r2, r3
 8007dd6:	687b      	ldr	r3, [r7, #4]
 8007dd8:	681b      	ldr	r3, [r3, #0]
 8007dda:	430a      	orrs	r2, r1
 8007ddc:	60da      	str	r2, [r3, #12]
 8007dde:	e022      	b.n	8007e26 <HAL_ADCEx_InjectedConfigChannel+0xba>
 8007de0:	687b      	ldr	r3, [r7, #4]
 8007de2:	681b      	ldr	r3, [r3, #0]
 8007de4:	6919      	ldr	r1, [r3, #16]
 8007de6:	683b      	ldr	r3, [r7, #0]
 8007de8:	681b      	ldr	r3, [r3, #0]
 8007dea:	b29b      	uxth	r3, r3
 8007dec:	461a      	mov	r2, r3
 8007dee:	4613      	mov	r3, r2
 8007df0:	005b      	lsls	r3, r3, #1
 8007df2:	4413      	add	r3, r2
 8007df4:	2207      	movs	r2, #7
 8007df6:	fa02 f303 	lsl.w	r3, r2, r3
 8007dfa:	43da      	mvns	r2, r3
 8007dfc:	687b      	ldr	r3, [r7, #4]
 8007dfe:	681b      	ldr	r3, [r3, #0]
 8007e00:	400a      	ands	r2, r1
 8007e02:	611a      	str	r2, [r3, #16]
 8007e04:	687b      	ldr	r3, [r7, #4]
 8007e06:	681b      	ldr	r3, [r3, #0]
 8007e08:	6919      	ldr	r1, [r3, #16]
 8007e0a:	683b      	ldr	r3, [r7, #0]
 8007e0c:	689a      	ldr	r2, [r3, #8]
 8007e0e:	683b      	ldr	r3, [r7, #0]
 8007e10:	681b      	ldr	r3, [r3, #0]
 8007e12:	b29b      	uxth	r3, r3
 8007e14:	4618      	mov	r0, r3
 8007e16:	4603      	mov	r3, r0
 8007e18:	005b      	lsls	r3, r3, #1
 8007e1a:	4403      	add	r3, r0
 8007e1c:	409a      	lsls	r2, r3
 8007e1e:	687b      	ldr	r3, [r7, #4]
 8007e20:	681b      	ldr	r3, [r3, #0]
 8007e22:	430a      	orrs	r2, r1
 8007e24:	611a      	str	r2, [r3, #16]
 8007e26:	687b      	ldr	r3, [r7, #4]
 8007e28:	681b      	ldr	r3, [r3, #0]
 8007e2a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8007e2c:	687b      	ldr	r3, [r7, #4]
 8007e2e:	681b      	ldr	r3, [r3, #0]
 8007e30:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8007e34:	639a      	str	r2, [r3, #56]	; 0x38
 8007e36:	687b      	ldr	r3, [r7, #4]
 8007e38:	681b      	ldr	r3, [r3, #0]
 8007e3a:	6b99      	ldr	r1, [r3, #56]	; 0x38
 8007e3c:	683b      	ldr	r3, [r7, #0]
 8007e3e:	691b      	ldr	r3, [r3, #16]
 8007e40:	3b01      	subs	r3, #1
 8007e42:	051a      	lsls	r2, r3, #20
 8007e44:	687b      	ldr	r3, [r7, #4]
 8007e46:	681b      	ldr	r3, [r3, #0]
 8007e48:	430a      	orrs	r2, r1
 8007e4a:	639a      	str	r2, [r3, #56]	; 0x38
 8007e4c:	687b      	ldr	r3, [r7, #4]
 8007e4e:	681b      	ldr	r3, [r3, #0]
 8007e50:	6b99      	ldr	r1, [r3, #56]	; 0x38
 8007e52:	683b      	ldr	r3, [r7, #0]
 8007e54:	685b      	ldr	r3, [r3, #4]
 8007e56:	b2da      	uxtb	r2, r3
 8007e58:	683b      	ldr	r3, [r7, #0]
 8007e5a:	691b      	ldr	r3, [r3, #16]
 8007e5c:	b2db      	uxtb	r3, r3
 8007e5e:	1ad3      	subs	r3, r2, r3
 8007e60:	b2db      	uxtb	r3, r3
 8007e62:	3303      	adds	r3, #3
 8007e64:	b2db      	uxtb	r3, r3
 8007e66:	461a      	mov	r2, r3
 8007e68:	4613      	mov	r3, r2
 8007e6a:	009b      	lsls	r3, r3, #2
 8007e6c:	4413      	add	r3, r2
 8007e6e:	221f      	movs	r2, #31
 8007e70:	fa02 f303 	lsl.w	r3, r2, r3
 8007e74:	43da      	mvns	r2, r3
 8007e76:	687b      	ldr	r3, [r7, #4]
 8007e78:	681b      	ldr	r3, [r3, #0]
 8007e7a:	400a      	ands	r2, r1
 8007e7c:	639a      	str	r2, [r3, #56]	; 0x38
 8007e7e:	687b      	ldr	r3, [r7, #4]
 8007e80:	681b      	ldr	r3, [r3, #0]
 8007e82:	6b99      	ldr	r1, [r3, #56]	; 0x38
 8007e84:	683b      	ldr	r3, [r7, #0]
 8007e86:	681b      	ldr	r3, [r3, #0]
 8007e88:	b29b      	uxth	r3, r3
 8007e8a:	4618      	mov	r0, r3
 8007e8c:	683b      	ldr	r3, [r7, #0]
 8007e8e:	685b      	ldr	r3, [r3, #4]
 8007e90:	b2da      	uxtb	r2, r3
 8007e92:	683b      	ldr	r3, [r7, #0]
 8007e94:	691b      	ldr	r3, [r3, #16]
 8007e96:	b2db      	uxtb	r3, r3
 8007e98:	1ad3      	subs	r3, r2, r3
 8007e9a:	b2db      	uxtb	r3, r3
 8007e9c:	3303      	adds	r3, #3
 8007e9e:	b2db      	uxtb	r3, r3
 8007ea0:	461a      	mov	r2, r3
 8007ea2:	4613      	mov	r3, r2
 8007ea4:	009b      	lsls	r3, r3, #2
 8007ea6:	4413      	add	r3, r2
 8007ea8:	fa00 f203 	lsl.w	r2, r0, r3
 8007eac:	687b      	ldr	r3, [r7, #4]
 8007eae:	681b      	ldr	r3, [r3, #0]
 8007eb0:	430a      	orrs	r2, r1
 8007eb2:	639a      	str	r2, [r3, #56]	; 0x38
 8007eb4:	683b      	ldr	r3, [r7, #0]
 8007eb6:	699b      	ldr	r3, [r3, #24]
 8007eb8:	4a75      	ldr	r2, [pc, #468]	; (8008090 <HAL_ADCEx_InjectedConfigChannel+0x324>)
 8007eba:	4293      	cmp	r3, r2
 8007ebc:	d022      	beq.n	8007f04 <HAL_ADCEx_InjectedConfigChannel+0x198>
 8007ebe:	687b      	ldr	r3, [r7, #4]
 8007ec0:	681b      	ldr	r3, [r3, #0]
 8007ec2:	689a      	ldr	r2, [r3, #8]
 8007ec4:	687b      	ldr	r3, [r7, #4]
 8007ec6:	681b      	ldr	r3, [r3, #0]
 8007ec8:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8007ecc:	609a      	str	r2, [r3, #8]
 8007ece:	687b      	ldr	r3, [r7, #4]
 8007ed0:	681b      	ldr	r3, [r3, #0]
 8007ed2:	6899      	ldr	r1, [r3, #8]
 8007ed4:	683b      	ldr	r3, [r7, #0]
 8007ed6:	699a      	ldr	r2, [r3, #24]
 8007ed8:	687b      	ldr	r3, [r7, #4]
 8007eda:	681b      	ldr	r3, [r3, #0]
 8007edc:	430a      	orrs	r2, r1
 8007ede:	609a      	str	r2, [r3, #8]
 8007ee0:	687b      	ldr	r3, [r7, #4]
 8007ee2:	681b      	ldr	r3, [r3, #0]
 8007ee4:	689a      	ldr	r2, [r3, #8]
 8007ee6:	687b      	ldr	r3, [r7, #4]
 8007ee8:	681b      	ldr	r3, [r3, #0]
 8007eea:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8007eee:	609a      	str	r2, [r3, #8]
 8007ef0:	687b      	ldr	r3, [r7, #4]
 8007ef2:	681b      	ldr	r3, [r3, #0]
 8007ef4:	6899      	ldr	r1, [r3, #8]
 8007ef6:	683b      	ldr	r3, [r7, #0]
 8007ef8:	69da      	ldr	r2, [r3, #28]
 8007efa:	687b      	ldr	r3, [r7, #4]
 8007efc:	681b      	ldr	r3, [r3, #0]
 8007efe:	430a      	orrs	r2, r1
 8007f00:	609a      	str	r2, [r3, #8]
 8007f02:	e00f      	b.n	8007f24 <HAL_ADCEx_InjectedConfigChannel+0x1b8>
 8007f04:	687b      	ldr	r3, [r7, #4]
 8007f06:	681b      	ldr	r3, [r3, #0]
 8007f08:	689a      	ldr	r2, [r3, #8]
 8007f0a:	687b      	ldr	r3, [r7, #4]
 8007f0c:	681b      	ldr	r3, [r3, #0]
 8007f0e:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8007f12:	609a      	str	r2, [r3, #8]
 8007f14:	687b      	ldr	r3, [r7, #4]
 8007f16:	681b      	ldr	r3, [r3, #0]
 8007f18:	689a      	ldr	r2, [r3, #8]
 8007f1a:	687b      	ldr	r3, [r7, #4]
 8007f1c:	681b      	ldr	r3, [r3, #0]
 8007f1e:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8007f22:	609a      	str	r2, [r3, #8]
 8007f24:	683b      	ldr	r3, [r7, #0]
 8007f26:	7d5b      	ldrb	r3, [r3, #21]
 8007f28:	2b00      	cmp	r3, #0
 8007f2a:	d008      	beq.n	8007f3e <HAL_ADCEx_InjectedConfigChannel+0x1d2>
 8007f2c:	687b      	ldr	r3, [r7, #4]
 8007f2e:	681b      	ldr	r3, [r3, #0]
 8007f30:	685a      	ldr	r2, [r3, #4]
 8007f32:	687b      	ldr	r3, [r7, #4]
 8007f34:	681b      	ldr	r3, [r3, #0]
 8007f36:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007f3a:	605a      	str	r2, [r3, #4]
 8007f3c:	e007      	b.n	8007f4e <HAL_ADCEx_InjectedConfigChannel+0x1e2>
 8007f3e:	687b      	ldr	r3, [r7, #4]
 8007f40:	681b      	ldr	r3, [r3, #0]
 8007f42:	685a      	ldr	r2, [r3, #4]
 8007f44:	687b      	ldr	r3, [r7, #4]
 8007f46:	681b      	ldr	r3, [r3, #0]
 8007f48:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007f4c:	605a      	str	r2, [r3, #4]
 8007f4e:	683b      	ldr	r3, [r7, #0]
 8007f50:	7d1b      	ldrb	r3, [r3, #20]
 8007f52:	2b00      	cmp	r3, #0
 8007f54:	d008      	beq.n	8007f68 <HAL_ADCEx_InjectedConfigChannel+0x1fc>
 8007f56:	687b      	ldr	r3, [r7, #4]
 8007f58:	681b      	ldr	r3, [r3, #0]
 8007f5a:	685a      	ldr	r2, [r3, #4]
 8007f5c:	687b      	ldr	r3, [r7, #4]
 8007f5e:	681b      	ldr	r3, [r3, #0]
 8007f60:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8007f64:	605a      	str	r2, [r3, #4]
 8007f66:	e007      	b.n	8007f78 <HAL_ADCEx_InjectedConfigChannel+0x20c>
 8007f68:	687b      	ldr	r3, [r7, #4]
 8007f6a:	681b      	ldr	r3, [r3, #0]
 8007f6c:	685a      	ldr	r2, [r3, #4]
 8007f6e:	687b      	ldr	r3, [r7, #4]
 8007f70:	681b      	ldr	r3, [r3, #0]
 8007f72:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8007f76:	605a      	str	r2, [r3, #4]
 8007f78:	683b      	ldr	r3, [r7, #0]
 8007f7a:	685b      	ldr	r3, [r3, #4]
 8007f7c:	2b03      	cmp	r3, #3
 8007f7e:	d02e      	beq.n	8007fde <HAL_ADCEx_InjectedConfigChannel+0x272>
 8007f80:	2b03      	cmp	r3, #3
 8007f82:	d840      	bhi.n	8008006 <HAL_ADCEx_InjectedConfigChannel+0x29a>
 8007f84:	2b01      	cmp	r3, #1
 8007f86:	d002      	beq.n	8007f8e <HAL_ADCEx_InjectedConfigChannel+0x222>
 8007f88:	2b02      	cmp	r3, #2
 8007f8a:	d014      	beq.n	8007fb6 <HAL_ADCEx_InjectedConfigChannel+0x24a>
 8007f8c:	e03b      	b.n	8008006 <HAL_ADCEx_InjectedConfigChannel+0x29a>
 8007f8e:	687b      	ldr	r3, [r7, #4]
 8007f90:	681b      	ldr	r3, [r3, #0]
 8007f92:	695b      	ldr	r3, [r3, #20]
 8007f94:	687a      	ldr	r2, [r7, #4]
 8007f96:	6812      	ldr	r2, [r2, #0]
 8007f98:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8007f9c:	f023 030f 	bic.w	r3, r3, #15
 8007fa0:	6153      	str	r3, [r2, #20]
 8007fa2:	687b      	ldr	r3, [r7, #4]
 8007fa4:	681b      	ldr	r3, [r3, #0]
 8007fa6:	6959      	ldr	r1, [r3, #20]
 8007fa8:	683b      	ldr	r3, [r7, #0]
 8007faa:	68da      	ldr	r2, [r3, #12]
 8007fac:	687b      	ldr	r3, [r7, #4]
 8007fae:	681b      	ldr	r3, [r3, #0]
 8007fb0:	430a      	orrs	r2, r1
 8007fb2:	615a      	str	r2, [r3, #20]
 8007fb4:	e03b      	b.n	800802e <HAL_ADCEx_InjectedConfigChannel+0x2c2>
 8007fb6:	687b      	ldr	r3, [r7, #4]
 8007fb8:	681b      	ldr	r3, [r3, #0]
 8007fba:	699b      	ldr	r3, [r3, #24]
 8007fbc:	687a      	ldr	r2, [r7, #4]
 8007fbe:	6812      	ldr	r2, [r2, #0]
 8007fc0:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8007fc4:	f023 030f 	bic.w	r3, r3, #15
 8007fc8:	6193      	str	r3, [r2, #24]
 8007fca:	687b      	ldr	r3, [r7, #4]
 8007fcc:	681b      	ldr	r3, [r3, #0]
 8007fce:	6999      	ldr	r1, [r3, #24]
 8007fd0:	683b      	ldr	r3, [r7, #0]
 8007fd2:	68da      	ldr	r2, [r3, #12]
 8007fd4:	687b      	ldr	r3, [r7, #4]
 8007fd6:	681b      	ldr	r3, [r3, #0]
 8007fd8:	430a      	orrs	r2, r1
 8007fda:	619a      	str	r2, [r3, #24]
 8007fdc:	e027      	b.n	800802e <HAL_ADCEx_InjectedConfigChannel+0x2c2>
 8007fde:	687b      	ldr	r3, [r7, #4]
 8007fe0:	681b      	ldr	r3, [r3, #0]
 8007fe2:	69db      	ldr	r3, [r3, #28]
 8007fe4:	687a      	ldr	r2, [r7, #4]
 8007fe6:	6812      	ldr	r2, [r2, #0]
 8007fe8:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8007fec:	f023 030f 	bic.w	r3, r3, #15
 8007ff0:	61d3      	str	r3, [r2, #28]
 8007ff2:	687b      	ldr	r3, [r7, #4]
 8007ff4:	681b      	ldr	r3, [r3, #0]
 8007ff6:	69d9      	ldr	r1, [r3, #28]
 8007ff8:	683b      	ldr	r3, [r7, #0]
 8007ffa:	68da      	ldr	r2, [r3, #12]
 8007ffc:	687b      	ldr	r3, [r7, #4]
 8007ffe:	681b      	ldr	r3, [r3, #0]
 8008000:	430a      	orrs	r2, r1
 8008002:	61da      	str	r2, [r3, #28]
 8008004:	e013      	b.n	800802e <HAL_ADCEx_InjectedConfigChannel+0x2c2>
 8008006:	687b      	ldr	r3, [r7, #4]
 8008008:	681b      	ldr	r3, [r3, #0]
 800800a:	6a1b      	ldr	r3, [r3, #32]
 800800c:	687a      	ldr	r2, [r7, #4]
 800800e:	6812      	ldr	r2, [r2, #0]
 8008010:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8008014:	f023 030f 	bic.w	r3, r3, #15
 8008018:	6213      	str	r3, [r2, #32]
 800801a:	687b      	ldr	r3, [r7, #4]
 800801c:	681b      	ldr	r3, [r3, #0]
 800801e:	6a19      	ldr	r1, [r3, #32]
 8008020:	683b      	ldr	r3, [r7, #0]
 8008022:	68da      	ldr	r2, [r3, #12]
 8008024:	687b      	ldr	r3, [r7, #4]
 8008026:	681b      	ldr	r3, [r3, #0]
 8008028:	430a      	orrs	r2, r1
 800802a:	621a      	str	r2, [r3, #32]
 800802c:	bf00      	nop
 800802e:	4b19      	ldr	r3, [pc, #100]	; (8008094 <HAL_ADCEx_InjectedConfigChannel+0x328>)
 8008030:	60fb      	str	r3, [r7, #12]
 8008032:	687b      	ldr	r3, [r7, #4]
 8008034:	681b      	ldr	r3, [r3, #0]
 8008036:	4a18      	ldr	r2, [pc, #96]	; (8008098 <HAL_ADCEx_InjectedConfigChannel+0x32c>)
 8008038:	4293      	cmp	r3, r2
 800803a:	d109      	bne.n	8008050 <HAL_ADCEx_InjectedConfigChannel+0x2e4>
 800803c:	683b      	ldr	r3, [r7, #0]
 800803e:	681b      	ldr	r3, [r3, #0]
 8008040:	2b12      	cmp	r3, #18
 8008042:	d105      	bne.n	8008050 <HAL_ADCEx_InjectedConfigChannel+0x2e4>
 8008044:	68fb      	ldr	r3, [r7, #12]
 8008046:	685b      	ldr	r3, [r3, #4]
 8008048:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 800804c:	68fb      	ldr	r3, [r7, #12]
 800804e:	605a      	str	r2, [r3, #4]
 8008050:	687b      	ldr	r3, [r7, #4]
 8008052:	681b      	ldr	r3, [r3, #0]
 8008054:	4a10      	ldr	r2, [pc, #64]	; (8008098 <HAL_ADCEx_InjectedConfigChannel+0x32c>)
 8008056:	4293      	cmp	r3, r2
 8008058:	d10e      	bne.n	8008078 <HAL_ADCEx_InjectedConfigChannel+0x30c>
 800805a:	683b      	ldr	r3, [r7, #0]
 800805c:	681b      	ldr	r3, [r3, #0]
 800805e:	4a0f      	ldr	r2, [pc, #60]	; (800809c <HAL_ADCEx_InjectedConfigChannel+0x330>)
 8008060:	4293      	cmp	r3, r2
 8008062:	d003      	beq.n	800806c <HAL_ADCEx_InjectedConfigChannel+0x300>
 8008064:	683b      	ldr	r3, [r7, #0]
 8008066:	681b      	ldr	r3, [r3, #0]
 8008068:	2b11      	cmp	r3, #17
 800806a:	d105      	bne.n	8008078 <HAL_ADCEx_InjectedConfigChannel+0x30c>
 800806c:	68fb      	ldr	r3, [r7, #12]
 800806e:	685b      	ldr	r3, [r3, #4]
 8008070:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8008074:	68fb      	ldr	r3, [r7, #12]
 8008076:	605a      	str	r2, [r3, #4]
 8008078:	687b      	ldr	r3, [r7, #4]
 800807a:	2200      	movs	r2, #0
 800807c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008080:	2300      	movs	r3, #0
 8008082:	4618      	mov	r0, r3
 8008084:	3714      	adds	r7, #20
 8008086:	46bd      	mov	sp, r7
 8008088:	f85d 7b04 	ldr.w	r7, [sp], #4
 800808c:	4770      	bx	lr
 800808e:	bf00      	nop
 8008090:	000f0001 	.word	0x000f0001
 8008094:	40012300 	.word	0x40012300
 8008098:	40012000 	.word	0x40012000
 800809c:	10000012 	.word	0x10000012

080080a0 <__NVIC_SetPriorityGrouping>:
 80080a0:	b480      	push	{r7}
 80080a2:	b085      	sub	sp, #20
 80080a4:	af00      	add	r7, sp, #0
 80080a6:	6078      	str	r0, [r7, #4]
 80080a8:	687b      	ldr	r3, [r7, #4]
 80080aa:	f003 0307 	and.w	r3, r3, #7
 80080ae:	60fb      	str	r3, [r7, #12]
 80080b0:	4b0c      	ldr	r3, [pc, #48]	; (80080e4 <__NVIC_SetPriorityGrouping+0x44>)
 80080b2:	68db      	ldr	r3, [r3, #12]
 80080b4:	60bb      	str	r3, [r7, #8]
 80080b6:	68ba      	ldr	r2, [r7, #8]
 80080b8:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80080bc:	4013      	ands	r3, r2
 80080be:	60bb      	str	r3, [r7, #8]
 80080c0:	68fb      	ldr	r3, [r7, #12]
 80080c2:	021a      	lsls	r2, r3, #8
 80080c4:	68bb      	ldr	r3, [r7, #8]
 80080c6:	4313      	orrs	r3, r2
 80080c8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80080cc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80080d0:	60bb      	str	r3, [r7, #8]
 80080d2:	4a04      	ldr	r2, [pc, #16]	; (80080e4 <__NVIC_SetPriorityGrouping+0x44>)
 80080d4:	68bb      	ldr	r3, [r7, #8]
 80080d6:	60d3      	str	r3, [r2, #12]
 80080d8:	bf00      	nop
 80080da:	3714      	adds	r7, #20
 80080dc:	46bd      	mov	sp, r7
 80080de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080e2:	4770      	bx	lr
 80080e4:	e000ed00 	.word	0xe000ed00

080080e8 <__NVIC_GetPriorityGrouping>:
 80080e8:	b480      	push	{r7}
 80080ea:	af00      	add	r7, sp, #0
 80080ec:	4b04      	ldr	r3, [pc, #16]	; (8008100 <__NVIC_GetPriorityGrouping+0x18>)
 80080ee:	68db      	ldr	r3, [r3, #12]
 80080f0:	0a1b      	lsrs	r3, r3, #8
 80080f2:	f003 0307 	and.w	r3, r3, #7
 80080f6:	4618      	mov	r0, r3
 80080f8:	46bd      	mov	sp, r7
 80080fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080fe:	4770      	bx	lr
 8008100:	e000ed00 	.word	0xe000ed00

08008104 <__NVIC_EnableIRQ>:
 8008104:	b480      	push	{r7}
 8008106:	b083      	sub	sp, #12
 8008108:	af00      	add	r7, sp, #0
 800810a:	4603      	mov	r3, r0
 800810c:	71fb      	strb	r3, [r7, #7]
 800810e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008112:	2b00      	cmp	r3, #0
 8008114:	db0b      	blt.n	800812e <__NVIC_EnableIRQ+0x2a>
 8008116:	79fb      	ldrb	r3, [r7, #7]
 8008118:	f003 021f 	and.w	r2, r3, #31
 800811c:	4907      	ldr	r1, [pc, #28]	; (800813c <__NVIC_EnableIRQ+0x38>)
 800811e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008122:	095b      	lsrs	r3, r3, #5
 8008124:	2001      	movs	r0, #1
 8008126:	fa00 f202 	lsl.w	r2, r0, r2
 800812a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800812e:	bf00      	nop
 8008130:	370c      	adds	r7, #12
 8008132:	46bd      	mov	sp, r7
 8008134:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008138:	4770      	bx	lr
 800813a:	bf00      	nop
 800813c:	e000e100 	.word	0xe000e100

08008140 <__NVIC_DisableIRQ>:
 8008140:	b480      	push	{r7}
 8008142:	b083      	sub	sp, #12
 8008144:	af00      	add	r7, sp, #0
 8008146:	4603      	mov	r3, r0
 8008148:	71fb      	strb	r3, [r7, #7]
 800814a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800814e:	2b00      	cmp	r3, #0
 8008150:	db12      	blt.n	8008178 <__NVIC_DisableIRQ+0x38>
 8008152:	79fb      	ldrb	r3, [r7, #7]
 8008154:	f003 021f 	and.w	r2, r3, #31
 8008158:	490a      	ldr	r1, [pc, #40]	; (8008184 <__NVIC_DisableIRQ+0x44>)
 800815a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800815e:	095b      	lsrs	r3, r3, #5
 8008160:	2001      	movs	r0, #1
 8008162:	fa00 f202 	lsl.w	r2, r0, r2
 8008166:	3320      	adds	r3, #32
 8008168:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800816c:	f3bf 8f4f 	dsb	sy
 8008170:	bf00      	nop
 8008172:	f3bf 8f6f 	isb	sy
 8008176:	bf00      	nop
 8008178:	bf00      	nop
 800817a:	370c      	adds	r7, #12
 800817c:	46bd      	mov	sp, r7
 800817e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008182:	4770      	bx	lr
 8008184:	e000e100 	.word	0xe000e100

08008188 <__NVIC_SetPriority>:
 8008188:	b480      	push	{r7}
 800818a:	b083      	sub	sp, #12
 800818c:	af00      	add	r7, sp, #0
 800818e:	4603      	mov	r3, r0
 8008190:	6039      	str	r1, [r7, #0]
 8008192:	71fb      	strb	r3, [r7, #7]
 8008194:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008198:	2b00      	cmp	r3, #0
 800819a:	db0a      	blt.n	80081b2 <__NVIC_SetPriority+0x2a>
 800819c:	683b      	ldr	r3, [r7, #0]
 800819e:	b2da      	uxtb	r2, r3
 80081a0:	490c      	ldr	r1, [pc, #48]	; (80081d4 <__NVIC_SetPriority+0x4c>)
 80081a2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80081a6:	0112      	lsls	r2, r2, #4
 80081a8:	b2d2      	uxtb	r2, r2
 80081aa:	440b      	add	r3, r1
 80081ac:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80081b0:	e00a      	b.n	80081c8 <__NVIC_SetPriority+0x40>
 80081b2:	683b      	ldr	r3, [r7, #0]
 80081b4:	b2da      	uxtb	r2, r3
 80081b6:	4908      	ldr	r1, [pc, #32]	; (80081d8 <__NVIC_SetPriority+0x50>)
 80081b8:	79fb      	ldrb	r3, [r7, #7]
 80081ba:	f003 030f 	and.w	r3, r3, #15
 80081be:	3b04      	subs	r3, #4
 80081c0:	0112      	lsls	r2, r2, #4
 80081c2:	b2d2      	uxtb	r2, r2
 80081c4:	440b      	add	r3, r1
 80081c6:	761a      	strb	r2, [r3, #24]
 80081c8:	bf00      	nop
 80081ca:	370c      	adds	r7, #12
 80081cc:	46bd      	mov	sp, r7
 80081ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081d2:	4770      	bx	lr
 80081d4:	e000e100 	.word	0xe000e100
 80081d8:	e000ed00 	.word	0xe000ed00

080081dc <NVIC_EncodePriority>:
 80081dc:	b480      	push	{r7}
 80081de:	b089      	sub	sp, #36	; 0x24
 80081e0:	af00      	add	r7, sp, #0
 80081e2:	60f8      	str	r0, [r7, #12]
 80081e4:	60b9      	str	r1, [r7, #8]
 80081e6:	607a      	str	r2, [r7, #4]
 80081e8:	68fb      	ldr	r3, [r7, #12]
 80081ea:	f003 0307 	and.w	r3, r3, #7
 80081ee:	61fb      	str	r3, [r7, #28]
 80081f0:	69fb      	ldr	r3, [r7, #28]
 80081f2:	f1c3 0307 	rsb	r3, r3, #7
 80081f6:	2b04      	cmp	r3, #4
 80081f8:	bf28      	it	cs
 80081fa:	2304      	movcs	r3, #4
 80081fc:	61bb      	str	r3, [r7, #24]
 80081fe:	69fb      	ldr	r3, [r7, #28]
 8008200:	3304      	adds	r3, #4
 8008202:	2b06      	cmp	r3, #6
 8008204:	d902      	bls.n	800820c <NVIC_EncodePriority+0x30>
 8008206:	69fb      	ldr	r3, [r7, #28]
 8008208:	3b03      	subs	r3, #3
 800820a:	e000      	b.n	800820e <NVIC_EncodePriority+0x32>
 800820c:	2300      	movs	r3, #0
 800820e:	617b      	str	r3, [r7, #20]
 8008210:	f04f 32ff 	mov.w	r2, #4294967295
 8008214:	69bb      	ldr	r3, [r7, #24]
 8008216:	fa02 f303 	lsl.w	r3, r2, r3
 800821a:	43da      	mvns	r2, r3
 800821c:	68bb      	ldr	r3, [r7, #8]
 800821e:	401a      	ands	r2, r3
 8008220:	697b      	ldr	r3, [r7, #20]
 8008222:	409a      	lsls	r2, r3
 8008224:	f04f 31ff 	mov.w	r1, #4294967295
 8008228:	697b      	ldr	r3, [r7, #20]
 800822a:	fa01 f303 	lsl.w	r3, r1, r3
 800822e:	43d9      	mvns	r1, r3
 8008230:	687b      	ldr	r3, [r7, #4]
 8008232:	400b      	ands	r3, r1
 8008234:	4313      	orrs	r3, r2
 8008236:	4618      	mov	r0, r3
 8008238:	3724      	adds	r7, #36	; 0x24
 800823a:	46bd      	mov	sp, r7
 800823c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008240:	4770      	bx	lr
	...

08008244 <SysTick_Config>:
 8008244:	b580      	push	{r7, lr}
 8008246:	b082      	sub	sp, #8
 8008248:	af00      	add	r7, sp, #0
 800824a:	6078      	str	r0, [r7, #4]
 800824c:	687b      	ldr	r3, [r7, #4]
 800824e:	3b01      	subs	r3, #1
 8008250:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8008254:	d301      	bcc.n	800825a <SysTick_Config+0x16>
 8008256:	2301      	movs	r3, #1
 8008258:	e00f      	b.n	800827a <SysTick_Config+0x36>
 800825a:	4a0a      	ldr	r2, [pc, #40]	; (8008284 <SysTick_Config+0x40>)
 800825c:	687b      	ldr	r3, [r7, #4]
 800825e:	3b01      	subs	r3, #1
 8008260:	6053      	str	r3, [r2, #4]
 8008262:	210f      	movs	r1, #15
 8008264:	f04f 30ff 	mov.w	r0, #4294967295
 8008268:	f7ff ff8e 	bl	8008188 <__NVIC_SetPriority>
 800826c:	4b05      	ldr	r3, [pc, #20]	; (8008284 <SysTick_Config+0x40>)
 800826e:	2200      	movs	r2, #0
 8008270:	609a      	str	r2, [r3, #8]
 8008272:	4b04      	ldr	r3, [pc, #16]	; (8008284 <SysTick_Config+0x40>)
 8008274:	2207      	movs	r2, #7
 8008276:	601a      	str	r2, [r3, #0]
 8008278:	2300      	movs	r3, #0
 800827a:	4618      	mov	r0, r3
 800827c:	3708      	adds	r7, #8
 800827e:	46bd      	mov	sp, r7
 8008280:	bd80      	pop	{r7, pc}
 8008282:	bf00      	nop
 8008284:	e000e010 	.word	0xe000e010

08008288 <HAL_NVIC_SetPriorityGrouping>:
 8008288:	b580      	push	{r7, lr}
 800828a:	b082      	sub	sp, #8
 800828c:	af00      	add	r7, sp, #0
 800828e:	6078      	str	r0, [r7, #4]
 8008290:	6878      	ldr	r0, [r7, #4]
 8008292:	f7ff ff05 	bl	80080a0 <__NVIC_SetPriorityGrouping>
 8008296:	bf00      	nop
 8008298:	3708      	adds	r7, #8
 800829a:	46bd      	mov	sp, r7
 800829c:	bd80      	pop	{r7, pc}

0800829e <HAL_NVIC_SetPriority>:
 800829e:	b580      	push	{r7, lr}
 80082a0:	b086      	sub	sp, #24
 80082a2:	af00      	add	r7, sp, #0
 80082a4:	4603      	mov	r3, r0
 80082a6:	60b9      	str	r1, [r7, #8]
 80082a8:	607a      	str	r2, [r7, #4]
 80082aa:	73fb      	strb	r3, [r7, #15]
 80082ac:	2300      	movs	r3, #0
 80082ae:	617b      	str	r3, [r7, #20]
 80082b0:	f7ff ff1a 	bl	80080e8 <__NVIC_GetPriorityGrouping>
 80082b4:	6178      	str	r0, [r7, #20]
 80082b6:	687a      	ldr	r2, [r7, #4]
 80082b8:	68b9      	ldr	r1, [r7, #8]
 80082ba:	6978      	ldr	r0, [r7, #20]
 80082bc:	f7ff ff8e 	bl	80081dc <NVIC_EncodePriority>
 80082c0:	4602      	mov	r2, r0
 80082c2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80082c6:	4611      	mov	r1, r2
 80082c8:	4618      	mov	r0, r3
 80082ca:	f7ff ff5d 	bl	8008188 <__NVIC_SetPriority>
 80082ce:	bf00      	nop
 80082d0:	3718      	adds	r7, #24
 80082d2:	46bd      	mov	sp, r7
 80082d4:	bd80      	pop	{r7, pc}

080082d6 <HAL_NVIC_EnableIRQ>:
 80082d6:	b580      	push	{r7, lr}
 80082d8:	b082      	sub	sp, #8
 80082da:	af00      	add	r7, sp, #0
 80082dc:	4603      	mov	r3, r0
 80082de:	71fb      	strb	r3, [r7, #7]
 80082e0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80082e4:	4618      	mov	r0, r3
 80082e6:	f7ff ff0d 	bl	8008104 <__NVIC_EnableIRQ>
 80082ea:	bf00      	nop
 80082ec:	3708      	adds	r7, #8
 80082ee:	46bd      	mov	sp, r7
 80082f0:	bd80      	pop	{r7, pc}

080082f2 <HAL_NVIC_DisableIRQ>:
 80082f2:	b580      	push	{r7, lr}
 80082f4:	b082      	sub	sp, #8
 80082f6:	af00      	add	r7, sp, #0
 80082f8:	4603      	mov	r3, r0
 80082fa:	71fb      	strb	r3, [r7, #7]
 80082fc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008300:	4618      	mov	r0, r3
 8008302:	f7ff ff1d 	bl	8008140 <__NVIC_DisableIRQ>
 8008306:	bf00      	nop
 8008308:	3708      	adds	r7, #8
 800830a:	46bd      	mov	sp, r7
 800830c:	bd80      	pop	{r7, pc}

0800830e <HAL_SYSTICK_Config>:
 800830e:	b580      	push	{r7, lr}
 8008310:	b082      	sub	sp, #8
 8008312:	af00      	add	r7, sp, #0
 8008314:	6078      	str	r0, [r7, #4]
 8008316:	6878      	ldr	r0, [r7, #4]
 8008318:	f7ff ff94 	bl	8008244 <SysTick_Config>
 800831c:	4603      	mov	r3, r0
 800831e:	4618      	mov	r0, r3
 8008320:	3708      	adds	r7, #8
 8008322:	46bd      	mov	sp, r7
 8008324:	bd80      	pop	{r7, pc}
	...

08008328 <HAL_DMA_Init>:
 8008328:	b580      	push	{r7, lr}
 800832a:	b086      	sub	sp, #24
 800832c:	af00      	add	r7, sp, #0
 800832e:	6078      	str	r0, [r7, #4]
 8008330:	2300      	movs	r3, #0
 8008332:	617b      	str	r3, [r7, #20]
 8008334:	f7ff f90e 	bl	8007554 <HAL_GetTick>
 8008338:	6138      	str	r0, [r7, #16]
 800833a:	687b      	ldr	r3, [r7, #4]
 800833c:	2b00      	cmp	r3, #0
 800833e:	d101      	bne.n	8008344 <HAL_DMA_Init+0x1c>
 8008340:	2301      	movs	r3, #1
 8008342:	e099      	b.n	8008478 <HAL_DMA_Init+0x150>
 8008344:	687b      	ldr	r3, [r7, #4]
 8008346:	2202      	movs	r2, #2
 8008348:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800834c:	687b      	ldr	r3, [r7, #4]
 800834e:	2200      	movs	r2, #0
 8008350:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008354:	687b      	ldr	r3, [r7, #4]
 8008356:	681b      	ldr	r3, [r3, #0]
 8008358:	681a      	ldr	r2, [r3, #0]
 800835a:	687b      	ldr	r3, [r7, #4]
 800835c:	681b      	ldr	r3, [r3, #0]
 800835e:	f022 0201 	bic.w	r2, r2, #1
 8008362:	601a      	str	r2, [r3, #0]
 8008364:	e00f      	b.n	8008386 <HAL_DMA_Init+0x5e>
 8008366:	f7ff f8f5 	bl	8007554 <HAL_GetTick>
 800836a:	4602      	mov	r2, r0
 800836c:	693b      	ldr	r3, [r7, #16]
 800836e:	1ad3      	subs	r3, r2, r3
 8008370:	2b05      	cmp	r3, #5
 8008372:	d908      	bls.n	8008386 <HAL_DMA_Init+0x5e>
 8008374:	687b      	ldr	r3, [r7, #4]
 8008376:	2220      	movs	r2, #32
 8008378:	655a      	str	r2, [r3, #84]	; 0x54
 800837a:	687b      	ldr	r3, [r7, #4]
 800837c:	2203      	movs	r2, #3
 800837e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008382:	2303      	movs	r3, #3
 8008384:	e078      	b.n	8008478 <HAL_DMA_Init+0x150>
 8008386:	687b      	ldr	r3, [r7, #4]
 8008388:	681b      	ldr	r3, [r3, #0]
 800838a:	681b      	ldr	r3, [r3, #0]
 800838c:	f003 0301 	and.w	r3, r3, #1
 8008390:	2b00      	cmp	r3, #0
 8008392:	d1e8      	bne.n	8008366 <HAL_DMA_Init+0x3e>
 8008394:	687b      	ldr	r3, [r7, #4]
 8008396:	681b      	ldr	r3, [r3, #0]
 8008398:	681b      	ldr	r3, [r3, #0]
 800839a:	617b      	str	r3, [r7, #20]
 800839c:	697a      	ldr	r2, [r7, #20]
 800839e:	4b38      	ldr	r3, [pc, #224]	; (8008480 <HAL_DMA_Init+0x158>)
 80083a0:	4013      	ands	r3, r2
 80083a2:	617b      	str	r3, [r7, #20]
 80083a4:	687b      	ldr	r3, [r7, #4]
 80083a6:	685a      	ldr	r2, [r3, #4]
 80083a8:	687b      	ldr	r3, [r7, #4]
 80083aa:	689b      	ldr	r3, [r3, #8]
 80083ac:	431a      	orrs	r2, r3
 80083ae:	687b      	ldr	r3, [r7, #4]
 80083b0:	68db      	ldr	r3, [r3, #12]
 80083b2:	431a      	orrs	r2, r3
 80083b4:	687b      	ldr	r3, [r7, #4]
 80083b6:	691b      	ldr	r3, [r3, #16]
 80083b8:	431a      	orrs	r2, r3
 80083ba:	687b      	ldr	r3, [r7, #4]
 80083bc:	695b      	ldr	r3, [r3, #20]
 80083be:	431a      	orrs	r2, r3
 80083c0:	687b      	ldr	r3, [r7, #4]
 80083c2:	699b      	ldr	r3, [r3, #24]
 80083c4:	431a      	orrs	r2, r3
 80083c6:	687b      	ldr	r3, [r7, #4]
 80083c8:	69db      	ldr	r3, [r3, #28]
 80083ca:	431a      	orrs	r2, r3
 80083cc:	687b      	ldr	r3, [r7, #4]
 80083ce:	6a1b      	ldr	r3, [r3, #32]
 80083d0:	4313      	orrs	r3, r2
 80083d2:	697a      	ldr	r2, [r7, #20]
 80083d4:	4313      	orrs	r3, r2
 80083d6:	617b      	str	r3, [r7, #20]
 80083d8:	687b      	ldr	r3, [r7, #4]
 80083da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80083dc:	2b04      	cmp	r3, #4
 80083de:	d107      	bne.n	80083f0 <HAL_DMA_Init+0xc8>
 80083e0:	687b      	ldr	r3, [r7, #4]
 80083e2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80083e4:	687b      	ldr	r3, [r7, #4]
 80083e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80083e8:	4313      	orrs	r3, r2
 80083ea:	697a      	ldr	r2, [r7, #20]
 80083ec:	4313      	orrs	r3, r2
 80083ee:	617b      	str	r3, [r7, #20]
 80083f0:	687b      	ldr	r3, [r7, #4]
 80083f2:	681b      	ldr	r3, [r3, #0]
 80083f4:	697a      	ldr	r2, [r7, #20]
 80083f6:	601a      	str	r2, [r3, #0]
 80083f8:	687b      	ldr	r3, [r7, #4]
 80083fa:	681b      	ldr	r3, [r3, #0]
 80083fc:	695b      	ldr	r3, [r3, #20]
 80083fe:	617b      	str	r3, [r7, #20]
 8008400:	697b      	ldr	r3, [r7, #20]
 8008402:	f023 0307 	bic.w	r3, r3, #7
 8008406:	617b      	str	r3, [r7, #20]
 8008408:	687b      	ldr	r3, [r7, #4]
 800840a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800840c:	697a      	ldr	r2, [r7, #20]
 800840e:	4313      	orrs	r3, r2
 8008410:	617b      	str	r3, [r7, #20]
 8008412:	687b      	ldr	r3, [r7, #4]
 8008414:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008416:	2b04      	cmp	r3, #4
 8008418:	d117      	bne.n	800844a <HAL_DMA_Init+0x122>
 800841a:	687b      	ldr	r3, [r7, #4]
 800841c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800841e:	697a      	ldr	r2, [r7, #20]
 8008420:	4313      	orrs	r3, r2
 8008422:	617b      	str	r3, [r7, #20]
 8008424:	687b      	ldr	r3, [r7, #4]
 8008426:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008428:	2b00      	cmp	r3, #0
 800842a:	d00e      	beq.n	800844a <HAL_DMA_Init+0x122>
 800842c:	6878      	ldr	r0, [r7, #4]
 800842e:	f000 fb01 	bl	8008a34 <DMA_CheckFifoParam>
 8008432:	4603      	mov	r3, r0
 8008434:	2b00      	cmp	r3, #0
 8008436:	d008      	beq.n	800844a <HAL_DMA_Init+0x122>
 8008438:	687b      	ldr	r3, [r7, #4]
 800843a:	2240      	movs	r2, #64	; 0x40
 800843c:	655a      	str	r2, [r3, #84]	; 0x54
 800843e:	687b      	ldr	r3, [r7, #4]
 8008440:	2201      	movs	r2, #1
 8008442:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008446:	2301      	movs	r3, #1
 8008448:	e016      	b.n	8008478 <HAL_DMA_Init+0x150>
 800844a:	687b      	ldr	r3, [r7, #4]
 800844c:	681b      	ldr	r3, [r3, #0]
 800844e:	697a      	ldr	r2, [r7, #20]
 8008450:	615a      	str	r2, [r3, #20]
 8008452:	6878      	ldr	r0, [r7, #4]
 8008454:	f000 fab8 	bl	80089c8 <DMA_CalcBaseAndBitshift>
 8008458:	4603      	mov	r3, r0
 800845a:	60fb      	str	r3, [r7, #12]
 800845c:	687b      	ldr	r3, [r7, #4]
 800845e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008460:	223f      	movs	r2, #63	; 0x3f
 8008462:	409a      	lsls	r2, r3
 8008464:	68fb      	ldr	r3, [r7, #12]
 8008466:	609a      	str	r2, [r3, #8]
 8008468:	687b      	ldr	r3, [r7, #4]
 800846a:	2200      	movs	r2, #0
 800846c:	655a      	str	r2, [r3, #84]	; 0x54
 800846e:	687b      	ldr	r3, [r7, #4]
 8008470:	2201      	movs	r2, #1
 8008472:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008476:	2300      	movs	r3, #0
 8008478:	4618      	mov	r0, r3
 800847a:	3718      	adds	r7, #24
 800847c:	46bd      	mov	sp, r7
 800847e:	bd80      	pop	{r7, pc}
 8008480:	f010803f 	.word	0xf010803f

08008484 <HAL_DMA_Start_IT>:
 8008484:	b580      	push	{r7, lr}
 8008486:	b086      	sub	sp, #24
 8008488:	af00      	add	r7, sp, #0
 800848a:	60f8      	str	r0, [r7, #12]
 800848c:	60b9      	str	r1, [r7, #8]
 800848e:	607a      	str	r2, [r7, #4]
 8008490:	603b      	str	r3, [r7, #0]
 8008492:	2300      	movs	r3, #0
 8008494:	75fb      	strb	r3, [r7, #23]
 8008496:	68fb      	ldr	r3, [r7, #12]
 8008498:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800849a:	613b      	str	r3, [r7, #16]
 800849c:	68fb      	ldr	r3, [r7, #12]
 800849e:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 80084a2:	2b01      	cmp	r3, #1
 80084a4:	d101      	bne.n	80084aa <HAL_DMA_Start_IT+0x26>
 80084a6:	2302      	movs	r3, #2
 80084a8:	e040      	b.n	800852c <HAL_DMA_Start_IT+0xa8>
 80084aa:	68fb      	ldr	r3, [r7, #12]
 80084ac:	2201      	movs	r2, #1
 80084ae:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80084b2:	68fb      	ldr	r3, [r7, #12]
 80084b4:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80084b8:	b2db      	uxtb	r3, r3
 80084ba:	2b01      	cmp	r3, #1
 80084bc:	d12f      	bne.n	800851e <HAL_DMA_Start_IT+0x9a>
 80084be:	68fb      	ldr	r3, [r7, #12]
 80084c0:	2202      	movs	r2, #2
 80084c2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80084c6:	68fb      	ldr	r3, [r7, #12]
 80084c8:	2200      	movs	r2, #0
 80084ca:	655a      	str	r2, [r3, #84]	; 0x54
 80084cc:	683b      	ldr	r3, [r7, #0]
 80084ce:	687a      	ldr	r2, [r7, #4]
 80084d0:	68b9      	ldr	r1, [r7, #8]
 80084d2:	68f8      	ldr	r0, [r7, #12]
 80084d4:	f000 fa4a 	bl	800896c <DMA_SetConfig>
 80084d8:	68fb      	ldr	r3, [r7, #12]
 80084da:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80084dc:	223f      	movs	r2, #63	; 0x3f
 80084de:	409a      	lsls	r2, r3
 80084e0:	693b      	ldr	r3, [r7, #16]
 80084e2:	609a      	str	r2, [r3, #8]
 80084e4:	68fb      	ldr	r3, [r7, #12]
 80084e6:	681b      	ldr	r3, [r3, #0]
 80084e8:	681a      	ldr	r2, [r3, #0]
 80084ea:	68fb      	ldr	r3, [r7, #12]
 80084ec:	681b      	ldr	r3, [r3, #0]
 80084ee:	f042 0216 	orr.w	r2, r2, #22
 80084f2:	601a      	str	r2, [r3, #0]
 80084f4:	68fb      	ldr	r3, [r7, #12]
 80084f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80084f8:	2b00      	cmp	r3, #0
 80084fa:	d007      	beq.n	800850c <HAL_DMA_Start_IT+0x88>
 80084fc:	68fb      	ldr	r3, [r7, #12]
 80084fe:	681b      	ldr	r3, [r3, #0]
 8008500:	681a      	ldr	r2, [r3, #0]
 8008502:	68fb      	ldr	r3, [r7, #12]
 8008504:	681b      	ldr	r3, [r3, #0]
 8008506:	f042 0208 	orr.w	r2, r2, #8
 800850a:	601a      	str	r2, [r3, #0]
 800850c:	68fb      	ldr	r3, [r7, #12]
 800850e:	681b      	ldr	r3, [r3, #0]
 8008510:	681a      	ldr	r2, [r3, #0]
 8008512:	68fb      	ldr	r3, [r7, #12]
 8008514:	681b      	ldr	r3, [r3, #0]
 8008516:	f042 0201 	orr.w	r2, r2, #1
 800851a:	601a      	str	r2, [r3, #0]
 800851c:	e005      	b.n	800852a <HAL_DMA_Start_IT+0xa6>
 800851e:	68fb      	ldr	r3, [r7, #12]
 8008520:	2200      	movs	r2, #0
 8008522:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008526:	2302      	movs	r3, #2
 8008528:	75fb      	strb	r3, [r7, #23]
 800852a:	7dfb      	ldrb	r3, [r7, #23]
 800852c:	4618      	mov	r0, r3
 800852e:	3718      	adds	r7, #24
 8008530:	46bd      	mov	sp, r7
 8008532:	bd80      	pop	{r7, pc}

08008534 <HAL_DMA_Abort>:
 8008534:	b580      	push	{r7, lr}
 8008536:	b084      	sub	sp, #16
 8008538:	af00      	add	r7, sp, #0
 800853a:	6078      	str	r0, [r7, #4]
 800853c:	687b      	ldr	r3, [r7, #4]
 800853e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008540:	60fb      	str	r3, [r7, #12]
 8008542:	f7ff f807 	bl	8007554 <HAL_GetTick>
 8008546:	60b8      	str	r0, [r7, #8]
 8008548:	687b      	ldr	r3, [r7, #4]
 800854a:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800854e:	b2db      	uxtb	r3, r3
 8008550:	2b02      	cmp	r3, #2
 8008552:	d008      	beq.n	8008566 <HAL_DMA_Abort+0x32>
 8008554:	687b      	ldr	r3, [r7, #4]
 8008556:	2280      	movs	r2, #128	; 0x80
 8008558:	655a      	str	r2, [r3, #84]	; 0x54
 800855a:	687b      	ldr	r3, [r7, #4]
 800855c:	2200      	movs	r2, #0
 800855e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008562:	2301      	movs	r3, #1
 8008564:	e052      	b.n	800860c <HAL_DMA_Abort+0xd8>
 8008566:	687b      	ldr	r3, [r7, #4]
 8008568:	681b      	ldr	r3, [r3, #0]
 800856a:	681a      	ldr	r2, [r3, #0]
 800856c:	687b      	ldr	r3, [r7, #4]
 800856e:	681b      	ldr	r3, [r3, #0]
 8008570:	f022 0216 	bic.w	r2, r2, #22
 8008574:	601a      	str	r2, [r3, #0]
 8008576:	687b      	ldr	r3, [r7, #4]
 8008578:	681b      	ldr	r3, [r3, #0]
 800857a:	695a      	ldr	r2, [r3, #20]
 800857c:	687b      	ldr	r3, [r7, #4]
 800857e:	681b      	ldr	r3, [r3, #0]
 8008580:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8008584:	615a      	str	r2, [r3, #20]
 8008586:	687b      	ldr	r3, [r7, #4]
 8008588:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800858a:	2b00      	cmp	r3, #0
 800858c:	d103      	bne.n	8008596 <HAL_DMA_Abort+0x62>
 800858e:	687b      	ldr	r3, [r7, #4]
 8008590:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008592:	2b00      	cmp	r3, #0
 8008594:	d007      	beq.n	80085a6 <HAL_DMA_Abort+0x72>
 8008596:	687b      	ldr	r3, [r7, #4]
 8008598:	681b      	ldr	r3, [r3, #0]
 800859a:	681a      	ldr	r2, [r3, #0]
 800859c:	687b      	ldr	r3, [r7, #4]
 800859e:	681b      	ldr	r3, [r3, #0]
 80085a0:	f022 0208 	bic.w	r2, r2, #8
 80085a4:	601a      	str	r2, [r3, #0]
 80085a6:	687b      	ldr	r3, [r7, #4]
 80085a8:	681b      	ldr	r3, [r3, #0]
 80085aa:	681a      	ldr	r2, [r3, #0]
 80085ac:	687b      	ldr	r3, [r7, #4]
 80085ae:	681b      	ldr	r3, [r3, #0]
 80085b0:	f022 0201 	bic.w	r2, r2, #1
 80085b4:	601a      	str	r2, [r3, #0]
 80085b6:	e013      	b.n	80085e0 <HAL_DMA_Abort+0xac>
 80085b8:	f7fe ffcc 	bl	8007554 <HAL_GetTick>
 80085bc:	4602      	mov	r2, r0
 80085be:	68bb      	ldr	r3, [r7, #8]
 80085c0:	1ad3      	subs	r3, r2, r3
 80085c2:	2b05      	cmp	r3, #5
 80085c4:	d90c      	bls.n	80085e0 <HAL_DMA_Abort+0xac>
 80085c6:	687b      	ldr	r3, [r7, #4]
 80085c8:	2220      	movs	r2, #32
 80085ca:	655a      	str	r2, [r3, #84]	; 0x54
 80085cc:	687b      	ldr	r3, [r7, #4]
 80085ce:	2203      	movs	r2, #3
 80085d0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80085d4:	687b      	ldr	r3, [r7, #4]
 80085d6:	2200      	movs	r2, #0
 80085d8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80085dc:	2303      	movs	r3, #3
 80085de:	e015      	b.n	800860c <HAL_DMA_Abort+0xd8>
 80085e0:	687b      	ldr	r3, [r7, #4]
 80085e2:	681b      	ldr	r3, [r3, #0]
 80085e4:	681b      	ldr	r3, [r3, #0]
 80085e6:	f003 0301 	and.w	r3, r3, #1
 80085ea:	2b00      	cmp	r3, #0
 80085ec:	d1e4      	bne.n	80085b8 <HAL_DMA_Abort+0x84>
 80085ee:	687b      	ldr	r3, [r7, #4]
 80085f0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80085f2:	223f      	movs	r2, #63	; 0x3f
 80085f4:	409a      	lsls	r2, r3
 80085f6:	68fb      	ldr	r3, [r7, #12]
 80085f8:	609a      	str	r2, [r3, #8]
 80085fa:	687b      	ldr	r3, [r7, #4]
 80085fc:	2201      	movs	r2, #1
 80085fe:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008602:	687b      	ldr	r3, [r7, #4]
 8008604:	2200      	movs	r2, #0
 8008606:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800860a:	2300      	movs	r3, #0
 800860c:	4618      	mov	r0, r3
 800860e:	3710      	adds	r7, #16
 8008610:	46bd      	mov	sp, r7
 8008612:	bd80      	pop	{r7, pc}

08008614 <HAL_DMA_Abort_IT>:
 8008614:	b480      	push	{r7}
 8008616:	b083      	sub	sp, #12
 8008618:	af00      	add	r7, sp, #0
 800861a:	6078      	str	r0, [r7, #4]
 800861c:	687b      	ldr	r3, [r7, #4]
 800861e:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8008622:	b2db      	uxtb	r3, r3
 8008624:	2b02      	cmp	r3, #2
 8008626:	d004      	beq.n	8008632 <HAL_DMA_Abort_IT+0x1e>
 8008628:	687b      	ldr	r3, [r7, #4]
 800862a:	2280      	movs	r2, #128	; 0x80
 800862c:	655a      	str	r2, [r3, #84]	; 0x54
 800862e:	2301      	movs	r3, #1
 8008630:	e00c      	b.n	800864c <HAL_DMA_Abort_IT+0x38>
 8008632:	687b      	ldr	r3, [r7, #4]
 8008634:	2205      	movs	r2, #5
 8008636:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800863a:	687b      	ldr	r3, [r7, #4]
 800863c:	681b      	ldr	r3, [r3, #0]
 800863e:	681a      	ldr	r2, [r3, #0]
 8008640:	687b      	ldr	r3, [r7, #4]
 8008642:	681b      	ldr	r3, [r3, #0]
 8008644:	f022 0201 	bic.w	r2, r2, #1
 8008648:	601a      	str	r2, [r3, #0]
 800864a:	2300      	movs	r3, #0
 800864c:	4618      	mov	r0, r3
 800864e:	370c      	adds	r7, #12
 8008650:	46bd      	mov	sp, r7
 8008652:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008656:	4770      	bx	lr

08008658 <HAL_DMA_IRQHandler>:
 8008658:	b580      	push	{r7, lr}
 800865a:	b086      	sub	sp, #24
 800865c:	af00      	add	r7, sp, #0
 800865e:	6078      	str	r0, [r7, #4]
 8008660:	2300      	movs	r3, #0
 8008662:	60bb      	str	r3, [r7, #8]
 8008664:	4b8e      	ldr	r3, [pc, #568]	; (80088a0 <HAL_DMA_IRQHandler+0x248>)
 8008666:	681b      	ldr	r3, [r3, #0]
 8008668:	4a8e      	ldr	r2, [pc, #568]	; (80088a4 <HAL_DMA_IRQHandler+0x24c>)
 800866a:	fba2 2303 	umull	r2, r3, r2, r3
 800866e:	0a9b      	lsrs	r3, r3, #10
 8008670:	617b      	str	r3, [r7, #20]
 8008672:	687b      	ldr	r3, [r7, #4]
 8008674:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008676:	613b      	str	r3, [r7, #16]
 8008678:	693b      	ldr	r3, [r7, #16]
 800867a:	681b      	ldr	r3, [r3, #0]
 800867c:	60fb      	str	r3, [r7, #12]
 800867e:	687b      	ldr	r3, [r7, #4]
 8008680:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008682:	2208      	movs	r2, #8
 8008684:	409a      	lsls	r2, r3
 8008686:	68fb      	ldr	r3, [r7, #12]
 8008688:	4013      	ands	r3, r2
 800868a:	2b00      	cmp	r3, #0
 800868c:	d01a      	beq.n	80086c4 <HAL_DMA_IRQHandler+0x6c>
 800868e:	687b      	ldr	r3, [r7, #4]
 8008690:	681b      	ldr	r3, [r3, #0]
 8008692:	681b      	ldr	r3, [r3, #0]
 8008694:	f003 0304 	and.w	r3, r3, #4
 8008698:	2b00      	cmp	r3, #0
 800869a:	d013      	beq.n	80086c4 <HAL_DMA_IRQHandler+0x6c>
 800869c:	687b      	ldr	r3, [r7, #4]
 800869e:	681b      	ldr	r3, [r3, #0]
 80086a0:	681a      	ldr	r2, [r3, #0]
 80086a2:	687b      	ldr	r3, [r7, #4]
 80086a4:	681b      	ldr	r3, [r3, #0]
 80086a6:	f022 0204 	bic.w	r2, r2, #4
 80086aa:	601a      	str	r2, [r3, #0]
 80086ac:	687b      	ldr	r3, [r7, #4]
 80086ae:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80086b0:	2208      	movs	r2, #8
 80086b2:	409a      	lsls	r2, r3
 80086b4:	693b      	ldr	r3, [r7, #16]
 80086b6:	609a      	str	r2, [r3, #8]
 80086b8:	687b      	ldr	r3, [r7, #4]
 80086ba:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80086bc:	f043 0201 	orr.w	r2, r3, #1
 80086c0:	687b      	ldr	r3, [r7, #4]
 80086c2:	655a      	str	r2, [r3, #84]	; 0x54
 80086c4:	687b      	ldr	r3, [r7, #4]
 80086c6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80086c8:	2201      	movs	r2, #1
 80086ca:	409a      	lsls	r2, r3
 80086cc:	68fb      	ldr	r3, [r7, #12]
 80086ce:	4013      	ands	r3, r2
 80086d0:	2b00      	cmp	r3, #0
 80086d2:	d012      	beq.n	80086fa <HAL_DMA_IRQHandler+0xa2>
 80086d4:	687b      	ldr	r3, [r7, #4]
 80086d6:	681b      	ldr	r3, [r3, #0]
 80086d8:	695b      	ldr	r3, [r3, #20]
 80086da:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80086de:	2b00      	cmp	r3, #0
 80086e0:	d00b      	beq.n	80086fa <HAL_DMA_IRQHandler+0xa2>
 80086e2:	687b      	ldr	r3, [r7, #4]
 80086e4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80086e6:	2201      	movs	r2, #1
 80086e8:	409a      	lsls	r2, r3
 80086ea:	693b      	ldr	r3, [r7, #16]
 80086ec:	609a      	str	r2, [r3, #8]
 80086ee:	687b      	ldr	r3, [r7, #4]
 80086f0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80086f2:	f043 0202 	orr.w	r2, r3, #2
 80086f6:	687b      	ldr	r3, [r7, #4]
 80086f8:	655a      	str	r2, [r3, #84]	; 0x54
 80086fa:	687b      	ldr	r3, [r7, #4]
 80086fc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80086fe:	2204      	movs	r2, #4
 8008700:	409a      	lsls	r2, r3
 8008702:	68fb      	ldr	r3, [r7, #12]
 8008704:	4013      	ands	r3, r2
 8008706:	2b00      	cmp	r3, #0
 8008708:	d012      	beq.n	8008730 <HAL_DMA_IRQHandler+0xd8>
 800870a:	687b      	ldr	r3, [r7, #4]
 800870c:	681b      	ldr	r3, [r3, #0]
 800870e:	681b      	ldr	r3, [r3, #0]
 8008710:	f003 0302 	and.w	r3, r3, #2
 8008714:	2b00      	cmp	r3, #0
 8008716:	d00b      	beq.n	8008730 <HAL_DMA_IRQHandler+0xd8>
 8008718:	687b      	ldr	r3, [r7, #4]
 800871a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800871c:	2204      	movs	r2, #4
 800871e:	409a      	lsls	r2, r3
 8008720:	693b      	ldr	r3, [r7, #16]
 8008722:	609a      	str	r2, [r3, #8]
 8008724:	687b      	ldr	r3, [r7, #4]
 8008726:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008728:	f043 0204 	orr.w	r2, r3, #4
 800872c:	687b      	ldr	r3, [r7, #4]
 800872e:	655a      	str	r2, [r3, #84]	; 0x54
 8008730:	687b      	ldr	r3, [r7, #4]
 8008732:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008734:	2210      	movs	r2, #16
 8008736:	409a      	lsls	r2, r3
 8008738:	68fb      	ldr	r3, [r7, #12]
 800873a:	4013      	ands	r3, r2
 800873c:	2b00      	cmp	r3, #0
 800873e:	d043      	beq.n	80087c8 <HAL_DMA_IRQHandler+0x170>
 8008740:	687b      	ldr	r3, [r7, #4]
 8008742:	681b      	ldr	r3, [r3, #0]
 8008744:	681b      	ldr	r3, [r3, #0]
 8008746:	f003 0308 	and.w	r3, r3, #8
 800874a:	2b00      	cmp	r3, #0
 800874c:	d03c      	beq.n	80087c8 <HAL_DMA_IRQHandler+0x170>
 800874e:	687b      	ldr	r3, [r7, #4]
 8008750:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008752:	2210      	movs	r2, #16
 8008754:	409a      	lsls	r2, r3
 8008756:	693b      	ldr	r3, [r7, #16]
 8008758:	609a      	str	r2, [r3, #8]
 800875a:	687b      	ldr	r3, [r7, #4]
 800875c:	681b      	ldr	r3, [r3, #0]
 800875e:	681b      	ldr	r3, [r3, #0]
 8008760:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8008764:	2b00      	cmp	r3, #0
 8008766:	d018      	beq.n	800879a <HAL_DMA_IRQHandler+0x142>
 8008768:	687b      	ldr	r3, [r7, #4]
 800876a:	681b      	ldr	r3, [r3, #0]
 800876c:	681b      	ldr	r3, [r3, #0]
 800876e:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8008772:	2b00      	cmp	r3, #0
 8008774:	d108      	bne.n	8008788 <HAL_DMA_IRQHandler+0x130>
 8008776:	687b      	ldr	r3, [r7, #4]
 8008778:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800877a:	2b00      	cmp	r3, #0
 800877c:	d024      	beq.n	80087c8 <HAL_DMA_IRQHandler+0x170>
 800877e:	687b      	ldr	r3, [r7, #4]
 8008780:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008782:	6878      	ldr	r0, [r7, #4]
 8008784:	4798      	blx	r3
 8008786:	e01f      	b.n	80087c8 <HAL_DMA_IRQHandler+0x170>
 8008788:	687b      	ldr	r3, [r7, #4]
 800878a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800878c:	2b00      	cmp	r3, #0
 800878e:	d01b      	beq.n	80087c8 <HAL_DMA_IRQHandler+0x170>
 8008790:	687b      	ldr	r3, [r7, #4]
 8008792:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008794:	6878      	ldr	r0, [r7, #4]
 8008796:	4798      	blx	r3
 8008798:	e016      	b.n	80087c8 <HAL_DMA_IRQHandler+0x170>
 800879a:	687b      	ldr	r3, [r7, #4]
 800879c:	681b      	ldr	r3, [r3, #0]
 800879e:	681b      	ldr	r3, [r3, #0]
 80087a0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80087a4:	2b00      	cmp	r3, #0
 80087a6:	d107      	bne.n	80087b8 <HAL_DMA_IRQHandler+0x160>
 80087a8:	687b      	ldr	r3, [r7, #4]
 80087aa:	681b      	ldr	r3, [r3, #0]
 80087ac:	681a      	ldr	r2, [r3, #0]
 80087ae:	687b      	ldr	r3, [r7, #4]
 80087b0:	681b      	ldr	r3, [r3, #0]
 80087b2:	f022 0208 	bic.w	r2, r2, #8
 80087b6:	601a      	str	r2, [r3, #0]
 80087b8:	687b      	ldr	r3, [r7, #4]
 80087ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80087bc:	2b00      	cmp	r3, #0
 80087be:	d003      	beq.n	80087c8 <HAL_DMA_IRQHandler+0x170>
 80087c0:	687b      	ldr	r3, [r7, #4]
 80087c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80087c4:	6878      	ldr	r0, [r7, #4]
 80087c6:	4798      	blx	r3
 80087c8:	687b      	ldr	r3, [r7, #4]
 80087ca:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80087cc:	2220      	movs	r2, #32
 80087ce:	409a      	lsls	r2, r3
 80087d0:	68fb      	ldr	r3, [r7, #12]
 80087d2:	4013      	ands	r3, r2
 80087d4:	2b00      	cmp	r3, #0
 80087d6:	f000 808f 	beq.w	80088f8 <HAL_DMA_IRQHandler+0x2a0>
 80087da:	687b      	ldr	r3, [r7, #4]
 80087dc:	681b      	ldr	r3, [r3, #0]
 80087de:	681b      	ldr	r3, [r3, #0]
 80087e0:	f003 0310 	and.w	r3, r3, #16
 80087e4:	2b00      	cmp	r3, #0
 80087e6:	f000 8087 	beq.w	80088f8 <HAL_DMA_IRQHandler+0x2a0>
 80087ea:	687b      	ldr	r3, [r7, #4]
 80087ec:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80087ee:	2220      	movs	r2, #32
 80087f0:	409a      	lsls	r2, r3
 80087f2:	693b      	ldr	r3, [r7, #16]
 80087f4:	609a      	str	r2, [r3, #8]
 80087f6:	687b      	ldr	r3, [r7, #4]
 80087f8:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80087fc:	b2db      	uxtb	r3, r3
 80087fe:	2b05      	cmp	r3, #5
 8008800:	d136      	bne.n	8008870 <HAL_DMA_IRQHandler+0x218>
 8008802:	687b      	ldr	r3, [r7, #4]
 8008804:	681b      	ldr	r3, [r3, #0]
 8008806:	681a      	ldr	r2, [r3, #0]
 8008808:	687b      	ldr	r3, [r7, #4]
 800880a:	681b      	ldr	r3, [r3, #0]
 800880c:	f022 0216 	bic.w	r2, r2, #22
 8008810:	601a      	str	r2, [r3, #0]
 8008812:	687b      	ldr	r3, [r7, #4]
 8008814:	681b      	ldr	r3, [r3, #0]
 8008816:	695a      	ldr	r2, [r3, #20]
 8008818:	687b      	ldr	r3, [r7, #4]
 800881a:	681b      	ldr	r3, [r3, #0]
 800881c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8008820:	615a      	str	r2, [r3, #20]
 8008822:	687b      	ldr	r3, [r7, #4]
 8008824:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008826:	2b00      	cmp	r3, #0
 8008828:	d103      	bne.n	8008832 <HAL_DMA_IRQHandler+0x1da>
 800882a:	687b      	ldr	r3, [r7, #4]
 800882c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800882e:	2b00      	cmp	r3, #0
 8008830:	d007      	beq.n	8008842 <HAL_DMA_IRQHandler+0x1ea>
 8008832:	687b      	ldr	r3, [r7, #4]
 8008834:	681b      	ldr	r3, [r3, #0]
 8008836:	681a      	ldr	r2, [r3, #0]
 8008838:	687b      	ldr	r3, [r7, #4]
 800883a:	681b      	ldr	r3, [r3, #0]
 800883c:	f022 0208 	bic.w	r2, r2, #8
 8008840:	601a      	str	r2, [r3, #0]
 8008842:	687b      	ldr	r3, [r7, #4]
 8008844:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008846:	223f      	movs	r2, #63	; 0x3f
 8008848:	409a      	lsls	r2, r3
 800884a:	693b      	ldr	r3, [r7, #16]
 800884c:	609a      	str	r2, [r3, #8]
 800884e:	687b      	ldr	r3, [r7, #4]
 8008850:	2201      	movs	r2, #1
 8008852:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008856:	687b      	ldr	r3, [r7, #4]
 8008858:	2200      	movs	r2, #0
 800885a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800885e:	687b      	ldr	r3, [r7, #4]
 8008860:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008862:	2b00      	cmp	r3, #0
 8008864:	d07e      	beq.n	8008964 <HAL_DMA_IRQHandler+0x30c>
 8008866:	687b      	ldr	r3, [r7, #4]
 8008868:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800886a:	6878      	ldr	r0, [r7, #4]
 800886c:	4798      	blx	r3
 800886e:	e079      	b.n	8008964 <HAL_DMA_IRQHandler+0x30c>
 8008870:	687b      	ldr	r3, [r7, #4]
 8008872:	681b      	ldr	r3, [r3, #0]
 8008874:	681b      	ldr	r3, [r3, #0]
 8008876:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800887a:	2b00      	cmp	r3, #0
 800887c:	d01d      	beq.n	80088ba <HAL_DMA_IRQHandler+0x262>
 800887e:	687b      	ldr	r3, [r7, #4]
 8008880:	681b      	ldr	r3, [r3, #0]
 8008882:	681b      	ldr	r3, [r3, #0]
 8008884:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8008888:	2b00      	cmp	r3, #0
 800888a:	d10d      	bne.n	80088a8 <HAL_DMA_IRQHandler+0x250>
 800888c:	687b      	ldr	r3, [r7, #4]
 800888e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008890:	2b00      	cmp	r3, #0
 8008892:	d031      	beq.n	80088f8 <HAL_DMA_IRQHandler+0x2a0>
 8008894:	687b      	ldr	r3, [r7, #4]
 8008896:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008898:	6878      	ldr	r0, [r7, #4]
 800889a:	4798      	blx	r3
 800889c:	e02c      	b.n	80088f8 <HAL_DMA_IRQHandler+0x2a0>
 800889e:	bf00      	nop
 80088a0:	20000134 	.word	0x20000134
 80088a4:	1b4e81b5 	.word	0x1b4e81b5
 80088a8:	687b      	ldr	r3, [r7, #4]
 80088aa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80088ac:	2b00      	cmp	r3, #0
 80088ae:	d023      	beq.n	80088f8 <HAL_DMA_IRQHandler+0x2a0>
 80088b0:	687b      	ldr	r3, [r7, #4]
 80088b2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80088b4:	6878      	ldr	r0, [r7, #4]
 80088b6:	4798      	blx	r3
 80088b8:	e01e      	b.n	80088f8 <HAL_DMA_IRQHandler+0x2a0>
 80088ba:	687b      	ldr	r3, [r7, #4]
 80088bc:	681b      	ldr	r3, [r3, #0]
 80088be:	681b      	ldr	r3, [r3, #0]
 80088c0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80088c4:	2b00      	cmp	r3, #0
 80088c6:	d10f      	bne.n	80088e8 <HAL_DMA_IRQHandler+0x290>
 80088c8:	687b      	ldr	r3, [r7, #4]
 80088ca:	681b      	ldr	r3, [r3, #0]
 80088cc:	681a      	ldr	r2, [r3, #0]
 80088ce:	687b      	ldr	r3, [r7, #4]
 80088d0:	681b      	ldr	r3, [r3, #0]
 80088d2:	f022 0210 	bic.w	r2, r2, #16
 80088d6:	601a      	str	r2, [r3, #0]
 80088d8:	687b      	ldr	r3, [r7, #4]
 80088da:	2201      	movs	r2, #1
 80088dc:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80088e0:	687b      	ldr	r3, [r7, #4]
 80088e2:	2200      	movs	r2, #0
 80088e4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80088e8:	687b      	ldr	r3, [r7, #4]
 80088ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80088ec:	2b00      	cmp	r3, #0
 80088ee:	d003      	beq.n	80088f8 <HAL_DMA_IRQHandler+0x2a0>
 80088f0:	687b      	ldr	r3, [r7, #4]
 80088f2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80088f4:	6878      	ldr	r0, [r7, #4]
 80088f6:	4798      	blx	r3
 80088f8:	687b      	ldr	r3, [r7, #4]
 80088fa:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80088fc:	2b00      	cmp	r3, #0
 80088fe:	d032      	beq.n	8008966 <HAL_DMA_IRQHandler+0x30e>
 8008900:	687b      	ldr	r3, [r7, #4]
 8008902:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008904:	f003 0301 	and.w	r3, r3, #1
 8008908:	2b00      	cmp	r3, #0
 800890a:	d022      	beq.n	8008952 <HAL_DMA_IRQHandler+0x2fa>
 800890c:	687b      	ldr	r3, [r7, #4]
 800890e:	2205      	movs	r2, #5
 8008910:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008914:	687b      	ldr	r3, [r7, #4]
 8008916:	681b      	ldr	r3, [r3, #0]
 8008918:	681a      	ldr	r2, [r3, #0]
 800891a:	687b      	ldr	r3, [r7, #4]
 800891c:	681b      	ldr	r3, [r3, #0]
 800891e:	f022 0201 	bic.w	r2, r2, #1
 8008922:	601a      	str	r2, [r3, #0]
 8008924:	68bb      	ldr	r3, [r7, #8]
 8008926:	3301      	adds	r3, #1
 8008928:	60bb      	str	r3, [r7, #8]
 800892a:	697a      	ldr	r2, [r7, #20]
 800892c:	429a      	cmp	r2, r3
 800892e:	d307      	bcc.n	8008940 <HAL_DMA_IRQHandler+0x2e8>
 8008930:	687b      	ldr	r3, [r7, #4]
 8008932:	681b      	ldr	r3, [r3, #0]
 8008934:	681b      	ldr	r3, [r3, #0]
 8008936:	f003 0301 	and.w	r3, r3, #1
 800893a:	2b00      	cmp	r3, #0
 800893c:	d1f2      	bne.n	8008924 <HAL_DMA_IRQHandler+0x2cc>
 800893e:	e000      	b.n	8008942 <HAL_DMA_IRQHandler+0x2ea>
 8008940:	bf00      	nop
 8008942:	687b      	ldr	r3, [r7, #4]
 8008944:	2201      	movs	r2, #1
 8008946:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800894a:	687b      	ldr	r3, [r7, #4]
 800894c:	2200      	movs	r2, #0
 800894e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008952:	687b      	ldr	r3, [r7, #4]
 8008954:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008956:	2b00      	cmp	r3, #0
 8008958:	d005      	beq.n	8008966 <HAL_DMA_IRQHandler+0x30e>
 800895a:	687b      	ldr	r3, [r7, #4]
 800895c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800895e:	6878      	ldr	r0, [r7, #4]
 8008960:	4798      	blx	r3
 8008962:	e000      	b.n	8008966 <HAL_DMA_IRQHandler+0x30e>
 8008964:	bf00      	nop
 8008966:	3718      	adds	r7, #24
 8008968:	46bd      	mov	sp, r7
 800896a:	bd80      	pop	{r7, pc}

0800896c <DMA_SetConfig>:
 800896c:	b480      	push	{r7}
 800896e:	b085      	sub	sp, #20
 8008970:	af00      	add	r7, sp, #0
 8008972:	60f8      	str	r0, [r7, #12]
 8008974:	60b9      	str	r1, [r7, #8]
 8008976:	607a      	str	r2, [r7, #4]
 8008978:	603b      	str	r3, [r7, #0]
 800897a:	68fb      	ldr	r3, [r7, #12]
 800897c:	681b      	ldr	r3, [r3, #0]
 800897e:	681a      	ldr	r2, [r3, #0]
 8008980:	68fb      	ldr	r3, [r7, #12]
 8008982:	681b      	ldr	r3, [r3, #0]
 8008984:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8008988:	601a      	str	r2, [r3, #0]
 800898a:	68fb      	ldr	r3, [r7, #12]
 800898c:	681b      	ldr	r3, [r3, #0]
 800898e:	683a      	ldr	r2, [r7, #0]
 8008990:	605a      	str	r2, [r3, #4]
 8008992:	68fb      	ldr	r3, [r7, #12]
 8008994:	689b      	ldr	r3, [r3, #8]
 8008996:	2b40      	cmp	r3, #64	; 0x40
 8008998:	d108      	bne.n	80089ac <DMA_SetConfig+0x40>
 800899a:	68fb      	ldr	r3, [r7, #12]
 800899c:	681b      	ldr	r3, [r3, #0]
 800899e:	687a      	ldr	r2, [r7, #4]
 80089a0:	609a      	str	r2, [r3, #8]
 80089a2:	68fb      	ldr	r3, [r7, #12]
 80089a4:	681b      	ldr	r3, [r3, #0]
 80089a6:	68ba      	ldr	r2, [r7, #8]
 80089a8:	60da      	str	r2, [r3, #12]
 80089aa:	e007      	b.n	80089bc <DMA_SetConfig+0x50>
 80089ac:	68fb      	ldr	r3, [r7, #12]
 80089ae:	681b      	ldr	r3, [r3, #0]
 80089b0:	68ba      	ldr	r2, [r7, #8]
 80089b2:	609a      	str	r2, [r3, #8]
 80089b4:	68fb      	ldr	r3, [r7, #12]
 80089b6:	681b      	ldr	r3, [r3, #0]
 80089b8:	687a      	ldr	r2, [r7, #4]
 80089ba:	60da      	str	r2, [r3, #12]
 80089bc:	bf00      	nop
 80089be:	3714      	adds	r7, #20
 80089c0:	46bd      	mov	sp, r7
 80089c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089c6:	4770      	bx	lr

080089c8 <DMA_CalcBaseAndBitshift>:
 80089c8:	b480      	push	{r7}
 80089ca:	b085      	sub	sp, #20
 80089cc:	af00      	add	r7, sp, #0
 80089ce:	6078      	str	r0, [r7, #4]
 80089d0:	687b      	ldr	r3, [r7, #4]
 80089d2:	681b      	ldr	r3, [r3, #0]
 80089d4:	b2db      	uxtb	r3, r3
 80089d6:	3b10      	subs	r3, #16
 80089d8:	4a14      	ldr	r2, [pc, #80]	; (8008a2c <DMA_CalcBaseAndBitshift+0x64>)
 80089da:	fba2 2303 	umull	r2, r3, r2, r3
 80089de:	091b      	lsrs	r3, r3, #4
 80089e0:	60fb      	str	r3, [r7, #12]
 80089e2:	4a13      	ldr	r2, [pc, #76]	; (8008a30 <DMA_CalcBaseAndBitshift+0x68>)
 80089e4:	68fb      	ldr	r3, [r7, #12]
 80089e6:	4413      	add	r3, r2
 80089e8:	781b      	ldrb	r3, [r3, #0]
 80089ea:	461a      	mov	r2, r3
 80089ec:	687b      	ldr	r3, [r7, #4]
 80089ee:	65da      	str	r2, [r3, #92]	; 0x5c
 80089f0:	68fb      	ldr	r3, [r7, #12]
 80089f2:	2b03      	cmp	r3, #3
 80089f4:	d909      	bls.n	8008a0a <DMA_CalcBaseAndBitshift+0x42>
 80089f6:	687b      	ldr	r3, [r7, #4]
 80089f8:	681b      	ldr	r3, [r3, #0]
 80089fa:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80089fe:	f023 0303 	bic.w	r3, r3, #3
 8008a02:	1d1a      	adds	r2, r3, #4
 8008a04:	687b      	ldr	r3, [r7, #4]
 8008a06:	659a      	str	r2, [r3, #88]	; 0x58
 8008a08:	e007      	b.n	8008a1a <DMA_CalcBaseAndBitshift+0x52>
 8008a0a:	687b      	ldr	r3, [r7, #4]
 8008a0c:	681b      	ldr	r3, [r3, #0]
 8008a0e:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8008a12:	f023 0303 	bic.w	r3, r3, #3
 8008a16:	687a      	ldr	r2, [r7, #4]
 8008a18:	6593      	str	r3, [r2, #88]	; 0x58
 8008a1a:	687b      	ldr	r3, [r7, #4]
 8008a1c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008a1e:	4618      	mov	r0, r3
 8008a20:	3714      	adds	r7, #20
 8008a22:	46bd      	mov	sp, r7
 8008a24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a28:	4770      	bx	lr
 8008a2a:	bf00      	nop
 8008a2c:	aaaaaaab 	.word	0xaaaaaaab
 8008a30:	0801131c 	.word	0x0801131c

08008a34 <DMA_CheckFifoParam>:
 8008a34:	b480      	push	{r7}
 8008a36:	b085      	sub	sp, #20
 8008a38:	af00      	add	r7, sp, #0
 8008a3a:	6078      	str	r0, [r7, #4]
 8008a3c:	2300      	movs	r3, #0
 8008a3e:	73fb      	strb	r3, [r7, #15]
 8008a40:	687b      	ldr	r3, [r7, #4]
 8008a42:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008a44:	60bb      	str	r3, [r7, #8]
 8008a46:	687b      	ldr	r3, [r7, #4]
 8008a48:	699b      	ldr	r3, [r3, #24]
 8008a4a:	2b00      	cmp	r3, #0
 8008a4c:	d11f      	bne.n	8008a8e <DMA_CheckFifoParam+0x5a>
 8008a4e:	68bb      	ldr	r3, [r7, #8]
 8008a50:	2b03      	cmp	r3, #3
 8008a52:	d856      	bhi.n	8008b02 <DMA_CheckFifoParam+0xce>
 8008a54:	a201      	add	r2, pc, #4	; (adr r2, 8008a5c <DMA_CheckFifoParam+0x28>)
 8008a56:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008a5a:	bf00      	nop
 8008a5c:	08008a6d 	.word	0x08008a6d
 8008a60:	08008a7f 	.word	0x08008a7f
 8008a64:	08008a6d 	.word	0x08008a6d
 8008a68:	08008b03 	.word	0x08008b03
 8008a6c:	687b      	ldr	r3, [r7, #4]
 8008a6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008a70:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8008a74:	2b00      	cmp	r3, #0
 8008a76:	d046      	beq.n	8008b06 <DMA_CheckFifoParam+0xd2>
 8008a78:	2301      	movs	r3, #1
 8008a7a:	73fb      	strb	r3, [r7, #15]
 8008a7c:	e043      	b.n	8008b06 <DMA_CheckFifoParam+0xd2>
 8008a7e:	687b      	ldr	r3, [r7, #4]
 8008a80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008a82:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8008a86:	d140      	bne.n	8008b0a <DMA_CheckFifoParam+0xd6>
 8008a88:	2301      	movs	r3, #1
 8008a8a:	73fb      	strb	r3, [r7, #15]
 8008a8c:	e03d      	b.n	8008b0a <DMA_CheckFifoParam+0xd6>
 8008a8e:	687b      	ldr	r3, [r7, #4]
 8008a90:	699b      	ldr	r3, [r3, #24]
 8008a92:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008a96:	d121      	bne.n	8008adc <DMA_CheckFifoParam+0xa8>
 8008a98:	68bb      	ldr	r3, [r7, #8]
 8008a9a:	2b03      	cmp	r3, #3
 8008a9c:	d837      	bhi.n	8008b0e <DMA_CheckFifoParam+0xda>
 8008a9e:	a201      	add	r2, pc, #4	; (adr r2, 8008aa4 <DMA_CheckFifoParam+0x70>)
 8008aa0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008aa4:	08008ab5 	.word	0x08008ab5
 8008aa8:	08008abb 	.word	0x08008abb
 8008aac:	08008ab5 	.word	0x08008ab5
 8008ab0:	08008acd 	.word	0x08008acd
 8008ab4:	2301      	movs	r3, #1
 8008ab6:	73fb      	strb	r3, [r7, #15]
 8008ab8:	e030      	b.n	8008b1c <DMA_CheckFifoParam+0xe8>
 8008aba:	687b      	ldr	r3, [r7, #4]
 8008abc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008abe:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8008ac2:	2b00      	cmp	r3, #0
 8008ac4:	d025      	beq.n	8008b12 <DMA_CheckFifoParam+0xde>
 8008ac6:	2301      	movs	r3, #1
 8008ac8:	73fb      	strb	r3, [r7, #15]
 8008aca:	e022      	b.n	8008b12 <DMA_CheckFifoParam+0xde>
 8008acc:	687b      	ldr	r3, [r7, #4]
 8008ace:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008ad0:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8008ad4:	d11f      	bne.n	8008b16 <DMA_CheckFifoParam+0xe2>
 8008ad6:	2301      	movs	r3, #1
 8008ad8:	73fb      	strb	r3, [r7, #15]
 8008ada:	e01c      	b.n	8008b16 <DMA_CheckFifoParam+0xe2>
 8008adc:	68bb      	ldr	r3, [r7, #8]
 8008ade:	2b02      	cmp	r3, #2
 8008ae0:	d903      	bls.n	8008aea <DMA_CheckFifoParam+0xb6>
 8008ae2:	68bb      	ldr	r3, [r7, #8]
 8008ae4:	2b03      	cmp	r3, #3
 8008ae6:	d003      	beq.n	8008af0 <DMA_CheckFifoParam+0xbc>
 8008ae8:	e018      	b.n	8008b1c <DMA_CheckFifoParam+0xe8>
 8008aea:	2301      	movs	r3, #1
 8008aec:	73fb      	strb	r3, [r7, #15]
 8008aee:	e015      	b.n	8008b1c <DMA_CheckFifoParam+0xe8>
 8008af0:	687b      	ldr	r3, [r7, #4]
 8008af2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008af4:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8008af8:	2b00      	cmp	r3, #0
 8008afa:	d00e      	beq.n	8008b1a <DMA_CheckFifoParam+0xe6>
 8008afc:	2301      	movs	r3, #1
 8008afe:	73fb      	strb	r3, [r7, #15]
 8008b00:	e00b      	b.n	8008b1a <DMA_CheckFifoParam+0xe6>
 8008b02:	bf00      	nop
 8008b04:	e00a      	b.n	8008b1c <DMA_CheckFifoParam+0xe8>
 8008b06:	bf00      	nop
 8008b08:	e008      	b.n	8008b1c <DMA_CheckFifoParam+0xe8>
 8008b0a:	bf00      	nop
 8008b0c:	e006      	b.n	8008b1c <DMA_CheckFifoParam+0xe8>
 8008b0e:	bf00      	nop
 8008b10:	e004      	b.n	8008b1c <DMA_CheckFifoParam+0xe8>
 8008b12:	bf00      	nop
 8008b14:	e002      	b.n	8008b1c <DMA_CheckFifoParam+0xe8>
 8008b16:	bf00      	nop
 8008b18:	e000      	b.n	8008b1c <DMA_CheckFifoParam+0xe8>
 8008b1a:	bf00      	nop
 8008b1c:	7bfb      	ldrb	r3, [r7, #15]
 8008b1e:	4618      	mov	r0, r3
 8008b20:	3714      	adds	r7, #20
 8008b22:	46bd      	mov	sp, r7
 8008b24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b28:	4770      	bx	lr
 8008b2a:	bf00      	nop

08008b2c <HAL_FLASH_Program>:
 8008b2c:	b580      	push	{r7, lr}
 8008b2e:	b086      	sub	sp, #24
 8008b30:	af00      	add	r7, sp, #0
 8008b32:	60f8      	str	r0, [r7, #12]
 8008b34:	60b9      	str	r1, [r7, #8]
 8008b36:	e9c7 2300 	strd	r2, r3, [r7]
 8008b3a:	2301      	movs	r3, #1
 8008b3c:	75fb      	strb	r3, [r7, #23]
 8008b3e:	4b23      	ldr	r3, [pc, #140]	; (8008bcc <HAL_FLASH_Program+0xa0>)
 8008b40:	7e1b      	ldrb	r3, [r3, #24]
 8008b42:	2b01      	cmp	r3, #1
 8008b44:	d101      	bne.n	8008b4a <HAL_FLASH_Program+0x1e>
 8008b46:	2302      	movs	r3, #2
 8008b48:	e03b      	b.n	8008bc2 <HAL_FLASH_Program+0x96>
 8008b4a:	4b20      	ldr	r3, [pc, #128]	; (8008bcc <HAL_FLASH_Program+0xa0>)
 8008b4c:	2201      	movs	r2, #1
 8008b4e:	761a      	strb	r2, [r3, #24]
 8008b50:	f24c 3050 	movw	r0, #50000	; 0xc350
 8008b54:	f000 f870 	bl	8008c38 <FLASH_WaitForLastOperation>
 8008b58:	4603      	mov	r3, r0
 8008b5a:	75fb      	strb	r3, [r7, #23]
 8008b5c:	7dfb      	ldrb	r3, [r7, #23]
 8008b5e:	2b00      	cmp	r3, #0
 8008b60:	d12b      	bne.n	8008bba <HAL_FLASH_Program+0x8e>
 8008b62:	68fb      	ldr	r3, [r7, #12]
 8008b64:	2b00      	cmp	r3, #0
 8008b66:	d105      	bne.n	8008b74 <HAL_FLASH_Program+0x48>
 8008b68:	783b      	ldrb	r3, [r7, #0]
 8008b6a:	4619      	mov	r1, r3
 8008b6c:	68b8      	ldr	r0, [r7, #8]
 8008b6e:	f000 f91b 	bl	8008da8 <FLASH_Program_Byte>
 8008b72:	e016      	b.n	8008ba2 <HAL_FLASH_Program+0x76>
 8008b74:	68fb      	ldr	r3, [r7, #12]
 8008b76:	2b01      	cmp	r3, #1
 8008b78:	d105      	bne.n	8008b86 <HAL_FLASH_Program+0x5a>
 8008b7a:	883b      	ldrh	r3, [r7, #0]
 8008b7c:	4619      	mov	r1, r3
 8008b7e:	68b8      	ldr	r0, [r7, #8]
 8008b80:	f000 f8ee 	bl	8008d60 <FLASH_Program_HalfWord>
 8008b84:	e00d      	b.n	8008ba2 <HAL_FLASH_Program+0x76>
 8008b86:	68fb      	ldr	r3, [r7, #12]
 8008b88:	2b02      	cmp	r3, #2
 8008b8a:	d105      	bne.n	8008b98 <HAL_FLASH_Program+0x6c>
 8008b8c:	683b      	ldr	r3, [r7, #0]
 8008b8e:	4619      	mov	r1, r3
 8008b90:	68b8      	ldr	r0, [r7, #8]
 8008b92:	f000 f8c3 	bl	8008d1c <FLASH_Program_Word>
 8008b96:	e004      	b.n	8008ba2 <HAL_FLASH_Program+0x76>
 8008b98:	e9d7 2300 	ldrd	r2, r3, [r7]
 8008b9c:	68b8      	ldr	r0, [r7, #8]
 8008b9e:	f000 f88b 	bl	8008cb8 <FLASH_Program_DoubleWord>
 8008ba2:	f24c 3050 	movw	r0, #50000	; 0xc350
 8008ba6:	f000 f847 	bl	8008c38 <FLASH_WaitForLastOperation>
 8008baa:	4603      	mov	r3, r0
 8008bac:	75fb      	strb	r3, [r7, #23]
 8008bae:	4b08      	ldr	r3, [pc, #32]	; (8008bd0 <HAL_FLASH_Program+0xa4>)
 8008bb0:	691b      	ldr	r3, [r3, #16]
 8008bb2:	4a07      	ldr	r2, [pc, #28]	; (8008bd0 <HAL_FLASH_Program+0xa4>)
 8008bb4:	f023 0301 	bic.w	r3, r3, #1
 8008bb8:	6113      	str	r3, [r2, #16]
 8008bba:	4b04      	ldr	r3, [pc, #16]	; (8008bcc <HAL_FLASH_Program+0xa0>)
 8008bbc:	2200      	movs	r2, #0
 8008bbe:	761a      	strb	r2, [r3, #24]
 8008bc0:	7dfb      	ldrb	r3, [r7, #23]
 8008bc2:	4618      	mov	r0, r3
 8008bc4:	3718      	adds	r7, #24
 8008bc6:	46bd      	mov	sp, r7
 8008bc8:	bd80      	pop	{r7, pc}
 8008bca:	bf00      	nop
 8008bcc:	20000c5c 	.word	0x20000c5c
 8008bd0:	40023c00 	.word	0x40023c00

08008bd4 <HAL_FLASH_Unlock>:
 8008bd4:	b480      	push	{r7}
 8008bd6:	b083      	sub	sp, #12
 8008bd8:	af00      	add	r7, sp, #0
 8008bda:	2300      	movs	r3, #0
 8008bdc:	71fb      	strb	r3, [r7, #7]
 8008bde:	4b0b      	ldr	r3, [pc, #44]	; (8008c0c <HAL_FLASH_Unlock+0x38>)
 8008be0:	691b      	ldr	r3, [r3, #16]
 8008be2:	2b00      	cmp	r3, #0
 8008be4:	da0b      	bge.n	8008bfe <HAL_FLASH_Unlock+0x2a>
 8008be6:	4b09      	ldr	r3, [pc, #36]	; (8008c0c <HAL_FLASH_Unlock+0x38>)
 8008be8:	4a09      	ldr	r2, [pc, #36]	; (8008c10 <HAL_FLASH_Unlock+0x3c>)
 8008bea:	605a      	str	r2, [r3, #4]
 8008bec:	4b07      	ldr	r3, [pc, #28]	; (8008c0c <HAL_FLASH_Unlock+0x38>)
 8008bee:	4a09      	ldr	r2, [pc, #36]	; (8008c14 <HAL_FLASH_Unlock+0x40>)
 8008bf0:	605a      	str	r2, [r3, #4]
 8008bf2:	4b06      	ldr	r3, [pc, #24]	; (8008c0c <HAL_FLASH_Unlock+0x38>)
 8008bf4:	691b      	ldr	r3, [r3, #16]
 8008bf6:	2b00      	cmp	r3, #0
 8008bf8:	da01      	bge.n	8008bfe <HAL_FLASH_Unlock+0x2a>
 8008bfa:	2301      	movs	r3, #1
 8008bfc:	71fb      	strb	r3, [r7, #7]
 8008bfe:	79fb      	ldrb	r3, [r7, #7]
 8008c00:	4618      	mov	r0, r3
 8008c02:	370c      	adds	r7, #12
 8008c04:	46bd      	mov	sp, r7
 8008c06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c0a:	4770      	bx	lr
 8008c0c:	40023c00 	.word	0x40023c00
 8008c10:	45670123 	.word	0x45670123
 8008c14:	cdef89ab 	.word	0xcdef89ab

08008c18 <HAL_FLASH_Lock>:
 8008c18:	b480      	push	{r7}
 8008c1a:	af00      	add	r7, sp, #0
 8008c1c:	4b05      	ldr	r3, [pc, #20]	; (8008c34 <HAL_FLASH_Lock+0x1c>)
 8008c1e:	691b      	ldr	r3, [r3, #16]
 8008c20:	4a04      	ldr	r2, [pc, #16]	; (8008c34 <HAL_FLASH_Lock+0x1c>)
 8008c22:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8008c26:	6113      	str	r3, [r2, #16]
 8008c28:	2300      	movs	r3, #0
 8008c2a:	4618      	mov	r0, r3
 8008c2c:	46bd      	mov	sp, r7
 8008c2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c32:	4770      	bx	lr
 8008c34:	40023c00 	.word	0x40023c00

08008c38 <FLASH_WaitForLastOperation>:
 8008c38:	b580      	push	{r7, lr}
 8008c3a:	b084      	sub	sp, #16
 8008c3c:	af00      	add	r7, sp, #0
 8008c3e:	6078      	str	r0, [r7, #4]
 8008c40:	2300      	movs	r3, #0
 8008c42:	60fb      	str	r3, [r7, #12]
 8008c44:	4b1a      	ldr	r3, [pc, #104]	; (8008cb0 <FLASH_WaitForLastOperation+0x78>)
 8008c46:	2200      	movs	r2, #0
 8008c48:	61da      	str	r2, [r3, #28]
 8008c4a:	f7fe fc83 	bl	8007554 <HAL_GetTick>
 8008c4e:	60f8      	str	r0, [r7, #12]
 8008c50:	e010      	b.n	8008c74 <FLASH_WaitForLastOperation+0x3c>
 8008c52:	687b      	ldr	r3, [r7, #4]
 8008c54:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008c58:	d00c      	beq.n	8008c74 <FLASH_WaitForLastOperation+0x3c>
 8008c5a:	687b      	ldr	r3, [r7, #4]
 8008c5c:	2b00      	cmp	r3, #0
 8008c5e:	d007      	beq.n	8008c70 <FLASH_WaitForLastOperation+0x38>
 8008c60:	f7fe fc78 	bl	8007554 <HAL_GetTick>
 8008c64:	4602      	mov	r2, r0
 8008c66:	68fb      	ldr	r3, [r7, #12]
 8008c68:	1ad3      	subs	r3, r2, r3
 8008c6a:	687a      	ldr	r2, [r7, #4]
 8008c6c:	429a      	cmp	r2, r3
 8008c6e:	d201      	bcs.n	8008c74 <FLASH_WaitForLastOperation+0x3c>
 8008c70:	2303      	movs	r3, #3
 8008c72:	e019      	b.n	8008ca8 <FLASH_WaitForLastOperation+0x70>
 8008c74:	4b0f      	ldr	r3, [pc, #60]	; (8008cb4 <FLASH_WaitForLastOperation+0x7c>)
 8008c76:	68db      	ldr	r3, [r3, #12]
 8008c78:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8008c7c:	2b00      	cmp	r3, #0
 8008c7e:	d1e8      	bne.n	8008c52 <FLASH_WaitForLastOperation+0x1a>
 8008c80:	4b0c      	ldr	r3, [pc, #48]	; (8008cb4 <FLASH_WaitForLastOperation+0x7c>)
 8008c82:	68db      	ldr	r3, [r3, #12]
 8008c84:	f003 0301 	and.w	r3, r3, #1
 8008c88:	2b00      	cmp	r3, #0
 8008c8a:	d002      	beq.n	8008c92 <FLASH_WaitForLastOperation+0x5a>
 8008c8c:	4b09      	ldr	r3, [pc, #36]	; (8008cb4 <FLASH_WaitForLastOperation+0x7c>)
 8008c8e:	2201      	movs	r2, #1
 8008c90:	60da      	str	r2, [r3, #12]
 8008c92:	4b08      	ldr	r3, [pc, #32]	; (8008cb4 <FLASH_WaitForLastOperation+0x7c>)
 8008c94:	68db      	ldr	r3, [r3, #12]
 8008c96:	f403 73f9 	and.w	r3, r3, #498	; 0x1f2
 8008c9a:	2b00      	cmp	r3, #0
 8008c9c:	d003      	beq.n	8008ca6 <FLASH_WaitForLastOperation+0x6e>
 8008c9e:	f000 f8a5 	bl	8008dec <FLASH_SetErrorCode>
 8008ca2:	2301      	movs	r3, #1
 8008ca4:	e000      	b.n	8008ca8 <FLASH_WaitForLastOperation+0x70>
 8008ca6:	2300      	movs	r3, #0
 8008ca8:	4618      	mov	r0, r3
 8008caa:	3710      	adds	r7, #16
 8008cac:	46bd      	mov	sp, r7
 8008cae:	bd80      	pop	{r7, pc}
 8008cb0:	20000c5c 	.word	0x20000c5c
 8008cb4:	40023c00 	.word	0x40023c00

08008cb8 <FLASH_Program_DoubleWord>:
 8008cb8:	b480      	push	{r7}
 8008cba:	b085      	sub	sp, #20
 8008cbc:	af00      	add	r7, sp, #0
 8008cbe:	60f8      	str	r0, [r7, #12]
 8008cc0:	e9c7 2300 	strd	r2, r3, [r7]
 8008cc4:	4b14      	ldr	r3, [pc, #80]	; (8008d18 <FLASH_Program_DoubleWord+0x60>)
 8008cc6:	691b      	ldr	r3, [r3, #16]
 8008cc8:	4a13      	ldr	r2, [pc, #76]	; (8008d18 <FLASH_Program_DoubleWord+0x60>)
 8008cca:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008cce:	6113      	str	r3, [r2, #16]
 8008cd0:	4b11      	ldr	r3, [pc, #68]	; (8008d18 <FLASH_Program_DoubleWord+0x60>)
 8008cd2:	691b      	ldr	r3, [r3, #16]
 8008cd4:	4a10      	ldr	r2, [pc, #64]	; (8008d18 <FLASH_Program_DoubleWord+0x60>)
 8008cd6:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8008cda:	6113      	str	r3, [r2, #16]
 8008cdc:	4b0e      	ldr	r3, [pc, #56]	; (8008d18 <FLASH_Program_DoubleWord+0x60>)
 8008cde:	691b      	ldr	r3, [r3, #16]
 8008ce0:	4a0d      	ldr	r2, [pc, #52]	; (8008d18 <FLASH_Program_DoubleWord+0x60>)
 8008ce2:	f043 0301 	orr.w	r3, r3, #1
 8008ce6:	6113      	str	r3, [r2, #16]
 8008ce8:	68fb      	ldr	r3, [r7, #12]
 8008cea:	683a      	ldr	r2, [r7, #0]
 8008cec:	601a      	str	r2, [r3, #0]
 8008cee:	f3bf 8f6f 	isb	sy
 8008cf2:	bf00      	nop
 8008cf4:	e9d7 0100 	ldrd	r0, r1, [r7]
 8008cf8:	f04f 0200 	mov.w	r2, #0
 8008cfc:	f04f 0300 	mov.w	r3, #0
 8008d00:	000a      	movs	r2, r1
 8008d02:	2300      	movs	r3, #0
 8008d04:	68f9      	ldr	r1, [r7, #12]
 8008d06:	3104      	adds	r1, #4
 8008d08:	4613      	mov	r3, r2
 8008d0a:	600b      	str	r3, [r1, #0]
 8008d0c:	bf00      	nop
 8008d0e:	3714      	adds	r7, #20
 8008d10:	46bd      	mov	sp, r7
 8008d12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d16:	4770      	bx	lr
 8008d18:	40023c00 	.word	0x40023c00

08008d1c <FLASH_Program_Word>:
 8008d1c:	b480      	push	{r7}
 8008d1e:	b083      	sub	sp, #12
 8008d20:	af00      	add	r7, sp, #0
 8008d22:	6078      	str	r0, [r7, #4]
 8008d24:	6039      	str	r1, [r7, #0]
 8008d26:	4b0d      	ldr	r3, [pc, #52]	; (8008d5c <FLASH_Program_Word+0x40>)
 8008d28:	691b      	ldr	r3, [r3, #16]
 8008d2a:	4a0c      	ldr	r2, [pc, #48]	; (8008d5c <FLASH_Program_Word+0x40>)
 8008d2c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008d30:	6113      	str	r3, [r2, #16]
 8008d32:	4b0a      	ldr	r3, [pc, #40]	; (8008d5c <FLASH_Program_Word+0x40>)
 8008d34:	691b      	ldr	r3, [r3, #16]
 8008d36:	4a09      	ldr	r2, [pc, #36]	; (8008d5c <FLASH_Program_Word+0x40>)
 8008d38:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8008d3c:	6113      	str	r3, [r2, #16]
 8008d3e:	4b07      	ldr	r3, [pc, #28]	; (8008d5c <FLASH_Program_Word+0x40>)
 8008d40:	691b      	ldr	r3, [r3, #16]
 8008d42:	4a06      	ldr	r2, [pc, #24]	; (8008d5c <FLASH_Program_Word+0x40>)
 8008d44:	f043 0301 	orr.w	r3, r3, #1
 8008d48:	6113      	str	r3, [r2, #16]
 8008d4a:	687b      	ldr	r3, [r7, #4]
 8008d4c:	683a      	ldr	r2, [r7, #0]
 8008d4e:	601a      	str	r2, [r3, #0]
 8008d50:	bf00      	nop
 8008d52:	370c      	adds	r7, #12
 8008d54:	46bd      	mov	sp, r7
 8008d56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d5a:	4770      	bx	lr
 8008d5c:	40023c00 	.word	0x40023c00

08008d60 <FLASH_Program_HalfWord>:
 8008d60:	b480      	push	{r7}
 8008d62:	b083      	sub	sp, #12
 8008d64:	af00      	add	r7, sp, #0
 8008d66:	6078      	str	r0, [r7, #4]
 8008d68:	460b      	mov	r3, r1
 8008d6a:	807b      	strh	r3, [r7, #2]
 8008d6c:	4b0d      	ldr	r3, [pc, #52]	; (8008da4 <FLASH_Program_HalfWord+0x44>)
 8008d6e:	691b      	ldr	r3, [r3, #16]
 8008d70:	4a0c      	ldr	r2, [pc, #48]	; (8008da4 <FLASH_Program_HalfWord+0x44>)
 8008d72:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008d76:	6113      	str	r3, [r2, #16]
 8008d78:	4b0a      	ldr	r3, [pc, #40]	; (8008da4 <FLASH_Program_HalfWord+0x44>)
 8008d7a:	691b      	ldr	r3, [r3, #16]
 8008d7c:	4a09      	ldr	r2, [pc, #36]	; (8008da4 <FLASH_Program_HalfWord+0x44>)
 8008d7e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008d82:	6113      	str	r3, [r2, #16]
 8008d84:	4b07      	ldr	r3, [pc, #28]	; (8008da4 <FLASH_Program_HalfWord+0x44>)
 8008d86:	691b      	ldr	r3, [r3, #16]
 8008d88:	4a06      	ldr	r2, [pc, #24]	; (8008da4 <FLASH_Program_HalfWord+0x44>)
 8008d8a:	f043 0301 	orr.w	r3, r3, #1
 8008d8e:	6113      	str	r3, [r2, #16]
 8008d90:	687b      	ldr	r3, [r7, #4]
 8008d92:	887a      	ldrh	r2, [r7, #2]
 8008d94:	801a      	strh	r2, [r3, #0]
 8008d96:	bf00      	nop
 8008d98:	370c      	adds	r7, #12
 8008d9a:	46bd      	mov	sp, r7
 8008d9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008da0:	4770      	bx	lr
 8008da2:	bf00      	nop
 8008da4:	40023c00 	.word	0x40023c00

08008da8 <FLASH_Program_Byte>:
 8008da8:	b480      	push	{r7}
 8008daa:	b083      	sub	sp, #12
 8008dac:	af00      	add	r7, sp, #0
 8008dae:	6078      	str	r0, [r7, #4]
 8008db0:	460b      	mov	r3, r1
 8008db2:	70fb      	strb	r3, [r7, #3]
 8008db4:	4b0c      	ldr	r3, [pc, #48]	; (8008de8 <FLASH_Program_Byte+0x40>)
 8008db6:	691b      	ldr	r3, [r3, #16]
 8008db8:	4a0b      	ldr	r2, [pc, #44]	; (8008de8 <FLASH_Program_Byte+0x40>)
 8008dba:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008dbe:	6113      	str	r3, [r2, #16]
 8008dc0:	4b09      	ldr	r3, [pc, #36]	; (8008de8 <FLASH_Program_Byte+0x40>)
 8008dc2:	4a09      	ldr	r2, [pc, #36]	; (8008de8 <FLASH_Program_Byte+0x40>)
 8008dc4:	691b      	ldr	r3, [r3, #16]
 8008dc6:	6113      	str	r3, [r2, #16]
 8008dc8:	4b07      	ldr	r3, [pc, #28]	; (8008de8 <FLASH_Program_Byte+0x40>)
 8008dca:	691b      	ldr	r3, [r3, #16]
 8008dcc:	4a06      	ldr	r2, [pc, #24]	; (8008de8 <FLASH_Program_Byte+0x40>)
 8008dce:	f043 0301 	orr.w	r3, r3, #1
 8008dd2:	6113      	str	r3, [r2, #16]
 8008dd4:	687b      	ldr	r3, [r7, #4]
 8008dd6:	78fa      	ldrb	r2, [r7, #3]
 8008dd8:	701a      	strb	r2, [r3, #0]
 8008dda:	bf00      	nop
 8008ddc:	370c      	adds	r7, #12
 8008dde:	46bd      	mov	sp, r7
 8008de0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008de4:	4770      	bx	lr
 8008de6:	bf00      	nop
 8008de8:	40023c00 	.word	0x40023c00

08008dec <FLASH_SetErrorCode>:
 8008dec:	b480      	push	{r7}
 8008dee:	af00      	add	r7, sp, #0
 8008df0:	4b2f      	ldr	r3, [pc, #188]	; (8008eb0 <FLASH_SetErrorCode+0xc4>)
 8008df2:	68db      	ldr	r3, [r3, #12]
 8008df4:	f003 0310 	and.w	r3, r3, #16
 8008df8:	2b00      	cmp	r3, #0
 8008dfa:	d008      	beq.n	8008e0e <FLASH_SetErrorCode+0x22>
 8008dfc:	4b2d      	ldr	r3, [pc, #180]	; (8008eb4 <FLASH_SetErrorCode+0xc8>)
 8008dfe:	69db      	ldr	r3, [r3, #28]
 8008e00:	f043 0310 	orr.w	r3, r3, #16
 8008e04:	4a2b      	ldr	r2, [pc, #172]	; (8008eb4 <FLASH_SetErrorCode+0xc8>)
 8008e06:	61d3      	str	r3, [r2, #28]
 8008e08:	4b29      	ldr	r3, [pc, #164]	; (8008eb0 <FLASH_SetErrorCode+0xc4>)
 8008e0a:	2210      	movs	r2, #16
 8008e0c:	60da      	str	r2, [r3, #12]
 8008e0e:	4b28      	ldr	r3, [pc, #160]	; (8008eb0 <FLASH_SetErrorCode+0xc4>)
 8008e10:	68db      	ldr	r3, [r3, #12]
 8008e12:	f003 0320 	and.w	r3, r3, #32
 8008e16:	2b00      	cmp	r3, #0
 8008e18:	d008      	beq.n	8008e2c <FLASH_SetErrorCode+0x40>
 8008e1a:	4b26      	ldr	r3, [pc, #152]	; (8008eb4 <FLASH_SetErrorCode+0xc8>)
 8008e1c:	69db      	ldr	r3, [r3, #28]
 8008e1e:	f043 0308 	orr.w	r3, r3, #8
 8008e22:	4a24      	ldr	r2, [pc, #144]	; (8008eb4 <FLASH_SetErrorCode+0xc8>)
 8008e24:	61d3      	str	r3, [r2, #28]
 8008e26:	4b22      	ldr	r3, [pc, #136]	; (8008eb0 <FLASH_SetErrorCode+0xc4>)
 8008e28:	2220      	movs	r2, #32
 8008e2a:	60da      	str	r2, [r3, #12]
 8008e2c:	4b20      	ldr	r3, [pc, #128]	; (8008eb0 <FLASH_SetErrorCode+0xc4>)
 8008e2e:	68db      	ldr	r3, [r3, #12]
 8008e30:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008e34:	2b00      	cmp	r3, #0
 8008e36:	d008      	beq.n	8008e4a <FLASH_SetErrorCode+0x5e>
 8008e38:	4b1e      	ldr	r3, [pc, #120]	; (8008eb4 <FLASH_SetErrorCode+0xc8>)
 8008e3a:	69db      	ldr	r3, [r3, #28]
 8008e3c:	f043 0304 	orr.w	r3, r3, #4
 8008e40:	4a1c      	ldr	r2, [pc, #112]	; (8008eb4 <FLASH_SetErrorCode+0xc8>)
 8008e42:	61d3      	str	r3, [r2, #28]
 8008e44:	4b1a      	ldr	r3, [pc, #104]	; (8008eb0 <FLASH_SetErrorCode+0xc4>)
 8008e46:	2240      	movs	r2, #64	; 0x40
 8008e48:	60da      	str	r2, [r3, #12]
 8008e4a:	4b19      	ldr	r3, [pc, #100]	; (8008eb0 <FLASH_SetErrorCode+0xc4>)
 8008e4c:	68db      	ldr	r3, [r3, #12]
 8008e4e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008e52:	2b00      	cmp	r3, #0
 8008e54:	d008      	beq.n	8008e68 <FLASH_SetErrorCode+0x7c>
 8008e56:	4b17      	ldr	r3, [pc, #92]	; (8008eb4 <FLASH_SetErrorCode+0xc8>)
 8008e58:	69db      	ldr	r3, [r3, #28]
 8008e5a:	f043 0302 	orr.w	r3, r3, #2
 8008e5e:	4a15      	ldr	r2, [pc, #84]	; (8008eb4 <FLASH_SetErrorCode+0xc8>)
 8008e60:	61d3      	str	r3, [r2, #28]
 8008e62:	4b13      	ldr	r3, [pc, #76]	; (8008eb0 <FLASH_SetErrorCode+0xc4>)
 8008e64:	2280      	movs	r2, #128	; 0x80
 8008e66:	60da      	str	r2, [r3, #12]
 8008e68:	4b11      	ldr	r3, [pc, #68]	; (8008eb0 <FLASH_SetErrorCode+0xc4>)
 8008e6a:	68db      	ldr	r3, [r3, #12]
 8008e6c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008e70:	2b00      	cmp	r3, #0
 8008e72:	d009      	beq.n	8008e88 <FLASH_SetErrorCode+0x9c>
 8008e74:	4b0f      	ldr	r3, [pc, #60]	; (8008eb4 <FLASH_SetErrorCode+0xc8>)
 8008e76:	69db      	ldr	r3, [r3, #28]
 8008e78:	f043 0301 	orr.w	r3, r3, #1
 8008e7c:	4a0d      	ldr	r2, [pc, #52]	; (8008eb4 <FLASH_SetErrorCode+0xc8>)
 8008e7e:	61d3      	str	r3, [r2, #28]
 8008e80:	4b0b      	ldr	r3, [pc, #44]	; (8008eb0 <FLASH_SetErrorCode+0xc4>)
 8008e82:	f44f 7280 	mov.w	r2, #256	; 0x100
 8008e86:	60da      	str	r2, [r3, #12]
 8008e88:	4b09      	ldr	r3, [pc, #36]	; (8008eb0 <FLASH_SetErrorCode+0xc4>)
 8008e8a:	68db      	ldr	r3, [r3, #12]
 8008e8c:	f003 0302 	and.w	r3, r3, #2
 8008e90:	2b00      	cmp	r3, #0
 8008e92:	d008      	beq.n	8008ea6 <FLASH_SetErrorCode+0xba>
 8008e94:	4b07      	ldr	r3, [pc, #28]	; (8008eb4 <FLASH_SetErrorCode+0xc8>)
 8008e96:	69db      	ldr	r3, [r3, #28]
 8008e98:	f043 0320 	orr.w	r3, r3, #32
 8008e9c:	4a05      	ldr	r2, [pc, #20]	; (8008eb4 <FLASH_SetErrorCode+0xc8>)
 8008e9e:	61d3      	str	r3, [r2, #28]
 8008ea0:	4b03      	ldr	r3, [pc, #12]	; (8008eb0 <FLASH_SetErrorCode+0xc4>)
 8008ea2:	2202      	movs	r2, #2
 8008ea4:	60da      	str	r2, [r3, #12]
 8008ea6:	bf00      	nop
 8008ea8:	46bd      	mov	sp, r7
 8008eaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008eae:	4770      	bx	lr
 8008eb0:	40023c00 	.word	0x40023c00
 8008eb4:	20000c5c 	.word	0x20000c5c

08008eb8 <FLASH_Erase_Sector>:
 8008eb8:	b480      	push	{r7}
 8008eba:	b085      	sub	sp, #20
 8008ebc:	af00      	add	r7, sp, #0
 8008ebe:	6078      	str	r0, [r7, #4]
 8008ec0:	460b      	mov	r3, r1
 8008ec2:	70fb      	strb	r3, [r7, #3]
 8008ec4:	2300      	movs	r3, #0
 8008ec6:	60fb      	str	r3, [r7, #12]
 8008ec8:	78fb      	ldrb	r3, [r7, #3]
 8008eca:	2b00      	cmp	r3, #0
 8008ecc:	d102      	bne.n	8008ed4 <FLASH_Erase_Sector+0x1c>
 8008ece:	2300      	movs	r3, #0
 8008ed0:	60fb      	str	r3, [r7, #12]
 8008ed2:	e010      	b.n	8008ef6 <FLASH_Erase_Sector+0x3e>
 8008ed4:	78fb      	ldrb	r3, [r7, #3]
 8008ed6:	2b01      	cmp	r3, #1
 8008ed8:	d103      	bne.n	8008ee2 <FLASH_Erase_Sector+0x2a>
 8008eda:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008ede:	60fb      	str	r3, [r7, #12]
 8008ee0:	e009      	b.n	8008ef6 <FLASH_Erase_Sector+0x3e>
 8008ee2:	78fb      	ldrb	r3, [r7, #3]
 8008ee4:	2b02      	cmp	r3, #2
 8008ee6:	d103      	bne.n	8008ef0 <FLASH_Erase_Sector+0x38>
 8008ee8:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008eec:	60fb      	str	r3, [r7, #12]
 8008eee:	e002      	b.n	8008ef6 <FLASH_Erase_Sector+0x3e>
 8008ef0:	f44f 7340 	mov.w	r3, #768	; 0x300
 8008ef4:	60fb      	str	r3, [r7, #12]
 8008ef6:	4b13      	ldr	r3, [pc, #76]	; (8008f44 <FLASH_Erase_Sector+0x8c>)
 8008ef8:	691b      	ldr	r3, [r3, #16]
 8008efa:	4a12      	ldr	r2, [pc, #72]	; (8008f44 <FLASH_Erase_Sector+0x8c>)
 8008efc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008f00:	6113      	str	r3, [r2, #16]
 8008f02:	4b10      	ldr	r3, [pc, #64]	; (8008f44 <FLASH_Erase_Sector+0x8c>)
 8008f04:	691a      	ldr	r2, [r3, #16]
 8008f06:	490f      	ldr	r1, [pc, #60]	; (8008f44 <FLASH_Erase_Sector+0x8c>)
 8008f08:	68fb      	ldr	r3, [r7, #12]
 8008f0a:	4313      	orrs	r3, r2
 8008f0c:	610b      	str	r3, [r1, #16]
 8008f0e:	4b0d      	ldr	r3, [pc, #52]	; (8008f44 <FLASH_Erase_Sector+0x8c>)
 8008f10:	691b      	ldr	r3, [r3, #16]
 8008f12:	4a0c      	ldr	r2, [pc, #48]	; (8008f44 <FLASH_Erase_Sector+0x8c>)
 8008f14:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8008f18:	6113      	str	r3, [r2, #16]
 8008f1a:	4b0a      	ldr	r3, [pc, #40]	; (8008f44 <FLASH_Erase_Sector+0x8c>)
 8008f1c:	691a      	ldr	r2, [r3, #16]
 8008f1e:	687b      	ldr	r3, [r7, #4]
 8008f20:	00db      	lsls	r3, r3, #3
 8008f22:	4313      	orrs	r3, r2
 8008f24:	4a07      	ldr	r2, [pc, #28]	; (8008f44 <FLASH_Erase_Sector+0x8c>)
 8008f26:	f043 0302 	orr.w	r3, r3, #2
 8008f2a:	6113      	str	r3, [r2, #16]
 8008f2c:	4b05      	ldr	r3, [pc, #20]	; (8008f44 <FLASH_Erase_Sector+0x8c>)
 8008f2e:	691b      	ldr	r3, [r3, #16]
 8008f30:	4a04      	ldr	r2, [pc, #16]	; (8008f44 <FLASH_Erase_Sector+0x8c>)
 8008f32:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008f36:	6113      	str	r3, [r2, #16]
 8008f38:	bf00      	nop
 8008f3a:	3714      	adds	r7, #20
 8008f3c:	46bd      	mov	sp, r7
 8008f3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f42:	4770      	bx	lr
 8008f44:	40023c00 	.word	0x40023c00

08008f48 <HAL_GPIO_Init>:
 8008f48:	b480      	push	{r7}
 8008f4a:	b089      	sub	sp, #36	; 0x24
 8008f4c:	af00      	add	r7, sp, #0
 8008f4e:	6078      	str	r0, [r7, #4]
 8008f50:	6039      	str	r1, [r7, #0]
 8008f52:	2300      	movs	r3, #0
 8008f54:	617b      	str	r3, [r7, #20]
 8008f56:	2300      	movs	r3, #0
 8008f58:	613b      	str	r3, [r7, #16]
 8008f5a:	2300      	movs	r3, #0
 8008f5c:	61bb      	str	r3, [r7, #24]
 8008f5e:	2300      	movs	r3, #0
 8008f60:	61fb      	str	r3, [r7, #28]
 8008f62:	e165      	b.n	8009230 <HAL_GPIO_Init+0x2e8>
 8008f64:	2201      	movs	r2, #1
 8008f66:	69fb      	ldr	r3, [r7, #28]
 8008f68:	fa02 f303 	lsl.w	r3, r2, r3
 8008f6c:	617b      	str	r3, [r7, #20]
 8008f6e:	683b      	ldr	r3, [r7, #0]
 8008f70:	681b      	ldr	r3, [r3, #0]
 8008f72:	697a      	ldr	r2, [r7, #20]
 8008f74:	4013      	ands	r3, r2
 8008f76:	613b      	str	r3, [r7, #16]
 8008f78:	693a      	ldr	r2, [r7, #16]
 8008f7a:	697b      	ldr	r3, [r7, #20]
 8008f7c:	429a      	cmp	r2, r3
 8008f7e:	f040 8154 	bne.w	800922a <HAL_GPIO_Init+0x2e2>
 8008f82:	683b      	ldr	r3, [r7, #0]
 8008f84:	685b      	ldr	r3, [r3, #4]
 8008f86:	f003 0303 	and.w	r3, r3, #3
 8008f8a:	2b01      	cmp	r3, #1
 8008f8c:	d005      	beq.n	8008f9a <HAL_GPIO_Init+0x52>
 8008f8e:	683b      	ldr	r3, [r7, #0]
 8008f90:	685b      	ldr	r3, [r3, #4]
 8008f92:	f003 0303 	and.w	r3, r3, #3
 8008f96:	2b02      	cmp	r3, #2
 8008f98:	d130      	bne.n	8008ffc <HAL_GPIO_Init+0xb4>
 8008f9a:	687b      	ldr	r3, [r7, #4]
 8008f9c:	689b      	ldr	r3, [r3, #8]
 8008f9e:	61bb      	str	r3, [r7, #24]
 8008fa0:	69fb      	ldr	r3, [r7, #28]
 8008fa2:	005b      	lsls	r3, r3, #1
 8008fa4:	2203      	movs	r2, #3
 8008fa6:	fa02 f303 	lsl.w	r3, r2, r3
 8008faa:	43db      	mvns	r3, r3
 8008fac:	69ba      	ldr	r2, [r7, #24]
 8008fae:	4013      	ands	r3, r2
 8008fb0:	61bb      	str	r3, [r7, #24]
 8008fb2:	683b      	ldr	r3, [r7, #0]
 8008fb4:	68da      	ldr	r2, [r3, #12]
 8008fb6:	69fb      	ldr	r3, [r7, #28]
 8008fb8:	005b      	lsls	r3, r3, #1
 8008fba:	fa02 f303 	lsl.w	r3, r2, r3
 8008fbe:	69ba      	ldr	r2, [r7, #24]
 8008fc0:	4313      	orrs	r3, r2
 8008fc2:	61bb      	str	r3, [r7, #24]
 8008fc4:	687b      	ldr	r3, [r7, #4]
 8008fc6:	69ba      	ldr	r2, [r7, #24]
 8008fc8:	609a      	str	r2, [r3, #8]
 8008fca:	687b      	ldr	r3, [r7, #4]
 8008fcc:	685b      	ldr	r3, [r3, #4]
 8008fce:	61bb      	str	r3, [r7, #24]
 8008fd0:	2201      	movs	r2, #1
 8008fd2:	69fb      	ldr	r3, [r7, #28]
 8008fd4:	fa02 f303 	lsl.w	r3, r2, r3
 8008fd8:	43db      	mvns	r3, r3
 8008fda:	69ba      	ldr	r2, [r7, #24]
 8008fdc:	4013      	ands	r3, r2
 8008fde:	61bb      	str	r3, [r7, #24]
 8008fe0:	683b      	ldr	r3, [r7, #0]
 8008fe2:	685b      	ldr	r3, [r3, #4]
 8008fe4:	091b      	lsrs	r3, r3, #4
 8008fe6:	f003 0201 	and.w	r2, r3, #1
 8008fea:	69fb      	ldr	r3, [r7, #28]
 8008fec:	fa02 f303 	lsl.w	r3, r2, r3
 8008ff0:	69ba      	ldr	r2, [r7, #24]
 8008ff2:	4313      	orrs	r3, r2
 8008ff4:	61bb      	str	r3, [r7, #24]
 8008ff6:	687b      	ldr	r3, [r7, #4]
 8008ff8:	69ba      	ldr	r2, [r7, #24]
 8008ffa:	605a      	str	r2, [r3, #4]
 8008ffc:	683b      	ldr	r3, [r7, #0]
 8008ffe:	685b      	ldr	r3, [r3, #4]
 8009000:	f003 0303 	and.w	r3, r3, #3
 8009004:	2b03      	cmp	r3, #3
 8009006:	d017      	beq.n	8009038 <HAL_GPIO_Init+0xf0>
 8009008:	687b      	ldr	r3, [r7, #4]
 800900a:	68db      	ldr	r3, [r3, #12]
 800900c:	61bb      	str	r3, [r7, #24]
 800900e:	69fb      	ldr	r3, [r7, #28]
 8009010:	005b      	lsls	r3, r3, #1
 8009012:	2203      	movs	r2, #3
 8009014:	fa02 f303 	lsl.w	r3, r2, r3
 8009018:	43db      	mvns	r3, r3
 800901a:	69ba      	ldr	r2, [r7, #24]
 800901c:	4013      	ands	r3, r2
 800901e:	61bb      	str	r3, [r7, #24]
 8009020:	683b      	ldr	r3, [r7, #0]
 8009022:	689a      	ldr	r2, [r3, #8]
 8009024:	69fb      	ldr	r3, [r7, #28]
 8009026:	005b      	lsls	r3, r3, #1
 8009028:	fa02 f303 	lsl.w	r3, r2, r3
 800902c:	69ba      	ldr	r2, [r7, #24]
 800902e:	4313      	orrs	r3, r2
 8009030:	61bb      	str	r3, [r7, #24]
 8009032:	687b      	ldr	r3, [r7, #4]
 8009034:	69ba      	ldr	r2, [r7, #24]
 8009036:	60da      	str	r2, [r3, #12]
 8009038:	683b      	ldr	r3, [r7, #0]
 800903a:	685b      	ldr	r3, [r3, #4]
 800903c:	f003 0303 	and.w	r3, r3, #3
 8009040:	2b02      	cmp	r3, #2
 8009042:	d123      	bne.n	800908c <HAL_GPIO_Init+0x144>
 8009044:	69fb      	ldr	r3, [r7, #28]
 8009046:	08da      	lsrs	r2, r3, #3
 8009048:	687b      	ldr	r3, [r7, #4]
 800904a:	3208      	adds	r2, #8
 800904c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8009050:	61bb      	str	r3, [r7, #24]
 8009052:	69fb      	ldr	r3, [r7, #28]
 8009054:	f003 0307 	and.w	r3, r3, #7
 8009058:	009b      	lsls	r3, r3, #2
 800905a:	220f      	movs	r2, #15
 800905c:	fa02 f303 	lsl.w	r3, r2, r3
 8009060:	43db      	mvns	r3, r3
 8009062:	69ba      	ldr	r2, [r7, #24]
 8009064:	4013      	ands	r3, r2
 8009066:	61bb      	str	r3, [r7, #24]
 8009068:	683b      	ldr	r3, [r7, #0]
 800906a:	691a      	ldr	r2, [r3, #16]
 800906c:	69fb      	ldr	r3, [r7, #28]
 800906e:	f003 0307 	and.w	r3, r3, #7
 8009072:	009b      	lsls	r3, r3, #2
 8009074:	fa02 f303 	lsl.w	r3, r2, r3
 8009078:	69ba      	ldr	r2, [r7, #24]
 800907a:	4313      	orrs	r3, r2
 800907c:	61bb      	str	r3, [r7, #24]
 800907e:	69fb      	ldr	r3, [r7, #28]
 8009080:	08da      	lsrs	r2, r3, #3
 8009082:	687b      	ldr	r3, [r7, #4]
 8009084:	3208      	adds	r2, #8
 8009086:	69b9      	ldr	r1, [r7, #24]
 8009088:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800908c:	687b      	ldr	r3, [r7, #4]
 800908e:	681b      	ldr	r3, [r3, #0]
 8009090:	61bb      	str	r3, [r7, #24]
 8009092:	69fb      	ldr	r3, [r7, #28]
 8009094:	005b      	lsls	r3, r3, #1
 8009096:	2203      	movs	r2, #3
 8009098:	fa02 f303 	lsl.w	r3, r2, r3
 800909c:	43db      	mvns	r3, r3
 800909e:	69ba      	ldr	r2, [r7, #24]
 80090a0:	4013      	ands	r3, r2
 80090a2:	61bb      	str	r3, [r7, #24]
 80090a4:	683b      	ldr	r3, [r7, #0]
 80090a6:	685b      	ldr	r3, [r3, #4]
 80090a8:	f003 0203 	and.w	r2, r3, #3
 80090ac:	69fb      	ldr	r3, [r7, #28]
 80090ae:	005b      	lsls	r3, r3, #1
 80090b0:	fa02 f303 	lsl.w	r3, r2, r3
 80090b4:	69ba      	ldr	r2, [r7, #24]
 80090b6:	4313      	orrs	r3, r2
 80090b8:	61bb      	str	r3, [r7, #24]
 80090ba:	687b      	ldr	r3, [r7, #4]
 80090bc:	69ba      	ldr	r2, [r7, #24]
 80090be:	601a      	str	r2, [r3, #0]
 80090c0:	683b      	ldr	r3, [r7, #0]
 80090c2:	685b      	ldr	r3, [r3, #4]
 80090c4:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80090c8:	2b00      	cmp	r3, #0
 80090ca:	f000 80ae 	beq.w	800922a <HAL_GPIO_Init+0x2e2>
 80090ce:	2300      	movs	r3, #0
 80090d0:	60fb      	str	r3, [r7, #12]
 80090d2:	4b5d      	ldr	r3, [pc, #372]	; (8009248 <HAL_GPIO_Init+0x300>)
 80090d4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80090d6:	4a5c      	ldr	r2, [pc, #368]	; (8009248 <HAL_GPIO_Init+0x300>)
 80090d8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80090dc:	6453      	str	r3, [r2, #68]	; 0x44
 80090de:	4b5a      	ldr	r3, [pc, #360]	; (8009248 <HAL_GPIO_Init+0x300>)
 80090e0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80090e2:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80090e6:	60fb      	str	r3, [r7, #12]
 80090e8:	68fb      	ldr	r3, [r7, #12]
 80090ea:	4a58      	ldr	r2, [pc, #352]	; (800924c <HAL_GPIO_Init+0x304>)
 80090ec:	69fb      	ldr	r3, [r7, #28]
 80090ee:	089b      	lsrs	r3, r3, #2
 80090f0:	3302      	adds	r3, #2
 80090f2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80090f6:	61bb      	str	r3, [r7, #24]
 80090f8:	69fb      	ldr	r3, [r7, #28]
 80090fa:	f003 0303 	and.w	r3, r3, #3
 80090fe:	009b      	lsls	r3, r3, #2
 8009100:	220f      	movs	r2, #15
 8009102:	fa02 f303 	lsl.w	r3, r2, r3
 8009106:	43db      	mvns	r3, r3
 8009108:	69ba      	ldr	r2, [r7, #24]
 800910a:	4013      	ands	r3, r2
 800910c:	61bb      	str	r3, [r7, #24]
 800910e:	687b      	ldr	r3, [r7, #4]
 8009110:	4a4f      	ldr	r2, [pc, #316]	; (8009250 <HAL_GPIO_Init+0x308>)
 8009112:	4293      	cmp	r3, r2
 8009114:	d025      	beq.n	8009162 <HAL_GPIO_Init+0x21a>
 8009116:	687b      	ldr	r3, [r7, #4]
 8009118:	4a4e      	ldr	r2, [pc, #312]	; (8009254 <HAL_GPIO_Init+0x30c>)
 800911a:	4293      	cmp	r3, r2
 800911c:	d01f      	beq.n	800915e <HAL_GPIO_Init+0x216>
 800911e:	687b      	ldr	r3, [r7, #4]
 8009120:	4a4d      	ldr	r2, [pc, #308]	; (8009258 <HAL_GPIO_Init+0x310>)
 8009122:	4293      	cmp	r3, r2
 8009124:	d019      	beq.n	800915a <HAL_GPIO_Init+0x212>
 8009126:	687b      	ldr	r3, [r7, #4]
 8009128:	4a4c      	ldr	r2, [pc, #304]	; (800925c <HAL_GPIO_Init+0x314>)
 800912a:	4293      	cmp	r3, r2
 800912c:	d013      	beq.n	8009156 <HAL_GPIO_Init+0x20e>
 800912e:	687b      	ldr	r3, [r7, #4]
 8009130:	4a4b      	ldr	r2, [pc, #300]	; (8009260 <HAL_GPIO_Init+0x318>)
 8009132:	4293      	cmp	r3, r2
 8009134:	d00d      	beq.n	8009152 <HAL_GPIO_Init+0x20a>
 8009136:	687b      	ldr	r3, [r7, #4]
 8009138:	4a4a      	ldr	r2, [pc, #296]	; (8009264 <HAL_GPIO_Init+0x31c>)
 800913a:	4293      	cmp	r3, r2
 800913c:	d007      	beq.n	800914e <HAL_GPIO_Init+0x206>
 800913e:	687b      	ldr	r3, [r7, #4]
 8009140:	4a49      	ldr	r2, [pc, #292]	; (8009268 <HAL_GPIO_Init+0x320>)
 8009142:	4293      	cmp	r3, r2
 8009144:	d101      	bne.n	800914a <HAL_GPIO_Init+0x202>
 8009146:	2306      	movs	r3, #6
 8009148:	e00c      	b.n	8009164 <HAL_GPIO_Init+0x21c>
 800914a:	2307      	movs	r3, #7
 800914c:	e00a      	b.n	8009164 <HAL_GPIO_Init+0x21c>
 800914e:	2305      	movs	r3, #5
 8009150:	e008      	b.n	8009164 <HAL_GPIO_Init+0x21c>
 8009152:	2304      	movs	r3, #4
 8009154:	e006      	b.n	8009164 <HAL_GPIO_Init+0x21c>
 8009156:	2303      	movs	r3, #3
 8009158:	e004      	b.n	8009164 <HAL_GPIO_Init+0x21c>
 800915a:	2302      	movs	r3, #2
 800915c:	e002      	b.n	8009164 <HAL_GPIO_Init+0x21c>
 800915e:	2301      	movs	r3, #1
 8009160:	e000      	b.n	8009164 <HAL_GPIO_Init+0x21c>
 8009162:	2300      	movs	r3, #0
 8009164:	69fa      	ldr	r2, [r7, #28]
 8009166:	f002 0203 	and.w	r2, r2, #3
 800916a:	0092      	lsls	r2, r2, #2
 800916c:	4093      	lsls	r3, r2
 800916e:	69ba      	ldr	r2, [r7, #24]
 8009170:	4313      	orrs	r3, r2
 8009172:	61bb      	str	r3, [r7, #24]
 8009174:	4935      	ldr	r1, [pc, #212]	; (800924c <HAL_GPIO_Init+0x304>)
 8009176:	69fb      	ldr	r3, [r7, #28]
 8009178:	089b      	lsrs	r3, r3, #2
 800917a:	3302      	adds	r3, #2
 800917c:	69ba      	ldr	r2, [r7, #24]
 800917e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8009182:	4b3a      	ldr	r3, [pc, #232]	; (800926c <HAL_GPIO_Init+0x324>)
 8009184:	689b      	ldr	r3, [r3, #8]
 8009186:	61bb      	str	r3, [r7, #24]
 8009188:	693b      	ldr	r3, [r7, #16]
 800918a:	43db      	mvns	r3, r3
 800918c:	69ba      	ldr	r2, [r7, #24]
 800918e:	4013      	ands	r3, r2
 8009190:	61bb      	str	r3, [r7, #24]
 8009192:	683b      	ldr	r3, [r7, #0]
 8009194:	685b      	ldr	r3, [r3, #4]
 8009196:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800919a:	2b00      	cmp	r3, #0
 800919c:	d003      	beq.n	80091a6 <HAL_GPIO_Init+0x25e>
 800919e:	69ba      	ldr	r2, [r7, #24]
 80091a0:	693b      	ldr	r3, [r7, #16]
 80091a2:	4313      	orrs	r3, r2
 80091a4:	61bb      	str	r3, [r7, #24]
 80091a6:	4a31      	ldr	r2, [pc, #196]	; (800926c <HAL_GPIO_Init+0x324>)
 80091a8:	69bb      	ldr	r3, [r7, #24]
 80091aa:	6093      	str	r3, [r2, #8]
 80091ac:	4b2f      	ldr	r3, [pc, #188]	; (800926c <HAL_GPIO_Init+0x324>)
 80091ae:	68db      	ldr	r3, [r3, #12]
 80091b0:	61bb      	str	r3, [r7, #24]
 80091b2:	693b      	ldr	r3, [r7, #16]
 80091b4:	43db      	mvns	r3, r3
 80091b6:	69ba      	ldr	r2, [r7, #24]
 80091b8:	4013      	ands	r3, r2
 80091ba:	61bb      	str	r3, [r7, #24]
 80091bc:	683b      	ldr	r3, [r7, #0]
 80091be:	685b      	ldr	r3, [r3, #4]
 80091c0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80091c4:	2b00      	cmp	r3, #0
 80091c6:	d003      	beq.n	80091d0 <HAL_GPIO_Init+0x288>
 80091c8:	69ba      	ldr	r2, [r7, #24]
 80091ca:	693b      	ldr	r3, [r7, #16]
 80091cc:	4313      	orrs	r3, r2
 80091ce:	61bb      	str	r3, [r7, #24]
 80091d0:	4a26      	ldr	r2, [pc, #152]	; (800926c <HAL_GPIO_Init+0x324>)
 80091d2:	69bb      	ldr	r3, [r7, #24]
 80091d4:	60d3      	str	r3, [r2, #12]
 80091d6:	4b25      	ldr	r3, [pc, #148]	; (800926c <HAL_GPIO_Init+0x324>)
 80091d8:	685b      	ldr	r3, [r3, #4]
 80091da:	61bb      	str	r3, [r7, #24]
 80091dc:	693b      	ldr	r3, [r7, #16]
 80091de:	43db      	mvns	r3, r3
 80091e0:	69ba      	ldr	r2, [r7, #24]
 80091e2:	4013      	ands	r3, r2
 80091e4:	61bb      	str	r3, [r7, #24]
 80091e6:	683b      	ldr	r3, [r7, #0]
 80091e8:	685b      	ldr	r3, [r3, #4]
 80091ea:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80091ee:	2b00      	cmp	r3, #0
 80091f0:	d003      	beq.n	80091fa <HAL_GPIO_Init+0x2b2>
 80091f2:	69ba      	ldr	r2, [r7, #24]
 80091f4:	693b      	ldr	r3, [r7, #16]
 80091f6:	4313      	orrs	r3, r2
 80091f8:	61bb      	str	r3, [r7, #24]
 80091fa:	4a1c      	ldr	r2, [pc, #112]	; (800926c <HAL_GPIO_Init+0x324>)
 80091fc:	69bb      	ldr	r3, [r7, #24]
 80091fe:	6053      	str	r3, [r2, #4]
 8009200:	4b1a      	ldr	r3, [pc, #104]	; (800926c <HAL_GPIO_Init+0x324>)
 8009202:	681b      	ldr	r3, [r3, #0]
 8009204:	61bb      	str	r3, [r7, #24]
 8009206:	693b      	ldr	r3, [r7, #16]
 8009208:	43db      	mvns	r3, r3
 800920a:	69ba      	ldr	r2, [r7, #24]
 800920c:	4013      	ands	r3, r2
 800920e:	61bb      	str	r3, [r7, #24]
 8009210:	683b      	ldr	r3, [r7, #0]
 8009212:	685b      	ldr	r3, [r3, #4]
 8009214:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8009218:	2b00      	cmp	r3, #0
 800921a:	d003      	beq.n	8009224 <HAL_GPIO_Init+0x2dc>
 800921c:	69ba      	ldr	r2, [r7, #24]
 800921e:	693b      	ldr	r3, [r7, #16]
 8009220:	4313      	orrs	r3, r2
 8009222:	61bb      	str	r3, [r7, #24]
 8009224:	4a11      	ldr	r2, [pc, #68]	; (800926c <HAL_GPIO_Init+0x324>)
 8009226:	69bb      	ldr	r3, [r7, #24]
 8009228:	6013      	str	r3, [r2, #0]
 800922a:	69fb      	ldr	r3, [r7, #28]
 800922c:	3301      	adds	r3, #1
 800922e:	61fb      	str	r3, [r7, #28]
 8009230:	69fb      	ldr	r3, [r7, #28]
 8009232:	2b0f      	cmp	r3, #15
 8009234:	f67f ae96 	bls.w	8008f64 <HAL_GPIO_Init+0x1c>
 8009238:	bf00      	nop
 800923a:	bf00      	nop
 800923c:	3724      	adds	r7, #36	; 0x24
 800923e:	46bd      	mov	sp, r7
 8009240:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009244:	4770      	bx	lr
 8009246:	bf00      	nop
 8009248:	40023800 	.word	0x40023800
 800924c:	40013800 	.word	0x40013800
 8009250:	40020000 	.word	0x40020000
 8009254:	40020400 	.word	0x40020400
 8009258:	40020800 	.word	0x40020800
 800925c:	40020c00 	.word	0x40020c00
 8009260:	40021000 	.word	0x40021000
 8009264:	40021400 	.word	0x40021400
 8009268:	40021800 	.word	0x40021800
 800926c:	40013c00 	.word	0x40013c00

08009270 <HAL_GPIO_ReadPin>:
 8009270:	b480      	push	{r7}
 8009272:	b085      	sub	sp, #20
 8009274:	af00      	add	r7, sp, #0
 8009276:	6078      	str	r0, [r7, #4]
 8009278:	460b      	mov	r3, r1
 800927a:	807b      	strh	r3, [r7, #2]
 800927c:	687b      	ldr	r3, [r7, #4]
 800927e:	691a      	ldr	r2, [r3, #16]
 8009280:	887b      	ldrh	r3, [r7, #2]
 8009282:	4013      	ands	r3, r2
 8009284:	2b00      	cmp	r3, #0
 8009286:	d002      	beq.n	800928e <HAL_GPIO_ReadPin+0x1e>
 8009288:	2301      	movs	r3, #1
 800928a:	73fb      	strb	r3, [r7, #15]
 800928c:	e001      	b.n	8009292 <HAL_GPIO_ReadPin+0x22>
 800928e:	2300      	movs	r3, #0
 8009290:	73fb      	strb	r3, [r7, #15]
 8009292:	7bfb      	ldrb	r3, [r7, #15]
 8009294:	4618      	mov	r0, r3
 8009296:	3714      	adds	r7, #20
 8009298:	46bd      	mov	sp, r7
 800929a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800929e:	4770      	bx	lr

080092a0 <HAL_GPIO_WritePin>:
 80092a0:	b480      	push	{r7}
 80092a2:	b083      	sub	sp, #12
 80092a4:	af00      	add	r7, sp, #0
 80092a6:	6078      	str	r0, [r7, #4]
 80092a8:	460b      	mov	r3, r1
 80092aa:	807b      	strh	r3, [r7, #2]
 80092ac:	4613      	mov	r3, r2
 80092ae:	707b      	strb	r3, [r7, #1]
 80092b0:	787b      	ldrb	r3, [r7, #1]
 80092b2:	2b00      	cmp	r3, #0
 80092b4:	d003      	beq.n	80092be <HAL_GPIO_WritePin+0x1e>
 80092b6:	887a      	ldrh	r2, [r7, #2]
 80092b8:	687b      	ldr	r3, [r7, #4]
 80092ba:	619a      	str	r2, [r3, #24]
 80092bc:	e003      	b.n	80092c6 <HAL_GPIO_WritePin+0x26>
 80092be:	887b      	ldrh	r3, [r7, #2]
 80092c0:	041a      	lsls	r2, r3, #16
 80092c2:	687b      	ldr	r3, [r7, #4]
 80092c4:	619a      	str	r2, [r3, #24]
 80092c6:	bf00      	nop
 80092c8:	370c      	adds	r7, #12
 80092ca:	46bd      	mov	sp, r7
 80092cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092d0:	4770      	bx	lr

080092d2 <HAL_GPIO_TogglePin>:
 80092d2:	b480      	push	{r7}
 80092d4:	b085      	sub	sp, #20
 80092d6:	af00      	add	r7, sp, #0
 80092d8:	6078      	str	r0, [r7, #4]
 80092da:	460b      	mov	r3, r1
 80092dc:	807b      	strh	r3, [r7, #2]
 80092de:	687b      	ldr	r3, [r7, #4]
 80092e0:	695b      	ldr	r3, [r3, #20]
 80092e2:	60fb      	str	r3, [r7, #12]
 80092e4:	887a      	ldrh	r2, [r7, #2]
 80092e6:	68fb      	ldr	r3, [r7, #12]
 80092e8:	4013      	ands	r3, r2
 80092ea:	041a      	lsls	r2, r3, #16
 80092ec:	68fb      	ldr	r3, [r7, #12]
 80092ee:	43d9      	mvns	r1, r3
 80092f0:	887b      	ldrh	r3, [r7, #2]
 80092f2:	400b      	ands	r3, r1
 80092f4:	431a      	orrs	r2, r3
 80092f6:	687b      	ldr	r3, [r7, #4]
 80092f8:	619a      	str	r2, [r3, #24]
 80092fa:	bf00      	nop
 80092fc:	3714      	adds	r7, #20
 80092fe:	46bd      	mov	sp, r7
 8009300:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009304:	4770      	bx	lr
	...

08009308 <HAL_GPIO_EXTI_IRQHandler>:
 8009308:	b580      	push	{r7, lr}
 800930a:	b082      	sub	sp, #8
 800930c:	af00      	add	r7, sp, #0
 800930e:	4603      	mov	r3, r0
 8009310:	80fb      	strh	r3, [r7, #6]
 8009312:	4b08      	ldr	r3, [pc, #32]	; (8009334 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8009314:	695a      	ldr	r2, [r3, #20]
 8009316:	88fb      	ldrh	r3, [r7, #6]
 8009318:	4013      	ands	r3, r2
 800931a:	2b00      	cmp	r3, #0
 800931c:	d006      	beq.n	800932c <HAL_GPIO_EXTI_IRQHandler+0x24>
 800931e:	4a05      	ldr	r2, [pc, #20]	; (8009334 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8009320:	88fb      	ldrh	r3, [r7, #6]
 8009322:	6153      	str	r3, [r2, #20]
 8009324:	88fb      	ldrh	r3, [r7, #6]
 8009326:	4618      	mov	r0, r3
 8009328:	f7fd fa76 	bl	8006818 <HAL_GPIO_EXTI_Callback>
 800932c:	bf00      	nop
 800932e:	3708      	adds	r7, #8
 8009330:	46bd      	mov	sp, r7
 8009332:	bd80      	pop	{r7, pc}
 8009334:	40013c00 	.word	0x40013c00

08009338 <HAL_PWREx_EnableOverDrive>:
 8009338:	b580      	push	{r7, lr}
 800933a:	b082      	sub	sp, #8
 800933c:	af00      	add	r7, sp, #0
 800933e:	2300      	movs	r3, #0
 8009340:	607b      	str	r3, [r7, #4]
 8009342:	2300      	movs	r3, #0
 8009344:	603b      	str	r3, [r7, #0]
 8009346:	4b20      	ldr	r3, [pc, #128]	; (80093c8 <HAL_PWREx_EnableOverDrive+0x90>)
 8009348:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800934a:	4a1f      	ldr	r2, [pc, #124]	; (80093c8 <HAL_PWREx_EnableOverDrive+0x90>)
 800934c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8009350:	6413      	str	r3, [r2, #64]	; 0x40
 8009352:	4b1d      	ldr	r3, [pc, #116]	; (80093c8 <HAL_PWREx_EnableOverDrive+0x90>)
 8009354:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009356:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800935a:	603b      	str	r3, [r7, #0]
 800935c:	683b      	ldr	r3, [r7, #0]
 800935e:	4b1b      	ldr	r3, [pc, #108]	; (80093cc <HAL_PWREx_EnableOverDrive+0x94>)
 8009360:	2201      	movs	r2, #1
 8009362:	601a      	str	r2, [r3, #0]
 8009364:	f7fe f8f6 	bl	8007554 <HAL_GetTick>
 8009368:	6078      	str	r0, [r7, #4]
 800936a:	e009      	b.n	8009380 <HAL_PWREx_EnableOverDrive+0x48>
 800936c:	f7fe f8f2 	bl	8007554 <HAL_GetTick>
 8009370:	4602      	mov	r2, r0
 8009372:	687b      	ldr	r3, [r7, #4]
 8009374:	1ad3      	subs	r3, r2, r3
 8009376:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800937a:	d901      	bls.n	8009380 <HAL_PWREx_EnableOverDrive+0x48>
 800937c:	2303      	movs	r3, #3
 800937e:	e01f      	b.n	80093c0 <HAL_PWREx_EnableOverDrive+0x88>
 8009380:	4b13      	ldr	r3, [pc, #76]	; (80093d0 <HAL_PWREx_EnableOverDrive+0x98>)
 8009382:	685b      	ldr	r3, [r3, #4]
 8009384:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8009388:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800938c:	d1ee      	bne.n	800936c <HAL_PWREx_EnableOverDrive+0x34>
 800938e:	4b11      	ldr	r3, [pc, #68]	; (80093d4 <HAL_PWREx_EnableOverDrive+0x9c>)
 8009390:	2201      	movs	r2, #1
 8009392:	601a      	str	r2, [r3, #0]
 8009394:	f7fe f8de 	bl	8007554 <HAL_GetTick>
 8009398:	6078      	str	r0, [r7, #4]
 800939a:	e009      	b.n	80093b0 <HAL_PWREx_EnableOverDrive+0x78>
 800939c:	f7fe f8da 	bl	8007554 <HAL_GetTick>
 80093a0:	4602      	mov	r2, r0
 80093a2:	687b      	ldr	r3, [r7, #4]
 80093a4:	1ad3      	subs	r3, r2, r3
 80093a6:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80093aa:	d901      	bls.n	80093b0 <HAL_PWREx_EnableOverDrive+0x78>
 80093ac:	2303      	movs	r3, #3
 80093ae:	e007      	b.n	80093c0 <HAL_PWREx_EnableOverDrive+0x88>
 80093b0:	4b07      	ldr	r3, [pc, #28]	; (80093d0 <HAL_PWREx_EnableOverDrive+0x98>)
 80093b2:	685b      	ldr	r3, [r3, #4]
 80093b4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80093b8:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80093bc:	d1ee      	bne.n	800939c <HAL_PWREx_EnableOverDrive+0x64>
 80093be:	2300      	movs	r3, #0
 80093c0:	4618      	mov	r0, r3
 80093c2:	3708      	adds	r7, #8
 80093c4:	46bd      	mov	sp, r7
 80093c6:	bd80      	pop	{r7, pc}
 80093c8:	40023800 	.word	0x40023800
 80093cc:	420e0040 	.word	0x420e0040
 80093d0:	40007000 	.word	0x40007000
 80093d4:	420e0044 	.word	0x420e0044

080093d8 <HAL_RCC_ClockConfig>:
 80093d8:	b580      	push	{r7, lr}
 80093da:	b084      	sub	sp, #16
 80093dc:	af00      	add	r7, sp, #0
 80093de:	6078      	str	r0, [r7, #4]
 80093e0:	6039      	str	r1, [r7, #0]
 80093e2:	687b      	ldr	r3, [r7, #4]
 80093e4:	2b00      	cmp	r3, #0
 80093e6:	d101      	bne.n	80093ec <HAL_RCC_ClockConfig+0x14>
 80093e8:	2301      	movs	r3, #1
 80093ea:	e0cc      	b.n	8009586 <HAL_RCC_ClockConfig+0x1ae>
 80093ec:	4b68      	ldr	r3, [pc, #416]	; (8009590 <HAL_RCC_ClockConfig+0x1b8>)
 80093ee:	681b      	ldr	r3, [r3, #0]
 80093f0:	f003 030f 	and.w	r3, r3, #15
 80093f4:	683a      	ldr	r2, [r7, #0]
 80093f6:	429a      	cmp	r2, r3
 80093f8:	d90c      	bls.n	8009414 <HAL_RCC_ClockConfig+0x3c>
 80093fa:	4b65      	ldr	r3, [pc, #404]	; (8009590 <HAL_RCC_ClockConfig+0x1b8>)
 80093fc:	683a      	ldr	r2, [r7, #0]
 80093fe:	b2d2      	uxtb	r2, r2
 8009400:	701a      	strb	r2, [r3, #0]
 8009402:	4b63      	ldr	r3, [pc, #396]	; (8009590 <HAL_RCC_ClockConfig+0x1b8>)
 8009404:	681b      	ldr	r3, [r3, #0]
 8009406:	f003 030f 	and.w	r3, r3, #15
 800940a:	683a      	ldr	r2, [r7, #0]
 800940c:	429a      	cmp	r2, r3
 800940e:	d001      	beq.n	8009414 <HAL_RCC_ClockConfig+0x3c>
 8009410:	2301      	movs	r3, #1
 8009412:	e0b8      	b.n	8009586 <HAL_RCC_ClockConfig+0x1ae>
 8009414:	687b      	ldr	r3, [r7, #4]
 8009416:	681b      	ldr	r3, [r3, #0]
 8009418:	f003 0302 	and.w	r3, r3, #2
 800941c:	2b00      	cmp	r3, #0
 800941e:	d020      	beq.n	8009462 <HAL_RCC_ClockConfig+0x8a>
 8009420:	687b      	ldr	r3, [r7, #4]
 8009422:	681b      	ldr	r3, [r3, #0]
 8009424:	f003 0304 	and.w	r3, r3, #4
 8009428:	2b00      	cmp	r3, #0
 800942a:	d005      	beq.n	8009438 <HAL_RCC_ClockConfig+0x60>
 800942c:	4b59      	ldr	r3, [pc, #356]	; (8009594 <HAL_RCC_ClockConfig+0x1bc>)
 800942e:	689b      	ldr	r3, [r3, #8]
 8009430:	4a58      	ldr	r2, [pc, #352]	; (8009594 <HAL_RCC_ClockConfig+0x1bc>)
 8009432:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8009436:	6093      	str	r3, [r2, #8]
 8009438:	687b      	ldr	r3, [r7, #4]
 800943a:	681b      	ldr	r3, [r3, #0]
 800943c:	f003 0308 	and.w	r3, r3, #8
 8009440:	2b00      	cmp	r3, #0
 8009442:	d005      	beq.n	8009450 <HAL_RCC_ClockConfig+0x78>
 8009444:	4b53      	ldr	r3, [pc, #332]	; (8009594 <HAL_RCC_ClockConfig+0x1bc>)
 8009446:	689b      	ldr	r3, [r3, #8]
 8009448:	4a52      	ldr	r2, [pc, #328]	; (8009594 <HAL_RCC_ClockConfig+0x1bc>)
 800944a:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 800944e:	6093      	str	r3, [r2, #8]
 8009450:	4b50      	ldr	r3, [pc, #320]	; (8009594 <HAL_RCC_ClockConfig+0x1bc>)
 8009452:	689b      	ldr	r3, [r3, #8]
 8009454:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8009458:	687b      	ldr	r3, [r7, #4]
 800945a:	689b      	ldr	r3, [r3, #8]
 800945c:	494d      	ldr	r1, [pc, #308]	; (8009594 <HAL_RCC_ClockConfig+0x1bc>)
 800945e:	4313      	orrs	r3, r2
 8009460:	608b      	str	r3, [r1, #8]
 8009462:	687b      	ldr	r3, [r7, #4]
 8009464:	681b      	ldr	r3, [r3, #0]
 8009466:	f003 0301 	and.w	r3, r3, #1
 800946a:	2b00      	cmp	r3, #0
 800946c:	d044      	beq.n	80094f8 <HAL_RCC_ClockConfig+0x120>
 800946e:	687b      	ldr	r3, [r7, #4]
 8009470:	685b      	ldr	r3, [r3, #4]
 8009472:	2b01      	cmp	r3, #1
 8009474:	d107      	bne.n	8009486 <HAL_RCC_ClockConfig+0xae>
 8009476:	4b47      	ldr	r3, [pc, #284]	; (8009594 <HAL_RCC_ClockConfig+0x1bc>)
 8009478:	681b      	ldr	r3, [r3, #0]
 800947a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800947e:	2b00      	cmp	r3, #0
 8009480:	d119      	bne.n	80094b6 <HAL_RCC_ClockConfig+0xde>
 8009482:	2301      	movs	r3, #1
 8009484:	e07f      	b.n	8009586 <HAL_RCC_ClockConfig+0x1ae>
 8009486:	687b      	ldr	r3, [r7, #4]
 8009488:	685b      	ldr	r3, [r3, #4]
 800948a:	2b02      	cmp	r3, #2
 800948c:	d003      	beq.n	8009496 <HAL_RCC_ClockConfig+0xbe>
 800948e:	687b      	ldr	r3, [r7, #4]
 8009490:	685b      	ldr	r3, [r3, #4]
 8009492:	2b03      	cmp	r3, #3
 8009494:	d107      	bne.n	80094a6 <HAL_RCC_ClockConfig+0xce>
 8009496:	4b3f      	ldr	r3, [pc, #252]	; (8009594 <HAL_RCC_ClockConfig+0x1bc>)
 8009498:	681b      	ldr	r3, [r3, #0]
 800949a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800949e:	2b00      	cmp	r3, #0
 80094a0:	d109      	bne.n	80094b6 <HAL_RCC_ClockConfig+0xde>
 80094a2:	2301      	movs	r3, #1
 80094a4:	e06f      	b.n	8009586 <HAL_RCC_ClockConfig+0x1ae>
 80094a6:	4b3b      	ldr	r3, [pc, #236]	; (8009594 <HAL_RCC_ClockConfig+0x1bc>)
 80094a8:	681b      	ldr	r3, [r3, #0]
 80094aa:	f003 0302 	and.w	r3, r3, #2
 80094ae:	2b00      	cmp	r3, #0
 80094b0:	d101      	bne.n	80094b6 <HAL_RCC_ClockConfig+0xde>
 80094b2:	2301      	movs	r3, #1
 80094b4:	e067      	b.n	8009586 <HAL_RCC_ClockConfig+0x1ae>
 80094b6:	4b37      	ldr	r3, [pc, #220]	; (8009594 <HAL_RCC_ClockConfig+0x1bc>)
 80094b8:	689b      	ldr	r3, [r3, #8]
 80094ba:	f023 0203 	bic.w	r2, r3, #3
 80094be:	687b      	ldr	r3, [r7, #4]
 80094c0:	685b      	ldr	r3, [r3, #4]
 80094c2:	4934      	ldr	r1, [pc, #208]	; (8009594 <HAL_RCC_ClockConfig+0x1bc>)
 80094c4:	4313      	orrs	r3, r2
 80094c6:	608b      	str	r3, [r1, #8]
 80094c8:	f7fe f844 	bl	8007554 <HAL_GetTick>
 80094cc:	60f8      	str	r0, [r7, #12]
 80094ce:	e00a      	b.n	80094e6 <HAL_RCC_ClockConfig+0x10e>
 80094d0:	f7fe f840 	bl	8007554 <HAL_GetTick>
 80094d4:	4602      	mov	r2, r0
 80094d6:	68fb      	ldr	r3, [r7, #12]
 80094d8:	1ad3      	subs	r3, r2, r3
 80094da:	f241 3288 	movw	r2, #5000	; 0x1388
 80094de:	4293      	cmp	r3, r2
 80094e0:	d901      	bls.n	80094e6 <HAL_RCC_ClockConfig+0x10e>
 80094e2:	2303      	movs	r3, #3
 80094e4:	e04f      	b.n	8009586 <HAL_RCC_ClockConfig+0x1ae>
 80094e6:	4b2b      	ldr	r3, [pc, #172]	; (8009594 <HAL_RCC_ClockConfig+0x1bc>)
 80094e8:	689b      	ldr	r3, [r3, #8]
 80094ea:	f003 020c 	and.w	r2, r3, #12
 80094ee:	687b      	ldr	r3, [r7, #4]
 80094f0:	685b      	ldr	r3, [r3, #4]
 80094f2:	009b      	lsls	r3, r3, #2
 80094f4:	429a      	cmp	r2, r3
 80094f6:	d1eb      	bne.n	80094d0 <HAL_RCC_ClockConfig+0xf8>
 80094f8:	4b25      	ldr	r3, [pc, #148]	; (8009590 <HAL_RCC_ClockConfig+0x1b8>)
 80094fa:	681b      	ldr	r3, [r3, #0]
 80094fc:	f003 030f 	and.w	r3, r3, #15
 8009500:	683a      	ldr	r2, [r7, #0]
 8009502:	429a      	cmp	r2, r3
 8009504:	d20c      	bcs.n	8009520 <HAL_RCC_ClockConfig+0x148>
 8009506:	4b22      	ldr	r3, [pc, #136]	; (8009590 <HAL_RCC_ClockConfig+0x1b8>)
 8009508:	683a      	ldr	r2, [r7, #0]
 800950a:	b2d2      	uxtb	r2, r2
 800950c:	701a      	strb	r2, [r3, #0]
 800950e:	4b20      	ldr	r3, [pc, #128]	; (8009590 <HAL_RCC_ClockConfig+0x1b8>)
 8009510:	681b      	ldr	r3, [r3, #0]
 8009512:	f003 030f 	and.w	r3, r3, #15
 8009516:	683a      	ldr	r2, [r7, #0]
 8009518:	429a      	cmp	r2, r3
 800951a:	d001      	beq.n	8009520 <HAL_RCC_ClockConfig+0x148>
 800951c:	2301      	movs	r3, #1
 800951e:	e032      	b.n	8009586 <HAL_RCC_ClockConfig+0x1ae>
 8009520:	687b      	ldr	r3, [r7, #4]
 8009522:	681b      	ldr	r3, [r3, #0]
 8009524:	f003 0304 	and.w	r3, r3, #4
 8009528:	2b00      	cmp	r3, #0
 800952a:	d008      	beq.n	800953e <HAL_RCC_ClockConfig+0x166>
 800952c:	4b19      	ldr	r3, [pc, #100]	; (8009594 <HAL_RCC_ClockConfig+0x1bc>)
 800952e:	689b      	ldr	r3, [r3, #8]
 8009530:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8009534:	687b      	ldr	r3, [r7, #4]
 8009536:	68db      	ldr	r3, [r3, #12]
 8009538:	4916      	ldr	r1, [pc, #88]	; (8009594 <HAL_RCC_ClockConfig+0x1bc>)
 800953a:	4313      	orrs	r3, r2
 800953c:	608b      	str	r3, [r1, #8]
 800953e:	687b      	ldr	r3, [r7, #4]
 8009540:	681b      	ldr	r3, [r3, #0]
 8009542:	f003 0308 	and.w	r3, r3, #8
 8009546:	2b00      	cmp	r3, #0
 8009548:	d009      	beq.n	800955e <HAL_RCC_ClockConfig+0x186>
 800954a:	4b12      	ldr	r3, [pc, #72]	; (8009594 <HAL_RCC_ClockConfig+0x1bc>)
 800954c:	689b      	ldr	r3, [r3, #8]
 800954e:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8009552:	687b      	ldr	r3, [r7, #4]
 8009554:	691b      	ldr	r3, [r3, #16]
 8009556:	00db      	lsls	r3, r3, #3
 8009558:	490e      	ldr	r1, [pc, #56]	; (8009594 <HAL_RCC_ClockConfig+0x1bc>)
 800955a:	4313      	orrs	r3, r2
 800955c:	608b      	str	r3, [r1, #8]
 800955e:	f000 f855 	bl	800960c <HAL_RCC_GetSysClockFreq>
 8009562:	4602      	mov	r2, r0
 8009564:	4b0b      	ldr	r3, [pc, #44]	; (8009594 <HAL_RCC_ClockConfig+0x1bc>)
 8009566:	689b      	ldr	r3, [r3, #8]
 8009568:	091b      	lsrs	r3, r3, #4
 800956a:	f003 030f 	and.w	r3, r3, #15
 800956e:	490a      	ldr	r1, [pc, #40]	; (8009598 <HAL_RCC_ClockConfig+0x1c0>)
 8009570:	5ccb      	ldrb	r3, [r1, r3]
 8009572:	fa22 f303 	lsr.w	r3, r2, r3
 8009576:	4a09      	ldr	r2, [pc, #36]	; (800959c <HAL_RCC_ClockConfig+0x1c4>)
 8009578:	6013      	str	r3, [r2, #0]
 800957a:	4b09      	ldr	r3, [pc, #36]	; (80095a0 <HAL_RCC_ClockConfig+0x1c8>)
 800957c:	681b      	ldr	r3, [r3, #0]
 800957e:	4618      	mov	r0, r3
 8009580:	f7fd ffa4 	bl	80074cc <HAL_InitTick>
 8009584:	2300      	movs	r3, #0
 8009586:	4618      	mov	r0, r3
 8009588:	3710      	adds	r7, #16
 800958a:	46bd      	mov	sp, r7
 800958c:	bd80      	pop	{r7, pc}
 800958e:	bf00      	nop
 8009590:	40023c00 	.word	0x40023c00
 8009594:	40023800 	.word	0x40023800
 8009598:	08011304 	.word	0x08011304
 800959c:	20000134 	.word	0x20000134
 80095a0:	20000138 	.word	0x20000138

080095a4 <HAL_RCC_GetHCLKFreq>:
 80095a4:	b480      	push	{r7}
 80095a6:	af00      	add	r7, sp, #0
 80095a8:	4b03      	ldr	r3, [pc, #12]	; (80095b8 <HAL_RCC_GetHCLKFreq+0x14>)
 80095aa:	681b      	ldr	r3, [r3, #0]
 80095ac:	4618      	mov	r0, r3
 80095ae:	46bd      	mov	sp, r7
 80095b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095b4:	4770      	bx	lr
 80095b6:	bf00      	nop
 80095b8:	20000134 	.word	0x20000134

080095bc <HAL_RCC_GetPCLK1Freq>:
 80095bc:	b580      	push	{r7, lr}
 80095be:	af00      	add	r7, sp, #0
 80095c0:	f7ff fff0 	bl	80095a4 <HAL_RCC_GetHCLKFreq>
 80095c4:	4602      	mov	r2, r0
 80095c6:	4b05      	ldr	r3, [pc, #20]	; (80095dc <HAL_RCC_GetPCLK1Freq+0x20>)
 80095c8:	689b      	ldr	r3, [r3, #8]
 80095ca:	0a9b      	lsrs	r3, r3, #10
 80095cc:	f003 0307 	and.w	r3, r3, #7
 80095d0:	4903      	ldr	r1, [pc, #12]	; (80095e0 <HAL_RCC_GetPCLK1Freq+0x24>)
 80095d2:	5ccb      	ldrb	r3, [r1, r3]
 80095d4:	fa22 f303 	lsr.w	r3, r2, r3
 80095d8:	4618      	mov	r0, r3
 80095da:	bd80      	pop	{r7, pc}
 80095dc:	40023800 	.word	0x40023800
 80095e0:	08011314 	.word	0x08011314

080095e4 <HAL_RCC_GetPCLK2Freq>:
 80095e4:	b580      	push	{r7, lr}
 80095e6:	af00      	add	r7, sp, #0
 80095e8:	f7ff ffdc 	bl	80095a4 <HAL_RCC_GetHCLKFreq>
 80095ec:	4602      	mov	r2, r0
 80095ee:	4b05      	ldr	r3, [pc, #20]	; (8009604 <HAL_RCC_GetPCLK2Freq+0x20>)
 80095f0:	689b      	ldr	r3, [r3, #8]
 80095f2:	0b5b      	lsrs	r3, r3, #13
 80095f4:	f003 0307 	and.w	r3, r3, #7
 80095f8:	4903      	ldr	r1, [pc, #12]	; (8009608 <HAL_RCC_GetPCLK2Freq+0x24>)
 80095fa:	5ccb      	ldrb	r3, [r1, r3]
 80095fc:	fa22 f303 	lsr.w	r3, r2, r3
 8009600:	4618      	mov	r0, r3
 8009602:	bd80      	pop	{r7, pc}
 8009604:	40023800 	.word	0x40023800
 8009608:	08011314 	.word	0x08011314

0800960c <HAL_RCC_GetSysClockFreq>:
 800960c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8009610:	b0ae      	sub	sp, #184	; 0xb8
 8009612:	af00      	add	r7, sp, #0
 8009614:	2300      	movs	r3, #0
 8009616:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800961a:	2300      	movs	r3, #0
 800961c:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8009620:	2300      	movs	r3, #0
 8009622:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8009626:	2300      	movs	r3, #0
 8009628:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800962c:	2300      	movs	r3, #0
 800962e:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8009632:	4bcb      	ldr	r3, [pc, #812]	; (8009960 <HAL_RCC_GetSysClockFreq+0x354>)
 8009634:	689b      	ldr	r3, [r3, #8]
 8009636:	f003 030c 	and.w	r3, r3, #12
 800963a:	2b0c      	cmp	r3, #12
 800963c:	f200 8206 	bhi.w	8009a4c <HAL_RCC_GetSysClockFreq+0x440>
 8009640:	a201      	add	r2, pc, #4	; (adr r2, 8009648 <HAL_RCC_GetSysClockFreq+0x3c>)
 8009642:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009646:	bf00      	nop
 8009648:	0800967d 	.word	0x0800967d
 800964c:	08009a4d 	.word	0x08009a4d
 8009650:	08009a4d 	.word	0x08009a4d
 8009654:	08009a4d 	.word	0x08009a4d
 8009658:	08009685 	.word	0x08009685
 800965c:	08009a4d 	.word	0x08009a4d
 8009660:	08009a4d 	.word	0x08009a4d
 8009664:	08009a4d 	.word	0x08009a4d
 8009668:	0800968d 	.word	0x0800968d
 800966c:	08009a4d 	.word	0x08009a4d
 8009670:	08009a4d 	.word	0x08009a4d
 8009674:	08009a4d 	.word	0x08009a4d
 8009678:	0800987d 	.word	0x0800987d
 800967c:	4bb9      	ldr	r3, [pc, #740]	; (8009964 <HAL_RCC_GetSysClockFreq+0x358>)
 800967e:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8009682:	e1e7      	b.n	8009a54 <HAL_RCC_GetSysClockFreq+0x448>
 8009684:	4bb8      	ldr	r3, [pc, #736]	; (8009968 <HAL_RCC_GetSysClockFreq+0x35c>)
 8009686:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800968a:	e1e3      	b.n	8009a54 <HAL_RCC_GetSysClockFreq+0x448>
 800968c:	4bb4      	ldr	r3, [pc, #720]	; (8009960 <HAL_RCC_GetSysClockFreq+0x354>)
 800968e:	685b      	ldr	r3, [r3, #4]
 8009690:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009694:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8009698:	4bb1      	ldr	r3, [pc, #708]	; (8009960 <HAL_RCC_GetSysClockFreq+0x354>)
 800969a:	685b      	ldr	r3, [r3, #4]
 800969c:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80096a0:	2b00      	cmp	r3, #0
 80096a2:	d071      	beq.n	8009788 <HAL_RCC_GetSysClockFreq+0x17c>
 80096a4:	4bae      	ldr	r3, [pc, #696]	; (8009960 <HAL_RCC_GetSysClockFreq+0x354>)
 80096a6:	685b      	ldr	r3, [r3, #4]
 80096a8:	099b      	lsrs	r3, r3, #6
 80096aa:	2200      	movs	r2, #0
 80096ac:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 80096b0:	f8c7 209c 	str.w	r2, [r7, #156]	; 0x9c
 80096b4:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80096b8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80096bc:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 80096c0:	2300      	movs	r3, #0
 80096c2:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 80096c6:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 80096ca:	4622      	mov	r2, r4
 80096cc:	462b      	mov	r3, r5
 80096ce:	f04f 0000 	mov.w	r0, #0
 80096d2:	f04f 0100 	mov.w	r1, #0
 80096d6:	0159      	lsls	r1, r3, #5
 80096d8:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80096dc:	0150      	lsls	r0, r2, #5
 80096de:	4602      	mov	r2, r0
 80096e0:	460b      	mov	r3, r1
 80096e2:	4621      	mov	r1, r4
 80096e4:	1a51      	subs	r1, r2, r1
 80096e6:	6439      	str	r1, [r7, #64]	; 0x40
 80096e8:	4629      	mov	r1, r5
 80096ea:	eb63 0301 	sbc.w	r3, r3, r1
 80096ee:	647b      	str	r3, [r7, #68]	; 0x44
 80096f0:	f04f 0200 	mov.w	r2, #0
 80096f4:	f04f 0300 	mov.w	r3, #0
 80096f8:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	; 0x40
 80096fc:	4649      	mov	r1, r9
 80096fe:	018b      	lsls	r3, r1, #6
 8009700:	4641      	mov	r1, r8
 8009702:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8009706:	4641      	mov	r1, r8
 8009708:	018a      	lsls	r2, r1, #6
 800970a:	4641      	mov	r1, r8
 800970c:	1a51      	subs	r1, r2, r1
 800970e:	63b9      	str	r1, [r7, #56]	; 0x38
 8009710:	4649      	mov	r1, r9
 8009712:	eb63 0301 	sbc.w	r3, r3, r1
 8009716:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009718:	f04f 0200 	mov.w	r2, #0
 800971c:	f04f 0300 	mov.w	r3, #0
 8009720:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	; 0x38
 8009724:	4649      	mov	r1, r9
 8009726:	00cb      	lsls	r3, r1, #3
 8009728:	4641      	mov	r1, r8
 800972a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800972e:	4641      	mov	r1, r8
 8009730:	00ca      	lsls	r2, r1, #3
 8009732:	4610      	mov	r0, r2
 8009734:	4619      	mov	r1, r3
 8009736:	4603      	mov	r3, r0
 8009738:	4622      	mov	r2, r4
 800973a:	189b      	adds	r3, r3, r2
 800973c:	633b      	str	r3, [r7, #48]	; 0x30
 800973e:	462b      	mov	r3, r5
 8009740:	460a      	mov	r2, r1
 8009742:	eb42 0303 	adc.w	r3, r2, r3
 8009746:	637b      	str	r3, [r7, #52]	; 0x34
 8009748:	f04f 0200 	mov.w	r2, #0
 800974c:	f04f 0300 	mov.w	r3, #0
 8009750:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8009754:	4629      	mov	r1, r5
 8009756:	024b      	lsls	r3, r1, #9
 8009758:	4621      	mov	r1, r4
 800975a:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 800975e:	4621      	mov	r1, r4
 8009760:	024a      	lsls	r2, r1, #9
 8009762:	4610      	mov	r0, r2
 8009764:	4619      	mov	r1, r3
 8009766:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800976a:	2200      	movs	r2, #0
 800976c:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8009770:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8009774:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 8009778:	f7f7 fa86 	bl	8000c88 <__aeabi_uldivmod>
 800977c:	4602      	mov	r2, r0
 800977e:	460b      	mov	r3, r1
 8009780:	4613      	mov	r3, r2
 8009782:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8009786:	e067      	b.n	8009858 <HAL_RCC_GetSysClockFreq+0x24c>
 8009788:	4b75      	ldr	r3, [pc, #468]	; (8009960 <HAL_RCC_GetSysClockFreq+0x354>)
 800978a:	685b      	ldr	r3, [r3, #4]
 800978c:	099b      	lsrs	r3, r3, #6
 800978e:	2200      	movs	r2, #0
 8009790:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8009794:	f8c7 2084 	str.w	r2, [r7, #132]	; 0x84
 8009798:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800979c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80097a0:	67bb      	str	r3, [r7, #120]	; 0x78
 80097a2:	2300      	movs	r3, #0
 80097a4:	67fb      	str	r3, [r7, #124]	; 0x7c
 80097a6:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	; 0x78
 80097aa:	4622      	mov	r2, r4
 80097ac:	462b      	mov	r3, r5
 80097ae:	f04f 0000 	mov.w	r0, #0
 80097b2:	f04f 0100 	mov.w	r1, #0
 80097b6:	0159      	lsls	r1, r3, #5
 80097b8:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80097bc:	0150      	lsls	r0, r2, #5
 80097be:	4602      	mov	r2, r0
 80097c0:	460b      	mov	r3, r1
 80097c2:	4621      	mov	r1, r4
 80097c4:	1a51      	subs	r1, r2, r1
 80097c6:	62b9      	str	r1, [r7, #40]	; 0x28
 80097c8:	4629      	mov	r1, r5
 80097ca:	eb63 0301 	sbc.w	r3, r3, r1
 80097ce:	62fb      	str	r3, [r7, #44]	; 0x2c
 80097d0:	f04f 0200 	mov.w	r2, #0
 80097d4:	f04f 0300 	mov.w	r3, #0
 80097d8:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	; 0x28
 80097dc:	4649      	mov	r1, r9
 80097de:	018b      	lsls	r3, r1, #6
 80097e0:	4641      	mov	r1, r8
 80097e2:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80097e6:	4641      	mov	r1, r8
 80097e8:	018a      	lsls	r2, r1, #6
 80097ea:	4641      	mov	r1, r8
 80097ec:	ebb2 0a01 	subs.w	sl, r2, r1
 80097f0:	4649      	mov	r1, r9
 80097f2:	eb63 0b01 	sbc.w	fp, r3, r1
 80097f6:	f04f 0200 	mov.w	r2, #0
 80097fa:	f04f 0300 	mov.w	r3, #0
 80097fe:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8009802:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8009806:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800980a:	4692      	mov	sl, r2
 800980c:	469b      	mov	fp, r3
 800980e:	4623      	mov	r3, r4
 8009810:	eb1a 0303 	adds.w	r3, sl, r3
 8009814:	623b      	str	r3, [r7, #32]
 8009816:	462b      	mov	r3, r5
 8009818:	eb4b 0303 	adc.w	r3, fp, r3
 800981c:	627b      	str	r3, [r7, #36]	; 0x24
 800981e:	f04f 0200 	mov.w	r2, #0
 8009822:	f04f 0300 	mov.w	r3, #0
 8009826:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 800982a:	4629      	mov	r1, r5
 800982c:	028b      	lsls	r3, r1, #10
 800982e:	4621      	mov	r1, r4
 8009830:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8009834:	4621      	mov	r1, r4
 8009836:	028a      	lsls	r2, r1, #10
 8009838:	4610      	mov	r0, r2
 800983a:	4619      	mov	r1, r3
 800983c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8009840:	2200      	movs	r2, #0
 8009842:	673b      	str	r3, [r7, #112]	; 0x70
 8009844:	677a      	str	r2, [r7, #116]	; 0x74
 8009846:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 800984a:	f7f7 fa1d 	bl	8000c88 <__aeabi_uldivmod>
 800984e:	4602      	mov	r2, r0
 8009850:	460b      	mov	r3, r1
 8009852:	4613      	mov	r3, r2
 8009854:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8009858:	4b41      	ldr	r3, [pc, #260]	; (8009960 <HAL_RCC_GetSysClockFreq+0x354>)
 800985a:	685b      	ldr	r3, [r3, #4]
 800985c:	0c1b      	lsrs	r3, r3, #16
 800985e:	f003 0303 	and.w	r3, r3, #3
 8009862:	3301      	adds	r3, #1
 8009864:	005b      	lsls	r3, r3, #1
 8009866:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800986a:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800986e:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8009872:	fbb2 f3f3 	udiv	r3, r2, r3
 8009876:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800987a:	e0eb      	b.n	8009a54 <HAL_RCC_GetSysClockFreq+0x448>
 800987c:	4b38      	ldr	r3, [pc, #224]	; (8009960 <HAL_RCC_GetSysClockFreq+0x354>)
 800987e:	685b      	ldr	r3, [r3, #4]
 8009880:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009884:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8009888:	4b35      	ldr	r3, [pc, #212]	; (8009960 <HAL_RCC_GetSysClockFreq+0x354>)
 800988a:	685b      	ldr	r3, [r3, #4]
 800988c:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009890:	2b00      	cmp	r3, #0
 8009892:	d06b      	beq.n	800996c <HAL_RCC_GetSysClockFreq+0x360>
 8009894:	4b32      	ldr	r3, [pc, #200]	; (8009960 <HAL_RCC_GetSysClockFreq+0x354>)
 8009896:	685b      	ldr	r3, [r3, #4]
 8009898:	099b      	lsrs	r3, r3, #6
 800989a:	2200      	movs	r2, #0
 800989c:	66bb      	str	r3, [r7, #104]	; 0x68
 800989e:	66fa      	str	r2, [r7, #108]	; 0x6c
 80098a0:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80098a2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80098a6:	663b      	str	r3, [r7, #96]	; 0x60
 80098a8:	2300      	movs	r3, #0
 80098aa:	667b      	str	r3, [r7, #100]	; 0x64
 80098ac:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	; 0x60
 80098b0:	4622      	mov	r2, r4
 80098b2:	462b      	mov	r3, r5
 80098b4:	f04f 0000 	mov.w	r0, #0
 80098b8:	f04f 0100 	mov.w	r1, #0
 80098bc:	0159      	lsls	r1, r3, #5
 80098be:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80098c2:	0150      	lsls	r0, r2, #5
 80098c4:	4602      	mov	r2, r0
 80098c6:	460b      	mov	r3, r1
 80098c8:	4621      	mov	r1, r4
 80098ca:	1a51      	subs	r1, r2, r1
 80098cc:	61b9      	str	r1, [r7, #24]
 80098ce:	4629      	mov	r1, r5
 80098d0:	eb63 0301 	sbc.w	r3, r3, r1
 80098d4:	61fb      	str	r3, [r7, #28]
 80098d6:	f04f 0200 	mov.w	r2, #0
 80098da:	f04f 0300 	mov.w	r3, #0
 80098de:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 80098e2:	4659      	mov	r1, fp
 80098e4:	018b      	lsls	r3, r1, #6
 80098e6:	4651      	mov	r1, sl
 80098e8:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80098ec:	4651      	mov	r1, sl
 80098ee:	018a      	lsls	r2, r1, #6
 80098f0:	4651      	mov	r1, sl
 80098f2:	ebb2 0801 	subs.w	r8, r2, r1
 80098f6:	4659      	mov	r1, fp
 80098f8:	eb63 0901 	sbc.w	r9, r3, r1
 80098fc:	f04f 0200 	mov.w	r2, #0
 8009900:	f04f 0300 	mov.w	r3, #0
 8009904:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8009908:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800990c:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8009910:	4690      	mov	r8, r2
 8009912:	4699      	mov	r9, r3
 8009914:	4623      	mov	r3, r4
 8009916:	eb18 0303 	adds.w	r3, r8, r3
 800991a:	613b      	str	r3, [r7, #16]
 800991c:	462b      	mov	r3, r5
 800991e:	eb49 0303 	adc.w	r3, r9, r3
 8009922:	617b      	str	r3, [r7, #20]
 8009924:	f04f 0200 	mov.w	r2, #0
 8009928:	f04f 0300 	mov.w	r3, #0
 800992c:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8009930:	4629      	mov	r1, r5
 8009932:	024b      	lsls	r3, r1, #9
 8009934:	4621      	mov	r1, r4
 8009936:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 800993a:	4621      	mov	r1, r4
 800993c:	024a      	lsls	r2, r1, #9
 800993e:	4610      	mov	r0, r2
 8009940:	4619      	mov	r1, r3
 8009942:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8009946:	2200      	movs	r2, #0
 8009948:	65bb      	str	r3, [r7, #88]	; 0x58
 800994a:	65fa      	str	r2, [r7, #92]	; 0x5c
 800994c:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8009950:	f7f7 f99a 	bl	8000c88 <__aeabi_uldivmod>
 8009954:	4602      	mov	r2, r0
 8009956:	460b      	mov	r3, r1
 8009958:	4613      	mov	r3, r2
 800995a:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800995e:	e065      	b.n	8009a2c <HAL_RCC_GetSysClockFreq+0x420>
 8009960:	40023800 	.word	0x40023800
 8009964:	00f42400 	.word	0x00f42400
 8009968:	007a1200 	.word	0x007a1200
 800996c:	4b3d      	ldr	r3, [pc, #244]	; (8009a64 <HAL_RCC_GetSysClockFreq+0x458>)
 800996e:	685b      	ldr	r3, [r3, #4]
 8009970:	099b      	lsrs	r3, r3, #6
 8009972:	2200      	movs	r2, #0
 8009974:	4618      	mov	r0, r3
 8009976:	4611      	mov	r1, r2
 8009978:	f3c0 0308 	ubfx	r3, r0, #0, #9
 800997c:	653b      	str	r3, [r7, #80]	; 0x50
 800997e:	2300      	movs	r3, #0
 8009980:	657b      	str	r3, [r7, #84]	; 0x54
 8009982:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	; 0x50
 8009986:	4642      	mov	r2, r8
 8009988:	464b      	mov	r3, r9
 800998a:	f04f 0000 	mov.w	r0, #0
 800998e:	f04f 0100 	mov.w	r1, #0
 8009992:	0159      	lsls	r1, r3, #5
 8009994:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8009998:	0150      	lsls	r0, r2, #5
 800999a:	4602      	mov	r2, r0
 800999c:	460b      	mov	r3, r1
 800999e:	4641      	mov	r1, r8
 80099a0:	1a51      	subs	r1, r2, r1
 80099a2:	60b9      	str	r1, [r7, #8]
 80099a4:	4649      	mov	r1, r9
 80099a6:	eb63 0301 	sbc.w	r3, r3, r1
 80099aa:	60fb      	str	r3, [r7, #12]
 80099ac:	f04f 0200 	mov.w	r2, #0
 80099b0:	f04f 0300 	mov.w	r3, #0
 80099b4:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 80099b8:	4659      	mov	r1, fp
 80099ba:	018b      	lsls	r3, r1, #6
 80099bc:	4651      	mov	r1, sl
 80099be:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80099c2:	4651      	mov	r1, sl
 80099c4:	018a      	lsls	r2, r1, #6
 80099c6:	4651      	mov	r1, sl
 80099c8:	1a54      	subs	r4, r2, r1
 80099ca:	4659      	mov	r1, fp
 80099cc:	eb63 0501 	sbc.w	r5, r3, r1
 80099d0:	f04f 0200 	mov.w	r2, #0
 80099d4:	f04f 0300 	mov.w	r3, #0
 80099d8:	00eb      	lsls	r3, r5, #3
 80099da:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80099de:	00e2      	lsls	r2, r4, #3
 80099e0:	4614      	mov	r4, r2
 80099e2:	461d      	mov	r5, r3
 80099e4:	4643      	mov	r3, r8
 80099e6:	18e3      	adds	r3, r4, r3
 80099e8:	603b      	str	r3, [r7, #0]
 80099ea:	464b      	mov	r3, r9
 80099ec:	eb45 0303 	adc.w	r3, r5, r3
 80099f0:	607b      	str	r3, [r7, #4]
 80099f2:	f04f 0200 	mov.w	r2, #0
 80099f6:	f04f 0300 	mov.w	r3, #0
 80099fa:	e9d7 4500 	ldrd	r4, r5, [r7]
 80099fe:	4629      	mov	r1, r5
 8009a00:	028b      	lsls	r3, r1, #10
 8009a02:	4621      	mov	r1, r4
 8009a04:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8009a08:	4621      	mov	r1, r4
 8009a0a:	028a      	lsls	r2, r1, #10
 8009a0c:	4610      	mov	r0, r2
 8009a0e:	4619      	mov	r1, r3
 8009a10:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8009a14:	2200      	movs	r2, #0
 8009a16:	64bb      	str	r3, [r7, #72]	; 0x48
 8009a18:	64fa      	str	r2, [r7, #76]	; 0x4c
 8009a1a:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8009a1e:	f7f7 f933 	bl	8000c88 <__aeabi_uldivmod>
 8009a22:	4602      	mov	r2, r0
 8009a24:	460b      	mov	r3, r1
 8009a26:	4613      	mov	r3, r2
 8009a28:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8009a2c:	4b0d      	ldr	r3, [pc, #52]	; (8009a64 <HAL_RCC_GetSysClockFreq+0x458>)
 8009a2e:	685b      	ldr	r3, [r3, #4]
 8009a30:	0f1b      	lsrs	r3, r3, #28
 8009a32:	f003 0307 	and.w	r3, r3, #7
 8009a36:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8009a3a:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8009a3e:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 8009a42:	fbb2 f3f3 	udiv	r3, r2, r3
 8009a46:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8009a4a:	e003      	b.n	8009a54 <HAL_RCC_GetSysClockFreq+0x448>
 8009a4c:	4b06      	ldr	r3, [pc, #24]	; (8009a68 <HAL_RCC_GetSysClockFreq+0x45c>)
 8009a4e:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8009a52:	bf00      	nop
 8009a54:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 8009a58:	4618      	mov	r0, r3
 8009a5a:	37b8      	adds	r7, #184	; 0xb8
 8009a5c:	46bd      	mov	sp, r7
 8009a5e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8009a62:	bf00      	nop
 8009a64:	40023800 	.word	0x40023800
 8009a68:	00f42400 	.word	0x00f42400

08009a6c <HAL_RCC_OscConfig>:
 8009a6c:	b580      	push	{r7, lr}
 8009a6e:	b086      	sub	sp, #24
 8009a70:	af00      	add	r7, sp, #0
 8009a72:	6078      	str	r0, [r7, #4]
 8009a74:	687b      	ldr	r3, [r7, #4]
 8009a76:	2b00      	cmp	r3, #0
 8009a78:	d101      	bne.n	8009a7e <HAL_RCC_OscConfig+0x12>
 8009a7a:	2301      	movs	r3, #1
 8009a7c:	e28d      	b.n	8009f9a <HAL_RCC_OscConfig+0x52e>
 8009a7e:	687b      	ldr	r3, [r7, #4]
 8009a80:	681b      	ldr	r3, [r3, #0]
 8009a82:	f003 0301 	and.w	r3, r3, #1
 8009a86:	2b00      	cmp	r3, #0
 8009a88:	f000 8083 	beq.w	8009b92 <HAL_RCC_OscConfig+0x126>
 8009a8c:	4b94      	ldr	r3, [pc, #592]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009a8e:	689b      	ldr	r3, [r3, #8]
 8009a90:	f003 030c 	and.w	r3, r3, #12
 8009a94:	2b04      	cmp	r3, #4
 8009a96:	d019      	beq.n	8009acc <HAL_RCC_OscConfig+0x60>
 8009a98:	4b91      	ldr	r3, [pc, #580]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009a9a:	689b      	ldr	r3, [r3, #8]
 8009a9c:	f003 030c 	and.w	r3, r3, #12
 8009aa0:	2b08      	cmp	r3, #8
 8009aa2:	d106      	bne.n	8009ab2 <HAL_RCC_OscConfig+0x46>
 8009aa4:	4b8e      	ldr	r3, [pc, #568]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009aa6:	685b      	ldr	r3, [r3, #4]
 8009aa8:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009aac:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8009ab0:	d00c      	beq.n	8009acc <HAL_RCC_OscConfig+0x60>
 8009ab2:	4b8b      	ldr	r3, [pc, #556]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009ab4:	689b      	ldr	r3, [r3, #8]
 8009ab6:	f003 030c 	and.w	r3, r3, #12
 8009aba:	2b0c      	cmp	r3, #12
 8009abc:	d112      	bne.n	8009ae4 <HAL_RCC_OscConfig+0x78>
 8009abe:	4b88      	ldr	r3, [pc, #544]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009ac0:	685b      	ldr	r3, [r3, #4]
 8009ac2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009ac6:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8009aca:	d10b      	bne.n	8009ae4 <HAL_RCC_OscConfig+0x78>
 8009acc:	4b84      	ldr	r3, [pc, #528]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009ace:	681b      	ldr	r3, [r3, #0]
 8009ad0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009ad4:	2b00      	cmp	r3, #0
 8009ad6:	d05b      	beq.n	8009b90 <HAL_RCC_OscConfig+0x124>
 8009ad8:	687b      	ldr	r3, [r7, #4]
 8009ada:	685b      	ldr	r3, [r3, #4]
 8009adc:	2b00      	cmp	r3, #0
 8009ade:	d157      	bne.n	8009b90 <HAL_RCC_OscConfig+0x124>
 8009ae0:	2301      	movs	r3, #1
 8009ae2:	e25a      	b.n	8009f9a <HAL_RCC_OscConfig+0x52e>
 8009ae4:	687b      	ldr	r3, [r7, #4]
 8009ae6:	685b      	ldr	r3, [r3, #4]
 8009ae8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009aec:	d106      	bne.n	8009afc <HAL_RCC_OscConfig+0x90>
 8009aee:	4b7c      	ldr	r3, [pc, #496]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009af0:	681b      	ldr	r3, [r3, #0]
 8009af2:	4a7b      	ldr	r2, [pc, #492]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009af4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009af8:	6013      	str	r3, [r2, #0]
 8009afa:	e01d      	b.n	8009b38 <HAL_RCC_OscConfig+0xcc>
 8009afc:	687b      	ldr	r3, [r7, #4]
 8009afe:	685b      	ldr	r3, [r3, #4]
 8009b00:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8009b04:	d10c      	bne.n	8009b20 <HAL_RCC_OscConfig+0xb4>
 8009b06:	4b76      	ldr	r3, [pc, #472]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009b08:	681b      	ldr	r3, [r3, #0]
 8009b0a:	4a75      	ldr	r2, [pc, #468]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009b0c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8009b10:	6013      	str	r3, [r2, #0]
 8009b12:	4b73      	ldr	r3, [pc, #460]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009b14:	681b      	ldr	r3, [r3, #0]
 8009b16:	4a72      	ldr	r2, [pc, #456]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009b18:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009b1c:	6013      	str	r3, [r2, #0]
 8009b1e:	e00b      	b.n	8009b38 <HAL_RCC_OscConfig+0xcc>
 8009b20:	4b6f      	ldr	r3, [pc, #444]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009b22:	681b      	ldr	r3, [r3, #0]
 8009b24:	4a6e      	ldr	r2, [pc, #440]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009b26:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8009b2a:	6013      	str	r3, [r2, #0]
 8009b2c:	4b6c      	ldr	r3, [pc, #432]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009b2e:	681b      	ldr	r3, [r3, #0]
 8009b30:	4a6b      	ldr	r2, [pc, #428]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009b32:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8009b36:	6013      	str	r3, [r2, #0]
 8009b38:	687b      	ldr	r3, [r7, #4]
 8009b3a:	685b      	ldr	r3, [r3, #4]
 8009b3c:	2b00      	cmp	r3, #0
 8009b3e:	d013      	beq.n	8009b68 <HAL_RCC_OscConfig+0xfc>
 8009b40:	f7fd fd08 	bl	8007554 <HAL_GetTick>
 8009b44:	6138      	str	r0, [r7, #16]
 8009b46:	e008      	b.n	8009b5a <HAL_RCC_OscConfig+0xee>
 8009b48:	f7fd fd04 	bl	8007554 <HAL_GetTick>
 8009b4c:	4602      	mov	r2, r0
 8009b4e:	693b      	ldr	r3, [r7, #16]
 8009b50:	1ad3      	subs	r3, r2, r3
 8009b52:	2b64      	cmp	r3, #100	; 0x64
 8009b54:	d901      	bls.n	8009b5a <HAL_RCC_OscConfig+0xee>
 8009b56:	2303      	movs	r3, #3
 8009b58:	e21f      	b.n	8009f9a <HAL_RCC_OscConfig+0x52e>
 8009b5a:	4b61      	ldr	r3, [pc, #388]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009b5c:	681b      	ldr	r3, [r3, #0]
 8009b5e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009b62:	2b00      	cmp	r3, #0
 8009b64:	d0f0      	beq.n	8009b48 <HAL_RCC_OscConfig+0xdc>
 8009b66:	e014      	b.n	8009b92 <HAL_RCC_OscConfig+0x126>
 8009b68:	f7fd fcf4 	bl	8007554 <HAL_GetTick>
 8009b6c:	6138      	str	r0, [r7, #16]
 8009b6e:	e008      	b.n	8009b82 <HAL_RCC_OscConfig+0x116>
 8009b70:	f7fd fcf0 	bl	8007554 <HAL_GetTick>
 8009b74:	4602      	mov	r2, r0
 8009b76:	693b      	ldr	r3, [r7, #16]
 8009b78:	1ad3      	subs	r3, r2, r3
 8009b7a:	2b64      	cmp	r3, #100	; 0x64
 8009b7c:	d901      	bls.n	8009b82 <HAL_RCC_OscConfig+0x116>
 8009b7e:	2303      	movs	r3, #3
 8009b80:	e20b      	b.n	8009f9a <HAL_RCC_OscConfig+0x52e>
 8009b82:	4b57      	ldr	r3, [pc, #348]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009b84:	681b      	ldr	r3, [r3, #0]
 8009b86:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009b8a:	2b00      	cmp	r3, #0
 8009b8c:	d1f0      	bne.n	8009b70 <HAL_RCC_OscConfig+0x104>
 8009b8e:	e000      	b.n	8009b92 <HAL_RCC_OscConfig+0x126>
 8009b90:	bf00      	nop
 8009b92:	687b      	ldr	r3, [r7, #4]
 8009b94:	681b      	ldr	r3, [r3, #0]
 8009b96:	f003 0302 	and.w	r3, r3, #2
 8009b9a:	2b00      	cmp	r3, #0
 8009b9c:	d06f      	beq.n	8009c7e <HAL_RCC_OscConfig+0x212>
 8009b9e:	4b50      	ldr	r3, [pc, #320]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009ba0:	689b      	ldr	r3, [r3, #8]
 8009ba2:	f003 030c 	and.w	r3, r3, #12
 8009ba6:	2b00      	cmp	r3, #0
 8009ba8:	d017      	beq.n	8009bda <HAL_RCC_OscConfig+0x16e>
 8009baa:	4b4d      	ldr	r3, [pc, #308]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009bac:	689b      	ldr	r3, [r3, #8]
 8009bae:	f003 030c 	and.w	r3, r3, #12
 8009bb2:	2b08      	cmp	r3, #8
 8009bb4:	d105      	bne.n	8009bc2 <HAL_RCC_OscConfig+0x156>
 8009bb6:	4b4a      	ldr	r3, [pc, #296]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009bb8:	685b      	ldr	r3, [r3, #4]
 8009bba:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009bbe:	2b00      	cmp	r3, #0
 8009bc0:	d00b      	beq.n	8009bda <HAL_RCC_OscConfig+0x16e>
 8009bc2:	4b47      	ldr	r3, [pc, #284]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009bc4:	689b      	ldr	r3, [r3, #8]
 8009bc6:	f003 030c 	and.w	r3, r3, #12
 8009bca:	2b0c      	cmp	r3, #12
 8009bcc:	d11c      	bne.n	8009c08 <HAL_RCC_OscConfig+0x19c>
 8009bce:	4b44      	ldr	r3, [pc, #272]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009bd0:	685b      	ldr	r3, [r3, #4]
 8009bd2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009bd6:	2b00      	cmp	r3, #0
 8009bd8:	d116      	bne.n	8009c08 <HAL_RCC_OscConfig+0x19c>
 8009bda:	4b41      	ldr	r3, [pc, #260]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009bdc:	681b      	ldr	r3, [r3, #0]
 8009bde:	f003 0302 	and.w	r3, r3, #2
 8009be2:	2b00      	cmp	r3, #0
 8009be4:	d005      	beq.n	8009bf2 <HAL_RCC_OscConfig+0x186>
 8009be6:	687b      	ldr	r3, [r7, #4]
 8009be8:	68db      	ldr	r3, [r3, #12]
 8009bea:	2b01      	cmp	r3, #1
 8009bec:	d001      	beq.n	8009bf2 <HAL_RCC_OscConfig+0x186>
 8009bee:	2301      	movs	r3, #1
 8009bf0:	e1d3      	b.n	8009f9a <HAL_RCC_OscConfig+0x52e>
 8009bf2:	4b3b      	ldr	r3, [pc, #236]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009bf4:	681b      	ldr	r3, [r3, #0]
 8009bf6:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8009bfa:	687b      	ldr	r3, [r7, #4]
 8009bfc:	691b      	ldr	r3, [r3, #16]
 8009bfe:	00db      	lsls	r3, r3, #3
 8009c00:	4937      	ldr	r1, [pc, #220]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009c02:	4313      	orrs	r3, r2
 8009c04:	600b      	str	r3, [r1, #0]
 8009c06:	e03a      	b.n	8009c7e <HAL_RCC_OscConfig+0x212>
 8009c08:	687b      	ldr	r3, [r7, #4]
 8009c0a:	68db      	ldr	r3, [r3, #12]
 8009c0c:	2b00      	cmp	r3, #0
 8009c0e:	d020      	beq.n	8009c52 <HAL_RCC_OscConfig+0x1e6>
 8009c10:	4b34      	ldr	r3, [pc, #208]	; (8009ce4 <HAL_RCC_OscConfig+0x278>)
 8009c12:	2201      	movs	r2, #1
 8009c14:	601a      	str	r2, [r3, #0]
 8009c16:	f7fd fc9d 	bl	8007554 <HAL_GetTick>
 8009c1a:	6138      	str	r0, [r7, #16]
 8009c1c:	e008      	b.n	8009c30 <HAL_RCC_OscConfig+0x1c4>
 8009c1e:	f7fd fc99 	bl	8007554 <HAL_GetTick>
 8009c22:	4602      	mov	r2, r0
 8009c24:	693b      	ldr	r3, [r7, #16]
 8009c26:	1ad3      	subs	r3, r2, r3
 8009c28:	2b02      	cmp	r3, #2
 8009c2a:	d901      	bls.n	8009c30 <HAL_RCC_OscConfig+0x1c4>
 8009c2c:	2303      	movs	r3, #3
 8009c2e:	e1b4      	b.n	8009f9a <HAL_RCC_OscConfig+0x52e>
 8009c30:	4b2b      	ldr	r3, [pc, #172]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009c32:	681b      	ldr	r3, [r3, #0]
 8009c34:	f003 0302 	and.w	r3, r3, #2
 8009c38:	2b00      	cmp	r3, #0
 8009c3a:	d0f0      	beq.n	8009c1e <HAL_RCC_OscConfig+0x1b2>
 8009c3c:	4b28      	ldr	r3, [pc, #160]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009c3e:	681b      	ldr	r3, [r3, #0]
 8009c40:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8009c44:	687b      	ldr	r3, [r7, #4]
 8009c46:	691b      	ldr	r3, [r3, #16]
 8009c48:	00db      	lsls	r3, r3, #3
 8009c4a:	4925      	ldr	r1, [pc, #148]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009c4c:	4313      	orrs	r3, r2
 8009c4e:	600b      	str	r3, [r1, #0]
 8009c50:	e015      	b.n	8009c7e <HAL_RCC_OscConfig+0x212>
 8009c52:	4b24      	ldr	r3, [pc, #144]	; (8009ce4 <HAL_RCC_OscConfig+0x278>)
 8009c54:	2200      	movs	r2, #0
 8009c56:	601a      	str	r2, [r3, #0]
 8009c58:	f7fd fc7c 	bl	8007554 <HAL_GetTick>
 8009c5c:	6138      	str	r0, [r7, #16]
 8009c5e:	e008      	b.n	8009c72 <HAL_RCC_OscConfig+0x206>
 8009c60:	f7fd fc78 	bl	8007554 <HAL_GetTick>
 8009c64:	4602      	mov	r2, r0
 8009c66:	693b      	ldr	r3, [r7, #16]
 8009c68:	1ad3      	subs	r3, r2, r3
 8009c6a:	2b02      	cmp	r3, #2
 8009c6c:	d901      	bls.n	8009c72 <HAL_RCC_OscConfig+0x206>
 8009c6e:	2303      	movs	r3, #3
 8009c70:	e193      	b.n	8009f9a <HAL_RCC_OscConfig+0x52e>
 8009c72:	4b1b      	ldr	r3, [pc, #108]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009c74:	681b      	ldr	r3, [r3, #0]
 8009c76:	f003 0302 	and.w	r3, r3, #2
 8009c7a:	2b00      	cmp	r3, #0
 8009c7c:	d1f0      	bne.n	8009c60 <HAL_RCC_OscConfig+0x1f4>
 8009c7e:	687b      	ldr	r3, [r7, #4]
 8009c80:	681b      	ldr	r3, [r3, #0]
 8009c82:	f003 0308 	and.w	r3, r3, #8
 8009c86:	2b00      	cmp	r3, #0
 8009c88:	d036      	beq.n	8009cf8 <HAL_RCC_OscConfig+0x28c>
 8009c8a:	687b      	ldr	r3, [r7, #4]
 8009c8c:	695b      	ldr	r3, [r3, #20]
 8009c8e:	2b00      	cmp	r3, #0
 8009c90:	d016      	beq.n	8009cc0 <HAL_RCC_OscConfig+0x254>
 8009c92:	4b15      	ldr	r3, [pc, #84]	; (8009ce8 <HAL_RCC_OscConfig+0x27c>)
 8009c94:	2201      	movs	r2, #1
 8009c96:	601a      	str	r2, [r3, #0]
 8009c98:	f7fd fc5c 	bl	8007554 <HAL_GetTick>
 8009c9c:	6138      	str	r0, [r7, #16]
 8009c9e:	e008      	b.n	8009cb2 <HAL_RCC_OscConfig+0x246>
 8009ca0:	f7fd fc58 	bl	8007554 <HAL_GetTick>
 8009ca4:	4602      	mov	r2, r0
 8009ca6:	693b      	ldr	r3, [r7, #16]
 8009ca8:	1ad3      	subs	r3, r2, r3
 8009caa:	2b02      	cmp	r3, #2
 8009cac:	d901      	bls.n	8009cb2 <HAL_RCC_OscConfig+0x246>
 8009cae:	2303      	movs	r3, #3
 8009cb0:	e173      	b.n	8009f9a <HAL_RCC_OscConfig+0x52e>
 8009cb2:	4b0b      	ldr	r3, [pc, #44]	; (8009ce0 <HAL_RCC_OscConfig+0x274>)
 8009cb4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009cb6:	f003 0302 	and.w	r3, r3, #2
 8009cba:	2b00      	cmp	r3, #0
 8009cbc:	d0f0      	beq.n	8009ca0 <HAL_RCC_OscConfig+0x234>
 8009cbe:	e01b      	b.n	8009cf8 <HAL_RCC_OscConfig+0x28c>
 8009cc0:	4b09      	ldr	r3, [pc, #36]	; (8009ce8 <HAL_RCC_OscConfig+0x27c>)
 8009cc2:	2200      	movs	r2, #0
 8009cc4:	601a      	str	r2, [r3, #0]
 8009cc6:	f7fd fc45 	bl	8007554 <HAL_GetTick>
 8009cca:	6138      	str	r0, [r7, #16]
 8009ccc:	e00e      	b.n	8009cec <HAL_RCC_OscConfig+0x280>
 8009cce:	f7fd fc41 	bl	8007554 <HAL_GetTick>
 8009cd2:	4602      	mov	r2, r0
 8009cd4:	693b      	ldr	r3, [r7, #16]
 8009cd6:	1ad3      	subs	r3, r2, r3
 8009cd8:	2b02      	cmp	r3, #2
 8009cda:	d907      	bls.n	8009cec <HAL_RCC_OscConfig+0x280>
 8009cdc:	2303      	movs	r3, #3
 8009cde:	e15c      	b.n	8009f9a <HAL_RCC_OscConfig+0x52e>
 8009ce0:	40023800 	.word	0x40023800
 8009ce4:	42470000 	.word	0x42470000
 8009ce8:	42470e80 	.word	0x42470e80
 8009cec:	4b8a      	ldr	r3, [pc, #552]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009cee:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009cf0:	f003 0302 	and.w	r3, r3, #2
 8009cf4:	2b00      	cmp	r3, #0
 8009cf6:	d1ea      	bne.n	8009cce <HAL_RCC_OscConfig+0x262>
 8009cf8:	687b      	ldr	r3, [r7, #4]
 8009cfa:	681b      	ldr	r3, [r3, #0]
 8009cfc:	f003 0304 	and.w	r3, r3, #4
 8009d00:	2b00      	cmp	r3, #0
 8009d02:	f000 8097 	beq.w	8009e34 <HAL_RCC_OscConfig+0x3c8>
 8009d06:	2300      	movs	r3, #0
 8009d08:	75fb      	strb	r3, [r7, #23]
 8009d0a:	4b83      	ldr	r3, [pc, #524]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009d0c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009d0e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009d12:	2b00      	cmp	r3, #0
 8009d14:	d10f      	bne.n	8009d36 <HAL_RCC_OscConfig+0x2ca>
 8009d16:	2300      	movs	r3, #0
 8009d18:	60bb      	str	r3, [r7, #8]
 8009d1a:	4b7f      	ldr	r3, [pc, #508]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009d1c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009d1e:	4a7e      	ldr	r2, [pc, #504]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009d20:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8009d24:	6413      	str	r3, [r2, #64]	; 0x40
 8009d26:	4b7c      	ldr	r3, [pc, #496]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009d28:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009d2a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009d2e:	60bb      	str	r3, [r7, #8]
 8009d30:	68bb      	ldr	r3, [r7, #8]
 8009d32:	2301      	movs	r3, #1
 8009d34:	75fb      	strb	r3, [r7, #23]
 8009d36:	4b79      	ldr	r3, [pc, #484]	; (8009f1c <HAL_RCC_OscConfig+0x4b0>)
 8009d38:	681b      	ldr	r3, [r3, #0]
 8009d3a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009d3e:	2b00      	cmp	r3, #0
 8009d40:	d118      	bne.n	8009d74 <HAL_RCC_OscConfig+0x308>
 8009d42:	4b76      	ldr	r3, [pc, #472]	; (8009f1c <HAL_RCC_OscConfig+0x4b0>)
 8009d44:	681b      	ldr	r3, [r3, #0]
 8009d46:	4a75      	ldr	r2, [pc, #468]	; (8009f1c <HAL_RCC_OscConfig+0x4b0>)
 8009d48:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009d4c:	6013      	str	r3, [r2, #0]
 8009d4e:	f7fd fc01 	bl	8007554 <HAL_GetTick>
 8009d52:	6138      	str	r0, [r7, #16]
 8009d54:	e008      	b.n	8009d68 <HAL_RCC_OscConfig+0x2fc>
 8009d56:	f7fd fbfd 	bl	8007554 <HAL_GetTick>
 8009d5a:	4602      	mov	r2, r0
 8009d5c:	693b      	ldr	r3, [r7, #16]
 8009d5e:	1ad3      	subs	r3, r2, r3
 8009d60:	2b02      	cmp	r3, #2
 8009d62:	d901      	bls.n	8009d68 <HAL_RCC_OscConfig+0x2fc>
 8009d64:	2303      	movs	r3, #3
 8009d66:	e118      	b.n	8009f9a <HAL_RCC_OscConfig+0x52e>
 8009d68:	4b6c      	ldr	r3, [pc, #432]	; (8009f1c <HAL_RCC_OscConfig+0x4b0>)
 8009d6a:	681b      	ldr	r3, [r3, #0]
 8009d6c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009d70:	2b00      	cmp	r3, #0
 8009d72:	d0f0      	beq.n	8009d56 <HAL_RCC_OscConfig+0x2ea>
 8009d74:	687b      	ldr	r3, [r7, #4]
 8009d76:	689b      	ldr	r3, [r3, #8]
 8009d78:	2b01      	cmp	r3, #1
 8009d7a:	d106      	bne.n	8009d8a <HAL_RCC_OscConfig+0x31e>
 8009d7c:	4b66      	ldr	r3, [pc, #408]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009d7e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009d80:	4a65      	ldr	r2, [pc, #404]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009d82:	f043 0301 	orr.w	r3, r3, #1
 8009d86:	6713      	str	r3, [r2, #112]	; 0x70
 8009d88:	e01c      	b.n	8009dc4 <HAL_RCC_OscConfig+0x358>
 8009d8a:	687b      	ldr	r3, [r7, #4]
 8009d8c:	689b      	ldr	r3, [r3, #8]
 8009d8e:	2b05      	cmp	r3, #5
 8009d90:	d10c      	bne.n	8009dac <HAL_RCC_OscConfig+0x340>
 8009d92:	4b61      	ldr	r3, [pc, #388]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009d94:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009d96:	4a60      	ldr	r2, [pc, #384]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009d98:	f043 0304 	orr.w	r3, r3, #4
 8009d9c:	6713      	str	r3, [r2, #112]	; 0x70
 8009d9e:	4b5e      	ldr	r3, [pc, #376]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009da0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009da2:	4a5d      	ldr	r2, [pc, #372]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009da4:	f043 0301 	orr.w	r3, r3, #1
 8009da8:	6713      	str	r3, [r2, #112]	; 0x70
 8009daa:	e00b      	b.n	8009dc4 <HAL_RCC_OscConfig+0x358>
 8009dac:	4b5a      	ldr	r3, [pc, #360]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009dae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009db0:	4a59      	ldr	r2, [pc, #356]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009db2:	f023 0301 	bic.w	r3, r3, #1
 8009db6:	6713      	str	r3, [r2, #112]	; 0x70
 8009db8:	4b57      	ldr	r3, [pc, #348]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009dba:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009dbc:	4a56      	ldr	r2, [pc, #344]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009dbe:	f023 0304 	bic.w	r3, r3, #4
 8009dc2:	6713      	str	r3, [r2, #112]	; 0x70
 8009dc4:	687b      	ldr	r3, [r7, #4]
 8009dc6:	689b      	ldr	r3, [r3, #8]
 8009dc8:	2b00      	cmp	r3, #0
 8009dca:	d015      	beq.n	8009df8 <HAL_RCC_OscConfig+0x38c>
 8009dcc:	f7fd fbc2 	bl	8007554 <HAL_GetTick>
 8009dd0:	6138      	str	r0, [r7, #16]
 8009dd2:	e00a      	b.n	8009dea <HAL_RCC_OscConfig+0x37e>
 8009dd4:	f7fd fbbe 	bl	8007554 <HAL_GetTick>
 8009dd8:	4602      	mov	r2, r0
 8009dda:	693b      	ldr	r3, [r7, #16]
 8009ddc:	1ad3      	subs	r3, r2, r3
 8009dde:	f241 3288 	movw	r2, #5000	; 0x1388
 8009de2:	4293      	cmp	r3, r2
 8009de4:	d901      	bls.n	8009dea <HAL_RCC_OscConfig+0x37e>
 8009de6:	2303      	movs	r3, #3
 8009de8:	e0d7      	b.n	8009f9a <HAL_RCC_OscConfig+0x52e>
 8009dea:	4b4b      	ldr	r3, [pc, #300]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009dec:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009dee:	f003 0302 	and.w	r3, r3, #2
 8009df2:	2b00      	cmp	r3, #0
 8009df4:	d0ee      	beq.n	8009dd4 <HAL_RCC_OscConfig+0x368>
 8009df6:	e014      	b.n	8009e22 <HAL_RCC_OscConfig+0x3b6>
 8009df8:	f7fd fbac 	bl	8007554 <HAL_GetTick>
 8009dfc:	6138      	str	r0, [r7, #16]
 8009dfe:	e00a      	b.n	8009e16 <HAL_RCC_OscConfig+0x3aa>
 8009e00:	f7fd fba8 	bl	8007554 <HAL_GetTick>
 8009e04:	4602      	mov	r2, r0
 8009e06:	693b      	ldr	r3, [r7, #16]
 8009e08:	1ad3      	subs	r3, r2, r3
 8009e0a:	f241 3288 	movw	r2, #5000	; 0x1388
 8009e0e:	4293      	cmp	r3, r2
 8009e10:	d901      	bls.n	8009e16 <HAL_RCC_OscConfig+0x3aa>
 8009e12:	2303      	movs	r3, #3
 8009e14:	e0c1      	b.n	8009f9a <HAL_RCC_OscConfig+0x52e>
 8009e16:	4b40      	ldr	r3, [pc, #256]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009e18:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009e1a:	f003 0302 	and.w	r3, r3, #2
 8009e1e:	2b00      	cmp	r3, #0
 8009e20:	d1ee      	bne.n	8009e00 <HAL_RCC_OscConfig+0x394>
 8009e22:	7dfb      	ldrb	r3, [r7, #23]
 8009e24:	2b01      	cmp	r3, #1
 8009e26:	d105      	bne.n	8009e34 <HAL_RCC_OscConfig+0x3c8>
 8009e28:	4b3b      	ldr	r3, [pc, #236]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009e2a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009e2c:	4a3a      	ldr	r2, [pc, #232]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009e2e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8009e32:	6413      	str	r3, [r2, #64]	; 0x40
 8009e34:	687b      	ldr	r3, [r7, #4]
 8009e36:	699b      	ldr	r3, [r3, #24]
 8009e38:	2b00      	cmp	r3, #0
 8009e3a:	f000 80ad 	beq.w	8009f98 <HAL_RCC_OscConfig+0x52c>
 8009e3e:	4b36      	ldr	r3, [pc, #216]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009e40:	689b      	ldr	r3, [r3, #8]
 8009e42:	f003 030c 	and.w	r3, r3, #12
 8009e46:	2b08      	cmp	r3, #8
 8009e48:	d060      	beq.n	8009f0c <HAL_RCC_OscConfig+0x4a0>
 8009e4a:	687b      	ldr	r3, [r7, #4]
 8009e4c:	699b      	ldr	r3, [r3, #24]
 8009e4e:	2b02      	cmp	r3, #2
 8009e50:	d145      	bne.n	8009ede <HAL_RCC_OscConfig+0x472>
 8009e52:	4b33      	ldr	r3, [pc, #204]	; (8009f20 <HAL_RCC_OscConfig+0x4b4>)
 8009e54:	2200      	movs	r2, #0
 8009e56:	601a      	str	r2, [r3, #0]
 8009e58:	f7fd fb7c 	bl	8007554 <HAL_GetTick>
 8009e5c:	6138      	str	r0, [r7, #16]
 8009e5e:	e008      	b.n	8009e72 <HAL_RCC_OscConfig+0x406>
 8009e60:	f7fd fb78 	bl	8007554 <HAL_GetTick>
 8009e64:	4602      	mov	r2, r0
 8009e66:	693b      	ldr	r3, [r7, #16]
 8009e68:	1ad3      	subs	r3, r2, r3
 8009e6a:	2b02      	cmp	r3, #2
 8009e6c:	d901      	bls.n	8009e72 <HAL_RCC_OscConfig+0x406>
 8009e6e:	2303      	movs	r3, #3
 8009e70:	e093      	b.n	8009f9a <HAL_RCC_OscConfig+0x52e>
 8009e72:	4b29      	ldr	r3, [pc, #164]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009e74:	681b      	ldr	r3, [r3, #0]
 8009e76:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009e7a:	2b00      	cmp	r3, #0
 8009e7c:	d1f0      	bne.n	8009e60 <HAL_RCC_OscConfig+0x3f4>
 8009e7e:	687b      	ldr	r3, [r7, #4]
 8009e80:	69da      	ldr	r2, [r3, #28]
 8009e82:	687b      	ldr	r3, [r7, #4]
 8009e84:	6a1b      	ldr	r3, [r3, #32]
 8009e86:	431a      	orrs	r2, r3
 8009e88:	687b      	ldr	r3, [r7, #4]
 8009e8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009e8c:	019b      	lsls	r3, r3, #6
 8009e8e:	431a      	orrs	r2, r3
 8009e90:	687b      	ldr	r3, [r7, #4]
 8009e92:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009e94:	085b      	lsrs	r3, r3, #1
 8009e96:	3b01      	subs	r3, #1
 8009e98:	041b      	lsls	r3, r3, #16
 8009e9a:	431a      	orrs	r2, r3
 8009e9c:	687b      	ldr	r3, [r7, #4]
 8009e9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009ea0:	061b      	lsls	r3, r3, #24
 8009ea2:	431a      	orrs	r2, r3
 8009ea4:	687b      	ldr	r3, [r7, #4]
 8009ea6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009ea8:	071b      	lsls	r3, r3, #28
 8009eaa:	491b      	ldr	r1, [pc, #108]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009eac:	4313      	orrs	r3, r2
 8009eae:	604b      	str	r3, [r1, #4]
 8009eb0:	4b1b      	ldr	r3, [pc, #108]	; (8009f20 <HAL_RCC_OscConfig+0x4b4>)
 8009eb2:	2201      	movs	r2, #1
 8009eb4:	601a      	str	r2, [r3, #0]
 8009eb6:	f7fd fb4d 	bl	8007554 <HAL_GetTick>
 8009eba:	6138      	str	r0, [r7, #16]
 8009ebc:	e008      	b.n	8009ed0 <HAL_RCC_OscConfig+0x464>
 8009ebe:	f7fd fb49 	bl	8007554 <HAL_GetTick>
 8009ec2:	4602      	mov	r2, r0
 8009ec4:	693b      	ldr	r3, [r7, #16]
 8009ec6:	1ad3      	subs	r3, r2, r3
 8009ec8:	2b02      	cmp	r3, #2
 8009eca:	d901      	bls.n	8009ed0 <HAL_RCC_OscConfig+0x464>
 8009ecc:	2303      	movs	r3, #3
 8009ece:	e064      	b.n	8009f9a <HAL_RCC_OscConfig+0x52e>
 8009ed0:	4b11      	ldr	r3, [pc, #68]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009ed2:	681b      	ldr	r3, [r3, #0]
 8009ed4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009ed8:	2b00      	cmp	r3, #0
 8009eda:	d0f0      	beq.n	8009ebe <HAL_RCC_OscConfig+0x452>
 8009edc:	e05c      	b.n	8009f98 <HAL_RCC_OscConfig+0x52c>
 8009ede:	4b10      	ldr	r3, [pc, #64]	; (8009f20 <HAL_RCC_OscConfig+0x4b4>)
 8009ee0:	2200      	movs	r2, #0
 8009ee2:	601a      	str	r2, [r3, #0]
 8009ee4:	f7fd fb36 	bl	8007554 <HAL_GetTick>
 8009ee8:	6138      	str	r0, [r7, #16]
 8009eea:	e008      	b.n	8009efe <HAL_RCC_OscConfig+0x492>
 8009eec:	f7fd fb32 	bl	8007554 <HAL_GetTick>
 8009ef0:	4602      	mov	r2, r0
 8009ef2:	693b      	ldr	r3, [r7, #16]
 8009ef4:	1ad3      	subs	r3, r2, r3
 8009ef6:	2b02      	cmp	r3, #2
 8009ef8:	d901      	bls.n	8009efe <HAL_RCC_OscConfig+0x492>
 8009efa:	2303      	movs	r3, #3
 8009efc:	e04d      	b.n	8009f9a <HAL_RCC_OscConfig+0x52e>
 8009efe:	4b06      	ldr	r3, [pc, #24]	; (8009f18 <HAL_RCC_OscConfig+0x4ac>)
 8009f00:	681b      	ldr	r3, [r3, #0]
 8009f02:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009f06:	2b00      	cmp	r3, #0
 8009f08:	d1f0      	bne.n	8009eec <HAL_RCC_OscConfig+0x480>
 8009f0a:	e045      	b.n	8009f98 <HAL_RCC_OscConfig+0x52c>
 8009f0c:	687b      	ldr	r3, [r7, #4]
 8009f0e:	699b      	ldr	r3, [r3, #24]
 8009f10:	2b01      	cmp	r3, #1
 8009f12:	d107      	bne.n	8009f24 <HAL_RCC_OscConfig+0x4b8>
 8009f14:	2301      	movs	r3, #1
 8009f16:	e040      	b.n	8009f9a <HAL_RCC_OscConfig+0x52e>
 8009f18:	40023800 	.word	0x40023800
 8009f1c:	40007000 	.word	0x40007000
 8009f20:	42470060 	.word	0x42470060
 8009f24:	4b1f      	ldr	r3, [pc, #124]	; (8009fa4 <HAL_RCC_OscConfig+0x538>)
 8009f26:	685b      	ldr	r3, [r3, #4]
 8009f28:	60fb      	str	r3, [r7, #12]
 8009f2a:	687b      	ldr	r3, [r7, #4]
 8009f2c:	699b      	ldr	r3, [r3, #24]
 8009f2e:	2b01      	cmp	r3, #1
 8009f30:	d030      	beq.n	8009f94 <HAL_RCC_OscConfig+0x528>
 8009f32:	68fb      	ldr	r3, [r7, #12]
 8009f34:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8009f38:	687b      	ldr	r3, [r7, #4]
 8009f3a:	69db      	ldr	r3, [r3, #28]
 8009f3c:	429a      	cmp	r2, r3
 8009f3e:	d129      	bne.n	8009f94 <HAL_RCC_OscConfig+0x528>
 8009f40:	68fb      	ldr	r3, [r7, #12]
 8009f42:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8009f46:	687b      	ldr	r3, [r7, #4]
 8009f48:	6a1b      	ldr	r3, [r3, #32]
 8009f4a:	429a      	cmp	r2, r3
 8009f4c:	d122      	bne.n	8009f94 <HAL_RCC_OscConfig+0x528>
 8009f4e:	68fa      	ldr	r2, [r7, #12]
 8009f50:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8009f54:	4013      	ands	r3, r2
 8009f56:	687a      	ldr	r2, [r7, #4]
 8009f58:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8009f5a:	0192      	lsls	r2, r2, #6
 8009f5c:	4293      	cmp	r3, r2
 8009f5e:	d119      	bne.n	8009f94 <HAL_RCC_OscConfig+0x528>
 8009f60:	68fb      	ldr	r3, [r7, #12]
 8009f62:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8009f66:	687b      	ldr	r3, [r7, #4]
 8009f68:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009f6a:	085b      	lsrs	r3, r3, #1
 8009f6c:	3b01      	subs	r3, #1
 8009f6e:	041b      	lsls	r3, r3, #16
 8009f70:	429a      	cmp	r2, r3
 8009f72:	d10f      	bne.n	8009f94 <HAL_RCC_OscConfig+0x528>
 8009f74:	68fb      	ldr	r3, [r7, #12]
 8009f76:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8009f7a:	687b      	ldr	r3, [r7, #4]
 8009f7c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009f7e:	061b      	lsls	r3, r3, #24
 8009f80:	429a      	cmp	r2, r3
 8009f82:	d107      	bne.n	8009f94 <HAL_RCC_OscConfig+0x528>
 8009f84:	68fb      	ldr	r3, [r7, #12]
 8009f86:	f003 42e0 	and.w	r2, r3, #1879048192	; 0x70000000
 8009f8a:	687b      	ldr	r3, [r7, #4]
 8009f8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009f8e:	071b      	lsls	r3, r3, #28
 8009f90:	429a      	cmp	r2, r3
 8009f92:	d001      	beq.n	8009f98 <HAL_RCC_OscConfig+0x52c>
 8009f94:	2301      	movs	r3, #1
 8009f96:	e000      	b.n	8009f9a <HAL_RCC_OscConfig+0x52e>
 8009f98:	2300      	movs	r3, #0
 8009f9a:	4618      	mov	r0, r3
 8009f9c:	3718      	adds	r7, #24
 8009f9e:	46bd      	mov	sp, r7
 8009fa0:	bd80      	pop	{r7, pc}
 8009fa2:	bf00      	nop
 8009fa4:	40023800 	.word	0x40023800

08009fa8 <HAL_TIM_Base_Init>:
 8009fa8:	b580      	push	{r7, lr}
 8009faa:	b082      	sub	sp, #8
 8009fac:	af00      	add	r7, sp, #0
 8009fae:	6078      	str	r0, [r7, #4]
 8009fb0:	687b      	ldr	r3, [r7, #4]
 8009fb2:	2b00      	cmp	r3, #0
 8009fb4:	d101      	bne.n	8009fba <HAL_TIM_Base_Init+0x12>
 8009fb6:	2301      	movs	r3, #1
 8009fb8:	e041      	b.n	800a03e <HAL_TIM_Base_Init+0x96>
 8009fba:	687b      	ldr	r3, [r7, #4]
 8009fbc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8009fc0:	b2db      	uxtb	r3, r3
 8009fc2:	2b00      	cmp	r3, #0
 8009fc4:	d106      	bne.n	8009fd4 <HAL_TIM_Base_Init+0x2c>
 8009fc6:	687b      	ldr	r3, [r7, #4]
 8009fc8:	2200      	movs	r2, #0
 8009fca:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009fce:	6878      	ldr	r0, [r7, #4]
 8009fd0:	f7fc fe08 	bl	8006be4 <HAL_TIM_Base_MspInit>
 8009fd4:	687b      	ldr	r3, [r7, #4]
 8009fd6:	2202      	movs	r2, #2
 8009fd8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009fdc:	687b      	ldr	r3, [r7, #4]
 8009fde:	681a      	ldr	r2, [r3, #0]
 8009fe0:	687b      	ldr	r3, [r7, #4]
 8009fe2:	3304      	adds	r3, #4
 8009fe4:	4619      	mov	r1, r3
 8009fe6:	4610      	mov	r0, r2
 8009fe8:	f001 f944 	bl	800b274 <TIM_Base_SetConfig>
 8009fec:	687b      	ldr	r3, [r7, #4]
 8009fee:	2201      	movs	r2, #1
 8009ff0:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8009ff4:	687b      	ldr	r3, [r7, #4]
 8009ff6:	2201      	movs	r2, #1
 8009ff8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009ffc:	687b      	ldr	r3, [r7, #4]
 8009ffe:	2201      	movs	r2, #1
 800a000:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a004:	687b      	ldr	r3, [r7, #4]
 800a006:	2201      	movs	r2, #1
 800a008:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a00c:	687b      	ldr	r3, [r7, #4]
 800a00e:	2201      	movs	r2, #1
 800a010:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a014:	687b      	ldr	r3, [r7, #4]
 800a016:	2201      	movs	r2, #1
 800a018:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a01c:	687b      	ldr	r3, [r7, #4]
 800a01e:	2201      	movs	r2, #1
 800a020:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a024:	687b      	ldr	r3, [r7, #4]
 800a026:	2201      	movs	r2, #1
 800a028:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a02c:	687b      	ldr	r3, [r7, #4]
 800a02e:	2201      	movs	r2, #1
 800a030:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a034:	687b      	ldr	r3, [r7, #4]
 800a036:	2201      	movs	r2, #1
 800a038:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a03c:	2300      	movs	r3, #0
 800a03e:	4618      	mov	r0, r3
 800a040:	3708      	adds	r7, #8
 800a042:	46bd      	mov	sp, r7
 800a044:	bd80      	pop	{r7, pc}
	...

0800a048 <HAL_TIM_Base_Start>:
 800a048:	b480      	push	{r7}
 800a04a:	b085      	sub	sp, #20
 800a04c:	af00      	add	r7, sp, #0
 800a04e:	6078      	str	r0, [r7, #4]
 800a050:	687b      	ldr	r3, [r7, #4]
 800a052:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a056:	b2db      	uxtb	r3, r3
 800a058:	2b01      	cmp	r3, #1
 800a05a:	d001      	beq.n	800a060 <HAL_TIM_Base_Start+0x18>
 800a05c:	2301      	movs	r3, #1
 800a05e:	e046      	b.n	800a0ee <HAL_TIM_Base_Start+0xa6>
 800a060:	687b      	ldr	r3, [r7, #4]
 800a062:	2202      	movs	r2, #2
 800a064:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a068:	687b      	ldr	r3, [r7, #4]
 800a06a:	681b      	ldr	r3, [r3, #0]
 800a06c:	4a23      	ldr	r2, [pc, #140]	; (800a0fc <HAL_TIM_Base_Start+0xb4>)
 800a06e:	4293      	cmp	r3, r2
 800a070:	d022      	beq.n	800a0b8 <HAL_TIM_Base_Start+0x70>
 800a072:	687b      	ldr	r3, [r7, #4]
 800a074:	681b      	ldr	r3, [r3, #0]
 800a076:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a07a:	d01d      	beq.n	800a0b8 <HAL_TIM_Base_Start+0x70>
 800a07c:	687b      	ldr	r3, [r7, #4]
 800a07e:	681b      	ldr	r3, [r3, #0]
 800a080:	4a1f      	ldr	r2, [pc, #124]	; (800a100 <HAL_TIM_Base_Start+0xb8>)
 800a082:	4293      	cmp	r3, r2
 800a084:	d018      	beq.n	800a0b8 <HAL_TIM_Base_Start+0x70>
 800a086:	687b      	ldr	r3, [r7, #4]
 800a088:	681b      	ldr	r3, [r3, #0]
 800a08a:	4a1e      	ldr	r2, [pc, #120]	; (800a104 <HAL_TIM_Base_Start+0xbc>)
 800a08c:	4293      	cmp	r3, r2
 800a08e:	d013      	beq.n	800a0b8 <HAL_TIM_Base_Start+0x70>
 800a090:	687b      	ldr	r3, [r7, #4]
 800a092:	681b      	ldr	r3, [r3, #0]
 800a094:	4a1c      	ldr	r2, [pc, #112]	; (800a108 <HAL_TIM_Base_Start+0xc0>)
 800a096:	4293      	cmp	r3, r2
 800a098:	d00e      	beq.n	800a0b8 <HAL_TIM_Base_Start+0x70>
 800a09a:	687b      	ldr	r3, [r7, #4]
 800a09c:	681b      	ldr	r3, [r3, #0]
 800a09e:	4a1b      	ldr	r2, [pc, #108]	; (800a10c <HAL_TIM_Base_Start+0xc4>)
 800a0a0:	4293      	cmp	r3, r2
 800a0a2:	d009      	beq.n	800a0b8 <HAL_TIM_Base_Start+0x70>
 800a0a4:	687b      	ldr	r3, [r7, #4]
 800a0a6:	681b      	ldr	r3, [r3, #0]
 800a0a8:	4a19      	ldr	r2, [pc, #100]	; (800a110 <HAL_TIM_Base_Start+0xc8>)
 800a0aa:	4293      	cmp	r3, r2
 800a0ac:	d004      	beq.n	800a0b8 <HAL_TIM_Base_Start+0x70>
 800a0ae:	687b      	ldr	r3, [r7, #4]
 800a0b0:	681b      	ldr	r3, [r3, #0]
 800a0b2:	4a18      	ldr	r2, [pc, #96]	; (800a114 <HAL_TIM_Base_Start+0xcc>)
 800a0b4:	4293      	cmp	r3, r2
 800a0b6:	d111      	bne.n	800a0dc <HAL_TIM_Base_Start+0x94>
 800a0b8:	687b      	ldr	r3, [r7, #4]
 800a0ba:	681b      	ldr	r3, [r3, #0]
 800a0bc:	689b      	ldr	r3, [r3, #8]
 800a0be:	f003 0307 	and.w	r3, r3, #7
 800a0c2:	60fb      	str	r3, [r7, #12]
 800a0c4:	68fb      	ldr	r3, [r7, #12]
 800a0c6:	2b06      	cmp	r3, #6
 800a0c8:	d010      	beq.n	800a0ec <HAL_TIM_Base_Start+0xa4>
 800a0ca:	687b      	ldr	r3, [r7, #4]
 800a0cc:	681b      	ldr	r3, [r3, #0]
 800a0ce:	681a      	ldr	r2, [r3, #0]
 800a0d0:	687b      	ldr	r3, [r7, #4]
 800a0d2:	681b      	ldr	r3, [r3, #0]
 800a0d4:	f042 0201 	orr.w	r2, r2, #1
 800a0d8:	601a      	str	r2, [r3, #0]
 800a0da:	e007      	b.n	800a0ec <HAL_TIM_Base_Start+0xa4>
 800a0dc:	687b      	ldr	r3, [r7, #4]
 800a0de:	681b      	ldr	r3, [r3, #0]
 800a0e0:	681a      	ldr	r2, [r3, #0]
 800a0e2:	687b      	ldr	r3, [r7, #4]
 800a0e4:	681b      	ldr	r3, [r3, #0]
 800a0e6:	f042 0201 	orr.w	r2, r2, #1
 800a0ea:	601a      	str	r2, [r3, #0]
 800a0ec:	2300      	movs	r3, #0
 800a0ee:	4618      	mov	r0, r3
 800a0f0:	3714      	adds	r7, #20
 800a0f2:	46bd      	mov	sp, r7
 800a0f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0f8:	4770      	bx	lr
 800a0fa:	bf00      	nop
 800a0fc:	40010000 	.word	0x40010000
 800a100:	40000400 	.word	0x40000400
 800a104:	40000800 	.word	0x40000800
 800a108:	40000c00 	.word	0x40000c00
 800a10c:	40010400 	.word	0x40010400
 800a110:	40014000 	.word	0x40014000
 800a114:	40001800 	.word	0x40001800

0800a118 <HAL_TIM_PWM_Init>:
 800a118:	b580      	push	{r7, lr}
 800a11a:	b082      	sub	sp, #8
 800a11c:	af00      	add	r7, sp, #0
 800a11e:	6078      	str	r0, [r7, #4]
 800a120:	687b      	ldr	r3, [r7, #4]
 800a122:	2b00      	cmp	r3, #0
 800a124:	d101      	bne.n	800a12a <HAL_TIM_PWM_Init+0x12>
 800a126:	2301      	movs	r3, #1
 800a128:	e041      	b.n	800a1ae <HAL_TIM_PWM_Init+0x96>
 800a12a:	687b      	ldr	r3, [r7, #4]
 800a12c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a130:	b2db      	uxtb	r3, r3
 800a132:	2b00      	cmp	r3, #0
 800a134:	d106      	bne.n	800a144 <HAL_TIM_PWM_Init+0x2c>
 800a136:	687b      	ldr	r3, [r7, #4]
 800a138:	2200      	movs	r2, #0
 800a13a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a13e:	6878      	ldr	r0, [r7, #4]
 800a140:	f000 f839 	bl	800a1b6 <HAL_TIM_PWM_MspInit>
 800a144:	687b      	ldr	r3, [r7, #4]
 800a146:	2202      	movs	r2, #2
 800a148:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a14c:	687b      	ldr	r3, [r7, #4]
 800a14e:	681a      	ldr	r2, [r3, #0]
 800a150:	687b      	ldr	r3, [r7, #4]
 800a152:	3304      	adds	r3, #4
 800a154:	4619      	mov	r1, r3
 800a156:	4610      	mov	r0, r2
 800a158:	f001 f88c 	bl	800b274 <TIM_Base_SetConfig>
 800a15c:	687b      	ldr	r3, [r7, #4]
 800a15e:	2201      	movs	r2, #1
 800a160:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800a164:	687b      	ldr	r3, [r7, #4]
 800a166:	2201      	movs	r2, #1
 800a168:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a16c:	687b      	ldr	r3, [r7, #4]
 800a16e:	2201      	movs	r2, #1
 800a170:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a174:	687b      	ldr	r3, [r7, #4]
 800a176:	2201      	movs	r2, #1
 800a178:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a17c:	687b      	ldr	r3, [r7, #4]
 800a17e:	2201      	movs	r2, #1
 800a180:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a184:	687b      	ldr	r3, [r7, #4]
 800a186:	2201      	movs	r2, #1
 800a188:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a18c:	687b      	ldr	r3, [r7, #4]
 800a18e:	2201      	movs	r2, #1
 800a190:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a194:	687b      	ldr	r3, [r7, #4]
 800a196:	2201      	movs	r2, #1
 800a198:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a19c:	687b      	ldr	r3, [r7, #4]
 800a19e:	2201      	movs	r2, #1
 800a1a0:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a1a4:	687b      	ldr	r3, [r7, #4]
 800a1a6:	2201      	movs	r2, #1
 800a1a8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a1ac:	2300      	movs	r3, #0
 800a1ae:	4618      	mov	r0, r3
 800a1b0:	3708      	adds	r7, #8
 800a1b2:	46bd      	mov	sp, r7
 800a1b4:	bd80      	pop	{r7, pc}

0800a1b6 <HAL_TIM_PWM_MspInit>:
 800a1b6:	b480      	push	{r7}
 800a1b8:	b083      	sub	sp, #12
 800a1ba:	af00      	add	r7, sp, #0
 800a1bc:	6078      	str	r0, [r7, #4]
 800a1be:	bf00      	nop
 800a1c0:	370c      	adds	r7, #12
 800a1c2:	46bd      	mov	sp, r7
 800a1c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1c8:	4770      	bx	lr
	...

0800a1cc <HAL_TIM_PWM_Start>:
 800a1cc:	b580      	push	{r7, lr}
 800a1ce:	b084      	sub	sp, #16
 800a1d0:	af00      	add	r7, sp, #0
 800a1d2:	6078      	str	r0, [r7, #4]
 800a1d4:	6039      	str	r1, [r7, #0]
 800a1d6:	683b      	ldr	r3, [r7, #0]
 800a1d8:	2b00      	cmp	r3, #0
 800a1da:	d109      	bne.n	800a1f0 <HAL_TIM_PWM_Start+0x24>
 800a1dc:	687b      	ldr	r3, [r7, #4]
 800a1de:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a1e2:	b2db      	uxtb	r3, r3
 800a1e4:	2b01      	cmp	r3, #1
 800a1e6:	bf14      	ite	ne
 800a1e8:	2301      	movne	r3, #1
 800a1ea:	2300      	moveq	r3, #0
 800a1ec:	b2db      	uxtb	r3, r3
 800a1ee:	e022      	b.n	800a236 <HAL_TIM_PWM_Start+0x6a>
 800a1f0:	683b      	ldr	r3, [r7, #0]
 800a1f2:	2b04      	cmp	r3, #4
 800a1f4:	d109      	bne.n	800a20a <HAL_TIM_PWM_Start+0x3e>
 800a1f6:	687b      	ldr	r3, [r7, #4]
 800a1f8:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800a1fc:	b2db      	uxtb	r3, r3
 800a1fe:	2b01      	cmp	r3, #1
 800a200:	bf14      	ite	ne
 800a202:	2301      	movne	r3, #1
 800a204:	2300      	moveq	r3, #0
 800a206:	b2db      	uxtb	r3, r3
 800a208:	e015      	b.n	800a236 <HAL_TIM_PWM_Start+0x6a>
 800a20a:	683b      	ldr	r3, [r7, #0]
 800a20c:	2b08      	cmp	r3, #8
 800a20e:	d109      	bne.n	800a224 <HAL_TIM_PWM_Start+0x58>
 800a210:	687b      	ldr	r3, [r7, #4]
 800a212:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800a216:	b2db      	uxtb	r3, r3
 800a218:	2b01      	cmp	r3, #1
 800a21a:	bf14      	ite	ne
 800a21c:	2301      	movne	r3, #1
 800a21e:	2300      	moveq	r3, #0
 800a220:	b2db      	uxtb	r3, r3
 800a222:	e008      	b.n	800a236 <HAL_TIM_PWM_Start+0x6a>
 800a224:	687b      	ldr	r3, [r7, #4]
 800a226:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a22a:	b2db      	uxtb	r3, r3
 800a22c:	2b01      	cmp	r3, #1
 800a22e:	bf14      	ite	ne
 800a230:	2301      	movne	r3, #1
 800a232:	2300      	moveq	r3, #0
 800a234:	b2db      	uxtb	r3, r3
 800a236:	2b00      	cmp	r3, #0
 800a238:	d001      	beq.n	800a23e <HAL_TIM_PWM_Start+0x72>
 800a23a:	2301      	movs	r3, #1
 800a23c:	e07c      	b.n	800a338 <HAL_TIM_PWM_Start+0x16c>
 800a23e:	683b      	ldr	r3, [r7, #0]
 800a240:	2b00      	cmp	r3, #0
 800a242:	d104      	bne.n	800a24e <HAL_TIM_PWM_Start+0x82>
 800a244:	687b      	ldr	r3, [r7, #4]
 800a246:	2202      	movs	r2, #2
 800a248:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a24c:	e013      	b.n	800a276 <HAL_TIM_PWM_Start+0xaa>
 800a24e:	683b      	ldr	r3, [r7, #0]
 800a250:	2b04      	cmp	r3, #4
 800a252:	d104      	bne.n	800a25e <HAL_TIM_PWM_Start+0x92>
 800a254:	687b      	ldr	r3, [r7, #4]
 800a256:	2202      	movs	r2, #2
 800a258:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a25c:	e00b      	b.n	800a276 <HAL_TIM_PWM_Start+0xaa>
 800a25e:	683b      	ldr	r3, [r7, #0]
 800a260:	2b08      	cmp	r3, #8
 800a262:	d104      	bne.n	800a26e <HAL_TIM_PWM_Start+0xa2>
 800a264:	687b      	ldr	r3, [r7, #4]
 800a266:	2202      	movs	r2, #2
 800a268:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a26c:	e003      	b.n	800a276 <HAL_TIM_PWM_Start+0xaa>
 800a26e:	687b      	ldr	r3, [r7, #4]
 800a270:	2202      	movs	r2, #2
 800a272:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a276:	687b      	ldr	r3, [r7, #4]
 800a278:	681b      	ldr	r3, [r3, #0]
 800a27a:	2201      	movs	r2, #1
 800a27c:	6839      	ldr	r1, [r7, #0]
 800a27e:	4618      	mov	r0, r3
 800a280:	f001 fc0c 	bl	800ba9c <TIM_CCxChannelCmd>
 800a284:	687b      	ldr	r3, [r7, #4]
 800a286:	681b      	ldr	r3, [r3, #0]
 800a288:	4a2d      	ldr	r2, [pc, #180]	; (800a340 <HAL_TIM_PWM_Start+0x174>)
 800a28a:	4293      	cmp	r3, r2
 800a28c:	d004      	beq.n	800a298 <HAL_TIM_PWM_Start+0xcc>
 800a28e:	687b      	ldr	r3, [r7, #4]
 800a290:	681b      	ldr	r3, [r3, #0]
 800a292:	4a2c      	ldr	r2, [pc, #176]	; (800a344 <HAL_TIM_PWM_Start+0x178>)
 800a294:	4293      	cmp	r3, r2
 800a296:	d101      	bne.n	800a29c <HAL_TIM_PWM_Start+0xd0>
 800a298:	2301      	movs	r3, #1
 800a29a:	e000      	b.n	800a29e <HAL_TIM_PWM_Start+0xd2>
 800a29c:	2300      	movs	r3, #0
 800a29e:	2b00      	cmp	r3, #0
 800a2a0:	d007      	beq.n	800a2b2 <HAL_TIM_PWM_Start+0xe6>
 800a2a2:	687b      	ldr	r3, [r7, #4]
 800a2a4:	681b      	ldr	r3, [r3, #0]
 800a2a6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800a2a8:	687b      	ldr	r3, [r7, #4]
 800a2aa:	681b      	ldr	r3, [r3, #0]
 800a2ac:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800a2b0:	645a      	str	r2, [r3, #68]	; 0x44
 800a2b2:	687b      	ldr	r3, [r7, #4]
 800a2b4:	681b      	ldr	r3, [r3, #0]
 800a2b6:	4a22      	ldr	r2, [pc, #136]	; (800a340 <HAL_TIM_PWM_Start+0x174>)
 800a2b8:	4293      	cmp	r3, r2
 800a2ba:	d022      	beq.n	800a302 <HAL_TIM_PWM_Start+0x136>
 800a2bc:	687b      	ldr	r3, [r7, #4]
 800a2be:	681b      	ldr	r3, [r3, #0]
 800a2c0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a2c4:	d01d      	beq.n	800a302 <HAL_TIM_PWM_Start+0x136>
 800a2c6:	687b      	ldr	r3, [r7, #4]
 800a2c8:	681b      	ldr	r3, [r3, #0]
 800a2ca:	4a1f      	ldr	r2, [pc, #124]	; (800a348 <HAL_TIM_PWM_Start+0x17c>)
 800a2cc:	4293      	cmp	r3, r2
 800a2ce:	d018      	beq.n	800a302 <HAL_TIM_PWM_Start+0x136>
 800a2d0:	687b      	ldr	r3, [r7, #4]
 800a2d2:	681b      	ldr	r3, [r3, #0]
 800a2d4:	4a1d      	ldr	r2, [pc, #116]	; (800a34c <HAL_TIM_PWM_Start+0x180>)
 800a2d6:	4293      	cmp	r3, r2
 800a2d8:	d013      	beq.n	800a302 <HAL_TIM_PWM_Start+0x136>
 800a2da:	687b      	ldr	r3, [r7, #4]
 800a2dc:	681b      	ldr	r3, [r3, #0]
 800a2de:	4a1c      	ldr	r2, [pc, #112]	; (800a350 <HAL_TIM_PWM_Start+0x184>)
 800a2e0:	4293      	cmp	r3, r2
 800a2e2:	d00e      	beq.n	800a302 <HAL_TIM_PWM_Start+0x136>
 800a2e4:	687b      	ldr	r3, [r7, #4]
 800a2e6:	681b      	ldr	r3, [r3, #0]
 800a2e8:	4a16      	ldr	r2, [pc, #88]	; (800a344 <HAL_TIM_PWM_Start+0x178>)
 800a2ea:	4293      	cmp	r3, r2
 800a2ec:	d009      	beq.n	800a302 <HAL_TIM_PWM_Start+0x136>
 800a2ee:	687b      	ldr	r3, [r7, #4]
 800a2f0:	681b      	ldr	r3, [r3, #0]
 800a2f2:	4a18      	ldr	r2, [pc, #96]	; (800a354 <HAL_TIM_PWM_Start+0x188>)
 800a2f4:	4293      	cmp	r3, r2
 800a2f6:	d004      	beq.n	800a302 <HAL_TIM_PWM_Start+0x136>
 800a2f8:	687b      	ldr	r3, [r7, #4]
 800a2fa:	681b      	ldr	r3, [r3, #0]
 800a2fc:	4a16      	ldr	r2, [pc, #88]	; (800a358 <HAL_TIM_PWM_Start+0x18c>)
 800a2fe:	4293      	cmp	r3, r2
 800a300:	d111      	bne.n	800a326 <HAL_TIM_PWM_Start+0x15a>
 800a302:	687b      	ldr	r3, [r7, #4]
 800a304:	681b      	ldr	r3, [r3, #0]
 800a306:	689b      	ldr	r3, [r3, #8]
 800a308:	f003 0307 	and.w	r3, r3, #7
 800a30c:	60fb      	str	r3, [r7, #12]
 800a30e:	68fb      	ldr	r3, [r7, #12]
 800a310:	2b06      	cmp	r3, #6
 800a312:	d010      	beq.n	800a336 <HAL_TIM_PWM_Start+0x16a>
 800a314:	687b      	ldr	r3, [r7, #4]
 800a316:	681b      	ldr	r3, [r3, #0]
 800a318:	681a      	ldr	r2, [r3, #0]
 800a31a:	687b      	ldr	r3, [r7, #4]
 800a31c:	681b      	ldr	r3, [r3, #0]
 800a31e:	f042 0201 	orr.w	r2, r2, #1
 800a322:	601a      	str	r2, [r3, #0]
 800a324:	e007      	b.n	800a336 <HAL_TIM_PWM_Start+0x16a>
 800a326:	687b      	ldr	r3, [r7, #4]
 800a328:	681b      	ldr	r3, [r3, #0]
 800a32a:	681a      	ldr	r2, [r3, #0]
 800a32c:	687b      	ldr	r3, [r7, #4]
 800a32e:	681b      	ldr	r3, [r3, #0]
 800a330:	f042 0201 	orr.w	r2, r2, #1
 800a334:	601a      	str	r2, [r3, #0]
 800a336:	2300      	movs	r3, #0
 800a338:	4618      	mov	r0, r3
 800a33a:	3710      	adds	r7, #16
 800a33c:	46bd      	mov	sp, r7
 800a33e:	bd80      	pop	{r7, pc}
 800a340:	40010000 	.word	0x40010000
 800a344:	40010400 	.word	0x40010400
 800a348:	40000400 	.word	0x40000400
 800a34c:	40000800 	.word	0x40000800
 800a350:	40000c00 	.word	0x40000c00
 800a354:	40014000 	.word	0x40014000
 800a358:	40001800 	.word	0x40001800

0800a35c <HAL_TIM_IC_Init>:
 800a35c:	b580      	push	{r7, lr}
 800a35e:	b082      	sub	sp, #8
 800a360:	af00      	add	r7, sp, #0
 800a362:	6078      	str	r0, [r7, #4]
 800a364:	687b      	ldr	r3, [r7, #4]
 800a366:	2b00      	cmp	r3, #0
 800a368:	d101      	bne.n	800a36e <HAL_TIM_IC_Init+0x12>
 800a36a:	2301      	movs	r3, #1
 800a36c:	e041      	b.n	800a3f2 <HAL_TIM_IC_Init+0x96>
 800a36e:	687b      	ldr	r3, [r7, #4]
 800a370:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a374:	b2db      	uxtb	r3, r3
 800a376:	2b00      	cmp	r3, #0
 800a378:	d106      	bne.n	800a388 <HAL_TIM_IC_Init+0x2c>
 800a37a:	687b      	ldr	r3, [r7, #4]
 800a37c:	2200      	movs	r2, #0
 800a37e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a382:	6878      	ldr	r0, [r7, #4]
 800a384:	f000 f839 	bl	800a3fa <HAL_TIM_IC_MspInit>
 800a388:	687b      	ldr	r3, [r7, #4]
 800a38a:	2202      	movs	r2, #2
 800a38c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a390:	687b      	ldr	r3, [r7, #4]
 800a392:	681a      	ldr	r2, [r3, #0]
 800a394:	687b      	ldr	r3, [r7, #4]
 800a396:	3304      	adds	r3, #4
 800a398:	4619      	mov	r1, r3
 800a39a:	4610      	mov	r0, r2
 800a39c:	f000 ff6a 	bl	800b274 <TIM_Base_SetConfig>
 800a3a0:	687b      	ldr	r3, [r7, #4]
 800a3a2:	2201      	movs	r2, #1
 800a3a4:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800a3a8:	687b      	ldr	r3, [r7, #4]
 800a3aa:	2201      	movs	r2, #1
 800a3ac:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a3b0:	687b      	ldr	r3, [r7, #4]
 800a3b2:	2201      	movs	r2, #1
 800a3b4:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a3b8:	687b      	ldr	r3, [r7, #4]
 800a3ba:	2201      	movs	r2, #1
 800a3bc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a3c0:	687b      	ldr	r3, [r7, #4]
 800a3c2:	2201      	movs	r2, #1
 800a3c4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a3c8:	687b      	ldr	r3, [r7, #4]
 800a3ca:	2201      	movs	r2, #1
 800a3cc:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a3d0:	687b      	ldr	r3, [r7, #4]
 800a3d2:	2201      	movs	r2, #1
 800a3d4:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a3d8:	687b      	ldr	r3, [r7, #4]
 800a3da:	2201      	movs	r2, #1
 800a3dc:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a3e0:	687b      	ldr	r3, [r7, #4]
 800a3e2:	2201      	movs	r2, #1
 800a3e4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a3e8:	687b      	ldr	r3, [r7, #4]
 800a3ea:	2201      	movs	r2, #1
 800a3ec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a3f0:	2300      	movs	r3, #0
 800a3f2:	4618      	mov	r0, r3
 800a3f4:	3708      	adds	r7, #8
 800a3f6:	46bd      	mov	sp, r7
 800a3f8:	bd80      	pop	{r7, pc}

0800a3fa <HAL_TIM_IC_MspInit>:
 800a3fa:	b480      	push	{r7}
 800a3fc:	b083      	sub	sp, #12
 800a3fe:	af00      	add	r7, sp, #0
 800a400:	6078      	str	r0, [r7, #4]
 800a402:	bf00      	nop
 800a404:	370c      	adds	r7, #12
 800a406:	46bd      	mov	sp, r7
 800a408:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a40c:	4770      	bx	lr
	...

0800a410 <HAL_TIM_IC_Start_DMA>:
 800a410:	b580      	push	{r7, lr}
 800a412:	b086      	sub	sp, #24
 800a414:	af00      	add	r7, sp, #0
 800a416:	60f8      	str	r0, [r7, #12]
 800a418:	60b9      	str	r1, [r7, #8]
 800a41a:	607a      	str	r2, [r7, #4]
 800a41c:	807b      	strh	r3, [r7, #2]
 800a41e:	2300      	movs	r3, #0
 800a420:	75fb      	strb	r3, [r7, #23]
 800a422:	68bb      	ldr	r3, [r7, #8]
 800a424:	2b00      	cmp	r3, #0
 800a426:	d104      	bne.n	800a432 <HAL_TIM_IC_Start_DMA+0x22>
 800a428:	68fb      	ldr	r3, [r7, #12]
 800a42a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a42e:	b2db      	uxtb	r3, r3
 800a430:	e013      	b.n	800a45a <HAL_TIM_IC_Start_DMA+0x4a>
 800a432:	68bb      	ldr	r3, [r7, #8]
 800a434:	2b04      	cmp	r3, #4
 800a436:	d104      	bne.n	800a442 <HAL_TIM_IC_Start_DMA+0x32>
 800a438:	68fb      	ldr	r3, [r7, #12]
 800a43a:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800a43e:	b2db      	uxtb	r3, r3
 800a440:	e00b      	b.n	800a45a <HAL_TIM_IC_Start_DMA+0x4a>
 800a442:	68bb      	ldr	r3, [r7, #8]
 800a444:	2b08      	cmp	r3, #8
 800a446:	d104      	bne.n	800a452 <HAL_TIM_IC_Start_DMA+0x42>
 800a448:	68fb      	ldr	r3, [r7, #12]
 800a44a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800a44e:	b2db      	uxtb	r3, r3
 800a450:	e003      	b.n	800a45a <HAL_TIM_IC_Start_DMA+0x4a>
 800a452:	68fb      	ldr	r3, [r7, #12]
 800a454:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a458:	b2db      	uxtb	r3, r3
 800a45a:	75bb      	strb	r3, [r7, #22]
 800a45c:	68bb      	ldr	r3, [r7, #8]
 800a45e:	2b00      	cmp	r3, #0
 800a460:	d104      	bne.n	800a46c <HAL_TIM_IC_Start_DMA+0x5c>
 800a462:	68fb      	ldr	r3, [r7, #12]
 800a464:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800a468:	b2db      	uxtb	r3, r3
 800a46a:	e013      	b.n	800a494 <HAL_TIM_IC_Start_DMA+0x84>
 800a46c:	68bb      	ldr	r3, [r7, #8]
 800a46e:	2b04      	cmp	r3, #4
 800a470:	d104      	bne.n	800a47c <HAL_TIM_IC_Start_DMA+0x6c>
 800a472:	68fb      	ldr	r3, [r7, #12]
 800a474:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 800a478:	b2db      	uxtb	r3, r3
 800a47a:	e00b      	b.n	800a494 <HAL_TIM_IC_Start_DMA+0x84>
 800a47c:	68bb      	ldr	r3, [r7, #8]
 800a47e:	2b08      	cmp	r3, #8
 800a480:	d104      	bne.n	800a48c <HAL_TIM_IC_Start_DMA+0x7c>
 800a482:	68fb      	ldr	r3, [r7, #12]
 800a484:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800a488:	b2db      	uxtb	r3, r3
 800a48a:	e003      	b.n	800a494 <HAL_TIM_IC_Start_DMA+0x84>
 800a48c:	68fb      	ldr	r3, [r7, #12]
 800a48e:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800a492:	b2db      	uxtb	r3, r3
 800a494:	757b      	strb	r3, [r7, #21]
 800a496:	7dbb      	ldrb	r3, [r7, #22]
 800a498:	2b02      	cmp	r3, #2
 800a49a:	d002      	beq.n	800a4a2 <HAL_TIM_IC_Start_DMA+0x92>
 800a49c:	7d7b      	ldrb	r3, [r7, #21]
 800a49e:	2b02      	cmp	r3, #2
 800a4a0:	d101      	bne.n	800a4a6 <HAL_TIM_IC_Start_DMA+0x96>
 800a4a2:	2302      	movs	r3, #2
 800a4a4:	e146      	b.n	800a734 <HAL_TIM_IC_Start_DMA+0x324>
 800a4a6:	7dbb      	ldrb	r3, [r7, #22]
 800a4a8:	2b01      	cmp	r3, #1
 800a4aa:	d143      	bne.n	800a534 <HAL_TIM_IC_Start_DMA+0x124>
 800a4ac:	7d7b      	ldrb	r3, [r7, #21]
 800a4ae:	2b01      	cmp	r3, #1
 800a4b0:	d140      	bne.n	800a534 <HAL_TIM_IC_Start_DMA+0x124>
 800a4b2:	687b      	ldr	r3, [r7, #4]
 800a4b4:	2b00      	cmp	r3, #0
 800a4b6:	d104      	bne.n	800a4c2 <HAL_TIM_IC_Start_DMA+0xb2>
 800a4b8:	887b      	ldrh	r3, [r7, #2]
 800a4ba:	2b00      	cmp	r3, #0
 800a4bc:	d001      	beq.n	800a4c2 <HAL_TIM_IC_Start_DMA+0xb2>
 800a4be:	2301      	movs	r3, #1
 800a4c0:	e138      	b.n	800a734 <HAL_TIM_IC_Start_DMA+0x324>
 800a4c2:	68bb      	ldr	r3, [r7, #8]
 800a4c4:	2b00      	cmp	r3, #0
 800a4c6:	d104      	bne.n	800a4d2 <HAL_TIM_IC_Start_DMA+0xc2>
 800a4c8:	68fb      	ldr	r3, [r7, #12]
 800a4ca:	2202      	movs	r2, #2
 800a4cc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a4d0:	e013      	b.n	800a4fa <HAL_TIM_IC_Start_DMA+0xea>
 800a4d2:	68bb      	ldr	r3, [r7, #8]
 800a4d4:	2b04      	cmp	r3, #4
 800a4d6:	d104      	bne.n	800a4e2 <HAL_TIM_IC_Start_DMA+0xd2>
 800a4d8:	68fb      	ldr	r3, [r7, #12]
 800a4da:	2202      	movs	r2, #2
 800a4dc:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a4e0:	e00b      	b.n	800a4fa <HAL_TIM_IC_Start_DMA+0xea>
 800a4e2:	68bb      	ldr	r3, [r7, #8]
 800a4e4:	2b08      	cmp	r3, #8
 800a4e6:	d104      	bne.n	800a4f2 <HAL_TIM_IC_Start_DMA+0xe2>
 800a4e8:	68fb      	ldr	r3, [r7, #12]
 800a4ea:	2202      	movs	r2, #2
 800a4ec:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a4f0:	e003      	b.n	800a4fa <HAL_TIM_IC_Start_DMA+0xea>
 800a4f2:	68fb      	ldr	r3, [r7, #12]
 800a4f4:	2202      	movs	r2, #2
 800a4f6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a4fa:	68bb      	ldr	r3, [r7, #8]
 800a4fc:	2b00      	cmp	r3, #0
 800a4fe:	d104      	bne.n	800a50a <HAL_TIM_IC_Start_DMA+0xfa>
 800a500:	68fb      	ldr	r3, [r7, #12]
 800a502:	2202      	movs	r2, #2
 800a504:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a508:	e016      	b.n	800a538 <HAL_TIM_IC_Start_DMA+0x128>
 800a50a:	68bb      	ldr	r3, [r7, #8]
 800a50c:	2b04      	cmp	r3, #4
 800a50e:	d104      	bne.n	800a51a <HAL_TIM_IC_Start_DMA+0x10a>
 800a510:	68fb      	ldr	r3, [r7, #12]
 800a512:	2202      	movs	r2, #2
 800a514:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a518:	e00e      	b.n	800a538 <HAL_TIM_IC_Start_DMA+0x128>
 800a51a:	68bb      	ldr	r3, [r7, #8]
 800a51c:	2b08      	cmp	r3, #8
 800a51e:	d104      	bne.n	800a52a <HAL_TIM_IC_Start_DMA+0x11a>
 800a520:	68fb      	ldr	r3, [r7, #12]
 800a522:	2202      	movs	r2, #2
 800a524:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a528:	e006      	b.n	800a538 <HAL_TIM_IC_Start_DMA+0x128>
 800a52a:	68fb      	ldr	r3, [r7, #12]
 800a52c:	2202      	movs	r2, #2
 800a52e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a532:	e001      	b.n	800a538 <HAL_TIM_IC_Start_DMA+0x128>
 800a534:	2301      	movs	r3, #1
 800a536:	e0fd      	b.n	800a734 <HAL_TIM_IC_Start_DMA+0x324>
 800a538:	68fb      	ldr	r3, [r7, #12]
 800a53a:	681b      	ldr	r3, [r3, #0]
 800a53c:	2201      	movs	r2, #1
 800a53e:	68b9      	ldr	r1, [r7, #8]
 800a540:	4618      	mov	r0, r3
 800a542:	f001 faab 	bl	800ba9c <TIM_CCxChannelCmd>
 800a546:	68bb      	ldr	r3, [r7, #8]
 800a548:	2b0c      	cmp	r3, #12
 800a54a:	f200 80ad 	bhi.w	800a6a8 <HAL_TIM_IC_Start_DMA+0x298>
 800a54e:	a201      	add	r2, pc, #4	; (adr r2, 800a554 <HAL_TIM_IC_Start_DMA+0x144>)
 800a550:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a554:	0800a589 	.word	0x0800a589
 800a558:	0800a6a9 	.word	0x0800a6a9
 800a55c:	0800a6a9 	.word	0x0800a6a9
 800a560:	0800a6a9 	.word	0x0800a6a9
 800a564:	0800a5d1 	.word	0x0800a5d1
 800a568:	0800a6a9 	.word	0x0800a6a9
 800a56c:	0800a6a9 	.word	0x0800a6a9
 800a570:	0800a6a9 	.word	0x0800a6a9
 800a574:	0800a619 	.word	0x0800a619
 800a578:	0800a6a9 	.word	0x0800a6a9
 800a57c:	0800a6a9 	.word	0x0800a6a9
 800a580:	0800a6a9 	.word	0x0800a6a9
 800a584:	0800a661 	.word	0x0800a661
 800a588:	68fb      	ldr	r3, [r7, #12]
 800a58a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a58c:	4a6b      	ldr	r2, [pc, #428]	; (800a73c <HAL_TIM_IC_Start_DMA+0x32c>)
 800a58e:	63da      	str	r2, [r3, #60]	; 0x3c
 800a590:	68fb      	ldr	r3, [r7, #12]
 800a592:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a594:	4a6a      	ldr	r2, [pc, #424]	; (800a740 <HAL_TIM_IC_Start_DMA+0x330>)
 800a596:	641a      	str	r2, [r3, #64]	; 0x40
 800a598:	68fb      	ldr	r3, [r7, #12]
 800a59a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a59c:	4a69      	ldr	r2, [pc, #420]	; (800a744 <HAL_TIM_IC_Start_DMA+0x334>)
 800a59e:	64da      	str	r2, [r3, #76]	; 0x4c
 800a5a0:	68fb      	ldr	r3, [r7, #12]
 800a5a2:	6a58      	ldr	r0, [r3, #36]	; 0x24
 800a5a4:	68fb      	ldr	r3, [r7, #12]
 800a5a6:	681b      	ldr	r3, [r3, #0]
 800a5a8:	3334      	adds	r3, #52	; 0x34
 800a5aa:	4619      	mov	r1, r3
 800a5ac:	687a      	ldr	r2, [r7, #4]
 800a5ae:	887b      	ldrh	r3, [r7, #2]
 800a5b0:	f7fd ff68 	bl	8008484 <HAL_DMA_Start_IT>
 800a5b4:	4603      	mov	r3, r0
 800a5b6:	2b00      	cmp	r3, #0
 800a5b8:	d001      	beq.n	800a5be <HAL_TIM_IC_Start_DMA+0x1ae>
 800a5ba:	2301      	movs	r3, #1
 800a5bc:	e0ba      	b.n	800a734 <HAL_TIM_IC_Start_DMA+0x324>
 800a5be:	68fb      	ldr	r3, [r7, #12]
 800a5c0:	681b      	ldr	r3, [r3, #0]
 800a5c2:	68da      	ldr	r2, [r3, #12]
 800a5c4:	68fb      	ldr	r3, [r7, #12]
 800a5c6:	681b      	ldr	r3, [r3, #0]
 800a5c8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a5cc:	60da      	str	r2, [r3, #12]
 800a5ce:	e06e      	b.n	800a6ae <HAL_TIM_IC_Start_DMA+0x29e>
 800a5d0:	68fb      	ldr	r3, [r7, #12]
 800a5d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a5d4:	4a59      	ldr	r2, [pc, #356]	; (800a73c <HAL_TIM_IC_Start_DMA+0x32c>)
 800a5d6:	63da      	str	r2, [r3, #60]	; 0x3c
 800a5d8:	68fb      	ldr	r3, [r7, #12]
 800a5da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a5dc:	4a58      	ldr	r2, [pc, #352]	; (800a740 <HAL_TIM_IC_Start_DMA+0x330>)
 800a5de:	641a      	str	r2, [r3, #64]	; 0x40
 800a5e0:	68fb      	ldr	r3, [r7, #12]
 800a5e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a5e4:	4a57      	ldr	r2, [pc, #348]	; (800a744 <HAL_TIM_IC_Start_DMA+0x334>)
 800a5e6:	64da      	str	r2, [r3, #76]	; 0x4c
 800a5e8:	68fb      	ldr	r3, [r7, #12]
 800a5ea:	6a98      	ldr	r0, [r3, #40]	; 0x28
 800a5ec:	68fb      	ldr	r3, [r7, #12]
 800a5ee:	681b      	ldr	r3, [r3, #0]
 800a5f0:	3338      	adds	r3, #56	; 0x38
 800a5f2:	4619      	mov	r1, r3
 800a5f4:	687a      	ldr	r2, [r7, #4]
 800a5f6:	887b      	ldrh	r3, [r7, #2]
 800a5f8:	f7fd ff44 	bl	8008484 <HAL_DMA_Start_IT>
 800a5fc:	4603      	mov	r3, r0
 800a5fe:	2b00      	cmp	r3, #0
 800a600:	d001      	beq.n	800a606 <HAL_TIM_IC_Start_DMA+0x1f6>
 800a602:	2301      	movs	r3, #1
 800a604:	e096      	b.n	800a734 <HAL_TIM_IC_Start_DMA+0x324>
 800a606:	68fb      	ldr	r3, [r7, #12]
 800a608:	681b      	ldr	r3, [r3, #0]
 800a60a:	68da      	ldr	r2, [r3, #12]
 800a60c:	68fb      	ldr	r3, [r7, #12]
 800a60e:	681b      	ldr	r3, [r3, #0]
 800a610:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a614:	60da      	str	r2, [r3, #12]
 800a616:	e04a      	b.n	800a6ae <HAL_TIM_IC_Start_DMA+0x29e>
 800a618:	68fb      	ldr	r3, [r7, #12]
 800a61a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a61c:	4a47      	ldr	r2, [pc, #284]	; (800a73c <HAL_TIM_IC_Start_DMA+0x32c>)
 800a61e:	63da      	str	r2, [r3, #60]	; 0x3c
 800a620:	68fb      	ldr	r3, [r7, #12]
 800a622:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a624:	4a46      	ldr	r2, [pc, #280]	; (800a740 <HAL_TIM_IC_Start_DMA+0x330>)
 800a626:	641a      	str	r2, [r3, #64]	; 0x40
 800a628:	68fb      	ldr	r3, [r7, #12]
 800a62a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a62c:	4a45      	ldr	r2, [pc, #276]	; (800a744 <HAL_TIM_IC_Start_DMA+0x334>)
 800a62e:	64da      	str	r2, [r3, #76]	; 0x4c
 800a630:	68fb      	ldr	r3, [r7, #12]
 800a632:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 800a634:	68fb      	ldr	r3, [r7, #12]
 800a636:	681b      	ldr	r3, [r3, #0]
 800a638:	333c      	adds	r3, #60	; 0x3c
 800a63a:	4619      	mov	r1, r3
 800a63c:	687a      	ldr	r2, [r7, #4]
 800a63e:	887b      	ldrh	r3, [r7, #2]
 800a640:	f7fd ff20 	bl	8008484 <HAL_DMA_Start_IT>
 800a644:	4603      	mov	r3, r0
 800a646:	2b00      	cmp	r3, #0
 800a648:	d001      	beq.n	800a64e <HAL_TIM_IC_Start_DMA+0x23e>
 800a64a:	2301      	movs	r3, #1
 800a64c:	e072      	b.n	800a734 <HAL_TIM_IC_Start_DMA+0x324>
 800a64e:	68fb      	ldr	r3, [r7, #12]
 800a650:	681b      	ldr	r3, [r3, #0]
 800a652:	68da      	ldr	r2, [r3, #12]
 800a654:	68fb      	ldr	r3, [r7, #12]
 800a656:	681b      	ldr	r3, [r3, #0]
 800a658:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a65c:	60da      	str	r2, [r3, #12]
 800a65e:	e026      	b.n	800a6ae <HAL_TIM_IC_Start_DMA+0x29e>
 800a660:	68fb      	ldr	r3, [r7, #12]
 800a662:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a664:	4a35      	ldr	r2, [pc, #212]	; (800a73c <HAL_TIM_IC_Start_DMA+0x32c>)
 800a666:	63da      	str	r2, [r3, #60]	; 0x3c
 800a668:	68fb      	ldr	r3, [r7, #12]
 800a66a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a66c:	4a34      	ldr	r2, [pc, #208]	; (800a740 <HAL_TIM_IC_Start_DMA+0x330>)
 800a66e:	641a      	str	r2, [r3, #64]	; 0x40
 800a670:	68fb      	ldr	r3, [r7, #12]
 800a672:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a674:	4a33      	ldr	r2, [pc, #204]	; (800a744 <HAL_TIM_IC_Start_DMA+0x334>)
 800a676:	64da      	str	r2, [r3, #76]	; 0x4c
 800a678:	68fb      	ldr	r3, [r7, #12]
 800a67a:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800a67c:	68fb      	ldr	r3, [r7, #12]
 800a67e:	681b      	ldr	r3, [r3, #0]
 800a680:	3340      	adds	r3, #64	; 0x40
 800a682:	4619      	mov	r1, r3
 800a684:	687a      	ldr	r2, [r7, #4]
 800a686:	887b      	ldrh	r3, [r7, #2]
 800a688:	f7fd fefc 	bl	8008484 <HAL_DMA_Start_IT>
 800a68c:	4603      	mov	r3, r0
 800a68e:	2b00      	cmp	r3, #0
 800a690:	d001      	beq.n	800a696 <HAL_TIM_IC_Start_DMA+0x286>
 800a692:	2301      	movs	r3, #1
 800a694:	e04e      	b.n	800a734 <HAL_TIM_IC_Start_DMA+0x324>
 800a696:	68fb      	ldr	r3, [r7, #12]
 800a698:	681b      	ldr	r3, [r3, #0]
 800a69a:	68da      	ldr	r2, [r3, #12]
 800a69c:	68fb      	ldr	r3, [r7, #12]
 800a69e:	681b      	ldr	r3, [r3, #0]
 800a6a0:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800a6a4:	60da      	str	r2, [r3, #12]
 800a6a6:	e002      	b.n	800a6ae <HAL_TIM_IC_Start_DMA+0x29e>
 800a6a8:	2301      	movs	r3, #1
 800a6aa:	75fb      	strb	r3, [r7, #23]
 800a6ac:	bf00      	nop
 800a6ae:	68fb      	ldr	r3, [r7, #12]
 800a6b0:	681b      	ldr	r3, [r3, #0]
 800a6b2:	4a25      	ldr	r2, [pc, #148]	; (800a748 <HAL_TIM_IC_Start_DMA+0x338>)
 800a6b4:	4293      	cmp	r3, r2
 800a6b6:	d022      	beq.n	800a6fe <HAL_TIM_IC_Start_DMA+0x2ee>
 800a6b8:	68fb      	ldr	r3, [r7, #12]
 800a6ba:	681b      	ldr	r3, [r3, #0]
 800a6bc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a6c0:	d01d      	beq.n	800a6fe <HAL_TIM_IC_Start_DMA+0x2ee>
 800a6c2:	68fb      	ldr	r3, [r7, #12]
 800a6c4:	681b      	ldr	r3, [r3, #0]
 800a6c6:	4a21      	ldr	r2, [pc, #132]	; (800a74c <HAL_TIM_IC_Start_DMA+0x33c>)
 800a6c8:	4293      	cmp	r3, r2
 800a6ca:	d018      	beq.n	800a6fe <HAL_TIM_IC_Start_DMA+0x2ee>
 800a6cc:	68fb      	ldr	r3, [r7, #12]
 800a6ce:	681b      	ldr	r3, [r3, #0]
 800a6d0:	4a1f      	ldr	r2, [pc, #124]	; (800a750 <HAL_TIM_IC_Start_DMA+0x340>)
 800a6d2:	4293      	cmp	r3, r2
 800a6d4:	d013      	beq.n	800a6fe <HAL_TIM_IC_Start_DMA+0x2ee>
 800a6d6:	68fb      	ldr	r3, [r7, #12]
 800a6d8:	681b      	ldr	r3, [r3, #0]
 800a6da:	4a1e      	ldr	r2, [pc, #120]	; (800a754 <HAL_TIM_IC_Start_DMA+0x344>)
 800a6dc:	4293      	cmp	r3, r2
 800a6de:	d00e      	beq.n	800a6fe <HAL_TIM_IC_Start_DMA+0x2ee>
 800a6e0:	68fb      	ldr	r3, [r7, #12]
 800a6e2:	681b      	ldr	r3, [r3, #0]
 800a6e4:	4a1c      	ldr	r2, [pc, #112]	; (800a758 <HAL_TIM_IC_Start_DMA+0x348>)
 800a6e6:	4293      	cmp	r3, r2
 800a6e8:	d009      	beq.n	800a6fe <HAL_TIM_IC_Start_DMA+0x2ee>
 800a6ea:	68fb      	ldr	r3, [r7, #12]
 800a6ec:	681b      	ldr	r3, [r3, #0]
 800a6ee:	4a1b      	ldr	r2, [pc, #108]	; (800a75c <HAL_TIM_IC_Start_DMA+0x34c>)
 800a6f0:	4293      	cmp	r3, r2
 800a6f2:	d004      	beq.n	800a6fe <HAL_TIM_IC_Start_DMA+0x2ee>
 800a6f4:	68fb      	ldr	r3, [r7, #12]
 800a6f6:	681b      	ldr	r3, [r3, #0]
 800a6f8:	4a19      	ldr	r2, [pc, #100]	; (800a760 <HAL_TIM_IC_Start_DMA+0x350>)
 800a6fa:	4293      	cmp	r3, r2
 800a6fc:	d111      	bne.n	800a722 <HAL_TIM_IC_Start_DMA+0x312>
 800a6fe:	68fb      	ldr	r3, [r7, #12]
 800a700:	681b      	ldr	r3, [r3, #0]
 800a702:	689b      	ldr	r3, [r3, #8]
 800a704:	f003 0307 	and.w	r3, r3, #7
 800a708:	613b      	str	r3, [r7, #16]
 800a70a:	693b      	ldr	r3, [r7, #16]
 800a70c:	2b06      	cmp	r3, #6
 800a70e:	d010      	beq.n	800a732 <HAL_TIM_IC_Start_DMA+0x322>
 800a710:	68fb      	ldr	r3, [r7, #12]
 800a712:	681b      	ldr	r3, [r3, #0]
 800a714:	681a      	ldr	r2, [r3, #0]
 800a716:	68fb      	ldr	r3, [r7, #12]
 800a718:	681b      	ldr	r3, [r3, #0]
 800a71a:	f042 0201 	orr.w	r2, r2, #1
 800a71e:	601a      	str	r2, [r3, #0]
 800a720:	e007      	b.n	800a732 <HAL_TIM_IC_Start_DMA+0x322>
 800a722:	68fb      	ldr	r3, [r7, #12]
 800a724:	681b      	ldr	r3, [r3, #0]
 800a726:	681a      	ldr	r2, [r3, #0]
 800a728:	68fb      	ldr	r3, [r7, #12]
 800a72a:	681b      	ldr	r3, [r3, #0]
 800a72c:	f042 0201 	orr.w	r2, r2, #1
 800a730:	601a      	str	r2, [r3, #0]
 800a732:	7dfb      	ldrb	r3, [r7, #23]
 800a734:	4618      	mov	r0, r3
 800a736:	3718      	adds	r7, #24
 800a738:	46bd      	mov	sp, r7
 800a73a:	bd80      	pop	{r7, pc}
 800a73c:	0800b145 	.word	0x0800b145
 800a740:	0800b20d 	.word	0x0800b20d
 800a744:	0800b0b3 	.word	0x0800b0b3
 800a748:	40010000 	.word	0x40010000
 800a74c:	40000400 	.word	0x40000400
 800a750:	40000800 	.word	0x40000800
 800a754:	40000c00 	.word	0x40000c00
 800a758:	40010400 	.word	0x40010400
 800a75c:	40014000 	.word	0x40014000
 800a760:	40001800 	.word	0x40001800

0800a764 <HAL_TIM_Encoder_Init>:
 800a764:	b580      	push	{r7, lr}
 800a766:	b086      	sub	sp, #24
 800a768:	af00      	add	r7, sp, #0
 800a76a:	6078      	str	r0, [r7, #4]
 800a76c:	6039      	str	r1, [r7, #0]
 800a76e:	687b      	ldr	r3, [r7, #4]
 800a770:	2b00      	cmp	r3, #0
 800a772:	d101      	bne.n	800a778 <HAL_TIM_Encoder_Init+0x14>
 800a774:	2301      	movs	r3, #1
 800a776:	e097      	b.n	800a8a8 <HAL_TIM_Encoder_Init+0x144>
 800a778:	687b      	ldr	r3, [r7, #4]
 800a77a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a77e:	b2db      	uxtb	r3, r3
 800a780:	2b00      	cmp	r3, #0
 800a782:	d106      	bne.n	800a792 <HAL_TIM_Encoder_Init+0x2e>
 800a784:	687b      	ldr	r3, [r7, #4]
 800a786:	2200      	movs	r2, #0
 800a788:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a78c:	6878      	ldr	r0, [r7, #4]
 800a78e:	f7fc fb31 	bl	8006df4 <HAL_TIM_Encoder_MspInit>
 800a792:	687b      	ldr	r3, [r7, #4]
 800a794:	2202      	movs	r2, #2
 800a796:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a79a:	687b      	ldr	r3, [r7, #4]
 800a79c:	681b      	ldr	r3, [r3, #0]
 800a79e:	689b      	ldr	r3, [r3, #8]
 800a7a0:	687a      	ldr	r2, [r7, #4]
 800a7a2:	6812      	ldr	r2, [r2, #0]
 800a7a4:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800a7a8:	f023 0307 	bic.w	r3, r3, #7
 800a7ac:	6093      	str	r3, [r2, #8]
 800a7ae:	687b      	ldr	r3, [r7, #4]
 800a7b0:	681a      	ldr	r2, [r3, #0]
 800a7b2:	687b      	ldr	r3, [r7, #4]
 800a7b4:	3304      	adds	r3, #4
 800a7b6:	4619      	mov	r1, r3
 800a7b8:	4610      	mov	r0, r2
 800a7ba:	f000 fd5b 	bl	800b274 <TIM_Base_SetConfig>
 800a7be:	687b      	ldr	r3, [r7, #4]
 800a7c0:	681b      	ldr	r3, [r3, #0]
 800a7c2:	689b      	ldr	r3, [r3, #8]
 800a7c4:	617b      	str	r3, [r7, #20]
 800a7c6:	687b      	ldr	r3, [r7, #4]
 800a7c8:	681b      	ldr	r3, [r3, #0]
 800a7ca:	699b      	ldr	r3, [r3, #24]
 800a7cc:	613b      	str	r3, [r7, #16]
 800a7ce:	687b      	ldr	r3, [r7, #4]
 800a7d0:	681b      	ldr	r3, [r3, #0]
 800a7d2:	6a1b      	ldr	r3, [r3, #32]
 800a7d4:	60fb      	str	r3, [r7, #12]
 800a7d6:	683b      	ldr	r3, [r7, #0]
 800a7d8:	681b      	ldr	r3, [r3, #0]
 800a7da:	697a      	ldr	r2, [r7, #20]
 800a7dc:	4313      	orrs	r3, r2
 800a7de:	617b      	str	r3, [r7, #20]
 800a7e0:	693b      	ldr	r3, [r7, #16]
 800a7e2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800a7e6:	f023 0303 	bic.w	r3, r3, #3
 800a7ea:	613b      	str	r3, [r7, #16]
 800a7ec:	683b      	ldr	r3, [r7, #0]
 800a7ee:	689a      	ldr	r2, [r3, #8]
 800a7f0:	683b      	ldr	r3, [r7, #0]
 800a7f2:	699b      	ldr	r3, [r3, #24]
 800a7f4:	021b      	lsls	r3, r3, #8
 800a7f6:	4313      	orrs	r3, r2
 800a7f8:	693a      	ldr	r2, [r7, #16]
 800a7fa:	4313      	orrs	r3, r2
 800a7fc:	613b      	str	r3, [r7, #16]
 800a7fe:	693b      	ldr	r3, [r7, #16]
 800a800:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 800a804:	f023 030c 	bic.w	r3, r3, #12
 800a808:	613b      	str	r3, [r7, #16]
 800a80a:	693b      	ldr	r3, [r7, #16]
 800a80c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800a810:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800a814:	613b      	str	r3, [r7, #16]
 800a816:	683b      	ldr	r3, [r7, #0]
 800a818:	68da      	ldr	r2, [r3, #12]
 800a81a:	683b      	ldr	r3, [r7, #0]
 800a81c:	69db      	ldr	r3, [r3, #28]
 800a81e:	021b      	lsls	r3, r3, #8
 800a820:	4313      	orrs	r3, r2
 800a822:	693a      	ldr	r2, [r7, #16]
 800a824:	4313      	orrs	r3, r2
 800a826:	613b      	str	r3, [r7, #16]
 800a828:	683b      	ldr	r3, [r7, #0]
 800a82a:	691b      	ldr	r3, [r3, #16]
 800a82c:	011a      	lsls	r2, r3, #4
 800a82e:	683b      	ldr	r3, [r7, #0]
 800a830:	6a1b      	ldr	r3, [r3, #32]
 800a832:	031b      	lsls	r3, r3, #12
 800a834:	4313      	orrs	r3, r2
 800a836:	693a      	ldr	r2, [r7, #16]
 800a838:	4313      	orrs	r3, r2
 800a83a:	613b      	str	r3, [r7, #16]
 800a83c:	68fb      	ldr	r3, [r7, #12]
 800a83e:	f023 0322 	bic.w	r3, r3, #34	; 0x22
 800a842:	60fb      	str	r3, [r7, #12]
 800a844:	68fb      	ldr	r3, [r7, #12]
 800a846:	f023 0388 	bic.w	r3, r3, #136	; 0x88
 800a84a:	60fb      	str	r3, [r7, #12]
 800a84c:	683b      	ldr	r3, [r7, #0]
 800a84e:	685a      	ldr	r2, [r3, #4]
 800a850:	683b      	ldr	r3, [r7, #0]
 800a852:	695b      	ldr	r3, [r3, #20]
 800a854:	011b      	lsls	r3, r3, #4
 800a856:	4313      	orrs	r3, r2
 800a858:	68fa      	ldr	r2, [r7, #12]
 800a85a:	4313      	orrs	r3, r2
 800a85c:	60fb      	str	r3, [r7, #12]
 800a85e:	687b      	ldr	r3, [r7, #4]
 800a860:	681b      	ldr	r3, [r3, #0]
 800a862:	697a      	ldr	r2, [r7, #20]
 800a864:	609a      	str	r2, [r3, #8]
 800a866:	687b      	ldr	r3, [r7, #4]
 800a868:	681b      	ldr	r3, [r3, #0]
 800a86a:	693a      	ldr	r2, [r7, #16]
 800a86c:	619a      	str	r2, [r3, #24]
 800a86e:	687b      	ldr	r3, [r7, #4]
 800a870:	681b      	ldr	r3, [r3, #0]
 800a872:	68fa      	ldr	r2, [r7, #12]
 800a874:	621a      	str	r2, [r3, #32]
 800a876:	687b      	ldr	r3, [r7, #4]
 800a878:	2201      	movs	r2, #1
 800a87a:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800a87e:	687b      	ldr	r3, [r7, #4]
 800a880:	2201      	movs	r2, #1
 800a882:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a886:	687b      	ldr	r3, [r7, #4]
 800a888:	2201      	movs	r2, #1
 800a88a:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a88e:	687b      	ldr	r3, [r7, #4]
 800a890:	2201      	movs	r2, #1
 800a892:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a896:	687b      	ldr	r3, [r7, #4]
 800a898:	2201      	movs	r2, #1
 800a89a:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a89e:	687b      	ldr	r3, [r7, #4]
 800a8a0:	2201      	movs	r2, #1
 800a8a2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a8a6:	2300      	movs	r3, #0
 800a8a8:	4618      	mov	r0, r3
 800a8aa:	3718      	adds	r7, #24
 800a8ac:	46bd      	mov	sp, r7
 800a8ae:	bd80      	pop	{r7, pc}

0800a8b0 <HAL_TIM_Encoder_Start>:
 800a8b0:	b580      	push	{r7, lr}
 800a8b2:	b084      	sub	sp, #16
 800a8b4:	af00      	add	r7, sp, #0
 800a8b6:	6078      	str	r0, [r7, #4]
 800a8b8:	6039      	str	r1, [r7, #0]
 800a8ba:	687b      	ldr	r3, [r7, #4]
 800a8bc:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a8c0:	73fb      	strb	r3, [r7, #15]
 800a8c2:	687b      	ldr	r3, [r7, #4]
 800a8c4:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800a8c8:	73bb      	strb	r3, [r7, #14]
 800a8ca:	687b      	ldr	r3, [r7, #4]
 800a8cc:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800a8d0:	737b      	strb	r3, [r7, #13]
 800a8d2:	687b      	ldr	r3, [r7, #4]
 800a8d4:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 800a8d8:	733b      	strb	r3, [r7, #12]
 800a8da:	683b      	ldr	r3, [r7, #0]
 800a8dc:	2b00      	cmp	r3, #0
 800a8de:	d110      	bne.n	800a902 <HAL_TIM_Encoder_Start+0x52>
 800a8e0:	7bfb      	ldrb	r3, [r7, #15]
 800a8e2:	2b01      	cmp	r3, #1
 800a8e4:	d102      	bne.n	800a8ec <HAL_TIM_Encoder_Start+0x3c>
 800a8e6:	7b7b      	ldrb	r3, [r7, #13]
 800a8e8:	2b01      	cmp	r3, #1
 800a8ea:	d001      	beq.n	800a8f0 <HAL_TIM_Encoder_Start+0x40>
 800a8ec:	2301      	movs	r3, #1
 800a8ee:	e069      	b.n	800a9c4 <HAL_TIM_Encoder_Start+0x114>
 800a8f0:	687b      	ldr	r3, [r7, #4]
 800a8f2:	2202      	movs	r2, #2
 800a8f4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a8f8:	687b      	ldr	r3, [r7, #4]
 800a8fa:	2202      	movs	r2, #2
 800a8fc:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a900:	e031      	b.n	800a966 <HAL_TIM_Encoder_Start+0xb6>
 800a902:	683b      	ldr	r3, [r7, #0]
 800a904:	2b04      	cmp	r3, #4
 800a906:	d110      	bne.n	800a92a <HAL_TIM_Encoder_Start+0x7a>
 800a908:	7bbb      	ldrb	r3, [r7, #14]
 800a90a:	2b01      	cmp	r3, #1
 800a90c:	d102      	bne.n	800a914 <HAL_TIM_Encoder_Start+0x64>
 800a90e:	7b3b      	ldrb	r3, [r7, #12]
 800a910:	2b01      	cmp	r3, #1
 800a912:	d001      	beq.n	800a918 <HAL_TIM_Encoder_Start+0x68>
 800a914:	2301      	movs	r3, #1
 800a916:	e055      	b.n	800a9c4 <HAL_TIM_Encoder_Start+0x114>
 800a918:	687b      	ldr	r3, [r7, #4]
 800a91a:	2202      	movs	r2, #2
 800a91c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a920:	687b      	ldr	r3, [r7, #4]
 800a922:	2202      	movs	r2, #2
 800a924:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a928:	e01d      	b.n	800a966 <HAL_TIM_Encoder_Start+0xb6>
 800a92a:	7bfb      	ldrb	r3, [r7, #15]
 800a92c:	2b01      	cmp	r3, #1
 800a92e:	d108      	bne.n	800a942 <HAL_TIM_Encoder_Start+0x92>
 800a930:	7bbb      	ldrb	r3, [r7, #14]
 800a932:	2b01      	cmp	r3, #1
 800a934:	d105      	bne.n	800a942 <HAL_TIM_Encoder_Start+0x92>
 800a936:	7b7b      	ldrb	r3, [r7, #13]
 800a938:	2b01      	cmp	r3, #1
 800a93a:	d102      	bne.n	800a942 <HAL_TIM_Encoder_Start+0x92>
 800a93c:	7b3b      	ldrb	r3, [r7, #12]
 800a93e:	2b01      	cmp	r3, #1
 800a940:	d001      	beq.n	800a946 <HAL_TIM_Encoder_Start+0x96>
 800a942:	2301      	movs	r3, #1
 800a944:	e03e      	b.n	800a9c4 <HAL_TIM_Encoder_Start+0x114>
 800a946:	687b      	ldr	r3, [r7, #4]
 800a948:	2202      	movs	r2, #2
 800a94a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a94e:	687b      	ldr	r3, [r7, #4]
 800a950:	2202      	movs	r2, #2
 800a952:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a956:	687b      	ldr	r3, [r7, #4]
 800a958:	2202      	movs	r2, #2
 800a95a:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a95e:	687b      	ldr	r3, [r7, #4]
 800a960:	2202      	movs	r2, #2
 800a962:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a966:	683b      	ldr	r3, [r7, #0]
 800a968:	2b00      	cmp	r3, #0
 800a96a:	d003      	beq.n	800a974 <HAL_TIM_Encoder_Start+0xc4>
 800a96c:	683b      	ldr	r3, [r7, #0]
 800a96e:	2b04      	cmp	r3, #4
 800a970:	d008      	beq.n	800a984 <HAL_TIM_Encoder_Start+0xd4>
 800a972:	e00f      	b.n	800a994 <HAL_TIM_Encoder_Start+0xe4>
 800a974:	687b      	ldr	r3, [r7, #4]
 800a976:	681b      	ldr	r3, [r3, #0]
 800a978:	2201      	movs	r2, #1
 800a97a:	2100      	movs	r1, #0
 800a97c:	4618      	mov	r0, r3
 800a97e:	f001 f88d 	bl	800ba9c <TIM_CCxChannelCmd>
 800a982:	e016      	b.n	800a9b2 <HAL_TIM_Encoder_Start+0x102>
 800a984:	687b      	ldr	r3, [r7, #4]
 800a986:	681b      	ldr	r3, [r3, #0]
 800a988:	2201      	movs	r2, #1
 800a98a:	2104      	movs	r1, #4
 800a98c:	4618      	mov	r0, r3
 800a98e:	f001 f885 	bl	800ba9c <TIM_CCxChannelCmd>
 800a992:	e00e      	b.n	800a9b2 <HAL_TIM_Encoder_Start+0x102>
 800a994:	687b      	ldr	r3, [r7, #4]
 800a996:	681b      	ldr	r3, [r3, #0]
 800a998:	2201      	movs	r2, #1
 800a99a:	2100      	movs	r1, #0
 800a99c:	4618      	mov	r0, r3
 800a99e:	f001 f87d 	bl	800ba9c <TIM_CCxChannelCmd>
 800a9a2:	687b      	ldr	r3, [r7, #4]
 800a9a4:	681b      	ldr	r3, [r3, #0]
 800a9a6:	2201      	movs	r2, #1
 800a9a8:	2104      	movs	r1, #4
 800a9aa:	4618      	mov	r0, r3
 800a9ac:	f001 f876 	bl	800ba9c <TIM_CCxChannelCmd>
 800a9b0:	bf00      	nop
 800a9b2:	687b      	ldr	r3, [r7, #4]
 800a9b4:	681b      	ldr	r3, [r3, #0]
 800a9b6:	681a      	ldr	r2, [r3, #0]
 800a9b8:	687b      	ldr	r3, [r7, #4]
 800a9ba:	681b      	ldr	r3, [r3, #0]
 800a9bc:	f042 0201 	orr.w	r2, r2, #1
 800a9c0:	601a      	str	r2, [r3, #0]
 800a9c2:	2300      	movs	r3, #0
 800a9c4:	4618      	mov	r0, r3
 800a9c6:	3710      	adds	r7, #16
 800a9c8:	46bd      	mov	sp, r7
 800a9ca:	bd80      	pop	{r7, pc}

0800a9cc <HAL_TIM_IRQHandler>:
 800a9cc:	b580      	push	{r7, lr}
 800a9ce:	b082      	sub	sp, #8
 800a9d0:	af00      	add	r7, sp, #0
 800a9d2:	6078      	str	r0, [r7, #4]
 800a9d4:	687b      	ldr	r3, [r7, #4]
 800a9d6:	681b      	ldr	r3, [r3, #0]
 800a9d8:	691b      	ldr	r3, [r3, #16]
 800a9da:	f003 0302 	and.w	r3, r3, #2
 800a9de:	2b02      	cmp	r3, #2
 800a9e0:	d122      	bne.n	800aa28 <HAL_TIM_IRQHandler+0x5c>
 800a9e2:	687b      	ldr	r3, [r7, #4]
 800a9e4:	681b      	ldr	r3, [r3, #0]
 800a9e6:	68db      	ldr	r3, [r3, #12]
 800a9e8:	f003 0302 	and.w	r3, r3, #2
 800a9ec:	2b02      	cmp	r3, #2
 800a9ee:	d11b      	bne.n	800aa28 <HAL_TIM_IRQHandler+0x5c>
 800a9f0:	687b      	ldr	r3, [r7, #4]
 800a9f2:	681b      	ldr	r3, [r3, #0]
 800a9f4:	f06f 0202 	mvn.w	r2, #2
 800a9f8:	611a      	str	r2, [r3, #16]
 800a9fa:	687b      	ldr	r3, [r7, #4]
 800a9fc:	2201      	movs	r2, #1
 800a9fe:	771a      	strb	r2, [r3, #28]
 800aa00:	687b      	ldr	r3, [r7, #4]
 800aa02:	681b      	ldr	r3, [r3, #0]
 800aa04:	699b      	ldr	r3, [r3, #24]
 800aa06:	f003 0303 	and.w	r3, r3, #3
 800aa0a:	2b00      	cmp	r3, #0
 800aa0c:	d003      	beq.n	800aa16 <HAL_TIM_IRQHandler+0x4a>
 800aa0e:	6878      	ldr	r0, [r7, #4]
 800aa10:	f000 fb1d 	bl	800b04e <HAL_TIM_IC_CaptureCallback>
 800aa14:	e005      	b.n	800aa22 <HAL_TIM_IRQHandler+0x56>
 800aa16:	6878      	ldr	r0, [r7, #4]
 800aa18:	f000 fb0f 	bl	800b03a <HAL_TIM_OC_DelayElapsedCallback>
 800aa1c:	6878      	ldr	r0, [r7, #4]
 800aa1e:	f000 fb2a 	bl	800b076 <HAL_TIM_PWM_PulseFinishedCallback>
 800aa22:	687b      	ldr	r3, [r7, #4]
 800aa24:	2200      	movs	r2, #0
 800aa26:	771a      	strb	r2, [r3, #28]
 800aa28:	687b      	ldr	r3, [r7, #4]
 800aa2a:	681b      	ldr	r3, [r3, #0]
 800aa2c:	691b      	ldr	r3, [r3, #16]
 800aa2e:	f003 0304 	and.w	r3, r3, #4
 800aa32:	2b04      	cmp	r3, #4
 800aa34:	d122      	bne.n	800aa7c <HAL_TIM_IRQHandler+0xb0>
 800aa36:	687b      	ldr	r3, [r7, #4]
 800aa38:	681b      	ldr	r3, [r3, #0]
 800aa3a:	68db      	ldr	r3, [r3, #12]
 800aa3c:	f003 0304 	and.w	r3, r3, #4
 800aa40:	2b04      	cmp	r3, #4
 800aa42:	d11b      	bne.n	800aa7c <HAL_TIM_IRQHandler+0xb0>
 800aa44:	687b      	ldr	r3, [r7, #4]
 800aa46:	681b      	ldr	r3, [r3, #0]
 800aa48:	f06f 0204 	mvn.w	r2, #4
 800aa4c:	611a      	str	r2, [r3, #16]
 800aa4e:	687b      	ldr	r3, [r7, #4]
 800aa50:	2202      	movs	r2, #2
 800aa52:	771a      	strb	r2, [r3, #28]
 800aa54:	687b      	ldr	r3, [r7, #4]
 800aa56:	681b      	ldr	r3, [r3, #0]
 800aa58:	699b      	ldr	r3, [r3, #24]
 800aa5a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800aa5e:	2b00      	cmp	r3, #0
 800aa60:	d003      	beq.n	800aa6a <HAL_TIM_IRQHandler+0x9e>
 800aa62:	6878      	ldr	r0, [r7, #4]
 800aa64:	f000 faf3 	bl	800b04e <HAL_TIM_IC_CaptureCallback>
 800aa68:	e005      	b.n	800aa76 <HAL_TIM_IRQHandler+0xaa>
 800aa6a:	6878      	ldr	r0, [r7, #4]
 800aa6c:	f000 fae5 	bl	800b03a <HAL_TIM_OC_DelayElapsedCallback>
 800aa70:	6878      	ldr	r0, [r7, #4]
 800aa72:	f000 fb00 	bl	800b076 <HAL_TIM_PWM_PulseFinishedCallback>
 800aa76:	687b      	ldr	r3, [r7, #4]
 800aa78:	2200      	movs	r2, #0
 800aa7a:	771a      	strb	r2, [r3, #28]
 800aa7c:	687b      	ldr	r3, [r7, #4]
 800aa7e:	681b      	ldr	r3, [r3, #0]
 800aa80:	691b      	ldr	r3, [r3, #16]
 800aa82:	f003 0308 	and.w	r3, r3, #8
 800aa86:	2b08      	cmp	r3, #8
 800aa88:	d122      	bne.n	800aad0 <HAL_TIM_IRQHandler+0x104>
 800aa8a:	687b      	ldr	r3, [r7, #4]
 800aa8c:	681b      	ldr	r3, [r3, #0]
 800aa8e:	68db      	ldr	r3, [r3, #12]
 800aa90:	f003 0308 	and.w	r3, r3, #8
 800aa94:	2b08      	cmp	r3, #8
 800aa96:	d11b      	bne.n	800aad0 <HAL_TIM_IRQHandler+0x104>
 800aa98:	687b      	ldr	r3, [r7, #4]
 800aa9a:	681b      	ldr	r3, [r3, #0]
 800aa9c:	f06f 0208 	mvn.w	r2, #8
 800aaa0:	611a      	str	r2, [r3, #16]
 800aaa2:	687b      	ldr	r3, [r7, #4]
 800aaa4:	2204      	movs	r2, #4
 800aaa6:	771a      	strb	r2, [r3, #28]
 800aaa8:	687b      	ldr	r3, [r7, #4]
 800aaaa:	681b      	ldr	r3, [r3, #0]
 800aaac:	69db      	ldr	r3, [r3, #28]
 800aaae:	f003 0303 	and.w	r3, r3, #3
 800aab2:	2b00      	cmp	r3, #0
 800aab4:	d003      	beq.n	800aabe <HAL_TIM_IRQHandler+0xf2>
 800aab6:	6878      	ldr	r0, [r7, #4]
 800aab8:	f000 fac9 	bl	800b04e <HAL_TIM_IC_CaptureCallback>
 800aabc:	e005      	b.n	800aaca <HAL_TIM_IRQHandler+0xfe>
 800aabe:	6878      	ldr	r0, [r7, #4]
 800aac0:	f000 fabb 	bl	800b03a <HAL_TIM_OC_DelayElapsedCallback>
 800aac4:	6878      	ldr	r0, [r7, #4]
 800aac6:	f000 fad6 	bl	800b076 <HAL_TIM_PWM_PulseFinishedCallback>
 800aaca:	687b      	ldr	r3, [r7, #4]
 800aacc:	2200      	movs	r2, #0
 800aace:	771a      	strb	r2, [r3, #28]
 800aad0:	687b      	ldr	r3, [r7, #4]
 800aad2:	681b      	ldr	r3, [r3, #0]
 800aad4:	691b      	ldr	r3, [r3, #16]
 800aad6:	f003 0310 	and.w	r3, r3, #16
 800aada:	2b10      	cmp	r3, #16
 800aadc:	d122      	bne.n	800ab24 <HAL_TIM_IRQHandler+0x158>
 800aade:	687b      	ldr	r3, [r7, #4]
 800aae0:	681b      	ldr	r3, [r3, #0]
 800aae2:	68db      	ldr	r3, [r3, #12]
 800aae4:	f003 0310 	and.w	r3, r3, #16
 800aae8:	2b10      	cmp	r3, #16
 800aaea:	d11b      	bne.n	800ab24 <HAL_TIM_IRQHandler+0x158>
 800aaec:	687b      	ldr	r3, [r7, #4]
 800aaee:	681b      	ldr	r3, [r3, #0]
 800aaf0:	f06f 0210 	mvn.w	r2, #16
 800aaf4:	611a      	str	r2, [r3, #16]
 800aaf6:	687b      	ldr	r3, [r7, #4]
 800aaf8:	2208      	movs	r2, #8
 800aafa:	771a      	strb	r2, [r3, #28]
 800aafc:	687b      	ldr	r3, [r7, #4]
 800aafe:	681b      	ldr	r3, [r3, #0]
 800ab00:	69db      	ldr	r3, [r3, #28]
 800ab02:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800ab06:	2b00      	cmp	r3, #0
 800ab08:	d003      	beq.n	800ab12 <HAL_TIM_IRQHandler+0x146>
 800ab0a:	6878      	ldr	r0, [r7, #4]
 800ab0c:	f000 fa9f 	bl	800b04e <HAL_TIM_IC_CaptureCallback>
 800ab10:	e005      	b.n	800ab1e <HAL_TIM_IRQHandler+0x152>
 800ab12:	6878      	ldr	r0, [r7, #4]
 800ab14:	f000 fa91 	bl	800b03a <HAL_TIM_OC_DelayElapsedCallback>
 800ab18:	6878      	ldr	r0, [r7, #4]
 800ab1a:	f000 faac 	bl	800b076 <HAL_TIM_PWM_PulseFinishedCallback>
 800ab1e:	687b      	ldr	r3, [r7, #4]
 800ab20:	2200      	movs	r2, #0
 800ab22:	771a      	strb	r2, [r3, #28]
 800ab24:	687b      	ldr	r3, [r7, #4]
 800ab26:	681b      	ldr	r3, [r3, #0]
 800ab28:	691b      	ldr	r3, [r3, #16]
 800ab2a:	f003 0301 	and.w	r3, r3, #1
 800ab2e:	2b01      	cmp	r3, #1
 800ab30:	d10e      	bne.n	800ab50 <HAL_TIM_IRQHandler+0x184>
 800ab32:	687b      	ldr	r3, [r7, #4]
 800ab34:	681b      	ldr	r3, [r3, #0]
 800ab36:	68db      	ldr	r3, [r3, #12]
 800ab38:	f003 0301 	and.w	r3, r3, #1
 800ab3c:	2b01      	cmp	r3, #1
 800ab3e:	d107      	bne.n	800ab50 <HAL_TIM_IRQHandler+0x184>
 800ab40:	687b      	ldr	r3, [r7, #4]
 800ab42:	681b      	ldr	r3, [r3, #0]
 800ab44:	f06f 0201 	mvn.w	r2, #1
 800ab48:	611a      	str	r2, [r3, #16]
 800ab4a:	6878      	ldr	r0, [r7, #4]
 800ab4c:	f000 fa6b 	bl	800b026 <HAL_TIM_PeriodElapsedCallback>
 800ab50:	687b      	ldr	r3, [r7, #4]
 800ab52:	681b      	ldr	r3, [r3, #0]
 800ab54:	691b      	ldr	r3, [r3, #16]
 800ab56:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ab5a:	2b80      	cmp	r3, #128	; 0x80
 800ab5c:	d10e      	bne.n	800ab7c <HAL_TIM_IRQHandler+0x1b0>
 800ab5e:	687b      	ldr	r3, [r7, #4]
 800ab60:	681b      	ldr	r3, [r3, #0]
 800ab62:	68db      	ldr	r3, [r3, #12]
 800ab64:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ab68:	2b80      	cmp	r3, #128	; 0x80
 800ab6a:	d107      	bne.n	800ab7c <HAL_TIM_IRQHandler+0x1b0>
 800ab6c:	687b      	ldr	r3, [r7, #4]
 800ab6e:	681b      	ldr	r3, [r3, #0]
 800ab70:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800ab74:	611a      	str	r2, [r3, #16]
 800ab76:	6878      	ldr	r0, [r7, #4]
 800ab78:	f001 f88e 	bl	800bc98 <HAL_TIMEx_BreakCallback>
 800ab7c:	687b      	ldr	r3, [r7, #4]
 800ab7e:	681b      	ldr	r3, [r3, #0]
 800ab80:	691b      	ldr	r3, [r3, #16]
 800ab82:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ab86:	2b40      	cmp	r3, #64	; 0x40
 800ab88:	d10e      	bne.n	800aba8 <HAL_TIM_IRQHandler+0x1dc>
 800ab8a:	687b      	ldr	r3, [r7, #4]
 800ab8c:	681b      	ldr	r3, [r3, #0]
 800ab8e:	68db      	ldr	r3, [r3, #12]
 800ab90:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ab94:	2b40      	cmp	r3, #64	; 0x40
 800ab96:	d107      	bne.n	800aba8 <HAL_TIM_IRQHandler+0x1dc>
 800ab98:	687b      	ldr	r3, [r7, #4]
 800ab9a:	681b      	ldr	r3, [r3, #0]
 800ab9c:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800aba0:	611a      	str	r2, [r3, #16]
 800aba2:	6878      	ldr	r0, [r7, #4]
 800aba4:	f000 fa71 	bl	800b08a <HAL_TIM_TriggerCallback>
 800aba8:	687b      	ldr	r3, [r7, #4]
 800abaa:	681b      	ldr	r3, [r3, #0]
 800abac:	691b      	ldr	r3, [r3, #16]
 800abae:	f003 0320 	and.w	r3, r3, #32
 800abb2:	2b20      	cmp	r3, #32
 800abb4:	d10e      	bne.n	800abd4 <HAL_TIM_IRQHandler+0x208>
 800abb6:	687b      	ldr	r3, [r7, #4]
 800abb8:	681b      	ldr	r3, [r3, #0]
 800abba:	68db      	ldr	r3, [r3, #12]
 800abbc:	f003 0320 	and.w	r3, r3, #32
 800abc0:	2b20      	cmp	r3, #32
 800abc2:	d107      	bne.n	800abd4 <HAL_TIM_IRQHandler+0x208>
 800abc4:	687b      	ldr	r3, [r7, #4]
 800abc6:	681b      	ldr	r3, [r3, #0]
 800abc8:	f06f 0220 	mvn.w	r2, #32
 800abcc:	611a      	str	r2, [r3, #16]
 800abce:	6878      	ldr	r0, [r7, #4]
 800abd0:	f001 f858 	bl	800bc84 <HAL_TIMEx_CommutCallback>
 800abd4:	bf00      	nop
 800abd6:	3708      	adds	r7, #8
 800abd8:	46bd      	mov	sp, r7
 800abda:	bd80      	pop	{r7, pc}

0800abdc <HAL_TIM_IC_ConfigChannel>:
 800abdc:	b580      	push	{r7, lr}
 800abde:	b086      	sub	sp, #24
 800abe0:	af00      	add	r7, sp, #0
 800abe2:	60f8      	str	r0, [r7, #12]
 800abe4:	60b9      	str	r1, [r7, #8]
 800abe6:	607a      	str	r2, [r7, #4]
 800abe8:	2300      	movs	r3, #0
 800abea:	75fb      	strb	r3, [r7, #23]
 800abec:	68fb      	ldr	r3, [r7, #12]
 800abee:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800abf2:	2b01      	cmp	r3, #1
 800abf4:	d101      	bne.n	800abfa <HAL_TIM_IC_ConfigChannel+0x1e>
 800abf6:	2302      	movs	r3, #2
 800abf8:	e088      	b.n	800ad0c <HAL_TIM_IC_ConfigChannel+0x130>
 800abfa:	68fb      	ldr	r3, [r7, #12]
 800abfc:	2201      	movs	r2, #1
 800abfe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ac02:	687b      	ldr	r3, [r7, #4]
 800ac04:	2b00      	cmp	r3, #0
 800ac06:	d11b      	bne.n	800ac40 <HAL_TIM_IC_ConfigChannel+0x64>
 800ac08:	68fb      	ldr	r3, [r7, #12]
 800ac0a:	6818      	ldr	r0, [r3, #0]
 800ac0c:	68bb      	ldr	r3, [r7, #8]
 800ac0e:	6819      	ldr	r1, [r3, #0]
 800ac10:	68bb      	ldr	r3, [r7, #8]
 800ac12:	685a      	ldr	r2, [r3, #4]
 800ac14:	68bb      	ldr	r3, [r7, #8]
 800ac16:	68db      	ldr	r3, [r3, #12]
 800ac18:	f000 fd7c 	bl	800b714 <TIM_TI1_SetConfig>
 800ac1c:	68fb      	ldr	r3, [r7, #12]
 800ac1e:	681b      	ldr	r3, [r3, #0]
 800ac20:	699a      	ldr	r2, [r3, #24]
 800ac22:	68fb      	ldr	r3, [r7, #12]
 800ac24:	681b      	ldr	r3, [r3, #0]
 800ac26:	f022 020c 	bic.w	r2, r2, #12
 800ac2a:	619a      	str	r2, [r3, #24]
 800ac2c:	68fb      	ldr	r3, [r7, #12]
 800ac2e:	681b      	ldr	r3, [r3, #0]
 800ac30:	6999      	ldr	r1, [r3, #24]
 800ac32:	68bb      	ldr	r3, [r7, #8]
 800ac34:	689a      	ldr	r2, [r3, #8]
 800ac36:	68fb      	ldr	r3, [r7, #12]
 800ac38:	681b      	ldr	r3, [r3, #0]
 800ac3a:	430a      	orrs	r2, r1
 800ac3c:	619a      	str	r2, [r3, #24]
 800ac3e:	e060      	b.n	800ad02 <HAL_TIM_IC_ConfigChannel+0x126>
 800ac40:	687b      	ldr	r3, [r7, #4]
 800ac42:	2b04      	cmp	r3, #4
 800ac44:	d11c      	bne.n	800ac80 <HAL_TIM_IC_ConfigChannel+0xa4>
 800ac46:	68fb      	ldr	r3, [r7, #12]
 800ac48:	6818      	ldr	r0, [r3, #0]
 800ac4a:	68bb      	ldr	r3, [r7, #8]
 800ac4c:	6819      	ldr	r1, [r3, #0]
 800ac4e:	68bb      	ldr	r3, [r7, #8]
 800ac50:	685a      	ldr	r2, [r3, #4]
 800ac52:	68bb      	ldr	r3, [r7, #8]
 800ac54:	68db      	ldr	r3, [r3, #12]
 800ac56:	f000 fe00 	bl	800b85a <TIM_TI2_SetConfig>
 800ac5a:	68fb      	ldr	r3, [r7, #12]
 800ac5c:	681b      	ldr	r3, [r3, #0]
 800ac5e:	699a      	ldr	r2, [r3, #24]
 800ac60:	68fb      	ldr	r3, [r7, #12]
 800ac62:	681b      	ldr	r3, [r3, #0]
 800ac64:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 800ac68:	619a      	str	r2, [r3, #24]
 800ac6a:	68fb      	ldr	r3, [r7, #12]
 800ac6c:	681b      	ldr	r3, [r3, #0]
 800ac6e:	6999      	ldr	r1, [r3, #24]
 800ac70:	68bb      	ldr	r3, [r7, #8]
 800ac72:	689b      	ldr	r3, [r3, #8]
 800ac74:	021a      	lsls	r2, r3, #8
 800ac76:	68fb      	ldr	r3, [r7, #12]
 800ac78:	681b      	ldr	r3, [r3, #0]
 800ac7a:	430a      	orrs	r2, r1
 800ac7c:	619a      	str	r2, [r3, #24]
 800ac7e:	e040      	b.n	800ad02 <HAL_TIM_IC_ConfigChannel+0x126>
 800ac80:	687b      	ldr	r3, [r7, #4]
 800ac82:	2b08      	cmp	r3, #8
 800ac84:	d11b      	bne.n	800acbe <HAL_TIM_IC_ConfigChannel+0xe2>
 800ac86:	68fb      	ldr	r3, [r7, #12]
 800ac88:	6818      	ldr	r0, [r3, #0]
 800ac8a:	68bb      	ldr	r3, [r7, #8]
 800ac8c:	6819      	ldr	r1, [r3, #0]
 800ac8e:	68bb      	ldr	r3, [r7, #8]
 800ac90:	685a      	ldr	r2, [r3, #4]
 800ac92:	68bb      	ldr	r3, [r7, #8]
 800ac94:	68db      	ldr	r3, [r3, #12]
 800ac96:	f000 fe4d 	bl	800b934 <TIM_TI3_SetConfig>
 800ac9a:	68fb      	ldr	r3, [r7, #12]
 800ac9c:	681b      	ldr	r3, [r3, #0]
 800ac9e:	69da      	ldr	r2, [r3, #28]
 800aca0:	68fb      	ldr	r3, [r7, #12]
 800aca2:	681b      	ldr	r3, [r3, #0]
 800aca4:	f022 020c 	bic.w	r2, r2, #12
 800aca8:	61da      	str	r2, [r3, #28]
 800acaa:	68fb      	ldr	r3, [r7, #12]
 800acac:	681b      	ldr	r3, [r3, #0]
 800acae:	69d9      	ldr	r1, [r3, #28]
 800acb0:	68bb      	ldr	r3, [r7, #8]
 800acb2:	689a      	ldr	r2, [r3, #8]
 800acb4:	68fb      	ldr	r3, [r7, #12]
 800acb6:	681b      	ldr	r3, [r3, #0]
 800acb8:	430a      	orrs	r2, r1
 800acba:	61da      	str	r2, [r3, #28]
 800acbc:	e021      	b.n	800ad02 <HAL_TIM_IC_ConfigChannel+0x126>
 800acbe:	687b      	ldr	r3, [r7, #4]
 800acc0:	2b0c      	cmp	r3, #12
 800acc2:	d11c      	bne.n	800acfe <HAL_TIM_IC_ConfigChannel+0x122>
 800acc4:	68fb      	ldr	r3, [r7, #12]
 800acc6:	6818      	ldr	r0, [r3, #0]
 800acc8:	68bb      	ldr	r3, [r7, #8]
 800acca:	6819      	ldr	r1, [r3, #0]
 800accc:	68bb      	ldr	r3, [r7, #8]
 800acce:	685a      	ldr	r2, [r3, #4]
 800acd0:	68bb      	ldr	r3, [r7, #8]
 800acd2:	68db      	ldr	r3, [r3, #12]
 800acd4:	f000 fe6a 	bl	800b9ac <TIM_TI4_SetConfig>
 800acd8:	68fb      	ldr	r3, [r7, #12]
 800acda:	681b      	ldr	r3, [r3, #0]
 800acdc:	69da      	ldr	r2, [r3, #28]
 800acde:	68fb      	ldr	r3, [r7, #12]
 800ace0:	681b      	ldr	r3, [r3, #0]
 800ace2:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 800ace6:	61da      	str	r2, [r3, #28]
 800ace8:	68fb      	ldr	r3, [r7, #12]
 800acea:	681b      	ldr	r3, [r3, #0]
 800acec:	69d9      	ldr	r1, [r3, #28]
 800acee:	68bb      	ldr	r3, [r7, #8]
 800acf0:	689b      	ldr	r3, [r3, #8]
 800acf2:	021a      	lsls	r2, r3, #8
 800acf4:	68fb      	ldr	r3, [r7, #12]
 800acf6:	681b      	ldr	r3, [r3, #0]
 800acf8:	430a      	orrs	r2, r1
 800acfa:	61da      	str	r2, [r3, #28]
 800acfc:	e001      	b.n	800ad02 <HAL_TIM_IC_ConfigChannel+0x126>
 800acfe:	2301      	movs	r3, #1
 800ad00:	75fb      	strb	r3, [r7, #23]
 800ad02:	68fb      	ldr	r3, [r7, #12]
 800ad04:	2200      	movs	r2, #0
 800ad06:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ad0a:	7dfb      	ldrb	r3, [r7, #23]
 800ad0c:	4618      	mov	r0, r3
 800ad0e:	3718      	adds	r7, #24
 800ad10:	46bd      	mov	sp, r7
 800ad12:	bd80      	pop	{r7, pc}

0800ad14 <HAL_TIM_PWM_ConfigChannel>:
 800ad14:	b580      	push	{r7, lr}
 800ad16:	b086      	sub	sp, #24
 800ad18:	af00      	add	r7, sp, #0
 800ad1a:	60f8      	str	r0, [r7, #12]
 800ad1c:	60b9      	str	r1, [r7, #8]
 800ad1e:	607a      	str	r2, [r7, #4]
 800ad20:	2300      	movs	r3, #0
 800ad22:	75fb      	strb	r3, [r7, #23]
 800ad24:	68fb      	ldr	r3, [r7, #12]
 800ad26:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800ad2a:	2b01      	cmp	r3, #1
 800ad2c:	d101      	bne.n	800ad32 <HAL_TIM_PWM_ConfigChannel+0x1e>
 800ad2e:	2302      	movs	r3, #2
 800ad30:	e0ae      	b.n	800ae90 <HAL_TIM_PWM_ConfigChannel+0x17c>
 800ad32:	68fb      	ldr	r3, [r7, #12]
 800ad34:	2201      	movs	r2, #1
 800ad36:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ad3a:	687b      	ldr	r3, [r7, #4]
 800ad3c:	2b0c      	cmp	r3, #12
 800ad3e:	f200 809f 	bhi.w	800ae80 <HAL_TIM_PWM_ConfigChannel+0x16c>
 800ad42:	a201      	add	r2, pc, #4	; (adr r2, 800ad48 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800ad44:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ad48:	0800ad7d 	.word	0x0800ad7d
 800ad4c:	0800ae81 	.word	0x0800ae81
 800ad50:	0800ae81 	.word	0x0800ae81
 800ad54:	0800ae81 	.word	0x0800ae81
 800ad58:	0800adbd 	.word	0x0800adbd
 800ad5c:	0800ae81 	.word	0x0800ae81
 800ad60:	0800ae81 	.word	0x0800ae81
 800ad64:	0800ae81 	.word	0x0800ae81
 800ad68:	0800adff 	.word	0x0800adff
 800ad6c:	0800ae81 	.word	0x0800ae81
 800ad70:	0800ae81 	.word	0x0800ae81
 800ad74:	0800ae81 	.word	0x0800ae81
 800ad78:	0800ae3f 	.word	0x0800ae3f
 800ad7c:	68fb      	ldr	r3, [r7, #12]
 800ad7e:	681b      	ldr	r3, [r3, #0]
 800ad80:	68b9      	ldr	r1, [r7, #8]
 800ad82:	4618      	mov	r0, r3
 800ad84:	f000 fb16 	bl	800b3b4 <TIM_OC1_SetConfig>
 800ad88:	68fb      	ldr	r3, [r7, #12]
 800ad8a:	681b      	ldr	r3, [r3, #0]
 800ad8c:	699a      	ldr	r2, [r3, #24]
 800ad8e:	68fb      	ldr	r3, [r7, #12]
 800ad90:	681b      	ldr	r3, [r3, #0]
 800ad92:	f042 0208 	orr.w	r2, r2, #8
 800ad96:	619a      	str	r2, [r3, #24]
 800ad98:	68fb      	ldr	r3, [r7, #12]
 800ad9a:	681b      	ldr	r3, [r3, #0]
 800ad9c:	699a      	ldr	r2, [r3, #24]
 800ad9e:	68fb      	ldr	r3, [r7, #12]
 800ada0:	681b      	ldr	r3, [r3, #0]
 800ada2:	f022 0204 	bic.w	r2, r2, #4
 800ada6:	619a      	str	r2, [r3, #24]
 800ada8:	68fb      	ldr	r3, [r7, #12]
 800adaa:	681b      	ldr	r3, [r3, #0]
 800adac:	6999      	ldr	r1, [r3, #24]
 800adae:	68bb      	ldr	r3, [r7, #8]
 800adb0:	691a      	ldr	r2, [r3, #16]
 800adb2:	68fb      	ldr	r3, [r7, #12]
 800adb4:	681b      	ldr	r3, [r3, #0]
 800adb6:	430a      	orrs	r2, r1
 800adb8:	619a      	str	r2, [r3, #24]
 800adba:	e064      	b.n	800ae86 <HAL_TIM_PWM_ConfigChannel+0x172>
 800adbc:	68fb      	ldr	r3, [r7, #12]
 800adbe:	681b      	ldr	r3, [r3, #0]
 800adc0:	68b9      	ldr	r1, [r7, #8]
 800adc2:	4618      	mov	r0, r3
 800adc4:	f000 fb66 	bl	800b494 <TIM_OC2_SetConfig>
 800adc8:	68fb      	ldr	r3, [r7, #12]
 800adca:	681b      	ldr	r3, [r3, #0]
 800adcc:	699a      	ldr	r2, [r3, #24]
 800adce:	68fb      	ldr	r3, [r7, #12]
 800add0:	681b      	ldr	r3, [r3, #0]
 800add2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800add6:	619a      	str	r2, [r3, #24]
 800add8:	68fb      	ldr	r3, [r7, #12]
 800adda:	681b      	ldr	r3, [r3, #0]
 800addc:	699a      	ldr	r2, [r3, #24]
 800adde:	68fb      	ldr	r3, [r7, #12]
 800ade0:	681b      	ldr	r3, [r3, #0]
 800ade2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ade6:	619a      	str	r2, [r3, #24]
 800ade8:	68fb      	ldr	r3, [r7, #12]
 800adea:	681b      	ldr	r3, [r3, #0]
 800adec:	6999      	ldr	r1, [r3, #24]
 800adee:	68bb      	ldr	r3, [r7, #8]
 800adf0:	691b      	ldr	r3, [r3, #16]
 800adf2:	021a      	lsls	r2, r3, #8
 800adf4:	68fb      	ldr	r3, [r7, #12]
 800adf6:	681b      	ldr	r3, [r3, #0]
 800adf8:	430a      	orrs	r2, r1
 800adfa:	619a      	str	r2, [r3, #24]
 800adfc:	e043      	b.n	800ae86 <HAL_TIM_PWM_ConfigChannel+0x172>
 800adfe:	68fb      	ldr	r3, [r7, #12]
 800ae00:	681b      	ldr	r3, [r3, #0]
 800ae02:	68b9      	ldr	r1, [r7, #8]
 800ae04:	4618      	mov	r0, r3
 800ae06:	f000 fbbb 	bl	800b580 <TIM_OC3_SetConfig>
 800ae0a:	68fb      	ldr	r3, [r7, #12]
 800ae0c:	681b      	ldr	r3, [r3, #0]
 800ae0e:	69da      	ldr	r2, [r3, #28]
 800ae10:	68fb      	ldr	r3, [r7, #12]
 800ae12:	681b      	ldr	r3, [r3, #0]
 800ae14:	f042 0208 	orr.w	r2, r2, #8
 800ae18:	61da      	str	r2, [r3, #28]
 800ae1a:	68fb      	ldr	r3, [r7, #12]
 800ae1c:	681b      	ldr	r3, [r3, #0]
 800ae1e:	69da      	ldr	r2, [r3, #28]
 800ae20:	68fb      	ldr	r3, [r7, #12]
 800ae22:	681b      	ldr	r3, [r3, #0]
 800ae24:	f022 0204 	bic.w	r2, r2, #4
 800ae28:	61da      	str	r2, [r3, #28]
 800ae2a:	68fb      	ldr	r3, [r7, #12]
 800ae2c:	681b      	ldr	r3, [r3, #0]
 800ae2e:	69d9      	ldr	r1, [r3, #28]
 800ae30:	68bb      	ldr	r3, [r7, #8]
 800ae32:	691a      	ldr	r2, [r3, #16]
 800ae34:	68fb      	ldr	r3, [r7, #12]
 800ae36:	681b      	ldr	r3, [r3, #0]
 800ae38:	430a      	orrs	r2, r1
 800ae3a:	61da      	str	r2, [r3, #28]
 800ae3c:	e023      	b.n	800ae86 <HAL_TIM_PWM_ConfigChannel+0x172>
 800ae3e:	68fb      	ldr	r3, [r7, #12]
 800ae40:	681b      	ldr	r3, [r3, #0]
 800ae42:	68b9      	ldr	r1, [r7, #8]
 800ae44:	4618      	mov	r0, r3
 800ae46:	f000 fc0f 	bl	800b668 <TIM_OC4_SetConfig>
 800ae4a:	68fb      	ldr	r3, [r7, #12]
 800ae4c:	681b      	ldr	r3, [r3, #0]
 800ae4e:	69da      	ldr	r2, [r3, #28]
 800ae50:	68fb      	ldr	r3, [r7, #12]
 800ae52:	681b      	ldr	r3, [r3, #0]
 800ae54:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800ae58:	61da      	str	r2, [r3, #28]
 800ae5a:	68fb      	ldr	r3, [r7, #12]
 800ae5c:	681b      	ldr	r3, [r3, #0]
 800ae5e:	69da      	ldr	r2, [r3, #28]
 800ae60:	68fb      	ldr	r3, [r7, #12]
 800ae62:	681b      	ldr	r3, [r3, #0]
 800ae64:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ae68:	61da      	str	r2, [r3, #28]
 800ae6a:	68fb      	ldr	r3, [r7, #12]
 800ae6c:	681b      	ldr	r3, [r3, #0]
 800ae6e:	69d9      	ldr	r1, [r3, #28]
 800ae70:	68bb      	ldr	r3, [r7, #8]
 800ae72:	691b      	ldr	r3, [r3, #16]
 800ae74:	021a      	lsls	r2, r3, #8
 800ae76:	68fb      	ldr	r3, [r7, #12]
 800ae78:	681b      	ldr	r3, [r3, #0]
 800ae7a:	430a      	orrs	r2, r1
 800ae7c:	61da      	str	r2, [r3, #28]
 800ae7e:	e002      	b.n	800ae86 <HAL_TIM_PWM_ConfigChannel+0x172>
 800ae80:	2301      	movs	r3, #1
 800ae82:	75fb      	strb	r3, [r7, #23]
 800ae84:	bf00      	nop
 800ae86:	68fb      	ldr	r3, [r7, #12]
 800ae88:	2200      	movs	r2, #0
 800ae8a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ae8e:	7dfb      	ldrb	r3, [r7, #23]
 800ae90:	4618      	mov	r0, r3
 800ae92:	3718      	adds	r7, #24
 800ae94:	46bd      	mov	sp, r7
 800ae96:	bd80      	pop	{r7, pc}

0800ae98 <HAL_TIM_ConfigClockSource>:
 800ae98:	b580      	push	{r7, lr}
 800ae9a:	b084      	sub	sp, #16
 800ae9c:	af00      	add	r7, sp, #0
 800ae9e:	6078      	str	r0, [r7, #4]
 800aea0:	6039      	str	r1, [r7, #0]
 800aea2:	2300      	movs	r3, #0
 800aea4:	73fb      	strb	r3, [r7, #15]
 800aea6:	687b      	ldr	r3, [r7, #4]
 800aea8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800aeac:	2b01      	cmp	r3, #1
 800aeae:	d101      	bne.n	800aeb4 <HAL_TIM_ConfigClockSource+0x1c>
 800aeb0:	2302      	movs	r3, #2
 800aeb2:	e0b4      	b.n	800b01e <HAL_TIM_ConfigClockSource+0x186>
 800aeb4:	687b      	ldr	r3, [r7, #4]
 800aeb6:	2201      	movs	r2, #1
 800aeb8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800aebc:	687b      	ldr	r3, [r7, #4]
 800aebe:	2202      	movs	r2, #2
 800aec0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800aec4:	687b      	ldr	r3, [r7, #4]
 800aec6:	681b      	ldr	r3, [r3, #0]
 800aec8:	689b      	ldr	r3, [r3, #8]
 800aeca:	60bb      	str	r3, [r7, #8]
 800aecc:	68bb      	ldr	r3, [r7, #8]
 800aece:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800aed2:	60bb      	str	r3, [r7, #8]
 800aed4:	68bb      	ldr	r3, [r7, #8]
 800aed6:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800aeda:	60bb      	str	r3, [r7, #8]
 800aedc:	687b      	ldr	r3, [r7, #4]
 800aede:	681b      	ldr	r3, [r3, #0]
 800aee0:	68ba      	ldr	r2, [r7, #8]
 800aee2:	609a      	str	r2, [r3, #8]
 800aee4:	683b      	ldr	r3, [r7, #0]
 800aee6:	681b      	ldr	r3, [r3, #0]
 800aee8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800aeec:	d03e      	beq.n	800af6c <HAL_TIM_ConfigClockSource+0xd4>
 800aeee:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800aef2:	f200 8087 	bhi.w	800b004 <HAL_TIM_ConfigClockSource+0x16c>
 800aef6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800aefa:	f000 8086 	beq.w	800b00a <HAL_TIM_ConfigClockSource+0x172>
 800aefe:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800af02:	d87f      	bhi.n	800b004 <HAL_TIM_ConfigClockSource+0x16c>
 800af04:	2b70      	cmp	r3, #112	; 0x70
 800af06:	d01a      	beq.n	800af3e <HAL_TIM_ConfigClockSource+0xa6>
 800af08:	2b70      	cmp	r3, #112	; 0x70
 800af0a:	d87b      	bhi.n	800b004 <HAL_TIM_ConfigClockSource+0x16c>
 800af0c:	2b60      	cmp	r3, #96	; 0x60
 800af0e:	d050      	beq.n	800afb2 <HAL_TIM_ConfigClockSource+0x11a>
 800af10:	2b60      	cmp	r3, #96	; 0x60
 800af12:	d877      	bhi.n	800b004 <HAL_TIM_ConfigClockSource+0x16c>
 800af14:	2b50      	cmp	r3, #80	; 0x50
 800af16:	d03c      	beq.n	800af92 <HAL_TIM_ConfigClockSource+0xfa>
 800af18:	2b50      	cmp	r3, #80	; 0x50
 800af1a:	d873      	bhi.n	800b004 <HAL_TIM_ConfigClockSource+0x16c>
 800af1c:	2b40      	cmp	r3, #64	; 0x40
 800af1e:	d058      	beq.n	800afd2 <HAL_TIM_ConfigClockSource+0x13a>
 800af20:	2b40      	cmp	r3, #64	; 0x40
 800af22:	d86f      	bhi.n	800b004 <HAL_TIM_ConfigClockSource+0x16c>
 800af24:	2b30      	cmp	r3, #48	; 0x30
 800af26:	d064      	beq.n	800aff2 <HAL_TIM_ConfigClockSource+0x15a>
 800af28:	2b30      	cmp	r3, #48	; 0x30
 800af2a:	d86b      	bhi.n	800b004 <HAL_TIM_ConfigClockSource+0x16c>
 800af2c:	2b20      	cmp	r3, #32
 800af2e:	d060      	beq.n	800aff2 <HAL_TIM_ConfigClockSource+0x15a>
 800af30:	2b20      	cmp	r3, #32
 800af32:	d867      	bhi.n	800b004 <HAL_TIM_ConfigClockSource+0x16c>
 800af34:	2b00      	cmp	r3, #0
 800af36:	d05c      	beq.n	800aff2 <HAL_TIM_ConfigClockSource+0x15a>
 800af38:	2b10      	cmp	r3, #16
 800af3a:	d05a      	beq.n	800aff2 <HAL_TIM_ConfigClockSource+0x15a>
 800af3c:	e062      	b.n	800b004 <HAL_TIM_ConfigClockSource+0x16c>
 800af3e:	687b      	ldr	r3, [r7, #4]
 800af40:	6818      	ldr	r0, [r3, #0]
 800af42:	683b      	ldr	r3, [r7, #0]
 800af44:	6899      	ldr	r1, [r3, #8]
 800af46:	683b      	ldr	r3, [r7, #0]
 800af48:	685a      	ldr	r2, [r3, #4]
 800af4a:	683b      	ldr	r3, [r7, #0]
 800af4c:	68db      	ldr	r3, [r3, #12]
 800af4e:	f000 fd85 	bl	800ba5c <TIM_ETR_SetConfig>
 800af52:	687b      	ldr	r3, [r7, #4]
 800af54:	681b      	ldr	r3, [r3, #0]
 800af56:	689b      	ldr	r3, [r3, #8]
 800af58:	60bb      	str	r3, [r7, #8]
 800af5a:	68bb      	ldr	r3, [r7, #8]
 800af5c:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800af60:	60bb      	str	r3, [r7, #8]
 800af62:	687b      	ldr	r3, [r7, #4]
 800af64:	681b      	ldr	r3, [r3, #0]
 800af66:	68ba      	ldr	r2, [r7, #8]
 800af68:	609a      	str	r2, [r3, #8]
 800af6a:	e04f      	b.n	800b00c <HAL_TIM_ConfigClockSource+0x174>
 800af6c:	687b      	ldr	r3, [r7, #4]
 800af6e:	6818      	ldr	r0, [r3, #0]
 800af70:	683b      	ldr	r3, [r7, #0]
 800af72:	6899      	ldr	r1, [r3, #8]
 800af74:	683b      	ldr	r3, [r7, #0]
 800af76:	685a      	ldr	r2, [r3, #4]
 800af78:	683b      	ldr	r3, [r7, #0]
 800af7a:	68db      	ldr	r3, [r3, #12]
 800af7c:	f000 fd6e 	bl	800ba5c <TIM_ETR_SetConfig>
 800af80:	687b      	ldr	r3, [r7, #4]
 800af82:	681b      	ldr	r3, [r3, #0]
 800af84:	689a      	ldr	r2, [r3, #8]
 800af86:	687b      	ldr	r3, [r7, #4]
 800af88:	681b      	ldr	r3, [r3, #0]
 800af8a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800af8e:	609a      	str	r2, [r3, #8]
 800af90:	e03c      	b.n	800b00c <HAL_TIM_ConfigClockSource+0x174>
 800af92:	687b      	ldr	r3, [r7, #4]
 800af94:	6818      	ldr	r0, [r3, #0]
 800af96:	683b      	ldr	r3, [r7, #0]
 800af98:	6859      	ldr	r1, [r3, #4]
 800af9a:	683b      	ldr	r3, [r7, #0]
 800af9c:	68db      	ldr	r3, [r3, #12]
 800af9e:	461a      	mov	r2, r3
 800afa0:	f000 fc2c 	bl	800b7fc <TIM_TI1_ConfigInputStage>
 800afa4:	687b      	ldr	r3, [r7, #4]
 800afa6:	681b      	ldr	r3, [r3, #0]
 800afa8:	2150      	movs	r1, #80	; 0x50
 800afaa:	4618      	mov	r0, r3
 800afac:	f000 fd3b 	bl	800ba26 <TIM_ITRx_SetConfig>
 800afb0:	e02c      	b.n	800b00c <HAL_TIM_ConfigClockSource+0x174>
 800afb2:	687b      	ldr	r3, [r7, #4]
 800afb4:	6818      	ldr	r0, [r3, #0]
 800afb6:	683b      	ldr	r3, [r7, #0]
 800afb8:	6859      	ldr	r1, [r3, #4]
 800afba:	683b      	ldr	r3, [r7, #0]
 800afbc:	68db      	ldr	r3, [r3, #12]
 800afbe:	461a      	mov	r2, r3
 800afc0:	f000 fc88 	bl	800b8d4 <TIM_TI2_ConfigInputStage>
 800afc4:	687b      	ldr	r3, [r7, #4]
 800afc6:	681b      	ldr	r3, [r3, #0]
 800afc8:	2160      	movs	r1, #96	; 0x60
 800afca:	4618      	mov	r0, r3
 800afcc:	f000 fd2b 	bl	800ba26 <TIM_ITRx_SetConfig>
 800afd0:	e01c      	b.n	800b00c <HAL_TIM_ConfigClockSource+0x174>
 800afd2:	687b      	ldr	r3, [r7, #4]
 800afd4:	6818      	ldr	r0, [r3, #0]
 800afd6:	683b      	ldr	r3, [r7, #0]
 800afd8:	6859      	ldr	r1, [r3, #4]
 800afda:	683b      	ldr	r3, [r7, #0]
 800afdc:	68db      	ldr	r3, [r3, #12]
 800afde:	461a      	mov	r2, r3
 800afe0:	f000 fc0c 	bl	800b7fc <TIM_TI1_ConfigInputStage>
 800afe4:	687b      	ldr	r3, [r7, #4]
 800afe6:	681b      	ldr	r3, [r3, #0]
 800afe8:	2140      	movs	r1, #64	; 0x40
 800afea:	4618      	mov	r0, r3
 800afec:	f000 fd1b 	bl	800ba26 <TIM_ITRx_SetConfig>
 800aff0:	e00c      	b.n	800b00c <HAL_TIM_ConfigClockSource+0x174>
 800aff2:	687b      	ldr	r3, [r7, #4]
 800aff4:	681a      	ldr	r2, [r3, #0]
 800aff6:	683b      	ldr	r3, [r7, #0]
 800aff8:	681b      	ldr	r3, [r3, #0]
 800affa:	4619      	mov	r1, r3
 800affc:	4610      	mov	r0, r2
 800affe:	f000 fd12 	bl	800ba26 <TIM_ITRx_SetConfig>
 800b002:	e003      	b.n	800b00c <HAL_TIM_ConfigClockSource+0x174>
 800b004:	2301      	movs	r3, #1
 800b006:	73fb      	strb	r3, [r7, #15]
 800b008:	e000      	b.n	800b00c <HAL_TIM_ConfigClockSource+0x174>
 800b00a:	bf00      	nop
 800b00c:	687b      	ldr	r3, [r7, #4]
 800b00e:	2201      	movs	r2, #1
 800b010:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b014:	687b      	ldr	r3, [r7, #4]
 800b016:	2200      	movs	r2, #0
 800b018:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b01c:	7bfb      	ldrb	r3, [r7, #15]
 800b01e:	4618      	mov	r0, r3
 800b020:	3710      	adds	r7, #16
 800b022:	46bd      	mov	sp, r7
 800b024:	bd80      	pop	{r7, pc}

0800b026 <HAL_TIM_PeriodElapsedCallback>:
 800b026:	b480      	push	{r7}
 800b028:	b083      	sub	sp, #12
 800b02a:	af00      	add	r7, sp, #0
 800b02c:	6078      	str	r0, [r7, #4]
 800b02e:	bf00      	nop
 800b030:	370c      	adds	r7, #12
 800b032:	46bd      	mov	sp, r7
 800b034:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b038:	4770      	bx	lr

0800b03a <HAL_TIM_OC_DelayElapsedCallback>:
 800b03a:	b480      	push	{r7}
 800b03c:	b083      	sub	sp, #12
 800b03e:	af00      	add	r7, sp, #0
 800b040:	6078      	str	r0, [r7, #4]
 800b042:	bf00      	nop
 800b044:	370c      	adds	r7, #12
 800b046:	46bd      	mov	sp, r7
 800b048:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b04c:	4770      	bx	lr

0800b04e <HAL_TIM_IC_CaptureCallback>:
 800b04e:	b480      	push	{r7}
 800b050:	b083      	sub	sp, #12
 800b052:	af00      	add	r7, sp, #0
 800b054:	6078      	str	r0, [r7, #4]
 800b056:	bf00      	nop
 800b058:	370c      	adds	r7, #12
 800b05a:	46bd      	mov	sp, r7
 800b05c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b060:	4770      	bx	lr

0800b062 <HAL_TIM_IC_CaptureHalfCpltCallback>:
 800b062:	b480      	push	{r7}
 800b064:	b083      	sub	sp, #12
 800b066:	af00      	add	r7, sp, #0
 800b068:	6078      	str	r0, [r7, #4]
 800b06a:	bf00      	nop
 800b06c:	370c      	adds	r7, #12
 800b06e:	46bd      	mov	sp, r7
 800b070:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b074:	4770      	bx	lr

0800b076 <HAL_TIM_PWM_PulseFinishedCallback>:
 800b076:	b480      	push	{r7}
 800b078:	b083      	sub	sp, #12
 800b07a:	af00      	add	r7, sp, #0
 800b07c:	6078      	str	r0, [r7, #4]
 800b07e:	bf00      	nop
 800b080:	370c      	adds	r7, #12
 800b082:	46bd      	mov	sp, r7
 800b084:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b088:	4770      	bx	lr

0800b08a <HAL_TIM_TriggerCallback>:
 800b08a:	b480      	push	{r7}
 800b08c:	b083      	sub	sp, #12
 800b08e:	af00      	add	r7, sp, #0
 800b090:	6078      	str	r0, [r7, #4]
 800b092:	bf00      	nop
 800b094:	370c      	adds	r7, #12
 800b096:	46bd      	mov	sp, r7
 800b098:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b09c:	4770      	bx	lr

0800b09e <HAL_TIM_ErrorCallback>:
 800b09e:	b480      	push	{r7}
 800b0a0:	b083      	sub	sp, #12
 800b0a2:	af00      	add	r7, sp, #0
 800b0a4:	6078      	str	r0, [r7, #4]
 800b0a6:	bf00      	nop
 800b0a8:	370c      	adds	r7, #12
 800b0aa:	46bd      	mov	sp, r7
 800b0ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0b0:	4770      	bx	lr

0800b0b2 <TIM_DMAError>:
 800b0b2:	b580      	push	{r7, lr}
 800b0b4:	b084      	sub	sp, #16
 800b0b6:	af00      	add	r7, sp, #0
 800b0b8:	6078      	str	r0, [r7, #4]
 800b0ba:	687b      	ldr	r3, [r7, #4]
 800b0bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b0be:	60fb      	str	r3, [r7, #12]
 800b0c0:	68fb      	ldr	r3, [r7, #12]
 800b0c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b0c4:	687a      	ldr	r2, [r7, #4]
 800b0c6:	429a      	cmp	r2, r3
 800b0c8:	d107      	bne.n	800b0da <TIM_DMAError+0x28>
 800b0ca:	68fb      	ldr	r3, [r7, #12]
 800b0cc:	2201      	movs	r2, #1
 800b0ce:	771a      	strb	r2, [r3, #28]
 800b0d0:	68fb      	ldr	r3, [r7, #12]
 800b0d2:	2201      	movs	r2, #1
 800b0d4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b0d8:	e02a      	b.n	800b130 <TIM_DMAError+0x7e>
 800b0da:	68fb      	ldr	r3, [r7, #12]
 800b0dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b0de:	687a      	ldr	r2, [r7, #4]
 800b0e0:	429a      	cmp	r2, r3
 800b0e2:	d107      	bne.n	800b0f4 <TIM_DMAError+0x42>
 800b0e4:	68fb      	ldr	r3, [r7, #12]
 800b0e6:	2202      	movs	r2, #2
 800b0e8:	771a      	strb	r2, [r3, #28]
 800b0ea:	68fb      	ldr	r3, [r7, #12]
 800b0ec:	2201      	movs	r2, #1
 800b0ee:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800b0f2:	e01d      	b.n	800b130 <TIM_DMAError+0x7e>
 800b0f4:	68fb      	ldr	r3, [r7, #12]
 800b0f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b0f8:	687a      	ldr	r2, [r7, #4]
 800b0fa:	429a      	cmp	r2, r3
 800b0fc:	d107      	bne.n	800b10e <TIM_DMAError+0x5c>
 800b0fe:	68fb      	ldr	r3, [r7, #12]
 800b100:	2204      	movs	r2, #4
 800b102:	771a      	strb	r2, [r3, #28]
 800b104:	68fb      	ldr	r3, [r7, #12]
 800b106:	2201      	movs	r2, #1
 800b108:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b10c:	e010      	b.n	800b130 <TIM_DMAError+0x7e>
 800b10e:	68fb      	ldr	r3, [r7, #12]
 800b110:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b112:	687a      	ldr	r2, [r7, #4]
 800b114:	429a      	cmp	r2, r3
 800b116:	d107      	bne.n	800b128 <TIM_DMAError+0x76>
 800b118:	68fb      	ldr	r3, [r7, #12]
 800b11a:	2208      	movs	r2, #8
 800b11c:	771a      	strb	r2, [r3, #28]
 800b11e:	68fb      	ldr	r3, [r7, #12]
 800b120:	2201      	movs	r2, #1
 800b122:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b126:	e003      	b.n	800b130 <TIM_DMAError+0x7e>
 800b128:	68fb      	ldr	r3, [r7, #12]
 800b12a:	2201      	movs	r2, #1
 800b12c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b130:	68f8      	ldr	r0, [r7, #12]
 800b132:	f7ff ffb4 	bl	800b09e <HAL_TIM_ErrorCallback>
 800b136:	68fb      	ldr	r3, [r7, #12]
 800b138:	2200      	movs	r2, #0
 800b13a:	771a      	strb	r2, [r3, #28]
 800b13c:	bf00      	nop
 800b13e:	3710      	adds	r7, #16
 800b140:	46bd      	mov	sp, r7
 800b142:	bd80      	pop	{r7, pc}

0800b144 <TIM_DMACaptureCplt>:
 800b144:	b580      	push	{r7, lr}
 800b146:	b084      	sub	sp, #16
 800b148:	af00      	add	r7, sp, #0
 800b14a:	6078      	str	r0, [r7, #4]
 800b14c:	687b      	ldr	r3, [r7, #4]
 800b14e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b150:	60fb      	str	r3, [r7, #12]
 800b152:	68fb      	ldr	r3, [r7, #12]
 800b154:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b156:	687a      	ldr	r2, [r7, #4]
 800b158:	429a      	cmp	r2, r3
 800b15a:	d10f      	bne.n	800b17c <TIM_DMACaptureCplt+0x38>
 800b15c:	68fb      	ldr	r3, [r7, #12]
 800b15e:	2201      	movs	r2, #1
 800b160:	771a      	strb	r2, [r3, #28]
 800b162:	687b      	ldr	r3, [r7, #4]
 800b164:	69db      	ldr	r3, [r3, #28]
 800b166:	2b00      	cmp	r3, #0
 800b168:	d146      	bne.n	800b1f8 <TIM_DMACaptureCplt+0xb4>
 800b16a:	68fb      	ldr	r3, [r7, #12]
 800b16c:	2201      	movs	r2, #1
 800b16e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b172:	68fb      	ldr	r3, [r7, #12]
 800b174:	2201      	movs	r2, #1
 800b176:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800b17a:	e03d      	b.n	800b1f8 <TIM_DMACaptureCplt+0xb4>
 800b17c:	68fb      	ldr	r3, [r7, #12]
 800b17e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b180:	687a      	ldr	r2, [r7, #4]
 800b182:	429a      	cmp	r2, r3
 800b184:	d10f      	bne.n	800b1a6 <TIM_DMACaptureCplt+0x62>
 800b186:	68fb      	ldr	r3, [r7, #12]
 800b188:	2202      	movs	r2, #2
 800b18a:	771a      	strb	r2, [r3, #28]
 800b18c:	687b      	ldr	r3, [r7, #4]
 800b18e:	69db      	ldr	r3, [r3, #28]
 800b190:	2b00      	cmp	r3, #0
 800b192:	d131      	bne.n	800b1f8 <TIM_DMACaptureCplt+0xb4>
 800b194:	68fb      	ldr	r3, [r7, #12]
 800b196:	2201      	movs	r2, #1
 800b198:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800b19c:	68fb      	ldr	r3, [r7, #12]
 800b19e:	2201      	movs	r2, #1
 800b1a0:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800b1a4:	e028      	b.n	800b1f8 <TIM_DMACaptureCplt+0xb4>
 800b1a6:	68fb      	ldr	r3, [r7, #12]
 800b1a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b1aa:	687a      	ldr	r2, [r7, #4]
 800b1ac:	429a      	cmp	r2, r3
 800b1ae:	d10f      	bne.n	800b1d0 <TIM_DMACaptureCplt+0x8c>
 800b1b0:	68fb      	ldr	r3, [r7, #12]
 800b1b2:	2204      	movs	r2, #4
 800b1b4:	771a      	strb	r2, [r3, #28]
 800b1b6:	687b      	ldr	r3, [r7, #4]
 800b1b8:	69db      	ldr	r3, [r3, #28]
 800b1ba:	2b00      	cmp	r3, #0
 800b1bc:	d11c      	bne.n	800b1f8 <TIM_DMACaptureCplt+0xb4>
 800b1be:	68fb      	ldr	r3, [r7, #12]
 800b1c0:	2201      	movs	r2, #1
 800b1c2:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b1c6:	68fb      	ldr	r3, [r7, #12]
 800b1c8:	2201      	movs	r2, #1
 800b1ca:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800b1ce:	e013      	b.n	800b1f8 <TIM_DMACaptureCplt+0xb4>
 800b1d0:	68fb      	ldr	r3, [r7, #12]
 800b1d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b1d4:	687a      	ldr	r2, [r7, #4]
 800b1d6:	429a      	cmp	r2, r3
 800b1d8:	d10e      	bne.n	800b1f8 <TIM_DMACaptureCplt+0xb4>
 800b1da:	68fb      	ldr	r3, [r7, #12]
 800b1dc:	2208      	movs	r2, #8
 800b1de:	771a      	strb	r2, [r3, #28]
 800b1e0:	687b      	ldr	r3, [r7, #4]
 800b1e2:	69db      	ldr	r3, [r3, #28]
 800b1e4:	2b00      	cmp	r3, #0
 800b1e6:	d107      	bne.n	800b1f8 <TIM_DMACaptureCplt+0xb4>
 800b1e8:	68fb      	ldr	r3, [r7, #12]
 800b1ea:	2201      	movs	r2, #1
 800b1ec:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b1f0:	68fb      	ldr	r3, [r7, #12]
 800b1f2:	2201      	movs	r2, #1
 800b1f4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800b1f8:	68f8      	ldr	r0, [r7, #12]
 800b1fa:	f7ff ff28 	bl	800b04e <HAL_TIM_IC_CaptureCallback>
 800b1fe:	68fb      	ldr	r3, [r7, #12]
 800b200:	2200      	movs	r2, #0
 800b202:	771a      	strb	r2, [r3, #28]
 800b204:	bf00      	nop
 800b206:	3710      	adds	r7, #16
 800b208:	46bd      	mov	sp, r7
 800b20a:	bd80      	pop	{r7, pc}

0800b20c <TIM_DMACaptureHalfCplt>:
 800b20c:	b580      	push	{r7, lr}
 800b20e:	b084      	sub	sp, #16
 800b210:	af00      	add	r7, sp, #0
 800b212:	6078      	str	r0, [r7, #4]
 800b214:	687b      	ldr	r3, [r7, #4]
 800b216:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b218:	60fb      	str	r3, [r7, #12]
 800b21a:	68fb      	ldr	r3, [r7, #12]
 800b21c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b21e:	687a      	ldr	r2, [r7, #4]
 800b220:	429a      	cmp	r2, r3
 800b222:	d103      	bne.n	800b22c <TIM_DMACaptureHalfCplt+0x20>
 800b224:	68fb      	ldr	r3, [r7, #12]
 800b226:	2201      	movs	r2, #1
 800b228:	771a      	strb	r2, [r3, #28]
 800b22a:	e019      	b.n	800b260 <TIM_DMACaptureHalfCplt+0x54>
 800b22c:	68fb      	ldr	r3, [r7, #12]
 800b22e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b230:	687a      	ldr	r2, [r7, #4]
 800b232:	429a      	cmp	r2, r3
 800b234:	d103      	bne.n	800b23e <TIM_DMACaptureHalfCplt+0x32>
 800b236:	68fb      	ldr	r3, [r7, #12]
 800b238:	2202      	movs	r2, #2
 800b23a:	771a      	strb	r2, [r3, #28]
 800b23c:	e010      	b.n	800b260 <TIM_DMACaptureHalfCplt+0x54>
 800b23e:	68fb      	ldr	r3, [r7, #12]
 800b240:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b242:	687a      	ldr	r2, [r7, #4]
 800b244:	429a      	cmp	r2, r3
 800b246:	d103      	bne.n	800b250 <TIM_DMACaptureHalfCplt+0x44>
 800b248:	68fb      	ldr	r3, [r7, #12]
 800b24a:	2204      	movs	r2, #4
 800b24c:	771a      	strb	r2, [r3, #28]
 800b24e:	e007      	b.n	800b260 <TIM_DMACaptureHalfCplt+0x54>
 800b250:	68fb      	ldr	r3, [r7, #12]
 800b252:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b254:	687a      	ldr	r2, [r7, #4]
 800b256:	429a      	cmp	r2, r3
 800b258:	d102      	bne.n	800b260 <TIM_DMACaptureHalfCplt+0x54>
 800b25a:	68fb      	ldr	r3, [r7, #12]
 800b25c:	2208      	movs	r2, #8
 800b25e:	771a      	strb	r2, [r3, #28]
 800b260:	68f8      	ldr	r0, [r7, #12]
 800b262:	f7ff fefe 	bl	800b062 <HAL_TIM_IC_CaptureHalfCpltCallback>
 800b266:	68fb      	ldr	r3, [r7, #12]
 800b268:	2200      	movs	r2, #0
 800b26a:	771a      	strb	r2, [r3, #28]
 800b26c:	bf00      	nop
 800b26e:	3710      	adds	r7, #16
 800b270:	46bd      	mov	sp, r7
 800b272:	bd80      	pop	{r7, pc}

0800b274 <TIM_Base_SetConfig>:
 800b274:	b480      	push	{r7}
 800b276:	b085      	sub	sp, #20
 800b278:	af00      	add	r7, sp, #0
 800b27a:	6078      	str	r0, [r7, #4]
 800b27c:	6039      	str	r1, [r7, #0]
 800b27e:	687b      	ldr	r3, [r7, #4]
 800b280:	681b      	ldr	r3, [r3, #0]
 800b282:	60fb      	str	r3, [r7, #12]
 800b284:	687b      	ldr	r3, [r7, #4]
 800b286:	4a40      	ldr	r2, [pc, #256]	; (800b388 <TIM_Base_SetConfig+0x114>)
 800b288:	4293      	cmp	r3, r2
 800b28a:	d013      	beq.n	800b2b4 <TIM_Base_SetConfig+0x40>
 800b28c:	687b      	ldr	r3, [r7, #4]
 800b28e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b292:	d00f      	beq.n	800b2b4 <TIM_Base_SetConfig+0x40>
 800b294:	687b      	ldr	r3, [r7, #4]
 800b296:	4a3d      	ldr	r2, [pc, #244]	; (800b38c <TIM_Base_SetConfig+0x118>)
 800b298:	4293      	cmp	r3, r2
 800b29a:	d00b      	beq.n	800b2b4 <TIM_Base_SetConfig+0x40>
 800b29c:	687b      	ldr	r3, [r7, #4]
 800b29e:	4a3c      	ldr	r2, [pc, #240]	; (800b390 <TIM_Base_SetConfig+0x11c>)
 800b2a0:	4293      	cmp	r3, r2
 800b2a2:	d007      	beq.n	800b2b4 <TIM_Base_SetConfig+0x40>
 800b2a4:	687b      	ldr	r3, [r7, #4]
 800b2a6:	4a3b      	ldr	r2, [pc, #236]	; (800b394 <TIM_Base_SetConfig+0x120>)
 800b2a8:	4293      	cmp	r3, r2
 800b2aa:	d003      	beq.n	800b2b4 <TIM_Base_SetConfig+0x40>
 800b2ac:	687b      	ldr	r3, [r7, #4]
 800b2ae:	4a3a      	ldr	r2, [pc, #232]	; (800b398 <TIM_Base_SetConfig+0x124>)
 800b2b0:	4293      	cmp	r3, r2
 800b2b2:	d108      	bne.n	800b2c6 <TIM_Base_SetConfig+0x52>
 800b2b4:	68fb      	ldr	r3, [r7, #12]
 800b2b6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b2ba:	60fb      	str	r3, [r7, #12]
 800b2bc:	683b      	ldr	r3, [r7, #0]
 800b2be:	685b      	ldr	r3, [r3, #4]
 800b2c0:	68fa      	ldr	r2, [r7, #12]
 800b2c2:	4313      	orrs	r3, r2
 800b2c4:	60fb      	str	r3, [r7, #12]
 800b2c6:	687b      	ldr	r3, [r7, #4]
 800b2c8:	4a2f      	ldr	r2, [pc, #188]	; (800b388 <TIM_Base_SetConfig+0x114>)
 800b2ca:	4293      	cmp	r3, r2
 800b2cc:	d02b      	beq.n	800b326 <TIM_Base_SetConfig+0xb2>
 800b2ce:	687b      	ldr	r3, [r7, #4]
 800b2d0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b2d4:	d027      	beq.n	800b326 <TIM_Base_SetConfig+0xb2>
 800b2d6:	687b      	ldr	r3, [r7, #4]
 800b2d8:	4a2c      	ldr	r2, [pc, #176]	; (800b38c <TIM_Base_SetConfig+0x118>)
 800b2da:	4293      	cmp	r3, r2
 800b2dc:	d023      	beq.n	800b326 <TIM_Base_SetConfig+0xb2>
 800b2de:	687b      	ldr	r3, [r7, #4]
 800b2e0:	4a2b      	ldr	r2, [pc, #172]	; (800b390 <TIM_Base_SetConfig+0x11c>)
 800b2e2:	4293      	cmp	r3, r2
 800b2e4:	d01f      	beq.n	800b326 <TIM_Base_SetConfig+0xb2>
 800b2e6:	687b      	ldr	r3, [r7, #4]
 800b2e8:	4a2a      	ldr	r2, [pc, #168]	; (800b394 <TIM_Base_SetConfig+0x120>)
 800b2ea:	4293      	cmp	r3, r2
 800b2ec:	d01b      	beq.n	800b326 <TIM_Base_SetConfig+0xb2>
 800b2ee:	687b      	ldr	r3, [r7, #4]
 800b2f0:	4a29      	ldr	r2, [pc, #164]	; (800b398 <TIM_Base_SetConfig+0x124>)
 800b2f2:	4293      	cmp	r3, r2
 800b2f4:	d017      	beq.n	800b326 <TIM_Base_SetConfig+0xb2>
 800b2f6:	687b      	ldr	r3, [r7, #4]
 800b2f8:	4a28      	ldr	r2, [pc, #160]	; (800b39c <TIM_Base_SetConfig+0x128>)
 800b2fa:	4293      	cmp	r3, r2
 800b2fc:	d013      	beq.n	800b326 <TIM_Base_SetConfig+0xb2>
 800b2fe:	687b      	ldr	r3, [r7, #4]
 800b300:	4a27      	ldr	r2, [pc, #156]	; (800b3a0 <TIM_Base_SetConfig+0x12c>)
 800b302:	4293      	cmp	r3, r2
 800b304:	d00f      	beq.n	800b326 <TIM_Base_SetConfig+0xb2>
 800b306:	687b      	ldr	r3, [r7, #4]
 800b308:	4a26      	ldr	r2, [pc, #152]	; (800b3a4 <TIM_Base_SetConfig+0x130>)
 800b30a:	4293      	cmp	r3, r2
 800b30c:	d00b      	beq.n	800b326 <TIM_Base_SetConfig+0xb2>
 800b30e:	687b      	ldr	r3, [r7, #4]
 800b310:	4a25      	ldr	r2, [pc, #148]	; (800b3a8 <TIM_Base_SetConfig+0x134>)
 800b312:	4293      	cmp	r3, r2
 800b314:	d007      	beq.n	800b326 <TIM_Base_SetConfig+0xb2>
 800b316:	687b      	ldr	r3, [r7, #4]
 800b318:	4a24      	ldr	r2, [pc, #144]	; (800b3ac <TIM_Base_SetConfig+0x138>)
 800b31a:	4293      	cmp	r3, r2
 800b31c:	d003      	beq.n	800b326 <TIM_Base_SetConfig+0xb2>
 800b31e:	687b      	ldr	r3, [r7, #4]
 800b320:	4a23      	ldr	r2, [pc, #140]	; (800b3b0 <TIM_Base_SetConfig+0x13c>)
 800b322:	4293      	cmp	r3, r2
 800b324:	d108      	bne.n	800b338 <TIM_Base_SetConfig+0xc4>
 800b326:	68fb      	ldr	r3, [r7, #12]
 800b328:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b32c:	60fb      	str	r3, [r7, #12]
 800b32e:	683b      	ldr	r3, [r7, #0]
 800b330:	68db      	ldr	r3, [r3, #12]
 800b332:	68fa      	ldr	r2, [r7, #12]
 800b334:	4313      	orrs	r3, r2
 800b336:	60fb      	str	r3, [r7, #12]
 800b338:	68fb      	ldr	r3, [r7, #12]
 800b33a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800b33e:	683b      	ldr	r3, [r7, #0]
 800b340:	695b      	ldr	r3, [r3, #20]
 800b342:	4313      	orrs	r3, r2
 800b344:	60fb      	str	r3, [r7, #12]
 800b346:	687b      	ldr	r3, [r7, #4]
 800b348:	68fa      	ldr	r2, [r7, #12]
 800b34a:	601a      	str	r2, [r3, #0]
 800b34c:	683b      	ldr	r3, [r7, #0]
 800b34e:	689a      	ldr	r2, [r3, #8]
 800b350:	687b      	ldr	r3, [r7, #4]
 800b352:	62da      	str	r2, [r3, #44]	; 0x2c
 800b354:	683b      	ldr	r3, [r7, #0]
 800b356:	681a      	ldr	r2, [r3, #0]
 800b358:	687b      	ldr	r3, [r7, #4]
 800b35a:	629a      	str	r2, [r3, #40]	; 0x28
 800b35c:	687b      	ldr	r3, [r7, #4]
 800b35e:	4a0a      	ldr	r2, [pc, #40]	; (800b388 <TIM_Base_SetConfig+0x114>)
 800b360:	4293      	cmp	r3, r2
 800b362:	d003      	beq.n	800b36c <TIM_Base_SetConfig+0xf8>
 800b364:	687b      	ldr	r3, [r7, #4]
 800b366:	4a0c      	ldr	r2, [pc, #48]	; (800b398 <TIM_Base_SetConfig+0x124>)
 800b368:	4293      	cmp	r3, r2
 800b36a:	d103      	bne.n	800b374 <TIM_Base_SetConfig+0x100>
 800b36c:	683b      	ldr	r3, [r7, #0]
 800b36e:	691a      	ldr	r2, [r3, #16]
 800b370:	687b      	ldr	r3, [r7, #4]
 800b372:	631a      	str	r2, [r3, #48]	; 0x30
 800b374:	687b      	ldr	r3, [r7, #4]
 800b376:	2201      	movs	r2, #1
 800b378:	615a      	str	r2, [r3, #20]
 800b37a:	bf00      	nop
 800b37c:	3714      	adds	r7, #20
 800b37e:	46bd      	mov	sp, r7
 800b380:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b384:	4770      	bx	lr
 800b386:	bf00      	nop
 800b388:	40010000 	.word	0x40010000
 800b38c:	40000400 	.word	0x40000400
 800b390:	40000800 	.word	0x40000800
 800b394:	40000c00 	.word	0x40000c00
 800b398:	40010400 	.word	0x40010400
 800b39c:	40014000 	.word	0x40014000
 800b3a0:	40014400 	.word	0x40014400
 800b3a4:	40014800 	.word	0x40014800
 800b3a8:	40001800 	.word	0x40001800
 800b3ac:	40001c00 	.word	0x40001c00
 800b3b0:	40002000 	.word	0x40002000

0800b3b4 <TIM_OC1_SetConfig>:
 800b3b4:	b480      	push	{r7}
 800b3b6:	b087      	sub	sp, #28
 800b3b8:	af00      	add	r7, sp, #0
 800b3ba:	6078      	str	r0, [r7, #4]
 800b3bc:	6039      	str	r1, [r7, #0]
 800b3be:	687b      	ldr	r3, [r7, #4]
 800b3c0:	6a1b      	ldr	r3, [r3, #32]
 800b3c2:	f023 0201 	bic.w	r2, r3, #1
 800b3c6:	687b      	ldr	r3, [r7, #4]
 800b3c8:	621a      	str	r2, [r3, #32]
 800b3ca:	687b      	ldr	r3, [r7, #4]
 800b3cc:	6a1b      	ldr	r3, [r3, #32]
 800b3ce:	617b      	str	r3, [r7, #20]
 800b3d0:	687b      	ldr	r3, [r7, #4]
 800b3d2:	685b      	ldr	r3, [r3, #4]
 800b3d4:	613b      	str	r3, [r7, #16]
 800b3d6:	687b      	ldr	r3, [r7, #4]
 800b3d8:	699b      	ldr	r3, [r3, #24]
 800b3da:	60fb      	str	r3, [r7, #12]
 800b3dc:	68fb      	ldr	r3, [r7, #12]
 800b3de:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b3e2:	60fb      	str	r3, [r7, #12]
 800b3e4:	68fb      	ldr	r3, [r7, #12]
 800b3e6:	f023 0303 	bic.w	r3, r3, #3
 800b3ea:	60fb      	str	r3, [r7, #12]
 800b3ec:	683b      	ldr	r3, [r7, #0]
 800b3ee:	681b      	ldr	r3, [r3, #0]
 800b3f0:	68fa      	ldr	r2, [r7, #12]
 800b3f2:	4313      	orrs	r3, r2
 800b3f4:	60fb      	str	r3, [r7, #12]
 800b3f6:	697b      	ldr	r3, [r7, #20]
 800b3f8:	f023 0302 	bic.w	r3, r3, #2
 800b3fc:	617b      	str	r3, [r7, #20]
 800b3fe:	683b      	ldr	r3, [r7, #0]
 800b400:	689b      	ldr	r3, [r3, #8]
 800b402:	697a      	ldr	r2, [r7, #20]
 800b404:	4313      	orrs	r3, r2
 800b406:	617b      	str	r3, [r7, #20]
 800b408:	687b      	ldr	r3, [r7, #4]
 800b40a:	4a20      	ldr	r2, [pc, #128]	; (800b48c <TIM_OC1_SetConfig+0xd8>)
 800b40c:	4293      	cmp	r3, r2
 800b40e:	d003      	beq.n	800b418 <TIM_OC1_SetConfig+0x64>
 800b410:	687b      	ldr	r3, [r7, #4]
 800b412:	4a1f      	ldr	r2, [pc, #124]	; (800b490 <TIM_OC1_SetConfig+0xdc>)
 800b414:	4293      	cmp	r3, r2
 800b416:	d10c      	bne.n	800b432 <TIM_OC1_SetConfig+0x7e>
 800b418:	697b      	ldr	r3, [r7, #20]
 800b41a:	f023 0308 	bic.w	r3, r3, #8
 800b41e:	617b      	str	r3, [r7, #20]
 800b420:	683b      	ldr	r3, [r7, #0]
 800b422:	68db      	ldr	r3, [r3, #12]
 800b424:	697a      	ldr	r2, [r7, #20]
 800b426:	4313      	orrs	r3, r2
 800b428:	617b      	str	r3, [r7, #20]
 800b42a:	697b      	ldr	r3, [r7, #20]
 800b42c:	f023 0304 	bic.w	r3, r3, #4
 800b430:	617b      	str	r3, [r7, #20]
 800b432:	687b      	ldr	r3, [r7, #4]
 800b434:	4a15      	ldr	r2, [pc, #84]	; (800b48c <TIM_OC1_SetConfig+0xd8>)
 800b436:	4293      	cmp	r3, r2
 800b438:	d003      	beq.n	800b442 <TIM_OC1_SetConfig+0x8e>
 800b43a:	687b      	ldr	r3, [r7, #4]
 800b43c:	4a14      	ldr	r2, [pc, #80]	; (800b490 <TIM_OC1_SetConfig+0xdc>)
 800b43e:	4293      	cmp	r3, r2
 800b440:	d111      	bne.n	800b466 <TIM_OC1_SetConfig+0xb2>
 800b442:	693b      	ldr	r3, [r7, #16]
 800b444:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800b448:	613b      	str	r3, [r7, #16]
 800b44a:	693b      	ldr	r3, [r7, #16]
 800b44c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800b450:	613b      	str	r3, [r7, #16]
 800b452:	683b      	ldr	r3, [r7, #0]
 800b454:	695b      	ldr	r3, [r3, #20]
 800b456:	693a      	ldr	r2, [r7, #16]
 800b458:	4313      	orrs	r3, r2
 800b45a:	613b      	str	r3, [r7, #16]
 800b45c:	683b      	ldr	r3, [r7, #0]
 800b45e:	699b      	ldr	r3, [r3, #24]
 800b460:	693a      	ldr	r2, [r7, #16]
 800b462:	4313      	orrs	r3, r2
 800b464:	613b      	str	r3, [r7, #16]
 800b466:	687b      	ldr	r3, [r7, #4]
 800b468:	693a      	ldr	r2, [r7, #16]
 800b46a:	605a      	str	r2, [r3, #4]
 800b46c:	687b      	ldr	r3, [r7, #4]
 800b46e:	68fa      	ldr	r2, [r7, #12]
 800b470:	619a      	str	r2, [r3, #24]
 800b472:	683b      	ldr	r3, [r7, #0]
 800b474:	685a      	ldr	r2, [r3, #4]
 800b476:	687b      	ldr	r3, [r7, #4]
 800b478:	635a      	str	r2, [r3, #52]	; 0x34
 800b47a:	687b      	ldr	r3, [r7, #4]
 800b47c:	697a      	ldr	r2, [r7, #20]
 800b47e:	621a      	str	r2, [r3, #32]
 800b480:	bf00      	nop
 800b482:	371c      	adds	r7, #28
 800b484:	46bd      	mov	sp, r7
 800b486:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b48a:	4770      	bx	lr
 800b48c:	40010000 	.word	0x40010000
 800b490:	40010400 	.word	0x40010400

0800b494 <TIM_OC2_SetConfig>:
 800b494:	b480      	push	{r7}
 800b496:	b087      	sub	sp, #28
 800b498:	af00      	add	r7, sp, #0
 800b49a:	6078      	str	r0, [r7, #4]
 800b49c:	6039      	str	r1, [r7, #0]
 800b49e:	687b      	ldr	r3, [r7, #4]
 800b4a0:	6a1b      	ldr	r3, [r3, #32]
 800b4a2:	f023 0210 	bic.w	r2, r3, #16
 800b4a6:	687b      	ldr	r3, [r7, #4]
 800b4a8:	621a      	str	r2, [r3, #32]
 800b4aa:	687b      	ldr	r3, [r7, #4]
 800b4ac:	6a1b      	ldr	r3, [r3, #32]
 800b4ae:	617b      	str	r3, [r7, #20]
 800b4b0:	687b      	ldr	r3, [r7, #4]
 800b4b2:	685b      	ldr	r3, [r3, #4]
 800b4b4:	613b      	str	r3, [r7, #16]
 800b4b6:	687b      	ldr	r3, [r7, #4]
 800b4b8:	699b      	ldr	r3, [r3, #24]
 800b4ba:	60fb      	str	r3, [r7, #12]
 800b4bc:	68fb      	ldr	r3, [r7, #12]
 800b4be:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800b4c2:	60fb      	str	r3, [r7, #12]
 800b4c4:	68fb      	ldr	r3, [r7, #12]
 800b4c6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b4ca:	60fb      	str	r3, [r7, #12]
 800b4cc:	683b      	ldr	r3, [r7, #0]
 800b4ce:	681b      	ldr	r3, [r3, #0]
 800b4d0:	021b      	lsls	r3, r3, #8
 800b4d2:	68fa      	ldr	r2, [r7, #12]
 800b4d4:	4313      	orrs	r3, r2
 800b4d6:	60fb      	str	r3, [r7, #12]
 800b4d8:	697b      	ldr	r3, [r7, #20]
 800b4da:	f023 0320 	bic.w	r3, r3, #32
 800b4de:	617b      	str	r3, [r7, #20]
 800b4e0:	683b      	ldr	r3, [r7, #0]
 800b4e2:	689b      	ldr	r3, [r3, #8]
 800b4e4:	011b      	lsls	r3, r3, #4
 800b4e6:	697a      	ldr	r2, [r7, #20]
 800b4e8:	4313      	orrs	r3, r2
 800b4ea:	617b      	str	r3, [r7, #20]
 800b4ec:	687b      	ldr	r3, [r7, #4]
 800b4ee:	4a22      	ldr	r2, [pc, #136]	; (800b578 <TIM_OC2_SetConfig+0xe4>)
 800b4f0:	4293      	cmp	r3, r2
 800b4f2:	d003      	beq.n	800b4fc <TIM_OC2_SetConfig+0x68>
 800b4f4:	687b      	ldr	r3, [r7, #4]
 800b4f6:	4a21      	ldr	r2, [pc, #132]	; (800b57c <TIM_OC2_SetConfig+0xe8>)
 800b4f8:	4293      	cmp	r3, r2
 800b4fa:	d10d      	bne.n	800b518 <TIM_OC2_SetConfig+0x84>
 800b4fc:	697b      	ldr	r3, [r7, #20]
 800b4fe:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800b502:	617b      	str	r3, [r7, #20]
 800b504:	683b      	ldr	r3, [r7, #0]
 800b506:	68db      	ldr	r3, [r3, #12]
 800b508:	011b      	lsls	r3, r3, #4
 800b50a:	697a      	ldr	r2, [r7, #20]
 800b50c:	4313      	orrs	r3, r2
 800b50e:	617b      	str	r3, [r7, #20]
 800b510:	697b      	ldr	r3, [r7, #20]
 800b512:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b516:	617b      	str	r3, [r7, #20]
 800b518:	687b      	ldr	r3, [r7, #4]
 800b51a:	4a17      	ldr	r2, [pc, #92]	; (800b578 <TIM_OC2_SetConfig+0xe4>)
 800b51c:	4293      	cmp	r3, r2
 800b51e:	d003      	beq.n	800b528 <TIM_OC2_SetConfig+0x94>
 800b520:	687b      	ldr	r3, [r7, #4]
 800b522:	4a16      	ldr	r2, [pc, #88]	; (800b57c <TIM_OC2_SetConfig+0xe8>)
 800b524:	4293      	cmp	r3, r2
 800b526:	d113      	bne.n	800b550 <TIM_OC2_SetConfig+0xbc>
 800b528:	693b      	ldr	r3, [r7, #16]
 800b52a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b52e:	613b      	str	r3, [r7, #16]
 800b530:	693b      	ldr	r3, [r7, #16]
 800b532:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b536:	613b      	str	r3, [r7, #16]
 800b538:	683b      	ldr	r3, [r7, #0]
 800b53a:	695b      	ldr	r3, [r3, #20]
 800b53c:	009b      	lsls	r3, r3, #2
 800b53e:	693a      	ldr	r2, [r7, #16]
 800b540:	4313      	orrs	r3, r2
 800b542:	613b      	str	r3, [r7, #16]
 800b544:	683b      	ldr	r3, [r7, #0]
 800b546:	699b      	ldr	r3, [r3, #24]
 800b548:	009b      	lsls	r3, r3, #2
 800b54a:	693a      	ldr	r2, [r7, #16]
 800b54c:	4313      	orrs	r3, r2
 800b54e:	613b      	str	r3, [r7, #16]
 800b550:	687b      	ldr	r3, [r7, #4]
 800b552:	693a      	ldr	r2, [r7, #16]
 800b554:	605a      	str	r2, [r3, #4]
 800b556:	687b      	ldr	r3, [r7, #4]
 800b558:	68fa      	ldr	r2, [r7, #12]
 800b55a:	619a      	str	r2, [r3, #24]
 800b55c:	683b      	ldr	r3, [r7, #0]
 800b55e:	685a      	ldr	r2, [r3, #4]
 800b560:	687b      	ldr	r3, [r7, #4]
 800b562:	639a      	str	r2, [r3, #56]	; 0x38
 800b564:	687b      	ldr	r3, [r7, #4]
 800b566:	697a      	ldr	r2, [r7, #20]
 800b568:	621a      	str	r2, [r3, #32]
 800b56a:	bf00      	nop
 800b56c:	371c      	adds	r7, #28
 800b56e:	46bd      	mov	sp, r7
 800b570:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b574:	4770      	bx	lr
 800b576:	bf00      	nop
 800b578:	40010000 	.word	0x40010000
 800b57c:	40010400 	.word	0x40010400

0800b580 <TIM_OC3_SetConfig>:
 800b580:	b480      	push	{r7}
 800b582:	b087      	sub	sp, #28
 800b584:	af00      	add	r7, sp, #0
 800b586:	6078      	str	r0, [r7, #4]
 800b588:	6039      	str	r1, [r7, #0]
 800b58a:	687b      	ldr	r3, [r7, #4]
 800b58c:	6a1b      	ldr	r3, [r3, #32]
 800b58e:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800b592:	687b      	ldr	r3, [r7, #4]
 800b594:	621a      	str	r2, [r3, #32]
 800b596:	687b      	ldr	r3, [r7, #4]
 800b598:	6a1b      	ldr	r3, [r3, #32]
 800b59a:	617b      	str	r3, [r7, #20]
 800b59c:	687b      	ldr	r3, [r7, #4]
 800b59e:	685b      	ldr	r3, [r3, #4]
 800b5a0:	613b      	str	r3, [r7, #16]
 800b5a2:	687b      	ldr	r3, [r7, #4]
 800b5a4:	69db      	ldr	r3, [r3, #28]
 800b5a6:	60fb      	str	r3, [r7, #12]
 800b5a8:	68fb      	ldr	r3, [r7, #12]
 800b5aa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b5ae:	60fb      	str	r3, [r7, #12]
 800b5b0:	68fb      	ldr	r3, [r7, #12]
 800b5b2:	f023 0303 	bic.w	r3, r3, #3
 800b5b6:	60fb      	str	r3, [r7, #12]
 800b5b8:	683b      	ldr	r3, [r7, #0]
 800b5ba:	681b      	ldr	r3, [r3, #0]
 800b5bc:	68fa      	ldr	r2, [r7, #12]
 800b5be:	4313      	orrs	r3, r2
 800b5c0:	60fb      	str	r3, [r7, #12]
 800b5c2:	697b      	ldr	r3, [r7, #20]
 800b5c4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800b5c8:	617b      	str	r3, [r7, #20]
 800b5ca:	683b      	ldr	r3, [r7, #0]
 800b5cc:	689b      	ldr	r3, [r3, #8]
 800b5ce:	021b      	lsls	r3, r3, #8
 800b5d0:	697a      	ldr	r2, [r7, #20]
 800b5d2:	4313      	orrs	r3, r2
 800b5d4:	617b      	str	r3, [r7, #20]
 800b5d6:	687b      	ldr	r3, [r7, #4]
 800b5d8:	4a21      	ldr	r2, [pc, #132]	; (800b660 <TIM_OC3_SetConfig+0xe0>)
 800b5da:	4293      	cmp	r3, r2
 800b5dc:	d003      	beq.n	800b5e6 <TIM_OC3_SetConfig+0x66>
 800b5de:	687b      	ldr	r3, [r7, #4]
 800b5e0:	4a20      	ldr	r2, [pc, #128]	; (800b664 <TIM_OC3_SetConfig+0xe4>)
 800b5e2:	4293      	cmp	r3, r2
 800b5e4:	d10d      	bne.n	800b602 <TIM_OC3_SetConfig+0x82>
 800b5e6:	697b      	ldr	r3, [r7, #20]
 800b5e8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b5ec:	617b      	str	r3, [r7, #20]
 800b5ee:	683b      	ldr	r3, [r7, #0]
 800b5f0:	68db      	ldr	r3, [r3, #12]
 800b5f2:	021b      	lsls	r3, r3, #8
 800b5f4:	697a      	ldr	r2, [r7, #20]
 800b5f6:	4313      	orrs	r3, r2
 800b5f8:	617b      	str	r3, [r7, #20]
 800b5fa:	697b      	ldr	r3, [r7, #20]
 800b5fc:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b600:	617b      	str	r3, [r7, #20]
 800b602:	687b      	ldr	r3, [r7, #4]
 800b604:	4a16      	ldr	r2, [pc, #88]	; (800b660 <TIM_OC3_SetConfig+0xe0>)
 800b606:	4293      	cmp	r3, r2
 800b608:	d003      	beq.n	800b612 <TIM_OC3_SetConfig+0x92>
 800b60a:	687b      	ldr	r3, [r7, #4]
 800b60c:	4a15      	ldr	r2, [pc, #84]	; (800b664 <TIM_OC3_SetConfig+0xe4>)
 800b60e:	4293      	cmp	r3, r2
 800b610:	d113      	bne.n	800b63a <TIM_OC3_SetConfig+0xba>
 800b612:	693b      	ldr	r3, [r7, #16]
 800b614:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800b618:	613b      	str	r3, [r7, #16]
 800b61a:	693b      	ldr	r3, [r7, #16]
 800b61c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b620:	613b      	str	r3, [r7, #16]
 800b622:	683b      	ldr	r3, [r7, #0]
 800b624:	695b      	ldr	r3, [r3, #20]
 800b626:	011b      	lsls	r3, r3, #4
 800b628:	693a      	ldr	r2, [r7, #16]
 800b62a:	4313      	orrs	r3, r2
 800b62c:	613b      	str	r3, [r7, #16]
 800b62e:	683b      	ldr	r3, [r7, #0]
 800b630:	699b      	ldr	r3, [r3, #24]
 800b632:	011b      	lsls	r3, r3, #4
 800b634:	693a      	ldr	r2, [r7, #16]
 800b636:	4313      	orrs	r3, r2
 800b638:	613b      	str	r3, [r7, #16]
 800b63a:	687b      	ldr	r3, [r7, #4]
 800b63c:	693a      	ldr	r2, [r7, #16]
 800b63e:	605a      	str	r2, [r3, #4]
 800b640:	687b      	ldr	r3, [r7, #4]
 800b642:	68fa      	ldr	r2, [r7, #12]
 800b644:	61da      	str	r2, [r3, #28]
 800b646:	683b      	ldr	r3, [r7, #0]
 800b648:	685a      	ldr	r2, [r3, #4]
 800b64a:	687b      	ldr	r3, [r7, #4]
 800b64c:	63da      	str	r2, [r3, #60]	; 0x3c
 800b64e:	687b      	ldr	r3, [r7, #4]
 800b650:	697a      	ldr	r2, [r7, #20]
 800b652:	621a      	str	r2, [r3, #32]
 800b654:	bf00      	nop
 800b656:	371c      	adds	r7, #28
 800b658:	46bd      	mov	sp, r7
 800b65a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b65e:	4770      	bx	lr
 800b660:	40010000 	.word	0x40010000
 800b664:	40010400 	.word	0x40010400

0800b668 <TIM_OC4_SetConfig>:
 800b668:	b480      	push	{r7}
 800b66a:	b087      	sub	sp, #28
 800b66c:	af00      	add	r7, sp, #0
 800b66e:	6078      	str	r0, [r7, #4]
 800b670:	6039      	str	r1, [r7, #0]
 800b672:	687b      	ldr	r3, [r7, #4]
 800b674:	6a1b      	ldr	r3, [r3, #32]
 800b676:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800b67a:	687b      	ldr	r3, [r7, #4]
 800b67c:	621a      	str	r2, [r3, #32]
 800b67e:	687b      	ldr	r3, [r7, #4]
 800b680:	6a1b      	ldr	r3, [r3, #32]
 800b682:	613b      	str	r3, [r7, #16]
 800b684:	687b      	ldr	r3, [r7, #4]
 800b686:	685b      	ldr	r3, [r3, #4]
 800b688:	617b      	str	r3, [r7, #20]
 800b68a:	687b      	ldr	r3, [r7, #4]
 800b68c:	69db      	ldr	r3, [r3, #28]
 800b68e:	60fb      	str	r3, [r7, #12]
 800b690:	68fb      	ldr	r3, [r7, #12]
 800b692:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800b696:	60fb      	str	r3, [r7, #12]
 800b698:	68fb      	ldr	r3, [r7, #12]
 800b69a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b69e:	60fb      	str	r3, [r7, #12]
 800b6a0:	683b      	ldr	r3, [r7, #0]
 800b6a2:	681b      	ldr	r3, [r3, #0]
 800b6a4:	021b      	lsls	r3, r3, #8
 800b6a6:	68fa      	ldr	r2, [r7, #12]
 800b6a8:	4313      	orrs	r3, r2
 800b6aa:	60fb      	str	r3, [r7, #12]
 800b6ac:	693b      	ldr	r3, [r7, #16]
 800b6ae:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b6b2:	613b      	str	r3, [r7, #16]
 800b6b4:	683b      	ldr	r3, [r7, #0]
 800b6b6:	689b      	ldr	r3, [r3, #8]
 800b6b8:	031b      	lsls	r3, r3, #12
 800b6ba:	693a      	ldr	r2, [r7, #16]
 800b6bc:	4313      	orrs	r3, r2
 800b6be:	613b      	str	r3, [r7, #16]
 800b6c0:	687b      	ldr	r3, [r7, #4]
 800b6c2:	4a12      	ldr	r2, [pc, #72]	; (800b70c <TIM_OC4_SetConfig+0xa4>)
 800b6c4:	4293      	cmp	r3, r2
 800b6c6:	d003      	beq.n	800b6d0 <TIM_OC4_SetConfig+0x68>
 800b6c8:	687b      	ldr	r3, [r7, #4]
 800b6ca:	4a11      	ldr	r2, [pc, #68]	; (800b710 <TIM_OC4_SetConfig+0xa8>)
 800b6cc:	4293      	cmp	r3, r2
 800b6ce:	d109      	bne.n	800b6e4 <TIM_OC4_SetConfig+0x7c>
 800b6d0:	697b      	ldr	r3, [r7, #20]
 800b6d2:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800b6d6:	617b      	str	r3, [r7, #20]
 800b6d8:	683b      	ldr	r3, [r7, #0]
 800b6da:	695b      	ldr	r3, [r3, #20]
 800b6dc:	019b      	lsls	r3, r3, #6
 800b6de:	697a      	ldr	r2, [r7, #20]
 800b6e0:	4313      	orrs	r3, r2
 800b6e2:	617b      	str	r3, [r7, #20]
 800b6e4:	687b      	ldr	r3, [r7, #4]
 800b6e6:	697a      	ldr	r2, [r7, #20]
 800b6e8:	605a      	str	r2, [r3, #4]
 800b6ea:	687b      	ldr	r3, [r7, #4]
 800b6ec:	68fa      	ldr	r2, [r7, #12]
 800b6ee:	61da      	str	r2, [r3, #28]
 800b6f0:	683b      	ldr	r3, [r7, #0]
 800b6f2:	685a      	ldr	r2, [r3, #4]
 800b6f4:	687b      	ldr	r3, [r7, #4]
 800b6f6:	641a      	str	r2, [r3, #64]	; 0x40
 800b6f8:	687b      	ldr	r3, [r7, #4]
 800b6fa:	693a      	ldr	r2, [r7, #16]
 800b6fc:	621a      	str	r2, [r3, #32]
 800b6fe:	bf00      	nop
 800b700:	371c      	adds	r7, #28
 800b702:	46bd      	mov	sp, r7
 800b704:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b708:	4770      	bx	lr
 800b70a:	bf00      	nop
 800b70c:	40010000 	.word	0x40010000
 800b710:	40010400 	.word	0x40010400

0800b714 <TIM_TI1_SetConfig>:
 800b714:	b480      	push	{r7}
 800b716:	b087      	sub	sp, #28
 800b718:	af00      	add	r7, sp, #0
 800b71a:	60f8      	str	r0, [r7, #12]
 800b71c:	60b9      	str	r1, [r7, #8]
 800b71e:	607a      	str	r2, [r7, #4]
 800b720:	603b      	str	r3, [r7, #0]
 800b722:	68fb      	ldr	r3, [r7, #12]
 800b724:	6a1b      	ldr	r3, [r3, #32]
 800b726:	f023 0201 	bic.w	r2, r3, #1
 800b72a:	68fb      	ldr	r3, [r7, #12]
 800b72c:	621a      	str	r2, [r3, #32]
 800b72e:	68fb      	ldr	r3, [r7, #12]
 800b730:	699b      	ldr	r3, [r3, #24]
 800b732:	617b      	str	r3, [r7, #20]
 800b734:	68fb      	ldr	r3, [r7, #12]
 800b736:	6a1b      	ldr	r3, [r3, #32]
 800b738:	613b      	str	r3, [r7, #16]
 800b73a:	68fb      	ldr	r3, [r7, #12]
 800b73c:	4a28      	ldr	r2, [pc, #160]	; (800b7e0 <TIM_TI1_SetConfig+0xcc>)
 800b73e:	4293      	cmp	r3, r2
 800b740:	d01b      	beq.n	800b77a <TIM_TI1_SetConfig+0x66>
 800b742:	68fb      	ldr	r3, [r7, #12]
 800b744:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b748:	d017      	beq.n	800b77a <TIM_TI1_SetConfig+0x66>
 800b74a:	68fb      	ldr	r3, [r7, #12]
 800b74c:	4a25      	ldr	r2, [pc, #148]	; (800b7e4 <TIM_TI1_SetConfig+0xd0>)
 800b74e:	4293      	cmp	r3, r2
 800b750:	d013      	beq.n	800b77a <TIM_TI1_SetConfig+0x66>
 800b752:	68fb      	ldr	r3, [r7, #12]
 800b754:	4a24      	ldr	r2, [pc, #144]	; (800b7e8 <TIM_TI1_SetConfig+0xd4>)
 800b756:	4293      	cmp	r3, r2
 800b758:	d00f      	beq.n	800b77a <TIM_TI1_SetConfig+0x66>
 800b75a:	68fb      	ldr	r3, [r7, #12]
 800b75c:	4a23      	ldr	r2, [pc, #140]	; (800b7ec <TIM_TI1_SetConfig+0xd8>)
 800b75e:	4293      	cmp	r3, r2
 800b760:	d00b      	beq.n	800b77a <TIM_TI1_SetConfig+0x66>
 800b762:	68fb      	ldr	r3, [r7, #12]
 800b764:	4a22      	ldr	r2, [pc, #136]	; (800b7f0 <TIM_TI1_SetConfig+0xdc>)
 800b766:	4293      	cmp	r3, r2
 800b768:	d007      	beq.n	800b77a <TIM_TI1_SetConfig+0x66>
 800b76a:	68fb      	ldr	r3, [r7, #12]
 800b76c:	4a21      	ldr	r2, [pc, #132]	; (800b7f4 <TIM_TI1_SetConfig+0xe0>)
 800b76e:	4293      	cmp	r3, r2
 800b770:	d003      	beq.n	800b77a <TIM_TI1_SetConfig+0x66>
 800b772:	68fb      	ldr	r3, [r7, #12]
 800b774:	4a20      	ldr	r2, [pc, #128]	; (800b7f8 <TIM_TI1_SetConfig+0xe4>)
 800b776:	4293      	cmp	r3, r2
 800b778:	d101      	bne.n	800b77e <TIM_TI1_SetConfig+0x6a>
 800b77a:	2301      	movs	r3, #1
 800b77c:	e000      	b.n	800b780 <TIM_TI1_SetConfig+0x6c>
 800b77e:	2300      	movs	r3, #0
 800b780:	2b00      	cmp	r3, #0
 800b782:	d008      	beq.n	800b796 <TIM_TI1_SetConfig+0x82>
 800b784:	697b      	ldr	r3, [r7, #20]
 800b786:	f023 0303 	bic.w	r3, r3, #3
 800b78a:	617b      	str	r3, [r7, #20]
 800b78c:	697a      	ldr	r2, [r7, #20]
 800b78e:	687b      	ldr	r3, [r7, #4]
 800b790:	4313      	orrs	r3, r2
 800b792:	617b      	str	r3, [r7, #20]
 800b794:	e003      	b.n	800b79e <TIM_TI1_SetConfig+0x8a>
 800b796:	697b      	ldr	r3, [r7, #20]
 800b798:	f043 0301 	orr.w	r3, r3, #1
 800b79c:	617b      	str	r3, [r7, #20]
 800b79e:	697b      	ldr	r3, [r7, #20]
 800b7a0:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800b7a4:	617b      	str	r3, [r7, #20]
 800b7a6:	683b      	ldr	r3, [r7, #0]
 800b7a8:	011b      	lsls	r3, r3, #4
 800b7aa:	b2db      	uxtb	r3, r3
 800b7ac:	697a      	ldr	r2, [r7, #20]
 800b7ae:	4313      	orrs	r3, r2
 800b7b0:	617b      	str	r3, [r7, #20]
 800b7b2:	693b      	ldr	r3, [r7, #16]
 800b7b4:	f023 030a 	bic.w	r3, r3, #10
 800b7b8:	613b      	str	r3, [r7, #16]
 800b7ba:	68bb      	ldr	r3, [r7, #8]
 800b7bc:	f003 030a 	and.w	r3, r3, #10
 800b7c0:	693a      	ldr	r2, [r7, #16]
 800b7c2:	4313      	orrs	r3, r2
 800b7c4:	613b      	str	r3, [r7, #16]
 800b7c6:	68fb      	ldr	r3, [r7, #12]
 800b7c8:	697a      	ldr	r2, [r7, #20]
 800b7ca:	619a      	str	r2, [r3, #24]
 800b7cc:	68fb      	ldr	r3, [r7, #12]
 800b7ce:	693a      	ldr	r2, [r7, #16]
 800b7d0:	621a      	str	r2, [r3, #32]
 800b7d2:	bf00      	nop
 800b7d4:	371c      	adds	r7, #28
 800b7d6:	46bd      	mov	sp, r7
 800b7d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7dc:	4770      	bx	lr
 800b7de:	bf00      	nop
 800b7e0:	40010000 	.word	0x40010000
 800b7e4:	40000400 	.word	0x40000400
 800b7e8:	40000800 	.word	0x40000800
 800b7ec:	40000c00 	.word	0x40000c00
 800b7f0:	40010400 	.word	0x40010400
 800b7f4:	40014000 	.word	0x40014000
 800b7f8:	40001800 	.word	0x40001800

0800b7fc <TIM_TI1_ConfigInputStage>:
 800b7fc:	b480      	push	{r7}
 800b7fe:	b087      	sub	sp, #28
 800b800:	af00      	add	r7, sp, #0
 800b802:	60f8      	str	r0, [r7, #12]
 800b804:	60b9      	str	r1, [r7, #8]
 800b806:	607a      	str	r2, [r7, #4]
 800b808:	68fb      	ldr	r3, [r7, #12]
 800b80a:	6a1b      	ldr	r3, [r3, #32]
 800b80c:	617b      	str	r3, [r7, #20]
 800b80e:	68fb      	ldr	r3, [r7, #12]
 800b810:	6a1b      	ldr	r3, [r3, #32]
 800b812:	f023 0201 	bic.w	r2, r3, #1
 800b816:	68fb      	ldr	r3, [r7, #12]
 800b818:	621a      	str	r2, [r3, #32]
 800b81a:	68fb      	ldr	r3, [r7, #12]
 800b81c:	699b      	ldr	r3, [r3, #24]
 800b81e:	613b      	str	r3, [r7, #16]
 800b820:	693b      	ldr	r3, [r7, #16]
 800b822:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800b826:	613b      	str	r3, [r7, #16]
 800b828:	687b      	ldr	r3, [r7, #4]
 800b82a:	011b      	lsls	r3, r3, #4
 800b82c:	693a      	ldr	r2, [r7, #16]
 800b82e:	4313      	orrs	r3, r2
 800b830:	613b      	str	r3, [r7, #16]
 800b832:	697b      	ldr	r3, [r7, #20]
 800b834:	f023 030a 	bic.w	r3, r3, #10
 800b838:	617b      	str	r3, [r7, #20]
 800b83a:	697a      	ldr	r2, [r7, #20]
 800b83c:	68bb      	ldr	r3, [r7, #8]
 800b83e:	4313      	orrs	r3, r2
 800b840:	617b      	str	r3, [r7, #20]
 800b842:	68fb      	ldr	r3, [r7, #12]
 800b844:	693a      	ldr	r2, [r7, #16]
 800b846:	619a      	str	r2, [r3, #24]
 800b848:	68fb      	ldr	r3, [r7, #12]
 800b84a:	697a      	ldr	r2, [r7, #20]
 800b84c:	621a      	str	r2, [r3, #32]
 800b84e:	bf00      	nop
 800b850:	371c      	adds	r7, #28
 800b852:	46bd      	mov	sp, r7
 800b854:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b858:	4770      	bx	lr

0800b85a <TIM_TI2_SetConfig>:
 800b85a:	b480      	push	{r7}
 800b85c:	b087      	sub	sp, #28
 800b85e:	af00      	add	r7, sp, #0
 800b860:	60f8      	str	r0, [r7, #12]
 800b862:	60b9      	str	r1, [r7, #8]
 800b864:	607a      	str	r2, [r7, #4]
 800b866:	603b      	str	r3, [r7, #0]
 800b868:	68fb      	ldr	r3, [r7, #12]
 800b86a:	6a1b      	ldr	r3, [r3, #32]
 800b86c:	f023 0210 	bic.w	r2, r3, #16
 800b870:	68fb      	ldr	r3, [r7, #12]
 800b872:	621a      	str	r2, [r3, #32]
 800b874:	68fb      	ldr	r3, [r7, #12]
 800b876:	699b      	ldr	r3, [r3, #24]
 800b878:	617b      	str	r3, [r7, #20]
 800b87a:	68fb      	ldr	r3, [r7, #12]
 800b87c:	6a1b      	ldr	r3, [r3, #32]
 800b87e:	613b      	str	r3, [r7, #16]
 800b880:	697b      	ldr	r3, [r7, #20]
 800b882:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b886:	617b      	str	r3, [r7, #20]
 800b888:	687b      	ldr	r3, [r7, #4]
 800b88a:	021b      	lsls	r3, r3, #8
 800b88c:	697a      	ldr	r2, [r7, #20]
 800b88e:	4313      	orrs	r3, r2
 800b890:	617b      	str	r3, [r7, #20]
 800b892:	697b      	ldr	r3, [r7, #20]
 800b894:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800b898:	617b      	str	r3, [r7, #20]
 800b89a:	683b      	ldr	r3, [r7, #0]
 800b89c:	031b      	lsls	r3, r3, #12
 800b89e:	b29b      	uxth	r3, r3
 800b8a0:	697a      	ldr	r2, [r7, #20]
 800b8a2:	4313      	orrs	r3, r2
 800b8a4:	617b      	str	r3, [r7, #20]
 800b8a6:	693b      	ldr	r3, [r7, #16]
 800b8a8:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800b8ac:	613b      	str	r3, [r7, #16]
 800b8ae:	68bb      	ldr	r3, [r7, #8]
 800b8b0:	011b      	lsls	r3, r3, #4
 800b8b2:	f003 03a0 	and.w	r3, r3, #160	; 0xa0
 800b8b6:	693a      	ldr	r2, [r7, #16]
 800b8b8:	4313      	orrs	r3, r2
 800b8ba:	613b      	str	r3, [r7, #16]
 800b8bc:	68fb      	ldr	r3, [r7, #12]
 800b8be:	697a      	ldr	r2, [r7, #20]
 800b8c0:	619a      	str	r2, [r3, #24]
 800b8c2:	68fb      	ldr	r3, [r7, #12]
 800b8c4:	693a      	ldr	r2, [r7, #16]
 800b8c6:	621a      	str	r2, [r3, #32]
 800b8c8:	bf00      	nop
 800b8ca:	371c      	adds	r7, #28
 800b8cc:	46bd      	mov	sp, r7
 800b8ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8d2:	4770      	bx	lr

0800b8d4 <TIM_TI2_ConfigInputStage>:
 800b8d4:	b480      	push	{r7}
 800b8d6:	b087      	sub	sp, #28
 800b8d8:	af00      	add	r7, sp, #0
 800b8da:	60f8      	str	r0, [r7, #12]
 800b8dc:	60b9      	str	r1, [r7, #8]
 800b8de:	607a      	str	r2, [r7, #4]
 800b8e0:	68fb      	ldr	r3, [r7, #12]
 800b8e2:	6a1b      	ldr	r3, [r3, #32]
 800b8e4:	f023 0210 	bic.w	r2, r3, #16
 800b8e8:	68fb      	ldr	r3, [r7, #12]
 800b8ea:	621a      	str	r2, [r3, #32]
 800b8ec:	68fb      	ldr	r3, [r7, #12]
 800b8ee:	699b      	ldr	r3, [r3, #24]
 800b8f0:	617b      	str	r3, [r7, #20]
 800b8f2:	68fb      	ldr	r3, [r7, #12]
 800b8f4:	6a1b      	ldr	r3, [r3, #32]
 800b8f6:	613b      	str	r3, [r7, #16]
 800b8f8:	697b      	ldr	r3, [r7, #20]
 800b8fa:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800b8fe:	617b      	str	r3, [r7, #20]
 800b900:	687b      	ldr	r3, [r7, #4]
 800b902:	031b      	lsls	r3, r3, #12
 800b904:	697a      	ldr	r2, [r7, #20]
 800b906:	4313      	orrs	r3, r2
 800b908:	617b      	str	r3, [r7, #20]
 800b90a:	693b      	ldr	r3, [r7, #16]
 800b90c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800b910:	613b      	str	r3, [r7, #16]
 800b912:	68bb      	ldr	r3, [r7, #8]
 800b914:	011b      	lsls	r3, r3, #4
 800b916:	693a      	ldr	r2, [r7, #16]
 800b918:	4313      	orrs	r3, r2
 800b91a:	613b      	str	r3, [r7, #16]
 800b91c:	68fb      	ldr	r3, [r7, #12]
 800b91e:	697a      	ldr	r2, [r7, #20]
 800b920:	619a      	str	r2, [r3, #24]
 800b922:	68fb      	ldr	r3, [r7, #12]
 800b924:	693a      	ldr	r2, [r7, #16]
 800b926:	621a      	str	r2, [r3, #32]
 800b928:	bf00      	nop
 800b92a:	371c      	adds	r7, #28
 800b92c:	46bd      	mov	sp, r7
 800b92e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b932:	4770      	bx	lr

0800b934 <TIM_TI3_SetConfig>:
 800b934:	b480      	push	{r7}
 800b936:	b087      	sub	sp, #28
 800b938:	af00      	add	r7, sp, #0
 800b93a:	60f8      	str	r0, [r7, #12]
 800b93c:	60b9      	str	r1, [r7, #8]
 800b93e:	607a      	str	r2, [r7, #4]
 800b940:	603b      	str	r3, [r7, #0]
 800b942:	68fb      	ldr	r3, [r7, #12]
 800b944:	6a1b      	ldr	r3, [r3, #32]
 800b946:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800b94a:	68fb      	ldr	r3, [r7, #12]
 800b94c:	621a      	str	r2, [r3, #32]
 800b94e:	68fb      	ldr	r3, [r7, #12]
 800b950:	69db      	ldr	r3, [r3, #28]
 800b952:	617b      	str	r3, [r7, #20]
 800b954:	68fb      	ldr	r3, [r7, #12]
 800b956:	6a1b      	ldr	r3, [r3, #32]
 800b958:	613b      	str	r3, [r7, #16]
 800b95a:	697b      	ldr	r3, [r7, #20]
 800b95c:	f023 0303 	bic.w	r3, r3, #3
 800b960:	617b      	str	r3, [r7, #20]
 800b962:	697a      	ldr	r2, [r7, #20]
 800b964:	687b      	ldr	r3, [r7, #4]
 800b966:	4313      	orrs	r3, r2
 800b968:	617b      	str	r3, [r7, #20]
 800b96a:	697b      	ldr	r3, [r7, #20]
 800b96c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800b970:	617b      	str	r3, [r7, #20]
 800b972:	683b      	ldr	r3, [r7, #0]
 800b974:	011b      	lsls	r3, r3, #4
 800b976:	b2db      	uxtb	r3, r3
 800b978:	697a      	ldr	r2, [r7, #20]
 800b97a:	4313      	orrs	r3, r2
 800b97c:	617b      	str	r3, [r7, #20]
 800b97e:	693b      	ldr	r3, [r7, #16]
 800b980:	f423 6320 	bic.w	r3, r3, #2560	; 0xa00
 800b984:	613b      	str	r3, [r7, #16]
 800b986:	68bb      	ldr	r3, [r7, #8]
 800b988:	021b      	lsls	r3, r3, #8
 800b98a:	f403 6320 	and.w	r3, r3, #2560	; 0xa00
 800b98e:	693a      	ldr	r2, [r7, #16]
 800b990:	4313      	orrs	r3, r2
 800b992:	613b      	str	r3, [r7, #16]
 800b994:	68fb      	ldr	r3, [r7, #12]
 800b996:	697a      	ldr	r2, [r7, #20]
 800b998:	61da      	str	r2, [r3, #28]
 800b99a:	68fb      	ldr	r3, [r7, #12]
 800b99c:	693a      	ldr	r2, [r7, #16]
 800b99e:	621a      	str	r2, [r3, #32]
 800b9a0:	bf00      	nop
 800b9a2:	371c      	adds	r7, #28
 800b9a4:	46bd      	mov	sp, r7
 800b9a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9aa:	4770      	bx	lr

0800b9ac <TIM_TI4_SetConfig>:
 800b9ac:	b480      	push	{r7}
 800b9ae:	b087      	sub	sp, #28
 800b9b0:	af00      	add	r7, sp, #0
 800b9b2:	60f8      	str	r0, [r7, #12]
 800b9b4:	60b9      	str	r1, [r7, #8]
 800b9b6:	607a      	str	r2, [r7, #4]
 800b9b8:	603b      	str	r3, [r7, #0]
 800b9ba:	68fb      	ldr	r3, [r7, #12]
 800b9bc:	6a1b      	ldr	r3, [r3, #32]
 800b9be:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800b9c2:	68fb      	ldr	r3, [r7, #12]
 800b9c4:	621a      	str	r2, [r3, #32]
 800b9c6:	68fb      	ldr	r3, [r7, #12]
 800b9c8:	69db      	ldr	r3, [r3, #28]
 800b9ca:	617b      	str	r3, [r7, #20]
 800b9cc:	68fb      	ldr	r3, [r7, #12]
 800b9ce:	6a1b      	ldr	r3, [r3, #32]
 800b9d0:	613b      	str	r3, [r7, #16]
 800b9d2:	697b      	ldr	r3, [r7, #20]
 800b9d4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b9d8:	617b      	str	r3, [r7, #20]
 800b9da:	687b      	ldr	r3, [r7, #4]
 800b9dc:	021b      	lsls	r3, r3, #8
 800b9de:	697a      	ldr	r2, [r7, #20]
 800b9e0:	4313      	orrs	r3, r2
 800b9e2:	617b      	str	r3, [r7, #20]
 800b9e4:	697b      	ldr	r3, [r7, #20]
 800b9e6:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800b9ea:	617b      	str	r3, [r7, #20]
 800b9ec:	683b      	ldr	r3, [r7, #0]
 800b9ee:	031b      	lsls	r3, r3, #12
 800b9f0:	b29b      	uxth	r3, r3
 800b9f2:	697a      	ldr	r2, [r7, #20]
 800b9f4:	4313      	orrs	r3, r2
 800b9f6:	617b      	str	r3, [r7, #20]
 800b9f8:	693b      	ldr	r3, [r7, #16]
 800b9fa:	f423 4320 	bic.w	r3, r3, #40960	; 0xa000
 800b9fe:	613b      	str	r3, [r7, #16]
 800ba00:	68bb      	ldr	r3, [r7, #8]
 800ba02:	031b      	lsls	r3, r3, #12
 800ba04:	f403 4320 	and.w	r3, r3, #40960	; 0xa000
 800ba08:	693a      	ldr	r2, [r7, #16]
 800ba0a:	4313      	orrs	r3, r2
 800ba0c:	613b      	str	r3, [r7, #16]
 800ba0e:	68fb      	ldr	r3, [r7, #12]
 800ba10:	697a      	ldr	r2, [r7, #20]
 800ba12:	61da      	str	r2, [r3, #28]
 800ba14:	68fb      	ldr	r3, [r7, #12]
 800ba16:	693a      	ldr	r2, [r7, #16]
 800ba18:	621a      	str	r2, [r3, #32]
 800ba1a:	bf00      	nop
 800ba1c:	371c      	adds	r7, #28
 800ba1e:	46bd      	mov	sp, r7
 800ba20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba24:	4770      	bx	lr

0800ba26 <TIM_ITRx_SetConfig>:
 800ba26:	b480      	push	{r7}
 800ba28:	b085      	sub	sp, #20
 800ba2a:	af00      	add	r7, sp, #0
 800ba2c:	6078      	str	r0, [r7, #4]
 800ba2e:	6039      	str	r1, [r7, #0]
 800ba30:	687b      	ldr	r3, [r7, #4]
 800ba32:	689b      	ldr	r3, [r3, #8]
 800ba34:	60fb      	str	r3, [r7, #12]
 800ba36:	68fb      	ldr	r3, [r7, #12]
 800ba38:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800ba3c:	60fb      	str	r3, [r7, #12]
 800ba3e:	683a      	ldr	r2, [r7, #0]
 800ba40:	68fb      	ldr	r3, [r7, #12]
 800ba42:	4313      	orrs	r3, r2
 800ba44:	f043 0307 	orr.w	r3, r3, #7
 800ba48:	60fb      	str	r3, [r7, #12]
 800ba4a:	687b      	ldr	r3, [r7, #4]
 800ba4c:	68fa      	ldr	r2, [r7, #12]
 800ba4e:	609a      	str	r2, [r3, #8]
 800ba50:	bf00      	nop
 800ba52:	3714      	adds	r7, #20
 800ba54:	46bd      	mov	sp, r7
 800ba56:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba5a:	4770      	bx	lr

0800ba5c <TIM_ETR_SetConfig>:
 800ba5c:	b480      	push	{r7}
 800ba5e:	b087      	sub	sp, #28
 800ba60:	af00      	add	r7, sp, #0
 800ba62:	60f8      	str	r0, [r7, #12]
 800ba64:	60b9      	str	r1, [r7, #8]
 800ba66:	607a      	str	r2, [r7, #4]
 800ba68:	603b      	str	r3, [r7, #0]
 800ba6a:	68fb      	ldr	r3, [r7, #12]
 800ba6c:	689b      	ldr	r3, [r3, #8]
 800ba6e:	617b      	str	r3, [r7, #20]
 800ba70:	697b      	ldr	r3, [r7, #20]
 800ba72:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800ba76:	617b      	str	r3, [r7, #20]
 800ba78:	683b      	ldr	r3, [r7, #0]
 800ba7a:	021a      	lsls	r2, r3, #8
 800ba7c:	687b      	ldr	r3, [r7, #4]
 800ba7e:	431a      	orrs	r2, r3
 800ba80:	68bb      	ldr	r3, [r7, #8]
 800ba82:	4313      	orrs	r3, r2
 800ba84:	697a      	ldr	r2, [r7, #20]
 800ba86:	4313      	orrs	r3, r2
 800ba88:	617b      	str	r3, [r7, #20]
 800ba8a:	68fb      	ldr	r3, [r7, #12]
 800ba8c:	697a      	ldr	r2, [r7, #20]
 800ba8e:	609a      	str	r2, [r3, #8]
 800ba90:	bf00      	nop
 800ba92:	371c      	adds	r7, #28
 800ba94:	46bd      	mov	sp, r7
 800ba96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba9a:	4770      	bx	lr

0800ba9c <TIM_CCxChannelCmd>:
 800ba9c:	b480      	push	{r7}
 800ba9e:	b087      	sub	sp, #28
 800baa0:	af00      	add	r7, sp, #0
 800baa2:	60f8      	str	r0, [r7, #12]
 800baa4:	60b9      	str	r1, [r7, #8]
 800baa6:	607a      	str	r2, [r7, #4]
 800baa8:	68bb      	ldr	r3, [r7, #8]
 800baaa:	f003 031f 	and.w	r3, r3, #31
 800baae:	2201      	movs	r2, #1
 800bab0:	fa02 f303 	lsl.w	r3, r2, r3
 800bab4:	617b      	str	r3, [r7, #20]
 800bab6:	68fb      	ldr	r3, [r7, #12]
 800bab8:	6a1a      	ldr	r2, [r3, #32]
 800baba:	697b      	ldr	r3, [r7, #20]
 800babc:	43db      	mvns	r3, r3
 800babe:	401a      	ands	r2, r3
 800bac0:	68fb      	ldr	r3, [r7, #12]
 800bac2:	621a      	str	r2, [r3, #32]
 800bac4:	68fb      	ldr	r3, [r7, #12]
 800bac6:	6a1a      	ldr	r2, [r3, #32]
 800bac8:	68bb      	ldr	r3, [r7, #8]
 800baca:	f003 031f 	and.w	r3, r3, #31
 800bace:	6879      	ldr	r1, [r7, #4]
 800bad0:	fa01 f303 	lsl.w	r3, r1, r3
 800bad4:	431a      	orrs	r2, r3
 800bad6:	68fb      	ldr	r3, [r7, #12]
 800bad8:	621a      	str	r2, [r3, #32]
 800bada:	bf00      	nop
 800badc:	371c      	adds	r7, #28
 800bade:	46bd      	mov	sp, r7
 800bae0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bae4:	4770      	bx	lr
	...

0800bae8 <HAL_TIMEx_MasterConfigSynchronization>:
 800bae8:	b480      	push	{r7}
 800baea:	b085      	sub	sp, #20
 800baec:	af00      	add	r7, sp, #0
 800baee:	6078      	str	r0, [r7, #4]
 800baf0:	6039      	str	r1, [r7, #0]
 800baf2:	687b      	ldr	r3, [r7, #4]
 800baf4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800baf8:	2b01      	cmp	r3, #1
 800bafa:	d101      	bne.n	800bb00 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800bafc:	2302      	movs	r3, #2
 800bafe:	e05a      	b.n	800bbb6 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 800bb00:	687b      	ldr	r3, [r7, #4]
 800bb02:	2201      	movs	r2, #1
 800bb04:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bb08:	687b      	ldr	r3, [r7, #4]
 800bb0a:	2202      	movs	r2, #2
 800bb0c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bb10:	687b      	ldr	r3, [r7, #4]
 800bb12:	681b      	ldr	r3, [r3, #0]
 800bb14:	685b      	ldr	r3, [r3, #4]
 800bb16:	60fb      	str	r3, [r7, #12]
 800bb18:	687b      	ldr	r3, [r7, #4]
 800bb1a:	681b      	ldr	r3, [r3, #0]
 800bb1c:	689b      	ldr	r3, [r3, #8]
 800bb1e:	60bb      	str	r3, [r7, #8]
 800bb20:	68fb      	ldr	r3, [r7, #12]
 800bb22:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800bb26:	60fb      	str	r3, [r7, #12]
 800bb28:	683b      	ldr	r3, [r7, #0]
 800bb2a:	681b      	ldr	r3, [r3, #0]
 800bb2c:	68fa      	ldr	r2, [r7, #12]
 800bb2e:	4313      	orrs	r3, r2
 800bb30:	60fb      	str	r3, [r7, #12]
 800bb32:	687b      	ldr	r3, [r7, #4]
 800bb34:	681b      	ldr	r3, [r3, #0]
 800bb36:	68fa      	ldr	r2, [r7, #12]
 800bb38:	605a      	str	r2, [r3, #4]
 800bb3a:	687b      	ldr	r3, [r7, #4]
 800bb3c:	681b      	ldr	r3, [r3, #0]
 800bb3e:	4a21      	ldr	r2, [pc, #132]	; (800bbc4 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 800bb40:	4293      	cmp	r3, r2
 800bb42:	d022      	beq.n	800bb8a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bb44:	687b      	ldr	r3, [r7, #4]
 800bb46:	681b      	ldr	r3, [r3, #0]
 800bb48:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800bb4c:	d01d      	beq.n	800bb8a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bb4e:	687b      	ldr	r3, [r7, #4]
 800bb50:	681b      	ldr	r3, [r3, #0]
 800bb52:	4a1d      	ldr	r2, [pc, #116]	; (800bbc8 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 800bb54:	4293      	cmp	r3, r2
 800bb56:	d018      	beq.n	800bb8a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bb58:	687b      	ldr	r3, [r7, #4]
 800bb5a:	681b      	ldr	r3, [r3, #0]
 800bb5c:	4a1b      	ldr	r2, [pc, #108]	; (800bbcc <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800bb5e:	4293      	cmp	r3, r2
 800bb60:	d013      	beq.n	800bb8a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bb62:	687b      	ldr	r3, [r7, #4]
 800bb64:	681b      	ldr	r3, [r3, #0]
 800bb66:	4a1a      	ldr	r2, [pc, #104]	; (800bbd0 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 800bb68:	4293      	cmp	r3, r2
 800bb6a:	d00e      	beq.n	800bb8a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bb6c:	687b      	ldr	r3, [r7, #4]
 800bb6e:	681b      	ldr	r3, [r3, #0]
 800bb70:	4a18      	ldr	r2, [pc, #96]	; (800bbd4 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 800bb72:	4293      	cmp	r3, r2
 800bb74:	d009      	beq.n	800bb8a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bb76:	687b      	ldr	r3, [r7, #4]
 800bb78:	681b      	ldr	r3, [r3, #0]
 800bb7a:	4a17      	ldr	r2, [pc, #92]	; (800bbd8 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 800bb7c:	4293      	cmp	r3, r2
 800bb7e:	d004      	beq.n	800bb8a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bb80:	687b      	ldr	r3, [r7, #4]
 800bb82:	681b      	ldr	r3, [r3, #0]
 800bb84:	4a15      	ldr	r2, [pc, #84]	; (800bbdc <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800bb86:	4293      	cmp	r3, r2
 800bb88:	d10c      	bne.n	800bba4 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 800bb8a:	68bb      	ldr	r3, [r7, #8]
 800bb8c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800bb90:	60bb      	str	r3, [r7, #8]
 800bb92:	683b      	ldr	r3, [r7, #0]
 800bb94:	685b      	ldr	r3, [r3, #4]
 800bb96:	68ba      	ldr	r2, [r7, #8]
 800bb98:	4313      	orrs	r3, r2
 800bb9a:	60bb      	str	r3, [r7, #8]
 800bb9c:	687b      	ldr	r3, [r7, #4]
 800bb9e:	681b      	ldr	r3, [r3, #0]
 800bba0:	68ba      	ldr	r2, [r7, #8]
 800bba2:	609a      	str	r2, [r3, #8]
 800bba4:	687b      	ldr	r3, [r7, #4]
 800bba6:	2201      	movs	r2, #1
 800bba8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bbac:	687b      	ldr	r3, [r7, #4]
 800bbae:	2200      	movs	r2, #0
 800bbb0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bbb4:	2300      	movs	r3, #0
 800bbb6:	4618      	mov	r0, r3
 800bbb8:	3714      	adds	r7, #20
 800bbba:	46bd      	mov	sp, r7
 800bbbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bbc0:	4770      	bx	lr
 800bbc2:	bf00      	nop
 800bbc4:	40010000 	.word	0x40010000
 800bbc8:	40000400 	.word	0x40000400
 800bbcc:	40000800 	.word	0x40000800
 800bbd0:	40000c00 	.word	0x40000c00
 800bbd4:	40010400 	.word	0x40010400
 800bbd8:	40014000 	.word	0x40014000
 800bbdc:	40001800 	.word	0x40001800

0800bbe0 <HAL_TIMEx_ConfigBreakDeadTime>:
 800bbe0:	b480      	push	{r7}
 800bbe2:	b085      	sub	sp, #20
 800bbe4:	af00      	add	r7, sp, #0
 800bbe6:	6078      	str	r0, [r7, #4]
 800bbe8:	6039      	str	r1, [r7, #0]
 800bbea:	2300      	movs	r3, #0
 800bbec:	60fb      	str	r3, [r7, #12]
 800bbee:	687b      	ldr	r3, [r7, #4]
 800bbf0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800bbf4:	2b01      	cmp	r3, #1
 800bbf6:	d101      	bne.n	800bbfc <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 800bbf8:	2302      	movs	r3, #2
 800bbfa:	e03d      	b.n	800bc78 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 800bbfc:	687b      	ldr	r3, [r7, #4]
 800bbfe:	2201      	movs	r2, #1
 800bc00:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bc04:	68fb      	ldr	r3, [r7, #12]
 800bc06:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 800bc0a:	683b      	ldr	r3, [r7, #0]
 800bc0c:	68db      	ldr	r3, [r3, #12]
 800bc0e:	4313      	orrs	r3, r2
 800bc10:	60fb      	str	r3, [r7, #12]
 800bc12:	68fb      	ldr	r3, [r7, #12]
 800bc14:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800bc18:	683b      	ldr	r3, [r7, #0]
 800bc1a:	689b      	ldr	r3, [r3, #8]
 800bc1c:	4313      	orrs	r3, r2
 800bc1e:	60fb      	str	r3, [r7, #12]
 800bc20:	68fb      	ldr	r3, [r7, #12]
 800bc22:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 800bc26:	683b      	ldr	r3, [r7, #0]
 800bc28:	685b      	ldr	r3, [r3, #4]
 800bc2a:	4313      	orrs	r3, r2
 800bc2c:	60fb      	str	r3, [r7, #12]
 800bc2e:	68fb      	ldr	r3, [r7, #12]
 800bc30:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 800bc34:	683b      	ldr	r3, [r7, #0]
 800bc36:	681b      	ldr	r3, [r3, #0]
 800bc38:	4313      	orrs	r3, r2
 800bc3a:	60fb      	str	r3, [r7, #12]
 800bc3c:	68fb      	ldr	r3, [r7, #12]
 800bc3e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800bc42:	683b      	ldr	r3, [r7, #0]
 800bc44:	691b      	ldr	r3, [r3, #16]
 800bc46:	4313      	orrs	r3, r2
 800bc48:	60fb      	str	r3, [r7, #12]
 800bc4a:	68fb      	ldr	r3, [r7, #12]
 800bc4c:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 800bc50:	683b      	ldr	r3, [r7, #0]
 800bc52:	695b      	ldr	r3, [r3, #20]
 800bc54:	4313      	orrs	r3, r2
 800bc56:	60fb      	str	r3, [r7, #12]
 800bc58:	68fb      	ldr	r3, [r7, #12]
 800bc5a:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 800bc5e:	683b      	ldr	r3, [r7, #0]
 800bc60:	69db      	ldr	r3, [r3, #28]
 800bc62:	4313      	orrs	r3, r2
 800bc64:	60fb      	str	r3, [r7, #12]
 800bc66:	687b      	ldr	r3, [r7, #4]
 800bc68:	681b      	ldr	r3, [r3, #0]
 800bc6a:	68fa      	ldr	r2, [r7, #12]
 800bc6c:	645a      	str	r2, [r3, #68]	; 0x44
 800bc6e:	687b      	ldr	r3, [r7, #4]
 800bc70:	2200      	movs	r2, #0
 800bc72:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bc76:	2300      	movs	r3, #0
 800bc78:	4618      	mov	r0, r3
 800bc7a:	3714      	adds	r7, #20
 800bc7c:	46bd      	mov	sp, r7
 800bc7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc82:	4770      	bx	lr

0800bc84 <HAL_TIMEx_CommutCallback>:
 800bc84:	b480      	push	{r7}
 800bc86:	b083      	sub	sp, #12
 800bc88:	af00      	add	r7, sp, #0
 800bc8a:	6078      	str	r0, [r7, #4]
 800bc8c:	bf00      	nop
 800bc8e:	370c      	adds	r7, #12
 800bc90:	46bd      	mov	sp, r7
 800bc92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc96:	4770      	bx	lr

0800bc98 <HAL_TIMEx_BreakCallback>:
 800bc98:	b480      	push	{r7}
 800bc9a:	b083      	sub	sp, #12
 800bc9c:	af00      	add	r7, sp, #0
 800bc9e:	6078      	str	r0, [r7, #4]
 800bca0:	bf00      	nop
 800bca2:	370c      	adds	r7, #12
 800bca4:	46bd      	mov	sp, r7
 800bca6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcaa:	4770      	bx	lr

0800bcac <HAL_UART_Init>:
 800bcac:	b580      	push	{r7, lr}
 800bcae:	b082      	sub	sp, #8
 800bcb0:	af00      	add	r7, sp, #0
 800bcb2:	6078      	str	r0, [r7, #4]
 800bcb4:	687b      	ldr	r3, [r7, #4]
 800bcb6:	2b00      	cmp	r3, #0
 800bcb8:	d101      	bne.n	800bcbe <HAL_UART_Init+0x12>
 800bcba:	2301      	movs	r3, #1
 800bcbc:	e03f      	b.n	800bd3e <HAL_UART_Init+0x92>
 800bcbe:	687b      	ldr	r3, [r7, #4]
 800bcc0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800bcc4:	b2db      	uxtb	r3, r3
 800bcc6:	2b00      	cmp	r3, #0
 800bcc8:	d106      	bne.n	800bcd8 <HAL_UART_Init+0x2c>
 800bcca:	687b      	ldr	r3, [r7, #4]
 800bccc:	2200      	movs	r2, #0
 800bcce:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bcd2:	6878      	ldr	r0, [r7, #4]
 800bcd4:	f7fb f95c 	bl	8006f90 <HAL_UART_MspInit>
 800bcd8:	687b      	ldr	r3, [r7, #4]
 800bcda:	2224      	movs	r2, #36	; 0x24
 800bcdc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bce0:	687b      	ldr	r3, [r7, #4]
 800bce2:	681b      	ldr	r3, [r3, #0]
 800bce4:	68da      	ldr	r2, [r3, #12]
 800bce6:	687b      	ldr	r3, [r7, #4]
 800bce8:	681b      	ldr	r3, [r3, #0]
 800bcea:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800bcee:	60da      	str	r2, [r3, #12]
 800bcf0:	6878      	ldr	r0, [r7, #4]
 800bcf2:	f000 fe81 	bl	800c9f8 <UART_SetConfig>
 800bcf6:	687b      	ldr	r3, [r7, #4]
 800bcf8:	681b      	ldr	r3, [r3, #0]
 800bcfa:	691a      	ldr	r2, [r3, #16]
 800bcfc:	687b      	ldr	r3, [r7, #4]
 800bcfe:	681b      	ldr	r3, [r3, #0]
 800bd00:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800bd04:	611a      	str	r2, [r3, #16]
 800bd06:	687b      	ldr	r3, [r7, #4]
 800bd08:	681b      	ldr	r3, [r3, #0]
 800bd0a:	695a      	ldr	r2, [r3, #20]
 800bd0c:	687b      	ldr	r3, [r7, #4]
 800bd0e:	681b      	ldr	r3, [r3, #0]
 800bd10:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800bd14:	615a      	str	r2, [r3, #20]
 800bd16:	687b      	ldr	r3, [r7, #4]
 800bd18:	681b      	ldr	r3, [r3, #0]
 800bd1a:	68da      	ldr	r2, [r3, #12]
 800bd1c:	687b      	ldr	r3, [r7, #4]
 800bd1e:	681b      	ldr	r3, [r3, #0]
 800bd20:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800bd24:	60da      	str	r2, [r3, #12]
 800bd26:	687b      	ldr	r3, [r7, #4]
 800bd28:	2200      	movs	r2, #0
 800bd2a:	641a      	str	r2, [r3, #64]	; 0x40
 800bd2c:	687b      	ldr	r3, [r7, #4]
 800bd2e:	2220      	movs	r2, #32
 800bd30:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bd34:	687b      	ldr	r3, [r7, #4]
 800bd36:	2220      	movs	r2, #32
 800bd38:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800bd3c:	2300      	movs	r3, #0
 800bd3e:	4618      	mov	r0, r3
 800bd40:	3708      	adds	r7, #8
 800bd42:	46bd      	mov	sp, r7
 800bd44:	bd80      	pop	{r7, pc}

0800bd46 <HAL_UART_Transmit>:
 800bd46:	b580      	push	{r7, lr}
 800bd48:	b08a      	sub	sp, #40	; 0x28
 800bd4a:	af02      	add	r7, sp, #8
 800bd4c:	60f8      	str	r0, [r7, #12]
 800bd4e:	60b9      	str	r1, [r7, #8]
 800bd50:	603b      	str	r3, [r7, #0]
 800bd52:	4613      	mov	r3, r2
 800bd54:	80fb      	strh	r3, [r7, #6]
 800bd56:	2300      	movs	r3, #0
 800bd58:	617b      	str	r3, [r7, #20]
 800bd5a:	68fb      	ldr	r3, [r7, #12]
 800bd5c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800bd60:	b2db      	uxtb	r3, r3
 800bd62:	2b20      	cmp	r3, #32
 800bd64:	d17c      	bne.n	800be60 <HAL_UART_Transmit+0x11a>
 800bd66:	68bb      	ldr	r3, [r7, #8]
 800bd68:	2b00      	cmp	r3, #0
 800bd6a:	d002      	beq.n	800bd72 <HAL_UART_Transmit+0x2c>
 800bd6c:	88fb      	ldrh	r3, [r7, #6]
 800bd6e:	2b00      	cmp	r3, #0
 800bd70:	d101      	bne.n	800bd76 <HAL_UART_Transmit+0x30>
 800bd72:	2301      	movs	r3, #1
 800bd74:	e075      	b.n	800be62 <HAL_UART_Transmit+0x11c>
 800bd76:	68fb      	ldr	r3, [r7, #12]
 800bd78:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800bd7c:	2b01      	cmp	r3, #1
 800bd7e:	d101      	bne.n	800bd84 <HAL_UART_Transmit+0x3e>
 800bd80:	2302      	movs	r3, #2
 800bd82:	e06e      	b.n	800be62 <HAL_UART_Transmit+0x11c>
 800bd84:	68fb      	ldr	r3, [r7, #12]
 800bd86:	2201      	movs	r2, #1
 800bd88:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bd8c:	68fb      	ldr	r3, [r7, #12]
 800bd8e:	2200      	movs	r2, #0
 800bd90:	641a      	str	r2, [r3, #64]	; 0x40
 800bd92:	68fb      	ldr	r3, [r7, #12]
 800bd94:	2221      	movs	r2, #33	; 0x21
 800bd96:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bd9a:	f7fb fbdb 	bl	8007554 <HAL_GetTick>
 800bd9e:	6178      	str	r0, [r7, #20]
 800bda0:	68fb      	ldr	r3, [r7, #12]
 800bda2:	88fa      	ldrh	r2, [r7, #6]
 800bda4:	849a      	strh	r2, [r3, #36]	; 0x24
 800bda6:	68fb      	ldr	r3, [r7, #12]
 800bda8:	88fa      	ldrh	r2, [r7, #6]
 800bdaa:	84da      	strh	r2, [r3, #38]	; 0x26
 800bdac:	68fb      	ldr	r3, [r7, #12]
 800bdae:	689b      	ldr	r3, [r3, #8]
 800bdb0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800bdb4:	d108      	bne.n	800bdc8 <HAL_UART_Transmit+0x82>
 800bdb6:	68fb      	ldr	r3, [r7, #12]
 800bdb8:	691b      	ldr	r3, [r3, #16]
 800bdba:	2b00      	cmp	r3, #0
 800bdbc:	d104      	bne.n	800bdc8 <HAL_UART_Transmit+0x82>
 800bdbe:	2300      	movs	r3, #0
 800bdc0:	61fb      	str	r3, [r7, #28]
 800bdc2:	68bb      	ldr	r3, [r7, #8]
 800bdc4:	61bb      	str	r3, [r7, #24]
 800bdc6:	e003      	b.n	800bdd0 <HAL_UART_Transmit+0x8a>
 800bdc8:	68bb      	ldr	r3, [r7, #8]
 800bdca:	61fb      	str	r3, [r7, #28]
 800bdcc:	2300      	movs	r3, #0
 800bdce:	61bb      	str	r3, [r7, #24]
 800bdd0:	68fb      	ldr	r3, [r7, #12]
 800bdd2:	2200      	movs	r2, #0
 800bdd4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bdd8:	e02a      	b.n	800be30 <HAL_UART_Transmit+0xea>
 800bdda:	683b      	ldr	r3, [r7, #0]
 800bddc:	9300      	str	r3, [sp, #0]
 800bdde:	697b      	ldr	r3, [r7, #20]
 800bde0:	2200      	movs	r2, #0
 800bde2:	2180      	movs	r1, #128	; 0x80
 800bde4:	68f8      	ldr	r0, [r7, #12]
 800bde6:	f000 fbc1 	bl	800c56c <UART_WaitOnFlagUntilTimeout>
 800bdea:	4603      	mov	r3, r0
 800bdec:	2b00      	cmp	r3, #0
 800bdee:	d001      	beq.n	800bdf4 <HAL_UART_Transmit+0xae>
 800bdf0:	2303      	movs	r3, #3
 800bdf2:	e036      	b.n	800be62 <HAL_UART_Transmit+0x11c>
 800bdf4:	69fb      	ldr	r3, [r7, #28]
 800bdf6:	2b00      	cmp	r3, #0
 800bdf8:	d10b      	bne.n	800be12 <HAL_UART_Transmit+0xcc>
 800bdfa:	69bb      	ldr	r3, [r7, #24]
 800bdfc:	881b      	ldrh	r3, [r3, #0]
 800bdfe:	461a      	mov	r2, r3
 800be00:	68fb      	ldr	r3, [r7, #12]
 800be02:	681b      	ldr	r3, [r3, #0]
 800be04:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800be08:	605a      	str	r2, [r3, #4]
 800be0a:	69bb      	ldr	r3, [r7, #24]
 800be0c:	3302      	adds	r3, #2
 800be0e:	61bb      	str	r3, [r7, #24]
 800be10:	e007      	b.n	800be22 <HAL_UART_Transmit+0xdc>
 800be12:	69fb      	ldr	r3, [r7, #28]
 800be14:	781a      	ldrb	r2, [r3, #0]
 800be16:	68fb      	ldr	r3, [r7, #12]
 800be18:	681b      	ldr	r3, [r3, #0]
 800be1a:	605a      	str	r2, [r3, #4]
 800be1c:	69fb      	ldr	r3, [r7, #28]
 800be1e:	3301      	adds	r3, #1
 800be20:	61fb      	str	r3, [r7, #28]
 800be22:	68fb      	ldr	r3, [r7, #12]
 800be24:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800be26:	b29b      	uxth	r3, r3
 800be28:	3b01      	subs	r3, #1
 800be2a:	b29a      	uxth	r2, r3
 800be2c:	68fb      	ldr	r3, [r7, #12]
 800be2e:	84da      	strh	r2, [r3, #38]	; 0x26
 800be30:	68fb      	ldr	r3, [r7, #12]
 800be32:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800be34:	b29b      	uxth	r3, r3
 800be36:	2b00      	cmp	r3, #0
 800be38:	d1cf      	bne.n	800bdda <HAL_UART_Transmit+0x94>
 800be3a:	683b      	ldr	r3, [r7, #0]
 800be3c:	9300      	str	r3, [sp, #0]
 800be3e:	697b      	ldr	r3, [r7, #20]
 800be40:	2200      	movs	r2, #0
 800be42:	2140      	movs	r1, #64	; 0x40
 800be44:	68f8      	ldr	r0, [r7, #12]
 800be46:	f000 fb91 	bl	800c56c <UART_WaitOnFlagUntilTimeout>
 800be4a:	4603      	mov	r3, r0
 800be4c:	2b00      	cmp	r3, #0
 800be4e:	d001      	beq.n	800be54 <HAL_UART_Transmit+0x10e>
 800be50:	2303      	movs	r3, #3
 800be52:	e006      	b.n	800be62 <HAL_UART_Transmit+0x11c>
 800be54:	68fb      	ldr	r3, [r7, #12]
 800be56:	2220      	movs	r2, #32
 800be58:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800be5c:	2300      	movs	r3, #0
 800be5e:	e000      	b.n	800be62 <HAL_UART_Transmit+0x11c>
 800be60:	2302      	movs	r3, #2
 800be62:	4618      	mov	r0, r3
 800be64:	3720      	adds	r7, #32
 800be66:	46bd      	mov	sp, r7
 800be68:	bd80      	pop	{r7, pc}

0800be6a <HAL_UART_Receive>:
 800be6a:	b580      	push	{r7, lr}
 800be6c:	b08a      	sub	sp, #40	; 0x28
 800be6e:	af02      	add	r7, sp, #8
 800be70:	60f8      	str	r0, [r7, #12]
 800be72:	60b9      	str	r1, [r7, #8]
 800be74:	603b      	str	r3, [r7, #0]
 800be76:	4613      	mov	r3, r2
 800be78:	80fb      	strh	r3, [r7, #6]
 800be7a:	2300      	movs	r3, #0
 800be7c:	617b      	str	r3, [r7, #20]
 800be7e:	68fb      	ldr	r3, [r7, #12]
 800be80:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800be84:	b2db      	uxtb	r3, r3
 800be86:	2b20      	cmp	r3, #32
 800be88:	f040 808c 	bne.w	800bfa4 <HAL_UART_Receive+0x13a>
 800be8c:	68bb      	ldr	r3, [r7, #8]
 800be8e:	2b00      	cmp	r3, #0
 800be90:	d002      	beq.n	800be98 <HAL_UART_Receive+0x2e>
 800be92:	88fb      	ldrh	r3, [r7, #6]
 800be94:	2b00      	cmp	r3, #0
 800be96:	d101      	bne.n	800be9c <HAL_UART_Receive+0x32>
 800be98:	2301      	movs	r3, #1
 800be9a:	e084      	b.n	800bfa6 <HAL_UART_Receive+0x13c>
 800be9c:	68fb      	ldr	r3, [r7, #12]
 800be9e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800bea2:	2b01      	cmp	r3, #1
 800bea4:	d101      	bne.n	800beaa <HAL_UART_Receive+0x40>
 800bea6:	2302      	movs	r3, #2
 800bea8:	e07d      	b.n	800bfa6 <HAL_UART_Receive+0x13c>
 800beaa:	68fb      	ldr	r3, [r7, #12]
 800beac:	2201      	movs	r2, #1
 800beae:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800beb2:	68fb      	ldr	r3, [r7, #12]
 800beb4:	2200      	movs	r2, #0
 800beb6:	641a      	str	r2, [r3, #64]	; 0x40
 800beb8:	68fb      	ldr	r3, [r7, #12]
 800beba:	2222      	movs	r2, #34	; 0x22
 800bebc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800bec0:	68fb      	ldr	r3, [r7, #12]
 800bec2:	2200      	movs	r2, #0
 800bec4:	631a      	str	r2, [r3, #48]	; 0x30
 800bec6:	f7fb fb45 	bl	8007554 <HAL_GetTick>
 800beca:	6178      	str	r0, [r7, #20]
 800becc:	68fb      	ldr	r3, [r7, #12]
 800bece:	88fa      	ldrh	r2, [r7, #6]
 800bed0:	859a      	strh	r2, [r3, #44]	; 0x2c
 800bed2:	68fb      	ldr	r3, [r7, #12]
 800bed4:	88fa      	ldrh	r2, [r7, #6]
 800bed6:	85da      	strh	r2, [r3, #46]	; 0x2e
 800bed8:	68fb      	ldr	r3, [r7, #12]
 800beda:	689b      	ldr	r3, [r3, #8]
 800bedc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800bee0:	d108      	bne.n	800bef4 <HAL_UART_Receive+0x8a>
 800bee2:	68fb      	ldr	r3, [r7, #12]
 800bee4:	691b      	ldr	r3, [r3, #16]
 800bee6:	2b00      	cmp	r3, #0
 800bee8:	d104      	bne.n	800bef4 <HAL_UART_Receive+0x8a>
 800beea:	2300      	movs	r3, #0
 800beec:	61fb      	str	r3, [r7, #28]
 800beee:	68bb      	ldr	r3, [r7, #8]
 800bef0:	61bb      	str	r3, [r7, #24]
 800bef2:	e003      	b.n	800befc <HAL_UART_Receive+0x92>
 800bef4:	68bb      	ldr	r3, [r7, #8]
 800bef6:	61fb      	str	r3, [r7, #28]
 800bef8:	2300      	movs	r3, #0
 800befa:	61bb      	str	r3, [r7, #24]
 800befc:	68fb      	ldr	r3, [r7, #12]
 800befe:	2200      	movs	r2, #0
 800bf00:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bf04:	e043      	b.n	800bf8e <HAL_UART_Receive+0x124>
 800bf06:	683b      	ldr	r3, [r7, #0]
 800bf08:	9300      	str	r3, [sp, #0]
 800bf0a:	697b      	ldr	r3, [r7, #20]
 800bf0c:	2200      	movs	r2, #0
 800bf0e:	2120      	movs	r1, #32
 800bf10:	68f8      	ldr	r0, [r7, #12]
 800bf12:	f000 fb2b 	bl	800c56c <UART_WaitOnFlagUntilTimeout>
 800bf16:	4603      	mov	r3, r0
 800bf18:	2b00      	cmp	r3, #0
 800bf1a:	d001      	beq.n	800bf20 <HAL_UART_Receive+0xb6>
 800bf1c:	2303      	movs	r3, #3
 800bf1e:	e042      	b.n	800bfa6 <HAL_UART_Receive+0x13c>
 800bf20:	69fb      	ldr	r3, [r7, #28]
 800bf22:	2b00      	cmp	r3, #0
 800bf24:	d10c      	bne.n	800bf40 <HAL_UART_Receive+0xd6>
 800bf26:	68fb      	ldr	r3, [r7, #12]
 800bf28:	681b      	ldr	r3, [r3, #0]
 800bf2a:	685b      	ldr	r3, [r3, #4]
 800bf2c:	b29b      	uxth	r3, r3
 800bf2e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800bf32:	b29a      	uxth	r2, r3
 800bf34:	69bb      	ldr	r3, [r7, #24]
 800bf36:	801a      	strh	r2, [r3, #0]
 800bf38:	69bb      	ldr	r3, [r7, #24]
 800bf3a:	3302      	adds	r3, #2
 800bf3c:	61bb      	str	r3, [r7, #24]
 800bf3e:	e01f      	b.n	800bf80 <HAL_UART_Receive+0x116>
 800bf40:	68fb      	ldr	r3, [r7, #12]
 800bf42:	689b      	ldr	r3, [r3, #8]
 800bf44:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800bf48:	d007      	beq.n	800bf5a <HAL_UART_Receive+0xf0>
 800bf4a:	68fb      	ldr	r3, [r7, #12]
 800bf4c:	689b      	ldr	r3, [r3, #8]
 800bf4e:	2b00      	cmp	r3, #0
 800bf50:	d10a      	bne.n	800bf68 <HAL_UART_Receive+0xfe>
 800bf52:	68fb      	ldr	r3, [r7, #12]
 800bf54:	691b      	ldr	r3, [r3, #16]
 800bf56:	2b00      	cmp	r3, #0
 800bf58:	d106      	bne.n	800bf68 <HAL_UART_Receive+0xfe>
 800bf5a:	68fb      	ldr	r3, [r7, #12]
 800bf5c:	681b      	ldr	r3, [r3, #0]
 800bf5e:	685b      	ldr	r3, [r3, #4]
 800bf60:	b2da      	uxtb	r2, r3
 800bf62:	69fb      	ldr	r3, [r7, #28]
 800bf64:	701a      	strb	r2, [r3, #0]
 800bf66:	e008      	b.n	800bf7a <HAL_UART_Receive+0x110>
 800bf68:	68fb      	ldr	r3, [r7, #12]
 800bf6a:	681b      	ldr	r3, [r3, #0]
 800bf6c:	685b      	ldr	r3, [r3, #4]
 800bf6e:	b2db      	uxtb	r3, r3
 800bf70:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800bf74:	b2da      	uxtb	r2, r3
 800bf76:	69fb      	ldr	r3, [r7, #28]
 800bf78:	701a      	strb	r2, [r3, #0]
 800bf7a:	69fb      	ldr	r3, [r7, #28]
 800bf7c:	3301      	adds	r3, #1
 800bf7e:	61fb      	str	r3, [r7, #28]
 800bf80:	68fb      	ldr	r3, [r7, #12]
 800bf82:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800bf84:	b29b      	uxth	r3, r3
 800bf86:	3b01      	subs	r3, #1
 800bf88:	b29a      	uxth	r2, r3
 800bf8a:	68fb      	ldr	r3, [r7, #12]
 800bf8c:	85da      	strh	r2, [r3, #46]	; 0x2e
 800bf8e:	68fb      	ldr	r3, [r7, #12]
 800bf90:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800bf92:	b29b      	uxth	r3, r3
 800bf94:	2b00      	cmp	r3, #0
 800bf96:	d1b6      	bne.n	800bf06 <HAL_UART_Receive+0x9c>
 800bf98:	68fb      	ldr	r3, [r7, #12]
 800bf9a:	2220      	movs	r2, #32
 800bf9c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800bfa0:	2300      	movs	r3, #0
 800bfa2:	e000      	b.n	800bfa6 <HAL_UART_Receive+0x13c>
 800bfa4:	2302      	movs	r3, #2
 800bfa6:	4618      	mov	r0, r3
 800bfa8:	3720      	adds	r7, #32
 800bfaa:	46bd      	mov	sp, r7
 800bfac:	bd80      	pop	{r7, pc}

0800bfae <HAL_UART_Receive_IT>:
 800bfae:	b580      	push	{r7, lr}
 800bfb0:	b084      	sub	sp, #16
 800bfb2:	af00      	add	r7, sp, #0
 800bfb4:	60f8      	str	r0, [r7, #12]
 800bfb6:	60b9      	str	r1, [r7, #8]
 800bfb8:	4613      	mov	r3, r2
 800bfba:	80fb      	strh	r3, [r7, #6]
 800bfbc:	68fb      	ldr	r3, [r7, #12]
 800bfbe:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800bfc2:	b2db      	uxtb	r3, r3
 800bfc4:	2b20      	cmp	r3, #32
 800bfc6:	d11d      	bne.n	800c004 <HAL_UART_Receive_IT+0x56>
 800bfc8:	68bb      	ldr	r3, [r7, #8]
 800bfca:	2b00      	cmp	r3, #0
 800bfcc:	d002      	beq.n	800bfd4 <HAL_UART_Receive_IT+0x26>
 800bfce:	88fb      	ldrh	r3, [r7, #6]
 800bfd0:	2b00      	cmp	r3, #0
 800bfd2:	d101      	bne.n	800bfd8 <HAL_UART_Receive_IT+0x2a>
 800bfd4:	2301      	movs	r3, #1
 800bfd6:	e016      	b.n	800c006 <HAL_UART_Receive_IT+0x58>
 800bfd8:	68fb      	ldr	r3, [r7, #12]
 800bfda:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800bfde:	2b01      	cmp	r3, #1
 800bfe0:	d101      	bne.n	800bfe6 <HAL_UART_Receive_IT+0x38>
 800bfe2:	2302      	movs	r3, #2
 800bfe4:	e00f      	b.n	800c006 <HAL_UART_Receive_IT+0x58>
 800bfe6:	68fb      	ldr	r3, [r7, #12]
 800bfe8:	2201      	movs	r2, #1
 800bfea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bfee:	68fb      	ldr	r3, [r7, #12]
 800bff0:	2200      	movs	r2, #0
 800bff2:	631a      	str	r2, [r3, #48]	; 0x30
 800bff4:	88fb      	ldrh	r3, [r7, #6]
 800bff6:	461a      	mov	r2, r3
 800bff8:	68b9      	ldr	r1, [r7, #8]
 800bffa:	68f8      	ldr	r0, [r7, #12]
 800bffc:	f000 fb24 	bl	800c648 <UART_Start_Receive_IT>
 800c000:	4603      	mov	r3, r0
 800c002:	e000      	b.n	800c006 <HAL_UART_Receive_IT+0x58>
 800c004:	2302      	movs	r3, #2
 800c006:	4618      	mov	r0, r3
 800c008:	3710      	adds	r7, #16
 800c00a:	46bd      	mov	sp, r7
 800c00c:	bd80      	pop	{r7, pc}
	...

0800c010 <HAL_UART_IRQHandler>:
 800c010:	b580      	push	{r7, lr}
 800c012:	b0ba      	sub	sp, #232	; 0xe8
 800c014:	af00      	add	r7, sp, #0
 800c016:	6078      	str	r0, [r7, #4]
 800c018:	687b      	ldr	r3, [r7, #4]
 800c01a:	681b      	ldr	r3, [r3, #0]
 800c01c:	681b      	ldr	r3, [r3, #0]
 800c01e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800c022:	687b      	ldr	r3, [r7, #4]
 800c024:	681b      	ldr	r3, [r3, #0]
 800c026:	68db      	ldr	r3, [r3, #12]
 800c028:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800c02c:	687b      	ldr	r3, [r7, #4]
 800c02e:	681b      	ldr	r3, [r3, #0]
 800c030:	695b      	ldr	r3, [r3, #20]
 800c032:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800c036:	2300      	movs	r3, #0
 800c038:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800c03c:	2300      	movs	r3, #0
 800c03e:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800c042:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c046:	f003 030f 	and.w	r3, r3, #15
 800c04a:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800c04e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800c052:	2b00      	cmp	r3, #0
 800c054:	d10f      	bne.n	800c076 <HAL_UART_IRQHandler+0x66>
 800c056:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c05a:	f003 0320 	and.w	r3, r3, #32
 800c05e:	2b00      	cmp	r3, #0
 800c060:	d009      	beq.n	800c076 <HAL_UART_IRQHandler+0x66>
 800c062:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c066:	f003 0320 	and.w	r3, r3, #32
 800c06a:	2b00      	cmp	r3, #0
 800c06c:	d003      	beq.n	800c076 <HAL_UART_IRQHandler+0x66>
 800c06e:	6878      	ldr	r0, [r7, #4]
 800c070:	f000 fc07 	bl	800c882 <UART_Receive_IT>
 800c074:	e256      	b.n	800c524 <HAL_UART_IRQHandler+0x514>
 800c076:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800c07a:	2b00      	cmp	r3, #0
 800c07c:	f000 80de 	beq.w	800c23c <HAL_UART_IRQHandler+0x22c>
 800c080:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c084:	f003 0301 	and.w	r3, r3, #1
 800c088:	2b00      	cmp	r3, #0
 800c08a:	d106      	bne.n	800c09a <HAL_UART_IRQHandler+0x8a>
 800c08c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c090:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800c094:	2b00      	cmp	r3, #0
 800c096:	f000 80d1 	beq.w	800c23c <HAL_UART_IRQHandler+0x22c>
 800c09a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c09e:	f003 0301 	and.w	r3, r3, #1
 800c0a2:	2b00      	cmp	r3, #0
 800c0a4:	d00b      	beq.n	800c0be <HAL_UART_IRQHandler+0xae>
 800c0a6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c0aa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c0ae:	2b00      	cmp	r3, #0
 800c0b0:	d005      	beq.n	800c0be <HAL_UART_IRQHandler+0xae>
 800c0b2:	687b      	ldr	r3, [r7, #4]
 800c0b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c0b6:	f043 0201 	orr.w	r2, r3, #1
 800c0ba:	687b      	ldr	r3, [r7, #4]
 800c0bc:	641a      	str	r2, [r3, #64]	; 0x40
 800c0be:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c0c2:	f003 0304 	and.w	r3, r3, #4
 800c0c6:	2b00      	cmp	r3, #0
 800c0c8:	d00b      	beq.n	800c0e2 <HAL_UART_IRQHandler+0xd2>
 800c0ca:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c0ce:	f003 0301 	and.w	r3, r3, #1
 800c0d2:	2b00      	cmp	r3, #0
 800c0d4:	d005      	beq.n	800c0e2 <HAL_UART_IRQHandler+0xd2>
 800c0d6:	687b      	ldr	r3, [r7, #4]
 800c0d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c0da:	f043 0202 	orr.w	r2, r3, #2
 800c0de:	687b      	ldr	r3, [r7, #4]
 800c0e0:	641a      	str	r2, [r3, #64]	; 0x40
 800c0e2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c0e6:	f003 0302 	and.w	r3, r3, #2
 800c0ea:	2b00      	cmp	r3, #0
 800c0ec:	d00b      	beq.n	800c106 <HAL_UART_IRQHandler+0xf6>
 800c0ee:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c0f2:	f003 0301 	and.w	r3, r3, #1
 800c0f6:	2b00      	cmp	r3, #0
 800c0f8:	d005      	beq.n	800c106 <HAL_UART_IRQHandler+0xf6>
 800c0fa:	687b      	ldr	r3, [r7, #4]
 800c0fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c0fe:	f043 0204 	orr.w	r2, r3, #4
 800c102:	687b      	ldr	r3, [r7, #4]
 800c104:	641a      	str	r2, [r3, #64]	; 0x40
 800c106:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c10a:	f003 0308 	and.w	r3, r3, #8
 800c10e:	2b00      	cmp	r3, #0
 800c110:	d011      	beq.n	800c136 <HAL_UART_IRQHandler+0x126>
 800c112:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c116:	f003 0320 	and.w	r3, r3, #32
 800c11a:	2b00      	cmp	r3, #0
 800c11c:	d105      	bne.n	800c12a <HAL_UART_IRQHandler+0x11a>
 800c11e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c122:	f003 0301 	and.w	r3, r3, #1
 800c126:	2b00      	cmp	r3, #0
 800c128:	d005      	beq.n	800c136 <HAL_UART_IRQHandler+0x126>
 800c12a:	687b      	ldr	r3, [r7, #4]
 800c12c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c12e:	f043 0208 	orr.w	r2, r3, #8
 800c132:	687b      	ldr	r3, [r7, #4]
 800c134:	641a      	str	r2, [r3, #64]	; 0x40
 800c136:	687b      	ldr	r3, [r7, #4]
 800c138:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c13a:	2b00      	cmp	r3, #0
 800c13c:	f000 81ed 	beq.w	800c51a <HAL_UART_IRQHandler+0x50a>
 800c140:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c144:	f003 0320 	and.w	r3, r3, #32
 800c148:	2b00      	cmp	r3, #0
 800c14a:	d008      	beq.n	800c15e <HAL_UART_IRQHandler+0x14e>
 800c14c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c150:	f003 0320 	and.w	r3, r3, #32
 800c154:	2b00      	cmp	r3, #0
 800c156:	d002      	beq.n	800c15e <HAL_UART_IRQHandler+0x14e>
 800c158:	6878      	ldr	r0, [r7, #4]
 800c15a:	f000 fb92 	bl	800c882 <UART_Receive_IT>
 800c15e:	687b      	ldr	r3, [r7, #4]
 800c160:	681b      	ldr	r3, [r3, #0]
 800c162:	695b      	ldr	r3, [r3, #20]
 800c164:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c168:	2b40      	cmp	r3, #64	; 0x40
 800c16a:	bf0c      	ite	eq
 800c16c:	2301      	moveq	r3, #1
 800c16e:	2300      	movne	r3, #0
 800c170:	b2db      	uxtb	r3, r3
 800c172:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800c176:	687b      	ldr	r3, [r7, #4]
 800c178:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c17a:	f003 0308 	and.w	r3, r3, #8
 800c17e:	2b00      	cmp	r3, #0
 800c180:	d103      	bne.n	800c18a <HAL_UART_IRQHandler+0x17a>
 800c182:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c186:	2b00      	cmp	r3, #0
 800c188:	d04f      	beq.n	800c22a <HAL_UART_IRQHandler+0x21a>
 800c18a:	6878      	ldr	r0, [r7, #4]
 800c18c:	f000 fa9a 	bl	800c6c4 <UART_EndRxTransfer>
 800c190:	687b      	ldr	r3, [r7, #4]
 800c192:	681b      	ldr	r3, [r3, #0]
 800c194:	695b      	ldr	r3, [r3, #20]
 800c196:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c19a:	2b40      	cmp	r3, #64	; 0x40
 800c19c:	d141      	bne.n	800c222 <HAL_UART_IRQHandler+0x212>
 800c19e:	687b      	ldr	r3, [r7, #4]
 800c1a0:	681b      	ldr	r3, [r3, #0]
 800c1a2:	3314      	adds	r3, #20
 800c1a4:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800c1a8:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800c1ac:	e853 3f00 	ldrex	r3, [r3]
 800c1b0:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800c1b4:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800c1b8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c1bc:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800c1c0:	687b      	ldr	r3, [r7, #4]
 800c1c2:	681b      	ldr	r3, [r3, #0]
 800c1c4:	3314      	adds	r3, #20
 800c1c6:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 800c1ca:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800c1ce:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800c1d2:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 800c1d6:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 800c1da:	e841 2300 	strex	r3, r2, [r1]
 800c1de:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800c1e2:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800c1e6:	2b00      	cmp	r3, #0
 800c1e8:	d1d9      	bne.n	800c19e <HAL_UART_IRQHandler+0x18e>
 800c1ea:	687b      	ldr	r3, [r7, #4]
 800c1ec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c1ee:	2b00      	cmp	r3, #0
 800c1f0:	d013      	beq.n	800c21a <HAL_UART_IRQHandler+0x20a>
 800c1f2:	687b      	ldr	r3, [r7, #4]
 800c1f4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c1f6:	4a7d      	ldr	r2, [pc, #500]	; (800c3ec <HAL_UART_IRQHandler+0x3dc>)
 800c1f8:	651a      	str	r2, [r3, #80]	; 0x50
 800c1fa:	687b      	ldr	r3, [r7, #4]
 800c1fc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c1fe:	4618      	mov	r0, r3
 800c200:	f7fc fa08 	bl	8008614 <HAL_DMA_Abort_IT>
 800c204:	4603      	mov	r3, r0
 800c206:	2b00      	cmp	r3, #0
 800c208:	d016      	beq.n	800c238 <HAL_UART_IRQHandler+0x228>
 800c20a:	687b      	ldr	r3, [r7, #4]
 800c20c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c20e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c210:	687a      	ldr	r2, [r7, #4]
 800c212:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800c214:	4610      	mov	r0, r2
 800c216:	4798      	blx	r3
 800c218:	e00e      	b.n	800c238 <HAL_UART_IRQHandler+0x228>
 800c21a:	6878      	ldr	r0, [r7, #4]
 800c21c:	f000 f990 	bl	800c540 <HAL_UART_ErrorCallback>
 800c220:	e00a      	b.n	800c238 <HAL_UART_IRQHandler+0x228>
 800c222:	6878      	ldr	r0, [r7, #4]
 800c224:	f000 f98c 	bl	800c540 <HAL_UART_ErrorCallback>
 800c228:	e006      	b.n	800c238 <HAL_UART_IRQHandler+0x228>
 800c22a:	6878      	ldr	r0, [r7, #4]
 800c22c:	f000 f988 	bl	800c540 <HAL_UART_ErrorCallback>
 800c230:	687b      	ldr	r3, [r7, #4]
 800c232:	2200      	movs	r2, #0
 800c234:	641a      	str	r2, [r3, #64]	; 0x40
 800c236:	e170      	b.n	800c51a <HAL_UART_IRQHandler+0x50a>
 800c238:	bf00      	nop
 800c23a:	e16e      	b.n	800c51a <HAL_UART_IRQHandler+0x50a>
 800c23c:	687b      	ldr	r3, [r7, #4]
 800c23e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c240:	2b01      	cmp	r3, #1
 800c242:	f040 814a 	bne.w	800c4da <HAL_UART_IRQHandler+0x4ca>
 800c246:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c24a:	f003 0310 	and.w	r3, r3, #16
 800c24e:	2b00      	cmp	r3, #0
 800c250:	f000 8143 	beq.w	800c4da <HAL_UART_IRQHandler+0x4ca>
 800c254:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c258:	f003 0310 	and.w	r3, r3, #16
 800c25c:	2b00      	cmp	r3, #0
 800c25e:	f000 813c 	beq.w	800c4da <HAL_UART_IRQHandler+0x4ca>
 800c262:	2300      	movs	r3, #0
 800c264:	60bb      	str	r3, [r7, #8]
 800c266:	687b      	ldr	r3, [r7, #4]
 800c268:	681b      	ldr	r3, [r3, #0]
 800c26a:	681b      	ldr	r3, [r3, #0]
 800c26c:	60bb      	str	r3, [r7, #8]
 800c26e:	687b      	ldr	r3, [r7, #4]
 800c270:	681b      	ldr	r3, [r3, #0]
 800c272:	685b      	ldr	r3, [r3, #4]
 800c274:	60bb      	str	r3, [r7, #8]
 800c276:	68bb      	ldr	r3, [r7, #8]
 800c278:	687b      	ldr	r3, [r7, #4]
 800c27a:	681b      	ldr	r3, [r3, #0]
 800c27c:	695b      	ldr	r3, [r3, #20]
 800c27e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c282:	2b40      	cmp	r3, #64	; 0x40
 800c284:	f040 80b4 	bne.w	800c3f0 <HAL_UART_IRQHandler+0x3e0>
 800c288:	687b      	ldr	r3, [r7, #4]
 800c28a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c28c:	681b      	ldr	r3, [r3, #0]
 800c28e:	685b      	ldr	r3, [r3, #4]
 800c290:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 800c294:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 800c298:	2b00      	cmp	r3, #0
 800c29a:	f000 8140 	beq.w	800c51e <HAL_UART_IRQHandler+0x50e>
 800c29e:	687b      	ldr	r3, [r7, #4]
 800c2a0:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800c2a2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800c2a6:	429a      	cmp	r2, r3
 800c2a8:	f080 8139 	bcs.w	800c51e <HAL_UART_IRQHandler+0x50e>
 800c2ac:	687b      	ldr	r3, [r7, #4]
 800c2ae:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800c2b2:	85da      	strh	r2, [r3, #46]	; 0x2e
 800c2b4:	687b      	ldr	r3, [r7, #4]
 800c2b6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c2b8:	69db      	ldr	r3, [r3, #28]
 800c2ba:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800c2be:	f000 8088 	beq.w	800c3d2 <HAL_UART_IRQHandler+0x3c2>
 800c2c2:	687b      	ldr	r3, [r7, #4]
 800c2c4:	681b      	ldr	r3, [r3, #0]
 800c2c6:	330c      	adds	r3, #12
 800c2c8:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800c2cc:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800c2d0:	e853 3f00 	ldrex	r3, [r3]
 800c2d4:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800c2d8:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800c2dc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800c2e0:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800c2e4:	687b      	ldr	r3, [r7, #4]
 800c2e6:	681b      	ldr	r3, [r3, #0]
 800c2e8:	330c      	adds	r3, #12
 800c2ea:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 800c2ee:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800c2f2:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800c2f6:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800c2fa:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800c2fe:	e841 2300 	strex	r3, r2, [r1]
 800c302:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800c306:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800c30a:	2b00      	cmp	r3, #0
 800c30c:	d1d9      	bne.n	800c2c2 <HAL_UART_IRQHandler+0x2b2>
 800c30e:	687b      	ldr	r3, [r7, #4]
 800c310:	681b      	ldr	r3, [r3, #0]
 800c312:	3314      	adds	r3, #20
 800c314:	677b      	str	r3, [r7, #116]	; 0x74
 800c316:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800c318:	e853 3f00 	ldrex	r3, [r3]
 800c31c:	673b      	str	r3, [r7, #112]	; 0x70
 800c31e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800c320:	f023 0301 	bic.w	r3, r3, #1
 800c324:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800c328:	687b      	ldr	r3, [r7, #4]
 800c32a:	681b      	ldr	r3, [r3, #0]
 800c32c:	3314      	adds	r3, #20
 800c32e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800c332:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 800c336:	67fb      	str	r3, [r7, #124]	; 0x7c
 800c338:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800c33a:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800c33e:	e841 2300 	strex	r3, r2, [r1]
 800c342:	67bb      	str	r3, [r7, #120]	; 0x78
 800c344:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800c346:	2b00      	cmp	r3, #0
 800c348:	d1e1      	bne.n	800c30e <HAL_UART_IRQHandler+0x2fe>
 800c34a:	687b      	ldr	r3, [r7, #4]
 800c34c:	681b      	ldr	r3, [r3, #0]
 800c34e:	3314      	adds	r3, #20
 800c350:	663b      	str	r3, [r7, #96]	; 0x60
 800c352:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800c354:	e853 3f00 	ldrex	r3, [r3]
 800c358:	65fb      	str	r3, [r7, #92]	; 0x5c
 800c35a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800c35c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c360:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800c364:	687b      	ldr	r3, [r7, #4]
 800c366:	681b      	ldr	r3, [r3, #0]
 800c368:	3314      	adds	r3, #20
 800c36a:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800c36e:	66fa      	str	r2, [r7, #108]	; 0x6c
 800c370:	66bb      	str	r3, [r7, #104]	; 0x68
 800c372:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800c374:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800c376:	e841 2300 	strex	r3, r2, [r1]
 800c37a:	667b      	str	r3, [r7, #100]	; 0x64
 800c37c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800c37e:	2b00      	cmp	r3, #0
 800c380:	d1e3      	bne.n	800c34a <HAL_UART_IRQHandler+0x33a>
 800c382:	687b      	ldr	r3, [r7, #4]
 800c384:	2220      	movs	r2, #32
 800c386:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c38a:	687b      	ldr	r3, [r7, #4]
 800c38c:	2200      	movs	r2, #0
 800c38e:	631a      	str	r2, [r3, #48]	; 0x30
 800c390:	687b      	ldr	r3, [r7, #4]
 800c392:	681b      	ldr	r3, [r3, #0]
 800c394:	330c      	adds	r3, #12
 800c396:	64fb      	str	r3, [r7, #76]	; 0x4c
 800c398:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800c39a:	e853 3f00 	ldrex	r3, [r3]
 800c39e:	64bb      	str	r3, [r7, #72]	; 0x48
 800c3a0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800c3a2:	f023 0310 	bic.w	r3, r3, #16
 800c3a6:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800c3aa:	687b      	ldr	r3, [r7, #4]
 800c3ac:	681b      	ldr	r3, [r3, #0]
 800c3ae:	330c      	adds	r3, #12
 800c3b0:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 800c3b4:	65ba      	str	r2, [r7, #88]	; 0x58
 800c3b6:	657b      	str	r3, [r7, #84]	; 0x54
 800c3b8:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800c3ba:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800c3bc:	e841 2300 	strex	r3, r2, [r1]
 800c3c0:	653b      	str	r3, [r7, #80]	; 0x50
 800c3c2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c3c4:	2b00      	cmp	r3, #0
 800c3c6:	d1e3      	bne.n	800c390 <HAL_UART_IRQHandler+0x380>
 800c3c8:	687b      	ldr	r3, [r7, #4]
 800c3ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c3cc:	4618      	mov	r0, r3
 800c3ce:	f7fc f8b1 	bl	8008534 <HAL_DMA_Abort>
 800c3d2:	687b      	ldr	r3, [r7, #4]
 800c3d4:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800c3d6:	687b      	ldr	r3, [r7, #4]
 800c3d8:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c3da:	b29b      	uxth	r3, r3
 800c3dc:	1ad3      	subs	r3, r2, r3
 800c3de:	b29b      	uxth	r3, r3
 800c3e0:	4619      	mov	r1, r3
 800c3e2:	6878      	ldr	r0, [r7, #4]
 800c3e4:	f000 f8b6 	bl	800c554 <HAL_UARTEx_RxEventCallback>
 800c3e8:	e099      	b.n	800c51e <HAL_UART_IRQHandler+0x50e>
 800c3ea:	bf00      	nop
 800c3ec:	0800c78b 	.word	0x0800c78b
 800c3f0:	687b      	ldr	r3, [r7, #4]
 800c3f2:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800c3f4:	687b      	ldr	r3, [r7, #4]
 800c3f6:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c3f8:	b29b      	uxth	r3, r3
 800c3fa:	1ad3      	subs	r3, r2, r3
 800c3fc:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 800c400:	687b      	ldr	r3, [r7, #4]
 800c402:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c404:	b29b      	uxth	r3, r3
 800c406:	2b00      	cmp	r3, #0
 800c408:	f000 808b 	beq.w	800c522 <HAL_UART_IRQHandler+0x512>
 800c40c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800c410:	2b00      	cmp	r3, #0
 800c412:	f000 8086 	beq.w	800c522 <HAL_UART_IRQHandler+0x512>
 800c416:	687b      	ldr	r3, [r7, #4]
 800c418:	681b      	ldr	r3, [r3, #0]
 800c41a:	330c      	adds	r3, #12
 800c41c:	63bb      	str	r3, [r7, #56]	; 0x38
 800c41e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c420:	e853 3f00 	ldrex	r3, [r3]
 800c424:	637b      	str	r3, [r7, #52]	; 0x34
 800c426:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c428:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800c42c:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800c430:	687b      	ldr	r3, [r7, #4]
 800c432:	681b      	ldr	r3, [r3, #0]
 800c434:	330c      	adds	r3, #12
 800c436:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 800c43a:	647a      	str	r2, [r7, #68]	; 0x44
 800c43c:	643b      	str	r3, [r7, #64]	; 0x40
 800c43e:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800c440:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800c442:	e841 2300 	strex	r3, r2, [r1]
 800c446:	63fb      	str	r3, [r7, #60]	; 0x3c
 800c448:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800c44a:	2b00      	cmp	r3, #0
 800c44c:	d1e3      	bne.n	800c416 <HAL_UART_IRQHandler+0x406>
 800c44e:	687b      	ldr	r3, [r7, #4]
 800c450:	681b      	ldr	r3, [r3, #0]
 800c452:	3314      	adds	r3, #20
 800c454:	627b      	str	r3, [r7, #36]	; 0x24
 800c456:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c458:	e853 3f00 	ldrex	r3, [r3]
 800c45c:	623b      	str	r3, [r7, #32]
 800c45e:	6a3b      	ldr	r3, [r7, #32]
 800c460:	f023 0301 	bic.w	r3, r3, #1
 800c464:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800c468:	687b      	ldr	r3, [r7, #4]
 800c46a:	681b      	ldr	r3, [r3, #0]
 800c46c:	3314      	adds	r3, #20
 800c46e:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800c472:	633a      	str	r2, [r7, #48]	; 0x30
 800c474:	62fb      	str	r3, [r7, #44]	; 0x2c
 800c476:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800c478:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800c47a:	e841 2300 	strex	r3, r2, [r1]
 800c47e:	62bb      	str	r3, [r7, #40]	; 0x28
 800c480:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c482:	2b00      	cmp	r3, #0
 800c484:	d1e3      	bne.n	800c44e <HAL_UART_IRQHandler+0x43e>
 800c486:	687b      	ldr	r3, [r7, #4]
 800c488:	2220      	movs	r2, #32
 800c48a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c48e:	687b      	ldr	r3, [r7, #4]
 800c490:	2200      	movs	r2, #0
 800c492:	631a      	str	r2, [r3, #48]	; 0x30
 800c494:	687b      	ldr	r3, [r7, #4]
 800c496:	681b      	ldr	r3, [r3, #0]
 800c498:	330c      	adds	r3, #12
 800c49a:	613b      	str	r3, [r7, #16]
 800c49c:	693b      	ldr	r3, [r7, #16]
 800c49e:	e853 3f00 	ldrex	r3, [r3]
 800c4a2:	60fb      	str	r3, [r7, #12]
 800c4a4:	68fb      	ldr	r3, [r7, #12]
 800c4a6:	f023 0310 	bic.w	r3, r3, #16
 800c4aa:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800c4ae:	687b      	ldr	r3, [r7, #4]
 800c4b0:	681b      	ldr	r3, [r3, #0]
 800c4b2:	330c      	adds	r3, #12
 800c4b4:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 800c4b8:	61fa      	str	r2, [r7, #28]
 800c4ba:	61bb      	str	r3, [r7, #24]
 800c4bc:	69b9      	ldr	r1, [r7, #24]
 800c4be:	69fa      	ldr	r2, [r7, #28]
 800c4c0:	e841 2300 	strex	r3, r2, [r1]
 800c4c4:	617b      	str	r3, [r7, #20]
 800c4c6:	697b      	ldr	r3, [r7, #20]
 800c4c8:	2b00      	cmp	r3, #0
 800c4ca:	d1e3      	bne.n	800c494 <HAL_UART_IRQHandler+0x484>
 800c4cc:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800c4d0:	4619      	mov	r1, r3
 800c4d2:	6878      	ldr	r0, [r7, #4]
 800c4d4:	f000 f83e 	bl	800c554 <HAL_UARTEx_RxEventCallback>
 800c4d8:	e023      	b.n	800c522 <HAL_UART_IRQHandler+0x512>
 800c4da:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c4de:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800c4e2:	2b00      	cmp	r3, #0
 800c4e4:	d009      	beq.n	800c4fa <HAL_UART_IRQHandler+0x4ea>
 800c4e6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c4ea:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800c4ee:	2b00      	cmp	r3, #0
 800c4f0:	d003      	beq.n	800c4fa <HAL_UART_IRQHandler+0x4ea>
 800c4f2:	6878      	ldr	r0, [r7, #4]
 800c4f4:	f000 f95d 	bl	800c7b2 <UART_Transmit_IT>
 800c4f8:	e014      	b.n	800c524 <HAL_UART_IRQHandler+0x514>
 800c4fa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c4fe:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c502:	2b00      	cmp	r3, #0
 800c504:	d00e      	beq.n	800c524 <HAL_UART_IRQHandler+0x514>
 800c506:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c50a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c50e:	2b00      	cmp	r3, #0
 800c510:	d008      	beq.n	800c524 <HAL_UART_IRQHandler+0x514>
 800c512:	6878      	ldr	r0, [r7, #4]
 800c514:	f000 f99d 	bl	800c852 <UART_EndTransmit_IT>
 800c518:	e004      	b.n	800c524 <HAL_UART_IRQHandler+0x514>
 800c51a:	bf00      	nop
 800c51c:	e002      	b.n	800c524 <HAL_UART_IRQHandler+0x514>
 800c51e:	bf00      	nop
 800c520:	e000      	b.n	800c524 <HAL_UART_IRQHandler+0x514>
 800c522:	bf00      	nop
 800c524:	37e8      	adds	r7, #232	; 0xe8
 800c526:	46bd      	mov	sp, r7
 800c528:	bd80      	pop	{r7, pc}
 800c52a:	bf00      	nop

0800c52c <HAL_UART_TxCpltCallback>:
 800c52c:	b480      	push	{r7}
 800c52e:	b083      	sub	sp, #12
 800c530:	af00      	add	r7, sp, #0
 800c532:	6078      	str	r0, [r7, #4]
 800c534:	bf00      	nop
 800c536:	370c      	adds	r7, #12
 800c538:	46bd      	mov	sp, r7
 800c53a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c53e:	4770      	bx	lr

0800c540 <HAL_UART_ErrorCallback>:
 800c540:	b480      	push	{r7}
 800c542:	b083      	sub	sp, #12
 800c544:	af00      	add	r7, sp, #0
 800c546:	6078      	str	r0, [r7, #4]
 800c548:	bf00      	nop
 800c54a:	370c      	adds	r7, #12
 800c54c:	46bd      	mov	sp, r7
 800c54e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c552:	4770      	bx	lr

0800c554 <HAL_UARTEx_RxEventCallback>:
 800c554:	b480      	push	{r7}
 800c556:	b083      	sub	sp, #12
 800c558:	af00      	add	r7, sp, #0
 800c55a:	6078      	str	r0, [r7, #4]
 800c55c:	460b      	mov	r3, r1
 800c55e:	807b      	strh	r3, [r7, #2]
 800c560:	bf00      	nop
 800c562:	370c      	adds	r7, #12
 800c564:	46bd      	mov	sp, r7
 800c566:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c56a:	4770      	bx	lr

0800c56c <UART_WaitOnFlagUntilTimeout>:
 800c56c:	b580      	push	{r7, lr}
 800c56e:	b090      	sub	sp, #64	; 0x40
 800c570:	af00      	add	r7, sp, #0
 800c572:	60f8      	str	r0, [r7, #12]
 800c574:	60b9      	str	r1, [r7, #8]
 800c576:	603b      	str	r3, [r7, #0]
 800c578:	4613      	mov	r3, r2
 800c57a:	71fb      	strb	r3, [r7, #7]
 800c57c:	e050      	b.n	800c620 <UART_WaitOnFlagUntilTimeout+0xb4>
 800c57e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800c580:	f1b3 3fff 	cmp.w	r3, #4294967295
 800c584:	d04c      	beq.n	800c620 <UART_WaitOnFlagUntilTimeout+0xb4>
 800c586:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800c588:	2b00      	cmp	r3, #0
 800c58a:	d007      	beq.n	800c59c <UART_WaitOnFlagUntilTimeout+0x30>
 800c58c:	f7fa ffe2 	bl	8007554 <HAL_GetTick>
 800c590:	4602      	mov	r2, r0
 800c592:	683b      	ldr	r3, [r7, #0]
 800c594:	1ad3      	subs	r3, r2, r3
 800c596:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800c598:	429a      	cmp	r2, r3
 800c59a:	d241      	bcs.n	800c620 <UART_WaitOnFlagUntilTimeout+0xb4>
 800c59c:	68fb      	ldr	r3, [r7, #12]
 800c59e:	681b      	ldr	r3, [r3, #0]
 800c5a0:	330c      	adds	r3, #12
 800c5a2:	62bb      	str	r3, [r7, #40]	; 0x28
 800c5a4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c5a6:	e853 3f00 	ldrex	r3, [r3]
 800c5aa:	627b      	str	r3, [r7, #36]	; 0x24
 800c5ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c5ae:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800c5b2:	63fb      	str	r3, [r7, #60]	; 0x3c
 800c5b4:	68fb      	ldr	r3, [r7, #12]
 800c5b6:	681b      	ldr	r3, [r3, #0]
 800c5b8:	330c      	adds	r3, #12
 800c5ba:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800c5bc:	637a      	str	r2, [r7, #52]	; 0x34
 800c5be:	633b      	str	r3, [r7, #48]	; 0x30
 800c5c0:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800c5c2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800c5c4:	e841 2300 	strex	r3, r2, [r1]
 800c5c8:	62fb      	str	r3, [r7, #44]	; 0x2c
 800c5ca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c5cc:	2b00      	cmp	r3, #0
 800c5ce:	d1e5      	bne.n	800c59c <UART_WaitOnFlagUntilTimeout+0x30>
 800c5d0:	68fb      	ldr	r3, [r7, #12]
 800c5d2:	681b      	ldr	r3, [r3, #0]
 800c5d4:	3314      	adds	r3, #20
 800c5d6:	617b      	str	r3, [r7, #20]
 800c5d8:	697b      	ldr	r3, [r7, #20]
 800c5da:	e853 3f00 	ldrex	r3, [r3]
 800c5de:	613b      	str	r3, [r7, #16]
 800c5e0:	693b      	ldr	r3, [r7, #16]
 800c5e2:	f023 0301 	bic.w	r3, r3, #1
 800c5e6:	63bb      	str	r3, [r7, #56]	; 0x38
 800c5e8:	68fb      	ldr	r3, [r7, #12]
 800c5ea:	681b      	ldr	r3, [r3, #0]
 800c5ec:	3314      	adds	r3, #20
 800c5ee:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800c5f0:	623a      	str	r2, [r7, #32]
 800c5f2:	61fb      	str	r3, [r7, #28]
 800c5f4:	69f9      	ldr	r1, [r7, #28]
 800c5f6:	6a3a      	ldr	r2, [r7, #32]
 800c5f8:	e841 2300 	strex	r3, r2, [r1]
 800c5fc:	61bb      	str	r3, [r7, #24]
 800c5fe:	69bb      	ldr	r3, [r7, #24]
 800c600:	2b00      	cmp	r3, #0
 800c602:	d1e5      	bne.n	800c5d0 <UART_WaitOnFlagUntilTimeout+0x64>
 800c604:	68fb      	ldr	r3, [r7, #12]
 800c606:	2220      	movs	r2, #32
 800c608:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c60c:	68fb      	ldr	r3, [r7, #12]
 800c60e:	2220      	movs	r2, #32
 800c610:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c614:	68fb      	ldr	r3, [r7, #12]
 800c616:	2200      	movs	r2, #0
 800c618:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c61c:	2303      	movs	r3, #3
 800c61e:	e00f      	b.n	800c640 <UART_WaitOnFlagUntilTimeout+0xd4>
 800c620:	68fb      	ldr	r3, [r7, #12]
 800c622:	681b      	ldr	r3, [r3, #0]
 800c624:	681a      	ldr	r2, [r3, #0]
 800c626:	68bb      	ldr	r3, [r7, #8]
 800c628:	4013      	ands	r3, r2
 800c62a:	68ba      	ldr	r2, [r7, #8]
 800c62c:	429a      	cmp	r2, r3
 800c62e:	bf0c      	ite	eq
 800c630:	2301      	moveq	r3, #1
 800c632:	2300      	movne	r3, #0
 800c634:	b2db      	uxtb	r3, r3
 800c636:	461a      	mov	r2, r3
 800c638:	79fb      	ldrb	r3, [r7, #7]
 800c63a:	429a      	cmp	r2, r3
 800c63c:	d09f      	beq.n	800c57e <UART_WaitOnFlagUntilTimeout+0x12>
 800c63e:	2300      	movs	r3, #0
 800c640:	4618      	mov	r0, r3
 800c642:	3740      	adds	r7, #64	; 0x40
 800c644:	46bd      	mov	sp, r7
 800c646:	bd80      	pop	{r7, pc}

0800c648 <UART_Start_Receive_IT>:
 800c648:	b480      	push	{r7}
 800c64a:	b085      	sub	sp, #20
 800c64c:	af00      	add	r7, sp, #0
 800c64e:	60f8      	str	r0, [r7, #12]
 800c650:	60b9      	str	r1, [r7, #8]
 800c652:	4613      	mov	r3, r2
 800c654:	80fb      	strh	r3, [r7, #6]
 800c656:	68fb      	ldr	r3, [r7, #12]
 800c658:	68ba      	ldr	r2, [r7, #8]
 800c65a:	629a      	str	r2, [r3, #40]	; 0x28
 800c65c:	68fb      	ldr	r3, [r7, #12]
 800c65e:	88fa      	ldrh	r2, [r7, #6]
 800c660:	859a      	strh	r2, [r3, #44]	; 0x2c
 800c662:	68fb      	ldr	r3, [r7, #12]
 800c664:	88fa      	ldrh	r2, [r7, #6]
 800c666:	85da      	strh	r2, [r3, #46]	; 0x2e
 800c668:	68fb      	ldr	r3, [r7, #12]
 800c66a:	2200      	movs	r2, #0
 800c66c:	641a      	str	r2, [r3, #64]	; 0x40
 800c66e:	68fb      	ldr	r3, [r7, #12]
 800c670:	2222      	movs	r2, #34	; 0x22
 800c672:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c676:	68fb      	ldr	r3, [r7, #12]
 800c678:	2200      	movs	r2, #0
 800c67a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c67e:	68fb      	ldr	r3, [r7, #12]
 800c680:	691b      	ldr	r3, [r3, #16]
 800c682:	2b00      	cmp	r3, #0
 800c684:	d007      	beq.n	800c696 <UART_Start_Receive_IT+0x4e>
 800c686:	68fb      	ldr	r3, [r7, #12]
 800c688:	681b      	ldr	r3, [r3, #0]
 800c68a:	68da      	ldr	r2, [r3, #12]
 800c68c:	68fb      	ldr	r3, [r7, #12]
 800c68e:	681b      	ldr	r3, [r3, #0]
 800c690:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800c694:	60da      	str	r2, [r3, #12]
 800c696:	68fb      	ldr	r3, [r7, #12]
 800c698:	681b      	ldr	r3, [r3, #0]
 800c69a:	695a      	ldr	r2, [r3, #20]
 800c69c:	68fb      	ldr	r3, [r7, #12]
 800c69e:	681b      	ldr	r3, [r3, #0]
 800c6a0:	f042 0201 	orr.w	r2, r2, #1
 800c6a4:	615a      	str	r2, [r3, #20]
 800c6a6:	68fb      	ldr	r3, [r7, #12]
 800c6a8:	681b      	ldr	r3, [r3, #0]
 800c6aa:	68da      	ldr	r2, [r3, #12]
 800c6ac:	68fb      	ldr	r3, [r7, #12]
 800c6ae:	681b      	ldr	r3, [r3, #0]
 800c6b0:	f042 0220 	orr.w	r2, r2, #32
 800c6b4:	60da      	str	r2, [r3, #12]
 800c6b6:	2300      	movs	r3, #0
 800c6b8:	4618      	mov	r0, r3
 800c6ba:	3714      	adds	r7, #20
 800c6bc:	46bd      	mov	sp, r7
 800c6be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c6c2:	4770      	bx	lr

0800c6c4 <UART_EndRxTransfer>:
 800c6c4:	b480      	push	{r7}
 800c6c6:	b095      	sub	sp, #84	; 0x54
 800c6c8:	af00      	add	r7, sp, #0
 800c6ca:	6078      	str	r0, [r7, #4]
 800c6cc:	687b      	ldr	r3, [r7, #4]
 800c6ce:	681b      	ldr	r3, [r3, #0]
 800c6d0:	330c      	adds	r3, #12
 800c6d2:	637b      	str	r3, [r7, #52]	; 0x34
 800c6d4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c6d6:	e853 3f00 	ldrex	r3, [r3]
 800c6da:	633b      	str	r3, [r7, #48]	; 0x30
 800c6dc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c6de:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800c6e2:	64fb      	str	r3, [r7, #76]	; 0x4c
 800c6e4:	687b      	ldr	r3, [r7, #4]
 800c6e6:	681b      	ldr	r3, [r3, #0]
 800c6e8:	330c      	adds	r3, #12
 800c6ea:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800c6ec:	643a      	str	r2, [r7, #64]	; 0x40
 800c6ee:	63fb      	str	r3, [r7, #60]	; 0x3c
 800c6f0:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800c6f2:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800c6f4:	e841 2300 	strex	r3, r2, [r1]
 800c6f8:	63bb      	str	r3, [r7, #56]	; 0x38
 800c6fa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c6fc:	2b00      	cmp	r3, #0
 800c6fe:	d1e5      	bne.n	800c6cc <UART_EndRxTransfer+0x8>
 800c700:	687b      	ldr	r3, [r7, #4]
 800c702:	681b      	ldr	r3, [r3, #0]
 800c704:	3314      	adds	r3, #20
 800c706:	623b      	str	r3, [r7, #32]
 800c708:	6a3b      	ldr	r3, [r7, #32]
 800c70a:	e853 3f00 	ldrex	r3, [r3]
 800c70e:	61fb      	str	r3, [r7, #28]
 800c710:	69fb      	ldr	r3, [r7, #28]
 800c712:	f023 0301 	bic.w	r3, r3, #1
 800c716:	64bb      	str	r3, [r7, #72]	; 0x48
 800c718:	687b      	ldr	r3, [r7, #4]
 800c71a:	681b      	ldr	r3, [r3, #0]
 800c71c:	3314      	adds	r3, #20
 800c71e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800c720:	62fa      	str	r2, [r7, #44]	; 0x2c
 800c722:	62bb      	str	r3, [r7, #40]	; 0x28
 800c724:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800c726:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800c728:	e841 2300 	strex	r3, r2, [r1]
 800c72c:	627b      	str	r3, [r7, #36]	; 0x24
 800c72e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c730:	2b00      	cmp	r3, #0
 800c732:	d1e5      	bne.n	800c700 <UART_EndRxTransfer+0x3c>
 800c734:	687b      	ldr	r3, [r7, #4]
 800c736:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c738:	2b01      	cmp	r3, #1
 800c73a:	d119      	bne.n	800c770 <UART_EndRxTransfer+0xac>
 800c73c:	687b      	ldr	r3, [r7, #4]
 800c73e:	681b      	ldr	r3, [r3, #0]
 800c740:	330c      	adds	r3, #12
 800c742:	60fb      	str	r3, [r7, #12]
 800c744:	68fb      	ldr	r3, [r7, #12]
 800c746:	e853 3f00 	ldrex	r3, [r3]
 800c74a:	60bb      	str	r3, [r7, #8]
 800c74c:	68bb      	ldr	r3, [r7, #8]
 800c74e:	f023 0310 	bic.w	r3, r3, #16
 800c752:	647b      	str	r3, [r7, #68]	; 0x44
 800c754:	687b      	ldr	r3, [r7, #4]
 800c756:	681b      	ldr	r3, [r3, #0]
 800c758:	330c      	adds	r3, #12
 800c75a:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800c75c:	61ba      	str	r2, [r7, #24]
 800c75e:	617b      	str	r3, [r7, #20]
 800c760:	6979      	ldr	r1, [r7, #20]
 800c762:	69ba      	ldr	r2, [r7, #24]
 800c764:	e841 2300 	strex	r3, r2, [r1]
 800c768:	613b      	str	r3, [r7, #16]
 800c76a:	693b      	ldr	r3, [r7, #16]
 800c76c:	2b00      	cmp	r3, #0
 800c76e:	d1e5      	bne.n	800c73c <UART_EndRxTransfer+0x78>
 800c770:	687b      	ldr	r3, [r7, #4]
 800c772:	2220      	movs	r2, #32
 800c774:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c778:	687b      	ldr	r3, [r7, #4]
 800c77a:	2200      	movs	r2, #0
 800c77c:	631a      	str	r2, [r3, #48]	; 0x30
 800c77e:	bf00      	nop
 800c780:	3754      	adds	r7, #84	; 0x54
 800c782:	46bd      	mov	sp, r7
 800c784:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c788:	4770      	bx	lr

0800c78a <UART_DMAAbortOnError>:
 800c78a:	b580      	push	{r7, lr}
 800c78c:	b084      	sub	sp, #16
 800c78e:	af00      	add	r7, sp, #0
 800c790:	6078      	str	r0, [r7, #4]
 800c792:	687b      	ldr	r3, [r7, #4]
 800c794:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c796:	60fb      	str	r3, [r7, #12]
 800c798:	68fb      	ldr	r3, [r7, #12]
 800c79a:	2200      	movs	r2, #0
 800c79c:	85da      	strh	r2, [r3, #46]	; 0x2e
 800c79e:	68fb      	ldr	r3, [r7, #12]
 800c7a0:	2200      	movs	r2, #0
 800c7a2:	84da      	strh	r2, [r3, #38]	; 0x26
 800c7a4:	68f8      	ldr	r0, [r7, #12]
 800c7a6:	f7ff fecb 	bl	800c540 <HAL_UART_ErrorCallback>
 800c7aa:	bf00      	nop
 800c7ac:	3710      	adds	r7, #16
 800c7ae:	46bd      	mov	sp, r7
 800c7b0:	bd80      	pop	{r7, pc}

0800c7b2 <UART_Transmit_IT>:
 800c7b2:	b480      	push	{r7}
 800c7b4:	b085      	sub	sp, #20
 800c7b6:	af00      	add	r7, sp, #0
 800c7b8:	6078      	str	r0, [r7, #4]
 800c7ba:	687b      	ldr	r3, [r7, #4]
 800c7bc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800c7c0:	b2db      	uxtb	r3, r3
 800c7c2:	2b21      	cmp	r3, #33	; 0x21
 800c7c4:	d13e      	bne.n	800c844 <UART_Transmit_IT+0x92>
 800c7c6:	687b      	ldr	r3, [r7, #4]
 800c7c8:	689b      	ldr	r3, [r3, #8]
 800c7ca:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c7ce:	d114      	bne.n	800c7fa <UART_Transmit_IT+0x48>
 800c7d0:	687b      	ldr	r3, [r7, #4]
 800c7d2:	691b      	ldr	r3, [r3, #16]
 800c7d4:	2b00      	cmp	r3, #0
 800c7d6:	d110      	bne.n	800c7fa <UART_Transmit_IT+0x48>
 800c7d8:	687b      	ldr	r3, [r7, #4]
 800c7da:	6a1b      	ldr	r3, [r3, #32]
 800c7dc:	60fb      	str	r3, [r7, #12]
 800c7de:	68fb      	ldr	r3, [r7, #12]
 800c7e0:	881b      	ldrh	r3, [r3, #0]
 800c7e2:	461a      	mov	r2, r3
 800c7e4:	687b      	ldr	r3, [r7, #4]
 800c7e6:	681b      	ldr	r3, [r3, #0]
 800c7e8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800c7ec:	605a      	str	r2, [r3, #4]
 800c7ee:	687b      	ldr	r3, [r7, #4]
 800c7f0:	6a1b      	ldr	r3, [r3, #32]
 800c7f2:	1c9a      	adds	r2, r3, #2
 800c7f4:	687b      	ldr	r3, [r7, #4]
 800c7f6:	621a      	str	r2, [r3, #32]
 800c7f8:	e008      	b.n	800c80c <UART_Transmit_IT+0x5a>
 800c7fa:	687b      	ldr	r3, [r7, #4]
 800c7fc:	6a1b      	ldr	r3, [r3, #32]
 800c7fe:	1c59      	adds	r1, r3, #1
 800c800:	687a      	ldr	r2, [r7, #4]
 800c802:	6211      	str	r1, [r2, #32]
 800c804:	781a      	ldrb	r2, [r3, #0]
 800c806:	687b      	ldr	r3, [r7, #4]
 800c808:	681b      	ldr	r3, [r3, #0]
 800c80a:	605a      	str	r2, [r3, #4]
 800c80c:	687b      	ldr	r3, [r7, #4]
 800c80e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800c810:	b29b      	uxth	r3, r3
 800c812:	3b01      	subs	r3, #1
 800c814:	b29b      	uxth	r3, r3
 800c816:	687a      	ldr	r2, [r7, #4]
 800c818:	4619      	mov	r1, r3
 800c81a:	84d1      	strh	r1, [r2, #38]	; 0x26
 800c81c:	2b00      	cmp	r3, #0
 800c81e:	d10f      	bne.n	800c840 <UART_Transmit_IT+0x8e>
 800c820:	687b      	ldr	r3, [r7, #4]
 800c822:	681b      	ldr	r3, [r3, #0]
 800c824:	68da      	ldr	r2, [r3, #12]
 800c826:	687b      	ldr	r3, [r7, #4]
 800c828:	681b      	ldr	r3, [r3, #0]
 800c82a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800c82e:	60da      	str	r2, [r3, #12]
 800c830:	687b      	ldr	r3, [r7, #4]
 800c832:	681b      	ldr	r3, [r3, #0]
 800c834:	68da      	ldr	r2, [r3, #12]
 800c836:	687b      	ldr	r3, [r7, #4]
 800c838:	681b      	ldr	r3, [r3, #0]
 800c83a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800c83e:	60da      	str	r2, [r3, #12]
 800c840:	2300      	movs	r3, #0
 800c842:	e000      	b.n	800c846 <UART_Transmit_IT+0x94>
 800c844:	2302      	movs	r3, #2
 800c846:	4618      	mov	r0, r3
 800c848:	3714      	adds	r7, #20
 800c84a:	46bd      	mov	sp, r7
 800c84c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c850:	4770      	bx	lr

0800c852 <UART_EndTransmit_IT>:
 800c852:	b580      	push	{r7, lr}
 800c854:	b082      	sub	sp, #8
 800c856:	af00      	add	r7, sp, #0
 800c858:	6078      	str	r0, [r7, #4]
 800c85a:	687b      	ldr	r3, [r7, #4]
 800c85c:	681b      	ldr	r3, [r3, #0]
 800c85e:	68da      	ldr	r2, [r3, #12]
 800c860:	687b      	ldr	r3, [r7, #4]
 800c862:	681b      	ldr	r3, [r3, #0]
 800c864:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c868:	60da      	str	r2, [r3, #12]
 800c86a:	687b      	ldr	r3, [r7, #4]
 800c86c:	2220      	movs	r2, #32
 800c86e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c872:	6878      	ldr	r0, [r7, #4]
 800c874:	f7ff fe5a 	bl	800c52c <HAL_UART_TxCpltCallback>
 800c878:	2300      	movs	r3, #0
 800c87a:	4618      	mov	r0, r3
 800c87c:	3708      	adds	r7, #8
 800c87e:	46bd      	mov	sp, r7
 800c880:	bd80      	pop	{r7, pc}

0800c882 <UART_Receive_IT>:
 800c882:	b580      	push	{r7, lr}
 800c884:	b08c      	sub	sp, #48	; 0x30
 800c886:	af00      	add	r7, sp, #0
 800c888:	6078      	str	r0, [r7, #4]
 800c88a:	687b      	ldr	r3, [r7, #4]
 800c88c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800c890:	b2db      	uxtb	r3, r3
 800c892:	2b22      	cmp	r3, #34	; 0x22
 800c894:	f040 80ab 	bne.w	800c9ee <UART_Receive_IT+0x16c>
 800c898:	687b      	ldr	r3, [r7, #4]
 800c89a:	689b      	ldr	r3, [r3, #8]
 800c89c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c8a0:	d117      	bne.n	800c8d2 <UART_Receive_IT+0x50>
 800c8a2:	687b      	ldr	r3, [r7, #4]
 800c8a4:	691b      	ldr	r3, [r3, #16]
 800c8a6:	2b00      	cmp	r3, #0
 800c8a8:	d113      	bne.n	800c8d2 <UART_Receive_IT+0x50>
 800c8aa:	2300      	movs	r3, #0
 800c8ac:	62fb      	str	r3, [r7, #44]	; 0x2c
 800c8ae:	687b      	ldr	r3, [r7, #4]
 800c8b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c8b2:	62bb      	str	r3, [r7, #40]	; 0x28
 800c8b4:	687b      	ldr	r3, [r7, #4]
 800c8b6:	681b      	ldr	r3, [r3, #0]
 800c8b8:	685b      	ldr	r3, [r3, #4]
 800c8ba:	b29b      	uxth	r3, r3
 800c8bc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800c8c0:	b29a      	uxth	r2, r3
 800c8c2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c8c4:	801a      	strh	r2, [r3, #0]
 800c8c6:	687b      	ldr	r3, [r7, #4]
 800c8c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c8ca:	1c9a      	adds	r2, r3, #2
 800c8cc:	687b      	ldr	r3, [r7, #4]
 800c8ce:	629a      	str	r2, [r3, #40]	; 0x28
 800c8d0:	e026      	b.n	800c920 <UART_Receive_IT+0x9e>
 800c8d2:	687b      	ldr	r3, [r7, #4]
 800c8d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c8d6:	62fb      	str	r3, [r7, #44]	; 0x2c
 800c8d8:	2300      	movs	r3, #0
 800c8da:	62bb      	str	r3, [r7, #40]	; 0x28
 800c8dc:	687b      	ldr	r3, [r7, #4]
 800c8de:	689b      	ldr	r3, [r3, #8]
 800c8e0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c8e4:	d007      	beq.n	800c8f6 <UART_Receive_IT+0x74>
 800c8e6:	687b      	ldr	r3, [r7, #4]
 800c8e8:	689b      	ldr	r3, [r3, #8]
 800c8ea:	2b00      	cmp	r3, #0
 800c8ec:	d10a      	bne.n	800c904 <UART_Receive_IT+0x82>
 800c8ee:	687b      	ldr	r3, [r7, #4]
 800c8f0:	691b      	ldr	r3, [r3, #16]
 800c8f2:	2b00      	cmp	r3, #0
 800c8f4:	d106      	bne.n	800c904 <UART_Receive_IT+0x82>
 800c8f6:	687b      	ldr	r3, [r7, #4]
 800c8f8:	681b      	ldr	r3, [r3, #0]
 800c8fa:	685b      	ldr	r3, [r3, #4]
 800c8fc:	b2da      	uxtb	r2, r3
 800c8fe:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c900:	701a      	strb	r2, [r3, #0]
 800c902:	e008      	b.n	800c916 <UART_Receive_IT+0x94>
 800c904:	687b      	ldr	r3, [r7, #4]
 800c906:	681b      	ldr	r3, [r3, #0]
 800c908:	685b      	ldr	r3, [r3, #4]
 800c90a:	b2db      	uxtb	r3, r3
 800c90c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800c910:	b2da      	uxtb	r2, r3
 800c912:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c914:	701a      	strb	r2, [r3, #0]
 800c916:	687b      	ldr	r3, [r7, #4]
 800c918:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c91a:	1c5a      	adds	r2, r3, #1
 800c91c:	687b      	ldr	r3, [r7, #4]
 800c91e:	629a      	str	r2, [r3, #40]	; 0x28
 800c920:	687b      	ldr	r3, [r7, #4]
 800c922:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c924:	b29b      	uxth	r3, r3
 800c926:	3b01      	subs	r3, #1
 800c928:	b29b      	uxth	r3, r3
 800c92a:	687a      	ldr	r2, [r7, #4]
 800c92c:	4619      	mov	r1, r3
 800c92e:	85d1      	strh	r1, [r2, #46]	; 0x2e
 800c930:	2b00      	cmp	r3, #0
 800c932:	d15a      	bne.n	800c9ea <UART_Receive_IT+0x168>
 800c934:	687b      	ldr	r3, [r7, #4]
 800c936:	681b      	ldr	r3, [r3, #0]
 800c938:	68da      	ldr	r2, [r3, #12]
 800c93a:	687b      	ldr	r3, [r7, #4]
 800c93c:	681b      	ldr	r3, [r3, #0]
 800c93e:	f022 0220 	bic.w	r2, r2, #32
 800c942:	60da      	str	r2, [r3, #12]
 800c944:	687b      	ldr	r3, [r7, #4]
 800c946:	681b      	ldr	r3, [r3, #0]
 800c948:	68da      	ldr	r2, [r3, #12]
 800c94a:	687b      	ldr	r3, [r7, #4]
 800c94c:	681b      	ldr	r3, [r3, #0]
 800c94e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800c952:	60da      	str	r2, [r3, #12]
 800c954:	687b      	ldr	r3, [r7, #4]
 800c956:	681b      	ldr	r3, [r3, #0]
 800c958:	695a      	ldr	r2, [r3, #20]
 800c95a:	687b      	ldr	r3, [r7, #4]
 800c95c:	681b      	ldr	r3, [r3, #0]
 800c95e:	f022 0201 	bic.w	r2, r2, #1
 800c962:	615a      	str	r2, [r3, #20]
 800c964:	687b      	ldr	r3, [r7, #4]
 800c966:	2220      	movs	r2, #32
 800c968:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c96c:	687b      	ldr	r3, [r7, #4]
 800c96e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c970:	2b01      	cmp	r3, #1
 800c972:	d135      	bne.n	800c9e0 <UART_Receive_IT+0x15e>
 800c974:	687b      	ldr	r3, [r7, #4]
 800c976:	2200      	movs	r2, #0
 800c978:	631a      	str	r2, [r3, #48]	; 0x30
 800c97a:	687b      	ldr	r3, [r7, #4]
 800c97c:	681b      	ldr	r3, [r3, #0]
 800c97e:	330c      	adds	r3, #12
 800c980:	617b      	str	r3, [r7, #20]
 800c982:	697b      	ldr	r3, [r7, #20]
 800c984:	e853 3f00 	ldrex	r3, [r3]
 800c988:	613b      	str	r3, [r7, #16]
 800c98a:	693b      	ldr	r3, [r7, #16]
 800c98c:	f023 0310 	bic.w	r3, r3, #16
 800c990:	627b      	str	r3, [r7, #36]	; 0x24
 800c992:	687b      	ldr	r3, [r7, #4]
 800c994:	681b      	ldr	r3, [r3, #0]
 800c996:	330c      	adds	r3, #12
 800c998:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800c99a:	623a      	str	r2, [r7, #32]
 800c99c:	61fb      	str	r3, [r7, #28]
 800c99e:	69f9      	ldr	r1, [r7, #28]
 800c9a0:	6a3a      	ldr	r2, [r7, #32]
 800c9a2:	e841 2300 	strex	r3, r2, [r1]
 800c9a6:	61bb      	str	r3, [r7, #24]
 800c9a8:	69bb      	ldr	r3, [r7, #24]
 800c9aa:	2b00      	cmp	r3, #0
 800c9ac:	d1e5      	bne.n	800c97a <UART_Receive_IT+0xf8>
 800c9ae:	687b      	ldr	r3, [r7, #4]
 800c9b0:	681b      	ldr	r3, [r3, #0]
 800c9b2:	681b      	ldr	r3, [r3, #0]
 800c9b4:	f003 0310 	and.w	r3, r3, #16
 800c9b8:	2b10      	cmp	r3, #16
 800c9ba:	d10a      	bne.n	800c9d2 <UART_Receive_IT+0x150>
 800c9bc:	2300      	movs	r3, #0
 800c9be:	60fb      	str	r3, [r7, #12]
 800c9c0:	687b      	ldr	r3, [r7, #4]
 800c9c2:	681b      	ldr	r3, [r3, #0]
 800c9c4:	681b      	ldr	r3, [r3, #0]
 800c9c6:	60fb      	str	r3, [r7, #12]
 800c9c8:	687b      	ldr	r3, [r7, #4]
 800c9ca:	681b      	ldr	r3, [r3, #0]
 800c9cc:	685b      	ldr	r3, [r3, #4]
 800c9ce:	60fb      	str	r3, [r7, #12]
 800c9d0:	68fb      	ldr	r3, [r7, #12]
 800c9d2:	687b      	ldr	r3, [r7, #4]
 800c9d4:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800c9d6:	4619      	mov	r1, r3
 800c9d8:	6878      	ldr	r0, [r7, #4]
 800c9da:	f7ff fdbb 	bl	800c554 <HAL_UARTEx_RxEventCallback>
 800c9de:	e002      	b.n	800c9e6 <UART_Receive_IT+0x164>
 800c9e0:	6878      	ldr	r0, [r7, #4]
 800c9e2:	f7f9 ff31 	bl	8006848 <HAL_UART_RxCpltCallback>
 800c9e6:	2300      	movs	r3, #0
 800c9e8:	e002      	b.n	800c9f0 <UART_Receive_IT+0x16e>
 800c9ea:	2300      	movs	r3, #0
 800c9ec:	e000      	b.n	800c9f0 <UART_Receive_IT+0x16e>
 800c9ee:	2302      	movs	r3, #2
 800c9f0:	4618      	mov	r0, r3
 800c9f2:	3730      	adds	r7, #48	; 0x30
 800c9f4:	46bd      	mov	sp, r7
 800c9f6:	bd80      	pop	{r7, pc}

0800c9f8 <UART_SetConfig>:
 800c9f8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800c9fc:	b0c0      	sub	sp, #256	; 0x100
 800c9fe:	af00      	add	r7, sp, #0
 800ca00:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 800ca04:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ca08:	681b      	ldr	r3, [r3, #0]
 800ca0a:	691b      	ldr	r3, [r3, #16]
 800ca0c:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 800ca10:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ca14:	68d9      	ldr	r1, [r3, #12]
 800ca16:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ca1a:	681a      	ldr	r2, [r3, #0]
 800ca1c:	ea40 0301 	orr.w	r3, r0, r1
 800ca20:	6113      	str	r3, [r2, #16]
 800ca22:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ca26:	689a      	ldr	r2, [r3, #8]
 800ca28:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ca2c:	691b      	ldr	r3, [r3, #16]
 800ca2e:	431a      	orrs	r2, r3
 800ca30:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ca34:	695b      	ldr	r3, [r3, #20]
 800ca36:	431a      	orrs	r2, r3
 800ca38:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ca3c:	69db      	ldr	r3, [r3, #28]
 800ca3e:	4313      	orrs	r3, r2
 800ca40:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 800ca44:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ca48:	681b      	ldr	r3, [r3, #0]
 800ca4a:	68db      	ldr	r3, [r3, #12]
 800ca4c:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 800ca50:	f021 010c 	bic.w	r1, r1, #12
 800ca54:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ca58:	681a      	ldr	r2, [r3, #0]
 800ca5a:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 800ca5e:	430b      	orrs	r3, r1
 800ca60:	60d3      	str	r3, [r2, #12]
 800ca62:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ca66:	681b      	ldr	r3, [r3, #0]
 800ca68:	695b      	ldr	r3, [r3, #20]
 800ca6a:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 800ca6e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ca72:	6999      	ldr	r1, [r3, #24]
 800ca74:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ca78:	681a      	ldr	r2, [r3, #0]
 800ca7a:	ea40 0301 	orr.w	r3, r0, r1
 800ca7e:	6153      	str	r3, [r2, #20]
 800ca80:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ca84:	681a      	ldr	r2, [r3, #0]
 800ca86:	4b8f      	ldr	r3, [pc, #572]	; (800ccc4 <UART_SetConfig+0x2cc>)
 800ca88:	429a      	cmp	r2, r3
 800ca8a:	d005      	beq.n	800ca98 <UART_SetConfig+0xa0>
 800ca8c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ca90:	681a      	ldr	r2, [r3, #0]
 800ca92:	4b8d      	ldr	r3, [pc, #564]	; (800ccc8 <UART_SetConfig+0x2d0>)
 800ca94:	429a      	cmp	r2, r3
 800ca96:	d104      	bne.n	800caa2 <UART_SetConfig+0xaa>
 800ca98:	f7fc fda4 	bl	80095e4 <HAL_RCC_GetPCLK2Freq>
 800ca9c:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800caa0:	e003      	b.n	800caaa <UART_SetConfig+0xb2>
 800caa2:	f7fc fd8b 	bl	80095bc <HAL_RCC_GetPCLK1Freq>
 800caa6:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800caaa:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800caae:	69db      	ldr	r3, [r3, #28]
 800cab0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800cab4:	f040 810c 	bne.w	800ccd0 <UART_SetConfig+0x2d8>
 800cab8:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800cabc:	2200      	movs	r2, #0
 800cabe:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800cac2:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 800cac6:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 800caca:	4622      	mov	r2, r4
 800cacc:	462b      	mov	r3, r5
 800cace:	1891      	adds	r1, r2, r2
 800cad0:	65b9      	str	r1, [r7, #88]	; 0x58
 800cad2:	415b      	adcs	r3, r3
 800cad4:	65fb      	str	r3, [r7, #92]	; 0x5c
 800cad6:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800cada:	4621      	mov	r1, r4
 800cadc:	eb12 0801 	adds.w	r8, r2, r1
 800cae0:	4629      	mov	r1, r5
 800cae2:	eb43 0901 	adc.w	r9, r3, r1
 800cae6:	f04f 0200 	mov.w	r2, #0
 800caea:	f04f 0300 	mov.w	r3, #0
 800caee:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800caf2:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800caf6:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800cafa:	4690      	mov	r8, r2
 800cafc:	4699      	mov	r9, r3
 800cafe:	4623      	mov	r3, r4
 800cb00:	eb18 0303 	adds.w	r3, r8, r3
 800cb04:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800cb08:	462b      	mov	r3, r5
 800cb0a:	eb49 0303 	adc.w	r3, r9, r3
 800cb0e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800cb12:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cb16:	685b      	ldr	r3, [r3, #4]
 800cb18:	2200      	movs	r2, #0
 800cb1a:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800cb1e:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 800cb22:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 800cb26:	460b      	mov	r3, r1
 800cb28:	18db      	adds	r3, r3, r3
 800cb2a:	653b      	str	r3, [r7, #80]	; 0x50
 800cb2c:	4613      	mov	r3, r2
 800cb2e:	eb42 0303 	adc.w	r3, r2, r3
 800cb32:	657b      	str	r3, [r7, #84]	; 0x54
 800cb34:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800cb38:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800cb3c:	f7f4 f8a4 	bl	8000c88 <__aeabi_uldivmod>
 800cb40:	4602      	mov	r2, r0
 800cb42:	460b      	mov	r3, r1
 800cb44:	4b61      	ldr	r3, [pc, #388]	; (800cccc <UART_SetConfig+0x2d4>)
 800cb46:	fba3 2302 	umull	r2, r3, r3, r2
 800cb4a:	095b      	lsrs	r3, r3, #5
 800cb4c:	011c      	lsls	r4, r3, #4
 800cb4e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800cb52:	2200      	movs	r2, #0
 800cb54:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800cb58:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 800cb5c:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 800cb60:	4642      	mov	r2, r8
 800cb62:	464b      	mov	r3, r9
 800cb64:	1891      	adds	r1, r2, r2
 800cb66:	64b9      	str	r1, [r7, #72]	; 0x48
 800cb68:	415b      	adcs	r3, r3
 800cb6a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800cb6c:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 800cb70:	4641      	mov	r1, r8
 800cb72:	eb12 0a01 	adds.w	sl, r2, r1
 800cb76:	4649      	mov	r1, r9
 800cb78:	eb43 0b01 	adc.w	fp, r3, r1
 800cb7c:	f04f 0200 	mov.w	r2, #0
 800cb80:	f04f 0300 	mov.w	r3, #0
 800cb84:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800cb88:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800cb8c:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800cb90:	4692      	mov	sl, r2
 800cb92:	469b      	mov	fp, r3
 800cb94:	4643      	mov	r3, r8
 800cb96:	eb1a 0303 	adds.w	r3, sl, r3
 800cb9a:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800cb9e:	464b      	mov	r3, r9
 800cba0:	eb4b 0303 	adc.w	r3, fp, r3
 800cba4:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 800cba8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cbac:	685b      	ldr	r3, [r3, #4]
 800cbae:	2200      	movs	r2, #0
 800cbb0:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800cbb4:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 800cbb8:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 800cbbc:	460b      	mov	r3, r1
 800cbbe:	18db      	adds	r3, r3, r3
 800cbc0:	643b      	str	r3, [r7, #64]	; 0x40
 800cbc2:	4613      	mov	r3, r2
 800cbc4:	eb42 0303 	adc.w	r3, r2, r3
 800cbc8:	647b      	str	r3, [r7, #68]	; 0x44
 800cbca:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800cbce:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 800cbd2:	f7f4 f859 	bl	8000c88 <__aeabi_uldivmod>
 800cbd6:	4602      	mov	r2, r0
 800cbd8:	460b      	mov	r3, r1
 800cbda:	4611      	mov	r1, r2
 800cbdc:	4b3b      	ldr	r3, [pc, #236]	; (800cccc <UART_SetConfig+0x2d4>)
 800cbde:	fba3 2301 	umull	r2, r3, r3, r1
 800cbe2:	095b      	lsrs	r3, r3, #5
 800cbe4:	2264      	movs	r2, #100	; 0x64
 800cbe6:	fb02 f303 	mul.w	r3, r2, r3
 800cbea:	1acb      	subs	r3, r1, r3
 800cbec:	00db      	lsls	r3, r3, #3
 800cbee:	f103 0232 	add.w	r2, r3, #50	; 0x32
 800cbf2:	4b36      	ldr	r3, [pc, #216]	; (800cccc <UART_SetConfig+0x2d4>)
 800cbf4:	fba3 2302 	umull	r2, r3, r3, r2
 800cbf8:	095b      	lsrs	r3, r3, #5
 800cbfa:	005b      	lsls	r3, r3, #1
 800cbfc:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800cc00:	441c      	add	r4, r3
 800cc02:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800cc06:	2200      	movs	r2, #0
 800cc08:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800cc0c:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 800cc10:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 800cc14:	4642      	mov	r2, r8
 800cc16:	464b      	mov	r3, r9
 800cc18:	1891      	adds	r1, r2, r2
 800cc1a:	63b9      	str	r1, [r7, #56]	; 0x38
 800cc1c:	415b      	adcs	r3, r3
 800cc1e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800cc20:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800cc24:	4641      	mov	r1, r8
 800cc26:	1851      	adds	r1, r2, r1
 800cc28:	6339      	str	r1, [r7, #48]	; 0x30
 800cc2a:	4649      	mov	r1, r9
 800cc2c:	414b      	adcs	r3, r1
 800cc2e:	637b      	str	r3, [r7, #52]	; 0x34
 800cc30:	f04f 0200 	mov.w	r2, #0
 800cc34:	f04f 0300 	mov.w	r3, #0
 800cc38:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 800cc3c:	4659      	mov	r1, fp
 800cc3e:	00cb      	lsls	r3, r1, #3
 800cc40:	4651      	mov	r1, sl
 800cc42:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800cc46:	4651      	mov	r1, sl
 800cc48:	00ca      	lsls	r2, r1, #3
 800cc4a:	4610      	mov	r0, r2
 800cc4c:	4619      	mov	r1, r3
 800cc4e:	4603      	mov	r3, r0
 800cc50:	4642      	mov	r2, r8
 800cc52:	189b      	adds	r3, r3, r2
 800cc54:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800cc58:	464b      	mov	r3, r9
 800cc5a:	460a      	mov	r2, r1
 800cc5c:	eb42 0303 	adc.w	r3, r2, r3
 800cc60:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800cc64:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cc68:	685b      	ldr	r3, [r3, #4]
 800cc6a:	2200      	movs	r2, #0
 800cc6c:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800cc70:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 800cc74:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 800cc78:	460b      	mov	r3, r1
 800cc7a:	18db      	adds	r3, r3, r3
 800cc7c:	62bb      	str	r3, [r7, #40]	; 0x28
 800cc7e:	4613      	mov	r3, r2
 800cc80:	eb42 0303 	adc.w	r3, r2, r3
 800cc84:	62fb      	str	r3, [r7, #44]	; 0x2c
 800cc86:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800cc8a:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 800cc8e:	f7f3 fffb 	bl	8000c88 <__aeabi_uldivmod>
 800cc92:	4602      	mov	r2, r0
 800cc94:	460b      	mov	r3, r1
 800cc96:	4b0d      	ldr	r3, [pc, #52]	; (800cccc <UART_SetConfig+0x2d4>)
 800cc98:	fba3 1302 	umull	r1, r3, r3, r2
 800cc9c:	095b      	lsrs	r3, r3, #5
 800cc9e:	2164      	movs	r1, #100	; 0x64
 800cca0:	fb01 f303 	mul.w	r3, r1, r3
 800cca4:	1ad3      	subs	r3, r2, r3
 800cca6:	00db      	lsls	r3, r3, #3
 800cca8:	3332      	adds	r3, #50	; 0x32
 800ccaa:	4a08      	ldr	r2, [pc, #32]	; (800cccc <UART_SetConfig+0x2d4>)
 800ccac:	fba2 2303 	umull	r2, r3, r2, r3
 800ccb0:	095b      	lsrs	r3, r3, #5
 800ccb2:	f003 0207 	and.w	r2, r3, #7
 800ccb6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ccba:	681b      	ldr	r3, [r3, #0]
 800ccbc:	4422      	add	r2, r4
 800ccbe:	609a      	str	r2, [r3, #8]
 800ccc0:	e105      	b.n	800cece <UART_SetConfig+0x4d6>
 800ccc2:	bf00      	nop
 800ccc4:	40011000 	.word	0x40011000
 800ccc8:	40011400 	.word	0x40011400
 800cccc:	51eb851f 	.word	0x51eb851f
 800ccd0:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800ccd4:	2200      	movs	r2, #0
 800ccd6:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800ccda:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800ccde:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 800cce2:	4642      	mov	r2, r8
 800cce4:	464b      	mov	r3, r9
 800cce6:	1891      	adds	r1, r2, r2
 800cce8:	6239      	str	r1, [r7, #32]
 800ccea:	415b      	adcs	r3, r3
 800ccec:	627b      	str	r3, [r7, #36]	; 0x24
 800ccee:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800ccf2:	4641      	mov	r1, r8
 800ccf4:	1854      	adds	r4, r2, r1
 800ccf6:	4649      	mov	r1, r9
 800ccf8:	eb43 0501 	adc.w	r5, r3, r1
 800ccfc:	f04f 0200 	mov.w	r2, #0
 800cd00:	f04f 0300 	mov.w	r3, #0
 800cd04:	00eb      	lsls	r3, r5, #3
 800cd06:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800cd0a:	00e2      	lsls	r2, r4, #3
 800cd0c:	4614      	mov	r4, r2
 800cd0e:	461d      	mov	r5, r3
 800cd10:	4643      	mov	r3, r8
 800cd12:	18e3      	adds	r3, r4, r3
 800cd14:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800cd18:	464b      	mov	r3, r9
 800cd1a:	eb45 0303 	adc.w	r3, r5, r3
 800cd1e:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800cd22:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cd26:	685b      	ldr	r3, [r3, #4]
 800cd28:	2200      	movs	r2, #0
 800cd2a:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800cd2e:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800cd32:	f04f 0200 	mov.w	r2, #0
 800cd36:	f04f 0300 	mov.w	r3, #0
 800cd3a:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 800cd3e:	4629      	mov	r1, r5
 800cd40:	008b      	lsls	r3, r1, #2
 800cd42:	4621      	mov	r1, r4
 800cd44:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800cd48:	4621      	mov	r1, r4
 800cd4a:	008a      	lsls	r2, r1, #2
 800cd4c:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 800cd50:	f7f3 ff9a 	bl	8000c88 <__aeabi_uldivmod>
 800cd54:	4602      	mov	r2, r0
 800cd56:	460b      	mov	r3, r1
 800cd58:	4b60      	ldr	r3, [pc, #384]	; (800cedc <UART_SetConfig+0x4e4>)
 800cd5a:	fba3 2302 	umull	r2, r3, r3, r2
 800cd5e:	095b      	lsrs	r3, r3, #5
 800cd60:	011c      	lsls	r4, r3, #4
 800cd62:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800cd66:	2200      	movs	r2, #0
 800cd68:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800cd6c:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800cd70:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 800cd74:	4642      	mov	r2, r8
 800cd76:	464b      	mov	r3, r9
 800cd78:	1891      	adds	r1, r2, r2
 800cd7a:	61b9      	str	r1, [r7, #24]
 800cd7c:	415b      	adcs	r3, r3
 800cd7e:	61fb      	str	r3, [r7, #28]
 800cd80:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800cd84:	4641      	mov	r1, r8
 800cd86:	1851      	adds	r1, r2, r1
 800cd88:	6139      	str	r1, [r7, #16]
 800cd8a:	4649      	mov	r1, r9
 800cd8c:	414b      	adcs	r3, r1
 800cd8e:	617b      	str	r3, [r7, #20]
 800cd90:	f04f 0200 	mov.w	r2, #0
 800cd94:	f04f 0300 	mov.w	r3, #0
 800cd98:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800cd9c:	4659      	mov	r1, fp
 800cd9e:	00cb      	lsls	r3, r1, #3
 800cda0:	4651      	mov	r1, sl
 800cda2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800cda6:	4651      	mov	r1, sl
 800cda8:	00ca      	lsls	r2, r1, #3
 800cdaa:	4610      	mov	r0, r2
 800cdac:	4619      	mov	r1, r3
 800cdae:	4603      	mov	r3, r0
 800cdb0:	4642      	mov	r2, r8
 800cdb2:	189b      	adds	r3, r3, r2
 800cdb4:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800cdb8:	464b      	mov	r3, r9
 800cdba:	460a      	mov	r2, r1
 800cdbc:	eb42 0303 	adc.w	r3, r2, r3
 800cdc0:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800cdc4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cdc8:	685b      	ldr	r3, [r3, #4]
 800cdca:	2200      	movs	r2, #0
 800cdcc:	67bb      	str	r3, [r7, #120]	; 0x78
 800cdce:	67fa      	str	r2, [r7, #124]	; 0x7c
 800cdd0:	f04f 0200 	mov.w	r2, #0
 800cdd4:	f04f 0300 	mov.w	r3, #0
 800cdd8:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 800cddc:	4649      	mov	r1, r9
 800cdde:	008b      	lsls	r3, r1, #2
 800cde0:	4641      	mov	r1, r8
 800cde2:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800cde6:	4641      	mov	r1, r8
 800cde8:	008a      	lsls	r2, r1, #2
 800cdea:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800cdee:	f7f3 ff4b 	bl	8000c88 <__aeabi_uldivmod>
 800cdf2:	4602      	mov	r2, r0
 800cdf4:	460b      	mov	r3, r1
 800cdf6:	4b39      	ldr	r3, [pc, #228]	; (800cedc <UART_SetConfig+0x4e4>)
 800cdf8:	fba3 1302 	umull	r1, r3, r3, r2
 800cdfc:	095b      	lsrs	r3, r3, #5
 800cdfe:	2164      	movs	r1, #100	; 0x64
 800ce00:	fb01 f303 	mul.w	r3, r1, r3
 800ce04:	1ad3      	subs	r3, r2, r3
 800ce06:	011b      	lsls	r3, r3, #4
 800ce08:	3332      	adds	r3, #50	; 0x32
 800ce0a:	4a34      	ldr	r2, [pc, #208]	; (800cedc <UART_SetConfig+0x4e4>)
 800ce0c:	fba2 2303 	umull	r2, r3, r2, r3
 800ce10:	095b      	lsrs	r3, r3, #5
 800ce12:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800ce16:	441c      	add	r4, r3
 800ce18:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800ce1c:	2200      	movs	r2, #0
 800ce1e:	673b      	str	r3, [r7, #112]	; 0x70
 800ce20:	677a      	str	r2, [r7, #116]	; 0x74
 800ce22:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 800ce26:	4642      	mov	r2, r8
 800ce28:	464b      	mov	r3, r9
 800ce2a:	1891      	adds	r1, r2, r2
 800ce2c:	60b9      	str	r1, [r7, #8]
 800ce2e:	415b      	adcs	r3, r3
 800ce30:	60fb      	str	r3, [r7, #12]
 800ce32:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800ce36:	4641      	mov	r1, r8
 800ce38:	1851      	adds	r1, r2, r1
 800ce3a:	6039      	str	r1, [r7, #0]
 800ce3c:	4649      	mov	r1, r9
 800ce3e:	414b      	adcs	r3, r1
 800ce40:	607b      	str	r3, [r7, #4]
 800ce42:	f04f 0200 	mov.w	r2, #0
 800ce46:	f04f 0300 	mov.w	r3, #0
 800ce4a:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800ce4e:	4659      	mov	r1, fp
 800ce50:	00cb      	lsls	r3, r1, #3
 800ce52:	4651      	mov	r1, sl
 800ce54:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800ce58:	4651      	mov	r1, sl
 800ce5a:	00ca      	lsls	r2, r1, #3
 800ce5c:	4610      	mov	r0, r2
 800ce5e:	4619      	mov	r1, r3
 800ce60:	4603      	mov	r3, r0
 800ce62:	4642      	mov	r2, r8
 800ce64:	189b      	adds	r3, r3, r2
 800ce66:	66bb      	str	r3, [r7, #104]	; 0x68
 800ce68:	464b      	mov	r3, r9
 800ce6a:	460a      	mov	r2, r1
 800ce6c:	eb42 0303 	adc.w	r3, r2, r3
 800ce70:	66fb      	str	r3, [r7, #108]	; 0x6c
 800ce72:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ce76:	685b      	ldr	r3, [r3, #4]
 800ce78:	2200      	movs	r2, #0
 800ce7a:	663b      	str	r3, [r7, #96]	; 0x60
 800ce7c:	667a      	str	r2, [r7, #100]	; 0x64
 800ce7e:	f04f 0200 	mov.w	r2, #0
 800ce82:	f04f 0300 	mov.w	r3, #0
 800ce86:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 800ce8a:	4649      	mov	r1, r9
 800ce8c:	008b      	lsls	r3, r1, #2
 800ce8e:	4641      	mov	r1, r8
 800ce90:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800ce94:	4641      	mov	r1, r8
 800ce96:	008a      	lsls	r2, r1, #2
 800ce98:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800ce9c:	f7f3 fef4 	bl	8000c88 <__aeabi_uldivmod>
 800cea0:	4602      	mov	r2, r0
 800cea2:	460b      	mov	r3, r1
 800cea4:	4b0d      	ldr	r3, [pc, #52]	; (800cedc <UART_SetConfig+0x4e4>)
 800cea6:	fba3 1302 	umull	r1, r3, r3, r2
 800ceaa:	095b      	lsrs	r3, r3, #5
 800ceac:	2164      	movs	r1, #100	; 0x64
 800ceae:	fb01 f303 	mul.w	r3, r1, r3
 800ceb2:	1ad3      	subs	r3, r2, r3
 800ceb4:	011b      	lsls	r3, r3, #4
 800ceb6:	3332      	adds	r3, #50	; 0x32
 800ceb8:	4a08      	ldr	r2, [pc, #32]	; (800cedc <UART_SetConfig+0x4e4>)
 800ceba:	fba2 2303 	umull	r2, r3, r2, r3
 800cebe:	095b      	lsrs	r3, r3, #5
 800cec0:	f003 020f 	and.w	r2, r3, #15
 800cec4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cec8:	681b      	ldr	r3, [r3, #0]
 800ceca:	4422      	add	r2, r4
 800cecc:	609a      	str	r2, [r3, #8]
 800cece:	bf00      	nop
 800ced0:	f507 7780 	add.w	r7, r7, #256	; 0x100
 800ced4:	46bd      	mov	sp, r7
 800ced6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800ceda:	bf00      	nop
 800cedc:	51eb851f 	.word	0x51eb851f

0800cee0 <__errno>:
 800cee0:	4b01      	ldr	r3, [pc, #4]	; (800cee8 <__errno+0x8>)
 800cee2:	6818      	ldr	r0, [r3, #0]
 800cee4:	4770      	bx	lr
 800cee6:	bf00      	nop
 800cee8:	20000140 	.word	0x20000140

0800ceec <__libc_init_array>:
 800ceec:	b570      	push	{r4, r5, r6, lr}
 800ceee:	4d0d      	ldr	r5, [pc, #52]	; (800cf24 <__libc_init_array+0x38>)
 800cef0:	4c0d      	ldr	r4, [pc, #52]	; (800cf28 <__libc_init_array+0x3c>)
 800cef2:	1b64      	subs	r4, r4, r5
 800cef4:	10a4      	asrs	r4, r4, #2
 800cef6:	2600      	movs	r6, #0
 800cef8:	42a6      	cmp	r6, r4
 800cefa:	d109      	bne.n	800cf10 <__libc_init_array+0x24>
 800cefc:	4d0b      	ldr	r5, [pc, #44]	; (800cf2c <__libc_init_array+0x40>)
 800cefe:	4c0c      	ldr	r4, [pc, #48]	; (800cf30 <__libc_init_array+0x44>)
 800cf00:	f004 f950 	bl	80111a4 <_init>
 800cf04:	1b64      	subs	r4, r4, r5
 800cf06:	10a4      	asrs	r4, r4, #2
 800cf08:	2600      	movs	r6, #0
 800cf0a:	42a6      	cmp	r6, r4
 800cf0c:	d105      	bne.n	800cf1a <__libc_init_array+0x2e>
 800cf0e:	bd70      	pop	{r4, r5, r6, pc}
 800cf10:	f855 3b04 	ldr.w	r3, [r5], #4
 800cf14:	4798      	blx	r3
 800cf16:	3601      	adds	r6, #1
 800cf18:	e7ee      	b.n	800cef8 <__libc_init_array+0xc>
 800cf1a:	f855 3b04 	ldr.w	r3, [r5], #4
 800cf1e:	4798      	blx	r3
 800cf20:	3601      	adds	r6, #1
 800cf22:	e7f2      	b.n	800cf0a <__libc_init_array+0x1e>
 800cf24:	08011920 	.word	0x08011920
 800cf28:	08011920 	.word	0x08011920
 800cf2c:	08011920 	.word	0x08011920
 800cf30:	08011924 	.word	0x08011924

0800cf34 <memset>:
 800cf34:	4402      	add	r2, r0
 800cf36:	4603      	mov	r3, r0
 800cf38:	4293      	cmp	r3, r2
 800cf3a:	d100      	bne.n	800cf3e <memset+0xa>
 800cf3c:	4770      	bx	lr
 800cf3e:	f803 1b01 	strb.w	r1, [r3], #1
 800cf42:	e7f9      	b.n	800cf38 <memset+0x4>

0800cf44 <__cvt>:
 800cf44:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800cf48:	ec55 4b10 	vmov	r4, r5, d0
 800cf4c:	2d00      	cmp	r5, #0
 800cf4e:	460e      	mov	r6, r1
 800cf50:	4619      	mov	r1, r3
 800cf52:	462b      	mov	r3, r5
 800cf54:	bfbb      	ittet	lt
 800cf56:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 800cf5a:	461d      	movlt	r5, r3
 800cf5c:	2300      	movge	r3, #0
 800cf5e:	232d      	movlt	r3, #45	; 0x2d
 800cf60:	700b      	strb	r3, [r1, #0]
 800cf62:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cf64:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800cf68:	4691      	mov	r9, r2
 800cf6a:	f023 0820 	bic.w	r8, r3, #32
 800cf6e:	bfbc      	itt	lt
 800cf70:	4622      	movlt	r2, r4
 800cf72:	4614      	movlt	r4, r2
 800cf74:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800cf78:	d005      	beq.n	800cf86 <__cvt+0x42>
 800cf7a:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800cf7e:	d100      	bne.n	800cf82 <__cvt+0x3e>
 800cf80:	3601      	adds	r6, #1
 800cf82:	2102      	movs	r1, #2
 800cf84:	e000      	b.n	800cf88 <__cvt+0x44>
 800cf86:	2103      	movs	r1, #3
 800cf88:	ab03      	add	r3, sp, #12
 800cf8a:	9301      	str	r3, [sp, #4]
 800cf8c:	ab02      	add	r3, sp, #8
 800cf8e:	9300      	str	r3, [sp, #0]
 800cf90:	ec45 4b10 	vmov	d0, r4, r5
 800cf94:	4653      	mov	r3, sl
 800cf96:	4632      	mov	r2, r6
 800cf98:	f000 fcea 	bl	800d970 <_dtoa_r>
 800cf9c:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800cfa0:	4607      	mov	r7, r0
 800cfa2:	d102      	bne.n	800cfaa <__cvt+0x66>
 800cfa4:	f019 0f01 	tst.w	r9, #1
 800cfa8:	d022      	beq.n	800cff0 <__cvt+0xac>
 800cfaa:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800cfae:	eb07 0906 	add.w	r9, r7, r6
 800cfb2:	d110      	bne.n	800cfd6 <__cvt+0x92>
 800cfb4:	783b      	ldrb	r3, [r7, #0]
 800cfb6:	2b30      	cmp	r3, #48	; 0x30
 800cfb8:	d10a      	bne.n	800cfd0 <__cvt+0x8c>
 800cfba:	2200      	movs	r2, #0
 800cfbc:	2300      	movs	r3, #0
 800cfbe:	4620      	mov	r0, r4
 800cfc0:	4629      	mov	r1, r5
 800cfc2:	f7f3 fda1 	bl	8000b08 <__aeabi_dcmpeq>
 800cfc6:	b918      	cbnz	r0, 800cfd0 <__cvt+0x8c>
 800cfc8:	f1c6 0601 	rsb	r6, r6, #1
 800cfcc:	f8ca 6000 	str.w	r6, [sl]
 800cfd0:	f8da 3000 	ldr.w	r3, [sl]
 800cfd4:	4499      	add	r9, r3
 800cfd6:	2200      	movs	r2, #0
 800cfd8:	2300      	movs	r3, #0
 800cfda:	4620      	mov	r0, r4
 800cfdc:	4629      	mov	r1, r5
 800cfde:	f7f3 fd93 	bl	8000b08 <__aeabi_dcmpeq>
 800cfe2:	b108      	cbz	r0, 800cfe8 <__cvt+0xa4>
 800cfe4:	f8cd 900c 	str.w	r9, [sp, #12]
 800cfe8:	2230      	movs	r2, #48	; 0x30
 800cfea:	9b03      	ldr	r3, [sp, #12]
 800cfec:	454b      	cmp	r3, r9
 800cfee:	d307      	bcc.n	800d000 <__cvt+0xbc>
 800cff0:	9b03      	ldr	r3, [sp, #12]
 800cff2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800cff4:	1bdb      	subs	r3, r3, r7
 800cff6:	4638      	mov	r0, r7
 800cff8:	6013      	str	r3, [r2, #0]
 800cffa:	b004      	add	sp, #16
 800cffc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d000:	1c59      	adds	r1, r3, #1
 800d002:	9103      	str	r1, [sp, #12]
 800d004:	701a      	strb	r2, [r3, #0]
 800d006:	e7f0      	b.n	800cfea <__cvt+0xa6>

0800d008 <__exponent>:
 800d008:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d00a:	4603      	mov	r3, r0
 800d00c:	2900      	cmp	r1, #0
 800d00e:	bfb8      	it	lt
 800d010:	4249      	neglt	r1, r1
 800d012:	f803 2b02 	strb.w	r2, [r3], #2
 800d016:	bfb4      	ite	lt
 800d018:	222d      	movlt	r2, #45	; 0x2d
 800d01a:	222b      	movge	r2, #43	; 0x2b
 800d01c:	2909      	cmp	r1, #9
 800d01e:	7042      	strb	r2, [r0, #1]
 800d020:	dd2a      	ble.n	800d078 <__exponent+0x70>
 800d022:	f10d 0407 	add.w	r4, sp, #7
 800d026:	46a4      	mov	ip, r4
 800d028:	270a      	movs	r7, #10
 800d02a:	46a6      	mov	lr, r4
 800d02c:	460a      	mov	r2, r1
 800d02e:	fb91 f6f7 	sdiv	r6, r1, r7
 800d032:	fb07 1516 	mls	r5, r7, r6, r1
 800d036:	3530      	adds	r5, #48	; 0x30
 800d038:	2a63      	cmp	r2, #99	; 0x63
 800d03a:	f104 34ff 	add.w	r4, r4, #4294967295
 800d03e:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800d042:	4631      	mov	r1, r6
 800d044:	dcf1      	bgt.n	800d02a <__exponent+0x22>
 800d046:	3130      	adds	r1, #48	; 0x30
 800d048:	f1ae 0502 	sub.w	r5, lr, #2
 800d04c:	f804 1c01 	strb.w	r1, [r4, #-1]
 800d050:	1c44      	adds	r4, r0, #1
 800d052:	4629      	mov	r1, r5
 800d054:	4561      	cmp	r1, ip
 800d056:	d30a      	bcc.n	800d06e <__exponent+0x66>
 800d058:	f10d 0209 	add.w	r2, sp, #9
 800d05c:	eba2 020e 	sub.w	r2, r2, lr
 800d060:	4565      	cmp	r5, ip
 800d062:	bf88      	it	hi
 800d064:	2200      	movhi	r2, #0
 800d066:	4413      	add	r3, r2
 800d068:	1a18      	subs	r0, r3, r0
 800d06a:	b003      	add	sp, #12
 800d06c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d06e:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d072:	f804 2f01 	strb.w	r2, [r4, #1]!
 800d076:	e7ed      	b.n	800d054 <__exponent+0x4c>
 800d078:	2330      	movs	r3, #48	; 0x30
 800d07a:	3130      	adds	r1, #48	; 0x30
 800d07c:	7083      	strb	r3, [r0, #2]
 800d07e:	70c1      	strb	r1, [r0, #3]
 800d080:	1d03      	adds	r3, r0, #4
 800d082:	e7f1      	b.n	800d068 <__exponent+0x60>

0800d084 <_printf_float>:
 800d084:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d088:	ed2d 8b02 	vpush	{d8}
 800d08c:	b08d      	sub	sp, #52	; 0x34
 800d08e:	460c      	mov	r4, r1
 800d090:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 800d094:	4616      	mov	r6, r2
 800d096:	461f      	mov	r7, r3
 800d098:	4605      	mov	r5, r0
 800d09a:	f001 fa57 	bl	800e54c <_localeconv_r>
 800d09e:	f8d0 a000 	ldr.w	sl, [r0]
 800d0a2:	4650      	mov	r0, sl
 800d0a4:	f7f3 f8b4 	bl	8000210 <strlen>
 800d0a8:	2300      	movs	r3, #0
 800d0aa:	930a      	str	r3, [sp, #40]	; 0x28
 800d0ac:	6823      	ldr	r3, [r4, #0]
 800d0ae:	9305      	str	r3, [sp, #20]
 800d0b0:	f8d8 3000 	ldr.w	r3, [r8]
 800d0b4:	f894 b018 	ldrb.w	fp, [r4, #24]
 800d0b8:	3307      	adds	r3, #7
 800d0ba:	f023 0307 	bic.w	r3, r3, #7
 800d0be:	f103 0208 	add.w	r2, r3, #8
 800d0c2:	f8c8 2000 	str.w	r2, [r8]
 800d0c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d0ca:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800d0ce:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 800d0d2:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800d0d6:	9307      	str	r3, [sp, #28]
 800d0d8:	f8cd 8018 	str.w	r8, [sp, #24]
 800d0dc:	ee08 0a10 	vmov	s16, r0
 800d0e0:	4b9f      	ldr	r3, [pc, #636]	; (800d360 <_printf_float+0x2dc>)
 800d0e2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800d0e6:	f04f 32ff 	mov.w	r2, #4294967295
 800d0ea:	f7f3 fd3f 	bl	8000b6c <__aeabi_dcmpun>
 800d0ee:	bb88      	cbnz	r0, 800d154 <_printf_float+0xd0>
 800d0f0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800d0f4:	4b9a      	ldr	r3, [pc, #616]	; (800d360 <_printf_float+0x2dc>)
 800d0f6:	f04f 32ff 	mov.w	r2, #4294967295
 800d0fa:	f7f3 fd19 	bl	8000b30 <__aeabi_dcmple>
 800d0fe:	bb48      	cbnz	r0, 800d154 <_printf_float+0xd0>
 800d100:	2200      	movs	r2, #0
 800d102:	2300      	movs	r3, #0
 800d104:	4640      	mov	r0, r8
 800d106:	4649      	mov	r1, r9
 800d108:	f7f3 fd08 	bl	8000b1c <__aeabi_dcmplt>
 800d10c:	b110      	cbz	r0, 800d114 <_printf_float+0x90>
 800d10e:	232d      	movs	r3, #45	; 0x2d
 800d110:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d114:	4b93      	ldr	r3, [pc, #588]	; (800d364 <_printf_float+0x2e0>)
 800d116:	4894      	ldr	r0, [pc, #592]	; (800d368 <_printf_float+0x2e4>)
 800d118:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 800d11c:	bf94      	ite	ls
 800d11e:	4698      	movls	r8, r3
 800d120:	4680      	movhi	r8, r0
 800d122:	2303      	movs	r3, #3
 800d124:	6123      	str	r3, [r4, #16]
 800d126:	9b05      	ldr	r3, [sp, #20]
 800d128:	f023 0204 	bic.w	r2, r3, #4
 800d12c:	6022      	str	r2, [r4, #0]
 800d12e:	f04f 0900 	mov.w	r9, #0
 800d132:	9700      	str	r7, [sp, #0]
 800d134:	4633      	mov	r3, r6
 800d136:	aa0b      	add	r2, sp, #44	; 0x2c
 800d138:	4621      	mov	r1, r4
 800d13a:	4628      	mov	r0, r5
 800d13c:	f000 f9d8 	bl	800d4f0 <_printf_common>
 800d140:	3001      	adds	r0, #1
 800d142:	f040 8090 	bne.w	800d266 <_printf_float+0x1e2>
 800d146:	f04f 30ff 	mov.w	r0, #4294967295
 800d14a:	b00d      	add	sp, #52	; 0x34
 800d14c:	ecbd 8b02 	vpop	{d8}
 800d150:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d154:	4642      	mov	r2, r8
 800d156:	464b      	mov	r3, r9
 800d158:	4640      	mov	r0, r8
 800d15a:	4649      	mov	r1, r9
 800d15c:	f7f3 fd06 	bl	8000b6c <__aeabi_dcmpun>
 800d160:	b140      	cbz	r0, 800d174 <_printf_float+0xf0>
 800d162:	464b      	mov	r3, r9
 800d164:	2b00      	cmp	r3, #0
 800d166:	bfbc      	itt	lt
 800d168:	232d      	movlt	r3, #45	; 0x2d
 800d16a:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800d16e:	487f      	ldr	r0, [pc, #508]	; (800d36c <_printf_float+0x2e8>)
 800d170:	4b7f      	ldr	r3, [pc, #508]	; (800d370 <_printf_float+0x2ec>)
 800d172:	e7d1      	b.n	800d118 <_printf_float+0x94>
 800d174:	6863      	ldr	r3, [r4, #4]
 800d176:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 800d17a:	9206      	str	r2, [sp, #24]
 800d17c:	1c5a      	adds	r2, r3, #1
 800d17e:	d13f      	bne.n	800d200 <_printf_float+0x17c>
 800d180:	2306      	movs	r3, #6
 800d182:	6063      	str	r3, [r4, #4]
 800d184:	9b05      	ldr	r3, [sp, #20]
 800d186:	6861      	ldr	r1, [r4, #4]
 800d188:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 800d18c:	2300      	movs	r3, #0
 800d18e:	9303      	str	r3, [sp, #12]
 800d190:	ab0a      	add	r3, sp, #40	; 0x28
 800d192:	e9cd b301 	strd	fp, r3, [sp, #4]
 800d196:	ab09      	add	r3, sp, #36	; 0x24
 800d198:	ec49 8b10 	vmov	d0, r8, r9
 800d19c:	9300      	str	r3, [sp, #0]
 800d19e:	6022      	str	r2, [r4, #0]
 800d1a0:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 800d1a4:	4628      	mov	r0, r5
 800d1a6:	f7ff fecd 	bl	800cf44 <__cvt>
 800d1aa:	9b06      	ldr	r3, [sp, #24]
 800d1ac:	9909      	ldr	r1, [sp, #36]	; 0x24
 800d1ae:	2b47      	cmp	r3, #71	; 0x47
 800d1b0:	4680      	mov	r8, r0
 800d1b2:	d108      	bne.n	800d1c6 <_printf_float+0x142>
 800d1b4:	1cc8      	adds	r0, r1, #3
 800d1b6:	db02      	blt.n	800d1be <_printf_float+0x13a>
 800d1b8:	6863      	ldr	r3, [r4, #4]
 800d1ba:	4299      	cmp	r1, r3
 800d1bc:	dd41      	ble.n	800d242 <_printf_float+0x1be>
 800d1be:	f1ab 0b02 	sub.w	fp, fp, #2
 800d1c2:	fa5f fb8b 	uxtb.w	fp, fp
 800d1c6:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800d1ca:	d820      	bhi.n	800d20e <_printf_float+0x18a>
 800d1cc:	3901      	subs	r1, #1
 800d1ce:	465a      	mov	r2, fp
 800d1d0:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800d1d4:	9109      	str	r1, [sp, #36]	; 0x24
 800d1d6:	f7ff ff17 	bl	800d008 <__exponent>
 800d1da:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d1dc:	1813      	adds	r3, r2, r0
 800d1de:	2a01      	cmp	r2, #1
 800d1e0:	4681      	mov	r9, r0
 800d1e2:	6123      	str	r3, [r4, #16]
 800d1e4:	dc02      	bgt.n	800d1ec <_printf_float+0x168>
 800d1e6:	6822      	ldr	r2, [r4, #0]
 800d1e8:	07d2      	lsls	r2, r2, #31
 800d1ea:	d501      	bpl.n	800d1f0 <_printf_float+0x16c>
 800d1ec:	3301      	adds	r3, #1
 800d1ee:	6123      	str	r3, [r4, #16]
 800d1f0:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 800d1f4:	2b00      	cmp	r3, #0
 800d1f6:	d09c      	beq.n	800d132 <_printf_float+0xae>
 800d1f8:	232d      	movs	r3, #45	; 0x2d
 800d1fa:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d1fe:	e798      	b.n	800d132 <_printf_float+0xae>
 800d200:	9a06      	ldr	r2, [sp, #24]
 800d202:	2a47      	cmp	r2, #71	; 0x47
 800d204:	d1be      	bne.n	800d184 <_printf_float+0x100>
 800d206:	2b00      	cmp	r3, #0
 800d208:	d1bc      	bne.n	800d184 <_printf_float+0x100>
 800d20a:	2301      	movs	r3, #1
 800d20c:	e7b9      	b.n	800d182 <_printf_float+0xfe>
 800d20e:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 800d212:	d118      	bne.n	800d246 <_printf_float+0x1c2>
 800d214:	2900      	cmp	r1, #0
 800d216:	6863      	ldr	r3, [r4, #4]
 800d218:	dd0b      	ble.n	800d232 <_printf_float+0x1ae>
 800d21a:	6121      	str	r1, [r4, #16]
 800d21c:	b913      	cbnz	r3, 800d224 <_printf_float+0x1a0>
 800d21e:	6822      	ldr	r2, [r4, #0]
 800d220:	07d0      	lsls	r0, r2, #31
 800d222:	d502      	bpl.n	800d22a <_printf_float+0x1a6>
 800d224:	3301      	adds	r3, #1
 800d226:	440b      	add	r3, r1
 800d228:	6123      	str	r3, [r4, #16]
 800d22a:	65a1      	str	r1, [r4, #88]	; 0x58
 800d22c:	f04f 0900 	mov.w	r9, #0
 800d230:	e7de      	b.n	800d1f0 <_printf_float+0x16c>
 800d232:	b913      	cbnz	r3, 800d23a <_printf_float+0x1b6>
 800d234:	6822      	ldr	r2, [r4, #0]
 800d236:	07d2      	lsls	r2, r2, #31
 800d238:	d501      	bpl.n	800d23e <_printf_float+0x1ba>
 800d23a:	3302      	adds	r3, #2
 800d23c:	e7f4      	b.n	800d228 <_printf_float+0x1a4>
 800d23e:	2301      	movs	r3, #1
 800d240:	e7f2      	b.n	800d228 <_printf_float+0x1a4>
 800d242:	f04f 0b67 	mov.w	fp, #103	; 0x67
 800d246:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d248:	4299      	cmp	r1, r3
 800d24a:	db05      	blt.n	800d258 <_printf_float+0x1d4>
 800d24c:	6823      	ldr	r3, [r4, #0]
 800d24e:	6121      	str	r1, [r4, #16]
 800d250:	07d8      	lsls	r0, r3, #31
 800d252:	d5ea      	bpl.n	800d22a <_printf_float+0x1a6>
 800d254:	1c4b      	adds	r3, r1, #1
 800d256:	e7e7      	b.n	800d228 <_printf_float+0x1a4>
 800d258:	2900      	cmp	r1, #0
 800d25a:	bfd4      	ite	le
 800d25c:	f1c1 0202 	rsble	r2, r1, #2
 800d260:	2201      	movgt	r2, #1
 800d262:	4413      	add	r3, r2
 800d264:	e7e0      	b.n	800d228 <_printf_float+0x1a4>
 800d266:	6823      	ldr	r3, [r4, #0]
 800d268:	055a      	lsls	r2, r3, #21
 800d26a:	d407      	bmi.n	800d27c <_printf_float+0x1f8>
 800d26c:	6923      	ldr	r3, [r4, #16]
 800d26e:	4642      	mov	r2, r8
 800d270:	4631      	mov	r1, r6
 800d272:	4628      	mov	r0, r5
 800d274:	47b8      	blx	r7
 800d276:	3001      	adds	r0, #1
 800d278:	d12c      	bne.n	800d2d4 <_printf_float+0x250>
 800d27a:	e764      	b.n	800d146 <_printf_float+0xc2>
 800d27c:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800d280:	f240 80e0 	bls.w	800d444 <_printf_float+0x3c0>
 800d284:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800d288:	2200      	movs	r2, #0
 800d28a:	2300      	movs	r3, #0
 800d28c:	f7f3 fc3c 	bl	8000b08 <__aeabi_dcmpeq>
 800d290:	2800      	cmp	r0, #0
 800d292:	d034      	beq.n	800d2fe <_printf_float+0x27a>
 800d294:	4a37      	ldr	r2, [pc, #220]	; (800d374 <_printf_float+0x2f0>)
 800d296:	2301      	movs	r3, #1
 800d298:	4631      	mov	r1, r6
 800d29a:	4628      	mov	r0, r5
 800d29c:	47b8      	blx	r7
 800d29e:	3001      	adds	r0, #1
 800d2a0:	f43f af51 	beq.w	800d146 <_printf_float+0xc2>
 800d2a4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800d2a8:	429a      	cmp	r2, r3
 800d2aa:	db02      	blt.n	800d2b2 <_printf_float+0x22e>
 800d2ac:	6823      	ldr	r3, [r4, #0]
 800d2ae:	07d8      	lsls	r0, r3, #31
 800d2b0:	d510      	bpl.n	800d2d4 <_printf_float+0x250>
 800d2b2:	ee18 3a10 	vmov	r3, s16
 800d2b6:	4652      	mov	r2, sl
 800d2b8:	4631      	mov	r1, r6
 800d2ba:	4628      	mov	r0, r5
 800d2bc:	47b8      	blx	r7
 800d2be:	3001      	adds	r0, #1
 800d2c0:	f43f af41 	beq.w	800d146 <_printf_float+0xc2>
 800d2c4:	f04f 0800 	mov.w	r8, #0
 800d2c8:	f104 091a 	add.w	r9, r4, #26
 800d2cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d2ce:	3b01      	subs	r3, #1
 800d2d0:	4543      	cmp	r3, r8
 800d2d2:	dc09      	bgt.n	800d2e8 <_printf_float+0x264>
 800d2d4:	6823      	ldr	r3, [r4, #0]
 800d2d6:	079b      	lsls	r3, r3, #30
 800d2d8:	f100 8105 	bmi.w	800d4e6 <_printf_float+0x462>
 800d2dc:	68e0      	ldr	r0, [r4, #12]
 800d2de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d2e0:	4298      	cmp	r0, r3
 800d2e2:	bfb8      	it	lt
 800d2e4:	4618      	movlt	r0, r3
 800d2e6:	e730      	b.n	800d14a <_printf_float+0xc6>
 800d2e8:	2301      	movs	r3, #1
 800d2ea:	464a      	mov	r2, r9
 800d2ec:	4631      	mov	r1, r6
 800d2ee:	4628      	mov	r0, r5
 800d2f0:	47b8      	blx	r7
 800d2f2:	3001      	adds	r0, #1
 800d2f4:	f43f af27 	beq.w	800d146 <_printf_float+0xc2>
 800d2f8:	f108 0801 	add.w	r8, r8, #1
 800d2fc:	e7e6      	b.n	800d2cc <_printf_float+0x248>
 800d2fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d300:	2b00      	cmp	r3, #0
 800d302:	dc39      	bgt.n	800d378 <_printf_float+0x2f4>
 800d304:	4a1b      	ldr	r2, [pc, #108]	; (800d374 <_printf_float+0x2f0>)
 800d306:	2301      	movs	r3, #1
 800d308:	4631      	mov	r1, r6
 800d30a:	4628      	mov	r0, r5
 800d30c:	47b8      	blx	r7
 800d30e:	3001      	adds	r0, #1
 800d310:	f43f af19 	beq.w	800d146 <_printf_float+0xc2>
 800d314:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800d318:	4313      	orrs	r3, r2
 800d31a:	d102      	bne.n	800d322 <_printf_float+0x29e>
 800d31c:	6823      	ldr	r3, [r4, #0]
 800d31e:	07d9      	lsls	r1, r3, #31
 800d320:	d5d8      	bpl.n	800d2d4 <_printf_float+0x250>
 800d322:	ee18 3a10 	vmov	r3, s16
 800d326:	4652      	mov	r2, sl
 800d328:	4631      	mov	r1, r6
 800d32a:	4628      	mov	r0, r5
 800d32c:	47b8      	blx	r7
 800d32e:	3001      	adds	r0, #1
 800d330:	f43f af09 	beq.w	800d146 <_printf_float+0xc2>
 800d334:	f04f 0900 	mov.w	r9, #0
 800d338:	f104 0a1a 	add.w	sl, r4, #26
 800d33c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d33e:	425b      	negs	r3, r3
 800d340:	454b      	cmp	r3, r9
 800d342:	dc01      	bgt.n	800d348 <_printf_float+0x2c4>
 800d344:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d346:	e792      	b.n	800d26e <_printf_float+0x1ea>
 800d348:	2301      	movs	r3, #1
 800d34a:	4652      	mov	r2, sl
 800d34c:	4631      	mov	r1, r6
 800d34e:	4628      	mov	r0, r5
 800d350:	47b8      	blx	r7
 800d352:	3001      	adds	r0, #1
 800d354:	f43f aef7 	beq.w	800d146 <_printf_float+0xc2>
 800d358:	f109 0901 	add.w	r9, r9, #1
 800d35c:	e7ee      	b.n	800d33c <_printf_float+0x2b8>
 800d35e:	bf00      	nop
 800d360:	7fefffff 	.word	0x7fefffff
 800d364:	08011328 	.word	0x08011328
 800d368:	0801132c 	.word	0x0801132c
 800d36c:	08011334 	.word	0x08011334
 800d370:	08011330 	.word	0x08011330
 800d374:	08011338 	.word	0x08011338
 800d378:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d37a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800d37c:	429a      	cmp	r2, r3
 800d37e:	bfa8      	it	ge
 800d380:	461a      	movge	r2, r3
 800d382:	2a00      	cmp	r2, #0
 800d384:	4691      	mov	r9, r2
 800d386:	dc37      	bgt.n	800d3f8 <_printf_float+0x374>
 800d388:	f04f 0b00 	mov.w	fp, #0
 800d38c:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800d390:	f104 021a 	add.w	r2, r4, #26
 800d394:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800d396:	9305      	str	r3, [sp, #20]
 800d398:	eba3 0309 	sub.w	r3, r3, r9
 800d39c:	455b      	cmp	r3, fp
 800d39e:	dc33      	bgt.n	800d408 <_printf_float+0x384>
 800d3a0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800d3a4:	429a      	cmp	r2, r3
 800d3a6:	db3b      	blt.n	800d420 <_printf_float+0x39c>
 800d3a8:	6823      	ldr	r3, [r4, #0]
 800d3aa:	07da      	lsls	r2, r3, #31
 800d3ac:	d438      	bmi.n	800d420 <_printf_float+0x39c>
 800d3ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d3b0:	9a05      	ldr	r2, [sp, #20]
 800d3b2:	9909      	ldr	r1, [sp, #36]	; 0x24
 800d3b4:	1a9a      	subs	r2, r3, r2
 800d3b6:	eba3 0901 	sub.w	r9, r3, r1
 800d3ba:	4591      	cmp	r9, r2
 800d3bc:	bfa8      	it	ge
 800d3be:	4691      	movge	r9, r2
 800d3c0:	f1b9 0f00 	cmp.w	r9, #0
 800d3c4:	dc35      	bgt.n	800d432 <_printf_float+0x3ae>
 800d3c6:	f04f 0800 	mov.w	r8, #0
 800d3ca:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800d3ce:	f104 0a1a 	add.w	sl, r4, #26
 800d3d2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800d3d6:	1a9b      	subs	r3, r3, r2
 800d3d8:	eba3 0309 	sub.w	r3, r3, r9
 800d3dc:	4543      	cmp	r3, r8
 800d3de:	f77f af79 	ble.w	800d2d4 <_printf_float+0x250>
 800d3e2:	2301      	movs	r3, #1
 800d3e4:	4652      	mov	r2, sl
 800d3e6:	4631      	mov	r1, r6
 800d3e8:	4628      	mov	r0, r5
 800d3ea:	47b8      	blx	r7
 800d3ec:	3001      	adds	r0, #1
 800d3ee:	f43f aeaa 	beq.w	800d146 <_printf_float+0xc2>
 800d3f2:	f108 0801 	add.w	r8, r8, #1
 800d3f6:	e7ec      	b.n	800d3d2 <_printf_float+0x34e>
 800d3f8:	4613      	mov	r3, r2
 800d3fa:	4631      	mov	r1, r6
 800d3fc:	4642      	mov	r2, r8
 800d3fe:	4628      	mov	r0, r5
 800d400:	47b8      	blx	r7
 800d402:	3001      	adds	r0, #1
 800d404:	d1c0      	bne.n	800d388 <_printf_float+0x304>
 800d406:	e69e      	b.n	800d146 <_printf_float+0xc2>
 800d408:	2301      	movs	r3, #1
 800d40a:	4631      	mov	r1, r6
 800d40c:	4628      	mov	r0, r5
 800d40e:	9205      	str	r2, [sp, #20]
 800d410:	47b8      	blx	r7
 800d412:	3001      	adds	r0, #1
 800d414:	f43f ae97 	beq.w	800d146 <_printf_float+0xc2>
 800d418:	9a05      	ldr	r2, [sp, #20]
 800d41a:	f10b 0b01 	add.w	fp, fp, #1
 800d41e:	e7b9      	b.n	800d394 <_printf_float+0x310>
 800d420:	ee18 3a10 	vmov	r3, s16
 800d424:	4652      	mov	r2, sl
 800d426:	4631      	mov	r1, r6
 800d428:	4628      	mov	r0, r5
 800d42a:	47b8      	blx	r7
 800d42c:	3001      	adds	r0, #1
 800d42e:	d1be      	bne.n	800d3ae <_printf_float+0x32a>
 800d430:	e689      	b.n	800d146 <_printf_float+0xc2>
 800d432:	9a05      	ldr	r2, [sp, #20]
 800d434:	464b      	mov	r3, r9
 800d436:	4442      	add	r2, r8
 800d438:	4631      	mov	r1, r6
 800d43a:	4628      	mov	r0, r5
 800d43c:	47b8      	blx	r7
 800d43e:	3001      	adds	r0, #1
 800d440:	d1c1      	bne.n	800d3c6 <_printf_float+0x342>
 800d442:	e680      	b.n	800d146 <_printf_float+0xc2>
 800d444:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d446:	2a01      	cmp	r2, #1
 800d448:	dc01      	bgt.n	800d44e <_printf_float+0x3ca>
 800d44a:	07db      	lsls	r3, r3, #31
 800d44c:	d538      	bpl.n	800d4c0 <_printf_float+0x43c>
 800d44e:	2301      	movs	r3, #1
 800d450:	4642      	mov	r2, r8
 800d452:	4631      	mov	r1, r6
 800d454:	4628      	mov	r0, r5
 800d456:	47b8      	blx	r7
 800d458:	3001      	adds	r0, #1
 800d45a:	f43f ae74 	beq.w	800d146 <_printf_float+0xc2>
 800d45e:	ee18 3a10 	vmov	r3, s16
 800d462:	4652      	mov	r2, sl
 800d464:	4631      	mov	r1, r6
 800d466:	4628      	mov	r0, r5
 800d468:	47b8      	blx	r7
 800d46a:	3001      	adds	r0, #1
 800d46c:	f43f ae6b 	beq.w	800d146 <_printf_float+0xc2>
 800d470:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800d474:	2200      	movs	r2, #0
 800d476:	2300      	movs	r3, #0
 800d478:	f7f3 fb46 	bl	8000b08 <__aeabi_dcmpeq>
 800d47c:	b9d8      	cbnz	r0, 800d4b6 <_printf_float+0x432>
 800d47e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d480:	f108 0201 	add.w	r2, r8, #1
 800d484:	3b01      	subs	r3, #1
 800d486:	4631      	mov	r1, r6
 800d488:	4628      	mov	r0, r5
 800d48a:	47b8      	blx	r7
 800d48c:	3001      	adds	r0, #1
 800d48e:	d10e      	bne.n	800d4ae <_printf_float+0x42a>
 800d490:	e659      	b.n	800d146 <_printf_float+0xc2>
 800d492:	2301      	movs	r3, #1
 800d494:	4652      	mov	r2, sl
 800d496:	4631      	mov	r1, r6
 800d498:	4628      	mov	r0, r5
 800d49a:	47b8      	blx	r7
 800d49c:	3001      	adds	r0, #1
 800d49e:	f43f ae52 	beq.w	800d146 <_printf_float+0xc2>
 800d4a2:	f108 0801 	add.w	r8, r8, #1
 800d4a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d4a8:	3b01      	subs	r3, #1
 800d4aa:	4543      	cmp	r3, r8
 800d4ac:	dcf1      	bgt.n	800d492 <_printf_float+0x40e>
 800d4ae:	464b      	mov	r3, r9
 800d4b0:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800d4b4:	e6dc      	b.n	800d270 <_printf_float+0x1ec>
 800d4b6:	f04f 0800 	mov.w	r8, #0
 800d4ba:	f104 0a1a 	add.w	sl, r4, #26
 800d4be:	e7f2      	b.n	800d4a6 <_printf_float+0x422>
 800d4c0:	2301      	movs	r3, #1
 800d4c2:	4642      	mov	r2, r8
 800d4c4:	e7df      	b.n	800d486 <_printf_float+0x402>
 800d4c6:	2301      	movs	r3, #1
 800d4c8:	464a      	mov	r2, r9
 800d4ca:	4631      	mov	r1, r6
 800d4cc:	4628      	mov	r0, r5
 800d4ce:	47b8      	blx	r7
 800d4d0:	3001      	adds	r0, #1
 800d4d2:	f43f ae38 	beq.w	800d146 <_printf_float+0xc2>
 800d4d6:	f108 0801 	add.w	r8, r8, #1
 800d4da:	68e3      	ldr	r3, [r4, #12]
 800d4dc:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800d4de:	1a5b      	subs	r3, r3, r1
 800d4e0:	4543      	cmp	r3, r8
 800d4e2:	dcf0      	bgt.n	800d4c6 <_printf_float+0x442>
 800d4e4:	e6fa      	b.n	800d2dc <_printf_float+0x258>
 800d4e6:	f04f 0800 	mov.w	r8, #0
 800d4ea:	f104 0919 	add.w	r9, r4, #25
 800d4ee:	e7f4      	b.n	800d4da <_printf_float+0x456>

0800d4f0 <_printf_common>:
 800d4f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d4f4:	4616      	mov	r6, r2
 800d4f6:	4699      	mov	r9, r3
 800d4f8:	688a      	ldr	r2, [r1, #8]
 800d4fa:	690b      	ldr	r3, [r1, #16]
 800d4fc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800d500:	4293      	cmp	r3, r2
 800d502:	bfb8      	it	lt
 800d504:	4613      	movlt	r3, r2
 800d506:	6033      	str	r3, [r6, #0]
 800d508:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800d50c:	4607      	mov	r7, r0
 800d50e:	460c      	mov	r4, r1
 800d510:	b10a      	cbz	r2, 800d516 <_printf_common+0x26>
 800d512:	3301      	adds	r3, #1
 800d514:	6033      	str	r3, [r6, #0]
 800d516:	6823      	ldr	r3, [r4, #0]
 800d518:	0699      	lsls	r1, r3, #26
 800d51a:	bf42      	ittt	mi
 800d51c:	6833      	ldrmi	r3, [r6, #0]
 800d51e:	3302      	addmi	r3, #2
 800d520:	6033      	strmi	r3, [r6, #0]
 800d522:	6825      	ldr	r5, [r4, #0]
 800d524:	f015 0506 	ands.w	r5, r5, #6
 800d528:	d106      	bne.n	800d538 <_printf_common+0x48>
 800d52a:	f104 0a19 	add.w	sl, r4, #25
 800d52e:	68e3      	ldr	r3, [r4, #12]
 800d530:	6832      	ldr	r2, [r6, #0]
 800d532:	1a9b      	subs	r3, r3, r2
 800d534:	42ab      	cmp	r3, r5
 800d536:	dc26      	bgt.n	800d586 <_printf_common+0x96>
 800d538:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800d53c:	1e13      	subs	r3, r2, #0
 800d53e:	6822      	ldr	r2, [r4, #0]
 800d540:	bf18      	it	ne
 800d542:	2301      	movne	r3, #1
 800d544:	0692      	lsls	r2, r2, #26
 800d546:	d42b      	bmi.n	800d5a0 <_printf_common+0xb0>
 800d548:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800d54c:	4649      	mov	r1, r9
 800d54e:	4638      	mov	r0, r7
 800d550:	47c0      	blx	r8
 800d552:	3001      	adds	r0, #1
 800d554:	d01e      	beq.n	800d594 <_printf_common+0xa4>
 800d556:	6823      	ldr	r3, [r4, #0]
 800d558:	68e5      	ldr	r5, [r4, #12]
 800d55a:	6832      	ldr	r2, [r6, #0]
 800d55c:	f003 0306 	and.w	r3, r3, #6
 800d560:	2b04      	cmp	r3, #4
 800d562:	bf08      	it	eq
 800d564:	1aad      	subeq	r5, r5, r2
 800d566:	68a3      	ldr	r3, [r4, #8]
 800d568:	6922      	ldr	r2, [r4, #16]
 800d56a:	bf0c      	ite	eq
 800d56c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800d570:	2500      	movne	r5, #0
 800d572:	4293      	cmp	r3, r2
 800d574:	bfc4      	itt	gt
 800d576:	1a9b      	subgt	r3, r3, r2
 800d578:	18ed      	addgt	r5, r5, r3
 800d57a:	2600      	movs	r6, #0
 800d57c:	341a      	adds	r4, #26
 800d57e:	42b5      	cmp	r5, r6
 800d580:	d11a      	bne.n	800d5b8 <_printf_common+0xc8>
 800d582:	2000      	movs	r0, #0
 800d584:	e008      	b.n	800d598 <_printf_common+0xa8>
 800d586:	2301      	movs	r3, #1
 800d588:	4652      	mov	r2, sl
 800d58a:	4649      	mov	r1, r9
 800d58c:	4638      	mov	r0, r7
 800d58e:	47c0      	blx	r8
 800d590:	3001      	adds	r0, #1
 800d592:	d103      	bne.n	800d59c <_printf_common+0xac>
 800d594:	f04f 30ff 	mov.w	r0, #4294967295
 800d598:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d59c:	3501      	adds	r5, #1
 800d59e:	e7c6      	b.n	800d52e <_printf_common+0x3e>
 800d5a0:	18e1      	adds	r1, r4, r3
 800d5a2:	1c5a      	adds	r2, r3, #1
 800d5a4:	2030      	movs	r0, #48	; 0x30
 800d5a6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800d5aa:	4422      	add	r2, r4
 800d5ac:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800d5b0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800d5b4:	3302      	adds	r3, #2
 800d5b6:	e7c7      	b.n	800d548 <_printf_common+0x58>
 800d5b8:	2301      	movs	r3, #1
 800d5ba:	4622      	mov	r2, r4
 800d5bc:	4649      	mov	r1, r9
 800d5be:	4638      	mov	r0, r7
 800d5c0:	47c0      	blx	r8
 800d5c2:	3001      	adds	r0, #1
 800d5c4:	d0e6      	beq.n	800d594 <_printf_common+0xa4>
 800d5c6:	3601      	adds	r6, #1
 800d5c8:	e7d9      	b.n	800d57e <_printf_common+0x8e>
	...

0800d5cc <_printf_i>:
 800d5cc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800d5d0:	7e0f      	ldrb	r7, [r1, #24]
 800d5d2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800d5d4:	2f78      	cmp	r7, #120	; 0x78
 800d5d6:	4691      	mov	r9, r2
 800d5d8:	4680      	mov	r8, r0
 800d5da:	460c      	mov	r4, r1
 800d5dc:	469a      	mov	sl, r3
 800d5de:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800d5e2:	d807      	bhi.n	800d5f4 <_printf_i+0x28>
 800d5e4:	2f62      	cmp	r7, #98	; 0x62
 800d5e6:	d80a      	bhi.n	800d5fe <_printf_i+0x32>
 800d5e8:	2f00      	cmp	r7, #0
 800d5ea:	f000 80d8 	beq.w	800d79e <_printf_i+0x1d2>
 800d5ee:	2f58      	cmp	r7, #88	; 0x58
 800d5f0:	f000 80a3 	beq.w	800d73a <_printf_i+0x16e>
 800d5f4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800d5f8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800d5fc:	e03a      	b.n	800d674 <_printf_i+0xa8>
 800d5fe:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800d602:	2b15      	cmp	r3, #21
 800d604:	d8f6      	bhi.n	800d5f4 <_printf_i+0x28>
 800d606:	a101      	add	r1, pc, #4	; (adr r1, 800d60c <_printf_i+0x40>)
 800d608:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800d60c:	0800d665 	.word	0x0800d665
 800d610:	0800d679 	.word	0x0800d679
 800d614:	0800d5f5 	.word	0x0800d5f5
 800d618:	0800d5f5 	.word	0x0800d5f5
 800d61c:	0800d5f5 	.word	0x0800d5f5
 800d620:	0800d5f5 	.word	0x0800d5f5
 800d624:	0800d679 	.word	0x0800d679
 800d628:	0800d5f5 	.word	0x0800d5f5
 800d62c:	0800d5f5 	.word	0x0800d5f5
 800d630:	0800d5f5 	.word	0x0800d5f5
 800d634:	0800d5f5 	.word	0x0800d5f5
 800d638:	0800d785 	.word	0x0800d785
 800d63c:	0800d6a9 	.word	0x0800d6a9
 800d640:	0800d767 	.word	0x0800d767
 800d644:	0800d5f5 	.word	0x0800d5f5
 800d648:	0800d5f5 	.word	0x0800d5f5
 800d64c:	0800d7a7 	.word	0x0800d7a7
 800d650:	0800d5f5 	.word	0x0800d5f5
 800d654:	0800d6a9 	.word	0x0800d6a9
 800d658:	0800d5f5 	.word	0x0800d5f5
 800d65c:	0800d5f5 	.word	0x0800d5f5
 800d660:	0800d76f 	.word	0x0800d76f
 800d664:	682b      	ldr	r3, [r5, #0]
 800d666:	1d1a      	adds	r2, r3, #4
 800d668:	681b      	ldr	r3, [r3, #0]
 800d66a:	602a      	str	r2, [r5, #0]
 800d66c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800d670:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800d674:	2301      	movs	r3, #1
 800d676:	e0a3      	b.n	800d7c0 <_printf_i+0x1f4>
 800d678:	6820      	ldr	r0, [r4, #0]
 800d67a:	6829      	ldr	r1, [r5, #0]
 800d67c:	0606      	lsls	r6, r0, #24
 800d67e:	f101 0304 	add.w	r3, r1, #4
 800d682:	d50a      	bpl.n	800d69a <_printf_i+0xce>
 800d684:	680e      	ldr	r6, [r1, #0]
 800d686:	602b      	str	r3, [r5, #0]
 800d688:	2e00      	cmp	r6, #0
 800d68a:	da03      	bge.n	800d694 <_printf_i+0xc8>
 800d68c:	232d      	movs	r3, #45	; 0x2d
 800d68e:	4276      	negs	r6, r6
 800d690:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d694:	485e      	ldr	r0, [pc, #376]	; (800d810 <_printf_i+0x244>)
 800d696:	230a      	movs	r3, #10
 800d698:	e019      	b.n	800d6ce <_printf_i+0x102>
 800d69a:	680e      	ldr	r6, [r1, #0]
 800d69c:	602b      	str	r3, [r5, #0]
 800d69e:	f010 0f40 	tst.w	r0, #64	; 0x40
 800d6a2:	bf18      	it	ne
 800d6a4:	b236      	sxthne	r6, r6
 800d6a6:	e7ef      	b.n	800d688 <_printf_i+0xbc>
 800d6a8:	682b      	ldr	r3, [r5, #0]
 800d6aa:	6820      	ldr	r0, [r4, #0]
 800d6ac:	1d19      	adds	r1, r3, #4
 800d6ae:	6029      	str	r1, [r5, #0]
 800d6b0:	0601      	lsls	r1, r0, #24
 800d6b2:	d501      	bpl.n	800d6b8 <_printf_i+0xec>
 800d6b4:	681e      	ldr	r6, [r3, #0]
 800d6b6:	e002      	b.n	800d6be <_printf_i+0xf2>
 800d6b8:	0646      	lsls	r6, r0, #25
 800d6ba:	d5fb      	bpl.n	800d6b4 <_printf_i+0xe8>
 800d6bc:	881e      	ldrh	r6, [r3, #0]
 800d6be:	4854      	ldr	r0, [pc, #336]	; (800d810 <_printf_i+0x244>)
 800d6c0:	2f6f      	cmp	r7, #111	; 0x6f
 800d6c2:	bf0c      	ite	eq
 800d6c4:	2308      	moveq	r3, #8
 800d6c6:	230a      	movne	r3, #10
 800d6c8:	2100      	movs	r1, #0
 800d6ca:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800d6ce:	6865      	ldr	r5, [r4, #4]
 800d6d0:	60a5      	str	r5, [r4, #8]
 800d6d2:	2d00      	cmp	r5, #0
 800d6d4:	bfa2      	ittt	ge
 800d6d6:	6821      	ldrge	r1, [r4, #0]
 800d6d8:	f021 0104 	bicge.w	r1, r1, #4
 800d6dc:	6021      	strge	r1, [r4, #0]
 800d6de:	b90e      	cbnz	r6, 800d6e4 <_printf_i+0x118>
 800d6e0:	2d00      	cmp	r5, #0
 800d6e2:	d04d      	beq.n	800d780 <_printf_i+0x1b4>
 800d6e4:	4615      	mov	r5, r2
 800d6e6:	fbb6 f1f3 	udiv	r1, r6, r3
 800d6ea:	fb03 6711 	mls	r7, r3, r1, r6
 800d6ee:	5dc7      	ldrb	r7, [r0, r7]
 800d6f0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800d6f4:	4637      	mov	r7, r6
 800d6f6:	42bb      	cmp	r3, r7
 800d6f8:	460e      	mov	r6, r1
 800d6fa:	d9f4      	bls.n	800d6e6 <_printf_i+0x11a>
 800d6fc:	2b08      	cmp	r3, #8
 800d6fe:	d10b      	bne.n	800d718 <_printf_i+0x14c>
 800d700:	6823      	ldr	r3, [r4, #0]
 800d702:	07de      	lsls	r6, r3, #31
 800d704:	d508      	bpl.n	800d718 <_printf_i+0x14c>
 800d706:	6923      	ldr	r3, [r4, #16]
 800d708:	6861      	ldr	r1, [r4, #4]
 800d70a:	4299      	cmp	r1, r3
 800d70c:	bfde      	ittt	le
 800d70e:	2330      	movle	r3, #48	; 0x30
 800d710:	f805 3c01 	strble.w	r3, [r5, #-1]
 800d714:	f105 35ff 	addle.w	r5, r5, #4294967295
 800d718:	1b52      	subs	r2, r2, r5
 800d71a:	6122      	str	r2, [r4, #16]
 800d71c:	f8cd a000 	str.w	sl, [sp]
 800d720:	464b      	mov	r3, r9
 800d722:	aa03      	add	r2, sp, #12
 800d724:	4621      	mov	r1, r4
 800d726:	4640      	mov	r0, r8
 800d728:	f7ff fee2 	bl	800d4f0 <_printf_common>
 800d72c:	3001      	adds	r0, #1
 800d72e:	d14c      	bne.n	800d7ca <_printf_i+0x1fe>
 800d730:	f04f 30ff 	mov.w	r0, #4294967295
 800d734:	b004      	add	sp, #16
 800d736:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d73a:	4835      	ldr	r0, [pc, #212]	; (800d810 <_printf_i+0x244>)
 800d73c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800d740:	6829      	ldr	r1, [r5, #0]
 800d742:	6823      	ldr	r3, [r4, #0]
 800d744:	f851 6b04 	ldr.w	r6, [r1], #4
 800d748:	6029      	str	r1, [r5, #0]
 800d74a:	061d      	lsls	r5, r3, #24
 800d74c:	d514      	bpl.n	800d778 <_printf_i+0x1ac>
 800d74e:	07df      	lsls	r7, r3, #31
 800d750:	bf44      	itt	mi
 800d752:	f043 0320 	orrmi.w	r3, r3, #32
 800d756:	6023      	strmi	r3, [r4, #0]
 800d758:	b91e      	cbnz	r6, 800d762 <_printf_i+0x196>
 800d75a:	6823      	ldr	r3, [r4, #0]
 800d75c:	f023 0320 	bic.w	r3, r3, #32
 800d760:	6023      	str	r3, [r4, #0]
 800d762:	2310      	movs	r3, #16
 800d764:	e7b0      	b.n	800d6c8 <_printf_i+0xfc>
 800d766:	6823      	ldr	r3, [r4, #0]
 800d768:	f043 0320 	orr.w	r3, r3, #32
 800d76c:	6023      	str	r3, [r4, #0]
 800d76e:	2378      	movs	r3, #120	; 0x78
 800d770:	4828      	ldr	r0, [pc, #160]	; (800d814 <_printf_i+0x248>)
 800d772:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800d776:	e7e3      	b.n	800d740 <_printf_i+0x174>
 800d778:	0659      	lsls	r1, r3, #25
 800d77a:	bf48      	it	mi
 800d77c:	b2b6      	uxthmi	r6, r6
 800d77e:	e7e6      	b.n	800d74e <_printf_i+0x182>
 800d780:	4615      	mov	r5, r2
 800d782:	e7bb      	b.n	800d6fc <_printf_i+0x130>
 800d784:	682b      	ldr	r3, [r5, #0]
 800d786:	6826      	ldr	r6, [r4, #0]
 800d788:	6961      	ldr	r1, [r4, #20]
 800d78a:	1d18      	adds	r0, r3, #4
 800d78c:	6028      	str	r0, [r5, #0]
 800d78e:	0635      	lsls	r5, r6, #24
 800d790:	681b      	ldr	r3, [r3, #0]
 800d792:	d501      	bpl.n	800d798 <_printf_i+0x1cc>
 800d794:	6019      	str	r1, [r3, #0]
 800d796:	e002      	b.n	800d79e <_printf_i+0x1d2>
 800d798:	0670      	lsls	r0, r6, #25
 800d79a:	d5fb      	bpl.n	800d794 <_printf_i+0x1c8>
 800d79c:	8019      	strh	r1, [r3, #0]
 800d79e:	2300      	movs	r3, #0
 800d7a0:	6123      	str	r3, [r4, #16]
 800d7a2:	4615      	mov	r5, r2
 800d7a4:	e7ba      	b.n	800d71c <_printf_i+0x150>
 800d7a6:	682b      	ldr	r3, [r5, #0]
 800d7a8:	1d1a      	adds	r2, r3, #4
 800d7aa:	602a      	str	r2, [r5, #0]
 800d7ac:	681d      	ldr	r5, [r3, #0]
 800d7ae:	6862      	ldr	r2, [r4, #4]
 800d7b0:	2100      	movs	r1, #0
 800d7b2:	4628      	mov	r0, r5
 800d7b4:	f7f2 fd34 	bl	8000220 <memchr>
 800d7b8:	b108      	cbz	r0, 800d7be <_printf_i+0x1f2>
 800d7ba:	1b40      	subs	r0, r0, r5
 800d7bc:	6060      	str	r0, [r4, #4]
 800d7be:	6863      	ldr	r3, [r4, #4]
 800d7c0:	6123      	str	r3, [r4, #16]
 800d7c2:	2300      	movs	r3, #0
 800d7c4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d7c8:	e7a8      	b.n	800d71c <_printf_i+0x150>
 800d7ca:	6923      	ldr	r3, [r4, #16]
 800d7cc:	462a      	mov	r2, r5
 800d7ce:	4649      	mov	r1, r9
 800d7d0:	4640      	mov	r0, r8
 800d7d2:	47d0      	blx	sl
 800d7d4:	3001      	adds	r0, #1
 800d7d6:	d0ab      	beq.n	800d730 <_printf_i+0x164>
 800d7d8:	6823      	ldr	r3, [r4, #0]
 800d7da:	079b      	lsls	r3, r3, #30
 800d7dc:	d413      	bmi.n	800d806 <_printf_i+0x23a>
 800d7de:	68e0      	ldr	r0, [r4, #12]
 800d7e0:	9b03      	ldr	r3, [sp, #12]
 800d7e2:	4298      	cmp	r0, r3
 800d7e4:	bfb8      	it	lt
 800d7e6:	4618      	movlt	r0, r3
 800d7e8:	e7a4      	b.n	800d734 <_printf_i+0x168>
 800d7ea:	2301      	movs	r3, #1
 800d7ec:	4632      	mov	r2, r6
 800d7ee:	4649      	mov	r1, r9
 800d7f0:	4640      	mov	r0, r8
 800d7f2:	47d0      	blx	sl
 800d7f4:	3001      	adds	r0, #1
 800d7f6:	d09b      	beq.n	800d730 <_printf_i+0x164>
 800d7f8:	3501      	adds	r5, #1
 800d7fa:	68e3      	ldr	r3, [r4, #12]
 800d7fc:	9903      	ldr	r1, [sp, #12]
 800d7fe:	1a5b      	subs	r3, r3, r1
 800d800:	42ab      	cmp	r3, r5
 800d802:	dcf2      	bgt.n	800d7ea <_printf_i+0x21e>
 800d804:	e7eb      	b.n	800d7de <_printf_i+0x212>
 800d806:	2500      	movs	r5, #0
 800d808:	f104 0619 	add.w	r6, r4, #25
 800d80c:	e7f5      	b.n	800d7fa <_printf_i+0x22e>
 800d80e:	bf00      	nop
 800d810:	0801133a 	.word	0x0801133a
 800d814:	0801134b 	.word	0x0801134b

0800d818 <siprintf>:
 800d818:	b40e      	push	{r1, r2, r3}
 800d81a:	b500      	push	{lr}
 800d81c:	b09c      	sub	sp, #112	; 0x70
 800d81e:	ab1d      	add	r3, sp, #116	; 0x74
 800d820:	9002      	str	r0, [sp, #8]
 800d822:	9006      	str	r0, [sp, #24]
 800d824:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800d828:	4809      	ldr	r0, [pc, #36]	; (800d850 <siprintf+0x38>)
 800d82a:	9107      	str	r1, [sp, #28]
 800d82c:	9104      	str	r1, [sp, #16]
 800d82e:	4909      	ldr	r1, [pc, #36]	; (800d854 <siprintf+0x3c>)
 800d830:	f853 2b04 	ldr.w	r2, [r3], #4
 800d834:	9105      	str	r1, [sp, #20]
 800d836:	6800      	ldr	r0, [r0, #0]
 800d838:	9301      	str	r3, [sp, #4]
 800d83a:	a902      	add	r1, sp, #8
 800d83c:	f001 fb76 	bl	800ef2c <_svfiprintf_r>
 800d840:	9b02      	ldr	r3, [sp, #8]
 800d842:	2200      	movs	r2, #0
 800d844:	701a      	strb	r2, [r3, #0]
 800d846:	b01c      	add	sp, #112	; 0x70
 800d848:	f85d eb04 	ldr.w	lr, [sp], #4
 800d84c:	b003      	add	sp, #12
 800d84e:	4770      	bx	lr
 800d850:	20000140 	.word	0x20000140
 800d854:	ffff0208 	.word	0xffff0208

0800d858 <quorem>:
 800d858:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d85c:	6903      	ldr	r3, [r0, #16]
 800d85e:	690c      	ldr	r4, [r1, #16]
 800d860:	42a3      	cmp	r3, r4
 800d862:	4607      	mov	r7, r0
 800d864:	f2c0 8081 	blt.w	800d96a <quorem+0x112>
 800d868:	3c01      	subs	r4, #1
 800d86a:	f101 0814 	add.w	r8, r1, #20
 800d86e:	f100 0514 	add.w	r5, r0, #20
 800d872:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800d876:	9301      	str	r3, [sp, #4]
 800d878:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800d87c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800d880:	3301      	adds	r3, #1
 800d882:	429a      	cmp	r2, r3
 800d884:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800d888:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800d88c:	fbb2 f6f3 	udiv	r6, r2, r3
 800d890:	d331      	bcc.n	800d8f6 <quorem+0x9e>
 800d892:	f04f 0e00 	mov.w	lr, #0
 800d896:	4640      	mov	r0, r8
 800d898:	46ac      	mov	ip, r5
 800d89a:	46f2      	mov	sl, lr
 800d89c:	f850 2b04 	ldr.w	r2, [r0], #4
 800d8a0:	b293      	uxth	r3, r2
 800d8a2:	fb06 e303 	mla	r3, r6, r3, lr
 800d8a6:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800d8aa:	b29b      	uxth	r3, r3
 800d8ac:	ebaa 0303 	sub.w	r3, sl, r3
 800d8b0:	f8dc a000 	ldr.w	sl, [ip]
 800d8b4:	0c12      	lsrs	r2, r2, #16
 800d8b6:	fa13 f38a 	uxtah	r3, r3, sl
 800d8ba:	fb06 e202 	mla	r2, r6, r2, lr
 800d8be:	9300      	str	r3, [sp, #0]
 800d8c0:	9b00      	ldr	r3, [sp, #0]
 800d8c2:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800d8c6:	b292      	uxth	r2, r2
 800d8c8:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800d8cc:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800d8d0:	f8bd 3000 	ldrh.w	r3, [sp]
 800d8d4:	4581      	cmp	r9, r0
 800d8d6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800d8da:	f84c 3b04 	str.w	r3, [ip], #4
 800d8de:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800d8e2:	d2db      	bcs.n	800d89c <quorem+0x44>
 800d8e4:	f855 300b 	ldr.w	r3, [r5, fp]
 800d8e8:	b92b      	cbnz	r3, 800d8f6 <quorem+0x9e>
 800d8ea:	9b01      	ldr	r3, [sp, #4]
 800d8ec:	3b04      	subs	r3, #4
 800d8ee:	429d      	cmp	r5, r3
 800d8f0:	461a      	mov	r2, r3
 800d8f2:	d32e      	bcc.n	800d952 <quorem+0xfa>
 800d8f4:	613c      	str	r4, [r7, #16]
 800d8f6:	4638      	mov	r0, r7
 800d8f8:	f001 f8c4 	bl	800ea84 <__mcmp>
 800d8fc:	2800      	cmp	r0, #0
 800d8fe:	db24      	blt.n	800d94a <quorem+0xf2>
 800d900:	3601      	adds	r6, #1
 800d902:	4628      	mov	r0, r5
 800d904:	f04f 0c00 	mov.w	ip, #0
 800d908:	f858 2b04 	ldr.w	r2, [r8], #4
 800d90c:	f8d0 e000 	ldr.w	lr, [r0]
 800d910:	b293      	uxth	r3, r2
 800d912:	ebac 0303 	sub.w	r3, ip, r3
 800d916:	0c12      	lsrs	r2, r2, #16
 800d918:	fa13 f38e 	uxtah	r3, r3, lr
 800d91c:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800d920:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800d924:	b29b      	uxth	r3, r3
 800d926:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800d92a:	45c1      	cmp	r9, r8
 800d92c:	f840 3b04 	str.w	r3, [r0], #4
 800d930:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800d934:	d2e8      	bcs.n	800d908 <quorem+0xb0>
 800d936:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800d93a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800d93e:	b922      	cbnz	r2, 800d94a <quorem+0xf2>
 800d940:	3b04      	subs	r3, #4
 800d942:	429d      	cmp	r5, r3
 800d944:	461a      	mov	r2, r3
 800d946:	d30a      	bcc.n	800d95e <quorem+0x106>
 800d948:	613c      	str	r4, [r7, #16]
 800d94a:	4630      	mov	r0, r6
 800d94c:	b003      	add	sp, #12
 800d94e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d952:	6812      	ldr	r2, [r2, #0]
 800d954:	3b04      	subs	r3, #4
 800d956:	2a00      	cmp	r2, #0
 800d958:	d1cc      	bne.n	800d8f4 <quorem+0x9c>
 800d95a:	3c01      	subs	r4, #1
 800d95c:	e7c7      	b.n	800d8ee <quorem+0x96>
 800d95e:	6812      	ldr	r2, [r2, #0]
 800d960:	3b04      	subs	r3, #4
 800d962:	2a00      	cmp	r2, #0
 800d964:	d1f0      	bne.n	800d948 <quorem+0xf0>
 800d966:	3c01      	subs	r4, #1
 800d968:	e7eb      	b.n	800d942 <quorem+0xea>
 800d96a:	2000      	movs	r0, #0
 800d96c:	e7ee      	b.n	800d94c <quorem+0xf4>
	...

0800d970 <_dtoa_r>:
 800d970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d974:	ed2d 8b04 	vpush	{d8-d9}
 800d978:	ec57 6b10 	vmov	r6, r7, d0
 800d97c:	b093      	sub	sp, #76	; 0x4c
 800d97e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800d980:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 800d984:	9106      	str	r1, [sp, #24]
 800d986:	ee10 aa10 	vmov	sl, s0
 800d98a:	4604      	mov	r4, r0
 800d98c:	9209      	str	r2, [sp, #36]	; 0x24
 800d98e:	930c      	str	r3, [sp, #48]	; 0x30
 800d990:	46bb      	mov	fp, r7
 800d992:	b975      	cbnz	r5, 800d9b2 <_dtoa_r+0x42>
 800d994:	2010      	movs	r0, #16
 800d996:	f000 fddd 	bl	800e554 <malloc>
 800d99a:	4602      	mov	r2, r0
 800d99c:	6260      	str	r0, [r4, #36]	; 0x24
 800d99e:	b920      	cbnz	r0, 800d9aa <_dtoa_r+0x3a>
 800d9a0:	4ba7      	ldr	r3, [pc, #668]	; (800dc40 <_dtoa_r+0x2d0>)
 800d9a2:	21ea      	movs	r1, #234	; 0xea
 800d9a4:	48a7      	ldr	r0, [pc, #668]	; (800dc44 <_dtoa_r+0x2d4>)
 800d9a6:	f001 fbd1 	bl	800f14c <__assert_func>
 800d9aa:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800d9ae:	6005      	str	r5, [r0, #0]
 800d9b0:	60c5      	str	r5, [r0, #12]
 800d9b2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d9b4:	6819      	ldr	r1, [r3, #0]
 800d9b6:	b151      	cbz	r1, 800d9ce <_dtoa_r+0x5e>
 800d9b8:	685a      	ldr	r2, [r3, #4]
 800d9ba:	604a      	str	r2, [r1, #4]
 800d9bc:	2301      	movs	r3, #1
 800d9be:	4093      	lsls	r3, r2
 800d9c0:	608b      	str	r3, [r1, #8]
 800d9c2:	4620      	mov	r0, r4
 800d9c4:	f000 fe1c 	bl	800e600 <_Bfree>
 800d9c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d9ca:	2200      	movs	r2, #0
 800d9cc:	601a      	str	r2, [r3, #0]
 800d9ce:	1e3b      	subs	r3, r7, #0
 800d9d0:	bfaa      	itet	ge
 800d9d2:	2300      	movge	r3, #0
 800d9d4:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 800d9d8:	f8c8 3000 	strge.w	r3, [r8]
 800d9dc:	4b9a      	ldr	r3, [pc, #616]	; (800dc48 <_dtoa_r+0x2d8>)
 800d9de:	bfbc      	itt	lt
 800d9e0:	2201      	movlt	r2, #1
 800d9e2:	f8c8 2000 	strlt.w	r2, [r8]
 800d9e6:	ea33 030b 	bics.w	r3, r3, fp
 800d9ea:	d11b      	bne.n	800da24 <_dtoa_r+0xb4>
 800d9ec:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800d9ee:	f242 730f 	movw	r3, #9999	; 0x270f
 800d9f2:	6013      	str	r3, [r2, #0]
 800d9f4:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800d9f8:	4333      	orrs	r3, r6
 800d9fa:	f000 8592 	beq.w	800e522 <_dtoa_r+0xbb2>
 800d9fe:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800da00:	b963      	cbnz	r3, 800da1c <_dtoa_r+0xac>
 800da02:	4b92      	ldr	r3, [pc, #584]	; (800dc4c <_dtoa_r+0x2dc>)
 800da04:	e022      	b.n	800da4c <_dtoa_r+0xdc>
 800da06:	4b92      	ldr	r3, [pc, #584]	; (800dc50 <_dtoa_r+0x2e0>)
 800da08:	9301      	str	r3, [sp, #4]
 800da0a:	3308      	adds	r3, #8
 800da0c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800da0e:	6013      	str	r3, [r2, #0]
 800da10:	9801      	ldr	r0, [sp, #4]
 800da12:	b013      	add	sp, #76	; 0x4c
 800da14:	ecbd 8b04 	vpop	{d8-d9}
 800da18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da1c:	4b8b      	ldr	r3, [pc, #556]	; (800dc4c <_dtoa_r+0x2dc>)
 800da1e:	9301      	str	r3, [sp, #4]
 800da20:	3303      	adds	r3, #3
 800da22:	e7f3      	b.n	800da0c <_dtoa_r+0x9c>
 800da24:	2200      	movs	r2, #0
 800da26:	2300      	movs	r3, #0
 800da28:	4650      	mov	r0, sl
 800da2a:	4659      	mov	r1, fp
 800da2c:	f7f3 f86c 	bl	8000b08 <__aeabi_dcmpeq>
 800da30:	ec4b ab19 	vmov	d9, sl, fp
 800da34:	4680      	mov	r8, r0
 800da36:	b158      	cbz	r0, 800da50 <_dtoa_r+0xe0>
 800da38:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800da3a:	2301      	movs	r3, #1
 800da3c:	6013      	str	r3, [r2, #0]
 800da3e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800da40:	2b00      	cmp	r3, #0
 800da42:	f000 856b 	beq.w	800e51c <_dtoa_r+0xbac>
 800da46:	4883      	ldr	r0, [pc, #524]	; (800dc54 <_dtoa_r+0x2e4>)
 800da48:	6018      	str	r0, [r3, #0]
 800da4a:	1e43      	subs	r3, r0, #1
 800da4c:	9301      	str	r3, [sp, #4]
 800da4e:	e7df      	b.n	800da10 <_dtoa_r+0xa0>
 800da50:	ec4b ab10 	vmov	d0, sl, fp
 800da54:	aa10      	add	r2, sp, #64	; 0x40
 800da56:	a911      	add	r1, sp, #68	; 0x44
 800da58:	4620      	mov	r0, r4
 800da5a:	f001 f8b9 	bl	800ebd0 <__d2b>
 800da5e:	f3cb 550a 	ubfx	r5, fp, #20, #11
 800da62:	ee08 0a10 	vmov	s16, r0
 800da66:	2d00      	cmp	r5, #0
 800da68:	f000 8084 	beq.w	800db74 <_dtoa_r+0x204>
 800da6c:	ee19 3a90 	vmov	r3, s19
 800da70:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800da74:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 800da78:	4656      	mov	r6, sl
 800da7a:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 800da7e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800da82:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 800da86:	4b74      	ldr	r3, [pc, #464]	; (800dc58 <_dtoa_r+0x2e8>)
 800da88:	2200      	movs	r2, #0
 800da8a:	4630      	mov	r0, r6
 800da8c:	4639      	mov	r1, r7
 800da8e:	f7f2 fc1b 	bl	80002c8 <__aeabi_dsub>
 800da92:	a365      	add	r3, pc, #404	; (adr r3, 800dc28 <_dtoa_r+0x2b8>)
 800da94:	e9d3 2300 	ldrd	r2, r3, [r3]
 800da98:	f7f2 fdce 	bl	8000638 <__aeabi_dmul>
 800da9c:	a364      	add	r3, pc, #400	; (adr r3, 800dc30 <_dtoa_r+0x2c0>)
 800da9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800daa2:	f7f2 fc13 	bl	80002cc <__adddf3>
 800daa6:	4606      	mov	r6, r0
 800daa8:	4628      	mov	r0, r5
 800daaa:	460f      	mov	r7, r1
 800daac:	f7f2 fd5a 	bl	8000564 <__aeabi_i2d>
 800dab0:	a361      	add	r3, pc, #388	; (adr r3, 800dc38 <_dtoa_r+0x2c8>)
 800dab2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dab6:	f7f2 fdbf 	bl	8000638 <__aeabi_dmul>
 800daba:	4602      	mov	r2, r0
 800dabc:	460b      	mov	r3, r1
 800dabe:	4630      	mov	r0, r6
 800dac0:	4639      	mov	r1, r7
 800dac2:	f7f2 fc03 	bl	80002cc <__adddf3>
 800dac6:	4606      	mov	r6, r0
 800dac8:	460f      	mov	r7, r1
 800daca:	f7f3 f865 	bl	8000b98 <__aeabi_d2iz>
 800dace:	2200      	movs	r2, #0
 800dad0:	9000      	str	r0, [sp, #0]
 800dad2:	2300      	movs	r3, #0
 800dad4:	4630      	mov	r0, r6
 800dad6:	4639      	mov	r1, r7
 800dad8:	f7f3 f820 	bl	8000b1c <__aeabi_dcmplt>
 800dadc:	b150      	cbz	r0, 800daf4 <_dtoa_r+0x184>
 800dade:	9800      	ldr	r0, [sp, #0]
 800dae0:	f7f2 fd40 	bl	8000564 <__aeabi_i2d>
 800dae4:	4632      	mov	r2, r6
 800dae6:	463b      	mov	r3, r7
 800dae8:	f7f3 f80e 	bl	8000b08 <__aeabi_dcmpeq>
 800daec:	b910      	cbnz	r0, 800daf4 <_dtoa_r+0x184>
 800daee:	9b00      	ldr	r3, [sp, #0]
 800daf0:	3b01      	subs	r3, #1
 800daf2:	9300      	str	r3, [sp, #0]
 800daf4:	9b00      	ldr	r3, [sp, #0]
 800daf6:	2b16      	cmp	r3, #22
 800daf8:	d85a      	bhi.n	800dbb0 <_dtoa_r+0x240>
 800dafa:	9a00      	ldr	r2, [sp, #0]
 800dafc:	4b57      	ldr	r3, [pc, #348]	; (800dc5c <_dtoa_r+0x2ec>)
 800dafe:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800db02:	e9d3 2300 	ldrd	r2, r3, [r3]
 800db06:	ec51 0b19 	vmov	r0, r1, d9
 800db0a:	f7f3 f807 	bl	8000b1c <__aeabi_dcmplt>
 800db0e:	2800      	cmp	r0, #0
 800db10:	d050      	beq.n	800dbb4 <_dtoa_r+0x244>
 800db12:	9b00      	ldr	r3, [sp, #0]
 800db14:	3b01      	subs	r3, #1
 800db16:	9300      	str	r3, [sp, #0]
 800db18:	2300      	movs	r3, #0
 800db1a:	930b      	str	r3, [sp, #44]	; 0x2c
 800db1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800db1e:	1b5d      	subs	r5, r3, r5
 800db20:	1e6b      	subs	r3, r5, #1
 800db22:	9305      	str	r3, [sp, #20]
 800db24:	bf45      	ittet	mi
 800db26:	f1c5 0301 	rsbmi	r3, r5, #1
 800db2a:	9304      	strmi	r3, [sp, #16]
 800db2c:	2300      	movpl	r3, #0
 800db2e:	2300      	movmi	r3, #0
 800db30:	bf4c      	ite	mi
 800db32:	9305      	strmi	r3, [sp, #20]
 800db34:	9304      	strpl	r3, [sp, #16]
 800db36:	9b00      	ldr	r3, [sp, #0]
 800db38:	2b00      	cmp	r3, #0
 800db3a:	db3d      	blt.n	800dbb8 <_dtoa_r+0x248>
 800db3c:	9b05      	ldr	r3, [sp, #20]
 800db3e:	9a00      	ldr	r2, [sp, #0]
 800db40:	920a      	str	r2, [sp, #40]	; 0x28
 800db42:	4413      	add	r3, r2
 800db44:	9305      	str	r3, [sp, #20]
 800db46:	2300      	movs	r3, #0
 800db48:	9307      	str	r3, [sp, #28]
 800db4a:	9b06      	ldr	r3, [sp, #24]
 800db4c:	2b09      	cmp	r3, #9
 800db4e:	f200 8089 	bhi.w	800dc64 <_dtoa_r+0x2f4>
 800db52:	2b05      	cmp	r3, #5
 800db54:	bfc4      	itt	gt
 800db56:	3b04      	subgt	r3, #4
 800db58:	9306      	strgt	r3, [sp, #24]
 800db5a:	9b06      	ldr	r3, [sp, #24]
 800db5c:	f1a3 0302 	sub.w	r3, r3, #2
 800db60:	bfcc      	ite	gt
 800db62:	2500      	movgt	r5, #0
 800db64:	2501      	movle	r5, #1
 800db66:	2b03      	cmp	r3, #3
 800db68:	f200 8087 	bhi.w	800dc7a <_dtoa_r+0x30a>
 800db6c:	e8df f003 	tbb	[pc, r3]
 800db70:	59383a2d 	.word	0x59383a2d
 800db74:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 800db78:	441d      	add	r5, r3
 800db7a:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800db7e:	2b20      	cmp	r3, #32
 800db80:	bfc1      	itttt	gt
 800db82:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800db86:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 800db8a:	fa0b f303 	lslgt.w	r3, fp, r3
 800db8e:	fa26 f000 	lsrgt.w	r0, r6, r0
 800db92:	bfda      	itte	le
 800db94:	f1c3 0320 	rsble	r3, r3, #32
 800db98:	fa06 f003 	lslle.w	r0, r6, r3
 800db9c:	4318      	orrgt	r0, r3
 800db9e:	f7f2 fcd1 	bl	8000544 <__aeabi_ui2d>
 800dba2:	2301      	movs	r3, #1
 800dba4:	4606      	mov	r6, r0
 800dba6:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 800dbaa:	3d01      	subs	r5, #1
 800dbac:	930e      	str	r3, [sp, #56]	; 0x38
 800dbae:	e76a      	b.n	800da86 <_dtoa_r+0x116>
 800dbb0:	2301      	movs	r3, #1
 800dbb2:	e7b2      	b.n	800db1a <_dtoa_r+0x1aa>
 800dbb4:	900b      	str	r0, [sp, #44]	; 0x2c
 800dbb6:	e7b1      	b.n	800db1c <_dtoa_r+0x1ac>
 800dbb8:	9b04      	ldr	r3, [sp, #16]
 800dbba:	9a00      	ldr	r2, [sp, #0]
 800dbbc:	1a9b      	subs	r3, r3, r2
 800dbbe:	9304      	str	r3, [sp, #16]
 800dbc0:	4253      	negs	r3, r2
 800dbc2:	9307      	str	r3, [sp, #28]
 800dbc4:	2300      	movs	r3, #0
 800dbc6:	930a      	str	r3, [sp, #40]	; 0x28
 800dbc8:	e7bf      	b.n	800db4a <_dtoa_r+0x1da>
 800dbca:	2300      	movs	r3, #0
 800dbcc:	9308      	str	r3, [sp, #32]
 800dbce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dbd0:	2b00      	cmp	r3, #0
 800dbd2:	dc55      	bgt.n	800dc80 <_dtoa_r+0x310>
 800dbd4:	2301      	movs	r3, #1
 800dbd6:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800dbda:	461a      	mov	r2, r3
 800dbdc:	9209      	str	r2, [sp, #36]	; 0x24
 800dbde:	e00c      	b.n	800dbfa <_dtoa_r+0x28a>
 800dbe0:	2301      	movs	r3, #1
 800dbe2:	e7f3      	b.n	800dbcc <_dtoa_r+0x25c>
 800dbe4:	2300      	movs	r3, #0
 800dbe6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800dbe8:	9308      	str	r3, [sp, #32]
 800dbea:	9b00      	ldr	r3, [sp, #0]
 800dbec:	4413      	add	r3, r2
 800dbee:	9302      	str	r3, [sp, #8]
 800dbf0:	3301      	adds	r3, #1
 800dbf2:	2b01      	cmp	r3, #1
 800dbf4:	9303      	str	r3, [sp, #12]
 800dbf6:	bfb8      	it	lt
 800dbf8:	2301      	movlt	r3, #1
 800dbfa:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800dbfc:	2200      	movs	r2, #0
 800dbfe:	6042      	str	r2, [r0, #4]
 800dc00:	2204      	movs	r2, #4
 800dc02:	f102 0614 	add.w	r6, r2, #20
 800dc06:	429e      	cmp	r6, r3
 800dc08:	6841      	ldr	r1, [r0, #4]
 800dc0a:	d93d      	bls.n	800dc88 <_dtoa_r+0x318>
 800dc0c:	4620      	mov	r0, r4
 800dc0e:	f000 fcb7 	bl	800e580 <_Balloc>
 800dc12:	9001      	str	r0, [sp, #4]
 800dc14:	2800      	cmp	r0, #0
 800dc16:	d13b      	bne.n	800dc90 <_dtoa_r+0x320>
 800dc18:	4b11      	ldr	r3, [pc, #68]	; (800dc60 <_dtoa_r+0x2f0>)
 800dc1a:	4602      	mov	r2, r0
 800dc1c:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800dc20:	e6c0      	b.n	800d9a4 <_dtoa_r+0x34>
 800dc22:	2301      	movs	r3, #1
 800dc24:	e7df      	b.n	800dbe6 <_dtoa_r+0x276>
 800dc26:	bf00      	nop
 800dc28:	636f4361 	.word	0x636f4361
 800dc2c:	3fd287a7 	.word	0x3fd287a7
 800dc30:	8b60c8b3 	.word	0x8b60c8b3
 800dc34:	3fc68a28 	.word	0x3fc68a28
 800dc38:	509f79fb 	.word	0x509f79fb
 800dc3c:	3fd34413 	.word	0x3fd34413
 800dc40:	08011369 	.word	0x08011369
 800dc44:	08011380 	.word	0x08011380
 800dc48:	7ff00000 	.word	0x7ff00000
 800dc4c:	08011365 	.word	0x08011365
 800dc50:	0801135c 	.word	0x0801135c
 800dc54:	08011339 	.word	0x08011339
 800dc58:	3ff80000 	.word	0x3ff80000
 800dc5c:	08011470 	.word	0x08011470
 800dc60:	080113db 	.word	0x080113db
 800dc64:	2501      	movs	r5, #1
 800dc66:	2300      	movs	r3, #0
 800dc68:	9306      	str	r3, [sp, #24]
 800dc6a:	9508      	str	r5, [sp, #32]
 800dc6c:	f04f 33ff 	mov.w	r3, #4294967295
 800dc70:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800dc74:	2200      	movs	r2, #0
 800dc76:	2312      	movs	r3, #18
 800dc78:	e7b0      	b.n	800dbdc <_dtoa_r+0x26c>
 800dc7a:	2301      	movs	r3, #1
 800dc7c:	9308      	str	r3, [sp, #32]
 800dc7e:	e7f5      	b.n	800dc6c <_dtoa_r+0x2fc>
 800dc80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dc82:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800dc86:	e7b8      	b.n	800dbfa <_dtoa_r+0x28a>
 800dc88:	3101      	adds	r1, #1
 800dc8a:	6041      	str	r1, [r0, #4]
 800dc8c:	0052      	lsls	r2, r2, #1
 800dc8e:	e7b8      	b.n	800dc02 <_dtoa_r+0x292>
 800dc90:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dc92:	9a01      	ldr	r2, [sp, #4]
 800dc94:	601a      	str	r2, [r3, #0]
 800dc96:	9b03      	ldr	r3, [sp, #12]
 800dc98:	2b0e      	cmp	r3, #14
 800dc9a:	f200 809d 	bhi.w	800ddd8 <_dtoa_r+0x468>
 800dc9e:	2d00      	cmp	r5, #0
 800dca0:	f000 809a 	beq.w	800ddd8 <_dtoa_r+0x468>
 800dca4:	9b00      	ldr	r3, [sp, #0]
 800dca6:	2b00      	cmp	r3, #0
 800dca8:	dd32      	ble.n	800dd10 <_dtoa_r+0x3a0>
 800dcaa:	4ab7      	ldr	r2, [pc, #732]	; (800df88 <_dtoa_r+0x618>)
 800dcac:	f003 030f 	and.w	r3, r3, #15
 800dcb0:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800dcb4:	e9d3 8900 	ldrd	r8, r9, [r3]
 800dcb8:	9b00      	ldr	r3, [sp, #0]
 800dcba:	05d8      	lsls	r0, r3, #23
 800dcbc:	ea4f 1723 	mov.w	r7, r3, asr #4
 800dcc0:	d516      	bpl.n	800dcf0 <_dtoa_r+0x380>
 800dcc2:	4bb2      	ldr	r3, [pc, #712]	; (800df8c <_dtoa_r+0x61c>)
 800dcc4:	ec51 0b19 	vmov	r0, r1, d9
 800dcc8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800dccc:	f7f2 fdde 	bl	800088c <__aeabi_ddiv>
 800dcd0:	f007 070f 	and.w	r7, r7, #15
 800dcd4:	4682      	mov	sl, r0
 800dcd6:	468b      	mov	fp, r1
 800dcd8:	2503      	movs	r5, #3
 800dcda:	4eac      	ldr	r6, [pc, #688]	; (800df8c <_dtoa_r+0x61c>)
 800dcdc:	b957      	cbnz	r7, 800dcf4 <_dtoa_r+0x384>
 800dcde:	4642      	mov	r2, r8
 800dce0:	464b      	mov	r3, r9
 800dce2:	4650      	mov	r0, sl
 800dce4:	4659      	mov	r1, fp
 800dce6:	f7f2 fdd1 	bl	800088c <__aeabi_ddiv>
 800dcea:	4682      	mov	sl, r0
 800dcec:	468b      	mov	fp, r1
 800dcee:	e028      	b.n	800dd42 <_dtoa_r+0x3d2>
 800dcf0:	2502      	movs	r5, #2
 800dcf2:	e7f2      	b.n	800dcda <_dtoa_r+0x36a>
 800dcf4:	07f9      	lsls	r1, r7, #31
 800dcf6:	d508      	bpl.n	800dd0a <_dtoa_r+0x39a>
 800dcf8:	4640      	mov	r0, r8
 800dcfa:	4649      	mov	r1, r9
 800dcfc:	e9d6 2300 	ldrd	r2, r3, [r6]
 800dd00:	f7f2 fc9a 	bl	8000638 <__aeabi_dmul>
 800dd04:	3501      	adds	r5, #1
 800dd06:	4680      	mov	r8, r0
 800dd08:	4689      	mov	r9, r1
 800dd0a:	107f      	asrs	r7, r7, #1
 800dd0c:	3608      	adds	r6, #8
 800dd0e:	e7e5      	b.n	800dcdc <_dtoa_r+0x36c>
 800dd10:	f000 809b 	beq.w	800de4a <_dtoa_r+0x4da>
 800dd14:	9b00      	ldr	r3, [sp, #0]
 800dd16:	4f9d      	ldr	r7, [pc, #628]	; (800df8c <_dtoa_r+0x61c>)
 800dd18:	425e      	negs	r6, r3
 800dd1a:	4b9b      	ldr	r3, [pc, #620]	; (800df88 <_dtoa_r+0x618>)
 800dd1c:	f006 020f 	and.w	r2, r6, #15
 800dd20:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800dd24:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dd28:	ec51 0b19 	vmov	r0, r1, d9
 800dd2c:	f7f2 fc84 	bl	8000638 <__aeabi_dmul>
 800dd30:	1136      	asrs	r6, r6, #4
 800dd32:	4682      	mov	sl, r0
 800dd34:	468b      	mov	fp, r1
 800dd36:	2300      	movs	r3, #0
 800dd38:	2502      	movs	r5, #2
 800dd3a:	2e00      	cmp	r6, #0
 800dd3c:	d17a      	bne.n	800de34 <_dtoa_r+0x4c4>
 800dd3e:	2b00      	cmp	r3, #0
 800dd40:	d1d3      	bne.n	800dcea <_dtoa_r+0x37a>
 800dd42:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800dd44:	2b00      	cmp	r3, #0
 800dd46:	f000 8082 	beq.w	800de4e <_dtoa_r+0x4de>
 800dd4a:	4b91      	ldr	r3, [pc, #580]	; (800df90 <_dtoa_r+0x620>)
 800dd4c:	2200      	movs	r2, #0
 800dd4e:	4650      	mov	r0, sl
 800dd50:	4659      	mov	r1, fp
 800dd52:	f7f2 fee3 	bl	8000b1c <__aeabi_dcmplt>
 800dd56:	2800      	cmp	r0, #0
 800dd58:	d079      	beq.n	800de4e <_dtoa_r+0x4de>
 800dd5a:	9b03      	ldr	r3, [sp, #12]
 800dd5c:	2b00      	cmp	r3, #0
 800dd5e:	d076      	beq.n	800de4e <_dtoa_r+0x4de>
 800dd60:	9b02      	ldr	r3, [sp, #8]
 800dd62:	2b00      	cmp	r3, #0
 800dd64:	dd36      	ble.n	800ddd4 <_dtoa_r+0x464>
 800dd66:	9b00      	ldr	r3, [sp, #0]
 800dd68:	4650      	mov	r0, sl
 800dd6a:	4659      	mov	r1, fp
 800dd6c:	1e5f      	subs	r7, r3, #1
 800dd6e:	2200      	movs	r2, #0
 800dd70:	4b88      	ldr	r3, [pc, #544]	; (800df94 <_dtoa_r+0x624>)
 800dd72:	f7f2 fc61 	bl	8000638 <__aeabi_dmul>
 800dd76:	9e02      	ldr	r6, [sp, #8]
 800dd78:	4682      	mov	sl, r0
 800dd7a:	468b      	mov	fp, r1
 800dd7c:	3501      	adds	r5, #1
 800dd7e:	4628      	mov	r0, r5
 800dd80:	f7f2 fbf0 	bl	8000564 <__aeabi_i2d>
 800dd84:	4652      	mov	r2, sl
 800dd86:	465b      	mov	r3, fp
 800dd88:	f7f2 fc56 	bl	8000638 <__aeabi_dmul>
 800dd8c:	4b82      	ldr	r3, [pc, #520]	; (800df98 <_dtoa_r+0x628>)
 800dd8e:	2200      	movs	r2, #0
 800dd90:	f7f2 fa9c 	bl	80002cc <__adddf3>
 800dd94:	46d0      	mov	r8, sl
 800dd96:	46d9      	mov	r9, fp
 800dd98:	4682      	mov	sl, r0
 800dd9a:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 800dd9e:	2e00      	cmp	r6, #0
 800dda0:	d158      	bne.n	800de54 <_dtoa_r+0x4e4>
 800dda2:	4b7e      	ldr	r3, [pc, #504]	; (800df9c <_dtoa_r+0x62c>)
 800dda4:	2200      	movs	r2, #0
 800dda6:	4640      	mov	r0, r8
 800dda8:	4649      	mov	r1, r9
 800ddaa:	f7f2 fa8d 	bl	80002c8 <__aeabi_dsub>
 800ddae:	4652      	mov	r2, sl
 800ddb0:	465b      	mov	r3, fp
 800ddb2:	4680      	mov	r8, r0
 800ddb4:	4689      	mov	r9, r1
 800ddb6:	f7f2 fecf 	bl	8000b58 <__aeabi_dcmpgt>
 800ddba:	2800      	cmp	r0, #0
 800ddbc:	f040 8295 	bne.w	800e2ea <_dtoa_r+0x97a>
 800ddc0:	4652      	mov	r2, sl
 800ddc2:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800ddc6:	4640      	mov	r0, r8
 800ddc8:	4649      	mov	r1, r9
 800ddca:	f7f2 fea7 	bl	8000b1c <__aeabi_dcmplt>
 800ddce:	2800      	cmp	r0, #0
 800ddd0:	f040 8289 	bne.w	800e2e6 <_dtoa_r+0x976>
 800ddd4:	ec5b ab19 	vmov	sl, fp, d9
 800ddd8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800ddda:	2b00      	cmp	r3, #0
 800dddc:	f2c0 8148 	blt.w	800e070 <_dtoa_r+0x700>
 800dde0:	9a00      	ldr	r2, [sp, #0]
 800dde2:	2a0e      	cmp	r2, #14
 800dde4:	f300 8144 	bgt.w	800e070 <_dtoa_r+0x700>
 800dde8:	4b67      	ldr	r3, [pc, #412]	; (800df88 <_dtoa_r+0x618>)
 800ddea:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800ddee:	e9d3 8900 	ldrd	r8, r9, [r3]
 800ddf2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ddf4:	2b00      	cmp	r3, #0
 800ddf6:	f280 80d5 	bge.w	800dfa4 <_dtoa_r+0x634>
 800ddfa:	9b03      	ldr	r3, [sp, #12]
 800ddfc:	2b00      	cmp	r3, #0
 800ddfe:	f300 80d1 	bgt.w	800dfa4 <_dtoa_r+0x634>
 800de02:	f040 826f 	bne.w	800e2e4 <_dtoa_r+0x974>
 800de06:	4b65      	ldr	r3, [pc, #404]	; (800df9c <_dtoa_r+0x62c>)
 800de08:	2200      	movs	r2, #0
 800de0a:	4640      	mov	r0, r8
 800de0c:	4649      	mov	r1, r9
 800de0e:	f7f2 fc13 	bl	8000638 <__aeabi_dmul>
 800de12:	4652      	mov	r2, sl
 800de14:	465b      	mov	r3, fp
 800de16:	f7f2 fe95 	bl	8000b44 <__aeabi_dcmpge>
 800de1a:	9e03      	ldr	r6, [sp, #12]
 800de1c:	4637      	mov	r7, r6
 800de1e:	2800      	cmp	r0, #0
 800de20:	f040 8245 	bne.w	800e2ae <_dtoa_r+0x93e>
 800de24:	9d01      	ldr	r5, [sp, #4]
 800de26:	2331      	movs	r3, #49	; 0x31
 800de28:	f805 3b01 	strb.w	r3, [r5], #1
 800de2c:	9b00      	ldr	r3, [sp, #0]
 800de2e:	3301      	adds	r3, #1
 800de30:	9300      	str	r3, [sp, #0]
 800de32:	e240      	b.n	800e2b6 <_dtoa_r+0x946>
 800de34:	07f2      	lsls	r2, r6, #31
 800de36:	d505      	bpl.n	800de44 <_dtoa_r+0x4d4>
 800de38:	e9d7 2300 	ldrd	r2, r3, [r7]
 800de3c:	f7f2 fbfc 	bl	8000638 <__aeabi_dmul>
 800de40:	3501      	adds	r5, #1
 800de42:	2301      	movs	r3, #1
 800de44:	1076      	asrs	r6, r6, #1
 800de46:	3708      	adds	r7, #8
 800de48:	e777      	b.n	800dd3a <_dtoa_r+0x3ca>
 800de4a:	2502      	movs	r5, #2
 800de4c:	e779      	b.n	800dd42 <_dtoa_r+0x3d2>
 800de4e:	9f00      	ldr	r7, [sp, #0]
 800de50:	9e03      	ldr	r6, [sp, #12]
 800de52:	e794      	b.n	800dd7e <_dtoa_r+0x40e>
 800de54:	9901      	ldr	r1, [sp, #4]
 800de56:	4b4c      	ldr	r3, [pc, #304]	; (800df88 <_dtoa_r+0x618>)
 800de58:	4431      	add	r1, r6
 800de5a:	910d      	str	r1, [sp, #52]	; 0x34
 800de5c:	9908      	ldr	r1, [sp, #32]
 800de5e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800de62:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800de66:	2900      	cmp	r1, #0
 800de68:	d043      	beq.n	800def2 <_dtoa_r+0x582>
 800de6a:	494d      	ldr	r1, [pc, #308]	; (800dfa0 <_dtoa_r+0x630>)
 800de6c:	2000      	movs	r0, #0
 800de6e:	f7f2 fd0d 	bl	800088c <__aeabi_ddiv>
 800de72:	4652      	mov	r2, sl
 800de74:	465b      	mov	r3, fp
 800de76:	f7f2 fa27 	bl	80002c8 <__aeabi_dsub>
 800de7a:	9d01      	ldr	r5, [sp, #4]
 800de7c:	4682      	mov	sl, r0
 800de7e:	468b      	mov	fp, r1
 800de80:	4649      	mov	r1, r9
 800de82:	4640      	mov	r0, r8
 800de84:	f7f2 fe88 	bl	8000b98 <__aeabi_d2iz>
 800de88:	4606      	mov	r6, r0
 800de8a:	f7f2 fb6b 	bl	8000564 <__aeabi_i2d>
 800de8e:	4602      	mov	r2, r0
 800de90:	460b      	mov	r3, r1
 800de92:	4640      	mov	r0, r8
 800de94:	4649      	mov	r1, r9
 800de96:	f7f2 fa17 	bl	80002c8 <__aeabi_dsub>
 800de9a:	3630      	adds	r6, #48	; 0x30
 800de9c:	f805 6b01 	strb.w	r6, [r5], #1
 800dea0:	4652      	mov	r2, sl
 800dea2:	465b      	mov	r3, fp
 800dea4:	4680      	mov	r8, r0
 800dea6:	4689      	mov	r9, r1
 800dea8:	f7f2 fe38 	bl	8000b1c <__aeabi_dcmplt>
 800deac:	2800      	cmp	r0, #0
 800deae:	d163      	bne.n	800df78 <_dtoa_r+0x608>
 800deb0:	4642      	mov	r2, r8
 800deb2:	464b      	mov	r3, r9
 800deb4:	4936      	ldr	r1, [pc, #216]	; (800df90 <_dtoa_r+0x620>)
 800deb6:	2000      	movs	r0, #0
 800deb8:	f7f2 fa06 	bl	80002c8 <__aeabi_dsub>
 800debc:	4652      	mov	r2, sl
 800debe:	465b      	mov	r3, fp
 800dec0:	f7f2 fe2c 	bl	8000b1c <__aeabi_dcmplt>
 800dec4:	2800      	cmp	r0, #0
 800dec6:	f040 80b5 	bne.w	800e034 <_dtoa_r+0x6c4>
 800deca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800decc:	429d      	cmp	r5, r3
 800dece:	d081      	beq.n	800ddd4 <_dtoa_r+0x464>
 800ded0:	4b30      	ldr	r3, [pc, #192]	; (800df94 <_dtoa_r+0x624>)
 800ded2:	2200      	movs	r2, #0
 800ded4:	4650      	mov	r0, sl
 800ded6:	4659      	mov	r1, fp
 800ded8:	f7f2 fbae 	bl	8000638 <__aeabi_dmul>
 800dedc:	4b2d      	ldr	r3, [pc, #180]	; (800df94 <_dtoa_r+0x624>)
 800dede:	4682      	mov	sl, r0
 800dee0:	468b      	mov	fp, r1
 800dee2:	4640      	mov	r0, r8
 800dee4:	4649      	mov	r1, r9
 800dee6:	2200      	movs	r2, #0
 800dee8:	f7f2 fba6 	bl	8000638 <__aeabi_dmul>
 800deec:	4680      	mov	r8, r0
 800deee:	4689      	mov	r9, r1
 800def0:	e7c6      	b.n	800de80 <_dtoa_r+0x510>
 800def2:	4650      	mov	r0, sl
 800def4:	4659      	mov	r1, fp
 800def6:	f7f2 fb9f 	bl	8000638 <__aeabi_dmul>
 800defa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800defc:	9d01      	ldr	r5, [sp, #4]
 800defe:	930f      	str	r3, [sp, #60]	; 0x3c
 800df00:	4682      	mov	sl, r0
 800df02:	468b      	mov	fp, r1
 800df04:	4649      	mov	r1, r9
 800df06:	4640      	mov	r0, r8
 800df08:	f7f2 fe46 	bl	8000b98 <__aeabi_d2iz>
 800df0c:	4606      	mov	r6, r0
 800df0e:	f7f2 fb29 	bl	8000564 <__aeabi_i2d>
 800df12:	3630      	adds	r6, #48	; 0x30
 800df14:	4602      	mov	r2, r0
 800df16:	460b      	mov	r3, r1
 800df18:	4640      	mov	r0, r8
 800df1a:	4649      	mov	r1, r9
 800df1c:	f7f2 f9d4 	bl	80002c8 <__aeabi_dsub>
 800df20:	f805 6b01 	strb.w	r6, [r5], #1
 800df24:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800df26:	429d      	cmp	r5, r3
 800df28:	4680      	mov	r8, r0
 800df2a:	4689      	mov	r9, r1
 800df2c:	f04f 0200 	mov.w	r2, #0
 800df30:	d124      	bne.n	800df7c <_dtoa_r+0x60c>
 800df32:	4b1b      	ldr	r3, [pc, #108]	; (800dfa0 <_dtoa_r+0x630>)
 800df34:	4650      	mov	r0, sl
 800df36:	4659      	mov	r1, fp
 800df38:	f7f2 f9c8 	bl	80002cc <__adddf3>
 800df3c:	4602      	mov	r2, r0
 800df3e:	460b      	mov	r3, r1
 800df40:	4640      	mov	r0, r8
 800df42:	4649      	mov	r1, r9
 800df44:	f7f2 fe08 	bl	8000b58 <__aeabi_dcmpgt>
 800df48:	2800      	cmp	r0, #0
 800df4a:	d173      	bne.n	800e034 <_dtoa_r+0x6c4>
 800df4c:	4652      	mov	r2, sl
 800df4e:	465b      	mov	r3, fp
 800df50:	4913      	ldr	r1, [pc, #76]	; (800dfa0 <_dtoa_r+0x630>)
 800df52:	2000      	movs	r0, #0
 800df54:	f7f2 f9b8 	bl	80002c8 <__aeabi_dsub>
 800df58:	4602      	mov	r2, r0
 800df5a:	460b      	mov	r3, r1
 800df5c:	4640      	mov	r0, r8
 800df5e:	4649      	mov	r1, r9
 800df60:	f7f2 fddc 	bl	8000b1c <__aeabi_dcmplt>
 800df64:	2800      	cmp	r0, #0
 800df66:	f43f af35 	beq.w	800ddd4 <_dtoa_r+0x464>
 800df6a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800df6c:	1e6b      	subs	r3, r5, #1
 800df6e:	930f      	str	r3, [sp, #60]	; 0x3c
 800df70:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800df74:	2b30      	cmp	r3, #48	; 0x30
 800df76:	d0f8      	beq.n	800df6a <_dtoa_r+0x5fa>
 800df78:	9700      	str	r7, [sp, #0]
 800df7a:	e049      	b.n	800e010 <_dtoa_r+0x6a0>
 800df7c:	4b05      	ldr	r3, [pc, #20]	; (800df94 <_dtoa_r+0x624>)
 800df7e:	f7f2 fb5b 	bl	8000638 <__aeabi_dmul>
 800df82:	4680      	mov	r8, r0
 800df84:	4689      	mov	r9, r1
 800df86:	e7bd      	b.n	800df04 <_dtoa_r+0x594>
 800df88:	08011470 	.word	0x08011470
 800df8c:	08011448 	.word	0x08011448
 800df90:	3ff00000 	.word	0x3ff00000
 800df94:	40240000 	.word	0x40240000
 800df98:	401c0000 	.word	0x401c0000
 800df9c:	40140000 	.word	0x40140000
 800dfa0:	3fe00000 	.word	0x3fe00000
 800dfa4:	9d01      	ldr	r5, [sp, #4]
 800dfa6:	4656      	mov	r6, sl
 800dfa8:	465f      	mov	r7, fp
 800dfaa:	4642      	mov	r2, r8
 800dfac:	464b      	mov	r3, r9
 800dfae:	4630      	mov	r0, r6
 800dfb0:	4639      	mov	r1, r7
 800dfb2:	f7f2 fc6b 	bl	800088c <__aeabi_ddiv>
 800dfb6:	f7f2 fdef 	bl	8000b98 <__aeabi_d2iz>
 800dfba:	4682      	mov	sl, r0
 800dfbc:	f7f2 fad2 	bl	8000564 <__aeabi_i2d>
 800dfc0:	4642      	mov	r2, r8
 800dfc2:	464b      	mov	r3, r9
 800dfc4:	f7f2 fb38 	bl	8000638 <__aeabi_dmul>
 800dfc8:	4602      	mov	r2, r0
 800dfca:	460b      	mov	r3, r1
 800dfcc:	4630      	mov	r0, r6
 800dfce:	4639      	mov	r1, r7
 800dfd0:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 800dfd4:	f7f2 f978 	bl	80002c8 <__aeabi_dsub>
 800dfd8:	f805 6b01 	strb.w	r6, [r5], #1
 800dfdc:	9e01      	ldr	r6, [sp, #4]
 800dfde:	9f03      	ldr	r7, [sp, #12]
 800dfe0:	1bae      	subs	r6, r5, r6
 800dfe2:	42b7      	cmp	r7, r6
 800dfe4:	4602      	mov	r2, r0
 800dfe6:	460b      	mov	r3, r1
 800dfe8:	d135      	bne.n	800e056 <_dtoa_r+0x6e6>
 800dfea:	f7f2 f96f 	bl	80002cc <__adddf3>
 800dfee:	4642      	mov	r2, r8
 800dff0:	464b      	mov	r3, r9
 800dff2:	4606      	mov	r6, r0
 800dff4:	460f      	mov	r7, r1
 800dff6:	f7f2 fdaf 	bl	8000b58 <__aeabi_dcmpgt>
 800dffa:	b9d0      	cbnz	r0, 800e032 <_dtoa_r+0x6c2>
 800dffc:	4642      	mov	r2, r8
 800dffe:	464b      	mov	r3, r9
 800e000:	4630      	mov	r0, r6
 800e002:	4639      	mov	r1, r7
 800e004:	f7f2 fd80 	bl	8000b08 <__aeabi_dcmpeq>
 800e008:	b110      	cbz	r0, 800e010 <_dtoa_r+0x6a0>
 800e00a:	f01a 0f01 	tst.w	sl, #1
 800e00e:	d110      	bne.n	800e032 <_dtoa_r+0x6c2>
 800e010:	4620      	mov	r0, r4
 800e012:	ee18 1a10 	vmov	r1, s16
 800e016:	f000 faf3 	bl	800e600 <_Bfree>
 800e01a:	2300      	movs	r3, #0
 800e01c:	9800      	ldr	r0, [sp, #0]
 800e01e:	702b      	strb	r3, [r5, #0]
 800e020:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e022:	3001      	adds	r0, #1
 800e024:	6018      	str	r0, [r3, #0]
 800e026:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e028:	2b00      	cmp	r3, #0
 800e02a:	f43f acf1 	beq.w	800da10 <_dtoa_r+0xa0>
 800e02e:	601d      	str	r5, [r3, #0]
 800e030:	e4ee      	b.n	800da10 <_dtoa_r+0xa0>
 800e032:	9f00      	ldr	r7, [sp, #0]
 800e034:	462b      	mov	r3, r5
 800e036:	461d      	mov	r5, r3
 800e038:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800e03c:	2a39      	cmp	r2, #57	; 0x39
 800e03e:	d106      	bne.n	800e04e <_dtoa_r+0x6de>
 800e040:	9a01      	ldr	r2, [sp, #4]
 800e042:	429a      	cmp	r2, r3
 800e044:	d1f7      	bne.n	800e036 <_dtoa_r+0x6c6>
 800e046:	9901      	ldr	r1, [sp, #4]
 800e048:	2230      	movs	r2, #48	; 0x30
 800e04a:	3701      	adds	r7, #1
 800e04c:	700a      	strb	r2, [r1, #0]
 800e04e:	781a      	ldrb	r2, [r3, #0]
 800e050:	3201      	adds	r2, #1
 800e052:	701a      	strb	r2, [r3, #0]
 800e054:	e790      	b.n	800df78 <_dtoa_r+0x608>
 800e056:	4ba6      	ldr	r3, [pc, #664]	; (800e2f0 <_dtoa_r+0x980>)
 800e058:	2200      	movs	r2, #0
 800e05a:	f7f2 faed 	bl	8000638 <__aeabi_dmul>
 800e05e:	2200      	movs	r2, #0
 800e060:	2300      	movs	r3, #0
 800e062:	4606      	mov	r6, r0
 800e064:	460f      	mov	r7, r1
 800e066:	f7f2 fd4f 	bl	8000b08 <__aeabi_dcmpeq>
 800e06a:	2800      	cmp	r0, #0
 800e06c:	d09d      	beq.n	800dfaa <_dtoa_r+0x63a>
 800e06e:	e7cf      	b.n	800e010 <_dtoa_r+0x6a0>
 800e070:	9a08      	ldr	r2, [sp, #32]
 800e072:	2a00      	cmp	r2, #0
 800e074:	f000 80d7 	beq.w	800e226 <_dtoa_r+0x8b6>
 800e078:	9a06      	ldr	r2, [sp, #24]
 800e07a:	2a01      	cmp	r2, #1
 800e07c:	f300 80ba 	bgt.w	800e1f4 <_dtoa_r+0x884>
 800e080:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800e082:	2a00      	cmp	r2, #0
 800e084:	f000 80b2 	beq.w	800e1ec <_dtoa_r+0x87c>
 800e088:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800e08c:	9e07      	ldr	r6, [sp, #28]
 800e08e:	9d04      	ldr	r5, [sp, #16]
 800e090:	9a04      	ldr	r2, [sp, #16]
 800e092:	441a      	add	r2, r3
 800e094:	9204      	str	r2, [sp, #16]
 800e096:	9a05      	ldr	r2, [sp, #20]
 800e098:	2101      	movs	r1, #1
 800e09a:	441a      	add	r2, r3
 800e09c:	4620      	mov	r0, r4
 800e09e:	9205      	str	r2, [sp, #20]
 800e0a0:	f000 fb66 	bl	800e770 <__i2b>
 800e0a4:	4607      	mov	r7, r0
 800e0a6:	2d00      	cmp	r5, #0
 800e0a8:	dd0c      	ble.n	800e0c4 <_dtoa_r+0x754>
 800e0aa:	9b05      	ldr	r3, [sp, #20]
 800e0ac:	2b00      	cmp	r3, #0
 800e0ae:	dd09      	ble.n	800e0c4 <_dtoa_r+0x754>
 800e0b0:	42ab      	cmp	r3, r5
 800e0b2:	9a04      	ldr	r2, [sp, #16]
 800e0b4:	bfa8      	it	ge
 800e0b6:	462b      	movge	r3, r5
 800e0b8:	1ad2      	subs	r2, r2, r3
 800e0ba:	9204      	str	r2, [sp, #16]
 800e0bc:	9a05      	ldr	r2, [sp, #20]
 800e0be:	1aed      	subs	r5, r5, r3
 800e0c0:	1ad3      	subs	r3, r2, r3
 800e0c2:	9305      	str	r3, [sp, #20]
 800e0c4:	9b07      	ldr	r3, [sp, #28]
 800e0c6:	b31b      	cbz	r3, 800e110 <_dtoa_r+0x7a0>
 800e0c8:	9b08      	ldr	r3, [sp, #32]
 800e0ca:	2b00      	cmp	r3, #0
 800e0cc:	f000 80af 	beq.w	800e22e <_dtoa_r+0x8be>
 800e0d0:	2e00      	cmp	r6, #0
 800e0d2:	dd13      	ble.n	800e0fc <_dtoa_r+0x78c>
 800e0d4:	4639      	mov	r1, r7
 800e0d6:	4632      	mov	r2, r6
 800e0d8:	4620      	mov	r0, r4
 800e0da:	f000 fc09 	bl	800e8f0 <__pow5mult>
 800e0de:	ee18 2a10 	vmov	r2, s16
 800e0e2:	4601      	mov	r1, r0
 800e0e4:	4607      	mov	r7, r0
 800e0e6:	4620      	mov	r0, r4
 800e0e8:	f000 fb58 	bl	800e79c <__multiply>
 800e0ec:	ee18 1a10 	vmov	r1, s16
 800e0f0:	4680      	mov	r8, r0
 800e0f2:	4620      	mov	r0, r4
 800e0f4:	f000 fa84 	bl	800e600 <_Bfree>
 800e0f8:	ee08 8a10 	vmov	s16, r8
 800e0fc:	9b07      	ldr	r3, [sp, #28]
 800e0fe:	1b9a      	subs	r2, r3, r6
 800e100:	d006      	beq.n	800e110 <_dtoa_r+0x7a0>
 800e102:	ee18 1a10 	vmov	r1, s16
 800e106:	4620      	mov	r0, r4
 800e108:	f000 fbf2 	bl	800e8f0 <__pow5mult>
 800e10c:	ee08 0a10 	vmov	s16, r0
 800e110:	2101      	movs	r1, #1
 800e112:	4620      	mov	r0, r4
 800e114:	f000 fb2c 	bl	800e770 <__i2b>
 800e118:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e11a:	2b00      	cmp	r3, #0
 800e11c:	4606      	mov	r6, r0
 800e11e:	f340 8088 	ble.w	800e232 <_dtoa_r+0x8c2>
 800e122:	461a      	mov	r2, r3
 800e124:	4601      	mov	r1, r0
 800e126:	4620      	mov	r0, r4
 800e128:	f000 fbe2 	bl	800e8f0 <__pow5mult>
 800e12c:	9b06      	ldr	r3, [sp, #24]
 800e12e:	2b01      	cmp	r3, #1
 800e130:	4606      	mov	r6, r0
 800e132:	f340 8081 	ble.w	800e238 <_dtoa_r+0x8c8>
 800e136:	f04f 0800 	mov.w	r8, #0
 800e13a:	6933      	ldr	r3, [r6, #16]
 800e13c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800e140:	6918      	ldr	r0, [r3, #16]
 800e142:	f000 fac5 	bl	800e6d0 <__hi0bits>
 800e146:	f1c0 0020 	rsb	r0, r0, #32
 800e14a:	9b05      	ldr	r3, [sp, #20]
 800e14c:	4418      	add	r0, r3
 800e14e:	f010 001f 	ands.w	r0, r0, #31
 800e152:	f000 8092 	beq.w	800e27a <_dtoa_r+0x90a>
 800e156:	f1c0 0320 	rsb	r3, r0, #32
 800e15a:	2b04      	cmp	r3, #4
 800e15c:	f340 808a 	ble.w	800e274 <_dtoa_r+0x904>
 800e160:	f1c0 001c 	rsb	r0, r0, #28
 800e164:	9b04      	ldr	r3, [sp, #16]
 800e166:	4403      	add	r3, r0
 800e168:	9304      	str	r3, [sp, #16]
 800e16a:	9b05      	ldr	r3, [sp, #20]
 800e16c:	4403      	add	r3, r0
 800e16e:	4405      	add	r5, r0
 800e170:	9305      	str	r3, [sp, #20]
 800e172:	9b04      	ldr	r3, [sp, #16]
 800e174:	2b00      	cmp	r3, #0
 800e176:	dd07      	ble.n	800e188 <_dtoa_r+0x818>
 800e178:	ee18 1a10 	vmov	r1, s16
 800e17c:	461a      	mov	r2, r3
 800e17e:	4620      	mov	r0, r4
 800e180:	f000 fc10 	bl	800e9a4 <__lshift>
 800e184:	ee08 0a10 	vmov	s16, r0
 800e188:	9b05      	ldr	r3, [sp, #20]
 800e18a:	2b00      	cmp	r3, #0
 800e18c:	dd05      	ble.n	800e19a <_dtoa_r+0x82a>
 800e18e:	4631      	mov	r1, r6
 800e190:	461a      	mov	r2, r3
 800e192:	4620      	mov	r0, r4
 800e194:	f000 fc06 	bl	800e9a4 <__lshift>
 800e198:	4606      	mov	r6, r0
 800e19a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e19c:	2b00      	cmp	r3, #0
 800e19e:	d06e      	beq.n	800e27e <_dtoa_r+0x90e>
 800e1a0:	ee18 0a10 	vmov	r0, s16
 800e1a4:	4631      	mov	r1, r6
 800e1a6:	f000 fc6d 	bl	800ea84 <__mcmp>
 800e1aa:	2800      	cmp	r0, #0
 800e1ac:	da67      	bge.n	800e27e <_dtoa_r+0x90e>
 800e1ae:	9b00      	ldr	r3, [sp, #0]
 800e1b0:	3b01      	subs	r3, #1
 800e1b2:	ee18 1a10 	vmov	r1, s16
 800e1b6:	9300      	str	r3, [sp, #0]
 800e1b8:	220a      	movs	r2, #10
 800e1ba:	2300      	movs	r3, #0
 800e1bc:	4620      	mov	r0, r4
 800e1be:	f000 fa41 	bl	800e644 <__multadd>
 800e1c2:	9b08      	ldr	r3, [sp, #32]
 800e1c4:	ee08 0a10 	vmov	s16, r0
 800e1c8:	2b00      	cmp	r3, #0
 800e1ca:	f000 81b1 	beq.w	800e530 <_dtoa_r+0xbc0>
 800e1ce:	2300      	movs	r3, #0
 800e1d0:	4639      	mov	r1, r7
 800e1d2:	220a      	movs	r2, #10
 800e1d4:	4620      	mov	r0, r4
 800e1d6:	f000 fa35 	bl	800e644 <__multadd>
 800e1da:	9b02      	ldr	r3, [sp, #8]
 800e1dc:	2b00      	cmp	r3, #0
 800e1de:	4607      	mov	r7, r0
 800e1e0:	f300 808e 	bgt.w	800e300 <_dtoa_r+0x990>
 800e1e4:	9b06      	ldr	r3, [sp, #24]
 800e1e6:	2b02      	cmp	r3, #2
 800e1e8:	dc51      	bgt.n	800e28e <_dtoa_r+0x91e>
 800e1ea:	e089      	b.n	800e300 <_dtoa_r+0x990>
 800e1ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e1ee:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800e1f2:	e74b      	b.n	800e08c <_dtoa_r+0x71c>
 800e1f4:	9b03      	ldr	r3, [sp, #12]
 800e1f6:	1e5e      	subs	r6, r3, #1
 800e1f8:	9b07      	ldr	r3, [sp, #28]
 800e1fa:	42b3      	cmp	r3, r6
 800e1fc:	bfbf      	itttt	lt
 800e1fe:	9b07      	ldrlt	r3, [sp, #28]
 800e200:	9607      	strlt	r6, [sp, #28]
 800e202:	1af2      	sublt	r2, r6, r3
 800e204:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800e206:	bfb6      	itet	lt
 800e208:	189b      	addlt	r3, r3, r2
 800e20a:	1b9e      	subge	r6, r3, r6
 800e20c:	930a      	strlt	r3, [sp, #40]	; 0x28
 800e20e:	9b03      	ldr	r3, [sp, #12]
 800e210:	bfb8      	it	lt
 800e212:	2600      	movlt	r6, #0
 800e214:	2b00      	cmp	r3, #0
 800e216:	bfb7      	itett	lt
 800e218:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 800e21c:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 800e220:	1a9d      	sublt	r5, r3, r2
 800e222:	2300      	movlt	r3, #0
 800e224:	e734      	b.n	800e090 <_dtoa_r+0x720>
 800e226:	9e07      	ldr	r6, [sp, #28]
 800e228:	9d04      	ldr	r5, [sp, #16]
 800e22a:	9f08      	ldr	r7, [sp, #32]
 800e22c:	e73b      	b.n	800e0a6 <_dtoa_r+0x736>
 800e22e:	9a07      	ldr	r2, [sp, #28]
 800e230:	e767      	b.n	800e102 <_dtoa_r+0x792>
 800e232:	9b06      	ldr	r3, [sp, #24]
 800e234:	2b01      	cmp	r3, #1
 800e236:	dc18      	bgt.n	800e26a <_dtoa_r+0x8fa>
 800e238:	f1ba 0f00 	cmp.w	sl, #0
 800e23c:	d115      	bne.n	800e26a <_dtoa_r+0x8fa>
 800e23e:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800e242:	b993      	cbnz	r3, 800e26a <_dtoa_r+0x8fa>
 800e244:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800e248:	0d1b      	lsrs	r3, r3, #20
 800e24a:	051b      	lsls	r3, r3, #20
 800e24c:	b183      	cbz	r3, 800e270 <_dtoa_r+0x900>
 800e24e:	9b04      	ldr	r3, [sp, #16]
 800e250:	3301      	adds	r3, #1
 800e252:	9304      	str	r3, [sp, #16]
 800e254:	9b05      	ldr	r3, [sp, #20]
 800e256:	3301      	adds	r3, #1
 800e258:	9305      	str	r3, [sp, #20]
 800e25a:	f04f 0801 	mov.w	r8, #1
 800e25e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e260:	2b00      	cmp	r3, #0
 800e262:	f47f af6a 	bne.w	800e13a <_dtoa_r+0x7ca>
 800e266:	2001      	movs	r0, #1
 800e268:	e76f      	b.n	800e14a <_dtoa_r+0x7da>
 800e26a:	f04f 0800 	mov.w	r8, #0
 800e26e:	e7f6      	b.n	800e25e <_dtoa_r+0x8ee>
 800e270:	4698      	mov	r8, r3
 800e272:	e7f4      	b.n	800e25e <_dtoa_r+0x8ee>
 800e274:	f43f af7d 	beq.w	800e172 <_dtoa_r+0x802>
 800e278:	4618      	mov	r0, r3
 800e27a:	301c      	adds	r0, #28
 800e27c:	e772      	b.n	800e164 <_dtoa_r+0x7f4>
 800e27e:	9b03      	ldr	r3, [sp, #12]
 800e280:	2b00      	cmp	r3, #0
 800e282:	dc37      	bgt.n	800e2f4 <_dtoa_r+0x984>
 800e284:	9b06      	ldr	r3, [sp, #24]
 800e286:	2b02      	cmp	r3, #2
 800e288:	dd34      	ble.n	800e2f4 <_dtoa_r+0x984>
 800e28a:	9b03      	ldr	r3, [sp, #12]
 800e28c:	9302      	str	r3, [sp, #8]
 800e28e:	9b02      	ldr	r3, [sp, #8]
 800e290:	b96b      	cbnz	r3, 800e2ae <_dtoa_r+0x93e>
 800e292:	4631      	mov	r1, r6
 800e294:	2205      	movs	r2, #5
 800e296:	4620      	mov	r0, r4
 800e298:	f000 f9d4 	bl	800e644 <__multadd>
 800e29c:	4601      	mov	r1, r0
 800e29e:	4606      	mov	r6, r0
 800e2a0:	ee18 0a10 	vmov	r0, s16
 800e2a4:	f000 fbee 	bl	800ea84 <__mcmp>
 800e2a8:	2800      	cmp	r0, #0
 800e2aa:	f73f adbb 	bgt.w	800de24 <_dtoa_r+0x4b4>
 800e2ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e2b0:	9d01      	ldr	r5, [sp, #4]
 800e2b2:	43db      	mvns	r3, r3
 800e2b4:	9300      	str	r3, [sp, #0]
 800e2b6:	f04f 0800 	mov.w	r8, #0
 800e2ba:	4631      	mov	r1, r6
 800e2bc:	4620      	mov	r0, r4
 800e2be:	f000 f99f 	bl	800e600 <_Bfree>
 800e2c2:	2f00      	cmp	r7, #0
 800e2c4:	f43f aea4 	beq.w	800e010 <_dtoa_r+0x6a0>
 800e2c8:	f1b8 0f00 	cmp.w	r8, #0
 800e2cc:	d005      	beq.n	800e2da <_dtoa_r+0x96a>
 800e2ce:	45b8      	cmp	r8, r7
 800e2d0:	d003      	beq.n	800e2da <_dtoa_r+0x96a>
 800e2d2:	4641      	mov	r1, r8
 800e2d4:	4620      	mov	r0, r4
 800e2d6:	f000 f993 	bl	800e600 <_Bfree>
 800e2da:	4639      	mov	r1, r7
 800e2dc:	4620      	mov	r0, r4
 800e2de:	f000 f98f 	bl	800e600 <_Bfree>
 800e2e2:	e695      	b.n	800e010 <_dtoa_r+0x6a0>
 800e2e4:	2600      	movs	r6, #0
 800e2e6:	4637      	mov	r7, r6
 800e2e8:	e7e1      	b.n	800e2ae <_dtoa_r+0x93e>
 800e2ea:	9700      	str	r7, [sp, #0]
 800e2ec:	4637      	mov	r7, r6
 800e2ee:	e599      	b.n	800de24 <_dtoa_r+0x4b4>
 800e2f0:	40240000 	.word	0x40240000
 800e2f4:	9b08      	ldr	r3, [sp, #32]
 800e2f6:	2b00      	cmp	r3, #0
 800e2f8:	f000 80ca 	beq.w	800e490 <_dtoa_r+0xb20>
 800e2fc:	9b03      	ldr	r3, [sp, #12]
 800e2fe:	9302      	str	r3, [sp, #8]
 800e300:	2d00      	cmp	r5, #0
 800e302:	dd05      	ble.n	800e310 <_dtoa_r+0x9a0>
 800e304:	4639      	mov	r1, r7
 800e306:	462a      	mov	r2, r5
 800e308:	4620      	mov	r0, r4
 800e30a:	f000 fb4b 	bl	800e9a4 <__lshift>
 800e30e:	4607      	mov	r7, r0
 800e310:	f1b8 0f00 	cmp.w	r8, #0
 800e314:	d05b      	beq.n	800e3ce <_dtoa_r+0xa5e>
 800e316:	6879      	ldr	r1, [r7, #4]
 800e318:	4620      	mov	r0, r4
 800e31a:	f000 f931 	bl	800e580 <_Balloc>
 800e31e:	4605      	mov	r5, r0
 800e320:	b928      	cbnz	r0, 800e32e <_dtoa_r+0x9be>
 800e322:	4b87      	ldr	r3, [pc, #540]	; (800e540 <_dtoa_r+0xbd0>)
 800e324:	4602      	mov	r2, r0
 800e326:	f240 21ea 	movw	r1, #746	; 0x2ea
 800e32a:	f7ff bb3b 	b.w	800d9a4 <_dtoa_r+0x34>
 800e32e:	693a      	ldr	r2, [r7, #16]
 800e330:	3202      	adds	r2, #2
 800e332:	0092      	lsls	r2, r2, #2
 800e334:	f107 010c 	add.w	r1, r7, #12
 800e338:	300c      	adds	r0, #12
 800e33a:	f000 f913 	bl	800e564 <memcpy>
 800e33e:	2201      	movs	r2, #1
 800e340:	4629      	mov	r1, r5
 800e342:	4620      	mov	r0, r4
 800e344:	f000 fb2e 	bl	800e9a4 <__lshift>
 800e348:	9b01      	ldr	r3, [sp, #4]
 800e34a:	f103 0901 	add.w	r9, r3, #1
 800e34e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800e352:	4413      	add	r3, r2
 800e354:	9305      	str	r3, [sp, #20]
 800e356:	f00a 0301 	and.w	r3, sl, #1
 800e35a:	46b8      	mov	r8, r7
 800e35c:	9304      	str	r3, [sp, #16]
 800e35e:	4607      	mov	r7, r0
 800e360:	4631      	mov	r1, r6
 800e362:	ee18 0a10 	vmov	r0, s16
 800e366:	f7ff fa77 	bl	800d858 <quorem>
 800e36a:	4641      	mov	r1, r8
 800e36c:	9002      	str	r0, [sp, #8]
 800e36e:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800e372:	ee18 0a10 	vmov	r0, s16
 800e376:	f000 fb85 	bl	800ea84 <__mcmp>
 800e37a:	463a      	mov	r2, r7
 800e37c:	9003      	str	r0, [sp, #12]
 800e37e:	4631      	mov	r1, r6
 800e380:	4620      	mov	r0, r4
 800e382:	f000 fb9b 	bl	800eabc <__mdiff>
 800e386:	68c2      	ldr	r2, [r0, #12]
 800e388:	f109 3bff 	add.w	fp, r9, #4294967295
 800e38c:	4605      	mov	r5, r0
 800e38e:	bb02      	cbnz	r2, 800e3d2 <_dtoa_r+0xa62>
 800e390:	4601      	mov	r1, r0
 800e392:	ee18 0a10 	vmov	r0, s16
 800e396:	f000 fb75 	bl	800ea84 <__mcmp>
 800e39a:	4602      	mov	r2, r0
 800e39c:	4629      	mov	r1, r5
 800e39e:	4620      	mov	r0, r4
 800e3a0:	9207      	str	r2, [sp, #28]
 800e3a2:	f000 f92d 	bl	800e600 <_Bfree>
 800e3a6:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800e3aa:	ea43 0102 	orr.w	r1, r3, r2
 800e3ae:	9b04      	ldr	r3, [sp, #16]
 800e3b0:	430b      	orrs	r3, r1
 800e3b2:	464d      	mov	r5, r9
 800e3b4:	d10f      	bne.n	800e3d6 <_dtoa_r+0xa66>
 800e3b6:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800e3ba:	d02a      	beq.n	800e412 <_dtoa_r+0xaa2>
 800e3bc:	9b03      	ldr	r3, [sp, #12]
 800e3be:	2b00      	cmp	r3, #0
 800e3c0:	dd02      	ble.n	800e3c8 <_dtoa_r+0xa58>
 800e3c2:	9b02      	ldr	r3, [sp, #8]
 800e3c4:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 800e3c8:	f88b a000 	strb.w	sl, [fp]
 800e3cc:	e775      	b.n	800e2ba <_dtoa_r+0x94a>
 800e3ce:	4638      	mov	r0, r7
 800e3d0:	e7ba      	b.n	800e348 <_dtoa_r+0x9d8>
 800e3d2:	2201      	movs	r2, #1
 800e3d4:	e7e2      	b.n	800e39c <_dtoa_r+0xa2c>
 800e3d6:	9b03      	ldr	r3, [sp, #12]
 800e3d8:	2b00      	cmp	r3, #0
 800e3da:	db04      	blt.n	800e3e6 <_dtoa_r+0xa76>
 800e3dc:	9906      	ldr	r1, [sp, #24]
 800e3de:	430b      	orrs	r3, r1
 800e3e0:	9904      	ldr	r1, [sp, #16]
 800e3e2:	430b      	orrs	r3, r1
 800e3e4:	d122      	bne.n	800e42c <_dtoa_r+0xabc>
 800e3e6:	2a00      	cmp	r2, #0
 800e3e8:	ddee      	ble.n	800e3c8 <_dtoa_r+0xa58>
 800e3ea:	ee18 1a10 	vmov	r1, s16
 800e3ee:	2201      	movs	r2, #1
 800e3f0:	4620      	mov	r0, r4
 800e3f2:	f000 fad7 	bl	800e9a4 <__lshift>
 800e3f6:	4631      	mov	r1, r6
 800e3f8:	ee08 0a10 	vmov	s16, r0
 800e3fc:	f000 fb42 	bl	800ea84 <__mcmp>
 800e400:	2800      	cmp	r0, #0
 800e402:	dc03      	bgt.n	800e40c <_dtoa_r+0xa9c>
 800e404:	d1e0      	bne.n	800e3c8 <_dtoa_r+0xa58>
 800e406:	f01a 0f01 	tst.w	sl, #1
 800e40a:	d0dd      	beq.n	800e3c8 <_dtoa_r+0xa58>
 800e40c:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800e410:	d1d7      	bne.n	800e3c2 <_dtoa_r+0xa52>
 800e412:	2339      	movs	r3, #57	; 0x39
 800e414:	f88b 3000 	strb.w	r3, [fp]
 800e418:	462b      	mov	r3, r5
 800e41a:	461d      	mov	r5, r3
 800e41c:	3b01      	subs	r3, #1
 800e41e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800e422:	2a39      	cmp	r2, #57	; 0x39
 800e424:	d071      	beq.n	800e50a <_dtoa_r+0xb9a>
 800e426:	3201      	adds	r2, #1
 800e428:	701a      	strb	r2, [r3, #0]
 800e42a:	e746      	b.n	800e2ba <_dtoa_r+0x94a>
 800e42c:	2a00      	cmp	r2, #0
 800e42e:	dd07      	ble.n	800e440 <_dtoa_r+0xad0>
 800e430:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800e434:	d0ed      	beq.n	800e412 <_dtoa_r+0xaa2>
 800e436:	f10a 0301 	add.w	r3, sl, #1
 800e43a:	f88b 3000 	strb.w	r3, [fp]
 800e43e:	e73c      	b.n	800e2ba <_dtoa_r+0x94a>
 800e440:	9b05      	ldr	r3, [sp, #20]
 800e442:	f809 ac01 	strb.w	sl, [r9, #-1]
 800e446:	4599      	cmp	r9, r3
 800e448:	d047      	beq.n	800e4da <_dtoa_r+0xb6a>
 800e44a:	ee18 1a10 	vmov	r1, s16
 800e44e:	2300      	movs	r3, #0
 800e450:	220a      	movs	r2, #10
 800e452:	4620      	mov	r0, r4
 800e454:	f000 f8f6 	bl	800e644 <__multadd>
 800e458:	45b8      	cmp	r8, r7
 800e45a:	ee08 0a10 	vmov	s16, r0
 800e45e:	f04f 0300 	mov.w	r3, #0
 800e462:	f04f 020a 	mov.w	r2, #10
 800e466:	4641      	mov	r1, r8
 800e468:	4620      	mov	r0, r4
 800e46a:	d106      	bne.n	800e47a <_dtoa_r+0xb0a>
 800e46c:	f000 f8ea 	bl	800e644 <__multadd>
 800e470:	4680      	mov	r8, r0
 800e472:	4607      	mov	r7, r0
 800e474:	f109 0901 	add.w	r9, r9, #1
 800e478:	e772      	b.n	800e360 <_dtoa_r+0x9f0>
 800e47a:	f000 f8e3 	bl	800e644 <__multadd>
 800e47e:	4639      	mov	r1, r7
 800e480:	4680      	mov	r8, r0
 800e482:	2300      	movs	r3, #0
 800e484:	220a      	movs	r2, #10
 800e486:	4620      	mov	r0, r4
 800e488:	f000 f8dc 	bl	800e644 <__multadd>
 800e48c:	4607      	mov	r7, r0
 800e48e:	e7f1      	b.n	800e474 <_dtoa_r+0xb04>
 800e490:	9b03      	ldr	r3, [sp, #12]
 800e492:	9302      	str	r3, [sp, #8]
 800e494:	9d01      	ldr	r5, [sp, #4]
 800e496:	ee18 0a10 	vmov	r0, s16
 800e49a:	4631      	mov	r1, r6
 800e49c:	f7ff f9dc 	bl	800d858 <quorem>
 800e4a0:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800e4a4:	9b01      	ldr	r3, [sp, #4]
 800e4a6:	f805 ab01 	strb.w	sl, [r5], #1
 800e4aa:	1aea      	subs	r2, r5, r3
 800e4ac:	9b02      	ldr	r3, [sp, #8]
 800e4ae:	4293      	cmp	r3, r2
 800e4b0:	dd09      	ble.n	800e4c6 <_dtoa_r+0xb56>
 800e4b2:	ee18 1a10 	vmov	r1, s16
 800e4b6:	2300      	movs	r3, #0
 800e4b8:	220a      	movs	r2, #10
 800e4ba:	4620      	mov	r0, r4
 800e4bc:	f000 f8c2 	bl	800e644 <__multadd>
 800e4c0:	ee08 0a10 	vmov	s16, r0
 800e4c4:	e7e7      	b.n	800e496 <_dtoa_r+0xb26>
 800e4c6:	9b02      	ldr	r3, [sp, #8]
 800e4c8:	2b00      	cmp	r3, #0
 800e4ca:	bfc8      	it	gt
 800e4cc:	461d      	movgt	r5, r3
 800e4ce:	9b01      	ldr	r3, [sp, #4]
 800e4d0:	bfd8      	it	le
 800e4d2:	2501      	movle	r5, #1
 800e4d4:	441d      	add	r5, r3
 800e4d6:	f04f 0800 	mov.w	r8, #0
 800e4da:	ee18 1a10 	vmov	r1, s16
 800e4de:	2201      	movs	r2, #1
 800e4e0:	4620      	mov	r0, r4
 800e4e2:	f000 fa5f 	bl	800e9a4 <__lshift>
 800e4e6:	4631      	mov	r1, r6
 800e4e8:	ee08 0a10 	vmov	s16, r0
 800e4ec:	f000 faca 	bl	800ea84 <__mcmp>
 800e4f0:	2800      	cmp	r0, #0
 800e4f2:	dc91      	bgt.n	800e418 <_dtoa_r+0xaa8>
 800e4f4:	d102      	bne.n	800e4fc <_dtoa_r+0xb8c>
 800e4f6:	f01a 0f01 	tst.w	sl, #1
 800e4fa:	d18d      	bne.n	800e418 <_dtoa_r+0xaa8>
 800e4fc:	462b      	mov	r3, r5
 800e4fe:	461d      	mov	r5, r3
 800e500:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800e504:	2a30      	cmp	r2, #48	; 0x30
 800e506:	d0fa      	beq.n	800e4fe <_dtoa_r+0xb8e>
 800e508:	e6d7      	b.n	800e2ba <_dtoa_r+0x94a>
 800e50a:	9a01      	ldr	r2, [sp, #4]
 800e50c:	429a      	cmp	r2, r3
 800e50e:	d184      	bne.n	800e41a <_dtoa_r+0xaaa>
 800e510:	9b00      	ldr	r3, [sp, #0]
 800e512:	3301      	adds	r3, #1
 800e514:	9300      	str	r3, [sp, #0]
 800e516:	2331      	movs	r3, #49	; 0x31
 800e518:	7013      	strb	r3, [r2, #0]
 800e51a:	e6ce      	b.n	800e2ba <_dtoa_r+0x94a>
 800e51c:	4b09      	ldr	r3, [pc, #36]	; (800e544 <_dtoa_r+0xbd4>)
 800e51e:	f7ff ba95 	b.w	800da4c <_dtoa_r+0xdc>
 800e522:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e524:	2b00      	cmp	r3, #0
 800e526:	f47f aa6e 	bne.w	800da06 <_dtoa_r+0x96>
 800e52a:	4b07      	ldr	r3, [pc, #28]	; (800e548 <_dtoa_r+0xbd8>)
 800e52c:	f7ff ba8e 	b.w	800da4c <_dtoa_r+0xdc>
 800e530:	9b02      	ldr	r3, [sp, #8]
 800e532:	2b00      	cmp	r3, #0
 800e534:	dcae      	bgt.n	800e494 <_dtoa_r+0xb24>
 800e536:	9b06      	ldr	r3, [sp, #24]
 800e538:	2b02      	cmp	r3, #2
 800e53a:	f73f aea8 	bgt.w	800e28e <_dtoa_r+0x91e>
 800e53e:	e7a9      	b.n	800e494 <_dtoa_r+0xb24>
 800e540:	080113db 	.word	0x080113db
 800e544:	08011338 	.word	0x08011338
 800e548:	0801135c 	.word	0x0801135c

0800e54c <_localeconv_r>:
 800e54c:	4800      	ldr	r0, [pc, #0]	; (800e550 <_localeconv_r+0x4>)
 800e54e:	4770      	bx	lr
 800e550:	20000294 	.word	0x20000294

0800e554 <malloc>:
 800e554:	4b02      	ldr	r3, [pc, #8]	; (800e560 <malloc+0xc>)
 800e556:	4601      	mov	r1, r0
 800e558:	6818      	ldr	r0, [r3, #0]
 800e55a:	f000 bc17 	b.w	800ed8c <_malloc_r>
 800e55e:	bf00      	nop
 800e560:	20000140 	.word	0x20000140

0800e564 <memcpy>:
 800e564:	440a      	add	r2, r1
 800e566:	4291      	cmp	r1, r2
 800e568:	f100 33ff 	add.w	r3, r0, #4294967295
 800e56c:	d100      	bne.n	800e570 <memcpy+0xc>
 800e56e:	4770      	bx	lr
 800e570:	b510      	push	{r4, lr}
 800e572:	f811 4b01 	ldrb.w	r4, [r1], #1
 800e576:	f803 4f01 	strb.w	r4, [r3, #1]!
 800e57a:	4291      	cmp	r1, r2
 800e57c:	d1f9      	bne.n	800e572 <memcpy+0xe>
 800e57e:	bd10      	pop	{r4, pc}

0800e580 <_Balloc>:
 800e580:	b570      	push	{r4, r5, r6, lr}
 800e582:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800e584:	4604      	mov	r4, r0
 800e586:	460d      	mov	r5, r1
 800e588:	b976      	cbnz	r6, 800e5a8 <_Balloc+0x28>
 800e58a:	2010      	movs	r0, #16
 800e58c:	f7ff ffe2 	bl	800e554 <malloc>
 800e590:	4602      	mov	r2, r0
 800e592:	6260      	str	r0, [r4, #36]	; 0x24
 800e594:	b920      	cbnz	r0, 800e5a0 <_Balloc+0x20>
 800e596:	4b18      	ldr	r3, [pc, #96]	; (800e5f8 <_Balloc+0x78>)
 800e598:	4818      	ldr	r0, [pc, #96]	; (800e5fc <_Balloc+0x7c>)
 800e59a:	2166      	movs	r1, #102	; 0x66
 800e59c:	f000 fdd6 	bl	800f14c <__assert_func>
 800e5a0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800e5a4:	6006      	str	r6, [r0, #0]
 800e5a6:	60c6      	str	r6, [r0, #12]
 800e5a8:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800e5aa:	68f3      	ldr	r3, [r6, #12]
 800e5ac:	b183      	cbz	r3, 800e5d0 <_Balloc+0x50>
 800e5ae:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e5b0:	68db      	ldr	r3, [r3, #12]
 800e5b2:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800e5b6:	b9b8      	cbnz	r0, 800e5e8 <_Balloc+0x68>
 800e5b8:	2101      	movs	r1, #1
 800e5ba:	fa01 f605 	lsl.w	r6, r1, r5
 800e5be:	1d72      	adds	r2, r6, #5
 800e5c0:	0092      	lsls	r2, r2, #2
 800e5c2:	4620      	mov	r0, r4
 800e5c4:	f000 fb60 	bl	800ec88 <_calloc_r>
 800e5c8:	b160      	cbz	r0, 800e5e4 <_Balloc+0x64>
 800e5ca:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800e5ce:	e00e      	b.n	800e5ee <_Balloc+0x6e>
 800e5d0:	2221      	movs	r2, #33	; 0x21
 800e5d2:	2104      	movs	r1, #4
 800e5d4:	4620      	mov	r0, r4
 800e5d6:	f000 fb57 	bl	800ec88 <_calloc_r>
 800e5da:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e5dc:	60f0      	str	r0, [r6, #12]
 800e5de:	68db      	ldr	r3, [r3, #12]
 800e5e0:	2b00      	cmp	r3, #0
 800e5e2:	d1e4      	bne.n	800e5ae <_Balloc+0x2e>
 800e5e4:	2000      	movs	r0, #0
 800e5e6:	bd70      	pop	{r4, r5, r6, pc}
 800e5e8:	6802      	ldr	r2, [r0, #0]
 800e5ea:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800e5ee:	2300      	movs	r3, #0
 800e5f0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800e5f4:	e7f7      	b.n	800e5e6 <_Balloc+0x66>
 800e5f6:	bf00      	nop
 800e5f8:	08011369 	.word	0x08011369
 800e5fc:	080113ec 	.word	0x080113ec

0800e600 <_Bfree>:
 800e600:	b570      	push	{r4, r5, r6, lr}
 800e602:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800e604:	4605      	mov	r5, r0
 800e606:	460c      	mov	r4, r1
 800e608:	b976      	cbnz	r6, 800e628 <_Bfree+0x28>
 800e60a:	2010      	movs	r0, #16
 800e60c:	f7ff ffa2 	bl	800e554 <malloc>
 800e610:	4602      	mov	r2, r0
 800e612:	6268      	str	r0, [r5, #36]	; 0x24
 800e614:	b920      	cbnz	r0, 800e620 <_Bfree+0x20>
 800e616:	4b09      	ldr	r3, [pc, #36]	; (800e63c <_Bfree+0x3c>)
 800e618:	4809      	ldr	r0, [pc, #36]	; (800e640 <_Bfree+0x40>)
 800e61a:	218a      	movs	r1, #138	; 0x8a
 800e61c:	f000 fd96 	bl	800f14c <__assert_func>
 800e620:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800e624:	6006      	str	r6, [r0, #0]
 800e626:	60c6      	str	r6, [r0, #12]
 800e628:	b13c      	cbz	r4, 800e63a <_Bfree+0x3a>
 800e62a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800e62c:	6862      	ldr	r2, [r4, #4]
 800e62e:	68db      	ldr	r3, [r3, #12]
 800e630:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800e634:	6021      	str	r1, [r4, #0]
 800e636:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800e63a:	bd70      	pop	{r4, r5, r6, pc}
 800e63c:	08011369 	.word	0x08011369
 800e640:	080113ec 	.word	0x080113ec

0800e644 <__multadd>:
 800e644:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e648:	690d      	ldr	r5, [r1, #16]
 800e64a:	4607      	mov	r7, r0
 800e64c:	460c      	mov	r4, r1
 800e64e:	461e      	mov	r6, r3
 800e650:	f101 0c14 	add.w	ip, r1, #20
 800e654:	2000      	movs	r0, #0
 800e656:	f8dc 3000 	ldr.w	r3, [ip]
 800e65a:	b299      	uxth	r1, r3
 800e65c:	fb02 6101 	mla	r1, r2, r1, r6
 800e660:	0c1e      	lsrs	r6, r3, #16
 800e662:	0c0b      	lsrs	r3, r1, #16
 800e664:	fb02 3306 	mla	r3, r2, r6, r3
 800e668:	b289      	uxth	r1, r1
 800e66a:	3001      	adds	r0, #1
 800e66c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800e670:	4285      	cmp	r5, r0
 800e672:	f84c 1b04 	str.w	r1, [ip], #4
 800e676:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800e67a:	dcec      	bgt.n	800e656 <__multadd+0x12>
 800e67c:	b30e      	cbz	r6, 800e6c2 <__multadd+0x7e>
 800e67e:	68a3      	ldr	r3, [r4, #8]
 800e680:	42ab      	cmp	r3, r5
 800e682:	dc19      	bgt.n	800e6b8 <__multadd+0x74>
 800e684:	6861      	ldr	r1, [r4, #4]
 800e686:	4638      	mov	r0, r7
 800e688:	3101      	adds	r1, #1
 800e68a:	f7ff ff79 	bl	800e580 <_Balloc>
 800e68e:	4680      	mov	r8, r0
 800e690:	b928      	cbnz	r0, 800e69e <__multadd+0x5a>
 800e692:	4602      	mov	r2, r0
 800e694:	4b0c      	ldr	r3, [pc, #48]	; (800e6c8 <__multadd+0x84>)
 800e696:	480d      	ldr	r0, [pc, #52]	; (800e6cc <__multadd+0x88>)
 800e698:	21b5      	movs	r1, #181	; 0xb5
 800e69a:	f000 fd57 	bl	800f14c <__assert_func>
 800e69e:	6922      	ldr	r2, [r4, #16]
 800e6a0:	3202      	adds	r2, #2
 800e6a2:	f104 010c 	add.w	r1, r4, #12
 800e6a6:	0092      	lsls	r2, r2, #2
 800e6a8:	300c      	adds	r0, #12
 800e6aa:	f7ff ff5b 	bl	800e564 <memcpy>
 800e6ae:	4621      	mov	r1, r4
 800e6b0:	4638      	mov	r0, r7
 800e6b2:	f7ff ffa5 	bl	800e600 <_Bfree>
 800e6b6:	4644      	mov	r4, r8
 800e6b8:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800e6bc:	3501      	adds	r5, #1
 800e6be:	615e      	str	r6, [r3, #20]
 800e6c0:	6125      	str	r5, [r4, #16]
 800e6c2:	4620      	mov	r0, r4
 800e6c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e6c8:	080113db 	.word	0x080113db
 800e6cc:	080113ec 	.word	0x080113ec

0800e6d0 <__hi0bits>:
 800e6d0:	0c03      	lsrs	r3, r0, #16
 800e6d2:	041b      	lsls	r3, r3, #16
 800e6d4:	b9d3      	cbnz	r3, 800e70c <__hi0bits+0x3c>
 800e6d6:	0400      	lsls	r0, r0, #16
 800e6d8:	2310      	movs	r3, #16
 800e6da:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800e6de:	bf04      	itt	eq
 800e6e0:	0200      	lsleq	r0, r0, #8
 800e6e2:	3308      	addeq	r3, #8
 800e6e4:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800e6e8:	bf04      	itt	eq
 800e6ea:	0100      	lsleq	r0, r0, #4
 800e6ec:	3304      	addeq	r3, #4
 800e6ee:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800e6f2:	bf04      	itt	eq
 800e6f4:	0080      	lsleq	r0, r0, #2
 800e6f6:	3302      	addeq	r3, #2
 800e6f8:	2800      	cmp	r0, #0
 800e6fa:	db05      	blt.n	800e708 <__hi0bits+0x38>
 800e6fc:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800e700:	f103 0301 	add.w	r3, r3, #1
 800e704:	bf08      	it	eq
 800e706:	2320      	moveq	r3, #32
 800e708:	4618      	mov	r0, r3
 800e70a:	4770      	bx	lr
 800e70c:	2300      	movs	r3, #0
 800e70e:	e7e4      	b.n	800e6da <__hi0bits+0xa>

0800e710 <__lo0bits>:
 800e710:	6803      	ldr	r3, [r0, #0]
 800e712:	f013 0207 	ands.w	r2, r3, #7
 800e716:	4601      	mov	r1, r0
 800e718:	d00b      	beq.n	800e732 <__lo0bits+0x22>
 800e71a:	07da      	lsls	r2, r3, #31
 800e71c:	d423      	bmi.n	800e766 <__lo0bits+0x56>
 800e71e:	0798      	lsls	r0, r3, #30
 800e720:	bf49      	itett	mi
 800e722:	085b      	lsrmi	r3, r3, #1
 800e724:	089b      	lsrpl	r3, r3, #2
 800e726:	2001      	movmi	r0, #1
 800e728:	600b      	strmi	r3, [r1, #0]
 800e72a:	bf5c      	itt	pl
 800e72c:	600b      	strpl	r3, [r1, #0]
 800e72e:	2002      	movpl	r0, #2
 800e730:	4770      	bx	lr
 800e732:	b298      	uxth	r0, r3
 800e734:	b9a8      	cbnz	r0, 800e762 <__lo0bits+0x52>
 800e736:	0c1b      	lsrs	r3, r3, #16
 800e738:	2010      	movs	r0, #16
 800e73a:	b2da      	uxtb	r2, r3
 800e73c:	b90a      	cbnz	r2, 800e742 <__lo0bits+0x32>
 800e73e:	3008      	adds	r0, #8
 800e740:	0a1b      	lsrs	r3, r3, #8
 800e742:	071a      	lsls	r2, r3, #28
 800e744:	bf04      	itt	eq
 800e746:	091b      	lsreq	r3, r3, #4
 800e748:	3004      	addeq	r0, #4
 800e74a:	079a      	lsls	r2, r3, #30
 800e74c:	bf04      	itt	eq
 800e74e:	089b      	lsreq	r3, r3, #2
 800e750:	3002      	addeq	r0, #2
 800e752:	07da      	lsls	r2, r3, #31
 800e754:	d403      	bmi.n	800e75e <__lo0bits+0x4e>
 800e756:	085b      	lsrs	r3, r3, #1
 800e758:	f100 0001 	add.w	r0, r0, #1
 800e75c:	d005      	beq.n	800e76a <__lo0bits+0x5a>
 800e75e:	600b      	str	r3, [r1, #0]
 800e760:	4770      	bx	lr
 800e762:	4610      	mov	r0, r2
 800e764:	e7e9      	b.n	800e73a <__lo0bits+0x2a>
 800e766:	2000      	movs	r0, #0
 800e768:	4770      	bx	lr
 800e76a:	2020      	movs	r0, #32
 800e76c:	4770      	bx	lr
	...

0800e770 <__i2b>:
 800e770:	b510      	push	{r4, lr}
 800e772:	460c      	mov	r4, r1
 800e774:	2101      	movs	r1, #1
 800e776:	f7ff ff03 	bl	800e580 <_Balloc>
 800e77a:	4602      	mov	r2, r0
 800e77c:	b928      	cbnz	r0, 800e78a <__i2b+0x1a>
 800e77e:	4b05      	ldr	r3, [pc, #20]	; (800e794 <__i2b+0x24>)
 800e780:	4805      	ldr	r0, [pc, #20]	; (800e798 <__i2b+0x28>)
 800e782:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800e786:	f000 fce1 	bl	800f14c <__assert_func>
 800e78a:	2301      	movs	r3, #1
 800e78c:	6144      	str	r4, [r0, #20]
 800e78e:	6103      	str	r3, [r0, #16]
 800e790:	bd10      	pop	{r4, pc}
 800e792:	bf00      	nop
 800e794:	080113db 	.word	0x080113db
 800e798:	080113ec 	.word	0x080113ec

0800e79c <__multiply>:
 800e79c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e7a0:	4691      	mov	r9, r2
 800e7a2:	690a      	ldr	r2, [r1, #16]
 800e7a4:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800e7a8:	429a      	cmp	r2, r3
 800e7aa:	bfb8      	it	lt
 800e7ac:	460b      	movlt	r3, r1
 800e7ae:	460c      	mov	r4, r1
 800e7b0:	bfbc      	itt	lt
 800e7b2:	464c      	movlt	r4, r9
 800e7b4:	4699      	movlt	r9, r3
 800e7b6:	6927      	ldr	r7, [r4, #16]
 800e7b8:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800e7bc:	68a3      	ldr	r3, [r4, #8]
 800e7be:	6861      	ldr	r1, [r4, #4]
 800e7c0:	eb07 060a 	add.w	r6, r7, sl
 800e7c4:	42b3      	cmp	r3, r6
 800e7c6:	b085      	sub	sp, #20
 800e7c8:	bfb8      	it	lt
 800e7ca:	3101      	addlt	r1, #1
 800e7cc:	f7ff fed8 	bl	800e580 <_Balloc>
 800e7d0:	b930      	cbnz	r0, 800e7e0 <__multiply+0x44>
 800e7d2:	4602      	mov	r2, r0
 800e7d4:	4b44      	ldr	r3, [pc, #272]	; (800e8e8 <__multiply+0x14c>)
 800e7d6:	4845      	ldr	r0, [pc, #276]	; (800e8ec <__multiply+0x150>)
 800e7d8:	f240 115d 	movw	r1, #349	; 0x15d
 800e7dc:	f000 fcb6 	bl	800f14c <__assert_func>
 800e7e0:	f100 0514 	add.w	r5, r0, #20
 800e7e4:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800e7e8:	462b      	mov	r3, r5
 800e7ea:	2200      	movs	r2, #0
 800e7ec:	4543      	cmp	r3, r8
 800e7ee:	d321      	bcc.n	800e834 <__multiply+0x98>
 800e7f0:	f104 0314 	add.w	r3, r4, #20
 800e7f4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800e7f8:	f109 0314 	add.w	r3, r9, #20
 800e7fc:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800e800:	9202      	str	r2, [sp, #8]
 800e802:	1b3a      	subs	r2, r7, r4
 800e804:	3a15      	subs	r2, #21
 800e806:	f022 0203 	bic.w	r2, r2, #3
 800e80a:	3204      	adds	r2, #4
 800e80c:	f104 0115 	add.w	r1, r4, #21
 800e810:	428f      	cmp	r7, r1
 800e812:	bf38      	it	cc
 800e814:	2204      	movcc	r2, #4
 800e816:	9201      	str	r2, [sp, #4]
 800e818:	9a02      	ldr	r2, [sp, #8]
 800e81a:	9303      	str	r3, [sp, #12]
 800e81c:	429a      	cmp	r2, r3
 800e81e:	d80c      	bhi.n	800e83a <__multiply+0x9e>
 800e820:	2e00      	cmp	r6, #0
 800e822:	dd03      	ble.n	800e82c <__multiply+0x90>
 800e824:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800e828:	2b00      	cmp	r3, #0
 800e82a:	d05a      	beq.n	800e8e2 <__multiply+0x146>
 800e82c:	6106      	str	r6, [r0, #16]
 800e82e:	b005      	add	sp, #20
 800e830:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e834:	f843 2b04 	str.w	r2, [r3], #4
 800e838:	e7d8      	b.n	800e7ec <__multiply+0x50>
 800e83a:	f8b3 a000 	ldrh.w	sl, [r3]
 800e83e:	f1ba 0f00 	cmp.w	sl, #0
 800e842:	d024      	beq.n	800e88e <__multiply+0xf2>
 800e844:	f104 0e14 	add.w	lr, r4, #20
 800e848:	46a9      	mov	r9, r5
 800e84a:	f04f 0c00 	mov.w	ip, #0
 800e84e:	f85e 2b04 	ldr.w	r2, [lr], #4
 800e852:	f8d9 1000 	ldr.w	r1, [r9]
 800e856:	fa1f fb82 	uxth.w	fp, r2
 800e85a:	b289      	uxth	r1, r1
 800e85c:	fb0a 110b 	mla	r1, sl, fp, r1
 800e860:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800e864:	f8d9 2000 	ldr.w	r2, [r9]
 800e868:	4461      	add	r1, ip
 800e86a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800e86e:	fb0a c20b 	mla	r2, sl, fp, ip
 800e872:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800e876:	b289      	uxth	r1, r1
 800e878:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800e87c:	4577      	cmp	r7, lr
 800e87e:	f849 1b04 	str.w	r1, [r9], #4
 800e882:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800e886:	d8e2      	bhi.n	800e84e <__multiply+0xb2>
 800e888:	9a01      	ldr	r2, [sp, #4]
 800e88a:	f845 c002 	str.w	ip, [r5, r2]
 800e88e:	9a03      	ldr	r2, [sp, #12]
 800e890:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800e894:	3304      	adds	r3, #4
 800e896:	f1b9 0f00 	cmp.w	r9, #0
 800e89a:	d020      	beq.n	800e8de <__multiply+0x142>
 800e89c:	6829      	ldr	r1, [r5, #0]
 800e89e:	f104 0c14 	add.w	ip, r4, #20
 800e8a2:	46ae      	mov	lr, r5
 800e8a4:	f04f 0a00 	mov.w	sl, #0
 800e8a8:	f8bc b000 	ldrh.w	fp, [ip]
 800e8ac:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800e8b0:	fb09 220b 	mla	r2, r9, fp, r2
 800e8b4:	4492      	add	sl, r2
 800e8b6:	b289      	uxth	r1, r1
 800e8b8:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800e8bc:	f84e 1b04 	str.w	r1, [lr], #4
 800e8c0:	f85c 2b04 	ldr.w	r2, [ip], #4
 800e8c4:	f8be 1000 	ldrh.w	r1, [lr]
 800e8c8:	0c12      	lsrs	r2, r2, #16
 800e8ca:	fb09 1102 	mla	r1, r9, r2, r1
 800e8ce:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800e8d2:	4567      	cmp	r7, ip
 800e8d4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800e8d8:	d8e6      	bhi.n	800e8a8 <__multiply+0x10c>
 800e8da:	9a01      	ldr	r2, [sp, #4]
 800e8dc:	50a9      	str	r1, [r5, r2]
 800e8de:	3504      	adds	r5, #4
 800e8e0:	e79a      	b.n	800e818 <__multiply+0x7c>
 800e8e2:	3e01      	subs	r6, #1
 800e8e4:	e79c      	b.n	800e820 <__multiply+0x84>
 800e8e6:	bf00      	nop
 800e8e8:	080113db 	.word	0x080113db
 800e8ec:	080113ec 	.word	0x080113ec

0800e8f0 <__pow5mult>:
 800e8f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e8f4:	4615      	mov	r5, r2
 800e8f6:	f012 0203 	ands.w	r2, r2, #3
 800e8fa:	4606      	mov	r6, r0
 800e8fc:	460f      	mov	r7, r1
 800e8fe:	d007      	beq.n	800e910 <__pow5mult+0x20>
 800e900:	4c25      	ldr	r4, [pc, #148]	; (800e998 <__pow5mult+0xa8>)
 800e902:	3a01      	subs	r2, #1
 800e904:	2300      	movs	r3, #0
 800e906:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800e90a:	f7ff fe9b 	bl	800e644 <__multadd>
 800e90e:	4607      	mov	r7, r0
 800e910:	10ad      	asrs	r5, r5, #2
 800e912:	d03d      	beq.n	800e990 <__pow5mult+0xa0>
 800e914:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800e916:	b97c      	cbnz	r4, 800e938 <__pow5mult+0x48>
 800e918:	2010      	movs	r0, #16
 800e91a:	f7ff fe1b 	bl	800e554 <malloc>
 800e91e:	4602      	mov	r2, r0
 800e920:	6270      	str	r0, [r6, #36]	; 0x24
 800e922:	b928      	cbnz	r0, 800e930 <__pow5mult+0x40>
 800e924:	4b1d      	ldr	r3, [pc, #116]	; (800e99c <__pow5mult+0xac>)
 800e926:	481e      	ldr	r0, [pc, #120]	; (800e9a0 <__pow5mult+0xb0>)
 800e928:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800e92c:	f000 fc0e 	bl	800f14c <__assert_func>
 800e930:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800e934:	6004      	str	r4, [r0, #0]
 800e936:	60c4      	str	r4, [r0, #12]
 800e938:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800e93c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800e940:	b94c      	cbnz	r4, 800e956 <__pow5mult+0x66>
 800e942:	f240 2171 	movw	r1, #625	; 0x271
 800e946:	4630      	mov	r0, r6
 800e948:	f7ff ff12 	bl	800e770 <__i2b>
 800e94c:	2300      	movs	r3, #0
 800e94e:	f8c8 0008 	str.w	r0, [r8, #8]
 800e952:	4604      	mov	r4, r0
 800e954:	6003      	str	r3, [r0, #0]
 800e956:	f04f 0900 	mov.w	r9, #0
 800e95a:	07eb      	lsls	r3, r5, #31
 800e95c:	d50a      	bpl.n	800e974 <__pow5mult+0x84>
 800e95e:	4639      	mov	r1, r7
 800e960:	4622      	mov	r2, r4
 800e962:	4630      	mov	r0, r6
 800e964:	f7ff ff1a 	bl	800e79c <__multiply>
 800e968:	4639      	mov	r1, r7
 800e96a:	4680      	mov	r8, r0
 800e96c:	4630      	mov	r0, r6
 800e96e:	f7ff fe47 	bl	800e600 <_Bfree>
 800e972:	4647      	mov	r7, r8
 800e974:	106d      	asrs	r5, r5, #1
 800e976:	d00b      	beq.n	800e990 <__pow5mult+0xa0>
 800e978:	6820      	ldr	r0, [r4, #0]
 800e97a:	b938      	cbnz	r0, 800e98c <__pow5mult+0x9c>
 800e97c:	4622      	mov	r2, r4
 800e97e:	4621      	mov	r1, r4
 800e980:	4630      	mov	r0, r6
 800e982:	f7ff ff0b 	bl	800e79c <__multiply>
 800e986:	6020      	str	r0, [r4, #0]
 800e988:	f8c0 9000 	str.w	r9, [r0]
 800e98c:	4604      	mov	r4, r0
 800e98e:	e7e4      	b.n	800e95a <__pow5mult+0x6a>
 800e990:	4638      	mov	r0, r7
 800e992:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e996:	bf00      	nop
 800e998:	08011538 	.word	0x08011538
 800e99c:	08011369 	.word	0x08011369
 800e9a0:	080113ec 	.word	0x080113ec

0800e9a4 <__lshift>:
 800e9a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e9a8:	460c      	mov	r4, r1
 800e9aa:	6849      	ldr	r1, [r1, #4]
 800e9ac:	6923      	ldr	r3, [r4, #16]
 800e9ae:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800e9b2:	68a3      	ldr	r3, [r4, #8]
 800e9b4:	4607      	mov	r7, r0
 800e9b6:	4691      	mov	r9, r2
 800e9b8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800e9bc:	f108 0601 	add.w	r6, r8, #1
 800e9c0:	42b3      	cmp	r3, r6
 800e9c2:	db0b      	blt.n	800e9dc <__lshift+0x38>
 800e9c4:	4638      	mov	r0, r7
 800e9c6:	f7ff fddb 	bl	800e580 <_Balloc>
 800e9ca:	4605      	mov	r5, r0
 800e9cc:	b948      	cbnz	r0, 800e9e2 <__lshift+0x3e>
 800e9ce:	4602      	mov	r2, r0
 800e9d0:	4b2a      	ldr	r3, [pc, #168]	; (800ea7c <__lshift+0xd8>)
 800e9d2:	482b      	ldr	r0, [pc, #172]	; (800ea80 <__lshift+0xdc>)
 800e9d4:	f240 11d9 	movw	r1, #473	; 0x1d9
 800e9d8:	f000 fbb8 	bl	800f14c <__assert_func>
 800e9dc:	3101      	adds	r1, #1
 800e9de:	005b      	lsls	r3, r3, #1
 800e9e0:	e7ee      	b.n	800e9c0 <__lshift+0x1c>
 800e9e2:	2300      	movs	r3, #0
 800e9e4:	f100 0114 	add.w	r1, r0, #20
 800e9e8:	f100 0210 	add.w	r2, r0, #16
 800e9ec:	4618      	mov	r0, r3
 800e9ee:	4553      	cmp	r3, sl
 800e9f0:	db37      	blt.n	800ea62 <__lshift+0xbe>
 800e9f2:	6920      	ldr	r0, [r4, #16]
 800e9f4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800e9f8:	f104 0314 	add.w	r3, r4, #20
 800e9fc:	f019 091f 	ands.w	r9, r9, #31
 800ea00:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800ea04:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800ea08:	d02f      	beq.n	800ea6a <__lshift+0xc6>
 800ea0a:	f1c9 0e20 	rsb	lr, r9, #32
 800ea0e:	468a      	mov	sl, r1
 800ea10:	f04f 0c00 	mov.w	ip, #0
 800ea14:	681a      	ldr	r2, [r3, #0]
 800ea16:	fa02 f209 	lsl.w	r2, r2, r9
 800ea1a:	ea42 020c 	orr.w	r2, r2, ip
 800ea1e:	f84a 2b04 	str.w	r2, [sl], #4
 800ea22:	f853 2b04 	ldr.w	r2, [r3], #4
 800ea26:	4298      	cmp	r0, r3
 800ea28:	fa22 fc0e 	lsr.w	ip, r2, lr
 800ea2c:	d8f2      	bhi.n	800ea14 <__lshift+0x70>
 800ea2e:	1b03      	subs	r3, r0, r4
 800ea30:	3b15      	subs	r3, #21
 800ea32:	f023 0303 	bic.w	r3, r3, #3
 800ea36:	3304      	adds	r3, #4
 800ea38:	f104 0215 	add.w	r2, r4, #21
 800ea3c:	4290      	cmp	r0, r2
 800ea3e:	bf38      	it	cc
 800ea40:	2304      	movcc	r3, #4
 800ea42:	f841 c003 	str.w	ip, [r1, r3]
 800ea46:	f1bc 0f00 	cmp.w	ip, #0
 800ea4a:	d001      	beq.n	800ea50 <__lshift+0xac>
 800ea4c:	f108 0602 	add.w	r6, r8, #2
 800ea50:	3e01      	subs	r6, #1
 800ea52:	4638      	mov	r0, r7
 800ea54:	612e      	str	r6, [r5, #16]
 800ea56:	4621      	mov	r1, r4
 800ea58:	f7ff fdd2 	bl	800e600 <_Bfree>
 800ea5c:	4628      	mov	r0, r5
 800ea5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ea62:	f842 0f04 	str.w	r0, [r2, #4]!
 800ea66:	3301      	adds	r3, #1
 800ea68:	e7c1      	b.n	800e9ee <__lshift+0x4a>
 800ea6a:	3904      	subs	r1, #4
 800ea6c:	f853 2b04 	ldr.w	r2, [r3], #4
 800ea70:	f841 2f04 	str.w	r2, [r1, #4]!
 800ea74:	4298      	cmp	r0, r3
 800ea76:	d8f9      	bhi.n	800ea6c <__lshift+0xc8>
 800ea78:	e7ea      	b.n	800ea50 <__lshift+0xac>
 800ea7a:	bf00      	nop
 800ea7c:	080113db 	.word	0x080113db
 800ea80:	080113ec 	.word	0x080113ec

0800ea84 <__mcmp>:
 800ea84:	b530      	push	{r4, r5, lr}
 800ea86:	6902      	ldr	r2, [r0, #16]
 800ea88:	690c      	ldr	r4, [r1, #16]
 800ea8a:	1b12      	subs	r2, r2, r4
 800ea8c:	d10e      	bne.n	800eaac <__mcmp+0x28>
 800ea8e:	f100 0314 	add.w	r3, r0, #20
 800ea92:	3114      	adds	r1, #20
 800ea94:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800ea98:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800ea9c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800eaa0:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800eaa4:	42a5      	cmp	r5, r4
 800eaa6:	d003      	beq.n	800eab0 <__mcmp+0x2c>
 800eaa8:	d305      	bcc.n	800eab6 <__mcmp+0x32>
 800eaaa:	2201      	movs	r2, #1
 800eaac:	4610      	mov	r0, r2
 800eaae:	bd30      	pop	{r4, r5, pc}
 800eab0:	4283      	cmp	r3, r0
 800eab2:	d3f3      	bcc.n	800ea9c <__mcmp+0x18>
 800eab4:	e7fa      	b.n	800eaac <__mcmp+0x28>
 800eab6:	f04f 32ff 	mov.w	r2, #4294967295
 800eaba:	e7f7      	b.n	800eaac <__mcmp+0x28>

0800eabc <__mdiff>:
 800eabc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eac0:	460c      	mov	r4, r1
 800eac2:	4606      	mov	r6, r0
 800eac4:	4611      	mov	r1, r2
 800eac6:	4620      	mov	r0, r4
 800eac8:	4690      	mov	r8, r2
 800eaca:	f7ff ffdb 	bl	800ea84 <__mcmp>
 800eace:	1e05      	subs	r5, r0, #0
 800ead0:	d110      	bne.n	800eaf4 <__mdiff+0x38>
 800ead2:	4629      	mov	r1, r5
 800ead4:	4630      	mov	r0, r6
 800ead6:	f7ff fd53 	bl	800e580 <_Balloc>
 800eada:	b930      	cbnz	r0, 800eaea <__mdiff+0x2e>
 800eadc:	4b3a      	ldr	r3, [pc, #232]	; (800ebc8 <__mdiff+0x10c>)
 800eade:	4602      	mov	r2, r0
 800eae0:	f240 2132 	movw	r1, #562	; 0x232
 800eae4:	4839      	ldr	r0, [pc, #228]	; (800ebcc <__mdiff+0x110>)
 800eae6:	f000 fb31 	bl	800f14c <__assert_func>
 800eaea:	2301      	movs	r3, #1
 800eaec:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800eaf0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eaf4:	bfa4      	itt	ge
 800eaf6:	4643      	movge	r3, r8
 800eaf8:	46a0      	movge	r8, r4
 800eafa:	4630      	mov	r0, r6
 800eafc:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800eb00:	bfa6      	itte	ge
 800eb02:	461c      	movge	r4, r3
 800eb04:	2500      	movge	r5, #0
 800eb06:	2501      	movlt	r5, #1
 800eb08:	f7ff fd3a 	bl	800e580 <_Balloc>
 800eb0c:	b920      	cbnz	r0, 800eb18 <__mdiff+0x5c>
 800eb0e:	4b2e      	ldr	r3, [pc, #184]	; (800ebc8 <__mdiff+0x10c>)
 800eb10:	4602      	mov	r2, r0
 800eb12:	f44f 7110 	mov.w	r1, #576	; 0x240
 800eb16:	e7e5      	b.n	800eae4 <__mdiff+0x28>
 800eb18:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800eb1c:	6926      	ldr	r6, [r4, #16]
 800eb1e:	60c5      	str	r5, [r0, #12]
 800eb20:	f104 0914 	add.w	r9, r4, #20
 800eb24:	f108 0514 	add.w	r5, r8, #20
 800eb28:	f100 0e14 	add.w	lr, r0, #20
 800eb2c:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800eb30:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800eb34:	f108 0210 	add.w	r2, r8, #16
 800eb38:	46f2      	mov	sl, lr
 800eb3a:	2100      	movs	r1, #0
 800eb3c:	f859 3b04 	ldr.w	r3, [r9], #4
 800eb40:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800eb44:	fa1f f883 	uxth.w	r8, r3
 800eb48:	fa11 f18b 	uxtah	r1, r1, fp
 800eb4c:	0c1b      	lsrs	r3, r3, #16
 800eb4e:	eba1 0808 	sub.w	r8, r1, r8
 800eb52:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800eb56:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800eb5a:	fa1f f888 	uxth.w	r8, r8
 800eb5e:	1419      	asrs	r1, r3, #16
 800eb60:	454e      	cmp	r6, r9
 800eb62:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800eb66:	f84a 3b04 	str.w	r3, [sl], #4
 800eb6a:	d8e7      	bhi.n	800eb3c <__mdiff+0x80>
 800eb6c:	1b33      	subs	r3, r6, r4
 800eb6e:	3b15      	subs	r3, #21
 800eb70:	f023 0303 	bic.w	r3, r3, #3
 800eb74:	3304      	adds	r3, #4
 800eb76:	3415      	adds	r4, #21
 800eb78:	42a6      	cmp	r6, r4
 800eb7a:	bf38      	it	cc
 800eb7c:	2304      	movcc	r3, #4
 800eb7e:	441d      	add	r5, r3
 800eb80:	4473      	add	r3, lr
 800eb82:	469e      	mov	lr, r3
 800eb84:	462e      	mov	r6, r5
 800eb86:	4566      	cmp	r6, ip
 800eb88:	d30e      	bcc.n	800eba8 <__mdiff+0xec>
 800eb8a:	f10c 0203 	add.w	r2, ip, #3
 800eb8e:	1b52      	subs	r2, r2, r5
 800eb90:	f022 0203 	bic.w	r2, r2, #3
 800eb94:	3d03      	subs	r5, #3
 800eb96:	45ac      	cmp	ip, r5
 800eb98:	bf38      	it	cc
 800eb9a:	2200      	movcc	r2, #0
 800eb9c:	441a      	add	r2, r3
 800eb9e:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800eba2:	b17b      	cbz	r3, 800ebc4 <__mdiff+0x108>
 800eba4:	6107      	str	r7, [r0, #16]
 800eba6:	e7a3      	b.n	800eaf0 <__mdiff+0x34>
 800eba8:	f856 8b04 	ldr.w	r8, [r6], #4
 800ebac:	fa11 f288 	uxtah	r2, r1, r8
 800ebb0:	1414      	asrs	r4, r2, #16
 800ebb2:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800ebb6:	b292      	uxth	r2, r2
 800ebb8:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800ebbc:	f84e 2b04 	str.w	r2, [lr], #4
 800ebc0:	1421      	asrs	r1, r4, #16
 800ebc2:	e7e0      	b.n	800eb86 <__mdiff+0xca>
 800ebc4:	3f01      	subs	r7, #1
 800ebc6:	e7ea      	b.n	800eb9e <__mdiff+0xe2>
 800ebc8:	080113db 	.word	0x080113db
 800ebcc:	080113ec 	.word	0x080113ec

0800ebd0 <__d2b>:
 800ebd0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ebd4:	4689      	mov	r9, r1
 800ebd6:	2101      	movs	r1, #1
 800ebd8:	ec57 6b10 	vmov	r6, r7, d0
 800ebdc:	4690      	mov	r8, r2
 800ebde:	f7ff fccf 	bl	800e580 <_Balloc>
 800ebe2:	4604      	mov	r4, r0
 800ebe4:	b930      	cbnz	r0, 800ebf4 <__d2b+0x24>
 800ebe6:	4602      	mov	r2, r0
 800ebe8:	4b25      	ldr	r3, [pc, #148]	; (800ec80 <__d2b+0xb0>)
 800ebea:	4826      	ldr	r0, [pc, #152]	; (800ec84 <__d2b+0xb4>)
 800ebec:	f240 310a 	movw	r1, #778	; 0x30a
 800ebf0:	f000 faac 	bl	800f14c <__assert_func>
 800ebf4:	f3c7 550a 	ubfx	r5, r7, #20, #11
 800ebf8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800ebfc:	bb35      	cbnz	r5, 800ec4c <__d2b+0x7c>
 800ebfe:	2e00      	cmp	r6, #0
 800ec00:	9301      	str	r3, [sp, #4]
 800ec02:	d028      	beq.n	800ec56 <__d2b+0x86>
 800ec04:	4668      	mov	r0, sp
 800ec06:	9600      	str	r6, [sp, #0]
 800ec08:	f7ff fd82 	bl	800e710 <__lo0bits>
 800ec0c:	9900      	ldr	r1, [sp, #0]
 800ec0e:	b300      	cbz	r0, 800ec52 <__d2b+0x82>
 800ec10:	9a01      	ldr	r2, [sp, #4]
 800ec12:	f1c0 0320 	rsb	r3, r0, #32
 800ec16:	fa02 f303 	lsl.w	r3, r2, r3
 800ec1a:	430b      	orrs	r3, r1
 800ec1c:	40c2      	lsrs	r2, r0
 800ec1e:	6163      	str	r3, [r4, #20]
 800ec20:	9201      	str	r2, [sp, #4]
 800ec22:	9b01      	ldr	r3, [sp, #4]
 800ec24:	61a3      	str	r3, [r4, #24]
 800ec26:	2b00      	cmp	r3, #0
 800ec28:	bf14      	ite	ne
 800ec2a:	2202      	movne	r2, #2
 800ec2c:	2201      	moveq	r2, #1
 800ec2e:	6122      	str	r2, [r4, #16]
 800ec30:	b1d5      	cbz	r5, 800ec68 <__d2b+0x98>
 800ec32:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800ec36:	4405      	add	r5, r0
 800ec38:	f8c9 5000 	str.w	r5, [r9]
 800ec3c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800ec40:	f8c8 0000 	str.w	r0, [r8]
 800ec44:	4620      	mov	r0, r4
 800ec46:	b003      	add	sp, #12
 800ec48:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ec4c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800ec50:	e7d5      	b.n	800ebfe <__d2b+0x2e>
 800ec52:	6161      	str	r1, [r4, #20]
 800ec54:	e7e5      	b.n	800ec22 <__d2b+0x52>
 800ec56:	a801      	add	r0, sp, #4
 800ec58:	f7ff fd5a 	bl	800e710 <__lo0bits>
 800ec5c:	9b01      	ldr	r3, [sp, #4]
 800ec5e:	6163      	str	r3, [r4, #20]
 800ec60:	2201      	movs	r2, #1
 800ec62:	6122      	str	r2, [r4, #16]
 800ec64:	3020      	adds	r0, #32
 800ec66:	e7e3      	b.n	800ec30 <__d2b+0x60>
 800ec68:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800ec6c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800ec70:	f8c9 0000 	str.w	r0, [r9]
 800ec74:	6918      	ldr	r0, [r3, #16]
 800ec76:	f7ff fd2b 	bl	800e6d0 <__hi0bits>
 800ec7a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800ec7e:	e7df      	b.n	800ec40 <__d2b+0x70>
 800ec80:	080113db 	.word	0x080113db
 800ec84:	080113ec 	.word	0x080113ec

0800ec88 <_calloc_r>:
 800ec88:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ec8a:	fba1 2402 	umull	r2, r4, r1, r2
 800ec8e:	b94c      	cbnz	r4, 800eca4 <_calloc_r+0x1c>
 800ec90:	4611      	mov	r1, r2
 800ec92:	9201      	str	r2, [sp, #4]
 800ec94:	f000 f87a 	bl	800ed8c <_malloc_r>
 800ec98:	9a01      	ldr	r2, [sp, #4]
 800ec9a:	4605      	mov	r5, r0
 800ec9c:	b930      	cbnz	r0, 800ecac <_calloc_r+0x24>
 800ec9e:	4628      	mov	r0, r5
 800eca0:	b003      	add	sp, #12
 800eca2:	bd30      	pop	{r4, r5, pc}
 800eca4:	220c      	movs	r2, #12
 800eca6:	6002      	str	r2, [r0, #0]
 800eca8:	2500      	movs	r5, #0
 800ecaa:	e7f8      	b.n	800ec9e <_calloc_r+0x16>
 800ecac:	4621      	mov	r1, r4
 800ecae:	f7fe f941 	bl	800cf34 <memset>
 800ecb2:	e7f4      	b.n	800ec9e <_calloc_r+0x16>

0800ecb4 <_free_r>:
 800ecb4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ecb6:	2900      	cmp	r1, #0
 800ecb8:	d044      	beq.n	800ed44 <_free_r+0x90>
 800ecba:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800ecbe:	9001      	str	r0, [sp, #4]
 800ecc0:	2b00      	cmp	r3, #0
 800ecc2:	f1a1 0404 	sub.w	r4, r1, #4
 800ecc6:	bfb8      	it	lt
 800ecc8:	18e4      	addlt	r4, r4, r3
 800ecca:	f000 fa9b 	bl	800f204 <__malloc_lock>
 800ecce:	4a1e      	ldr	r2, [pc, #120]	; (800ed48 <_free_r+0x94>)
 800ecd0:	9801      	ldr	r0, [sp, #4]
 800ecd2:	6813      	ldr	r3, [r2, #0]
 800ecd4:	b933      	cbnz	r3, 800ece4 <_free_r+0x30>
 800ecd6:	6063      	str	r3, [r4, #4]
 800ecd8:	6014      	str	r4, [r2, #0]
 800ecda:	b003      	add	sp, #12
 800ecdc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800ece0:	f000 ba96 	b.w	800f210 <__malloc_unlock>
 800ece4:	42a3      	cmp	r3, r4
 800ece6:	d908      	bls.n	800ecfa <_free_r+0x46>
 800ece8:	6825      	ldr	r5, [r4, #0]
 800ecea:	1961      	adds	r1, r4, r5
 800ecec:	428b      	cmp	r3, r1
 800ecee:	bf01      	itttt	eq
 800ecf0:	6819      	ldreq	r1, [r3, #0]
 800ecf2:	685b      	ldreq	r3, [r3, #4]
 800ecf4:	1949      	addeq	r1, r1, r5
 800ecf6:	6021      	streq	r1, [r4, #0]
 800ecf8:	e7ed      	b.n	800ecd6 <_free_r+0x22>
 800ecfa:	461a      	mov	r2, r3
 800ecfc:	685b      	ldr	r3, [r3, #4]
 800ecfe:	b10b      	cbz	r3, 800ed04 <_free_r+0x50>
 800ed00:	42a3      	cmp	r3, r4
 800ed02:	d9fa      	bls.n	800ecfa <_free_r+0x46>
 800ed04:	6811      	ldr	r1, [r2, #0]
 800ed06:	1855      	adds	r5, r2, r1
 800ed08:	42a5      	cmp	r5, r4
 800ed0a:	d10b      	bne.n	800ed24 <_free_r+0x70>
 800ed0c:	6824      	ldr	r4, [r4, #0]
 800ed0e:	4421      	add	r1, r4
 800ed10:	1854      	adds	r4, r2, r1
 800ed12:	42a3      	cmp	r3, r4
 800ed14:	6011      	str	r1, [r2, #0]
 800ed16:	d1e0      	bne.n	800ecda <_free_r+0x26>
 800ed18:	681c      	ldr	r4, [r3, #0]
 800ed1a:	685b      	ldr	r3, [r3, #4]
 800ed1c:	6053      	str	r3, [r2, #4]
 800ed1e:	4421      	add	r1, r4
 800ed20:	6011      	str	r1, [r2, #0]
 800ed22:	e7da      	b.n	800ecda <_free_r+0x26>
 800ed24:	d902      	bls.n	800ed2c <_free_r+0x78>
 800ed26:	230c      	movs	r3, #12
 800ed28:	6003      	str	r3, [r0, #0]
 800ed2a:	e7d6      	b.n	800ecda <_free_r+0x26>
 800ed2c:	6825      	ldr	r5, [r4, #0]
 800ed2e:	1961      	adds	r1, r4, r5
 800ed30:	428b      	cmp	r3, r1
 800ed32:	bf04      	itt	eq
 800ed34:	6819      	ldreq	r1, [r3, #0]
 800ed36:	685b      	ldreq	r3, [r3, #4]
 800ed38:	6063      	str	r3, [r4, #4]
 800ed3a:	bf04      	itt	eq
 800ed3c:	1949      	addeq	r1, r1, r5
 800ed3e:	6021      	streq	r1, [r4, #0]
 800ed40:	6054      	str	r4, [r2, #4]
 800ed42:	e7ca      	b.n	800ecda <_free_r+0x26>
 800ed44:	b003      	add	sp, #12
 800ed46:	bd30      	pop	{r4, r5, pc}
 800ed48:	20000c7c 	.word	0x20000c7c

0800ed4c <sbrk_aligned>:
 800ed4c:	b570      	push	{r4, r5, r6, lr}
 800ed4e:	4e0e      	ldr	r6, [pc, #56]	; (800ed88 <sbrk_aligned+0x3c>)
 800ed50:	460c      	mov	r4, r1
 800ed52:	6831      	ldr	r1, [r6, #0]
 800ed54:	4605      	mov	r5, r0
 800ed56:	b911      	cbnz	r1, 800ed5e <sbrk_aligned+0x12>
 800ed58:	f000 f9e8 	bl	800f12c <_sbrk_r>
 800ed5c:	6030      	str	r0, [r6, #0]
 800ed5e:	4621      	mov	r1, r4
 800ed60:	4628      	mov	r0, r5
 800ed62:	f000 f9e3 	bl	800f12c <_sbrk_r>
 800ed66:	1c43      	adds	r3, r0, #1
 800ed68:	d00a      	beq.n	800ed80 <sbrk_aligned+0x34>
 800ed6a:	1cc4      	adds	r4, r0, #3
 800ed6c:	f024 0403 	bic.w	r4, r4, #3
 800ed70:	42a0      	cmp	r0, r4
 800ed72:	d007      	beq.n	800ed84 <sbrk_aligned+0x38>
 800ed74:	1a21      	subs	r1, r4, r0
 800ed76:	4628      	mov	r0, r5
 800ed78:	f000 f9d8 	bl	800f12c <_sbrk_r>
 800ed7c:	3001      	adds	r0, #1
 800ed7e:	d101      	bne.n	800ed84 <sbrk_aligned+0x38>
 800ed80:	f04f 34ff 	mov.w	r4, #4294967295
 800ed84:	4620      	mov	r0, r4
 800ed86:	bd70      	pop	{r4, r5, r6, pc}
 800ed88:	20000c80 	.word	0x20000c80

0800ed8c <_malloc_r>:
 800ed8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ed90:	1ccd      	adds	r5, r1, #3
 800ed92:	f025 0503 	bic.w	r5, r5, #3
 800ed96:	3508      	adds	r5, #8
 800ed98:	2d0c      	cmp	r5, #12
 800ed9a:	bf38      	it	cc
 800ed9c:	250c      	movcc	r5, #12
 800ed9e:	2d00      	cmp	r5, #0
 800eda0:	4607      	mov	r7, r0
 800eda2:	db01      	blt.n	800eda8 <_malloc_r+0x1c>
 800eda4:	42a9      	cmp	r1, r5
 800eda6:	d905      	bls.n	800edb4 <_malloc_r+0x28>
 800eda8:	230c      	movs	r3, #12
 800edaa:	603b      	str	r3, [r7, #0]
 800edac:	2600      	movs	r6, #0
 800edae:	4630      	mov	r0, r6
 800edb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800edb4:	4e2e      	ldr	r6, [pc, #184]	; (800ee70 <_malloc_r+0xe4>)
 800edb6:	f000 fa25 	bl	800f204 <__malloc_lock>
 800edba:	6833      	ldr	r3, [r6, #0]
 800edbc:	461c      	mov	r4, r3
 800edbe:	bb34      	cbnz	r4, 800ee0e <_malloc_r+0x82>
 800edc0:	4629      	mov	r1, r5
 800edc2:	4638      	mov	r0, r7
 800edc4:	f7ff ffc2 	bl	800ed4c <sbrk_aligned>
 800edc8:	1c43      	adds	r3, r0, #1
 800edca:	4604      	mov	r4, r0
 800edcc:	d14d      	bne.n	800ee6a <_malloc_r+0xde>
 800edce:	6834      	ldr	r4, [r6, #0]
 800edd0:	4626      	mov	r6, r4
 800edd2:	2e00      	cmp	r6, #0
 800edd4:	d140      	bne.n	800ee58 <_malloc_r+0xcc>
 800edd6:	6823      	ldr	r3, [r4, #0]
 800edd8:	4631      	mov	r1, r6
 800edda:	4638      	mov	r0, r7
 800eddc:	eb04 0803 	add.w	r8, r4, r3
 800ede0:	f000 f9a4 	bl	800f12c <_sbrk_r>
 800ede4:	4580      	cmp	r8, r0
 800ede6:	d13a      	bne.n	800ee5e <_malloc_r+0xd2>
 800ede8:	6821      	ldr	r1, [r4, #0]
 800edea:	3503      	adds	r5, #3
 800edec:	1a6d      	subs	r5, r5, r1
 800edee:	f025 0503 	bic.w	r5, r5, #3
 800edf2:	3508      	adds	r5, #8
 800edf4:	2d0c      	cmp	r5, #12
 800edf6:	bf38      	it	cc
 800edf8:	250c      	movcc	r5, #12
 800edfa:	4629      	mov	r1, r5
 800edfc:	4638      	mov	r0, r7
 800edfe:	f7ff ffa5 	bl	800ed4c <sbrk_aligned>
 800ee02:	3001      	adds	r0, #1
 800ee04:	d02b      	beq.n	800ee5e <_malloc_r+0xd2>
 800ee06:	6823      	ldr	r3, [r4, #0]
 800ee08:	442b      	add	r3, r5
 800ee0a:	6023      	str	r3, [r4, #0]
 800ee0c:	e00e      	b.n	800ee2c <_malloc_r+0xa0>
 800ee0e:	6822      	ldr	r2, [r4, #0]
 800ee10:	1b52      	subs	r2, r2, r5
 800ee12:	d41e      	bmi.n	800ee52 <_malloc_r+0xc6>
 800ee14:	2a0b      	cmp	r2, #11
 800ee16:	d916      	bls.n	800ee46 <_malloc_r+0xba>
 800ee18:	1961      	adds	r1, r4, r5
 800ee1a:	42a3      	cmp	r3, r4
 800ee1c:	6025      	str	r5, [r4, #0]
 800ee1e:	bf18      	it	ne
 800ee20:	6059      	strne	r1, [r3, #4]
 800ee22:	6863      	ldr	r3, [r4, #4]
 800ee24:	bf08      	it	eq
 800ee26:	6031      	streq	r1, [r6, #0]
 800ee28:	5162      	str	r2, [r4, r5]
 800ee2a:	604b      	str	r3, [r1, #4]
 800ee2c:	4638      	mov	r0, r7
 800ee2e:	f104 060b 	add.w	r6, r4, #11
 800ee32:	f000 f9ed 	bl	800f210 <__malloc_unlock>
 800ee36:	f026 0607 	bic.w	r6, r6, #7
 800ee3a:	1d23      	adds	r3, r4, #4
 800ee3c:	1af2      	subs	r2, r6, r3
 800ee3e:	d0b6      	beq.n	800edae <_malloc_r+0x22>
 800ee40:	1b9b      	subs	r3, r3, r6
 800ee42:	50a3      	str	r3, [r4, r2]
 800ee44:	e7b3      	b.n	800edae <_malloc_r+0x22>
 800ee46:	6862      	ldr	r2, [r4, #4]
 800ee48:	42a3      	cmp	r3, r4
 800ee4a:	bf0c      	ite	eq
 800ee4c:	6032      	streq	r2, [r6, #0]
 800ee4e:	605a      	strne	r2, [r3, #4]
 800ee50:	e7ec      	b.n	800ee2c <_malloc_r+0xa0>
 800ee52:	4623      	mov	r3, r4
 800ee54:	6864      	ldr	r4, [r4, #4]
 800ee56:	e7b2      	b.n	800edbe <_malloc_r+0x32>
 800ee58:	4634      	mov	r4, r6
 800ee5a:	6876      	ldr	r6, [r6, #4]
 800ee5c:	e7b9      	b.n	800edd2 <_malloc_r+0x46>
 800ee5e:	230c      	movs	r3, #12
 800ee60:	603b      	str	r3, [r7, #0]
 800ee62:	4638      	mov	r0, r7
 800ee64:	f000 f9d4 	bl	800f210 <__malloc_unlock>
 800ee68:	e7a1      	b.n	800edae <_malloc_r+0x22>
 800ee6a:	6025      	str	r5, [r4, #0]
 800ee6c:	e7de      	b.n	800ee2c <_malloc_r+0xa0>
 800ee6e:	bf00      	nop
 800ee70:	20000c7c 	.word	0x20000c7c

0800ee74 <__ssputs_r>:
 800ee74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ee78:	688e      	ldr	r6, [r1, #8]
 800ee7a:	429e      	cmp	r6, r3
 800ee7c:	4682      	mov	sl, r0
 800ee7e:	460c      	mov	r4, r1
 800ee80:	4690      	mov	r8, r2
 800ee82:	461f      	mov	r7, r3
 800ee84:	d838      	bhi.n	800eef8 <__ssputs_r+0x84>
 800ee86:	898a      	ldrh	r2, [r1, #12]
 800ee88:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800ee8c:	d032      	beq.n	800eef4 <__ssputs_r+0x80>
 800ee8e:	6825      	ldr	r5, [r4, #0]
 800ee90:	6909      	ldr	r1, [r1, #16]
 800ee92:	eba5 0901 	sub.w	r9, r5, r1
 800ee96:	6965      	ldr	r5, [r4, #20]
 800ee98:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800ee9c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800eea0:	3301      	adds	r3, #1
 800eea2:	444b      	add	r3, r9
 800eea4:	106d      	asrs	r5, r5, #1
 800eea6:	429d      	cmp	r5, r3
 800eea8:	bf38      	it	cc
 800eeaa:	461d      	movcc	r5, r3
 800eeac:	0553      	lsls	r3, r2, #21
 800eeae:	d531      	bpl.n	800ef14 <__ssputs_r+0xa0>
 800eeb0:	4629      	mov	r1, r5
 800eeb2:	f7ff ff6b 	bl	800ed8c <_malloc_r>
 800eeb6:	4606      	mov	r6, r0
 800eeb8:	b950      	cbnz	r0, 800eed0 <__ssputs_r+0x5c>
 800eeba:	230c      	movs	r3, #12
 800eebc:	f8ca 3000 	str.w	r3, [sl]
 800eec0:	89a3      	ldrh	r3, [r4, #12]
 800eec2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800eec6:	81a3      	strh	r3, [r4, #12]
 800eec8:	f04f 30ff 	mov.w	r0, #4294967295
 800eecc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800eed0:	6921      	ldr	r1, [r4, #16]
 800eed2:	464a      	mov	r2, r9
 800eed4:	f7ff fb46 	bl	800e564 <memcpy>
 800eed8:	89a3      	ldrh	r3, [r4, #12]
 800eeda:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800eede:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800eee2:	81a3      	strh	r3, [r4, #12]
 800eee4:	6126      	str	r6, [r4, #16]
 800eee6:	6165      	str	r5, [r4, #20]
 800eee8:	444e      	add	r6, r9
 800eeea:	eba5 0509 	sub.w	r5, r5, r9
 800eeee:	6026      	str	r6, [r4, #0]
 800eef0:	60a5      	str	r5, [r4, #8]
 800eef2:	463e      	mov	r6, r7
 800eef4:	42be      	cmp	r6, r7
 800eef6:	d900      	bls.n	800eefa <__ssputs_r+0x86>
 800eef8:	463e      	mov	r6, r7
 800eefa:	6820      	ldr	r0, [r4, #0]
 800eefc:	4632      	mov	r2, r6
 800eefe:	4641      	mov	r1, r8
 800ef00:	f000 f966 	bl	800f1d0 <memmove>
 800ef04:	68a3      	ldr	r3, [r4, #8]
 800ef06:	1b9b      	subs	r3, r3, r6
 800ef08:	60a3      	str	r3, [r4, #8]
 800ef0a:	6823      	ldr	r3, [r4, #0]
 800ef0c:	4433      	add	r3, r6
 800ef0e:	6023      	str	r3, [r4, #0]
 800ef10:	2000      	movs	r0, #0
 800ef12:	e7db      	b.n	800eecc <__ssputs_r+0x58>
 800ef14:	462a      	mov	r2, r5
 800ef16:	f000 f981 	bl	800f21c <_realloc_r>
 800ef1a:	4606      	mov	r6, r0
 800ef1c:	2800      	cmp	r0, #0
 800ef1e:	d1e1      	bne.n	800eee4 <__ssputs_r+0x70>
 800ef20:	6921      	ldr	r1, [r4, #16]
 800ef22:	4650      	mov	r0, sl
 800ef24:	f7ff fec6 	bl	800ecb4 <_free_r>
 800ef28:	e7c7      	b.n	800eeba <__ssputs_r+0x46>
	...

0800ef2c <_svfiprintf_r>:
 800ef2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef30:	4698      	mov	r8, r3
 800ef32:	898b      	ldrh	r3, [r1, #12]
 800ef34:	061b      	lsls	r3, r3, #24
 800ef36:	b09d      	sub	sp, #116	; 0x74
 800ef38:	4607      	mov	r7, r0
 800ef3a:	460d      	mov	r5, r1
 800ef3c:	4614      	mov	r4, r2
 800ef3e:	d50e      	bpl.n	800ef5e <_svfiprintf_r+0x32>
 800ef40:	690b      	ldr	r3, [r1, #16]
 800ef42:	b963      	cbnz	r3, 800ef5e <_svfiprintf_r+0x32>
 800ef44:	2140      	movs	r1, #64	; 0x40
 800ef46:	f7ff ff21 	bl	800ed8c <_malloc_r>
 800ef4a:	6028      	str	r0, [r5, #0]
 800ef4c:	6128      	str	r0, [r5, #16]
 800ef4e:	b920      	cbnz	r0, 800ef5a <_svfiprintf_r+0x2e>
 800ef50:	230c      	movs	r3, #12
 800ef52:	603b      	str	r3, [r7, #0]
 800ef54:	f04f 30ff 	mov.w	r0, #4294967295
 800ef58:	e0d1      	b.n	800f0fe <_svfiprintf_r+0x1d2>
 800ef5a:	2340      	movs	r3, #64	; 0x40
 800ef5c:	616b      	str	r3, [r5, #20]
 800ef5e:	2300      	movs	r3, #0
 800ef60:	9309      	str	r3, [sp, #36]	; 0x24
 800ef62:	2320      	movs	r3, #32
 800ef64:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800ef68:	f8cd 800c 	str.w	r8, [sp, #12]
 800ef6c:	2330      	movs	r3, #48	; 0x30
 800ef6e:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 800f118 <_svfiprintf_r+0x1ec>
 800ef72:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800ef76:	f04f 0901 	mov.w	r9, #1
 800ef7a:	4623      	mov	r3, r4
 800ef7c:	469a      	mov	sl, r3
 800ef7e:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ef82:	b10a      	cbz	r2, 800ef88 <_svfiprintf_r+0x5c>
 800ef84:	2a25      	cmp	r2, #37	; 0x25
 800ef86:	d1f9      	bne.n	800ef7c <_svfiprintf_r+0x50>
 800ef88:	ebba 0b04 	subs.w	fp, sl, r4
 800ef8c:	d00b      	beq.n	800efa6 <_svfiprintf_r+0x7a>
 800ef8e:	465b      	mov	r3, fp
 800ef90:	4622      	mov	r2, r4
 800ef92:	4629      	mov	r1, r5
 800ef94:	4638      	mov	r0, r7
 800ef96:	f7ff ff6d 	bl	800ee74 <__ssputs_r>
 800ef9a:	3001      	adds	r0, #1
 800ef9c:	f000 80aa 	beq.w	800f0f4 <_svfiprintf_r+0x1c8>
 800efa0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800efa2:	445a      	add	r2, fp
 800efa4:	9209      	str	r2, [sp, #36]	; 0x24
 800efa6:	f89a 3000 	ldrb.w	r3, [sl]
 800efaa:	2b00      	cmp	r3, #0
 800efac:	f000 80a2 	beq.w	800f0f4 <_svfiprintf_r+0x1c8>
 800efb0:	2300      	movs	r3, #0
 800efb2:	f04f 32ff 	mov.w	r2, #4294967295
 800efb6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800efba:	f10a 0a01 	add.w	sl, sl, #1
 800efbe:	9304      	str	r3, [sp, #16]
 800efc0:	9307      	str	r3, [sp, #28]
 800efc2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800efc6:	931a      	str	r3, [sp, #104]	; 0x68
 800efc8:	4654      	mov	r4, sl
 800efca:	2205      	movs	r2, #5
 800efcc:	f814 1b01 	ldrb.w	r1, [r4], #1
 800efd0:	4851      	ldr	r0, [pc, #324]	; (800f118 <_svfiprintf_r+0x1ec>)
 800efd2:	f7f1 f925 	bl	8000220 <memchr>
 800efd6:	9a04      	ldr	r2, [sp, #16]
 800efd8:	b9d8      	cbnz	r0, 800f012 <_svfiprintf_r+0xe6>
 800efda:	06d0      	lsls	r0, r2, #27
 800efdc:	bf44      	itt	mi
 800efde:	2320      	movmi	r3, #32
 800efe0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800efe4:	0711      	lsls	r1, r2, #28
 800efe6:	bf44      	itt	mi
 800efe8:	232b      	movmi	r3, #43	; 0x2b
 800efea:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800efee:	f89a 3000 	ldrb.w	r3, [sl]
 800eff2:	2b2a      	cmp	r3, #42	; 0x2a
 800eff4:	d015      	beq.n	800f022 <_svfiprintf_r+0xf6>
 800eff6:	9a07      	ldr	r2, [sp, #28]
 800eff8:	4654      	mov	r4, sl
 800effa:	2000      	movs	r0, #0
 800effc:	f04f 0c0a 	mov.w	ip, #10
 800f000:	4621      	mov	r1, r4
 800f002:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f006:	3b30      	subs	r3, #48	; 0x30
 800f008:	2b09      	cmp	r3, #9
 800f00a:	d94e      	bls.n	800f0aa <_svfiprintf_r+0x17e>
 800f00c:	b1b0      	cbz	r0, 800f03c <_svfiprintf_r+0x110>
 800f00e:	9207      	str	r2, [sp, #28]
 800f010:	e014      	b.n	800f03c <_svfiprintf_r+0x110>
 800f012:	eba0 0308 	sub.w	r3, r0, r8
 800f016:	fa09 f303 	lsl.w	r3, r9, r3
 800f01a:	4313      	orrs	r3, r2
 800f01c:	9304      	str	r3, [sp, #16]
 800f01e:	46a2      	mov	sl, r4
 800f020:	e7d2      	b.n	800efc8 <_svfiprintf_r+0x9c>
 800f022:	9b03      	ldr	r3, [sp, #12]
 800f024:	1d19      	adds	r1, r3, #4
 800f026:	681b      	ldr	r3, [r3, #0]
 800f028:	9103      	str	r1, [sp, #12]
 800f02a:	2b00      	cmp	r3, #0
 800f02c:	bfbb      	ittet	lt
 800f02e:	425b      	neglt	r3, r3
 800f030:	f042 0202 	orrlt.w	r2, r2, #2
 800f034:	9307      	strge	r3, [sp, #28]
 800f036:	9307      	strlt	r3, [sp, #28]
 800f038:	bfb8      	it	lt
 800f03a:	9204      	strlt	r2, [sp, #16]
 800f03c:	7823      	ldrb	r3, [r4, #0]
 800f03e:	2b2e      	cmp	r3, #46	; 0x2e
 800f040:	d10c      	bne.n	800f05c <_svfiprintf_r+0x130>
 800f042:	7863      	ldrb	r3, [r4, #1]
 800f044:	2b2a      	cmp	r3, #42	; 0x2a
 800f046:	d135      	bne.n	800f0b4 <_svfiprintf_r+0x188>
 800f048:	9b03      	ldr	r3, [sp, #12]
 800f04a:	1d1a      	adds	r2, r3, #4
 800f04c:	681b      	ldr	r3, [r3, #0]
 800f04e:	9203      	str	r2, [sp, #12]
 800f050:	2b00      	cmp	r3, #0
 800f052:	bfb8      	it	lt
 800f054:	f04f 33ff 	movlt.w	r3, #4294967295
 800f058:	3402      	adds	r4, #2
 800f05a:	9305      	str	r3, [sp, #20]
 800f05c:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800f128 <_svfiprintf_r+0x1fc>
 800f060:	7821      	ldrb	r1, [r4, #0]
 800f062:	2203      	movs	r2, #3
 800f064:	4650      	mov	r0, sl
 800f066:	f7f1 f8db 	bl	8000220 <memchr>
 800f06a:	b140      	cbz	r0, 800f07e <_svfiprintf_r+0x152>
 800f06c:	2340      	movs	r3, #64	; 0x40
 800f06e:	eba0 000a 	sub.w	r0, r0, sl
 800f072:	fa03 f000 	lsl.w	r0, r3, r0
 800f076:	9b04      	ldr	r3, [sp, #16]
 800f078:	4303      	orrs	r3, r0
 800f07a:	3401      	adds	r4, #1
 800f07c:	9304      	str	r3, [sp, #16]
 800f07e:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f082:	4826      	ldr	r0, [pc, #152]	; (800f11c <_svfiprintf_r+0x1f0>)
 800f084:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800f088:	2206      	movs	r2, #6
 800f08a:	f7f1 f8c9 	bl	8000220 <memchr>
 800f08e:	2800      	cmp	r0, #0
 800f090:	d038      	beq.n	800f104 <_svfiprintf_r+0x1d8>
 800f092:	4b23      	ldr	r3, [pc, #140]	; (800f120 <_svfiprintf_r+0x1f4>)
 800f094:	bb1b      	cbnz	r3, 800f0de <_svfiprintf_r+0x1b2>
 800f096:	9b03      	ldr	r3, [sp, #12]
 800f098:	3307      	adds	r3, #7
 800f09a:	f023 0307 	bic.w	r3, r3, #7
 800f09e:	3308      	adds	r3, #8
 800f0a0:	9303      	str	r3, [sp, #12]
 800f0a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f0a4:	4433      	add	r3, r6
 800f0a6:	9309      	str	r3, [sp, #36]	; 0x24
 800f0a8:	e767      	b.n	800ef7a <_svfiprintf_r+0x4e>
 800f0aa:	fb0c 3202 	mla	r2, ip, r2, r3
 800f0ae:	460c      	mov	r4, r1
 800f0b0:	2001      	movs	r0, #1
 800f0b2:	e7a5      	b.n	800f000 <_svfiprintf_r+0xd4>
 800f0b4:	2300      	movs	r3, #0
 800f0b6:	3401      	adds	r4, #1
 800f0b8:	9305      	str	r3, [sp, #20]
 800f0ba:	4619      	mov	r1, r3
 800f0bc:	f04f 0c0a 	mov.w	ip, #10
 800f0c0:	4620      	mov	r0, r4
 800f0c2:	f810 2b01 	ldrb.w	r2, [r0], #1
 800f0c6:	3a30      	subs	r2, #48	; 0x30
 800f0c8:	2a09      	cmp	r2, #9
 800f0ca:	d903      	bls.n	800f0d4 <_svfiprintf_r+0x1a8>
 800f0cc:	2b00      	cmp	r3, #0
 800f0ce:	d0c5      	beq.n	800f05c <_svfiprintf_r+0x130>
 800f0d0:	9105      	str	r1, [sp, #20]
 800f0d2:	e7c3      	b.n	800f05c <_svfiprintf_r+0x130>
 800f0d4:	fb0c 2101 	mla	r1, ip, r1, r2
 800f0d8:	4604      	mov	r4, r0
 800f0da:	2301      	movs	r3, #1
 800f0dc:	e7f0      	b.n	800f0c0 <_svfiprintf_r+0x194>
 800f0de:	ab03      	add	r3, sp, #12
 800f0e0:	9300      	str	r3, [sp, #0]
 800f0e2:	462a      	mov	r2, r5
 800f0e4:	4b0f      	ldr	r3, [pc, #60]	; (800f124 <_svfiprintf_r+0x1f8>)
 800f0e6:	a904      	add	r1, sp, #16
 800f0e8:	4638      	mov	r0, r7
 800f0ea:	f7fd ffcb 	bl	800d084 <_printf_float>
 800f0ee:	1c42      	adds	r2, r0, #1
 800f0f0:	4606      	mov	r6, r0
 800f0f2:	d1d6      	bne.n	800f0a2 <_svfiprintf_r+0x176>
 800f0f4:	89ab      	ldrh	r3, [r5, #12]
 800f0f6:	065b      	lsls	r3, r3, #25
 800f0f8:	f53f af2c 	bmi.w	800ef54 <_svfiprintf_r+0x28>
 800f0fc:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f0fe:	b01d      	add	sp, #116	; 0x74
 800f100:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f104:	ab03      	add	r3, sp, #12
 800f106:	9300      	str	r3, [sp, #0]
 800f108:	462a      	mov	r2, r5
 800f10a:	4b06      	ldr	r3, [pc, #24]	; (800f124 <_svfiprintf_r+0x1f8>)
 800f10c:	a904      	add	r1, sp, #16
 800f10e:	4638      	mov	r0, r7
 800f110:	f7fe fa5c 	bl	800d5cc <_printf_i>
 800f114:	e7eb      	b.n	800f0ee <_svfiprintf_r+0x1c2>
 800f116:	bf00      	nop
 800f118:	08011544 	.word	0x08011544
 800f11c:	0801154e 	.word	0x0801154e
 800f120:	0800d085 	.word	0x0800d085
 800f124:	0800ee75 	.word	0x0800ee75
 800f128:	0801154a 	.word	0x0801154a

0800f12c <_sbrk_r>:
 800f12c:	b538      	push	{r3, r4, r5, lr}
 800f12e:	4d06      	ldr	r5, [pc, #24]	; (800f148 <_sbrk_r+0x1c>)
 800f130:	2300      	movs	r3, #0
 800f132:	4604      	mov	r4, r0
 800f134:	4608      	mov	r0, r1
 800f136:	602b      	str	r3, [r5, #0]
 800f138:	f7f8 f934 	bl	80073a4 <_sbrk>
 800f13c:	1c43      	adds	r3, r0, #1
 800f13e:	d102      	bne.n	800f146 <_sbrk_r+0x1a>
 800f140:	682b      	ldr	r3, [r5, #0]
 800f142:	b103      	cbz	r3, 800f146 <_sbrk_r+0x1a>
 800f144:	6023      	str	r3, [r4, #0]
 800f146:	bd38      	pop	{r3, r4, r5, pc}
 800f148:	20000c84 	.word	0x20000c84

0800f14c <__assert_func>:
 800f14c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f14e:	4614      	mov	r4, r2
 800f150:	461a      	mov	r2, r3
 800f152:	4b09      	ldr	r3, [pc, #36]	; (800f178 <__assert_func+0x2c>)
 800f154:	681b      	ldr	r3, [r3, #0]
 800f156:	4605      	mov	r5, r0
 800f158:	68d8      	ldr	r0, [r3, #12]
 800f15a:	b14c      	cbz	r4, 800f170 <__assert_func+0x24>
 800f15c:	4b07      	ldr	r3, [pc, #28]	; (800f17c <__assert_func+0x30>)
 800f15e:	9100      	str	r1, [sp, #0]
 800f160:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f164:	4906      	ldr	r1, [pc, #24]	; (800f180 <__assert_func+0x34>)
 800f166:	462b      	mov	r3, r5
 800f168:	f000 f80e 	bl	800f188 <fiprintf>
 800f16c:	f000 faac 	bl	800f6c8 <abort>
 800f170:	4b04      	ldr	r3, [pc, #16]	; (800f184 <__assert_func+0x38>)
 800f172:	461c      	mov	r4, r3
 800f174:	e7f3      	b.n	800f15e <__assert_func+0x12>
 800f176:	bf00      	nop
 800f178:	20000140 	.word	0x20000140
 800f17c:	08011555 	.word	0x08011555
 800f180:	08011562 	.word	0x08011562
 800f184:	08011590 	.word	0x08011590

0800f188 <fiprintf>:
 800f188:	b40e      	push	{r1, r2, r3}
 800f18a:	b503      	push	{r0, r1, lr}
 800f18c:	4601      	mov	r1, r0
 800f18e:	ab03      	add	r3, sp, #12
 800f190:	4805      	ldr	r0, [pc, #20]	; (800f1a8 <fiprintf+0x20>)
 800f192:	f853 2b04 	ldr.w	r2, [r3], #4
 800f196:	6800      	ldr	r0, [r0, #0]
 800f198:	9301      	str	r3, [sp, #4]
 800f19a:	f000 f897 	bl	800f2cc <_vfiprintf_r>
 800f19e:	b002      	add	sp, #8
 800f1a0:	f85d eb04 	ldr.w	lr, [sp], #4
 800f1a4:	b003      	add	sp, #12
 800f1a6:	4770      	bx	lr
 800f1a8:	20000140 	.word	0x20000140

0800f1ac <__ascii_mbtowc>:
 800f1ac:	b082      	sub	sp, #8
 800f1ae:	b901      	cbnz	r1, 800f1b2 <__ascii_mbtowc+0x6>
 800f1b0:	a901      	add	r1, sp, #4
 800f1b2:	b142      	cbz	r2, 800f1c6 <__ascii_mbtowc+0x1a>
 800f1b4:	b14b      	cbz	r3, 800f1ca <__ascii_mbtowc+0x1e>
 800f1b6:	7813      	ldrb	r3, [r2, #0]
 800f1b8:	600b      	str	r3, [r1, #0]
 800f1ba:	7812      	ldrb	r2, [r2, #0]
 800f1bc:	1e10      	subs	r0, r2, #0
 800f1be:	bf18      	it	ne
 800f1c0:	2001      	movne	r0, #1
 800f1c2:	b002      	add	sp, #8
 800f1c4:	4770      	bx	lr
 800f1c6:	4610      	mov	r0, r2
 800f1c8:	e7fb      	b.n	800f1c2 <__ascii_mbtowc+0x16>
 800f1ca:	f06f 0001 	mvn.w	r0, #1
 800f1ce:	e7f8      	b.n	800f1c2 <__ascii_mbtowc+0x16>

0800f1d0 <memmove>:
 800f1d0:	4288      	cmp	r0, r1
 800f1d2:	b510      	push	{r4, lr}
 800f1d4:	eb01 0402 	add.w	r4, r1, r2
 800f1d8:	d902      	bls.n	800f1e0 <memmove+0x10>
 800f1da:	4284      	cmp	r4, r0
 800f1dc:	4623      	mov	r3, r4
 800f1de:	d807      	bhi.n	800f1f0 <memmove+0x20>
 800f1e0:	1e43      	subs	r3, r0, #1
 800f1e2:	42a1      	cmp	r1, r4
 800f1e4:	d008      	beq.n	800f1f8 <memmove+0x28>
 800f1e6:	f811 2b01 	ldrb.w	r2, [r1], #1
 800f1ea:	f803 2f01 	strb.w	r2, [r3, #1]!
 800f1ee:	e7f8      	b.n	800f1e2 <memmove+0x12>
 800f1f0:	4402      	add	r2, r0
 800f1f2:	4601      	mov	r1, r0
 800f1f4:	428a      	cmp	r2, r1
 800f1f6:	d100      	bne.n	800f1fa <memmove+0x2a>
 800f1f8:	bd10      	pop	{r4, pc}
 800f1fa:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800f1fe:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800f202:	e7f7      	b.n	800f1f4 <memmove+0x24>

0800f204 <__malloc_lock>:
 800f204:	4801      	ldr	r0, [pc, #4]	; (800f20c <__malloc_lock+0x8>)
 800f206:	f000 bc1f 	b.w	800fa48 <__retarget_lock_acquire_recursive>
 800f20a:	bf00      	nop
 800f20c:	20000c88 	.word	0x20000c88

0800f210 <__malloc_unlock>:
 800f210:	4801      	ldr	r0, [pc, #4]	; (800f218 <__malloc_unlock+0x8>)
 800f212:	f000 bc1a 	b.w	800fa4a <__retarget_lock_release_recursive>
 800f216:	bf00      	nop
 800f218:	20000c88 	.word	0x20000c88

0800f21c <_realloc_r>:
 800f21c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f220:	4680      	mov	r8, r0
 800f222:	4614      	mov	r4, r2
 800f224:	460e      	mov	r6, r1
 800f226:	b921      	cbnz	r1, 800f232 <_realloc_r+0x16>
 800f228:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f22c:	4611      	mov	r1, r2
 800f22e:	f7ff bdad 	b.w	800ed8c <_malloc_r>
 800f232:	b92a      	cbnz	r2, 800f240 <_realloc_r+0x24>
 800f234:	f7ff fd3e 	bl	800ecb4 <_free_r>
 800f238:	4625      	mov	r5, r4
 800f23a:	4628      	mov	r0, r5
 800f23c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f240:	f000 fc6a 	bl	800fb18 <_malloc_usable_size_r>
 800f244:	4284      	cmp	r4, r0
 800f246:	4607      	mov	r7, r0
 800f248:	d802      	bhi.n	800f250 <_realloc_r+0x34>
 800f24a:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800f24e:	d812      	bhi.n	800f276 <_realloc_r+0x5a>
 800f250:	4621      	mov	r1, r4
 800f252:	4640      	mov	r0, r8
 800f254:	f7ff fd9a 	bl	800ed8c <_malloc_r>
 800f258:	4605      	mov	r5, r0
 800f25a:	2800      	cmp	r0, #0
 800f25c:	d0ed      	beq.n	800f23a <_realloc_r+0x1e>
 800f25e:	42bc      	cmp	r4, r7
 800f260:	4622      	mov	r2, r4
 800f262:	4631      	mov	r1, r6
 800f264:	bf28      	it	cs
 800f266:	463a      	movcs	r2, r7
 800f268:	f7ff f97c 	bl	800e564 <memcpy>
 800f26c:	4631      	mov	r1, r6
 800f26e:	4640      	mov	r0, r8
 800f270:	f7ff fd20 	bl	800ecb4 <_free_r>
 800f274:	e7e1      	b.n	800f23a <_realloc_r+0x1e>
 800f276:	4635      	mov	r5, r6
 800f278:	e7df      	b.n	800f23a <_realloc_r+0x1e>

0800f27a <__sfputc_r>:
 800f27a:	6893      	ldr	r3, [r2, #8]
 800f27c:	3b01      	subs	r3, #1
 800f27e:	2b00      	cmp	r3, #0
 800f280:	b410      	push	{r4}
 800f282:	6093      	str	r3, [r2, #8]
 800f284:	da08      	bge.n	800f298 <__sfputc_r+0x1e>
 800f286:	6994      	ldr	r4, [r2, #24]
 800f288:	42a3      	cmp	r3, r4
 800f28a:	db01      	blt.n	800f290 <__sfputc_r+0x16>
 800f28c:	290a      	cmp	r1, #10
 800f28e:	d103      	bne.n	800f298 <__sfputc_r+0x1e>
 800f290:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f294:	f000 b94a 	b.w	800f52c <__swbuf_r>
 800f298:	6813      	ldr	r3, [r2, #0]
 800f29a:	1c58      	adds	r0, r3, #1
 800f29c:	6010      	str	r0, [r2, #0]
 800f29e:	7019      	strb	r1, [r3, #0]
 800f2a0:	4608      	mov	r0, r1
 800f2a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f2a6:	4770      	bx	lr

0800f2a8 <__sfputs_r>:
 800f2a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f2aa:	4606      	mov	r6, r0
 800f2ac:	460f      	mov	r7, r1
 800f2ae:	4614      	mov	r4, r2
 800f2b0:	18d5      	adds	r5, r2, r3
 800f2b2:	42ac      	cmp	r4, r5
 800f2b4:	d101      	bne.n	800f2ba <__sfputs_r+0x12>
 800f2b6:	2000      	movs	r0, #0
 800f2b8:	e007      	b.n	800f2ca <__sfputs_r+0x22>
 800f2ba:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f2be:	463a      	mov	r2, r7
 800f2c0:	4630      	mov	r0, r6
 800f2c2:	f7ff ffda 	bl	800f27a <__sfputc_r>
 800f2c6:	1c43      	adds	r3, r0, #1
 800f2c8:	d1f3      	bne.n	800f2b2 <__sfputs_r+0xa>
 800f2ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f2cc <_vfiprintf_r>:
 800f2cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f2d0:	460d      	mov	r5, r1
 800f2d2:	b09d      	sub	sp, #116	; 0x74
 800f2d4:	4614      	mov	r4, r2
 800f2d6:	4698      	mov	r8, r3
 800f2d8:	4606      	mov	r6, r0
 800f2da:	b118      	cbz	r0, 800f2e4 <_vfiprintf_r+0x18>
 800f2dc:	6983      	ldr	r3, [r0, #24]
 800f2de:	b90b      	cbnz	r3, 800f2e4 <_vfiprintf_r+0x18>
 800f2e0:	f000 fb14 	bl	800f90c <__sinit>
 800f2e4:	4b89      	ldr	r3, [pc, #548]	; (800f50c <_vfiprintf_r+0x240>)
 800f2e6:	429d      	cmp	r5, r3
 800f2e8:	d11b      	bne.n	800f322 <_vfiprintf_r+0x56>
 800f2ea:	6875      	ldr	r5, [r6, #4]
 800f2ec:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800f2ee:	07d9      	lsls	r1, r3, #31
 800f2f0:	d405      	bmi.n	800f2fe <_vfiprintf_r+0x32>
 800f2f2:	89ab      	ldrh	r3, [r5, #12]
 800f2f4:	059a      	lsls	r2, r3, #22
 800f2f6:	d402      	bmi.n	800f2fe <_vfiprintf_r+0x32>
 800f2f8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800f2fa:	f000 fba5 	bl	800fa48 <__retarget_lock_acquire_recursive>
 800f2fe:	89ab      	ldrh	r3, [r5, #12]
 800f300:	071b      	lsls	r3, r3, #28
 800f302:	d501      	bpl.n	800f308 <_vfiprintf_r+0x3c>
 800f304:	692b      	ldr	r3, [r5, #16]
 800f306:	b9eb      	cbnz	r3, 800f344 <_vfiprintf_r+0x78>
 800f308:	4629      	mov	r1, r5
 800f30a:	4630      	mov	r0, r6
 800f30c:	f000 f96e 	bl	800f5ec <__swsetup_r>
 800f310:	b1c0      	cbz	r0, 800f344 <_vfiprintf_r+0x78>
 800f312:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800f314:	07dc      	lsls	r4, r3, #31
 800f316:	d50e      	bpl.n	800f336 <_vfiprintf_r+0x6a>
 800f318:	f04f 30ff 	mov.w	r0, #4294967295
 800f31c:	b01d      	add	sp, #116	; 0x74
 800f31e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f322:	4b7b      	ldr	r3, [pc, #492]	; (800f510 <_vfiprintf_r+0x244>)
 800f324:	429d      	cmp	r5, r3
 800f326:	d101      	bne.n	800f32c <_vfiprintf_r+0x60>
 800f328:	68b5      	ldr	r5, [r6, #8]
 800f32a:	e7df      	b.n	800f2ec <_vfiprintf_r+0x20>
 800f32c:	4b79      	ldr	r3, [pc, #484]	; (800f514 <_vfiprintf_r+0x248>)
 800f32e:	429d      	cmp	r5, r3
 800f330:	bf08      	it	eq
 800f332:	68f5      	ldreq	r5, [r6, #12]
 800f334:	e7da      	b.n	800f2ec <_vfiprintf_r+0x20>
 800f336:	89ab      	ldrh	r3, [r5, #12]
 800f338:	0598      	lsls	r0, r3, #22
 800f33a:	d4ed      	bmi.n	800f318 <_vfiprintf_r+0x4c>
 800f33c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800f33e:	f000 fb84 	bl	800fa4a <__retarget_lock_release_recursive>
 800f342:	e7e9      	b.n	800f318 <_vfiprintf_r+0x4c>
 800f344:	2300      	movs	r3, #0
 800f346:	9309      	str	r3, [sp, #36]	; 0x24
 800f348:	2320      	movs	r3, #32
 800f34a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800f34e:	f8cd 800c 	str.w	r8, [sp, #12]
 800f352:	2330      	movs	r3, #48	; 0x30
 800f354:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800f518 <_vfiprintf_r+0x24c>
 800f358:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800f35c:	f04f 0901 	mov.w	r9, #1
 800f360:	4623      	mov	r3, r4
 800f362:	469a      	mov	sl, r3
 800f364:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f368:	b10a      	cbz	r2, 800f36e <_vfiprintf_r+0xa2>
 800f36a:	2a25      	cmp	r2, #37	; 0x25
 800f36c:	d1f9      	bne.n	800f362 <_vfiprintf_r+0x96>
 800f36e:	ebba 0b04 	subs.w	fp, sl, r4
 800f372:	d00b      	beq.n	800f38c <_vfiprintf_r+0xc0>
 800f374:	465b      	mov	r3, fp
 800f376:	4622      	mov	r2, r4
 800f378:	4629      	mov	r1, r5
 800f37a:	4630      	mov	r0, r6
 800f37c:	f7ff ff94 	bl	800f2a8 <__sfputs_r>
 800f380:	3001      	adds	r0, #1
 800f382:	f000 80aa 	beq.w	800f4da <_vfiprintf_r+0x20e>
 800f386:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f388:	445a      	add	r2, fp
 800f38a:	9209      	str	r2, [sp, #36]	; 0x24
 800f38c:	f89a 3000 	ldrb.w	r3, [sl]
 800f390:	2b00      	cmp	r3, #0
 800f392:	f000 80a2 	beq.w	800f4da <_vfiprintf_r+0x20e>
 800f396:	2300      	movs	r3, #0
 800f398:	f04f 32ff 	mov.w	r2, #4294967295
 800f39c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800f3a0:	f10a 0a01 	add.w	sl, sl, #1
 800f3a4:	9304      	str	r3, [sp, #16]
 800f3a6:	9307      	str	r3, [sp, #28]
 800f3a8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800f3ac:	931a      	str	r3, [sp, #104]	; 0x68
 800f3ae:	4654      	mov	r4, sl
 800f3b0:	2205      	movs	r2, #5
 800f3b2:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f3b6:	4858      	ldr	r0, [pc, #352]	; (800f518 <_vfiprintf_r+0x24c>)
 800f3b8:	f7f0 ff32 	bl	8000220 <memchr>
 800f3bc:	9a04      	ldr	r2, [sp, #16]
 800f3be:	b9d8      	cbnz	r0, 800f3f8 <_vfiprintf_r+0x12c>
 800f3c0:	06d1      	lsls	r1, r2, #27
 800f3c2:	bf44      	itt	mi
 800f3c4:	2320      	movmi	r3, #32
 800f3c6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800f3ca:	0713      	lsls	r3, r2, #28
 800f3cc:	bf44      	itt	mi
 800f3ce:	232b      	movmi	r3, #43	; 0x2b
 800f3d0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800f3d4:	f89a 3000 	ldrb.w	r3, [sl]
 800f3d8:	2b2a      	cmp	r3, #42	; 0x2a
 800f3da:	d015      	beq.n	800f408 <_vfiprintf_r+0x13c>
 800f3dc:	9a07      	ldr	r2, [sp, #28]
 800f3de:	4654      	mov	r4, sl
 800f3e0:	2000      	movs	r0, #0
 800f3e2:	f04f 0c0a 	mov.w	ip, #10
 800f3e6:	4621      	mov	r1, r4
 800f3e8:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f3ec:	3b30      	subs	r3, #48	; 0x30
 800f3ee:	2b09      	cmp	r3, #9
 800f3f0:	d94e      	bls.n	800f490 <_vfiprintf_r+0x1c4>
 800f3f2:	b1b0      	cbz	r0, 800f422 <_vfiprintf_r+0x156>
 800f3f4:	9207      	str	r2, [sp, #28]
 800f3f6:	e014      	b.n	800f422 <_vfiprintf_r+0x156>
 800f3f8:	eba0 0308 	sub.w	r3, r0, r8
 800f3fc:	fa09 f303 	lsl.w	r3, r9, r3
 800f400:	4313      	orrs	r3, r2
 800f402:	9304      	str	r3, [sp, #16]
 800f404:	46a2      	mov	sl, r4
 800f406:	e7d2      	b.n	800f3ae <_vfiprintf_r+0xe2>
 800f408:	9b03      	ldr	r3, [sp, #12]
 800f40a:	1d19      	adds	r1, r3, #4
 800f40c:	681b      	ldr	r3, [r3, #0]
 800f40e:	9103      	str	r1, [sp, #12]
 800f410:	2b00      	cmp	r3, #0
 800f412:	bfbb      	ittet	lt
 800f414:	425b      	neglt	r3, r3
 800f416:	f042 0202 	orrlt.w	r2, r2, #2
 800f41a:	9307      	strge	r3, [sp, #28]
 800f41c:	9307      	strlt	r3, [sp, #28]
 800f41e:	bfb8      	it	lt
 800f420:	9204      	strlt	r2, [sp, #16]
 800f422:	7823      	ldrb	r3, [r4, #0]
 800f424:	2b2e      	cmp	r3, #46	; 0x2e
 800f426:	d10c      	bne.n	800f442 <_vfiprintf_r+0x176>
 800f428:	7863      	ldrb	r3, [r4, #1]
 800f42a:	2b2a      	cmp	r3, #42	; 0x2a
 800f42c:	d135      	bne.n	800f49a <_vfiprintf_r+0x1ce>
 800f42e:	9b03      	ldr	r3, [sp, #12]
 800f430:	1d1a      	adds	r2, r3, #4
 800f432:	681b      	ldr	r3, [r3, #0]
 800f434:	9203      	str	r2, [sp, #12]
 800f436:	2b00      	cmp	r3, #0
 800f438:	bfb8      	it	lt
 800f43a:	f04f 33ff 	movlt.w	r3, #4294967295
 800f43e:	3402      	adds	r4, #2
 800f440:	9305      	str	r3, [sp, #20]
 800f442:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800f528 <_vfiprintf_r+0x25c>
 800f446:	7821      	ldrb	r1, [r4, #0]
 800f448:	2203      	movs	r2, #3
 800f44a:	4650      	mov	r0, sl
 800f44c:	f7f0 fee8 	bl	8000220 <memchr>
 800f450:	b140      	cbz	r0, 800f464 <_vfiprintf_r+0x198>
 800f452:	2340      	movs	r3, #64	; 0x40
 800f454:	eba0 000a 	sub.w	r0, r0, sl
 800f458:	fa03 f000 	lsl.w	r0, r3, r0
 800f45c:	9b04      	ldr	r3, [sp, #16]
 800f45e:	4303      	orrs	r3, r0
 800f460:	3401      	adds	r4, #1
 800f462:	9304      	str	r3, [sp, #16]
 800f464:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f468:	482c      	ldr	r0, [pc, #176]	; (800f51c <_vfiprintf_r+0x250>)
 800f46a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800f46e:	2206      	movs	r2, #6
 800f470:	f7f0 fed6 	bl	8000220 <memchr>
 800f474:	2800      	cmp	r0, #0
 800f476:	d03f      	beq.n	800f4f8 <_vfiprintf_r+0x22c>
 800f478:	4b29      	ldr	r3, [pc, #164]	; (800f520 <_vfiprintf_r+0x254>)
 800f47a:	bb1b      	cbnz	r3, 800f4c4 <_vfiprintf_r+0x1f8>
 800f47c:	9b03      	ldr	r3, [sp, #12]
 800f47e:	3307      	adds	r3, #7
 800f480:	f023 0307 	bic.w	r3, r3, #7
 800f484:	3308      	adds	r3, #8
 800f486:	9303      	str	r3, [sp, #12]
 800f488:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f48a:	443b      	add	r3, r7
 800f48c:	9309      	str	r3, [sp, #36]	; 0x24
 800f48e:	e767      	b.n	800f360 <_vfiprintf_r+0x94>
 800f490:	fb0c 3202 	mla	r2, ip, r2, r3
 800f494:	460c      	mov	r4, r1
 800f496:	2001      	movs	r0, #1
 800f498:	e7a5      	b.n	800f3e6 <_vfiprintf_r+0x11a>
 800f49a:	2300      	movs	r3, #0
 800f49c:	3401      	adds	r4, #1
 800f49e:	9305      	str	r3, [sp, #20]
 800f4a0:	4619      	mov	r1, r3
 800f4a2:	f04f 0c0a 	mov.w	ip, #10
 800f4a6:	4620      	mov	r0, r4
 800f4a8:	f810 2b01 	ldrb.w	r2, [r0], #1
 800f4ac:	3a30      	subs	r2, #48	; 0x30
 800f4ae:	2a09      	cmp	r2, #9
 800f4b0:	d903      	bls.n	800f4ba <_vfiprintf_r+0x1ee>
 800f4b2:	2b00      	cmp	r3, #0
 800f4b4:	d0c5      	beq.n	800f442 <_vfiprintf_r+0x176>
 800f4b6:	9105      	str	r1, [sp, #20]
 800f4b8:	e7c3      	b.n	800f442 <_vfiprintf_r+0x176>
 800f4ba:	fb0c 2101 	mla	r1, ip, r1, r2
 800f4be:	4604      	mov	r4, r0
 800f4c0:	2301      	movs	r3, #1
 800f4c2:	e7f0      	b.n	800f4a6 <_vfiprintf_r+0x1da>
 800f4c4:	ab03      	add	r3, sp, #12
 800f4c6:	9300      	str	r3, [sp, #0]
 800f4c8:	462a      	mov	r2, r5
 800f4ca:	4b16      	ldr	r3, [pc, #88]	; (800f524 <_vfiprintf_r+0x258>)
 800f4cc:	a904      	add	r1, sp, #16
 800f4ce:	4630      	mov	r0, r6
 800f4d0:	f7fd fdd8 	bl	800d084 <_printf_float>
 800f4d4:	4607      	mov	r7, r0
 800f4d6:	1c78      	adds	r0, r7, #1
 800f4d8:	d1d6      	bne.n	800f488 <_vfiprintf_r+0x1bc>
 800f4da:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800f4dc:	07d9      	lsls	r1, r3, #31
 800f4de:	d405      	bmi.n	800f4ec <_vfiprintf_r+0x220>
 800f4e0:	89ab      	ldrh	r3, [r5, #12]
 800f4e2:	059a      	lsls	r2, r3, #22
 800f4e4:	d402      	bmi.n	800f4ec <_vfiprintf_r+0x220>
 800f4e6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800f4e8:	f000 faaf 	bl	800fa4a <__retarget_lock_release_recursive>
 800f4ec:	89ab      	ldrh	r3, [r5, #12]
 800f4ee:	065b      	lsls	r3, r3, #25
 800f4f0:	f53f af12 	bmi.w	800f318 <_vfiprintf_r+0x4c>
 800f4f4:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f4f6:	e711      	b.n	800f31c <_vfiprintf_r+0x50>
 800f4f8:	ab03      	add	r3, sp, #12
 800f4fa:	9300      	str	r3, [sp, #0]
 800f4fc:	462a      	mov	r2, r5
 800f4fe:	4b09      	ldr	r3, [pc, #36]	; (800f524 <_vfiprintf_r+0x258>)
 800f500:	a904      	add	r1, sp, #16
 800f502:	4630      	mov	r0, r6
 800f504:	f7fe f862 	bl	800d5cc <_printf_i>
 800f508:	e7e4      	b.n	800f4d4 <_vfiprintf_r+0x208>
 800f50a:	bf00      	nop
 800f50c:	080116bc 	.word	0x080116bc
 800f510:	080116dc 	.word	0x080116dc
 800f514:	0801169c 	.word	0x0801169c
 800f518:	08011544 	.word	0x08011544
 800f51c:	0801154e 	.word	0x0801154e
 800f520:	0800d085 	.word	0x0800d085
 800f524:	0800f2a9 	.word	0x0800f2a9
 800f528:	0801154a 	.word	0x0801154a

0800f52c <__swbuf_r>:
 800f52c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f52e:	460e      	mov	r6, r1
 800f530:	4614      	mov	r4, r2
 800f532:	4605      	mov	r5, r0
 800f534:	b118      	cbz	r0, 800f53e <__swbuf_r+0x12>
 800f536:	6983      	ldr	r3, [r0, #24]
 800f538:	b90b      	cbnz	r3, 800f53e <__swbuf_r+0x12>
 800f53a:	f000 f9e7 	bl	800f90c <__sinit>
 800f53e:	4b21      	ldr	r3, [pc, #132]	; (800f5c4 <__swbuf_r+0x98>)
 800f540:	429c      	cmp	r4, r3
 800f542:	d12b      	bne.n	800f59c <__swbuf_r+0x70>
 800f544:	686c      	ldr	r4, [r5, #4]
 800f546:	69a3      	ldr	r3, [r4, #24]
 800f548:	60a3      	str	r3, [r4, #8]
 800f54a:	89a3      	ldrh	r3, [r4, #12]
 800f54c:	071a      	lsls	r2, r3, #28
 800f54e:	d52f      	bpl.n	800f5b0 <__swbuf_r+0x84>
 800f550:	6923      	ldr	r3, [r4, #16]
 800f552:	b36b      	cbz	r3, 800f5b0 <__swbuf_r+0x84>
 800f554:	6923      	ldr	r3, [r4, #16]
 800f556:	6820      	ldr	r0, [r4, #0]
 800f558:	1ac0      	subs	r0, r0, r3
 800f55a:	6963      	ldr	r3, [r4, #20]
 800f55c:	b2f6      	uxtb	r6, r6
 800f55e:	4283      	cmp	r3, r0
 800f560:	4637      	mov	r7, r6
 800f562:	dc04      	bgt.n	800f56e <__swbuf_r+0x42>
 800f564:	4621      	mov	r1, r4
 800f566:	4628      	mov	r0, r5
 800f568:	f000 f93c 	bl	800f7e4 <_fflush_r>
 800f56c:	bb30      	cbnz	r0, 800f5bc <__swbuf_r+0x90>
 800f56e:	68a3      	ldr	r3, [r4, #8]
 800f570:	3b01      	subs	r3, #1
 800f572:	60a3      	str	r3, [r4, #8]
 800f574:	6823      	ldr	r3, [r4, #0]
 800f576:	1c5a      	adds	r2, r3, #1
 800f578:	6022      	str	r2, [r4, #0]
 800f57a:	701e      	strb	r6, [r3, #0]
 800f57c:	6963      	ldr	r3, [r4, #20]
 800f57e:	3001      	adds	r0, #1
 800f580:	4283      	cmp	r3, r0
 800f582:	d004      	beq.n	800f58e <__swbuf_r+0x62>
 800f584:	89a3      	ldrh	r3, [r4, #12]
 800f586:	07db      	lsls	r3, r3, #31
 800f588:	d506      	bpl.n	800f598 <__swbuf_r+0x6c>
 800f58a:	2e0a      	cmp	r6, #10
 800f58c:	d104      	bne.n	800f598 <__swbuf_r+0x6c>
 800f58e:	4621      	mov	r1, r4
 800f590:	4628      	mov	r0, r5
 800f592:	f000 f927 	bl	800f7e4 <_fflush_r>
 800f596:	b988      	cbnz	r0, 800f5bc <__swbuf_r+0x90>
 800f598:	4638      	mov	r0, r7
 800f59a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f59c:	4b0a      	ldr	r3, [pc, #40]	; (800f5c8 <__swbuf_r+0x9c>)
 800f59e:	429c      	cmp	r4, r3
 800f5a0:	d101      	bne.n	800f5a6 <__swbuf_r+0x7a>
 800f5a2:	68ac      	ldr	r4, [r5, #8]
 800f5a4:	e7cf      	b.n	800f546 <__swbuf_r+0x1a>
 800f5a6:	4b09      	ldr	r3, [pc, #36]	; (800f5cc <__swbuf_r+0xa0>)
 800f5a8:	429c      	cmp	r4, r3
 800f5aa:	bf08      	it	eq
 800f5ac:	68ec      	ldreq	r4, [r5, #12]
 800f5ae:	e7ca      	b.n	800f546 <__swbuf_r+0x1a>
 800f5b0:	4621      	mov	r1, r4
 800f5b2:	4628      	mov	r0, r5
 800f5b4:	f000 f81a 	bl	800f5ec <__swsetup_r>
 800f5b8:	2800      	cmp	r0, #0
 800f5ba:	d0cb      	beq.n	800f554 <__swbuf_r+0x28>
 800f5bc:	f04f 37ff 	mov.w	r7, #4294967295
 800f5c0:	e7ea      	b.n	800f598 <__swbuf_r+0x6c>
 800f5c2:	bf00      	nop
 800f5c4:	080116bc 	.word	0x080116bc
 800f5c8:	080116dc 	.word	0x080116dc
 800f5cc:	0801169c 	.word	0x0801169c

0800f5d0 <__ascii_wctomb>:
 800f5d0:	b149      	cbz	r1, 800f5e6 <__ascii_wctomb+0x16>
 800f5d2:	2aff      	cmp	r2, #255	; 0xff
 800f5d4:	bf85      	ittet	hi
 800f5d6:	238a      	movhi	r3, #138	; 0x8a
 800f5d8:	6003      	strhi	r3, [r0, #0]
 800f5da:	700a      	strbls	r2, [r1, #0]
 800f5dc:	f04f 30ff 	movhi.w	r0, #4294967295
 800f5e0:	bf98      	it	ls
 800f5e2:	2001      	movls	r0, #1
 800f5e4:	4770      	bx	lr
 800f5e6:	4608      	mov	r0, r1
 800f5e8:	4770      	bx	lr
	...

0800f5ec <__swsetup_r>:
 800f5ec:	4b32      	ldr	r3, [pc, #200]	; (800f6b8 <__swsetup_r+0xcc>)
 800f5ee:	b570      	push	{r4, r5, r6, lr}
 800f5f0:	681d      	ldr	r5, [r3, #0]
 800f5f2:	4606      	mov	r6, r0
 800f5f4:	460c      	mov	r4, r1
 800f5f6:	b125      	cbz	r5, 800f602 <__swsetup_r+0x16>
 800f5f8:	69ab      	ldr	r3, [r5, #24]
 800f5fa:	b913      	cbnz	r3, 800f602 <__swsetup_r+0x16>
 800f5fc:	4628      	mov	r0, r5
 800f5fe:	f000 f985 	bl	800f90c <__sinit>
 800f602:	4b2e      	ldr	r3, [pc, #184]	; (800f6bc <__swsetup_r+0xd0>)
 800f604:	429c      	cmp	r4, r3
 800f606:	d10f      	bne.n	800f628 <__swsetup_r+0x3c>
 800f608:	686c      	ldr	r4, [r5, #4]
 800f60a:	89a3      	ldrh	r3, [r4, #12]
 800f60c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800f610:	0719      	lsls	r1, r3, #28
 800f612:	d42c      	bmi.n	800f66e <__swsetup_r+0x82>
 800f614:	06dd      	lsls	r5, r3, #27
 800f616:	d411      	bmi.n	800f63c <__swsetup_r+0x50>
 800f618:	2309      	movs	r3, #9
 800f61a:	6033      	str	r3, [r6, #0]
 800f61c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800f620:	81a3      	strh	r3, [r4, #12]
 800f622:	f04f 30ff 	mov.w	r0, #4294967295
 800f626:	e03e      	b.n	800f6a6 <__swsetup_r+0xba>
 800f628:	4b25      	ldr	r3, [pc, #148]	; (800f6c0 <__swsetup_r+0xd4>)
 800f62a:	429c      	cmp	r4, r3
 800f62c:	d101      	bne.n	800f632 <__swsetup_r+0x46>
 800f62e:	68ac      	ldr	r4, [r5, #8]
 800f630:	e7eb      	b.n	800f60a <__swsetup_r+0x1e>
 800f632:	4b24      	ldr	r3, [pc, #144]	; (800f6c4 <__swsetup_r+0xd8>)
 800f634:	429c      	cmp	r4, r3
 800f636:	bf08      	it	eq
 800f638:	68ec      	ldreq	r4, [r5, #12]
 800f63a:	e7e6      	b.n	800f60a <__swsetup_r+0x1e>
 800f63c:	0758      	lsls	r0, r3, #29
 800f63e:	d512      	bpl.n	800f666 <__swsetup_r+0x7a>
 800f640:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800f642:	b141      	cbz	r1, 800f656 <__swsetup_r+0x6a>
 800f644:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800f648:	4299      	cmp	r1, r3
 800f64a:	d002      	beq.n	800f652 <__swsetup_r+0x66>
 800f64c:	4630      	mov	r0, r6
 800f64e:	f7ff fb31 	bl	800ecb4 <_free_r>
 800f652:	2300      	movs	r3, #0
 800f654:	6363      	str	r3, [r4, #52]	; 0x34
 800f656:	89a3      	ldrh	r3, [r4, #12]
 800f658:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800f65c:	81a3      	strh	r3, [r4, #12]
 800f65e:	2300      	movs	r3, #0
 800f660:	6063      	str	r3, [r4, #4]
 800f662:	6923      	ldr	r3, [r4, #16]
 800f664:	6023      	str	r3, [r4, #0]
 800f666:	89a3      	ldrh	r3, [r4, #12]
 800f668:	f043 0308 	orr.w	r3, r3, #8
 800f66c:	81a3      	strh	r3, [r4, #12]
 800f66e:	6923      	ldr	r3, [r4, #16]
 800f670:	b94b      	cbnz	r3, 800f686 <__swsetup_r+0x9a>
 800f672:	89a3      	ldrh	r3, [r4, #12]
 800f674:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800f678:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800f67c:	d003      	beq.n	800f686 <__swsetup_r+0x9a>
 800f67e:	4621      	mov	r1, r4
 800f680:	4630      	mov	r0, r6
 800f682:	f000 fa09 	bl	800fa98 <__smakebuf_r>
 800f686:	89a0      	ldrh	r0, [r4, #12]
 800f688:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800f68c:	f010 0301 	ands.w	r3, r0, #1
 800f690:	d00a      	beq.n	800f6a8 <__swsetup_r+0xbc>
 800f692:	2300      	movs	r3, #0
 800f694:	60a3      	str	r3, [r4, #8]
 800f696:	6963      	ldr	r3, [r4, #20]
 800f698:	425b      	negs	r3, r3
 800f69a:	61a3      	str	r3, [r4, #24]
 800f69c:	6923      	ldr	r3, [r4, #16]
 800f69e:	b943      	cbnz	r3, 800f6b2 <__swsetup_r+0xc6>
 800f6a0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800f6a4:	d1ba      	bne.n	800f61c <__swsetup_r+0x30>
 800f6a6:	bd70      	pop	{r4, r5, r6, pc}
 800f6a8:	0781      	lsls	r1, r0, #30
 800f6aa:	bf58      	it	pl
 800f6ac:	6963      	ldrpl	r3, [r4, #20]
 800f6ae:	60a3      	str	r3, [r4, #8]
 800f6b0:	e7f4      	b.n	800f69c <__swsetup_r+0xb0>
 800f6b2:	2000      	movs	r0, #0
 800f6b4:	e7f7      	b.n	800f6a6 <__swsetup_r+0xba>
 800f6b6:	bf00      	nop
 800f6b8:	20000140 	.word	0x20000140
 800f6bc:	080116bc 	.word	0x080116bc
 800f6c0:	080116dc 	.word	0x080116dc
 800f6c4:	0801169c 	.word	0x0801169c

0800f6c8 <abort>:
 800f6c8:	b508      	push	{r3, lr}
 800f6ca:	2006      	movs	r0, #6
 800f6cc:	f000 fa54 	bl	800fb78 <raise>
 800f6d0:	2001      	movs	r0, #1
 800f6d2:	f7f7 fdef 	bl	80072b4 <_exit>
	...

0800f6d8 <__sflush_r>:
 800f6d8:	898a      	ldrh	r2, [r1, #12]
 800f6da:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f6de:	4605      	mov	r5, r0
 800f6e0:	0710      	lsls	r0, r2, #28
 800f6e2:	460c      	mov	r4, r1
 800f6e4:	d458      	bmi.n	800f798 <__sflush_r+0xc0>
 800f6e6:	684b      	ldr	r3, [r1, #4]
 800f6e8:	2b00      	cmp	r3, #0
 800f6ea:	dc05      	bgt.n	800f6f8 <__sflush_r+0x20>
 800f6ec:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800f6ee:	2b00      	cmp	r3, #0
 800f6f0:	dc02      	bgt.n	800f6f8 <__sflush_r+0x20>
 800f6f2:	2000      	movs	r0, #0
 800f6f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f6f8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800f6fa:	2e00      	cmp	r6, #0
 800f6fc:	d0f9      	beq.n	800f6f2 <__sflush_r+0x1a>
 800f6fe:	2300      	movs	r3, #0
 800f700:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800f704:	682f      	ldr	r7, [r5, #0]
 800f706:	602b      	str	r3, [r5, #0]
 800f708:	d032      	beq.n	800f770 <__sflush_r+0x98>
 800f70a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800f70c:	89a3      	ldrh	r3, [r4, #12]
 800f70e:	075a      	lsls	r2, r3, #29
 800f710:	d505      	bpl.n	800f71e <__sflush_r+0x46>
 800f712:	6863      	ldr	r3, [r4, #4]
 800f714:	1ac0      	subs	r0, r0, r3
 800f716:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f718:	b10b      	cbz	r3, 800f71e <__sflush_r+0x46>
 800f71a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800f71c:	1ac0      	subs	r0, r0, r3
 800f71e:	2300      	movs	r3, #0
 800f720:	4602      	mov	r2, r0
 800f722:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800f724:	6a21      	ldr	r1, [r4, #32]
 800f726:	4628      	mov	r0, r5
 800f728:	47b0      	blx	r6
 800f72a:	1c43      	adds	r3, r0, #1
 800f72c:	89a3      	ldrh	r3, [r4, #12]
 800f72e:	d106      	bne.n	800f73e <__sflush_r+0x66>
 800f730:	6829      	ldr	r1, [r5, #0]
 800f732:	291d      	cmp	r1, #29
 800f734:	d82c      	bhi.n	800f790 <__sflush_r+0xb8>
 800f736:	4a2a      	ldr	r2, [pc, #168]	; (800f7e0 <__sflush_r+0x108>)
 800f738:	40ca      	lsrs	r2, r1
 800f73a:	07d6      	lsls	r6, r2, #31
 800f73c:	d528      	bpl.n	800f790 <__sflush_r+0xb8>
 800f73e:	2200      	movs	r2, #0
 800f740:	6062      	str	r2, [r4, #4]
 800f742:	04d9      	lsls	r1, r3, #19
 800f744:	6922      	ldr	r2, [r4, #16]
 800f746:	6022      	str	r2, [r4, #0]
 800f748:	d504      	bpl.n	800f754 <__sflush_r+0x7c>
 800f74a:	1c42      	adds	r2, r0, #1
 800f74c:	d101      	bne.n	800f752 <__sflush_r+0x7a>
 800f74e:	682b      	ldr	r3, [r5, #0]
 800f750:	b903      	cbnz	r3, 800f754 <__sflush_r+0x7c>
 800f752:	6560      	str	r0, [r4, #84]	; 0x54
 800f754:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800f756:	602f      	str	r7, [r5, #0]
 800f758:	2900      	cmp	r1, #0
 800f75a:	d0ca      	beq.n	800f6f2 <__sflush_r+0x1a>
 800f75c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800f760:	4299      	cmp	r1, r3
 800f762:	d002      	beq.n	800f76a <__sflush_r+0x92>
 800f764:	4628      	mov	r0, r5
 800f766:	f7ff faa5 	bl	800ecb4 <_free_r>
 800f76a:	2000      	movs	r0, #0
 800f76c:	6360      	str	r0, [r4, #52]	; 0x34
 800f76e:	e7c1      	b.n	800f6f4 <__sflush_r+0x1c>
 800f770:	6a21      	ldr	r1, [r4, #32]
 800f772:	2301      	movs	r3, #1
 800f774:	4628      	mov	r0, r5
 800f776:	47b0      	blx	r6
 800f778:	1c41      	adds	r1, r0, #1
 800f77a:	d1c7      	bne.n	800f70c <__sflush_r+0x34>
 800f77c:	682b      	ldr	r3, [r5, #0]
 800f77e:	2b00      	cmp	r3, #0
 800f780:	d0c4      	beq.n	800f70c <__sflush_r+0x34>
 800f782:	2b1d      	cmp	r3, #29
 800f784:	d001      	beq.n	800f78a <__sflush_r+0xb2>
 800f786:	2b16      	cmp	r3, #22
 800f788:	d101      	bne.n	800f78e <__sflush_r+0xb6>
 800f78a:	602f      	str	r7, [r5, #0]
 800f78c:	e7b1      	b.n	800f6f2 <__sflush_r+0x1a>
 800f78e:	89a3      	ldrh	r3, [r4, #12]
 800f790:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f794:	81a3      	strh	r3, [r4, #12]
 800f796:	e7ad      	b.n	800f6f4 <__sflush_r+0x1c>
 800f798:	690f      	ldr	r7, [r1, #16]
 800f79a:	2f00      	cmp	r7, #0
 800f79c:	d0a9      	beq.n	800f6f2 <__sflush_r+0x1a>
 800f79e:	0793      	lsls	r3, r2, #30
 800f7a0:	680e      	ldr	r6, [r1, #0]
 800f7a2:	bf08      	it	eq
 800f7a4:	694b      	ldreq	r3, [r1, #20]
 800f7a6:	600f      	str	r7, [r1, #0]
 800f7a8:	bf18      	it	ne
 800f7aa:	2300      	movne	r3, #0
 800f7ac:	eba6 0807 	sub.w	r8, r6, r7
 800f7b0:	608b      	str	r3, [r1, #8]
 800f7b2:	f1b8 0f00 	cmp.w	r8, #0
 800f7b6:	dd9c      	ble.n	800f6f2 <__sflush_r+0x1a>
 800f7b8:	6a21      	ldr	r1, [r4, #32]
 800f7ba:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800f7bc:	4643      	mov	r3, r8
 800f7be:	463a      	mov	r2, r7
 800f7c0:	4628      	mov	r0, r5
 800f7c2:	47b0      	blx	r6
 800f7c4:	2800      	cmp	r0, #0
 800f7c6:	dc06      	bgt.n	800f7d6 <__sflush_r+0xfe>
 800f7c8:	89a3      	ldrh	r3, [r4, #12]
 800f7ca:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f7ce:	81a3      	strh	r3, [r4, #12]
 800f7d0:	f04f 30ff 	mov.w	r0, #4294967295
 800f7d4:	e78e      	b.n	800f6f4 <__sflush_r+0x1c>
 800f7d6:	4407      	add	r7, r0
 800f7d8:	eba8 0800 	sub.w	r8, r8, r0
 800f7dc:	e7e9      	b.n	800f7b2 <__sflush_r+0xda>
 800f7de:	bf00      	nop
 800f7e0:	20400001 	.word	0x20400001

0800f7e4 <_fflush_r>:
 800f7e4:	b538      	push	{r3, r4, r5, lr}
 800f7e6:	690b      	ldr	r3, [r1, #16]
 800f7e8:	4605      	mov	r5, r0
 800f7ea:	460c      	mov	r4, r1
 800f7ec:	b913      	cbnz	r3, 800f7f4 <_fflush_r+0x10>
 800f7ee:	2500      	movs	r5, #0
 800f7f0:	4628      	mov	r0, r5
 800f7f2:	bd38      	pop	{r3, r4, r5, pc}
 800f7f4:	b118      	cbz	r0, 800f7fe <_fflush_r+0x1a>
 800f7f6:	6983      	ldr	r3, [r0, #24]
 800f7f8:	b90b      	cbnz	r3, 800f7fe <_fflush_r+0x1a>
 800f7fa:	f000 f887 	bl	800f90c <__sinit>
 800f7fe:	4b14      	ldr	r3, [pc, #80]	; (800f850 <_fflush_r+0x6c>)
 800f800:	429c      	cmp	r4, r3
 800f802:	d11b      	bne.n	800f83c <_fflush_r+0x58>
 800f804:	686c      	ldr	r4, [r5, #4]
 800f806:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f80a:	2b00      	cmp	r3, #0
 800f80c:	d0ef      	beq.n	800f7ee <_fflush_r+0xa>
 800f80e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800f810:	07d0      	lsls	r0, r2, #31
 800f812:	d404      	bmi.n	800f81e <_fflush_r+0x3a>
 800f814:	0599      	lsls	r1, r3, #22
 800f816:	d402      	bmi.n	800f81e <_fflush_r+0x3a>
 800f818:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800f81a:	f000 f915 	bl	800fa48 <__retarget_lock_acquire_recursive>
 800f81e:	4628      	mov	r0, r5
 800f820:	4621      	mov	r1, r4
 800f822:	f7ff ff59 	bl	800f6d8 <__sflush_r>
 800f826:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800f828:	07da      	lsls	r2, r3, #31
 800f82a:	4605      	mov	r5, r0
 800f82c:	d4e0      	bmi.n	800f7f0 <_fflush_r+0xc>
 800f82e:	89a3      	ldrh	r3, [r4, #12]
 800f830:	059b      	lsls	r3, r3, #22
 800f832:	d4dd      	bmi.n	800f7f0 <_fflush_r+0xc>
 800f834:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800f836:	f000 f908 	bl	800fa4a <__retarget_lock_release_recursive>
 800f83a:	e7d9      	b.n	800f7f0 <_fflush_r+0xc>
 800f83c:	4b05      	ldr	r3, [pc, #20]	; (800f854 <_fflush_r+0x70>)
 800f83e:	429c      	cmp	r4, r3
 800f840:	d101      	bne.n	800f846 <_fflush_r+0x62>
 800f842:	68ac      	ldr	r4, [r5, #8]
 800f844:	e7df      	b.n	800f806 <_fflush_r+0x22>
 800f846:	4b04      	ldr	r3, [pc, #16]	; (800f858 <_fflush_r+0x74>)
 800f848:	429c      	cmp	r4, r3
 800f84a:	bf08      	it	eq
 800f84c:	68ec      	ldreq	r4, [r5, #12]
 800f84e:	e7da      	b.n	800f806 <_fflush_r+0x22>
 800f850:	080116bc 	.word	0x080116bc
 800f854:	080116dc 	.word	0x080116dc
 800f858:	0801169c 	.word	0x0801169c

0800f85c <std>:
 800f85c:	2300      	movs	r3, #0
 800f85e:	b510      	push	{r4, lr}
 800f860:	4604      	mov	r4, r0
 800f862:	e9c0 3300 	strd	r3, r3, [r0]
 800f866:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800f86a:	6083      	str	r3, [r0, #8]
 800f86c:	8181      	strh	r1, [r0, #12]
 800f86e:	6643      	str	r3, [r0, #100]	; 0x64
 800f870:	81c2      	strh	r2, [r0, #14]
 800f872:	6183      	str	r3, [r0, #24]
 800f874:	4619      	mov	r1, r3
 800f876:	2208      	movs	r2, #8
 800f878:	305c      	adds	r0, #92	; 0x5c
 800f87a:	f7fd fb5b 	bl	800cf34 <memset>
 800f87e:	4b05      	ldr	r3, [pc, #20]	; (800f894 <std+0x38>)
 800f880:	6263      	str	r3, [r4, #36]	; 0x24
 800f882:	4b05      	ldr	r3, [pc, #20]	; (800f898 <std+0x3c>)
 800f884:	62a3      	str	r3, [r4, #40]	; 0x28
 800f886:	4b05      	ldr	r3, [pc, #20]	; (800f89c <std+0x40>)
 800f888:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f88a:	4b05      	ldr	r3, [pc, #20]	; (800f8a0 <std+0x44>)
 800f88c:	6224      	str	r4, [r4, #32]
 800f88e:	6323      	str	r3, [r4, #48]	; 0x30
 800f890:	bd10      	pop	{r4, pc}
 800f892:	bf00      	nop
 800f894:	0800fbb1 	.word	0x0800fbb1
 800f898:	0800fbd3 	.word	0x0800fbd3
 800f89c:	0800fc0b 	.word	0x0800fc0b
 800f8a0:	0800fc2f 	.word	0x0800fc2f

0800f8a4 <_cleanup_r>:
 800f8a4:	4901      	ldr	r1, [pc, #4]	; (800f8ac <_cleanup_r+0x8>)
 800f8a6:	f000 b8af 	b.w	800fa08 <_fwalk_reent>
 800f8aa:	bf00      	nop
 800f8ac:	0800f7e5 	.word	0x0800f7e5

0800f8b0 <__sfmoreglue>:
 800f8b0:	b570      	push	{r4, r5, r6, lr}
 800f8b2:	2268      	movs	r2, #104	; 0x68
 800f8b4:	1e4d      	subs	r5, r1, #1
 800f8b6:	4355      	muls	r5, r2
 800f8b8:	460e      	mov	r6, r1
 800f8ba:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800f8be:	f7ff fa65 	bl	800ed8c <_malloc_r>
 800f8c2:	4604      	mov	r4, r0
 800f8c4:	b140      	cbz	r0, 800f8d8 <__sfmoreglue+0x28>
 800f8c6:	2100      	movs	r1, #0
 800f8c8:	e9c0 1600 	strd	r1, r6, [r0]
 800f8cc:	300c      	adds	r0, #12
 800f8ce:	60a0      	str	r0, [r4, #8]
 800f8d0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800f8d4:	f7fd fb2e 	bl	800cf34 <memset>
 800f8d8:	4620      	mov	r0, r4
 800f8da:	bd70      	pop	{r4, r5, r6, pc}

0800f8dc <__sfp_lock_acquire>:
 800f8dc:	4801      	ldr	r0, [pc, #4]	; (800f8e4 <__sfp_lock_acquire+0x8>)
 800f8de:	f000 b8b3 	b.w	800fa48 <__retarget_lock_acquire_recursive>
 800f8e2:	bf00      	nop
 800f8e4:	20000c89 	.word	0x20000c89

0800f8e8 <__sfp_lock_release>:
 800f8e8:	4801      	ldr	r0, [pc, #4]	; (800f8f0 <__sfp_lock_release+0x8>)
 800f8ea:	f000 b8ae 	b.w	800fa4a <__retarget_lock_release_recursive>
 800f8ee:	bf00      	nop
 800f8f0:	20000c89 	.word	0x20000c89

0800f8f4 <__sinit_lock_acquire>:
 800f8f4:	4801      	ldr	r0, [pc, #4]	; (800f8fc <__sinit_lock_acquire+0x8>)
 800f8f6:	f000 b8a7 	b.w	800fa48 <__retarget_lock_acquire_recursive>
 800f8fa:	bf00      	nop
 800f8fc:	20000c8a 	.word	0x20000c8a

0800f900 <__sinit_lock_release>:
 800f900:	4801      	ldr	r0, [pc, #4]	; (800f908 <__sinit_lock_release+0x8>)
 800f902:	f000 b8a2 	b.w	800fa4a <__retarget_lock_release_recursive>
 800f906:	bf00      	nop
 800f908:	20000c8a 	.word	0x20000c8a

0800f90c <__sinit>:
 800f90c:	b510      	push	{r4, lr}
 800f90e:	4604      	mov	r4, r0
 800f910:	f7ff fff0 	bl	800f8f4 <__sinit_lock_acquire>
 800f914:	69a3      	ldr	r3, [r4, #24]
 800f916:	b11b      	cbz	r3, 800f920 <__sinit+0x14>
 800f918:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f91c:	f7ff bff0 	b.w	800f900 <__sinit_lock_release>
 800f920:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800f924:	6523      	str	r3, [r4, #80]	; 0x50
 800f926:	4b13      	ldr	r3, [pc, #76]	; (800f974 <__sinit+0x68>)
 800f928:	4a13      	ldr	r2, [pc, #76]	; (800f978 <__sinit+0x6c>)
 800f92a:	681b      	ldr	r3, [r3, #0]
 800f92c:	62a2      	str	r2, [r4, #40]	; 0x28
 800f92e:	42a3      	cmp	r3, r4
 800f930:	bf04      	itt	eq
 800f932:	2301      	moveq	r3, #1
 800f934:	61a3      	streq	r3, [r4, #24]
 800f936:	4620      	mov	r0, r4
 800f938:	f000 f820 	bl	800f97c <__sfp>
 800f93c:	6060      	str	r0, [r4, #4]
 800f93e:	4620      	mov	r0, r4
 800f940:	f000 f81c 	bl	800f97c <__sfp>
 800f944:	60a0      	str	r0, [r4, #8]
 800f946:	4620      	mov	r0, r4
 800f948:	f000 f818 	bl	800f97c <__sfp>
 800f94c:	2200      	movs	r2, #0
 800f94e:	60e0      	str	r0, [r4, #12]
 800f950:	2104      	movs	r1, #4
 800f952:	6860      	ldr	r0, [r4, #4]
 800f954:	f7ff ff82 	bl	800f85c <std>
 800f958:	68a0      	ldr	r0, [r4, #8]
 800f95a:	2201      	movs	r2, #1
 800f95c:	2109      	movs	r1, #9
 800f95e:	f7ff ff7d 	bl	800f85c <std>
 800f962:	68e0      	ldr	r0, [r4, #12]
 800f964:	2202      	movs	r2, #2
 800f966:	2112      	movs	r1, #18
 800f968:	f7ff ff78 	bl	800f85c <std>
 800f96c:	2301      	movs	r3, #1
 800f96e:	61a3      	str	r3, [r4, #24]
 800f970:	e7d2      	b.n	800f918 <__sinit+0xc>
 800f972:	bf00      	nop
 800f974:	08011324 	.word	0x08011324
 800f978:	0800f8a5 	.word	0x0800f8a5

0800f97c <__sfp>:
 800f97c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f97e:	4607      	mov	r7, r0
 800f980:	f7ff ffac 	bl	800f8dc <__sfp_lock_acquire>
 800f984:	4b1e      	ldr	r3, [pc, #120]	; (800fa00 <__sfp+0x84>)
 800f986:	681e      	ldr	r6, [r3, #0]
 800f988:	69b3      	ldr	r3, [r6, #24]
 800f98a:	b913      	cbnz	r3, 800f992 <__sfp+0x16>
 800f98c:	4630      	mov	r0, r6
 800f98e:	f7ff ffbd 	bl	800f90c <__sinit>
 800f992:	3648      	adds	r6, #72	; 0x48
 800f994:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800f998:	3b01      	subs	r3, #1
 800f99a:	d503      	bpl.n	800f9a4 <__sfp+0x28>
 800f99c:	6833      	ldr	r3, [r6, #0]
 800f99e:	b30b      	cbz	r3, 800f9e4 <__sfp+0x68>
 800f9a0:	6836      	ldr	r6, [r6, #0]
 800f9a2:	e7f7      	b.n	800f994 <__sfp+0x18>
 800f9a4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800f9a8:	b9d5      	cbnz	r5, 800f9e0 <__sfp+0x64>
 800f9aa:	4b16      	ldr	r3, [pc, #88]	; (800fa04 <__sfp+0x88>)
 800f9ac:	60e3      	str	r3, [r4, #12]
 800f9ae:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f9b2:	6665      	str	r5, [r4, #100]	; 0x64
 800f9b4:	f000 f847 	bl	800fa46 <__retarget_lock_init_recursive>
 800f9b8:	f7ff ff96 	bl	800f8e8 <__sfp_lock_release>
 800f9bc:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800f9c0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800f9c4:	6025      	str	r5, [r4, #0]
 800f9c6:	61a5      	str	r5, [r4, #24]
 800f9c8:	2208      	movs	r2, #8
 800f9ca:	4629      	mov	r1, r5
 800f9cc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800f9d0:	f7fd fab0 	bl	800cf34 <memset>
 800f9d4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800f9d8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800f9dc:	4620      	mov	r0, r4
 800f9de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f9e0:	3468      	adds	r4, #104	; 0x68
 800f9e2:	e7d9      	b.n	800f998 <__sfp+0x1c>
 800f9e4:	2104      	movs	r1, #4
 800f9e6:	4638      	mov	r0, r7
 800f9e8:	f7ff ff62 	bl	800f8b0 <__sfmoreglue>
 800f9ec:	4604      	mov	r4, r0
 800f9ee:	6030      	str	r0, [r6, #0]
 800f9f0:	2800      	cmp	r0, #0
 800f9f2:	d1d5      	bne.n	800f9a0 <__sfp+0x24>
 800f9f4:	f7ff ff78 	bl	800f8e8 <__sfp_lock_release>
 800f9f8:	230c      	movs	r3, #12
 800f9fa:	603b      	str	r3, [r7, #0]
 800f9fc:	e7ee      	b.n	800f9dc <__sfp+0x60>
 800f9fe:	bf00      	nop
 800fa00:	08011324 	.word	0x08011324
 800fa04:	ffff0001 	.word	0xffff0001

0800fa08 <_fwalk_reent>:
 800fa08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fa0c:	4606      	mov	r6, r0
 800fa0e:	4688      	mov	r8, r1
 800fa10:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800fa14:	2700      	movs	r7, #0
 800fa16:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800fa1a:	f1b9 0901 	subs.w	r9, r9, #1
 800fa1e:	d505      	bpl.n	800fa2c <_fwalk_reent+0x24>
 800fa20:	6824      	ldr	r4, [r4, #0]
 800fa22:	2c00      	cmp	r4, #0
 800fa24:	d1f7      	bne.n	800fa16 <_fwalk_reent+0xe>
 800fa26:	4638      	mov	r0, r7
 800fa28:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800fa2c:	89ab      	ldrh	r3, [r5, #12]
 800fa2e:	2b01      	cmp	r3, #1
 800fa30:	d907      	bls.n	800fa42 <_fwalk_reent+0x3a>
 800fa32:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800fa36:	3301      	adds	r3, #1
 800fa38:	d003      	beq.n	800fa42 <_fwalk_reent+0x3a>
 800fa3a:	4629      	mov	r1, r5
 800fa3c:	4630      	mov	r0, r6
 800fa3e:	47c0      	blx	r8
 800fa40:	4307      	orrs	r7, r0
 800fa42:	3568      	adds	r5, #104	; 0x68
 800fa44:	e7e9      	b.n	800fa1a <_fwalk_reent+0x12>

0800fa46 <__retarget_lock_init_recursive>:
 800fa46:	4770      	bx	lr

0800fa48 <__retarget_lock_acquire_recursive>:
 800fa48:	4770      	bx	lr

0800fa4a <__retarget_lock_release_recursive>:
 800fa4a:	4770      	bx	lr

0800fa4c <__swhatbuf_r>:
 800fa4c:	b570      	push	{r4, r5, r6, lr}
 800fa4e:	460e      	mov	r6, r1
 800fa50:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800fa54:	2900      	cmp	r1, #0
 800fa56:	b096      	sub	sp, #88	; 0x58
 800fa58:	4614      	mov	r4, r2
 800fa5a:	461d      	mov	r5, r3
 800fa5c:	da08      	bge.n	800fa70 <__swhatbuf_r+0x24>
 800fa5e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800fa62:	2200      	movs	r2, #0
 800fa64:	602a      	str	r2, [r5, #0]
 800fa66:	061a      	lsls	r2, r3, #24
 800fa68:	d410      	bmi.n	800fa8c <__swhatbuf_r+0x40>
 800fa6a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800fa6e:	e00e      	b.n	800fa8e <__swhatbuf_r+0x42>
 800fa70:	466a      	mov	r2, sp
 800fa72:	f000 f903 	bl	800fc7c <_fstat_r>
 800fa76:	2800      	cmp	r0, #0
 800fa78:	dbf1      	blt.n	800fa5e <__swhatbuf_r+0x12>
 800fa7a:	9a01      	ldr	r2, [sp, #4]
 800fa7c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800fa80:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800fa84:	425a      	negs	r2, r3
 800fa86:	415a      	adcs	r2, r3
 800fa88:	602a      	str	r2, [r5, #0]
 800fa8a:	e7ee      	b.n	800fa6a <__swhatbuf_r+0x1e>
 800fa8c:	2340      	movs	r3, #64	; 0x40
 800fa8e:	2000      	movs	r0, #0
 800fa90:	6023      	str	r3, [r4, #0]
 800fa92:	b016      	add	sp, #88	; 0x58
 800fa94:	bd70      	pop	{r4, r5, r6, pc}
	...

0800fa98 <__smakebuf_r>:
 800fa98:	898b      	ldrh	r3, [r1, #12]
 800fa9a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fa9c:	079d      	lsls	r5, r3, #30
 800fa9e:	4606      	mov	r6, r0
 800faa0:	460c      	mov	r4, r1
 800faa2:	d507      	bpl.n	800fab4 <__smakebuf_r+0x1c>
 800faa4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800faa8:	6023      	str	r3, [r4, #0]
 800faaa:	6123      	str	r3, [r4, #16]
 800faac:	2301      	movs	r3, #1
 800faae:	6163      	str	r3, [r4, #20]
 800fab0:	b002      	add	sp, #8
 800fab2:	bd70      	pop	{r4, r5, r6, pc}
 800fab4:	ab01      	add	r3, sp, #4
 800fab6:	466a      	mov	r2, sp
 800fab8:	f7ff ffc8 	bl	800fa4c <__swhatbuf_r>
 800fabc:	9900      	ldr	r1, [sp, #0]
 800fabe:	4605      	mov	r5, r0
 800fac0:	4630      	mov	r0, r6
 800fac2:	f7ff f963 	bl	800ed8c <_malloc_r>
 800fac6:	b948      	cbnz	r0, 800fadc <__smakebuf_r+0x44>
 800fac8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800facc:	059a      	lsls	r2, r3, #22
 800face:	d4ef      	bmi.n	800fab0 <__smakebuf_r+0x18>
 800fad0:	f023 0303 	bic.w	r3, r3, #3
 800fad4:	f043 0302 	orr.w	r3, r3, #2
 800fad8:	81a3      	strh	r3, [r4, #12]
 800fada:	e7e3      	b.n	800faa4 <__smakebuf_r+0xc>
 800fadc:	4b0d      	ldr	r3, [pc, #52]	; (800fb14 <__smakebuf_r+0x7c>)
 800fade:	62b3      	str	r3, [r6, #40]	; 0x28
 800fae0:	89a3      	ldrh	r3, [r4, #12]
 800fae2:	6020      	str	r0, [r4, #0]
 800fae4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800fae8:	81a3      	strh	r3, [r4, #12]
 800faea:	9b00      	ldr	r3, [sp, #0]
 800faec:	6163      	str	r3, [r4, #20]
 800faee:	9b01      	ldr	r3, [sp, #4]
 800faf0:	6120      	str	r0, [r4, #16]
 800faf2:	b15b      	cbz	r3, 800fb0c <__smakebuf_r+0x74>
 800faf4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800faf8:	4630      	mov	r0, r6
 800fafa:	f000 f8d1 	bl	800fca0 <_isatty_r>
 800fafe:	b128      	cbz	r0, 800fb0c <__smakebuf_r+0x74>
 800fb00:	89a3      	ldrh	r3, [r4, #12]
 800fb02:	f023 0303 	bic.w	r3, r3, #3
 800fb06:	f043 0301 	orr.w	r3, r3, #1
 800fb0a:	81a3      	strh	r3, [r4, #12]
 800fb0c:	89a0      	ldrh	r0, [r4, #12]
 800fb0e:	4305      	orrs	r5, r0
 800fb10:	81a5      	strh	r5, [r4, #12]
 800fb12:	e7cd      	b.n	800fab0 <__smakebuf_r+0x18>
 800fb14:	0800f8a5 	.word	0x0800f8a5

0800fb18 <_malloc_usable_size_r>:
 800fb18:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800fb1c:	1f18      	subs	r0, r3, #4
 800fb1e:	2b00      	cmp	r3, #0
 800fb20:	bfbc      	itt	lt
 800fb22:	580b      	ldrlt	r3, [r1, r0]
 800fb24:	18c0      	addlt	r0, r0, r3
 800fb26:	4770      	bx	lr

0800fb28 <_raise_r>:
 800fb28:	291f      	cmp	r1, #31
 800fb2a:	b538      	push	{r3, r4, r5, lr}
 800fb2c:	4604      	mov	r4, r0
 800fb2e:	460d      	mov	r5, r1
 800fb30:	d904      	bls.n	800fb3c <_raise_r+0x14>
 800fb32:	2316      	movs	r3, #22
 800fb34:	6003      	str	r3, [r0, #0]
 800fb36:	f04f 30ff 	mov.w	r0, #4294967295
 800fb3a:	bd38      	pop	{r3, r4, r5, pc}
 800fb3c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800fb3e:	b112      	cbz	r2, 800fb46 <_raise_r+0x1e>
 800fb40:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800fb44:	b94b      	cbnz	r3, 800fb5a <_raise_r+0x32>
 800fb46:	4620      	mov	r0, r4
 800fb48:	f000 f830 	bl	800fbac <_getpid_r>
 800fb4c:	462a      	mov	r2, r5
 800fb4e:	4601      	mov	r1, r0
 800fb50:	4620      	mov	r0, r4
 800fb52:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800fb56:	f000 b817 	b.w	800fb88 <_kill_r>
 800fb5a:	2b01      	cmp	r3, #1
 800fb5c:	d00a      	beq.n	800fb74 <_raise_r+0x4c>
 800fb5e:	1c59      	adds	r1, r3, #1
 800fb60:	d103      	bne.n	800fb6a <_raise_r+0x42>
 800fb62:	2316      	movs	r3, #22
 800fb64:	6003      	str	r3, [r0, #0]
 800fb66:	2001      	movs	r0, #1
 800fb68:	e7e7      	b.n	800fb3a <_raise_r+0x12>
 800fb6a:	2400      	movs	r4, #0
 800fb6c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800fb70:	4628      	mov	r0, r5
 800fb72:	4798      	blx	r3
 800fb74:	2000      	movs	r0, #0
 800fb76:	e7e0      	b.n	800fb3a <_raise_r+0x12>

0800fb78 <raise>:
 800fb78:	4b02      	ldr	r3, [pc, #8]	; (800fb84 <raise+0xc>)
 800fb7a:	4601      	mov	r1, r0
 800fb7c:	6818      	ldr	r0, [r3, #0]
 800fb7e:	f7ff bfd3 	b.w	800fb28 <_raise_r>
 800fb82:	bf00      	nop
 800fb84:	20000140 	.word	0x20000140

0800fb88 <_kill_r>:
 800fb88:	b538      	push	{r3, r4, r5, lr}
 800fb8a:	4d07      	ldr	r5, [pc, #28]	; (800fba8 <_kill_r+0x20>)
 800fb8c:	2300      	movs	r3, #0
 800fb8e:	4604      	mov	r4, r0
 800fb90:	4608      	mov	r0, r1
 800fb92:	4611      	mov	r1, r2
 800fb94:	602b      	str	r3, [r5, #0]
 800fb96:	f7f7 fb7d 	bl	8007294 <_kill>
 800fb9a:	1c43      	adds	r3, r0, #1
 800fb9c:	d102      	bne.n	800fba4 <_kill_r+0x1c>
 800fb9e:	682b      	ldr	r3, [r5, #0]
 800fba0:	b103      	cbz	r3, 800fba4 <_kill_r+0x1c>
 800fba2:	6023      	str	r3, [r4, #0]
 800fba4:	bd38      	pop	{r3, r4, r5, pc}
 800fba6:	bf00      	nop
 800fba8:	20000c84 	.word	0x20000c84

0800fbac <_getpid_r>:
 800fbac:	f7f7 bb6a 	b.w	8007284 <_getpid>

0800fbb0 <__sread>:
 800fbb0:	b510      	push	{r4, lr}
 800fbb2:	460c      	mov	r4, r1
 800fbb4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800fbb8:	f000 f894 	bl	800fce4 <_read_r>
 800fbbc:	2800      	cmp	r0, #0
 800fbbe:	bfab      	itete	ge
 800fbc0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800fbc2:	89a3      	ldrhlt	r3, [r4, #12]
 800fbc4:	181b      	addge	r3, r3, r0
 800fbc6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800fbca:	bfac      	ite	ge
 800fbcc:	6563      	strge	r3, [r4, #84]	; 0x54
 800fbce:	81a3      	strhlt	r3, [r4, #12]
 800fbd0:	bd10      	pop	{r4, pc}

0800fbd2 <__swrite>:
 800fbd2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fbd6:	461f      	mov	r7, r3
 800fbd8:	898b      	ldrh	r3, [r1, #12]
 800fbda:	05db      	lsls	r3, r3, #23
 800fbdc:	4605      	mov	r5, r0
 800fbde:	460c      	mov	r4, r1
 800fbe0:	4616      	mov	r6, r2
 800fbe2:	d505      	bpl.n	800fbf0 <__swrite+0x1e>
 800fbe4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800fbe8:	2302      	movs	r3, #2
 800fbea:	2200      	movs	r2, #0
 800fbec:	f000 f868 	bl	800fcc0 <_lseek_r>
 800fbf0:	89a3      	ldrh	r3, [r4, #12]
 800fbf2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800fbf6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800fbfa:	81a3      	strh	r3, [r4, #12]
 800fbfc:	4632      	mov	r2, r6
 800fbfe:	463b      	mov	r3, r7
 800fc00:	4628      	mov	r0, r5
 800fc02:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800fc06:	f000 b817 	b.w	800fc38 <_write_r>

0800fc0a <__sseek>:
 800fc0a:	b510      	push	{r4, lr}
 800fc0c:	460c      	mov	r4, r1
 800fc0e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800fc12:	f000 f855 	bl	800fcc0 <_lseek_r>
 800fc16:	1c43      	adds	r3, r0, #1
 800fc18:	89a3      	ldrh	r3, [r4, #12]
 800fc1a:	bf15      	itete	ne
 800fc1c:	6560      	strne	r0, [r4, #84]	; 0x54
 800fc1e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800fc22:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800fc26:	81a3      	strheq	r3, [r4, #12]
 800fc28:	bf18      	it	ne
 800fc2a:	81a3      	strhne	r3, [r4, #12]
 800fc2c:	bd10      	pop	{r4, pc}

0800fc2e <__sclose>:
 800fc2e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800fc32:	f000 b813 	b.w	800fc5c <_close_r>
	...

0800fc38 <_write_r>:
 800fc38:	b538      	push	{r3, r4, r5, lr}
 800fc3a:	4d07      	ldr	r5, [pc, #28]	; (800fc58 <_write_r+0x20>)
 800fc3c:	4604      	mov	r4, r0
 800fc3e:	4608      	mov	r0, r1
 800fc40:	4611      	mov	r1, r2
 800fc42:	2200      	movs	r2, #0
 800fc44:	602a      	str	r2, [r5, #0]
 800fc46:	461a      	mov	r2, r3
 800fc48:	f7f7 fb5b 	bl	8007302 <_write>
 800fc4c:	1c43      	adds	r3, r0, #1
 800fc4e:	d102      	bne.n	800fc56 <_write_r+0x1e>
 800fc50:	682b      	ldr	r3, [r5, #0]
 800fc52:	b103      	cbz	r3, 800fc56 <_write_r+0x1e>
 800fc54:	6023      	str	r3, [r4, #0]
 800fc56:	bd38      	pop	{r3, r4, r5, pc}
 800fc58:	20000c84 	.word	0x20000c84

0800fc5c <_close_r>:
 800fc5c:	b538      	push	{r3, r4, r5, lr}
 800fc5e:	4d06      	ldr	r5, [pc, #24]	; (800fc78 <_close_r+0x1c>)
 800fc60:	2300      	movs	r3, #0
 800fc62:	4604      	mov	r4, r0
 800fc64:	4608      	mov	r0, r1
 800fc66:	602b      	str	r3, [r5, #0]
 800fc68:	f7f7 fb67 	bl	800733a <_close>
 800fc6c:	1c43      	adds	r3, r0, #1
 800fc6e:	d102      	bne.n	800fc76 <_close_r+0x1a>
 800fc70:	682b      	ldr	r3, [r5, #0]
 800fc72:	b103      	cbz	r3, 800fc76 <_close_r+0x1a>
 800fc74:	6023      	str	r3, [r4, #0]
 800fc76:	bd38      	pop	{r3, r4, r5, pc}
 800fc78:	20000c84 	.word	0x20000c84

0800fc7c <_fstat_r>:
 800fc7c:	b538      	push	{r3, r4, r5, lr}
 800fc7e:	4d07      	ldr	r5, [pc, #28]	; (800fc9c <_fstat_r+0x20>)
 800fc80:	2300      	movs	r3, #0
 800fc82:	4604      	mov	r4, r0
 800fc84:	4608      	mov	r0, r1
 800fc86:	4611      	mov	r1, r2
 800fc88:	602b      	str	r3, [r5, #0]
 800fc8a:	f7f7 fb62 	bl	8007352 <_fstat>
 800fc8e:	1c43      	adds	r3, r0, #1
 800fc90:	d102      	bne.n	800fc98 <_fstat_r+0x1c>
 800fc92:	682b      	ldr	r3, [r5, #0]
 800fc94:	b103      	cbz	r3, 800fc98 <_fstat_r+0x1c>
 800fc96:	6023      	str	r3, [r4, #0]
 800fc98:	bd38      	pop	{r3, r4, r5, pc}
 800fc9a:	bf00      	nop
 800fc9c:	20000c84 	.word	0x20000c84

0800fca0 <_isatty_r>:
 800fca0:	b538      	push	{r3, r4, r5, lr}
 800fca2:	4d06      	ldr	r5, [pc, #24]	; (800fcbc <_isatty_r+0x1c>)
 800fca4:	2300      	movs	r3, #0
 800fca6:	4604      	mov	r4, r0
 800fca8:	4608      	mov	r0, r1
 800fcaa:	602b      	str	r3, [r5, #0]
 800fcac:	f7f7 fb61 	bl	8007372 <_isatty>
 800fcb0:	1c43      	adds	r3, r0, #1
 800fcb2:	d102      	bne.n	800fcba <_isatty_r+0x1a>
 800fcb4:	682b      	ldr	r3, [r5, #0]
 800fcb6:	b103      	cbz	r3, 800fcba <_isatty_r+0x1a>
 800fcb8:	6023      	str	r3, [r4, #0]
 800fcba:	bd38      	pop	{r3, r4, r5, pc}
 800fcbc:	20000c84 	.word	0x20000c84

0800fcc0 <_lseek_r>:
 800fcc0:	b538      	push	{r3, r4, r5, lr}
 800fcc2:	4d07      	ldr	r5, [pc, #28]	; (800fce0 <_lseek_r+0x20>)
 800fcc4:	4604      	mov	r4, r0
 800fcc6:	4608      	mov	r0, r1
 800fcc8:	4611      	mov	r1, r2
 800fcca:	2200      	movs	r2, #0
 800fccc:	602a      	str	r2, [r5, #0]
 800fcce:	461a      	mov	r2, r3
 800fcd0:	f7f7 fb5a 	bl	8007388 <_lseek>
 800fcd4:	1c43      	adds	r3, r0, #1
 800fcd6:	d102      	bne.n	800fcde <_lseek_r+0x1e>
 800fcd8:	682b      	ldr	r3, [r5, #0]
 800fcda:	b103      	cbz	r3, 800fcde <_lseek_r+0x1e>
 800fcdc:	6023      	str	r3, [r4, #0]
 800fcde:	bd38      	pop	{r3, r4, r5, pc}
 800fce0:	20000c84 	.word	0x20000c84

0800fce4 <_read_r>:
 800fce4:	b538      	push	{r3, r4, r5, lr}
 800fce6:	4d07      	ldr	r5, [pc, #28]	; (800fd04 <_read_r+0x20>)
 800fce8:	4604      	mov	r4, r0
 800fcea:	4608      	mov	r0, r1
 800fcec:	4611      	mov	r1, r2
 800fcee:	2200      	movs	r2, #0
 800fcf0:	602a      	str	r2, [r5, #0]
 800fcf2:	461a      	mov	r2, r3
 800fcf4:	f7f7 fae8 	bl	80072c8 <_read>
 800fcf8:	1c43      	adds	r3, r0, #1
 800fcfa:	d102      	bne.n	800fd02 <_read_r+0x1e>
 800fcfc:	682b      	ldr	r3, [r5, #0]
 800fcfe:	b103      	cbz	r3, 800fd02 <_read_r+0x1e>
 800fd00:	6023      	str	r3, [r4, #0]
 800fd02:	bd38      	pop	{r3, r4, r5, pc}
 800fd04:	20000c84 	.word	0x20000c84

0800fd08 <atan>:
 800fd08:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd0c:	ec55 4b10 	vmov	r4, r5, d0
 800fd10:	4bc3      	ldr	r3, [pc, #780]	; (8010020 <atan+0x318>)
 800fd12:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 800fd16:	429e      	cmp	r6, r3
 800fd18:	46ab      	mov	fp, r5
 800fd1a:	dd18      	ble.n	800fd4e <atan+0x46>
 800fd1c:	4bc1      	ldr	r3, [pc, #772]	; (8010024 <atan+0x31c>)
 800fd1e:	429e      	cmp	r6, r3
 800fd20:	dc01      	bgt.n	800fd26 <atan+0x1e>
 800fd22:	d109      	bne.n	800fd38 <atan+0x30>
 800fd24:	b144      	cbz	r4, 800fd38 <atan+0x30>
 800fd26:	4622      	mov	r2, r4
 800fd28:	462b      	mov	r3, r5
 800fd2a:	4620      	mov	r0, r4
 800fd2c:	4629      	mov	r1, r5
 800fd2e:	f7f0 facd 	bl	80002cc <__adddf3>
 800fd32:	4604      	mov	r4, r0
 800fd34:	460d      	mov	r5, r1
 800fd36:	e006      	b.n	800fd46 <atan+0x3e>
 800fd38:	f1bb 0f00 	cmp.w	fp, #0
 800fd3c:	f300 8131 	bgt.w	800ffa2 <atan+0x29a>
 800fd40:	a59b      	add	r5, pc, #620	; (adr r5, 800ffb0 <atan+0x2a8>)
 800fd42:	e9d5 4500 	ldrd	r4, r5, [r5]
 800fd46:	ec45 4b10 	vmov	d0, r4, r5
 800fd4a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fd4e:	4bb6      	ldr	r3, [pc, #728]	; (8010028 <atan+0x320>)
 800fd50:	429e      	cmp	r6, r3
 800fd52:	dc14      	bgt.n	800fd7e <atan+0x76>
 800fd54:	f1a3 73de 	sub.w	r3, r3, #29097984	; 0x1bc0000
 800fd58:	429e      	cmp	r6, r3
 800fd5a:	dc0d      	bgt.n	800fd78 <atan+0x70>
 800fd5c:	a396      	add	r3, pc, #600	; (adr r3, 800ffb8 <atan+0x2b0>)
 800fd5e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fd62:	ee10 0a10 	vmov	r0, s0
 800fd66:	4629      	mov	r1, r5
 800fd68:	f7f0 fab0 	bl	80002cc <__adddf3>
 800fd6c:	4baf      	ldr	r3, [pc, #700]	; (801002c <atan+0x324>)
 800fd6e:	2200      	movs	r2, #0
 800fd70:	f7f0 fef2 	bl	8000b58 <__aeabi_dcmpgt>
 800fd74:	2800      	cmp	r0, #0
 800fd76:	d1e6      	bne.n	800fd46 <atan+0x3e>
 800fd78:	f04f 3aff 	mov.w	sl, #4294967295
 800fd7c:	e02b      	b.n	800fdd6 <atan+0xce>
 800fd7e:	f000 f963 	bl	8010048 <fabs>
 800fd82:	4bab      	ldr	r3, [pc, #684]	; (8010030 <atan+0x328>)
 800fd84:	429e      	cmp	r6, r3
 800fd86:	ec55 4b10 	vmov	r4, r5, d0
 800fd8a:	f300 80bf 	bgt.w	800ff0c <atan+0x204>
 800fd8e:	f5a3 2350 	sub.w	r3, r3, #851968	; 0xd0000
 800fd92:	429e      	cmp	r6, r3
 800fd94:	f300 80a0 	bgt.w	800fed8 <atan+0x1d0>
 800fd98:	ee10 2a10 	vmov	r2, s0
 800fd9c:	ee10 0a10 	vmov	r0, s0
 800fda0:	462b      	mov	r3, r5
 800fda2:	4629      	mov	r1, r5
 800fda4:	f7f0 fa92 	bl	80002cc <__adddf3>
 800fda8:	4ba0      	ldr	r3, [pc, #640]	; (801002c <atan+0x324>)
 800fdaa:	2200      	movs	r2, #0
 800fdac:	f7f0 fa8c 	bl	80002c8 <__aeabi_dsub>
 800fdb0:	2200      	movs	r2, #0
 800fdb2:	4606      	mov	r6, r0
 800fdb4:	460f      	mov	r7, r1
 800fdb6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800fdba:	4620      	mov	r0, r4
 800fdbc:	4629      	mov	r1, r5
 800fdbe:	f7f0 fa85 	bl	80002cc <__adddf3>
 800fdc2:	4602      	mov	r2, r0
 800fdc4:	460b      	mov	r3, r1
 800fdc6:	4630      	mov	r0, r6
 800fdc8:	4639      	mov	r1, r7
 800fdca:	f7f0 fd5f 	bl	800088c <__aeabi_ddiv>
 800fdce:	f04f 0a00 	mov.w	sl, #0
 800fdd2:	4604      	mov	r4, r0
 800fdd4:	460d      	mov	r5, r1
 800fdd6:	4622      	mov	r2, r4
 800fdd8:	462b      	mov	r3, r5
 800fdda:	4620      	mov	r0, r4
 800fddc:	4629      	mov	r1, r5
 800fdde:	f7f0 fc2b 	bl	8000638 <__aeabi_dmul>
 800fde2:	4602      	mov	r2, r0
 800fde4:	460b      	mov	r3, r1
 800fde6:	4680      	mov	r8, r0
 800fde8:	4689      	mov	r9, r1
 800fdea:	f7f0 fc25 	bl	8000638 <__aeabi_dmul>
 800fdee:	a374      	add	r3, pc, #464	; (adr r3, 800ffc0 <atan+0x2b8>)
 800fdf0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fdf4:	4606      	mov	r6, r0
 800fdf6:	460f      	mov	r7, r1
 800fdf8:	f7f0 fc1e 	bl	8000638 <__aeabi_dmul>
 800fdfc:	a372      	add	r3, pc, #456	; (adr r3, 800ffc8 <atan+0x2c0>)
 800fdfe:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fe02:	f7f0 fa63 	bl	80002cc <__adddf3>
 800fe06:	4632      	mov	r2, r6
 800fe08:	463b      	mov	r3, r7
 800fe0a:	f7f0 fc15 	bl	8000638 <__aeabi_dmul>
 800fe0e:	a370      	add	r3, pc, #448	; (adr r3, 800ffd0 <atan+0x2c8>)
 800fe10:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fe14:	f7f0 fa5a 	bl	80002cc <__adddf3>
 800fe18:	4632      	mov	r2, r6
 800fe1a:	463b      	mov	r3, r7
 800fe1c:	f7f0 fc0c 	bl	8000638 <__aeabi_dmul>
 800fe20:	a36d      	add	r3, pc, #436	; (adr r3, 800ffd8 <atan+0x2d0>)
 800fe22:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fe26:	f7f0 fa51 	bl	80002cc <__adddf3>
 800fe2a:	4632      	mov	r2, r6
 800fe2c:	463b      	mov	r3, r7
 800fe2e:	f7f0 fc03 	bl	8000638 <__aeabi_dmul>
 800fe32:	a36b      	add	r3, pc, #428	; (adr r3, 800ffe0 <atan+0x2d8>)
 800fe34:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fe38:	f7f0 fa48 	bl	80002cc <__adddf3>
 800fe3c:	4632      	mov	r2, r6
 800fe3e:	463b      	mov	r3, r7
 800fe40:	f7f0 fbfa 	bl	8000638 <__aeabi_dmul>
 800fe44:	a368      	add	r3, pc, #416	; (adr r3, 800ffe8 <atan+0x2e0>)
 800fe46:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fe4a:	f7f0 fa3f 	bl	80002cc <__adddf3>
 800fe4e:	4642      	mov	r2, r8
 800fe50:	464b      	mov	r3, r9
 800fe52:	f7f0 fbf1 	bl	8000638 <__aeabi_dmul>
 800fe56:	a366      	add	r3, pc, #408	; (adr r3, 800fff0 <atan+0x2e8>)
 800fe58:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fe5c:	4680      	mov	r8, r0
 800fe5e:	4689      	mov	r9, r1
 800fe60:	4630      	mov	r0, r6
 800fe62:	4639      	mov	r1, r7
 800fe64:	f7f0 fbe8 	bl	8000638 <__aeabi_dmul>
 800fe68:	a363      	add	r3, pc, #396	; (adr r3, 800fff8 <atan+0x2f0>)
 800fe6a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fe6e:	f7f0 fa2b 	bl	80002c8 <__aeabi_dsub>
 800fe72:	4632      	mov	r2, r6
 800fe74:	463b      	mov	r3, r7
 800fe76:	f7f0 fbdf 	bl	8000638 <__aeabi_dmul>
 800fe7a:	a361      	add	r3, pc, #388	; (adr r3, 8010000 <atan+0x2f8>)
 800fe7c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fe80:	f7f0 fa22 	bl	80002c8 <__aeabi_dsub>
 800fe84:	4632      	mov	r2, r6
 800fe86:	463b      	mov	r3, r7
 800fe88:	f7f0 fbd6 	bl	8000638 <__aeabi_dmul>
 800fe8c:	a35e      	add	r3, pc, #376	; (adr r3, 8010008 <atan+0x300>)
 800fe8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fe92:	f7f0 fa19 	bl	80002c8 <__aeabi_dsub>
 800fe96:	4632      	mov	r2, r6
 800fe98:	463b      	mov	r3, r7
 800fe9a:	f7f0 fbcd 	bl	8000638 <__aeabi_dmul>
 800fe9e:	a35c      	add	r3, pc, #368	; (adr r3, 8010010 <atan+0x308>)
 800fea0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fea4:	f7f0 fa10 	bl	80002c8 <__aeabi_dsub>
 800fea8:	4632      	mov	r2, r6
 800feaa:	463b      	mov	r3, r7
 800feac:	f7f0 fbc4 	bl	8000638 <__aeabi_dmul>
 800feb0:	4602      	mov	r2, r0
 800feb2:	460b      	mov	r3, r1
 800feb4:	4640      	mov	r0, r8
 800feb6:	4649      	mov	r1, r9
 800feb8:	f7f0 fa08 	bl	80002cc <__adddf3>
 800febc:	4622      	mov	r2, r4
 800febe:	462b      	mov	r3, r5
 800fec0:	f7f0 fbba 	bl	8000638 <__aeabi_dmul>
 800fec4:	f1ba 3fff 	cmp.w	sl, #4294967295
 800fec8:	4602      	mov	r2, r0
 800feca:	460b      	mov	r3, r1
 800fecc:	d14b      	bne.n	800ff66 <atan+0x25e>
 800fece:	4620      	mov	r0, r4
 800fed0:	4629      	mov	r1, r5
 800fed2:	f7f0 f9f9 	bl	80002c8 <__aeabi_dsub>
 800fed6:	e72c      	b.n	800fd32 <atan+0x2a>
 800fed8:	ee10 0a10 	vmov	r0, s0
 800fedc:	4b53      	ldr	r3, [pc, #332]	; (801002c <atan+0x324>)
 800fede:	2200      	movs	r2, #0
 800fee0:	4629      	mov	r1, r5
 800fee2:	f7f0 f9f1 	bl	80002c8 <__aeabi_dsub>
 800fee6:	4b51      	ldr	r3, [pc, #324]	; (801002c <atan+0x324>)
 800fee8:	4606      	mov	r6, r0
 800feea:	460f      	mov	r7, r1
 800feec:	2200      	movs	r2, #0
 800feee:	4620      	mov	r0, r4
 800fef0:	4629      	mov	r1, r5
 800fef2:	f7f0 f9eb 	bl	80002cc <__adddf3>
 800fef6:	4602      	mov	r2, r0
 800fef8:	460b      	mov	r3, r1
 800fefa:	4630      	mov	r0, r6
 800fefc:	4639      	mov	r1, r7
 800fefe:	f7f0 fcc5 	bl	800088c <__aeabi_ddiv>
 800ff02:	f04f 0a01 	mov.w	sl, #1
 800ff06:	4604      	mov	r4, r0
 800ff08:	460d      	mov	r5, r1
 800ff0a:	e764      	b.n	800fdd6 <atan+0xce>
 800ff0c:	4b49      	ldr	r3, [pc, #292]	; (8010034 <atan+0x32c>)
 800ff0e:	429e      	cmp	r6, r3
 800ff10:	da1d      	bge.n	800ff4e <atan+0x246>
 800ff12:	ee10 0a10 	vmov	r0, s0
 800ff16:	4b48      	ldr	r3, [pc, #288]	; (8010038 <atan+0x330>)
 800ff18:	2200      	movs	r2, #0
 800ff1a:	4629      	mov	r1, r5
 800ff1c:	f7f0 f9d4 	bl	80002c8 <__aeabi_dsub>
 800ff20:	4b45      	ldr	r3, [pc, #276]	; (8010038 <atan+0x330>)
 800ff22:	4606      	mov	r6, r0
 800ff24:	460f      	mov	r7, r1
 800ff26:	2200      	movs	r2, #0
 800ff28:	4620      	mov	r0, r4
 800ff2a:	4629      	mov	r1, r5
 800ff2c:	f7f0 fb84 	bl	8000638 <__aeabi_dmul>
 800ff30:	4b3e      	ldr	r3, [pc, #248]	; (801002c <atan+0x324>)
 800ff32:	2200      	movs	r2, #0
 800ff34:	f7f0 f9ca 	bl	80002cc <__adddf3>
 800ff38:	4602      	mov	r2, r0
 800ff3a:	460b      	mov	r3, r1
 800ff3c:	4630      	mov	r0, r6
 800ff3e:	4639      	mov	r1, r7
 800ff40:	f7f0 fca4 	bl	800088c <__aeabi_ddiv>
 800ff44:	f04f 0a02 	mov.w	sl, #2
 800ff48:	4604      	mov	r4, r0
 800ff4a:	460d      	mov	r5, r1
 800ff4c:	e743      	b.n	800fdd6 <atan+0xce>
 800ff4e:	462b      	mov	r3, r5
 800ff50:	ee10 2a10 	vmov	r2, s0
 800ff54:	4939      	ldr	r1, [pc, #228]	; (801003c <atan+0x334>)
 800ff56:	2000      	movs	r0, #0
 800ff58:	f7f0 fc98 	bl	800088c <__aeabi_ddiv>
 800ff5c:	f04f 0a03 	mov.w	sl, #3
 800ff60:	4604      	mov	r4, r0
 800ff62:	460d      	mov	r5, r1
 800ff64:	e737      	b.n	800fdd6 <atan+0xce>
 800ff66:	4b36      	ldr	r3, [pc, #216]	; (8010040 <atan+0x338>)
 800ff68:	4e36      	ldr	r6, [pc, #216]	; (8010044 <atan+0x33c>)
 800ff6a:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 800ff6e:	eb03 0aca 	add.w	sl, r3, sl, lsl #3
 800ff72:	e9da 2300 	ldrd	r2, r3, [sl]
 800ff76:	f7f0 f9a7 	bl	80002c8 <__aeabi_dsub>
 800ff7a:	4622      	mov	r2, r4
 800ff7c:	462b      	mov	r3, r5
 800ff7e:	f7f0 f9a3 	bl	80002c8 <__aeabi_dsub>
 800ff82:	4602      	mov	r2, r0
 800ff84:	460b      	mov	r3, r1
 800ff86:	e9d6 0100 	ldrd	r0, r1, [r6]
 800ff8a:	f7f0 f99d 	bl	80002c8 <__aeabi_dsub>
 800ff8e:	f1bb 0f00 	cmp.w	fp, #0
 800ff92:	4604      	mov	r4, r0
 800ff94:	460d      	mov	r5, r1
 800ff96:	f6bf aed6 	bge.w	800fd46 <atan+0x3e>
 800ff9a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800ff9e:	461d      	mov	r5, r3
 800ffa0:	e6d1      	b.n	800fd46 <atan+0x3e>
 800ffa2:	a51d      	add	r5, pc, #116	; (adr r5, 8010018 <atan+0x310>)
 800ffa4:	e9d5 4500 	ldrd	r4, r5, [r5]
 800ffa8:	e6cd      	b.n	800fd46 <atan+0x3e>
 800ffaa:	bf00      	nop
 800ffac:	f3af 8000 	nop.w
 800ffb0:	54442d18 	.word	0x54442d18
 800ffb4:	bff921fb 	.word	0xbff921fb
 800ffb8:	8800759c 	.word	0x8800759c
 800ffbc:	7e37e43c 	.word	0x7e37e43c
 800ffc0:	e322da11 	.word	0xe322da11
 800ffc4:	3f90ad3a 	.word	0x3f90ad3a
 800ffc8:	24760deb 	.word	0x24760deb
 800ffcc:	3fa97b4b 	.word	0x3fa97b4b
 800ffd0:	a0d03d51 	.word	0xa0d03d51
 800ffd4:	3fb10d66 	.word	0x3fb10d66
 800ffd8:	c54c206e 	.word	0xc54c206e
 800ffdc:	3fb745cd 	.word	0x3fb745cd
 800ffe0:	920083ff 	.word	0x920083ff
 800ffe4:	3fc24924 	.word	0x3fc24924
 800ffe8:	5555550d 	.word	0x5555550d
 800ffec:	3fd55555 	.word	0x3fd55555
 800fff0:	2c6a6c2f 	.word	0x2c6a6c2f
 800fff4:	bfa2b444 	.word	0xbfa2b444
 800fff8:	52defd9a 	.word	0x52defd9a
 800fffc:	3fadde2d 	.word	0x3fadde2d
 8010000:	af749a6d 	.word	0xaf749a6d
 8010004:	3fb3b0f2 	.word	0x3fb3b0f2
 8010008:	fe231671 	.word	0xfe231671
 801000c:	3fbc71c6 	.word	0x3fbc71c6
 8010010:	9998ebc4 	.word	0x9998ebc4
 8010014:	3fc99999 	.word	0x3fc99999
 8010018:	54442d18 	.word	0x54442d18
 801001c:	3ff921fb 	.word	0x3ff921fb
 8010020:	440fffff 	.word	0x440fffff
 8010024:	7ff00000 	.word	0x7ff00000
 8010028:	3fdbffff 	.word	0x3fdbffff
 801002c:	3ff00000 	.word	0x3ff00000
 8010030:	3ff2ffff 	.word	0x3ff2ffff
 8010034:	40038000 	.word	0x40038000
 8010038:	3ff80000 	.word	0x3ff80000
 801003c:	bff00000 	.word	0xbff00000
 8010040:	08011720 	.word	0x08011720
 8010044:	08011700 	.word	0x08011700

08010048 <fabs>:
 8010048:	ec51 0b10 	vmov	r0, r1, d0
 801004c:	ee10 2a10 	vmov	r2, s0
 8010050:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8010054:	ec43 2b10 	vmov	d0, r2, r3
 8010058:	4770      	bx	lr
 801005a:	0000      	movs	r0, r0
 801005c:	0000      	movs	r0, r0
	...

08010060 <tan>:
 8010060:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010062:	ec53 2b10 	vmov	r2, r3, d0
 8010066:	4816      	ldr	r0, [pc, #88]	; (80100c0 <tan+0x60>)
 8010068:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 801006c:	4281      	cmp	r1, r0
 801006e:	dc07      	bgt.n	8010080 <tan+0x20>
 8010070:	ed9f 1b11 	vldr	d1, [pc, #68]	; 80100b8 <tan+0x58>
 8010074:	2001      	movs	r0, #1
 8010076:	b005      	add	sp, #20
 8010078:	f85d eb04 	ldr.w	lr, [sp], #4
 801007c:	f000 bd80 	b.w	8010b80 <__kernel_tan>
 8010080:	4810      	ldr	r0, [pc, #64]	; (80100c4 <tan+0x64>)
 8010082:	4281      	cmp	r1, r0
 8010084:	dd09      	ble.n	801009a <tan+0x3a>
 8010086:	ee10 0a10 	vmov	r0, s0
 801008a:	4619      	mov	r1, r3
 801008c:	f7f0 f91c 	bl	80002c8 <__aeabi_dsub>
 8010090:	ec41 0b10 	vmov	d0, r0, r1
 8010094:	b005      	add	sp, #20
 8010096:	f85d fb04 	ldr.w	pc, [sp], #4
 801009a:	4668      	mov	r0, sp
 801009c:	f000 f814 	bl	80100c8 <__ieee754_rem_pio2>
 80100a0:	0040      	lsls	r0, r0, #1
 80100a2:	f000 0002 	and.w	r0, r0, #2
 80100a6:	ed9d 1b02 	vldr	d1, [sp, #8]
 80100aa:	ed9d 0b00 	vldr	d0, [sp]
 80100ae:	f1c0 0001 	rsb	r0, r0, #1
 80100b2:	f000 fd65 	bl	8010b80 <__kernel_tan>
 80100b6:	e7ed      	b.n	8010094 <tan+0x34>
	...
 80100c0:	3fe921fb 	.word	0x3fe921fb
 80100c4:	7fefffff 	.word	0x7fefffff

080100c8 <__ieee754_rem_pio2>:
 80100c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80100cc:	ed2d 8b02 	vpush	{d8}
 80100d0:	ec55 4b10 	vmov	r4, r5, d0
 80100d4:	4bca      	ldr	r3, [pc, #808]	; (8010400 <__ieee754_rem_pio2+0x338>)
 80100d6:	b08b      	sub	sp, #44	; 0x2c
 80100d8:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 80100dc:	4598      	cmp	r8, r3
 80100de:	4682      	mov	sl, r0
 80100e0:	9502      	str	r5, [sp, #8]
 80100e2:	dc08      	bgt.n	80100f6 <__ieee754_rem_pio2+0x2e>
 80100e4:	2200      	movs	r2, #0
 80100e6:	2300      	movs	r3, #0
 80100e8:	ed80 0b00 	vstr	d0, [r0]
 80100ec:	e9c0 2302 	strd	r2, r3, [r0, #8]
 80100f0:	f04f 0b00 	mov.w	fp, #0
 80100f4:	e028      	b.n	8010148 <__ieee754_rem_pio2+0x80>
 80100f6:	4bc3      	ldr	r3, [pc, #780]	; (8010404 <__ieee754_rem_pio2+0x33c>)
 80100f8:	4598      	cmp	r8, r3
 80100fa:	dc78      	bgt.n	80101ee <__ieee754_rem_pio2+0x126>
 80100fc:	9b02      	ldr	r3, [sp, #8]
 80100fe:	4ec2      	ldr	r6, [pc, #776]	; (8010408 <__ieee754_rem_pio2+0x340>)
 8010100:	2b00      	cmp	r3, #0
 8010102:	ee10 0a10 	vmov	r0, s0
 8010106:	a3b0      	add	r3, pc, #704	; (adr r3, 80103c8 <__ieee754_rem_pio2+0x300>)
 8010108:	e9d3 2300 	ldrd	r2, r3, [r3]
 801010c:	4629      	mov	r1, r5
 801010e:	dd39      	ble.n	8010184 <__ieee754_rem_pio2+0xbc>
 8010110:	f7f0 f8da 	bl	80002c8 <__aeabi_dsub>
 8010114:	45b0      	cmp	r8, r6
 8010116:	4604      	mov	r4, r0
 8010118:	460d      	mov	r5, r1
 801011a:	d01b      	beq.n	8010154 <__ieee754_rem_pio2+0x8c>
 801011c:	a3ac      	add	r3, pc, #688	; (adr r3, 80103d0 <__ieee754_rem_pio2+0x308>)
 801011e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010122:	f7f0 f8d1 	bl	80002c8 <__aeabi_dsub>
 8010126:	4602      	mov	r2, r0
 8010128:	460b      	mov	r3, r1
 801012a:	e9ca 2300 	strd	r2, r3, [sl]
 801012e:	4620      	mov	r0, r4
 8010130:	4629      	mov	r1, r5
 8010132:	f7f0 f8c9 	bl	80002c8 <__aeabi_dsub>
 8010136:	a3a6      	add	r3, pc, #664	; (adr r3, 80103d0 <__ieee754_rem_pio2+0x308>)
 8010138:	e9d3 2300 	ldrd	r2, r3, [r3]
 801013c:	f7f0 f8c4 	bl	80002c8 <__aeabi_dsub>
 8010140:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8010144:	f04f 0b01 	mov.w	fp, #1
 8010148:	4658      	mov	r0, fp
 801014a:	b00b      	add	sp, #44	; 0x2c
 801014c:	ecbd 8b02 	vpop	{d8}
 8010150:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010154:	a3a0      	add	r3, pc, #640	; (adr r3, 80103d8 <__ieee754_rem_pio2+0x310>)
 8010156:	e9d3 2300 	ldrd	r2, r3, [r3]
 801015a:	f7f0 f8b5 	bl	80002c8 <__aeabi_dsub>
 801015e:	a3a0      	add	r3, pc, #640	; (adr r3, 80103e0 <__ieee754_rem_pio2+0x318>)
 8010160:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010164:	4604      	mov	r4, r0
 8010166:	460d      	mov	r5, r1
 8010168:	f7f0 f8ae 	bl	80002c8 <__aeabi_dsub>
 801016c:	4602      	mov	r2, r0
 801016e:	460b      	mov	r3, r1
 8010170:	e9ca 2300 	strd	r2, r3, [sl]
 8010174:	4620      	mov	r0, r4
 8010176:	4629      	mov	r1, r5
 8010178:	f7f0 f8a6 	bl	80002c8 <__aeabi_dsub>
 801017c:	a398      	add	r3, pc, #608	; (adr r3, 80103e0 <__ieee754_rem_pio2+0x318>)
 801017e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010182:	e7db      	b.n	801013c <__ieee754_rem_pio2+0x74>
 8010184:	f7f0 f8a2 	bl	80002cc <__adddf3>
 8010188:	45b0      	cmp	r8, r6
 801018a:	4604      	mov	r4, r0
 801018c:	460d      	mov	r5, r1
 801018e:	d016      	beq.n	80101be <__ieee754_rem_pio2+0xf6>
 8010190:	a38f      	add	r3, pc, #572	; (adr r3, 80103d0 <__ieee754_rem_pio2+0x308>)
 8010192:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010196:	f7f0 f899 	bl	80002cc <__adddf3>
 801019a:	4602      	mov	r2, r0
 801019c:	460b      	mov	r3, r1
 801019e:	e9ca 2300 	strd	r2, r3, [sl]
 80101a2:	4620      	mov	r0, r4
 80101a4:	4629      	mov	r1, r5
 80101a6:	f7f0 f88f 	bl	80002c8 <__aeabi_dsub>
 80101aa:	a389      	add	r3, pc, #548	; (adr r3, 80103d0 <__ieee754_rem_pio2+0x308>)
 80101ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80101b0:	f7f0 f88c 	bl	80002cc <__adddf3>
 80101b4:	f04f 3bff 	mov.w	fp, #4294967295
 80101b8:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80101bc:	e7c4      	b.n	8010148 <__ieee754_rem_pio2+0x80>
 80101be:	a386      	add	r3, pc, #536	; (adr r3, 80103d8 <__ieee754_rem_pio2+0x310>)
 80101c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80101c4:	f7f0 f882 	bl	80002cc <__adddf3>
 80101c8:	a385      	add	r3, pc, #532	; (adr r3, 80103e0 <__ieee754_rem_pio2+0x318>)
 80101ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80101ce:	4604      	mov	r4, r0
 80101d0:	460d      	mov	r5, r1
 80101d2:	f7f0 f87b 	bl	80002cc <__adddf3>
 80101d6:	4602      	mov	r2, r0
 80101d8:	460b      	mov	r3, r1
 80101da:	e9ca 2300 	strd	r2, r3, [sl]
 80101de:	4620      	mov	r0, r4
 80101e0:	4629      	mov	r1, r5
 80101e2:	f7f0 f871 	bl	80002c8 <__aeabi_dsub>
 80101e6:	a37e      	add	r3, pc, #504	; (adr r3, 80103e0 <__ieee754_rem_pio2+0x318>)
 80101e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80101ec:	e7e0      	b.n	80101b0 <__ieee754_rem_pio2+0xe8>
 80101ee:	4b87      	ldr	r3, [pc, #540]	; (801040c <__ieee754_rem_pio2+0x344>)
 80101f0:	4598      	cmp	r8, r3
 80101f2:	f300 80d9 	bgt.w	80103a8 <__ieee754_rem_pio2+0x2e0>
 80101f6:	f7ff ff27 	bl	8010048 <fabs>
 80101fa:	ec55 4b10 	vmov	r4, r5, d0
 80101fe:	ee10 0a10 	vmov	r0, s0
 8010202:	a379      	add	r3, pc, #484	; (adr r3, 80103e8 <__ieee754_rem_pio2+0x320>)
 8010204:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010208:	4629      	mov	r1, r5
 801020a:	f7f0 fa15 	bl	8000638 <__aeabi_dmul>
 801020e:	4b80      	ldr	r3, [pc, #512]	; (8010410 <__ieee754_rem_pio2+0x348>)
 8010210:	2200      	movs	r2, #0
 8010212:	f7f0 f85b 	bl	80002cc <__adddf3>
 8010216:	f7f0 fcbf 	bl	8000b98 <__aeabi_d2iz>
 801021a:	4683      	mov	fp, r0
 801021c:	f7f0 f9a2 	bl	8000564 <__aeabi_i2d>
 8010220:	4602      	mov	r2, r0
 8010222:	460b      	mov	r3, r1
 8010224:	ec43 2b18 	vmov	d8, r2, r3
 8010228:	a367      	add	r3, pc, #412	; (adr r3, 80103c8 <__ieee754_rem_pio2+0x300>)
 801022a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801022e:	f7f0 fa03 	bl	8000638 <__aeabi_dmul>
 8010232:	4602      	mov	r2, r0
 8010234:	460b      	mov	r3, r1
 8010236:	4620      	mov	r0, r4
 8010238:	4629      	mov	r1, r5
 801023a:	f7f0 f845 	bl	80002c8 <__aeabi_dsub>
 801023e:	a364      	add	r3, pc, #400	; (adr r3, 80103d0 <__ieee754_rem_pio2+0x308>)
 8010240:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010244:	4606      	mov	r6, r0
 8010246:	460f      	mov	r7, r1
 8010248:	ec51 0b18 	vmov	r0, r1, d8
 801024c:	f7f0 f9f4 	bl	8000638 <__aeabi_dmul>
 8010250:	f1bb 0f1f 	cmp.w	fp, #31
 8010254:	4604      	mov	r4, r0
 8010256:	460d      	mov	r5, r1
 8010258:	dc0d      	bgt.n	8010276 <__ieee754_rem_pio2+0x1ae>
 801025a:	4b6e      	ldr	r3, [pc, #440]	; (8010414 <__ieee754_rem_pio2+0x34c>)
 801025c:	f10b 32ff 	add.w	r2, fp, #4294967295
 8010260:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8010264:	4543      	cmp	r3, r8
 8010266:	d006      	beq.n	8010276 <__ieee754_rem_pio2+0x1ae>
 8010268:	4622      	mov	r2, r4
 801026a:	462b      	mov	r3, r5
 801026c:	4630      	mov	r0, r6
 801026e:	4639      	mov	r1, r7
 8010270:	f7f0 f82a 	bl	80002c8 <__aeabi_dsub>
 8010274:	e00f      	b.n	8010296 <__ieee754_rem_pio2+0x1ce>
 8010276:	462b      	mov	r3, r5
 8010278:	4622      	mov	r2, r4
 801027a:	4630      	mov	r0, r6
 801027c:	4639      	mov	r1, r7
 801027e:	f7f0 f823 	bl	80002c8 <__aeabi_dsub>
 8010282:	ea4f 5328 	mov.w	r3, r8, asr #20
 8010286:	9303      	str	r3, [sp, #12]
 8010288:	f3c1 530a 	ubfx	r3, r1, #20, #11
 801028c:	ebc3 5818 	rsb	r8, r3, r8, lsr #20
 8010290:	f1b8 0f10 	cmp.w	r8, #16
 8010294:	dc02      	bgt.n	801029c <__ieee754_rem_pio2+0x1d4>
 8010296:	e9ca 0100 	strd	r0, r1, [sl]
 801029a:	e039      	b.n	8010310 <__ieee754_rem_pio2+0x248>
 801029c:	a34e      	add	r3, pc, #312	; (adr r3, 80103d8 <__ieee754_rem_pio2+0x310>)
 801029e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80102a2:	ec51 0b18 	vmov	r0, r1, d8
 80102a6:	f7f0 f9c7 	bl	8000638 <__aeabi_dmul>
 80102aa:	4604      	mov	r4, r0
 80102ac:	460d      	mov	r5, r1
 80102ae:	4602      	mov	r2, r0
 80102b0:	460b      	mov	r3, r1
 80102b2:	4630      	mov	r0, r6
 80102b4:	4639      	mov	r1, r7
 80102b6:	f7f0 f807 	bl	80002c8 <__aeabi_dsub>
 80102ba:	4602      	mov	r2, r0
 80102bc:	460b      	mov	r3, r1
 80102be:	4680      	mov	r8, r0
 80102c0:	4689      	mov	r9, r1
 80102c2:	4630      	mov	r0, r6
 80102c4:	4639      	mov	r1, r7
 80102c6:	f7ef ffff 	bl	80002c8 <__aeabi_dsub>
 80102ca:	4622      	mov	r2, r4
 80102cc:	462b      	mov	r3, r5
 80102ce:	f7ef fffb 	bl	80002c8 <__aeabi_dsub>
 80102d2:	a343      	add	r3, pc, #268	; (adr r3, 80103e0 <__ieee754_rem_pio2+0x318>)
 80102d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80102d8:	4604      	mov	r4, r0
 80102da:	460d      	mov	r5, r1
 80102dc:	ec51 0b18 	vmov	r0, r1, d8
 80102e0:	f7f0 f9aa 	bl	8000638 <__aeabi_dmul>
 80102e4:	4622      	mov	r2, r4
 80102e6:	462b      	mov	r3, r5
 80102e8:	f7ef ffee 	bl	80002c8 <__aeabi_dsub>
 80102ec:	4602      	mov	r2, r0
 80102ee:	460b      	mov	r3, r1
 80102f0:	4604      	mov	r4, r0
 80102f2:	460d      	mov	r5, r1
 80102f4:	4640      	mov	r0, r8
 80102f6:	4649      	mov	r1, r9
 80102f8:	f7ef ffe6 	bl	80002c8 <__aeabi_dsub>
 80102fc:	9a03      	ldr	r2, [sp, #12]
 80102fe:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8010302:	1ad3      	subs	r3, r2, r3
 8010304:	2b31      	cmp	r3, #49	; 0x31
 8010306:	dc24      	bgt.n	8010352 <__ieee754_rem_pio2+0x28a>
 8010308:	e9ca 0100 	strd	r0, r1, [sl]
 801030c:	4646      	mov	r6, r8
 801030e:	464f      	mov	r7, r9
 8010310:	e9da 8900 	ldrd	r8, r9, [sl]
 8010314:	4630      	mov	r0, r6
 8010316:	4642      	mov	r2, r8
 8010318:	464b      	mov	r3, r9
 801031a:	4639      	mov	r1, r7
 801031c:	f7ef ffd4 	bl	80002c8 <__aeabi_dsub>
 8010320:	462b      	mov	r3, r5
 8010322:	4622      	mov	r2, r4
 8010324:	f7ef ffd0 	bl	80002c8 <__aeabi_dsub>
 8010328:	9b02      	ldr	r3, [sp, #8]
 801032a:	2b00      	cmp	r3, #0
 801032c:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8010330:	f6bf af0a 	bge.w	8010148 <__ieee754_rem_pio2+0x80>
 8010334:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8010338:	f8ca 3004 	str.w	r3, [sl, #4]
 801033c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010340:	f8ca 8000 	str.w	r8, [sl]
 8010344:	f8ca 0008 	str.w	r0, [sl, #8]
 8010348:	f8ca 300c 	str.w	r3, [sl, #12]
 801034c:	f1cb 0b00 	rsb	fp, fp, #0
 8010350:	e6fa      	b.n	8010148 <__ieee754_rem_pio2+0x80>
 8010352:	a327      	add	r3, pc, #156	; (adr r3, 80103f0 <__ieee754_rem_pio2+0x328>)
 8010354:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010358:	ec51 0b18 	vmov	r0, r1, d8
 801035c:	f7f0 f96c 	bl	8000638 <__aeabi_dmul>
 8010360:	4604      	mov	r4, r0
 8010362:	460d      	mov	r5, r1
 8010364:	4602      	mov	r2, r0
 8010366:	460b      	mov	r3, r1
 8010368:	4640      	mov	r0, r8
 801036a:	4649      	mov	r1, r9
 801036c:	f7ef ffac 	bl	80002c8 <__aeabi_dsub>
 8010370:	4602      	mov	r2, r0
 8010372:	460b      	mov	r3, r1
 8010374:	4606      	mov	r6, r0
 8010376:	460f      	mov	r7, r1
 8010378:	4640      	mov	r0, r8
 801037a:	4649      	mov	r1, r9
 801037c:	f7ef ffa4 	bl	80002c8 <__aeabi_dsub>
 8010380:	4622      	mov	r2, r4
 8010382:	462b      	mov	r3, r5
 8010384:	f7ef ffa0 	bl	80002c8 <__aeabi_dsub>
 8010388:	a31b      	add	r3, pc, #108	; (adr r3, 80103f8 <__ieee754_rem_pio2+0x330>)
 801038a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801038e:	4604      	mov	r4, r0
 8010390:	460d      	mov	r5, r1
 8010392:	ec51 0b18 	vmov	r0, r1, d8
 8010396:	f7f0 f94f 	bl	8000638 <__aeabi_dmul>
 801039a:	4622      	mov	r2, r4
 801039c:	462b      	mov	r3, r5
 801039e:	f7ef ff93 	bl	80002c8 <__aeabi_dsub>
 80103a2:	4604      	mov	r4, r0
 80103a4:	460d      	mov	r5, r1
 80103a6:	e75f      	b.n	8010268 <__ieee754_rem_pio2+0x1a0>
 80103a8:	4b1b      	ldr	r3, [pc, #108]	; (8010418 <__ieee754_rem_pio2+0x350>)
 80103aa:	4598      	cmp	r8, r3
 80103ac:	dd36      	ble.n	801041c <__ieee754_rem_pio2+0x354>
 80103ae:	ee10 2a10 	vmov	r2, s0
 80103b2:	462b      	mov	r3, r5
 80103b4:	4620      	mov	r0, r4
 80103b6:	4629      	mov	r1, r5
 80103b8:	f7ef ff86 	bl	80002c8 <__aeabi_dsub>
 80103bc:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80103c0:	e9ca 0100 	strd	r0, r1, [sl]
 80103c4:	e694      	b.n	80100f0 <__ieee754_rem_pio2+0x28>
 80103c6:	bf00      	nop
 80103c8:	54400000 	.word	0x54400000
 80103cc:	3ff921fb 	.word	0x3ff921fb
 80103d0:	1a626331 	.word	0x1a626331
 80103d4:	3dd0b461 	.word	0x3dd0b461
 80103d8:	1a600000 	.word	0x1a600000
 80103dc:	3dd0b461 	.word	0x3dd0b461
 80103e0:	2e037073 	.word	0x2e037073
 80103e4:	3ba3198a 	.word	0x3ba3198a
 80103e8:	6dc9c883 	.word	0x6dc9c883
 80103ec:	3fe45f30 	.word	0x3fe45f30
 80103f0:	2e000000 	.word	0x2e000000
 80103f4:	3ba3198a 	.word	0x3ba3198a
 80103f8:	252049c1 	.word	0x252049c1
 80103fc:	397b839a 	.word	0x397b839a
 8010400:	3fe921fb 	.word	0x3fe921fb
 8010404:	4002d97b 	.word	0x4002d97b
 8010408:	3ff921fb 	.word	0x3ff921fb
 801040c:	413921fb 	.word	0x413921fb
 8010410:	3fe00000 	.word	0x3fe00000
 8010414:	08011740 	.word	0x08011740
 8010418:	7fefffff 	.word	0x7fefffff
 801041c:	ea4f 5428 	mov.w	r4, r8, asr #20
 8010420:	f2a4 4416 	subw	r4, r4, #1046	; 0x416
 8010424:	ee10 0a10 	vmov	r0, s0
 8010428:	eba8 5104 	sub.w	r1, r8, r4, lsl #20
 801042c:	ee10 6a10 	vmov	r6, s0
 8010430:	460f      	mov	r7, r1
 8010432:	f7f0 fbb1 	bl	8000b98 <__aeabi_d2iz>
 8010436:	f7f0 f895 	bl	8000564 <__aeabi_i2d>
 801043a:	4602      	mov	r2, r0
 801043c:	460b      	mov	r3, r1
 801043e:	4630      	mov	r0, r6
 8010440:	4639      	mov	r1, r7
 8010442:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8010446:	f7ef ff3f 	bl	80002c8 <__aeabi_dsub>
 801044a:	4b23      	ldr	r3, [pc, #140]	; (80104d8 <__ieee754_rem_pio2+0x410>)
 801044c:	2200      	movs	r2, #0
 801044e:	f7f0 f8f3 	bl	8000638 <__aeabi_dmul>
 8010452:	460f      	mov	r7, r1
 8010454:	4606      	mov	r6, r0
 8010456:	f7f0 fb9f 	bl	8000b98 <__aeabi_d2iz>
 801045a:	f7f0 f883 	bl	8000564 <__aeabi_i2d>
 801045e:	4602      	mov	r2, r0
 8010460:	460b      	mov	r3, r1
 8010462:	4630      	mov	r0, r6
 8010464:	4639      	mov	r1, r7
 8010466:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801046a:	f7ef ff2d 	bl	80002c8 <__aeabi_dsub>
 801046e:	4b1a      	ldr	r3, [pc, #104]	; (80104d8 <__ieee754_rem_pio2+0x410>)
 8010470:	2200      	movs	r2, #0
 8010472:	f7f0 f8e1 	bl	8000638 <__aeabi_dmul>
 8010476:	e9cd 0108 	strd	r0, r1, [sp, #32]
 801047a:	ad04      	add	r5, sp, #16
 801047c:	f04f 0803 	mov.w	r8, #3
 8010480:	46a9      	mov	r9, r5
 8010482:	2600      	movs	r6, #0
 8010484:	2700      	movs	r7, #0
 8010486:	4632      	mov	r2, r6
 8010488:	463b      	mov	r3, r7
 801048a:	e9d5 0104 	ldrd	r0, r1, [r5, #16]
 801048e:	46c3      	mov	fp, r8
 8010490:	3d08      	subs	r5, #8
 8010492:	f108 38ff 	add.w	r8, r8, #4294967295
 8010496:	f7f0 fb37 	bl	8000b08 <__aeabi_dcmpeq>
 801049a:	2800      	cmp	r0, #0
 801049c:	d1f3      	bne.n	8010486 <__ieee754_rem_pio2+0x3be>
 801049e:	4b0f      	ldr	r3, [pc, #60]	; (80104dc <__ieee754_rem_pio2+0x414>)
 80104a0:	9301      	str	r3, [sp, #4]
 80104a2:	2302      	movs	r3, #2
 80104a4:	9300      	str	r3, [sp, #0]
 80104a6:	4622      	mov	r2, r4
 80104a8:	465b      	mov	r3, fp
 80104aa:	4651      	mov	r1, sl
 80104ac:	4648      	mov	r0, r9
 80104ae:	f000 f817 	bl	80104e0 <__kernel_rem_pio2>
 80104b2:	9b02      	ldr	r3, [sp, #8]
 80104b4:	2b00      	cmp	r3, #0
 80104b6:	4683      	mov	fp, r0
 80104b8:	f6bf ae46 	bge.w	8010148 <__ieee754_rem_pio2+0x80>
 80104bc:	e9da 2100 	ldrd	r2, r1, [sl]
 80104c0:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80104c4:	e9ca 2300 	strd	r2, r3, [sl]
 80104c8:	e9da 2102 	ldrd	r2, r1, [sl, #8]
 80104cc:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80104d0:	e9ca 2302 	strd	r2, r3, [sl, #8]
 80104d4:	e73a      	b.n	801034c <__ieee754_rem_pio2+0x284>
 80104d6:	bf00      	nop
 80104d8:	41700000 	.word	0x41700000
 80104dc:	080117c0 	.word	0x080117c0

080104e0 <__kernel_rem_pio2>:
 80104e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80104e4:	ed2d 8b02 	vpush	{d8}
 80104e8:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
 80104ec:	f112 0f14 	cmn.w	r2, #20
 80104f0:	9308      	str	r3, [sp, #32]
 80104f2:	9101      	str	r1, [sp, #4]
 80104f4:	4bc4      	ldr	r3, [pc, #784]	; (8010808 <__kernel_rem_pio2+0x328>)
 80104f6:	99a6      	ldr	r1, [sp, #664]	; 0x298
 80104f8:	900b      	str	r0, [sp, #44]	; 0x2c
 80104fa:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80104fe:	9302      	str	r3, [sp, #8]
 8010500:	9b08      	ldr	r3, [sp, #32]
 8010502:	f103 33ff 	add.w	r3, r3, #4294967295
 8010506:	bfa8      	it	ge
 8010508:	1ed4      	subge	r4, r2, #3
 801050a:	9306      	str	r3, [sp, #24]
 801050c:	bfb2      	itee	lt
 801050e:	2400      	movlt	r4, #0
 8010510:	2318      	movge	r3, #24
 8010512:	fb94 f4f3 	sdivge	r4, r4, r3
 8010516:	f06f 0317 	mvn.w	r3, #23
 801051a:	fb04 3303 	mla	r3, r4, r3, r3
 801051e:	eb03 0a02 	add.w	sl, r3, r2
 8010522:	9b02      	ldr	r3, [sp, #8]
 8010524:	9a06      	ldr	r2, [sp, #24]
 8010526:	ed9f 8bb4 	vldr	d8, [pc, #720]	; 80107f8 <__kernel_rem_pio2+0x318>
 801052a:	eb03 0802 	add.w	r8, r3, r2
 801052e:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8010530:	1aa7      	subs	r7, r4, r2
 8010532:	ae22      	add	r6, sp, #136	; 0x88
 8010534:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8010538:	2500      	movs	r5, #0
 801053a:	4545      	cmp	r5, r8
 801053c:	dd13      	ble.n	8010566 <__kernel_rem_pio2+0x86>
 801053e:	9b08      	ldr	r3, [sp, #32]
 8010540:	ed9f 8bad 	vldr	d8, [pc, #692]	; 80107f8 <__kernel_rem_pio2+0x318>
 8010544:	aa22      	add	r2, sp, #136	; 0x88
 8010546:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 801054a:	f50d 7be4 	add.w	fp, sp, #456	; 0x1c8
 801054e:	f04f 0800 	mov.w	r8, #0
 8010552:	9b02      	ldr	r3, [sp, #8]
 8010554:	4598      	cmp	r8, r3
 8010556:	dc2f      	bgt.n	80105b8 <__kernel_rem_pio2+0xd8>
 8010558:	ed8d 8b04 	vstr	d8, [sp, #16]
 801055c:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 8010560:	462f      	mov	r7, r5
 8010562:	2600      	movs	r6, #0
 8010564:	e01b      	b.n	801059e <__kernel_rem_pio2+0xbe>
 8010566:	42ef      	cmn	r7, r5
 8010568:	d407      	bmi.n	801057a <__kernel_rem_pio2+0x9a>
 801056a:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 801056e:	f7ef fff9 	bl	8000564 <__aeabi_i2d>
 8010572:	e8e6 0102 	strd	r0, r1, [r6], #8
 8010576:	3501      	adds	r5, #1
 8010578:	e7df      	b.n	801053a <__kernel_rem_pio2+0x5a>
 801057a:	ec51 0b18 	vmov	r0, r1, d8
 801057e:	e7f8      	b.n	8010572 <__kernel_rem_pio2+0x92>
 8010580:	e9d7 2300 	ldrd	r2, r3, [r7]
 8010584:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8010588:	f7f0 f856 	bl	8000638 <__aeabi_dmul>
 801058c:	4602      	mov	r2, r0
 801058e:	460b      	mov	r3, r1
 8010590:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010594:	f7ef fe9a 	bl	80002cc <__adddf3>
 8010598:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801059c:	3601      	adds	r6, #1
 801059e:	9b06      	ldr	r3, [sp, #24]
 80105a0:	429e      	cmp	r6, r3
 80105a2:	f1a7 0708 	sub.w	r7, r7, #8
 80105a6:	ddeb      	ble.n	8010580 <__kernel_rem_pio2+0xa0>
 80105a8:	ed9d 7b04 	vldr	d7, [sp, #16]
 80105ac:	f108 0801 	add.w	r8, r8, #1
 80105b0:	ecab 7b02 	vstmia	fp!, {d7}
 80105b4:	3508      	adds	r5, #8
 80105b6:	e7cc      	b.n	8010552 <__kernel_rem_pio2+0x72>
 80105b8:	9b02      	ldr	r3, [sp, #8]
 80105ba:	aa0e      	add	r2, sp, #56	; 0x38
 80105bc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80105c0:	930d      	str	r3, [sp, #52]	; 0x34
 80105c2:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 80105c4:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 80105c8:	9c02      	ldr	r4, [sp, #8]
 80105ca:	930c      	str	r3, [sp, #48]	; 0x30
 80105cc:	00e3      	lsls	r3, r4, #3
 80105ce:	930a      	str	r3, [sp, #40]	; 0x28
 80105d0:	ab9a      	add	r3, sp, #616	; 0x268
 80105d2:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80105d6:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 80105da:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80105de:	ab72      	add	r3, sp, #456	; 0x1c8
 80105e0:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 80105e4:	46c3      	mov	fp, r8
 80105e6:	46a1      	mov	r9, r4
 80105e8:	f1b9 0f00 	cmp.w	r9, #0
 80105ec:	f1a5 0508 	sub.w	r5, r5, #8
 80105f0:	dc77      	bgt.n	80106e2 <__kernel_rem_pio2+0x202>
 80105f2:	ec47 6b10 	vmov	d0, r6, r7
 80105f6:	4650      	mov	r0, sl
 80105f8:	f000 fd4e 	bl	8011098 <scalbn>
 80105fc:	ec57 6b10 	vmov	r6, r7, d0
 8010600:	2200      	movs	r2, #0
 8010602:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 8010606:	ee10 0a10 	vmov	r0, s0
 801060a:	4639      	mov	r1, r7
 801060c:	f7f0 f814 	bl	8000638 <__aeabi_dmul>
 8010610:	ec41 0b10 	vmov	d0, r0, r1
 8010614:	f000 fcc0 	bl	8010f98 <floor>
 8010618:	4b7c      	ldr	r3, [pc, #496]	; (801080c <__kernel_rem_pio2+0x32c>)
 801061a:	ec51 0b10 	vmov	r0, r1, d0
 801061e:	2200      	movs	r2, #0
 8010620:	f7f0 f80a 	bl	8000638 <__aeabi_dmul>
 8010624:	4602      	mov	r2, r0
 8010626:	460b      	mov	r3, r1
 8010628:	4630      	mov	r0, r6
 801062a:	4639      	mov	r1, r7
 801062c:	f7ef fe4c 	bl	80002c8 <__aeabi_dsub>
 8010630:	460f      	mov	r7, r1
 8010632:	4606      	mov	r6, r0
 8010634:	f7f0 fab0 	bl	8000b98 <__aeabi_d2iz>
 8010638:	9004      	str	r0, [sp, #16]
 801063a:	f7ef ff93 	bl	8000564 <__aeabi_i2d>
 801063e:	4602      	mov	r2, r0
 8010640:	460b      	mov	r3, r1
 8010642:	4630      	mov	r0, r6
 8010644:	4639      	mov	r1, r7
 8010646:	f7ef fe3f 	bl	80002c8 <__aeabi_dsub>
 801064a:	f1ba 0f00 	cmp.w	sl, #0
 801064e:	4606      	mov	r6, r0
 8010650:	460f      	mov	r7, r1
 8010652:	dd6d      	ble.n	8010730 <__kernel_rem_pio2+0x250>
 8010654:	1e62      	subs	r2, r4, #1
 8010656:	ab0e      	add	r3, sp, #56	; 0x38
 8010658:	9d04      	ldr	r5, [sp, #16]
 801065a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801065e:	f1ca 0118 	rsb	r1, sl, #24
 8010662:	fa40 f301 	asr.w	r3, r0, r1
 8010666:	441d      	add	r5, r3
 8010668:	408b      	lsls	r3, r1
 801066a:	1ac0      	subs	r0, r0, r3
 801066c:	ab0e      	add	r3, sp, #56	; 0x38
 801066e:	9504      	str	r5, [sp, #16]
 8010670:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 8010674:	f1ca 0317 	rsb	r3, sl, #23
 8010678:	fa40 fb03 	asr.w	fp, r0, r3
 801067c:	f1bb 0f00 	cmp.w	fp, #0
 8010680:	dd65      	ble.n	801074e <__kernel_rem_pio2+0x26e>
 8010682:	9b04      	ldr	r3, [sp, #16]
 8010684:	2200      	movs	r2, #0
 8010686:	3301      	adds	r3, #1
 8010688:	9304      	str	r3, [sp, #16]
 801068a:	4615      	mov	r5, r2
 801068c:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 8010690:	4294      	cmp	r4, r2
 8010692:	f300 809c 	bgt.w	80107ce <__kernel_rem_pio2+0x2ee>
 8010696:	f1ba 0f00 	cmp.w	sl, #0
 801069a:	dd07      	ble.n	80106ac <__kernel_rem_pio2+0x1cc>
 801069c:	f1ba 0f01 	cmp.w	sl, #1
 80106a0:	f000 80c0 	beq.w	8010824 <__kernel_rem_pio2+0x344>
 80106a4:	f1ba 0f02 	cmp.w	sl, #2
 80106a8:	f000 80c6 	beq.w	8010838 <__kernel_rem_pio2+0x358>
 80106ac:	f1bb 0f02 	cmp.w	fp, #2
 80106b0:	d14d      	bne.n	801074e <__kernel_rem_pio2+0x26e>
 80106b2:	4632      	mov	r2, r6
 80106b4:	463b      	mov	r3, r7
 80106b6:	4956      	ldr	r1, [pc, #344]	; (8010810 <__kernel_rem_pio2+0x330>)
 80106b8:	2000      	movs	r0, #0
 80106ba:	f7ef fe05 	bl	80002c8 <__aeabi_dsub>
 80106be:	4606      	mov	r6, r0
 80106c0:	460f      	mov	r7, r1
 80106c2:	2d00      	cmp	r5, #0
 80106c4:	d043      	beq.n	801074e <__kernel_rem_pio2+0x26e>
 80106c6:	4650      	mov	r0, sl
 80106c8:	ed9f 0b4d 	vldr	d0, [pc, #308]	; 8010800 <__kernel_rem_pio2+0x320>
 80106cc:	f000 fce4 	bl	8011098 <scalbn>
 80106d0:	4630      	mov	r0, r6
 80106d2:	4639      	mov	r1, r7
 80106d4:	ec53 2b10 	vmov	r2, r3, d0
 80106d8:	f7ef fdf6 	bl	80002c8 <__aeabi_dsub>
 80106dc:	4606      	mov	r6, r0
 80106de:	460f      	mov	r7, r1
 80106e0:	e035      	b.n	801074e <__kernel_rem_pio2+0x26e>
 80106e2:	4b4c      	ldr	r3, [pc, #304]	; (8010814 <__kernel_rem_pio2+0x334>)
 80106e4:	2200      	movs	r2, #0
 80106e6:	4630      	mov	r0, r6
 80106e8:	4639      	mov	r1, r7
 80106ea:	f7ef ffa5 	bl	8000638 <__aeabi_dmul>
 80106ee:	f7f0 fa53 	bl	8000b98 <__aeabi_d2iz>
 80106f2:	f7ef ff37 	bl	8000564 <__aeabi_i2d>
 80106f6:	4602      	mov	r2, r0
 80106f8:	460b      	mov	r3, r1
 80106fa:	ec43 2b18 	vmov	d8, r2, r3
 80106fe:	4b46      	ldr	r3, [pc, #280]	; (8010818 <__kernel_rem_pio2+0x338>)
 8010700:	2200      	movs	r2, #0
 8010702:	f7ef ff99 	bl	8000638 <__aeabi_dmul>
 8010706:	4602      	mov	r2, r0
 8010708:	460b      	mov	r3, r1
 801070a:	4630      	mov	r0, r6
 801070c:	4639      	mov	r1, r7
 801070e:	f7ef fddb 	bl	80002c8 <__aeabi_dsub>
 8010712:	f7f0 fa41 	bl	8000b98 <__aeabi_d2iz>
 8010716:	e9d5 2300 	ldrd	r2, r3, [r5]
 801071a:	f84b 0b04 	str.w	r0, [fp], #4
 801071e:	ec51 0b18 	vmov	r0, r1, d8
 8010722:	f7ef fdd3 	bl	80002cc <__adddf3>
 8010726:	f109 39ff 	add.w	r9, r9, #4294967295
 801072a:	4606      	mov	r6, r0
 801072c:	460f      	mov	r7, r1
 801072e:	e75b      	b.n	80105e8 <__kernel_rem_pio2+0x108>
 8010730:	d106      	bne.n	8010740 <__kernel_rem_pio2+0x260>
 8010732:	1e63      	subs	r3, r4, #1
 8010734:	aa0e      	add	r2, sp, #56	; 0x38
 8010736:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801073a:	ea4f 5be0 	mov.w	fp, r0, asr #23
 801073e:	e79d      	b.n	801067c <__kernel_rem_pio2+0x19c>
 8010740:	4b36      	ldr	r3, [pc, #216]	; (801081c <__kernel_rem_pio2+0x33c>)
 8010742:	2200      	movs	r2, #0
 8010744:	f7f0 f9fe 	bl	8000b44 <__aeabi_dcmpge>
 8010748:	2800      	cmp	r0, #0
 801074a:	d13d      	bne.n	80107c8 <__kernel_rem_pio2+0x2e8>
 801074c:	4683      	mov	fp, r0
 801074e:	2200      	movs	r2, #0
 8010750:	2300      	movs	r3, #0
 8010752:	4630      	mov	r0, r6
 8010754:	4639      	mov	r1, r7
 8010756:	f7f0 f9d7 	bl	8000b08 <__aeabi_dcmpeq>
 801075a:	2800      	cmp	r0, #0
 801075c:	f000 80c0 	beq.w	80108e0 <__kernel_rem_pio2+0x400>
 8010760:	1e65      	subs	r5, r4, #1
 8010762:	462b      	mov	r3, r5
 8010764:	2200      	movs	r2, #0
 8010766:	9902      	ldr	r1, [sp, #8]
 8010768:	428b      	cmp	r3, r1
 801076a:	da6c      	bge.n	8010846 <__kernel_rem_pio2+0x366>
 801076c:	2a00      	cmp	r2, #0
 801076e:	f000 8089 	beq.w	8010884 <__kernel_rem_pio2+0x3a4>
 8010772:	ab0e      	add	r3, sp, #56	; 0x38
 8010774:	f1aa 0a18 	sub.w	sl, sl, #24
 8010778:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 801077c:	2b00      	cmp	r3, #0
 801077e:	f000 80ad 	beq.w	80108dc <__kernel_rem_pio2+0x3fc>
 8010782:	4650      	mov	r0, sl
 8010784:	ed9f 0b1e 	vldr	d0, [pc, #120]	; 8010800 <__kernel_rem_pio2+0x320>
 8010788:	f000 fc86 	bl	8011098 <scalbn>
 801078c:	ab9a      	add	r3, sp, #616	; 0x268
 801078e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010792:	ec57 6b10 	vmov	r6, r7, d0
 8010796:	00ec      	lsls	r4, r5, #3
 8010798:	f1a3 0898 	sub.w	r8, r3, #152	; 0x98
 801079c:	46aa      	mov	sl, r5
 801079e:	f1ba 0f00 	cmp.w	sl, #0
 80107a2:	f280 80d6 	bge.w	8010952 <__kernel_rem_pio2+0x472>
 80107a6:	ed9f 8b14 	vldr	d8, [pc, #80]	; 80107f8 <__kernel_rem_pio2+0x318>
 80107aa:	462e      	mov	r6, r5
 80107ac:	2e00      	cmp	r6, #0
 80107ae:	f2c0 8104 	blt.w	80109ba <__kernel_rem_pio2+0x4da>
 80107b2:	ab72      	add	r3, sp, #456	; 0x1c8
 80107b4:	ed8d 8b06 	vstr	d8, [sp, #24]
 80107b8:	f8df a064 	ldr.w	sl, [pc, #100]	; 8010820 <__kernel_rem_pio2+0x340>
 80107bc:	eb03 09c6 	add.w	r9, r3, r6, lsl #3
 80107c0:	f04f 0800 	mov.w	r8, #0
 80107c4:	1baf      	subs	r7, r5, r6
 80107c6:	e0ea      	b.n	801099e <__kernel_rem_pio2+0x4be>
 80107c8:	f04f 0b02 	mov.w	fp, #2
 80107cc:	e759      	b.n	8010682 <__kernel_rem_pio2+0x1a2>
 80107ce:	f8d8 3000 	ldr.w	r3, [r8]
 80107d2:	b955      	cbnz	r5, 80107ea <__kernel_rem_pio2+0x30a>
 80107d4:	b123      	cbz	r3, 80107e0 <__kernel_rem_pio2+0x300>
 80107d6:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 80107da:	f8c8 3000 	str.w	r3, [r8]
 80107de:	2301      	movs	r3, #1
 80107e0:	3201      	adds	r2, #1
 80107e2:	f108 0804 	add.w	r8, r8, #4
 80107e6:	461d      	mov	r5, r3
 80107e8:	e752      	b.n	8010690 <__kernel_rem_pio2+0x1b0>
 80107ea:	1acb      	subs	r3, r1, r3
 80107ec:	f8c8 3000 	str.w	r3, [r8]
 80107f0:	462b      	mov	r3, r5
 80107f2:	e7f5      	b.n	80107e0 <__kernel_rem_pio2+0x300>
 80107f4:	f3af 8000 	nop.w
	...
 8010804:	3ff00000 	.word	0x3ff00000
 8010808:	08011908 	.word	0x08011908
 801080c:	40200000 	.word	0x40200000
 8010810:	3ff00000 	.word	0x3ff00000
 8010814:	3e700000 	.word	0x3e700000
 8010818:	41700000 	.word	0x41700000
 801081c:	3fe00000 	.word	0x3fe00000
 8010820:	080118c8 	.word	0x080118c8
 8010824:	1e62      	subs	r2, r4, #1
 8010826:	ab0e      	add	r3, sp, #56	; 0x38
 8010828:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801082c:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8010830:	a90e      	add	r1, sp, #56	; 0x38
 8010832:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8010836:	e739      	b.n	80106ac <__kernel_rem_pio2+0x1cc>
 8010838:	1e62      	subs	r2, r4, #1
 801083a:	ab0e      	add	r3, sp, #56	; 0x38
 801083c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8010840:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8010844:	e7f4      	b.n	8010830 <__kernel_rem_pio2+0x350>
 8010846:	a90e      	add	r1, sp, #56	; 0x38
 8010848:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 801084c:	3b01      	subs	r3, #1
 801084e:	430a      	orrs	r2, r1
 8010850:	e789      	b.n	8010766 <__kernel_rem_pio2+0x286>
 8010852:	3301      	adds	r3, #1
 8010854:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 8010858:	2900      	cmp	r1, #0
 801085a:	d0fa      	beq.n	8010852 <__kernel_rem_pio2+0x372>
 801085c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801085e:	f502 721a 	add.w	r2, r2, #616	; 0x268
 8010862:	446a      	add	r2, sp
 8010864:	3a98      	subs	r2, #152	; 0x98
 8010866:	920a      	str	r2, [sp, #40]	; 0x28
 8010868:	9a08      	ldr	r2, [sp, #32]
 801086a:	18e3      	adds	r3, r4, r3
 801086c:	18a5      	adds	r5, r4, r2
 801086e:	aa22      	add	r2, sp, #136	; 0x88
 8010870:	f104 0801 	add.w	r8, r4, #1
 8010874:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 8010878:	9304      	str	r3, [sp, #16]
 801087a:	9b04      	ldr	r3, [sp, #16]
 801087c:	4543      	cmp	r3, r8
 801087e:	da04      	bge.n	801088a <__kernel_rem_pio2+0x3aa>
 8010880:	461c      	mov	r4, r3
 8010882:	e6a3      	b.n	80105cc <__kernel_rem_pio2+0xec>
 8010884:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010886:	2301      	movs	r3, #1
 8010888:	e7e4      	b.n	8010854 <__kernel_rem_pio2+0x374>
 801088a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801088c:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 8010890:	f7ef fe68 	bl	8000564 <__aeabi_i2d>
 8010894:	e8e5 0102 	strd	r0, r1, [r5], #8
 8010898:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801089a:	46ab      	mov	fp, r5
 801089c:	461c      	mov	r4, r3
 801089e:	f04f 0900 	mov.w	r9, #0
 80108a2:	2600      	movs	r6, #0
 80108a4:	2700      	movs	r7, #0
 80108a6:	9b06      	ldr	r3, [sp, #24]
 80108a8:	4599      	cmp	r9, r3
 80108aa:	dd06      	ble.n	80108ba <__kernel_rem_pio2+0x3da>
 80108ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80108ae:	e8e3 6702 	strd	r6, r7, [r3], #8
 80108b2:	f108 0801 	add.w	r8, r8, #1
 80108b6:	930a      	str	r3, [sp, #40]	; 0x28
 80108b8:	e7df      	b.n	801087a <__kernel_rem_pio2+0x39a>
 80108ba:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 80108be:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 80108c2:	f7ef feb9 	bl	8000638 <__aeabi_dmul>
 80108c6:	4602      	mov	r2, r0
 80108c8:	460b      	mov	r3, r1
 80108ca:	4630      	mov	r0, r6
 80108cc:	4639      	mov	r1, r7
 80108ce:	f7ef fcfd 	bl	80002cc <__adddf3>
 80108d2:	f109 0901 	add.w	r9, r9, #1
 80108d6:	4606      	mov	r6, r0
 80108d8:	460f      	mov	r7, r1
 80108da:	e7e4      	b.n	80108a6 <__kernel_rem_pio2+0x3c6>
 80108dc:	3d01      	subs	r5, #1
 80108de:	e748      	b.n	8010772 <__kernel_rem_pio2+0x292>
 80108e0:	ec47 6b10 	vmov	d0, r6, r7
 80108e4:	f1ca 0000 	rsb	r0, sl, #0
 80108e8:	f000 fbd6 	bl	8011098 <scalbn>
 80108ec:	ec57 6b10 	vmov	r6, r7, d0
 80108f0:	4ba0      	ldr	r3, [pc, #640]	; (8010b74 <__kernel_rem_pio2+0x694>)
 80108f2:	ee10 0a10 	vmov	r0, s0
 80108f6:	2200      	movs	r2, #0
 80108f8:	4639      	mov	r1, r7
 80108fa:	f7f0 f923 	bl	8000b44 <__aeabi_dcmpge>
 80108fe:	b1f8      	cbz	r0, 8010940 <__kernel_rem_pio2+0x460>
 8010900:	4b9d      	ldr	r3, [pc, #628]	; (8010b78 <__kernel_rem_pio2+0x698>)
 8010902:	2200      	movs	r2, #0
 8010904:	4630      	mov	r0, r6
 8010906:	4639      	mov	r1, r7
 8010908:	f7ef fe96 	bl	8000638 <__aeabi_dmul>
 801090c:	f7f0 f944 	bl	8000b98 <__aeabi_d2iz>
 8010910:	4680      	mov	r8, r0
 8010912:	f7ef fe27 	bl	8000564 <__aeabi_i2d>
 8010916:	4b97      	ldr	r3, [pc, #604]	; (8010b74 <__kernel_rem_pio2+0x694>)
 8010918:	2200      	movs	r2, #0
 801091a:	f7ef fe8d 	bl	8000638 <__aeabi_dmul>
 801091e:	460b      	mov	r3, r1
 8010920:	4602      	mov	r2, r0
 8010922:	4639      	mov	r1, r7
 8010924:	4630      	mov	r0, r6
 8010926:	f7ef fccf 	bl	80002c8 <__aeabi_dsub>
 801092a:	f7f0 f935 	bl	8000b98 <__aeabi_d2iz>
 801092e:	1c65      	adds	r5, r4, #1
 8010930:	ab0e      	add	r3, sp, #56	; 0x38
 8010932:	f10a 0a18 	add.w	sl, sl, #24
 8010936:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 801093a:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 801093e:	e720      	b.n	8010782 <__kernel_rem_pio2+0x2a2>
 8010940:	4630      	mov	r0, r6
 8010942:	4639      	mov	r1, r7
 8010944:	f7f0 f928 	bl	8000b98 <__aeabi_d2iz>
 8010948:	ab0e      	add	r3, sp, #56	; 0x38
 801094a:	4625      	mov	r5, r4
 801094c:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8010950:	e717      	b.n	8010782 <__kernel_rem_pio2+0x2a2>
 8010952:	ab0e      	add	r3, sp, #56	; 0x38
 8010954:	f853 002a 	ldr.w	r0, [r3, sl, lsl #2]
 8010958:	f7ef fe04 	bl	8000564 <__aeabi_i2d>
 801095c:	4632      	mov	r2, r6
 801095e:	463b      	mov	r3, r7
 8010960:	f7ef fe6a 	bl	8000638 <__aeabi_dmul>
 8010964:	4b84      	ldr	r3, [pc, #528]	; (8010b78 <__kernel_rem_pio2+0x698>)
 8010966:	e968 0102 	strd	r0, r1, [r8, #-8]!
 801096a:	2200      	movs	r2, #0
 801096c:	4630      	mov	r0, r6
 801096e:	4639      	mov	r1, r7
 8010970:	f7ef fe62 	bl	8000638 <__aeabi_dmul>
 8010974:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010978:	4606      	mov	r6, r0
 801097a:	460f      	mov	r7, r1
 801097c:	e70f      	b.n	801079e <__kernel_rem_pio2+0x2be>
 801097e:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 8010982:	e8fa 0102 	ldrd	r0, r1, [sl], #8
 8010986:	f7ef fe57 	bl	8000638 <__aeabi_dmul>
 801098a:	4602      	mov	r2, r0
 801098c:	460b      	mov	r3, r1
 801098e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8010992:	f7ef fc9b 	bl	80002cc <__adddf3>
 8010996:	e9cd 0106 	strd	r0, r1, [sp, #24]
 801099a:	f108 0801 	add.w	r8, r8, #1
 801099e:	9b02      	ldr	r3, [sp, #8]
 80109a0:	4598      	cmp	r8, r3
 80109a2:	dc01      	bgt.n	80109a8 <__kernel_rem_pio2+0x4c8>
 80109a4:	45b8      	cmp	r8, r7
 80109a6:	ddea      	ble.n	801097e <__kernel_rem_pio2+0x49e>
 80109a8:	ed9d 7b06 	vldr	d7, [sp, #24]
 80109ac:	ab4a      	add	r3, sp, #296	; 0x128
 80109ae:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 80109b2:	ed87 7b00 	vstr	d7, [r7]
 80109b6:	3e01      	subs	r6, #1
 80109b8:	e6f8      	b.n	80107ac <__kernel_rem_pio2+0x2cc>
 80109ba:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 80109bc:	2b02      	cmp	r3, #2
 80109be:	dc0b      	bgt.n	80109d8 <__kernel_rem_pio2+0x4f8>
 80109c0:	2b00      	cmp	r3, #0
 80109c2:	dc35      	bgt.n	8010a30 <__kernel_rem_pio2+0x550>
 80109c4:	d059      	beq.n	8010a7a <__kernel_rem_pio2+0x59a>
 80109c6:	9b04      	ldr	r3, [sp, #16]
 80109c8:	f003 0007 	and.w	r0, r3, #7
 80109cc:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
 80109d0:	ecbd 8b02 	vpop	{d8}
 80109d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80109d8:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 80109da:	2b03      	cmp	r3, #3
 80109dc:	d1f3      	bne.n	80109c6 <__kernel_rem_pio2+0x4e6>
 80109de:	ab4a      	add	r3, sp, #296	; 0x128
 80109e0:	4423      	add	r3, r4
 80109e2:	9306      	str	r3, [sp, #24]
 80109e4:	461c      	mov	r4, r3
 80109e6:	469a      	mov	sl, r3
 80109e8:	9502      	str	r5, [sp, #8]
 80109ea:	9b02      	ldr	r3, [sp, #8]
 80109ec:	2b00      	cmp	r3, #0
 80109ee:	f1aa 0a08 	sub.w	sl, sl, #8
 80109f2:	dc6b      	bgt.n	8010acc <__kernel_rem_pio2+0x5ec>
 80109f4:	46aa      	mov	sl, r5
 80109f6:	f1ba 0f01 	cmp.w	sl, #1
 80109fa:	f1a4 0408 	sub.w	r4, r4, #8
 80109fe:	f300 8085 	bgt.w	8010b0c <__kernel_rem_pio2+0x62c>
 8010a02:	9c06      	ldr	r4, [sp, #24]
 8010a04:	2000      	movs	r0, #0
 8010a06:	3408      	adds	r4, #8
 8010a08:	2100      	movs	r1, #0
 8010a0a:	2d01      	cmp	r5, #1
 8010a0c:	f300 809d 	bgt.w	8010b4a <__kernel_rem_pio2+0x66a>
 8010a10:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	; 0x128
 8010a14:	e9dd 784c 	ldrd	r7, r8, [sp, #304]	; 0x130
 8010a18:	f1bb 0f00 	cmp.w	fp, #0
 8010a1c:	f040 809b 	bne.w	8010b56 <__kernel_rem_pio2+0x676>
 8010a20:	9b01      	ldr	r3, [sp, #4]
 8010a22:	e9c3 5600 	strd	r5, r6, [r3]
 8010a26:	e9c3 7802 	strd	r7, r8, [r3, #8]
 8010a2a:	e9c3 0104 	strd	r0, r1, [r3, #16]
 8010a2e:	e7ca      	b.n	80109c6 <__kernel_rem_pio2+0x4e6>
 8010a30:	3408      	adds	r4, #8
 8010a32:	ab4a      	add	r3, sp, #296	; 0x128
 8010a34:	441c      	add	r4, r3
 8010a36:	462e      	mov	r6, r5
 8010a38:	2000      	movs	r0, #0
 8010a3a:	2100      	movs	r1, #0
 8010a3c:	2e00      	cmp	r6, #0
 8010a3e:	da36      	bge.n	8010aae <__kernel_rem_pio2+0x5ce>
 8010a40:	f1bb 0f00 	cmp.w	fp, #0
 8010a44:	d039      	beq.n	8010aba <__kernel_rem_pio2+0x5da>
 8010a46:	4602      	mov	r2, r0
 8010a48:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010a4c:	9c01      	ldr	r4, [sp, #4]
 8010a4e:	e9c4 2300 	strd	r2, r3, [r4]
 8010a52:	4602      	mov	r2, r0
 8010a54:	460b      	mov	r3, r1
 8010a56:	e9dd 014a 	ldrd	r0, r1, [sp, #296]	; 0x128
 8010a5a:	f7ef fc35 	bl	80002c8 <__aeabi_dsub>
 8010a5e:	ae4c      	add	r6, sp, #304	; 0x130
 8010a60:	2401      	movs	r4, #1
 8010a62:	42a5      	cmp	r5, r4
 8010a64:	da2c      	bge.n	8010ac0 <__kernel_rem_pio2+0x5e0>
 8010a66:	f1bb 0f00 	cmp.w	fp, #0
 8010a6a:	d002      	beq.n	8010a72 <__kernel_rem_pio2+0x592>
 8010a6c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010a70:	4619      	mov	r1, r3
 8010a72:	9b01      	ldr	r3, [sp, #4]
 8010a74:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8010a78:	e7a5      	b.n	80109c6 <__kernel_rem_pio2+0x4e6>
 8010a7a:	f504 731a 	add.w	r3, r4, #616	; 0x268
 8010a7e:	eb0d 0403 	add.w	r4, sp, r3
 8010a82:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
 8010a86:	2000      	movs	r0, #0
 8010a88:	2100      	movs	r1, #0
 8010a8a:	2d00      	cmp	r5, #0
 8010a8c:	da09      	bge.n	8010aa2 <__kernel_rem_pio2+0x5c2>
 8010a8e:	f1bb 0f00 	cmp.w	fp, #0
 8010a92:	d002      	beq.n	8010a9a <__kernel_rem_pio2+0x5ba>
 8010a94:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010a98:	4619      	mov	r1, r3
 8010a9a:	9b01      	ldr	r3, [sp, #4]
 8010a9c:	e9c3 0100 	strd	r0, r1, [r3]
 8010aa0:	e791      	b.n	80109c6 <__kernel_rem_pio2+0x4e6>
 8010aa2:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8010aa6:	f7ef fc11 	bl	80002cc <__adddf3>
 8010aaa:	3d01      	subs	r5, #1
 8010aac:	e7ed      	b.n	8010a8a <__kernel_rem_pio2+0x5aa>
 8010aae:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8010ab2:	f7ef fc0b 	bl	80002cc <__adddf3>
 8010ab6:	3e01      	subs	r6, #1
 8010ab8:	e7c0      	b.n	8010a3c <__kernel_rem_pio2+0x55c>
 8010aba:	4602      	mov	r2, r0
 8010abc:	460b      	mov	r3, r1
 8010abe:	e7c5      	b.n	8010a4c <__kernel_rem_pio2+0x56c>
 8010ac0:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 8010ac4:	f7ef fc02 	bl	80002cc <__adddf3>
 8010ac8:	3401      	adds	r4, #1
 8010aca:	e7ca      	b.n	8010a62 <__kernel_rem_pio2+0x582>
 8010acc:	e9da 8900 	ldrd	r8, r9, [sl]
 8010ad0:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 8010ad4:	9b02      	ldr	r3, [sp, #8]
 8010ad6:	3b01      	subs	r3, #1
 8010ad8:	9302      	str	r3, [sp, #8]
 8010ada:	4632      	mov	r2, r6
 8010adc:	463b      	mov	r3, r7
 8010ade:	4640      	mov	r0, r8
 8010ae0:	4649      	mov	r1, r9
 8010ae2:	f7ef fbf3 	bl	80002cc <__adddf3>
 8010ae6:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8010aea:	4602      	mov	r2, r0
 8010aec:	460b      	mov	r3, r1
 8010aee:	4640      	mov	r0, r8
 8010af0:	4649      	mov	r1, r9
 8010af2:	f7ef fbe9 	bl	80002c8 <__aeabi_dsub>
 8010af6:	4632      	mov	r2, r6
 8010af8:	463b      	mov	r3, r7
 8010afa:	f7ef fbe7 	bl	80002cc <__adddf3>
 8010afe:	ed9d 7b08 	vldr	d7, [sp, #32]
 8010b02:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8010b06:	ed8a 7b00 	vstr	d7, [sl]
 8010b0a:	e76e      	b.n	80109ea <__kernel_rem_pio2+0x50a>
 8010b0c:	e9d4 8900 	ldrd	r8, r9, [r4]
 8010b10:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
 8010b14:	4640      	mov	r0, r8
 8010b16:	4632      	mov	r2, r6
 8010b18:	463b      	mov	r3, r7
 8010b1a:	4649      	mov	r1, r9
 8010b1c:	f7ef fbd6 	bl	80002cc <__adddf3>
 8010b20:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8010b24:	4602      	mov	r2, r0
 8010b26:	460b      	mov	r3, r1
 8010b28:	4640      	mov	r0, r8
 8010b2a:	4649      	mov	r1, r9
 8010b2c:	f7ef fbcc 	bl	80002c8 <__aeabi_dsub>
 8010b30:	4632      	mov	r2, r6
 8010b32:	463b      	mov	r3, r7
 8010b34:	f7ef fbca 	bl	80002cc <__adddf3>
 8010b38:	ed9d 7b02 	vldr	d7, [sp, #8]
 8010b3c:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8010b40:	ed84 7b00 	vstr	d7, [r4]
 8010b44:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010b48:	e755      	b.n	80109f6 <__kernel_rem_pio2+0x516>
 8010b4a:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8010b4e:	f7ef fbbd 	bl	80002cc <__adddf3>
 8010b52:	3d01      	subs	r5, #1
 8010b54:	e759      	b.n	8010a0a <__kernel_rem_pio2+0x52a>
 8010b56:	9b01      	ldr	r3, [sp, #4]
 8010b58:	9a01      	ldr	r2, [sp, #4]
 8010b5a:	601d      	str	r5, [r3, #0]
 8010b5c:	f106 4400 	add.w	r4, r6, #2147483648	; 0x80000000
 8010b60:	605c      	str	r4, [r3, #4]
 8010b62:	609f      	str	r7, [r3, #8]
 8010b64:	f108 4300 	add.w	r3, r8, #2147483648	; 0x80000000
 8010b68:	60d3      	str	r3, [r2, #12]
 8010b6a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010b6e:	6110      	str	r0, [r2, #16]
 8010b70:	6153      	str	r3, [r2, #20]
 8010b72:	e728      	b.n	80109c6 <__kernel_rem_pio2+0x4e6>
 8010b74:	41700000 	.word	0x41700000
 8010b78:	3e700000 	.word	0x3e700000
 8010b7c:	00000000 	.word	0x00000000

08010b80 <__kernel_tan>:
 8010b80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b84:	ed2d 8b06 	vpush	{d8-d10}
 8010b88:	ec5b ab10 	vmov	sl, fp, d0
 8010b8c:	4be0      	ldr	r3, [pc, #896]	; (8010f10 <__kernel_tan+0x390>)
 8010b8e:	b083      	sub	sp, #12
 8010b90:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
 8010b94:	429f      	cmp	r7, r3
 8010b96:	ec59 8b11 	vmov	r8, r9, d1
 8010b9a:	4606      	mov	r6, r0
 8010b9c:	f8cd b000 	str.w	fp, [sp]
 8010ba0:	dc61      	bgt.n	8010c66 <__kernel_tan+0xe6>
 8010ba2:	ee10 0a10 	vmov	r0, s0
 8010ba6:	4659      	mov	r1, fp
 8010ba8:	f7ef fff6 	bl	8000b98 <__aeabi_d2iz>
 8010bac:	4605      	mov	r5, r0
 8010bae:	2800      	cmp	r0, #0
 8010bb0:	f040 8083 	bne.w	8010cba <__kernel_tan+0x13a>
 8010bb4:	1c73      	adds	r3, r6, #1
 8010bb6:	4652      	mov	r2, sl
 8010bb8:	4313      	orrs	r3, r2
 8010bba:	433b      	orrs	r3, r7
 8010bbc:	d112      	bne.n	8010be4 <__kernel_tan+0x64>
 8010bbe:	ec4b ab10 	vmov	d0, sl, fp
 8010bc2:	f7ff fa41 	bl	8010048 <fabs>
 8010bc6:	49d3      	ldr	r1, [pc, #844]	; (8010f14 <__kernel_tan+0x394>)
 8010bc8:	ec53 2b10 	vmov	r2, r3, d0
 8010bcc:	2000      	movs	r0, #0
 8010bce:	f7ef fe5d 	bl	800088c <__aeabi_ddiv>
 8010bd2:	4682      	mov	sl, r0
 8010bd4:	468b      	mov	fp, r1
 8010bd6:	ec4b ab10 	vmov	d0, sl, fp
 8010bda:	b003      	add	sp, #12
 8010bdc:	ecbd 8b06 	vpop	{d8-d10}
 8010be0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010be4:	2e01      	cmp	r6, #1
 8010be6:	d0f6      	beq.n	8010bd6 <__kernel_tan+0x56>
 8010be8:	4642      	mov	r2, r8
 8010bea:	464b      	mov	r3, r9
 8010bec:	4650      	mov	r0, sl
 8010bee:	4659      	mov	r1, fp
 8010bf0:	f7ef fb6c 	bl	80002cc <__adddf3>
 8010bf4:	4602      	mov	r2, r0
 8010bf6:	460b      	mov	r3, r1
 8010bf8:	460f      	mov	r7, r1
 8010bfa:	2000      	movs	r0, #0
 8010bfc:	49c6      	ldr	r1, [pc, #792]	; (8010f18 <__kernel_tan+0x398>)
 8010bfe:	f7ef fe45 	bl	800088c <__aeabi_ddiv>
 8010c02:	e9cd 0100 	strd	r0, r1, [sp]
 8010c06:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010c0a:	462e      	mov	r6, r5
 8010c0c:	4652      	mov	r2, sl
 8010c0e:	462c      	mov	r4, r5
 8010c10:	4630      	mov	r0, r6
 8010c12:	461d      	mov	r5, r3
 8010c14:	4639      	mov	r1, r7
 8010c16:	465b      	mov	r3, fp
 8010c18:	f7ef fb56 	bl	80002c8 <__aeabi_dsub>
 8010c1c:	4602      	mov	r2, r0
 8010c1e:	460b      	mov	r3, r1
 8010c20:	4640      	mov	r0, r8
 8010c22:	4649      	mov	r1, r9
 8010c24:	f7ef fb50 	bl	80002c8 <__aeabi_dsub>
 8010c28:	4632      	mov	r2, r6
 8010c2a:	462b      	mov	r3, r5
 8010c2c:	f7ef fd04 	bl	8000638 <__aeabi_dmul>
 8010c30:	4632      	mov	r2, r6
 8010c32:	4680      	mov	r8, r0
 8010c34:	4689      	mov	r9, r1
 8010c36:	462b      	mov	r3, r5
 8010c38:	4630      	mov	r0, r6
 8010c3a:	4639      	mov	r1, r7
 8010c3c:	f7ef fcfc 	bl	8000638 <__aeabi_dmul>
 8010c40:	4bb4      	ldr	r3, [pc, #720]	; (8010f14 <__kernel_tan+0x394>)
 8010c42:	2200      	movs	r2, #0
 8010c44:	f7ef fb42 	bl	80002cc <__adddf3>
 8010c48:	4602      	mov	r2, r0
 8010c4a:	460b      	mov	r3, r1
 8010c4c:	4640      	mov	r0, r8
 8010c4e:	4649      	mov	r1, r9
 8010c50:	f7ef fb3c 	bl	80002cc <__adddf3>
 8010c54:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010c58:	f7ef fcee 	bl	8000638 <__aeabi_dmul>
 8010c5c:	4622      	mov	r2, r4
 8010c5e:	462b      	mov	r3, r5
 8010c60:	f7ef fb34 	bl	80002cc <__adddf3>
 8010c64:	e7b5      	b.n	8010bd2 <__kernel_tan+0x52>
 8010c66:	4bad      	ldr	r3, [pc, #692]	; (8010f1c <__kernel_tan+0x39c>)
 8010c68:	429f      	cmp	r7, r3
 8010c6a:	dd26      	ble.n	8010cba <__kernel_tan+0x13a>
 8010c6c:	9b00      	ldr	r3, [sp, #0]
 8010c6e:	2b00      	cmp	r3, #0
 8010c70:	da09      	bge.n	8010c86 <__kernel_tan+0x106>
 8010c72:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 8010c76:	469b      	mov	fp, r3
 8010c78:	ee10 aa10 	vmov	sl, s0
 8010c7c:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8010c80:	ee11 8a10 	vmov	r8, s2
 8010c84:	4699      	mov	r9, r3
 8010c86:	4652      	mov	r2, sl
 8010c88:	465b      	mov	r3, fp
 8010c8a:	a183      	add	r1, pc, #524	; (adr r1, 8010e98 <__kernel_tan+0x318>)
 8010c8c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8010c90:	f7ef fb1a 	bl	80002c8 <__aeabi_dsub>
 8010c94:	4642      	mov	r2, r8
 8010c96:	464b      	mov	r3, r9
 8010c98:	4604      	mov	r4, r0
 8010c9a:	460d      	mov	r5, r1
 8010c9c:	a180      	add	r1, pc, #512	; (adr r1, 8010ea0 <__kernel_tan+0x320>)
 8010c9e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8010ca2:	f7ef fb11 	bl	80002c8 <__aeabi_dsub>
 8010ca6:	4622      	mov	r2, r4
 8010ca8:	462b      	mov	r3, r5
 8010caa:	f7ef fb0f 	bl	80002cc <__adddf3>
 8010cae:	f04f 0800 	mov.w	r8, #0
 8010cb2:	4682      	mov	sl, r0
 8010cb4:	468b      	mov	fp, r1
 8010cb6:	f04f 0900 	mov.w	r9, #0
 8010cba:	4652      	mov	r2, sl
 8010cbc:	465b      	mov	r3, fp
 8010cbe:	4650      	mov	r0, sl
 8010cc0:	4659      	mov	r1, fp
 8010cc2:	f7ef fcb9 	bl	8000638 <__aeabi_dmul>
 8010cc6:	4602      	mov	r2, r0
 8010cc8:	460b      	mov	r3, r1
 8010cca:	ec43 2b18 	vmov	d8, r2, r3
 8010cce:	f7ef fcb3 	bl	8000638 <__aeabi_dmul>
 8010cd2:	ec53 2b18 	vmov	r2, r3, d8
 8010cd6:	4604      	mov	r4, r0
 8010cd8:	460d      	mov	r5, r1
 8010cda:	4650      	mov	r0, sl
 8010cdc:	4659      	mov	r1, fp
 8010cde:	f7ef fcab 	bl	8000638 <__aeabi_dmul>
 8010ce2:	a371      	add	r3, pc, #452	; (adr r3, 8010ea8 <__kernel_tan+0x328>)
 8010ce4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010ce8:	ec41 0b19 	vmov	d9, r0, r1
 8010cec:	4620      	mov	r0, r4
 8010cee:	4629      	mov	r1, r5
 8010cf0:	f7ef fca2 	bl	8000638 <__aeabi_dmul>
 8010cf4:	a36e      	add	r3, pc, #440	; (adr r3, 8010eb0 <__kernel_tan+0x330>)
 8010cf6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010cfa:	f7ef fae7 	bl	80002cc <__adddf3>
 8010cfe:	4622      	mov	r2, r4
 8010d00:	462b      	mov	r3, r5
 8010d02:	f7ef fc99 	bl	8000638 <__aeabi_dmul>
 8010d06:	a36c      	add	r3, pc, #432	; (adr r3, 8010eb8 <__kernel_tan+0x338>)
 8010d08:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010d0c:	f7ef fade 	bl	80002cc <__adddf3>
 8010d10:	4622      	mov	r2, r4
 8010d12:	462b      	mov	r3, r5
 8010d14:	f7ef fc90 	bl	8000638 <__aeabi_dmul>
 8010d18:	a369      	add	r3, pc, #420	; (adr r3, 8010ec0 <__kernel_tan+0x340>)
 8010d1a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010d1e:	f7ef fad5 	bl	80002cc <__adddf3>
 8010d22:	4622      	mov	r2, r4
 8010d24:	462b      	mov	r3, r5
 8010d26:	f7ef fc87 	bl	8000638 <__aeabi_dmul>
 8010d2a:	a367      	add	r3, pc, #412	; (adr r3, 8010ec8 <__kernel_tan+0x348>)
 8010d2c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010d30:	f7ef facc 	bl	80002cc <__adddf3>
 8010d34:	4622      	mov	r2, r4
 8010d36:	462b      	mov	r3, r5
 8010d38:	f7ef fc7e 	bl	8000638 <__aeabi_dmul>
 8010d3c:	a364      	add	r3, pc, #400	; (adr r3, 8010ed0 <__kernel_tan+0x350>)
 8010d3e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010d42:	f7ef fac3 	bl	80002cc <__adddf3>
 8010d46:	ec53 2b18 	vmov	r2, r3, d8
 8010d4a:	f7ef fc75 	bl	8000638 <__aeabi_dmul>
 8010d4e:	a362      	add	r3, pc, #392	; (adr r3, 8010ed8 <__kernel_tan+0x358>)
 8010d50:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010d54:	ec41 0b1a 	vmov	d10, r0, r1
 8010d58:	4620      	mov	r0, r4
 8010d5a:	4629      	mov	r1, r5
 8010d5c:	f7ef fc6c 	bl	8000638 <__aeabi_dmul>
 8010d60:	a35f      	add	r3, pc, #380	; (adr r3, 8010ee0 <__kernel_tan+0x360>)
 8010d62:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010d66:	f7ef fab1 	bl	80002cc <__adddf3>
 8010d6a:	4622      	mov	r2, r4
 8010d6c:	462b      	mov	r3, r5
 8010d6e:	f7ef fc63 	bl	8000638 <__aeabi_dmul>
 8010d72:	a35d      	add	r3, pc, #372	; (adr r3, 8010ee8 <__kernel_tan+0x368>)
 8010d74:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010d78:	f7ef faa8 	bl	80002cc <__adddf3>
 8010d7c:	4622      	mov	r2, r4
 8010d7e:	462b      	mov	r3, r5
 8010d80:	f7ef fc5a 	bl	8000638 <__aeabi_dmul>
 8010d84:	a35a      	add	r3, pc, #360	; (adr r3, 8010ef0 <__kernel_tan+0x370>)
 8010d86:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010d8a:	f7ef fa9f 	bl	80002cc <__adddf3>
 8010d8e:	4622      	mov	r2, r4
 8010d90:	462b      	mov	r3, r5
 8010d92:	f7ef fc51 	bl	8000638 <__aeabi_dmul>
 8010d96:	a358      	add	r3, pc, #352	; (adr r3, 8010ef8 <__kernel_tan+0x378>)
 8010d98:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010d9c:	f7ef fa96 	bl	80002cc <__adddf3>
 8010da0:	4622      	mov	r2, r4
 8010da2:	462b      	mov	r3, r5
 8010da4:	f7ef fc48 	bl	8000638 <__aeabi_dmul>
 8010da8:	a355      	add	r3, pc, #340	; (adr r3, 8010f00 <__kernel_tan+0x380>)
 8010daa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010dae:	f7ef fa8d 	bl	80002cc <__adddf3>
 8010db2:	4602      	mov	r2, r0
 8010db4:	460b      	mov	r3, r1
 8010db6:	ec51 0b1a 	vmov	r0, r1, d10
 8010dba:	f7ef fa87 	bl	80002cc <__adddf3>
 8010dbe:	ec53 2b19 	vmov	r2, r3, d9
 8010dc2:	f7ef fc39 	bl	8000638 <__aeabi_dmul>
 8010dc6:	4642      	mov	r2, r8
 8010dc8:	464b      	mov	r3, r9
 8010dca:	f7ef fa7f 	bl	80002cc <__adddf3>
 8010dce:	ec53 2b18 	vmov	r2, r3, d8
 8010dd2:	f7ef fc31 	bl	8000638 <__aeabi_dmul>
 8010dd6:	4642      	mov	r2, r8
 8010dd8:	464b      	mov	r3, r9
 8010dda:	f7ef fa77 	bl	80002cc <__adddf3>
 8010dde:	a34a      	add	r3, pc, #296	; (adr r3, 8010f08 <__kernel_tan+0x388>)
 8010de0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010de4:	4604      	mov	r4, r0
 8010de6:	460d      	mov	r5, r1
 8010de8:	ec51 0b19 	vmov	r0, r1, d9
 8010dec:	f7ef fc24 	bl	8000638 <__aeabi_dmul>
 8010df0:	4622      	mov	r2, r4
 8010df2:	462b      	mov	r3, r5
 8010df4:	f7ef fa6a 	bl	80002cc <__adddf3>
 8010df8:	460b      	mov	r3, r1
 8010dfa:	ec41 0b18 	vmov	d8, r0, r1
 8010dfe:	4602      	mov	r2, r0
 8010e00:	4659      	mov	r1, fp
 8010e02:	4650      	mov	r0, sl
 8010e04:	f7ef fa62 	bl	80002cc <__adddf3>
 8010e08:	4b44      	ldr	r3, [pc, #272]	; (8010f1c <__kernel_tan+0x39c>)
 8010e0a:	429f      	cmp	r7, r3
 8010e0c:	4604      	mov	r4, r0
 8010e0e:	460d      	mov	r5, r1
 8010e10:	f340 8086 	ble.w	8010f20 <__kernel_tan+0x3a0>
 8010e14:	4630      	mov	r0, r6
 8010e16:	f7ef fba5 	bl	8000564 <__aeabi_i2d>
 8010e1a:	4622      	mov	r2, r4
 8010e1c:	4680      	mov	r8, r0
 8010e1e:	4689      	mov	r9, r1
 8010e20:	462b      	mov	r3, r5
 8010e22:	4620      	mov	r0, r4
 8010e24:	4629      	mov	r1, r5
 8010e26:	f7ef fc07 	bl	8000638 <__aeabi_dmul>
 8010e2a:	4642      	mov	r2, r8
 8010e2c:	4606      	mov	r6, r0
 8010e2e:	460f      	mov	r7, r1
 8010e30:	464b      	mov	r3, r9
 8010e32:	4620      	mov	r0, r4
 8010e34:	4629      	mov	r1, r5
 8010e36:	f7ef fa49 	bl	80002cc <__adddf3>
 8010e3a:	4602      	mov	r2, r0
 8010e3c:	460b      	mov	r3, r1
 8010e3e:	4630      	mov	r0, r6
 8010e40:	4639      	mov	r1, r7
 8010e42:	f7ef fd23 	bl	800088c <__aeabi_ddiv>
 8010e46:	ec53 2b18 	vmov	r2, r3, d8
 8010e4a:	f7ef fa3d 	bl	80002c8 <__aeabi_dsub>
 8010e4e:	4602      	mov	r2, r0
 8010e50:	460b      	mov	r3, r1
 8010e52:	4650      	mov	r0, sl
 8010e54:	4659      	mov	r1, fp
 8010e56:	f7ef fa37 	bl	80002c8 <__aeabi_dsub>
 8010e5a:	4602      	mov	r2, r0
 8010e5c:	460b      	mov	r3, r1
 8010e5e:	f7ef fa35 	bl	80002cc <__adddf3>
 8010e62:	4602      	mov	r2, r0
 8010e64:	460b      	mov	r3, r1
 8010e66:	4640      	mov	r0, r8
 8010e68:	4649      	mov	r1, r9
 8010e6a:	f7ef fa2d 	bl	80002c8 <__aeabi_dsub>
 8010e6e:	9b00      	ldr	r3, [sp, #0]
 8010e70:	ea4f 7aa3 	mov.w	sl, r3, asr #30
 8010e74:	f00a 0a02 	and.w	sl, sl, #2
 8010e78:	4604      	mov	r4, r0
 8010e7a:	f1ca 0001 	rsb	r0, sl, #1
 8010e7e:	460d      	mov	r5, r1
 8010e80:	f7ef fb70 	bl	8000564 <__aeabi_i2d>
 8010e84:	4602      	mov	r2, r0
 8010e86:	460b      	mov	r3, r1
 8010e88:	4620      	mov	r0, r4
 8010e8a:	4629      	mov	r1, r5
 8010e8c:	f7ef fbd4 	bl	8000638 <__aeabi_dmul>
 8010e90:	e69f      	b.n	8010bd2 <__kernel_tan+0x52>
 8010e92:	bf00      	nop
 8010e94:	f3af 8000 	nop.w
 8010e98:	54442d18 	.word	0x54442d18
 8010e9c:	3fe921fb 	.word	0x3fe921fb
 8010ea0:	33145c07 	.word	0x33145c07
 8010ea4:	3c81a626 	.word	0x3c81a626
 8010ea8:	74bf7ad4 	.word	0x74bf7ad4
 8010eac:	3efb2a70 	.word	0x3efb2a70
 8010eb0:	32f0a7e9 	.word	0x32f0a7e9
 8010eb4:	3f12b80f 	.word	0x3f12b80f
 8010eb8:	1a8d1068 	.word	0x1a8d1068
 8010ebc:	3f3026f7 	.word	0x3f3026f7
 8010ec0:	fee08315 	.word	0xfee08315
 8010ec4:	3f57dbc8 	.word	0x3f57dbc8
 8010ec8:	e96e8493 	.word	0xe96e8493
 8010ecc:	3f8226e3 	.word	0x3f8226e3
 8010ed0:	1bb341fe 	.word	0x1bb341fe
 8010ed4:	3faba1ba 	.word	0x3faba1ba
 8010ed8:	db605373 	.word	0xdb605373
 8010edc:	bef375cb 	.word	0xbef375cb
 8010ee0:	a03792a6 	.word	0xa03792a6
 8010ee4:	3f147e88 	.word	0x3f147e88
 8010ee8:	f2f26501 	.word	0xf2f26501
 8010eec:	3f4344d8 	.word	0x3f4344d8
 8010ef0:	c9560328 	.word	0xc9560328
 8010ef4:	3f6d6d22 	.word	0x3f6d6d22
 8010ef8:	8406d637 	.word	0x8406d637
 8010efc:	3f9664f4 	.word	0x3f9664f4
 8010f00:	1110fe7a 	.word	0x1110fe7a
 8010f04:	3fc11111 	.word	0x3fc11111
 8010f08:	55555563 	.word	0x55555563
 8010f0c:	3fd55555 	.word	0x3fd55555
 8010f10:	3e2fffff 	.word	0x3e2fffff
 8010f14:	3ff00000 	.word	0x3ff00000
 8010f18:	bff00000 	.word	0xbff00000
 8010f1c:	3fe59427 	.word	0x3fe59427
 8010f20:	2e01      	cmp	r6, #1
 8010f22:	d02f      	beq.n	8010f84 <__kernel_tan+0x404>
 8010f24:	460f      	mov	r7, r1
 8010f26:	4602      	mov	r2, r0
 8010f28:	460b      	mov	r3, r1
 8010f2a:	4689      	mov	r9, r1
 8010f2c:	2000      	movs	r0, #0
 8010f2e:	4917      	ldr	r1, [pc, #92]	; (8010f8c <__kernel_tan+0x40c>)
 8010f30:	f7ef fcac 	bl	800088c <__aeabi_ddiv>
 8010f34:	2600      	movs	r6, #0
 8010f36:	e9cd 0100 	strd	r0, r1, [sp]
 8010f3a:	4652      	mov	r2, sl
 8010f3c:	465b      	mov	r3, fp
 8010f3e:	4630      	mov	r0, r6
 8010f40:	4639      	mov	r1, r7
 8010f42:	f7ef f9c1 	bl	80002c8 <__aeabi_dsub>
 8010f46:	e9dd 4500 	ldrd	r4, r5, [sp]
 8010f4a:	4602      	mov	r2, r0
 8010f4c:	460b      	mov	r3, r1
 8010f4e:	ec51 0b18 	vmov	r0, r1, d8
 8010f52:	f7ef f9b9 	bl	80002c8 <__aeabi_dsub>
 8010f56:	4632      	mov	r2, r6
 8010f58:	462b      	mov	r3, r5
 8010f5a:	f7ef fb6d 	bl	8000638 <__aeabi_dmul>
 8010f5e:	46b0      	mov	r8, r6
 8010f60:	460f      	mov	r7, r1
 8010f62:	4642      	mov	r2, r8
 8010f64:	462b      	mov	r3, r5
 8010f66:	4634      	mov	r4, r6
 8010f68:	4649      	mov	r1, r9
 8010f6a:	4606      	mov	r6, r0
 8010f6c:	4640      	mov	r0, r8
 8010f6e:	f7ef fb63 	bl	8000638 <__aeabi_dmul>
 8010f72:	4b07      	ldr	r3, [pc, #28]	; (8010f90 <__kernel_tan+0x410>)
 8010f74:	2200      	movs	r2, #0
 8010f76:	f7ef f9a9 	bl	80002cc <__adddf3>
 8010f7a:	4602      	mov	r2, r0
 8010f7c:	460b      	mov	r3, r1
 8010f7e:	4630      	mov	r0, r6
 8010f80:	4639      	mov	r1, r7
 8010f82:	e665      	b.n	8010c50 <__kernel_tan+0xd0>
 8010f84:	4682      	mov	sl, r0
 8010f86:	468b      	mov	fp, r1
 8010f88:	e625      	b.n	8010bd6 <__kernel_tan+0x56>
 8010f8a:	bf00      	nop
 8010f8c:	bff00000 	.word	0xbff00000
 8010f90:	3ff00000 	.word	0x3ff00000
 8010f94:	00000000 	.word	0x00000000

08010f98 <floor>:
 8010f98:	ec51 0b10 	vmov	r0, r1, d0
 8010f9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010fa0:	f3c1 570a 	ubfx	r7, r1, #20, #11
 8010fa4:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 8010fa8:	2e13      	cmp	r6, #19
 8010faa:	ee10 5a10 	vmov	r5, s0
 8010fae:	ee10 8a10 	vmov	r8, s0
 8010fb2:	460c      	mov	r4, r1
 8010fb4:	dc32      	bgt.n	801101c <floor+0x84>
 8010fb6:	2e00      	cmp	r6, #0
 8010fb8:	da14      	bge.n	8010fe4 <floor+0x4c>
 8010fba:	a333      	add	r3, pc, #204	; (adr r3, 8011088 <floor+0xf0>)
 8010fbc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010fc0:	f7ef f984 	bl	80002cc <__adddf3>
 8010fc4:	2200      	movs	r2, #0
 8010fc6:	2300      	movs	r3, #0
 8010fc8:	f7ef fdc6 	bl	8000b58 <__aeabi_dcmpgt>
 8010fcc:	b138      	cbz	r0, 8010fde <floor+0x46>
 8010fce:	2c00      	cmp	r4, #0
 8010fd0:	da57      	bge.n	8011082 <floor+0xea>
 8010fd2:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 8010fd6:	431d      	orrs	r5, r3
 8010fd8:	d001      	beq.n	8010fde <floor+0x46>
 8010fda:	4c2d      	ldr	r4, [pc, #180]	; (8011090 <floor+0xf8>)
 8010fdc:	2500      	movs	r5, #0
 8010fde:	4621      	mov	r1, r4
 8010fe0:	4628      	mov	r0, r5
 8010fe2:	e025      	b.n	8011030 <floor+0x98>
 8010fe4:	4f2b      	ldr	r7, [pc, #172]	; (8011094 <floor+0xfc>)
 8010fe6:	4137      	asrs	r7, r6
 8010fe8:	ea01 0307 	and.w	r3, r1, r7
 8010fec:	4303      	orrs	r3, r0
 8010fee:	d01f      	beq.n	8011030 <floor+0x98>
 8010ff0:	a325      	add	r3, pc, #148	; (adr r3, 8011088 <floor+0xf0>)
 8010ff2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010ff6:	f7ef f969 	bl	80002cc <__adddf3>
 8010ffa:	2200      	movs	r2, #0
 8010ffc:	2300      	movs	r3, #0
 8010ffe:	f7ef fdab 	bl	8000b58 <__aeabi_dcmpgt>
 8011002:	2800      	cmp	r0, #0
 8011004:	d0eb      	beq.n	8010fde <floor+0x46>
 8011006:	2c00      	cmp	r4, #0
 8011008:	bfbe      	ittt	lt
 801100a:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 801100e:	fa43 f606 	asrlt.w	r6, r3, r6
 8011012:	19a4      	addlt	r4, r4, r6
 8011014:	ea24 0407 	bic.w	r4, r4, r7
 8011018:	2500      	movs	r5, #0
 801101a:	e7e0      	b.n	8010fde <floor+0x46>
 801101c:	2e33      	cmp	r6, #51	; 0x33
 801101e:	dd0b      	ble.n	8011038 <floor+0xa0>
 8011020:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8011024:	d104      	bne.n	8011030 <floor+0x98>
 8011026:	ee10 2a10 	vmov	r2, s0
 801102a:	460b      	mov	r3, r1
 801102c:	f7ef f94e 	bl	80002cc <__adddf3>
 8011030:	ec41 0b10 	vmov	d0, r0, r1
 8011034:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011038:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 801103c:	f04f 33ff 	mov.w	r3, #4294967295
 8011040:	fa23 f707 	lsr.w	r7, r3, r7
 8011044:	4207      	tst	r7, r0
 8011046:	d0f3      	beq.n	8011030 <floor+0x98>
 8011048:	a30f      	add	r3, pc, #60	; (adr r3, 8011088 <floor+0xf0>)
 801104a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801104e:	f7ef f93d 	bl	80002cc <__adddf3>
 8011052:	2200      	movs	r2, #0
 8011054:	2300      	movs	r3, #0
 8011056:	f7ef fd7f 	bl	8000b58 <__aeabi_dcmpgt>
 801105a:	2800      	cmp	r0, #0
 801105c:	d0bf      	beq.n	8010fde <floor+0x46>
 801105e:	2c00      	cmp	r4, #0
 8011060:	da02      	bge.n	8011068 <floor+0xd0>
 8011062:	2e14      	cmp	r6, #20
 8011064:	d103      	bne.n	801106e <floor+0xd6>
 8011066:	3401      	adds	r4, #1
 8011068:	ea25 0507 	bic.w	r5, r5, r7
 801106c:	e7b7      	b.n	8010fde <floor+0x46>
 801106e:	2301      	movs	r3, #1
 8011070:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 8011074:	fa03 f606 	lsl.w	r6, r3, r6
 8011078:	4435      	add	r5, r6
 801107a:	4545      	cmp	r5, r8
 801107c:	bf38      	it	cc
 801107e:	18e4      	addcc	r4, r4, r3
 8011080:	e7f2      	b.n	8011068 <floor+0xd0>
 8011082:	2500      	movs	r5, #0
 8011084:	462c      	mov	r4, r5
 8011086:	e7aa      	b.n	8010fde <floor+0x46>
 8011088:	8800759c 	.word	0x8800759c
 801108c:	7e37e43c 	.word	0x7e37e43c
 8011090:	bff00000 	.word	0xbff00000
 8011094:	000fffff 	.word	0x000fffff

08011098 <scalbn>:
 8011098:	b570      	push	{r4, r5, r6, lr}
 801109a:	ec55 4b10 	vmov	r4, r5, d0
 801109e:	f3c5 520a 	ubfx	r2, r5, #20, #11
 80110a2:	4606      	mov	r6, r0
 80110a4:	462b      	mov	r3, r5
 80110a6:	b99a      	cbnz	r2, 80110d0 <scalbn+0x38>
 80110a8:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 80110ac:	4323      	orrs	r3, r4
 80110ae:	d036      	beq.n	801111e <scalbn+0x86>
 80110b0:	4b39      	ldr	r3, [pc, #228]	; (8011198 <scalbn+0x100>)
 80110b2:	4629      	mov	r1, r5
 80110b4:	ee10 0a10 	vmov	r0, s0
 80110b8:	2200      	movs	r2, #0
 80110ba:	f7ef fabd 	bl	8000638 <__aeabi_dmul>
 80110be:	4b37      	ldr	r3, [pc, #220]	; (801119c <scalbn+0x104>)
 80110c0:	429e      	cmp	r6, r3
 80110c2:	4604      	mov	r4, r0
 80110c4:	460d      	mov	r5, r1
 80110c6:	da10      	bge.n	80110ea <scalbn+0x52>
 80110c8:	a32b      	add	r3, pc, #172	; (adr r3, 8011178 <scalbn+0xe0>)
 80110ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80110ce:	e03a      	b.n	8011146 <scalbn+0xae>
 80110d0:	f240 71ff 	movw	r1, #2047	; 0x7ff
 80110d4:	428a      	cmp	r2, r1
 80110d6:	d10c      	bne.n	80110f2 <scalbn+0x5a>
 80110d8:	ee10 2a10 	vmov	r2, s0
 80110dc:	4620      	mov	r0, r4
 80110de:	4629      	mov	r1, r5
 80110e0:	f7ef f8f4 	bl	80002cc <__adddf3>
 80110e4:	4604      	mov	r4, r0
 80110e6:	460d      	mov	r5, r1
 80110e8:	e019      	b.n	801111e <scalbn+0x86>
 80110ea:	f3c1 520a 	ubfx	r2, r1, #20, #11
 80110ee:	460b      	mov	r3, r1
 80110f0:	3a36      	subs	r2, #54	; 0x36
 80110f2:	4432      	add	r2, r6
 80110f4:	f240 71fe 	movw	r1, #2046	; 0x7fe
 80110f8:	428a      	cmp	r2, r1
 80110fa:	dd08      	ble.n	801110e <scalbn+0x76>
 80110fc:	2d00      	cmp	r5, #0
 80110fe:	a120      	add	r1, pc, #128	; (adr r1, 8011180 <scalbn+0xe8>)
 8011100:	e9d1 0100 	ldrd	r0, r1, [r1]
 8011104:	da1c      	bge.n	8011140 <scalbn+0xa8>
 8011106:	a120      	add	r1, pc, #128	; (adr r1, 8011188 <scalbn+0xf0>)
 8011108:	e9d1 0100 	ldrd	r0, r1, [r1]
 801110c:	e018      	b.n	8011140 <scalbn+0xa8>
 801110e:	2a00      	cmp	r2, #0
 8011110:	dd08      	ble.n	8011124 <scalbn+0x8c>
 8011112:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8011116:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 801111a:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 801111e:	ec45 4b10 	vmov	d0, r4, r5
 8011122:	bd70      	pop	{r4, r5, r6, pc}
 8011124:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8011128:	da19      	bge.n	801115e <scalbn+0xc6>
 801112a:	f24c 3350 	movw	r3, #50000	; 0xc350
 801112e:	429e      	cmp	r6, r3
 8011130:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 8011134:	dd0a      	ble.n	801114c <scalbn+0xb4>
 8011136:	a112      	add	r1, pc, #72	; (adr r1, 8011180 <scalbn+0xe8>)
 8011138:	e9d1 0100 	ldrd	r0, r1, [r1]
 801113c:	2b00      	cmp	r3, #0
 801113e:	d1e2      	bne.n	8011106 <scalbn+0x6e>
 8011140:	a30f      	add	r3, pc, #60	; (adr r3, 8011180 <scalbn+0xe8>)
 8011142:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011146:	f7ef fa77 	bl	8000638 <__aeabi_dmul>
 801114a:	e7cb      	b.n	80110e4 <scalbn+0x4c>
 801114c:	a10a      	add	r1, pc, #40	; (adr r1, 8011178 <scalbn+0xe0>)
 801114e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8011152:	2b00      	cmp	r3, #0
 8011154:	d0b8      	beq.n	80110c8 <scalbn+0x30>
 8011156:	a10e      	add	r1, pc, #56	; (adr r1, 8011190 <scalbn+0xf8>)
 8011158:	e9d1 0100 	ldrd	r0, r1, [r1]
 801115c:	e7b4      	b.n	80110c8 <scalbn+0x30>
 801115e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8011162:	3236      	adds	r2, #54	; 0x36
 8011164:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8011168:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 801116c:	4620      	mov	r0, r4
 801116e:	4b0c      	ldr	r3, [pc, #48]	; (80111a0 <scalbn+0x108>)
 8011170:	2200      	movs	r2, #0
 8011172:	e7e8      	b.n	8011146 <scalbn+0xae>
 8011174:	f3af 8000 	nop.w
 8011178:	c2f8f359 	.word	0xc2f8f359
 801117c:	01a56e1f 	.word	0x01a56e1f
 8011180:	8800759c 	.word	0x8800759c
 8011184:	7e37e43c 	.word	0x7e37e43c
 8011188:	8800759c 	.word	0x8800759c
 801118c:	fe37e43c 	.word	0xfe37e43c
 8011190:	c2f8f359 	.word	0xc2f8f359
 8011194:	81a56e1f 	.word	0x81a56e1f
 8011198:	43500000 	.word	0x43500000
 801119c:	ffff3cb0 	.word	0xffff3cb0
 80111a0:	3c900000 	.word	0x3c900000

080111a4 <_init>:
 80111a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80111a6:	bf00      	nop
 80111a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80111aa:	bc08      	pop	{r3}
 80111ac:	469e      	mov	lr, r3
 80111ae:	4770      	bx	lr

080111b0 <_fini>:
 80111b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80111b2:	bf00      	nop
 80111b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80111b6:	bc08      	pop	{r3}
 80111b8:	469e      	mov	lr, r3
 80111ba:	4770      	bx	lr
