
RobonAUT-control.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001124c  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000758  08011420  08011420  00021420  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08011b78  08011b78  00030310  2**0
                  CONTENTS
  4 .ARM          00000008  08011b78  08011b78  00021b78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08011b80  08011b80  00030310  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08011b80  08011b80  00021b80  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08011b84  08011b84  00021b84  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000310  20000000  08011b88  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000098c  20000310  08011e98  00030310  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000c9c  08011e98  00030c9c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00030310  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001820a  00000000  00000000  00030340  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003822  00000000  00000000  0004854a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000012b0  00000000  00000000  0004bd70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001190  00000000  00000000  0004d020  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00026433  00000000  00000000  0004e1b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000199a6  00000000  00000000  000745e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000e172f  00000000  00000000  0008df89  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0016f6b8  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000060e8  00000000  00000000  0016f708  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000310 	.word	0x20000310
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08011404 	.word	0x08011404

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000314 	.word	0x20000314
 800020c:	08011404 	.word	0x08011404

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295
 8000c9c:	f000 b974 	b.w	8000f88 <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f806 	bl	8000cb8 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__udivmoddi4>:
 8000cb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cbc:	9d08      	ldr	r5, [sp, #32]
 8000cbe:	4604      	mov	r4, r0
 8000cc0:	468e      	mov	lr, r1
 8000cc2:	2b00      	cmp	r3, #0
 8000cc4:	d14d      	bne.n	8000d62 <__udivmoddi4+0xaa>
 8000cc6:	428a      	cmp	r2, r1
 8000cc8:	4694      	mov	ip, r2
 8000cca:	d969      	bls.n	8000da0 <__udivmoddi4+0xe8>
 8000ccc:	fab2 f282 	clz	r2, r2
 8000cd0:	b152      	cbz	r2, 8000ce8 <__udivmoddi4+0x30>
 8000cd2:	fa01 f302 	lsl.w	r3, r1, r2
 8000cd6:	f1c2 0120 	rsb	r1, r2, #32
 8000cda:	fa20 f101 	lsr.w	r1, r0, r1
 8000cde:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ce2:	ea41 0e03 	orr.w	lr, r1, r3
 8000ce6:	4094      	lsls	r4, r2
 8000ce8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000cec:	0c21      	lsrs	r1, r4, #16
 8000cee:	fbbe f6f8 	udiv	r6, lr, r8
 8000cf2:	fa1f f78c 	uxth.w	r7, ip
 8000cf6:	fb08 e316 	mls	r3, r8, r6, lr
 8000cfa:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000cfe:	fb06 f107 	mul.w	r1, r6, r7
 8000d02:	4299      	cmp	r1, r3
 8000d04:	d90a      	bls.n	8000d1c <__udivmoddi4+0x64>
 8000d06:	eb1c 0303 	adds.w	r3, ip, r3
 8000d0a:	f106 30ff 	add.w	r0, r6, #4294967295
 8000d0e:	f080 811f 	bcs.w	8000f50 <__udivmoddi4+0x298>
 8000d12:	4299      	cmp	r1, r3
 8000d14:	f240 811c 	bls.w	8000f50 <__udivmoddi4+0x298>
 8000d18:	3e02      	subs	r6, #2
 8000d1a:	4463      	add	r3, ip
 8000d1c:	1a5b      	subs	r3, r3, r1
 8000d1e:	b2a4      	uxth	r4, r4
 8000d20:	fbb3 f0f8 	udiv	r0, r3, r8
 8000d24:	fb08 3310 	mls	r3, r8, r0, r3
 8000d28:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000d2c:	fb00 f707 	mul.w	r7, r0, r7
 8000d30:	42a7      	cmp	r7, r4
 8000d32:	d90a      	bls.n	8000d4a <__udivmoddi4+0x92>
 8000d34:	eb1c 0404 	adds.w	r4, ip, r4
 8000d38:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d3c:	f080 810a 	bcs.w	8000f54 <__udivmoddi4+0x29c>
 8000d40:	42a7      	cmp	r7, r4
 8000d42:	f240 8107 	bls.w	8000f54 <__udivmoddi4+0x29c>
 8000d46:	4464      	add	r4, ip
 8000d48:	3802      	subs	r0, #2
 8000d4a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d4e:	1be4      	subs	r4, r4, r7
 8000d50:	2600      	movs	r6, #0
 8000d52:	b11d      	cbz	r5, 8000d5c <__udivmoddi4+0xa4>
 8000d54:	40d4      	lsrs	r4, r2
 8000d56:	2300      	movs	r3, #0
 8000d58:	e9c5 4300 	strd	r4, r3, [r5]
 8000d5c:	4631      	mov	r1, r6
 8000d5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d62:	428b      	cmp	r3, r1
 8000d64:	d909      	bls.n	8000d7a <__udivmoddi4+0xc2>
 8000d66:	2d00      	cmp	r5, #0
 8000d68:	f000 80ef 	beq.w	8000f4a <__udivmoddi4+0x292>
 8000d6c:	2600      	movs	r6, #0
 8000d6e:	e9c5 0100 	strd	r0, r1, [r5]
 8000d72:	4630      	mov	r0, r6
 8000d74:	4631      	mov	r1, r6
 8000d76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d7a:	fab3 f683 	clz	r6, r3
 8000d7e:	2e00      	cmp	r6, #0
 8000d80:	d14a      	bne.n	8000e18 <__udivmoddi4+0x160>
 8000d82:	428b      	cmp	r3, r1
 8000d84:	d302      	bcc.n	8000d8c <__udivmoddi4+0xd4>
 8000d86:	4282      	cmp	r2, r0
 8000d88:	f200 80f9 	bhi.w	8000f7e <__udivmoddi4+0x2c6>
 8000d8c:	1a84      	subs	r4, r0, r2
 8000d8e:	eb61 0303 	sbc.w	r3, r1, r3
 8000d92:	2001      	movs	r0, #1
 8000d94:	469e      	mov	lr, r3
 8000d96:	2d00      	cmp	r5, #0
 8000d98:	d0e0      	beq.n	8000d5c <__udivmoddi4+0xa4>
 8000d9a:	e9c5 4e00 	strd	r4, lr, [r5]
 8000d9e:	e7dd      	b.n	8000d5c <__udivmoddi4+0xa4>
 8000da0:	b902      	cbnz	r2, 8000da4 <__udivmoddi4+0xec>
 8000da2:	deff      	udf	#255	; 0xff
 8000da4:	fab2 f282 	clz	r2, r2
 8000da8:	2a00      	cmp	r2, #0
 8000daa:	f040 8092 	bne.w	8000ed2 <__udivmoddi4+0x21a>
 8000dae:	eba1 010c 	sub.w	r1, r1, ip
 8000db2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000db6:	fa1f fe8c 	uxth.w	lr, ip
 8000dba:	2601      	movs	r6, #1
 8000dbc:	0c20      	lsrs	r0, r4, #16
 8000dbe:	fbb1 f3f7 	udiv	r3, r1, r7
 8000dc2:	fb07 1113 	mls	r1, r7, r3, r1
 8000dc6:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000dca:	fb0e f003 	mul.w	r0, lr, r3
 8000dce:	4288      	cmp	r0, r1
 8000dd0:	d908      	bls.n	8000de4 <__udivmoddi4+0x12c>
 8000dd2:	eb1c 0101 	adds.w	r1, ip, r1
 8000dd6:	f103 38ff 	add.w	r8, r3, #4294967295
 8000dda:	d202      	bcs.n	8000de2 <__udivmoddi4+0x12a>
 8000ddc:	4288      	cmp	r0, r1
 8000dde:	f200 80cb 	bhi.w	8000f78 <__udivmoddi4+0x2c0>
 8000de2:	4643      	mov	r3, r8
 8000de4:	1a09      	subs	r1, r1, r0
 8000de6:	b2a4      	uxth	r4, r4
 8000de8:	fbb1 f0f7 	udiv	r0, r1, r7
 8000dec:	fb07 1110 	mls	r1, r7, r0, r1
 8000df0:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000df4:	fb0e fe00 	mul.w	lr, lr, r0
 8000df8:	45a6      	cmp	lr, r4
 8000dfa:	d908      	bls.n	8000e0e <__udivmoddi4+0x156>
 8000dfc:	eb1c 0404 	adds.w	r4, ip, r4
 8000e00:	f100 31ff 	add.w	r1, r0, #4294967295
 8000e04:	d202      	bcs.n	8000e0c <__udivmoddi4+0x154>
 8000e06:	45a6      	cmp	lr, r4
 8000e08:	f200 80bb 	bhi.w	8000f82 <__udivmoddi4+0x2ca>
 8000e0c:	4608      	mov	r0, r1
 8000e0e:	eba4 040e 	sub.w	r4, r4, lr
 8000e12:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000e16:	e79c      	b.n	8000d52 <__udivmoddi4+0x9a>
 8000e18:	f1c6 0720 	rsb	r7, r6, #32
 8000e1c:	40b3      	lsls	r3, r6
 8000e1e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000e22:	ea4c 0c03 	orr.w	ip, ip, r3
 8000e26:	fa20 f407 	lsr.w	r4, r0, r7
 8000e2a:	fa01 f306 	lsl.w	r3, r1, r6
 8000e2e:	431c      	orrs	r4, r3
 8000e30:	40f9      	lsrs	r1, r7
 8000e32:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000e36:	fa00 f306 	lsl.w	r3, r0, r6
 8000e3a:	fbb1 f8f9 	udiv	r8, r1, r9
 8000e3e:	0c20      	lsrs	r0, r4, #16
 8000e40:	fa1f fe8c 	uxth.w	lr, ip
 8000e44:	fb09 1118 	mls	r1, r9, r8, r1
 8000e48:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e4c:	fb08 f00e 	mul.w	r0, r8, lr
 8000e50:	4288      	cmp	r0, r1
 8000e52:	fa02 f206 	lsl.w	r2, r2, r6
 8000e56:	d90b      	bls.n	8000e70 <__udivmoddi4+0x1b8>
 8000e58:	eb1c 0101 	adds.w	r1, ip, r1
 8000e5c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000e60:	f080 8088 	bcs.w	8000f74 <__udivmoddi4+0x2bc>
 8000e64:	4288      	cmp	r0, r1
 8000e66:	f240 8085 	bls.w	8000f74 <__udivmoddi4+0x2bc>
 8000e6a:	f1a8 0802 	sub.w	r8, r8, #2
 8000e6e:	4461      	add	r1, ip
 8000e70:	1a09      	subs	r1, r1, r0
 8000e72:	b2a4      	uxth	r4, r4
 8000e74:	fbb1 f0f9 	udiv	r0, r1, r9
 8000e78:	fb09 1110 	mls	r1, r9, r0, r1
 8000e7c:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000e80:	fb00 fe0e 	mul.w	lr, r0, lr
 8000e84:	458e      	cmp	lr, r1
 8000e86:	d908      	bls.n	8000e9a <__udivmoddi4+0x1e2>
 8000e88:	eb1c 0101 	adds.w	r1, ip, r1
 8000e8c:	f100 34ff 	add.w	r4, r0, #4294967295
 8000e90:	d26c      	bcs.n	8000f6c <__udivmoddi4+0x2b4>
 8000e92:	458e      	cmp	lr, r1
 8000e94:	d96a      	bls.n	8000f6c <__udivmoddi4+0x2b4>
 8000e96:	3802      	subs	r0, #2
 8000e98:	4461      	add	r1, ip
 8000e9a:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000e9e:	fba0 9402 	umull	r9, r4, r0, r2
 8000ea2:	eba1 010e 	sub.w	r1, r1, lr
 8000ea6:	42a1      	cmp	r1, r4
 8000ea8:	46c8      	mov	r8, r9
 8000eaa:	46a6      	mov	lr, r4
 8000eac:	d356      	bcc.n	8000f5c <__udivmoddi4+0x2a4>
 8000eae:	d053      	beq.n	8000f58 <__udivmoddi4+0x2a0>
 8000eb0:	b15d      	cbz	r5, 8000eca <__udivmoddi4+0x212>
 8000eb2:	ebb3 0208 	subs.w	r2, r3, r8
 8000eb6:	eb61 010e 	sbc.w	r1, r1, lr
 8000eba:	fa01 f707 	lsl.w	r7, r1, r7
 8000ebe:	fa22 f306 	lsr.w	r3, r2, r6
 8000ec2:	40f1      	lsrs	r1, r6
 8000ec4:	431f      	orrs	r7, r3
 8000ec6:	e9c5 7100 	strd	r7, r1, [r5]
 8000eca:	2600      	movs	r6, #0
 8000ecc:	4631      	mov	r1, r6
 8000ece:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ed2:	f1c2 0320 	rsb	r3, r2, #32
 8000ed6:	40d8      	lsrs	r0, r3
 8000ed8:	fa0c fc02 	lsl.w	ip, ip, r2
 8000edc:	fa21 f303 	lsr.w	r3, r1, r3
 8000ee0:	4091      	lsls	r1, r2
 8000ee2:	4301      	orrs	r1, r0
 8000ee4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ee8:	fa1f fe8c 	uxth.w	lr, ip
 8000eec:	fbb3 f0f7 	udiv	r0, r3, r7
 8000ef0:	fb07 3610 	mls	r6, r7, r0, r3
 8000ef4:	0c0b      	lsrs	r3, r1, #16
 8000ef6:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000efa:	fb00 f60e 	mul.w	r6, r0, lr
 8000efe:	429e      	cmp	r6, r3
 8000f00:	fa04 f402 	lsl.w	r4, r4, r2
 8000f04:	d908      	bls.n	8000f18 <__udivmoddi4+0x260>
 8000f06:	eb1c 0303 	adds.w	r3, ip, r3
 8000f0a:	f100 38ff 	add.w	r8, r0, #4294967295
 8000f0e:	d22f      	bcs.n	8000f70 <__udivmoddi4+0x2b8>
 8000f10:	429e      	cmp	r6, r3
 8000f12:	d92d      	bls.n	8000f70 <__udivmoddi4+0x2b8>
 8000f14:	3802      	subs	r0, #2
 8000f16:	4463      	add	r3, ip
 8000f18:	1b9b      	subs	r3, r3, r6
 8000f1a:	b289      	uxth	r1, r1
 8000f1c:	fbb3 f6f7 	udiv	r6, r3, r7
 8000f20:	fb07 3316 	mls	r3, r7, r6, r3
 8000f24:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f28:	fb06 f30e 	mul.w	r3, r6, lr
 8000f2c:	428b      	cmp	r3, r1
 8000f2e:	d908      	bls.n	8000f42 <__udivmoddi4+0x28a>
 8000f30:	eb1c 0101 	adds.w	r1, ip, r1
 8000f34:	f106 38ff 	add.w	r8, r6, #4294967295
 8000f38:	d216      	bcs.n	8000f68 <__udivmoddi4+0x2b0>
 8000f3a:	428b      	cmp	r3, r1
 8000f3c:	d914      	bls.n	8000f68 <__udivmoddi4+0x2b0>
 8000f3e:	3e02      	subs	r6, #2
 8000f40:	4461      	add	r1, ip
 8000f42:	1ac9      	subs	r1, r1, r3
 8000f44:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000f48:	e738      	b.n	8000dbc <__udivmoddi4+0x104>
 8000f4a:	462e      	mov	r6, r5
 8000f4c:	4628      	mov	r0, r5
 8000f4e:	e705      	b.n	8000d5c <__udivmoddi4+0xa4>
 8000f50:	4606      	mov	r6, r0
 8000f52:	e6e3      	b.n	8000d1c <__udivmoddi4+0x64>
 8000f54:	4618      	mov	r0, r3
 8000f56:	e6f8      	b.n	8000d4a <__udivmoddi4+0x92>
 8000f58:	454b      	cmp	r3, r9
 8000f5a:	d2a9      	bcs.n	8000eb0 <__udivmoddi4+0x1f8>
 8000f5c:	ebb9 0802 	subs.w	r8, r9, r2
 8000f60:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000f64:	3801      	subs	r0, #1
 8000f66:	e7a3      	b.n	8000eb0 <__udivmoddi4+0x1f8>
 8000f68:	4646      	mov	r6, r8
 8000f6a:	e7ea      	b.n	8000f42 <__udivmoddi4+0x28a>
 8000f6c:	4620      	mov	r0, r4
 8000f6e:	e794      	b.n	8000e9a <__udivmoddi4+0x1e2>
 8000f70:	4640      	mov	r0, r8
 8000f72:	e7d1      	b.n	8000f18 <__udivmoddi4+0x260>
 8000f74:	46d0      	mov	r8, sl
 8000f76:	e77b      	b.n	8000e70 <__udivmoddi4+0x1b8>
 8000f78:	3b02      	subs	r3, #2
 8000f7a:	4461      	add	r1, ip
 8000f7c:	e732      	b.n	8000de4 <__udivmoddi4+0x12c>
 8000f7e:	4630      	mov	r0, r6
 8000f80:	e709      	b.n	8000d96 <__udivmoddi4+0xde>
 8000f82:	4464      	add	r4, ip
 8000f84:	3802      	subs	r0, #2
 8000f86:	e742      	b.n	8000e0e <__udivmoddi4+0x156>

08000f88 <__aeabi_idiv0>:
 8000f88:	4770      	bx	lr
 8000f8a:	bf00      	nop

08000f8c <__NVIC_SystemReset>:
/**
  \brief   System Reset
  \details Initiates a system reset request to reset the MCU.
 */
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
 8000f8c:	b480      	push	{r7}
 8000f8e:	af00      	add	r7, sp, #0
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000f90:	f3bf 8f4f 	dsb	sy
}
 8000f94:	bf00      	nop
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 8000f96:	4b06      	ldr	r3, [pc, #24]	; (8000fb0 <__NVIC_SystemReset+0x24>)
 8000f98:	68db      	ldr	r3, [r3, #12]
 8000f9a:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 8000f9e:	4904      	ldr	r1, [pc, #16]	; (8000fb0 <__NVIC_SystemReset+0x24>)
 8000fa0:	4b04      	ldr	r3, [pc, #16]	; (8000fb4 <__NVIC_SystemReset+0x28>)
 8000fa2:	4313      	orrs	r3, r2
 8000fa4:	60cb      	str	r3, [r1, #12]
  __ASM volatile ("dsb 0xF":::"memory");
 8000fa6:	f3bf 8f4f 	dsb	sy
}
 8000faa:	bf00      	nop
                            SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchanged */
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
 8000fac:	bf00      	nop
 8000fae:	e7fd      	b.n	8000fac <__NVIC_SystemReset+0x20>
 8000fb0:	e000ed00 	.word	0xe000ed00
 8000fb4:	05fa0004 	.word	0x05fa0004

08000fb8 <F4_Basic_Init>:
uint8_t mode;
float v_ref; //mm/s
uint8_t leaveLineEnabled;

void F4_Basic_Init(UART_HandleTypeDef *huart_debugg,TIM_HandleTypeDef *htim_scheduler,TIM_HandleTypeDef *htim_motor,TIM_HandleTypeDef *htim_servo1,TIM_HandleTypeDef *htim_servo2, TIM_HandleTypeDef *htim_encoder,TIM_HandleTypeDef *htim_delay,TIM_HandleTypeDef *htim_rand)
{
 8000fb8:	b580      	push	{r7, lr}
 8000fba:	b08e      	sub	sp, #56	; 0x38
 8000fbc:	af00      	add	r7, sp, #0
 8000fbe:	60f8      	str	r0, [r7, #12]
 8000fc0:	60b9      	str	r1, [r7, #8]
 8000fc2:	607a      	str	r2, [r7, #4]
 8000fc4:	603b      	str	r3, [r7, #0]
	char buf[40];
	LED_R(0);
 8000fc6:	2201      	movs	r2, #1
 8000fc8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000fcc:	484f      	ldr	r0, [pc, #316]	; (800110c <F4_Basic_Init+0x154>)
 8000fce:	f008 fa97 	bl	8009500 <HAL_GPIO_WritePin>
	LED_B(0);
 8000fd2:	2201      	movs	r2, #1
 8000fd4:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000fd8:	484c      	ldr	r0, [pc, #304]	; (800110c <F4_Basic_Init+0x154>)
 8000fda:	f008 fa91 	bl	8009500 <HAL_GPIO_WritePin>
	LED_G(0);
 8000fde:	2201      	movs	r2, #1
 8000fe0:	2102      	movs	r1, #2
 8000fe2:	484a      	ldr	r0, [pc, #296]	; (800110c <F4_Basic_Init+0x154>)
 8000fe4:	f008 fa8c 	bl	8009500 <HAL_GPIO_WritePin>
	LED_Y(0);
 8000fe8:	2201      	movs	r2, #1
 8000fea:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000fee:	4847      	ldr	r0, [pc, #284]	; (800110c <F4_Basic_Init+0x154>)
 8000ff0:	f008 fa86 	bl	8009500 <HAL_GPIO_WritePin>
	LED_NUCLEO(0);
 8000ff4:	2200      	movs	r2, #0
 8000ff6:	2120      	movs	r1, #32
 8000ff8:	4845      	ldr	r0, [pc, #276]	; (8001110 <F4_Basic_Init+0x158>)
 8000ffa:	f008 fa81 	bl	8009500 <HAL_GPIO_WritePin>
	sprintf(buf,"\r\nRobonAUT 2023 Bit Bangers F4\r\n");// a buff tömb-be beleírom (stringprint) a string-emet. 1 karakter = 1 byte = 1 tömbelem
 8000ffe:	f107 0310 	add.w	r3, r7, #16
 8001002:	4944      	ldr	r1, [pc, #272]	; (8001114 <F4_Basic_Init+0x15c>)
 8001004:	4618      	mov	r0, r3
 8001006:	f00c fd37 	bl	800da78 <siprintf>
	HAL_UART_Transmit(huart_debugg,(uint8_t*) buf, strlen(buf), 100);// A UART2-őn (ide van kötve a programozó) kiküldöm a buf karaktertömböt (string) és maximum 10-ms -ot várok hogy ezt elvégezze a periféria
 800100a:	f107 0310 	add.w	r3, r7, #16
 800100e:	4618      	mov	r0, r3
 8001010:	f7ff f8fe 	bl	8000210 <strlen>
 8001014:	4603      	mov	r3, r0
 8001016:	b29a      	uxth	r2, r3
 8001018:	f107 0110 	add.w	r1, r7, #16
 800101c:	2364      	movs	r3, #100	; 0x64
 800101e:	68f8      	ldr	r0, [r7, #12]
 8001020:	f00a ffc1 	bl	800bfa6 <HAL_UART_Transmit>

	//MotorEnable engedélyezése
	motorEnRemote=0;//csak akkor ha megnyomtuk a ravaszt
 8001024:	4b3c      	ldr	r3, [pc, #240]	; (8001118 <F4_Basic_Init+0x160>)
 8001026:	2200      	movs	r2, #0
 8001028:	701a      	strb	r2, [r3, #0]
	motorEnLineOk=1;
 800102a:	4b3c      	ldr	r3, [pc, #240]	; (800111c <F4_Basic_Init+0x164>)
 800102c:	2201      	movs	r2, #1
 800102e:	701a      	strb	r2, [r3, #0]
	leaveLineEnabled=0;
 8001030:	4b3b      	ldr	r3, [pc, #236]	; (8001120 <F4_Basic_Init+0x168>)
 8001032:	2200      	movs	r2, #0
 8001034:	701a      	strb	r2, [r3, #0]

	swState[0] = SW1;
 8001036:	f44f 7180 	mov.w	r1, #256	; 0x100
 800103a:	4835      	ldr	r0, [pc, #212]	; (8001110 <F4_Basic_Init+0x158>)
 800103c:	f008 fa48 	bl	80094d0 <HAL_GPIO_ReadPin>
 8001040:	4603      	mov	r3, r0
 8001042:	461a      	mov	r2, r3
 8001044:	4b37      	ldr	r3, [pc, #220]	; (8001124 <F4_Basic_Init+0x16c>)
 8001046:	701a      	strb	r2, [r3, #0]
	swState[1] = SW2;
 8001048:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800104c:	482f      	ldr	r0, [pc, #188]	; (800110c <F4_Basic_Init+0x154>)
 800104e:	f008 fa3f 	bl	80094d0 <HAL_GPIO_ReadPin>
 8001052:	4603      	mov	r3, r0
 8001054:	461a      	mov	r2, r3
 8001056:	4b33      	ldr	r3, [pc, #204]	; (8001124 <F4_Basic_Init+0x16c>)
 8001058:	705a      	strb	r2, [r3, #1]
	if(SW2)LED_R(1);
 800105a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800105e:	482b      	ldr	r0, [pc, #172]	; (800110c <F4_Basic_Init+0x154>)
 8001060:	f008 fa36 	bl	80094d0 <HAL_GPIO_ReadPin>
 8001064:	4603      	mov	r3, r0
 8001066:	2b00      	cmp	r3, #0
 8001068:	d006      	beq.n	8001078 <F4_Basic_Init+0xc0>
 800106a:	2200      	movs	r2, #0
 800106c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001070:	4826      	ldr	r0, [pc, #152]	; (800110c <F4_Basic_Init+0x154>)
 8001072:	f008 fa45 	bl	8009500 <HAL_GPIO_WritePin>
 8001076:	e005      	b.n	8001084 <F4_Basic_Init+0xcc>
	else LED_R(0);
 8001078:	2201      	movs	r2, #1
 800107a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800107e:	4823      	ldr	r0, [pc, #140]	; (800110c <F4_Basic_Init+0x154>)
 8001080:	f008 fa3e 	bl	8009500 <HAL_GPIO_WritePin>

	bFlag[0] = bFlag[1] = bFlag[2] = 0;
 8001084:	2200      	movs	r2, #0
 8001086:	4b28      	ldr	r3, [pc, #160]	; (8001128 <F4_Basic_Init+0x170>)
 8001088:	4611      	mov	r1, r2
 800108a:	7099      	strb	r1, [r3, #2]
 800108c:	4b26      	ldr	r3, [pc, #152]	; (8001128 <F4_Basic_Init+0x170>)
 800108e:	4611      	mov	r1, r2
 8001090:	7059      	strb	r1, [r3, #1]
 8001092:	4b25      	ldr	r3, [pc, #148]	; (8001128 <F4_Basic_Init+0x170>)
 8001094:	701a      	strb	r2, [r3, #0]
	fromPC[0]=150;
 8001096:	4b25      	ldr	r3, [pc, #148]	; (800112c <F4_Basic_Init+0x174>)
 8001098:	2296      	movs	r2, #150	; 0x96
 800109a:	701a      	strb	r2, [r3, #0]
	fromPC[1]=150;
 800109c:	4b23      	ldr	r3, [pc, #140]	; (800112c <F4_Basic_Init+0x174>)
 800109e:	2296      	movs	r2, #150	; 0x96
 80010a0:	705a      	strb	r2, [r3, #1]
	mode=SKILL;
 80010a2:	4b23      	ldr	r3, [pc, #140]	; (8001130 <F4_Basic_Init+0x178>)
 80010a4:	2252      	movs	r2, #82	; 0x52
 80010a6:	701a      	strb	r2, [r3, #0]
	v_ref = 1000;
 80010a8:	4b22      	ldr	r3, [pc, #136]	; (8001134 <F4_Basic_Init+0x17c>)
 80010aa:	4a23      	ldr	r2, [pc, #140]	; (8001138 <F4_Basic_Init+0x180>)
 80010ac:	601a      	str	r2, [r3, #0]
	v=0;
 80010ae:	4b23      	ldr	r3, [pc, #140]	; (800113c <F4_Basic_Init+0x184>)
 80010b0:	f04f 0200 	mov.w	r2, #0
 80010b4:	601a      	str	r2, [r3, #0]

	//timerek elindítása
	TIM1->CCR4=SERVO_REAR_CCR_MIDDLE;
 80010b6:	4b22      	ldr	r3, [pc, #136]	; (8001140 <F4_Basic_Init+0x188>)
 80010b8:	f44f 722a 	mov.w	r2, #680	; 0x2a8
 80010bc:	641a      	str	r2, [r3, #64]	; 0x40
	TIM2->CCR1=SERVO_FRONT_CCR_MIDDLE;
 80010be:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80010c2:	f44f 722d 	mov.w	r2, #692	; 0x2b4
 80010c6:	635a      	str	r2, [r3, #52]	; 0x34
	//TIM2->CCR1=684; //servot középre
	//TIM3->CCR1=499; //0 kitöltési tényező a motorra
	//TIM3->CCR2=499;
	HAL_TIM_Base_Start(htim_scheduler);//heart beat timer tick start
 80010c8:	68b8      	ldr	r0, [r7, #8]
 80010ca:	f009 f8ed 	bl	800a2a8 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(htim_delay);//heart beat timer tick start
 80010ce:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 80010d0:	f009 f8ea 	bl	800a2a8 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(htim_rand);//heart beat timer tick start
 80010d4:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 80010d6:	f009 f8e7 	bl	800a2a8 <HAL_TIM_Base_Start>
	HAL_TIM_PWM_Start(htim_motor, TIM_CHANNEL_1);//motor PWM-ek elindítása
 80010da:	2100      	movs	r1, #0
 80010dc:	6878      	ldr	r0, [r7, #4]
 80010de:	f009 f9a5 	bl	800a42c <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim_motor, TIM_CHANNEL_2);
 80010e2:	2104      	movs	r1, #4
 80010e4:	6878      	ldr	r0, [r7, #4]
 80010e6:	f009 f9a1 	bl	800a42c <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim_servo1, TIM_CHANNEL_1); //servo RC pwm elindítása
 80010ea:	2100      	movs	r1, #0
 80010ec:	6838      	ldr	r0, [r7, #0]
 80010ee:	f009 f99d 	bl	800a42c <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim_servo2, TIM_CHANNEL_4); //servo RC pwm elindítása
 80010f2:	210c      	movs	r1, #12
 80010f4:	6c38      	ldr	r0, [r7, #64]	; 0x40
 80010f6:	f009 f999 	bl	800a42c <HAL_TIM_PWM_Start>
	HAL_TIM_Encoder_Start(htim_encoder,TIM_CHANNEL_ALL);
 80010fa:	213c      	movs	r1, #60	; 0x3c
 80010fc:	6c78      	ldr	r0, [r7, #68]	; 0x44
 80010fe:	f009 fd07 	bl	800ab10 <HAL_TIM_Encoder_Start>

	//Ha a PC-ről küldünk vmit azt fogadjuk
	//HAL_UART_Receive_IT(huart_debugg, fromPC, 2);
}
 8001102:	bf00      	nop
 8001104:	3738      	adds	r7, #56	; 0x38
 8001106:	46bd      	mov	sp, r7
 8001108:	bd80      	pop	{r7, pc}
 800110a:	bf00      	nop
 800110c:	40020400 	.word	0x40020400
 8001110:	40020000 	.word	0x40020000
 8001114:	08011420 	.word	0x08011420
 8001118:	20000c50 	.word	0x20000c50
 800111c:	20000c51 	.word	0x20000c51
 8001120:	2000033c 	.word	0x2000033c
 8001124:	2000032c 	.word	0x2000032c
 8001128:	20000330 	.word	0x20000330
 800112c:	20000334 	.word	0x20000334
 8001130:	20000336 	.word	0x20000336
 8001134:	20000338 	.word	0x20000338
 8001138:	447a0000 	.word	0x447a0000
 800113c:	20000754 	.word	0x20000754
 8001140:	40010000 	.word	0x40010000

08001144 <HDI_Read_Task>:


void HDI_Read_Task(UART_HandleTypeDef *huart_debugg,TIM_HandleTypeDef *htim_servo,uint32_t tick, uint32_t period)
{
 8001144:	b580      	push	{r7, lr}
 8001146:	b084      	sub	sp, #16
 8001148:	af00      	add	r7, sp, #0
 800114a:	60f8      	str	r0, [r7, #12]
 800114c:	60b9      	str	r1, [r7, #8]
 800114e:	607a      	str	r2, [r7, #4]
 8001150:	603b      	str	r3, [r7, #0]
	static uint32_t hdi_read_task_tick=0;

	if(hdi_read_task_tick>tick) return;
 8001152:	4b29      	ldr	r3, [pc, #164]	; (80011f8 <HDI_Read_Task+0xb4>)
 8001154:	681b      	ldr	r3, [r3, #0]
 8001156:	687a      	ldr	r2, [r7, #4]
 8001158:	429a      	cmp	r2, r3
 800115a:	d349      	bcc.n	80011f0 <HDI_Read_Task+0xac>
	hdi_read_task_tick = tick + period;
 800115c:	687a      	ldr	r2, [r7, #4]
 800115e:	683b      	ldr	r3, [r7, #0]
 8001160:	4413      	add	r3, r2
 8001162:	4a25      	ldr	r2, [pc, #148]	; (80011f8 <HDI_Read_Task+0xb4>)
 8001164:	6013      	str	r3, [r2, #0]

	swState[0]=SW1;
 8001166:	f44f 7180 	mov.w	r1, #256	; 0x100
 800116a:	4824      	ldr	r0, [pc, #144]	; (80011fc <HDI_Read_Task+0xb8>)
 800116c:	f008 f9b0 	bl	80094d0 <HAL_GPIO_ReadPin>
 8001170:	4603      	mov	r3, r0
 8001172:	461a      	mov	r2, r3
 8001174:	4b22      	ldr	r3, [pc, #136]	; (8001200 <HDI_Read_Task+0xbc>)
 8001176:	701a      	strb	r2, [r3, #0]
	swState[1]=SW2;
 8001178:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800117c:	4821      	ldr	r0, [pc, #132]	; (8001204 <HDI_Read_Task+0xc0>)
 800117e:	f008 f9a7 	bl	80094d0 <HAL_GPIO_ReadPin>
 8001182:	4603      	mov	r3, r0
 8001184:	461a      	mov	r2, r3
 8001186:	4b1e      	ldr	r3, [pc, #120]	; (8001200 <HDI_Read_Task+0xbc>)
 8001188:	705a      	strb	r2, [r3, #1]

	if(swState[0] && mode==FAST) LED_G(1);
 800118a:	4b1d      	ldr	r3, [pc, #116]	; (8001200 <HDI_Read_Task+0xbc>)
 800118c:	781b      	ldrb	r3, [r3, #0]
 800118e:	2b00      	cmp	r3, #0
 8001190:	d008      	beq.n	80011a4 <HDI_Read_Task+0x60>
 8001192:	4b1d      	ldr	r3, [pc, #116]	; (8001208 <HDI_Read_Task+0xc4>)
 8001194:	781b      	ldrb	r3, [r3, #0]
 8001196:	2b3f      	cmp	r3, #63	; 0x3f
 8001198:	d104      	bne.n	80011a4 <HDI_Read_Task+0x60>
 800119a:	2200      	movs	r2, #0
 800119c:	2102      	movs	r1, #2
 800119e:	4819      	ldr	r0, [pc, #100]	; (8001204 <HDI_Read_Task+0xc0>)
 80011a0:	f008 f9ae 	bl	8009500 <HAL_GPIO_WritePin>
	if(!swState[0] && mode==FAST) LED_G(0);
 80011a4:	4b16      	ldr	r3, [pc, #88]	; (8001200 <HDI_Read_Task+0xbc>)
 80011a6:	781b      	ldrb	r3, [r3, #0]
 80011a8:	2b00      	cmp	r3, #0
 80011aa:	d108      	bne.n	80011be <HDI_Read_Task+0x7a>
 80011ac:	4b16      	ldr	r3, [pc, #88]	; (8001208 <HDI_Read_Task+0xc4>)
 80011ae:	781b      	ldrb	r3, [r3, #0]
 80011b0:	2b3f      	cmp	r3, #63	; 0x3f
 80011b2:	d104      	bne.n	80011be <HDI_Read_Task+0x7a>
 80011b4:	2201      	movs	r2, #1
 80011b6:	2102      	movs	r1, #2
 80011b8:	4812      	ldr	r0, [pc, #72]	; (8001204 <HDI_Read_Task+0xc0>)
 80011ba:	f008 f9a1 	bl	8009500 <HAL_GPIO_WritePin>
	if(swState[1]) LED_R(1);
 80011be:	4b10      	ldr	r3, [pc, #64]	; (8001200 <HDI_Read_Task+0xbc>)
 80011c0:	785b      	ldrb	r3, [r3, #1]
 80011c2:	2b00      	cmp	r3, #0
 80011c4:	d005      	beq.n	80011d2 <HDI_Read_Task+0x8e>
 80011c6:	2200      	movs	r2, #0
 80011c8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011cc:	480d      	ldr	r0, [pc, #52]	; (8001204 <HDI_Read_Task+0xc0>)
 80011ce:	f008 f997 	bl	8009500 <HAL_GPIO_WritePin>
	if(!swState[1]) LED_R(0);
 80011d2:	4b0b      	ldr	r3, [pc, #44]	; (8001200 <HDI_Read_Task+0xbc>)
 80011d4:	785b      	ldrb	r3, [r3, #1]
 80011d6:	2b00      	cmp	r3, #0
 80011d8:	d105      	bne.n	80011e6 <HDI_Read_Task+0xa2>
 80011da:	2201      	movs	r2, #1
 80011dc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011e0:	4808      	ldr	r0, [pc, #32]	; (8001204 <HDI_Read_Task+0xc0>)
 80011e2:	f008 f98d 	bl	8009500 <HAL_GPIO_WritePin>

	if(bFlag[0]);
 80011e6:	4b09      	ldr	r3, [pc, #36]	; (800120c <HDI_Read_Task+0xc8>)
 80011e8:	781b      	ldrb	r3, [r3, #0]
	if(bFlag[1]);
 80011ea:	4b08      	ldr	r3, [pc, #32]	; (800120c <HDI_Read_Task+0xc8>)
 80011ec:	785b      	ldrb	r3, [r3, #1]
 80011ee:	e000      	b.n	80011f2 <HDI_Read_Task+0xae>
	if(hdi_read_task_tick>tick) return;
 80011f0:	bf00      	nop

}
 80011f2:	3710      	adds	r7, #16
 80011f4:	46bd      	mov	sp, r7
 80011f6:	bd80      	pop	{r7, pc}
 80011f8:	20000340 	.word	0x20000340
 80011fc:	40020000 	.word	0x40020000
 8001200:	2000032c 	.word	0x2000032c
 8001204:	40020400 	.word	0x40020400
 8001208:	20000336 	.word	0x20000336
 800120c:	20000330 	.word	0x20000330

08001210 <Uart_Receive_From_PC_ISR>:

void Uart_Receive_From_PC_ISR(UART_HandleTypeDef *huart)
{
 8001210:	b580      	push	{r7, lr}
 8001212:	b082      	sub	sp, #8
 8001214:	af00      	add	r7, sp, #0
 8001216:	6078      	str	r0, [r7, #4]
	LED_Y_TOGGLE;
 8001218:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800121c:	480b      	ldr	r0, [pc, #44]	; (800124c <Uart_Receive_From_PC_ISR+0x3c>)
 800121e:	f008 f988 	bl	8009532 <HAL_GPIO_TogglePin>
	HAL_UART_Receive_IT(huart, (uint8_t*)fromPC, 2);
 8001222:	2202      	movs	r2, #2
 8001224:	490a      	ldr	r1, [pc, #40]	; (8001250 <Uart_Receive_From_PC_ISR+0x40>)
 8001226:	6878      	ldr	r0, [r7, #4]
 8001228:	f00a fff1 	bl	800c20e <HAL_UART_Receive_IT>
	TIM2->CCR1 = 4*fromPC[0];
 800122c:	4b08      	ldr	r3, [pc, #32]	; (8001250 <Uart_Receive_From_PC_ISR+0x40>)
 800122e:	781b      	ldrb	r3, [r3, #0]
 8001230:	009a      	lsls	r2, r3, #2
 8001232:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001236:	635a      	str	r2, [r3, #52]	; 0x34
	TIM1->CCR4 = 4*fromPC[1];
 8001238:	4b05      	ldr	r3, [pc, #20]	; (8001250 <Uart_Receive_From_PC_ISR+0x40>)
 800123a:	785b      	ldrb	r3, [r3, #1]
 800123c:	009a      	lsls	r2, r3, #2
 800123e:	4b05      	ldr	r3, [pc, #20]	; (8001254 <Uart_Receive_From_PC_ISR+0x44>)
 8001240:	641a      	str	r2, [r3, #64]	; 0x40
}
 8001242:	bf00      	nop
 8001244:	3708      	adds	r7, #8
 8001246:	46bd      	mov	sp, r7
 8001248:	bd80      	pop	{r7, pc}
 800124a:	bf00      	nop
 800124c:	40020400 	.word	0x40020400
 8001250:	20000334 	.word	0x20000334
 8001254:	40010000 	.word	0x40010000

08001258 <B1_ISR>:

void B1_ISR(UART_HandleTypeDef *huart_debugg)
{
 8001258:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 800125c:	b084      	sub	sp, #16
 800125e:	af00      	add	r7, sp, #0
 8001260:	6078      	str	r0, [r7, #4]
		HAL_FLASH_Unlock();
 8001262:	f007 fde7 	bl	8008e34 <HAL_FLASH_Unlock>
		Delay(50);
 8001266:	2032      	movs	r0, #50	; 0x32
 8001268:	f005 fc3a 	bl	8006ae0 <Delay>
		FLASH_Erase_Sector(6, FLASH_VOLTAGE_RANGE_3);
 800126c:	2102      	movs	r1, #2
 800126e:	2006      	movs	r0, #6
 8001270:	f007 ff52 	bl	8009118 <FLASH_Erase_Sector>
		Delay(50);
 8001274:	2032      	movs	r0, #50	; 0x32
 8001276:	f005 fc33 	bl	8006ae0 <Delay>
		HAL_FLASH_Lock();
 800127a:	f007 fdfd 	bl	8008e78 <HAL_FLASH_Lock>

		int i;
		for(i=0;i<8;i++)
 800127e:	2300      	movs	r3, #0
 8001280:	60fb      	str	r3, [r7, #12]
 8001282:	e00a      	b.n	800129a <B1_ISR+0x42>
		{
			LED_R_TOGGLE;
 8001284:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001288:	4828      	ldr	r0, [pc, #160]	; (800132c <B1_ISR+0xd4>)
 800128a:	f008 f952 	bl	8009532 <HAL_GPIO_TogglePin>
			Delay(150);
 800128e:	2096      	movs	r0, #150	; 0x96
 8001290:	f005 fc26 	bl	8006ae0 <Delay>
		for(i=0;i<8;i++)
 8001294:	68fb      	ldr	r3, [r7, #12]
 8001296:	3301      	adds	r3, #1
 8001298:	60fb      	str	r3, [r7, #12]
 800129a:	68fb      	ldr	r3, [r7, #12]
 800129c:	2b07      	cmp	r3, #7
 800129e:	ddf1      	ble.n	8001284 <B1_ISR+0x2c>
		}
		LED_R(0);
 80012a0:	2201      	movs	r2, #1
 80012a2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80012a6:	4821      	ldr	r0, [pc, #132]	; (800132c <B1_ISR+0xd4>)
 80012a8:	f008 f92a 	bl	8009500 <HAL_GPIO_WritePin>

		HAL_FLASH_Unlock();
 80012ac:	f007 fdc2 	bl	8008e34 <HAL_FLASH_Unlock>
		Delay(50);
 80012b0:	2032      	movs	r0, #50	; 0x32
 80012b2:	f005 fc15 	bl	8006ae0 <Delay>
		for(i=0;i<22;i++)
 80012b6:	2300      	movs	r3, #0
 80012b8:	60fb      	str	r3, [r7, #12]
 80012ba:	e01a      	b.n	80012f2 <B1_ISR+0x9a>
		{
			HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+i, Nodes[i].worth);
 80012bc:	68fb      	ldr	r3, [r7, #12]
 80012be:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 80012c2:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
 80012c6:	4618      	mov	r0, r3
 80012c8:	4919      	ldr	r1, [pc, #100]	; (8001330 <B1_ISR+0xd8>)
 80012ca:	68fa      	ldr	r2, [r7, #12]
 80012cc:	4613      	mov	r3, r2
 80012ce:	009b      	lsls	r3, r3, #2
 80012d0:	4413      	add	r3, r2
 80012d2:	00db      	lsls	r3, r3, #3
 80012d4:	440b      	add	r3, r1
 80012d6:	3304      	adds	r3, #4
 80012d8:	681b      	ldr	r3, [r3, #0]
 80012da:	17da      	asrs	r2, r3, #31
 80012dc:	4698      	mov	r8, r3
 80012de:	4691      	mov	r9, r2
 80012e0:	4642      	mov	r2, r8
 80012e2:	464b      	mov	r3, r9
 80012e4:	4601      	mov	r1, r0
 80012e6:	2000      	movs	r0, #0
 80012e8:	f007 fd50 	bl	8008d8c <HAL_FLASH_Program>
		for(i=0;i<22;i++)
 80012ec:	68fb      	ldr	r3, [r7, #12]
 80012ee:	3301      	adds	r3, #1
 80012f0:	60fb      	str	r3, [r7, #12]
 80012f2:	68fb      	ldr	r3, [r7, #12]
 80012f4:	2b15      	cmp	r3, #21
 80012f6:	dde1      	ble.n	80012bc <B1_ISR+0x64>
		}
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+22, collectedPoints);
 80012f8:	4b0e      	ldr	r3, [pc, #56]	; (8001334 <B1_ISR+0xdc>)
 80012fa:	781b      	ldrb	r3, [r3, #0]
 80012fc:	b2db      	uxtb	r3, r3
 80012fe:	2200      	movs	r2, #0
 8001300:	461c      	mov	r4, r3
 8001302:	4615      	mov	r5, r2
 8001304:	4622      	mov	r2, r4
 8001306:	462b      	mov	r3, r5
 8001308:	490b      	ldr	r1, [pc, #44]	; (8001338 <B1_ISR+0xe0>)
 800130a:	2000      	movs	r0, #0
 800130c:	f007 fd3e 	bl	8008d8c <HAL_FLASH_Program>
		Delay(50);
 8001310:	2032      	movs	r0, #50	; 0x32
 8001312:	f005 fbe5 	bl	8006ae0 <Delay>
		HAL_FLASH_Lock();
 8001316:	f007 fdaf 	bl	8008e78 <HAL_FLASH_Lock>
		HAL_UART_Transmit(huart_debugg,(uint8_t*) "\n\rBackup save!\n\r", 16, 10);
 800131a:	230a      	movs	r3, #10
 800131c:	2210      	movs	r2, #16
 800131e:	4907      	ldr	r1, [pc, #28]	; (800133c <B1_ISR+0xe4>)
 8001320:	6878      	ldr	r0, [r7, #4]
 8001322:	f00a fe40 	bl	800bfa6 <HAL_UART_Transmit>
		NVIC_SystemReset(); //SW reseteljük a mikorvezérlőt
 8001326:	f7ff fe31 	bl	8000f8c <__NVIC_SystemReset>
 800132a:	bf00      	nop
 800132c:	40020400 	.word	0x40020400
 8001330:	20000360 	.word	0x20000360
 8001334:	20000347 	.word	0x20000347
 8001338:	08040016 	.word	0x08040016
 800133c:	08011444 	.word	0x08011444

08001340 <B_NUCLEO_ISR>:
}

void B_NUCLEO_ISR(UART_HandleTypeDef *huart_debugg)
{
 8001340:	b580      	push	{r7, lr}
 8001342:	b084      	sub	sp, #16
 8001344:	af00      	add	r7, sp, #0
 8001346:	6078      	str	r0, [r7, #4]
	//Milyen módban voltunk eddig?
	uint8_t tmp= *(__IO uint8_t *) FLASH_ADDRESS_MODESELECTOR;
 8001348:	4b41      	ldr	r3, [pc, #260]	; (8001450 <B_NUCLEO_ISR+0x110>)
 800134a:	781b      	ldrb	r3, [r3, #0]
 800134c:	72fb      	strb	r3, [r7, #11]
	if(tmp==SKILL || tmp==FAST)mode=tmp;
 800134e:	7afb      	ldrb	r3, [r7, #11]
 8001350:	2b52      	cmp	r3, #82	; 0x52
 8001352:	d002      	beq.n	800135a <B_NUCLEO_ISR+0x1a>
 8001354:	7afb      	ldrb	r3, [r7, #11]
 8001356:	2b3f      	cmp	r3, #63	; 0x3f
 8001358:	d103      	bne.n	8001362 <B_NUCLEO_ISR+0x22>
 800135a:	4a3e      	ldr	r2, [pc, #248]	; (8001454 <B_NUCLEO_ISR+0x114>)
 800135c:	7afb      	ldrb	r3, [r7, #11]
 800135e:	7013      	strb	r3, [r2, #0]
 8001360:	e002      	b.n	8001368 <B_NUCLEO_ISR+0x28>
	else mode=SKILL;
 8001362:	4b3c      	ldr	r3, [pc, #240]	; (8001454 <B_NUCLEO_ISR+0x114>)
 8001364:	2252      	movs	r2, #82	; 0x52
 8001366:	701a      	strb	r2, [r3, #0]

	//section 7 törlése, hogy újraírhassuk a módot jelző bytot
	HAL_FLASH_Unlock();
 8001368:	f007 fd64 	bl	8008e34 <HAL_FLASH_Unlock>
	Delay(50);
 800136c:	2032      	movs	r0, #50	; 0x32
 800136e:	f005 fbb7 	bl	8006ae0 <Delay>
	FLASH_Erase_Sector(7, FLASH_VOLTAGE_RANGE_3);
 8001372:	2102      	movs	r1, #2
 8001374:	2007      	movs	r0, #7
 8001376:	f007 fecf 	bl	8009118 <FLASH_Erase_Sector>
	Delay(50);
 800137a:	2032      	movs	r0, #50	; 0x32
 800137c:	f005 fbb0 	bl	8006ae0 <Delay>
	HAL_FLASH_Lock();
 8001380:	f007 fd7a 	bl	8008e78 <HAL_FLASH_Lock>

	LED_NUCLEO(0);
 8001384:	2200      	movs	r2, #0
 8001386:	2120      	movs	r1, #32
 8001388:	4833      	ldr	r0, [pc, #204]	; (8001458 <B_NUCLEO_ISR+0x118>)
 800138a:	f008 f8b9 	bl	8009500 <HAL_GPIO_WritePin>
	LED_Y(0);
 800138e:	2201      	movs	r2, #1
 8001390:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001394:	4831      	ldr	r0, [pc, #196]	; (800145c <B_NUCLEO_ISR+0x11c>)
 8001396:	f008 f8b3 	bl	8009500 <HAL_GPIO_WritePin>
	LED_G(0);
 800139a:	2201      	movs	r2, #1
 800139c:	2102      	movs	r1, #2
 800139e:	482f      	ldr	r0, [pc, #188]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013a0:	f008 f8ae 	bl	8009500 <HAL_GPIO_WritePin>
	LED_B(0);
 80013a4:	2201      	movs	r2, #1
 80013a6:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80013aa:	482c      	ldr	r0, [pc, #176]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013ac:	f008 f8a8 	bl	8009500 <HAL_GPIO_WritePin>
	LED_R(0);
 80013b0:	2201      	movs	r2, #1
 80013b2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013b6:	4829      	ldr	r0, [pc, #164]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013b8:	f008 f8a2 	bl	8009500 <HAL_GPIO_WritePin>
	int i;
	for(i=0;i<8;i++)
 80013bc:	2300      	movs	r3, #0
 80013be:	60fb      	str	r3, [r7, #12]
 80013c0:	e01c      	b.n	80013fc <B_NUCLEO_ISR+0xbc>
	{
		LED_NUCLEO_TOGGLE;
 80013c2:	2120      	movs	r1, #32
 80013c4:	4824      	ldr	r0, [pc, #144]	; (8001458 <B_NUCLEO_ISR+0x118>)
 80013c6:	f008 f8b4 	bl	8009532 <HAL_GPIO_TogglePin>
		LED_Y_TOGGLE;
 80013ca:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80013ce:	4823      	ldr	r0, [pc, #140]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013d0:	f008 f8af 	bl	8009532 <HAL_GPIO_TogglePin>
		LED_G_TOGGLE;
 80013d4:	2102      	movs	r1, #2
 80013d6:	4821      	ldr	r0, [pc, #132]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013d8:	f008 f8ab 	bl	8009532 <HAL_GPIO_TogglePin>
		LED_B_TOGGLE;
 80013dc:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80013e0:	481e      	ldr	r0, [pc, #120]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013e2:	f008 f8a6 	bl	8009532 <HAL_GPIO_TogglePin>
		LED_R_TOGGLE;
 80013e6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013ea:	481c      	ldr	r0, [pc, #112]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013ec:	f008 f8a1 	bl	8009532 <HAL_GPIO_TogglePin>
		Delay(150);
 80013f0:	2096      	movs	r0, #150	; 0x96
 80013f2:	f005 fb75 	bl	8006ae0 <Delay>
	for(i=0;i<8;i++)
 80013f6:	68fb      	ldr	r3, [r7, #12]
 80013f8:	3301      	adds	r3, #1
 80013fa:	60fb      	str	r3, [r7, #12]
 80013fc:	68fb      	ldr	r3, [r7, #12]
 80013fe:	2b07      	cmp	r3, #7
 8001400:	dddf      	ble.n	80013c2 <B_NUCLEO_ISR+0x82>
	}

	//Állítsuk át a módot
	HAL_FLASH_Unlock();
 8001402:	f007 fd17 	bl	8008e34 <HAL_FLASH_Unlock>
	Delay(50);
 8001406:	2032      	movs	r0, #50	; 0x32
 8001408:	f005 fb6a 	bl	8006ae0 <Delay>
	if(mode==SKILL) HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_MODESELECTOR, FAST); //ha eddig skill mód volt akor msot gyors lesz
 800140c:	4b11      	ldr	r3, [pc, #68]	; (8001454 <B_NUCLEO_ISR+0x114>)
 800140e:	781b      	ldrb	r3, [r3, #0]
 8001410:	2b52      	cmp	r3, #82	; 0x52
 8001412:	d108      	bne.n	8001426 <B_NUCLEO_ISR+0xe6>
 8001414:	f04f 023f 	mov.w	r2, #63	; 0x3f
 8001418:	f04f 0300 	mov.w	r3, #0
 800141c:	490c      	ldr	r1, [pc, #48]	; (8001450 <B_NUCLEO_ISR+0x110>)
 800141e:	2000      	movs	r0, #0
 8001420:	f007 fcb4 	bl	8008d8c <HAL_FLASH_Program>
 8001424:	e007      	b.n	8001436 <B_NUCLEO_ISR+0xf6>
	else HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_MODESELECTOR, SKILL); //ha eddig gyors mód vagy memóriaszemét volt akkor msot skil lesz
 8001426:	f04f 0252 	mov.w	r2, #82	; 0x52
 800142a:	f04f 0300 	mov.w	r3, #0
 800142e:	4908      	ldr	r1, [pc, #32]	; (8001450 <B_NUCLEO_ISR+0x110>)
 8001430:	2000      	movs	r0, #0
 8001432:	f007 fcab 	bl	8008d8c <HAL_FLASH_Program>
	Delay(50);
 8001436:	2032      	movs	r0, #50	; 0x32
 8001438:	f005 fb52 	bl	8006ae0 <Delay>
	HAL_FLASH_Lock();
 800143c:	f007 fd1c 	bl	8008e78 <HAL_FLASH_Lock>
	HAL_UART_Transmit(huart_debugg, (uint8_t*)"\n\rMode change!\n\r", 16, 10);
 8001440:	230a      	movs	r3, #10
 8001442:	2210      	movs	r2, #16
 8001444:	4906      	ldr	r1, [pc, #24]	; (8001460 <B_NUCLEO_ISR+0x120>)
 8001446:	6878      	ldr	r0, [r7, #4]
 8001448:	f00a fdad 	bl	800bfa6 <HAL_UART_Transmit>
	NVIC_SystemReset(); //SW reseteljük a mikorvezérlőt
 800144c:	f7ff fd9e 	bl	8000f8c <__NVIC_SystemReset>
 8001450:	08060000 	.word	0x08060000
 8001454:	20000336 	.word	0x20000336
 8001458:	40020000 	.word	0x40020000
 800145c:	40020400 	.word	0x40020400
 8001460:	08011458 	.word	0x08011458

08001464 <Create_Nodes>:
uint8_t dir[2];

node Nodes[22];

void Create_Nodes(UART_HandleTypeDef *huart_debugg)
{
 8001464:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8001468:	b09c      	sub	sp, #112	; 0x70
 800146a:	af00      	add	r7, sp, #0
 800146c:	6078      	str	r0, [r7, #4]
	int i;
	orientation=FORWARD;
 800146e:	4b10      	ldr	r3, [pc, #64]	; (80014b0 <Create_Nodes+0x4c>)
 8001470:	2200      	movs	r2, #0
 8001472:	701a      	strb	r2, [r3, #0]
	collectedPoints=0;
 8001474:	4b0f      	ldr	r3, [pc, #60]	; (80014b4 <Create_Nodes+0x50>)
 8001476:	2200      	movs	r2, #0
 8001478:	701a      	strb	r2, [r3, #0]
	laneChange=0;
 800147a:	4b0f      	ldr	r3, [pc, #60]	; (80014b8 <Create_Nodes+0x54>)
 800147c:	2200      	movs	r2, #0
 800147e:	701a      	strb	r2, [r3, #0]
	path=LEFT;
 8001480:	4b0e      	ldr	r3, [pc, #56]	; (80014bc <Create_Nodes+0x58>)
 8001482:	2200      	movs	r2, #0
 8001484:	701a      	strb	r2, [r3, #0]

	nodeDetected=0;
 8001486:	4b0e      	ldr	r3, [pc, #56]	; (80014c0 <Create_Nodes+0x5c>)
 8001488:	2200      	movs	r2, #0
 800148a:	701a      	strb	r2, [r3, #0]
	v_control=SLEEP;
 800148c:	4b0d      	ldr	r3, [pc, #52]	; (80014c4 <Create_Nodes+0x60>)
 800148e:	2204      	movs	r2, #4
 8001490:	701a      	strb	r2, [r3, #0]
	pos[MY]	='S';
 8001492:	4b0d      	ldr	r3, [pc, #52]	; (80014c8 <Create_Nodes+0x64>)
 8001494:	2253      	movs	r2, #83	; 0x53
 8001496:	701a      	strb	r2, [r3, #0]
	pos[NEXT]='Q'; 				//my, next,
 8001498:	4b0b      	ldr	r3, [pc, #44]	; (80014c8 <Create_Nodes+0x64>)
 800149a:	2251      	movs	r2, #81	; 0x51
 800149c:	705a      	strb	r2, [r3, #1]

	if(mode!=SKILL)return;
 800149e:	4b0b      	ldr	r3, [pc, #44]	; (80014cc <Create_Nodes+0x68>)
 80014a0:	781b      	ldrb	r3, [r3, #0]
 80014a2:	2b52      	cmp	r3, #82	; 0x52
 80014a4:	f041 80e4 	bne.w	8002670 <Create_Nodes+0x120c>

	for(i=0;i<22;i++)
 80014a8:	2300      	movs	r3, #0
 80014aa:	66fb      	str	r3, [r7, #108]	; 0x6c
 80014ac:	e0e8      	b.n	8001680 <Create_Nodes+0x21c>
 80014ae:	bf00      	nop
 80014b0:	20000344 	.word	0x20000344
 80014b4:	20000347 	.word	0x20000347
 80014b8:	20000348 	.word	0x20000348
 80014bc:	20000346 	.word	0x20000346
 80014c0:	20000345 	.word	0x20000345
 80014c4:	20000349 	.word	0x20000349
 80014c8:	20000358 	.word	0x20000358
 80014cc:	20000336 	.word	0x20000336
	{
		Nodes[i].id=65+i;
 80014d0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80014d2:	b2db      	uxtb	r3, r3
 80014d4:	3341      	adds	r3, #65	; 0x41
 80014d6:	b2d8      	uxtb	r0, r3
 80014d8:	49c4      	ldr	r1, [pc, #784]	; (80017ec <Create_Nodes+0x388>)
 80014da:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80014dc:	4613      	mov	r3, r2
 80014de:	009b      	lsls	r3, r3, #2
 80014e0:	4413      	add	r3, r2
 80014e2:	00db      	lsls	r3, r3, #3
 80014e4:	440b      	add	r3, r1
 80014e6:	4602      	mov	r2, r0
 80014e8:	701a      	strb	r2, [r3, #0]
		Nodes[i].worth=0;
 80014ea:	49c0      	ldr	r1, [pc, #768]	; (80017ec <Create_Nodes+0x388>)
 80014ec:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80014ee:	4613      	mov	r3, r2
 80014f0:	009b      	lsls	r3, r3, #2
 80014f2:	4413      	add	r3, r2
 80014f4:	00db      	lsls	r3, r3, #3
 80014f6:	440b      	add	r3, r1
 80014f8:	3304      	adds	r3, #4
 80014fa:	2200      	movs	r2, #0
 80014fc:	601a      	str	r2, [r3, #0]
		Nodes[i].type=0;
 80014fe:	49bb      	ldr	r1, [pc, #748]	; (80017ec <Create_Nodes+0x388>)
 8001500:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001502:	4613      	mov	r3, r2
 8001504:	009b      	lsls	r3, r3, #2
 8001506:	4413      	add	r3, r2
 8001508:	00db      	lsls	r3, r3, #3
 800150a:	440b      	add	r3, r1
 800150c:	3308      	adds	r3, #8
 800150e:	2200      	movs	r2, #0
 8001510:	601a      	str	r2, [r3, #0]
		VALUE_2(Nodes[i].neighbours,0,0,0,0,0,0);
 8001512:	49b6      	ldr	r1, [pc, #728]	; (80017ec <Create_Nodes+0x388>)
 8001514:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001516:	4613      	mov	r3, r2
 8001518:	009b      	lsls	r3, r3, #2
 800151a:	4413      	add	r3, r2
 800151c:	00db      	lsls	r3, r3, #3
 800151e:	440b      	add	r3, r1
 8001520:	330c      	adds	r3, #12
 8001522:	2200      	movs	r2, #0
 8001524:	701a      	strb	r2, [r3, #0]
 8001526:	49b1      	ldr	r1, [pc, #708]	; (80017ec <Create_Nodes+0x388>)
 8001528:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800152a:	4613      	mov	r3, r2
 800152c:	009b      	lsls	r3, r3, #2
 800152e:	4413      	add	r3, r2
 8001530:	00db      	lsls	r3, r3, #3
 8001532:	440b      	add	r3, r1
 8001534:	330d      	adds	r3, #13
 8001536:	2200      	movs	r2, #0
 8001538:	701a      	strb	r2, [r3, #0]
 800153a:	49ac      	ldr	r1, [pc, #688]	; (80017ec <Create_Nodes+0x388>)
 800153c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800153e:	4613      	mov	r3, r2
 8001540:	009b      	lsls	r3, r3, #2
 8001542:	4413      	add	r3, r2
 8001544:	00db      	lsls	r3, r3, #3
 8001546:	440b      	add	r3, r1
 8001548:	330e      	adds	r3, #14
 800154a:	2200      	movs	r2, #0
 800154c:	701a      	strb	r2, [r3, #0]
 800154e:	49a7      	ldr	r1, [pc, #668]	; (80017ec <Create_Nodes+0x388>)
 8001550:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001552:	4613      	mov	r3, r2
 8001554:	009b      	lsls	r3, r3, #2
 8001556:	4413      	add	r3, r2
 8001558:	00db      	lsls	r3, r3, #3
 800155a:	440b      	add	r3, r1
 800155c:	330f      	adds	r3, #15
 800155e:	2200      	movs	r2, #0
 8001560:	701a      	strb	r2, [r3, #0]
 8001562:	49a2      	ldr	r1, [pc, #648]	; (80017ec <Create_Nodes+0x388>)
 8001564:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001566:	4613      	mov	r3, r2
 8001568:	009b      	lsls	r3, r3, #2
 800156a:	4413      	add	r3, r2
 800156c:	00db      	lsls	r3, r3, #3
 800156e:	440b      	add	r3, r1
 8001570:	3310      	adds	r3, #16
 8001572:	2200      	movs	r2, #0
 8001574:	701a      	strb	r2, [r3, #0]
 8001576:	499d      	ldr	r1, [pc, #628]	; (80017ec <Create_Nodes+0x388>)
 8001578:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800157a:	4613      	mov	r3, r2
 800157c:	009b      	lsls	r3, r3, #2
 800157e:	4413      	add	r3, r2
 8001580:	00db      	lsls	r3, r3, #3
 8001582:	440b      	add	r3, r1
 8001584:	3311      	adds	r3, #17
 8001586:	2200      	movs	r2, #0
 8001588:	701a      	strb	r2, [r3, #0]
		VALUE_2(Nodes[i].directions,0,0,0,0,0,0);
 800158a:	4998      	ldr	r1, [pc, #608]	; (80017ec <Create_Nodes+0x388>)
 800158c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800158e:	4613      	mov	r3, r2
 8001590:	009b      	lsls	r3, r3, #2
 8001592:	4413      	add	r3, r2
 8001594:	00db      	lsls	r3, r3, #3
 8001596:	440b      	add	r3, r1
 8001598:	3312      	adds	r3, #18
 800159a:	2200      	movs	r2, #0
 800159c:	701a      	strb	r2, [r3, #0]
 800159e:	4993      	ldr	r1, [pc, #588]	; (80017ec <Create_Nodes+0x388>)
 80015a0:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015a2:	4613      	mov	r3, r2
 80015a4:	009b      	lsls	r3, r3, #2
 80015a6:	4413      	add	r3, r2
 80015a8:	00db      	lsls	r3, r3, #3
 80015aa:	440b      	add	r3, r1
 80015ac:	3313      	adds	r3, #19
 80015ae:	2200      	movs	r2, #0
 80015b0:	701a      	strb	r2, [r3, #0]
 80015b2:	498e      	ldr	r1, [pc, #568]	; (80017ec <Create_Nodes+0x388>)
 80015b4:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015b6:	4613      	mov	r3, r2
 80015b8:	009b      	lsls	r3, r3, #2
 80015ba:	4413      	add	r3, r2
 80015bc:	00db      	lsls	r3, r3, #3
 80015be:	440b      	add	r3, r1
 80015c0:	3314      	adds	r3, #20
 80015c2:	2200      	movs	r2, #0
 80015c4:	701a      	strb	r2, [r3, #0]
 80015c6:	4989      	ldr	r1, [pc, #548]	; (80017ec <Create_Nodes+0x388>)
 80015c8:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015ca:	4613      	mov	r3, r2
 80015cc:	009b      	lsls	r3, r3, #2
 80015ce:	4413      	add	r3, r2
 80015d0:	00db      	lsls	r3, r3, #3
 80015d2:	440b      	add	r3, r1
 80015d4:	3315      	adds	r3, #21
 80015d6:	2200      	movs	r2, #0
 80015d8:	701a      	strb	r2, [r3, #0]
 80015da:	4984      	ldr	r1, [pc, #528]	; (80017ec <Create_Nodes+0x388>)
 80015dc:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015de:	4613      	mov	r3, r2
 80015e0:	009b      	lsls	r3, r3, #2
 80015e2:	4413      	add	r3, r2
 80015e4:	00db      	lsls	r3, r3, #3
 80015e6:	440b      	add	r3, r1
 80015e8:	3316      	adds	r3, #22
 80015ea:	2200      	movs	r2, #0
 80015ec:	701a      	strb	r2, [r3, #0]
 80015ee:	497f      	ldr	r1, [pc, #508]	; (80017ec <Create_Nodes+0x388>)
 80015f0:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015f2:	4613      	mov	r3, r2
 80015f4:	009b      	lsls	r3, r3, #2
 80015f6:	4413      	add	r3, r2
 80015f8:	00db      	lsls	r3, r3, #3
 80015fa:	440b      	add	r3, r1
 80015fc:	3317      	adds	r3, #23
 80015fe:	2200      	movs	r2, #0
 8001600:	701a      	strb	r2, [r3, #0]
		VALUE_2(Nodes[i].distance,0,0,0,0,0,0);
 8001602:	497a      	ldr	r1, [pc, #488]	; (80017ec <Create_Nodes+0x388>)
 8001604:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001606:	4613      	mov	r3, r2
 8001608:	009b      	lsls	r3, r3, #2
 800160a:	4413      	add	r3, r2
 800160c:	00db      	lsls	r3, r3, #3
 800160e:	440b      	add	r3, r1
 8001610:	3318      	adds	r3, #24
 8001612:	2200      	movs	r2, #0
 8001614:	801a      	strh	r2, [r3, #0]
 8001616:	4975      	ldr	r1, [pc, #468]	; (80017ec <Create_Nodes+0x388>)
 8001618:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800161a:	4613      	mov	r3, r2
 800161c:	009b      	lsls	r3, r3, #2
 800161e:	4413      	add	r3, r2
 8001620:	00db      	lsls	r3, r3, #3
 8001622:	440b      	add	r3, r1
 8001624:	331a      	adds	r3, #26
 8001626:	2200      	movs	r2, #0
 8001628:	801a      	strh	r2, [r3, #0]
 800162a:	4970      	ldr	r1, [pc, #448]	; (80017ec <Create_Nodes+0x388>)
 800162c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800162e:	4613      	mov	r3, r2
 8001630:	009b      	lsls	r3, r3, #2
 8001632:	4413      	add	r3, r2
 8001634:	00db      	lsls	r3, r3, #3
 8001636:	440b      	add	r3, r1
 8001638:	331c      	adds	r3, #28
 800163a:	2200      	movs	r2, #0
 800163c:	801a      	strh	r2, [r3, #0]
 800163e:	496b      	ldr	r1, [pc, #428]	; (80017ec <Create_Nodes+0x388>)
 8001640:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001642:	4613      	mov	r3, r2
 8001644:	009b      	lsls	r3, r3, #2
 8001646:	4413      	add	r3, r2
 8001648:	00db      	lsls	r3, r3, #3
 800164a:	440b      	add	r3, r1
 800164c:	331e      	adds	r3, #30
 800164e:	2200      	movs	r2, #0
 8001650:	801a      	strh	r2, [r3, #0]
 8001652:	4966      	ldr	r1, [pc, #408]	; (80017ec <Create_Nodes+0x388>)
 8001654:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001656:	4613      	mov	r3, r2
 8001658:	009b      	lsls	r3, r3, #2
 800165a:	4413      	add	r3, r2
 800165c:	00db      	lsls	r3, r3, #3
 800165e:	440b      	add	r3, r1
 8001660:	3320      	adds	r3, #32
 8001662:	2200      	movs	r2, #0
 8001664:	801a      	strh	r2, [r3, #0]
 8001666:	4961      	ldr	r1, [pc, #388]	; (80017ec <Create_Nodes+0x388>)
 8001668:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800166a:	4613      	mov	r3, r2
 800166c:	009b      	lsls	r3, r3, #2
 800166e:	4413      	add	r3, r2
 8001670:	00db      	lsls	r3, r3, #3
 8001672:	440b      	add	r3, r1
 8001674:	3322      	adds	r3, #34	; 0x22
 8001676:	2200      	movs	r2, #0
 8001678:	801a      	strh	r2, [r3, #0]
	for(i=0;i<22;i++)
 800167a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800167c:	3301      	adds	r3, #1
 800167e:	66fb      	str	r3, [r7, #108]	; 0x6c
 8001680:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001682:	2b15      	cmp	r3, #21
 8001684:	f77f af24 	ble.w	80014d0 <Create_Nodes+0x6c>
	}
	//A node
	N('A').worth=2;
 8001688:	4b58      	ldr	r3, [pc, #352]	; (80017ec <Create_Nodes+0x388>)
 800168a:	2202      	movs	r2, #2
 800168c:	605a      	str	r2, [r3, #4]
	N('A').type=1;
 800168e:	4b57      	ldr	r3, [pc, #348]	; (80017ec <Create_Nodes+0x388>)
 8001690:	2201      	movs	r2, #1
 8001692:	609a      	str	r2, [r3, #8]
	VALUE_2(N('A').neighbours,'C',0,0,'B',0,'D');
 8001694:	4b55      	ldr	r3, [pc, #340]	; (80017ec <Create_Nodes+0x388>)
 8001696:	2243      	movs	r2, #67	; 0x43
 8001698:	731a      	strb	r2, [r3, #12]
 800169a:	4b54      	ldr	r3, [pc, #336]	; (80017ec <Create_Nodes+0x388>)
 800169c:	2200      	movs	r2, #0
 800169e:	735a      	strb	r2, [r3, #13]
 80016a0:	4b52      	ldr	r3, [pc, #328]	; (80017ec <Create_Nodes+0x388>)
 80016a2:	2200      	movs	r2, #0
 80016a4:	739a      	strb	r2, [r3, #14]
 80016a6:	4b51      	ldr	r3, [pc, #324]	; (80017ec <Create_Nodes+0x388>)
 80016a8:	2242      	movs	r2, #66	; 0x42
 80016aa:	73da      	strb	r2, [r3, #15]
 80016ac:	4b4f      	ldr	r3, [pc, #316]	; (80017ec <Create_Nodes+0x388>)
 80016ae:	2200      	movs	r2, #0
 80016b0:	741a      	strb	r2, [r3, #16]
 80016b2:	4b4e      	ldr	r3, [pc, #312]	; (80017ec <Create_Nodes+0x388>)
 80016b4:	2244      	movs	r2, #68	; 0x44
 80016b6:	745a      	strb	r2, [r3, #17]
	VALUE_2(N('A').directions,1,0,0,2,0,1);
 80016b8:	4b4c      	ldr	r3, [pc, #304]	; (80017ec <Create_Nodes+0x388>)
 80016ba:	2201      	movs	r2, #1
 80016bc:	749a      	strb	r2, [r3, #18]
 80016be:	4b4b      	ldr	r3, [pc, #300]	; (80017ec <Create_Nodes+0x388>)
 80016c0:	2200      	movs	r2, #0
 80016c2:	74da      	strb	r2, [r3, #19]
 80016c4:	4b49      	ldr	r3, [pc, #292]	; (80017ec <Create_Nodes+0x388>)
 80016c6:	2200      	movs	r2, #0
 80016c8:	751a      	strb	r2, [r3, #20]
 80016ca:	4b48      	ldr	r3, [pc, #288]	; (80017ec <Create_Nodes+0x388>)
 80016cc:	2202      	movs	r2, #2
 80016ce:	755a      	strb	r2, [r3, #21]
 80016d0:	4b46      	ldr	r3, [pc, #280]	; (80017ec <Create_Nodes+0x388>)
 80016d2:	2200      	movs	r2, #0
 80016d4:	759a      	strb	r2, [r3, #22]
 80016d6:	4b45      	ldr	r3, [pc, #276]	; (80017ec <Create_Nodes+0x388>)
 80016d8:	2201      	movs	r2, #1
 80016da:	75da      	strb	r2, [r3, #23]
	VALUE_2(N('A').distance,199,0,0,241,0,198);
 80016dc:	4b43      	ldr	r3, [pc, #268]	; (80017ec <Create_Nodes+0x388>)
 80016de:	22c7      	movs	r2, #199	; 0xc7
 80016e0:	831a      	strh	r2, [r3, #24]
 80016e2:	4b42      	ldr	r3, [pc, #264]	; (80017ec <Create_Nodes+0x388>)
 80016e4:	2200      	movs	r2, #0
 80016e6:	835a      	strh	r2, [r3, #26]
 80016e8:	4b40      	ldr	r3, [pc, #256]	; (80017ec <Create_Nodes+0x388>)
 80016ea:	2200      	movs	r2, #0
 80016ec:	839a      	strh	r2, [r3, #28]
 80016ee:	4b3f      	ldr	r3, [pc, #252]	; (80017ec <Create_Nodes+0x388>)
 80016f0:	22f1      	movs	r2, #241	; 0xf1
 80016f2:	83da      	strh	r2, [r3, #30]
 80016f4:	4b3d      	ldr	r3, [pc, #244]	; (80017ec <Create_Nodes+0x388>)
 80016f6:	2200      	movs	r2, #0
 80016f8:	841a      	strh	r2, [r3, #32]
 80016fa:	4b3c      	ldr	r3, [pc, #240]	; (80017ec <Create_Nodes+0x388>)
 80016fc:	22c6      	movs	r2, #198	; 0xc6
 80016fe:	845a      	strh	r2, [r3, #34]	; 0x22
	N('A').middle=NEIGHBOUR6;
 8001700:	4b3a      	ldr	r3, [pc, #232]	; (80017ec <Create_Nodes+0x388>)
 8001702:	2205      	movs	r2, #5
 8001704:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24

	//B node
	N('B').worth=2;
 8001708:	4b38      	ldr	r3, [pc, #224]	; (80017ec <Create_Nodes+0x388>)
 800170a:	2202      	movs	r2, #2
 800170c:	62da      	str	r2, [r3, #44]	; 0x2c
	N('B').type=1;
 800170e:	4b37      	ldr	r3, [pc, #220]	; (80017ec <Create_Nodes+0x388>)
 8001710:	2201      	movs	r2, #1
 8001712:	631a      	str	r2, [r3, #48]	; 0x30
	VALUE_2(N('B').neighbours,'D',0,'A',0,0,'E');
 8001714:	4b35      	ldr	r3, [pc, #212]	; (80017ec <Create_Nodes+0x388>)
 8001716:	2244      	movs	r2, #68	; 0x44
 8001718:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800171c:	4b33      	ldr	r3, [pc, #204]	; (80017ec <Create_Nodes+0x388>)
 800171e:	2200      	movs	r2, #0
 8001720:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001724:	4b31      	ldr	r3, [pc, #196]	; (80017ec <Create_Nodes+0x388>)
 8001726:	2241      	movs	r2, #65	; 0x41
 8001728:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 800172c:	4b2f      	ldr	r3, [pc, #188]	; (80017ec <Create_Nodes+0x388>)
 800172e:	2200      	movs	r2, #0
 8001730:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 8001734:	4b2d      	ldr	r3, [pc, #180]	; (80017ec <Create_Nodes+0x388>)
 8001736:	2200      	movs	r2, #0
 8001738:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800173c:	4b2b      	ldr	r3, [pc, #172]	; (80017ec <Create_Nodes+0x388>)
 800173e:	2245      	movs	r2, #69	; 0x45
 8001740:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
	VALUE_2(N('B').directions,1,0,1,0,0,1);
 8001744:	4b29      	ldr	r3, [pc, #164]	; (80017ec <Create_Nodes+0x388>)
 8001746:	2201      	movs	r2, #1
 8001748:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 800174c:	4b27      	ldr	r3, [pc, #156]	; (80017ec <Create_Nodes+0x388>)
 800174e:	2200      	movs	r2, #0
 8001750:	f883 203b 	strb.w	r2, [r3, #59]	; 0x3b
 8001754:	4b25      	ldr	r3, [pc, #148]	; (80017ec <Create_Nodes+0x388>)
 8001756:	2201      	movs	r2, #1
 8001758:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800175c:	4b23      	ldr	r3, [pc, #140]	; (80017ec <Create_Nodes+0x388>)
 800175e:	2200      	movs	r2, #0
 8001760:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001764:	4b21      	ldr	r3, [pc, #132]	; (80017ec <Create_Nodes+0x388>)
 8001766:	2200      	movs	r2, #0
 8001768:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800176c:	4b1f      	ldr	r3, [pc, #124]	; (80017ec <Create_Nodes+0x388>)
 800176e:	2201      	movs	r2, #1
 8001770:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
	VALUE_2(N('B').distance,199,0,241,0,0,198);
 8001774:	4b1d      	ldr	r3, [pc, #116]	; (80017ec <Create_Nodes+0x388>)
 8001776:	22c7      	movs	r2, #199	; 0xc7
 8001778:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 800177c:	4b1b      	ldr	r3, [pc, #108]	; (80017ec <Create_Nodes+0x388>)
 800177e:	2200      	movs	r2, #0
 8001780:	f8a3 2042 	strh.w	r2, [r3, #66]	; 0x42
 8001784:	4b19      	ldr	r3, [pc, #100]	; (80017ec <Create_Nodes+0x388>)
 8001786:	22f1      	movs	r2, #241	; 0xf1
 8001788:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 800178c:	4b17      	ldr	r3, [pc, #92]	; (80017ec <Create_Nodes+0x388>)
 800178e:	2200      	movs	r2, #0
 8001790:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8001794:	4b15      	ldr	r3, [pc, #84]	; (80017ec <Create_Nodes+0x388>)
 8001796:	2200      	movs	r2, #0
 8001798:	f8a3 2048 	strh.w	r2, [r3, #72]	; 0x48
 800179c:	4b13      	ldr	r3, [pc, #76]	; (80017ec <Create_Nodes+0x388>)
 800179e:	22c6      	movs	r2, #198	; 0xc6
 80017a0:	f8a3 204a 	strh.w	r2, [r3, #74]	; 0x4a
	N('B').middle=NEIGHBOUR1;
 80017a4:	4b11      	ldr	r3, [pc, #68]	; (80017ec <Create_Nodes+0x388>)
 80017a6:	2200      	movs	r2, #0
 80017a8:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c

	//C node
	N('C').worth=2;
 80017ac:	4b0f      	ldr	r3, [pc, #60]	; (80017ec <Create_Nodes+0x388>)
 80017ae:	2202      	movs	r2, #2
 80017b0:	655a      	str	r2, [r3, #84]	; 0x54
	N('C').type=2;
 80017b2:	4b0e      	ldr	r3, [pc, #56]	; (80017ec <Create_Nodes+0x388>)
 80017b4:	2202      	movs	r2, #2
 80017b6:	659a      	str	r2, [r3, #88]	; 0x58
	VALUE_2(N('C').neighbours,'F',0,0,0,0,'A');
 80017b8:	4b0c      	ldr	r3, [pc, #48]	; (80017ec <Create_Nodes+0x388>)
 80017ba:	2246      	movs	r2, #70	; 0x46
 80017bc:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 80017c0:	4b0a      	ldr	r3, [pc, #40]	; (80017ec <Create_Nodes+0x388>)
 80017c2:	2200      	movs	r2, #0
 80017c4:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 80017c8:	4b08      	ldr	r3, [pc, #32]	; (80017ec <Create_Nodes+0x388>)
 80017ca:	2200      	movs	r2, #0
 80017cc:	f883 205e 	strb.w	r2, [r3, #94]	; 0x5e
 80017d0:	4b06      	ldr	r3, [pc, #24]	; (80017ec <Create_Nodes+0x388>)
 80017d2:	2200      	movs	r2, #0
 80017d4:	f883 205f 	strb.w	r2, [r3, #95]	; 0x5f
 80017d8:	4b04      	ldr	r3, [pc, #16]	; (80017ec <Create_Nodes+0x388>)
 80017da:	2200      	movs	r2, #0
 80017dc:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
 80017e0:	4b02      	ldr	r3, [pc, #8]	; (80017ec <Create_Nodes+0x388>)
 80017e2:	2241      	movs	r2, #65	; 0x41
 80017e4:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
 80017e8:	e002      	b.n	80017f0 <Create_Nodes+0x38c>
 80017ea:	bf00      	nop
 80017ec:	20000360 	.word	0x20000360
	VALUE_2(N('C').directions,2,0,0,0,0,2);
 80017f0:	4bc9      	ldr	r3, [pc, #804]	; (8001b18 <Create_Nodes+0x6b4>)
 80017f2:	2202      	movs	r2, #2
 80017f4:	f883 2062 	strb.w	r2, [r3, #98]	; 0x62
 80017f8:	4bc7      	ldr	r3, [pc, #796]	; (8001b18 <Create_Nodes+0x6b4>)
 80017fa:	2200      	movs	r2, #0
 80017fc:	f883 2063 	strb.w	r2, [r3, #99]	; 0x63
 8001800:	4bc5      	ldr	r3, [pc, #788]	; (8001b18 <Create_Nodes+0x6b4>)
 8001802:	2200      	movs	r2, #0
 8001804:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
 8001808:	4bc3      	ldr	r3, [pc, #780]	; (8001b18 <Create_Nodes+0x6b4>)
 800180a:	2200      	movs	r2, #0
 800180c:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
 8001810:	4bc1      	ldr	r3, [pc, #772]	; (8001b18 <Create_Nodes+0x6b4>)
 8001812:	2200      	movs	r2, #0
 8001814:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
 8001818:	4bbf      	ldr	r3, [pc, #764]	; (8001b18 <Create_Nodes+0x6b4>)
 800181a:	2202      	movs	r2, #2
 800181c:	f883 2067 	strb.w	r2, [r3, #103]	; 0x67
	VALUE_2(N('C').distance,198,0,0,0,0,199);
 8001820:	4bbd      	ldr	r3, [pc, #756]	; (8001b18 <Create_Nodes+0x6b4>)
 8001822:	22c6      	movs	r2, #198	; 0xc6
 8001824:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 8001828:	4bbb      	ldr	r3, [pc, #748]	; (8001b18 <Create_Nodes+0x6b4>)
 800182a:	2200      	movs	r2, #0
 800182c:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 8001830:	4bb9      	ldr	r3, [pc, #740]	; (8001b18 <Create_Nodes+0x6b4>)
 8001832:	2200      	movs	r2, #0
 8001834:	f8a3 206c 	strh.w	r2, [r3, #108]	; 0x6c
 8001838:	4bb7      	ldr	r3, [pc, #732]	; (8001b18 <Create_Nodes+0x6b4>)
 800183a:	2200      	movs	r2, #0
 800183c:	f8a3 206e 	strh.w	r2, [r3, #110]	; 0x6e
 8001840:	4bb5      	ldr	r3, [pc, #724]	; (8001b18 <Create_Nodes+0x6b4>)
 8001842:	2200      	movs	r2, #0
 8001844:	f8a3 2070 	strh.w	r2, [r3, #112]	; 0x70
 8001848:	4bb3      	ldr	r3, [pc, #716]	; (8001b18 <Create_Nodes+0x6b4>)
 800184a:	22c7      	movs	r2, #199	; 0xc7
 800184c:	f8a3 2072 	strh.w	r2, [r3, #114]	; 0x72
	N('C').middle=NEIGHBOUR1;
 8001850:	4bb1      	ldr	r3, [pc, #708]	; (8001b18 <Create_Nodes+0x6b4>)
 8001852:	2200      	movs	r2, #0
 8001854:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

	//D node
	N('D').worth=2;
 8001858:	4baf      	ldr	r3, [pc, #700]	; (8001b18 <Create_Nodes+0x6b4>)
 800185a:	2202      	movs	r2, #2
 800185c:	67da      	str	r2, [r3, #124]	; 0x7c
	N('D').type=2;
 800185e:	4bae      	ldr	r3, [pc, #696]	; (8001b18 <Create_Nodes+0x6b4>)
 8001860:	2202      	movs	r2, #2
 8001862:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	VALUE_2(N('D').neighbours,'G','I','F','A',0,'B');
 8001866:	4bac      	ldr	r3, [pc, #688]	; (8001b18 <Create_Nodes+0x6b4>)
 8001868:	2247      	movs	r2, #71	; 0x47
 800186a:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 800186e:	4baa      	ldr	r3, [pc, #680]	; (8001b18 <Create_Nodes+0x6b4>)
 8001870:	2249      	movs	r2, #73	; 0x49
 8001872:	f883 2085 	strb.w	r2, [r3, #133]	; 0x85
 8001876:	4ba8      	ldr	r3, [pc, #672]	; (8001b18 <Create_Nodes+0x6b4>)
 8001878:	2246      	movs	r2, #70	; 0x46
 800187a:	f883 2086 	strb.w	r2, [r3, #134]	; 0x86
 800187e:	4ba6      	ldr	r3, [pc, #664]	; (8001b18 <Create_Nodes+0x6b4>)
 8001880:	2241      	movs	r2, #65	; 0x41
 8001882:	f883 2087 	strb.w	r2, [r3, #135]	; 0x87
 8001886:	4ba4      	ldr	r3, [pc, #656]	; (8001b18 <Create_Nodes+0x6b4>)
 8001888:	2200      	movs	r2, #0
 800188a:	f883 2088 	strb.w	r2, [r3, #136]	; 0x88
 800188e:	4ba2      	ldr	r3, [pc, #648]	; (8001b18 <Create_Nodes+0x6b4>)
 8001890:	2242      	movs	r2, #66	; 0x42
 8001892:	f883 2089 	strb.w	r2, [r3, #137]	; 0x89
	VALUE_2(N('D').directions,2,1,1,1,0,2);
 8001896:	4ba0      	ldr	r3, [pc, #640]	; (8001b18 <Create_Nodes+0x6b4>)
 8001898:	2202      	movs	r2, #2
 800189a:	f883 208a 	strb.w	r2, [r3, #138]	; 0x8a
 800189e:	4b9e      	ldr	r3, [pc, #632]	; (8001b18 <Create_Nodes+0x6b4>)
 80018a0:	2201      	movs	r2, #1
 80018a2:	f883 208b 	strb.w	r2, [r3, #139]	; 0x8b
 80018a6:	4b9c      	ldr	r3, [pc, #624]	; (8001b18 <Create_Nodes+0x6b4>)
 80018a8:	2201      	movs	r2, #1
 80018aa:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
 80018ae:	4b9a      	ldr	r3, [pc, #616]	; (8001b18 <Create_Nodes+0x6b4>)
 80018b0:	2201      	movs	r2, #1
 80018b2:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 80018b6:	4b98      	ldr	r3, [pc, #608]	; (8001b18 <Create_Nodes+0x6b4>)
 80018b8:	2200      	movs	r2, #0
 80018ba:	f883 208e 	strb.w	r2, [r3, #142]	; 0x8e
 80018be:	4b96      	ldr	r3, [pc, #600]	; (8001b18 <Create_Nodes+0x6b4>)
 80018c0:	2202      	movs	r2, #2
 80018c2:	f883 208f 	strb.w	r2, [r3, #143]	; 0x8f
	VALUE_2(N('D').distance,198,241,197,198,0,199);
 80018c6:	4b94      	ldr	r3, [pc, #592]	; (8001b18 <Create_Nodes+0x6b4>)
 80018c8:	22c6      	movs	r2, #198	; 0xc6
 80018ca:	f8a3 2090 	strh.w	r2, [r3, #144]	; 0x90
 80018ce:	4b92      	ldr	r3, [pc, #584]	; (8001b18 <Create_Nodes+0x6b4>)
 80018d0:	22f1      	movs	r2, #241	; 0xf1
 80018d2:	f8a3 2092 	strh.w	r2, [r3, #146]	; 0x92
 80018d6:	4b90      	ldr	r3, [pc, #576]	; (8001b18 <Create_Nodes+0x6b4>)
 80018d8:	22c5      	movs	r2, #197	; 0xc5
 80018da:	f8a3 2094 	strh.w	r2, [r3, #148]	; 0x94
 80018de:	4b8e      	ldr	r3, [pc, #568]	; (8001b18 <Create_Nodes+0x6b4>)
 80018e0:	22c6      	movs	r2, #198	; 0xc6
 80018e2:	f8a3 2096 	strh.w	r2, [r3, #150]	; 0x96
 80018e6:	4b8c      	ldr	r3, [pc, #560]	; (8001b18 <Create_Nodes+0x6b4>)
 80018e8:	2200      	movs	r2, #0
 80018ea:	f8a3 2098 	strh.w	r2, [r3, #152]	; 0x98
 80018ee:	4b8a      	ldr	r3, [pc, #552]	; (8001b18 <Create_Nodes+0x6b4>)
 80018f0:	22c7      	movs	r2, #199	; 0xc7
 80018f2:	f8a3 209a 	strh.w	r2, [r3, #154]	; 0x9a
	N('D').middle=NEIGHBOUR2;
 80018f6:	4b88      	ldr	r3, [pc, #544]	; (8001b18 <Create_Nodes+0x6b4>)
 80018f8:	2201      	movs	r2, #1
 80018fa:	f883 209c 	strb.w	r2, [r3, #156]	; 0x9c

	//E node
	N('E').worth=2;
 80018fe:	4b86      	ldr	r3, [pc, #536]	; (8001b18 <Create_Nodes+0x6b4>)
 8001900:	2202      	movs	r2, #2
 8001902:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
	N('E').type=2;
 8001906:	4b84      	ldr	r3, [pc, #528]	; (8001b18 <Create_Nodes+0x6b4>)
 8001908:	2202      	movs	r2, #2
 800190a:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
	VALUE_2(N('E').neighbours,'J',0,'G','B',0,0);
 800190e:	4b82      	ldr	r3, [pc, #520]	; (8001b18 <Create_Nodes+0x6b4>)
 8001910:	224a      	movs	r2, #74	; 0x4a
 8001912:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 8001916:	4b80      	ldr	r3, [pc, #512]	; (8001b18 <Create_Nodes+0x6b4>)
 8001918:	2200      	movs	r2, #0
 800191a:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 800191e:	4b7e      	ldr	r3, [pc, #504]	; (8001b18 <Create_Nodes+0x6b4>)
 8001920:	2247      	movs	r2, #71	; 0x47
 8001922:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8001926:	4b7c      	ldr	r3, [pc, #496]	; (8001b18 <Create_Nodes+0x6b4>)
 8001928:	2242      	movs	r2, #66	; 0x42
 800192a:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 800192e:	4b7a      	ldr	r3, [pc, #488]	; (8001b18 <Create_Nodes+0x6b4>)
 8001930:	2200      	movs	r2, #0
 8001932:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 8001936:	4b78      	ldr	r3, [pc, #480]	; (8001b18 <Create_Nodes+0x6b4>)
 8001938:	2200      	movs	r2, #0
 800193a:	f883 20b1 	strb.w	r2, [r3, #177]	; 0xb1
	VALUE_2(N('E').directions,1,0,1,1,0,0);
 800193e:	4b76      	ldr	r3, [pc, #472]	; (8001b18 <Create_Nodes+0x6b4>)
 8001940:	2201      	movs	r2, #1
 8001942:	f883 20b2 	strb.w	r2, [r3, #178]	; 0xb2
 8001946:	4b74      	ldr	r3, [pc, #464]	; (8001b18 <Create_Nodes+0x6b4>)
 8001948:	2200      	movs	r2, #0
 800194a:	f883 20b3 	strb.w	r2, [r3, #179]	; 0xb3
 800194e:	4b72      	ldr	r3, [pc, #456]	; (8001b18 <Create_Nodes+0x6b4>)
 8001950:	2201      	movs	r2, #1
 8001952:	f883 20b4 	strb.w	r2, [r3, #180]	; 0xb4
 8001956:	4b70      	ldr	r3, [pc, #448]	; (8001b18 <Create_Nodes+0x6b4>)
 8001958:	2201      	movs	r2, #1
 800195a:	f883 20b5 	strb.w	r2, [r3, #181]	; 0xb5
 800195e:	4b6e      	ldr	r3, [pc, #440]	; (8001b18 <Create_Nodes+0x6b4>)
 8001960:	2200      	movs	r2, #0
 8001962:	f883 20b6 	strb.w	r2, [r3, #182]	; 0xb6
 8001966:	4b6c      	ldr	r3, [pc, #432]	; (8001b18 <Create_Nodes+0x6b4>)
 8001968:	2200      	movs	r2, #0
 800196a:	f883 20b7 	strb.w	r2, [r3, #183]	; 0xb7
	VALUE_2(N('E').distance,241,0,197,198,0,0);
 800196e:	4b6a      	ldr	r3, [pc, #424]	; (8001b18 <Create_Nodes+0x6b4>)
 8001970:	22f1      	movs	r2, #241	; 0xf1
 8001972:	f8a3 20b8 	strh.w	r2, [r3, #184]	; 0xb8
 8001976:	4b68      	ldr	r3, [pc, #416]	; (8001b18 <Create_Nodes+0x6b4>)
 8001978:	2200      	movs	r2, #0
 800197a:	f8a3 20ba 	strh.w	r2, [r3, #186]	; 0xba
 800197e:	4b66      	ldr	r3, [pc, #408]	; (8001b18 <Create_Nodes+0x6b4>)
 8001980:	22c5      	movs	r2, #197	; 0xc5
 8001982:	f8a3 20bc 	strh.w	r2, [r3, #188]	; 0xbc
 8001986:	4b64      	ldr	r3, [pc, #400]	; (8001b18 <Create_Nodes+0x6b4>)
 8001988:	22c6      	movs	r2, #198	; 0xc6
 800198a:	f8a3 20be 	strh.w	r2, [r3, #190]	; 0xbe
 800198e:	4b62      	ldr	r3, [pc, #392]	; (8001b18 <Create_Nodes+0x6b4>)
 8001990:	2200      	movs	r2, #0
 8001992:	f8a3 20c0 	strh.w	r2, [r3, #192]	; 0xc0
 8001996:	4b60      	ldr	r3, [pc, #384]	; (8001b18 <Create_Nodes+0x6b4>)
 8001998:	2200      	movs	r2, #0
 800199a:	f8a3 20c2 	strh.w	r2, [r3, #194]	; 0xc2
	N('E').middle=NEIGHBOUR3;
 800199e:	4b5e      	ldr	r3, [pc, #376]	; (8001b18 <Create_Nodes+0x6b4>)
 80019a0:	2202      	movs	r2, #2
 80019a2:	f883 20c4 	strb.w	r2, [r3, #196]	; 0xc4

	//F node
	N('F').worth=2;
 80019a6:	4b5c      	ldr	r3, [pc, #368]	; (8001b18 <Create_Nodes+0x6b4>)
 80019a8:	2202      	movs	r2, #2
 80019aa:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
	N('F').type=1;
 80019ae:	4b5a      	ldr	r3, [pc, #360]	; (8001b18 <Create_Nodes+0x6b4>)
 80019b0:	2201      	movs	r2, #1
 80019b2:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
	VALUE_2(N('F').neighbours,'H',0,'C','D','G','I');
 80019b6:	4b58      	ldr	r3, [pc, #352]	; (8001b18 <Create_Nodes+0x6b4>)
 80019b8:	2248      	movs	r2, #72	; 0x48
 80019ba:	f883 20d4 	strb.w	r2, [r3, #212]	; 0xd4
 80019be:	4b56      	ldr	r3, [pc, #344]	; (8001b18 <Create_Nodes+0x6b4>)
 80019c0:	2200      	movs	r2, #0
 80019c2:	f883 20d5 	strb.w	r2, [r3, #213]	; 0xd5
 80019c6:	4b54      	ldr	r3, [pc, #336]	; (8001b18 <Create_Nodes+0x6b4>)
 80019c8:	2243      	movs	r2, #67	; 0x43
 80019ca:	f883 20d6 	strb.w	r2, [r3, #214]	; 0xd6
 80019ce:	4b52      	ldr	r3, [pc, #328]	; (8001b18 <Create_Nodes+0x6b4>)
 80019d0:	2244      	movs	r2, #68	; 0x44
 80019d2:	f883 20d7 	strb.w	r2, [r3, #215]	; 0xd7
 80019d6:	4b50      	ldr	r3, [pc, #320]	; (8001b18 <Create_Nodes+0x6b4>)
 80019d8:	2247      	movs	r2, #71	; 0x47
 80019da:	f883 20d8 	strb.w	r2, [r3, #216]	; 0xd8
 80019de:	4b4e      	ldr	r3, [pc, #312]	; (8001b18 <Create_Nodes+0x6b4>)
 80019e0:	2249      	movs	r2, #73	; 0x49
 80019e2:	f883 20d9 	strb.w	r2, [r3, #217]	; 0xd9
	VALUE_2(N('F').directions,1,0,2,2,2,1);
 80019e6:	4b4c      	ldr	r3, [pc, #304]	; (8001b18 <Create_Nodes+0x6b4>)
 80019e8:	2201      	movs	r2, #1
 80019ea:	f883 20da 	strb.w	r2, [r3, #218]	; 0xda
 80019ee:	4b4a      	ldr	r3, [pc, #296]	; (8001b18 <Create_Nodes+0x6b4>)
 80019f0:	2200      	movs	r2, #0
 80019f2:	f883 20db 	strb.w	r2, [r3, #219]	; 0xdb
 80019f6:	4b48      	ldr	r3, [pc, #288]	; (8001b18 <Create_Nodes+0x6b4>)
 80019f8:	2202      	movs	r2, #2
 80019fa:	f883 20dc 	strb.w	r2, [r3, #220]	; 0xdc
 80019fe:	4b46      	ldr	r3, [pc, #280]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a00:	2202      	movs	r2, #2
 8001a02:	f883 20dd 	strb.w	r2, [r3, #221]	; 0xdd
 8001a06:	4b44      	ldr	r3, [pc, #272]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a08:	2202      	movs	r2, #2
 8001a0a:	f883 20de 	strb.w	r2, [r3, #222]	; 0xde
 8001a0e:	4b42      	ldr	r3, [pc, #264]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a10:	2201      	movs	r2, #1
 8001a12:	f883 20df 	strb.w	r2, [r3, #223]	; 0xdf
	VALUE_2(N('F').distance,200,0,198,197,241,198);
 8001a16:	4b40      	ldr	r3, [pc, #256]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a18:	22c8      	movs	r2, #200	; 0xc8
 8001a1a:	f8a3 20e0 	strh.w	r2, [r3, #224]	; 0xe0
 8001a1e:	4b3e      	ldr	r3, [pc, #248]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a20:	2200      	movs	r2, #0
 8001a22:	f8a3 20e2 	strh.w	r2, [r3, #226]	; 0xe2
 8001a26:	4b3c      	ldr	r3, [pc, #240]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a28:	22c6      	movs	r2, #198	; 0xc6
 8001a2a:	f8a3 20e4 	strh.w	r2, [r3, #228]	; 0xe4
 8001a2e:	4b3a      	ldr	r3, [pc, #232]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a30:	22c5      	movs	r2, #197	; 0xc5
 8001a32:	f8a3 20e6 	strh.w	r2, [r3, #230]	; 0xe6
 8001a36:	4b38      	ldr	r3, [pc, #224]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a38:	22f1      	movs	r2, #241	; 0xf1
 8001a3a:	f8a3 20e8 	strh.w	r2, [r3, #232]	; 0xe8
 8001a3e:	4b36      	ldr	r3, [pc, #216]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a40:	22c6      	movs	r2, #198	; 0xc6
 8001a42:	f8a3 20ea 	strh.w	r2, [r3, #234]	; 0xea
	N('F').middle=NEIGHBOUR6;
 8001a46:	4b34      	ldr	r3, [pc, #208]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a48:	2205      	movs	r2, #5
 8001a4a:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec

	//G node
	N('G').worth=2;
 8001a4e:	4b32      	ldr	r3, [pc, #200]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a50:	2202      	movs	r2, #2
 8001a52:	f8c3 20f4 	str.w	r2, [r3, #244]	; 0xf4
	N('G').type=1;
 8001a56:	4b30      	ldr	r3, [pc, #192]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a58:	2201      	movs	r2, #1
 8001a5a:	f8c3 20f8 	str.w	r2, [r3, #248]	; 0xf8
	VALUE_2(N('G').neighbours,'I','F','D','E',0,'J');
 8001a5e:	4b2e      	ldr	r3, [pc, #184]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a60:	2249      	movs	r2, #73	; 0x49
 8001a62:	f883 20fc 	strb.w	r2, [r3, #252]	; 0xfc
 8001a66:	4b2c      	ldr	r3, [pc, #176]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a68:	2246      	movs	r2, #70	; 0x46
 8001a6a:	f883 20fd 	strb.w	r2, [r3, #253]	; 0xfd
 8001a6e:	4b2a      	ldr	r3, [pc, #168]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a70:	2244      	movs	r2, #68	; 0x44
 8001a72:	f883 20fe 	strb.w	r2, [r3, #254]	; 0xfe
 8001a76:	4b28      	ldr	r3, [pc, #160]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a78:	2245      	movs	r2, #69	; 0x45
 8001a7a:	f883 20ff 	strb.w	r2, [r3, #255]	; 0xff
 8001a7e:	4b26      	ldr	r3, [pc, #152]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a80:	2200      	movs	r2, #0
 8001a82:	f883 2100 	strb.w	r2, [r3, #256]	; 0x100
 8001a86:	4b24      	ldr	r3, [pc, #144]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a88:	224a      	movs	r2, #74	; 0x4a
 8001a8a:	f883 2101 	strb.w	r2, [r3, #257]	; 0x101
	VALUE_2(N('G').directions,1,1,2,2,0,1);
 8001a8e:	4b22      	ldr	r3, [pc, #136]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a90:	2201      	movs	r2, #1
 8001a92:	f883 2102 	strb.w	r2, [r3, #258]	; 0x102
 8001a96:	4b20      	ldr	r3, [pc, #128]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a98:	2201      	movs	r2, #1
 8001a9a:	f883 2103 	strb.w	r2, [r3, #259]	; 0x103
 8001a9e:	4b1e      	ldr	r3, [pc, #120]	; (8001b18 <Create_Nodes+0x6b4>)
 8001aa0:	2202      	movs	r2, #2
 8001aa2:	f883 2104 	strb.w	r2, [r3, #260]	; 0x104
 8001aa6:	4b1c      	ldr	r3, [pc, #112]	; (8001b18 <Create_Nodes+0x6b4>)
 8001aa8:	2202      	movs	r2, #2
 8001aaa:	f883 2105 	strb.w	r2, [r3, #261]	; 0x105
 8001aae:	4b1a      	ldr	r3, [pc, #104]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ab0:	2200      	movs	r2, #0
 8001ab2:	f883 2106 	strb.w	r2, [r3, #262]	; 0x106
 8001ab6:	4b18      	ldr	r3, [pc, #96]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ab8:	2201      	movs	r2, #1
 8001aba:	f883 2107 	strb.w	r2, [r3, #263]	; 0x107
	VALUE_2(N('G').distance,199,241,197,197,0,198);
 8001abe:	4b16      	ldr	r3, [pc, #88]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ac0:	22c7      	movs	r2, #199	; 0xc7
 8001ac2:	f8a3 2108 	strh.w	r2, [r3, #264]	; 0x108
 8001ac6:	4b14      	ldr	r3, [pc, #80]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ac8:	22f1      	movs	r2, #241	; 0xf1
 8001aca:	f8a3 210a 	strh.w	r2, [r3, #266]	; 0x10a
 8001ace:	4b12      	ldr	r3, [pc, #72]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ad0:	22c5      	movs	r2, #197	; 0xc5
 8001ad2:	f8a3 210c 	strh.w	r2, [r3, #268]	; 0x10c
 8001ad6:	4b10      	ldr	r3, [pc, #64]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ad8:	22c5      	movs	r2, #197	; 0xc5
 8001ada:	f8a3 210e 	strh.w	r2, [r3, #270]	; 0x10e
 8001ade:	4b0e      	ldr	r3, [pc, #56]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ae0:	2200      	movs	r2, #0
 8001ae2:	f8a3 2110 	strh.w	r2, [r3, #272]	; 0x110
 8001ae6:	4b0c      	ldr	r3, [pc, #48]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ae8:	22c6      	movs	r2, #198	; 0xc6
 8001aea:	f8a3 2112 	strh.w	r2, [r3, #274]	; 0x112
	N('G').middle=NEIGHBOUR1;
 8001aee:	4b0a      	ldr	r3, [pc, #40]	; (8001b18 <Create_Nodes+0x6b4>)
 8001af0:	2200      	movs	r2, #0
 8001af2:	f883 2114 	strb.w	r2, [r3, #276]	; 0x114

	//H node
	N('H').worth=2;
 8001af6:	4b08      	ldr	r3, [pc, #32]	; (8001b18 <Create_Nodes+0x6b4>)
 8001af8:	2202      	movs	r2, #2
 8001afa:	f8c3 211c 	str.w	r2, [r3, #284]	; 0x11c
	N('H').type=2;
 8001afe:	4b06      	ldr	r3, [pc, #24]	; (8001b18 <Create_Nodes+0x6b4>)
 8001b00:	2202      	movs	r2, #2
 8001b02:	f8c3 2120 	str.w	r2, [r3, #288]	; 0x120
	VALUE_2(N('H').neighbours,'K',0,'M',0,0,'F');
 8001b06:	4b04      	ldr	r3, [pc, #16]	; (8001b18 <Create_Nodes+0x6b4>)
 8001b08:	224b      	movs	r2, #75	; 0x4b
 8001b0a:	f883 2124 	strb.w	r2, [r3, #292]	; 0x124
 8001b0e:	4b02      	ldr	r3, [pc, #8]	; (8001b18 <Create_Nodes+0x6b4>)
 8001b10:	2200      	movs	r2, #0
 8001b12:	f883 2125 	strb.w	r2, [r3, #293]	; 0x125
 8001b16:	e001      	b.n	8001b1c <Create_Nodes+0x6b8>
 8001b18:	20000360 	.word	0x20000360
 8001b1c:	4bca      	ldr	r3, [pc, #808]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b1e:	224d      	movs	r2, #77	; 0x4d
 8001b20:	f883 2126 	strb.w	r2, [r3, #294]	; 0x126
 8001b24:	4bc8      	ldr	r3, [pc, #800]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b26:	2200      	movs	r2, #0
 8001b28:	f883 2127 	strb.w	r2, [r3, #295]	; 0x127
 8001b2c:	4bc6      	ldr	r3, [pc, #792]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b2e:	2200      	movs	r2, #0
 8001b30:	f883 2128 	strb.w	r2, [r3, #296]	; 0x128
 8001b34:	4bc4      	ldr	r3, [pc, #784]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b36:	2246      	movs	r2, #70	; 0x46
 8001b38:	f883 2129 	strb.w	r2, [r3, #297]	; 0x129
	VALUE_2(N('H').directions,2,0,1,0,0,2);
 8001b3c:	4bc2      	ldr	r3, [pc, #776]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b3e:	2202      	movs	r2, #2
 8001b40:	f883 212a 	strb.w	r2, [r3, #298]	; 0x12a
 8001b44:	4bc0      	ldr	r3, [pc, #768]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b46:	2200      	movs	r2, #0
 8001b48:	f883 212b 	strb.w	r2, [r3, #299]	; 0x12b
 8001b4c:	4bbe      	ldr	r3, [pc, #760]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b4e:	2201      	movs	r2, #1
 8001b50:	f883 212c 	strb.w	r2, [r3, #300]	; 0x12c
 8001b54:	4bbc      	ldr	r3, [pc, #752]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b56:	2200      	movs	r2, #0
 8001b58:	f883 212d 	strb.w	r2, [r3, #301]	; 0x12d
 8001b5c:	4bba      	ldr	r3, [pc, #744]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b5e:	2200      	movs	r2, #0
 8001b60:	f883 212e 	strb.w	r2, [r3, #302]	; 0x12e
 8001b64:	4bb8      	ldr	r3, [pc, #736]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b66:	2202      	movs	r2, #2
 8001b68:	f883 212f 	strb.w	r2, [r3, #303]	; 0x12f
	VALUE_2(N('H').distance,198,0,241,0,0,200);
 8001b6c:	4bb6      	ldr	r3, [pc, #728]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b6e:	22c6      	movs	r2, #198	; 0xc6
 8001b70:	f8a3 2130 	strh.w	r2, [r3, #304]	; 0x130
 8001b74:	4bb4      	ldr	r3, [pc, #720]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b76:	2200      	movs	r2, #0
 8001b78:	f8a3 2132 	strh.w	r2, [r3, #306]	; 0x132
 8001b7c:	4bb2      	ldr	r3, [pc, #712]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b7e:	22f1      	movs	r2, #241	; 0xf1
 8001b80:	f8a3 2134 	strh.w	r2, [r3, #308]	; 0x134
 8001b84:	4bb0      	ldr	r3, [pc, #704]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b86:	2200      	movs	r2, #0
 8001b88:	f8a3 2136 	strh.w	r2, [r3, #310]	; 0x136
 8001b8c:	4bae      	ldr	r3, [pc, #696]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b8e:	2200      	movs	r2, #0
 8001b90:	f8a3 2138 	strh.w	r2, [r3, #312]	; 0x138
 8001b94:	4bac      	ldr	r3, [pc, #688]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b96:	22c8      	movs	r2, #200	; 0xc8
 8001b98:	f8a3 213a 	strh.w	r2, [r3, #314]	; 0x13a
	N('H').middle=NEIGHBOUR1;
 8001b9c:	4baa      	ldr	r3, [pc, #680]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b9e:	2200      	movs	r2, #0
 8001ba0:	f883 213c 	strb.w	r2, [r3, #316]	; 0x13c

	//I node
	N('I').worth=2;
 8001ba4:	4ba8      	ldr	r3, [pc, #672]	; (8001e48 <Create_Nodes+0x9e4>)
 8001ba6:	2202      	movs	r2, #2
 8001ba8:	f8c3 2144 	str.w	r2, [r3, #324]	; 0x144
	N('I').type=2;
 8001bac:	4ba6      	ldr	r3, [pc, #664]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bae:	2202      	movs	r2, #2
 8001bb0:	f8c3 2148 	str.w	r2, [r3, #328]	; 0x148
	VALUE_2(N('I').neighbours,'L','N','K','F','D','G');
 8001bb4:	4ba4      	ldr	r3, [pc, #656]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bb6:	224c      	movs	r2, #76	; 0x4c
 8001bb8:	f883 214c 	strb.w	r2, [r3, #332]	; 0x14c
 8001bbc:	4ba2      	ldr	r3, [pc, #648]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bbe:	224e      	movs	r2, #78	; 0x4e
 8001bc0:	f883 214d 	strb.w	r2, [r3, #333]	; 0x14d
 8001bc4:	4ba0      	ldr	r3, [pc, #640]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bc6:	224b      	movs	r2, #75	; 0x4b
 8001bc8:	f883 214e 	strb.w	r2, [r3, #334]	; 0x14e
 8001bcc:	4b9e      	ldr	r3, [pc, #632]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bce:	2246      	movs	r2, #70	; 0x46
 8001bd0:	f883 214f 	strb.w	r2, [r3, #335]	; 0x14f
 8001bd4:	4b9c      	ldr	r3, [pc, #624]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bd6:	2244      	movs	r2, #68	; 0x44
 8001bd8:	f883 2150 	strb.w	r2, [r3, #336]	; 0x150
 8001bdc:	4b9a      	ldr	r3, [pc, #616]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bde:	2247      	movs	r2, #71	; 0x47
 8001be0:	f883 2151 	strb.w	r2, [r3, #337]	; 0x151
	VALUE_2(N('I').directions,2,1,1,1,2,2);
 8001be4:	4b98      	ldr	r3, [pc, #608]	; (8001e48 <Create_Nodes+0x9e4>)
 8001be6:	2202      	movs	r2, #2
 8001be8:	f883 2152 	strb.w	r2, [r3, #338]	; 0x152
 8001bec:	4b96      	ldr	r3, [pc, #600]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bee:	2201      	movs	r2, #1
 8001bf0:	f883 2153 	strb.w	r2, [r3, #339]	; 0x153
 8001bf4:	4b94      	ldr	r3, [pc, #592]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bf6:	2201      	movs	r2, #1
 8001bf8:	f883 2154 	strb.w	r2, [r3, #340]	; 0x154
 8001bfc:	4b92      	ldr	r3, [pc, #584]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bfe:	2201      	movs	r2, #1
 8001c00:	f883 2155 	strb.w	r2, [r3, #341]	; 0x155
 8001c04:	4b90      	ldr	r3, [pc, #576]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c06:	2202      	movs	r2, #2
 8001c08:	f883 2156 	strb.w	r2, [r3, #342]	; 0x156
 8001c0c:	4b8e      	ldr	r3, [pc, #568]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c0e:	2202      	movs	r2, #2
 8001c10:	f883 2157 	strb.w	r2, [r3, #343]	; 0x157
	VALUE_2(N('I').distance,198,241,197,198,241,199);
 8001c14:	4b8c      	ldr	r3, [pc, #560]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c16:	22c6      	movs	r2, #198	; 0xc6
 8001c18:	f8a3 2158 	strh.w	r2, [r3, #344]	; 0x158
 8001c1c:	4b8a      	ldr	r3, [pc, #552]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c1e:	22f1      	movs	r2, #241	; 0xf1
 8001c20:	f8a3 215a 	strh.w	r2, [r3, #346]	; 0x15a
 8001c24:	4b88      	ldr	r3, [pc, #544]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c26:	22c5      	movs	r2, #197	; 0xc5
 8001c28:	f8a3 215c 	strh.w	r2, [r3, #348]	; 0x15c
 8001c2c:	4b86      	ldr	r3, [pc, #536]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c2e:	22c6      	movs	r2, #198	; 0xc6
 8001c30:	f8a3 215e 	strh.w	r2, [r3, #350]	; 0x15e
 8001c34:	4b84      	ldr	r3, [pc, #528]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c36:	22f1      	movs	r2, #241	; 0xf1
 8001c38:	f8a3 2160 	strh.w	r2, [r3, #352]	; 0x160
 8001c3c:	4b82      	ldr	r3, [pc, #520]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c3e:	22c7      	movs	r2, #199	; 0xc7
 8001c40:	f8a3 2162 	strh.w	r2, [r3, #354]	; 0x162
	N('I').middle=NEIGHBOUR6;
 8001c44:	4b80      	ldr	r3, [pc, #512]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c46:	2205      	movs	r2, #5
 8001c48:	f883 2164 	strb.w	r2, [r3, #356]	; 0x164

	//J node
	N('J').worth=2;
 8001c4c:	4b7e      	ldr	r3, [pc, #504]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c4e:	2202      	movs	r2, #2
 8001c50:	f8c3 216c 	str.w	r2, [r3, #364]	; 0x16c
	N('J').type=2;
 8001c54:	4b7c      	ldr	r3, [pc, #496]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c56:	2202      	movs	r2, #2
 8001c58:	f8c3 2170 	str.w	r2, [r3, #368]	; 0x170
	VALUE_2(N('J').neighbours,0,0,'L','G',0,'E');
 8001c5c:	4b7a      	ldr	r3, [pc, #488]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c5e:	2200      	movs	r2, #0
 8001c60:	f883 2174 	strb.w	r2, [r3, #372]	; 0x174
 8001c64:	4b78      	ldr	r3, [pc, #480]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c66:	2200      	movs	r2, #0
 8001c68:	f883 2175 	strb.w	r2, [r3, #373]	; 0x175
 8001c6c:	4b76      	ldr	r3, [pc, #472]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c6e:	224c      	movs	r2, #76	; 0x4c
 8001c70:	f883 2176 	strb.w	r2, [r3, #374]	; 0x176
 8001c74:	4b74      	ldr	r3, [pc, #464]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c76:	2247      	movs	r2, #71	; 0x47
 8001c78:	f883 2177 	strb.w	r2, [r3, #375]	; 0x177
 8001c7c:	4b72      	ldr	r3, [pc, #456]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c7e:	2200      	movs	r2, #0
 8001c80:	f883 2178 	strb.w	r2, [r3, #376]	; 0x178
 8001c84:	4b70      	ldr	r3, [pc, #448]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c86:	2245      	movs	r2, #69	; 0x45
 8001c88:	f883 2179 	strb.w	r2, [r3, #377]	; 0x179
	VALUE_2(N('J').directions,0,0,1,1,0,2);
 8001c8c:	4b6e      	ldr	r3, [pc, #440]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c8e:	2200      	movs	r2, #0
 8001c90:	f883 217a 	strb.w	r2, [r3, #378]	; 0x17a
 8001c94:	4b6c      	ldr	r3, [pc, #432]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c96:	2200      	movs	r2, #0
 8001c98:	f883 217b 	strb.w	r2, [r3, #379]	; 0x17b
 8001c9c:	4b6a      	ldr	r3, [pc, #424]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c9e:	2201      	movs	r2, #1
 8001ca0:	f883 217c 	strb.w	r2, [r3, #380]	; 0x17c
 8001ca4:	4b68      	ldr	r3, [pc, #416]	; (8001e48 <Create_Nodes+0x9e4>)
 8001ca6:	2201      	movs	r2, #1
 8001ca8:	f883 217d 	strb.w	r2, [r3, #381]	; 0x17d
 8001cac:	4b66      	ldr	r3, [pc, #408]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cae:	2200      	movs	r2, #0
 8001cb0:	f883 217e 	strb.w	r2, [r3, #382]	; 0x17e
 8001cb4:	4b64      	ldr	r3, [pc, #400]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cb6:	2202      	movs	r2, #2
 8001cb8:	f883 217f 	strb.w	r2, [r3, #383]	; 0x17f
	VALUE_2(N('J').distance,0,0,197,198,0,241);
 8001cbc:	4b62      	ldr	r3, [pc, #392]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cbe:	2200      	movs	r2, #0
 8001cc0:	f8a3 2180 	strh.w	r2, [r3, #384]	; 0x180
 8001cc4:	4b60      	ldr	r3, [pc, #384]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cc6:	2200      	movs	r2, #0
 8001cc8:	f8a3 2182 	strh.w	r2, [r3, #386]	; 0x182
 8001ccc:	4b5e      	ldr	r3, [pc, #376]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cce:	22c5      	movs	r2, #197	; 0xc5
 8001cd0:	f8a3 2184 	strh.w	r2, [r3, #388]	; 0x184
 8001cd4:	4b5c      	ldr	r3, [pc, #368]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cd6:	22c6      	movs	r2, #198	; 0xc6
 8001cd8:	f8a3 2186 	strh.w	r2, [r3, #390]	; 0x186
 8001cdc:	4b5a      	ldr	r3, [pc, #360]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cde:	2200      	movs	r2, #0
 8001ce0:	f8a3 2188 	strh.w	r2, [r3, #392]	; 0x188
 8001ce4:	4b58      	ldr	r3, [pc, #352]	; (8001e48 <Create_Nodes+0x9e4>)
 8001ce6:	22f1      	movs	r2, #241	; 0xf1
 8001ce8:	f8a3 218a 	strh.w	r2, [r3, #394]	; 0x18a
	N('J').middle=NEIGHBOUR4;
 8001cec:	4b56      	ldr	r3, [pc, #344]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cee:	2203      	movs	r2, #3
 8001cf0:	f883 218c 	strb.w	r2, [r3, #396]	; 0x18c

	//K node
	N('K').worth=2;
 8001cf4:	4b54      	ldr	r3, [pc, #336]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cf6:	2202      	movs	r2, #2
 8001cf8:	f8c3 2194 	str.w	r2, [r3, #404]	; 0x194
	N('K').type=1;
 8001cfc:	4b52      	ldr	r3, [pc, #328]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cfe:	2201      	movs	r2, #1
 8001d00:	f8c3 2198 	str.w	r2, [r3, #408]	; 0x198
	VALUE_2(N('K').neighbours,'M',0,'H','I','L','N');
 8001d04:	4b50      	ldr	r3, [pc, #320]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d06:	224d      	movs	r2, #77	; 0x4d
 8001d08:	f883 219c 	strb.w	r2, [r3, #412]	; 0x19c
 8001d0c:	4b4e      	ldr	r3, [pc, #312]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d0e:	2200      	movs	r2, #0
 8001d10:	f883 219d 	strb.w	r2, [r3, #413]	; 0x19d
 8001d14:	4b4c      	ldr	r3, [pc, #304]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d16:	2248      	movs	r2, #72	; 0x48
 8001d18:	f883 219e 	strb.w	r2, [r3, #414]	; 0x19e
 8001d1c:	4b4a      	ldr	r3, [pc, #296]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d1e:	2249      	movs	r2, #73	; 0x49
 8001d20:	f883 219f 	strb.w	r2, [r3, #415]	; 0x19f
 8001d24:	4b48      	ldr	r3, [pc, #288]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d26:	224c      	movs	r2, #76	; 0x4c
 8001d28:	f883 21a0 	strb.w	r2, [r3, #416]	; 0x1a0
 8001d2c:	4b46      	ldr	r3, [pc, #280]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d2e:	224e      	movs	r2, #78	; 0x4e
 8001d30:	f883 21a1 	strb.w	r2, [r3, #417]	; 0x1a1
	VALUE_2(N('K').directions,1,0,2,2,2,1);
 8001d34:	4b44      	ldr	r3, [pc, #272]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d36:	2201      	movs	r2, #1
 8001d38:	f883 21a2 	strb.w	r2, [r3, #418]	; 0x1a2
 8001d3c:	4b42      	ldr	r3, [pc, #264]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d3e:	2200      	movs	r2, #0
 8001d40:	f883 21a3 	strb.w	r2, [r3, #419]	; 0x1a3
 8001d44:	4b40      	ldr	r3, [pc, #256]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d46:	2202      	movs	r2, #2
 8001d48:	f883 21a4 	strb.w	r2, [r3, #420]	; 0x1a4
 8001d4c:	4b3e      	ldr	r3, [pc, #248]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d4e:	2202      	movs	r2, #2
 8001d50:	f883 21a5 	strb.w	r2, [r3, #421]	; 0x1a5
 8001d54:	4b3c      	ldr	r3, [pc, #240]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d56:	2202      	movs	r2, #2
 8001d58:	f883 21a6 	strb.w	r2, [r3, #422]	; 0x1a6
 8001d5c:	4b3a      	ldr	r3, [pc, #232]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d5e:	2201      	movs	r2, #1
 8001d60:	f883 21a7 	strb.w	r2, [r3, #423]	; 0x1a7
	VALUE_2(N('K').distance,200,0,198,197,241,198);
 8001d64:	4b38      	ldr	r3, [pc, #224]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d66:	22c8      	movs	r2, #200	; 0xc8
 8001d68:	f8a3 21a8 	strh.w	r2, [r3, #424]	; 0x1a8
 8001d6c:	4b36      	ldr	r3, [pc, #216]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d6e:	2200      	movs	r2, #0
 8001d70:	f8a3 21aa 	strh.w	r2, [r3, #426]	; 0x1aa
 8001d74:	4b34      	ldr	r3, [pc, #208]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d76:	22c6      	movs	r2, #198	; 0xc6
 8001d78:	f8a3 21ac 	strh.w	r2, [r3, #428]	; 0x1ac
 8001d7c:	4b32      	ldr	r3, [pc, #200]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d7e:	22c5      	movs	r2, #197	; 0xc5
 8001d80:	f8a3 21ae 	strh.w	r2, [r3, #430]	; 0x1ae
 8001d84:	4b30      	ldr	r3, [pc, #192]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d86:	22f1      	movs	r2, #241	; 0xf1
 8001d88:	f8a3 21b0 	strh.w	r2, [r3, #432]	; 0x1b0
 8001d8c:	4b2e      	ldr	r3, [pc, #184]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d8e:	22c6      	movs	r2, #198	; 0xc6
 8001d90:	f8a3 21b2 	strh.w	r2, [r3, #434]	; 0x1b2
	N('K').middle=NEIGHBOUR4;
 8001d94:	4b2c      	ldr	r3, [pc, #176]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d96:	2203      	movs	r2, #3
 8001d98:	f883 21b4 	strb.w	r2, [r3, #436]	; 0x1b4

	//L node
	N('L').worth=2;
 8001d9c:	4b2a      	ldr	r3, [pc, #168]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d9e:	2202      	movs	r2, #2
 8001da0:	f8c3 21bc 	str.w	r2, [r3, #444]	; 0x1bc
	N('L').type=2;
 8001da4:	4b28      	ldr	r3, [pc, #160]	; (8001e48 <Create_Nodes+0x9e4>)
 8001da6:	2202      	movs	r2, #2
 8001da8:	f8c3 21c0 	str.w	r2, [r3, #448]	; 0x1c0
	VALUE_2(N('L').neighbours,'N','K','I','J',0,'O');
 8001dac:	4b26      	ldr	r3, [pc, #152]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dae:	224e      	movs	r2, #78	; 0x4e
 8001db0:	f883 21c4 	strb.w	r2, [r3, #452]	; 0x1c4
 8001db4:	4b24      	ldr	r3, [pc, #144]	; (8001e48 <Create_Nodes+0x9e4>)
 8001db6:	224b      	movs	r2, #75	; 0x4b
 8001db8:	f883 21c5 	strb.w	r2, [r3, #453]	; 0x1c5
 8001dbc:	4b22      	ldr	r3, [pc, #136]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dbe:	2249      	movs	r2, #73	; 0x49
 8001dc0:	f883 21c6 	strb.w	r2, [r3, #454]	; 0x1c6
 8001dc4:	4b20      	ldr	r3, [pc, #128]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dc6:	224a      	movs	r2, #74	; 0x4a
 8001dc8:	f883 21c7 	strb.w	r2, [r3, #455]	; 0x1c7
 8001dcc:	4b1e      	ldr	r3, [pc, #120]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dce:	2200      	movs	r2, #0
 8001dd0:	f883 21c8 	strb.w	r2, [r3, #456]	; 0x1c8
 8001dd4:	4b1c      	ldr	r3, [pc, #112]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dd6:	224f      	movs	r2, #79	; 0x4f
 8001dd8:	f883 21c9 	strb.w	r2, [r3, #457]	; 0x1c9
	VALUE_2(N('L').directions,1,1,2,2,0,1);
 8001ddc:	4b1a      	ldr	r3, [pc, #104]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dde:	2201      	movs	r2, #1
 8001de0:	f883 21ca 	strb.w	r2, [r3, #458]	; 0x1ca
 8001de4:	4b18      	ldr	r3, [pc, #96]	; (8001e48 <Create_Nodes+0x9e4>)
 8001de6:	2201      	movs	r2, #1
 8001de8:	f883 21cb 	strb.w	r2, [r3, #459]	; 0x1cb
 8001dec:	4b16      	ldr	r3, [pc, #88]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dee:	2202      	movs	r2, #2
 8001df0:	f883 21cc 	strb.w	r2, [r3, #460]	; 0x1cc
 8001df4:	4b14      	ldr	r3, [pc, #80]	; (8001e48 <Create_Nodes+0x9e4>)
 8001df6:	2202      	movs	r2, #2
 8001df8:	f883 21cd 	strb.w	r2, [r3, #461]	; 0x1cd
 8001dfc:	4b12      	ldr	r3, [pc, #72]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dfe:	2200      	movs	r2, #0
 8001e00:	f883 21ce 	strb.w	r2, [r3, #462]	; 0x1ce
 8001e04:	4b10      	ldr	r3, [pc, #64]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e06:	2201      	movs	r2, #1
 8001e08:	f883 21cf 	strb.w	r2, [r3, #463]	; 0x1cf
	VALUE_2(N('L').distance,199,241,198,197,0,198);
 8001e0c:	4b0e      	ldr	r3, [pc, #56]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e0e:	22c7      	movs	r2, #199	; 0xc7
 8001e10:	f8a3 21d0 	strh.w	r2, [r3, #464]	; 0x1d0
 8001e14:	4b0c      	ldr	r3, [pc, #48]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e16:	22f1      	movs	r2, #241	; 0xf1
 8001e18:	f8a3 21d2 	strh.w	r2, [r3, #466]	; 0x1d2
 8001e1c:	4b0a      	ldr	r3, [pc, #40]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e1e:	22c6      	movs	r2, #198	; 0xc6
 8001e20:	f8a3 21d4 	strh.w	r2, [r3, #468]	; 0x1d4
 8001e24:	4b08      	ldr	r3, [pc, #32]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e26:	22c5      	movs	r2, #197	; 0xc5
 8001e28:	f8a3 21d6 	strh.w	r2, [r3, #470]	; 0x1d6
 8001e2c:	4b06      	ldr	r3, [pc, #24]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e2e:	2200      	movs	r2, #0
 8001e30:	f8a3 21d8 	strh.w	r2, [r3, #472]	; 0x1d8
 8001e34:	4b04      	ldr	r3, [pc, #16]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e36:	22c6      	movs	r2, #198	; 0xc6
 8001e38:	f8a3 21da 	strh.w	r2, [r3, #474]	; 0x1da
	N('L').middle=NEIGHBOUR3;
 8001e3c:	4b02      	ldr	r3, [pc, #8]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e3e:	2202      	movs	r2, #2
 8001e40:	f883 21dc 	strb.w	r2, [r3, #476]	; 0x1dc
 8001e44:	e002      	b.n	8001e4c <Create_Nodes+0x9e8>
 8001e46:	bf00      	nop
 8001e48:	20000360 	.word	0x20000360

	//M node
	N('M').worth=2;
 8001e4c:	4bcb      	ldr	r3, [pc, #812]	; (800217c <Create_Nodes+0xd18>)
 8001e4e:	2202      	movs	r2, #2
 8001e50:	f8c3 21e4 	str.w	r2, [r3, #484]	; 0x1e4
	N('M').type=2;
 8001e54:	4bc9      	ldr	r3, [pc, #804]	; (800217c <Create_Nodes+0xd18>)
 8001e56:	2202      	movs	r2, #2
 8001e58:	f8c3 21e8 	str.w	r2, [r3, #488]	; 0x1e8
	VALUE_2(N('M').neighbours,'P','U',0,'H',0,'K');
 8001e5c:	4bc7      	ldr	r3, [pc, #796]	; (800217c <Create_Nodes+0xd18>)
 8001e5e:	2250      	movs	r2, #80	; 0x50
 8001e60:	f883 21ec 	strb.w	r2, [r3, #492]	; 0x1ec
 8001e64:	4bc5      	ldr	r3, [pc, #788]	; (800217c <Create_Nodes+0xd18>)
 8001e66:	2255      	movs	r2, #85	; 0x55
 8001e68:	f883 21ed 	strb.w	r2, [r3, #493]	; 0x1ed
 8001e6c:	4bc3      	ldr	r3, [pc, #780]	; (800217c <Create_Nodes+0xd18>)
 8001e6e:	2200      	movs	r2, #0
 8001e70:	f883 21ee 	strb.w	r2, [r3, #494]	; 0x1ee
 8001e74:	4bc1      	ldr	r3, [pc, #772]	; (800217c <Create_Nodes+0xd18>)
 8001e76:	2248      	movs	r2, #72	; 0x48
 8001e78:	f883 21ef 	strb.w	r2, [r3, #495]	; 0x1ef
 8001e7c:	4bbf      	ldr	r3, [pc, #764]	; (800217c <Create_Nodes+0xd18>)
 8001e7e:	2200      	movs	r2, #0
 8001e80:	f883 21f0 	strb.w	r2, [r3, #496]	; 0x1f0
 8001e84:	4bbd      	ldr	r3, [pc, #756]	; (800217c <Create_Nodes+0xd18>)
 8001e86:	224b      	movs	r2, #75	; 0x4b
 8001e88:	f883 21f1 	strb.w	r2, [r3, #497]	; 0x1f1
	VALUE_2(N('M').directions,2,2,0,2,0,2);
 8001e8c:	4bbb      	ldr	r3, [pc, #748]	; (800217c <Create_Nodes+0xd18>)
 8001e8e:	2202      	movs	r2, #2
 8001e90:	f883 21f2 	strb.w	r2, [r3, #498]	; 0x1f2
 8001e94:	4bb9      	ldr	r3, [pc, #740]	; (800217c <Create_Nodes+0xd18>)
 8001e96:	2202      	movs	r2, #2
 8001e98:	f883 21f3 	strb.w	r2, [r3, #499]	; 0x1f3
 8001e9c:	4bb7      	ldr	r3, [pc, #732]	; (800217c <Create_Nodes+0xd18>)
 8001e9e:	2200      	movs	r2, #0
 8001ea0:	f883 21f4 	strb.w	r2, [r3, #500]	; 0x1f4
 8001ea4:	4bb5      	ldr	r3, [pc, #724]	; (800217c <Create_Nodes+0xd18>)
 8001ea6:	2202      	movs	r2, #2
 8001ea8:	f883 21f5 	strb.w	r2, [r3, #501]	; 0x1f5
 8001eac:	4bb3      	ldr	r3, [pc, #716]	; (800217c <Create_Nodes+0xd18>)
 8001eae:	2200      	movs	r2, #0
 8001eb0:	f883 21f6 	strb.w	r2, [r3, #502]	; 0x1f6
 8001eb4:	4bb1      	ldr	r3, [pc, #708]	; (800217c <Create_Nodes+0xd18>)
 8001eb6:	2202      	movs	r2, #2
 8001eb8:	f883 21f7 	strb.w	r2, [r3, #503]	; 0x1f7
	VALUE_2(N('M').distance,198,319-25,0,241,0,200);
 8001ebc:	4baf      	ldr	r3, [pc, #700]	; (800217c <Create_Nodes+0xd18>)
 8001ebe:	22c6      	movs	r2, #198	; 0xc6
 8001ec0:	f8a3 21f8 	strh.w	r2, [r3, #504]	; 0x1f8
 8001ec4:	4bad      	ldr	r3, [pc, #692]	; (800217c <Create_Nodes+0xd18>)
 8001ec6:	f44f 7293 	mov.w	r2, #294	; 0x126
 8001eca:	f8a3 21fa 	strh.w	r2, [r3, #506]	; 0x1fa
 8001ece:	4bab      	ldr	r3, [pc, #684]	; (800217c <Create_Nodes+0xd18>)
 8001ed0:	2200      	movs	r2, #0
 8001ed2:	f8a3 21fc 	strh.w	r2, [r3, #508]	; 0x1fc
 8001ed6:	4ba9      	ldr	r3, [pc, #676]	; (800217c <Create_Nodes+0xd18>)
 8001ed8:	22f1      	movs	r2, #241	; 0xf1
 8001eda:	f8a3 21fe 	strh.w	r2, [r3, #510]	; 0x1fe
 8001ede:	4ba7      	ldr	r3, [pc, #668]	; (800217c <Create_Nodes+0xd18>)
 8001ee0:	2200      	movs	r2, #0
 8001ee2:	f8a3 2200 	strh.w	r2, [r3, #512]	; 0x200
 8001ee6:	4ba5      	ldr	r3, [pc, #660]	; (800217c <Create_Nodes+0xd18>)
 8001ee8:	22c8      	movs	r2, #200	; 0xc8
 8001eea:	f8a3 2202 	strh.w	r2, [r3, #514]	; 0x202
	N('M').middle=NEIGHBOUR6;
 8001eee:	4ba3      	ldr	r3, [pc, #652]	; (800217c <Create_Nodes+0xd18>)
 8001ef0:	2205      	movs	r2, #5
 8001ef2:	f883 2204 	strb.w	r2, [r3, #516]	; 0x204

	//N node
	N('N').worth=2;
 8001ef6:	4ba1      	ldr	r3, [pc, #644]	; (800217c <Create_Nodes+0xd18>)
 8001ef8:	2202      	movs	r2, #2
 8001efa:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
	N('N').type=2;
 8001efe:	4b9f      	ldr	r3, [pc, #636]	; (800217c <Create_Nodes+0xd18>)
 8001f00:	2202      	movs	r2, #2
 8001f02:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210
	VALUE_2(N('N').neighbours,'Q','T','P','K','I','L');
 8001f06:	4b9d      	ldr	r3, [pc, #628]	; (800217c <Create_Nodes+0xd18>)
 8001f08:	2251      	movs	r2, #81	; 0x51
 8001f0a:	f883 2214 	strb.w	r2, [r3, #532]	; 0x214
 8001f0e:	4b9b      	ldr	r3, [pc, #620]	; (800217c <Create_Nodes+0xd18>)
 8001f10:	2254      	movs	r2, #84	; 0x54
 8001f12:	f883 2215 	strb.w	r2, [r3, #533]	; 0x215
 8001f16:	4b99      	ldr	r3, [pc, #612]	; (800217c <Create_Nodes+0xd18>)
 8001f18:	2250      	movs	r2, #80	; 0x50
 8001f1a:	f883 2216 	strb.w	r2, [r3, #534]	; 0x216
 8001f1e:	4b97      	ldr	r3, [pc, #604]	; (800217c <Create_Nodes+0xd18>)
 8001f20:	224b      	movs	r2, #75	; 0x4b
 8001f22:	f883 2217 	strb.w	r2, [r3, #535]	; 0x217
 8001f26:	4b95      	ldr	r3, [pc, #596]	; (800217c <Create_Nodes+0xd18>)
 8001f28:	2249      	movs	r2, #73	; 0x49
 8001f2a:	f883 2218 	strb.w	r2, [r3, #536]	; 0x218
 8001f2e:	4b93      	ldr	r3, [pc, #588]	; (800217c <Create_Nodes+0xd18>)
 8001f30:	224c      	movs	r2, #76	; 0x4c
 8001f32:	f883 2219 	strb.w	r2, [r3, #537]	; 0x219
	VALUE_2(N('N').directions,2,1,1,1,2,2);
 8001f36:	4b91      	ldr	r3, [pc, #580]	; (800217c <Create_Nodes+0xd18>)
 8001f38:	2202      	movs	r2, #2
 8001f3a:	f883 221a 	strb.w	r2, [r3, #538]	; 0x21a
 8001f3e:	4b8f      	ldr	r3, [pc, #572]	; (800217c <Create_Nodes+0xd18>)
 8001f40:	2201      	movs	r2, #1
 8001f42:	f883 221b 	strb.w	r2, [r3, #539]	; 0x21b
 8001f46:	4b8d      	ldr	r3, [pc, #564]	; (800217c <Create_Nodes+0xd18>)
 8001f48:	2201      	movs	r2, #1
 8001f4a:	f883 221c 	strb.w	r2, [r3, #540]	; 0x21c
 8001f4e:	4b8b      	ldr	r3, [pc, #556]	; (800217c <Create_Nodes+0xd18>)
 8001f50:	2201      	movs	r2, #1
 8001f52:	f883 221d 	strb.w	r2, [r3, #541]	; 0x21d
 8001f56:	4b89      	ldr	r3, [pc, #548]	; (800217c <Create_Nodes+0xd18>)
 8001f58:	2202      	movs	r2, #2
 8001f5a:	f883 221e 	strb.w	r2, [r3, #542]	; 0x21e
 8001f5e:	4b87      	ldr	r3, [pc, #540]	; (800217c <Create_Nodes+0xd18>)
 8001f60:	2202      	movs	r2, #2
 8001f62:	f883 221f 	strb.w	r2, [r3, #543]	; 0x21f
	VALUE_2(N('N').distance,198,120-25,197,198,241,199);
 8001f66:	4b85      	ldr	r3, [pc, #532]	; (800217c <Create_Nodes+0xd18>)
 8001f68:	22c6      	movs	r2, #198	; 0xc6
 8001f6a:	f8a3 2220 	strh.w	r2, [r3, #544]	; 0x220
 8001f6e:	4b83      	ldr	r3, [pc, #524]	; (800217c <Create_Nodes+0xd18>)
 8001f70:	225f      	movs	r2, #95	; 0x5f
 8001f72:	f8a3 2222 	strh.w	r2, [r3, #546]	; 0x222
 8001f76:	4b81      	ldr	r3, [pc, #516]	; (800217c <Create_Nodes+0xd18>)
 8001f78:	22c5      	movs	r2, #197	; 0xc5
 8001f7a:	f8a3 2224 	strh.w	r2, [r3, #548]	; 0x224
 8001f7e:	4b7f      	ldr	r3, [pc, #508]	; (800217c <Create_Nodes+0xd18>)
 8001f80:	22c6      	movs	r2, #198	; 0xc6
 8001f82:	f8a3 2226 	strh.w	r2, [r3, #550]	; 0x226
 8001f86:	4b7d      	ldr	r3, [pc, #500]	; (800217c <Create_Nodes+0xd18>)
 8001f88:	22f1      	movs	r2, #241	; 0xf1
 8001f8a:	f8a3 2228 	strh.w	r2, [r3, #552]	; 0x228
 8001f8e:	4b7b      	ldr	r3, [pc, #492]	; (800217c <Create_Nodes+0xd18>)
 8001f90:	22c7      	movs	r2, #199	; 0xc7
 8001f92:	f8a3 222a 	strh.w	r2, [r3, #554]	; 0x22a
	N('N').middle=NEIGHBOUR4;
 8001f96:	4b79      	ldr	r3, [pc, #484]	; (800217c <Create_Nodes+0xd18>)
 8001f98:	2203      	movs	r2, #3
 8001f9a:	f883 222c 	strb.w	r2, [r3, #556]	; 0x22c

	//O node
	N('O').worth=2;
 8001f9e:	4b77      	ldr	r3, [pc, #476]	; (800217c <Create_Nodes+0xd18>)
 8001fa0:	2202      	movs	r2, #2
 8001fa2:	f8c3 2234 	str.w	r2, [r3, #564]	; 0x234
	N('O').type=2;
 8001fa6:	4b75      	ldr	r3, [pc, #468]	; (800217c <Create_Nodes+0xd18>)
 8001fa8:	2202      	movs	r2, #2
 8001faa:	f8c3 2238 	str.w	r2, [r3, #568]	; 0x238
	VALUE_2(N('O').neighbours,0,'V','Q','L',0,0);
 8001fae:	4b73      	ldr	r3, [pc, #460]	; (800217c <Create_Nodes+0xd18>)
 8001fb0:	2200      	movs	r2, #0
 8001fb2:	f883 223c 	strb.w	r2, [r3, #572]	; 0x23c
 8001fb6:	4b71      	ldr	r3, [pc, #452]	; (800217c <Create_Nodes+0xd18>)
 8001fb8:	2256      	movs	r2, #86	; 0x56
 8001fba:	f883 223d 	strb.w	r2, [r3, #573]	; 0x23d
 8001fbe:	4b6f      	ldr	r3, [pc, #444]	; (800217c <Create_Nodes+0xd18>)
 8001fc0:	2251      	movs	r2, #81	; 0x51
 8001fc2:	f883 223e 	strb.w	r2, [r3, #574]	; 0x23e
 8001fc6:	4b6d      	ldr	r3, [pc, #436]	; (800217c <Create_Nodes+0xd18>)
 8001fc8:	224c      	movs	r2, #76	; 0x4c
 8001fca:	f883 223f 	strb.w	r2, [r3, #575]	; 0x23f
 8001fce:	4b6b      	ldr	r3, [pc, #428]	; (800217c <Create_Nodes+0xd18>)
 8001fd0:	2200      	movs	r2, #0
 8001fd2:	f883 2240 	strb.w	r2, [r3, #576]	; 0x240
 8001fd6:	4b69      	ldr	r3, [pc, #420]	; (800217c <Create_Nodes+0xd18>)
 8001fd8:	2200      	movs	r2, #0
 8001fda:	f883 2241 	strb.w	r2, [r3, #577]	; 0x241
	VALUE_2(N('O').directions,0,1,1,1,0,0);
 8001fde:	4b67      	ldr	r3, [pc, #412]	; (800217c <Create_Nodes+0xd18>)
 8001fe0:	2200      	movs	r2, #0
 8001fe2:	f883 2242 	strb.w	r2, [r3, #578]	; 0x242
 8001fe6:	4b65      	ldr	r3, [pc, #404]	; (800217c <Create_Nodes+0xd18>)
 8001fe8:	2201      	movs	r2, #1
 8001fea:	f883 2243 	strb.w	r2, [r3, #579]	; 0x243
 8001fee:	4b63      	ldr	r3, [pc, #396]	; (800217c <Create_Nodes+0xd18>)
 8001ff0:	2201      	movs	r2, #1
 8001ff2:	f883 2244 	strb.w	r2, [r3, #580]	; 0x244
 8001ff6:	4b61      	ldr	r3, [pc, #388]	; (800217c <Create_Nodes+0xd18>)
 8001ff8:	2201      	movs	r2, #1
 8001ffa:	f883 2245 	strb.w	r2, [r3, #581]	; 0x245
 8001ffe:	4b5f      	ldr	r3, [pc, #380]	; (800217c <Create_Nodes+0xd18>)
 8002000:	2200      	movs	r2, #0
 8002002:	f883 2246 	strb.w	r2, [r3, #582]	; 0x246
 8002006:	4b5d      	ldr	r3, [pc, #372]	; (800217c <Create_Nodes+0xd18>)
 8002008:	2200      	movs	r2, #0
 800200a:	f883 2247 	strb.w	r2, [r3, #583]	; 0x247
	VALUE_2(N('O').distance,0,318-25,197,198,0,0);
 800200e:	4b5b      	ldr	r3, [pc, #364]	; (800217c <Create_Nodes+0xd18>)
 8002010:	2200      	movs	r2, #0
 8002012:	f8a3 2248 	strh.w	r2, [r3, #584]	; 0x248
 8002016:	4b59      	ldr	r3, [pc, #356]	; (800217c <Create_Nodes+0xd18>)
 8002018:	f240 1225 	movw	r2, #293	; 0x125
 800201c:	f8a3 224a 	strh.w	r2, [r3, #586]	; 0x24a
 8002020:	4b56      	ldr	r3, [pc, #344]	; (800217c <Create_Nodes+0xd18>)
 8002022:	22c5      	movs	r2, #197	; 0xc5
 8002024:	f8a3 224c 	strh.w	r2, [r3, #588]	; 0x24c
 8002028:	4b54      	ldr	r3, [pc, #336]	; (800217c <Create_Nodes+0xd18>)
 800202a:	22c6      	movs	r2, #198	; 0xc6
 800202c:	f8a3 224e 	strh.w	r2, [r3, #590]	; 0x24e
 8002030:	4b52      	ldr	r3, [pc, #328]	; (800217c <Create_Nodes+0xd18>)
 8002032:	2200      	movs	r2, #0
 8002034:	f8a3 2250 	strh.w	r2, [r3, #592]	; 0x250
 8002038:	4b50      	ldr	r3, [pc, #320]	; (800217c <Create_Nodes+0xd18>)
 800203a:	2200      	movs	r2, #0
 800203c:	f8a3 2252 	strh.w	r2, [r3, #594]	; 0x252
	N('O').middle=NEIGHBOUR3;
 8002040:	4b4e      	ldr	r3, [pc, #312]	; (800217c <Create_Nodes+0xd18>)
 8002042:	2202      	movs	r2, #2
 8002044:	f883 2254 	strb.w	r2, [r3, #596]	; 0x254

	//P node
	N('P').worth=2;
 8002048:	4b4c      	ldr	r3, [pc, #304]	; (800217c <Create_Nodes+0xd18>)
 800204a:	2202      	movs	r2, #2
 800204c:	f8c3 225c 	str.w	r2, [r3, #604]	; 0x25c
	N('P').type=1;
 8002050:	4b4a      	ldr	r3, [pc, #296]	; (800217c <Create_Nodes+0xd18>)
 8002052:	2201      	movs	r2, #1
 8002054:	f8c3 2260 	str.w	r2, [r3, #608]	; 0x260
	VALUE_2(N('P').neighbours,0,0,'M','N',0,'Q');
 8002058:	4b48      	ldr	r3, [pc, #288]	; (800217c <Create_Nodes+0xd18>)
 800205a:	2200      	movs	r2, #0
 800205c:	f883 2264 	strb.w	r2, [r3, #612]	; 0x264
 8002060:	4b46      	ldr	r3, [pc, #280]	; (800217c <Create_Nodes+0xd18>)
 8002062:	2200      	movs	r2, #0
 8002064:	f883 2265 	strb.w	r2, [r3, #613]	; 0x265
 8002068:	4b44      	ldr	r3, [pc, #272]	; (800217c <Create_Nodes+0xd18>)
 800206a:	224d      	movs	r2, #77	; 0x4d
 800206c:	f883 2266 	strb.w	r2, [r3, #614]	; 0x266
 8002070:	4b42      	ldr	r3, [pc, #264]	; (800217c <Create_Nodes+0xd18>)
 8002072:	224e      	movs	r2, #78	; 0x4e
 8002074:	f883 2267 	strb.w	r2, [r3, #615]	; 0x267
 8002078:	4b40      	ldr	r3, [pc, #256]	; (800217c <Create_Nodes+0xd18>)
 800207a:	2200      	movs	r2, #0
 800207c:	f883 2268 	strb.w	r2, [r3, #616]	; 0x268
 8002080:	4b3e      	ldr	r3, [pc, #248]	; (800217c <Create_Nodes+0xd18>)
 8002082:	2251      	movs	r2, #81	; 0x51
 8002084:	f883 2269 	strb.w	r2, [r3, #617]	; 0x269
	VALUE_2(N('P').directions,0,0,2,2,0,2);
 8002088:	4b3c      	ldr	r3, [pc, #240]	; (800217c <Create_Nodes+0xd18>)
 800208a:	2200      	movs	r2, #0
 800208c:	f883 226a 	strb.w	r2, [r3, #618]	; 0x26a
 8002090:	4b3a      	ldr	r3, [pc, #232]	; (800217c <Create_Nodes+0xd18>)
 8002092:	2200      	movs	r2, #0
 8002094:	f883 226b 	strb.w	r2, [r3, #619]	; 0x26b
 8002098:	4b38      	ldr	r3, [pc, #224]	; (800217c <Create_Nodes+0xd18>)
 800209a:	2202      	movs	r2, #2
 800209c:	f883 226c 	strb.w	r2, [r3, #620]	; 0x26c
 80020a0:	4b36      	ldr	r3, [pc, #216]	; (800217c <Create_Nodes+0xd18>)
 80020a2:	2202      	movs	r2, #2
 80020a4:	f883 226d 	strb.w	r2, [r3, #621]	; 0x26d
 80020a8:	4b34      	ldr	r3, [pc, #208]	; (800217c <Create_Nodes+0xd18>)
 80020aa:	2200      	movs	r2, #0
 80020ac:	f883 226e 	strb.w	r2, [r3, #622]	; 0x26e
 80020b0:	4b32      	ldr	r3, [pc, #200]	; (800217c <Create_Nodes+0xd18>)
 80020b2:	2202      	movs	r2, #2
 80020b4:	f883 226f 	strb.w	r2, [r3, #623]	; 0x26f
	VALUE_2(N('P').distance,0,0,198,197,0,241);
 80020b8:	4b30      	ldr	r3, [pc, #192]	; (800217c <Create_Nodes+0xd18>)
 80020ba:	2200      	movs	r2, #0
 80020bc:	f8a3 2270 	strh.w	r2, [r3, #624]	; 0x270
 80020c0:	4b2e      	ldr	r3, [pc, #184]	; (800217c <Create_Nodes+0xd18>)
 80020c2:	2200      	movs	r2, #0
 80020c4:	f8a3 2272 	strh.w	r2, [r3, #626]	; 0x272
 80020c8:	4b2c      	ldr	r3, [pc, #176]	; (800217c <Create_Nodes+0xd18>)
 80020ca:	22c6      	movs	r2, #198	; 0xc6
 80020cc:	f8a3 2274 	strh.w	r2, [r3, #628]	; 0x274
 80020d0:	4b2a      	ldr	r3, [pc, #168]	; (800217c <Create_Nodes+0xd18>)
 80020d2:	22c5      	movs	r2, #197	; 0xc5
 80020d4:	f8a3 2276 	strh.w	r2, [r3, #630]	; 0x276
 80020d8:	4b28      	ldr	r3, [pc, #160]	; (800217c <Create_Nodes+0xd18>)
 80020da:	2200      	movs	r2, #0
 80020dc:	f8a3 2278 	strh.w	r2, [r3, #632]	; 0x278
 80020e0:	4b26      	ldr	r3, [pc, #152]	; (800217c <Create_Nodes+0xd18>)
 80020e2:	22f1      	movs	r2, #241	; 0xf1
 80020e4:	f8a3 227a 	strh.w	r2, [r3, #634]	; 0x27a
	N('P').middle=NEIGHBOUR4;
 80020e8:	4b24      	ldr	r3, [pc, #144]	; (800217c <Create_Nodes+0xd18>)
 80020ea:	2203      	movs	r2, #3
 80020ec:	f883 227c 	strb.w	r2, [r3, #636]	; 0x27c

	//Q node
	N('Q').worth=2;
 80020f0:	4b22      	ldr	r3, [pc, #136]	; (800217c <Create_Nodes+0xd18>)
 80020f2:	2202      	movs	r2, #2
 80020f4:	f8c3 2284 	str.w	r2, [r3, #644]	; 0x284
	N('Q').type=1;
 80020f8:	4b20      	ldr	r3, [pc, #128]	; (800217c <Create_Nodes+0xd18>)
 80020fa:	2201      	movs	r2, #1
 80020fc:	f8c3 2288 	str.w	r2, [r3, #648]	; 0x288
	VALUE_2(N('Q').neighbours,'P',0,'N','O',0,0);
 8002100:	4b1e      	ldr	r3, [pc, #120]	; (800217c <Create_Nodes+0xd18>)
 8002102:	2250      	movs	r2, #80	; 0x50
 8002104:	f883 228c 	strb.w	r2, [r3, #652]	; 0x28c
 8002108:	4b1c      	ldr	r3, [pc, #112]	; (800217c <Create_Nodes+0xd18>)
 800210a:	2200      	movs	r2, #0
 800210c:	f883 228d 	strb.w	r2, [r3, #653]	; 0x28d
 8002110:	4b1a      	ldr	r3, [pc, #104]	; (800217c <Create_Nodes+0xd18>)
 8002112:	224e      	movs	r2, #78	; 0x4e
 8002114:	f883 228e 	strb.w	r2, [r3, #654]	; 0x28e
 8002118:	4b18      	ldr	r3, [pc, #96]	; (800217c <Create_Nodes+0xd18>)
 800211a:	224f      	movs	r2, #79	; 0x4f
 800211c:	f883 228f 	strb.w	r2, [r3, #655]	; 0x28f
 8002120:	4b16      	ldr	r3, [pc, #88]	; (800217c <Create_Nodes+0xd18>)
 8002122:	2200      	movs	r2, #0
 8002124:	f883 2290 	strb.w	r2, [r3, #656]	; 0x290
 8002128:	4b14      	ldr	r3, [pc, #80]	; (800217c <Create_Nodes+0xd18>)
 800212a:	2200      	movs	r2, #0
 800212c:	f883 2291 	strb.w	r2, [r3, #657]	; 0x291
	VALUE_2(N('Q').directions,1,0,2,2,0,0);
 8002130:	4b12      	ldr	r3, [pc, #72]	; (800217c <Create_Nodes+0xd18>)
 8002132:	2201      	movs	r2, #1
 8002134:	f883 2292 	strb.w	r2, [r3, #658]	; 0x292
 8002138:	4b10      	ldr	r3, [pc, #64]	; (800217c <Create_Nodes+0xd18>)
 800213a:	2200      	movs	r2, #0
 800213c:	f883 2293 	strb.w	r2, [r3, #659]	; 0x293
 8002140:	4b0e      	ldr	r3, [pc, #56]	; (800217c <Create_Nodes+0xd18>)
 8002142:	2202      	movs	r2, #2
 8002144:	f883 2294 	strb.w	r2, [r3, #660]	; 0x294
 8002148:	4b0c      	ldr	r3, [pc, #48]	; (800217c <Create_Nodes+0xd18>)
 800214a:	2202      	movs	r2, #2
 800214c:	f883 2295 	strb.w	r2, [r3, #661]	; 0x295
 8002150:	4b0a      	ldr	r3, [pc, #40]	; (800217c <Create_Nodes+0xd18>)
 8002152:	2200      	movs	r2, #0
 8002154:	f883 2296 	strb.w	r2, [r3, #662]	; 0x296
 8002158:	4b08      	ldr	r3, [pc, #32]	; (800217c <Create_Nodes+0xd18>)
 800215a:	2200      	movs	r2, #0
 800215c:	f883 2297 	strb.w	r2, [r3, #663]	; 0x297
	VALUE_2(N('Q').distance,241,0,198,197,0,0);
 8002160:	4b06      	ldr	r3, [pc, #24]	; (800217c <Create_Nodes+0xd18>)
 8002162:	22f1      	movs	r2, #241	; 0xf1
 8002164:	f8a3 2298 	strh.w	r2, [r3, #664]	; 0x298
 8002168:	4b04      	ldr	r3, [pc, #16]	; (800217c <Create_Nodes+0xd18>)
 800216a:	2200      	movs	r2, #0
 800216c:	f8a3 229a 	strh.w	r2, [r3, #666]	; 0x29a
 8002170:	4b02      	ldr	r3, [pc, #8]	; (800217c <Create_Nodes+0xd18>)
 8002172:	22c6      	movs	r2, #198	; 0xc6
 8002174:	f8a3 229c 	strh.w	r2, [r3, #668]	; 0x29c
 8002178:	e002      	b.n	8002180 <Create_Nodes+0xd1c>
 800217a:	bf00      	nop
 800217c:	20000360 	.word	0x20000360
 8002180:	4bca      	ldr	r3, [pc, #808]	; (80024ac <Create_Nodes+0x1048>)
 8002182:	22c5      	movs	r2, #197	; 0xc5
 8002184:	f8a3 229e 	strh.w	r2, [r3, #670]	; 0x29e
 8002188:	4bc8      	ldr	r3, [pc, #800]	; (80024ac <Create_Nodes+0x1048>)
 800218a:	2200      	movs	r2, #0
 800218c:	f8a3 22a0 	strh.w	r2, [r3, #672]	; 0x2a0
 8002190:	4bc6      	ldr	r3, [pc, #792]	; (80024ac <Create_Nodes+0x1048>)
 8002192:	2200      	movs	r2, #0
 8002194:	f8a3 22a2 	strh.w	r2, [r3, #674]	; 0x2a2
	N('Q').middle=NEIGHBOUR3;
 8002198:	4bc4      	ldr	r3, [pc, #784]	; (80024ac <Create_Nodes+0x1048>)
 800219a:	2202      	movs	r2, #2
 800219c:	f883 22a4 	strb.w	r2, [r3, #676]	; 0x2a4

	//R node
	N('R').worth=0;
 80021a0:	4bc2      	ldr	r3, [pc, #776]	; (80024ac <Create_Nodes+0x1048>)
 80021a2:	2200      	movs	r2, #0
 80021a4:	f8c3 22ac 	str.w	r2, [r3, #684]	; 0x2ac
	N('R').type=3;
 80021a8:	4bc0      	ldr	r3, [pc, #768]	; (80024ac <Create_Nodes+0x1048>)
 80021aa:	2203      	movs	r2, #3
 80021ac:	f8c3 22b0 	str.w	r2, [r3, #688]	; 0x2b0
	VALUE_2(N('R').neighbours,0,0,0,'M',0,'P');
 80021b0:	4bbe      	ldr	r3, [pc, #760]	; (80024ac <Create_Nodes+0x1048>)
 80021b2:	2200      	movs	r2, #0
 80021b4:	f883 22b4 	strb.w	r2, [r3, #692]	; 0x2b4
 80021b8:	4bbc      	ldr	r3, [pc, #752]	; (80024ac <Create_Nodes+0x1048>)
 80021ba:	2200      	movs	r2, #0
 80021bc:	f883 22b5 	strb.w	r2, [r3, #693]	; 0x2b5
 80021c0:	4bba      	ldr	r3, [pc, #744]	; (80024ac <Create_Nodes+0x1048>)
 80021c2:	2200      	movs	r2, #0
 80021c4:	f883 22b6 	strb.w	r2, [r3, #694]	; 0x2b6
 80021c8:	4bb8      	ldr	r3, [pc, #736]	; (80024ac <Create_Nodes+0x1048>)
 80021ca:	224d      	movs	r2, #77	; 0x4d
 80021cc:	f883 22b7 	strb.w	r2, [r3, #695]	; 0x2b7
 80021d0:	4bb6      	ldr	r3, [pc, #728]	; (80024ac <Create_Nodes+0x1048>)
 80021d2:	2200      	movs	r2, #0
 80021d4:	f883 22b8 	strb.w	r2, [r3, #696]	; 0x2b8
 80021d8:	4bb4      	ldr	r3, [pc, #720]	; (80024ac <Create_Nodes+0x1048>)
 80021da:	2250      	movs	r2, #80	; 0x50
 80021dc:	f883 22b9 	strb.w	r2, [r3, #697]	; 0x2b9
	VALUE_2(N('R').directions,0,0,0,2,0,2);
 80021e0:	4bb2      	ldr	r3, [pc, #712]	; (80024ac <Create_Nodes+0x1048>)
 80021e2:	2200      	movs	r2, #0
 80021e4:	f883 22ba 	strb.w	r2, [r3, #698]	; 0x2ba
 80021e8:	4bb0      	ldr	r3, [pc, #704]	; (80024ac <Create_Nodes+0x1048>)
 80021ea:	2200      	movs	r2, #0
 80021ec:	f883 22bb 	strb.w	r2, [r3, #699]	; 0x2bb
 80021f0:	4bae      	ldr	r3, [pc, #696]	; (80024ac <Create_Nodes+0x1048>)
 80021f2:	2200      	movs	r2, #0
 80021f4:	f883 22bc 	strb.w	r2, [r3, #700]	; 0x2bc
 80021f8:	4bac      	ldr	r3, [pc, #688]	; (80024ac <Create_Nodes+0x1048>)
 80021fa:	2202      	movs	r2, #2
 80021fc:	f883 22bd 	strb.w	r2, [r3, #701]	; 0x2bd
 8002200:	4baa      	ldr	r3, [pc, #680]	; (80024ac <Create_Nodes+0x1048>)
 8002202:	2200      	movs	r2, #0
 8002204:	f883 22be 	strb.w	r2, [r3, #702]	; 0x2be
 8002208:	4ba8      	ldr	r3, [pc, #672]	; (80024ac <Create_Nodes+0x1048>)
 800220a:	2202      	movs	r2, #2
 800220c:	f883 22bf 	strb.w	r2, [r3, #703]	; 0x2bf
	VALUE_2(N('R').distance,0,0,0,197,0,241);
 8002210:	4ba6      	ldr	r3, [pc, #664]	; (80024ac <Create_Nodes+0x1048>)
 8002212:	2200      	movs	r2, #0
 8002214:	f8a3 22c0 	strh.w	r2, [r3, #704]	; 0x2c0
 8002218:	4ba4      	ldr	r3, [pc, #656]	; (80024ac <Create_Nodes+0x1048>)
 800221a:	2200      	movs	r2, #0
 800221c:	f8a3 22c2 	strh.w	r2, [r3, #706]	; 0x2c2
 8002220:	4ba2      	ldr	r3, [pc, #648]	; (80024ac <Create_Nodes+0x1048>)
 8002222:	2200      	movs	r2, #0
 8002224:	f8a3 22c4 	strh.w	r2, [r3, #708]	; 0x2c4
 8002228:	4ba0      	ldr	r3, [pc, #640]	; (80024ac <Create_Nodes+0x1048>)
 800222a:	22c5      	movs	r2, #197	; 0xc5
 800222c:	f8a3 22c6 	strh.w	r2, [r3, #710]	; 0x2c6
 8002230:	4b9e      	ldr	r3, [pc, #632]	; (80024ac <Create_Nodes+0x1048>)
 8002232:	2200      	movs	r2, #0
 8002234:	f8a3 22c8 	strh.w	r2, [r3, #712]	; 0x2c8
 8002238:	4b9c      	ldr	r3, [pc, #624]	; (80024ac <Create_Nodes+0x1048>)
 800223a:	22f1      	movs	r2, #241	; 0xf1
 800223c:	f8a3 22ca 	strh.w	r2, [r3, #714]	; 0x2ca
	N('R').middle=NEIGHBOUR6;
 8002240:	4b9a      	ldr	r3, [pc, #616]	; (80024ac <Create_Nodes+0x1048>)
 8002242:	2205      	movs	r2, #5
 8002244:	f883 22cc 	strb.w	r2, [r3, #716]	; 0x2cc

	//S node
	N('S').worth=0;
 8002248:	4b98      	ldr	r3, [pc, #608]	; (80024ac <Create_Nodes+0x1048>)
 800224a:	2200      	movs	r2, #0
 800224c:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
	N('S').type=3;
 8002250:	4b96      	ldr	r3, [pc, #600]	; (80024ac <Create_Nodes+0x1048>)
 8002252:	2203      	movs	r2, #3
 8002254:	f8c3 22d8 	str.w	r2, [r3, #728]	; 0x2d8
	VALUE_2(N('S').neighbours,'Q',0,'O',0,0,0);
 8002258:	4b94      	ldr	r3, [pc, #592]	; (80024ac <Create_Nodes+0x1048>)
 800225a:	2251      	movs	r2, #81	; 0x51
 800225c:	f883 22dc 	strb.w	r2, [r3, #732]	; 0x2dc
 8002260:	4b92      	ldr	r3, [pc, #584]	; (80024ac <Create_Nodes+0x1048>)
 8002262:	2200      	movs	r2, #0
 8002264:	f883 22dd 	strb.w	r2, [r3, #733]	; 0x2dd
 8002268:	4b90      	ldr	r3, [pc, #576]	; (80024ac <Create_Nodes+0x1048>)
 800226a:	224f      	movs	r2, #79	; 0x4f
 800226c:	f883 22de 	strb.w	r2, [r3, #734]	; 0x2de
 8002270:	4b8e      	ldr	r3, [pc, #568]	; (80024ac <Create_Nodes+0x1048>)
 8002272:	2200      	movs	r2, #0
 8002274:	f883 22df 	strb.w	r2, [r3, #735]	; 0x2df
 8002278:	4b8c      	ldr	r3, [pc, #560]	; (80024ac <Create_Nodes+0x1048>)
 800227a:	2200      	movs	r2, #0
 800227c:	f883 22e0 	strb.w	r2, [r3, #736]	; 0x2e0
 8002280:	4b8a      	ldr	r3, [pc, #552]	; (80024ac <Create_Nodes+0x1048>)
 8002282:	2200      	movs	r2, #0
 8002284:	f883 22e1 	strb.w	r2, [r3, #737]	; 0x2e1
	VALUE_2(N('S').directions,1,0,2,0,0,0);
 8002288:	4b88      	ldr	r3, [pc, #544]	; (80024ac <Create_Nodes+0x1048>)
 800228a:	2201      	movs	r2, #1
 800228c:	f883 22e2 	strb.w	r2, [r3, #738]	; 0x2e2
 8002290:	4b86      	ldr	r3, [pc, #536]	; (80024ac <Create_Nodes+0x1048>)
 8002292:	2200      	movs	r2, #0
 8002294:	f883 22e3 	strb.w	r2, [r3, #739]	; 0x2e3
 8002298:	4b84      	ldr	r3, [pc, #528]	; (80024ac <Create_Nodes+0x1048>)
 800229a:	2202      	movs	r2, #2
 800229c:	f883 22e4 	strb.w	r2, [r3, #740]	; 0x2e4
 80022a0:	4b82      	ldr	r3, [pc, #520]	; (80024ac <Create_Nodes+0x1048>)
 80022a2:	2200      	movs	r2, #0
 80022a4:	f883 22e5 	strb.w	r2, [r3, #741]	; 0x2e5
 80022a8:	4b80      	ldr	r3, [pc, #512]	; (80024ac <Create_Nodes+0x1048>)
 80022aa:	2200      	movs	r2, #0
 80022ac:	f883 22e6 	strb.w	r2, [r3, #742]	; 0x2e6
 80022b0:	4b7e      	ldr	r3, [pc, #504]	; (80024ac <Create_Nodes+0x1048>)
 80022b2:	2200      	movs	r2, #0
 80022b4:	f883 22e7 	strb.w	r2, [r3, #743]	; 0x2e7
	VALUE_2(N('S').distance,241,0,198,0,0,0);
 80022b8:	4b7c      	ldr	r3, [pc, #496]	; (80024ac <Create_Nodes+0x1048>)
 80022ba:	22f1      	movs	r2, #241	; 0xf1
 80022bc:	f8a3 22e8 	strh.w	r2, [r3, #744]	; 0x2e8
 80022c0:	4b7a      	ldr	r3, [pc, #488]	; (80024ac <Create_Nodes+0x1048>)
 80022c2:	2200      	movs	r2, #0
 80022c4:	f8a3 22ea 	strh.w	r2, [r3, #746]	; 0x2ea
 80022c8:	4b78      	ldr	r3, [pc, #480]	; (80024ac <Create_Nodes+0x1048>)
 80022ca:	22c6      	movs	r2, #198	; 0xc6
 80022cc:	f8a3 22ec 	strh.w	r2, [r3, #748]	; 0x2ec
 80022d0:	4b76      	ldr	r3, [pc, #472]	; (80024ac <Create_Nodes+0x1048>)
 80022d2:	2200      	movs	r2, #0
 80022d4:	f8a3 22ee 	strh.w	r2, [r3, #750]	; 0x2ee
 80022d8:	4b74      	ldr	r3, [pc, #464]	; (80024ac <Create_Nodes+0x1048>)
 80022da:	2200      	movs	r2, #0
 80022dc:	f8a3 22f0 	strh.w	r2, [r3, #752]	; 0x2f0
 80022e0:	4b72      	ldr	r3, [pc, #456]	; (80024ac <Create_Nodes+0x1048>)
 80022e2:	2200      	movs	r2, #0
 80022e4:	f8a3 22f2 	strh.w	r2, [r3, #754]	; 0x2f2
	N('S').middle=NEIGHBOUR1;
 80022e8:	4b70      	ldr	r3, [pc, #448]	; (80024ac <Create_Nodes+0x1048>)
 80022ea:	2200      	movs	r2, #0
 80022ec:	f883 22f4 	strb.w	r2, [r3, #756]	; 0x2f4

	//T node
	N('T').worth=0;
 80022f0:	4b6e      	ldr	r3, [pc, #440]	; (80024ac <Create_Nodes+0x1048>)
 80022f2:	2200      	movs	r2, #0
 80022f4:	f8c3 22fc 	str.w	r2, [r3, #764]	; 0x2fc
	N('T').type=4;
 80022f8:	4b6c      	ldr	r3, [pc, #432]	; (80024ac <Create_Nodes+0x1048>)
 80022fa:	2204      	movs	r2, #4
 80022fc:	f8c3 2300 	str.w	r2, [r3, #768]	; 0x300
	VALUE_2(N('T').neighbours,'V',0,'U','N',0,0);
 8002300:	4b6a      	ldr	r3, [pc, #424]	; (80024ac <Create_Nodes+0x1048>)
 8002302:	2256      	movs	r2, #86	; 0x56
 8002304:	f883 2304 	strb.w	r2, [r3, #772]	; 0x304
 8002308:	4b68      	ldr	r3, [pc, #416]	; (80024ac <Create_Nodes+0x1048>)
 800230a:	2200      	movs	r2, #0
 800230c:	f883 2305 	strb.w	r2, [r3, #773]	; 0x305
 8002310:	4b66      	ldr	r3, [pc, #408]	; (80024ac <Create_Nodes+0x1048>)
 8002312:	2255      	movs	r2, #85	; 0x55
 8002314:	f883 2306 	strb.w	r2, [r3, #774]	; 0x306
 8002318:	4b64      	ldr	r3, [pc, #400]	; (80024ac <Create_Nodes+0x1048>)
 800231a:	224e      	movs	r2, #78	; 0x4e
 800231c:	f883 2307 	strb.w	r2, [r3, #775]	; 0x307
 8002320:	4b62      	ldr	r3, [pc, #392]	; (80024ac <Create_Nodes+0x1048>)
 8002322:	2200      	movs	r2, #0
 8002324:	f883 2308 	strb.w	r2, [r3, #776]	; 0x308
 8002328:	4b60      	ldr	r3, [pc, #384]	; (80024ac <Create_Nodes+0x1048>)
 800232a:	2200      	movs	r2, #0
 800232c:	f883 2309 	strb.w	r2, [r3, #777]	; 0x309
	VALUE_2(N('T').directions,2,0,1,2,0,0);
 8002330:	4b5e      	ldr	r3, [pc, #376]	; (80024ac <Create_Nodes+0x1048>)
 8002332:	2202      	movs	r2, #2
 8002334:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
 8002338:	4b5c      	ldr	r3, [pc, #368]	; (80024ac <Create_Nodes+0x1048>)
 800233a:	2200      	movs	r2, #0
 800233c:	f883 230b 	strb.w	r2, [r3, #779]	; 0x30b
 8002340:	4b5a      	ldr	r3, [pc, #360]	; (80024ac <Create_Nodes+0x1048>)
 8002342:	2201      	movs	r2, #1
 8002344:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
 8002348:	4b58      	ldr	r3, [pc, #352]	; (80024ac <Create_Nodes+0x1048>)
 800234a:	2202      	movs	r2, #2
 800234c:	f883 230d 	strb.w	r2, [r3, #781]	; 0x30d
 8002350:	4b56      	ldr	r3, [pc, #344]	; (80024ac <Create_Nodes+0x1048>)
 8002352:	2200      	movs	r2, #0
 8002354:	f883 230e 	strb.w	r2, [r3, #782]	; 0x30e
 8002358:	4b54      	ldr	r3, [pc, #336]	; (80024ac <Create_Nodes+0x1048>)
 800235a:	2200      	movs	r2, #0
 800235c:	f883 230f 	strb.w	r2, [r3, #783]	; 0x30f
	VALUE_2(N('T').distance,199-40,0,198-40,120-25,0,0);
 8002360:	4b52      	ldr	r3, [pc, #328]	; (80024ac <Create_Nodes+0x1048>)
 8002362:	229f      	movs	r2, #159	; 0x9f
 8002364:	f8a3 2310 	strh.w	r2, [r3, #784]	; 0x310
 8002368:	4b50      	ldr	r3, [pc, #320]	; (80024ac <Create_Nodes+0x1048>)
 800236a:	2200      	movs	r2, #0
 800236c:	f8a3 2312 	strh.w	r2, [r3, #786]	; 0x312
 8002370:	4b4e      	ldr	r3, [pc, #312]	; (80024ac <Create_Nodes+0x1048>)
 8002372:	229e      	movs	r2, #158	; 0x9e
 8002374:	f8a3 2314 	strh.w	r2, [r3, #788]	; 0x314
 8002378:	4b4c      	ldr	r3, [pc, #304]	; (80024ac <Create_Nodes+0x1048>)
 800237a:	225f      	movs	r2, #95	; 0x5f
 800237c:	f8a3 2316 	strh.w	r2, [r3, #790]	; 0x316
 8002380:	4b4a      	ldr	r3, [pc, #296]	; (80024ac <Create_Nodes+0x1048>)
 8002382:	2200      	movs	r2, #0
 8002384:	f8a3 2318 	strh.w	r2, [r3, #792]	; 0x318
 8002388:	4b48      	ldr	r3, [pc, #288]	; (80024ac <Create_Nodes+0x1048>)
 800238a:	2200      	movs	r2, #0
 800238c:	f8a3 231a 	strh.w	r2, [r3, #794]	; 0x31a
	N('T').middle=NEIGHBOUR4;
 8002390:	4b46      	ldr	r3, [pc, #280]	; (80024ac <Create_Nodes+0x1048>)
 8002392:	2203      	movs	r2, #3
 8002394:	f883 231c 	strb.w	r2, [r3, #796]	; 0x31c

	//U node
	N('U').worth=0;
 8002398:	4b44      	ldr	r3, [pc, #272]	; (80024ac <Create_Nodes+0x1048>)
 800239a:	2200      	movs	r2, #0
 800239c:	f8c3 2324 	str.w	r2, [r3, #804]	; 0x324
	N('U').type=3;
 80023a0:	4b42      	ldr	r3, [pc, #264]	; (80024ac <Create_Nodes+0x1048>)
 80023a2:	2203      	movs	r2, #3
 80023a4:	f8c3 2328 	str.w	r2, [r3, #808]	; 0x328
	VALUE_2(N('U').neighbours,0,'M',0,'T',0,'V');
 80023a8:	4b40      	ldr	r3, [pc, #256]	; (80024ac <Create_Nodes+0x1048>)
 80023aa:	2200      	movs	r2, #0
 80023ac:	f883 232c 	strb.w	r2, [r3, #812]	; 0x32c
 80023b0:	4b3e      	ldr	r3, [pc, #248]	; (80024ac <Create_Nodes+0x1048>)
 80023b2:	224d      	movs	r2, #77	; 0x4d
 80023b4:	f883 232d 	strb.w	r2, [r3, #813]	; 0x32d
 80023b8:	4b3c      	ldr	r3, [pc, #240]	; (80024ac <Create_Nodes+0x1048>)
 80023ba:	2200      	movs	r2, #0
 80023bc:	f883 232e 	strb.w	r2, [r3, #814]	; 0x32e
 80023c0:	4b3a      	ldr	r3, [pc, #232]	; (80024ac <Create_Nodes+0x1048>)
 80023c2:	2254      	movs	r2, #84	; 0x54
 80023c4:	f883 232f 	strb.w	r2, [r3, #815]	; 0x32f
 80023c8:	4b38      	ldr	r3, [pc, #224]	; (80024ac <Create_Nodes+0x1048>)
 80023ca:	2200      	movs	r2, #0
 80023cc:	f883 2330 	strb.w	r2, [r3, #816]	; 0x330
 80023d0:	4b36      	ldr	r3, [pc, #216]	; (80024ac <Create_Nodes+0x1048>)
 80023d2:	2256      	movs	r2, #86	; 0x56
 80023d4:	f883 2331 	strb.w	r2, [r3, #817]	; 0x331
	VALUE_2(N('U').directions,0,2,0,2,0,2);
 80023d8:	4b34      	ldr	r3, [pc, #208]	; (80024ac <Create_Nodes+0x1048>)
 80023da:	2200      	movs	r2, #0
 80023dc:	f883 2332 	strb.w	r2, [r3, #818]	; 0x332
 80023e0:	4b32      	ldr	r3, [pc, #200]	; (80024ac <Create_Nodes+0x1048>)
 80023e2:	2202      	movs	r2, #2
 80023e4:	f883 2333 	strb.w	r2, [r3, #819]	; 0x333
 80023e8:	4b30      	ldr	r3, [pc, #192]	; (80024ac <Create_Nodes+0x1048>)
 80023ea:	2200      	movs	r2, #0
 80023ec:	f883 2334 	strb.w	r2, [r3, #820]	; 0x334
 80023f0:	4b2e      	ldr	r3, [pc, #184]	; (80024ac <Create_Nodes+0x1048>)
 80023f2:	2202      	movs	r2, #2
 80023f4:	f883 2335 	strb.w	r2, [r3, #821]	; 0x335
 80023f8:	4b2c      	ldr	r3, [pc, #176]	; (80024ac <Create_Nodes+0x1048>)
 80023fa:	2200      	movs	r2, #0
 80023fc:	f883 2336 	strb.w	r2, [r3, #822]	; 0x336
 8002400:	4b2a      	ldr	r3, [pc, #168]	; (80024ac <Create_Nodes+0x1048>)
 8002402:	2202      	movs	r2, #2
 8002404:	f883 2337 	strb.w	r2, [r3, #823]	; 0x337
	VALUE_2(N('U').distance,0,319-25,0,198,0,241-25);
 8002408:	4b28      	ldr	r3, [pc, #160]	; (80024ac <Create_Nodes+0x1048>)
 800240a:	2200      	movs	r2, #0
 800240c:	f8a3 2338 	strh.w	r2, [r3, #824]	; 0x338
 8002410:	4b26      	ldr	r3, [pc, #152]	; (80024ac <Create_Nodes+0x1048>)
 8002412:	f44f 7293 	mov.w	r2, #294	; 0x126
 8002416:	f8a3 233a 	strh.w	r2, [r3, #826]	; 0x33a
 800241a:	4b24      	ldr	r3, [pc, #144]	; (80024ac <Create_Nodes+0x1048>)
 800241c:	2200      	movs	r2, #0
 800241e:	f8a3 233c 	strh.w	r2, [r3, #828]	; 0x33c
 8002422:	4b22      	ldr	r3, [pc, #136]	; (80024ac <Create_Nodes+0x1048>)
 8002424:	22c6      	movs	r2, #198	; 0xc6
 8002426:	f8a3 233e 	strh.w	r2, [r3, #830]	; 0x33e
 800242a:	4b20      	ldr	r3, [pc, #128]	; (80024ac <Create_Nodes+0x1048>)
 800242c:	2200      	movs	r2, #0
 800242e:	f8a3 2340 	strh.w	r2, [r3, #832]	; 0x340
 8002432:	4b1e      	ldr	r3, [pc, #120]	; (80024ac <Create_Nodes+0x1048>)
 8002434:	22d8      	movs	r2, #216	; 0xd8
 8002436:	f8a3 2342 	strh.w	r2, [r3, #834]	; 0x342
	N('U').middle=NEIGHBOUR3;
 800243a:	4b1c      	ldr	r3, [pc, #112]	; (80024ac <Create_Nodes+0x1048>)
 800243c:	2202      	movs	r2, #2
 800243e:	f883 2344 	strb.w	r2, [r3, #836]	; 0x344

	//V node
	N('V').worth=0;
 8002442:	4b1a      	ldr	r3, [pc, #104]	; (80024ac <Create_Nodes+0x1048>)
 8002444:	2200      	movs	r2, #0
 8002446:	f8c3 234c 	str.w	r2, [r3, #844]	; 0x34c
	N('V').type=3;
 800244a:	4b18      	ldr	r3, [pc, #96]	; (80024ac <Create_Nodes+0x1048>)
 800244c:	2203      	movs	r2, #3
 800244e:	f8c3 2350 	str.w	r2, [r3, #848]	; 0x350
	VALUE_2(N('V').neighbours,'U',0,'T','O',0,0);
 8002452:	4b16      	ldr	r3, [pc, #88]	; (80024ac <Create_Nodes+0x1048>)
 8002454:	2255      	movs	r2, #85	; 0x55
 8002456:	f883 2354 	strb.w	r2, [r3, #852]	; 0x354
 800245a:	4b14      	ldr	r3, [pc, #80]	; (80024ac <Create_Nodes+0x1048>)
 800245c:	2200      	movs	r2, #0
 800245e:	f883 2355 	strb.w	r2, [r3, #853]	; 0x355
 8002462:	4b12      	ldr	r3, [pc, #72]	; (80024ac <Create_Nodes+0x1048>)
 8002464:	2254      	movs	r2, #84	; 0x54
 8002466:	f883 2356 	strb.w	r2, [r3, #854]	; 0x356
 800246a:	4b10      	ldr	r3, [pc, #64]	; (80024ac <Create_Nodes+0x1048>)
 800246c:	224f      	movs	r2, #79	; 0x4f
 800246e:	f883 2357 	strb.w	r2, [r3, #855]	; 0x357
 8002472:	4b0e      	ldr	r3, [pc, #56]	; (80024ac <Create_Nodes+0x1048>)
 8002474:	2200      	movs	r2, #0
 8002476:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
 800247a:	4b0c      	ldr	r3, [pc, #48]	; (80024ac <Create_Nodes+0x1048>)
 800247c:	2200      	movs	r2, #0
 800247e:	f883 2359 	strb.w	r2, [r3, #857]	; 0x359
	VALUE_2(N('V').directions,1,0,2,2,0,0);
 8002482:	4b0a      	ldr	r3, [pc, #40]	; (80024ac <Create_Nodes+0x1048>)
 8002484:	2201      	movs	r2, #1
 8002486:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 800248a:	4b08      	ldr	r3, [pc, #32]	; (80024ac <Create_Nodes+0x1048>)
 800248c:	2200      	movs	r2, #0
 800248e:	f883 235b 	strb.w	r2, [r3, #859]	; 0x35b
 8002492:	4b06      	ldr	r3, [pc, #24]	; (80024ac <Create_Nodes+0x1048>)
 8002494:	2202      	movs	r2, #2
 8002496:	f883 235c 	strb.w	r2, [r3, #860]	; 0x35c
 800249a:	4b04      	ldr	r3, [pc, #16]	; (80024ac <Create_Nodes+0x1048>)
 800249c:	2202      	movs	r2, #2
 800249e:	f883 235d 	strb.w	r2, [r3, #861]	; 0x35d
 80024a2:	4b02      	ldr	r3, [pc, #8]	; (80024ac <Create_Nodes+0x1048>)
 80024a4:	2200      	movs	r2, #0
 80024a6:	f883 235e 	strb.w	r2, [r3, #862]	; 0x35e
 80024aa:	e001      	b.n	80024b0 <Create_Nodes+0x104c>
 80024ac:	20000360 	.word	0x20000360
 80024b0:	4b72      	ldr	r3, [pc, #456]	; (800267c <Create_Nodes+0x1218>)
 80024b2:	2200      	movs	r2, #0
 80024b4:	f883 235f 	strb.w	r2, [r3, #863]	; 0x35f
	VALUE_2(N('V').distance,241-25,0,199,318-25,0,0);
 80024b8:	4b70      	ldr	r3, [pc, #448]	; (800267c <Create_Nodes+0x1218>)
 80024ba:	22d8      	movs	r2, #216	; 0xd8
 80024bc:	f8a3 2360 	strh.w	r2, [r3, #864]	; 0x360
 80024c0:	4b6e      	ldr	r3, [pc, #440]	; (800267c <Create_Nodes+0x1218>)
 80024c2:	2200      	movs	r2, #0
 80024c4:	f8a3 2362 	strh.w	r2, [r3, #866]	; 0x362
 80024c8:	4b6c      	ldr	r3, [pc, #432]	; (800267c <Create_Nodes+0x1218>)
 80024ca:	22c7      	movs	r2, #199	; 0xc7
 80024cc:	f8a3 2364 	strh.w	r2, [r3, #868]	; 0x364
 80024d0:	4b6a      	ldr	r3, [pc, #424]	; (800267c <Create_Nodes+0x1218>)
 80024d2:	f240 1225 	movw	r2, #293	; 0x125
 80024d6:	f8a3 2366 	strh.w	r2, [r3, #870]	; 0x366
 80024da:	4b68      	ldr	r3, [pc, #416]	; (800267c <Create_Nodes+0x1218>)
 80024dc:	2200      	movs	r2, #0
 80024de:	f8a3 2368 	strh.w	r2, [r3, #872]	; 0x368
 80024e2:	4b66      	ldr	r3, [pc, #408]	; (800267c <Create_Nodes+0x1218>)
 80024e4:	2200      	movs	r2, #0
 80024e6:	f8a3 236a 	strh.w	r2, [r3, #874]	; 0x36a
	N('V').middle=NEIGHBOUR3;
 80024ea:	4b64      	ldr	r3, [pc, #400]	; (800267c <Create_Nodes+0x1218>)
 80024ec:	2202      	movs	r2, #2
 80024ee:	f883 236c 	strb.w	r2, [r3, #876]	; 0x36c

	//Nodeértékek backup mentésből való visszatöltése
	if(SW2)//ha a kacsapoló2 a megfelelő állapotban van (világít a piros LED)
 80024f2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80024f6:	4862      	ldr	r0, [pc, #392]	; (8002680 <Create_Nodes+0x121c>)
 80024f8:	f006 ffea 	bl	80094d0 <HAL_GPIO_ReadPin>
 80024fc:	4603      	mov	r3, r0
 80024fe:	2b00      	cmp	r3, #0
 8002500:	f000 80a0 	beq.w	8002644 <Create_Nodes+0x11e0>
	{
		uint32_t check_flash = *(__IO uint32_t *) FLASH_ADDRESS_NODEWORTH; //tényleg ottvanak  flashbena megfelelő helyen a worth értékek?
 8002504:	4b5f      	ldr	r3, [pc, #380]	; (8002684 <Create_Nodes+0x1220>)
 8002506:	681b      	ldr	r3, [r3, #0]
 8002508:	66bb      	str	r3, [r7, #104]	; 0x68

		if(check_flash==0xffffffff)//nincs semmi a flashben
 800250a:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800250c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002510:	d161      	bne.n	80025d6 <Create_Nodes+0x1172>
		{
			char str[]="Default worths because of FLASH ERROR!\n\r";
 8002512:	4b5d      	ldr	r3, [pc, #372]	; (8002688 <Create_Nodes+0x1224>)
 8002514:	f107 040c 	add.w	r4, r7, #12
 8002518:	461d      	mov	r5, r3
 800251a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800251c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800251e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002520:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002522:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002526:	c403      	stmia	r4!, {r0, r1}
 8002528:	7022      	strb	r2, [r4, #0]
			HAL_UART_Transmit(huart_debugg,(uint8_t*) str, strlen(str), 10);
 800252a:	f107 030c 	add.w	r3, r7, #12
 800252e:	4618      	mov	r0, r3
 8002530:	f7fd fe6e 	bl	8000210 <strlen>
 8002534:	4603      	mov	r3, r0
 8002536:	b29a      	uxth	r2, r3
 8002538:	f107 010c 	add.w	r1, r7, #12
 800253c:	230a      	movs	r3, #10
 800253e:	6878      	ldr	r0, [r7, #4]
 8002540:	f009 fd31 	bl	800bfa6 <HAL_UART_Transmit>
			HAL_FLASH_Unlock();
 8002544:	f006 fc76 	bl	8008e34 <HAL_FLASH_Unlock>
			HAL_Delay(50);
 8002548:	2032      	movs	r0, #50	; 0x32
 800254a:	f005 f93f 	bl	80077cc <HAL_Delay>
			FLASH_Erase_Sector(6, FLASH_VOLTAGE_RANGE_3);
 800254e:	2102      	movs	r1, #2
 8002550:	2006      	movs	r0, #6
 8002552:	f006 fde1 	bl	8009118 <FLASH_Erase_Sector>
			HAL_Delay(50);
 8002556:	2032      	movs	r0, #50	; 0x32
 8002558:	f005 f938 	bl	80077cc <HAL_Delay>
			HAL_FLASH_Lock();
 800255c:	f006 fc8c 	bl	8008e78 <HAL_FLASH_Lock>
			HAL_Delay(50);
 8002560:	2032      	movs	r0, #50	; 0x32
 8002562:	f005 f933 	bl	80077cc <HAL_Delay>
			HAL_FLASH_Unlock();
 8002566:	f006 fc65 	bl	8008e34 <HAL_FLASH_Unlock>
			HAL_Delay(50);
 800256a:	2032      	movs	r0, #50	; 0x32
 800256c:	f005 f92e 	bl	80077cc <HAL_Delay>
			for(i=0;i<22;i++)
 8002570:	2300      	movs	r3, #0
 8002572:	66fb      	str	r3, [r7, #108]	; 0x6c
 8002574:	e01a      	b.n	80025ac <Create_Nodes+0x1148>
			{
				HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+i, Nodes[i].worth);
 8002576:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002578:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 800257c:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
 8002580:	4618      	mov	r0, r3
 8002582:	493e      	ldr	r1, [pc, #248]	; (800267c <Create_Nodes+0x1218>)
 8002584:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8002586:	4613      	mov	r3, r2
 8002588:	009b      	lsls	r3, r3, #2
 800258a:	4413      	add	r3, r2
 800258c:	00db      	lsls	r3, r3, #3
 800258e:	440b      	add	r3, r1
 8002590:	3304      	adds	r3, #4
 8002592:	681b      	ldr	r3, [r3, #0]
 8002594:	17da      	asrs	r2, r3, #31
 8002596:	469a      	mov	sl, r3
 8002598:	4693      	mov	fp, r2
 800259a:	4652      	mov	r2, sl
 800259c:	465b      	mov	r3, fp
 800259e:	4601      	mov	r1, r0
 80025a0:	2000      	movs	r0, #0
 80025a2:	f006 fbf3 	bl	8008d8c <HAL_FLASH_Program>
			for(i=0;i<22;i++)
 80025a6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80025a8:	3301      	adds	r3, #1
 80025aa:	66fb      	str	r3, [r7, #108]	; 0x6c
 80025ac:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80025ae:	2b15      	cmp	r3, #21
 80025b0:	dde1      	ble.n	8002576 <Create_Nodes+0x1112>
			}
			HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+22, collectedPoints);
 80025b2:	4b36      	ldr	r3, [pc, #216]	; (800268c <Create_Nodes+0x1228>)
 80025b4:	781b      	ldrb	r3, [r3, #0]
 80025b6:	b2db      	uxtb	r3, r3
 80025b8:	2200      	movs	r2, #0
 80025ba:	4698      	mov	r8, r3
 80025bc:	4691      	mov	r9, r2
 80025be:	4642      	mov	r2, r8
 80025c0:	464b      	mov	r3, r9
 80025c2:	4933      	ldr	r1, [pc, #204]	; (8002690 <Create_Nodes+0x122c>)
 80025c4:	2000      	movs	r0, #0
 80025c6:	f006 fbe1 	bl	8008d8c <HAL_FLASH_Program>
			HAL_Delay(50);
 80025ca:	2032      	movs	r0, #50	; 0x32
 80025cc:	f005 f8fe 	bl	80077cc <HAL_Delay>
			HAL_FLASH_Lock();
 80025d0:	f006 fc52 	bl	8008e78 <HAL_FLASH_Lock>
 80025d4:	e04d      	b.n	8002672 <Create_Nodes+0x120e>
			return; //ha nem akkor használjuk a default értékeket
		}
		for(i=0;i<22;i++)
 80025d6:	2300      	movs	r3, #0
 80025d8:	66fb      	str	r3, [r7, #108]	; 0x6c
 80025da:	e013      	b.n	8002604 <Create_Nodes+0x11a0>
		{
			Nodes[i].worth=*(__IO uint8_t *) (FLASH_ADDRESS_NODEWORTH+i); //ha igen akkor töltsük be a backup mentést
 80025dc:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80025de:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 80025e2:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
 80025e6:	781b      	ldrb	r3, [r3, #0]
 80025e8:	b2db      	uxtb	r3, r3
 80025ea:	4618      	mov	r0, r3
 80025ec:	4923      	ldr	r1, [pc, #140]	; (800267c <Create_Nodes+0x1218>)
 80025ee:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80025f0:	4613      	mov	r3, r2
 80025f2:	009b      	lsls	r3, r3, #2
 80025f4:	4413      	add	r3, r2
 80025f6:	00db      	lsls	r3, r3, #3
 80025f8:	440b      	add	r3, r1
 80025fa:	3304      	adds	r3, #4
 80025fc:	6018      	str	r0, [r3, #0]
		for(i=0;i<22;i++)
 80025fe:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002600:	3301      	adds	r3, #1
 8002602:	66fb      	str	r3, [r7, #108]	; 0x6c
 8002604:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002606:	2b15      	cmp	r3, #21
 8002608:	dde8      	ble.n	80025dc <Create_Nodes+0x1178>
		}
		collectedPoints=*(__IO uint8_t *) (FLASH_ADDRESS_NODEWORTH+22);
 800260a:	4b21      	ldr	r3, [pc, #132]	; (8002690 <Create_Nodes+0x122c>)
 800260c:	781b      	ldrb	r3, [r3, #0]
 800260e:	b2da      	uxtb	r2, r3
 8002610:	4b1e      	ldr	r3, [pc, #120]	; (800268c <Create_Nodes+0x1228>)
 8002612:	701a      	strb	r2, [r3, #0]
		char str[]="Worths from FLASH backup!\n\r";
 8002614:	4b1f      	ldr	r3, [pc, #124]	; (8002694 <Create_Nodes+0x1230>)
 8002616:	f107 044c 	add.w	r4, r7, #76	; 0x4c
 800261a:	461d      	mov	r5, r3
 800261c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800261e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002620:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002624:	e884 0007 	stmia.w	r4, {r0, r1, r2}
		HAL_UART_Transmit(huart_debugg,(uint8_t*) str, strlen(str), 10);
 8002628:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800262c:	4618      	mov	r0, r3
 800262e:	f7fd fdef 	bl	8000210 <strlen>
 8002632:	4603      	mov	r3, r0
 8002634:	b29a      	uxth	r2, r3
 8002636:	f107 014c 	add.w	r1, r7, #76	; 0x4c
 800263a:	230a      	movs	r3, #10
 800263c:	6878      	ldr	r0, [r7, #4]
 800263e:	f009 fcb2 	bl	800bfa6 <HAL_UART_Transmit>
 8002642:	e016      	b.n	8002672 <Create_Nodes+0x120e>
	}
	else
	{
		char str[]="Default worths!\n\r";
 8002644:	4b14      	ldr	r3, [pc, #80]	; (8002698 <Create_Nodes+0x1234>)
 8002646:	f107 0438 	add.w	r4, r7, #56	; 0x38
 800264a:	461d      	mov	r5, r3
 800264c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800264e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002650:	682b      	ldr	r3, [r5, #0]
 8002652:	8023      	strh	r3, [r4, #0]
		HAL_UART_Transmit(huart_debugg,(uint8_t*) str, strlen(str), 10);
 8002654:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8002658:	4618      	mov	r0, r3
 800265a:	f7fd fdd9 	bl	8000210 <strlen>
 800265e:	4603      	mov	r3, r0
 8002660:	b29a      	uxth	r2, r3
 8002662:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8002666:	230a      	movs	r3, #10
 8002668:	6878      	ldr	r0, [r7, #4]
 800266a:	f009 fc9c 	bl	800bfa6 <HAL_UART_Transmit>
 800266e:	e000      	b.n	8002672 <Create_Nodes+0x120e>
	if(mode!=SKILL)return;
 8002670:	bf00      	nop
	}
}
 8002672:	3770      	adds	r7, #112	; 0x70
 8002674:	46bd      	mov	sp, r7
 8002676:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800267a:	bf00      	nop
 800267c:	20000360 	.word	0x20000360
 8002680:	40020400 	.word	0x40020400
 8002684:	08040000 	.word	0x08040000
 8002688:	0801146c 	.word	0x0801146c
 800268c:	20000347 	.word	0x20000347
 8002690:	08040016 	.word	0x08040016
 8002694:	08011498 	.word	0x08011498
 8002698:	080114b4 	.word	0x080114b4
 800269c:	00000000 	.word	0x00000000

080026a0 <Control_Task>:


void Control_Task(UART_HandleTypeDef *huart_debugg,TIM_HandleTypeDef *htim_rand,uint32_t tick, uint32_t period)
{
 80026a0:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 80026a4:	b088      	sub	sp, #32
 80026a6:	af00      	add	r7, sp, #0
 80026a8:	60f8      	str	r0, [r7, #12]
 80026aa:	60b9      	str	r1, [r7, #8]
 80026ac:	607a      	str	r2, [r7, #4]
 80026ae:	603b      	str	r3, [r7, #0]

	static uint32_t control_task_tick = 0;
	static uint8_t control_task_state=NEIGHBOUR1;//5 db állapot ->5.után megint 1.jön
	//szomszéd1,szomszéd2,szomszéd3,szomszéd4,kiértékelés

	uint8_t nID=0;
 80026b0:	2300      	movs	r3, #0
 80026b2:	76fb      	strb	r3, [r7, #27]

	if(control_task_tick>tick)return;
 80026b4:	4b7c      	ldr	r3, [pc, #496]	; (80028a8 <Control_Task+0x208>)
 80026b6:	681b      	ldr	r3, [r3, #0]
 80026b8:	687a      	ldr	r2, [r7, #4]
 80026ba:	429a      	cmp	r2, r3
 80026bc:	f0c0 837e 	bcc.w	8002dbc <Control_Task+0x71c>
	control_task_tick=tick+period;
 80026c0:	687a      	ldr	r2, [r7, #4]
 80026c2:	683b      	ldr	r3, [r7, #0]
 80026c4:	4413      	add	r3, r2
 80026c6:	4a78      	ldr	r2, [pc, #480]	; (80028a8 <Control_Task+0x208>)
 80026c8:	6013      	str	r3, [r2, #0]
	if(mode!=SKILL || laneChange!=1)return;
 80026ca:	4b78      	ldr	r3, [pc, #480]	; (80028ac <Control_Task+0x20c>)
 80026cc:	781b      	ldrb	r3, [r3, #0]
 80026ce:	2b52      	cmp	r3, #82	; 0x52
 80026d0:	f040 8376 	bne.w	8002dc0 <Control_Task+0x720>
 80026d4:	4b76      	ldr	r3, [pc, #472]	; (80028b0 <Control_Task+0x210>)
 80026d6:	781b      	ldrb	r3, [r3, #0]
 80026d8:	2b01      	cmp	r3, #1
 80026da:	f040 8371 	bne.w	8002dc0 <Control_Task+0x720>
	//if(!readytorace)return;

	//ha kapu nélküli nodeba tartunk éppen, akkor időzítéssel "detektáljuk" a nodot
	if(N(pos[MY]).type>2)
 80026de:	4b75      	ldr	r3, [pc, #468]	; (80028b4 <Control_Task+0x214>)
 80026e0:	781b      	ldrb	r3, [r3, #0]
 80026e2:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80026e6:	4974      	ldr	r1, [pc, #464]	; (80028b8 <Control_Task+0x218>)
 80026e8:	4613      	mov	r3, r2
 80026ea:	009b      	lsls	r3, r3, #2
 80026ec:	4413      	add	r3, r2
 80026ee:	00db      	lsls	r3, r3, #3
 80026f0:	440b      	add	r3, r1
 80026f2:	3308      	adds	r3, #8
 80026f4:	681b      	ldr	r3, [r3, #0]
 80026f6:	2b02      	cmp	r3, #2
 80026f8:	d94c      	bls.n	8002794 <Control_Task+0xf4>
	{
		s += (float)(tick-tick_prev)*fabs(v)/10000;
 80026fa:	4b70      	ldr	r3, [pc, #448]	; (80028bc <Control_Task+0x21c>)
 80026fc:	681b      	ldr	r3, [r3, #0]
 80026fe:	4618      	mov	r0, r3
 8002700:	f7fd ff42 	bl	8000588 <__aeabi_f2d>
 8002704:	4604      	mov	r4, r0
 8002706:	460d      	mov	r5, r1
 8002708:	4b6d      	ldr	r3, [pc, #436]	; (80028c0 <Control_Task+0x220>)
 800270a:	681b      	ldr	r3, [r3, #0]
 800270c:	687a      	ldr	r2, [r7, #4]
 800270e:	1ad3      	subs	r3, r2, r3
 8002710:	ee07 3a90 	vmov	s15, r3
 8002714:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002718:	ee17 0a90 	vmov	r0, s15
 800271c:	f7fd ff34 	bl	8000588 <__aeabi_f2d>
 8002720:	4680      	mov	r8, r0
 8002722:	4689      	mov	r9, r1
 8002724:	4b67      	ldr	r3, [pc, #412]	; (80028c4 <Control_Task+0x224>)
 8002726:	edd3 7a00 	vldr	s15, [r3]
 800272a:	eef0 7ae7 	vabs.f32	s15, s15
 800272e:	ee17 0a90 	vmov	r0, s15
 8002732:	f7fd ff29 	bl	8000588 <__aeabi_f2d>
 8002736:	4602      	mov	r2, r0
 8002738:	460b      	mov	r3, r1
 800273a:	4640      	mov	r0, r8
 800273c:	4649      	mov	r1, r9
 800273e:	f7fd ff7b 	bl	8000638 <__aeabi_dmul>
 8002742:	4602      	mov	r2, r0
 8002744:	460b      	mov	r3, r1
 8002746:	4610      	mov	r0, r2
 8002748:	4619      	mov	r1, r3
 800274a:	a355      	add	r3, pc, #340	; (adr r3, 80028a0 <Control_Task+0x200>)
 800274c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002750:	f7fe f89c 	bl	800088c <__aeabi_ddiv>
 8002754:	4602      	mov	r2, r0
 8002756:	460b      	mov	r3, r1
 8002758:	4620      	mov	r0, r4
 800275a:	4629      	mov	r1, r5
 800275c:	f7fd fdb6 	bl	80002cc <__adddf3>
 8002760:	4602      	mov	r2, r0
 8002762:	460b      	mov	r3, r1
 8002764:	4610      	mov	r0, r2
 8002766:	4619      	mov	r1, r3
 8002768:	f7fe fa3e 	bl	8000be8 <__aeabi_d2f>
 800276c:	4603      	mov	r3, r0
 800276e:	4a53      	ldr	r2, [pc, #332]	; (80028bc <Control_Task+0x21c>)
 8002770:	6013      	str	r3, [r2, #0]
		if(s>sMAX)nodeDetected=1;
 8002772:	4b55      	ldr	r3, [pc, #340]	; (80028c8 <Control_Task+0x228>)
 8002774:	681b      	ldr	r3, [r3, #0]
 8002776:	ee07 3a90 	vmov	s15, r3
 800277a:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800277e:	4b4f      	ldr	r3, [pc, #316]	; (80028bc <Control_Task+0x21c>)
 8002780:	edd3 7a00 	vldr	s15, [r3]
 8002784:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002788:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800278c:	d502      	bpl.n	8002794 <Control_Task+0xf4>
 800278e:	4b4f      	ldr	r3, [pc, #316]	; (80028cc <Control_Task+0x22c>)
 8002790:	2201      	movs	r2, #1
 8002792:	701a      	strb	r2, [r3, #0]

	}
	tick_prev=tick;//mostantól mérjük az időt
 8002794:	4a4a      	ldr	r2, [pc, #296]	; (80028c0 <Control_Task+0x220>)
 8002796:	687b      	ldr	r3, [r7, #4]
 8002798:	6013      	str	r3, [r2, #0]

	//ha odaértünk a myPositionbe, akkor indulhat a mozgás a nextPosition felé
	if(nodeDetected)
 800279a:	4b4c      	ldr	r3, [pc, #304]	; (80028cc <Control_Task+0x22c>)
 800279c:	781b      	ldrb	r3, [r3, #0]
 800279e:	2b00      	cmp	r3, #0
 80027a0:	f000 80ae 	beq.w	8002900 <Control_Task+0x260>
	{
		LED_B_TOGGLE;
 80027a4:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80027a8:	4849      	ldr	r0, [pc, #292]	; (80028d0 <Control_Task+0x230>)
 80027aa:	f006 fec2 	bl	8009532 <HAL_GPIO_TogglePin>
		if(N(pos[NEXT]).type>2)//ha a kövi node-on nincs kapu
 80027ae:	4b41      	ldr	r3, [pc, #260]	; (80028b4 <Control_Task+0x214>)
 80027b0:	785b      	ldrb	r3, [r3, #1]
 80027b2:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80027b6:	4940      	ldr	r1, [pc, #256]	; (80028b8 <Control_Task+0x218>)
 80027b8:	4613      	mov	r3, r2
 80027ba:	009b      	lsls	r3, r3, #2
 80027bc:	4413      	add	r3, r2
 80027be:	00db      	lsls	r3, r3, #3
 80027c0:	440b      	add	r3, r1
 80027c2:	3308      	adds	r3, #8
 80027c4:	681b      	ldr	r3, [r3, #0]
 80027c6:	2b02      	cmp	r3, #2
 80027c8:	d917      	bls.n	80027fa <Control_Task+0x15a>
		{
			s=0;
 80027ca:	4b3c      	ldr	r3, [pc, #240]	; (80028bc <Control_Task+0x21c>)
 80027cc:	f04f 0200 	mov.w	r2, #0
 80027d0:	601a      	str	r2, [r3, #0]
			sMAX=N(pos[MY]).distance[bestNb[NEXT]]+25;
 80027d2:	4b38      	ldr	r3, [pc, #224]	; (80028b4 <Control_Task+0x214>)
 80027d4:	781b      	ldrb	r3, [r3, #0]
 80027d6:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80027da:	4b3e      	ldr	r3, [pc, #248]	; (80028d4 <Control_Task+0x234>)
 80027dc:	785b      	ldrb	r3, [r3, #1]
 80027de:	4618      	mov	r0, r3
 80027e0:	4935      	ldr	r1, [pc, #212]	; (80028b8 <Control_Task+0x218>)
 80027e2:	4613      	mov	r3, r2
 80027e4:	009b      	lsls	r3, r3, #2
 80027e6:	4413      	add	r3, r2
 80027e8:	009b      	lsls	r3, r3, #2
 80027ea:	4403      	add	r3, r0
 80027ec:	330c      	adds	r3, #12
 80027ee:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80027f2:	3319      	adds	r3, #25
 80027f4:	461a      	mov	r2, r3
 80027f6:	4b34      	ldr	r3, [pc, #208]	; (80028c8 <Control_Task+0x228>)
 80027f8:	601a      	str	r2, [r3, #0]
		}
		//pontok nyugtázása
		if(laneChange==1 && pos[MY]=='V' && pos[NEXT]=='U')//ha a tett színhelyén vagyunk
 80027fa:	4b2d      	ldr	r3, [pc, #180]	; (80028b0 <Control_Task+0x210>)
 80027fc:	781b      	ldrb	r3, [r3, #0]
 80027fe:	2b01      	cmp	r3, #1
 8002800:	d10a      	bne.n	8002818 <Control_Task+0x178>
 8002802:	4b2c      	ldr	r3, [pc, #176]	; (80028b4 <Control_Task+0x214>)
 8002804:	781b      	ldrb	r3, [r3, #0]
 8002806:	2b56      	cmp	r3, #86	; 0x56
 8002808:	d106      	bne.n	8002818 <Control_Task+0x178>
 800280a:	4b2a      	ldr	r3, [pc, #168]	; (80028b4 <Control_Task+0x214>)
 800280c:	785b      	ldrb	r3, [r3, #1]
 800280e:	2b55      	cmp	r3, #85	; 0x55
 8002810:	d102      	bne.n	8002818 <Control_Task+0x178>
		{
			laneChange=2;
 8002812:	4b27      	ldr	r3, [pc, #156]	; (80028b0 <Control_Task+0x210>)
 8002814:	2202      	movs	r2, #2
 8002816:	701a      	strb	r2, [r3, #0]
		}
		static char str[15]; //kiiratás
		sprintf(str,"d,d\n\r");
 8002818:	492f      	ldr	r1, [pc, #188]	; (80028d8 <Control_Task+0x238>)
 800281a:	4830      	ldr	r0, [pc, #192]	; (80028dc <Control_Task+0x23c>)
 800281c:	f00b f92c 	bl	800da78 <siprintf>
		str[0]=pos[MY];
 8002820:	4b24      	ldr	r3, [pc, #144]	; (80028b4 <Control_Task+0x214>)
 8002822:	781a      	ldrb	r2, [r3, #0]
 8002824:	4b2d      	ldr	r3, [pc, #180]	; (80028dc <Control_Task+0x23c>)
 8002826:	701a      	strb	r2, [r3, #0]
		str[2]=pos[NEXT];
 8002828:	4b22      	ldr	r3, [pc, #136]	; (80028b4 <Control_Task+0x214>)
 800282a:	785a      	ldrb	r2, [r3, #1]
 800282c:	4b2b      	ldr	r3, [pc, #172]	; (80028dc <Control_Task+0x23c>)
 800282e:	709a      	strb	r2, [r3, #2]
		HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 2);
 8002830:	482a      	ldr	r0, [pc, #168]	; (80028dc <Control_Task+0x23c>)
 8002832:	f7fd fced 	bl	8000210 <strlen>
 8002836:	4603      	mov	r3, r0
 8002838:	b29a      	uxth	r2, r3
 800283a:	2302      	movs	r3, #2
 800283c:	4927      	ldr	r1, [pc, #156]	; (80028dc <Control_Task+0x23c>)
 800283e:	68f8      	ldr	r0, [r7, #12]
 8002840:	f009 fbb1 	bl	800bfa6 <HAL_UART_Transmit>

		if(Cross_Collision(pos[MY], pos[NEXT]))
 8002844:	4b1b      	ldr	r3, [pc, #108]	; (80028b4 <Control_Task+0x214>)
 8002846:	781b      	ldrb	r3, [r3, #0]
 8002848:	4a1a      	ldr	r2, [pc, #104]	; (80028b4 <Control_Task+0x214>)
 800284a:	7852      	ldrb	r2, [r2, #1]
 800284c:	4611      	mov	r1, r2
 800284e:	4618      	mov	r0, r3
 8002850:	f001 fa06 	bl	8003c60 <Cross_Collision>
 8002854:	4603      	mov	r3, r0
 8002856:	2b00      	cmp	r3, #0
 8002858:	d006      	beq.n	8002868 <Control_Task+0x1c8>
		{
			control_task_state = WAIT;
 800285a:	4b21      	ldr	r3, [pc, #132]	; (80028e0 <Control_Task+0x240>)
 800285c:	2207      	movs	r2, #7
 800285e:	701a      	strb	r2, [r3, #0]
			t_stamp=tick;
 8002860:	4a20      	ldr	r2, [pc, #128]	; (80028e4 <Control_Task+0x244>)
 8002862:	687b      	ldr	r3, [r7, #4]
 8002864:	6013      	str	r3, [r2, #0]
 8002866:	e002      	b.n	800286e <Control_Task+0x1ce>
		}
		else control_task_state = NEIGHBOUR1;
 8002868:	4b1d      	ldr	r3, [pc, #116]	; (80028e0 <Control_Task+0x240>)
 800286a:	2200      	movs	r2, #0
 800286c:	701a      	strb	r2, [r3, #0]

		pos[MY]=pos[NEXT];
 800286e:	4b11      	ldr	r3, [pc, #68]	; (80028b4 <Control_Task+0x214>)
 8002870:	785a      	ldrb	r2, [r3, #1]
 8002872:	4b10      	ldr	r3, [pc, #64]	; (80028b4 <Control_Task+0x214>)
 8002874:	701a      	strb	r2, [r3, #0]
		path=nextPath;
 8002876:	4b1c      	ldr	r3, [pc, #112]	; (80028e8 <Control_Task+0x248>)
 8002878:	781a      	ldrb	r2, [r3, #0]
 800287a:	4b1c      	ldr	r3, [pc, #112]	; (80028ec <Control_Task+0x24c>)
 800287c:	701a      	strb	r2, [r3, #0]
		dir[MY]=dir[NEXT];
 800287e:	4b1c      	ldr	r3, [pc, #112]	; (80028f0 <Control_Task+0x250>)
 8002880:	785a      	ldrb	r2, [r3, #1]
 8002882:	4b1b      	ldr	r3, [pc, #108]	; (80028f0 <Control_Task+0x250>)
 8002884:	701a      	strb	r2, [r3, #0]
		orientation=nextOri;//FORWARD
 8002886:	4b1b      	ldr	r3, [pc, #108]	; (80028f4 <Control_Task+0x254>)
 8002888:	781a      	ldrb	r2, [r3, #0]
 800288a:	4b1b      	ldr	r3, [pc, #108]	; (80028f8 <Control_Task+0x258>)
 800288c:	701a      	strb	r2, [r3, #0]

		dontGoBack=0;
 800288e:	4b1b      	ldr	r3, [pc, #108]	; (80028fc <Control_Task+0x25c>)
 8002890:	2200      	movs	r2, #0
 8002892:	701a      	strb	r2, [r3, #0]
		nodeDetected=0;
 8002894:	4b0d      	ldr	r3, [pc, #52]	; (80028cc <Control_Task+0x22c>)
 8002896:	2200      	movs	r2, #0
 8002898:	701a      	strb	r2, [r3, #0]
		return;
 800289a:	e292      	b.n	8002dc2 <Control_Task+0x722>
 800289c:	f3af 8000 	nop.w
 80028a0:	00000000 	.word	0x00000000
 80028a4:	40c38800 	.word	0x40c38800
 80028a8:	200006d0 	.word	0x200006d0
 80028ac:	20000336 	.word	0x20000336
 80028b0:	20000348 	.word	0x20000348
 80028b4:	20000358 	.word	0x20000358
 80028b8:	20000360 	.word	0x20000360
 80028bc:	200006d4 	.word	0x200006d4
 80028c0:	200006d8 	.word	0x200006d8
 80028c4:	20000754 	.word	0x20000754
 80028c8:	20000000 	.word	0x20000000
 80028cc:	20000345 	.word	0x20000345
 80028d0:	40020400 	.word	0x40020400
 80028d4:	200006dc 	.word	0x200006dc
 80028d8:	080114c8 	.word	0x080114c8
 80028dc:	200006e0 	.word	0x200006e0
 80028e0:	200006ef 	.word	0x200006ef
 80028e4:	200006f0 	.word	0x200006f0
 80028e8:	200006f4 	.word	0x200006f4
 80028ec:	20000346 	.word	0x20000346
 80028f0:	2000035c 	.word	0x2000035c
 80028f4:	200006f5 	.word	0x200006f5
 80028f8:	20000344 	.word	0x20000344
 80028fc:	20000004 	.word	0x20000004
	}

	if(thunderboardFlag)//ha új kalózpozíció jött a TB-től ujrakezdjük a számolást (első szomszéd vizsgálata jön)
 8002900:	4ba7      	ldr	r3, [pc, #668]	; (8002ba0 <Control_Task+0x500>)
 8002902:	781b      	ldrb	r3, [r3, #0]
 8002904:	b2db      	uxtb	r3, r3
 8002906:	2b00      	cmp	r3, #0
 8002908:	d019      	beq.n	800293e <Control_Task+0x29e>
	{
		if(control_task_state!=WAIT)//wait állapotból nem tud mindekt kibillenteni az új kalózrobot pozíció
 800290a:	4ba6      	ldr	r3, [pc, #664]	; (8002ba4 <Control_Task+0x504>)
 800290c:	781b      	ldrb	r3, [r3, #0]
 800290e:	2b07      	cmp	r3, #7
 8002910:	d002      	beq.n	8002918 <Control_Task+0x278>
			control_task_state=NEIGHBOUR1;//kezdjük előrröl a fitneszérték számítást az 1. szomszédtól
 8002912:	4ba4      	ldr	r3, [pc, #656]	; (8002ba4 <Control_Task+0x504>)
 8002914:	2200      	movs	r2, #0
 8002916:	701a      	strb	r2, [r3, #0]

		piratePos_prev[0]=piratePos[0];//előző kalozpozíció frissítése
 8002918:	4ba3      	ldr	r3, [pc, #652]	; (8002ba8 <Control_Task+0x508>)
 800291a:	781a      	ldrb	r2, [r3, #0]
 800291c:	4ba3      	ldr	r3, [pc, #652]	; (8002bac <Control_Task+0x50c>)
 800291e:	701a      	strb	r2, [r3, #0]
		piratePos_prev[1]=piratePos[1];
 8002920:	4ba1      	ldr	r3, [pc, #644]	; (8002ba8 <Control_Task+0x508>)
 8002922:	785a      	ldrb	r2, [r3, #1]
 8002924:	4ba1      	ldr	r3, [pc, #644]	; (8002bac <Control_Task+0x50c>)
 8002926:	705a      	strb	r2, [r3, #1]
		piratePos_prev[2]=piratePos[2];
 8002928:	4b9f      	ldr	r3, [pc, #636]	; (8002ba8 <Control_Task+0x508>)
 800292a:	789a      	ldrb	r2, [r3, #2]
 800292c:	4b9f      	ldr	r3, [pc, #636]	; (8002bac <Control_Task+0x50c>)
 800292e:	709a      	strb	r2, [r3, #2]
		piratePos_prev[3]=piratePos[3];
 8002930:	4b9d      	ldr	r3, [pc, #628]	; (8002ba8 <Control_Task+0x508>)
 8002932:	78da      	ldrb	r2, [r3, #3]
 8002934:	4b9d      	ldr	r3, [pc, #628]	; (8002bac <Control_Task+0x50c>)
 8002936:	70da      	strb	r2, [r3, #3]

		thunderboardFlag=0; //várjuk az újabb kalózrobot pozíciókat a thunderboardtól
 8002938:	4b99      	ldr	r3, [pc, #612]	; (8002ba0 <Control_Task+0x500>)
 800293a:	2200      	movs	r2, #0
 800293c:	701a      	strb	r2, [r3, #0]
	}

	/******************LEGJOBB SZOMSZÉD KIVÁLASZTÁSA (első 4 állapot)******************/
	if(control_task_state < EVALUATE)//1.szomszéd/2.szomszéd/3.szomszéd/4.szomszéd
 800293e:	4b99      	ldr	r3, [pc, #612]	; (8002ba4 <Control_Task+0x504>)
 8002940:	781b      	ldrb	r3, [r3, #0]
 8002942:	2b05      	cmp	r3, #5
 8002944:	f200 8171 	bhi.w	8002c2a <Control_Task+0x58a>
	{
		if(control_task_state==NEIGHBOUR1)
 8002948:	4b96      	ldr	r3, [pc, #600]	; (8002ba4 <Control_Task+0x504>)
 800294a:	781b      	ldrb	r3, [r3, #0]
 800294c:	2b00      	cmp	r3, #0
 800294e:	d102      	bne.n	8002956 <Control_Task+0x2b6>
		{
			bestFitness=-200.0;//az előző számolás legjob fitneszértéke volt még benne
 8002950:	4b97      	ldr	r3, [pc, #604]	; (8002bb0 <Control_Task+0x510>)
 8002952:	4a98      	ldr	r2, [pc, #608]	; (8002bb4 <Control_Task+0x514>)
 8002954:	601a      	str	r2, [r3, #0]
		}
		nID=N(pos[MY]).neighbours[control_task_state]; //a vizsgált 1.rendű szomszéd azonosítója
 8002956:	4b98      	ldr	r3, [pc, #608]	; (8002bb8 <Control_Task+0x518>)
 8002958:	781b      	ldrb	r3, [r3, #0]
 800295a:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800295e:	4b91      	ldr	r3, [pc, #580]	; (8002ba4 <Control_Task+0x504>)
 8002960:	781b      	ldrb	r3, [r3, #0]
 8002962:	4618      	mov	r0, r3
 8002964:	4995      	ldr	r1, [pc, #596]	; (8002bbc <Control_Task+0x51c>)
 8002966:	4613      	mov	r3, r2
 8002968:	009b      	lsls	r3, r3, #2
 800296a:	4413      	add	r3, r2
 800296c:	00db      	lsls	r3, r3, #3
 800296e:	440b      	add	r3, r1
 8002970:	4403      	add	r3, r0
 8002972:	330c      	adds	r3, #12
 8002974:	781b      	ldrb	r3, [r3, #0]
 8002976:	76fb      	strb	r3, [r7, #27]
		if(nID) //ha létezik a szomszéd
 8002978:	7efb      	ldrb	r3, [r7, #27]
 800297a:	2b00      	cmp	r3, #0
 800297c:	f000 812c 	beq.w	8002bd8 <Control_Task+0x538>
		{
			fitness[control_task_state]=(float)N(nID).worth; //fitneszérték 1.rendű szomszéd alapján
 8002980:	7efb      	ldrb	r3, [r7, #27]
 8002982:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002986:	498d      	ldr	r1, [pc, #564]	; (8002bbc <Control_Task+0x51c>)
 8002988:	4613      	mov	r3, r2
 800298a:	009b      	lsls	r3, r3, #2
 800298c:	4413      	add	r3, r2
 800298e:	00db      	lsls	r3, r3, #3
 8002990:	440b      	add	r3, r1
 8002992:	3304      	adds	r3, #4
 8002994:	681a      	ldr	r2, [r3, #0]
 8002996:	4b83      	ldr	r3, [pc, #524]	; (8002ba4 <Control_Task+0x504>)
 8002998:	781b      	ldrb	r3, [r3, #0]
 800299a:	ee07 2a90 	vmov	s15, r2
 800299e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80029a2:	4a87      	ldr	r2, [pc, #540]	; (8002bc0 <Control_Task+0x520>)
 80029a4:	009b      	lsls	r3, r3, #2
 80029a6:	4413      	add	r3, r2
 80029a8:	edc3 7a00 	vstr	s15, [r3]
			//kalozrobot hatása az 1.rendű szomszéd esetén
			if(piratePos[1]==nID) fitness[control_task_state] -= 80/*P*/;//ha a kalóz is ebbe az 1.rendű tart éppen akkor kerüljük el az ütközést
 80029ac:	4b7e      	ldr	r3, [pc, #504]	; (8002ba8 <Control_Task+0x508>)
 80029ae:	785b      	ldrb	r3, [r3, #1]
 80029b0:	7efa      	ldrb	r2, [r7, #27]
 80029b2:	429a      	cmp	r2, r3
 80029b4:	d112      	bne.n	80029dc <Control_Task+0x33c>
 80029b6:	4b7b      	ldr	r3, [pc, #492]	; (8002ba4 <Control_Task+0x504>)
 80029b8:	781b      	ldrb	r3, [r3, #0]
 80029ba:	4a81      	ldr	r2, [pc, #516]	; (8002bc0 <Control_Task+0x520>)
 80029bc:	009b      	lsls	r3, r3, #2
 80029be:	4413      	add	r3, r2
 80029c0:	edd3 7a00 	vldr	s15, [r3]
 80029c4:	4b77      	ldr	r3, [pc, #476]	; (8002ba4 <Control_Task+0x504>)
 80029c6:	781b      	ldrb	r3, [r3, #0]
 80029c8:	ed9f 7a7e 	vldr	s14, [pc, #504]	; 8002bc4 <Control_Task+0x524>
 80029cc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80029d0:	4a7b      	ldr	r2, [pc, #492]	; (8002bc0 <Control_Task+0x520>)
 80029d2:	009b      	lsls	r3, r3, #2
 80029d4:	4413      	add	r3, r2
 80029d6:	edc3 7a00 	vstr	s15, [r3]
 80029da:	e06f      	b.n	8002abc <Control_Task+0x41c>

			else if(piratePos[2]==nID) fitness[control_task_state] -= 60/*P*/;//ha még csak tervezi, hogy odamegy, akkor is kerüljük a pontot
 80029dc:	4b72      	ldr	r3, [pc, #456]	; (8002ba8 <Control_Task+0x508>)
 80029de:	789b      	ldrb	r3, [r3, #2]
 80029e0:	7efa      	ldrb	r2, [r7, #27]
 80029e2:	429a      	cmp	r2, r3
 80029e4:	d112      	bne.n	8002a0c <Control_Task+0x36c>
 80029e6:	4b6f      	ldr	r3, [pc, #444]	; (8002ba4 <Control_Task+0x504>)
 80029e8:	781b      	ldrb	r3, [r3, #0]
 80029ea:	4a75      	ldr	r2, [pc, #468]	; (8002bc0 <Control_Task+0x520>)
 80029ec:	009b      	lsls	r3, r3, #2
 80029ee:	4413      	add	r3, r2
 80029f0:	edd3 7a00 	vldr	s15, [r3]
 80029f4:	4b6b      	ldr	r3, [pc, #428]	; (8002ba4 <Control_Task+0x504>)
 80029f6:	781b      	ldrb	r3, [r3, #0]
 80029f8:	ed9f 7a73 	vldr	s14, [pc, #460]	; 8002bc8 <Control_Task+0x528>
 80029fc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002a00:	4a6f      	ldr	r2, [pc, #444]	; (8002bc0 <Control_Task+0x520>)
 8002a02:	009b      	lsls	r3, r3, #2
 8002a04:	4413      	add	r3, r2
 8002a06:	edc3 7a00 	vstr	s15, [r3]
 8002a0a:	e057      	b.n	8002abc <Control_Task+0x41c>
			/**/
			else if(piratePos[0]==nID)//ha elhaygta azt  apontot akkor 3 szomszédot is büntetünk
 8002a0c:	4b66      	ldr	r3, [pc, #408]	; (8002ba8 <Control_Task+0x508>)
 8002a0e:	781b      	ldrb	r3, [r3, #0]
 8002a10:	7efa      	ldrb	r2, [r7, #27]
 8002a12:	429a      	cmp	r2, r3
 8002a14:	d152      	bne.n	8002abc <Control_Task+0x41c>
			{
				fitness[control_task_state] -= 20;
 8002a16:	4b63      	ldr	r3, [pc, #396]	; (8002ba4 <Control_Task+0x504>)
 8002a18:	781b      	ldrb	r3, [r3, #0]
 8002a1a:	4a69      	ldr	r2, [pc, #420]	; (8002bc0 <Control_Task+0x520>)
 8002a1c:	009b      	lsls	r3, r3, #2
 8002a1e:	4413      	add	r3, r2
 8002a20:	edd3 7a00 	vldr	s15, [r3]
 8002a24:	4b5f      	ldr	r3, [pc, #380]	; (8002ba4 <Control_Task+0x504>)
 8002a26:	781b      	ldrb	r3, [r3, #0]
 8002a28:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 8002a2c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002a30:	4a63      	ldr	r2, [pc, #396]	; (8002bc0 <Control_Task+0x520>)
 8002a32:	009b      	lsls	r3, r3, #2
 8002a34:	4413      	add	r3, r2
 8002a36:	edc3 7a00 	vstr	s15, [r3]
				if(control_task_state<=NEIGHBOUR3)
 8002a3a:	4b5a      	ldr	r3, [pc, #360]	; (8002ba4 <Control_Task+0x504>)
 8002a3c:	781b      	ldrb	r3, [r3, #0]
 8002a3e:	2b02      	cmp	r3, #2
 8002a40:	d81e      	bhi.n	8002a80 <Control_Task+0x3e0>
				{
					fitness[NEIGHBOUR1]-=60;
 8002a42:	4b5f      	ldr	r3, [pc, #380]	; (8002bc0 <Control_Task+0x520>)
 8002a44:	edd3 7a00 	vldr	s15, [r3]
 8002a48:	ed9f 7a5f 	vldr	s14, [pc, #380]	; 8002bc8 <Control_Task+0x528>
 8002a4c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002a50:	4b5b      	ldr	r3, [pc, #364]	; (8002bc0 <Control_Task+0x520>)
 8002a52:	edc3 7a00 	vstr	s15, [r3]
					fitness[NEIGHBOUR2]-=60;
 8002a56:	4b5a      	ldr	r3, [pc, #360]	; (8002bc0 <Control_Task+0x520>)
 8002a58:	edd3 7a01 	vldr	s15, [r3, #4]
 8002a5c:	ed9f 7a5a 	vldr	s14, [pc, #360]	; 8002bc8 <Control_Task+0x528>
 8002a60:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002a64:	4b56      	ldr	r3, [pc, #344]	; (8002bc0 <Control_Task+0x520>)
 8002a66:	edc3 7a01 	vstr	s15, [r3, #4]
					fitness[NEIGHBOUR3]-=60;
 8002a6a:	4b55      	ldr	r3, [pc, #340]	; (8002bc0 <Control_Task+0x520>)
 8002a6c:	edd3 7a02 	vldr	s15, [r3, #8]
 8002a70:	ed9f 7a55 	vldr	s14, [pc, #340]	; 8002bc8 <Control_Task+0x528>
 8002a74:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002a78:	4b51      	ldr	r3, [pc, #324]	; (8002bc0 <Control_Task+0x520>)
 8002a7a:	edc3 7a02 	vstr	s15, [r3, #8]
 8002a7e:	e01d      	b.n	8002abc <Control_Task+0x41c>
				}
				else
				{
					fitness[NEIGHBOUR4]-=60;
 8002a80:	4b4f      	ldr	r3, [pc, #316]	; (8002bc0 <Control_Task+0x520>)
 8002a82:	edd3 7a03 	vldr	s15, [r3, #12]
 8002a86:	ed9f 7a50 	vldr	s14, [pc, #320]	; 8002bc8 <Control_Task+0x528>
 8002a8a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002a8e:	4b4c      	ldr	r3, [pc, #304]	; (8002bc0 <Control_Task+0x520>)
 8002a90:	edc3 7a03 	vstr	s15, [r3, #12]
					fitness[NEIGHBOUR5]-=60;
 8002a94:	4b4a      	ldr	r3, [pc, #296]	; (8002bc0 <Control_Task+0x520>)
 8002a96:	edd3 7a04 	vldr	s15, [r3, #16]
 8002a9a:	ed9f 7a4b 	vldr	s14, [pc, #300]	; 8002bc8 <Control_Task+0x528>
 8002a9e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002aa2:	4b47      	ldr	r3, [pc, #284]	; (8002bc0 <Control_Task+0x520>)
 8002aa4:	edc3 7a04 	vstr	s15, [r3, #16]
					fitness[NEIGHBOUR6]-=60;
 8002aa8:	4b45      	ldr	r3, [pc, #276]	; (8002bc0 <Control_Task+0x520>)
 8002aaa:	edd3 7a05 	vldr	s15, [r3, #20]
 8002aae:	ed9f 7a46 	vldr	s14, [pc, #280]	; 8002bc8 <Control_Task+0x528>
 8002ab2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002ab6:	4b42      	ldr	r3, [pc, #264]	; (8002bc0 <Control_Task+0x520>)
 8002ab8:	edc3 7a05 	vstr	s15, [r3, #20]
			}

			int i;
			uint8_t nnID;
			float nnFit;
			for(i=0;i<6;i++)//2.rednű szomszédok
 8002abc:	2300      	movs	r3, #0
 8002abe:	61fb      	str	r3, [r7, #28]
 8002ac0:	e046      	b.n	8002b50 <Control_Task+0x4b0>
			{
				nnFit=0.0;
 8002ac2:	f04f 0300 	mov.w	r3, #0
 8002ac6:	617b      	str	r3, [r7, #20]
				nnID=N(nID).neighbours[i]; //2.rednű szomszéd ID-ja
 8002ac8:	7efb      	ldrb	r3, [r7, #27]
 8002aca:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002ace:	493b      	ldr	r1, [pc, #236]	; (8002bbc <Control_Task+0x51c>)
 8002ad0:	4613      	mov	r3, r2
 8002ad2:	009b      	lsls	r3, r3, #2
 8002ad4:	4413      	add	r3, r2
 8002ad6:	00db      	lsls	r3, r3, #3
 8002ad8:	18ca      	adds	r2, r1, r3
 8002ada:	69fb      	ldr	r3, [r7, #28]
 8002adc:	4413      	add	r3, r2
 8002ade:	330c      	adds	r3, #12
 8002ae0:	781b      	ldrb	r3, [r3, #0]
 8002ae2:	74fb      	strb	r3, [r7, #19]
				if(nnID && nnID!=pos[MY])//ha létezik a 2.rendű szomszéd (és nem a myposition az)
 8002ae4:	7cfb      	ldrb	r3, [r7, #19]
 8002ae6:	2b00      	cmp	r3, #0
 8002ae8:	d02f      	beq.n	8002b4a <Control_Task+0x4aa>
 8002aea:	4b33      	ldr	r3, [pc, #204]	; (8002bb8 <Control_Task+0x518>)
 8002aec:	781b      	ldrb	r3, [r3, #0]
 8002aee:	7cfa      	ldrb	r2, [r7, #19]
 8002af0:	429a      	cmp	r2, r3
 8002af2:	d02a      	beq.n	8002b4a <Control_Task+0x4aa>
				{
					nnFit += (float)N(nnID).worth;
 8002af4:	7cfb      	ldrb	r3, [r7, #19]
 8002af6:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002afa:	4930      	ldr	r1, [pc, #192]	; (8002bbc <Control_Task+0x51c>)
 8002afc:	4613      	mov	r3, r2
 8002afe:	009b      	lsls	r3, r3, #2
 8002b00:	4413      	add	r3, r2
 8002b02:	00db      	lsls	r3, r3, #3
 8002b04:	440b      	add	r3, r1
 8002b06:	3304      	adds	r3, #4
 8002b08:	681b      	ldr	r3, [r3, #0]
 8002b0a:	ee07 3a90 	vmov	s15, r3
 8002b0e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002b12:	ed97 7a05 	vldr	s14, [r7, #20]
 8002b16:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002b1a:	edc7 7a05 	vstr	s15, [r7, #20]
					//if(piratePos[1]==nnID) nnFit -= 0.5/*P*/;//ha a kalóz is ebbe a pontba tart éppen akkor kerüljük el az ütközést
					//else if(piratePos[2]==nnID) fitness[control_task_state] -= 0.25/*P*/;//ha még csak tervezi, hogy odamegy, akkor se fogjuk tudni megelőnzi, mert mi 3 nodnyira vagyunk ő pedig csak 2
					//if(!lane_change)nnFit = nnFit * (float)DIST_AVG/N(nID).distance[i];//a 2.rendű szomszédhoz tartozó fitneszérték jobb ha az közelebb van az 1.rendű szomszédjához
					//ha a sávváltó szakaszt keressük akkor viszont nem díjazzuk a közelséget
					fitness[control_task_state] += nnFit/6/*P*/;
 8002b1e:	4b21      	ldr	r3, [pc, #132]	; (8002ba4 <Control_Task+0x504>)
 8002b20:	781b      	ldrb	r3, [r3, #0]
 8002b22:	4a27      	ldr	r2, [pc, #156]	; (8002bc0 <Control_Task+0x520>)
 8002b24:	009b      	lsls	r3, r3, #2
 8002b26:	4413      	add	r3, r2
 8002b28:	ed93 7a00 	vldr	s14, [r3]
 8002b2c:	edd7 6a05 	vldr	s13, [r7, #20]
 8002b30:	eeb1 6a08 	vmov.f32	s12, #24	; 0x40c00000  6.0
 8002b34:	eec6 7a86 	vdiv.f32	s15, s13, s12
 8002b38:	4b1a      	ldr	r3, [pc, #104]	; (8002ba4 <Control_Task+0x504>)
 8002b3a:	781b      	ldrb	r3, [r3, #0]
 8002b3c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002b40:	4a1f      	ldr	r2, [pc, #124]	; (8002bc0 <Control_Task+0x520>)
 8002b42:	009b      	lsls	r3, r3, #2
 8002b44:	4413      	add	r3, r2
 8002b46:	edc3 7a00 	vstr	s15, [r3]
			for(i=0;i<6;i++)//2.rednű szomszédok
 8002b4a:	69fb      	ldr	r3, [r7, #28]
 8002b4c:	3301      	adds	r3, #1
 8002b4e:	61fb      	str	r3, [r7, #28]
 8002b50:	69fb      	ldr	r3, [r7, #28]
 8002b52:	2b05      	cmp	r3, #5
 8002b54:	ddb5      	ble.n	8002ac2 <Control_Task+0x422>
				}
			}
			//if(!lane_change) fitness[control_task_state] =fitness[control_task_state] * (float)DIST_AVG/N(pos[MY]).distance[control_task_state]; //minél közelebb van a szomszéd annál jobb
			//ha a sávváltó szakaszt keressük akkor viszont nem díjazzuk a közelséget
			if(dontGoBack)
 8002b56:	4b1d      	ldr	r3, [pc, #116]	; (8002bcc <Control_Task+0x52c>)
 8002b58:	781b      	ldrb	r3, [r3, #0]
 8002b5a:	2b00      	cmp	r3, #0
 8002b5c:	d043      	beq.n	8002be6 <Control_Task+0x546>
			{
				if(control_task_state<=NEIGHBOUR3 && dir[MY]==2)
 8002b5e:	4b11      	ldr	r3, [pc, #68]	; (8002ba4 <Control_Task+0x504>)
 8002b60:	781b      	ldrb	r3, [r3, #0]
 8002b62:	2b02      	cmp	r3, #2
 8002b64:	d80b      	bhi.n	8002b7e <Control_Task+0x4de>
 8002b66:	4b1a      	ldr	r3, [pc, #104]	; (8002bd0 <Control_Task+0x530>)
 8002b68:	781b      	ldrb	r3, [r3, #0]
 8002b6a:	2b02      	cmp	r3, #2
 8002b6c:	d107      	bne.n	8002b7e <Control_Task+0x4de>
				{
					fitness[control_task_state]=-160;
 8002b6e:	4b0d      	ldr	r3, [pc, #52]	; (8002ba4 <Control_Task+0x504>)
 8002b70:	781b      	ldrb	r3, [r3, #0]
 8002b72:	4a13      	ldr	r2, [pc, #76]	; (8002bc0 <Control_Task+0x520>)
 8002b74:	009b      	lsls	r3, r3, #2
 8002b76:	4413      	add	r3, r2
 8002b78:	4a16      	ldr	r2, [pc, #88]	; (8002bd4 <Control_Task+0x534>)
 8002b7a:	601a      	str	r2, [r3, #0]
 8002b7c:	e033      	b.n	8002be6 <Control_Task+0x546>
				}
				else if(control_task_state >= NEIGHBOUR4 && dir[MY]==1)
 8002b7e:	4b09      	ldr	r3, [pc, #36]	; (8002ba4 <Control_Task+0x504>)
 8002b80:	781b      	ldrb	r3, [r3, #0]
 8002b82:	2b02      	cmp	r3, #2
 8002b84:	d92f      	bls.n	8002be6 <Control_Task+0x546>
 8002b86:	4b12      	ldr	r3, [pc, #72]	; (8002bd0 <Control_Task+0x530>)
 8002b88:	781b      	ldrb	r3, [r3, #0]
 8002b8a:	2b01      	cmp	r3, #1
 8002b8c:	d12b      	bne.n	8002be6 <Control_Task+0x546>
				{
					fitness[control_task_state]=-160;
 8002b8e:	4b05      	ldr	r3, [pc, #20]	; (8002ba4 <Control_Task+0x504>)
 8002b90:	781b      	ldrb	r3, [r3, #0]
 8002b92:	4a0b      	ldr	r2, [pc, #44]	; (8002bc0 <Control_Task+0x520>)
 8002b94:	009b      	lsls	r3, r3, #2
 8002b96:	4413      	add	r3, r2
 8002b98:	4a0e      	ldr	r2, [pc, #56]	; (8002bd4 <Control_Task+0x534>)
 8002b9a:	601a      	str	r2, [r3, #0]
 8002b9c:	e023      	b.n	8002be6 <Control_Task+0x546>
 8002b9e:	bf00      	nop
 8002ba0:	2000034a 	.word	0x2000034a
 8002ba4:	200006ef 	.word	0x200006ef
 8002ba8:	20000354 	.word	0x20000354
 8002bac:	200006f8 	.word	0x200006f8
 8002bb0:	20000008 	.word	0x20000008
 8002bb4:	c3480000 	.word	0xc3480000
 8002bb8:	20000358 	.word	0x20000358
 8002bbc:	20000360 	.word	0x20000360
 8002bc0:	200006fc 	.word	0x200006fc
 8002bc4:	42a00000 	.word	0x42a00000
 8002bc8:	42700000 	.word	0x42700000
 8002bcc:	20000004 	.word	0x20000004
 8002bd0:	2000035c 	.word	0x2000035c
 8002bd4:	c3200000 	.word	0xc3200000
				}
			}
		}
		else fitness[control_task_state]=-150.0;//ha nem létezik a szomszéd erre tuti ne menjünk
 8002bd8:	4b7c      	ldr	r3, [pc, #496]	; (8002dcc <Control_Task+0x72c>)
 8002bda:	781b      	ldrb	r3, [r3, #0]
 8002bdc:	4a7c      	ldr	r2, [pc, #496]	; (8002dd0 <Control_Task+0x730>)
 8002bde:	009b      	lsls	r3, r3, #2
 8002be0:	4413      	add	r3, r2
 8002be2:	4a7c      	ldr	r2, [pc, #496]	; (8002dd4 <Control_Task+0x734>)
 8002be4:	601a      	str	r2, [r3, #0]
		//uint16_t tmp= __HAL_TIM_GET_COUNTER(htim_rand)%2;
		if(fitness[control_task_state]>=bestFitness) //ha ez a fitness jobb mint az eddigi legjobb, akkor mostantól ez a legjobb
 8002be6:	4b79      	ldr	r3, [pc, #484]	; (8002dcc <Control_Task+0x72c>)
 8002be8:	781b      	ldrb	r3, [r3, #0]
 8002bea:	4a79      	ldr	r2, [pc, #484]	; (8002dd0 <Control_Task+0x730>)
 8002bec:	009b      	lsls	r3, r3, #2
 8002bee:	4413      	add	r3, r2
 8002bf0:	ed93 7a00 	vldr	s14, [r3]
 8002bf4:	4b78      	ldr	r3, [pc, #480]	; (8002dd8 <Control_Task+0x738>)
 8002bf6:	edd3 7a00 	vldr	s15, [r3]
 8002bfa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002bfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002c02:	db0b      	blt.n	8002c1c <Control_Task+0x57c>
		{
			bestFitness=fitness[control_task_state];
 8002c04:	4b71      	ldr	r3, [pc, #452]	; (8002dcc <Control_Task+0x72c>)
 8002c06:	781b      	ldrb	r3, [r3, #0]
 8002c08:	4a71      	ldr	r2, [pc, #452]	; (8002dd0 <Control_Task+0x730>)
 8002c0a:	009b      	lsls	r3, r3, #2
 8002c0c:	4413      	add	r3, r2
 8002c0e:	681b      	ldr	r3, [r3, #0]
 8002c10:	4a71      	ldr	r2, [pc, #452]	; (8002dd8 <Control_Task+0x738>)
 8002c12:	6013      	str	r3, [r2, #0]
			bestNb[TMP] = control_task_state;//ez az egy érték amivel a task első 4 (fitnesszámoló) álapota kommunikál a kiértékelő álapottal
 8002c14:	4b6d      	ldr	r3, [pc, #436]	; (8002dcc <Control_Task+0x72c>)
 8002c16:	781a      	ldrb	r2, [r3, #0]
 8002c18:	4b70      	ldr	r3, [pc, #448]	; (8002ddc <Control_Task+0x73c>)
 8002c1a:	701a      	strb	r2, [r3, #0]
		}
		control_task_state++;
 8002c1c:	4b6b      	ldr	r3, [pc, #428]	; (8002dcc <Control_Task+0x72c>)
 8002c1e:	781b      	ldrb	r3, [r3, #0]
 8002c20:	3301      	adds	r3, #1
 8002c22:	b2da      	uxtb	r2, r3
 8002c24:	4b69      	ldr	r3, [pc, #420]	; (8002dcc <Control_Task+0x72c>)
 8002c26:	701a      	strb	r2, [r3, #0]
		return; //ha csak valamelyik szomszédot vizsgáltuk még akkor eddig tartott ez a task futás, itt kilépünk
 8002c28:	e0cb      	b.n	8002dc2 <Control_Task+0x722>
	}
	/**************************************************************************************/
	//ide csak akkor jutunk el ha control_task_state>NEIGHBOUR4

	/**********************KIÉRTÉKELÉS (control_task_state=EVALUATE ->5.állapot)**********************/
	else if(control_task_state==EVALUATE)
 8002c2a:	4b68      	ldr	r3, [pc, #416]	; (8002dcc <Control_Task+0x72c>)
 8002c2c:	781b      	ldrb	r3, [r3, #0]
 8002c2e:	2b06      	cmp	r3, #6
 8002c30:	f040 80a6 	bne.w	8002d80 <Control_Task+0x6e0>
	{
		if(bestFitness==0 && fitness[N(pos[MY]).middle]==0) bestNb[TMP]=N(pos[MY]).middle;
 8002c34:	4b68      	ldr	r3, [pc, #416]	; (8002dd8 <Control_Task+0x738>)
 8002c36:	edd3 7a00 	vldr	s15, [r3]
 8002c3a:	eef5 7a40 	vcmp.f32	s15, #0.0
 8002c3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002c42:	d123      	bne.n	8002c8c <Control_Task+0x5ec>
 8002c44:	4b66      	ldr	r3, [pc, #408]	; (8002de0 <Control_Task+0x740>)
 8002c46:	781b      	ldrb	r3, [r3, #0]
 8002c48:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002c4c:	4965      	ldr	r1, [pc, #404]	; (8002de4 <Control_Task+0x744>)
 8002c4e:	4613      	mov	r3, r2
 8002c50:	009b      	lsls	r3, r3, #2
 8002c52:	4413      	add	r3, r2
 8002c54:	00db      	lsls	r3, r3, #3
 8002c56:	440b      	add	r3, r1
 8002c58:	3324      	adds	r3, #36	; 0x24
 8002c5a:	781b      	ldrb	r3, [r3, #0]
 8002c5c:	4a5c      	ldr	r2, [pc, #368]	; (8002dd0 <Control_Task+0x730>)
 8002c5e:	009b      	lsls	r3, r3, #2
 8002c60:	4413      	add	r3, r2
 8002c62:	edd3 7a00 	vldr	s15, [r3]
 8002c66:	eef5 7a40 	vcmp.f32	s15, #0.0
 8002c6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002c6e:	d10d      	bne.n	8002c8c <Control_Task+0x5ec>
 8002c70:	4b5b      	ldr	r3, [pc, #364]	; (8002de0 <Control_Task+0x740>)
 8002c72:	781b      	ldrb	r3, [r3, #0]
 8002c74:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002c78:	495a      	ldr	r1, [pc, #360]	; (8002de4 <Control_Task+0x744>)
 8002c7a:	4613      	mov	r3, r2
 8002c7c:	009b      	lsls	r3, r3, #2
 8002c7e:	4413      	add	r3, r2
 8002c80:	00db      	lsls	r3, r3, #3
 8002c82:	440b      	add	r3, r1
 8002c84:	3324      	adds	r3, #36	; 0x24
 8002c86:	781a      	ldrb	r2, [r3, #0]
 8002c88:	4b54      	ldr	r3, [pc, #336]	; (8002ddc <Control_Task+0x73c>)
 8002c8a:	701a      	strb	r2, [r3, #0]
		bestNb[NEXT]=bestNb[TMP];
 8002c8c:	4b53      	ldr	r3, [pc, #332]	; (8002ddc <Control_Task+0x73c>)
 8002c8e:	781a      	ldrb	r2, [r3, #0]
 8002c90:	4b52      	ldr	r3, [pc, #328]	; (8002ddc <Control_Task+0x73c>)
 8002c92:	705a      	strb	r2, [r3, #1]
		pos[NEXT]=N(pos[MY]).neighbours[bestNb[NEXT]];//a következő poziciónk a legjobb szomszéd lesz
 8002c94:	4b52      	ldr	r3, [pc, #328]	; (8002de0 <Control_Task+0x740>)
 8002c96:	781b      	ldrb	r3, [r3, #0]
 8002c98:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002c9c:	4b4f      	ldr	r3, [pc, #316]	; (8002ddc <Control_Task+0x73c>)
 8002c9e:	785b      	ldrb	r3, [r3, #1]
 8002ca0:	4618      	mov	r0, r3
 8002ca2:	4950      	ldr	r1, [pc, #320]	; (8002de4 <Control_Task+0x744>)
 8002ca4:	4613      	mov	r3, r2
 8002ca6:	009b      	lsls	r3, r3, #2
 8002ca8:	4413      	add	r3, r2
 8002caa:	00db      	lsls	r3, r3, #3
 8002cac:	440b      	add	r3, r1
 8002cae:	4403      	add	r3, r0
 8002cb0:	330c      	adds	r3, #12
 8002cb2:	781a      	ldrb	r2, [r3, #0]
 8002cb4:	4b4a      	ldr	r3, [pc, #296]	; (8002de0 <Control_Task+0x740>)
 8002cb6:	705a      	strb	r2, [r3, #1]
		dir[NEXT]=N(pos[MY]).directions[bestNb[NEXT]];//már most tudjuk, mi lesz az irányunk, ha odaértünk
 8002cb8:	4b49      	ldr	r3, [pc, #292]	; (8002de0 <Control_Task+0x740>)
 8002cba:	781b      	ldrb	r3, [r3, #0]
 8002cbc:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002cc0:	4b46      	ldr	r3, [pc, #280]	; (8002ddc <Control_Task+0x73c>)
 8002cc2:	785b      	ldrb	r3, [r3, #1]
 8002cc4:	4618      	mov	r0, r3
 8002cc6:	4947      	ldr	r1, [pc, #284]	; (8002de4 <Control_Task+0x744>)
 8002cc8:	4613      	mov	r3, r2
 8002cca:	009b      	lsls	r3, r3, #2
 8002ccc:	4413      	add	r3, r2
 8002cce:	00db      	lsls	r3, r3, #3
 8002cd0:	440b      	add	r3, r1
 8002cd2:	4403      	add	r3, r0
 8002cd4:	3312      	adds	r3, #18
 8002cd6:	781a      	ldrb	r2, [r3, #0]
 8002cd8:	4b43      	ldr	r3, [pc, #268]	; (8002de8 <Control_Task+0x748>)
 8002cda:	705a      	strb	r2, [r3, #1]

		//a kocsi az egyik node-ból átmegy egy másikba-> az irányok segítségével meghatározzu az új orientationt
		if(bestNb[NEXT] < NEIGHBOUR4) //ha balra/fel kell majd mennünk a nextPosition -höz
 8002cdc:	4b3f      	ldr	r3, [pc, #252]	; (8002ddc <Control_Task+0x73c>)
 8002cde:	785b      	ldrb	r3, [r3, #1]
 8002ce0:	2b02      	cmp	r3, #2
 8002ce2:	d813      	bhi.n	8002d0c <Control_Task+0x66c>
		{
			if(dir[MY]==2)//és eddig jobbra/fel mentünk,
 8002ce4:	4b40      	ldr	r3, [pc, #256]	; (8002de8 <Control_Task+0x748>)
 8002ce6:	781b      	ldrb	r3, [r3, #0]
 8002ce8:	2b02      	cmp	r3, #2
 8002cea:	d10a      	bne.n	8002d02 <Control_Task+0x662>
				nextOri = !orientation;//akkor most orientációt kell váltanunk
 8002cec:	4b3f      	ldr	r3, [pc, #252]	; (8002dec <Control_Task+0x74c>)
 8002cee:	781b      	ldrb	r3, [r3, #0]
 8002cf0:	2b00      	cmp	r3, #0
 8002cf2:	bf0c      	ite	eq
 8002cf4:	2301      	moveq	r3, #1
 8002cf6:	2300      	movne	r3, #0
 8002cf8:	b2db      	uxtb	r3, r3
 8002cfa:	461a      	mov	r2, r3
 8002cfc:	4b3c      	ldr	r3, [pc, #240]	; (8002df0 <Control_Task+0x750>)
 8002cfe:	701a      	strb	r2, [r3, #0]
 8002d00:	e017      	b.n	8002d32 <Control_Task+0x692>
			else nextOri = orientation; //különben nem kell
 8002d02:	4b3a      	ldr	r3, [pc, #232]	; (8002dec <Control_Task+0x74c>)
 8002d04:	781a      	ldrb	r2, [r3, #0]
 8002d06:	4b3a      	ldr	r3, [pc, #232]	; (8002df0 <Control_Task+0x750>)
 8002d08:	701a      	strb	r2, [r3, #0]
 8002d0a:	e012      	b.n	8002d32 <Control_Task+0x692>
		}
		else //ha jobbra/le kell majd mennünk
		{
			if(dir[MY]==1)//és eddig balra/fel mentünk,
 8002d0c:	4b36      	ldr	r3, [pc, #216]	; (8002de8 <Control_Task+0x748>)
 8002d0e:	781b      	ldrb	r3, [r3, #0]
 8002d10:	2b01      	cmp	r3, #1
 8002d12:	d10a      	bne.n	8002d2a <Control_Task+0x68a>
				nextOri =! orientation;//akkor most irányt kell váltanunk
 8002d14:	4b35      	ldr	r3, [pc, #212]	; (8002dec <Control_Task+0x74c>)
 8002d16:	781b      	ldrb	r3, [r3, #0]
 8002d18:	2b00      	cmp	r3, #0
 8002d1a:	bf0c      	ite	eq
 8002d1c:	2301      	moveq	r3, #1
 8002d1e:	2300      	movne	r3, #0
 8002d20:	b2db      	uxtb	r3, r3
 8002d22:	461a      	mov	r2, r3
 8002d24:	4b32      	ldr	r3, [pc, #200]	; (8002df0 <Control_Task+0x750>)
 8002d26:	701a      	strb	r2, [r3, #0]
 8002d28:	e003      	b.n	8002d32 <Control_Task+0x692>
			else nextOri = orientation; //különben nem kell
 8002d2a:	4b30      	ldr	r3, [pc, #192]	; (8002dec <Control_Task+0x74c>)
 8002d2c:	781a      	ldrb	r2, [r3, #0]
 8002d2e:	4b30      	ldr	r3, [pc, #192]	; (8002df0 <Control_Task+0x750>)
 8002d30:	701a      	strb	r2, [r3, #0]
		}

		//path kiválasztás -> az orientációt mostmár tudjuk (tolatás/előre), már csak az ösvény kell kivákasztani, hogy a megfelelő szomszédhoz jussunk

		if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)nextPath=LEFT;
 8002d32:	4b2a      	ldr	r3, [pc, #168]	; (8002ddc <Control_Task+0x73c>)
 8002d34:	785b      	ldrb	r3, [r3, #1]
 8002d36:	2b00      	cmp	r3, #0
 8002d38:	d003      	beq.n	8002d42 <Control_Task+0x6a2>
 8002d3a:	4b28      	ldr	r3, [pc, #160]	; (8002ddc <Control_Task+0x73c>)
 8002d3c:	785b      	ldrb	r3, [r3, #1]
 8002d3e:	2b03      	cmp	r3, #3
 8002d40:	d103      	bne.n	8002d4a <Control_Task+0x6aa>
 8002d42:	4b2c      	ldr	r3, [pc, #176]	; (8002df4 <Control_Task+0x754>)
 8002d44:	2200      	movs	r2, #0
 8002d46:	701a      	strb	r2, [r3, #0]
 8002d48:	e016      	b.n	8002d78 <Control_Task+0x6d8>
		else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)nextPath=MIDDLE;
 8002d4a:	4b24      	ldr	r3, [pc, #144]	; (8002ddc <Control_Task+0x73c>)
 8002d4c:	785b      	ldrb	r3, [r3, #1]
 8002d4e:	2b01      	cmp	r3, #1
 8002d50:	d003      	beq.n	8002d5a <Control_Task+0x6ba>
 8002d52:	4b22      	ldr	r3, [pc, #136]	; (8002ddc <Control_Task+0x73c>)
 8002d54:	785b      	ldrb	r3, [r3, #1]
 8002d56:	2b04      	cmp	r3, #4
 8002d58:	d103      	bne.n	8002d62 <Control_Task+0x6c2>
 8002d5a:	4b26      	ldr	r3, [pc, #152]	; (8002df4 <Control_Task+0x754>)
 8002d5c:	2201      	movs	r2, #1
 8002d5e:	701a      	strb	r2, [r3, #0]
 8002d60:	e00a      	b.n	8002d78 <Control_Task+0x6d8>
		else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)nextPath=RIGHT;
 8002d62:	4b1e      	ldr	r3, [pc, #120]	; (8002ddc <Control_Task+0x73c>)
 8002d64:	785b      	ldrb	r3, [r3, #1]
 8002d66:	2b02      	cmp	r3, #2
 8002d68:	d003      	beq.n	8002d72 <Control_Task+0x6d2>
 8002d6a:	4b1c      	ldr	r3, [pc, #112]	; (8002ddc <Control_Task+0x73c>)
 8002d6c:	785b      	ldrb	r3, [r3, #1]
 8002d6e:	2b05      	cmp	r3, #5
 8002d70:	d102      	bne.n	8002d78 <Control_Task+0x6d8>
 8002d72:	4b20      	ldr	r3, [pc, #128]	; (8002df4 <Control_Task+0x754>)
 8002d74:	2202      	movs	r2, #2
 8002d76:	701a      	strb	r2, [r3, #0]

		control_task_state=NEIGHBOUR1;
 8002d78:	4b14      	ldr	r3, [pc, #80]	; (8002dcc <Control_Task+0x72c>)
 8002d7a:	2200      	movs	r2, #0
 8002d7c:	701a      	strb	r2, [r3, #0]
		return;
 8002d7e:	e020      	b.n	8002dc2 <Control_Task+0x722>
	}
	/**************************************************************************************/

	/**********ÜTKÖZÉSELKERÜLÉS VÁRAKOZÁSSAL (control_task_state=EVALUATE ->6.állapot)***********/
	else if(control_task_state==WAIT)
 8002d80:	4b12      	ldr	r3, [pc, #72]	; (8002dcc <Control_Task+0x72c>)
 8002d82:	781b      	ldrb	r3, [r3, #0]
 8002d84:	2b07      	cmp	r3, #7
 8002d86:	d11c      	bne.n	8002dc2 <Control_Task+0x722>
	{
		if(tick-t_stamp<4000)
 8002d88:	4b1b      	ldr	r3, [pc, #108]	; (8002df8 <Control_Task+0x758>)
 8002d8a:	681b      	ldr	r3, [r3, #0]
 8002d8c:	687a      	ldr	r2, [r7, #4]
 8002d8e:	1ad3      	subs	r3, r2, r3
 8002d90:	f5b3 6f7a 	cmp.w	r3, #4000	; 0xfa0
 8002d94:	d206      	bcs.n	8002da4 <Control_Task+0x704>
		{
			v_control=STOP;
 8002d96:	4b19      	ldr	r3, [pc, #100]	; (8002dfc <Control_Task+0x75c>)
 8002d98:	2200      	movs	r2, #0
 8002d9a:	701a      	strb	r2, [r3, #0]
			control_task_state=WAIT;
 8002d9c:	4b0b      	ldr	r3, [pc, #44]	; (8002dcc <Control_Task+0x72c>)
 8002d9e:	2207      	movs	r2, #7
 8002da0:	701a      	strb	r2, [r3, #0]
 8002da2:	e00e      	b.n	8002dc2 <Control_Task+0x722>
		}
		else
		{
			LED_G(0);
 8002da4:	2201      	movs	r2, #1
 8002da6:	2102      	movs	r1, #2
 8002da8:	4815      	ldr	r0, [pc, #84]	; (8002e00 <Control_Task+0x760>)
 8002daa:	f006 fba9 	bl	8009500 <HAL_GPIO_WritePin>
			v_control=NORMAL_VEL;
 8002dae:	4b13      	ldr	r3, [pc, #76]	; (8002dfc <Control_Task+0x75c>)
 8002db0:	2202      	movs	r2, #2
 8002db2:	701a      	strb	r2, [r3, #0]
			control_task_state=NEIGHBOUR1;
 8002db4:	4b05      	ldr	r3, [pc, #20]	; (8002dcc <Control_Task+0x72c>)
 8002db6:	2200      	movs	r2, #0
 8002db8:	701a      	strb	r2, [r3, #0]
 8002dba:	e002      	b.n	8002dc2 <Control_Task+0x722>
	if(control_task_tick>tick)return;
 8002dbc:	bf00      	nop
 8002dbe:	e000      	b.n	8002dc2 <Control_Task+0x722>
	if(mode!=SKILL || laneChange!=1)return;
 8002dc0:	bf00      	nop
		}
	}
	/**************************************************************************************/
}
 8002dc2:	3720      	adds	r7, #32
 8002dc4:	46bd      	mov	sp, r7
 8002dc6:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8002dca:	bf00      	nop
 8002dcc:	200006ef 	.word	0x200006ef
 8002dd0:	200006fc 	.word	0x200006fc
 8002dd4:	c3160000 	.word	0xc3160000
 8002dd8:	20000008 	.word	0x20000008
 8002ddc:	200006dc 	.word	0x200006dc
 8002de0:	20000358 	.word	0x20000358
 8002de4:	20000360 	.word	0x20000360
 8002de8:	2000035c 	.word	0x2000035c
 8002dec:	20000344 	.word	0x20000344
 8002df0:	200006f5 	.word	0x200006f5
 8002df4:	200006f4 	.word	0x200006f4
 8002df8:	200006f0 	.word	0x200006f0
 8002dfc:	20000349 	.word	0x20000349
 8002e00:	40020400 	.word	0x40020400
 8002e04:	00000000 	.word	0x00000000

08002e08 <Control_Task_2>:

void Control_Task_2(UART_HandleTypeDef *huart_debugg,uint32_t tick, uint32_t period)
{
 8002e08:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8002e0c:	b084      	sub	sp, #16
 8002e0e:	af00      	add	r7, sp, #0
 8002e10:	60f8      	str	r0, [r7, #12]
 8002e12:	60b9      	str	r1, [r7, #8]
 8002e14:	607a      	str	r2, [r7, #4]
	static uint8_t i=0;
	static char str[30];

	static uint32_t control_task_2_tick = 0;

	if(mode!=SKILL || laneChange)return;
 8002e16:	4baa      	ldr	r3, [pc, #680]	; (80030c0 <Control_Task_2+0x2b8>)
 8002e18:	781b      	ldrb	r3, [r3, #0]
 8002e1a:	2b52      	cmp	r3, #82	; 0x52
 8002e1c:	f040 84ca 	bne.w	80037b4 <Control_Task_2+0x9ac>
 8002e20:	4ba8      	ldr	r3, [pc, #672]	; (80030c4 <Control_Task_2+0x2bc>)
 8002e22:	781b      	ldrb	r3, [r3, #0]
 8002e24:	2b00      	cmp	r3, #0
 8002e26:	f040 84c5 	bne.w	80037b4 <Control_Task_2+0x9ac>

	else if(control_task_2_tick>tick)return;
 8002e2a:	4ba7      	ldr	r3, [pc, #668]	; (80030c8 <Control_Task_2+0x2c0>)
 8002e2c:	681b      	ldr	r3, [r3, #0]
 8002e2e:	68ba      	ldr	r2, [r7, #8]
 8002e30:	429a      	cmp	r2, r3
 8002e32:	f0c0 84c1 	bcc.w	80037b8 <Control_Task_2+0x9b0>
	control_task_2_tick=tick+period;
 8002e36:	68ba      	ldr	r2, [r7, #8]
 8002e38:	687b      	ldr	r3, [r7, #4]
 8002e3a:	4413      	add	r3, r2
 8002e3c:	4aa2      	ldr	r2, [pc, #648]	; (80030c8 <Control_Task_2+0x2c0>)
 8002e3e:	6013      	str	r3, [r2, #0]

	//ha kapu nélküli nodeba tartunk éppen, akkor időzítéssel "detektáljuk" a nodot
/**/
	if(N(pos[MY]).type>2 && control_task_2_state==2)
 8002e40:	4ba2      	ldr	r3, [pc, #648]	; (80030cc <Control_Task_2+0x2c4>)
 8002e42:	781b      	ldrb	r3, [r3, #0]
 8002e44:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002e48:	49a1      	ldr	r1, [pc, #644]	; (80030d0 <Control_Task_2+0x2c8>)
 8002e4a:	4613      	mov	r3, r2
 8002e4c:	009b      	lsls	r3, r3, #2
 8002e4e:	4413      	add	r3, r2
 8002e50:	00db      	lsls	r3, r3, #3
 8002e52:	440b      	add	r3, r1
 8002e54:	3308      	adds	r3, #8
 8002e56:	681b      	ldr	r3, [r3, #0]
 8002e58:	2b02      	cmp	r3, #2
 8002e5a:	d950      	bls.n	8002efe <Control_Task_2+0xf6>
 8002e5c:	4b9d      	ldr	r3, [pc, #628]	; (80030d4 <Control_Task_2+0x2cc>)
 8002e5e:	781b      	ldrb	r3, [r3, #0]
 8002e60:	2b02      	cmp	r3, #2
 8002e62:	d14c      	bne.n	8002efe <Control_Task_2+0xf6>
	{
		s += (float)(tick-tick_prev)*fabs(v)/10000;
 8002e64:	4b9c      	ldr	r3, [pc, #624]	; (80030d8 <Control_Task_2+0x2d0>)
 8002e66:	681b      	ldr	r3, [r3, #0]
 8002e68:	4618      	mov	r0, r3
 8002e6a:	f7fd fb8d 	bl	8000588 <__aeabi_f2d>
 8002e6e:	4604      	mov	r4, r0
 8002e70:	460d      	mov	r5, r1
 8002e72:	4b9a      	ldr	r3, [pc, #616]	; (80030dc <Control_Task_2+0x2d4>)
 8002e74:	681b      	ldr	r3, [r3, #0]
 8002e76:	68ba      	ldr	r2, [r7, #8]
 8002e78:	1ad3      	subs	r3, r2, r3
 8002e7a:	ee07 3a90 	vmov	s15, r3
 8002e7e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002e82:	ee17 0a90 	vmov	r0, s15
 8002e86:	f7fd fb7f 	bl	8000588 <__aeabi_f2d>
 8002e8a:	4680      	mov	r8, r0
 8002e8c:	4689      	mov	r9, r1
 8002e8e:	4b94      	ldr	r3, [pc, #592]	; (80030e0 <Control_Task_2+0x2d8>)
 8002e90:	edd3 7a00 	vldr	s15, [r3]
 8002e94:	eef0 7ae7 	vabs.f32	s15, s15
 8002e98:	ee17 0a90 	vmov	r0, s15
 8002e9c:	f7fd fb74 	bl	8000588 <__aeabi_f2d>
 8002ea0:	4602      	mov	r2, r0
 8002ea2:	460b      	mov	r3, r1
 8002ea4:	4640      	mov	r0, r8
 8002ea6:	4649      	mov	r1, r9
 8002ea8:	f7fd fbc6 	bl	8000638 <__aeabi_dmul>
 8002eac:	4602      	mov	r2, r0
 8002eae:	460b      	mov	r3, r1
 8002eb0:	4610      	mov	r0, r2
 8002eb2:	4619      	mov	r1, r3
 8002eb4:	a380      	add	r3, pc, #512	; (adr r3, 80030b8 <Control_Task_2+0x2b0>)
 8002eb6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002eba:	f7fd fce7 	bl	800088c <__aeabi_ddiv>
 8002ebe:	4602      	mov	r2, r0
 8002ec0:	460b      	mov	r3, r1
 8002ec2:	4620      	mov	r0, r4
 8002ec4:	4629      	mov	r1, r5
 8002ec6:	f7fd fa01 	bl	80002cc <__adddf3>
 8002eca:	4602      	mov	r2, r0
 8002ecc:	460b      	mov	r3, r1
 8002ece:	4610      	mov	r0, r2
 8002ed0:	4619      	mov	r1, r3
 8002ed2:	f7fd fe89 	bl	8000be8 <__aeabi_d2f>
 8002ed6:	4603      	mov	r3, r0
 8002ed8:	4a7f      	ldr	r2, [pc, #508]	; (80030d8 <Control_Task_2+0x2d0>)
 8002eda:	6013      	str	r3, [r2, #0]
		/*sprintf(str,"%4.0f\n\r",s);
		HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);*/
		if(s>sMAX)
 8002edc:	4b7e      	ldr	r3, [pc, #504]	; (80030d8 <Control_Task_2+0x2d0>)
 8002ede:	ed93 7a00 	vldr	s14, [r3]
 8002ee2:	4b80      	ldr	r3, [pc, #512]	; (80030e4 <Control_Task_2+0x2dc>)
 8002ee4:	edd3 7a00 	vldr	s15, [r3]
 8002ee8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002eec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002ef0:	dd05      	ble.n	8002efe <Control_Task_2+0xf6>
		{
			/*sprintf(str,"hehe %3.2f\n\r",sMAX);
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);*/
			nodeDetected=1;
 8002ef2:	4b7d      	ldr	r3, [pc, #500]	; (80030e8 <Control_Task_2+0x2e0>)
 8002ef4:	2201      	movs	r2, #1
 8002ef6:	701a      	strb	r2, [r3, #0]
			sMAX=30000;
 8002ef8:	4b7a      	ldr	r3, [pc, #488]	; (80030e4 <Control_Task_2+0x2dc>)
 8002efa:	4a7c      	ldr	r2, [pc, #496]	; (80030ec <Control_Task_2+0x2e4>)
 8002efc:	601a      	str	r2, [r3, #0]
		}
	}
	tick_prev=tick;
 8002efe:	4a77      	ldr	r2, [pc, #476]	; (80030dc <Control_Task_2+0x2d4>)
 8002f00:	68bb      	ldr	r3, [r7, #8]
 8002f02:	6013      	str	r3, [r2, #0]

	if(thunderboardFlag==1)		//uj adat erkezik (minden 200ms)
 8002f04:	4b7a      	ldr	r3, [pc, #488]	; (80030f0 <Control_Task_2+0x2e8>)
 8002f06:	781b      	ldrb	r3, [r3, #0]
 8002f08:	b2db      	uxtb	r3, r3
 8002f0a:	2b01      	cmp	r3, #1
 8002f0c:	d14f      	bne.n	8002fae <Control_Task_2+0x1a6>
	{
		if(piratePos_prev[1]!=piratePos[1])//a kalóz átment egy Node-on
 8002f0e:	4b79      	ldr	r3, [pc, #484]	; (80030f4 <Control_Task_2+0x2ec>)
 8002f10:	785a      	ldrb	r2, [r3, #1]
 8002f12:	4b79      	ldr	r3, [pc, #484]	; (80030f8 <Control_Task_2+0x2f0>)
 8002f14:	785b      	ldrb	r3, [r3, #1]
 8002f16:	429a      	cmp	r2, r3
 8002f18:	d036      	beq.n	8002f88 <Control_Task_2+0x180>
		{
			if(N(piratePos[0]).worth > 0)
 8002f1a:	4b77      	ldr	r3, [pc, #476]	; (80030f8 <Control_Task_2+0x2f0>)
 8002f1c:	781b      	ldrb	r3, [r3, #0]
 8002f1e:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002f22:	496b      	ldr	r1, [pc, #428]	; (80030d0 <Control_Task_2+0x2c8>)
 8002f24:	4613      	mov	r3, r2
 8002f26:	009b      	lsls	r3, r3, #2
 8002f28:	4413      	add	r3, r2
 8002f2a:	00db      	lsls	r3, r3, #3
 8002f2c:	440b      	add	r3, r1
 8002f2e:	3304      	adds	r3, #4
 8002f30:	681b      	ldr	r3, [r3, #0]
 8002f32:	2b00      	cmp	r3, #0
 8002f34:	dd1b      	ble.n	8002f6e <Control_Task_2+0x166>
			{
				N(piratePos[0]).worth--; //az a node már kevesebbet ér
 8002f36:	4b70      	ldr	r3, [pc, #448]	; (80030f8 <Control_Task_2+0x2f0>)
 8002f38:	781b      	ldrb	r3, [r3, #0]
 8002f3a:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002f3e:	4964      	ldr	r1, [pc, #400]	; (80030d0 <Control_Task_2+0x2c8>)
 8002f40:	4613      	mov	r3, r2
 8002f42:	009b      	lsls	r3, r3, #2
 8002f44:	4413      	add	r3, r2
 8002f46:	00db      	lsls	r3, r3, #3
 8002f48:	440b      	add	r3, r1
 8002f4a:	3304      	adds	r3, #4
 8002f4c:	681b      	ldr	r3, [r3, #0]
 8002f4e:	1e59      	subs	r1, r3, #1
 8002f50:	485f      	ldr	r0, [pc, #380]	; (80030d0 <Control_Task_2+0x2c8>)
 8002f52:	4613      	mov	r3, r2
 8002f54:	009b      	lsls	r3, r3, #2
 8002f56:	4413      	add	r3, r2
 8002f58:	00db      	lsls	r3, r3, #3
 8002f5a:	4403      	add	r3, r0
 8002f5c:	3304      	adds	r3, #4
 8002f5e:	6019      	str	r1, [r3, #0]
				collectedPoints ++;
 8002f60:	4b66      	ldr	r3, [pc, #408]	; (80030fc <Control_Task_2+0x2f4>)
 8002f62:	781b      	ldrb	r3, [r3, #0]
 8002f64:	3301      	adds	r3, #1
 8002f66:	b2da      	uxtb	r2, r3
 8002f68:	4b64      	ldr	r3, [pc, #400]	; (80030fc <Control_Task_2+0x2f4>)
 8002f6a:	701a      	strb	r2, [r3, #0]
 8002f6c:	e00c      	b.n	8002f88 <Control_Task_2+0x180>
			}
			else N(piratePos[0]).worth=0;
 8002f6e:	4b62      	ldr	r3, [pc, #392]	; (80030f8 <Control_Task_2+0x2f0>)
 8002f70:	781b      	ldrb	r3, [r3, #0]
 8002f72:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002f76:	4956      	ldr	r1, [pc, #344]	; (80030d0 <Control_Task_2+0x2c8>)
 8002f78:	4613      	mov	r3, r2
 8002f7a:	009b      	lsls	r3, r3, #2
 8002f7c:	4413      	add	r3, r2
 8002f7e:	00db      	lsls	r3, r3, #3
 8002f80:	440b      	add	r3, r1
 8002f82:	3304      	adds	r3, #4
 8002f84:	2200      	movs	r2, #0
 8002f86:	601a      	str	r2, [r3, #0]
		}
		piratePos_prev[0]=piratePos[0];//előző kalozpozíció frissítése P
 8002f88:	4b5b      	ldr	r3, [pc, #364]	; (80030f8 <Control_Task_2+0x2f0>)
 8002f8a:	781a      	ldrb	r2, [r3, #0]
 8002f8c:	4b59      	ldr	r3, [pc, #356]	; (80030f4 <Control_Task_2+0x2ec>)
 8002f8e:	701a      	strb	r2, [r3, #0]
		piratePos_prev[1]=piratePos[1];			//M
 8002f90:	4b59      	ldr	r3, [pc, #356]	; (80030f8 <Control_Task_2+0x2f0>)
 8002f92:	785a      	ldrb	r2, [r3, #1]
 8002f94:	4b57      	ldr	r3, [pc, #348]	; (80030f4 <Control_Task_2+0x2ec>)
 8002f96:	705a      	strb	r2, [r3, #1]
		piratePos_prev[2]=piratePos[2];			//K
 8002f98:	4b57      	ldr	r3, [pc, #348]	; (80030f8 <Control_Task_2+0x2f0>)
 8002f9a:	789a      	ldrb	r2, [r3, #2]
 8002f9c:	4b55      	ldr	r3, [pc, #340]	; (80030f4 <Control_Task_2+0x2ec>)
 8002f9e:	709a      	strb	r2, [r3, #2]
		piratePos_prev[3]=piratePos[3];			//65
 8002fa0:	4b55      	ldr	r3, [pc, #340]	; (80030f8 <Control_Task_2+0x2f0>)
 8002fa2:	78da      	ldrb	r2, [r3, #3]
 8002fa4:	4b53      	ldr	r3, [pc, #332]	; (80030f4 <Control_Task_2+0x2ec>)
 8002fa6:	70da      	strb	r2, [r3, #3]


		thunderboardFlag=0;
 8002fa8:	4b51      	ldr	r3, [pc, #324]	; (80030f0 <Control_Task_2+0x2e8>)
 8002faa:	2200      	movs	r2, #0
 8002fac:	701a      	strb	r2, [r3, #0]
	}
	if(piratePos_prev[0]==0)return; //ha nem kaptunk még adatot a TB-tol return
 8002fae:	4b51      	ldr	r3, [pc, #324]	; (80030f4 <Control_Task_2+0x2ec>)
 8002fb0:	781b      	ldrb	r3, [r3, #0]
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	f000 8402 	beq.w	80037bc <Control_Task_2+0x9b4>


	if(control_task_2_state==0)
 8002fb8:	4b46      	ldr	r3, [pc, #280]	; (80030d4 <Control_Task_2+0x2cc>)
 8002fba:	781b      	ldrb	r3, [r3, #0]
 8002fbc:	2b00      	cmp	r3, #0
 8002fbe:	f040 81b8 	bne.w	8003332 <Control_Task_2+0x52a>
	{

		if(nodeDetected)
 8002fc2:	4b49      	ldr	r3, [pc, #292]	; (80030e8 <Control_Task_2+0x2e0>)
 8002fc4:	781b      	ldrb	r3, [r3, #0]
 8002fc6:	2b00      	cmp	r3, #0
 8002fc8:	f000 80e6 	beq.w	8003198 <Control_Task_2+0x390>
		{
			LED_B_TOGGLE;
 8002fcc:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8002fd0:	484b      	ldr	r0, [pc, #300]	; (8003100 <Control_Task_2+0x2f8>)
 8002fd2:	f006 faae 	bl	8009532 <HAL_GPIO_TogglePin>
			//pontok nyugtázása
			collectedPoints +=N(pos[MY]).worth;//sávváltás módik vizsgáljuk az össezgyűjtött kapuk számát
 8002fd6:	4b3d      	ldr	r3, [pc, #244]	; (80030cc <Control_Task_2+0x2c4>)
 8002fd8:	781b      	ldrb	r3, [r3, #0]
 8002fda:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002fde:	493c      	ldr	r1, [pc, #240]	; (80030d0 <Control_Task_2+0x2c8>)
 8002fe0:	4613      	mov	r3, r2
 8002fe2:	009b      	lsls	r3, r3, #2
 8002fe4:	4413      	add	r3, r2
 8002fe6:	00db      	lsls	r3, r3, #3
 8002fe8:	440b      	add	r3, r1
 8002fea:	3304      	adds	r3, #4
 8002fec:	681b      	ldr	r3, [r3, #0]
 8002fee:	b2da      	uxtb	r2, r3
 8002ff0:	4b42      	ldr	r3, [pc, #264]	; (80030fc <Control_Task_2+0x2f4>)
 8002ff2:	781b      	ldrb	r3, [r3, #0]
 8002ff4:	4413      	add	r3, r2
 8002ff6:	b2da      	uxtb	r2, r3
 8002ff8:	4b40      	ldr	r3, [pc, #256]	; (80030fc <Control_Task_2+0x2f4>)
 8002ffa:	701a      	strb	r2, [r3, #0]
			N(pos[MY]).worth=0;//ez a kapu már nem ér pontot
 8002ffc:	4b33      	ldr	r3, [pc, #204]	; (80030cc <Control_Task_2+0x2c4>)
 8002ffe:	781b      	ldrb	r3, [r3, #0]
 8003000:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003004:	4932      	ldr	r1, [pc, #200]	; (80030d0 <Control_Task_2+0x2c8>)
 8003006:	4613      	mov	r3, r2
 8003008:	009b      	lsls	r3, r3, #2
 800300a:	4413      	add	r3, r2
 800300c:	00db      	lsls	r3, r3, #3
 800300e:	440b      	add	r3, r1
 8003010:	3304      	adds	r3, #4
 8003012:	2200      	movs	r2, #0
 8003014:	601a      	str	r2, [r3, #0]

			sprintf(str,"%d\n\r",collectedPoints);
 8003016:	4b39      	ldr	r3, [pc, #228]	; (80030fc <Control_Task_2+0x2f4>)
 8003018:	781b      	ldrb	r3, [r3, #0]
 800301a:	461a      	mov	r2, r3
 800301c:	4939      	ldr	r1, [pc, #228]	; (8003104 <Control_Task_2+0x2fc>)
 800301e:	483a      	ldr	r0, [pc, #232]	; (8003108 <Control_Task_2+0x300>)
 8003020:	f00a fd2a 	bl	800da78 <siprintf>
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);
 8003024:	4838      	ldr	r0, [pc, #224]	; (8003108 <Control_Task_2+0x300>)
 8003026:	f7fd f8f3 	bl	8000210 <strlen>
 800302a:	4603      	mov	r3, r0
 800302c:	b29a      	uxth	r2, r3
 800302e:	2303      	movs	r3, #3
 8003030:	4935      	ldr	r1, [pc, #212]	; (8003108 <Control_Task_2+0x300>)
 8003032:	68f8      	ldr	r0, [r7, #12]
 8003034:	f008 ffb7 	bl	800bfa6 <HAL_UART_Transmit>

			if (route[route_index+2]==0)//még nincs kész az eléállás
 8003038:	4b34      	ldr	r3, [pc, #208]	; (800310c <Control_Task_2+0x304>)
 800303a:	781b      	ldrb	r3, [r3, #0]
 800303c:	3302      	adds	r3, #2
 800303e:	4a34      	ldr	r2, [pc, #208]	; (8003110 <Control_Task_2+0x308>)
 8003040:	5cd3      	ldrb	r3, [r2, r3]
 8003042:	2b00      	cmp	r3, #0
 8003044:	d105      	bne.n	8003052 <Control_Task_2+0x24a>
			{
				//WAITING
				v_control=STOP;
 8003046:	4b33      	ldr	r3, [pc, #204]	; (8003114 <Control_Task_2+0x30c>)
 8003048:	2200      	movs	r2, #0
 800304a:	701a      	strb	r2, [r3, #0]
				control_task_2_state=1;
 800304c:	4b21      	ldr	r3, [pc, #132]	; (80030d4 <Control_Task_2+0x2cc>)
 800304e:	2201      	movs	r2, #1
 8003050:	701a      	strb	r2, [r3, #0]

			}

			pos[MY]=pos[NEXT]; //route 2 eetén a végén még hulyeség kerül ide
 8003052:	4b1e      	ldr	r3, [pc, #120]	; (80030cc <Control_Task_2+0x2c4>)
 8003054:	785a      	ldrb	r2, [r3, #1]
 8003056:	4b1d      	ldr	r3, [pc, #116]	; (80030cc <Control_Task_2+0x2c4>)
 8003058:	701a      	strb	r2, [r3, #0]
			pos[NEXT]=route[route_index+1];
 800305a:	4b2c      	ldr	r3, [pc, #176]	; (800310c <Control_Task_2+0x304>)
 800305c:	781b      	ldrb	r3, [r3, #0]
 800305e:	3301      	adds	r3, #1
 8003060:	4a2b      	ldr	r2, [pc, #172]	; (8003110 <Control_Task_2+0x308>)
 8003062:	5cd2      	ldrb	r2, [r2, r3]
 8003064:	4b19      	ldr	r3, [pc, #100]	; (80030cc <Control_Task_2+0x2c4>)
 8003066:	705a      	strb	r2, [r3, #1]
			nodeDetected=0;
 8003068:	4b1f      	ldr	r3, [pc, #124]	; (80030e8 <Control_Task_2+0x2e0>)
 800306a:	2200      	movs	r2, #0
 800306c:	701a      	strb	r2, [r3, #0]
			route_index++;
 800306e:	4b27      	ldr	r3, [pc, #156]	; (800310c <Control_Task_2+0x304>)
 8003070:	781b      	ldrb	r3, [r3, #0]
 8003072:	3301      	adds	r3, #1
 8003074:	b2da      	uxtb	r2, r3
 8003076:	4b25      	ldr	r3, [pc, #148]	; (800310c <Control_Task_2+0x304>)
 8003078:	701a      	strb	r2, [r3, #0]

			for(i=0; i<6;i++)
 800307a:	4b27      	ldr	r3, [pc, #156]	; (8003118 <Control_Task_2+0x310>)
 800307c:	2200      	movs	r2, #0
 800307e:	701a      	strb	r2, [r3, #0]
 8003080:	e054      	b.n	800312c <Control_Task_2+0x324>
			{
				if (N(pos[MY]).neighbours[i]==pos[NEXT])//O=O-2
 8003082:	4b12      	ldr	r3, [pc, #72]	; (80030cc <Control_Task_2+0x2c4>)
 8003084:	781b      	ldrb	r3, [r3, #0]
 8003086:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800308a:	4b23      	ldr	r3, [pc, #140]	; (8003118 <Control_Task_2+0x310>)
 800308c:	781b      	ldrb	r3, [r3, #0]
 800308e:	4618      	mov	r0, r3
 8003090:	490f      	ldr	r1, [pc, #60]	; (80030d0 <Control_Task_2+0x2c8>)
 8003092:	4613      	mov	r3, r2
 8003094:	009b      	lsls	r3, r3, #2
 8003096:	4413      	add	r3, r2
 8003098:	00db      	lsls	r3, r3, #3
 800309a:	440b      	add	r3, r1
 800309c:	4403      	add	r3, r0
 800309e:	330c      	adds	r3, #12
 80030a0:	781a      	ldrb	r2, [r3, #0]
 80030a2:	4b0a      	ldr	r3, [pc, #40]	; (80030cc <Control_Task_2+0x2c4>)
 80030a4:	785b      	ldrb	r3, [r3, #1]
 80030a6:	429a      	cmp	r2, r3
 80030a8:	d13a      	bne.n	8003120 <Control_Task_2+0x318>
				{
					bestNb[NEXT]=i;
 80030aa:	4b1b      	ldr	r3, [pc, #108]	; (8003118 <Control_Task_2+0x310>)
 80030ac:	781a      	ldrb	r2, [r3, #0]
 80030ae:	4b1b      	ldr	r3, [pc, #108]	; (800311c <Control_Task_2+0x314>)
 80030b0:	705a      	strb	r2, [r3, #1]
					break;// ha megvan akkor breakkel kilépünk a for ciklusból azonnal
 80030b2:	e03f      	b.n	8003134 <Control_Task_2+0x32c>
 80030b4:	f3af 8000 	nop.w
 80030b8:	00000000 	.word	0x00000000
 80030bc:	40c38800 	.word	0x40c38800
 80030c0:	20000336 	.word	0x20000336
 80030c4:	20000348 	.word	0x20000348
 80030c8:	2000070c 	.word	0x2000070c
 80030cc:	20000358 	.word	0x20000358
 80030d0:	20000360 	.word	0x20000360
 80030d4:	20000710 	.word	0x20000710
 80030d8:	20000714 	.word	0x20000714
 80030dc:	20000718 	.word	0x20000718
 80030e0:	20000754 	.word	0x20000754
 80030e4:	2000000c 	.word	0x2000000c
 80030e8:	20000345 	.word	0x20000345
 80030ec:	46ea6000 	.word	0x46ea6000
 80030f0:	2000034a 	.word	0x2000034a
 80030f4:	2000071c 	.word	0x2000071c
 80030f8:	20000354 	.word	0x20000354
 80030fc:	20000347 	.word	0x20000347
 8003100:	40020400 	.word	0x40020400
 8003104:	080114d0 	.word	0x080114d0
 8003108:	20000720 	.word	0x20000720
 800310c:	2000073e 	.word	0x2000073e
 8003110:	20000740 	.word	0x20000740
 8003114:	20000349 	.word	0x20000349
 8003118:	20000746 	.word	0x20000746
 800311c:	20000748 	.word	0x20000748
			for(i=0; i<6;i++)
 8003120:	4b98      	ldr	r3, [pc, #608]	; (8003384 <Control_Task_2+0x57c>)
 8003122:	781b      	ldrb	r3, [r3, #0]
 8003124:	3301      	adds	r3, #1
 8003126:	b2da      	uxtb	r2, r3
 8003128:	4b96      	ldr	r3, [pc, #600]	; (8003384 <Control_Task_2+0x57c>)
 800312a:	701a      	strb	r2, [r3, #0]
 800312c:	4b95      	ldr	r3, [pc, #596]	; (8003384 <Control_Task_2+0x57c>)
 800312e:	781b      	ldrb	r3, [r3, #0]
 8003130:	2b05      	cmp	r3, #5
 8003132:	d9a6      	bls.n	8003082 <Control_Task_2+0x27a>
				}
			}
			if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)path=LEFT;
 8003134:	4b94      	ldr	r3, [pc, #592]	; (8003388 <Control_Task_2+0x580>)
 8003136:	785b      	ldrb	r3, [r3, #1]
 8003138:	2b00      	cmp	r3, #0
 800313a:	d003      	beq.n	8003144 <Control_Task_2+0x33c>
 800313c:	4b92      	ldr	r3, [pc, #584]	; (8003388 <Control_Task_2+0x580>)
 800313e:	785b      	ldrb	r3, [r3, #1]
 8003140:	2b03      	cmp	r3, #3
 8003142:	d103      	bne.n	800314c <Control_Task_2+0x344>
 8003144:	4b91      	ldr	r3, [pc, #580]	; (800338c <Control_Task_2+0x584>)
 8003146:	2200      	movs	r2, #0
 8003148:	701a      	strb	r2, [r3, #0]
 800314a:	e016      	b.n	800317a <Control_Task_2+0x372>
			else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)path=MIDDLE;
 800314c:	4b8e      	ldr	r3, [pc, #568]	; (8003388 <Control_Task_2+0x580>)
 800314e:	785b      	ldrb	r3, [r3, #1]
 8003150:	2b01      	cmp	r3, #1
 8003152:	d003      	beq.n	800315c <Control_Task_2+0x354>
 8003154:	4b8c      	ldr	r3, [pc, #560]	; (8003388 <Control_Task_2+0x580>)
 8003156:	785b      	ldrb	r3, [r3, #1]
 8003158:	2b04      	cmp	r3, #4
 800315a:	d103      	bne.n	8003164 <Control_Task_2+0x35c>
 800315c:	4b8b      	ldr	r3, [pc, #556]	; (800338c <Control_Task_2+0x584>)
 800315e:	2201      	movs	r2, #1
 8003160:	701a      	strb	r2, [r3, #0]
 8003162:	e00a      	b.n	800317a <Control_Task_2+0x372>
			else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)path=RIGHT;
 8003164:	4b88      	ldr	r3, [pc, #544]	; (8003388 <Control_Task_2+0x580>)
 8003166:	785b      	ldrb	r3, [r3, #1]
 8003168:	2b02      	cmp	r3, #2
 800316a:	d003      	beq.n	8003174 <Control_Task_2+0x36c>
 800316c:	4b86      	ldr	r3, [pc, #536]	; (8003388 <Control_Task_2+0x580>)
 800316e:	785b      	ldrb	r3, [r3, #1]
 8003170:	2b05      	cmp	r3, #5
 8003172:	d102      	bne.n	800317a <Control_Task_2+0x372>
 8003174:	4b85      	ldr	r3, [pc, #532]	; (800338c <Control_Task_2+0x584>)
 8003176:	2202      	movs	r2, #2
 8003178:	701a      	strb	r2, [r3, #0]

#ifdef ADIBUGG
			sprintf(str,"d;\n\r");
 800317a:	4985      	ldr	r1, [pc, #532]	; (8003390 <Control_Task_2+0x588>)
 800317c:	4885      	ldr	r0, [pc, #532]	; (8003394 <Control_Task_2+0x58c>)
 800317e:	f00a fc7b 	bl	800da78 <siprintf>

			str[0]=pos[MY];//honnan
 8003182:	4b85      	ldr	r3, [pc, #532]	; (8003398 <Control_Task_2+0x590>)
 8003184:	781a      	ldrb	r2, [r3, #0]
 8003186:	4b83      	ldr	r3, [pc, #524]	; (8003394 <Control_Task_2+0x58c>)
 8003188:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 4, 3);
 800318a:	2303      	movs	r3, #3
 800318c:	2204      	movs	r2, #4
 800318e:	4981      	ldr	r1, [pc, #516]	; (8003394 <Control_Task_2+0x58c>)
 8003190:	68f8      	ldr	r0, [r7, #12]
 8003192:	f008 ff08 	bl	800bfa6 <HAL_UART_Transmit>
 8003196:	e1d1      	b.n	800353c <Control_Task_2+0x734>
#endif
		}
		else if(!stage)
 8003198:	4b80      	ldr	r3, [pc, #512]	; (800339c <Control_Task_2+0x594>)
 800319a:	781b      	ldrb	r3, [r3, #0]
 800319c:	2b00      	cmp	r3, #0
 800319e:	f040 81cd 	bne.w	800353c <Control_Task_2+0x734>
		{
			LED_B_TOGGLE;
 80031a2:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80031a6:	487e      	ldr	r0, [pc, #504]	; (80033a0 <Control_Task_2+0x598>)
 80031a8:	f006 f9c3 	bl	8009532 <HAL_GPIO_TogglePin>
			switch(piratePos_prev[2])
 80031ac:	4b7d      	ldr	r3, [pc, #500]	; (80033a4 <Control_Task_2+0x59c>)
 80031ae:	789b      	ldrb	r3, [r3, #2]
 80031b0:	3b48      	subs	r3, #72	; 0x48
 80031b2:	2b09      	cmp	r3, #9
 80031b4:	d842      	bhi.n	800323c <Control_Task_2+0x434>
 80031b6:	a201      	add	r2, pc, #4	; (adr r2, 80031bc <Control_Task_2+0x3b4>)
 80031b8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80031bc:	08003211 	.word	0x08003211
 80031c0:	0800323d 	.word	0x0800323d
 80031c4:	0800323d 	.word	0x0800323d
 80031c8:	080031fb 	.word	0x080031fb
 80031cc:	0800323d 	.word	0x0800323d
 80031d0:	0800323d 	.word	0x0800323d
 80031d4:	08003227 	.word	0x08003227
 80031d8:	0800323d 	.word	0x0800323d
 80031dc:	0800323d 	.word	0x0800323d
 80031e0:	080031e5 	.word	0x080031e5
			{
			case 'Q':
				memcpy(route, route_1,6);
 80031e4:	4b70      	ldr	r3, [pc, #448]	; (80033a8 <Control_Task_2+0x5a0>)
 80031e6:	4a71      	ldr	r2, [pc, #452]	; (80033ac <Control_Task_2+0x5a4>)
 80031e8:	e892 0003 	ldmia.w	r2, {r0, r1}
 80031ec:	6018      	str	r0, [r3, #0]
 80031ee:	3304      	adds	r3, #4
 80031f0:	8019      	strh	r1, [r3, #0]
				selected_route=1;
 80031f2:	4b6f      	ldr	r3, [pc, #444]	; (80033b0 <Control_Task_2+0x5a8>)
 80031f4:	2201      	movs	r2, #1
 80031f6:	701a      	strb	r2, [r3, #0]
				break;
 80031f8:	e020      	b.n	800323c <Control_Task_2+0x434>
			case 'K':
				memcpy(route, route_2,6);
 80031fa:	4b6b      	ldr	r3, [pc, #428]	; (80033a8 <Control_Task_2+0x5a0>)
 80031fc:	4a6d      	ldr	r2, [pc, #436]	; (80033b4 <Control_Task_2+0x5ac>)
 80031fe:	e892 0003 	ldmia.w	r2, {r0, r1}
 8003202:	6018      	str	r0, [r3, #0]
 8003204:	3304      	adds	r3, #4
 8003206:	8019      	strh	r1, [r3, #0]
				selected_route=2;
 8003208:	4b69      	ldr	r3, [pc, #420]	; (80033b0 <Control_Task_2+0x5a8>)
 800320a:	2202      	movs	r2, #2
 800320c:	701a      	strb	r2, [r3, #0]
				break;
 800320e:	e015      	b.n	800323c <Control_Task_2+0x434>
			case 'H':
				memcpy(route, route_3,6);
 8003210:	4b65      	ldr	r3, [pc, #404]	; (80033a8 <Control_Task_2+0x5a0>)
 8003212:	4a69      	ldr	r2, [pc, #420]	; (80033b8 <Control_Task_2+0x5b0>)
 8003214:	e892 0003 	ldmia.w	r2, {r0, r1}
 8003218:	6018      	str	r0, [r3, #0]
 800321a:	3304      	adds	r3, #4
 800321c:	8019      	strh	r1, [r3, #0]
				selected_route=3;
 800321e:	4b64      	ldr	r3, [pc, #400]	; (80033b0 <Control_Task_2+0x5a8>)
 8003220:	2203      	movs	r2, #3
 8003222:	701a      	strb	r2, [r3, #0]
				break;
 8003224:	e00a      	b.n	800323c <Control_Task_2+0x434>
			case 'N':
				memcpy(route, route_4,6);
 8003226:	4b60      	ldr	r3, [pc, #384]	; (80033a8 <Control_Task_2+0x5a0>)
 8003228:	4a64      	ldr	r2, [pc, #400]	; (80033bc <Control_Task_2+0x5b4>)
 800322a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800322e:	6018      	str	r0, [r3, #0]
 8003230:	3304      	adds	r3, #4
 8003232:	8019      	strh	r1, [r3, #0]
				selected_route=4;
 8003234:	4b5e      	ldr	r3, [pc, #376]	; (80033b0 <Control_Task_2+0x5a8>)
 8003236:	2204      	movs	r2, #4
 8003238:	701a      	strb	r2, [r3, #0]
				break;
 800323a:	bf00      	nop
			}

			pos[MY]=route[route_index];
 800323c:	4b60      	ldr	r3, [pc, #384]	; (80033c0 <Control_Task_2+0x5b8>)
 800323e:	781b      	ldrb	r3, [r3, #0]
 8003240:	461a      	mov	r2, r3
 8003242:	4b59      	ldr	r3, [pc, #356]	; (80033a8 <Control_Task_2+0x5a0>)
 8003244:	5c9a      	ldrb	r2, [r3, r2]
 8003246:	4b54      	ldr	r3, [pc, #336]	; (8003398 <Control_Task_2+0x590>)
 8003248:	701a      	strb	r2, [r3, #0]
			pos[NEXT]=route[route_index+1];
 800324a:	4b5d      	ldr	r3, [pc, #372]	; (80033c0 <Control_Task_2+0x5b8>)
 800324c:	781b      	ldrb	r3, [r3, #0]
 800324e:	3301      	adds	r3, #1
 8003250:	4a55      	ldr	r2, [pc, #340]	; (80033a8 <Control_Task_2+0x5a0>)
 8003252:	5cd2      	ldrb	r2, [r2, r3]
 8003254:	4b50      	ldr	r3, [pc, #320]	; (8003398 <Control_Task_2+0x590>)
 8003256:	705a      	strb	r2, [r3, #1]
			route_index++;
 8003258:	4b59      	ldr	r3, [pc, #356]	; (80033c0 <Control_Task_2+0x5b8>)
 800325a:	781b      	ldrb	r3, [r3, #0]
 800325c:	3301      	adds	r3, #1
 800325e:	b2da      	uxtb	r2, r3
 8003260:	4b57      	ldr	r3, [pc, #348]	; (80033c0 <Control_Task_2+0x5b8>)
 8003262:	701a      	strb	r2, [r3, #0]
			////////////////////////////////////////////////////////////
			for(i=0; i<6;i++)
 8003264:	4b47      	ldr	r3, [pc, #284]	; (8003384 <Control_Task_2+0x57c>)
 8003266:	2200      	movs	r2, #0
 8003268:	701a      	strb	r2, [r3, #0]
 800326a:	e01e      	b.n	80032aa <Control_Task_2+0x4a2>
			{
				if (N(pos[MY]).neighbours[i]==pos[NEXT])//O=O-2
 800326c:	4b4a      	ldr	r3, [pc, #296]	; (8003398 <Control_Task_2+0x590>)
 800326e:	781b      	ldrb	r3, [r3, #0]
 8003270:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003274:	4b43      	ldr	r3, [pc, #268]	; (8003384 <Control_Task_2+0x57c>)
 8003276:	781b      	ldrb	r3, [r3, #0]
 8003278:	4618      	mov	r0, r3
 800327a:	4952      	ldr	r1, [pc, #328]	; (80033c4 <Control_Task_2+0x5bc>)
 800327c:	4613      	mov	r3, r2
 800327e:	009b      	lsls	r3, r3, #2
 8003280:	4413      	add	r3, r2
 8003282:	00db      	lsls	r3, r3, #3
 8003284:	440b      	add	r3, r1
 8003286:	4403      	add	r3, r0
 8003288:	330c      	adds	r3, #12
 800328a:	781a      	ldrb	r2, [r3, #0]
 800328c:	4b42      	ldr	r3, [pc, #264]	; (8003398 <Control_Task_2+0x590>)
 800328e:	785b      	ldrb	r3, [r3, #1]
 8003290:	429a      	cmp	r2, r3
 8003292:	d104      	bne.n	800329e <Control_Task_2+0x496>
				{
					bestNb[NEXT]=i;
 8003294:	4b3b      	ldr	r3, [pc, #236]	; (8003384 <Control_Task_2+0x57c>)
 8003296:	781a      	ldrb	r2, [r3, #0]
 8003298:	4b3b      	ldr	r3, [pc, #236]	; (8003388 <Control_Task_2+0x580>)
 800329a:	705a      	strb	r2, [r3, #1]
					break;// ha megvan akkor breakkel kilépünk a for ciklusból azonnal
 800329c:	e009      	b.n	80032b2 <Control_Task_2+0x4aa>
			for(i=0; i<6;i++)
 800329e:	4b39      	ldr	r3, [pc, #228]	; (8003384 <Control_Task_2+0x57c>)
 80032a0:	781b      	ldrb	r3, [r3, #0]
 80032a2:	3301      	adds	r3, #1
 80032a4:	b2da      	uxtb	r2, r3
 80032a6:	4b37      	ldr	r3, [pc, #220]	; (8003384 <Control_Task_2+0x57c>)
 80032a8:	701a      	strb	r2, [r3, #0]
 80032aa:	4b36      	ldr	r3, [pc, #216]	; (8003384 <Control_Task_2+0x57c>)
 80032ac:	781b      	ldrb	r3, [r3, #0]
 80032ae:	2b05      	cmp	r3, #5
 80032b0:	d9dc      	bls.n	800326c <Control_Task_2+0x464>
				}
			}
			if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)path=LEFT;
 80032b2:	4b35      	ldr	r3, [pc, #212]	; (8003388 <Control_Task_2+0x580>)
 80032b4:	785b      	ldrb	r3, [r3, #1]
 80032b6:	2b00      	cmp	r3, #0
 80032b8:	d003      	beq.n	80032c2 <Control_Task_2+0x4ba>
 80032ba:	4b33      	ldr	r3, [pc, #204]	; (8003388 <Control_Task_2+0x580>)
 80032bc:	785b      	ldrb	r3, [r3, #1]
 80032be:	2b03      	cmp	r3, #3
 80032c0:	d103      	bne.n	80032ca <Control_Task_2+0x4c2>
 80032c2:	4b32      	ldr	r3, [pc, #200]	; (800338c <Control_Task_2+0x584>)
 80032c4:	2200      	movs	r2, #0
 80032c6:	701a      	strb	r2, [r3, #0]
 80032c8:	e016      	b.n	80032f8 <Control_Task_2+0x4f0>
			else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)path=MIDDLE;
 80032ca:	4b2f      	ldr	r3, [pc, #188]	; (8003388 <Control_Task_2+0x580>)
 80032cc:	785b      	ldrb	r3, [r3, #1]
 80032ce:	2b01      	cmp	r3, #1
 80032d0:	d003      	beq.n	80032da <Control_Task_2+0x4d2>
 80032d2:	4b2d      	ldr	r3, [pc, #180]	; (8003388 <Control_Task_2+0x580>)
 80032d4:	785b      	ldrb	r3, [r3, #1]
 80032d6:	2b04      	cmp	r3, #4
 80032d8:	d103      	bne.n	80032e2 <Control_Task_2+0x4da>
 80032da:	4b2c      	ldr	r3, [pc, #176]	; (800338c <Control_Task_2+0x584>)
 80032dc:	2201      	movs	r2, #1
 80032de:	701a      	strb	r2, [r3, #0]
 80032e0:	e00a      	b.n	80032f8 <Control_Task_2+0x4f0>
			else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)path=RIGHT;
 80032e2:	4b29      	ldr	r3, [pc, #164]	; (8003388 <Control_Task_2+0x580>)
 80032e4:	785b      	ldrb	r3, [r3, #1]
 80032e6:	2b02      	cmp	r3, #2
 80032e8:	d003      	beq.n	80032f2 <Control_Task_2+0x4ea>
 80032ea:	4b27      	ldr	r3, [pc, #156]	; (8003388 <Control_Task_2+0x580>)
 80032ec:	785b      	ldrb	r3, [r3, #1]
 80032ee:	2b05      	cmp	r3, #5
 80032f0:	d102      	bne.n	80032f8 <Control_Task_2+0x4f0>
 80032f2:	4b26      	ldr	r3, [pc, #152]	; (800338c <Control_Task_2+0x584>)
 80032f4:	2202      	movs	r2, #2
 80032f6:	701a      	strb	r2, [r3, #0]
			stage=1;
 80032f8:	4b28      	ldr	r3, [pc, #160]	; (800339c <Control_Task_2+0x594>)
 80032fa:	2201      	movs	r2, #1
 80032fc:	701a      	strb	r2, [r3, #0]
			if(selected_route!=1)
 80032fe:	4b2c      	ldr	r3, [pc, #176]	; (80033b0 <Control_Task_2+0x5a8>)
 8003300:	781b      	ldrb	r3, [r3, #0]
 8003302:	2b01      	cmp	r3, #1
 8003304:	d003      	beq.n	800330e <Control_Task_2+0x506>
			{
				v_control=SPEED_UP;
 8003306:	4b30      	ldr	r3, [pc, #192]	; (80033c8 <Control_Task_2+0x5c0>)
 8003308:	2203      	movs	r2, #3
 800330a:	701a      	strb	r2, [r3, #0]
 800330c:	e002      	b.n	8003314 <Control_Task_2+0x50c>
			}
			else v_control=NORMAL_VEL;
 800330e:	4b2e      	ldr	r3, [pc, #184]	; (80033c8 <Control_Task_2+0x5c0>)
 8003310:	2202      	movs	r2, #2
 8003312:	701a      	strb	r2, [r3, #0]
			//////////////////////////////////////////////////////////////
#ifdef ADIBUGG
			sprintf(str,"d;\n\r");
 8003314:	491e      	ldr	r1, [pc, #120]	; (8003390 <Control_Task_2+0x588>)
 8003316:	481f      	ldr	r0, [pc, #124]	; (8003394 <Control_Task_2+0x58c>)
 8003318:	f00a fbae 	bl	800da78 <siprintf>
			str[0]=pos[MY];
 800331c:	4b1e      	ldr	r3, [pc, #120]	; (8003398 <Control_Task_2+0x590>)
 800331e:	781a      	ldrb	r2, [r3, #0]
 8003320:	4b1c      	ldr	r3, [pc, #112]	; (8003394 <Control_Task_2+0x58c>)
 8003322:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 4, 3);
 8003324:	2303      	movs	r3, #3
 8003326:	2204      	movs	r2, #4
 8003328:	491a      	ldr	r1, [pc, #104]	; (8003394 <Control_Task_2+0x58c>)
 800332a:	68f8      	ldr	r0, [r7, #12]
 800332c:	f008 fe3b 	bl	800bfa6 <HAL_UART_Transmit>
 8003330:	e104      	b.n	800353c <Control_Task_2+0x734>
#endif
		}
	}

	else if(control_task_2_state==1)
 8003332:	4b26      	ldr	r3, [pc, #152]	; (80033cc <Control_Task_2+0x5c4>)
 8003334:	781b      	ldrb	r3, [r3, #0]
 8003336:	2b01      	cmp	r3, #1
 8003338:	f040 8100 	bne.w	800353c <Control_Task_2+0x734>
	{
		//O-ban várakoz
		if (selected_route==1 && piratePos_prev[1]=='O')
 800333c:	4b1c      	ldr	r3, [pc, #112]	; (80033b0 <Control_Task_2+0x5a8>)
 800333e:	781b      	ldrb	r3, [r3, #0]
 8003340:	2b01      	cmp	r3, #1
 8003342:	d10b      	bne.n	800335c <Control_Task_2+0x554>
 8003344:	4b17      	ldr	r3, [pc, #92]	; (80033a4 <Control_Task_2+0x59c>)
 8003346:	785b      	ldrb	r3, [r3, #1]
 8003348:	2b4f      	cmp	r3, #79	; 0x4f
 800334a:	d107      	bne.n	800335c <Control_Task_2+0x554>
		{
			control_task_2_state=2;//pos[MY]=piratePos[2];//amíg a kalózrobot azt célba nem veszi
 800334c:	4b1f      	ldr	r3, [pc, #124]	; (80033cc <Control_Task_2+0x5c4>)
 800334e:	2202      	movs	r2, #2
 8003350:	701a      	strb	r2, [r3, #0]
			pos[MY]=piratePos_prev[2];
 8003352:	4b14      	ldr	r3, [pc, #80]	; (80033a4 <Control_Task_2+0x59c>)
 8003354:	789a      	ldrb	r2, [r3, #2]
 8003356:	4b10      	ldr	r3, [pc, #64]	; (8003398 <Control_Task_2+0x590>)
 8003358:	701a      	strb	r2, [r3, #0]
 800335a:	e08d      	b.n	8003478 <Control_Task_2+0x670>
		}
		else if (selected_route==2) //L-ben várakozunk
 800335c:	4b14      	ldr	r3, [pc, #80]	; (80033b0 <Control_Task_2+0x5a8>)
 800335e:	781b      	ldrb	r3, [r3, #0]
 8003360:	2b02      	cmp	r3, #2
 8003362:	d144      	bne.n	80033ee <Control_Task_2+0x5e6>
		{
			if(piratePos_prev[1]=='K' && piratePos_prev[2] != 'L')
 8003364:	4b0f      	ldr	r3, [pc, #60]	; (80033a4 <Control_Task_2+0x59c>)
 8003366:	785b      	ldrb	r3, [r3, #1]
 8003368:	2b4b      	cmp	r3, #75	; 0x4b
 800336a:	d131      	bne.n	80033d0 <Control_Task_2+0x5c8>
 800336c:	4b0d      	ldr	r3, [pc, #52]	; (80033a4 <Control_Task_2+0x59c>)
 800336e:	789b      	ldrb	r3, [r3, #2]
 8003370:	2b4c      	cmp	r3, #76	; 0x4c
 8003372:	d02d      	beq.n	80033d0 <Control_Task_2+0x5c8>
			{
				pos[MY]=piratePos_prev[2];//menjünk oda ahova ő akar, ez akkor jo ha nem felénk jön, felülbíráljuk a pos[my]='I'-t
 8003374:	4b0b      	ldr	r3, [pc, #44]	; (80033a4 <Control_Task_2+0x59c>)
 8003376:	789a      	ldrb	r2, [r3, #2]
 8003378:	4b07      	ldr	r3, [pc, #28]	; (8003398 <Control_Task_2+0x590>)
 800337a:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 800337c:	4b13      	ldr	r3, [pc, #76]	; (80033cc <Control_Task_2+0x5c4>)
 800337e:	2202      	movs	r2, #2
 8003380:	701a      	strb	r2, [r3, #0]
 8003382:	e079      	b.n	8003478 <Control_Task_2+0x670>
 8003384:	20000746 	.word	0x20000746
 8003388:	20000748 	.word	0x20000748
 800338c:	20000346 	.word	0x20000346
 8003390:	080114d8 	.word	0x080114d8
 8003394:	20000720 	.word	0x20000720
 8003398:	20000358 	.word	0x20000358
 800339c:	2000074a 	.word	0x2000074a
 80033a0:	40020400 	.word	0x40020400
 80033a4:	2000071c 	.word	0x2000071c
 80033a8:	20000740 	.word	0x20000740
 80033ac:	20000010 	.word	0x20000010
 80033b0:	2000074b 	.word	0x2000074b
 80033b4:	20000018 	.word	0x20000018
 80033b8:	20000020 	.word	0x20000020
 80033bc:	20000028 	.word	0x20000028
 80033c0:	2000073e 	.word	0x2000073e
 80033c4:	20000360 	.word	0x20000360
 80033c8:	20000349 	.word	0x20000349
 80033cc:	20000710 	.word	0x20000710
			}
			else if(piratePos_prev[1]=='L') //waiting
 80033d0:	4b86      	ldr	r3, [pc, #536]	; (80035ec <Control_Task_2+0x7e4>)
 80033d2:	785b      	ldrb	r3, [r3, #1]
 80033d4:	2b4c      	cmp	r3, #76	; 0x4c
 80033d6:	d14f      	bne.n	8003478 <Control_Task_2+0x670>
			{
				pos[MY]=piratePos_prev[2];
 80033d8:	4b84      	ldr	r3, [pc, #528]	; (80035ec <Control_Task_2+0x7e4>)
 80033da:	789a      	ldrb	r2, [r3, #2]
 80033dc:	4b84      	ldr	r3, [pc, #528]	; (80035f0 <Control_Task_2+0x7e8>)
 80033de:	701a      	strb	r2, [r3, #0]
				orientation=REVERSE;
 80033e0:	4b84      	ldr	r3, [pc, #528]	; (80035f4 <Control_Task_2+0x7ec>)
 80033e2:	2201      	movs	r2, #1
 80033e4:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 80033e6:	4b84      	ldr	r3, [pc, #528]	; (80035f8 <Control_Task_2+0x7f0>)
 80033e8:	2202      	movs	r2, #2
 80033ea:	701a      	strb	r2, [r3, #0]
 80033ec:	e044      	b.n	8003478 <Control_Task_2+0x670>
				sprintf(str,"Wait!\n\r");
				HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);
#endif
			}
		}
		else if(selected_route==3)//I-ben várakozunk
 80033ee:	4b83      	ldr	r3, [pc, #524]	; (80035fc <Control_Task_2+0x7f4>)
 80033f0:	781b      	ldrb	r3, [r3, #0]
 80033f2:	2b03      	cmp	r3, #3
 80033f4:	d11e      	bne.n	8003434 <Control_Task_2+0x62c>
		{
			if(piratePos_prev[1]=='F' && piratePos_prev[2] != 'I')
 80033f6:	4b7d      	ldr	r3, [pc, #500]	; (80035ec <Control_Task_2+0x7e4>)
 80033f8:	785b      	ldrb	r3, [r3, #1]
 80033fa:	2b46      	cmp	r3, #70	; 0x46
 80033fc:	d10b      	bne.n	8003416 <Control_Task_2+0x60e>
 80033fe:	4b7b      	ldr	r3, [pc, #492]	; (80035ec <Control_Task_2+0x7e4>)
 8003400:	789b      	ldrb	r3, [r3, #2]
 8003402:	2b49      	cmp	r3, #73	; 0x49
 8003404:	d007      	beq.n	8003416 <Control_Task_2+0x60e>
			{
				pos[MY]=piratePos_prev[2];//menjünk oda ahova ő akar, ez akkor jo ha nem felénk jön, felülbíráljuk a pos[my]='D'-t
 8003406:	4b79      	ldr	r3, [pc, #484]	; (80035ec <Control_Task_2+0x7e4>)
 8003408:	789a      	ldrb	r2, [r3, #2]
 800340a:	4b79      	ldr	r3, [pc, #484]	; (80035f0 <Control_Task_2+0x7e8>)
 800340c:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 800340e:	4b7a      	ldr	r3, [pc, #488]	; (80035f8 <Control_Task_2+0x7f0>)
 8003410:	2202      	movs	r2, #2
 8003412:	701a      	strb	r2, [r3, #0]
 8003414:	e030      	b.n	8003478 <Control_Task_2+0x670>
			}
			else if(piratePos_prev[1]=='I')
 8003416:	4b75      	ldr	r3, [pc, #468]	; (80035ec <Control_Task_2+0x7e4>)
 8003418:	785b      	ldrb	r3, [r3, #1]
 800341a:	2b49      	cmp	r3, #73	; 0x49
 800341c:	d12c      	bne.n	8003478 <Control_Task_2+0x670>
			{
				//waiting
				pos[MY]=piratePos_prev[2];
 800341e:	4b73      	ldr	r3, [pc, #460]	; (80035ec <Control_Task_2+0x7e4>)
 8003420:	789a      	ldrb	r2, [r3, #2]
 8003422:	4b73      	ldr	r3, [pc, #460]	; (80035f0 <Control_Task_2+0x7e8>)
 8003424:	701a      	strb	r2, [r3, #0]
				orientation=REVERSE;
 8003426:	4b73      	ldr	r3, [pc, #460]	; (80035f4 <Control_Task_2+0x7ec>)
 8003428:	2201      	movs	r2, #1
 800342a:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 800342c:	4b72      	ldr	r3, [pc, #456]	; (80035f8 <Control_Task_2+0x7f0>)
 800342e:	2202      	movs	r2, #2
 8003430:	701a      	strb	r2, [r3, #0]
 8003432:	e021      	b.n	8003478 <Control_Task_2+0x670>
				HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);
#endif
			}
		}

		else if (selected_route==4){//I-ben várakozunk
 8003434:	4b71      	ldr	r3, [pc, #452]	; (80035fc <Control_Task_2+0x7f4>)
 8003436:	781b      	ldrb	r3, [r3, #0]
 8003438:	2b04      	cmp	r3, #4
 800343a:	d11d      	bne.n	8003478 <Control_Task_2+0x670>

			if(piratePos_prev[1]=='N' && piratePos_prev[2]!='L')
 800343c:	4b6b      	ldr	r3, [pc, #428]	; (80035ec <Control_Task_2+0x7e4>)
 800343e:	785b      	ldrb	r3, [r3, #1]
 8003440:	2b4e      	cmp	r3, #78	; 0x4e
 8003442:	d10b      	bne.n	800345c <Control_Task_2+0x654>
 8003444:	4b69      	ldr	r3, [pc, #420]	; (80035ec <Control_Task_2+0x7e4>)
 8003446:	789b      	ldrb	r3, [r3, #2]
 8003448:	2b4c      	cmp	r3, #76	; 0x4c
 800344a:	d007      	beq.n	800345c <Control_Task_2+0x654>
			{
				pos[MY]=piratePos_prev[2];//menjünk oda ahova ő akar, ez akkor jo ha nem felénk jön, felülbíráljuk a pos[my]='I'-t
 800344c:	4b67      	ldr	r3, [pc, #412]	; (80035ec <Control_Task_2+0x7e4>)
 800344e:	789a      	ldrb	r2, [r3, #2]
 8003450:	4b67      	ldr	r3, [pc, #412]	; (80035f0 <Control_Task_2+0x7e8>)
 8003452:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 8003454:	4b68      	ldr	r3, [pc, #416]	; (80035f8 <Control_Task_2+0x7f0>)
 8003456:	2202      	movs	r2, #2
 8003458:	701a      	strb	r2, [r3, #0]
 800345a:	e00d      	b.n	8003478 <Control_Task_2+0x670>
			}
			else if(piratePos_prev[1]=='L')//waiting
 800345c:	4b63      	ldr	r3, [pc, #396]	; (80035ec <Control_Task_2+0x7e4>)
 800345e:	785b      	ldrb	r3, [r3, #1]
 8003460:	2b4c      	cmp	r3, #76	; 0x4c
 8003462:	d109      	bne.n	8003478 <Control_Task_2+0x670>
			{
				pos[MY]=piratePos_prev[2];
 8003464:	4b61      	ldr	r3, [pc, #388]	; (80035ec <Control_Task_2+0x7e4>)
 8003466:	789a      	ldrb	r2, [r3, #2]
 8003468:	4b61      	ldr	r3, [pc, #388]	; (80035f0 <Control_Task_2+0x7e8>)
 800346a:	701a      	strb	r2, [r3, #0]
				orientation=REVERSE;
 800346c:	4b61      	ldr	r3, [pc, #388]	; (80035f4 <Control_Task_2+0x7ec>)
 800346e:	2201      	movs	r2, #1
 8003470:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 8003472:	4b61      	ldr	r3, [pc, #388]	; (80035f8 <Control_Task_2+0x7f0>)
 8003474:	2202      	movs	r2, #2
 8003476:	701a      	strb	r2, [r3, #0]
				sprintf(str,"Wait!\n\r");
				HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);
#endif
			}
		}
		if (control_task_2_state==2)
 8003478:	4b5f      	ldr	r3, [pc, #380]	; (80035f8 <Control_Task_2+0x7f0>)
 800347a:	781b      	ldrb	r3, [r3, #0]
 800347c:	2b02      	cmp	r3, #2
 800347e:	d15d      	bne.n	800353c <Control_Task_2+0x734>
		{
			for(i=0;i<6;i++)
 8003480:	4b5f      	ldr	r3, [pc, #380]	; (8003600 <Control_Task_2+0x7f8>)
 8003482:	2200      	movs	r2, #0
 8003484:	701a      	strb	r2, [r3, #0]
 8003486:	e021      	b.n	80034cc <Control_Task_2+0x6c4>
			{
				if (N(route[route_index-1]).neighbours[i]==piratePos_prev[2])//O-hanyadik szomszedja L?
 8003488:	4b5e      	ldr	r3, [pc, #376]	; (8003604 <Control_Task_2+0x7fc>)
 800348a:	781b      	ldrb	r3, [r3, #0]
 800348c:	3b01      	subs	r3, #1
 800348e:	4a5e      	ldr	r2, [pc, #376]	; (8003608 <Control_Task_2+0x800>)
 8003490:	5cd3      	ldrb	r3, [r2, r3]
 8003492:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003496:	4b5a      	ldr	r3, [pc, #360]	; (8003600 <Control_Task_2+0x7f8>)
 8003498:	781b      	ldrb	r3, [r3, #0]
 800349a:	4618      	mov	r0, r3
 800349c:	495b      	ldr	r1, [pc, #364]	; (800360c <Control_Task_2+0x804>)
 800349e:	4613      	mov	r3, r2
 80034a0:	009b      	lsls	r3, r3, #2
 80034a2:	4413      	add	r3, r2
 80034a4:	00db      	lsls	r3, r3, #3
 80034a6:	440b      	add	r3, r1
 80034a8:	4403      	add	r3, r0
 80034aa:	330c      	adds	r3, #12
 80034ac:	781a      	ldrb	r2, [r3, #0]
 80034ae:	4b4f      	ldr	r3, [pc, #316]	; (80035ec <Control_Task_2+0x7e4>)
 80034b0:	789b      	ldrb	r3, [r3, #2]
 80034b2:	429a      	cmp	r2, r3
 80034b4:	d104      	bne.n	80034c0 <Control_Task_2+0x6b8>
				{
					bestNb[NEXT]=i;
 80034b6:	4b52      	ldr	r3, [pc, #328]	; (8003600 <Control_Task_2+0x7f8>)
 80034b8:	781a      	ldrb	r2, [r3, #0]
 80034ba:	4b55      	ldr	r3, [pc, #340]	; (8003610 <Control_Task_2+0x808>)
 80034bc:	705a      	strb	r2, [r3, #1]
					break;
 80034be:	e009      	b.n	80034d4 <Control_Task_2+0x6cc>
			for(i=0;i<6;i++)
 80034c0:	4b4f      	ldr	r3, [pc, #316]	; (8003600 <Control_Task_2+0x7f8>)
 80034c2:	781b      	ldrb	r3, [r3, #0]
 80034c4:	3301      	adds	r3, #1
 80034c6:	b2da      	uxtb	r2, r3
 80034c8:	4b4d      	ldr	r3, [pc, #308]	; (8003600 <Control_Task_2+0x7f8>)
 80034ca:	701a      	strb	r2, [r3, #0]
 80034cc:	4b4c      	ldr	r3, [pc, #304]	; (8003600 <Control_Task_2+0x7f8>)
 80034ce:	781b      	ldrb	r3, [r3, #0]
 80034d0:	2b05      	cmp	r3, #5
 80034d2:	d9d9      	bls.n	8003488 <Control_Task_2+0x680>
				}
			}
			if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)path=LEFT;
 80034d4:	4b4e      	ldr	r3, [pc, #312]	; (8003610 <Control_Task_2+0x808>)
 80034d6:	785b      	ldrb	r3, [r3, #1]
 80034d8:	2b00      	cmp	r3, #0
 80034da:	d003      	beq.n	80034e4 <Control_Task_2+0x6dc>
 80034dc:	4b4c      	ldr	r3, [pc, #304]	; (8003610 <Control_Task_2+0x808>)
 80034de:	785b      	ldrb	r3, [r3, #1]
 80034e0:	2b03      	cmp	r3, #3
 80034e2:	d103      	bne.n	80034ec <Control_Task_2+0x6e4>
 80034e4:	4b4b      	ldr	r3, [pc, #300]	; (8003614 <Control_Task_2+0x80c>)
 80034e6:	2200      	movs	r2, #0
 80034e8:	701a      	strb	r2, [r3, #0]
 80034ea:	e016      	b.n	800351a <Control_Task_2+0x712>
			else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)path=MIDDLE;
 80034ec:	4b48      	ldr	r3, [pc, #288]	; (8003610 <Control_Task_2+0x808>)
 80034ee:	785b      	ldrb	r3, [r3, #1]
 80034f0:	2b01      	cmp	r3, #1
 80034f2:	d003      	beq.n	80034fc <Control_Task_2+0x6f4>
 80034f4:	4b46      	ldr	r3, [pc, #280]	; (8003610 <Control_Task_2+0x808>)
 80034f6:	785b      	ldrb	r3, [r3, #1]
 80034f8:	2b04      	cmp	r3, #4
 80034fa:	d103      	bne.n	8003504 <Control_Task_2+0x6fc>
 80034fc:	4b45      	ldr	r3, [pc, #276]	; (8003614 <Control_Task_2+0x80c>)
 80034fe:	2201      	movs	r2, #1
 8003500:	701a      	strb	r2, [r3, #0]
 8003502:	e00a      	b.n	800351a <Control_Task_2+0x712>
			else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)path=RIGHT;
 8003504:	4b42      	ldr	r3, [pc, #264]	; (8003610 <Control_Task_2+0x808>)
 8003506:	785b      	ldrb	r3, [r3, #1]
 8003508:	2b02      	cmp	r3, #2
 800350a:	d003      	beq.n	8003514 <Control_Task_2+0x70c>
 800350c:	4b40      	ldr	r3, [pc, #256]	; (8003610 <Control_Task_2+0x808>)
 800350e:	785b      	ldrb	r3, [r3, #1]
 8003510:	2b05      	cmp	r3, #5
 8003512:	d102      	bne.n	800351a <Control_Task_2+0x712>
 8003514:	4b3f      	ldr	r3, [pc, #252]	; (8003614 <Control_Task_2+0x80c>)
 8003516:	2202      	movs	r2, #2
 8003518:	701a      	strb	r2, [r3, #0]
			v_control=NORMAL_VEL;
 800351a:	4b3f      	ldr	r3, [pc, #252]	; (8003618 <Control_Task_2+0x810>)
 800351c:	2202      	movs	r2, #2
 800351e:	701a      	strb	r2, [r3, #0]
			sprintf(str,"d\n\r");
			str[0]=pos[MY];//honnan
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 3, 3);
#endif
#ifdef ADIBUGG
			sprintf(str,"d;\n\r");
 8003520:	493e      	ldr	r1, [pc, #248]	; (800361c <Control_Task_2+0x814>)
 8003522:	483f      	ldr	r0, [pc, #252]	; (8003620 <Control_Task_2+0x818>)
 8003524:	f00a faa8 	bl	800da78 <siprintf>
			str[0]=pos[MY];//honnan
 8003528:	4b31      	ldr	r3, [pc, #196]	; (80035f0 <Control_Task_2+0x7e8>)
 800352a:	781a      	ldrb	r2, [r3, #0]
 800352c:	4b3c      	ldr	r3, [pc, #240]	; (8003620 <Control_Task_2+0x818>)
 800352e:	701a      	strb	r2, [r3, #0]

			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 4, 3);
 8003530:	2303      	movs	r3, #3
 8003532:	2204      	movs	r2, #4
 8003534:	493a      	ldr	r1, [pc, #232]	; (8003620 <Control_Task_2+0x818>)
 8003536:	68f8      	ldr	r0, [r7, #12]
 8003538:	f008 fd35 	bl	800bfa6 <HAL_UART_Transmit>
#endif
		}
	}

	if (control_task_2_state==2)//elotte mozgas
 800353c:	4b2e      	ldr	r3, [pc, #184]	; (80035f8 <Control_Task_2+0x7f0>)
 800353e:	781b      	ldrb	r3, [r3, #0]
 8003540:	2b02      	cmp	r3, #2
 8003542:	f040 813c 	bne.w	80037be <Control_Task_2+0x9b6>
	{
		static uint8_t stopAfterNode=0;

		if(nodeDetected || stopAfterNode)
 8003546:	4b37      	ldr	r3, [pc, #220]	; (8003624 <Control_Task_2+0x81c>)
 8003548:	781b      	ldrb	r3, [r3, #0]
 800354a:	2b00      	cmp	r3, #0
 800354c:	d104      	bne.n	8003558 <Control_Task_2+0x750>
 800354e:	4b36      	ldr	r3, [pc, #216]	; (8003628 <Control_Task_2+0x820>)
 8003550:	781b      	ldrb	r3, [r3, #0]
 8003552:	2b00      	cmp	r3, #0
 8003554:	f000 8133 	beq.w	80037be <Control_Task_2+0x9b6>
		{

			if(nodeDetected)//ha nem sávváltó üzemmódban vagyunk pontotszámolunk és felszedett kapukat nullázzuk
 8003558:	4b32      	ldr	r3, [pc, #200]	; (8003624 <Control_Task_2+0x81c>)
 800355a:	781b      	ldrb	r3, [r3, #0]
 800355c:	2b00      	cmp	r3, #0
 800355e:	d035      	beq.n	80035cc <Control_Task_2+0x7c4>
			{



				LED_B_TOGGLE;
 8003560:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8003564:	4831      	ldr	r0, [pc, #196]	; (800362c <Control_Task_2+0x824>)
 8003566:	f005 ffe4 	bl	8009532 <HAL_GPIO_TogglePin>
				collectedPoints +=N(pos[MY]).worth;//sávváltás módik vizsgáljuk az össezgyűjtött kapuk számát
 800356a:	4b21      	ldr	r3, [pc, #132]	; (80035f0 <Control_Task_2+0x7e8>)
 800356c:	781b      	ldrb	r3, [r3, #0]
 800356e:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003572:	4926      	ldr	r1, [pc, #152]	; (800360c <Control_Task_2+0x804>)
 8003574:	4613      	mov	r3, r2
 8003576:	009b      	lsls	r3, r3, #2
 8003578:	4413      	add	r3, r2
 800357a:	00db      	lsls	r3, r3, #3
 800357c:	440b      	add	r3, r1
 800357e:	3304      	adds	r3, #4
 8003580:	681b      	ldr	r3, [r3, #0]
 8003582:	b2da      	uxtb	r2, r3
 8003584:	4b2a      	ldr	r3, [pc, #168]	; (8003630 <Control_Task_2+0x828>)
 8003586:	781b      	ldrb	r3, [r3, #0]
 8003588:	4413      	add	r3, r2
 800358a:	b2da      	uxtb	r2, r3
 800358c:	4b28      	ldr	r3, [pc, #160]	; (8003630 <Control_Task_2+0x828>)
 800358e:	701a      	strb	r2, [r3, #0]
				N(pos[MY]).worth=0;//ez a kapu már nem ér pontot
 8003590:	4b17      	ldr	r3, [pc, #92]	; (80035f0 <Control_Task_2+0x7e8>)
 8003592:	781b      	ldrb	r3, [r3, #0]
 8003594:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003598:	491c      	ldr	r1, [pc, #112]	; (800360c <Control_Task_2+0x804>)
 800359a:	4613      	mov	r3, r2
 800359c:	009b      	lsls	r3, r3, #2
 800359e:	4413      	add	r3, r2
 80035a0:	00db      	lsls	r3, r3, #3
 80035a2:	440b      	add	r3, r1
 80035a4:	3304      	adds	r3, #4
 80035a6:	2200      	movs	r2, #0
 80035a8:	601a      	str	r2, [r3, #0]

				sprintf(str,"%d\n\r",collectedPoints);
 80035aa:	4b21      	ldr	r3, [pc, #132]	; (8003630 <Control_Task_2+0x828>)
 80035ac:	781b      	ldrb	r3, [r3, #0]
 80035ae:	461a      	mov	r2, r3
 80035b0:	4920      	ldr	r1, [pc, #128]	; (8003634 <Control_Task_2+0x82c>)
 80035b2:	481b      	ldr	r0, [pc, #108]	; (8003620 <Control_Task_2+0x818>)
 80035b4:	f00a fa60 	bl	800da78 <siprintf>
				HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);
 80035b8:	4819      	ldr	r0, [pc, #100]	; (8003620 <Control_Task_2+0x818>)
 80035ba:	f7fc fe29 	bl	8000210 <strlen>
 80035be:	4603      	mov	r3, r0
 80035c0:	b29a      	uxth	r2, r3
 80035c2:	2303      	movs	r3, #3
 80035c4:	4916      	ldr	r1, [pc, #88]	; (8003620 <Control_Task_2+0x818>)
 80035c6:	68f8      	ldr	r0, [r7, #12]
 80035c8:	f008 fced 	bl	800bfa6 <HAL_UART_Transmit>
			}

			if(piratePos_prev[1]==pos[MY])//ha celja a mi pozink, tudjuk a kovi celt
 80035cc:	4b07      	ldr	r3, [pc, #28]	; (80035ec <Control_Task_2+0x7e4>)
 80035ce:	785a      	ldrb	r2, [r3, #1]
 80035d0:	4b07      	ldr	r3, [pc, #28]	; (80035f0 <Control_Task_2+0x7e8>)
 80035d2:	781b      	ldrb	r3, [r3, #0]
 80035d4:	429a      	cmp	r2, r3
 80035d6:	f040 80e3 	bne.w	80037a0 <Control_Task_2+0x998>
			{
				pos[MY]=piratePos_prev[2];
 80035da:	4b04      	ldr	r3, [pc, #16]	; (80035ec <Control_Task_2+0x7e4>)
 80035dc:	789a      	ldrb	r2, [r3, #2]
 80035de:	4b04      	ldr	r3, [pc, #16]	; (80035f0 <Control_Task_2+0x7e8>)
 80035e0:	701a      	strb	r2, [r3, #0]
				for(i=0; i<6;i++)
 80035e2:	4b07      	ldr	r3, [pc, #28]	; (8003600 <Control_Task_2+0x7f8>)
 80035e4:	2200      	movs	r2, #0
 80035e6:	701a      	strb	r2, [r3, #0]
 80035e8:	e057      	b.n	800369a <Control_Task_2+0x892>
 80035ea:	bf00      	nop
 80035ec:	2000071c 	.word	0x2000071c
 80035f0:	20000358 	.word	0x20000358
 80035f4:	20000344 	.word	0x20000344
 80035f8:	20000710 	.word	0x20000710
 80035fc:	2000074b 	.word	0x2000074b
 8003600:	20000746 	.word	0x20000746
 8003604:	2000073e 	.word	0x2000073e
 8003608:	20000740 	.word	0x20000740
 800360c:	20000360 	.word	0x20000360
 8003610:	20000748 	.word	0x20000748
 8003614:	20000346 	.word	0x20000346
 8003618:	20000349 	.word	0x20000349
 800361c:	080114d8 	.word	0x080114d8
 8003620:	20000720 	.word	0x20000720
 8003624:	20000345 	.word	0x20000345
 8003628:	2000074c 	.word	0x2000074c
 800362c:	40020400 	.word	0x40020400
 8003630:	20000347 	.word	0x20000347
 8003634:	080114d0 	.word	0x080114d0
				{
					if (N(piratePos_prev[1]).neighbours[i]==piratePos_prev[2])//O-hanyadik szomszedja L?
 8003638:	4b63      	ldr	r3, [pc, #396]	; (80037c8 <Control_Task_2+0x9c0>)
 800363a:	785b      	ldrb	r3, [r3, #1]
 800363c:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003640:	4b62      	ldr	r3, [pc, #392]	; (80037cc <Control_Task_2+0x9c4>)
 8003642:	781b      	ldrb	r3, [r3, #0]
 8003644:	4618      	mov	r0, r3
 8003646:	4962      	ldr	r1, [pc, #392]	; (80037d0 <Control_Task_2+0x9c8>)
 8003648:	4613      	mov	r3, r2
 800364a:	009b      	lsls	r3, r3, #2
 800364c:	4413      	add	r3, r2
 800364e:	00db      	lsls	r3, r3, #3
 8003650:	440b      	add	r3, r1
 8003652:	4403      	add	r3, r0
 8003654:	330c      	adds	r3, #12
 8003656:	781a      	ldrb	r2, [r3, #0]
 8003658:	4b5b      	ldr	r3, [pc, #364]	; (80037c8 <Control_Task_2+0x9c0>)
 800365a:	789b      	ldrb	r3, [r3, #2]
 800365c:	429a      	cmp	r2, r3
 800365e:	d116      	bne.n	800368e <Control_Task_2+0x886>
					{
						bestNb[NEXT]=i;
 8003660:	4b5a      	ldr	r3, [pc, #360]	; (80037cc <Control_Task_2+0x9c4>)
 8003662:	781a      	ldrb	r2, [r3, #0]
 8003664:	4b5b      	ldr	r3, [pc, #364]	; (80037d4 <Control_Task_2+0x9cc>)
 8003666:	705a      	strb	r2, [r3, #1]
						dir[MY]=N(piratePos_prev[1]).directions[i];
 8003668:	4b57      	ldr	r3, [pc, #348]	; (80037c8 <Control_Task_2+0x9c0>)
 800366a:	785b      	ldrb	r3, [r3, #1]
 800366c:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003670:	4b56      	ldr	r3, [pc, #344]	; (80037cc <Control_Task_2+0x9c4>)
 8003672:	781b      	ldrb	r3, [r3, #0]
 8003674:	4618      	mov	r0, r3
 8003676:	4956      	ldr	r1, [pc, #344]	; (80037d0 <Control_Task_2+0x9c8>)
 8003678:	4613      	mov	r3, r2
 800367a:	009b      	lsls	r3, r3, #2
 800367c:	4413      	add	r3, r2
 800367e:	00db      	lsls	r3, r3, #3
 8003680:	440b      	add	r3, r1
 8003682:	4403      	add	r3, r0
 8003684:	3312      	adds	r3, #18
 8003686:	781a      	ldrb	r2, [r3, #0]
 8003688:	4b53      	ldr	r3, [pc, #332]	; (80037d8 <Control_Task_2+0x9d0>)
 800368a:	701a      	strb	r2, [r3, #0]
						break;
 800368c:	e009      	b.n	80036a2 <Control_Task_2+0x89a>
				for(i=0; i<6;i++)
 800368e:	4b4f      	ldr	r3, [pc, #316]	; (80037cc <Control_Task_2+0x9c4>)
 8003690:	781b      	ldrb	r3, [r3, #0]
 8003692:	3301      	adds	r3, #1
 8003694:	b2da      	uxtb	r2, r3
 8003696:	4b4d      	ldr	r3, [pc, #308]	; (80037cc <Control_Task_2+0x9c4>)
 8003698:	701a      	strb	r2, [r3, #0]
 800369a:	4b4c      	ldr	r3, [pc, #304]	; (80037cc <Control_Task_2+0x9c4>)
 800369c:	781b      	ldrb	r3, [r3, #0]
 800369e:	2b05      	cmp	r3, #5
 80036a0:	d9ca      	bls.n	8003638 <Control_Task_2+0x830>
					}
				}
				if(N(pos[MY]).type>2)//ha a kövi node-on nincs kapu
 80036a2:	4b4e      	ldr	r3, [pc, #312]	; (80037dc <Control_Task_2+0x9d4>)
 80036a4:	781b      	ldrb	r3, [r3, #0]
 80036a6:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80036aa:	4949      	ldr	r1, [pc, #292]	; (80037d0 <Control_Task_2+0x9c8>)
 80036ac:	4613      	mov	r3, r2
 80036ae:	009b      	lsls	r3, r3, #2
 80036b0:	4413      	add	r3, r2
 80036b2:	00db      	lsls	r3, r3, #3
 80036b4:	440b      	add	r3, r1
 80036b6:	3308      	adds	r3, #8
 80036b8:	681b      	ldr	r3, [r3, #0]
 80036ba:	2b02      	cmp	r3, #2
 80036bc:	d91b      	bls.n	80036f6 <Control_Task_2+0x8ee>
				{
					s=0;
 80036be:	4b48      	ldr	r3, [pc, #288]	; (80037e0 <Control_Task_2+0x9d8>)
 80036c0:	f04f 0200 	mov.w	r2, #0
 80036c4:	601a      	str	r2, [r3, #0]
					sMAX=N(piratePos_prev[1]).distance[bestNb[NEXT]]+25;
 80036c6:	4b40      	ldr	r3, [pc, #256]	; (80037c8 <Control_Task_2+0x9c0>)
 80036c8:	785b      	ldrb	r3, [r3, #1]
 80036ca:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80036ce:	4b41      	ldr	r3, [pc, #260]	; (80037d4 <Control_Task_2+0x9cc>)
 80036d0:	785b      	ldrb	r3, [r3, #1]
 80036d2:	4618      	mov	r0, r3
 80036d4:	493e      	ldr	r1, [pc, #248]	; (80037d0 <Control_Task_2+0x9c8>)
 80036d6:	4613      	mov	r3, r2
 80036d8:	009b      	lsls	r3, r3, #2
 80036da:	4413      	add	r3, r2
 80036dc:	009b      	lsls	r3, r3, #2
 80036de:	4403      	add	r3, r0
 80036e0:	330c      	adds	r3, #12
 80036e2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80036e6:	3319      	adds	r3, #25
 80036e8:	ee07 3a90 	vmov	s15, r3
 80036ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80036f0:	4b3c      	ldr	r3, [pc, #240]	; (80037e4 <Control_Task_2+0x9dc>)
 80036f2:	edc3 7a00 	vstr	s15, [r3]
				}
				if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)path=LEFT;
 80036f6:	4b37      	ldr	r3, [pc, #220]	; (80037d4 <Control_Task_2+0x9cc>)
 80036f8:	785b      	ldrb	r3, [r3, #1]
 80036fa:	2b00      	cmp	r3, #0
 80036fc:	d003      	beq.n	8003706 <Control_Task_2+0x8fe>
 80036fe:	4b35      	ldr	r3, [pc, #212]	; (80037d4 <Control_Task_2+0x9cc>)
 8003700:	785b      	ldrb	r3, [r3, #1]
 8003702:	2b03      	cmp	r3, #3
 8003704:	d103      	bne.n	800370e <Control_Task_2+0x906>
 8003706:	4b38      	ldr	r3, [pc, #224]	; (80037e8 <Control_Task_2+0x9e0>)
 8003708:	2200      	movs	r2, #0
 800370a:	701a      	strb	r2, [r3, #0]
 800370c:	e016      	b.n	800373c <Control_Task_2+0x934>
				else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)path=MIDDLE;
 800370e:	4b31      	ldr	r3, [pc, #196]	; (80037d4 <Control_Task_2+0x9cc>)
 8003710:	785b      	ldrb	r3, [r3, #1]
 8003712:	2b01      	cmp	r3, #1
 8003714:	d003      	beq.n	800371e <Control_Task_2+0x916>
 8003716:	4b2f      	ldr	r3, [pc, #188]	; (80037d4 <Control_Task_2+0x9cc>)
 8003718:	785b      	ldrb	r3, [r3, #1]
 800371a:	2b04      	cmp	r3, #4
 800371c:	d103      	bne.n	8003726 <Control_Task_2+0x91e>
 800371e:	4b32      	ldr	r3, [pc, #200]	; (80037e8 <Control_Task_2+0x9e0>)
 8003720:	2201      	movs	r2, #1
 8003722:	701a      	strb	r2, [r3, #0]
 8003724:	e00a      	b.n	800373c <Control_Task_2+0x934>
				else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)path=RIGHT;
 8003726:	4b2b      	ldr	r3, [pc, #172]	; (80037d4 <Control_Task_2+0x9cc>)
 8003728:	785b      	ldrb	r3, [r3, #1]
 800372a:	2b02      	cmp	r3, #2
 800372c:	d003      	beq.n	8003736 <Control_Task_2+0x92e>
 800372e:	4b29      	ldr	r3, [pc, #164]	; (80037d4 <Control_Task_2+0x9cc>)
 8003730:	785b      	ldrb	r3, [r3, #1]
 8003732:	2b05      	cmp	r3, #5
 8003734:	d102      	bne.n	800373c <Control_Task_2+0x934>
 8003736:	4b2c      	ldr	r3, [pc, #176]	; (80037e8 <Control_Task_2+0x9e0>)
 8003738:	2202      	movs	r2, #2
 800373a:	701a      	strb	r2, [r3, #0]
				v_control=NORMAL_VEL;
 800373c:	4b2b      	ldr	r3, [pc, #172]	; (80037ec <Control_Task_2+0x9e4>)
 800373e:	2202      	movs	r2, #2
 8003740:	701a      	strb	r2, [r3, #0]
				stopAfterNode=0;
 8003742:	4b2b      	ldr	r3, [pc, #172]	; (80037f0 <Control_Task_2+0x9e8>)
 8003744:	2200      	movs	r2, #0
 8003746:	701a      	strb	r2, [r3, #0]
				if(collectedPoints >= 34 && N(pos[MY]).type<3)
 8003748:	4b2a      	ldr	r3, [pc, #168]	; (80037f4 <Control_Task_2+0x9ec>)
 800374a:	781b      	ldrb	r3, [r3, #0]
 800374c:	2b21      	cmp	r3, #33	; 0x21
 800374e:	d918      	bls.n	8003782 <Control_Task_2+0x97a>
 8003750:	4b22      	ldr	r3, [pc, #136]	; (80037dc <Control_Task_2+0x9d4>)
 8003752:	781b      	ldrb	r3, [r3, #0]
 8003754:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003758:	491d      	ldr	r1, [pc, #116]	; (80037d0 <Control_Task_2+0x9c8>)
 800375a:	4613      	mov	r3, r2
 800375c:	009b      	lsls	r3, r3, #2
 800375e:	4413      	add	r3, r2
 8003760:	00db      	lsls	r3, r3, #3
 8003762:	440b      	add	r3, r1
 8003764:	3308      	adds	r3, #8
 8003766:	681b      	ldr	r3, [r3, #0]
 8003768:	2b02      	cmp	r3, #2
 800376a:	d80a      	bhi.n	8003782 <Control_Task_2+0x97a>
				{
					laneChange=1; //flag állítás
 800376c:	4b22      	ldr	r3, [pc, #136]	; (80037f8 <Control_Task_2+0x9f0>)
 800376e:	2201      	movs	r2, #1
 8003770:	701a      	strb	r2, [r3, #0]
					Lane_Change_Init(); //a sávváltóhely felé nőnek a rewardok
 8003772:	f000 fa0b 	bl	8003b8c <Lane_Change_Init>
					LED_Y(1); //sárga led világít
 8003776:	2200      	movs	r2, #0
 8003778:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800377c:	481f      	ldr	r0, [pc, #124]	; (80037fc <Control_Task_2+0x9f4>)
 800377e:	f005 febf 	bl	8009500 <HAL_GPIO_WritePin>
				}
#ifdef ADIBUGG
			sprintf(str,"d;\n\r");
 8003782:	491f      	ldr	r1, [pc, #124]	; (8003800 <Control_Task_2+0x9f8>)
 8003784:	481f      	ldr	r0, [pc, #124]	; (8003804 <Control_Task_2+0x9fc>)
 8003786:	f00a f977 	bl	800da78 <siprintf>
			str[0]=pos[MY];//honnan
 800378a:	4b14      	ldr	r3, [pc, #80]	; (80037dc <Control_Task_2+0x9d4>)
 800378c:	781a      	ldrb	r2, [r3, #0]
 800378e:	4b1d      	ldr	r3, [pc, #116]	; (8003804 <Control_Task_2+0x9fc>)
 8003790:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 4, 3);
 8003792:	2303      	movs	r3, #3
 8003794:	2204      	movs	r2, #4
 8003796:	491b      	ldr	r1, [pc, #108]	; (8003804 <Control_Task_2+0x9fc>)
 8003798:	68f8      	ldr	r0, [r7, #12]
 800379a:	f008 fc04 	bl	800bfa6 <HAL_UART_Transmit>
 800379e:	e005      	b.n	80037ac <Control_Task_2+0x9a4>
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 3, 3);
#endif
			}
			else
			{
				v_control=STOP;//wait
 80037a0:	4b12      	ldr	r3, [pc, #72]	; (80037ec <Control_Task_2+0x9e4>)
 80037a2:	2200      	movs	r2, #0
 80037a4:	701a      	strb	r2, [r3, #0]
				stopAfterNode=1;
 80037a6:	4b12      	ldr	r3, [pc, #72]	; (80037f0 <Control_Task_2+0x9e8>)
 80037a8:	2201      	movs	r2, #1
 80037aa:	701a      	strb	r2, [r3, #0]
			}
			nodeDetected=0;
 80037ac:	4b16      	ldr	r3, [pc, #88]	; (8003808 <Control_Task_2+0xa00>)
 80037ae:	2200      	movs	r2, #0
 80037b0:	701a      	strb	r2, [r3, #0]
 80037b2:	e004      	b.n	80037be <Control_Task_2+0x9b6>
	if(mode!=SKILL || laneChange)return;
 80037b4:	bf00      	nop
 80037b6:	e002      	b.n	80037be <Control_Task_2+0x9b6>
	else if(control_task_2_tick>tick)return;
 80037b8:	bf00      	nop
 80037ba:	e000      	b.n	80037be <Control_Task_2+0x9b6>
	if(piratePos_prev[0]==0)return; //ha nem kaptunk még adatot a TB-tol return
 80037bc:	bf00      	nop
		}
	}
}
 80037be:	3710      	adds	r7, #16
 80037c0:	46bd      	mov	sp, r7
 80037c2:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 80037c6:	bf00      	nop
 80037c8:	2000071c 	.word	0x2000071c
 80037cc:	20000746 	.word	0x20000746
 80037d0:	20000360 	.word	0x20000360
 80037d4:	20000748 	.word	0x20000748
 80037d8:	2000035c 	.word	0x2000035c
 80037dc:	20000358 	.word	0x20000358
 80037e0:	20000714 	.word	0x20000714
 80037e4:	2000000c 	.word	0x2000000c
 80037e8:	20000346 	.word	0x20000346
 80037ec:	20000349 	.word	0x20000349
 80037f0:	2000074c 	.word	0x2000074c
 80037f4:	20000347 	.word	0x20000347
 80037f8:	20000348 	.word	0x20000348
 80037fc:	40020400 	.word	0x40020400
 8003800:	080114d8 	.word	0x080114d8
 8003804:	20000720 	.word	0x20000720
 8003808:	20000345 	.word	0x20000345

0800380c <Mode_Selector>:

void Mode_Selector(UART_HandleTypeDef *huart_debugg, UART_HandleTypeDef *huart_stm)
{
 800380c:	b580      	push	{r7, lr}
 800380e:	b08e      	sub	sp, #56	; 0x38
 8003810:	af00      	add	r7, sp, #0
 8003812:	6078      	str	r0, [r7, #4]
 8003814:	6039      	str	r1, [r7, #0]
	//Milyen módban kell működni?
	uint8_t buffer[40];
	uint8_t tmp=*(__IO uint8_t *) FLASH_ADDRESS_MODESELECTOR; //FLASH-ből kiolvassuk, hogy milyen módban vagyunk
 8003816:	4b5f      	ldr	r3, [pc, #380]	; (8003994 <Mode_Selector+0x188>)
 8003818:	781b      	ldrb	r3, [r3, #0]
 800381a:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37

	if(tmp==SKILL || tmp==FAST) mode = tmp;
 800381e:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8003822:	2b52      	cmp	r3, #82	; 0x52
 8003824:	d003      	beq.n	800382e <Mode_Selector+0x22>
 8003826:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 800382a:	2b3f      	cmp	r3, #63	; 0x3f
 800382c:	d104      	bne.n	8003838 <Mode_Selector+0x2c>
 800382e:	4a5a      	ldr	r2, [pc, #360]	; (8003998 <Mode_Selector+0x18c>)
 8003830:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8003834:	7013      	strb	r3, [r2, #0]
 8003836:	e022      	b.n	800387e <Mode_Selector+0x72>
	else
	{
		HAL_FLASH_Unlock();
 8003838:	f005 fafc 	bl	8008e34 <HAL_FLASH_Unlock>
		HAL_Delay(50);
 800383c:	2032      	movs	r0, #50	; 0x32
 800383e:	f003 ffc5 	bl	80077cc <HAL_Delay>
		FLASH_Erase_Sector(7, FLASH_VOLTAGE_RANGE_3);
 8003842:	2102      	movs	r1, #2
 8003844:	2007      	movs	r0, #7
 8003846:	f005 fc67 	bl	8009118 <FLASH_Erase_Sector>
		HAL_Delay(50);
 800384a:	2032      	movs	r0, #50	; 0x32
 800384c:	f003 ffbe 	bl	80077cc <HAL_Delay>
		HAL_FLASH_Lock();
 8003850:	f005 fb12 	bl	8008e78 <HAL_FLASH_Lock>
		HAL_FLASH_Unlock();
 8003854:	f005 faee 	bl	8008e34 <HAL_FLASH_Unlock>
		HAL_Delay(50);
 8003858:	2032      	movs	r0, #50	; 0x32
 800385a:	f003 ffb7 	bl	80077cc <HAL_Delay>
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_MODESELECTOR, SKILL); //ha eddig skill mód volt akor msot gyors lesz
 800385e:	f04f 0252 	mov.w	r2, #82	; 0x52
 8003862:	f04f 0300 	mov.w	r3, #0
 8003866:	494b      	ldr	r1, [pc, #300]	; (8003994 <Mode_Selector+0x188>)
 8003868:	2000      	movs	r0, #0
 800386a:	f005 fa8f 	bl	8008d8c <HAL_FLASH_Program>
		HAL_Delay(50);
 800386e:	2032      	movs	r0, #50	; 0x32
 8003870:	f003 ffac 	bl	80077cc <HAL_Delay>
		HAL_FLASH_Lock();
 8003874:	f005 fb00 	bl	8008e78 <HAL_FLASH_Lock>

		mode=SKILL;
 8003878:	4b47      	ldr	r3, [pc, #284]	; (8003998 <Mode_Selector+0x18c>)
 800387a:	2252      	movs	r2, #82	; 0x52
 800387c:	701a      	strb	r2, [r3, #0]
	}

	if(mode==SKILL)
 800387e:	4b46      	ldr	r3, [pc, #280]	; (8003998 <Mode_Selector+0x18c>)
 8003880:	781b      	ldrb	r3, [r3, #0]
 8003882:	2b52      	cmp	r3, #82	; 0x52
 8003884:	d135      	bne.n	80038f2 <Mode_Selector+0xe6>
	{
		buffer[0] = CMD_MODE_SKILL; //szólunk a g0-nak, hogy ügyességi módban vagyunk
 8003886:	2352      	movs	r3, #82	; 0x52
 8003888:	733b      	strb	r3, [r7, #12]
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 800388a:	f107 010c 	add.w	r1, r7, #12
 800388e:	230a      	movs	r3, #10
 8003890:	2201      	movs	r2, #1
 8003892:	6838      	ldr	r0, [r7, #0]
 8003894:	f008 fb87 	bl	800bfa6 <HAL_UART_Transmit>
		HAL_Delay(10);
 8003898:	200a      	movs	r0, #10
 800389a:	f003 ff97 	bl	80077cc <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);//3 szór is szólunk neki, hogy tuti megkapja a módváltásról az üzenetet
 800389e:	f107 010c 	add.w	r1, r7, #12
 80038a2:	230a      	movs	r3, #10
 80038a4:	2201      	movs	r2, #1
 80038a6:	6838      	ldr	r0, [r7, #0]
 80038a8:	f008 fb7d 	bl	800bfa6 <HAL_UART_Transmit>
		HAL_Delay(10);
 80038ac:	200a      	movs	r0, #10
 80038ae:	f003 ff8d 	bl	80077cc <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 80038b2:	f107 010c 	add.w	r1, r7, #12
 80038b6:	230a      	movs	r3, #10
 80038b8:	2201      	movs	r2, #1
 80038ba:	6838      	ldr	r0, [r7, #0]
 80038bc:	f008 fb73 	bl	800bfa6 <HAL_UART_Transmit>

		sprintf((char*)buffer,"Skill mode!\n\r"); //Debugg uart-ra is kiküldjük, hogy milyen módban vagyunk
 80038c0:	f107 030c 	add.w	r3, r7, #12
 80038c4:	4935      	ldr	r1, [pc, #212]	; (800399c <Mode_Selector+0x190>)
 80038c6:	4618      	mov	r0, r3
 80038c8:	f00a f8d6 	bl	800da78 <siprintf>
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
 80038cc:	f107 030c 	add.w	r3, r7, #12
 80038d0:	4618      	mov	r0, r3
 80038d2:	f7fc fc9d 	bl	8000210 <strlen>
 80038d6:	4603      	mov	r3, r0
 80038d8:	b29a      	uxth	r2, r3
 80038da:	f107 010c 	add.w	r1, r7, #12
 80038de:	2364      	movs	r3, #100	; 0x64
 80038e0:	6878      	ldr	r0, [r7, #4]
 80038e2:	f008 fb60 	bl	800bfa6 <HAL_UART_Transmit>
		LED_NUCLEO(1); //A NUCLEO zöld LED-je világít, ha ügyeségi üzemmódban vagyunk
 80038e6:	2201      	movs	r2, #1
 80038e8:	2120      	movs	r1, #32
 80038ea:	482d      	ldr	r0, [pc, #180]	; (80039a0 <Mode_Selector+0x194>)
 80038ec:	f005 fe08 	bl	8009500 <HAL_GPIO_WritePin>
	else
	{
		sprintf((char*)buffer,"Flash error! Press blue button!\n\r");
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
	}
}
 80038f0:	e04c      	b.n	800398c <Mode_Selector+0x180>
	else if(mode==FAST)
 80038f2:	4b29      	ldr	r3, [pc, #164]	; (8003998 <Mode_Selector+0x18c>)
 80038f4:	781b      	ldrb	r3, [r3, #0]
 80038f6:	2b3f      	cmp	r3, #63	; 0x3f
 80038f8:	d135      	bne.n	8003966 <Mode_Selector+0x15a>
		buffer[0] = CMD_MODE_FAST;
 80038fa:	233f      	movs	r3, #63	; 0x3f
 80038fc:	733b      	strb	r3, [r7, #12]
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 80038fe:	f107 010c 	add.w	r1, r7, #12
 8003902:	230a      	movs	r3, #10
 8003904:	2201      	movs	r2, #1
 8003906:	6838      	ldr	r0, [r7, #0]
 8003908:	f008 fb4d 	bl	800bfa6 <HAL_UART_Transmit>
		HAL_Delay(10);
 800390c:	200a      	movs	r0, #10
 800390e:	f003 ff5d 	bl	80077cc <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 8003912:	f107 010c 	add.w	r1, r7, #12
 8003916:	230a      	movs	r3, #10
 8003918:	2201      	movs	r2, #1
 800391a:	6838      	ldr	r0, [r7, #0]
 800391c:	f008 fb43 	bl	800bfa6 <HAL_UART_Transmit>
		HAL_Delay(10);
 8003920:	200a      	movs	r0, #10
 8003922:	f003 ff53 	bl	80077cc <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 8003926:	f107 010c 	add.w	r1, r7, #12
 800392a:	230a      	movs	r3, #10
 800392c:	2201      	movs	r2, #1
 800392e:	6838      	ldr	r0, [r7, #0]
 8003930:	f008 fb39 	bl	800bfa6 <HAL_UART_Transmit>
		sprintf((char*)buffer,"Fast mode!\n\r");
 8003934:	f107 030c 	add.w	r3, r7, #12
 8003938:	491a      	ldr	r1, [pc, #104]	; (80039a4 <Mode_Selector+0x198>)
 800393a:	4618      	mov	r0, r3
 800393c:	f00a f89c 	bl	800da78 <siprintf>
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
 8003940:	f107 030c 	add.w	r3, r7, #12
 8003944:	4618      	mov	r0, r3
 8003946:	f7fc fc63 	bl	8000210 <strlen>
 800394a:	4603      	mov	r3, r0
 800394c:	b29a      	uxth	r2, r3
 800394e:	f107 010c 	add.w	r1, r7, #12
 8003952:	2364      	movs	r3, #100	; 0x64
 8003954:	6878      	ldr	r0, [r7, #4]
 8003956:	f008 fb26 	bl	800bfa6 <HAL_UART_Transmit>
		LED_NUCLEO(0);
 800395a:	2200      	movs	r2, #0
 800395c:	2120      	movs	r1, #32
 800395e:	4810      	ldr	r0, [pc, #64]	; (80039a0 <Mode_Selector+0x194>)
 8003960:	f005 fdce 	bl	8009500 <HAL_GPIO_WritePin>
}
 8003964:	e012      	b.n	800398c <Mode_Selector+0x180>
		sprintf((char*)buffer,"Flash error! Press blue button!\n\r");
 8003966:	f107 030c 	add.w	r3, r7, #12
 800396a:	490f      	ldr	r1, [pc, #60]	; (80039a8 <Mode_Selector+0x19c>)
 800396c:	4618      	mov	r0, r3
 800396e:	f00a f883 	bl	800da78 <siprintf>
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
 8003972:	f107 030c 	add.w	r3, r7, #12
 8003976:	4618      	mov	r0, r3
 8003978:	f7fc fc4a 	bl	8000210 <strlen>
 800397c:	4603      	mov	r3, r0
 800397e:	b29a      	uxth	r2, r3
 8003980:	f107 010c 	add.w	r1, r7, #12
 8003984:	2364      	movs	r3, #100	; 0x64
 8003986:	6878      	ldr	r0, [r7, #4]
 8003988:	f008 fb0d 	bl	800bfa6 <HAL_UART_Transmit>
}
 800398c:	bf00      	nop
 800398e:	3738      	adds	r7, #56	; 0x38
 8003990:	46bd      	mov	sp, r7
 8003992:	bd80      	pop	{r7, pc}
 8003994:	08060000 	.word	0x08060000
 8003998:	20000336 	.word	0x20000336
 800399c:	080114e0 	.word	0x080114e0
 80039a0:	40020000 	.word	0x40020000
 80039a4:	080114f0 	.word	0x080114f0
 80039a8:	08011500 	.word	0x08011500

080039ac <Wait_For_Start_Sigal>:
	HAL_UART_Transmit(huart_monitoring, data, 11, 4);
}


void Wait_For_Start_Sigal(UART_HandleTypeDef *huart_TB, UART_HandleTypeDef *huart_debugg)
{
 80039ac:	b580      	push	{r7, lr}
 80039ae:	b084      	sub	sp, #16
 80039b0:	af00      	add	r7, sp, #0
 80039b2:	6078      	str	r0, [r7, #4]
 80039b4:	6039      	str	r1, [r7, #0]
	uint8_t rcv[]={0};
 80039b6:	2300      	movs	r3, #0
 80039b8:	723b      	strb	r3, [r7, #8]
	static uint8_t cnt=5;
	if(mode!=SKILL)return;
 80039ba:	4b2f      	ldr	r3, [pc, #188]	; (8003a78 <Wait_For_Start_Sigal+0xcc>)
 80039bc:	781b      	ldrb	r3, [r3, #0]
 80039be:	2b52      	cmp	r3, #82	; 0x52
 80039c0:	d156      	bne.n	8003a70 <Wait_For_Start_Sigal+0xc4>
	while(1)
	{
		//Bluetooth-on érkezika  start jel
		HAL_UART_Receive(huart_TB, rcv, 1, 7000);
 80039c2:	f107 0108 	add.w	r1, r7, #8
 80039c6:	f641 3358 	movw	r3, #7000	; 0x1b58
 80039ca:	2201      	movs	r2, #1
 80039cc:	6878      	ldr	r0, [r7, #4]
 80039ce:	f008 fb7c 	bl	800c0ca <HAL_UART_Receive>
		if(rcv[0]==cnt+0x30)
 80039d2:	7a3b      	ldrb	r3, [r7, #8]
 80039d4:	461a      	mov	r2, r3
 80039d6:	4b29      	ldr	r3, [pc, #164]	; (8003a7c <Wait_For_Start_Sigal+0xd0>)
 80039d8:	781b      	ldrb	r3, [r3, #0]
 80039da:	3330      	adds	r3, #48	; 0x30
 80039dc:	429a      	cmp	r2, r3
 80039de:	d11a      	bne.n	8003a16 <Wait_For_Start_Sigal+0x6a>
		{
			if(cnt<4)
 80039e0:	4b26      	ldr	r3, [pc, #152]	; (8003a7c <Wait_For_Start_Sigal+0xd0>)
 80039e2:	781b      	ldrb	r3, [r3, #0]
 80039e4:	2b03      	cmp	r3, #3
 80039e6:	d80c      	bhi.n	8003a02 <Wait_For_Start_Sigal+0x56>
			{
				HAL_UART_Transmit(huart_debugg, rcv, 1, 2);
 80039e8:	f107 0108 	add.w	r1, r7, #8
 80039ec:	2302      	movs	r3, #2
 80039ee:	2201      	movs	r2, #1
 80039f0:	6838      	ldr	r0, [r7, #0]
 80039f2:	f008 fad8 	bl	800bfa6 <HAL_UART_Transmit>
				HAL_UART_Transmit(huart_debugg, (uint8_t*)"\n\r", 2, 2);
 80039f6:	2302      	movs	r3, #2
 80039f8:	2202      	movs	r2, #2
 80039fa:	4921      	ldr	r1, [pc, #132]	; (8003a80 <Wait_For_Start_Sigal+0xd4>)
 80039fc:	6838      	ldr	r0, [r7, #0]
 80039fe:	f008 fad2 	bl	800bfa6 <HAL_UART_Transmit>
			}
			if(rcv[0]=='0')break;
 8003a02:	7a3b      	ldrb	r3, [r7, #8]
 8003a04:	2b30      	cmp	r3, #48	; 0x30
 8003a06:	d026      	beq.n	8003a56 <Wait_For_Start_Sigal+0xaa>
			cnt--;
 8003a08:	4b1c      	ldr	r3, [pc, #112]	; (8003a7c <Wait_For_Start_Sigal+0xd0>)
 8003a0a:	781b      	ldrb	r3, [r3, #0]
 8003a0c:	3b01      	subs	r3, #1
 8003a0e:	b2da      	uxtb	r2, r3
 8003a10:	4b1a      	ldr	r3, [pc, #104]	; (8003a7c <Wait_For_Start_Sigal+0xd0>)
 8003a12:	701a      	strb	r2, [r3, #0]
 8003a14:	e002      	b.n	8003a1c <Wait_For_Start_Sigal+0x70>
		}
		else cnt=5;
 8003a16:	4b19      	ldr	r3, [pc, #100]	; (8003a7c <Wait_For_Start_Sigal+0xd0>)
 8003a18:	2205      	movs	r2, #5
 8003a1a:	701a      	strb	r2, [r3, #0]

		//Kézi próbaindítás
		if(B2)
 8003a1c:	2120      	movs	r1, #32
 8003a1e:	4819      	ldr	r0, [pc, #100]	; (8003a84 <Wait_For_Start_Sigal+0xd8>)
 8003a20:	f005 fd56 	bl	80094d0 <HAL_GPIO_ReadPin>
 8003a24:	4603      	mov	r3, r0
 8003a26:	2b00      	cmp	r3, #0
 8003a28:	d0cb      	beq.n	80039c2 <Wait_For_Start_Sigal+0x16>
		{
			int i;
			for(i=0;i<10;i++)
 8003a2a:	2300      	movs	r3, #0
 8003a2c:	60fb      	str	r3, [r7, #12]
 8003a2e:	e009      	b.n	8003a44 <Wait_For_Start_Sigal+0x98>
			{
				LED_G_TOGGLE;
 8003a30:	2102      	movs	r1, #2
 8003a32:	4814      	ldr	r0, [pc, #80]	; (8003a84 <Wait_For_Start_Sigal+0xd8>)
 8003a34:	f005 fd7d 	bl	8009532 <HAL_GPIO_TogglePin>
				Delay(200);
 8003a38:	20c8      	movs	r0, #200	; 0xc8
 8003a3a:	f003 f851 	bl	8006ae0 <Delay>
			for(i=0;i<10;i++)
 8003a3e:	68fb      	ldr	r3, [r7, #12]
 8003a40:	3301      	adds	r3, #1
 8003a42:	60fb      	str	r3, [r7, #12]
 8003a44:	68fb      	ldr	r3, [r7, #12]
 8003a46:	2b09      	cmp	r3, #9
 8003a48:	ddf2      	ble.n	8003a30 <Wait_For_Start_Sigal+0x84>
			}
			LED_G(0);
 8003a4a:	2201      	movs	r2, #1
 8003a4c:	2102      	movs	r1, #2
 8003a4e:	480d      	ldr	r0, [pc, #52]	; (8003a84 <Wait_For_Start_Sigal+0xd8>)
 8003a50:	f005 fd56 	bl	8009500 <HAL_GPIO_WritePin>
			break;//ha megnyomtuka 2-es gombot kiugrunk a while ciklusból
 8003a54:	e000      	b.n	8003a58 <Wait_For_Start_Sigal+0xac>
			if(rcv[0]=='0')break;
 8003a56:	bf00      	nop
		}

	}
	HAL_UART_Receive_IT(huart_TB, tb_msg, 6);
 8003a58:	2206      	movs	r2, #6
 8003a5a:	490b      	ldr	r1, [pc, #44]	; (8003a88 <Wait_For_Start_Sigal+0xdc>)
 8003a5c:	6878      	ldr	r0, [r7, #4]
 8003a5e:	f008 fbd6 	bl	800c20e <HAL_UART_Receive_IT>
	HAL_UART_Transmit(huart_debugg, (uint8_t*)"START!\n\r",8, 3);
 8003a62:	2303      	movs	r3, #3
 8003a64:	2208      	movs	r2, #8
 8003a66:	4909      	ldr	r1, [pc, #36]	; (8003a8c <Wait_For_Start_Sigal+0xe0>)
 8003a68:	6838      	ldr	r0, [r7, #0]
 8003a6a:	f008 fa9c 	bl	800bfa6 <HAL_UART_Transmit>
 8003a6e:	e000      	b.n	8003a72 <Wait_For_Start_Sigal+0xc6>
	if(mode!=SKILL)return;
 8003a70:	bf00      	nop
}
 8003a72:	3710      	adds	r7, #16
 8003a74:	46bd      	mov	sp, r7
 8003a76:	bd80      	pop	{r7, pc}
 8003a78:	20000336 	.word	0x20000336
 8003a7c:	2000002e 	.word	0x2000002e
 8003a80:	08011524 	.word	0x08011524
 8003a84:	40020400 	.word	0x40020400
 8003a88:	2000034c 	.word	0x2000034c
 8003a8c:	08011528 	.word	0x08011528

08003a90 <Uart_Receive_Thunderboard_ISR>:
void Uart_Receive_Thunderboard_ISR(UART_HandleTypeDef *huart_TB, UART_HandleTypeDef *huart_debugg)
{
 8003a90:	b580      	push	{r7, lr}
 8003a92:	b082      	sub	sp, #8
 8003a94:	af00      	add	r7, sp, #0
 8003a96:	6078      	str	r0, [r7, #4]
 8003a98:	6039      	str	r1, [r7, #0]
	static uint8_t sp[]={0};//slip protection
	static uint8_t cnt=0;
	if(tb_msg[0]>='A' && tb_msg[0]<='Z' && tb_msg[5]>='0' && tb_msg[5]<='9')
 8003a9a:	4b37      	ldr	r3, [pc, #220]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003a9c:	781b      	ldrb	r3, [r3, #0]
 8003a9e:	2b40      	cmp	r3, #64	; 0x40
 8003aa0:	d93d      	bls.n	8003b1e <Uart_Receive_Thunderboard_ISR+0x8e>
 8003aa2:	4b35      	ldr	r3, [pc, #212]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003aa4:	781b      	ldrb	r3, [r3, #0]
 8003aa6:	2b5a      	cmp	r3, #90	; 0x5a
 8003aa8:	d839      	bhi.n	8003b1e <Uart_Receive_Thunderboard_ISR+0x8e>
 8003aaa:	4b33      	ldr	r3, [pc, #204]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003aac:	795b      	ldrb	r3, [r3, #5]
 8003aae:	2b2f      	cmp	r3, #47	; 0x2f
 8003ab0:	d935      	bls.n	8003b1e <Uart_Receive_Thunderboard_ISR+0x8e>
 8003ab2:	4b31      	ldr	r3, [pc, #196]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003ab4:	795b      	ldrb	r3, [r3, #5]
 8003ab6:	2b39      	cmp	r3, #57	; 0x39
 8003ab8:	d831      	bhi.n	8003b1e <Uart_Receive_Thunderboard_ISR+0x8e>
	{
		piratePos[0]=tb_msg[0];	piratePos[1]=tb_msg[1];	piratePos[2]=tb_msg[2];
 8003aba:	4b2f      	ldr	r3, [pc, #188]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003abc:	781a      	ldrb	r2, [r3, #0]
 8003abe:	4b2f      	ldr	r3, [pc, #188]	; (8003b7c <Uart_Receive_Thunderboard_ISR+0xec>)
 8003ac0:	701a      	strb	r2, [r3, #0]
 8003ac2:	4b2d      	ldr	r3, [pc, #180]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003ac4:	785a      	ldrb	r2, [r3, #1]
 8003ac6:	4b2d      	ldr	r3, [pc, #180]	; (8003b7c <Uart_Receive_Thunderboard_ISR+0xec>)
 8003ac8:	705a      	strb	r2, [r3, #1]
 8003aca:	4b2b      	ldr	r3, [pc, #172]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003acc:	789a      	ldrb	r2, [r3, #2]
 8003ace:	4b2b      	ldr	r3, [pc, #172]	; (8003b7c <Uart_Receive_Thunderboard_ISR+0xec>)
 8003ad0:	709a      	strb	r2, [r3, #2]
		piratePos[3]=100*(tb_msg[3]-0x30) + 10*(tb_msg[4]-0x30) + (tb_msg[5]-0x30);
 8003ad2:	4b29      	ldr	r3, [pc, #164]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003ad4:	78db      	ldrb	r3, [r3, #3]
 8003ad6:	461a      	mov	r2, r3
 8003ad8:	0092      	lsls	r2, r2, #2
 8003ada:	4413      	add	r3, r2
 8003adc:	461a      	mov	r2, r3
 8003ade:	0091      	lsls	r1, r2, #2
 8003ae0:	461a      	mov	r2, r3
 8003ae2:	460b      	mov	r3, r1
 8003ae4:	4413      	add	r3, r2
 8003ae6:	009b      	lsls	r3, r3, #2
 8003ae8:	b2da      	uxtb	r2, r3
 8003aea:	4b23      	ldr	r3, [pc, #140]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003aec:	791b      	ldrb	r3, [r3, #4]
 8003aee:	4619      	mov	r1, r3
 8003af0:	0089      	lsls	r1, r1, #2
 8003af2:	440b      	add	r3, r1
 8003af4:	005b      	lsls	r3, r3, #1
 8003af6:	b2db      	uxtb	r3, r3
 8003af8:	4413      	add	r3, r2
 8003afa:	b2da      	uxtb	r2, r3
 8003afc:	4b1e      	ldr	r3, [pc, #120]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003afe:	795b      	ldrb	r3, [r3, #5]
 8003b00:	4413      	add	r3, r2
 8003b02:	b2db      	uxtb	r3, r3
 8003b04:	3330      	adds	r3, #48	; 0x30
 8003b06:	b2da      	uxtb	r2, r3
 8003b08:	4b1c      	ldr	r3, [pc, #112]	; (8003b7c <Uart_Receive_Thunderboard_ISR+0xec>)
 8003b0a:	70da      	strb	r2, [r3, #3]
		thunderboardFlag=1;
 8003b0c:	4b1c      	ldr	r3, [pc, #112]	; (8003b80 <Uart_Receive_Thunderboard_ISR+0xf0>)
 8003b0e:	2201      	movs	r2, #1
 8003b10:	701a      	strb	r2, [r3, #0]
		HAL_UART_Receive_IT(huart_TB, tb_msg, 6);
 8003b12:	2206      	movs	r2, #6
 8003b14:	4918      	ldr	r1, [pc, #96]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003b16:	6878      	ldr	r0, [r7, #4]
 8003b18:	f008 fb79 	bl	800c20e <HAL_UART_Receive_IT>
#ifdef TB_DEBUGG
		HAL_UART_Transmit(huart_debugg, tb_msg, 6, 2);
		HAL_UART_Transmit(huart_debugg, (uint8_t*)"\n\r", 2, 2);
#endif
		return;
 8003b1c:	e029      	b.n	8003b72 <Uart_Receive_Thunderboard_ISR+0xe2>
	}
	//SLIP PROTECTION
	if(sp[0]>='0' && sp[0]<='9')cnt++;
 8003b1e:	4b19      	ldr	r3, [pc, #100]	; (8003b84 <Uart_Receive_Thunderboard_ISR+0xf4>)
 8003b20:	781b      	ldrb	r3, [r3, #0]
 8003b22:	2b2f      	cmp	r3, #47	; 0x2f
 8003b24:	d90a      	bls.n	8003b3c <Uart_Receive_Thunderboard_ISR+0xac>
 8003b26:	4b17      	ldr	r3, [pc, #92]	; (8003b84 <Uart_Receive_Thunderboard_ISR+0xf4>)
 8003b28:	781b      	ldrb	r3, [r3, #0]
 8003b2a:	2b39      	cmp	r3, #57	; 0x39
 8003b2c:	d806      	bhi.n	8003b3c <Uart_Receive_Thunderboard_ISR+0xac>
 8003b2e:	4b16      	ldr	r3, [pc, #88]	; (8003b88 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003b30:	781b      	ldrb	r3, [r3, #0]
 8003b32:	3301      	adds	r3, #1
 8003b34:	b2da      	uxtb	r2, r3
 8003b36:	4b14      	ldr	r3, [pc, #80]	; (8003b88 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003b38:	701a      	strb	r2, [r3, #0]
 8003b3a:	e002      	b.n	8003b42 <Uart_Receive_Thunderboard_ISR+0xb2>
	else cnt=0;
 8003b3c:	4b12      	ldr	r3, [pc, #72]	; (8003b88 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003b3e:	2200      	movs	r2, #0
 8003b40:	701a      	strb	r2, [r3, #0]

	if(cnt<3) //3 darab ASCI számnak össze kell gyűlnie egymás után
 8003b42:	4b11      	ldr	r3, [pc, #68]	; (8003b88 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003b44:	781b      	ldrb	r3, [r3, #0]
 8003b46:	2b02      	cmp	r3, #2
 8003b48:	d805      	bhi.n	8003b56 <Uart_Receive_Thunderboard_ISR+0xc6>
	{
		HAL_UART_Receive_IT(huart_TB, sp, 1);//amig ez nincs meg addig cask egyesével olvasunk
 8003b4a:	2201      	movs	r2, #1
 8003b4c:	490d      	ldr	r1, [pc, #52]	; (8003b84 <Uart_Receive_Thunderboard_ISR+0xf4>)
 8003b4e:	6878      	ldr	r0, [r7, #4]
 8003b50:	f008 fb5d 	bl	800c20e <HAL_UART_Receive_IT>
 8003b54:	e00d      	b.n	8003b72 <Uart_Receive_Thunderboard_ISR+0xe2>
	}
	else//ha megvan megint 6-ossával olvasunk
	{
		sp[0]=0;
 8003b56:	4b0b      	ldr	r3, [pc, #44]	; (8003b84 <Uart_Receive_Thunderboard_ISR+0xf4>)
 8003b58:	2200      	movs	r2, #0
 8003b5a:	701a      	strb	r2, [r3, #0]
		cnt=0;
 8003b5c:	4b0a      	ldr	r3, [pc, #40]	; (8003b88 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003b5e:	2200      	movs	r2, #0
 8003b60:	701a      	strb	r2, [r3, #0]
		HAL_UART_Receive_IT(huart_TB, tb_msg, 6);
 8003b62:	2206      	movs	r2, #6
 8003b64:	4904      	ldr	r1, [pc, #16]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003b66:	6878      	ldr	r0, [r7, #4]
 8003b68:	f008 fb51 	bl	800c20e <HAL_UART_Receive_IT>
		thunderboardFlag=1;
 8003b6c:	4b04      	ldr	r3, [pc, #16]	; (8003b80 <Uart_Receive_Thunderboard_ISR+0xf0>)
 8003b6e:	2201      	movs	r2, #1
 8003b70:	701a      	strb	r2, [r3, #0]
	}
}
 8003b72:	3708      	adds	r7, #8
 8003b74:	46bd      	mov	sp, r7
 8003b76:	bd80      	pop	{r7, pc}
 8003b78:	2000034c 	.word	0x2000034c
 8003b7c:	20000354 	.word	0x20000354
 8003b80:	2000034a 	.word	0x2000034a
 8003b84:	20000750 	.word	0x20000750
 8003b88:	20000751 	.word	0x20000751

08003b8c <Lane_Change_Init>:


void Lane_Change_Init(void)
{
 8003b8c:	b480      	push	{r7}
 8003b8e:	af00      	add	r7, sp, #0
	N('A').worth = N('B').worth = N('C').worth = N('E').worth = 0;
 8003b90:	4b32      	ldr	r3, [pc, #200]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003b92:	2200      	movs	r2, #0
 8003b94:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 8003b98:	4b30      	ldr	r3, [pc, #192]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003b9a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8003b9e:	4a2f      	ldr	r2, [pc, #188]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003ba0:	6553      	str	r3, [r2, #84]	; 0x54
 8003ba2:	4b2e      	ldr	r3, [pc, #184]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003ba4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003ba6:	4a2d      	ldr	r2, [pc, #180]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003ba8:	62d3      	str	r3, [r2, #44]	; 0x2c
 8003baa:	4b2c      	ldr	r3, [pc, #176]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003bae:	4a2b      	ldr	r2, [pc, #172]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bb0:	6053      	str	r3, [r2, #4]
	N('F').worth = N('D').worth = N('G').worth = 1;
 8003bb2:	4b2a      	ldr	r3, [pc, #168]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bb4:	2201      	movs	r2, #1
 8003bb6:	f8c3 20f4 	str.w	r2, [r3, #244]	; 0xf4
 8003bba:	4b28      	ldr	r3, [pc, #160]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bbc:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8003bc0:	4a26      	ldr	r2, [pc, #152]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bc2:	67d3      	str	r3, [r2, #124]	; 0x7c
 8003bc4:	4b25      	ldr	r3, [pc, #148]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bc6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8003bc8:	4a24      	ldr	r2, [pc, #144]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bca:	f8c2 30cc 	str.w	r3, [r2, #204]	; 0xcc
	N('I').worth = 2;
 8003bce:	4b23      	ldr	r3, [pc, #140]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bd0:	2202      	movs	r2, #2
 8003bd2:	f8c3 2144 	str.w	r2, [r3, #324]	; 0x144
	N('H').worth = N('J').worth = N('K').worth = N('L').worth = N('Q').worth = N('P').worth =  4;
 8003bd6:	4b21      	ldr	r3, [pc, #132]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bd8:	2204      	movs	r2, #4
 8003bda:	f8c3 225c 	str.w	r2, [r3, #604]	; 0x25c
 8003bde:	4b1f      	ldr	r3, [pc, #124]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003be0:	f8d3 325c 	ldr.w	r3, [r3, #604]	; 0x25c
 8003be4:	4a1d      	ldr	r2, [pc, #116]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003be6:	f8c2 3284 	str.w	r3, [r2, #644]	; 0x284
 8003bea:	4b1c      	ldr	r3, [pc, #112]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bec:	f8d3 3284 	ldr.w	r3, [r3, #644]	; 0x284
 8003bf0:	4a1a      	ldr	r2, [pc, #104]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bf2:	f8c2 31bc 	str.w	r3, [r2, #444]	; 0x1bc
 8003bf6:	4b19      	ldr	r3, [pc, #100]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bf8:	f8d3 31bc 	ldr.w	r3, [r3, #444]	; 0x1bc
 8003bfc:	4a17      	ldr	r2, [pc, #92]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bfe:	f8c2 3194 	str.w	r3, [r2, #404]	; 0x194
 8003c02:	4b16      	ldr	r3, [pc, #88]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c04:	f8d3 3194 	ldr.w	r3, [r3, #404]	; 0x194
 8003c08:	4a14      	ldr	r2, [pc, #80]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c0a:	f8c2 316c 	str.w	r3, [r2, #364]	; 0x16c
 8003c0e:	4b13      	ldr	r3, [pc, #76]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c10:	f8d3 316c 	ldr.w	r3, [r3, #364]	; 0x16c
 8003c14:	4a11      	ldr	r2, [pc, #68]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c16:	f8c2 311c 	str.w	r3, [r2, #284]	; 0x11c
	N('N').worth = N('T').worth =8;
 8003c1a:	4b10      	ldr	r3, [pc, #64]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c1c:	2208      	movs	r2, #8
 8003c1e:	f8c3 22fc 	str.w	r2, [r3, #764]	; 0x2fc
 8003c22:	4b0e      	ldr	r3, [pc, #56]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c24:	f8d3 32fc 	ldr.w	r3, [r3, #764]	; 0x2fc
 8003c28:	4a0c      	ldr	r2, [pc, #48]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c2a:	f8c2 320c 	str.w	r3, [r2, #524]	; 0x20c
	N('O').worth = N('M').worth = 9;
 8003c2e:	4b0b      	ldr	r3, [pc, #44]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c30:	2209      	movs	r2, #9
 8003c32:	f8c3 21e4 	str.w	r2, [r3, #484]	; 0x1e4
 8003c36:	4b09      	ldr	r3, [pc, #36]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c38:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8003c3c:	4a07      	ldr	r2, [pc, #28]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c3e:	f8c2 3234 	str.w	r3, [r2, #564]	; 0x234
	N('U').worth = 16;
 8003c42:	4b06      	ldr	r3, [pc, #24]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c44:	2210      	movs	r2, #16
 8003c46:	f8c3 2324 	str.w	r2, [r3, #804]	; 0x324
	N('V').worth = 32;
 8003c4a:	4b04      	ldr	r3, [pc, #16]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c4c:	2220      	movs	r2, #32
 8003c4e:	f8c3 234c 	str.w	r2, [r3, #844]	; 0x34c
}
 8003c52:	bf00      	nop
 8003c54:	46bd      	mov	sp, r7
 8003c56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c5a:	4770      	bx	lr
 8003c5c:	20000360 	.word	0x20000360

08003c60 <Cross_Collision>:

uint8_t Cross_Collision(uint8_t myPos, uint8_t nextPos)
{
 8003c60:	b480      	push	{r7}
 8003c62:	b083      	sub	sp, #12
 8003c64:	af00      	add	r7, sp, #0
 8003c66:	4603      	mov	r3, r0
 8003c68:	460a      	mov	r2, r1
 8003c6a:	71fb      	strb	r3, [r7, #7]
 8003c6c:	4613      	mov	r3, r2
 8003c6e:	71bb      	strb	r3, [r7, #6]
	/********************************NI, KL kereszteződés**********************/
	if((myPos=='N' && nextPos=='I') || (myPos=='I' && nextPos=='N'))
 8003c70:	79fb      	ldrb	r3, [r7, #7]
 8003c72:	2b4e      	cmp	r3, #78	; 0x4e
 8003c74:	d102      	bne.n	8003c7c <Cross_Collision+0x1c>
 8003c76:	79bb      	ldrb	r3, [r7, #6]
 8003c78:	2b49      	cmp	r3, #73	; 0x49
 8003c7a:	d005      	beq.n	8003c88 <Cross_Collision+0x28>
 8003c7c:	79fb      	ldrb	r3, [r7, #7]
 8003c7e:	2b49      	cmp	r3, #73	; 0x49
 8003c80:	d132      	bne.n	8003ce8 <Cross_Collision+0x88>
 8003c82:	79bb      	ldrb	r3, [r7, #6]
 8003c84:	2b4e      	cmp	r3, #78	; 0x4e
 8003c86:	d12f      	bne.n	8003ce8 <Cross_Collision+0x88>
	{
		if((piratePos[0]=='K' && piratePos[1]=='L') || (piratePos[0]=='L' && piratePos[1]=='K')){ if(piratePos[3]<60) return 1;}
 8003c88:	4b83      	ldr	r3, [pc, #524]	; (8003e98 <Cross_Collision+0x238>)
 8003c8a:	781b      	ldrb	r3, [r3, #0]
 8003c8c:	2b4b      	cmp	r3, #75	; 0x4b
 8003c8e:	d103      	bne.n	8003c98 <Cross_Collision+0x38>
 8003c90:	4b81      	ldr	r3, [pc, #516]	; (8003e98 <Cross_Collision+0x238>)
 8003c92:	785b      	ldrb	r3, [r3, #1]
 8003c94:	2b4c      	cmp	r3, #76	; 0x4c
 8003c96:	d007      	beq.n	8003ca8 <Cross_Collision+0x48>
 8003c98:	4b7f      	ldr	r3, [pc, #508]	; (8003e98 <Cross_Collision+0x238>)
 8003c9a:	781b      	ldrb	r3, [r3, #0]
 8003c9c:	2b4c      	cmp	r3, #76	; 0x4c
 8003c9e:	d109      	bne.n	8003cb4 <Cross_Collision+0x54>
 8003ca0:	4b7d      	ldr	r3, [pc, #500]	; (8003e98 <Cross_Collision+0x238>)
 8003ca2:	785b      	ldrb	r3, [r3, #1]
 8003ca4:	2b4b      	cmp	r3, #75	; 0x4b
 8003ca6:	d105      	bne.n	8003cb4 <Cross_Collision+0x54>
 8003ca8:	4b7b      	ldr	r3, [pc, #492]	; (8003e98 <Cross_Collision+0x238>)
 8003caa:	78db      	ldrb	r3, [r3, #3]
 8003cac:	2b3b      	cmp	r3, #59	; 0x3b
 8003cae:	d81a      	bhi.n	8003ce6 <Cross_Collision+0x86>
 8003cb0:	2301      	movs	r3, #1
 8003cb2:	e12c      	b.n	8003f0e <Cross_Collision+0x2ae>
		else if((piratePos[1]=='K' && piratePos[2]=='L') || (piratePos[1]=='L' && piratePos[2]=='K')){ if(piratePos[3]>50) return 1;}
 8003cb4:	4b78      	ldr	r3, [pc, #480]	; (8003e98 <Cross_Collision+0x238>)
 8003cb6:	785b      	ldrb	r3, [r3, #1]
 8003cb8:	2b4b      	cmp	r3, #75	; 0x4b
 8003cba:	d103      	bne.n	8003cc4 <Cross_Collision+0x64>
 8003cbc:	4b76      	ldr	r3, [pc, #472]	; (8003e98 <Cross_Collision+0x238>)
 8003cbe:	789b      	ldrb	r3, [r3, #2]
 8003cc0:	2b4c      	cmp	r3, #76	; 0x4c
 8003cc2:	d009      	beq.n	8003cd8 <Cross_Collision+0x78>
 8003cc4:	4b74      	ldr	r3, [pc, #464]	; (8003e98 <Cross_Collision+0x238>)
 8003cc6:	785b      	ldrb	r3, [r3, #1]
 8003cc8:	2b4c      	cmp	r3, #76	; 0x4c
 8003cca:	f040 8116 	bne.w	8003efa <Cross_Collision+0x29a>
 8003cce:	4b72      	ldr	r3, [pc, #456]	; (8003e98 <Cross_Collision+0x238>)
 8003cd0:	789b      	ldrb	r3, [r3, #2]
 8003cd2:	2b4b      	cmp	r3, #75	; 0x4b
 8003cd4:	f040 8111 	bne.w	8003efa <Cross_Collision+0x29a>
 8003cd8:	4b6f      	ldr	r3, [pc, #444]	; (8003e98 <Cross_Collision+0x238>)
 8003cda:	78db      	ldrb	r3, [r3, #3]
 8003cdc:	2b32      	cmp	r3, #50	; 0x32
 8003cde:	f240 810c 	bls.w	8003efa <Cross_Collision+0x29a>
 8003ce2:	2301      	movs	r3, #1
 8003ce4:	e113      	b.n	8003f0e <Cross_Collision+0x2ae>
		if((piratePos[0]=='K' && piratePos[1]=='L') || (piratePos[0]=='L' && piratePos[1]=='K')){ if(piratePos[3]<60) return 1;}
 8003ce6:	e108      	b.n	8003efa <Cross_Collision+0x29a>
	}
	else if((myPos=='K' && nextPos=='L') || (myPos=='L' && nextPos=='K'))
 8003ce8:	79fb      	ldrb	r3, [r7, #7]
 8003cea:	2b4b      	cmp	r3, #75	; 0x4b
 8003cec:	d102      	bne.n	8003cf4 <Cross_Collision+0x94>
 8003cee:	79bb      	ldrb	r3, [r7, #6]
 8003cf0:	2b4c      	cmp	r3, #76	; 0x4c
 8003cf2:	d005      	beq.n	8003d00 <Cross_Collision+0xa0>
 8003cf4:	79fb      	ldrb	r3, [r7, #7]
 8003cf6:	2b4c      	cmp	r3, #76	; 0x4c
 8003cf8:	d132      	bne.n	8003d60 <Cross_Collision+0x100>
 8003cfa:	79bb      	ldrb	r3, [r7, #6]
 8003cfc:	2b4b      	cmp	r3, #75	; 0x4b
 8003cfe:	d12f      	bne.n	8003d60 <Cross_Collision+0x100>
	{
		if((piratePos[0]=='N' && piratePos[1]=='I') || (piratePos[0]=='I' && piratePos[1]=='N')){ if(piratePos[3]<60) return 1;}
 8003d00:	4b65      	ldr	r3, [pc, #404]	; (8003e98 <Cross_Collision+0x238>)
 8003d02:	781b      	ldrb	r3, [r3, #0]
 8003d04:	2b4e      	cmp	r3, #78	; 0x4e
 8003d06:	d103      	bne.n	8003d10 <Cross_Collision+0xb0>
 8003d08:	4b63      	ldr	r3, [pc, #396]	; (8003e98 <Cross_Collision+0x238>)
 8003d0a:	785b      	ldrb	r3, [r3, #1]
 8003d0c:	2b49      	cmp	r3, #73	; 0x49
 8003d0e:	d007      	beq.n	8003d20 <Cross_Collision+0xc0>
 8003d10:	4b61      	ldr	r3, [pc, #388]	; (8003e98 <Cross_Collision+0x238>)
 8003d12:	781b      	ldrb	r3, [r3, #0]
 8003d14:	2b49      	cmp	r3, #73	; 0x49
 8003d16:	d109      	bne.n	8003d2c <Cross_Collision+0xcc>
 8003d18:	4b5f      	ldr	r3, [pc, #380]	; (8003e98 <Cross_Collision+0x238>)
 8003d1a:	785b      	ldrb	r3, [r3, #1]
 8003d1c:	2b4e      	cmp	r3, #78	; 0x4e
 8003d1e:	d105      	bne.n	8003d2c <Cross_Collision+0xcc>
 8003d20:	4b5d      	ldr	r3, [pc, #372]	; (8003e98 <Cross_Collision+0x238>)
 8003d22:	78db      	ldrb	r3, [r3, #3]
 8003d24:	2b3b      	cmp	r3, #59	; 0x3b
 8003d26:	d81a      	bhi.n	8003d5e <Cross_Collision+0xfe>
 8003d28:	2301      	movs	r3, #1
 8003d2a:	e0f0      	b.n	8003f0e <Cross_Collision+0x2ae>
		else if((piratePos[1]=='N' && piratePos[2]=='I') || (piratePos[1]=='I' && piratePos[2]=='N')){ if(piratePos[3]>50) return 1;}
 8003d2c:	4b5a      	ldr	r3, [pc, #360]	; (8003e98 <Cross_Collision+0x238>)
 8003d2e:	785b      	ldrb	r3, [r3, #1]
 8003d30:	2b4e      	cmp	r3, #78	; 0x4e
 8003d32:	d103      	bne.n	8003d3c <Cross_Collision+0xdc>
 8003d34:	4b58      	ldr	r3, [pc, #352]	; (8003e98 <Cross_Collision+0x238>)
 8003d36:	789b      	ldrb	r3, [r3, #2]
 8003d38:	2b49      	cmp	r3, #73	; 0x49
 8003d3a:	d009      	beq.n	8003d50 <Cross_Collision+0xf0>
 8003d3c:	4b56      	ldr	r3, [pc, #344]	; (8003e98 <Cross_Collision+0x238>)
 8003d3e:	785b      	ldrb	r3, [r3, #1]
 8003d40:	2b49      	cmp	r3, #73	; 0x49
 8003d42:	f040 80dc 	bne.w	8003efe <Cross_Collision+0x29e>
 8003d46:	4b54      	ldr	r3, [pc, #336]	; (8003e98 <Cross_Collision+0x238>)
 8003d48:	789b      	ldrb	r3, [r3, #2]
 8003d4a:	2b4e      	cmp	r3, #78	; 0x4e
 8003d4c:	f040 80d7 	bne.w	8003efe <Cross_Collision+0x29e>
 8003d50:	4b51      	ldr	r3, [pc, #324]	; (8003e98 <Cross_Collision+0x238>)
 8003d52:	78db      	ldrb	r3, [r3, #3]
 8003d54:	2b32      	cmp	r3, #50	; 0x32
 8003d56:	f240 80d2 	bls.w	8003efe <Cross_Collision+0x29e>
 8003d5a:	2301      	movs	r3, #1
 8003d5c:	e0d7      	b.n	8003f0e <Cross_Collision+0x2ae>
		if((piratePos[0]=='N' && piratePos[1]=='I') || (piratePos[0]=='I' && piratePos[1]=='N')){ if(piratePos[3]<60) return 1;}
 8003d5e:	e0ce      	b.n	8003efe <Cross_Collision+0x29e>
	}
	/**************************************************************************/


	/********************************ID, FG kereszteződés**********************/
	else if((myPos=='I' && nextPos=='D') || (myPos=='D' && nextPos=='I'))
 8003d60:	79fb      	ldrb	r3, [r7, #7]
 8003d62:	2b49      	cmp	r3, #73	; 0x49
 8003d64:	d102      	bne.n	8003d6c <Cross_Collision+0x10c>
 8003d66:	79bb      	ldrb	r3, [r7, #6]
 8003d68:	2b44      	cmp	r3, #68	; 0x44
 8003d6a:	d005      	beq.n	8003d78 <Cross_Collision+0x118>
 8003d6c:	79fb      	ldrb	r3, [r7, #7]
 8003d6e:	2b44      	cmp	r3, #68	; 0x44
 8003d70:	d132      	bne.n	8003dd8 <Cross_Collision+0x178>
 8003d72:	79bb      	ldrb	r3, [r7, #6]
 8003d74:	2b49      	cmp	r3, #73	; 0x49
 8003d76:	d12f      	bne.n	8003dd8 <Cross_Collision+0x178>
	{
		if((piratePos[0]=='F' && piratePos[1]=='G') || (piratePos[0]=='G' && piratePos[1]=='F')){ if(piratePos[3]<60) return 1;}
 8003d78:	4b47      	ldr	r3, [pc, #284]	; (8003e98 <Cross_Collision+0x238>)
 8003d7a:	781b      	ldrb	r3, [r3, #0]
 8003d7c:	2b46      	cmp	r3, #70	; 0x46
 8003d7e:	d103      	bne.n	8003d88 <Cross_Collision+0x128>
 8003d80:	4b45      	ldr	r3, [pc, #276]	; (8003e98 <Cross_Collision+0x238>)
 8003d82:	785b      	ldrb	r3, [r3, #1]
 8003d84:	2b47      	cmp	r3, #71	; 0x47
 8003d86:	d007      	beq.n	8003d98 <Cross_Collision+0x138>
 8003d88:	4b43      	ldr	r3, [pc, #268]	; (8003e98 <Cross_Collision+0x238>)
 8003d8a:	781b      	ldrb	r3, [r3, #0]
 8003d8c:	2b47      	cmp	r3, #71	; 0x47
 8003d8e:	d109      	bne.n	8003da4 <Cross_Collision+0x144>
 8003d90:	4b41      	ldr	r3, [pc, #260]	; (8003e98 <Cross_Collision+0x238>)
 8003d92:	785b      	ldrb	r3, [r3, #1]
 8003d94:	2b46      	cmp	r3, #70	; 0x46
 8003d96:	d105      	bne.n	8003da4 <Cross_Collision+0x144>
 8003d98:	4b3f      	ldr	r3, [pc, #252]	; (8003e98 <Cross_Collision+0x238>)
 8003d9a:	78db      	ldrb	r3, [r3, #3]
 8003d9c:	2b3b      	cmp	r3, #59	; 0x3b
 8003d9e:	d81a      	bhi.n	8003dd6 <Cross_Collision+0x176>
 8003da0:	2301      	movs	r3, #1
 8003da2:	e0b4      	b.n	8003f0e <Cross_Collision+0x2ae>
		else if((piratePos[1]=='F' && piratePos[2]=='G') || (piratePos[1]=='G' && piratePos[2]=='F')){ if(piratePos[3]>50) return 1;}
 8003da4:	4b3c      	ldr	r3, [pc, #240]	; (8003e98 <Cross_Collision+0x238>)
 8003da6:	785b      	ldrb	r3, [r3, #1]
 8003da8:	2b46      	cmp	r3, #70	; 0x46
 8003daa:	d103      	bne.n	8003db4 <Cross_Collision+0x154>
 8003dac:	4b3a      	ldr	r3, [pc, #232]	; (8003e98 <Cross_Collision+0x238>)
 8003dae:	789b      	ldrb	r3, [r3, #2]
 8003db0:	2b47      	cmp	r3, #71	; 0x47
 8003db2:	d009      	beq.n	8003dc8 <Cross_Collision+0x168>
 8003db4:	4b38      	ldr	r3, [pc, #224]	; (8003e98 <Cross_Collision+0x238>)
 8003db6:	785b      	ldrb	r3, [r3, #1]
 8003db8:	2b47      	cmp	r3, #71	; 0x47
 8003dba:	f040 80a2 	bne.w	8003f02 <Cross_Collision+0x2a2>
 8003dbe:	4b36      	ldr	r3, [pc, #216]	; (8003e98 <Cross_Collision+0x238>)
 8003dc0:	789b      	ldrb	r3, [r3, #2]
 8003dc2:	2b46      	cmp	r3, #70	; 0x46
 8003dc4:	f040 809d 	bne.w	8003f02 <Cross_Collision+0x2a2>
 8003dc8:	4b33      	ldr	r3, [pc, #204]	; (8003e98 <Cross_Collision+0x238>)
 8003dca:	78db      	ldrb	r3, [r3, #3]
 8003dcc:	2b32      	cmp	r3, #50	; 0x32
 8003dce:	f240 8098 	bls.w	8003f02 <Cross_Collision+0x2a2>
 8003dd2:	2301      	movs	r3, #1
 8003dd4:	e09b      	b.n	8003f0e <Cross_Collision+0x2ae>
		if((piratePos[0]=='F' && piratePos[1]=='G') || (piratePos[0]=='G' && piratePos[1]=='F')){ if(piratePos[3]<60) return 1;}
 8003dd6:	e094      	b.n	8003f02 <Cross_Collision+0x2a2>
	}
	else if((myPos=='F' && nextPos=='G') || (myPos=='G' && nextPos=='F'))
 8003dd8:	79fb      	ldrb	r3, [r7, #7]
 8003dda:	2b46      	cmp	r3, #70	; 0x46
 8003ddc:	d102      	bne.n	8003de4 <Cross_Collision+0x184>
 8003dde:	79bb      	ldrb	r3, [r7, #6]
 8003de0:	2b47      	cmp	r3, #71	; 0x47
 8003de2:	d005      	beq.n	8003df0 <Cross_Collision+0x190>
 8003de4:	79fb      	ldrb	r3, [r7, #7]
 8003de6:	2b47      	cmp	r3, #71	; 0x47
 8003de8:	d12f      	bne.n	8003e4a <Cross_Collision+0x1ea>
 8003dea:	79bb      	ldrb	r3, [r7, #6]
 8003dec:	2b46      	cmp	r3, #70	; 0x46
 8003dee:	d12c      	bne.n	8003e4a <Cross_Collision+0x1ea>
	{
		if((piratePos[0]=='I' && piratePos[1]=='D') || (piratePos[0]=='D' && piratePos[1]=='I')){ if(piratePos[3]<60) return 1;}
 8003df0:	4b29      	ldr	r3, [pc, #164]	; (8003e98 <Cross_Collision+0x238>)
 8003df2:	781b      	ldrb	r3, [r3, #0]
 8003df4:	2b49      	cmp	r3, #73	; 0x49
 8003df6:	d103      	bne.n	8003e00 <Cross_Collision+0x1a0>
 8003df8:	4b27      	ldr	r3, [pc, #156]	; (8003e98 <Cross_Collision+0x238>)
 8003dfa:	785b      	ldrb	r3, [r3, #1]
 8003dfc:	2b44      	cmp	r3, #68	; 0x44
 8003dfe:	d007      	beq.n	8003e10 <Cross_Collision+0x1b0>
 8003e00:	4b25      	ldr	r3, [pc, #148]	; (8003e98 <Cross_Collision+0x238>)
 8003e02:	781b      	ldrb	r3, [r3, #0]
 8003e04:	2b44      	cmp	r3, #68	; 0x44
 8003e06:	d109      	bne.n	8003e1c <Cross_Collision+0x1bc>
 8003e08:	4b23      	ldr	r3, [pc, #140]	; (8003e98 <Cross_Collision+0x238>)
 8003e0a:	785b      	ldrb	r3, [r3, #1]
 8003e0c:	2b49      	cmp	r3, #73	; 0x49
 8003e0e:	d105      	bne.n	8003e1c <Cross_Collision+0x1bc>
 8003e10:	4b21      	ldr	r3, [pc, #132]	; (8003e98 <Cross_Collision+0x238>)
 8003e12:	78db      	ldrb	r3, [r3, #3]
 8003e14:	2b3b      	cmp	r3, #59	; 0x3b
 8003e16:	d817      	bhi.n	8003e48 <Cross_Collision+0x1e8>
 8003e18:	2301      	movs	r3, #1
 8003e1a:	e078      	b.n	8003f0e <Cross_Collision+0x2ae>
		else if((piratePos[1]=='I' && piratePos[2]=='D') || (piratePos[1]=='D' && piratePos[2]=='I')){ if(piratePos[3]>50) return 1;}
 8003e1c:	4b1e      	ldr	r3, [pc, #120]	; (8003e98 <Cross_Collision+0x238>)
 8003e1e:	785b      	ldrb	r3, [r3, #1]
 8003e20:	2b49      	cmp	r3, #73	; 0x49
 8003e22:	d103      	bne.n	8003e2c <Cross_Collision+0x1cc>
 8003e24:	4b1c      	ldr	r3, [pc, #112]	; (8003e98 <Cross_Collision+0x238>)
 8003e26:	789b      	ldrb	r3, [r3, #2]
 8003e28:	2b44      	cmp	r3, #68	; 0x44
 8003e2a:	d007      	beq.n	8003e3c <Cross_Collision+0x1dc>
 8003e2c:	4b1a      	ldr	r3, [pc, #104]	; (8003e98 <Cross_Collision+0x238>)
 8003e2e:	785b      	ldrb	r3, [r3, #1]
 8003e30:	2b44      	cmp	r3, #68	; 0x44
 8003e32:	d168      	bne.n	8003f06 <Cross_Collision+0x2a6>
 8003e34:	4b18      	ldr	r3, [pc, #96]	; (8003e98 <Cross_Collision+0x238>)
 8003e36:	789b      	ldrb	r3, [r3, #2]
 8003e38:	2b49      	cmp	r3, #73	; 0x49
 8003e3a:	d164      	bne.n	8003f06 <Cross_Collision+0x2a6>
 8003e3c:	4b16      	ldr	r3, [pc, #88]	; (8003e98 <Cross_Collision+0x238>)
 8003e3e:	78db      	ldrb	r3, [r3, #3]
 8003e40:	2b32      	cmp	r3, #50	; 0x32
 8003e42:	d960      	bls.n	8003f06 <Cross_Collision+0x2a6>
 8003e44:	2301      	movs	r3, #1
 8003e46:	e062      	b.n	8003f0e <Cross_Collision+0x2ae>
		if((piratePos[0]=='I' && piratePos[1]=='D') || (piratePos[0]=='D' && piratePos[1]=='I')){ if(piratePos[3]<60) return 1;}
 8003e48:	e05d      	b.n	8003f06 <Cross_Collision+0x2a6>
	}
	/**************************************************************************/


	/********************************TN, PQ kereszteződés**********************/
	else if((myPos=='P' && nextPos=='Q') || (myPos=='Q' && nextPos=='P'))
 8003e4a:	79fb      	ldrb	r3, [r7, #7]
 8003e4c:	2b50      	cmp	r3, #80	; 0x50
 8003e4e:	d102      	bne.n	8003e56 <Cross_Collision+0x1f6>
 8003e50:	79bb      	ldrb	r3, [r7, #6]
 8003e52:	2b51      	cmp	r3, #81	; 0x51
 8003e54:	d005      	beq.n	8003e62 <Cross_Collision+0x202>
 8003e56:	79fb      	ldrb	r3, [r7, #7]
 8003e58:	2b51      	cmp	r3, #81	; 0x51
 8003e5a:	d11f      	bne.n	8003e9c <Cross_Collision+0x23c>
 8003e5c:	79bb      	ldrb	r3, [r7, #6]
 8003e5e:	2b50      	cmp	r3, #80	; 0x50
 8003e60:	d11c      	bne.n	8003e9c <Cross_Collision+0x23c>
	{
		if(piratePos[0]=='T'){ if(piratePos[3]<50) return 1; }
 8003e62:	4b0d      	ldr	r3, [pc, #52]	; (8003e98 <Cross_Collision+0x238>)
 8003e64:	781b      	ldrb	r3, [r3, #0]
 8003e66:	2b54      	cmp	r3, #84	; 0x54
 8003e68:	d105      	bne.n	8003e76 <Cross_Collision+0x216>
 8003e6a:	4b0b      	ldr	r3, [pc, #44]	; (8003e98 <Cross_Collision+0x238>)
 8003e6c:	78db      	ldrb	r3, [r3, #3]
 8003e6e:	2b31      	cmp	r3, #49	; 0x31
 8003e70:	d84b      	bhi.n	8003f0a <Cross_Collision+0x2aa>
 8003e72:	2301      	movs	r3, #1
 8003e74:	e04b      	b.n	8003f0e <Cross_Collision+0x2ae>
		else if(piratePos[1]=='T') return 1;
 8003e76:	4b08      	ldr	r3, [pc, #32]	; (8003e98 <Cross_Collision+0x238>)
 8003e78:	785b      	ldrb	r3, [r3, #1]
 8003e7a:	2b54      	cmp	r3, #84	; 0x54
 8003e7c:	d101      	bne.n	8003e82 <Cross_Collision+0x222>
 8003e7e:	2301      	movs	r3, #1
 8003e80:	e045      	b.n	8003f0e <Cross_Collision+0x2ae>
		else if(piratePos[2]=='T'){ if(piratePos[3]>60) return 1; };
 8003e82:	4b05      	ldr	r3, [pc, #20]	; (8003e98 <Cross_Collision+0x238>)
 8003e84:	789b      	ldrb	r3, [r3, #2]
 8003e86:	2b54      	cmp	r3, #84	; 0x54
 8003e88:	d13f      	bne.n	8003f0a <Cross_Collision+0x2aa>
 8003e8a:	4b03      	ldr	r3, [pc, #12]	; (8003e98 <Cross_Collision+0x238>)
 8003e8c:	78db      	ldrb	r3, [r3, #3]
 8003e8e:	2b3c      	cmp	r3, #60	; 0x3c
 8003e90:	d93b      	bls.n	8003f0a <Cross_Collision+0x2aa>
 8003e92:	2301      	movs	r3, #1
 8003e94:	e03b      	b.n	8003f0e <Cross_Collision+0x2ae>
 8003e96:	bf00      	nop
 8003e98:	20000354 	.word	0x20000354
	}
	else if(nextPos=='T')
 8003e9c:	79bb      	ldrb	r3, [r7, #6]
 8003e9e:	2b54      	cmp	r3, #84	; 0x54
 8003ea0:	d134      	bne.n	8003f0c <Cross_Collision+0x2ac>
	{
		if((piratePos[0]=='P' && piratePos[1]=='Q') || (piratePos[0]=='Q' && piratePos[1]=='P')){if(piratePos[3]<70)return 1;}
 8003ea2:	4b1e      	ldr	r3, [pc, #120]	; (8003f1c <Cross_Collision+0x2bc>)
 8003ea4:	781b      	ldrb	r3, [r3, #0]
 8003ea6:	2b50      	cmp	r3, #80	; 0x50
 8003ea8:	d103      	bne.n	8003eb2 <Cross_Collision+0x252>
 8003eaa:	4b1c      	ldr	r3, [pc, #112]	; (8003f1c <Cross_Collision+0x2bc>)
 8003eac:	785b      	ldrb	r3, [r3, #1]
 8003eae:	2b51      	cmp	r3, #81	; 0x51
 8003eb0:	d007      	beq.n	8003ec2 <Cross_Collision+0x262>
 8003eb2:	4b1a      	ldr	r3, [pc, #104]	; (8003f1c <Cross_Collision+0x2bc>)
 8003eb4:	781b      	ldrb	r3, [r3, #0]
 8003eb6:	2b51      	cmp	r3, #81	; 0x51
 8003eb8:	d109      	bne.n	8003ece <Cross_Collision+0x26e>
 8003eba:	4b18      	ldr	r3, [pc, #96]	; (8003f1c <Cross_Collision+0x2bc>)
 8003ebc:	785b      	ldrb	r3, [r3, #1]
 8003ebe:	2b50      	cmp	r3, #80	; 0x50
 8003ec0:	d105      	bne.n	8003ece <Cross_Collision+0x26e>
 8003ec2:	4b16      	ldr	r3, [pc, #88]	; (8003f1c <Cross_Collision+0x2bc>)
 8003ec4:	78db      	ldrb	r3, [r3, #3]
 8003ec6:	2b45      	cmp	r3, #69	; 0x45
 8003ec8:	d820      	bhi.n	8003f0c <Cross_Collision+0x2ac>
 8003eca:	2301      	movs	r3, #1
 8003ecc:	e01f      	b.n	8003f0e <Cross_Collision+0x2ae>
		else if((piratePos[1]=='P' && piratePos[2]=='Q') || (piratePos[1]=='Q' && piratePos[2]=='P')){if(piratePos[3]>50)return 1;}
 8003ece:	4b13      	ldr	r3, [pc, #76]	; (8003f1c <Cross_Collision+0x2bc>)
 8003ed0:	785b      	ldrb	r3, [r3, #1]
 8003ed2:	2b50      	cmp	r3, #80	; 0x50
 8003ed4:	d103      	bne.n	8003ede <Cross_Collision+0x27e>
 8003ed6:	4b11      	ldr	r3, [pc, #68]	; (8003f1c <Cross_Collision+0x2bc>)
 8003ed8:	789b      	ldrb	r3, [r3, #2]
 8003eda:	2b51      	cmp	r3, #81	; 0x51
 8003edc:	d007      	beq.n	8003eee <Cross_Collision+0x28e>
 8003ede:	4b0f      	ldr	r3, [pc, #60]	; (8003f1c <Cross_Collision+0x2bc>)
 8003ee0:	785b      	ldrb	r3, [r3, #1]
 8003ee2:	2b51      	cmp	r3, #81	; 0x51
 8003ee4:	d112      	bne.n	8003f0c <Cross_Collision+0x2ac>
 8003ee6:	4b0d      	ldr	r3, [pc, #52]	; (8003f1c <Cross_Collision+0x2bc>)
 8003ee8:	789b      	ldrb	r3, [r3, #2]
 8003eea:	2b50      	cmp	r3, #80	; 0x50
 8003eec:	d10e      	bne.n	8003f0c <Cross_Collision+0x2ac>
 8003eee:	4b0b      	ldr	r3, [pc, #44]	; (8003f1c <Cross_Collision+0x2bc>)
 8003ef0:	78db      	ldrb	r3, [r3, #3]
 8003ef2:	2b32      	cmp	r3, #50	; 0x32
 8003ef4:	d90a      	bls.n	8003f0c <Cross_Collision+0x2ac>
 8003ef6:	2301      	movs	r3, #1
 8003ef8:	e009      	b.n	8003f0e <Cross_Collision+0x2ae>
		if((piratePos[0]=='K' && piratePos[1]=='L') || (piratePos[0]=='L' && piratePos[1]=='K')){ if(piratePos[3]<60) return 1;}
 8003efa:	bf00      	nop
 8003efc:	e006      	b.n	8003f0c <Cross_Collision+0x2ac>
		if((piratePos[0]=='N' && piratePos[1]=='I') || (piratePos[0]=='I' && piratePos[1]=='N')){ if(piratePos[3]<60) return 1;}
 8003efe:	bf00      	nop
 8003f00:	e004      	b.n	8003f0c <Cross_Collision+0x2ac>
		if((piratePos[0]=='F' && piratePos[1]=='G') || (piratePos[0]=='G' && piratePos[1]=='F')){ if(piratePos[3]<60) return 1;}
 8003f02:	bf00      	nop
 8003f04:	e002      	b.n	8003f0c <Cross_Collision+0x2ac>
		if((piratePos[0]=='I' && piratePos[1]=='D') || (piratePos[0]=='D' && piratePos[1]=='I')){ if(piratePos[3]<60) return 1;}
 8003f06:	bf00      	nop
 8003f08:	e000      	b.n	8003f0c <Cross_Collision+0x2ac>
		if(piratePos[0]=='T'){ if(piratePos[3]<50) return 1; }
 8003f0a:	bf00      	nop
	}
	/**************************************************************************/
	return 0;
 8003f0c:	2300      	movs	r3, #0
}
 8003f0e:	4618      	mov	r0, r3
 8003f10:	370c      	adds	r7, #12
 8003f12:	46bd      	mov	sp, r7
 8003f14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f18:	4770      	bx	lr
 8003f1a:	bf00      	nop
 8003f1c:	20000354 	.word	0x20000354

08003f20 <Battery_Voltage_Compensate>:
float v=0;
//ha 1000 akkor a motor full csutkán megy előre
//ha -1000 akkor a motor full csutkán megy hátra

void Battery_Voltage_Compensate(ADC_HandleTypeDef *hadc_UNiMh,ADC_HandleTypeDef *hadc_ULiPo,UART_HandleTypeDef *huart_debugg)
{
 8003f20:	b580      	push	{r7, lr}
 8003f22:	b090      	sub	sp, #64	; 0x40
 8003f24:	af00      	add	r7, sp, #0
 8003f26:	60f8      	str	r0, [r7, #12]
 8003f28:	60b9      	str	r1, [r7, #8]
 8003f2a:	607a      	str	r2, [r7, #4]
	char msg[30];
	uint32_t raw=0;
 8003f2c:	2300      	movs	r3, #0
 8003f2e:	63fb      	str	r3, [r7, #60]	; 0x3c
	float bat;
	int i;

	//NiMh akku mérése
	for(i=0;i<20;i++)
 8003f30:	2300      	movs	r3, #0
 8003f32:	63bb      	str	r3, [r7, #56]	; 0x38
 8003f34:	e016      	b.n	8003f64 <Battery_Voltage_Compensate+0x44>
	{
		HAL_ADC_Start(hadc_UNiMh);
 8003f36:	68f8      	ldr	r0, [r7, #12]
 8003f38:	f003 fcb0 	bl	800789c <HAL_ADC_Start>
		HAL_Delay(10);
 8003f3c:	200a      	movs	r0, #10
 8003f3e:	f003 fc45 	bl	80077cc <HAL_Delay>
		HAL_ADC_PollForConversion(hadc_UNiMh,20);
 8003f42:	2114      	movs	r1, #20
 8003f44:	68f8      	ldr	r0, [r7, #12]
 8003f46:	f003 fd7b 	bl	8007a40 <HAL_ADC_PollForConversion>
		HAL_Delay(10);
 8003f4a:	200a      	movs	r0, #10
 8003f4c:	f003 fc3e 	bl	80077cc <HAL_Delay>
		raw += HAL_ADC_GetValue(hadc_UNiMh);
 8003f50:	68f8      	ldr	r0, [r7, #12]
 8003f52:	f003 fe00 	bl	8007b56 <HAL_ADC_GetValue>
 8003f56:	4602      	mov	r2, r0
 8003f58:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003f5a:	4413      	add	r3, r2
 8003f5c:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(i=0;i<20;i++)
 8003f5e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003f60:	3301      	adds	r3, #1
 8003f62:	63bb      	str	r3, [r7, #56]	; 0x38
 8003f64:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003f66:	2b13      	cmp	r3, #19
 8003f68:	dde5      	ble.n	8003f36 <Battery_Voltage_Compensate+0x16>
	}
	bat=(float)raw * 0.00460575 / 20.0;//ez a mi feszültségünk V-ban
 8003f6a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003f6c:	ee07 3a90 	vmov	s15, r3
 8003f70:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003f74:	ee17 0a90 	vmov	r0, s15
 8003f78:	f7fc fb06 	bl	8000588 <__aeabi_f2d>
 8003f7c:	a37b      	add	r3, pc, #492	; (adr r3, 800416c <Battery_Voltage_Compensate+0x24c>)
 8003f7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003f82:	f7fc fb59 	bl	8000638 <__aeabi_dmul>
 8003f86:	4602      	mov	r2, r0
 8003f88:	460b      	mov	r3, r1
 8003f8a:	4610      	mov	r0, r2
 8003f8c:	4619      	mov	r1, r3
 8003f8e:	f04f 0200 	mov.w	r2, #0
 8003f92:	4b71      	ldr	r3, [pc, #452]	; (8004158 <Battery_Voltage_Compensate+0x238>)
 8003f94:	f7fc fc7a 	bl	800088c <__aeabi_ddiv>
 8003f98:	4602      	mov	r2, r0
 8003f9a:	460b      	mov	r3, r1
 8003f9c:	4610      	mov	r0, r2
 8003f9e:	4619      	mov	r1, r3
 8003fa0:	f7fc fe22 	bl	8000be8 <__aeabi_d2f>
 8003fa4:	4603      	mov	r3, r0
 8003fa6:	637b      	str	r3, [r7, #52]	; 0x34
	sprintf(msg,"NiMh charge: %2.2f V \r\n", bat);
 8003fa8:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8003faa:	f7fc faed 	bl	8000588 <__aeabi_f2d>
 8003fae:	4602      	mov	r2, r0
 8003fb0:	460b      	mov	r3, r1
 8003fb2:	f107 0014 	add.w	r0, r7, #20
 8003fb6:	4969      	ldr	r1, [pc, #420]	; (800415c <Battery_Voltage_Compensate+0x23c>)
 8003fb8:	f009 fd5e 	bl	800da78 <siprintf>
	HAL_UART_Transmit(huart_debugg, (uint8_t*) msg, strlen(msg),10);
 8003fbc:	f107 0314 	add.w	r3, r7, #20
 8003fc0:	4618      	mov	r0, r3
 8003fc2:	f7fc f925 	bl	8000210 <strlen>
 8003fc6:	4603      	mov	r3, r0
 8003fc8:	b29a      	uxth	r2, r3
 8003fca:	f107 0114 	add.w	r1, r7, #20
 8003fce:	230a      	movs	r3, #10
 8003fd0:	6878      	ldr	r0, [r7, #4]
 8003fd2:	f007 ffe8 	bl	800bfa6 <HAL_UART_Transmit>

	if(bat)compensation=7.75/bat;
 8003fd6:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8003fda:	eef5 7a40 	vcmp.f32	s15, #0.0
 8003fde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003fe2:	d009      	beq.n	8003ff8 <Battery_Voltage_Compensate+0xd8>
 8003fe4:	eef1 6a0f 	vmov.f32	s13, #31	; 0x40f80000  7.750
 8003fe8:	ed97 7a0d 	vldr	s14, [r7, #52]	; 0x34
 8003fec:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003ff0:	4b5b      	ldr	r3, [pc, #364]	; (8004160 <Battery_Voltage_Compensate+0x240>)
 8003ff2:	edc3 7a00 	vstr	s15, [r3]
 8003ff6:	e003      	b.n	8004000 <Battery_Voltage_Compensate+0xe0>
	else compensation=1;
 8003ff8:	4b59      	ldr	r3, [pc, #356]	; (8004160 <Battery_Voltage_Compensate+0x240>)
 8003ffa:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8003ffe:	601a      	str	r2, [r3, #0]

	if(bat < 7.2)
 8004000:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8004002:	f7fc fac1 	bl	8000588 <__aeabi_f2d>
 8004006:	a34e      	add	r3, pc, #312	; (adr r3, 8004140 <Battery_Voltage_Compensate+0x220>)
 8004008:	e9d3 2300 	ldrd	r2, r3, [r3]
 800400c:	f7fc fd86 	bl	8000b1c <__aeabi_dcmplt>
 8004010:	4603      	mov	r3, r0
 8004012:	2b00      	cmp	r3, #0
 8004014:	d010      	beq.n	8004038 <Battery_Voltage_Compensate+0x118>
	{
		for(i=0;i<10;i++)
 8004016:	2300      	movs	r3, #0
 8004018:	63bb      	str	r3, [r7, #56]	; 0x38
 800401a:	e00a      	b.n	8004032 <Battery_Voltage_Compensate+0x112>
		{
			LED_Y_TOGGLE;
 800401c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004020:	4850      	ldr	r0, [pc, #320]	; (8004164 <Battery_Voltage_Compensate+0x244>)
 8004022:	f005 fa86 	bl	8009532 <HAL_GPIO_TogglePin>
			HAL_Delay(200);
 8004026:	20c8      	movs	r0, #200	; 0xc8
 8004028:	f003 fbd0 	bl	80077cc <HAL_Delay>
		for(i=0;i<10;i++)
 800402c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800402e:	3301      	adds	r3, #1
 8004030:	63bb      	str	r3, [r7, #56]	; 0x38
 8004032:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004034:	2b09      	cmp	r3, #9
 8004036:	ddf1      	ble.n	800401c <Battery_Voltage_Compensate+0xfc>
		}
	}

	//LiPo akku mérése
	raw=0;
 8004038:	2300      	movs	r3, #0
 800403a:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(i=0;i<20;i++)
 800403c:	2300      	movs	r3, #0
 800403e:	63bb      	str	r3, [r7, #56]	; 0x38
 8004040:	e016      	b.n	8004070 <Battery_Voltage_Compensate+0x150>
	{
		HAL_ADC_Start(hadc_ULiPo);
 8004042:	68b8      	ldr	r0, [r7, #8]
 8004044:	f003 fc2a 	bl	800789c <HAL_ADC_Start>
		HAL_Delay(10);
 8004048:	200a      	movs	r0, #10
 800404a:	f003 fbbf 	bl	80077cc <HAL_Delay>
		HAL_ADC_PollForConversion(hadc_ULiPo,20);
 800404e:	2114      	movs	r1, #20
 8004050:	68b8      	ldr	r0, [r7, #8]
 8004052:	f003 fcf5 	bl	8007a40 <HAL_ADC_PollForConversion>
		HAL_Delay(10);
 8004056:	200a      	movs	r0, #10
 8004058:	f003 fbb8 	bl	80077cc <HAL_Delay>
		raw += HAL_ADC_GetValue(hadc_ULiPo);
 800405c:	68b8      	ldr	r0, [r7, #8]
 800405e:	f003 fd7a 	bl	8007b56 <HAL_ADC_GetValue>
 8004062:	4602      	mov	r2, r0
 8004064:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8004066:	4413      	add	r3, r2
 8004068:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(i=0;i<20;i++)
 800406a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800406c:	3301      	adds	r3, #1
 800406e:	63bb      	str	r3, [r7, #56]	; 0x38
 8004070:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004072:	2b13      	cmp	r3, #19
 8004074:	dde5      	ble.n	8004042 <Battery_Voltage_Compensate+0x122>

	}
	bat = (float)raw * 0.003241242 / 20.0 + 0.02;//ez a mi feszültségünk V-ban
 8004076:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8004078:	ee07 3a90 	vmov	s15, r3
 800407c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004080:	ee17 0a90 	vmov	r0, s15
 8004084:	f7fc fa80 	bl	8000588 <__aeabi_f2d>
 8004088:	a32f      	add	r3, pc, #188	; (adr r3, 8004148 <Battery_Voltage_Compensate+0x228>)
 800408a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800408e:	f7fc fad3 	bl	8000638 <__aeabi_dmul>
 8004092:	4602      	mov	r2, r0
 8004094:	460b      	mov	r3, r1
 8004096:	4610      	mov	r0, r2
 8004098:	4619      	mov	r1, r3
 800409a:	f04f 0200 	mov.w	r2, #0
 800409e:	4b2e      	ldr	r3, [pc, #184]	; (8004158 <Battery_Voltage_Compensate+0x238>)
 80040a0:	f7fc fbf4 	bl	800088c <__aeabi_ddiv>
 80040a4:	4602      	mov	r2, r0
 80040a6:	460b      	mov	r3, r1
 80040a8:	4610      	mov	r0, r2
 80040aa:	4619      	mov	r1, r3
 80040ac:	a328      	add	r3, pc, #160	; (adr r3, 8004150 <Battery_Voltage_Compensate+0x230>)
 80040ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80040b2:	f7fc f90b 	bl	80002cc <__adddf3>
 80040b6:	4602      	mov	r2, r0
 80040b8:	460b      	mov	r3, r1
 80040ba:	4610      	mov	r0, r2
 80040bc:	4619      	mov	r1, r3
 80040be:	f7fc fd93 	bl	8000be8 <__aeabi_d2f>
 80040c2:	4603      	mov	r3, r0
 80040c4:	637b      	str	r3, [r7, #52]	; 0x34
	sprintf(msg,"LiPo charge: %2.2f V \r\n", bat);
 80040c6:	6b78      	ldr	r0, [r7, #52]	; 0x34
 80040c8:	f7fc fa5e 	bl	8000588 <__aeabi_f2d>
 80040cc:	4602      	mov	r2, r0
 80040ce:	460b      	mov	r3, r1
 80040d0:	f107 0014 	add.w	r0, r7, #20
 80040d4:	4924      	ldr	r1, [pc, #144]	; (8004168 <Battery_Voltage_Compensate+0x248>)
 80040d6:	f009 fccf 	bl	800da78 <siprintf>
	HAL_UART_Transmit(huart_debugg, (uint8_t*)msg, strlen(msg),10);
 80040da:	f107 0314 	add.w	r3, r7, #20
 80040de:	4618      	mov	r0, r3
 80040e0:	f7fc f896 	bl	8000210 <strlen>
 80040e4:	4603      	mov	r3, r0
 80040e6:	b29a      	uxth	r2, r3
 80040e8:	f107 0114 	add.w	r1, r7, #20
 80040ec:	230a      	movs	r3, #10
 80040ee:	6878      	ldr	r0, [r7, #4]
 80040f0:	f007 ff59 	bl	800bfa6 <HAL_UART_Transmit>

	/**/
	if(bat < 10)
 80040f4:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 80040f8:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80040fc:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004100:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004104:	d510      	bpl.n	8004128 <Battery_Voltage_Compensate+0x208>
	{
		for(i=0;i<20;i++)
 8004106:	2300      	movs	r3, #0
 8004108:	63bb      	str	r3, [r7, #56]	; 0x38
 800410a:	e00a      	b.n	8004122 <Battery_Voltage_Compensate+0x202>
		{
			LED_Y_TOGGLE;
 800410c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004110:	4814      	ldr	r0, [pc, #80]	; (8004164 <Battery_Voltage_Compensate+0x244>)
 8004112:	f005 fa0e 	bl	8009532 <HAL_GPIO_TogglePin>
			HAL_Delay(200);
 8004116:	20c8      	movs	r0, #200	; 0xc8
 8004118:	f003 fb58 	bl	80077cc <HAL_Delay>
		for(i=0;i<20;i++)
 800411c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800411e:	3301      	adds	r3, #1
 8004120:	63bb      	str	r3, [r7, #56]	; 0x38
 8004122:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004124:	2b13      	cmp	r3, #19
 8004126:	ddf1      	ble.n	800410c <Battery_Voltage_Compensate+0x1ec>
		}
	}

	LED_Y(0);
 8004128:	2201      	movs	r2, #1
 800412a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800412e:	480d      	ldr	r0, [pc, #52]	; (8004164 <Battery_Voltage_Compensate+0x244>)
 8004130:	f005 f9e6 	bl	8009500 <HAL_GPIO_WritePin>

}
 8004134:	bf00      	nop
 8004136:	3740      	adds	r7, #64	; 0x40
 8004138:	46bd      	mov	sp, r7
 800413a:	bd80      	pop	{r7, pc}
 800413c:	f3af 8000 	nop.w
 8004140:	cccccccd 	.word	0xcccccccd
 8004144:	401ccccc 	.word	0x401ccccc
 8004148:	8c6df334 	.word	0x8c6df334
 800414c:	3f6a8d60 	.word	0x3f6a8d60
 8004150:	47ae147b 	.word	0x47ae147b
 8004154:	3f947ae1 	.word	0x3f947ae1
 8004158:	40340000 	.word	0x40340000
 800415c:	08011534 	.word	0x08011534
 8004160:	20000030 	.word	0x20000030
 8004164:	40020400 	.word	0x40020400
 8004168:	0801154c 	.word	0x0801154c
 800416c:	99fa11a9 	.word	0x99fa11a9
 8004170:	3f72dd7a 	.word	0x3f72dd7a
 8004174:	00000000 	.word	0x00000000

08004178 <Measure_Velocity_Task>:

void Measure_Velocity_Task(TIM_HandleTypeDef *htim_encoder,uint32_t tick, uint32_t period)
{
 8004178:	b5b0      	push	{r4, r5, r7, lr}
 800417a:	b086      	sub	sp, #24
 800417c:	af00      	add	r7, sp, #0
 800417e:	60f8      	str	r0, [r7, #12]
 8004180:	60b9      	str	r1, [r7, #8]
 8004182:	607a      	str	r2, [r7, #4]
	static uint32_t tick_prev=0;
	static uint32_t measure_v_task_tick=4;
	static float alpha=0.4;
	static float invalpha=0.6;
	float v_uj=0;
 8004184:	f04f 0300 	mov.w	r3, #0
 8004188:	617b      	str	r3, [r7, #20]

	if(measure_v_task_tick>tick) return;
 800418a:	4b31      	ldr	r3, [pc, #196]	; (8004250 <Measure_Velocity_Task+0xd8>)
 800418c:	681b      	ldr	r3, [r3, #0]
 800418e:	68ba      	ldr	r2, [r7, #8]
 8004190:	429a      	cmp	r2, r3
 8004192:	d354      	bcc.n	800423e <Measure_Velocity_Task+0xc6>
	measure_v_task_tick= tick + period;
 8004194:	68ba      	ldr	r2, [r7, #8]
 8004196:	687b      	ldr	r3, [r7, #4]
 8004198:	4413      	add	r3, r2
 800419a:	4a2d      	ldr	r2, [pc, #180]	; (8004250 <Measure_Velocity_Task+0xd8>)
 800419c:	6013      	str	r3, [r2, #0]
	if(!tick_prev)
 800419e:	4b2d      	ldr	r3, [pc, #180]	; (8004254 <Measure_Velocity_Task+0xdc>)
 80041a0:	681b      	ldr	r3, [r3, #0]
 80041a2:	2b00      	cmp	r3, #0
 80041a4:	d103      	bne.n	80041ae <Measure_Velocity_Task+0x36>
	{
		tick_prev=tick;
 80041a6:	4a2b      	ldr	r2, [pc, #172]	; (8004254 <Measure_Velocity_Task+0xdc>)
 80041a8:	68bb      	ldr	r3, [r7, #8]
 80041aa:	6013      	str	r3, [r2, #0]
		return;
 80041ac:	e048      	b.n	8004240 <Measure_Velocity_Task+0xc8>
	}
	v_uj =((float) 0x8000 - (float) __HAL_TIM_GET_COUNTER(htim_encoder))*7.49/(float)period; //mm/s dimenzió
 80041ae:	68fb      	ldr	r3, [r7, #12]
 80041b0:	681b      	ldr	r3, [r3, #0]
 80041b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80041b4:	ee07 3a90 	vmov	s15, r3
 80041b8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80041bc:	ed9f 7a26 	vldr	s14, [pc, #152]	; 8004258 <Measure_Velocity_Task+0xe0>
 80041c0:	ee77 7a67 	vsub.f32	s15, s14, s15
 80041c4:	ee17 0a90 	vmov	r0, s15
 80041c8:	f7fc f9de 	bl	8000588 <__aeabi_f2d>
 80041cc:	a31e      	add	r3, pc, #120	; (adr r3, 8004248 <Measure_Velocity_Task+0xd0>)
 80041ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80041d2:	f7fc fa31 	bl	8000638 <__aeabi_dmul>
 80041d6:	4602      	mov	r2, r0
 80041d8:	460b      	mov	r3, r1
 80041da:	4614      	mov	r4, r2
 80041dc:	461d      	mov	r5, r3
 80041de:	687b      	ldr	r3, [r7, #4]
 80041e0:	ee07 3a90 	vmov	s15, r3
 80041e4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80041e8:	ee17 0a90 	vmov	r0, s15
 80041ec:	f7fc f9cc 	bl	8000588 <__aeabi_f2d>
 80041f0:	4602      	mov	r2, r0
 80041f2:	460b      	mov	r3, r1
 80041f4:	4620      	mov	r0, r4
 80041f6:	4629      	mov	r1, r5
 80041f8:	f7fc fb48 	bl	800088c <__aeabi_ddiv>
 80041fc:	4602      	mov	r2, r0
 80041fe:	460b      	mov	r3, r1
 8004200:	4610      	mov	r0, r2
 8004202:	4619      	mov	r1, r3
 8004204:	f7fc fcf0 	bl	8000be8 <__aeabi_d2f>
 8004208:	4603      	mov	r3, r0
 800420a:	617b      	str	r3, [r7, #20]
	TIM8->CNT=0x8000;
 800420c:	4b13      	ldr	r3, [pc, #76]	; (800425c <Measure_Velocity_Task+0xe4>)
 800420e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8004212:	625a      	str	r2, [r3, #36]	; 0x24
	//tick_prev=tick;
	//exponenciális szűrés
	v = alpha*(float)v_uj + invalpha*v;
 8004214:	4b12      	ldr	r3, [pc, #72]	; (8004260 <Measure_Velocity_Task+0xe8>)
 8004216:	ed93 7a00 	vldr	s14, [r3]
 800421a:	edd7 7a05 	vldr	s15, [r7, #20]
 800421e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8004222:	4b10      	ldr	r3, [pc, #64]	; (8004264 <Measure_Velocity_Task+0xec>)
 8004224:	edd3 6a00 	vldr	s13, [r3]
 8004228:	4b0f      	ldr	r3, [pc, #60]	; (8004268 <Measure_Velocity_Task+0xf0>)
 800422a:	edd3 7a00 	vldr	s15, [r3]
 800422e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8004232:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004236:	4b0c      	ldr	r3, [pc, #48]	; (8004268 <Measure_Velocity_Task+0xf0>)
 8004238:	edc3 7a00 	vstr	s15, [r3]
 800423c:	e000      	b.n	8004240 <Measure_Velocity_Task+0xc8>
	if(measure_v_task_tick>tick) return;
 800423e:	bf00      	nop
}
 8004240:	3718      	adds	r7, #24
 8004242:	46bd      	mov	sp, r7
 8004244:	bdb0      	pop	{r4, r5, r7, pc}
 8004246:	bf00      	nop
 8004248:	8f5c28f6 	.word	0x8f5c28f6
 800424c:	401df5c2 	.word	0x401df5c2
 8004250:	20000034 	.word	0x20000034
 8004254:	20000758 	.word	0x20000758
 8004258:	47000000 	.word	0x47000000
 800425c:	40010400 	.word	0x40010400
 8004260:	20000038 	.word	0x20000038
 8004264:	2000003c 	.word	0x2000003c
 8004268:	20000754 	.word	0x20000754
 800426c:	00000000 	.word	0x00000000

08004270 <Motor_Drive_Task>:

void Motor_Drive_Task(TIM_HandleTypeDef *htim_motor, UART_HandleTypeDef *huart, uint32_t tick, uint32_t period) //DUTY paramtert kiszedtem -> változtassuk a globális változót
{
 8004270:	b5b0      	push	{r4, r5, r7, lr}
 8004272:	b086      	sub	sp, #24
 8004274:	af00      	add	r7, sp, #0
 8004276:	60f8      	str	r0, [r7, #12]
 8004278:	60b9      	str	r1, [r7, #8]
 800427a:	607a      	str	r2, [r7, #4]
 800427c:	603b      	str	r3, [r7, #0]
	static uint32_t motor_drive_task_tick=5;
	static float v_prev,f,u=0;

	int32_t ccr1;
	int32_t ccr2;
	if(motor_drive_task_tick>tick) return;
 800427e:	4bb2      	ldr	r3, [pc, #712]	; (8004548 <Motor_Drive_Task+0x2d8>)
 8004280:	681b      	ldr	r3, [r3, #0]
 8004282:	687a      	ldr	r2, [r7, #4]
 8004284:	429a      	cmp	r2, r3
 8004286:	f0c0 81da 	bcc.w	800463e <Motor_Drive_Task+0x3ce>
	motor_drive_task_tick= tick + period;
 800428a:	687a      	ldr	r2, [r7, #4]
 800428c:	683b      	ldr	r3, [r7, #0]
 800428e:	4413      	add	r3, r2
 8004290:	4aad      	ldr	r2, [pc, #692]	; (8004548 <Motor_Drive_Task+0x2d8>)
 8004292:	6013      	str	r3, [r2, #0]

	if(motorEnRemote && motorEnLineOk) //ha nem nyomtunk vészstopot és az akkuk is rendben vannak akkor pöröghet a motor
 8004294:	4bad      	ldr	r3, [pc, #692]	; (800454c <Motor_Drive_Task+0x2dc>)
 8004296:	781b      	ldrb	r3, [r3, #0]
 8004298:	2b00      	cmp	r3, #0
 800429a:	f000 817b 	beq.w	8004594 <Motor_Drive_Task+0x324>
 800429e:	4bac      	ldr	r3, [pc, #688]	; (8004550 <Motor_Drive_Task+0x2e0>)
 80042a0:	781b      	ldrb	r3, [r3, #0]
 80042a2:	2b00      	cmp	r3, #0
 80042a4:	f000 8176 	beq.w	8004594 <Motor_Drive_Task+0x324>
	{
		//az u paraméter a bevatkozó jel minusz holtásávot adja meg
		u= KC * (v_ref - v) * compensation + f;
 80042a8:	4baa      	ldr	r3, [pc, #680]	; (8004554 <Motor_Drive_Task+0x2e4>)
 80042aa:	ed93 7a00 	vldr	s14, [r3]
 80042ae:	4baa      	ldr	r3, [pc, #680]	; (8004558 <Motor_Drive_Task+0x2e8>)
 80042b0:	edd3 7a00 	vldr	s15, [r3]
 80042b4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80042b8:	ee17 0a90 	vmov	r0, s15
 80042bc:	f7fc f964 	bl	8000588 <__aeabi_f2d>
 80042c0:	a39b      	add	r3, pc, #620	; (adr r3, 8004530 <Motor_Drive_Task+0x2c0>)
 80042c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80042c6:	f7fc f9b7 	bl	8000638 <__aeabi_dmul>
 80042ca:	4602      	mov	r2, r0
 80042cc:	460b      	mov	r3, r1
 80042ce:	4614      	mov	r4, r2
 80042d0:	461d      	mov	r5, r3
 80042d2:	4ba2      	ldr	r3, [pc, #648]	; (800455c <Motor_Drive_Task+0x2ec>)
 80042d4:	681b      	ldr	r3, [r3, #0]
 80042d6:	4618      	mov	r0, r3
 80042d8:	f7fc f956 	bl	8000588 <__aeabi_f2d>
 80042dc:	4602      	mov	r2, r0
 80042de:	460b      	mov	r3, r1
 80042e0:	4620      	mov	r0, r4
 80042e2:	4629      	mov	r1, r5
 80042e4:	f7fc f9a8 	bl	8000638 <__aeabi_dmul>
 80042e8:	4602      	mov	r2, r0
 80042ea:	460b      	mov	r3, r1
 80042ec:	4614      	mov	r4, r2
 80042ee:	461d      	mov	r5, r3
 80042f0:	4b9b      	ldr	r3, [pc, #620]	; (8004560 <Motor_Drive_Task+0x2f0>)
 80042f2:	681b      	ldr	r3, [r3, #0]
 80042f4:	4618      	mov	r0, r3
 80042f6:	f7fc f947 	bl	8000588 <__aeabi_f2d>
 80042fa:	4602      	mov	r2, r0
 80042fc:	460b      	mov	r3, r1
 80042fe:	4620      	mov	r0, r4
 8004300:	4629      	mov	r1, r5
 8004302:	f7fb ffe3 	bl	80002cc <__adddf3>
 8004306:	4602      	mov	r2, r0
 8004308:	460b      	mov	r3, r1
 800430a:	4610      	mov	r0, r2
 800430c:	4619      	mov	r1, r3
 800430e:	f7fc fc6b 	bl	8000be8 <__aeabi_d2f>
 8004312:	4603      	mov	r3, r0
 8004314:	4a93      	ldr	r2, [pc, #588]	; (8004564 <Motor_Drive_Task+0x2f4>)
 8004316:	6013      	str	r3, [r2, #0]
		if(u>880) u=880;
 8004318:	4b92      	ldr	r3, [pc, #584]	; (8004564 <Motor_Drive_Task+0x2f4>)
 800431a:	edd3 7a00 	vldr	s15, [r3]
 800431e:	ed9f 7a92 	vldr	s14, [pc, #584]	; 8004568 <Motor_Drive_Task+0x2f8>
 8004322:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004326:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800432a:	dd03      	ble.n	8004334 <Motor_Drive_Task+0xc4>
 800432c:	4b8d      	ldr	r3, [pc, #564]	; (8004564 <Motor_Drive_Task+0x2f4>)
 800432e:	4a8f      	ldr	r2, [pc, #572]	; (800456c <Motor_Drive_Task+0x2fc>)
 8004330:	601a      	str	r2, [r3, #0]
 8004332:	e00c      	b.n	800434e <Motor_Drive_Task+0xde>
		else if(u<-500)u=-500;
 8004334:	4b8b      	ldr	r3, [pc, #556]	; (8004564 <Motor_Drive_Task+0x2f4>)
 8004336:	edd3 7a00 	vldr	s15, [r3]
 800433a:	ed9f 7a8d 	vldr	s14, [pc, #564]	; 8004570 <Motor_Drive_Task+0x300>
 800433e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004342:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004346:	d502      	bpl.n	800434e <Motor_Drive_Task+0xde>
 8004348:	4b86      	ldr	r3, [pc, #536]	; (8004564 <Motor_Drive_Task+0x2f4>)
 800434a:	4a8a      	ldr	r2, [pc, #552]	; (8004574 <Motor_Drive_Task+0x304>)
 800434c:	601a      	str	r2, [r3, #0]
		f = ZD*f + (1-ZD)*u;
 800434e:	4b84      	ldr	r3, [pc, #528]	; (8004560 <Motor_Drive_Task+0x2f0>)
 8004350:	681b      	ldr	r3, [r3, #0]
 8004352:	4618      	mov	r0, r3
 8004354:	f7fc f918 	bl	8000588 <__aeabi_f2d>
 8004358:	a377      	add	r3, pc, #476	; (adr r3, 8004538 <Motor_Drive_Task+0x2c8>)
 800435a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800435e:	f7fc f96b 	bl	8000638 <__aeabi_dmul>
 8004362:	4602      	mov	r2, r0
 8004364:	460b      	mov	r3, r1
 8004366:	4614      	mov	r4, r2
 8004368:	461d      	mov	r5, r3
 800436a:	4b7e      	ldr	r3, [pc, #504]	; (8004564 <Motor_Drive_Task+0x2f4>)
 800436c:	681b      	ldr	r3, [r3, #0]
 800436e:	4618      	mov	r0, r3
 8004370:	f7fc f90a 	bl	8000588 <__aeabi_f2d>
 8004374:	a372      	add	r3, pc, #456	; (adr r3, 8004540 <Motor_Drive_Task+0x2d0>)
 8004376:	e9d3 2300 	ldrd	r2, r3, [r3]
 800437a:	f7fc f95d 	bl	8000638 <__aeabi_dmul>
 800437e:	4602      	mov	r2, r0
 8004380:	460b      	mov	r3, r1
 8004382:	4620      	mov	r0, r4
 8004384:	4629      	mov	r1, r5
 8004386:	f7fb ffa1 	bl	80002cc <__adddf3>
 800438a:	4602      	mov	r2, r0
 800438c:	460b      	mov	r3, r1
 800438e:	4610      	mov	r0, r2
 8004390:	4619      	mov	r1, r3
 8004392:	f7fc fc29 	bl	8000be8 <__aeabi_d2f>
 8004396:	4603      	mov	r3, r0
 8004398:	4a71      	ldr	r2, [pc, #452]	; (8004560 <Motor_Drive_Task+0x2f0>)
 800439a:	6013      	str	r3, [r2, #0]
		//ez alapján a kiadandó kitöltési tényező
		if(u>0) motorDuty=(int)u+70;
 800439c:	4b71      	ldr	r3, [pc, #452]	; (8004564 <Motor_Drive_Task+0x2f4>)
 800439e:	edd3 7a00 	vldr	s15, [r3]
 80043a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80043a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80043aa:	dd0a      	ble.n	80043c2 <Motor_Drive_Task+0x152>
 80043ac:	4b6d      	ldr	r3, [pc, #436]	; (8004564 <Motor_Drive_Task+0x2f4>)
 80043ae:	edd3 7a00 	vldr	s15, [r3]
 80043b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043b6:	ee17 3a90 	vmov	r3, s15
 80043ba:	3346      	adds	r3, #70	; 0x46
 80043bc:	4a6e      	ldr	r2, [pc, #440]	; (8004578 <Motor_Drive_Task+0x308>)
 80043be:	6013      	str	r3, [r2, #0]
 80043c0:	e01b      	b.n	80043fa <Motor_Drive_Task+0x18a>
		else if(u<0) motorDuty=(int)u-70;
 80043c2:	4b68      	ldr	r3, [pc, #416]	; (8004564 <Motor_Drive_Task+0x2f4>)
 80043c4:	edd3 7a00 	vldr	s15, [r3]
 80043c8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80043cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80043d0:	d50a      	bpl.n	80043e8 <Motor_Drive_Task+0x178>
 80043d2:	4b64      	ldr	r3, [pc, #400]	; (8004564 <Motor_Drive_Task+0x2f4>)
 80043d4:	edd3 7a00 	vldr	s15, [r3]
 80043d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043dc:	ee17 3a90 	vmov	r3, s15
 80043e0:	3b46      	subs	r3, #70	; 0x46
 80043e2:	4a65      	ldr	r2, [pc, #404]	; (8004578 <Motor_Drive_Task+0x308>)
 80043e4:	6013      	str	r3, [r2, #0]
 80043e6:	e008      	b.n	80043fa <Motor_Drive_Task+0x18a>
		else motorDuty=(int)u;
 80043e8:	4b5e      	ldr	r3, [pc, #376]	; (8004564 <Motor_Drive_Task+0x2f4>)
 80043ea:	edd3 7a00 	vldr	s15, [r3]
 80043ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043f2:	ee17 2a90 	vmov	r2, s15
 80043f6:	4b60      	ldr	r3, [pc, #384]	; (8004578 <Motor_Drive_Task+0x308>)
 80043f8:	601a      	str	r2, [r3, #0]
		if(mode==SKILL)
 80043fa:	4b60      	ldr	r3, [pc, #384]	; (800457c <Motor_Drive_Task+0x30c>)
 80043fc:	781b      	ldrb	r3, [r3, #0]
 80043fe:	2b52      	cmp	r3, #82	; 0x52
 8004400:	d148      	bne.n	8004494 <Motor_Drive_Task+0x224>
		{
			if(fabs(v_ref)<200 && v*v_prev<=0)stop=1;
 8004402:	4b54      	ldr	r3, [pc, #336]	; (8004554 <Motor_Drive_Task+0x2e4>)
 8004404:	edd3 7a00 	vldr	s15, [r3]
 8004408:	eef0 7ae7 	vabs.f32	s15, s15
 800440c:	ed9f 7a5c 	vldr	s14, [pc, #368]	; 8004580 <Motor_Drive_Task+0x310>
 8004410:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004414:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004418:	d50f      	bpl.n	800443a <Motor_Drive_Task+0x1ca>
 800441a:	4b4f      	ldr	r3, [pc, #316]	; (8004558 <Motor_Drive_Task+0x2e8>)
 800441c:	ed93 7a00 	vldr	s14, [r3]
 8004420:	4b58      	ldr	r3, [pc, #352]	; (8004584 <Motor_Drive_Task+0x314>)
 8004422:	edd3 7a00 	vldr	s15, [r3]
 8004426:	ee67 7a27 	vmul.f32	s15, s14, s15
 800442a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800442e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004432:	d802      	bhi.n	800443a <Motor_Drive_Task+0x1ca>
 8004434:	4b54      	ldr	r3, [pc, #336]	; (8004588 <Motor_Drive_Task+0x318>)
 8004436:	2201      	movs	r2, #1
 8004438:	701a      	strb	r2, [r3, #0]
			if(stop)
 800443a:	4b53      	ldr	r3, [pc, #332]	; (8004588 <Motor_Drive_Task+0x318>)
 800443c:	781b      	ldrb	r3, [r3, #0]
 800443e:	2b00      	cmp	r3, #0
 8004440:	d022      	beq.n	8004488 <Motor_Drive_Task+0x218>
			{
				if(fabs(v_ref)>200)
 8004442:	4b44      	ldr	r3, [pc, #272]	; (8004554 <Motor_Drive_Task+0x2e4>)
 8004444:	edd3 7a00 	vldr	s15, [r3]
 8004448:	eef0 7ae7 	vabs.f32	s15, s15
 800444c:	ed9f 7a4c 	vldr	s14, [pc, #304]	; 8004580 <Motor_Drive_Task+0x310>
 8004450:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004454:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004458:	dd08      	ble.n	800446c <Motor_Drive_Task+0x1fc>
				{
					stop=0;
 800445a:	4b4b      	ldr	r3, [pc, #300]	; (8004588 <Motor_Drive_Task+0x318>)
 800445c:	2200      	movs	r2, #0
 800445e:	701a      	strb	r2, [r3, #0]
					MOTOR_EN(1);
 8004460:	2201      	movs	r2, #1
 8004462:	2140      	movs	r1, #64	; 0x40
 8004464:	4849      	ldr	r0, [pc, #292]	; (800458c <Motor_Drive_Task+0x31c>)
 8004466:	f005 f84b 	bl	8009500 <HAL_GPIO_WritePin>
		if(mode==SKILL)
 800446a:	e0a1      	b.n	80045b0 <Motor_Drive_Task+0x340>
				}
				else
				{
					f=u=0;
 800446c:	4b3d      	ldr	r3, [pc, #244]	; (8004564 <Motor_Drive_Task+0x2f4>)
 800446e:	f04f 0200 	mov.w	r2, #0
 8004472:	601a      	str	r2, [r3, #0]
 8004474:	4b3b      	ldr	r3, [pc, #236]	; (8004564 <Motor_Drive_Task+0x2f4>)
 8004476:	681b      	ldr	r3, [r3, #0]
 8004478:	4a39      	ldr	r2, [pc, #228]	; (8004560 <Motor_Drive_Task+0x2f0>)
 800447a:	6013      	str	r3, [r2, #0]
					MOTOR_EN(0); //amugy stop
 800447c:	2200      	movs	r2, #0
 800447e:	2140      	movs	r1, #64	; 0x40
 8004480:	4842      	ldr	r0, [pc, #264]	; (800458c <Motor_Drive_Task+0x31c>)
 8004482:	f005 f83d 	bl	8009500 <HAL_GPIO_WritePin>
		if(mode==SKILL)
 8004486:	e093      	b.n	80045b0 <Motor_Drive_Task+0x340>
				}
			}
			else MOTOR_EN(1);
 8004488:	2201      	movs	r2, #1
 800448a:	2140      	movs	r1, #64	; 0x40
 800448c:	483f      	ldr	r0, [pc, #252]	; (800458c <Motor_Drive_Task+0x31c>)
 800448e:	f005 f837 	bl	8009500 <HAL_GPIO_WritePin>
		if(mode==SKILL)
 8004492:	e08d      	b.n	80045b0 <Motor_Drive_Task+0x340>
		}
		else if(mode==FAST)
 8004494:	4b39      	ldr	r3, [pc, #228]	; (800457c <Motor_Drive_Task+0x30c>)
 8004496:	781b      	ldrb	r3, [r3, #0]
 8004498:	2b3f      	cmp	r3, #63	; 0x3f
 800449a:	f040 8089 	bne.w	80045b0 <Motor_Drive_Task+0x340>
		{
			if(fabs(v_ref)<100 && v*v_prev<=0)stop=1;
 800449e:	4b2d      	ldr	r3, [pc, #180]	; (8004554 <Motor_Drive_Task+0x2e4>)
 80044a0:	edd3 7a00 	vldr	s15, [r3]
 80044a4:	eef0 7ae7 	vabs.f32	s15, s15
 80044a8:	ed9f 7a39 	vldr	s14, [pc, #228]	; 8004590 <Motor_Drive_Task+0x320>
 80044ac:	eef4 7ac7 	vcmpe.f32	s15, s14
 80044b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80044b4:	d50f      	bpl.n	80044d6 <Motor_Drive_Task+0x266>
 80044b6:	4b28      	ldr	r3, [pc, #160]	; (8004558 <Motor_Drive_Task+0x2e8>)
 80044b8:	ed93 7a00 	vldr	s14, [r3]
 80044bc:	4b31      	ldr	r3, [pc, #196]	; (8004584 <Motor_Drive_Task+0x314>)
 80044be:	edd3 7a00 	vldr	s15, [r3]
 80044c2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80044c6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80044ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80044ce:	d802      	bhi.n	80044d6 <Motor_Drive_Task+0x266>
 80044d0:	4b2d      	ldr	r3, [pc, #180]	; (8004588 <Motor_Drive_Task+0x318>)
 80044d2:	2201      	movs	r2, #1
 80044d4:	701a      	strb	r2, [r3, #0]
			if(stop)
 80044d6:	4b2c      	ldr	r3, [pc, #176]	; (8004588 <Motor_Drive_Task+0x318>)
 80044d8:	781b      	ldrb	r3, [r3, #0]
 80044da:	2b00      	cmp	r3, #0
 80044dc:	d022      	beq.n	8004524 <Motor_Drive_Task+0x2b4>
			{
				if(fabs(v_ref)>100)
 80044de:	4b1d      	ldr	r3, [pc, #116]	; (8004554 <Motor_Drive_Task+0x2e4>)
 80044e0:	edd3 7a00 	vldr	s15, [r3]
 80044e4:	eef0 7ae7 	vabs.f32	s15, s15
 80044e8:	ed9f 7a29 	vldr	s14, [pc, #164]	; 8004590 <Motor_Drive_Task+0x320>
 80044ec:	eef4 7ac7 	vcmpe.f32	s15, s14
 80044f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80044f4:	dd08      	ble.n	8004508 <Motor_Drive_Task+0x298>
				{
					stop=0;
 80044f6:	4b24      	ldr	r3, [pc, #144]	; (8004588 <Motor_Drive_Task+0x318>)
 80044f8:	2200      	movs	r2, #0
 80044fa:	701a      	strb	r2, [r3, #0]
					MOTOR_EN(1);
 80044fc:	2201      	movs	r2, #1
 80044fe:	2140      	movs	r1, #64	; 0x40
 8004500:	4822      	ldr	r0, [pc, #136]	; (800458c <Motor_Drive_Task+0x31c>)
 8004502:	f004 fffd 	bl	8009500 <HAL_GPIO_WritePin>
		if(mode==SKILL)
 8004506:	e053      	b.n	80045b0 <Motor_Drive_Task+0x340>
				}
				else
				{
					f=u=0;
 8004508:	4b16      	ldr	r3, [pc, #88]	; (8004564 <Motor_Drive_Task+0x2f4>)
 800450a:	f04f 0200 	mov.w	r2, #0
 800450e:	601a      	str	r2, [r3, #0]
 8004510:	4b14      	ldr	r3, [pc, #80]	; (8004564 <Motor_Drive_Task+0x2f4>)
 8004512:	681b      	ldr	r3, [r3, #0]
 8004514:	4a12      	ldr	r2, [pc, #72]	; (8004560 <Motor_Drive_Task+0x2f0>)
 8004516:	6013      	str	r3, [r2, #0]
					MOTOR_EN(0); //amugy stop
 8004518:	2200      	movs	r2, #0
 800451a:	2140      	movs	r1, #64	; 0x40
 800451c:	481b      	ldr	r0, [pc, #108]	; (800458c <Motor_Drive_Task+0x31c>)
 800451e:	f004 ffef 	bl	8009500 <HAL_GPIO_WritePin>
		if(mode==SKILL)
 8004522:	e045      	b.n	80045b0 <Motor_Drive_Task+0x340>
				}
			}
			else MOTOR_EN(1);
 8004524:	2201      	movs	r2, #1
 8004526:	2140      	movs	r1, #64	; 0x40
 8004528:	4818      	ldr	r0, [pc, #96]	; (800458c <Motor_Drive_Task+0x31c>)
 800452a:	f004 ffe9 	bl	8009500 <HAL_GPIO_WritePin>
		if(mode==SKILL)
 800452e:	e03f      	b.n	80045b0 <Motor_Drive_Task+0x340>
 8004530:	30be0ded 	.word	0x30be0ded
 8004534:	3fd02a99 	.word	0x3fd02a99
 8004538:	9b3d07c8 	.word	0x9b3d07c8
 800453c:	3fef9f55 	.word	0x3fef9f55
 8004540:	30be0e00 	.word	0x30be0e00
 8004544:	3f882a99 	.word	0x3f882a99
 8004548:	20000040 	.word	0x20000040
 800454c:	20000c50 	.word	0x20000c50
 8004550:	20000c51 	.word	0x20000c51
 8004554:	20000338 	.word	0x20000338
 8004558:	20000754 	.word	0x20000754
 800455c:	20000030 	.word	0x20000030
 8004560:	2000075c 	.word	0x2000075c
 8004564:	20000760 	.word	0x20000760
 8004568:	445c0000 	.word	0x445c0000
 800456c:	445c0000 	.word	0x445c0000
 8004570:	c3fa0000 	.word	0xc3fa0000
 8004574:	c3fa0000 	.word	0xc3fa0000
 8004578:	20000764 	.word	0x20000764
 800457c:	20000336 	.word	0x20000336
 8004580:	43480000 	.word	0x43480000
 8004584:	20000768 	.word	0x20000768
 8004588:	2000076c 	.word	0x2000076c
 800458c:	40020400 	.word	0x40020400
 8004590:	42c80000 	.word	0x42c80000
		}

	}
	else
	{	f=u=0;
 8004594:	4b2c      	ldr	r3, [pc, #176]	; (8004648 <Motor_Drive_Task+0x3d8>)
 8004596:	f04f 0200 	mov.w	r2, #0
 800459a:	601a      	str	r2, [r3, #0]
 800459c:	4b2a      	ldr	r3, [pc, #168]	; (8004648 <Motor_Drive_Task+0x3d8>)
 800459e:	681b      	ldr	r3, [r3, #0]
 80045a0:	4a2a      	ldr	r2, [pc, #168]	; (800464c <Motor_Drive_Task+0x3dc>)
 80045a2:	6013      	str	r3, [r2, #0]
		MOTOR_EN(0); //amugy stop
 80045a4:	2200      	movs	r2, #0
 80045a6:	2140      	movs	r1, #64	; 0x40
 80045a8:	4829      	ldr	r0, [pc, #164]	; (8004650 <Motor_Drive_Task+0x3e0>)
 80045aa:	f004 ffa9 	bl	8009500 <HAL_GPIO_WritePin>
 80045ae:	e000      	b.n	80045b2 <Motor_Drive_Task+0x342>
		if(mode==SKILL)
 80045b0:	bf00      	nop
	}
	//A két érték amit irogatsz (TIM3->CCR1,CCR2) konkrét timer periféria regiszterek, nem feltétlen jó őket folyamatosan újraírni 10ms enként
	/**/
	if(mode==FAST && rxBuf[1]<1 && !leaveLineEnabled)
 80045b2:	4b28      	ldr	r3, [pc, #160]	; (8004654 <Motor_Drive_Task+0x3e4>)
 80045b4:	781b      	ldrb	r3, [r3, #0]
 80045b6:	2b3f      	cmp	r3, #63	; 0x3f
 80045b8:	d110      	bne.n	80045dc <Motor_Drive_Task+0x36c>
 80045ba:	4b27      	ldr	r3, [pc, #156]	; (8004658 <Motor_Drive_Task+0x3e8>)
 80045bc:	785b      	ldrb	r3, [r3, #1]
 80045be:	2b00      	cmp	r3, #0
 80045c0:	d10c      	bne.n	80045dc <Motor_Drive_Task+0x36c>
 80045c2:	4b26      	ldr	r3, [pc, #152]	; (800465c <Motor_Drive_Task+0x3ec>)
 80045c4:	781b      	ldrb	r3, [r3, #0]
 80045c6:	2b00      	cmp	r3, #0
 80045c8:	d108      	bne.n	80045dc <Motor_Drive_Task+0x36c>
	{
		TIM3->CCR1=499;
 80045ca:	4b25      	ldr	r3, [pc, #148]	; (8004660 <Motor_Drive_Task+0x3f0>)
 80045cc:	f240 12f3 	movw	r2, #499	; 0x1f3
 80045d0:	635a      	str	r2, [r3, #52]	; 0x34
		TIM3->CCR2=499;
 80045d2:	4b23      	ldr	r3, [pc, #140]	; (8004660 <Motor_Drive_Task+0x3f0>)
 80045d4:	f240 12f3 	movw	r2, #499	; 0x1f3
 80045d8:	639a      	str	r2, [r3, #56]	; 0x38
 80045da:	e027      	b.n	800462c <Motor_Drive_Task+0x3bc>
		//LED_Y_TOGGLE;
	}
	else if(motorDuty!=motorDutyPrev)//csak akkor írjuk át őket ha tényleg muszáj (ha változtak az előző taskhívás óta)
 80045dc:	4b21      	ldr	r3, [pc, #132]	; (8004664 <Motor_Drive_Task+0x3f4>)
 80045de:	681a      	ldr	r2, [r3, #0]
 80045e0:	4b21      	ldr	r3, [pc, #132]	; (8004668 <Motor_Drive_Task+0x3f8>)
 80045e2:	681b      	ldr	r3, [r3, #0]
 80045e4:	429a      	cmp	r2, r3
 80045e6:	d021      	beq.n	800462c <Motor_Drive_Task+0x3bc>
	{
		ccr2 = (motorDuty + 1000)/2-1;
 80045e8:	4b1e      	ldr	r3, [pc, #120]	; (8004664 <Motor_Drive_Task+0x3f4>)
 80045ea:	681b      	ldr	r3, [r3, #0]
 80045ec:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 80045f0:	0fda      	lsrs	r2, r3, #31
 80045f2:	4413      	add	r3, r2
 80045f4:	105b      	asrs	r3, r3, #1
 80045f6:	3b01      	subs	r3, #1
 80045f8:	617b      	str	r3, [r7, #20]
		if(ccr2>950)ccr2=950;
 80045fa:	697b      	ldr	r3, [r7, #20]
 80045fc:	f240 32b6 	movw	r2, #950	; 0x3b6
 8004600:	4293      	cmp	r3, r2
 8004602:	dd02      	ble.n	800460a <Motor_Drive_Task+0x39a>
 8004604:	f240 33b6 	movw	r3, #950	; 0x3b6
 8004608:	617b      	str	r3, [r7, #20]
		if(ccr2<-950)ccr2=-950;
 800460a:	697b      	ldr	r3, [r7, #20]
 800460c:	4a17      	ldr	r2, [pc, #92]	; (800466c <Motor_Drive_Task+0x3fc>)
 800460e:	4293      	cmp	r3, r2
 8004610:	da01      	bge.n	8004616 <Motor_Drive_Task+0x3a6>
 8004612:	4b16      	ldr	r3, [pc, #88]	; (800466c <Motor_Drive_Task+0x3fc>)
 8004614:	617b      	str	r3, [r7, #20]
		ccr1= 998-ccr2;
 8004616:	697b      	ldr	r3, [r7, #20]
 8004618:	f5c3 7379 	rsb	r3, r3, #996	; 0x3e4
 800461c:	3302      	adds	r3, #2
 800461e:	613b      	str	r3, [r7, #16]

		//2 Referencia megadása
		//Ezeket a loopba kéne változtatni folyamatosan, pwm-elinditas mashova kell majd

		TIM3->CCR1=ccr1;
 8004620:	4a0f      	ldr	r2, [pc, #60]	; (8004660 <Motor_Drive_Task+0x3f0>)
 8004622:	693b      	ldr	r3, [r7, #16]
 8004624:	6353      	str	r3, [r2, #52]	; 0x34
		TIM3->CCR2=ccr2;
 8004626:	4a0e      	ldr	r2, [pc, #56]	; (8004660 <Motor_Drive_Task+0x3f0>)
 8004628:	697b      	ldr	r3, [r7, #20]
 800462a:	6393      	str	r3, [r2, #56]	; 0x38
	}
	motorDutyPrev=motorDuty;
 800462c:	4b0d      	ldr	r3, [pc, #52]	; (8004664 <Motor_Drive_Task+0x3f4>)
 800462e:	681b      	ldr	r3, [r3, #0]
 8004630:	4a0d      	ldr	r2, [pc, #52]	; (8004668 <Motor_Drive_Task+0x3f8>)
 8004632:	6013      	str	r3, [r2, #0]
	v_prev=v;
 8004634:	4b0e      	ldr	r3, [pc, #56]	; (8004670 <Motor_Drive_Task+0x400>)
 8004636:	681b      	ldr	r3, [r3, #0]
 8004638:	4a0e      	ldr	r2, [pc, #56]	; (8004674 <Motor_Drive_Task+0x404>)
 800463a:	6013      	str	r3, [r2, #0]
 800463c:	e000      	b.n	8004640 <Motor_Drive_Task+0x3d0>
	if(motor_drive_task_tick>tick) return;
 800463e:	bf00      	nop
}
 8004640:	3718      	adds	r7, #24
 8004642:	46bd      	mov	sp, r7
 8004644:	bdb0      	pop	{r4, r5, r7, pc}
 8004646:	bf00      	nop
 8004648:	20000760 	.word	0x20000760
 800464c:	2000075c 	.word	0x2000075c
 8004650:	40020400 	.word	0x40020400
 8004654:	20000336 	.word	0x20000336
 8004658:	20000774 	.word	0x20000774
 800465c:	2000033c 	.word	0x2000033c
 8004660:	40000400 	.word	0x40000400
 8004664:	20000764 	.word	0x20000764
 8004668:	20000770 	.word	0x20000770
 800466c:	fffffc4a 	.word	0xfffffc4a
 8004670:	20000754 	.word	0x20000754
 8004674:	20000768 	.word	0x20000768

08004678 <G0_Read_Fast>:

uint16_t boostCnt=0;


uint8_t G0_Read_Fast(UART_HandleTypeDef *huart_stm,UART_HandleTypeDef *huart_debugg)
{
 8004678:	b580      	push	{r7, lr}
 800467a:	b084      	sub	sp, #16
 800467c:	af00      	add	r7, sp, #0
 800467e:	6078      	str	r0, [r7, #4]
 8004680:	6039      	str	r1, [r7, #0]

	uint8_t state=0;
 8004682:	2300      	movs	r3, #0
 8004684:	73fb      	strb	r3, [r7, #15]
	txBuf[0]=CMD_READ_FAST;
 8004686:	4b13      	ldr	r3, [pc, #76]	; (80046d4 <G0_Read_Fast+0x5c>)
 8004688:	222a      	movs	r2, #42	; 0x2a
 800468a:	701a      	strb	r2, [r3, #0]
	HAL_UART_Transmit(huart_stm, txBuf,1, 2);
 800468c:	2302      	movs	r3, #2
 800468e:	2201      	movs	r2, #1
 8004690:	4910      	ldr	r1, [pc, #64]	; (80046d4 <G0_Read_Fast+0x5c>)
 8004692:	6878      	ldr	r0, [r7, #4]
 8004694:	f007 fc87 	bl	800bfa6 <HAL_UART_Transmit>
	state=HAL_UART_Receive(huart_stm, rxBuf, 8, 4);
 8004698:	2304      	movs	r3, #4
 800469a:	2208      	movs	r2, #8
 800469c:	490e      	ldr	r1, [pc, #56]	; (80046d8 <G0_Read_Fast+0x60>)
 800469e:	6878      	ldr	r0, [r7, #4]
 80046a0:	f007 fd13 	bl	800c0ca <HAL_UART_Receive>
 80046a4:	4603      	mov	r3, r0
 80046a6:	73fb      	strb	r3, [r7, #15]
	motorEnLineOk=1; //ha van akkor mehet a szabályozás
 80046a8:	4b0c      	ldr	r3, [pc, #48]	; (80046dc <G0_Read_Fast+0x64>)
 80046aa:	2201      	movs	r2, #1
 80046ac:	701a      	strb	r2, [r3, #0]
	if((state==HAL_OK)&&(rxBuf[0]==START_BYTE_FAST) && (rxBuf[7]==STOP_BYTE))//jöt adat a G0 tól és a keret is megfelelő
 80046ae:	7bfb      	ldrb	r3, [r7, #15]
 80046b0:	2b00      	cmp	r3, #0
 80046b2:	d109      	bne.n	80046c8 <G0_Read_Fast+0x50>
 80046b4:	4b08      	ldr	r3, [pc, #32]	; (80046d8 <G0_Read_Fast+0x60>)
 80046b6:	781b      	ldrb	r3, [r3, #0]
 80046b8:	2b41      	cmp	r3, #65	; 0x41
 80046ba:	d105      	bne.n	80046c8 <G0_Read_Fast+0x50>
 80046bc:	4b06      	ldr	r3, [pc, #24]	; (80046d8 <G0_Read_Fast+0x60>)
 80046be:	79db      	ldrb	r3, [r3, #7]
 80046c0:	2b12      	cmp	r3, #18
 80046c2:	d101      	bne.n	80046c8 <G0_Read_Fast+0x50>
	{
		return 0;
 80046c4:	2300      	movs	r3, #0
 80046c6:	e000      	b.n	80046ca <G0_Read_Fast+0x52>
	}
	else //nem jött szabályos adat a G0-tól
	{
		return 1;
 80046c8:	2301      	movs	r3, #1
	}
}
 80046ca:	4618      	mov	r0, r3
 80046cc:	3710      	adds	r7, #16
 80046ce:	46bd      	mov	sp, r7
 80046d0:	bd80      	pop	{r7, pc}
 80046d2:	bf00      	nop
 80046d4:	20000044 	.word	0x20000044
 80046d8:	20000774 	.word	0x20000774
 80046dc:	20000c51 	.word	0x20000c51

080046e0 <G0_Read_Skill>:

uint8_t G0_Read_Skill(UART_HandleTypeDef *huart_stm,UART_HandleTypeDef *huart_debugg, uint8_t command)
{
 80046e0:	b580      	push	{r7, lr}
 80046e2:	b086      	sub	sp, #24
 80046e4:	af00      	add	r7, sp, #0
 80046e6:	60f8      	str	r0, [r7, #12]
 80046e8:	60b9      	str	r1, [r7, #8]
 80046ea:	4613      	mov	r3, r2
 80046ec:	71fb      	strb	r3, [r7, #7]
	uint8_t state=0;
 80046ee:	2300      	movs	r3, #0
 80046f0:	75fb      	strb	r3, [r7, #23]
	txBuf[0]=command;
 80046f2:	4a15      	ldr	r2, [pc, #84]	; (8004748 <G0_Read_Skill+0x68>)
 80046f4:	79fb      	ldrb	r3, [r7, #7]
 80046f6:	7013      	strb	r3, [r2, #0]
	HAL_UART_Transmit(huart_stm, txBuf,1, 2);
 80046f8:	2302      	movs	r3, #2
 80046fa:	2201      	movs	r2, #1
 80046fc:	4912      	ldr	r1, [pc, #72]	; (8004748 <G0_Read_Skill+0x68>)
 80046fe:	68f8      	ldr	r0, [r7, #12]
 8004700:	f007 fc51 	bl	800bfa6 <HAL_UART_Transmit>
	state = HAL_UART_Receive(huart_stm, rxBuf, 10, 4);
 8004704:	2304      	movs	r3, #4
 8004706:	220a      	movs	r2, #10
 8004708:	4910      	ldr	r1, [pc, #64]	; (800474c <G0_Read_Skill+0x6c>)
 800470a:	68f8      	ldr	r0, [r7, #12]
 800470c:	f007 fcdd 	bl	800c0ca <HAL_UART_Receive>
 8004710:	4603      	mov	r3, r0
 8004712:	75fb      	strb	r3, [r7, #23]
	motorEnLineOk=1; //ha van akkor mehet a szabályozás
 8004714:	4b0e      	ldr	r3, [pc, #56]	; (8004750 <G0_Read_Skill+0x70>)
 8004716:	2201      	movs	r2, #1
 8004718:	701a      	strb	r2, [r3, #0]
	if((state==HAL_OK)&&(rxBuf[0]==START_BYTE_SKILL_FORWARD || rxBuf[0]==START_BYTE_SKILL_REVERSE) && (rxBuf[9]==STOP_BYTE))//jöt adat a G0 tól és a keret is megfelelő
 800471a:	7dfb      	ldrb	r3, [r7, #23]
 800471c:	2b00      	cmp	r3, #0
 800471e:	d10d      	bne.n	800473c <G0_Read_Skill+0x5c>
 8004720:	4b0a      	ldr	r3, [pc, #40]	; (800474c <G0_Read_Skill+0x6c>)
 8004722:	781b      	ldrb	r3, [r3, #0]
 8004724:	2b50      	cmp	r3, #80	; 0x50
 8004726:	d003      	beq.n	8004730 <G0_Read_Skill+0x50>
 8004728:	4b08      	ldr	r3, [pc, #32]	; (800474c <G0_Read_Skill+0x6c>)
 800472a:	781b      	ldrb	r3, [r3, #0]
 800472c:	2ba8      	cmp	r3, #168	; 0xa8
 800472e:	d105      	bne.n	800473c <G0_Read_Skill+0x5c>
 8004730:	4b06      	ldr	r3, [pc, #24]	; (800474c <G0_Read_Skill+0x6c>)
 8004732:	7a5b      	ldrb	r3, [r3, #9]
 8004734:	2b12      	cmp	r3, #18
 8004736:	d101      	bne.n	800473c <G0_Read_Skill+0x5c>
	{
		return 0;
 8004738:	2300      	movs	r3, #0
 800473a:	e000      	b.n	800473e <G0_Read_Skill+0x5e>
	}
	else //nem jött szabályos adat a G0-tól
	{
		return 1;
 800473c:	2301      	movs	r3, #1
	}
}
 800473e:	4618      	mov	r0, r3
 8004740:	3718      	adds	r7, #24
 8004742:	46bd      	mov	sp, r7
 8004744:	bd80      	pop	{r7, pc}
 8004746:	bf00      	nop
 8004748:	20000044 	.word	0x20000044
 800474c:	20000774 	.word	0x20000774
 8004750:	20000c51 	.word	0x20000c51
 8004754:	00000000 	.word	0x00000000

08004758 <Line_Track_Task>:


void Line_Track_Task(UART_HandleTypeDef *huart_stm,UART_HandleTypeDef *huart_debugg, uint32_t tick, uint32_t period)
{
 8004758:	b580      	push	{r7, lr}
 800475a:	b086      	sub	sp, #24
 800475c:	af00      	add	r7, sp, #0
 800475e:	60f8      	str	r0, [r7, #12]
 8004760:	60b9      	str	r1, [r7, #8]
 8004762:	607a      	str	r2, [r7, #4]
 8004764:	603b      	str	r3, [r7, #0]
	static float PHI;
	static float gamma=0;
	static uint32_t ccr_rear_prev=0;
	static uint32_t tick_prev=0;

	if(line_track_task_tick>tick) return;
 8004766:	4ba4      	ldr	r3, [pc, #656]	; (80049f8 <Line_Track_Task+0x2a0>)
 8004768:	681b      	ldr	r3, [r3, #0]
 800476a:	687a      	ldr	r2, [r7, #4]
 800476c:	429a      	cmp	r2, r3
 800476e:	f0c0 83f9 	bcc.w	8004f64 <Line_Track_Task+0x80c>
	line_track_task_tick = tick + period;
 8004772:	687a      	ldr	r2, [r7, #4]
 8004774:	683b      	ldr	r3, [r7, #0]
 8004776:	4413      	add	r3, r2
 8004778:	4a9f      	ldr	r2, [pc, #636]	; (80049f8 <Line_Track_Task+0x2a0>)
 800477a:	6013      	str	r3, [r2, #0]

	if(mode == SKILL)
 800477c:	4b9f      	ldr	r3, [pc, #636]	; (80049fc <Line_Track_Task+0x2a4>)
 800477e:	781b      	ldrb	r3, [r3, #0]
 8004780:	2b52      	cmp	r3, #82	; 0x52
 8004782:	f040 8232 	bne.w	8004bea <Line_Track_Task+0x492>
	{
		if(orientation==FORWARD)
 8004786:	4b9e      	ldr	r3, [pc, #632]	; (8004a00 <Line_Track_Task+0x2a8>)
 8004788:	781b      	ldrb	r3, [r3, #0]
 800478a:	2b00      	cmp	r3, #0
 800478c:	f040 80f9 	bne.w	8004982 <Line_Track_Task+0x22a>
		{
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_FORWARD))return;
 8004790:	2239      	movs	r2, #57	; 0x39
 8004792:	68b9      	ldr	r1, [r7, #8]
 8004794:	68f8      	ldr	r0, [r7, #12]
 8004796:	f7ff ffa3 	bl	80046e0 <G0_Read_Skill>
 800479a:	4603      	mov	r3, r0
 800479c:	2b00      	cmp	r3, #0
 800479e:	f040 83e3 	bne.w	8004f68 <Line_Track_Task+0x810>

			uint8_t tmp=Lane_Changer(tick);
 80047a2:	6878      	ldr	r0, [r7, #4]
 80047a4:	f001 f9b2 	bl	8005b0c <Lane_Changer>
 80047a8:	4603      	mov	r3, r0
 80047aa:	75bb      	strb	r3, [r7, #22]
			if(v_control==NORMAL_VEL)v_ref=1100;
 80047ac:	4b95      	ldr	r3, [pc, #596]	; (8004a04 <Line_Track_Task+0x2ac>)
 80047ae:	781b      	ldrb	r3, [r3, #0]
 80047b0:	2b02      	cmp	r3, #2
 80047b2:	d103      	bne.n	80047bc <Line_Track_Task+0x64>
 80047b4:	4b94      	ldr	r3, [pc, #592]	; (8004a08 <Line_Track_Task+0x2b0>)
 80047b6:	4a95      	ldr	r2, [pc, #596]	; (8004a0c <Line_Track_Task+0x2b4>)
 80047b8:	601a      	str	r2, [r3, #0]
 80047ba:	e01f      	b.n	80047fc <Line_Track_Task+0xa4>
			else if(v_control==SLOW_DOWN)v_ref=600;
 80047bc:	4b91      	ldr	r3, [pc, #580]	; (8004a04 <Line_Track_Task+0x2ac>)
 80047be:	781b      	ldrb	r3, [r3, #0]
 80047c0:	2b01      	cmp	r3, #1
 80047c2:	d103      	bne.n	80047cc <Line_Track_Task+0x74>
 80047c4:	4b90      	ldr	r3, [pc, #576]	; (8004a08 <Line_Track_Task+0x2b0>)
 80047c6:	4a92      	ldr	r2, [pc, #584]	; (8004a10 <Line_Track_Task+0x2b8>)
 80047c8:	601a      	str	r2, [r3, #0]
 80047ca:	e017      	b.n	80047fc <Line_Track_Task+0xa4>
			else if(v_control==STOP)v_ref=-199;
 80047cc:	4b8d      	ldr	r3, [pc, #564]	; (8004a04 <Line_Track_Task+0x2ac>)
 80047ce:	781b      	ldrb	r3, [r3, #0]
 80047d0:	2b00      	cmp	r3, #0
 80047d2:	d103      	bne.n	80047dc <Line_Track_Task+0x84>
 80047d4:	4b8c      	ldr	r3, [pc, #560]	; (8004a08 <Line_Track_Task+0x2b0>)
 80047d6:	4a8f      	ldr	r2, [pc, #572]	; (8004a14 <Line_Track_Task+0x2bc>)
 80047d8:	601a      	str	r2, [r3, #0]
 80047da:	e00f      	b.n	80047fc <Line_Track_Task+0xa4>
			else if(v_control==SPEED_UP)v_ref=1200;
 80047dc:	4b89      	ldr	r3, [pc, #548]	; (8004a04 <Line_Track_Task+0x2ac>)
 80047de:	781b      	ldrb	r3, [r3, #0]
 80047e0:	2b03      	cmp	r3, #3
 80047e2:	d103      	bne.n	80047ec <Line_Track_Task+0x94>
 80047e4:	4b88      	ldr	r3, [pc, #544]	; (8004a08 <Line_Track_Task+0x2b0>)
 80047e6:	4a8c      	ldr	r2, [pc, #560]	; (8004a18 <Line_Track_Task+0x2c0>)
 80047e8:	601a      	str	r2, [r3, #0]
 80047ea:	e007      	b.n	80047fc <Line_Track_Task+0xa4>
			else if(v_control==SLEEP)v_ref=0;
 80047ec:	4b85      	ldr	r3, [pc, #532]	; (8004a04 <Line_Track_Task+0x2ac>)
 80047ee:	781b      	ldrb	r3, [r3, #0]
 80047f0:	2b04      	cmp	r3, #4
 80047f2:	d103      	bne.n	80047fc <Line_Track_Task+0xa4>
 80047f4:	4b84      	ldr	r3, [pc, #528]	; (8004a08 <Line_Track_Task+0x2b0>)
 80047f6:	f04f 0200 	mov.w	r2, #0
 80047fa:	601a      	str	r2, [r3, #0]
			if(tmp)return;
 80047fc:	7dbb      	ldrb	r3, [r7, #22]
 80047fe:	2b00      	cmp	r3, #0
 8004800:	f040 83b4 	bne.w	8004f6c <Line_Track_Task+0x814>

			if(v_control==SPEED_UP)Detect_Node5(huart_debugg, tick);
 8004804:	4b7f      	ldr	r3, [pc, #508]	; (8004a04 <Line_Track_Task+0x2ac>)
 8004806:	781b      	ldrb	r3, [r3, #0]
 8004808:	2b03      	cmp	r3, #3
 800480a:	d104      	bne.n	8004816 <Line_Track_Task+0xbe>
 800480c:	6879      	ldr	r1, [r7, #4]
 800480e:	68b8      	ldr	r0, [r7, #8]
 8004810:	f001 f8e8 	bl	80059e4 <Detect_Node5>
 8004814:	e003      	b.n	800481e <Line_Track_Task+0xc6>
			else Detect_Node4(huart_debugg, tick);
 8004816:	6879      	ldr	r1, [r7, #4]
 8004818:	68b8      	ldr	r0, [r7, #8]
 800481a:	f001 f84f 	bl	80058bc <Detect_Node4>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 800481e:	4b7f      	ldr	r3, [pc, #508]	; (8004a1c <Line_Track_Task+0x2c4>)
 8004820:	785b      	ldrb	r3, [r3, #1]
 8004822:	2b00      	cmp	r3, #0
 8004824:	f000 83a4 	beq.w	8004f70 <Line_Track_Task+0x818>
 8004828:	4b7c      	ldr	r3, [pc, #496]	; (8004a1c <Line_Track_Task+0x2c4>)
 800482a:	785b      	ldrb	r3, [r3, #1]
 800482c:	2b04      	cmp	r3, #4
 800482e:	f200 839f 	bhi.w	8004f70 <Line_Track_Task+0x818>
			gamma = Skill_Mode(huart_debugg, 0.004, 0.004, tick); //kD 4ms -es futáshoz hangolva
 8004832:	6879      	ldr	r1, [r7, #4]
 8004834:	eddf 0a7a 	vldr	s1, [pc, #488]	; 8004a20 <Line_Track_Task+0x2c8>
 8004838:	ed9f 0a79 	vldr	s0, [pc, #484]	; 8004a20 <Line_Track_Task+0x2c8>
 800483c:	68b8      	ldr	r0, [r7, #8]
 800483e:	f000 ff05 	bl	800564c <Skill_Mode>
 8004842:	eef0 7a40 	vmov.f32	s15, s0
 8004846:	4b77      	ldr	r3, [pc, #476]	; (8004a24 <Line_Track_Task+0x2cc>)
 8004848:	edc3 7a00 	vstr	s15, [r3]

			//ELSŐSZERVÓ ELŐREMENETBEN
			PHI = atan((L/(L+D_FRONT))*tan(gamma));
 800484c:	4b75      	ldr	r3, [pc, #468]	; (8004a24 <Line_Track_Task+0x2cc>)
 800484e:	681b      	ldr	r3, [r3, #0]
 8004850:	4618      	mov	r0, r3
 8004852:	f7fb fe99 	bl	8000588 <__aeabi_f2d>
 8004856:	4602      	mov	r2, r0
 8004858:	460b      	mov	r3, r1
 800485a:	ec43 2b10 	vmov	d0, r2, r3
 800485e:	f00b fd2f 	bl	80102c0 <tan>
 8004862:	ec51 0b10 	vmov	r0, r1, d0
 8004866:	a360      	add	r3, pc, #384	; (adr r3, 80049e8 <Line_Track_Task+0x290>)
 8004868:	e9d3 2300 	ldrd	r2, r3, [r3]
 800486c:	f7fb fee4 	bl	8000638 <__aeabi_dmul>
 8004870:	4602      	mov	r2, r0
 8004872:	460b      	mov	r3, r1
 8004874:	ec43 2b17 	vmov	d7, r2, r3
 8004878:	eeb0 0a47 	vmov.f32	s0, s14
 800487c:	eef0 0a67 	vmov.f32	s1, s15
 8004880:	f00b fb72 	bl	800ff68 <atan>
 8004884:	ec53 2b10 	vmov	r2, r3, d0
 8004888:	4610      	mov	r0, r2
 800488a:	4619      	mov	r1, r3
 800488c:	f7fc f9ac 	bl	8000be8 <__aeabi_d2f>
 8004890:	4603      	mov	r3, r0
 8004892:	4a65      	ldr	r2, [pc, #404]	; (8004a28 <Line_Track_Task+0x2d0>)
 8004894:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_FRONT_CCR_MIDDLE);//balra kanyarodás
 8004896:	4b64      	ldr	r3, [pc, #400]	; (8004a28 <Line_Track_Task+0x2d0>)
 8004898:	edd3 7a00 	vldr	s15, [r3]
 800489c:	ed9f 7a63 	vldr	s14, [pc, #396]	; 8004a2c <Line_Track_Task+0x2d4>
 80048a0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80048a4:	ed9f 7a62 	vldr	s14, [pc, #392]	; 8004a30 <Line_Track_Task+0x2d8>
 80048a8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80048ac:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80048b0:	ee17 3a90 	vmov	r3, s15
 80048b4:	b29b      	uxth	r3, r3
 80048b6:	461a      	mov	r2, r3
 80048b8:	4b5e      	ldr	r3, [pc, #376]	; (8004a34 <Line_Track_Task+0x2dc>)
 80048ba:	601a      	str	r2, [r3, #0]
			//ne feszítsük neki a mechanikai határnak a szervót
			FRONT_CCR(ccr);
 80048bc:	4b5d      	ldr	r3, [pc, #372]	; (8004a34 <Line_Track_Task+0x2dc>)
 80048be:	681b      	ldr	r3, [r3, #0]
 80048c0:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 80048c4:	dc07      	bgt.n	80048d6 <Line_Track_Task+0x17e>
 80048c6:	4b5b      	ldr	r3, [pc, #364]	; (8004a34 <Line_Track_Task+0x2dc>)
 80048c8:	681b      	ldr	r3, [r3, #0]
 80048ca:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 80048ce:	bfb8      	it	lt
 80048d0:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 80048d4:	e001      	b.n	80048da <Line_Track_Task+0x182>
 80048d6:	f44f 7361 	mov.w	r3, #900	; 0x384
 80048da:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80048de:	6353      	str	r3, [r2, #52]	; 0x34

			//HÁTSÓSZERVÓ ELŐREMENETBEN
			PHI = atan((L/(L+D_REAR))*tan(gamma))/3;
 80048e0:	4b50      	ldr	r3, [pc, #320]	; (8004a24 <Line_Track_Task+0x2cc>)
 80048e2:	681b      	ldr	r3, [r3, #0]
 80048e4:	4618      	mov	r0, r3
 80048e6:	f7fb fe4f 	bl	8000588 <__aeabi_f2d>
 80048ea:	4602      	mov	r2, r0
 80048ec:	460b      	mov	r3, r1
 80048ee:	ec43 2b10 	vmov	d0, r2, r3
 80048f2:	f00b fce5 	bl	80102c0 <tan>
 80048f6:	ec51 0b10 	vmov	r0, r1, d0
 80048fa:	a33d      	add	r3, pc, #244	; (adr r3, 80049f0 <Line_Track_Task+0x298>)
 80048fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004900:	f7fb fe9a 	bl	8000638 <__aeabi_dmul>
 8004904:	4602      	mov	r2, r0
 8004906:	460b      	mov	r3, r1
 8004908:	ec43 2b17 	vmov	d7, r2, r3
 800490c:	eeb0 0a47 	vmov.f32	s0, s14
 8004910:	eef0 0a67 	vmov.f32	s1, s15
 8004914:	f00b fb28 	bl	800ff68 <atan>
 8004918:	ec51 0b10 	vmov	r0, r1, d0
 800491c:	f04f 0200 	mov.w	r2, #0
 8004920:	4b45      	ldr	r3, [pc, #276]	; (8004a38 <Line_Track_Task+0x2e0>)
 8004922:	f7fb ffb3 	bl	800088c <__aeabi_ddiv>
 8004926:	4602      	mov	r2, r0
 8004928:	460b      	mov	r3, r1
 800492a:	4610      	mov	r0, r2
 800492c:	4619      	mov	r1, r3
 800492e:	f7fc f95b 	bl	8000be8 <__aeabi_d2f>
 8004932:	4603      	mov	r3, r0
 8004934:	4a3c      	ldr	r2, [pc, #240]	; (8004a28 <Line_Track_Task+0x2d0>)
 8004936:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_REAR_CCR_MIDDLE);//balra kanyarodás
 8004938:	4b3b      	ldr	r3, [pc, #236]	; (8004a28 <Line_Track_Task+0x2d0>)
 800493a:	edd3 7a00 	vldr	s15, [r3]
 800493e:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 8004a2c <Line_Track_Task+0x2d4>
 8004942:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004946:	ed9f 7a3d 	vldr	s14, [pc, #244]	; 8004a3c <Line_Track_Task+0x2e4>
 800494a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800494e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004952:	ee17 3a90 	vmov	r3, s15
 8004956:	b29b      	uxth	r3, r3
 8004958:	461a      	mov	r2, r3
 800495a:	4b36      	ldr	r3, [pc, #216]	; (8004a34 <Line_Track_Task+0x2dc>)
 800495c:	601a      	str	r2, [r3, #0]
			REAR_CCR(ccr);
 800495e:	4b35      	ldr	r3, [pc, #212]	; (8004a34 <Line_Track_Task+0x2dc>)
 8004960:	681b      	ldr	r3, [r3, #0]
 8004962:	f5b3 7f52 	cmp.w	r3, #840	; 0x348
 8004966:	dc07      	bgt.n	8004978 <Line_Track_Task+0x220>
 8004968:	4b32      	ldr	r3, [pc, #200]	; (8004a34 <Line_Track_Task+0x2dc>)
 800496a:	681b      	ldr	r3, [r3, #0]
 800496c:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 8004970:	bfb8      	it	lt
 8004972:	f44f 7302 	movlt.w	r3, #520	; 0x208
 8004976:	e001      	b.n	800497c <Line_Track_Task+0x224>
 8004978:	f44f 7352 	mov.w	r3, #840	; 0x348
 800497c:	4a30      	ldr	r2, [pc, #192]	; (8004a40 <Line_Track_Task+0x2e8>)
 800497e:	6413      	str	r3, [r2, #64]	; 0x40
 8004980:	e2ec      	b.n	8004f5c <Line_Track_Task+0x804>
		}
		else if(orientation==REVERSE)//TOLATÁS
 8004982:	4b1f      	ldr	r3, [pc, #124]	; (8004a00 <Line_Track_Task+0x2a8>)
 8004984:	781b      	ldrb	r3, [r3, #0]
 8004986:	2b01      	cmp	r3, #1
 8004988:	f040 82e8 	bne.w	8004f5c <Line_Track_Task+0x804>
		{
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_REVERSE))return;
 800498c:	2291      	movs	r2, #145	; 0x91
 800498e:	68b9      	ldr	r1, [r7, #8]
 8004990:	68f8      	ldr	r0, [r7, #12]
 8004992:	f7ff fea5 	bl	80046e0 <G0_Read_Skill>
 8004996:	4603      	mov	r3, r0
 8004998:	2b00      	cmp	r3, #0
 800499a:	f040 82eb 	bne.w	8004f74 <Line_Track_Task+0x81c>

			uint8_t tmp=Lane_Changer(tick);
 800499e:	6878      	ldr	r0, [r7, #4]
 80049a0:	f001 f8b4 	bl	8005b0c <Lane_Changer>
 80049a4:	4603      	mov	r3, r0
 80049a6:	75fb      	strb	r3, [r7, #23]
			if(v_control==NORMAL_VEL)v_ref=-1100;
 80049a8:	4b16      	ldr	r3, [pc, #88]	; (8004a04 <Line_Track_Task+0x2ac>)
 80049aa:	781b      	ldrb	r3, [r3, #0]
 80049ac:	2b02      	cmp	r3, #2
 80049ae:	d103      	bne.n	80049b8 <Line_Track_Task+0x260>
 80049b0:	4b15      	ldr	r3, [pc, #84]	; (8004a08 <Line_Track_Task+0x2b0>)
 80049b2:	4a24      	ldr	r2, [pc, #144]	; (8004a44 <Line_Track_Task+0x2ec>)
 80049b4:	601a      	str	r2, [r3, #0]
 80049b6:	e055      	b.n	8004a64 <Line_Track_Task+0x30c>
			else if(v_control==SLOW_DOWN)v_ref=-600;
 80049b8:	4b12      	ldr	r3, [pc, #72]	; (8004a04 <Line_Track_Task+0x2ac>)
 80049ba:	781b      	ldrb	r3, [r3, #0]
 80049bc:	2b01      	cmp	r3, #1
 80049be:	d103      	bne.n	80049c8 <Line_Track_Task+0x270>
 80049c0:	4b11      	ldr	r3, [pc, #68]	; (8004a08 <Line_Track_Task+0x2b0>)
 80049c2:	4a21      	ldr	r2, [pc, #132]	; (8004a48 <Line_Track_Task+0x2f0>)
 80049c4:	601a      	str	r2, [r3, #0]
 80049c6:	e04d      	b.n	8004a64 <Line_Track_Task+0x30c>
			else if(v_control==STOP)v_ref=199;
 80049c8:	4b0e      	ldr	r3, [pc, #56]	; (8004a04 <Line_Track_Task+0x2ac>)
 80049ca:	781b      	ldrb	r3, [r3, #0]
 80049cc:	2b00      	cmp	r3, #0
 80049ce:	d103      	bne.n	80049d8 <Line_Track_Task+0x280>
 80049d0:	4b0d      	ldr	r3, [pc, #52]	; (8004a08 <Line_Track_Task+0x2b0>)
 80049d2:	4a1e      	ldr	r2, [pc, #120]	; (8004a4c <Line_Track_Task+0x2f4>)
 80049d4:	601a      	str	r2, [r3, #0]
 80049d6:	e045      	b.n	8004a64 <Line_Track_Task+0x30c>
			else if(v_control==SPEED_UP)v_ref=-1200;
 80049d8:	4b0a      	ldr	r3, [pc, #40]	; (8004a04 <Line_Track_Task+0x2ac>)
 80049da:	781b      	ldrb	r3, [r3, #0]
 80049dc:	2b03      	cmp	r3, #3
 80049de:	d139      	bne.n	8004a54 <Line_Track_Task+0x2fc>
 80049e0:	4b09      	ldr	r3, [pc, #36]	; (8004a08 <Line_Track_Task+0x2b0>)
 80049e2:	4a1b      	ldr	r2, [pc, #108]	; (8004a50 <Line_Track_Task+0x2f8>)
 80049e4:	601a      	str	r2, [r3, #0]
 80049e6:	e03d      	b.n	8004a64 <Line_Track_Task+0x30c>
 80049e8:	c4830201 	.word	0xc4830201
 80049ec:	3fe73a26 	.word	0x3fe73a26
 80049f0:	a3f47e90 	.word	0xa3f47e90
 80049f4:	3fe8fd1f 	.word	0x3fe8fd1f
 80049f8:	20000048 	.word	0x20000048
 80049fc:	20000336 	.word	0x20000336
 8004a00:	20000344 	.word	0x20000344
 8004a04:	20000349 	.word	0x20000349
 8004a08:	20000338 	.word	0x20000338
 8004a0c:	44898000 	.word	0x44898000
 8004a10:	44160000 	.word	0x44160000
 8004a14:	c3470000 	.word	0xc3470000
 8004a18:	44960000 	.word	0x44960000
 8004a1c:	20000774 	.word	0x20000774
 8004a20:	3b83126f 	.word	0x3b83126f
 8004a24:	20000784 	.word	0x20000784
 8004a28:	20000788 	.word	0x20000788
 8004a2c:	44af0000 	.word	0x44af0000
 8004a30:	442d0000 	.word	0x442d0000
 8004a34:	2000004c 	.word	0x2000004c
 8004a38:	40080000 	.word	0x40080000
 8004a3c:	442a0000 	.word	0x442a0000
 8004a40:	40010000 	.word	0x40010000
 8004a44:	c4898000 	.word	0xc4898000
 8004a48:	c4160000 	.word	0xc4160000
 8004a4c:	43470000 	.word	0x43470000
 8004a50:	c4960000 	.word	0xc4960000
			else if(v_control==SLEEP)v_ref=0;
 8004a54:	4bba      	ldr	r3, [pc, #744]	; (8004d40 <Line_Track_Task+0x5e8>)
 8004a56:	781b      	ldrb	r3, [r3, #0]
 8004a58:	2b04      	cmp	r3, #4
 8004a5a:	d103      	bne.n	8004a64 <Line_Track_Task+0x30c>
 8004a5c:	4bb9      	ldr	r3, [pc, #740]	; (8004d44 <Line_Track_Task+0x5ec>)
 8004a5e:	f04f 0200 	mov.w	r2, #0
 8004a62:	601a      	str	r2, [r3, #0]
			if(tmp)return;
 8004a64:	7dfb      	ldrb	r3, [r7, #23]
 8004a66:	2b00      	cmp	r3, #0
 8004a68:	f040 8286 	bne.w	8004f78 <Line_Track_Task+0x820>
			if(v_control==SPEED_UP)Detect_Node5(huart_debugg, tick);
 8004a6c:	4bb4      	ldr	r3, [pc, #720]	; (8004d40 <Line_Track_Task+0x5e8>)
 8004a6e:	781b      	ldrb	r3, [r3, #0]
 8004a70:	2b03      	cmp	r3, #3
 8004a72:	d104      	bne.n	8004a7e <Line_Track_Task+0x326>
 8004a74:	6879      	ldr	r1, [r7, #4]
 8004a76:	68b8      	ldr	r0, [r7, #8]
 8004a78:	f000 ffb4 	bl	80059e4 <Detect_Node5>
 8004a7c:	e003      	b.n	8004a86 <Line_Track_Task+0x32e>
			else Detect_Node4(huart_debugg, tick);
 8004a7e:	6879      	ldr	r1, [r7, #4]
 8004a80:	68b8      	ldr	r0, [r7, #8]
 8004a82:	f000 ff1b 	bl	80058bc <Detect_Node4>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 8004a86:	4bb0      	ldr	r3, [pc, #704]	; (8004d48 <Line_Track_Task+0x5f0>)
 8004a88:	785b      	ldrb	r3, [r3, #1]
 8004a8a:	2b00      	cmp	r3, #0
 8004a8c:	f000 8276 	beq.w	8004f7c <Line_Track_Task+0x824>
 8004a90:	4bad      	ldr	r3, [pc, #692]	; (8004d48 <Line_Track_Task+0x5f0>)
 8004a92:	785b      	ldrb	r3, [r3, #1]
 8004a94:	2b04      	cmp	r3, #4
 8004a96:	f200 8271 	bhi.w	8004f7c <Line_Track_Task+0x824>
			gamma = Skill_Mode(huart_debugg, 0.003, 0.032, tick);
 8004a9a:	6879      	ldr	r1, [r7, #4]
 8004a9c:	eddf 0aab 	vldr	s1, [pc, #684]	; 8004d4c <Line_Track_Task+0x5f4>
 8004aa0:	ed9f 0aab 	vldr	s0, [pc, #684]	; 8004d50 <Line_Track_Task+0x5f8>
 8004aa4:	68b8      	ldr	r0, [r7, #8]
 8004aa6:	f000 fdd1 	bl	800564c <Skill_Mode>
 8004aaa:	eef0 7a40 	vmov.f32	s15, s0
 8004aae:	4ba9      	ldr	r3, [pc, #676]	; (8004d54 <Line_Track_Task+0x5fc>)
 8004ab0:	edc3 7a00 	vstr	s15, [r3]

			//HÁTSÓ SZERVÓ HÁTRAMENETBEN
			PHI = atan((L/(L+D_REAR))*tan(gamma));////////////////////kiszámolni kézzel
 8004ab4:	4ba7      	ldr	r3, [pc, #668]	; (8004d54 <Line_Track_Task+0x5fc>)
 8004ab6:	681b      	ldr	r3, [r3, #0]
 8004ab8:	4618      	mov	r0, r3
 8004aba:	f7fb fd65 	bl	8000588 <__aeabi_f2d>
 8004abe:	4602      	mov	r2, r0
 8004ac0:	460b      	mov	r3, r1
 8004ac2:	ec43 2b10 	vmov	d0, r2, r3
 8004ac6:	f00b fbfb 	bl	80102c0 <tan>
 8004aca:	ec51 0b10 	vmov	r0, r1, d0
 8004ace:	a398      	add	r3, pc, #608	; (adr r3, 8004d30 <Line_Track_Task+0x5d8>)
 8004ad0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004ad4:	f7fb fdb0 	bl	8000638 <__aeabi_dmul>
 8004ad8:	4602      	mov	r2, r0
 8004ada:	460b      	mov	r3, r1
 8004adc:	ec43 2b17 	vmov	d7, r2, r3
 8004ae0:	eeb0 0a47 	vmov.f32	s0, s14
 8004ae4:	eef0 0a67 	vmov.f32	s1, s15
 8004ae8:	f00b fa3e 	bl	800ff68 <atan>
 8004aec:	ec53 2b10 	vmov	r2, r3, d0
 8004af0:	4610      	mov	r0, r2
 8004af2:	4619      	mov	r1, r3
 8004af4:	f7fc f878 	bl	8000be8 <__aeabi_d2f>
 8004af8:	4603      	mov	r3, r0
 8004afa:	4a97      	ldr	r2, [pc, #604]	; (8004d58 <Line_Track_Task+0x600>)
 8004afc:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_REAR_CCR_MIDDLE);
 8004afe:	4b96      	ldr	r3, [pc, #600]	; (8004d58 <Line_Track_Task+0x600>)
 8004b00:	edd3 7a00 	vldr	s15, [r3]
 8004b04:	ed9f 7a95 	vldr	s14, [pc, #596]	; 8004d5c <Line_Track_Task+0x604>
 8004b08:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004b0c:	ed9f 7a94 	vldr	s14, [pc, #592]	; 8004d60 <Line_Track_Task+0x608>
 8004b10:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004b14:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004b18:	ee17 3a90 	vmov	r3, s15
 8004b1c:	b29b      	uxth	r3, r3
 8004b1e:	461a      	mov	r2, r3
 8004b20:	4b90      	ldr	r3, [pc, #576]	; (8004d64 <Line_Track_Task+0x60c>)
 8004b22:	601a      	str	r2, [r3, #0]
			REAR_CCR(ccr);
 8004b24:	4b8f      	ldr	r3, [pc, #572]	; (8004d64 <Line_Track_Task+0x60c>)
 8004b26:	681b      	ldr	r3, [r3, #0]
 8004b28:	f5b3 7f52 	cmp.w	r3, #840	; 0x348
 8004b2c:	dc07      	bgt.n	8004b3e <Line_Track_Task+0x3e6>
 8004b2e:	4b8d      	ldr	r3, [pc, #564]	; (8004d64 <Line_Track_Task+0x60c>)
 8004b30:	681b      	ldr	r3, [r3, #0]
 8004b32:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 8004b36:	bfb8      	it	lt
 8004b38:	f44f 7302 	movlt.w	r3, #520	; 0x208
 8004b3c:	e001      	b.n	8004b42 <Line_Track_Task+0x3ea>
 8004b3e:	f44f 7352 	mov.w	r3, #840	; 0x348
 8004b42:	4a89      	ldr	r2, [pc, #548]	; (8004d68 <Line_Track_Task+0x610>)
 8004b44:	6413      	str	r3, [r2, #64]	; 0x40

			//ELSŐSZERVÓ HÁTRAMENETBEN
			PHI = atan((L/(L+D_FRONT))*tan(gamma))/3;
 8004b46:	4b83      	ldr	r3, [pc, #524]	; (8004d54 <Line_Track_Task+0x5fc>)
 8004b48:	681b      	ldr	r3, [r3, #0]
 8004b4a:	4618      	mov	r0, r3
 8004b4c:	f7fb fd1c 	bl	8000588 <__aeabi_f2d>
 8004b50:	4602      	mov	r2, r0
 8004b52:	460b      	mov	r3, r1
 8004b54:	ec43 2b10 	vmov	d0, r2, r3
 8004b58:	f00b fbb2 	bl	80102c0 <tan>
 8004b5c:	ec51 0b10 	vmov	r0, r1, d0
 8004b60:	a375      	add	r3, pc, #468	; (adr r3, 8004d38 <Line_Track_Task+0x5e0>)
 8004b62:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004b66:	f7fb fd67 	bl	8000638 <__aeabi_dmul>
 8004b6a:	4602      	mov	r2, r0
 8004b6c:	460b      	mov	r3, r1
 8004b6e:	ec43 2b17 	vmov	d7, r2, r3
 8004b72:	eeb0 0a47 	vmov.f32	s0, s14
 8004b76:	eef0 0a67 	vmov.f32	s1, s15
 8004b7a:	f00b f9f5 	bl	800ff68 <atan>
 8004b7e:	ec51 0b10 	vmov	r0, r1, d0
 8004b82:	f04f 0200 	mov.w	r2, #0
 8004b86:	4b79      	ldr	r3, [pc, #484]	; (8004d6c <Line_Track_Task+0x614>)
 8004b88:	f7fb fe80 	bl	800088c <__aeabi_ddiv>
 8004b8c:	4602      	mov	r2, r0
 8004b8e:	460b      	mov	r3, r1
 8004b90:	4610      	mov	r0, r2
 8004b92:	4619      	mov	r1, r3
 8004b94:	f7fc f828 	bl	8000be8 <__aeabi_d2f>
 8004b98:	4603      	mov	r3, r0
 8004b9a:	4a6f      	ldr	r2, [pc, #444]	; (8004d58 <Line_Track_Task+0x600>)
 8004b9c:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_FRONT_CCR_MIDDLE);//balra kanyarodás
 8004b9e:	4b6e      	ldr	r3, [pc, #440]	; (8004d58 <Line_Track_Task+0x600>)
 8004ba0:	edd3 7a00 	vldr	s15, [r3]
 8004ba4:	ed9f 7a6d 	vldr	s14, [pc, #436]	; 8004d5c <Line_Track_Task+0x604>
 8004ba8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004bac:	ed9f 7a70 	vldr	s14, [pc, #448]	; 8004d70 <Line_Track_Task+0x618>
 8004bb0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004bb4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004bb8:	ee17 3a90 	vmov	r3, s15
 8004bbc:	b29b      	uxth	r3, r3
 8004bbe:	461a      	mov	r2, r3
 8004bc0:	4b68      	ldr	r3, [pc, #416]	; (8004d64 <Line_Track_Task+0x60c>)
 8004bc2:	601a      	str	r2, [r3, #0]
			FRONT_CCR(ccr);
 8004bc4:	4b67      	ldr	r3, [pc, #412]	; (8004d64 <Line_Track_Task+0x60c>)
 8004bc6:	681b      	ldr	r3, [r3, #0]
 8004bc8:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8004bcc:	dc07      	bgt.n	8004bde <Line_Track_Task+0x486>
 8004bce:	4b65      	ldr	r3, [pc, #404]	; (8004d64 <Line_Track_Task+0x60c>)
 8004bd0:	681b      	ldr	r3, [r3, #0]
 8004bd2:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8004bd6:	bfb8      	it	lt
 8004bd8:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 8004bdc:	e001      	b.n	8004be2 <Line_Track_Task+0x48a>
 8004bde:	f44f 7361 	mov.w	r3, #900	; 0x384
 8004be2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004be6:	6353      	str	r3, [r2, #52]	; 0x34
 8004be8:	e1b8      	b.n	8004f5c <Line_Track_Task+0x804>
		}
	}
	/*****Gyorsasági pálya üzemmód******/
	else if(mode == FAST)
 8004bea:	4b62      	ldr	r3, [pc, #392]	; (8004d74 <Line_Track_Task+0x61c>)
 8004bec:	781b      	ldrb	r3, [r3, #0]
 8004bee:	2b3f      	cmp	r3, #63	; 0x3f
 8004bf0:	f040 81b4 	bne.w	8004f5c <Line_Track_Task+0x804>
	{
		static uint8_t fast_mode_state=SC_MODE;

		if(G0_Read_Fast(huart_stm, huart_debugg)) return; //ha sikertelen az olvasás a G0 ból akkor nincs értelme az egésznek
 8004bf4:	68b9      	ldr	r1, [r7, #8]
 8004bf6:	68f8      	ldr	r0, [r7, #12]
 8004bf8:	f7ff fd3e 	bl	8004678 <G0_Read_Fast>
 8004bfc:	4603      	mov	r3, r0
 8004bfe:	2b00      	cmp	r3, #0
 8004c00:	f040 81be 	bne.w	8004f80 <Line_Track_Task+0x828>
		if((LINE_CNT<1 || LINE_CNT > 3) && !leaveLineEnabled) return;//ha nincs vonal a kocsi alatt
 8004c04:	4b50      	ldr	r3, [pc, #320]	; (8004d48 <Line_Track_Task+0x5f0>)
 8004c06:	785b      	ldrb	r3, [r3, #1]
 8004c08:	2b00      	cmp	r3, #0
 8004c0a:	d003      	beq.n	8004c14 <Line_Track_Task+0x4bc>
 8004c0c:	4b4e      	ldr	r3, [pc, #312]	; (8004d48 <Line_Track_Task+0x5f0>)
 8004c0e:	785b      	ldrb	r3, [r3, #1]
 8004c10:	2b03      	cmp	r3, #3
 8004c12:	d904      	bls.n	8004c1e <Line_Track_Task+0x4c6>
 8004c14:	4b58      	ldr	r3, [pc, #352]	; (8004d78 <Line_Track_Task+0x620>)
 8004c16:	781b      	ldrb	r3, [r3, #0]
 8004c18:	2b00      	cmp	r3, #0
 8004c1a:	f000 81b3 	beq.w	8004f84 <Line_Track_Task+0x82c>
		gamma = Fast_Mode(huart_debugg, &fast_mode_state, tick);
 8004c1e:	687a      	ldr	r2, [r7, #4]
 8004c20:	4956      	ldr	r1, [pc, #344]	; (8004d7c <Line_Track_Task+0x624>)
 8004c22:	68b8      	ldr	r0, [r7, #8]
 8004c24:	f000 f9d8 	bl	8004fd8 <Fast_Mode>
 8004c28:	eef0 7a40 	vmov.f32	s15, s0
 8004c2c:	4b49      	ldr	r3, [pc, #292]	; (8004d54 <Line_Track_Task+0x5fc>)
 8004c2e:	edc3 7a00 	vstr	s15, [r3]
		PHI = atan((L/(L+D_FRONT))*tan(gamma));
 8004c32:	4b48      	ldr	r3, [pc, #288]	; (8004d54 <Line_Track_Task+0x5fc>)
 8004c34:	681b      	ldr	r3, [r3, #0]
 8004c36:	4618      	mov	r0, r3
 8004c38:	f7fb fca6 	bl	8000588 <__aeabi_f2d>
 8004c3c:	4602      	mov	r2, r0
 8004c3e:	460b      	mov	r3, r1
 8004c40:	ec43 2b10 	vmov	d0, r2, r3
 8004c44:	f00b fb3c 	bl	80102c0 <tan>
 8004c48:	ec51 0b10 	vmov	r0, r1, d0
 8004c4c:	a33a      	add	r3, pc, #232	; (adr r3, 8004d38 <Line_Track_Task+0x5e0>)
 8004c4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c52:	f7fb fcf1 	bl	8000638 <__aeabi_dmul>
 8004c56:	4602      	mov	r2, r0
 8004c58:	460b      	mov	r3, r1
 8004c5a:	ec43 2b17 	vmov	d7, r2, r3
 8004c5e:	eeb0 0a47 	vmov.f32	s0, s14
 8004c62:	eef0 0a67 	vmov.f32	s1, s15
 8004c66:	f00b f97f 	bl	800ff68 <atan>
 8004c6a:	ec53 2b10 	vmov	r2, r3, d0
 8004c6e:	4610      	mov	r0, r2
 8004c70:	4619      	mov	r1, r3
 8004c72:	f7fb ffb9 	bl	8000be8 <__aeabi_d2f>
 8004c76:	4603      	mov	r3, r0
 8004c78:	4a37      	ldr	r2, [pc, #220]	; (8004d58 <Line_Track_Task+0x600>)
 8004c7a:	6013      	str	r3, [r2, #0]

		if(fast_mode_state==FREERUN_MODE)
 8004c7c:	4b3f      	ldr	r3, [pc, #252]	; (8004d7c <Line_Track_Task+0x624>)
 8004c7e:	781b      	ldrb	r3, [r3, #0]
 8004c80:	2b01      	cmp	r3, #1
 8004c82:	f040 80b9 	bne.w	8004df8 <Line_Track_Task+0x6a0>
		{
			if(v>2200)//egyenes
 8004c86:	4b3e      	ldr	r3, [pc, #248]	; (8004d80 <Line_Track_Task+0x628>)
 8004c88:	edd3 7a00 	vldr	s15, [r3]
 8004c8c:	ed9f 7a3d 	vldr	s14, [pc, #244]	; 8004d84 <Line_Track_Task+0x62c>
 8004c90:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004c94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004c98:	dd29      	ble.n	8004cee <Line_Track_Task+0x596>
			{
				ccr = (uint16_t)(-SERVO_M_STRAIGHT * PHI + SERVO_FRONT_CCR_MIDDLE);
 8004c9a:	4b2f      	ldr	r3, [pc, #188]	; (8004d58 <Line_Track_Task+0x600>)
 8004c9c:	edd3 7a00 	vldr	s15, [r3]
 8004ca0:	ed9f 7a39 	vldr	s14, [pc, #228]	; 8004d88 <Line_Track_Task+0x630>
 8004ca4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004ca8:	ed9f 7a31 	vldr	s14, [pc, #196]	; 8004d70 <Line_Track_Task+0x618>
 8004cac:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004cb0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004cb4:	ee17 3a90 	vmov	r3, s15
 8004cb8:	b29b      	uxth	r3, r3
 8004cba:	461a      	mov	r2, r3
 8004cbc:	4b29      	ldr	r3, [pc, #164]	; (8004d64 <Line_Track_Task+0x60c>)
 8004cbe:	601a      	str	r2, [r3, #0]
				FRONT_CCR(ccr);
 8004cc0:	4b28      	ldr	r3, [pc, #160]	; (8004d64 <Line_Track_Task+0x60c>)
 8004cc2:	681b      	ldr	r3, [r3, #0]
 8004cc4:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8004cc8:	dc07      	bgt.n	8004cda <Line_Track_Task+0x582>
 8004cca:	4b26      	ldr	r3, [pc, #152]	; (8004d64 <Line_Track_Task+0x60c>)
 8004ccc:	681b      	ldr	r3, [r3, #0]
 8004cce:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8004cd2:	bfb8      	it	lt
 8004cd4:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 8004cd8:	e001      	b.n	8004cde <Line_Track_Task+0x586>
 8004cda:	f44f 7361 	mov.w	r3, #900	; 0x384
 8004cde:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004ce2:	6353      	str	r3, [r2, #52]	; 0x34
				REAR_CCR(SERVO_REAR_CCR_MIDDLE);
 8004ce4:	4b20      	ldr	r3, [pc, #128]	; (8004d68 <Line_Track_Task+0x610>)
 8004ce6:	f44f 722a 	mov.w	r2, #680	; 0x2a8
 8004cea:	641a      	str	r2, [r3, #64]	; 0x40
 8004cec:	e136      	b.n	8004f5c <Line_Track_Task+0x804>
			}
			else//kanyar
			{
				//Első szervó
				ccr =(uint16_t)(-SERVO_M_CORNER * PHI + SERVO_FRONT_CCR_MIDDLE);
 8004cee:	4b1a      	ldr	r3, [pc, #104]	; (8004d58 <Line_Track_Task+0x600>)
 8004cf0:	edd3 7a00 	vldr	s15, [r3]
 8004cf4:	ed9f 7a25 	vldr	s14, [pc, #148]	; 8004d8c <Line_Track_Task+0x634>
 8004cf8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004cfc:	ed9f 7a1c 	vldr	s14, [pc, #112]	; 8004d70 <Line_Track_Task+0x618>
 8004d00:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004d04:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004d08:	ee17 3a90 	vmov	r3, s15
 8004d0c:	b29b      	uxth	r3, r3
 8004d0e:	461a      	mov	r2, r3
 8004d10:	4b14      	ldr	r3, [pc, #80]	; (8004d64 <Line_Track_Task+0x60c>)
 8004d12:	601a      	str	r2, [r3, #0]
				FRONT_CCR(ccr);
 8004d14:	4b13      	ldr	r3, [pc, #76]	; (8004d64 <Line_Track_Task+0x60c>)
 8004d16:	681b      	ldr	r3, [r3, #0]
 8004d18:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8004d1c:	dc38      	bgt.n	8004d90 <Line_Track_Task+0x638>
 8004d1e:	4b11      	ldr	r3, [pc, #68]	; (8004d64 <Line_Track_Task+0x60c>)
 8004d20:	681b      	ldr	r3, [r3, #0]
 8004d22:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8004d26:	bfb8      	it	lt
 8004d28:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 8004d2c:	e032      	b.n	8004d94 <Line_Track_Task+0x63c>
 8004d2e:	bf00      	nop
 8004d30:	a3f47e90 	.word	0xa3f47e90
 8004d34:	3fe8fd1f 	.word	0x3fe8fd1f
 8004d38:	c4830201 	.word	0xc4830201
 8004d3c:	3fe73a26 	.word	0x3fe73a26
 8004d40:	20000349 	.word	0x20000349
 8004d44:	20000338 	.word	0x20000338
 8004d48:	20000774 	.word	0x20000774
 8004d4c:	3d03126f 	.word	0x3d03126f
 8004d50:	3b449ba6 	.word	0x3b449ba6
 8004d54:	20000784 	.word	0x20000784
 8004d58:	20000788 	.word	0x20000788
 8004d5c:	44af0000 	.word	0x44af0000
 8004d60:	442a0000 	.word	0x442a0000
 8004d64:	2000004c 	.word	0x2000004c
 8004d68:	40010000 	.word	0x40010000
 8004d6c:	40080000 	.word	0x40080000
 8004d70:	442d0000 	.word	0x442d0000
 8004d74:	20000336 	.word	0x20000336
 8004d78:	2000033c 	.word	0x2000033c
 8004d7c:	2000078c 	.word	0x2000078c
 8004d80:	20000754 	.word	0x20000754
 8004d84:	45098000 	.word	0x45098000
 8004d88:	c4610000 	.word	0xc4610000
 8004d8c:	c47a0000 	.word	0xc47a0000
 8004d90:	f44f 7361 	mov.w	r3, #900	; 0x384
 8004d94:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004d98:	6353      	str	r3, [r2, #52]	; 0x34
				//Hátsó szervó
				PHI/= 2;
 8004d9a:	4b7c      	ldr	r3, [pc, #496]	; (8004f8c <Line_Track_Task+0x834>)
 8004d9c:	ed93 7a00 	vldr	s14, [r3]
 8004da0:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 8004da4:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8004da8:	4b78      	ldr	r3, [pc, #480]	; (8004f8c <Line_Track_Task+0x834>)
 8004daa:	edc3 7a00 	vstr	s15, [r3]
				ccr = (uint16_t)(-SERVO_M_CORNER * PHI + SERVO_REAR_CCR_MIDDLE);
 8004dae:	4b77      	ldr	r3, [pc, #476]	; (8004f8c <Line_Track_Task+0x834>)
 8004db0:	edd3 7a00 	vldr	s15, [r3]
 8004db4:	ed9f 7a76 	vldr	s14, [pc, #472]	; 8004f90 <Line_Track_Task+0x838>
 8004db8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004dbc:	ed9f 7a75 	vldr	s14, [pc, #468]	; 8004f94 <Line_Track_Task+0x83c>
 8004dc0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004dc4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004dc8:	ee17 3a90 	vmov	r3, s15
 8004dcc:	b29b      	uxth	r3, r3
 8004dce:	461a      	mov	r2, r3
 8004dd0:	4b71      	ldr	r3, [pc, #452]	; (8004f98 <Line_Track_Task+0x840>)
 8004dd2:	601a      	str	r2, [r3, #0]
				REAR_CCR(ccr);
 8004dd4:	4b70      	ldr	r3, [pc, #448]	; (8004f98 <Line_Track_Task+0x840>)
 8004dd6:	681b      	ldr	r3, [r3, #0]
 8004dd8:	f5b3 7f52 	cmp.w	r3, #840	; 0x348
 8004ddc:	dc07      	bgt.n	8004dee <Line_Track_Task+0x696>
 8004dde:	4b6e      	ldr	r3, [pc, #440]	; (8004f98 <Line_Track_Task+0x840>)
 8004de0:	681b      	ldr	r3, [r3, #0]
 8004de2:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 8004de6:	bfb8      	it	lt
 8004de8:	f44f 7302 	movlt.w	r3, #520	; 0x208
 8004dec:	e001      	b.n	8004df2 <Line_Track_Task+0x69a>
 8004dee:	f44f 7352 	mov.w	r3, #840	; 0x348
 8004df2:	4a6a      	ldr	r2, [pc, #424]	; (8004f9c <Line_Track_Task+0x844>)
 8004df4:	6413      	str	r3, [r2, #64]	; 0x40
 8004df6:	e0b1      	b.n	8004f5c <Line_Track_Task+0x804>
			}
		}
		else if(fast_mode_state==SC_MODE)
 8004df8:	4b69      	ldr	r3, [pc, #420]	; (8004fa0 <Line_Track_Task+0x848>)
 8004dfa:	781b      	ldrb	r3, [r3, #0]
 8004dfc:	2b00      	cmp	r3, #0
 8004dfe:	d153      	bne.n	8004ea8 <Line_Track_Task+0x750>
		{
			//Első szervó
			ccr = (uint16_t)(-SERVO_M_SC * PHI + SERVO_FRONT_CCR_MIDDLE);
 8004e00:	4b62      	ldr	r3, [pc, #392]	; (8004f8c <Line_Track_Task+0x834>)
 8004e02:	edd3 7a00 	vldr	s15, [r3]
 8004e06:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8004fa4 <Line_Track_Task+0x84c>
 8004e0a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004e0e:	ed9f 7a66 	vldr	s14, [pc, #408]	; 8004fa8 <Line_Track_Task+0x850>
 8004e12:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004e16:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004e1a:	ee17 3a90 	vmov	r3, s15
 8004e1e:	b29b      	uxth	r3, r3
 8004e20:	461a      	mov	r2, r3
 8004e22:	4b5d      	ldr	r3, [pc, #372]	; (8004f98 <Line_Track_Task+0x840>)
 8004e24:	601a      	str	r2, [r3, #0]
			FRONT_CCR(ccr);
 8004e26:	4b5c      	ldr	r3, [pc, #368]	; (8004f98 <Line_Track_Task+0x840>)
 8004e28:	681b      	ldr	r3, [r3, #0]
 8004e2a:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8004e2e:	dc07      	bgt.n	8004e40 <Line_Track_Task+0x6e8>
 8004e30:	4b59      	ldr	r3, [pc, #356]	; (8004f98 <Line_Track_Task+0x840>)
 8004e32:	681b      	ldr	r3, [r3, #0]
 8004e34:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8004e38:	bfb8      	it	lt
 8004e3a:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 8004e3e:	e001      	b.n	8004e44 <Line_Track_Task+0x6ec>
 8004e40:	f44f 7361 	mov.w	r3, #900	; 0x384
 8004e44:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004e48:	6353      	str	r3, [r2, #52]	; 0x34

			//Hátsó szervó
			PHI/= 3;
 8004e4a:	4b50      	ldr	r3, [pc, #320]	; (8004f8c <Line_Track_Task+0x834>)
 8004e4c:	ed93 7a00 	vldr	s14, [r3]
 8004e50:	eef0 6a08 	vmov.f32	s13, #8	; 0x40400000  3.0
 8004e54:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8004e58:	4b4c      	ldr	r3, [pc, #304]	; (8004f8c <Line_Track_Task+0x834>)
 8004e5a:	edc3 7a00 	vstr	s15, [r3]
			ccr = (uint16_t)(-SERVO_M_SC * PHI + SERVO_REAR_CCR_MIDDLE);
 8004e5e:	4b4b      	ldr	r3, [pc, #300]	; (8004f8c <Line_Track_Task+0x834>)
 8004e60:	edd3 7a00 	vldr	s15, [r3]
 8004e64:	ed9f 7a4f 	vldr	s14, [pc, #316]	; 8004fa4 <Line_Track_Task+0x84c>
 8004e68:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004e6c:	ed9f 7a49 	vldr	s14, [pc, #292]	; 8004f94 <Line_Track_Task+0x83c>
 8004e70:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004e74:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004e78:	ee17 3a90 	vmov	r3, s15
 8004e7c:	b29b      	uxth	r3, r3
 8004e7e:	461a      	mov	r2, r3
 8004e80:	4b45      	ldr	r3, [pc, #276]	; (8004f98 <Line_Track_Task+0x840>)
 8004e82:	601a      	str	r2, [r3, #0]
			REAR_CCR(ccr);
 8004e84:	4b44      	ldr	r3, [pc, #272]	; (8004f98 <Line_Track_Task+0x840>)
 8004e86:	681b      	ldr	r3, [r3, #0]
 8004e88:	f5b3 7f52 	cmp.w	r3, #840	; 0x348
 8004e8c:	dc07      	bgt.n	8004e9e <Line_Track_Task+0x746>
 8004e8e:	4b42      	ldr	r3, [pc, #264]	; (8004f98 <Line_Track_Task+0x840>)
 8004e90:	681b      	ldr	r3, [r3, #0]
 8004e92:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 8004e96:	bfb8      	it	lt
 8004e98:	f44f 7302 	movlt.w	r3, #520	; 0x208
 8004e9c:	e001      	b.n	8004ea2 <Line_Track_Task+0x74a>
 8004e9e:	f44f 7352 	mov.w	r3, #840	; 0x348
 8004ea2:	4a3e      	ldr	r2, [pc, #248]	; (8004f9c <Line_Track_Task+0x844>)
 8004ea4:	6413      	str	r3, [r2, #64]	; 0x40
 8004ea6:	e059      	b.n	8004f5c <Line_Track_Task+0x804>
		}
		else if(fast_mode_state==OVERTAKE_MODE)
 8004ea8:	4b3d      	ldr	r3, [pc, #244]	; (8004fa0 <Line_Track_Task+0x848>)
 8004eaa:	781b      	ldrb	r3, [r3, #0]
 8004eac:	2b02      	cmp	r3, #2
 8004eae:	d155      	bne.n	8004f5c <Line_Track_Task+0x804>
		{
			static uint8_t overtake_state=0;
			static uint32_t t_stamp_overtake=0;
			if(overtake_state==0)
 8004eb0:	4b3e      	ldr	r3, [pc, #248]	; (8004fac <Line_Track_Task+0x854>)
 8004eb2:	781b      	ldrb	r3, [r3, #0]
 8004eb4:	2b00      	cmp	r3, #0
 8004eb6:	d115      	bne.n	8004ee4 <Line_Track_Task+0x78c>
			{
				v_ref=1600;
 8004eb8:	4b3d      	ldr	r3, [pc, #244]	; (8004fb0 <Line_Track_Task+0x858>)
 8004eba:	4a3e      	ldr	r2, [pc, #248]	; (8004fb4 <Line_Track_Task+0x85c>)
 8004ebc:	601a      	str	r2, [r3, #0]
				t_stamp_overtake=tick;
 8004ebe:	4a3e      	ldr	r2, [pc, #248]	; (8004fb8 <Line_Track_Task+0x860>)
 8004ec0:	687b      	ldr	r3, [r7, #4]
 8004ec2:	6013      	str	r3, [r2, #0]
				leaveLineEnabled=1;
 8004ec4:	4b3d      	ldr	r3, [pc, #244]	; (8004fbc <Line_Track_Task+0x864>)
 8004ec6:	2201      	movs	r2, #1
 8004ec8:	701a      	strb	r2, [r3, #0]
				FRONT_CCR(SERVO_FRONT_CCR_MIDDLE+160);
 8004eca:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004ece:	f44f 7255 	mov.w	r2, #852	; 0x354
 8004ed2:	635a      	str	r2, [r3, #52]	; 0x34
				REAR_CCR(SERVO_REAR_CCR_MIDDLE-150);
 8004ed4:	4b31      	ldr	r3, [pc, #196]	; (8004f9c <Line_Track_Task+0x844>)
 8004ed6:	f240 2212 	movw	r2, #530	; 0x212
 8004eda:	641a      	str	r2, [r3, #64]	; 0x40
				overtake_state=1;
 8004edc:	4b33      	ldr	r3, [pc, #204]	; (8004fac <Line_Track_Task+0x854>)
 8004ede:	2201      	movs	r2, #1
 8004ee0:	701a      	strb	r2, [r3, #0]
 8004ee2:	e03b      	b.n	8004f5c <Line_Track_Task+0x804>
			}
			else if(overtake_state==1 && (tick-t_stamp_overtake)>2200)
 8004ee4:	4b31      	ldr	r3, [pc, #196]	; (8004fac <Line_Track_Task+0x854>)
 8004ee6:	781b      	ldrb	r3, [r3, #0]
 8004ee8:	2b01      	cmp	r3, #1
 8004eea:	d11d      	bne.n	8004f28 <Line_Track_Task+0x7d0>
 8004eec:	4b32      	ldr	r3, [pc, #200]	; (8004fb8 <Line_Track_Task+0x860>)
 8004eee:	681b      	ldr	r3, [r3, #0]
 8004ef0:	687a      	ldr	r2, [r7, #4]
 8004ef2:	1ad3      	subs	r3, r2, r3
 8004ef4:	f640 0298 	movw	r2, #2200	; 0x898
 8004ef8:	4293      	cmp	r3, r2
 8004efa:	d915      	bls.n	8004f28 <Line_Track_Task+0x7d0>
			{
				v_ref=3000;
 8004efc:	4b2c      	ldr	r3, [pc, #176]	; (8004fb0 <Line_Track_Task+0x858>)
 8004efe:	4a30      	ldr	r2, [pc, #192]	; (8004fc0 <Line_Track_Task+0x868>)
 8004f00:	601a      	str	r2, [r3, #0]
				LED_Y(1);
 8004f02:	2200      	movs	r2, #0
 8004f04:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004f08:	482e      	ldr	r0, [pc, #184]	; (8004fc4 <Line_Track_Task+0x86c>)
 8004f0a:	f004 faf9 	bl	8009500 <HAL_GPIO_WritePin>
				//FRONT_CCR(SERVO_FRONT_CCR_MIDDLE-50);
				TIM2->CCR1=SERVO_FRONT_CCR_MIDDLE-70;
 8004f0e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004f12:	f240 226e 	movw	r2, #622	; 0x26e
 8004f16:	635a      	str	r2, [r3, #52]	; 0x34
				TIM1->CCR4=SERVO_REAR_CCR_MIDDLE+50;
 8004f18:	4b20      	ldr	r3, [pc, #128]	; (8004f9c <Line_Track_Task+0x844>)
 8004f1a:	f240 22da 	movw	r2, #730	; 0x2da
 8004f1e:	641a      	str	r2, [r3, #64]	; 0x40
				//REAR_CCR(SERVO_REAR_CCR_MIDDLE+50);
				overtake_state=2;
 8004f20:	4b22      	ldr	r3, [pc, #136]	; (8004fac <Line_Track_Task+0x854>)
 8004f22:	2202      	movs	r2, #2
 8004f24:	701a      	strb	r2, [r3, #0]
 8004f26:	e019      	b.n	8004f5c <Line_Track_Task+0x804>
			}
			else if(overtake_state==2 && LINE_CNT>0)
 8004f28:	4b20      	ldr	r3, [pc, #128]	; (8004fac <Line_Track_Task+0x854>)
 8004f2a:	781b      	ldrb	r3, [r3, #0]
 8004f2c:	2b02      	cmp	r3, #2
 8004f2e:	d115      	bne.n	8004f5c <Line_Track_Task+0x804>
 8004f30:	4b25      	ldr	r3, [pc, #148]	; (8004fc8 <Line_Track_Task+0x870>)
 8004f32:	785b      	ldrb	r3, [r3, #1]
 8004f34:	2b00      	cmp	r3, #0
 8004f36:	d011      	beq.n	8004f5c <Line_Track_Task+0x804>
			{
				v_ref=1200;
 8004f38:	4b1d      	ldr	r3, [pc, #116]	; (8004fb0 <Line_Track_Task+0x858>)
 8004f3a:	4a24      	ldr	r2, [pc, #144]	; (8004fcc <Line_Track_Task+0x874>)
 8004f3c:	601a      	str	r2, [r3, #0]
				overtake_state=0;
 8004f3e:	4b1b      	ldr	r3, [pc, #108]	; (8004fac <Line_Track_Task+0x854>)
 8004f40:	2200      	movs	r2, #0
 8004f42:	701a      	strb	r2, [r3, #0]
				fast_mode_state=FREERUN_MODE;
 8004f44:	4b16      	ldr	r3, [pc, #88]	; (8004fa0 <Line_Track_Task+0x848>)
 8004f46:	2201      	movs	r2, #1
 8004f48:	701a      	strb	r2, [r3, #0]
				leaveLineEnabled=0;
 8004f4a:	4b1c      	ldr	r3, [pc, #112]	; (8004fbc <Line_Track_Task+0x864>)
 8004f4c:	2200      	movs	r2, #0
 8004f4e:	701a      	strb	r2, [r3, #0]
				LED_Y(0);
 8004f50:	2201      	movs	r2, #1
 8004f52:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004f56:	481b      	ldr	r0, [pc, #108]	; (8004fc4 <Line_Track_Task+0x86c>)
 8004f58:	f004 fad2 	bl	8009500 <HAL_GPIO_WritePin>
			}
		}
	}

	tick_prev=tick;
 8004f5c:	4a1c      	ldr	r2, [pc, #112]	; (8004fd0 <Line_Track_Task+0x878>)
 8004f5e:	687b      	ldr	r3, [r7, #4]
 8004f60:	6013      	str	r3, [r2, #0]
 8004f62:	e010      	b.n	8004f86 <Line_Track_Task+0x82e>
	if(line_track_task_tick>tick) return;
 8004f64:	bf00      	nop
 8004f66:	e00e      	b.n	8004f86 <Line_Track_Task+0x82e>
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_FORWARD))return;
 8004f68:	bf00      	nop
 8004f6a:	e00c      	b.n	8004f86 <Line_Track_Task+0x82e>
			if(tmp)return;
 8004f6c:	bf00      	nop
 8004f6e:	e00a      	b.n	8004f86 <Line_Track_Task+0x82e>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 8004f70:	bf00      	nop
 8004f72:	e008      	b.n	8004f86 <Line_Track_Task+0x82e>
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_REVERSE))return;
 8004f74:	bf00      	nop
 8004f76:	e006      	b.n	8004f86 <Line_Track_Task+0x82e>
			if(tmp)return;
 8004f78:	bf00      	nop
 8004f7a:	e004      	b.n	8004f86 <Line_Track_Task+0x82e>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 8004f7c:	bf00      	nop
 8004f7e:	e002      	b.n	8004f86 <Line_Track_Task+0x82e>
		if(G0_Read_Fast(huart_stm, huart_debugg)) return; //ha sikertelen az olvasás a G0 ból akkor nincs értelme az egésznek
 8004f80:	bf00      	nop
 8004f82:	e000      	b.n	8004f86 <Line_Track_Task+0x82e>
		if((LINE_CNT<1 || LINE_CNT > 3) && !leaveLineEnabled) return;//ha nincs vonal a kocsi alatt
 8004f84:	bf00      	nop
}
 8004f86:	3718      	adds	r7, #24
 8004f88:	46bd      	mov	sp, r7
 8004f8a:	bd80      	pop	{r7, pc}
 8004f8c:	20000788 	.word	0x20000788
 8004f90:	c47a0000 	.word	0xc47a0000
 8004f94:	442a0000 	.word	0x442a0000
 8004f98:	2000004c 	.word	0x2000004c
 8004f9c:	40010000 	.word	0x40010000
 8004fa0:	2000078c 	.word	0x2000078c
 8004fa4:	c4a28000 	.word	0xc4a28000
 8004fa8:	442d0000 	.word	0x442d0000
 8004fac:	2000078d 	.word	0x2000078d
 8004fb0:	20000338 	.word	0x20000338
 8004fb4:	44c80000 	.word	0x44c80000
 8004fb8:	20000790 	.word	0x20000790
 8004fbc:	2000033c 	.word	0x2000033c
 8004fc0:	453b8000 	.word	0x453b8000
 8004fc4:	40020400 	.word	0x40020400
 8004fc8:	20000774 	.word	0x20000774
 8004fcc:	44960000 	.word	0x44960000
 8004fd0:	20000794 	.word	0x20000794
 8004fd4:	00000000 	.word	0x00000000

08004fd8 <Fast_Mode>:

float Fast_Mode(UART_HandleTypeDef *huart_debugg,uint8_t* state_pointer, uint32_t t)
{
 8004fd8:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8004fdc:	b088      	sub	sp, #32
 8004fde:	af00      	add	r7, sp, #0
 8004fe0:	60f8      	str	r0, [r7, #12]
 8004fe2:	60b9      	str	r1, [r7, #8]
 8004fe4:	607a      	str	r2, [r7, #4]
	static float x_elso_prev=0;
	static float x_hatso;
	static float delta;
	static float gamma;

	uint8_t state = *state_pointer;
 8004fe6:	68bb      	ldr	r3, [r7, #8]
 8004fe8:	781b      	ldrb	r3, [r3, #0]
 8004fea:	77fb      	strb	r3, [r7, #31]

	if(state==OVERTAKE_MODE)return 0;
 8004fec:	7ffb      	ldrb	r3, [r7, #31]
 8004fee:	2b02      	cmp	r3, #2
 8004ff0:	d102      	bne.n	8004ff8 <Fast_Mode+0x20>
 8004ff2:	f04f 0300 	mov.w	r3, #0
 8004ff6:	e2df      	b.n	80055b8 <Fast_Mode+0x5e0>
/**/
	//BOOST detect
	if(LINE_CNT != lineCnt_prev && (LINE_CNT==1 || LINE_CNT==3)) //ha változik az alattunk lévő vonalak száma 1 és 3 közt
 8004ff8:	4bad      	ldr	r3, [pc, #692]	; (80052b0 <Fast_Mode+0x2d8>)
 8004ffa:	785a      	ldrb	r2, [r3, #1]
 8004ffc:	4bad      	ldr	r3, [pc, #692]	; (80052b4 <Fast_Mode+0x2dc>)
 8004ffe:	781b      	ldrb	r3, [r3, #0]
 8005000:	429a      	cmp	r2, r3
 8005002:	f000 80cf 	beq.w	80051a4 <Fast_Mode+0x1cc>
 8005006:	4baa      	ldr	r3, [pc, #680]	; (80052b0 <Fast_Mode+0x2d8>)
 8005008:	785b      	ldrb	r3, [r3, #1]
 800500a:	2b01      	cmp	r3, #1
 800500c:	d004      	beq.n	8005018 <Fast_Mode+0x40>
 800500e:	4ba8      	ldr	r3, [pc, #672]	; (80052b0 <Fast_Mode+0x2d8>)
 8005010:	785b      	ldrb	r3, [r3, #1]
 8005012:	2b03      	cmp	r3, #3
 8005014:	f040 80c6 	bne.w	80051a4 <Fast_Mode+0x1cc>
	{
		ds[index]=fabs(v)*(t-t_stamp_boost)/1000;
 8005018:	4ba7      	ldr	r3, [pc, #668]	; (80052b8 <Fast_Mode+0x2e0>)
 800501a:	edd3 7a00 	vldr	s15, [r3]
 800501e:	eef0 7ae7 	vabs.f32	s15, s15
 8005022:	ee17 0a90 	vmov	r0, s15
 8005026:	f7fb faaf 	bl	8000588 <__aeabi_f2d>
 800502a:	4604      	mov	r4, r0
 800502c:	460d      	mov	r5, r1
 800502e:	4ba3      	ldr	r3, [pc, #652]	; (80052bc <Fast_Mode+0x2e4>)
 8005030:	681b      	ldr	r3, [r3, #0]
 8005032:	687a      	ldr	r2, [r7, #4]
 8005034:	1ad3      	subs	r3, r2, r3
 8005036:	4618      	mov	r0, r3
 8005038:	f7fb fa84 	bl	8000544 <__aeabi_ui2d>
 800503c:	4602      	mov	r2, r0
 800503e:	460b      	mov	r3, r1
 8005040:	4620      	mov	r0, r4
 8005042:	4629      	mov	r1, r5
 8005044:	f7fb faf8 	bl	8000638 <__aeabi_dmul>
 8005048:	4602      	mov	r2, r0
 800504a:	460b      	mov	r3, r1
 800504c:	4610      	mov	r0, r2
 800504e:	4619      	mov	r1, r3
 8005050:	f04f 0200 	mov.w	r2, #0
 8005054:	4b9a      	ldr	r3, [pc, #616]	; (80052c0 <Fast_Mode+0x2e8>)
 8005056:	f7fb fc19 	bl	800088c <__aeabi_ddiv>
 800505a:	4602      	mov	r2, r0
 800505c:	460b      	mov	r3, r1
 800505e:	4999      	ldr	r1, [pc, #612]	; (80052c4 <Fast_Mode+0x2ec>)
 8005060:	7809      	ldrb	r1, [r1, #0]
 8005062:	460c      	mov	r4, r1
 8005064:	4610      	mov	r0, r2
 8005066:	4619      	mov	r1, r3
 8005068:	f7fb fdbe 	bl	8000be8 <__aeabi_d2f>
 800506c:	4602      	mov	r2, r0
 800506e:	4996      	ldr	r1, [pc, #600]	; (80052c8 <Fast_Mode+0x2f0>)
 8005070:	00a3      	lsls	r3, r4, #2
 8005072:	440b      	add	r3, r1
 8005074:	601a      	str	r2, [r3, #0]
		float s_boost = ds[0]+ds[1]+ds[2]+ds[3]+ds[4]+ds[5]+ds[6]+ds[7];
 8005076:	4b94      	ldr	r3, [pc, #592]	; (80052c8 <Fast_Mode+0x2f0>)
 8005078:	ed93 7a00 	vldr	s14, [r3]
 800507c:	4b92      	ldr	r3, [pc, #584]	; (80052c8 <Fast_Mode+0x2f0>)
 800507e:	edd3 7a01 	vldr	s15, [r3, #4]
 8005082:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005086:	4b90      	ldr	r3, [pc, #576]	; (80052c8 <Fast_Mode+0x2f0>)
 8005088:	edd3 7a02 	vldr	s15, [r3, #8]
 800508c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005090:	4b8d      	ldr	r3, [pc, #564]	; (80052c8 <Fast_Mode+0x2f0>)
 8005092:	edd3 7a03 	vldr	s15, [r3, #12]
 8005096:	ee37 7a27 	vadd.f32	s14, s14, s15
 800509a:	4b8b      	ldr	r3, [pc, #556]	; (80052c8 <Fast_Mode+0x2f0>)
 800509c:	edd3 7a04 	vldr	s15, [r3, #16]
 80050a0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80050a4:	4b88      	ldr	r3, [pc, #544]	; (80052c8 <Fast_Mode+0x2f0>)
 80050a6:	edd3 7a05 	vldr	s15, [r3, #20]
 80050aa:	ee37 7a27 	vadd.f32	s14, s14, s15
 80050ae:	4b86      	ldr	r3, [pc, #536]	; (80052c8 <Fast_Mode+0x2f0>)
 80050b0:	edd3 7a06 	vldr	s15, [r3, #24]
 80050b4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80050b8:	4b83      	ldr	r3, [pc, #524]	; (80052c8 <Fast_Mode+0x2f0>)
 80050ba:	edd3 7a07 	vldr	s15, [r3, #28]
 80050be:	ee77 7a27 	vadd.f32	s15, s14, s15
 80050c2:	edc7 7a06 	vstr	s15, [r7, #24]
		if(s_boost>250.0 && s_boost<800.0 && boostOrBrake==1) // ha 25 és 80 cm közt bekövetkezik 8 vonalszámváltás
 80050c6:	edd7 7a06 	vldr	s15, [r7, #24]
 80050ca:	ed9f 7a80 	vldr	s14, [pc, #512]	; 80052cc <Fast_Mode+0x2f4>
 80050ce:	eef4 7ac7 	vcmpe.f32	s15, s14
 80050d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80050d6:	dd55      	ble.n	8005184 <Fast_Mode+0x1ac>
 80050d8:	edd7 7a06 	vldr	s15, [r7, #24]
 80050dc:	ed9f 7a7c 	vldr	s14, [pc, #496]	; 80052d0 <Fast_Mode+0x2f8>
 80050e0:	eef4 7ac7 	vcmpe.f32	s15, s14
 80050e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80050e8:	d54c      	bpl.n	8005184 <Fast_Mode+0x1ac>
 80050ea:	4b7a      	ldr	r3, [pc, #488]	; (80052d4 <Fast_Mode+0x2fc>)
 80050ec:	781b      	ldrb	r3, [r3, #0]
 80050ee:	2b01      	cmp	r3, #1
 80050f0:	d148      	bne.n	8005184 <Fast_Mode+0x1ac>
		{
			LED_B(1);
 80050f2:	2200      	movs	r2, #0
 80050f4:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80050f8:	4877      	ldr	r0, [pc, #476]	; (80052d8 <Fast_Mode+0x300>)
 80050fa:	f004 fa01 	bl	8009500 <HAL_GPIO_WritePin>
			boostOrBrake=2;
 80050fe:	4b75      	ldr	r3, [pc, #468]	; (80052d4 <Fast_Mode+0x2fc>)
 8005100:	2202      	movs	r2, #2
 8005102:	701a      	strb	r2, [r3, #0]
			if(straightSpeed[boostCnt]==SC_MODE)state=SC_MODE;
 8005104:	4b75      	ldr	r3, [pc, #468]	; (80052dc <Fast_Mode+0x304>)
 8005106:	881b      	ldrh	r3, [r3, #0]
 8005108:	461a      	mov	r2, r3
 800510a:	4b75      	ldr	r3, [pc, #468]	; (80052e0 <Fast_Mode+0x308>)
 800510c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005110:	2b00      	cmp	r3, #0
 8005112:	d102      	bne.n	800511a <Fast_Mode+0x142>
 8005114:	2300      	movs	r3, #0
 8005116:	77fb      	strb	r3, [r7, #31]
 8005118:	e02e      	b.n	8005178 <Fast_Mode+0x1a0>
			else if(straightSpeed[boostCnt]==OVERTAKE_MODE && !ot_delay)
 800511a:	4b70      	ldr	r3, [pc, #448]	; (80052dc <Fast_Mode+0x304>)
 800511c:	881b      	ldrh	r3, [r3, #0]
 800511e:	461a      	mov	r2, r3
 8005120:	4b6f      	ldr	r3, [pc, #444]	; (80052e0 <Fast_Mode+0x308>)
 8005122:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005126:	2b02      	cmp	r3, #2
 8005128:	d10a      	bne.n	8005140 <Fast_Mode+0x168>
 800512a:	4b6e      	ldr	r3, [pc, #440]	; (80052e4 <Fast_Mode+0x30c>)
 800512c:	781b      	ldrb	r3, [r3, #0]
 800512e:	2b00      	cmp	r3, #0
 8005130:	d106      	bne.n	8005140 <Fast_Mode+0x168>
			{
				ot_delay=1;
 8005132:	4b6c      	ldr	r3, [pc, #432]	; (80052e4 <Fast_Mode+0x30c>)
 8005134:	2201      	movs	r2, #1
 8005136:	701a      	strb	r2, [r3, #0]
				t_overtake=t;
 8005138:	4a6b      	ldr	r2, [pc, #428]	; (80052e8 <Fast_Mode+0x310>)
 800513a:	687b      	ldr	r3, [r7, #4]
 800513c:	6013      	str	r3, [r2, #0]
 800513e:	e01b      	b.n	8005178 <Fast_Mode+0x1a0>

			}
			else if(straightSpeed[boostCnt]==-1) motorEnLineOk=0;
 8005140:	4b66      	ldr	r3, [pc, #408]	; (80052dc <Fast_Mode+0x304>)
 8005142:	881b      	ldrh	r3, [r3, #0]
 8005144:	461a      	mov	r2, r3
 8005146:	4b66      	ldr	r3, [pc, #408]	; (80052e0 <Fast_Mode+0x308>)
 8005148:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800514c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005150:	d103      	bne.n	800515a <Fast_Mode+0x182>
 8005152:	4b66      	ldr	r3, [pc, #408]	; (80052ec <Fast_Mode+0x314>)
 8005154:	2200      	movs	r2, #0
 8005156:	701a      	strb	r2, [r3, #0]
 8005158:	e00e      	b.n	8005178 <Fast_Mode+0x1a0>
			else
			{
				state=FREERUN_MODE;
 800515a:	2301      	movs	r3, #1
 800515c:	77fb      	strb	r3, [r7, #31]
				v_ref=straightSpeed[boostCnt];
 800515e:	4b5f      	ldr	r3, [pc, #380]	; (80052dc <Fast_Mode+0x304>)
 8005160:	881b      	ldrh	r3, [r3, #0]
 8005162:	461a      	mov	r2, r3
 8005164:	4b5e      	ldr	r3, [pc, #376]	; (80052e0 <Fast_Mode+0x308>)
 8005166:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800516a:	ee07 3a90 	vmov	s15, r3
 800516e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005172:	4b5f      	ldr	r3, [pc, #380]	; (80052f0 <Fast_Mode+0x318>)
 8005174:	edc3 7a00 	vstr	s15, [r3]
			}
			boostCnt++;
 8005178:	4b58      	ldr	r3, [pc, #352]	; (80052dc <Fast_Mode+0x304>)
 800517a:	881b      	ldrh	r3, [r3, #0]
 800517c:	3301      	adds	r3, #1
 800517e:	b29a      	uxth	r2, r3
 8005180:	4b56      	ldr	r3, [pc, #344]	; (80052dc <Fast_Mode+0x304>)
 8005182:	801a      	strh	r2, [r3, #0]
		}
		index++;
 8005184:	4b4f      	ldr	r3, [pc, #316]	; (80052c4 <Fast_Mode+0x2ec>)
 8005186:	781b      	ldrb	r3, [r3, #0]
 8005188:	3301      	adds	r3, #1
 800518a:	b2da      	uxtb	r2, r3
 800518c:	4b4d      	ldr	r3, [pc, #308]	; (80052c4 <Fast_Mode+0x2ec>)
 800518e:	701a      	strb	r2, [r3, #0]
		if(index>7) index=0;
 8005190:	4b4c      	ldr	r3, [pc, #304]	; (80052c4 <Fast_Mode+0x2ec>)
 8005192:	781b      	ldrb	r3, [r3, #0]
 8005194:	2b07      	cmp	r3, #7
 8005196:	d902      	bls.n	800519e <Fast_Mode+0x1c6>
 8005198:	4b4a      	ldr	r3, [pc, #296]	; (80052c4 <Fast_Mode+0x2ec>)
 800519a:	2200      	movs	r2, #0
 800519c:	701a      	strb	r2, [r3, #0]
		t_stamp_boost = t;
 800519e:	4a47      	ldr	r2, [pc, #284]	; (80052bc <Fast_Mode+0x2e4>)
 80051a0:	687b      	ldr	r3, [r7, #4]
 80051a2:	6013      	str	r3, [r2, #0]
	}
	lineCnt_prev = LINE_CNT; //az előző értéket a jelenlegihez hangoljuk
 80051a4:	4b42      	ldr	r3, [pc, #264]	; (80052b0 <Fast_Mode+0x2d8>)
 80051a6:	785a      	ldrb	r2, [r3, #1]
 80051a8:	4b42      	ldr	r3, [pc, #264]	; (80052b4 <Fast_Mode+0x2dc>)
 80051aa:	701a      	strb	r2, [r3, #0]
	if(ot_delay && (t-t_overtake)>1000)
 80051ac:	4b4d      	ldr	r3, [pc, #308]	; (80052e4 <Fast_Mode+0x30c>)
 80051ae:	781b      	ldrb	r3, [r3, #0]
 80051b0:	2b00      	cmp	r3, #0
 80051b2:	d00f      	beq.n	80051d4 <Fast_Mode+0x1fc>
 80051b4:	4b4c      	ldr	r3, [pc, #304]	; (80052e8 <Fast_Mode+0x310>)
 80051b6:	681b      	ldr	r3, [r3, #0]
 80051b8:	687a      	ldr	r2, [r7, #4]
 80051ba:	1ad3      	subs	r3, r2, r3
 80051bc:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80051c0:	d908      	bls.n	80051d4 <Fast_Mode+0x1fc>
	{
		*state_pointer=OVERTAKE_MODE;
 80051c2:	68bb      	ldr	r3, [r7, #8]
 80051c4:	2202      	movs	r2, #2
 80051c6:	701a      	strb	r2, [r3, #0]
		ot_delay=0;
 80051c8:	4b46      	ldr	r3, [pc, #280]	; (80052e4 <Fast_Mode+0x30c>)
 80051ca:	2200      	movs	r2, #0
 80051cc:	701a      	strb	r2, [r3, #0]
		return 0;
 80051ce:	f04f 0300 	mov.w	r3, #0
 80051d2:	e1f1      	b.n	80055b8 <Fast_Mode+0x5e0>
	}

	//BRAKING detect -> erre csak gyors üzemmódban van szükség
	if(LINE_CNT > 1) //ha 3 vonalat érzékelünk
 80051d4:	4b36      	ldr	r3, [pc, #216]	; (80052b0 <Fast_Mode+0x2d8>)
 80051d6:	785b      	ldrb	r3, [r3, #1]
 80051d8:	2b01      	cmp	r3, #1
 80051da:	f240 8093 	bls.w	8005304 <Fast_Mode+0x32c>
	{
		s_brake += fabs(v)*(t-t_prev)/1000;
 80051de:	4b45      	ldr	r3, [pc, #276]	; (80052f4 <Fast_Mode+0x31c>)
 80051e0:	681b      	ldr	r3, [r3, #0]
 80051e2:	4618      	mov	r0, r3
 80051e4:	f7fb f9d0 	bl	8000588 <__aeabi_f2d>
 80051e8:	4604      	mov	r4, r0
 80051ea:	460d      	mov	r5, r1
 80051ec:	4b32      	ldr	r3, [pc, #200]	; (80052b8 <Fast_Mode+0x2e0>)
 80051ee:	edd3 7a00 	vldr	s15, [r3]
 80051f2:	eef0 7ae7 	vabs.f32	s15, s15
 80051f6:	ee17 0a90 	vmov	r0, s15
 80051fa:	f7fb f9c5 	bl	8000588 <__aeabi_f2d>
 80051fe:	4680      	mov	r8, r0
 8005200:	4689      	mov	r9, r1
 8005202:	4b3d      	ldr	r3, [pc, #244]	; (80052f8 <Fast_Mode+0x320>)
 8005204:	681b      	ldr	r3, [r3, #0]
 8005206:	687a      	ldr	r2, [r7, #4]
 8005208:	1ad3      	subs	r3, r2, r3
 800520a:	4618      	mov	r0, r3
 800520c:	f7fb f99a 	bl	8000544 <__aeabi_ui2d>
 8005210:	4602      	mov	r2, r0
 8005212:	460b      	mov	r3, r1
 8005214:	4640      	mov	r0, r8
 8005216:	4649      	mov	r1, r9
 8005218:	f7fb fa0e 	bl	8000638 <__aeabi_dmul>
 800521c:	4602      	mov	r2, r0
 800521e:	460b      	mov	r3, r1
 8005220:	4610      	mov	r0, r2
 8005222:	4619      	mov	r1, r3
 8005224:	f04f 0200 	mov.w	r2, #0
 8005228:	4b25      	ldr	r3, [pc, #148]	; (80052c0 <Fast_Mode+0x2e8>)
 800522a:	f7fb fb2f 	bl	800088c <__aeabi_ddiv>
 800522e:	4602      	mov	r2, r0
 8005230:	460b      	mov	r3, r1
 8005232:	4620      	mov	r0, r4
 8005234:	4629      	mov	r1, r5
 8005236:	f7fb f849 	bl	80002cc <__adddf3>
 800523a:	4602      	mov	r2, r0
 800523c:	460b      	mov	r3, r1
 800523e:	4610      	mov	r0, r2
 8005240:	4619      	mov	r1, r3
 8005242:	f7fb fcd1 	bl	8000be8 <__aeabi_d2f>
 8005246:	4603      	mov	r3, r0
 8005248:	4a2a      	ldr	r2, [pc, #168]	; (80052f4 <Fast_Mode+0x31c>)
 800524a:	6013      	str	r3, [r2, #0]
		if(s_brake>300) //ha már legalább 30cm óta folyamatosan 3 vonal van alattunk
 800524c:	4b29      	ldr	r3, [pc, #164]	; (80052f4 <Fast_Mode+0x31c>)
 800524e:	edd3 7a00 	vldr	s15, [r3]
 8005252:	ed9f 7a2a 	vldr	s14, [pc, #168]	; 80052fc <Fast_Mode+0x324>
 8005256:	eef4 7ac7 	vcmpe.f32	s15, s14
 800525a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800525e:	dd55      	ble.n	800530c <Fast_Mode+0x334>
		{
			boostOrBrake=1;
 8005260:	4b1c      	ldr	r3, [pc, #112]	; (80052d4 <Fast_Mode+0x2fc>)
 8005262:	2201      	movs	r2, #1
 8005264:	701a      	strb	r2, [r3, #0]
			if(state == FREERUN_MODE)
 8005266:	7ffb      	ldrb	r3, [r7, #31]
 8005268:	2b01      	cmp	r3, #1
 800526a:	d14f      	bne.n	800530c <Fast_Mode+0x334>
			{
				if(cornerSpeed[boostCnt]==-1)motorEnLineOk=0;
 800526c:	4b1b      	ldr	r3, [pc, #108]	; (80052dc <Fast_Mode+0x304>)
 800526e:	881b      	ldrh	r3, [r3, #0]
 8005270:	461a      	mov	r2, r3
 8005272:	4b23      	ldr	r3, [pc, #140]	; (8005300 <Fast_Mode+0x328>)
 8005274:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005278:	f1b3 3fff 	cmp.w	r3, #4294967295
 800527c:	d103      	bne.n	8005286 <Fast_Mode+0x2ae>
 800527e:	4b1b      	ldr	r3, [pc, #108]	; (80052ec <Fast_Mode+0x314>)
 8005280:	2200      	movs	r2, #0
 8005282:	701a      	strb	r2, [r3, #0]
 8005284:	e00c      	b.n	80052a0 <Fast_Mode+0x2c8>
				else v_ref = cornerSpeed[boostCnt];
 8005286:	4b15      	ldr	r3, [pc, #84]	; (80052dc <Fast_Mode+0x304>)
 8005288:	881b      	ldrh	r3, [r3, #0]
 800528a:	461a      	mov	r2, r3
 800528c:	4b1c      	ldr	r3, [pc, #112]	; (8005300 <Fast_Mode+0x328>)
 800528e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005292:	ee07 3a90 	vmov	s15, r3
 8005296:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800529a:	4b15      	ldr	r3, [pc, #84]	; (80052f0 <Fast_Mode+0x318>)
 800529c:	edc3 7a00 	vstr	s15, [r3]
				LED_B(0);
 80052a0:	2201      	movs	r2, #1
 80052a2:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80052a6:	480c      	ldr	r0, [pc, #48]	; (80052d8 <Fast_Mode+0x300>)
 80052a8:	f004 f92a 	bl	8009500 <HAL_GPIO_WritePin>
 80052ac:	e02e      	b.n	800530c <Fast_Mode+0x334>
 80052ae:	bf00      	nop
 80052b0:	20000774 	.word	0x20000774
 80052b4:	20000050 	.word	0x20000050
 80052b8:	20000754 	.word	0x20000754
 80052bc:	20000798 	.word	0x20000798
 80052c0:	408f4000 	.word	0x408f4000
 80052c4:	2000079c 	.word	0x2000079c
 80052c8:	20000054 	.word	0x20000054
 80052cc:	437a0000 	.word	0x437a0000
 80052d0:	44480000 	.word	0x44480000
 80052d4:	20000074 	.word	0x20000074
 80052d8:	40020400 	.word	0x40020400
 80052dc:	20000780 	.word	0x20000780
 80052e0:	20000078 	.word	0x20000078
 80052e4:	2000079d 	.word	0x2000079d
 80052e8:	200007a0 	.word	0x200007a0
 80052ec:	20000c51 	.word	0x20000c51
 80052f0:	20000338 	.word	0x20000338
 80052f4:	200007a4 	.word	0x200007a4
 80052f8:	200007a8 	.word	0x200007a8
 80052fc:	43960000 	.word	0x43960000
 8005300:	200000bc 	.word	0x200000bc
			}
		}
	}
	else //ha 1 vonalat érzékelünk
	{
		s_brake=0;
 8005304:	4bb6      	ldr	r3, [pc, #728]	; (80055e0 <Fast_Mode+0x608>)
 8005306:	f04f 0200 	mov.w	r2, #0
 800530a:	601a      	str	r2, [r3, #0]
	}
	t_prev=t;
 800530c:	4ab5      	ldr	r2, [pc, #724]	; (80055e4 <Fast_Mode+0x60c>)
 800530e:	687b      	ldr	r3, [r7, #4]
 8005310:	6013      	str	r3, [r2, #0]

	/*****SC üzemmód******/
	if(state==SC_MODE)
 8005312:	7ffb      	ldrb	r3, [r7, #31]
 8005314:	2b00      	cmp	r3, #0
 8005316:	d11e      	bne.n	8005356 <Fast_Mode+0x37e>
	{
		uint32_t dist=(((uint16_t)rxBuf[5])<<8) | ((uint16_t)rxBuf[6]);
 8005318:	4bb3      	ldr	r3, [pc, #716]	; (80055e8 <Fast_Mode+0x610>)
 800531a:	795b      	ldrb	r3, [r3, #5]
 800531c:	021b      	lsls	r3, r3, #8
 800531e:	4ab2      	ldr	r2, [pc, #712]	; (80055e8 <Fast_Mode+0x610>)
 8005320:	7992      	ldrb	r2, [r2, #6]
 8005322:	4313      	orrs	r3, r2
 8005324:	617b      	str	r3, [r7, #20]
		if(dist>1000 || rxBuf[4]) v_ref=1500; //ha tul messze vana  SC vagy érvénytelen az olvasás
 8005326:	697b      	ldr	r3, [r7, #20]
 8005328:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800532c:	d803      	bhi.n	8005336 <Fast_Mode+0x35e>
 800532e:	4bae      	ldr	r3, [pc, #696]	; (80055e8 <Fast_Mode+0x610>)
 8005330:	791b      	ldrb	r3, [r3, #4]
 8005332:	2b00      	cmp	r3, #0
 8005334:	d003      	beq.n	800533e <Fast_Mode+0x366>
 8005336:	4bad      	ldr	r3, [pc, #692]	; (80055ec <Fast_Mode+0x614>)
 8005338:	4aad      	ldr	r2, [pc, #692]	; (80055f0 <Fast_Mode+0x618>)
 800533a:	601a      	str	r2, [r3, #0]
 800533c:	e00b      	b.n	8005356 <Fast_Mode+0x37e>
		else v_ref = 2*dist-500;
 800533e:	697b      	ldr	r3, [r7, #20]
 8005340:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8005344:	3bfa      	subs	r3, #250	; 0xfa
 8005346:	005b      	lsls	r3, r3, #1
 8005348:	ee07 3a90 	vmov	s15, r3
 800534c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8005350:	4ba6      	ldr	r3, [pc, #664]	; (80055ec <Fast_Mode+0x614>)
 8005352:	edc3 7a00 	vstr	s15, [r3]
	}

	x_elso=(float)rxBuf[2]*204/248.0-102;//248
 8005356:	4ba4      	ldr	r3, [pc, #656]	; (80055e8 <Fast_Mode+0x610>)
 8005358:	789b      	ldrb	r3, [r3, #2]
 800535a:	ee07 3a90 	vmov	s15, r3
 800535e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8005362:	ed9f 7aa4 	vldr	s14, [pc, #656]	; 80055f4 <Fast_Mode+0x61c>
 8005366:	ee67 7a87 	vmul.f32	s15, s15, s14
 800536a:	ee17 0a90 	vmov	r0, s15
 800536e:	f7fb f90b 	bl	8000588 <__aeabi_f2d>
 8005372:	f04f 0200 	mov.w	r2, #0
 8005376:	4ba0      	ldr	r3, [pc, #640]	; (80055f8 <Fast_Mode+0x620>)
 8005378:	f7fb fa88 	bl	800088c <__aeabi_ddiv>
 800537c:	4602      	mov	r2, r0
 800537e:	460b      	mov	r3, r1
 8005380:	4610      	mov	r0, r2
 8005382:	4619      	mov	r1, r3
 8005384:	f04f 0200 	mov.w	r2, #0
 8005388:	4b9c      	ldr	r3, [pc, #624]	; (80055fc <Fast_Mode+0x624>)
 800538a:	f7fa ff9d 	bl	80002c8 <__aeabi_dsub>
 800538e:	4602      	mov	r2, r0
 8005390:	460b      	mov	r3, r1
 8005392:	4610      	mov	r0, r2
 8005394:	4619      	mov	r1, r3
 8005396:	f7fb fc27 	bl	8000be8 <__aeabi_d2f>
 800539a:	4603      	mov	r3, r0
 800539c:	4a98      	ldr	r2, [pc, #608]	; (8005600 <Fast_Mode+0x628>)
 800539e:	6013      	str	r3, [r2, #0]
	x_hatso=(float)rxBuf[3]*204/248.0-102; //244
 80053a0:	4b91      	ldr	r3, [pc, #580]	; (80055e8 <Fast_Mode+0x610>)
 80053a2:	78db      	ldrb	r3, [r3, #3]
 80053a4:	ee07 3a90 	vmov	s15, r3
 80053a8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80053ac:	ed9f 7a91 	vldr	s14, [pc, #580]	; 80055f4 <Fast_Mode+0x61c>
 80053b0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80053b4:	ee17 0a90 	vmov	r0, s15
 80053b8:	f7fb f8e6 	bl	8000588 <__aeabi_f2d>
 80053bc:	f04f 0200 	mov.w	r2, #0
 80053c0:	4b8d      	ldr	r3, [pc, #564]	; (80055f8 <Fast_Mode+0x620>)
 80053c2:	f7fb fa63 	bl	800088c <__aeabi_ddiv>
 80053c6:	4602      	mov	r2, r0
 80053c8:	460b      	mov	r3, r1
 80053ca:	4610      	mov	r0, r2
 80053cc:	4619      	mov	r1, r3
 80053ce:	f04f 0200 	mov.w	r2, #0
 80053d2:	4b8a      	ldr	r3, [pc, #552]	; (80055fc <Fast_Mode+0x624>)
 80053d4:	f7fa ff78 	bl	80002c8 <__aeabi_dsub>
 80053d8:	4602      	mov	r2, r0
 80053da:	460b      	mov	r3, r1
 80053dc:	4610      	mov	r0, r2
 80053de:	4619      	mov	r1, r3
 80053e0:	f7fb fc02 	bl	8000be8 <__aeabi_d2f>
 80053e4:	4603      	mov	r3, r0
 80053e6:	4a87      	ldr	r2, [pc, #540]	; (8005604 <Fast_Mode+0x62c>)
 80053e8:	6013      	str	r3, [r2, #0]
	delta=atan((x_elso-x_hatso)/L_SENSOR);
 80053ea:	4b85      	ldr	r3, [pc, #532]	; (8005600 <Fast_Mode+0x628>)
 80053ec:	ed93 7a00 	vldr	s14, [r3]
 80053f0:	4b84      	ldr	r3, [pc, #528]	; (8005604 <Fast_Mode+0x62c>)
 80053f2:	edd3 7a00 	vldr	s15, [r3]
 80053f6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80053fa:	ee17 0a90 	vmov	r0, s15
 80053fe:	f7fb f8c3 	bl	8000588 <__aeabi_f2d>
 8005402:	f04f 0200 	mov.w	r2, #0
 8005406:	4b80      	ldr	r3, [pc, #512]	; (8005608 <Fast_Mode+0x630>)
 8005408:	f7fb fa40 	bl	800088c <__aeabi_ddiv>
 800540c:	4602      	mov	r2, r0
 800540e:	460b      	mov	r3, r1
 8005410:	ec43 2b17 	vmov	d7, r2, r3
 8005414:	eeb0 0a47 	vmov.f32	s0, s14
 8005418:	eef0 0a67 	vmov.f32	s1, s15
 800541c:	f00a fda4 	bl	800ff68 <atan>
 8005420:	ec53 2b10 	vmov	r2, r3, d0
 8005424:	4610      	mov	r0, r2
 8005426:	4619      	mov	r1, r3
 8005428:	f7fb fbde 	bl	8000be8 <__aeabi_d2f>
 800542c:	4603      	mov	r3, r0
 800542e:	4a77      	ldr	r2, [pc, #476]	; (800560c <Fast_Mode+0x634>)
 8005430:	6013      	str	r3, [r2, #0]
	/**/
	//szabályozóparaméterek ujraszámolása az aktuális sebesség alapján
	if(state==SC_MODE)
 8005432:	7ffb      	ldrb	r3, [r7, #31]
 8005434:	2b00      	cmp	r3, #0
 8005436:	d10a      	bne.n	800544e <Fast_Mode+0x476>
	{
		k_p = -0.004;
 8005438:	4b75      	ldr	r3, [pc, #468]	; (8005610 <Fast_Mode+0x638>)
 800543a:	4a76      	ldr	r2, [pc, #472]	; (8005614 <Fast_Mode+0x63c>)
 800543c:	601a      	str	r2, [r3, #0]
		kD = -0.004;
 800543e:	4b76      	ldr	r3, [pc, #472]	; (8005618 <Fast_Mode+0x640>)
 8005440:	4a74      	ldr	r2, [pc, #464]	; (8005614 <Fast_Mode+0x63c>)
 8005442:	601a      	str	r2, [r3, #0]
		k_delta = 0;
 8005444:	4b75      	ldr	r3, [pc, #468]	; (800561c <Fast_Mode+0x644>)
 8005446:	f04f 0200 	mov.w	r2, #0
 800544a:	601a      	str	r2, [r3, #0]
 800544c:	e085      	b.n	800555a <Fast_Mode+0x582>
	}

	else //FREERUN modes
	{
		if(v>150 || v<-150)
 800544e:	4b74      	ldr	r3, [pc, #464]	; (8005620 <Fast_Mode+0x648>)
 8005450:	edd3 7a00 	vldr	s15, [r3]
 8005454:	ed9f 7a73 	vldr	s14, [pc, #460]	; 8005624 <Fast_Mode+0x64c>
 8005458:	eef4 7ac7 	vcmpe.f32	s15, s14
 800545c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005460:	dc09      	bgt.n	8005476 <Fast_Mode+0x49e>
 8005462:	4b6f      	ldr	r3, [pc, #444]	; (8005620 <Fast_Mode+0x648>)
 8005464:	edd3 7a00 	vldr	s15, [r3]
 8005468:	ed9f 7a6f 	vldr	s14, [pc, #444]	; 8005628 <Fast_Mode+0x650>
 800546c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005470:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005474:	d568      	bpl.n	8005548 <Fast_Mode+0x570>
		{
			if(v<2200) //kanyar
 8005476:	4b6a      	ldr	r3, [pc, #424]	; (8005620 <Fast_Mode+0x648>)
 8005478:	edd3 7a00 	vldr	s15, [r3]
 800547c:	ed9f 7a6b 	vldr	s14, [pc, #428]	; 800562c <Fast_Mode+0x654>
 8005480:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005484:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005488:	d50a      	bpl.n	80054a0 <Fast_Mode+0x4c8>
			{
				k_p = -0.0026;//-L/(v*v)*S1MULTS2_SLOW;
 800548a:	4b61      	ldr	r3, [pc, #388]	; (8005610 <Fast_Mode+0x638>)
 800548c:	4a68      	ldr	r2, [pc, #416]	; (8005630 <Fast_Mode+0x658>)
 800548e:	601a      	str	r2, [r3, #0]
				k_delta = 0;//L/v*(S1ADDS2_SLOW-v*k_p);
 8005490:	4b62      	ldr	r3, [pc, #392]	; (800561c <Fast_Mode+0x644>)
 8005492:	f04f 0200 	mov.w	r2, #0
 8005496:	601a      	str	r2, [r3, #0]
				kD=-0.06;//-0.06
 8005498:	4b5f      	ldr	r3, [pc, #380]	; (8005618 <Fast_Mode+0x640>)
 800549a:	4a66      	ldr	r2, [pc, #408]	; (8005634 <Fast_Mode+0x65c>)
 800549c:	601a      	str	r2, [r3, #0]
			if(v<2200) //kanyar
 800549e:	e05c      	b.n	800555a <Fast_Mode+0x582>
			}
			else //egyenes
			{
				k_p = -L*S1MULTS2_FAST/(v*v);
 80054a0:	4b5f      	ldr	r3, [pc, #380]	; (8005620 <Fast_Mode+0x648>)
 80054a2:	ed93 7a00 	vldr	s14, [r3]
 80054a6:	4b5e      	ldr	r3, [pc, #376]	; (8005620 <Fast_Mode+0x648>)
 80054a8:	edd3 7a00 	vldr	s15, [r3]
 80054ac:	ee67 7a27 	vmul.f32	s15, s14, s15
 80054b0:	ee17 0a90 	vmov	r0, s15
 80054b4:	f7fb f868 	bl	8000588 <__aeabi_f2d>
 80054b8:	4602      	mov	r2, r0
 80054ba:	460b      	mov	r3, r1
 80054bc:	a142      	add	r1, pc, #264	; (adr r1, 80055c8 <Fast_Mode+0x5f0>)
 80054be:	e9d1 0100 	ldrd	r0, r1, [r1]
 80054c2:	f7fb f9e3 	bl	800088c <__aeabi_ddiv>
 80054c6:	4602      	mov	r2, r0
 80054c8:	460b      	mov	r3, r1
 80054ca:	4610      	mov	r0, r2
 80054cc:	4619      	mov	r1, r3
 80054ce:	f7fb fb8b 	bl	8000be8 <__aeabi_d2f>
 80054d2:	4603      	mov	r3, r0
 80054d4:	4a4e      	ldr	r2, [pc, #312]	; (8005610 <Fast_Mode+0x638>)
 80054d6:	6013      	str	r3, [r2, #0]
				k_delta = L*(S1ADDS2_FAST-v*k_p)/v;
 80054d8:	4b51      	ldr	r3, [pc, #324]	; (8005620 <Fast_Mode+0x648>)
 80054da:	ed93 7a00 	vldr	s14, [r3]
 80054de:	4b4c      	ldr	r3, [pc, #304]	; (8005610 <Fast_Mode+0x638>)
 80054e0:	edd3 7a00 	vldr	s15, [r3]
 80054e4:	ee67 7a27 	vmul.f32	s15, s14, s15
 80054e8:	ee17 0a90 	vmov	r0, s15
 80054ec:	f7fb f84c 	bl	8000588 <__aeabi_f2d>
 80054f0:	4602      	mov	r2, r0
 80054f2:	460b      	mov	r3, r1
 80054f4:	a136      	add	r1, pc, #216	; (adr r1, 80055d0 <Fast_Mode+0x5f8>)
 80054f6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80054fa:	f7fa fee5 	bl	80002c8 <__aeabi_dsub>
 80054fe:	4602      	mov	r2, r0
 8005500:	460b      	mov	r3, r1
 8005502:	4610      	mov	r0, r2
 8005504:	4619      	mov	r1, r3
 8005506:	a334      	add	r3, pc, #208	; (adr r3, 80055d8 <Fast_Mode+0x600>)
 8005508:	e9d3 2300 	ldrd	r2, r3, [r3]
 800550c:	f7fb f894 	bl	8000638 <__aeabi_dmul>
 8005510:	4602      	mov	r2, r0
 8005512:	460b      	mov	r3, r1
 8005514:	4614      	mov	r4, r2
 8005516:	461d      	mov	r5, r3
 8005518:	4b41      	ldr	r3, [pc, #260]	; (8005620 <Fast_Mode+0x648>)
 800551a:	681b      	ldr	r3, [r3, #0]
 800551c:	4618      	mov	r0, r3
 800551e:	f7fb f833 	bl	8000588 <__aeabi_f2d>
 8005522:	4602      	mov	r2, r0
 8005524:	460b      	mov	r3, r1
 8005526:	4620      	mov	r0, r4
 8005528:	4629      	mov	r1, r5
 800552a:	f7fb f9af 	bl	800088c <__aeabi_ddiv>
 800552e:	4602      	mov	r2, r0
 8005530:	460b      	mov	r3, r1
 8005532:	4610      	mov	r0, r2
 8005534:	4619      	mov	r1, r3
 8005536:	f7fb fb57 	bl	8000be8 <__aeabi_d2f>
 800553a:	4603      	mov	r3, r0
 800553c:	4a37      	ldr	r2, [pc, #220]	; (800561c <Fast_Mode+0x644>)
 800553e:	6013      	str	r3, [r2, #0]
				kD=-0.05;
 8005540:	4b35      	ldr	r3, [pc, #212]	; (8005618 <Fast_Mode+0x640>)
 8005542:	4a3d      	ldr	r2, [pc, #244]	; (8005638 <Fast_Mode+0x660>)
 8005544:	601a      	str	r2, [r3, #0]
			if(v<2200) //kanyar
 8005546:	e008      	b.n	800555a <Fast_Mode+0x582>
			}
		}
		else
		{
			k_p=K_P_200;
 8005548:	4b31      	ldr	r3, [pc, #196]	; (8005610 <Fast_Mode+0x638>)
 800554a:	4a3c      	ldr	r2, [pc, #240]	; (800563c <Fast_Mode+0x664>)
 800554c:	601a      	str	r2, [r3, #0]
			k_delta=K_DELTA_200;
 800554e:	4b33      	ldr	r3, [pc, #204]	; (800561c <Fast_Mode+0x644>)
 8005550:	4a3b      	ldr	r2, [pc, #236]	; (8005640 <Fast_Mode+0x668>)
 8005552:	601a      	str	r2, [r3, #0]
			kD=-0.06;
 8005554:	4b30      	ldr	r3, [pc, #192]	; (8005618 <Fast_Mode+0x640>)
 8005556:	4a37      	ldr	r2, [pc, #220]	; (8005634 <Fast_Mode+0x65c>)
 8005558:	601a      	str	r2, [r3, #0]
		}
	}
	gamma = -k_p * x_elso -k_delta * delta - kD * (x_elso-x_elso_prev);
 800555a:	4b2d      	ldr	r3, [pc, #180]	; (8005610 <Fast_Mode+0x638>)
 800555c:	edd3 7a00 	vldr	s15, [r3]
 8005560:	eeb1 7a67 	vneg.f32	s14, s15
 8005564:	4b26      	ldr	r3, [pc, #152]	; (8005600 <Fast_Mode+0x628>)
 8005566:	edd3 7a00 	vldr	s15, [r3]
 800556a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800556e:	4b2b      	ldr	r3, [pc, #172]	; (800561c <Fast_Mode+0x644>)
 8005570:	edd3 6a00 	vldr	s13, [r3]
 8005574:	4b25      	ldr	r3, [pc, #148]	; (800560c <Fast_Mode+0x634>)
 8005576:	edd3 7a00 	vldr	s15, [r3]
 800557a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800557e:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005582:	4b1f      	ldr	r3, [pc, #124]	; (8005600 <Fast_Mode+0x628>)
 8005584:	edd3 6a00 	vldr	s13, [r3]
 8005588:	4b2e      	ldr	r3, [pc, #184]	; (8005644 <Fast_Mode+0x66c>)
 800558a:	edd3 7a00 	vldr	s15, [r3]
 800558e:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8005592:	4b21      	ldr	r3, [pc, #132]	; (8005618 <Fast_Mode+0x640>)
 8005594:	edd3 7a00 	vldr	s15, [r3]
 8005598:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800559c:	ee77 7a67 	vsub.f32	s15, s14, s15
 80055a0:	4b29      	ldr	r3, [pc, #164]	; (8005648 <Fast_Mode+0x670>)
 80055a2:	edc3 7a00 	vstr	s15, [r3]
	x_elso_prev = x_elso;
 80055a6:	4b16      	ldr	r3, [pc, #88]	; (8005600 <Fast_Mode+0x628>)
 80055a8:	681b      	ldr	r3, [r3, #0]
 80055aa:	4a26      	ldr	r2, [pc, #152]	; (8005644 <Fast_Mode+0x66c>)
 80055ac:	6013      	str	r3, [r2, #0]

	*state_pointer=state;
 80055ae:	68bb      	ldr	r3, [r7, #8]
 80055b0:	7ffa      	ldrb	r2, [r7, #31]
 80055b2:	701a      	strb	r2, [r3, #0]
	return gamma;
 80055b4:	4b24      	ldr	r3, [pc, #144]	; (8005648 <Fast_Mode+0x670>)
 80055b6:	681b      	ldr	r3, [r3, #0]
}
 80055b8:	ee07 3a90 	vmov	s15, r3
 80055bc:	eeb0 0a67 	vmov.f32	s0, s15
 80055c0:	3720      	adds	r7, #32
 80055c2:	46bd      	mov	sp, r7
 80055c4:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 80055c8:	b22d0e56 	.word	0xb22d0e56
 80055cc:	c0b75f1d 	.word	0xc0b75f1d
 80055d0:	8f5c28f6 	.word	0x8f5c28f6
 80055d4:	c02275c2 	.word	0xc02275c2
 80055d8:	00000000 	.word	0x00000000
 80055dc:	40716000 	.word	0x40716000
 80055e0:	200007a4 	.word	0x200007a4
 80055e4:	200007a8 	.word	0x200007a8
 80055e8:	20000774 	.word	0x20000774
 80055ec:	20000338 	.word	0x20000338
 80055f0:	44bb8000 	.word	0x44bb8000
 80055f4:	434c0000 	.word	0x434c0000
 80055f8:	406f0000 	.word	0x406f0000
 80055fc:	40598000 	.word	0x40598000
 8005600:	200007ac 	.word	0x200007ac
 8005604:	200007b0 	.word	0x200007b0
 8005608:	407c4000 	.word	0x407c4000
 800560c:	200007b4 	.word	0x200007b4
 8005610:	20000100 	.word	0x20000100
 8005614:	bb83126f 	.word	0xbb83126f
 8005618:	20000104 	.word	0x20000104
 800561c:	20000108 	.word	0x20000108
 8005620:	20000754 	.word	0x20000754
 8005624:	43160000 	.word	0x43160000
 8005628:	c3160000 	.word	0xc3160000
 800562c:	45098000 	.word	0x45098000
 8005630:	bb2a64c3 	.word	0xbb2a64c3
 8005634:	bd75c28f 	.word	0xbd75c28f
 8005638:	bd4ccccd 	.word	0xbd4ccccd
 800563c:	ba30dc42 	.word	0xba30dc42
 8005640:	bf21eadf 	.word	0xbf21eadf
 8005644:	200007b8 	.word	0x200007b8
 8005648:	200007bc 	.word	0x200007bc

0800564c <Skill_Mode>:

float Skill_Mode(UART_HandleTypeDef *huart_debugg, float kP, float kD, uint32_t t)
{
 800564c:	b580      	push	{r7, lr}
 800564e:	b088      	sub	sp, #32
 8005650:	af00      	add	r7, sp, #0
 8005652:	60f8      	str	r0, [r7, #12]
 8005654:	ed87 0a02 	vstr	s0, [r7, #8]
 8005658:	edc7 0a01 	vstr	s1, [r7, #4]
 800565c:	6039      	str	r1, [r7, #0]
	static uint32_t t_prev=0;
	int byte=0;
 800565e:	2300      	movs	r3, #0
 8005660:	61fb      	str	r3, [r7, #28]
	static int byte_prev=0;
	int delta_byte;
	float p=0;
 8005662:	f04f 0300 	mov.w	r3, #0
 8005666:	617b      	str	r3, [r7, #20]
/*	uint8_t str[40];
	sprintf(str,"%d,  %d,  %d,  %d,  %d\n\r",rxBuf[1],rxBuf[2],rxBuf[3],rxBuf[4],rxBuf[5]);
	HAL_UART_Transmit(huart_debugg, str, strlen(str), 10);
*/

	if(LINE_CNT>3 || ignore)//ha éppen node-on vagyunk, akkor az átlagot követjük
 8005668:	4b85      	ldr	r3, [pc, #532]	; (8005880 <Skill_Mode+0x234>)
 800566a:	785b      	ldrb	r3, [r3, #1]
 800566c:	2b03      	cmp	r3, #3
 800566e:	d803      	bhi.n	8005678 <Skill_Mode+0x2c>
 8005670:	4b84      	ldr	r3, [pc, #528]	; (8005884 <Skill_Mode+0x238>)
 8005672:	781b      	ldrb	r3, [r3, #0]
 8005674:	2b00      	cmp	r3, #0
 8005676:	d022      	beq.n	80056be <Skill_Mode+0x72>
	{
		byte=0;
 8005678:	2300      	movs	r3, #0
 800567a:	61fb      	str	r3, [r7, #28]
		for(i=0;i<LINE_CNT;i++)
 800567c:	2300      	movs	r3, #0
 800567e:	61bb      	str	r3, [r7, #24]
 8005680:	e00a      	b.n	8005698 <Skill_Mode+0x4c>
		{
			byte += rxBuf[i+2];
 8005682:	69bb      	ldr	r3, [r7, #24]
 8005684:	3302      	adds	r3, #2
 8005686:	4a7e      	ldr	r2, [pc, #504]	; (8005880 <Skill_Mode+0x234>)
 8005688:	5cd3      	ldrb	r3, [r2, r3]
 800568a:	461a      	mov	r2, r3
 800568c:	69fb      	ldr	r3, [r7, #28]
 800568e:	4413      	add	r3, r2
 8005690:	61fb      	str	r3, [r7, #28]
		for(i=0;i<LINE_CNT;i++)
 8005692:	69bb      	ldr	r3, [r7, #24]
 8005694:	3301      	adds	r3, #1
 8005696:	61bb      	str	r3, [r7, #24]
 8005698:	4b79      	ldr	r3, [pc, #484]	; (8005880 <Skill_Mode+0x234>)
 800569a:	785b      	ldrb	r3, [r3, #1]
 800569c:	461a      	mov	r2, r3
 800569e:	69bb      	ldr	r3, [r7, #24]
 80056a0:	4293      	cmp	r3, r2
 80056a2:	dbee      	blt.n	8005682 <Skill_Mode+0x36>
		}

		if(LINE_CNT) byte /= LINE_CNT;
 80056a4:	4b76      	ldr	r3, [pc, #472]	; (8005880 <Skill_Mode+0x234>)
 80056a6:	785b      	ldrb	r3, [r3, #1]
 80056a8:	2b00      	cmp	r3, #0
 80056aa:	f000 8097 	beq.w	80057dc <Skill_Mode+0x190>
 80056ae:	4b74      	ldr	r3, [pc, #464]	; (8005880 <Skill_Mode+0x234>)
 80056b0:	785b      	ldrb	r3, [r3, #1]
 80056b2:	461a      	mov	r2, r3
 80056b4:	69fb      	ldr	r3, [r7, #28]
 80056b6:	fb93 f3f2 	sdiv	r3, r3, r2
 80056ba:	61fb      	str	r3, [r7, #28]
 80056bc:	e08e      	b.n	80057dc <Skill_Mode+0x190>
	}
	else if((path==LEFT && orientation==FORWARD) || (path==RIGHT && orientation==REVERSE))
 80056be:	4b72      	ldr	r3, [pc, #456]	; (8005888 <Skill_Mode+0x23c>)
 80056c0:	781b      	ldrb	r3, [r3, #0]
 80056c2:	2b00      	cmp	r3, #0
 80056c4:	d103      	bne.n	80056ce <Skill_Mode+0x82>
 80056c6:	4b71      	ldr	r3, [pc, #452]	; (800588c <Skill_Mode+0x240>)
 80056c8:	781b      	ldrb	r3, [r3, #0]
 80056ca:	2b00      	cmp	r3, #0
 80056cc:	d007      	beq.n	80056de <Skill_Mode+0x92>
 80056ce:	4b6e      	ldr	r3, [pc, #440]	; (8005888 <Skill_Mode+0x23c>)
 80056d0:	781b      	ldrb	r3, [r3, #0]
 80056d2:	2b02      	cmp	r3, #2
 80056d4:	d10f      	bne.n	80056f6 <Skill_Mode+0xaa>
 80056d6:	4b6d      	ldr	r3, [pc, #436]	; (800588c <Skill_Mode+0x240>)
 80056d8:	781b      	ldrb	r3, [r3, #0]
 80056da:	2b01      	cmp	r3, #1
 80056dc:	d10b      	bne.n	80056f6 <Skill_Mode+0xaa>
	{
		byte = LINE1; //az első vonalt kell követni
 80056de:	4b68      	ldr	r3, [pc, #416]	; (8005880 <Skill_Mode+0x234>)
 80056e0:	789b      	ldrb	r3, [r3, #2]
 80056e2:	61fb      	str	r3, [r7, #28]
		delta_byte=abs((int)byte-byte_prev);
 80056e4:	4b6a      	ldr	r3, [pc, #424]	; (8005890 <Skill_Mode+0x244>)
 80056e6:	681b      	ldr	r3, [r3, #0]
 80056e8:	69fa      	ldr	r2, [r7, #28]
 80056ea:	1ad3      	subs	r3, r2, r3
 80056ec:	2b00      	cmp	r3, #0
 80056ee:	bfb8      	it	lt
 80056f0:	425b      	neglt	r3, r3
 80056f2:	613b      	str	r3, [r7, #16]
 80056f4:	e072      	b.n	80057dc <Skill_Mode+0x190>
			estuary=ESTUARY_MODE_OFF;
			LED_G(0);
		}
*/
	}
	else if((path==RIGHT && orientation==FORWARD) || (path==LEFT && orientation==REVERSE))
 80056f6:	4b64      	ldr	r3, [pc, #400]	; (8005888 <Skill_Mode+0x23c>)
 80056f8:	781b      	ldrb	r3, [r3, #0]
 80056fa:	2b02      	cmp	r3, #2
 80056fc:	d103      	bne.n	8005706 <Skill_Mode+0xba>
 80056fe:	4b63      	ldr	r3, [pc, #396]	; (800588c <Skill_Mode+0x240>)
 8005700:	781b      	ldrb	r3, [r3, #0]
 8005702:	2b00      	cmp	r3, #0
 8005704:	d007      	beq.n	8005716 <Skill_Mode+0xca>
 8005706:	4b60      	ldr	r3, [pc, #384]	; (8005888 <Skill_Mode+0x23c>)
 8005708:	781b      	ldrb	r3, [r3, #0]
 800570a:	2b00      	cmp	r3, #0
 800570c:	d112      	bne.n	8005734 <Skill_Mode+0xe8>
 800570e:	4b5f      	ldr	r3, [pc, #380]	; (800588c <Skill_Mode+0x240>)
 8005710:	781b      	ldrb	r3, [r3, #0]
 8005712:	2b01      	cmp	r3, #1
 8005714:	d10e      	bne.n	8005734 <Skill_Mode+0xe8>
	{
		byte = rxBuf[1+LINE_CNT];//az utolsó vonalat kell követni
 8005716:	4b5a      	ldr	r3, [pc, #360]	; (8005880 <Skill_Mode+0x234>)
 8005718:	785b      	ldrb	r3, [r3, #1]
 800571a:	3301      	adds	r3, #1
 800571c:	4a58      	ldr	r2, [pc, #352]	; (8005880 <Skill_Mode+0x234>)
 800571e:	5cd3      	ldrb	r3, [r2, r3]
 8005720:	61fb      	str	r3, [r7, #28]
		delta_byte=abs((int)byte-byte_prev);
 8005722:	4b5b      	ldr	r3, [pc, #364]	; (8005890 <Skill_Mode+0x244>)
 8005724:	681b      	ldr	r3, [r3, #0]
 8005726:	69fa      	ldr	r2, [r7, #28]
 8005728:	1ad3      	subs	r3, r2, r3
 800572a:	2b00      	cmp	r3, #0
 800572c:	bfb8      	it	lt
 800572e:	425b      	neglt	r3, r3
 8005730:	613b      	str	r3, [r7, #16]
 8005732:	e053      	b.n	80057dc <Skill_Mode+0x190>
			estuary=ESTUARY_MODE_OFF;
			LED_G(0);
		}*/
	}

	else if(path==MIDDLE)
 8005734:	4b54      	ldr	r3, [pc, #336]	; (8005888 <Skill_Mode+0x23c>)
 8005736:	781b      	ldrb	r3, [r3, #0]
 8005738:	2b01      	cmp	r3, #1
 800573a:	d14f      	bne.n	80057dc <Skill_Mode+0x190>
	{
		if(LINE_CNT==1)
 800573c:	4b50      	ldr	r3, [pc, #320]	; (8005880 <Skill_Mode+0x234>)
 800573e:	785b      	ldrb	r3, [r3, #1]
 8005740:	2b01      	cmp	r3, #1
 8005742:	d10b      	bne.n	800575c <Skill_Mode+0x110>
		{
			byte = byte_middle = LINE1;//ha csak 1 vonal van, akkor azt követjük
 8005744:	4b4e      	ldr	r3, [pc, #312]	; (8005880 <Skill_Mode+0x234>)
 8005746:	789b      	ldrb	r3, [r3, #2]
 8005748:	461a      	mov	r2, r3
 800574a:	4b52      	ldr	r3, [pc, #328]	; (8005894 <Skill_Mode+0x248>)
 800574c:	601a      	str	r2, [r3, #0]
 800574e:	4b51      	ldr	r3, [pc, #324]	; (8005894 <Skill_Mode+0x248>)
 8005750:	681b      	ldr	r3, [r3, #0]
 8005752:	61fb      	str	r3, [r7, #28]
			middleLineState=1;
 8005754:	4b50      	ldr	r3, [pc, #320]	; (8005898 <Skill_Mode+0x24c>)
 8005756:	2201      	movs	r2, #1
 8005758:	701a      	strb	r2, [r3, #0]
 800575a:	e03f      	b.n	80057dc <Skill_Mode+0x190>
		}
		else if(LINE_CNT==3)//ha 3 vonal van
 800575c:	4b48      	ldr	r3, [pc, #288]	; (8005880 <Skill_Mode+0x234>)
 800575e:	785b      	ldrb	r3, [r3, #1]
 8005760:	2b03      	cmp	r3, #3
 8005762:	d10b      	bne.n	800577c <Skill_Mode+0x130>
		{
			byte = byte_middle = LINE2;//a középsőt követjük
 8005764:	4b46      	ldr	r3, [pc, #280]	; (8005880 <Skill_Mode+0x234>)
 8005766:	78db      	ldrb	r3, [r3, #3]
 8005768:	461a      	mov	r2, r3
 800576a:	4b4a      	ldr	r3, [pc, #296]	; (8005894 <Skill_Mode+0x248>)
 800576c:	601a      	str	r2, [r3, #0]
 800576e:	4b49      	ldr	r3, [pc, #292]	; (8005894 <Skill_Mode+0x248>)
 8005770:	681b      	ldr	r3, [r3, #0]
 8005772:	61fb      	str	r3, [r7, #28]
			//folyamatosan nézzük, hogy az 1. és 3.vonal milyen messze van a vonalszenor középontjától
			middleLineState=1;
 8005774:	4b48      	ldr	r3, [pc, #288]	; (8005898 <Skill_Mode+0x24c>)
 8005776:	2201      	movs	r2, #1
 8005778:	701a      	strb	r2, [r3, #0]
 800577a:	e02f      	b.n	80057dc <Skill_Mode+0x190>
		}
		else if(LINE_CNT==2)//ha 2 vonal van, az azt jelenti, hogy az elágazás már annyira szétgáazott, hogy csak 2-t látunk a 3 vonalból
 800577c:	4b40      	ldr	r3, [pc, #256]	; (8005880 <Skill_Mode+0x234>)
 800577e:	785b      	ldrb	r3, [r3, #1]
 8005780:	2b02      	cmp	r3, #2
 8005782:	d12b      	bne.n	80057dc <Skill_Mode+0x190>
		{
			if(middleLineState==1)
 8005784:	4b44      	ldr	r3, [pc, #272]	; (8005898 <Skill_Mode+0x24c>)
 8005786:	781b      	ldrb	r3, [r3, #0]
 8005788:	2b01      	cmp	r3, #1
 800578a:	d116      	bne.n	80057ba <Skill_Mode+0x16e>
			{
				tmp1=abs(byte_middle-LINE1);
 800578c:	4b41      	ldr	r3, [pc, #260]	; (8005894 <Skill_Mode+0x248>)
 800578e:	681b      	ldr	r3, [r3, #0]
 8005790:	4a3b      	ldr	r2, [pc, #236]	; (8005880 <Skill_Mode+0x234>)
 8005792:	7892      	ldrb	r2, [r2, #2]
 8005794:	1a9b      	subs	r3, r3, r2
 8005796:	2b00      	cmp	r3, #0
 8005798:	bfb8      	it	lt
 800579a:	425b      	neglt	r3, r3
 800579c:	4a3f      	ldr	r2, [pc, #252]	; (800589c <Skill_Mode+0x250>)
 800579e:	6013      	str	r3, [r2, #0]
				tmp2=abs(byte_middle-LINE2);
 80057a0:	4b3c      	ldr	r3, [pc, #240]	; (8005894 <Skill_Mode+0x248>)
 80057a2:	681b      	ldr	r3, [r3, #0]
 80057a4:	4a36      	ldr	r2, [pc, #216]	; (8005880 <Skill_Mode+0x234>)
 80057a6:	78d2      	ldrb	r2, [r2, #3]
 80057a8:	1a9b      	subs	r3, r3, r2
 80057aa:	2b00      	cmp	r3, #0
 80057ac:	bfb8      	it	lt
 80057ae:	425b      	neglt	r3, r3
 80057b0:	4a3b      	ldr	r2, [pc, #236]	; (80058a0 <Skill_Mode+0x254>)
 80057b2:	6013      	str	r3, [r2, #0]
				middleLineState=2;
 80057b4:	4b38      	ldr	r3, [pc, #224]	; (8005898 <Skill_Mode+0x24c>)
 80057b6:	2202      	movs	r2, #2
 80057b8:	701a      	strb	r2, [r3, #0]
			}
			if(middleLineState==2)
 80057ba:	4b37      	ldr	r3, [pc, #220]	; (8005898 <Skill_Mode+0x24c>)
 80057bc:	781b      	ldrb	r3, [r3, #0]
 80057be:	2b02      	cmp	r3, #2
 80057c0:	d10c      	bne.n	80057dc <Skill_Mode+0x190>
			{
				if(tmp1<tmp2) byte = LINE1; //ha a jobboldali vonalat veszítettük el
 80057c2:	4b36      	ldr	r3, [pc, #216]	; (800589c <Skill_Mode+0x250>)
 80057c4:	681a      	ldr	r2, [r3, #0]
 80057c6:	4b36      	ldr	r3, [pc, #216]	; (80058a0 <Skill_Mode+0x254>)
 80057c8:	681b      	ldr	r3, [r3, #0]
 80057ca:	429a      	cmp	r2, r3
 80057cc:	da03      	bge.n	80057d6 <Skill_Mode+0x18a>
 80057ce:	4b2c      	ldr	r3, [pc, #176]	; (8005880 <Skill_Mode+0x234>)
 80057d0:	789b      	ldrb	r3, [r3, #2]
 80057d2:	61fb      	str	r3, [r7, #28]
 80057d4:	e002      	b.n	80057dc <Skill_Mode+0x190>
				else byte = LINE2; //ha a baloldali vonalat veszítettük el
 80057d6:	4b2a      	ldr	r3, [pc, #168]	; (8005880 <Skill_Mode+0x234>)
 80057d8:	78db      	ldrb	r3, [r3, #3]
 80057da:	61fb      	str	r3, [r7, #28]
			}
		}
	}
	if(estuary==ESTUARY_MODE_INIT)estuary=ESTUARY_MODE_OFF;
 80057dc:	4b31      	ldr	r3, [pc, #196]	; (80058a4 <Skill_Mode+0x258>)
 80057de:	781b      	ldrb	r3, [r3, #0]
 80057e0:	2b00      	cmp	r3, #0
 80057e2:	d102      	bne.n	80057ea <Skill_Mode+0x19e>
 80057e4:	4b2f      	ldr	r3, [pc, #188]	; (80058a4 <Skill_Mode+0x258>)
 80057e6:	2201      	movs	r2, #1
 80057e8:	701a      	strb	r2, [r3, #0]
	//p = (float)byte * 204/248.0-102;
	p = (float)byte * 204/248.0-102;
 80057ea:	69fb      	ldr	r3, [r7, #28]
 80057ec:	ee07 3a90 	vmov	s15, r3
 80057f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80057f4:	ed9f 7a2c 	vldr	s14, [pc, #176]	; 80058a8 <Skill_Mode+0x25c>
 80057f8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80057fc:	ee17 0a90 	vmov	r0, s15
 8005800:	f7fa fec2 	bl	8000588 <__aeabi_f2d>
 8005804:	f04f 0200 	mov.w	r2, #0
 8005808:	4b28      	ldr	r3, [pc, #160]	; (80058ac <Skill_Mode+0x260>)
 800580a:	f7fb f83f 	bl	800088c <__aeabi_ddiv>
 800580e:	4602      	mov	r2, r0
 8005810:	460b      	mov	r3, r1
 8005812:	4610      	mov	r0, r2
 8005814:	4619      	mov	r1, r3
 8005816:	f04f 0200 	mov.w	r2, #0
 800581a:	4b25      	ldr	r3, [pc, #148]	; (80058b0 <Skill_Mode+0x264>)
 800581c:	f7fa fd54 	bl	80002c8 <__aeabi_dsub>
 8005820:	4602      	mov	r2, r0
 8005822:	460b      	mov	r3, r1
 8005824:	4610      	mov	r0, r2
 8005826:	4619      	mov	r1, r3
 8005828:	f7fb f9de 	bl	8000be8 <__aeabi_d2f>
 800582c:	4603      	mov	r3, r0
 800582e:	617b      	str	r3, [r7, #20]
	gamma = -kP * p  - kD*(p-p_prev);
 8005830:	edd7 7a02 	vldr	s15, [r7, #8]
 8005834:	eeb1 7a67 	vneg.f32	s14, s15
 8005838:	edd7 7a05 	vldr	s15, [r7, #20]
 800583c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8005840:	4b1c      	ldr	r3, [pc, #112]	; (80058b4 <Skill_Mode+0x268>)
 8005842:	edd3 7a00 	vldr	s15, [r3]
 8005846:	edd7 6a05 	vldr	s13, [r7, #20]
 800584a:	ee76 6ae7 	vsub.f32	s13, s13, s15
 800584e:	edd7 7a01 	vldr	s15, [r7, #4]
 8005852:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8005856:	ee77 7a67 	vsub.f32	s15, s14, s15
 800585a:	4b17      	ldr	r3, [pc, #92]	; (80058b8 <Skill_Mode+0x26c>)
 800585c:	edc3 7a00 	vstr	s15, [r3]
	p_prev = p;
 8005860:	4a14      	ldr	r2, [pc, #80]	; (80058b4 <Skill_Mode+0x268>)
 8005862:	697b      	ldr	r3, [r7, #20]
 8005864:	6013      	str	r3, [r2, #0]
	byte_prev=byte;
 8005866:	4a0a      	ldr	r2, [pc, #40]	; (8005890 <Skill_Mode+0x244>)
 8005868:	69fb      	ldr	r3, [r7, #28]
 800586a:	6013      	str	r3, [r2, #0]

	return gamma;
 800586c:	4b12      	ldr	r3, [pc, #72]	; (80058b8 <Skill_Mode+0x26c>)
 800586e:	681b      	ldr	r3, [r3, #0]
 8005870:	ee07 3a90 	vmov	s15, r3
}
 8005874:	eeb0 0a67 	vmov.f32	s0, s15
 8005878:	3720      	adds	r7, #32
 800587a:	46bd      	mov	sp, r7
 800587c:	bd80      	pop	{r7, pc}
 800587e:	bf00      	nop
 8005880:	20000774 	.word	0x20000774
 8005884:	2000077e 	.word	0x2000077e
 8005888:	20000346 	.word	0x20000346
 800588c:	20000344 	.word	0x20000344
 8005890:	200007c0 	.word	0x200007c0
 8005894:	200007c4 	.word	0x200007c4
 8005898:	2000010c 	.word	0x2000010c
 800589c:	200007c8 	.word	0x200007c8
 80058a0:	200007cc 	.word	0x200007cc
 80058a4:	200007d0 	.word	0x200007d0
 80058a8:	434c0000 	.word	0x434c0000
 80058ac:	406f0000 	.word	0x406f0000
 80058b0:	40598000 	.word	0x40598000
 80058b4:	200007d4 	.word	0x200007d4
 80058b8:	200007d8 	.word	0x200007d8

080058bc <Detect_Node4>:
		ignore=0;
	}
}

void Detect_Node4(UART_HandleTypeDef *huart_debugg, uint32_t t)
{
 80058bc:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 80058c0:	b082      	sub	sp, #8
 80058c2:	af00      	add	r7, sp, #0
 80058c4:	6078      	str	r0, [r7, #4]
 80058c6:	6039      	str	r1, [r7, #0]
	static uint32_t t_prev=0;
	static uint32_t t_stamp=0;
	static uint8_t detect_node_state=0;
	static float s=0;

	if(LINE_CNT==4 && !detect_node_state)
 80058c8:	4b3c      	ldr	r3, [pc, #240]	; (80059bc <Detect_Node4+0x100>)
 80058ca:	785b      	ldrb	r3, [r3, #1]
 80058cc:	2b04      	cmp	r3, #4
 80058ce:	d111      	bne.n	80058f4 <Detect_Node4+0x38>
 80058d0:	4b3b      	ldr	r3, [pc, #236]	; (80059c0 <Detect_Node4+0x104>)
 80058d2:	781b      	ldrb	r3, [r3, #0]
 80058d4:	2b00      	cmp	r3, #0
 80058d6:	d10d      	bne.n	80058f4 <Detect_Node4+0x38>
	{
		s=0;
 80058d8:	4b3a      	ldr	r3, [pc, #232]	; (80059c4 <Detect_Node4+0x108>)
 80058da:	f04f 0200 	mov.w	r2, #0
 80058de:	601a      	str	r2, [r3, #0]
		detect_node_state=1;//innentől mérünk
 80058e0:	4b37      	ldr	r3, [pc, #220]	; (80059c0 <Detect_Node4+0x104>)
 80058e2:	2201      	movs	r2, #1
 80058e4:	701a      	strb	r2, [r3, #0]
		ignore=1;
 80058e6:	4b38      	ldr	r3, [pc, #224]	; (80059c8 <Detect_Node4+0x10c>)
 80058e8:	2201      	movs	r2, #1
 80058ea:	701a      	strb	r2, [r3, #0]
		t_stamp=t;
 80058ec:	4a37      	ldr	r2, [pc, #220]	; (80059cc <Detect_Node4+0x110>)
 80058ee:	683b      	ldr	r3, [r7, #0]
 80058f0:	6013      	str	r3, [r2, #0]
 80058f2:	e03e      	b.n	8005972 <Detect_Node4+0xb6>

	}
	else if(LINE_CNT==4 && detect_node_state)
 80058f4:	4b31      	ldr	r3, [pc, #196]	; (80059bc <Detect_Node4+0x100>)
 80058f6:	785b      	ldrb	r3, [r3, #1]
 80058f8:	2b04      	cmp	r3, #4
 80058fa:	d13a      	bne.n	8005972 <Detect_Node4+0xb6>
 80058fc:	4b30      	ldr	r3, [pc, #192]	; (80059c0 <Detect_Node4+0x104>)
 80058fe:	781b      	ldrb	r3, [r3, #0]
 8005900:	2b00      	cmp	r3, #0
 8005902:	d036      	beq.n	8005972 <Detect_Node4+0xb6>
	{
		s+=fabs(v)*(t-t_prev)/1000;
 8005904:	4b2f      	ldr	r3, [pc, #188]	; (80059c4 <Detect_Node4+0x108>)
 8005906:	681b      	ldr	r3, [r3, #0]
 8005908:	4618      	mov	r0, r3
 800590a:	f7fa fe3d 	bl	8000588 <__aeabi_f2d>
 800590e:	4604      	mov	r4, r0
 8005910:	460d      	mov	r5, r1
 8005912:	4b2f      	ldr	r3, [pc, #188]	; (80059d0 <Detect_Node4+0x114>)
 8005914:	edd3 7a00 	vldr	s15, [r3]
 8005918:	eef0 7ae7 	vabs.f32	s15, s15
 800591c:	ee17 0a90 	vmov	r0, s15
 8005920:	f7fa fe32 	bl	8000588 <__aeabi_f2d>
 8005924:	4680      	mov	r8, r0
 8005926:	4689      	mov	r9, r1
 8005928:	4b2a      	ldr	r3, [pc, #168]	; (80059d4 <Detect_Node4+0x118>)
 800592a:	681b      	ldr	r3, [r3, #0]
 800592c:	683a      	ldr	r2, [r7, #0]
 800592e:	1ad3      	subs	r3, r2, r3
 8005930:	4618      	mov	r0, r3
 8005932:	f7fa fe07 	bl	8000544 <__aeabi_ui2d>
 8005936:	4602      	mov	r2, r0
 8005938:	460b      	mov	r3, r1
 800593a:	4640      	mov	r0, r8
 800593c:	4649      	mov	r1, r9
 800593e:	f7fa fe7b 	bl	8000638 <__aeabi_dmul>
 8005942:	4602      	mov	r2, r0
 8005944:	460b      	mov	r3, r1
 8005946:	4610      	mov	r0, r2
 8005948:	4619      	mov	r1, r3
 800594a:	f04f 0200 	mov.w	r2, #0
 800594e:	4b22      	ldr	r3, [pc, #136]	; (80059d8 <Detect_Node4+0x11c>)
 8005950:	f7fa ff9c 	bl	800088c <__aeabi_ddiv>
 8005954:	4602      	mov	r2, r0
 8005956:	460b      	mov	r3, r1
 8005958:	4620      	mov	r0, r4
 800595a:	4629      	mov	r1, r5
 800595c:	f7fa fcb6 	bl	80002cc <__adddf3>
 8005960:	4602      	mov	r2, r0
 8005962:	460b      	mov	r3, r1
 8005964:	4610      	mov	r0, r2
 8005966:	4619      	mov	r1, r3
 8005968:	f7fb f93e 	bl	8000be8 <__aeabi_d2f>
 800596c:	4603      	mov	r3, r0
 800596e:	4a15      	ldr	r2, [pc, #84]	; (80059c4 <Detect_Node4+0x108>)
 8005970:	6013      	str	r3, [r2, #0]
	}
	if((t-t_stamp)>160 && detect_node_state)
 8005972:	4b16      	ldr	r3, [pc, #88]	; (80059cc <Detect_Node4+0x110>)
 8005974:	681b      	ldr	r3, [r3, #0]
 8005976:	683a      	ldr	r2, [r7, #0]
 8005978:	1ad3      	subs	r3, r2, r3
 800597a:	2ba0      	cmp	r3, #160	; 0xa0
 800597c:	d916      	bls.n	80059ac <Detect_Node4+0xf0>
 800597e:	4b10      	ldr	r3, [pc, #64]	; (80059c0 <Detect_Node4+0x104>)
 8005980:	781b      	ldrb	r3, [r3, #0]
 8005982:	2b00      	cmp	r3, #0
 8005984:	d012      	beq.n	80059ac <Detect_Node4+0xf0>
	{
		detect_node_state=0;
 8005986:	4b0e      	ldr	r3, [pc, #56]	; (80059c0 <Detect_Node4+0x104>)
 8005988:	2200      	movs	r2, #0
 800598a:	701a      	strb	r2, [r3, #0]
		ignore=0;
 800598c:	4b0e      	ldr	r3, [pc, #56]	; (80059c8 <Detect_Node4+0x10c>)
 800598e:	2200      	movs	r2, #0
 8005990:	701a      	strb	r2, [r3, #0]
		if(s>50)//horizontal node
 8005992:	4b0c      	ldr	r3, [pc, #48]	; (80059c4 <Detect_Node4+0x108>)
 8005994:	edd3 7a00 	vldr	s15, [r3]
 8005998:	ed9f 7a10 	vldr	s14, [pc, #64]	; 80059dc <Detect_Node4+0x120>
 800599c:	eef4 7ac7 	vcmpe.f32	s15, s14
 80059a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80059a4:	dd02      	ble.n	80059ac <Detect_Node4+0xf0>
		{
			nodeDetected=1; //horizont node
 80059a6:	4b0e      	ldr	r3, [pc, #56]	; (80059e0 <Detect_Node4+0x124>)
 80059a8:	2201      	movs	r2, #1
 80059aa:	701a      	strb	r2, [r3, #0]
			//LED_B_TOGGLE;
		}
	}
	t_prev=t;
 80059ac:	4a09      	ldr	r2, [pc, #36]	; (80059d4 <Detect_Node4+0x118>)
 80059ae:	683b      	ldr	r3, [r7, #0]
 80059b0:	6013      	str	r3, [r2, #0]
}
 80059b2:	bf00      	nop
 80059b4:	3708      	adds	r7, #8
 80059b6:	46bd      	mov	sp, r7
 80059b8:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 80059bc:	20000774 	.word	0x20000774
 80059c0:	200007dc 	.word	0x200007dc
 80059c4:	200007e0 	.word	0x200007e0
 80059c8:	2000077e 	.word	0x2000077e
 80059cc:	200007e4 	.word	0x200007e4
 80059d0:	20000754 	.word	0x20000754
 80059d4:	200007e8 	.word	0x200007e8
 80059d8:	408f4000 	.word	0x408f4000
 80059dc:	42480000 	.word	0x42480000
 80059e0:	20000345 	.word	0x20000345

080059e4 <Detect_Node5>:

void Detect_Node5(UART_HandleTypeDef *huart_debugg, uint32_t t)
{
 80059e4:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 80059e8:	b082      	sub	sp, #8
 80059ea:	af00      	add	r7, sp, #0
 80059ec:	6078      	str	r0, [r7, #4]
 80059ee:	6039      	str	r1, [r7, #0]
	static uint32_t t_prev=0;
	static uint32_t t_stamp=0;
	static uint8_t detect_node_state=0;
	static float s=0;

	if(LINE_CNT==4 && !detect_node_state)
 80059f0:	4b3c      	ldr	r3, [pc, #240]	; (8005ae4 <Detect_Node5+0x100>)
 80059f2:	785b      	ldrb	r3, [r3, #1]
 80059f4:	2b04      	cmp	r3, #4
 80059f6:	d111      	bne.n	8005a1c <Detect_Node5+0x38>
 80059f8:	4b3b      	ldr	r3, [pc, #236]	; (8005ae8 <Detect_Node5+0x104>)
 80059fa:	781b      	ldrb	r3, [r3, #0]
 80059fc:	2b00      	cmp	r3, #0
 80059fe:	d10d      	bne.n	8005a1c <Detect_Node5+0x38>
	{
		s=0;
 8005a00:	4b3a      	ldr	r3, [pc, #232]	; (8005aec <Detect_Node5+0x108>)
 8005a02:	f04f 0200 	mov.w	r2, #0
 8005a06:	601a      	str	r2, [r3, #0]
		detect_node_state=1;//innentől mérünk
 8005a08:	4b37      	ldr	r3, [pc, #220]	; (8005ae8 <Detect_Node5+0x104>)
 8005a0a:	2201      	movs	r2, #1
 8005a0c:	701a      	strb	r2, [r3, #0]
		ignore=1;
 8005a0e:	4b38      	ldr	r3, [pc, #224]	; (8005af0 <Detect_Node5+0x10c>)
 8005a10:	2201      	movs	r2, #1
 8005a12:	701a      	strb	r2, [r3, #0]
		t_stamp=t;
 8005a14:	4a37      	ldr	r2, [pc, #220]	; (8005af4 <Detect_Node5+0x110>)
 8005a16:	683b      	ldr	r3, [r7, #0]
 8005a18:	6013      	str	r3, [r2, #0]
 8005a1a:	e03e      	b.n	8005a9a <Detect_Node5+0xb6>

	}
	else if(LINE_CNT==4 && detect_node_state)
 8005a1c:	4b31      	ldr	r3, [pc, #196]	; (8005ae4 <Detect_Node5+0x100>)
 8005a1e:	785b      	ldrb	r3, [r3, #1]
 8005a20:	2b04      	cmp	r3, #4
 8005a22:	d13a      	bne.n	8005a9a <Detect_Node5+0xb6>
 8005a24:	4b30      	ldr	r3, [pc, #192]	; (8005ae8 <Detect_Node5+0x104>)
 8005a26:	781b      	ldrb	r3, [r3, #0]
 8005a28:	2b00      	cmp	r3, #0
 8005a2a:	d036      	beq.n	8005a9a <Detect_Node5+0xb6>
	{
		s+=fabs(v)*(t-t_prev)/1000;
 8005a2c:	4b2f      	ldr	r3, [pc, #188]	; (8005aec <Detect_Node5+0x108>)
 8005a2e:	681b      	ldr	r3, [r3, #0]
 8005a30:	4618      	mov	r0, r3
 8005a32:	f7fa fda9 	bl	8000588 <__aeabi_f2d>
 8005a36:	4604      	mov	r4, r0
 8005a38:	460d      	mov	r5, r1
 8005a3a:	4b2f      	ldr	r3, [pc, #188]	; (8005af8 <Detect_Node5+0x114>)
 8005a3c:	edd3 7a00 	vldr	s15, [r3]
 8005a40:	eef0 7ae7 	vabs.f32	s15, s15
 8005a44:	ee17 0a90 	vmov	r0, s15
 8005a48:	f7fa fd9e 	bl	8000588 <__aeabi_f2d>
 8005a4c:	4680      	mov	r8, r0
 8005a4e:	4689      	mov	r9, r1
 8005a50:	4b2a      	ldr	r3, [pc, #168]	; (8005afc <Detect_Node5+0x118>)
 8005a52:	681b      	ldr	r3, [r3, #0]
 8005a54:	683a      	ldr	r2, [r7, #0]
 8005a56:	1ad3      	subs	r3, r2, r3
 8005a58:	4618      	mov	r0, r3
 8005a5a:	f7fa fd73 	bl	8000544 <__aeabi_ui2d>
 8005a5e:	4602      	mov	r2, r0
 8005a60:	460b      	mov	r3, r1
 8005a62:	4640      	mov	r0, r8
 8005a64:	4649      	mov	r1, r9
 8005a66:	f7fa fde7 	bl	8000638 <__aeabi_dmul>
 8005a6a:	4602      	mov	r2, r0
 8005a6c:	460b      	mov	r3, r1
 8005a6e:	4610      	mov	r0, r2
 8005a70:	4619      	mov	r1, r3
 8005a72:	f04f 0200 	mov.w	r2, #0
 8005a76:	4b22      	ldr	r3, [pc, #136]	; (8005b00 <Detect_Node5+0x11c>)
 8005a78:	f7fa ff08 	bl	800088c <__aeabi_ddiv>
 8005a7c:	4602      	mov	r2, r0
 8005a7e:	460b      	mov	r3, r1
 8005a80:	4620      	mov	r0, r4
 8005a82:	4629      	mov	r1, r5
 8005a84:	f7fa fc22 	bl	80002cc <__adddf3>
 8005a88:	4602      	mov	r2, r0
 8005a8a:	460b      	mov	r3, r1
 8005a8c:	4610      	mov	r0, r2
 8005a8e:	4619      	mov	r1, r3
 8005a90:	f7fb f8aa 	bl	8000be8 <__aeabi_d2f>
 8005a94:	4603      	mov	r3, r0
 8005a96:	4a15      	ldr	r2, [pc, #84]	; (8005aec <Detect_Node5+0x108>)
 8005a98:	6013      	str	r3, [r2, #0]
	}
	if((t-t_stamp)>130 && detect_node_state)
 8005a9a:	4b16      	ldr	r3, [pc, #88]	; (8005af4 <Detect_Node5+0x110>)
 8005a9c:	681b      	ldr	r3, [r3, #0]
 8005a9e:	683a      	ldr	r2, [r7, #0]
 8005aa0:	1ad3      	subs	r3, r2, r3
 8005aa2:	2b82      	cmp	r3, #130	; 0x82
 8005aa4:	d916      	bls.n	8005ad4 <Detect_Node5+0xf0>
 8005aa6:	4b10      	ldr	r3, [pc, #64]	; (8005ae8 <Detect_Node5+0x104>)
 8005aa8:	781b      	ldrb	r3, [r3, #0]
 8005aaa:	2b00      	cmp	r3, #0
 8005aac:	d012      	beq.n	8005ad4 <Detect_Node5+0xf0>
	{
		detect_node_state=0;
 8005aae:	4b0e      	ldr	r3, [pc, #56]	; (8005ae8 <Detect_Node5+0x104>)
 8005ab0:	2200      	movs	r2, #0
 8005ab2:	701a      	strb	r2, [r3, #0]
		ignore=0;
 8005ab4:	4b0e      	ldr	r3, [pc, #56]	; (8005af0 <Detect_Node5+0x10c>)
 8005ab6:	2200      	movs	r2, #0
 8005ab8:	701a      	strb	r2, [r3, #0]
		if(s>50)//horizontal node
 8005aba:	4b0c      	ldr	r3, [pc, #48]	; (8005aec <Detect_Node5+0x108>)
 8005abc:	edd3 7a00 	vldr	s15, [r3]
 8005ac0:	ed9f 7a10 	vldr	s14, [pc, #64]	; 8005b04 <Detect_Node5+0x120>
 8005ac4:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005ac8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005acc:	dd02      	ble.n	8005ad4 <Detect_Node5+0xf0>
		{
			nodeDetected=1; //horizont node
 8005ace:	4b0e      	ldr	r3, [pc, #56]	; (8005b08 <Detect_Node5+0x124>)
 8005ad0:	2201      	movs	r2, #1
 8005ad2:	701a      	strb	r2, [r3, #0]
			//LED_B_TOGGLE;
		}
	}
	t_prev=t;
 8005ad4:	4a09      	ldr	r2, [pc, #36]	; (8005afc <Detect_Node5+0x118>)
 8005ad6:	683b      	ldr	r3, [r7, #0]
 8005ad8:	6013      	str	r3, [r2, #0]
}
 8005ada:	bf00      	nop
 8005adc:	3708      	adds	r7, #8
 8005ade:	46bd      	mov	sp, r7
 8005ae0:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8005ae4:	20000774 	.word	0x20000774
 8005ae8:	200007ec 	.word	0x200007ec
 8005aec:	200007f0 	.word	0x200007f0
 8005af0:	2000077e 	.word	0x2000077e
 8005af4:	200007f4 	.word	0x200007f4
 8005af8:	20000754 	.word	0x20000754
 8005afc:	200007f8 	.word	0x200007f8
 8005b00:	408f4000 	.word	0x408f4000
 8005b04:	42480000 	.word	0x42480000
 8005b08:	20000345 	.word	0x20000345

08005b0c <Lane_Changer>:

uint8_t Lane_Changer(uint32_t t)
{
 8005b0c:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8005b10:	b084      	sub	sp, #16
 8005b12:	af00      	add	r7, sp, #0
 8005b14:	6078      	str	r0, [r7, #4]
	static uint8_t lineCnt_prev=1;
	static float s=0;
	static int i=0;
	static uint32_t dt[5]={1000,1000,1000,1000,1000};

	if(laneChange<2)return 0;
 8005b16:	4b79      	ldr	r3, [pc, #484]	; (8005cfc <Lane_Changer+0x1f0>)
 8005b18:	781b      	ldrb	r3, [r3, #0]
 8005b1a:	2b01      	cmp	r3, #1
 8005b1c:	d801      	bhi.n	8005b22 <Lane_Changer+0x16>
 8005b1e:	2300      	movs	r3, #0
 8005b20:	e0e6      	b.n	8005cf0 <Lane_Changer+0x1e4>
	if(LINE_CNT != lineCnt_prev && (LINE_CNT==1 || LINE_CNT==2) && laneChange==2) //ha változik az alattunk lévő vonalak száma
 8005b22:	4b77      	ldr	r3, [pc, #476]	; (8005d00 <Lane_Changer+0x1f4>)
 8005b24:	785a      	ldrb	r2, [r3, #1]
 8005b26:	4b77      	ldr	r3, [pc, #476]	; (8005d04 <Lane_Changer+0x1f8>)
 8005b28:	781b      	ldrb	r3, [r3, #0]
 8005b2a:	429a      	cmp	r2, r3
 8005b2c:	d041      	beq.n	8005bb2 <Lane_Changer+0xa6>
 8005b2e:	4b74      	ldr	r3, [pc, #464]	; (8005d00 <Lane_Changer+0x1f4>)
 8005b30:	785b      	ldrb	r3, [r3, #1]
 8005b32:	2b01      	cmp	r3, #1
 8005b34:	d003      	beq.n	8005b3e <Lane_Changer+0x32>
 8005b36:	4b72      	ldr	r3, [pc, #456]	; (8005d00 <Lane_Changer+0x1f4>)
 8005b38:	785b      	ldrb	r3, [r3, #1]
 8005b3a:	2b02      	cmp	r3, #2
 8005b3c:	d139      	bne.n	8005bb2 <Lane_Changer+0xa6>
 8005b3e:	4b6f      	ldr	r3, [pc, #444]	; (8005cfc <Lane_Changer+0x1f0>)
 8005b40:	781b      	ldrb	r3, [r3, #0]
 8005b42:	2b02      	cmp	r3, #2
 8005b44:	d135      	bne.n	8005bb2 <Lane_Changer+0xa6>
	{
		dt[i] = t - t_stamp;
 8005b46:	4b70      	ldr	r3, [pc, #448]	; (8005d08 <Lane_Changer+0x1fc>)
 8005b48:	681a      	ldr	r2, [r3, #0]
 8005b4a:	4b70      	ldr	r3, [pc, #448]	; (8005d0c <Lane_Changer+0x200>)
 8005b4c:	681b      	ldr	r3, [r3, #0]
 8005b4e:	6879      	ldr	r1, [r7, #4]
 8005b50:	1a8a      	subs	r2, r1, r2
 8005b52:	496f      	ldr	r1, [pc, #444]	; (8005d10 <Lane_Changer+0x204>)
 8005b54:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		uint32_t sum=dt[0] + dt[1] + dt[2] + dt[3]+ dt[4];
 8005b58:	4b6d      	ldr	r3, [pc, #436]	; (8005d10 <Lane_Changer+0x204>)
 8005b5a:	681a      	ldr	r2, [r3, #0]
 8005b5c:	4b6c      	ldr	r3, [pc, #432]	; (8005d10 <Lane_Changer+0x204>)
 8005b5e:	685b      	ldr	r3, [r3, #4]
 8005b60:	441a      	add	r2, r3
 8005b62:	4b6b      	ldr	r3, [pc, #428]	; (8005d10 <Lane_Changer+0x204>)
 8005b64:	689b      	ldr	r3, [r3, #8]
 8005b66:	441a      	add	r2, r3
 8005b68:	4b69      	ldr	r3, [pc, #420]	; (8005d10 <Lane_Changer+0x204>)
 8005b6a:	68db      	ldr	r3, [r3, #12]
 8005b6c:	441a      	add	r2, r3
 8005b6e:	4b68      	ldr	r3, [pc, #416]	; (8005d10 <Lane_Changer+0x204>)
 8005b70:	691b      	ldr	r3, [r3, #16]
 8005b72:	4413      	add	r3, r2
 8005b74:	60fb      	str	r3, [r7, #12]
		if((sum > 250) && (sum < 1000))//ha másfél másodpercen belül van8 váltás
 8005b76:	68fb      	ldr	r3, [r7, #12]
 8005b78:	2bfa      	cmp	r3, #250	; 0xfa
 8005b7a:	d90a      	bls.n	8005b92 <Lane_Changer+0x86>
 8005b7c:	68fb      	ldr	r3, [r7, #12]
 8005b7e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005b82:	d206      	bcs.n	8005b92 <Lane_Changer+0x86>
		{
			s=0;
 8005b84:	4b63      	ldr	r3, [pc, #396]	; (8005d14 <Lane_Changer+0x208>)
 8005b86:	f04f 0200 	mov.w	r2, #0
 8005b8a:	601a      	str	r2, [r3, #0]
			laneChange=3;
 8005b8c:	4b5b      	ldr	r3, [pc, #364]	; (8005cfc <Lane_Changer+0x1f0>)
 8005b8e:	2203      	movs	r2, #3
 8005b90:	701a      	strb	r2, [r3, #0]
		}
		i++;
 8005b92:	4b5e      	ldr	r3, [pc, #376]	; (8005d0c <Lane_Changer+0x200>)
 8005b94:	681b      	ldr	r3, [r3, #0]
 8005b96:	3301      	adds	r3, #1
 8005b98:	4a5c      	ldr	r2, [pc, #368]	; (8005d0c <Lane_Changer+0x200>)
 8005b9a:	6013      	str	r3, [r2, #0]
		if(i>4) i=0;
 8005b9c:	4b5b      	ldr	r3, [pc, #364]	; (8005d0c <Lane_Changer+0x200>)
 8005b9e:	681b      	ldr	r3, [r3, #0]
 8005ba0:	2b04      	cmp	r3, #4
 8005ba2:	dd02      	ble.n	8005baa <Lane_Changer+0x9e>
 8005ba4:	4b59      	ldr	r3, [pc, #356]	; (8005d0c <Lane_Changer+0x200>)
 8005ba6:	2200      	movs	r2, #0
 8005ba8:	601a      	str	r2, [r3, #0]
		t_stamp = t;
 8005baa:	4a57      	ldr	r2, [pc, #348]	; (8005d08 <Lane_Changer+0x1fc>)
 8005bac:	687b      	ldr	r3, [r7, #4]
 8005bae:	6013      	str	r3, [r2, #0]
	{
 8005bb0:	e096      	b.n	8005ce0 <Lane_Changer+0x1d4>
	}
	else if(laneChange==3)
 8005bb2:	4b52      	ldr	r3, [pc, #328]	; (8005cfc <Lane_Changer+0x1f0>)
 8005bb4:	781b      	ldrb	r3, [r3, #0]
 8005bb6:	2b03      	cmp	r3, #3
 8005bb8:	d172      	bne.n	8005ca0 <Lane_Changer+0x194>
	{
		s+=fabs(v)*(t-t_prev)/1000;
 8005bba:	4b56      	ldr	r3, [pc, #344]	; (8005d14 <Lane_Changer+0x208>)
 8005bbc:	681b      	ldr	r3, [r3, #0]
 8005bbe:	4618      	mov	r0, r3
 8005bc0:	f7fa fce2 	bl	8000588 <__aeabi_f2d>
 8005bc4:	4604      	mov	r4, r0
 8005bc6:	460d      	mov	r5, r1
 8005bc8:	4b53      	ldr	r3, [pc, #332]	; (8005d18 <Lane_Changer+0x20c>)
 8005bca:	edd3 7a00 	vldr	s15, [r3]
 8005bce:	eef0 7ae7 	vabs.f32	s15, s15
 8005bd2:	ee17 0a90 	vmov	r0, s15
 8005bd6:	f7fa fcd7 	bl	8000588 <__aeabi_f2d>
 8005bda:	4680      	mov	r8, r0
 8005bdc:	4689      	mov	r9, r1
 8005bde:	4b4f      	ldr	r3, [pc, #316]	; (8005d1c <Lane_Changer+0x210>)
 8005be0:	681b      	ldr	r3, [r3, #0]
 8005be2:	687a      	ldr	r2, [r7, #4]
 8005be4:	1ad3      	subs	r3, r2, r3
 8005be6:	4618      	mov	r0, r3
 8005be8:	f7fa fcac 	bl	8000544 <__aeabi_ui2d>
 8005bec:	4602      	mov	r2, r0
 8005bee:	460b      	mov	r3, r1
 8005bf0:	4640      	mov	r0, r8
 8005bf2:	4649      	mov	r1, r9
 8005bf4:	f7fa fd20 	bl	8000638 <__aeabi_dmul>
 8005bf8:	4602      	mov	r2, r0
 8005bfa:	460b      	mov	r3, r1
 8005bfc:	4610      	mov	r0, r2
 8005bfe:	4619      	mov	r1, r3
 8005c00:	f04f 0200 	mov.w	r2, #0
 8005c04:	4b46      	ldr	r3, [pc, #280]	; (8005d20 <Lane_Changer+0x214>)
 8005c06:	f7fa fe41 	bl	800088c <__aeabi_ddiv>
 8005c0a:	4602      	mov	r2, r0
 8005c0c:	460b      	mov	r3, r1
 8005c0e:	4620      	mov	r0, r4
 8005c10:	4629      	mov	r1, r5
 8005c12:	f7fa fb5b 	bl	80002cc <__adddf3>
 8005c16:	4602      	mov	r2, r0
 8005c18:	460b      	mov	r3, r1
 8005c1a:	4610      	mov	r0, r2
 8005c1c:	4619      	mov	r1, r3
 8005c1e:	f7fa ffe3 	bl	8000be8 <__aeabi_d2f>
 8005c22:	4603      	mov	r3, r0
 8005c24:	4a3b      	ldr	r2, [pc, #236]	; (8005d14 <Lane_Changer+0x208>)
 8005c26:	6013      	str	r3, [r2, #0]
		if(orientation==REVERSE)
 8005c28:	4b3e      	ldr	r3, [pc, #248]	; (8005d24 <Lane_Changer+0x218>)
 8005c2a:	781b      	ldrb	r3, [r3, #0]
 8005c2c:	2b01      	cmp	r3, #1
 8005c2e:	d114      	bne.n	8005c5a <Lane_Changer+0x14e>
		{
			FRONT_CCR(SERVO_FRONT_CCR_MIDDLE+160);
 8005c30:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8005c34:	f44f 7255 	mov.w	r2, #852	; 0x354
 8005c38:	635a      	str	r2, [r3, #52]	; 0x34
			REAR_CCR(SERVO_REAR_CCR_MIDDLE-150);
 8005c3a:	4b3b      	ldr	r3, [pc, #236]	; (8005d28 <Lane_Changer+0x21c>)
 8005c3c:	f240 2212 	movw	r2, #530	; 0x212
 8005c40:	641a      	str	r2, [r3, #64]	; 0x40
			timeout=1500;
 8005c42:	4b3a      	ldr	r3, [pc, #232]	; (8005d2c <Lane_Changer+0x220>)
 8005c44:	f240 52dc 	movw	r2, #1500	; 0x5dc
 8005c48:	601a      	str	r2, [r3, #0]
			laneChange=4;
 8005c4a:	4b2c      	ldr	r3, [pc, #176]	; (8005cfc <Lane_Changer+0x1f0>)
 8005c4c:	2204      	movs	r2, #4
 8005c4e:	701a      	strb	r2, [r3, #0]
			t_stamp=t;
 8005c50:	4a2d      	ldr	r2, [pc, #180]	; (8005d08 <Lane_Changer+0x1fc>)
 8005c52:	687b      	ldr	r3, [r7, #4]
 8005c54:	6013      	str	r3, [r2, #0]
			return 1;
 8005c56:	2301      	movs	r3, #1
 8005c58:	e04a      	b.n	8005cf0 <Lane_Changer+0x1e4>
		}
		else if(orientation==FORWARD && s>800)
 8005c5a:	4b32      	ldr	r3, [pc, #200]	; (8005d24 <Lane_Changer+0x218>)
 8005c5c:	781b      	ldrb	r3, [r3, #0]
 8005c5e:	2b00      	cmp	r3, #0
 8005c60:	d13e      	bne.n	8005ce0 <Lane_Changer+0x1d4>
 8005c62:	4b2c      	ldr	r3, [pc, #176]	; (8005d14 <Lane_Changer+0x208>)
 8005c64:	edd3 7a00 	vldr	s15, [r3]
 8005c68:	ed9f 7a31 	vldr	s14, [pc, #196]	; 8005d30 <Lane_Changer+0x224>
 8005c6c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005c70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005c74:	dd34      	ble.n	8005ce0 <Lane_Changer+0x1d4>
		{
			FRONT_CCR(CCR_FRONT_MAX);
 8005c76:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8005c7a:	f44f 7261 	mov.w	r2, #900	; 0x384
 8005c7e:	635a      	str	r2, [r3, #52]	; 0x34
			REAR_CCR(CCR_REAR_MAX);
 8005c80:	4b29      	ldr	r3, [pc, #164]	; (8005d28 <Lane_Changer+0x21c>)
 8005c82:	f44f 7252 	mov.w	r2, #840	; 0x348
 8005c86:	641a      	str	r2, [r3, #64]	; 0x40
			timeout=3000;
 8005c88:	4b28      	ldr	r3, [pc, #160]	; (8005d2c <Lane_Changer+0x220>)
 8005c8a:	f640 32b8 	movw	r2, #3000	; 0xbb8
 8005c8e:	601a      	str	r2, [r3, #0]
			laneChange=4;
 8005c90:	4b1a      	ldr	r3, [pc, #104]	; (8005cfc <Lane_Changer+0x1f0>)
 8005c92:	2204      	movs	r2, #4
 8005c94:	701a      	strb	r2, [r3, #0]
			t_stamp=t;
 8005c96:	4a1c      	ldr	r2, [pc, #112]	; (8005d08 <Lane_Changer+0x1fc>)
 8005c98:	687b      	ldr	r3, [r7, #4]
 8005c9a:	6013      	str	r3, [r2, #0]
			return 1;
 8005c9c:	2301      	movs	r3, #1
 8005c9e:	e027      	b.n	8005cf0 <Lane_Changer+0x1e4>
		}
	}
	else if(laneChange==4)
 8005ca0:	4b16      	ldr	r3, [pc, #88]	; (8005cfc <Lane_Changer+0x1f0>)
 8005ca2:	781b      	ldrb	r3, [r3, #0]
 8005ca4:	2b04      	cmp	r3, #4
 8005ca6:	d11b      	bne.n	8005ce0 <Lane_Changer+0x1d4>
	{
		LED_Y(0);
 8005ca8:	2201      	movs	r2, #1
 8005caa:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8005cae:	4821      	ldr	r0, [pc, #132]	; (8005d34 <Lane_Changer+0x228>)
 8005cb0:	f003 fc26 	bl	8009500 <HAL_GPIO_WritePin>
		v_control=SLOW_DOWN;
 8005cb4:	4b20      	ldr	r3, [pc, #128]	; (8005d38 <Lane_Changer+0x22c>)
 8005cb6:	2201      	movs	r2, #1
 8005cb8:	701a      	strb	r2, [r3, #0]
		if((t-t_stamp)>timeout && LINE_CNT>0)
 8005cba:	4b13      	ldr	r3, [pc, #76]	; (8005d08 <Lane_Changer+0x1fc>)
 8005cbc:	681b      	ldr	r3, [r3, #0]
 8005cbe:	687a      	ldr	r2, [r7, #4]
 8005cc0:	1ad2      	subs	r2, r2, r3
 8005cc2:	4b1a      	ldr	r3, [pc, #104]	; (8005d2c <Lane_Changer+0x220>)
 8005cc4:	681b      	ldr	r3, [r3, #0]
 8005cc6:	429a      	cmp	r2, r3
 8005cc8:	d908      	bls.n	8005cdc <Lane_Changer+0x1d0>
 8005cca:	4b0d      	ldr	r3, [pc, #52]	; (8005d00 <Lane_Changer+0x1f4>)
 8005ccc:	785b      	ldrb	r3, [r3, #1]
 8005cce:	2b00      	cmp	r3, #0
 8005cd0:	d004      	beq.n	8005cdc <Lane_Changer+0x1d0>
		{
			ignore=1;
 8005cd2:	4b1a      	ldr	r3, [pc, #104]	; (8005d3c <Lane_Changer+0x230>)
 8005cd4:	2201      	movs	r2, #1
 8005cd6:	701a      	strb	r2, [r3, #0]
			return 0;
 8005cd8:	2300      	movs	r3, #0
 8005cda:	e009      	b.n	8005cf0 <Lane_Changer+0x1e4>
		}
		else return 1;
 8005cdc:	2301      	movs	r3, #1
 8005cde:	e007      	b.n	8005cf0 <Lane_Changer+0x1e4>
	}
	lineCnt_prev=LINE_CNT;
 8005ce0:	4b07      	ldr	r3, [pc, #28]	; (8005d00 <Lane_Changer+0x1f4>)
 8005ce2:	785a      	ldrb	r2, [r3, #1]
 8005ce4:	4b07      	ldr	r3, [pc, #28]	; (8005d04 <Lane_Changer+0x1f8>)
 8005ce6:	701a      	strb	r2, [r3, #0]
	t_prev=t;
 8005ce8:	4a0c      	ldr	r2, [pc, #48]	; (8005d1c <Lane_Changer+0x210>)
 8005cea:	687b      	ldr	r3, [r7, #4]
 8005cec:	6013      	str	r3, [r2, #0]
	return 0;
 8005cee:	2300      	movs	r3, #0
}
 8005cf0:	4618      	mov	r0, r3
 8005cf2:	3710      	adds	r7, #16
 8005cf4:	46bd      	mov	sp, r7
 8005cf6:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8005cfa:	bf00      	nop
 8005cfc:	20000348 	.word	0x20000348
 8005d00:	20000774 	.word	0x20000774
 8005d04:	2000010d 	.word	0x2000010d
 8005d08:	200007fc 	.word	0x200007fc
 8005d0c:	20000800 	.word	0x20000800
 8005d10:	20000110 	.word	0x20000110
 8005d14:	20000804 	.word	0x20000804
 8005d18:	20000754 	.word	0x20000754
 8005d1c:	20000808 	.word	0x20000808
 8005d20:	408f4000 	.word	0x408f4000
 8005d24:	20000344 	.word	0x20000344
 8005d28:	40010000 	.word	0x40010000
 8005d2c:	2000080c 	.word	0x2000080c
 8005d30:	44480000 	.word	0x44480000
 8005d34:	40020400 	.word	0x40020400
 8005d38:	20000349 	.word	0x20000349
 8005d3c:	2000077e 	.word	0x2000077e

08005d40 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8005d40:	b580      	push	{r7, lr}
 8005d42:	b084      	sub	sp, #16
 8005d44:	af04      	add	r7, sp, #16
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8005d46:	f001 fccf 	bl	80076e8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8005d4a:	f000 f897 	bl	8005e7c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8005d4e:	f000 fdb5 	bl	80068bc <MX_GPIO_Init>
  MX_DMA_Init();
 8005d52:	f000 fd93 	bl	800687c <MX_DMA_Init>
  MX_TIM2_Init();
 8005d56:	f000 fa87 	bl	8006268 <MX_TIM2_Init>
  MX_USART1_UART_Init();
 8005d5a:	f000 fd11 	bl	8006780 <MX_USART1_UART_Init>
  MX_TIM4_Init();
 8005d5e:	f000 fb7b 	bl	8006458 <MX_TIM4_Init>
  MX_ADC2_Init();
 8005d62:	f000 f98f 	bl	8006084 <MX_ADC2_Init>
  MX_TIM3_Init();
 8005d66:	f000 faf5 	bl	8006354 <MX_TIM3_Init>
  MX_UART5_Init();
 8005d6a:	f000 fcdf 	bl	800672c <MX_UART5_Init>
  MX_USART2_UART_Init();
 8005d6e:	f000 fd31 	bl	80067d4 <MX_USART2_UART_Init>
  MX_TIM8_Init();
 8005d72:	f000 fc3b 	bl	80065ec <MX_TIM8_Init>
  MX_ADC1_Init();
 8005d76:	f000 f8f3 	bl	8005f60 <MX_ADC1_Init>
  MX_USART3_UART_Init();
 8005d7a:	f000 fd55 	bl	8006828 <MX_USART3_UART_Init>
  MX_TIM5_Init();
 8005d7e:	f000 fbe7 	bl	8006550 <MX_TIM5_Init>
  MX_TIM1_Init();
 8005d82:	f000 f9d1 	bl	8006128 <MX_TIM1_Init>
  MX_TIM14_Init();
 8005d86:	f000 fcad 	bl	80066e4 <MX_TIM14_Init>
  MX_TIM13_Init();
 8005d8a:	f000 fc87 	bl	800669c <MX_TIM13_Init>
  /* USER CODE BEGIN 2 */
  F4_Basic_Init(&huart1, &htim5, &htim3, &htim2, &htim1, &htim8,&htim13,&htim14);
 8005d8e:	4b2e      	ldr	r3, [pc, #184]	; (8005e48 <main+0x108>)
 8005d90:	9303      	str	r3, [sp, #12]
 8005d92:	4b2e      	ldr	r3, [pc, #184]	; (8005e4c <main+0x10c>)
 8005d94:	9302      	str	r3, [sp, #8]
 8005d96:	4b2e      	ldr	r3, [pc, #184]	; (8005e50 <main+0x110>)
 8005d98:	9301      	str	r3, [sp, #4]
 8005d9a:	4b2e      	ldr	r3, [pc, #184]	; (8005e54 <main+0x114>)
 8005d9c:	9300      	str	r3, [sp, #0]
 8005d9e:	4b2e      	ldr	r3, [pc, #184]	; (8005e58 <main+0x118>)
 8005da0:	4a2e      	ldr	r2, [pc, #184]	; (8005e5c <main+0x11c>)
 8005da2:	492f      	ldr	r1, [pc, #188]	; (8005e60 <main+0x120>)
 8005da4:	482f      	ldr	r0, [pc, #188]	; (8005e64 <main+0x124>)
 8005da6:	f7fb f907 	bl	8000fb8 <F4_Basic_Init>
  Remote_Control_Init(&htim4, TIM_CHANNEL_3);
 8005daa:	2108      	movs	r1, #8
 8005dac:	482e      	ldr	r0, [pc, #184]	; (8005e68 <main+0x128>)
 8005dae:	f000 fed9 	bl	8006b64 <Remote_Control_Init>
  Battery_Voltage_Compensate(&hadc2, &hadc1, &huart1);
 8005db2:	4a2c      	ldr	r2, [pc, #176]	; (8005e64 <main+0x124>)
 8005db4:	492d      	ldr	r1, [pc, #180]	; (8005e6c <main+0x12c>)
 8005db6:	482e      	ldr	r0, [pc, #184]	; (8005e70 <main+0x130>)
 8005db8:	f7fe f8b2 	bl	8003f20 <Battery_Voltage_Compensate>

  Mode_Selector(&huart1, &huart5);
 8005dbc:	492d      	ldr	r1, [pc, #180]	; (8005e74 <main+0x134>)
 8005dbe:	4829      	ldr	r0, [pc, #164]	; (8005e64 <main+0x124>)
 8005dc0:	f7fd fd24 	bl	800380c <Mode_Selector>
  Create_Nodes(&huart1);
 8005dc4:	4827      	ldr	r0, [pc, #156]	; (8005e64 <main+0x124>)
 8005dc6:	f7fb fb4d 	bl	8001464 <Create_Nodes>
  Wait_For_Start_Sigal(&huart3,&huart1);
 8005dca:	4926      	ldr	r1, [pc, #152]	; (8005e64 <main+0x124>)
 8005dcc:	482a      	ldr	r0, [pc, #168]	; (8005e78 <main+0x138>)
 8005dce:	f7fd fded 	bl	80039ac <Wait_For_Start_Sigal>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {/**/
	  Measure_Velocity_Task(&htim8,TICK, 4);
 8005dd2:	4b23      	ldr	r3, [pc, #140]	; (8005e60 <main+0x120>)
 8005dd4:	681b      	ldr	r3, [r3, #0]
 8005dd6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005dd8:	2204      	movs	r2, #4
 8005dda:	4619      	mov	r1, r3
 8005ddc:	481c      	ldr	r0, [pc, #112]	; (8005e50 <main+0x110>)
 8005dde:	f7fe f9cb 	bl	8004178 <Measure_Velocity_Task>
	  Motor_Drive_Task(&htim3, &huart1, TICK, 10);
 8005de2:	4b1f      	ldr	r3, [pc, #124]	; (8005e60 <main+0x120>)
 8005de4:	681b      	ldr	r3, [r3, #0]
 8005de6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005de8:	230a      	movs	r3, #10
 8005dea:	491e      	ldr	r1, [pc, #120]	; (8005e64 <main+0x124>)
 8005dec:	481b      	ldr	r0, [pc, #108]	; (8005e5c <main+0x11c>)
 8005dee:	f7fe fa3f 	bl	8004270 <Motor_Drive_Task>
	  Remote_Control_Task(&htim4, TIM_CHANNEL_3, &huart1, TICK, 43);
 8005df2:	4b1b      	ldr	r3, [pc, #108]	; (8005e60 <main+0x120>)
 8005df4:	681b      	ldr	r3, [r3, #0]
 8005df6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005df8:	222b      	movs	r2, #43	; 0x2b
 8005dfa:	9200      	str	r2, [sp, #0]
 8005dfc:	4a19      	ldr	r2, [pc, #100]	; (8005e64 <main+0x124>)
 8005dfe:	2108      	movs	r1, #8
 8005e00:	4819      	ldr	r0, [pc, #100]	; (8005e68 <main+0x128>)
 8005e02:	f000 fecb 	bl	8006b9c <Remote_Control_Task>
	  Control_Task(&huart1,&htim14,TICK, 23);
 8005e06:	4b16      	ldr	r3, [pc, #88]	; (8005e60 <main+0x120>)
 8005e08:	681b      	ldr	r3, [r3, #0]
 8005e0a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005e0c:	2317      	movs	r3, #23
 8005e0e:	490e      	ldr	r1, [pc, #56]	; (8005e48 <main+0x108>)
 8005e10:	4814      	ldr	r0, [pc, #80]	; (8005e64 <main+0x124>)
 8005e12:	f7fc fc45 	bl	80026a0 <Control_Task>
	  Control_Task_2(&huart1,TICK, 23);
 8005e16:	4b12      	ldr	r3, [pc, #72]	; (8005e60 <main+0x120>)
 8005e18:	681b      	ldr	r3, [r3, #0]
 8005e1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e1c:	2217      	movs	r2, #23
 8005e1e:	4619      	mov	r1, r3
 8005e20:	4810      	ldr	r0, [pc, #64]	; (8005e64 <main+0x124>)
 8005e22:	f7fc fff1 	bl	8002e08 <Control_Task_2>
	  Line_Track_Task(&huart5, &huart1, TICK, 4);
 8005e26:	4b0e      	ldr	r3, [pc, #56]	; (8005e60 <main+0x120>)
 8005e28:	681b      	ldr	r3, [r3, #0]
 8005e2a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005e2c:	2304      	movs	r3, #4
 8005e2e:	490d      	ldr	r1, [pc, #52]	; (8005e64 <main+0x124>)
 8005e30:	4810      	ldr	r0, [pc, #64]	; (8005e74 <main+0x134>)
 8005e32:	f7fe fc91 	bl	8004758 <Line_Track_Task>
	  HDI_Read_Task(&huart1,&htim2,TICK, 200);
 8005e36:	4b0a      	ldr	r3, [pc, #40]	; (8005e60 <main+0x120>)
 8005e38:	681b      	ldr	r3, [r3, #0]
 8005e3a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005e3c:	23c8      	movs	r3, #200	; 0xc8
 8005e3e:	4906      	ldr	r1, [pc, #24]	; (8005e58 <main+0x118>)
 8005e40:	4808      	ldr	r0, [pc, #32]	; (8005e64 <main+0x124>)
 8005e42:	f7fb f97f 	bl	8001144 <HDI_Read_Task>
	  Measure_Velocity_Task(&htim8,TICK, 4);
 8005e46:	e7c4      	b.n	8005dd2 <main+0x92>
 8005e48:	20000a98 	.word	0x20000a98
 8005e4c:	20000a50 	.word	0x20000a50
 8005e50:	20000a08 	.word	0x20000a08
 8005e54:	200008a0 	.word	0x200008a0
 8005e58:	200008e8 	.word	0x200008e8
 8005e5c:	20000930 	.word	0x20000930
 8005e60:	200009c0 	.word	0x200009c0
 8005e64:	20000b84 	.word	0x20000b84
 8005e68:	20000978 	.word	0x20000978
 8005e6c:	20000810 	.word	0x20000810
 8005e70:	20000858 	.word	0x20000858
 8005e74:	20000b40 	.word	0x20000b40
 8005e78:	20000c0c 	.word	0x20000c0c

08005e7c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8005e7c:	b580      	push	{r7, lr}
 8005e7e:	b094      	sub	sp, #80	; 0x50
 8005e80:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8005e82:	f107 031c 	add.w	r3, r7, #28
 8005e86:	2234      	movs	r2, #52	; 0x34
 8005e88:	2100      	movs	r1, #0
 8005e8a:	4618      	mov	r0, r3
 8005e8c:	f007 f982 	bl	800d194 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8005e90:	f107 0308 	add.w	r3, r7, #8
 8005e94:	2200      	movs	r2, #0
 8005e96:	601a      	str	r2, [r3, #0]
 8005e98:	605a      	str	r2, [r3, #4]
 8005e9a:	609a      	str	r2, [r3, #8]
 8005e9c:	60da      	str	r2, [r3, #12]
 8005e9e:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8005ea0:	2300      	movs	r3, #0
 8005ea2:	607b      	str	r3, [r7, #4]
 8005ea4:	4b2c      	ldr	r3, [pc, #176]	; (8005f58 <SystemClock_Config+0xdc>)
 8005ea6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005ea8:	4a2b      	ldr	r2, [pc, #172]	; (8005f58 <SystemClock_Config+0xdc>)
 8005eaa:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005eae:	6413      	str	r3, [r2, #64]	; 0x40
 8005eb0:	4b29      	ldr	r3, [pc, #164]	; (8005f58 <SystemClock_Config+0xdc>)
 8005eb2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005eb4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005eb8:	607b      	str	r3, [r7, #4]
 8005eba:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8005ebc:	2300      	movs	r3, #0
 8005ebe:	603b      	str	r3, [r7, #0]
 8005ec0:	4b26      	ldr	r3, [pc, #152]	; (8005f5c <SystemClock_Config+0xe0>)
 8005ec2:	681b      	ldr	r3, [r3, #0]
 8005ec4:	4a25      	ldr	r2, [pc, #148]	; (8005f5c <SystemClock_Config+0xe0>)
 8005ec6:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005eca:	6013      	str	r3, [r2, #0]
 8005ecc:	4b23      	ldr	r3, [pc, #140]	; (8005f5c <SystemClock_Config+0xe0>)
 8005ece:	681b      	ldr	r3, [r3, #0]
 8005ed0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8005ed4:	603b      	str	r3, [r7, #0]
 8005ed6:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8005ed8:	2301      	movs	r3, #1
 8005eda:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8005edc:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8005ee0:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8005ee2:	2302      	movs	r3, #2
 8005ee4:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8005ee6:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8005eea:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 4;
 8005eec:	2304      	movs	r3, #4
 8005eee:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 180;
 8005ef0:	23b4      	movs	r3, #180	; 0xb4
 8005ef2:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8005ef4:	2302      	movs	r3, #2
 8005ef6:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8005ef8:	2302      	movs	r3, #2
 8005efa:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8005efc:	2302      	movs	r3, #2
 8005efe:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8005f00:	f107 031c 	add.w	r3, r7, #28
 8005f04:	4618      	mov	r0, r3
 8005f06:	f003 fee1 	bl	8009ccc <HAL_RCC_OscConfig>
 8005f0a:	4603      	mov	r3, r0
 8005f0c:	2b00      	cmp	r3, #0
 8005f0e:	d001      	beq.n	8005f14 <SystemClock_Config+0x98>
  {
    Error_Handler();
 8005f10:	f000 fe00 	bl	8006b14 <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8005f14:	f003 fb40 	bl	8009598 <HAL_PWREx_EnableOverDrive>
 8005f18:	4603      	mov	r3, r0
 8005f1a:	2b00      	cmp	r3, #0
 8005f1c:	d001      	beq.n	8005f22 <SystemClock_Config+0xa6>
  {
    Error_Handler();
 8005f1e:	f000 fdf9 	bl	8006b14 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8005f22:	230f      	movs	r3, #15
 8005f24:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8005f26:	2302      	movs	r3, #2
 8005f28:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8005f2a:	2300      	movs	r3, #0
 8005f2c:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 8005f2e:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 8005f32:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8005f34:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005f38:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8005f3a:	f107 0308 	add.w	r3, r7, #8
 8005f3e:	2105      	movs	r1, #5
 8005f40:	4618      	mov	r0, r3
 8005f42:	f003 fb79 	bl	8009638 <HAL_RCC_ClockConfig>
 8005f46:	4603      	mov	r3, r0
 8005f48:	2b00      	cmp	r3, #0
 8005f4a:	d001      	beq.n	8005f50 <SystemClock_Config+0xd4>
  {
    Error_Handler();
 8005f4c:	f000 fde2 	bl	8006b14 <Error_Handler>
  }
}
 8005f50:	bf00      	nop
 8005f52:	3750      	adds	r7, #80	; 0x50
 8005f54:	46bd      	mov	sp, r7
 8005f56:	bd80      	pop	{r7, pc}
 8005f58:	40023800 	.word	0x40023800
 8005f5c:	40007000 	.word	0x40007000

08005f60 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8005f60:	b580      	push	{r7, lr}
 8005f62:	b08c      	sub	sp, #48	; 0x30
 8005f64:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8005f66:	f107 0320 	add.w	r3, r7, #32
 8005f6a:	2200      	movs	r2, #0
 8005f6c:	601a      	str	r2, [r3, #0]
 8005f6e:	605a      	str	r2, [r3, #4]
 8005f70:	609a      	str	r2, [r3, #8]
 8005f72:	60da      	str	r2, [r3, #12]
  ADC_InjectionConfTypeDef sConfigInjected = {0};
 8005f74:	463b      	mov	r3, r7
 8005f76:	2220      	movs	r2, #32
 8005f78:	2100      	movs	r1, #0
 8005f7a:	4618      	mov	r0, r3
 8005f7c:	f007 f90a 	bl	800d194 <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8005f80:	4b3c      	ldr	r3, [pc, #240]	; (8006074 <MX_ADC1_Init+0x114>)
 8005f82:	4a3d      	ldr	r2, [pc, #244]	; (8006078 <MX_ADC1_Init+0x118>)
 8005f84:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV6;
 8005f86:	4b3b      	ldr	r3, [pc, #236]	; (8006074 <MX_ADC1_Init+0x114>)
 8005f88:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8005f8c:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8005f8e:	4b39      	ldr	r3, [pc, #228]	; (8006074 <MX_ADC1_Init+0x114>)
 8005f90:	2200      	movs	r2, #0
 8005f92:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ENABLE;
 8005f94:	4b37      	ldr	r3, [pc, #220]	; (8006074 <MX_ADC1_Init+0x114>)
 8005f96:	2201      	movs	r2, #1
 8005f98:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8005f9a:	4b36      	ldr	r3, [pc, #216]	; (8006074 <MX_ADC1_Init+0x114>)
 8005f9c:	2200      	movs	r2, #0
 8005f9e:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8005fa0:	4b34      	ldr	r3, [pc, #208]	; (8006074 <MX_ADC1_Init+0x114>)
 8005fa2:	2200      	movs	r2, #0
 8005fa4:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8005fa8:	4b32      	ldr	r3, [pc, #200]	; (8006074 <MX_ADC1_Init+0x114>)
 8005faa:	2200      	movs	r2, #0
 8005fac:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8005fae:	4b31      	ldr	r3, [pc, #196]	; (8006074 <MX_ADC1_Init+0x114>)
 8005fb0:	4a32      	ldr	r2, [pc, #200]	; (800607c <MX_ADC1_Init+0x11c>)
 8005fb2:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8005fb4:	4b2f      	ldr	r3, [pc, #188]	; (8006074 <MX_ADC1_Init+0x114>)
 8005fb6:	2200      	movs	r2, #0
 8005fb8:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 3;
 8005fba:	4b2e      	ldr	r3, [pc, #184]	; (8006074 <MX_ADC1_Init+0x114>)
 8005fbc:	2203      	movs	r2, #3
 8005fbe:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8005fc0:	4b2c      	ldr	r3, [pc, #176]	; (8006074 <MX_ADC1_Init+0x114>)
 8005fc2:	2200      	movs	r2, #0
 8005fc4:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8005fc8:	4b2a      	ldr	r3, [pc, #168]	; (8006074 <MX_ADC1_Init+0x114>)
 8005fca:	2201      	movs	r2, #1
 8005fcc:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8005fce:	4829      	ldr	r0, [pc, #164]	; (8006074 <MX_ADC1_Init+0x114>)
 8005fd0:	f001 fc20 	bl	8007814 <HAL_ADC_Init>
 8005fd4:	4603      	mov	r3, r0
 8005fd6:	2b00      	cmp	r3, #0
 8005fd8:	d001      	beq.n	8005fde <MX_ADC1_Init+0x7e>
  {
    Error_Handler();
 8005fda:	f000 fd9b 	bl	8006b14 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_8;
 8005fde:	2308      	movs	r3, #8
 8005fe0:	623b      	str	r3, [r7, #32]
  sConfig.Rank = 1;
 8005fe2:	2301      	movs	r3, #1
 8005fe4:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8005fe6:	2307      	movs	r3, #7
 8005fe8:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8005fea:	f107 0320 	add.w	r3, r7, #32
 8005fee:	4619      	mov	r1, r3
 8005ff0:	4820      	ldr	r0, [pc, #128]	; (8006074 <MX_ADC1_Init+0x114>)
 8005ff2:	f001 fdbd 	bl	8007b70 <HAL_ADC_ConfigChannel>
 8005ff6:	4603      	mov	r3, r0
 8005ff8:	2b00      	cmp	r3, #0
 8005ffa:	d001      	beq.n	8006000 <MX_ADC1_Init+0xa0>
  {
    Error_Handler();
 8005ffc:	f000 fd8a 	bl	8006b14 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Rank = 2;
 8006000:	2302      	movs	r3, #2
 8006002:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8006004:	f107 0320 	add.w	r3, r7, #32
 8006008:	4619      	mov	r1, r3
 800600a:	481a      	ldr	r0, [pc, #104]	; (8006074 <MX_ADC1_Init+0x114>)
 800600c:	f001 fdb0 	bl	8007b70 <HAL_ADC_ConfigChannel>
 8006010:	4603      	mov	r3, r0
 8006012:	2b00      	cmp	r3, #0
 8006014:	d001      	beq.n	800601a <MX_ADC1_Init+0xba>
  {
    Error_Handler();
 8006016:	f000 fd7d 	bl	8006b14 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Rank = 3;
 800601a:	2303      	movs	r3, #3
 800601c:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800601e:	f107 0320 	add.w	r3, r7, #32
 8006022:	4619      	mov	r1, r3
 8006024:	4813      	ldr	r0, [pc, #76]	; (8006074 <MX_ADC1_Init+0x114>)
 8006026:	f001 fda3 	bl	8007b70 <HAL_ADC_ConfigChannel>
 800602a:	4603      	mov	r3, r0
 800602c:	2b00      	cmp	r3, #0
 800602e:	d001      	beq.n	8006034 <MX_ADC1_Init+0xd4>
  {
    Error_Handler();
 8006030:	f000 fd70 	bl	8006b14 <Error_Handler>
  }

  /** Configures for the selected ADC injected channel its corresponding rank in the sequencer and its sample time
  */
  sConfigInjected.InjectedChannel = ADC_CHANNEL_8;
 8006034:	2308      	movs	r3, #8
 8006036:	603b      	str	r3, [r7, #0]
  sConfigInjected.InjectedRank = 1;
 8006038:	2301      	movs	r3, #1
 800603a:	607b      	str	r3, [r7, #4]
  sConfigInjected.InjectedNbrOfConversion = 1;
 800603c:	2301      	movs	r3, #1
 800603e:	613b      	str	r3, [r7, #16]
  sConfigInjected.InjectedSamplingTime = ADC_SAMPLETIME_3CYCLES;
 8006040:	2300      	movs	r3, #0
 8006042:	60bb      	str	r3, [r7, #8]
  sConfigInjected.ExternalTrigInjecConvEdge = ADC_EXTERNALTRIGINJECCONVEDGE_NONE;
 8006044:	2300      	movs	r3, #0
 8006046:	61fb      	str	r3, [r7, #28]
  sConfigInjected.ExternalTrigInjecConv = ADC_INJECTED_SOFTWARE_START;
 8006048:	4b0d      	ldr	r3, [pc, #52]	; (8006080 <MX_ADC1_Init+0x120>)
 800604a:	61bb      	str	r3, [r7, #24]
  sConfigInjected.AutoInjectedConv = DISABLE;
 800604c:	2300      	movs	r3, #0
 800604e:	757b      	strb	r3, [r7, #21]
  sConfigInjected.InjectedDiscontinuousConvMode = DISABLE;
 8006050:	2300      	movs	r3, #0
 8006052:	753b      	strb	r3, [r7, #20]
  sConfigInjected.InjectedOffset = 0;
 8006054:	2300      	movs	r3, #0
 8006056:	60fb      	str	r3, [r7, #12]
  if (HAL_ADCEx_InjectedConfigChannel(&hadc1, &sConfigInjected) != HAL_OK)
 8006058:	463b      	mov	r3, r7
 800605a:	4619      	mov	r1, r3
 800605c:	4805      	ldr	r0, [pc, #20]	; (8006074 <MX_ADC1_Init+0x114>)
 800605e:	f001 ffb5 	bl	8007fcc <HAL_ADCEx_InjectedConfigChannel>
 8006062:	4603      	mov	r3, r0
 8006064:	2b00      	cmp	r3, #0
 8006066:	d001      	beq.n	800606c <MX_ADC1_Init+0x10c>
  {
    Error_Handler();
 8006068:	f000 fd54 	bl	8006b14 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 800606c:	bf00      	nop
 800606e:	3730      	adds	r7, #48	; 0x30
 8006070:	46bd      	mov	sp, r7
 8006072:	bd80      	pop	{r7, pc}
 8006074:	20000810 	.word	0x20000810
 8006078:	40012000 	.word	0x40012000
 800607c:	0f000001 	.word	0x0f000001
 8006080:	000f0001 	.word	0x000f0001

08006084 <MX_ADC2_Init>:
  * @brief ADC2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC2_Init(void)
{
 8006084:	b580      	push	{r7, lr}
 8006086:	b084      	sub	sp, #16
 8006088:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 800608a:	463b      	mov	r3, r7
 800608c:	2200      	movs	r2, #0
 800608e:	601a      	str	r2, [r3, #0]
 8006090:	605a      	str	r2, [r3, #4]
 8006092:	609a      	str	r2, [r3, #8]
 8006094:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC2_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc2.Instance = ADC2;
 8006096:	4b21      	ldr	r3, [pc, #132]	; (800611c <MX_ADC2_Init+0x98>)
 8006098:	4a21      	ldr	r2, [pc, #132]	; (8006120 <MX_ADC2_Init+0x9c>)
 800609a:	601a      	str	r2, [r3, #0]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV6;
 800609c:	4b1f      	ldr	r3, [pc, #124]	; (800611c <MX_ADC2_Init+0x98>)
 800609e:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 80060a2:	605a      	str	r2, [r3, #4]
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 80060a4:	4b1d      	ldr	r3, [pc, #116]	; (800611c <MX_ADC2_Init+0x98>)
 80060a6:	2200      	movs	r2, #0
 80060a8:	609a      	str	r2, [r3, #8]
  hadc2.Init.ScanConvMode = DISABLE;
 80060aa:	4b1c      	ldr	r3, [pc, #112]	; (800611c <MX_ADC2_Init+0x98>)
 80060ac:	2200      	movs	r2, #0
 80060ae:	611a      	str	r2, [r3, #16]
  hadc2.Init.ContinuousConvMode = DISABLE;
 80060b0:	4b1a      	ldr	r3, [pc, #104]	; (800611c <MX_ADC2_Init+0x98>)
 80060b2:	2200      	movs	r2, #0
 80060b4:	761a      	strb	r2, [r3, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 80060b6:	4b19      	ldr	r3, [pc, #100]	; (800611c <MX_ADC2_Init+0x98>)
 80060b8:	2200      	movs	r2, #0
 80060ba:	f883 2020 	strb.w	r2, [r3, #32]
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80060be:	4b17      	ldr	r3, [pc, #92]	; (800611c <MX_ADC2_Init+0x98>)
 80060c0:	2200      	movs	r2, #0
 80060c2:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80060c4:	4b15      	ldr	r3, [pc, #84]	; (800611c <MX_ADC2_Init+0x98>)
 80060c6:	4a17      	ldr	r2, [pc, #92]	; (8006124 <MX_ADC2_Init+0xa0>)
 80060c8:	629a      	str	r2, [r3, #40]	; 0x28
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80060ca:	4b14      	ldr	r3, [pc, #80]	; (800611c <MX_ADC2_Init+0x98>)
 80060cc:	2200      	movs	r2, #0
 80060ce:	60da      	str	r2, [r3, #12]
  hadc2.Init.NbrOfConversion = 1;
 80060d0:	4b12      	ldr	r3, [pc, #72]	; (800611c <MX_ADC2_Init+0x98>)
 80060d2:	2201      	movs	r2, #1
 80060d4:	61da      	str	r2, [r3, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 80060d6:	4b11      	ldr	r3, [pc, #68]	; (800611c <MX_ADC2_Init+0x98>)
 80060d8:	2200      	movs	r2, #0
 80060da:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80060de:	4b0f      	ldr	r3, [pc, #60]	; (800611c <MX_ADC2_Init+0x98>)
 80060e0:	2201      	movs	r2, #1
 80060e2:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 80060e4:	480d      	ldr	r0, [pc, #52]	; (800611c <MX_ADC2_Init+0x98>)
 80060e6:	f001 fb95 	bl	8007814 <HAL_ADC_Init>
 80060ea:	4603      	mov	r3, r0
 80060ec:	2b00      	cmp	r3, #0
 80060ee:	d001      	beq.n	80060f4 <MX_ADC2_Init+0x70>
  {
    Error_Handler();
 80060f0:	f000 fd10 	bl	8006b14 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_13;
 80060f4:	230d      	movs	r3, #13
 80060f6:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 80060f8:	2301      	movs	r3, #1
 80060fa:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 80060fc:	2307      	movs	r3, #7
 80060fe:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8006100:	463b      	mov	r3, r7
 8006102:	4619      	mov	r1, r3
 8006104:	4805      	ldr	r0, [pc, #20]	; (800611c <MX_ADC2_Init+0x98>)
 8006106:	f001 fd33 	bl	8007b70 <HAL_ADC_ConfigChannel>
 800610a:	4603      	mov	r3, r0
 800610c:	2b00      	cmp	r3, #0
 800610e:	d001      	beq.n	8006114 <MX_ADC2_Init+0x90>
  {
    Error_Handler();
 8006110:	f000 fd00 	bl	8006b14 <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */

  /* USER CODE END ADC2_Init 2 */

}
 8006114:	bf00      	nop
 8006116:	3710      	adds	r7, #16
 8006118:	46bd      	mov	sp, r7
 800611a:	bd80      	pop	{r7, pc}
 800611c:	20000858 	.word	0x20000858
 8006120:	40012100 	.word	0x40012100
 8006124:	0f000001 	.word	0x0f000001

08006128 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8006128:	b580      	push	{r7, lr}
 800612a:	b096      	sub	sp, #88	; 0x58
 800612c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800612e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8006132:	2200      	movs	r2, #0
 8006134:	601a      	str	r2, [r3, #0]
 8006136:	605a      	str	r2, [r3, #4]
 8006138:	609a      	str	r2, [r3, #8]
 800613a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800613c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8006140:	2200      	movs	r2, #0
 8006142:	601a      	str	r2, [r3, #0]
 8006144:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8006146:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800614a:	2200      	movs	r2, #0
 800614c:	601a      	str	r2, [r3, #0]
 800614e:	605a      	str	r2, [r3, #4]
 8006150:	609a      	str	r2, [r3, #8]
 8006152:	60da      	str	r2, [r3, #12]
 8006154:	611a      	str	r2, [r3, #16]
 8006156:	615a      	str	r2, [r3, #20]
 8006158:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 800615a:	1d3b      	adds	r3, r7, #4
 800615c:	2220      	movs	r2, #32
 800615e:	2100      	movs	r1, #0
 8006160:	4618      	mov	r0, r3
 8006162:	f007 f817 	bl	800d194 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8006166:	4b3e      	ldr	r3, [pc, #248]	; (8006260 <MX_TIM1_Init+0x138>)
 8006168:	4a3e      	ldr	r2, [pc, #248]	; (8006264 <MX_TIM1_Init+0x13c>)
 800616a:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 360-1;
 800616c:	4b3c      	ldr	r3, [pc, #240]	; (8006260 <MX_TIM1_Init+0x138>)
 800616e:	f240 1267 	movw	r2, #359	; 0x167
 8006172:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8006174:	4b3a      	ldr	r3, [pc, #232]	; (8006260 <MX_TIM1_Init+0x138>)
 8006176:	2200      	movs	r2, #0
 8006178:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 10000-1;
 800617a:	4b39      	ldr	r3, [pc, #228]	; (8006260 <MX_TIM1_Init+0x138>)
 800617c:	f242 720f 	movw	r2, #9999	; 0x270f
 8006180:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8006182:	4b37      	ldr	r3, [pc, #220]	; (8006260 <MX_TIM1_Init+0x138>)
 8006184:	2200      	movs	r2, #0
 8006186:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8006188:	4b35      	ldr	r3, [pc, #212]	; (8006260 <MX_TIM1_Init+0x138>)
 800618a:	2200      	movs	r2, #0
 800618c:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800618e:	4b34      	ldr	r3, [pc, #208]	; (8006260 <MX_TIM1_Init+0x138>)
 8006190:	2280      	movs	r2, #128	; 0x80
 8006192:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8006194:	4832      	ldr	r0, [pc, #200]	; (8006260 <MX_TIM1_Init+0x138>)
 8006196:	f004 f837 	bl	800a208 <HAL_TIM_Base_Init>
 800619a:	4603      	mov	r3, r0
 800619c:	2b00      	cmp	r3, #0
 800619e:	d001      	beq.n	80061a4 <MX_TIM1_Init+0x7c>
  {
    Error_Handler();
 80061a0:	f000 fcb8 	bl	8006b14 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80061a4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80061a8:	64bb      	str	r3, [r7, #72]	; 0x48
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 80061aa:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80061ae:	4619      	mov	r1, r3
 80061b0:	482b      	ldr	r0, [pc, #172]	; (8006260 <MX_TIM1_Init+0x138>)
 80061b2:	f004 ffa1 	bl	800b0f8 <HAL_TIM_ConfigClockSource>
 80061b6:	4603      	mov	r3, r0
 80061b8:	2b00      	cmp	r3, #0
 80061ba:	d001      	beq.n	80061c0 <MX_TIM1_Init+0x98>
  {
    Error_Handler();
 80061bc:	f000 fcaa 	bl	8006b14 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 80061c0:	4827      	ldr	r0, [pc, #156]	; (8006260 <MX_TIM1_Init+0x138>)
 80061c2:	f004 f8d9 	bl	800a378 <HAL_TIM_PWM_Init>
 80061c6:	4603      	mov	r3, r0
 80061c8:	2b00      	cmp	r3, #0
 80061ca:	d001      	beq.n	80061d0 <MX_TIM1_Init+0xa8>
  {
    Error_Handler();
 80061cc:	f000 fca2 	bl	8006b14 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80061d0:	2300      	movs	r3, #0
 80061d2:	643b      	str	r3, [r7, #64]	; 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80061d4:	2300      	movs	r3, #0
 80061d6:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80061d8:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80061dc:	4619      	mov	r1, r3
 80061de:	4820      	ldr	r0, [pc, #128]	; (8006260 <MX_TIM1_Init+0x138>)
 80061e0:	f005 fdb2 	bl	800bd48 <HAL_TIMEx_MasterConfigSynchronization>
 80061e4:	4603      	mov	r3, r0
 80061e6:	2b00      	cmp	r3, #0
 80061e8:	d001      	beq.n	80061ee <MX_TIM1_Init+0xc6>
  {
    Error_Handler();
 80061ea:	f000 fc93 	bl	8006b14 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80061ee:	2360      	movs	r3, #96	; 0x60
 80061f0:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigOC.Pulse = 750-1;
 80061f2:	f240 23ed 	movw	r3, #749	; 0x2ed
 80061f6:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80061f8:	2300      	movs	r3, #0
 80061fa:	62fb      	str	r3, [r7, #44]	; 0x2c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80061fc:	2300      	movs	r3, #0
 80061fe:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8006200:	2300      	movs	r3, #0
 8006202:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8006204:	2300      	movs	r3, #0
 8006206:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8006208:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800620c:	220c      	movs	r2, #12
 800620e:	4619      	mov	r1, r3
 8006210:	4813      	ldr	r0, [pc, #76]	; (8006260 <MX_TIM1_Init+0x138>)
 8006212:	f004 feaf 	bl	800af74 <HAL_TIM_PWM_ConfigChannel>
 8006216:	4603      	mov	r3, r0
 8006218:	2b00      	cmp	r3, #0
 800621a:	d001      	beq.n	8006220 <MX_TIM1_Init+0xf8>
  {
    Error_Handler();
 800621c:	f000 fc7a 	bl	8006b14 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8006220:	2300      	movs	r3, #0
 8006222:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8006224:	2300      	movs	r3, #0
 8006226:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8006228:	2300      	movs	r3, #0
 800622a:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 800622c:	2300      	movs	r3, #0
 800622e:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8006230:	2300      	movs	r3, #0
 8006232:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8006234:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8006238:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 800623a:	2300      	movs	r3, #0
 800623c:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 800623e:	1d3b      	adds	r3, r7, #4
 8006240:	4619      	mov	r1, r3
 8006242:	4807      	ldr	r0, [pc, #28]	; (8006260 <MX_TIM1_Init+0x138>)
 8006244:	f005 fdfc 	bl	800be40 <HAL_TIMEx_ConfigBreakDeadTime>
 8006248:	4603      	mov	r3, r0
 800624a:	2b00      	cmp	r3, #0
 800624c:	d001      	beq.n	8006252 <MX_TIM1_Init+0x12a>
  {
    Error_Handler();
 800624e:	f000 fc61 	bl	8006b14 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8006252:	4803      	ldr	r0, [pc, #12]	; (8006260 <MX_TIM1_Init+0x138>)
 8006254:	f000 ff46 	bl	80070e4 <HAL_TIM_MspPostInit>

}
 8006258:	bf00      	nop
 800625a:	3758      	adds	r7, #88	; 0x58
 800625c:	46bd      	mov	sp, r7
 800625e:	bd80      	pop	{r7, pc}
 8006260:	200008a0 	.word	0x200008a0
 8006264:	40010000 	.word	0x40010000

08006268 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8006268:	b580      	push	{r7, lr}
 800626a:	b08e      	sub	sp, #56	; 0x38
 800626c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800626e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8006272:	2200      	movs	r2, #0
 8006274:	601a      	str	r2, [r3, #0]
 8006276:	605a      	str	r2, [r3, #4]
 8006278:	609a      	str	r2, [r3, #8]
 800627a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800627c:	f107 0320 	add.w	r3, r7, #32
 8006280:	2200      	movs	r2, #0
 8006282:	601a      	str	r2, [r3, #0]
 8006284:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8006286:	1d3b      	adds	r3, r7, #4
 8006288:	2200      	movs	r2, #0
 800628a:	601a      	str	r2, [r3, #0]
 800628c:	605a      	str	r2, [r3, #4]
 800628e:	609a      	str	r2, [r3, #8]
 8006290:	60da      	str	r2, [r3, #12]
 8006292:	611a      	str	r2, [r3, #16]
 8006294:	615a      	str	r2, [r3, #20]
 8006296:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8006298:	4b2d      	ldr	r3, [pc, #180]	; (8006350 <MX_TIM2_Init+0xe8>)
 800629a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800629e:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 90-1;
 80062a0:	4b2b      	ldr	r3, [pc, #172]	; (8006350 <MX_TIM2_Init+0xe8>)
 80062a2:	2259      	movs	r2, #89	; 0x59
 80062a4:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80062a6:	4b2a      	ldr	r3, [pc, #168]	; (8006350 <MX_TIM2_Init+0xe8>)
 80062a8:	2200      	movs	r2, #0
 80062aa:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 10000-1;
 80062ac:	4b28      	ldr	r3, [pc, #160]	; (8006350 <MX_TIM2_Init+0xe8>)
 80062ae:	f242 720f 	movw	r2, #9999	; 0x270f
 80062b2:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80062b4:	4b26      	ldr	r3, [pc, #152]	; (8006350 <MX_TIM2_Init+0xe8>)
 80062b6:	2200      	movs	r2, #0
 80062b8:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80062ba:	4b25      	ldr	r3, [pc, #148]	; (8006350 <MX_TIM2_Init+0xe8>)
 80062bc:	2280      	movs	r2, #128	; 0x80
 80062be:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80062c0:	4823      	ldr	r0, [pc, #140]	; (8006350 <MX_TIM2_Init+0xe8>)
 80062c2:	f003 ffa1 	bl	800a208 <HAL_TIM_Base_Init>
 80062c6:	4603      	mov	r3, r0
 80062c8:	2b00      	cmp	r3, #0
 80062ca:	d001      	beq.n	80062d0 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 80062cc:	f000 fc22 	bl	8006b14 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80062d0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80062d4:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80062d6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80062da:	4619      	mov	r1, r3
 80062dc:	481c      	ldr	r0, [pc, #112]	; (8006350 <MX_TIM2_Init+0xe8>)
 80062de:	f004 ff0b 	bl	800b0f8 <HAL_TIM_ConfigClockSource>
 80062e2:	4603      	mov	r3, r0
 80062e4:	2b00      	cmp	r3, #0
 80062e6:	d001      	beq.n	80062ec <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 80062e8:	f000 fc14 	bl	8006b14 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 80062ec:	4818      	ldr	r0, [pc, #96]	; (8006350 <MX_TIM2_Init+0xe8>)
 80062ee:	f004 f843 	bl	800a378 <HAL_TIM_PWM_Init>
 80062f2:	4603      	mov	r3, r0
 80062f4:	2b00      	cmp	r3, #0
 80062f6:	d001      	beq.n	80062fc <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 80062f8:	f000 fc0c 	bl	8006b14 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80062fc:	2300      	movs	r3, #0
 80062fe:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8006300:	2300      	movs	r3, #0
 8006302:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8006304:	f107 0320 	add.w	r3, r7, #32
 8006308:	4619      	mov	r1, r3
 800630a:	4811      	ldr	r0, [pc, #68]	; (8006350 <MX_TIM2_Init+0xe8>)
 800630c:	f005 fd1c 	bl	800bd48 <HAL_TIMEx_MasterConfigSynchronization>
 8006310:	4603      	mov	r3, r0
 8006312:	2b00      	cmp	r3, #0
 8006314:	d001      	beq.n	800631a <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 8006316:	f000 fbfd 	bl	8006b14 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800631a:	2360      	movs	r3, #96	; 0x60
 800631c:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 750-1;
 800631e:	f240 23ed 	movw	r3, #749	; 0x2ed
 8006322:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8006324:	2300      	movs	r3, #0
 8006326:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8006328:	2300      	movs	r3, #0
 800632a:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800632c:	1d3b      	adds	r3, r7, #4
 800632e:	2200      	movs	r2, #0
 8006330:	4619      	mov	r1, r3
 8006332:	4807      	ldr	r0, [pc, #28]	; (8006350 <MX_TIM2_Init+0xe8>)
 8006334:	f004 fe1e 	bl	800af74 <HAL_TIM_PWM_ConfigChannel>
 8006338:	4603      	mov	r3, r0
 800633a:	2b00      	cmp	r3, #0
 800633c:	d001      	beq.n	8006342 <MX_TIM2_Init+0xda>
  {
    Error_Handler();
 800633e:	f000 fbe9 	bl	8006b14 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8006342:	4803      	ldr	r0, [pc, #12]	; (8006350 <MX_TIM2_Init+0xe8>)
 8006344:	f000 fece 	bl	80070e4 <HAL_TIM_MspPostInit>

}
 8006348:	bf00      	nop
 800634a:	3738      	adds	r7, #56	; 0x38
 800634c:	46bd      	mov	sp, r7
 800634e:	bd80      	pop	{r7, pc}
 8006350:	200008e8 	.word	0x200008e8

08006354 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8006354:	b580      	push	{r7, lr}
 8006356:	b08e      	sub	sp, #56	; 0x38
 8006358:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800635a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800635e:	2200      	movs	r2, #0
 8006360:	601a      	str	r2, [r3, #0]
 8006362:	605a      	str	r2, [r3, #4]
 8006364:	609a      	str	r2, [r3, #8]
 8006366:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8006368:	f107 0320 	add.w	r3, r7, #32
 800636c:	2200      	movs	r2, #0
 800636e:	601a      	str	r2, [r3, #0]
 8006370:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8006372:	1d3b      	adds	r3, r7, #4
 8006374:	2200      	movs	r2, #0
 8006376:	601a      	str	r2, [r3, #0]
 8006378:	605a      	str	r2, [r3, #4]
 800637a:	609a      	str	r2, [r3, #8]
 800637c:	60da      	str	r2, [r3, #12]
 800637e:	611a      	str	r2, [r3, #16]
 8006380:	615a      	str	r2, [r3, #20]
 8006382:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8006384:	4b32      	ldr	r3, [pc, #200]	; (8006450 <MX_TIM3_Init+0xfc>)
 8006386:	4a33      	ldr	r2, [pc, #204]	; (8006454 <MX_TIM3_Init+0x100>)
 8006388:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 2-1;
 800638a:	4b31      	ldr	r3, [pc, #196]	; (8006450 <MX_TIM3_Init+0xfc>)
 800638c:	2201      	movs	r2, #1
 800638e:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED3;
 8006390:	4b2f      	ldr	r3, [pc, #188]	; (8006450 <MX_TIM3_Init+0xfc>)
 8006392:	2260      	movs	r2, #96	; 0x60
 8006394:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 1000-1;
 8006396:	4b2e      	ldr	r3, [pc, #184]	; (8006450 <MX_TIM3_Init+0xfc>)
 8006398:	f240 32e7 	movw	r2, #999	; 0x3e7
 800639c:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800639e:	4b2c      	ldr	r3, [pc, #176]	; (8006450 <MX_TIM3_Init+0xfc>)
 80063a0:	2200      	movs	r2, #0
 80063a2:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80063a4:	4b2a      	ldr	r3, [pc, #168]	; (8006450 <MX_TIM3_Init+0xfc>)
 80063a6:	2200      	movs	r2, #0
 80063a8:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80063aa:	4829      	ldr	r0, [pc, #164]	; (8006450 <MX_TIM3_Init+0xfc>)
 80063ac:	f003 ff2c 	bl	800a208 <HAL_TIM_Base_Init>
 80063b0:	4603      	mov	r3, r0
 80063b2:	2b00      	cmp	r3, #0
 80063b4:	d001      	beq.n	80063ba <MX_TIM3_Init+0x66>
  {
    Error_Handler();
 80063b6:	f000 fbad 	bl	8006b14 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80063ba:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80063be:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80063c0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80063c4:	4619      	mov	r1, r3
 80063c6:	4822      	ldr	r0, [pc, #136]	; (8006450 <MX_TIM3_Init+0xfc>)
 80063c8:	f004 fe96 	bl	800b0f8 <HAL_TIM_ConfigClockSource>
 80063cc:	4603      	mov	r3, r0
 80063ce:	2b00      	cmp	r3, #0
 80063d0:	d001      	beq.n	80063d6 <MX_TIM3_Init+0x82>
  {
    Error_Handler();
 80063d2:	f000 fb9f 	bl	8006b14 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 80063d6:	481e      	ldr	r0, [pc, #120]	; (8006450 <MX_TIM3_Init+0xfc>)
 80063d8:	f003 ffce 	bl	800a378 <HAL_TIM_PWM_Init>
 80063dc:	4603      	mov	r3, r0
 80063de:	2b00      	cmp	r3, #0
 80063e0:	d001      	beq.n	80063e6 <MX_TIM3_Init+0x92>
  {
    Error_Handler();
 80063e2:	f000 fb97 	bl	8006b14 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80063e6:	2300      	movs	r3, #0
 80063e8:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80063ea:	2300      	movs	r3, #0
 80063ec:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80063ee:	f107 0320 	add.w	r3, r7, #32
 80063f2:	4619      	mov	r1, r3
 80063f4:	4816      	ldr	r0, [pc, #88]	; (8006450 <MX_TIM3_Init+0xfc>)
 80063f6:	f005 fca7 	bl	800bd48 <HAL_TIMEx_MasterConfigSynchronization>
 80063fa:	4603      	mov	r3, r0
 80063fc:	2b00      	cmp	r3, #0
 80063fe:	d001      	beq.n	8006404 <MX_TIM3_Init+0xb0>
  {
    Error_Handler();
 8006400:	f000 fb88 	bl	8006b14 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8006404:	2360      	movs	r3, #96	; 0x60
 8006406:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8006408:	2300      	movs	r3, #0
 800640a:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800640c:	2300      	movs	r3, #0
 800640e:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8006410:	2300      	movs	r3, #0
 8006412:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8006414:	1d3b      	adds	r3, r7, #4
 8006416:	2200      	movs	r2, #0
 8006418:	4619      	mov	r1, r3
 800641a:	480d      	ldr	r0, [pc, #52]	; (8006450 <MX_TIM3_Init+0xfc>)
 800641c:	f004 fdaa 	bl	800af74 <HAL_TIM_PWM_ConfigChannel>
 8006420:	4603      	mov	r3, r0
 8006422:	2b00      	cmp	r3, #0
 8006424:	d001      	beq.n	800642a <MX_TIM3_Init+0xd6>
  {
    Error_Handler();
 8006426:	f000 fb75 	bl	8006b14 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 800642a:	1d3b      	adds	r3, r7, #4
 800642c:	2204      	movs	r2, #4
 800642e:	4619      	mov	r1, r3
 8006430:	4807      	ldr	r0, [pc, #28]	; (8006450 <MX_TIM3_Init+0xfc>)
 8006432:	f004 fd9f 	bl	800af74 <HAL_TIM_PWM_ConfigChannel>
 8006436:	4603      	mov	r3, r0
 8006438:	2b00      	cmp	r3, #0
 800643a:	d001      	beq.n	8006440 <MX_TIM3_Init+0xec>
  {
    Error_Handler();
 800643c:	f000 fb6a 	bl	8006b14 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8006440:	4803      	ldr	r0, [pc, #12]	; (8006450 <MX_TIM3_Init+0xfc>)
 8006442:	f000 fe4f 	bl	80070e4 <HAL_TIM_MspPostInit>

}
 8006446:	bf00      	nop
 8006448:	3738      	adds	r7, #56	; 0x38
 800644a:	46bd      	mov	sp, r7
 800644c:	bd80      	pop	{r7, pc}
 800644e:	bf00      	nop
 8006450:	20000930 	.word	0x20000930
 8006454:	40000400 	.word	0x40000400

08006458 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8006458:	b580      	push	{r7, lr}
 800645a:	b08a      	sub	sp, #40	; 0x28
 800645c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800645e:	f107 0318 	add.w	r3, r7, #24
 8006462:	2200      	movs	r2, #0
 8006464:	601a      	str	r2, [r3, #0]
 8006466:	605a      	str	r2, [r3, #4]
 8006468:	609a      	str	r2, [r3, #8]
 800646a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800646c:	f107 0310 	add.w	r3, r7, #16
 8006470:	2200      	movs	r2, #0
 8006472:	601a      	str	r2, [r3, #0]
 8006474:	605a      	str	r2, [r3, #4]
  TIM_IC_InitTypeDef sConfigIC = {0};
 8006476:	463b      	mov	r3, r7
 8006478:	2200      	movs	r2, #0
 800647a:	601a      	str	r2, [r3, #0]
 800647c:	605a      	str	r2, [r3, #4]
 800647e:	609a      	str	r2, [r3, #8]
 8006480:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8006482:	4b31      	ldr	r3, [pc, #196]	; (8006548 <MX_TIM4_Init+0xf0>)
 8006484:	4a31      	ldr	r2, [pc, #196]	; (800654c <MX_TIM4_Init+0xf4>)
 8006486:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 800-1;
 8006488:	4b2f      	ldr	r3, [pc, #188]	; (8006548 <MX_TIM4_Init+0xf0>)
 800648a:	f240 321f 	movw	r2, #799	; 0x31f
 800648e:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8006490:	4b2d      	ldr	r3, [pc, #180]	; (8006548 <MX_TIM4_Init+0xf0>)
 8006492:	2200      	movs	r2, #0
 8006494:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65536-1;
 8006496:	4b2c      	ldr	r3, [pc, #176]	; (8006548 <MX_TIM4_Init+0xf0>)
 8006498:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800649c:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800649e:	4b2a      	ldr	r3, [pc, #168]	; (8006548 <MX_TIM4_Init+0xf0>)
 80064a0:	2200      	movs	r2, #0
 80064a2:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80064a4:	4b28      	ldr	r3, [pc, #160]	; (8006548 <MX_TIM4_Init+0xf0>)
 80064a6:	2280      	movs	r2, #128	; 0x80
 80064a8:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 80064aa:	4827      	ldr	r0, [pc, #156]	; (8006548 <MX_TIM4_Init+0xf0>)
 80064ac:	f003 feac 	bl	800a208 <HAL_TIM_Base_Init>
 80064b0:	4603      	mov	r3, r0
 80064b2:	2b00      	cmp	r3, #0
 80064b4:	d001      	beq.n	80064ba <MX_TIM4_Init+0x62>
  {
    Error_Handler();
 80064b6:	f000 fb2d 	bl	8006b14 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80064ba:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80064be:	61bb      	str	r3, [r7, #24]
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 80064c0:	f107 0318 	add.w	r3, r7, #24
 80064c4:	4619      	mov	r1, r3
 80064c6:	4820      	ldr	r0, [pc, #128]	; (8006548 <MX_TIM4_Init+0xf0>)
 80064c8:	f004 fe16 	bl	800b0f8 <HAL_TIM_ConfigClockSource>
 80064cc:	4603      	mov	r3, r0
 80064ce:	2b00      	cmp	r3, #0
 80064d0:	d001      	beq.n	80064d6 <MX_TIM4_Init+0x7e>
  {
    Error_Handler();
 80064d2:	f000 fb1f 	bl	8006b14 <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim4) != HAL_OK)
 80064d6:	481c      	ldr	r0, [pc, #112]	; (8006548 <MX_TIM4_Init+0xf0>)
 80064d8:	f004 f870 	bl	800a5bc <HAL_TIM_IC_Init>
 80064dc:	4603      	mov	r3, r0
 80064de:	2b00      	cmp	r3, #0
 80064e0:	d001      	beq.n	80064e6 <MX_TIM4_Init+0x8e>
  {
    Error_Handler();
 80064e2:	f000 fb17 	bl	8006b14 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80064e6:	2300      	movs	r3, #0
 80064e8:	613b      	str	r3, [r7, #16]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80064ea:	2300      	movs	r3, #0
 80064ec:	617b      	str	r3, [r7, #20]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 80064ee:	f107 0310 	add.w	r3, r7, #16
 80064f2:	4619      	mov	r1, r3
 80064f4:	4814      	ldr	r0, [pc, #80]	; (8006548 <MX_TIM4_Init+0xf0>)
 80064f6:	f005 fc27 	bl	800bd48 <HAL_TIMEx_MasterConfigSynchronization>
 80064fa:	4603      	mov	r3, r0
 80064fc:	2b00      	cmp	r3, #0
 80064fe:	d001      	beq.n	8006504 <MX_TIM4_Init+0xac>
  {
    Error_Handler();
 8006500:	f000 fb08 	bl	8006b14 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_BOTHEDGE;
 8006504:	230a      	movs	r3, #10
 8006506:	603b      	str	r3, [r7, #0]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 8006508:	2301      	movs	r3, #1
 800650a:	607b      	str	r3, [r7, #4]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 800650c:	2300      	movs	r3, #0
 800650e:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICFilter = 0;
 8006510:	2300      	movs	r3, #0
 8006512:	60fb      	str	r3, [r7, #12]
  if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_3) != HAL_OK)
 8006514:	463b      	mov	r3, r7
 8006516:	2208      	movs	r2, #8
 8006518:	4619      	mov	r1, r3
 800651a:	480b      	ldr	r0, [pc, #44]	; (8006548 <MX_TIM4_Init+0xf0>)
 800651c:	f004 fc8e 	bl	800ae3c <HAL_TIM_IC_ConfigChannel>
 8006520:	4603      	mov	r3, r0
 8006522:	2b00      	cmp	r3, #0
 8006524:	d001      	beq.n	800652a <MX_TIM4_Init+0xd2>
  {
    Error_Handler();
 8006526:	f000 faf5 	bl	8006b14 <Error_Handler>
  }
  if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_4) != HAL_OK)
 800652a:	463b      	mov	r3, r7
 800652c:	220c      	movs	r2, #12
 800652e:	4619      	mov	r1, r3
 8006530:	4805      	ldr	r0, [pc, #20]	; (8006548 <MX_TIM4_Init+0xf0>)
 8006532:	f004 fc83 	bl	800ae3c <HAL_TIM_IC_ConfigChannel>
 8006536:	4603      	mov	r3, r0
 8006538:	2b00      	cmp	r3, #0
 800653a:	d001      	beq.n	8006540 <MX_TIM4_Init+0xe8>
  {
    Error_Handler();
 800653c:	f000 faea 	bl	8006b14 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 8006540:	bf00      	nop
 8006542:	3728      	adds	r7, #40	; 0x28
 8006544:	46bd      	mov	sp, r7
 8006546:	bd80      	pop	{r7, pc}
 8006548:	20000978 	.word	0x20000978
 800654c:	40000800 	.word	0x40000800

08006550 <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 8006550:	b580      	push	{r7, lr}
 8006552:	b086      	sub	sp, #24
 8006554:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8006556:	f107 0308 	add.w	r3, r7, #8
 800655a:	2200      	movs	r2, #0
 800655c:	601a      	str	r2, [r3, #0]
 800655e:	605a      	str	r2, [r3, #4]
 8006560:	609a      	str	r2, [r3, #8]
 8006562:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8006564:	463b      	mov	r3, r7
 8006566:	2200      	movs	r2, #0
 8006568:	601a      	str	r2, [r3, #0]
 800656a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 800656c:	4b1d      	ldr	r3, [pc, #116]	; (80065e4 <MX_TIM5_Init+0x94>)
 800656e:	4a1e      	ldr	r2, [pc, #120]	; (80065e8 <MX_TIM5_Init+0x98>)
 8006570:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 45000-1;
 8006572:	4b1c      	ldr	r3, [pc, #112]	; (80065e4 <MX_TIM5_Init+0x94>)
 8006574:	f64a 72c7 	movw	r2, #44999	; 0xafc7
 8006578:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 800657a:	4b1a      	ldr	r3, [pc, #104]	; (80065e4 <MX_TIM5_Init+0x94>)
 800657c:	2200      	movs	r2, #0
 800657e:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 8006580:	4b18      	ldr	r3, [pc, #96]	; (80065e4 <MX_TIM5_Init+0x94>)
 8006582:	f04f 32ff 	mov.w	r2, #4294967295
 8006586:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8006588:	4b16      	ldr	r3, [pc, #88]	; (80065e4 <MX_TIM5_Init+0x94>)
 800658a:	2200      	movs	r2, #0
 800658c:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800658e:	4b15      	ldr	r3, [pc, #84]	; (80065e4 <MX_TIM5_Init+0x94>)
 8006590:	2280      	movs	r2, #128	; 0x80
 8006592:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 8006594:	4813      	ldr	r0, [pc, #76]	; (80065e4 <MX_TIM5_Init+0x94>)
 8006596:	f003 fe37 	bl	800a208 <HAL_TIM_Base_Init>
 800659a:	4603      	mov	r3, r0
 800659c:	2b00      	cmp	r3, #0
 800659e:	d001      	beq.n	80065a4 <MX_TIM5_Init+0x54>
  {
    Error_Handler();
 80065a0:	f000 fab8 	bl	8006b14 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80065a4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80065a8:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 80065aa:	f107 0308 	add.w	r3, r7, #8
 80065ae:	4619      	mov	r1, r3
 80065b0:	480c      	ldr	r0, [pc, #48]	; (80065e4 <MX_TIM5_Init+0x94>)
 80065b2:	f004 fda1 	bl	800b0f8 <HAL_TIM_ConfigClockSource>
 80065b6:	4603      	mov	r3, r0
 80065b8:	2b00      	cmp	r3, #0
 80065ba:	d001      	beq.n	80065c0 <MX_TIM5_Init+0x70>
  {
    Error_Handler();
 80065bc:	f000 faaa 	bl	8006b14 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80065c0:	2300      	movs	r3, #0
 80065c2:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80065c4:	2300      	movs	r3, #0
 80065c6:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 80065c8:	463b      	mov	r3, r7
 80065ca:	4619      	mov	r1, r3
 80065cc:	4805      	ldr	r0, [pc, #20]	; (80065e4 <MX_TIM5_Init+0x94>)
 80065ce:	f005 fbbb 	bl	800bd48 <HAL_TIMEx_MasterConfigSynchronization>
 80065d2:	4603      	mov	r3, r0
 80065d4:	2b00      	cmp	r3, #0
 80065d6:	d001      	beq.n	80065dc <MX_TIM5_Init+0x8c>
  {
    Error_Handler();
 80065d8:	f000 fa9c 	bl	8006b14 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 80065dc:	bf00      	nop
 80065de:	3718      	adds	r7, #24
 80065e0:	46bd      	mov	sp, r7
 80065e2:	bd80      	pop	{r7, pc}
 80065e4:	200009c0 	.word	0x200009c0
 80065e8:	40000c00 	.word	0x40000c00

080065ec <MX_TIM8_Init>:
  * @brief TIM8 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM8_Init(void)
{
 80065ec:	b580      	push	{r7, lr}
 80065ee:	b08c      	sub	sp, #48	; 0x30
 80065f0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM8_Init 0 */

  /* USER CODE END TIM8_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 80065f2:	f107 030c 	add.w	r3, r7, #12
 80065f6:	2224      	movs	r2, #36	; 0x24
 80065f8:	2100      	movs	r1, #0
 80065fa:	4618      	mov	r0, r3
 80065fc:	f006 fdca 	bl	800d194 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8006600:	1d3b      	adds	r3, r7, #4
 8006602:	2200      	movs	r2, #0
 8006604:	601a      	str	r2, [r3, #0]
 8006606:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM8_Init 1 */

  /* USER CODE END TIM8_Init 1 */
  htim8.Instance = TIM8;
 8006608:	4b22      	ldr	r3, [pc, #136]	; (8006694 <MX_TIM8_Init+0xa8>)
 800660a:	4a23      	ldr	r2, [pc, #140]	; (8006698 <MX_TIM8_Init+0xac>)
 800660c:	601a      	str	r2, [r3, #0]
  htim8.Init.Prescaler = 0;
 800660e:	4b21      	ldr	r3, [pc, #132]	; (8006694 <MX_TIM8_Init+0xa8>)
 8006610:	2200      	movs	r2, #0
 8006612:	605a      	str	r2, [r3, #4]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8006614:	4b1f      	ldr	r3, [pc, #124]	; (8006694 <MX_TIM8_Init+0xa8>)
 8006616:	2200      	movs	r2, #0
 8006618:	609a      	str	r2, [r3, #8]
  htim8.Init.Period = 65535;
 800661a:	4b1e      	ldr	r3, [pc, #120]	; (8006694 <MX_TIM8_Init+0xa8>)
 800661c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8006620:	60da      	str	r2, [r3, #12]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8006622:	4b1c      	ldr	r3, [pc, #112]	; (8006694 <MX_TIM8_Init+0xa8>)
 8006624:	2200      	movs	r2, #0
 8006626:	611a      	str	r2, [r3, #16]
  htim8.Init.RepetitionCounter = 0;
 8006628:	4b1a      	ldr	r3, [pc, #104]	; (8006694 <MX_TIM8_Init+0xa8>)
 800662a:	2200      	movs	r2, #0
 800662c:	615a      	str	r2, [r3, #20]
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800662e:	4b19      	ldr	r3, [pc, #100]	; (8006694 <MX_TIM8_Init+0xa8>)
 8006630:	2280      	movs	r2, #128	; 0x80
 8006632:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 8006634:	2303      	movs	r3, #3
 8006636:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8006638:	2300      	movs	r3, #0
 800663a:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 800663c:	2301      	movs	r3, #1
 800663e:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8006640:	2300      	movs	r3, #0
 8006642:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 12;
 8006644:	230c      	movs	r3, #12
 8006646:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8006648:	2300      	movs	r3, #0
 800664a:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 800664c:	2301      	movs	r3, #1
 800664e:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8006650:	2300      	movs	r3, #0
 8006652:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 12;
 8006654:	230c      	movs	r3, #12
 8006656:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim8, &sConfig) != HAL_OK)
 8006658:	f107 030c 	add.w	r3, r7, #12
 800665c:	4619      	mov	r1, r3
 800665e:	480d      	ldr	r0, [pc, #52]	; (8006694 <MX_TIM8_Init+0xa8>)
 8006660:	f004 f9b0 	bl	800a9c4 <HAL_TIM_Encoder_Init>
 8006664:	4603      	mov	r3, r0
 8006666:	2b00      	cmp	r3, #0
 8006668:	d001      	beq.n	800666e <MX_TIM8_Init+0x82>
  {
    Error_Handler();
 800666a:	f000 fa53 	bl	8006b14 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800666e:	2300      	movs	r3, #0
 8006670:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8006672:	2300      	movs	r3, #0
 8006674:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 8006676:	1d3b      	adds	r3, r7, #4
 8006678:	4619      	mov	r1, r3
 800667a:	4806      	ldr	r0, [pc, #24]	; (8006694 <MX_TIM8_Init+0xa8>)
 800667c:	f005 fb64 	bl	800bd48 <HAL_TIMEx_MasterConfigSynchronization>
 8006680:	4603      	mov	r3, r0
 8006682:	2b00      	cmp	r3, #0
 8006684:	d001      	beq.n	800668a <MX_TIM8_Init+0x9e>
  {
    Error_Handler();
 8006686:	f000 fa45 	bl	8006b14 <Error_Handler>
  }
  /* USER CODE BEGIN TIM8_Init 2 */

  /* USER CODE END TIM8_Init 2 */

}
 800668a:	bf00      	nop
 800668c:	3730      	adds	r7, #48	; 0x30
 800668e:	46bd      	mov	sp, r7
 8006690:	bd80      	pop	{r7, pc}
 8006692:	bf00      	nop
 8006694:	20000a08 	.word	0x20000a08
 8006698:	40010400 	.word	0x40010400

0800669c <MX_TIM13_Init>:
  * @brief TIM13 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM13_Init(void)
{
 800669c:	b580      	push	{r7, lr}
 800669e:	af00      	add	r7, sp, #0
  /* USER CODE END TIM13_Init 0 */

  /* USER CODE BEGIN TIM13_Init 1 */

  /* USER CODE END TIM13_Init 1 */
  htim13.Instance = TIM13;
 80066a0:	4b0e      	ldr	r3, [pc, #56]	; (80066dc <MX_TIM13_Init+0x40>)
 80066a2:	4a0f      	ldr	r2, [pc, #60]	; (80066e0 <MX_TIM13_Init+0x44>)
 80066a4:	601a      	str	r2, [r3, #0]
  htim13.Init.Prescaler = 45000-1;
 80066a6:	4b0d      	ldr	r3, [pc, #52]	; (80066dc <MX_TIM13_Init+0x40>)
 80066a8:	f64a 72c7 	movw	r2, #44999	; 0xafc7
 80066ac:	605a      	str	r2, [r3, #4]
  htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 80066ae:	4b0b      	ldr	r3, [pc, #44]	; (80066dc <MX_TIM13_Init+0x40>)
 80066b0:	2200      	movs	r2, #0
 80066b2:	609a      	str	r2, [r3, #8]
  htim13.Init.Period = 65535;
 80066b4:	4b09      	ldr	r3, [pc, #36]	; (80066dc <MX_TIM13_Init+0x40>)
 80066b6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80066ba:	60da      	str	r2, [r3, #12]
  htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80066bc:	4b07      	ldr	r3, [pc, #28]	; (80066dc <MX_TIM13_Init+0x40>)
 80066be:	2200      	movs	r2, #0
 80066c0:	611a      	str	r2, [r3, #16]
  htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80066c2:	4b06      	ldr	r3, [pc, #24]	; (80066dc <MX_TIM13_Init+0x40>)
 80066c4:	2280      	movs	r2, #128	; 0x80
 80066c6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 80066c8:	4804      	ldr	r0, [pc, #16]	; (80066dc <MX_TIM13_Init+0x40>)
 80066ca:	f003 fd9d 	bl	800a208 <HAL_TIM_Base_Init>
 80066ce:	4603      	mov	r3, r0
 80066d0:	2b00      	cmp	r3, #0
 80066d2:	d001      	beq.n	80066d8 <MX_TIM13_Init+0x3c>
  {
    Error_Handler();
 80066d4:	f000 fa1e 	bl	8006b14 <Error_Handler>
  }
  /* USER CODE BEGIN TIM13_Init 2 */

  /* USER CODE END TIM13_Init 2 */

}
 80066d8:	bf00      	nop
 80066da:	bd80      	pop	{r7, pc}
 80066dc:	20000a50 	.word	0x20000a50
 80066e0:	40001c00 	.word	0x40001c00

080066e4 <MX_TIM14_Init>:
  * @brief TIM14 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM14_Init(void)
{
 80066e4:	b580      	push	{r7, lr}
 80066e6:	af00      	add	r7, sp, #0
  /* USER CODE END TIM14_Init 0 */

  /* USER CODE BEGIN TIM14_Init 1 */

  /* USER CODE END TIM14_Init 1 */
  htim14.Instance = TIM14;
 80066e8:	4b0e      	ldr	r3, [pc, #56]	; (8006724 <MX_TIM14_Init+0x40>)
 80066ea:	4a0f      	ldr	r2, [pc, #60]	; (8006728 <MX_TIM14_Init+0x44>)
 80066ec:	601a      	str	r2, [r3, #0]
  htim14.Init.Prescaler = 0;
 80066ee:	4b0d      	ldr	r3, [pc, #52]	; (8006724 <MX_TIM14_Init+0x40>)
 80066f0:	2200      	movs	r2, #0
 80066f2:	605a      	str	r2, [r3, #4]
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 80066f4:	4b0b      	ldr	r3, [pc, #44]	; (8006724 <MX_TIM14_Init+0x40>)
 80066f6:	2200      	movs	r2, #0
 80066f8:	609a      	str	r2, [r3, #8]
  htim14.Init.Period = 1000;
 80066fa:	4b0a      	ldr	r3, [pc, #40]	; (8006724 <MX_TIM14_Init+0x40>)
 80066fc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8006700:	60da      	str	r2, [r3, #12]
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8006702:	4b08      	ldr	r3, [pc, #32]	; (8006724 <MX_TIM14_Init+0x40>)
 8006704:	2200      	movs	r2, #0
 8006706:	611a      	str	r2, [r3, #16]
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8006708:	4b06      	ldr	r3, [pc, #24]	; (8006724 <MX_TIM14_Init+0x40>)
 800670a:	2280      	movs	r2, #128	; 0x80
 800670c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 800670e:	4805      	ldr	r0, [pc, #20]	; (8006724 <MX_TIM14_Init+0x40>)
 8006710:	f003 fd7a 	bl	800a208 <HAL_TIM_Base_Init>
 8006714:	4603      	mov	r3, r0
 8006716:	2b00      	cmp	r3, #0
 8006718:	d001      	beq.n	800671e <MX_TIM14_Init+0x3a>
  {
    Error_Handler();
 800671a:	f000 f9fb 	bl	8006b14 <Error_Handler>
  }
  /* USER CODE BEGIN TIM14_Init 2 */

  /* USER CODE END TIM14_Init 2 */

}
 800671e:	bf00      	nop
 8006720:	bd80      	pop	{r7, pc}
 8006722:	bf00      	nop
 8006724:	20000a98 	.word	0x20000a98
 8006728:	40002000 	.word	0x40002000

0800672c <MX_UART5_Init>:
  * @brief UART5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART5_Init(void)
{
 800672c:	b580      	push	{r7, lr}
 800672e:	af00      	add	r7, sp, #0
  /* USER CODE END UART5_Init 0 */

  /* USER CODE BEGIN UART5_Init 1 */

  /* USER CODE END UART5_Init 1 */
  huart5.Instance = UART5;
 8006730:	4b11      	ldr	r3, [pc, #68]	; (8006778 <MX_UART5_Init+0x4c>)
 8006732:	4a12      	ldr	r2, [pc, #72]	; (800677c <MX_UART5_Init+0x50>)
 8006734:	601a      	str	r2, [r3, #0]
  huart5.Init.BaudRate = 460800;
 8006736:	4b10      	ldr	r3, [pc, #64]	; (8006778 <MX_UART5_Init+0x4c>)
 8006738:	f44f 22e1 	mov.w	r2, #460800	; 0x70800
 800673c:	605a      	str	r2, [r3, #4]
  huart5.Init.WordLength = UART_WORDLENGTH_8B;
 800673e:	4b0e      	ldr	r3, [pc, #56]	; (8006778 <MX_UART5_Init+0x4c>)
 8006740:	2200      	movs	r2, #0
 8006742:	609a      	str	r2, [r3, #8]
  huart5.Init.StopBits = UART_STOPBITS_1;
 8006744:	4b0c      	ldr	r3, [pc, #48]	; (8006778 <MX_UART5_Init+0x4c>)
 8006746:	2200      	movs	r2, #0
 8006748:	60da      	str	r2, [r3, #12]
  huart5.Init.Parity = UART_PARITY_NONE;
 800674a:	4b0b      	ldr	r3, [pc, #44]	; (8006778 <MX_UART5_Init+0x4c>)
 800674c:	2200      	movs	r2, #0
 800674e:	611a      	str	r2, [r3, #16]
  huart5.Init.Mode = UART_MODE_TX_RX;
 8006750:	4b09      	ldr	r3, [pc, #36]	; (8006778 <MX_UART5_Init+0x4c>)
 8006752:	220c      	movs	r2, #12
 8006754:	615a      	str	r2, [r3, #20]
  huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8006756:	4b08      	ldr	r3, [pc, #32]	; (8006778 <MX_UART5_Init+0x4c>)
 8006758:	2200      	movs	r2, #0
 800675a:	619a      	str	r2, [r3, #24]
  huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 800675c:	4b06      	ldr	r3, [pc, #24]	; (8006778 <MX_UART5_Init+0x4c>)
 800675e:	2200      	movs	r2, #0
 8006760:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart5) != HAL_OK)
 8006762:	4805      	ldr	r0, [pc, #20]	; (8006778 <MX_UART5_Init+0x4c>)
 8006764:	f005 fbd2 	bl	800bf0c <HAL_UART_Init>
 8006768:	4603      	mov	r3, r0
 800676a:	2b00      	cmp	r3, #0
 800676c:	d001      	beq.n	8006772 <MX_UART5_Init+0x46>
  {
    Error_Handler();
 800676e:	f000 f9d1 	bl	8006b14 <Error_Handler>
  }
  /* USER CODE BEGIN UART5_Init 2 */

  /* USER CODE END UART5_Init 2 */

}
 8006772:	bf00      	nop
 8006774:	bd80      	pop	{r7, pc}
 8006776:	bf00      	nop
 8006778:	20000b40 	.word	0x20000b40
 800677c:	40005000 	.word	0x40005000

08006780 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8006780:	b580      	push	{r7, lr}
 8006782:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8006784:	4b11      	ldr	r3, [pc, #68]	; (80067cc <MX_USART1_UART_Init+0x4c>)
 8006786:	4a12      	ldr	r2, [pc, #72]	; (80067d0 <MX_USART1_UART_Init+0x50>)
 8006788:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 800678a:	4b10      	ldr	r3, [pc, #64]	; (80067cc <MX_USART1_UART_Init+0x4c>)
 800678c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8006790:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8006792:	4b0e      	ldr	r3, [pc, #56]	; (80067cc <MX_USART1_UART_Init+0x4c>)
 8006794:	2200      	movs	r2, #0
 8006796:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8006798:	4b0c      	ldr	r3, [pc, #48]	; (80067cc <MX_USART1_UART_Init+0x4c>)
 800679a:	2200      	movs	r2, #0
 800679c:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800679e:	4b0b      	ldr	r3, [pc, #44]	; (80067cc <MX_USART1_UART_Init+0x4c>)
 80067a0:	2200      	movs	r2, #0
 80067a2:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80067a4:	4b09      	ldr	r3, [pc, #36]	; (80067cc <MX_USART1_UART_Init+0x4c>)
 80067a6:	220c      	movs	r2, #12
 80067a8:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80067aa:	4b08      	ldr	r3, [pc, #32]	; (80067cc <MX_USART1_UART_Init+0x4c>)
 80067ac:	2200      	movs	r2, #0
 80067ae:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80067b0:	4b06      	ldr	r3, [pc, #24]	; (80067cc <MX_USART1_UART_Init+0x4c>)
 80067b2:	2200      	movs	r2, #0
 80067b4:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80067b6:	4805      	ldr	r0, [pc, #20]	; (80067cc <MX_USART1_UART_Init+0x4c>)
 80067b8:	f005 fba8 	bl	800bf0c <HAL_UART_Init>
 80067bc:	4603      	mov	r3, r0
 80067be:	2b00      	cmp	r3, #0
 80067c0:	d001      	beq.n	80067c6 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 80067c2:	f000 f9a7 	bl	8006b14 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80067c6:	bf00      	nop
 80067c8:	bd80      	pop	{r7, pc}
 80067ca:	bf00      	nop
 80067cc:	20000b84 	.word	0x20000b84
 80067d0:	40011000 	.word	0x40011000

080067d4 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80067d4:	b580      	push	{r7, lr}
 80067d6:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80067d8:	4b11      	ldr	r3, [pc, #68]	; (8006820 <MX_USART2_UART_Init+0x4c>)
 80067da:	4a12      	ldr	r2, [pc, #72]	; (8006824 <MX_USART2_UART_Init+0x50>)
 80067dc:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80067de:	4b10      	ldr	r3, [pc, #64]	; (8006820 <MX_USART2_UART_Init+0x4c>)
 80067e0:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80067e4:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80067e6:	4b0e      	ldr	r3, [pc, #56]	; (8006820 <MX_USART2_UART_Init+0x4c>)
 80067e8:	2200      	movs	r2, #0
 80067ea:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80067ec:	4b0c      	ldr	r3, [pc, #48]	; (8006820 <MX_USART2_UART_Init+0x4c>)
 80067ee:	2200      	movs	r2, #0
 80067f0:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80067f2:	4b0b      	ldr	r3, [pc, #44]	; (8006820 <MX_USART2_UART_Init+0x4c>)
 80067f4:	2200      	movs	r2, #0
 80067f6:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80067f8:	4b09      	ldr	r3, [pc, #36]	; (8006820 <MX_USART2_UART_Init+0x4c>)
 80067fa:	220c      	movs	r2, #12
 80067fc:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80067fe:	4b08      	ldr	r3, [pc, #32]	; (8006820 <MX_USART2_UART_Init+0x4c>)
 8006800:	2200      	movs	r2, #0
 8006802:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8006804:	4b06      	ldr	r3, [pc, #24]	; (8006820 <MX_USART2_UART_Init+0x4c>)
 8006806:	2200      	movs	r2, #0
 8006808:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800680a:	4805      	ldr	r0, [pc, #20]	; (8006820 <MX_USART2_UART_Init+0x4c>)
 800680c:	f005 fb7e 	bl	800bf0c <HAL_UART_Init>
 8006810:	4603      	mov	r3, r0
 8006812:	2b00      	cmp	r3, #0
 8006814:	d001      	beq.n	800681a <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8006816:	f000 f97d 	bl	8006b14 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800681a:	bf00      	nop
 800681c:	bd80      	pop	{r7, pc}
 800681e:	bf00      	nop
 8006820:	20000bc8 	.word	0x20000bc8
 8006824:	40004400 	.word	0x40004400

08006828 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 8006828:	b580      	push	{r7, lr}
 800682a:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 800682c:	4b11      	ldr	r3, [pc, #68]	; (8006874 <MX_USART3_UART_Init+0x4c>)
 800682e:	4a12      	ldr	r2, [pc, #72]	; (8006878 <MX_USART3_UART_Init+0x50>)
 8006830:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 8006832:	4b10      	ldr	r3, [pc, #64]	; (8006874 <MX_USART3_UART_Init+0x4c>)
 8006834:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8006838:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 800683a:	4b0e      	ldr	r3, [pc, #56]	; (8006874 <MX_USART3_UART_Init+0x4c>)
 800683c:	2200      	movs	r2, #0
 800683e:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8006840:	4b0c      	ldr	r3, [pc, #48]	; (8006874 <MX_USART3_UART_Init+0x4c>)
 8006842:	2200      	movs	r2, #0
 8006844:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 8006846:	4b0b      	ldr	r3, [pc, #44]	; (8006874 <MX_USART3_UART_Init+0x4c>)
 8006848:	2200      	movs	r2, #0
 800684a:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 800684c:	4b09      	ldr	r3, [pc, #36]	; (8006874 <MX_USART3_UART_Init+0x4c>)
 800684e:	220c      	movs	r2, #12
 8006850:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8006852:	4b08      	ldr	r3, [pc, #32]	; (8006874 <MX_USART3_UART_Init+0x4c>)
 8006854:	2200      	movs	r2, #0
 8006856:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8006858:	4b06      	ldr	r3, [pc, #24]	; (8006874 <MX_USART3_UART_Init+0x4c>)
 800685a:	2200      	movs	r2, #0
 800685c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 800685e:	4805      	ldr	r0, [pc, #20]	; (8006874 <MX_USART3_UART_Init+0x4c>)
 8006860:	f005 fb54 	bl	800bf0c <HAL_UART_Init>
 8006864:	4603      	mov	r3, r0
 8006866:	2b00      	cmp	r3, #0
 8006868:	d001      	beq.n	800686e <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 800686a:	f000 f953 	bl	8006b14 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 800686e:	bf00      	nop
 8006870:	bd80      	pop	{r7, pc}
 8006872:	bf00      	nop
 8006874:	20000c0c 	.word	0x20000c0c
 8006878:	40004800 	.word	0x40004800

0800687c <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 800687c:	b580      	push	{r7, lr}
 800687e:	b082      	sub	sp, #8
 8006880:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8006882:	2300      	movs	r3, #0
 8006884:	607b      	str	r3, [r7, #4]
 8006886:	4b0c      	ldr	r3, [pc, #48]	; (80068b8 <MX_DMA_Init+0x3c>)
 8006888:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800688a:	4a0b      	ldr	r2, [pc, #44]	; (80068b8 <MX_DMA_Init+0x3c>)
 800688c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8006890:	6313      	str	r3, [r2, #48]	; 0x30
 8006892:	4b09      	ldr	r3, [pc, #36]	; (80068b8 <MX_DMA_Init+0x3c>)
 8006894:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006896:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800689a:	607b      	str	r3, [r7, #4]
 800689c:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream7_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream7_IRQn, 0, 0);
 800689e:	2200      	movs	r2, #0
 80068a0:	2100      	movs	r1, #0
 80068a2:	202f      	movs	r0, #47	; 0x2f
 80068a4:	f001 fe2b 	bl	80084fe <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 80068a8:	202f      	movs	r0, #47	; 0x2f
 80068aa:	f001 fe44 	bl	8008536 <HAL_NVIC_EnableIRQ>

}
 80068ae:	bf00      	nop
 80068b0:	3708      	adds	r7, #8
 80068b2:	46bd      	mov	sp, r7
 80068b4:	bd80      	pop	{r7, pc}
 80068b6:	bf00      	nop
 80068b8:	40023800 	.word	0x40023800

080068bc <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80068bc:	b580      	push	{r7, lr}
 80068be:	b08a      	sub	sp, #40	; 0x28
 80068c0:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80068c2:	f107 0314 	add.w	r3, r7, #20
 80068c6:	2200      	movs	r2, #0
 80068c8:	601a      	str	r2, [r3, #0]
 80068ca:	605a      	str	r2, [r3, #4]
 80068cc:	609a      	str	r2, [r3, #8]
 80068ce:	60da      	str	r2, [r3, #12]
 80068d0:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80068d2:	2300      	movs	r3, #0
 80068d4:	613b      	str	r3, [r7, #16]
 80068d6:	4b64      	ldr	r3, [pc, #400]	; (8006a68 <MX_GPIO_Init+0x1ac>)
 80068d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80068da:	4a63      	ldr	r2, [pc, #396]	; (8006a68 <MX_GPIO_Init+0x1ac>)
 80068dc:	f043 0304 	orr.w	r3, r3, #4
 80068e0:	6313      	str	r3, [r2, #48]	; 0x30
 80068e2:	4b61      	ldr	r3, [pc, #388]	; (8006a68 <MX_GPIO_Init+0x1ac>)
 80068e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80068e6:	f003 0304 	and.w	r3, r3, #4
 80068ea:	613b      	str	r3, [r7, #16]
 80068ec:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80068ee:	2300      	movs	r3, #0
 80068f0:	60fb      	str	r3, [r7, #12]
 80068f2:	4b5d      	ldr	r3, [pc, #372]	; (8006a68 <MX_GPIO_Init+0x1ac>)
 80068f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80068f6:	4a5c      	ldr	r2, [pc, #368]	; (8006a68 <MX_GPIO_Init+0x1ac>)
 80068f8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80068fc:	6313      	str	r3, [r2, #48]	; 0x30
 80068fe:	4b5a      	ldr	r3, [pc, #360]	; (8006a68 <MX_GPIO_Init+0x1ac>)
 8006900:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006902:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006906:	60fb      	str	r3, [r7, #12]
 8006908:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800690a:	2300      	movs	r3, #0
 800690c:	60bb      	str	r3, [r7, #8]
 800690e:	4b56      	ldr	r3, [pc, #344]	; (8006a68 <MX_GPIO_Init+0x1ac>)
 8006910:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006912:	4a55      	ldr	r2, [pc, #340]	; (8006a68 <MX_GPIO_Init+0x1ac>)
 8006914:	f043 0301 	orr.w	r3, r3, #1
 8006918:	6313      	str	r3, [r2, #48]	; 0x30
 800691a:	4b53      	ldr	r3, [pc, #332]	; (8006a68 <MX_GPIO_Init+0x1ac>)
 800691c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800691e:	f003 0301 	and.w	r3, r3, #1
 8006922:	60bb      	str	r3, [r7, #8]
 8006924:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8006926:	2300      	movs	r3, #0
 8006928:	607b      	str	r3, [r7, #4]
 800692a:	4b4f      	ldr	r3, [pc, #316]	; (8006a68 <MX_GPIO_Init+0x1ac>)
 800692c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800692e:	4a4e      	ldr	r2, [pc, #312]	; (8006a68 <MX_GPIO_Init+0x1ac>)
 8006930:	f043 0302 	orr.w	r3, r3, #2
 8006934:	6313      	str	r3, [r2, #48]	; 0x30
 8006936:	4b4c      	ldr	r3, [pc, #304]	; (8006a68 <MX_GPIO_Init+0x1ac>)
 8006938:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800693a:	f003 0302 	and.w	r3, r3, #2
 800693e:	607b      	str	r3, [r7, #4]
 8006940:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8006942:	2300      	movs	r3, #0
 8006944:	603b      	str	r3, [r7, #0]
 8006946:	4b48      	ldr	r3, [pc, #288]	; (8006a68 <MX_GPIO_Init+0x1ac>)
 8006948:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800694a:	4a47      	ldr	r2, [pc, #284]	; (8006a68 <MX_GPIO_Init+0x1ac>)
 800694c:	f043 0308 	orr.w	r3, r3, #8
 8006950:	6313      	str	r3, [r2, #48]	; 0x30
 8006952:	4b45      	ldr	r3, [pc, #276]	; (8006a68 <MX_GPIO_Init+0x1ac>)
 8006954:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006956:	f003 0308 	and.w	r3, r3, #8
 800695a:	603b      	str	r3, [r7, #0]
 800695c:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TEL_GPIO4_GPIO_Port, TEL_GPIO4_Pin, GPIO_PIN_RESET);
 800695e:	2200      	movs	r2, #0
 8006960:	2102      	movs	r1, #2
 8006962:	4842      	ldr	r0, [pc, #264]	; (8006a6c <MX_GPIO_Init+0x1b0>)
 8006964:	f002 fdcc 	bl	8009500 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, TEL_GPIO7_Pin|On_Board_LED_Pin, GPIO_PIN_RESET);
 8006968:	2200      	movs	r2, #0
 800696a:	2122      	movs	r1, #34	; 0x22
 800696c:	4840      	ldr	r0, [pc, #256]	; (8006a70 <MX_GPIO_Init+0x1b4>)
 800696e:	f002 fdc7 	bl	8009500 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED4_Pin|LED1_Pin|LED2_Pin|LED3_Pin
 8006972:	2200      	movs	r2, #0
 8006974:	f24e 0142 	movw	r1, #57410	; 0xe042
 8006978:	483e      	ldr	r0, [pc, #248]	; (8006a74 <MX_GPIO_Init+0x1b8>)
 800697a:	f002 fdc1 	bl	8009500 <HAL_GPIO_WritePin>
                          |Motor_EN_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin : On_Board_Button_Pin */
  GPIO_InitStruct.Pin = On_Board_Button_Pin;
 800697e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8006982:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8006984:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8006988:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800698a:	2300      	movs	r3, #0
 800698c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(On_Board_Button_GPIO_Port, &GPIO_InitStruct);
 800698e:	f107 0314 	add.w	r3, r7, #20
 8006992:	4619      	mov	r1, r3
 8006994:	4835      	ldr	r0, [pc, #212]	; (8006a6c <MX_GPIO_Init+0x1b0>)
 8006996:	f002 fc07 	bl	80091a8 <HAL_GPIO_Init>

  /*Configure GPIO pin : TEL_GPIO4_Pin */
  GPIO_InitStruct.Pin = TEL_GPIO4_Pin;
 800699a:	2302      	movs	r3, #2
 800699c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800699e:	2301      	movs	r3, #1
 80069a0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80069a2:	2300      	movs	r3, #0
 80069a4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80069a6:	2300      	movs	r3, #0
 80069a8:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(TEL_GPIO4_GPIO_Port, &GPIO_InitStruct);
 80069aa:	f107 0314 	add.w	r3, r7, #20
 80069ae:	4619      	mov	r1, r3
 80069b0:	482e      	ldr	r0, [pc, #184]	; (8006a6c <MX_GPIO_Init+0x1b0>)
 80069b2:	f002 fbf9 	bl	80091a8 <HAL_GPIO_Init>

  /*Configure GPIO pins : TEL_GPIO7_Pin On_Board_LED_Pin */
  GPIO_InitStruct.Pin = TEL_GPIO7_Pin|On_Board_LED_Pin;
 80069b6:	2322      	movs	r3, #34	; 0x22
 80069b8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80069ba:	2301      	movs	r3, #1
 80069bc:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80069be:	2300      	movs	r3, #0
 80069c0:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80069c2:	2300      	movs	r3, #0
 80069c4:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80069c6:	f107 0314 	add.w	r3, r7, #20
 80069ca:	4619      	mov	r1, r3
 80069cc:	4828      	ldr	r0, [pc, #160]	; (8006a70 <MX_GPIO_Init+0x1b4>)
 80069ce:	f002 fbeb 	bl	80091a8 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED4_Pin LED1_Pin LED2_Pin LED3_Pin
                           Motor_EN_Pin */
  GPIO_InitStruct.Pin = LED4_Pin|LED1_Pin|LED2_Pin|LED3_Pin
 80069d2:	f24e 0342 	movw	r3, #57410	; 0xe042
 80069d6:	617b      	str	r3, [r7, #20]
                          |Motor_EN_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80069d8:	2301      	movs	r3, #1
 80069da:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80069dc:	2300      	movs	r3, #0
 80069de:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80069e0:	2300      	movs	r3, #0
 80069e2:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80069e4:	f107 0314 	add.w	r3, r7, #20
 80069e8:	4619      	mov	r1, r3
 80069ea:	4822      	ldr	r0, [pc, #136]	; (8006a74 <MX_GPIO_Init+0x1b8>)
 80069ec:	f002 fbdc 	bl	80091a8 <HAL_GPIO_Init>

  /*Configure GPIO pins : SW2_Pin B2_Pin Motor_Feedback_Pin */
  GPIO_InitStruct.Pin = SW2_Pin|B2_Pin|Motor_Feedback_Pin;
 80069f0:	f44f 6394 	mov.w	r3, #1184	; 0x4a0
 80069f4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80069f6:	2300      	movs	r3, #0
 80069f8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80069fa:	2300      	movs	r3, #0
 80069fc:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80069fe:	f107 0314 	add.w	r3, r7, #20
 8006a02:	4619      	mov	r1, r3
 8006a04:	481b      	ldr	r0, [pc, #108]	; (8006a74 <MX_GPIO_Init+0x1b8>)
 8006a06:	f002 fbcf 	bl	80091a8 <HAL_GPIO_Init>

  /*Configure GPIO pin : SW1_Pin */
  GPIO_InitStruct.Pin = SW1_Pin;
 8006a0a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8006a0e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8006a10:	2300      	movs	r3, #0
 8006a12:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006a14:	2300      	movs	r3, #0
 8006a16:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(SW1_GPIO_Port, &GPIO_InitStruct);
 8006a18:	f107 0314 	add.w	r3, r7, #20
 8006a1c:	4619      	mov	r1, r3
 8006a1e:	4814      	ldr	r0, [pc, #80]	; (8006a70 <MX_GPIO_Init+0x1b4>)
 8006a20:	f002 fbc2 	bl	80091a8 <HAL_GPIO_Init>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8006a24:	2310      	movs	r3, #16
 8006a26:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8006a28:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8006a2c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006a2e:	2300      	movs	r3, #0
 8006a30:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8006a32:	f107 0314 	add.w	r3, r7, #20
 8006a36:	4619      	mov	r1, r3
 8006a38:	480e      	ldr	r0, [pc, #56]	; (8006a74 <MX_GPIO_Init+0x1b8>)
 8006a3a:	f002 fbb5 	bl	80091a8 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI4_IRQn, 0, 0);
 8006a3e:	2200      	movs	r2, #0
 8006a40:	2100      	movs	r1, #0
 8006a42:	200a      	movs	r0, #10
 8006a44:	f001 fd5b 	bl	80084fe <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 8006a48:	200a      	movs	r0, #10
 8006a4a:	f001 fd74 	bl	8008536 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8006a4e:	2200      	movs	r2, #0
 8006a50:	2100      	movs	r1, #0
 8006a52:	2028      	movs	r0, #40	; 0x28
 8006a54:	f001 fd53 	bl	80084fe <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8006a58:	2028      	movs	r0, #40	; 0x28
 8006a5a:	f001 fd6c 	bl	8008536 <HAL_NVIC_EnableIRQ>

}
 8006a5e:	bf00      	nop
 8006a60:	3728      	adds	r7, #40	; 0x28
 8006a62:	46bd      	mov	sp, r7
 8006a64:	bd80      	pop	{r7, pc}
 8006a66:	bf00      	nop
 8006a68:	40023800 	.word	0x40023800
 8006a6c:	40020800 	.word	0x40020800
 8006a70:	40020000 	.word	0x40020000
 8006a74:	40020400 	.word	0x40020400

08006a78 <HAL_GPIO_EXTI_Callback>:

/* USER CODE BEGIN 4 */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8006a78:	b580      	push	{r7, lr}
 8006a7a:	b082      	sub	sp, #8
 8006a7c:	af00      	add	r7, sp, #0
 8006a7e:	4603      	mov	r3, r0
 8006a80:	80fb      	strh	r3, [r7, #6]
	//ha meg lett nyomva a nucleon a kék gomb
	if(GPIO_Pin == On_Board_Button_Pin)B_NUCLEO_ISR(&huart1);
 8006a82:	88fb      	ldrh	r3, [r7, #6]
 8006a84:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006a88:	d102      	bne.n	8006a90 <HAL_GPIO_EXTI_Callback+0x18>
 8006a8a:	4806      	ldr	r0, [pc, #24]	; (8006aa4 <HAL_GPIO_EXTI_Callback+0x2c>)
 8006a8c:	f7fa fc58 	bl	8001340 <B_NUCLEO_ISR>
	if(GPIO_Pin == B1_Pin) B1_ISR(&huart1);
 8006a90:	88fb      	ldrh	r3, [r7, #6]
 8006a92:	2b10      	cmp	r3, #16
 8006a94:	d102      	bne.n	8006a9c <HAL_GPIO_EXTI_Callback+0x24>
 8006a96:	4803      	ldr	r0, [pc, #12]	; (8006aa4 <HAL_GPIO_EXTI_Callback+0x2c>)
 8006a98:	f7fa fbde 	bl	8001258 <B1_ISR>
}
 8006a9c:	bf00      	nop
 8006a9e:	3708      	adds	r7, #8
 8006aa0:	46bd      	mov	sp, r7
 8006aa2:	bd80      	pop	{r7, pc}
 8006aa4:	20000b84 	.word	0x20000b84

08006aa8 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8006aa8:	b580      	push	{r7, lr}
 8006aaa:	b082      	sub	sp, #8
 8006aac:	af00      	add	r7, sp, #0
 8006aae:	6078      	str	r0, [r7, #4]
	if(huart == &huart1)Uart_Receive_From_PC_ISR(&huart1);
 8006ab0:	687b      	ldr	r3, [r7, #4]
 8006ab2:	4a09      	ldr	r2, [pc, #36]	; (8006ad8 <HAL_UART_RxCpltCallback+0x30>)
 8006ab4:	4293      	cmp	r3, r2
 8006ab6:	d103      	bne.n	8006ac0 <HAL_UART_RxCpltCallback+0x18>
 8006ab8:	4807      	ldr	r0, [pc, #28]	; (8006ad8 <HAL_UART_RxCpltCallback+0x30>)
 8006aba:	f7fa fba9 	bl	8001210 <Uart_Receive_From_PC_ISR>
	else if(huart==&huart3)Uart_Receive_Thunderboard_ISR(&huart3, &huart1);
}
 8006abe:	e007      	b.n	8006ad0 <HAL_UART_RxCpltCallback+0x28>
	else if(huart==&huart3)Uart_Receive_Thunderboard_ISR(&huart3, &huart1);
 8006ac0:	687b      	ldr	r3, [r7, #4]
 8006ac2:	4a06      	ldr	r2, [pc, #24]	; (8006adc <HAL_UART_RxCpltCallback+0x34>)
 8006ac4:	4293      	cmp	r3, r2
 8006ac6:	d103      	bne.n	8006ad0 <HAL_UART_RxCpltCallback+0x28>
 8006ac8:	4903      	ldr	r1, [pc, #12]	; (8006ad8 <HAL_UART_RxCpltCallback+0x30>)
 8006aca:	4804      	ldr	r0, [pc, #16]	; (8006adc <HAL_UART_RxCpltCallback+0x34>)
 8006acc:	f7fc ffe0 	bl	8003a90 <Uart_Receive_Thunderboard_ISR>
}
 8006ad0:	bf00      	nop
 8006ad2:	3708      	adds	r7, #8
 8006ad4:	46bd      	mov	sp, r7
 8006ad6:	bd80      	pop	{r7, pc}
 8006ad8:	20000b84 	.word	0x20000b84
 8006adc:	20000c0c 	.word	0x20000c0c

08006ae0 <Delay>:

void Delay(uint16_t ms)
{
 8006ae0:	b480      	push	{r7}
 8006ae2:	b083      	sub	sp, #12
 8006ae4:	af00      	add	r7, sp, #0
 8006ae6:	4603      	mov	r3, r0
 8006ae8:	80fb      	strh	r3, [r7, #6]
	TIM13->CNT=0;
 8006aea:	4b08      	ldr	r3, [pc, #32]	; (8006b0c <Delay+0x2c>)
 8006aec:	2200      	movs	r2, #0
 8006aee:	625a      	str	r2, [r3, #36]	; 0x24
	while(1)
	{
		if(__HAL_TIM_GET_COUNTER(&htim13)>ms)break;
 8006af0:	4b07      	ldr	r3, [pc, #28]	; (8006b10 <Delay+0x30>)
 8006af2:	681b      	ldr	r3, [r3, #0]
 8006af4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006af6:	88fb      	ldrh	r3, [r7, #6]
 8006af8:	429a      	cmp	r2, r3
 8006afa:	d800      	bhi.n	8006afe <Delay+0x1e>
 8006afc:	e7f8      	b.n	8006af0 <Delay+0x10>
 8006afe:	bf00      	nop
	}

}
 8006b00:	bf00      	nop
 8006b02:	370c      	adds	r7, #12
 8006b04:	46bd      	mov	sp, r7
 8006b06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b0a:	4770      	bx	lr
 8006b0c:	40001c00 	.word	0x40001c00
 8006b10:	20000a50 	.word	0x20000a50

08006b14 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8006b14:	b580      	push	{r7, lr}
 8006b16:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 8006b18:	b672      	cpsid	i
}
 8006b1a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  TIM3->CCR1=499;
 8006b1c:	4b0f      	ldr	r3, [pc, #60]	; (8006b5c <Error_Handler+0x48>)
 8006b1e:	f240 12f3 	movw	r2, #499	; 0x1f3
 8006b22:	635a      	str	r2, [r3, #52]	; 0x34
  TIM3->CCR2=499;
 8006b24:	4b0d      	ldr	r3, [pc, #52]	; (8006b5c <Error_Handler+0x48>)
 8006b26:	f240 12f3 	movw	r2, #499	; 0x1f3
 8006b2a:	639a      	str	r2, [r3, #56]	; 0x38
  LED_B(1);
 8006b2c:	2200      	movs	r2, #0
 8006b2e:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8006b32:	480b      	ldr	r0, [pc, #44]	; (8006b60 <Error_Handler+0x4c>)
 8006b34:	f002 fce4 	bl	8009500 <HAL_GPIO_WritePin>
  LED_G(1);
 8006b38:	2200      	movs	r2, #0
 8006b3a:	2102      	movs	r1, #2
 8006b3c:	4808      	ldr	r0, [pc, #32]	; (8006b60 <Error_Handler+0x4c>)
 8006b3e:	f002 fcdf 	bl	8009500 <HAL_GPIO_WritePin>
  LED_R(1);
 8006b42:	2200      	movs	r2, #0
 8006b44:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8006b48:	4805      	ldr	r0, [pc, #20]	; (8006b60 <Error_Handler+0x4c>)
 8006b4a:	f002 fcd9 	bl	8009500 <HAL_GPIO_WritePin>
  LED_Y(1);
 8006b4e:	2200      	movs	r2, #0
 8006b50:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8006b54:	4802      	ldr	r0, [pc, #8]	; (8006b60 <Error_Handler+0x4c>)
 8006b56:	f002 fcd3 	bl	8009500 <HAL_GPIO_WritePin>
  while (1)
 8006b5a:	e7fe      	b.n	8006b5a <Error_Handler+0x46>
 8006b5c:	40000400 	.word	0x40000400
 8006b60:	40020400 	.word	0x40020400

08006b64 <Remote_Control_Init>:
 8006b64:	b580      	push	{r7, lr}
 8006b66:	b082      	sub	sp, #8
 8006b68:	af00      	add	r7, sp, #0
 8006b6a:	6078      	str	r0, [r7, #4]
 8006b6c:	6039      	str	r1, [r7, #0]
 8006b6e:	4b0a      	ldr	r3, [pc, #40]	; (8006b98 <Remote_Control_Init+0x34>)
 8006b70:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8006b74:	601a      	str	r2, [r3, #0]
 8006b76:	4b08      	ldr	r3, [pc, #32]	; (8006b98 <Remote_Control_Init+0x34>)
 8006b78:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8006b7c:	605a      	str	r2, [r3, #4]
 8006b7e:	4b06      	ldr	r3, [pc, #24]	; (8006b98 <Remote_Control_Init+0x34>)
 8006b80:	2200      	movs	r2, #0
 8006b82:	609a      	str	r2, [r3, #8]
 8006b84:	2303      	movs	r3, #3
 8006b86:	4a04      	ldr	r2, [pc, #16]	; (8006b98 <Remote_Control_Init+0x34>)
 8006b88:	6839      	ldr	r1, [r7, #0]
 8006b8a:	6878      	ldr	r0, [r7, #4]
 8006b8c:	f003 fd70 	bl	800a670 <HAL_TIM_IC_Start_DMA>
 8006b90:	bf00      	nop
 8006b92:	3708      	adds	r7, #8
 8006b94:	46bd      	mov	sp, r7
 8006b96:	bd80      	pop	{r7, pc}
 8006b98:	20000c54 	.word	0x20000c54

08006b9c <Remote_Control_Task>:
 8006b9c:	b580      	push	{r7, lr}
 8006b9e:	b084      	sub	sp, #16
 8006ba0:	af00      	add	r7, sp, #0
 8006ba2:	60f8      	str	r0, [r7, #12]
 8006ba4:	60b9      	str	r1, [r7, #8]
 8006ba6:	607a      	str	r2, [r7, #4]
 8006ba8:	603b      	str	r3, [r7, #0]
 8006baa:	4b50      	ldr	r3, [pc, #320]	; (8006cec <Remote_Control_Task+0x150>)
 8006bac:	681b      	ldr	r3, [r3, #0]
 8006bae:	683a      	ldr	r2, [r7, #0]
 8006bb0:	429a      	cmp	r2, r3
 8006bb2:	f0c0 8096 	bcc.w	8006ce2 <Remote_Control_Task+0x146>
 8006bb6:	683a      	ldr	r2, [r7, #0]
 8006bb8:	69bb      	ldr	r3, [r7, #24]
 8006bba:	4413      	add	r3, r2
 8006bbc:	4a4b      	ldr	r2, [pc, #300]	; (8006cec <Remote_Control_Task+0x150>)
 8006bbe:	6013      	str	r3, [r2, #0]
 8006bc0:	201e      	movs	r0, #30
 8006bc2:	f001 fcc6 	bl	8008552 <HAL_NVIC_DisableIRQ>
 8006bc6:	4b4a      	ldr	r3, [pc, #296]	; (8006cf0 <Remote_Control_Task+0x154>)
 8006bc8:	685a      	ldr	r2, [r3, #4]
 8006bca:	4b49      	ldr	r3, [pc, #292]	; (8006cf0 <Remote_Control_Task+0x154>)
 8006bcc:	681b      	ldr	r3, [r3, #0]
 8006bce:	1ad3      	subs	r3, r2, r3
 8006bd0:	2b00      	cmp	r3, #0
 8006bd2:	bfb8      	it	lt
 8006bd4:	425b      	neglt	r3, r3
 8006bd6:	4a47      	ldr	r2, [pc, #284]	; (8006cf4 <Remote_Control_Task+0x158>)
 8006bd8:	6013      	str	r3, [r2, #0]
 8006bda:	4b45      	ldr	r3, [pc, #276]	; (8006cf0 <Remote_Control_Task+0x154>)
 8006bdc:	689a      	ldr	r2, [r3, #8]
 8006bde:	4b44      	ldr	r3, [pc, #272]	; (8006cf0 <Remote_Control_Task+0x154>)
 8006be0:	685b      	ldr	r3, [r3, #4]
 8006be2:	1ad3      	subs	r3, r2, r3
 8006be4:	2b00      	cmp	r3, #0
 8006be6:	bfb8      	it	lt
 8006be8:	425b      	neglt	r3, r3
 8006bea:	4a43      	ldr	r2, [pc, #268]	; (8006cf8 <Remote_Control_Task+0x15c>)
 8006bec:	6013      	str	r3, [r2, #0]
 8006bee:	4b40      	ldr	r3, [pc, #256]	; (8006cf0 <Remote_Control_Task+0x154>)
 8006bf0:	681a      	ldr	r2, [r3, #0]
 8006bf2:	4b3f      	ldr	r3, [pc, #252]	; (8006cf0 <Remote_Control_Task+0x154>)
 8006bf4:	689b      	ldr	r3, [r3, #8]
 8006bf6:	1ad3      	subs	r3, r2, r3
 8006bf8:	2b00      	cmp	r3, #0
 8006bfa:	bfb8      	it	lt
 8006bfc:	425b      	neglt	r3, r3
 8006bfe:	4a3f      	ldr	r2, [pc, #252]	; (8006cfc <Remote_Control_Task+0x160>)
 8006c00:	6013      	str	r3, [r2, #0]
 8006c02:	201e      	movs	r0, #30
 8006c04:	f001 fc97 	bl	8008536 <HAL_NVIC_EnableIRQ>
 8006c08:	4b3a      	ldr	r3, [pc, #232]	; (8006cf4 <Remote_Control_Task+0x158>)
 8006c0a:	681b      	ldr	r3, [r3, #0]
 8006c0c:	f241 3288 	movw	r2, #5000	; 0x1388
 8006c10:	4293      	cmp	r3, r2
 8006c12:	dd06      	ble.n	8006c22 <Remote_Control_Task+0x86>
 8006c14:	4b37      	ldr	r3, [pc, #220]	; (8006cf4 <Remote_Control_Task+0x158>)
 8006c16:	681b      	ldr	r3, [r3, #0]
 8006c18:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 8006c1c:	33ff      	adds	r3, #255	; 0xff
 8006c1e:	4a35      	ldr	r2, [pc, #212]	; (8006cf4 <Remote_Control_Task+0x158>)
 8006c20:	6013      	str	r3, [r2, #0]
 8006c22:	4b35      	ldr	r3, [pc, #212]	; (8006cf8 <Remote_Control_Task+0x15c>)
 8006c24:	681b      	ldr	r3, [r3, #0]
 8006c26:	f241 3288 	movw	r2, #5000	; 0x1388
 8006c2a:	4293      	cmp	r3, r2
 8006c2c:	dd06      	ble.n	8006c3c <Remote_Control_Task+0xa0>
 8006c2e:	4b32      	ldr	r3, [pc, #200]	; (8006cf8 <Remote_Control_Task+0x15c>)
 8006c30:	681b      	ldr	r3, [r3, #0]
 8006c32:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 8006c36:	33ff      	adds	r3, #255	; 0xff
 8006c38:	4a2f      	ldr	r2, [pc, #188]	; (8006cf8 <Remote_Control_Task+0x15c>)
 8006c3a:	6013      	str	r3, [r2, #0]
 8006c3c:	4b2f      	ldr	r3, [pc, #188]	; (8006cfc <Remote_Control_Task+0x160>)
 8006c3e:	681b      	ldr	r3, [r3, #0]
 8006c40:	f241 3288 	movw	r2, #5000	; 0x1388
 8006c44:	4293      	cmp	r3, r2
 8006c46:	dd06      	ble.n	8006c56 <Remote_Control_Task+0xba>
 8006c48:	4b2c      	ldr	r3, [pc, #176]	; (8006cfc <Remote_Control_Task+0x160>)
 8006c4a:	681b      	ldr	r3, [r3, #0]
 8006c4c:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 8006c50:	33ff      	adds	r3, #255	; 0xff
 8006c52:	4a2a      	ldr	r2, [pc, #168]	; (8006cfc <Remote_Control_Task+0x160>)
 8006c54:	6013      	str	r3, [r2, #0]
 8006c56:	4b27      	ldr	r3, [pc, #156]	; (8006cf4 <Remote_Control_Task+0x158>)
 8006c58:	681a      	ldr	r2, [r3, #0]
 8006c5a:	4b27      	ldr	r3, [pc, #156]	; (8006cf8 <Remote_Control_Task+0x15c>)
 8006c5c:	681b      	ldr	r3, [r3, #0]
 8006c5e:	429a      	cmp	r2, r3
 8006c60:	da0b      	bge.n	8006c7a <Remote_Control_Task+0xde>
 8006c62:	4b24      	ldr	r3, [pc, #144]	; (8006cf4 <Remote_Control_Task+0x158>)
 8006c64:	681a      	ldr	r2, [r3, #0]
 8006c66:	4b25      	ldr	r3, [pc, #148]	; (8006cfc <Remote_Control_Task+0x160>)
 8006c68:	681b      	ldr	r3, [r3, #0]
 8006c6a:	429a      	cmp	r2, r3
 8006c6c:	da05      	bge.n	8006c7a <Remote_Control_Task+0xde>
 8006c6e:	4b21      	ldr	r3, [pc, #132]	; (8006cf4 <Remote_Control_Task+0x158>)
 8006c70:	681b      	ldr	r3, [r3, #0]
 8006c72:	461a      	mov	r2, r3
 8006c74:	4b22      	ldr	r3, [pc, #136]	; (8006d00 <Remote_Control_Task+0x164>)
 8006c76:	601a      	str	r2, [r3, #0]
 8006c78:	e016      	b.n	8006ca8 <Remote_Control_Task+0x10c>
 8006c7a:	4b1f      	ldr	r3, [pc, #124]	; (8006cf8 <Remote_Control_Task+0x15c>)
 8006c7c:	681a      	ldr	r2, [r3, #0]
 8006c7e:	4b1d      	ldr	r3, [pc, #116]	; (8006cf4 <Remote_Control_Task+0x158>)
 8006c80:	681b      	ldr	r3, [r3, #0]
 8006c82:	429a      	cmp	r2, r3
 8006c84:	da0b      	bge.n	8006c9e <Remote_Control_Task+0x102>
 8006c86:	4b1c      	ldr	r3, [pc, #112]	; (8006cf8 <Remote_Control_Task+0x15c>)
 8006c88:	681a      	ldr	r2, [r3, #0]
 8006c8a:	4b1c      	ldr	r3, [pc, #112]	; (8006cfc <Remote_Control_Task+0x160>)
 8006c8c:	681b      	ldr	r3, [r3, #0]
 8006c8e:	429a      	cmp	r2, r3
 8006c90:	da05      	bge.n	8006c9e <Remote_Control_Task+0x102>
 8006c92:	4b19      	ldr	r3, [pc, #100]	; (8006cf8 <Remote_Control_Task+0x15c>)
 8006c94:	681b      	ldr	r3, [r3, #0]
 8006c96:	461a      	mov	r2, r3
 8006c98:	4b19      	ldr	r3, [pc, #100]	; (8006d00 <Remote_Control_Task+0x164>)
 8006c9a:	601a      	str	r2, [r3, #0]
 8006c9c:	e004      	b.n	8006ca8 <Remote_Control_Task+0x10c>
 8006c9e:	4b17      	ldr	r3, [pc, #92]	; (8006cfc <Remote_Control_Task+0x160>)
 8006ca0:	681b      	ldr	r3, [r3, #0]
 8006ca2:	461a      	mov	r2, r3
 8006ca4:	4b16      	ldr	r3, [pc, #88]	; (8006d00 <Remote_Control_Task+0x164>)
 8006ca6:	601a      	str	r2, [r3, #0]
 8006ca8:	4b15      	ldr	r3, [pc, #84]	; (8006d00 <Remote_Control_Task+0x164>)
 8006caa:	681b      	ldr	r3, [r3, #0]
 8006cac:	2b46      	cmp	r3, #70	; 0x46
 8006cae:	d903      	bls.n	8006cb8 <Remote_Control_Task+0x11c>
 8006cb0:	4b13      	ldr	r3, [pc, #76]	; (8006d00 <Remote_Control_Task+0x164>)
 8006cb2:	681b      	ldr	r3, [r3, #0]
 8006cb4:	2b63      	cmp	r3, #99	; 0x63
 8006cb6:	d904      	bls.n	8006cc2 <Remote_Control_Task+0x126>
 8006cb8:	4b11      	ldr	r3, [pc, #68]	; (8006d00 <Remote_Control_Task+0x164>)
 8006cba:	681b      	ldr	r3, [r3, #0]
 8006cbc:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8006cc0:	d103      	bne.n	8006cca <Remote_Control_Task+0x12e>
 8006cc2:	4b10      	ldr	r3, [pc, #64]	; (8006d04 <Remote_Control_Task+0x168>)
 8006cc4:	2200      	movs	r2, #0
 8006cc6:	701a      	strb	r2, [r3, #0]
 8006cc8:	e00c      	b.n	8006ce4 <Remote_Control_Task+0x148>
 8006cca:	4b0d      	ldr	r3, [pc, #52]	; (8006d00 <Remote_Control_Task+0x164>)
 8006ccc:	681b      	ldr	r3, [r3, #0]
 8006cce:	2b46      	cmp	r3, #70	; 0x46
 8006cd0:	d803      	bhi.n	8006cda <Remote_Control_Task+0x13e>
 8006cd2:	4b0c      	ldr	r3, [pc, #48]	; (8006d04 <Remote_Control_Task+0x168>)
 8006cd4:	2201      	movs	r2, #1
 8006cd6:	701a      	strb	r2, [r3, #0]
 8006cd8:	e004      	b.n	8006ce4 <Remote_Control_Task+0x148>
 8006cda:	4b0a      	ldr	r3, [pc, #40]	; (8006d04 <Remote_Control_Task+0x168>)
 8006cdc:	2202      	movs	r2, #2
 8006cde:	701a      	strb	r2, [r3, #0]
 8006ce0:	e000      	b.n	8006ce4 <Remote_Control_Task+0x148>
 8006ce2:	bf00      	nop
 8006ce4:	3710      	adds	r7, #16
 8006ce6:	46bd      	mov	sp, r7
 8006ce8:	bd80      	pop	{r7, pc}
 8006cea:	bf00      	nop
 8006cec:	20000c60 	.word	0x20000c60
 8006cf0:	20000c54 	.word	0x20000c54
 8006cf4:	20000124 	.word	0x20000124
 8006cf8:	20000128 	.word	0x20000128
 8006cfc:	2000012c 	.word	0x2000012c
 8006d00:	20000130 	.word	0x20000130
 8006d04:	20000c50 	.word	0x20000c50

08006d08 <HAL_MspInit>:
 8006d08:	b580      	push	{r7, lr}
 8006d0a:	b082      	sub	sp, #8
 8006d0c:	af00      	add	r7, sp, #0
 8006d0e:	2300      	movs	r3, #0
 8006d10:	607b      	str	r3, [r7, #4]
 8006d12:	4b10      	ldr	r3, [pc, #64]	; (8006d54 <HAL_MspInit+0x4c>)
 8006d14:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006d16:	4a0f      	ldr	r2, [pc, #60]	; (8006d54 <HAL_MspInit+0x4c>)
 8006d18:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8006d1c:	6453      	str	r3, [r2, #68]	; 0x44
 8006d1e:	4b0d      	ldr	r3, [pc, #52]	; (8006d54 <HAL_MspInit+0x4c>)
 8006d20:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006d22:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8006d26:	607b      	str	r3, [r7, #4]
 8006d28:	687b      	ldr	r3, [r7, #4]
 8006d2a:	2300      	movs	r3, #0
 8006d2c:	603b      	str	r3, [r7, #0]
 8006d2e:	4b09      	ldr	r3, [pc, #36]	; (8006d54 <HAL_MspInit+0x4c>)
 8006d30:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d32:	4a08      	ldr	r2, [pc, #32]	; (8006d54 <HAL_MspInit+0x4c>)
 8006d34:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8006d38:	6413      	str	r3, [r2, #64]	; 0x40
 8006d3a:	4b06      	ldr	r3, [pc, #24]	; (8006d54 <HAL_MspInit+0x4c>)
 8006d3c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d3e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006d42:	603b      	str	r3, [r7, #0]
 8006d44:	683b      	ldr	r3, [r7, #0]
 8006d46:	2007      	movs	r0, #7
 8006d48:	f001 fbce 	bl	80084e8 <HAL_NVIC_SetPriorityGrouping>
 8006d4c:	bf00      	nop
 8006d4e:	3708      	adds	r7, #8
 8006d50:	46bd      	mov	sp, r7
 8006d52:	bd80      	pop	{r7, pc}
 8006d54:	40023800 	.word	0x40023800

08006d58 <HAL_ADC_MspInit>:
 8006d58:	b580      	push	{r7, lr}
 8006d5a:	b08c      	sub	sp, #48	; 0x30
 8006d5c:	af00      	add	r7, sp, #0
 8006d5e:	6078      	str	r0, [r7, #4]
 8006d60:	f107 031c 	add.w	r3, r7, #28
 8006d64:	2200      	movs	r2, #0
 8006d66:	601a      	str	r2, [r3, #0]
 8006d68:	605a      	str	r2, [r3, #4]
 8006d6a:	609a      	str	r2, [r3, #8]
 8006d6c:	60da      	str	r2, [r3, #12]
 8006d6e:	611a      	str	r2, [r3, #16]
 8006d70:	687b      	ldr	r3, [r7, #4]
 8006d72:	681b      	ldr	r3, [r3, #0]
 8006d74:	4a2e      	ldr	r2, [pc, #184]	; (8006e30 <HAL_ADC_MspInit+0xd8>)
 8006d76:	4293      	cmp	r3, r2
 8006d78:	d128      	bne.n	8006dcc <HAL_ADC_MspInit+0x74>
 8006d7a:	2300      	movs	r3, #0
 8006d7c:	61bb      	str	r3, [r7, #24]
 8006d7e:	4b2d      	ldr	r3, [pc, #180]	; (8006e34 <HAL_ADC_MspInit+0xdc>)
 8006d80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006d82:	4a2c      	ldr	r2, [pc, #176]	; (8006e34 <HAL_ADC_MspInit+0xdc>)
 8006d84:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006d88:	6453      	str	r3, [r2, #68]	; 0x44
 8006d8a:	4b2a      	ldr	r3, [pc, #168]	; (8006e34 <HAL_ADC_MspInit+0xdc>)
 8006d8c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006d8e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006d92:	61bb      	str	r3, [r7, #24]
 8006d94:	69bb      	ldr	r3, [r7, #24]
 8006d96:	2300      	movs	r3, #0
 8006d98:	617b      	str	r3, [r7, #20]
 8006d9a:	4b26      	ldr	r3, [pc, #152]	; (8006e34 <HAL_ADC_MspInit+0xdc>)
 8006d9c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006d9e:	4a25      	ldr	r2, [pc, #148]	; (8006e34 <HAL_ADC_MspInit+0xdc>)
 8006da0:	f043 0302 	orr.w	r3, r3, #2
 8006da4:	6313      	str	r3, [r2, #48]	; 0x30
 8006da6:	4b23      	ldr	r3, [pc, #140]	; (8006e34 <HAL_ADC_MspInit+0xdc>)
 8006da8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006daa:	f003 0302 	and.w	r3, r3, #2
 8006dae:	617b      	str	r3, [r7, #20]
 8006db0:	697b      	ldr	r3, [r7, #20]
 8006db2:	2301      	movs	r3, #1
 8006db4:	61fb      	str	r3, [r7, #28]
 8006db6:	2303      	movs	r3, #3
 8006db8:	623b      	str	r3, [r7, #32]
 8006dba:	2300      	movs	r3, #0
 8006dbc:	627b      	str	r3, [r7, #36]	; 0x24
 8006dbe:	f107 031c 	add.w	r3, r7, #28
 8006dc2:	4619      	mov	r1, r3
 8006dc4:	481c      	ldr	r0, [pc, #112]	; (8006e38 <HAL_ADC_MspInit+0xe0>)
 8006dc6:	f002 f9ef 	bl	80091a8 <HAL_GPIO_Init>
 8006dca:	e02c      	b.n	8006e26 <HAL_ADC_MspInit+0xce>
 8006dcc:	687b      	ldr	r3, [r7, #4]
 8006dce:	681b      	ldr	r3, [r3, #0]
 8006dd0:	4a1a      	ldr	r2, [pc, #104]	; (8006e3c <HAL_ADC_MspInit+0xe4>)
 8006dd2:	4293      	cmp	r3, r2
 8006dd4:	d127      	bne.n	8006e26 <HAL_ADC_MspInit+0xce>
 8006dd6:	2300      	movs	r3, #0
 8006dd8:	613b      	str	r3, [r7, #16]
 8006dda:	4b16      	ldr	r3, [pc, #88]	; (8006e34 <HAL_ADC_MspInit+0xdc>)
 8006ddc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006dde:	4a15      	ldr	r2, [pc, #84]	; (8006e34 <HAL_ADC_MspInit+0xdc>)
 8006de0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006de4:	6453      	str	r3, [r2, #68]	; 0x44
 8006de6:	4b13      	ldr	r3, [pc, #76]	; (8006e34 <HAL_ADC_MspInit+0xdc>)
 8006de8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006dea:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8006dee:	613b      	str	r3, [r7, #16]
 8006df0:	693b      	ldr	r3, [r7, #16]
 8006df2:	2300      	movs	r3, #0
 8006df4:	60fb      	str	r3, [r7, #12]
 8006df6:	4b0f      	ldr	r3, [pc, #60]	; (8006e34 <HAL_ADC_MspInit+0xdc>)
 8006df8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006dfa:	4a0e      	ldr	r2, [pc, #56]	; (8006e34 <HAL_ADC_MspInit+0xdc>)
 8006dfc:	f043 0304 	orr.w	r3, r3, #4
 8006e00:	6313      	str	r3, [r2, #48]	; 0x30
 8006e02:	4b0c      	ldr	r3, [pc, #48]	; (8006e34 <HAL_ADC_MspInit+0xdc>)
 8006e04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e06:	f003 0304 	and.w	r3, r3, #4
 8006e0a:	60fb      	str	r3, [r7, #12]
 8006e0c:	68fb      	ldr	r3, [r7, #12]
 8006e0e:	2308      	movs	r3, #8
 8006e10:	61fb      	str	r3, [r7, #28]
 8006e12:	2303      	movs	r3, #3
 8006e14:	623b      	str	r3, [r7, #32]
 8006e16:	2300      	movs	r3, #0
 8006e18:	627b      	str	r3, [r7, #36]	; 0x24
 8006e1a:	f107 031c 	add.w	r3, r7, #28
 8006e1e:	4619      	mov	r1, r3
 8006e20:	4807      	ldr	r0, [pc, #28]	; (8006e40 <HAL_ADC_MspInit+0xe8>)
 8006e22:	f002 f9c1 	bl	80091a8 <HAL_GPIO_Init>
 8006e26:	bf00      	nop
 8006e28:	3730      	adds	r7, #48	; 0x30
 8006e2a:	46bd      	mov	sp, r7
 8006e2c:	bd80      	pop	{r7, pc}
 8006e2e:	bf00      	nop
 8006e30:	40012000 	.word	0x40012000
 8006e34:	40023800 	.word	0x40023800
 8006e38:	40020400 	.word	0x40020400
 8006e3c:	40012100 	.word	0x40012100
 8006e40:	40020800 	.word	0x40020800

08006e44 <HAL_TIM_Base_MspInit>:
 8006e44:	b580      	push	{r7, lr}
 8006e46:	b090      	sub	sp, #64	; 0x40
 8006e48:	af00      	add	r7, sp, #0
 8006e4a:	6078      	str	r0, [r7, #4]
 8006e4c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006e50:	2200      	movs	r2, #0
 8006e52:	601a      	str	r2, [r3, #0]
 8006e54:	605a      	str	r2, [r3, #4]
 8006e56:	609a      	str	r2, [r3, #8]
 8006e58:	60da      	str	r2, [r3, #12]
 8006e5a:	611a      	str	r2, [r3, #16]
 8006e5c:	687b      	ldr	r3, [r7, #4]
 8006e5e:	681b      	ldr	r3, [r3, #0]
 8006e60:	4a72      	ldr	r2, [pc, #456]	; (800702c <HAL_TIM_Base_MspInit+0x1e8>)
 8006e62:	4293      	cmp	r3, r2
 8006e64:	d10e      	bne.n	8006e84 <HAL_TIM_Base_MspInit+0x40>
 8006e66:	2300      	movs	r3, #0
 8006e68:	62bb      	str	r3, [r7, #40]	; 0x28
 8006e6a:	4b71      	ldr	r3, [pc, #452]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8006e6c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006e6e:	4a70      	ldr	r2, [pc, #448]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8006e70:	f043 0301 	orr.w	r3, r3, #1
 8006e74:	6453      	str	r3, [r2, #68]	; 0x44
 8006e76:	4b6e      	ldr	r3, [pc, #440]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8006e78:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006e7a:	f003 0301 	and.w	r3, r3, #1
 8006e7e:	62bb      	str	r3, [r7, #40]	; 0x28
 8006e80:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006e82:	e0cf      	b.n	8007024 <HAL_TIM_Base_MspInit+0x1e0>
 8006e84:	687b      	ldr	r3, [r7, #4]
 8006e86:	681b      	ldr	r3, [r3, #0]
 8006e88:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006e8c:	d116      	bne.n	8006ebc <HAL_TIM_Base_MspInit+0x78>
 8006e8e:	2300      	movs	r3, #0
 8006e90:	627b      	str	r3, [r7, #36]	; 0x24
 8006e92:	4b67      	ldr	r3, [pc, #412]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8006e94:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006e96:	4a66      	ldr	r2, [pc, #408]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8006e98:	f043 0301 	orr.w	r3, r3, #1
 8006e9c:	6413      	str	r3, [r2, #64]	; 0x40
 8006e9e:	4b64      	ldr	r3, [pc, #400]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8006ea0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006ea2:	f003 0301 	and.w	r3, r3, #1
 8006ea6:	627b      	str	r3, [r7, #36]	; 0x24
 8006ea8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006eaa:	2200      	movs	r2, #0
 8006eac:	2100      	movs	r1, #0
 8006eae:	201c      	movs	r0, #28
 8006eb0:	f001 fb25 	bl	80084fe <HAL_NVIC_SetPriority>
 8006eb4:	201c      	movs	r0, #28
 8006eb6:	f001 fb3e 	bl	8008536 <HAL_NVIC_EnableIRQ>
 8006eba:	e0b3      	b.n	8007024 <HAL_TIM_Base_MspInit+0x1e0>
 8006ebc:	687b      	ldr	r3, [r7, #4]
 8006ebe:	681b      	ldr	r3, [r3, #0]
 8006ec0:	4a5c      	ldr	r2, [pc, #368]	; (8007034 <HAL_TIM_Base_MspInit+0x1f0>)
 8006ec2:	4293      	cmp	r3, r2
 8006ec4:	d10e      	bne.n	8006ee4 <HAL_TIM_Base_MspInit+0xa0>
 8006ec6:	2300      	movs	r3, #0
 8006ec8:	623b      	str	r3, [r7, #32]
 8006eca:	4b59      	ldr	r3, [pc, #356]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8006ecc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006ece:	4a58      	ldr	r2, [pc, #352]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8006ed0:	f043 0302 	orr.w	r3, r3, #2
 8006ed4:	6413      	str	r3, [r2, #64]	; 0x40
 8006ed6:	4b56      	ldr	r3, [pc, #344]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8006ed8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006eda:	f003 0302 	and.w	r3, r3, #2
 8006ede:	623b      	str	r3, [r7, #32]
 8006ee0:	6a3b      	ldr	r3, [r7, #32]
 8006ee2:	e09f      	b.n	8007024 <HAL_TIM_Base_MspInit+0x1e0>
 8006ee4:	687b      	ldr	r3, [r7, #4]
 8006ee6:	681b      	ldr	r3, [r3, #0]
 8006ee8:	4a53      	ldr	r2, [pc, #332]	; (8007038 <HAL_TIM_Base_MspInit+0x1f4>)
 8006eea:	4293      	cmp	r3, r2
 8006eec:	d15f      	bne.n	8006fae <HAL_TIM_Base_MspInit+0x16a>
 8006eee:	2300      	movs	r3, #0
 8006ef0:	61fb      	str	r3, [r7, #28]
 8006ef2:	4b4f      	ldr	r3, [pc, #316]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8006ef4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006ef6:	4a4e      	ldr	r2, [pc, #312]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8006ef8:	f043 0304 	orr.w	r3, r3, #4
 8006efc:	6413      	str	r3, [r2, #64]	; 0x40
 8006efe:	4b4c      	ldr	r3, [pc, #304]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8006f00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006f02:	f003 0304 	and.w	r3, r3, #4
 8006f06:	61fb      	str	r3, [r7, #28]
 8006f08:	69fb      	ldr	r3, [r7, #28]
 8006f0a:	2300      	movs	r3, #0
 8006f0c:	61bb      	str	r3, [r7, #24]
 8006f0e:	4b48      	ldr	r3, [pc, #288]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8006f10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006f12:	4a47      	ldr	r2, [pc, #284]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8006f14:	f043 0302 	orr.w	r3, r3, #2
 8006f18:	6313      	str	r3, [r2, #48]	; 0x30
 8006f1a:	4b45      	ldr	r3, [pc, #276]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8006f1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006f1e:	f003 0302 	and.w	r3, r3, #2
 8006f22:	61bb      	str	r3, [r7, #24]
 8006f24:	69bb      	ldr	r3, [r7, #24]
 8006f26:	f44f 7340 	mov.w	r3, #768	; 0x300
 8006f2a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006f2c:	2302      	movs	r3, #2
 8006f2e:	633b      	str	r3, [r7, #48]	; 0x30
 8006f30:	2300      	movs	r3, #0
 8006f32:	637b      	str	r3, [r7, #52]	; 0x34
 8006f34:	2300      	movs	r3, #0
 8006f36:	63bb      	str	r3, [r7, #56]	; 0x38
 8006f38:	2302      	movs	r3, #2
 8006f3a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006f3c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006f40:	4619      	mov	r1, r3
 8006f42:	483e      	ldr	r0, [pc, #248]	; (800703c <HAL_TIM_Base_MspInit+0x1f8>)
 8006f44:	f002 f930 	bl	80091a8 <HAL_GPIO_Init>
 8006f48:	4b3d      	ldr	r3, [pc, #244]	; (8007040 <HAL_TIM_Base_MspInit+0x1fc>)
 8006f4a:	4a3e      	ldr	r2, [pc, #248]	; (8007044 <HAL_TIM_Base_MspInit+0x200>)
 8006f4c:	601a      	str	r2, [r3, #0]
 8006f4e:	4b3c      	ldr	r3, [pc, #240]	; (8007040 <HAL_TIM_Base_MspInit+0x1fc>)
 8006f50:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8006f54:	605a      	str	r2, [r3, #4]
 8006f56:	4b3a      	ldr	r3, [pc, #232]	; (8007040 <HAL_TIM_Base_MspInit+0x1fc>)
 8006f58:	2200      	movs	r2, #0
 8006f5a:	609a      	str	r2, [r3, #8]
 8006f5c:	4b38      	ldr	r3, [pc, #224]	; (8007040 <HAL_TIM_Base_MspInit+0x1fc>)
 8006f5e:	2200      	movs	r2, #0
 8006f60:	60da      	str	r2, [r3, #12]
 8006f62:	4b37      	ldr	r3, [pc, #220]	; (8007040 <HAL_TIM_Base_MspInit+0x1fc>)
 8006f64:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8006f68:	611a      	str	r2, [r3, #16]
 8006f6a:	4b35      	ldr	r3, [pc, #212]	; (8007040 <HAL_TIM_Base_MspInit+0x1fc>)
 8006f6c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8006f70:	615a      	str	r2, [r3, #20]
 8006f72:	4b33      	ldr	r3, [pc, #204]	; (8007040 <HAL_TIM_Base_MspInit+0x1fc>)
 8006f74:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8006f78:	619a      	str	r2, [r3, #24]
 8006f7a:	4b31      	ldr	r3, [pc, #196]	; (8007040 <HAL_TIM_Base_MspInit+0x1fc>)
 8006f7c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006f80:	61da      	str	r2, [r3, #28]
 8006f82:	4b2f      	ldr	r3, [pc, #188]	; (8007040 <HAL_TIM_Base_MspInit+0x1fc>)
 8006f84:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8006f88:	621a      	str	r2, [r3, #32]
 8006f8a:	4b2d      	ldr	r3, [pc, #180]	; (8007040 <HAL_TIM_Base_MspInit+0x1fc>)
 8006f8c:	2200      	movs	r2, #0
 8006f8e:	625a      	str	r2, [r3, #36]	; 0x24
 8006f90:	482b      	ldr	r0, [pc, #172]	; (8007040 <HAL_TIM_Base_MspInit+0x1fc>)
 8006f92:	f001 faf9 	bl	8008588 <HAL_DMA_Init>
 8006f96:	4603      	mov	r3, r0
 8006f98:	2b00      	cmp	r3, #0
 8006f9a:	d001      	beq.n	8006fa0 <HAL_TIM_Base_MspInit+0x15c>
 8006f9c:	f7ff fdba 	bl	8006b14 <Error_Handler>
 8006fa0:	687b      	ldr	r3, [r7, #4]
 8006fa2:	4a27      	ldr	r2, [pc, #156]	; (8007040 <HAL_TIM_Base_MspInit+0x1fc>)
 8006fa4:	62da      	str	r2, [r3, #44]	; 0x2c
 8006fa6:	4a26      	ldr	r2, [pc, #152]	; (8007040 <HAL_TIM_Base_MspInit+0x1fc>)
 8006fa8:	687b      	ldr	r3, [r7, #4]
 8006faa:	6393      	str	r3, [r2, #56]	; 0x38
 8006fac:	e03a      	b.n	8007024 <HAL_TIM_Base_MspInit+0x1e0>
 8006fae:	687b      	ldr	r3, [r7, #4]
 8006fb0:	681b      	ldr	r3, [r3, #0]
 8006fb2:	4a25      	ldr	r2, [pc, #148]	; (8007048 <HAL_TIM_Base_MspInit+0x204>)
 8006fb4:	4293      	cmp	r3, r2
 8006fb6:	d10e      	bne.n	8006fd6 <HAL_TIM_Base_MspInit+0x192>
 8006fb8:	2300      	movs	r3, #0
 8006fba:	617b      	str	r3, [r7, #20]
 8006fbc:	4b1c      	ldr	r3, [pc, #112]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8006fbe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006fc0:	4a1b      	ldr	r2, [pc, #108]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8006fc2:	f043 0308 	orr.w	r3, r3, #8
 8006fc6:	6413      	str	r3, [r2, #64]	; 0x40
 8006fc8:	4b19      	ldr	r3, [pc, #100]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8006fca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006fcc:	f003 0308 	and.w	r3, r3, #8
 8006fd0:	617b      	str	r3, [r7, #20]
 8006fd2:	697b      	ldr	r3, [r7, #20]
 8006fd4:	e026      	b.n	8007024 <HAL_TIM_Base_MspInit+0x1e0>
 8006fd6:	687b      	ldr	r3, [r7, #4]
 8006fd8:	681b      	ldr	r3, [r3, #0]
 8006fda:	4a1c      	ldr	r2, [pc, #112]	; (800704c <HAL_TIM_Base_MspInit+0x208>)
 8006fdc:	4293      	cmp	r3, r2
 8006fde:	d10e      	bne.n	8006ffe <HAL_TIM_Base_MspInit+0x1ba>
 8006fe0:	2300      	movs	r3, #0
 8006fe2:	613b      	str	r3, [r7, #16]
 8006fe4:	4b12      	ldr	r3, [pc, #72]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8006fe6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006fe8:	4a11      	ldr	r2, [pc, #68]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8006fea:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006fee:	6413      	str	r3, [r2, #64]	; 0x40
 8006ff0:	4b0f      	ldr	r3, [pc, #60]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8006ff2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006ff4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006ff8:	613b      	str	r3, [r7, #16]
 8006ffa:	693b      	ldr	r3, [r7, #16]
 8006ffc:	e012      	b.n	8007024 <HAL_TIM_Base_MspInit+0x1e0>
 8006ffe:	687b      	ldr	r3, [r7, #4]
 8007000:	681b      	ldr	r3, [r3, #0]
 8007002:	4a13      	ldr	r2, [pc, #76]	; (8007050 <HAL_TIM_Base_MspInit+0x20c>)
 8007004:	4293      	cmp	r3, r2
 8007006:	d10d      	bne.n	8007024 <HAL_TIM_Base_MspInit+0x1e0>
 8007008:	2300      	movs	r3, #0
 800700a:	60fb      	str	r3, [r7, #12]
 800700c:	4b08      	ldr	r3, [pc, #32]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 800700e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007010:	4a07      	ldr	r2, [pc, #28]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 8007012:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007016:	6413      	str	r3, [r2, #64]	; 0x40
 8007018:	4b05      	ldr	r3, [pc, #20]	; (8007030 <HAL_TIM_Base_MspInit+0x1ec>)
 800701a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800701c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007020:	60fb      	str	r3, [r7, #12]
 8007022:	68fb      	ldr	r3, [r7, #12]
 8007024:	bf00      	nop
 8007026:	3740      	adds	r7, #64	; 0x40
 8007028:	46bd      	mov	sp, r7
 800702a:	bd80      	pop	{r7, pc}
 800702c:	40010000 	.word	0x40010000
 8007030:	40023800 	.word	0x40023800
 8007034:	40000400 	.word	0x40000400
 8007038:	40000800 	.word	0x40000800
 800703c:	40020400 	.word	0x40020400
 8007040:	20000ae0 	.word	0x20000ae0
 8007044:	400260b8 	.word	0x400260b8
 8007048:	40000c00 	.word	0x40000c00
 800704c:	40001c00 	.word	0x40001c00
 8007050:	40002000 	.word	0x40002000

08007054 <HAL_TIM_Encoder_MspInit>:
 8007054:	b580      	push	{r7, lr}
 8007056:	b08a      	sub	sp, #40	; 0x28
 8007058:	af00      	add	r7, sp, #0
 800705a:	6078      	str	r0, [r7, #4]
 800705c:	f107 0314 	add.w	r3, r7, #20
 8007060:	2200      	movs	r2, #0
 8007062:	601a      	str	r2, [r3, #0]
 8007064:	605a      	str	r2, [r3, #4]
 8007066:	609a      	str	r2, [r3, #8]
 8007068:	60da      	str	r2, [r3, #12]
 800706a:	611a      	str	r2, [r3, #16]
 800706c:	687b      	ldr	r3, [r7, #4]
 800706e:	681b      	ldr	r3, [r3, #0]
 8007070:	4a19      	ldr	r2, [pc, #100]	; (80070d8 <HAL_TIM_Encoder_MspInit+0x84>)
 8007072:	4293      	cmp	r3, r2
 8007074:	d12b      	bne.n	80070ce <HAL_TIM_Encoder_MspInit+0x7a>
 8007076:	2300      	movs	r3, #0
 8007078:	613b      	str	r3, [r7, #16]
 800707a:	4b18      	ldr	r3, [pc, #96]	; (80070dc <HAL_TIM_Encoder_MspInit+0x88>)
 800707c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800707e:	4a17      	ldr	r2, [pc, #92]	; (80070dc <HAL_TIM_Encoder_MspInit+0x88>)
 8007080:	f043 0302 	orr.w	r3, r3, #2
 8007084:	6453      	str	r3, [r2, #68]	; 0x44
 8007086:	4b15      	ldr	r3, [pc, #84]	; (80070dc <HAL_TIM_Encoder_MspInit+0x88>)
 8007088:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800708a:	f003 0302 	and.w	r3, r3, #2
 800708e:	613b      	str	r3, [r7, #16]
 8007090:	693b      	ldr	r3, [r7, #16]
 8007092:	2300      	movs	r3, #0
 8007094:	60fb      	str	r3, [r7, #12]
 8007096:	4b11      	ldr	r3, [pc, #68]	; (80070dc <HAL_TIM_Encoder_MspInit+0x88>)
 8007098:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800709a:	4a10      	ldr	r2, [pc, #64]	; (80070dc <HAL_TIM_Encoder_MspInit+0x88>)
 800709c:	f043 0304 	orr.w	r3, r3, #4
 80070a0:	6313      	str	r3, [r2, #48]	; 0x30
 80070a2:	4b0e      	ldr	r3, [pc, #56]	; (80070dc <HAL_TIM_Encoder_MspInit+0x88>)
 80070a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80070a6:	f003 0304 	and.w	r3, r3, #4
 80070aa:	60fb      	str	r3, [r7, #12]
 80070ac:	68fb      	ldr	r3, [r7, #12]
 80070ae:	23c0      	movs	r3, #192	; 0xc0
 80070b0:	617b      	str	r3, [r7, #20]
 80070b2:	2302      	movs	r3, #2
 80070b4:	61bb      	str	r3, [r7, #24]
 80070b6:	2300      	movs	r3, #0
 80070b8:	61fb      	str	r3, [r7, #28]
 80070ba:	2300      	movs	r3, #0
 80070bc:	623b      	str	r3, [r7, #32]
 80070be:	2303      	movs	r3, #3
 80070c0:	627b      	str	r3, [r7, #36]	; 0x24
 80070c2:	f107 0314 	add.w	r3, r7, #20
 80070c6:	4619      	mov	r1, r3
 80070c8:	4805      	ldr	r0, [pc, #20]	; (80070e0 <HAL_TIM_Encoder_MspInit+0x8c>)
 80070ca:	f002 f86d 	bl	80091a8 <HAL_GPIO_Init>
 80070ce:	bf00      	nop
 80070d0:	3728      	adds	r7, #40	; 0x28
 80070d2:	46bd      	mov	sp, r7
 80070d4:	bd80      	pop	{r7, pc}
 80070d6:	bf00      	nop
 80070d8:	40010400 	.word	0x40010400
 80070dc:	40023800 	.word	0x40023800
 80070e0:	40020800 	.word	0x40020800

080070e4 <HAL_TIM_MspPostInit>:
 80070e4:	b580      	push	{r7, lr}
 80070e6:	b08a      	sub	sp, #40	; 0x28
 80070e8:	af00      	add	r7, sp, #0
 80070ea:	6078      	str	r0, [r7, #4]
 80070ec:	f107 0314 	add.w	r3, r7, #20
 80070f0:	2200      	movs	r2, #0
 80070f2:	601a      	str	r2, [r3, #0]
 80070f4:	605a      	str	r2, [r3, #4]
 80070f6:	609a      	str	r2, [r3, #8]
 80070f8:	60da      	str	r2, [r3, #12]
 80070fa:	611a      	str	r2, [r3, #16]
 80070fc:	687b      	ldr	r3, [r7, #4]
 80070fe:	681b      	ldr	r3, [r3, #0]
 8007100:	4a37      	ldr	r2, [pc, #220]	; (80071e0 <HAL_TIM_MspPostInit+0xfc>)
 8007102:	4293      	cmp	r3, r2
 8007104:	d11f      	bne.n	8007146 <HAL_TIM_MspPostInit+0x62>
 8007106:	2300      	movs	r3, #0
 8007108:	613b      	str	r3, [r7, #16]
 800710a:	4b36      	ldr	r3, [pc, #216]	; (80071e4 <HAL_TIM_MspPostInit+0x100>)
 800710c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800710e:	4a35      	ldr	r2, [pc, #212]	; (80071e4 <HAL_TIM_MspPostInit+0x100>)
 8007110:	f043 0301 	orr.w	r3, r3, #1
 8007114:	6313      	str	r3, [r2, #48]	; 0x30
 8007116:	4b33      	ldr	r3, [pc, #204]	; (80071e4 <HAL_TIM_MspPostInit+0x100>)
 8007118:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800711a:	f003 0301 	and.w	r3, r3, #1
 800711e:	613b      	str	r3, [r7, #16]
 8007120:	693b      	ldr	r3, [r7, #16]
 8007122:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8007126:	617b      	str	r3, [r7, #20]
 8007128:	2302      	movs	r3, #2
 800712a:	61bb      	str	r3, [r7, #24]
 800712c:	2300      	movs	r3, #0
 800712e:	61fb      	str	r3, [r7, #28]
 8007130:	2300      	movs	r3, #0
 8007132:	623b      	str	r3, [r7, #32]
 8007134:	2301      	movs	r3, #1
 8007136:	627b      	str	r3, [r7, #36]	; 0x24
 8007138:	f107 0314 	add.w	r3, r7, #20
 800713c:	4619      	mov	r1, r3
 800713e:	482a      	ldr	r0, [pc, #168]	; (80071e8 <HAL_TIM_MspPostInit+0x104>)
 8007140:	f002 f832 	bl	80091a8 <HAL_GPIO_Init>
 8007144:	e047      	b.n	80071d6 <HAL_TIM_MspPostInit+0xf2>
 8007146:	687b      	ldr	r3, [r7, #4]
 8007148:	681b      	ldr	r3, [r3, #0]
 800714a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800714e:	d11f      	bne.n	8007190 <HAL_TIM_MspPostInit+0xac>
 8007150:	2300      	movs	r3, #0
 8007152:	60fb      	str	r3, [r7, #12]
 8007154:	4b23      	ldr	r3, [pc, #140]	; (80071e4 <HAL_TIM_MspPostInit+0x100>)
 8007156:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007158:	4a22      	ldr	r2, [pc, #136]	; (80071e4 <HAL_TIM_MspPostInit+0x100>)
 800715a:	f043 0301 	orr.w	r3, r3, #1
 800715e:	6313      	str	r3, [r2, #48]	; 0x30
 8007160:	4b20      	ldr	r3, [pc, #128]	; (80071e4 <HAL_TIM_MspPostInit+0x100>)
 8007162:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007164:	f003 0301 	and.w	r3, r3, #1
 8007168:	60fb      	str	r3, [r7, #12]
 800716a:	68fb      	ldr	r3, [r7, #12]
 800716c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8007170:	617b      	str	r3, [r7, #20]
 8007172:	2302      	movs	r3, #2
 8007174:	61bb      	str	r3, [r7, #24]
 8007176:	2300      	movs	r3, #0
 8007178:	61fb      	str	r3, [r7, #28]
 800717a:	2300      	movs	r3, #0
 800717c:	623b      	str	r3, [r7, #32]
 800717e:	2301      	movs	r3, #1
 8007180:	627b      	str	r3, [r7, #36]	; 0x24
 8007182:	f107 0314 	add.w	r3, r7, #20
 8007186:	4619      	mov	r1, r3
 8007188:	4817      	ldr	r0, [pc, #92]	; (80071e8 <HAL_TIM_MspPostInit+0x104>)
 800718a:	f002 f80d 	bl	80091a8 <HAL_GPIO_Init>
 800718e:	e022      	b.n	80071d6 <HAL_TIM_MspPostInit+0xf2>
 8007190:	687b      	ldr	r3, [r7, #4]
 8007192:	681b      	ldr	r3, [r3, #0]
 8007194:	4a15      	ldr	r2, [pc, #84]	; (80071ec <HAL_TIM_MspPostInit+0x108>)
 8007196:	4293      	cmp	r3, r2
 8007198:	d11d      	bne.n	80071d6 <HAL_TIM_MspPostInit+0xf2>
 800719a:	2300      	movs	r3, #0
 800719c:	60bb      	str	r3, [r7, #8]
 800719e:	4b11      	ldr	r3, [pc, #68]	; (80071e4 <HAL_TIM_MspPostInit+0x100>)
 80071a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80071a2:	4a10      	ldr	r2, [pc, #64]	; (80071e4 <HAL_TIM_MspPostInit+0x100>)
 80071a4:	f043 0301 	orr.w	r3, r3, #1
 80071a8:	6313      	str	r3, [r2, #48]	; 0x30
 80071aa:	4b0e      	ldr	r3, [pc, #56]	; (80071e4 <HAL_TIM_MspPostInit+0x100>)
 80071ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80071ae:	f003 0301 	and.w	r3, r3, #1
 80071b2:	60bb      	str	r3, [r7, #8]
 80071b4:	68bb      	ldr	r3, [r7, #8]
 80071b6:	23c0      	movs	r3, #192	; 0xc0
 80071b8:	617b      	str	r3, [r7, #20]
 80071ba:	2302      	movs	r3, #2
 80071bc:	61bb      	str	r3, [r7, #24]
 80071be:	2300      	movs	r3, #0
 80071c0:	61fb      	str	r3, [r7, #28]
 80071c2:	2300      	movs	r3, #0
 80071c4:	623b      	str	r3, [r7, #32]
 80071c6:	2302      	movs	r3, #2
 80071c8:	627b      	str	r3, [r7, #36]	; 0x24
 80071ca:	f107 0314 	add.w	r3, r7, #20
 80071ce:	4619      	mov	r1, r3
 80071d0:	4805      	ldr	r0, [pc, #20]	; (80071e8 <HAL_TIM_MspPostInit+0x104>)
 80071d2:	f001 ffe9 	bl	80091a8 <HAL_GPIO_Init>
 80071d6:	bf00      	nop
 80071d8:	3728      	adds	r7, #40	; 0x28
 80071da:	46bd      	mov	sp, r7
 80071dc:	bd80      	pop	{r7, pc}
 80071de:	bf00      	nop
 80071e0:	40010000 	.word	0x40010000
 80071e4:	40023800 	.word	0x40023800
 80071e8:	40020000 	.word	0x40020000
 80071ec:	40000400 	.word	0x40000400

080071f0 <HAL_UART_MspInit>:
 80071f0:	b580      	push	{r7, lr}
 80071f2:	b090      	sub	sp, #64	; 0x40
 80071f4:	af00      	add	r7, sp, #0
 80071f6:	6078      	str	r0, [r7, #4]
 80071f8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80071fc:	2200      	movs	r2, #0
 80071fe:	601a      	str	r2, [r3, #0]
 8007200:	605a      	str	r2, [r3, #4]
 8007202:	609a      	str	r2, [r3, #8]
 8007204:	60da      	str	r2, [r3, #12]
 8007206:	611a      	str	r2, [r3, #16]
 8007208:	687b      	ldr	r3, [r7, #4]
 800720a:	681b      	ldr	r3, [r3, #0]
 800720c:	4a7c      	ldr	r2, [pc, #496]	; (8007400 <HAL_UART_MspInit+0x210>)
 800720e:	4293      	cmp	r3, r2
 8007210:	d14b      	bne.n	80072aa <HAL_UART_MspInit+0xba>
 8007212:	2300      	movs	r3, #0
 8007214:	62bb      	str	r3, [r7, #40]	; 0x28
 8007216:	4b7b      	ldr	r3, [pc, #492]	; (8007404 <HAL_UART_MspInit+0x214>)
 8007218:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800721a:	4a7a      	ldr	r2, [pc, #488]	; (8007404 <HAL_UART_MspInit+0x214>)
 800721c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8007220:	6413      	str	r3, [r2, #64]	; 0x40
 8007222:	4b78      	ldr	r3, [pc, #480]	; (8007404 <HAL_UART_MspInit+0x214>)
 8007224:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007226:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800722a:	62bb      	str	r3, [r7, #40]	; 0x28
 800722c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800722e:	2300      	movs	r3, #0
 8007230:	627b      	str	r3, [r7, #36]	; 0x24
 8007232:	4b74      	ldr	r3, [pc, #464]	; (8007404 <HAL_UART_MspInit+0x214>)
 8007234:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007236:	4a73      	ldr	r2, [pc, #460]	; (8007404 <HAL_UART_MspInit+0x214>)
 8007238:	f043 0304 	orr.w	r3, r3, #4
 800723c:	6313      	str	r3, [r2, #48]	; 0x30
 800723e:	4b71      	ldr	r3, [pc, #452]	; (8007404 <HAL_UART_MspInit+0x214>)
 8007240:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007242:	f003 0304 	and.w	r3, r3, #4
 8007246:	627b      	str	r3, [r7, #36]	; 0x24
 8007248:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800724a:	2300      	movs	r3, #0
 800724c:	623b      	str	r3, [r7, #32]
 800724e:	4b6d      	ldr	r3, [pc, #436]	; (8007404 <HAL_UART_MspInit+0x214>)
 8007250:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007252:	4a6c      	ldr	r2, [pc, #432]	; (8007404 <HAL_UART_MspInit+0x214>)
 8007254:	f043 0308 	orr.w	r3, r3, #8
 8007258:	6313      	str	r3, [r2, #48]	; 0x30
 800725a:	4b6a      	ldr	r3, [pc, #424]	; (8007404 <HAL_UART_MspInit+0x214>)
 800725c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800725e:	f003 0308 	and.w	r3, r3, #8
 8007262:	623b      	str	r3, [r7, #32]
 8007264:	6a3b      	ldr	r3, [r7, #32]
 8007266:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800726a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800726c:	2302      	movs	r3, #2
 800726e:	633b      	str	r3, [r7, #48]	; 0x30
 8007270:	2300      	movs	r3, #0
 8007272:	637b      	str	r3, [r7, #52]	; 0x34
 8007274:	2303      	movs	r3, #3
 8007276:	63bb      	str	r3, [r7, #56]	; 0x38
 8007278:	2308      	movs	r3, #8
 800727a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800727c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8007280:	4619      	mov	r1, r3
 8007282:	4861      	ldr	r0, [pc, #388]	; (8007408 <HAL_UART_MspInit+0x218>)
 8007284:	f001 ff90 	bl	80091a8 <HAL_GPIO_Init>
 8007288:	2304      	movs	r3, #4
 800728a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800728c:	2302      	movs	r3, #2
 800728e:	633b      	str	r3, [r7, #48]	; 0x30
 8007290:	2300      	movs	r3, #0
 8007292:	637b      	str	r3, [r7, #52]	; 0x34
 8007294:	2303      	movs	r3, #3
 8007296:	63bb      	str	r3, [r7, #56]	; 0x38
 8007298:	2308      	movs	r3, #8
 800729a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800729c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80072a0:	4619      	mov	r1, r3
 80072a2:	485a      	ldr	r0, [pc, #360]	; (800740c <HAL_UART_MspInit+0x21c>)
 80072a4:	f001 ff80 	bl	80091a8 <HAL_GPIO_Init>
 80072a8:	e0a6      	b.n	80073f8 <HAL_UART_MspInit+0x208>
 80072aa:	687b      	ldr	r3, [r7, #4]
 80072ac:	681b      	ldr	r3, [r3, #0]
 80072ae:	4a58      	ldr	r2, [pc, #352]	; (8007410 <HAL_UART_MspInit+0x220>)
 80072b0:	4293      	cmp	r3, r2
 80072b2:	d135      	bne.n	8007320 <HAL_UART_MspInit+0x130>
 80072b4:	2300      	movs	r3, #0
 80072b6:	61fb      	str	r3, [r7, #28]
 80072b8:	4b52      	ldr	r3, [pc, #328]	; (8007404 <HAL_UART_MspInit+0x214>)
 80072ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80072bc:	4a51      	ldr	r2, [pc, #324]	; (8007404 <HAL_UART_MspInit+0x214>)
 80072be:	f043 0310 	orr.w	r3, r3, #16
 80072c2:	6453      	str	r3, [r2, #68]	; 0x44
 80072c4:	4b4f      	ldr	r3, [pc, #316]	; (8007404 <HAL_UART_MspInit+0x214>)
 80072c6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80072c8:	f003 0310 	and.w	r3, r3, #16
 80072cc:	61fb      	str	r3, [r7, #28]
 80072ce:	69fb      	ldr	r3, [r7, #28]
 80072d0:	2300      	movs	r3, #0
 80072d2:	61bb      	str	r3, [r7, #24]
 80072d4:	4b4b      	ldr	r3, [pc, #300]	; (8007404 <HAL_UART_MspInit+0x214>)
 80072d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80072d8:	4a4a      	ldr	r2, [pc, #296]	; (8007404 <HAL_UART_MspInit+0x214>)
 80072da:	f043 0301 	orr.w	r3, r3, #1
 80072de:	6313      	str	r3, [r2, #48]	; 0x30
 80072e0:	4b48      	ldr	r3, [pc, #288]	; (8007404 <HAL_UART_MspInit+0x214>)
 80072e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80072e4:	f003 0301 	and.w	r3, r3, #1
 80072e8:	61bb      	str	r3, [r7, #24]
 80072ea:	69bb      	ldr	r3, [r7, #24]
 80072ec:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 80072f0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80072f2:	2302      	movs	r3, #2
 80072f4:	633b      	str	r3, [r7, #48]	; 0x30
 80072f6:	2300      	movs	r3, #0
 80072f8:	637b      	str	r3, [r7, #52]	; 0x34
 80072fa:	2303      	movs	r3, #3
 80072fc:	63bb      	str	r3, [r7, #56]	; 0x38
 80072fe:	2307      	movs	r3, #7
 8007300:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007302:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8007306:	4619      	mov	r1, r3
 8007308:	4842      	ldr	r0, [pc, #264]	; (8007414 <HAL_UART_MspInit+0x224>)
 800730a:	f001 ff4d 	bl	80091a8 <HAL_GPIO_Init>
 800730e:	2200      	movs	r2, #0
 8007310:	2100      	movs	r1, #0
 8007312:	2025      	movs	r0, #37	; 0x25
 8007314:	f001 f8f3 	bl	80084fe <HAL_NVIC_SetPriority>
 8007318:	2025      	movs	r0, #37	; 0x25
 800731a:	f001 f90c 	bl	8008536 <HAL_NVIC_EnableIRQ>
 800731e:	e06b      	b.n	80073f8 <HAL_UART_MspInit+0x208>
 8007320:	687b      	ldr	r3, [r7, #4]
 8007322:	681b      	ldr	r3, [r3, #0]
 8007324:	4a3c      	ldr	r2, [pc, #240]	; (8007418 <HAL_UART_MspInit+0x228>)
 8007326:	4293      	cmp	r3, r2
 8007328:	d12c      	bne.n	8007384 <HAL_UART_MspInit+0x194>
 800732a:	2300      	movs	r3, #0
 800732c:	617b      	str	r3, [r7, #20]
 800732e:	4b35      	ldr	r3, [pc, #212]	; (8007404 <HAL_UART_MspInit+0x214>)
 8007330:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007332:	4a34      	ldr	r2, [pc, #208]	; (8007404 <HAL_UART_MspInit+0x214>)
 8007334:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007338:	6413      	str	r3, [r2, #64]	; 0x40
 800733a:	4b32      	ldr	r3, [pc, #200]	; (8007404 <HAL_UART_MspInit+0x214>)
 800733c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800733e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007342:	617b      	str	r3, [r7, #20]
 8007344:	697b      	ldr	r3, [r7, #20]
 8007346:	2300      	movs	r3, #0
 8007348:	613b      	str	r3, [r7, #16]
 800734a:	4b2e      	ldr	r3, [pc, #184]	; (8007404 <HAL_UART_MspInit+0x214>)
 800734c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800734e:	4a2d      	ldr	r2, [pc, #180]	; (8007404 <HAL_UART_MspInit+0x214>)
 8007350:	f043 0301 	orr.w	r3, r3, #1
 8007354:	6313      	str	r3, [r2, #48]	; 0x30
 8007356:	4b2b      	ldr	r3, [pc, #172]	; (8007404 <HAL_UART_MspInit+0x214>)
 8007358:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800735a:	f003 0301 	and.w	r3, r3, #1
 800735e:	613b      	str	r3, [r7, #16]
 8007360:	693b      	ldr	r3, [r7, #16]
 8007362:	230c      	movs	r3, #12
 8007364:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007366:	2302      	movs	r3, #2
 8007368:	633b      	str	r3, [r7, #48]	; 0x30
 800736a:	2300      	movs	r3, #0
 800736c:	637b      	str	r3, [r7, #52]	; 0x34
 800736e:	2303      	movs	r3, #3
 8007370:	63bb      	str	r3, [r7, #56]	; 0x38
 8007372:	2307      	movs	r3, #7
 8007374:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007376:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800737a:	4619      	mov	r1, r3
 800737c:	4825      	ldr	r0, [pc, #148]	; (8007414 <HAL_UART_MspInit+0x224>)
 800737e:	f001 ff13 	bl	80091a8 <HAL_GPIO_Init>
 8007382:	e039      	b.n	80073f8 <HAL_UART_MspInit+0x208>
 8007384:	687b      	ldr	r3, [r7, #4]
 8007386:	681b      	ldr	r3, [r3, #0]
 8007388:	4a24      	ldr	r2, [pc, #144]	; (800741c <HAL_UART_MspInit+0x22c>)
 800738a:	4293      	cmp	r3, r2
 800738c:	d134      	bne.n	80073f8 <HAL_UART_MspInit+0x208>
 800738e:	2300      	movs	r3, #0
 8007390:	60fb      	str	r3, [r7, #12]
 8007392:	4b1c      	ldr	r3, [pc, #112]	; (8007404 <HAL_UART_MspInit+0x214>)
 8007394:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007396:	4a1b      	ldr	r2, [pc, #108]	; (8007404 <HAL_UART_MspInit+0x214>)
 8007398:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800739c:	6413      	str	r3, [r2, #64]	; 0x40
 800739e:	4b19      	ldr	r3, [pc, #100]	; (8007404 <HAL_UART_MspInit+0x214>)
 80073a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80073a2:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80073a6:	60fb      	str	r3, [r7, #12]
 80073a8:	68fb      	ldr	r3, [r7, #12]
 80073aa:	2300      	movs	r3, #0
 80073ac:	60bb      	str	r3, [r7, #8]
 80073ae:	4b15      	ldr	r3, [pc, #84]	; (8007404 <HAL_UART_MspInit+0x214>)
 80073b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80073b2:	4a14      	ldr	r2, [pc, #80]	; (8007404 <HAL_UART_MspInit+0x214>)
 80073b4:	f043 0304 	orr.w	r3, r3, #4
 80073b8:	6313      	str	r3, [r2, #48]	; 0x30
 80073ba:	4b12      	ldr	r3, [pc, #72]	; (8007404 <HAL_UART_MspInit+0x214>)
 80073bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80073be:	f003 0304 	and.w	r3, r3, #4
 80073c2:	60bb      	str	r3, [r7, #8]
 80073c4:	68bb      	ldr	r3, [r7, #8]
 80073c6:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 80073ca:	62fb      	str	r3, [r7, #44]	; 0x2c
 80073cc:	2302      	movs	r3, #2
 80073ce:	633b      	str	r3, [r7, #48]	; 0x30
 80073d0:	2300      	movs	r3, #0
 80073d2:	637b      	str	r3, [r7, #52]	; 0x34
 80073d4:	2303      	movs	r3, #3
 80073d6:	63bb      	str	r3, [r7, #56]	; 0x38
 80073d8:	2307      	movs	r3, #7
 80073da:	63fb      	str	r3, [r7, #60]	; 0x3c
 80073dc:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80073e0:	4619      	mov	r1, r3
 80073e2:	4809      	ldr	r0, [pc, #36]	; (8007408 <HAL_UART_MspInit+0x218>)
 80073e4:	f001 fee0 	bl	80091a8 <HAL_GPIO_Init>
 80073e8:	2200      	movs	r2, #0
 80073ea:	2100      	movs	r1, #0
 80073ec:	2027      	movs	r0, #39	; 0x27
 80073ee:	f001 f886 	bl	80084fe <HAL_NVIC_SetPriority>
 80073f2:	2027      	movs	r0, #39	; 0x27
 80073f4:	f001 f89f 	bl	8008536 <HAL_NVIC_EnableIRQ>
 80073f8:	bf00      	nop
 80073fa:	3740      	adds	r7, #64	; 0x40
 80073fc:	46bd      	mov	sp, r7
 80073fe:	bd80      	pop	{r7, pc}
 8007400:	40005000 	.word	0x40005000
 8007404:	40023800 	.word	0x40023800
 8007408:	40020800 	.word	0x40020800
 800740c:	40020c00 	.word	0x40020c00
 8007410:	40011000 	.word	0x40011000
 8007414:	40020000 	.word	0x40020000
 8007418:	40004400 	.word	0x40004400
 800741c:	40004800 	.word	0x40004800

08007420 <NMI_Handler>:
 8007420:	b480      	push	{r7}
 8007422:	af00      	add	r7, sp, #0
 8007424:	e7fe      	b.n	8007424 <NMI_Handler+0x4>

08007426 <HardFault_Handler>:
 8007426:	b480      	push	{r7}
 8007428:	af00      	add	r7, sp, #0
 800742a:	e7fe      	b.n	800742a <HardFault_Handler+0x4>

0800742c <MemManage_Handler>:
 800742c:	b480      	push	{r7}
 800742e:	af00      	add	r7, sp, #0
 8007430:	e7fe      	b.n	8007430 <MemManage_Handler+0x4>

08007432 <BusFault_Handler>:
 8007432:	b480      	push	{r7}
 8007434:	af00      	add	r7, sp, #0
 8007436:	e7fe      	b.n	8007436 <BusFault_Handler+0x4>

08007438 <UsageFault_Handler>:
 8007438:	b480      	push	{r7}
 800743a:	af00      	add	r7, sp, #0
 800743c:	e7fe      	b.n	800743c <UsageFault_Handler+0x4>

0800743e <SVC_Handler>:
 800743e:	b480      	push	{r7}
 8007440:	af00      	add	r7, sp, #0
 8007442:	bf00      	nop
 8007444:	46bd      	mov	sp, r7
 8007446:	f85d 7b04 	ldr.w	r7, [sp], #4
 800744a:	4770      	bx	lr

0800744c <DebugMon_Handler>:
 800744c:	b480      	push	{r7}
 800744e:	af00      	add	r7, sp, #0
 8007450:	bf00      	nop
 8007452:	46bd      	mov	sp, r7
 8007454:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007458:	4770      	bx	lr

0800745a <PendSV_Handler>:
 800745a:	b480      	push	{r7}
 800745c:	af00      	add	r7, sp, #0
 800745e:	bf00      	nop
 8007460:	46bd      	mov	sp, r7
 8007462:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007466:	4770      	bx	lr

08007468 <SysTick_Handler>:
 8007468:	b580      	push	{r7, lr}
 800746a:	af00      	add	r7, sp, #0
 800746c:	f000 f98e 	bl	800778c <HAL_IncTick>
 8007470:	bf00      	nop
 8007472:	bd80      	pop	{r7, pc}

08007474 <EXTI4_IRQHandler>:
 8007474:	b580      	push	{r7, lr}
 8007476:	af00      	add	r7, sp, #0
 8007478:	2010      	movs	r0, #16
 800747a:	f002 f875 	bl	8009568 <HAL_GPIO_EXTI_IRQHandler>
 800747e:	bf00      	nop
 8007480:	bd80      	pop	{r7, pc}
	...

08007484 <TIM2_IRQHandler>:
 8007484:	b580      	push	{r7, lr}
 8007486:	af00      	add	r7, sp, #0
 8007488:	4802      	ldr	r0, [pc, #8]	; (8007494 <TIM2_IRQHandler+0x10>)
 800748a:	f003 fbcf 	bl	800ac2c <HAL_TIM_IRQHandler>
 800748e:	bf00      	nop
 8007490:	bd80      	pop	{r7, pc}
 8007492:	bf00      	nop
 8007494:	200008e8 	.word	0x200008e8

08007498 <USART1_IRQHandler>:
 8007498:	b580      	push	{r7, lr}
 800749a:	af00      	add	r7, sp, #0
 800749c:	4802      	ldr	r0, [pc, #8]	; (80074a8 <USART1_IRQHandler+0x10>)
 800749e:	f004 fee7 	bl	800c270 <HAL_UART_IRQHandler>
 80074a2:	bf00      	nop
 80074a4:	bd80      	pop	{r7, pc}
 80074a6:	bf00      	nop
 80074a8:	20000b84 	.word	0x20000b84

080074ac <USART3_IRQHandler>:
 80074ac:	b580      	push	{r7, lr}
 80074ae:	af00      	add	r7, sp, #0
 80074b0:	4802      	ldr	r0, [pc, #8]	; (80074bc <USART3_IRQHandler+0x10>)
 80074b2:	f004 fedd 	bl	800c270 <HAL_UART_IRQHandler>
 80074b6:	bf00      	nop
 80074b8:	bd80      	pop	{r7, pc}
 80074ba:	bf00      	nop
 80074bc:	20000c0c 	.word	0x20000c0c

080074c0 <EXTI15_10_IRQHandler>:
 80074c0:	b580      	push	{r7, lr}
 80074c2:	af00      	add	r7, sp, #0
 80074c4:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 80074c8:	f002 f84e 	bl	8009568 <HAL_GPIO_EXTI_IRQHandler>
 80074cc:	bf00      	nop
 80074ce:	bd80      	pop	{r7, pc}

080074d0 <DMA1_Stream7_IRQHandler>:
 80074d0:	b580      	push	{r7, lr}
 80074d2:	af00      	add	r7, sp, #0
 80074d4:	4802      	ldr	r0, [pc, #8]	; (80074e0 <DMA1_Stream7_IRQHandler+0x10>)
 80074d6:	f001 f9ef 	bl	80088b8 <HAL_DMA_IRQHandler>
 80074da:	bf00      	nop
 80074dc:	bd80      	pop	{r7, pc}
 80074de:	bf00      	nop
 80074e0:	20000ae0 	.word	0x20000ae0

080074e4 <_getpid>:
 80074e4:	b480      	push	{r7}
 80074e6:	af00      	add	r7, sp, #0
 80074e8:	2301      	movs	r3, #1
 80074ea:	4618      	mov	r0, r3
 80074ec:	46bd      	mov	sp, r7
 80074ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074f2:	4770      	bx	lr

080074f4 <_kill>:
 80074f4:	b580      	push	{r7, lr}
 80074f6:	b082      	sub	sp, #8
 80074f8:	af00      	add	r7, sp, #0
 80074fa:	6078      	str	r0, [r7, #4]
 80074fc:	6039      	str	r1, [r7, #0]
 80074fe:	f005 fe1f 	bl	800d140 <__errno>
 8007502:	4603      	mov	r3, r0
 8007504:	2216      	movs	r2, #22
 8007506:	601a      	str	r2, [r3, #0]
 8007508:	f04f 33ff 	mov.w	r3, #4294967295
 800750c:	4618      	mov	r0, r3
 800750e:	3708      	adds	r7, #8
 8007510:	46bd      	mov	sp, r7
 8007512:	bd80      	pop	{r7, pc}

08007514 <_exit>:
 8007514:	b580      	push	{r7, lr}
 8007516:	b082      	sub	sp, #8
 8007518:	af00      	add	r7, sp, #0
 800751a:	6078      	str	r0, [r7, #4]
 800751c:	f04f 31ff 	mov.w	r1, #4294967295
 8007520:	6878      	ldr	r0, [r7, #4]
 8007522:	f7ff ffe7 	bl	80074f4 <_kill>
 8007526:	e7fe      	b.n	8007526 <_exit+0x12>

08007528 <_read>:
 8007528:	b580      	push	{r7, lr}
 800752a:	b086      	sub	sp, #24
 800752c:	af00      	add	r7, sp, #0
 800752e:	60f8      	str	r0, [r7, #12]
 8007530:	60b9      	str	r1, [r7, #8]
 8007532:	607a      	str	r2, [r7, #4]
 8007534:	2300      	movs	r3, #0
 8007536:	617b      	str	r3, [r7, #20]
 8007538:	e00a      	b.n	8007550 <_read+0x28>
 800753a:	f3af 8000 	nop.w
 800753e:	4601      	mov	r1, r0
 8007540:	68bb      	ldr	r3, [r7, #8]
 8007542:	1c5a      	adds	r2, r3, #1
 8007544:	60ba      	str	r2, [r7, #8]
 8007546:	b2ca      	uxtb	r2, r1
 8007548:	701a      	strb	r2, [r3, #0]
 800754a:	697b      	ldr	r3, [r7, #20]
 800754c:	3301      	adds	r3, #1
 800754e:	617b      	str	r3, [r7, #20]
 8007550:	697a      	ldr	r2, [r7, #20]
 8007552:	687b      	ldr	r3, [r7, #4]
 8007554:	429a      	cmp	r2, r3
 8007556:	dbf0      	blt.n	800753a <_read+0x12>
 8007558:	687b      	ldr	r3, [r7, #4]
 800755a:	4618      	mov	r0, r3
 800755c:	3718      	adds	r7, #24
 800755e:	46bd      	mov	sp, r7
 8007560:	bd80      	pop	{r7, pc}

08007562 <_write>:
 8007562:	b580      	push	{r7, lr}
 8007564:	b086      	sub	sp, #24
 8007566:	af00      	add	r7, sp, #0
 8007568:	60f8      	str	r0, [r7, #12]
 800756a:	60b9      	str	r1, [r7, #8]
 800756c:	607a      	str	r2, [r7, #4]
 800756e:	2300      	movs	r3, #0
 8007570:	617b      	str	r3, [r7, #20]
 8007572:	e009      	b.n	8007588 <_write+0x26>
 8007574:	68bb      	ldr	r3, [r7, #8]
 8007576:	1c5a      	adds	r2, r3, #1
 8007578:	60ba      	str	r2, [r7, #8]
 800757a:	781b      	ldrb	r3, [r3, #0]
 800757c:	4618      	mov	r0, r3
 800757e:	f3af 8000 	nop.w
 8007582:	697b      	ldr	r3, [r7, #20]
 8007584:	3301      	adds	r3, #1
 8007586:	617b      	str	r3, [r7, #20]
 8007588:	697a      	ldr	r2, [r7, #20]
 800758a:	687b      	ldr	r3, [r7, #4]
 800758c:	429a      	cmp	r2, r3
 800758e:	dbf1      	blt.n	8007574 <_write+0x12>
 8007590:	687b      	ldr	r3, [r7, #4]
 8007592:	4618      	mov	r0, r3
 8007594:	3718      	adds	r7, #24
 8007596:	46bd      	mov	sp, r7
 8007598:	bd80      	pop	{r7, pc}

0800759a <_close>:
 800759a:	b480      	push	{r7}
 800759c:	b083      	sub	sp, #12
 800759e:	af00      	add	r7, sp, #0
 80075a0:	6078      	str	r0, [r7, #4]
 80075a2:	f04f 33ff 	mov.w	r3, #4294967295
 80075a6:	4618      	mov	r0, r3
 80075a8:	370c      	adds	r7, #12
 80075aa:	46bd      	mov	sp, r7
 80075ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075b0:	4770      	bx	lr

080075b2 <_fstat>:
 80075b2:	b480      	push	{r7}
 80075b4:	b083      	sub	sp, #12
 80075b6:	af00      	add	r7, sp, #0
 80075b8:	6078      	str	r0, [r7, #4]
 80075ba:	6039      	str	r1, [r7, #0]
 80075bc:	683b      	ldr	r3, [r7, #0]
 80075be:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80075c2:	605a      	str	r2, [r3, #4]
 80075c4:	2300      	movs	r3, #0
 80075c6:	4618      	mov	r0, r3
 80075c8:	370c      	adds	r7, #12
 80075ca:	46bd      	mov	sp, r7
 80075cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075d0:	4770      	bx	lr

080075d2 <_isatty>:
 80075d2:	b480      	push	{r7}
 80075d4:	b083      	sub	sp, #12
 80075d6:	af00      	add	r7, sp, #0
 80075d8:	6078      	str	r0, [r7, #4]
 80075da:	2301      	movs	r3, #1
 80075dc:	4618      	mov	r0, r3
 80075de:	370c      	adds	r7, #12
 80075e0:	46bd      	mov	sp, r7
 80075e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075e6:	4770      	bx	lr

080075e8 <_lseek>:
 80075e8:	b480      	push	{r7}
 80075ea:	b085      	sub	sp, #20
 80075ec:	af00      	add	r7, sp, #0
 80075ee:	60f8      	str	r0, [r7, #12]
 80075f0:	60b9      	str	r1, [r7, #8]
 80075f2:	607a      	str	r2, [r7, #4]
 80075f4:	2300      	movs	r3, #0
 80075f6:	4618      	mov	r0, r3
 80075f8:	3714      	adds	r7, #20
 80075fa:	46bd      	mov	sp, r7
 80075fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007600:	4770      	bx	lr
	...

08007604 <_sbrk>:
 8007604:	b580      	push	{r7, lr}
 8007606:	b086      	sub	sp, #24
 8007608:	af00      	add	r7, sp, #0
 800760a:	6078      	str	r0, [r7, #4]
 800760c:	4a14      	ldr	r2, [pc, #80]	; (8007660 <_sbrk+0x5c>)
 800760e:	4b15      	ldr	r3, [pc, #84]	; (8007664 <_sbrk+0x60>)
 8007610:	1ad3      	subs	r3, r2, r3
 8007612:	617b      	str	r3, [r7, #20]
 8007614:	697b      	ldr	r3, [r7, #20]
 8007616:	613b      	str	r3, [r7, #16]
 8007618:	4b13      	ldr	r3, [pc, #76]	; (8007668 <_sbrk+0x64>)
 800761a:	681b      	ldr	r3, [r3, #0]
 800761c:	2b00      	cmp	r3, #0
 800761e:	d102      	bne.n	8007626 <_sbrk+0x22>
 8007620:	4b11      	ldr	r3, [pc, #68]	; (8007668 <_sbrk+0x64>)
 8007622:	4a12      	ldr	r2, [pc, #72]	; (800766c <_sbrk+0x68>)
 8007624:	601a      	str	r2, [r3, #0]
 8007626:	4b10      	ldr	r3, [pc, #64]	; (8007668 <_sbrk+0x64>)
 8007628:	681a      	ldr	r2, [r3, #0]
 800762a:	687b      	ldr	r3, [r7, #4]
 800762c:	4413      	add	r3, r2
 800762e:	693a      	ldr	r2, [r7, #16]
 8007630:	429a      	cmp	r2, r3
 8007632:	d207      	bcs.n	8007644 <_sbrk+0x40>
 8007634:	f005 fd84 	bl	800d140 <__errno>
 8007638:	4603      	mov	r3, r0
 800763a:	220c      	movs	r2, #12
 800763c:	601a      	str	r2, [r3, #0]
 800763e:	f04f 33ff 	mov.w	r3, #4294967295
 8007642:	e009      	b.n	8007658 <_sbrk+0x54>
 8007644:	4b08      	ldr	r3, [pc, #32]	; (8007668 <_sbrk+0x64>)
 8007646:	681b      	ldr	r3, [r3, #0]
 8007648:	60fb      	str	r3, [r7, #12]
 800764a:	4b07      	ldr	r3, [pc, #28]	; (8007668 <_sbrk+0x64>)
 800764c:	681a      	ldr	r2, [r3, #0]
 800764e:	687b      	ldr	r3, [r7, #4]
 8007650:	4413      	add	r3, r2
 8007652:	4a05      	ldr	r2, [pc, #20]	; (8007668 <_sbrk+0x64>)
 8007654:	6013      	str	r3, [r2, #0]
 8007656:	68fb      	ldr	r3, [r7, #12]
 8007658:	4618      	mov	r0, r3
 800765a:	3718      	adds	r7, #24
 800765c:	46bd      	mov	sp, r7
 800765e:	bd80      	pop	{r7, pc}
 8007660:	20020000 	.word	0x20020000
 8007664:	00000400 	.word	0x00000400
 8007668:	20000c64 	.word	0x20000c64
 800766c:	20000ca0 	.word	0x20000ca0

08007670 <SystemInit>:
 8007670:	b480      	push	{r7}
 8007672:	af00      	add	r7, sp, #0
 8007674:	4b06      	ldr	r3, [pc, #24]	; (8007690 <SystemInit+0x20>)
 8007676:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800767a:	4a05      	ldr	r2, [pc, #20]	; (8007690 <SystemInit+0x20>)
 800767c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8007680:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8007684:	bf00      	nop
 8007686:	46bd      	mov	sp, r7
 8007688:	f85d 7b04 	ldr.w	r7, [sp], #4
 800768c:	4770      	bx	lr
 800768e:	bf00      	nop
 8007690:	e000ed00 	.word	0xe000ed00

08007694 <Reset_Handler>:
 8007694:	f8df d034 	ldr.w	sp, [pc, #52]	; 80076cc <LoopFillZerobss+0x12>
 8007698:	480d      	ldr	r0, [pc, #52]	; (80076d0 <LoopFillZerobss+0x16>)
 800769a:	490e      	ldr	r1, [pc, #56]	; (80076d4 <LoopFillZerobss+0x1a>)
 800769c:	4a0e      	ldr	r2, [pc, #56]	; (80076d8 <LoopFillZerobss+0x1e>)
 800769e:	2300      	movs	r3, #0
 80076a0:	e002      	b.n	80076a8 <LoopCopyDataInit>

080076a2 <CopyDataInit>:
 80076a2:	58d4      	ldr	r4, [r2, r3]
 80076a4:	50c4      	str	r4, [r0, r3]
 80076a6:	3304      	adds	r3, #4

080076a8 <LoopCopyDataInit>:
 80076a8:	18c4      	adds	r4, r0, r3
 80076aa:	428c      	cmp	r4, r1
 80076ac:	d3f9      	bcc.n	80076a2 <CopyDataInit>
 80076ae:	4a0b      	ldr	r2, [pc, #44]	; (80076dc <LoopFillZerobss+0x22>)
 80076b0:	4c0b      	ldr	r4, [pc, #44]	; (80076e0 <LoopFillZerobss+0x26>)
 80076b2:	2300      	movs	r3, #0
 80076b4:	e001      	b.n	80076ba <LoopFillZerobss>

080076b6 <FillZerobss>:
 80076b6:	6013      	str	r3, [r2, #0]
 80076b8:	3204      	adds	r2, #4

080076ba <LoopFillZerobss>:
 80076ba:	42a2      	cmp	r2, r4
 80076bc:	d3fb      	bcc.n	80076b6 <FillZerobss>
 80076be:	f7ff ffd7 	bl	8007670 <SystemInit>
 80076c2:	f005 fd43 	bl	800d14c <__libc_init_array>
 80076c6:	f7fe fb3b 	bl	8005d40 <main>
 80076ca:	4770      	bx	lr
 80076cc:	20020000 	.word	0x20020000
 80076d0:	20000000 	.word	0x20000000
 80076d4:	20000310 	.word	0x20000310
 80076d8:	08011b88 	.word	0x08011b88
 80076dc:	20000310 	.word	0x20000310
 80076e0:	20000c9c 	.word	0x20000c9c

080076e4 <ADC_IRQHandler>:
 80076e4:	e7fe      	b.n	80076e4 <ADC_IRQHandler>
	...

080076e8 <HAL_Init>:
 80076e8:	b580      	push	{r7, lr}
 80076ea:	af00      	add	r7, sp, #0
 80076ec:	4b0e      	ldr	r3, [pc, #56]	; (8007728 <HAL_Init+0x40>)
 80076ee:	681b      	ldr	r3, [r3, #0]
 80076f0:	4a0d      	ldr	r2, [pc, #52]	; (8007728 <HAL_Init+0x40>)
 80076f2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80076f6:	6013      	str	r3, [r2, #0]
 80076f8:	4b0b      	ldr	r3, [pc, #44]	; (8007728 <HAL_Init+0x40>)
 80076fa:	681b      	ldr	r3, [r3, #0]
 80076fc:	4a0a      	ldr	r2, [pc, #40]	; (8007728 <HAL_Init+0x40>)
 80076fe:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8007702:	6013      	str	r3, [r2, #0]
 8007704:	4b08      	ldr	r3, [pc, #32]	; (8007728 <HAL_Init+0x40>)
 8007706:	681b      	ldr	r3, [r3, #0]
 8007708:	4a07      	ldr	r2, [pc, #28]	; (8007728 <HAL_Init+0x40>)
 800770a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800770e:	6013      	str	r3, [r2, #0]
 8007710:	2003      	movs	r0, #3
 8007712:	f000 fee9 	bl	80084e8 <HAL_NVIC_SetPriorityGrouping>
 8007716:	2000      	movs	r0, #0
 8007718:	f000 f808 	bl	800772c <HAL_InitTick>
 800771c:	f7ff faf4 	bl	8006d08 <HAL_MspInit>
 8007720:	2300      	movs	r3, #0
 8007722:	4618      	mov	r0, r3
 8007724:	bd80      	pop	{r7, pc}
 8007726:	bf00      	nop
 8007728:	40023c00 	.word	0x40023c00

0800772c <HAL_InitTick>:
 800772c:	b580      	push	{r7, lr}
 800772e:	b082      	sub	sp, #8
 8007730:	af00      	add	r7, sp, #0
 8007732:	6078      	str	r0, [r7, #4]
 8007734:	4b12      	ldr	r3, [pc, #72]	; (8007780 <HAL_InitTick+0x54>)
 8007736:	681a      	ldr	r2, [r3, #0]
 8007738:	4b12      	ldr	r3, [pc, #72]	; (8007784 <HAL_InitTick+0x58>)
 800773a:	781b      	ldrb	r3, [r3, #0]
 800773c:	4619      	mov	r1, r3
 800773e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8007742:	fbb3 f3f1 	udiv	r3, r3, r1
 8007746:	fbb2 f3f3 	udiv	r3, r2, r3
 800774a:	4618      	mov	r0, r3
 800774c:	f000 ff0f 	bl	800856e <HAL_SYSTICK_Config>
 8007750:	4603      	mov	r3, r0
 8007752:	2b00      	cmp	r3, #0
 8007754:	d001      	beq.n	800775a <HAL_InitTick+0x2e>
 8007756:	2301      	movs	r3, #1
 8007758:	e00e      	b.n	8007778 <HAL_InitTick+0x4c>
 800775a:	687b      	ldr	r3, [r7, #4]
 800775c:	2b0f      	cmp	r3, #15
 800775e:	d80a      	bhi.n	8007776 <HAL_InitTick+0x4a>
 8007760:	2200      	movs	r2, #0
 8007762:	6879      	ldr	r1, [r7, #4]
 8007764:	f04f 30ff 	mov.w	r0, #4294967295
 8007768:	f000 fec9 	bl	80084fe <HAL_NVIC_SetPriority>
 800776c:	4a06      	ldr	r2, [pc, #24]	; (8007788 <HAL_InitTick+0x5c>)
 800776e:	687b      	ldr	r3, [r7, #4]
 8007770:	6013      	str	r3, [r2, #0]
 8007772:	2300      	movs	r3, #0
 8007774:	e000      	b.n	8007778 <HAL_InitTick+0x4c>
 8007776:	2301      	movs	r3, #1
 8007778:	4618      	mov	r0, r3
 800777a:	3708      	adds	r7, #8
 800777c:	46bd      	mov	sp, r7
 800777e:	bd80      	pop	{r7, pc}
 8007780:	20000134 	.word	0x20000134
 8007784:	2000013c 	.word	0x2000013c
 8007788:	20000138 	.word	0x20000138

0800778c <HAL_IncTick>:
 800778c:	b480      	push	{r7}
 800778e:	af00      	add	r7, sp, #0
 8007790:	4b06      	ldr	r3, [pc, #24]	; (80077ac <HAL_IncTick+0x20>)
 8007792:	781b      	ldrb	r3, [r3, #0]
 8007794:	461a      	mov	r2, r3
 8007796:	4b06      	ldr	r3, [pc, #24]	; (80077b0 <HAL_IncTick+0x24>)
 8007798:	681b      	ldr	r3, [r3, #0]
 800779a:	4413      	add	r3, r2
 800779c:	4a04      	ldr	r2, [pc, #16]	; (80077b0 <HAL_IncTick+0x24>)
 800779e:	6013      	str	r3, [r2, #0]
 80077a0:	bf00      	nop
 80077a2:	46bd      	mov	sp, r7
 80077a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077a8:	4770      	bx	lr
 80077aa:	bf00      	nop
 80077ac:	2000013c 	.word	0x2000013c
 80077b0:	20000c68 	.word	0x20000c68

080077b4 <HAL_GetTick>:
 80077b4:	b480      	push	{r7}
 80077b6:	af00      	add	r7, sp, #0
 80077b8:	4b03      	ldr	r3, [pc, #12]	; (80077c8 <HAL_GetTick+0x14>)
 80077ba:	681b      	ldr	r3, [r3, #0]
 80077bc:	4618      	mov	r0, r3
 80077be:	46bd      	mov	sp, r7
 80077c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077c4:	4770      	bx	lr
 80077c6:	bf00      	nop
 80077c8:	20000c68 	.word	0x20000c68

080077cc <HAL_Delay>:
 80077cc:	b580      	push	{r7, lr}
 80077ce:	b084      	sub	sp, #16
 80077d0:	af00      	add	r7, sp, #0
 80077d2:	6078      	str	r0, [r7, #4]
 80077d4:	f7ff ffee 	bl	80077b4 <HAL_GetTick>
 80077d8:	60b8      	str	r0, [r7, #8]
 80077da:	687b      	ldr	r3, [r7, #4]
 80077dc:	60fb      	str	r3, [r7, #12]
 80077de:	68fb      	ldr	r3, [r7, #12]
 80077e0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80077e4:	d005      	beq.n	80077f2 <HAL_Delay+0x26>
 80077e6:	4b0a      	ldr	r3, [pc, #40]	; (8007810 <HAL_Delay+0x44>)
 80077e8:	781b      	ldrb	r3, [r3, #0]
 80077ea:	461a      	mov	r2, r3
 80077ec:	68fb      	ldr	r3, [r7, #12]
 80077ee:	4413      	add	r3, r2
 80077f0:	60fb      	str	r3, [r7, #12]
 80077f2:	bf00      	nop
 80077f4:	f7ff ffde 	bl	80077b4 <HAL_GetTick>
 80077f8:	4602      	mov	r2, r0
 80077fa:	68bb      	ldr	r3, [r7, #8]
 80077fc:	1ad3      	subs	r3, r2, r3
 80077fe:	68fa      	ldr	r2, [r7, #12]
 8007800:	429a      	cmp	r2, r3
 8007802:	d8f7      	bhi.n	80077f4 <HAL_Delay+0x28>
 8007804:	bf00      	nop
 8007806:	bf00      	nop
 8007808:	3710      	adds	r7, #16
 800780a:	46bd      	mov	sp, r7
 800780c:	bd80      	pop	{r7, pc}
 800780e:	bf00      	nop
 8007810:	2000013c 	.word	0x2000013c

08007814 <HAL_ADC_Init>:
 8007814:	b580      	push	{r7, lr}
 8007816:	b084      	sub	sp, #16
 8007818:	af00      	add	r7, sp, #0
 800781a:	6078      	str	r0, [r7, #4]
 800781c:	2300      	movs	r3, #0
 800781e:	73fb      	strb	r3, [r7, #15]
 8007820:	687b      	ldr	r3, [r7, #4]
 8007822:	2b00      	cmp	r3, #0
 8007824:	d101      	bne.n	800782a <HAL_ADC_Init+0x16>
 8007826:	2301      	movs	r3, #1
 8007828:	e033      	b.n	8007892 <HAL_ADC_Init+0x7e>
 800782a:	687b      	ldr	r3, [r7, #4]
 800782c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800782e:	2b00      	cmp	r3, #0
 8007830:	d109      	bne.n	8007846 <HAL_ADC_Init+0x32>
 8007832:	6878      	ldr	r0, [r7, #4]
 8007834:	f7ff fa90 	bl	8006d58 <HAL_ADC_MspInit>
 8007838:	687b      	ldr	r3, [r7, #4]
 800783a:	2200      	movs	r2, #0
 800783c:	645a      	str	r2, [r3, #68]	; 0x44
 800783e:	687b      	ldr	r3, [r7, #4]
 8007840:	2200      	movs	r2, #0
 8007842:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007846:	687b      	ldr	r3, [r7, #4]
 8007848:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800784a:	f003 0310 	and.w	r3, r3, #16
 800784e:	2b00      	cmp	r3, #0
 8007850:	d118      	bne.n	8007884 <HAL_ADC_Init+0x70>
 8007852:	687b      	ldr	r3, [r7, #4]
 8007854:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007856:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800785a:	f023 0302 	bic.w	r3, r3, #2
 800785e:	f043 0202 	orr.w	r2, r3, #2
 8007862:	687b      	ldr	r3, [r7, #4]
 8007864:	641a      	str	r2, [r3, #64]	; 0x40
 8007866:	6878      	ldr	r0, [r7, #4]
 8007868:	f000 fab4 	bl	8007dd4 <ADC_Init>
 800786c:	687b      	ldr	r3, [r7, #4]
 800786e:	2200      	movs	r2, #0
 8007870:	645a      	str	r2, [r3, #68]	; 0x44
 8007872:	687b      	ldr	r3, [r7, #4]
 8007874:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007876:	f023 0303 	bic.w	r3, r3, #3
 800787a:	f043 0201 	orr.w	r2, r3, #1
 800787e:	687b      	ldr	r3, [r7, #4]
 8007880:	641a      	str	r2, [r3, #64]	; 0x40
 8007882:	e001      	b.n	8007888 <HAL_ADC_Init+0x74>
 8007884:	2301      	movs	r3, #1
 8007886:	73fb      	strb	r3, [r7, #15]
 8007888:	687b      	ldr	r3, [r7, #4]
 800788a:	2200      	movs	r2, #0
 800788c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007890:	7bfb      	ldrb	r3, [r7, #15]
 8007892:	4618      	mov	r0, r3
 8007894:	3710      	adds	r7, #16
 8007896:	46bd      	mov	sp, r7
 8007898:	bd80      	pop	{r7, pc}
	...

0800789c <HAL_ADC_Start>:
 800789c:	b480      	push	{r7}
 800789e:	b085      	sub	sp, #20
 80078a0:	af00      	add	r7, sp, #0
 80078a2:	6078      	str	r0, [r7, #4]
 80078a4:	2300      	movs	r3, #0
 80078a6:	60bb      	str	r3, [r7, #8]
 80078a8:	687b      	ldr	r3, [r7, #4]
 80078aa:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80078ae:	2b01      	cmp	r3, #1
 80078b0:	d101      	bne.n	80078b6 <HAL_ADC_Start+0x1a>
 80078b2:	2302      	movs	r3, #2
 80078b4:	e0b2      	b.n	8007a1c <HAL_ADC_Start+0x180>
 80078b6:	687b      	ldr	r3, [r7, #4]
 80078b8:	2201      	movs	r2, #1
 80078ba:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80078be:	687b      	ldr	r3, [r7, #4]
 80078c0:	681b      	ldr	r3, [r3, #0]
 80078c2:	689b      	ldr	r3, [r3, #8]
 80078c4:	f003 0301 	and.w	r3, r3, #1
 80078c8:	2b01      	cmp	r3, #1
 80078ca:	d018      	beq.n	80078fe <HAL_ADC_Start+0x62>
 80078cc:	687b      	ldr	r3, [r7, #4]
 80078ce:	681b      	ldr	r3, [r3, #0]
 80078d0:	689a      	ldr	r2, [r3, #8]
 80078d2:	687b      	ldr	r3, [r7, #4]
 80078d4:	681b      	ldr	r3, [r3, #0]
 80078d6:	f042 0201 	orr.w	r2, r2, #1
 80078da:	609a      	str	r2, [r3, #8]
 80078dc:	4b52      	ldr	r3, [pc, #328]	; (8007a28 <HAL_ADC_Start+0x18c>)
 80078de:	681b      	ldr	r3, [r3, #0]
 80078e0:	4a52      	ldr	r2, [pc, #328]	; (8007a2c <HAL_ADC_Start+0x190>)
 80078e2:	fba2 2303 	umull	r2, r3, r2, r3
 80078e6:	0c9a      	lsrs	r2, r3, #18
 80078e8:	4613      	mov	r3, r2
 80078ea:	005b      	lsls	r3, r3, #1
 80078ec:	4413      	add	r3, r2
 80078ee:	60bb      	str	r3, [r7, #8]
 80078f0:	e002      	b.n	80078f8 <HAL_ADC_Start+0x5c>
 80078f2:	68bb      	ldr	r3, [r7, #8]
 80078f4:	3b01      	subs	r3, #1
 80078f6:	60bb      	str	r3, [r7, #8]
 80078f8:	68bb      	ldr	r3, [r7, #8]
 80078fa:	2b00      	cmp	r3, #0
 80078fc:	d1f9      	bne.n	80078f2 <HAL_ADC_Start+0x56>
 80078fe:	687b      	ldr	r3, [r7, #4]
 8007900:	681b      	ldr	r3, [r3, #0]
 8007902:	689b      	ldr	r3, [r3, #8]
 8007904:	f003 0301 	and.w	r3, r3, #1
 8007908:	2b01      	cmp	r3, #1
 800790a:	d17a      	bne.n	8007a02 <HAL_ADC_Start+0x166>
 800790c:	687b      	ldr	r3, [r7, #4]
 800790e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007910:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8007914:	f023 0301 	bic.w	r3, r3, #1
 8007918:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800791c:	687b      	ldr	r3, [r7, #4]
 800791e:	641a      	str	r2, [r3, #64]	; 0x40
 8007920:	687b      	ldr	r3, [r7, #4]
 8007922:	681b      	ldr	r3, [r3, #0]
 8007924:	685b      	ldr	r3, [r3, #4]
 8007926:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800792a:	2b00      	cmp	r3, #0
 800792c:	d007      	beq.n	800793e <HAL_ADC_Start+0xa2>
 800792e:	687b      	ldr	r3, [r7, #4]
 8007930:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007932:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8007936:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 800793a:	687b      	ldr	r3, [r7, #4]
 800793c:	641a      	str	r2, [r3, #64]	; 0x40
 800793e:	687b      	ldr	r3, [r7, #4]
 8007940:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007942:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8007946:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800794a:	d106      	bne.n	800795a <HAL_ADC_Start+0xbe>
 800794c:	687b      	ldr	r3, [r7, #4]
 800794e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007950:	f023 0206 	bic.w	r2, r3, #6
 8007954:	687b      	ldr	r3, [r7, #4]
 8007956:	645a      	str	r2, [r3, #68]	; 0x44
 8007958:	e002      	b.n	8007960 <HAL_ADC_Start+0xc4>
 800795a:	687b      	ldr	r3, [r7, #4]
 800795c:	2200      	movs	r2, #0
 800795e:	645a      	str	r2, [r3, #68]	; 0x44
 8007960:	687b      	ldr	r3, [r7, #4]
 8007962:	2200      	movs	r2, #0
 8007964:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007968:	4b31      	ldr	r3, [pc, #196]	; (8007a30 <HAL_ADC_Start+0x194>)
 800796a:	60fb      	str	r3, [r7, #12]
 800796c:	687b      	ldr	r3, [r7, #4]
 800796e:	681b      	ldr	r3, [r3, #0]
 8007970:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8007974:	601a      	str	r2, [r3, #0]
 8007976:	68fb      	ldr	r3, [r7, #12]
 8007978:	685b      	ldr	r3, [r3, #4]
 800797a:	f003 031f 	and.w	r3, r3, #31
 800797e:	2b00      	cmp	r3, #0
 8007980:	d12a      	bne.n	80079d8 <HAL_ADC_Start+0x13c>
 8007982:	687b      	ldr	r3, [r7, #4]
 8007984:	681b      	ldr	r3, [r3, #0]
 8007986:	4a2b      	ldr	r2, [pc, #172]	; (8007a34 <HAL_ADC_Start+0x198>)
 8007988:	4293      	cmp	r3, r2
 800798a:	d015      	beq.n	80079b8 <HAL_ADC_Start+0x11c>
 800798c:	687b      	ldr	r3, [r7, #4]
 800798e:	681b      	ldr	r3, [r3, #0]
 8007990:	4a29      	ldr	r2, [pc, #164]	; (8007a38 <HAL_ADC_Start+0x19c>)
 8007992:	4293      	cmp	r3, r2
 8007994:	d105      	bne.n	80079a2 <HAL_ADC_Start+0x106>
 8007996:	4b26      	ldr	r3, [pc, #152]	; (8007a30 <HAL_ADC_Start+0x194>)
 8007998:	685b      	ldr	r3, [r3, #4]
 800799a:	f003 031f 	and.w	r3, r3, #31
 800799e:	2b00      	cmp	r3, #0
 80079a0:	d00a      	beq.n	80079b8 <HAL_ADC_Start+0x11c>
 80079a2:	687b      	ldr	r3, [r7, #4]
 80079a4:	681b      	ldr	r3, [r3, #0]
 80079a6:	4a25      	ldr	r2, [pc, #148]	; (8007a3c <HAL_ADC_Start+0x1a0>)
 80079a8:	4293      	cmp	r3, r2
 80079aa:	d136      	bne.n	8007a1a <HAL_ADC_Start+0x17e>
 80079ac:	4b20      	ldr	r3, [pc, #128]	; (8007a30 <HAL_ADC_Start+0x194>)
 80079ae:	685b      	ldr	r3, [r3, #4]
 80079b0:	f003 0310 	and.w	r3, r3, #16
 80079b4:	2b00      	cmp	r3, #0
 80079b6:	d130      	bne.n	8007a1a <HAL_ADC_Start+0x17e>
 80079b8:	687b      	ldr	r3, [r7, #4]
 80079ba:	681b      	ldr	r3, [r3, #0]
 80079bc:	689b      	ldr	r3, [r3, #8]
 80079be:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80079c2:	2b00      	cmp	r3, #0
 80079c4:	d129      	bne.n	8007a1a <HAL_ADC_Start+0x17e>
 80079c6:	687b      	ldr	r3, [r7, #4]
 80079c8:	681b      	ldr	r3, [r3, #0]
 80079ca:	689a      	ldr	r2, [r3, #8]
 80079cc:	687b      	ldr	r3, [r7, #4]
 80079ce:	681b      	ldr	r3, [r3, #0]
 80079d0:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80079d4:	609a      	str	r2, [r3, #8]
 80079d6:	e020      	b.n	8007a1a <HAL_ADC_Start+0x17e>
 80079d8:	687b      	ldr	r3, [r7, #4]
 80079da:	681b      	ldr	r3, [r3, #0]
 80079dc:	4a15      	ldr	r2, [pc, #84]	; (8007a34 <HAL_ADC_Start+0x198>)
 80079de:	4293      	cmp	r3, r2
 80079e0:	d11b      	bne.n	8007a1a <HAL_ADC_Start+0x17e>
 80079e2:	687b      	ldr	r3, [r7, #4]
 80079e4:	681b      	ldr	r3, [r3, #0]
 80079e6:	689b      	ldr	r3, [r3, #8]
 80079e8:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80079ec:	2b00      	cmp	r3, #0
 80079ee:	d114      	bne.n	8007a1a <HAL_ADC_Start+0x17e>
 80079f0:	687b      	ldr	r3, [r7, #4]
 80079f2:	681b      	ldr	r3, [r3, #0]
 80079f4:	689a      	ldr	r2, [r3, #8]
 80079f6:	687b      	ldr	r3, [r7, #4]
 80079f8:	681b      	ldr	r3, [r3, #0]
 80079fa:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80079fe:	609a      	str	r2, [r3, #8]
 8007a00:	e00b      	b.n	8007a1a <HAL_ADC_Start+0x17e>
 8007a02:	687b      	ldr	r3, [r7, #4]
 8007a04:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007a06:	f043 0210 	orr.w	r2, r3, #16
 8007a0a:	687b      	ldr	r3, [r7, #4]
 8007a0c:	641a      	str	r2, [r3, #64]	; 0x40
 8007a0e:	687b      	ldr	r3, [r7, #4]
 8007a10:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007a12:	f043 0201 	orr.w	r2, r3, #1
 8007a16:	687b      	ldr	r3, [r7, #4]
 8007a18:	645a      	str	r2, [r3, #68]	; 0x44
 8007a1a:	2300      	movs	r3, #0
 8007a1c:	4618      	mov	r0, r3
 8007a1e:	3714      	adds	r7, #20
 8007a20:	46bd      	mov	sp, r7
 8007a22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a26:	4770      	bx	lr
 8007a28:	20000134 	.word	0x20000134
 8007a2c:	431bde83 	.word	0x431bde83
 8007a30:	40012300 	.word	0x40012300
 8007a34:	40012000 	.word	0x40012000
 8007a38:	40012100 	.word	0x40012100
 8007a3c:	40012200 	.word	0x40012200

08007a40 <HAL_ADC_PollForConversion>:
 8007a40:	b580      	push	{r7, lr}
 8007a42:	b084      	sub	sp, #16
 8007a44:	af00      	add	r7, sp, #0
 8007a46:	6078      	str	r0, [r7, #4]
 8007a48:	6039      	str	r1, [r7, #0]
 8007a4a:	2300      	movs	r3, #0
 8007a4c:	60fb      	str	r3, [r7, #12]
 8007a4e:	687b      	ldr	r3, [r7, #4]
 8007a50:	681b      	ldr	r3, [r3, #0]
 8007a52:	689b      	ldr	r3, [r3, #8]
 8007a54:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007a58:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007a5c:	d113      	bne.n	8007a86 <HAL_ADC_PollForConversion+0x46>
 8007a5e:	687b      	ldr	r3, [r7, #4]
 8007a60:	681b      	ldr	r3, [r3, #0]
 8007a62:	689b      	ldr	r3, [r3, #8]
 8007a64:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007a68:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007a6c:	d10b      	bne.n	8007a86 <HAL_ADC_PollForConversion+0x46>
 8007a6e:	687b      	ldr	r3, [r7, #4]
 8007a70:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007a72:	f043 0220 	orr.w	r2, r3, #32
 8007a76:	687b      	ldr	r3, [r7, #4]
 8007a78:	641a      	str	r2, [r3, #64]	; 0x40
 8007a7a:	687b      	ldr	r3, [r7, #4]
 8007a7c:	2200      	movs	r2, #0
 8007a7e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007a82:	2301      	movs	r3, #1
 8007a84:	e063      	b.n	8007b4e <HAL_ADC_PollForConversion+0x10e>
 8007a86:	f7ff fe95 	bl	80077b4 <HAL_GetTick>
 8007a8a:	60f8      	str	r0, [r7, #12]
 8007a8c:	e021      	b.n	8007ad2 <HAL_ADC_PollForConversion+0x92>
 8007a8e:	683b      	ldr	r3, [r7, #0]
 8007a90:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007a94:	d01d      	beq.n	8007ad2 <HAL_ADC_PollForConversion+0x92>
 8007a96:	683b      	ldr	r3, [r7, #0]
 8007a98:	2b00      	cmp	r3, #0
 8007a9a:	d007      	beq.n	8007aac <HAL_ADC_PollForConversion+0x6c>
 8007a9c:	f7ff fe8a 	bl	80077b4 <HAL_GetTick>
 8007aa0:	4602      	mov	r2, r0
 8007aa2:	68fb      	ldr	r3, [r7, #12]
 8007aa4:	1ad3      	subs	r3, r2, r3
 8007aa6:	683a      	ldr	r2, [r7, #0]
 8007aa8:	429a      	cmp	r2, r3
 8007aaa:	d212      	bcs.n	8007ad2 <HAL_ADC_PollForConversion+0x92>
 8007aac:	687b      	ldr	r3, [r7, #4]
 8007aae:	681b      	ldr	r3, [r3, #0]
 8007ab0:	681b      	ldr	r3, [r3, #0]
 8007ab2:	f003 0302 	and.w	r3, r3, #2
 8007ab6:	2b02      	cmp	r3, #2
 8007ab8:	d00b      	beq.n	8007ad2 <HAL_ADC_PollForConversion+0x92>
 8007aba:	687b      	ldr	r3, [r7, #4]
 8007abc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007abe:	f043 0204 	orr.w	r2, r3, #4
 8007ac2:	687b      	ldr	r3, [r7, #4]
 8007ac4:	641a      	str	r2, [r3, #64]	; 0x40
 8007ac6:	687b      	ldr	r3, [r7, #4]
 8007ac8:	2200      	movs	r2, #0
 8007aca:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007ace:	2303      	movs	r3, #3
 8007ad0:	e03d      	b.n	8007b4e <HAL_ADC_PollForConversion+0x10e>
 8007ad2:	687b      	ldr	r3, [r7, #4]
 8007ad4:	681b      	ldr	r3, [r3, #0]
 8007ad6:	681b      	ldr	r3, [r3, #0]
 8007ad8:	f003 0302 	and.w	r3, r3, #2
 8007adc:	2b02      	cmp	r3, #2
 8007ade:	d1d6      	bne.n	8007a8e <HAL_ADC_PollForConversion+0x4e>
 8007ae0:	687b      	ldr	r3, [r7, #4]
 8007ae2:	681b      	ldr	r3, [r3, #0]
 8007ae4:	f06f 0212 	mvn.w	r2, #18
 8007ae8:	601a      	str	r2, [r3, #0]
 8007aea:	687b      	ldr	r3, [r7, #4]
 8007aec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007aee:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8007af2:	687b      	ldr	r3, [r7, #4]
 8007af4:	641a      	str	r2, [r3, #64]	; 0x40
 8007af6:	687b      	ldr	r3, [r7, #4]
 8007af8:	681b      	ldr	r3, [r3, #0]
 8007afa:	689b      	ldr	r3, [r3, #8]
 8007afc:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8007b00:	2b00      	cmp	r3, #0
 8007b02:	d123      	bne.n	8007b4c <HAL_ADC_PollForConversion+0x10c>
 8007b04:	687b      	ldr	r3, [r7, #4]
 8007b06:	7e1b      	ldrb	r3, [r3, #24]
 8007b08:	2b00      	cmp	r3, #0
 8007b0a:	d11f      	bne.n	8007b4c <HAL_ADC_PollForConversion+0x10c>
 8007b0c:	687b      	ldr	r3, [r7, #4]
 8007b0e:	681b      	ldr	r3, [r3, #0]
 8007b10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007b12:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 8007b16:	2b00      	cmp	r3, #0
 8007b18:	d006      	beq.n	8007b28 <HAL_ADC_PollForConversion+0xe8>
 8007b1a:	687b      	ldr	r3, [r7, #4]
 8007b1c:	681b      	ldr	r3, [r3, #0]
 8007b1e:	689b      	ldr	r3, [r3, #8]
 8007b20:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007b24:	2b00      	cmp	r3, #0
 8007b26:	d111      	bne.n	8007b4c <HAL_ADC_PollForConversion+0x10c>
 8007b28:	687b      	ldr	r3, [r7, #4]
 8007b2a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007b2c:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8007b30:	687b      	ldr	r3, [r7, #4]
 8007b32:	641a      	str	r2, [r3, #64]	; 0x40
 8007b34:	687b      	ldr	r3, [r7, #4]
 8007b36:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007b38:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8007b3c:	2b00      	cmp	r3, #0
 8007b3e:	d105      	bne.n	8007b4c <HAL_ADC_PollForConversion+0x10c>
 8007b40:	687b      	ldr	r3, [r7, #4]
 8007b42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007b44:	f043 0201 	orr.w	r2, r3, #1
 8007b48:	687b      	ldr	r3, [r7, #4]
 8007b4a:	641a      	str	r2, [r3, #64]	; 0x40
 8007b4c:	2300      	movs	r3, #0
 8007b4e:	4618      	mov	r0, r3
 8007b50:	3710      	adds	r7, #16
 8007b52:	46bd      	mov	sp, r7
 8007b54:	bd80      	pop	{r7, pc}

08007b56 <HAL_ADC_GetValue>:
 8007b56:	b480      	push	{r7}
 8007b58:	b083      	sub	sp, #12
 8007b5a:	af00      	add	r7, sp, #0
 8007b5c:	6078      	str	r0, [r7, #4]
 8007b5e:	687b      	ldr	r3, [r7, #4]
 8007b60:	681b      	ldr	r3, [r3, #0]
 8007b62:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007b64:	4618      	mov	r0, r3
 8007b66:	370c      	adds	r7, #12
 8007b68:	46bd      	mov	sp, r7
 8007b6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b6e:	4770      	bx	lr

08007b70 <HAL_ADC_ConfigChannel>:
 8007b70:	b480      	push	{r7}
 8007b72:	b085      	sub	sp, #20
 8007b74:	af00      	add	r7, sp, #0
 8007b76:	6078      	str	r0, [r7, #4]
 8007b78:	6039      	str	r1, [r7, #0]
 8007b7a:	2300      	movs	r3, #0
 8007b7c:	60bb      	str	r3, [r7, #8]
 8007b7e:	687b      	ldr	r3, [r7, #4]
 8007b80:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007b84:	2b01      	cmp	r3, #1
 8007b86:	d101      	bne.n	8007b8c <HAL_ADC_ConfigChannel+0x1c>
 8007b88:	2302      	movs	r3, #2
 8007b8a:	e113      	b.n	8007db4 <HAL_ADC_ConfigChannel+0x244>
 8007b8c:	687b      	ldr	r3, [r7, #4]
 8007b8e:	2201      	movs	r2, #1
 8007b90:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007b94:	683b      	ldr	r3, [r7, #0]
 8007b96:	681b      	ldr	r3, [r3, #0]
 8007b98:	2b09      	cmp	r3, #9
 8007b9a:	d925      	bls.n	8007be8 <HAL_ADC_ConfigChannel+0x78>
 8007b9c:	687b      	ldr	r3, [r7, #4]
 8007b9e:	681b      	ldr	r3, [r3, #0]
 8007ba0:	68d9      	ldr	r1, [r3, #12]
 8007ba2:	683b      	ldr	r3, [r7, #0]
 8007ba4:	681b      	ldr	r3, [r3, #0]
 8007ba6:	b29b      	uxth	r3, r3
 8007ba8:	461a      	mov	r2, r3
 8007baa:	4613      	mov	r3, r2
 8007bac:	005b      	lsls	r3, r3, #1
 8007bae:	4413      	add	r3, r2
 8007bb0:	3b1e      	subs	r3, #30
 8007bb2:	2207      	movs	r2, #7
 8007bb4:	fa02 f303 	lsl.w	r3, r2, r3
 8007bb8:	43da      	mvns	r2, r3
 8007bba:	687b      	ldr	r3, [r7, #4]
 8007bbc:	681b      	ldr	r3, [r3, #0]
 8007bbe:	400a      	ands	r2, r1
 8007bc0:	60da      	str	r2, [r3, #12]
 8007bc2:	687b      	ldr	r3, [r7, #4]
 8007bc4:	681b      	ldr	r3, [r3, #0]
 8007bc6:	68d9      	ldr	r1, [r3, #12]
 8007bc8:	683b      	ldr	r3, [r7, #0]
 8007bca:	689a      	ldr	r2, [r3, #8]
 8007bcc:	683b      	ldr	r3, [r7, #0]
 8007bce:	681b      	ldr	r3, [r3, #0]
 8007bd0:	b29b      	uxth	r3, r3
 8007bd2:	4618      	mov	r0, r3
 8007bd4:	4603      	mov	r3, r0
 8007bd6:	005b      	lsls	r3, r3, #1
 8007bd8:	4403      	add	r3, r0
 8007bda:	3b1e      	subs	r3, #30
 8007bdc:	409a      	lsls	r2, r3
 8007bde:	687b      	ldr	r3, [r7, #4]
 8007be0:	681b      	ldr	r3, [r3, #0]
 8007be2:	430a      	orrs	r2, r1
 8007be4:	60da      	str	r2, [r3, #12]
 8007be6:	e022      	b.n	8007c2e <HAL_ADC_ConfigChannel+0xbe>
 8007be8:	687b      	ldr	r3, [r7, #4]
 8007bea:	681b      	ldr	r3, [r3, #0]
 8007bec:	6919      	ldr	r1, [r3, #16]
 8007bee:	683b      	ldr	r3, [r7, #0]
 8007bf0:	681b      	ldr	r3, [r3, #0]
 8007bf2:	b29b      	uxth	r3, r3
 8007bf4:	461a      	mov	r2, r3
 8007bf6:	4613      	mov	r3, r2
 8007bf8:	005b      	lsls	r3, r3, #1
 8007bfa:	4413      	add	r3, r2
 8007bfc:	2207      	movs	r2, #7
 8007bfe:	fa02 f303 	lsl.w	r3, r2, r3
 8007c02:	43da      	mvns	r2, r3
 8007c04:	687b      	ldr	r3, [r7, #4]
 8007c06:	681b      	ldr	r3, [r3, #0]
 8007c08:	400a      	ands	r2, r1
 8007c0a:	611a      	str	r2, [r3, #16]
 8007c0c:	687b      	ldr	r3, [r7, #4]
 8007c0e:	681b      	ldr	r3, [r3, #0]
 8007c10:	6919      	ldr	r1, [r3, #16]
 8007c12:	683b      	ldr	r3, [r7, #0]
 8007c14:	689a      	ldr	r2, [r3, #8]
 8007c16:	683b      	ldr	r3, [r7, #0]
 8007c18:	681b      	ldr	r3, [r3, #0]
 8007c1a:	b29b      	uxth	r3, r3
 8007c1c:	4618      	mov	r0, r3
 8007c1e:	4603      	mov	r3, r0
 8007c20:	005b      	lsls	r3, r3, #1
 8007c22:	4403      	add	r3, r0
 8007c24:	409a      	lsls	r2, r3
 8007c26:	687b      	ldr	r3, [r7, #4]
 8007c28:	681b      	ldr	r3, [r3, #0]
 8007c2a:	430a      	orrs	r2, r1
 8007c2c:	611a      	str	r2, [r3, #16]
 8007c2e:	683b      	ldr	r3, [r7, #0]
 8007c30:	685b      	ldr	r3, [r3, #4]
 8007c32:	2b06      	cmp	r3, #6
 8007c34:	d824      	bhi.n	8007c80 <HAL_ADC_ConfigChannel+0x110>
 8007c36:	687b      	ldr	r3, [r7, #4]
 8007c38:	681b      	ldr	r3, [r3, #0]
 8007c3a:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8007c3c:	683b      	ldr	r3, [r7, #0]
 8007c3e:	685a      	ldr	r2, [r3, #4]
 8007c40:	4613      	mov	r3, r2
 8007c42:	009b      	lsls	r3, r3, #2
 8007c44:	4413      	add	r3, r2
 8007c46:	3b05      	subs	r3, #5
 8007c48:	221f      	movs	r2, #31
 8007c4a:	fa02 f303 	lsl.w	r3, r2, r3
 8007c4e:	43da      	mvns	r2, r3
 8007c50:	687b      	ldr	r3, [r7, #4]
 8007c52:	681b      	ldr	r3, [r3, #0]
 8007c54:	400a      	ands	r2, r1
 8007c56:	635a      	str	r2, [r3, #52]	; 0x34
 8007c58:	687b      	ldr	r3, [r7, #4]
 8007c5a:	681b      	ldr	r3, [r3, #0]
 8007c5c:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8007c5e:	683b      	ldr	r3, [r7, #0]
 8007c60:	681b      	ldr	r3, [r3, #0]
 8007c62:	b29b      	uxth	r3, r3
 8007c64:	4618      	mov	r0, r3
 8007c66:	683b      	ldr	r3, [r7, #0]
 8007c68:	685a      	ldr	r2, [r3, #4]
 8007c6a:	4613      	mov	r3, r2
 8007c6c:	009b      	lsls	r3, r3, #2
 8007c6e:	4413      	add	r3, r2
 8007c70:	3b05      	subs	r3, #5
 8007c72:	fa00 f203 	lsl.w	r2, r0, r3
 8007c76:	687b      	ldr	r3, [r7, #4]
 8007c78:	681b      	ldr	r3, [r3, #0]
 8007c7a:	430a      	orrs	r2, r1
 8007c7c:	635a      	str	r2, [r3, #52]	; 0x34
 8007c7e:	e04c      	b.n	8007d1a <HAL_ADC_ConfigChannel+0x1aa>
 8007c80:	683b      	ldr	r3, [r7, #0]
 8007c82:	685b      	ldr	r3, [r3, #4]
 8007c84:	2b0c      	cmp	r3, #12
 8007c86:	d824      	bhi.n	8007cd2 <HAL_ADC_ConfigChannel+0x162>
 8007c88:	687b      	ldr	r3, [r7, #4]
 8007c8a:	681b      	ldr	r3, [r3, #0]
 8007c8c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8007c8e:	683b      	ldr	r3, [r7, #0]
 8007c90:	685a      	ldr	r2, [r3, #4]
 8007c92:	4613      	mov	r3, r2
 8007c94:	009b      	lsls	r3, r3, #2
 8007c96:	4413      	add	r3, r2
 8007c98:	3b23      	subs	r3, #35	; 0x23
 8007c9a:	221f      	movs	r2, #31
 8007c9c:	fa02 f303 	lsl.w	r3, r2, r3
 8007ca0:	43da      	mvns	r2, r3
 8007ca2:	687b      	ldr	r3, [r7, #4]
 8007ca4:	681b      	ldr	r3, [r3, #0]
 8007ca6:	400a      	ands	r2, r1
 8007ca8:	631a      	str	r2, [r3, #48]	; 0x30
 8007caa:	687b      	ldr	r3, [r7, #4]
 8007cac:	681b      	ldr	r3, [r3, #0]
 8007cae:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8007cb0:	683b      	ldr	r3, [r7, #0]
 8007cb2:	681b      	ldr	r3, [r3, #0]
 8007cb4:	b29b      	uxth	r3, r3
 8007cb6:	4618      	mov	r0, r3
 8007cb8:	683b      	ldr	r3, [r7, #0]
 8007cba:	685a      	ldr	r2, [r3, #4]
 8007cbc:	4613      	mov	r3, r2
 8007cbe:	009b      	lsls	r3, r3, #2
 8007cc0:	4413      	add	r3, r2
 8007cc2:	3b23      	subs	r3, #35	; 0x23
 8007cc4:	fa00 f203 	lsl.w	r2, r0, r3
 8007cc8:	687b      	ldr	r3, [r7, #4]
 8007cca:	681b      	ldr	r3, [r3, #0]
 8007ccc:	430a      	orrs	r2, r1
 8007cce:	631a      	str	r2, [r3, #48]	; 0x30
 8007cd0:	e023      	b.n	8007d1a <HAL_ADC_ConfigChannel+0x1aa>
 8007cd2:	687b      	ldr	r3, [r7, #4]
 8007cd4:	681b      	ldr	r3, [r3, #0]
 8007cd6:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007cd8:	683b      	ldr	r3, [r7, #0]
 8007cda:	685a      	ldr	r2, [r3, #4]
 8007cdc:	4613      	mov	r3, r2
 8007cde:	009b      	lsls	r3, r3, #2
 8007ce0:	4413      	add	r3, r2
 8007ce2:	3b41      	subs	r3, #65	; 0x41
 8007ce4:	221f      	movs	r2, #31
 8007ce6:	fa02 f303 	lsl.w	r3, r2, r3
 8007cea:	43da      	mvns	r2, r3
 8007cec:	687b      	ldr	r3, [r7, #4]
 8007cee:	681b      	ldr	r3, [r3, #0]
 8007cf0:	400a      	ands	r2, r1
 8007cf2:	62da      	str	r2, [r3, #44]	; 0x2c
 8007cf4:	687b      	ldr	r3, [r7, #4]
 8007cf6:	681b      	ldr	r3, [r3, #0]
 8007cf8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007cfa:	683b      	ldr	r3, [r7, #0]
 8007cfc:	681b      	ldr	r3, [r3, #0]
 8007cfe:	b29b      	uxth	r3, r3
 8007d00:	4618      	mov	r0, r3
 8007d02:	683b      	ldr	r3, [r7, #0]
 8007d04:	685a      	ldr	r2, [r3, #4]
 8007d06:	4613      	mov	r3, r2
 8007d08:	009b      	lsls	r3, r3, #2
 8007d0a:	4413      	add	r3, r2
 8007d0c:	3b41      	subs	r3, #65	; 0x41
 8007d0e:	fa00 f203 	lsl.w	r2, r0, r3
 8007d12:	687b      	ldr	r3, [r7, #4]
 8007d14:	681b      	ldr	r3, [r3, #0]
 8007d16:	430a      	orrs	r2, r1
 8007d18:	62da      	str	r2, [r3, #44]	; 0x2c
 8007d1a:	4b29      	ldr	r3, [pc, #164]	; (8007dc0 <HAL_ADC_ConfigChannel+0x250>)
 8007d1c:	60fb      	str	r3, [r7, #12]
 8007d1e:	687b      	ldr	r3, [r7, #4]
 8007d20:	681b      	ldr	r3, [r3, #0]
 8007d22:	4a28      	ldr	r2, [pc, #160]	; (8007dc4 <HAL_ADC_ConfigChannel+0x254>)
 8007d24:	4293      	cmp	r3, r2
 8007d26:	d10f      	bne.n	8007d48 <HAL_ADC_ConfigChannel+0x1d8>
 8007d28:	683b      	ldr	r3, [r7, #0]
 8007d2a:	681b      	ldr	r3, [r3, #0]
 8007d2c:	2b12      	cmp	r3, #18
 8007d2e:	d10b      	bne.n	8007d48 <HAL_ADC_ConfigChannel+0x1d8>
 8007d30:	68fb      	ldr	r3, [r7, #12]
 8007d32:	685b      	ldr	r3, [r3, #4]
 8007d34:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 8007d38:	68fb      	ldr	r3, [r7, #12]
 8007d3a:	605a      	str	r2, [r3, #4]
 8007d3c:	68fb      	ldr	r3, [r7, #12]
 8007d3e:	685b      	ldr	r3, [r3, #4]
 8007d40:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8007d44:	68fb      	ldr	r3, [r7, #12]
 8007d46:	605a      	str	r2, [r3, #4]
 8007d48:	687b      	ldr	r3, [r7, #4]
 8007d4a:	681b      	ldr	r3, [r3, #0]
 8007d4c:	4a1d      	ldr	r2, [pc, #116]	; (8007dc4 <HAL_ADC_ConfigChannel+0x254>)
 8007d4e:	4293      	cmp	r3, r2
 8007d50:	d12b      	bne.n	8007daa <HAL_ADC_ConfigChannel+0x23a>
 8007d52:	683b      	ldr	r3, [r7, #0]
 8007d54:	681b      	ldr	r3, [r3, #0]
 8007d56:	4a1c      	ldr	r2, [pc, #112]	; (8007dc8 <HAL_ADC_ConfigChannel+0x258>)
 8007d58:	4293      	cmp	r3, r2
 8007d5a:	d003      	beq.n	8007d64 <HAL_ADC_ConfigChannel+0x1f4>
 8007d5c:	683b      	ldr	r3, [r7, #0]
 8007d5e:	681b      	ldr	r3, [r3, #0]
 8007d60:	2b11      	cmp	r3, #17
 8007d62:	d122      	bne.n	8007daa <HAL_ADC_ConfigChannel+0x23a>
 8007d64:	68fb      	ldr	r3, [r7, #12]
 8007d66:	685b      	ldr	r3, [r3, #4]
 8007d68:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 8007d6c:	68fb      	ldr	r3, [r7, #12]
 8007d6e:	605a      	str	r2, [r3, #4]
 8007d70:	68fb      	ldr	r3, [r7, #12]
 8007d72:	685b      	ldr	r3, [r3, #4]
 8007d74:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8007d78:	68fb      	ldr	r3, [r7, #12]
 8007d7a:	605a      	str	r2, [r3, #4]
 8007d7c:	683b      	ldr	r3, [r7, #0]
 8007d7e:	681b      	ldr	r3, [r3, #0]
 8007d80:	4a11      	ldr	r2, [pc, #68]	; (8007dc8 <HAL_ADC_ConfigChannel+0x258>)
 8007d82:	4293      	cmp	r3, r2
 8007d84:	d111      	bne.n	8007daa <HAL_ADC_ConfigChannel+0x23a>
 8007d86:	4b11      	ldr	r3, [pc, #68]	; (8007dcc <HAL_ADC_ConfigChannel+0x25c>)
 8007d88:	681b      	ldr	r3, [r3, #0]
 8007d8a:	4a11      	ldr	r2, [pc, #68]	; (8007dd0 <HAL_ADC_ConfigChannel+0x260>)
 8007d8c:	fba2 2303 	umull	r2, r3, r2, r3
 8007d90:	0c9a      	lsrs	r2, r3, #18
 8007d92:	4613      	mov	r3, r2
 8007d94:	009b      	lsls	r3, r3, #2
 8007d96:	4413      	add	r3, r2
 8007d98:	005b      	lsls	r3, r3, #1
 8007d9a:	60bb      	str	r3, [r7, #8]
 8007d9c:	e002      	b.n	8007da4 <HAL_ADC_ConfigChannel+0x234>
 8007d9e:	68bb      	ldr	r3, [r7, #8]
 8007da0:	3b01      	subs	r3, #1
 8007da2:	60bb      	str	r3, [r7, #8]
 8007da4:	68bb      	ldr	r3, [r7, #8]
 8007da6:	2b00      	cmp	r3, #0
 8007da8:	d1f9      	bne.n	8007d9e <HAL_ADC_ConfigChannel+0x22e>
 8007daa:	687b      	ldr	r3, [r7, #4]
 8007dac:	2200      	movs	r2, #0
 8007dae:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007db2:	2300      	movs	r3, #0
 8007db4:	4618      	mov	r0, r3
 8007db6:	3714      	adds	r7, #20
 8007db8:	46bd      	mov	sp, r7
 8007dba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007dbe:	4770      	bx	lr
 8007dc0:	40012300 	.word	0x40012300
 8007dc4:	40012000 	.word	0x40012000
 8007dc8:	10000012 	.word	0x10000012
 8007dcc:	20000134 	.word	0x20000134
 8007dd0:	431bde83 	.word	0x431bde83

08007dd4 <ADC_Init>:
 8007dd4:	b480      	push	{r7}
 8007dd6:	b085      	sub	sp, #20
 8007dd8:	af00      	add	r7, sp, #0
 8007dda:	6078      	str	r0, [r7, #4]
 8007ddc:	4b79      	ldr	r3, [pc, #484]	; (8007fc4 <ADC_Init+0x1f0>)
 8007dde:	60fb      	str	r3, [r7, #12]
 8007de0:	68fb      	ldr	r3, [r7, #12]
 8007de2:	685b      	ldr	r3, [r3, #4]
 8007de4:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8007de8:	68fb      	ldr	r3, [r7, #12]
 8007dea:	605a      	str	r2, [r3, #4]
 8007dec:	68fb      	ldr	r3, [r7, #12]
 8007dee:	685a      	ldr	r2, [r3, #4]
 8007df0:	687b      	ldr	r3, [r7, #4]
 8007df2:	685b      	ldr	r3, [r3, #4]
 8007df4:	431a      	orrs	r2, r3
 8007df6:	68fb      	ldr	r3, [r7, #12]
 8007df8:	605a      	str	r2, [r3, #4]
 8007dfa:	687b      	ldr	r3, [r7, #4]
 8007dfc:	681b      	ldr	r3, [r3, #0]
 8007dfe:	685a      	ldr	r2, [r3, #4]
 8007e00:	687b      	ldr	r3, [r7, #4]
 8007e02:	681b      	ldr	r3, [r3, #0]
 8007e04:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007e08:	605a      	str	r2, [r3, #4]
 8007e0a:	687b      	ldr	r3, [r7, #4]
 8007e0c:	681b      	ldr	r3, [r3, #0]
 8007e0e:	6859      	ldr	r1, [r3, #4]
 8007e10:	687b      	ldr	r3, [r7, #4]
 8007e12:	691b      	ldr	r3, [r3, #16]
 8007e14:	021a      	lsls	r2, r3, #8
 8007e16:	687b      	ldr	r3, [r7, #4]
 8007e18:	681b      	ldr	r3, [r3, #0]
 8007e1a:	430a      	orrs	r2, r1
 8007e1c:	605a      	str	r2, [r3, #4]
 8007e1e:	687b      	ldr	r3, [r7, #4]
 8007e20:	681b      	ldr	r3, [r3, #0]
 8007e22:	685a      	ldr	r2, [r3, #4]
 8007e24:	687b      	ldr	r3, [r7, #4]
 8007e26:	681b      	ldr	r3, [r3, #0]
 8007e28:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8007e2c:	605a      	str	r2, [r3, #4]
 8007e2e:	687b      	ldr	r3, [r7, #4]
 8007e30:	681b      	ldr	r3, [r3, #0]
 8007e32:	6859      	ldr	r1, [r3, #4]
 8007e34:	687b      	ldr	r3, [r7, #4]
 8007e36:	689a      	ldr	r2, [r3, #8]
 8007e38:	687b      	ldr	r3, [r7, #4]
 8007e3a:	681b      	ldr	r3, [r3, #0]
 8007e3c:	430a      	orrs	r2, r1
 8007e3e:	605a      	str	r2, [r3, #4]
 8007e40:	687b      	ldr	r3, [r7, #4]
 8007e42:	681b      	ldr	r3, [r3, #0]
 8007e44:	689a      	ldr	r2, [r3, #8]
 8007e46:	687b      	ldr	r3, [r7, #4]
 8007e48:	681b      	ldr	r3, [r3, #0]
 8007e4a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007e4e:	609a      	str	r2, [r3, #8]
 8007e50:	687b      	ldr	r3, [r7, #4]
 8007e52:	681b      	ldr	r3, [r3, #0]
 8007e54:	6899      	ldr	r1, [r3, #8]
 8007e56:	687b      	ldr	r3, [r7, #4]
 8007e58:	68da      	ldr	r2, [r3, #12]
 8007e5a:	687b      	ldr	r3, [r7, #4]
 8007e5c:	681b      	ldr	r3, [r3, #0]
 8007e5e:	430a      	orrs	r2, r1
 8007e60:	609a      	str	r2, [r3, #8]
 8007e62:	687b      	ldr	r3, [r7, #4]
 8007e64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007e66:	4a58      	ldr	r2, [pc, #352]	; (8007fc8 <ADC_Init+0x1f4>)
 8007e68:	4293      	cmp	r3, r2
 8007e6a:	d022      	beq.n	8007eb2 <ADC_Init+0xde>
 8007e6c:	687b      	ldr	r3, [r7, #4]
 8007e6e:	681b      	ldr	r3, [r3, #0]
 8007e70:	689a      	ldr	r2, [r3, #8]
 8007e72:	687b      	ldr	r3, [r7, #4]
 8007e74:	681b      	ldr	r3, [r3, #0]
 8007e76:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8007e7a:	609a      	str	r2, [r3, #8]
 8007e7c:	687b      	ldr	r3, [r7, #4]
 8007e7e:	681b      	ldr	r3, [r3, #0]
 8007e80:	6899      	ldr	r1, [r3, #8]
 8007e82:	687b      	ldr	r3, [r7, #4]
 8007e84:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8007e86:	687b      	ldr	r3, [r7, #4]
 8007e88:	681b      	ldr	r3, [r3, #0]
 8007e8a:	430a      	orrs	r2, r1
 8007e8c:	609a      	str	r2, [r3, #8]
 8007e8e:	687b      	ldr	r3, [r7, #4]
 8007e90:	681b      	ldr	r3, [r3, #0]
 8007e92:	689a      	ldr	r2, [r3, #8]
 8007e94:	687b      	ldr	r3, [r7, #4]
 8007e96:	681b      	ldr	r3, [r3, #0]
 8007e98:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8007e9c:	609a      	str	r2, [r3, #8]
 8007e9e:	687b      	ldr	r3, [r7, #4]
 8007ea0:	681b      	ldr	r3, [r3, #0]
 8007ea2:	6899      	ldr	r1, [r3, #8]
 8007ea4:	687b      	ldr	r3, [r7, #4]
 8007ea6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007ea8:	687b      	ldr	r3, [r7, #4]
 8007eaa:	681b      	ldr	r3, [r3, #0]
 8007eac:	430a      	orrs	r2, r1
 8007eae:	609a      	str	r2, [r3, #8]
 8007eb0:	e00f      	b.n	8007ed2 <ADC_Init+0xfe>
 8007eb2:	687b      	ldr	r3, [r7, #4]
 8007eb4:	681b      	ldr	r3, [r3, #0]
 8007eb6:	689a      	ldr	r2, [r3, #8]
 8007eb8:	687b      	ldr	r3, [r7, #4]
 8007eba:	681b      	ldr	r3, [r3, #0]
 8007ebc:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8007ec0:	609a      	str	r2, [r3, #8]
 8007ec2:	687b      	ldr	r3, [r7, #4]
 8007ec4:	681b      	ldr	r3, [r3, #0]
 8007ec6:	689a      	ldr	r2, [r3, #8]
 8007ec8:	687b      	ldr	r3, [r7, #4]
 8007eca:	681b      	ldr	r3, [r3, #0]
 8007ecc:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8007ed0:	609a      	str	r2, [r3, #8]
 8007ed2:	687b      	ldr	r3, [r7, #4]
 8007ed4:	681b      	ldr	r3, [r3, #0]
 8007ed6:	689a      	ldr	r2, [r3, #8]
 8007ed8:	687b      	ldr	r3, [r7, #4]
 8007eda:	681b      	ldr	r3, [r3, #0]
 8007edc:	f022 0202 	bic.w	r2, r2, #2
 8007ee0:	609a      	str	r2, [r3, #8]
 8007ee2:	687b      	ldr	r3, [r7, #4]
 8007ee4:	681b      	ldr	r3, [r3, #0]
 8007ee6:	6899      	ldr	r1, [r3, #8]
 8007ee8:	687b      	ldr	r3, [r7, #4]
 8007eea:	7e1b      	ldrb	r3, [r3, #24]
 8007eec:	005a      	lsls	r2, r3, #1
 8007eee:	687b      	ldr	r3, [r7, #4]
 8007ef0:	681b      	ldr	r3, [r3, #0]
 8007ef2:	430a      	orrs	r2, r1
 8007ef4:	609a      	str	r2, [r3, #8]
 8007ef6:	687b      	ldr	r3, [r7, #4]
 8007ef8:	f893 3020 	ldrb.w	r3, [r3, #32]
 8007efc:	2b00      	cmp	r3, #0
 8007efe:	d01b      	beq.n	8007f38 <ADC_Init+0x164>
 8007f00:	687b      	ldr	r3, [r7, #4]
 8007f02:	681b      	ldr	r3, [r3, #0]
 8007f04:	685a      	ldr	r2, [r3, #4]
 8007f06:	687b      	ldr	r3, [r7, #4]
 8007f08:	681b      	ldr	r3, [r3, #0]
 8007f0a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8007f0e:	605a      	str	r2, [r3, #4]
 8007f10:	687b      	ldr	r3, [r7, #4]
 8007f12:	681b      	ldr	r3, [r3, #0]
 8007f14:	685a      	ldr	r2, [r3, #4]
 8007f16:	687b      	ldr	r3, [r7, #4]
 8007f18:	681b      	ldr	r3, [r3, #0]
 8007f1a:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8007f1e:	605a      	str	r2, [r3, #4]
 8007f20:	687b      	ldr	r3, [r7, #4]
 8007f22:	681b      	ldr	r3, [r3, #0]
 8007f24:	6859      	ldr	r1, [r3, #4]
 8007f26:	687b      	ldr	r3, [r7, #4]
 8007f28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007f2a:	3b01      	subs	r3, #1
 8007f2c:	035a      	lsls	r2, r3, #13
 8007f2e:	687b      	ldr	r3, [r7, #4]
 8007f30:	681b      	ldr	r3, [r3, #0]
 8007f32:	430a      	orrs	r2, r1
 8007f34:	605a      	str	r2, [r3, #4]
 8007f36:	e007      	b.n	8007f48 <ADC_Init+0x174>
 8007f38:	687b      	ldr	r3, [r7, #4]
 8007f3a:	681b      	ldr	r3, [r3, #0]
 8007f3c:	685a      	ldr	r2, [r3, #4]
 8007f3e:	687b      	ldr	r3, [r7, #4]
 8007f40:	681b      	ldr	r3, [r3, #0]
 8007f42:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007f46:	605a      	str	r2, [r3, #4]
 8007f48:	687b      	ldr	r3, [r7, #4]
 8007f4a:	681b      	ldr	r3, [r3, #0]
 8007f4c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007f4e:	687b      	ldr	r3, [r7, #4]
 8007f50:	681b      	ldr	r3, [r3, #0]
 8007f52:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8007f56:	62da      	str	r2, [r3, #44]	; 0x2c
 8007f58:	687b      	ldr	r3, [r7, #4]
 8007f5a:	681b      	ldr	r3, [r3, #0]
 8007f5c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007f5e:	687b      	ldr	r3, [r7, #4]
 8007f60:	69db      	ldr	r3, [r3, #28]
 8007f62:	3b01      	subs	r3, #1
 8007f64:	051a      	lsls	r2, r3, #20
 8007f66:	687b      	ldr	r3, [r7, #4]
 8007f68:	681b      	ldr	r3, [r3, #0]
 8007f6a:	430a      	orrs	r2, r1
 8007f6c:	62da      	str	r2, [r3, #44]	; 0x2c
 8007f6e:	687b      	ldr	r3, [r7, #4]
 8007f70:	681b      	ldr	r3, [r3, #0]
 8007f72:	689a      	ldr	r2, [r3, #8]
 8007f74:	687b      	ldr	r3, [r7, #4]
 8007f76:	681b      	ldr	r3, [r3, #0]
 8007f78:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8007f7c:	609a      	str	r2, [r3, #8]
 8007f7e:	687b      	ldr	r3, [r7, #4]
 8007f80:	681b      	ldr	r3, [r3, #0]
 8007f82:	6899      	ldr	r1, [r3, #8]
 8007f84:	687b      	ldr	r3, [r7, #4]
 8007f86:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8007f8a:	025a      	lsls	r2, r3, #9
 8007f8c:	687b      	ldr	r3, [r7, #4]
 8007f8e:	681b      	ldr	r3, [r3, #0]
 8007f90:	430a      	orrs	r2, r1
 8007f92:	609a      	str	r2, [r3, #8]
 8007f94:	687b      	ldr	r3, [r7, #4]
 8007f96:	681b      	ldr	r3, [r3, #0]
 8007f98:	689a      	ldr	r2, [r3, #8]
 8007f9a:	687b      	ldr	r3, [r7, #4]
 8007f9c:	681b      	ldr	r3, [r3, #0]
 8007f9e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007fa2:	609a      	str	r2, [r3, #8]
 8007fa4:	687b      	ldr	r3, [r7, #4]
 8007fa6:	681b      	ldr	r3, [r3, #0]
 8007fa8:	6899      	ldr	r1, [r3, #8]
 8007faa:	687b      	ldr	r3, [r7, #4]
 8007fac:	695b      	ldr	r3, [r3, #20]
 8007fae:	029a      	lsls	r2, r3, #10
 8007fb0:	687b      	ldr	r3, [r7, #4]
 8007fb2:	681b      	ldr	r3, [r3, #0]
 8007fb4:	430a      	orrs	r2, r1
 8007fb6:	609a      	str	r2, [r3, #8]
 8007fb8:	bf00      	nop
 8007fba:	3714      	adds	r7, #20
 8007fbc:	46bd      	mov	sp, r7
 8007fbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fc2:	4770      	bx	lr
 8007fc4:	40012300 	.word	0x40012300
 8007fc8:	0f000001 	.word	0x0f000001

08007fcc <HAL_ADCEx_InjectedConfigChannel>:
 8007fcc:	b480      	push	{r7}
 8007fce:	b085      	sub	sp, #20
 8007fd0:	af00      	add	r7, sp, #0
 8007fd2:	6078      	str	r0, [r7, #4]
 8007fd4:	6039      	str	r1, [r7, #0]
 8007fd6:	687b      	ldr	r3, [r7, #4]
 8007fd8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007fdc:	2b01      	cmp	r3, #1
 8007fde:	d101      	bne.n	8007fe4 <HAL_ADCEx_InjectedConfigChannel+0x18>
 8007fe0:	2302      	movs	r3, #2
 8007fe2:	e17e      	b.n	80082e2 <HAL_ADCEx_InjectedConfigChannel+0x316>
 8007fe4:	687b      	ldr	r3, [r7, #4]
 8007fe6:	2201      	movs	r2, #1
 8007fe8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007fec:	683b      	ldr	r3, [r7, #0]
 8007fee:	681b      	ldr	r3, [r3, #0]
 8007ff0:	2b09      	cmp	r3, #9
 8007ff2:	d925      	bls.n	8008040 <HAL_ADCEx_InjectedConfigChannel+0x74>
 8007ff4:	687b      	ldr	r3, [r7, #4]
 8007ff6:	681b      	ldr	r3, [r3, #0]
 8007ff8:	68d9      	ldr	r1, [r3, #12]
 8007ffa:	683b      	ldr	r3, [r7, #0]
 8007ffc:	681b      	ldr	r3, [r3, #0]
 8007ffe:	b29b      	uxth	r3, r3
 8008000:	461a      	mov	r2, r3
 8008002:	4613      	mov	r3, r2
 8008004:	005b      	lsls	r3, r3, #1
 8008006:	4413      	add	r3, r2
 8008008:	3b1e      	subs	r3, #30
 800800a:	2207      	movs	r2, #7
 800800c:	fa02 f303 	lsl.w	r3, r2, r3
 8008010:	43da      	mvns	r2, r3
 8008012:	687b      	ldr	r3, [r7, #4]
 8008014:	681b      	ldr	r3, [r3, #0]
 8008016:	400a      	ands	r2, r1
 8008018:	60da      	str	r2, [r3, #12]
 800801a:	687b      	ldr	r3, [r7, #4]
 800801c:	681b      	ldr	r3, [r3, #0]
 800801e:	68d9      	ldr	r1, [r3, #12]
 8008020:	683b      	ldr	r3, [r7, #0]
 8008022:	689a      	ldr	r2, [r3, #8]
 8008024:	683b      	ldr	r3, [r7, #0]
 8008026:	681b      	ldr	r3, [r3, #0]
 8008028:	b29b      	uxth	r3, r3
 800802a:	4618      	mov	r0, r3
 800802c:	4603      	mov	r3, r0
 800802e:	005b      	lsls	r3, r3, #1
 8008030:	4403      	add	r3, r0
 8008032:	3b1e      	subs	r3, #30
 8008034:	409a      	lsls	r2, r3
 8008036:	687b      	ldr	r3, [r7, #4]
 8008038:	681b      	ldr	r3, [r3, #0]
 800803a:	430a      	orrs	r2, r1
 800803c:	60da      	str	r2, [r3, #12]
 800803e:	e022      	b.n	8008086 <HAL_ADCEx_InjectedConfigChannel+0xba>
 8008040:	687b      	ldr	r3, [r7, #4]
 8008042:	681b      	ldr	r3, [r3, #0]
 8008044:	6919      	ldr	r1, [r3, #16]
 8008046:	683b      	ldr	r3, [r7, #0]
 8008048:	681b      	ldr	r3, [r3, #0]
 800804a:	b29b      	uxth	r3, r3
 800804c:	461a      	mov	r2, r3
 800804e:	4613      	mov	r3, r2
 8008050:	005b      	lsls	r3, r3, #1
 8008052:	4413      	add	r3, r2
 8008054:	2207      	movs	r2, #7
 8008056:	fa02 f303 	lsl.w	r3, r2, r3
 800805a:	43da      	mvns	r2, r3
 800805c:	687b      	ldr	r3, [r7, #4]
 800805e:	681b      	ldr	r3, [r3, #0]
 8008060:	400a      	ands	r2, r1
 8008062:	611a      	str	r2, [r3, #16]
 8008064:	687b      	ldr	r3, [r7, #4]
 8008066:	681b      	ldr	r3, [r3, #0]
 8008068:	6919      	ldr	r1, [r3, #16]
 800806a:	683b      	ldr	r3, [r7, #0]
 800806c:	689a      	ldr	r2, [r3, #8]
 800806e:	683b      	ldr	r3, [r7, #0]
 8008070:	681b      	ldr	r3, [r3, #0]
 8008072:	b29b      	uxth	r3, r3
 8008074:	4618      	mov	r0, r3
 8008076:	4603      	mov	r3, r0
 8008078:	005b      	lsls	r3, r3, #1
 800807a:	4403      	add	r3, r0
 800807c:	409a      	lsls	r2, r3
 800807e:	687b      	ldr	r3, [r7, #4]
 8008080:	681b      	ldr	r3, [r3, #0]
 8008082:	430a      	orrs	r2, r1
 8008084:	611a      	str	r2, [r3, #16]
 8008086:	687b      	ldr	r3, [r7, #4]
 8008088:	681b      	ldr	r3, [r3, #0]
 800808a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800808c:	687b      	ldr	r3, [r7, #4]
 800808e:	681b      	ldr	r3, [r3, #0]
 8008090:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8008094:	639a      	str	r2, [r3, #56]	; 0x38
 8008096:	687b      	ldr	r3, [r7, #4]
 8008098:	681b      	ldr	r3, [r3, #0]
 800809a:	6b99      	ldr	r1, [r3, #56]	; 0x38
 800809c:	683b      	ldr	r3, [r7, #0]
 800809e:	691b      	ldr	r3, [r3, #16]
 80080a0:	3b01      	subs	r3, #1
 80080a2:	051a      	lsls	r2, r3, #20
 80080a4:	687b      	ldr	r3, [r7, #4]
 80080a6:	681b      	ldr	r3, [r3, #0]
 80080a8:	430a      	orrs	r2, r1
 80080aa:	639a      	str	r2, [r3, #56]	; 0x38
 80080ac:	687b      	ldr	r3, [r7, #4]
 80080ae:	681b      	ldr	r3, [r3, #0]
 80080b0:	6b99      	ldr	r1, [r3, #56]	; 0x38
 80080b2:	683b      	ldr	r3, [r7, #0]
 80080b4:	685b      	ldr	r3, [r3, #4]
 80080b6:	b2da      	uxtb	r2, r3
 80080b8:	683b      	ldr	r3, [r7, #0]
 80080ba:	691b      	ldr	r3, [r3, #16]
 80080bc:	b2db      	uxtb	r3, r3
 80080be:	1ad3      	subs	r3, r2, r3
 80080c0:	b2db      	uxtb	r3, r3
 80080c2:	3303      	adds	r3, #3
 80080c4:	b2db      	uxtb	r3, r3
 80080c6:	461a      	mov	r2, r3
 80080c8:	4613      	mov	r3, r2
 80080ca:	009b      	lsls	r3, r3, #2
 80080cc:	4413      	add	r3, r2
 80080ce:	221f      	movs	r2, #31
 80080d0:	fa02 f303 	lsl.w	r3, r2, r3
 80080d4:	43da      	mvns	r2, r3
 80080d6:	687b      	ldr	r3, [r7, #4]
 80080d8:	681b      	ldr	r3, [r3, #0]
 80080da:	400a      	ands	r2, r1
 80080dc:	639a      	str	r2, [r3, #56]	; 0x38
 80080de:	687b      	ldr	r3, [r7, #4]
 80080e0:	681b      	ldr	r3, [r3, #0]
 80080e2:	6b99      	ldr	r1, [r3, #56]	; 0x38
 80080e4:	683b      	ldr	r3, [r7, #0]
 80080e6:	681b      	ldr	r3, [r3, #0]
 80080e8:	b29b      	uxth	r3, r3
 80080ea:	4618      	mov	r0, r3
 80080ec:	683b      	ldr	r3, [r7, #0]
 80080ee:	685b      	ldr	r3, [r3, #4]
 80080f0:	b2da      	uxtb	r2, r3
 80080f2:	683b      	ldr	r3, [r7, #0]
 80080f4:	691b      	ldr	r3, [r3, #16]
 80080f6:	b2db      	uxtb	r3, r3
 80080f8:	1ad3      	subs	r3, r2, r3
 80080fa:	b2db      	uxtb	r3, r3
 80080fc:	3303      	adds	r3, #3
 80080fe:	b2db      	uxtb	r3, r3
 8008100:	461a      	mov	r2, r3
 8008102:	4613      	mov	r3, r2
 8008104:	009b      	lsls	r3, r3, #2
 8008106:	4413      	add	r3, r2
 8008108:	fa00 f203 	lsl.w	r2, r0, r3
 800810c:	687b      	ldr	r3, [r7, #4]
 800810e:	681b      	ldr	r3, [r3, #0]
 8008110:	430a      	orrs	r2, r1
 8008112:	639a      	str	r2, [r3, #56]	; 0x38
 8008114:	683b      	ldr	r3, [r7, #0]
 8008116:	699b      	ldr	r3, [r3, #24]
 8008118:	4a75      	ldr	r2, [pc, #468]	; (80082f0 <HAL_ADCEx_InjectedConfigChannel+0x324>)
 800811a:	4293      	cmp	r3, r2
 800811c:	d022      	beq.n	8008164 <HAL_ADCEx_InjectedConfigChannel+0x198>
 800811e:	687b      	ldr	r3, [r7, #4]
 8008120:	681b      	ldr	r3, [r3, #0]
 8008122:	689a      	ldr	r2, [r3, #8]
 8008124:	687b      	ldr	r3, [r7, #4]
 8008126:	681b      	ldr	r3, [r3, #0]
 8008128:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 800812c:	609a      	str	r2, [r3, #8]
 800812e:	687b      	ldr	r3, [r7, #4]
 8008130:	681b      	ldr	r3, [r3, #0]
 8008132:	6899      	ldr	r1, [r3, #8]
 8008134:	683b      	ldr	r3, [r7, #0]
 8008136:	699a      	ldr	r2, [r3, #24]
 8008138:	687b      	ldr	r3, [r7, #4]
 800813a:	681b      	ldr	r3, [r3, #0]
 800813c:	430a      	orrs	r2, r1
 800813e:	609a      	str	r2, [r3, #8]
 8008140:	687b      	ldr	r3, [r7, #4]
 8008142:	681b      	ldr	r3, [r3, #0]
 8008144:	689a      	ldr	r2, [r3, #8]
 8008146:	687b      	ldr	r3, [r7, #4]
 8008148:	681b      	ldr	r3, [r3, #0]
 800814a:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 800814e:	609a      	str	r2, [r3, #8]
 8008150:	687b      	ldr	r3, [r7, #4]
 8008152:	681b      	ldr	r3, [r3, #0]
 8008154:	6899      	ldr	r1, [r3, #8]
 8008156:	683b      	ldr	r3, [r7, #0]
 8008158:	69da      	ldr	r2, [r3, #28]
 800815a:	687b      	ldr	r3, [r7, #4]
 800815c:	681b      	ldr	r3, [r3, #0]
 800815e:	430a      	orrs	r2, r1
 8008160:	609a      	str	r2, [r3, #8]
 8008162:	e00f      	b.n	8008184 <HAL_ADCEx_InjectedConfigChannel+0x1b8>
 8008164:	687b      	ldr	r3, [r7, #4]
 8008166:	681b      	ldr	r3, [r3, #0]
 8008168:	689a      	ldr	r2, [r3, #8]
 800816a:	687b      	ldr	r3, [r7, #4]
 800816c:	681b      	ldr	r3, [r3, #0]
 800816e:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8008172:	609a      	str	r2, [r3, #8]
 8008174:	687b      	ldr	r3, [r7, #4]
 8008176:	681b      	ldr	r3, [r3, #0]
 8008178:	689a      	ldr	r2, [r3, #8]
 800817a:	687b      	ldr	r3, [r7, #4]
 800817c:	681b      	ldr	r3, [r3, #0]
 800817e:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8008182:	609a      	str	r2, [r3, #8]
 8008184:	683b      	ldr	r3, [r7, #0]
 8008186:	7d5b      	ldrb	r3, [r3, #21]
 8008188:	2b00      	cmp	r3, #0
 800818a:	d008      	beq.n	800819e <HAL_ADCEx_InjectedConfigChannel+0x1d2>
 800818c:	687b      	ldr	r3, [r7, #4]
 800818e:	681b      	ldr	r3, [r3, #0]
 8008190:	685a      	ldr	r2, [r3, #4]
 8008192:	687b      	ldr	r3, [r7, #4]
 8008194:	681b      	ldr	r3, [r3, #0]
 8008196:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800819a:	605a      	str	r2, [r3, #4]
 800819c:	e007      	b.n	80081ae <HAL_ADCEx_InjectedConfigChannel+0x1e2>
 800819e:	687b      	ldr	r3, [r7, #4]
 80081a0:	681b      	ldr	r3, [r3, #0]
 80081a2:	685a      	ldr	r2, [r3, #4]
 80081a4:	687b      	ldr	r3, [r7, #4]
 80081a6:	681b      	ldr	r3, [r3, #0]
 80081a8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80081ac:	605a      	str	r2, [r3, #4]
 80081ae:	683b      	ldr	r3, [r7, #0]
 80081b0:	7d1b      	ldrb	r3, [r3, #20]
 80081b2:	2b00      	cmp	r3, #0
 80081b4:	d008      	beq.n	80081c8 <HAL_ADCEx_InjectedConfigChannel+0x1fc>
 80081b6:	687b      	ldr	r3, [r7, #4]
 80081b8:	681b      	ldr	r3, [r3, #0]
 80081ba:	685a      	ldr	r2, [r3, #4]
 80081bc:	687b      	ldr	r3, [r7, #4]
 80081be:	681b      	ldr	r3, [r3, #0]
 80081c0:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80081c4:	605a      	str	r2, [r3, #4]
 80081c6:	e007      	b.n	80081d8 <HAL_ADCEx_InjectedConfigChannel+0x20c>
 80081c8:	687b      	ldr	r3, [r7, #4]
 80081ca:	681b      	ldr	r3, [r3, #0]
 80081cc:	685a      	ldr	r2, [r3, #4]
 80081ce:	687b      	ldr	r3, [r7, #4]
 80081d0:	681b      	ldr	r3, [r3, #0]
 80081d2:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80081d6:	605a      	str	r2, [r3, #4]
 80081d8:	683b      	ldr	r3, [r7, #0]
 80081da:	685b      	ldr	r3, [r3, #4]
 80081dc:	2b03      	cmp	r3, #3
 80081de:	d02e      	beq.n	800823e <HAL_ADCEx_InjectedConfigChannel+0x272>
 80081e0:	2b03      	cmp	r3, #3
 80081e2:	d840      	bhi.n	8008266 <HAL_ADCEx_InjectedConfigChannel+0x29a>
 80081e4:	2b01      	cmp	r3, #1
 80081e6:	d002      	beq.n	80081ee <HAL_ADCEx_InjectedConfigChannel+0x222>
 80081e8:	2b02      	cmp	r3, #2
 80081ea:	d014      	beq.n	8008216 <HAL_ADCEx_InjectedConfigChannel+0x24a>
 80081ec:	e03b      	b.n	8008266 <HAL_ADCEx_InjectedConfigChannel+0x29a>
 80081ee:	687b      	ldr	r3, [r7, #4]
 80081f0:	681b      	ldr	r3, [r3, #0]
 80081f2:	695b      	ldr	r3, [r3, #20]
 80081f4:	687a      	ldr	r2, [r7, #4]
 80081f6:	6812      	ldr	r2, [r2, #0]
 80081f8:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 80081fc:	f023 030f 	bic.w	r3, r3, #15
 8008200:	6153      	str	r3, [r2, #20]
 8008202:	687b      	ldr	r3, [r7, #4]
 8008204:	681b      	ldr	r3, [r3, #0]
 8008206:	6959      	ldr	r1, [r3, #20]
 8008208:	683b      	ldr	r3, [r7, #0]
 800820a:	68da      	ldr	r2, [r3, #12]
 800820c:	687b      	ldr	r3, [r7, #4]
 800820e:	681b      	ldr	r3, [r3, #0]
 8008210:	430a      	orrs	r2, r1
 8008212:	615a      	str	r2, [r3, #20]
 8008214:	e03b      	b.n	800828e <HAL_ADCEx_InjectedConfigChannel+0x2c2>
 8008216:	687b      	ldr	r3, [r7, #4]
 8008218:	681b      	ldr	r3, [r3, #0]
 800821a:	699b      	ldr	r3, [r3, #24]
 800821c:	687a      	ldr	r2, [r7, #4]
 800821e:	6812      	ldr	r2, [r2, #0]
 8008220:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8008224:	f023 030f 	bic.w	r3, r3, #15
 8008228:	6193      	str	r3, [r2, #24]
 800822a:	687b      	ldr	r3, [r7, #4]
 800822c:	681b      	ldr	r3, [r3, #0]
 800822e:	6999      	ldr	r1, [r3, #24]
 8008230:	683b      	ldr	r3, [r7, #0]
 8008232:	68da      	ldr	r2, [r3, #12]
 8008234:	687b      	ldr	r3, [r7, #4]
 8008236:	681b      	ldr	r3, [r3, #0]
 8008238:	430a      	orrs	r2, r1
 800823a:	619a      	str	r2, [r3, #24]
 800823c:	e027      	b.n	800828e <HAL_ADCEx_InjectedConfigChannel+0x2c2>
 800823e:	687b      	ldr	r3, [r7, #4]
 8008240:	681b      	ldr	r3, [r3, #0]
 8008242:	69db      	ldr	r3, [r3, #28]
 8008244:	687a      	ldr	r2, [r7, #4]
 8008246:	6812      	ldr	r2, [r2, #0]
 8008248:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 800824c:	f023 030f 	bic.w	r3, r3, #15
 8008250:	61d3      	str	r3, [r2, #28]
 8008252:	687b      	ldr	r3, [r7, #4]
 8008254:	681b      	ldr	r3, [r3, #0]
 8008256:	69d9      	ldr	r1, [r3, #28]
 8008258:	683b      	ldr	r3, [r7, #0]
 800825a:	68da      	ldr	r2, [r3, #12]
 800825c:	687b      	ldr	r3, [r7, #4]
 800825e:	681b      	ldr	r3, [r3, #0]
 8008260:	430a      	orrs	r2, r1
 8008262:	61da      	str	r2, [r3, #28]
 8008264:	e013      	b.n	800828e <HAL_ADCEx_InjectedConfigChannel+0x2c2>
 8008266:	687b      	ldr	r3, [r7, #4]
 8008268:	681b      	ldr	r3, [r3, #0]
 800826a:	6a1b      	ldr	r3, [r3, #32]
 800826c:	687a      	ldr	r2, [r7, #4]
 800826e:	6812      	ldr	r2, [r2, #0]
 8008270:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8008274:	f023 030f 	bic.w	r3, r3, #15
 8008278:	6213      	str	r3, [r2, #32]
 800827a:	687b      	ldr	r3, [r7, #4]
 800827c:	681b      	ldr	r3, [r3, #0]
 800827e:	6a19      	ldr	r1, [r3, #32]
 8008280:	683b      	ldr	r3, [r7, #0]
 8008282:	68da      	ldr	r2, [r3, #12]
 8008284:	687b      	ldr	r3, [r7, #4]
 8008286:	681b      	ldr	r3, [r3, #0]
 8008288:	430a      	orrs	r2, r1
 800828a:	621a      	str	r2, [r3, #32]
 800828c:	bf00      	nop
 800828e:	4b19      	ldr	r3, [pc, #100]	; (80082f4 <HAL_ADCEx_InjectedConfigChannel+0x328>)
 8008290:	60fb      	str	r3, [r7, #12]
 8008292:	687b      	ldr	r3, [r7, #4]
 8008294:	681b      	ldr	r3, [r3, #0]
 8008296:	4a18      	ldr	r2, [pc, #96]	; (80082f8 <HAL_ADCEx_InjectedConfigChannel+0x32c>)
 8008298:	4293      	cmp	r3, r2
 800829a:	d109      	bne.n	80082b0 <HAL_ADCEx_InjectedConfigChannel+0x2e4>
 800829c:	683b      	ldr	r3, [r7, #0]
 800829e:	681b      	ldr	r3, [r3, #0]
 80082a0:	2b12      	cmp	r3, #18
 80082a2:	d105      	bne.n	80082b0 <HAL_ADCEx_InjectedConfigChannel+0x2e4>
 80082a4:	68fb      	ldr	r3, [r7, #12]
 80082a6:	685b      	ldr	r3, [r3, #4]
 80082a8:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 80082ac:	68fb      	ldr	r3, [r7, #12]
 80082ae:	605a      	str	r2, [r3, #4]
 80082b0:	687b      	ldr	r3, [r7, #4]
 80082b2:	681b      	ldr	r3, [r3, #0]
 80082b4:	4a10      	ldr	r2, [pc, #64]	; (80082f8 <HAL_ADCEx_InjectedConfigChannel+0x32c>)
 80082b6:	4293      	cmp	r3, r2
 80082b8:	d10e      	bne.n	80082d8 <HAL_ADCEx_InjectedConfigChannel+0x30c>
 80082ba:	683b      	ldr	r3, [r7, #0]
 80082bc:	681b      	ldr	r3, [r3, #0]
 80082be:	4a0f      	ldr	r2, [pc, #60]	; (80082fc <HAL_ADCEx_InjectedConfigChannel+0x330>)
 80082c0:	4293      	cmp	r3, r2
 80082c2:	d003      	beq.n	80082cc <HAL_ADCEx_InjectedConfigChannel+0x300>
 80082c4:	683b      	ldr	r3, [r7, #0]
 80082c6:	681b      	ldr	r3, [r3, #0]
 80082c8:	2b11      	cmp	r3, #17
 80082ca:	d105      	bne.n	80082d8 <HAL_ADCEx_InjectedConfigChannel+0x30c>
 80082cc:	68fb      	ldr	r3, [r7, #12]
 80082ce:	685b      	ldr	r3, [r3, #4]
 80082d0:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 80082d4:	68fb      	ldr	r3, [r7, #12]
 80082d6:	605a      	str	r2, [r3, #4]
 80082d8:	687b      	ldr	r3, [r7, #4]
 80082da:	2200      	movs	r2, #0
 80082dc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80082e0:	2300      	movs	r3, #0
 80082e2:	4618      	mov	r0, r3
 80082e4:	3714      	adds	r7, #20
 80082e6:	46bd      	mov	sp, r7
 80082e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082ec:	4770      	bx	lr
 80082ee:	bf00      	nop
 80082f0:	000f0001 	.word	0x000f0001
 80082f4:	40012300 	.word	0x40012300
 80082f8:	40012000 	.word	0x40012000
 80082fc:	10000012 	.word	0x10000012

08008300 <__NVIC_SetPriorityGrouping>:
 8008300:	b480      	push	{r7}
 8008302:	b085      	sub	sp, #20
 8008304:	af00      	add	r7, sp, #0
 8008306:	6078      	str	r0, [r7, #4]
 8008308:	687b      	ldr	r3, [r7, #4]
 800830a:	f003 0307 	and.w	r3, r3, #7
 800830e:	60fb      	str	r3, [r7, #12]
 8008310:	4b0c      	ldr	r3, [pc, #48]	; (8008344 <__NVIC_SetPriorityGrouping+0x44>)
 8008312:	68db      	ldr	r3, [r3, #12]
 8008314:	60bb      	str	r3, [r7, #8]
 8008316:	68ba      	ldr	r2, [r7, #8]
 8008318:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 800831c:	4013      	ands	r3, r2
 800831e:	60bb      	str	r3, [r7, #8]
 8008320:	68fb      	ldr	r3, [r7, #12]
 8008322:	021a      	lsls	r2, r3, #8
 8008324:	68bb      	ldr	r3, [r7, #8]
 8008326:	4313      	orrs	r3, r2
 8008328:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800832c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008330:	60bb      	str	r3, [r7, #8]
 8008332:	4a04      	ldr	r2, [pc, #16]	; (8008344 <__NVIC_SetPriorityGrouping+0x44>)
 8008334:	68bb      	ldr	r3, [r7, #8]
 8008336:	60d3      	str	r3, [r2, #12]
 8008338:	bf00      	nop
 800833a:	3714      	adds	r7, #20
 800833c:	46bd      	mov	sp, r7
 800833e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008342:	4770      	bx	lr
 8008344:	e000ed00 	.word	0xe000ed00

08008348 <__NVIC_GetPriorityGrouping>:
 8008348:	b480      	push	{r7}
 800834a:	af00      	add	r7, sp, #0
 800834c:	4b04      	ldr	r3, [pc, #16]	; (8008360 <__NVIC_GetPriorityGrouping+0x18>)
 800834e:	68db      	ldr	r3, [r3, #12]
 8008350:	0a1b      	lsrs	r3, r3, #8
 8008352:	f003 0307 	and.w	r3, r3, #7
 8008356:	4618      	mov	r0, r3
 8008358:	46bd      	mov	sp, r7
 800835a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800835e:	4770      	bx	lr
 8008360:	e000ed00 	.word	0xe000ed00

08008364 <__NVIC_EnableIRQ>:
 8008364:	b480      	push	{r7}
 8008366:	b083      	sub	sp, #12
 8008368:	af00      	add	r7, sp, #0
 800836a:	4603      	mov	r3, r0
 800836c:	71fb      	strb	r3, [r7, #7]
 800836e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008372:	2b00      	cmp	r3, #0
 8008374:	db0b      	blt.n	800838e <__NVIC_EnableIRQ+0x2a>
 8008376:	79fb      	ldrb	r3, [r7, #7]
 8008378:	f003 021f 	and.w	r2, r3, #31
 800837c:	4907      	ldr	r1, [pc, #28]	; (800839c <__NVIC_EnableIRQ+0x38>)
 800837e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008382:	095b      	lsrs	r3, r3, #5
 8008384:	2001      	movs	r0, #1
 8008386:	fa00 f202 	lsl.w	r2, r0, r2
 800838a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800838e:	bf00      	nop
 8008390:	370c      	adds	r7, #12
 8008392:	46bd      	mov	sp, r7
 8008394:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008398:	4770      	bx	lr
 800839a:	bf00      	nop
 800839c:	e000e100 	.word	0xe000e100

080083a0 <__NVIC_DisableIRQ>:
 80083a0:	b480      	push	{r7}
 80083a2:	b083      	sub	sp, #12
 80083a4:	af00      	add	r7, sp, #0
 80083a6:	4603      	mov	r3, r0
 80083a8:	71fb      	strb	r3, [r7, #7]
 80083aa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80083ae:	2b00      	cmp	r3, #0
 80083b0:	db12      	blt.n	80083d8 <__NVIC_DisableIRQ+0x38>
 80083b2:	79fb      	ldrb	r3, [r7, #7]
 80083b4:	f003 021f 	and.w	r2, r3, #31
 80083b8:	490a      	ldr	r1, [pc, #40]	; (80083e4 <__NVIC_DisableIRQ+0x44>)
 80083ba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80083be:	095b      	lsrs	r3, r3, #5
 80083c0:	2001      	movs	r0, #1
 80083c2:	fa00 f202 	lsl.w	r2, r0, r2
 80083c6:	3320      	adds	r3, #32
 80083c8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80083cc:	f3bf 8f4f 	dsb	sy
 80083d0:	bf00      	nop
 80083d2:	f3bf 8f6f 	isb	sy
 80083d6:	bf00      	nop
 80083d8:	bf00      	nop
 80083da:	370c      	adds	r7, #12
 80083dc:	46bd      	mov	sp, r7
 80083de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083e2:	4770      	bx	lr
 80083e4:	e000e100 	.word	0xe000e100

080083e8 <__NVIC_SetPriority>:
 80083e8:	b480      	push	{r7}
 80083ea:	b083      	sub	sp, #12
 80083ec:	af00      	add	r7, sp, #0
 80083ee:	4603      	mov	r3, r0
 80083f0:	6039      	str	r1, [r7, #0]
 80083f2:	71fb      	strb	r3, [r7, #7]
 80083f4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80083f8:	2b00      	cmp	r3, #0
 80083fa:	db0a      	blt.n	8008412 <__NVIC_SetPriority+0x2a>
 80083fc:	683b      	ldr	r3, [r7, #0]
 80083fe:	b2da      	uxtb	r2, r3
 8008400:	490c      	ldr	r1, [pc, #48]	; (8008434 <__NVIC_SetPriority+0x4c>)
 8008402:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008406:	0112      	lsls	r2, r2, #4
 8008408:	b2d2      	uxtb	r2, r2
 800840a:	440b      	add	r3, r1
 800840c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8008410:	e00a      	b.n	8008428 <__NVIC_SetPriority+0x40>
 8008412:	683b      	ldr	r3, [r7, #0]
 8008414:	b2da      	uxtb	r2, r3
 8008416:	4908      	ldr	r1, [pc, #32]	; (8008438 <__NVIC_SetPriority+0x50>)
 8008418:	79fb      	ldrb	r3, [r7, #7]
 800841a:	f003 030f 	and.w	r3, r3, #15
 800841e:	3b04      	subs	r3, #4
 8008420:	0112      	lsls	r2, r2, #4
 8008422:	b2d2      	uxtb	r2, r2
 8008424:	440b      	add	r3, r1
 8008426:	761a      	strb	r2, [r3, #24]
 8008428:	bf00      	nop
 800842a:	370c      	adds	r7, #12
 800842c:	46bd      	mov	sp, r7
 800842e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008432:	4770      	bx	lr
 8008434:	e000e100 	.word	0xe000e100
 8008438:	e000ed00 	.word	0xe000ed00

0800843c <NVIC_EncodePriority>:
 800843c:	b480      	push	{r7}
 800843e:	b089      	sub	sp, #36	; 0x24
 8008440:	af00      	add	r7, sp, #0
 8008442:	60f8      	str	r0, [r7, #12]
 8008444:	60b9      	str	r1, [r7, #8]
 8008446:	607a      	str	r2, [r7, #4]
 8008448:	68fb      	ldr	r3, [r7, #12]
 800844a:	f003 0307 	and.w	r3, r3, #7
 800844e:	61fb      	str	r3, [r7, #28]
 8008450:	69fb      	ldr	r3, [r7, #28]
 8008452:	f1c3 0307 	rsb	r3, r3, #7
 8008456:	2b04      	cmp	r3, #4
 8008458:	bf28      	it	cs
 800845a:	2304      	movcs	r3, #4
 800845c:	61bb      	str	r3, [r7, #24]
 800845e:	69fb      	ldr	r3, [r7, #28]
 8008460:	3304      	adds	r3, #4
 8008462:	2b06      	cmp	r3, #6
 8008464:	d902      	bls.n	800846c <NVIC_EncodePriority+0x30>
 8008466:	69fb      	ldr	r3, [r7, #28]
 8008468:	3b03      	subs	r3, #3
 800846a:	e000      	b.n	800846e <NVIC_EncodePriority+0x32>
 800846c:	2300      	movs	r3, #0
 800846e:	617b      	str	r3, [r7, #20]
 8008470:	f04f 32ff 	mov.w	r2, #4294967295
 8008474:	69bb      	ldr	r3, [r7, #24]
 8008476:	fa02 f303 	lsl.w	r3, r2, r3
 800847a:	43da      	mvns	r2, r3
 800847c:	68bb      	ldr	r3, [r7, #8]
 800847e:	401a      	ands	r2, r3
 8008480:	697b      	ldr	r3, [r7, #20]
 8008482:	409a      	lsls	r2, r3
 8008484:	f04f 31ff 	mov.w	r1, #4294967295
 8008488:	697b      	ldr	r3, [r7, #20]
 800848a:	fa01 f303 	lsl.w	r3, r1, r3
 800848e:	43d9      	mvns	r1, r3
 8008490:	687b      	ldr	r3, [r7, #4]
 8008492:	400b      	ands	r3, r1
 8008494:	4313      	orrs	r3, r2
 8008496:	4618      	mov	r0, r3
 8008498:	3724      	adds	r7, #36	; 0x24
 800849a:	46bd      	mov	sp, r7
 800849c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084a0:	4770      	bx	lr
	...

080084a4 <SysTick_Config>:
 80084a4:	b580      	push	{r7, lr}
 80084a6:	b082      	sub	sp, #8
 80084a8:	af00      	add	r7, sp, #0
 80084aa:	6078      	str	r0, [r7, #4]
 80084ac:	687b      	ldr	r3, [r7, #4]
 80084ae:	3b01      	subs	r3, #1
 80084b0:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80084b4:	d301      	bcc.n	80084ba <SysTick_Config+0x16>
 80084b6:	2301      	movs	r3, #1
 80084b8:	e00f      	b.n	80084da <SysTick_Config+0x36>
 80084ba:	4a0a      	ldr	r2, [pc, #40]	; (80084e4 <SysTick_Config+0x40>)
 80084bc:	687b      	ldr	r3, [r7, #4]
 80084be:	3b01      	subs	r3, #1
 80084c0:	6053      	str	r3, [r2, #4]
 80084c2:	210f      	movs	r1, #15
 80084c4:	f04f 30ff 	mov.w	r0, #4294967295
 80084c8:	f7ff ff8e 	bl	80083e8 <__NVIC_SetPriority>
 80084cc:	4b05      	ldr	r3, [pc, #20]	; (80084e4 <SysTick_Config+0x40>)
 80084ce:	2200      	movs	r2, #0
 80084d0:	609a      	str	r2, [r3, #8]
 80084d2:	4b04      	ldr	r3, [pc, #16]	; (80084e4 <SysTick_Config+0x40>)
 80084d4:	2207      	movs	r2, #7
 80084d6:	601a      	str	r2, [r3, #0]
 80084d8:	2300      	movs	r3, #0
 80084da:	4618      	mov	r0, r3
 80084dc:	3708      	adds	r7, #8
 80084de:	46bd      	mov	sp, r7
 80084e0:	bd80      	pop	{r7, pc}
 80084e2:	bf00      	nop
 80084e4:	e000e010 	.word	0xe000e010

080084e8 <HAL_NVIC_SetPriorityGrouping>:
 80084e8:	b580      	push	{r7, lr}
 80084ea:	b082      	sub	sp, #8
 80084ec:	af00      	add	r7, sp, #0
 80084ee:	6078      	str	r0, [r7, #4]
 80084f0:	6878      	ldr	r0, [r7, #4]
 80084f2:	f7ff ff05 	bl	8008300 <__NVIC_SetPriorityGrouping>
 80084f6:	bf00      	nop
 80084f8:	3708      	adds	r7, #8
 80084fa:	46bd      	mov	sp, r7
 80084fc:	bd80      	pop	{r7, pc}

080084fe <HAL_NVIC_SetPriority>:
 80084fe:	b580      	push	{r7, lr}
 8008500:	b086      	sub	sp, #24
 8008502:	af00      	add	r7, sp, #0
 8008504:	4603      	mov	r3, r0
 8008506:	60b9      	str	r1, [r7, #8]
 8008508:	607a      	str	r2, [r7, #4]
 800850a:	73fb      	strb	r3, [r7, #15]
 800850c:	2300      	movs	r3, #0
 800850e:	617b      	str	r3, [r7, #20]
 8008510:	f7ff ff1a 	bl	8008348 <__NVIC_GetPriorityGrouping>
 8008514:	6178      	str	r0, [r7, #20]
 8008516:	687a      	ldr	r2, [r7, #4]
 8008518:	68b9      	ldr	r1, [r7, #8]
 800851a:	6978      	ldr	r0, [r7, #20]
 800851c:	f7ff ff8e 	bl	800843c <NVIC_EncodePriority>
 8008520:	4602      	mov	r2, r0
 8008522:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8008526:	4611      	mov	r1, r2
 8008528:	4618      	mov	r0, r3
 800852a:	f7ff ff5d 	bl	80083e8 <__NVIC_SetPriority>
 800852e:	bf00      	nop
 8008530:	3718      	adds	r7, #24
 8008532:	46bd      	mov	sp, r7
 8008534:	bd80      	pop	{r7, pc}

08008536 <HAL_NVIC_EnableIRQ>:
 8008536:	b580      	push	{r7, lr}
 8008538:	b082      	sub	sp, #8
 800853a:	af00      	add	r7, sp, #0
 800853c:	4603      	mov	r3, r0
 800853e:	71fb      	strb	r3, [r7, #7]
 8008540:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008544:	4618      	mov	r0, r3
 8008546:	f7ff ff0d 	bl	8008364 <__NVIC_EnableIRQ>
 800854a:	bf00      	nop
 800854c:	3708      	adds	r7, #8
 800854e:	46bd      	mov	sp, r7
 8008550:	bd80      	pop	{r7, pc}

08008552 <HAL_NVIC_DisableIRQ>:
 8008552:	b580      	push	{r7, lr}
 8008554:	b082      	sub	sp, #8
 8008556:	af00      	add	r7, sp, #0
 8008558:	4603      	mov	r3, r0
 800855a:	71fb      	strb	r3, [r7, #7]
 800855c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008560:	4618      	mov	r0, r3
 8008562:	f7ff ff1d 	bl	80083a0 <__NVIC_DisableIRQ>
 8008566:	bf00      	nop
 8008568:	3708      	adds	r7, #8
 800856a:	46bd      	mov	sp, r7
 800856c:	bd80      	pop	{r7, pc}

0800856e <HAL_SYSTICK_Config>:
 800856e:	b580      	push	{r7, lr}
 8008570:	b082      	sub	sp, #8
 8008572:	af00      	add	r7, sp, #0
 8008574:	6078      	str	r0, [r7, #4]
 8008576:	6878      	ldr	r0, [r7, #4]
 8008578:	f7ff ff94 	bl	80084a4 <SysTick_Config>
 800857c:	4603      	mov	r3, r0
 800857e:	4618      	mov	r0, r3
 8008580:	3708      	adds	r7, #8
 8008582:	46bd      	mov	sp, r7
 8008584:	bd80      	pop	{r7, pc}
	...

08008588 <HAL_DMA_Init>:
 8008588:	b580      	push	{r7, lr}
 800858a:	b086      	sub	sp, #24
 800858c:	af00      	add	r7, sp, #0
 800858e:	6078      	str	r0, [r7, #4]
 8008590:	2300      	movs	r3, #0
 8008592:	617b      	str	r3, [r7, #20]
 8008594:	f7ff f90e 	bl	80077b4 <HAL_GetTick>
 8008598:	6138      	str	r0, [r7, #16]
 800859a:	687b      	ldr	r3, [r7, #4]
 800859c:	2b00      	cmp	r3, #0
 800859e:	d101      	bne.n	80085a4 <HAL_DMA_Init+0x1c>
 80085a0:	2301      	movs	r3, #1
 80085a2:	e099      	b.n	80086d8 <HAL_DMA_Init+0x150>
 80085a4:	687b      	ldr	r3, [r7, #4]
 80085a6:	2202      	movs	r2, #2
 80085a8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80085ac:	687b      	ldr	r3, [r7, #4]
 80085ae:	2200      	movs	r2, #0
 80085b0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80085b4:	687b      	ldr	r3, [r7, #4]
 80085b6:	681b      	ldr	r3, [r3, #0]
 80085b8:	681a      	ldr	r2, [r3, #0]
 80085ba:	687b      	ldr	r3, [r7, #4]
 80085bc:	681b      	ldr	r3, [r3, #0]
 80085be:	f022 0201 	bic.w	r2, r2, #1
 80085c2:	601a      	str	r2, [r3, #0]
 80085c4:	e00f      	b.n	80085e6 <HAL_DMA_Init+0x5e>
 80085c6:	f7ff f8f5 	bl	80077b4 <HAL_GetTick>
 80085ca:	4602      	mov	r2, r0
 80085cc:	693b      	ldr	r3, [r7, #16]
 80085ce:	1ad3      	subs	r3, r2, r3
 80085d0:	2b05      	cmp	r3, #5
 80085d2:	d908      	bls.n	80085e6 <HAL_DMA_Init+0x5e>
 80085d4:	687b      	ldr	r3, [r7, #4]
 80085d6:	2220      	movs	r2, #32
 80085d8:	655a      	str	r2, [r3, #84]	; 0x54
 80085da:	687b      	ldr	r3, [r7, #4]
 80085dc:	2203      	movs	r2, #3
 80085de:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80085e2:	2303      	movs	r3, #3
 80085e4:	e078      	b.n	80086d8 <HAL_DMA_Init+0x150>
 80085e6:	687b      	ldr	r3, [r7, #4]
 80085e8:	681b      	ldr	r3, [r3, #0]
 80085ea:	681b      	ldr	r3, [r3, #0]
 80085ec:	f003 0301 	and.w	r3, r3, #1
 80085f0:	2b00      	cmp	r3, #0
 80085f2:	d1e8      	bne.n	80085c6 <HAL_DMA_Init+0x3e>
 80085f4:	687b      	ldr	r3, [r7, #4]
 80085f6:	681b      	ldr	r3, [r3, #0]
 80085f8:	681b      	ldr	r3, [r3, #0]
 80085fa:	617b      	str	r3, [r7, #20]
 80085fc:	697a      	ldr	r2, [r7, #20]
 80085fe:	4b38      	ldr	r3, [pc, #224]	; (80086e0 <HAL_DMA_Init+0x158>)
 8008600:	4013      	ands	r3, r2
 8008602:	617b      	str	r3, [r7, #20]
 8008604:	687b      	ldr	r3, [r7, #4]
 8008606:	685a      	ldr	r2, [r3, #4]
 8008608:	687b      	ldr	r3, [r7, #4]
 800860a:	689b      	ldr	r3, [r3, #8]
 800860c:	431a      	orrs	r2, r3
 800860e:	687b      	ldr	r3, [r7, #4]
 8008610:	68db      	ldr	r3, [r3, #12]
 8008612:	431a      	orrs	r2, r3
 8008614:	687b      	ldr	r3, [r7, #4]
 8008616:	691b      	ldr	r3, [r3, #16]
 8008618:	431a      	orrs	r2, r3
 800861a:	687b      	ldr	r3, [r7, #4]
 800861c:	695b      	ldr	r3, [r3, #20]
 800861e:	431a      	orrs	r2, r3
 8008620:	687b      	ldr	r3, [r7, #4]
 8008622:	699b      	ldr	r3, [r3, #24]
 8008624:	431a      	orrs	r2, r3
 8008626:	687b      	ldr	r3, [r7, #4]
 8008628:	69db      	ldr	r3, [r3, #28]
 800862a:	431a      	orrs	r2, r3
 800862c:	687b      	ldr	r3, [r7, #4]
 800862e:	6a1b      	ldr	r3, [r3, #32]
 8008630:	4313      	orrs	r3, r2
 8008632:	697a      	ldr	r2, [r7, #20]
 8008634:	4313      	orrs	r3, r2
 8008636:	617b      	str	r3, [r7, #20]
 8008638:	687b      	ldr	r3, [r7, #4]
 800863a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800863c:	2b04      	cmp	r3, #4
 800863e:	d107      	bne.n	8008650 <HAL_DMA_Init+0xc8>
 8008640:	687b      	ldr	r3, [r7, #4]
 8008642:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008644:	687b      	ldr	r3, [r7, #4]
 8008646:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008648:	4313      	orrs	r3, r2
 800864a:	697a      	ldr	r2, [r7, #20]
 800864c:	4313      	orrs	r3, r2
 800864e:	617b      	str	r3, [r7, #20]
 8008650:	687b      	ldr	r3, [r7, #4]
 8008652:	681b      	ldr	r3, [r3, #0]
 8008654:	697a      	ldr	r2, [r7, #20]
 8008656:	601a      	str	r2, [r3, #0]
 8008658:	687b      	ldr	r3, [r7, #4]
 800865a:	681b      	ldr	r3, [r3, #0]
 800865c:	695b      	ldr	r3, [r3, #20]
 800865e:	617b      	str	r3, [r7, #20]
 8008660:	697b      	ldr	r3, [r7, #20]
 8008662:	f023 0307 	bic.w	r3, r3, #7
 8008666:	617b      	str	r3, [r7, #20]
 8008668:	687b      	ldr	r3, [r7, #4]
 800866a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800866c:	697a      	ldr	r2, [r7, #20]
 800866e:	4313      	orrs	r3, r2
 8008670:	617b      	str	r3, [r7, #20]
 8008672:	687b      	ldr	r3, [r7, #4]
 8008674:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008676:	2b04      	cmp	r3, #4
 8008678:	d117      	bne.n	80086aa <HAL_DMA_Init+0x122>
 800867a:	687b      	ldr	r3, [r7, #4]
 800867c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800867e:	697a      	ldr	r2, [r7, #20]
 8008680:	4313      	orrs	r3, r2
 8008682:	617b      	str	r3, [r7, #20]
 8008684:	687b      	ldr	r3, [r7, #4]
 8008686:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008688:	2b00      	cmp	r3, #0
 800868a:	d00e      	beq.n	80086aa <HAL_DMA_Init+0x122>
 800868c:	6878      	ldr	r0, [r7, #4]
 800868e:	f000 fb01 	bl	8008c94 <DMA_CheckFifoParam>
 8008692:	4603      	mov	r3, r0
 8008694:	2b00      	cmp	r3, #0
 8008696:	d008      	beq.n	80086aa <HAL_DMA_Init+0x122>
 8008698:	687b      	ldr	r3, [r7, #4]
 800869a:	2240      	movs	r2, #64	; 0x40
 800869c:	655a      	str	r2, [r3, #84]	; 0x54
 800869e:	687b      	ldr	r3, [r7, #4]
 80086a0:	2201      	movs	r2, #1
 80086a2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80086a6:	2301      	movs	r3, #1
 80086a8:	e016      	b.n	80086d8 <HAL_DMA_Init+0x150>
 80086aa:	687b      	ldr	r3, [r7, #4]
 80086ac:	681b      	ldr	r3, [r3, #0]
 80086ae:	697a      	ldr	r2, [r7, #20]
 80086b0:	615a      	str	r2, [r3, #20]
 80086b2:	6878      	ldr	r0, [r7, #4]
 80086b4:	f000 fab8 	bl	8008c28 <DMA_CalcBaseAndBitshift>
 80086b8:	4603      	mov	r3, r0
 80086ba:	60fb      	str	r3, [r7, #12]
 80086bc:	687b      	ldr	r3, [r7, #4]
 80086be:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80086c0:	223f      	movs	r2, #63	; 0x3f
 80086c2:	409a      	lsls	r2, r3
 80086c4:	68fb      	ldr	r3, [r7, #12]
 80086c6:	609a      	str	r2, [r3, #8]
 80086c8:	687b      	ldr	r3, [r7, #4]
 80086ca:	2200      	movs	r2, #0
 80086cc:	655a      	str	r2, [r3, #84]	; 0x54
 80086ce:	687b      	ldr	r3, [r7, #4]
 80086d0:	2201      	movs	r2, #1
 80086d2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80086d6:	2300      	movs	r3, #0
 80086d8:	4618      	mov	r0, r3
 80086da:	3718      	adds	r7, #24
 80086dc:	46bd      	mov	sp, r7
 80086de:	bd80      	pop	{r7, pc}
 80086e0:	f010803f 	.word	0xf010803f

080086e4 <HAL_DMA_Start_IT>:
 80086e4:	b580      	push	{r7, lr}
 80086e6:	b086      	sub	sp, #24
 80086e8:	af00      	add	r7, sp, #0
 80086ea:	60f8      	str	r0, [r7, #12]
 80086ec:	60b9      	str	r1, [r7, #8]
 80086ee:	607a      	str	r2, [r7, #4]
 80086f0:	603b      	str	r3, [r7, #0]
 80086f2:	2300      	movs	r3, #0
 80086f4:	75fb      	strb	r3, [r7, #23]
 80086f6:	68fb      	ldr	r3, [r7, #12]
 80086f8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80086fa:	613b      	str	r3, [r7, #16]
 80086fc:	68fb      	ldr	r3, [r7, #12]
 80086fe:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8008702:	2b01      	cmp	r3, #1
 8008704:	d101      	bne.n	800870a <HAL_DMA_Start_IT+0x26>
 8008706:	2302      	movs	r3, #2
 8008708:	e040      	b.n	800878c <HAL_DMA_Start_IT+0xa8>
 800870a:	68fb      	ldr	r3, [r7, #12]
 800870c:	2201      	movs	r2, #1
 800870e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008712:	68fb      	ldr	r3, [r7, #12]
 8008714:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8008718:	b2db      	uxtb	r3, r3
 800871a:	2b01      	cmp	r3, #1
 800871c:	d12f      	bne.n	800877e <HAL_DMA_Start_IT+0x9a>
 800871e:	68fb      	ldr	r3, [r7, #12]
 8008720:	2202      	movs	r2, #2
 8008722:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008726:	68fb      	ldr	r3, [r7, #12]
 8008728:	2200      	movs	r2, #0
 800872a:	655a      	str	r2, [r3, #84]	; 0x54
 800872c:	683b      	ldr	r3, [r7, #0]
 800872e:	687a      	ldr	r2, [r7, #4]
 8008730:	68b9      	ldr	r1, [r7, #8]
 8008732:	68f8      	ldr	r0, [r7, #12]
 8008734:	f000 fa4a 	bl	8008bcc <DMA_SetConfig>
 8008738:	68fb      	ldr	r3, [r7, #12]
 800873a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800873c:	223f      	movs	r2, #63	; 0x3f
 800873e:	409a      	lsls	r2, r3
 8008740:	693b      	ldr	r3, [r7, #16]
 8008742:	609a      	str	r2, [r3, #8]
 8008744:	68fb      	ldr	r3, [r7, #12]
 8008746:	681b      	ldr	r3, [r3, #0]
 8008748:	681a      	ldr	r2, [r3, #0]
 800874a:	68fb      	ldr	r3, [r7, #12]
 800874c:	681b      	ldr	r3, [r3, #0]
 800874e:	f042 0216 	orr.w	r2, r2, #22
 8008752:	601a      	str	r2, [r3, #0]
 8008754:	68fb      	ldr	r3, [r7, #12]
 8008756:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008758:	2b00      	cmp	r3, #0
 800875a:	d007      	beq.n	800876c <HAL_DMA_Start_IT+0x88>
 800875c:	68fb      	ldr	r3, [r7, #12]
 800875e:	681b      	ldr	r3, [r3, #0]
 8008760:	681a      	ldr	r2, [r3, #0]
 8008762:	68fb      	ldr	r3, [r7, #12]
 8008764:	681b      	ldr	r3, [r3, #0]
 8008766:	f042 0208 	orr.w	r2, r2, #8
 800876a:	601a      	str	r2, [r3, #0]
 800876c:	68fb      	ldr	r3, [r7, #12]
 800876e:	681b      	ldr	r3, [r3, #0]
 8008770:	681a      	ldr	r2, [r3, #0]
 8008772:	68fb      	ldr	r3, [r7, #12]
 8008774:	681b      	ldr	r3, [r3, #0]
 8008776:	f042 0201 	orr.w	r2, r2, #1
 800877a:	601a      	str	r2, [r3, #0]
 800877c:	e005      	b.n	800878a <HAL_DMA_Start_IT+0xa6>
 800877e:	68fb      	ldr	r3, [r7, #12]
 8008780:	2200      	movs	r2, #0
 8008782:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008786:	2302      	movs	r3, #2
 8008788:	75fb      	strb	r3, [r7, #23]
 800878a:	7dfb      	ldrb	r3, [r7, #23]
 800878c:	4618      	mov	r0, r3
 800878e:	3718      	adds	r7, #24
 8008790:	46bd      	mov	sp, r7
 8008792:	bd80      	pop	{r7, pc}

08008794 <HAL_DMA_Abort>:
 8008794:	b580      	push	{r7, lr}
 8008796:	b084      	sub	sp, #16
 8008798:	af00      	add	r7, sp, #0
 800879a:	6078      	str	r0, [r7, #4]
 800879c:	687b      	ldr	r3, [r7, #4]
 800879e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80087a0:	60fb      	str	r3, [r7, #12]
 80087a2:	f7ff f807 	bl	80077b4 <HAL_GetTick>
 80087a6:	60b8      	str	r0, [r7, #8]
 80087a8:	687b      	ldr	r3, [r7, #4]
 80087aa:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80087ae:	b2db      	uxtb	r3, r3
 80087b0:	2b02      	cmp	r3, #2
 80087b2:	d008      	beq.n	80087c6 <HAL_DMA_Abort+0x32>
 80087b4:	687b      	ldr	r3, [r7, #4]
 80087b6:	2280      	movs	r2, #128	; 0x80
 80087b8:	655a      	str	r2, [r3, #84]	; 0x54
 80087ba:	687b      	ldr	r3, [r7, #4]
 80087bc:	2200      	movs	r2, #0
 80087be:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80087c2:	2301      	movs	r3, #1
 80087c4:	e052      	b.n	800886c <HAL_DMA_Abort+0xd8>
 80087c6:	687b      	ldr	r3, [r7, #4]
 80087c8:	681b      	ldr	r3, [r3, #0]
 80087ca:	681a      	ldr	r2, [r3, #0]
 80087cc:	687b      	ldr	r3, [r7, #4]
 80087ce:	681b      	ldr	r3, [r3, #0]
 80087d0:	f022 0216 	bic.w	r2, r2, #22
 80087d4:	601a      	str	r2, [r3, #0]
 80087d6:	687b      	ldr	r3, [r7, #4]
 80087d8:	681b      	ldr	r3, [r3, #0]
 80087da:	695a      	ldr	r2, [r3, #20]
 80087dc:	687b      	ldr	r3, [r7, #4]
 80087de:	681b      	ldr	r3, [r3, #0]
 80087e0:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80087e4:	615a      	str	r2, [r3, #20]
 80087e6:	687b      	ldr	r3, [r7, #4]
 80087e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80087ea:	2b00      	cmp	r3, #0
 80087ec:	d103      	bne.n	80087f6 <HAL_DMA_Abort+0x62>
 80087ee:	687b      	ldr	r3, [r7, #4]
 80087f0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80087f2:	2b00      	cmp	r3, #0
 80087f4:	d007      	beq.n	8008806 <HAL_DMA_Abort+0x72>
 80087f6:	687b      	ldr	r3, [r7, #4]
 80087f8:	681b      	ldr	r3, [r3, #0]
 80087fa:	681a      	ldr	r2, [r3, #0]
 80087fc:	687b      	ldr	r3, [r7, #4]
 80087fe:	681b      	ldr	r3, [r3, #0]
 8008800:	f022 0208 	bic.w	r2, r2, #8
 8008804:	601a      	str	r2, [r3, #0]
 8008806:	687b      	ldr	r3, [r7, #4]
 8008808:	681b      	ldr	r3, [r3, #0]
 800880a:	681a      	ldr	r2, [r3, #0]
 800880c:	687b      	ldr	r3, [r7, #4]
 800880e:	681b      	ldr	r3, [r3, #0]
 8008810:	f022 0201 	bic.w	r2, r2, #1
 8008814:	601a      	str	r2, [r3, #0]
 8008816:	e013      	b.n	8008840 <HAL_DMA_Abort+0xac>
 8008818:	f7fe ffcc 	bl	80077b4 <HAL_GetTick>
 800881c:	4602      	mov	r2, r0
 800881e:	68bb      	ldr	r3, [r7, #8]
 8008820:	1ad3      	subs	r3, r2, r3
 8008822:	2b05      	cmp	r3, #5
 8008824:	d90c      	bls.n	8008840 <HAL_DMA_Abort+0xac>
 8008826:	687b      	ldr	r3, [r7, #4]
 8008828:	2220      	movs	r2, #32
 800882a:	655a      	str	r2, [r3, #84]	; 0x54
 800882c:	687b      	ldr	r3, [r7, #4]
 800882e:	2203      	movs	r2, #3
 8008830:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008834:	687b      	ldr	r3, [r7, #4]
 8008836:	2200      	movs	r2, #0
 8008838:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800883c:	2303      	movs	r3, #3
 800883e:	e015      	b.n	800886c <HAL_DMA_Abort+0xd8>
 8008840:	687b      	ldr	r3, [r7, #4]
 8008842:	681b      	ldr	r3, [r3, #0]
 8008844:	681b      	ldr	r3, [r3, #0]
 8008846:	f003 0301 	and.w	r3, r3, #1
 800884a:	2b00      	cmp	r3, #0
 800884c:	d1e4      	bne.n	8008818 <HAL_DMA_Abort+0x84>
 800884e:	687b      	ldr	r3, [r7, #4]
 8008850:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008852:	223f      	movs	r2, #63	; 0x3f
 8008854:	409a      	lsls	r2, r3
 8008856:	68fb      	ldr	r3, [r7, #12]
 8008858:	609a      	str	r2, [r3, #8]
 800885a:	687b      	ldr	r3, [r7, #4]
 800885c:	2201      	movs	r2, #1
 800885e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008862:	687b      	ldr	r3, [r7, #4]
 8008864:	2200      	movs	r2, #0
 8008866:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800886a:	2300      	movs	r3, #0
 800886c:	4618      	mov	r0, r3
 800886e:	3710      	adds	r7, #16
 8008870:	46bd      	mov	sp, r7
 8008872:	bd80      	pop	{r7, pc}

08008874 <HAL_DMA_Abort_IT>:
 8008874:	b480      	push	{r7}
 8008876:	b083      	sub	sp, #12
 8008878:	af00      	add	r7, sp, #0
 800887a:	6078      	str	r0, [r7, #4]
 800887c:	687b      	ldr	r3, [r7, #4]
 800887e:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8008882:	b2db      	uxtb	r3, r3
 8008884:	2b02      	cmp	r3, #2
 8008886:	d004      	beq.n	8008892 <HAL_DMA_Abort_IT+0x1e>
 8008888:	687b      	ldr	r3, [r7, #4]
 800888a:	2280      	movs	r2, #128	; 0x80
 800888c:	655a      	str	r2, [r3, #84]	; 0x54
 800888e:	2301      	movs	r3, #1
 8008890:	e00c      	b.n	80088ac <HAL_DMA_Abort_IT+0x38>
 8008892:	687b      	ldr	r3, [r7, #4]
 8008894:	2205      	movs	r2, #5
 8008896:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800889a:	687b      	ldr	r3, [r7, #4]
 800889c:	681b      	ldr	r3, [r3, #0]
 800889e:	681a      	ldr	r2, [r3, #0]
 80088a0:	687b      	ldr	r3, [r7, #4]
 80088a2:	681b      	ldr	r3, [r3, #0]
 80088a4:	f022 0201 	bic.w	r2, r2, #1
 80088a8:	601a      	str	r2, [r3, #0]
 80088aa:	2300      	movs	r3, #0
 80088ac:	4618      	mov	r0, r3
 80088ae:	370c      	adds	r7, #12
 80088b0:	46bd      	mov	sp, r7
 80088b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088b6:	4770      	bx	lr

080088b8 <HAL_DMA_IRQHandler>:
 80088b8:	b580      	push	{r7, lr}
 80088ba:	b086      	sub	sp, #24
 80088bc:	af00      	add	r7, sp, #0
 80088be:	6078      	str	r0, [r7, #4]
 80088c0:	2300      	movs	r3, #0
 80088c2:	60bb      	str	r3, [r7, #8]
 80088c4:	4b8e      	ldr	r3, [pc, #568]	; (8008b00 <HAL_DMA_IRQHandler+0x248>)
 80088c6:	681b      	ldr	r3, [r3, #0]
 80088c8:	4a8e      	ldr	r2, [pc, #568]	; (8008b04 <HAL_DMA_IRQHandler+0x24c>)
 80088ca:	fba2 2303 	umull	r2, r3, r2, r3
 80088ce:	0a9b      	lsrs	r3, r3, #10
 80088d0:	617b      	str	r3, [r7, #20]
 80088d2:	687b      	ldr	r3, [r7, #4]
 80088d4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80088d6:	613b      	str	r3, [r7, #16]
 80088d8:	693b      	ldr	r3, [r7, #16]
 80088da:	681b      	ldr	r3, [r3, #0]
 80088dc:	60fb      	str	r3, [r7, #12]
 80088de:	687b      	ldr	r3, [r7, #4]
 80088e0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80088e2:	2208      	movs	r2, #8
 80088e4:	409a      	lsls	r2, r3
 80088e6:	68fb      	ldr	r3, [r7, #12]
 80088e8:	4013      	ands	r3, r2
 80088ea:	2b00      	cmp	r3, #0
 80088ec:	d01a      	beq.n	8008924 <HAL_DMA_IRQHandler+0x6c>
 80088ee:	687b      	ldr	r3, [r7, #4]
 80088f0:	681b      	ldr	r3, [r3, #0]
 80088f2:	681b      	ldr	r3, [r3, #0]
 80088f4:	f003 0304 	and.w	r3, r3, #4
 80088f8:	2b00      	cmp	r3, #0
 80088fa:	d013      	beq.n	8008924 <HAL_DMA_IRQHandler+0x6c>
 80088fc:	687b      	ldr	r3, [r7, #4]
 80088fe:	681b      	ldr	r3, [r3, #0]
 8008900:	681a      	ldr	r2, [r3, #0]
 8008902:	687b      	ldr	r3, [r7, #4]
 8008904:	681b      	ldr	r3, [r3, #0]
 8008906:	f022 0204 	bic.w	r2, r2, #4
 800890a:	601a      	str	r2, [r3, #0]
 800890c:	687b      	ldr	r3, [r7, #4]
 800890e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008910:	2208      	movs	r2, #8
 8008912:	409a      	lsls	r2, r3
 8008914:	693b      	ldr	r3, [r7, #16]
 8008916:	609a      	str	r2, [r3, #8]
 8008918:	687b      	ldr	r3, [r7, #4]
 800891a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800891c:	f043 0201 	orr.w	r2, r3, #1
 8008920:	687b      	ldr	r3, [r7, #4]
 8008922:	655a      	str	r2, [r3, #84]	; 0x54
 8008924:	687b      	ldr	r3, [r7, #4]
 8008926:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008928:	2201      	movs	r2, #1
 800892a:	409a      	lsls	r2, r3
 800892c:	68fb      	ldr	r3, [r7, #12]
 800892e:	4013      	ands	r3, r2
 8008930:	2b00      	cmp	r3, #0
 8008932:	d012      	beq.n	800895a <HAL_DMA_IRQHandler+0xa2>
 8008934:	687b      	ldr	r3, [r7, #4]
 8008936:	681b      	ldr	r3, [r3, #0]
 8008938:	695b      	ldr	r3, [r3, #20]
 800893a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800893e:	2b00      	cmp	r3, #0
 8008940:	d00b      	beq.n	800895a <HAL_DMA_IRQHandler+0xa2>
 8008942:	687b      	ldr	r3, [r7, #4]
 8008944:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008946:	2201      	movs	r2, #1
 8008948:	409a      	lsls	r2, r3
 800894a:	693b      	ldr	r3, [r7, #16]
 800894c:	609a      	str	r2, [r3, #8]
 800894e:	687b      	ldr	r3, [r7, #4]
 8008950:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008952:	f043 0202 	orr.w	r2, r3, #2
 8008956:	687b      	ldr	r3, [r7, #4]
 8008958:	655a      	str	r2, [r3, #84]	; 0x54
 800895a:	687b      	ldr	r3, [r7, #4]
 800895c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800895e:	2204      	movs	r2, #4
 8008960:	409a      	lsls	r2, r3
 8008962:	68fb      	ldr	r3, [r7, #12]
 8008964:	4013      	ands	r3, r2
 8008966:	2b00      	cmp	r3, #0
 8008968:	d012      	beq.n	8008990 <HAL_DMA_IRQHandler+0xd8>
 800896a:	687b      	ldr	r3, [r7, #4]
 800896c:	681b      	ldr	r3, [r3, #0]
 800896e:	681b      	ldr	r3, [r3, #0]
 8008970:	f003 0302 	and.w	r3, r3, #2
 8008974:	2b00      	cmp	r3, #0
 8008976:	d00b      	beq.n	8008990 <HAL_DMA_IRQHandler+0xd8>
 8008978:	687b      	ldr	r3, [r7, #4]
 800897a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800897c:	2204      	movs	r2, #4
 800897e:	409a      	lsls	r2, r3
 8008980:	693b      	ldr	r3, [r7, #16]
 8008982:	609a      	str	r2, [r3, #8]
 8008984:	687b      	ldr	r3, [r7, #4]
 8008986:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008988:	f043 0204 	orr.w	r2, r3, #4
 800898c:	687b      	ldr	r3, [r7, #4]
 800898e:	655a      	str	r2, [r3, #84]	; 0x54
 8008990:	687b      	ldr	r3, [r7, #4]
 8008992:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008994:	2210      	movs	r2, #16
 8008996:	409a      	lsls	r2, r3
 8008998:	68fb      	ldr	r3, [r7, #12]
 800899a:	4013      	ands	r3, r2
 800899c:	2b00      	cmp	r3, #0
 800899e:	d043      	beq.n	8008a28 <HAL_DMA_IRQHandler+0x170>
 80089a0:	687b      	ldr	r3, [r7, #4]
 80089a2:	681b      	ldr	r3, [r3, #0]
 80089a4:	681b      	ldr	r3, [r3, #0]
 80089a6:	f003 0308 	and.w	r3, r3, #8
 80089aa:	2b00      	cmp	r3, #0
 80089ac:	d03c      	beq.n	8008a28 <HAL_DMA_IRQHandler+0x170>
 80089ae:	687b      	ldr	r3, [r7, #4]
 80089b0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80089b2:	2210      	movs	r2, #16
 80089b4:	409a      	lsls	r2, r3
 80089b6:	693b      	ldr	r3, [r7, #16]
 80089b8:	609a      	str	r2, [r3, #8]
 80089ba:	687b      	ldr	r3, [r7, #4]
 80089bc:	681b      	ldr	r3, [r3, #0]
 80089be:	681b      	ldr	r3, [r3, #0]
 80089c0:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80089c4:	2b00      	cmp	r3, #0
 80089c6:	d018      	beq.n	80089fa <HAL_DMA_IRQHandler+0x142>
 80089c8:	687b      	ldr	r3, [r7, #4]
 80089ca:	681b      	ldr	r3, [r3, #0]
 80089cc:	681b      	ldr	r3, [r3, #0]
 80089ce:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80089d2:	2b00      	cmp	r3, #0
 80089d4:	d108      	bne.n	80089e8 <HAL_DMA_IRQHandler+0x130>
 80089d6:	687b      	ldr	r3, [r7, #4]
 80089d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80089da:	2b00      	cmp	r3, #0
 80089dc:	d024      	beq.n	8008a28 <HAL_DMA_IRQHandler+0x170>
 80089de:	687b      	ldr	r3, [r7, #4]
 80089e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80089e2:	6878      	ldr	r0, [r7, #4]
 80089e4:	4798      	blx	r3
 80089e6:	e01f      	b.n	8008a28 <HAL_DMA_IRQHandler+0x170>
 80089e8:	687b      	ldr	r3, [r7, #4]
 80089ea:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80089ec:	2b00      	cmp	r3, #0
 80089ee:	d01b      	beq.n	8008a28 <HAL_DMA_IRQHandler+0x170>
 80089f0:	687b      	ldr	r3, [r7, #4]
 80089f2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80089f4:	6878      	ldr	r0, [r7, #4]
 80089f6:	4798      	blx	r3
 80089f8:	e016      	b.n	8008a28 <HAL_DMA_IRQHandler+0x170>
 80089fa:	687b      	ldr	r3, [r7, #4]
 80089fc:	681b      	ldr	r3, [r3, #0]
 80089fe:	681b      	ldr	r3, [r3, #0]
 8008a00:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008a04:	2b00      	cmp	r3, #0
 8008a06:	d107      	bne.n	8008a18 <HAL_DMA_IRQHandler+0x160>
 8008a08:	687b      	ldr	r3, [r7, #4]
 8008a0a:	681b      	ldr	r3, [r3, #0]
 8008a0c:	681a      	ldr	r2, [r3, #0]
 8008a0e:	687b      	ldr	r3, [r7, #4]
 8008a10:	681b      	ldr	r3, [r3, #0]
 8008a12:	f022 0208 	bic.w	r2, r2, #8
 8008a16:	601a      	str	r2, [r3, #0]
 8008a18:	687b      	ldr	r3, [r7, #4]
 8008a1a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008a1c:	2b00      	cmp	r3, #0
 8008a1e:	d003      	beq.n	8008a28 <HAL_DMA_IRQHandler+0x170>
 8008a20:	687b      	ldr	r3, [r7, #4]
 8008a22:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008a24:	6878      	ldr	r0, [r7, #4]
 8008a26:	4798      	blx	r3
 8008a28:	687b      	ldr	r3, [r7, #4]
 8008a2a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008a2c:	2220      	movs	r2, #32
 8008a2e:	409a      	lsls	r2, r3
 8008a30:	68fb      	ldr	r3, [r7, #12]
 8008a32:	4013      	ands	r3, r2
 8008a34:	2b00      	cmp	r3, #0
 8008a36:	f000 808f 	beq.w	8008b58 <HAL_DMA_IRQHandler+0x2a0>
 8008a3a:	687b      	ldr	r3, [r7, #4]
 8008a3c:	681b      	ldr	r3, [r3, #0]
 8008a3e:	681b      	ldr	r3, [r3, #0]
 8008a40:	f003 0310 	and.w	r3, r3, #16
 8008a44:	2b00      	cmp	r3, #0
 8008a46:	f000 8087 	beq.w	8008b58 <HAL_DMA_IRQHandler+0x2a0>
 8008a4a:	687b      	ldr	r3, [r7, #4]
 8008a4c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008a4e:	2220      	movs	r2, #32
 8008a50:	409a      	lsls	r2, r3
 8008a52:	693b      	ldr	r3, [r7, #16]
 8008a54:	609a      	str	r2, [r3, #8]
 8008a56:	687b      	ldr	r3, [r7, #4]
 8008a58:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8008a5c:	b2db      	uxtb	r3, r3
 8008a5e:	2b05      	cmp	r3, #5
 8008a60:	d136      	bne.n	8008ad0 <HAL_DMA_IRQHandler+0x218>
 8008a62:	687b      	ldr	r3, [r7, #4]
 8008a64:	681b      	ldr	r3, [r3, #0]
 8008a66:	681a      	ldr	r2, [r3, #0]
 8008a68:	687b      	ldr	r3, [r7, #4]
 8008a6a:	681b      	ldr	r3, [r3, #0]
 8008a6c:	f022 0216 	bic.w	r2, r2, #22
 8008a70:	601a      	str	r2, [r3, #0]
 8008a72:	687b      	ldr	r3, [r7, #4]
 8008a74:	681b      	ldr	r3, [r3, #0]
 8008a76:	695a      	ldr	r2, [r3, #20]
 8008a78:	687b      	ldr	r3, [r7, #4]
 8008a7a:	681b      	ldr	r3, [r3, #0]
 8008a7c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8008a80:	615a      	str	r2, [r3, #20]
 8008a82:	687b      	ldr	r3, [r7, #4]
 8008a84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008a86:	2b00      	cmp	r3, #0
 8008a88:	d103      	bne.n	8008a92 <HAL_DMA_IRQHandler+0x1da>
 8008a8a:	687b      	ldr	r3, [r7, #4]
 8008a8c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008a8e:	2b00      	cmp	r3, #0
 8008a90:	d007      	beq.n	8008aa2 <HAL_DMA_IRQHandler+0x1ea>
 8008a92:	687b      	ldr	r3, [r7, #4]
 8008a94:	681b      	ldr	r3, [r3, #0]
 8008a96:	681a      	ldr	r2, [r3, #0]
 8008a98:	687b      	ldr	r3, [r7, #4]
 8008a9a:	681b      	ldr	r3, [r3, #0]
 8008a9c:	f022 0208 	bic.w	r2, r2, #8
 8008aa0:	601a      	str	r2, [r3, #0]
 8008aa2:	687b      	ldr	r3, [r7, #4]
 8008aa4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008aa6:	223f      	movs	r2, #63	; 0x3f
 8008aa8:	409a      	lsls	r2, r3
 8008aaa:	693b      	ldr	r3, [r7, #16]
 8008aac:	609a      	str	r2, [r3, #8]
 8008aae:	687b      	ldr	r3, [r7, #4]
 8008ab0:	2201      	movs	r2, #1
 8008ab2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008ab6:	687b      	ldr	r3, [r7, #4]
 8008ab8:	2200      	movs	r2, #0
 8008aba:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008abe:	687b      	ldr	r3, [r7, #4]
 8008ac0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008ac2:	2b00      	cmp	r3, #0
 8008ac4:	d07e      	beq.n	8008bc4 <HAL_DMA_IRQHandler+0x30c>
 8008ac6:	687b      	ldr	r3, [r7, #4]
 8008ac8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008aca:	6878      	ldr	r0, [r7, #4]
 8008acc:	4798      	blx	r3
 8008ace:	e079      	b.n	8008bc4 <HAL_DMA_IRQHandler+0x30c>
 8008ad0:	687b      	ldr	r3, [r7, #4]
 8008ad2:	681b      	ldr	r3, [r3, #0]
 8008ad4:	681b      	ldr	r3, [r3, #0]
 8008ad6:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8008ada:	2b00      	cmp	r3, #0
 8008adc:	d01d      	beq.n	8008b1a <HAL_DMA_IRQHandler+0x262>
 8008ade:	687b      	ldr	r3, [r7, #4]
 8008ae0:	681b      	ldr	r3, [r3, #0]
 8008ae2:	681b      	ldr	r3, [r3, #0]
 8008ae4:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8008ae8:	2b00      	cmp	r3, #0
 8008aea:	d10d      	bne.n	8008b08 <HAL_DMA_IRQHandler+0x250>
 8008aec:	687b      	ldr	r3, [r7, #4]
 8008aee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008af0:	2b00      	cmp	r3, #0
 8008af2:	d031      	beq.n	8008b58 <HAL_DMA_IRQHandler+0x2a0>
 8008af4:	687b      	ldr	r3, [r7, #4]
 8008af6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008af8:	6878      	ldr	r0, [r7, #4]
 8008afa:	4798      	blx	r3
 8008afc:	e02c      	b.n	8008b58 <HAL_DMA_IRQHandler+0x2a0>
 8008afe:	bf00      	nop
 8008b00:	20000134 	.word	0x20000134
 8008b04:	1b4e81b5 	.word	0x1b4e81b5
 8008b08:	687b      	ldr	r3, [r7, #4]
 8008b0a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008b0c:	2b00      	cmp	r3, #0
 8008b0e:	d023      	beq.n	8008b58 <HAL_DMA_IRQHandler+0x2a0>
 8008b10:	687b      	ldr	r3, [r7, #4]
 8008b12:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008b14:	6878      	ldr	r0, [r7, #4]
 8008b16:	4798      	blx	r3
 8008b18:	e01e      	b.n	8008b58 <HAL_DMA_IRQHandler+0x2a0>
 8008b1a:	687b      	ldr	r3, [r7, #4]
 8008b1c:	681b      	ldr	r3, [r3, #0]
 8008b1e:	681b      	ldr	r3, [r3, #0]
 8008b20:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008b24:	2b00      	cmp	r3, #0
 8008b26:	d10f      	bne.n	8008b48 <HAL_DMA_IRQHandler+0x290>
 8008b28:	687b      	ldr	r3, [r7, #4]
 8008b2a:	681b      	ldr	r3, [r3, #0]
 8008b2c:	681a      	ldr	r2, [r3, #0]
 8008b2e:	687b      	ldr	r3, [r7, #4]
 8008b30:	681b      	ldr	r3, [r3, #0]
 8008b32:	f022 0210 	bic.w	r2, r2, #16
 8008b36:	601a      	str	r2, [r3, #0]
 8008b38:	687b      	ldr	r3, [r7, #4]
 8008b3a:	2201      	movs	r2, #1
 8008b3c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008b40:	687b      	ldr	r3, [r7, #4]
 8008b42:	2200      	movs	r2, #0
 8008b44:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008b48:	687b      	ldr	r3, [r7, #4]
 8008b4a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008b4c:	2b00      	cmp	r3, #0
 8008b4e:	d003      	beq.n	8008b58 <HAL_DMA_IRQHandler+0x2a0>
 8008b50:	687b      	ldr	r3, [r7, #4]
 8008b52:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008b54:	6878      	ldr	r0, [r7, #4]
 8008b56:	4798      	blx	r3
 8008b58:	687b      	ldr	r3, [r7, #4]
 8008b5a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008b5c:	2b00      	cmp	r3, #0
 8008b5e:	d032      	beq.n	8008bc6 <HAL_DMA_IRQHandler+0x30e>
 8008b60:	687b      	ldr	r3, [r7, #4]
 8008b62:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008b64:	f003 0301 	and.w	r3, r3, #1
 8008b68:	2b00      	cmp	r3, #0
 8008b6a:	d022      	beq.n	8008bb2 <HAL_DMA_IRQHandler+0x2fa>
 8008b6c:	687b      	ldr	r3, [r7, #4]
 8008b6e:	2205      	movs	r2, #5
 8008b70:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008b74:	687b      	ldr	r3, [r7, #4]
 8008b76:	681b      	ldr	r3, [r3, #0]
 8008b78:	681a      	ldr	r2, [r3, #0]
 8008b7a:	687b      	ldr	r3, [r7, #4]
 8008b7c:	681b      	ldr	r3, [r3, #0]
 8008b7e:	f022 0201 	bic.w	r2, r2, #1
 8008b82:	601a      	str	r2, [r3, #0]
 8008b84:	68bb      	ldr	r3, [r7, #8]
 8008b86:	3301      	adds	r3, #1
 8008b88:	60bb      	str	r3, [r7, #8]
 8008b8a:	697a      	ldr	r2, [r7, #20]
 8008b8c:	429a      	cmp	r2, r3
 8008b8e:	d307      	bcc.n	8008ba0 <HAL_DMA_IRQHandler+0x2e8>
 8008b90:	687b      	ldr	r3, [r7, #4]
 8008b92:	681b      	ldr	r3, [r3, #0]
 8008b94:	681b      	ldr	r3, [r3, #0]
 8008b96:	f003 0301 	and.w	r3, r3, #1
 8008b9a:	2b00      	cmp	r3, #0
 8008b9c:	d1f2      	bne.n	8008b84 <HAL_DMA_IRQHandler+0x2cc>
 8008b9e:	e000      	b.n	8008ba2 <HAL_DMA_IRQHandler+0x2ea>
 8008ba0:	bf00      	nop
 8008ba2:	687b      	ldr	r3, [r7, #4]
 8008ba4:	2201      	movs	r2, #1
 8008ba6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008baa:	687b      	ldr	r3, [r7, #4]
 8008bac:	2200      	movs	r2, #0
 8008bae:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008bb2:	687b      	ldr	r3, [r7, #4]
 8008bb4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008bb6:	2b00      	cmp	r3, #0
 8008bb8:	d005      	beq.n	8008bc6 <HAL_DMA_IRQHandler+0x30e>
 8008bba:	687b      	ldr	r3, [r7, #4]
 8008bbc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008bbe:	6878      	ldr	r0, [r7, #4]
 8008bc0:	4798      	blx	r3
 8008bc2:	e000      	b.n	8008bc6 <HAL_DMA_IRQHandler+0x30e>
 8008bc4:	bf00      	nop
 8008bc6:	3718      	adds	r7, #24
 8008bc8:	46bd      	mov	sp, r7
 8008bca:	bd80      	pop	{r7, pc}

08008bcc <DMA_SetConfig>:
 8008bcc:	b480      	push	{r7}
 8008bce:	b085      	sub	sp, #20
 8008bd0:	af00      	add	r7, sp, #0
 8008bd2:	60f8      	str	r0, [r7, #12]
 8008bd4:	60b9      	str	r1, [r7, #8]
 8008bd6:	607a      	str	r2, [r7, #4]
 8008bd8:	603b      	str	r3, [r7, #0]
 8008bda:	68fb      	ldr	r3, [r7, #12]
 8008bdc:	681b      	ldr	r3, [r3, #0]
 8008bde:	681a      	ldr	r2, [r3, #0]
 8008be0:	68fb      	ldr	r3, [r7, #12]
 8008be2:	681b      	ldr	r3, [r3, #0]
 8008be4:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8008be8:	601a      	str	r2, [r3, #0]
 8008bea:	68fb      	ldr	r3, [r7, #12]
 8008bec:	681b      	ldr	r3, [r3, #0]
 8008bee:	683a      	ldr	r2, [r7, #0]
 8008bf0:	605a      	str	r2, [r3, #4]
 8008bf2:	68fb      	ldr	r3, [r7, #12]
 8008bf4:	689b      	ldr	r3, [r3, #8]
 8008bf6:	2b40      	cmp	r3, #64	; 0x40
 8008bf8:	d108      	bne.n	8008c0c <DMA_SetConfig+0x40>
 8008bfa:	68fb      	ldr	r3, [r7, #12]
 8008bfc:	681b      	ldr	r3, [r3, #0]
 8008bfe:	687a      	ldr	r2, [r7, #4]
 8008c00:	609a      	str	r2, [r3, #8]
 8008c02:	68fb      	ldr	r3, [r7, #12]
 8008c04:	681b      	ldr	r3, [r3, #0]
 8008c06:	68ba      	ldr	r2, [r7, #8]
 8008c08:	60da      	str	r2, [r3, #12]
 8008c0a:	e007      	b.n	8008c1c <DMA_SetConfig+0x50>
 8008c0c:	68fb      	ldr	r3, [r7, #12]
 8008c0e:	681b      	ldr	r3, [r3, #0]
 8008c10:	68ba      	ldr	r2, [r7, #8]
 8008c12:	609a      	str	r2, [r3, #8]
 8008c14:	68fb      	ldr	r3, [r7, #12]
 8008c16:	681b      	ldr	r3, [r3, #0]
 8008c18:	687a      	ldr	r2, [r7, #4]
 8008c1a:	60da      	str	r2, [r3, #12]
 8008c1c:	bf00      	nop
 8008c1e:	3714      	adds	r7, #20
 8008c20:	46bd      	mov	sp, r7
 8008c22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c26:	4770      	bx	lr

08008c28 <DMA_CalcBaseAndBitshift>:
 8008c28:	b480      	push	{r7}
 8008c2a:	b085      	sub	sp, #20
 8008c2c:	af00      	add	r7, sp, #0
 8008c2e:	6078      	str	r0, [r7, #4]
 8008c30:	687b      	ldr	r3, [r7, #4]
 8008c32:	681b      	ldr	r3, [r3, #0]
 8008c34:	b2db      	uxtb	r3, r3
 8008c36:	3b10      	subs	r3, #16
 8008c38:	4a14      	ldr	r2, [pc, #80]	; (8008c8c <DMA_CalcBaseAndBitshift+0x64>)
 8008c3a:	fba2 2303 	umull	r2, r3, r2, r3
 8008c3e:	091b      	lsrs	r3, r3, #4
 8008c40:	60fb      	str	r3, [r7, #12]
 8008c42:	4a13      	ldr	r2, [pc, #76]	; (8008c90 <DMA_CalcBaseAndBitshift+0x68>)
 8008c44:	68fb      	ldr	r3, [r7, #12]
 8008c46:	4413      	add	r3, r2
 8008c48:	781b      	ldrb	r3, [r3, #0]
 8008c4a:	461a      	mov	r2, r3
 8008c4c:	687b      	ldr	r3, [r7, #4]
 8008c4e:	65da      	str	r2, [r3, #92]	; 0x5c
 8008c50:	68fb      	ldr	r3, [r7, #12]
 8008c52:	2b03      	cmp	r3, #3
 8008c54:	d909      	bls.n	8008c6a <DMA_CalcBaseAndBitshift+0x42>
 8008c56:	687b      	ldr	r3, [r7, #4]
 8008c58:	681b      	ldr	r3, [r3, #0]
 8008c5a:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8008c5e:	f023 0303 	bic.w	r3, r3, #3
 8008c62:	1d1a      	adds	r2, r3, #4
 8008c64:	687b      	ldr	r3, [r7, #4]
 8008c66:	659a      	str	r2, [r3, #88]	; 0x58
 8008c68:	e007      	b.n	8008c7a <DMA_CalcBaseAndBitshift+0x52>
 8008c6a:	687b      	ldr	r3, [r7, #4]
 8008c6c:	681b      	ldr	r3, [r3, #0]
 8008c6e:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8008c72:	f023 0303 	bic.w	r3, r3, #3
 8008c76:	687a      	ldr	r2, [r7, #4]
 8008c78:	6593      	str	r3, [r2, #88]	; 0x58
 8008c7a:	687b      	ldr	r3, [r7, #4]
 8008c7c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008c7e:	4618      	mov	r0, r3
 8008c80:	3714      	adds	r7, #20
 8008c82:	46bd      	mov	sp, r7
 8008c84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c88:	4770      	bx	lr
 8008c8a:	bf00      	nop
 8008c8c:	aaaaaaab 	.word	0xaaaaaaab
 8008c90:	0801157c 	.word	0x0801157c

08008c94 <DMA_CheckFifoParam>:
 8008c94:	b480      	push	{r7}
 8008c96:	b085      	sub	sp, #20
 8008c98:	af00      	add	r7, sp, #0
 8008c9a:	6078      	str	r0, [r7, #4]
 8008c9c:	2300      	movs	r3, #0
 8008c9e:	73fb      	strb	r3, [r7, #15]
 8008ca0:	687b      	ldr	r3, [r7, #4]
 8008ca2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008ca4:	60bb      	str	r3, [r7, #8]
 8008ca6:	687b      	ldr	r3, [r7, #4]
 8008ca8:	699b      	ldr	r3, [r3, #24]
 8008caa:	2b00      	cmp	r3, #0
 8008cac:	d11f      	bne.n	8008cee <DMA_CheckFifoParam+0x5a>
 8008cae:	68bb      	ldr	r3, [r7, #8]
 8008cb0:	2b03      	cmp	r3, #3
 8008cb2:	d856      	bhi.n	8008d62 <DMA_CheckFifoParam+0xce>
 8008cb4:	a201      	add	r2, pc, #4	; (adr r2, 8008cbc <DMA_CheckFifoParam+0x28>)
 8008cb6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008cba:	bf00      	nop
 8008cbc:	08008ccd 	.word	0x08008ccd
 8008cc0:	08008cdf 	.word	0x08008cdf
 8008cc4:	08008ccd 	.word	0x08008ccd
 8008cc8:	08008d63 	.word	0x08008d63
 8008ccc:	687b      	ldr	r3, [r7, #4]
 8008cce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008cd0:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8008cd4:	2b00      	cmp	r3, #0
 8008cd6:	d046      	beq.n	8008d66 <DMA_CheckFifoParam+0xd2>
 8008cd8:	2301      	movs	r3, #1
 8008cda:	73fb      	strb	r3, [r7, #15]
 8008cdc:	e043      	b.n	8008d66 <DMA_CheckFifoParam+0xd2>
 8008cde:	687b      	ldr	r3, [r7, #4]
 8008ce0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008ce2:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8008ce6:	d140      	bne.n	8008d6a <DMA_CheckFifoParam+0xd6>
 8008ce8:	2301      	movs	r3, #1
 8008cea:	73fb      	strb	r3, [r7, #15]
 8008cec:	e03d      	b.n	8008d6a <DMA_CheckFifoParam+0xd6>
 8008cee:	687b      	ldr	r3, [r7, #4]
 8008cf0:	699b      	ldr	r3, [r3, #24]
 8008cf2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008cf6:	d121      	bne.n	8008d3c <DMA_CheckFifoParam+0xa8>
 8008cf8:	68bb      	ldr	r3, [r7, #8]
 8008cfa:	2b03      	cmp	r3, #3
 8008cfc:	d837      	bhi.n	8008d6e <DMA_CheckFifoParam+0xda>
 8008cfe:	a201      	add	r2, pc, #4	; (adr r2, 8008d04 <DMA_CheckFifoParam+0x70>)
 8008d00:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008d04:	08008d15 	.word	0x08008d15
 8008d08:	08008d1b 	.word	0x08008d1b
 8008d0c:	08008d15 	.word	0x08008d15
 8008d10:	08008d2d 	.word	0x08008d2d
 8008d14:	2301      	movs	r3, #1
 8008d16:	73fb      	strb	r3, [r7, #15]
 8008d18:	e030      	b.n	8008d7c <DMA_CheckFifoParam+0xe8>
 8008d1a:	687b      	ldr	r3, [r7, #4]
 8008d1c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008d1e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8008d22:	2b00      	cmp	r3, #0
 8008d24:	d025      	beq.n	8008d72 <DMA_CheckFifoParam+0xde>
 8008d26:	2301      	movs	r3, #1
 8008d28:	73fb      	strb	r3, [r7, #15]
 8008d2a:	e022      	b.n	8008d72 <DMA_CheckFifoParam+0xde>
 8008d2c:	687b      	ldr	r3, [r7, #4]
 8008d2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008d30:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8008d34:	d11f      	bne.n	8008d76 <DMA_CheckFifoParam+0xe2>
 8008d36:	2301      	movs	r3, #1
 8008d38:	73fb      	strb	r3, [r7, #15]
 8008d3a:	e01c      	b.n	8008d76 <DMA_CheckFifoParam+0xe2>
 8008d3c:	68bb      	ldr	r3, [r7, #8]
 8008d3e:	2b02      	cmp	r3, #2
 8008d40:	d903      	bls.n	8008d4a <DMA_CheckFifoParam+0xb6>
 8008d42:	68bb      	ldr	r3, [r7, #8]
 8008d44:	2b03      	cmp	r3, #3
 8008d46:	d003      	beq.n	8008d50 <DMA_CheckFifoParam+0xbc>
 8008d48:	e018      	b.n	8008d7c <DMA_CheckFifoParam+0xe8>
 8008d4a:	2301      	movs	r3, #1
 8008d4c:	73fb      	strb	r3, [r7, #15]
 8008d4e:	e015      	b.n	8008d7c <DMA_CheckFifoParam+0xe8>
 8008d50:	687b      	ldr	r3, [r7, #4]
 8008d52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008d54:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8008d58:	2b00      	cmp	r3, #0
 8008d5a:	d00e      	beq.n	8008d7a <DMA_CheckFifoParam+0xe6>
 8008d5c:	2301      	movs	r3, #1
 8008d5e:	73fb      	strb	r3, [r7, #15]
 8008d60:	e00b      	b.n	8008d7a <DMA_CheckFifoParam+0xe6>
 8008d62:	bf00      	nop
 8008d64:	e00a      	b.n	8008d7c <DMA_CheckFifoParam+0xe8>
 8008d66:	bf00      	nop
 8008d68:	e008      	b.n	8008d7c <DMA_CheckFifoParam+0xe8>
 8008d6a:	bf00      	nop
 8008d6c:	e006      	b.n	8008d7c <DMA_CheckFifoParam+0xe8>
 8008d6e:	bf00      	nop
 8008d70:	e004      	b.n	8008d7c <DMA_CheckFifoParam+0xe8>
 8008d72:	bf00      	nop
 8008d74:	e002      	b.n	8008d7c <DMA_CheckFifoParam+0xe8>
 8008d76:	bf00      	nop
 8008d78:	e000      	b.n	8008d7c <DMA_CheckFifoParam+0xe8>
 8008d7a:	bf00      	nop
 8008d7c:	7bfb      	ldrb	r3, [r7, #15]
 8008d7e:	4618      	mov	r0, r3
 8008d80:	3714      	adds	r7, #20
 8008d82:	46bd      	mov	sp, r7
 8008d84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d88:	4770      	bx	lr
 8008d8a:	bf00      	nop

08008d8c <HAL_FLASH_Program>:
 8008d8c:	b580      	push	{r7, lr}
 8008d8e:	b086      	sub	sp, #24
 8008d90:	af00      	add	r7, sp, #0
 8008d92:	60f8      	str	r0, [r7, #12]
 8008d94:	60b9      	str	r1, [r7, #8]
 8008d96:	e9c7 2300 	strd	r2, r3, [r7]
 8008d9a:	2301      	movs	r3, #1
 8008d9c:	75fb      	strb	r3, [r7, #23]
 8008d9e:	4b23      	ldr	r3, [pc, #140]	; (8008e2c <HAL_FLASH_Program+0xa0>)
 8008da0:	7e1b      	ldrb	r3, [r3, #24]
 8008da2:	2b01      	cmp	r3, #1
 8008da4:	d101      	bne.n	8008daa <HAL_FLASH_Program+0x1e>
 8008da6:	2302      	movs	r3, #2
 8008da8:	e03b      	b.n	8008e22 <HAL_FLASH_Program+0x96>
 8008daa:	4b20      	ldr	r3, [pc, #128]	; (8008e2c <HAL_FLASH_Program+0xa0>)
 8008dac:	2201      	movs	r2, #1
 8008dae:	761a      	strb	r2, [r3, #24]
 8008db0:	f24c 3050 	movw	r0, #50000	; 0xc350
 8008db4:	f000 f870 	bl	8008e98 <FLASH_WaitForLastOperation>
 8008db8:	4603      	mov	r3, r0
 8008dba:	75fb      	strb	r3, [r7, #23]
 8008dbc:	7dfb      	ldrb	r3, [r7, #23]
 8008dbe:	2b00      	cmp	r3, #0
 8008dc0:	d12b      	bne.n	8008e1a <HAL_FLASH_Program+0x8e>
 8008dc2:	68fb      	ldr	r3, [r7, #12]
 8008dc4:	2b00      	cmp	r3, #0
 8008dc6:	d105      	bne.n	8008dd4 <HAL_FLASH_Program+0x48>
 8008dc8:	783b      	ldrb	r3, [r7, #0]
 8008dca:	4619      	mov	r1, r3
 8008dcc:	68b8      	ldr	r0, [r7, #8]
 8008dce:	f000 f91b 	bl	8009008 <FLASH_Program_Byte>
 8008dd2:	e016      	b.n	8008e02 <HAL_FLASH_Program+0x76>
 8008dd4:	68fb      	ldr	r3, [r7, #12]
 8008dd6:	2b01      	cmp	r3, #1
 8008dd8:	d105      	bne.n	8008de6 <HAL_FLASH_Program+0x5a>
 8008dda:	883b      	ldrh	r3, [r7, #0]
 8008ddc:	4619      	mov	r1, r3
 8008dde:	68b8      	ldr	r0, [r7, #8]
 8008de0:	f000 f8ee 	bl	8008fc0 <FLASH_Program_HalfWord>
 8008de4:	e00d      	b.n	8008e02 <HAL_FLASH_Program+0x76>
 8008de6:	68fb      	ldr	r3, [r7, #12]
 8008de8:	2b02      	cmp	r3, #2
 8008dea:	d105      	bne.n	8008df8 <HAL_FLASH_Program+0x6c>
 8008dec:	683b      	ldr	r3, [r7, #0]
 8008dee:	4619      	mov	r1, r3
 8008df0:	68b8      	ldr	r0, [r7, #8]
 8008df2:	f000 f8c3 	bl	8008f7c <FLASH_Program_Word>
 8008df6:	e004      	b.n	8008e02 <HAL_FLASH_Program+0x76>
 8008df8:	e9d7 2300 	ldrd	r2, r3, [r7]
 8008dfc:	68b8      	ldr	r0, [r7, #8]
 8008dfe:	f000 f88b 	bl	8008f18 <FLASH_Program_DoubleWord>
 8008e02:	f24c 3050 	movw	r0, #50000	; 0xc350
 8008e06:	f000 f847 	bl	8008e98 <FLASH_WaitForLastOperation>
 8008e0a:	4603      	mov	r3, r0
 8008e0c:	75fb      	strb	r3, [r7, #23]
 8008e0e:	4b08      	ldr	r3, [pc, #32]	; (8008e30 <HAL_FLASH_Program+0xa4>)
 8008e10:	691b      	ldr	r3, [r3, #16]
 8008e12:	4a07      	ldr	r2, [pc, #28]	; (8008e30 <HAL_FLASH_Program+0xa4>)
 8008e14:	f023 0301 	bic.w	r3, r3, #1
 8008e18:	6113      	str	r3, [r2, #16]
 8008e1a:	4b04      	ldr	r3, [pc, #16]	; (8008e2c <HAL_FLASH_Program+0xa0>)
 8008e1c:	2200      	movs	r2, #0
 8008e1e:	761a      	strb	r2, [r3, #24]
 8008e20:	7dfb      	ldrb	r3, [r7, #23]
 8008e22:	4618      	mov	r0, r3
 8008e24:	3718      	adds	r7, #24
 8008e26:	46bd      	mov	sp, r7
 8008e28:	bd80      	pop	{r7, pc}
 8008e2a:	bf00      	nop
 8008e2c:	20000c6c 	.word	0x20000c6c
 8008e30:	40023c00 	.word	0x40023c00

08008e34 <HAL_FLASH_Unlock>:
 8008e34:	b480      	push	{r7}
 8008e36:	b083      	sub	sp, #12
 8008e38:	af00      	add	r7, sp, #0
 8008e3a:	2300      	movs	r3, #0
 8008e3c:	71fb      	strb	r3, [r7, #7]
 8008e3e:	4b0b      	ldr	r3, [pc, #44]	; (8008e6c <HAL_FLASH_Unlock+0x38>)
 8008e40:	691b      	ldr	r3, [r3, #16]
 8008e42:	2b00      	cmp	r3, #0
 8008e44:	da0b      	bge.n	8008e5e <HAL_FLASH_Unlock+0x2a>
 8008e46:	4b09      	ldr	r3, [pc, #36]	; (8008e6c <HAL_FLASH_Unlock+0x38>)
 8008e48:	4a09      	ldr	r2, [pc, #36]	; (8008e70 <HAL_FLASH_Unlock+0x3c>)
 8008e4a:	605a      	str	r2, [r3, #4]
 8008e4c:	4b07      	ldr	r3, [pc, #28]	; (8008e6c <HAL_FLASH_Unlock+0x38>)
 8008e4e:	4a09      	ldr	r2, [pc, #36]	; (8008e74 <HAL_FLASH_Unlock+0x40>)
 8008e50:	605a      	str	r2, [r3, #4]
 8008e52:	4b06      	ldr	r3, [pc, #24]	; (8008e6c <HAL_FLASH_Unlock+0x38>)
 8008e54:	691b      	ldr	r3, [r3, #16]
 8008e56:	2b00      	cmp	r3, #0
 8008e58:	da01      	bge.n	8008e5e <HAL_FLASH_Unlock+0x2a>
 8008e5a:	2301      	movs	r3, #1
 8008e5c:	71fb      	strb	r3, [r7, #7]
 8008e5e:	79fb      	ldrb	r3, [r7, #7]
 8008e60:	4618      	mov	r0, r3
 8008e62:	370c      	adds	r7, #12
 8008e64:	46bd      	mov	sp, r7
 8008e66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e6a:	4770      	bx	lr
 8008e6c:	40023c00 	.word	0x40023c00
 8008e70:	45670123 	.word	0x45670123
 8008e74:	cdef89ab 	.word	0xcdef89ab

08008e78 <HAL_FLASH_Lock>:
 8008e78:	b480      	push	{r7}
 8008e7a:	af00      	add	r7, sp, #0
 8008e7c:	4b05      	ldr	r3, [pc, #20]	; (8008e94 <HAL_FLASH_Lock+0x1c>)
 8008e7e:	691b      	ldr	r3, [r3, #16]
 8008e80:	4a04      	ldr	r2, [pc, #16]	; (8008e94 <HAL_FLASH_Lock+0x1c>)
 8008e82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8008e86:	6113      	str	r3, [r2, #16]
 8008e88:	2300      	movs	r3, #0
 8008e8a:	4618      	mov	r0, r3
 8008e8c:	46bd      	mov	sp, r7
 8008e8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e92:	4770      	bx	lr
 8008e94:	40023c00 	.word	0x40023c00

08008e98 <FLASH_WaitForLastOperation>:
 8008e98:	b580      	push	{r7, lr}
 8008e9a:	b084      	sub	sp, #16
 8008e9c:	af00      	add	r7, sp, #0
 8008e9e:	6078      	str	r0, [r7, #4]
 8008ea0:	2300      	movs	r3, #0
 8008ea2:	60fb      	str	r3, [r7, #12]
 8008ea4:	4b1a      	ldr	r3, [pc, #104]	; (8008f10 <FLASH_WaitForLastOperation+0x78>)
 8008ea6:	2200      	movs	r2, #0
 8008ea8:	61da      	str	r2, [r3, #28]
 8008eaa:	f7fe fc83 	bl	80077b4 <HAL_GetTick>
 8008eae:	60f8      	str	r0, [r7, #12]
 8008eb0:	e010      	b.n	8008ed4 <FLASH_WaitForLastOperation+0x3c>
 8008eb2:	687b      	ldr	r3, [r7, #4]
 8008eb4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008eb8:	d00c      	beq.n	8008ed4 <FLASH_WaitForLastOperation+0x3c>
 8008eba:	687b      	ldr	r3, [r7, #4]
 8008ebc:	2b00      	cmp	r3, #0
 8008ebe:	d007      	beq.n	8008ed0 <FLASH_WaitForLastOperation+0x38>
 8008ec0:	f7fe fc78 	bl	80077b4 <HAL_GetTick>
 8008ec4:	4602      	mov	r2, r0
 8008ec6:	68fb      	ldr	r3, [r7, #12]
 8008ec8:	1ad3      	subs	r3, r2, r3
 8008eca:	687a      	ldr	r2, [r7, #4]
 8008ecc:	429a      	cmp	r2, r3
 8008ece:	d201      	bcs.n	8008ed4 <FLASH_WaitForLastOperation+0x3c>
 8008ed0:	2303      	movs	r3, #3
 8008ed2:	e019      	b.n	8008f08 <FLASH_WaitForLastOperation+0x70>
 8008ed4:	4b0f      	ldr	r3, [pc, #60]	; (8008f14 <FLASH_WaitForLastOperation+0x7c>)
 8008ed6:	68db      	ldr	r3, [r3, #12]
 8008ed8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8008edc:	2b00      	cmp	r3, #0
 8008ede:	d1e8      	bne.n	8008eb2 <FLASH_WaitForLastOperation+0x1a>
 8008ee0:	4b0c      	ldr	r3, [pc, #48]	; (8008f14 <FLASH_WaitForLastOperation+0x7c>)
 8008ee2:	68db      	ldr	r3, [r3, #12]
 8008ee4:	f003 0301 	and.w	r3, r3, #1
 8008ee8:	2b00      	cmp	r3, #0
 8008eea:	d002      	beq.n	8008ef2 <FLASH_WaitForLastOperation+0x5a>
 8008eec:	4b09      	ldr	r3, [pc, #36]	; (8008f14 <FLASH_WaitForLastOperation+0x7c>)
 8008eee:	2201      	movs	r2, #1
 8008ef0:	60da      	str	r2, [r3, #12]
 8008ef2:	4b08      	ldr	r3, [pc, #32]	; (8008f14 <FLASH_WaitForLastOperation+0x7c>)
 8008ef4:	68db      	ldr	r3, [r3, #12]
 8008ef6:	f403 73f9 	and.w	r3, r3, #498	; 0x1f2
 8008efa:	2b00      	cmp	r3, #0
 8008efc:	d003      	beq.n	8008f06 <FLASH_WaitForLastOperation+0x6e>
 8008efe:	f000 f8a5 	bl	800904c <FLASH_SetErrorCode>
 8008f02:	2301      	movs	r3, #1
 8008f04:	e000      	b.n	8008f08 <FLASH_WaitForLastOperation+0x70>
 8008f06:	2300      	movs	r3, #0
 8008f08:	4618      	mov	r0, r3
 8008f0a:	3710      	adds	r7, #16
 8008f0c:	46bd      	mov	sp, r7
 8008f0e:	bd80      	pop	{r7, pc}
 8008f10:	20000c6c 	.word	0x20000c6c
 8008f14:	40023c00 	.word	0x40023c00

08008f18 <FLASH_Program_DoubleWord>:
 8008f18:	b480      	push	{r7}
 8008f1a:	b085      	sub	sp, #20
 8008f1c:	af00      	add	r7, sp, #0
 8008f1e:	60f8      	str	r0, [r7, #12]
 8008f20:	e9c7 2300 	strd	r2, r3, [r7]
 8008f24:	4b14      	ldr	r3, [pc, #80]	; (8008f78 <FLASH_Program_DoubleWord+0x60>)
 8008f26:	691b      	ldr	r3, [r3, #16]
 8008f28:	4a13      	ldr	r2, [pc, #76]	; (8008f78 <FLASH_Program_DoubleWord+0x60>)
 8008f2a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008f2e:	6113      	str	r3, [r2, #16]
 8008f30:	4b11      	ldr	r3, [pc, #68]	; (8008f78 <FLASH_Program_DoubleWord+0x60>)
 8008f32:	691b      	ldr	r3, [r3, #16]
 8008f34:	4a10      	ldr	r2, [pc, #64]	; (8008f78 <FLASH_Program_DoubleWord+0x60>)
 8008f36:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8008f3a:	6113      	str	r3, [r2, #16]
 8008f3c:	4b0e      	ldr	r3, [pc, #56]	; (8008f78 <FLASH_Program_DoubleWord+0x60>)
 8008f3e:	691b      	ldr	r3, [r3, #16]
 8008f40:	4a0d      	ldr	r2, [pc, #52]	; (8008f78 <FLASH_Program_DoubleWord+0x60>)
 8008f42:	f043 0301 	orr.w	r3, r3, #1
 8008f46:	6113      	str	r3, [r2, #16]
 8008f48:	68fb      	ldr	r3, [r7, #12]
 8008f4a:	683a      	ldr	r2, [r7, #0]
 8008f4c:	601a      	str	r2, [r3, #0]
 8008f4e:	f3bf 8f6f 	isb	sy
 8008f52:	bf00      	nop
 8008f54:	e9d7 0100 	ldrd	r0, r1, [r7]
 8008f58:	f04f 0200 	mov.w	r2, #0
 8008f5c:	f04f 0300 	mov.w	r3, #0
 8008f60:	000a      	movs	r2, r1
 8008f62:	2300      	movs	r3, #0
 8008f64:	68f9      	ldr	r1, [r7, #12]
 8008f66:	3104      	adds	r1, #4
 8008f68:	4613      	mov	r3, r2
 8008f6a:	600b      	str	r3, [r1, #0]
 8008f6c:	bf00      	nop
 8008f6e:	3714      	adds	r7, #20
 8008f70:	46bd      	mov	sp, r7
 8008f72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f76:	4770      	bx	lr
 8008f78:	40023c00 	.word	0x40023c00

08008f7c <FLASH_Program_Word>:
 8008f7c:	b480      	push	{r7}
 8008f7e:	b083      	sub	sp, #12
 8008f80:	af00      	add	r7, sp, #0
 8008f82:	6078      	str	r0, [r7, #4]
 8008f84:	6039      	str	r1, [r7, #0]
 8008f86:	4b0d      	ldr	r3, [pc, #52]	; (8008fbc <FLASH_Program_Word+0x40>)
 8008f88:	691b      	ldr	r3, [r3, #16]
 8008f8a:	4a0c      	ldr	r2, [pc, #48]	; (8008fbc <FLASH_Program_Word+0x40>)
 8008f8c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008f90:	6113      	str	r3, [r2, #16]
 8008f92:	4b0a      	ldr	r3, [pc, #40]	; (8008fbc <FLASH_Program_Word+0x40>)
 8008f94:	691b      	ldr	r3, [r3, #16]
 8008f96:	4a09      	ldr	r2, [pc, #36]	; (8008fbc <FLASH_Program_Word+0x40>)
 8008f98:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8008f9c:	6113      	str	r3, [r2, #16]
 8008f9e:	4b07      	ldr	r3, [pc, #28]	; (8008fbc <FLASH_Program_Word+0x40>)
 8008fa0:	691b      	ldr	r3, [r3, #16]
 8008fa2:	4a06      	ldr	r2, [pc, #24]	; (8008fbc <FLASH_Program_Word+0x40>)
 8008fa4:	f043 0301 	orr.w	r3, r3, #1
 8008fa8:	6113      	str	r3, [r2, #16]
 8008faa:	687b      	ldr	r3, [r7, #4]
 8008fac:	683a      	ldr	r2, [r7, #0]
 8008fae:	601a      	str	r2, [r3, #0]
 8008fb0:	bf00      	nop
 8008fb2:	370c      	adds	r7, #12
 8008fb4:	46bd      	mov	sp, r7
 8008fb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fba:	4770      	bx	lr
 8008fbc:	40023c00 	.word	0x40023c00

08008fc0 <FLASH_Program_HalfWord>:
 8008fc0:	b480      	push	{r7}
 8008fc2:	b083      	sub	sp, #12
 8008fc4:	af00      	add	r7, sp, #0
 8008fc6:	6078      	str	r0, [r7, #4]
 8008fc8:	460b      	mov	r3, r1
 8008fca:	807b      	strh	r3, [r7, #2]
 8008fcc:	4b0d      	ldr	r3, [pc, #52]	; (8009004 <FLASH_Program_HalfWord+0x44>)
 8008fce:	691b      	ldr	r3, [r3, #16]
 8008fd0:	4a0c      	ldr	r2, [pc, #48]	; (8009004 <FLASH_Program_HalfWord+0x44>)
 8008fd2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008fd6:	6113      	str	r3, [r2, #16]
 8008fd8:	4b0a      	ldr	r3, [pc, #40]	; (8009004 <FLASH_Program_HalfWord+0x44>)
 8008fda:	691b      	ldr	r3, [r3, #16]
 8008fdc:	4a09      	ldr	r2, [pc, #36]	; (8009004 <FLASH_Program_HalfWord+0x44>)
 8008fde:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008fe2:	6113      	str	r3, [r2, #16]
 8008fe4:	4b07      	ldr	r3, [pc, #28]	; (8009004 <FLASH_Program_HalfWord+0x44>)
 8008fe6:	691b      	ldr	r3, [r3, #16]
 8008fe8:	4a06      	ldr	r2, [pc, #24]	; (8009004 <FLASH_Program_HalfWord+0x44>)
 8008fea:	f043 0301 	orr.w	r3, r3, #1
 8008fee:	6113      	str	r3, [r2, #16]
 8008ff0:	687b      	ldr	r3, [r7, #4]
 8008ff2:	887a      	ldrh	r2, [r7, #2]
 8008ff4:	801a      	strh	r2, [r3, #0]
 8008ff6:	bf00      	nop
 8008ff8:	370c      	adds	r7, #12
 8008ffa:	46bd      	mov	sp, r7
 8008ffc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009000:	4770      	bx	lr
 8009002:	bf00      	nop
 8009004:	40023c00 	.word	0x40023c00

08009008 <FLASH_Program_Byte>:
 8009008:	b480      	push	{r7}
 800900a:	b083      	sub	sp, #12
 800900c:	af00      	add	r7, sp, #0
 800900e:	6078      	str	r0, [r7, #4]
 8009010:	460b      	mov	r3, r1
 8009012:	70fb      	strb	r3, [r7, #3]
 8009014:	4b0c      	ldr	r3, [pc, #48]	; (8009048 <FLASH_Program_Byte+0x40>)
 8009016:	691b      	ldr	r3, [r3, #16]
 8009018:	4a0b      	ldr	r2, [pc, #44]	; (8009048 <FLASH_Program_Byte+0x40>)
 800901a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800901e:	6113      	str	r3, [r2, #16]
 8009020:	4b09      	ldr	r3, [pc, #36]	; (8009048 <FLASH_Program_Byte+0x40>)
 8009022:	4a09      	ldr	r2, [pc, #36]	; (8009048 <FLASH_Program_Byte+0x40>)
 8009024:	691b      	ldr	r3, [r3, #16]
 8009026:	6113      	str	r3, [r2, #16]
 8009028:	4b07      	ldr	r3, [pc, #28]	; (8009048 <FLASH_Program_Byte+0x40>)
 800902a:	691b      	ldr	r3, [r3, #16]
 800902c:	4a06      	ldr	r2, [pc, #24]	; (8009048 <FLASH_Program_Byte+0x40>)
 800902e:	f043 0301 	orr.w	r3, r3, #1
 8009032:	6113      	str	r3, [r2, #16]
 8009034:	687b      	ldr	r3, [r7, #4]
 8009036:	78fa      	ldrb	r2, [r7, #3]
 8009038:	701a      	strb	r2, [r3, #0]
 800903a:	bf00      	nop
 800903c:	370c      	adds	r7, #12
 800903e:	46bd      	mov	sp, r7
 8009040:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009044:	4770      	bx	lr
 8009046:	bf00      	nop
 8009048:	40023c00 	.word	0x40023c00

0800904c <FLASH_SetErrorCode>:
 800904c:	b480      	push	{r7}
 800904e:	af00      	add	r7, sp, #0
 8009050:	4b2f      	ldr	r3, [pc, #188]	; (8009110 <FLASH_SetErrorCode+0xc4>)
 8009052:	68db      	ldr	r3, [r3, #12]
 8009054:	f003 0310 	and.w	r3, r3, #16
 8009058:	2b00      	cmp	r3, #0
 800905a:	d008      	beq.n	800906e <FLASH_SetErrorCode+0x22>
 800905c:	4b2d      	ldr	r3, [pc, #180]	; (8009114 <FLASH_SetErrorCode+0xc8>)
 800905e:	69db      	ldr	r3, [r3, #28]
 8009060:	f043 0310 	orr.w	r3, r3, #16
 8009064:	4a2b      	ldr	r2, [pc, #172]	; (8009114 <FLASH_SetErrorCode+0xc8>)
 8009066:	61d3      	str	r3, [r2, #28]
 8009068:	4b29      	ldr	r3, [pc, #164]	; (8009110 <FLASH_SetErrorCode+0xc4>)
 800906a:	2210      	movs	r2, #16
 800906c:	60da      	str	r2, [r3, #12]
 800906e:	4b28      	ldr	r3, [pc, #160]	; (8009110 <FLASH_SetErrorCode+0xc4>)
 8009070:	68db      	ldr	r3, [r3, #12]
 8009072:	f003 0320 	and.w	r3, r3, #32
 8009076:	2b00      	cmp	r3, #0
 8009078:	d008      	beq.n	800908c <FLASH_SetErrorCode+0x40>
 800907a:	4b26      	ldr	r3, [pc, #152]	; (8009114 <FLASH_SetErrorCode+0xc8>)
 800907c:	69db      	ldr	r3, [r3, #28]
 800907e:	f043 0308 	orr.w	r3, r3, #8
 8009082:	4a24      	ldr	r2, [pc, #144]	; (8009114 <FLASH_SetErrorCode+0xc8>)
 8009084:	61d3      	str	r3, [r2, #28]
 8009086:	4b22      	ldr	r3, [pc, #136]	; (8009110 <FLASH_SetErrorCode+0xc4>)
 8009088:	2220      	movs	r2, #32
 800908a:	60da      	str	r2, [r3, #12]
 800908c:	4b20      	ldr	r3, [pc, #128]	; (8009110 <FLASH_SetErrorCode+0xc4>)
 800908e:	68db      	ldr	r3, [r3, #12]
 8009090:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009094:	2b00      	cmp	r3, #0
 8009096:	d008      	beq.n	80090aa <FLASH_SetErrorCode+0x5e>
 8009098:	4b1e      	ldr	r3, [pc, #120]	; (8009114 <FLASH_SetErrorCode+0xc8>)
 800909a:	69db      	ldr	r3, [r3, #28]
 800909c:	f043 0304 	orr.w	r3, r3, #4
 80090a0:	4a1c      	ldr	r2, [pc, #112]	; (8009114 <FLASH_SetErrorCode+0xc8>)
 80090a2:	61d3      	str	r3, [r2, #28]
 80090a4:	4b1a      	ldr	r3, [pc, #104]	; (8009110 <FLASH_SetErrorCode+0xc4>)
 80090a6:	2240      	movs	r2, #64	; 0x40
 80090a8:	60da      	str	r2, [r3, #12]
 80090aa:	4b19      	ldr	r3, [pc, #100]	; (8009110 <FLASH_SetErrorCode+0xc4>)
 80090ac:	68db      	ldr	r3, [r3, #12]
 80090ae:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80090b2:	2b00      	cmp	r3, #0
 80090b4:	d008      	beq.n	80090c8 <FLASH_SetErrorCode+0x7c>
 80090b6:	4b17      	ldr	r3, [pc, #92]	; (8009114 <FLASH_SetErrorCode+0xc8>)
 80090b8:	69db      	ldr	r3, [r3, #28]
 80090ba:	f043 0302 	orr.w	r3, r3, #2
 80090be:	4a15      	ldr	r2, [pc, #84]	; (8009114 <FLASH_SetErrorCode+0xc8>)
 80090c0:	61d3      	str	r3, [r2, #28]
 80090c2:	4b13      	ldr	r3, [pc, #76]	; (8009110 <FLASH_SetErrorCode+0xc4>)
 80090c4:	2280      	movs	r2, #128	; 0x80
 80090c6:	60da      	str	r2, [r3, #12]
 80090c8:	4b11      	ldr	r3, [pc, #68]	; (8009110 <FLASH_SetErrorCode+0xc4>)
 80090ca:	68db      	ldr	r3, [r3, #12]
 80090cc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80090d0:	2b00      	cmp	r3, #0
 80090d2:	d009      	beq.n	80090e8 <FLASH_SetErrorCode+0x9c>
 80090d4:	4b0f      	ldr	r3, [pc, #60]	; (8009114 <FLASH_SetErrorCode+0xc8>)
 80090d6:	69db      	ldr	r3, [r3, #28]
 80090d8:	f043 0301 	orr.w	r3, r3, #1
 80090dc:	4a0d      	ldr	r2, [pc, #52]	; (8009114 <FLASH_SetErrorCode+0xc8>)
 80090de:	61d3      	str	r3, [r2, #28]
 80090e0:	4b0b      	ldr	r3, [pc, #44]	; (8009110 <FLASH_SetErrorCode+0xc4>)
 80090e2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80090e6:	60da      	str	r2, [r3, #12]
 80090e8:	4b09      	ldr	r3, [pc, #36]	; (8009110 <FLASH_SetErrorCode+0xc4>)
 80090ea:	68db      	ldr	r3, [r3, #12]
 80090ec:	f003 0302 	and.w	r3, r3, #2
 80090f0:	2b00      	cmp	r3, #0
 80090f2:	d008      	beq.n	8009106 <FLASH_SetErrorCode+0xba>
 80090f4:	4b07      	ldr	r3, [pc, #28]	; (8009114 <FLASH_SetErrorCode+0xc8>)
 80090f6:	69db      	ldr	r3, [r3, #28]
 80090f8:	f043 0320 	orr.w	r3, r3, #32
 80090fc:	4a05      	ldr	r2, [pc, #20]	; (8009114 <FLASH_SetErrorCode+0xc8>)
 80090fe:	61d3      	str	r3, [r2, #28]
 8009100:	4b03      	ldr	r3, [pc, #12]	; (8009110 <FLASH_SetErrorCode+0xc4>)
 8009102:	2202      	movs	r2, #2
 8009104:	60da      	str	r2, [r3, #12]
 8009106:	bf00      	nop
 8009108:	46bd      	mov	sp, r7
 800910a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800910e:	4770      	bx	lr
 8009110:	40023c00 	.word	0x40023c00
 8009114:	20000c6c 	.word	0x20000c6c

08009118 <FLASH_Erase_Sector>:
 8009118:	b480      	push	{r7}
 800911a:	b085      	sub	sp, #20
 800911c:	af00      	add	r7, sp, #0
 800911e:	6078      	str	r0, [r7, #4]
 8009120:	460b      	mov	r3, r1
 8009122:	70fb      	strb	r3, [r7, #3]
 8009124:	2300      	movs	r3, #0
 8009126:	60fb      	str	r3, [r7, #12]
 8009128:	78fb      	ldrb	r3, [r7, #3]
 800912a:	2b00      	cmp	r3, #0
 800912c:	d102      	bne.n	8009134 <FLASH_Erase_Sector+0x1c>
 800912e:	2300      	movs	r3, #0
 8009130:	60fb      	str	r3, [r7, #12]
 8009132:	e010      	b.n	8009156 <FLASH_Erase_Sector+0x3e>
 8009134:	78fb      	ldrb	r3, [r7, #3]
 8009136:	2b01      	cmp	r3, #1
 8009138:	d103      	bne.n	8009142 <FLASH_Erase_Sector+0x2a>
 800913a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800913e:	60fb      	str	r3, [r7, #12]
 8009140:	e009      	b.n	8009156 <FLASH_Erase_Sector+0x3e>
 8009142:	78fb      	ldrb	r3, [r7, #3]
 8009144:	2b02      	cmp	r3, #2
 8009146:	d103      	bne.n	8009150 <FLASH_Erase_Sector+0x38>
 8009148:	f44f 7300 	mov.w	r3, #512	; 0x200
 800914c:	60fb      	str	r3, [r7, #12]
 800914e:	e002      	b.n	8009156 <FLASH_Erase_Sector+0x3e>
 8009150:	f44f 7340 	mov.w	r3, #768	; 0x300
 8009154:	60fb      	str	r3, [r7, #12]
 8009156:	4b13      	ldr	r3, [pc, #76]	; (80091a4 <FLASH_Erase_Sector+0x8c>)
 8009158:	691b      	ldr	r3, [r3, #16]
 800915a:	4a12      	ldr	r2, [pc, #72]	; (80091a4 <FLASH_Erase_Sector+0x8c>)
 800915c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009160:	6113      	str	r3, [r2, #16]
 8009162:	4b10      	ldr	r3, [pc, #64]	; (80091a4 <FLASH_Erase_Sector+0x8c>)
 8009164:	691a      	ldr	r2, [r3, #16]
 8009166:	490f      	ldr	r1, [pc, #60]	; (80091a4 <FLASH_Erase_Sector+0x8c>)
 8009168:	68fb      	ldr	r3, [r7, #12]
 800916a:	4313      	orrs	r3, r2
 800916c:	610b      	str	r3, [r1, #16]
 800916e:	4b0d      	ldr	r3, [pc, #52]	; (80091a4 <FLASH_Erase_Sector+0x8c>)
 8009170:	691b      	ldr	r3, [r3, #16]
 8009172:	4a0c      	ldr	r2, [pc, #48]	; (80091a4 <FLASH_Erase_Sector+0x8c>)
 8009174:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8009178:	6113      	str	r3, [r2, #16]
 800917a:	4b0a      	ldr	r3, [pc, #40]	; (80091a4 <FLASH_Erase_Sector+0x8c>)
 800917c:	691a      	ldr	r2, [r3, #16]
 800917e:	687b      	ldr	r3, [r7, #4]
 8009180:	00db      	lsls	r3, r3, #3
 8009182:	4313      	orrs	r3, r2
 8009184:	4a07      	ldr	r2, [pc, #28]	; (80091a4 <FLASH_Erase_Sector+0x8c>)
 8009186:	f043 0302 	orr.w	r3, r3, #2
 800918a:	6113      	str	r3, [r2, #16]
 800918c:	4b05      	ldr	r3, [pc, #20]	; (80091a4 <FLASH_Erase_Sector+0x8c>)
 800918e:	691b      	ldr	r3, [r3, #16]
 8009190:	4a04      	ldr	r2, [pc, #16]	; (80091a4 <FLASH_Erase_Sector+0x8c>)
 8009192:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009196:	6113      	str	r3, [r2, #16]
 8009198:	bf00      	nop
 800919a:	3714      	adds	r7, #20
 800919c:	46bd      	mov	sp, r7
 800919e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091a2:	4770      	bx	lr
 80091a4:	40023c00 	.word	0x40023c00

080091a8 <HAL_GPIO_Init>:
 80091a8:	b480      	push	{r7}
 80091aa:	b089      	sub	sp, #36	; 0x24
 80091ac:	af00      	add	r7, sp, #0
 80091ae:	6078      	str	r0, [r7, #4]
 80091b0:	6039      	str	r1, [r7, #0]
 80091b2:	2300      	movs	r3, #0
 80091b4:	617b      	str	r3, [r7, #20]
 80091b6:	2300      	movs	r3, #0
 80091b8:	613b      	str	r3, [r7, #16]
 80091ba:	2300      	movs	r3, #0
 80091bc:	61bb      	str	r3, [r7, #24]
 80091be:	2300      	movs	r3, #0
 80091c0:	61fb      	str	r3, [r7, #28]
 80091c2:	e165      	b.n	8009490 <HAL_GPIO_Init+0x2e8>
 80091c4:	2201      	movs	r2, #1
 80091c6:	69fb      	ldr	r3, [r7, #28]
 80091c8:	fa02 f303 	lsl.w	r3, r2, r3
 80091cc:	617b      	str	r3, [r7, #20]
 80091ce:	683b      	ldr	r3, [r7, #0]
 80091d0:	681b      	ldr	r3, [r3, #0]
 80091d2:	697a      	ldr	r2, [r7, #20]
 80091d4:	4013      	ands	r3, r2
 80091d6:	613b      	str	r3, [r7, #16]
 80091d8:	693a      	ldr	r2, [r7, #16]
 80091da:	697b      	ldr	r3, [r7, #20]
 80091dc:	429a      	cmp	r2, r3
 80091de:	f040 8154 	bne.w	800948a <HAL_GPIO_Init+0x2e2>
 80091e2:	683b      	ldr	r3, [r7, #0]
 80091e4:	685b      	ldr	r3, [r3, #4]
 80091e6:	f003 0303 	and.w	r3, r3, #3
 80091ea:	2b01      	cmp	r3, #1
 80091ec:	d005      	beq.n	80091fa <HAL_GPIO_Init+0x52>
 80091ee:	683b      	ldr	r3, [r7, #0]
 80091f0:	685b      	ldr	r3, [r3, #4]
 80091f2:	f003 0303 	and.w	r3, r3, #3
 80091f6:	2b02      	cmp	r3, #2
 80091f8:	d130      	bne.n	800925c <HAL_GPIO_Init+0xb4>
 80091fa:	687b      	ldr	r3, [r7, #4]
 80091fc:	689b      	ldr	r3, [r3, #8]
 80091fe:	61bb      	str	r3, [r7, #24]
 8009200:	69fb      	ldr	r3, [r7, #28]
 8009202:	005b      	lsls	r3, r3, #1
 8009204:	2203      	movs	r2, #3
 8009206:	fa02 f303 	lsl.w	r3, r2, r3
 800920a:	43db      	mvns	r3, r3
 800920c:	69ba      	ldr	r2, [r7, #24]
 800920e:	4013      	ands	r3, r2
 8009210:	61bb      	str	r3, [r7, #24]
 8009212:	683b      	ldr	r3, [r7, #0]
 8009214:	68da      	ldr	r2, [r3, #12]
 8009216:	69fb      	ldr	r3, [r7, #28]
 8009218:	005b      	lsls	r3, r3, #1
 800921a:	fa02 f303 	lsl.w	r3, r2, r3
 800921e:	69ba      	ldr	r2, [r7, #24]
 8009220:	4313      	orrs	r3, r2
 8009222:	61bb      	str	r3, [r7, #24]
 8009224:	687b      	ldr	r3, [r7, #4]
 8009226:	69ba      	ldr	r2, [r7, #24]
 8009228:	609a      	str	r2, [r3, #8]
 800922a:	687b      	ldr	r3, [r7, #4]
 800922c:	685b      	ldr	r3, [r3, #4]
 800922e:	61bb      	str	r3, [r7, #24]
 8009230:	2201      	movs	r2, #1
 8009232:	69fb      	ldr	r3, [r7, #28]
 8009234:	fa02 f303 	lsl.w	r3, r2, r3
 8009238:	43db      	mvns	r3, r3
 800923a:	69ba      	ldr	r2, [r7, #24]
 800923c:	4013      	ands	r3, r2
 800923e:	61bb      	str	r3, [r7, #24]
 8009240:	683b      	ldr	r3, [r7, #0]
 8009242:	685b      	ldr	r3, [r3, #4]
 8009244:	091b      	lsrs	r3, r3, #4
 8009246:	f003 0201 	and.w	r2, r3, #1
 800924a:	69fb      	ldr	r3, [r7, #28]
 800924c:	fa02 f303 	lsl.w	r3, r2, r3
 8009250:	69ba      	ldr	r2, [r7, #24]
 8009252:	4313      	orrs	r3, r2
 8009254:	61bb      	str	r3, [r7, #24]
 8009256:	687b      	ldr	r3, [r7, #4]
 8009258:	69ba      	ldr	r2, [r7, #24]
 800925a:	605a      	str	r2, [r3, #4]
 800925c:	683b      	ldr	r3, [r7, #0]
 800925e:	685b      	ldr	r3, [r3, #4]
 8009260:	f003 0303 	and.w	r3, r3, #3
 8009264:	2b03      	cmp	r3, #3
 8009266:	d017      	beq.n	8009298 <HAL_GPIO_Init+0xf0>
 8009268:	687b      	ldr	r3, [r7, #4]
 800926a:	68db      	ldr	r3, [r3, #12]
 800926c:	61bb      	str	r3, [r7, #24]
 800926e:	69fb      	ldr	r3, [r7, #28]
 8009270:	005b      	lsls	r3, r3, #1
 8009272:	2203      	movs	r2, #3
 8009274:	fa02 f303 	lsl.w	r3, r2, r3
 8009278:	43db      	mvns	r3, r3
 800927a:	69ba      	ldr	r2, [r7, #24]
 800927c:	4013      	ands	r3, r2
 800927e:	61bb      	str	r3, [r7, #24]
 8009280:	683b      	ldr	r3, [r7, #0]
 8009282:	689a      	ldr	r2, [r3, #8]
 8009284:	69fb      	ldr	r3, [r7, #28]
 8009286:	005b      	lsls	r3, r3, #1
 8009288:	fa02 f303 	lsl.w	r3, r2, r3
 800928c:	69ba      	ldr	r2, [r7, #24]
 800928e:	4313      	orrs	r3, r2
 8009290:	61bb      	str	r3, [r7, #24]
 8009292:	687b      	ldr	r3, [r7, #4]
 8009294:	69ba      	ldr	r2, [r7, #24]
 8009296:	60da      	str	r2, [r3, #12]
 8009298:	683b      	ldr	r3, [r7, #0]
 800929a:	685b      	ldr	r3, [r3, #4]
 800929c:	f003 0303 	and.w	r3, r3, #3
 80092a0:	2b02      	cmp	r3, #2
 80092a2:	d123      	bne.n	80092ec <HAL_GPIO_Init+0x144>
 80092a4:	69fb      	ldr	r3, [r7, #28]
 80092a6:	08da      	lsrs	r2, r3, #3
 80092a8:	687b      	ldr	r3, [r7, #4]
 80092aa:	3208      	adds	r2, #8
 80092ac:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80092b0:	61bb      	str	r3, [r7, #24]
 80092b2:	69fb      	ldr	r3, [r7, #28]
 80092b4:	f003 0307 	and.w	r3, r3, #7
 80092b8:	009b      	lsls	r3, r3, #2
 80092ba:	220f      	movs	r2, #15
 80092bc:	fa02 f303 	lsl.w	r3, r2, r3
 80092c0:	43db      	mvns	r3, r3
 80092c2:	69ba      	ldr	r2, [r7, #24]
 80092c4:	4013      	ands	r3, r2
 80092c6:	61bb      	str	r3, [r7, #24]
 80092c8:	683b      	ldr	r3, [r7, #0]
 80092ca:	691a      	ldr	r2, [r3, #16]
 80092cc:	69fb      	ldr	r3, [r7, #28]
 80092ce:	f003 0307 	and.w	r3, r3, #7
 80092d2:	009b      	lsls	r3, r3, #2
 80092d4:	fa02 f303 	lsl.w	r3, r2, r3
 80092d8:	69ba      	ldr	r2, [r7, #24]
 80092da:	4313      	orrs	r3, r2
 80092dc:	61bb      	str	r3, [r7, #24]
 80092de:	69fb      	ldr	r3, [r7, #28]
 80092e0:	08da      	lsrs	r2, r3, #3
 80092e2:	687b      	ldr	r3, [r7, #4]
 80092e4:	3208      	adds	r2, #8
 80092e6:	69b9      	ldr	r1, [r7, #24]
 80092e8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80092ec:	687b      	ldr	r3, [r7, #4]
 80092ee:	681b      	ldr	r3, [r3, #0]
 80092f0:	61bb      	str	r3, [r7, #24]
 80092f2:	69fb      	ldr	r3, [r7, #28]
 80092f4:	005b      	lsls	r3, r3, #1
 80092f6:	2203      	movs	r2, #3
 80092f8:	fa02 f303 	lsl.w	r3, r2, r3
 80092fc:	43db      	mvns	r3, r3
 80092fe:	69ba      	ldr	r2, [r7, #24]
 8009300:	4013      	ands	r3, r2
 8009302:	61bb      	str	r3, [r7, #24]
 8009304:	683b      	ldr	r3, [r7, #0]
 8009306:	685b      	ldr	r3, [r3, #4]
 8009308:	f003 0203 	and.w	r2, r3, #3
 800930c:	69fb      	ldr	r3, [r7, #28]
 800930e:	005b      	lsls	r3, r3, #1
 8009310:	fa02 f303 	lsl.w	r3, r2, r3
 8009314:	69ba      	ldr	r2, [r7, #24]
 8009316:	4313      	orrs	r3, r2
 8009318:	61bb      	str	r3, [r7, #24]
 800931a:	687b      	ldr	r3, [r7, #4]
 800931c:	69ba      	ldr	r2, [r7, #24]
 800931e:	601a      	str	r2, [r3, #0]
 8009320:	683b      	ldr	r3, [r7, #0]
 8009322:	685b      	ldr	r3, [r3, #4]
 8009324:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8009328:	2b00      	cmp	r3, #0
 800932a:	f000 80ae 	beq.w	800948a <HAL_GPIO_Init+0x2e2>
 800932e:	2300      	movs	r3, #0
 8009330:	60fb      	str	r3, [r7, #12]
 8009332:	4b5d      	ldr	r3, [pc, #372]	; (80094a8 <HAL_GPIO_Init+0x300>)
 8009334:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009336:	4a5c      	ldr	r2, [pc, #368]	; (80094a8 <HAL_GPIO_Init+0x300>)
 8009338:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800933c:	6453      	str	r3, [r2, #68]	; 0x44
 800933e:	4b5a      	ldr	r3, [pc, #360]	; (80094a8 <HAL_GPIO_Init+0x300>)
 8009340:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009342:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8009346:	60fb      	str	r3, [r7, #12]
 8009348:	68fb      	ldr	r3, [r7, #12]
 800934a:	4a58      	ldr	r2, [pc, #352]	; (80094ac <HAL_GPIO_Init+0x304>)
 800934c:	69fb      	ldr	r3, [r7, #28]
 800934e:	089b      	lsrs	r3, r3, #2
 8009350:	3302      	adds	r3, #2
 8009352:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009356:	61bb      	str	r3, [r7, #24]
 8009358:	69fb      	ldr	r3, [r7, #28]
 800935a:	f003 0303 	and.w	r3, r3, #3
 800935e:	009b      	lsls	r3, r3, #2
 8009360:	220f      	movs	r2, #15
 8009362:	fa02 f303 	lsl.w	r3, r2, r3
 8009366:	43db      	mvns	r3, r3
 8009368:	69ba      	ldr	r2, [r7, #24]
 800936a:	4013      	ands	r3, r2
 800936c:	61bb      	str	r3, [r7, #24]
 800936e:	687b      	ldr	r3, [r7, #4]
 8009370:	4a4f      	ldr	r2, [pc, #316]	; (80094b0 <HAL_GPIO_Init+0x308>)
 8009372:	4293      	cmp	r3, r2
 8009374:	d025      	beq.n	80093c2 <HAL_GPIO_Init+0x21a>
 8009376:	687b      	ldr	r3, [r7, #4]
 8009378:	4a4e      	ldr	r2, [pc, #312]	; (80094b4 <HAL_GPIO_Init+0x30c>)
 800937a:	4293      	cmp	r3, r2
 800937c:	d01f      	beq.n	80093be <HAL_GPIO_Init+0x216>
 800937e:	687b      	ldr	r3, [r7, #4]
 8009380:	4a4d      	ldr	r2, [pc, #308]	; (80094b8 <HAL_GPIO_Init+0x310>)
 8009382:	4293      	cmp	r3, r2
 8009384:	d019      	beq.n	80093ba <HAL_GPIO_Init+0x212>
 8009386:	687b      	ldr	r3, [r7, #4]
 8009388:	4a4c      	ldr	r2, [pc, #304]	; (80094bc <HAL_GPIO_Init+0x314>)
 800938a:	4293      	cmp	r3, r2
 800938c:	d013      	beq.n	80093b6 <HAL_GPIO_Init+0x20e>
 800938e:	687b      	ldr	r3, [r7, #4]
 8009390:	4a4b      	ldr	r2, [pc, #300]	; (80094c0 <HAL_GPIO_Init+0x318>)
 8009392:	4293      	cmp	r3, r2
 8009394:	d00d      	beq.n	80093b2 <HAL_GPIO_Init+0x20a>
 8009396:	687b      	ldr	r3, [r7, #4]
 8009398:	4a4a      	ldr	r2, [pc, #296]	; (80094c4 <HAL_GPIO_Init+0x31c>)
 800939a:	4293      	cmp	r3, r2
 800939c:	d007      	beq.n	80093ae <HAL_GPIO_Init+0x206>
 800939e:	687b      	ldr	r3, [r7, #4]
 80093a0:	4a49      	ldr	r2, [pc, #292]	; (80094c8 <HAL_GPIO_Init+0x320>)
 80093a2:	4293      	cmp	r3, r2
 80093a4:	d101      	bne.n	80093aa <HAL_GPIO_Init+0x202>
 80093a6:	2306      	movs	r3, #6
 80093a8:	e00c      	b.n	80093c4 <HAL_GPIO_Init+0x21c>
 80093aa:	2307      	movs	r3, #7
 80093ac:	e00a      	b.n	80093c4 <HAL_GPIO_Init+0x21c>
 80093ae:	2305      	movs	r3, #5
 80093b0:	e008      	b.n	80093c4 <HAL_GPIO_Init+0x21c>
 80093b2:	2304      	movs	r3, #4
 80093b4:	e006      	b.n	80093c4 <HAL_GPIO_Init+0x21c>
 80093b6:	2303      	movs	r3, #3
 80093b8:	e004      	b.n	80093c4 <HAL_GPIO_Init+0x21c>
 80093ba:	2302      	movs	r3, #2
 80093bc:	e002      	b.n	80093c4 <HAL_GPIO_Init+0x21c>
 80093be:	2301      	movs	r3, #1
 80093c0:	e000      	b.n	80093c4 <HAL_GPIO_Init+0x21c>
 80093c2:	2300      	movs	r3, #0
 80093c4:	69fa      	ldr	r2, [r7, #28]
 80093c6:	f002 0203 	and.w	r2, r2, #3
 80093ca:	0092      	lsls	r2, r2, #2
 80093cc:	4093      	lsls	r3, r2
 80093ce:	69ba      	ldr	r2, [r7, #24]
 80093d0:	4313      	orrs	r3, r2
 80093d2:	61bb      	str	r3, [r7, #24]
 80093d4:	4935      	ldr	r1, [pc, #212]	; (80094ac <HAL_GPIO_Init+0x304>)
 80093d6:	69fb      	ldr	r3, [r7, #28]
 80093d8:	089b      	lsrs	r3, r3, #2
 80093da:	3302      	adds	r3, #2
 80093dc:	69ba      	ldr	r2, [r7, #24]
 80093de:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80093e2:	4b3a      	ldr	r3, [pc, #232]	; (80094cc <HAL_GPIO_Init+0x324>)
 80093e4:	689b      	ldr	r3, [r3, #8]
 80093e6:	61bb      	str	r3, [r7, #24]
 80093e8:	693b      	ldr	r3, [r7, #16]
 80093ea:	43db      	mvns	r3, r3
 80093ec:	69ba      	ldr	r2, [r7, #24]
 80093ee:	4013      	ands	r3, r2
 80093f0:	61bb      	str	r3, [r7, #24]
 80093f2:	683b      	ldr	r3, [r7, #0]
 80093f4:	685b      	ldr	r3, [r3, #4]
 80093f6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80093fa:	2b00      	cmp	r3, #0
 80093fc:	d003      	beq.n	8009406 <HAL_GPIO_Init+0x25e>
 80093fe:	69ba      	ldr	r2, [r7, #24]
 8009400:	693b      	ldr	r3, [r7, #16]
 8009402:	4313      	orrs	r3, r2
 8009404:	61bb      	str	r3, [r7, #24]
 8009406:	4a31      	ldr	r2, [pc, #196]	; (80094cc <HAL_GPIO_Init+0x324>)
 8009408:	69bb      	ldr	r3, [r7, #24]
 800940a:	6093      	str	r3, [r2, #8]
 800940c:	4b2f      	ldr	r3, [pc, #188]	; (80094cc <HAL_GPIO_Init+0x324>)
 800940e:	68db      	ldr	r3, [r3, #12]
 8009410:	61bb      	str	r3, [r7, #24]
 8009412:	693b      	ldr	r3, [r7, #16]
 8009414:	43db      	mvns	r3, r3
 8009416:	69ba      	ldr	r2, [r7, #24]
 8009418:	4013      	ands	r3, r2
 800941a:	61bb      	str	r3, [r7, #24]
 800941c:	683b      	ldr	r3, [r7, #0]
 800941e:	685b      	ldr	r3, [r3, #4]
 8009420:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8009424:	2b00      	cmp	r3, #0
 8009426:	d003      	beq.n	8009430 <HAL_GPIO_Init+0x288>
 8009428:	69ba      	ldr	r2, [r7, #24]
 800942a:	693b      	ldr	r3, [r7, #16]
 800942c:	4313      	orrs	r3, r2
 800942e:	61bb      	str	r3, [r7, #24]
 8009430:	4a26      	ldr	r2, [pc, #152]	; (80094cc <HAL_GPIO_Init+0x324>)
 8009432:	69bb      	ldr	r3, [r7, #24]
 8009434:	60d3      	str	r3, [r2, #12]
 8009436:	4b25      	ldr	r3, [pc, #148]	; (80094cc <HAL_GPIO_Init+0x324>)
 8009438:	685b      	ldr	r3, [r3, #4]
 800943a:	61bb      	str	r3, [r7, #24]
 800943c:	693b      	ldr	r3, [r7, #16]
 800943e:	43db      	mvns	r3, r3
 8009440:	69ba      	ldr	r2, [r7, #24]
 8009442:	4013      	ands	r3, r2
 8009444:	61bb      	str	r3, [r7, #24]
 8009446:	683b      	ldr	r3, [r7, #0]
 8009448:	685b      	ldr	r3, [r3, #4]
 800944a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800944e:	2b00      	cmp	r3, #0
 8009450:	d003      	beq.n	800945a <HAL_GPIO_Init+0x2b2>
 8009452:	69ba      	ldr	r2, [r7, #24]
 8009454:	693b      	ldr	r3, [r7, #16]
 8009456:	4313      	orrs	r3, r2
 8009458:	61bb      	str	r3, [r7, #24]
 800945a:	4a1c      	ldr	r2, [pc, #112]	; (80094cc <HAL_GPIO_Init+0x324>)
 800945c:	69bb      	ldr	r3, [r7, #24]
 800945e:	6053      	str	r3, [r2, #4]
 8009460:	4b1a      	ldr	r3, [pc, #104]	; (80094cc <HAL_GPIO_Init+0x324>)
 8009462:	681b      	ldr	r3, [r3, #0]
 8009464:	61bb      	str	r3, [r7, #24]
 8009466:	693b      	ldr	r3, [r7, #16]
 8009468:	43db      	mvns	r3, r3
 800946a:	69ba      	ldr	r2, [r7, #24]
 800946c:	4013      	ands	r3, r2
 800946e:	61bb      	str	r3, [r7, #24]
 8009470:	683b      	ldr	r3, [r7, #0]
 8009472:	685b      	ldr	r3, [r3, #4]
 8009474:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8009478:	2b00      	cmp	r3, #0
 800947a:	d003      	beq.n	8009484 <HAL_GPIO_Init+0x2dc>
 800947c:	69ba      	ldr	r2, [r7, #24]
 800947e:	693b      	ldr	r3, [r7, #16]
 8009480:	4313      	orrs	r3, r2
 8009482:	61bb      	str	r3, [r7, #24]
 8009484:	4a11      	ldr	r2, [pc, #68]	; (80094cc <HAL_GPIO_Init+0x324>)
 8009486:	69bb      	ldr	r3, [r7, #24]
 8009488:	6013      	str	r3, [r2, #0]
 800948a:	69fb      	ldr	r3, [r7, #28]
 800948c:	3301      	adds	r3, #1
 800948e:	61fb      	str	r3, [r7, #28]
 8009490:	69fb      	ldr	r3, [r7, #28]
 8009492:	2b0f      	cmp	r3, #15
 8009494:	f67f ae96 	bls.w	80091c4 <HAL_GPIO_Init+0x1c>
 8009498:	bf00      	nop
 800949a:	bf00      	nop
 800949c:	3724      	adds	r7, #36	; 0x24
 800949e:	46bd      	mov	sp, r7
 80094a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094a4:	4770      	bx	lr
 80094a6:	bf00      	nop
 80094a8:	40023800 	.word	0x40023800
 80094ac:	40013800 	.word	0x40013800
 80094b0:	40020000 	.word	0x40020000
 80094b4:	40020400 	.word	0x40020400
 80094b8:	40020800 	.word	0x40020800
 80094bc:	40020c00 	.word	0x40020c00
 80094c0:	40021000 	.word	0x40021000
 80094c4:	40021400 	.word	0x40021400
 80094c8:	40021800 	.word	0x40021800
 80094cc:	40013c00 	.word	0x40013c00

080094d0 <HAL_GPIO_ReadPin>:
 80094d0:	b480      	push	{r7}
 80094d2:	b085      	sub	sp, #20
 80094d4:	af00      	add	r7, sp, #0
 80094d6:	6078      	str	r0, [r7, #4]
 80094d8:	460b      	mov	r3, r1
 80094da:	807b      	strh	r3, [r7, #2]
 80094dc:	687b      	ldr	r3, [r7, #4]
 80094de:	691a      	ldr	r2, [r3, #16]
 80094e0:	887b      	ldrh	r3, [r7, #2]
 80094e2:	4013      	ands	r3, r2
 80094e4:	2b00      	cmp	r3, #0
 80094e6:	d002      	beq.n	80094ee <HAL_GPIO_ReadPin+0x1e>
 80094e8:	2301      	movs	r3, #1
 80094ea:	73fb      	strb	r3, [r7, #15]
 80094ec:	e001      	b.n	80094f2 <HAL_GPIO_ReadPin+0x22>
 80094ee:	2300      	movs	r3, #0
 80094f0:	73fb      	strb	r3, [r7, #15]
 80094f2:	7bfb      	ldrb	r3, [r7, #15]
 80094f4:	4618      	mov	r0, r3
 80094f6:	3714      	adds	r7, #20
 80094f8:	46bd      	mov	sp, r7
 80094fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094fe:	4770      	bx	lr

08009500 <HAL_GPIO_WritePin>:
 8009500:	b480      	push	{r7}
 8009502:	b083      	sub	sp, #12
 8009504:	af00      	add	r7, sp, #0
 8009506:	6078      	str	r0, [r7, #4]
 8009508:	460b      	mov	r3, r1
 800950a:	807b      	strh	r3, [r7, #2]
 800950c:	4613      	mov	r3, r2
 800950e:	707b      	strb	r3, [r7, #1]
 8009510:	787b      	ldrb	r3, [r7, #1]
 8009512:	2b00      	cmp	r3, #0
 8009514:	d003      	beq.n	800951e <HAL_GPIO_WritePin+0x1e>
 8009516:	887a      	ldrh	r2, [r7, #2]
 8009518:	687b      	ldr	r3, [r7, #4]
 800951a:	619a      	str	r2, [r3, #24]
 800951c:	e003      	b.n	8009526 <HAL_GPIO_WritePin+0x26>
 800951e:	887b      	ldrh	r3, [r7, #2]
 8009520:	041a      	lsls	r2, r3, #16
 8009522:	687b      	ldr	r3, [r7, #4]
 8009524:	619a      	str	r2, [r3, #24]
 8009526:	bf00      	nop
 8009528:	370c      	adds	r7, #12
 800952a:	46bd      	mov	sp, r7
 800952c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009530:	4770      	bx	lr

08009532 <HAL_GPIO_TogglePin>:
 8009532:	b480      	push	{r7}
 8009534:	b085      	sub	sp, #20
 8009536:	af00      	add	r7, sp, #0
 8009538:	6078      	str	r0, [r7, #4]
 800953a:	460b      	mov	r3, r1
 800953c:	807b      	strh	r3, [r7, #2]
 800953e:	687b      	ldr	r3, [r7, #4]
 8009540:	695b      	ldr	r3, [r3, #20]
 8009542:	60fb      	str	r3, [r7, #12]
 8009544:	887a      	ldrh	r2, [r7, #2]
 8009546:	68fb      	ldr	r3, [r7, #12]
 8009548:	4013      	ands	r3, r2
 800954a:	041a      	lsls	r2, r3, #16
 800954c:	68fb      	ldr	r3, [r7, #12]
 800954e:	43d9      	mvns	r1, r3
 8009550:	887b      	ldrh	r3, [r7, #2]
 8009552:	400b      	ands	r3, r1
 8009554:	431a      	orrs	r2, r3
 8009556:	687b      	ldr	r3, [r7, #4]
 8009558:	619a      	str	r2, [r3, #24]
 800955a:	bf00      	nop
 800955c:	3714      	adds	r7, #20
 800955e:	46bd      	mov	sp, r7
 8009560:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009564:	4770      	bx	lr
	...

08009568 <HAL_GPIO_EXTI_IRQHandler>:
 8009568:	b580      	push	{r7, lr}
 800956a:	b082      	sub	sp, #8
 800956c:	af00      	add	r7, sp, #0
 800956e:	4603      	mov	r3, r0
 8009570:	80fb      	strh	r3, [r7, #6]
 8009572:	4b08      	ldr	r3, [pc, #32]	; (8009594 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8009574:	695a      	ldr	r2, [r3, #20]
 8009576:	88fb      	ldrh	r3, [r7, #6]
 8009578:	4013      	ands	r3, r2
 800957a:	2b00      	cmp	r3, #0
 800957c:	d006      	beq.n	800958c <HAL_GPIO_EXTI_IRQHandler+0x24>
 800957e:	4a05      	ldr	r2, [pc, #20]	; (8009594 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8009580:	88fb      	ldrh	r3, [r7, #6]
 8009582:	6153      	str	r3, [r2, #20]
 8009584:	88fb      	ldrh	r3, [r7, #6]
 8009586:	4618      	mov	r0, r3
 8009588:	f7fd fa76 	bl	8006a78 <HAL_GPIO_EXTI_Callback>
 800958c:	bf00      	nop
 800958e:	3708      	adds	r7, #8
 8009590:	46bd      	mov	sp, r7
 8009592:	bd80      	pop	{r7, pc}
 8009594:	40013c00 	.word	0x40013c00

08009598 <HAL_PWREx_EnableOverDrive>:
 8009598:	b580      	push	{r7, lr}
 800959a:	b082      	sub	sp, #8
 800959c:	af00      	add	r7, sp, #0
 800959e:	2300      	movs	r3, #0
 80095a0:	607b      	str	r3, [r7, #4]
 80095a2:	2300      	movs	r3, #0
 80095a4:	603b      	str	r3, [r7, #0]
 80095a6:	4b20      	ldr	r3, [pc, #128]	; (8009628 <HAL_PWREx_EnableOverDrive+0x90>)
 80095a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80095aa:	4a1f      	ldr	r2, [pc, #124]	; (8009628 <HAL_PWREx_EnableOverDrive+0x90>)
 80095ac:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80095b0:	6413      	str	r3, [r2, #64]	; 0x40
 80095b2:	4b1d      	ldr	r3, [pc, #116]	; (8009628 <HAL_PWREx_EnableOverDrive+0x90>)
 80095b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80095b6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80095ba:	603b      	str	r3, [r7, #0]
 80095bc:	683b      	ldr	r3, [r7, #0]
 80095be:	4b1b      	ldr	r3, [pc, #108]	; (800962c <HAL_PWREx_EnableOverDrive+0x94>)
 80095c0:	2201      	movs	r2, #1
 80095c2:	601a      	str	r2, [r3, #0]
 80095c4:	f7fe f8f6 	bl	80077b4 <HAL_GetTick>
 80095c8:	6078      	str	r0, [r7, #4]
 80095ca:	e009      	b.n	80095e0 <HAL_PWREx_EnableOverDrive+0x48>
 80095cc:	f7fe f8f2 	bl	80077b4 <HAL_GetTick>
 80095d0:	4602      	mov	r2, r0
 80095d2:	687b      	ldr	r3, [r7, #4]
 80095d4:	1ad3      	subs	r3, r2, r3
 80095d6:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80095da:	d901      	bls.n	80095e0 <HAL_PWREx_EnableOverDrive+0x48>
 80095dc:	2303      	movs	r3, #3
 80095de:	e01f      	b.n	8009620 <HAL_PWREx_EnableOverDrive+0x88>
 80095e0:	4b13      	ldr	r3, [pc, #76]	; (8009630 <HAL_PWREx_EnableOverDrive+0x98>)
 80095e2:	685b      	ldr	r3, [r3, #4]
 80095e4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80095e8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80095ec:	d1ee      	bne.n	80095cc <HAL_PWREx_EnableOverDrive+0x34>
 80095ee:	4b11      	ldr	r3, [pc, #68]	; (8009634 <HAL_PWREx_EnableOverDrive+0x9c>)
 80095f0:	2201      	movs	r2, #1
 80095f2:	601a      	str	r2, [r3, #0]
 80095f4:	f7fe f8de 	bl	80077b4 <HAL_GetTick>
 80095f8:	6078      	str	r0, [r7, #4]
 80095fa:	e009      	b.n	8009610 <HAL_PWREx_EnableOverDrive+0x78>
 80095fc:	f7fe f8da 	bl	80077b4 <HAL_GetTick>
 8009600:	4602      	mov	r2, r0
 8009602:	687b      	ldr	r3, [r7, #4]
 8009604:	1ad3      	subs	r3, r2, r3
 8009606:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800960a:	d901      	bls.n	8009610 <HAL_PWREx_EnableOverDrive+0x78>
 800960c:	2303      	movs	r3, #3
 800960e:	e007      	b.n	8009620 <HAL_PWREx_EnableOverDrive+0x88>
 8009610:	4b07      	ldr	r3, [pc, #28]	; (8009630 <HAL_PWREx_EnableOverDrive+0x98>)
 8009612:	685b      	ldr	r3, [r3, #4]
 8009614:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009618:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800961c:	d1ee      	bne.n	80095fc <HAL_PWREx_EnableOverDrive+0x64>
 800961e:	2300      	movs	r3, #0
 8009620:	4618      	mov	r0, r3
 8009622:	3708      	adds	r7, #8
 8009624:	46bd      	mov	sp, r7
 8009626:	bd80      	pop	{r7, pc}
 8009628:	40023800 	.word	0x40023800
 800962c:	420e0040 	.word	0x420e0040
 8009630:	40007000 	.word	0x40007000
 8009634:	420e0044 	.word	0x420e0044

08009638 <HAL_RCC_ClockConfig>:
 8009638:	b580      	push	{r7, lr}
 800963a:	b084      	sub	sp, #16
 800963c:	af00      	add	r7, sp, #0
 800963e:	6078      	str	r0, [r7, #4]
 8009640:	6039      	str	r1, [r7, #0]
 8009642:	687b      	ldr	r3, [r7, #4]
 8009644:	2b00      	cmp	r3, #0
 8009646:	d101      	bne.n	800964c <HAL_RCC_ClockConfig+0x14>
 8009648:	2301      	movs	r3, #1
 800964a:	e0cc      	b.n	80097e6 <HAL_RCC_ClockConfig+0x1ae>
 800964c:	4b68      	ldr	r3, [pc, #416]	; (80097f0 <HAL_RCC_ClockConfig+0x1b8>)
 800964e:	681b      	ldr	r3, [r3, #0]
 8009650:	f003 030f 	and.w	r3, r3, #15
 8009654:	683a      	ldr	r2, [r7, #0]
 8009656:	429a      	cmp	r2, r3
 8009658:	d90c      	bls.n	8009674 <HAL_RCC_ClockConfig+0x3c>
 800965a:	4b65      	ldr	r3, [pc, #404]	; (80097f0 <HAL_RCC_ClockConfig+0x1b8>)
 800965c:	683a      	ldr	r2, [r7, #0]
 800965e:	b2d2      	uxtb	r2, r2
 8009660:	701a      	strb	r2, [r3, #0]
 8009662:	4b63      	ldr	r3, [pc, #396]	; (80097f0 <HAL_RCC_ClockConfig+0x1b8>)
 8009664:	681b      	ldr	r3, [r3, #0]
 8009666:	f003 030f 	and.w	r3, r3, #15
 800966a:	683a      	ldr	r2, [r7, #0]
 800966c:	429a      	cmp	r2, r3
 800966e:	d001      	beq.n	8009674 <HAL_RCC_ClockConfig+0x3c>
 8009670:	2301      	movs	r3, #1
 8009672:	e0b8      	b.n	80097e6 <HAL_RCC_ClockConfig+0x1ae>
 8009674:	687b      	ldr	r3, [r7, #4]
 8009676:	681b      	ldr	r3, [r3, #0]
 8009678:	f003 0302 	and.w	r3, r3, #2
 800967c:	2b00      	cmp	r3, #0
 800967e:	d020      	beq.n	80096c2 <HAL_RCC_ClockConfig+0x8a>
 8009680:	687b      	ldr	r3, [r7, #4]
 8009682:	681b      	ldr	r3, [r3, #0]
 8009684:	f003 0304 	and.w	r3, r3, #4
 8009688:	2b00      	cmp	r3, #0
 800968a:	d005      	beq.n	8009698 <HAL_RCC_ClockConfig+0x60>
 800968c:	4b59      	ldr	r3, [pc, #356]	; (80097f4 <HAL_RCC_ClockConfig+0x1bc>)
 800968e:	689b      	ldr	r3, [r3, #8]
 8009690:	4a58      	ldr	r2, [pc, #352]	; (80097f4 <HAL_RCC_ClockConfig+0x1bc>)
 8009692:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8009696:	6093      	str	r3, [r2, #8]
 8009698:	687b      	ldr	r3, [r7, #4]
 800969a:	681b      	ldr	r3, [r3, #0]
 800969c:	f003 0308 	and.w	r3, r3, #8
 80096a0:	2b00      	cmp	r3, #0
 80096a2:	d005      	beq.n	80096b0 <HAL_RCC_ClockConfig+0x78>
 80096a4:	4b53      	ldr	r3, [pc, #332]	; (80097f4 <HAL_RCC_ClockConfig+0x1bc>)
 80096a6:	689b      	ldr	r3, [r3, #8]
 80096a8:	4a52      	ldr	r2, [pc, #328]	; (80097f4 <HAL_RCC_ClockConfig+0x1bc>)
 80096aa:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80096ae:	6093      	str	r3, [r2, #8]
 80096b0:	4b50      	ldr	r3, [pc, #320]	; (80097f4 <HAL_RCC_ClockConfig+0x1bc>)
 80096b2:	689b      	ldr	r3, [r3, #8]
 80096b4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80096b8:	687b      	ldr	r3, [r7, #4]
 80096ba:	689b      	ldr	r3, [r3, #8]
 80096bc:	494d      	ldr	r1, [pc, #308]	; (80097f4 <HAL_RCC_ClockConfig+0x1bc>)
 80096be:	4313      	orrs	r3, r2
 80096c0:	608b      	str	r3, [r1, #8]
 80096c2:	687b      	ldr	r3, [r7, #4]
 80096c4:	681b      	ldr	r3, [r3, #0]
 80096c6:	f003 0301 	and.w	r3, r3, #1
 80096ca:	2b00      	cmp	r3, #0
 80096cc:	d044      	beq.n	8009758 <HAL_RCC_ClockConfig+0x120>
 80096ce:	687b      	ldr	r3, [r7, #4]
 80096d0:	685b      	ldr	r3, [r3, #4]
 80096d2:	2b01      	cmp	r3, #1
 80096d4:	d107      	bne.n	80096e6 <HAL_RCC_ClockConfig+0xae>
 80096d6:	4b47      	ldr	r3, [pc, #284]	; (80097f4 <HAL_RCC_ClockConfig+0x1bc>)
 80096d8:	681b      	ldr	r3, [r3, #0]
 80096da:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80096de:	2b00      	cmp	r3, #0
 80096e0:	d119      	bne.n	8009716 <HAL_RCC_ClockConfig+0xde>
 80096e2:	2301      	movs	r3, #1
 80096e4:	e07f      	b.n	80097e6 <HAL_RCC_ClockConfig+0x1ae>
 80096e6:	687b      	ldr	r3, [r7, #4]
 80096e8:	685b      	ldr	r3, [r3, #4]
 80096ea:	2b02      	cmp	r3, #2
 80096ec:	d003      	beq.n	80096f6 <HAL_RCC_ClockConfig+0xbe>
 80096ee:	687b      	ldr	r3, [r7, #4]
 80096f0:	685b      	ldr	r3, [r3, #4]
 80096f2:	2b03      	cmp	r3, #3
 80096f4:	d107      	bne.n	8009706 <HAL_RCC_ClockConfig+0xce>
 80096f6:	4b3f      	ldr	r3, [pc, #252]	; (80097f4 <HAL_RCC_ClockConfig+0x1bc>)
 80096f8:	681b      	ldr	r3, [r3, #0]
 80096fa:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80096fe:	2b00      	cmp	r3, #0
 8009700:	d109      	bne.n	8009716 <HAL_RCC_ClockConfig+0xde>
 8009702:	2301      	movs	r3, #1
 8009704:	e06f      	b.n	80097e6 <HAL_RCC_ClockConfig+0x1ae>
 8009706:	4b3b      	ldr	r3, [pc, #236]	; (80097f4 <HAL_RCC_ClockConfig+0x1bc>)
 8009708:	681b      	ldr	r3, [r3, #0]
 800970a:	f003 0302 	and.w	r3, r3, #2
 800970e:	2b00      	cmp	r3, #0
 8009710:	d101      	bne.n	8009716 <HAL_RCC_ClockConfig+0xde>
 8009712:	2301      	movs	r3, #1
 8009714:	e067      	b.n	80097e6 <HAL_RCC_ClockConfig+0x1ae>
 8009716:	4b37      	ldr	r3, [pc, #220]	; (80097f4 <HAL_RCC_ClockConfig+0x1bc>)
 8009718:	689b      	ldr	r3, [r3, #8]
 800971a:	f023 0203 	bic.w	r2, r3, #3
 800971e:	687b      	ldr	r3, [r7, #4]
 8009720:	685b      	ldr	r3, [r3, #4]
 8009722:	4934      	ldr	r1, [pc, #208]	; (80097f4 <HAL_RCC_ClockConfig+0x1bc>)
 8009724:	4313      	orrs	r3, r2
 8009726:	608b      	str	r3, [r1, #8]
 8009728:	f7fe f844 	bl	80077b4 <HAL_GetTick>
 800972c:	60f8      	str	r0, [r7, #12]
 800972e:	e00a      	b.n	8009746 <HAL_RCC_ClockConfig+0x10e>
 8009730:	f7fe f840 	bl	80077b4 <HAL_GetTick>
 8009734:	4602      	mov	r2, r0
 8009736:	68fb      	ldr	r3, [r7, #12]
 8009738:	1ad3      	subs	r3, r2, r3
 800973a:	f241 3288 	movw	r2, #5000	; 0x1388
 800973e:	4293      	cmp	r3, r2
 8009740:	d901      	bls.n	8009746 <HAL_RCC_ClockConfig+0x10e>
 8009742:	2303      	movs	r3, #3
 8009744:	e04f      	b.n	80097e6 <HAL_RCC_ClockConfig+0x1ae>
 8009746:	4b2b      	ldr	r3, [pc, #172]	; (80097f4 <HAL_RCC_ClockConfig+0x1bc>)
 8009748:	689b      	ldr	r3, [r3, #8]
 800974a:	f003 020c 	and.w	r2, r3, #12
 800974e:	687b      	ldr	r3, [r7, #4]
 8009750:	685b      	ldr	r3, [r3, #4]
 8009752:	009b      	lsls	r3, r3, #2
 8009754:	429a      	cmp	r2, r3
 8009756:	d1eb      	bne.n	8009730 <HAL_RCC_ClockConfig+0xf8>
 8009758:	4b25      	ldr	r3, [pc, #148]	; (80097f0 <HAL_RCC_ClockConfig+0x1b8>)
 800975a:	681b      	ldr	r3, [r3, #0]
 800975c:	f003 030f 	and.w	r3, r3, #15
 8009760:	683a      	ldr	r2, [r7, #0]
 8009762:	429a      	cmp	r2, r3
 8009764:	d20c      	bcs.n	8009780 <HAL_RCC_ClockConfig+0x148>
 8009766:	4b22      	ldr	r3, [pc, #136]	; (80097f0 <HAL_RCC_ClockConfig+0x1b8>)
 8009768:	683a      	ldr	r2, [r7, #0]
 800976a:	b2d2      	uxtb	r2, r2
 800976c:	701a      	strb	r2, [r3, #0]
 800976e:	4b20      	ldr	r3, [pc, #128]	; (80097f0 <HAL_RCC_ClockConfig+0x1b8>)
 8009770:	681b      	ldr	r3, [r3, #0]
 8009772:	f003 030f 	and.w	r3, r3, #15
 8009776:	683a      	ldr	r2, [r7, #0]
 8009778:	429a      	cmp	r2, r3
 800977a:	d001      	beq.n	8009780 <HAL_RCC_ClockConfig+0x148>
 800977c:	2301      	movs	r3, #1
 800977e:	e032      	b.n	80097e6 <HAL_RCC_ClockConfig+0x1ae>
 8009780:	687b      	ldr	r3, [r7, #4]
 8009782:	681b      	ldr	r3, [r3, #0]
 8009784:	f003 0304 	and.w	r3, r3, #4
 8009788:	2b00      	cmp	r3, #0
 800978a:	d008      	beq.n	800979e <HAL_RCC_ClockConfig+0x166>
 800978c:	4b19      	ldr	r3, [pc, #100]	; (80097f4 <HAL_RCC_ClockConfig+0x1bc>)
 800978e:	689b      	ldr	r3, [r3, #8]
 8009790:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8009794:	687b      	ldr	r3, [r7, #4]
 8009796:	68db      	ldr	r3, [r3, #12]
 8009798:	4916      	ldr	r1, [pc, #88]	; (80097f4 <HAL_RCC_ClockConfig+0x1bc>)
 800979a:	4313      	orrs	r3, r2
 800979c:	608b      	str	r3, [r1, #8]
 800979e:	687b      	ldr	r3, [r7, #4]
 80097a0:	681b      	ldr	r3, [r3, #0]
 80097a2:	f003 0308 	and.w	r3, r3, #8
 80097a6:	2b00      	cmp	r3, #0
 80097a8:	d009      	beq.n	80097be <HAL_RCC_ClockConfig+0x186>
 80097aa:	4b12      	ldr	r3, [pc, #72]	; (80097f4 <HAL_RCC_ClockConfig+0x1bc>)
 80097ac:	689b      	ldr	r3, [r3, #8]
 80097ae:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80097b2:	687b      	ldr	r3, [r7, #4]
 80097b4:	691b      	ldr	r3, [r3, #16]
 80097b6:	00db      	lsls	r3, r3, #3
 80097b8:	490e      	ldr	r1, [pc, #56]	; (80097f4 <HAL_RCC_ClockConfig+0x1bc>)
 80097ba:	4313      	orrs	r3, r2
 80097bc:	608b      	str	r3, [r1, #8]
 80097be:	f000 f855 	bl	800986c <HAL_RCC_GetSysClockFreq>
 80097c2:	4602      	mov	r2, r0
 80097c4:	4b0b      	ldr	r3, [pc, #44]	; (80097f4 <HAL_RCC_ClockConfig+0x1bc>)
 80097c6:	689b      	ldr	r3, [r3, #8]
 80097c8:	091b      	lsrs	r3, r3, #4
 80097ca:	f003 030f 	and.w	r3, r3, #15
 80097ce:	490a      	ldr	r1, [pc, #40]	; (80097f8 <HAL_RCC_ClockConfig+0x1c0>)
 80097d0:	5ccb      	ldrb	r3, [r1, r3]
 80097d2:	fa22 f303 	lsr.w	r3, r2, r3
 80097d6:	4a09      	ldr	r2, [pc, #36]	; (80097fc <HAL_RCC_ClockConfig+0x1c4>)
 80097d8:	6013      	str	r3, [r2, #0]
 80097da:	4b09      	ldr	r3, [pc, #36]	; (8009800 <HAL_RCC_ClockConfig+0x1c8>)
 80097dc:	681b      	ldr	r3, [r3, #0]
 80097de:	4618      	mov	r0, r3
 80097e0:	f7fd ffa4 	bl	800772c <HAL_InitTick>
 80097e4:	2300      	movs	r3, #0
 80097e6:	4618      	mov	r0, r3
 80097e8:	3710      	adds	r7, #16
 80097ea:	46bd      	mov	sp, r7
 80097ec:	bd80      	pop	{r7, pc}
 80097ee:	bf00      	nop
 80097f0:	40023c00 	.word	0x40023c00
 80097f4:	40023800 	.word	0x40023800
 80097f8:	08011564 	.word	0x08011564
 80097fc:	20000134 	.word	0x20000134
 8009800:	20000138 	.word	0x20000138

08009804 <HAL_RCC_GetHCLKFreq>:
 8009804:	b480      	push	{r7}
 8009806:	af00      	add	r7, sp, #0
 8009808:	4b03      	ldr	r3, [pc, #12]	; (8009818 <HAL_RCC_GetHCLKFreq+0x14>)
 800980a:	681b      	ldr	r3, [r3, #0]
 800980c:	4618      	mov	r0, r3
 800980e:	46bd      	mov	sp, r7
 8009810:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009814:	4770      	bx	lr
 8009816:	bf00      	nop
 8009818:	20000134 	.word	0x20000134

0800981c <HAL_RCC_GetPCLK1Freq>:
 800981c:	b580      	push	{r7, lr}
 800981e:	af00      	add	r7, sp, #0
 8009820:	f7ff fff0 	bl	8009804 <HAL_RCC_GetHCLKFreq>
 8009824:	4602      	mov	r2, r0
 8009826:	4b05      	ldr	r3, [pc, #20]	; (800983c <HAL_RCC_GetPCLK1Freq+0x20>)
 8009828:	689b      	ldr	r3, [r3, #8]
 800982a:	0a9b      	lsrs	r3, r3, #10
 800982c:	f003 0307 	and.w	r3, r3, #7
 8009830:	4903      	ldr	r1, [pc, #12]	; (8009840 <HAL_RCC_GetPCLK1Freq+0x24>)
 8009832:	5ccb      	ldrb	r3, [r1, r3]
 8009834:	fa22 f303 	lsr.w	r3, r2, r3
 8009838:	4618      	mov	r0, r3
 800983a:	bd80      	pop	{r7, pc}
 800983c:	40023800 	.word	0x40023800
 8009840:	08011574 	.word	0x08011574

08009844 <HAL_RCC_GetPCLK2Freq>:
 8009844:	b580      	push	{r7, lr}
 8009846:	af00      	add	r7, sp, #0
 8009848:	f7ff ffdc 	bl	8009804 <HAL_RCC_GetHCLKFreq>
 800984c:	4602      	mov	r2, r0
 800984e:	4b05      	ldr	r3, [pc, #20]	; (8009864 <HAL_RCC_GetPCLK2Freq+0x20>)
 8009850:	689b      	ldr	r3, [r3, #8]
 8009852:	0b5b      	lsrs	r3, r3, #13
 8009854:	f003 0307 	and.w	r3, r3, #7
 8009858:	4903      	ldr	r1, [pc, #12]	; (8009868 <HAL_RCC_GetPCLK2Freq+0x24>)
 800985a:	5ccb      	ldrb	r3, [r1, r3]
 800985c:	fa22 f303 	lsr.w	r3, r2, r3
 8009860:	4618      	mov	r0, r3
 8009862:	bd80      	pop	{r7, pc}
 8009864:	40023800 	.word	0x40023800
 8009868:	08011574 	.word	0x08011574

0800986c <HAL_RCC_GetSysClockFreq>:
 800986c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8009870:	b0ae      	sub	sp, #184	; 0xb8
 8009872:	af00      	add	r7, sp, #0
 8009874:	2300      	movs	r3, #0
 8009876:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800987a:	2300      	movs	r3, #0
 800987c:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8009880:	2300      	movs	r3, #0
 8009882:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8009886:	2300      	movs	r3, #0
 8009888:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800988c:	2300      	movs	r3, #0
 800988e:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8009892:	4bcb      	ldr	r3, [pc, #812]	; (8009bc0 <HAL_RCC_GetSysClockFreq+0x354>)
 8009894:	689b      	ldr	r3, [r3, #8]
 8009896:	f003 030c 	and.w	r3, r3, #12
 800989a:	2b0c      	cmp	r3, #12
 800989c:	f200 8206 	bhi.w	8009cac <HAL_RCC_GetSysClockFreq+0x440>
 80098a0:	a201      	add	r2, pc, #4	; (adr r2, 80098a8 <HAL_RCC_GetSysClockFreq+0x3c>)
 80098a2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80098a6:	bf00      	nop
 80098a8:	080098dd 	.word	0x080098dd
 80098ac:	08009cad 	.word	0x08009cad
 80098b0:	08009cad 	.word	0x08009cad
 80098b4:	08009cad 	.word	0x08009cad
 80098b8:	080098e5 	.word	0x080098e5
 80098bc:	08009cad 	.word	0x08009cad
 80098c0:	08009cad 	.word	0x08009cad
 80098c4:	08009cad 	.word	0x08009cad
 80098c8:	080098ed 	.word	0x080098ed
 80098cc:	08009cad 	.word	0x08009cad
 80098d0:	08009cad 	.word	0x08009cad
 80098d4:	08009cad 	.word	0x08009cad
 80098d8:	08009add 	.word	0x08009add
 80098dc:	4bb9      	ldr	r3, [pc, #740]	; (8009bc4 <HAL_RCC_GetSysClockFreq+0x358>)
 80098de:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80098e2:	e1e7      	b.n	8009cb4 <HAL_RCC_GetSysClockFreq+0x448>
 80098e4:	4bb8      	ldr	r3, [pc, #736]	; (8009bc8 <HAL_RCC_GetSysClockFreq+0x35c>)
 80098e6:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80098ea:	e1e3      	b.n	8009cb4 <HAL_RCC_GetSysClockFreq+0x448>
 80098ec:	4bb4      	ldr	r3, [pc, #720]	; (8009bc0 <HAL_RCC_GetSysClockFreq+0x354>)
 80098ee:	685b      	ldr	r3, [r3, #4]
 80098f0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80098f4:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 80098f8:	4bb1      	ldr	r3, [pc, #708]	; (8009bc0 <HAL_RCC_GetSysClockFreq+0x354>)
 80098fa:	685b      	ldr	r3, [r3, #4]
 80098fc:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009900:	2b00      	cmp	r3, #0
 8009902:	d071      	beq.n	80099e8 <HAL_RCC_GetSysClockFreq+0x17c>
 8009904:	4bae      	ldr	r3, [pc, #696]	; (8009bc0 <HAL_RCC_GetSysClockFreq+0x354>)
 8009906:	685b      	ldr	r3, [r3, #4]
 8009908:	099b      	lsrs	r3, r3, #6
 800990a:	2200      	movs	r2, #0
 800990c:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8009910:	f8c7 209c 	str.w	r2, [r7, #156]	; 0x9c
 8009914:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8009918:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800991c:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8009920:	2300      	movs	r3, #0
 8009922:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8009926:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 800992a:	4622      	mov	r2, r4
 800992c:	462b      	mov	r3, r5
 800992e:	f04f 0000 	mov.w	r0, #0
 8009932:	f04f 0100 	mov.w	r1, #0
 8009936:	0159      	lsls	r1, r3, #5
 8009938:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800993c:	0150      	lsls	r0, r2, #5
 800993e:	4602      	mov	r2, r0
 8009940:	460b      	mov	r3, r1
 8009942:	4621      	mov	r1, r4
 8009944:	1a51      	subs	r1, r2, r1
 8009946:	6439      	str	r1, [r7, #64]	; 0x40
 8009948:	4629      	mov	r1, r5
 800994a:	eb63 0301 	sbc.w	r3, r3, r1
 800994e:	647b      	str	r3, [r7, #68]	; 0x44
 8009950:	f04f 0200 	mov.w	r2, #0
 8009954:	f04f 0300 	mov.w	r3, #0
 8009958:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	; 0x40
 800995c:	4649      	mov	r1, r9
 800995e:	018b      	lsls	r3, r1, #6
 8009960:	4641      	mov	r1, r8
 8009962:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8009966:	4641      	mov	r1, r8
 8009968:	018a      	lsls	r2, r1, #6
 800996a:	4641      	mov	r1, r8
 800996c:	1a51      	subs	r1, r2, r1
 800996e:	63b9      	str	r1, [r7, #56]	; 0x38
 8009970:	4649      	mov	r1, r9
 8009972:	eb63 0301 	sbc.w	r3, r3, r1
 8009976:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009978:	f04f 0200 	mov.w	r2, #0
 800997c:	f04f 0300 	mov.w	r3, #0
 8009980:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	; 0x38
 8009984:	4649      	mov	r1, r9
 8009986:	00cb      	lsls	r3, r1, #3
 8009988:	4641      	mov	r1, r8
 800998a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800998e:	4641      	mov	r1, r8
 8009990:	00ca      	lsls	r2, r1, #3
 8009992:	4610      	mov	r0, r2
 8009994:	4619      	mov	r1, r3
 8009996:	4603      	mov	r3, r0
 8009998:	4622      	mov	r2, r4
 800999a:	189b      	adds	r3, r3, r2
 800999c:	633b      	str	r3, [r7, #48]	; 0x30
 800999e:	462b      	mov	r3, r5
 80099a0:	460a      	mov	r2, r1
 80099a2:	eb42 0303 	adc.w	r3, r2, r3
 80099a6:	637b      	str	r3, [r7, #52]	; 0x34
 80099a8:	f04f 0200 	mov.w	r2, #0
 80099ac:	f04f 0300 	mov.w	r3, #0
 80099b0:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 80099b4:	4629      	mov	r1, r5
 80099b6:	024b      	lsls	r3, r1, #9
 80099b8:	4621      	mov	r1, r4
 80099ba:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80099be:	4621      	mov	r1, r4
 80099c0:	024a      	lsls	r2, r1, #9
 80099c2:	4610      	mov	r0, r2
 80099c4:	4619      	mov	r1, r3
 80099c6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80099ca:	2200      	movs	r2, #0
 80099cc:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 80099d0:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80099d4:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 80099d8:	f7f7 f956 	bl	8000c88 <__aeabi_uldivmod>
 80099dc:	4602      	mov	r2, r0
 80099de:	460b      	mov	r3, r1
 80099e0:	4613      	mov	r3, r2
 80099e2:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80099e6:	e067      	b.n	8009ab8 <HAL_RCC_GetSysClockFreq+0x24c>
 80099e8:	4b75      	ldr	r3, [pc, #468]	; (8009bc0 <HAL_RCC_GetSysClockFreq+0x354>)
 80099ea:	685b      	ldr	r3, [r3, #4]
 80099ec:	099b      	lsrs	r3, r3, #6
 80099ee:	2200      	movs	r2, #0
 80099f0:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 80099f4:	f8c7 2084 	str.w	r2, [r7, #132]	; 0x84
 80099f8:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 80099fc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009a00:	67bb      	str	r3, [r7, #120]	; 0x78
 8009a02:	2300      	movs	r3, #0
 8009a04:	67fb      	str	r3, [r7, #124]	; 0x7c
 8009a06:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	; 0x78
 8009a0a:	4622      	mov	r2, r4
 8009a0c:	462b      	mov	r3, r5
 8009a0e:	f04f 0000 	mov.w	r0, #0
 8009a12:	f04f 0100 	mov.w	r1, #0
 8009a16:	0159      	lsls	r1, r3, #5
 8009a18:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8009a1c:	0150      	lsls	r0, r2, #5
 8009a1e:	4602      	mov	r2, r0
 8009a20:	460b      	mov	r3, r1
 8009a22:	4621      	mov	r1, r4
 8009a24:	1a51      	subs	r1, r2, r1
 8009a26:	62b9      	str	r1, [r7, #40]	; 0x28
 8009a28:	4629      	mov	r1, r5
 8009a2a:	eb63 0301 	sbc.w	r3, r3, r1
 8009a2e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009a30:	f04f 0200 	mov.w	r2, #0
 8009a34:	f04f 0300 	mov.w	r3, #0
 8009a38:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	; 0x28
 8009a3c:	4649      	mov	r1, r9
 8009a3e:	018b      	lsls	r3, r1, #6
 8009a40:	4641      	mov	r1, r8
 8009a42:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8009a46:	4641      	mov	r1, r8
 8009a48:	018a      	lsls	r2, r1, #6
 8009a4a:	4641      	mov	r1, r8
 8009a4c:	ebb2 0a01 	subs.w	sl, r2, r1
 8009a50:	4649      	mov	r1, r9
 8009a52:	eb63 0b01 	sbc.w	fp, r3, r1
 8009a56:	f04f 0200 	mov.w	r2, #0
 8009a5a:	f04f 0300 	mov.w	r3, #0
 8009a5e:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8009a62:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8009a66:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8009a6a:	4692      	mov	sl, r2
 8009a6c:	469b      	mov	fp, r3
 8009a6e:	4623      	mov	r3, r4
 8009a70:	eb1a 0303 	adds.w	r3, sl, r3
 8009a74:	623b      	str	r3, [r7, #32]
 8009a76:	462b      	mov	r3, r5
 8009a78:	eb4b 0303 	adc.w	r3, fp, r3
 8009a7c:	627b      	str	r3, [r7, #36]	; 0x24
 8009a7e:	f04f 0200 	mov.w	r2, #0
 8009a82:	f04f 0300 	mov.w	r3, #0
 8009a86:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 8009a8a:	4629      	mov	r1, r5
 8009a8c:	028b      	lsls	r3, r1, #10
 8009a8e:	4621      	mov	r1, r4
 8009a90:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8009a94:	4621      	mov	r1, r4
 8009a96:	028a      	lsls	r2, r1, #10
 8009a98:	4610      	mov	r0, r2
 8009a9a:	4619      	mov	r1, r3
 8009a9c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8009aa0:	2200      	movs	r2, #0
 8009aa2:	673b      	str	r3, [r7, #112]	; 0x70
 8009aa4:	677a      	str	r2, [r7, #116]	; 0x74
 8009aa6:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 8009aaa:	f7f7 f8ed 	bl	8000c88 <__aeabi_uldivmod>
 8009aae:	4602      	mov	r2, r0
 8009ab0:	460b      	mov	r3, r1
 8009ab2:	4613      	mov	r3, r2
 8009ab4:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8009ab8:	4b41      	ldr	r3, [pc, #260]	; (8009bc0 <HAL_RCC_GetSysClockFreq+0x354>)
 8009aba:	685b      	ldr	r3, [r3, #4]
 8009abc:	0c1b      	lsrs	r3, r3, #16
 8009abe:	f003 0303 	and.w	r3, r3, #3
 8009ac2:	3301      	adds	r3, #1
 8009ac4:	005b      	lsls	r3, r3, #1
 8009ac6:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8009aca:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8009ace:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8009ad2:	fbb2 f3f3 	udiv	r3, r2, r3
 8009ad6:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8009ada:	e0eb      	b.n	8009cb4 <HAL_RCC_GetSysClockFreq+0x448>
 8009adc:	4b38      	ldr	r3, [pc, #224]	; (8009bc0 <HAL_RCC_GetSysClockFreq+0x354>)
 8009ade:	685b      	ldr	r3, [r3, #4]
 8009ae0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009ae4:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8009ae8:	4b35      	ldr	r3, [pc, #212]	; (8009bc0 <HAL_RCC_GetSysClockFreq+0x354>)
 8009aea:	685b      	ldr	r3, [r3, #4]
 8009aec:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009af0:	2b00      	cmp	r3, #0
 8009af2:	d06b      	beq.n	8009bcc <HAL_RCC_GetSysClockFreq+0x360>
 8009af4:	4b32      	ldr	r3, [pc, #200]	; (8009bc0 <HAL_RCC_GetSysClockFreq+0x354>)
 8009af6:	685b      	ldr	r3, [r3, #4]
 8009af8:	099b      	lsrs	r3, r3, #6
 8009afa:	2200      	movs	r2, #0
 8009afc:	66bb      	str	r3, [r7, #104]	; 0x68
 8009afe:	66fa      	str	r2, [r7, #108]	; 0x6c
 8009b00:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8009b02:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009b06:	663b      	str	r3, [r7, #96]	; 0x60
 8009b08:	2300      	movs	r3, #0
 8009b0a:	667b      	str	r3, [r7, #100]	; 0x64
 8009b0c:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	; 0x60
 8009b10:	4622      	mov	r2, r4
 8009b12:	462b      	mov	r3, r5
 8009b14:	f04f 0000 	mov.w	r0, #0
 8009b18:	f04f 0100 	mov.w	r1, #0
 8009b1c:	0159      	lsls	r1, r3, #5
 8009b1e:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8009b22:	0150      	lsls	r0, r2, #5
 8009b24:	4602      	mov	r2, r0
 8009b26:	460b      	mov	r3, r1
 8009b28:	4621      	mov	r1, r4
 8009b2a:	1a51      	subs	r1, r2, r1
 8009b2c:	61b9      	str	r1, [r7, #24]
 8009b2e:	4629      	mov	r1, r5
 8009b30:	eb63 0301 	sbc.w	r3, r3, r1
 8009b34:	61fb      	str	r3, [r7, #28]
 8009b36:	f04f 0200 	mov.w	r2, #0
 8009b3a:	f04f 0300 	mov.w	r3, #0
 8009b3e:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 8009b42:	4659      	mov	r1, fp
 8009b44:	018b      	lsls	r3, r1, #6
 8009b46:	4651      	mov	r1, sl
 8009b48:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8009b4c:	4651      	mov	r1, sl
 8009b4e:	018a      	lsls	r2, r1, #6
 8009b50:	4651      	mov	r1, sl
 8009b52:	ebb2 0801 	subs.w	r8, r2, r1
 8009b56:	4659      	mov	r1, fp
 8009b58:	eb63 0901 	sbc.w	r9, r3, r1
 8009b5c:	f04f 0200 	mov.w	r2, #0
 8009b60:	f04f 0300 	mov.w	r3, #0
 8009b64:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8009b68:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8009b6c:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8009b70:	4690      	mov	r8, r2
 8009b72:	4699      	mov	r9, r3
 8009b74:	4623      	mov	r3, r4
 8009b76:	eb18 0303 	adds.w	r3, r8, r3
 8009b7a:	613b      	str	r3, [r7, #16]
 8009b7c:	462b      	mov	r3, r5
 8009b7e:	eb49 0303 	adc.w	r3, r9, r3
 8009b82:	617b      	str	r3, [r7, #20]
 8009b84:	f04f 0200 	mov.w	r2, #0
 8009b88:	f04f 0300 	mov.w	r3, #0
 8009b8c:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8009b90:	4629      	mov	r1, r5
 8009b92:	024b      	lsls	r3, r1, #9
 8009b94:	4621      	mov	r1, r4
 8009b96:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8009b9a:	4621      	mov	r1, r4
 8009b9c:	024a      	lsls	r2, r1, #9
 8009b9e:	4610      	mov	r0, r2
 8009ba0:	4619      	mov	r1, r3
 8009ba2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8009ba6:	2200      	movs	r2, #0
 8009ba8:	65bb      	str	r3, [r7, #88]	; 0x58
 8009baa:	65fa      	str	r2, [r7, #92]	; 0x5c
 8009bac:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8009bb0:	f7f7 f86a 	bl	8000c88 <__aeabi_uldivmod>
 8009bb4:	4602      	mov	r2, r0
 8009bb6:	460b      	mov	r3, r1
 8009bb8:	4613      	mov	r3, r2
 8009bba:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8009bbe:	e065      	b.n	8009c8c <HAL_RCC_GetSysClockFreq+0x420>
 8009bc0:	40023800 	.word	0x40023800
 8009bc4:	00f42400 	.word	0x00f42400
 8009bc8:	007a1200 	.word	0x007a1200
 8009bcc:	4b3d      	ldr	r3, [pc, #244]	; (8009cc4 <HAL_RCC_GetSysClockFreq+0x458>)
 8009bce:	685b      	ldr	r3, [r3, #4]
 8009bd0:	099b      	lsrs	r3, r3, #6
 8009bd2:	2200      	movs	r2, #0
 8009bd4:	4618      	mov	r0, r3
 8009bd6:	4611      	mov	r1, r2
 8009bd8:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8009bdc:	653b      	str	r3, [r7, #80]	; 0x50
 8009bde:	2300      	movs	r3, #0
 8009be0:	657b      	str	r3, [r7, #84]	; 0x54
 8009be2:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	; 0x50
 8009be6:	4642      	mov	r2, r8
 8009be8:	464b      	mov	r3, r9
 8009bea:	f04f 0000 	mov.w	r0, #0
 8009bee:	f04f 0100 	mov.w	r1, #0
 8009bf2:	0159      	lsls	r1, r3, #5
 8009bf4:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8009bf8:	0150      	lsls	r0, r2, #5
 8009bfa:	4602      	mov	r2, r0
 8009bfc:	460b      	mov	r3, r1
 8009bfe:	4641      	mov	r1, r8
 8009c00:	1a51      	subs	r1, r2, r1
 8009c02:	60b9      	str	r1, [r7, #8]
 8009c04:	4649      	mov	r1, r9
 8009c06:	eb63 0301 	sbc.w	r3, r3, r1
 8009c0a:	60fb      	str	r3, [r7, #12]
 8009c0c:	f04f 0200 	mov.w	r2, #0
 8009c10:	f04f 0300 	mov.w	r3, #0
 8009c14:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 8009c18:	4659      	mov	r1, fp
 8009c1a:	018b      	lsls	r3, r1, #6
 8009c1c:	4651      	mov	r1, sl
 8009c1e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8009c22:	4651      	mov	r1, sl
 8009c24:	018a      	lsls	r2, r1, #6
 8009c26:	4651      	mov	r1, sl
 8009c28:	1a54      	subs	r4, r2, r1
 8009c2a:	4659      	mov	r1, fp
 8009c2c:	eb63 0501 	sbc.w	r5, r3, r1
 8009c30:	f04f 0200 	mov.w	r2, #0
 8009c34:	f04f 0300 	mov.w	r3, #0
 8009c38:	00eb      	lsls	r3, r5, #3
 8009c3a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8009c3e:	00e2      	lsls	r2, r4, #3
 8009c40:	4614      	mov	r4, r2
 8009c42:	461d      	mov	r5, r3
 8009c44:	4643      	mov	r3, r8
 8009c46:	18e3      	adds	r3, r4, r3
 8009c48:	603b      	str	r3, [r7, #0]
 8009c4a:	464b      	mov	r3, r9
 8009c4c:	eb45 0303 	adc.w	r3, r5, r3
 8009c50:	607b      	str	r3, [r7, #4]
 8009c52:	f04f 0200 	mov.w	r2, #0
 8009c56:	f04f 0300 	mov.w	r3, #0
 8009c5a:	e9d7 4500 	ldrd	r4, r5, [r7]
 8009c5e:	4629      	mov	r1, r5
 8009c60:	028b      	lsls	r3, r1, #10
 8009c62:	4621      	mov	r1, r4
 8009c64:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8009c68:	4621      	mov	r1, r4
 8009c6a:	028a      	lsls	r2, r1, #10
 8009c6c:	4610      	mov	r0, r2
 8009c6e:	4619      	mov	r1, r3
 8009c70:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8009c74:	2200      	movs	r2, #0
 8009c76:	64bb      	str	r3, [r7, #72]	; 0x48
 8009c78:	64fa      	str	r2, [r7, #76]	; 0x4c
 8009c7a:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8009c7e:	f7f7 f803 	bl	8000c88 <__aeabi_uldivmod>
 8009c82:	4602      	mov	r2, r0
 8009c84:	460b      	mov	r3, r1
 8009c86:	4613      	mov	r3, r2
 8009c88:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8009c8c:	4b0d      	ldr	r3, [pc, #52]	; (8009cc4 <HAL_RCC_GetSysClockFreq+0x458>)
 8009c8e:	685b      	ldr	r3, [r3, #4]
 8009c90:	0f1b      	lsrs	r3, r3, #28
 8009c92:	f003 0307 	and.w	r3, r3, #7
 8009c96:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8009c9a:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8009c9e:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 8009ca2:	fbb2 f3f3 	udiv	r3, r2, r3
 8009ca6:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8009caa:	e003      	b.n	8009cb4 <HAL_RCC_GetSysClockFreq+0x448>
 8009cac:	4b06      	ldr	r3, [pc, #24]	; (8009cc8 <HAL_RCC_GetSysClockFreq+0x45c>)
 8009cae:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8009cb2:	bf00      	nop
 8009cb4:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 8009cb8:	4618      	mov	r0, r3
 8009cba:	37b8      	adds	r7, #184	; 0xb8
 8009cbc:	46bd      	mov	sp, r7
 8009cbe:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8009cc2:	bf00      	nop
 8009cc4:	40023800 	.word	0x40023800
 8009cc8:	00f42400 	.word	0x00f42400

08009ccc <HAL_RCC_OscConfig>:
 8009ccc:	b580      	push	{r7, lr}
 8009cce:	b086      	sub	sp, #24
 8009cd0:	af00      	add	r7, sp, #0
 8009cd2:	6078      	str	r0, [r7, #4]
 8009cd4:	687b      	ldr	r3, [r7, #4]
 8009cd6:	2b00      	cmp	r3, #0
 8009cd8:	d101      	bne.n	8009cde <HAL_RCC_OscConfig+0x12>
 8009cda:	2301      	movs	r3, #1
 8009cdc:	e28d      	b.n	800a1fa <HAL_RCC_OscConfig+0x52e>
 8009cde:	687b      	ldr	r3, [r7, #4]
 8009ce0:	681b      	ldr	r3, [r3, #0]
 8009ce2:	f003 0301 	and.w	r3, r3, #1
 8009ce6:	2b00      	cmp	r3, #0
 8009ce8:	f000 8083 	beq.w	8009df2 <HAL_RCC_OscConfig+0x126>
 8009cec:	4b94      	ldr	r3, [pc, #592]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009cee:	689b      	ldr	r3, [r3, #8]
 8009cf0:	f003 030c 	and.w	r3, r3, #12
 8009cf4:	2b04      	cmp	r3, #4
 8009cf6:	d019      	beq.n	8009d2c <HAL_RCC_OscConfig+0x60>
 8009cf8:	4b91      	ldr	r3, [pc, #580]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009cfa:	689b      	ldr	r3, [r3, #8]
 8009cfc:	f003 030c 	and.w	r3, r3, #12
 8009d00:	2b08      	cmp	r3, #8
 8009d02:	d106      	bne.n	8009d12 <HAL_RCC_OscConfig+0x46>
 8009d04:	4b8e      	ldr	r3, [pc, #568]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009d06:	685b      	ldr	r3, [r3, #4]
 8009d08:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009d0c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8009d10:	d00c      	beq.n	8009d2c <HAL_RCC_OscConfig+0x60>
 8009d12:	4b8b      	ldr	r3, [pc, #556]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009d14:	689b      	ldr	r3, [r3, #8]
 8009d16:	f003 030c 	and.w	r3, r3, #12
 8009d1a:	2b0c      	cmp	r3, #12
 8009d1c:	d112      	bne.n	8009d44 <HAL_RCC_OscConfig+0x78>
 8009d1e:	4b88      	ldr	r3, [pc, #544]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009d20:	685b      	ldr	r3, [r3, #4]
 8009d22:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009d26:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8009d2a:	d10b      	bne.n	8009d44 <HAL_RCC_OscConfig+0x78>
 8009d2c:	4b84      	ldr	r3, [pc, #528]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009d2e:	681b      	ldr	r3, [r3, #0]
 8009d30:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009d34:	2b00      	cmp	r3, #0
 8009d36:	d05b      	beq.n	8009df0 <HAL_RCC_OscConfig+0x124>
 8009d38:	687b      	ldr	r3, [r7, #4]
 8009d3a:	685b      	ldr	r3, [r3, #4]
 8009d3c:	2b00      	cmp	r3, #0
 8009d3e:	d157      	bne.n	8009df0 <HAL_RCC_OscConfig+0x124>
 8009d40:	2301      	movs	r3, #1
 8009d42:	e25a      	b.n	800a1fa <HAL_RCC_OscConfig+0x52e>
 8009d44:	687b      	ldr	r3, [r7, #4]
 8009d46:	685b      	ldr	r3, [r3, #4]
 8009d48:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009d4c:	d106      	bne.n	8009d5c <HAL_RCC_OscConfig+0x90>
 8009d4e:	4b7c      	ldr	r3, [pc, #496]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009d50:	681b      	ldr	r3, [r3, #0]
 8009d52:	4a7b      	ldr	r2, [pc, #492]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009d54:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009d58:	6013      	str	r3, [r2, #0]
 8009d5a:	e01d      	b.n	8009d98 <HAL_RCC_OscConfig+0xcc>
 8009d5c:	687b      	ldr	r3, [r7, #4]
 8009d5e:	685b      	ldr	r3, [r3, #4]
 8009d60:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8009d64:	d10c      	bne.n	8009d80 <HAL_RCC_OscConfig+0xb4>
 8009d66:	4b76      	ldr	r3, [pc, #472]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009d68:	681b      	ldr	r3, [r3, #0]
 8009d6a:	4a75      	ldr	r2, [pc, #468]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009d6c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8009d70:	6013      	str	r3, [r2, #0]
 8009d72:	4b73      	ldr	r3, [pc, #460]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009d74:	681b      	ldr	r3, [r3, #0]
 8009d76:	4a72      	ldr	r2, [pc, #456]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009d78:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009d7c:	6013      	str	r3, [r2, #0]
 8009d7e:	e00b      	b.n	8009d98 <HAL_RCC_OscConfig+0xcc>
 8009d80:	4b6f      	ldr	r3, [pc, #444]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009d82:	681b      	ldr	r3, [r3, #0]
 8009d84:	4a6e      	ldr	r2, [pc, #440]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009d86:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8009d8a:	6013      	str	r3, [r2, #0]
 8009d8c:	4b6c      	ldr	r3, [pc, #432]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009d8e:	681b      	ldr	r3, [r3, #0]
 8009d90:	4a6b      	ldr	r2, [pc, #428]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009d92:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8009d96:	6013      	str	r3, [r2, #0]
 8009d98:	687b      	ldr	r3, [r7, #4]
 8009d9a:	685b      	ldr	r3, [r3, #4]
 8009d9c:	2b00      	cmp	r3, #0
 8009d9e:	d013      	beq.n	8009dc8 <HAL_RCC_OscConfig+0xfc>
 8009da0:	f7fd fd08 	bl	80077b4 <HAL_GetTick>
 8009da4:	6138      	str	r0, [r7, #16]
 8009da6:	e008      	b.n	8009dba <HAL_RCC_OscConfig+0xee>
 8009da8:	f7fd fd04 	bl	80077b4 <HAL_GetTick>
 8009dac:	4602      	mov	r2, r0
 8009dae:	693b      	ldr	r3, [r7, #16]
 8009db0:	1ad3      	subs	r3, r2, r3
 8009db2:	2b64      	cmp	r3, #100	; 0x64
 8009db4:	d901      	bls.n	8009dba <HAL_RCC_OscConfig+0xee>
 8009db6:	2303      	movs	r3, #3
 8009db8:	e21f      	b.n	800a1fa <HAL_RCC_OscConfig+0x52e>
 8009dba:	4b61      	ldr	r3, [pc, #388]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009dbc:	681b      	ldr	r3, [r3, #0]
 8009dbe:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009dc2:	2b00      	cmp	r3, #0
 8009dc4:	d0f0      	beq.n	8009da8 <HAL_RCC_OscConfig+0xdc>
 8009dc6:	e014      	b.n	8009df2 <HAL_RCC_OscConfig+0x126>
 8009dc8:	f7fd fcf4 	bl	80077b4 <HAL_GetTick>
 8009dcc:	6138      	str	r0, [r7, #16]
 8009dce:	e008      	b.n	8009de2 <HAL_RCC_OscConfig+0x116>
 8009dd0:	f7fd fcf0 	bl	80077b4 <HAL_GetTick>
 8009dd4:	4602      	mov	r2, r0
 8009dd6:	693b      	ldr	r3, [r7, #16]
 8009dd8:	1ad3      	subs	r3, r2, r3
 8009dda:	2b64      	cmp	r3, #100	; 0x64
 8009ddc:	d901      	bls.n	8009de2 <HAL_RCC_OscConfig+0x116>
 8009dde:	2303      	movs	r3, #3
 8009de0:	e20b      	b.n	800a1fa <HAL_RCC_OscConfig+0x52e>
 8009de2:	4b57      	ldr	r3, [pc, #348]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009de4:	681b      	ldr	r3, [r3, #0]
 8009de6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009dea:	2b00      	cmp	r3, #0
 8009dec:	d1f0      	bne.n	8009dd0 <HAL_RCC_OscConfig+0x104>
 8009dee:	e000      	b.n	8009df2 <HAL_RCC_OscConfig+0x126>
 8009df0:	bf00      	nop
 8009df2:	687b      	ldr	r3, [r7, #4]
 8009df4:	681b      	ldr	r3, [r3, #0]
 8009df6:	f003 0302 	and.w	r3, r3, #2
 8009dfa:	2b00      	cmp	r3, #0
 8009dfc:	d06f      	beq.n	8009ede <HAL_RCC_OscConfig+0x212>
 8009dfe:	4b50      	ldr	r3, [pc, #320]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009e00:	689b      	ldr	r3, [r3, #8]
 8009e02:	f003 030c 	and.w	r3, r3, #12
 8009e06:	2b00      	cmp	r3, #0
 8009e08:	d017      	beq.n	8009e3a <HAL_RCC_OscConfig+0x16e>
 8009e0a:	4b4d      	ldr	r3, [pc, #308]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009e0c:	689b      	ldr	r3, [r3, #8]
 8009e0e:	f003 030c 	and.w	r3, r3, #12
 8009e12:	2b08      	cmp	r3, #8
 8009e14:	d105      	bne.n	8009e22 <HAL_RCC_OscConfig+0x156>
 8009e16:	4b4a      	ldr	r3, [pc, #296]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009e18:	685b      	ldr	r3, [r3, #4]
 8009e1a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009e1e:	2b00      	cmp	r3, #0
 8009e20:	d00b      	beq.n	8009e3a <HAL_RCC_OscConfig+0x16e>
 8009e22:	4b47      	ldr	r3, [pc, #284]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009e24:	689b      	ldr	r3, [r3, #8]
 8009e26:	f003 030c 	and.w	r3, r3, #12
 8009e2a:	2b0c      	cmp	r3, #12
 8009e2c:	d11c      	bne.n	8009e68 <HAL_RCC_OscConfig+0x19c>
 8009e2e:	4b44      	ldr	r3, [pc, #272]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009e30:	685b      	ldr	r3, [r3, #4]
 8009e32:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009e36:	2b00      	cmp	r3, #0
 8009e38:	d116      	bne.n	8009e68 <HAL_RCC_OscConfig+0x19c>
 8009e3a:	4b41      	ldr	r3, [pc, #260]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009e3c:	681b      	ldr	r3, [r3, #0]
 8009e3e:	f003 0302 	and.w	r3, r3, #2
 8009e42:	2b00      	cmp	r3, #0
 8009e44:	d005      	beq.n	8009e52 <HAL_RCC_OscConfig+0x186>
 8009e46:	687b      	ldr	r3, [r7, #4]
 8009e48:	68db      	ldr	r3, [r3, #12]
 8009e4a:	2b01      	cmp	r3, #1
 8009e4c:	d001      	beq.n	8009e52 <HAL_RCC_OscConfig+0x186>
 8009e4e:	2301      	movs	r3, #1
 8009e50:	e1d3      	b.n	800a1fa <HAL_RCC_OscConfig+0x52e>
 8009e52:	4b3b      	ldr	r3, [pc, #236]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009e54:	681b      	ldr	r3, [r3, #0]
 8009e56:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8009e5a:	687b      	ldr	r3, [r7, #4]
 8009e5c:	691b      	ldr	r3, [r3, #16]
 8009e5e:	00db      	lsls	r3, r3, #3
 8009e60:	4937      	ldr	r1, [pc, #220]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009e62:	4313      	orrs	r3, r2
 8009e64:	600b      	str	r3, [r1, #0]
 8009e66:	e03a      	b.n	8009ede <HAL_RCC_OscConfig+0x212>
 8009e68:	687b      	ldr	r3, [r7, #4]
 8009e6a:	68db      	ldr	r3, [r3, #12]
 8009e6c:	2b00      	cmp	r3, #0
 8009e6e:	d020      	beq.n	8009eb2 <HAL_RCC_OscConfig+0x1e6>
 8009e70:	4b34      	ldr	r3, [pc, #208]	; (8009f44 <HAL_RCC_OscConfig+0x278>)
 8009e72:	2201      	movs	r2, #1
 8009e74:	601a      	str	r2, [r3, #0]
 8009e76:	f7fd fc9d 	bl	80077b4 <HAL_GetTick>
 8009e7a:	6138      	str	r0, [r7, #16]
 8009e7c:	e008      	b.n	8009e90 <HAL_RCC_OscConfig+0x1c4>
 8009e7e:	f7fd fc99 	bl	80077b4 <HAL_GetTick>
 8009e82:	4602      	mov	r2, r0
 8009e84:	693b      	ldr	r3, [r7, #16]
 8009e86:	1ad3      	subs	r3, r2, r3
 8009e88:	2b02      	cmp	r3, #2
 8009e8a:	d901      	bls.n	8009e90 <HAL_RCC_OscConfig+0x1c4>
 8009e8c:	2303      	movs	r3, #3
 8009e8e:	e1b4      	b.n	800a1fa <HAL_RCC_OscConfig+0x52e>
 8009e90:	4b2b      	ldr	r3, [pc, #172]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009e92:	681b      	ldr	r3, [r3, #0]
 8009e94:	f003 0302 	and.w	r3, r3, #2
 8009e98:	2b00      	cmp	r3, #0
 8009e9a:	d0f0      	beq.n	8009e7e <HAL_RCC_OscConfig+0x1b2>
 8009e9c:	4b28      	ldr	r3, [pc, #160]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009e9e:	681b      	ldr	r3, [r3, #0]
 8009ea0:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8009ea4:	687b      	ldr	r3, [r7, #4]
 8009ea6:	691b      	ldr	r3, [r3, #16]
 8009ea8:	00db      	lsls	r3, r3, #3
 8009eaa:	4925      	ldr	r1, [pc, #148]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009eac:	4313      	orrs	r3, r2
 8009eae:	600b      	str	r3, [r1, #0]
 8009eb0:	e015      	b.n	8009ede <HAL_RCC_OscConfig+0x212>
 8009eb2:	4b24      	ldr	r3, [pc, #144]	; (8009f44 <HAL_RCC_OscConfig+0x278>)
 8009eb4:	2200      	movs	r2, #0
 8009eb6:	601a      	str	r2, [r3, #0]
 8009eb8:	f7fd fc7c 	bl	80077b4 <HAL_GetTick>
 8009ebc:	6138      	str	r0, [r7, #16]
 8009ebe:	e008      	b.n	8009ed2 <HAL_RCC_OscConfig+0x206>
 8009ec0:	f7fd fc78 	bl	80077b4 <HAL_GetTick>
 8009ec4:	4602      	mov	r2, r0
 8009ec6:	693b      	ldr	r3, [r7, #16]
 8009ec8:	1ad3      	subs	r3, r2, r3
 8009eca:	2b02      	cmp	r3, #2
 8009ecc:	d901      	bls.n	8009ed2 <HAL_RCC_OscConfig+0x206>
 8009ece:	2303      	movs	r3, #3
 8009ed0:	e193      	b.n	800a1fa <HAL_RCC_OscConfig+0x52e>
 8009ed2:	4b1b      	ldr	r3, [pc, #108]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009ed4:	681b      	ldr	r3, [r3, #0]
 8009ed6:	f003 0302 	and.w	r3, r3, #2
 8009eda:	2b00      	cmp	r3, #0
 8009edc:	d1f0      	bne.n	8009ec0 <HAL_RCC_OscConfig+0x1f4>
 8009ede:	687b      	ldr	r3, [r7, #4]
 8009ee0:	681b      	ldr	r3, [r3, #0]
 8009ee2:	f003 0308 	and.w	r3, r3, #8
 8009ee6:	2b00      	cmp	r3, #0
 8009ee8:	d036      	beq.n	8009f58 <HAL_RCC_OscConfig+0x28c>
 8009eea:	687b      	ldr	r3, [r7, #4]
 8009eec:	695b      	ldr	r3, [r3, #20]
 8009eee:	2b00      	cmp	r3, #0
 8009ef0:	d016      	beq.n	8009f20 <HAL_RCC_OscConfig+0x254>
 8009ef2:	4b15      	ldr	r3, [pc, #84]	; (8009f48 <HAL_RCC_OscConfig+0x27c>)
 8009ef4:	2201      	movs	r2, #1
 8009ef6:	601a      	str	r2, [r3, #0]
 8009ef8:	f7fd fc5c 	bl	80077b4 <HAL_GetTick>
 8009efc:	6138      	str	r0, [r7, #16]
 8009efe:	e008      	b.n	8009f12 <HAL_RCC_OscConfig+0x246>
 8009f00:	f7fd fc58 	bl	80077b4 <HAL_GetTick>
 8009f04:	4602      	mov	r2, r0
 8009f06:	693b      	ldr	r3, [r7, #16]
 8009f08:	1ad3      	subs	r3, r2, r3
 8009f0a:	2b02      	cmp	r3, #2
 8009f0c:	d901      	bls.n	8009f12 <HAL_RCC_OscConfig+0x246>
 8009f0e:	2303      	movs	r3, #3
 8009f10:	e173      	b.n	800a1fa <HAL_RCC_OscConfig+0x52e>
 8009f12:	4b0b      	ldr	r3, [pc, #44]	; (8009f40 <HAL_RCC_OscConfig+0x274>)
 8009f14:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009f16:	f003 0302 	and.w	r3, r3, #2
 8009f1a:	2b00      	cmp	r3, #0
 8009f1c:	d0f0      	beq.n	8009f00 <HAL_RCC_OscConfig+0x234>
 8009f1e:	e01b      	b.n	8009f58 <HAL_RCC_OscConfig+0x28c>
 8009f20:	4b09      	ldr	r3, [pc, #36]	; (8009f48 <HAL_RCC_OscConfig+0x27c>)
 8009f22:	2200      	movs	r2, #0
 8009f24:	601a      	str	r2, [r3, #0]
 8009f26:	f7fd fc45 	bl	80077b4 <HAL_GetTick>
 8009f2a:	6138      	str	r0, [r7, #16]
 8009f2c:	e00e      	b.n	8009f4c <HAL_RCC_OscConfig+0x280>
 8009f2e:	f7fd fc41 	bl	80077b4 <HAL_GetTick>
 8009f32:	4602      	mov	r2, r0
 8009f34:	693b      	ldr	r3, [r7, #16]
 8009f36:	1ad3      	subs	r3, r2, r3
 8009f38:	2b02      	cmp	r3, #2
 8009f3a:	d907      	bls.n	8009f4c <HAL_RCC_OscConfig+0x280>
 8009f3c:	2303      	movs	r3, #3
 8009f3e:	e15c      	b.n	800a1fa <HAL_RCC_OscConfig+0x52e>
 8009f40:	40023800 	.word	0x40023800
 8009f44:	42470000 	.word	0x42470000
 8009f48:	42470e80 	.word	0x42470e80
 8009f4c:	4b8a      	ldr	r3, [pc, #552]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 8009f4e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009f50:	f003 0302 	and.w	r3, r3, #2
 8009f54:	2b00      	cmp	r3, #0
 8009f56:	d1ea      	bne.n	8009f2e <HAL_RCC_OscConfig+0x262>
 8009f58:	687b      	ldr	r3, [r7, #4]
 8009f5a:	681b      	ldr	r3, [r3, #0]
 8009f5c:	f003 0304 	and.w	r3, r3, #4
 8009f60:	2b00      	cmp	r3, #0
 8009f62:	f000 8097 	beq.w	800a094 <HAL_RCC_OscConfig+0x3c8>
 8009f66:	2300      	movs	r3, #0
 8009f68:	75fb      	strb	r3, [r7, #23]
 8009f6a:	4b83      	ldr	r3, [pc, #524]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 8009f6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009f6e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009f72:	2b00      	cmp	r3, #0
 8009f74:	d10f      	bne.n	8009f96 <HAL_RCC_OscConfig+0x2ca>
 8009f76:	2300      	movs	r3, #0
 8009f78:	60bb      	str	r3, [r7, #8]
 8009f7a:	4b7f      	ldr	r3, [pc, #508]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 8009f7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009f7e:	4a7e      	ldr	r2, [pc, #504]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 8009f80:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8009f84:	6413      	str	r3, [r2, #64]	; 0x40
 8009f86:	4b7c      	ldr	r3, [pc, #496]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 8009f88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009f8a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009f8e:	60bb      	str	r3, [r7, #8]
 8009f90:	68bb      	ldr	r3, [r7, #8]
 8009f92:	2301      	movs	r3, #1
 8009f94:	75fb      	strb	r3, [r7, #23]
 8009f96:	4b79      	ldr	r3, [pc, #484]	; (800a17c <HAL_RCC_OscConfig+0x4b0>)
 8009f98:	681b      	ldr	r3, [r3, #0]
 8009f9a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009f9e:	2b00      	cmp	r3, #0
 8009fa0:	d118      	bne.n	8009fd4 <HAL_RCC_OscConfig+0x308>
 8009fa2:	4b76      	ldr	r3, [pc, #472]	; (800a17c <HAL_RCC_OscConfig+0x4b0>)
 8009fa4:	681b      	ldr	r3, [r3, #0]
 8009fa6:	4a75      	ldr	r2, [pc, #468]	; (800a17c <HAL_RCC_OscConfig+0x4b0>)
 8009fa8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009fac:	6013      	str	r3, [r2, #0]
 8009fae:	f7fd fc01 	bl	80077b4 <HAL_GetTick>
 8009fb2:	6138      	str	r0, [r7, #16]
 8009fb4:	e008      	b.n	8009fc8 <HAL_RCC_OscConfig+0x2fc>
 8009fb6:	f7fd fbfd 	bl	80077b4 <HAL_GetTick>
 8009fba:	4602      	mov	r2, r0
 8009fbc:	693b      	ldr	r3, [r7, #16]
 8009fbe:	1ad3      	subs	r3, r2, r3
 8009fc0:	2b02      	cmp	r3, #2
 8009fc2:	d901      	bls.n	8009fc8 <HAL_RCC_OscConfig+0x2fc>
 8009fc4:	2303      	movs	r3, #3
 8009fc6:	e118      	b.n	800a1fa <HAL_RCC_OscConfig+0x52e>
 8009fc8:	4b6c      	ldr	r3, [pc, #432]	; (800a17c <HAL_RCC_OscConfig+0x4b0>)
 8009fca:	681b      	ldr	r3, [r3, #0]
 8009fcc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009fd0:	2b00      	cmp	r3, #0
 8009fd2:	d0f0      	beq.n	8009fb6 <HAL_RCC_OscConfig+0x2ea>
 8009fd4:	687b      	ldr	r3, [r7, #4]
 8009fd6:	689b      	ldr	r3, [r3, #8]
 8009fd8:	2b01      	cmp	r3, #1
 8009fda:	d106      	bne.n	8009fea <HAL_RCC_OscConfig+0x31e>
 8009fdc:	4b66      	ldr	r3, [pc, #408]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 8009fde:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009fe0:	4a65      	ldr	r2, [pc, #404]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 8009fe2:	f043 0301 	orr.w	r3, r3, #1
 8009fe6:	6713      	str	r3, [r2, #112]	; 0x70
 8009fe8:	e01c      	b.n	800a024 <HAL_RCC_OscConfig+0x358>
 8009fea:	687b      	ldr	r3, [r7, #4]
 8009fec:	689b      	ldr	r3, [r3, #8]
 8009fee:	2b05      	cmp	r3, #5
 8009ff0:	d10c      	bne.n	800a00c <HAL_RCC_OscConfig+0x340>
 8009ff2:	4b61      	ldr	r3, [pc, #388]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 8009ff4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009ff6:	4a60      	ldr	r2, [pc, #384]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 8009ff8:	f043 0304 	orr.w	r3, r3, #4
 8009ffc:	6713      	str	r3, [r2, #112]	; 0x70
 8009ffe:	4b5e      	ldr	r3, [pc, #376]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 800a000:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a002:	4a5d      	ldr	r2, [pc, #372]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 800a004:	f043 0301 	orr.w	r3, r3, #1
 800a008:	6713      	str	r3, [r2, #112]	; 0x70
 800a00a:	e00b      	b.n	800a024 <HAL_RCC_OscConfig+0x358>
 800a00c:	4b5a      	ldr	r3, [pc, #360]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 800a00e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a010:	4a59      	ldr	r2, [pc, #356]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 800a012:	f023 0301 	bic.w	r3, r3, #1
 800a016:	6713      	str	r3, [r2, #112]	; 0x70
 800a018:	4b57      	ldr	r3, [pc, #348]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 800a01a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a01c:	4a56      	ldr	r2, [pc, #344]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 800a01e:	f023 0304 	bic.w	r3, r3, #4
 800a022:	6713      	str	r3, [r2, #112]	; 0x70
 800a024:	687b      	ldr	r3, [r7, #4]
 800a026:	689b      	ldr	r3, [r3, #8]
 800a028:	2b00      	cmp	r3, #0
 800a02a:	d015      	beq.n	800a058 <HAL_RCC_OscConfig+0x38c>
 800a02c:	f7fd fbc2 	bl	80077b4 <HAL_GetTick>
 800a030:	6138      	str	r0, [r7, #16]
 800a032:	e00a      	b.n	800a04a <HAL_RCC_OscConfig+0x37e>
 800a034:	f7fd fbbe 	bl	80077b4 <HAL_GetTick>
 800a038:	4602      	mov	r2, r0
 800a03a:	693b      	ldr	r3, [r7, #16]
 800a03c:	1ad3      	subs	r3, r2, r3
 800a03e:	f241 3288 	movw	r2, #5000	; 0x1388
 800a042:	4293      	cmp	r3, r2
 800a044:	d901      	bls.n	800a04a <HAL_RCC_OscConfig+0x37e>
 800a046:	2303      	movs	r3, #3
 800a048:	e0d7      	b.n	800a1fa <HAL_RCC_OscConfig+0x52e>
 800a04a:	4b4b      	ldr	r3, [pc, #300]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 800a04c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a04e:	f003 0302 	and.w	r3, r3, #2
 800a052:	2b00      	cmp	r3, #0
 800a054:	d0ee      	beq.n	800a034 <HAL_RCC_OscConfig+0x368>
 800a056:	e014      	b.n	800a082 <HAL_RCC_OscConfig+0x3b6>
 800a058:	f7fd fbac 	bl	80077b4 <HAL_GetTick>
 800a05c:	6138      	str	r0, [r7, #16]
 800a05e:	e00a      	b.n	800a076 <HAL_RCC_OscConfig+0x3aa>
 800a060:	f7fd fba8 	bl	80077b4 <HAL_GetTick>
 800a064:	4602      	mov	r2, r0
 800a066:	693b      	ldr	r3, [r7, #16]
 800a068:	1ad3      	subs	r3, r2, r3
 800a06a:	f241 3288 	movw	r2, #5000	; 0x1388
 800a06e:	4293      	cmp	r3, r2
 800a070:	d901      	bls.n	800a076 <HAL_RCC_OscConfig+0x3aa>
 800a072:	2303      	movs	r3, #3
 800a074:	e0c1      	b.n	800a1fa <HAL_RCC_OscConfig+0x52e>
 800a076:	4b40      	ldr	r3, [pc, #256]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 800a078:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a07a:	f003 0302 	and.w	r3, r3, #2
 800a07e:	2b00      	cmp	r3, #0
 800a080:	d1ee      	bne.n	800a060 <HAL_RCC_OscConfig+0x394>
 800a082:	7dfb      	ldrb	r3, [r7, #23]
 800a084:	2b01      	cmp	r3, #1
 800a086:	d105      	bne.n	800a094 <HAL_RCC_OscConfig+0x3c8>
 800a088:	4b3b      	ldr	r3, [pc, #236]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 800a08a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a08c:	4a3a      	ldr	r2, [pc, #232]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 800a08e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800a092:	6413      	str	r3, [r2, #64]	; 0x40
 800a094:	687b      	ldr	r3, [r7, #4]
 800a096:	699b      	ldr	r3, [r3, #24]
 800a098:	2b00      	cmp	r3, #0
 800a09a:	f000 80ad 	beq.w	800a1f8 <HAL_RCC_OscConfig+0x52c>
 800a09e:	4b36      	ldr	r3, [pc, #216]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 800a0a0:	689b      	ldr	r3, [r3, #8]
 800a0a2:	f003 030c 	and.w	r3, r3, #12
 800a0a6:	2b08      	cmp	r3, #8
 800a0a8:	d060      	beq.n	800a16c <HAL_RCC_OscConfig+0x4a0>
 800a0aa:	687b      	ldr	r3, [r7, #4]
 800a0ac:	699b      	ldr	r3, [r3, #24]
 800a0ae:	2b02      	cmp	r3, #2
 800a0b0:	d145      	bne.n	800a13e <HAL_RCC_OscConfig+0x472>
 800a0b2:	4b33      	ldr	r3, [pc, #204]	; (800a180 <HAL_RCC_OscConfig+0x4b4>)
 800a0b4:	2200      	movs	r2, #0
 800a0b6:	601a      	str	r2, [r3, #0]
 800a0b8:	f7fd fb7c 	bl	80077b4 <HAL_GetTick>
 800a0bc:	6138      	str	r0, [r7, #16]
 800a0be:	e008      	b.n	800a0d2 <HAL_RCC_OscConfig+0x406>
 800a0c0:	f7fd fb78 	bl	80077b4 <HAL_GetTick>
 800a0c4:	4602      	mov	r2, r0
 800a0c6:	693b      	ldr	r3, [r7, #16]
 800a0c8:	1ad3      	subs	r3, r2, r3
 800a0ca:	2b02      	cmp	r3, #2
 800a0cc:	d901      	bls.n	800a0d2 <HAL_RCC_OscConfig+0x406>
 800a0ce:	2303      	movs	r3, #3
 800a0d0:	e093      	b.n	800a1fa <HAL_RCC_OscConfig+0x52e>
 800a0d2:	4b29      	ldr	r3, [pc, #164]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 800a0d4:	681b      	ldr	r3, [r3, #0]
 800a0d6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800a0da:	2b00      	cmp	r3, #0
 800a0dc:	d1f0      	bne.n	800a0c0 <HAL_RCC_OscConfig+0x3f4>
 800a0de:	687b      	ldr	r3, [r7, #4]
 800a0e0:	69da      	ldr	r2, [r3, #28]
 800a0e2:	687b      	ldr	r3, [r7, #4]
 800a0e4:	6a1b      	ldr	r3, [r3, #32]
 800a0e6:	431a      	orrs	r2, r3
 800a0e8:	687b      	ldr	r3, [r7, #4]
 800a0ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a0ec:	019b      	lsls	r3, r3, #6
 800a0ee:	431a      	orrs	r2, r3
 800a0f0:	687b      	ldr	r3, [r7, #4]
 800a0f2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a0f4:	085b      	lsrs	r3, r3, #1
 800a0f6:	3b01      	subs	r3, #1
 800a0f8:	041b      	lsls	r3, r3, #16
 800a0fa:	431a      	orrs	r2, r3
 800a0fc:	687b      	ldr	r3, [r7, #4]
 800a0fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a100:	061b      	lsls	r3, r3, #24
 800a102:	431a      	orrs	r2, r3
 800a104:	687b      	ldr	r3, [r7, #4]
 800a106:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a108:	071b      	lsls	r3, r3, #28
 800a10a:	491b      	ldr	r1, [pc, #108]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 800a10c:	4313      	orrs	r3, r2
 800a10e:	604b      	str	r3, [r1, #4]
 800a110:	4b1b      	ldr	r3, [pc, #108]	; (800a180 <HAL_RCC_OscConfig+0x4b4>)
 800a112:	2201      	movs	r2, #1
 800a114:	601a      	str	r2, [r3, #0]
 800a116:	f7fd fb4d 	bl	80077b4 <HAL_GetTick>
 800a11a:	6138      	str	r0, [r7, #16]
 800a11c:	e008      	b.n	800a130 <HAL_RCC_OscConfig+0x464>
 800a11e:	f7fd fb49 	bl	80077b4 <HAL_GetTick>
 800a122:	4602      	mov	r2, r0
 800a124:	693b      	ldr	r3, [r7, #16]
 800a126:	1ad3      	subs	r3, r2, r3
 800a128:	2b02      	cmp	r3, #2
 800a12a:	d901      	bls.n	800a130 <HAL_RCC_OscConfig+0x464>
 800a12c:	2303      	movs	r3, #3
 800a12e:	e064      	b.n	800a1fa <HAL_RCC_OscConfig+0x52e>
 800a130:	4b11      	ldr	r3, [pc, #68]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 800a132:	681b      	ldr	r3, [r3, #0]
 800a134:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800a138:	2b00      	cmp	r3, #0
 800a13a:	d0f0      	beq.n	800a11e <HAL_RCC_OscConfig+0x452>
 800a13c:	e05c      	b.n	800a1f8 <HAL_RCC_OscConfig+0x52c>
 800a13e:	4b10      	ldr	r3, [pc, #64]	; (800a180 <HAL_RCC_OscConfig+0x4b4>)
 800a140:	2200      	movs	r2, #0
 800a142:	601a      	str	r2, [r3, #0]
 800a144:	f7fd fb36 	bl	80077b4 <HAL_GetTick>
 800a148:	6138      	str	r0, [r7, #16]
 800a14a:	e008      	b.n	800a15e <HAL_RCC_OscConfig+0x492>
 800a14c:	f7fd fb32 	bl	80077b4 <HAL_GetTick>
 800a150:	4602      	mov	r2, r0
 800a152:	693b      	ldr	r3, [r7, #16]
 800a154:	1ad3      	subs	r3, r2, r3
 800a156:	2b02      	cmp	r3, #2
 800a158:	d901      	bls.n	800a15e <HAL_RCC_OscConfig+0x492>
 800a15a:	2303      	movs	r3, #3
 800a15c:	e04d      	b.n	800a1fa <HAL_RCC_OscConfig+0x52e>
 800a15e:	4b06      	ldr	r3, [pc, #24]	; (800a178 <HAL_RCC_OscConfig+0x4ac>)
 800a160:	681b      	ldr	r3, [r3, #0]
 800a162:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800a166:	2b00      	cmp	r3, #0
 800a168:	d1f0      	bne.n	800a14c <HAL_RCC_OscConfig+0x480>
 800a16a:	e045      	b.n	800a1f8 <HAL_RCC_OscConfig+0x52c>
 800a16c:	687b      	ldr	r3, [r7, #4]
 800a16e:	699b      	ldr	r3, [r3, #24]
 800a170:	2b01      	cmp	r3, #1
 800a172:	d107      	bne.n	800a184 <HAL_RCC_OscConfig+0x4b8>
 800a174:	2301      	movs	r3, #1
 800a176:	e040      	b.n	800a1fa <HAL_RCC_OscConfig+0x52e>
 800a178:	40023800 	.word	0x40023800
 800a17c:	40007000 	.word	0x40007000
 800a180:	42470060 	.word	0x42470060
 800a184:	4b1f      	ldr	r3, [pc, #124]	; (800a204 <HAL_RCC_OscConfig+0x538>)
 800a186:	685b      	ldr	r3, [r3, #4]
 800a188:	60fb      	str	r3, [r7, #12]
 800a18a:	687b      	ldr	r3, [r7, #4]
 800a18c:	699b      	ldr	r3, [r3, #24]
 800a18e:	2b01      	cmp	r3, #1
 800a190:	d030      	beq.n	800a1f4 <HAL_RCC_OscConfig+0x528>
 800a192:	68fb      	ldr	r3, [r7, #12]
 800a194:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 800a198:	687b      	ldr	r3, [r7, #4]
 800a19a:	69db      	ldr	r3, [r3, #28]
 800a19c:	429a      	cmp	r2, r3
 800a19e:	d129      	bne.n	800a1f4 <HAL_RCC_OscConfig+0x528>
 800a1a0:	68fb      	ldr	r3, [r7, #12]
 800a1a2:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800a1a6:	687b      	ldr	r3, [r7, #4]
 800a1a8:	6a1b      	ldr	r3, [r3, #32]
 800a1aa:	429a      	cmp	r2, r3
 800a1ac:	d122      	bne.n	800a1f4 <HAL_RCC_OscConfig+0x528>
 800a1ae:	68fa      	ldr	r2, [r7, #12]
 800a1b0:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 800a1b4:	4013      	ands	r3, r2
 800a1b6:	687a      	ldr	r2, [r7, #4]
 800a1b8:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800a1ba:	0192      	lsls	r2, r2, #6
 800a1bc:	4293      	cmp	r3, r2
 800a1be:	d119      	bne.n	800a1f4 <HAL_RCC_OscConfig+0x528>
 800a1c0:	68fb      	ldr	r3, [r7, #12]
 800a1c2:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 800a1c6:	687b      	ldr	r3, [r7, #4]
 800a1c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a1ca:	085b      	lsrs	r3, r3, #1
 800a1cc:	3b01      	subs	r3, #1
 800a1ce:	041b      	lsls	r3, r3, #16
 800a1d0:	429a      	cmp	r2, r3
 800a1d2:	d10f      	bne.n	800a1f4 <HAL_RCC_OscConfig+0x528>
 800a1d4:	68fb      	ldr	r3, [r7, #12]
 800a1d6:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 800a1da:	687b      	ldr	r3, [r7, #4]
 800a1dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1de:	061b      	lsls	r3, r3, #24
 800a1e0:	429a      	cmp	r2, r3
 800a1e2:	d107      	bne.n	800a1f4 <HAL_RCC_OscConfig+0x528>
 800a1e4:	68fb      	ldr	r3, [r7, #12]
 800a1e6:	f003 42e0 	and.w	r2, r3, #1879048192	; 0x70000000
 800a1ea:	687b      	ldr	r3, [r7, #4]
 800a1ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a1ee:	071b      	lsls	r3, r3, #28
 800a1f0:	429a      	cmp	r2, r3
 800a1f2:	d001      	beq.n	800a1f8 <HAL_RCC_OscConfig+0x52c>
 800a1f4:	2301      	movs	r3, #1
 800a1f6:	e000      	b.n	800a1fa <HAL_RCC_OscConfig+0x52e>
 800a1f8:	2300      	movs	r3, #0
 800a1fa:	4618      	mov	r0, r3
 800a1fc:	3718      	adds	r7, #24
 800a1fe:	46bd      	mov	sp, r7
 800a200:	bd80      	pop	{r7, pc}
 800a202:	bf00      	nop
 800a204:	40023800 	.word	0x40023800

0800a208 <HAL_TIM_Base_Init>:
 800a208:	b580      	push	{r7, lr}
 800a20a:	b082      	sub	sp, #8
 800a20c:	af00      	add	r7, sp, #0
 800a20e:	6078      	str	r0, [r7, #4]
 800a210:	687b      	ldr	r3, [r7, #4]
 800a212:	2b00      	cmp	r3, #0
 800a214:	d101      	bne.n	800a21a <HAL_TIM_Base_Init+0x12>
 800a216:	2301      	movs	r3, #1
 800a218:	e041      	b.n	800a29e <HAL_TIM_Base_Init+0x96>
 800a21a:	687b      	ldr	r3, [r7, #4]
 800a21c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a220:	b2db      	uxtb	r3, r3
 800a222:	2b00      	cmp	r3, #0
 800a224:	d106      	bne.n	800a234 <HAL_TIM_Base_Init+0x2c>
 800a226:	687b      	ldr	r3, [r7, #4]
 800a228:	2200      	movs	r2, #0
 800a22a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a22e:	6878      	ldr	r0, [r7, #4]
 800a230:	f7fc fe08 	bl	8006e44 <HAL_TIM_Base_MspInit>
 800a234:	687b      	ldr	r3, [r7, #4]
 800a236:	2202      	movs	r2, #2
 800a238:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a23c:	687b      	ldr	r3, [r7, #4]
 800a23e:	681a      	ldr	r2, [r3, #0]
 800a240:	687b      	ldr	r3, [r7, #4]
 800a242:	3304      	adds	r3, #4
 800a244:	4619      	mov	r1, r3
 800a246:	4610      	mov	r0, r2
 800a248:	f001 f944 	bl	800b4d4 <TIM_Base_SetConfig>
 800a24c:	687b      	ldr	r3, [r7, #4]
 800a24e:	2201      	movs	r2, #1
 800a250:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800a254:	687b      	ldr	r3, [r7, #4]
 800a256:	2201      	movs	r2, #1
 800a258:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a25c:	687b      	ldr	r3, [r7, #4]
 800a25e:	2201      	movs	r2, #1
 800a260:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a264:	687b      	ldr	r3, [r7, #4]
 800a266:	2201      	movs	r2, #1
 800a268:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a26c:	687b      	ldr	r3, [r7, #4]
 800a26e:	2201      	movs	r2, #1
 800a270:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a274:	687b      	ldr	r3, [r7, #4]
 800a276:	2201      	movs	r2, #1
 800a278:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a27c:	687b      	ldr	r3, [r7, #4]
 800a27e:	2201      	movs	r2, #1
 800a280:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a284:	687b      	ldr	r3, [r7, #4]
 800a286:	2201      	movs	r2, #1
 800a288:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a28c:	687b      	ldr	r3, [r7, #4]
 800a28e:	2201      	movs	r2, #1
 800a290:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a294:	687b      	ldr	r3, [r7, #4]
 800a296:	2201      	movs	r2, #1
 800a298:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a29c:	2300      	movs	r3, #0
 800a29e:	4618      	mov	r0, r3
 800a2a0:	3708      	adds	r7, #8
 800a2a2:	46bd      	mov	sp, r7
 800a2a4:	bd80      	pop	{r7, pc}
	...

0800a2a8 <HAL_TIM_Base_Start>:
 800a2a8:	b480      	push	{r7}
 800a2aa:	b085      	sub	sp, #20
 800a2ac:	af00      	add	r7, sp, #0
 800a2ae:	6078      	str	r0, [r7, #4]
 800a2b0:	687b      	ldr	r3, [r7, #4]
 800a2b2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a2b6:	b2db      	uxtb	r3, r3
 800a2b8:	2b01      	cmp	r3, #1
 800a2ba:	d001      	beq.n	800a2c0 <HAL_TIM_Base_Start+0x18>
 800a2bc:	2301      	movs	r3, #1
 800a2be:	e046      	b.n	800a34e <HAL_TIM_Base_Start+0xa6>
 800a2c0:	687b      	ldr	r3, [r7, #4]
 800a2c2:	2202      	movs	r2, #2
 800a2c4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a2c8:	687b      	ldr	r3, [r7, #4]
 800a2ca:	681b      	ldr	r3, [r3, #0]
 800a2cc:	4a23      	ldr	r2, [pc, #140]	; (800a35c <HAL_TIM_Base_Start+0xb4>)
 800a2ce:	4293      	cmp	r3, r2
 800a2d0:	d022      	beq.n	800a318 <HAL_TIM_Base_Start+0x70>
 800a2d2:	687b      	ldr	r3, [r7, #4]
 800a2d4:	681b      	ldr	r3, [r3, #0]
 800a2d6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a2da:	d01d      	beq.n	800a318 <HAL_TIM_Base_Start+0x70>
 800a2dc:	687b      	ldr	r3, [r7, #4]
 800a2de:	681b      	ldr	r3, [r3, #0]
 800a2e0:	4a1f      	ldr	r2, [pc, #124]	; (800a360 <HAL_TIM_Base_Start+0xb8>)
 800a2e2:	4293      	cmp	r3, r2
 800a2e4:	d018      	beq.n	800a318 <HAL_TIM_Base_Start+0x70>
 800a2e6:	687b      	ldr	r3, [r7, #4]
 800a2e8:	681b      	ldr	r3, [r3, #0]
 800a2ea:	4a1e      	ldr	r2, [pc, #120]	; (800a364 <HAL_TIM_Base_Start+0xbc>)
 800a2ec:	4293      	cmp	r3, r2
 800a2ee:	d013      	beq.n	800a318 <HAL_TIM_Base_Start+0x70>
 800a2f0:	687b      	ldr	r3, [r7, #4]
 800a2f2:	681b      	ldr	r3, [r3, #0]
 800a2f4:	4a1c      	ldr	r2, [pc, #112]	; (800a368 <HAL_TIM_Base_Start+0xc0>)
 800a2f6:	4293      	cmp	r3, r2
 800a2f8:	d00e      	beq.n	800a318 <HAL_TIM_Base_Start+0x70>
 800a2fa:	687b      	ldr	r3, [r7, #4]
 800a2fc:	681b      	ldr	r3, [r3, #0]
 800a2fe:	4a1b      	ldr	r2, [pc, #108]	; (800a36c <HAL_TIM_Base_Start+0xc4>)
 800a300:	4293      	cmp	r3, r2
 800a302:	d009      	beq.n	800a318 <HAL_TIM_Base_Start+0x70>
 800a304:	687b      	ldr	r3, [r7, #4]
 800a306:	681b      	ldr	r3, [r3, #0]
 800a308:	4a19      	ldr	r2, [pc, #100]	; (800a370 <HAL_TIM_Base_Start+0xc8>)
 800a30a:	4293      	cmp	r3, r2
 800a30c:	d004      	beq.n	800a318 <HAL_TIM_Base_Start+0x70>
 800a30e:	687b      	ldr	r3, [r7, #4]
 800a310:	681b      	ldr	r3, [r3, #0]
 800a312:	4a18      	ldr	r2, [pc, #96]	; (800a374 <HAL_TIM_Base_Start+0xcc>)
 800a314:	4293      	cmp	r3, r2
 800a316:	d111      	bne.n	800a33c <HAL_TIM_Base_Start+0x94>
 800a318:	687b      	ldr	r3, [r7, #4]
 800a31a:	681b      	ldr	r3, [r3, #0]
 800a31c:	689b      	ldr	r3, [r3, #8]
 800a31e:	f003 0307 	and.w	r3, r3, #7
 800a322:	60fb      	str	r3, [r7, #12]
 800a324:	68fb      	ldr	r3, [r7, #12]
 800a326:	2b06      	cmp	r3, #6
 800a328:	d010      	beq.n	800a34c <HAL_TIM_Base_Start+0xa4>
 800a32a:	687b      	ldr	r3, [r7, #4]
 800a32c:	681b      	ldr	r3, [r3, #0]
 800a32e:	681a      	ldr	r2, [r3, #0]
 800a330:	687b      	ldr	r3, [r7, #4]
 800a332:	681b      	ldr	r3, [r3, #0]
 800a334:	f042 0201 	orr.w	r2, r2, #1
 800a338:	601a      	str	r2, [r3, #0]
 800a33a:	e007      	b.n	800a34c <HAL_TIM_Base_Start+0xa4>
 800a33c:	687b      	ldr	r3, [r7, #4]
 800a33e:	681b      	ldr	r3, [r3, #0]
 800a340:	681a      	ldr	r2, [r3, #0]
 800a342:	687b      	ldr	r3, [r7, #4]
 800a344:	681b      	ldr	r3, [r3, #0]
 800a346:	f042 0201 	orr.w	r2, r2, #1
 800a34a:	601a      	str	r2, [r3, #0]
 800a34c:	2300      	movs	r3, #0
 800a34e:	4618      	mov	r0, r3
 800a350:	3714      	adds	r7, #20
 800a352:	46bd      	mov	sp, r7
 800a354:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a358:	4770      	bx	lr
 800a35a:	bf00      	nop
 800a35c:	40010000 	.word	0x40010000
 800a360:	40000400 	.word	0x40000400
 800a364:	40000800 	.word	0x40000800
 800a368:	40000c00 	.word	0x40000c00
 800a36c:	40010400 	.word	0x40010400
 800a370:	40014000 	.word	0x40014000
 800a374:	40001800 	.word	0x40001800

0800a378 <HAL_TIM_PWM_Init>:
 800a378:	b580      	push	{r7, lr}
 800a37a:	b082      	sub	sp, #8
 800a37c:	af00      	add	r7, sp, #0
 800a37e:	6078      	str	r0, [r7, #4]
 800a380:	687b      	ldr	r3, [r7, #4]
 800a382:	2b00      	cmp	r3, #0
 800a384:	d101      	bne.n	800a38a <HAL_TIM_PWM_Init+0x12>
 800a386:	2301      	movs	r3, #1
 800a388:	e041      	b.n	800a40e <HAL_TIM_PWM_Init+0x96>
 800a38a:	687b      	ldr	r3, [r7, #4]
 800a38c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a390:	b2db      	uxtb	r3, r3
 800a392:	2b00      	cmp	r3, #0
 800a394:	d106      	bne.n	800a3a4 <HAL_TIM_PWM_Init+0x2c>
 800a396:	687b      	ldr	r3, [r7, #4]
 800a398:	2200      	movs	r2, #0
 800a39a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a39e:	6878      	ldr	r0, [r7, #4]
 800a3a0:	f000 f839 	bl	800a416 <HAL_TIM_PWM_MspInit>
 800a3a4:	687b      	ldr	r3, [r7, #4]
 800a3a6:	2202      	movs	r2, #2
 800a3a8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a3ac:	687b      	ldr	r3, [r7, #4]
 800a3ae:	681a      	ldr	r2, [r3, #0]
 800a3b0:	687b      	ldr	r3, [r7, #4]
 800a3b2:	3304      	adds	r3, #4
 800a3b4:	4619      	mov	r1, r3
 800a3b6:	4610      	mov	r0, r2
 800a3b8:	f001 f88c 	bl	800b4d4 <TIM_Base_SetConfig>
 800a3bc:	687b      	ldr	r3, [r7, #4]
 800a3be:	2201      	movs	r2, #1
 800a3c0:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800a3c4:	687b      	ldr	r3, [r7, #4]
 800a3c6:	2201      	movs	r2, #1
 800a3c8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a3cc:	687b      	ldr	r3, [r7, #4]
 800a3ce:	2201      	movs	r2, #1
 800a3d0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a3d4:	687b      	ldr	r3, [r7, #4]
 800a3d6:	2201      	movs	r2, #1
 800a3d8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a3dc:	687b      	ldr	r3, [r7, #4]
 800a3de:	2201      	movs	r2, #1
 800a3e0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a3e4:	687b      	ldr	r3, [r7, #4]
 800a3e6:	2201      	movs	r2, #1
 800a3e8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a3ec:	687b      	ldr	r3, [r7, #4]
 800a3ee:	2201      	movs	r2, #1
 800a3f0:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a3f4:	687b      	ldr	r3, [r7, #4]
 800a3f6:	2201      	movs	r2, #1
 800a3f8:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a3fc:	687b      	ldr	r3, [r7, #4]
 800a3fe:	2201      	movs	r2, #1
 800a400:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a404:	687b      	ldr	r3, [r7, #4]
 800a406:	2201      	movs	r2, #1
 800a408:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a40c:	2300      	movs	r3, #0
 800a40e:	4618      	mov	r0, r3
 800a410:	3708      	adds	r7, #8
 800a412:	46bd      	mov	sp, r7
 800a414:	bd80      	pop	{r7, pc}

0800a416 <HAL_TIM_PWM_MspInit>:
 800a416:	b480      	push	{r7}
 800a418:	b083      	sub	sp, #12
 800a41a:	af00      	add	r7, sp, #0
 800a41c:	6078      	str	r0, [r7, #4]
 800a41e:	bf00      	nop
 800a420:	370c      	adds	r7, #12
 800a422:	46bd      	mov	sp, r7
 800a424:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a428:	4770      	bx	lr
	...

0800a42c <HAL_TIM_PWM_Start>:
 800a42c:	b580      	push	{r7, lr}
 800a42e:	b084      	sub	sp, #16
 800a430:	af00      	add	r7, sp, #0
 800a432:	6078      	str	r0, [r7, #4]
 800a434:	6039      	str	r1, [r7, #0]
 800a436:	683b      	ldr	r3, [r7, #0]
 800a438:	2b00      	cmp	r3, #0
 800a43a:	d109      	bne.n	800a450 <HAL_TIM_PWM_Start+0x24>
 800a43c:	687b      	ldr	r3, [r7, #4]
 800a43e:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a442:	b2db      	uxtb	r3, r3
 800a444:	2b01      	cmp	r3, #1
 800a446:	bf14      	ite	ne
 800a448:	2301      	movne	r3, #1
 800a44a:	2300      	moveq	r3, #0
 800a44c:	b2db      	uxtb	r3, r3
 800a44e:	e022      	b.n	800a496 <HAL_TIM_PWM_Start+0x6a>
 800a450:	683b      	ldr	r3, [r7, #0]
 800a452:	2b04      	cmp	r3, #4
 800a454:	d109      	bne.n	800a46a <HAL_TIM_PWM_Start+0x3e>
 800a456:	687b      	ldr	r3, [r7, #4]
 800a458:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800a45c:	b2db      	uxtb	r3, r3
 800a45e:	2b01      	cmp	r3, #1
 800a460:	bf14      	ite	ne
 800a462:	2301      	movne	r3, #1
 800a464:	2300      	moveq	r3, #0
 800a466:	b2db      	uxtb	r3, r3
 800a468:	e015      	b.n	800a496 <HAL_TIM_PWM_Start+0x6a>
 800a46a:	683b      	ldr	r3, [r7, #0]
 800a46c:	2b08      	cmp	r3, #8
 800a46e:	d109      	bne.n	800a484 <HAL_TIM_PWM_Start+0x58>
 800a470:	687b      	ldr	r3, [r7, #4]
 800a472:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800a476:	b2db      	uxtb	r3, r3
 800a478:	2b01      	cmp	r3, #1
 800a47a:	bf14      	ite	ne
 800a47c:	2301      	movne	r3, #1
 800a47e:	2300      	moveq	r3, #0
 800a480:	b2db      	uxtb	r3, r3
 800a482:	e008      	b.n	800a496 <HAL_TIM_PWM_Start+0x6a>
 800a484:	687b      	ldr	r3, [r7, #4]
 800a486:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a48a:	b2db      	uxtb	r3, r3
 800a48c:	2b01      	cmp	r3, #1
 800a48e:	bf14      	ite	ne
 800a490:	2301      	movne	r3, #1
 800a492:	2300      	moveq	r3, #0
 800a494:	b2db      	uxtb	r3, r3
 800a496:	2b00      	cmp	r3, #0
 800a498:	d001      	beq.n	800a49e <HAL_TIM_PWM_Start+0x72>
 800a49a:	2301      	movs	r3, #1
 800a49c:	e07c      	b.n	800a598 <HAL_TIM_PWM_Start+0x16c>
 800a49e:	683b      	ldr	r3, [r7, #0]
 800a4a0:	2b00      	cmp	r3, #0
 800a4a2:	d104      	bne.n	800a4ae <HAL_TIM_PWM_Start+0x82>
 800a4a4:	687b      	ldr	r3, [r7, #4]
 800a4a6:	2202      	movs	r2, #2
 800a4a8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a4ac:	e013      	b.n	800a4d6 <HAL_TIM_PWM_Start+0xaa>
 800a4ae:	683b      	ldr	r3, [r7, #0]
 800a4b0:	2b04      	cmp	r3, #4
 800a4b2:	d104      	bne.n	800a4be <HAL_TIM_PWM_Start+0x92>
 800a4b4:	687b      	ldr	r3, [r7, #4]
 800a4b6:	2202      	movs	r2, #2
 800a4b8:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a4bc:	e00b      	b.n	800a4d6 <HAL_TIM_PWM_Start+0xaa>
 800a4be:	683b      	ldr	r3, [r7, #0]
 800a4c0:	2b08      	cmp	r3, #8
 800a4c2:	d104      	bne.n	800a4ce <HAL_TIM_PWM_Start+0xa2>
 800a4c4:	687b      	ldr	r3, [r7, #4]
 800a4c6:	2202      	movs	r2, #2
 800a4c8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a4cc:	e003      	b.n	800a4d6 <HAL_TIM_PWM_Start+0xaa>
 800a4ce:	687b      	ldr	r3, [r7, #4]
 800a4d0:	2202      	movs	r2, #2
 800a4d2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a4d6:	687b      	ldr	r3, [r7, #4]
 800a4d8:	681b      	ldr	r3, [r3, #0]
 800a4da:	2201      	movs	r2, #1
 800a4dc:	6839      	ldr	r1, [r7, #0]
 800a4de:	4618      	mov	r0, r3
 800a4e0:	f001 fc0c 	bl	800bcfc <TIM_CCxChannelCmd>
 800a4e4:	687b      	ldr	r3, [r7, #4]
 800a4e6:	681b      	ldr	r3, [r3, #0]
 800a4e8:	4a2d      	ldr	r2, [pc, #180]	; (800a5a0 <HAL_TIM_PWM_Start+0x174>)
 800a4ea:	4293      	cmp	r3, r2
 800a4ec:	d004      	beq.n	800a4f8 <HAL_TIM_PWM_Start+0xcc>
 800a4ee:	687b      	ldr	r3, [r7, #4]
 800a4f0:	681b      	ldr	r3, [r3, #0]
 800a4f2:	4a2c      	ldr	r2, [pc, #176]	; (800a5a4 <HAL_TIM_PWM_Start+0x178>)
 800a4f4:	4293      	cmp	r3, r2
 800a4f6:	d101      	bne.n	800a4fc <HAL_TIM_PWM_Start+0xd0>
 800a4f8:	2301      	movs	r3, #1
 800a4fa:	e000      	b.n	800a4fe <HAL_TIM_PWM_Start+0xd2>
 800a4fc:	2300      	movs	r3, #0
 800a4fe:	2b00      	cmp	r3, #0
 800a500:	d007      	beq.n	800a512 <HAL_TIM_PWM_Start+0xe6>
 800a502:	687b      	ldr	r3, [r7, #4]
 800a504:	681b      	ldr	r3, [r3, #0]
 800a506:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800a508:	687b      	ldr	r3, [r7, #4]
 800a50a:	681b      	ldr	r3, [r3, #0]
 800a50c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800a510:	645a      	str	r2, [r3, #68]	; 0x44
 800a512:	687b      	ldr	r3, [r7, #4]
 800a514:	681b      	ldr	r3, [r3, #0]
 800a516:	4a22      	ldr	r2, [pc, #136]	; (800a5a0 <HAL_TIM_PWM_Start+0x174>)
 800a518:	4293      	cmp	r3, r2
 800a51a:	d022      	beq.n	800a562 <HAL_TIM_PWM_Start+0x136>
 800a51c:	687b      	ldr	r3, [r7, #4]
 800a51e:	681b      	ldr	r3, [r3, #0]
 800a520:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a524:	d01d      	beq.n	800a562 <HAL_TIM_PWM_Start+0x136>
 800a526:	687b      	ldr	r3, [r7, #4]
 800a528:	681b      	ldr	r3, [r3, #0]
 800a52a:	4a1f      	ldr	r2, [pc, #124]	; (800a5a8 <HAL_TIM_PWM_Start+0x17c>)
 800a52c:	4293      	cmp	r3, r2
 800a52e:	d018      	beq.n	800a562 <HAL_TIM_PWM_Start+0x136>
 800a530:	687b      	ldr	r3, [r7, #4]
 800a532:	681b      	ldr	r3, [r3, #0]
 800a534:	4a1d      	ldr	r2, [pc, #116]	; (800a5ac <HAL_TIM_PWM_Start+0x180>)
 800a536:	4293      	cmp	r3, r2
 800a538:	d013      	beq.n	800a562 <HAL_TIM_PWM_Start+0x136>
 800a53a:	687b      	ldr	r3, [r7, #4]
 800a53c:	681b      	ldr	r3, [r3, #0]
 800a53e:	4a1c      	ldr	r2, [pc, #112]	; (800a5b0 <HAL_TIM_PWM_Start+0x184>)
 800a540:	4293      	cmp	r3, r2
 800a542:	d00e      	beq.n	800a562 <HAL_TIM_PWM_Start+0x136>
 800a544:	687b      	ldr	r3, [r7, #4]
 800a546:	681b      	ldr	r3, [r3, #0]
 800a548:	4a16      	ldr	r2, [pc, #88]	; (800a5a4 <HAL_TIM_PWM_Start+0x178>)
 800a54a:	4293      	cmp	r3, r2
 800a54c:	d009      	beq.n	800a562 <HAL_TIM_PWM_Start+0x136>
 800a54e:	687b      	ldr	r3, [r7, #4]
 800a550:	681b      	ldr	r3, [r3, #0]
 800a552:	4a18      	ldr	r2, [pc, #96]	; (800a5b4 <HAL_TIM_PWM_Start+0x188>)
 800a554:	4293      	cmp	r3, r2
 800a556:	d004      	beq.n	800a562 <HAL_TIM_PWM_Start+0x136>
 800a558:	687b      	ldr	r3, [r7, #4]
 800a55a:	681b      	ldr	r3, [r3, #0]
 800a55c:	4a16      	ldr	r2, [pc, #88]	; (800a5b8 <HAL_TIM_PWM_Start+0x18c>)
 800a55e:	4293      	cmp	r3, r2
 800a560:	d111      	bne.n	800a586 <HAL_TIM_PWM_Start+0x15a>
 800a562:	687b      	ldr	r3, [r7, #4]
 800a564:	681b      	ldr	r3, [r3, #0]
 800a566:	689b      	ldr	r3, [r3, #8]
 800a568:	f003 0307 	and.w	r3, r3, #7
 800a56c:	60fb      	str	r3, [r7, #12]
 800a56e:	68fb      	ldr	r3, [r7, #12]
 800a570:	2b06      	cmp	r3, #6
 800a572:	d010      	beq.n	800a596 <HAL_TIM_PWM_Start+0x16a>
 800a574:	687b      	ldr	r3, [r7, #4]
 800a576:	681b      	ldr	r3, [r3, #0]
 800a578:	681a      	ldr	r2, [r3, #0]
 800a57a:	687b      	ldr	r3, [r7, #4]
 800a57c:	681b      	ldr	r3, [r3, #0]
 800a57e:	f042 0201 	orr.w	r2, r2, #1
 800a582:	601a      	str	r2, [r3, #0]
 800a584:	e007      	b.n	800a596 <HAL_TIM_PWM_Start+0x16a>
 800a586:	687b      	ldr	r3, [r7, #4]
 800a588:	681b      	ldr	r3, [r3, #0]
 800a58a:	681a      	ldr	r2, [r3, #0]
 800a58c:	687b      	ldr	r3, [r7, #4]
 800a58e:	681b      	ldr	r3, [r3, #0]
 800a590:	f042 0201 	orr.w	r2, r2, #1
 800a594:	601a      	str	r2, [r3, #0]
 800a596:	2300      	movs	r3, #0
 800a598:	4618      	mov	r0, r3
 800a59a:	3710      	adds	r7, #16
 800a59c:	46bd      	mov	sp, r7
 800a59e:	bd80      	pop	{r7, pc}
 800a5a0:	40010000 	.word	0x40010000
 800a5a4:	40010400 	.word	0x40010400
 800a5a8:	40000400 	.word	0x40000400
 800a5ac:	40000800 	.word	0x40000800
 800a5b0:	40000c00 	.word	0x40000c00
 800a5b4:	40014000 	.word	0x40014000
 800a5b8:	40001800 	.word	0x40001800

0800a5bc <HAL_TIM_IC_Init>:
 800a5bc:	b580      	push	{r7, lr}
 800a5be:	b082      	sub	sp, #8
 800a5c0:	af00      	add	r7, sp, #0
 800a5c2:	6078      	str	r0, [r7, #4]
 800a5c4:	687b      	ldr	r3, [r7, #4]
 800a5c6:	2b00      	cmp	r3, #0
 800a5c8:	d101      	bne.n	800a5ce <HAL_TIM_IC_Init+0x12>
 800a5ca:	2301      	movs	r3, #1
 800a5cc:	e041      	b.n	800a652 <HAL_TIM_IC_Init+0x96>
 800a5ce:	687b      	ldr	r3, [r7, #4]
 800a5d0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a5d4:	b2db      	uxtb	r3, r3
 800a5d6:	2b00      	cmp	r3, #0
 800a5d8:	d106      	bne.n	800a5e8 <HAL_TIM_IC_Init+0x2c>
 800a5da:	687b      	ldr	r3, [r7, #4]
 800a5dc:	2200      	movs	r2, #0
 800a5de:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a5e2:	6878      	ldr	r0, [r7, #4]
 800a5e4:	f000 f839 	bl	800a65a <HAL_TIM_IC_MspInit>
 800a5e8:	687b      	ldr	r3, [r7, #4]
 800a5ea:	2202      	movs	r2, #2
 800a5ec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a5f0:	687b      	ldr	r3, [r7, #4]
 800a5f2:	681a      	ldr	r2, [r3, #0]
 800a5f4:	687b      	ldr	r3, [r7, #4]
 800a5f6:	3304      	adds	r3, #4
 800a5f8:	4619      	mov	r1, r3
 800a5fa:	4610      	mov	r0, r2
 800a5fc:	f000 ff6a 	bl	800b4d4 <TIM_Base_SetConfig>
 800a600:	687b      	ldr	r3, [r7, #4]
 800a602:	2201      	movs	r2, #1
 800a604:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800a608:	687b      	ldr	r3, [r7, #4]
 800a60a:	2201      	movs	r2, #1
 800a60c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a610:	687b      	ldr	r3, [r7, #4]
 800a612:	2201      	movs	r2, #1
 800a614:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a618:	687b      	ldr	r3, [r7, #4]
 800a61a:	2201      	movs	r2, #1
 800a61c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a620:	687b      	ldr	r3, [r7, #4]
 800a622:	2201      	movs	r2, #1
 800a624:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a628:	687b      	ldr	r3, [r7, #4]
 800a62a:	2201      	movs	r2, #1
 800a62c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a630:	687b      	ldr	r3, [r7, #4]
 800a632:	2201      	movs	r2, #1
 800a634:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a638:	687b      	ldr	r3, [r7, #4]
 800a63a:	2201      	movs	r2, #1
 800a63c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a640:	687b      	ldr	r3, [r7, #4]
 800a642:	2201      	movs	r2, #1
 800a644:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a648:	687b      	ldr	r3, [r7, #4]
 800a64a:	2201      	movs	r2, #1
 800a64c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a650:	2300      	movs	r3, #0
 800a652:	4618      	mov	r0, r3
 800a654:	3708      	adds	r7, #8
 800a656:	46bd      	mov	sp, r7
 800a658:	bd80      	pop	{r7, pc}

0800a65a <HAL_TIM_IC_MspInit>:
 800a65a:	b480      	push	{r7}
 800a65c:	b083      	sub	sp, #12
 800a65e:	af00      	add	r7, sp, #0
 800a660:	6078      	str	r0, [r7, #4]
 800a662:	bf00      	nop
 800a664:	370c      	adds	r7, #12
 800a666:	46bd      	mov	sp, r7
 800a668:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a66c:	4770      	bx	lr
	...

0800a670 <HAL_TIM_IC_Start_DMA>:
 800a670:	b580      	push	{r7, lr}
 800a672:	b086      	sub	sp, #24
 800a674:	af00      	add	r7, sp, #0
 800a676:	60f8      	str	r0, [r7, #12]
 800a678:	60b9      	str	r1, [r7, #8]
 800a67a:	607a      	str	r2, [r7, #4]
 800a67c:	807b      	strh	r3, [r7, #2]
 800a67e:	2300      	movs	r3, #0
 800a680:	75fb      	strb	r3, [r7, #23]
 800a682:	68bb      	ldr	r3, [r7, #8]
 800a684:	2b00      	cmp	r3, #0
 800a686:	d104      	bne.n	800a692 <HAL_TIM_IC_Start_DMA+0x22>
 800a688:	68fb      	ldr	r3, [r7, #12]
 800a68a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a68e:	b2db      	uxtb	r3, r3
 800a690:	e013      	b.n	800a6ba <HAL_TIM_IC_Start_DMA+0x4a>
 800a692:	68bb      	ldr	r3, [r7, #8]
 800a694:	2b04      	cmp	r3, #4
 800a696:	d104      	bne.n	800a6a2 <HAL_TIM_IC_Start_DMA+0x32>
 800a698:	68fb      	ldr	r3, [r7, #12]
 800a69a:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800a69e:	b2db      	uxtb	r3, r3
 800a6a0:	e00b      	b.n	800a6ba <HAL_TIM_IC_Start_DMA+0x4a>
 800a6a2:	68bb      	ldr	r3, [r7, #8]
 800a6a4:	2b08      	cmp	r3, #8
 800a6a6:	d104      	bne.n	800a6b2 <HAL_TIM_IC_Start_DMA+0x42>
 800a6a8:	68fb      	ldr	r3, [r7, #12]
 800a6aa:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800a6ae:	b2db      	uxtb	r3, r3
 800a6b0:	e003      	b.n	800a6ba <HAL_TIM_IC_Start_DMA+0x4a>
 800a6b2:	68fb      	ldr	r3, [r7, #12]
 800a6b4:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a6b8:	b2db      	uxtb	r3, r3
 800a6ba:	75bb      	strb	r3, [r7, #22]
 800a6bc:	68bb      	ldr	r3, [r7, #8]
 800a6be:	2b00      	cmp	r3, #0
 800a6c0:	d104      	bne.n	800a6cc <HAL_TIM_IC_Start_DMA+0x5c>
 800a6c2:	68fb      	ldr	r3, [r7, #12]
 800a6c4:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800a6c8:	b2db      	uxtb	r3, r3
 800a6ca:	e013      	b.n	800a6f4 <HAL_TIM_IC_Start_DMA+0x84>
 800a6cc:	68bb      	ldr	r3, [r7, #8]
 800a6ce:	2b04      	cmp	r3, #4
 800a6d0:	d104      	bne.n	800a6dc <HAL_TIM_IC_Start_DMA+0x6c>
 800a6d2:	68fb      	ldr	r3, [r7, #12]
 800a6d4:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 800a6d8:	b2db      	uxtb	r3, r3
 800a6da:	e00b      	b.n	800a6f4 <HAL_TIM_IC_Start_DMA+0x84>
 800a6dc:	68bb      	ldr	r3, [r7, #8]
 800a6de:	2b08      	cmp	r3, #8
 800a6e0:	d104      	bne.n	800a6ec <HAL_TIM_IC_Start_DMA+0x7c>
 800a6e2:	68fb      	ldr	r3, [r7, #12]
 800a6e4:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800a6e8:	b2db      	uxtb	r3, r3
 800a6ea:	e003      	b.n	800a6f4 <HAL_TIM_IC_Start_DMA+0x84>
 800a6ec:	68fb      	ldr	r3, [r7, #12]
 800a6ee:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800a6f2:	b2db      	uxtb	r3, r3
 800a6f4:	757b      	strb	r3, [r7, #21]
 800a6f6:	7dbb      	ldrb	r3, [r7, #22]
 800a6f8:	2b02      	cmp	r3, #2
 800a6fa:	d002      	beq.n	800a702 <HAL_TIM_IC_Start_DMA+0x92>
 800a6fc:	7d7b      	ldrb	r3, [r7, #21]
 800a6fe:	2b02      	cmp	r3, #2
 800a700:	d101      	bne.n	800a706 <HAL_TIM_IC_Start_DMA+0x96>
 800a702:	2302      	movs	r3, #2
 800a704:	e146      	b.n	800a994 <HAL_TIM_IC_Start_DMA+0x324>
 800a706:	7dbb      	ldrb	r3, [r7, #22]
 800a708:	2b01      	cmp	r3, #1
 800a70a:	d143      	bne.n	800a794 <HAL_TIM_IC_Start_DMA+0x124>
 800a70c:	7d7b      	ldrb	r3, [r7, #21]
 800a70e:	2b01      	cmp	r3, #1
 800a710:	d140      	bne.n	800a794 <HAL_TIM_IC_Start_DMA+0x124>
 800a712:	687b      	ldr	r3, [r7, #4]
 800a714:	2b00      	cmp	r3, #0
 800a716:	d104      	bne.n	800a722 <HAL_TIM_IC_Start_DMA+0xb2>
 800a718:	887b      	ldrh	r3, [r7, #2]
 800a71a:	2b00      	cmp	r3, #0
 800a71c:	d001      	beq.n	800a722 <HAL_TIM_IC_Start_DMA+0xb2>
 800a71e:	2301      	movs	r3, #1
 800a720:	e138      	b.n	800a994 <HAL_TIM_IC_Start_DMA+0x324>
 800a722:	68bb      	ldr	r3, [r7, #8]
 800a724:	2b00      	cmp	r3, #0
 800a726:	d104      	bne.n	800a732 <HAL_TIM_IC_Start_DMA+0xc2>
 800a728:	68fb      	ldr	r3, [r7, #12]
 800a72a:	2202      	movs	r2, #2
 800a72c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a730:	e013      	b.n	800a75a <HAL_TIM_IC_Start_DMA+0xea>
 800a732:	68bb      	ldr	r3, [r7, #8]
 800a734:	2b04      	cmp	r3, #4
 800a736:	d104      	bne.n	800a742 <HAL_TIM_IC_Start_DMA+0xd2>
 800a738:	68fb      	ldr	r3, [r7, #12]
 800a73a:	2202      	movs	r2, #2
 800a73c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a740:	e00b      	b.n	800a75a <HAL_TIM_IC_Start_DMA+0xea>
 800a742:	68bb      	ldr	r3, [r7, #8]
 800a744:	2b08      	cmp	r3, #8
 800a746:	d104      	bne.n	800a752 <HAL_TIM_IC_Start_DMA+0xe2>
 800a748:	68fb      	ldr	r3, [r7, #12]
 800a74a:	2202      	movs	r2, #2
 800a74c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a750:	e003      	b.n	800a75a <HAL_TIM_IC_Start_DMA+0xea>
 800a752:	68fb      	ldr	r3, [r7, #12]
 800a754:	2202      	movs	r2, #2
 800a756:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a75a:	68bb      	ldr	r3, [r7, #8]
 800a75c:	2b00      	cmp	r3, #0
 800a75e:	d104      	bne.n	800a76a <HAL_TIM_IC_Start_DMA+0xfa>
 800a760:	68fb      	ldr	r3, [r7, #12]
 800a762:	2202      	movs	r2, #2
 800a764:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a768:	e016      	b.n	800a798 <HAL_TIM_IC_Start_DMA+0x128>
 800a76a:	68bb      	ldr	r3, [r7, #8]
 800a76c:	2b04      	cmp	r3, #4
 800a76e:	d104      	bne.n	800a77a <HAL_TIM_IC_Start_DMA+0x10a>
 800a770:	68fb      	ldr	r3, [r7, #12]
 800a772:	2202      	movs	r2, #2
 800a774:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a778:	e00e      	b.n	800a798 <HAL_TIM_IC_Start_DMA+0x128>
 800a77a:	68bb      	ldr	r3, [r7, #8]
 800a77c:	2b08      	cmp	r3, #8
 800a77e:	d104      	bne.n	800a78a <HAL_TIM_IC_Start_DMA+0x11a>
 800a780:	68fb      	ldr	r3, [r7, #12]
 800a782:	2202      	movs	r2, #2
 800a784:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a788:	e006      	b.n	800a798 <HAL_TIM_IC_Start_DMA+0x128>
 800a78a:	68fb      	ldr	r3, [r7, #12]
 800a78c:	2202      	movs	r2, #2
 800a78e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a792:	e001      	b.n	800a798 <HAL_TIM_IC_Start_DMA+0x128>
 800a794:	2301      	movs	r3, #1
 800a796:	e0fd      	b.n	800a994 <HAL_TIM_IC_Start_DMA+0x324>
 800a798:	68fb      	ldr	r3, [r7, #12]
 800a79a:	681b      	ldr	r3, [r3, #0]
 800a79c:	2201      	movs	r2, #1
 800a79e:	68b9      	ldr	r1, [r7, #8]
 800a7a0:	4618      	mov	r0, r3
 800a7a2:	f001 faab 	bl	800bcfc <TIM_CCxChannelCmd>
 800a7a6:	68bb      	ldr	r3, [r7, #8]
 800a7a8:	2b0c      	cmp	r3, #12
 800a7aa:	f200 80ad 	bhi.w	800a908 <HAL_TIM_IC_Start_DMA+0x298>
 800a7ae:	a201      	add	r2, pc, #4	; (adr r2, 800a7b4 <HAL_TIM_IC_Start_DMA+0x144>)
 800a7b0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a7b4:	0800a7e9 	.word	0x0800a7e9
 800a7b8:	0800a909 	.word	0x0800a909
 800a7bc:	0800a909 	.word	0x0800a909
 800a7c0:	0800a909 	.word	0x0800a909
 800a7c4:	0800a831 	.word	0x0800a831
 800a7c8:	0800a909 	.word	0x0800a909
 800a7cc:	0800a909 	.word	0x0800a909
 800a7d0:	0800a909 	.word	0x0800a909
 800a7d4:	0800a879 	.word	0x0800a879
 800a7d8:	0800a909 	.word	0x0800a909
 800a7dc:	0800a909 	.word	0x0800a909
 800a7e0:	0800a909 	.word	0x0800a909
 800a7e4:	0800a8c1 	.word	0x0800a8c1
 800a7e8:	68fb      	ldr	r3, [r7, #12]
 800a7ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a7ec:	4a6b      	ldr	r2, [pc, #428]	; (800a99c <HAL_TIM_IC_Start_DMA+0x32c>)
 800a7ee:	63da      	str	r2, [r3, #60]	; 0x3c
 800a7f0:	68fb      	ldr	r3, [r7, #12]
 800a7f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a7f4:	4a6a      	ldr	r2, [pc, #424]	; (800a9a0 <HAL_TIM_IC_Start_DMA+0x330>)
 800a7f6:	641a      	str	r2, [r3, #64]	; 0x40
 800a7f8:	68fb      	ldr	r3, [r7, #12]
 800a7fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a7fc:	4a69      	ldr	r2, [pc, #420]	; (800a9a4 <HAL_TIM_IC_Start_DMA+0x334>)
 800a7fe:	64da      	str	r2, [r3, #76]	; 0x4c
 800a800:	68fb      	ldr	r3, [r7, #12]
 800a802:	6a58      	ldr	r0, [r3, #36]	; 0x24
 800a804:	68fb      	ldr	r3, [r7, #12]
 800a806:	681b      	ldr	r3, [r3, #0]
 800a808:	3334      	adds	r3, #52	; 0x34
 800a80a:	4619      	mov	r1, r3
 800a80c:	687a      	ldr	r2, [r7, #4]
 800a80e:	887b      	ldrh	r3, [r7, #2]
 800a810:	f7fd ff68 	bl	80086e4 <HAL_DMA_Start_IT>
 800a814:	4603      	mov	r3, r0
 800a816:	2b00      	cmp	r3, #0
 800a818:	d001      	beq.n	800a81e <HAL_TIM_IC_Start_DMA+0x1ae>
 800a81a:	2301      	movs	r3, #1
 800a81c:	e0ba      	b.n	800a994 <HAL_TIM_IC_Start_DMA+0x324>
 800a81e:	68fb      	ldr	r3, [r7, #12]
 800a820:	681b      	ldr	r3, [r3, #0]
 800a822:	68da      	ldr	r2, [r3, #12]
 800a824:	68fb      	ldr	r3, [r7, #12]
 800a826:	681b      	ldr	r3, [r3, #0]
 800a828:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a82c:	60da      	str	r2, [r3, #12]
 800a82e:	e06e      	b.n	800a90e <HAL_TIM_IC_Start_DMA+0x29e>
 800a830:	68fb      	ldr	r3, [r7, #12]
 800a832:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a834:	4a59      	ldr	r2, [pc, #356]	; (800a99c <HAL_TIM_IC_Start_DMA+0x32c>)
 800a836:	63da      	str	r2, [r3, #60]	; 0x3c
 800a838:	68fb      	ldr	r3, [r7, #12]
 800a83a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a83c:	4a58      	ldr	r2, [pc, #352]	; (800a9a0 <HAL_TIM_IC_Start_DMA+0x330>)
 800a83e:	641a      	str	r2, [r3, #64]	; 0x40
 800a840:	68fb      	ldr	r3, [r7, #12]
 800a842:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a844:	4a57      	ldr	r2, [pc, #348]	; (800a9a4 <HAL_TIM_IC_Start_DMA+0x334>)
 800a846:	64da      	str	r2, [r3, #76]	; 0x4c
 800a848:	68fb      	ldr	r3, [r7, #12]
 800a84a:	6a98      	ldr	r0, [r3, #40]	; 0x28
 800a84c:	68fb      	ldr	r3, [r7, #12]
 800a84e:	681b      	ldr	r3, [r3, #0]
 800a850:	3338      	adds	r3, #56	; 0x38
 800a852:	4619      	mov	r1, r3
 800a854:	687a      	ldr	r2, [r7, #4]
 800a856:	887b      	ldrh	r3, [r7, #2]
 800a858:	f7fd ff44 	bl	80086e4 <HAL_DMA_Start_IT>
 800a85c:	4603      	mov	r3, r0
 800a85e:	2b00      	cmp	r3, #0
 800a860:	d001      	beq.n	800a866 <HAL_TIM_IC_Start_DMA+0x1f6>
 800a862:	2301      	movs	r3, #1
 800a864:	e096      	b.n	800a994 <HAL_TIM_IC_Start_DMA+0x324>
 800a866:	68fb      	ldr	r3, [r7, #12]
 800a868:	681b      	ldr	r3, [r3, #0]
 800a86a:	68da      	ldr	r2, [r3, #12]
 800a86c:	68fb      	ldr	r3, [r7, #12]
 800a86e:	681b      	ldr	r3, [r3, #0]
 800a870:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a874:	60da      	str	r2, [r3, #12]
 800a876:	e04a      	b.n	800a90e <HAL_TIM_IC_Start_DMA+0x29e>
 800a878:	68fb      	ldr	r3, [r7, #12]
 800a87a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a87c:	4a47      	ldr	r2, [pc, #284]	; (800a99c <HAL_TIM_IC_Start_DMA+0x32c>)
 800a87e:	63da      	str	r2, [r3, #60]	; 0x3c
 800a880:	68fb      	ldr	r3, [r7, #12]
 800a882:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a884:	4a46      	ldr	r2, [pc, #280]	; (800a9a0 <HAL_TIM_IC_Start_DMA+0x330>)
 800a886:	641a      	str	r2, [r3, #64]	; 0x40
 800a888:	68fb      	ldr	r3, [r7, #12]
 800a88a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a88c:	4a45      	ldr	r2, [pc, #276]	; (800a9a4 <HAL_TIM_IC_Start_DMA+0x334>)
 800a88e:	64da      	str	r2, [r3, #76]	; 0x4c
 800a890:	68fb      	ldr	r3, [r7, #12]
 800a892:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 800a894:	68fb      	ldr	r3, [r7, #12]
 800a896:	681b      	ldr	r3, [r3, #0]
 800a898:	333c      	adds	r3, #60	; 0x3c
 800a89a:	4619      	mov	r1, r3
 800a89c:	687a      	ldr	r2, [r7, #4]
 800a89e:	887b      	ldrh	r3, [r7, #2]
 800a8a0:	f7fd ff20 	bl	80086e4 <HAL_DMA_Start_IT>
 800a8a4:	4603      	mov	r3, r0
 800a8a6:	2b00      	cmp	r3, #0
 800a8a8:	d001      	beq.n	800a8ae <HAL_TIM_IC_Start_DMA+0x23e>
 800a8aa:	2301      	movs	r3, #1
 800a8ac:	e072      	b.n	800a994 <HAL_TIM_IC_Start_DMA+0x324>
 800a8ae:	68fb      	ldr	r3, [r7, #12]
 800a8b0:	681b      	ldr	r3, [r3, #0]
 800a8b2:	68da      	ldr	r2, [r3, #12]
 800a8b4:	68fb      	ldr	r3, [r7, #12]
 800a8b6:	681b      	ldr	r3, [r3, #0]
 800a8b8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a8bc:	60da      	str	r2, [r3, #12]
 800a8be:	e026      	b.n	800a90e <HAL_TIM_IC_Start_DMA+0x29e>
 800a8c0:	68fb      	ldr	r3, [r7, #12]
 800a8c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a8c4:	4a35      	ldr	r2, [pc, #212]	; (800a99c <HAL_TIM_IC_Start_DMA+0x32c>)
 800a8c6:	63da      	str	r2, [r3, #60]	; 0x3c
 800a8c8:	68fb      	ldr	r3, [r7, #12]
 800a8ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a8cc:	4a34      	ldr	r2, [pc, #208]	; (800a9a0 <HAL_TIM_IC_Start_DMA+0x330>)
 800a8ce:	641a      	str	r2, [r3, #64]	; 0x40
 800a8d0:	68fb      	ldr	r3, [r7, #12]
 800a8d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a8d4:	4a33      	ldr	r2, [pc, #204]	; (800a9a4 <HAL_TIM_IC_Start_DMA+0x334>)
 800a8d6:	64da      	str	r2, [r3, #76]	; 0x4c
 800a8d8:	68fb      	ldr	r3, [r7, #12]
 800a8da:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800a8dc:	68fb      	ldr	r3, [r7, #12]
 800a8de:	681b      	ldr	r3, [r3, #0]
 800a8e0:	3340      	adds	r3, #64	; 0x40
 800a8e2:	4619      	mov	r1, r3
 800a8e4:	687a      	ldr	r2, [r7, #4]
 800a8e6:	887b      	ldrh	r3, [r7, #2]
 800a8e8:	f7fd fefc 	bl	80086e4 <HAL_DMA_Start_IT>
 800a8ec:	4603      	mov	r3, r0
 800a8ee:	2b00      	cmp	r3, #0
 800a8f0:	d001      	beq.n	800a8f6 <HAL_TIM_IC_Start_DMA+0x286>
 800a8f2:	2301      	movs	r3, #1
 800a8f4:	e04e      	b.n	800a994 <HAL_TIM_IC_Start_DMA+0x324>
 800a8f6:	68fb      	ldr	r3, [r7, #12]
 800a8f8:	681b      	ldr	r3, [r3, #0]
 800a8fa:	68da      	ldr	r2, [r3, #12]
 800a8fc:	68fb      	ldr	r3, [r7, #12]
 800a8fe:	681b      	ldr	r3, [r3, #0]
 800a900:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800a904:	60da      	str	r2, [r3, #12]
 800a906:	e002      	b.n	800a90e <HAL_TIM_IC_Start_DMA+0x29e>
 800a908:	2301      	movs	r3, #1
 800a90a:	75fb      	strb	r3, [r7, #23]
 800a90c:	bf00      	nop
 800a90e:	68fb      	ldr	r3, [r7, #12]
 800a910:	681b      	ldr	r3, [r3, #0]
 800a912:	4a25      	ldr	r2, [pc, #148]	; (800a9a8 <HAL_TIM_IC_Start_DMA+0x338>)
 800a914:	4293      	cmp	r3, r2
 800a916:	d022      	beq.n	800a95e <HAL_TIM_IC_Start_DMA+0x2ee>
 800a918:	68fb      	ldr	r3, [r7, #12]
 800a91a:	681b      	ldr	r3, [r3, #0]
 800a91c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a920:	d01d      	beq.n	800a95e <HAL_TIM_IC_Start_DMA+0x2ee>
 800a922:	68fb      	ldr	r3, [r7, #12]
 800a924:	681b      	ldr	r3, [r3, #0]
 800a926:	4a21      	ldr	r2, [pc, #132]	; (800a9ac <HAL_TIM_IC_Start_DMA+0x33c>)
 800a928:	4293      	cmp	r3, r2
 800a92a:	d018      	beq.n	800a95e <HAL_TIM_IC_Start_DMA+0x2ee>
 800a92c:	68fb      	ldr	r3, [r7, #12]
 800a92e:	681b      	ldr	r3, [r3, #0]
 800a930:	4a1f      	ldr	r2, [pc, #124]	; (800a9b0 <HAL_TIM_IC_Start_DMA+0x340>)
 800a932:	4293      	cmp	r3, r2
 800a934:	d013      	beq.n	800a95e <HAL_TIM_IC_Start_DMA+0x2ee>
 800a936:	68fb      	ldr	r3, [r7, #12]
 800a938:	681b      	ldr	r3, [r3, #0]
 800a93a:	4a1e      	ldr	r2, [pc, #120]	; (800a9b4 <HAL_TIM_IC_Start_DMA+0x344>)
 800a93c:	4293      	cmp	r3, r2
 800a93e:	d00e      	beq.n	800a95e <HAL_TIM_IC_Start_DMA+0x2ee>
 800a940:	68fb      	ldr	r3, [r7, #12]
 800a942:	681b      	ldr	r3, [r3, #0]
 800a944:	4a1c      	ldr	r2, [pc, #112]	; (800a9b8 <HAL_TIM_IC_Start_DMA+0x348>)
 800a946:	4293      	cmp	r3, r2
 800a948:	d009      	beq.n	800a95e <HAL_TIM_IC_Start_DMA+0x2ee>
 800a94a:	68fb      	ldr	r3, [r7, #12]
 800a94c:	681b      	ldr	r3, [r3, #0]
 800a94e:	4a1b      	ldr	r2, [pc, #108]	; (800a9bc <HAL_TIM_IC_Start_DMA+0x34c>)
 800a950:	4293      	cmp	r3, r2
 800a952:	d004      	beq.n	800a95e <HAL_TIM_IC_Start_DMA+0x2ee>
 800a954:	68fb      	ldr	r3, [r7, #12]
 800a956:	681b      	ldr	r3, [r3, #0]
 800a958:	4a19      	ldr	r2, [pc, #100]	; (800a9c0 <HAL_TIM_IC_Start_DMA+0x350>)
 800a95a:	4293      	cmp	r3, r2
 800a95c:	d111      	bne.n	800a982 <HAL_TIM_IC_Start_DMA+0x312>
 800a95e:	68fb      	ldr	r3, [r7, #12]
 800a960:	681b      	ldr	r3, [r3, #0]
 800a962:	689b      	ldr	r3, [r3, #8]
 800a964:	f003 0307 	and.w	r3, r3, #7
 800a968:	613b      	str	r3, [r7, #16]
 800a96a:	693b      	ldr	r3, [r7, #16]
 800a96c:	2b06      	cmp	r3, #6
 800a96e:	d010      	beq.n	800a992 <HAL_TIM_IC_Start_DMA+0x322>
 800a970:	68fb      	ldr	r3, [r7, #12]
 800a972:	681b      	ldr	r3, [r3, #0]
 800a974:	681a      	ldr	r2, [r3, #0]
 800a976:	68fb      	ldr	r3, [r7, #12]
 800a978:	681b      	ldr	r3, [r3, #0]
 800a97a:	f042 0201 	orr.w	r2, r2, #1
 800a97e:	601a      	str	r2, [r3, #0]
 800a980:	e007      	b.n	800a992 <HAL_TIM_IC_Start_DMA+0x322>
 800a982:	68fb      	ldr	r3, [r7, #12]
 800a984:	681b      	ldr	r3, [r3, #0]
 800a986:	681a      	ldr	r2, [r3, #0]
 800a988:	68fb      	ldr	r3, [r7, #12]
 800a98a:	681b      	ldr	r3, [r3, #0]
 800a98c:	f042 0201 	orr.w	r2, r2, #1
 800a990:	601a      	str	r2, [r3, #0]
 800a992:	7dfb      	ldrb	r3, [r7, #23]
 800a994:	4618      	mov	r0, r3
 800a996:	3718      	adds	r7, #24
 800a998:	46bd      	mov	sp, r7
 800a99a:	bd80      	pop	{r7, pc}
 800a99c:	0800b3a5 	.word	0x0800b3a5
 800a9a0:	0800b46d 	.word	0x0800b46d
 800a9a4:	0800b313 	.word	0x0800b313
 800a9a8:	40010000 	.word	0x40010000
 800a9ac:	40000400 	.word	0x40000400
 800a9b0:	40000800 	.word	0x40000800
 800a9b4:	40000c00 	.word	0x40000c00
 800a9b8:	40010400 	.word	0x40010400
 800a9bc:	40014000 	.word	0x40014000
 800a9c0:	40001800 	.word	0x40001800

0800a9c4 <HAL_TIM_Encoder_Init>:
 800a9c4:	b580      	push	{r7, lr}
 800a9c6:	b086      	sub	sp, #24
 800a9c8:	af00      	add	r7, sp, #0
 800a9ca:	6078      	str	r0, [r7, #4]
 800a9cc:	6039      	str	r1, [r7, #0]
 800a9ce:	687b      	ldr	r3, [r7, #4]
 800a9d0:	2b00      	cmp	r3, #0
 800a9d2:	d101      	bne.n	800a9d8 <HAL_TIM_Encoder_Init+0x14>
 800a9d4:	2301      	movs	r3, #1
 800a9d6:	e097      	b.n	800ab08 <HAL_TIM_Encoder_Init+0x144>
 800a9d8:	687b      	ldr	r3, [r7, #4]
 800a9da:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a9de:	b2db      	uxtb	r3, r3
 800a9e0:	2b00      	cmp	r3, #0
 800a9e2:	d106      	bne.n	800a9f2 <HAL_TIM_Encoder_Init+0x2e>
 800a9e4:	687b      	ldr	r3, [r7, #4]
 800a9e6:	2200      	movs	r2, #0
 800a9e8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a9ec:	6878      	ldr	r0, [r7, #4]
 800a9ee:	f7fc fb31 	bl	8007054 <HAL_TIM_Encoder_MspInit>
 800a9f2:	687b      	ldr	r3, [r7, #4]
 800a9f4:	2202      	movs	r2, #2
 800a9f6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a9fa:	687b      	ldr	r3, [r7, #4]
 800a9fc:	681b      	ldr	r3, [r3, #0]
 800a9fe:	689b      	ldr	r3, [r3, #8]
 800aa00:	687a      	ldr	r2, [r7, #4]
 800aa02:	6812      	ldr	r2, [r2, #0]
 800aa04:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800aa08:	f023 0307 	bic.w	r3, r3, #7
 800aa0c:	6093      	str	r3, [r2, #8]
 800aa0e:	687b      	ldr	r3, [r7, #4]
 800aa10:	681a      	ldr	r2, [r3, #0]
 800aa12:	687b      	ldr	r3, [r7, #4]
 800aa14:	3304      	adds	r3, #4
 800aa16:	4619      	mov	r1, r3
 800aa18:	4610      	mov	r0, r2
 800aa1a:	f000 fd5b 	bl	800b4d4 <TIM_Base_SetConfig>
 800aa1e:	687b      	ldr	r3, [r7, #4]
 800aa20:	681b      	ldr	r3, [r3, #0]
 800aa22:	689b      	ldr	r3, [r3, #8]
 800aa24:	617b      	str	r3, [r7, #20]
 800aa26:	687b      	ldr	r3, [r7, #4]
 800aa28:	681b      	ldr	r3, [r3, #0]
 800aa2a:	699b      	ldr	r3, [r3, #24]
 800aa2c:	613b      	str	r3, [r7, #16]
 800aa2e:	687b      	ldr	r3, [r7, #4]
 800aa30:	681b      	ldr	r3, [r3, #0]
 800aa32:	6a1b      	ldr	r3, [r3, #32]
 800aa34:	60fb      	str	r3, [r7, #12]
 800aa36:	683b      	ldr	r3, [r7, #0]
 800aa38:	681b      	ldr	r3, [r3, #0]
 800aa3a:	697a      	ldr	r2, [r7, #20]
 800aa3c:	4313      	orrs	r3, r2
 800aa3e:	617b      	str	r3, [r7, #20]
 800aa40:	693b      	ldr	r3, [r7, #16]
 800aa42:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800aa46:	f023 0303 	bic.w	r3, r3, #3
 800aa4a:	613b      	str	r3, [r7, #16]
 800aa4c:	683b      	ldr	r3, [r7, #0]
 800aa4e:	689a      	ldr	r2, [r3, #8]
 800aa50:	683b      	ldr	r3, [r7, #0]
 800aa52:	699b      	ldr	r3, [r3, #24]
 800aa54:	021b      	lsls	r3, r3, #8
 800aa56:	4313      	orrs	r3, r2
 800aa58:	693a      	ldr	r2, [r7, #16]
 800aa5a:	4313      	orrs	r3, r2
 800aa5c:	613b      	str	r3, [r7, #16]
 800aa5e:	693b      	ldr	r3, [r7, #16]
 800aa60:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 800aa64:	f023 030c 	bic.w	r3, r3, #12
 800aa68:	613b      	str	r3, [r7, #16]
 800aa6a:	693b      	ldr	r3, [r7, #16]
 800aa6c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800aa70:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800aa74:	613b      	str	r3, [r7, #16]
 800aa76:	683b      	ldr	r3, [r7, #0]
 800aa78:	68da      	ldr	r2, [r3, #12]
 800aa7a:	683b      	ldr	r3, [r7, #0]
 800aa7c:	69db      	ldr	r3, [r3, #28]
 800aa7e:	021b      	lsls	r3, r3, #8
 800aa80:	4313      	orrs	r3, r2
 800aa82:	693a      	ldr	r2, [r7, #16]
 800aa84:	4313      	orrs	r3, r2
 800aa86:	613b      	str	r3, [r7, #16]
 800aa88:	683b      	ldr	r3, [r7, #0]
 800aa8a:	691b      	ldr	r3, [r3, #16]
 800aa8c:	011a      	lsls	r2, r3, #4
 800aa8e:	683b      	ldr	r3, [r7, #0]
 800aa90:	6a1b      	ldr	r3, [r3, #32]
 800aa92:	031b      	lsls	r3, r3, #12
 800aa94:	4313      	orrs	r3, r2
 800aa96:	693a      	ldr	r2, [r7, #16]
 800aa98:	4313      	orrs	r3, r2
 800aa9a:	613b      	str	r3, [r7, #16]
 800aa9c:	68fb      	ldr	r3, [r7, #12]
 800aa9e:	f023 0322 	bic.w	r3, r3, #34	; 0x22
 800aaa2:	60fb      	str	r3, [r7, #12]
 800aaa4:	68fb      	ldr	r3, [r7, #12]
 800aaa6:	f023 0388 	bic.w	r3, r3, #136	; 0x88
 800aaaa:	60fb      	str	r3, [r7, #12]
 800aaac:	683b      	ldr	r3, [r7, #0]
 800aaae:	685a      	ldr	r2, [r3, #4]
 800aab0:	683b      	ldr	r3, [r7, #0]
 800aab2:	695b      	ldr	r3, [r3, #20]
 800aab4:	011b      	lsls	r3, r3, #4
 800aab6:	4313      	orrs	r3, r2
 800aab8:	68fa      	ldr	r2, [r7, #12]
 800aaba:	4313      	orrs	r3, r2
 800aabc:	60fb      	str	r3, [r7, #12]
 800aabe:	687b      	ldr	r3, [r7, #4]
 800aac0:	681b      	ldr	r3, [r3, #0]
 800aac2:	697a      	ldr	r2, [r7, #20]
 800aac4:	609a      	str	r2, [r3, #8]
 800aac6:	687b      	ldr	r3, [r7, #4]
 800aac8:	681b      	ldr	r3, [r3, #0]
 800aaca:	693a      	ldr	r2, [r7, #16]
 800aacc:	619a      	str	r2, [r3, #24]
 800aace:	687b      	ldr	r3, [r7, #4]
 800aad0:	681b      	ldr	r3, [r3, #0]
 800aad2:	68fa      	ldr	r2, [r7, #12]
 800aad4:	621a      	str	r2, [r3, #32]
 800aad6:	687b      	ldr	r3, [r7, #4]
 800aad8:	2201      	movs	r2, #1
 800aada:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800aade:	687b      	ldr	r3, [r7, #4]
 800aae0:	2201      	movs	r2, #1
 800aae2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800aae6:	687b      	ldr	r3, [r7, #4]
 800aae8:	2201      	movs	r2, #1
 800aaea:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800aaee:	687b      	ldr	r3, [r7, #4]
 800aaf0:	2201      	movs	r2, #1
 800aaf2:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800aaf6:	687b      	ldr	r3, [r7, #4]
 800aaf8:	2201      	movs	r2, #1
 800aafa:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800aafe:	687b      	ldr	r3, [r7, #4]
 800ab00:	2201      	movs	r2, #1
 800ab02:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800ab06:	2300      	movs	r3, #0
 800ab08:	4618      	mov	r0, r3
 800ab0a:	3718      	adds	r7, #24
 800ab0c:	46bd      	mov	sp, r7
 800ab0e:	bd80      	pop	{r7, pc}

0800ab10 <HAL_TIM_Encoder_Start>:
 800ab10:	b580      	push	{r7, lr}
 800ab12:	b084      	sub	sp, #16
 800ab14:	af00      	add	r7, sp, #0
 800ab16:	6078      	str	r0, [r7, #4]
 800ab18:	6039      	str	r1, [r7, #0]
 800ab1a:	687b      	ldr	r3, [r7, #4]
 800ab1c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800ab20:	73fb      	strb	r3, [r7, #15]
 800ab22:	687b      	ldr	r3, [r7, #4]
 800ab24:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800ab28:	73bb      	strb	r3, [r7, #14]
 800ab2a:	687b      	ldr	r3, [r7, #4]
 800ab2c:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800ab30:	737b      	strb	r3, [r7, #13]
 800ab32:	687b      	ldr	r3, [r7, #4]
 800ab34:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 800ab38:	733b      	strb	r3, [r7, #12]
 800ab3a:	683b      	ldr	r3, [r7, #0]
 800ab3c:	2b00      	cmp	r3, #0
 800ab3e:	d110      	bne.n	800ab62 <HAL_TIM_Encoder_Start+0x52>
 800ab40:	7bfb      	ldrb	r3, [r7, #15]
 800ab42:	2b01      	cmp	r3, #1
 800ab44:	d102      	bne.n	800ab4c <HAL_TIM_Encoder_Start+0x3c>
 800ab46:	7b7b      	ldrb	r3, [r7, #13]
 800ab48:	2b01      	cmp	r3, #1
 800ab4a:	d001      	beq.n	800ab50 <HAL_TIM_Encoder_Start+0x40>
 800ab4c:	2301      	movs	r3, #1
 800ab4e:	e069      	b.n	800ac24 <HAL_TIM_Encoder_Start+0x114>
 800ab50:	687b      	ldr	r3, [r7, #4]
 800ab52:	2202      	movs	r2, #2
 800ab54:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800ab58:	687b      	ldr	r3, [r7, #4]
 800ab5a:	2202      	movs	r2, #2
 800ab5c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800ab60:	e031      	b.n	800abc6 <HAL_TIM_Encoder_Start+0xb6>
 800ab62:	683b      	ldr	r3, [r7, #0]
 800ab64:	2b04      	cmp	r3, #4
 800ab66:	d110      	bne.n	800ab8a <HAL_TIM_Encoder_Start+0x7a>
 800ab68:	7bbb      	ldrb	r3, [r7, #14]
 800ab6a:	2b01      	cmp	r3, #1
 800ab6c:	d102      	bne.n	800ab74 <HAL_TIM_Encoder_Start+0x64>
 800ab6e:	7b3b      	ldrb	r3, [r7, #12]
 800ab70:	2b01      	cmp	r3, #1
 800ab72:	d001      	beq.n	800ab78 <HAL_TIM_Encoder_Start+0x68>
 800ab74:	2301      	movs	r3, #1
 800ab76:	e055      	b.n	800ac24 <HAL_TIM_Encoder_Start+0x114>
 800ab78:	687b      	ldr	r3, [r7, #4]
 800ab7a:	2202      	movs	r2, #2
 800ab7c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800ab80:	687b      	ldr	r3, [r7, #4]
 800ab82:	2202      	movs	r2, #2
 800ab84:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800ab88:	e01d      	b.n	800abc6 <HAL_TIM_Encoder_Start+0xb6>
 800ab8a:	7bfb      	ldrb	r3, [r7, #15]
 800ab8c:	2b01      	cmp	r3, #1
 800ab8e:	d108      	bne.n	800aba2 <HAL_TIM_Encoder_Start+0x92>
 800ab90:	7bbb      	ldrb	r3, [r7, #14]
 800ab92:	2b01      	cmp	r3, #1
 800ab94:	d105      	bne.n	800aba2 <HAL_TIM_Encoder_Start+0x92>
 800ab96:	7b7b      	ldrb	r3, [r7, #13]
 800ab98:	2b01      	cmp	r3, #1
 800ab9a:	d102      	bne.n	800aba2 <HAL_TIM_Encoder_Start+0x92>
 800ab9c:	7b3b      	ldrb	r3, [r7, #12]
 800ab9e:	2b01      	cmp	r3, #1
 800aba0:	d001      	beq.n	800aba6 <HAL_TIM_Encoder_Start+0x96>
 800aba2:	2301      	movs	r3, #1
 800aba4:	e03e      	b.n	800ac24 <HAL_TIM_Encoder_Start+0x114>
 800aba6:	687b      	ldr	r3, [r7, #4]
 800aba8:	2202      	movs	r2, #2
 800abaa:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800abae:	687b      	ldr	r3, [r7, #4]
 800abb0:	2202      	movs	r2, #2
 800abb2:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800abb6:	687b      	ldr	r3, [r7, #4]
 800abb8:	2202      	movs	r2, #2
 800abba:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800abbe:	687b      	ldr	r3, [r7, #4]
 800abc0:	2202      	movs	r2, #2
 800abc2:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800abc6:	683b      	ldr	r3, [r7, #0]
 800abc8:	2b00      	cmp	r3, #0
 800abca:	d003      	beq.n	800abd4 <HAL_TIM_Encoder_Start+0xc4>
 800abcc:	683b      	ldr	r3, [r7, #0]
 800abce:	2b04      	cmp	r3, #4
 800abd0:	d008      	beq.n	800abe4 <HAL_TIM_Encoder_Start+0xd4>
 800abd2:	e00f      	b.n	800abf4 <HAL_TIM_Encoder_Start+0xe4>
 800abd4:	687b      	ldr	r3, [r7, #4]
 800abd6:	681b      	ldr	r3, [r3, #0]
 800abd8:	2201      	movs	r2, #1
 800abda:	2100      	movs	r1, #0
 800abdc:	4618      	mov	r0, r3
 800abde:	f001 f88d 	bl	800bcfc <TIM_CCxChannelCmd>
 800abe2:	e016      	b.n	800ac12 <HAL_TIM_Encoder_Start+0x102>
 800abe4:	687b      	ldr	r3, [r7, #4]
 800abe6:	681b      	ldr	r3, [r3, #0]
 800abe8:	2201      	movs	r2, #1
 800abea:	2104      	movs	r1, #4
 800abec:	4618      	mov	r0, r3
 800abee:	f001 f885 	bl	800bcfc <TIM_CCxChannelCmd>
 800abf2:	e00e      	b.n	800ac12 <HAL_TIM_Encoder_Start+0x102>
 800abf4:	687b      	ldr	r3, [r7, #4]
 800abf6:	681b      	ldr	r3, [r3, #0]
 800abf8:	2201      	movs	r2, #1
 800abfa:	2100      	movs	r1, #0
 800abfc:	4618      	mov	r0, r3
 800abfe:	f001 f87d 	bl	800bcfc <TIM_CCxChannelCmd>
 800ac02:	687b      	ldr	r3, [r7, #4]
 800ac04:	681b      	ldr	r3, [r3, #0]
 800ac06:	2201      	movs	r2, #1
 800ac08:	2104      	movs	r1, #4
 800ac0a:	4618      	mov	r0, r3
 800ac0c:	f001 f876 	bl	800bcfc <TIM_CCxChannelCmd>
 800ac10:	bf00      	nop
 800ac12:	687b      	ldr	r3, [r7, #4]
 800ac14:	681b      	ldr	r3, [r3, #0]
 800ac16:	681a      	ldr	r2, [r3, #0]
 800ac18:	687b      	ldr	r3, [r7, #4]
 800ac1a:	681b      	ldr	r3, [r3, #0]
 800ac1c:	f042 0201 	orr.w	r2, r2, #1
 800ac20:	601a      	str	r2, [r3, #0]
 800ac22:	2300      	movs	r3, #0
 800ac24:	4618      	mov	r0, r3
 800ac26:	3710      	adds	r7, #16
 800ac28:	46bd      	mov	sp, r7
 800ac2a:	bd80      	pop	{r7, pc}

0800ac2c <HAL_TIM_IRQHandler>:
 800ac2c:	b580      	push	{r7, lr}
 800ac2e:	b082      	sub	sp, #8
 800ac30:	af00      	add	r7, sp, #0
 800ac32:	6078      	str	r0, [r7, #4]
 800ac34:	687b      	ldr	r3, [r7, #4]
 800ac36:	681b      	ldr	r3, [r3, #0]
 800ac38:	691b      	ldr	r3, [r3, #16]
 800ac3a:	f003 0302 	and.w	r3, r3, #2
 800ac3e:	2b02      	cmp	r3, #2
 800ac40:	d122      	bne.n	800ac88 <HAL_TIM_IRQHandler+0x5c>
 800ac42:	687b      	ldr	r3, [r7, #4]
 800ac44:	681b      	ldr	r3, [r3, #0]
 800ac46:	68db      	ldr	r3, [r3, #12]
 800ac48:	f003 0302 	and.w	r3, r3, #2
 800ac4c:	2b02      	cmp	r3, #2
 800ac4e:	d11b      	bne.n	800ac88 <HAL_TIM_IRQHandler+0x5c>
 800ac50:	687b      	ldr	r3, [r7, #4]
 800ac52:	681b      	ldr	r3, [r3, #0]
 800ac54:	f06f 0202 	mvn.w	r2, #2
 800ac58:	611a      	str	r2, [r3, #16]
 800ac5a:	687b      	ldr	r3, [r7, #4]
 800ac5c:	2201      	movs	r2, #1
 800ac5e:	771a      	strb	r2, [r3, #28]
 800ac60:	687b      	ldr	r3, [r7, #4]
 800ac62:	681b      	ldr	r3, [r3, #0]
 800ac64:	699b      	ldr	r3, [r3, #24]
 800ac66:	f003 0303 	and.w	r3, r3, #3
 800ac6a:	2b00      	cmp	r3, #0
 800ac6c:	d003      	beq.n	800ac76 <HAL_TIM_IRQHandler+0x4a>
 800ac6e:	6878      	ldr	r0, [r7, #4]
 800ac70:	f000 fb1d 	bl	800b2ae <HAL_TIM_IC_CaptureCallback>
 800ac74:	e005      	b.n	800ac82 <HAL_TIM_IRQHandler+0x56>
 800ac76:	6878      	ldr	r0, [r7, #4]
 800ac78:	f000 fb0f 	bl	800b29a <HAL_TIM_OC_DelayElapsedCallback>
 800ac7c:	6878      	ldr	r0, [r7, #4]
 800ac7e:	f000 fb2a 	bl	800b2d6 <HAL_TIM_PWM_PulseFinishedCallback>
 800ac82:	687b      	ldr	r3, [r7, #4]
 800ac84:	2200      	movs	r2, #0
 800ac86:	771a      	strb	r2, [r3, #28]
 800ac88:	687b      	ldr	r3, [r7, #4]
 800ac8a:	681b      	ldr	r3, [r3, #0]
 800ac8c:	691b      	ldr	r3, [r3, #16]
 800ac8e:	f003 0304 	and.w	r3, r3, #4
 800ac92:	2b04      	cmp	r3, #4
 800ac94:	d122      	bne.n	800acdc <HAL_TIM_IRQHandler+0xb0>
 800ac96:	687b      	ldr	r3, [r7, #4]
 800ac98:	681b      	ldr	r3, [r3, #0]
 800ac9a:	68db      	ldr	r3, [r3, #12]
 800ac9c:	f003 0304 	and.w	r3, r3, #4
 800aca0:	2b04      	cmp	r3, #4
 800aca2:	d11b      	bne.n	800acdc <HAL_TIM_IRQHandler+0xb0>
 800aca4:	687b      	ldr	r3, [r7, #4]
 800aca6:	681b      	ldr	r3, [r3, #0]
 800aca8:	f06f 0204 	mvn.w	r2, #4
 800acac:	611a      	str	r2, [r3, #16]
 800acae:	687b      	ldr	r3, [r7, #4]
 800acb0:	2202      	movs	r2, #2
 800acb2:	771a      	strb	r2, [r3, #28]
 800acb4:	687b      	ldr	r3, [r7, #4]
 800acb6:	681b      	ldr	r3, [r3, #0]
 800acb8:	699b      	ldr	r3, [r3, #24]
 800acba:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800acbe:	2b00      	cmp	r3, #0
 800acc0:	d003      	beq.n	800acca <HAL_TIM_IRQHandler+0x9e>
 800acc2:	6878      	ldr	r0, [r7, #4]
 800acc4:	f000 faf3 	bl	800b2ae <HAL_TIM_IC_CaptureCallback>
 800acc8:	e005      	b.n	800acd6 <HAL_TIM_IRQHandler+0xaa>
 800acca:	6878      	ldr	r0, [r7, #4]
 800accc:	f000 fae5 	bl	800b29a <HAL_TIM_OC_DelayElapsedCallback>
 800acd0:	6878      	ldr	r0, [r7, #4]
 800acd2:	f000 fb00 	bl	800b2d6 <HAL_TIM_PWM_PulseFinishedCallback>
 800acd6:	687b      	ldr	r3, [r7, #4]
 800acd8:	2200      	movs	r2, #0
 800acda:	771a      	strb	r2, [r3, #28]
 800acdc:	687b      	ldr	r3, [r7, #4]
 800acde:	681b      	ldr	r3, [r3, #0]
 800ace0:	691b      	ldr	r3, [r3, #16]
 800ace2:	f003 0308 	and.w	r3, r3, #8
 800ace6:	2b08      	cmp	r3, #8
 800ace8:	d122      	bne.n	800ad30 <HAL_TIM_IRQHandler+0x104>
 800acea:	687b      	ldr	r3, [r7, #4]
 800acec:	681b      	ldr	r3, [r3, #0]
 800acee:	68db      	ldr	r3, [r3, #12]
 800acf0:	f003 0308 	and.w	r3, r3, #8
 800acf4:	2b08      	cmp	r3, #8
 800acf6:	d11b      	bne.n	800ad30 <HAL_TIM_IRQHandler+0x104>
 800acf8:	687b      	ldr	r3, [r7, #4]
 800acfa:	681b      	ldr	r3, [r3, #0]
 800acfc:	f06f 0208 	mvn.w	r2, #8
 800ad00:	611a      	str	r2, [r3, #16]
 800ad02:	687b      	ldr	r3, [r7, #4]
 800ad04:	2204      	movs	r2, #4
 800ad06:	771a      	strb	r2, [r3, #28]
 800ad08:	687b      	ldr	r3, [r7, #4]
 800ad0a:	681b      	ldr	r3, [r3, #0]
 800ad0c:	69db      	ldr	r3, [r3, #28]
 800ad0e:	f003 0303 	and.w	r3, r3, #3
 800ad12:	2b00      	cmp	r3, #0
 800ad14:	d003      	beq.n	800ad1e <HAL_TIM_IRQHandler+0xf2>
 800ad16:	6878      	ldr	r0, [r7, #4]
 800ad18:	f000 fac9 	bl	800b2ae <HAL_TIM_IC_CaptureCallback>
 800ad1c:	e005      	b.n	800ad2a <HAL_TIM_IRQHandler+0xfe>
 800ad1e:	6878      	ldr	r0, [r7, #4]
 800ad20:	f000 fabb 	bl	800b29a <HAL_TIM_OC_DelayElapsedCallback>
 800ad24:	6878      	ldr	r0, [r7, #4]
 800ad26:	f000 fad6 	bl	800b2d6 <HAL_TIM_PWM_PulseFinishedCallback>
 800ad2a:	687b      	ldr	r3, [r7, #4]
 800ad2c:	2200      	movs	r2, #0
 800ad2e:	771a      	strb	r2, [r3, #28]
 800ad30:	687b      	ldr	r3, [r7, #4]
 800ad32:	681b      	ldr	r3, [r3, #0]
 800ad34:	691b      	ldr	r3, [r3, #16]
 800ad36:	f003 0310 	and.w	r3, r3, #16
 800ad3a:	2b10      	cmp	r3, #16
 800ad3c:	d122      	bne.n	800ad84 <HAL_TIM_IRQHandler+0x158>
 800ad3e:	687b      	ldr	r3, [r7, #4]
 800ad40:	681b      	ldr	r3, [r3, #0]
 800ad42:	68db      	ldr	r3, [r3, #12]
 800ad44:	f003 0310 	and.w	r3, r3, #16
 800ad48:	2b10      	cmp	r3, #16
 800ad4a:	d11b      	bne.n	800ad84 <HAL_TIM_IRQHandler+0x158>
 800ad4c:	687b      	ldr	r3, [r7, #4]
 800ad4e:	681b      	ldr	r3, [r3, #0]
 800ad50:	f06f 0210 	mvn.w	r2, #16
 800ad54:	611a      	str	r2, [r3, #16]
 800ad56:	687b      	ldr	r3, [r7, #4]
 800ad58:	2208      	movs	r2, #8
 800ad5a:	771a      	strb	r2, [r3, #28]
 800ad5c:	687b      	ldr	r3, [r7, #4]
 800ad5e:	681b      	ldr	r3, [r3, #0]
 800ad60:	69db      	ldr	r3, [r3, #28]
 800ad62:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800ad66:	2b00      	cmp	r3, #0
 800ad68:	d003      	beq.n	800ad72 <HAL_TIM_IRQHandler+0x146>
 800ad6a:	6878      	ldr	r0, [r7, #4]
 800ad6c:	f000 fa9f 	bl	800b2ae <HAL_TIM_IC_CaptureCallback>
 800ad70:	e005      	b.n	800ad7e <HAL_TIM_IRQHandler+0x152>
 800ad72:	6878      	ldr	r0, [r7, #4]
 800ad74:	f000 fa91 	bl	800b29a <HAL_TIM_OC_DelayElapsedCallback>
 800ad78:	6878      	ldr	r0, [r7, #4]
 800ad7a:	f000 faac 	bl	800b2d6 <HAL_TIM_PWM_PulseFinishedCallback>
 800ad7e:	687b      	ldr	r3, [r7, #4]
 800ad80:	2200      	movs	r2, #0
 800ad82:	771a      	strb	r2, [r3, #28]
 800ad84:	687b      	ldr	r3, [r7, #4]
 800ad86:	681b      	ldr	r3, [r3, #0]
 800ad88:	691b      	ldr	r3, [r3, #16]
 800ad8a:	f003 0301 	and.w	r3, r3, #1
 800ad8e:	2b01      	cmp	r3, #1
 800ad90:	d10e      	bne.n	800adb0 <HAL_TIM_IRQHandler+0x184>
 800ad92:	687b      	ldr	r3, [r7, #4]
 800ad94:	681b      	ldr	r3, [r3, #0]
 800ad96:	68db      	ldr	r3, [r3, #12]
 800ad98:	f003 0301 	and.w	r3, r3, #1
 800ad9c:	2b01      	cmp	r3, #1
 800ad9e:	d107      	bne.n	800adb0 <HAL_TIM_IRQHandler+0x184>
 800ada0:	687b      	ldr	r3, [r7, #4]
 800ada2:	681b      	ldr	r3, [r3, #0]
 800ada4:	f06f 0201 	mvn.w	r2, #1
 800ada8:	611a      	str	r2, [r3, #16]
 800adaa:	6878      	ldr	r0, [r7, #4]
 800adac:	f000 fa6b 	bl	800b286 <HAL_TIM_PeriodElapsedCallback>
 800adb0:	687b      	ldr	r3, [r7, #4]
 800adb2:	681b      	ldr	r3, [r3, #0]
 800adb4:	691b      	ldr	r3, [r3, #16]
 800adb6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800adba:	2b80      	cmp	r3, #128	; 0x80
 800adbc:	d10e      	bne.n	800addc <HAL_TIM_IRQHandler+0x1b0>
 800adbe:	687b      	ldr	r3, [r7, #4]
 800adc0:	681b      	ldr	r3, [r3, #0]
 800adc2:	68db      	ldr	r3, [r3, #12]
 800adc4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800adc8:	2b80      	cmp	r3, #128	; 0x80
 800adca:	d107      	bne.n	800addc <HAL_TIM_IRQHandler+0x1b0>
 800adcc:	687b      	ldr	r3, [r7, #4]
 800adce:	681b      	ldr	r3, [r3, #0]
 800add0:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800add4:	611a      	str	r2, [r3, #16]
 800add6:	6878      	ldr	r0, [r7, #4]
 800add8:	f001 f88e 	bl	800bef8 <HAL_TIMEx_BreakCallback>
 800addc:	687b      	ldr	r3, [r7, #4]
 800adde:	681b      	ldr	r3, [r3, #0]
 800ade0:	691b      	ldr	r3, [r3, #16]
 800ade2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ade6:	2b40      	cmp	r3, #64	; 0x40
 800ade8:	d10e      	bne.n	800ae08 <HAL_TIM_IRQHandler+0x1dc>
 800adea:	687b      	ldr	r3, [r7, #4]
 800adec:	681b      	ldr	r3, [r3, #0]
 800adee:	68db      	ldr	r3, [r3, #12]
 800adf0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800adf4:	2b40      	cmp	r3, #64	; 0x40
 800adf6:	d107      	bne.n	800ae08 <HAL_TIM_IRQHandler+0x1dc>
 800adf8:	687b      	ldr	r3, [r7, #4]
 800adfa:	681b      	ldr	r3, [r3, #0]
 800adfc:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800ae00:	611a      	str	r2, [r3, #16]
 800ae02:	6878      	ldr	r0, [r7, #4]
 800ae04:	f000 fa71 	bl	800b2ea <HAL_TIM_TriggerCallback>
 800ae08:	687b      	ldr	r3, [r7, #4]
 800ae0a:	681b      	ldr	r3, [r3, #0]
 800ae0c:	691b      	ldr	r3, [r3, #16]
 800ae0e:	f003 0320 	and.w	r3, r3, #32
 800ae12:	2b20      	cmp	r3, #32
 800ae14:	d10e      	bne.n	800ae34 <HAL_TIM_IRQHandler+0x208>
 800ae16:	687b      	ldr	r3, [r7, #4]
 800ae18:	681b      	ldr	r3, [r3, #0]
 800ae1a:	68db      	ldr	r3, [r3, #12]
 800ae1c:	f003 0320 	and.w	r3, r3, #32
 800ae20:	2b20      	cmp	r3, #32
 800ae22:	d107      	bne.n	800ae34 <HAL_TIM_IRQHandler+0x208>
 800ae24:	687b      	ldr	r3, [r7, #4]
 800ae26:	681b      	ldr	r3, [r3, #0]
 800ae28:	f06f 0220 	mvn.w	r2, #32
 800ae2c:	611a      	str	r2, [r3, #16]
 800ae2e:	6878      	ldr	r0, [r7, #4]
 800ae30:	f001 f858 	bl	800bee4 <HAL_TIMEx_CommutCallback>
 800ae34:	bf00      	nop
 800ae36:	3708      	adds	r7, #8
 800ae38:	46bd      	mov	sp, r7
 800ae3a:	bd80      	pop	{r7, pc}

0800ae3c <HAL_TIM_IC_ConfigChannel>:
 800ae3c:	b580      	push	{r7, lr}
 800ae3e:	b086      	sub	sp, #24
 800ae40:	af00      	add	r7, sp, #0
 800ae42:	60f8      	str	r0, [r7, #12]
 800ae44:	60b9      	str	r1, [r7, #8]
 800ae46:	607a      	str	r2, [r7, #4]
 800ae48:	2300      	movs	r3, #0
 800ae4a:	75fb      	strb	r3, [r7, #23]
 800ae4c:	68fb      	ldr	r3, [r7, #12]
 800ae4e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800ae52:	2b01      	cmp	r3, #1
 800ae54:	d101      	bne.n	800ae5a <HAL_TIM_IC_ConfigChannel+0x1e>
 800ae56:	2302      	movs	r3, #2
 800ae58:	e088      	b.n	800af6c <HAL_TIM_IC_ConfigChannel+0x130>
 800ae5a:	68fb      	ldr	r3, [r7, #12]
 800ae5c:	2201      	movs	r2, #1
 800ae5e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ae62:	687b      	ldr	r3, [r7, #4]
 800ae64:	2b00      	cmp	r3, #0
 800ae66:	d11b      	bne.n	800aea0 <HAL_TIM_IC_ConfigChannel+0x64>
 800ae68:	68fb      	ldr	r3, [r7, #12]
 800ae6a:	6818      	ldr	r0, [r3, #0]
 800ae6c:	68bb      	ldr	r3, [r7, #8]
 800ae6e:	6819      	ldr	r1, [r3, #0]
 800ae70:	68bb      	ldr	r3, [r7, #8]
 800ae72:	685a      	ldr	r2, [r3, #4]
 800ae74:	68bb      	ldr	r3, [r7, #8]
 800ae76:	68db      	ldr	r3, [r3, #12]
 800ae78:	f000 fd7c 	bl	800b974 <TIM_TI1_SetConfig>
 800ae7c:	68fb      	ldr	r3, [r7, #12]
 800ae7e:	681b      	ldr	r3, [r3, #0]
 800ae80:	699a      	ldr	r2, [r3, #24]
 800ae82:	68fb      	ldr	r3, [r7, #12]
 800ae84:	681b      	ldr	r3, [r3, #0]
 800ae86:	f022 020c 	bic.w	r2, r2, #12
 800ae8a:	619a      	str	r2, [r3, #24]
 800ae8c:	68fb      	ldr	r3, [r7, #12]
 800ae8e:	681b      	ldr	r3, [r3, #0]
 800ae90:	6999      	ldr	r1, [r3, #24]
 800ae92:	68bb      	ldr	r3, [r7, #8]
 800ae94:	689a      	ldr	r2, [r3, #8]
 800ae96:	68fb      	ldr	r3, [r7, #12]
 800ae98:	681b      	ldr	r3, [r3, #0]
 800ae9a:	430a      	orrs	r2, r1
 800ae9c:	619a      	str	r2, [r3, #24]
 800ae9e:	e060      	b.n	800af62 <HAL_TIM_IC_ConfigChannel+0x126>
 800aea0:	687b      	ldr	r3, [r7, #4]
 800aea2:	2b04      	cmp	r3, #4
 800aea4:	d11c      	bne.n	800aee0 <HAL_TIM_IC_ConfigChannel+0xa4>
 800aea6:	68fb      	ldr	r3, [r7, #12]
 800aea8:	6818      	ldr	r0, [r3, #0]
 800aeaa:	68bb      	ldr	r3, [r7, #8]
 800aeac:	6819      	ldr	r1, [r3, #0]
 800aeae:	68bb      	ldr	r3, [r7, #8]
 800aeb0:	685a      	ldr	r2, [r3, #4]
 800aeb2:	68bb      	ldr	r3, [r7, #8]
 800aeb4:	68db      	ldr	r3, [r3, #12]
 800aeb6:	f000 fe00 	bl	800baba <TIM_TI2_SetConfig>
 800aeba:	68fb      	ldr	r3, [r7, #12]
 800aebc:	681b      	ldr	r3, [r3, #0]
 800aebe:	699a      	ldr	r2, [r3, #24]
 800aec0:	68fb      	ldr	r3, [r7, #12]
 800aec2:	681b      	ldr	r3, [r3, #0]
 800aec4:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 800aec8:	619a      	str	r2, [r3, #24]
 800aeca:	68fb      	ldr	r3, [r7, #12]
 800aecc:	681b      	ldr	r3, [r3, #0]
 800aece:	6999      	ldr	r1, [r3, #24]
 800aed0:	68bb      	ldr	r3, [r7, #8]
 800aed2:	689b      	ldr	r3, [r3, #8]
 800aed4:	021a      	lsls	r2, r3, #8
 800aed6:	68fb      	ldr	r3, [r7, #12]
 800aed8:	681b      	ldr	r3, [r3, #0]
 800aeda:	430a      	orrs	r2, r1
 800aedc:	619a      	str	r2, [r3, #24]
 800aede:	e040      	b.n	800af62 <HAL_TIM_IC_ConfigChannel+0x126>
 800aee0:	687b      	ldr	r3, [r7, #4]
 800aee2:	2b08      	cmp	r3, #8
 800aee4:	d11b      	bne.n	800af1e <HAL_TIM_IC_ConfigChannel+0xe2>
 800aee6:	68fb      	ldr	r3, [r7, #12]
 800aee8:	6818      	ldr	r0, [r3, #0]
 800aeea:	68bb      	ldr	r3, [r7, #8]
 800aeec:	6819      	ldr	r1, [r3, #0]
 800aeee:	68bb      	ldr	r3, [r7, #8]
 800aef0:	685a      	ldr	r2, [r3, #4]
 800aef2:	68bb      	ldr	r3, [r7, #8]
 800aef4:	68db      	ldr	r3, [r3, #12]
 800aef6:	f000 fe4d 	bl	800bb94 <TIM_TI3_SetConfig>
 800aefa:	68fb      	ldr	r3, [r7, #12]
 800aefc:	681b      	ldr	r3, [r3, #0]
 800aefe:	69da      	ldr	r2, [r3, #28]
 800af00:	68fb      	ldr	r3, [r7, #12]
 800af02:	681b      	ldr	r3, [r3, #0]
 800af04:	f022 020c 	bic.w	r2, r2, #12
 800af08:	61da      	str	r2, [r3, #28]
 800af0a:	68fb      	ldr	r3, [r7, #12]
 800af0c:	681b      	ldr	r3, [r3, #0]
 800af0e:	69d9      	ldr	r1, [r3, #28]
 800af10:	68bb      	ldr	r3, [r7, #8]
 800af12:	689a      	ldr	r2, [r3, #8]
 800af14:	68fb      	ldr	r3, [r7, #12]
 800af16:	681b      	ldr	r3, [r3, #0]
 800af18:	430a      	orrs	r2, r1
 800af1a:	61da      	str	r2, [r3, #28]
 800af1c:	e021      	b.n	800af62 <HAL_TIM_IC_ConfigChannel+0x126>
 800af1e:	687b      	ldr	r3, [r7, #4]
 800af20:	2b0c      	cmp	r3, #12
 800af22:	d11c      	bne.n	800af5e <HAL_TIM_IC_ConfigChannel+0x122>
 800af24:	68fb      	ldr	r3, [r7, #12]
 800af26:	6818      	ldr	r0, [r3, #0]
 800af28:	68bb      	ldr	r3, [r7, #8]
 800af2a:	6819      	ldr	r1, [r3, #0]
 800af2c:	68bb      	ldr	r3, [r7, #8]
 800af2e:	685a      	ldr	r2, [r3, #4]
 800af30:	68bb      	ldr	r3, [r7, #8]
 800af32:	68db      	ldr	r3, [r3, #12]
 800af34:	f000 fe6a 	bl	800bc0c <TIM_TI4_SetConfig>
 800af38:	68fb      	ldr	r3, [r7, #12]
 800af3a:	681b      	ldr	r3, [r3, #0]
 800af3c:	69da      	ldr	r2, [r3, #28]
 800af3e:	68fb      	ldr	r3, [r7, #12]
 800af40:	681b      	ldr	r3, [r3, #0]
 800af42:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 800af46:	61da      	str	r2, [r3, #28]
 800af48:	68fb      	ldr	r3, [r7, #12]
 800af4a:	681b      	ldr	r3, [r3, #0]
 800af4c:	69d9      	ldr	r1, [r3, #28]
 800af4e:	68bb      	ldr	r3, [r7, #8]
 800af50:	689b      	ldr	r3, [r3, #8]
 800af52:	021a      	lsls	r2, r3, #8
 800af54:	68fb      	ldr	r3, [r7, #12]
 800af56:	681b      	ldr	r3, [r3, #0]
 800af58:	430a      	orrs	r2, r1
 800af5a:	61da      	str	r2, [r3, #28]
 800af5c:	e001      	b.n	800af62 <HAL_TIM_IC_ConfigChannel+0x126>
 800af5e:	2301      	movs	r3, #1
 800af60:	75fb      	strb	r3, [r7, #23]
 800af62:	68fb      	ldr	r3, [r7, #12]
 800af64:	2200      	movs	r2, #0
 800af66:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800af6a:	7dfb      	ldrb	r3, [r7, #23]
 800af6c:	4618      	mov	r0, r3
 800af6e:	3718      	adds	r7, #24
 800af70:	46bd      	mov	sp, r7
 800af72:	bd80      	pop	{r7, pc}

0800af74 <HAL_TIM_PWM_ConfigChannel>:
 800af74:	b580      	push	{r7, lr}
 800af76:	b086      	sub	sp, #24
 800af78:	af00      	add	r7, sp, #0
 800af7a:	60f8      	str	r0, [r7, #12]
 800af7c:	60b9      	str	r1, [r7, #8]
 800af7e:	607a      	str	r2, [r7, #4]
 800af80:	2300      	movs	r3, #0
 800af82:	75fb      	strb	r3, [r7, #23]
 800af84:	68fb      	ldr	r3, [r7, #12]
 800af86:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800af8a:	2b01      	cmp	r3, #1
 800af8c:	d101      	bne.n	800af92 <HAL_TIM_PWM_ConfigChannel+0x1e>
 800af8e:	2302      	movs	r3, #2
 800af90:	e0ae      	b.n	800b0f0 <HAL_TIM_PWM_ConfigChannel+0x17c>
 800af92:	68fb      	ldr	r3, [r7, #12]
 800af94:	2201      	movs	r2, #1
 800af96:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800af9a:	687b      	ldr	r3, [r7, #4]
 800af9c:	2b0c      	cmp	r3, #12
 800af9e:	f200 809f 	bhi.w	800b0e0 <HAL_TIM_PWM_ConfigChannel+0x16c>
 800afa2:	a201      	add	r2, pc, #4	; (adr r2, 800afa8 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800afa4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800afa8:	0800afdd 	.word	0x0800afdd
 800afac:	0800b0e1 	.word	0x0800b0e1
 800afb0:	0800b0e1 	.word	0x0800b0e1
 800afb4:	0800b0e1 	.word	0x0800b0e1
 800afb8:	0800b01d 	.word	0x0800b01d
 800afbc:	0800b0e1 	.word	0x0800b0e1
 800afc0:	0800b0e1 	.word	0x0800b0e1
 800afc4:	0800b0e1 	.word	0x0800b0e1
 800afc8:	0800b05f 	.word	0x0800b05f
 800afcc:	0800b0e1 	.word	0x0800b0e1
 800afd0:	0800b0e1 	.word	0x0800b0e1
 800afd4:	0800b0e1 	.word	0x0800b0e1
 800afd8:	0800b09f 	.word	0x0800b09f
 800afdc:	68fb      	ldr	r3, [r7, #12]
 800afde:	681b      	ldr	r3, [r3, #0]
 800afe0:	68b9      	ldr	r1, [r7, #8]
 800afe2:	4618      	mov	r0, r3
 800afe4:	f000 fb16 	bl	800b614 <TIM_OC1_SetConfig>
 800afe8:	68fb      	ldr	r3, [r7, #12]
 800afea:	681b      	ldr	r3, [r3, #0]
 800afec:	699a      	ldr	r2, [r3, #24]
 800afee:	68fb      	ldr	r3, [r7, #12]
 800aff0:	681b      	ldr	r3, [r3, #0]
 800aff2:	f042 0208 	orr.w	r2, r2, #8
 800aff6:	619a      	str	r2, [r3, #24]
 800aff8:	68fb      	ldr	r3, [r7, #12]
 800affa:	681b      	ldr	r3, [r3, #0]
 800affc:	699a      	ldr	r2, [r3, #24]
 800affe:	68fb      	ldr	r3, [r7, #12]
 800b000:	681b      	ldr	r3, [r3, #0]
 800b002:	f022 0204 	bic.w	r2, r2, #4
 800b006:	619a      	str	r2, [r3, #24]
 800b008:	68fb      	ldr	r3, [r7, #12]
 800b00a:	681b      	ldr	r3, [r3, #0]
 800b00c:	6999      	ldr	r1, [r3, #24]
 800b00e:	68bb      	ldr	r3, [r7, #8]
 800b010:	691a      	ldr	r2, [r3, #16]
 800b012:	68fb      	ldr	r3, [r7, #12]
 800b014:	681b      	ldr	r3, [r3, #0]
 800b016:	430a      	orrs	r2, r1
 800b018:	619a      	str	r2, [r3, #24]
 800b01a:	e064      	b.n	800b0e6 <HAL_TIM_PWM_ConfigChannel+0x172>
 800b01c:	68fb      	ldr	r3, [r7, #12]
 800b01e:	681b      	ldr	r3, [r3, #0]
 800b020:	68b9      	ldr	r1, [r7, #8]
 800b022:	4618      	mov	r0, r3
 800b024:	f000 fb66 	bl	800b6f4 <TIM_OC2_SetConfig>
 800b028:	68fb      	ldr	r3, [r7, #12]
 800b02a:	681b      	ldr	r3, [r3, #0]
 800b02c:	699a      	ldr	r2, [r3, #24]
 800b02e:	68fb      	ldr	r3, [r7, #12]
 800b030:	681b      	ldr	r3, [r3, #0]
 800b032:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b036:	619a      	str	r2, [r3, #24]
 800b038:	68fb      	ldr	r3, [r7, #12]
 800b03a:	681b      	ldr	r3, [r3, #0]
 800b03c:	699a      	ldr	r2, [r3, #24]
 800b03e:	68fb      	ldr	r3, [r7, #12]
 800b040:	681b      	ldr	r3, [r3, #0]
 800b042:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b046:	619a      	str	r2, [r3, #24]
 800b048:	68fb      	ldr	r3, [r7, #12]
 800b04a:	681b      	ldr	r3, [r3, #0]
 800b04c:	6999      	ldr	r1, [r3, #24]
 800b04e:	68bb      	ldr	r3, [r7, #8]
 800b050:	691b      	ldr	r3, [r3, #16]
 800b052:	021a      	lsls	r2, r3, #8
 800b054:	68fb      	ldr	r3, [r7, #12]
 800b056:	681b      	ldr	r3, [r3, #0]
 800b058:	430a      	orrs	r2, r1
 800b05a:	619a      	str	r2, [r3, #24]
 800b05c:	e043      	b.n	800b0e6 <HAL_TIM_PWM_ConfigChannel+0x172>
 800b05e:	68fb      	ldr	r3, [r7, #12]
 800b060:	681b      	ldr	r3, [r3, #0]
 800b062:	68b9      	ldr	r1, [r7, #8]
 800b064:	4618      	mov	r0, r3
 800b066:	f000 fbbb 	bl	800b7e0 <TIM_OC3_SetConfig>
 800b06a:	68fb      	ldr	r3, [r7, #12]
 800b06c:	681b      	ldr	r3, [r3, #0]
 800b06e:	69da      	ldr	r2, [r3, #28]
 800b070:	68fb      	ldr	r3, [r7, #12]
 800b072:	681b      	ldr	r3, [r3, #0]
 800b074:	f042 0208 	orr.w	r2, r2, #8
 800b078:	61da      	str	r2, [r3, #28]
 800b07a:	68fb      	ldr	r3, [r7, #12]
 800b07c:	681b      	ldr	r3, [r3, #0]
 800b07e:	69da      	ldr	r2, [r3, #28]
 800b080:	68fb      	ldr	r3, [r7, #12]
 800b082:	681b      	ldr	r3, [r3, #0]
 800b084:	f022 0204 	bic.w	r2, r2, #4
 800b088:	61da      	str	r2, [r3, #28]
 800b08a:	68fb      	ldr	r3, [r7, #12]
 800b08c:	681b      	ldr	r3, [r3, #0]
 800b08e:	69d9      	ldr	r1, [r3, #28]
 800b090:	68bb      	ldr	r3, [r7, #8]
 800b092:	691a      	ldr	r2, [r3, #16]
 800b094:	68fb      	ldr	r3, [r7, #12]
 800b096:	681b      	ldr	r3, [r3, #0]
 800b098:	430a      	orrs	r2, r1
 800b09a:	61da      	str	r2, [r3, #28]
 800b09c:	e023      	b.n	800b0e6 <HAL_TIM_PWM_ConfigChannel+0x172>
 800b09e:	68fb      	ldr	r3, [r7, #12]
 800b0a0:	681b      	ldr	r3, [r3, #0]
 800b0a2:	68b9      	ldr	r1, [r7, #8]
 800b0a4:	4618      	mov	r0, r3
 800b0a6:	f000 fc0f 	bl	800b8c8 <TIM_OC4_SetConfig>
 800b0aa:	68fb      	ldr	r3, [r7, #12]
 800b0ac:	681b      	ldr	r3, [r3, #0]
 800b0ae:	69da      	ldr	r2, [r3, #28]
 800b0b0:	68fb      	ldr	r3, [r7, #12]
 800b0b2:	681b      	ldr	r3, [r3, #0]
 800b0b4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b0b8:	61da      	str	r2, [r3, #28]
 800b0ba:	68fb      	ldr	r3, [r7, #12]
 800b0bc:	681b      	ldr	r3, [r3, #0]
 800b0be:	69da      	ldr	r2, [r3, #28]
 800b0c0:	68fb      	ldr	r3, [r7, #12]
 800b0c2:	681b      	ldr	r3, [r3, #0]
 800b0c4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b0c8:	61da      	str	r2, [r3, #28]
 800b0ca:	68fb      	ldr	r3, [r7, #12]
 800b0cc:	681b      	ldr	r3, [r3, #0]
 800b0ce:	69d9      	ldr	r1, [r3, #28]
 800b0d0:	68bb      	ldr	r3, [r7, #8]
 800b0d2:	691b      	ldr	r3, [r3, #16]
 800b0d4:	021a      	lsls	r2, r3, #8
 800b0d6:	68fb      	ldr	r3, [r7, #12]
 800b0d8:	681b      	ldr	r3, [r3, #0]
 800b0da:	430a      	orrs	r2, r1
 800b0dc:	61da      	str	r2, [r3, #28]
 800b0de:	e002      	b.n	800b0e6 <HAL_TIM_PWM_ConfigChannel+0x172>
 800b0e0:	2301      	movs	r3, #1
 800b0e2:	75fb      	strb	r3, [r7, #23]
 800b0e4:	bf00      	nop
 800b0e6:	68fb      	ldr	r3, [r7, #12]
 800b0e8:	2200      	movs	r2, #0
 800b0ea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b0ee:	7dfb      	ldrb	r3, [r7, #23]
 800b0f0:	4618      	mov	r0, r3
 800b0f2:	3718      	adds	r7, #24
 800b0f4:	46bd      	mov	sp, r7
 800b0f6:	bd80      	pop	{r7, pc}

0800b0f8 <HAL_TIM_ConfigClockSource>:
 800b0f8:	b580      	push	{r7, lr}
 800b0fa:	b084      	sub	sp, #16
 800b0fc:	af00      	add	r7, sp, #0
 800b0fe:	6078      	str	r0, [r7, #4]
 800b100:	6039      	str	r1, [r7, #0]
 800b102:	2300      	movs	r3, #0
 800b104:	73fb      	strb	r3, [r7, #15]
 800b106:	687b      	ldr	r3, [r7, #4]
 800b108:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b10c:	2b01      	cmp	r3, #1
 800b10e:	d101      	bne.n	800b114 <HAL_TIM_ConfigClockSource+0x1c>
 800b110:	2302      	movs	r3, #2
 800b112:	e0b4      	b.n	800b27e <HAL_TIM_ConfigClockSource+0x186>
 800b114:	687b      	ldr	r3, [r7, #4]
 800b116:	2201      	movs	r2, #1
 800b118:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b11c:	687b      	ldr	r3, [r7, #4]
 800b11e:	2202      	movs	r2, #2
 800b120:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b124:	687b      	ldr	r3, [r7, #4]
 800b126:	681b      	ldr	r3, [r3, #0]
 800b128:	689b      	ldr	r3, [r3, #8]
 800b12a:	60bb      	str	r3, [r7, #8]
 800b12c:	68bb      	ldr	r3, [r7, #8]
 800b12e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800b132:	60bb      	str	r3, [r7, #8]
 800b134:	68bb      	ldr	r3, [r7, #8]
 800b136:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800b13a:	60bb      	str	r3, [r7, #8]
 800b13c:	687b      	ldr	r3, [r7, #4]
 800b13e:	681b      	ldr	r3, [r3, #0]
 800b140:	68ba      	ldr	r2, [r7, #8]
 800b142:	609a      	str	r2, [r3, #8]
 800b144:	683b      	ldr	r3, [r7, #0]
 800b146:	681b      	ldr	r3, [r3, #0]
 800b148:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800b14c:	d03e      	beq.n	800b1cc <HAL_TIM_ConfigClockSource+0xd4>
 800b14e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800b152:	f200 8087 	bhi.w	800b264 <HAL_TIM_ConfigClockSource+0x16c>
 800b156:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b15a:	f000 8086 	beq.w	800b26a <HAL_TIM_ConfigClockSource+0x172>
 800b15e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b162:	d87f      	bhi.n	800b264 <HAL_TIM_ConfigClockSource+0x16c>
 800b164:	2b70      	cmp	r3, #112	; 0x70
 800b166:	d01a      	beq.n	800b19e <HAL_TIM_ConfigClockSource+0xa6>
 800b168:	2b70      	cmp	r3, #112	; 0x70
 800b16a:	d87b      	bhi.n	800b264 <HAL_TIM_ConfigClockSource+0x16c>
 800b16c:	2b60      	cmp	r3, #96	; 0x60
 800b16e:	d050      	beq.n	800b212 <HAL_TIM_ConfigClockSource+0x11a>
 800b170:	2b60      	cmp	r3, #96	; 0x60
 800b172:	d877      	bhi.n	800b264 <HAL_TIM_ConfigClockSource+0x16c>
 800b174:	2b50      	cmp	r3, #80	; 0x50
 800b176:	d03c      	beq.n	800b1f2 <HAL_TIM_ConfigClockSource+0xfa>
 800b178:	2b50      	cmp	r3, #80	; 0x50
 800b17a:	d873      	bhi.n	800b264 <HAL_TIM_ConfigClockSource+0x16c>
 800b17c:	2b40      	cmp	r3, #64	; 0x40
 800b17e:	d058      	beq.n	800b232 <HAL_TIM_ConfigClockSource+0x13a>
 800b180:	2b40      	cmp	r3, #64	; 0x40
 800b182:	d86f      	bhi.n	800b264 <HAL_TIM_ConfigClockSource+0x16c>
 800b184:	2b30      	cmp	r3, #48	; 0x30
 800b186:	d064      	beq.n	800b252 <HAL_TIM_ConfigClockSource+0x15a>
 800b188:	2b30      	cmp	r3, #48	; 0x30
 800b18a:	d86b      	bhi.n	800b264 <HAL_TIM_ConfigClockSource+0x16c>
 800b18c:	2b20      	cmp	r3, #32
 800b18e:	d060      	beq.n	800b252 <HAL_TIM_ConfigClockSource+0x15a>
 800b190:	2b20      	cmp	r3, #32
 800b192:	d867      	bhi.n	800b264 <HAL_TIM_ConfigClockSource+0x16c>
 800b194:	2b00      	cmp	r3, #0
 800b196:	d05c      	beq.n	800b252 <HAL_TIM_ConfigClockSource+0x15a>
 800b198:	2b10      	cmp	r3, #16
 800b19a:	d05a      	beq.n	800b252 <HAL_TIM_ConfigClockSource+0x15a>
 800b19c:	e062      	b.n	800b264 <HAL_TIM_ConfigClockSource+0x16c>
 800b19e:	687b      	ldr	r3, [r7, #4]
 800b1a0:	6818      	ldr	r0, [r3, #0]
 800b1a2:	683b      	ldr	r3, [r7, #0]
 800b1a4:	6899      	ldr	r1, [r3, #8]
 800b1a6:	683b      	ldr	r3, [r7, #0]
 800b1a8:	685a      	ldr	r2, [r3, #4]
 800b1aa:	683b      	ldr	r3, [r7, #0]
 800b1ac:	68db      	ldr	r3, [r3, #12]
 800b1ae:	f000 fd85 	bl	800bcbc <TIM_ETR_SetConfig>
 800b1b2:	687b      	ldr	r3, [r7, #4]
 800b1b4:	681b      	ldr	r3, [r3, #0]
 800b1b6:	689b      	ldr	r3, [r3, #8]
 800b1b8:	60bb      	str	r3, [r7, #8]
 800b1ba:	68bb      	ldr	r3, [r7, #8]
 800b1bc:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800b1c0:	60bb      	str	r3, [r7, #8]
 800b1c2:	687b      	ldr	r3, [r7, #4]
 800b1c4:	681b      	ldr	r3, [r3, #0]
 800b1c6:	68ba      	ldr	r2, [r7, #8]
 800b1c8:	609a      	str	r2, [r3, #8]
 800b1ca:	e04f      	b.n	800b26c <HAL_TIM_ConfigClockSource+0x174>
 800b1cc:	687b      	ldr	r3, [r7, #4]
 800b1ce:	6818      	ldr	r0, [r3, #0]
 800b1d0:	683b      	ldr	r3, [r7, #0]
 800b1d2:	6899      	ldr	r1, [r3, #8]
 800b1d4:	683b      	ldr	r3, [r7, #0]
 800b1d6:	685a      	ldr	r2, [r3, #4]
 800b1d8:	683b      	ldr	r3, [r7, #0]
 800b1da:	68db      	ldr	r3, [r3, #12]
 800b1dc:	f000 fd6e 	bl	800bcbc <TIM_ETR_SetConfig>
 800b1e0:	687b      	ldr	r3, [r7, #4]
 800b1e2:	681b      	ldr	r3, [r3, #0]
 800b1e4:	689a      	ldr	r2, [r3, #8]
 800b1e6:	687b      	ldr	r3, [r7, #4]
 800b1e8:	681b      	ldr	r3, [r3, #0]
 800b1ea:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800b1ee:	609a      	str	r2, [r3, #8]
 800b1f0:	e03c      	b.n	800b26c <HAL_TIM_ConfigClockSource+0x174>
 800b1f2:	687b      	ldr	r3, [r7, #4]
 800b1f4:	6818      	ldr	r0, [r3, #0]
 800b1f6:	683b      	ldr	r3, [r7, #0]
 800b1f8:	6859      	ldr	r1, [r3, #4]
 800b1fa:	683b      	ldr	r3, [r7, #0]
 800b1fc:	68db      	ldr	r3, [r3, #12]
 800b1fe:	461a      	mov	r2, r3
 800b200:	f000 fc2c 	bl	800ba5c <TIM_TI1_ConfigInputStage>
 800b204:	687b      	ldr	r3, [r7, #4]
 800b206:	681b      	ldr	r3, [r3, #0]
 800b208:	2150      	movs	r1, #80	; 0x50
 800b20a:	4618      	mov	r0, r3
 800b20c:	f000 fd3b 	bl	800bc86 <TIM_ITRx_SetConfig>
 800b210:	e02c      	b.n	800b26c <HAL_TIM_ConfigClockSource+0x174>
 800b212:	687b      	ldr	r3, [r7, #4]
 800b214:	6818      	ldr	r0, [r3, #0]
 800b216:	683b      	ldr	r3, [r7, #0]
 800b218:	6859      	ldr	r1, [r3, #4]
 800b21a:	683b      	ldr	r3, [r7, #0]
 800b21c:	68db      	ldr	r3, [r3, #12]
 800b21e:	461a      	mov	r2, r3
 800b220:	f000 fc88 	bl	800bb34 <TIM_TI2_ConfigInputStage>
 800b224:	687b      	ldr	r3, [r7, #4]
 800b226:	681b      	ldr	r3, [r3, #0]
 800b228:	2160      	movs	r1, #96	; 0x60
 800b22a:	4618      	mov	r0, r3
 800b22c:	f000 fd2b 	bl	800bc86 <TIM_ITRx_SetConfig>
 800b230:	e01c      	b.n	800b26c <HAL_TIM_ConfigClockSource+0x174>
 800b232:	687b      	ldr	r3, [r7, #4]
 800b234:	6818      	ldr	r0, [r3, #0]
 800b236:	683b      	ldr	r3, [r7, #0]
 800b238:	6859      	ldr	r1, [r3, #4]
 800b23a:	683b      	ldr	r3, [r7, #0]
 800b23c:	68db      	ldr	r3, [r3, #12]
 800b23e:	461a      	mov	r2, r3
 800b240:	f000 fc0c 	bl	800ba5c <TIM_TI1_ConfigInputStage>
 800b244:	687b      	ldr	r3, [r7, #4]
 800b246:	681b      	ldr	r3, [r3, #0]
 800b248:	2140      	movs	r1, #64	; 0x40
 800b24a:	4618      	mov	r0, r3
 800b24c:	f000 fd1b 	bl	800bc86 <TIM_ITRx_SetConfig>
 800b250:	e00c      	b.n	800b26c <HAL_TIM_ConfigClockSource+0x174>
 800b252:	687b      	ldr	r3, [r7, #4]
 800b254:	681a      	ldr	r2, [r3, #0]
 800b256:	683b      	ldr	r3, [r7, #0]
 800b258:	681b      	ldr	r3, [r3, #0]
 800b25a:	4619      	mov	r1, r3
 800b25c:	4610      	mov	r0, r2
 800b25e:	f000 fd12 	bl	800bc86 <TIM_ITRx_SetConfig>
 800b262:	e003      	b.n	800b26c <HAL_TIM_ConfigClockSource+0x174>
 800b264:	2301      	movs	r3, #1
 800b266:	73fb      	strb	r3, [r7, #15]
 800b268:	e000      	b.n	800b26c <HAL_TIM_ConfigClockSource+0x174>
 800b26a:	bf00      	nop
 800b26c:	687b      	ldr	r3, [r7, #4]
 800b26e:	2201      	movs	r2, #1
 800b270:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b274:	687b      	ldr	r3, [r7, #4]
 800b276:	2200      	movs	r2, #0
 800b278:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b27c:	7bfb      	ldrb	r3, [r7, #15]
 800b27e:	4618      	mov	r0, r3
 800b280:	3710      	adds	r7, #16
 800b282:	46bd      	mov	sp, r7
 800b284:	bd80      	pop	{r7, pc}

0800b286 <HAL_TIM_PeriodElapsedCallback>:
 800b286:	b480      	push	{r7}
 800b288:	b083      	sub	sp, #12
 800b28a:	af00      	add	r7, sp, #0
 800b28c:	6078      	str	r0, [r7, #4]
 800b28e:	bf00      	nop
 800b290:	370c      	adds	r7, #12
 800b292:	46bd      	mov	sp, r7
 800b294:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b298:	4770      	bx	lr

0800b29a <HAL_TIM_OC_DelayElapsedCallback>:
 800b29a:	b480      	push	{r7}
 800b29c:	b083      	sub	sp, #12
 800b29e:	af00      	add	r7, sp, #0
 800b2a0:	6078      	str	r0, [r7, #4]
 800b2a2:	bf00      	nop
 800b2a4:	370c      	adds	r7, #12
 800b2a6:	46bd      	mov	sp, r7
 800b2a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2ac:	4770      	bx	lr

0800b2ae <HAL_TIM_IC_CaptureCallback>:
 800b2ae:	b480      	push	{r7}
 800b2b0:	b083      	sub	sp, #12
 800b2b2:	af00      	add	r7, sp, #0
 800b2b4:	6078      	str	r0, [r7, #4]
 800b2b6:	bf00      	nop
 800b2b8:	370c      	adds	r7, #12
 800b2ba:	46bd      	mov	sp, r7
 800b2bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2c0:	4770      	bx	lr

0800b2c2 <HAL_TIM_IC_CaptureHalfCpltCallback>:
 800b2c2:	b480      	push	{r7}
 800b2c4:	b083      	sub	sp, #12
 800b2c6:	af00      	add	r7, sp, #0
 800b2c8:	6078      	str	r0, [r7, #4]
 800b2ca:	bf00      	nop
 800b2cc:	370c      	adds	r7, #12
 800b2ce:	46bd      	mov	sp, r7
 800b2d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2d4:	4770      	bx	lr

0800b2d6 <HAL_TIM_PWM_PulseFinishedCallback>:
 800b2d6:	b480      	push	{r7}
 800b2d8:	b083      	sub	sp, #12
 800b2da:	af00      	add	r7, sp, #0
 800b2dc:	6078      	str	r0, [r7, #4]
 800b2de:	bf00      	nop
 800b2e0:	370c      	adds	r7, #12
 800b2e2:	46bd      	mov	sp, r7
 800b2e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2e8:	4770      	bx	lr

0800b2ea <HAL_TIM_TriggerCallback>:
 800b2ea:	b480      	push	{r7}
 800b2ec:	b083      	sub	sp, #12
 800b2ee:	af00      	add	r7, sp, #0
 800b2f0:	6078      	str	r0, [r7, #4]
 800b2f2:	bf00      	nop
 800b2f4:	370c      	adds	r7, #12
 800b2f6:	46bd      	mov	sp, r7
 800b2f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2fc:	4770      	bx	lr

0800b2fe <HAL_TIM_ErrorCallback>:
 800b2fe:	b480      	push	{r7}
 800b300:	b083      	sub	sp, #12
 800b302:	af00      	add	r7, sp, #0
 800b304:	6078      	str	r0, [r7, #4]
 800b306:	bf00      	nop
 800b308:	370c      	adds	r7, #12
 800b30a:	46bd      	mov	sp, r7
 800b30c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b310:	4770      	bx	lr

0800b312 <TIM_DMAError>:
 800b312:	b580      	push	{r7, lr}
 800b314:	b084      	sub	sp, #16
 800b316:	af00      	add	r7, sp, #0
 800b318:	6078      	str	r0, [r7, #4]
 800b31a:	687b      	ldr	r3, [r7, #4]
 800b31c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b31e:	60fb      	str	r3, [r7, #12]
 800b320:	68fb      	ldr	r3, [r7, #12]
 800b322:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b324:	687a      	ldr	r2, [r7, #4]
 800b326:	429a      	cmp	r2, r3
 800b328:	d107      	bne.n	800b33a <TIM_DMAError+0x28>
 800b32a:	68fb      	ldr	r3, [r7, #12]
 800b32c:	2201      	movs	r2, #1
 800b32e:	771a      	strb	r2, [r3, #28]
 800b330:	68fb      	ldr	r3, [r7, #12]
 800b332:	2201      	movs	r2, #1
 800b334:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b338:	e02a      	b.n	800b390 <TIM_DMAError+0x7e>
 800b33a:	68fb      	ldr	r3, [r7, #12]
 800b33c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b33e:	687a      	ldr	r2, [r7, #4]
 800b340:	429a      	cmp	r2, r3
 800b342:	d107      	bne.n	800b354 <TIM_DMAError+0x42>
 800b344:	68fb      	ldr	r3, [r7, #12]
 800b346:	2202      	movs	r2, #2
 800b348:	771a      	strb	r2, [r3, #28]
 800b34a:	68fb      	ldr	r3, [r7, #12]
 800b34c:	2201      	movs	r2, #1
 800b34e:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800b352:	e01d      	b.n	800b390 <TIM_DMAError+0x7e>
 800b354:	68fb      	ldr	r3, [r7, #12]
 800b356:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b358:	687a      	ldr	r2, [r7, #4]
 800b35a:	429a      	cmp	r2, r3
 800b35c:	d107      	bne.n	800b36e <TIM_DMAError+0x5c>
 800b35e:	68fb      	ldr	r3, [r7, #12]
 800b360:	2204      	movs	r2, #4
 800b362:	771a      	strb	r2, [r3, #28]
 800b364:	68fb      	ldr	r3, [r7, #12]
 800b366:	2201      	movs	r2, #1
 800b368:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b36c:	e010      	b.n	800b390 <TIM_DMAError+0x7e>
 800b36e:	68fb      	ldr	r3, [r7, #12]
 800b370:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b372:	687a      	ldr	r2, [r7, #4]
 800b374:	429a      	cmp	r2, r3
 800b376:	d107      	bne.n	800b388 <TIM_DMAError+0x76>
 800b378:	68fb      	ldr	r3, [r7, #12]
 800b37a:	2208      	movs	r2, #8
 800b37c:	771a      	strb	r2, [r3, #28]
 800b37e:	68fb      	ldr	r3, [r7, #12]
 800b380:	2201      	movs	r2, #1
 800b382:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b386:	e003      	b.n	800b390 <TIM_DMAError+0x7e>
 800b388:	68fb      	ldr	r3, [r7, #12]
 800b38a:	2201      	movs	r2, #1
 800b38c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b390:	68f8      	ldr	r0, [r7, #12]
 800b392:	f7ff ffb4 	bl	800b2fe <HAL_TIM_ErrorCallback>
 800b396:	68fb      	ldr	r3, [r7, #12]
 800b398:	2200      	movs	r2, #0
 800b39a:	771a      	strb	r2, [r3, #28]
 800b39c:	bf00      	nop
 800b39e:	3710      	adds	r7, #16
 800b3a0:	46bd      	mov	sp, r7
 800b3a2:	bd80      	pop	{r7, pc}

0800b3a4 <TIM_DMACaptureCplt>:
 800b3a4:	b580      	push	{r7, lr}
 800b3a6:	b084      	sub	sp, #16
 800b3a8:	af00      	add	r7, sp, #0
 800b3aa:	6078      	str	r0, [r7, #4]
 800b3ac:	687b      	ldr	r3, [r7, #4]
 800b3ae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b3b0:	60fb      	str	r3, [r7, #12]
 800b3b2:	68fb      	ldr	r3, [r7, #12]
 800b3b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b3b6:	687a      	ldr	r2, [r7, #4]
 800b3b8:	429a      	cmp	r2, r3
 800b3ba:	d10f      	bne.n	800b3dc <TIM_DMACaptureCplt+0x38>
 800b3bc:	68fb      	ldr	r3, [r7, #12]
 800b3be:	2201      	movs	r2, #1
 800b3c0:	771a      	strb	r2, [r3, #28]
 800b3c2:	687b      	ldr	r3, [r7, #4]
 800b3c4:	69db      	ldr	r3, [r3, #28]
 800b3c6:	2b00      	cmp	r3, #0
 800b3c8:	d146      	bne.n	800b458 <TIM_DMACaptureCplt+0xb4>
 800b3ca:	68fb      	ldr	r3, [r7, #12]
 800b3cc:	2201      	movs	r2, #1
 800b3ce:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b3d2:	68fb      	ldr	r3, [r7, #12]
 800b3d4:	2201      	movs	r2, #1
 800b3d6:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800b3da:	e03d      	b.n	800b458 <TIM_DMACaptureCplt+0xb4>
 800b3dc:	68fb      	ldr	r3, [r7, #12]
 800b3de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b3e0:	687a      	ldr	r2, [r7, #4]
 800b3e2:	429a      	cmp	r2, r3
 800b3e4:	d10f      	bne.n	800b406 <TIM_DMACaptureCplt+0x62>
 800b3e6:	68fb      	ldr	r3, [r7, #12]
 800b3e8:	2202      	movs	r2, #2
 800b3ea:	771a      	strb	r2, [r3, #28]
 800b3ec:	687b      	ldr	r3, [r7, #4]
 800b3ee:	69db      	ldr	r3, [r3, #28]
 800b3f0:	2b00      	cmp	r3, #0
 800b3f2:	d131      	bne.n	800b458 <TIM_DMACaptureCplt+0xb4>
 800b3f4:	68fb      	ldr	r3, [r7, #12]
 800b3f6:	2201      	movs	r2, #1
 800b3f8:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800b3fc:	68fb      	ldr	r3, [r7, #12]
 800b3fe:	2201      	movs	r2, #1
 800b400:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800b404:	e028      	b.n	800b458 <TIM_DMACaptureCplt+0xb4>
 800b406:	68fb      	ldr	r3, [r7, #12]
 800b408:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b40a:	687a      	ldr	r2, [r7, #4]
 800b40c:	429a      	cmp	r2, r3
 800b40e:	d10f      	bne.n	800b430 <TIM_DMACaptureCplt+0x8c>
 800b410:	68fb      	ldr	r3, [r7, #12]
 800b412:	2204      	movs	r2, #4
 800b414:	771a      	strb	r2, [r3, #28]
 800b416:	687b      	ldr	r3, [r7, #4]
 800b418:	69db      	ldr	r3, [r3, #28]
 800b41a:	2b00      	cmp	r3, #0
 800b41c:	d11c      	bne.n	800b458 <TIM_DMACaptureCplt+0xb4>
 800b41e:	68fb      	ldr	r3, [r7, #12]
 800b420:	2201      	movs	r2, #1
 800b422:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b426:	68fb      	ldr	r3, [r7, #12]
 800b428:	2201      	movs	r2, #1
 800b42a:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800b42e:	e013      	b.n	800b458 <TIM_DMACaptureCplt+0xb4>
 800b430:	68fb      	ldr	r3, [r7, #12]
 800b432:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b434:	687a      	ldr	r2, [r7, #4]
 800b436:	429a      	cmp	r2, r3
 800b438:	d10e      	bne.n	800b458 <TIM_DMACaptureCplt+0xb4>
 800b43a:	68fb      	ldr	r3, [r7, #12]
 800b43c:	2208      	movs	r2, #8
 800b43e:	771a      	strb	r2, [r3, #28]
 800b440:	687b      	ldr	r3, [r7, #4]
 800b442:	69db      	ldr	r3, [r3, #28]
 800b444:	2b00      	cmp	r3, #0
 800b446:	d107      	bne.n	800b458 <TIM_DMACaptureCplt+0xb4>
 800b448:	68fb      	ldr	r3, [r7, #12]
 800b44a:	2201      	movs	r2, #1
 800b44c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b450:	68fb      	ldr	r3, [r7, #12]
 800b452:	2201      	movs	r2, #1
 800b454:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800b458:	68f8      	ldr	r0, [r7, #12]
 800b45a:	f7ff ff28 	bl	800b2ae <HAL_TIM_IC_CaptureCallback>
 800b45e:	68fb      	ldr	r3, [r7, #12]
 800b460:	2200      	movs	r2, #0
 800b462:	771a      	strb	r2, [r3, #28]
 800b464:	bf00      	nop
 800b466:	3710      	adds	r7, #16
 800b468:	46bd      	mov	sp, r7
 800b46a:	bd80      	pop	{r7, pc}

0800b46c <TIM_DMACaptureHalfCplt>:
 800b46c:	b580      	push	{r7, lr}
 800b46e:	b084      	sub	sp, #16
 800b470:	af00      	add	r7, sp, #0
 800b472:	6078      	str	r0, [r7, #4]
 800b474:	687b      	ldr	r3, [r7, #4]
 800b476:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b478:	60fb      	str	r3, [r7, #12]
 800b47a:	68fb      	ldr	r3, [r7, #12]
 800b47c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b47e:	687a      	ldr	r2, [r7, #4]
 800b480:	429a      	cmp	r2, r3
 800b482:	d103      	bne.n	800b48c <TIM_DMACaptureHalfCplt+0x20>
 800b484:	68fb      	ldr	r3, [r7, #12]
 800b486:	2201      	movs	r2, #1
 800b488:	771a      	strb	r2, [r3, #28]
 800b48a:	e019      	b.n	800b4c0 <TIM_DMACaptureHalfCplt+0x54>
 800b48c:	68fb      	ldr	r3, [r7, #12]
 800b48e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b490:	687a      	ldr	r2, [r7, #4]
 800b492:	429a      	cmp	r2, r3
 800b494:	d103      	bne.n	800b49e <TIM_DMACaptureHalfCplt+0x32>
 800b496:	68fb      	ldr	r3, [r7, #12]
 800b498:	2202      	movs	r2, #2
 800b49a:	771a      	strb	r2, [r3, #28]
 800b49c:	e010      	b.n	800b4c0 <TIM_DMACaptureHalfCplt+0x54>
 800b49e:	68fb      	ldr	r3, [r7, #12]
 800b4a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b4a2:	687a      	ldr	r2, [r7, #4]
 800b4a4:	429a      	cmp	r2, r3
 800b4a6:	d103      	bne.n	800b4b0 <TIM_DMACaptureHalfCplt+0x44>
 800b4a8:	68fb      	ldr	r3, [r7, #12]
 800b4aa:	2204      	movs	r2, #4
 800b4ac:	771a      	strb	r2, [r3, #28]
 800b4ae:	e007      	b.n	800b4c0 <TIM_DMACaptureHalfCplt+0x54>
 800b4b0:	68fb      	ldr	r3, [r7, #12]
 800b4b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b4b4:	687a      	ldr	r2, [r7, #4]
 800b4b6:	429a      	cmp	r2, r3
 800b4b8:	d102      	bne.n	800b4c0 <TIM_DMACaptureHalfCplt+0x54>
 800b4ba:	68fb      	ldr	r3, [r7, #12]
 800b4bc:	2208      	movs	r2, #8
 800b4be:	771a      	strb	r2, [r3, #28]
 800b4c0:	68f8      	ldr	r0, [r7, #12]
 800b4c2:	f7ff fefe 	bl	800b2c2 <HAL_TIM_IC_CaptureHalfCpltCallback>
 800b4c6:	68fb      	ldr	r3, [r7, #12]
 800b4c8:	2200      	movs	r2, #0
 800b4ca:	771a      	strb	r2, [r3, #28]
 800b4cc:	bf00      	nop
 800b4ce:	3710      	adds	r7, #16
 800b4d0:	46bd      	mov	sp, r7
 800b4d2:	bd80      	pop	{r7, pc}

0800b4d4 <TIM_Base_SetConfig>:
 800b4d4:	b480      	push	{r7}
 800b4d6:	b085      	sub	sp, #20
 800b4d8:	af00      	add	r7, sp, #0
 800b4da:	6078      	str	r0, [r7, #4]
 800b4dc:	6039      	str	r1, [r7, #0]
 800b4de:	687b      	ldr	r3, [r7, #4]
 800b4e0:	681b      	ldr	r3, [r3, #0]
 800b4e2:	60fb      	str	r3, [r7, #12]
 800b4e4:	687b      	ldr	r3, [r7, #4]
 800b4e6:	4a40      	ldr	r2, [pc, #256]	; (800b5e8 <TIM_Base_SetConfig+0x114>)
 800b4e8:	4293      	cmp	r3, r2
 800b4ea:	d013      	beq.n	800b514 <TIM_Base_SetConfig+0x40>
 800b4ec:	687b      	ldr	r3, [r7, #4]
 800b4ee:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b4f2:	d00f      	beq.n	800b514 <TIM_Base_SetConfig+0x40>
 800b4f4:	687b      	ldr	r3, [r7, #4]
 800b4f6:	4a3d      	ldr	r2, [pc, #244]	; (800b5ec <TIM_Base_SetConfig+0x118>)
 800b4f8:	4293      	cmp	r3, r2
 800b4fa:	d00b      	beq.n	800b514 <TIM_Base_SetConfig+0x40>
 800b4fc:	687b      	ldr	r3, [r7, #4]
 800b4fe:	4a3c      	ldr	r2, [pc, #240]	; (800b5f0 <TIM_Base_SetConfig+0x11c>)
 800b500:	4293      	cmp	r3, r2
 800b502:	d007      	beq.n	800b514 <TIM_Base_SetConfig+0x40>
 800b504:	687b      	ldr	r3, [r7, #4]
 800b506:	4a3b      	ldr	r2, [pc, #236]	; (800b5f4 <TIM_Base_SetConfig+0x120>)
 800b508:	4293      	cmp	r3, r2
 800b50a:	d003      	beq.n	800b514 <TIM_Base_SetConfig+0x40>
 800b50c:	687b      	ldr	r3, [r7, #4]
 800b50e:	4a3a      	ldr	r2, [pc, #232]	; (800b5f8 <TIM_Base_SetConfig+0x124>)
 800b510:	4293      	cmp	r3, r2
 800b512:	d108      	bne.n	800b526 <TIM_Base_SetConfig+0x52>
 800b514:	68fb      	ldr	r3, [r7, #12]
 800b516:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b51a:	60fb      	str	r3, [r7, #12]
 800b51c:	683b      	ldr	r3, [r7, #0]
 800b51e:	685b      	ldr	r3, [r3, #4]
 800b520:	68fa      	ldr	r2, [r7, #12]
 800b522:	4313      	orrs	r3, r2
 800b524:	60fb      	str	r3, [r7, #12]
 800b526:	687b      	ldr	r3, [r7, #4]
 800b528:	4a2f      	ldr	r2, [pc, #188]	; (800b5e8 <TIM_Base_SetConfig+0x114>)
 800b52a:	4293      	cmp	r3, r2
 800b52c:	d02b      	beq.n	800b586 <TIM_Base_SetConfig+0xb2>
 800b52e:	687b      	ldr	r3, [r7, #4]
 800b530:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b534:	d027      	beq.n	800b586 <TIM_Base_SetConfig+0xb2>
 800b536:	687b      	ldr	r3, [r7, #4]
 800b538:	4a2c      	ldr	r2, [pc, #176]	; (800b5ec <TIM_Base_SetConfig+0x118>)
 800b53a:	4293      	cmp	r3, r2
 800b53c:	d023      	beq.n	800b586 <TIM_Base_SetConfig+0xb2>
 800b53e:	687b      	ldr	r3, [r7, #4]
 800b540:	4a2b      	ldr	r2, [pc, #172]	; (800b5f0 <TIM_Base_SetConfig+0x11c>)
 800b542:	4293      	cmp	r3, r2
 800b544:	d01f      	beq.n	800b586 <TIM_Base_SetConfig+0xb2>
 800b546:	687b      	ldr	r3, [r7, #4]
 800b548:	4a2a      	ldr	r2, [pc, #168]	; (800b5f4 <TIM_Base_SetConfig+0x120>)
 800b54a:	4293      	cmp	r3, r2
 800b54c:	d01b      	beq.n	800b586 <TIM_Base_SetConfig+0xb2>
 800b54e:	687b      	ldr	r3, [r7, #4]
 800b550:	4a29      	ldr	r2, [pc, #164]	; (800b5f8 <TIM_Base_SetConfig+0x124>)
 800b552:	4293      	cmp	r3, r2
 800b554:	d017      	beq.n	800b586 <TIM_Base_SetConfig+0xb2>
 800b556:	687b      	ldr	r3, [r7, #4]
 800b558:	4a28      	ldr	r2, [pc, #160]	; (800b5fc <TIM_Base_SetConfig+0x128>)
 800b55a:	4293      	cmp	r3, r2
 800b55c:	d013      	beq.n	800b586 <TIM_Base_SetConfig+0xb2>
 800b55e:	687b      	ldr	r3, [r7, #4]
 800b560:	4a27      	ldr	r2, [pc, #156]	; (800b600 <TIM_Base_SetConfig+0x12c>)
 800b562:	4293      	cmp	r3, r2
 800b564:	d00f      	beq.n	800b586 <TIM_Base_SetConfig+0xb2>
 800b566:	687b      	ldr	r3, [r7, #4]
 800b568:	4a26      	ldr	r2, [pc, #152]	; (800b604 <TIM_Base_SetConfig+0x130>)
 800b56a:	4293      	cmp	r3, r2
 800b56c:	d00b      	beq.n	800b586 <TIM_Base_SetConfig+0xb2>
 800b56e:	687b      	ldr	r3, [r7, #4]
 800b570:	4a25      	ldr	r2, [pc, #148]	; (800b608 <TIM_Base_SetConfig+0x134>)
 800b572:	4293      	cmp	r3, r2
 800b574:	d007      	beq.n	800b586 <TIM_Base_SetConfig+0xb2>
 800b576:	687b      	ldr	r3, [r7, #4]
 800b578:	4a24      	ldr	r2, [pc, #144]	; (800b60c <TIM_Base_SetConfig+0x138>)
 800b57a:	4293      	cmp	r3, r2
 800b57c:	d003      	beq.n	800b586 <TIM_Base_SetConfig+0xb2>
 800b57e:	687b      	ldr	r3, [r7, #4]
 800b580:	4a23      	ldr	r2, [pc, #140]	; (800b610 <TIM_Base_SetConfig+0x13c>)
 800b582:	4293      	cmp	r3, r2
 800b584:	d108      	bne.n	800b598 <TIM_Base_SetConfig+0xc4>
 800b586:	68fb      	ldr	r3, [r7, #12]
 800b588:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b58c:	60fb      	str	r3, [r7, #12]
 800b58e:	683b      	ldr	r3, [r7, #0]
 800b590:	68db      	ldr	r3, [r3, #12]
 800b592:	68fa      	ldr	r2, [r7, #12]
 800b594:	4313      	orrs	r3, r2
 800b596:	60fb      	str	r3, [r7, #12]
 800b598:	68fb      	ldr	r3, [r7, #12]
 800b59a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800b59e:	683b      	ldr	r3, [r7, #0]
 800b5a0:	695b      	ldr	r3, [r3, #20]
 800b5a2:	4313      	orrs	r3, r2
 800b5a4:	60fb      	str	r3, [r7, #12]
 800b5a6:	687b      	ldr	r3, [r7, #4]
 800b5a8:	68fa      	ldr	r2, [r7, #12]
 800b5aa:	601a      	str	r2, [r3, #0]
 800b5ac:	683b      	ldr	r3, [r7, #0]
 800b5ae:	689a      	ldr	r2, [r3, #8]
 800b5b0:	687b      	ldr	r3, [r7, #4]
 800b5b2:	62da      	str	r2, [r3, #44]	; 0x2c
 800b5b4:	683b      	ldr	r3, [r7, #0]
 800b5b6:	681a      	ldr	r2, [r3, #0]
 800b5b8:	687b      	ldr	r3, [r7, #4]
 800b5ba:	629a      	str	r2, [r3, #40]	; 0x28
 800b5bc:	687b      	ldr	r3, [r7, #4]
 800b5be:	4a0a      	ldr	r2, [pc, #40]	; (800b5e8 <TIM_Base_SetConfig+0x114>)
 800b5c0:	4293      	cmp	r3, r2
 800b5c2:	d003      	beq.n	800b5cc <TIM_Base_SetConfig+0xf8>
 800b5c4:	687b      	ldr	r3, [r7, #4]
 800b5c6:	4a0c      	ldr	r2, [pc, #48]	; (800b5f8 <TIM_Base_SetConfig+0x124>)
 800b5c8:	4293      	cmp	r3, r2
 800b5ca:	d103      	bne.n	800b5d4 <TIM_Base_SetConfig+0x100>
 800b5cc:	683b      	ldr	r3, [r7, #0]
 800b5ce:	691a      	ldr	r2, [r3, #16]
 800b5d0:	687b      	ldr	r3, [r7, #4]
 800b5d2:	631a      	str	r2, [r3, #48]	; 0x30
 800b5d4:	687b      	ldr	r3, [r7, #4]
 800b5d6:	2201      	movs	r2, #1
 800b5d8:	615a      	str	r2, [r3, #20]
 800b5da:	bf00      	nop
 800b5dc:	3714      	adds	r7, #20
 800b5de:	46bd      	mov	sp, r7
 800b5e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5e4:	4770      	bx	lr
 800b5e6:	bf00      	nop
 800b5e8:	40010000 	.word	0x40010000
 800b5ec:	40000400 	.word	0x40000400
 800b5f0:	40000800 	.word	0x40000800
 800b5f4:	40000c00 	.word	0x40000c00
 800b5f8:	40010400 	.word	0x40010400
 800b5fc:	40014000 	.word	0x40014000
 800b600:	40014400 	.word	0x40014400
 800b604:	40014800 	.word	0x40014800
 800b608:	40001800 	.word	0x40001800
 800b60c:	40001c00 	.word	0x40001c00
 800b610:	40002000 	.word	0x40002000

0800b614 <TIM_OC1_SetConfig>:
 800b614:	b480      	push	{r7}
 800b616:	b087      	sub	sp, #28
 800b618:	af00      	add	r7, sp, #0
 800b61a:	6078      	str	r0, [r7, #4]
 800b61c:	6039      	str	r1, [r7, #0]
 800b61e:	687b      	ldr	r3, [r7, #4]
 800b620:	6a1b      	ldr	r3, [r3, #32]
 800b622:	f023 0201 	bic.w	r2, r3, #1
 800b626:	687b      	ldr	r3, [r7, #4]
 800b628:	621a      	str	r2, [r3, #32]
 800b62a:	687b      	ldr	r3, [r7, #4]
 800b62c:	6a1b      	ldr	r3, [r3, #32]
 800b62e:	617b      	str	r3, [r7, #20]
 800b630:	687b      	ldr	r3, [r7, #4]
 800b632:	685b      	ldr	r3, [r3, #4]
 800b634:	613b      	str	r3, [r7, #16]
 800b636:	687b      	ldr	r3, [r7, #4]
 800b638:	699b      	ldr	r3, [r3, #24]
 800b63a:	60fb      	str	r3, [r7, #12]
 800b63c:	68fb      	ldr	r3, [r7, #12]
 800b63e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b642:	60fb      	str	r3, [r7, #12]
 800b644:	68fb      	ldr	r3, [r7, #12]
 800b646:	f023 0303 	bic.w	r3, r3, #3
 800b64a:	60fb      	str	r3, [r7, #12]
 800b64c:	683b      	ldr	r3, [r7, #0]
 800b64e:	681b      	ldr	r3, [r3, #0]
 800b650:	68fa      	ldr	r2, [r7, #12]
 800b652:	4313      	orrs	r3, r2
 800b654:	60fb      	str	r3, [r7, #12]
 800b656:	697b      	ldr	r3, [r7, #20]
 800b658:	f023 0302 	bic.w	r3, r3, #2
 800b65c:	617b      	str	r3, [r7, #20]
 800b65e:	683b      	ldr	r3, [r7, #0]
 800b660:	689b      	ldr	r3, [r3, #8]
 800b662:	697a      	ldr	r2, [r7, #20]
 800b664:	4313      	orrs	r3, r2
 800b666:	617b      	str	r3, [r7, #20]
 800b668:	687b      	ldr	r3, [r7, #4]
 800b66a:	4a20      	ldr	r2, [pc, #128]	; (800b6ec <TIM_OC1_SetConfig+0xd8>)
 800b66c:	4293      	cmp	r3, r2
 800b66e:	d003      	beq.n	800b678 <TIM_OC1_SetConfig+0x64>
 800b670:	687b      	ldr	r3, [r7, #4]
 800b672:	4a1f      	ldr	r2, [pc, #124]	; (800b6f0 <TIM_OC1_SetConfig+0xdc>)
 800b674:	4293      	cmp	r3, r2
 800b676:	d10c      	bne.n	800b692 <TIM_OC1_SetConfig+0x7e>
 800b678:	697b      	ldr	r3, [r7, #20]
 800b67a:	f023 0308 	bic.w	r3, r3, #8
 800b67e:	617b      	str	r3, [r7, #20]
 800b680:	683b      	ldr	r3, [r7, #0]
 800b682:	68db      	ldr	r3, [r3, #12]
 800b684:	697a      	ldr	r2, [r7, #20]
 800b686:	4313      	orrs	r3, r2
 800b688:	617b      	str	r3, [r7, #20]
 800b68a:	697b      	ldr	r3, [r7, #20]
 800b68c:	f023 0304 	bic.w	r3, r3, #4
 800b690:	617b      	str	r3, [r7, #20]
 800b692:	687b      	ldr	r3, [r7, #4]
 800b694:	4a15      	ldr	r2, [pc, #84]	; (800b6ec <TIM_OC1_SetConfig+0xd8>)
 800b696:	4293      	cmp	r3, r2
 800b698:	d003      	beq.n	800b6a2 <TIM_OC1_SetConfig+0x8e>
 800b69a:	687b      	ldr	r3, [r7, #4]
 800b69c:	4a14      	ldr	r2, [pc, #80]	; (800b6f0 <TIM_OC1_SetConfig+0xdc>)
 800b69e:	4293      	cmp	r3, r2
 800b6a0:	d111      	bne.n	800b6c6 <TIM_OC1_SetConfig+0xb2>
 800b6a2:	693b      	ldr	r3, [r7, #16]
 800b6a4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800b6a8:	613b      	str	r3, [r7, #16]
 800b6aa:	693b      	ldr	r3, [r7, #16]
 800b6ac:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800b6b0:	613b      	str	r3, [r7, #16]
 800b6b2:	683b      	ldr	r3, [r7, #0]
 800b6b4:	695b      	ldr	r3, [r3, #20]
 800b6b6:	693a      	ldr	r2, [r7, #16]
 800b6b8:	4313      	orrs	r3, r2
 800b6ba:	613b      	str	r3, [r7, #16]
 800b6bc:	683b      	ldr	r3, [r7, #0]
 800b6be:	699b      	ldr	r3, [r3, #24]
 800b6c0:	693a      	ldr	r2, [r7, #16]
 800b6c2:	4313      	orrs	r3, r2
 800b6c4:	613b      	str	r3, [r7, #16]
 800b6c6:	687b      	ldr	r3, [r7, #4]
 800b6c8:	693a      	ldr	r2, [r7, #16]
 800b6ca:	605a      	str	r2, [r3, #4]
 800b6cc:	687b      	ldr	r3, [r7, #4]
 800b6ce:	68fa      	ldr	r2, [r7, #12]
 800b6d0:	619a      	str	r2, [r3, #24]
 800b6d2:	683b      	ldr	r3, [r7, #0]
 800b6d4:	685a      	ldr	r2, [r3, #4]
 800b6d6:	687b      	ldr	r3, [r7, #4]
 800b6d8:	635a      	str	r2, [r3, #52]	; 0x34
 800b6da:	687b      	ldr	r3, [r7, #4]
 800b6dc:	697a      	ldr	r2, [r7, #20]
 800b6de:	621a      	str	r2, [r3, #32]
 800b6e0:	bf00      	nop
 800b6e2:	371c      	adds	r7, #28
 800b6e4:	46bd      	mov	sp, r7
 800b6e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6ea:	4770      	bx	lr
 800b6ec:	40010000 	.word	0x40010000
 800b6f0:	40010400 	.word	0x40010400

0800b6f4 <TIM_OC2_SetConfig>:
 800b6f4:	b480      	push	{r7}
 800b6f6:	b087      	sub	sp, #28
 800b6f8:	af00      	add	r7, sp, #0
 800b6fa:	6078      	str	r0, [r7, #4]
 800b6fc:	6039      	str	r1, [r7, #0]
 800b6fe:	687b      	ldr	r3, [r7, #4]
 800b700:	6a1b      	ldr	r3, [r3, #32]
 800b702:	f023 0210 	bic.w	r2, r3, #16
 800b706:	687b      	ldr	r3, [r7, #4]
 800b708:	621a      	str	r2, [r3, #32]
 800b70a:	687b      	ldr	r3, [r7, #4]
 800b70c:	6a1b      	ldr	r3, [r3, #32]
 800b70e:	617b      	str	r3, [r7, #20]
 800b710:	687b      	ldr	r3, [r7, #4]
 800b712:	685b      	ldr	r3, [r3, #4]
 800b714:	613b      	str	r3, [r7, #16]
 800b716:	687b      	ldr	r3, [r7, #4]
 800b718:	699b      	ldr	r3, [r3, #24]
 800b71a:	60fb      	str	r3, [r7, #12]
 800b71c:	68fb      	ldr	r3, [r7, #12]
 800b71e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800b722:	60fb      	str	r3, [r7, #12]
 800b724:	68fb      	ldr	r3, [r7, #12]
 800b726:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b72a:	60fb      	str	r3, [r7, #12]
 800b72c:	683b      	ldr	r3, [r7, #0]
 800b72e:	681b      	ldr	r3, [r3, #0]
 800b730:	021b      	lsls	r3, r3, #8
 800b732:	68fa      	ldr	r2, [r7, #12]
 800b734:	4313      	orrs	r3, r2
 800b736:	60fb      	str	r3, [r7, #12]
 800b738:	697b      	ldr	r3, [r7, #20]
 800b73a:	f023 0320 	bic.w	r3, r3, #32
 800b73e:	617b      	str	r3, [r7, #20]
 800b740:	683b      	ldr	r3, [r7, #0]
 800b742:	689b      	ldr	r3, [r3, #8]
 800b744:	011b      	lsls	r3, r3, #4
 800b746:	697a      	ldr	r2, [r7, #20]
 800b748:	4313      	orrs	r3, r2
 800b74a:	617b      	str	r3, [r7, #20]
 800b74c:	687b      	ldr	r3, [r7, #4]
 800b74e:	4a22      	ldr	r2, [pc, #136]	; (800b7d8 <TIM_OC2_SetConfig+0xe4>)
 800b750:	4293      	cmp	r3, r2
 800b752:	d003      	beq.n	800b75c <TIM_OC2_SetConfig+0x68>
 800b754:	687b      	ldr	r3, [r7, #4]
 800b756:	4a21      	ldr	r2, [pc, #132]	; (800b7dc <TIM_OC2_SetConfig+0xe8>)
 800b758:	4293      	cmp	r3, r2
 800b75a:	d10d      	bne.n	800b778 <TIM_OC2_SetConfig+0x84>
 800b75c:	697b      	ldr	r3, [r7, #20]
 800b75e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800b762:	617b      	str	r3, [r7, #20]
 800b764:	683b      	ldr	r3, [r7, #0]
 800b766:	68db      	ldr	r3, [r3, #12]
 800b768:	011b      	lsls	r3, r3, #4
 800b76a:	697a      	ldr	r2, [r7, #20]
 800b76c:	4313      	orrs	r3, r2
 800b76e:	617b      	str	r3, [r7, #20]
 800b770:	697b      	ldr	r3, [r7, #20]
 800b772:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b776:	617b      	str	r3, [r7, #20]
 800b778:	687b      	ldr	r3, [r7, #4]
 800b77a:	4a17      	ldr	r2, [pc, #92]	; (800b7d8 <TIM_OC2_SetConfig+0xe4>)
 800b77c:	4293      	cmp	r3, r2
 800b77e:	d003      	beq.n	800b788 <TIM_OC2_SetConfig+0x94>
 800b780:	687b      	ldr	r3, [r7, #4]
 800b782:	4a16      	ldr	r2, [pc, #88]	; (800b7dc <TIM_OC2_SetConfig+0xe8>)
 800b784:	4293      	cmp	r3, r2
 800b786:	d113      	bne.n	800b7b0 <TIM_OC2_SetConfig+0xbc>
 800b788:	693b      	ldr	r3, [r7, #16]
 800b78a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b78e:	613b      	str	r3, [r7, #16]
 800b790:	693b      	ldr	r3, [r7, #16]
 800b792:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b796:	613b      	str	r3, [r7, #16]
 800b798:	683b      	ldr	r3, [r7, #0]
 800b79a:	695b      	ldr	r3, [r3, #20]
 800b79c:	009b      	lsls	r3, r3, #2
 800b79e:	693a      	ldr	r2, [r7, #16]
 800b7a0:	4313      	orrs	r3, r2
 800b7a2:	613b      	str	r3, [r7, #16]
 800b7a4:	683b      	ldr	r3, [r7, #0]
 800b7a6:	699b      	ldr	r3, [r3, #24]
 800b7a8:	009b      	lsls	r3, r3, #2
 800b7aa:	693a      	ldr	r2, [r7, #16]
 800b7ac:	4313      	orrs	r3, r2
 800b7ae:	613b      	str	r3, [r7, #16]
 800b7b0:	687b      	ldr	r3, [r7, #4]
 800b7b2:	693a      	ldr	r2, [r7, #16]
 800b7b4:	605a      	str	r2, [r3, #4]
 800b7b6:	687b      	ldr	r3, [r7, #4]
 800b7b8:	68fa      	ldr	r2, [r7, #12]
 800b7ba:	619a      	str	r2, [r3, #24]
 800b7bc:	683b      	ldr	r3, [r7, #0]
 800b7be:	685a      	ldr	r2, [r3, #4]
 800b7c0:	687b      	ldr	r3, [r7, #4]
 800b7c2:	639a      	str	r2, [r3, #56]	; 0x38
 800b7c4:	687b      	ldr	r3, [r7, #4]
 800b7c6:	697a      	ldr	r2, [r7, #20]
 800b7c8:	621a      	str	r2, [r3, #32]
 800b7ca:	bf00      	nop
 800b7cc:	371c      	adds	r7, #28
 800b7ce:	46bd      	mov	sp, r7
 800b7d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7d4:	4770      	bx	lr
 800b7d6:	bf00      	nop
 800b7d8:	40010000 	.word	0x40010000
 800b7dc:	40010400 	.word	0x40010400

0800b7e0 <TIM_OC3_SetConfig>:
 800b7e0:	b480      	push	{r7}
 800b7e2:	b087      	sub	sp, #28
 800b7e4:	af00      	add	r7, sp, #0
 800b7e6:	6078      	str	r0, [r7, #4]
 800b7e8:	6039      	str	r1, [r7, #0]
 800b7ea:	687b      	ldr	r3, [r7, #4]
 800b7ec:	6a1b      	ldr	r3, [r3, #32]
 800b7ee:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800b7f2:	687b      	ldr	r3, [r7, #4]
 800b7f4:	621a      	str	r2, [r3, #32]
 800b7f6:	687b      	ldr	r3, [r7, #4]
 800b7f8:	6a1b      	ldr	r3, [r3, #32]
 800b7fa:	617b      	str	r3, [r7, #20]
 800b7fc:	687b      	ldr	r3, [r7, #4]
 800b7fe:	685b      	ldr	r3, [r3, #4]
 800b800:	613b      	str	r3, [r7, #16]
 800b802:	687b      	ldr	r3, [r7, #4]
 800b804:	69db      	ldr	r3, [r3, #28]
 800b806:	60fb      	str	r3, [r7, #12]
 800b808:	68fb      	ldr	r3, [r7, #12]
 800b80a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b80e:	60fb      	str	r3, [r7, #12]
 800b810:	68fb      	ldr	r3, [r7, #12]
 800b812:	f023 0303 	bic.w	r3, r3, #3
 800b816:	60fb      	str	r3, [r7, #12]
 800b818:	683b      	ldr	r3, [r7, #0]
 800b81a:	681b      	ldr	r3, [r3, #0]
 800b81c:	68fa      	ldr	r2, [r7, #12]
 800b81e:	4313      	orrs	r3, r2
 800b820:	60fb      	str	r3, [r7, #12]
 800b822:	697b      	ldr	r3, [r7, #20]
 800b824:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800b828:	617b      	str	r3, [r7, #20]
 800b82a:	683b      	ldr	r3, [r7, #0]
 800b82c:	689b      	ldr	r3, [r3, #8]
 800b82e:	021b      	lsls	r3, r3, #8
 800b830:	697a      	ldr	r2, [r7, #20]
 800b832:	4313      	orrs	r3, r2
 800b834:	617b      	str	r3, [r7, #20]
 800b836:	687b      	ldr	r3, [r7, #4]
 800b838:	4a21      	ldr	r2, [pc, #132]	; (800b8c0 <TIM_OC3_SetConfig+0xe0>)
 800b83a:	4293      	cmp	r3, r2
 800b83c:	d003      	beq.n	800b846 <TIM_OC3_SetConfig+0x66>
 800b83e:	687b      	ldr	r3, [r7, #4]
 800b840:	4a20      	ldr	r2, [pc, #128]	; (800b8c4 <TIM_OC3_SetConfig+0xe4>)
 800b842:	4293      	cmp	r3, r2
 800b844:	d10d      	bne.n	800b862 <TIM_OC3_SetConfig+0x82>
 800b846:	697b      	ldr	r3, [r7, #20]
 800b848:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b84c:	617b      	str	r3, [r7, #20]
 800b84e:	683b      	ldr	r3, [r7, #0]
 800b850:	68db      	ldr	r3, [r3, #12]
 800b852:	021b      	lsls	r3, r3, #8
 800b854:	697a      	ldr	r2, [r7, #20]
 800b856:	4313      	orrs	r3, r2
 800b858:	617b      	str	r3, [r7, #20]
 800b85a:	697b      	ldr	r3, [r7, #20]
 800b85c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b860:	617b      	str	r3, [r7, #20]
 800b862:	687b      	ldr	r3, [r7, #4]
 800b864:	4a16      	ldr	r2, [pc, #88]	; (800b8c0 <TIM_OC3_SetConfig+0xe0>)
 800b866:	4293      	cmp	r3, r2
 800b868:	d003      	beq.n	800b872 <TIM_OC3_SetConfig+0x92>
 800b86a:	687b      	ldr	r3, [r7, #4]
 800b86c:	4a15      	ldr	r2, [pc, #84]	; (800b8c4 <TIM_OC3_SetConfig+0xe4>)
 800b86e:	4293      	cmp	r3, r2
 800b870:	d113      	bne.n	800b89a <TIM_OC3_SetConfig+0xba>
 800b872:	693b      	ldr	r3, [r7, #16]
 800b874:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800b878:	613b      	str	r3, [r7, #16]
 800b87a:	693b      	ldr	r3, [r7, #16]
 800b87c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b880:	613b      	str	r3, [r7, #16]
 800b882:	683b      	ldr	r3, [r7, #0]
 800b884:	695b      	ldr	r3, [r3, #20]
 800b886:	011b      	lsls	r3, r3, #4
 800b888:	693a      	ldr	r2, [r7, #16]
 800b88a:	4313      	orrs	r3, r2
 800b88c:	613b      	str	r3, [r7, #16]
 800b88e:	683b      	ldr	r3, [r7, #0]
 800b890:	699b      	ldr	r3, [r3, #24]
 800b892:	011b      	lsls	r3, r3, #4
 800b894:	693a      	ldr	r2, [r7, #16]
 800b896:	4313      	orrs	r3, r2
 800b898:	613b      	str	r3, [r7, #16]
 800b89a:	687b      	ldr	r3, [r7, #4]
 800b89c:	693a      	ldr	r2, [r7, #16]
 800b89e:	605a      	str	r2, [r3, #4]
 800b8a0:	687b      	ldr	r3, [r7, #4]
 800b8a2:	68fa      	ldr	r2, [r7, #12]
 800b8a4:	61da      	str	r2, [r3, #28]
 800b8a6:	683b      	ldr	r3, [r7, #0]
 800b8a8:	685a      	ldr	r2, [r3, #4]
 800b8aa:	687b      	ldr	r3, [r7, #4]
 800b8ac:	63da      	str	r2, [r3, #60]	; 0x3c
 800b8ae:	687b      	ldr	r3, [r7, #4]
 800b8b0:	697a      	ldr	r2, [r7, #20]
 800b8b2:	621a      	str	r2, [r3, #32]
 800b8b4:	bf00      	nop
 800b8b6:	371c      	adds	r7, #28
 800b8b8:	46bd      	mov	sp, r7
 800b8ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8be:	4770      	bx	lr
 800b8c0:	40010000 	.word	0x40010000
 800b8c4:	40010400 	.word	0x40010400

0800b8c8 <TIM_OC4_SetConfig>:
 800b8c8:	b480      	push	{r7}
 800b8ca:	b087      	sub	sp, #28
 800b8cc:	af00      	add	r7, sp, #0
 800b8ce:	6078      	str	r0, [r7, #4]
 800b8d0:	6039      	str	r1, [r7, #0]
 800b8d2:	687b      	ldr	r3, [r7, #4]
 800b8d4:	6a1b      	ldr	r3, [r3, #32]
 800b8d6:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800b8da:	687b      	ldr	r3, [r7, #4]
 800b8dc:	621a      	str	r2, [r3, #32]
 800b8de:	687b      	ldr	r3, [r7, #4]
 800b8e0:	6a1b      	ldr	r3, [r3, #32]
 800b8e2:	613b      	str	r3, [r7, #16]
 800b8e4:	687b      	ldr	r3, [r7, #4]
 800b8e6:	685b      	ldr	r3, [r3, #4]
 800b8e8:	617b      	str	r3, [r7, #20]
 800b8ea:	687b      	ldr	r3, [r7, #4]
 800b8ec:	69db      	ldr	r3, [r3, #28]
 800b8ee:	60fb      	str	r3, [r7, #12]
 800b8f0:	68fb      	ldr	r3, [r7, #12]
 800b8f2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800b8f6:	60fb      	str	r3, [r7, #12]
 800b8f8:	68fb      	ldr	r3, [r7, #12]
 800b8fa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b8fe:	60fb      	str	r3, [r7, #12]
 800b900:	683b      	ldr	r3, [r7, #0]
 800b902:	681b      	ldr	r3, [r3, #0]
 800b904:	021b      	lsls	r3, r3, #8
 800b906:	68fa      	ldr	r2, [r7, #12]
 800b908:	4313      	orrs	r3, r2
 800b90a:	60fb      	str	r3, [r7, #12]
 800b90c:	693b      	ldr	r3, [r7, #16]
 800b90e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b912:	613b      	str	r3, [r7, #16]
 800b914:	683b      	ldr	r3, [r7, #0]
 800b916:	689b      	ldr	r3, [r3, #8]
 800b918:	031b      	lsls	r3, r3, #12
 800b91a:	693a      	ldr	r2, [r7, #16]
 800b91c:	4313      	orrs	r3, r2
 800b91e:	613b      	str	r3, [r7, #16]
 800b920:	687b      	ldr	r3, [r7, #4]
 800b922:	4a12      	ldr	r2, [pc, #72]	; (800b96c <TIM_OC4_SetConfig+0xa4>)
 800b924:	4293      	cmp	r3, r2
 800b926:	d003      	beq.n	800b930 <TIM_OC4_SetConfig+0x68>
 800b928:	687b      	ldr	r3, [r7, #4]
 800b92a:	4a11      	ldr	r2, [pc, #68]	; (800b970 <TIM_OC4_SetConfig+0xa8>)
 800b92c:	4293      	cmp	r3, r2
 800b92e:	d109      	bne.n	800b944 <TIM_OC4_SetConfig+0x7c>
 800b930:	697b      	ldr	r3, [r7, #20]
 800b932:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800b936:	617b      	str	r3, [r7, #20]
 800b938:	683b      	ldr	r3, [r7, #0]
 800b93a:	695b      	ldr	r3, [r3, #20]
 800b93c:	019b      	lsls	r3, r3, #6
 800b93e:	697a      	ldr	r2, [r7, #20]
 800b940:	4313      	orrs	r3, r2
 800b942:	617b      	str	r3, [r7, #20]
 800b944:	687b      	ldr	r3, [r7, #4]
 800b946:	697a      	ldr	r2, [r7, #20]
 800b948:	605a      	str	r2, [r3, #4]
 800b94a:	687b      	ldr	r3, [r7, #4]
 800b94c:	68fa      	ldr	r2, [r7, #12]
 800b94e:	61da      	str	r2, [r3, #28]
 800b950:	683b      	ldr	r3, [r7, #0]
 800b952:	685a      	ldr	r2, [r3, #4]
 800b954:	687b      	ldr	r3, [r7, #4]
 800b956:	641a      	str	r2, [r3, #64]	; 0x40
 800b958:	687b      	ldr	r3, [r7, #4]
 800b95a:	693a      	ldr	r2, [r7, #16]
 800b95c:	621a      	str	r2, [r3, #32]
 800b95e:	bf00      	nop
 800b960:	371c      	adds	r7, #28
 800b962:	46bd      	mov	sp, r7
 800b964:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b968:	4770      	bx	lr
 800b96a:	bf00      	nop
 800b96c:	40010000 	.word	0x40010000
 800b970:	40010400 	.word	0x40010400

0800b974 <TIM_TI1_SetConfig>:
 800b974:	b480      	push	{r7}
 800b976:	b087      	sub	sp, #28
 800b978:	af00      	add	r7, sp, #0
 800b97a:	60f8      	str	r0, [r7, #12]
 800b97c:	60b9      	str	r1, [r7, #8]
 800b97e:	607a      	str	r2, [r7, #4]
 800b980:	603b      	str	r3, [r7, #0]
 800b982:	68fb      	ldr	r3, [r7, #12]
 800b984:	6a1b      	ldr	r3, [r3, #32]
 800b986:	f023 0201 	bic.w	r2, r3, #1
 800b98a:	68fb      	ldr	r3, [r7, #12]
 800b98c:	621a      	str	r2, [r3, #32]
 800b98e:	68fb      	ldr	r3, [r7, #12]
 800b990:	699b      	ldr	r3, [r3, #24]
 800b992:	617b      	str	r3, [r7, #20]
 800b994:	68fb      	ldr	r3, [r7, #12]
 800b996:	6a1b      	ldr	r3, [r3, #32]
 800b998:	613b      	str	r3, [r7, #16]
 800b99a:	68fb      	ldr	r3, [r7, #12]
 800b99c:	4a28      	ldr	r2, [pc, #160]	; (800ba40 <TIM_TI1_SetConfig+0xcc>)
 800b99e:	4293      	cmp	r3, r2
 800b9a0:	d01b      	beq.n	800b9da <TIM_TI1_SetConfig+0x66>
 800b9a2:	68fb      	ldr	r3, [r7, #12]
 800b9a4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b9a8:	d017      	beq.n	800b9da <TIM_TI1_SetConfig+0x66>
 800b9aa:	68fb      	ldr	r3, [r7, #12]
 800b9ac:	4a25      	ldr	r2, [pc, #148]	; (800ba44 <TIM_TI1_SetConfig+0xd0>)
 800b9ae:	4293      	cmp	r3, r2
 800b9b0:	d013      	beq.n	800b9da <TIM_TI1_SetConfig+0x66>
 800b9b2:	68fb      	ldr	r3, [r7, #12]
 800b9b4:	4a24      	ldr	r2, [pc, #144]	; (800ba48 <TIM_TI1_SetConfig+0xd4>)
 800b9b6:	4293      	cmp	r3, r2
 800b9b8:	d00f      	beq.n	800b9da <TIM_TI1_SetConfig+0x66>
 800b9ba:	68fb      	ldr	r3, [r7, #12]
 800b9bc:	4a23      	ldr	r2, [pc, #140]	; (800ba4c <TIM_TI1_SetConfig+0xd8>)
 800b9be:	4293      	cmp	r3, r2
 800b9c0:	d00b      	beq.n	800b9da <TIM_TI1_SetConfig+0x66>
 800b9c2:	68fb      	ldr	r3, [r7, #12]
 800b9c4:	4a22      	ldr	r2, [pc, #136]	; (800ba50 <TIM_TI1_SetConfig+0xdc>)
 800b9c6:	4293      	cmp	r3, r2
 800b9c8:	d007      	beq.n	800b9da <TIM_TI1_SetConfig+0x66>
 800b9ca:	68fb      	ldr	r3, [r7, #12]
 800b9cc:	4a21      	ldr	r2, [pc, #132]	; (800ba54 <TIM_TI1_SetConfig+0xe0>)
 800b9ce:	4293      	cmp	r3, r2
 800b9d0:	d003      	beq.n	800b9da <TIM_TI1_SetConfig+0x66>
 800b9d2:	68fb      	ldr	r3, [r7, #12]
 800b9d4:	4a20      	ldr	r2, [pc, #128]	; (800ba58 <TIM_TI1_SetConfig+0xe4>)
 800b9d6:	4293      	cmp	r3, r2
 800b9d8:	d101      	bne.n	800b9de <TIM_TI1_SetConfig+0x6a>
 800b9da:	2301      	movs	r3, #1
 800b9dc:	e000      	b.n	800b9e0 <TIM_TI1_SetConfig+0x6c>
 800b9de:	2300      	movs	r3, #0
 800b9e0:	2b00      	cmp	r3, #0
 800b9e2:	d008      	beq.n	800b9f6 <TIM_TI1_SetConfig+0x82>
 800b9e4:	697b      	ldr	r3, [r7, #20]
 800b9e6:	f023 0303 	bic.w	r3, r3, #3
 800b9ea:	617b      	str	r3, [r7, #20]
 800b9ec:	697a      	ldr	r2, [r7, #20]
 800b9ee:	687b      	ldr	r3, [r7, #4]
 800b9f0:	4313      	orrs	r3, r2
 800b9f2:	617b      	str	r3, [r7, #20]
 800b9f4:	e003      	b.n	800b9fe <TIM_TI1_SetConfig+0x8a>
 800b9f6:	697b      	ldr	r3, [r7, #20]
 800b9f8:	f043 0301 	orr.w	r3, r3, #1
 800b9fc:	617b      	str	r3, [r7, #20]
 800b9fe:	697b      	ldr	r3, [r7, #20]
 800ba00:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800ba04:	617b      	str	r3, [r7, #20]
 800ba06:	683b      	ldr	r3, [r7, #0]
 800ba08:	011b      	lsls	r3, r3, #4
 800ba0a:	b2db      	uxtb	r3, r3
 800ba0c:	697a      	ldr	r2, [r7, #20]
 800ba0e:	4313      	orrs	r3, r2
 800ba10:	617b      	str	r3, [r7, #20]
 800ba12:	693b      	ldr	r3, [r7, #16]
 800ba14:	f023 030a 	bic.w	r3, r3, #10
 800ba18:	613b      	str	r3, [r7, #16]
 800ba1a:	68bb      	ldr	r3, [r7, #8]
 800ba1c:	f003 030a 	and.w	r3, r3, #10
 800ba20:	693a      	ldr	r2, [r7, #16]
 800ba22:	4313      	orrs	r3, r2
 800ba24:	613b      	str	r3, [r7, #16]
 800ba26:	68fb      	ldr	r3, [r7, #12]
 800ba28:	697a      	ldr	r2, [r7, #20]
 800ba2a:	619a      	str	r2, [r3, #24]
 800ba2c:	68fb      	ldr	r3, [r7, #12]
 800ba2e:	693a      	ldr	r2, [r7, #16]
 800ba30:	621a      	str	r2, [r3, #32]
 800ba32:	bf00      	nop
 800ba34:	371c      	adds	r7, #28
 800ba36:	46bd      	mov	sp, r7
 800ba38:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba3c:	4770      	bx	lr
 800ba3e:	bf00      	nop
 800ba40:	40010000 	.word	0x40010000
 800ba44:	40000400 	.word	0x40000400
 800ba48:	40000800 	.word	0x40000800
 800ba4c:	40000c00 	.word	0x40000c00
 800ba50:	40010400 	.word	0x40010400
 800ba54:	40014000 	.word	0x40014000
 800ba58:	40001800 	.word	0x40001800

0800ba5c <TIM_TI1_ConfigInputStage>:
 800ba5c:	b480      	push	{r7}
 800ba5e:	b087      	sub	sp, #28
 800ba60:	af00      	add	r7, sp, #0
 800ba62:	60f8      	str	r0, [r7, #12]
 800ba64:	60b9      	str	r1, [r7, #8]
 800ba66:	607a      	str	r2, [r7, #4]
 800ba68:	68fb      	ldr	r3, [r7, #12]
 800ba6a:	6a1b      	ldr	r3, [r3, #32]
 800ba6c:	617b      	str	r3, [r7, #20]
 800ba6e:	68fb      	ldr	r3, [r7, #12]
 800ba70:	6a1b      	ldr	r3, [r3, #32]
 800ba72:	f023 0201 	bic.w	r2, r3, #1
 800ba76:	68fb      	ldr	r3, [r7, #12]
 800ba78:	621a      	str	r2, [r3, #32]
 800ba7a:	68fb      	ldr	r3, [r7, #12]
 800ba7c:	699b      	ldr	r3, [r3, #24]
 800ba7e:	613b      	str	r3, [r7, #16]
 800ba80:	693b      	ldr	r3, [r7, #16]
 800ba82:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800ba86:	613b      	str	r3, [r7, #16]
 800ba88:	687b      	ldr	r3, [r7, #4]
 800ba8a:	011b      	lsls	r3, r3, #4
 800ba8c:	693a      	ldr	r2, [r7, #16]
 800ba8e:	4313      	orrs	r3, r2
 800ba90:	613b      	str	r3, [r7, #16]
 800ba92:	697b      	ldr	r3, [r7, #20]
 800ba94:	f023 030a 	bic.w	r3, r3, #10
 800ba98:	617b      	str	r3, [r7, #20]
 800ba9a:	697a      	ldr	r2, [r7, #20]
 800ba9c:	68bb      	ldr	r3, [r7, #8]
 800ba9e:	4313      	orrs	r3, r2
 800baa0:	617b      	str	r3, [r7, #20]
 800baa2:	68fb      	ldr	r3, [r7, #12]
 800baa4:	693a      	ldr	r2, [r7, #16]
 800baa6:	619a      	str	r2, [r3, #24]
 800baa8:	68fb      	ldr	r3, [r7, #12]
 800baaa:	697a      	ldr	r2, [r7, #20]
 800baac:	621a      	str	r2, [r3, #32]
 800baae:	bf00      	nop
 800bab0:	371c      	adds	r7, #28
 800bab2:	46bd      	mov	sp, r7
 800bab4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bab8:	4770      	bx	lr

0800baba <TIM_TI2_SetConfig>:
 800baba:	b480      	push	{r7}
 800babc:	b087      	sub	sp, #28
 800babe:	af00      	add	r7, sp, #0
 800bac0:	60f8      	str	r0, [r7, #12]
 800bac2:	60b9      	str	r1, [r7, #8]
 800bac4:	607a      	str	r2, [r7, #4]
 800bac6:	603b      	str	r3, [r7, #0]
 800bac8:	68fb      	ldr	r3, [r7, #12]
 800baca:	6a1b      	ldr	r3, [r3, #32]
 800bacc:	f023 0210 	bic.w	r2, r3, #16
 800bad0:	68fb      	ldr	r3, [r7, #12]
 800bad2:	621a      	str	r2, [r3, #32]
 800bad4:	68fb      	ldr	r3, [r7, #12]
 800bad6:	699b      	ldr	r3, [r3, #24]
 800bad8:	617b      	str	r3, [r7, #20]
 800bada:	68fb      	ldr	r3, [r7, #12]
 800badc:	6a1b      	ldr	r3, [r3, #32]
 800bade:	613b      	str	r3, [r7, #16]
 800bae0:	697b      	ldr	r3, [r7, #20]
 800bae2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800bae6:	617b      	str	r3, [r7, #20]
 800bae8:	687b      	ldr	r3, [r7, #4]
 800baea:	021b      	lsls	r3, r3, #8
 800baec:	697a      	ldr	r2, [r7, #20]
 800baee:	4313      	orrs	r3, r2
 800baf0:	617b      	str	r3, [r7, #20]
 800baf2:	697b      	ldr	r3, [r7, #20]
 800baf4:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800baf8:	617b      	str	r3, [r7, #20]
 800bafa:	683b      	ldr	r3, [r7, #0]
 800bafc:	031b      	lsls	r3, r3, #12
 800bafe:	b29b      	uxth	r3, r3
 800bb00:	697a      	ldr	r2, [r7, #20]
 800bb02:	4313      	orrs	r3, r2
 800bb04:	617b      	str	r3, [r7, #20]
 800bb06:	693b      	ldr	r3, [r7, #16]
 800bb08:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800bb0c:	613b      	str	r3, [r7, #16]
 800bb0e:	68bb      	ldr	r3, [r7, #8]
 800bb10:	011b      	lsls	r3, r3, #4
 800bb12:	f003 03a0 	and.w	r3, r3, #160	; 0xa0
 800bb16:	693a      	ldr	r2, [r7, #16]
 800bb18:	4313      	orrs	r3, r2
 800bb1a:	613b      	str	r3, [r7, #16]
 800bb1c:	68fb      	ldr	r3, [r7, #12]
 800bb1e:	697a      	ldr	r2, [r7, #20]
 800bb20:	619a      	str	r2, [r3, #24]
 800bb22:	68fb      	ldr	r3, [r7, #12]
 800bb24:	693a      	ldr	r2, [r7, #16]
 800bb26:	621a      	str	r2, [r3, #32]
 800bb28:	bf00      	nop
 800bb2a:	371c      	adds	r7, #28
 800bb2c:	46bd      	mov	sp, r7
 800bb2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb32:	4770      	bx	lr

0800bb34 <TIM_TI2_ConfigInputStage>:
 800bb34:	b480      	push	{r7}
 800bb36:	b087      	sub	sp, #28
 800bb38:	af00      	add	r7, sp, #0
 800bb3a:	60f8      	str	r0, [r7, #12]
 800bb3c:	60b9      	str	r1, [r7, #8]
 800bb3e:	607a      	str	r2, [r7, #4]
 800bb40:	68fb      	ldr	r3, [r7, #12]
 800bb42:	6a1b      	ldr	r3, [r3, #32]
 800bb44:	f023 0210 	bic.w	r2, r3, #16
 800bb48:	68fb      	ldr	r3, [r7, #12]
 800bb4a:	621a      	str	r2, [r3, #32]
 800bb4c:	68fb      	ldr	r3, [r7, #12]
 800bb4e:	699b      	ldr	r3, [r3, #24]
 800bb50:	617b      	str	r3, [r7, #20]
 800bb52:	68fb      	ldr	r3, [r7, #12]
 800bb54:	6a1b      	ldr	r3, [r3, #32]
 800bb56:	613b      	str	r3, [r7, #16]
 800bb58:	697b      	ldr	r3, [r7, #20]
 800bb5a:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800bb5e:	617b      	str	r3, [r7, #20]
 800bb60:	687b      	ldr	r3, [r7, #4]
 800bb62:	031b      	lsls	r3, r3, #12
 800bb64:	697a      	ldr	r2, [r7, #20]
 800bb66:	4313      	orrs	r3, r2
 800bb68:	617b      	str	r3, [r7, #20]
 800bb6a:	693b      	ldr	r3, [r7, #16]
 800bb6c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800bb70:	613b      	str	r3, [r7, #16]
 800bb72:	68bb      	ldr	r3, [r7, #8]
 800bb74:	011b      	lsls	r3, r3, #4
 800bb76:	693a      	ldr	r2, [r7, #16]
 800bb78:	4313      	orrs	r3, r2
 800bb7a:	613b      	str	r3, [r7, #16]
 800bb7c:	68fb      	ldr	r3, [r7, #12]
 800bb7e:	697a      	ldr	r2, [r7, #20]
 800bb80:	619a      	str	r2, [r3, #24]
 800bb82:	68fb      	ldr	r3, [r7, #12]
 800bb84:	693a      	ldr	r2, [r7, #16]
 800bb86:	621a      	str	r2, [r3, #32]
 800bb88:	bf00      	nop
 800bb8a:	371c      	adds	r7, #28
 800bb8c:	46bd      	mov	sp, r7
 800bb8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb92:	4770      	bx	lr

0800bb94 <TIM_TI3_SetConfig>:
 800bb94:	b480      	push	{r7}
 800bb96:	b087      	sub	sp, #28
 800bb98:	af00      	add	r7, sp, #0
 800bb9a:	60f8      	str	r0, [r7, #12]
 800bb9c:	60b9      	str	r1, [r7, #8]
 800bb9e:	607a      	str	r2, [r7, #4]
 800bba0:	603b      	str	r3, [r7, #0]
 800bba2:	68fb      	ldr	r3, [r7, #12]
 800bba4:	6a1b      	ldr	r3, [r3, #32]
 800bba6:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800bbaa:	68fb      	ldr	r3, [r7, #12]
 800bbac:	621a      	str	r2, [r3, #32]
 800bbae:	68fb      	ldr	r3, [r7, #12]
 800bbb0:	69db      	ldr	r3, [r3, #28]
 800bbb2:	617b      	str	r3, [r7, #20]
 800bbb4:	68fb      	ldr	r3, [r7, #12]
 800bbb6:	6a1b      	ldr	r3, [r3, #32]
 800bbb8:	613b      	str	r3, [r7, #16]
 800bbba:	697b      	ldr	r3, [r7, #20]
 800bbbc:	f023 0303 	bic.w	r3, r3, #3
 800bbc0:	617b      	str	r3, [r7, #20]
 800bbc2:	697a      	ldr	r2, [r7, #20]
 800bbc4:	687b      	ldr	r3, [r7, #4]
 800bbc6:	4313      	orrs	r3, r2
 800bbc8:	617b      	str	r3, [r7, #20]
 800bbca:	697b      	ldr	r3, [r7, #20]
 800bbcc:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800bbd0:	617b      	str	r3, [r7, #20]
 800bbd2:	683b      	ldr	r3, [r7, #0]
 800bbd4:	011b      	lsls	r3, r3, #4
 800bbd6:	b2db      	uxtb	r3, r3
 800bbd8:	697a      	ldr	r2, [r7, #20]
 800bbda:	4313      	orrs	r3, r2
 800bbdc:	617b      	str	r3, [r7, #20]
 800bbde:	693b      	ldr	r3, [r7, #16]
 800bbe0:	f423 6320 	bic.w	r3, r3, #2560	; 0xa00
 800bbe4:	613b      	str	r3, [r7, #16]
 800bbe6:	68bb      	ldr	r3, [r7, #8]
 800bbe8:	021b      	lsls	r3, r3, #8
 800bbea:	f403 6320 	and.w	r3, r3, #2560	; 0xa00
 800bbee:	693a      	ldr	r2, [r7, #16]
 800bbf0:	4313      	orrs	r3, r2
 800bbf2:	613b      	str	r3, [r7, #16]
 800bbf4:	68fb      	ldr	r3, [r7, #12]
 800bbf6:	697a      	ldr	r2, [r7, #20]
 800bbf8:	61da      	str	r2, [r3, #28]
 800bbfa:	68fb      	ldr	r3, [r7, #12]
 800bbfc:	693a      	ldr	r2, [r7, #16]
 800bbfe:	621a      	str	r2, [r3, #32]
 800bc00:	bf00      	nop
 800bc02:	371c      	adds	r7, #28
 800bc04:	46bd      	mov	sp, r7
 800bc06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc0a:	4770      	bx	lr

0800bc0c <TIM_TI4_SetConfig>:
 800bc0c:	b480      	push	{r7}
 800bc0e:	b087      	sub	sp, #28
 800bc10:	af00      	add	r7, sp, #0
 800bc12:	60f8      	str	r0, [r7, #12]
 800bc14:	60b9      	str	r1, [r7, #8]
 800bc16:	607a      	str	r2, [r7, #4]
 800bc18:	603b      	str	r3, [r7, #0]
 800bc1a:	68fb      	ldr	r3, [r7, #12]
 800bc1c:	6a1b      	ldr	r3, [r3, #32]
 800bc1e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800bc22:	68fb      	ldr	r3, [r7, #12]
 800bc24:	621a      	str	r2, [r3, #32]
 800bc26:	68fb      	ldr	r3, [r7, #12]
 800bc28:	69db      	ldr	r3, [r3, #28]
 800bc2a:	617b      	str	r3, [r7, #20]
 800bc2c:	68fb      	ldr	r3, [r7, #12]
 800bc2e:	6a1b      	ldr	r3, [r3, #32]
 800bc30:	613b      	str	r3, [r7, #16]
 800bc32:	697b      	ldr	r3, [r7, #20]
 800bc34:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800bc38:	617b      	str	r3, [r7, #20]
 800bc3a:	687b      	ldr	r3, [r7, #4]
 800bc3c:	021b      	lsls	r3, r3, #8
 800bc3e:	697a      	ldr	r2, [r7, #20]
 800bc40:	4313      	orrs	r3, r2
 800bc42:	617b      	str	r3, [r7, #20]
 800bc44:	697b      	ldr	r3, [r7, #20]
 800bc46:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800bc4a:	617b      	str	r3, [r7, #20]
 800bc4c:	683b      	ldr	r3, [r7, #0]
 800bc4e:	031b      	lsls	r3, r3, #12
 800bc50:	b29b      	uxth	r3, r3
 800bc52:	697a      	ldr	r2, [r7, #20]
 800bc54:	4313      	orrs	r3, r2
 800bc56:	617b      	str	r3, [r7, #20]
 800bc58:	693b      	ldr	r3, [r7, #16]
 800bc5a:	f423 4320 	bic.w	r3, r3, #40960	; 0xa000
 800bc5e:	613b      	str	r3, [r7, #16]
 800bc60:	68bb      	ldr	r3, [r7, #8]
 800bc62:	031b      	lsls	r3, r3, #12
 800bc64:	f403 4320 	and.w	r3, r3, #40960	; 0xa000
 800bc68:	693a      	ldr	r2, [r7, #16]
 800bc6a:	4313      	orrs	r3, r2
 800bc6c:	613b      	str	r3, [r7, #16]
 800bc6e:	68fb      	ldr	r3, [r7, #12]
 800bc70:	697a      	ldr	r2, [r7, #20]
 800bc72:	61da      	str	r2, [r3, #28]
 800bc74:	68fb      	ldr	r3, [r7, #12]
 800bc76:	693a      	ldr	r2, [r7, #16]
 800bc78:	621a      	str	r2, [r3, #32]
 800bc7a:	bf00      	nop
 800bc7c:	371c      	adds	r7, #28
 800bc7e:	46bd      	mov	sp, r7
 800bc80:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc84:	4770      	bx	lr

0800bc86 <TIM_ITRx_SetConfig>:
 800bc86:	b480      	push	{r7}
 800bc88:	b085      	sub	sp, #20
 800bc8a:	af00      	add	r7, sp, #0
 800bc8c:	6078      	str	r0, [r7, #4]
 800bc8e:	6039      	str	r1, [r7, #0]
 800bc90:	687b      	ldr	r3, [r7, #4]
 800bc92:	689b      	ldr	r3, [r3, #8]
 800bc94:	60fb      	str	r3, [r7, #12]
 800bc96:	68fb      	ldr	r3, [r7, #12]
 800bc98:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800bc9c:	60fb      	str	r3, [r7, #12]
 800bc9e:	683a      	ldr	r2, [r7, #0]
 800bca0:	68fb      	ldr	r3, [r7, #12]
 800bca2:	4313      	orrs	r3, r2
 800bca4:	f043 0307 	orr.w	r3, r3, #7
 800bca8:	60fb      	str	r3, [r7, #12]
 800bcaa:	687b      	ldr	r3, [r7, #4]
 800bcac:	68fa      	ldr	r2, [r7, #12]
 800bcae:	609a      	str	r2, [r3, #8]
 800bcb0:	bf00      	nop
 800bcb2:	3714      	adds	r7, #20
 800bcb4:	46bd      	mov	sp, r7
 800bcb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcba:	4770      	bx	lr

0800bcbc <TIM_ETR_SetConfig>:
 800bcbc:	b480      	push	{r7}
 800bcbe:	b087      	sub	sp, #28
 800bcc0:	af00      	add	r7, sp, #0
 800bcc2:	60f8      	str	r0, [r7, #12]
 800bcc4:	60b9      	str	r1, [r7, #8]
 800bcc6:	607a      	str	r2, [r7, #4]
 800bcc8:	603b      	str	r3, [r7, #0]
 800bcca:	68fb      	ldr	r3, [r7, #12]
 800bccc:	689b      	ldr	r3, [r3, #8]
 800bcce:	617b      	str	r3, [r7, #20]
 800bcd0:	697b      	ldr	r3, [r7, #20]
 800bcd2:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800bcd6:	617b      	str	r3, [r7, #20]
 800bcd8:	683b      	ldr	r3, [r7, #0]
 800bcda:	021a      	lsls	r2, r3, #8
 800bcdc:	687b      	ldr	r3, [r7, #4]
 800bcde:	431a      	orrs	r2, r3
 800bce0:	68bb      	ldr	r3, [r7, #8]
 800bce2:	4313      	orrs	r3, r2
 800bce4:	697a      	ldr	r2, [r7, #20]
 800bce6:	4313      	orrs	r3, r2
 800bce8:	617b      	str	r3, [r7, #20]
 800bcea:	68fb      	ldr	r3, [r7, #12]
 800bcec:	697a      	ldr	r2, [r7, #20]
 800bcee:	609a      	str	r2, [r3, #8]
 800bcf0:	bf00      	nop
 800bcf2:	371c      	adds	r7, #28
 800bcf4:	46bd      	mov	sp, r7
 800bcf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcfa:	4770      	bx	lr

0800bcfc <TIM_CCxChannelCmd>:
 800bcfc:	b480      	push	{r7}
 800bcfe:	b087      	sub	sp, #28
 800bd00:	af00      	add	r7, sp, #0
 800bd02:	60f8      	str	r0, [r7, #12]
 800bd04:	60b9      	str	r1, [r7, #8]
 800bd06:	607a      	str	r2, [r7, #4]
 800bd08:	68bb      	ldr	r3, [r7, #8]
 800bd0a:	f003 031f 	and.w	r3, r3, #31
 800bd0e:	2201      	movs	r2, #1
 800bd10:	fa02 f303 	lsl.w	r3, r2, r3
 800bd14:	617b      	str	r3, [r7, #20]
 800bd16:	68fb      	ldr	r3, [r7, #12]
 800bd18:	6a1a      	ldr	r2, [r3, #32]
 800bd1a:	697b      	ldr	r3, [r7, #20]
 800bd1c:	43db      	mvns	r3, r3
 800bd1e:	401a      	ands	r2, r3
 800bd20:	68fb      	ldr	r3, [r7, #12]
 800bd22:	621a      	str	r2, [r3, #32]
 800bd24:	68fb      	ldr	r3, [r7, #12]
 800bd26:	6a1a      	ldr	r2, [r3, #32]
 800bd28:	68bb      	ldr	r3, [r7, #8]
 800bd2a:	f003 031f 	and.w	r3, r3, #31
 800bd2e:	6879      	ldr	r1, [r7, #4]
 800bd30:	fa01 f303 	lsl.w	r3, r1, r3
 800bd34:	431a      	orrs	r2, r3
 800bd36:	68fb      	ldr	r3, [r7, #12]
 800bd38:	621a      	str	r2, [r3, #32]
 800bd3a:	bf00      	nop
 800bd3c:	371c      	adds	r7, #28
 800bd3e:	46bd      	mov	sp, r7
 800bd40:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd44:	4770      	bx	lr
	...

0800bd48 <HAL_TIMEx_MasterConfigSynchronization>:
 800bd48:	b480      	push	{r7}
 800bd4a:	b085      	sub	sp, #20
 800bd4c:	af00      	add	r7, sp, #0
 800bd4e:	6078      	str	r0, [r7, #4]
 800bd50:	6039      	str	r1, [r7, #0]
 800bd52:	687b      	ldr	r3, [r7, #4]
 800bd54:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800bd58:	2b01      	cmp	r3, #1
 800bd5a:	d101      	bne.n	800bd60 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800bd5c:	2302      	movs	r3, #2
 800bd5e:	e05a      	b.n	800be16 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 800bd60:	687b      	ldr	r3, [r7, #4]
 800bd62:	2201      	movs	r2, #1
 800bd64:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bd68:	687b      	ldr	r3, [r7, #4]
 800bd6a:	2202      	movs	r2, #2
 800bd6c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bd70:	687b      	ldr	r3, [r7, #4]
 800bd72:	681b      	ldr	r3, [r3, #0]
 800bd74:	685b      	ldr	r3, [r3, #4]
 800bd76:	60fb      	str	r3, [r7, #12]
 800bd78:	687b      	ldr	r3, [r7, #4]
 800bd7a:	681b      	ldr	r3, [r3, #0]
 800bd7c:	689b      	ldr	r3, [r3, #8]
 800bd7e:	60bb      	str	r3, [r7, #8]
 800bd80:	68fb      	ldr	r3, [r7, #12]
 800bd82:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800bd86:	60fb      	str	r3, [r7, #12]
 800bd88:	683b      	ldr	r3, [r7, #0]
 800bd8a:	681b      	ldr	r3, [r3, #0]
 800bd8c:	68fa      	ldr	r2, [r7, #12]
 800bd8e:	4313      	orrs	r3, r2
 800bd90:	60fb      	str	r3, [r7, #12]
 800bd92:	687b      	ldr	r3, [r7, #4]
 800bd94:	681b      	ldr	r3, [r3, #0]
 800bd96:	68fa      	ldr	r2, [r7, #12]
 800bd98:	605a      	str	r2, [r3, #4]
 800bd9a:	687b      	ldr	r3, [r7, #4]
 800bd9c:	681b      	ldr	r3, [r3, #0]
 800bd9e:	4a21      	ldr	r2, [pc, #132]	; (800be24 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 800bda0:	4293      	cmp	r3, r2
 800bda2:	d022      	beq.n	800bdea <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bda4:	687b      	ldr	r3, [r7, #4]
 800bda6:	681b      	ldr	r3, [r3, #0]
 800bda8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800bdac:	d01d      	beq.n	800bdea <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bdae:	687b      	ldr	r3, [r7, #4]
 800bdb0:	681b      	ldr	r3, [r3, #0]
 800bdb2:	4a1d      	ldr	r2, [pc, #116]	; (800be28 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 800bdb4:	4293      	cmp	r3, r2
 800bdb6:	d018      	beq.n	800bdea <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bdb8:	687b      	ldr	r3, [r7, #4]
 800bdba:	681b      	ldr	r3, [r3, #0]
 800bdbc:	4a1b      	ldr	r2, [pc, #108]	; (800be2c <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800bdbe:	4293      	cmp	r3, r2
 800bdc0:	d013      	beq.n	800bdea <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bdc2:	687b      	ldr	r3, [r7, #4]
 800bdc4:	681b      	ldr	r3, [r3, #0]
 800bdc6:	4a1a      	ldr	r2, [pc, #104]	; (800be30 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 800bdc8:	4293      	cmp	r3, r2
 800bdca:	d00e      	beq.n	800bdea <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bdcc:	687b      	ldr	r3, [r7, #4]
 800bdce:	681b      	ldr	r3, [r3, #0]
 800bdd0:	4a18      	ldr	r2, [pc, #96]	; (800be34 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 800bdd2:	4293      	cmp	r3, r2
 800bdd4:	d009      	beq.n	800bdea <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bdd6:	687b      	ldr	r3, [r7, #4]
 800bdd8:	681b      	ldr	r3, [r3, #0]
 800bdda:	4a17      	ldr	r2, [pc, #92]	; (800be38 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 800bddc:	4293      	cmp	r3, r2
 800bdde:	d004      	beq.n	800bdea <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bde0:	687b      	ldr	r3, [r7, #4]
 800bde2:	681b      	ldr	r3, [r3, #0]
 800bde4:	4a15      	ldr	r2, [pc, #84]	; (800be3c <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800bde6:	4293      	cmp	r3, r2
 800bde8:	d10c      	bne.n	800be04 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 800bdea:	68bb      	ldr	r3, [r7, #8]
 800bdec:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800bdf0:	60bb      	str	r3, [r7, #8]
 800bdf2:	683b      	ldr	r3, [r7, #0]
 800bdf4:	685b      	ldr	r3, [r3, #4]
 800bdf6:	68ba      	ldr	r2, [r7, #8]
 800bdf8:	4313      	orrs	r3, r2
 800bdfa:	60bb      	str	r3, [r7, #8]
 800bdfc:	687b      	ldr	r3, [r7, #4]
 800bdfe:	681b      	ldr	r3, [r3, #0]
 800be00:	68ba      	ldr	r2, [r7, #8]
 800be02:	609a      	str	r2, [r3, #8]
 800be04:	687b      	ldr	r3, [r7, #4]
 800be06:	2201      	movs	r2, #1
 800be08:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800be0c:	687b      	ldr	r3, [r7, #4]
 800be0e:	2200      	movs	r2, #0
 800be10:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800be14:	2300      	movs	r3, #0
 800be16:	4618      	mov	r0, r3
 800be18:	3714      	adds	r7, #20
 800be1a:	46bd      	mov	sp, r7
 800be1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be20:	4770      	bx	lr
 800be22:	bf00      	nop
 800be24:	40010000 	.word	0x40010000
 800be28:	40000400 	.word	0x40000400
 800be2c:	40000800 	.word	0x40000800
 800be30:	40000c00 	.word	0x40000c00
 800be34:	40010400 	.word	0x40010400
 800be38:	40014000 	.word	0x40014000
 800be3c:	40001800 	.word	0x40001800

0800be40 <HAL_TIMEx_ConfigBreakDeadTime>:
 800be40:	b480      	push	{r7}
 800be42:	b085      	sub	sp, #20
 800be44:	af00      	add	r7, sp, #0
 800be46:	6078      	str	r0, [r7, #4]
 800be48:	6039      	str	r1, [r7, #0]
 800be4a:	2300      	movs	r3, #0
 800be4c:	60fb      	str	r3, [r7, #12]
 800be4e:	687b      	ldr	r3, [r7, #4]
 800be50:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800be54:	2b01      	cmp	r3, #1
 800be56:	d101      	bne.n	800be5c <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 800be58:	2302      	movs	r3, #2
 800be5a:	e03d      	b.n	800bed8 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 800be5c:	687b      	ldr	r3, [r7, #4]
 800be5e:	2201      	movs	r2, #1
 800be60:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800be64:	68fb      	ldr	r3, [r7, #12]
 800be66:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 800be6a:	683b      	ldr	r3, [r7, #0]
 800be6c:	68db      	ldr	r3, [r3, #12]
 800be6e:	4313      	orrs	r3, r2
 800be70:	60fb      	str	r3, [r7, #12]
 800be72:	68fb      	ldr	r3, [r7, #12]
 800be74:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800be78:	683b      	ldr	r3, [r7, #0]
 800be7a:	689b      	ldr	r3, [r3, #8]
 800be7c:	4313      	orrs	r3, r2
 800be7e:	60fb      	str	r3, [r7, #12]
 800be80:	68fb      	ldr	r3, [r7, #12]
 800be82:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 800be86:	683b      	ldr	r3, [r7, #0]
 800be88:	685b      	ldr	r3, [r3, #4]
 800be8a:	4313      	orrs	r3, r2
 800be8c:	60fb      	str	r3, [r7, #12]
 800be8e:	68fb      	ldr	r3, [r7, #12]
 800be90:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 800be94:	683b      	ldr	r3, [r7, #0]
 800be96:	681b      	ldr	r3, [r3, #0]
 800be98:	4313      	orrs	r3, r2
 800be9a:	60fb      	str	r3, [r7, #12]
 800be9c:	68fb      	ldr	r3, [r7, #12]
 800be9e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800bea2:	683b      	ldr	r3, [r7, #0]
 800bea4:	691b      	ldr	r3, [r3, #16]
 800bea6:	4313      	orrs	r3, r2
 800bea8:	60fb      	str	r3, [r7, #12]
 800beaa:	68fb      	ldr	r3, [r7, #12]
 800beac:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 800beb0:	683b      	ldr	r3, [r7, #0]
 800beb2:	695b      	ldr	r3, [r3, #20]
 800beb4:	4313      	orrs	r3, r2
 800beb6:	60fb      	str	r3, [r7, #12]
 800beb8:	68fb      	ldr	r3, [r7, #12]
 800beba:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 800bebe:	683b      	ldr	r3, [r7, #0]
 800bec0:	69db      	ldr	r3, [r3, #28]
 800bec2:	4313      	orrs	r3, r2
 800bec4:	60fb      	str	r3, [r7, #12]
 800bec6:	687b      	ldr	r3, [r7, #4]
 800bec8:	681b      	ldr	r3, [r3, #0]
 800beca:	68fa      	ldr	r2, [r7, #12]
 800becc:	645a      	str	r2, [r3, #68]	; 0x44
 800bece:	687b      	ldr	r3, [r7, #4]
 800bed0:	2200      	movs	r2, #0
 800bed2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bed6:	2300      	movs	r3, #0
 800bed8:	4618      	mov	r0, r3
 800beda:	3714      	adds	r7, #20
 800bedc:	46bd      	mov	sp, r7
 800bede:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bee2:	4770      	bx	lr

0800bee4 <HAL_TIMEx_CommutCallback>:
 800bee4:	b480      	push	{r7}
 800bee6:	b083      	sub	sp, #12
 800bee8:	af00      	add	r7, sp, #0
 800beea:	6078      	str	r0, [r7, #4]
 800beec:	bf00      	nop
 800beee:	370c      	adds	r7, #12
 800bef0:	46bd      	mov	sp, r7
 800bef2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bef6:	4770      	bx	lr

0800bef8 <HAL_TIMEx_BreakCallback>:
 800bef8:	b480      	push	{r7}
 800befa:	b083      	sub	sp, #12
 800befc:	af00      	add	r7, sp, #0
 800befe:	6078      	str	r0, [r7, #4]
 800bf00:	bf00      	nop
 800bf02:	370c      	adds	r7, #12
 800bf04:	46bd      	mov	sp, r7
 800bf06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf0a:	4770      	bx	lr

0800bf0c <HAL_UART_Init>:
 800bf0c:	b580      	push	{r7, lr}
 800bf0e:	b082      	sub	sp, #8
 800bf10:	af00      	add	r7, sp, #0
 800bf12:	6078      	str	r0, [r7, #4]
 800bf14:	687b      	ldr	r3, [r7, #4]
 800bf16:	2b00      	cmp	r3, #0
 800bf18:	d101      	bne.n	800bf1e <HAL_UART_Init+0x12>
 800bf1a:	2301      	movs	r3, #1
 800bf1c:	e03f      	b.n	800bf9e <HAL_UART_Init+0x92>
 800bf1e:	687b      	ldr	r3, [r7, #4]
 800bf20:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800bf24:	b2db      	uxtb	r3, r3
 800bf26:	2b00      	cmp	r3, #0
 800bf28:	d106      	bne.n	800bf38 <HAL_UART_Init+0x2c>
 800bf2a:	687b      	ldr	r3, [r7, #4]
 800bf2c:	2200      	movs	r2, #0
 800bf2e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bf32:	6878      	ldr	r0, [r7, #4]
 800bf34:	f7fb f95c 	bl	80071f0 <HAL_UART_MspInit>
 800bf38:	687b      	ldr	r3, [r7, #4]
 800bf3a:	2224      	movs	r2, #36	; 0x24
 800bf3c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bf40:	687b      	ldr	r3, [r7, #4]
 800bf42:	681b      	ldr	r3, [r3, #0]
 800bf44:	68da      	ldr	r2, [r3, #12]
 800bf46:	687b      	ldr	r3, [r7, #4]
 800bf48:	681b      	ldr	r3, [r3, #0]
 800bf4a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800bf4e:	60da      	str	r2, [r3, #12]
 800bf50:	6878      	ldr	r0, [r7, #4]
 800bf52:	f000 fe81 	bl	800cc58 <UART_SetConfig>
 800bf56:	687b      	ldr	r3, [r7, #4]
 800bf58:	681b      	ldr	r3, [r3, #0]
 800bf5a:	691a      	ldr	r2, [r3, #16]
 800bf5c:	687b      	ldr	r3, [r7, #4]
 800bf5e:	681b      	ldr	r3, [r3, #0]
 800bf60:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800bf64:	611a      	str	r2, [r3, #16]
 800bf66:	687b      	ldr	r3, [r7, #4]
 800bf68:	681b      	ldr	r3, [r3, #0]
 800bf6a:	695a      	ldr	r2, [r3, #20]
 800bf6c:	687b      	ldr	r3, [r7, #4]
 800bf6e:	681b      	ldr	r3, [r3, #0]
 800bf70:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800bf74:	615a      	str	r2, [r3, #20]
 800bf76:	687b      	ldr	r3, [r7, #4]
 800bf78:	681b      	ldr	r3, [r3, #0]
 800bf7a:	68da      	ldr	r2, [r3, #12]
 800bf7c:	687b      	ldr	r3, [r7, #4]
 800bf7e:	681b      	ldr	r3, [r3, #0]
 800bf80:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800bf84:	60da      	str	r2, [r3, #12]
 800bf86:	687b      	ldr	r3, [r7, #4]
 800bf88:	2200      	movs	r2, #0
 800bf8a:	641a      	str	r2, [r3, #64]	; 0x40
 800bf8c:	687b      	ldr	r3, [r7, #4]
 800bf8e:	2220      	movs	r2, #32
 800bf90:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bf94:	687b      	ldr	r3, [r7, #4]
 800bf96:	2220      	movs	r2, #32
 800bf98:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800bf9c:	2300      	movs	r3, #0
 800bf9e:	4618      	mov	r0, r3
 800bfa0:	3708      	adds	r7, #8
 800bfa2:	46bd      	mov	sp, r7
 800bfa4:	bd80      	pop	{r7, pc}

0800bfa6 <HAL_UART_Transmit>:
 800bfa6:	b580      	push	{r7, lr}
 800bfa8:	b08a      	sub	sp, #40	; 0x28
 800bfaa:	af02      	add	r7, sp, #8
 800bfac:	60f8      	str	r0, [r7, #12]
 800bfae:	60b9      	str	r1, [r7, #8]
 800bfb0:	603b      	str	r3, [r7, #0]
 800bfb2:	4613      	mov	r3, r2
 800bfb4:	80fb      	strh	r3, [r7, #6]
 800bfb6:	2300      	movs	r3, #0
 800bfb8:	617b      	str	r3, [r7, #20]
 800bfba:	68fb      	ldr	r3, [r7, #12]
 800bfbc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800bfc0:	b2db      	uxtb	r3, r3
 800bfc2:	2b20      	cmp	r3, #32
 800bfc4:	d17c      	bne.n	800c0c0 <HAL_UART_Transmit+0x11a>
 800bfc6:	68bb      	ldr	r3, [r7, #8]
 800bfc8:	2b00      	cmp	r3, #0
 800bfca:	d002      	beq.n	800bfd2 <HAL_UART_Transmit+0x2c>
 800bfcc:	88fb      	ldrh	r3, [r7, #6]
 800bfce:	2b00      	cmp	r3, #0
 800bfd0:	d101      	bne.n	800bfd6 <HAL_UART_Transmit+0x30>
 800bfd2:	2301      	movs	r3, #1
 800bfd4:	e075      	b.n	800c0c2 <HAL_UART_Transmit+0x11c>
 800bfd6:	68fb      	ldr	r3, [r7, #12]
 800bfd8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800bfdc:	2b01      	cmp	r3, #1
 800bfde:	d101      	bne.n	800bfe4 <HAL_UART_Transmit+0x3e>
 800bfe0:	2302      	movs	r3, #2
 800bfe2:	e06e      	b.n	800c0c2 <HAL_UART_Transmit+0x11c>
 800bfe4:	68fb      	ldr	r3, [r7, #12]
 800bfe6:	2201      	movs	r2, #1
 800bfe8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bfec:	68fb      	ldr	r3, [r7, #12]
 800bfee:	2200      	movs	r2, #0
 800bff0:	641a      	str	r2, [r3, #64]	; 0x40
 800bff2:	68fb      	ldr	r3, [r7, #12]
 800bff4:	2221      	movs	r2, #33	; 0x21
 800bff6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bffa:	f7fb fbdb 	bl	80077b4 <HAL_GetTick>
 800bffe:	6178      	str	r0, [r7, #20]
 800c000:	68fb      	ldr	r3, [r7, #12]
 800c002:	88fa      	ldrh	r2, [r7, #6]
 800c004:	849a      	strh	r2, [r3, #36]	; 0x24
 800c006:	68fb      	ldr	r3, [r7, #12]
 800c008:	88fa      	ldrh	r2, [r7, #6]
 800c00a:	84da      	strh	r2, [r3, #38]	; 0x26
 800c00c:	68fb      	ldr	r3, [r7, #12]
 800c00e:	689b      	ldr	r3, [r3, #8]
 800c010:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c014:	d108      	bne.n	800c028 <HAL_UART_Transmit+0x82>
 800c016:	68fb      	ldr	r3, [r7, #12]
 800c018:	691b      	ldr	r3, [r3, #16]
 800c01a:	2b00      	cmp	r3, #0
 800c01c:	d104      	bne.n	800c028 <HAL_UART_Transmit+0x82>
 800c01e:	2300      	movs	r3, #0
 800c020:	61fb      	str	r3, [r7, #28]
 800c022:	68bb      	ldr	r3, [r7, #8]
 800c024:	61bb      	str	r3, [r7, #24]
 800c026:	e003      	b.n	800c030 <HAL_UART_Transmit+0x8a>
 800c028:	68bb      	ldr	r3, [r7, #8]
 800c02a:	61fb      	str	r3, [r7, #28]
 800c02c:	2300      	movs	r3, #0
 800c02e:	61bb      	str	r3, [r7, #24]
 800c030:	68fb      	ldr	r3, [r7, #12]
 800c032:	2200      	movs	r2, #0
 800c034:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c038:	e02a      	b.n	800c090 <HAL_UART_Transmit+0xea>
 800c03a:	683b      	ldr	r3, [r7, #0]
 800c03c:	9300      	str	r3, [sp, #0]
 800c03e:	697b      	ldr	r3, [r7, #20]
 800c040:	2200      	movs	r2, #0
 800c042:	2180      	movs	r1, #128	; 0x80
 800c044:	68f8      	ldr	r0, [r7, #12]
 800c046:	f000 fbc1 	bl	800c7cc <UART_WaitOnFlagUntilTimeout>
 800c04a:	4603      	mov	r3, r0
 800c04c:	2b00      	cmp	r3, #0
 800c04e:	d001      	beq.n	800c054 <HAL_UART_Transmit+0xae>
 800c050:	2303      	movs	r3, #3
 800c052:	e036      	b.n	800c0c2 <HAL_UART_Transmit+0x11c>
 800c054:	69fb      	ldr	r3, [r7, #28]
 800c056:	2b00      	cmp	r3, #0
 800c058:	d10b      	bne.n	800c072 <HAL_UART_Transmit+0xcc>
 800c05a:	69bb      	ldr	r3, [r7, #24]
 800c05c:	881b      	ldrh	r3, [r3, #0]
 800c05e:	461a      	mov	r2, r3
 800c060:	68fb      	ldr	r3, [r7, #12]
 800c062:	681b      	ldr	r3, [r3, #0]
 800c064:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800c068:	605a      	str	r2, [r3, #4]
 800c06a:	69bb      	ldr	r3, [r7, #24]
 800c06c:	3302      	adds	r3, #2
 800c06e:	61bb      	str	r3, [r7, #24]
 800c070:	e007      	b.n	800c082 <HAL_UART_Transmit+0xdc>
 800c072:	69fb      	ldr	r3, [r7, #28]
 800c074:	781a      	ldrb	r2, [r3, #0]
 800c076:	68fb      	ldr	r3, [r7, #12]
 800c078:	681b      	ldr	r3, [r3, #0]
 800c07a:	605a      	str	r2, [r3, #4]
 800c07c:	69fb      	ldr	r3, [r7, #28]
 800c07e:	3301      	adds	r3, #1
 800c080:	61fb      	str	r3, [r7, #28]
 800c082:	68fb      	ldr	r3, [r7, #12]
 800c084:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800c086:	b29b      	uxth	r3, r3
 800c088:	3b01      	subs	r3, #1
 800c08a:	b29a      	uxth	r2, r3
 800c08c:	68fb      	ldr	r3, [r7, #12]
 800c08e:	84da      	strh	r2, [r3, #38]	; 0x26
 800c090:	68fb      	ldr	r3, [r7, #12]
 800c092:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800c094:	b29b      	uxth	r3, r3
 800c096:	2b00      	cmp	r3, #0
 800c098:	d1cf      	bne.n	800c03a <HAL_UART_Transmit+0x94>
 800c09a:	683b      	ldr	r3, [r7, #0]
 800c09c:	9300      	str	r3, [sp, #0]
 800c09e:	697b      	ldr	r3, [r7, #20]
 800c0a0:	2200      	movs	r2, #0
 800c0a2:	2140      	movs	r1, #64	; 0x40
 800c0a4:	68f8      	ldr	r0, [r7, #12]
 800c0a6:	f000 fb91 	bl	800c7cc <UART_WaitOnFlagUntilTimeout>
 800c0aa:	4603      	mov	r3, r0
 800c0ac:	2b00      	cmp	r3, #0
 800c0ae:	d001      	beq.n	800c0b4 <HAL_UART_Transmit+0x10e>
 800c0b0:	2303      	movs	r3, #3
 800c0b2:	e006      	b.n	800c0c2 <HAL_UART_Transmit+0x11c>
 800c0b4:	68fb      	ldr	r3, [r7, #12]
 800c0b6:	2220      	movs	r2, #32
 800c0b8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c0bc:	2300      	movs	r3, #0
 800c0be:	e000      	b.n	800c0c2 <HAL_UART_Transmit+0x11c>
 800c0c0:	2302      	movs	r3, #2
 800c0c2:	4618      	mov	r0, r3
 800c0c4:	3720      	adds	r7, #32
 800c0c6:	46bd      	mov	sp, r7
 800c0c8:	bd80      	pop	{r7, pc}

0800c0ca <HAL_UART_Receive>:
 800c0ca:	b580      	push	{r7, lr}
 800c0cc:	b08a      	sub	sp, #40	; 0x28
 800c0ce:	af02      	add	r7, sp, #8
 800c0d0:	60f8      	str	r0, [r7, #12]
 800c0d2:	60b9      	str	r1, [r7, #8]
 800c0d4:	603b      	str	r3, [r7, #0]
 800c0d6:	4613      	mov	r3, r2
 800c0d8:	80fb      	strh	r3, [r7, #6]
 800c0da:	2300      	movs	r3, #0
 800c0dc:	617b      	str	r3, [r7, #20]
 800c0de:	68fb      	ldr	r3, [r7, #12]
 800c0e0:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800c0e4:	b2db      	uxtb	r3, r3
 800c0e6:	2b20      	cmp	r3, #32
 800c0e8:	f040 808c 	bne.w	800c204 <HAL_UART_Receive+0x13a>
 800c0ec:	68bb      	ldr	r3, [r7, #8]
 800c0ee:	2b00      	cmp	r3, #0
 800c0f0:	d002      	beq.n	800c0f8 <HAL_UART_Receive+0x2e>
 800c0f2:	88fb      	ldrh	r3, [r7, #6]
 800c0f4:	2b00      	cmp	r3, #0
 800c0f6:	d101      	bne.n	800c0fc <HAL_UART_Receive+0x32>
 800c0f8:	2301      	movs	r3, #1
 800c0fa:	e084      	b.n	800c206 <HAL_UART_Receive+0x13c>
 800c0fc:	68fb      	ldr	r3, [r7, #12]
 800c0fe:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800c102:	2b01      	cmp	r3, #1
 800c104:	d101      	bne.n	800c10a <HAL_UART_Receive+0x40>
 800c106:	2302      	movs	r3, #2
 800c108:	e07d      	b.n	800c206 <HAL_UART_Receive+0x13c>
 800c10a:	68fb      	ldr	r3, [r7, #12]
 800c10c:	2201      	movs	r2, #1
 800c10e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c112:	68fb      	ldr	r3, [r7, #12]
 800c114:	2200      	movs	r2, #0
 800c116:	641a      	str	r2, [r3, #64]	; 0x40
 800c118:	68fb      	ldr	r3, [r7, #12]
 800c11a:	2222      	movs	r2, #34	; 0x22
 800c11c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c120:	68fb      	ldr	r3, [r7, #12]
 800c122:	2200      	movs	r2, #0
 800c124:	631a      	str	r2, [r3, #48]	; 0x30
 800c126:	f7fb fb45 	bl	80077b4 <HAL_GetTick>
 800c12a:	6178      	str	r0, [r7, #20]
 800c12c:	68fb      	ldr	r3, [r7, #12]
 800c12e:	88fa      	ldrh	r2, [r7, #6]
 800c130:	859a      	strh	r2, [r3, #44]	; 0x2c
 800c132:	68fb      	ldr	r3, [r7, #12]
 800c134:	88fa      	ldrh	r2, [r7, #6]
 800c136:	85da      	strh	r2, [r3, #46]	; 0x2e
 800c138:	68fb      	ldr	r3, [r7, #12]
 800c13a:	689b      	ldr	r3, [r3, #8]
 800c13c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c140:	d108      	bne.n	800c154 <HAL_UART_Receive+0x8a>
 800c142:	68fb      	ldr	r3, [r7, #12]
 800c144:	691b      	ldr	r3, [r3, #16]
 800c146:	2b00      	cmp	r3, #0
 800c148:	d104      	bne.n	800c154 <HAL_UART_Receive+0x8a>
 800c14a:	2300      	movs	r3, #0
 800c14c:	61fb      	str	r3, [r7, #28]
 800c14e:	68bb      	ldr	r3, [r7, #8]
 800c150:	61bb      	str	r3, [r7, #24]
 800c152:	e003      	b.n	800c15c <HAL_UART_Receive+0x92>
 800c154:	68bb      	ldr	r3, [r7, #8]
 800c156:	61fb      	str	r3, [r7, #28]
 800c158:	2300      	movs	r3, #0
 800c15a:	61bb      	str	r3, [r7, #24]
 800c15c:	68fb      	ldr	r3, [r7, #12]
 800c15e:	2200      	movs	r2, #0
 800c160:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c164:	e043      	b.n	800c1ee <HAL_UART_Receive+0x124>
 800c166:	683b      	ldr	r3, [r7, #0]
 800c168:	9300      	str	r3, [sp, #0]
 800c16a:	697b      	ldr	r3, [r7, #20]
 800c16c:	2200      	movs	r2, #0
 800c16e:	2120      	movs	r1, #32
 800c170:	68f8      	ldr	r0, [r7, #12]
 800c172:	f000 fb2b 	bl	800c7cc <UART_WaitOnFlagUntilTimeout>
 800c176:	4603      	mov	r3, r0
 800c178:	2b00      	cmp	r3, #0
 800c17a:	d001      	beq.n	800c180 <HAL_UART_Receive+0xb6>
 800c17c:	2303      	movs	r3, #3
 800c17e:	e042      	b.n	800c206 <HAL_UART_Receive+0x13c>
 800c180:	69fb      	ldr	r3, [r7, #28]
 800c182:	2b00      	cmp	r3, #0
 800c184:	d10c      	bne.n	800c1a0 <HAL_UART_Receive+0xd6>
 800c186:	68fb      	ldr	r3, [r7, #12]
 800c188:	681b      	ldr	r3, [r3, #0]
 800c18a:	685b      	ldr	r3, [r3, #4]
 800c18c:	b29b      	uxth	r3, r3
 800c18e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800c192:	b29a      	uxth	r2, r3
 800c194:	69bb      	ldr	r3, [r7, #24]
 800c196:	801a      	strh	r2, [r3, #0]
 800c198:	69bb      	ldr	r3, [r7, #24]
 800c19a:	3302      	adds	r3, #2
 800c19c:	61bb      	str	r3, [r7, #24]
 800c19e:	e01f      	b.n	800c1e0 <HAL_UART_Receive+0x116>
 800c1a0:	68fb      	ldr	r3, [r7, #12]
 800c1a2:	689b      	ldr	r3, [r3, #8]
 800c1a4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c1a8:	d007      	beq.n	800c1ba <HAL_UART_Receive+0xf0>
 800c1aa:	68fb      	ldr	r3, [r7, #12]
 800c1ac:	689b      	ldr	r3, [r3, #8]
 800c1ae:	2b00      	cmp	r3, #0
 800c1b0:	d10a      	bne.n	800c1c8 <HAL_UART_Receive+0xfe>
 800c1b2:	68fb      	ldr	r3, [r7, #12]
 800c1b4:	691b      	ldr	r3, [r3, #16]
 800c1b6:	2b00      	cmp	r3, #0
 800c1b8:	d106      	bne.n	800c1c8 <HAL_UART_Receive+0xfe>
 800c1ba:	68fb      	ldr	r3, [r7, #12]
 800c1bc:	681b      	ldr	r3, [r3, #0]
 800c1be:	685b      	ldr	r3, [r3, #4]
 800c1c0:	b2da      	uxtb	r2, r3
 800c1c2:	69fb      	ldr	r3, [r7, #28]
 800c1c4:	701a      	strb	r2, [r3, #0]
 800c1c6:	e008      	b.n	800c1da <HAL_UART_Receive+0x110>
 800c1c8:	68fb      	ldr	r3, [r7, #12]
 800c1ca:	681b      	ldr	r3, [r3, #0]
 800c1cc:	685b      	ldr	r3, [r3, #4]
 800c1ce:	b2db      	uxtb	r3, r3
 800c1d0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800c1d4:	b2da      	uxtb	r2, r3
 800c1d6:	69fb      	ldr	r3, [r7, #28]
 800c1d8:	701a      	strb	r2, [r3, #0]
 800c1da:	69fb      	ldr	r3, [r7, #28]
 800c1dc:	3301      	adds	r3, #1
 800c1de:	61fb      	str	r3, [r7, #28]
 800c1e0:	68fb      	ldr	r3, [r7, #12]
 800c1e2:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c1e4:	b29b      	uxth	r3, r3
 800c1e6:	3b01      	subs	r3, #1
 800c1e8:	b29a      	uxth	r2, r3
 800c1ea:	68fb      	ldr	r3, [r7, #12]
 800c1ec:	85da      	strh	r2, [r3, #46]	; 0x2e
 800c1ee:	68fb      	ldr	r3, [r7, #12]
 800c1f0:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c1f2:	b29b      	uxth	r3, r3
 800c1f4:	2b00      	cmp	r3, #0
 800c1f6:	d1b6      	bne.n	800c166 <HAL_UART_Receive+0x9c>
 800c1f8:	68fb      	ldr	r3, [r7, #12]
 800c1fa:	2220      	movs	r2, #32
 800c1fc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c200:	2300      	movs	r3, #0
 800c202:	e000      	b.n	800c206 <HAL_UART_Receive+0x13c>
 800c204:	2302      	movs	r3, #2
 800c206:	4618      	mov	r0, r3
 800c208:	3720      	adds	r7, #32
 800c20a:	46bd      	mov	sp, r7
 800c20c:	bd80      	pop	{r7, pc}

0800c20e <HAL_UART_Receive_IT>:
 800c20e:	b580      	push	{r7, lr}
 800c210:	b084      	sub	sp, #16
 800c212:	af00      	add	r7, sp, #0
 800c214:	60f8      	str	r0, [r7, #12]
 800c216:	60b9      	str	r1, [r7, #8]
 800c218:	4613      	mov	r3, r2
 800c21a:	80fb      	strh	r3, [r7, #6]
 800c21c:	68fb      	ldr	r3, [r7, #12]
 800c21e:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800c222:	b2db      	uxtb	r3, r3
 800c224:	2b20      	cmp	r3, #32
 800c226:	d11d      	bne.n	800c264 <HAL_UART_Receive_IT+0x56>
 800c228:	68bb      	ldr	r3, [r7, #8]
 800c22a:	2b00      	cmp	r3, #0
 800c22c:	d002      	beq.n	800c234 <HAL_UART_Receive_IT+0x26>
 800c22e:	88fb      	ldrh	r3, [r7, #6]
 800c230:	2b00      	cmp	r3, #0
 800c232:	d101      	bne.n	800c238 <HAL_UART_Receive_IT+0x2a>
 800c234:	2301      	movs	r3, #1
 800c236:	e016      	b.n	800c266 <HAL_UART_Receive_IT+0x58>
 800c238:	68fb      	ldr	r3, [r7, #12]
 800c23a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800c23e:	2b01      	cmp	r3, #1
 800c240:	d101      	bne.n	800c246 <HAL_UART_Receive_IT+0x38>
 800c242:	2302      	movs	r3, #2
 800c244:	e00f      	b.n	800c266 <HAL_UART_Receive_IT+0x58>
 800c246:	68fb      	ldr	r3, [r7, #12]
 800c248:	2201      	movs	r2, #1
 800c24a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c24e:	68fb      	ldr	r3, [r7, #12]
 800c250:	2200      	movs	r2, #0
 800c252:	631a      	str	r2, [r3, #48]	; 0x30
 800c254:	88fb      	ldrh	r3, [r7, #6]
 800c256:	461a      	mov	r2, r3
 800c258:	68b9      	ldr	r1, [r7, #8]
 800c25a:	68f8      	ldr	r0, [r7, #12]
 800c25c:	f000 fb24 	bl	800c8a8 <UART_Start_Receive_IT>
 800c260:	4603      	mov	r3, r0
 800c262:	e000      	b.n	800c266 <HAL_UART_Receive_IT+0x58>
 800c264:	2302      	movs	r3, #2
 800c266:	4618      	mov	r0, r3
 800c268:	3710      	adds	r7, #16
 800c26a:	46bd      	mov	sp, r7
 800c26c:	bd80      	pop	{r7, pc}
	...

0800c270 <HAL_UART_IRQHandler>:
 800c270:	b580      	push	{r7, lr}
 800c272:	b0ba      	sub	sp, #232	; 0xe8
 800c274:	af00      	add	r7, sp, #0
 800c276:	6078      	str	r0, [r7, #4]
 800c278:	687b      	ldr	r3, [r7, #4]
 800c27a:	681b      	ldr	r3, [r3, #0]
 800c27c:	681b      	ldr	r3, [r3, #0]
 800c27e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800c282:	687b      	ldr	r3, [r7, #4]
 800c284:	681b      	ldr	r3, [r3, #0]
 800c286:	68db      	ldr	r3, [r3, #12]
 800c288:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800c28c:	687b      	ldr	r3, [r7, #4]
 800c28e:	681b      	ldr	r3, [r3, #0]
 800c290:	695b      	ldr	r3, [r3, #20]
 800c292:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800c296:	2300      	movs	r3, #0
 800c298:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800c29c:	2300      	movs	r3, #0
 800c29e:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800c2a2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c2a6:	f003 030f 	and.w	r3, r3, #15
 800c2aa:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800c2ae:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800c2b2:	2b00      	cmp	r3, #0
 800c2b4:	d10f      	bne.n	800c2d6 <HAL_UART_IRQHandler+0x66>
 800c2b6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c2ba:	f003 0320 	and.w	r3, r3, #32
 800c2be:	2b00      	cmp	r3, #0
 800c2c0:	d009      	beq.n	800c2d6 <HAL_UART_IRQHandler+0x66>
 800c2c2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c2c6:	f003 0320 	and.w	r3, r3, #32
 800c2ca:	2b00      	cmp	r3, #0
 800c2cc:	d003      	beq.n	800c2d6 <HAL_UART_IRQHandler+0x66>
 800c2ce:	6878      	ldr	r0, [r7, #4]
 800c2d0:	f000 fc07 	bl	800cae2 <UART_Receive_IT>
 800c2d4:	e256      	b.n	800c784 <HAL_UART_IRQHandler+0x514>
 800c2d6:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800c2da:	2b00      	cmp	r3, #0
 800c2dc:	f000 80de 	beq.w	800c49c <HAL_UART_IRQHandler+0x22c>
 800c2e0:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c2e4:	f003 0301 	and.w	r3, r3, #1
 800c2e8:	2b00      	cmp	r3, #0
 800c2ea:	d106      	bne.n	800c2fa <HAL_UART_IRQHandler+0x8a>
 800c2ec:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c2f0:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800c2f4:	2b00      	cmp	r3, #0
 800c2f6:	f000 80d1 	beq.w	800c49c <HAL_UART_IRQHandler+0x22c>
 800c2fa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c2fe:	f003 0301 	and.w	r3, r3, #1
 800c302:	2b00      	cmp	r3, #0
 800c304:	d00b      	beq.n	800c31e <HAL_UART_IRQHandler+0xae>
 800c306:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c30a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c30e:	2b00      	cmp	r3, #0
 800c310:	d005      	beq.n	800c31e <HAL_UART_IRQHandler+0xae>
 800c312:	687b      	ldr	r3, [r7, #4]
 800c314:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c316:	f043 0201 	orr.w	r2, r3, #1
 800c31a:	687b      	ldr	r3, [r7, #4]
 800c31c:	641a      	str	r2, [r3, #64]	; 0x40
 800c31e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c322:	f003 0304 	and.w	r3, r3, #4
 800c326:	2b00      	cmp	r3, #0
 800c328:	d00b      	beq.n	800c342 <HAL_UART_IRQHandler+0xd2>
 800c32a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c32e:	f003 0301 	and.w	r3, r3, #1
 800c332:	2b00      	cmp	r3, #0
 800c334:	d005      	beq.n	800c342 <HAL_UART_IRQHandler+0xd2>
 800c336:	687b      	ldr	r3, [r7, #4]
 800c338:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c33a:	f043 0202 	orr.w	r2, r3, #2
 800c33e:	687b      	ldr	r3, [r7, #4]
 800c340:	641a      	str	r2, [r3, #64]	; 0x40
 800c342:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c346:	f003 0302 	and.w	r3, r3, #2
 800c34a:	2b00      	cmp	r3, #0
 800c34c:	d00b      	beq.n	800c366 <HAL_UART_IRQHandler+0xf6>
 800c34e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c352:	f003 0301 	and.w	r3, r3, #1
 800c356:	2b00      	cmp	r3, #0
 800c358:	d005      	beq.n	800c366 <HAL_UART_IRQHandler+0xf6>
 800c35a:	687b      	ldr	r3, [r7, #4]
 800c35c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c35e:	f043 0204 	orr.w	r2, r3, #4
 800c362:	687b      	ldr	r3, [r7, #4]
 800c364:	641a      	str	r2, [r3, #64]	; 0x40
 800c366:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c36a:	f003 0308 	and.w	r3, r3, #8
 800c36e:	2b00      	cmp	r3, #0
 800c370:	d011      	beq.n	800c396 <HAL_UART_IRQHandler+0x126>
 800c372:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c376:	f003 0320 	and.w	r3, r3, #32
 800c37a:	2b00      	cmp	r3, #0
 800c37c:	d105      	bne.n	800c38a <HAL_UART_IRQHandler+0x11a>
 800c37e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c382:	f003 0301 	and.w	r3, r3, #1
 800c386:	2b00      	cmp	r3, #0
 800c388:	d005      	beq.n	800c396 <HAL_UART_IRQHandler+0x126>
 800c38a:	687b      	ldr	r3, [r7, #4]
 800c38c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c38e:	f043 0208 	orr.w	r2, r3, #8
 800c392:	687b      	ldr	r3, [r7, #4]
 800c394:	641a      	str	r2, [r3, #64]	; 0x40
 800c396:	687b      	ldr	r3, [r7, #4]
 800c398:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c39a:	2b00      	cmp	r3, #0
 800c39c:	f000 81ed 	beq.w	800c77a <HAL_UART_IRQHandler+0x50a>
 800c3a0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c3a4:	f003 0320 	and.w	r3, r3, #32
 800c3a8:	2b00      	cmp	r3, #0
 800c3aa:	d008      	beq.n	800c3be <HAL_UART_IRQHandler+0x14e>
 800c3ac:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c3b0:	f003 0320 	and.w	r3, r3, #32
 800c3b4:	2b00      	cmp	r3, #0
 800c3b6:	d002      	beq.n	800c3be <HAL_UART_IRQHandler+0x14e>
 800c3b8:	6878      	ldr	r0, [r7, #4]
 800c3ba:	f000 fb92 	bl	800cae2 <UART_Receive_IT>
 800c3be:	687b      	ldr	r3, [r7, #4]
 800c3c0:	681b      	ldr	r3, [r3, #0]
 800c3c2:	695b      	ldr	r3, [r3, #20]
 800c3c4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c3c8:	2b40      	cmp	r3, #64	; 0x40
 800c3ca:	bf0c      	ite	eq
 800c3cc:	2301      	moveq	r3, #1
 800c3ce:	2300      	movne	r3, #0
 800c3d0:	b2db      	uxtb	r3, r3
 800c3d2:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800c3d6:	687b      	ldr	r3, [r7, #4]
 800c3d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c3da:	f003 0308 	and.w	r3, r3, #8
 800c3de:	2b00      	cmp	r3, #0
 800c3e0:	d103      	bne.n	800c3ea <HAL_UART_IRQHandler+0x17a>
 800c3e2:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c3e6:	2b00      	cmp	r3, #0
 800c3e8:	d04f      	beq.n	800c48a <HAL_UART_IRQHandler+0x21a>
 800c3ea:	6878      	ldr	r0, [r7, #4]
 800c3ec:	f000 fa9a 	bl	800c924 <UART_EndRxTransfer>
 800c3f0:	687b      	ldr	r3, [r7, #4]
 800c3f2:	681b      	ldr	r3, [r3, #0]
 800c3f4:	695b      	ldr	r3, [r3, #20]
 800c3f6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c3fa:	2b40      	cmp	r3, #64	; 0x40
 800c3fc:	d141      	bne.n	800c482 <HAL_UART_IRQHandler+0x212>
 800c3fe:	687b      	ldr	r3, [r7, #4]
 800c400:	681b      	ldr	r3, [r3, #0]
 800c402:	3314      	adds	r3, #20
 800c404:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800c408:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800c40c:	e853 3f00 	ldrex	r3, [r3]
 800c410:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800c414:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800c418:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c41c:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800c420:	687b      	ldr	r3, [r7, #4]
 800c422:	681b      	ldr	r3, [r3, #0]
 800c424:	3314      	adds	r3, #20
 800c426:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 800c42a:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800c42e:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800c432:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 800c436:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 800c43a:	e841 2300 	strex	r3, r2, [r1]
 800c43e:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800c442:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800c446:	2b00      	cmp	r3, #0
 800c448:	d1d9      	bne.n	800c3fe <HAL_UART_IRQHandler+0x18e>
 800c44a:	687b      	ldr	r3, [r7, #4]
 800c44c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c44e:	2b00      	cmp	r3, #0
 800c450:	d013      	beq.n	800c47a <HAL_UART_IRQHandler+0x20a>
 800c452:	687b      	ldr	r3, [r7, #4]
 800c454:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c456:	4a7d      	ldr	r2, [pc, #500]	; (800c64c <HAL_UART_IRQHandler+0x3dc>)
 800c458:	651a      	str	r2, [r3, #80]	; 0x50
 800c45a:	687b      	ldr	r3, [r7, #4]
 800c45c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c45e:	4618      	mov	r0, r3
 800c460:	f7fc fa08 	bl	8008874 <HAL_DMA_Abort_IT>
 800c464:	4603      	mov	r3, r0
 800c466:	2b00      	cmp	r3, #0
 800c468:	d016      	beq.n	800c498 <HAL_UART_IRQHandler+0x228>
 800c46a:	687b      	ldr	r3, [r7, #4]
 800c46c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c46e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c470:	687a      	ldr	r2, [r7, #4]
 800c472:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800c474:	4610      	mov	r0, r2
 800c476:	4798      	blx	r3
 800c478:	e00e      	b.n	800c498 <HAL_UART_IRQHandler+0x228>
 800c47a:	6878      	ldr	r0, [r7, #4]
 800c47c:	f000 f990 	bl	800c7a0 <HAL_UART_ErrorCallback>
 800c480:	e00a      	b.n	800c498 <HAL_UART_IRQHandler+0x228>
 800c482:	6878      	ldr	r0, [r7, #4]
 800c484:	f000 f98c 	bl	800c7a0 <HAL_UART_ErrorCallback>
 800c488:	e006      	b.n	800c498 <HAL_UART_IRQHandler+0x228>
 800c48a:	6878      	ldr	r0, [r7, #4]
 800c48c:	f000 f988 	bl	800c7a0 <HAL_UART_ErrorCallback>
 800c490:	687b      	ldr	r3, [r7, #4]
 800c492:	2200      	movs	r2, #0
 800c494:	641a      	str	r2, [r3, #64]	; 0x40
 800c496:	e170      	b.n	800c77a <HAL_UART_IRQHandler+0x50a>
 800c498:	bf00      	nop
 800c49a:	e16e      	b.n	800c77a <HAL_UART_IRQHandler+0x50a>
 800c49c:	687b      	ldr	r3, [r7, #4]
 800c49e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c4a0:	2b01      	cmp	r3, #1
 800c4a2:	f040 814a 	bne.w	800c73a <HAL_UART_IRQHandler+0x4ca>
 800c4a6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c4aa:	f003 0310 	and.w	r3, r3, #16
 800c4ae:	2b00      	cmp	r3, #0
 800c4b0:	f000 8143 	beq.w	800c73a <HAL_UART_IRQHandler+0x4ca>
 800c4b4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c4b8:	f003 0310 	and.w	r3, r3, #16
 800c4bc:	2b00      	cmp	r3, #0
 800c4be:	f000 813c 	beq.w	800c73a <HAL_UART_IRQHandler+0x4ca>
 800c4c2:	2300      	movs	r3, #0
 800c4c4:	60bb      	str	r3, [r7, #8]
 800c4c6:	687b      	ldr	r3, [r7, #4]
 800c4c8:	681b      	ldr	r3, [r3, #0]
 800c4ca:	681b      	ldr	r3, [r3, #0]
 800c4cc:	60bb      	str	r3, [r7, #8]
 800c4ce:	687b      	ldr	r3, [r7, #4]
 800c4d0:	681b      	ldr	r3, [r3, #0]
 800c4d2:	685b      	ldr	r3, [r3, #4]
 800c4d4:	60bb      	str	r3, [r7, #8]
 800c4d6:	68bb      	ldr	r3, [r7, #8]
 800c4d8:	687b      	ldr	r3, [r7, #4]
 800c4da:	681b      	ldr	r3, [r3, #0]
 800c4dc:	695b      	ldr	r3, [r3, #20]
 800c4de:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c4e2:	2b40      	cmp	r3, #64	; 0x40
 800c4e4:	f040 80b4 	bne.w	800c650 <HAL_UART_IRQHandler+0x3e0>
 800c4e8:	687b      	ldr	r3, [r7, #4]
 800c4ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c4ec:	681b      	ldr	r3, [r3, #0]
 800c4ee:	685b      	ldr	r3, [r3, #4]
 800c4f0:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 800c4f4:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 800c4f8:	2b00      	cmp	r3, #0
 800c4fa:	f000 8140 	beq.w	800c77e <HAL_UART_IRQHandler+0x50e>
 800c4fe:	687b      	ldr	r3, [r7, #4]
 800c500:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800c502:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800c506:	429a      	cmp	r2, r3
 800c508:	f080 8139 	bcs.w	800c77e <HAL_UART_IRQHandler+0x50e>
 800c50c:	687b      	ldr	r3, [r7, #4]
 800c50e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800c512:	85da      	strh	r2, [r3, #46]	; 0x2e
 800c514:	687b      	ldr	r3, [r7, #4]
 800c516:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c518:	69db      	ldr	r3, [r3, #28]
 800c51a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800c51e:	f000 8088 	beq.w	800c632 <HAL_UART_IRQHandler+0x3c2>
 800c522:	687b      	ldr	r3, [r7, #4]
 800c524:	681b      	ldr	r3, [r3, #0]
 800c526:	330c      	adds	r3, #12
 800c528:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800c52c:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800c530:	e853 3f00 	ldrex	r3, [r3]
 800c534:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800c538:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800c53c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800c540:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800c544:	687b      	ldr	r3, [r7, #4]
 800c546:	681b      	ldr	r3, [r3, #0]
 800c548:	330c      	adds	r3, #12
 800c54a:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 800c54e:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800c552:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800c556:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800c55a:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800c55e:	e841 2300 	strex	r3, r2, [r1]
 800c562:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800c566:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800c56a:	2b00      	cmp	r3, #0
 800c56c:	d1d9      	bne.n	800c522 <HAL_UART_IRQHandler+0x2b2>
 800c56e:	687b      	ldr	r3, [r7, #4]
 800c570:	681b      	ldr	r3, [r3, #0]
 800c572:	3314      	adds	r3, #20
 800c574:	677b      	str	r3, [r7, #116]	; 0x74
 800c576:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800c578:	e853 3f00 	ldrex	r3, [r3]
 800c57c:	673b      	str	r3, [r7, #112]	; 0x70
 800c57e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800c580:	f023 0301 	bic.w	r3, r3, #1
 800c584:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800c588:	687b      	ldr	r3, [r7, #4]
 800c58a:	681b      	ldr	r3, [r3, #0]
 800c58c:	3314      	adds	r3, #20
 800c58e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800c592:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 800c596:	67fb      	str	r3, [r7, #124]	; 0x7c
 800c598:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800c59a:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800c59e:	e841 2300 	strex	r3, r2, [r1]
 800c5a2:	67bb      	str	r3, [r7, #120]	; 0x78
 800c5a4:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800c5a6:	2b00      	cmp	r3, #0
 800c5a8:	d1e1      	bne.n	800c56e <HAL_UART_IRQHandler+0x2fe>
 800c5aa:	687b      	ldr	r3, [r7, #4]
 800c5ac:	681b      	ldr	r3, [r3, #0]
 800c5ae:	3314      	adds	r3, #20
 800c5b0:	663b      	str	r3, [r7, #96]	; 0x60
 800c5b2:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800c5b4:	e853 3f00 	ldrex	r3, [r3]
 800c5b8:	65fb      	str	r3, [r7, #92]	; 0x5c
 800c5ba:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800c5bc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c5c0:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800c5c4:	687b      	ldr	r3, [r7, #4]
 800c5c6:	681b      	ldr	r3, [r3, #0]
 800c5c8:	3314      	adds	r3, #20
 800c5ca:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800c5ce:	66fa      	str	r2, [r7, #108]	; 0x6c
 800c5d0:	66bb      	str	r3, [r7, #104]	; 0x68
 800c5d2:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800c5d4:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800c5d6:	e841 2300 	strex	r3, r2, [r1]
 800c5da:	667b      	str	r3, [r7, #100]	; 0x64
 800c5dc:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800c5de:	2b00      	cmp	r3, #0
 800c5e0:	d1e3      	bne.n	800c5aa <HAL_UART_IRQHandler+0x33a>
 800c5e2:	687b      	ldr	r3, [r7, #4]
 800c5e4:	2220      	movs	r2, #32
 800c5e6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c5ea:	687b      	ldr	r3, [r7, #4]
 800c5ec:	2200      	movs	r2, #0
 800c5ee:	631a      	str	r2, [r3, #48]	; 0x30
 800c5f0:	687b      	ldr	r3, [r7, #4]
 800c5f2:	681b      	ldr	r3, [r3, #0]
 800c5f4:	330c      	adds	r3, #12
 800c5f6:	64fb      	str	r3, [r7, #76]	; 0x4c
 800c5f8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800c5fa:	e853 3f00 	ldrex	r3, [r3]
 800c5fe:	64bb      	str	r3, [r7, #72]	; 0x48
 800c600:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800c602:	f023 0310 	bic.w	r3, r3, #16
 800c606:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800c60a:	687b      	ldr	r3, [r7, #4]
 800c60c:	681b      	ldr	r3, [r3, #0]
 800c60e:	330c      	adds	r3, #12
 800c610:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 800c614:	65ba      	str	r2, [r7, #88]	; 0x58
 800c616:	657b      	str	r3, [r7, #84]	; 0x54
 800c618:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800c61a:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800c61c:	e841 2300 	strex	r3, r2, [r1]
 800c620:	653b      	str	r3, [r7, #80]	; 0x50
 800c622:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c624:	2b00      	cmp	r3, #0
 800c626:	d1e3      	bne.n	800c5f0 <HAL_UART_IRQHandler+0x380>
 800c628:	687b      	ldr	r3, [r7, #4]
 800c62a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c62c:	4618      	mov	r0, r3
 800c62e:	f7fc f8b1 	bl	8008794 <HAL_DMA_Abort>
 800c632:	687b      	ldr	r3, [r7, #4]
 800c634:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800c636:	687b      	ldr	r3, [r7, #4]
 800c638:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c63a:	b29b      	uxth	r3, r3
 800c63c:	1ad3      	subs	r3, r2, r3
 800c63e:	b29b      	uxth	r3, r3
 800c640:	4619      	mov	r1, r3
 800c642:	6878      	ldr	r0, [r7, #4]
 800c644:	f000 f8b6 	bl	800c7b4 <HAL_UARTEx_RxEventCallback>
 800c648:	e099      	b.n	800c77e <HAL_UART_IRQHandler+0x50e>
 800c64a:	bf00      	nop
 800c64c:	0800c9eb 	.word	0x0800c9eb
 800c650:	687b      	ldr	r3, [r7, #4]
 800c652:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800c654:	687b      	ldr	r3, [r7, #4]
 800c656:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c658:	b29b      	uxth	r3, r3
 800c65a:	1ad3      	subs	r3, r2, r3
 800c65c:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 800c660:	687b      	ldr	r3, [r7, #4]
 800c662:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c664:	b29b      	uxth	r3, r3
 800c666:	2b00      	cmp	r3, #0
 800c668:	f000 808b 	beq.w	800c782 <HAL_UART_IRQHandler+0x512>
 800c66c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800c670:	2b00      	cmp	r3, #0
 800c672:	f000 8086 	beq.w	800c782 <HAL_UART_IRQHandler+0x512>
 800c676:	687b      	ldr	r3, [r7, #4]
 800c678:	681b      	ldr	r3, [r3, #0]
 800c67a:	330c      	adds	r3, #12
 800c67c:	63bb      	str	r3, [r7, #56]	; 0x38
 800c67e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c680:	e853 3f00 	ldrex	r3, [r3]
 800c684:	637b      	str	r3, [r7, #52]	; 0x34
 800c686:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c688:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800c68c:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800c690:	687b      	ldr	r3, [r7, #4]
 800c692:	681b      	ldr	r3, [r3, #0]
 800c694:	330c      	adds	r3, #12
 800c696:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 800c69a:	647a      	str	r2, [r7, #68]	; 0x44
 800c69c:	643b      	str	r3, [r7, #64]	; 0x40
 800c69e:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800c6a0:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800c6a2:	e841 2300 	strex	r3, r2, [r1]
 800c6a6:	63fb      	str	r3, [r7, #60]	; 0x3c
 800c6a8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800c6aa:	2b00      	cmp	r3, #0
 800c6ac:	d1e3      	bne.n	800c676 <HAL_UART_IRQHandler+0x406>
 800c6ae:	687b      	ldr	r3, [r7, #4]
 800c6b0:	681b      	ldr	r3, [r3, #0]
 800c6b2:	3314      	adds	r3, #20
 800c6b4:	627b      	str	r3, [r7, #36]	; 0x24
 800c6b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c6b8:	e853 3f00 	ldrex	r3, [r3]
 800c6bc:	623b      	str	r3, [r7, #32]
 800c6be:	6a3b      	ldr	r3, [r7, #32]
 800c6c0:	f023 0301 	bic.w	r3, r3, #1
 800c6c4:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800c6c8:	687b      	ldr	r3, [r7, #4]
 800c6ca:	681b      	ldr	r3, [r3, #0]
 800c6cc:	3314      	adds	r3, #20
 800c6ce:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800c6d2:	633a      	str	r2, [r7, #48]	; 0x30
 800c6d4:	62fb      	str	r3, [r7, #44]	; 0x2c
 800c6d6:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800c6d8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800c6da:	e841 2300 	strex	r3, r2, [r1]
 800c6de:	62bb      	str	r3, [r7, #40]	; 0x28
 800c6e0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c6e2:	2b00      	cmp	r3, #0
 800c6e4:	d1e3      	bne.n	800c6ae <HAL_UART_IRQHandler+0x43e>
 800c6e6:	687b      	ldr	r3, [r7, #4]
 800c6e8:	2220      	movs	r2, #32
 800c6ea:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c6ee:	687b      	ldr	r3, [r7, #4]
 800c6f0:	2200      	movs	r2, #0
 800c6f2:	631a      	str	r2, [r3, #48]	; 0x30
 800c6f4:	687b      	ldr	r3, [r7, #4]
 800c6f6:	681b      	ldr	r3, [r3, #0]
 800c6f8:	330c      	adds	r3, #12
 800c6fa:	613b      	str	r3, [r7, #16]
 800c6fc:	693b      	ldr	r3, [r7, #16]
 800c6fe:	e853 3f00 	ldrex	r3, [r3]
 800c702:	60fb      	str	r3, [r7, #12]
 800c704:	68fb      	ldr	r3, [r7, #12]
 800c706:	f023 0310 	bic.w	r3, r3, #16
 800c70a:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800c70e:	687b      	ldr	r3, [r7, #4]
 800c710:	681b      	ldr	r3, [r3, #0]
 800c712:	330c      	adds	r3, #12
 800c714:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 800c718:	61fa      	str	r2, [r7, #28]
 800c71a:	61bb      	str	r3, [r7, #24]
 800c71c:	69b9      	ldr	r1, [r7, #24]
 800c71e:	69fa      	ldr	r2, [r7, #28]
 800c720:	e841 2300 	strex	r3, r2, [r1]
 800c724:	617b      	str	r3, [r7, #20]
 800c726:	697b      	ldr	r3, [r7, #20]
 800c728:	2b00      	cmp	r3, #0
 800c72a:	d1e3      	bne.n	800c6f4 <HAL_UART_IRQHandler+0x484>
 800c72c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800c730:	4619      	mov	r1, r3
 800c732:	6878      	ldr	r0, [r7, #4]
 800c734:	f000 f83e 	bl	800c7b4 <HAL_UARTEx_RxEventCallback>
 800c738:	e023      	b.n	800c782 <HAL_UART_IRQHandler+0x512>
 800c73a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c73e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800c742:	2b00      	cmp	r3, #0
 800c744:	d009      	beq.n	800c75a <HAL_UART_IRQHandler+0x4ea>
 800c746:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c74a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800c74e:	2b00      	cmp	r3, #0
 800c750:	d003      	beq.n	800c75a <HAL_UART_IRQHandler+0x4ea>
 800c752:	6878      	ldr	r0, [r7, #4]
 800c754:	f000 f95d 	bl	800ca12 <UART_Transmit_IT>
 800c758:	e014      	b.n	800c784 <HAL_UART_IRQHandler+0x514>
 800c75a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c75e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c762:	2b00      	cmp	r3, #0
 800c764:	d00e      	beq.n	800c784 <HAL_UART_IRQHandler+0x514>
 800c766:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c76a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c76e:	2b00      	cmp	r3, #0
 800c770:	d008      	beq.n	800c784 <HAL_UART_IRQHandler+0x514>
 800c772:	6878      	ldr	r0, [r7, #4]
 800c774:	f000 f99d 	bl	800cab2 <UART_EndTransmit_IT>
 800c778:	e004      	b.n	800c784 <HAL_UART_IRQHandler+0x514>
 800c77a:	bf00      	nop
 800c77c:	e002      	b.n	800c784 <HAL_UART_IRQHandler+0x514>
 800c77e:	bf00      	nop
 800c780:	e000      	b.n	800c784 <HAL_UART_IRQHandler+0x514>
 800c782:	bf00      	nop
 800c784:	37e8      	adds	r7, #232	; 0xe8
 800c786:	46bd      	mov	sp, r7
 800c788:	bd80      	pop	{r7, pc}
 800c78a:	bf00      	nop

0800c78c <HAL_UART_TxCpltCallback>:
 800c78c:	b480      	push	{r7}
 800c78e:	b083      	sub	sp, #12
 800c790:	af00      	add	r7, sp, #0
 800c792:	6078      	str	r0, [r7, #4]
 800c794:	bf00      	nop
 800c796:	370c      	adds	r7, #12
 800c798:	46bd      	mov	sp, r7
 800c79a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c79e:	4770      	bx	lr

0800c7a0 <HAL_UART_ErrorCallback>:
 800c7a0:	b480      	push	{r7}
 800c7a2:	b083      	sub	sp, #12
 800c7a4:	af00      	add	r7, sp, #0
 800c7a6:	6078      	str	r0, [r7, #4]
 800c7a8:	bf00      	nop
 800c7aa:	370c      	adds	r7, #12
 800c7ac:	46bd      	mov	sp, r7
 800c7ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7b2:	4770      	bx	lr

0800c7b4 <HAL_UARTEx_RxEventCallback>:
 800c7b4:	b480      	push	{r7}
 800c7b6:	b083      	sub	sp, #12
 800c7b8:	af00      	add	r7, sp, #0
 800c7ba:	6078      	str	r0, [r7, #4]
 800c7bc:	460b      	mov	r3, r1
 800c7be:	807b      	strh	r3, [r7, #2]
 800c7c0:	bf00      	nop
 800c7c2:	370c      	adds	r7, #12
 800c7c4:	46bd      	mov	sp, r7
 800c7c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7ca:	4770      	bx	lr

0800c7cc <UART_WaitOnFlagUntilTimeout>:
 800c7cc:	b580      	push	{r7, lr}
 800c7ce:	b090      	sub	sp, #64	; 0x40
 800c7d0:	af00      	add	r7, sp, #0
 800c7d2:	60f8      	str	r0, [r7, #12]
 800c7d4:	60b9      	str	r1, [r7, #8]
 800c7d6:	603b      	str	r3, [r7, #0]
 800c7d8:	4613      	mov	r3, r2
 800c7da:	71fb      	strb	r3, [r7, #7]
 800c7dc:	e050      	b.n	800c880 <UART_WaitOnFlagUntilTimeout+0xb4>
 800c7de:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800c7e0:	f1b3 3fff 	cmp.w	r3, #4294967295
 800c7e4:	d04c      	beq.n	800c880 <UART_WaitOnFlagUntilTimeout+0xb4>
 800c7e6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800c7e8:	2b00      	cmp	r3, #0
 800c7ea:	d007      	beq.n	800c7fc <UART_WaitOnFlagUntilTimeout+0x30>
 800c7ec:	f7fa ffe2 	bl	80077b4 <HAL_GetTick>
 800c7f0:	4602      	mov	r2, r0
 800c7f2:	683b      	ldr	r3, [r7, #0]
 800c7f4:	1ad3      	subs	r3, r2, r3
 800c7f6:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800c7f8:	429a      	cmp	r2, r3
 800c7fa:	d241      	bcs.n	800c880 <UART_WaitOnFlagUntilTimeout+0xb4>
 800c7fc:	68fb      	ldr	r3, [r7, #12]
 800c7fe:	681b      	ldr	r3, [r3, #0]
 800c800:	330c      	adds	r3, #12
 800c802:	62bb      	str	r3, [r7, #40]	; 0x28
 800c804:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c806:	e853 3f00 	ldrex	r3, [r3]
 800c80a:	627b      	str	r3, [r7, #36]	; 0x24
 800c80c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c80e:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800c812:	63fb      	str	r3, [r7, #60]	; 0x3c
 800c814:	68fb      	ldr	r3, [r7, #12]
 800c816:	681b      	ldr	r3, [r3, #0]
 800c818:	330c      	adds	r3, #12
 800c81a:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800c81c:	637a      	str	r2, [r7, #52]	; 0x34
 800c81e:	633b      	str	r3, [r7, #48]	; 0x30
 800c820:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800c822:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800c824:	e841 2300 	strex	r3, r2, [r1]
 800c828:	62fb      	str	r3, [r7, #44]	; 0x2c
 800c82a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c82c:	2b00      	cmp	r3, #0
 800c82e:	d1e5      	bne.n	800c7fc <UART_WaitOnFlagUntilTimeout+0x30>
 800c830:	68fb      	ldr	r3, [r7, #12]
 800c832:	681b      	ldr	r3, [r3, #0]
 800c834:	3314      	adds	r3, #20
 800c836:	617b      	str	r3, [r7, #20]
 800c838:	697b      	ldr	r3, [r7, #20]
 800c83a:	e853 3f00 	ldrex	r3, [r3]
 800c83e:	613b      	str	r3, [r7, #16]
 800c840:	693b      	ldr	r3, [r7, #16]
 800c842:	f023 0301 	bic.w	r3, r3, #1
 800c846:	63bb      	str	r3, [r7, #56]	; 0x38
 800c848:	68fb      	ldr	r3, [r7, #12]
 800c84a:	681b      	ldr	r3, [r3, #0]
 800c84c:	3314      	adds	r3, #20
 800c84e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800c850:	623a      	str	r2, [r7, #32]
 800c852:	61fb      	str	r3, [r7, #28]
 800c854:	69f9      	ldr	r1, [r7, #28]
 800c856:	6a3a      	ldr	r2, [r7, #32]
 800c858:	e841 2300 	strex	r3, r2, [r1]
 800c85c:	61bb      	str	r3, [r7, #24]
 800c85e:	69bb      	ldr	r3, [r7, #24]
 800c860:	2b00      	cmp	r3, #0
 800c862:	d1e5      	bne.n	800c830 <UART_WaitOnFlagUntilTimeout+0x64>
 800c864:	68fb      	ldr	r3, [r7, #12]
 800c866:	2220      	movs	r2, #32
 800c868:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c86c:	68fb      	ldr	r3, [r7, #12]
 800c86e:	2220      	movs	r2, #32
 800c870:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c874:	68fb      	ldr	r3, [r7, #12]
 800c876:	2200      	movs	r2, #0
 800c878:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c87c:	2303      	movs	r3, #3
 800c87e:	e00f      	b.n	800c8a0 <UART_WaitOnFlagUntilTimeout+0xd4>
 800c880:	68fb      	ldr	r3, [r7, #12]
 800c882:	681b      	ldr	r3, [r3, #0]
 800c884:	681a      	ldr	r2, [r3, #0]
 800c886:	68bb      	ldr	r3, [r7, #8]
 800c888:	4013      	ands	r3, r2
 800c88a:	68ba      	ldr	r2, [r7, #8]
 800c88c:	429a      	cmp	r2, r3
 800c88e:	bf0c      	ite	eq
 800c890:	2301      	moveq	r3, #1
 800c892:	2300      	movne	r3, #0
 800c894:	b2db      	uxtb	r3, r3
 800c896:	461a      	mov	r2, r3
 800c898:	79fb      	ldrb	r3, [r7, #7]
 800c89a:	429a      	cmp	r2, r3
 800c89c:	d09f      	beq.n	800c7de <UART_WaitOnFlagUntilTimeout+0x12>
 800c89e:	2300      	movs	r3, #0
 800c8a0:	4618      	mov	r0, r3
 800c8a2:	3740      	adds	r7, #64	; 0x40
 800c8a4:	46bd      	mov	sp, r7
 800c8a6:	bd80      	pop	{r7, pc}

0800c8a8 <UART_Start_Receive_IT>:
 800c8a8:	b480      	push	{r7}
 800c8aa:	b085      	sub	sp, #20
 800c8ac:	af00      	add	r7, sp, #0
 800c8ae:	60f8      	str	r0, [r7, #12]
 800c8b0:	60b9      	str	r1, [r7, #8]
 800c8b2:	4613      	mov	r3, r2
 800c8b4:	80fb      	strh	r3, [r7, #6]
 800c8b6:	68fb      	ldr	r3, [r7, #12]
 800c8b8:	68ba      	ldr	r2, [r7, #8]
 800c8ba:	629a      	str	r2, [r3, #40]	; 0x28
 800c8bc:	68fb      	ldr	r3, [r7, #12]
 800c8be:	88fa      	ldrh	r2, [r7, #6]
 800c8c0:	859a      	strh	r2, [r3, #44]	; 0x2c
 800c8c2:	68fb      	ldr	r3, [r7, #12]
 800c8c4:	88fa      	ldrh	r2, [r7, #6]
 800c8c6:	85da      	strh	r2, [r3, #46]	; 0x2e
 800c8c8:	68fb      	ldr	r3, [r7, #12]
 800c8ca:	2200      	movs	r2, #0
 800c8cc:	641a      	str	r2, [r3, #64]	; 0x40
 800c8ce:	68fb      	ldr	r3, [r7, #12]
 800c8d0:	2222      	movs	r2, #34	; 0x22
 800c8d2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c8d6:	68fb      	ldr	r3, [r7, #12]
 800c8d8:	2200      	movs	r2, #0
 800c8da:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c8de:	68fb      	ldr	r3, [r7, #12]
 800c8e0:	691b      	ldr	r3, [r3, #16]
 800c8e2:	2b00      	cmp	r3, #0
 800c8e4:	d007      	beq.n	800c8f6 <UART_Start_Receive_IT+0x4e>
 800c8e6:	68fb      	ldr	r3, [r7, #12]
 800c8e8:	681b      	ldr	r3, [r3, #0]
 800c8ea:	68da      	ldr	r2, [r3, #12]
 800c8ec:	68fb      	ldr	r3, [r7, #12]
 800c8ee:	681b      	ldr	r3, [r3, #0]
 800c8f0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800c8f4:	60da      	str	r2, [r3, #12]
 800c8f6:	68fb      	ldr	r3, [r7, #12]
 800c8f8:	681b      	ldr	r3, [r3, #0]
 800c8fa:	695a      	ldr	r2, [r3, #20]
 800c8fc:	68fb      	ldr	r3, [r7, #12]
 800c8fe:	681b      	ldr	r3, [r3, #0]
 800c900:	f042 0201 	orr.w	r2, r2, #1
 800c904:	615a      	str	r2, [r3, #20]
 800c906:	68fb      	ldr	r3, [r7, #12]
 800c908:	681b      	ldr	r3, [r3, #0]
 800c90a:	68da      	ldr	r2, [r3, #12]
 800c90c:	68fb      	ldr	r3, [r7, #12]
 800c90e:	681b      	ldr	r3, [r3, #0]
 800c910:	f042 0220 	orr.w	r2, r2, #32
 800c914:	60da      	str	r2, [r3, #12]
 800c916:	2300      	movs	r3, #0
 800c918:	4618      	mov	r0, r3
 800c91a:	3714      	adds	r7, #20
 800c91c:	46bd      	mov	sp, r7
 800c91e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c922:	4770      	bx	lr

0800c924 <UART_EndRxTransfer>:
 800c924:	b480      	push	{r7}
 800c926:	b095      	sub	sp, #84	; 0x54
 800c928:	af00      	add	r7, sp, #0
 800c92a:	6078      	str	r0, [r7, #4]
 800c92c:	687b      	ldr	r3, [r7, #4]
 800c92e:	681b      	ldr	r3, [r3, #0]
 800c930:	330c      	adds	r3, #12
 800c932:	637b      	str	r3, [r7, #52]	; 0x34
 800c934:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c936:	e853 3f00 	ldrex	r3, [r3]
 800c93a:	633b      	str	r3, [r7, #48]	; 0x30
 800c93c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c93e:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800c942:	64fb      	str	r3, [r7, #76]	; 0x4c
 800c944:	687b      	ldr	r3, [r7, #4]
 800c946:	681b      	ldr	r3, [r3, #0]
 800c948:	330c      	adds	r3, #12
 800c94a:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800c94c:	643a      	str	r2, [r7, #64]	; 0x40
 800c94e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800c950:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800c952:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800c954:	e841 2300 	strex	r3, r2, [r1]
 800c958:	63bb      	str	r3, [r7, #56]	; 0x38
 800c95a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c95c:	2b00      	cmp	r3, #0
 800c95e:	d1e5      	bne.n	800c92c <UART_EndRxTransfer+0x8>
 800c960:	687b      	ldr	r3, [r7, #4]
 800c962:	681b      	ldr	r3, [r3, #0]
 800c964:	3314      	adds	r3, #20
 800c966:	623b      	str	r3, [r7, #32]
 800c968:	6a3b      	ldr	r3, [r7, #32]
 800c96a:	e853 3f00 	ldrex	r3, [r3]
 800c96e:	61fb      	str	r3, [r7, #28]
 800c970:	69fb      	ldr	r3, [r7, #28]
 800c972:	f023 0301 	bic.w	r3, r3, #1
 800c976:	64bb      	str	r3, [r7, #72]	; 0x48
 800c978:	687b      	ldr	r3, [r7, #4]
 800c97a:	681b      	ldr	r3, [r3, #0]
 800c97c:	3314      	adds	r3, #20
 800c97e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800c980:	62fa      	str	r2, [r7, #44]	; 0x2c
 800c982:	62bb      	str	r3, [r7, #40]	; 0x28
 800c984:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800c986:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800c988:	e841 2300 	strex	r3, r2, [r1]
 800c98c:	627b      	str	r3, [r7, #36]	; 0x24
 800c98e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c990:	2b00      	cmp	r3, #0
 800c992:	d1e5      	bne.n	800c960 <UART_EndRxTransfer+0x3c>
 800c994:	687b      	ldr	r3, [r7, #4]
 800c996:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c998:	2b01      	cmp	r3, #1
 800c99a:	d119      	bne.n	800c9d0 <UART_EndRxTransfer+0xac>
 800c99c:	687b      	ldr	r3, [r7, #4]
 800c99e:	681b      	ldr	r3, [r3, #0]
 800c9a0:	330c      	adds	r3, #12
 800c9a2:	60fb      	str	r3, [r7, #12]
 800c9a4:	68fb      	ldr	r3, [r7, #12]
 800c9a6:	e853 3f00 	ldrex	r3, [r3]
 800c9aa:	60bb      	str	r3, [r7, #8]
 800c9ac:	68bb      	ldr	r3, [r7, #8]
 800c9ae:	f023 0310 	bic.w	r3, r3, #16
 800c9b2:	647b      	str	r3, [r7, #68]	; 0x44
 800c9b4:	687b      	ldr	r3, [r7, #4]
 800c9b6:	681b      	ldr	r3, [r3, #0]
 800c9b8:	330c      	adds	r3, #12
 800c9ba:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800c9bc:	61ba      	str	r2, [r7, #24]
 800c9be:	617b      	str	r3, [r7, #20]
 800c9c0:	6979      	ldr	r1, [r7, #20]
 800c9c2:	69ba      	ldr	r2, [r7, #24]
 800c9c4:	e841 2300 	strex	r3, r2, [r1]
 800c9c8:	613b      	str	r3, [r7, #16]
 800c9ca:	693b      	ldr	r3, [r7, #16]
 800c9cc:	2b00      	cmp	r3, #0
 800c9ce:	d1e5      	bne.n	800c99c <UART_EndRxTransfer+0x78>
 800c9d0:	687b      	ldr	r3, [r7, #4]
 800c9d2:	2220      	movs	r2, #32
 800c9d4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c9d8:	687b      	ldr	r3, [r7, #4]
 800c9da:	2200      	movs	r2, #0
 800c9dc:	631a      	str	r2, [r3, #48]	; 0x30
 800c9de:	bf00      	nop
 800c9e0:	3754      	adds	r7, #84	; 0x54
 800c9e2:	46bd      	mov	sp, r7
 800c9e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c9e8:	4770      	bx	lr

0800c9ea <UART_DMAAbortOnError>:
 800c9ea:	b580      	push	{r7, lr}
 800c9ec:	b084      	sub	sp, #16
 800c9ee:	af00      	add	r7, sp, #0
 800c9f0:	6078      	str	r0, [r7, #4]
 800c9f2:	687b      	ldr	r3, [r7, #4]
 800c9f4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c9f6:	60fb      	str	r3, [r7, #12]
 800c9f8:	68fb      	ldr	r3, [r7, #12]
 800c9fa:	2200      	movs	r2, #0
 800c9fc:	85da      	strh	r2, [r3, #46]	; 0x2e
 800c9fe:	68fb      	ldr	r3, [r7, #12]
 800ca00:	2200      	movs	r2, #0
 800ca02:	84da      	strh	r2, [r3, #38]	; 0x26
 800ca04:	68f8      	ldr	r0, [r7, #12]
 800ca06:	f7ff fecb 	bl	800c7a0 <HAL_UART_ErrorCallback>
 800ca0a:	bf00      	nop
 800ca0c:	3710      	adds	r7, #16
 800ca0e:	46bd      	mov	sp, r7
 800ca10:	bd80      	pop	{r7, pc}

0800ca12 <UART_Transmit_IT>:
 800ca12:	b480      	push	{r7}
 800ca14:	b085      	sub	sp, #20
 800ca16:	af00      	add	r7, sp, #0
 800ca18:	6078      	str	r0, [r7, #4]
 800ca1a:	687b      	ldr	r3, [r7, #4]
 800ca1c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800ca20:	b2db      	uxtb	r3, r3
 800ca22:	2b21      	cmp	r3, #33	; 0x21
 800ca24:	d13e      	bne.n	800caa4 <UART_Transmit_IT+0x92>
 800ca26:	687b      	ldr	r3, [r7, #4]
 800ca28:	689b      	ldr	r3, [r3, #8]
 800ca2a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800ca2e:	d114      	bne.n	800ca5a <UART_Transmit_IT+0x48>
 800ca30:	687b      	ldr	r3, [r7, #4]
 800ca32:	691b      	ldr	r3, [r3, #16]
 800ca34:	2b00      	cmp	r3, #0
 800ca36:	d110      	bne.n	800ca5a <UART_Transmit_IT+0x48>
 800ca38:	687b      	ldr	r3, [r7, #4]
 800ca3a:	6a1b      	ldr	r3, [r3, #32]
 800ca3c:	60fb      	str	r3, [r7, #12]
 800ca3e:	68fb      	ldr	r3, [r7, #12]
 800ca40:	881b      	ldrh	r3, [r3, #0]
 800ca42:	461a      	mov	r2, r3
 800ca44:	687b      	ldr	r3, [r7, #4]
 800ca46:	681b      	ldr	r3, [r3, #0]
 800ca48:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800ca4c:	605a      	str	r2, [r3, #4]
 800ca4e:	687b      	ldr	r3, [r7, #4]
 800ca50:	6a1b      	ldr	r3, [r3, #32]
 800ca52:	1c9a      	adds	r2, r3, #2
 800ca54:	687b      	ldr	r3, [r7, #4]
 800ca56:	621a      	str	r2, [r3, #32]
 800ca58:	e008      	b.n	800ca6c <UART_Transmit_IT+0x5a>
 800ca5a:	687b      	ldr	r3, [r7, #4]
 800ca5c:	6a1b      	ldr	r3, [r3, #32]
 800ca5e:	1c59      	adds	r1, r3, #1
 800ca60:	687a      	ldr	r2, [r7, #4]
 800ca62:	6211      	str	r1, [r2, #32]
 800ca64:	781a      	ldrb	r2, [r3, #0]
 800ca66:	687b      	ldr	r3, [r7, #4]
 800ca68:	681b      	ldr	r3, [r3, #0]
 800ca6a:	605a      	str	r2, [r3, #4]
 800ca6c:	687b      	ldr	r3, [r7, #4]
 800ca6e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800ca70:	b29b      	uxth	r3, r3
 800ca72:	3b01      	subs	r3, #1
 800ca74:	b29b      	uxth	r3, r3
 800ca76:	687a      	ldr	r2, [r7, #4]
 800ca78:	4619      	mov	r1, r3
 800ca7a:	84d1      	strh	r1, [r2, #38]	; 0x26
 800ca7c:	2b00      	cmp	r3, #0
 800ca7e:	d10f      	bne.n	800caa0 <UART_Transmit_IT+0x8e>
 800ca80:	687b      	ldr	r3, [r7, #4]
 800ca82:	681b      	ldr	r3, [r3, #0]
 800ca84:	68da      	ldr	r2, [r3, #12]
 800ca86:	687b      	ldr	r3, [r7, #4]
 800ca88:	681b      	ldr	r3, [r3, #0]
 800ca8a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800ca8e:	60da      	str	r2, [r3, #12]
 800ca90:	687b      	ldr	r3, [r7, #4]
 800ca92:	681b      	ldr	r3, [r3, #0]
 800ca94:	68da      	ldr	r2, [r3, #12]
 800ca96:	687b      	ldr	r3, [r7, #4]
 800ca98:	681b      	ldr	r3, [r3, #0]
 800ca9a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800ca9e:	60da      	str	r2, [r3, #12]
 800caa0:	2300      	movs	r3, #0
 800caa2:	e000      	b.n	800caa6 <UART_Transmit_IT+0x94>
 800caa4:	2302      	movs	r3, #2
 800caa6:	4618      	mov	r0, r3
 800caa8:	3714      	adds	r7, #20
 800caaa:	46bd      	mov	sp, r7
 800caac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cab0:	4770      	bx	lr

0800cab2 <UART_EndTransmit_IT>:
 800cab2:	b580      	push	{r7, lr}
 800cab4:	b082      	sub	sp, #8
 800cab6:	af00      	add	r7, sp, #0
 800cab8:	6078      	str	r0, [r7, #4]
 800caba:	687b      	ldr	r3, [r7, #4]
 800cabc:	681b      	ldr	r3, [r3, #0]
 800cabe:	68da      	ldr	r2, [r3, #12]
 800cac0:	687b      	ldr	r3, [r7, #4]
 800cac2:	681b      	ldr	r3, [r3, #0]
 800cac4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800cac8:	60da      	str	r2, [r3, #12]
 800caca:	687b      	ldr	r3, [r7, #4]
 800cacc:	2220      	movs	r2, #32
 800cace:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800cad2:	6878      	ldr	r0, [r7, #4]
 800cad4:	f7ff fe5a 	bl	800c78c <HAL_UART_TxCpltCallback>
 800cad8:	2300      	movs	r3, #0
 800cada:	4618      	mov	r0, r3
 800cadc:	3708      	adds	r7, #8
 800cade:	46bd      	mov	sp, r7
 800cae0:	bd80      	pop	{r7, pc}

0800cae2 <UART_Receive_IT>:
 800cae2:	b580      	push	{r7, lr}
 800cae4:	b08c      	sub	sp, #48	; 0x30
 800cae6:	af00      	add	r7, sp, #0
 800cae8:	6078      	str	r0, [r7, #4]
 800caea:	687b      	ldr	r3, [r7, #4]
 800caec:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800caf0:	b2db      	uxtb	r3, r3
 800caf2:	2b22      	cmp	r3, #34	; 0x22
 800caf4:	f040 80ab 	bne.w	800cc4e <UART_Receive_IT+0x16c>
 800caf8:	687b      	ldr	r3, [r7, #4]
 800cafa:	689b      	ldr	r3, [r3, #8]
 800cafc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800cb00:	d117      	bne.n	800cb32 <UART_Receive_IT+0x50>
 800cb02:	687b      	ldr	r3, [r7, #4]
 800cb04:	691b      	ldr	r3, [r3, #16]
 800cb06:	2b00      	cmp	r3, #0
 800cb08:	d113      	bne.n	800cb32 <UART_Receive_IT+0x50>
 800cb0a:	2300      	movs	r3, #0
 800cb0c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800cb0e:	687b      	ldr	r3, [r7, #4]
 800cb10:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cb12:	62bb      	str	r3, [r7, #40]	; 0x28
 800cb14:	687b      	ldr	r3, [r7, #4]
 800cb16:	681b      	ldr	r3, [r3, #0]
 800cb18:	685b      	ldr	r3, [r3, #4]
 800cb1a:	b29b      	uxth	r3, r3
 800cb1c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800cb20:	b29a      	uxth	r2, r3
 800cb22:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800cb24:	801a      	strh	r2, [r3, #0]
 800cb26:	687b      	ldr	r3, [r7, #4]
 800cb28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cb2a:	1c9a      	adds	r2, r3, #2
 800cb2c:	687b      	ldr	r3, [r7, #4]
 800cb2e:	629a      	str	r2, [r3, #40]	; 0x28
 800cb30:	e026      	b.n	800cb80 <UART_Receive_IT+0x9e>
 800cb32:	687b      	ldr	r3, [r7, #4]
 800cb34:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cb36:	62fb      	str	r3, [r7, #44]	; 0x2c
 800cb38:	2300      	movs	r3, #0
 800cb3a:	62bb      	str	r3, [r7, #40]	; 0x28
 800cb3c:	687b      	ldr	r3, [r7, #4]
 800cb3e:	689b      	ldr	r3, [r3, #8]
 800cb40:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800cb44:	d007      	beq.n	800cb56 <UART_Receive_IT+0x74>
 800cb46:	687b      	ldr	r3, [r7, #4]
 800cb48:	689b      	ldr	r3, [r3, #8]
 800cb4a:	2b00      	cmp	r3, #0
 800cb4c:	d10a      	bne.n	800cb64 <UART_Receive_IT+0x82>
 800cb4e:	687b      	ldr	r3, [r7, #4]
 800cb50:	691b      	ldr	r3, [r3, #16]
 800cb52:	2b00      	cmp	r3, #0
 800cb54:	d106      	bne.n	800cb64 <UART_Receive_IT+0x82>
 800cb56:	687b      	ldr	r3, [r7, #4]
 800cb58:	681b      	ldr	r3, [r3, #0]
 800cb5a:	685b      	ldr	r3, [r3, #4]
 800cb5c:	b2da      	uxtb	r2, r3
 800cb5e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800cb60:	701a      	strb	r2, [r3, #0]
 800cb62:	e008      	b.n	800cb76 <UART_Receive_IT+0x94>
 800cb64:	687b      	ldr	r3, [r7, #4]
 800cb66:	681b      	ldr	r3, [r3, #0]
 800cb68:	685b      	ldr	r3, [r3, #4]
 800cb6a:	b2db      	uxtb	r3, r3
 800cb6c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800cb70:	b2da      	uxtb	r2, r3
 800cb72:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800cb74:	701a      	strb	r2, [r3, #0]
 800cb76:	687b      	ldr	r3, [r7, #4]
 800cb78:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cb7a:	1c5a      	adds	r2, r3, #1
 800cb7c:	687b      	ldr	r3, [r7, #4]
 800cb7e:	629a      	str	r2, [r3, #40]	; 0x28
 800cb80:	687b      	ldr	r3, [r7, #4]
 800cb82:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800cb84:	b29b      	uxth	r3, r3
 800cb86:	3b01      	subs	r3, #1
 800cb88:	b29b      	uxth	r3, r3
 800cb8a:	687a      	ldr	r2, [r7, #4]
 800cb8c:	4619      	mov	r1, r3
 800cb8e:	85d1      	strh	r1, [r2, #46]	; 0x2e
 800cb90:	2b00      	cmp	r3, #0
 800cb92:	d15a      	bne.n	800cc4a <UART_Receive_IT+0x168>
 800cb94:	687b      	ldr	r3, [r7, #4]
 800cb96:	681b      	ldr	r3, [r3, #0]
 800cb98:	68da      	ldr	r2, [r3, #12]
 800cb9a:	687b      	ldr	r3, [r7, #4]
 800cb9c:	681b      	ldr	r3, [r3, #0]
 800cb9e:	f022 0220 	bic.w	r2, r2, #32
 800cba2:	60da      	str	r2, [r3, #12]
 800cba4:	687b      	ldr	r3, [r7, #4]
 800cba6:	681b      	ldr	r3, [r3, #0]
 800cba8:	68da      	ldr	r2, [r3, #12]
 800cbaa:	687b      	ldr	r3, [r7, #4]
 800cbac:	681b      	ldr	r3, [r3, #0]
 800cbae:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800cbb2:	60da      	str	r2, [r3, #12]
 800cbb4:	687b      	ldr	r3, [r7, #4]
 800cbb6:	681b      	ldr	r3, [r3, #0]
 800cbb8:	695a      	ldr	r2, [r3, #20]
 800cbba:	687b      	ldr	r3, [r7, #4]
 800cbbc:	681b      	ldr	r3, [r3, #0]
 800cbbe:	f022 0201 	bic.w	r2, r2, #1
 800cbc2:	615a      	str	r2, [r3, #20]
 800cbc4:	687b      	ldr	r3, [r7, #4]
 800cbc6:	2220      	movs	r2, #32
 800cbc8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800cbcc:	687b      	ldr	r3, [r7, #4]
 800cbce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cbd0:	2b01      	cmp	r3, #1
 800cbd2:	d135      	bne.n	800cc40 <UART_Receive_IT+0x15e>
 800cbd4:	687b      	ldr	r3, [r7, #4]
 800cbd6:	2200      	movs	r2, #0
 800cbd8:	631a      	str	r2, [r3, #48]	; 0x30
 800cbda:	687b      	ldr	r3, [r7, #4]
 800cbdc:	681b      	ldr	r3, [r3, #0]
 800cbde:	330c      	adds	r3, #12
 800cbe0:	617b      	str	r3, [r7, #20]
 800cbe2:	697b      	ldr	r3, [r7, #20]
 800cbe4:	e853 3f00 	ldrex	r3, [r3]
 800cbe8:	613b      	str	r3, [r7, #16]
 800cbea:	693b      	ldr	r3, [r7, #16]
 800cbec:	f023 0310 	bic.w	r3, r3, #16
 800cbf0:	627b      	str	r3, [r7, #36]	; 0x24
 800cbf2:	687b      	ldr	r3, [r7, #4]
 800cbf4:	681b      	ldr	r3, [r3, #0]
 800cbf6:	330c      	adds	r3, #12
 800cbf8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800cbfa:	623a      	str	r2, [r7, #32]
 800cbfc:	61fb      	str	r3, [r7, #28]
 800cbfe:	69f9      	ldr	r1, [r7, #28]
 800cc00:	6a3a      	ldr	r2, [r7, #32]
 800cc02:	e841 2300 	strex	r3, r2, [r1]
 800cc06:	61bb      	str	r3, [r7, #24]
 800cc08:	69bb      	ldr	r3, [r7, #24]
 800cc0a:	2b00      	cmp	r3, #0
 800cc0c:	d1e5      	bne.n	800cbda <UART_Receive_IT+0xf8>
 800cc0e:	687b      	ldr	r3, [r7, #4]
 800cc10:	681b      	ldr	r3, [r3, #0]
 800cc12:	681b      	ldr	r3, [r3, #0]
 800cc14:	f003 0310 	and.w	r3, r3, #16
 800cc18:	2b10      	cmp	r3, #16
 800cc1a:	d10a      	bne.n	800cc32 <UART_Receive_IT+0x150>
 800cc1c:	2300      	movs	r3, #0
 800cc1e:	60fb      	str	r3, [r7, #12]
 800cc20:	687b      	ldr	r3, [r7, #4]
 800cc22:	681b      	ldr	r3, [r3, #0]
 800cc24:	681b      	ldr	r3, [r3, #0]
 800cc26:	60fb      	str	r3, [r7, #12]
 800cc28:	687b      	ldr	r3, [r7, #4]
 800cc2a:	681b      	ldr	r3, [r3, #0]
 800cc2c:	685b      	ldr	r3, [r3, #4]
 800cc2e:	60fb      	str	r3, [r7, #12]
 800cc30:	68fb      	ldr	r3, [r7, #12]
 800cc32:	687b      	ldr	r3, [r7, #4]
 800cc34:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800cc36:	4619      	mov	r1, r3
 800cc38:	6878      	ldr	r0, [r7, #4]
 800cc3a:	f7ff fdbb 	bl	800c7b4 <HAL_UARTEx_RxEventCallback>
 800cc3e:	e002      	b.n	800cc46 <UART_Receive_IT+0x164>
 800cc40:	6878      	ldr	r0, [r7, #4]
 800cc42:	f7f9 ff31 	bl	8006aa8 <HAL_UART_RxCpltCallback>
 800cc46:	2300      	movs	r3, #0
 800cc48:	e002      	b.n	800cc50 <UART_Receive_IT+0x16e>
 800cc4a:	2300      	movs	r3, #0
 800cc4c:	e000      	b.n	800cc50 <UART_Receive_IT+0x16e>
 800cc4e:	2302      	movs	r3, #2
 800cc50:	4618      	mov	r0, r3
 800cc52:	3730      	adds	r7, #48	; 0x30
 800cc54:	46bd      	mov	sp, r7
 800cc56:	bd80      	pop	{r7, pc}

0800cc58 <UART_SetConfig>:
 800cc58:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800cc5c:	b0c0      	sub	sp, #256	; 0x100
 800cc5e:	af00      	add	r7, sp, #0
 800cc60:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 800cc64:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cc68:	681b      	ldr	r3, [r3, #0]
 800cc6a:	691b      	ldr	r3, [r3, #16]
 800cc6c:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 800cc70:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cc74:	68d9      	ldr	r1, [r3, #12]
 800cc76:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cc7a:	681a      	ldr	r2, [r3, #0]
 800cc7c:	ea40 0301 	orr.w	r3, r0, r1
 800cc80:	6113      	str	r3, [r2, #16]
 800cc82:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cc86:	689a      	ldr	r2, [r3, #8]
 800cc88:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cc8c:	691b      	ldr	r3, [r3, #16]
 800cc8e:	431a      	orrs	r2, r3
 800cc90:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cc94:	695b      	ldr	r3, [r3, #20]
 800cc96:	431a      	orrs	r2, r3
 800cc98:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cc9c:	69db      	ldr	r3, [r3, #28]
 800cc9e:	4313      	orrs	r3, r2
 800cca0:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 800cca4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cca8:	681b      	ldr	r3, [r3, #0]
 800ccaa:	68db      	ldr	r3, [r3, #12]
 800ccac:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 800ccb0:	f021 010c 	bic.w	r1, r1, #12
 800ccb4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ccb8:	681a      	ldr	r2, [r3, #0]
 800ccba:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 800ccbe:	430b      	orrs	r3, r1
 800ccc0:	60d3      	str	r3, [r2, #12]
 800ccc2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ccc6:	681b      	ldr	r3, [r3, #0]
 800ccc8:	695b      	ldr	r3, [r3, #20]
 800ccca:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 800ccce:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ccd2:	6999      	ldr	r1, [r3, #24]
 800ccd4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ccd8:	681a      	ldr	r2, [r3, #0]
 800ccda:	ea40 0301 	orr.w	r3, r0, r1
 800ccde:	6153      	str	r3, [r2, #20]
 800cce0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cce4:	681a      	ldr	r2, [r3, #0]
 800cce6:	4b8f      	ldr	r3, [pc, #572]	; (800cf24 <UART_SetConfig+0x2cc>)
 800cce8:	429a      	cmp	r2, r3
 800ccea:	d005      	beq.n	800ccf8 <UART_SetConfig+0xa0>
 800ccec:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ccf0:	681a      	ldr	r2, [r3, #0]
 800ccf2:	4b8d      	ldr	r3, [pc, #564]	; (800cf28 <UART_SetConfig+0x2d0>)
 800ccf4:	429a      	cmp	r2, r3
 800ccf6:	d104      	bne.n	800cd02 <UART_SetConfig+0xaa>
 800ccf8:	f7fc fda4 	bl	8009844 <HAL_RCC_GetPCLK2Freq>
 800ccfc:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800cd00:	e003      	b.n	800cd0a <UART_SetConfig+0xb2>
 800cd02:	f7fc fd8b 	bl	800981c <HAL_RCC_GetPCLK1Freq>
 800cd06:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800cd0a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cd0e:	69db      	ldr	r3, [r3, #28]
 800cd10:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800cd14:	f040 810c 	bne.w	800cf30 <UART_SetConfig+0x2d8>
 800cd18:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800cd1c:	2200      	movs	r2, #0
 800cd1e:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800cd22:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 800cd26:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 800cd2a:	4622      	mov	r2, r4
 800cd2c:	462b      	mov	r3, r5
 800cd2e:	1891      	adds	r1, r2, r2
 800cd30:	65b9      	str	r1, [r7, #88]	; 0x58
 800cd32:	415b      	adcs	r3, r3
 800cd34:	65fb      	str	r3, [r7, #92]	; 0x5c
 800cd36:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800cd3a:	4621      	mov	r1, r4
 800cd3c:	eb12 0801 	adds.w	r8, r2, r1
 800cd40:	4629      	mov	r1, r5
 800cd42:	eb43 0901 	adc.w	r9, r3, r1
 800cd46:	f04f 0200 	mov.w	r2, #0
 800cd4a:	f04f 0300 	mov.w	r3, #0
 800cd4e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800cd52:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800cd56:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800cd5a:	4690      	mov	r8, r2
 800cd5c:	4699      	mov	r9, r3
 800cd5e:	4623      	mov	r3, r4
 800cd60:	eb18 0303 	adds.w	r3, r8, r3
 800cd64:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800cd68:	462b      	mov	r3, r5
 800cd6a:	eb49 0303 	adc.w	r3, r9, r3
 800cd6e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800cd72:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cd76:	685b      	ldr	r3, [r3, #4]
 800cd78:	2200      	movs	r2, #0
 800cd7a:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800cd7e:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 800cd82:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 800cd86:	460b      	mov	r3, r1
 800cd88:	18db      	adds	r3, r3, r3
 800cd8a:	653b      	str	r3, [r7, #80]	; 0x50
 800cd8c:	4613      	mov	r3, r2
 800cd8e:	eb42 0303 	adc.w	r3, r2, r3
 800cd92:	657b      	str	r3, [r7, #84]	; 0x54
 800cd94:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800cd98:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800cd9c:	f7f3 ff74 	bl	8000c88 <__aeabi_uldivmod>
 800cda0:	4602      	mov	r2, r0
 800cda2:	460b      	mov	r3, r1
 800cda4:	4b61      	ldr	r3, [pc, #388]	; (800cf2c <UART_SetConfig+0x2d4>)
 800cda6:	fba3 2302 	umull	r2, r3, r3, r2
 800cdaa:	095b      	lsrs	r3, r3, #5
 800cdac:	011c      	lsls	r4, r3, #4
 800cdae:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800cdb2:	2200      	movs	r2, #0
 800cdb4:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800cdb8:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 800cdbc:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 800cdc0:	4642      	mov	r2, r8
 800cdc2:	464b      	mov	r3, r9
 800cdc4:	1891      	adds	r1, r2, r2
 800cdc6:	64b9      	str	r1, [r7, #72]	; 0x48
 800cdc8:	415b      	adcs	r3, r3
 800cdca:	64fb      	str	r3, [r7, #76]	; 0x4c
 800cdcc:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 800cdd0:	4641      	mov	r1, r8
 800cdd2:	eb12 0a01 	adds.w	sl, r2, r1
 800cdd6:	4649      	mov	r1, r9
 800cdd8:	eb43 0b01 	adc.w	fp, r3, r1
 800cddc:	f04f 0200 	mov.w	r2, #0
 800cde0:	f04f 0300 	mov.w	r3, #0
 800cde4:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800cde8:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800cdec:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800cdf0:	4692      	mov	sl, r2
 800cdf2:	469b      	mov	fp, r3
 800cdf4:	4643      	mov	r3, r8
 800cdf6:	eb1a 0303 	adds.w	r3, sl, r3
 800cdfa:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800cdfe:	464b      	mov	r3, r9
 800ce00:	eb4b 0303 	adc.w	r3, fp, r3
 800ce04:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 800ce08:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ce0c:	685b      	ldr	r3, [r3, #4]
 800ce0e:	2200      	movs	r2, #0
 800ce10:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800ce14:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 800ce18:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 800ce1c:	460b      	mov	r3, r1
 800ce1e:	18db      	adds	r3, r3, r3
 800ce20:	643b      	str	r3, [r7, #64]	; 0x40
 800ce22:	4613      	mov	r3, r2
 800ce24:	eb42 0303 	adc.w	r3, r2, r3
 800ce28:	647b      	str	r3, [r7, #68]	; 0x44
 800ce2a:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800ce2e:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 800ce32:	f7f3 ff29 	bl	8000c88 <__aeabi_uldivmod>
 800ce36:	4602      	mov	r2, r0
 800ce38:	460b      	mov	r3, r1
 800ce3a:	4611      	mov	r1, r2
 800ce3c:	4b3b      	ldr	r3, [pc, #236]	; (800cf2c <UART_SetConfig+0x2d4>)
 800ce3e:	fba3 2301 	umull	r2, r3, r3, r1
 800ce42:	095b      	lsrs	r3, r3, #5
 800ce44:	2264      	movs	r2, #100	; 0x64
 800ce46:	fb02 f303 	mul.w	r3, r2, r3
 800ce4a:	1acb      	subs	r3, r1, r3
 800ce4c:	00db      	lsls	r3, r3, #3
 800ce4e:	f103 0232 	add.w	r2, r3, #50	; 0x32
 800ce52:	4b36      	ldr	r3, [pc, #216]	; (800cf2c <UART_SetConfig+0x2d4>)
 800ce54:	fba3 2302 	umull	r2, r3, r3, r2
 800ce58:	095b      	lsrs	r3, r3, #5
 800ce5a:	005b      	lsls	r3, r3, #1
 800ce5c:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800ce60:	441c      	add	r4, r3
 800ce62:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800ce66:	2200      	movs	r2, #0
 800ce68:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800ce6c:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 800ce70:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 800ce74:	4642      	mov	r2, r8
 800ce76:	464b      	mov	r3, r9
 800ce78:	1891      	adds	r1, r2, r2
 800ce7a:	63b9      	str	r1, [r7, #56]	; 0x38
 800ce7c:	415b      	adcs	r3, r3
 800ce7e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ce80:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800ce84:	4641      	mov	r1, r8
 800ce86:	1851      	adds	r1, r2, r1
 800ce88:	6339      	str	r1, [r7, #48]	; 0x30
 800ce8a:	4649      	mov	r1, r9
 800ce8c:	414b      	adcs	r3, r1
 800ce8e:	637b      	str	r3, [r7, #52]	; 0x34
 800ce90:	f04f 0200 	mov.w	r2, #0
 800ce94:	f04f 0300 	mov.w	r3, #0
 800ce98:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 800ce9c:	4659      	mov	r1, fp
 800ce9e:	00cb      	lsls	r3, r1, #3
 800cea0:	4651      	mov	r1, sl
 800cea2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800cea6:	4651      	mov	r1, sl
 800cea8:	00ca      	lsls	r2, r1, #3
 800ceaa:	4610      	mov	r0, r2
 800ceac:	4619      	mov	r1, r3
 800ceae:	4603      	mov	r3, r0
 800ceb0:	4642      	mov	r2, r8
 800ceb2:	189b      	adds	r3, r3, r2
 800ceb4:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800ceb8:	464b      	mov	r3, r9
 800ceba:	460a      	mov	r2, r1
 800cebc:	eb42 0303 	adc.w	r3, r2, r3
 800cec0:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800cec4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cec8:	685b      	ldr	r3, [r3, #4]
 800ceca:	2200      	movs	r2, #0
 800cecc:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800ced0:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 800ced4:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 800ced8:	460b      	mov	r3, r1
 800ceda:	18db      	adds	r3, r3, r3
 800cedc:	62bb      	str	r3, [r7, #40]	; 0x28
 800cede:	4613      	mov	r3, r2
 800cee0:	eb42 0303 	adc.w	r3, r2, r3
 800cee4:	62fb      	str	r3, [r7, #44]	; 0x2c
 800cee6:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800ceea:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 800ceee:	f7f3 fecb 	bl	8000c88 <__aeabi_uldivmod>
 800cef2:	4602      	mov	r2, r0
 800cef4:	460b      	mov	r3, r1
 800cef6:	4b0d      	ldr	r3, [pc, #52]	; (800cf2c <UART_SetConfig+0x2d4>)
 800cef8:	fba3 1302 	umull	r1, r3, r3, r2
 800cefc:	095b      	lsrs	r3, r3, #5
 800cefe:	2164      	movs	r1, #100	; 0x64
 800cf00:	fb01 f303 	mul.w	r3, r1, r3
 800cf04:	1ad3      	subs	r3, r2, r3
 800cf06:	00db      	lsls	r3, r3, #3
 800cf08:	3332      	adds	r3, #50	; 0x32
 800cf0a:	4a08      	ldr	r2, [pc, #32]	; (800cf2c <UART_SetConfig+0x2d4>)
 800cf0c:	fba2 2303 	umull	r2, r3, r2, r3
 800cf10:	095b      	lsrs	r3, r3, #5
 800cf12:	f003 0207 	and.w	r2, r3, #7
 800cf16:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cf1a:	681b      	ldr	r3, [r3, #0]
 800cf1c:	4422      	add	r2, r4
 800cf1e:	609a      	str	r2, [r3, #8]
 800cf20:	e105      	b.n	800d12e <UART_SetConfig+0x4d6>
 800cf22:	bf00      	nop
 800cf24:	40011000 	.word	0x40011000
 800cf28:	40011400 	.word	0x40011400
 800cf2c:	51eb851f 	.word	0x51eb851f
 800cf30:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800cf34:	2200      	movs	r2, #0
 800cf36:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800cf3a:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800cf3e:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 800cf42:	4642      	mov	r2, r8
 800cf44:	464b      	mov	r3, r9
 800cf46:	1891      	adds	r1, r2, r2
 800cf48:	6239      	str	r1, [r7, #32]
 800cf4a:	415b      	adcs	r3, r3
 800cf4c:	627b      	str	r3, [r7, #36]	; 0x24
 800cf4e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800cf52:	4641      	mov	r1, r8
 800cf54:	1854      	adds	r4, r2, r1
 800cf56:	4649      	mov	r1, r9
 800cf58:	eb43 0501 	adc.w	r5, r3, r1
 800cf5c:	f04f 0200 	mov.w	r2, #0
 800cf60:	f04f 0300 	mov.w	r3, #0
 800cf64:	00eb      	lsls	r3, r5, #3
 800cf66:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800cf6a:	00e2      	lsls	r2, r4, #3
 800cf6c:	4614      	mov	r4, r2
 800cf6e:	461d      	mov	r5, r3
 800cf70:	4643      	mov	r3, r8
 800cf72:	18e3      	adds	r3, r4, r3
 800cf74:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800cf78:	464b      	mov	r3, r9
 800cf7a:	eb45 0303 	adc.w	r3, r5, r3
 800cf7e:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800cf82:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cf86:	685b      	ldr	r3, [r3, #4]
 800cf88:	2200      	movs	r2, #0
 800cf8a:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800cf8e:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800cf92:	f04f 0200 	mov.w	r2, #0
 800cf96:	f04f 0300 	mov.w	r3, #0
 800cf9a:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 800cf9e:	4629      	mov	r1, r5
 800cfa0:	008b      	lsls	r3, r1, #2
 800cfa2:	4621      	mov	r1, r4
 800cfa4:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800cfa8:	4621      	mov	r1, r4
 800cfaa:	008a      	lsls	r2, r1, #2
 800cfac:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 800cfb0:	f7f3 fe6a 	bl	8000c88 <__aeabi_uldivmod>
 800cfb4:	4602      	mov	r2, r0
 800cfb6:	460b      	mov	r3, r1
 800cfb8:	4b60      	ldr	r3, [pc, #384]	; (800d13c <UART_SetConfig+0x4e4>)
 800cfba:	fba3 2302 	umull	r2, r3, r3, r2
 800cfbe:	095b      	lsrs	r3, r3, #5
 800cfc0:	011c      	lsls	r4, r3, #4
 800cfc2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800cfc6:	2200      	movs	r2, #0
 800cfc8:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800cfcc:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800cfd0:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 800cfd4:	4642      	mov	r2, r8
 800cfd6:	464b      	mov	r3, r9
 800cfd8:	1891      	adds	r1, r2, r2
 800cfda:	61b9      	str	r1, [r7, #24]
 800cfdc:	415b      	adcs	r3, r3
 800cfde:	61fb      	str	r3, [r7, #28]
 800cfe0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800cfe4:	4641      	mov	r1, r8
 800cfe6:	1851      	adds	r1, r2, r1
 800cfe8:	6139      	str	r1, [r7, #16]
 800cfea:	4649      	mov	r1, r9
 800cfec:	414b      	adcs	r3, r1
 800cfee:	617b      	str	r3, [r7, #20]
 800cff0:	f04f 0200 	mov.w	r2, #0
 800cff4:	f04f 0300 	mov.w	r3, #0
 800cff8:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800cffc:	4659      	mov	r1, fp
 800cffe:	00cb      	lsls	r3, r1, #3
 800d000:	4651      	mov	r1, sl
 800d002:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800d006:	4651      	mov	r1, sl
 800d008:	00ca      	lsls	r2, r1, #3
 800d00a:	4610      	mov	r0, r2
 800d00c:	4619      	mov	r1, r3
 800d00e:	4603      	mov	r3, r0
 800d010:	4642      	mov	r2, r8
 800d012:	189b      	adds	r3, r3, r2
 800d014:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800d018:	464b      	mov	r3, r9
 800d01a:	460a      	mov	r2, r1
 800d01c:	eb42 0303 	adc.w	r3, r2, r3
 800d020:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800d024:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d028:	685b      	ldr	r3, [r3, #4]
 800d02a:	2200      	movs	r2, #0
 800d02c:	67bb      	str	r3, [r7, #120]	; 0x78
 800d02e:	67fa      	str	r2, [r7, #124]	; 0x7c
 800d030:	f04f 0200 	mov.w	r2, #0
 800d034:	f04f 0300 	mov.w	r3, #0
 800d038:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 800d03c:	4649      	mov	r1, r9
 800d03e:	008b      	lsls	r3, r1, #2
 800d040:	4641      	mov	r1, r8
 800d042:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800d046:	4641      	mov	r1, r8
 800d048:	008a      	lsls	r2, r1, #2
 800d04a:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800d04e:	f7f3 fe1b 	bl	8000c88 <__aeabi_uldivmod>
 800d052:	4602      	mov	r2, r0
 800d054:	460b      	mov	r3, r1
 800d056:	4b39      	ldr	r3, [pc, #228]	; (800d13c <UART_SetConfig+0x4e4>)
 800d058:	fba3 1302 	umull	r1, r3, r3, r2
 800d05c:	095b      	lsrs	r3, r3, #5
 800d05e:	2164      	movs	r1, #100	; 0x64
 800d060:	fb01 f303 	mul.w	r3, r1, r3
 800d064:	1ad3      	subs	r3, r2, r3
 800d066:	011b      	lsls	r3, r3, #4
 800d068:	3332      	adds	r3, #50	; 0x32
 800d06a:	4a34      	ldr	r2, [pc, #208]	; (800d13c <UART_SetConfig+0x4e4>)
 800d06c:	fba2 2303 	umull	r2, r3, r2, r3
 800d070:	095b      	lsrs	r3, r3, #5
 800d072:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800d076:	441c      	add	r4, r3
 800d078:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800d07c:	2200      	movs	r2, #0
 800d07e:	673b      	str	r3, [r7, #112]	; 0x70
 800d080:	677a      	str	r2, [r7, #116]	; 0x74
 800d082:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 800d086:	4642      	mov	r2, r8
 800d088:	464b      	mov	r3, r9
 800d08a:	1891      	adds	r1, r2, r2
 800d08c:	60b9      	str	r1, [r7, #8]
 800d08e:	415b      	adcs	r3, r3
 800d090:	60fb      	str	r3, [r7, #12]
 800d092:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800d096:	4641      	mov	r1, r8
 800d098:	1851      	adds	r1, r2, r1
 800d09a:	6039      	str	r1, [r7, #0]
 800d09c:	4649      	mov	r1, r9
 800d09e:	414b      	adcs	r3, r1
 800d0a0:	607b      	str	r3, [r7, #4]
 800d0a2:	f04f 0200 	mov.w	r2, #0
 800d0a6:	f04f 0300 	mov.w	r3, #0
 800d0aa:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800d0ae:	4659      	mov	r1, fp
 800d0b0:	00cb      	lsls	r3, r1, #3
 800d0b2:	4651      	mov	r1, sl
 800d0b4:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800d0b8:	4651      	mov	r1, sl
 800d0ba:	00ca      	lsls	r2, r1, #3
 800d0bc:	4610      	mov	r0, r2
 800d0be:	4619      	mov	r1, r3
 800d0c0:	4603      	mov	r3, r0
 800d0c2:	4642      	mov	r2, r8
 800d0c4:	189b      	adds	r3, r3, r2
 800d0c6:	66bb      	str	r3, [r7, #104]	; 0x68
 800d0c8:	464b      	mov	r3, r9
 800d0ca:	460a      	mov	r2, r1
 800d0cc:	eb42 0303 	adc.w	r3, r2, r3
 800d0d0:	66fb      	str	r3, [r7, #108]	; 0x6c
 800d0d2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d0d6:	685b      	ldr	r3, [r3, #4]
 800d0d8:	2200      	movs	r2, #0
 800d0da:	663b      	str	r3, [r7, #96]	; 0x60
 800d0dc:	667a      	str	r2, [r7, #100]	; 0x64
 800d0de:	f04f 0200 	mov.w	r2, #0
 800d0e2:	f04f 0300 	mov.w	r3, #0
 800d0e6:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 800d0ea:	4649      	mov	r1, r9
 800d0ec:	008b      	lsls	r3, r1, #2
 800d0ee:	4641      	mov	r1, r8
 800d0f0:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800d0f4:	4641      	mov	r1, r8
 800d0f6:	008a      	lsls	r2, r1, #2
 800d0f8:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800d0fc:	f7f3 fdc4 	bl	8000c88 <__aeabi_uldivmod>
 800d100:	4602      	mov	r2, r0
 800d102:	460b      	mov	r3, r1
 800d104:	4b0d      	ldr	r3, [pc, #52]	; (800d13c <UART_SetConfig+0x4e4>)
 800d106:	fba3 1302 	umull	r1, r3, r3, r2
 800d10a:	095b      	lsrs	r3, r3, #5
 800d10c:	2164      	movs	r1, #100	; 0x64
 800d10e:	fb01 f303 	mul.w	r3, r1, r3
 800d112:	1ad3      	subs	r3, r2, r3
 800d114:	011b      	lsls	r3, r3, #4
 800d116:	3332      	adds	r3, #50	; 0x32
 800d118:	4a08      	ldr	r2, [pc, #32]	; (800d13c <UART_SetConfig+0x4e4>)
 800d11a:	fba2 2303 	umull	r2, r3, r2, r3
 800d11e:	095b      	lsrs	r3, r3, #5
 800d120:	f003 020f 	and.w	r2, r3, #15
 800d124:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d128:	681b      	ldr	r3, [r3, #0]
 800d12a:	4422      	add	r2, r4
 800d12c:	609a      	str	r2, [r3, #8]
 800d12e:	bf00      	nop
 800d130:	f507 7780 	add.w	r7, r7, #256	; 0x100
 800d134:	46bd      	mov	sp, r7
 800d136:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800d13a:	bf00      	nop
 800d13c:	51eb851f 	.word	0x51eb851f

0800d140 <__errno>:
 800d140:	4b01      	ldr	r3, [pc, #4]	; (800d148 <__errno+0x8>)
 800d142:	6818      	ldr	r0, [r3, #0]
 800d144:	4770      	bx	lr
 800d146:	bf00      	nop
 800d148:	20000140 	.word	0x20000140

0800d14c <__libc_init_array>:
 800d14c:	b570      	push	{r4, r5, r6, lr}
 800d14e:	4d0d      	ldr	r5, [pc, #52]	; (800d184 <__libc_init_array+0x38>)
 800d150:	4c0d      	ldr	r4, [pc, #52]	; (800d188 <__libc_init_array+0x3c>)
 800d152:	1b64      	subs	r4, r4, r5
 800d154:	10a4      	asrs	r4, r4, #2
 800d156:	2600      	movs	r6, #0
 800d158:	42a6      	cmp	r6, r4
 800d15a:	d109      	bne.n	800d170 <__libc_init_array+0x24>
 800d15c:	4d0b      	ldr	r5, [pc, #44]	; (800d18c <__libc_init_array+0x40>)
 800d15e:	4c0c      	ldr	r4, [pc, #48]	; (800d190 <__libc_init_array+0x44>)
 800d160:	f004 f950 	bl	8011404 <_init>
 800d164:	1b64      	subs	r4, r4, r5
 800d166:	10a4      	asrs	r4, r4, #2
 800d168:	2600      	movs	r6, #0
 800d16a:	42a6      	cmp	r6, r4
 800d16c:	d105      	bne.n	800d17a <__libc_init_array+0x2e>
 800d16e:	bd70      	pop	{r4, r5, r6, pc}
 800d170:	f855 3b04 	ldr.w	r3, [r5], #4
 800d174:	4798      	blx	r3
 800d176:	3601      	adds	r6, #1
 800d178:	e7ee      	b.n	800d158 <__libc_init_array+0xc>
 800d17a:	f855 3b04 	ldr.w	r3, [r5], #4
 800d17e:	4798      	blx	r3
 800d180:	3601      	adds	r6, #1
 800d182:	e7f2      	b.n	800d16a <__libc_init_array+0x1e>
 800d184:	08011b80 	.word	0x08011b80
 800d188:	08011b80 	.word	0x08011b80
 800d18c:	08011b80 	.word	0x08011b80
 800d190:	08011b84 	.word	0x08011b84

0800d194 <memset>:
 800d194:	4402      	add	r2, r0
 800d196:	4603      	mov	r3, r0
 800d198:	4293      	cmp	r3, r2
 800d19a:	d100      	bne.n	800d19e <memset+0xa>
 800d19c:	4770      	bx	lr
 800d19e:	f803 1b01 	strb.w	r1, [r3], #1
 800d1a2:	e7f9      	b.n	800d198 <memset+0x4>

0800d1a4 <__cvt>:
 800d1a4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800d1a8:	ec55 4b10 	vmov	r4, r5, d0
 800d1ac:	2d00      	cmp	r5, #0
 800d1ae:	460e      	mov	r6, r1
 800d1b0:	4619      	mov	r1, r3
 800d1b2:	462b      	mov	r3, r5
 800d1b4:	bfbb      	ittet	lt
 800d1b6:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 800d1ba:	461d      	movlt	r5, r3
 800d1bc:	2300      	movge	r3, #0
 800d1be:	232d      	movlt	r3, #45	; 0x2d
 800d1c0:	700b      	strb	r3, [r1, #0]
 800d1c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d1c4:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800d1c8:	4691      	mov	r9, r2
 800d1ca:	f023 0820 	bic.w	r8, r3, #32
 800d1ce:	bfbc      	itt	lt
 800d1d0:	4622      	movlt	r2, r4
 800d1d2:	4614      	movlt	r4, r2
 800d1d4:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800d1d8:	d005      	beq.n	800d1e6 <__cvt+0x42>
 800d1da:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800d1de:	d100      	bne.n	800d1e2 <__cvt+0x3e>
 800d1e0:	3601      	adds	r6, #1
 800d1e2:	2102      	movs	r1, #2
 800d1e4:	e000      	b.n	800d1e8 <__cvt+0x44>
 800d1e6:	2103      	movs	r1, #3
 800d1e8:	ab03      	add	r3, sp, #12
 800d1ea:	9301      	str	r3, [sp, #4]
 800d1ec:	ab02      	add	r3, sp, #8
 800d1ee:	9300      	str	r3, [sp, #0]
 800d1f0:	ec45 4b10 	vmov	d0, r4, r5
 800d1f4:	4653      	mov	r3, sl
 800d1f6:	4632      	mov	r2, r6
 800d1f8:	f000 fcea 	bl	800dbd0 <_dtoa_r>
 800d1fc:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800d200:	4607      	mov	r7, r0
 800d202:	d102      	bne.n	800d20a <__cvt+0x66>
 800d204:	f019 0f01 	tst.w	r9, #1
 800d208:	d022      	beq.n	800d250 <__cvt+0xac>
 800d20a:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800d20e:	eb07 0906 	add.w	r9, r7, r6
 800d212:	d110      	bne.n	800d236 <__cvt+0x92>
 800d214:	783b      	ldrb	r3, [r7, #0]
 800d216:	2b30      	cmp	r3, #48	; 0x30
 800d218:	d10a      	bne.n	800d230 <__cvt+0x8c>
 800d21a:	2200      	movs	r2, #0
 800d21c:	2300      	movs	r3, #0
 800d21e:	4620      	mov	r0, r4
 800d220:	4629      	mov	r1, r5
 800d222:	f7f3 fc71 	bl	8000b08 <__aeabi_dcmpeq>
 800d226:	b918      	cbnz	r0, 800d230 <__cvt+0x8c>
 800d228:	f1c6 0601 	rsb	r6, r6, #1
 800d22c:	f8ca 6000 	str.w	r6, [sl]
 800d230:	f8da 3000 	ldr.w	r3, [sl]
 800d234:	4499      	add	r9, r3
 800d236:	2200      	movs	r2, #0
 800d238:	2300      	movs	r3, #0
 800d23a:	4620      	mov	r0, r4
 800d23c:	4629      	mov	r1, r5
 800d23e:	f7f3 fc63 	bl	8000b08 <__aeabi_dcmpeq>
 800d242:	b108      	cbz	r0, 800d248 <__cvt+0xa4>
 800d244:	f8cd 900c 	str.w	r9, [sp, #12]
 800d248:	2230      	movs	r2, #48	; 0x30
 800d24a:	9b03      	ldr	r3, [sp, #12]
 800d24c:	454b      	cmp	r3, r9
 800d24e:	d307      	bcc.n	800d260 <__cvt+0xbc>
 800d250:	9b03      	ldr	r3, [sp, #12]
 800d252:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d254:	1bdb      	subs	r3, r3, r7
 800d256:	4638      	mov	r0, r7
 800d258:	6013      	str	r3, [r2, #0]
 800d25a:	b004      	add	sp, #16
 800d25c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d260:	1c59      	adds	r1, r3, #1
 800d262:	9103      	str	r1, [sp, #12]
 800d264:	701a      	strb	r2, [r3, #0]
 800d266:	e7f0      	b.n	800d24a <__cvt+0xa6>

0800d268 <__exponent>:
 800d268:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d26a:	4603      	mov	r3, r0
 800d26c:	2900      	cmp	r1, #0
 800d26e:	bfb8      	it	lt
 800d270:	4249      	neglt	r1, r1
 800d272:	f803 2b02 	strb.w	r2, [r3], #2
 800d276:	bfb4      	ite	lt
 800d278:	222d      	movlt	r2, #45	; 0x2d
 800d27a:	222b      	movge	r2, #43	; 0x2b
 800d27c:	2909      	cmp	r1, #9
 800d27e:	7042      	strb	r2, [r0, #1]
 800d280:	dd2a      	ble.n	800d2d8 <__exponent+0x70>
 800d282:	f10d 0407 	add.w	r4, sp, #7
 800d286:	46a4      	mov	ip, r4
 800d288:	270a      	movs	r7, #10
 800d28a:	46a6      	mov	lr, r4
 800d28c:	460a      	mov	r2, r1
 800d28e:	fb91 f6f7 	sdiv	r6, r1, r7
 800d292:	fb07 1516 	mls	r5, r7, r6, r1
 800d296:	3530      	adds	r5, #48	; 0x30
 800d298:	2a63      	cmp	r2, #99	; 0x63
 800d29a:	f104 34ff 	add.w	r4, r4, #4294967295
 800d29e:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800d2a2:	4631      	mov	r1, r6
 800d2a4:	dcf1      	bgt.n	800d28a <__exponent+0x22>
 800d2a6:	3130      	adds	r1, #48	; 0x30
 800d2a8:	f1ae 0502 	sub.w	r5, lr, #2
 800d2ac:	f804 1c01 	strb.w	r1, [r4, #-1]
 800d2b0:	1c44      	adds	r4, r0, #1
 800d2b2:	4629      	mov	r1, r5
 800d2b4:	4561      	cmp	r1, ip
 800d2b6:	d30a      	bcc.n	800d2ce <__exponent+0x66>
 800d2b8:	f10d 0209 	add.w	r2, sp, #9
 800d2bc:	eba2 020e 	sub.w	r2, r2, lr
 800d2c0:	4565      	cmp	r5, ip
 800d2c2:	bf88      	it	hi
 800d2c4:	2200      	movhi	r2, #0
 800d2c6:	4413      	add	r3, r2
 800d2c8:	1a18      	subs	r0, r3, r0
 800d2ca:	b003      	add	sp, #12
 800d2cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d2ce:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d2d2:	f804 2f01 	strb.w	r2, [r4, #1]!
 800d2d6:	e7ed      	b.n	800d2b4 <__exponent+0x4c>
 800d2d8:	2330      	movs	r3, #48	; 0x30
 800d2da:	3130      	adds	r1, #48	; 0x30
 800d2dc:	7083      	strb	r3, [r0, #2]
 800d2de:	70c1      	strb	r1, [r0, #3]
 800d2e0:	1d03      	adds	r3, r0, #4
 800d2e2:	e7f1      	b.n	800d2c8 <__exponent+0x60>

0800d2e4 <_printf_float>:
 800d2e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2e8:	ed2d 8b02 	vpush	{d8}
 800d2ec:	b08d      	sub	sp, #52	; 0x34
 800d2ee:	460c      	mov	r4, r1
 800d2f0:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 800d2f4:	4616      	mov	r6, r2
 800d2f6:	461f      	mov	r7, r3
 800d2f8:	4605      	mov	r5, r0
 800d2fa:	f001 fa57 	bl	800e7ac <_localeconv_r>
 800d2fe:	f8d0 a000 	ldr.w	sl, [r0]
 800d302:	4650      	mov	r0, sl
 800d304:	f7f2 ff84 	bl	8000210 <strlen>
 800d308:	2300      	movs	r3, #0
 800d30a:	930a      	str	r3, [sp, #40]	; 0x28
 800d30c:	6823      	ldr	r3, [r4, #0]
 800d30e:	9305      	str	r3, [sp, #20]
 800d310:	f8d8 3000 	ldr.w	r3, [r8]
 800d314:	f894 b018 	ldrb.w	fp, [r4, #24]
 800d318:	3307      	adds	r3, #7
 800d31a:	f023 0307 	bic.w	r3, r3, #7
 800d31e:	f103 0208 	add.w	r2, r3, #8
 800d322:	f8c8 2000 	str.w	r2, [r8]
 800d326:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d32a:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800d32e:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 800d332:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800d336:	9307      	str	r3, [sp, #28]
 800d338:	f8cd 8018 	str.w	r8, [sp, #24]
 800d33c:	ee08 0a10 	vmov	s16, r0
 800d340:	4b9f      	ldr	r3, [pc, #636]	; (800d5c0 <_printf_float+0x2dc>)
 800d342:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800d346:	f04f 32ff 	mov.w	r2, #4294967295
 800d34a:	f7f3 fc0f 	bl	8000b6c <__aeabi_dcmpun>
 800d34e:	bb88      	cbnz	r0, 800d3b4 <_printf_float+0xd0>
 800d350:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800d354:	4b9a      	ldr	r3, [pc, #616]	; (800d5c0 <_printf_float+0x2dc>)
 800d356:	f04f 32ff 	mov.w	r2, #4294967295
 800d35a:	f7f3 fbe9 	bl	8000b30 <__aeabi_dcmple>
 800d35e:	bb48      	cbnz	r0, 800d3b4 <_printf_float+0xd0>
 800d360:	2200      	movs	r2, #0
 800d362:	2300      	movs	r3, #0
 800d364:	4640      	mov	r0, r8
 800d366:	4649      	mov	r1, r9
 800d368:	f7f3 fbd8 	bl	8000b1c <__aeabi_dcmplt>
 800d36c:	b110      	cbz	r0, 800d374 <_printf_float+0x90>
 800d36e:	232d      	movs	r3, #45	; 0x2d
 800d370:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d374:	4b93      	ldr	r3, [pc, #588]	; (800d5c4 <_printf_float+0x2e0>)
 800d376:	4894      	ldr	r0, [pc, #592]	; (800d5c8 <_printf_float+0x2e4>)
 800d378:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 800d37c:	bf94      	ite	ls
 800d37e:	4698      	movls	r8, r3
 800d380:	4680      	movhi	r8, r0
 800d382:	2303      	movs	r3, #3
 800d384:	6123      	str	r3, [r4, #16]
 800d386:	9b05      	ldr	r3, [sp, #20]
 800d388:	f023 0204 	bic.w	r2, r3, #4
 800d38c:	6022      	str	r2, [r4, #0]
 800d38e:	f04f 0900 	mov.w	r9, #0
 800d392:	9700      	str	r7, [sp, #0]
 800d394:	4633      	mov	r3, r6
 800d396:	aa0b      	add	r2, sp, #44	; 0x2c
 800d398:	4621      	mov	r1, r4
 800d39a:	4628      	mov	r0, r5
 800d39c:	f000 f9d8 	bl	800d750 <_printf_common>
 800d3a0:	3001      	adds	r0, #1
 800d3a2:	f040 8090 	bne.w	800d4c6 <_printf_float+0x1e2>
 800d3a6:	f04f 30ff 	mov.w	r0, #4294967295
 800d3aa:	b00d      	add	sp, #52	; 0x34
 800d3ac:	ecbd 8b02 	vpop	{d8}
 800d3b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d3b4:	4642      	mov	r2, r8
 800d3b6:	464b      	mov	r3, r9
 800d3b8:	4640      	mov	r0, r8
 800d3ba:	4649      	mov	r1, r9
 800d3bc:	f7f3 fbd6 	bl	8000b6c <__aeabi_dcmpun>
 800d3c0:	b140      	cbz	r0, 800d3d4 <_printf_float+0xf0>
 800d3c2:	464b      	mov	r3, r9
 800d3c4:	2b00      	cmp	r3, #0
 800d3c6:	bfbc      	itt	lt
 800d3c8:	232d      	movlt	r3, #45	; 0x2d
 800d3ca:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800d3ce:	487f      	ldr	r0, [pc, #508]	; (800d5cc <_printf_float+0x2e8>)
 800d3d0:	4b7f      	ldr	r3, [pc, #508]	; (800d5d0 <_printf_float+0x2ec>)
 800d3d2:	e7d1      	b.n	800d378 <_printf_float+0x94>
 800d3d4:	6863      	ldr	r3, [r4, #4]
 800d3d6:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 800d3da:	9206      	str	r2, [sp, #24]
 800d3dc:	1c5a      	adds	r2, r3, #1
 800d3de:	d13f      	bne.n	800d460 <_printf_float+0x17c>
 800d3e0:	2306      	movs	r3, #6
 800d3e2:	6063      	str	r3, [r4, #4]
 800d3e4:	9b05      	ldr	r3, [sp, #20]
 800d3e6:	6861      	ldr	r1, [r4, #4]
 800d3e8:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 800d3ec:	2300      	movs	r3, #0
 800d3ee:	9303      	str	r3, [sp, #12]
 800d3f0:	ab0a      	add	r3, sp, #40	; 0x28
 800d3f2:	e9cd b301 	strd	fp, r3, [sp, #4]
 800d3f6:	ab09      	add	r3, sp, #36	; 0x24
 800d3f8:	ec49 8b10 	vmov	d0, r8, r9
 800d3fc:	9300      	str	r3, [sp, #0]
 800d3fe:	6022      	str	r2, [r4, #0]
 800d400:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 800d404:	4628      	mov	r0, r5
 800d406:	f7ff fecd 	bl	800d1a4 <__cvt>
 800d40a:	9b06      	ldr	r3, [sp, #24]
 800d40c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800d40e:	2b47      	cmp	r3, #71	; 0x47
 800d410:	4680      	mov	r8, r0
 800d412:	d108      	bne.n	800d426 <_printf_float+0x142>
 800d414:	1cc8      	adds	r0, r1, #3
 800d416:	db02      	blt.n	800d41e <_printf_float+0x13a>
 800d418:	6863      	ldr	r3, [r4, #4]
 800d41a:	4299      	cmp	r1, r3
 800d41c:	dd41      	ble.n	800d4a2 <_printf_float+0x1be>
 800d41e:	f1ab 0b02 	sub.w	fp, fp, #2
 800d422:	fa5f fb8b 	uxtb.w	fp, fp
 800d426:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800d42a:	d820      	bhi.n	800d46e <_printf_float+0x18a>
 800d42c:	3901      	subs	r1, #1
 800d42e:	465a      	mov	r2, fp
 800d430:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800d434:	9109      	str	r1, [sp, #36]	; 0x24
 800d436:	f7ff ff17 	bl	800d268 <__exponent>
 800d43a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d43c:	1813      	adds	r3, r2, r0
 800d43e:	2a01      	cmp	r2, #1
 800d440:	4681      	mov	r9, r0
 800d442:	6123      	str	r3, [r4, #16]
 800d444:	dc02      	bgt.n	800d44c <_printf_float+0x168>
 800d446:	6822      	ldr	r2, [r4, #0]
 800d448:	07d2      	lsls	r2, r2, #31
 800d44a:	d501      	bpl.n	800d450 <_printf_float+0x16c>
 800d44c:	3301      	adds	r3, #1
 800d44e:	6123      	str	r3, [r4, #16]
 800d450:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 800d454:	2b00      	cmp	r3, #0
 800d456:	d09c      	beq.n	800d392 <_printf_float+0xae>
 800d458:	232d      	movs	r3, #45	; 0x2d
 800d45a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d45e:	e798      	b.n	800d392 <_printf_float+0xae>
 800d460:	9a06      	ldr	r2, [sp, #24]
 800d462:	2a47      	cmp	r2, #71	; 0x47
 800d464:	d1be      	bne.n	800d3e4 <_printf_float+0x100>
 800d466:	2b00      	cmp	r3, #0
 800d468:	d1bc      	bne.n	800d3e4 <_printf_float+0x100>
 800d46a:	2301      	movs	r3, #1
 800d46c:	e7b9      	b.n	800d3e2 <_printf_float+0xfe>
 800d46e:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 800d472:	d118      	bne.n	800d4a6 <_printf_float+0x1c2>
 800d474:	2900      	cmp	r1, #0
 800d476:	6863      	ldr	r3, [r4, #4]
 800d478:	dd0b      	ble.n	800d492 <_printf_float+0x1ae>
 800d47a:	6121      	str	r1, [r4, #16]
 800d47c:	b913      	cbnz	r3, 800d484 <_printf_float+0x1a0>
 800d47e:	6822      	ldr	r2, [r4, #0]
 800d480:	07d0      	lsls	r0, r2, #31
 800d482:	d502      	bpl.n	800d48a <_printf_float+0x1a6>
 800d484:	3301      	adds	r3, #1
 800d486:	440b      	add	r3, r1
 800d488:	6123      	str	r3, [r4, #16]
 800d48a:	65a1      	str	r1, [r4, #88]	; 0x58
 800d48c:	f04f 0900 	mov.w	r9, #0
 800d490:	e7de      	b.n	800d450 <_printf_float+0x16c>
 800d492:	b913      	cbnz	r3, 800d49a <_printf_float+0x1b6>
 800d494:	6822      	ldr	r2, [r4, #0]
 800d496:	07d2      	lsls	r2, r2, #31
 800d498:	d501      	bpl.n	800d49e <_printf_float+0x1ba>
 800d49a:	3302      	adds	r3, #2
 800d49c:	e7f4      	b.n	800d488 <_printf_float+0x1a4>
 800d49e:	2301      	movs	r3, #1
 800d4a0:	e7f2      	b.n	800d488 <_printf_float+0x1a4>
 800d4a2:	f04f 0b67 	mov.w	fp, #103	; 0x67
 800d4a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d4a8:	4299      	cmp	r1, r3
 800d4aa:	db05      	blt.n	800d4b8 <_printf_float+0x1d4>
 800d4ac:	6823      	ldr	r3, [r4, #0]
 800d4ae:	6121      	str	r1, [r4, #16]
 800d4b0:	07d8      	lsls	r0, r3, #31
 800d4b2:	d5ea      	bpl.n	800d48a <_printf_float+0x1a6>
 800d4b4:	1c4b      	adds	r3, r1, #1
 800d4b6:	e7e7      	b.n	800d488 <_printf_float+0x1a4>
 800d4b8:	2900      	cmp	r1, #0
 800d4ba:	bfd4      	ite	le
 800d4bc:	f1c1 0202 	rsble	r2, r1, #2
 800d4c0:	2201      	movgt	r2, #1
 800d4c2:	4413      	add	r3, r2
 800d4c4:	e7e0      	b.n	800d488 <_printf_float+0x1a4>
 800d4c6:	6823      	ldr	r3, [r4, #0]
 800d4c8:	055a      	lsls	r2, r3, #21
 800d4ca:	d407      	bmi.n	800d4dc <_printf_float+0x1f8>
 800d4cc:	6923      	ldr	r3, [r4, #16]
 800d4ce:	4642      	mov	r2, r8
 800d4d0:	4631      	mov	r1, r6
 800d4d2:	4628      	mov	r0, r5
 800d4d4:	47b8      	blx	r7
 800d4d6:	3001      	adds	r0, #1
 800d4d8:	d12c      	bne.n	800d534 <_printf_float+0x250>
 800d4da:	e764      	b.n	800d3a6 <_printf_float+0xc2>
 800d4dc:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800d4e0:	f240 80e0 	bls.w	800d6a4 <_printf_float+0x3c0>
 800d4e4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800d4e8:	2200      	movs	r2, #0
 800d4ea:	2300      	movs	r3, #0
 800d4ec:	f7f3 fb0c 	bl	8000b08 <__aeabi_dcmpeq>
 800d4f0:	2800      	cmp	r0, #0
 800d4f2:	d034      	beq.n	800d55e <_printf_float+0x27a>
 800d4f4:	4a37      	ldr	r2, [pc, #220]	; (800d5d4 <_printf_float+0x2f0>)
 800d4f6:	2301      	movs	r3, #1
 800d4f8:	4631      	mov	r1, r6
 800d4fa:	4628      	mov	r0, r5
 800d4fc:	47b8      	blx	r7
 800d4fe:	3001      	adds	r0, #1
 800d500:	f43f af51 	beq.w	800d3a6 <_printf_float+0xc2>
 800d504:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800d508:	429a      	cmp	r2, r3
 800d50a:	db02      	blt.n	800d512 <_printf_float+0x22e>
 800d50c:	6823      	ldr	r3, [r4, #0]
 800d50e:	07d8      	lsls	r0, r3, #31
 800d510:	d510      	bpl.n	800d534 <_printf_float+0x250>
 800d512:	ee18 3a10 	vmov	r3, s16
 800d516:	4652      	mov	r2, sl
 800d518:	4631      	mov	r1, r6
 800d51a:	4628      	mov	r0, r5
 800d51c:	47b8      	blx	r7
 800d51e:	3001      	adds	r0, #1
 800d520:	f43f af41 	beq.w	800d3a6 <_printf_float+0xc2>
 800d524:	f04f 0800 	mov.w	r8, #0
 800d528:	f104 091a 	add.w	r9, r4, #26
 800d52c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d52e:	3b01      	subs	r3, #1
 800d530:	4543      	cmp	r3, r8
 800d532:	dc09      	bgt.n	800d548 <_printf_float+0x264>
 800d534:	6823      	ldr	r3, [r4, #0]
 800d536:	079b      	lsls	r3, r3, #30
 800d538:	f100 8105 	bmi.w	800d746 <_printf_float+0x462>
 800d53c:	68e0      	ldr	r0, [r4, #12]
 800d53e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d540:	4298      	cmp	r0, r3
 800d542:	bfb8      	it	lt
 800d544:	4618      	movlt	r0, r3
 800d546:	e730      	b.n	800d3aa <_printf_float+0xc6>
 800d548:	2301      	movs	r3, #1
 800d54a:	464a      	mov	r2, r9
 800d54c:	4631      	mov	r1, r6
 800d54e:	4628      	mov	r0, r5
 800d550:	47b8      	blx	r7
 800d552:	3001      	adds	r0, #1
 800d554:	f43f af27 	beq.w	800d3a6 <_printf_float+0xc2>
 800d558:	f108 0801 	add.w	r8, r8, #1
 800d55c:	e7e6      	b.n	800d52c <_printf_float+0x248>
 800d55e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d560:	2b00      	cmp	r3, #0
 800d562:	dc39      	bgt.n	800d5d8 <_printf_float+0x2f4>
 800d564:	4a1b      	ldr	r2, [pc, #108]	; (800d5d4 <_printf_float+0x2f0>)
 800d566:	2301      	movs	r3, #1
 800d568:	4631      	mov	r1, r6
 800d56a:	4628      	mov	r0, r5
 800d56c:	47b8      	blx	r7
 800d56e:	3001      	adds	r0, #1
 800d570:	f43f af19 	beq.w	800d3a6 <_printf_float+0xc2>
 800d574:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800d578:	4313      	orrs	r3, r2
 800d57a:	d102      	bne.n	800d582 <_printf_float+0x29e>
 800d57c:	6823      	ldr	r3, [r4, #0]
 800d57e:	07d9      	lsls	r1, r3, #31
 800d580:	d5d8      	bpl.n	800d534 <_printf_float+0x250>
 800d582:	ee18 3a10 	vmov	r3, s16
 800d586:	4652      	mov	r2, sl
 800d588:	4631      	mov	r1, r6
 800d58a:	4628      	mov	r0, r5
 800d58c:	47b8      	blx	r7
 800d58e:	3001      	adds	r0, #1
 800d590:	f43f af09 	beq.w	800d3a6 <_printf_float+0xc2>
 800d594:	f04f 0900 	mov.w	r9, #0
 800d598:	f104 0a1a 	add.w	sl, r4, #26
 800d59c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d59e:	425b      	negs	r3, r3
 800d5a0:	454b      	cmp	r3, r9
 800d5a2:	dc01      	bgt.n	800d5a8 <_printf_float+0x2c4>
 800d5a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d5a6:	e792      	b.n	800d4ce <_printf_float+0x1ea>
 800d5a8:	2301      	movs	r3, #1
 800d5aa:	4652      	mov	r2, sl
 800d5ac:	4631      	mov	r1, r6
 800d5ae:	4628      	mov	r0, r5
 800d5b0:	47b8      	blx	r7
 800d5b2:	3001      	adds	r0, #1
 800d5b4:	f43f aef7 	beq.w	800d3a6 <_printf_float+0xc2>
 800d5b8:	f109 0901 	add.w	r9, r9, #1
 800d5bc:	e7ee      	b.n	800d59c <_printf_float+0x2b8>
 800d5be:	bf00      	nop
 800d5c0:	7fefffff 	.word	0x7fefffff
 800d5c4:	08011588 	.word	0x08011588
 800d5c8:	0801158c 	.word	0x0801158c
 800d5cc:	08011594 	.word	0x08011594
 800d5d0:	08011590 	.word	0x08011590
 800d5d4:	08011598 	.word	0x08011598
 800d5d8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d5da:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800d5dc:	429a      	cmp	r2, r3
 800d5de:	bfa8      	it	ge
 800d5e0:	461a      	movge	r2, r3
 800d5e2:	2a00      	cmp	r2, #0
 800d5e4:	4691      	mov	r9, r2
 800d5e6:	dc37      	bgt.n	800d658 <_printf_float+0x374>
 800d5e8:	f04f 0b00 	mov.w	fp, #0
 800d5ec:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800d5f0:	f104 021a 	add.w	r2, r4, #26
 800d5f4:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800d5f6:	9305      	str	r3, [sp, #20]
 800d5f8:	eba3 0309 	sub.w	r3, r3, r9
 800d5fc:	455b      	cmp	r3, fp
 800d5fe:	dc33      	bgt.n	800d668 <_printf_float+0x384>
 800d600:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800d604:	429a      	cmp	r2, r3
 800d606:	db3b      	blt.n	800d680 <_printf_float+0x39c>
 800d608:	6823      	ldr	r3, [r4, #0]
 800d60a:	07da      	lsls	r2, r3, #31
 800d60c:	d438      	bmi.n	800d680 <_printf_float+0x39c>
 800d60e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d610:	9a05      	ldr	r2, [sp, #20]
 800d612:	9909      	ldr	r1, [sp, #36]	; 0x24
 800d614:	1a9a      	subs	r2, r3, r2
 800d616:	eba3 0901 	sub.w	r9, r3, r1
 800d61a:	4591      	cmp	r9, r2
 800d61c:	bfa8      	it	ge
 800d61e:	4691      	movge	r9, r2
 800d620:	f1b9 0f00 	cmp.w	r9, #0
 800d624:	dc35      	bgt.n	800d692 <_printf_float+0x3ae>
 800d626:	f04f 0800 	mov.w	r8, #0
 800d62a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800d62e:	f104 0a1a 	add.w	sl, r4, #26
 800d632:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800d636:	1a9b      	subs	r3, r3, r2
 800d638:	eba3 0309 	sub.w	r3, r3, r9
 800d63c:	4543      	cmp	r3, r8
 800d63e:	f77f af79 	ble.w	800d534 <_printf_float+0x250>
 800d642:	2301      	movs	r3, #1
 800d644:	4652      	mov	r2, sl
 800d646:	4631      	mov	r1, r6
 800d648:	4628      	mov	r0, r5
 800d64a:	47b8      	blx	r7
 800d64c:	3001      	adds	r0, #1
 800d64e:	f43f aeaa 	beq.w	800d3a6 <_printf_float+0xc2>
 800d652:	f108 0801 	add.w	r8, r8, #1
 800d656:	e7ec      	b.n	800d632 <_printf_float+0x34e>
 800d658:	4613      	mov	r3, r2
 800d65a:	4631      	mov	r1, r6
 800d65c:	4642      	mov	r2, r8
 800d65e:	4628      	mov	r0, r5
 800d660:	47b8      	blx	r7
 800d662:	3001      	adds	r0, #1
 800d664:	d1c0      	bne.n	800d5e8 <_printf_float+0x304>
 800d666:	e69e      	b.n	800d3a6 <_printf_float+0xc2>
 800d668:	2301      	movs	r3, #1
 800d66a:	4631      	mov	r1, r6
 800d66c:	4628      	mov	r0, r5
 800d66e:	9205      	str	r2, [sp, #20]
 800d670:	47b8      	blx	r7
 800d672:	3001      	adds	r0, #1
 800d674:	f43f ae97 	beq.w	800d3a6 <_printf_float+0xc2>
 800d678:	9a05      	ldr	r2, [sp, #20]
 800d67a:	f10b 0b01 	add.w	fp, fp, #1
 800d67e:	e7b9      	b.n	800d5f4 <_printf_float+0x310>
 800d680:	ee18 3a10 	vmov	r3, s16
 800d684:	4652      	mov	r2, sl
 800d686:	4631      	mov	r1, r6
 800d688:	4628      	mov	r0, r5
 800d68a:	47b8      	blx	r7
 800d68c:	3001      	adds	r0, #1
 800d68e:	d1be      	bne.n	800d60e <_printf_float+0x32a>
 800d690:	e689      	b.n	800d3a6 <_printf_float+0xc2>
 800d692:	9a05      	ldr	r2, [sp, #20]
 800d694:	464b      	mov	r3, r9
 800d696:	4442      	add	r2, r8
 800d698:	4631      	mov	r1, r6
 800d69a:	4628      	mov	r0, r5
 800d69c:	47b8      	blx	r7
 800d69e:	3001      	adds	r0, #1
 800d6a0:	d1c1      	bne.n	800d626 <_printf_float+0x342>
 800d6a2:	e680      	b.n	800d3a6 <_printf_float+0xc2>
 800d6a4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d6a6:	2a01      	cmp	r2, #1
 800d6a8:	dc01      	bgt.n	800d6ae <_printf_float+0x3ca>
 800d6aa:	07db      	lsls	r3, r3, #31
 800d6ac:	d538      	bpl.n	800d720 <_printf_float+0x43c>
 800d6ae:	2301      	movs	r3, #1
 800d6b0:	4642      	mov	r2, r8
 800d6b2:	4631      	mov	r1, r6
 800d6b4:	4628      	mov	r0, r5
 800d6b6:	47b8      	blx	r7
 800d6b8:	3001      	adds	r0, #1
 800d6ba:	f43f ae74 	beq.w	800d3a6 <_printf_float+0xc2>
 800d6be:	ee18 3a10 	vmov	r3, s16
 800d6c2:	4652      	mov	r2, sl
 800d6c4:	4631      	mov	r1, r6
 800d6c6:	4628      	mov	r0, r5
 800d6c8:	47b8      	blx	r7
 800d6ca:	3001      	adds	r0, #1
 800d6cc:	f43f ae6b 	beq.w	800d3a6 <_printf_float+0xc2>
 800d6d0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800d6d4:	2200      	movs	r2, #0
 800d6d6:	2300      	movs	r3, #0
 800d6d8:	f7f3 fa16 	bl	8000b08 <__aeabi_dcmpeq>
 800d6dc:	b9d8      	cbnz	r0, 800d716 <_printf_float+0x432>
 800d6de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d6e0:	f108 0201 	add.w	r2, r8, #1
 800d6e4:	3b01      	subs	r3, #1
 800d6e6:	4631      	mov	r1, r6
 800d6e8:	4628      	mov	r0, r5
 800d6ea:	47b8      	blx	r7
 800d6ec:	3001      	adds	r0, #1
 800d6ee:	d10e      	bne.n	800d70e <_printf_float+0x42a>
 800d6f0:	e659      	b.n	800d3a6 <_printf_float+0xc2>
 800d6f2:	2301      	movs	r3, #1
 800d6f4:	4652      	mov	r2, sl
 800d6f6:	4631      	mov	r1, r6
 800d6f8:	4628      	mov	r0, r5
 800d6fa:	47b8      	blx	r7
 800d6fc:	3001      	adds	r0, #1
 800d6fe:	f43f ae52 	beq.w	800d3a6 <_printf_float+0xc2>
 800d702:	f108 0801 	add.w	r8, r8, #1
 800d706:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d708:	3b01      	subs	r3, #1
 800d70a:	4543      	cmp	r3, r8
 800d70c:	dcf1      	bgt.n	800d6f2 <_printf_float+0x40e>
 800d70e:	464b      	mov	r3, r9
 800d710:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800d714:	e6dc      	b.n	800d4d0 <_printf_float+0x1ec>
 800d716:	f04f 0800 	mov.w	r8, #0
 800d71a:	f104 0a1a 	add.w	sl, r4, #26
 800d71e:	e7f2      	b.n	800d706 <_printf_float+0x422>
 800d720:	2301      	movs	r3, #1
 800d722:	4642      	mov	r2, r8
 800d724:	e7df      	b.n	800d6e6 <_printf_float+0x402>
 800d726:	2301      	movs	r3, #1
 800d728:	464a      	mov	r2, r9
 800d72a:	4631      	mov	r1, r6
 800d72c:	4628      	mov	r0, r5
 800d72e:	47b8      	blx	r7
 800d730:	3001      	adds	r0, #1
 800d732:	f43f ae38 	beq.w	800d3a6 <_printf_float+0xc2>
 800d736:	f108 0801 	add.w	r8, r8, #1
 800d73a:	68e3      	ldr	r3, [r4, #12]
 800d73c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800d73e:	1a5b      	subs	r3, r3, r1
 800d740:	4543      	cmp	r3, r8
 800d742:	dcf0      	bgt.n	800d726 <_printf_float+0x442>
 800d744:	e6fa      	b.n	800d53c <_printf_float+0x258>
 800d746:	f04f 0800 	mov.w	r8, #0
 800d74a:	f104 0919 	add.w	r9, r4, #25
 800d74e:	e7f4      	b.n	800d73a <_printf_float+0x456>

0800d750 <_printf_common>:
 800d750:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d754:	4616      	mov	r6, r2
 800d756:	4699      	mov	r9, r3
 800d758:	688a      	ldr	r2, [r1, #8]
 800d75a:	690b      	ldr	r3, [r1, #16]
 800d75c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800d760:	4293      	cmp	r3, r2
 800d762:	bfb8      	it	lt
 800d764:	4613      	movlt	r3, r2
 800d766:	6033      	str	r3, [r6, #0]
 800d768:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800d76c:	4607      	mov	r7, r0
 800d76e:	460c      	mov	r4, r1
 800d770:	b10a      	cbz	r2, 800d776 <_printf_common+0x26>
 800d772:	3301      	adds	r3, #1
 800d774:	6033      	str	r3, [r6, #0]
 800d776:	6823      	ldr	r3, [r4, #0]
 800d778:	0699      	lsls	r1, r3, #26
 800d77a:	bf42      	ittt	mi
 800d77c:	6833      	ldrmi	r3, [r6, #0]
 800d77e:	3302      	addmi	r3, #2
 800d780:	6033      	strmi	r3, [r6, #0]
 800d782:	6825      	ldr	r5, [r4, #0]
 800d784:	f015 0506 	ands.w	r5, r5, #6
 800d788:	d106      	bne.n	800d798 <_printf_common+0x48>
 800d78a:	f104 0a19 	add.w	sl, r4, #25
 800d78e:	68e3      	ldr	r3, [r4, #12]
 800d790:	6832      	ldr	r2, [r6, #0]
 800d792:	1a9b      	subs	r3, r3, r2
 800d794:	42ab      	cmp	r3, r5
 800d796:	dc26      	bgt.n	800d7e6 <_printf_common+0x96>
 800d798:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800d79c:	1e13      	subs	r3, r2, #0
 800d79e:	6822      	ldr	r2, [r4, #0]
 800d7a0:	bf18      	it	ne
 800d7a2:	2301      	movne	r3, #1
 800d7a4:	0692      	lsls	r2, r2, #26
 800d7a6:	d42b      	bmi.n	800d800 <_printf_common+0xb0>
 800d7a8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800d7ac:	4649      	mov	r1, r9
 800d7ae:	4638      	mov	r0, r7
 800d7b0:	47c0      	blx	r8
 800d7b2:	3001      	adds	r0, #1
 800d7b4:	d01e      	beq.n	800d7f4 <_printf_common+0xa4>
 800d7b6:	6823      	ldr	r3, [r4, #0]
 800d7b8:	68e5      	ldr	r5, [r4, #12]
 800d7ba:	6832      	ldr	r2, [r6, #0]
 800d7bc:	f003 0306 	and.w	r3, r3, #6
 800d7c0:	2b04      	cmp	r3, #4
 800d7c2:	bf08      	it	eq
 800d7c4:	1aad      	subeq	r5, r5, r2
 800d7c6:	68a3      	ldr	r3, [r4, #8]
 800d7c8:	6922      	ldr	r2, [r4, #16]
 800d7ca:	bf0c      	ite	eq
 800d7cc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800d7d0:	2500      	movne	r5, #0
 800d7d2:	4293      	cmp	r3, r2
 800d7d4:	bfc4      	itt	gt
 800d7d6:	1a9b      	subgt	r3, r3, r2
 800d7d8:	18ed      	addgt	r5, r5, r3
 800d7da:	2600      	movs	r6, #0
 800d7dc:	341a      	adds	r4, #26
 800d7de:	42b5      	cmp	r5, r6
 800d7e0:	d11a      	bne.n	800d818 <_printf_common+0xc8>
 800d7e2:	2000      	movs	r0, #0
 800d7e4:	e008      	b.n	800d7f8 <_printf_common+0xa8>
 800d7e6:	2301      	movs	r3, #1
 800d7e8:	4652      	mov	r2, sl
 800d7ea:	4649      	mov	r1, r9
 800d7ec:	4638      	mov	r0, r7
 800d7ee:	47c0      	blx	r8
 800d7f0:	3001      	adds	r0, #1
 800d7f2:	d103      	bne.n	800d7fc <_printf_common+0xac>
 800d7f4:	f04f 30ff 	mov.w	r0, #4294967295
 800d7f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d7fc:	3501      	adds	r5, #1
 800d7fe:	e7c6      	b.n	800d78e <_printf_common+0x3e>
 800d800:	18e1      	adds	r1, r4, r3
 800d802:	1c5a      	adds	r2, r3, #1
 800d804:	2030      	movs	r0, #48	; 0x30
 800d806:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800d80a:	4422      	add	r2, r4
 800d80c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800d810:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800d814:	3302      	adds	r3, #2
 800d816:	e7c7      	b.n	800d7a8 <_printf_common+0x58>
 800d818:	2301      	movs	r3, #1
 800d81a:	4622      	mov	r2, r4
 800d81c:	4649      	mov	r1, r9
 800d81e:	4638      	mov	r0, r7
 800d820:	47c0      	blx	r8
 800d822:	3001      	adds	r0, #1
 800d824:	d0e6      	beq.n	800d7f4 <_printf_common+0xa4>
 800d826:	3601      	adds	r6, #1
 800d828:	e7d9      	b.n	800d7de <_printf_common+0x8e>
	...

0800d82c <_printf_i>:
 800d82c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800d830:	7e0f      	ldrb	r7, [r1, #24]
 800d832:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800d834:	2f78      	cmp	r7, #120	; 0x78
 800d836:	4691      	mov	r9, r2
 800d838:	4680      	mov	r8, r0
 800d83a:	460c      	mov	r4, r1
 800d83c:	469a      	mov	sl, r3
 800d83e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800d842:	d807      	bhi.n	800d854 <_printf_i+0x28>
 800d844:	2f62      	cmp	r7, #98	; 0x62
 800d846:	d80a      	bhi.n	800d85e <_printf_i+0x32>
 800d848:	2f00      	cmp	r7, #0
 800d84a:	f000 80d8 	beq.w	800d9fe <_printf_i+0x1d2>
 800d84e:	2f58      	cmp	r7, #88	; 0x58
 800d850:	f000 80a3 	beq.w	800d99a <_printf_i+0x16e>
 800d854:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800d858:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800d85c:	e03a      	b.n	800d8d4 <_printf_i+0xa8>
 800d85e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800d862:	2b15      	cmp	r3, #21
 800d864:	d8f6      	bhi.n	800d854 <_printf_i+0x28>
 800d866:	a101      	add	r1, pc, #4	; (adr r1, 800d86c <_printf_i+0x40>)
 800d868:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800d86c:	0800d8c5 	.word	0x0800d8c5
 800d870:	0800d8d9 	.word	0x0800d8d9
 800d874:	0800d855 	.word	0x0800d855
 800d878:	0800d855 	.word	0x0800d855
 800d87c:	0800d855 	.word	0x0800d855
 800d880:	0800d855 	.word	0x0800d855
 800d884:	0800d8d9 	.word	0x0800d8d9
 800d888:	0800d855 	.word	0x0800d855
 800d88c:	0800d855 	.word	0x0800d855
 800d890:	0800d855 	.word	0x0800d855
 800d894:	0800d855 	.word	0x0800d855
 800d898:	0800d9e5 	.word	0x0800d9e5
 800d89c:	0800d909 	.word	0x0800d909
 800d8a0:	0800d9c7 	.word	0x0800d9c7
 800d8a4:	0800d855 	.word	0x0800d855
 800d8a8:	0800d855 	.word	0x0800d855
 800d8ac:	0800da07 	.word	0x0800da07
 800d8b0:	0800d855 	.word	0x0800d855
 800d8b4:	0800d909 	.word	0x0800d909
 800d8b8:	0800d855 	.word	0x0800d855
 800d8bc:	0800d855 	.word	0x0800d855
 800d8c0:	0800d9cf 	.word	0x0800d9cf
 800d8c4:	682b      	ldr	r3, [r5, #0]
 800d8c6:	1d1a      	adds	r2, r3, #4
 800d8c8:	681b      	ldr	r3, [r3, #0]
 800d8ca:	602a      	str	r2, [r5, #0]
 800d8cc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800d8d0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800d8d4:	2301      	movs	r3, #1
 800d8d6:	e0a3      	b.n	800da20 <_printf_i+0x1f4>
 800d8d8:	6820      	ldr	r0, [r4, #0]
 800d8da:	6829      	ldr	r1, [r5, #0]
 800d8dc:	0606      	lsls	r6, r0, #24
 800d8de:	f101 0304 	add.w	r3, r1, #4
 800d8e2:	d50a      	bpl.n	800d8fa <_printf_i+0xce>
 800d8e4:	680e      	ldr	r6, [r1, #0]
 800d8e6:	602b      	str	r3, [r5, #0]
 800d8e8:	2e00      	cmp	r6, #0
 800d8ea:	da03      	bge.n	800d8f4 <_printf_i+0xc8>
 800d8ec:	232d      	movs	r3, #45	; 0x2d
 800d8ee:	4276      	negs	r6, r6
 800d8f0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d8f4:	485e      	ldr	r0, [pc, #376]	; (800da70 <_printf_i+0x244>)
 800d8f6:	230a      	movs	r3, #10
 800d8f8:	e019      	b.n	800d92e <_printf_i+0x102>
 800d8fa:	680e      	ldr	r6, [r1, #0]
 800d8fc:	602b      	str	r3, [r5, #0]
 800d8fe:	f010 0f40 	tst.w	r0, #64	; 0x40
 800d902:	bf18      	it	ne
 800d904:	b236      	sxthne	r6, r6
 800d906:	e7ef      	b.n	800d8e8 <_printf_i+0xbc>
 800d908:	682b      	ldr	r3, [r5, #0]
 800d90a:	6820      	ldr	r0, [r4, #0]
 800d90c:	1d19      	adds	r1, r3, #4
 800d90e:	6029      	str	r1, [r5, #0]
 800d910:	0601      	lsls	r1, r0, #24
 800d912:	d501      	bpl.n	800d918 <_printf_i+0xec>
 800d914:	681e      	ldr	r6, [r3, #0]
 800d916:	e002      	b.n	800d91e <_printf_i+0xf2>
 800d918:	0646      	lsls	r6, r0, #25
 800d91a:	d5fb      	bpl.n	800d914 <_printf_i+0xe8>
 800d91c:	881e      	ldrh	r6, [r3, #0]
 800d91e:	4854      	ldr	r0, [pc, #336]	; (800da70 <_printf_i+0x244>)
 800d920:	2f6f      	cmp	r7, #111	; 0x6f
 800d922:	bf0c      	ite	eq
 800d924:	2308      	moveq	r3, #8
 800d926:	230a      	movne	r3, #10
 800d928:	2100      	movs	r1, #0
 800d92a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800d92e:	6865      	ldr	r5, [r4, #4]
 800d930:	60a5      	str	r5, [r4, #8]
 800d932:	2d00      	cmp	r5, #0
 800d934:	bfa2      	ittt	ge
 800d936:	6821      	ldrge	r1, [r4, #0]
 800d938:	f021 0104 	bicge.w	r1, r1, #4
 800d93c:	6021      	strge	r1, [r4, #0]
 800d93e:	b90e      	cbnz	r6, 800d944 <_printf_i+0x118>
 800d940:	2d00      	cmp	r5, #0
 800d942:	d04d      	beq.n	800d9e0 <_printf_i+0x1b4>
 800d944:	4615      	mov	r5, r2
 800d946:	fbb6 f1f3 	udiv	r1, r6, r3
 800d94a:	fb03 6711 	mls	r7, r3, r1, r6
 800d94e:	5dc7      	ldrb	r7, [r0, r7]
 800d950:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800d954:	4637      	mov	r7, r6
 800d956:	42bb      	cmp	r3, r7
 800d958:	460e      	mov	r6, r1
 800d95a:	d9f4      	bls.n	800d946 <_printf_i+0x11a>
 800d95c:	2b08      	cmp	r3, #8
 800d95e:	d10b      	bne.n	800d978 <_printf_i+0x14c>
 800d960:	6823      	ldr	r3, [r4, #0]
 800d962:	07de      	lsls	r6, r3, #31
 800d964:	d508      	bpl.n	800d978 <_printf_i+0x14c>
 800d966:	6923      	ldr	r3, [r4, #16]
 800d968:	6861      	ldr	r1, [r4, #4]
 800d96a:	4299      	cmp	r1, r3
 800d96c:	bfde      	ittt	le
 800d96e:	2330      	movle	r3, #48	; 0x30
 800d970:	f805 3c01 	strble.w	r3, [r5, #-1]
 800d974:	f105 35ff 	addle.w	r5, r5, #4294967295
 800d978:	1b52      	subs	r2, r2, r5
 800d97a:	6122      	str	r2, [r4, #16]
 800d97c:	f8cd a000 	str.w	sl, [sp]
 800d980:	464b      	mov	r3, r9
 800d982:	aa03      	add	r2, sp, #12
 800d984:	4621      	mov	r1, r4
 800d986:	4640      	mov	r0, r8
 800d988:	f7ff fee2 	bl	800d750 <_printf_common>
 800d98c:	3001      	adds	r0, #1
 800d98e:	d14c      	bne.n	800da2a <_printf_i+0x1fe>
 800d990:	f04f 30ff 	mov.w	r0, #4294967295
 800d994:	b004      	add	sp, #16
 800d996:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d99a:	4835      	ldr	r0, [pc, #212]	; (800da70 <_printf_i+0x244>)
 800d99c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800d9a0:	6829      	ldr	r1, [r5, #0]
 800d9a2:	6823      	ldr	r3, [r4, #0]
 800d9a4:	f851 6b04 	ldr.w	r6, [r1], #4
 800d9a8:	6029      	str	r1, [r5, #0]
 800d9aa:	061d      	lsls	r5, r3, #24
 800d9ac:	d514      	bpl.n	800d9d8 <_printf_i+0x1ac>
 800d9ae:	07df      	lsls	r7, r3, #31
 800d9b0:	bf44      	itt	mi
 800d9b2:	f043 0320 	orrmi.w	r3, r3, #32
 800d9b6:	6023      	strmi	r3, [r4, #0]
 800d9b8:	b91e      	cbnz	r6, 800d9c2 <_printf_i+0x196>
 800d9ba:	6823      	ldr	r3, [r4, #0]
 800d9bc:	f023 0320 	bic.w	r3, r3, #32
 800d9c0:	6023      	str	r3, [r4, #0]
 800d9c2:	2310      	movs	r3, #16
 800d9c4:	e7b0      	b.n	800d928 <_printf_i+0xfc>
 800d9c6:	6823      	ldr	r3, [r4, #0]
 800d9c8:	f043 0320 	orr.w	r3, r3, #32
 800d9cc:	6023      	str	r3, [r4, #0]
 800d9ce:	2378      	movs	r3, #120	; 0x78
 800d9d0:	4828      	ldr	r0, [pc, #160]	; (800da74 <_printf_i+0x248>)
 800d9d2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800d9d6:	e7e3      	b.n	800d9a0 <_printf_i+0x174>
 800d9d8:	0659      	lsls	r1, r3, #25
 800d9da:	bf48      	it	mi
 800d9dc:	b2b6      	uxthmi	r6, r6
 800d9de:	e7e6      	b.n	800d9ae <_printf_i+0x182>
 800d9e0:	4615      	mov	r5, r2
 800d9e2:	e7bb      	b.n	800d95c <_printf_i+0x130>
 800d9e4:	682b      	ldr	r3, [r5, #0]
 800d9e6:	6826      	ldr	r6, [r4, #0]
 800d9e8:	6961      	ldr	r1, [r4, #20]
 800d9ea:	1d18      	adds	r0, r3, #4
 800d9ec:	6028      	str	r0, [r5, #0]
 800d9ee:	0635      	lsls	r5, r6, #24
 800d9f0:	681b      	ldr	r3, [r3, #0]
 800d9f2:	d501      	bpl.n	800d9f8 <_printf_i+0x1cc>
 800d9f4:	6019      	str	r1, [r3, #0]
 800d9f6:	e002      	b.n	800d9fe <_printf_i+0x1d2>
 800d9f8:	0670      	lsls	r0, r6, #25
 800d9fa:	d5fb      	bpl.n	800d9f4 <_printf_i+0x1c8>
 800d9fc:	8019      	strh	r1, [r3, #0]
 800d9fe:	2300      	movs	r3, #0
 800da00:	6123      	str	r3, [r4, #16]
 800da02:	4615      	mov	r5, r2
 800da04:	e7ba      	b.n	800d97c <_printf_i+0x150>
 800da06:	682b      	ldr	r3, [r5, #0]
 800da08:	1d1a      	adds	r2, r3, #4
 800da0a:	602a      	str	r2, [r5, #0]
 800da0c:	681d      	ldr	r5, [r3, #0]
 800da0e:	6862      	ldr	r2, [r4, #4]
 800da10:	2100      	movs	r1, #0
 800da12:	4628      	mov	r0, r5
 800da14:	f7f2 fc04 	bl	8000220 <memchr>
 800da18:	b108      	cbz	r0, 800da1e <_printf_i+0x1f2>
 800da1a:	1b40      	subs	r0, r0, r5
 800da1c:	6060      	str	r0, [r4, #4]
 800da1e:	6863      	ldr	r3, [r4, #4]
 800da20:	6123      	str	r3, [r4, #16]
 800da22:	2300      	movs	r3, #0
 800da24:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800da28:	e7a8      	b.n	800d97c <_printf_i+0x150>
 800da2a:	6923      	ldr	r3, [r4, #16]
 800da2c:	462a      	mov	r2, r5
 800da2e:	4649      	mov	r1, r9
 800da30:	4640      	mov	r0, r8
 800da32:	47d0      	blx	sl
 800da34:	3001      	adds	r0, #1
 800da36:	d0ab      	beq.n	800d990 <_printf_i+0x164>
 800da38:	6823      	ldr	r3, [r4, #0]
 800da3a:	079b      	lsls	r3, r3, #30
 800da3c:	d413      	bmi.n	800da66 <_printf_i+0x23a>
 800da3e:	68e0      	ldr	r0, [r4, #12]
 800da40:	9b03      	ldr	r3, [sp, #12]
 800da42:	4298      	cmp	r0, r3
 800da44:	bfb8      	it	lt
 800da46:	4618      	movlt	r0, r3
 800da48:	e7a4      	b.n	800d994 <_printf_i+0x168>
 800da4a:	2301      	movs	r3, #1
 800da4c:	4632      	mov	r2, r6
 800da4e:	4649      	mov	r1, r9
 800da50:	4640      	mov	r0, r8
 800da52:	47d0      	blx	sl
 800da54:	3001      	adds	r0, #1
 800da56:	d09b      	beq.n	800d990 <_printf_i+0x164>
 800da58:	3501      	adds	r5, #1
 800da5a:	68e3      	ldr	r3, [r4, #12]
 800da5c:	9903      	ldr	r1, [sp, #12]
 800da5e:	1a5b      	subs	r3, r3, r1
 800da60:	42ab      	cmp	r3, r5
 800da62:	dcf2      	bgt.n	800da4a <_printf_i+0x21e>
 800da64:	e7eb      	b.n	800da3e <_printf_i+0x212>
 800da66:	2500      	movs	r5, #0
 800da68:	f104 0619 	add.w	r6, r4, #25
 800da6c:	e7f5      	b.n	800da5a <_printf_i+0x22e>
 800da6e:	bf00      	nop
 800da70:	0801159a 	.word	0x0801159a
 800da74:	080115ab 	.word	0x080115ab

0800da78 <siprintf>:
 800da78:	b40e      	push	{r1, r2, r3}
 800da7a:	b500      	push	{lr}
 800da7c:	b09c      	sub	sp, #112	; 0x70
 800da7e:	ab1d      	add	r3, sp, #116	; 0x74
 800da80:	9002      	str	r0, [sp, #8]
 800da82:	9006      	str	r0, [sp, #24]
 800da84:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800da88:	4809      	ldr	r0, [pc, #36]	; (800dab0 <siprintf+0x38>)
 800da8a:	9107      	str	r1, [sp, #28]
 800da8c:	9104      	str	r1, [sp, #16]
 800da8e:	4909      	ldr	r1, [pc, #36]	; (800dab4 <siprintf+0x3c>)
 800da90:	f853 2b04 	ldr.w	r2, [r3], #4
 800da94:	9105      	str	r1, [sp, #20]
 800da96:	6800      	ldr	r0, [r0, #0]
 800da98:	9301      	str	r3, [sp, #4]
 800da9a:	a902      	add	r1, sp, #8
 800da9c:	f001 fb76 	bl	800f18c <_svfiprintf_r>
 800daa0:	9b02      	ldr	r3, [sp, #8]
 800daa2:	2200      	movs	r2, #0
 800daa4:	701a      	strb	r2, [r3, #0]
 800daa6:	b01c      	add	sp, #112	; 0x70
 800daa8:	f85d eb04 	ldr.w	lr, [sp], #4
 800daac:	b003      	add	sp, #12
 800daae:	4770      	bx	lr
 800dab0:	20000140 	.word	0x20000140
 800dab4:	ffff0208 	.word	0xffff0208

0800dab8 <quorem>:
 800dab8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dabc:	6903      	ldr	r3, [r0, #16]
 800dabe:	690c      	ldr	r4, [r1, #16]
 800dac0:	42a3      	cmp	r3, r4
 800dac2:	4607      	mov	r7, r0
 800dac4:	f2c0 8081 	blt.w	800dbca <quorem+0x112>
 800dac8:	3c01      	subs	r4, #1
 800daca:	f101 0814 	add.w	r8, r1, #20
 800dace:	f100 0514 	add.w	r5, r0, #20
 800dad2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800dad6:	9301      	str	r3, [sp, #4]
 800dad8:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800dadc:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800dae0:	3301      	adds	r3, #1
 800dae2:	429a      	cmp	r2, r3
 800dae4:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800dae8:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800daec:	fbb2 f6f3 	udiv	r6, r2, r3
 800daf0:	d331      	bcc.n	800db56 <quorem+0x9e>
 800daf2:	f04f 0e00 	mov.w	lr, #0
 800daf6:	4640      	mov	r0, r8
 800daf8:	46ac      	mov	ip, r5
 800dafa:	46f2      	mov	sl, lr
 800dafc:	f850 2b04 	ldr.w	r2, [r0], #4
 800db00:	b293      	uxth	r3, r2
 800db02:	fb06 e303 	mla	r3, r6, r3, lr
 800db06:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800db0a:	b29b      	uxth	r3, r3
 800db0c:	ebaa 0303 	sub.w	r3, sl, r3
 800db10:	f8dc a000 	ldr.w	sl, [ip]
 800db14:	0c12      	lsrs	r2, r2, #16
 800db16:	fa13 f38a 	uxtah	r3, r3, sl
 800db1a:	fb06 e202 	mla	r2, r6, r2, lr
 800db1e:	9300      	str	r3, [sp, #0]
 800db20:	9b00      	ldr	r3, [sp, #0]
 800db22:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800db26:	b292      	uxth	r2, r2
 800db28:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800db2c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800db30:	f8bd 3000 	ldrh.w	r3, [sp]
 800db34:	4581      	cmp	r9, r0
 800db36:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800db3a:	f84c 3b04 	str.w	r3, [ip], #4
 800db3e:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800db42:	d2db      	bcs.n	800dafc <quorem+0x44>
 800db44:	f855 300b 	ldr.w	r3, [r5, fp]
 800db48:	b92b      	cbnz	r3, 800db56 <quorem+0x9e>
 800db4a:	9b01      	ldr	r3, [sp, #4]
 800db4c:	3b04      	subs	r3, #4
 800db4e:	429d      	cmp	r5, r3
 800db50:	461a      	mov	r2, r3
 800db52:	d32e      	bcc.n	800dbb2 <quorem+0xfa>
 800db54:	613c      	str	r4, [r7, #16]
 800db56:	4638      	mov	r0, r7
 800db58:	f001 f8c4 	bl	800ece4 <__mcmp>
 800db5c:	2800      	cmp	r0, #0
 800db5e:	db24      	blt.n	800dbaa <quorem+0xf2>
 800db60:	3601      	adds	r6, #1
 800db62:	4628      	mov	r0, r5
 800db64:	f04f 0c00 	mov.w	ip, #0
 800db68:	f858 2b04 	ldr.w	r2, [r8], #4
 800db6c:	f8d0 e000 	ldr.w	lr, [r0]
 800db70:	b293      	uxth	r3, r2
 800db72:	ebac 0303 	sub.w	r3, ip, r3
 800db76:	0c12      	lsrs	r2, r2, #16
 800db78:	fa13 f38e 	uxtah	r3, r3, lr
 800db7c:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800db80:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800db84:	b29b      	uxth	r3, r3
 800db86:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800db8a:	45c1      	cmp	r9, r8
 800db8c:	f840 3b04 	str.w	r3, [r0], #4
 800db90:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800db94:	d2e8      	bcs.n	800db68 <quorem+0xb0>
 800db96:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800db9a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800db9e:	b922      	cbnz	r2, 800dbaa <quorem+0xf2>
 800dba0:	3b04      	subs	r3, #4
 800dba2:	429d      	cmp	r5, r3
 800dba4:	461a      	mov	r2, r3
 800dba6:	d30a      	bcc.n	800dbbe <quorem+0x106>
 800dba8:	613c      	str	r4, [r7, #16]
 800dbaa:	4630      	mov	r0, r6
 800dbac:	b003      	add	sp, #12
 800dbae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dbb2:	6812      	ldr	r2, [r2, #0]
 800dbb4:	3b04      	subs	r3, #4
 800dbb6:	2a00      	cmp	r2, #0
 800dbb8:	d1cc      	bne.n	800db54 <quorem+0x9c>
 800dbba:	3c01      	subs	r4, #1
 800dbbc:	e7c7      	b.n	800db4e <quorem+0x96>
 800dbbe:	6812      	ldr	r2, [r2, #0]
 800dbc0:	3b04      	subs	r3, #4
 800dbc2:	2a00      	cmp	r2, #0
 800dbc4:	d1f0      	bne.n	800dba8 <quorem+0xf0>
 800dbc6:	3c01      	subs	r4, #1
 800dbc8:	e7eb      	b.n	800dba2 <quorem+0xea>
 800dbca:	2000      	movs	r0, #0
 800dbcc:	e7ee      	b.n	800dbac <quorem+0xf4>
	...

0800dbd0 <_dtoa_r>:
 800dbd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dbd4:	ed2d 8b04 	vpush	{d8-d9}
 800dbd8:	ec57 6b10 	vmov	r6, r7, d0
 800dbdc:	b093      	sub	sp, #76	; 0x4c
 800dbde:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800dbe0:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 800dbe4:	9106      	str	r1, [sp, #24]
 800dbe6:	ee10 aa10 	vmov	sl, s0
 800dbea:	4604      	mov	r4, r0
 800dbec:	9209      	str	r2, [sp, #36]	; 0x24
 800dbee:	930c      	str	r3, [sp, #48]	; 0x30
 800dbf0:	46bb      	mov	fp, r7
 800dbf2:	b975      	cbnz	r5, 800dc12 <_dtoa_r+0x42>
 800dbf4:	2010      	movs	r0, #16
 800dbf6:	f000 fddd 	bl	800e7b4 <malloc>
 800dbfa:	4602      	mov	r2, r0
 800dbfc:	6260      	str	r0, [r4, #36]	; 0x24
 800dbfe:	b920      	cbnz	r0, 800dc0a <_dtoa_r+0x3a>
 800dc00:	4ba7      	ldr	r3, [pc, #668]	; (800dea0 <_dtoa_r+0x2d0>)
 800dc02:	21ea      	movs	r1, #234	; 0xea
 800dc04:	48a7      	ldr	r0, [pc, #668]	; (800dea4 <_dtoa_r+0x2d4>)
 800dc06:	f001 fbd1 	bl	800f3ac <__assert_func>
 800dc0a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800dc0e:	6005      	str	r5, [r0, #0]
 800dc10:	60c5      	str	r5, [r0, #12]
 800dc12:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dc14:	6819      	ldr	r1, [r3, #0]
 800dc16:	b151      	cbz	r1, 800dc2e <_dtoa_r+0x5e>
 800dc18:	685a      	ldr	r2, [r3, #4]
 800dc1a:	604a      	str	r2, [r1, #4]
 800dc1c:	2301      	movs	r3, #1
 800dc1e:	4093      	lsls	r3, r2
 800dc20:	608b      	str	r3, [r1, #8]
 800dc22:	4620      	mov	r0, r4
 800dc24:	f000 fe1c 	bl	800e860 <_Bfree>
 800dc28:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dc2a:	2200      	movs	r2, #0
 800dc2c:	601a      	str	r2, [r3, #0]
 800dc2e:	1e3b      	subs	r3, r7, #0
 800dc30:	bfaa      	itet	ge
 800dc32:	2300      	movge	r3, #0
 800dc34:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 800dc38:	f8c8 3000 	strge.w	r3, [r8]
 800dc3c:	4b9a      	ldr	r3, [pc, #616]	; (800dea8 <_dtoa_r+0x2d8>)
 800dc3e:	bfbc      	itt	lt
 800dc40:	2201      	movlt	r2, #1
 800dc42:	f8c8 2000 	strlt.w	r2, [r8]
 800dc46:	ea33 030b 	bics.w	r3, r3, fp
 800dc4a:	d11b      	bne.n	800dc84 <_dtoa_r+0xb4>
 800dc4c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800dc4e:	f242 730f 	movw	r3, #9999	; 0x270f
 800dc52:	6013      	str	r3, [r2, #0]
 800dc54:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800dc58:	4333      	orrs	r3, r6
 800dc5a:	f000 8592 	beq.w	800e782 <_dtoa_r+0xbb2>
 800dc5e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800dc60:	b963      	cbnz	r3, 800dc7c <_dtoa_r+0xac>
 800dc62:	4b92      	ldr	r3, [pc, #584]	; (800deac <_dtoa_r+0x2dc>)
 800dc64:	e022      	b.n	800dcac <_dtoa_r+0xdc>
 800dc66:	4b92      	ldr	r3, [pc, #584]	; (800deb0 <_dtoa_r+0x2e0>)
 800dc68:	9301      	str	r3, [sp, #4]
 800dc6a:	3308      	adds	r3, #8
 800dc6c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800dc6e:	6013      	str	r3, [r2, #0]
 800dc70:	9801      	ldr	r0, [sp, #4]
 800dc72:	b013      	add	sp, #76	; 0x4c
 800dc74:	ecbd 8b04 	vpop	{d8-d9}
 800dc78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc7c:	4b8b      	ldr	r3, [pc, #556]	; (800deac <_dtoa_r+0x2dc>)
 800dc7e:	9301      	str	r3, [sp, #4]
 800dc80:	3303      	adds	r3, #3
 800dc82:	e7f3      	b.n	800dc6c <_dtoa_r+0x9c>
 800dc84:	2200      	movs	r2, #0
 800dc86:	2300      	movs	r3, #0
 800dc88:	4650      	mov	r0, sl
 800dc8a:	4659      	mov	r1, fp
 800dc8c:	f7f2 ff3c 	bl	8000b08 <__aeabi_dcmpeq>
 800dc90:	ec4b ab19 	vmov	d9, sl, fp
 800dc94:	4680      	mov	r8, r0
 800dc96:	b158      	cbz	r0, 800dcb0 <_dtoa_r+0xe0>
 800dc98:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800dc9a:	2301      	movs	r3, #1
 800dc9c:	6013      	str	r3, [r2, #0]
 800dc9e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800dca0:	2b00      	cmp	r3, #0
 800dca2:	f000 856b 	beq.w	800e77c <_dtoa_r+0xbac>
 800dca6:	4883      	ldr	r0, [pc, #524]	; (800deb4 <_dtoa_r+0x2e4>)
 800dca8:	6018      	str	r0, [r3, #0]
 800dcaa:	1e43      	subs	r3, r0, #1
 800dcac:	9301      	str	r3, [sp, #4]
 800dcae:	e7df      	b.n	800dc70 <_dtoa_r+0xa0>
 800dcb0:	ec4b ab10 	vmov	d0, sl, fp
 800dcb4:	aa10      	add	r2, sp, #64	; 0x40
 800dcb6:	a911      	add	r1, sp, #68	; 0x44
 800dcb8:	4620      	mov	r0, r4
 800dcba:	f001 f8b9 	bl	800ee30 <__d2b>
 800dcbe:	f3cb 550a 	ubfx	r5, fp, #20, #11
 800dcc2:	ee08 0a10 	vmov	s16, r0
 800dcc6:	2d00      	cmp	r5, #0
 800dcc8:	f000 8084 	beq.w	800ddd4 <_dtoa_r+0x204>
 800dccc:	ee19 3a90 	vmov	r3, s19
 800dcd0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800dcd4:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 800dcd8:	4656      	mov	r6, sl
 800dcda:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 800dcde:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800dce2:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 800dce6:	4b74      	ldr	r3, [pc, #464]	; (800deb8 <_dtoa_r+0x2e8>)
 800dce8:	2200      	movs	r2, #0
 800dcea:	4630      	mov	r0, r6
 800dcec:	4639      	mov	r1, r7
 800dcee:	f7f2 faeb 	bl	80002c8 <__aeabi_dsub>
 800dcf2:	a365      	add	r3, pc, #404	; (adr r3, 800de88 <_dtoa_r+0x2b8>)
 800dcf4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dcf8:	f7f2 fc9e 	bl	8000638 <__aeabi_dmul>
 800dcfc:	a364      	add	r3, pc, #400	; (adr r3, 800de90 <_dtoa_r+0x2c0>)
 800dcfe:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dd02:	f7f2 fae3 	bl	80002cc <__adddf3>
 800dd06:	4606      	mov	r6, r0
 800dd08:	4628      	mov	r0, r5
 800dd0a:	460f      	mov	r7, r1
 800dd0c:	f7f2 fc2a 	bl	8000564 <__aeabi_i2d>
 800dd10:	a361      	add	r3, pc, #388	; (adr r3, 800de98 <_dtoa_r+0x2c8>)
 800dd12:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dd16:	f7f2 fc8f 	bl	8000638 <__aeabi_dmul>
 800dd1a:	4602      	mov	r2, r0
 800dd1c:	460b      	mov	r3, r1
 800dd1e:	4630      	mov	r0, r6
 800dd20:	4639      	mov	r1, r7
 800dd22:	f7f2 fad3 	bl	80002cc <__adddf3>
 800dd26:	4606      	mov	r6, r0
 800dd28:	460f      	mov	r7, r1
 800dd2a:	f7f2 ff35 	bl	8000b98 <__aeabi_d2iz>
 800dd2e:	2200      	movs	r2, #0
 800dd30:	9000      	str	r0, [sp, #0]
 800dd32:	2300      	movs	r3, #0
 800dd34:	4630      	mov	r0, r6
 800dd36:	4639      	mov	r1, r7
 800dd38:	f7f2 fef0 	bl	8000b1c <__aeabi_dcmplt>
 800dd3c:	b150      	cbz	r0, 800dd54 <_dtoa_r+0x184>
 800dd3e:	9800      	ldr	r0, [sp, #0]
 800dd40:	f7f2 fc10 	bl	8000564 <__aeabi_i2d>
 800dd44:	4632      	mov	r2, r6
 800dd46:	463b      	mov	r3, r7
 800dd48:	f7f2 fede 	bl	8000b08 <__aeabi_dcmpeq>
 800dd4c:	b910      	cbnz	r0, 800dd54 <_dtoa_r+0x184>
 800dd4e:	9b00      	ldr	r3, [sp, #0]
 800dd50:	3b01      	subs	r3, #1
 800dd52:	9300      	str	r3, [sp, #0]
 800dd54:	9b00      	ldr	r3, [sp, #0]
 800dd56:	2b16      	cmp	r3, #22
 800dd58:	d85a      	bhi.n	800de10 <_dtoa_r+0x240>
 800dd5a:	9a00      	ldr	r2, [sp, #0]
 800dd5c:	4b57      	ldr	r3, [pc, #348]	; (800debc <_dtoa_r+0x2ec>)
 800dd5e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800dd62:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dd66:	ec51 0b19 	vmov	r0, r1, d9
 800dd6a:	f7f2 fed7 	bl	8000b1c <__aeabi_dcmplt>
 800dd6e:	2800      	cmp	r0, #0
 800dd70:	d050      	beq.n	800de14 <_dtoa_r+0x244>
 800dd72:	9b00      	ldr	r3, [sp, #0]
 800dd74:	3b01      	subs	r3, #1
 800dd76:	9300      	str	r3, [sp, #0]
 800dd78:	2300      	movs	r3, #0
 800dd7a:	930b      	str	r3, [sp, #44]	; 0x2c
 800dd7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800dd7e:	1b5d      	subs	r5, r3, r5
 800dd80:	1e6b      	subs	r3, r5, #1
 800dd82:	9305      	str	r3, [sp, #20]
 800dd84:	bf45      	ittet	mi
 800dd86:	f1c5 0301 	rsbmi	r3, r5, #1
 800dd8a:	9304      	strmi	r3, [sp, #16]
 800dd8c:	2300      	movpl	r3, #0
 800dd8e:	2300      	movmi	r3, #0
 800dd90:	bf4c      	ite	mi
 800dd92:	9305      	strmi	r3, [sp, #20]
 800dd94:	9304      	strpl	r3, [sp, #16]
 800dd96:	9b00      	ldr	r3, [sp, #0]
 800dd98:	2b00      	cmp	r3, #0
 800dd9a:	db3d      	blt.n	800de18 <_dtoa_r+0x248>
 800dd9c:	9b05      	ldr	r3, [sp, #20]
 800dd9e:	9a00      	ldr	r2, [sp, #0]
 800dda0:	920a      	str	r2, [sp, #40]	; 0x28
 800dda2:	4413      	add	r3, r2
 800dda4:	9305      	str	r3, [sp, #20]
 800dda6:	2300      	movs	r3, #0
 800dda8:	9307      	str	r3, [sp, #28]
 800ddaa:	9b06      	ldr	r3, [sp, #24]
 800ddac:	2b09      	cmp	r3, #9
 800ddae:	f200 8089 	bhi.w	800dec4 <_dtoa_r+0x2f4>
 800ddb2:	2b05      	cmp	r3, #5
 800ddb4:	bfc4      	itt	gt
 800ddb6:	3b04      	subgt	r3, #4
 800ddb8:	9306      	strgt	r3, [sp, #24]
 800ddba:	9b06      	ldr	r3, [sp, #24]
 800ddbc:	f1a3 0302 	sub.w	r3, r3, #2
 800ddc0:	bfcc      	ite	gt
 800ddc2:	2500      	movgt	r5, #0
 800ddc4:	2501      	movle	r5, #1
 800ddc6:	2b03      	cmp	r3, #3
 800ddc8:	f200 8087 	bhi.w	800deda <_dtoa_r+0x30a>
 800ddcc:	e8df f003 	tbb	[pc, r3]
 800ddd0:	59383a2d 	.word	0x59383a2d
 800ddd4:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 800ddd8:	441d      	add	r5, r3
 800ddda:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800ddde:	2b20      	cmp	r3, #32
 800dde0:	bfc1      	itttt	gt
 800dde2:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800dde6:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 800ddea:	fa0b f303 	lslgt.w	r3, fp, r3
 800ddee:	fa26 f000 	lsrgt.w	r0, r6, r0
 800ddf2:	bfda      	itte	le
 800ddf4:	f1c3 0320 	rsble	r3, r3, #32
 800ddf8:	fa06 f003 	lslle.w	r0, r6, r3
 800ddfc:	4318      	orrgt	r0, r3
 800ddfe:	f7f2 fba1 	bl	8000544 <__aeabi_ui2d>
 800de02:	2301      	movs	r3, #1
 800de04:	4606      	mov	r6, r0
 800de06:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 800de0a:	3d01      	subs	r5, #1
 800de0c:	930e      	str	r3, [sp, #56]	; 0x38
 800de0e:	e76a      	b.n	800dce6 <_dtoa_r+0x116>
 800de10:	2301      	movs	r3, #1
 800de12:	e7b2      	b.n	800dd7a <_dtoa_r+0x1aa>
 800de14:	900b      	str	r0, [sp, #44]	; 0x2c
 800de16:	e7b1      	b.n	800dd7c <_dtoa_r+0x1ac>
 800de18:	9b04      	ldr	r3, [sp, #16]
 800de1a:	9a00      	ldr	r2, [sp, #0]
 800de1c:	1a9b      	subs	r3, r3, r2
 800de1e:	9304      	str	r3, [sp, #16]
 800de20:	4253      	negs	r3, r2
 800de22:	9307      	str	r3, [sp, #28]
 800de24:	2300      	movs	r3, #0
 800de26:	930a      	str	r3, [sp, #40]	; 0x28
 800de28:	e7bf      	b.n	800ddaa <_dtoa_r+0x1da>
 800de2a:	2300      	movs	r3, #0
 800de2c:	9308      	str	r3, [sp, #32]
 800de2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800de30:	2b00      	cmp	r3, #0
 800de32:	dc55      	bgt.n	800dee0 <_dtoa_r+0x310>
 800de34:	2301      	movs	r3, #1
 800de36:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800de3a:	461a      	mov	r2, r3
 800de3c:	9209      	str	r2, [sp, #36]	; 0x24
 800de3e:	e00c      	b.n	800de5a <_dtoa_r+0x28a>
 800de40:	2301      	movs	r3, #1
 800de42:	e7f3      	b.n	800de2c <_dtoa_r+0x25c>
 800de44:	2300      	movs	r3, #0
 800de46:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800de48:	9308      	str	r3, [sp, #32]
 800de4a:	9b00      	ldr	r3, [sp, #0]
 800de4c:	4413      	add	r3, r2
 800de4e:	9302      	str	r3, [sp, #8]
 800de50:	3301      	adds	r3, #1
 800de52:	2b01      	cmp	r3, #1
 800de54:	9303      	str	r3, [sp, #12]
 800de56:	bfb8      	it	lt
 800de58:	2301      	movlt	r3, #1
 800de5a:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800de5c:	2200      	movs	r2, #0
 800de5e:	6042      	str	r2, [r0, #4]
 800de60:	2204      	movs	r2, #4
 800de62:	f102 0614 	add.w	r6, r2, #20
 800de66:	429e      	cmp	r6, r3
 800de68:	6841      	ldr	r1, [r0, #4]
 800de6a:	d93d      	bls.n	800dee8 <_dtoa_r+0x318>
 800de6c:	4620      	mov	r0, r4
 800de6e:	f000 fcb7 	bl	800e7e0 <_Balloc>
 800de72:	9001      	str	r0, [sp, #4]
 800de74:	2800      	cmp	r0, #0
 800de76:	d13b      	bne.n	800def0 <_dtoa_r+0x320>
 800de78:	4b11      	ldr	r3, [pc, #68]	; (800dec0 <_dtoa_r+0x2f0>)
 800de7a:	4602      	mov	r2, r0
 800de7c:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800de80:	e6c0      	b.n	800dc04 <_dtoa_r+0x34>
 800de82:	2301      	movs	r3, #1
 800de84:	e7df      	b.n	800de46 <_dtoa_r+0x276>
 800de86:	bf00      	nop
 800de88:	636f4361 	.word	0x636f4361
 800de8c:	3fd287a7 	.word	0x3fd287a7
 800de90:	8b60c8b3 	.word	0x8b60c8b3
 800de94:	3fc68a28 	.word	0x3fc68a28
 800de98:	509f79fb 	.word	0x509f79fb
 800de9c:	3fd34413 	.word	0x3fd34413
 800dea0:	080115c9 	.word	0x080115c9
 800dea4:	080115e0 	.word	0x080115e0
 800dea8:	7ff00000 	.word	0x7ff00000
 800deac:	080115c5 	.word	0x080115c5
 800deb0:	080115bc 	.word	0x080115bc
 800deb4:	08011599 	.word	0x08011599
 800deb8:	3ff80000 	.word	0x3ff80000
 800debc:	080116d0 	.word	0x080116d0
 800dec0:	0801163b 	.word	0x0801163b
 800dec4:	2501      	movs	r5, #1
 800dec6:	2300      	movs	r3, #0
 800dec8:	9306      	str	r3, [sp, #24]
 800deca:	9508      	str	r5, [sp, #32]
 800decc:	f04f 33ff 	mov.w	r3, #4294967295
 800ded0:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800ded4:	2200      	movs	r2, #0
 800ded6:	2312      	movs	r3, #18
 800ded8:	e7b0      	b.n	800de3c <_dtoa_r+0x26c>
 800deda:	2301      	movs	r3, #1
 800dedc:	9308      	str	r3, [sp, #32]
 800dede:	e7f5      	b.n	800decc <_dtoa_r+0x2fc>
 800dee0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dee2:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800dee6:	e7b8      	b.n	800de5a <_dtoa_r+0x28a>
 800dee8:	3101      	adds	r1, #1
 800deea:	6041      	str	r1, [r0, #4]
 800deec:	0052      	lsls	r2, r2, #1
 800deee:	e7b8      	b.n	800de62 <_dtoa_r+0x292>
 800def0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800def2:	9a01      	ldr	r2, [sp, #4]
 800def4:	601a      	str	r2, [r3, #0]
 800def6:	9b03      	ldr	r3, [sp, #12]
 800def8:	2b0e      	cmp	r3, #14
 800defa:	f200 809d 	bhi.w	800e038 <_dtoa_r+0x468>
 800defe:	2d00      	cmp	r5, #0
 800df00:	f000 809a 	beq.w	800e038 <_dtoa_r+0x468>
 800df04:	9b00      	ldr	r3, [sp, #0]
 800df06:	2b00      	cmp	r3, #0
 800df08:	dd32      	ble.n	800df70 <_dtoa_r+0x3a0>
 800df0a:	4ab7      	ldr	r2, [pc, #732]	; (800e1e8 <_dtoa_r+0x618>)
 800df0c:	f003 030f 	and.w	r3, r3, #15
 800df10:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800df14:	e9d3 8900 	ldrd	r8, r9, [r3]
 800df18:	9b00      	ldr	r3, [sp, #0]
 800df1a:	05d8      	lsls	r0, r3, #23
 800df1c:	ea4f 1723 	mov.w	r7, r3, asr #4
 800df20:	d516      	bpl.n	800df50 <_dtoa_r+0x380>
 800df22:	4bb2      	ldr	r3, [pc, #712]	; (800e1ec <_dtoa_r+0x61c>)
 800df24:	ec51 0b19 	vmov	r0, r1, d9
 800df28:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800df2c:	f7f2 fcae 	bl	800088c <__aeabi_ddiv>
 800df30:	f007 070f 	and.w	r7, r7, #15
 800df34:	4682      	mov	sl, r0
 800df36:	468b      	mov	fp, r1
 800df38:	2503      	movs	r5, #3
 800df3a:	4eac      	ldr	r6, [pc, #688]	; (800e1ec <_dtoa_r+0x61c>)
 800df3c:	b957      	cbnz	r7, 800df54 <_dtoa_r+0x384>
 800df3e:	4642      	mov	r2, r8
 800df40:	464b      	mov	r3, r9
 800df42:	4650      	mov	r0, sl
 800df44:	4659      	mov	r1, fp
 800df46:	f7f2 fca1 	bl	800088c <__aeabi_ddiv>
 800df4a:	4682      	mov	sl, r0
 800df4c:	468b      	mov	fp, r1
 800df4e:	e028      	b.n	800dfa2 <_dtoa_r+0x3d2>
 800df50:	2502      	movs	r5, #2
 800df52:	e7f2      	b.n	800df3a <_dtoa_r+0x36a>
 800df54:	07f9      	lsls	r1, r7, #31
 800df56:	d508      	bpl.n	800df6a <_dtoa_r+0x39a>
 800df58:	4640      	mov	r0, r8
 800df5a:	4649      	mov	r1, r9
 800df5c:	e9d6 2300 	ldrd	r2, r3, [r6]
 800df60:	f7f2 fb6a 	bl	8000638 <__aeabi_dmul>
 800df64:	3501      	adds	r5, #1
 800df66:	4680      	mov	r8, r0
 800df68:	4689      	mov	r9, r1
 800df6a:	107f      	asrs	r7, r7, #1
 800df6c:	3608      	adds	r6, #8
 800df6e:	e7e5      	b.n	800df3c <_dtoa_r+0x36c>
 800df70:	f000 809b 	beq.w	800e0aa <_dtoa_r+0x4da>
 800df74:	9b00      	ldr	r3, [sp, #0]
 800df76:	4f9d      	ldr	r7, [pc, #628]	; (800e1ec <_dtoa_r+0x61c>)
 800df78:	425e      	negs	r6, r3
 800df7a:	4b9b      	ldr	r3, [pc, #620]	; (800e1e8 <_dtoa_r+0x618>)
 800df7c:	f006 020f 	and.w	r2, r6, #15
 800df80:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800df84:	e9d3 2300 	ldrd	r2, r3, [r3]
 800df88:	ec51 0b19 	vmov	r0, r1, d9
 800df8c:	f7f2 fb54 	bl	8000638 <__aeabi_dmul>
 800df90:	1136      	asrs	r6, r6, #4
 800df92:	4682      	mov	sl, r0
 800df94:	468b      	mov	fp, r1
 800df96:	2300      	movs	r3, #0
 800df98:	2502      	movs	r5, #2
 800df9a:	2e00      	cmp	r6, #0
 800df9c:	d17a      	bne.n	800e094 <_dtoa_r+0x4c4>
 800df9e:	2b00      	cmp	r3, #0
 800dfa0:	d1d3      	bne.n	800df4a <_dtoa_r+0x37a>
 800dfa2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800dfa4:	2b00      	cmp	r3, #0
 800dfa6:	f000 8082 	beq.w	800e0ae <_dtoa_r+0x4de>
 800dfaa:	4b91      	ldr	r3, [pc, #580]	; (800e1f0 <_dtoa_r+0x620>)
 800dfac:	2200      	movs	r2, #0
 800dfae:	4650      	mov	r0, sl
 800dfb0:	4659      	mov	r1, fp
 800dfb2:	f7f2 fdb3 	bl	8000b1c <__aeabi_dcmplt>
 800dfb6:	2800      	cmp	r0, #0
 800dfb8:	d079      	beq.n	800e0ae <_dtoa_r+0x4de>
 800dfba:	9b03      	ldr	r3, [sp, #12]
 800dfbc:	2b00      	cmp	r3, #0
 800dfbe:	d076      	beq.n	800e0ae <_dtoa_r+0x4de>
 800dfc0:	9b02      	ldr	r3, [sp, #8]
 800dfc2:	2b00      	cmp	r3, #0
 800dfc4:	dd36      	ble.n	800e034 <_dtoa_r+0x464>
 800dfc6:	9b00      	ldr	r3, [sp, #0]
 800dfc8:	4650      	mov	r0, sl
 800dfca:	4659      	mov	r1, fp
 800dfcc:	1e5f      	subs	r7, r3, #1
 800dfce:	2200      	movs	r2, #0
 800dfd0:	4b88      	ldr	r3, [pc, #544]	; (800e1f4 <_dtoa_r+0x624>)
 800dfd2:	f7f2 fb31 	bl	8000638 <__aeabi_dmul>
 800dfd6:	9e02      	ldr	r6, [sp, #8]
 800dfd8:	4682      	mov	sl, r0
 800dfda:	468b      	mov	fp, r1
 800dfdc:	3501      	adds	r5, #1
 800dfde:	4628      	mov	r0, r5
 800dfe0:	f7f2 fac0 	bl	8000564 <__aeabi_i2d>
 800dfe4:	4652      	mov	r2, sl
 800dfe6:	465b      	mov	r3, fp
 800dfe8:	f7f2 fb26 	bl	8000638 <__aeabi_dmul>
 800dfec:	4b82      	ldr	r3, [pc, #520]	; (800e1f8 <_dtoa_r+0x628>)
 800dfee:	2200      	movs	r2, #0
 800dff0:	f7f2 f96c 	bl	80002cc <__adddf3>
 800dff4:	46d0      	mov	r8, sl
 800dff6:	46d9      	mov	r9, fp
 800dff8:	4682      	mov	sl, r0
 800dffa:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 800dffe:	2e00      	cmp	r6, #0
 800e000:	d158      	bne.n	800e0b4 <_dtoa_r+0x4e4>
 800e002:	4b7e      	ldr	r3, [pc, #504]	; (800e1fc <_dtoa_r+0x62c>)
 800e004:	2200      	movs	r2, #0
 800e006:	4640      	mov	r0, r8
 800e008:	4649      	mov	r1, r9
 800e00a:	f7f2 f95d 	bl	80002c8 <__aeabi_dsub>
 800e00e:	4652      	mov	r2, sl
 800e010:	465b      	mov	r3, fp
 800e012:	4680      	mov	r8, r0
 800e014:	4689      	mov	r9, r1
 800e016:	f7f2 fd9f 	bl	8000b58 <__aeabi_dcmpgt>
 800e01a:	2800      	cmp	r0, #0
 800e01c:	f040 8295 	bne.w	800e54a <_dtoa_r+0x97a>
 800e020:	4652      	mov	r2, sl
 800e022:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800e026:	4640      	mov	r0, r8
 800e028:	4649      	mov	r1, r9
 800e02a:	f7f2 fd77 	bl	8000b1c <__aeabi_dcmplt>
 800e02e:	2800      	cmp	r0, #0
 800e030:	f040 8289 	bne.w	800e546 <_dtoa_r+0x976>
 800e034:	ec5b ab19 	vmov	sl, fp, d9
 800e038:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e03a:	2b00      	cmp	r3, #0
 800e03c:	f2c0 8148 	blt.w	800e2d0 <_dtoa_r+0x700>
 800e040:	9a00      	ldr	r2, [sp, #0]
 800e042:	2a0e      	cmp	r2, #14
 800e044:	f300 8144 	bgt.w	800e2d0 <_dtoa_r+0x700>
 800e048:	4b67      	ldr	r3, [pc, #412]	; (800e1e8 <_dtoa_r+0x618>)
 800e04a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800e04e:	e9d3 8900 	ldrd	r8, r9, [r3]
 800e052:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e054:	2b00      	cmp	r3, #0
 800e056:	f280 80d5 	bge.w	800e204 <_dtoa_r+0x634>
 800e05a:	9b03      	ldr	r3, [sp, #12]
 800e05c:	2b00      	cmp	r3, #0
 800e05e:	f300 80d1 	bgt.w	800e204 <_dtoa_r+0x634>
 800e062:	f040 826f 	bne.w	800e544 <_dtoa_r+0x974>
 800e066:	4b65      	ldr	r3, [pc, #404]	; (800e1fc <_dtoa_r+0x62c>)
 800e068:	2200      	movs	r2, #0
 800e06a:	4640      	mov	r0, r8
 800e06c:	4649      	mov	r1, r9
 800e06e:	f7f2 fae3 	bl	8000638 <__aeabi_dmul>
 800e072:	4652      	mov	r2, sl
 800e074:	465b      	mov	r3, fp
 800e076:	f7f2 fd65 	bl	8000b44 <__aeabi_dcmpge>
 800e07a:	9e03      	ldr	r6, [sp, #12]
 800e07c:	4637      	mov	r7, r6
 800e07e:	2800      	cmp	r0, #0
 800e080:	f040 8245 	bne.w	800e50e <_dtoa_r+0x93e>
 800e084:	9d01      	ldr	r5, [sp, #4]
 800e086:	2331      	movs	r3, #49	; 0x31
 800e088:	f805 3b01 	strb.w	r3, [r5], #1
 800e08c:	9b00      	ldr	r3, [sp, #0]
 800e08e:	3301      	adds	r3, #1
 800e090:	9300      	str	r3, [sp, #0]
 800e092:	e240      	b.n	800e516 <_dtoa_r+0x946>
 800e094:	07f2      	lsls	r2, r6, #31
 800e096:	d505      	bpl.n	800e0a4 <_dtoa_r+0x4d4>
 800e098:	e9d7 2300 	ldrd	r2, r3, [r7]
 800e09c:	f7f2 facc 	bl	8000638 <__aeabi_dmul>
 800e0a0:	3501      	adds	r5, #1
 800e0a2:	2301      	movs	r3, #1
 800e0a4:	1076      	asrs	r6, r6, #1
 800e0a6:	3708      	adds	r7, #8
 800e0a8:	e777      	b.n	800df9a <_dtoa_r+0x3ca>
 800e0aa:	2502      	movs	r5, #2
 800e0ac:	e779      	b.n	800dfa2 <_dtoa_r+0x3d2>
 800e0ae:	9f00      	ldr	r7, [sp, #0]
 800e0b0:	9e03      	ldr	r6, [sp, #12]
 800e0b2:	e794      	b.n	800dfde <_dtoa_r+0x40e>
 800e0b4:	9901      	ldr	r1, [sp, #4]
 800e0b6:	4b4c      	ldr	r3, [pc, #304]	; (800e1e8 <_dtoa_r+0x618>)
 800e0b8:	4431      	add	r1, r6
 800e0ba:	910d      	str	r1, [sp, #52]	; 0x34
 800e0bc:	9908      	ldr	r1, [sp, #32]
 800e0be:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800e0c2:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800e0c6:	2900      	cmp	r1, #0
 800e0c8:	d043      	beq.n	800e152 <_dtoa_r+0x582>
 800e0ca:	494d      	ldr	r1, [pc, #308]	; (800e200 <_dtoa_r+0x630>)
 800e0cc:	2000      	movs	r0, #0
 800e0ce:	f7f2 fbdd 	bl	800088c <__aeabi_ddiv>
 800e0d2:	4652      	mov	r2, sl
 800e0d4:	465b      	mov	r3, fp
 800e0d6:	f7f2 f8f7 	bl	80002c8 <__aeabi_dsub>
 800e0da:	9d01      	ldr	r5, [sp, #4]
 800e0dc:	4682      	mov	sl, r0
 800e0de:	468b      	mov	fp, r1
 800e0e0:	4649      	mov	r1, r9
 800e0e2:	4640      	mov	r0, r8
 800e0e4:	f7f2 fd58 	bl	8000b98 <__aeabi_d2iz>
 800e0e8:	4606      	mov	r6, r0
 800e0ea:	f7f2 fa3b 	bl	8000564 <__aeabi_i2d>
 800e0ee:	4602      	mov	r2, r0
 800e0f0:	460b      	mov	r3, r1
 800e0f2:	4640      	mov	r0, r8
 800e0f4:	4649      	mov	r1, r9
 800e0f6:	f7f2 f8e7 	bl	80002c8 <__aeabi_dsub>
 800e0fa:	3630      	adds	r6, #48	; 0x30
 800e0fc:	f805 6b01 	strb.w	r6, [r5], #1
 800e100:	4652      	mov	r2, sl
 800e102:	465b      	mov	r3, fp
 800e104:	4680      	mov	r8, r0
 800e106:	4689      	mov	r9, r1
 800e108:	f7f2 fd08 	bl	8000b1c <__aeabi_dcmplt>
 800e10c:	2800      	cmp	r0, #0
 800e10e:	d163      	bne.n	800e1d8 <_dtoa_r+0x608>
 800e110:	4642      	mov	r2, r8
 800e112:	464b      	mov	r3, r9
 800e114:	4936      	ldr	r1, [pc, #216]	; (800e1f0 <_dtoa_r+0x620>)
 800e116:	2000      	movs	r0, #0
 800e118:	f7f2 f8d6 	bl	80002c8 <__aeabi_dsub>
 800e11c:	4652      	mov	r2, sl
 800e11e:	465b      	mov	r3, fp
 800e120:	f7f2 fcfc 	bl	8000b1c <__aeabi_dcmplt>
 800e124:	2800      	cmp	r0, #0
 800e126:	f040 80b5 	bne.w	800e294 <_dtoa_r+0x6c4>
 800e12a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e12c:	429d      	cmp	r5, r3
 800e12e:	d081      	beq.n	800e034 <_dtoa_r+0x464>
 800e130:	4b30      	ldr	r3, [pc, #192]	; (800e1f4 <_dtoa_r+0x624>)
 800e132:	2200      	movs	r2, #0
 800e134:	4650      	mov	r0, sl
 800e136:	4659      	mov	r1, fp
 800e138:	f7f2 fa7e 	bl	8000638 <__aeabi_dmul>
 800e13c:	4b2d      	ldr	r3, [pc, #180]	; (800e1f4 <_dtoa_r+0x624>)
 800e13e:	4682      	mov	sl, r0
 800e140:	468b      	mov	fp, r1
 800e142:	4640      	mov	r0, r8
 800e144:	4649      	mov	r1, r9
 800e146:	2200      	movs	r2, #0
 800e148:	f7f2 fa76 	bl	8000638 <__aeabi_dmul>
 800e14c:	4680      	mov	r8, r0
 800e14e:	4689      	mov	r9, r1
 800e150:	e7c6      	b.n	800e0e0 <_dtoa_r+0x510>
 800e152:	4650      	mov	r0, sl
 800e154:	4659      	mov	r1, fp
 800e156:	f7f2 fa6f 	bl	8000638 <__aeabi_dmul>
 800e15a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e15c:	9d01      	ldr	r5, [sp, #4]
 800e15e:	930f      	str	r3, [sp, #60]	; 0x3c
 800e160:	4682      	mov	sl, r0
 800e162:	468b      	mov	fp, r1
 800e164:	4649      	mov	r1, r9
 800e166:	4640      	mov	r0, r8
 800e168:	f7f2 fd16 	bl	8000b98 <__aeabi_d2iz>
 800e16c:	4606      	mov	r6, r0
 800e16e:	f7f2 f9f9 	bl	8000564 <__aeabi_i2d>
 800e172:	3630      	adds	r6, #48	; 0x30
 800e174:	4602      	mov	r2, r0
 800e176:	460b      	mov	r3, r1
 800e178:	4640      	mov	r0, r8
 800e17a:	4649      	mov	r1, r9
 800e17c:	f7f2 f8a4 	bl	80002c8 <__aeabi_dsub>
 800e180:	f805 6b01 	strb.w	r6, [r5], #1
 800e184:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e186:	429d      	cmp	r5, r3
 800e188:	4680      	mov	r8, r0
 800e18a:	4689      	mov	r9, r1
 800e18c:	f04f 0200 	mov.w	r2, #0
 800e190:	d124      	bne.n	800e1dc <_dtoa_r+0x60c>
 800e192:	4b1b      	ldr	r3, [pc, #108]	; (800e200 <_dtoa_r+0x630>)
 800e194:	4650      	mov	r0, sl
 800e196:	4659      	mov	r1, fp
 800e198:	f7f2 f898 	bl	80002cc <__adddf3>
 800e19c:	4602      	mov	r2, r0
 800e19e:	460b      	mov	r3, r1
 800e1a0:	4640      	mov	r0, r8
 800e1a2:	4649      	mov	r1, r9
 800e1a4:	f7f2 fcd8 	bl	8000b58 <__aeabi_dcmpgt>
 800e1a8:	2800      	cmp	r0, #0
 800e1aa:	d173      	bne.n	800e294 <_dtoa_r+0x6c4>
 800e1ac:	4652      	mov	r2, sl
 800e1ae:	465b      	mov	r3, fp
 800e1b0:	4913      	ldr	r1, [pc, #76]	; (800e200 <_dtoa_r+0x630>)
 800e1b2:	2000      	movs	r0, #0
 800e1b4:	f7f2 f888 	bl	80002c8 <__aeabi_dsub>
 800e1b8:	4602      	mov	r2, r0
 800e1ba:	460b      	mov	r3, r1
 800e1bc:	4640      	mov	r0, r8
 800e1be:	4649      	mov	r1, r9
 800e1c0:	f7f2 fcac 	bl	8000b1c <__aeabi_dcmplt>
 800e1c4:	2800      	cmp	r0, #0
 800e1c6:	f43f af35 	beq.w	800e034 <_dtoa_r+0x464>
 800e1ca:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800e1cc:	1e6b      	subs	r3, r5, #1
 800e1ce:	930f      	str	r3, [sp, #60]	; 0x3c
 800e1d0:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800e1d4:	2b30      	cmp	r3, #48	; 0x30
 800e1d6:	d0f8      	beq.n	800e1ca <_dtoa_r+0x5fa>
 800e1d8:	9700      	str	r7, [sp, #0]
 800e1da:	e049      	b.n	800e270 <_dtoa_r+0x6a0>
 800e1dc:	4b05      	ldr	r3, [pc, #20]	; (800e1f4 <_dtoa_r+0x624>)
 800e1de:	f7f2 fa2b 	bl	8000638 <__aeabi_dmul>
 800e1e2:	4680      	mov	r8, r0
 800e1e4:	4689      	mov	r9, r1
 800e1e6:	e7bd      	b.n	800e164 <_dtoa_r+0x594>
 800e1e8:	080116d0 	.word	0x080116d0
 800e1ec:	080116a8 	.word	0x080116a8
 800e1f0:	3ff00000 	.word	0x3ff00000
 800e1f4:	40240000 	.word	0x40240000
 800e1f8:	401c0000 	.word	0x401c0000
 800e1fc:	40140000 	.word	0x40140000
 800e200:	3fe00000 	.word	0x3fe00000
 800e204:	9d01      	ldr	r5, [sp, #4]
 800e206:	4656      	mov	r6, sl
 800e208:	465f      	mov	r7, fp
 800e20a:	4642      	mov	r2, r8
 800e20c:	464b      	mov	r3, r9
 800e20e:	4630      	mov	r0, r6
 800e210:	4639      	mov	r1, r7
 800e212:	f7f2 fb3b 	bl	800088c <__aeabi_ddiv>
 800e216:	f7f2 fcbf 	bl	8000b98 <__aeabi_d2iz>
 800e21a:	4682      	mov	sl, r0
 800e21c:	f7f2 f9a2 	bl	8000564 <__aeabi_i2d>
 800e220:	4642      	mov	r2, r8
 800e222:	464b      	mov	r3, r9
 800e224:	f7f2 fa08 	bl	8000638 <__aeabi_dmul>
 800e228:	4602      	mov	r2, r0
 800e22a:	460b      	mov	r3, r1
 800e22c:	4630      	mov	r0, r6
 800e22e:	4639      	mov	r1, r7
 800e230:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 800e234:	f7f2 f848 	bl	80002c8 <__aeabi_dsub>
 800e238:	f805 6b01 	strb.w	r6, [r5], #1
 800e23c:	9e01      	ldr	r6, [sp, #4]
 800e23e:	9f03      	ldr	r7, [sp, #12]
 800e240:	1bae      	subs	r6, r5, r6
 800e242:	42b7      	cmp	r7, r6
 800e244:	4602      	mov	r2, r0
 800e246:	460b      	mov	r3, r1
 800e248:	d135      	bne.n	800e2b6 <_dtoa_r+0x6e6>
 800e24a:	f7f2 f83f 	bl	80002cc <__adddf3>
 800e24e:	4642      	mov	r2, r8
 800e250:	464b      	mov	r3, r9
 800e252:	4606      	mov	r6, r0
 800e254:	460f      	mov	r7, r1
 800e256:	f7f2 fc7f 	bl	8000b58 <__aeabi_dcmpgt>
 800e25a:	b9d0      	cbnz	r0, 800e292 <_dtoa_r+0x6c2>
 800e25c:	4642      	mov	r2, r8
 800e25e:	464b      	mov	r3, r9
 800e260:	4630      	mov	r0, r6
 800e262:	4639      	mov	r1, r7
 800e264:	f7f2 fc50 	bl	8000b08 <__aeabi_dcmpeq>
 800e268:	b110      	cbz	r0, 800e270 <_dtoa_r+0x6a0>
 800e26a:	f01a 0f01 	tst.w	sl, #1
 800e26e:	d110      	bne.n	800e292 <_dtoa_r+0x6c2>
 800e270:	4620      	mov	r0, r4
 800e272:	ee18 1a10 	vmov	r1, s16
 800e276:	f000 faf3 	bl	800e860 <_Bfree>
 800e27a:	2300      	movs	r3, #0
 800e27c:	9800      	ldr	r0, [sp, #0]
 800e27e:	702b      	strb	r3, [r5, #0]
 800e280:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e282:	3001      	adds	r0, #1
 800e284:	6018      	str	r0, [r3, #0]
 800e286:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e288:	2b00      	cmp	r3, #0
 800e28a:	f43f acf1 	beq.w	800dc70 <_dtoa_r+0xa0>
 800e28e:	601d      	str	r5, [r3, #0]
 800e290:	e4ee      	b.n	800dc70 <_dtoa_r+0xa0>
 800e292:	9f00      	ldr	r7, [sp, #0]
 800e294:	462b      	mov	r3, r5
 800e296:	461d      	mov	r5, r3
 800e298:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800e29c:	2a39      	cmp	r2, #57	; 0x39
 800e29e:	d106      	bne.n	800e2ae <_dtoa_r+0x6de>
 800e2a0:	9a01      	ldr	r2, [sp, #4]
 800e2a2:	429a      	cmp	r2, r3
 800e2a4:	d1f7      	bne.n	800e296 <_dtoa_r+0x6c6>
 800e2a6:	9901      	ldr	r1, [sp, #4]
 800e2a8:	2230      	movs	r2, #48	; 0x30
 800e2aa:	3701      	adds	r7, #1
 800e2ac:	700a      	strb	r2, [r1, #0]
 800e2ae:	781a      	ldrb	r2, [r3, #0]
 800e2b0:	3201      	adds	r2, #1
 800e2b2:	701a      	strb	r2, [r3, #0]
 800e2b4:	e790      	b.n	800e1d8 <_dtoa_r+0x608>
 800e2b6:	4ba6      	ldr	r3, [pc, #664]	; (800e550 <_dtoa_r+0x980>)
 800e2b8:	2200      	movs	r2, #0
 800e2ba:	f7f2 f9bd 	bl	8000638 <__aeabi_dmul>
 800e2be:	2200      	movs	r2, #0
 800e2c0:	2300      	movs	r3, #0
 800e2c2:	4606      	mov	r6, r0
 800e2c4:	460f      	mov	r7, r1
 800e2c6:	f7f2 fc1f 	bl	8000b08 <__aeabi_dcmpeq>
 800e2ca:	2800      	cmp	r0, #0
 800e2cc:	d09d      	beq.n	800e20a <_dtoa_r+0x63a>
 800e2ce:	e7cf      	b.n	800e270 <_dtoa_r+0x6a0>
 800e2d0:	9a08      	ldr	r2, [sp, #32]
 800e2d2:	2a00      	cmp	r2, #0
 800e2d4:	f000 80d7 	beq.w	800e486 <_dtoa_r+0x8b6>
 800e2d8:	9a06      	ldr	r2, [sp, #24]
 800e2da:	2a01      	cmp	r2, #1
 800e2dc:	f300 80ba 	bgt.w	800e454 <_dtoa_r+0x884>
 800e2e0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800e2e2:	2a00      	cmp	r2, #0
 800e2e4:	f000 80b2 	beq.w	800e44c <_dtoa_r+0x87c>
 800e2e8:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800e2ec:	9e07      	ldr	r6, [sp, #28]
 800e2ee:	9d04      	ldr	r5, [sp, #16]
 800e2f0:	9a04      	ldr	r2, [sp, #16]
 800e2f2:	441a      	add	r2, r3
 800e2f4:	9204      	str	r2, [sp, #16]
 800e2f6:	9a05      	ldr	r2, [sp, #20]
 800e2f8:	2101      	movs	r1, #1
 800e2fa:	441a      	add	r2, r3
 800e2fc:	4620      	mov	r0, r4
 800e2fe:	9205      	str	r2, [sp, #20]
 800e300:	f000 fb66 	bl	800e9d0 <__i2b>
 800e304:	4607      	mov	r7, r0
 800e306:	2d00      	cmp	r5, #0
 800e308:	dd0c      	ble.n	800e324 <_dtoa_r+0x754>
 800e30a:	9b05      	ldr	r3, [sp, #20]
 800e30c:	2b00      	cmp	r3, #0
 800e30e:	dd09      	ble.n	800e324 <_dtoa_r+0x754>
 800e310:	42ab      	cmp	r3, r5
 800e312:	9a04      	ldr	r2, [sp, #16]
 800e314:	bfa8      	it	ge
 800e316:	462b      	movge	r3, r5
 800e318:	1ad2      	subs	r2, r2, r3
 800e31a:	9204      	str	r2, [sp, #16]
 800e31c:	9a05      	ldr	r2, [sp, #20]
 800e31e:	1aed      	subs	r5, r5, r3
 800e320:	1ad3      	subs	r3, r2, r3
 800e322:	9305      	str	r3, [sp, #20]
 800e324:	9b07      	ldr	r3, [sp, #28]
 800e326:	b31b      	cbz	r3, 800e370 <_dtoa_r+0x7a0>
 800e328:	9b08      	ldr	r3, [sp, #32]
 800e32a:	2b00      	cmp	r3, #0
 800e32c:	f000 80af 	beq.w	800e48e <_dtoa_r+0x8be>
 800e330:	2e00      	cmp	r6, #0
 800e332:	dd13      	ble.n	800e35c <_dtoa_r+0x78c>
 800e334:	4639      	mov	r1, r7
 800e336:	4632      	mov	r2, r6
 800e338:	4620      	mov	r0, r4
 800e33a:	f000 fc09 	bl	800eb50 <__pow5mult>
 800e33e:	ee18 2a10 	vmov	r2, s16
 800e342:	4601      	mov	r1, r0
 800e344:	4607      	mov	r7, r0
 800e346:	4620      	mov	r0, r4
 800e348:	f000 fb58 	bl	800e9fc <__multiply>
 800e34c:	ee18 1a10 	vmov	r1, s16
 800e350:	4680      	mov	r8, r0
 800e352:	4620      	mov	r0, r4
 800e354:	f000 fa84 	bl	800e860 <_Bfree>
 800e358:	ee08 8a10 	vmov	s16, r8
 800e35c:	9b07      	ldr	r3, [sp, #28]
 800e35e:	1b9a      	subs	r2, r3, r6
 800e360:	d006      	beq.n	800e370 <_dtoa_r+0x7a0>
 800e362:	ee18 1a10 	vmov	r1, s16
 800e366:	4620      	mov	r0, r4
 800e368:	f000 fbf2 	bl	800eb50 <__pow5mult>
 800e36c:	ee08 0a10 	vmov	s16, r0
 800e370:	2101      	movs	r1, #1
 800e372:	4620      	mov	r0, r4
 800e374:	f000 fb2c 	bl	800e9d0 <__i2b>
 800e378:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e37a:	2b00      	cmp	r3, #0
 800e37c:	4606      	mov	r6, r0
 800e37e:	f340 8088 	ble.w	800e492 <_dtoa_r+0x8c2>
 800e382:	461a      	mov	r2, r3
 800e384:	4601      	mov	r1, r0
 800e386:	4620      	mov	r0, r4
 800e388:	f000 fbe2 	bl	800eb50 <__pow5mult>
 800e38c:	9b06      	ldr	r3, [sp, #24]
 800e38e:	2b01      	cmp	r3, #1
 800e390:	4606      	mov	r6, r0
 800e392:	f340 8081 	ble.w	800e498 <_dtoa_r+0x8c8>
 800e396:	f04f 0800 	mov.w	r8, #0
 800e39a:	6933      	ldr	r3, [r6, #16]
 800e39c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800e3a0:	6918      	ldr	r0, [r3, #16]
 800e3a2:	f000 fac5 	bl	800e930 <__hi0bits>
 800e3a6:	f1c0 0020 	rsb	r0, r0, #32
 800e3aa:	9b05      	ldr	r3, [sp, #20]
 800e3ac:	4418      	add	r0, r3
 800e3ae:	f010 001f 	ands.w	r0, r0, #31
 800e3b2:	f000 8092 	beq.w	800e4da <_dtoa_r+0x90a>
 800e3b6:	f1c0 0320 	rsb	r3, r0, #32
 800e3ba:	2b04      	cmp	r3, #4
 800e3bc:	f340 808a 	ble.w	800e4d4 <_dtoa_r+0x904>
 800e3c0:	f1c0 001c 	rsb	r0, r0, #28
 800e3c4:	9b04      	ldr	r3, [sp, #16]
 800e3c6:	4403      	add	r3, r0
 800e3c8:	9304      	str	r3, [sp, #16]
 800e3ca:	9b05      	ldr	r3, [sp, #20]
 800e3cc:	4403      	add	r3, r0
 800e3ce:	4405      	add	r5, r0
 800e3d0:	9305      	str	r3, [sp, #20]
 800e3d2:	9b04      	ldr	r3, [sp, #16]
 800e3d4:	2b00      	cmp	r3, #0
 800e3d6:	dd07      	ble.n	800e3e8 <_dtoa_r+0x818>
 800e3d8:	ee18 1a10 	vmov	r1, s16
 800e3dc:	461a      	mov	r2, r3
 800e3de:	4620      	mov	r0, r4
 800e3e0:	f000 fc10 	bl	800ec04 <__lshift>
 800e3e4:	ee08 0a10 	vmov	s16, r0
 800e3e8:	9b05      	ldr	r3, [sp, #20]
 800e3ea:	2b00      	cmp	r3, #0
 800e3ec:	dd05      	ble.n	800e3fa <_dtoa_r+0x82a>
 800e3ee:	4631      	mov	r1, r6
 800e3f0:	461a      	mov	r2, r3
 800e3f2:	4620      	mov	r0, r4
 800e3f4:	f000 fc06 	bl	800ec04 <__lshift>
 800e3f8:	4606      	mov	r6, r0
 800e3fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e3fc:	2b00      	cmp	r3, #0
 800e3fe:	d06e      	beq.n	800e4de <_dtoa_r+0x90e>
 800e400:	ee18 0a10 	vmov	r0, s16
 800e404:	4631      	mov	r1, r6
 800e406:	f000 fc6d 	bl	800ece4 <__mcmp>
 800e40a:	2800      	cmp	r0, #0
 800e40c:	da67      	bge.n	800e4de <_dtoa_r+0x90e>
 800e40e:	9b00      	ldr	r3, [sp, #0]
 800e410:	3b01      	subs	r3, #1
 800e412:	ee18 1a10 	vmov	r1, s16
 800e416:	9300      	str	r3, [sp, #0]
 800e418:	220a      	movs	r2, #10
 800e41a:	2300      	movs	r3, #0
 800e41c:	4620      	mov	r0, r4
 800e41e:	f000 fa41 	bl	800e8a4 <__multadd>
 800e422:	9b08      	ldr	r3, [sp, #32]
 800e424:	ee08 0a10 	vmov	s16, r0
 800e428:	2b00      	cmp	r3, #0
 800e42a:	f000 81b1 	beq.w	800e790 <_dtoa_r+0xbc0>
 800e42e:	2300      	movs	r3, #0
 800e430:	4639      	mov	r1, r7
 800e432:	220a      	movs	r2, #10
 800e434:	4620      	mov	r0, r4
 800e436:	f000 fa35 	bl	800e8a4 <__multadd>
 800e43a:	9b02      	ldr	r3, [sp, #8]
 800e43c:	2b00      	cmp	r3, #0
 800e43e:	4607      	mov	r7, r0
 800e440:	f300 808e 	bgt.w	800e560 <_dtoa_r+0x990>
 800e444:	9b06      	ldr	r3, [sp, #24]
 800e446:	2b02      	cmp	r3, #2
 800e448:	dc51      	bgt.n	800e4ee <_dtoa_r+0x91e>
 800e44a:	e089      	b.n	800e560 <_dtoa_r+0x990>
 800e44c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e44e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800e452:	e74b      	b.n	800e2ec <_dtoa_r+0x71c>
 800e454:	9b03      	ldr	r3, [sp, #12]
 800e456:	1e5e      	subs	r6, r3, #1
 800e458:	9b07      	ldr	r3, [sp, #28]
 800e45a:	42b3      	cmp	r3, r6
 800e45c:	bfbf      	itttt	lt
 800e45e:	9b07      	ldrlt	r3, [sp, #28]
 800e460:	9607      	strlt	r6, [sp, #28]
 800e462:	1af2      	sublt	r2, r6, r3
 800e464:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800e466:	bfb6      	itet	lt
 800e468:	189b      	addlt	r3, r3, r2
 800e46a:	1b9e      	subge	r6, r3, r6
 800e46c:	930a      	strlt	r3, [sp, #40]	; 0x28
 800e46e:	9b03      	ldr	r3, [sp, #12]
 800e470:	bfb8      	it	lt
 800e472:	2600      	movlt	r6, #0
 800e474:	2b00      	cmp	r3, #0
 800e476:	bfb7      	itett	lt
 800e478:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 800e47c:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 800e480:	1a9d      	sublt	r5, r3, r2
 800e482:	2300      	movlt	r3, #0
 800e484:	e734      	b.n	800e2f0 <_dtoa_r+0x720>
 800e486:	9e07      	ldr	r6, [sp, #28]
 800e488:	9d04      	ldr	r5, [sp, #16]
 800e48a:	9f08      	ldr	r7, [sp, #32]
 800e48c:	e73b      	b.n	800e306 <_dtoa_r+0x736>
 800e48e:	9a07      	ldr	r2, [sp, #28]
 800e490:	e767      	b.n	800e362 <_dtoa_r+0x792>
 800e492:	9b06      	ldr	r3, [sp, #24]
 800e494:	2b01      	cmp	r3, #1
 800e496:	dc18      	bgt.n	800e4ca <_dtoa_r+0x8fa>
 800e498:	f1ba 0f00 	cmp.w	sl, #0
 800e49c:	d115      	bne.n	800e4ca <_dtoa_r+0x8fa>
 800e49e:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800e4a2:	b993      	cbnz	r3, 800e4ca <_dtoa_r+0x8fa>
 800e4a4:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800e4a8:	0d1b      	lsrs	r3, r3, #20
 800e4aa:	051b      	lsls	r3, r3, #20
 800e4ac:	b183      	cbz	r3, 800e4d0 <_dtoa_r+0x900>
 800e4ae:	9b04      	ldr	r3, [sp, #16]
 800e4b0:	3301      	adds	r3, #1
 800e4b2:	9304      	str	r3, [sp, #16]
 800e4b4:	9b05      	ldr	r3, [sp, #20]
 800e4b6:	3301      	adds	r3, #1
 800e4b8:	9305      	str	r3, [sp, #20]
 800e4ba:	f04f 0801 	mov.w	r8, #1
 800e4be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e4c0:	2b00      	cmp	r3, #0
 800e4c2:	f47f af6a 	bne.w	800e39a <_dtoa_r+0x7ca>
 800e4c6:	2001      	movs	r0, #1
 800e4c8:	e76f      	b.n	800e3aa <_dtoa_r+0x7da>
 800e4ca:	f04f 0800 	mov.w	r8, #0
 800e4ce:	e7f6      	b.n	800e4be <_dtoa_r+0x8ee>
 800e4d0:	4698      	mov	r8, r3
 800e4d2:	e7f4      	b.n	800e4be <_dtoa_r+0x8ee>
 800e4d4:	f43f af7d 	beq.w	800e3d2 <_dtoa_r+0x802>
 800e4d8:	4618      	mov	r0, r3
 800e4da:	301c      	adds	r0, #28
 800e4dc:	e772      	b.n	800e3c4 <_dtoa_r+0x7f4>
 800e4de:	9b03      	ldr	r3, [sp, #12]
 800e4e0:	2b00      	cmp	r3, #0
 800e4e2:	dc37      	bgt.n	800e554 <_dtoa_r+0x984>
 800e4e4:	9b06      	ldr	r3, [sp, #24]
 800e4e6:	2b02      	cmp	r3, #2
 800e4e8:	dd34      	ble.n	800e554 <_dtoa_r+0x984>
 800e4ea:	9b03      	ldr	r3, [sp, #12]
 800e4ec:	9302      	str	r3, [sp, #8]
 800e4ee:	9b02      	ldr	r3, [sp, #8]
 800e4f0:	b96b      	cbnz	r3, 800e50e <_dtoa_r+0x93e>
 800e4f2:	4631      	mov	r1, r6
 800e4f4:	2205      	movs	r2, #5
 800e4f6:	4620      	mov	r0, r4
 800e4f8:	f000 f9d4 	bl	800e8a4 <__multadd>
 800e4fc:	4601      	mov	r1, r0
 800e4fe:	4606      	mov	r6, r0
 800e500:	ee18 0a10 	vmov	r0, s16
 800e504:	f000 fbee 	bl	800ece4 <__mcmp>
 800e508:	2800      	cmp	r0, #0
 800e50a:	f73f adbb 	bgt.w	800e084 <_dtoa_r+0x4b4>
 800e50e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e510:	9d01      	ldr	r5, [sp, #4]
 800e512:	43db      	mvns	r3, r3
 800e514:	9300      	str	r3, [sp, #0]
 800e516:	f04f 0800 	mov.w	r8, #0
 800e51a:	4631      	mov	r1, r6
 800e51c:	4620      	mov	r0, r4
 800e51e:	f000 f99f 	bl	800e860 <_Bfree>
 800e522:	2f00      	cmp	r7, #0
 800e524:	f43f aea4 	beq.w	800e270 <_dtoa_r+0x6a0>
 800e528:	f1b8 0f00 	cmp.w	r8, #0
 800e52c:	d005      	beq.n	800e53a <_dtoa_r+0x96a>
 800e52e:	45b8      	cmp	r8, r7
 800e530:	d003      	beq.n	800e53a <_dtoa_r+0x96a>
 800e532:	4641      	mov	r1, r8
 800e534:	4620      	mov	r0, r4
 800e536:	f000 f993 	bl	800e860 <_Bfree>
 800e53a:	4639      	mov	r1, r7
 800e53c:	4620      	mov	r0, r4
 800e53e:	f000 f98f 	bl	800e860 <_Bfree>
 800e542:	e695      	b.n	800e270 <_dtoa_r+0x6a0>
 800e544:	2600      	movs	r6, #0
 800e546:	4637      	mov	r7, r6
 800e548:	e7e1      	b.n	800e50e <_dtoa_r+0x93e>
 800e54a:	9700      	str	r7, [sp, #0]
 800e54c:	4637      	mov	r7, r6
 800e54e:	e599      	b.n	800e084 <_dtoa_r+0x4b4>
 800e550:	40240000 	.word	0x40240000
 800e554:	9b08      	ldr	r3, [sp, #32]
 800e556:	2b00      	cmp	r3, #0
 800e558:	f000 80ca 	beq.w	800e6f0 <_dtoa_r+0xb20>
 800e55c:	9b03      	ldr	r3, [sp, #12]
 800e55e:	9302      	str	r3, [sp, #8]
 800e560:	2d00      	cmp	r5, #0
 800e562:	dd05      	ble.n	800e570 <_dtoa_r+0x9a0>
 800e564:	4639      	mov	r1, r7
 800e566:	462a      	mov	r2, r5
 800e568:	4620      	mov	r0, r4
 800e56a:	f000 fb4b 	bl	800ec04 <__lshift>
 800e56e:	4607      	mov	r7, r0
 800e570:	f1b8 0f00 	cmp.w	r8, #0
 800e574:	d05b      	beq.n	800e62e <_dtoa_r+0xa5e>
 800e576:	6879      	ldr	r1, [r7, #4]
 800e578:	4620      	mov	r0, r4
 800e57a:	f000 f931 	bl	800e7e0 <_Balloc>
 800e57e:	4605      	mov	r5, r0
 800e580:	b928      	cbnz	r0, 800e58e <_dtoa_r+0x9be>
 800e582:	4b87      	ldr	r3, [pc, #540]	; (800e7a0 <_dtoa_r+0xbd0>)
 800e584:	4602      	mov	r2, r0
 800e586:	f240 21ea 	movw	r1, #746	; 0x2ea
 800e58a:	f7ff bb3b 	b.w	800dc04 <_dtoa_r+0x34>
 800e58e:	693a      	ldr	r2, [r7, #16]
 800e590:	3202      	adds	r2, #2
 800e592:	0092      	lsls	r2, r2, #2
 800e594:	f107 010c 	add.w	r1, r7, #12
 800e598:	300c      	adds	r0, #12
 800e59a:	f000 f913 	bl	800e7c4 <memcpy>
 800e59e:	2201      	movs	r2, #1
 800e5a0:	4629      	mov	r1, r5
 800e5a2:	4620      	mov	r0, r4
 800e5a4:	f000 fb2e 	bl	800ec04 <__lshift>
 800e5a8:	9b01      	ldr	r3, [sp, #4]
 800e5aa:	f103 0901 	add.w	r9, r3, #1
 800e5ae:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800e5b2:	4413      	add	r3, r2
 800e5b4:	9305      	str	r3, [sp, #20]
 800e5b6:	f00a 0301 	and.w	r3, sl, #1
 800e5ba:	46b8      	mov	r8, r7
 800e5bc:	9304      	str	r3, [sp, #16]
 800e5be:	4607      	mov	r7, r0
 800e5c0:	4631      	mov	r1, r6
 800e5c2:	ee18 0a10 	vmov	r0, s16
 800e5c6:	f7ff fa77 	bl	800dab8 <quorem>
 800e5ca:	4641      	mov	r1, r8
 800e5cc:	9002      	str	r0, [sp, #8]
 800e5ce:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800e5d2:	ee18 0a10 	vmov	r0, s16
 800e5d6:	f000 fb85 	bl	800ece4 <__mcmp>
 800e5da:	463a      	mov	r2, r7
 800e5dc:	9003      	str	r0, [sp, #12]
 800e5de:	4631      	mov	r1, r6
 800e5e0:	4620      	mov	r0, r4
 800e5e2:	f000 fb9b 	bl	800ed1c <__mdiff>
 800e5e6:	68c2      	ldr	r2, [r0, #12]
 800e5e8:	f109 3bff 	add.w	fp, r9, #4294967295
 800e5ec:	4605      	mov	r5, r0
 800e5ee:	bb02      	cbnz	r2, 800e632 <_dtoa_r+0xa62>
 800e5f0:	4601      	mov	r1, r0
 800e5f2:	ee18 0a10 	vmov	r0, s16
 800e5f6:	f000 fb75 	bl	800ece4 <__mcmp>
 800e5fa:	4602      	mov	r2, r0
 800e5fc:	4629      	mov	r1, r5
 800e5fe:	4620      	mov	r0, r4
 800e600:	9207      	str	r2, [sp, #28]
 800e602:	f000 f92d 	bl	800e860 <_Bfree>
 800e606:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800e60a:	ea43 0102 	orr.w	r1, r3, r2
 800e60e:	9b04      	ldr	r3, [sp, #16]
 800e610:	430b      	orrs	r3, r1
 800e612:	464d      	mov	r5, r9
 800e614:	d10f      	bne.n	800e636 <_dtoa_r+0xa66>
 800e616:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800e61a:	d02a      	beq.n	800e672 <_dtoa_r+0xaa2>
 800e61c:	9b03      	ldr	r3, [sp, #12]
 800e61e:	2b00      	cmp	r3, #0
 800e620:	dd02      	ble.n	800e628 <_dtoa_r+0xa58>
 800e622:	9b02      	ldr	r3, [sp, #8]
 800e624:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 800e628:	f88b a000 	strb.w	sl, [fp]
 800e62c:	e775      	b.n	800e51a <_dtoa_r+0x94a>
 800e62e:	4638      	mov	r0, r7
 800e630:	e7ba      	b.n	800e5a8 <_dtoa_r+0x9d8>
 800e632:	2201      	movs	r2, #1
 800e634:	e7e2      	b.n	800e5fc <_dtoa_r+0xa2c>
 800e636:	9b03      	ldr	r3, [sp, #12]
 800e638:	2b00      	cmp	r3, #0
 800e63a:	db04      	blt.n	800e646 <_dtoa_r+0xa76>
 800e63c:	9906      	ldr	r1, [sp, #24]
 800e63e:	430b      	orrs	r3, r1
 800e640:	9904      	ldr	r1, [sp, #16]
 800e642:	430b      	orrs	r3, r1
 800e644:	d122      	bne.n	800e68c <_dtoa_r+0xabc>
 800e646:	2a00      	cmp	r2, #0
 800e648:	ddee      	ble.n	800e628 <_dtoa_r+0xa58>
 800e64a:	ee18 1a10 	vmov	r1, s16
 800e64e:	2201      	movs	r2, #1
 800e650:	4620      	mov	r0, r4
 800e652:	f000 fad7 	bl	800ec04 <__lshift>
 800e656:	4631      	mov	r1, r6
 800e658:	ee08 0a10 	vmov	s16, r0
 800e65c:	f000 fb42 	bl	800ece4 <__mcmp>
 800e660:	2800      	cmp	r0, #0
 800e662:	dc03      	bgt.n	800e66c <_dtoa_r+0xa9c>
 800e664:	d1e0      	bne.n	800e628 <_dtoa_r+0xa58>
 800e666:	f01a 0f01 	tst.w	sl, #1
 800e66a:	d0dd      	beq.n	800e628 <_dtoa_r+0xa58>
 800e66c:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800e670:	d1d7      	bne.n	800e622 <_dtoa_r+0xa52>
 800e672:	2339      	movs	r3, #57	; 0x39
 800e674:	f88b 3000 	strb.w	r3, [fp]
 800e678:	462b      	mov	r3, r5
 800e67a:	461d      	mov	r5, r3
 800e67c:	3b01      	subs	r3, #1
 800e67e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800e682:	2a39      	cmp	r2, #57	; 0x39
 800e684:	d071      	beq.n	800e76a <_dtoa_r+0xb9a>
 800e686:	3201      	adds	r2, #1
 800e688:	701a      	strb	r2, [r3, #0]
 800e68a:	e746      	b.n	800e51a <_dtoa_r+0x94a>
 800e68c:	2a00      	cmp	r2, #0
 800e68e:	dd07      	ble.n	800e6a0 <_dtoa_r+0xad0>
 800e690:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800e694:	d0ed      	beq.n	800e672 <_dtoa_r+0xaa2>
 800e696:	f10a 0301 	add.w	r3, sl, #1
 800e69a:	f88b 3000 	strb.w	r3, [fp]
 800e69e:	e73c      	b.n	800e51a <_dtoa_r+0x94a>
 800e6a0:	9b05      	ldr	r3, [sp, #20]
 800e6a2:	f809 ac01 	strb.w	sl, [r9, #-1]
 800e6a6:	4599      	cmp	r9, r3
 800e6a8:	d047      	beq.n	800e73a <_dtoa_r+0xb6a>
 800e6aa:	ee18 1a10 	vmov	r1, s16
 800e6ae:	2300      	movs	r3, #0
 800e6b0:	220a      	movs	r2, #10
 800e6b2:	4620      	mov	r0, r4
 800e6b4:	f000 f8f6 	bl	800e8a4 <__multadd>
 800e6b8:	45b8      	cmp	r8, r7
 800e6ba:	ee08 0a10 	vmov	s16, r0
 800e6be:	f04f 0300 	mov.w	r3, #0
 800e6c2:	f04f 020a 	mov.w	r2, #10
 800e6c6:	4641      	mov	r1, r8
 800e6c8:	4620      	mov	r0, r4
 800e6ca:	d106      	bne.n	800e6da <_dtoa_r+0xb0a>
 800e6cc:	f000 f8ea 	bl	800e8a4 <__multadd>
 800e6d0:	4680      	mov	r8, r0
 800e6d2:	4607      	mov	r7, r0
 800e6d4:	f109 0901 	add.w	r9, r9, #1
 800e6d8:	e772      	b.n	800e5c0 <_dtoa_r+0x9f0>
 800e6da:	f000 f8e3 	bl	800e8a4 <__multadd>
 800e6de:	4639      	mov	r1, r7
 800e6e0:	4680      	mov	r8, r0
 800e6e2:	2300      	movs	r3, #0
 800e6e4:	220a      	movs	r2, #10
 800e6e6:	4620      	mov	r0, r4
 800e6e8:	f000 f8dc 	bl	800e8a4 <__multadd>
 800e6ec:	4607      	mov	r7, r0
 800e6ee:	e7f1      	b.n	800e6d4 <_dtoa_r+0xb04>
 800e6f0:	9b03      	ldr	r3, [sp, #12]
 800e6f2:	9302      	str	r3, [sp, #8]
 800e6f4:	9d01      	ldr	r5, [sp, #4]
 800e6f6:	ee18 0a10 	vmov	r0, s16
 800e6fa:	4631      	mov	r1, r6
 800e6fc:	f7ff f9dc 	bl	800dab8 <quorem>
 800e700:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800e704:	9b01      	ldr	r3, [sp, #4]
 800e706:	f805 ab01 	strb.w	sl, [r5], #1
 800e70a:	1aea      	subs	r2, r5, r3
 800e70c:	9b02      	ldr	r3, [sp, #8]
 800e70e:	4293      	cmp	r3, r2
 800e710:	dd09      	ble.n	800e726 <_dtoa_r+0xb56>
 800e712:	ee18 1a10 	vmov	r1, s16
 800e716:	2300      	movs	r3, #0
 800e718:	220a      	movs	r2, #10
 800e71a:	4620      	mov	r0, r4
 800e71c:	f000 f8c2 	bl	800e8a4 <__multadd>
 800e720:	ee08 0a10 	vmov	s16, r0
 800e724:	e7e7      	b.n	800e6f6 <_dtoa_r+0xb26>
 800e726:	9b02      	ldr	r3, [sp, #8]
 800e728:	2b00      	cmp	r3, #0
 800e72a:	bfc8      	it	gt
 800e72c:	461d      	movgt	r5, r3
 800e72e:	9b01      	ldr	r3, [sp, #4]
 800e730:	bfd8      	it	le
 800e732:	2501      	movle	r5, #1
 800e734:	441d      	add	r5, r3
 800e736:	f04f 0800 	mov.w	r8, #0
 800e73a:	ee18 1a10 	vmov	r1, s16
 800e73e:	2201      	movs	r2, #1
 800e740:	4620      	mov	r0, r4
 800e742:	f000 fa5f 	bl	800ec04 <__lshift>
 800e746:	4631      	mov	r1, r6
 800e748:	ee08 0a10 	vmov	s16, r0
 800e74c:	f000 faca 	bl	800ece4 <__mcmp>
 800e750:	2800      	cmp	r0, #0
 800e752:	dc91      	bgt.n	800e678 <_dtoa_r+0xaa8>
 800e754:	d102      	bne.n	800e75c <_dtoa_r+0xb8c>
 800e756:	f01a 0f01 	tst.w	sl, #1
 800e75a:	d18d      	bne.n	800e678 <_dtoa_r+0xaa8>
 800e75c:	462b      	mov	r3, r5
 800e75e:	461d      	mov	r5, r3
 800e760:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800e764:	2a30      	cmp	r2, #48	; 0x30
 800e766:	d0fa      	beq.n	800e75e <_dtoa_r+0xb8e>
 800e768:	e6d7      	b.n	800e51a <_dtoa_r+0x94a>
 800e76a:	9a01      	ldr	r2, [sp, #4]
 800e76c:	429a      	cmp	r2, r3
 800e76e:	d184      	bne.n	800e67a <_dtoa_r+0xaaa>
 800e770:	9b00      	ldr	r3, [sp, #0]
 800e772:	3301      	adds	r3, #1
 800e774:	9300      	str	r3, [sp, #0]
 800e776:	2331      	movs	r3, #49	; 0x31
 800e778:	7013      	strb	r3, [r2, #0]
 800e77a:	e6ce      	b.n	800e51a <_dtoa_r+0x94a>
 800e77c:	4b09      	ldr	r3, [pc, #36]	; (800e7a4 <_dtoa_r+0xbd4>)
 800e77e:	f7ff ba95 	b.w	800dcac <_dtoa_r+0xdc>
 800e782:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e784:	2b00      	cmp	r3, #0
 800e786:	f47f aa6e 	bne.w	800dc66 <_dtoa_r+0x96>
 800e78a:	4b07      	ldr	r3, [pc, #28]	; (800e7a8 <_dtoa_r+0xbd8>)
 800e78c:	f7ff ba8e 	b.w	800dcac <_dtoa_r+0xdc>
 800e790:	9b02      	ldr	r3, [sp, #8]
 800e792:	2b00      	cmp	r3, #0
 800e794:	dcae      	bgt.n	800e6f4 <_dtoa_r+0xb24>
 800e796:	9b06      	ldr	r3, [sp, #24]
 800e798:	2b02      	cmp	r3, #2
 800e79a:	f73f aea8 	bgt.w	800e4ee <_dtoa_r+0x91e>
 800e79e:	e7a9      	b.n	800e6f4 <_dtoa_r+0xb24>
 800e7a0:	0801163b 	.word	0x0801163b
 800e7a4:	08011598 	.word	0x08011598
 800e7a8:	080115bc 	.word	0x080115bc

0800e7ac <_localeconv_r>:
 800e7ac:	4800      	ldr	r0, [pc, #0]	; (800e7b0 <_localeconv_r+0x4>)
 800e7ae:	4770      	bx	lr
 800e7b0:	20000294 	.word	0x20000294

0800e7b4 <malloc>:
 800e7b4:	4b02      	ldr	r3, [pc, #8]	; (800e7c0 <malloc+0xc>)
 800e7b6:	4601      	mov	r1, r0
 800e7b8:	6818      	ldr	r0, [r3, #0]
 800e7ba:	f000 bc17 	b.w	800efec <_malloc_r>
 800e7be:	bf00      	nop
 800e7c0:	20000140 	.word	0x20000140

0800e7c4 <memcpy>:
 800e7c4:	440a      	add	r2, r1
 800e7c6:	4291      	cmp	r1, r2
 800e7c8:	f100 33ff 	add.w	r3, r0, #4294967295
 800e7cc:	d100      	bne.n	800e7d0 <memcpy+0xc>
 800e7ce:	4770      	bx	lr
 800e7d0:	b510      	push	{r4, lr}
 800e7d2:	f811 4b01 	ldrb.w	r4, [r1], #1
 800e7d6:	f803 4f01 	strb.w	r4, [r3, #1]!
 800e7da:	4291      	cmp	r1, r2
 800e7dc:	d1f9      	bne.n	800e7d2 <memcpy+0xe>
 800e7de:	bd10      	pop	{r4, pc}

0800e7e0 <_Balloc>:
 800e7e0:	b570      	push	{r4, r5, r6, lr}
 800e7e2:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800e7e4:	4604      	mov	r4, r0
 800e7e6:	460d      	mov	r5, r1
 800e7e8:	b976      	cbnz	r6, 800e808 <_Balloc+0x28>
 800e7ea:	2010      	movs	r0, #16
 800e7ec:	f7ff ffe2 	bl	800e7b4 <malloc>
 800e7f0:	4602      	mov	r2, r0
 800e7f2:	6260      	str	r0, [r4, #36]	; 0x24
 800e7f4:	b920      	cbnz	r0, 800e800 <_Balloc+0x20>
 800e7f6:	4b18      	ldr	r3, [pc, #96]	; (800e858 <_Balloc+0x78>)
 800e7f8:	4818      	ldr	r0, [pc, #96]	; (800e85c <_Balloc+0x7c>)
 800e7fa:	2166      	movs	r1, #102	; 0x66
 800e7fc:	f000 fdd6 	bl	800f3ac <__assert_func>
 800e800:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800e804:	6006      	str	r6, [r0, #0]
 800e806:	60c6      	str	r6, [r0, #12]
 800e808:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800e80a:	68f3      	ldr	r3, [r6, #12]
 800e80c:	b183      	cbz	r3, 800e830 <_Balloc+0x50>
 800e80e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e810:	68db      	ldr	r3, [r3, #12]
 800e812:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800e816:	b9b8      	cbnz	r0, 800e848 <_Balloc+0x68>
 800e818:	2101      	movs	r1, #1
 800e81a:	fa01 f605 	lsl.w	r6, r1, r5
 800e81e:	1d72      	adds	r2, r6, #5
 800e820:	0092      	lsls	r2, r2, #2
 800e822:	4620      	mov	r0, r4
 800e824:	f000 fb60 	bl	800eee8 <_calloc_r>
 800e828:	b160      	cbz	r0, 800e844 <_Balloc+0x64>
 800e82a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800e82e:	e00e      	b.n	800e84e <_Balloc+0x6e>
 800e830:	2221      	movs	r2, #33	; 0x21
 800e832:	2104      	movs	r1, #4
 800e834:	4620      	mov	r0, r4
 800e836:	f000 fb57 	bl	800eee8 <_calloc_r>
 800e83a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e83c:	60f0      	str	r0, [r6, #12]
 800e83e:	68db      	ldr	r3, [r3, #12]
 800e840:	2b00      	cmp	r3, #0
 800e842:	d1e4      	bne.n	800e80e <_Balloc+0x2e>
 800e844:	2000      	movs	r0, #0
 800e846:	bd70      	pop	{r4, r5, r6, pc}
 800e848:	6802      	ldr	r2, [r0, #0]
 800e84a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800e84e:	2300      	movs	r3, #0
 800e850:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800e854:	e7f7      	b.n	800e846 <_Balloc+0x66>
 800e856:	bf00      	nop
 800e858:	080115c9 	.word	0x080115c9
 800e85c:	0801164c 	.word	0x0801164c

0800e860 <_Bfree>:
 800e860:	b570      	push	{r4, r5, r6, lr}
 800e862:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800e864:	4605      	mov	r5, r0
 800e866:	460c      	mov	r4, r1
 800e868:	b976      	cbnz	r6, 800e888 <_Bfree+0x28>
 800e86a:	2010      	movs	r0, #16
 800e86c:	f7ff ffa2 	bl	800e7b4 <malloc>
 800e870:	4602      	mov	r2, r0
 800e872:	6268      	str	r0, [r5, #36]	; 0x24
 800e874:	b920      	cbnz	r0, 800e880 <_Bfree+0x20>
 800e876:	4b09      	ldr	r3, [pc, #36]	; (800e89c <_Bfree+0x3c>)
 800e878:	4809      	ldr	r0, [pc, #36]	; (800e8a0 <_Bfree+0x40>)
 800e87a:	218a      	movs	r1, #138	; 0x8a
 800e87c:	f000 fd96 	bl	800f3ac <__assert_func>
 800e880:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800e884:	6006      	str	r6, [r0, #0]
 800e886:	60c6      	str	r6, [r0, #12]
 800e888:	b13c      	cbz	r4, 800e89a <_Bfree+0x3a>
 800e88a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800e88c:	6862      	ldr	r2, [r4, #4]
 800e88e:	68db      	ldr	r3, [r3, #12]
 800e890:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800e894:	6021      	str	r1, [r4, #0]
 800e896:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800e89a:	bd70      	pop	{r4, r5, r6, pc}
 800e89c:	080115c9 	.word	0x080115c9
 800e8a0:	0801164c 	.word	0x0801164c

0800e8a4 <__multadd>:
 800e8a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e8a8:	690d      	ldr	r5, [r1, #16]
 800e8aa:	4607      	mov	r7, r0
 800e8ac:	460c      	mov	r4, r1
 800e8ae:	461e      	mov	r6, r3
 800e8b0:	f101 0c14 	add.w	ip, r1, #20
 800e8b4:	2000      	movs	r0, #0
 800e8b6:	f8dc 3000 	ldr.w	r3, [ip]
 800e8ba:	b299      	uxth	r1, r3
 800e8bc:	fb02 6101 	mla	r1, r2, r1, r6
 800e8c0:	0c1e      	lsrs	r6, r3, #16
 800e8c2:	0c0b      	lsrs	r3, r1, #16
 800e8c4:	fb02 3306 	mla	r3, r2, r6, r3
 800e8c8:	b289      	uxth	r1, r1
 800e8ca:	3001      	adds	r0, #1
 800e8cc:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800e8d0:	4285      	cmp	r5, r0
 800e8d2:	f84c 1b04 	str.w	r1, [ip], #4
 800e8d6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800e8da:	dcec      	bgt.n	800e8b6 <__multadd+0x12>
 800e8dc:	b30e      	cbz	r6, 800e922 <__multadd+0x7e>
 800e8de:	68a3      	ldr	r3, [r4, #8]
 800e8e0:	42ab      	cmp	r3, r5
 800e8e2:	dc19      	bgt.n	800e918 <__multadd+0x74>
 800e8e4:	6861      	ldr	r1, [r4, #4]
 800e8e6:	4638      	mov	r0, r7
 800e8e8:	3101      	adds	r1, #1
 800e8ea:	f7ff ff79 	bl	800e7e0 <_Balloc>
 800e8ee:	4680      	mov	r8, r0
 800e8f0:	b928      	cbnz	r0, 800e8fe <__multadd+0x5a>
 800e8f2:	4602      	mov	r2, r0
 800e8f4:	4b0c      	ldr	r3, [pc, #48]	; (800e928 <__multadd+0x84>)
 800e8f6:	480d      	ldr	r0, [pc, #52]	; (800e92c <__multadd+0x88>)
 800e8f8:	21b5      	movs	r1, #181	; 0xb5
 800e8fa:	f000 fd57 	bl	800f3ac <__assert_func>
 800e8fe:	6922      	ldr	r2, [r4, #16]
 800e900:	3202      	adds	r2, #2
 800e902:	f104 010c 	add.w	r1, r4, #12
 800e906:	0092      	lsls	r2, r2, #2
 800e908:	300c      	adds	r0, #12
 800e90a:	f7ff ff5b 	bl	800e7c4 <memcpy>
 800e90e:	4621      	mov	r1, r4
 800e910:	4638      	mov	r0, r7
 800e912:	f7ff ffa5 	bl	800e860 <_Bfree>
 800e916:	4644      	mov	r4, r8
 800e918:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800e91c:	3501      	adds	r5, #1
 800e91e:	615e      	str	r6, [r3, #20]
 800e920:	6125      	str	r5, [r4, #16]
 800e922:	4620      	mov	r0, r4
 800e924:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e928:	0801163b 	.word	0x0801163b
 800e92c:	0801164c 	.word	0x0801164c

0800e930 <__hi0bits>:
 800e930:	0c03      	lsrs	r3, r0, #16
 800e932:	041b      	lsls	r3, r3, #16
 800e934:	b9d3      	cbnz	r3, 800e96c <__hi0bits+0x3c>
 800e936:	0400      	lsls	r0, r0, #16
 800e938:	2310      	movs	r3, #16
 800e93a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800e93e:	bf04      	itt	eq
 800e940:	0200      	lsleq	r0, r0, #8
 800e942:	3308      	addeq	r3, #8
 800e944:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800e948:	bf04      	itt	eq
 800e94a:	0100      	lsleq	r0, r0, #4
 800e94c:	3304      	addeq	r3, #4
 800e94e:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800e952:	bf04      	itt	eq
 800e954:	0080      	lsleq	r0, r0, #2
 800e956:	3302      	addeq	r3, #2
 800e958:	2800      	cmp	r0, #0
 800e95a:	db05      	blt.n	800e968 <__hi0bits+0x38>
 800e95c:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800e960:	f103 0301 	add.w	r3, r3, #1
 800e964:	bf08      	it	eq
 800e966:	2320      	moveq	r3, #32
 800e968:	4618      	mov	r0, r3
 800e96a:	4770      	bx	lr
 800e96c:	2300      	movs	r3, #0
 800e96e:	e7e4      	b.n	800e93a <__hi0bits+0xa>

0800e970 <__lo0bits>:
 800e970:	6803      	ldr	r3, [r0, #0]
 800e972:	f013 0207 	ands.w	r2, r3, #7
 800e976:	4601      	mov	r1, r0
 800e978:	d00b      	beq.n	800e992 <__lo0bits+0x22>
 800e97a:	07da      	lsls	r2, r3, #31
 800e97c:	d423      	bmi.n	800e9c6 <__lo0bits+0x56>
 800e97e:	0798      	lsls	r0, r3, #30
 800e980:	bf49      	itett	mi
 800e982:	085b      	lsrmi	r3, r3, #1
 800e984:	089b      	lsrpl	r3, r3, #2
 800e986:	2001      	movmi	r0, #1
 800e988:	600b      	strmi	r3, [r1, #0]
 800e98a:	bf5c      	itt	pl
 800e98c:	600b      	strpl	r3, [r1, #0]
 800e98e:	2002      	movpl	r0, #2
 800e990:	4770      	bx	lr
 800e992:	b298      	uxth	r0, r3
 800e994:	b9a8      	cbnz	r0, 800e9c2 <__lo0bits+0x52>
 800e996:	0c1b      	lsrs	r3, r3, #16
 800e998:	2010      	movs	r0, #16
 800e99a:	b2da      	uxtb	r2, r3
 800e99c:	b90a      	cbnz	r2, 800e9a2 <__lo0bits+0x32>
 800e99e:	3008      	adds	r0, #8
 800e9a0:	0a1b      	lsrs	r3, r3, #8
 800e9a2:	071a      	lsls	r2, r3, #28
 800e9a4:	bf04      	itt	eq
 800e9a6:	091b      	lsreq	r3, r3, #4
 800e9a8:	3004      	addeq	r0, #4
 800e9aa:	079a      	lsls	r2, r3, #30
 800e9ac:	bf04      	itt	eq
 800e9ae:	089b      	lsreq	r3, r3, #2
 800e9b0:	3002      	addeq	r0, #2
 800e9b2:	07da      	lsls	r2, r3, #31
 800e9b4:	d403      	bmi.n	800e9be <__lo0bits+0x4e>
 800e9b6:	085b      	lsrs	r3, r3, #1
 800e9b8:	f100 0001 	add.w	r0, r0, #1
 800e9bc:	d005      	beq.n	800e9ca <__lo0bits+0x5a>
 800e9be:	600b      	str	r3, [r1, #0]
 800e9c0:	4770      	bx	lr
 800e9c2:	4610      	mov	r0, r2
 800e9c4:	e7e9      	b.n	800e99a <__lo0bits+0x2a>
 800e9c6:	2000      	movs	r0, #0
 800e9c8:	4770      	bx	lr
 800e9ca:	2020      	movs	r0, #32
 800e9cc:	4770      	bx	lr
	...

0800e9d0 <__i2b>:
 800e9d0:	b510      	push	{r4, lr}
 800e9d2:	460c      	mov	r4, r1
 800e9d4:	2101      	movs	r1, #1
 800e9d6:	f7ff ff03 	bl	800e7e0 <_Balloc>
 800e9da:	4602      	mov	r2, r0
 800e9dc:	b928      	cbnz	r0, 800e9ea <__i2b+0x1a>
 800e9de:	4b05      	ldr	r3, [pc, #20]	; (800e9f4 <__i2b+0x24>)
 800e9e0:	4805      	ldr	r0, [pc, #20]	; (800e9f8 <__i2b+0x28>)
 800e9e2:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800e9e6:	f000 fce1 	bl	800f3ac <__assert_func>
 800e9ea:	2301      	movs	r3, #1
 800e9ec:	6144      	str	r4, [r0, #20]
 800e9ee:	6103      	str	r3, [r0, #16]
 800e9f0:	bd10      	pop	{r4, pc}
 800e9f2:	bf00      	nop
 800e9f4:	0801163b 	.word	0x0801163b
 800e9f8:	0801164c 	.word	0x0801164c

0800e9fc <__multiply>:
 800e9fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ea00:	4691      	mov	r9, r2
 800ea02:	690a      	ldr	r2, [r1, #16]
 800ea04:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800ea08:	429a      	cmp	r2, r3
 800ea0a:	bfb8      	it	lt
 800ea0c:	460b      	movlt	r3, r1
 800ea0e:	460c      	mov	r4, r1
 800ea10:	bfbc      	itt	lt
 800ea12:	464c      	movlt	r4, r9
 800ea14:	4699      	movlt	r9, r3
 800ea16:	6927      	ldr	r7, [r4, #16]
 800ea18:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800ea1c:	68a3      	ldr	r3, [r4, #8]
 800ea1e:	6861      	ldr	r1, [r4, #4]
 800ea20:	eb07 060a 	add.w	r6, r7, sl
 800ea24:	42b3      	cmp	r3, r6
 800ea26:	b085      	sub	sp, #20
 800ea28:	bfb8      	it	lt
 800ea2a:	3101      	addlt	r1, #1
 800ea2c:	f7ff fed8 	bl	800e7e0 <_Balloc>
 800ea30:	b930      	cbnz	r0, 800ea40 <__multiply+0x44>
 800ea32:	4602      	mov	r2, r0
 800ea34:	4b44      	ldr	r3, [pc, #272]	; (800eb48 <__multiply+0x14c>)
 800ea36:	4845      	ldr	r0, [pc, #276]	; (800eb4c <__multiply+0x150>)
 800ea38:	f240 115d 	movw	r1, #349	; 0x15d
 800ea3c:	f000 fcb6 	bl	800f3ac <__assert_func>
 800ea40:	f100 0514 	add.w	r5, r0, #20
 800ea44:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800ea48:	462b      	mov	r3, r5
 800ea4a:	2200      	movs	r2, #0
 800ea4c:	4543      	cmp	r3, r8
 800ea4e:	d321      	bcc.n	800ea94 <__multiply+0x98>
 800ea50:	f104 0314 	add.w	r3, r4, #20
 800ea54:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800ea58:	f109 0314 	add.w	r3, r9, #20
 800ea5c:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800ea60:	9202      	str	r2, [sp, #8]
 800ea62:	1b3a      	subs	r2, r7, r4
 800ea64:	3a15      	subs	r2, #21
 800ea66:	f022 0203 	bic.w	r2, r2, #3
 800ea6a:	3204      	adds	r2, #4
 800ea6c:	f104 0115 	add.w	r1, r4, #21
 800ea70:	428f      	cmp	r7, r1
 800ea72:	bf38      	it	cc
 800ea74:	2204      	movcc	r2, #4
 800ea76:	9201      	str	r2, [sp, #4]
 800ea78:	9a02      	ldr	r2, [sp, #8]
 800ea7a:	9303      	str	r3, [sp, #12]
 800ea7c:	429a      	cmp	r2, r3
 800ea7e:	d80c      	bhi.n	800ea9a <__multiply+0x9e>
 800ea80:	2e00      	cmp	r6, #0
 800ea82:	dd03      	ble.n	800ea8c <__multiply+0x90>
 800ea84:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800ea88:	2b00      	cmp	r3, #0
 800ea8a:	d05a      	beq.n	800eb42 <__multiply+0x146>
 800ea8c:	6106      	str	r6, [r0, #16]
 800ea8e:	b005      	add	sp, #20
 800ea90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ea94:	f843 2b04 	str.w	r2, [r3], #4
 800ea98:	e7d8      	b.n	800ea4c <__multiply+0x50>
 800ea9a:	f8b3 a000 	ldrh.w	sl, [r3]
 800ea9e:	f1ba 0f00 	cmp.w	sl, #0
 800eaa2:	d024      	beq.n	800eaee <__multiply+0xf2>
 800eaa4:	f104 0e14 	add.w	lr, r4, #20
 800eaa8:	46a9      	mov	r9, r5
 800eaaa:	f04f 0c00 	mov.w	ip, #0
 800eaae:	f85e 2b04 	ldr.w	r2, [lr], #4
 800eab2:	f8d9 1000 	ldr.w	r1, [r9]
 800eab6:	fa1f fb82 	uxth.w	fp, r2
 800eaba:	b289      	uxth	r1, r1
 800eabc:	fb0a 110b 	mla	r1, sl, fp, r1
 800eac0:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800eac4:	f8d9 2000 	ldr.w	r2, [r9]
 800eac8:	4461      	add	r1, ip
 800eaca:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800eace:	fb0a c20b 	mla	r2, sl, fp, ip
 800ead2:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800ead6:	b289      	uxth	r1, r1
 800ead8:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800eadc:	4577      	cmp	r7, lr
 800eade:	f849 1b04 	str.w	r1, [r9], #4
 800eae2:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800eae6:	d8e2      	bhi.n	800eaae <__multiply+0xb2>
 800eae8:	9a01      	ldr	r2, [sp, #4]
 800eaea:	f845 c002 	str.w	ip, [r5, r2]
 800eaee:	9a03      	ldr	r2, [sp, #12]
 800eaf0:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800eaf4:	3304      	adds	r3, #4
 800eaf6:	f1b9 0f00 	cmp.w	r9, #0
 800eafa:	d020      	beq.n	800eb3e <__multiply+0x142>
 800eafc:	6829      	ldr	r1, [r5, #0]
 800eafe:	f104 0c14 	add.w	ip, r4, #20
 800eb02:	46ae      	mov	lr, r5
 800eb04:	f04f 0a00 	mov.w	sl, #0
 800eb08:	f8bc b000 	ldrh.w	fp, [ip]
 800eb0c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800eb10:	fb09 220b 	mla	r2, r9, fp, r2
 800eb14:	4492      	add	sl, r2
 800eb16:	b289      	uxth	r1, r1
 800eb18:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800eb1c:	f84e 1b04 	str.w	r1, [lr], #4
 800eb20:	f85c 2b04 	ldr.w	r2, [ip], #4
 800eb24:	f8be 1000 	ldrh.w	r1, [lr]
 800eb28:	0c12      	lsrs	r2, r2, #16
 800eb2a:	fb09 1102 	mla	r1, r9, r2, r1
 800eb2e:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800eb32:	4567      	cmp	r7, ip
 800eb34:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800eb38:	d8e6      	bhi.n	800eb08 <__multiply+0x10c>
 800eb3a:	9a01      	ldr	r2, [sp, #4]
 800eb3c:	50a9      	str	r1, [r5, r2]
 800eb3e:	3504      	adds	r5, #4
 800eb40:	e79a      	b.n	800ea78 <__multiply+0x7c>
 800eb42:	3e01      	subs	r6, #1
 800eb44:	e79c      	b.n	800ea80 <__multiply+0x84>
 800eb46:	bf00      	nop
 800eb48:	0801163b 	.word	0x0801163b
 800eb4c:	0801164c 	.word	0x0801164c

0800eb50 <__pow5mult>:
 800eb50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800eb54:	4615      	mov	r5, r2
 800eb56:	f012 0203 	ands.w	r2, r2, #3
 800eb5a:	4606      	mov	r6, r0
 800eb5c:	460f      	mov	r7, r1
 800eb5e:	d007      	beq.n	800eb70 <__pow5mult+0x20>
 800eb60:	4c25      	ldr	r4, [pc, #148]	; (800ebf8 <__pow5mult+0xa8>)
 800eb62:	3a01      	subs	r2, #1
 800eb64:	2300      	movs	r3, #0
 800eb66:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800eb6a:	f7ff fe9b 	bl	800e8a4 <__multadd>
 800eb6e:	4607      	mov	r7, r0
 800eb70:	10ad      	asrs	r5, r5, #2
 800eb72:	d03d      	beq.n	800ebf0 <__pow5mult+0xa0>
 800eb74:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800eb76:	b97c      	cbnz	r4, 800eb98 <__pow5mult+0x48>
 800eb78:	2010      	movs	r0, #16
 800eb7a:	f7ff fe1b 	bl	800e7b4 <malloc>
 800eb7e:	4602      	mov	r2, r0
 800eb80:	6270      	str	r0, [r6, #36]	; 0x24
 800eb82:	b928      	cbnz	r0, 800eb90 <__pow5mult+0x40>
 800eb84:	4b1d      	ldr	r3, [pc, #116]	; (800ebfc <__pow5mult+0xac>)
 800eb86:	481e      	ldr	r0, [pc, #120]	; (800ec00 <__pow5mult+0xb0>)
 800eb88:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800eb8c:	f000 fc0e 	bl	800f3ac <__assert_func>
 800eb90:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800eb94:	6004      	str	r4, [r0, #0]
 800eb96:	60c4      	str	r4, [r0, #12]
 800eb98:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800eb9c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800eba0:	b94c      	cbnz	r4, 800ebb6 <__pow5mult+0x66>
 800eba2:	f240 2171 	movw	r1, #625	; 0x271
 800eba6:	4630      	mov	r0, r6
 800eba8:	f7ff ff12 	bl	800e9d0 <__i2b>
 800ebac:	2300      	movs	r3, #0
 800ebae:	f8c8 0008 	str.w	r0, [r8, #8]
 800ebb2:	4604      	mov	r4, r0
 800ebb4:	6003      	str	r3, [r0, #0]
 800ebb6:	f04f 0900 	mov.w	r9, #0
 800ebba:	07eb      	lsls	r3, r5, #31
 800ebbc:	d50a      	bpl.n	800ebd4 <__pow5mult+0x84>
 800ebbe:	4639      	mov	r1, r7
 800ebc0:	4622      	mov	r2, r4
 800ebc2:	4630      	mov	r0, r6
 800ebc4:	f7ff ff1a 	bl	800e9fc <__multiply>
 800ebc8:	4639      	mov	r1, r7
 800ebca:	4680      	mov	r8, r0
 800ebcc:	4630      	mov	r0, r6
 800ebce:	f7ff fe47 	bl	800e860 <_Bfree>
 800ebd2:	4647      	mov	r7, r8
 800ebd4:	106d      	asrs	r5, r5, #1
 800ebd6:	d00b      	beq.n	800ebf0 <__pow5mult+0xa0>
 800ebd8:	6820      	ldr	r0, [r4, #0]
 800ebda:	b938      	cbnz	r0, 800ebec <__pow5mult+0x9c>
 800ebdc:	4622      	mov	r2, r4
 800ebde:	4621      	mov	r1, r4
 800ebe0:	4630      	mov	r0, r6
 800ebe2:	f7ff ff0b 	bl	800e9fc <__multiply>
 800ebe6:	6020      	str	r0, [r4, #0]
 800ebe8:	f8c0 9000 	str.w	r9, [r0]
 800ebec:	4604      	mov	r4, r0
 800ebee:	e7e4      	b.n	800ebba <__pow5mult+0x6a>
 800ebf0:	4638      	mov	r0, r7
 800ebf2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ebf6:	bf00      	nop
 800ebf8:	08011798 	.word	0x08011798
 800ebfc:	080115c9 	.word	0x080115c9
 800ec00:	0801164c 	.word	0x0801164c

0800ec04 <__lshift>:
 800ec04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ec08:	460c      	mov	r4, r1
 800ec0a:	6849      	ldr	r1, [r1, #4]
 800ec0c:	6923      	ldr	r3, [r4, #16]
 800ec0e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800ec12:	68a3      	ldr	r3, [r4, #8]
 800ec14:	4607      	mov	r7, r0
 800ec16:	4691      	mov	r9, r2
 800ec18:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800ec1c:	f108 0601 	add.w	r6, r8, #1
 800ec20:	42b3      	cmp	r3, r6
 800ec22:	db0b      	blt.n	800ec3c <__lshift+0x38>
 800ec24:	4638      	mov	r0, r7
 800ec26:	f7ff fddb 	bl	800e7e0 <_Balloc>
 800ec2a:	4605      	mov	r5, r0
 800ec2c:	b948      	cbnz	r0, 800ec42 <__lshift+0x3e>
 800ec2e:	4602      	mov	r2, r0
 800ec30:	4b2a      	ldr	r3, [pc, #168]	; (800ecdc <__lshift+0xd8>)
 800ec32:	482b      	ldr	r0, [pc, #172]	; (800ece0 <__lshift+0xdc>)
 800ec34:	f240 11d9 	movw	r1, #473	; 0x1d9
 800ec38:	f000 fbb8 	bl	800f3ac <__assert_func>
 800ec3c:	3101      	adds	r1, #1
 800ec3e:	005b      	lsls	r3, r3, #1
 800ec40:	e7ee      	b.n	800ec20 <__lshift+0x1c>
 800ec42:	2300      	movs	r3, #0
 800ec44:	f100 0114 	add.w	r1, r0, #20
 800ec48:	f100 0210 	add.w	r2, r0, #16
 800ec4c:	4618      	mov	r0, r3
 800ec4e:	4553      	cmp	r3, sl
 800ec50:	db37      	blt.n	800ecc2 <__lshift+0xbe>
 800ec52:	6920      	ldr	r0, [r4, #16]
 800ec54:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800ec58:	f104 0314 	add.w	r3, r4, #20
 800ec5c:	f019 091f 	ands.w	r9, r9, #31
 800ec60:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800ec64:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800ec68:	d02f      	beq.n	800ecca <__lshift+0xc6>
 800ec6a:	f1c9 0e20 	rsb	lr, r9, #32
 800ec6e:	468a      	mov	sl, r1
 800ec70:	f04f 0c00 	mov.w	ip, #0
 800ec74:	681a      	ldr	r2, [r3, #0]
 800ec76:	fa02 f209 	lsl.w	r2, r2, r9
 800ec7a:	ea42 020c 	orr.w	r2, r2, ip
 800ec7e:	f84a 2b04 	str.w	r2, [sl], #4
 800ec82:	f853 2b04 	ldr.w	r2, [r3], #4
 800ec86:	4298      	cmp	r0, r3
 800ec88:	fa22 fc0e 	lsr.w	ip, r2, lr
 800ec8c:	d8f2      	bhi.n	800ec74 <__lshift+0x70>
 800ec8e:	1b03      	subs	r3, r0, r4
 800ec90:	3b15      	subs	r3, #21
 800ec92:	f023 0303 	bic.w	r3, r3, #3
 800ec96:	3304      	adds	r3, #4
 800ec98:	f104 0215 	add.w	r2, r4, #21
 800ec9c:	4290      	cmp	r0, r2
 800ec9e:	bf38      	it	cc
 800eca0:	2304      	movcc	r3, #4
 800eca2:	f841 c003 	str.w	ip, [r1, r3]
 800eca6:	f1bc 0f00 	cmp.w	ip, #0
 800ecaa:	d001      	beq.n	800ecb0 <__lshift+0xac>
 800ecac:	f108 0602 	add.w	r6, r8, #2
 800ecb0:	3e01      	subs	r6, #1
 800ecb2:	4638      	mov	r0, r7
 800ecb4:	612e      	str	r6, [r5, #16]
 800ecb6:	4621      	mov	r1, r4
 800ecb8:	f7ff fdd2 	bl	800e860 <_Bfree>
 800ecbc:	4628      	mov	r0, r5
 800ecbe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ecc2:	f842 0f04 	str.w	r0, [r2, #4]!
 800ecc6:	3301      	adds	r3, #1
 800ecc8:	e7c1      	b.n	800ec4e <__lshift+0x4a>
 800ecca:	3904      	subs	r1, #4
 800eccc:	f853 2b04 	ldr.w	r2, [r3], #4
 800ecd0:	f841 2f04 	str.w	r2, [r1, #4]!
 800ecd4:	4298      	cmp	r0, r3
 800ecd6:	d8f9      	bhi.n	800eccc <__lshift+0xc8>
 800ecd8:	e7ea      	b.n	800ecb0 <__lshift+0xac>
 800ecda:	bf00      	nop
 800ecdc:	0801163b 	.word	0x0801163b
 800ece0:	0801164c 	.word	0x0801164c

0800ece4 <__mcmp>:
 800ece4:	b530      	push	{r4, r5, lr}
 800ece6:	6902      	ldr	r2, [r0, #16]
 800ece8:	690c      	ldr	r4, [r1, #16]
 800ecea:	1b12      	subs	r2, r2, r4
 800ecec:	d10e      	bne.n	800ed0c <__mcmp+0x28>
 800ecee:	f100 0314 	add.w	r3, r0, #20
 800ecf2:	3114      	adds	r1, #20
 800ecf4:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800ecf8:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800ecfc:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800ed00:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800ed04:	42a5      	cmp	r5, r4
 800ed06:	d003      	beq.n	800ed10 <__mcmp+0x2c>
 800ed08:	d305      	bcc.n	800ed16 <__mcmp+0x32>
 800ed0a:	2201      	movs	r2, #1
 800ed0c:	4610      	mov	r0, r2
 800ed0e:	bd30      	pop	{r4, r5, pc}
 800ed10:	4283      	cmp	r3, r0
 800ed12:	d3f3      	bcc.n	800ecfc <__mcmp+0x18>
 800ed14:	e7fa      	b.n	800ed0c <__mcmp+0x28>
 800ed16:	f04f 32ff 	mov.w	r2, #4294967295
 800ed1a:	e7f7      	b.n	800ed0c <__mcmp+0x28>

0800ed1c <__mdiff>:
 800ed1c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed20:	460c      	mov	r4, r1
 800ed22:	4606      	mov	r6, r0
 800ed24:	4611      	mov	r1, r2
 800ed26:	4620      	mov	r0, r4
 800ed28:	4690      	mov	r8, r2
 800ed2a:	f7ff ffdb 	bl	800ece4 <__mcmp>
 800ed2e:	1e05      	subs	r5, r0, #0
 800ed30:	d110      	bne.n	800ed54 <__mdiff+0x38>
 800ed32:	4629      	mov	r1, r5
 800ed34:	4630      	mov	r0, r6
 800ed36:	f7ff fd53 	bl	800e7e0 <_Balloc>
 800ed3a:	b930      	cbnz	r0, 800ed4a <__mdiff+0x2e>
 800ed3c:	4b3a      	ldr	r3, [pc, #232]	; (800ee28 <__mdiff+0x10c>)
 800ed3e:	4602      	mov	r2, r0
 800ed40:	f240 2132 	movw	r1, #562	; 0x232
 800ed44:	4839      	ldr	r0, [pc, #228]	; (800ee2c <__mdiff+0x110>)
 800ed46:	f000 fb31 	bl	800f3ac <__assert_func>
 800ed4a:	2301      	movs	r3, #1
 800ed4c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800ed50:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ed54:	bfa4      	itt	ge
 800ed56:	4643      	movge	r3, r8
 800ed58:	46a0      	movge	r8, r4
 800ed5a:	4630      	mov	r0, r6
 800ed5c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800ed60:	bfa6      	itte	ge
 800ed62:	461c      	movge	r4, r3
 800ed64:	2500      	movge	r5, #0
 800ed66:	2501      	movlt	r5, #1
 800ed68:	f7ff fd3a 	bl	800e7e0 <_Balloc>
 800ed6c:	b920      	cbnz	r0, 800ed78 <__mdiff+0x5c>
 800ed6e:	4b2e      	ldr	r3, [pc, #184]	; (800ee28 <__mdiff+0x10c>)
 800ed70:	4602      	mov	r2, r0
 800ed72:	f44f 7110 	mov.w	r1, #576	; 0x240
 800ed76:	e7e5      	b.n	800ed44 <__mdiff+0x28>
 800ed78:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800ed7c:	6926      	ldr	r6, [r4, #16]
 800ed7e:	60c5      	str	r5, [r0, #12]
 800ed80:	f104 0914 	add.w	r9, r4, #20
 800ed84:	f108 0514 	add.w	r5, r8, #20
 800ed88:	f100 0e14 	add.w	lr, r0, #20
 800ed8c:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800ed90:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800ed94:	f108 0210 	add.w	r2, r8, #16
 800ed98:	46f2      	mov	sl, lr
 800ed9a:	2100      	movs	r1, #0
 800ed9c:	f859 3b04 	ldr.w	r3, [r9], #4
 800eda0:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800eda4:	fa1f f883 	uxth.w	r8, r3
 800eda8:	fa11 f18b 	uxtah	r1, r1, fp
 800edac:	0c1b      	lsrs	r3, r3, #16
 800edae:	eba1 0808 	sub.w	r8, r1, r8
 800edb2:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800edb6:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800edba:	fa1f f888 	uxth.w	r8, r8
 800edbe:	1419      	asrs	r1, r3, #16
 800edc0:	454e      	cmp	r6, r9
 800edc2:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800edc6:	f84a 3b04 	str.w	r3, [sl], #4
 800edca:	d8e7      	bhi.n	800ed9c <__mdiff+0x80>
 800edcc:	1b33      	subs	r3, r6, r4
 800edce:	3b15      	subs	r3, #21
 800edd0:	f023 0303 	bic.w	r3, r3, #3
 800edd4:	3304      	adds	r3, #4
 800edd6:	3415      	adds	r4, #21
 800edd8:	42a6      	cmp	r6, r4
 800edda:	bf38      	it	cc
 800eddc:	2304      	movcc	r3, #4
 800edde:	441d      	add	r5, r3
 800ede0:	4473      	add	r3, lr
 800ede2:	469e      	mov	lr, r3
 800ede4:	462e      	mov	r6, r5
 800ede6:	4566      	cmp	r6, ip
 800ede8:	d30e      	bcc.n	800ee08 <__mdiff+0xec>
 800edea:	f10c 0203 	add.w	r2, ip, #3
 800edee:	1b52      	subs	r2, r2, r5
 800edf0:	f022 0203 	bic.w	r2, r2, #3
 800edf4:	3d03      	subs	r5, #3
 800edf6:	45ac      	cmp	ip, r5
 800edf8:	bf38      	it	cc
 800edfa:	2200      	movcc	r2, #0
 800edfc:	441a      	add	r2, r3
 800edfe:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800ee02:	b17b      	cbz	r3, 800ee24 <__mdiff+0x108>
 800ee04:	6107      	str	r7, [r0, #16]
 800ee06:	e7a3      	b.n	800ed50 <__mdiff+0x34>
 800ee08:	f856 8b04 	ldr.w	r8, [r6], #4
 800ee0c:	fa11 f288 	uxtah	r2, r1, r8
 800ee10:	1414      	asrs	r4, r2, #16
 800ee12:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800ee16:	b292      	uxth	r2, r2
 800ee18:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800ee1c:	f84e 2b04 	str.w	r2, [lr], #4
 800ee20:	1421      	asrs	r1, r4, #16
 800ee22:	e7e0      	b.n	800ede6 <__mdiff+0xca>
 800ee24:	3f01      	subs	r7, #1
 800ee26:	e7ea      	b.n	800edfe <__mdiff+0xe2>
 800ee28:	0801163b 	.word	0x0801163b
 800ee2c:	0801164c 	.word	0x0801164c

0800ee30 <__d2b>:
 800ee30:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ee34:	4689      	mov	r9, r1
 800ee36:	2101      	movs	r1, #1
 800ee38:	ec57 6b10 	vmov	r6, r7, d0
 800ee3c:	4690      	mov	r8, r2
 800ee3e:	f7ff fccf 	bl	800e7e0 <_Balloc>
 800ee42:	4604      	mov	r4, r0
 800ee44:	b930      	cbnz	r0, 800ee54 <__d2b+0x24>
 800ee46:	4602      	mov	r2, r0
 800ee48:	4b25      	ldr	r3, [pc, #148]	; (800eee0 <__d2b+0xb0>)
 800ee4a:	4826      	ldr	r0, [pc, #152]	; (800eee4 <__d2b+0xb4>)
 800ee4c:	f240 310a 	movw	r1, #778	; 0x30a
 800ee50:	f000 faac 	bl	800f3ac <__assert_func>
 800ee54:	f3c7 550a 	ubfx	r5, r7, #20, #11
 800ee58:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800ee5c:	bb35      	cbnz	r5, 800eeac <__d2b+0x7c>
 800ee5e:	2e00      	cmp	r6, #0
 800ee60:	9301      	str	r3, [sp, #4]
 800ee62:	d028      	beq.n	800eeb6 <__d2b+0x86>
 800ee64:	4668      	mov	r0, sp
 800ee66:	9600      	str	r6, [sp, #0]
 800ee68:	f7ff fd82 	bl	800e970 <__lo0bits>
 800ee6c:	9900      	ldr	r1, [sp, #0]
 800ee6e:	b300      	cbz	r0, 800eeb2 <__d2b+0x82>
 800ee70:	9a01      	ldr	r2, [sp, #4]
 800ee72:	f1c0 0320 	rsb	r3, r0, #32
 800ee76:	fa02 f303 	lsl.w	r3, r2, r3
 800ee7a:	430b      	orrs	r3, r1
 800ee7c:	40c2      	lsrs	r2, r0
 800ee7e:	6163      	str	r3, [r4, #20]
 800ee80:	9201      	str	r2, [sp, #4]
 800ee82:	9b01      	ldr	r3, [sp, #4]
 800ee84:	61a3      	str	r3, [r4, #24]
 800ee86:	2b00      	cmp	r3, #0
 800ee88:	bf14      	ite	ne
 800ee8a:	2202      	movne	r2, #2
 800ee8c:	2201      	moveq	r2, #1
 800ee8e:	6122      	str	r2, [r4, #16]
 800ee90:	b1d5      	cbz	r5, 800eec8 <__d2b+0x98>
 800ee92:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800ee96:	4405      	add	r5, r0
 800ee98:	f8c9 5000 	str.w	r5, [r9]
 800ee9c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800eea0:	f8c8 0000 	str.w	r0, [r8]
 800eea4:	4620      	mov	r0, r4
 800eea6:	b003      	add	sp, #12
 800eea8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eeac:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800eeb0:	e7d5      	b.n	800ee5e <__d2b+0x2e>
 800eeb2:	6161      	str	r1, [r4, #20]
 800eeb4:	e7e5      	b.n	800ee82 <__d2b+0x52>
 800eeb6:	a801      	add	r0, sp, #4
 800eeb8:	f7ff fd5a 	bl	800e970 <__lo0bits>
 800eebc:	9b01      	ldr	r3, [sp, #4]
 800eebe:	6163      	str	r3, [r4, #20]
 800eec0:	2201      	movs	r2, #1
 800eec2:	6122      	str	r2, [r4, #16]
 800eec4:	3020      	adds	r0, #32
 800eec6:	e7e3      	b.n	800ee90 <__d2b+0x60>
 800eec8:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800eecc:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800eed0:	f8c9 0000 	str.w	r0, [r9]
 800eed4:	6918      	ldr	r0, [r3, #16]
 800eed6:	f7ff fd2b 	bl	800e930 <__hi0bits>
 800eeda:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800eede:	e7df      	b.n	800eea0 <__d2b+0x70>
 800eee0:	0801163b 	.word	0x0801163b
 800eee4:	0801164c 	.word	0x0801164c

0800eee8 <_calloc_r>:
 800eee8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800eeea:	fba1 2402 	umull	r2, r4, r1, r2
 800eeee:	b94c      	cbnz	r4, 800ef04 <_calloc_r+0x1c>
 800eef0:	4611      	mov	r1, r2
 800eef2:	9201      	str	r2, [sp, #4]
 800eef4:	f000 f87a 	bl	800efec <_malloc_r>
 800eef8:	9a01      	ldr	r2, [sp, #4]
 800eefa:	4605      	mov	r5, r0
 800eefc:	b930      	cbnz	r0, 800ef0c <_calloc_r+0x24>
 800eefe:	4628      	mov	r0, r5
 800ef00:	b003      	add	sp, #12
 800ef02:	bd30      	pop	{r4, r5, pc}
 800ef04:	220c      	movs	r2, #12
 800ef06:	6002      	str	r2, [r0, #0]
 800ef08:	2500      	movs	r5, #0
 800ef0a:	e7f8      	b.n	800eefe <_calloc_r+0x16>
 800ef0c:	4621      	mov	r1, r4
 800ef0e:	f7fe f941 	bl	800d194 <memset>
 800ef12:	e7f4      	b.n	800eefe <_calloc_r+0x16>

0800ef14 <_free_r>:
 800ef14:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ef16:	2900      	cmp	r1, #0
 800ef18:	d044      	beq.n	800efa4 <_free_r+0x90>
 800ef1a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800ef1e:	9001      	str	r0, [sp, #4]
 800ef20:	2b00      	cmp	r3, #0
 800ef22:	f1a1 0404 	sub.w	r4, r1, #4
 800ef26:	bfb8      	it	lt
 800ef28:	18e4      	addlt	r4, r4, r3
 800ef2a:	f000 fa9b 	bl	800f464 <__malloc_lock>
 800ef2e:	4a1e      	ldr	r2, [pc, #120]	; (800efa8 <_free_r+0x94>)
 800ef30:	9801      	ldr	r0, [sp, #4]
 800ef32:	6813      	ldr	r3, [r2, #0]
 800ef34:	b933      	cbnz	r3, 800ef44 <_free_r+0x30>
 800ef36:	6063      	str	r3, [r4, #4]
 800ef38:	6014      	str	r4, [r2, #0]
 800ef3a:	b003      	add	sp, #12
 800ef3c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800ef40:	f000 ba96 	b.w	800f470 <__malloc_unlock>
 800ef44:	42a3      	cmp	r3, r4
 800ef46:	d908      	bls.n	800ef5a <_free_r+0x46>
 800ef48:	6825      	ldr	r5, [r4, #0]
 800ef4a:	1961      	adds	r1, r4, r5
 800ef4c:	428b      	cmp	r3, r1
 800ef4e:	bf01      	itttt	eq
 800ef50:	6819      	ldreq	r1, [r3, #0]
 800ef52:	685b      	ldreq	r3, [r3, #4]
 800ef54:	1949      	addeq	r1, r1, r5
 800ef56:	6021      	streq	r1, [r4, #0]
 800ef58:	e7ed      	b.n	800ef36 <_free_r+0x22>
 800ef5a:	461a      	mov	r2, r3
 800ef5c:	685b      	ldr	r3, [r3, #4]
 800ef5e:	b10b      	cbz	r3, 800ef64 <_free_r+0x50>
 800ef60:	42a3      	cmp	r3, r4
 800ef62:	d9fa      	bls.n	800ef5a <_free_r+0x46>
 800ef64:	6811      	ldr	r1, [r2, #0]
 800ef66:	1855      	adds	r5, r2, r1
 800ef68:	42a5      	cmp	r5, r4
 800ef6a:	d10b      	bne.n	800ef84 <_free_r+0x70>
 800ef6c:	6824      	ldr	r4, [r4, #0]
 800ef6e:	4421      	add	r1, r4
 800ef70:	1854      	adds	r4, r2, r1
 800ef72:	42a3      	cmp	r3, r4
 800ef74:	6011      	str	r1, [r2, #0]
 800ef76:	d1e0      	bne.n	800ef3a <_free_r+0x26>
 800ef78:	681c      	ldr	r4, [r3, #0]
 800ef7a:	685b      	ldr	r3, [r3, #4]
 800ef7c:	6053      	str	r3, [r2, #4]
 800ef7e:	4421      	add	r1, r4
 800ef80:	6011      	str	r1, [r2, #0]
 800ef82:	e7da      	b.n	800ef3a <_free_r+0x26>
 800ef84:	d902      	bls.n	800ef8c <_free_r+0x78>
 800ef86:	230c      	movs	r3, #12
 800ef88:	6003      	str	r3, [r0, #0]
 800ef8a:	e7d6      	b.n	800ef3a <_free_r+0x26>
 800ef8c:	6825      	ldr	r5, [r4, #0]
 800ef8e:	1961      	adds	r1, r4, r5
 800ef90:	428b      	cmp	r3, r1
 800ef92:	bf04      	itt	eq
 800ef94:	6819      	ldreq	r1, [r3, #0]
 800ef96:	685b      	ldreq	r3, [r3, #4]
 800ef98:	6063      	str	r3, [r4, #4]
 800ef9a:	bf04      	itt	eq
 800ef9c:	1949      	addeq	r1, r1, r5
 800ef9e:	6021      	streq	r1, [r4, #0]
 800efa0:	6054      	str	r4, [r2, #4]
 800efa2:	e7ca      	b.n	800ef3a <_free_r+0x26>
 800efa4:	b003      	add	sp, #12
 800efa6:	bd30      	pop	{r4, r5, pc}
 800efa8:	20000c8c 	.word	0x20000c8c

0800efac <sbrk_aligned>:
 800efac:	b570      	push	{r4, r5, r6, lr}
 800efae:	4e0e      	ldr	r6, [pc, #56]	; (800efe8 <sbrk_aligned+0x3c>)
 800efb0:	460c      	mov	r4, r1
 800efb2:	6831      	ldr	r1, [r6, #0]
 800efb4:	4605      	mov	r5, r0
 800efb6:	b911      	cbnz	r1, 800efbe <sbrk_aligned+0x12>
 800efb8:	f000 f9e8 	bl	800f38c <_sbrk_r>
 800efbc:	6030      	str	r0, [r6, #0]
 800efbe:	4621      	mov	r1, r4
 800efc0:	4628      	mov	r0, r5
 800efc2:	f000 f9e3 	bl	800f38c <_sbrk_r>
 800efc6:	1c43      	adds	r3, r0, #1
 800efc8:	d00a      	beq.n	800efe0 <sbrk_aligned+0x34>
 800efca:	1cc4      	adds	r4, r0, #3
 800efcc:	f024 0403 	bic.w	r4, r4, #3
 800efd0:	42a0      	cmp	r0, r4
 800efd2:	d007      	beq.n	800efe4 <sbrk_aligned+0x38>
 800efd4:	1a21      	subs	r1, r4, r0
 800efd6:	4628      	mov	r0, r5
 800efd8:	f000 f9d8 	bl	800f38c <_sbrk_r>
 800efdc:	3001      	adds	r0, #1
 800efde:	d101      	bne.n	800efe4 <sbrk_aligned+0x38>
 800efe0:	f04f 34ff 	mov.w	r4, #4294967295
 800efe4:	4620      	mov	r0, r4
 800efe6:	bd70      	pop	{r4, r5, r6, pc}
 800efe8:	20000c90 	.word	0x20000c90

0800efec <_malloc_r>:
 800efec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eff0:	1ccd      	adds	r5, r1, #3
 800eff2:	f025 0503 	bic.w	r5, r5, #3
 800eff6:	3508      	adds	r5, #8
 800eff8:	2d0c      	cmp	r5, #12
 800effa:	bf38      	it	cc
 800effc:	250c      	movcc	r5, #12
 800effe:	2d00      	cmp	r5, #0
 800f000:	4607      	mov	r7, r0
 800f002:	db01      	blt.n	800f008 <_malloc_r+0x1c>
 800f004:	42a9      	cmp	r1, r5
 800f006:	d905      	bls.n	800f014 <_malloc_r+0x28>
 800f008:	230c      	movs	r3, #12
 800f00a:	603b      	str	r3, [r7, #0]
 800f00c:	2600      	movs	r6, #0
 800f00e:	4630      	mov	r0, r6
 800f010:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f014:	4e2e      	ldr	r6, [pc, #184]	; (800f0d0 <_malloc_r+0xe4>)
 800f016:	f000 fa25 	bl	800f464 <__malloc_lock>
 800f01a:	6833      	ldr	r3, [r6, #0]
 800f01c:	461c      	mov	r4, r3
 800f01e:	bb34      	cbnz	r4, 800f06e <_malloc_r+0x82>
 800f020:	4629      	mov	r1, r5
 800f022:	4638      	mov	r0, r7
 800f024:	f7ff ffc2 	bl	800efac <sbrk_aligned>
 800f028:	1c43      	adds	r3, r0, #1
 800f02a:	4604      	mov	r4, r0
 800f02c:	d14d      	bne.n	800f0ca <_malloc_r+0xde>
 800f02e:	6834      	ldr	r4, [r6, #0]
 800f030:	4626      	mov	r6, r4
 800f032:	2e00      	cmp	r6, #0
 800f034:	d140      	bne.n	800f0b8 <_malloc_r+0xcc>
 800f036:	6823      	ldr	r3, [r4, #0]
 800f038:	4631      	mov	r1, r6
 800f03a:	4638      	mov	r0, r7
 800f03c:	eb04 0803 	add.w	r8, r4, r3
 800f040:	f000 f9a4 	bl	800f38c <_sbrk_r>
 800f044:	4580      	cmp	r8, r0
 800f046:	d13a      	bne.n	800f0be <_malloc_r+0xd2>
 800f048:	6821      	ldr	r1, [r4, #0]
 800f04a:	3503      	adds	r5, #3
 800f04c:	1a6d      	subs	r5, r5, r1
 800f04e:	f025 0503 	bic.w	r5, r5, #3
 800f052:	3508      	adds	r5, #8
 800f054:	2d0c      	cmp	r5, #12
 800f056:	bf38      	it	cc
 800f058:	250c      	movcc	r5, #12
 800f05a:	4629      	mov	r1, r5
 800f05c:	4638      	mov	r0, r7
 800f05e:	f7ff ffa5 	bl	800efac <sbrk_aligned>
 800f062:	3001      	adds	r0, #1
 800f064:	d02b      	beq.n	800f0be <_malloc_r+0xd2>
 800f066:	6823      	ldr	r3, [r4, #0]
 800f068:	442b      	add	r3, r5
 800f06a:	6023      	str	r3, [r4, #0]
 800f06c:	e00e      	b.n	800f08c <_malloc_r+0xa0>
 800f06e:	6822      	ldr	r2, [r4, #0]
 800f070:	1b52      	subs	r2, r2, r5
 800f072:	d41e      	bmi.n	800f0b2 <_malloc_r+0xc6>
 800f074:	2a0b      	cmp	r2, #11
 800f076:	d916      	bls.n	800f0a6 <_malloc_r+0xba>
 800f078:	1961      	adds	r1, r4, r5
 800f07a:	42a3      	cmp	r3, r4
 800f07c:	6025      	str	r5, [r4, #0]
 800f07e:	bf18      	it	ne
 800f080:	6059      	strne	r1, [r3, #4]
 800f082:	6863      	ldr	r3, [r4, #4]
 800f084:	bf08      	it	eq
 800f086:	6031      	streq	r1, [r6, #0]
 800f088:	5162      	str	r2, [r4, r5]
 800f08a:	604b      	str	r3, [r1, #4]
 800f08c:	4638      	mov	r0, r7
 800f08e:	f104 060b 	add.w	r6, r4, #11
 800f092:	f000 f9ed 	bl	800f470 <__malloc_unlock>
 800f096:	f026 0607 	bic.w	r6, r6, #7
 800f09a:	1d23      	adds	r3, r4, #4
 800f09c:	1af2      	subs	r2, r6, r3
 800f09e:	d0b6      	beq.n	800f00e <_malloc_r+0x22>
 800f0a0:	1b9b      	subs	r3, r3, r6
 800f0a2:	50a3      	str	r3, [r4, r2]
 800f0a4:	e7b3      	b.n	800f00e <_malloc_r+0x22>
 800f0a6:	6862      	ldr	r2, [r4, #4]
 800f0a8:	42a3      	cmp	r3, r4
 800f0aa:	bf0c      	ite	eq
 800f0ac:	6032      	streq	r2, [r6, #0]
 800f0ae:	605a      	strne	r2, [r3, #4]
 800f0b0:	e7ec      	b.n	800f08c <_malloc_r+0xa0>
 800f0b2:	4623      	mov	r3, r4
 800f0b4:	6864      	ldr	r4, [r4, #4]
 800f0b6:	e7b2      	b.n	800f01e <_malloc_r+0x32>
 800f0b8:	4634      	mov	r4, r6
 800f0ba:	6876      	ldr	r6, [r6, #4]
 800f0bc:	e7b9      	b.n	800f032 <_malloc_r+0x46>
 800f0be:	230c      	movs	r3, #12
 800f0c0:	603b      	str	r3, [r7, #0]
 800f0c2:	4638      	mov	r0, r7
 800f0c4:	f000 f9d4 	bl	800f470 <__malloc_unlock>
 800f0c8:	e7a1      	b.n	800f00e <_malloc_r+0x22>
 800f0ca:	6025      	str	r5, [r4, #0]
 800f0cc:	e7de      	b.n	800f08c <_malloc_r+0xa0>
 800f0ce:	bf00      	nop
 800f0d0:	20000c8c 	.word	0x20000c8c

0800f0d4 <__ssputs_r>:
 800f0d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f0d8:	688e      	ldr	r6, [r1, #8]
 800f0da:	429e      	cmp	r6, r3
 800f0dc:	4682      	mov	sl, r0
 800f0de:	460c      	mov	r4, r1
 800f0e0:	4690      	mov	r8, r2
 800f0e2:	461f      	mov	r7, r3
 800f0e4:	d838      	bhi.n	800f158 <__ssputs_r+0x84>
 800f0e6:	898a      	ldrh	r2, [r1, #12]
 800f0e8:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800f0ec:	d032      	beq.n	800f154 <__ssputs_r+0x80>
 800f0ee:	6825      	ldr	r5, [r4, #0]
 800f0f0:	6909      	ldr	r1, [r1, #16]
 800f0f2:	eba5 0901 	sub.w	r9, r5, r1
 800f0f6:	6965      	ldr	r5, [r4, #20]
 800f0f8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800f0fc:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800f100:	3301      	adds	r3, #1
 800f102:	444b      	add	r3, r9
 800f104:	106d      	asrs	r5, r5, #1
 800f106:	429d      	cmp	r5, r3
 800f108:	bf38      	it	cc
 800f10a:	461d      	movcc	r5, r3
 800f10c:	0553      	lsls	r3, r2, #21
 800f10e:	d531      	bpl.n	800f174 <__ssputs_r+0xa0>
 800f110:	4629      	mov	r1, r5
 800f112:	f7ff ff6b 	bl	800efec <_malloc_r>
 800f116:	4606      	mov	r6, r0
 800f118:	b950      	cbnz	r0, 800f130 <__ssputs_r+0x5c>
 800f11a:	230c      	movs	r3, #12
 800f11c:	f8ca 3000 	str.w	r3, [sl]
 800f120:	89a3      	ldrh	r3, [r4, #12]
 800f122:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f126:	81a3      	strh	r3, [r4, #12]
 800f128:	f04f 30ff 	mov.w	r0, #4294967295
 800f12c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f130:	6921      	ldr	r1, [r4, #16]
 800f132:	464a      	mov	r2, r9
 800f134:	f7ff fb46 	bl	800e7c4 <memcpy>
 800f138:	89a3      	ldrh	r3, [r4, #12]
 800f13a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800f13e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800f142:	81a3      	strh	r3, [r4, #12]
 800f144:	6126      	str	r6, [r4, #16]
 800f146:	6165      	str	r5, [r4, #20]
 800f148:	444e      	add	r6, r9
 800f14a:	eba5 0509 	sub.w	r5, r5, r9
 800f14e:	6026      	str	r6, [r4, #0]
 800f150:	60a5      	str	r5, [r4, #8]
 800f152:	463e      	mov	r6, r7
 800f154:	42be      	cmp	r6, r7
 800f156:	d900      	bls.n	800f15a <__ssputs_r+0x86>
 800f158:	463e      	mov	r6, r7
 800f15a:	6820      	ldr	r0, [r4, #0]
 800f15c:	4632      	mov	r2, r6
 800f15e:	4641      	mov	r1, r8
 800f160:	f000 f966 	bl	800f430 <memmove>
 800f164:	68a3      	ldr	r3, [r4, #8]
 800f166:	1b9b      	subs	r3, r3, r6
 800f168:	60a3      	str	r3, [r4, #8]
 800f16a:	6823      	ldr	r3, [r4, #0]
 800f16c:	4433      	add	r3, r6
 800f16e:	6023      	str	r3, [r4, #0]
 800f170:	2000      	movs	r0, #0
 800f172:	e7db      	b.n	800f12c <__ssputs_r+0x58>
 800f174:	462a      	mov	r2, r5
 800f176:	f000 f981 	bl	800f47c <_realloc_r>
 800f17a:	4606      	mov	r6, r0
 800f17c:	2800      	cmp	r0, #0
 800f17e:	d1e1      	bne.n	800f144 <__ssputs_r+0x70>
 800f180:	6921      	ldr	r1, [r4, #16]
 800f182:	4650      	mov	r0, sl
 800f184:	f7ff fec6 	bl	800ef14 <_free_r>
 800f188:	e7c7      	b.n	800f11a <__ssputs_r+0x46>
	...

0800f18c <_svfiprintf_r>:
 800f18c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f190:	4698      	mov	r8, r3
 800f192:	898b      	ldrh	r3, [r1, #12]
 800f194:	061b      	lsls	r3, r3, #24
 800f196:	b09d      	sub	sp, #116	; 0x74
 800f198:	4607      	mov	r7, r0
 800f19a:	460d      	mov	r5, r1
 800f19c:	4614      	mov	r4, r2
 800f19e:	d50e      	bpl.n	800f1be <_svfiprintf_r+0x32>
 800f1a0:	690b      	ldr	r3, [r1, #16]
 800f1a2:	b963      	cbnz	r3, 800f1be <_svfiprintf_r+0x32>
 800f1a4:	2140      	movs	r1, #64	; 0x40
 800f1a6:	f7ff ff21 	bl	800efec <_malloc_r>
 800f1aa:	6028      	str	r0, [r5, #0]
 800f1ac:	6128      	str	r0, [r5, #16]
 800f1ae:	b920      	cbnz	r0, 800f1ba <_svfiprintf_r+0x2e>
 800f1b0:	230c      	movs	r3, #12
 800f1b2:	603b      	str	r3, [r7, #0]
 800f1b4:	f04f 30ff 	mov.w	r0, #4294967295
 800f1b8:	e0d1      	b.n	800f35e <_svfiprintf_r+0x1d2>
 800f1ba:	2340      	movs	r3, #64	; 0x40
 800f1bc:	616b      	str	r3, [r5, #20]
 800f1be:	2300      	movs	r3, #0
 800f1c0:	9309      	str	r3, [sp, #36]	; 0x24
 800f1c2:	2320      	movs	r3, #32
 800f1c4:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800f1c8:	f8cd 800c 	str.w	r8, [sp, #12]
 800f1cc:	2330      	movs	r3, #48	; 0x30
 800f1ce:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 800f378 <_svfiprintf_r+0x1ec>
 800f1d2:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800f1d6:	f04f 0901 	mov.w	r9, #1
 800f1da:	4623      	mov	r3, r4
 800f1dc:	469a      	mov	sl, r3
 800f1de:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f1e2:	b10a      	cbz	r2, 800f1e8 <_svfiprintf_r+0x5c>
 800f1e4:	2a25      	cmp	r2, #37	; 0x25
 800f1e6:	d1f9      	bne.n	800f1dc <_svfiprintf_r+0x50>
 800f1e8:	ebba 0b04 	subs.w	fp, sl, r4
 800f1ec:	d00b      	beq.n	800f206 <_svfiprintf_r+0x7a>
 800f1ee:	465b      	mov	r3, fp
 800f1f0:	4622      	mov	r2, r4
 800f1f2:	4629      	mov	r1, r5
 800f1f4:	4638      	mov	r0, r7
 800f1f6:	f7ff ff6d 	bl	800f0d4 <__ssputs_r>
 800f1fa:	3001      	adds	r0, #1
 800f1fc:	f000 80aa 	beq.w	800f354 <_svfiprintf_r+0x1c8>
 800f200:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f202:	445a      	add	r2, fp
 800f204:	9209      	str	r2, [sp, #36]	; 0x24
 800f206:	f89a 3000 	ldrb.w	r3, [sl]
 800f20a:	2b00      	cmp	r3, #0
 800f20c:	f000 80a2 	beq.w	800f354 <_svfiprintf_r+0x1c8>
 800f210:	2300      	movs	r3, #0
 800f212:	f04f 32ff 	mov.w	r2, #4294967295
 800f216:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800f21a:	f10a 0a01 	add.w	sl, sl, #1
 800f21e:	9304      	str	r3, [sp, #16]
 800f220:	9307      	str	r3, [sp, #28]
 800f222:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800f226:	931a      	str	r3, [sp, #104]	; 0x68
 800f228:	4654      	mov	r4, sl
 800f22a:	2205      	movs	r2, #5
 800f22c:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f230:	4851      	ldr	r0, [pc, #324]	; (800f378 <_svfiprintf_r+0x1ec>)
 800f232:	f7f0 fff5 	bl	8000220 <memchr>
 800f236:	9a04      	ldr	r2, [sp, #16]
 800f238:	b9d8      	cbnz	r0, 800f272 <_svfiprintf_r+0xe6>
 800f23a:	06d0      	lsls	r0, r2, #27
 800f23c:	bf44      	itt	mi
 800f23e:	2320      	movmi	r3, #32
 800f240:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800f244:	0711      	lsls	r1, r2, #28
 800f246:	bf44      	itt	mi
 800f248:	232b      	movmi	r3, #43	; 0x2b
 800f24a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800f24e:	f89a 3000 	ldrb.w	r3, [sl]
 800f252:	2b2a      	cmp	r3, #42	; 0x2a
 800f254:	d015      	beq.n	800f282 <_svfiprintf_r+0xf6>
 800f256:	9a07      	ldr	r2, [sp, #28]
 800f258:	4654      	mov	r4, sl
 800f25a:	2000      	movs	r0, #0
 800f25c:	f04f 0c0a 	mov.w	ip, #10
 800f260:	4621      	mov	r1, r4
 800f262:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f266:	3b30      	subs	r3, #48	; 0x30
 800f268:	2b09      	cmp	r3, #9
 800f26a:	d94e      	bls.n	800f30a <_svfiprintf_r+0x17e>
 800f26c:	b1b0      	cbz	r0, 800f29c <_svfiprintf_r+0x110>
 800f26e:	9207      	str	r2, [sp, #28]
 800f270:	e014      	b.n	800f29c <_svfiprintf_r+0x110>
 800f272:	eba0 0308 	sub.w	r3, r0, r8
 800f276:	fa09 f303 	lsl.w	r3, r9, r3
 800f27a:	4313      	orrs	r3, r2
 800f27c:	9304      	str	r3, [sp, #16]
 800f27e:	46a2      	mov	sl, r4
 800f280:	e7d2      	b.n	800f228 <_svfiprintf_r+0x9c>
 800f282:	9b03      	ldr	r3, [sp, #12]
 800f284:	1d19      	adds	r1, r3, #4
 800f286:	681b      	ldr	r3, [r3, #0]
 800f288:	9103      	str	r1, [sp, #12]
 800f28a:	2b00      	cmp	r3, #0
 800f28c:	bfbb      	ittet	lt
 800f28e:	425b      	neglt	r3, r3
 800f290:	f042 0202 	orrlt.w	r2, r2, #2
 800f294:	9307      	strge	r3, [sp, #28]
 800f296:	9307      	strlt	r3, [sp, #28]
 800f298:	bfb8      	it	lt
 800f29a:	9204      	strlt	r2, [sp, #16]
 800f29c:	7823      	ldrb	r3, [r4, #0]
 800f29e:	2b2e      	cmp	r3, #46	; 0x2e
 800f2a0:	d10c      	bne.n	800f2bc <_svfiprintf_r+0x130>
 800f2a2:	7863      	ldrb	r3, [r4, #1]
 800f2a4:	2b2a      	cmp	r3, #42	; 0x2a
 800f2a6:	d135      	bne.n	800f314 <_svfiprintf_r+0x188>
 800f2a8:	9b03      	ldr	r3, [sp, #12]
 800f2aa:	1d1a      	adds	r2, r3, #4
 800f2ac:	681b      	ldr	r3, [r3, #0]
 800f2ae:	9203      	str	r2, [sp, #12]
 800f2b0:	2b00      	cmp	r3, #0
 800f2b2:	bfb8      	it	lt
 800f2b4:	f04f 33ff 	movlt.w	r3, #4294967295
 800f2b8:	3402      	adds	r4, #2
 800f2ba:	9305      	str	r3, [sp, #20]
 800f2bc:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800f388 <_svfiprintf_r+0x1fc>
 800f2c0:	7821      	ldrb	r1, [r4, #0]
 800f2c2:	2203      	movs	r2, #3
 800f2c4:	4650      	mov	r0, sl
 800f2c6:	f7f0 ffab 	bl	8000220 <memchr>
 800f2ca:	b140      	cbz	r0, 800f2de <_svfiprintf_r+0x152>
 800f2cc:	2340      	movs	r3, #64	; 0x40
 800f2ce:	eba0 000a 	sub.w	r0, r0, sl
 800f2d2:	fa03 f000 	lsl.w	r0, r3, r0
 800f2d6:	9b04      	ldr	r3, [sp, #16]
 800f2d8:	4303      	orrs	r3, r0
 800f2da:	3401      	adds	r4, #1
 800f2dc:	9304      	str	r3, [sp, #16]
 800f2de:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f2e2:	4826      	ldr	r0, [pc, #152]	; (800f37c <_svfiprintf_r+0x1f0>)
 800f2e4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800f2e8:	2206      	movs	r2, #6
 800f2ea:	f7f0 ff99 	bl	8000220 <memchr>
 800f2ee:	2800      	cmp	r0, #0
 800f2f0:	d038      	beq.n	800f364 <_svfiprintf_r+0x1d8>
 800f2f2:	4b23      	ldr	r3, [pc, #140]	; (800f380 <_svfiprintf_r+0x1f4>)
 800f2f4:	bb1b      	cbnz	r3, 800f33e <_svfiprintf_r+0x1b2>
 800f2f6:	9b03      	ldr	r3, [sp, #12]
 800f2f8:	3307      	adds	r3, #7
 800f2fa:	f023 0307 	bic.w	r3, r3, #7
 800f2fe:	3308      	adds	r3, #8
 800f300:	9303      	str	r3, [sp, #12]
 800f302:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f304:	4433      	add	r3, r6
 800f306:	9309      	str	r3, [sp, #36]	; 0x24
 800f308:	e767      	b.n	800f1da <_svfiprintf_r+0x4e>
 800f30a:	fb0c 3202 	mla	r2, ip, r2, r3
 800f30e:	460c      	mov	r4, r1
 800f310:	2001      	movs	r0, #1
 800f312:	e7a5      	b.n	800f260 <_svfiprintf_r+0xd4>
 800f314:	2300      	movs	r3, #0
 800f316:	3401      	adds	r4, #1
 800f318:	9305      	str	r3, [sp, #20]
 800f31a:	4619      	mov	r1, r3
 800f31c:	f04f 0c0a 	mov.w	ip, #10
 800f320:	4620      	mov	r0, r4
 800f322:	f810 2b01 	ldrb.w	r2, [r0], #1
 800f326:	3a30      	subs	r2, #48	; 0x30
 800f328:	2a09      	cmp	r2, #9
 800f32a:	d903      	bls.n	800f334 <_svfiprintf_r+0x1a8>
 800f32c:	2b00      	cmp	r3, #0
 800f32e:	d0c5      	beq.n	800f2bc <_svfiprintf_r+0x130>
 800f330:	9105      	str	r1, [sp, #20]
 800f332:	e7c3      	b.n	800f2bc <_svfiprintf_r+0x130>
 800f334:	fb0c 2101 	mla	r1, ip, r1, r2
 800f338:	4604      	mov	r4, r0
 800f33a:	2301      	movs	r3, #1
 800f33c:	e7f0      	b.n	800f320 <_svfiprintf_r+0x194>
 800f33e:	ab03      	add	r3, sp, #12
 800f340:	9300      	str	r3, [sp, #0]
 800f342:	462a      	mov	r2, r5
 800f344:	4b0f      	ldr	r3, [pc, #60]	; (800f384 <_svfiprintf_r+0x1f8>)
 800f346:	a904      	add	r1, sp, #16
 800f348:	4638      	mov	r0, r7
 800f34a:	f7fd ffcb 	bl	800d2e4 <_printf_float>
 800f34e:	1c42      	adds	r2, r0, #1
 800f350:	4606      	mov	r6, r0
 800f352:	d1d6      	bne.n	800f302 <_svfiprintf_r+0x176>
 800f354:	89ab      	ldrh	r3, [r5, #12]
 800f356:	065b      	lsls	r3, r3, #25
 800f358:	f53f af2c 	bmi.w	800f1b4 <_svfiprintf_r+0x28>
 800f35c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f35e:	b01d      	add	sp, #116	; 0x74
 800f360:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f364:	ab03      	add	r3, sp, #12
 800f366:	9300      	str	r3, [sp, #0]
 800f368:	462a      	mov	r2, r5
 800f36a:	4b06      	ldr	r3, [pc, #24]	; (800f384 <_svfiprintf_r+0x1f8>)
 800f36c:	a904      	add	r1, sp, #16
 800f36e:	4638      	mov	r0, r7
 800f370:	f7fe fa5c 	bl	800d82c <_printf_i>
 800f374:	e7eb      	b.n	800f34e <_svfiprintf_r+0x1c2>
 800f376:	bf00      	nop
 800f378:	080117a4 	.word	0x080117a4
 800f37c:	080117ae 	.word	0x080117ae
 800f380:	0800d2e5 	.word	0x0800d2e5
 800f384:	0800f0d5 	.word	0x0800f0d5
 800f388:	080117aa 	.word	0x080117aa

0800f38c <_sbrk_r>:
 800f38c:	b538      	push	{r3, r4, r5, lr}
 800f38e:	4d06      	ldr	r5, [pc, #24]	; (800f3a8 <_sbrk_r+0x1c>)
 800f390:	2300      	movs	r3, #0
 800f392:	4604      	mov	r4, r0
 800f394:	4608      	mov	r0, r1
 800f396:	602b      	str	r3, [r5, #0]
 800f398:	f7f8 f934 	bl	8007604 <_sbrk>
 800f39c:	1c43      	adds	r3, r0, #1
 800f39e:	d102      	bne.n	800f3a6 <_sbrk_r+0x1a>
 800f3a0:	682b      	ldr	r3, [r5, #0]
 800f3a2:	b103      	cbz	r3, 800f3a6 <_sbrk_r+0x1a>
 800f3a4:	6023      	str	r3, [r4, #0]
 800f3a6:	bd38      	pop	{r3, r4, r5, pc}
 800f3a8:	20000c94 	.word	0x20000c94

0800f3ac <__assert_func>:
 800f3ac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f3ae:	4614      	mov	r4, r2
 800f3b0:	461a      	mov	r2, r3
 800f3b2:	4b09      	ldr	r3, [pc, #36]	; (800f3d8 <__assert_func+0x2c>)
 800f3b4:	681b      	ldr	r3, [r3, #0]
 800f3b6:	4605      	mov	r5, r0
 800f3b8:	68d8      	ldr	r0, [r3, #12]
 800f3ba:	b14c      	cbz	r4, 800f3d0 <__assert_func+0x24>
 800f3bc:	4b07      	ldr	r3, [pc, #28]	; (800f3dc <__assert_func+0x30>)
 800f3be:	9100      	str	r1, [sp, #0]
 800f3c0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f3c4:	4906      	ldr	r1, [pc, #24]	; (800f3e0 <__assert_func+0x34>)
 800f3c6:	462b      	mov	r3, r5
 800f3c8:	f000 f80e 	bl	800f3e8 <fiprintf>
 800f3cc:	f000 faac 	bl	800f928 <abort>
 800f3d0:	4b04      	ldr	r3, [pc, #16]	; (800f3e4 <__assert_func+0x38>)
 800f3d2:	461c      	mov	r4, r3
 800f3d4:	e7f3      	b.n	800f3be <__assert_func+0x12>
 800f3d6:	bf00      	nop
 800f3d8:	20000140 	.word	0x20000140
 800f3dc:	080117b5 	.word	0x080117b5
 800f3e0:	080117c2 	.word	0x080117c2
 800f3e4:	080117f0 	.word	0x080117f0

0800f3e8 <fiprintf>:
 800f3e8:	b40e      	push	{r1, r2, r3}
 800f3ea:	b503      	push	{r0, r1, lr}
 800f3ec:	4601      	mov	r1, r0
 800f3ee:	ab03      	add	r3, sp, #12
 800f3f0:	4805      	ldr	r0, [pc, #20]	; (800f408 <fiprintf+0x20>)
 800f3f2:	f853 2b04 	ldr.w	r2, [r3], #4
 800f3f6:	6800      	ldr	r0, [r0, #0]
 800f3f8:	9301      	str	r3, [sp, #4]
 800f3fa:	f000 f897 	bl	800f52c <_vfiprintf_r>
 800f3fe:	b002      	add	sp, #8
 800f400:	f85d eb04 	ldr.w	lr, [sp], #4
 800f404:	b003      	add	sp, #12
 800f406:	4770      	bx	lr
 800f408:	20000140 	.word	0x20000140

0800f40c <__ascii_mbtowc>:
 800f40c:	b082      	sub	sp, #8
 800f40e:	b901      	cbnz	r1, 800f412 <__ascii_mbtowc+0x6>
 800f410:	a901      	add	r1, sp, #4
 800f412:	b142      	cbz	r2, 800f426 <__ascii_mbtowc+0x1a>
 800f414:	b14b      	cbz	r3, 800f42a <__ascii_mbtowc+0x1e>
 800f416:	7813      	ldrb	r3, [r2, #0]
 800f418:	600b      	str	r3, [r1, #0]
 800f41a:	7812      	ldrb	r2, [r2, #0]
 800f41c:	1e10      	subs	r0, r2, #0
 800f41e:	bf18      	it	ne
 800f420:	2001      	movne	r0, #1
 800f422:	b002      	add	sp, #8
 800f424:	4770      	bx	lr
 800f426:	4610      	mov	r0, r2
 800f428:	e7fb      	b.n	800f422 <__ascii_mbtowc+0x16>
 800f42a:	f06f 0001 	mvn.w	r0, #1
 800f42e:	e7f8      	b.n	800f422 <__ascii_mbtowc+0x16>

0800f430 <memmove>:
 800f430:	4288      	cmp	r0, r1
 800f432:	b510      	push	{r4, lr}
 800f434:	eb01 0402 	add.w	r4, r1, r2
 800f438:	d902      	bls.n	800f440 <memmove+0x10>
 800f43a:	4284      	cmp	r4, r0
 800f43c:	4623      	mov	r3, r4
 800f43e:	d807      	bhi.n	800f450 <memmove+0x20>
 800f440:	1e43      	subs	r3, r0, #1
 800f442:	42a1      	cmp	r1, r4
 800f444:	d008      	beq.n	800f458 <memmove+0x28>
 800f446:	f811 2b01 	ldrb.w	r2, [r1], #1
 800f44a:	f803 2f01 	strb.w	r2, [r3, #1]!
 800f44e:	e7f8      	b.n	800f442 <memmove+0x12>
 800f450:	4402      	add	r2, r0
 800f452:	4601      	mov	r1, r0
 800f454:	428a      	cmp	r2, r1
 800f456:	d100      	bne.n	800f45a <memmove+0x2a>
 800f458:	bd10      	pop	{r4, pc}
 800f45a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800f45e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800f462:	e7f7      	b.n	800f454 <memmove+0x24>

0800f464 <__malloc_lock>:
 800f464:	4801      	ldr	r0, [pc, #4]	; (800f46c <__malloc_lock+0x8>)
 800f466:	f000 bc1f 	b.w	800fca8 <__retarget_lock_acquire_recursive>
 800f46a:	bf00      	nop
 800f46c:	20000c98 	.word	0x20000c98

0800f470 <__malloc_unlock>:
 800f470:	4801      	ldr	r0, [pc, #4]	; (800f478 <__malloc_unlock+0x8>)
 800f472:	f000 bc1a 	b.w	800fcaa <__retarget_lock_release_recursive>
 800f476:	bf00      	nop
 800f478:	20000c98 	.word	0x20000c98

0800f47c <_realloc_r>:
 800f47c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f480:	4680      	mov	r8, r0
 800f482:	4614      	mov	r4, r2
 800f484:	460e      	mov	r6, r1
 800f486:	b921      	cbnz	r1, 800f492 <_realloc_r+0x16>
 800f488:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f48c:	4611      	mov	r1, r2
 800f48e:	f7ff bdad 	b.w	800efec <_malloc_r>
 800f492:	b92a      	cbnz	r2, 800f4a0 <_realloc_r+0x24>
 800f494:	f7ff fd3e 	bl	800ef14 <_free_r>
 800f498:	4625      	mov	r5, r4
 800f49a:	4628      	mov	r0, r5
 800f49c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f4a0:	f000 fc6a 	bl	800fd78 <_malloc_usable_size_r>
 800f4a4:	4284      	cmp	r4, r0
 800f4a6:	4607      	mov	r7, r0
 800f4a8:	d802      	bhi.n	800f4b0 <_realloc_r+0x34>
 800f4aa:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800f4ae:	d812      	bhi.n	800f4d6 <_realloc_r+0x5a>
 800f4b0:	4621      	mov	r1, r4
 800f4b2:	4640      	mov	r0, r8
 800f4b4:	f7ff fd9a 	bl	800efec <_malloc_r>
 800f4b8:	4605      	mov	r5, r0
 800f4ba:	2800      	cmp	r0, #0
 800f4bc:	d0ed      	beq.n	800f49a <_realloc_r+0x1e>
 800f4be:	42bc      	cmp	r4, r7
 800f4c0:	4622      	mov	r2, r4
 800f4c2:	4631      	mov	r1, r6
 800f4c4:	bf28      	it	cs
 800f4c6:	463a      	movcs	r2, r7
 800f4c8:	f7ff f97c 	bl	800e7c4 <memcpy>
 800f4cc:	4631      	mov	r1, r6
 800f4ce:	4640      	mov	r0, r8
 800f4d0:	f7ff fd20 	bl	800ef14 <_free_r>
 800f4d4:	e7e1      	b.n	800f49a <_realloc_r+0x1e>
 800f4d6:	4635      	mov	r5, r6
 800f4d8:	e7df      	b.n	800f49a <_realloc_r+0x1e>

0800f4da <__sfputc_r>:
 800f4da:	6893      	ldr	r3, [r2, #8]
 800f4dc:	3b01      	subs	r3, #1
 800f4de:	2b00      	cmp	r3, #0
 800f4e0:	b410      	push	{r4}
 800f4e2:	6093      	str	r3, [r2, #8]
 800f4e4:	da08      	bge.n	800f4f8 <__sfputc_r+0x1e>
 800f4e6:	6994      	ldr	r4, [r2, #24]
 800f4e8:	42a3      	cmp	r3, r4
 800f4ea:	db01      	blt.n	800f4f0 <__sfputc_r+0x16>
 800f4ec:	290a      	cmp	r1, #10
 800f4ee:	d103      	bne.n	800f4f8 <__sfputc_r+0x1e>
 800f4f0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f4f4:	f000 b94a 	b.w	800f78c <__swbuf_r>
 800f4f8:	6813      	ldr	r3, [r2, #0]
 800f4fa:	1c58      	adds	r0, r3, #1
 800f4fc:	6010      	str	r0, [r2, #0]
 800f4fe:	7019      	strb	r1, [r3, #0]
 800f500:	4608      	mov	r0, r1
 800f502:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f506:	4770      	bx	lr

0800f508 <__sfputs_r>:
 800f508:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f50a:	4606      	mov	r6, r0
 800f50c:	460f      	mov	r7, r1
 800f50e:	4614      	mov	r4, r2
 800f510:	18d5      	adds	r5, r2, r3
 800f512:	42ac      	cmp	r4, r5
 800f514:	d101      	bne.n	800f51a <__sfputs_r+0x12>
 800f516:	2000      	movs	r0, #0
 800f518:	e007      	b.n	800f52a <__sfputs_r+0x22>
 800f51a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f51e:	463a      	mov	r2, r7
 800f520:	4630      	mov	r0, r6
 800f522:	f7ff ffda 	bl	800f4da <__sfputc_r>
 800f526:	1c43      	adds	r3, r0, #1
 800f528:	d1f3      	bne.n	800f512 <__sfputs_r+0xa>
 800f52a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f52c <_vfiprintf_r>:
 800f52c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f530:	460d      	mov	r5, r1
 800f532:	b09d      	sub	sp, #116	; 0x74
 800f534:	4614      	mov	r4, r2
 800f536:	4698      	mov	r8, r3
 800f538:	4606      	mov	r6, r0
 800f53a:	b118      	cbz	r0, 800f544 <_vfiprintf_r+0x18>
 800f53c:	6983      	ldr	r3, [r0, #24]
 800f53e:	b90b      	cbnz	r3, 800f544 <_vfiprintf_r+0x18>
 800f540:	f000 fb14 	bl	800fb6c <__sinit>
 800f544:	4b89      	ldr	r3, [pc, #548]	; (800f76c <_vfiprintf_r+0x240>)
 800f546:	429d      	cmp	r5, r3
 800f548:	d11b      	bne.n	800f582 <_vfiprintf_r+0x56>
 800f54a:	6875      	ldr	r5, [r6, #4]
 800f54c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800f54e:	07d9      	lsls	r1, r3, #31
 800f550:	d405      	bmi.n	800f55e <_vfiprintf_r+0x32>
 800f552:	89ab      	ldrh	r3, [r5, #12]
 800f554:	059a      	lsls	r2, r3, #22
 800f556:	d402      	bmi.n	800f55e <_vfiprintf_r+0x32>
 800f558:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800f55a:	f000 fba5 	bl	800fca8 <__retarget_lock_acquire_recursive>
 800f55e:	89ab      	ldrh	r3, [r5, #12]
 800f560:	071b      	lsls	r3, r3, #28
 800f562:	d501      	bpl.n	800f568 <_vfiprintf_r+0x3c>
 800f564:	692b      	ldr	r3, [r5, #16]
 800f566:	b9eb      	cbnz	r3, 800f5a4 <_vfiprintf_r+0x78>
 800f568:	4629      	mov	r1, r5
 800f56a:	4630      	mov	r0, r6
 800f56c:	f000 f96e 	bl	800f84c <__swsetup_r>
 800f570:	b1c0      	cbz	r0, 800f5a4 <_vfiprintf_r+0x78>
 800f572:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800f574:	07dc      	lsls	r4, r3, #31
 800f576:	d50e      	bpl.n	800f596 <_vfiprintf_r+0x6a>
 800f578:	f04f 30ff 	mov.w	r0, #4294967295
 800f57c:	b01d      	add	sp, #116	; 0x74
 800f57e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f582:	4b7b      	ldr	r3, [pc, #492]	; (800f770 <_vfiprintf_r+0x244>)
 800f584:	429d      	cmp	r5, r3
 800f586:	d101      	bne.n	800f58c <_vfiprintf_r+0x60>
 800f588:	68b5      	ldr	r5, [r6, #8]
 800f58a:	e7df      	b.n	800f54c <_vfiprintf_r+0x20>
 800f58c:	4b79      	ldr	r3, [pc, #484]	; (800f774 <_vfiprintf_r+0x248>)
 800f58e:	429d      	cmp	r5, r3
 800f590:	bf08      	it	eq
 800f592:	68f5      	ldreq	r5, [r6, #12]
 800f594:	e7da      	b.n	800f54c <_vfiprintf_r+0x20>
 800f596:	89ab      	ldrh	r3, [r5, #12]
 800f598:	0598      	lsls	r0, r3, #22
 800f59a:	d4ed      	bmi.n	800f578 <_vfiprintf_r+0x4c>
 800f59c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800f59e:	f000 fb84 	bl	800fcaa <__retarget_lock_release_recursive>
 800f5a2:	e7e9      	b.n	800f578 <_vfiprintf_r+0x4c>
 800f5a4:	2300      	movs	r3, #0
 800f5a6:	9309      	str	r3, [sp, #36]	; 0x24
 800f5a8:	2320      	movs	r3, #32
 800f5aa:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800f5ae:	f8cd 800c 	str.w	r8, [sp, #12]
 800f5b2:	2330      	movs	r3, #48	; 0x30
 800f5b4:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800f778 <_vfiprintf_r+0x24c>
 800f5b8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800f5bc:	f04f 0901 	mov.w	r9, #1
 800f5c0:	4623      	mov	r3, r4
 800f5c2:	469a      	mov	sl, r3
 800f5c4:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f5c8:	b10a      	cbz	r2, 800f5ce <_vfiprintf_r+0xa2>
 800f5ca:	2a25      	cmp	r2, #37	; 0x25
 800f5cc:	d1f9      	bne.n	800f5c2 <_vfiprintf_r+0x96>
 800f5ce:	ebba 0b04 	subs.w	fp, sl, r4
 800f5d2:	d00b      	beq.n	800f5ec <_vfiprintf_r+0xc0>
 800f5d4:	465b      	mov	r3, fp
 800f5d6:	4622      	mov	r2, r4
 800f5d8:	4629      	mov	r1, r5
 800f5da:	4630      	mov	r0, r6
 800f5dc:	f7ff ff94 	bl	800f508 <__sfputs_r>
 800f5e0:	3001      	adds	r0, #1
 800f5e2:	f000 80aa 	beq.w	800f73a <_vfiprintf_r+0x20e>
 800f5e6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f5e8:	445a      	add	r2, fp
 800f5ea:	9209      	str	r2, [sp, #36]	; 0x24
 800f5ec:	f89a 3000 	ldrb.w	r3, [sl]
 800f5f0:	2b00      	cmp	r3, #0
 800f5f2:	f000 80a2 	beq.w	800f73a <_vfiprintf_r+0x20e>
 800f5f6:	2300      	movs	r3, #0
 800f5f8:	f04f 32ff 	mov.w	r2, #4294967295
 800f5fc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800f600:	f10a 0a01 	add.w	sl, sl, #1
 800f604:	9304      	str	r3, [sp, #16]
 800f606:	9307      	str	r3, [sp, #28]
 800f608:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800f60c:	931a      	str	r3, [sp, #104]	; 0x68
 800f60e:	4654      	mov	r4, sl
 800f610:	2205      	movs	r2, #5
 800f612:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f616:	4858      	ldr	r0, [pc, #352]	; (800f778 <_vfiprintf_r+0x24c>)
 800f618:	f7f0 fe02 	bl	8000220 <memchr>
 800f61c:	9a04      	ldr	r2, [sp, #16]
 800f61e:	b9d8      	cbnz	r0, 800f658 <_vfiprintf_r+0x12c>
 800f620:	06d1      	lsls	r1, r2, #27
 800f622:	bf44      	itt	mi
 800f624:	2320      	movmi	r3, #32
 800f626:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800f62a:	0713      	lsls	r3, r2, #28
 800f62c:	bf44      	itt	mi
 800f62e:	232b      	movmi	r3, #43	; 0x2b
 800f630:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800f634:	f89a 3000 	ldrb.w	r3, [sl]
 800f638:	2b2a      	cmp	r3, #42	; 0x2a
 800f63a:	d015      	beq.n	800f668 <_vfiprintf_r+0x13c>
 800f63c:	9a07      	ldr	r2, [sp, #28]
 800f63e:	4654      	mov	r4, sl
 800f640:	2000      	movs	r0, #0
 800f642:	f04f 0c0a 	mov.w	ip, #10
 800f646:	4621      	mov	r1, r4
 800f648:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f64c:	3b30      	subs	r3, #48	; 0x30
 800f64e:	2b09      	cmp	r3, #9
 800f650:	d94e      	bls.n	800f6f0 <_vfiprintf_r+0x1c4>
 800f652:	b1b0      	cbz	r0, 800f682 <_vfiprintf_r+0x156>
 800f654:	9207      	str	r2, [sp, #28]
 800f656:	e014      	b.n	800f682 <_vfiprintf_r+0x156>
 800f658:	eba0 0308 	sub.w	r3, r0, r8
 800f65c:	fa09 f303 	lsl.w	r3, r9, r3
 800f660:	4313      	orrs	r3, r2
 800f662:	9304      	str	r3, [sp, #16]
 800f664:	46a2      	mov	sl, r4
 800f666:	e7d2      	b.n	800f60e <_vfiprintf_r+0xe2>
 800f668:	9b03      	ldr	r3, [sp, #12]
 800f66a:	1d19      	adds	r1, r3, #4
 800f66c:	681b      	ldr	r3, [r3, #0]
 800f66e:	9103      	str	r1, [sp, #12]
 800f670:	2b00      	cmp	r3, #0
 800f672:	bfbb      	ittet	lt
 800f674:	425b      	neglt	r3, r3
 800f676:	f042 0202 	orrlt.w	r2, r2, #2
 800f67a:	9307      	strge	r3, [sp, #28]
 800f67c:	9307      	strlt	r3, [sp, #28]
 800f67e:	bfb8      	it	lt
 800f680:	9204      	strlt	r2, [sp, #16]
 800f682:	7823      	ldrb	r3, [r4, #0]
 800f684:	2b2e      	cmp	r3, #46	; 0x2e
 800f686:	d10c      	bne.n	800f6a2 <_vfiprintf_r+0x176>
 800f688:	7863      	ldrb	r3, [r4, #1]
 800f68a:	2b2a      	cmp	r3, #42	; 0x2a
 800f68c:	d135      	bne.n	800f6fa <_vfiprintf_r+0x1ce>
 800f68e:	9b03      	ldr	r3, [sp, #12]
 800f690:	1d1a      	adds	r2, r3, #4
 800f692:	681b      	ldr	r3, [r3, #0]
 800f694:	9203      	str	r2, [sp, #12]
 800f696:	2b00      	cmp	r3, #0
 800f698:	bfb8      	it	lt
 800f69a:	f04f 33ff 	movlt.w	r3, #4294967295
 800f69e:	3402      	adds	r4, #2
 800f6a0:	9305      	str	r3, [sp, #20]
 800f6a2:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800f788 <_vfiprintf_r+0x25c>
 800f6a6:	7821      	ldrb	r1, [r4, #0]
 800f6a8:	2203      	movs	r2, #3
 800f6aa:	4650      	mov	r0, sl
 800f6ac:	f7f0 fdb8 	bl	8000220 <memchr>
 800f6b0:	b140      	cbz	r0, 800f6c4 <_vfiprintf_r+0x198>
 800f6b2:	2340      	movs	r3, #64	; 0x40
 800f6b4:	eba0 000a 	sub.w	r0, r0, sl
 800f6b8:	fa03 f000 	lsl.w	r0, r3, r0
 800f6bc:	9b04      	ldr	r3, [sp, #16]
 800f6be:	4303      	orrs	r3, r0
 800f6c0:	3401      	adds	r4, #1
 800f6c2:	9304      	str	r3, [sp, #16]
 800f6c4:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f6c8:	482c      	ldr	r0, [pc, #176]	; (800f77c <_vfiprintf_r+0x250>)
 800f6ca:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800f6ce:	2206      	movs	r2, #6
 800f6d0:	f7f0 fda6 	bl	8000220 <memchr>
 800f6d4:	2800      	cmp	r0, #0
 800f6d6:	d03f      	beq.n	800f758 <_vfiprintf_r+0x22c>
 800f6d8:	4b29      	ldr	r3, [pc, #164]	; (800f780 <_vfiprintf_r+0x254>)
 800f6da:	bb1b      	cbnz	r3, 800f724 <_vfiprintf_r+0x1f8>
 800f6dc:	9b03      	ldr	r3, [sp, #12]
 800f6de:	3307      	adds	r3, #7
 800f6e0:	f023 0307 	bic.w	r3, r3, #7
 800f6e4:	3308      	adds	r3, #8
 800f6e6:	9303      	str	r3, [sp, #12]
 800f6e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f6ea:	443b      	add	r3, r7
 800f6ec:	9309      	str	r3, [sp, #36]	; 0x24
 800f6ee:	e767      	b.n	800f5c0 <_vfiprintf_r+0x94>
 800f6f0:	fb0c 3202 	mla	r2, ip, r2, r3
 800f6f4:	460c      	mov	r4, r1
 800f6f6:	2001      	movs	r0, #1
 800f6f8:	e7a5      	b.n	800f646 <_vfiprintf_r+0x11a>
 800f6fa:	2300      	movs	r3, #0
 800f6fc:	3401      	adds	r4, #1
 800f6fe:	9305      	str	r3, [sp, #20]
 800f700:	4619      	mov	r1, r3
 800f702:	f04f 0c0a 	mov.w	ip, #10
 800f706:	4620      	mov	r0, r4
 800f708:	f810 2b01 	ldrb.w	r2, [r0], #1
 800f70c:	3a30      	subs	r2, #48	; 0x30
 800f70e:	2a09      	cmp	r2, #9
 800f710:	d903      	bls.n	800f71a <_vfiprintf_r+0x1ee>
 800f712:	2b00      	cmp	r3, #0
 800f714:	d0c5      	beq.n	800f6a2 <_vfiprintf_r+0x176>
 800f716:	9105      	str	r1, [sp, #20]
 800f718:	e7c3      	b.n	800f6a2 <_vfiprintf_r+0x176>
 800f71a:	fb0c 2101 	mla	r1, ip, r1, r2
 800f71e:	4604      	mov	r4, r0
 800f720:	2301      	movs	r3, #1
 800f722:	e7f0      	b.n	800f706 <_vfiprintf_r+0x1da>
 800f724:	ab03      	add	r3, sp, #12
 800f726:	9300      	str	r3, [sp, #0]
 800f728:	462a      	mov	r2, r5
 800f72a:	4b16      	ldr	r3, [pc, #88]	; (800f784 <_vfiprintf_r+0x258>)
 800f72c:	a904      	add	r1, sp, #16
 800f72e:	4630      	mov	r0, r6
 800f730:	f7fd fdd8 	bl	800d2e4 <_printf_float>
 800f734:	4607      	mov	r7, r0
 800f736:	1c78      	adds	r0, r7, #1
 800f738:	d1d6      	bne.n	800f6e8 <_vfiprintf_r+0x1bc>
 800f73a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800f73c:	07d9      	lsls	r1, r3, #31
 800f73e:	d405      	bmi.n	800f74c <_vfiprintf_r+0x220>
 800f740:	89ab      	ldrh	r3, [r5, #12]
 800f742:	059a      	lsls	r2, r3, #22
 800f744:	d402      	bmi.n	800f74c <_vfiprintf_r+0x220>
 800f746:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800f748:	f000 faaf 	bl	800fcaa <__retarget_lock_release_recursive>
 800f74c:	89ab      	ldrh	r3, [r5, #12]
 800f74e:	065b      	lsls	r3, r3, #25
 800f750:	f53f af12 	bmi.w	800f578 <_vfiprintf_r+0x4c>
 800f754:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f756:	e711      	b.n	800f57c <_vfiprintf_r+0x50>
 800f758:	ab03      	add	r3, sp, #12
 800f75a:	9300      	str	r3, [sp, #0]
 800f75c:	462a      	mov	r2, r5
 800f75e:	4b09      	ldr	r3, [pc, #36]	; (800f784 <_vfiprintf_r+0x258>)
 800f760:	a904      	add	r1, sp, #16
 800f762:	4630      	mov	r0, r6
 800f764:	f7fe f862 	bl	800d82c <_printf_i>
 800f768:	e7e4      	b.n	800f734 <_vfiprintf_r+0x208>
 800f76a:	bf00      	nop
 800f76c:	0801191c 	.word	0x0801191c
 800f770:	0801193c 	.word	0x0801193c
 800f774:	080118fc 	.word	0x080118fc
 800f778:	080117a4 	.word	0x080117a4
 800f77c:	080117ae 	.word	0x080117ae
 800f780:	0800d2e5 	.word	0x0800d2e5
 800f784:	0800f509 	.word	0x0800f509
 800f788:	080117aa 	.word	0x080117aa

0800f78c <__swbuf_r>:
 800f78c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f78e:	460e      	mov	r6, r1
 800f790:	4614      	mov	r4, r2
 800f792:	4605      	mov	r5, r0
 800f794:	b118      	cbz	r0, 800f79e <__swbuf_r+0x12>
 800f796:	6983      	ldr	r3, [r0, #24]
 800f798:	b90b      	cbnz	r3, 800f79e <__swbuf_r+0x12>
 800f79a:	f000 f9e7 	bl	800fb6c <__sinit>
 800f79e:	4b21      	ldr	r3, [pc, #132]	; (800f824 <__swbuf_r+0x98>)
 800f7a0:	429c      	cmp	r4, r3
 800f7a2:	d12b      	bne.n	800f7fc <__swbuf_r+0x70>
 800f7a4:	686c      	ldr	r4, [r5, #4]
 800f7a6:	69a3      	ldr	r3, [r4, #24]
 800f7a8:	60a3      	str	r3, [r4, #8]
 800f7aa:	89a3      	ldrh	r3, [r4, #12]
 800f7ac:	071a      	lsls	r2, r3, #28
 800f7ae:	d52f      	bpl.n	800f810 <__swbuf_r+0x84>
 800f7b0:	6923      	ldr	r3, [r4, #16]
 800f7b2:	b36b      	cbz	r3, 800f810 <__swbuf_r+0x84>
 800f7b4:	6923      	ldr	r3, [r4, #16]
 800f7b6:	6820      	ldr	r0, [r4, #0]
 800f7b8:	1ac0      	subs	r0, r0, r3
 800f7ba:	6963      	ldr	r3, [r4, #20]
 800f7bc:	b2f6      	uxtb	r6, r6
 800f7be:	4283      	cmp	r3, r0
 800f7c0:	4637      	mov	r7, r6
 800f7c2:	dc04      	bgt.n	800f7ce <__swbuf_r+0x42>
 800f7c4:	4621      	mov	r1, r4
 800f7c6:	4628      	mov	r0, r5
 800f7c8:	f000 f93c 	bl	800fa44 <_fflush_r>
 800f7cc:	bb30      	cbnz	r0, 800f81c <__swbuf_r+0x90>
 800f7ce:	68a3      	ldr	r3, [r4, #8]
 800f7d0:	3b01      	subs	r3, #1
 800f7d2:	60a3      	str	r3, [r4, #8]
 800f7d4:	6823      	ldr	r3, [r4, #0]
 800f7d6:	1c5a      	adds	r2, r3, #1
 800f7d8:	6022      	str	r2, [r4, #0]
 800f7da:	701e      	strb	r6, [r3, #0]
 800f7dc:	6963      	ldr	r3, [r4, #20]
 800f7de:	3001      	adds	r0, #1
 800f7e0:	4283      	cmp	r3, r0
 800f7e2:	d004      	beq.n	800f7ee <__swbuf_r+0x62>
 800f7e4:	89a3      	ldrh	r3, [r4, #12]
 800f7e6:	07db      	lsls	r3, r3, #31
 800f7e8:	d506      	bpl.n	800f7f8 <__swbuf_r+0x6c>
 800f7ea:	2e0a      	cmp	r6, #10
 800f7ec:	d104      	bne.n	800f7f8 <__swbuf_r+0x6c>
 800f7ee:	4621      	mov	r1, r4
 800f7f0:	4628      	mov	r0, r5
 800f7f2:	f000 f927 	bl	800fa44 <_fflush_r>
 800f7f6:	b988      	cbnz	r0, 800f81c <__swbuf_r+0x90>
 800f7f8:	4638      	mov	r0, r7
 800f7fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f7fc:	4b0a      	ldr	r3, [pc, #40]	; (800f828 <__swbuf_r+0x9c>)
 800f7fe:	429c      	cmp	r4, r3
 800f800:	d101      	bne.n	800f806 <__swbuf_r+0x7a>
 800f802:	68ac      	ldr	r4, [r5, #8]
 800f804:	e7cf      	b.n	800f7a6 <__swbuf_r+0x1a>
 800f806:	4b09      	ldr	r3, [pc, #36]	; (800f82c <__swbuf_r+0xa0>)
 800f808:	429c      	cmp	r4, r3
 800f80a:	bf08      	it	eq
 800f80c:	68ec      	ldreq	r4, [r5, #12]
 800f80e:	e7ca      	b.n	800f7a6 <__swbuf_r+0x1a>
 800f810:	4621      	mov	r1, r4
 800f812:	4628      	mov	r0, r5
 800f814:	f000 f81a 	bl	800f84c <__swsetup_r>
 800f818:	2800      	cmp	r0, #0
 800f81a:	d0cb      	beq.n	800f7b4 <__swbuf_r+0x28>
 800f81c:	f04f 37ff 	mov.w	r7, #4294967295
 800f820:	e7ea      	b.n	800f7f8 <__swbuf_r+0x6c>
 800f822:	bf00      	nop
 800f824:	0801191c 	.word	0x0801191c
 800f828:	0801193c 	.word	0x0801193c
 800f82c:	080118fc 	.word	0x080118fc

0800f830 <__ascii_wctomb>:
 800f830:	b149      	cbz	r1, 800f846 <__ascii_wctomb+0x16>
 800f832:	2aff      	cmp	r2, #255	; 0xff
 800f834:	bf85      	ittet	hi
 800f836:	238a      	movhi	r3, #138	; 0x8a
 800f838:	6003      	strhi	r3, [r0, #0]
 800f83a:	700a      	strbls	r2, [r1, #0]
 800f83c:	f04f 30ff 	movhi.w	r0, #4294967295
 800f840:	bf98      	it	ls
 800f842:	2001      	movls	r0, #1
 800f844:	4770      	bx	lr
 800f846:	4608      	mov	r0, r1
 800f848:	4770      	bx	lr
	...

0800f84c <__swsetup_r>:
 800f84c:	4b32      	ldr	r3, [pc, #200]	; (800f918 <__swsetup_r+0xcc>)
 800f84e:	b570      	push	{r4, r5, r6, lr}
 800f850:	681d      	ldr	r5, [r3, #0]
 800f852:	4606      	mov	r6, r0
 800f854:	460c      	mov	r4, r1
 800f856:	b125      	cbz	r5, 800f862 <__swsetup_r+0x16>
 800f858:	69ab      	ldr	r3, [r5, #24]
 800f85a:	b913      	cbnz	r3, 800f862 <__swsetup_r+0x16>
 800f85c:	4628      	mov	r0, r5
 800f85e:	f000 f985 	bl	800fb6c <__sinit>
 800f862:	4b2e      	ldr	r3, [pc, #184]	; (800f91c <__swsetup_r+0xd0>)
 800f864:	429c      	cmp	r4, r3
 800f866:	d10f      	bne.n	800f888 <__swsetup_r+0x3c>
 800f868:	686c      	ldr	r4, [r5, #4]
 800f86a:	89a3      	ldrh	r3, [r4, #12]
 800f86c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800f870:	0719      	lsls	r1, r3, #28
 800f872:	d42c      	bmi.n	800f8ce <__swsetup_r+0x82>
 800f874:	06dd      	lsls	r5, r3, #27
 800f876:	d411      	bmi.n	800f89c <__swsetup_r+0x50>
 800f878:	2309      	movs	r3, #9
 800f87a:	6033      	str	r3, [r6, #0]
 800f87c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800f880:	81a3      	strh	r3, [r4, #12]
 800f882:	f04f 30ff 	mov.w	r0, #4294967295
 800f886:	e03e      	b.n	800f906 <__swsetup_r+0xba>
 800f888:	4b25      	ldr	r3, [pc, #148]	; (800f920 <__swsetup_r+0xd4>)
 800f88a:	429c      	cmp	r4, r3
 800f88c:	d101      	bne.n	800f892 <__swsetup_r+0x46>
 800f88e:	68ac      	ldr	r4, [r5, #8]
 800f890:	e7eb      	b.n	800f86a <__swsetup_r+0x1e>
 800f892:	4b24      	ldr	r3, [pc, #144]	; (800f924 <__swsetup_r+0xd8>)
 800f894:	429c      	cmp	r4, r3
 800f896:	bf08      	it	eq
 800f898:	68ec      	ldreq	r4, [r5, #12]
 800f89a:	e7e6      	b.n	800f86a <__swsetup_r+0x1e>
 800f89c:	0758      	lsls	r0, r3, #29
 800f89e:	d512      	bpl.n	800f8c6 <__swsetup_r+0x7a>
 800f8a0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800f8a2:	b141      	cbz	r1, 800f8b6 <__swsetup_r+0x6a>
 800f8a4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800f8a8:	4299      	cmp	r1, r3
 800f8aa:	d002      	beq.n	800f8b2 <__swsetup_r+0x66>
 800f8ac:	4630      	mov	r0, r6
 800f8ae:	f7ff fb31 	bl	800ef14 <_free_r>
 800f8b2:	2300      	movs	r3, #0
 800f8b4:	6363      	str	r3, [r4, #52]	; 0x34
 800f8b6:	89a3      	ldrh	r3, [r4, #12]
 800f8b8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800f8bc:	81a3      	strh	r3, [r4, #12]
 800f8be:	2300      	movs	r3, #0
 800f8c0:	6063      	str	r3, [r4, #4]
 800f8c2:	6923      	ldr	r3, [r4, #16]
 800f8c4:	6023      	str	r3, [r4, #0]
 800f8c6:	89a3      	ldrh	r3, [r4, #12]
 800f8c8:	f043 0308 	orr.w	r3, r3, #8
 800f8cc:	81a3      	strh	r3, [r4, #12]
 800f8ce:	6923      	ldr	r3, [r4, #16]
 800f8d0:	b94b      	cbnz	r3, 800f8e6 <__swsetup_r+0x9a>
 800f8d2:	89a3      	ldrh	r3, [r4, #12]
 800f8d4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800f8d8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800f8dc:	d003      	beq.n	800f8e6 <__swsetup_r+0x9a>
 800f8de:	4621      	mov	r1, r4
 800f8e0:	4630      	mov	r0, r6
 800f8e2:	f000 fa09 	bl	800fcf8 <__smakebuf_r>
 800f8e6:	89a0      	ldrh	r0, [r4, #12]
 800f8e8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800f8ec:	f010 0301 	ands.w	r3, r0, #1
 800f8f0:	d00a      	beq.n	800f908 <__swsetup_r+0xbc>
 800f8f2:	2300      	movs	r3, #0
 800f8f4:	60a3      	str	r3, [r4, #8]
 800f8f6:	6963      	ldr	r3, [r4, #20]
 800f8f8:	425b      	negs	r3, r3
 800f8fa:	61a3      	str	r3, [r4, #24]
 800f8fc:	6923      	ldr	r3, [r4, #16]
 800f8fe:	b943      	cbnz	r3, 800f912 <__swsetup_r+0xc6>
 800f900:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800f904:	d1ba      	bne.n	800f87c <__swsetup_r+0x30>
 800f906:	bd70      	pop	{r4, r5, r6, pc}
 800f908:	0781      	lsls	r1, r0, #30
 800f90a:	bf58      	it	pl
 800f90c:	6963      	ldrpl	r3, [r4, #20]
 800f90e:	60a3      	str	r3, [r4, #8]
 800f910:	e7f4      	b.n	800f8fc <__swsetup_r+0xb0>
 800f912:	2000      	movs	r0, #0
 800f914:	e7f7      	b.n	800f906 <__swsetup_r+0xba>
 800f916:	bf00      	nop
 800f918:	20000140 	.word	0x20000140
 800f91c:	0801191c 	.word	0x0801191c
 800f920:	0801193c 	.word	0x0801193c
 800f924:	080118fc 	.word	0x080118fc

0800f928 <abort>:
 800f928:	b508      	push	{r3, lr}
 800f92a:	2006      	movs	r0, #6
 800f92c:	f000 fa54 	bl	800fdd8 <raise>
 800f930:	2001      	movs	r0, #1
 800f932:	f7f7 fdef 	bl	8007514 <_exit>
	...

0800f938 <__sflush_r>:
 800f938:	898a      	ldrh	r2, [r1, #12]
 800f93a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f93e:	4605      	mov	r5, r0
 800f940:	0710      	lsls	r0, r2, #28
 800f942:	460c      	mov	r4, r1
 800f944:	d458      	bmi.n	800f9f8 <__sflush_r+0xc0>
 800f946:	684b      	ldr	r3, [r1, #4]
 800f948:	2b00      	cmp	r3, #0
 800f94a:	dc05      	bgt.n	800f958 <__sflush_r+0x20>
 800f94c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800f94e:	2b00      	cmp	r3, #0
 800f950:	dc02      	bgt.n	800f958 <__sflush_r+0x20>
 800f952:	2000      	movs	r0, #0
 800f954:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f958:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800f95a:	2e00      	cmp	r6, #0
 800f95c:	d0f9      	beq.n	800f952 <__sflush_r+0x1a>
 800f95e:	2300      	movs	r3, #0
 800f960:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800f964:	682f      	ldr	r7, [r5, #0]
 800f966:	602b      	str	r3, [r5, #0]
 800f968:	d032      	beq.n	800f9d0 <__sflush_r+0x98>
 800f96a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800f96c:	89a3      	ldrh	r3, [r4, #12]
 800f96e:	075a      	lsls	r2, r3, #29
 800f970:	d505      	bpl.n	800f97e <__sflush_r+0x46>
 800f972:	6863      	ldr	r3, [r4, #4]
 800f974:	1ac0      	subs	r0, r0, r3
 800f976:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f978:	b10b      	cbz	r3, 800f97e <__sflush_r+0x46>
 800f97a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800f97c:	1ac0      	subs	r0, r0, r3
 800f97e:	2300      	movs	r3, #0
 800f980:	4602      	mov	r2, r0
 800f982:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800f984:	6a21      	ldr	r1, [r4, #32]
 800f986:	4628      	mov	r0, r5
 800f988:	47b0      	blx	r6
 800f98a:	1c43      	adds	r3, r0, #1
 800f98c:	89a3      	ldrh	r3, [r4, #12]
 800f98e:	d106      	bne.n	800f99e <__sflush_r+0x66>
 800f990:	6829      	ldr	r1, [r5, #0]
 800f992:	291d      	cmp	r1, #29
 800f994:	d82c      	bhi.n	800f9f0 <__sflush_r+0xb8>
 800f996:	4a2a      	ldr	r2, [pc, #168]	; (800fa40 <__sflush_r+0x108>)
 800f998:	40ca      	lsrs	r2, r1
 800f99a:	07d6      	lsls	r6, r2, #31
 800f99c:	d528      	bpl.n	800f9f0 <__sflush_r+0xb8>
 800f99e:	2200      	movs	r2, #0
 800f9a0:	6062      	str	r2, [r4, #4]
 800f9a2:	04d9      	lsls	r1, r3, #19
 800f9a4:	6922      	ldr	r2, [r4, #16]
 800f9a6:	6022      	str	r2, [r4, #0]
 800f9a8:	d504      	bpl.n	800f9b4 <__sflush_r+0x7c>
 800f9aa:	1c42      	adds	r2, r0, #1
 800f9ac:	d101      	bne.n	800f9b2 <__sflush_r+0x7a>
 800f9ae:	682b      	ldr	r3, [r5, #0]
 800f9b0:	b903      	cbnz	r3, 800f9b4 <__sflush_r+0x7c>
 800f9b2:	6560      	str	r0, [r4, #84]	; 0x54
 800f9b4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800f9b6:	602f      	str	r7, [r5, #0]
 800f9b8:	2900      	cmp	r1, #0
 800f9ba:	d0ca      	beq.n	800f952 <__sflush_r+0x1a>
 800f9bc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800f9c0:	4299      	cmp	r1, r3
 800f9c2:	d002      	beq.n	800f9ca <__sflush_r+0x92>
 800f9c4:	4628      	mov	r0, r5
 800f9c6:	f7ff faa5 	bl	800ef14 <_free_r>
 800f9ca:	2000      	movs	r0, #0
 800f9cc:	6360      	str	r0, [r4, #52]	; 0x34
 800f9ce:	e7c1      	b.n	800f954 <__sflush_r+0x1c>
 800f9d0:	6a21      	ldr	r1, [r4, #32]
 800f9d2:	2301      	movs	r3, #1
 800f9d4:	4628      	mov	r0, r5
 800f9d6:	47b0      	blx	r6
 800f9d8:	1c41      	adds	r1, r0, #1
 800f9da:	d1c7      	bne.n	800f96c <__sflush_r+0x34>
 800f9dc:	682b      	ldr	r3, [r5, #0]
 800f9de:	2b00      	cmp	r3, #0
 800f9e0:	d0c4      	beq.n	800f96c <__sflush_r+0x34>
 800f9e2:	2b1d      	cmp	r3, #29
 800f9e4:	d001      	beq.n	800f9ea <__sflush_r+0xb2>
 800f9e6:	2b16      	cmp	r3, #22
 800f9e8:	d101      	bne.n	800f9ee <__sflush_r+0xb6>
 800f9ea:	602f      	str	r7, [r5, #0]
 800f9ec:	e7b1      	b.n	800f952 <__sflush_r+0x1a>
 800f9ee:	89a3      	ldrh	r3, [r4, #12]
 800f9f0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f9f4:	81a3      	strh	r3, [r4, #12]
 800f9f6:	e7ad      	b.n	800f954 <__sflush_r+0x1c>
 800f9f8:	690f      	ldr	r7, [r1, #16]
 800f9fa:	2f00      	cmp	r7, #0
 800f9fc:	d0a9      	beq.n	800f952 <__sflush_r+0x1a>
 800f9fe:	0793      	lsls	r3, r2, #30
 800fa00:	680e      	ldr	r6, [r1, #0]
 800fa02:	bf08      	it	eq
 800fa04:	694b      	ldreq	r3, [r1, #20]
 800fa06:	600f      	str	r7, [r1, #0]
 800fa08:	bf18      	it	ne
 800fa0a:	2300      	movne	r3, #0
 800fa0c:	eba6 0807 	sub.w	r8, r6, r7
 800fa10:	608b      	str	r3, [r1, #8]
 800fa12:	f1b8 0f00 	cmp.w	r8, #0
 800fa16:	dd9c      	ble.n	800f952 <__sflush_r+0x1a>
 800fa18:	6a21      	ldr	r1, [r4, #32]
 800fa1a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800fa1c:	4643      	mov	r3, r8
 800fa1e:	463a      	mov	r2, r7
 800fa20:	4628      	mov	r0, r5
 800fa22:	47b0      	blx	r6
 800fa24:	2800      	cmp	r0, #0
 800fa26:	dc06      	bgt.n	800fa36 <__sflush_r+0xfe>
 800fa28:	89a3      	ldrh	r3, [r4, #12]
 800fa2a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800fa2e:	81a3      	strh	r3, [r4, #12]
 800fa30:	f04f 30ff 	mov.w	r0, #4294967295
 800fa34:	e78e      	b.n	800f954 <__sflush_r+0x1c>
 800fa36:	4407      	add	r7, r0
 800fa38:	eba8 0800 	sub.w	r8, r8, r0
 800fa3c:	e7e9      	b.n	800fa12 <__sflush_r+0xda>
 800fa3e:	bf00      	nop
 800fa40:	20400001 	.word	0x20400001

0800fa44 <_fflush_r>:
 800fa44:	b538      	push	{r3, r4, r5, lr}
 800fa46:	690b      	ldr	r3, [r1, #16]
 800fa48:	4605      	mov	r5, r0
 800fa4a:	460c      	mov	r4, r1
 800fa4c:	b913      	cbnz	r3, 800fa54 <_fflush_r+0x10>
 800fa4e:	2500      	movs	r5, #0
 800fa50:	4628      	mov	r0, r5
 800fa52:	bd38      	pop	{r3, r4, r5, pc}
 800fa54:	b118      	cbz	r0, 800fa5e <_fflush_r+0x1a>
 800fa56:	6983      	ldr	r3, [r0, #24]
 800fa58:	b90b      	cbnz	r3, 800fa5e <_fflush_r+0x1a>
 800fa5a:	f000 f887 	bl	800fb6c <__sinit>
 800fa5e:	4b14      	ldr	r3, [pc, #80]	; (800fab0 <_fflush_r+0x6c>)
 800fa60:	429c      	cmp	r4, r3
 800fa62:	d11b      	bne.n	800fa9c <_fflush_r+0x58>
 800fa64:	686c      	ldr	r4, [r5, #4]
 800fa66:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800fa6a:	2b00      	cmp	r3, #0
 800fa6c:	d0ef      	beq.n	800fa4e <_fflush_r+0xa>
 800fa6e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800fa70:	07d0      	lsls	r0, r2, #31
 800fa72:	d404      	bmi.n	800fa7e <_fflush_r+0x3a>
 800fa74:	0599      	lsls	r1, r3, #22
 800fa76:	d402      	bmi.n	800fa7e <_fflush_r+0x3a>
 800fa78:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800fa7a:	f000 f915 	bl	800fca8 <__retarget_lock_acquire_recursive>
 800fa7e:	4628      	mov	r0, r5
 800fa80:	4621      	mov	r1, r4
 800fa82:	f7ff ff59 	bl	800f938 <__sflush_r>
 800fa86:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800fa88:	07da      	lsls	r2, r3, #31
 800fa8a:	4605      	mov	r5, r0
 800fa8c:	d4e0      	bmi.n	800fa50 <_fflush_r+0xc>
 800fa8e:	89a3      	ldrh	r3, [r4, #12]
 800fa90:	059b      	lsls	r3, r3, #22
 800fa92:	d4dd      	bmi.n	800fa50 <_fflush_r+0xc>
 800fa94:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800fa96:	f000 f908 	bl	800fcaa <__retarget_lock_release_recursive>
 800fa9a:	e7d9      	b.n	800fa50 <_fflush_r+0xc>
 800fa9c:	4b05      	ldr	r3, [pc, #20]	; (800fab4 <_fflush_r+0x70>)
 800fa9e:	429c      	cmp	r4, r3
 800faa0:	d101      	bne.n	800faa6 <_fflush_r+0x62>
 800faa2:	68ac      	ldr	r4, [r5, #8]
 800faa4:	e7df      	b.n	800fa66 <_fflush_r+0x22>
 800faa6:	4b04      	ldr	r3, [pc, #16]	; (800fab8 <_fflush_r+0x74>)
 800faa8:	429c      	cmp	r4, r3
 800faaa:	bf08      	it	eq
 800faac:	68ec      	ldreq	r4, [r5, #12]
 800faae:	e7da      	b.n	800fa66 <_fflush_r+0x22>
 800fab0:	0801191c 	.word	0x0801191c
 800fab4:	0801193c 	.word	0x0801193c
 800fab8:	080118fc 	.word	0x080118fc

0800fabc <std>:
 800fabc:	2300      	movs	r3, #0
 800fabe:	b510      	push	{r4, lr}
 800fac0:	4604      	mov	r4, r0
 800fac2:	e9c0 3300 	strd	r3, r3, [r0]
 800fac6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800faca:	6083      	str	r3, [r0, #8]
 800facc:	8181      	strh	r1, [r0, #12]
 800face:	6643      	str	r3, [r0, #100]	; 0x64
 800fad0:	81c2      	strh	r2, [r0, #14]
 800fad2:	6183      	str	r3, [r0, #24]
 800fad4:	4619      	mov	r1, r3
 800fad6:	2208      	movs	r2, #8
 800fad8:	305c      	adds	r0, #92	; 0x5c
 800fada:	f7fd fb5b 	bl	800d194 <memset>
 800fade:	4b05      	ldr	r3, [pc, #20]	; (800faf4 <std+0x38>)
 800fae0:	6263      	str	r3, [r4, #36]	; 0x24
 800fae2:	4b05      	ldr	r3, [pc, #20]	; (800faf8 <std+0x3c>)
 800fae4:	62a3      	str	r3, [r4, #40]	; 0x28
 800fae6:	4b05      	ldr	r3, [pc, #20]	; (800fafc <std+0x40>)
 800fae8:	62e3      	str	r3, [r4, #44]	; 0x2c
 800faea:	4b05      	ldr	r3, [pc, #20]	; (800fb00 <std+0x44>)
 800faec:	6224      	str	r4, [r4, #32]
 800faee:	6323      	str	r3, [r4, #48]	; 0x30
 800faf0:	bd10      	pop	{r4, pc}
 800faf2:	bf00      	nop
 800faf4:	0800fe11 	.word	0x0800fe11
 800faf8:	0800fe33 	.word	0x0800fe33
 800fafc:	0800fe6b 	.word	0x0800fe6b
 800fb00:	0800fe8f 	.word	0x0800fe8f

0800fb04 <_cleanup_r>:
 800fb04:	4901      	ldr	r1, [pc, #4]	; (800fb0c <_cleanup_r+0x8>)
 800fb06:	f000 b8af 	b.w	800fc68 <_fwalk_reent>
 800fb0a:	bf00      	nop
 800fb0c:	0800fa45 	.word	0x0800fa45

0800fb10 <__sfmoreglue>:
 800fb10:	b570      	push	{r4, r5, r6, lr}
 800fb12:	2268      	movs	r2, #104	; 0x68
 800fb14:	1e4d      	subs	r5, r1, #1
 800fb16:	4355      	muls	r5, r2
 800fb18:	460e      	mov	r6, r1
 800fb1a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800fb1e:	f7ff fa65 	bl	800efec <_malloc_r>
 800fb22:	4604      	mov	r4, r0
 800fb24:	b140      	cbz	r0, 800fb38 <__sfmoreglue+0x28>
 800fb26:	2100      	movs	r1, #0
 800fb28:	e9c0 1600 	strd	r1, r6, [r0]
 800fb2c:	300c      	adds	r0, #12
 800fb2e:	60a0      	str	r0, [r4, #8]
 800fb30:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800fb34:	f7fd fb2e 	bl	800d194 <memset>
 800fb38:	4620      	mov	r0, r4
 800fb3a:	bd70      	pop	{r4, r5, r6, pc}

0800fb3c <__sfp_lock_acquire>:
 800fb3c:	4801      	ldr	r0, [pc, #4]	; (800fb44 <__sfp_lock_acquire+0x8>)
 800fb3e:	f000 b8b3 	b.w	800fca8 <__retarget_lock_acquire_recursive>
 800fb42:	bf00      	nop
 800fb44:	20000c99 	.word	0x20000c99

0800fb48 <__sfp_lock_release>:
 800fb48:	4801      	ldr	r0, [pc, #4]	; (800fb50 <__sfp_lock_release+0x8>)
 800fb4a:	f000 b8ae 	b.w	800fcaa <__retarget_lock_release_recursive>
 800fb4e:	bf00      	nop
 800fb50:	20000c99 	.word	0x20000c99

0800fb54 <__sinit_lock_acquire>:
 800fb54:	4801      	ldr	r0, [pc, #4]	; (800fb5c <__sinit_lock_acquire+0x8>)
 800fb56:	f000 b8a7 	b.w	800fca8 <__retarget_lock_acquire_recursive>
 800fb5a:	bf00      	nop
 800fb5c:	20000c9a 	.word	0x20000c9a

0800fb60 <__sinit_lock_release>:
 800fb60:	4801      	ldr	r0, [pc, #4]	; (800fb68 <__sinit_lock_release+0x8>)
 800fb62:	f000 b8a2 	b.w	800fcaa <__retarget_lock_release_recursive>
 800fb66:	bf00      	nop
 800fb68:	20000c9a 	.word	0x20000c9a

0800fb6c <__sinit>:
 800fb6c:	b510      	push	{r4, lr}
 800fb6e:	4604      	mov	r4, r0
 800fb70:	f7ff fff0 	bl	800fb54 <__sinit_lock_acquire>
 800fb74:	69a3      	ldr	r3, [r4, #24]
 800fb76:	b11b      	cbz	r3, 800fb80 <__sinit+0x14>
 800fb78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fb7c:	f7ff bff0 	b.w	800fb60 <__sinit_lock_release>
 800fb80:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800fb84:	6523      	str	r3, [r4, #80]	; 0x50
 800fb86:	4b13      	ldr	r3, [pc, #76]	; (800fbd4 <__sinit+0x68>)
 800fb88:	4a13      	ldr	r2, [pc, #76]	; (800fbd8 <__sinit+0x6c>)
 800fb8a:	681b      	ldr	r3, [r3, #0]
 800fb8c:	62a2      	str	r2, [r4, #40]	; 0x28
 800fb8e:	42a3      	cmp	r3, r4
 800fb90:	bf04      	itt	eq
 800fb92:	2301      	moveq	r3, #1
 800fb94:	61a3      	streq	r3, [r4, #24]
 800fb96:	4620      	mov	r0, r4
 800fb98:	f000 f820 	bl	800fbdc <__sfp>
 800fb9c:	6060      	str	r0, [r4, #4]
 800fb9e:	4620      	mov	r0, r4
 800fba0:	f000 f81c 	bl	800fbdc <__sfp>
 800fba4:	60a0      	str	r0, [r4, #8]
 800fba6:	4620      	mov	r0, r4
 800fba8:	f000 f818 	bl	800fbdc <__sfp>
 800fbac:	2200      	movs	r2, #0
 800fbae:	60e0      	str	r0, [r4, #12]
 800fbb0:	2104      	movs	r1, #4
 800fbb2:	6860      	ldr	r0, [r4, #4]
 800fbb4:	f7ff ff82 	bl	800fabc <std>
 800fbb8:	68a0      	ldr	r0, [r4, #8]
 800fbba:	2201      	movs	r2, #1
 800fbbc:	2109      	movs	r1, #9
 800fbbe:	f7ff ff7d 	bl	800fabc <std>
 800fbc2:	68e0      	ldr	r0, [r4, #12]
 800fbc4:	2202      	movs	r2, #2
 800fbc6:	2112      	movs	r1, #18
 800fbc8:	f7ff ff78 	bl	800fabc <std>
 800fbcc:	2301      	movs	r3, #1
 800fbce:	61a3      	str	r3, [r4, #24]
 800fbd0:	e7d2      	b.n	800fb78 <__sinit+0xc>
 800fbd2:	bf00      	nop
 800fbd4:	08011584 	.word	0x08011584
 800fbd8:	0800fb05 	.word	0x0800fb05

0800fbdc <__sfp>:
 800fbdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fbde:	4607      	mov	r7, r0
 800fbe0:	f7ff ffac 	bl	800fb3c <__sfp_lock_acquire>
 800fbe4:	4b1e      	ldr	r3, [pc, #120]	; (800fc60 <__sfp+0x84>)
 800fbe6:	681e      	ldr	r6, [r3, #0]
 800fbe8:	69b3      	ldr	r3, [r6, #24]
 800fbea:	b913      	cbnz	r3, 800fbf2 <__sfp+0x16>
 800fbec:	4630      	mov	r0, r6
 800fbee:	f7ff ffbd 	bl	800fb6c <__sinit>
 800fbf2:	3648      	adds	r6, #72	; 0x48
 800fbf4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800fbf8:	3b01      	subs	r3, #1
 800fbfa:	d503      	bpl.n	800fc04 <__sfp+0x28>
 800fbfc:	6833      	ldr	r3, [r6, #0]
 800fbfe:	b30b      	cbz	r3, 800fc44 <__sfp+0x68>
 800fc00:	6836      	ldr	r6, [r6, #0]
 800fc02:	e7f7      	b.n	800fbf4 <__sfp+0x18>
 800fc04:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800fc08:	b9d5      	cbnz	r5, 800fc40 <__sfp+0x64>
 800fc0a:	4b16      	ldr	r3, [pc, #88]	; (800fc64 <__sfp+0x88>)
 800fc0c:	60e3      	str	r3, [r4, #12]
 800fc0e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800fc12:	6665      	str	r5, [r4, #100]	; 0x64
 800fc14:	f000 f847 	bl	800fca6 <__retarget_lock_init_recursive>
 800fc18:	f7ff ff96 	bl	800fb48 <__sfp_lock_release>
 800fc1c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800fc20:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800fc24:	6025      	str	r5, [r4, #0]
 800fc26:	61a5      	str	r5, [r4, #24]
 800fc28:	2208      	movs	r2, #8
 800fc2a:	4629      	mov	r1, r5
 800fc2c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800fc30:	f7fd fab0 	bl	800d194 <memset>
 800fc34:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800fc38:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800fc3c:	4620      	mov	r0, r4
 800fc3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fc40:	3468      	adds	r4, #104	; 0x68
 800fc42:	e7d9      	b.n	800fbf8 <__sfp+0x1c>
 800fc44:	2104      	movs	r1, #4
 800fc46:	4638      	mov	r0, r7
 800fc48:	f7ff ff62 	bl	800fb10 <__sfmoreglue>
 800fc4c:	4604      	mov	r4, r0
 800fc4e:	6030      	str	r0, [r6, #0]
 800fc50:	2800      	cmp	r0, #0
 800fc52:	d1d5      	bne.n	800fc00 <__sfp+0x24>
 800fc54:	f7ff ff78 	bl	800fb48 <__sfp_lock_release>
 800fc58:	230c      	movs	r3, #12
 800fc5a:	603b      	str	r3, [r7, #0]
 800fc5c:	e7ee      	b.n	800fc3c <__sfp+0x60>
 800fc5e:	bf00      	nop
 800fc60:	08011584 	.word	0x08011584
 800fc64:	ffff0001 	.word	0xffff0001

0800fc68 <_fwalk_reent>:
 800fc68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fc6c:	4606      	mov	r6, r0
 800fc6e:	4688      	mov	r8, r1
 800fc70:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800fc74:	2700      	movs	r7, #0
 800fc76:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800fc7a:	f1b9 0901 	subs.w	r9, r9, #1
 800fc7e:	d505      	bpl.n	800fc8c <_fwalk_reent+0x24>
 800fc80:	6824      	ldr	r4, [r4, #0]
 800fc82:	2c00      	cmp	r4, #0
 800fc84:	d1f7      	bne.n	800fc76 <_fwalk_reent+0xe>
 800fc86:	4638      	mov	r0, r7
 800fc88:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800fc8c:	89ab      	ldrh	r3, [r5, #12]
 800fc8e:	2b01      	cmp	r3, #1
 800fc90:	d907      	bls.n	800fca2 <_fwalk_reent+0x3a>
 800fc92:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800fc96:	3301      	adds	r3, #1
 800fc98:	d003      	beq.n	800fca2 <_fwalk_reent+0x3a>
 800fc9a:	4629      	mov	r1, r5
 800fc9c:	4630      	mov	r0, r6
 800fc9e:	47c0      	blx	r8
 800fca0:	4307      	orrs	r7, r0
 800fca2:	3568      	adds	r5, #104	; 0x68
 800fca4:	e7e9      	b.n	800fc7a <_fwalk_reent+0x12>

0800fca6 <__retarget_lock_init_recursive>:
 800fca6:	4770      	bx	lr

0800fca8 <__retarget_lock_acquire_recursive>:
 800fca8:	4770      	bx	lr

0800fcaa <__retarget_lock_release_recursive>:
 800fcaa:	4770      	bx	lr

0800fcac <__swhatbuf_r>:
 800fcac:	b570      	push	{r4, r5, r6, lr}
 800fcae:	460e      	mov	r6, r1
 800fcb0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800fcb4:	2900      	cmp	r1, #0
 800fcb6:	b096      	sub	sp, #88	; 0x58
 800fcb8:	4614      	mov	r4, r2
 800fcba:	461d      	mov	r5, r3
 800fcbc:	da08      	bge.n	800fcd0 <__swhatbuf_r+0x24>
 800fcbe:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800fcc2:	2200      	movs	r2, #0
 800fcc4:	602a      	str	r2, [r5, #0]
 800fcc6:	061a      	lsls	r2, r3, #24
 800fcc8:	d410      	bmi.n	800fcec <__swhatbuf_r+0x40>
 800fcca:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800fcce:	e00e      	b.n	800fcee <__swhatbuf_r+0x42>
 800fcd0:	466a      	mov	r2, sp
 800fcd2:	f000 f903 	bl	800fedc <_fstat_r>
 800fcd6:	2800      	cmp	r0, #0
 800fcd8:	dbf1      	blt.n	800fcbe <__swhatbuf_r+0x12>
 800fcda:	9a01      	ldr	r2, [sp, #4]
 800fcdc:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800fce0:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800fce4:	425a      	negs	r2, r3
 800fce6:	415a      	adcs	r2, r3
 800fce8:	602a      	str	r2, [r5, #0]
 800fcea:	e7ee      	b.n	800fcca <__swhatbuf_r+0x1e>
 800fcec:	2340      	movs	r3, #64	; 0x40
 800fcee:	2000      	movs	r0, #0
 800fcf0:	6023      	str	r3, [r4, #0]
 800fcf2:	b016      	add	sp, #88	; 0x58
 800fcf4:	bd70      	pop	{r4, r5, r6, pc}
	...

0800fcf8 <__smakebuf_r>:
 800fcf8:	898b      	ldrh	r3, [r1, #12]
 800fcfa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fcfc:	079d      	lsls	r5, r3, #30
 800fcfe:	4606      	mov	r6, r0
 800fd00:	460c      	mov	r4, r1
 800fd02:	d507      	bpl.n	800fd14 <__smakebuf_r+0x1c>
 800fd04:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800fd08:	6023      	str	r3, [r4, #0]
 800fd0a:	6123      	str	r3, [r4, #16]
 800fd0c:	2301      	movs	r3, #1
 800fd0e:	6163      	str	r3, [r4, #20]
 800fd10:	b002      	add	sp, #8
 800fd12:	bd70      	pop	{r4, r5, r6, pc}
 800fd14:	ab01      	add	r3, sp, #4
 800fd16:	466a      	mov	r2, sp
 800fd18:	f7ff ffc8 	bl	800fcac <__swhatbuf_r>
 800fd1c:	9900      	ldr	r1, [sp, #0]
 800fd1e:	4605      	mov	r5, r0
 800fd20:	4630      	mov	r0, r6
 800fd22:	f7ff f963 	bl	800efec <_malloc_r>
 800fd26:	b948      	cbnz	r0, 800fd3c <__smakebuf_r+0x44>
 800fd28:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800fd2c:	059a      	lsls	r2, r3, #22
 800fd2e:	d4ef      	bmi.n	800fd10 <__smakebuf_r+0x18>
 800fd30:	f023 0303 	bic.w	r3, r3, #3
 800fd34:	f043 0302 	orr.w	r3, r3, #2
 800fd38:	81a3      	strh	r3, [r4, #12]
 800fd3a:	e7e3      	b.n	800fd04 <__smakebuf_r+0xc>
 800fd3c:	4b0d      	ldr	r3, [pc, #52]	; (800fd74 <__smakebuf_r+0x7c>)
 800fd3e:	62b3      	str	r3, [r6, #40]	; 0x28
 800fd40:	89a3      	ldrh	r3, [r4, #12]
 800fd42:	6020      	str	r0, [r4, #0]
 800fd44:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800fd48:	81a3      	strh	r3, [r4, #12]
 800fd4a:	9b00      	ldr	r3, [sp, #0]
 800fd4c:	6163      	str	r3, [r4, #20]
 800fd4e:	9b01      	ldr	r3, [sp, #4]
 800fd50:	6120      	str	r0, [r4, #16]
 800fd52:	b15b      	cbz	r3, 800fd6c <__smakebuf_r+0x74>
 800fd54:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800fd58:	4630      	mov	r0, r6
 800fd5a:	f000 f8d1 	bl	800ff00 <_isatty_r>
 800fd5e:	b128      	cbz	r0, 800fd6c <__smakebuf_r+0x74>
 800fd60:	89a3      	ldrh	r3, [r4, #12]
 800fd62:	f023 0303 	bic.w	r3, r3, #3
 800fd66:	f043 0301 	orr.w	r3, r3, #1
 800fd6a:	81a3      	strh	r3, [r4, #12]
 800fd6c:	89a0      	ldrh	r0, [r4, #12]
 800fd6e:	4305      	orrs	r5, r0
 800fd70:	81a5      	strh	r5, [r4, #12]
 800fd72:	e7cd      	b.n	800fd10 <__smakebuf_r+0x18>
 800fd74:	0800fb05 	.word	0x0800fb05

0800fd78 <_malloc_usable_size_r>:
 800fd78:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800fd7c:	1f18      	subs	r0, r3, #4
 800fd7e:	2b00      	cmp	r3, #0
 800fd80:	bfbc      	itt	lt
 800fd82:	580b      	ldrlt	r3, [r1, r0]
 800fd84:	18c0      	addlt	r0, r0, r3
 800fd86:	4770      	bx	lr

0800fd88 <_raise_r>:
 800fd88:	291f      	cmp	r1, #31
 800fd8a:	b538      	push	{r3, r4, r5, lr}
 800fd8c:	4604      	mov	r4, r0
 800fd8e:	460d      	mov	r5, r1
 800fd90:	d904      	bls.n	800fd9c <_raise_r+0x14>
 800fd92:	2316      	movs	r3, #22
 800fd94:	6003      	str	r3, [r0, #0]
 800fd96:	f04f 30ff 	mov.w	r0, #4294967295
 800fd9a:	bd38      	pop	{r3, r4, r5, pc}
 800fd9c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800fd9e:	b112      	cbz	r2, 800fda6 <_raise_r+0x1e>
 800fda0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800fda4:	b94b      	cbnz	r3, 800fdba <_raise_r+0x32>
 800fda6:	4620      	mov	r0, r4
 800fda8:	f000 f830 	bl	800fe0c <_getpid_r>
 800fdac:	462a      	mov	r2, r5
 800fdae:	4601      	mov	r1, r0
 800fdb0:	4620      	mov	r0, r4
 800fdb2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800fdb6:	f000 b817 	b.w	800fde8 <_kill_r>
 800fdba:	2b01      	cmp	r3, #1
 800fdbc:	d00a      	beq.n	800fdd4 <_raise_r+0x4c>
 800fdbe:	1c59      	adds	r1, r3, #1
 800fdc0:	d103      	bne.n	800fdca <_raise_r+0x42>
 800fdc2:	2316      	movs	r3, #22
 800fdc4:	6003      	str	r3, [r0, #0]
 800fdc6:	2001      	movs	r0, #1
 800fdc8:	e7e7      	b.n	800fd9a <_raise_r+0x12>
 800fdca:	2400      	movs	r4, #0
 800fdcc:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800fdd0:	4628      	mov	r0, r5
 800fdd2:	4798      	blx	r3
 800fdd4:	2000      	movs	r0, #0
 800fdd6:	e7e0      	b.n	800fd9a <_raise_r+0x12>

0800fdd8 <raise>:
 800fdd8:	4b02      	ldr	r3, [pc, #8]	; (800fde4 <raise+0xc>)
 800fdda:	4601      	mov	r1, r0
 800fddc:	6818      	ldr	r0, [r3, #0]
 800fdde:	f7ff bfd3 	b.w	800fd88 <_raise_r>
 800fde2:	bf00      	nop
 800fde4:	20000140 	.word	0x20000140

0800fde8 <_kill_r>:
 800fde8:	b538      	push	{r3, r4, r5, lr}
 800fdea:	4d07      	ldr	r5, [pc, #28]	; (800fe08 <_kill_r+0x20>)
 800fdec:	2300      	movs	r3, #0
 800fdee:	4604      	mov	r4, r0
 800fdf0:	4608      	mov	r0, r1
 800fdf2:	4611      	mov	r1, r2
 800fdf4:	602b      	str	r3, [r5, #0]
 800fdf6:	f7f7 fb7d 	bl	80074f4 <_kill>
 800fdfa:	1c43      	adds	r3, r0, #1
 800fdfc:	d102      	bne.n	800fe04 <_kill_r+0x1c>
 800fdfe:	682b      	ldr	r3, [r5, #0]
 800fe00:	b103      	cbz	r3, 800fe04 <_kill_r+0x1c>
 800fe02:	6023      	str	r3, [r4, #0]
 800fe04:	bd38      	pop	{r3, r4, r5, pc}
 800fe06:	bf00      	nop
 800fe08:	20000c94 	.word	0x20000c94

0800fe0c <_getpid_r>:
 800fe0c:	f7f7 bb6a 	b.w	80074e4 <_getpid>

0800fe10 <__sread>:
 800fe10:	b510      	push	{r4, lr}
 800fe12:	460c      	mov	r4, r1
 800fe14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800fe18:	f000 f894 	bl	800ff44 <_read_r>
 800fe1c:	2800      	cmp	r0, #0
 800fe1e:	bfab      	itete	ge
 800fe20:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800fe22:	89a3      	ldrhlt	r3, [r4, #12]
 800fe24:	181b      	addge	r3, r3, r0
 800fe26:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800fe2a:	bfac      	ite	ge
 800fe2c:	6563      	strge	r3, [r4, #84]	; 0x54
 800fe2e:	81a3      	strhlt	r3, [r4, #12]
 800fe30:	bd10      	pop	{r4, pc}

0800fe32 <__swrite>:
 800fe32:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fe36:	461f      	mov	r7, r3
 800fe38:	898b      	ldrh	r3, [r1, #12]
 800fe3a:	05db      	lsls	r3, r3, #23
 800fe3c:	4605      	mov	r5, r0
 800fe3e:	460c      	mov	r4, r1
 800fe40:	4616      	mov	r6, r2
 800fe42:	d505      	bpl.n	800fe50 <__swrite+0x1e>
 800fe44:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800fe48:	2302      	movs	r3, #2
 800fe4a:	2200      	movs	r2, #0
 800fe4c:	f000 f868 	bl	800ff20 <_lseek_r>
 800fe50:	89a3      	ldrh	r3, [r4, #12]
 800fe52:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800fe56:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800fe5a:	81a3      	strh	r3, [r4, #12]
 800fe5c:	4632      	mov	r2, r6
 800fe5e:	463b      	mov	r3, r7
 800fe60:	4628      	mov	r0, r5
 800fe62:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800fe66:	f000 b817 	b.w	800fe98 <_write_r>

0800fe6a <__sseek>:
 800fe6a:	b510      	push	{r4, lr}
 800fe6c:	460c      	mov	r4, r1
 800fe6e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800fe72:	f000 f855 	bl	800ff20 <_lseek_r>
 800fe76:	1c43      	adds	r3, r0, #1
 800fe78:	89a3      	ldrh	r3, [r4, #12]
 800fe7a:	bf15      	itete	ne
 800fe7c:	6560      	strne	r0, [r4, #84]	; 0x54
 800fe7e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800fe82:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800fe86:	81a3      	strheq	r3, [r4, #12]
 800fe88:	bf18      	it	ne
 800fe8a:	81a3      	strhne	r3, [r4, #12]
 800fe8c:	bd10      	pop	{r4, pc}

0800fe8e <__sclose>:
 800fe8e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800fe92:	f000 b813 	b.w	800febc <_close_r>
	...

0800fe98 <_write_r>:
 800fe98:	b538      	push	{r3, r4, r5, lr}
 800fe9a:	4d07      	ldr	r5, [pc, #28]	; (800feb8 <_write_r+0x20>)
 800fe9c:	4604      	mov	r4, r0
 800fe9e:	4608      	mov	r0, r1
 800fea0:	4611      	mov	r1, r2
 800fea2:	2200      	movs	r2, #0
 800fea4:	602a      	str	r2, [r5, #0]
 800fea6:	461a      	mov	r2, r3
 800fea8:	f7f7 fb5b 	bl	8007562 <_write>
 800feac:	1c43      	adds	r3, r0, #1
 800feae:	d102      	bne.n	800feb6 <_write_r+0x1e>
 800feb0:	682b      	ldr	r3, [r5, #0]
 800feb2:	b103      	cbz	r3, 800feb6 <_write_r+0x1e>
 800feb4:	6023      	str	r3, [r4, #0]
 800feb6:	bd38      	pop	{r3, r4, r5, pc}
 800feb8:	20000c94 	.word	0x20000c94

0800febc <_close_r>:
 800febc:	b538      	push	{r3, r4, r5, lr}
 800febe:	4d06      	ldr	r5, [pc, #24]	; (800fed8 <_close_r+0x1c>)
 800fec0:	2300      	movs	r3, #0
 800fec2:	4604      	mov	r4, r0
 800fec4:	4608      	mov	r0, r1
 800fec6:	602b      	str	r3, [r5, #0]
 800fec8:	f7f7 fb67 	bl	800759a <_close>
 800fecc:	1c43      	adds	r3, r0, #1
 800fece:	d102      	bne.n	800fed6 <_close_r+0x1a>
 800fed0:	682b      	ldr	r3, [r5, #0]
 800fed2:	b103      	cbz	r3, 800fed6 <_close_r+0x1a>
 800fed4:	6023      	str	r3, [r4, #0]
 800fed6:	bd38      	pop	{r3, r4, r5, pc}
 800fed8:	20000c94 	.word	0x20000c94

0800fedc <_fstat_r>:
 800fedc:	b538      	push	{r3, r4, r5, lr}
 800fede:	4d07      	ldr	r5, [pc, #28]	; (800fefc <_fstat_r+0x20>)
 800fee0:	2300      	movs	r3, #0
 800fee2:	4604      	mov	r4, r0
 800fee4:	4608      	mov	r0, r1
 800fee6:	4611      	mov	r1, r2
 800fee8:	602b      	str	r3, [r5, #0]
 800feea:	f7f7 fb62 	bl	80075b2 <_fstat>
 800feee:	1c43      	adds	r3, r0, #1
 800fef0:	d102      	bne.n	800fef8 <_fstat_r+0x1c>
 800fef2:	682b      	ldr	r3, [r5, #0]
 800fef4:	b103      	cbz	r3, 800fef8 <_fstat_r+0x1c>
 800fef6:	6023      	str	r3, [r4, #0]
 800fef8:	bd38      	pop	{r3, r4, r5, pc}
 800fefa:	bf00      	nop
 800fefc:	20000c94 	.word	0x20000c94

0800ff00 <_isatty_r>:
 800ff00:	b538      	push	{r3, r4, r5, lr}
 800ff02:	4d06      	ldr	r5, [pc, #24]	; (800ff1c <_isatty_r+0x1c>)
 800ff04:	2300      	movs	r3, #0
 800ff06:	4604      	mov	r4, r0
 800ff08:	4608      	mov	r0, r1
 800ff0a:	602b      	str	r3, [r5, #0]
 800ff0c:	f7f7 fb61 	bl	80075d2 <_isatty>
 800ff10:	1c43      	adds	r3, r0, #1
 800ff12:	d102      	bne.n	800ff1a <_isatty_r+0x1a>
 800ff14:	682b      	ldr	r3, [r5, #0]
 800ff16:	b103      	cbz	r3, 800ff1a <_isatty_r+0x1a>
 800ff18:	6023      	str	r3, [r4, #0]
 800ff1a:	bd38      	pop	{r3, r4, r5, pc}
 800ff1c:	20000c94 	.word	0x20000c94

0800ff20 <_lseek_r>:
 800ff20:	b538      	push	{r3, r4, r5, lr}
 800ff22:	4d07      	ldr	r5, [pc, #28]	; (800ff40 <_lseek_r+0x20>)
 800ff24:	4604      	mov	r4, r0
 800ff26:	4608      	mov	r0, r1
 800ff28:	4611      	mov	r1, r2
 800ff2a:	2200      	movs	r2, #0
 800ff2c:	602a      	str	r2, [r5, #0]
 800ff2e:	461a      	mov	r2, r3
 800ff30:	f7f7 fb5a 	bl	80075e8 <_lseek>
 800ff34:	1c43      	adds	r3, r0, #1
 800ff36:	d102      	bne.n	800ff3e <_lseek_r+0x1e>
 800ff38:	682b      	ldr	r3, [r5, #0]
 800ff3a:	b103      	cbz	r3, 800ff3e <_lseek_r+0x1e>
 800ff3c:	6023      	str	r3, [r4, #0]
 800ff3e:	bd38      	pop	{r3, r4, r5, pc}
 800ff40:	20000c94 	.word	0x20000c94

0800ff44 <_read_r>:
 800ff44:	b538      	push	{r3, r4, r5, lr}
 800ff46:	4d07      	ldr	r5, [pc, #28]	; (800ff64 <_read_r+0x20>)
 800ff48:	4604      	mov	r4, r0
 800ff4a:	4608      	mov	r0, r1
 800ff4c:	4611      	mov	r1, r2
 800ff4e:	2200      	movs	r2, #0
 800ff50:	602a      	str	r2, [r5, #0]
 800ff52:	461a      	mov	r2, r3
 800ff54:	f7f7 fae8 	bl	8007528 <_read>
 800ff58:	1c43      	adds	r3, r0, #1
 800ff5a:	d102      	bne.n	800ff62 <_read_r+0x1e>
 800ff5c:	682b      	ldr	r3, [r5, #0]
 800ff5e:	b103      	cbz	r3, 800ff62 <_read_r+0x1e>
 800ff60:	6023      	str	r3, [r4, #0]
 800ff62:	bd38      	pop	{r3, r4, r5, pc}
 800ff64:	20000c94 	.word	0x20000c94

0800ff68 <atan>:
 800ff68:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff6c:	ec55 4b10 	vmov	r4, r5, d0
 800ff70:	4bc3      	ldr	r3, [pc, #780]	; (8010280 <atan+0x318>)
 800ff72:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 800ff76:	429e      	cmp	r6, r3
 800ff78:	46ab      	mov	fp, r5
 800ff7a:	dd18      	ble.n	800ffae <atan+0x46>
 800ff7c:	4bc1      	ldr	r3, [pc, #772]	; (8010284 <atan+0x31c>)
 800ff7e:	429e      	cmp	r6, r3
 800ff80:	dc01      	bgt.n	800ff86 <atan+0x1e>
 800ff82:	d109      	bne.n	800ff98 <atan+0x30>
 800ff84:	b144      	cbz	r4, 800ff98 <atan+0x30>
 800ff86:	4622      	mov	r2, r4
 800ff88:	462b      	mov	r3, r5
 800ff8a:	4620      	mov	r0, r4
 800ff8c:	4629      	mov	r1, r5
 800ff8e:	f7f0 f99d 	bl	80002cc <__adddf3>
 800ff92:	4604      	mov	r4, r0
 800ff94:	460d      	mov	r5, r1
 800ff96:	e006      	b.n	800ffa6 <atan+0x3e>
 800ff98:	f1bb 0f00 	cmp.w	fp, #0
 800ff9c:	f300 8131 	bgt.w	8010202 <atan+0x29a>
 800ffa0:	a59b      	add	r5, pc, #620	; (adr r5, 8010210 <atan+0x2a8>)
 800ffa2:	e9d5 4500 	ldrd	r4, r5, [r5]
 800ffa6:	ec45 4b10 	vmov	d0, r4, r5
 800ffaa:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ffae:	4bb6      	ldr	r3, [pc, #728]	; (8010288 <atan+0x320>)
 800ffb0:	429e      	cmp	r6, r3
 800ffb2:	dc14      	bgt.n	800ffde <atan+0x76>
 800ffb4:	f1a3 73de 	sub.w	r3, r3, #29097984	; 0x1bc0000
 800ffb8:	429e      	cmp	r6, r3
 800ffba:	dc0d      	bgt.n	800ffd8 <atan+0x70>
 800ffbc:	a396      	add	r3, pc, #600	; (adr r3, 8010218 <atan+0x2b0>)
 800ffbe:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ffc2:	ee10 0a10 	vmov	r0, s0
 800ffc6:	4629      	mov	r1, r5
 800ffc8:	f7f0 f980 	bl	80002cc <__adddf3>
 800ffcc:	4baf      	ldr	r3, [pc, #700]	; (801028c <atan+0x324>)
 800ffce:	2200      	movs	r2, #0
 800ffd0:	f7f0 fdc2 	bl	8000b58 <__aeabi_dcmpgt>
 800ffd4:	2800      	cmp	r0, #0
 800ffd6:	d1e6      	bne.n	800ffa6 <atan+0x3e>
 800ffd8:	f04f 3aff 	mov.w	sl, #4294967295
 800ffdc:	e02b      	b.n	8010036 <atan+0xce>
 800ffde:	f000 f963 	bl	80102a8 <fabs>
 800ffe2:	4bab      	ldr	r3, [pc, #684]	; (8010290 <atan+0x328>)
 800ffe4:	429e      	cmp	r6, r3
 800ffe6:	ec55 4b10 	vmov	r4, r5, d0
 800ffea:	f300 80bf 	bgt.w	801016c <atan+0x204>
 800ffee:	f5a3 2350 	sub.w	r3, r3, #851968	; 0xd0000
 800fff2:	429e      	cmp	r6, r3
 800fff4:	f300 80a0 	bgt.w	8010138 <atan+0x1d0>
 800fff8:	ee10 2a10 	vmov	r2, s0
 800fffc:	ee10 0a10 	vmov	r0, s0
 8010000:	462b      	mov	r3, r5
 8010002:	4629      	mov	r1, r5
 8010004:	f7f0 f962 	bl	80002cc <__adddf3>
 8010008:	4ba0      	ldr	r3, [pc, #640]	; (801028c <atan+0x324>)
 801000a:	2200      	movs	r2, #0
 801000c:	f7f0 f95c 	bl	80002c8 <__aeabi_dsub>
 8010010:	2200      	movs	r2, #0
 8010012:	4606      	mov	r6, r0
 8010014:	460f      	mov	r7, r1
 8010016:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 801001a:	4620      	mov	r0, r4
 801001c:	4629      	mov	r1, r5
 801001e:	f7f0 f955 	bl	80002cc <__adddf3>
 8010022:	4602      	mov	r2, r0
 8010024:	460b      	mov	r3, r1
 8010026:	4630      	mov	r0, r6
 8010028:	4639      	mov	r1, r7
 801002a:	f7f0 fc2f 	bl	800088c <__aeabi_ddiv>
 801002e:	f04f 0a00 	mov.w	sl, #0
 8010032:	4604      	mov	r4, r0
 8010034:	460d      	mov	r5, r1
 8010036:	4622      	mov	r2, r4
 8010038:	462b      	mov	r3, r5
 801003a:	4620      	mov	r0, r4
 801003c:	4629      	mov	r1, r5
 801003e:	f7f0 fafb 	bl	8000638 <__aeabi_dmul>
 8010042:	4602      	mov	r2, r0
 8010044:	460b      	mov	r3, r1
 8010046:	4680      	mov	r8, r0
 8010048:	4689      	mov	r9, r1
 801004a:	f7f0 faf5 	bl	8000638 <__aeabi_dmul>
 801004e:	a374      	add	r3, pc, #464	; (adr r3, 8010220 <atan+0x2b8>)
 8010050:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010054:	4606      	mov	r6, r0
 8010056:	460f      	mov	r7, r1
 8010058:	f7f0 faee 	bl	8000638 <__aeabi_dmul>
 801005c:	a372      	add	r3, pc, #456	; (adr r3, 8010228 <atan+0x2c0>)
 801005e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010062:	f7f0 f933 	bl	80002cc <__adddf3>
 8010066:	4632      	mov	r2, r6
 8010068:	463b      	mov	r3, r7
 801006a:	f7f0 fae5 	bl	8000638 <__aeabi_dmul>
 801006e:	a370      	add	r3, pc, #448	; (adr r3, 8010230 <atan+0x2c8>)
 8010070:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010074:	f7f0 f92a 	bl	80002cc <__adddf3>
 8010078:	4632      	mov	r2, r6
 801007a:	463b      	mov	r3, r7
 801007c:	f7f0 fadc 	bl	8000638 <__aeabi_dmul>
 8010080:	a36d      	add	r3, pc, #436	; (adr r3, 8010238 <atan+0x2d0>)
 8010082:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010086:	f7f0 f921 	bl	80002cc <__adddf3>
 801008a:	4632      	mov	r2, r6
 801008c:	463b      	mov	r3, r7
 801008e:	f7f0 fad3 	bl	8000638 <__aeabi_dmul>
 8010092:	a36b      	add	r3, pc, #428	; (adr r3, 8010240 <atan+0x2d8>)
 8010094:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010098:	f7f0 f918 	bl	80002cc <__adddf3>
 801009c:	4632      	mov	r2, r6
 801009e:	463b      	mov	r3, r7
 80100a0:	f7f0 faca 	bl	8000638 <__aeabi_dmul>
 80100a4:	a368      	add	r3, pc, #416	; (adr r3, 8010248 <atan+0x2e0>)
 80100a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100aa:	f7f0 f90f 	bl	80002cc <__adddf3>
 80100ae:	4642      	mov	r2, r8
 80100b0:	464b      	mov	r3, r9
 80100b2:	f7f0 fac1 	bl	8000638 <__aeabi_dmul>
 80100b6:	a366      	add	r3, pc, #408	; (adr r3, 8010250 <atan+0x2e8>)
 80100b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100bc:	4680      	mov	r8, r0
 80100be:	4689      	mov	r9, r1
 80100c0:	4630      	mov	r0, r6
 80100c2:	4639      	mov	r1, r7
 80100c4:	f7f0 fab8 	bl	8000638 <__aeabi_dmul>
 80100c8:	a363      	add	r3, pc, #396	; (adr r3, 8010258 <atan+0x2f0>)
 80100ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100ce:	f7f0 f8fb 	bl	80002c8 <__aeabi_dsub>
 80100d2:	4632      	mov	r2, r6
 80100d4:	463b      	mov	r3, r7
 80100d6:	f7f0 faaf 	bl	8000638 <__aeabi_dmul>
 80100da:	a361      	add	r3, pc, #388	; (adr r3, 8010260 <atan+0x2f8>)
 80100dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100e0:	f7f0 f8f2 	bl	80002c8 <__aeabi_dsub>
 80100e4:	4632      	mov	r2, r6
 80100e6:	463b      	mov	r3, r7
 80100e8:	f7f0 faa6 	bl	8000638 <__aeabi_dmul>
 80100ec:	a35e      	add	r3, pc, #376	; (adr r3, 8010268 <atan+0x300>)
 80100ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100f2:	f7f0 f8e9 	bl	80002c8 <__aeabi_dsub>
 80100f6:	4632      	mov	r2, r6
 80100f8:	463b      	mov	r3, r7
 80100fa:	f7f0 fa9d 	bl	8000638 <__aeabi_dmul>
 80100fe:	a35c      	add	r3, pc, #368	; (adr r3, 8010270 <atan+0x308>)
 8010100:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010104:	f7f0 f8e0 	bl	80002c8 <__aeabi_dsub>
 8010108:	4632      	mov	r2, r6
 801010a:	463b      	mov	r3, r7
 801010c:	f7f0 fa94 	bl	8000638 <__aeabi_dmul>
 8010110:	4602      	mov	r2, r0
 8010112:	460b      	mov	r3, r1
 8010114:	4640      	mov	r0, r8
 8010116:	4649      	mov	r1, r9
 8010118:	f7f0 f8d8 	bl	80002cc <__adddf3>
 801011c:	4622      	mov	r2, r4
 801011e:	462b      	mov	r3, r5
 8010120:	f7f0 fa8a 	bl	8000638 <__aeabi_dmul>
 8010124:	f1ba 3fff 	cmp.w	sl, #4294967295
 8010128:	4602      	mov	r2, r0
 801012a:	460b      	mov	r3, r1
 801012c:	d14b      	bne.n	80101c6 <atan+0x25e>
 801012e:	4620      	mov	r0, r4
 8010130:	4629      	mov	r1, r5
 8010132:	f7f0 f8c9 	bl	80002c8 <__aeabi_dsub>
 8010136:	e72c      	b.n	800ff92 <atan+0x2a>
 8010138:	ee10 0a10 	vmov	r0, s0
 801013c:	4b53      	ldr	r3, [pc, #332]	; (801028c <atan+0x324>)
 801013e:	2200      	movs	r2, #0
 8010140:	4629      	mov	r1, r5
 8010142:	f7f0 f8c1 	bl	80002c8 <__aeabi_dsub>
 8010146:	4b51      	ldr	r3, [pc, #324]	; (801028c <atan+0x324>)
 8010148:	4606      	mov	r6, r0
 801014a:	460f      	mov	r7, r1
 801014c:	2200      	movs	r2, #0
 801014e:	4620      	mov	r0, r4
 8010150:	4629      	mov	r1, r5
 8010152:	f7f0 f8bb 	bl	80002cc <__adddf3>
 8010156:	4602      	mov	r2, r0
 8010158:	460b      	mov	r3, r1
 801015a:	4630      	mov	r0, r6
 801015c:	4639      	mov	r1, r7
 801015e:	f7f0 fb95 	bl	800088c <__aeabi_ddiv>
 8010162:	f04f 0a01 	mov.w	sl, #1
 8010166:	4604      	mov	r4, r0
 8010168:	460d      	mov	r5, r1
 801016a:	e764      	b.n	8010036 <atan+0xce>
 801016c:	4b49      	ldr	r3, [pc, #292]	; (8010294 <atan+0x32c>)
 801016e:	429e      	cmp	r6, r3
 8010170:	da1d      	bge.n	80101ae <atan+0x246>
 8010172:	ee10 0a10 	vmov	r0, s0
 8010176:	4b48      	ldr	r3, [pc, #288]	; (8010298 <atan+0x330>)
 8010178:	2200      	movs	r2, #0
 801017a:	4629      	mov	r1, r5
 801017c:	f7f0 f8a4 	bl	80002c8 <__aeabi_dsub>
 8010180:	4b45      	ldr	r3, [pc, #276]	; (8010298 <atan+0x330>)
 8010182:	4606      	mov	r6, r0
 8010184:	460f      	mov	r7, r1
 8010186:	2200      	movs	r2, #0
 8010188:	4620      	mov	r0, r4
 801018a:	4629      	mov	r1, r5
 801018c:	f7f0 fa54 	bl	8000638 <__aeabi_dmul>
 8010190:	4b3e      	ldr	r3, [pc, #248]	; (801028c <atan+0x324>)
 8010192:	2200      	movs	r2, #0
 8010194:	f7f0 f89a 	bl	80002cc <__adddf3>
 8010198:	4602      	mov	r2, r0
 801019a:	460b      	mov	r3, r1
 801019c:	4630      	mov	r0, r6
 801019e:	4639      	mov	r1, r7
 80101a0:	f7f0 fb74 	bl	800088c <__aeabi_ddiv>
 80101a4:	f04f 0a02 	mov.w	sl, #2
 80101a8:	4604      	mov	r4, r0
 80101aa:	460d      	mov	r5, r1
 80101ac:	e743      	b.n	8010036 <atan+0xce>
 80101ae:	462b      	mov	r3, r5
 80101b0:	ee10 2a10 	vmov	r2, s0
 80101b4:	4939      	ldr	r1, [pc, #228]	; (801029c <atan+0x334>)
 80101b6:	2000      	movs	r0, #0
 80101b8:	f7f0 fb68 	bl	800088c <__aeabi_ddiv>
 80101bc:	f04f 0a03 	mov.w	sl, #3
 80101c0:	4604      	mov	r4, r0
 80101c2:	460d      	mov	r5, r1
 80101c4:	e737      	b.n	8010036 <atan+0xce>
 80101c6:	4b36      	ldr	r3, [pc, #216]	; (80102a0 <atan+0x338>)
 80101c8:	4e36      	ldr	r6, [pc, #216]	; (80102a4 <atan+0x33c>)
 80101ca:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 80101ce:	eb03 0aca 	add.w	sl, r3, sl, lsl #3
 80101d2:	e9da 2300 	ldrd	r2, r3, [sl]
 80101d6:	f7f0 f877 	bl	80002c8 <__aeabi_dsub>
 80101da:	4622      	mov	r2, r4
 80101dc:	462b      	mov	r3, r5
 80101de:	f7f0 f873 	bl	80002c8 <__aeabi_dsub>
 80101e2:	4602      	mov	r2, r0
 80101e4:	460b      	mov	r3, r1
 80101e6:	e9d6 0100 	ldrd	r0, r1, [r6]
 80101ea:	f7f0 f86d 	bl	80002c8 <__aeabi_dsub>
 80101ee:	f1bb 0f00 	cmp.w	fp, #0
 80101f2:	4604      	mov	r4, r0
 80101f4:	460d      	mov	r5, r1
 80101f6:	f6bf aed6 	bge.w	800ffa6 <atan+0x3e>
 80101fa:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80101fe:	461d      	mov	r5, r3
 8010200:	e6d1      	b.n	800ffa6 <atan+0x3e>
 8010202:	a51d      	add	r5, pc, #116	; (adr r5, 8010278 <atan+0x310>)
 8010204:	e9d5 4500 	ldrd	r4, r5, [r5]
 8010208:	e6cd      	b.n	800ffa6 <atan+0x3e>
 801020a:	bf00      	nop
 801020c:	f3af 8000 	nop.w
 8010210:	54442d18 	.word	0x54442d18
 8010214:	bff921fb 	.word	0xbff921fb
 8010218:	8800759c 	.word	0x8800759c
 801021c:	7e37e43c 	.word	0x7e37e43c
 8010220:	e322da11 	.word	0xe322da11
 8010224:	3f90ad3a 	.word	0x3f90ad3a
 8010228:	24760deb 	.word	0x24760deb
 801022c:	3fa97b4b 	.word	0x3fa97b4b
 8010230:	a0d03d51 	.word	0xa0d03d51
 8010234:	3fb10d66 	.word	0x3fb10d66
 8010238:	c54c206e 	.word	0xc54c206e
 801023c:	3fb745cd 	.word	0x3fb745cd
 8010240:	920083ff 	.word	0x920083ff
 8010244:	3fc24924 	.word	0x3fc24924
 8010248:	5555550d 	.word	0x5555550d
 801024c:	3fd55555 	.word	0x3fd55555
 8010250:	2c6a6c2f 	.word	0x2c6a6c2f
 8010254:	bfa2b444 	.word	0xbfa2b444
 8010258:	52defd9a 	.word	0x52defd9a
 801025c:	3fadde2d 	.word	0x3fadde2d
 8010260:	af749a6d 	.word	0xaf749a6d
 8010264:	3fb3b0f2 	.word	0x3fb3b0f2
 8010268:	fe231671 	.word	0xfe231671
 801026c:	3fbc71c6 	.word	0x3fbc71c6
 8010270:	9998ebc4 	.word	0x9998ebc4
 8010274:	3fc99999 	.word	0x3fc99999
 8010278:	54442d18 	.word	0x54442d18
 801027c:	3ff921fb 	.word	0x3ff921fb
 8010280:	440fffff 	.word	0x440fffff
 8010284:	7ff00000 	.word	0x7ff00000
 8010288:	3fdbffff 	.word	0x3fdbffff
 801028c:	3ff00000 	.word	0x3ff00000
 8010290:	3ff2ffff 	.word	0x3ff2ffff
 8010294:	40038000 	.word	0x40038000
 8010298:	3ff80000 	.word	0x3ff80000
 801029c:	bff00000 	.word	0xbff00000
 80102a0:	08011980 	.word	0x08011980
 80102a4:	08011960 	.word	0x08011960

080102a8 <fabs>:
 80102a8:	ec51 0b10 	vmov	r0, r1, d0
 80102ac:	ee10 2a10 	vmov	r2, s0
 80102b0:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80102b4:	ec43 2b10 	vmov	d0, r2, r3
 80102b8:	4770      	bx	lr
 80102ba:	0000      	movs	r0, r0
 80102bc:	0000      	movs	r0, r0
	...

080102c0 <tan>:
 80102c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80102c2:	ec53 2b10 	vmov	r2, r3, d0
 80102c6:	4816      	ldr	r0, [pc, #88]	; (8010320 <tan+0x60>)
 80102c8:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80102cc:	4281      	cmp	r1, r0
 80102ce:	dc07      	bgt.n	80102e0 <tan+0x20>
 80102d0:	ed9f 1b11 	vldr	d1, [pc, #68]	; 8010318 <tan+0x58>
 80102d4:	2001      	movs	r0, #1
 80102d6:	b005      	add	sp, #20
 80102d8:	f85d eb04 	ldr.w	lr, [sp], #4
 80102dc:	f000 bd80 	b.w	8010de0 <__kernel_tan>
 80102e0:	4810      	ldr	r0, [pc, #64]	; (8010324 <tan+0x64>)
 80102e2:	4281      	cmp	r1, r0
 80102e4:	dd09      	ble.n	80102fa <tan+0x3a>
 80102e6:	ee10 0a10 	vmov	r0, s0
 80102ea:	4619      	mov	r1, r3
 80102ec:	f7ef ffec 	bl	80002c8 <__aeabi_dsub>
 80102f0:	ec41 0b10 	vmov	d0, r0, r1
 80102f4:	b005      	add	sp, #20
 80102f6:	f85d fb04 	ldr.w	pc, [sp], #4
 80102fa:	4668      	mov	r0, sp
 80102fc:	f000 f814 	bl	8010328 <__ieee754_rem_pio2>
 8010300:	0040      	lsls	r0, r0, #1
 8010302:	f000 0002 	and.w	r0, r0, #2
 8010306:	ed9d 1b02 	vldr	d1, [sp, #8]
 801030a:	ed9d 0b00 	vldr	d0, [sp]
 801030e:	f1c0 0001 	rsb	r0, r0, #1
 8010312:	f000 fd65 	bl	8010de0 <__kernel_tan>
 8010316:	e7ed      	b.n	80102f4 <tan+0x34>
	...
 8010320:	3fe921fb 	.word	0x3fe921fb
 8010324:	7fefffff 	.word	0x7fefffff

08010328 <__ieee754_rem_pio2>:
 8010328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801032c:	ed2d 8b02 	vpush	{d8}
 8010330:	ec55 4b10 	vmov	r4, r5, d0
 8010334:	4bca      	ldr	r3, [pc, #808]	; (8010660 <__ieee754_rem_pio2+0x338>)
 8010336:	b08b      	sub	sp, #44	; 0x2c
 8010338:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 801033c:	4598      	cmp	r8, r3
 801033e:	4682      	mov	sl, r0
 8010340:	9502      	str	r5, [sp, #8]
 8010342:	dc08      	bgt.n	8010356 <__ieee754_rem_pio2+0x2e>
 8010344:	2200      	movs	r2, #0
 8010346:	2300      	movs	r3, #0
 8010348:	ed80 0b00 	vstr	d0, [r0]
 801034c:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8010350:	f04f 0b00 	mov.w	fp, #0
 8010354:	e028      	b.n	80103a8 <__ieee754_rem_pio2+0x80>
 8010356:	4bc3      	ldr	r3, [pc, #780]	; (8010664 <__ieee754_rem_pio2+0x33c>)
 8010358:	4598      	cmp	r8, r3
 801035a:	dc78      	bgt.n	801044e <__ieee754_rem_pio2+0x126>
 801035c:	9b02      	ldr	r3, [sp, #8]
 801035e:	4ec2      	ldr	r6, [pc, #776]	; (8010668 <__ieee754_rem_pio2+0x340>)
 8010360:	2b00      	cmp	r3, #0
 8010362:	ee10 0a10 	vmov	r0, s0
 8010366:	a3b0      	add	r3, pc, #704	; (adr r3, 8010628 <__ieee754_rem_pio2+0x300>)
 8010368:	e9d3 2300 	ldrd	r2, r3, [r3]
 801036c:	4629      	mov	r1, r5
 801036e:	dd39      	ble.n	80103e4 <__ieee754_rem_pio2+0xbc>
 8010370:	f7ef ffaa 	bl	80002c8 <__aeabi_dsub>
 8010374:	45b0      	cmp	r8, r6
 8010376:	4604      	mov	r4, r0
 8010378:	460d      	mov	r5, r1
 801037a:	d01b      	beq.n	80103b4 <__ieee754_rem_pio2+0x8c>
 801037c:	a3ac      	add	r3, pc, #688	; (adr r3, 8010630 <__ieee754_rem_pio2+0x308>)
 801037e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010382:	f7ef ffa1 	bl	80002c8 <__aeabi_dsub>
 8010386:	4602      	mov	r2, r0
 8010388:	460b      	mov	r3, r1
 801038a:	e9ca 2300 	strd	r2, r3, [sl]
 801038e:	4620      	mov	r0, r4
 8010390:	4629      	mov	r1, r5
 8010392:	f7ef ff99 	bl	80002c8 <__aeabi_dsub>
 8010396:	a3a6      	add	r3, pc, #664	; (adr r3, 8010630 <__ieee754_rem_pio2+0x308>)
 8010398:	e9d3 2300 	ldrd	r2, r3, [r3]
 801039c:	f7ef ff94 	bl	80002c8 <__aeabi_dsub>
 80103a0:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80103a4:	f04f 0b01 	mov.w	fp, #1
 80103a8:	4658      	mov	r0, fp
 80103aa:	b00b      	add	sp, #44	; 0x2c
 80103ac:	ecbd 8b02 	vpop	{d8}
 80103b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80103b4:	a3a0      	add	r3, pc, #640	; (adr r3, 8010638 <__ieee754_rem_pio2+0x310>)
 80103b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80103ba:	f7ef ff85 	bl	80002c8 <__aeabi_dsub>
 80103be:	a3a0      	add	r3, pc, #640	; (adr r3, 8010640 <__ieee754_rem_pio2+0x318>)
 80103c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80103c4:	4604      	mov	r4, r0
 80103c6:	460d      	mov	r5, r1
 80103c8:	f7ef ff7e 	bl	80002c8 <__aeabi_dsub>
 80103cc:	4602      	mov	r2, r0
 80103ce:	460b      	mov	r3, r1
 80103d0:	e9ca 2300 	strd	r2, r3, [sl]
 80103d4:	4620      	mov	r0, r4
 80103d6:	4629      	mov	r1, r5
 80103d8:	f7ef ff76 	bl	80002c8 <__aeabi_dsub>
 80103dc:	a398      	add	r3, pc, #608	; (adr r3, 8010640 <__ieee754_rem_pio2+0x318>)
 80103de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80103e2:	e7db      	b.n	801039c <__ieee754_rem_pio2+0x74>
 80103e4:	f7ef ff72 	bl	80002cc <__adddf3>
 80103e8:	45b0      	cmp	r8, r6
 80103ea:	4604      	mov	r4, r0
 80103ec:	460d      	mov	r5, r1
 80103ee:	d016      	beq.n	801041e <__ieee754_rem_pio2+0xf6>
 80103f0:	a38f      	add	r3, pc, #572	; (adr r3, 8010630 <__ieee754_rem_pio2+0x308>)
 80103f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80103f6:	f7ef ff69 	bl	80002cc <__adddf3>
 80103fa:	4602      	mov	r2, r0
 80103fc:	460b      	mov	r3, r1
 80103fe:	e9ca 2300 	strd	r2, r3, [sl]
 8010402:	4620      	mov	r0, r4
 8010404:	4629      	mov	r1, r5
 8010406:	f7ef ff5f 	bl	80002c8 <__aeabi_dsub>
 801040a:	a389      	add	r3, pc, #548	; (adr r3, 8010630 <__ieee754_rem_pio2+0x308>)
 801040c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010410:	f7ef ff5c 	bl	80002cc <__adddf3>
 8010414:	f04f 3bff 	mov.w	fp, #4294967295
 8010418:	e9ca 0102 	strd	r0, r1, [sl, #8]
 801041c:	e7c4      	b.n	80103a8 <__ieee754_rem_pio2+0x80>
 801041e:	a386      	add	r3, pc, #536	; (adr r3, 8010638 <__ieee754_rem_pio2+0x310>)
 8010420:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010424:	f7ef ff52 	bl	80002cc <__adddf3>
 8010428:	a385      	add	r3, pc, #532	; (adr r3, 8010640 <__ieee754_rem_pio2+0x318>)
 801042a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801042e:	4604      	mov	r4, r0
 8010430:	460d      	mov	r5, r1
 8010432:	f7ef ff4b 	bl	80002cc <__adddf3>
 8010436:	4602      	mov	r2, r0
 8010438:	460b      	mov	r3, r1
 801043a:	e9ca 2300 	strd	r2, r3, [sl]
 801043e:	4620      	mov	r0, r4
 8010440:	4629      	mov	r1, r5
 8010442:	f7ef ff41 	bl	80002c8 <__aeabi_dsub>
 8010446:	a37e      	add	r3, pc, #504	; (adr r3, 8010640 <__ieee754_rem_pio2+0x318>)
 8010448:	e9d3 2300 	ldrd	r2, r3, [r3]
 801044c:	e7e0      	b.n	8010410 <__ieee754_rem_pio2+0xe8>
 801044e:	4b87      	ldr	r3, [pc, #540]	; (801066c <__ieee754_rem_pio2+0x344>)
 8010450:	4598      	cmp	r8, r3
 8010452:	f300 80d9 	bgt.w	8010608 <__ieee754_rem_pio2+0x2e0>
 8010456:	f7ff ff27 	bl	80102a8 <fabs>
 801045a:	ec55 4b10 	vmov	r4, r5, d0
 801045e:	ee10 0a10 	vmov	r0, s0
 8010462:	a379      	add	r3, pc, #484	; (adr r3, 8010648 <__ieee754_rem_pio2+0x320>)
 8010464:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010468:	4629      	mov	r1, r5
 801046a:	f7f0 f8e5 	bl	8000638 <__aeabi_dmul>
 801046e:	4b80      	ldr	r3, [pc, #512]	; (8010670 <__ieee754_rem_pio2+0x348>)
 8010470:	2200      	movs	r2, #0
 8010472:	f7ef ff2b 	bl	80002cc <__adddf3>
 8010476:	f7f0 fb8f 	bl	8000b98 <__aeabi_d2iz>
 801047a:	4683      	mov	fp, r0
 801047c:	f7f0 f872 	bl	8000564 <__aeabi_i2d>
 8010480:	4602      	mov	r2, r0
 8010482:	460b      	mov	r3, r1
 8010484:	ec43 2b18 	vmov	d8, r2, r3
 8010488:	a367      	add	r3, pc, #412	; (adr r3, 8010628 <__ieee754_rem_pio2+0x300>)
 801048a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801048e:	f7f0 f8d3 	bl	8000638 <__aeabi_dmul>
 8010492:	4602      	mov	r2, r0
 8010494:	460b      	mov	r3, r1
 8010496:	4620      	mov	r0, r4
 8010498:	4629      	mov	r1, r5
 801049a:	f7ef ff15 	bl	80002c8 <__aeabi_dsub>
 801049e:	a364      	add	r3, pc, #400	; (adr r3, 8010630 <__ieee754_rem_pio2+0x308>)
 80104a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80104a4:	4606      	mov	r6, r0
 80104a6:	460f      	mov	r7, r1
 80104a8:	ec51 0b18 	vmov	r0, r1, d8
 80104ac:	f7f0 f8c4 	bl	8000638 <__aeabi_dmul>
 80104b0:	f1bb 0f1f 	cmp.w	fp, #31
 80104b4:	4604      	mov	r4, r0
 80104b6:	460d      	mov	r5, r1
 80104b8:	dc0d      	bgt.n	80104d6 <__ieee754_rem_pio2+0x1ae>
 80104ba:	4b6e      	ldr	r3, [pc, #440]	; (8010674 <__ieee754_rem_pio2+0x34c>)
 80104bc:	f10b 32ff 	add.w	r2, fp, #4294967295
 80104c0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80104c4:	4543      	cmp	r3, r8
 80104c6:	d006      	beq.n	80104d6 <__ieee754_rem_pio2+0x1ae>
 80104c8:	4622      	mov	r2, r4
 80104ca:	462b      	mov	r3, r5
 80104cc:	4630      	mov	r0, r6
 80104ce:	4639      	mov	r1, r7
 80104d0:	f7ef fefa 	bl	80002c8 <__aeabi_dsub>
 80104d4:	e00f      	b.n	80104f6 <__ieee754_rem_pio2+0x1ce>
 80104d6:	462b      	mov	r3, r5
 80104d8:	4622      	mov	r2, r4
 80104da:	4630      	mov	r0, r6
 80104dc:	4639      	mov	r1, r7
 80104de:	f7ef fef3 	bl	80002c8 <__aeabi_dsub>
 80104e2:	ea4f 5328 	mov.w	r3, r8, asr #20
 80104e6:	9303      	str	r3, [sp, #12]
 80104e8:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80104ec:	ebc3 5818 	rsb	r8, r3, r8, lsr #20
 80104f0:	f1b8 0f10 	cmp.w	r8, #16
 80104f4:	dc02      	bgt.n	80104fc <__ieee754_rem_pio2+0x1d4>
 80104f6:	e9ca 0100 	strd	r0, r1, [sl]
 80104fa:	e039      	b.n	8010570 <__ieee754_rem_pio2+0x248>
 80104fc:	a34e      	add	r3, pc, #312	; (adr r3, 8010638 <__ieee754_rem_pio2+0x310>)
 80104fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010502:	ec51 0b18 	vmov	r0, r1, d8
 8010506:	f7f0 f897 	bl	8000638 <__aeabi_dmul>
 801050a:	4604      	mov	r4, r0
 801050c:	460d      	mov	r5, r1
 801050e:	4602      	mov	r2, r0
 8010510:	460b      	mov	r3, r1
 8010512:	4630      	mov	r0, r6
 8010514:	4639      	mov	r1, r7
 8010516:	f7ef fed7 	bl	80002c8 <__aeabi_dsub>
 801051a:	4602      	mov	r2, r0
 801051c:	460b      	mov	r3, r1
 801051e:	4680      	mov	r8, r0
 8010520:	4689      	mov	r9, r1
 8010522:	4630      	mov	r0, r6
 8010524:	4639      	mov	r1, r7
 8010526:	f7ef fecf 	bl	80002c8 <__aeabi_dsub>
 801052a:	4622      	mov	r2, r4
 801052c:	462b      	mov	r3, r5
 801052e:	f7ef fecb 	bl	80002c8 <__aeabi_dsub>
 8010532:	a343      	add	r3, pc, #268	; (adr r3, 8010640 <__ieee754_rem_pio2+0x318>)
 8010534:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010538:	4604      	mov	r4, r0
 801053a:	460d      	mov	r5, r1
 801053c:	ec51 0b18 	vmov	r0, r1, d8
 8010540:	f7f0 f87a 	bl	8000638 <__aeabi_dmul>
 8010544:	4622      	mov	r2, r4
 8010546:	462b      	mov	r3, r5
 8010548:	f7ef febe 	bl	80002c8 <__aeabi_dsub>
 801054c:	4602      	mov	r2, r0
 801054e:	460b      	mov	r3, r1
 8010550:	4604      	mov	r4, r0
 8010552:	460d      	mov	r5, r1
 8010554:	4640      	mov	r0, r8
 8010556:	4649      	mov	r1, r9
 8010558:	f7ef feb6 	bl	80002c8 <__aeabi_dsub>
 801055c:	9a03      	ldr	r2, [sp, #12]
 801055e:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8010562:	1ad3      	subs	r3, r2, r3
 8010564:	2b31      	cmp	r3, #49	; 0x31
 8010566:	dc24      	bgt.n	80105b2 <__ieee754_rem_pio2+0x28a>
 8010568:	e9ca 0100 	strd	r0, r1, [sl]
 801056c:	4646      	mov	r6, r8
 801056e:	464f      	mov	r7, r9
 8010570:	e9da 8900 	ldrd	r8, r9, [sl]
 8010574:	4630      	mov	r0, r6
 8010576:	4642      	mov	r2, r8
 8010578:	464b      	mov	r3, r9
 801057a:	4639      	mov	r1, r7
 801057c:	f7ef fea4 	bl	80002c8 <__aeabi_dsub>
 8010580:	462b      	mov	r3, r5
 8010582:	4622      	mov	r2, r4
 8010584:	f7ef fea0 	bl	80002c8 <__aeabi_dsub>
 8010588:	9b02      	ldr	r3, [sp, #8]
 801058a:	2b00      	cmp	r3, #0
 801058c:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8010590:	f6bf af0a 	bge.w	80103a8 <__ieee754_rem_pio2+0x80>
 8010594:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8010598:	f8ca 3004 	str.w	r3, [sl, #4]
 801059c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80105a0:	f8ca 8000 	str.w	r8, [sl]
 80105a4:	f8ca 0008 	str.w	r0, [sl, #8]
 80105a8:	f8ca 300c 	str.w	r3, [sl, #12]
 80105ac:	f1cb 0b00 	rsb	fp, fp, #0
 80105b0:	e6fa      	b.n	80103a8 <__ieee754_rem_pio2+0x80>
 80105b2:	a327      	add	r3, pc, #156	; (adr r3, 8010650 <__ieee754_rem_pio2+0x328>)
 80105b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80105b8:	ec51 0b18 	vmov	r0, r1, d8
 80105bc:	f7f0 f83c 	bl	8000638 <__aeabi_dmul>
 80105c0:	4604      	mov	r4, r0
 80105c2:	460d      	mov	r5, r1
 80105c4:	4602      	mov	r2, r0
 80105c6:	460b      	mov	r3, r1
 80105c8:	4640      	mov	r0, r8
 80105ca:	4649      	mov	r1, r9
 80105cc:	f7ef fe7c 	bl	80002c8 <__aeabi_dsub>
 80105d0:	4602      	mov	r2, r0
 80105d2:	460b      	mov	r3, r1
 80105d4:	4606      	mov	r6, r0
 80105d6:	460f      	mov	r7, r1
 80105d8:	4640      	mov	r0, r8
 80105da:	4649      	mov	r1, r9
 80105dc:	f7ef fe74 	bl	80002c8 <__aeabi_dsub>
 80105e0:	4622      	mov	r2, r4
 80105e2:	462b      	mov	r3, r5
 80105e4:	f7ef fe70 	bl	80002c8 <__aeabi_dsub>
 80105e8:	a31b      	add	r3, pc, #108	; (adr r3, 8010658 <__ieee754_rem_pio2+0x330>)
 80105ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80105ee:	4604      	mov	r4, r0
 80105f0:	460d      	mov	r5, r1
 80105f2:	ec51 0b18 	vmov	r0, r1, d8
 80105f6:	f7f0 f81f 	bl	8000638 <__aeabi_dmul>
 80105fa:	4622      	mov	r2, r4
 80105fc:	462b      	mov	r3, r5
 80105fe:	f7ef fe63 	bl	80002c8 <__aeabi_dsub>
 8010602:	4604      	mov	r4, r0
 8010604:	460d      	mov	r5, r1
 8010606:	e75f      	b.n	80104c8 <__ieee754_rem_pio2+0x1a0>
 8010608:	4b1b      	ldr	r3, [pc, #108]	; (8010678 <__ieee754_rem_pio2+0x350>)
 801060a:	4598      	cmp	r8, r3
 801060c:	dd36      	ble.n	801067c <__ieee754_rem_pio2+0x354>
 801060e:	ee10 2a10 	vmov	r2, s0
 8010612:	462b      	mov	r3, r5
 8010614:	4620      	mov	r0, r4
 8010616:	4629      	mov	r1, r5
 8010618:	f7ef fe56 	bl	80002c8 <__aeabi_dsub>
 801061c:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8010620:	e9ca 0100 	strd	r0, r1, [sl]
 8010624:	e694      	b.n	8010350 <__ieee754_rem_pio2+0x28>
 8010626:	bf00      	nop
 8010628:	54400000 	.word	0x54400000
 801062c:	3ff921fb 	.word	0x3ff921fb
 8010630:	1a626331 	.word	0x1a626331
 8010634:	3dd0b461 	.word	0x3dd0b461
 8010638:	1a600000 	.word	0x1a600000
 801063c:	3dd0b461 	.word	0x3dd0b461
 8010640:	2e037073 	.word	0x2e037073
 8010644:	3ba3198a 	.word	0x3ba3198a
 8010648:	6dc9c883 	.word	0x6dc9c883
 801064c:	3fe45f30 	.word	0x3fe45f30
 8010650:	2e000000 	.word	0x2e000000
 8010654:	3ba3198a 	.word	0x3ba3198a
 8010658:	252049c1 	.word	0x252049c1
 801065c:	397b839a 	.word	0x397b839a
 8010660:	3fe921fb 	.word	0x3fe921fb
 8010664:	4002d97b 	.word	0x4002d97b
 8010668:	3ff921fb 	.word	0x3ff921fb
 801066c:	413921fb 	.word	0x413921fb
 8010670:	3fe00000 	.word	0x3fe00000
 8010674:	080119a0 	.word	0x080119a0
 8010678:	7fefffff 	.word	0x7fefffff
 801067c:	ea4f 5428 	mov.w	r4, r8, asr #20
 8010680:	f2a4 4416 	subw	r4, r4, #1046	; 0x416
 8010684:	ee10 0a10 	vmov	r0, s0
 8010688:	eba8 5104 	sub.w	r1, r8, r4, lsl #20
 801068c:	ee10 6a10 	vmov	r6, s0
 8010690:	460f      	mov	r7, r1
 8010692:	f7f0 fa81 	bl	8000b98 <__aeabi_d2iz>
 8010696:	f7ef ff65 	bl	8000564 <__aeabi_i2d>
 801069a:	4602      	mov	r2, r0
 801069c:	460b      	mov	r3, r1
 801069e:	4630      	mov	r0, r6
 80106a0:	4639      	mov	r1, r7
 80106a2:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80106a6:	f7ef fe0f 	bl	80002c8 <__aeabi_dsub>
 80106aa:	4b23      	ldr	r3, [pc, #140]	; (8010738 <__ieee754_rem_pio2+0x410>)
 80106ac:	2200      	movs	r2, #0
 80106ae:	f7ef ffc3 	bl	8000638 <__aeabi_dmul>
 80106b2:	460f      	mov	r7, r1
 80106b4:	4606      	mov	r6, r0
 80106b6:	f7f0 fa6f 	bl	8000b98 <__aeabi_d2iz>
 80106ba:	f7ef ff53 	bl	8000564 <__aeabi_i2d>
 80106be:	4602      	mov	r2, r0
 80106c0:	460b      	mov	r3, r1
 80106c2:	4630      	mov	r0, r6
 80106c4:	4639      	mov	r1, r7
 80106c6:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80106ca:	f7ef fdfd 	bl	80002c8 <__aeabi_dsub>
 80106ce:	4b1a      	ldr	r3, [pc, #104]	; (8010738 <__ieee754_rem_pio2+0x410>)
 80106d0:	2200      	movs	r2, #0
 80106d2:	f7ef ffb1 	bl	8000638 <__aeabi_dmul>
 80106d6:	e9cd 0108 	strd	r0, r1, [sp, #32]
 80106da:	ad04      	add	r5, sp, #16
 80106dc:	f04f 0803 	mov.w	r8, #3
 80106e0:	46a9      	mov	r9, r5
 80106e2:	2600      	movs	r6, #0
 80106e4:	2700      	movs	r7, #0
 80106e6:	4632      	mov	r2, r6
 80106e8:	463b      	mov	r3, r7
 80106ea:	e9d5 0104 	ldrd	r0, r1, [r5, #16]
 80106ee:	46c3      	mov	fp, r8
 80106f0:	3d08      	subs	r5, #8
 80106f2:	f108 38ff 	add.w	r8, r8, #4294967295
 80106f6:	f7f0 fa07 	bl	8000b08 <__aeabi_dcmpeq>
 80106fa:	2800      	cmp	r0, #0
 80106fc:	d1f3      	bne.n	80106e6 <__ieee754_rem_pio2+0x3be>
 80106fe:	4b0f      	ldr	r3, [pc, #60]	; (801073c <__ieee754_rem_pio2+0x414>)
 8010700:	9301      	str	r3, [sp, #4]
 8010702:	2302      	movs	r3, #2
 8010704:	9300      	str	r3, [sp, #0]
 8010706:	4622      	mov	r2, r4
 8010708:	465b      	mov	r3, fp
 801070a:	4651      	mov	r1, sl
 801070c:	4648      	mov	r0, r9
 801070e:	f000 f817 	bl	8010740 <__kernel_rem_pio2>
 8010712:	9b02      	ldr	r3, [sp, #8]
 8010714:	2b00      	cmp	r3, #0
 8010716:	4683      	mov	fp, r0
 8010718:	f6bf ae46 	bge.w	80103a8 <__ieee754_rem_pio2+0x80>
 801071c:	e9da 2100 	ldrd	r2, r1, [sl]
 8010720:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010724:	e9ca 2300 	strd	r2, r3, [sl]
 8010728:	e9da 2102 	ldrd	r2, r1, [sl, #8]
 801072c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010730:	e9ca 2302 	strd	r2, r3, [sl, #8]
 8010734:	e73a      	b.n	80105ac <__ieee754_rem_pio2+0x284>
 8010736:	bf00      	nop
 8010738:	41700000 	.word	0x41700000
 801073c:	08011a20 	.word	0x08011a20

08010740 <__kernel_rem_pio2>:
 8010740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010744:	ed2d 8b02 	vpush	{d8}
 8010748:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
 801074c:	f112 0f14 	cmn.w	r2, #20
 8010750:	9308      	str	r3, [sp, #32]
 8010752:	9101      	str	r1, [sp, #4]
 8010754:	4bc4      	ldr	r3, [pc, #784]	; (8010a68 <__kernel_rem_pio2+0x328>)
 8010756:	99a6      	ldr	r1, [sp, #664]	; 0x298
 8010758:	900b      	str	r0, [sp, #44]	; 0x2c
 801075a:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 801075e:	9302      	str	r3, [sp, #8]
 8010760:	9b08      	ldr	r3, [sp, #32]
 8010762:	f103 33ff 	add.w	r3, r3, #4294967295
 8010766:	bfa8      	it	ge
 8010768:	1ed4      	subge	r4, r2, #3
 801076a:	9306      	str	r3, [sp, #24]
 801076c:	bfb2      	itee	lt
 801076e:	2400      	movlt	r4, #0
 8010770:	2318      	movge	r3, #24
 8010772:	fb94 f4f3 	sdivge	r4, r4, r3
 8010776:	f06f 0317 	mvn.w	r3, #23
 801077a:	fb04 3303 	mla	r3, r4, r3, r3
 801077e:	eb03 0a02 	add.w	sl, r3, r2
 8010782:	9b02      	ldr	r3, [sp, #8]
 8010784:	9a06      	ldr	r2, [sp, #24]
 8010786:	ed9f 8bb4 	vldr	d8, [pc, #720]	; 8010a58 <__kernel_rem_pio2+0x318>
 801078a:	eb03 0802 	add.w	r8, r3, r2
 801078e:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8010790:	1aa7      	subs	r7, r4, r2
 8010792:	ae22      	add	r6, sp, #136	; 0x88
 8010794:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8010798:	2500      	movs	r5, #0
 801079a:	4545      	cmp	r5, r8
 801079c:	dd13      	ble.n	80107c6 <__kernel_rem_pio2+0x86>
 801079e:	9b08      	ldr	r3, [sp, #32]
 80107a0:	ed9f 8bad 	vldr	d8, [pc, #692]	; 8010a58 <__kernel_rem_pio2+0x318>
 80107a4:	aa22      	add	r2, sp, #136	; 0x88
 80107a6:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 80107aa:	f50d 7be4 	add.w	fp, sp, #456	; 0x1c8
 80107ae:	f04f 0800 	mov.w	r8, #0
 80107b2:	9b02      	ldr	r3, [sp, #8]
 80107b4:	4598      	cmp	r8, r3
 80107b6:	dc2f      	bgt.n	8010818 <__kernel_rem_pio2+0xd8>
 80107b8:	ed8d 8b04 	vstr	d8, [sp, #16]
 80107bc:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 80107c0:	462f      	mov	r7, r5
 80107c2:	2600      	movs	r6, #0
 80107c4:	e01b      	b.n	80107fe <__kernel_rem_pio2+0xbe>
 80107c6:	42ef      	cmn	r7, r5
 80107c8:	d407      	bmi.n	80107da <__kernel_rem_pio2+0x9a>
 80107ca:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 80107ce:	f7ef fec9 	bl	8000564 <__aeabi_i2d>
 80107d2:	e8e6 0102 	strd	r0, r1, [r6], #8
 80107d6:	3501      	adds	r5, #1
 80107d8:	e7df      	b.n	801079a <__kernel_rem_pio2+0x5a>
 80107da:	ec51 0b18 	vmov	r0, r1, d8
 80107de:	e7f8      	b.n	80107d2 <__kernel_rem_pio2+0x92>
 80107e0:	e9d7 2300 	ldrd	r2, r3, [r7]
 80107e4:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 80107e8:	f7ef ff26 	bl	8000638 <__aeabi_dmul>
 80107ec:	4602      	mov	r2, r0
 80107ee:	460b      	mov	r3, r1
 80107f0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80107f4:	f7ef fd6a 	bl	80002cc <__adddf3>
 80107f8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80107fc:	3601      	adds	r6, #1
 80107fe:	9b06      	ldr	r3, [sp, #24]
 8010800:	429e      	cmp	r6, r3
 8010802:	f1a7 0708 	sub.w	r7, r7, #8
 8010806:	ddeb      	ble.n	80107e0 <__kernel_rem_pio2+0xa0>
 8010808:	ed9d 7b04 	vldr	d7, [sp, #16]
 801080c:	f108 0801 	add.w	r8, r8, #1
 8010810:	ecab 7b02 	vstmia	fp!, {d7}
 8010814:	3508      	adds	r5, #8
 8010816:	e7cc      	b.n	80107b2 <__kernel_rem_pio2+0x72>
 8010818:	9b02      	ldr	r3, [sp, #8]
 801081a:	aa0e      	add	r2, sp, #56	; 0x38
 801081c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8010820:	930d      	str	r3, [sp, #52]	; 0x34
 8010822:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8010824:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8010828:	9c02      	ldr	r4, [sp, #8]
 801082a:	930c      	str	r3, [sp, #48]	; 0x30
 801082c:	00e3      	lsls	r3, r4, #3
 801082e:	930a      	str	r3, [sp, #40]	; 0x28
 8010830:	ab9a      	add	r3, sp, #616	; 0x268
 8010832:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8010836:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 801083a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 801083e:	ab72      	add	r3, sp, #456	; 0x1c8
 8010840:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 8010844:	46c3      	mov	fp, r8
 8010846:	46a1      	mov	r9, r4
 8010848:	f1b9 0f00 	cmp.w	r9, #0
 801084c:	f1a5 0508 	sub.w	r5, r5, #8
 8010850:	dc77      	bgt.n	8010942 <__kernel_rem_pio2+0x202>
 8010852:	ec47 6b10 	vmov	d0, r6, r7
 8010856:	4650      	mov	r0, sl
 8010858:	f000 fd4e 	bl	80112f8 <scalbn>
 801085c:	ec57 6b10 	vmov	r6, r7, d0
 8010860:	2200      	movs	r2, #0
 8010862:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 8010866:	ee10 0a10 	vmov	r0, s0
 801086a:	4639      	mov	r1, r7
 801086c:	f7ef fee4 	bl	8000638 <__aeabi_dmul>
 8010870:	ec41 0b10 	vmov	d0, r0, r1
 8010874:	f000 fcc0 	bl	80111f8 <floor>
 8010878:	4b7c      	ldr	r3, [pc, #496]	; (8010a6c <__kernel_rem_pio2+0x32c>)
 801087a:	ec51 0b10 	vmov	r0, r1, d0
 801087e:	2200      	movs	r2, #0
 8010880:	f7ef feda 	bl	8000638 <__aeabi_dmul>
 8010884:	4602      	mov	r2, r0
 8010886:	460b      	mov	r3, r1
 8010888:	4630      	mov	r0, r6
 801088a:	4639      	mov	r1, r7
 801088c:	f7ef fd1c 	bl	80002c8 <__aeabi_dsub>
 8010890:	460f      	mov	r7, r1
 8010892:	4606      	mov	r6, r0
 8010894:	f7f0 f980 	bl	8000b98 <__aeabi_d2iz>
 8010898:	9004      	str	r0, [sp, #16]
 801089a:	f7ef fe63 	bl	8000564 <__aeabi_i2d>
 801089e:	4602      	mov	r2, r0
 80108a0:	460b      	mov	r3, r1
 80108a2:	4630      	mov	r0, r6
 80108a4:	4639      	mov	r1, r7
 80108a6:	f7ef fd0f 	bl	80002c8 <__aeabi_dsub>
 80108aa:	f1ba 0f00 	cmp.w	sl, #0
 80108ae:	4606      	mov	r6, r0
 80108b0:	460f      	mov	r7, r1
 80108b2:	dd6d      	ble.n	8010990 <__kernel_rem_pio2+0x250>
 80108b4:	1e62      	subs	r2, r4, #1
 80108b6:	ab0e      	add	r3, sp, #56	; 0x38
 80108b8:	9d04      	ldr	r5, [sp, #16]
 80108ba:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80108be:	f1ca 0118 	rsb	r1, sl, #24
 80108c2:	fa40 f301 	asr.w	r3, r0, r1
 80108c6:	441d      	add	r5, r3
 80108c8:	408b      	lsls	r3, r1
 80108ca:	1ac0      	subs	r0, r0, r3
 80108cc:	ab0e      	add	r3, sp, #56	; 0x38
 80108ce:	9504      	str	r5, [sp, #16]
 80108d0:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 80108d4:	f1ca 0317 	rsb	r3, sl, #23
 80108d8:	fa40 fb03 	asr.w	fp, r0, r3
 80108dc:	f1bb 0f00 	cmp.w	fp, #0
 80108e0:	dd65      	ble.n	80109ae <__kernel_rem_pio2+0x26e>
 80108e2:	9b04      	ldr	r3, [sp, #16]
 80108e4:	2200      	movs	r2, #0
 80108e6:	3301      	adds	r3, #1
 80108e8:	9304      	str	r3, [sp, #16]
 80108ea:	4615      	mov	r5, r2
 80108ec:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 80108f0:	4294      	cmp	r4, r2
 80108f2:	f300 809c 	bgt.w	8010a2e <__kernel_rem_pio2+0x2ee>
 80108f6:	f1ba 0f00 	cmp.w	sl, #0
 80108fa:	dd07      	ble.n	801090c <__kernel_rem_pio2+0x1cc>
 80108fc:	f1ba 0f01 	cmp.w	sl, #1
 8010900:	f000 80c0 	beq.w	8010a84 <__kernel_rem_pio2+0x344>
 8010904:	f1ba 0f02 	cmp.w	sl, #2
 8010908:	f000 80c6 	beq.w	8010a98 <__kernel_rem_pio2+0x358>
 801090c:	f1bb 0f02 	cmp.w	fp, #2
 8010910:	d14d      	bne.n	80109ae <__kernel_rem_pio2+0x26e>
 8010912:	4632      	mov	r2, r6
 8010914:	463b      	mov	r3, r7
 8010916:	4956      	ldr	r1, [pc, #344]	; (8010a70 <__kernel_rem_pio2+0x330>)
 8010918:	2000      	movs	r0, #0
 801091a:	f7ef fcd5 	bl	80002c8 <__aeabi_dsub>
 801091e:	4606      	mov	r6, r0
 8010920:	460f      	mov	r7, r1
 8010922:	2d00      	cmp	r5, #0
 8010924:	d043      	beq.n	80109ae <__kernel_rem_pio2+0x26e>
 8010926:	4650      	mov	r0, sl
 8010928:	ed9f 0b4d 	vldr	d0, [pc, #308]	; 8010a60 <__kernel_rem_pio2+0x320>
 801092c:	f000 fce4 	bl	80112f8 <scalbn>
 8010930:	4630      	mov	r0, r6
 8010932:	4639      	mov	r1, r7
 8010934:	ec53 2b10 	vmov	r2, r3, d0
 8010938:	f7ef fcc6 	bl	80002c8 <__aeabi_dsub>
 801093c:	4606      	mov	r6, r0
 801093e:	460f      	mov	r7, r1
 8010940:	e035      	b.n	80109ae <__kernel_rem_pio2+0x26e>
 8010942:	4b4c      	ldr	r3, [pc, #304]	; (8010a74 <__kernel_rem_pio2+0x334>)
 8010944:	2200      	movs	r2, #0
 8010946:	4630      	mov	r0, r6
 8010948:	4639      	mov	r1, r7
 801094a:	f7ef fe75 	bl	8000638 <__aeabi_dmul>
 801094e:	f7f0 f923 	bl	8000b98 <__aeabi_d2iz>
 8010952:	f7ef fe07 	bl	8000564 <__aeabi_i2d>
 8010956:	4602      	mov	r2, r0
 8010958:	460b      	mov	r3, r1
 801095a:	ec43 2b18 	vmov	d8, r2, r3
 801095e:	4b46      	ldr	r3, [pc, #280]	; (8010a78 <__kernel_rem_pio2+0x338>)
 8010960:	2200      	movs	r2, #0
 8010962:	f7ef fe69 	bl	8000638 <__aeabi_dmul>
 8010966:	4602      	mov	r2, r0
 8010968:	460b      	mov	r3, r1
 801096a:	4630      	mov	r0, r6
 801096c:	4639      	mov	r1, r7
 801096e:	f7ef fcab 	bl	80002c8 <__aeabi_dsub>
 8010972:	f7f0 f911 	bl	8000b98 <__aeabi_d2iz>
 8010976:	e9d5 2300 	ldrd	r2, r3, [r5]
 801097a:	f84b 0b04 	str.w	r0, [fp], #4
 801097e:	ec51 0b18 	vmov	r0, r1, d8
 8010982:	f7ef fca3 	bl	80002cc <__adddf3>
 8010986:	f109 39ff 	add.w	r9, r9, #4294967295
 801098a:	4606      	mov	r6, r0
 801098c:	460f      	mov	r7, r1
 801098e:	e75b      	b.n	8010848 <__kernel_rem_pio2+0x108>
 8010990:	d106      	bne.n	80109a0 <__kernel_rem_pio2+0x260>
 8010992:	1e63      	subs	r3, r4, #1
 8010994:	aa0e      	add	r2, sp, #56	; 0x38
 8010996:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801099a:	ea4f 5be0 	mov.w	fp, r0, asr #23
 801099e:	e79d      	b.n	80108dc <__kernel_rem_pio2+0x19c>
 80109a0:	4b36      	ldr	r3, [pc, #216]	; (8010a7c <__kernel_rem_pio2+0x33c>)
 80109a2:	2200      	movs	r2, #0
 80109a4:	f7f0 f8ce 	bl	8000b44 <__aeabi_dcmpge>
 80109a8:	2800      	cmp	r0, #0
 80109aa:	d13d      	bne.n	8010a28 <__kernel_rem_pio2+0x2e8>
 80109ac:	4683      	mov	fp, r0
 80109ae:	2200      	movs	r2, #0
 80109b0:	2300      	movs	r3, #0
 80109b2:	4630      	mov	r0, r6
 80109b4:	4639      	mov	r1, r7
 80109b6:	f7f0 f8a7 	bl	8000b08 <__aeabi_dcmpeq>
 80109ba:	2800      	cmp	r0, #0
 80109bc:	f000 80c0 	beq.w	8010b40 <__kernel_rem_pio2+0x400>
 80109c0:	1e65      	subs	r5, r4, #1
 80109c2:	462b      	mov	r3, r5
 80109c4:	2200      	movs	r2, #0
 80109c6:	9902      	ldr	r1, [sp, #8]
 80109c8:	428b      	cmp	r3, r1
 80109ca:	da6c      	bge.n	8010aa6 <__kernel_rem_pio2+0x366>
 80109cc:	2a00      	cmp	r2, #0
 80109ce:	f000 8089 	beq.w	8010ae4 <__kernel_rem_pio2+0x3a4>
 80109d2:	ab0e      	add	r3, sp, #56	; 0x38
 80109d4:	f1aa 0a18 	sub.w	sl, sl, #24
 80109d8:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80109dc:	2b00      	cmp	r3, #0
 80109de:	f000 80ad 	beq.w	8010b3c <__kernel_rem_pio2+0x3fc>
 80109e2:	4650      	mov	r0, sl
 80109e4:	ed9f 0b1e 	vldr	d0, [pc, #120]	; 8010a60 <__kernel_rem_pio2+0x320>
 80109e8:	f000 fc86 	bl	80112f8 <scalbn>
 80109ec:	ab9a      	add	r3, sp, #616	; 0x268
 80109ee:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80109f2:	ec57 6b10 	vmov	r6, r7, d0
 80109f6:	00ec      	lsls	r4, r5, #3
 80109f8:	f1a3 0898 	sub.w	r8, r3, #152	; 0x98
 80109fc:	46aa      	mov	sl, r5
 80109fe:	f1ba 0f00 	cmp.w	sl, #0
 8010a02:	f280 80d6 	bge.w	8010bb2 <__kernel_rem_pio2+0x472>
 8010a06:	ed9f 8b14 	vldr	d8, [pc, #80]	; 8010a58 <__kernel_rem_pio2+0x318>
 8010a0a:	462e      	mov	r6, r5
 8010a0c:	2e00      	cmp	r6, #0
 8010a0e:	f2c0 8104 	blt.w	8010c1a <__kernel_rem_pio2+0x4da>
 8010a12:	ab72      	add	r3, sp, #456	; 0x1c8
 8010a14:	ed8d 8b06 	vstr	d8, [sp, #24]
 8010a18:	f8df a064 	ldr.w	sl, [pc, #100]	; 8010a80 <__kernel_rem_pio2+0x340>
 8010a1c:	eb03 09c6 	add.w	r9, r3, r6, lsl #3
 8010a20:	f04f 0800 	mov.w	r8, #0
 8010a24:	1baf      	subs	r7, r5, r6
 8010a26:	e0ea      	b.n	8010bfe <__kernel_rem_pio2+0x4be>
 8010a28:	f04f 0b02 	mov.w	fp, #2
 8010a2c:	e759      	b.n	80108e2 <__kernel_rem_pio2+0x1a2>
 8010a2e:	f8d8 3000 	ldr.w	r3, [r8]
 8010a32:	b955      	cbnz	r5, 8010a4a <__kernel_rem_pio2+0x30a>
 8010a34:	b123      	cbz	r3, 8010a40 <__kernel_rem_pio2+0x300>
 8010a36:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 8010a3a:	f8c8 3000 	str.w	r3, [r8]
 8010a3e:	2301      	movs	r3, #1
 8010a40:	3201      	adds	r2, #1
 8010a42:	f108 0804 	add.w	r8, r8, #4
 8010a46:	461d      	mov	r5, r3
 8010a48:	e752      	b.n	80108f0 <__kernel_rem_pio2+0x1b0>
 8010a4a:	1acb      	subs	r3, r1, r3
 8010a4c:	f8c8 3000 	str.w	r3, [r8]
 8010a50:	462b      	mov	r3, r5
 8010a52:	e7f5      	b.n	8010a40 <__kernel_rem_pio2+0x300>
 8010a54:	f3af 8000 	nop.w
	...
 8010a64:	3ff00000 	.word	0x3ff00000
 8010a68:	08011b68 	.word	0x08011b68
 8010a6c:	40200000 	.word	0x40200000
 8010a70:	3ff00000 	.word	0x3ff00000
 8010a74:	3e700000 	.word	0x3e700000
 8010a78:	41700000 	.word	0x41700000
 8010a7c:	3fe00000 	.word	0x3fe00000
 8010a80:	08011b28 	.word	0x08011b28
 8010a84:	1e62      	subs	r2, r4, #1
 8010a86:	ab0e      	add	r3, sp, #56	; 0x38
 8010a88:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8010a8c:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8010a90:	a90e      	add	r1, sp, #56	; 0x38
 8010a92:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8010a96:	e739      	b.n	801090c <__kernel_rem_pio2+0x1cc>
 8010a98:	1e62      	subs	r2, r4, #1
 8010a9a:	ab0e      	add	r3, sp, #56	; 0x38
 8010a9c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8010aa0:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8010aa4:	e7f4      	b.n	8010a90 <__kernel_rem_pio2+0x350>
 8010aa6:	a90e      	add	r1, sp, #56	; 0x38
 8010aa8:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8010aac:	3b01      	subs	r3, #1
 8010aae:	430a      	orrs	r2, r1
 8010ab0:	e789      	b.n	80109c6 <__kernel_rem_pio2+0x286>
 8010ab2:	3301      	adds	r3, #1
 8010ab4:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 8010ab8:	2900      	cmp	r1, #0
 8010aba:	d0fa      	beq.n	8010ab2 <__kernel_rem_pio2+0x372>
 8010abc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010abe:	f502 721a 	add.w	r2, r2, #616	; 0x268
 8010ac2:	446a      	add	r2, sp
 8010ac4:	3a98      	subs	r2, #152	; 0x98
 8010ac6:	920a      	str	r2, [sp, #40]	; 0x28
 8010ac8:	9a08      	ldr	r2, [sp, #32]
 8010aca:	18e3      	adds	r3, r4, r3
 8010acc:	18a5      	adds	r5, r4, r2
 8010ace:	aa22      	add	r2, sp, #136	; 0x88
 8010ad0:	f104 0801 	add.w	r8, r4, #1
 8010ad4:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 8010ad8:	9304      	str	r3, [sp, #16]
 8010ada:	9b04      	ldr	r3, [sp, #16]
 8010adc:	4543      	cmp	r3, r8
 8010ade:	da04      	bge.n	8010aea <__kernel_rem_pio2+0x3aa>
 8010ae0:	461c      	mov	r4, r3
 8010ae2:	e6a3      	b.n	801082c <__kernel_rem_pio2+0xec>
 8010ae4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010ae6:	2301      	movs	r3, #1
 8010ae8:	e7e4      	b.n	8010ab4 <__kernel_rem_pio2+0x374>
 8010aea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010aec:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 8010af0:	f7ef fd38 	bl	8000564 <__aeabi_i2d>
 8010af4:	e8e5 0102 	strd	r0, r1, [r5], #8
 8010af8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8010afa:	46ab      	mov	fp, r5
 8010afc:	461c      	mov	r4, r3
 8010afe:	f04f 0900 	mov.w	r9, #0
 8010b02:	2600      	movs	r6, #0
 8010b04:	2700      	movs	r7, #0
 8010b06:	9b06      	ldr	r3, [sp, #24]
 8010b08:	4599      	cmp	r9, r3
 8010b0a:	dd06      	ble.n	8010b1a <__kernel_rem_pio2+0x3da>
 8010b0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010b0e:	e8e3 6702 	strd	r6, r7, [r3], #8
 8010b12:	f108 0801 	add.w	r8, r8, #1
 8010b16:	930a      	str	r3, [sp, #40]	; 0x28
 8010b18:	e7df      	b.n	8010ada <__kernel_rem_pio2+0x39a>
 8010b1a:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 8010b1e:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 8010b22:	f7ef fd89 	bl	8000638 <__aeabi_dmul>
 8010b26:	4602      	mov	r2, r0
 8010b28:	460b      	mov	r3, r1
 8010b2a:	4630      	mov	r0, r6
 8010b2c:	4639      	mov	r1, r7
 8010b2e:	f7ef fbcd 	bl	80002cc <__adddf3>
 8010b32:	f109 0901 	add.w	r9, r9, #1
 8010b36:	4606      	mov	r6, r0
 8010b38:	460f      	mov	r7, r1
 8010b3a:	e7e4      	b.n	8010b06 <__kernel_rem_pio2+0x3c6>
 8010b3c:	3d01      	subs	r5, #1
 8010b3e:	e748      	b.n	80109d2 <__kernel_rem_pio2+0x292>
 8010b40:	ec47 6b10 	vmov	d0, r6, r7
 8010b44:	f1ca 0000 	rsb	r0, sl, #0
 8010b48:	f000 fbd6 	bl	80112f8 <scalbn>
 8010b4c:	ec57 6b10 	vmov	r6, r7, d0
 8010b50:	4ba0      	ldr	r3, [pc, #640]	; (8010dd4 <__kernel_rem_pio2+0x694>)
 8010b52:	ee10 0a10 	vmov	r0, s0
 8010b56:	2200      	movs	r2, #0
 8010b58:	4639      	mov	r1, r7
 8010b5a:	f7ef fff3 	bl	8000b44 <__aeabi_dcmpge>
 8010b5e:	b1f8      	cbz	r0, 8010ba0 <__kernel_rem_pio2+0x460>
 8010b60:	4b9d      	ldr	r3, [pc, #628]	; (8010dd8 <__kernel_rem_pio2+0x698>)
 8010b62:	2200      	movs	r2, #0
 8010b64:	4630      	mov	r0, r6
 8010b66:	4639      	mov	r1, r7
 8010b68:	f7ef fd66 	bl	8000638 <__aeabi_dmul>
 8010b6c:	f7f0 f814 	bl	8000b98 <__aeabi_d2iz>
 8010b70:	4680      	mov	r8, r0
 8010b72:	f7ef fcf7 	bl	8000564 <__aeabi_i2d>
 8010b76:	4b97      	ldr	r3, [pc, #604]	; (8010dd4 <__kernel_rem_pio2+0x694>)
 8010b78:	2200      	movs	r2, #0
 8010b7a:	f7ef fd5d 	bl	8000638 <__aeabi_dmul>
 8010b7e:	460b      	mov	r3, r1
 8010b80:	4602      	mov	r2, r0
 8010b82:	4639      	mov	r1, r7
 8010b84:	4630      	mov	r0, r6
 8010b86:	f7ef fb9f 	bl	80002c8 <__aeabi_dsub>
 8010b8a:	f7f0 f805 	bl	8000b98 <__aeabi_d2iz>
 8010b8e:	1c65      	adds	r5, r4, #1
 8010b90:	ab0e      	add	r3, sp, #56	; 0x38
 8010b92:	f10a 0a18 	add.w	sl, sl, #24
 8010b96:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8010b9a:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 8010b9e:	e720      	b.n	80109e2 <__kernel_rem_pio2+0x2a2>
 8010ba0:	4630      	mov	r0, r6
 8010ba2:	4639      	mov	r1, r7
 8010ba4:	f7ef fff8 	bl	8000b98 <__aeabi_d2iz>
 8010ba8:	ab0e      	add	r3, sp, #56	; 0x38
 8010baa:	4625      	mov	r5, r4
 8010bac:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8010bb0:	e717      	b.n	80109e2 <__kernel_rem_pio2+0x2a2>
 8010bb2:	ab0e      	add	r3, sp, #56	; 0x38
 8010bb4:	f853 002a 	ldr.w	r0, [r3, sl, lsl #2]
 8010bb8:	f7ef fcd4 	bl	8000564 <__aeabi_i2d>
 8010bbc:	4632      	mov	r2, r6
 8010bbe:	463b      	mov	r3, r7
 8010bc0:	f7ef fd3a 	bl	8000638 <__aeabi_dmul>
 8010bc4:	4b84      	ldr	r3, [pc, #528]	; (8010dd8 <__kernel_rem_pio2+0x698>)
 8010bc6:	e968 0102 	strd	r0, r1, [r8, #-8]!
 8010bca:	2200      	movs	r2, #0
 8010bcc:	4630      	mov	r0, r6
 8010bce:	4639      	mov	r1, r7
 8010bd0:	f7ef fd32 	bl	8000638 <__aeabi_dmul>
 8010bd4:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010bd8:	4606      	mov	r6, r0
 8010bda:	460f      	mov	r7, r1
 8010bdc:	e70f      	b.n	80109fe <__kernel_rem_pio2+0x2be>
 8010bde:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 8010be2:	e8fa 0102 	ldrd	r0, r1, [sl], #8
 8010be6:	f7ef fd27 	bl	8000638 <__aeabi_dmul>
 8010bea:	4602      	mov	r2, r0
 8010bec:	460b      	mov	r3, r1
 8010bee:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8010bf2:	f7ef fb6b 	bl	80002cc <__adddf3>
 8010bf6:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8010bfa:	f108 0801 	add.w	r8, r8, #1
 8010bfe:	9b02      	ldr	r3, [sp, #8]
 8010c00:	4598      	cmp	r8, r3
 8010c02:	dc01      	bgt.n	8010c08 <__kernel_rem_pio2+0x4c8>
 8010c04:	45b8      	cmp	r8, r7
 8010c06:	ddea      	ble.n	8010bde <__kernel_rem_pio2+0x49e>
 8010c08:	ed9d 7b06 	vldr	d7, [sp, #24]
 8010c0c:	ab4a      	add	r3, sp, #296	; 0x128
 8010c0e:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 8010c12:	ed87 7b00 	vstr	d7, [r7]
 8010c16:	3e01      	subs	r6, #1
 8010c18:	e6f8      	b.n	8010a0c <__kernel_rem_pio2+0x2cc>
 8010c1a:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 8010c1c:	2b02      	cmp	r3, #2
 8010c1e:	dc0b      	bgt.n	8010c38 <__kernel_rem_pio2+0x4f8>
 8010c20:	2b00      	cmp	r3, #0
 8010c22:	dc35      	bgt.n	8010c90 <__kernel_rem_pio2+0x550>
 8010c24:	d059      	beq.n	8010cda <__kernel_rem_pio2+0x59a>
 8010c26:	9b04      	ldr	r3, [sp, #16]
 8010c28:	f003 0007 	and.w	r0, r3, #7
 8010c2c:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
 8010c30:	ecbd 8b02 	vpop	{d8}
 8010c34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010c38:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 8010c3a:	2b03      	cmp	r3, #3
 8010c3c:	d1f3      	bne.n	8010c26 <__kernel_rem_pio2+0x4e6>
 8010c3e:	ab4a      	add	r3, sp, #296	; 0x128
 8010c40:	4423      	add	r3, r4
 8010c42:	9306      	str	r3, [sp, #24]
 8010c44:	461c      	mov	r4, r3
 8010c46:	469a      	mov	sl, r3
 8010c48:	9502      	str	r5, [sp, #8]
 8010c4a:	9b02      	ldr	r3, [sp, #8]
 8010c4c:	2b00      	cmp	r3, #0
 8010c4e:	f1aa 0a08 	sub.w	sl, sl, #8
 8010c52:	dc6b      	bgt.n	8010d2c <__kernel_rem_pio2+0x5ec>
 8010c54:	46aa      	mov	sl, r5
 8010c56:	f1ba 0f01 	cmp.w	sl, #1
 8010c5a:	f1a4 0408 	sub.w	r4, r4, #8
 8010c5e:	f300 8085 	bgt.w	8010d6c <__kernel_rem_pio2+0x62c>
 8010c62:	9c06      	ldr	r4, [sp, #24]
 8010c64:	2000      	movs	r0, #0
 8010c66:	3408      	adds	r4, #8
 8010c68:	2100      	movs	r1, #0
 8010c6a:	2d01      	cmp	r5, #1
 8010c6c:	f300 809d 	bgt.w	8010daa <__kernel_rem_pio2+0x66a>
 8010c70:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	; 0x128
 8010c74:	e9dd 784c 	ldrd	r7, r8, [sp, #304]	; 0x130
 8010c78:	f1bb 0f00 	cmp.w	fp, #0
 8010c7c:	f040 809b 	bne.w	8010db6 <__kernel_rem_pio2+0x676>
 8010c80:	9b01      	ldr	r3, [sp, #4]
 8010c82:	e9c3 5600 	strd	r5, r6, [r3]
 8010c86:	e9c3 7802 	strd	r7, r8, [r3, #8]
 8010c8a:	e9c3 0104 	strd	r0, r1, [r3, #16]
 8010c8e:	e7ca      	b.n	8010c26 <__kernel_rem_pio2+0x4e6>
 8010c90:	3408      	adds	r4, #8
 8010c92:	ab4a      	add	r3, sp, #296	; 0x128
 8010c94:	441c      	add	r4, r3
 8010c96:	462e      	mov	r6, r5
 8010c98:	2000      	movs	r0, #0
 8010c9a:	2100      	movs	r1, #0
 8010c9c:	2e00      	cmp	r6, #0
 8010c9e:	da36      	bge.n	8010d0e <__kernel_rem_pio2+0x5ce>
 8010ca0:	f1bb 0f00 	cmp.w	fp, #0
 8010ca4:	d039      	beq.n	8010d1a <__kernel_rem_pio2+0x5da>
 8010ca6:	4602      	mov	r2, r0
 8010ca8:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010cac:	9c01      	ldr	r4, [sp, #4]
 8010cae:	e9c4 2300 	strd	r2, r3, [r4]
 8010cb2:	4602      	mov	r2, r0
 8010cb4:	460b      	mov	r3, r1
 8010cb6:	e9dd 014a 	ldrd	r0, r1, [sp, #296]	; 0x128
 8010cba:	f7ef fb05 	bl	80002c8 <__aeabi_dsub>
 8010cbe:	ae4c      	add	r6, sp, #304	; 0x130
 8010cc0:	2401      	movs	r4, #1
 8010cc2:	42a5      	cmp	r5, r4
 8010cc4:	da2c      	bge.n	8010d20 <__kernel_rem_pio2+0x5e0>
 8010cc6:	f1bb 0f00 	cmp.w	fp, #0
 8010cca:	d002      	beq.n	8010cd2 <__kernel_rem_pio2+0x592>
 8010ccc:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010cd0:	4619      	mov	r1, r3
 8010cd2:	9b01      	ldr	r3, [sp, #4]
 8010cd4:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8010cd8:	e7a5      	b.n	8010c26 <__kernel_rem_pio2+0x4e6>
 8010cda:	f504 731a 	add.w	r3, r4, #616	; 0x268
 8010cde:	eb0d 0403 	add.w	r4, sp, r3
 8010ce2:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
 8010ce6:	2000      	movs	r0, #0
 8010ce8:	2100      	movs	r1, #0
 8010cea:	2d00      	cmp	r5, #0
 8010cec:	da09      	bge.n	8010d02 <__kernel_rem_pio2+0x5c2>
 8010cee:	f1bb 0f00 	cmp.w	fp, #0
 8010cf2:	d002      	beq.n	8010cfa <__kernel_rem_pio2+0x5ba>
 8010cf4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010cf8:	4619      	mov	r1, r3
 8010cfa:	9b01      	ldr	r3, [sp, #4]
 8010cfc:	e9c3 0100 	strd	r0, r1, [r3]
 8010d00:	e791      	b.n	8010c26 <__kernel_rem_pio2+0x4e6>
 8010d02:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8010d06:	f7ef fae1 	bl	80002cc <__adddf3>
 8010d0a:	3d01      	subs	r5, #1
 8010d0c:	e7ed      	b.n	8010cea <__kernel_rem_pio2+0x5aa>
 8010d0e:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8010d12:	f7ef fadb 	bl	80002cc <__adddf3>
 8010d16:	3e01      	subs	r6, #1
 8010d18:	e7c0      	b.n	8010c9c <__kernel_rem_pio2+0x55c>
 8010d1a:	4602      	mov	r2, r0
 8010d1c:	460b      	mov	r3, r1
 8010d1e:	e7c5      	b.n	8010cac <__kernel_rem_pio2+0x56c>
 8010d20:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 8010d24:	f7ef fad2 	bl	80002cc <__adddf3>
 8010d28:	3401      	adds	r4, #1
 8010d2a:	e7ca      	b.n	8010cc2 <__kernel_rem_pio2+0x582>
 8010d2c:	e9da 8900 	ldrd	r8, r9, [sl]
 8010d30:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 8010d34:	9b02      	ldr	r3, [sp, #8]
 8010d36:	3b01      	subs	r3, #1
 8010d38:	9302      	str	r3, [sp, #8]
 8010d3a:	4632      	mov	r2, r6
 8010d3c:	463b      	mov	r3, r7
 8010d3e:	4640      	mov	r0, r8
 8010d40:	4649      	mov	r1, r9
 8010d42:	f7ef fac3 	bl	80002cc <__adddf3>
 8010d46:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8010d4a:	4602      	mov	r2, r0
 8010d4c:	460b      	mov	r3, r1
 8010d4e:	4640      	mov	r0, r8
 8010d50:	4649      	mov	r1, r9
 8010d52:	f7ef fab9 	bl	80002c8 <__aeabi_dsub>
 8010d56:	4632      	mov	r2, r6
 8010d58:	463b      	mov	r3, r7
 8010d5a:	f7ef fab7 	bl	80002cc <__adddf3>
 8010d5e:	ed9d 7b08 	vldr	d7, [sp, #32]
 8010d62:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8010d66:	ed8a 7b00 	vstr	d7, [sl]
 8010d6a:	e76e      	b.n	8010c4a <__kernel_rem_pio2+0x50a>
 8010d6c:	e9d4 8900 	ldrd	r8, r9, [r4]
 8010d70:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
 8010d74:	4640      	mov	r0, r8
 8010d76:	4632      	mov	r2, r6
 8010d78:	463b      	mov	r3, r7
 8010d7a:	4649      	mov	r1, r9
 8010d7c:	f7ef faa6 	bl	80002cc <__adddf3>
 8010d80:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8010d84:	4602      	mov	r2, r0
 8010d86:	460b      	mov	r3, r1
 8010d88:	4640      	mov	r0, r8
 8010d8a:	4649      	mov	r1, r9
 8010d8c:	f7ef fa9c 	bl	80002c8 <__aeabi_dsub>
 8010d90:	4632      	mov	r2, r6
 8010d92:	463b      	mov	r3, r7
 8010d94:	f7ef fa9a 	bl	80002cc <__adddf3>
 8010d98:	ed9d 7b02 	vldr	d7, [sp, #8]
 8010d9c:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8010da0:	ed84 7b00 	vstr	d7, [r4]
 8010da4:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010da8:	e755      	b.n	8010c56 <__kernel_rem_pio2+0x516>
 8010daa:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8010dae:	f7ef fa8d 	bl	80002cc <__adddf3>
 8010db2:	3d01      	subs	r5, #1
 8010db4:	e759      	b.n	8010c6a <__kernel_rem_pio2+0x52a>
 8010db6:	9b01      	ldr	r3, [sp, #4]
 8010db8:	9a01      	ldr	r2, [sp, #4]
 8010dba:	601d      	str	r5, [r3, #0]
 8010dbc:	f106 4400 	add.w	r4, r6, #2147483648	; 0x80000000
 8010dc0:	605c      	str	r4, [r3, #4]
 8010dc2:	609f      	str	r7, [r3, #8]
 8010dc4:	f108 4300 	add.w	r3, r8, #2147483648	; 0x80000000
 8010dc8:	60d3      	str	r3, [r2, #12]
 8010dca:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010dce:	6110      	str	r0, [r2, #16]
 8010dd0:	6153      	str	r3, [r2, #20]
 8010dd2:	e728      	b.n	8010c26 <__kernel_rem_pio2+0x4e6>
 8010dd4:	41700000 	.word	0x41700000
 8010dd8:	3e700000 	.word	0x3e700000
 8010ddc:	00000000 	.word	0x00000000

08010de0 <__kernel_tan>:
 8010de0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010de4:	ed2d 8b06 	vpush	{d8-d10}
 8010de8:	ec5b ab10 	vmov	sl, fp, d0
 8010dec:	4be0      	ldr	r3, [pc, #896]	; (8011170 <__kernel_tan+0x390>)
 8010dee:	b083      	sub	sp, #12
 8010df0:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
 8010df4:	429f      	cmp	r7, r3
 8010df6:	ec59 8b11 	vmov	r8, r9, d1
 8010dfa:	4606      	mov	r6, r0
 8010dfc:	f8cd b000 	str.w	fp, [sp]
 8010e00:	dc61      	bgt.n	8010ec6 <__kernel_tan+0xe6>
 8010e02:	ee10 0a10 	vmov	r0, s0
 8010e06:	4659      	mov	r1, fp
 8010e08:	f7ef fec6 	bl	8000b98 <__aeabi_d2iz>
 8010e0c:	4605      	mov	r5, r0
 8010e0e:	2800      	cmp	r0, #0
 8010e10:	f040 8083 	bne.w	8010f1a <__kernel_tan+0x13a>
 8010e14:	1c73      	adds	r3, r6, #1
 8010e16:	4652      	mov	r2, sl
 8010e18:	4313      	orrs	r3, r2
 8010e1a:	433b      	orrs	r3, r7
 8010e1c:	d112      	bne.n	8010e44 <__kernel_tan+0x64>
 8010e1e:	ec4b ab10 	vmov	d0, sl, fp
 8010e22:	f7ff fa41 	bl	80102a8 <fabs>
 8010e26:	49d3      	ldr	r1, [pc, #844]	; (8011174 <__kernel_tan+0x394>)
 8010e28:	ec53 2b10 	vmov	r2, r3, d0
 8010e2c:	2000      	movs	r0, #0
 8010e2e:	f7ef fd2d 	bl	800088c <__aeabi_ddiv>
 8010e32:	4682      	mov	sl, r0
 8010e34:	468b      	mov	fp, r1
 8010e36:	ec4b ab10 	vmov	d0, sl, fp
 8010e3a:	b003      	add	sp, #12
 8010e3c:	ecbd 8b06 	vpop	{d8-d10}
 8010e40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010e44:	2e01      	cmp	r6, #1
 8010e46:	d0f6      	beq.n	8010e36 <__kernel_tan+0x56>
 8010e48:	4642      	mov	r2, r8
 8010e4a:	464b      	mov	r3, r9
 8010e4c:	4650      	mov	r0, sl
 8010e4e:	4659      	mov	r1, fp
 8010e50:	f7ef fa3c 	bl	80002cc <__adddf3>
 8010e54:	4602      	mov	r2, r0
 8010e56:	460b      	mov	r3, r1
 8010e58:	460f      	mov	r7, r1
 8010e5a:	2000      	movs	r0, #0
 8010e5c:	49c6      	ldr	r1, [pc, #792]	; (8011178 <__kernel_tan+0x398>)
 8010e5e:	f7ef fd15 	bl	800088c <__aeabi_ddiv>
 8010e62:	e9cd 0100 	strd	r0, r1, [sp]
 8010e66:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010e6a:	462e      	mov	r6, r5
 8010e6c:	4652      	mov	r2, sl
 8010e6e:	462c      	mov	r4, r5
 8010e70:	4630      	mov	r0, r6
 8010e72:	461d      	mov	r5, r3
 8010e74:	4639      	mov	r1, r7
 8010e76:	465b      	mov	r3, fp
 8010e78:	f7ef fa26 	bl	80002c8 <__aeabi_dsub>
 8010e7c:	4602      	mov	r2, r0
 8010e7e:	460b      	mov	r3, r1
 8010e80:	4640      	mov	r0, r8
 8010e82:	4649      	mov	r1, r9
 8010e84:	f7ef fa20 	bl	80002c8 <__aeabi_dsub>
 8010e88:	4632      	mov	r2, r6
 8010e8a:	462b      	mov	r3, r5
 8010e8c:	f7ef fbd4 	bl	8000638 <__aeabi_dmul>
 8010e90:	4632      	mov	r2, r6
 8010e92:	4680      	mov	r8, r0
 8010e94:	4689      	mov	r9, r1
 8010e96:	462b      	mov	r3, r5
 8010e98:	4630      	mov	r0, r6
 8010e9a:	4639      	mov	r1, r7
 8010e9c:	f7ef fbcc 	bl	8000638 <__aeabi_dmul>
 8010ea0:	4bb4      	ldr	r3, [pc, #720]	; (8011174 <__kernel_tan+0x394>)
 8010ea2:	2200      	movs	r2, #0
 8010ea4:	f7ef fa12 	bl	80002cc <__adddf3>
 8010ea8:	4602      	mov	r2, r0
 8010eaa:	460b      	mov	r3, r1
 8010eac:	4640      	mov	r0, r8
 8010eae:	4649      	mov	r1, r9
 8010eb0:	f7ef fa0c 	bl	80002cc <__adddf3>
 8010eb4:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010eb8:	f7ef fbbe 	bl	8000638 <__aeabi_dmul>
 8010ebc:	4622      	mov	r2, r4
 8010ebe:	462b      	mov	r3, r5
 8010ec0:	f7ef fa04 	bl	80002cc <__adddf3>
 8010ec4:	e7b5      	b.n	8010e32 <__kernel_tan+0x52>
 8010ec6:	4bad      	ldr	r3, [pc, #692]	; (801117c <__kernel_tan+0x39c>)
 8010ec8:	429f      	cmp	r7, r3
 8010eca:	dd26      	ble.n	8010f1a <__kernel_tan+0x13a>
 8010ecc:	9b00      	ldr	r3, [sp, #0]
 8010ece:	2b00      	cmp	r3, #0
 8010ed0:	da09      	bge.n	8010ee6 <__kernel_tan+0x106>
 8010ed2:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 8010ed6:	469b      	mov	fp, r3
 8010ed8:	ee10 aa10 	vmov	sl, s0
 8010edc:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8010ee0:	ee11 8a10 	vmov	r8, s2
 8010ee4:	4699      	mov	r9, r3
 8010ee6:	4652      	mov	r2, sl
 8010ee8:	465b      	mov	r3, fp
 8010eea:	a183      	add	r1, pc, #524	; (adr r1, 80110f8 <__kernel_tan+0x318>)
 8010eec:	e9d1 0100 	ldrd	r0, r1, [r1]
 8010ef0:	f7ef f9ea 	bl	80002c8 <__aeabi_dsub>
 8010ef4:	4642      	mov	r2, r8
 8010ef6:	464b      	mov	r3, r9
 8010ef8:	4604      	mov	r4, r0
 8010efa:	460d      	mov	r5, r1
 8010efc:	a180      	add	r1, pc, #512	; (adr r1, 8011100 <__kernel_tan+0x320>)
 8010efe:	e9d1 0100 	ldrd	r0, r1, [r1]
 8010f02:	f7ef f9e1 	bl	80002c8 <__aeabi_dsub>
 8010f06:	4622      	mov	r2, r4
 8010f08:	462b      	mov	r3, r5
 8010f0a:	f7ef f9df 	bl	80002cc <__adddf3>
 8010f0e:	f04f 0800 	mov.w	r8, #0
 8010f12:	4682      	mov	sl, r0
 8010f14:	468b      	mov	fp, r1
 8010f16:	f04f 0900 	mov.w	r9, #0
 8010f1a:	4652      	mov	r2, sl
 8010f1c:	465b      	mov	r3, fp
 8010f1e:	4650      	mov	r0, sl
 8010f20:	4659      	mov	r1, fp
 8010f22:	f7ef fb89 	bl	8000638 <__aeabi_dmul>
 8010f26:	4602      	mov	r2, r0
 8010f28:	460b      	mov	r3, r1
 8010f2a:	ec43 2b18 	vmov	d8, r2, r3
 8010f2e:	f7ef fb83 	bl	8000638 <__aeabi_dmul>
 8010f32:	ec53 2b18 	vmov	r2, r3, d8
 8010f36:	4604      	mov	r4, r0
 8010f38:	460d      	mov	r5, r1
 8010f3a:	4650      	mov	r0, sl
 8010f3c:	4659      	mov	r1, fp
 8010f3e:	f7ef fb7b 	bl	8000638 <__aeabi_dmul>
 8010f42:	a371      	add	r3, pc, #452	; (adr r3, 8011108 <__kernel_tan+0x328>)
 8010f44:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010f48:	ec41 0b19 	vmov	d9, r0, r1
 8010f4c:	4620      	mov	r0, r4
 8010f4e:	4629      	mov	r1, r5
 8010f50:	f7ef fb72 	bl	8000638 <__aeabi_dmul>
 8010f54:	a36e      	add	r3, pc, #440	; (adr r3, 8011110 <__kernel_tan+0x330>)
 8010f56:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010f5a:	f7ef f9b7 	bl	80002cc <__adddf3>
 8010f5e:	4622      	mov	r2, r4
 8010f60:	462b      	mov	r3, r5
 8010f62:	f7ef fb69 	bl	8000638 <__aeabi_dmul>
 8010f66:	a36c      	add	r3, pc, #432	; (adr r3, 8011118 <__kernel_tan+0x338>)
 8010f68:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010f6c:	f7ef f9ae 	bl	80002cc <__adddf3>
 8010f70:	4622      	mov	r2, r4
 8010f72:	462b      	mov	r3, r5
 8010f74:	f7ef fb60 	bl	8000638 <__aeabi_dmul>
 8010f78:	a369      	add	r3, pc, #420	; (adr r3, 8011120 <__kernel_tan+0x340>)
 8010f7a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010f7e:	f7ef f9a5 	bl	80002cc <__adddf3>
 8010f82:	4622      	mov	r2, r4
 8010f84:	462b      	mov	r3, r5
 8010f86:	f7ef fb57 	bl	8000638 <__aeabi_dmul>
 8010f8a:	a367      	add	r3, pc, #412	; (adr r3, 8011128 <__kernel_tan+0x348>)
 8010f8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010f90:	f7ef f99c 	bl	80002cc <__adddf3>
 8010f94:	4622      	mov	r2, r4
 8010f96:	462b      	mov	r3, r5
 8010f98:	f7ef fb4e 	bl	8000638 <__aeabi_dmul>
 8010f9c:	a364      	add	r3, pc, #400	; (adr r3, 8011130 <__kernel_tan+0x350>)
 8010f9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010fa2:	f7ef f993 	bl	80002cc <__adddf3>
 8010fa6:	ec53 2b18 	vmov	r2, r3, d8
 8010faa:	f7ef fb45 	bl	8000638 <__aeabi_dmul>
 8010fae:	a362      	add	r3, pc, #392	; (adr r3, 8011138 <__kernel_tan+0x358>)
 8010fb0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010fb4:	ec41 0b1a 	vmov	d10, r0, r1
 8010fb8:	4620      	mov	r0, r4
 8010fba:	4629      	mov	r1, r5
 8010fbc:	f7ef fb3c 	bl	8000638 <__aeabi_dmul>
 8010fc0:	a35f      	add	r3, pc, #380	; (adr r3, 8011140 <__kernel_tan+0x360>)
 8010fc2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010fc6:	f7ef f981 	bl	80002cc <__adddf3>
 8010fca:	4622      	mov	r2, r4
 8010fcc:	462b      	mov	r3, r5
 8010fce:	f7ef fb33 	bl	8000638 <__aeabi_dmul>
 8010fd2:	a35d      	add	r3, pc, #372	; (adr r3, 8011148 <__kernel_tan+0x368>)
 8010fd4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010fd8:	f7ef f978 	bl	80002cc <__adddf3>
 8010fdc:	4622      	mov	r2, r4
 8010fde:	462b      	mov	r3, r5
 8010fe0:	f7ef fb2a 	bl	8000638 <__aeabi_dmul>
 8010fe4:	a35a      	add	r3, pc, #360	; (adr r3, 8011150 <__kernel_tan+0x370>)
 8010fe6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010fea:	f7ef f96f 	bl	80002cc <__adddf3>
 8010fee:	4622      	mov	r2, r4
 8010ff0:	462b      	mov	r3, r5
 8010ff2:	f7ef fb21 	bl	8000638 <__aeabi_dmul>
 8010ff6:	a358      	add	r3, pc, #352	; (adr r3, 8011158 <__kernel_tan+0x378>)
 8010ff8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010ffc:	f7ef f966 	bl	80002cc <__adddf3>
 8011000:	4622      	mov	r2, r4
 8011002:	462b      	mov	r3, r5
 8011004:	f7ef fb18 	bl	8000638 <__aeabi_dmul>
 8011008:	a355      	add	r3, pc, #340	; (adr r3, 8011160 <__kernel_tan+0x380>)
 801100a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801100e:	f7ef f95d 	bl	80002cc <__adddf3>
 8011012:	4602      	mov	r2, r0
 8011014:	460b      	mov	r3, r1
 8011016:	ec51 0b1a 	vmov	r0, r1, d10
 801101a:	f7ef f957 	bl	80002cc <__adddf3>
 801101e:	ec53 2b19 	vmov	r2, r3, d9
 8011022:	f7ef fb09 	bl	8000638 <__aeabi_dmul>
 8011026:	4642      	mov	r2, r8
 8011028:	464b      	mov	r3, r9
 801102a:	f7ef f94f 	bl	80002cc <__adddf3>
 801102e:	ec53 2b18 	vmov	r2, r3, d8
 8011032:	f7ef fb01 	bl	8000638 <__aeabi_dmul>
 8011036:	4642      	mov	r2, r8
 8011038:	464b      	mov	r3, r9
 801103a:	f7ef f947 	bl	80002cc <__adddf3>
 801103e:	a34a      	add	r3, pc, #296	; (adr r3, 8011168 <__kernel_tan+0x388>)
 8011040:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011044:	4604      	mov	r4, r0
 8011046:	460d      	mov	r5, r1
 8011048:	ec51 0b19 	vmov	r0, r1, d9
 801104c:	f7ef faf4 	bl	8000638 <__aeabi_dmul>
 8011050:	4622      	mov	r2, r4
 8011052:	462b      	mov	r3, r5
 8011054:	f7ef f93a 	bl	80002cc <__adddf3>
 8011058:	460b      	mov	r3, r1
 801105a:	ec41 0b18 	vmov	d8, r0, r1
 801105e:	4602      	mov	r2, r0
 8011060:	4659      	mov	r1, fp
 8011062:	4650      	mov	r0, sl
 8011064:	f7ef f932 	bl	80002cc <__adddf3>
 8011068:	4b44      	ldr	r3, [pc, #272]	; (801117c <__kernel_tan+0x39c>)
 801106a:	429f      	cmp	r7, r3
 801106c:	4604      	mov	r4, r0
 801106e:	460d      	mov	r5, r1
 8011070:	f340 8086 	ble.w	8011180 <__kernel_tan+0x3a0>
 8011074:	4630      	mov	r0, r6
 8011076:	f7ef fa75 	bl	8000564 <__aeabi_i2d>
 801107a:	4622      	mov	r2, r4
 801107c:	4680      	mov	r8, r0
 801107e:	4689      	mov	r9, r1
 8011080:	462b      	mov	r3, r5
 8011082:	4620      	mov	r0, r4
 8011084:	4629      	mov	r1, r5
 8011086:	f7ef fad7 	bl	8000638 <__aeabi_dmul>
 801108a:	4642      	mov	r2, r8
 801108c:	4606      	mov	r6, r0
 801108e:	460f      	mov	r7, r1
 8011090:	464b      	mov	r3, r9
 8011092:	4620      	mov	r0, r4
 8011094:	4629      	mov	r1, r5
 8011096:	f7ef f919 	bl	80002cc <__adddf3>
 801109a:	4602      	mov	r2, r0
 801109c:	460b      	mov	r3, r1
 801109e:	4630      	mov	r0, r6
 80110a0:	4639      	mov	r1, r7
 80110a2:	f7ef fbf3 	bl	800088c <__aeabi_ddiv>
 80110a6:	ec53 2b18 	vmov	r2, r3, d8
 80110aa:	f7ef f90d 	bl	80002c8 <__aeabi_dsub>
 80110ae:	4602      	mov	r2, r0
 80110b0:	460b      	mov	r3, r1
 80110b2:	4650      	mov	r0, sl
 80110b4:	4659      	mov	r1, fp
 80110b6:	f7ef f907 	bl	80002c8 <__aeabi_dsub>
 80110ba:	4602      	mov	r2, r0
 80110bc:	460b      	mov	r3, r1
 80110be:	f7ef f905 	bl	80002cc <__adddf3>
 80110c2:	4602      	mov	r2, r0
 80110c4:	460b      	mov	r3, r1
 80110c6:	4640      	mov	r0, r8
 80110c8:	4649      	mov	r1, r9
 80110ca:	f7ef f8fd 	bl	80002c8 <__aeabi_dsub>
 80110ce:	9b00      	ldr	r3, [sp, #0]
 80110d0:	ea4f 7aa3 	mov.w	sl, r3, asr #30
 80110d4:	f00a 0a02 	and.w	sl, sl, #2
 80110d8:	4604      	mov	r4, r0
 80110da:	f1ca 0001 	rsb	r0, sl, #1
 80110de:	460d      	mov	r5, r1
 80110e0:	f7ef fa40 	bl	8000564 <__aeabi_i2d>
 80110e4:	4602      	mov	r2, r0
 80110e6:	460b      	mov	r3, r1
 80110e8:	4620      	mov	r0, r4
 80110ea:	4629      	mov	r1, r5
 80110ec:	f7ef faa4 	bl	8000638 <__aeabi_dmul>
 80110f0:	e69f      	b.n	8010e32 <__kernel_tan+0x52>
 80110f2:	bf00      	nop
 80110f4:	f3af 8000 	nop.w
 80110f8:	54442d18 	.word	0x54442d18
 80110fc:	3fe921fb 	.word	0x3fe921fb
 8011100:	33145c07 	.word	0x33145c07
 8011104:	3c81a626 	.word	0x3c81a626
 8011108:	74bf7ad4 	.word	0x74bf7ad4
 801110c:	3efb2a70 	.word	0x3efb2a70
 8011110:	32f0a7e9 	.word	0x32f0a7e9
 8011114:	3f12b80f 	.word	0x3f12b80f
 8011118:	1a8d1068 	.word	0x1a8d1068
 801111c:	3f3026f7 	.word	0x3f3026f7
 8011120:	fee08315 	.word	0xfee08315
 8011124:	3f57dbc8 	.word	0x3f57dbc8
 8011128:	e96e8493 	.word	0xe96e8493
 801112c:	3f8226e3 	.word	0x3f8226e3
 8011130:	1bb341fe 	.word	0x1bb341fe
 8011134:	3faba1ba 	.word	0x3faba1ba
 8011138:	db605373 	.word	0xdb605373
 801113c:	bef375cb 	.word	0xbef375cb
 8011140:	a03792a6 	.word	0xa03792a6
 8011144:	3f147e88 	.word	0x3f147e88
 8011148:	f2f26501 	.word	0xf2f26501
 801114c:	3f4344d8 	.word	0x3f4344d8
 8011150:	c9560328 	.word	0xc9560328
 8011154:	3f6d6d22 	.word	0x3f6d6d22
 8011158:	8406d637 	.word	0x8406d637
 801115c:	3f9664f4 	.word	0x3f9664f4
 8011160:	1110fe7a 	.word	0x1110fe7a
 8011164:	3fc11111 	.word	0x3fc11111
 8011168:	55555563 	.word	0x55555563
 801116c:	3fd55555 	.word	0x3fd55555
 8011170:	3e2fffff 	.word	0x3e2fffff
 8011174:	3ff00000 	.word	0x3ff00000
 8011178:	bff00000 	.word	0xbff00000
 801117c:	3fe59427 	.word	0x3fe59427
 8011180:	2e01      	cmp	r6, #1
 8011182:	d02f      	beq.n	80111e4 <__kernel_tan+0x404>
 8011184:	460f      	mov	r7, r1
 8011186:	4602      	mov	r2, r0
 8011188:	460b      	mov	r3, r1
 801118a:	4689      	mov	r9, r1
 801118c:	2000      	movs	r0, #0
 801118e:	4917      	ldr	r1, [pc, #92]	; (80111ec <__kernel_tan+0x40c>)
 8011190:	f7ef fb7c 	bl	800088c <__aeabi_ddiv>
 8011194:	2600      	movs	r6, #0
 8011196:	e9cd 0100 	strd	r0, r1, [sp]
 801119a:	4652      	mov	r2, sl
 801119c:	465b      	mov	r3, fp
 801119e:	4630      	mov	r0, r6
 80111a0:	4639      	mov	r1, r7
 80111a2:	f7ef f891 	bl	80002c8 <__aeabi_dsub>
 80111a6:	e9dd 4500 	ldrd	r4, r5, [sp]
 80111aa:	4602      	mov	r2, r0
 80111ac:	460b      	mov	r3, r1
 80111ae:	ec51 0b18 	vmov	r0, r1, d8
 80111b2:	f7ef f889 	bl	80002c8 <__aeabi_dsub>
 80111b6:	4632      	mov	r2, r6
 80111b8:	462b      	mov	r3, r5
 80111ba:	f7ef fa3d 	bl	8000638 <__aeabi_dmul>
 80111be:	46b0      	mov	r8, r6
 80111c0:	460f      	mov	r7, r1
 80111c2:	4642      	mov	r2, r8
 80111c4:	462b      	mov	r3, r5
 80111c6:	4634      	mov	r4, r6
 80111c8:	4649      	mov	r1, r9
 80111ca:	4606      	mov	r6, r0
 80111cc:	4640      	mov	r0, r8
 80111ce:	f7ef fa33 	bl	8000638 <__aeabi_dmul>
 80111d2:	4b07      	ldr	r3, [pc, #28]	; (80111f0 <__kernel_tan+0x410>)
 80111d4:	2200      	movs	r2, #0
 80111d6:	f7ef f879 	bl	80002cc <__adddf3>
 80111da:	4602      	mov	r2, r0
 80111dc:	460b      	mov	r3, r1
 80111de:	4630      	mov	r0, r6
 80111e0:	4639      	mov	r1, r7
 80111e2:	e665      	b.n	8010eb0 <__kernel_tan+0xd0>
 80111e4:	4682      	mov	sl, r0
 80111e6:	468b      	mov	fp, r1
 80111e8:	e625      	b.n	8010e36 <__kernel_tan+0x56>
 80111ea:	bf00      	nop
 80111ec:	bff00000 	.word	0xbff00000
 80111f0:	3ff00000 	.word	0x3ff00000
 80111f4:	00000000 	.word	0x00000000

080111f8 <floor>:
 80111f8:	ec51 0b10 	vmov	r0, r1, d0
 80111fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011200:	f3c1 570a 	ubfx	r7, r1, #20, #11
 8011204:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 8011208:	2e13      	cmp	r6, #19
 801120a:	ee10 5a10 	vmov	r5, s0
 801120e:	ee10 8a10 	vmov	r8, s0
 8011212:	460c      	mov	r4, r1
 8011214:	dc32      	bgt.n	801127c <floor+0x84>
 8011216:	2e00      	cmp	r6, #0
 8011218:	da14      	bge.n	8011244 <floor+0x4c>
 801121a:	a333      	add	r3, pc, #204	; (adr r3, 80112e8 <floor+0xf0>)
 801121c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011220:	f7ef f854 	bl	80002cc <__adddf3>
 8011224:	2200      	movs	r2, #0
 8011226:	2300      	movs	r3, #0
 8011228:	f7ef fc96 	bl	8000b58 <__aeabi_dcmpgt>
 801122c:	b138      	cbz	r0, 801123e <floor+0x46>
 801122e:	2c00      	cmp	r4, #0
 8011230:	da57      	bge.n	80112e2 <floor+0xea>
 8011232:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 8011236:	431d      	orrs	r5, r3
 8011238:	d001      	beq.n	801123e <floor+0x46>
 801123a:	4c2d      	ldr	r4, [pc, #180]	; (80112f0 <floor+0xf8>)
 801123c:	2500      	movs	r5, #0
 801123e:	4621      	mov	r1, r4
 8011240:	4628      	mov	r0, r5
 8011242:	e025      	b.n	8011290 <floor+0x98>
 8011244:	4f2b      	ldr	r7, [pc, #172]	; (80112f4 <floor+0xfc>)
 8011246:	4137      	asrs	r7, r6
 8011248:	ea01 0307 	and.w	r3, r1, r7
 801124c:	4303      	orrs	r3, r0
 801124e:	d01f      	beq.n	8011290 <floor+0x98>
 8011250:	a325      	add	r3, pc, #148	; (adr r3, 80112e8 <floor+0xf0>)
 8011252:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011256:	f7ef f839 	bl	80002cc <__adddf3>
 801125a:	2200      	movs	r2, #0
 801125c:	2300      	movs	r3, #0
 801125e:	f7ef fc7b 	bl	8000b58 <__aeabi_dcmpgt>
 8011262:	2800      	cmp	r0, #0
 8011264:	d0eb      	beq.n	801123e <floor+0x46>
 8011266:	2c00      	cmp	r4, #0
 8011268:	bfbe      	ittt	lt
 801126a:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 801126e:	fa43 f606 	asrlt.w	r6, r3, r6
 8011272:	19a4      	addlt	r4, r4, r6
 8011274:	ea24 0407 	bic.w	r4, r4, r7
 8011278:	2500      	movs	r5, #0
 801127a:	e7e0      	b.n	801123e <floor+0x46>
 801127c:	2e33      	cmp	r6, #51	; 0x33
 801127e:	dd0b      	ble.n	8011298 <floor+0xa0>
 8011280:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8011284:	d104      	bne.n	8011290 <floor+0x98>
 8011286:	ee10 2a10 	vmov	r2, s0
 801128a:	460b      	mov	r3, r1
 801128c:	f7ef f81e 	bl	80002cc <__adddf3>
 8011290:	ec41 0b10 	vmov	d0, r0, r1
 8011294:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011298:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 801129c:	f04f 33ff 	mov.w	r3, #4294967295
 80112a0:	fa23 f707 	lsr.w	r7, r3, r7
 80112a4:	4207      	tst	r7, r0
 80112a6:	d0f3      	beq.n	8011290 <floor+0x98>
 80112a8:	a30f      	add	r3, pc, #60	; (adr r3, 80112e8 <floor+0xf0>)
 80112aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80112ae:	f7ef f80d 	bl	80002cc <__adddf3>
 80112b2:	2200      	movs	r2, #0
 80112b4:	2300      	movs	r3, #0
 80112b6:	f7ef fc4f 	bl	8000b58 <__aeabi_dcmpgt>
 80112ba:	2800      	cmp	r0, #0
 80112bc:	d0bf      	beq.n	801123e <floor+0x46>
 80112be:	2c00      	cmp	r4, #0
 80112c0:	da02      	bge.n	80112c8 <floor+0xd0>
 80112c2:	2e14      	cmp	r6, #20
 80112c4:	d103      	bne.n	80112ce <floor+0xd6>
 80112c6:	3401      	adds	r4, #1
 80112c8:	ea25 0507 	bic.w	r5, r5, r7
 80112cc:	e7b7      	b.n	801123e <floor+0x46>
 80112ce:	2301      	movs	r3, #1
 80112d0:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 80112d4:	fa03 f606 	lsl.w	r6, r3, r6
 80112d8:	4435      	add	r5, r6
 80112da:	4545      	cmp	r5, r8
 80112dc:	bf38      	it	cc
 80112de:	18e4      	addcc	r4, r4, r3
 80112e0:	e7f2      	b.n	80112c8 <floor+0xd0>
 80112e2:	2500      	movs	r5, #0
 80112e4:	462c      	mov	r4, r5
 80112e6:	e7aa      	b.n	801123e <floor+0x46>
 80112e8:	8800759c 	.word	0x8800759c
 80112ec:	7e37e43c 	.word	0x7e37e43c
 80112f0:	bff00000 	.word	0xbff00000
 80112f4:	000fffff 	.word	0x000fffff

080112f8 <scalbn>:
 80112f8:	b570      	push	{r4, r5, r6, lr}
 80112fa:	ec55 4b10 	vmov	r4, r5, d0
 80112fe:	f3c5 520a 	ubfx	r2, r5, #20, #11
 8011302:	4606      	mov	r6, r0
 8011304:	462b      	mov	r3, r5
 8011306:	b99a      	cbnz	r2, 8011330 <scalbn+0x38>
 8011308:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 801130c:	4323      	orrs	r3, r4
 801130e:	d036      	beq.n	801137e <scalbn+0x86>
 8011310:	4b39      	ldr	r3, [pc, #228]	; (80113f8 <scalbn+0x100>)
 8011312:	4629      	mov	r1, r5
 8011314:	ee10 0a10 	vmov	r0, s0
 8011318:	2200      	movs	r2, #0
 801131a:	f7ef f98d 	bl	8000638 <__aeabi_dmul>
 801131e:	4b37      	ldr	r3, [pc, #220]	; (80113fc <scalbn+0x104>)
 8011320:	429e      	cmp	r6, r3
 8011322:	4604      	mov	r4, r0
 8011324:	460d      	mov	r5, r1
 8011326:	da10      	bge.n	801134a <scalbn+0x52>
 8011328:	a32b      	add	r3, pc, #172	; (adr r3, 80113d8 <scalbn+0xe0>)
 801132a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801132e:	e03a      	b.n	80113a6 <scalbn+0xae>
 8011330:	f240 71ff 	movw	r1, #2047	; 0x7ff
 8011334:	428a      	cmp	r2, r1
 8011336:	d10c      	bne.n	8011352 <scalbn+0x5a>
 8011338:	ee10 2a10 	vmov	r2, s0
 801133c:	4620      	mov	r0, r4
 801133e:	4629      	mov	r1, r5
 8011340:	f7ee ffc4 	bl	80002cc <__adddf3>
 8011344:	4604      	mov	r4, r0
 8011346:	460d      	mov	r5, r1
 8011348:	e019      	b.n	801137e <scalbn+0x86>
 801134a:	f3c1 520a 	ubfx	r2, r1, #20, #11
 801134e:	460b      	mov	r3, r1
 8011350:	3a36      	subs	r2, #54	; 0x36
 8011352:	4432      	add	r2, r6
 8011354:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8011358:	428a      	cmp	r2, r1
 801135a:	dd08      	ble.n	801136e <scalbn+0x76>
 801135c:	2d00      	cmp	r5, #0
 801135e:	a120      	add	r1, pc, #128	; (adr r1, 80113e0 <scalbn+0xe8>)
 8011360:	e9d1 0100 	ldrd	r0, r1, [r1]
 8011364:	da1c      	bge.n	80113a0 <scalbn+0xa8>
 8011366:	a120      	add	r1, pc, #128	; (adr r1, 80113e8 <scalbn+0xf0>)
 8011368:	e9d1 0100 	ldrd	r0, r1, [r1]
 801136c:	e018      	b.n	80113a0 <scalbn+0xa8>
 801136e:	2a00      	cmp	r2, #0
 8011370:	dd08      	ble.n	8011384 <scalbn+0x8c>
 8011372:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8011376:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 801137a:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 801137e:	ec45 4b10 	vmov	d0, r4, r5
 8011382:	bd70      	pop	{r4, r5, r6, pc}
 8011384:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8011388:	da19      	bge.n	80113be <scalbn+0xc6>
 801138a:	f24c 3350 	movw	r3, #50000	; 0xc350
 801138e:	429e      	cmp	r6, r3
 8011390:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 8011394:	dd0a      	ble.n	80113ac <scalbn+0xb4>
 8011396:	a112      	add	r1, pc, #72	; (adr r1, 80113e0 <scalbn+0xe8>)
 8011398:	e9d1 0100 	ldrd	r0, r1, [r1]
 801139c:	2b00      	cmp	r3, #0
 801139e:	d1e2      	bne.n	8011366 <scalbn+0x6e>
 80113a0:	a30f      	add	r3, pc, #60	; (adr r3, 80113e0 <scalbn+0xe8>)
 80113a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80113a6:	f7ef f947 	bl	8000638 <__aeabi_dmul>
 80113aa:	e7cb      	b.n	8011344 <scalbn+0x4c>
 80113ac:	a10a      	add	r1, pc, #40	; (adr r1, 80113d8 <scalbn+0xe0>)
 80113ae:	e9d1 0100 	ldrd	r0, r1, [r1]
 80113b2:	2b00      	cmp	r3, #0
 80113b4:	d0b8      	beq.n	8011328 <scalbn+0x30>
 80113b6:	a10e      	add	r1, pc, #56	; (adr r1, 80113f0 <scalbn+0xf8>)
 80113b8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80113bc:	e7b4      	b.n	8011328 <scalbn+0x30>
 80113be:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80113c2:	3236      	adds	r2, #54	; 0x36
 80113c4:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 80113c8:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 80113cc:	4620      	mov	r0, r4
 80113ce:	4b0c      	ldr	r3, [pc, #48]	; (8011400 <scalbn+0x108>)
 80113d0:	2200      	movs	r2, #0
 80113d2:	e7e8      	b.n	80113a6 <scalbn+0xae>
 80113d4:	f3af 8000 	nop.w
 80113d8:	c2f8f359 	.word	0xc2f8f359
 80113dc:	01a56e1f 	.word	0x01a56e1f
 80113e0:	8800759c 	.word	0x8800759c
 80113e4:	7e37e43c 	.word	0x7e37e43c
 80113e8:	8800759c 	.word	0x8800759c
 80113ec:	fe37e43c 	.word	0xfe37e43c
 80113f0:	c2f8f359 	.word	0xc2f8f359
 80113f4:	81a56e1f 	.word	0x81a56e1f
 80113f8:	43500000 	.word	0x43500000
 80113fc:	ffff3cb0 	.word	0xffff3cb0
 8011400:	3c900000 	.word	0x3c900000

08011404 <_init>:
 8011404:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011406:	bf00      	nop
 8011408:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801140a:	bc08      	pop	{r3}
 801140c:	469e      	mov	lr, r3
 801140e:	4770      	bx	lr

08011410 <_fini>:
 8011410:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011412:	bf00      	nop
 8011414:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8011416:	bc08      	pop	{r3}
 8011418:	469e      	mov	lr, r3
 801141a:	4770      	bx	lr
