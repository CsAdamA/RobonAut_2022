
RobonAUT-control.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00010384  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000758  08010558  08010558  00020558  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08010cb0  08010cb0  00030280  2**0
                  CONTENTS
  4 .ARM          00000008  08010cb0  08010cb0  00020cb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08010cb8  08010cb8  00030280  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08010cb8  08010cb8  00020cb8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08010cbc  08010cbc  00020cbc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000280  20000000  08010cc0  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000092c  20000280  08010f40  00030280  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000bac  08010f40  00030bac  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00030280  2**0
                  CONTENTS, READONLY
 12 .debug_info   000180e0  00000000  00000000  000302b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000380f  00000000  00000000  00048390  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000012a8  00000000  00000000  0004bba0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001188  00000000  00000000  0004ce48  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00026427  00000000  00000000  0004dfd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001986f  00000000  00000000  000743f7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000e16c6  00000000  00000000  0008dc66  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0016f32c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000060b4  00000000  00000000  0016f37c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000280 	.word	0x20000280
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0801053c 	.word	0x0801053c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000284 	.word	0x20000284
 800020c:	0801053c 	.word	0x0801053c

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295
 8000c9c:	f000 b974 	b.w	8000f88 <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f806 	bl	8000cb8 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__udivmoddi4>:
 8000cb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cbc:	9d08      	ldr	r5, [sp, #32]
 8000cbe:	4604      	mov	r4, r0
 8000cc0:	468e      	mov	lr, r1
 8000cc2:	2b00      	cmp	r3, #0
 8000cc4:	d14d      	bne.n	8000d62 <__udivmoddi4+0xaa>
 8000cc6:	428a      	cmp	r2, r1
 8000cc8:	4694      	mov	ip, r2
 8000cca:	d969      	bls.n	8000da0 <__udivmoddi4+0xe8>
 8000ccc:	fab2 f282 	clz	r2, r2
 8000cd0:	b152      	cbz	r2, 8000ce8 <__udivmoddi4+0x30>
 8000cd2:	fa01 f302 	lsl.w	r3, r1, r2
 8000cd6:	f1c2 0120 	rsb	r1, r2, #32
 8000cda:	fa20 f101 	lsr.w	r1, r0, r1
 8000cde:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ce2:	ea41 0e03 	orr.w	lr, r1, r3
 8000ce6:	4094      	lsls	r4, r2
 8000ce8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000cec:	0c21      	lsrs	r1, r4, #16
 8000cee:	fbbe f6f8 	udiv	r6, lr, r8
 8000cf2:	fa1f f78c 	uxth.w	r7, ip
 8000cf6:	fb08 e316 	mls	r3, r8, r6, lr
 8000cfa:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000cfe:	fb06 f107 	mul.w	r1, r6, r7
 8000d02:	4299      	cmp	r1, r3
 8000d04:	d90a      	bls.n	8000d1c <__udivmoddi4+0x64>
 8000d06:	eb1c 0303 	adds.w	r3, ip, r3
 8000d0a:	f106 30ff 	add.w	r0, r6, #4294967295
 8000d0e:	f080 811f 	bcs.w	8000f50 <__udivmoddi4+0x298>
 8000d12:	4299      	cmp	r1, r3
 8000d14:	f240 811c 	bls.w	8000f50 <__udivmoddi4+0x298>
 8000d18:	3e02      	subs	r6, #2
 8000d1a:	4463      	add	r3, ip
 8000d1c:	1a5b      	subs	r3, r3, r1
 8000d1e:	b2a4      	uxth	r4, r4
 8000d20:	fbb3 f0f8 	udiv	r0, r3, r8
 8000d24:	fb08 3310 	mls	r3, r8, r0, r3
 8000d28:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000d2c:	fb00 f707 	mul.w	r7, r0, r7
 8000d30:	42a7      	cmp	r7, r4
 8000d32:	d90a      	bls.n	8000d4a <__udivmoddi4+0x92>
 8000d34:	eb1c 0404 	adds.w	r4, ip, r4
 8000d38:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d3c:	f080 810a 	bcs.w	8000f54 <__udivmoddi4+0x29c>
 8000d40:	42a7      	cmp	r7, r4
 8000d42:	f240 8107 	bls.w	8000f54 <__udivmoddi4+0x29c>
 8000d46:	4464      	add	r4, ip
 8000d48:	3802      	subs	r0, #2
 8000d4a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d4e:	1be4      	subs	r4, r4, r7
 8000d50:	2600      	movs	r6, #0
 8000d52:	b11d      	cbz	r5, 8000d5c <__udivmoddi4+0xa4>
 8000d54:	40d4      	lsrs	r4, r2
 8000d56:	2300      	movs	r3, #0
 8000d58:	e9c5 4300 	strd	r4, r3, [r5]
 8000d5c:	4631      	mov	r1, r6
 8000d5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d62:	428b      	cmp	r3, r1
 8000d64:	d909      	bls.n	8000d7a <__udivmoddi4+0xc2>
 8000d66:	2d00      	cmp	r5, #0
 8000d68:	f000 80ef 	beq.w	8000f4a <__udivmoddi4+0x292>
 8000d6c:	2600      	movs	r6, #0
 8000d6e:	e9c5 0100 	strd	r0, r1, [r5]
 8000d72:	4630      	mov	r0, r6
 8000d74:	4631      	mov	r1, r6
 8000d76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d7a:	fab3 f683 	clz	r6, r3
 8000d7e:	2e00      	cmp	r6, #0
 8000d80:	d14a      	bne.n	8000e18 <__udivmoddi4+0x160>
 8000d82:	428b      	cmp	r3, r1
 8000d84:	d302      	bcc.n	8000d8c <__udivmoddi4+0xd4>
 8000d86:	4282      	cmp	r2, r0
 8000d88:	f200 80f9 	bhi.w	8000f7e <__udivmoddi4+0x2c6>
 8000d8c:	1a84      	subs	r4, r0, r2
 8000d8e:	eb61 0303 	sbc.w	r3, r1, r3
 8000d92:	2001      	movs	r0, #1
 8000d94:	469e      	mov	lr, r3
 8000d96:	2d00      	cmp	r5, #0
 8000d98:	d0e0      	beq.n	8000d5c <__udivmoddi4+0xa4>
 8000d9a:	e9c5 4e00 	strd	r4, lr, [r5]
 8000d9e:	e7dd      	b.n	8000d5c <__udivmoddi4+0xa4>
 8000da0:	b902      	cbnz	r2, 8000da4 <__udivmoddi4+0xec>
 8000da2:	deff      	udf	#255	; 0xff
 8000da4:	fab2 f282 	clz	r2, r2
 8000da8:	2a00      	cmp	r2, #0
 8000daa:	f040 8092 	bne.w	8000ed2 <__udivmoddi4+0x21a>
 8000dae:	eba1 010c 	sub.w	r1, r1, ip
 8000db2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000db6:	fa1f fe8c 	uxth.w	lr, ip
 8000dba:	2601      	movs	r6, #1
 8000dbc:	0c20      	lsrs	r0, r4, #16
 8000dbe:	fbb1 f3f7 	udiv	r3, r1, r7
 8000dc2:	fb07 1113 	mls	r1, r7, r3, r1
 8000dc6:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000dca:	fb0e f003 	mul.w	r0, lr, r3
 8000dce:	4288      	cmp	r0, r1
 8000dd0:	d908      	bls.n	8000de4 <__udivmoddi4+0x12c>
 8000dd2:	eb1c 0101 	adds.w	r1, ip, r1
 8000dd6:	f103 38ff 	add.w	r8, r3, #4294967295
 8000dda:	d202      	bcs.n	8000de2 <__udivmoddi4+0x12a>
 8000ddc:	4288      	cmp	r0, r1
 8000dde:	f200 80cb 	bhi.w	8000f78 <__udivmoddi4+0x2c0>
 8000de2:	4643      	mov	r3, r8
 8000de4:	1a09      	subs	r1, r1, r0
 8000de6:	b2a4      	uxth	r4, r4
 8000de8:	fbb1 f0f7 	udiv	r0, r1, r7
 8000dec:	fb07 1110 	mls	r1, r7, r0, r1
 8000df0:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000df4:	fb0e fe00 	mul.w	lr, lr, r0
 8000df8:	45a6      	cmp	lr, r4
 8000dfa:	d908      	bls.n	8000e0e <__udivmoddi4+0x156>
 8000dfc:	eb1c 0404 	adds.w	r4, ip, r4
 8000e00:	f100 31ff 	add.w	r1, r0, #4294967295
 8000e04:	d202      	bcs.n	8000e0c <__udivmoddi4+0x154>
 8000e06:	45a6      	cmp	lr, r4
 8000e08:	f200 80bb 	bhi.w	8000f82 <__udivmoddi4+0x2ca>
 8000e0c:	4608      	mov	r0, r1
 8000e0e:	eba4 040e 	sub.w	r4, r4, lr
 8000e12:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000e16:	e79c      	b.n	8000d52 <__udivmoddi4+0x9a>
 8000e18:	f1c6 0720 	rsb	r7, r6, #32
 8000e1c:	40b3      	lsls	r3, r6
 8000e1e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000e22:	ea4c 0c03 	orr.w	ip, ip, r3
 8000e26:	fa20 f407 	lsr.w	r4, r0, r7
 8000e2a:	fa01 f306 	lsl.w	r3, r1, r6
 8000e2e:	431c      	orrs	r4, r3
 8000e30:	40f9      	lsrs	r1, r7
 8000e32:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000e36:	fa00 f306 	lsl.w	r3, r0, r6
 8000e3a:	fbb1 f8f9 	udiv	r8, r1, r9
 8000e3e:	0c20      	lsrs	r0, r4, #16
 8000e40:	fa1f fe8c 	uxth.w	lr, ip
 8000e44:	fb09 1118 	mls	r1, r9, r8, r1
 8000e48:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e4c:	fb08 f00e 	mul.w	r0, r8, lr
 8000e50:	4288      	cmp	r0, r1
 8000e52:	fa02 f206 	lsl.w	r2, r2, r6
 8000e56:	d90b      	bls.n	8000e70 <__udivmoddi4+0x1b8>
 8000e58:	eb1c 0101 	adds.w	r1, ip, r1
 8000e5c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000e60:	f080 8088 	bcs.w	8000f74 <__udivmoddi4+0x2bc>
 8000e64:	4288      	cmp	r0, r1
 8000e66:	f240 8085 	bls.w	8000f74 <__udivmoddi4+0x2bc>
 8000e6a:	f1a8 0802 	sub.w	r8, r8, #2
 8000e6e:	4461      	add	r1, ip
 8000e70:	1a09      	subs	r1, r1, r0
 8000e72:	b2a4      	uxth	r4, r4
 8000e74:	fbb1 f0f9 	udiv	r0, r1, r9
 8000e78:	fb09 1110 	mls	r1, r9, r0, r1
 8000e7c:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000e80:	fb00 fe0e 	mul.w	lr, r0, lr
 8000e84:	458e      	cmp	lr, r1
 8000e86:	d908      	bls.n	8000e9a <__udivmoddi4+0x1e2>
 8000e88:	eb1c 0101 	adds.w	r1, ip, r1
 8000e8c:	f100 34ff 	add.w	r4, r0, #4294967295
 8000e90:	d26c      	bcs.n	8000f6c <__udivmoddi4+0x2b4>
 8000e92:	458e      	cmp	lr, r1
 8000e94:	d96a      	bls.n	8000f6c <__udivmoddi4+0x2b4>
 8000e96:	3802      	subs	r0, #2
 8000e98:	4461      	add	r1, ip
 8000e9a:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000e9e:	fba0 9402 	umull	r9, r4, r0, r2
 8000ea2:	eba1 010e 	sub.w	r1, r1, lr
 8000ea6:	42a1      	cmp	r1, r4
 8000ea8:	46c8      	mov	r8, r9
 8000eaa:	46a6      	mov	lr, r4
 8000eac:	d356      	bcc.n	8000f5c <__udivmoddi4+0x2a4>
 8000eae:	d053      	beq.n	8000f58 <__udivmoddi4+0x2a0>
 8000eb0:	b15d      	cbz	r5, 8000eca <__udivmoddi4+0x212>
 8000eb2:	ebb3 0208 	subs.w	r2, r3, r8
 8000eb6:	eb61 010e 	sbc.w	r1, r1, lr
 8000eba:	fa01 f707 	lsl.w	r7, r1, r7
 8000ebe:	fa22 f306 	lsr.w	r3, r2, r6
 8000ec2:	40f1      	lsrs	r1, r6
 8000ec4:	431f      	orrs	r7, r3
 8000ec6:	e9c5 7100 	strd	r7, r1, [r5]
 8000eca:	2600      	movs	r6, #0
 8000ecc:	4631      	mov	r1, r6
 8000ece:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ed2:	f1c2 0320 	rsb	r3, r2, #32
 8000ed6:	40d8      	lsrs	r0, r3
 8000ed8:	fa0c fc02 	lsl.w	ip, ip, r2
 8000edc:	fa21 f303 	lsr.w	r3, r1, r3
 8000ee0:	4091      	lsls	r1, r2
 8000ee2:	4301      	orrs	r1, r0
 8000ee4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ee8:	fa1f fe8c 	uxth.w	lr, ip
 8000eec:	fbb3 f0f7 	udiv	r0, r3, r7
 8000ef0:	fb07 3610 	mls	r6, r7, r0, r3
 8000ef4:	0c0b      	lsrs	r3, r1, #16
 8000ef6:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000efa:	fb00 f60e 	mul.w	r6, r0, lr
 8000efe:	429e      	cmp	r6, r3
 8000f00:	fa04 f402 	lsl.w	r4, r4, r2
 8000f04:	d908      	bls.n	8000f18 <__udivmoddi4+0x260>
 8000f06:	eb1c 0303 	adds.w	r3, ip, r3
 8000f0a:	f100 38ff 	add.w	r8, r0, #4294967295
 8000f0e:	d22f      	bcs.n	8000f70 <__udivmoddi4+0x2b8>
 8000f10:	429e      	cmp	r6, r3
 8000f12:	d92d      	bls.n	8000f70 <__udivmoddi4+0x2b8>
 8000f14:	3802      	subs	r0, #2
 8000f16:	4463      	add	r3, ip
 8000f18:	1b9b      	subs	r3, r3, r6
 8000f1a:	b289      	uxth	r1, r1
 8000f1c:	fbb3 f6f7 	udiv	r6, r3, r7
 8000f20:	fb07 3316 	mls	r3, r7, r6, r3
 8000f24:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f28:	fb06 f30e 	mul.w	r3, r6, lr
 8000f2c:	428b      	cmp	r3, r1
 8000f2e:	d908      	bls.n	8000f42 <__udivmoddi4+0x28a>
 8000f30:	eb1c 0101 	adds.w	r1, ip, r1
 8000f34:	f106 38ff 	add.w	r8, r6, #4294967295
 8000f38:	d216      	bcs.n	8000f68 <__udivmoddi4+0x2b0>
 8000f3a:	428b      	cmp	r3, r1
 8000f3c:	d914      	bls.n	8000f68 <__udivmoddi4+0x2b0>
 8000f3e:	3e02      	subs	r6, #2
 8000f40:	4461      	add	r1, ip
 8000f42:	1ac9      	subs	r1, r1, r3
 8000f44:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000f48:	e738      	b.n	8000dbc <__udivmoddi4+0x104>
 8000f4a:	462e      	mov	r6, r5
 8000f4c:	4628      	mov	r0, r5
 8000f4e:	e705      	b.n	8000d5c <__udivmoddi4+0xa4>
 8000f50:	4606      	mov	r6, r0
 8000f52:	e6e3      	b.n	8000d1c <__udivmoddi4+0x64>
 8000f54:	4618      	mov	r0, r3
 8000f56:	e6f8      	b.n	8000d4a <__udivmoddi4+0x92>
 8000f58:	454b      	cmp	r3, r9
 8000f5a:	d2a9      	bcs.n	8000eb0 <__udivmoddi4+0x1f8>
 8000f5c:	ebb9 0802 	subs.w	r8, r9, r2
 8000f60:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000f64:	3801      	subs	r0, #1
 8000f66:	e7a3      	b.n	8000eb0 <__udivmoddi4+0x1f8>
 8000f68:	4646      	mov	r6, r8
 8000f6a:	e7ea      	b.n	8000f42 <__udivmoddi4+0x28a>
 8000f6c:	4620      	mov	r0, r4
 8000f6e:	e794      	b.n	8000e9a <__udivmoddi4+0x1e2>
 8000f70:	4640      	mov	r0, r8
 8000f72:	e7d1      	b.n	8000f18 <__udivmoddi4+0x260>
 8000f74:	46d0      	mov	r8, sl
 8000f76:	e77b      	b.n	8000e70 <__udivmoddi4+0x1b8>
 8000f78:	3b02      	subs	r3, #2
 8000f7a:	4461      	add	r1, ip
 8000f7c:	e732      	b.n	8000de4 <__udivmoddi4+0x12c>
 8000f7e:	4630      	mov	r0, r6
 8000f80:	e709      	b.n	8000d96 <__udivmoddi4+0xde>
 8000f82:	4464      	add	r4, ip
 8000f84:	3802      	subs	r0, #2
 8000f86:	e742      	b.n	8000e0e <__udivmoddi4+0x156>

08000f88 <__aeabi_idiv0>:
 8000f88:	4770      	bx	lr
 8000f8a:	bf00      	nop

08000f8c <__NVIC_SystemReset>:
/**
  \brief   System Reset
  \details Initiates a system reset request to reset the MCU.
 */
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
 8000f8c:	b480      	push	{r7}
 8000f8e:	af00      	add	r7, sp, #0
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000f90:	f3bf 8f4f 	dsb	sy
}
 8000f94:	bf00      	nop
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 8000f96:	4b06      	ldr	r3, [pc, #24]	; (8000fb0 <__NVIC_SystemReset+0x24>)
 8000f98:	68db      	ldr	r3, [r3, #12]
 8000f9a:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 8000f9e:	4904      	ldr	r1, [pc, #16]	; (8000fb0 <__NVIC_SystemReset+0x24>)
 8000fa0:	4b04      	ldr	r3, [pc, #16]	; (8000fb4 <__NVIC_SystemReset+0x28>)
 8000fa2:	4313      	orrs	r3, r2
 8000fa4:	60cb      	str	r3, [r1, #12]
  __ASM volatile ("dsb 0xF":::"memory");
 8000fa6:	f3bf 8f4f 	dsb	sy
}
 8000faa:	bf00      	nop
                            SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchanged */
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
 8000fac:	bf00      	nop
 8000fae:	e7fd      	b.n	8000fac <__NVIC_SystemReset+0x20>
 8000fb0:	e000ed00 	.word	0xe000ed00
 8000fb4:	05fa0004 	.word	0x05fa0004

08000fb8 <F4_Basic_Init>:
uint8_t mode;
float v_ref; //mm/s
uint8_t leaveLineEnabled;

void F4_Basic_Init(UART_HandleTypeDef *huart_debugg,TIM_HandleTypeDef *htim_scheduler,TIM_HandleTypeDef *htim_motor,TIM_HandleTypeDef *htim_servo1,TIM_HandleTypeDef *htim_servo2, TIM_HandleTypeDef *htim_encoder,TIM_HandleTypeDef *htim_delay,TIM_HandleTypeDef *htim_rand)
{
 8000fb8:	b580      	push	{r7, lr}
 8000fba:	b08e      	sub	sp, #56	; 0x38
 8000fbc:	af00      	add	r7, sp, #0
 8000fbe:	60f8      	str	r0, [r7, #12]
 8000fc0:	60b9      	str	r1, [r7, #8]
 8000fc2:	607a      	str	r2, [r7, #4]
 8000fc4:	603b      	str	r3, [r7, #0]
	char buf[40];
	LED_R(0);
 8000fc6:	2201      	movs	r2, #1
 8000fc8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000fcc:	484f      	ldr	r0, [pc, #316]	; (800110c <F4_Basic_Init+0x154>)
 8000fce:	f007 fb33 	bl	8008638 <HAL_GPIO_WritePin>
	LED_B(0);
 8000fd2:	2201      	movs	r2, #1
 8000fd4:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000fd8:	484c      	ldr	r0, [pc, #304]	; (800110c <F4_Basic_Init+0x154>)
 8000fda:	f007 fb2d 	bl	8008638 <HAL_GPIO_WritePin>
	LED_G(0);
 8000fde:	2201      	movs	r2, #1
 8000fe0:	2102      	movs	r1, #2
 8000fe2:	484a      	ldr	r0, [pc, #296]	; (800110c <F4_Basic_Init+0x154>)
 8000fe4:	f007 fb28 	bl	8008638 <HAL_GPIO_WritePin>
	LED_Y(0);
 8000fe8:	2201      	movs	r2, #1
 8000fea:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000fee:	4847      	ldr	r0, [pc, #284]	; (800110c <F4_Basic_Init+0x154>)
 8000ff0:	f007 fb22 	bl	8008638 <HAL_GPIO_WritePin>
	LED_NUCLEO(0);
 8000ff4:	2200      	movs	r2, #0
 8000ff6:	2120      	movs	r1, #32
 8000ff8:	4845      	ldr	r0, [pc, #276]	; (8001110 <F4_Basic_Init+0x158>)
 8000ffa:	f007 fb1d 	bl	8008638 <HAL_GPIO_WritePin>
	sprintf(buf,"\r\nRobonAUT 2023 Bit Bangers F4\r\n");// a buff tömb-be beleírom (stringprint) a string-emet. 1 karakter = 1 byte = 1 tömbelem
 8000ffe:	f107 0310 	add.w	r3, r7, #16
 8001002:	4944      	ldr	r1, [pc, #272]	; (8001114 <F4_Basic_Init+0x15c>)
 8001004:	4618      	mov	r0, r3
 8001006:	f00b fdd3 	bl	800cbb0 <siprintf>
	HAL_UART_Transmit(huart_debugg,(uint8_t*) buf, strlen(buf), 100);// A UART2-őn (ide van kötve a programozó) kiküldöm a buf karaktertömböt (string) és maximum 10-ms -ot várok hogy ezt elvégezze a periféria
 800100a:	f107 0310 	add.w	r3, r7, #16
 800100e:	4618      	mov	r0, r3
 8001010:	f7ff f8fe 	bl	8000210 <strlen>
 8001014:	4603      	mov	r3, r0
 8001016:	b29a      	uxth	r2, r3
 8001018:	f107 0110 	add.w	r1, r7, #16
 800101c:	2364      	movs	r3, #100	; 0x64
 800101e:	68f8      	ldr	r0, [r7, #12]
 8001020:	f00a f85d 	bl	800b0de <HAL_UART_Transmit>

	//MotorEnable engedélyezése
	motorEnRemote=0;//csak akkor ha megnyomtuk a ravaszt
 8001024:	4b3c      	ldr	r3, [pc, #240]	; (8001118 <F4_Basic_Init+0x160>)
 8001026:	2200      	movs	r2, #0
 8001028:	701a      	strb	r2, [r3, #0]
	motorEnLineOk=1;
 800102a:	4b3c      	ldr	r3, [pc, #240]	; (800111c <F4_Basic_Init+0x164>)
 800102c:	2201      	movs	r2, #1
 800102e:	701a      	strb	r2, [r3, #0]
	leaveLineEnabled=0;
 8001030:	4b3b      	ldr	r3, [pc, #236]	; (8001120 <F4_Basic_Init+0x168>)
 8001032:	2200      	movs	r2, #0
 8001034:	701a      	strb	r2, [r3, #0]

	swState[0] = SW1;
 8001036:	f44f 7180 	mov.w	r1, #256	; 0x100
 800103a:	4835      	ldr	r0, [pc, #212]	; (8001110 <F4_Basic_Init+0x158>)
 800103c:	f007 fae4 	bl	8008608 <HAL_GPIO_ReadPin>
 8001040:	4603      	mov	r3, r0
 8001042:	461a      	mov	r2, r3
 8001044:	4b37      	ldr	r3, [pc, #220]	; (8001124 <F4_Basic_Init+0x16c>)
 8001046:	701a      	strb	r2, [r3, #0]
	swState[1] = SW2;
 8001048:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800104c:	482f      	ldr	r0, [pc, #188]	; (800110c <F4_Basic_Init+0x154>)
 800104e:	f007 fadb 	bl	8008608 <HAL_GPIO_ReadPin>
 8001052:	4603      	mov	r3, r0
 8001054:	461a      	mov	r2, r3
 8001056:	4b33      	ldr	r3, [pc, #204]	; (8001124 <F4_Basic_Init+0x16c>)
 8001058:	705a      	strb	r2, [r3, #1]
	if(SW2)LED_R(1);
 800105a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800105e:	482b      	ldr	r0, [pc, #172]	; (800110c <F4_Basic_Init+0x154>)
 8001060:	f007 fad2 	bl	8008608 <HAL_GPIO_ReadPin>
 8001064:	4603      	mov	r3, r0
 8001066:	2b00      	cmp	r3, #0
 8001068:	d006      	beq.n	8001078 <F4_Basic_Init+0xc0>
 800106a:	2200      	movs	r2, #0
 800106c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001070:	4826      	ldr	r0, [pc, #152]	; (800110c <F4_Basic_Init+0x154>)
 8001072:	f007 fae1 	bl	8008638 <HAL_GPIO_WritePin>
 8001076:	e005      	b.n	8001084 <F4_Basic_Init+0xcc>
	else LED_R(0);
 8001078:	2201      	movs	r2, #1
 800107a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800107e:	4823      	ldr	r0, [pc, #140]	; (800110c <F4_Basic_Init+0x154>)
 8001080:	f007 fada 	bl	8008638 <HAL_GPIO_WritePin>

	bFlag[0] = bFlag[1] = bFlag[2] = 0;
 8001084:	2200      	movs	r2, #0
 8001086:	4b28      	ldr	r3, [pc, #160]	; (8001128 <F4_Basic_Init+0x170>)
 8001088:	4611      	mov	r1, r2
 800108a:	7099      	strb	r1, [r3, #2]
 800108c:	4b26      	ldr	r3, [pc, #152]	; (8001128 <F4_Basic_Init+0x170>)
 800108e:	4611      	mov	r1, r2
 8001090:	7059      	strb	r1, [r3, #1]
 8001092:	4b25      	ldr	r3, [pc, #148]	; (8001128 <F4_Basic_Init+0x170>)
 8001094:	701a      	strb	r2, [r3, #0]
	fromPC[0]=150;
 8001096:	4b25      	ldr	r3, [pc, #148]	; (800112c <F4_Basic_Init+0x174>)
 8001098:	2296      	movs	r2, #150	; 0x96
 800109a:	701a      	strb	r2, [r3, #0]
	fromPC[1]=150;
 800109c:	4b23      	ldr	r3, [pc, #140]	; (800112c <F4_Basic_Init+0x174>)
 800109e:	2296      	movs	r2, #150	; 0x96
 80010a0:	705a      	strb	r2, [r3, #1]
	mode=SKILL;
 80010a2:	4b23      	ldr	r3, [pc, #140]	; (8001130 <F4_Basic_Init+0x178>)
 80010a4:	2252      	movs	r2, #82	; 0x52
 80010a6:	701a      	strb	r2, [r3, #0]
	v_ref = 1000;
 80010a8:	4b22      	ldr	r3, [pc, #136]	; (8001134 <F4_Basic_Init+0x17c>)
 80010aa:	4a23      	ldr	r2, [pc, #140]	; (8001138 <F4_Basic_Init+0x180>)
 80010ac:	601a      	str	r2, [r3, #0]
	v=0;
 80010ae:	4b23      	ldr	r3, [pc, #140]	; (800113c <F4_Basic_Init+0x184>)
 80010b0:	f04f 0200 	mov.w	r2, #0
 80010b4:	601a      	str	r2, [r3, #0]

	//timerek elindítása
	TIM1->CCR4=SERVO_REAR_CCR_MIDDLE;
 80010b6:	4b22      	ldr	r3, [pc, #136]	; (8001140 <F4_Basic_Init+0x188>)
 80010b8:	f44f 7212 	mov.w	r2, #584	; 0x248
 80010bc:	641a      	str	r2, [r3, #64]	; 0x40
	TIM2->CCR1=SERVO_FRONT_CCR_MIDDLE;
 80010be:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80010c2:	f44f 722c 	mov.w	r2, #688	; 0x2b0
 80010c6:	635a      	str	r2, [r3, #52]	; 0x34
	//TIM2->CCR1=684; //servot középre
	//TIM3->CCR1=499; //0 kitöltési tényező a motorra
	//TIM3->CCR2=499;
	HAL_TIM_Base_Start(htim_scheduler);//heart beat timer tick start
 80010c8:	68b8      	ldr	r0, [r7, #8]
 80010ca:	f008 f989 	bl	80093e0 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(htim_delay);//heart beat timer tick start
 80010ce:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 80010d0:	f008 f986 	bl	80093e0 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(htim_rand);//heart beat timer tick start
 80010d4:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 80010d6:	f008 f983 	bl	80093e0 <HAL_TIM_Base_Start>
	HAL_TIM_PWM_Start(htim_motor, TIM_CHANNEL_1);//motor PWM-ek elindítása
 80010da:	2100      	movs	r1, #0
 80010dc:	6878      	ldr	r0, [r7, #4]
 80010de:	f008 fa41 	bl	8009564 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim_motor, TIM_CHANNEL_2);
 80010e2:	2104      	movs	r1, #4
 80010e4:	6878      	ldr	r0, [r7, #4]
 80010e6:	f008 fa3d 	bl	8009564 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim_servo1, TIM_CHANNEL_1); //servo RC pwm elindítása
 80010ea:	2100      	movs	r1, #0
 80010ec:	6838      	ldr	r0, [r7, #0]
 80010ee:	f008 fa39 	bl	8009564 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim_servo2, TIM_CHANNEL_4); //servo RC pwm elindítása
 80010f2:	210c      	movs	r1, #12
 80010f4:	6c38      	ldr	r0, [r7, #64]	; 0x40
 80010f6:	f008 fa35 	bl	8009564 <HAL_TIM_PWM_Start>
	HAL_TIM_Encoder_Start(htim_encoder,TIM_CHANNEL_ALL);
 80010fa:	213c      	movs	r1, #60	; 0x3c
 80010fc:	6c78      	ldr	r0, [r7, #68]	; 0x44
 80010fe:	f008 fda3 	bl	8009c48 <HAL_TIM_Encoder_Start>

	//Ha a PC-ről küldünk vmit azt fogadjuk
	//HAL_UART_Receive_IT(huart_debugg, fromPC, 2);
}
 8001102:	bf00      	nop
 8001104:	3738      	adds	r7, #56	; 0x38
 8001106:	46bd      	mov	sp, r7
 8001108:	bd80      	pop	{r7, pc}
 800110a:	bf00      	nop
 800110c:	40020400 	.word	0x40020400
 8001110:	40020000 	.word	0x40020000
 8001114:	08010558 	.word	0x08010558
 8001118:	20000b60 	.word	0x20000b60
 800111c:	20000b61 	.word	0x20000b61
 8001120:	200002ac 	.word	0x200002ac
 8001124:	2000029c 	.word	0x2000029c
 8001128:	200002a0 	.word	0x200002a0
 800112c:	200002a4 	.word	0x200002a4
 8001130:	200002a6 	.word	0x200002a6
 8001134:	200002a8 	.word	0x200002a8
 8001138:	447a0000 	.word	0x447a0000
 800113c:	20000684 	.word	0x20000684
 8001140:	40010000 	.word	0x40010000

08001144 <HDI_Read_Task>:


void HDI_Read_Task(UART_HandleTypeDef *huart_debugg,TIM_HandleTypeDef *htim_servo,uint32_t tick, uint32_t period)
{
 8001144:	b580      	push	{r7, lr}
 8001146:	b084      	sub	sp, #16
 8001148:	af00      	add	r7, sp, #0
 800114a:	60f8      	str	r0, [r7, #12]
 800114c:	60b9      	str	r1, [r7, #8]
 800114e:	607a      	str	r2, [r7, #4]
 8001150:	603b      	str	r3, [r7, #0]
	static uint32_t hdi_read_task_tick=0;

	if(hdi_read_task_tick>tick) return;
 8001152:	4b29      	ldr	r3, [pc, #164]	; (80011f8 <HDI_Read_Task+0xb4>)
 8001154:	681b      	ldr	r3, [r3, #0]
 8001156:	687a      	ldr	r2, [r7, #4]
 8001158:	429a      	cmp	r2, r3
 800115a:	d349      	bcc.n	80011f0 <HDI_Read_Task+0xac>
	hdi_read_task_tick = tick + period;
 800115c:	687a      	ldr	r2, [r7, #4]
 800115e:	683b      	ldr	r3, [r7, #0]
 8001160:	4413      	add	r3, r2
 8001162:	4a25      	ldr	r2, [pc, #148]	; (80011f8 <HDI_Read_Task+0xb4>)
 8001164:	6013      	str	r3, [r2, #0]

	swState[0]=SW1;
 8001166:	f44f 7180 	mov.w	r1, #256	; 0x100
 800116a:	4824      	ldr	r0, [pc, #144]	; (80011fc <HDI_Read_Task+0xb8>)
 800116c:	f007 fa4c 	bl	8008608 <HAL_GPIO_ReadPin>
 8001170:	4603      	mov	r3, r0
 8001172:	461a      	mov	r2, r3
 8001174:	4b22      	ldr	r3, [pc, #136]	; (8001200 <HDI_Read_Task+0xbc>)
 8001176:	701a      	strb	r2, [r3, #0]
	swState[1]=SW2;
 8001178:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800117c:	4821      	ldr	r0, [pc, #132]	; (8001204 <HDI_Read_Task+0xc0>)
 800117e:	f007 fa43 	bl	8008608 <HAL_GPIO_ReadPin>
 8001182:	4603      	mov	r3, r0
 8001184:	461a      	mov	r2, r3
 8001186:	4b1e      	ldr	r3, [pc, #120]	; (8001200 <HDI_Read_Task+0xbc>)
 8001188:	705a      	strb	r2, [r3, #1]

	if(swState[0] && mode==FAST) LED_G(1);
 800118a:	4b1d      	ldr	r3, [pc, #116]	; (8001200 <HDI_Read_Task+0xbc>)
 800118c:	781b      	ldrb	r3, [r3, #0]
 800118e:	2b00      	cmp	r3, #0
 8001190:	d008      	beq.n	80011a4 <HDI_Read_Task+0x60>
 8001192:	4b1d      	ldr	r3, [pc, #116]	; (8001208 <HDI_Read_Task+0xc4>)
 8001194:	781b      	ldrb	r3, [r3, #0]
 8001196:	2b3f      	cmp	r3, #63	; 0x3f
 8001198:	d104      	bne.n	80011a4 <HDI_Read_Task+0x60>
 800119a:	2200      	movs	r2, #0
 800119c:	2102      	movs	r1, #2
 800119e:	4819      	ldr	r0, [pc, #100]	; (8001204 <HDI_Read_Task+0xc0>)
 80011a0:	f007 fa4a 	bl	8008638 <HAL_GPIO_WritePin>
	if(!swState[0] && mode==FAST) LED_G(0);
 80011a4:	4b16      	ldr	r3, [pc, #88]	; (8001200 <HDI_Read_Task+0xbc>)
 80011a6:	781b      	ldrb	r3, [r3, #0]
 80011a8:	2b00      	cmp	r3, #0
 80011aa:	d108      	bne.n	80011be <HDI_Read_Task+0x7a>
 80011ac:	4b16      	ldr	r3, [pc, #88]	; (8001208 <HDI_Read_Task+0xc4>)
 80011ae:	781b      	ldrb	r3, [r3, #0]
 80011b0:	2b3f      	cmp	r3, #63	; 0x3f
 80011b2:	d104      	bne.n	80011be <HDI_Read_Task+0x7a>
 80011b4:	2201      	movs	r2, #1
 80011b6:	2102      	movs	r1, #2
 80011b8:	4812      	ldr	r0, [pc, #72]	; (8001204 <HDI_Read_Task+0xc0>)
 80011ba:	f007 fa3d 	bl	8008638 <HAL_GPIO_WritePin>
	if(swState[1]) LED_R(1);
 80011be:	4b10      	ldr	r3, [pc, #64]	; (8001200 <HDI_Read_Task+0xbc>)
 80011c0:	785b      	ldrb	r3, [r3, #1]
 80011c2:	2b00      	cmp	r3, #0
 80011c4:	d005      	beq.n	80011d2 <HDI_Read_Task+0x8e>
 80011c6:	2200      	movs	r2, #0
 80011c8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011cc:	480d      	ldr	r0, [pc, #52]	; (8001204 <HDI_Read_Task+0xc0>)
 80011ce:	f007 fa33 	bl	8008638 <HAL_GPIO_WritePin>
	if(!swState[1]) LED_R(0);
 80011d2:	4b0b      	ldr	r3, [pc, #44]	; (8001200 <HDI_Read_Task+0xbc>)
 80011d4:	785b      	ldrb	r3, [r3, #1]
 80011d6:	2b00      	cmp	r3, #0
 80011d8:	d105      	bne.n	80011e6 <HDI_Read_Task+0xa2>
 80011da:	2201      	movs	r2, #1
 80011dc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011e0:	4808      	ldr	r0, [pc, #32]	; (8001204 <HDI_Read_Task+0xc0>)
 80011e2:	f007 fa29 	bl	8008638 <HAL_GPIO_WritePin>

	if(bFlag[0]);
 80011e6:	4b09      	ldr	r3, [pc, #36]	; (800120c <HDI_Read_Task+0xc8>)
 80011e8:	781b      	ldrb	r3, [r3, #0]
	if(bFlag[1]);
 80011ea:	4b08      	ldr	r3, [pc, #32]	; (800120c <HDI_Read_Task+0xc8>)
 80011ec:	785b      	ldrb	r3, [r3, #1]
 80011ee:	e000      	b.n	80011f2 <HDI_Read_Task+0xae>
	if(hdi_read_task_tick>tick) return;
 80011f0:	bf00      	nop

}
 80011f2:	3710      	adds	r7, #16
 80011f4:	46bd      	mov	sp, r7
 80011f6:	bd80      	pop	{r7, pc}
 80011f8:	200002b0 	.word	0x200002b0
 80011fc:	40020000 	.word	0x40020000
 8001200:	2000029c 	.word	0x2000029c
 8001204:	40020400 	.word	0x40020400
 8001208:	200002a6 	.word	0x200002a6
 800120c:	200002a0 	.word	0x200002a0

08001210 <Uart_Receive_From_PC_ISR>:

void Uart_Receive_From_PC_ISR(UART_HandleTypeDef *huart)
{
 8001210:	b580      	push	{r7, lr}
 8001212:	b082      	sub	sp, #8
 8001214:	af00      	add	r7, sp, #0
 8001216:	6078      	str	r0, [r7, #4]
	LED_Y_TOGGLE;
 8001218:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800121c:	480b      	ldr	r0, [pc, #44]	; (800124c <Uart_Receive_From_PC_ISR+0x3c>)
 800121e:	f007 fa24 	bl	800866a <HAL_GPIO_TogglePin>
	HAL_UART_Receive_IT(huart, (uint8_t*)fromPC, 2);
 8001222:	2202      	movs	r2, #2
 8001224:	490a      	ldr	r1, [pc, #40]	; (8001250 <Uart_Receive_From_PC_ISR+0x40>)
 8001226:	6878      	ldr	r0, [r7, #4]
 8001228:	f00a f88d 	bl	800b346 <HAL_UART_Receive_IT>
	TIM2->CCR1 = 4*fromPC[0];
 800122c:	4b08      	ldr	r3, [pc, #32]	; (8001250 <Uart_Receive_From_PC_ISR+0x40>)
 800122e:	781b      	ldrb	r3, [r3, #0]
 8001230:	009a      	lsls	r2, r3, #2
 8001232:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001236:	635a      	str	r2, [r3, #52]	; 0x34
	TIM1->CCR4 = 4*fromPC[1];
 8001238:	4b05      	ldr	r3, [pc, #20]	; (8001250 <Uart_Receive_From_PC_ISR+0x40>)
 800123a:	785b      	ldrb	r3, [r3, #1]
 800123c:	009a      	lsls	r2, r3, #2
 800123e:	4b05      	ldr	r3, [pc, #20]	; (8001254 <Uart_Receive_From_PC_ISR+0x44>)
 8001240:	641a      	str	r2, [r3, #64]	; 0x40
}
 8001242:	bf00      	nop
 8001244:	3708      	adds	r7, #8
 8001246:	46bd      	mov	sp, r7
 8001248:	bd80      	pop	{r7, pc}
 800124a:	bf00      	nop
 800124c:	40020400 	.word	0x40020400
 8001250:	200002a4 	.word	0x200002a4
 8001254:	40010000 	.word	0x40010000

08001258 <B1_ISR>:

void B1_ISR(UART_HandleTypeDef *huart_debugg)
{
 8001258:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 800125c:	b084      	sub	sp, #16
 800125e:	af00      	add	r7, sp, #0
 8001260:	6078      	str	r0, [r7, #4]
		HAL_FLASH_Unlock();
 8001262:	f006 fe83 	bl	8007f6c <HAL_FLASH_Unlock>
		Delay(50);
 8001266:	2032      	movs	r0, #50	; 0x32
 8001268:	f004 fcf8 	bl	8005c5c <Delay>
		FLASH_Erase_Sector(6, FLASH_VOLTAGE_RANGE_3);
 800126c:	2102      	movs	r1, #2
 800126e:	2006      	movs	r0, #6
 8001270:	f006 ffee 	bl	8008250 <FLASH_Erase_Sector>
		Delay(50);
 8001274:	2032      	movs	r0, #50	; 0x32
 8001276:	f004 fcf1 	bl	8005c5c <Delay>
		HAL_FLASH_Lock();
 800127a:	f006 fe99 	bl	8007fb0 <HAL_FLASH_Lock>

		int i;
		for(i=0;i<8;i++)
 800127e:	2300      	movs	r3, #0
 8001280:	60fb      	str	r3, [r7, #12]
 8001282:	e00a      	b.n	800129a <B1_ISR+0x42>
		{
			LED_R_TOGGLE;
 8001284:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001288:	4828      	ldr	r0, [pc, #160]	; (800132c <B1_ISR+0xd4>)
 800128a:	f007 f9ee 	bl	800866a <HAL_GPIO_TogglePin>
			Delay(150);
 800128e:	2096      	movs	r0, #150	; 0x96
 8001290:	f004 fce4 	bl	8005c5c <Delay>
		for(i=0;i<8;i++)
 8001294:	68fb      	ldr	r3, [r7, #12]
 8001296:	3301      	adds	r3, #1
 8001298:	60fb      	str	r3, [r7, #12]
 800129a:	68fb      	ldr	r3, [r7, #12]
 800129c:	2b07      	cmp	r3, #7
 800129e:	ddf1      	ble.n	8001284 <B1_ISR+0x2c>
		}
		LED_R(0);
 80012a0:	2201      	movs	r2, #1
 80012a2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80012a6:	4821      	ldr	r0, [pc, #132]	; (800132c <B1_ISR+0xd4>)
 80012a8:	f007 f9c6 	bl	8008638 <HAL_GPIO_WritePin>

		HAL_FLASH_Unlock();
 80012ac:	f006 fe5e 	bl	8007f6c <HAL_FLASH_Unlock>
		Delay(50);
 80012b0:	2032      	movs	r0, #50	; 0x32
 80012b2:	f004 fcd3 	bl	8005c5c <Delay>
		for(i=0;i<22;i++)
 80012b6:	2300      	movs	r3, #0
 80012b8:	60fb      	str	r3, [r7, #12]
 80012ba:	e01a      	b.n	80012f2 <B1_ISR+0x9a>
		{
			HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+i, Nodes[i].worth);
 80012bc:	68fb      	ldr	r3, [r7, #12]
 80012be:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 80012c2:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
 80012c6:	4618      	mov	r0, r3
 80012c8:	4919      	ldr	r1, [pc, #100]	; (8001330 <B1_ISR+0xd8>)
 80012ca:	68fa      	ldr	r2, [r7, #12]
 80012cc:	4613      	mov	r3, r2
 80012ce:	009b      	lsls	r3, r3, #2
 80012d0:	4413      	add	r3, r2
 80012d2:	00db      	lsls	r3, r3, #3
 80012d4:	440b      	add	r3, r1
 80012d6:	3304      	adds	r3, #4
 80012d8:	681b      	ldr	r3, [r3, #0]
 80012da:	17da      	asrs	r2, r3, #31
 80012dc:	4698      	mov	r8, r3
 80012de:	4691      	mov	r9, r2
 80012e0:	4642      	mov	r2, r8
 80012e2:	464b      	mov	r3, r9
 80012e4:	4601      	mov	r1, r0
 80012e6:	2000      	movs	r0, #0
 80012e8:	f006 fdec 	bl	8007ec4 <HAL_FLASH_Program>
		for(i=0;i<22;i++)
 80012ec:	68fb      	ldr	r3, [r7, #12]
 80012ee:	3301      	adds	r3, #1
 80012f0:	60fb      	str	r3, [r7, #12]
 80012f2:	68fb      	ldr	r3, [r7, #12]
 80012f4:	2b15      	cmp	r3, #21
 80012f6:	dde1      	ble.n	80012bc <B1_ISR+0x64>
		}
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+22, collectedPoints);
 80012f8:	4b0e      	ldr	r3, [pc, #56]	; (8001334 <B1_ISR+0xdc>)
 80012fa:	781b      	ldrb	r3, [r3, #0]
 80012fc:	b2db      	uxtb	r3, r3
 80012fe:	2200      	movs	r2, #0
 8001300:	461c      	mov	r4, r3
 8001302:	4615      	mov	r5, r2
 8001304:	4622      	mov	r2, r4
 8001306:	462b      	mov	r3, r5
 8001308:	490b      	ldr	r1, [pc, #44]	; (8001338 <B1_ISR+0xe0>)
 800130a:	2000      	movs	r0, #0
 800130c:	f006 fdda 	bl	8007ec4 <HAL_FLASH_Program>
		Delay(50);
 8001310:	2032      	movs	r0, #50	; 0x32
 8001312:	f004 fca3 	bl	8005c5c <Delay>
		HAL_FLASH_Lock();
 8001316:	f006 fe4b 	bl	8007fb0 <HAL_FLASH_Lock>
		HAL_UART_Transmit(huart_debugg,(uint8_t*) "\n\rBackup save!\n\r", 16, 10);
 800131a:	230a      	movs	r3, #10
 800131c:	2210      	movs	r2, #16
 800131e:	4907      	ldr	r1, [pc, #28]	; (800133c <B1_ISR+0xe4>)
 8001320:	6878      	ldr	r0, [r7, #4]
 8001322:	f009 fedc 	bl	800b0de <HAL_UART_Transmit>
		NVIC_SystemReset(); //SW reseteljük a mikorvezérlőt
 8001326:	f7ff fe31 	bl	8000f8c <__NVIC_SystemReset>
 800132a:	bf00      	nop
 800132c:	40020400 	.word	0x40020400
 8001330:	200002c8 	.word	0x200002c8
 8001334:	200002b7 	.word	0x200002b7
 8001338:	08040016 	.word	0x08040016
 800133c:	0801057c 	.word	0x0801057c

08001340 <B_NUCLEO_ISR>:
}

void B_NUCLEO_ISR(UART_HandleTypeDef *huart_debugg)
{
 8001340:	b580      	push	{r7, lr}
 8001342:	b084      	sub	sp, #16
 8001344:	af00      	add	r7, sp, #0
 8001346:	6078      	str	r0, [r7, #4]
	//Milyen módban voltunk eddig?
	uint8_t tmp= *(__IO uint8_t *) FLASH_ADDRESS_MODESELECTOR;
 8001348:	4b41      	ldr	r3, [pc, #260]	; (8001450 <B_NUCLEO_ISR+0x110>)
 800134a:	781b      	ldrb	r3, [r3, #0]
 800134c:	72fb      	strb	r3, [r7, #11]
	if(tmp==SKILL || tmp==FAST)mode=tmp;
 800134e:	7afb      	ldrb	r3, [r7, #11]
 8001350:	2b52      	cmp	r3, #82	; 0x52
 8001352:	d002      	beq.n	800135a <B_NUCLEO_ISR+0x1a>
 8001354:	7afb      	ldrb	r3, [r7, #11]
 8001356:	2b3f      	cmp	r3, #63	; 0x3f
 8001358:	d103      	bne.n	8001362 <B_NUCLEO_ISR+0x22>
 800135a:	4a3e      	ldr	r2, [pc, #248]	; (8001454 <B_NUCLEO_ISR+0x114>)
 800135c:	7afb      	ldrb	r3, [r7, #11]
 800135e:	7013      	strb	r3, [r2, #0]
 8001360:	e002      	b.n	8001368 <B_NUCLEO_ISR+0x28>
	else mode=SKILL;
 8001362:	4b3c      	ldr	r3, [pc, #240]	; (8001454 <B_NUCLEO_ISR+0x114>)
 8001364:	2252      	movs	r2, #82	; 0x52
 8001366:	701a      	strb	r2, [r3, #0]

	//section 7 törlése, hogy újraírhassuk a módot jelző bytot
	HAL_FLASH_Unlock();
 8001368:	f006 fe00 	bl	8007f6c <HAL_FLASH_Unlock>
	Delay(50);
 800136c:	2032      	movs	r0, #50	; 0x32
 800136e:	f004 fc75 	bl	8005c5c <Delay>
	FLASH_Erase_Sector(7, FLASH_VOLTAGE_RANGE_3);
 8001372:	2102      	movs	r1, #2
 8001374:	2007      	movs	r0, #7
 8001376:	f006 ff6b 	bl	8008250 <FLASH_Erase_Sector>
	Delay(50);
 800137a:	2032      	movs	r0, #50	; 0x32
 800137c:	f004 fc6e 	bl	8005c5c <Delay>
	HAL_FLASH_Lock();
 8001380:	f006 fe16 	bl	8007fb0 <HAL_FLASH_Lock>

	LED_NUCLEO(0);
 8001384:	2200      	movs	r2, #0
 8001386:	2120      	movs	r1, #32
 8001388:	4833      	ldr	r0, [pc, #204]	; (8001458 <B_NUCLEO_ISR+0x118>)
 800138a:	f007 f955 	bl	8008638 <HAL_GPIO_WritePin>
	LED_Y(0);
 800138e:	2201      	movs	r2, #1
 8001390:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001394:	4831      	ldr	r0, [pc, #196]	; (800145c <B_NUCLEO_ISR+0x11c>)
 8001396:	f007 f94f 	bl	8008638 <HAL_GPIO_WritePin>
	LED_G(0);
 800139a:	2201      	movs	r2, #1
 800139c:	2102      	movs	r1, #2
 800139e:	482f      	ldr	r0, [pc, #188]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013a0:	f007 f94a 	bl	8008638 <HAL_GPIO_WritePin>
	LED_B(0);
 80013a4:	2201      	movs	r2, #1
 80013a6:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80013aa:	482c      	ldr	r0, [pc, #176]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013ac:	f007 f944 	bl	8008638 <HAL_GPIO_WritePin>
	LED_R(0);
 80013b0:	2201      	movs	r2, #1
 80013b2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013b6:	4829      	ldr	r0, [pc, #164]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013b8:	f007 f93e 	bl	8008638 <HAL_GPIO_WritePin>
	int i;
	for(i=0;i<8;i++)
 80013bc:	2300      	movs	r3, #0
 80013be:	60fb      	str	r3, [r7, #12]
 80013c0:	e01c      	b.n	80013fc <B_NUCLEO_ISR+0xbc>
	{
		LED_NUCLEO_TOGGLE;
 80013c2:	2120      	movs	r1, #32
 80013c4:	4824      	ldr	r0, [pc, #144]	; (8001458 <B_NUCLEO_ISR+0x118>)
 80013c6:	f007 f950 	bl	800866a <HAL_GPIO_TogglePin>
		LED_Y_TOGGLE;
 80013ca:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80013ce:	4823      	ldr	r0, [pc, #140]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013d0:	f007 f94b 	bl	800866a <HAL_GPIO_TogglePin>
		LED_G_TOGGLE;
 80013d4:	2102      	movs	r1, #2
 80013d6:	4821      	ldr	r0, [pc, #132]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013d8:	f007 f947 	bl	800866a <HAL_GPIO_TogglePin>
		LED_B_TOGGLE;
 80013dc:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80013e0:	481e      	ldr	r0, [pc, #120]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013e2:	f007 f942 	bl	800866a <HAL_GPIO_TogglePin>
		LED_R_TOGGLE;
 80013e6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013ea:	481c      	ldr	r0, [pc, #112]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013ec:	f007 f93d 	bl	800866a <HAL_GPIO_TogglePin>
		Delay(150);
 80013f0:	2096      	movs	r0, #150	; 0x96
 80013f2:	f004 fc33 	bl	8005c5c <Delay>
	for(i=0;i<8;i++)
 80013f6:	68fb      	ldr	r3, [r7, #12]
 80013f8:	3301      	adds	r3, #1
 80013fa:	60fb      	str	r3, [r7, #12]
 80013fc:	68fb      	ldr	r3, [r7, #12]
 80013fe:	2b07      	cmp	r3, #7
 8001400:	dddf      	ble.n	80013c2 <B_NUCLEO_ISR+0x82>
	}

	//Állítsuk át a módot
	HAL_FLASH_Unlock();
 8001402:	f006 fdb3 	bl	8007f6c <HAL_FLASH_Unlock>
	Delay(50);
 8001406:	2032      	movs	r0, #50	; 0x32
 8001408:	f004 fc28 	bl	8005c5c <Delay>
	if(mode==SKILL) HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_MODESELECTOR, FAST); //ha eddig skill mód volt akor msot gyors lesz
 800140c:	4b11      	ldr	r3, [pc, #68]	; (8001454 <B_NUCLEO_ISR+0x114>)
 800140e:	781b      	ldrb	r3, [r3, #0]
 8001410:	2b52      	cmp	r3, #82	; 0x52
 8001412:	d108      	bne.n	8001426 <B_NUCLEO_ISR+0xe6>
 8001414:	f04f 023f 	mov.w	r2, #63	; 0x3f
 8001418:	f04f 0300 	mov.w	r3, #0
 800141c:	490c      	ldr	r1, [pc, #48]	; (8001450 <B_NUCLEO_ISR+0x110>)
 800141e:	2000      	movs	r0, #0
 8001420:	f006 fd50 	bl	8007ec4 <HAL_FLASH_Program>
 8001424:	e007      	b.n	8001436 <B_NUCLEO_ISR+0xf6>
	else HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_MODESELECTOR, SKILL); //ha eddig gyors mód vagy memóriaszemét volt akkor msot skil lesz
 8001426:	f04f 0252 	mov.w	r2, #82	; 0x52
 800142a:	f04f 0300 	mov.w	r3, #0
 800142e:	4908      	ldr	r1, [pc, #32]	; (8001450 <B_NUCLEO_ISR+0x110>)
 8001430:	2000      	movs	r0, #0
 8001432:	f006 fd47 	bl	8007ec4 <HAL_FLASH_Program>
	Delay(50);
 8001436:	2032      	movs	r0, #50	; 0x32
 8001438:	f004 fc10 	bl	8005c5c <Delay>
	HAL_FLASH_Lock();
 800143c:	f006 fdb8 	bl	8007fb0 <HAL_FLASH_Lock>
	HAL_UART_Transmit(huart_debugg, (uint8_t*)"\n\rMode change!\n\r", 16, 10);
 8001440:	230a      	movs	r3, #10
 8001442:	2210      	movs	r2, #16
 8001444:	4906      	ldr	r1, [pc, #24]	; (8001460 <B_NUCLEO_ISR+0x120>)
 8001446:	6878      	ldr	r0, [r7, #4]
 8001448:	f009 fe49 	bl	800b0de <HAL_UART_Transmit>
	NVIC_SystemReset(); //SW reseteljük a mikorvezérlőt
 800144c:	f7ff fd9e 	bl	8000f8c <__NVIC_SystemReset>
 8001450:	08060000 	.word	0x08060000
 8001454:	200002a6 	.word	0x200002a6
 8001458:	40020000 	.word	0x40020000
 800145c:	40020400 	.word	0x40020400
 8001460:	08010590 	.word	0x08010590

08001464 <Create_Nodes>:
uint8_t piratePos[4];

node Nodes[22];

void Create_Nodes(UART_HandleTypeDef *huart_debugg)
{
 8001464:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8001468:	b09c      	sub	sp, #112	; 0x70
 800146a:	af00      	add	r7, sp, #0
 800146c:	6078      	str	r0, [r7, #4]
	int i;
	orientation=FORWARD;
 800146e:	4b0b      	ldr	r3, [pc, #44]	; (800149c <Create_Nodes+0x38>)
 8001470:	2200      	movs	r2, #0
 8001472:	701a      	strb	r2, [r3, #0]
	collectedPoints=0;
 8001474:	4b0a      	ldr	r3, [pc, #40]	; (80014a0 <Create_Nodes+0x3c>)
 8001476:	2200      	movs	r2, #0
 8001478:	701a      	strb	r2, [r3, #0]
	laneChange=0;
 800147a:	4b0a      	ldr	r3, [pc, #40]	; (80014a4 <Create_Nodes+0x40>)
 800147c:	2200      	movs	r2, #0
 800147e:	701a      	strb	r2, [r3, #0]

	//Ct2			//Ct
	nodeDetected=0;
 8001480:	4b09      	ldr	r3, [pc, #36]	; (80014a8 <Create_Nodes+0x44>)
 8001482:	2200      	movs	r2, #0
 8001484:	701a      	strb	r2, [r3, #0]
	//nodeDetected=1;
	v_control=STOP;
 8001486:	4b09      	ldr	r3, [pc, #36]	; (80014ac <Create_Nodes+0x48>)
 8001488:	2200      	movs	r2, #0
 800148a:	701a      	strb	r2, [r3, #0]
	//v_control=NORMAL_VEL;

	if(mode!=SKILL)return;
 800148c:	4b08      	ldr	r3, [pc, #32]	; (80014b0 <Create_Nodes+0x4c>)
 800148e:	781b      	ldrb	r3, [r3, #0]
 8001490:	2b52      	cmp	r3, #82	; 0x52
 8001492:	f041 80df 	bne.w	8002654 <Create_Nodes+0x11f0>

	for(i=0;i<22;i++)
 8001496:	2300      	movs	r3, #0
 8001498:	66fb      	str	r3, [r7, #108]	; 0x6c
 800149a:	e0e3      	b.n	8001664 <Create_Nodes+0x200>
 800149c:	200002b4 	.word	0x200002b4
 80014a0:	200002b7 	.word	0x200002b7
 80014a4:	200002b8 	.word	0x200002b8
 80014a8:	200002b5 	.word	0x200002b5
 80014ac:	200002b9 	.word	0x200002b9
 80014b0:	200002a6 	.word	0x200002a6
	{
		Nodes[i].id=65+i;
 80014b4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80014b6:	b2db      	uxtb	r3, r3
 80014b8:	3341      	adds	r3, #65	; 0x41
 80014ba:	b2d8      	uxtb	r0, r3
 80014bc:	49c4      	ldr	r1, [pc, #784]	; (80017d0 <Create_Nodes+0x36c>)
 80014be:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80014c0:	4613      	mov	r3, r2
 80014c2:	009b      	lsls	r3, r3, #2
 80014c4:	4413      	add	r3, r2
 80014c6:	00db      	lsls	r3, r3, #3
 80014c8:	440b      	add	r3, r1
 80014ca:	4602      	mov	r2, r0
 80014cc:	701a      	strb	r2, [r3, #0]
		Nodes[i].worth=0;
 80014ce:	49c0      	ldr	r1, [pc, #768]	; (80017d0 <Create_Nodes+0x36c>)
 80014d0:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80014d2:	4613      	mov	r3, r2
 80014d4:	009b      	lsls	r3, r3, #2
 80014d6:	4413      	add	r3, r2
 80014d8:	00db      	lsls	r3, r3, #3
 80014da:	440b      	add	r3, r1
 80014dc:	3304      	adds	r3, #4
 80014de:	2200      	movs	r2, #0
 80014e0:	601a      	str	r2, [r3, #0]
		Nodes[i].type=0;
 80014e2:	49bb      	ldr	r1, [pc, #748]	; (80017d0 <Create_Nodes+0x36c>)
 80014e4:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80014e6:	4613      	mov	r3, r2
 80014e8:	009b      	lsls	r3, r3, #2
 80014ea:	4413      	add	r3, r2
 80014ec:	00db      	lsls	r3, r3, #3
 80014ee:	440b      	add	r3, r1
 80014f0:	3308      	adds	r3, #8
 80014f2:	2200      	movs	r2, #0
 80014f4:	601a      	str	r2, [r3, #0]
		VALUE_2(Nodes[i].neighbours,0,0,0,0,0,0);
 80014f6:	49b6      	ldr	r1, [pc, #728]	; (80017d0 <Create_Nodes+0x36c>)
 80014f8:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80014fa:	4613      	mov	r3, r2
 80014fc:	009b      	lsls	r3, r3, #2
 80014fe:	4413      	add	r3, r2
 8001500:	00db      	lsls	r3, r3, #3
 8001502:	440b      	add	r3, r1
 8001504:	330c      	adds	r3, #12
 8001506:	2200      	movs	r2, #0
 8001508:	701a      	strb	r2, [r3, #0]
 800150a:	49b1      	ldr	r1, [pc, #708]	; (80017d0 <Create_Nodes+0x36c>)
 800150c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800150e:	4613      	mov	r3, r2
 8001510:	009b      	lsls	r3, r3, #2
 8001512:	4413      	add	r3, r2
 8001514:	00db      	lsls	r3, r3, #3
 8001516:	440b      	add	r3, r1
 8001518:	330d      	adds	r3, #13
 800151a:	2200      	movs	r2, #0
 800151c:	701a      	strb	r2, [r3, #0]
 800151e:	49ac      	ldr	r1, [pc, #688]	; (80017d0 <Create_Nodes+0x36c>)
 8001520:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001522:	4613      	mov	r3, r2
 8001524:	009b      	lsls	r3, r3, #2
 8001526:	4413      	add	r3, r2
 8001528:	00db      	lsls	r3, r3, #3
 800152a:	440b      	add	r3, r1
 800152c:	330e      	adds	r3, #14
 800152e:	2200      	movs	r2, #0
 8001530:	701a      	strb	r2, [r3, #0]
 8001532:	49a7      	ldr	r1, [pc, #668]	; (80017d0 <Create_Nodes+0x36c>)
 8001534:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001536:	4613      	mov	r3, r2
 8001538:	009b      	lsls	r3, r3, #2
 800153a:	4413      	add	r3, r2
 800153c:	00db      	lsls	r3, r3, #3
 800153e:	440b      	add	r3, r1
 8001540:	330f      	adds	r3, #15
 8001542:	2200      	movs	r2, #0
 8001544:	701a      	strb	r2, [r3, #0]
 8001546:	49a2      	ldr	r1, [pc, #648]	; (80017d0 <Create_Nodes+0x36c>)
 8001548:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800154a:	4613      	mov	r3, r2
 800154c:	009b      	lsls	r3, r3, #2
 800154e:	4413      	add	r3, r2
 8001550:	00db      	lsls	r3, r3, #3
 8001552:	440b      	add	r3, r1
 8001554:	3310      	adds	r3, #16
 8001556:	2200      	movs	r2, #0
 8001558:	701a      	strb	r2, [r3, #0]
 800155a:	499d      	ldr	r1, [pc, #628]	; (80017d0 <Create_Nodes+0x36c>)
 800155c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800155e:	4613      	mov	r3, r2
 8001560:	009b      	lsls	r3, r3, #2
 8001562:	4413      	add	r3, r2
 8001564:	00db      	lsls	r3, r3, #3
 8001566:	440b      	add	r3, r1
 8001568:	3311      	adds	r3, #17
 800156a:	2200      	movs	r2, #0
 800156c:	701a      	strb	r2, [r3, #0]
		VALUE_2(Nodes[i].directions,0,0,0,0,0,0);
 800156e:	4998      	ldr	r1, [pc, #608]	; (80017d0 <Create_Nodes+0x36c>)
 8001570:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001572:	4613      	mov	r3, r2
 8001574:	009b      	lsls	r3, r3, #2
 8001576:	4413      	add	r3, r2
 8001578:	00db      	lsls	r3, r3, #3
 800157a:	440b      	add	r3, r1
 800157c:	3312      	adds	r3, #18
 800157e:	2200      	movs	r2, #0
 8001580:	701a      	strb	r2, [r3, #0]
 8001582:	4993      	ldr	r1, [pc, #588]	; (80017d0 <Create_Nodes+0x36c>)
 8001584:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001586:	4613      	mov	r3, r2
 8001588:	009b      	lsls	r3, r3, #2
 800158a:	4413      	add	r3, r2
 800158c:	00db      	lsls	r3, r3, #3
 800158e:	440b      	add	r3, r1
 8001590:	3313      	adds	r3, #19
 8001592:	2200      	movs	r2, #0
 8001594:	701a      	strb	r2, [r3, #0]
 8001596:	498e      	ldr	r1, [pc, #568]	; (80017d0 <Create_Nodes+0x36c>)
 8001598:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800159a:	4613      	mov	r3, r2
 800159c:	009b      	lsls	r3, r3, #2
 800159e:	4413      	add	r3, r2
 80015a0:	00db      	lsls	r3, r3, #3
 80015a2:	440b      	add	r3, r1
 80015a4:	3314      	adds	r3, #20
 80015a6:	2200      	movs	r2, #0
 80015a8:	701a      	strb	r2, [r3, #0]
 80015aa:	4989      	ldr	r1, [pc, #548]	; (80017d0 <Create_Nodes+0x36c>)
 80015ac:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015ae:	4613      	mov	r3, r2
 80015b0:	009b      	lsls	r3, r3, #2
 80015b2:	4413      	add	r3, r2
 80015b4:	00db      	lsls	r3, r3, #3
 80015b6:	440b      	add	r3, r1
 80015b8:	3315      	adds	r3, #21
 80015ba:	2200      	movs	r2, #0
 80015bc:	701a      	strb	r2, [r3, #0]
 80015be:	4984      	ldr	r1, [pc, #528]	; (80017d0 <Create_Nodes+0x36c>)
 80015c0:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015c2:	4613      	mov	r3, r2
 80015c4:	009b      	lsls	r3, r3, #2
 80015c6:	4413      	add	r3, r2
 80015c8:	00db      	lsls	r3, r3, #3
 80015ca:	440b      	add	r3, r1
 80015cc:	3316      	adds	r3, #22
 80015ce:	2200      	movs	r2, #0
 80015d0:	701a      	strb	r2, [r3, #0]
 80015d2:	497f      	ldr	r1, [pc, #508]	; (80017d0 <Create_Nodes+0x36c>)
 80015d4:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015d6:	4613      	mov	r3, r2
 80015d8:	009b      	lsls	r3, r3, #2
 80015da:	4413      	add	r3, r2
 80015dc:	00db      	lsls	r3, r3, #3
 80015de:	440b      	add	r3, r1
 80015e0:	3317      	adds	r3, #23
 80015e2:	2200      	movs	r2, #0
 80015e4:	701a      	strb	r2, [r3, #0]
		VALUE_2(Nodes[i].distance,0,0,0,0,0,0);
 80015e6:	497a      	ldr	r1, [pc, #488]	; (80017d0 <Create_Nodes+0x36c>)
 80015e8:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015ea:	4613      	mov	r3, r2
 80015ec:	009b      	lsls	r3, r3, #2
 80015ee:	4413      	add	r3, r2
 80015f0:	00db      	lsls	r3, r3, #3
 80015f2:	440b      	add	r3, r1
 80015f4:	3318      	adds	r3, #24
 80015f6:	2200      	movs	r2, #0
 80015f8:	801a      	strh	r2, [r3, #0]
 80015fa:	4975      	ldr	r1, [pc, #468]	; (80017d0 <Create_Nodes+0x36c>)
 80015fc:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015fe:	4613      	mov	r3, r2
 8001600:	009b      	lsls	r3, r3, #2
 8001602:	4413      	add	r3, r2
 8001604:	00db      	lsls	r3, r3, #3
 8001606:	440b      	add	r3, r1
 8001608:	331a      	adds	r3, #26
 800160a:	2200      	movs	r2, #0
 800160c:	801a      	strh	r2, [r3, #0]
 800160e:	4970      	ldr	r1, [pc, #448]	; (80017d0 <Create_Nodes+0x36c>)
 8001610:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001612:	4613      	mov	r3, r2
 8001614:	009b      	lsls	r3, r3, #2
 8001616:	4413      	add	r3, r2
 8001618:	00db      	lsls	r3, r3, #3
 800161a:	440b      	add	r3, r1
 800161c:	331c      	adds	r3, #28
 800161e:	2200      	movs	r2, #0
 8001620:	801a      	strh	r2, [r3, #0]
 8001622:	496b      	ldr	r1, [pc, #428]	; (80017d0 <Create_Nodes+0x36c>)
 8001624:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001626:	4613      	mov	r3, r2
 8001628:	009b      	lsls	r3, r3, #2
 800162a:	4413      	add	r3, r2
 800162c:	00db      	lsls	r3, r3, #3
 800162e:	440b      	add	r3, r1
 8001630:	331e      	adds	r3, #30
 8001632:	2200      	movs	r2, #0
 8001634:	801a      	strh	r2, [r3, #0]
 8001636:	4966      	ldr	r1, [pc, #408]	; (80017d0 <Create_Nodes+0x36c>)
 8001638:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800163a:	4613      	mov	r3, r2
 800163c:	009b      	lsls	r3, r3, #2
 800163e:	4413      	add	r3, r2
 8001640:	00db      	lsls	r3, r3, #3
 8001642:	440b      	add	r3, r1
 8001644:	3320      	adds	r3, #32
 8001646:	2200      	movs	r2, #0
 8001648:	801a      	strh	r2, [r3, #0]
 800164a:	4961      	ldr	r1, [pc, #388]	; (80017d0 <Create_Nodes+0x36c>)
 800164c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800164e:	4613      	mov	r3, r2
 8001650:	009b      	lsls	r3, r3, #2
 8001652:	4413      	add	r3, r2
 8001654:	00db      	lsls	r3, r3, #3
 8001656:	440b      	add	r3, r1
 8001658:	3322      	adds	r3, #34	; 0x22
 800165a:	2200      	movs	r2, #0
 800165c:	801a      	strh	r2, [r3, #0]
	for(i=0;i<22;i++)
 800165e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001660:	3301      	adds	r3, #1
 8001662:	66fb      	str	r3, [r7, #108]	; 0x6c
 8001664:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001666:	2b15      	cmp	r3, #21
 8001668:	f77f af24 	ble.w	80014b4 <Create_Nodes+0x50>
	}
	//A node
	N('A').worth=2;
 800166c:	4b58      	ldr	r3, [pc, #352]	; (80017d0 <Create_Nodes+0x36c>)
 800166e:	2202      	movs	r2, #2
 8001670:	605a      	str	r2, [r3, #4]
	N('A').type=1;
 8001672:	4b57      	ldr	r3, [pc, #348]	; (80017d0 <Create_Nodes+0x36c>)
 8001674:	2201      	movs	r2, #1
 8001676:	609a      	str	r2, [r3, #8]
	VALUE_2(N('A').neighbours,'C',0,0,'B',0,'D');
 8001678:	4b55      	ldr	r3, [pc, #340]	; (80017d0 <Create_Nodes+0x36c>)
 800167a:	2243      	movs	r2, #67	; 0x43
 800167c:	731a      	strb	r2, [r3, #12]
 800167e:	4b54      	ldr	r3, [pc, #336]	; (80017d0 <Create_Nodes+0x36c>)
 8001680:	2200      	movs	r2, #0
 8001682:	735a      	strb	r2, [r3, #13]
 8001684:	4b52      	ldr	r3, [pc, #328]	; (80017d0 <Create_Nodes+0x36c>)
 8001686:	2200      	movs	r2, #0
 8001688:	739a      	strb	r2, [r3, #14]
 800168a:	4b51      	ldr	r3, [pc, #324]	; (80017d0 <Create_Nodes+0x36c>)
 800168c:	2242      	movs	r2, #66	; 0x42
 800168e:	73da      	strb	r2, [r3, #15]
 8001690:	4b4f      	ldr	r3, [pc, #316]	; (80017d0 <Create_Nodes+0x36c>)
 8001692:	2200      	movs	r2, #0
 8001694:	741a      	strb	r2, [r3, #16]
 8001696:	4b4e      	ldr	r3, [pc, #312]	; (80017d0 <Create_Nodes+0x36c>)
 8001698:	2244      	movs	r2, #68	; 0x44
 800169a:	745a      	strb	r2, [r3, #17]
	VALUE_2(N('A').directions,1,0,0,2,0,1);
 800169c:	4b4c      	ldr	r3, [pc, #304]	; (80017d0 <Create_Nodes+0x36c>)
 800169e:	2201      	movs	r2, #1
 80016a0:	749a      	strb	r2, [r3, #18]
 80016a2:	4b4b      	ldr	r3, [pc, #300]	; (80017d0 <Create_Nodes+0x36c>)
 80016a4:	2200      	movs	r2, #0
 80016a6:	74da      	strb	r2, [r3, #19]
 80016a8:	4b49      	ldr	r3, [pc, #292]	; (80017d0 <Create_Nodes+0x36c>)
 80016aa:	2200      	movs	r2, #0
 80016ac:	751a      	strb	r2, [r3, #20]
 80016ae:	4b48      	ldr	r3, [pc, #288]	; (80017d0 <Create_Nodes+0x36c>)
 80016b0:	2202      	movs	r2, #2
 80016b2:	755a      	strb	r2, [r3, #21]
 80016b4:	4b46      	ldr	r3, [pc, #280]	; (80017d0 <Create_Nodes+0x36c>)
 80016b6:	2200      	movs	r2, #0
 80016b8:	759a      	strb	r2, [r3, #22]
 80016ba:	4b45      	ldr	r3, [pc, #276]	; (80017d0 <Create_Nodes+0x36c>)
 80016bc:	2201      	movs	r2, #1
 80016be:	75da      	strb	r2, [r3, #23]
	VALUE_2(N('A').distance,199,0,0,241,0,198);
 80016c0:	4b43      	ldr	r3, [pc, #268]	; (80017d0 <Create_Nodes+0x36c>)
 80016c2:	22c7      	movs	r2, #199	; 0xc7
 80016c4:	831a      	strh	r2, [r3, #24]
 80016c6:	4b42      	ldr	r3, [pc, #264]	; (80017d0 <Create_Nodes+0x36c>)
 80016c8:	2200      	movs	r2, #0
 80016ca:	835a      	strh	r2, [r3, #26]
 80016cc:	4b40      	ldr	r3, [pc, #256]	; (80017d0 <Create_Nodes+0x36c>)
 80016ce:	2200      	movs	r2, #0
 80016d0:	839a      	strh	r2, [r3, #28]
 80016d2:	4b3f      	ldr	r3, [pc, #252]	; (80017d0 <Create_Nodes+0x36c>)
 80016d4:	22f1      	movs	r2, #241	; 0xf1
 80016d6:	83da      	strh	r2, [r3, #30]
 80016d8:	4b3d      	ldr	r3, [pc, #244]	; (80017d0 <Create_Nodes+0x36c>)
 80016da:	2200      	movs	r2, #0
 80016dc:	841a      	strh	r2, [r3, #32]
 80016de:	4b3c      	ldr	r3, [pc, #240]	; (80017d0 <Create_Nodes+0x36c>)
 80016e0:	22c6      	movs	r2, #198	; 0xc6
 80016e2:	845a      	strh	r2, [r3, #34]	; 0x22
	N('A').middle=NEIGHBOUR6;
 80016e4:	4b3a      	ldr	r3, [pc, #232]	; (80017d0 <Create_Nodes+0x36c>)
 80016e6:	2205      	movs	r2, #5
 80016e8:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24

	//B node
	N('B').worth=2;
 80016ec:	4b38      	ldr	r3, [pc, #224]	; (80017d0 <Create_Nodes+0x36c>)
 80016ee:	2202      	movs	r2, #2
 80016f0:	62da      	str	r2, [r3, #44]	; 0x2c
	N('B').type=1;
 80016f2:	4b37      	ldr	r3, [pc, #220]	; (80017d0 <Create_Nodes+0x36c>)
 80016f4:	2201      	movs	r2, #1
 80016f6:	631a      	str	r2, [r3, #48]	; 0x30
	VALUE_2(N('B').neighbours,'D',0,'A',0,0,'E');
 80016f8:	4b35      	ldr	r3, [pc, #212]	; (80017d0 <Create_Nodes+0x36c>)
 80016fa:	2244      	movs	r2, #68	; 0x44
 80016fc:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001700:	4b33      	ldr	r3, [pc, #204]	; (80017d0 <Create_Nodes+0x36c>)
 8001702:	2200      	movs	r2, #0
 8001704:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001708:	4b31      	ldr	r3, [pc, #196]	; (80017d0 <Create_Nodes+0x36c>)
 800170a:	2241      	movs	r2, #65	; 0x41
 800170c:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 8001710:	4b2f      	ldr	r3, [pc, #188]	; (80017d0 <Create_Nodes+0x36c>)
 8001712:	2200      	movs	r2, #0
 8001714:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 8001718:	4b2d      	ldr	r3, [pc, #180]	; (80017d0 <Create_Nodes+0x36c>)
 800171a:	2200      	movs	r2, #0
 800171c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8001720:	4b2b      	ldr	r3, [pc, #172]	; (80017d0 <Create_Nodes+0x36c>)
 8001722:	2245      	movs	r2, #69	; 0x45
 8001724:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
	VALUE_2(N('B').directions,1,0,1,0,0,1);
 8001728:	4b29      	ldr	r3, [pc, #164]	; (80017d0 <Create_Nodes+0x36c>)
 800172a:	2201      	movs	r2, #1
 800172c:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8001730:	4b27      	ldr	r3, [pc, #156]	; (80017d0 <Create_Nodes+0x36c>)
 8001732:	2200      	movs	r2, #0
 8001734:	f883 203b 	strb.w	r2, [r3, #59]	; 0x3b
 8001738:	4b25      	ldr	r3, [pc, #148]	; (80017d0 <Create_Nodes+0x36c>)
 800173a:	2201      	movs	r2, #1
 800173c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001740:	4b23      	ldr	r3, [pc, #140]	; (80017d0 <Create_Nodes+0x36c>)
 8001742:	2200      	movs	r2, #0
 8001744:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001748:	4b21      	ldr	r3, [pc, #132]	; (80017d0 <Create_Nodes+0x36c>)
 800174a:	2200      	movs	r2, #0
 800174c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001750:	4b1f      	ldr	r3, [pc, #124]	; (80017d0 <Create_Nodes+0x36c>)
 8001752:	2201      	movs	r2, #1
 8001754:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
	VALUE_2(N('B').distance,199,0,241,0,0,198);
 8001758:	4b1d      	ldr	r3, [pc, #116]	; (80017d0 <Create_Nodes+0x36c>)
 800175a:	22c7      	movs	r2, #199	; 0xc7
 800175c:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8001760:	4b1b      	ldr	r3, [pc, #108]	; (80017d0 <Create_Nodes+0x36c>)
 8001762:	2200      	movs	r2, #0
 8001764:	f8a3 2042 	strh.w	r2, [r3, #66]	; 0x42
 8001768:	4b19      	ldr	r3, [pc, #100]	; (80017d0 <Create_Nodes+0x36c>)
 800176a:	22f1      	movs	r2, #241	; 0xf1
 800176c:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8001770:	4b17      	ldr	r3, [pc, #92]	; (80017d0 <Create_Nodes+0x36c>)
 8001772:	2200      	movs	r2, #0
 8001774:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8001778:	4b15      	ldr	r3, [pc, #84]	; (80017d0 <Create_Nodes+0x36c>)
 800177a:	2200      	movs	r2, #0
 800177c:	f8a3 2048 	strh.w	r2, [r3, #72]	; 0x48
 8001780:	4b13      	ldr	r3, [pc, #76]	; (80017d0 <Create_Nodes+0x36c>)
 8001782:	22c6      	movs	r2, #198	; 0xc6
 8001784:	f8a3 204a 	strh.w	r2, [r3, #74]	; 0x4a
	N('B').middle=NEIGHBOUR1;
 8001788:	4b11      	ldr	r3, [pc, #68]	; (80017d0 <Create_Nodes+0x36c>)
 800178a:	2200      	movs	r2, #0
 800178c:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c

	//C node
	N('C').worth=2;
 8001790:	4b0f      	ldr	r3, [pc, #60]	; (80017d0 <Create_Nodes+0x36c>)
 8001792:	2202      	movs	r2, #2
 8001794:	655a      	str	r2, [r3, #84]	; 0x54
	N('C').type=2;
 8001796:	4b0e      	ldr	r3, [pc, #56]	; (80017d0 <Create_Nodes+0x36c>)
 8001798:	2202      	movs	r2, #2
 800179a:	659a      	str	r2, [r3, #88]	; 0x58
	VALUE_2(N('C').neighbours,'F',0,0,0,0,'A');
 800179c:	4b0c      	ldr	r3, [pc, #48]	; (80017d0 <Create_Nodes+0x36c>)
 800179e:	2246      	movs	r2, #70	; 0x46
 80017a0:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 80017a4:	4b0a      	ldr	r3, [pc, #40]	; (80017d0 <Create_Nodes+0x36c>)
 80017a6:	2200      	movs	r2, #0
 80017a8:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 80017ac:	4b08      	ldr	r3, [pc, #32]	; (80017d0 <Create_Nodes+0x36c>)
 80017ae:	2200      	movs	r2, #0
 80017b0:	f883 205e 	strb.w	r2, [r3, #94]	; 0x5e
 80017b4:	4b06      	ldr	r3, [pc, #24]	; (80017d0 <Create_Nodes+0x36c>)
 80017b6:	2200      	movs	r2, #0
 80017b8:	f883 205f 	strb.w	r2, [r3, #95]	; 0x5f
 80017bc:	4b04      	ldr	r3, [pc, #16]	; (80017d0 <Create_Nodes+0x36c>)
 80017be:	2200      	movs	r2, #0
 80017c0:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
 80017c4:	4b02      	ldr	r3, [pc, #8]	; (80017d0 <Create_Nodes+0x36c>)
 80017c6:	2241      	movs	r2, #65	; 0x41
 80017c8:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
 80017cc:	e002      	b.n	80017d4 <Create_Nodes+0x370>
 80017ce:	bf00      	nop
 80017d0:	200002c8 	.word	0x200002c8
	VALUE_2(N('C').directions,2,0,0,0,0,2);
 80017d4:	4bc9      	ldr	r3, [pc, #804]	; (8001afc <Create_Nodes+0x698>)
 80017d6:	2202      	movs	r2, #2
 80017d8:	f883 2062 	strb.w	r2, [r3, #98]	; 0x62
 80017dc:	4bc7      	ldr	r3, [pc, #796]	; (8001afc <Create_Nodes+0x698>)
 80017de:	2200      	movs	r2, #0
 80017e0:	f883 2063 	strb.w	r2, [r3, #99]	; 0x63
 80017e4:	4bc5      	ldr	r3, [pc, #788]	; (8001afc <Create_Nodes+0x698>)
 80017e6:	2200      	movs	r2, #0
 80017e8:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
 80017ec:	4bc3      	ldr	r3, [pc, #780]	; (8001afc <Create_Nodes+0x698>)
 80017ee:	2200      	movs	r2, #0
 80017f0:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
 80017f4:	4bc1      	ldr	r3, [pc, #772]	; (8001afc <Create_Nodes+0x698>)
 80017f6:	2200      	movs	r2, #0
 80017f8:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
 80017fc:	4bbf      	ldr	r3, [pc, #764]	; (8001afc <Create_Nodes+0x698>)
 80017fe:	2202      	movs	r2, #2
 8001800:	f883 2067 	strb.w	r2, [r3, #103]	; 0x67
	VALUE_2(N('C').distance,198,0,0,0,0,199);
 8001804:	4bbd      	ldr	r3, [pc, #756]	; (8001afc <Create_Nodes+0x698>)
 8001806:	22c6      	movs	r2, #198	; 0xc6
 8001808:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 800180c:	4bbb      	ldr	r3, [pc, #748]	; (8001afc <Create_Nodes+0x698>)
 800180e:	2200      	movs	r2, #0
 8001810:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 8001814:	4bb9      	ldr	r3, [pc, #740]	; (8001afc <Create_Nodes+0x698>)
 8001816:	2200      	movs	r2, #0
 8001818:	f8a3 206c 	strh.w	r2, [r3, #108]	; 0x6c
 800181c:	4bb7      	ldr	r3, [pc, #732]	; (8001afc <Create_Nodes+0x698>)
 800181e:	2200      	movs	r2, #0
 8001820:	f8a3 206e 	strh.w	r2, [r3, #110]	; 0x6e
 8001824:	4bb5      	ldr	r3, [pc, #724]	; (8001afc <Create_Nodes+0x698>)
 8001826:	2200      	movs	r2, #0
 8001828:	f8a3 2070 	strh.w	r2, [r3, #112]	; 0x70
 800182c:	4bb3      	ldr	r3, [pc, #716]	; (8001afc <Create_Nodes+0x698>)
 800182e:	22c7      	movs	r2, #199	; 0xc7
 8001830:	f8a3 2072 	strh.w	r2, [r3, #114]	; 0x72
	N('C').middle=NEIGHBOUR1;
 8001834:	4bb1      	ldr	r3, [pc, #708]	; (8001afc <Create_Nodes+0x698>)
 8001836:	2200      	movs	r2, #0
 8001838:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

	//D node
	N('D').worth=2;
 800183c:	4baf      	ldr	r3, [pc, #700]	; (8001afc <Create_Nodes+0x698>)
 800183e:	2202      	movs	r2, #2
 8001840:	67da      	str	r2, [r3, #124]	; 0x7c
	N('D').type=2;
 8001842:	4bae      	ldr	r3, [pc, #696]	; (8001afc <Create_Nodes+0x698>)
 8001844:	2202      	movs	r2, #2
 8001846:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	VALUE_2(N('D').neighbours,'G','I','F','A',0,'B');
 800184a:	4bac      	ldr	r3, [pc, #688]	; (8001afc <Create_Nodes+0x698>)
 800184c:	2247      	movs	r2, #71	; 0x47
 800184e:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 8001852:	4baa      	ldr	r3, [pc, #680]	; (8001afc <Create_Nodes+0x698>)
 8001854:	2249      	movs	r2, #73	; 0x49
 8001856:	f883 2085 	strb.w	r2, [r3, #133]	; 0x85
 800185a:	4ba8      	ldr	r3, [pc, #672]	; (8001afc <Create_Nodes+0x698>)
 800185c:	2246      	movs	r2, #70	; 0x46
 800185e:	f883 2086 	strb.w	r2, [r3, #134]	; 0x86
 8001862:	4ba6      	ldr	r3, [pc, #664]	; (8001afc <Create_Nodes+0x698>)
 8001864:	2241      	movs	r2, #65	; 0x41
 8001866:	f883 2087 	strb.w	r2, [r3, #135]	; 0x87
 800186a:	4ba4      	ldr	r3, [pc, #656]	; (8001afc <Create_Nodes+0x698>)
 800186c:	2200      	movs	r2, #0
 800186e:	f883 2088 	strb.w	r2, [r3, #136]	; 0x88
 8001872:	4ba2      	ldr	r3, [pc, #648]	; (8001afc <Create_Nodes+0x698>)
 8001874:	2242      	movs	r2, #66	; 0x42
 8001876:	f883 2089 	strb.w	r2, [r3, #137]	; 0x89
	VALUE_2(N('D').directions,2,1,1,1,0,2);
 800187a:	4ba0      	ldr	r3, [pc, #640]	; (8001afc <Create_Nodes+0x698>)
 800187c:	2202      	movs	r2, #2
 800187e:	f883 208a 	strb.w	r2, [r3, #138]	; 0x8a
 8001882:	4b9e      	ldr	r3, [pc, #632]	; (8001afc <Create_Nodes+0x698>)
 8001884:	2201      	movs	r2, #1
 8001886:	f883 208b 	strb.w	r2, [r3, #139]	; 0x8b
 800188a:	4b9c      	ldr	r3, [pc, #624]	; (8001afc <Create_Nodes+0x698>)
 800188c:	2201      	movs	r2, #1
 800188e:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
 8001892:	4b9a      	ldr	r3, [pc, #616]	; (8001afc <Create_Nodes+0x698>)
 8001894:	2201      	movs	r2, #1
 8001896:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 800189a:	4b98      	ldr	r3, [pc, #608]	; (8001afc <Create_Nodes+0x698>)
 800189c:	2200      	movs	r2, #0
 800189e:	f883 208e 	strb.w	r2, [r3, #142]	; 0x8e
 80018a2:	4b96      	ldr	r3, [pc, #600]	; (8001afc <Create_Nodes+0x698>)
 80018a4:	2202      	movs	r2, #2
 80018a6:	f883 208f 	strb.w	r2, [r3, #143]	; 0x8f
	VALUE_2(N('D').distance,198,241,197,198,0,199);
 80018aa:	4b94      	ldr	r3, [pc, #592]	; (8001afc <Create_Nodes+0x698>)
 80018ac:	22c6      	movs	r2, #198	; 0xc6
 80018ae:	f8a3 2090 	strh.w	r2, [r3, #144]	; 0x90
 80018b2:	4b92      	ldr	r3, [pc, #584]	; (8001afc <Create_Nodes+0x698>)
 80018b4:	22f1      	movs	r2, #241	; 0xf1
 80018b6:	f8a3 2092 	strh.w	r2, [r3, #146]	; 0x92
 80018ba:	4b90      	ldr	r3, [pc, #576]	; (8001afc <Create_Nodes+0x698>)
 80018bc:	22c5      	movs	r2, #197	; 0xc5
 80018be:	f8a3 2094 	strh.w	r2, [r3, #148]	; 0x94
 80018c2:	4b8e      	ldr	r3, [pc, #568]	; (8001afc <Create_Nodes+0x698>)
 80018c4:	22c6      	movs	r2, #198	; 0xc6
 80018c6:	f8a3 2096 	strh.w	r2, [r3, #150]	; 0x96
 80018ca:	4b8c      	ldr	r3, [pc, #560]	; (8001afc <Create_Nodes+0x698>)
 80018cc:	2200      	movs	r2, #0
 80018ce:	f8a3 2098 	strh.w	r2, [r3, #152]	; 0x98
 80018d2:	4b8a      	ldr	r3, [pc, #552]	; (8001afc <Create_Nodes+0x698>)
 80018d4:	22c7      	movs	r2, #199	; 0xc7
 80018d6:	f8a3 209a 	strh.w	r2, [r3, #154]	; 0x9a
	N('D').middle=NEIGHBOUR2;
 80018da:	4b88      	ldr	r3, [pc, #544]	; (8001afc <Create_Nodes+0x698>)
 80018dc:	2201      	movs	r2, #1
 80018de:	f883 209c 	strb.w	r2, [r3, #156]	; 0x9c

	//E node
	N('E').worth=2;
 80018e2:	4b86      	ldr	r3, [pc, #536]	; (8001afc <Create_Nodes+0x698>)
 80018e4:	2202      	movs	r2, #2
 80018e6:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
	N('E').type=2;
 80018ea:	4b84      	ldr	r3, [pc, #528]	; (8001afc <Create_Nodes+0x698>)
 80018ec:	2202      	movs	r2, #2
 80018ee:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
	VALUE_2(N('E').neighbours,'J',0,'G','B',0,0);
 80018f2:	4b82      	ldr	r3, [pc, #520]	; (8001afc <Create_Nodes+0x698>)
 80018f4:	224a      	movs	r2, #74	; 0x4a
 80018f6:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 80018fa:	4b80      	ldr	r3, [pc, #512]	; (8001afc <Create_Nodes+0x698>)
 80018fc:	2200      	movs	r2, #0
 80018fe:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 8001902:	4b7e      	ldr	r3, [pc, #504]	; (8001afc <Create_Nodes+0x698>)
 8001904:	2247      	movs	r2, #71	; 0x47
 8001906:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 800190a:	4b7c      	ldr	r3, [pc, #496]	; (8001afc <Create_Nodes+0x698>)
 800190c:	2242      	movs	r2, #66	; 0x42
 800190e:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 8001912:	4b7a      	ldr	r3, [pc, #488]	; (8001afc <Create_Nodes+0x698>)
 8001914:	2200      	movs	r2, #0
 8001916:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 800191a:	4b78      	ldr	r3, [pc, #480]	; (8001afc <Create_Nodes+0x698>)
 800191c:	2200      	movs	r2, #0
 800191e:	f883 20b1 	strb.w	r2, [r3, #177]	; 0xb1
	VALUE_2(N('E').directions,1,0,1,1,0,0);
 8001922:	4b76      	ldr	r3, [pc, #472]	; (8001afc <Create_Nodes+0x698>)
 8001924:	2201      	movs	r2, #1
 8001926:	f883 20b2 	strb.w	r2, [r3, #178]	; 0xb2
 800192a:	4b74      	ldr	r3, [pc, #464]	; (8001afc <Create_Nodes+0x698>)
 800192c:	2200      	movs	r2, #0
 800192e:	f883 20b3 	strb.w	r2, [r3, #179]	; 0xb3
 8001932:	4b72      	ldr	r3, [pc, #456]	; (8001afc <Create_Nodes+0x698>)
 8001934:	2201      	movs	r2, #1
 8001936:	f883 20b4 	strb.w	r2, [r3, #180]	; 0xb4
 800193a:	4b70      	ldr	r3, [pc, #448]	; (8001afc <Create_Nodes+0x698>)
 800193c:	2201      	movs	r2, #1
 800193e:	f883 20b5 	strb.w	r2, [r3, #181]	; 0xb5
 8001942:	4b6e      	ldr	r3, [pc, #440]	; (8001afc <Create_Nodes+0x698>)
 8001944:	2200      	movs	r2, #0
 8001946:	f883 20b6 	strb.w	r2, [r3, #182]	; 0xb6
 800194a:	4b6c      	ldr	r3, [pc, #432]	; (8001afc <Create_Nodes+0x698>)
 800194c:	2200      	movs	r2, #0
 800194e:	f883 20b7 	strb.w	r2, [r3, #183]	; 0xb7
	VALUE_2(N('E').distance,241,0,197,198,0,0);
 8001952:	4b6a      	ldr	r3, [pc, #424]	; (8001afc <Create_Nodes+0x698>)
 8001954:	22f1      	movs	r2, #241	; 0xf1
 8001956:	f8a3 20b8 	strh.w	r2, [r3, #184]	; 0xb8
 800195a:	4b68      	ldr	r3, [pc, #416]	; (8001afc <Create_Nodes+0x698>)
 800195c:	2200      	movs	r2, #0
 800195e:	f8a3 20ba 	strh.w	r2, [r3, #186]	; 0xba
 8001962:	4b66      	ldr	r3, [pc, #408]	; (8001afc <Create_Nodes+0x698>)
 8001964:	22c5      	movs	r2, #197	; 0xc5
 8001966:	f8a3 20bc 	strh.w	r2, [r3, #188]	; 0xbc
 800196a:	4b64      	ldr	r3, [pc, #400]	; (8001afc <Create_Nodes+0x698>)
 800196c:	22c6      	movs	r2, #198	; 0xc6
 800196e:	f8a3 20be 	strh.w	r2, [r3, #190]	; 0xbe
 8001972:	4b62      	ldr	r3, [pc, #392]	; (8001afc <Create_Nodes+0x698>)
 8001974:	2200      	movs	r2, #0
 8001976:	f8a3 20c0 	strh.w	r2, [r3, #192]	; 0xc0
 800197a:	4b60      	ldr	r3, [pc, #384]	; (8001afc <Create_Nodes+0x698>)
 800197c:	2200      	movs	r2, #0
 800197e:	f8a3 20c2 	strh.w	r2, [r3, #194]	; 0xc2
	N('E').middle=NEIGHBOUR3;
 8001982:	4b5e      	ldr	r3, [pc, #376]	; (8001afc <Create_Nodes+0x698>)
 8001984:	2202      	movs	r2, #2
 8001986:	f883 20c4 	strb.w	r2, [r3, #196]	; 0xc4

	//F node
	N('F').worth=2;
 800198a:	4b5c      	ldr	r3, [pc, #368]	; (8001afc <Create_Nodes+0x698>)
 800198c:	2202      	movs	r2, #2
 800198e:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
	N('F').type=1;
 8001992:	4b5a      	ldr	r3, [pc, #360]	; (8001afc <Create_Nodes+0x698>)
 8001994:	2201      	movs	r2, #1
 8001996:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
	VALUE_2(N('F').neighbours,'H',0,'C','D','G','I');
 800199a:	4b58      	ldr	r3, [pc, #352]	; (8001afc <Create_Nodes+0x698>)
 800199c:	2248      	movs	r2, #72	; 0x48
 800199e:	f883 20d4 	strb.w	r2, [r3, #212]	; 0xd4
 80019a2:	4b56      	ldr	r3, [pc, #344]	; (8001afc <Create_Nodes+0x698>)
 80019a4:	2200      	movs	r2, #0
 80019a6:	f883 20d5 	strb.w	r2, [r3, #213]	; 0xd5
 80019aa:	4b54      	ldr	r3, [pc, #336]	; (8001afc <Create_Nodes+0x698>)
 80019ac:	2243      	movs	r2, #67	; 0x43
 80019ae:	f883 20d6 	strb.w	r2, [r3, #214]	; 0xd6
 80019b2:	4b52      	ldr	r3, [pc, #328]	; (8001afc <Create_Nodes+0x698>)
 80019b4:	2244      	movs	r2, #68	; 0x44
 80019b6:	f883 20d7 	strb.w	r2, [r3, #215]	; 0xd7
 80019ba:	4b50      	ldr	r3, [pc, #320]	; (8001afc <Create_Nodes+0x698>)
 80019bc:	2247      	movs	r2, #71	; 0x47
 80019be:	f883 20d8 	strb.w	r2, [r3, #216]	; 0xd8
 80019c2:	4b4e      	ldr	r3, [pc, #312]	; (8001afc <Create_Nodes+0x698>)
 80019c4:	2249      	movs	r2, #73	; 0x49
 80019c6:	f883 20d9 	strb.w	r2, [r3, #217]	; 0xd9
	VALUE_2(N('F').directions,1,0,2,2,2,1);
 80019ca:	4b4c      	ldr	r3, [pc, #304]	; (8001afc <Create_Nodes+0x698>)
 80019cc:	2201      	movs	r2, #1
 80019ce:	f883 20da 	strb.w	r2, [r3, #218]	; 0xda
 80019d2:	4b4a      	ldr	r3, [pc, #296]	; (8001afc <Create_Nodes+0x698>)
 80019d4:	2200      	movs	r2, #0
 80019d6:	f883 20db 	strb.w	r2, [r3, #219]	; 0xdb
 80019da:	4b48      	ldr	r3, [pc, #288]	; (8001afc <Create_Nodes+0x698>)
 80019dc:	2202      	movs	r2, #2
 80019de:	f883 20dc 	strb.w	r2, [r3, #220]	; 0xdc
 80019e2:	4b46      	ldr	r3, [pc, #280]	; (8001afc <Create_Nodes+0x698>)
 80019e4:	2202      	movs	r2, #2
 80019e6:	f883 20dd 	strb.w	r2, [r3, #221]	; 0xdd
 80019ea:	4b44      	ldr	r3, [pc, #272]	; (8001afc <Create_Nodes+0x698>)
 80019ec:	2202      	movs	r2, #2
 80019ee:	f883 20de 	strb.w	r2, [r3, #222]	; 0xde
 80019f2:	4b42      	ldr	r3, [pc, #264]	; (8001afc <Create_Nodes+0x698>)
 80019f4:	2201      	movs	r2, #1
 80019f6:	f883 20df 	strb.w	r2, [r3, #223]	; 0xdf
	VALUE_2(N('F').distance,200,0,198,197,241,198);
 80019fa:	4b40      	ldr	r3, [pc, #256]	; (8001afc <Create_Nodes+0x698>)
 80019fc:	22c8      	movs	r2, #200	; 0xc8
 80019fe:	f8a3 20e0 	strh.w	r2, [r3, #224]	; 0xe0
 8001a02:	4b3e      	ldr	r3, [pc, #248]	; (8001afc <Create_Nodes+0x698>)
 8001a04:	2200      	movs	r2, #0
 8001a06:	f8a3 20e2 	strh.w	r2, [r3, #226]	; 0xe2
 8001a0a:	4b3c      	ldr	r3, [pc, #240]	; (8001afc <Create_Nodes+0x698>)
 8001a0c:	22c6      	movs	r2, #198	; 0xc6
 8001a0e:	f8a3 20e4 	strh.w	r2, [r3, #228]	; 0xe4
 8001a12:	4b3a      	ldr	r3, [pc, #232]	; (8001afc <Create_Nodes+0x698>)
 8001a14:	22c5      	movs	r2, #197	; 0xc5
 8001a16:	f8a3 20e6 	strh.w	r2, [r3, #230]	; 0xe6
 8001a1a:	4b38      	ldr	r3, [pc, #224]	; (8001afc <Create_Nodes+0x698>)
 8001a1c:	22f1      	movs	r2, #241	; 0xf1
 8001a1e:	f8a3 20e8 	strh.w	r2, [r3, #232]	; 0xe8
 8001a22:	4b36      	ldr	r3, [pc, #216]	; (8001afc <Create_Nodes+0x698>)
 8001a24:	22c6      	movs	r2, #198	; 0xc6
 8001a26:	f8a3 20ea 	strh.w	r2, [r3, #234]	; 0xea
	N('F').middle=NEIGHBOUR6;
 8001a2a:	4b34      	ldr	r3, [pc, #208]	; (8001afc <Create_Nodes+0x698>)
 8001a2c:	2205      	movs	r2, #5
 8001a2e:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec

	//G node
	N('G').worth=2;
 8001a32:	4b32      	ldr	r3, [pc, #200]	; (8001afc <Create_Nodes+0x698>)
 8001a34:	2202      	movs	r2, #2
 8001a36:	f8c3 20f4 	str.w	r2, [r3, #244]	; 0xf4
	N('G').type=1;
 8001a3a:	4b30      	ldr	r3, [pc, #192]	; (8001afc <Create_Nodes+0x698>)
 8001a3c:	2201      	movs	r2, #1
 8001a3e:	f8c3 20f8 	str.w	r2, [r3, #248]	; 0xf8
	VALUE_2(N('G').neighbours,'I','F','D','E',0,'J');
 8001a42:	4b2e      	ldr	r3, [pc, #184]	; (8001afc <Create_Nodes+0x698>)
 8001a44:	2249      	movs	r2, #73	; 0x49
 8001a46:	f883 20fc 	strb.w	r2, [r3, #252]	; 0xfc
 8001a4a:	4b2c      	ldr	r3, [pc, #176]	; (8001afc <Create_Nodes+0x698>)
 8001a4c:	2246      	movs	r2, #70	; 0x46
 8001a4e:	f883 20fd 	strb.w	r2, [r3, #253]	; 0xfd
 8001a52:	4b2a      	ldr	r3, [pc, #168]	; (8001afc <Create_Nodes+0x698>)
 8001a54:	2244      	movs	r2, #68	; 0x44
 8001a56:	f883 20fe 	strb.w	r2, [r3, #254]	; 0xfe
 8001a5a:	4b28      	ldr	r3, [pc, #160]	; (8001afc <Create_Nodes+0x698>)
 8001a5c:	2245      	movs	r2, #69	; 0x45
 8001a5e:	f883 20ff 	strb.w	r2, [r3, #255]	; 0xff
 8001a62:	4b26      	ldr	r3, [pc, #152]	; (8001afc <Create_Nodes+0x698>)
 8001a64:	2200      	movs	r2, #0
 8001a66:	f883 2100 	strb.w	r2, [r3, #256]	; 0x100
 8001a6a:	4b24      	ldr	r3, [pc, #144]	; (8001afc <Create_Nodes+0x698>)
 8001a6c:	224a      	movs	r2, #74	; 0x4a
 8001a6e:	f883 2101 	strb.w	r2, [r3, #257]	; 0x101
	VALUE_2(N('G').directions,1,1,2,2,0,1);
 8001a72:	4b22      	ldr	r3, [pc, #136]	; (8001afc <Create_Nodes+0x698>)
 8001a74:	2201      	movs	r2, #1
 8001a76:	f883 2102 	strb.w	r2, [r3, #258]	; 0x102
 8001a7a:	4b20      	ldr	r3, [pc, #128]	; (8001afc <Create_Nodes+0x698>)
 8001a7c:	2201      	movs	r2, #1
 8001a7e:	f883 2103 	strb.w	r2, [r3, #259]	; 0x103
 8001a82:	4b1e      	ldr	r3, [pc, #120]	; (8001afc <Create_Nodes+0x698>)
 8001a84:	2202      	movs	r2, #2
 8001a86:	f883 2104 	strb.w	r2, [r3, #260]	; 0x104
 8001a8a:	4b1c      	ldr	r3, [pc, #112]	; (8001afc <Create_Nodes+0x698>)
 8001a8c:	2202      	movs	r2, #2
 8001a8e:	f883 2105 	strb.w	r2, [r3, #261]	; 0x105
 8001a92:	4b1a      	ldr	r3, [pc, #104]	; (8001afc <Create_Nodes+0x698>)
 8001a94:	2200      	movs	r2, #0
 8001a96:	f883 2106 	strb.w	r2, [r3, #262]	; 0x106
 8001a9a:	4b18      	ldr	r3, [pc, #96]	; (8001afc <Create_Nodes+0x698>)
 8001a9c:	2201      	movs	r2, #1
 8001a9e:	f883 2107 	strb.w	r2, [r3, #263]	; 0x107
	VALUE_2(N('G').distance,199,241,197,197,0,198);
 8001aa2:	4b16      	ldr	r3, [pc, #88]	; (8001afc <Create_Nodes+0x698>)
 8001aa4:	22c7      	movs	r2, #199	; 0xc7
 8001aa6:	f8a3 2108 	strh.w	r2, [r3, #264]	; 0x108
 8001aaa:	4b14      	ldr	r3, [pc, #80]	; (8001afc <Create_Nodes+0x698>)
 8001aac:	22f1      	movs	r2, #241	; 0xf1
 8001aae:	f8a3 210a 	strh.w	r2, [r3, #266]	; 0x10a
 8001ab2:	4b12      	ldr	r3, [pc, #72]	; (8001afc <Create_Nodes+0x698>)
 8001ab4:	22c5      	movs	r2, #197	; 0xc5
 8001ab6:	f8a3 210c 	strh.w	r2, [r3, #268]	; 0x10c
 8001aba:	4b10      	ldr	r3, [pc, #64]	; (8001afc <Create_Nodes+0x698>)
 8001abc:	22c5      	movs	r2, #197	; 0xc5
 8001abe:	f8a3 210e 	strh.w	r2, [r3, #270]	; 0x10e
 8001ac2:	4b0e      	ldr	r3, [pc, #56]	; (8001afc <Create_Nodes+0x698>)
 8001ac4:	2200      	movs	r2, #0
 8001ac6:	f8a3 2110 	strh.w	r2, [r3, #272]	; 0x110
 8001aca:	4b0c      	ldr	r3, [pc, #48]	; (8001afc <Create_Nodes+0x698>)
 8001acc:	22c6      	movs	r2, #198	; 0xc6
 8001ace:	f8a3 2112 	strh.w	r2, [r3, #274]	; 0x112
	N('G').middle=NEIGHBOUR1;
 8001ad2:	4b0a      	ldr	r3, [pc, #40]	; (8001afc <Create_Nodes+0x698>)
 8001ad4:	2200      	movs	r2, #0
 8001ad6:	f883 2114 	strb.w	r2, [r3, #276]	; 0x114

	//H node
	N('H').worth=2;
 8001ada:	4b08      	ldr	r3, [pc, #32]	; (8001afc <Create_Nodes+0x698>)
 8001adc:	2202      	movs	r2, #2
 8001ade:	f8c3 211c 	str.w	r2, [r3, #284]	; 0x11c
	N('H').type=2;
 8001ae2:	4b06      	ldr	r3, [pc, #24]	; (8001afc <Create_Nodes+0x698>)
 8001ae4:	2202      	movs	r2, #2
 8001ae6:	f8c3 2120 	str.w	r2, [r3, #288]	; 0x120
	VALUE_2(N('H').neighbours,'K',0,'M',0,0,'F');
 8001aea:	4b04      	ldr	r3, [pc, #16]	; (8001afc <Create_Nodes+0x698>)
 8001aec:	224b      	movs	r2, #75	; 0x4b
 8001aee:	f883 2124 	strb.w	r2, [r3, #292]	; 0x124
 8001af2:	4b02      	ldr	r3, [pc, #8]	; (8001afc <Create_Nodes+0x698>)
 8001af4:	2200      	movs	r2, #0
 8001af6:	f883 2125 	strb.w	r2, [r3, #293]	; 0x125
 8001afa:	e001      	b.n	8001b00 <Create_Nodes+0x69c>
 8001afc:	200002c8 	.word	0x200002c8
 8001b00:	4bca      	ldr	r3, [pc, #808]	; (8001e2c <Create_Nodes+0x9c8>)
 8001b02:	224d      	movs	r2, #77	; 0x4d
 8001b04:	f883 2126 	strb.w	r2, [r3, #294]	; 0x126
 8001b08:	4bc8      	ldr	r3, [pc, #800]	; (8001e2c <Create_Nodes+0x9c8>)
 8001b0a:	2200      	movs	r2, #0
 8001b0c:	f883 2127 	strb.w	r2, [r3, #295]	; 0x127
 8001b10:	4bc6      	ldr	r3, [pc, #792]	; (8001e2c <Create_Nodes+0x9c8>)
 8001b12:	2200      	movs	r2, #0
 8001b14:	f883 2128 	strb.w	r2, [r3, #296]	; 0x128
 8001b18:	4bc4      	ldr	r3, [pc, #784]	; (8001e2c <Create_Nodes+0x9c8>)
 8001b1a:	2246      	movs	r2, #70	; 0x46
 8001b1c:	f883 2129 	strb.w	r2, [r3, #297]	; 0x129
	VALUE_2(N('H').directions,2,0,1,0,0,2);
 8001b20:	4bc2      	ldr	r3, [pc, #776]	; (8001e2c <Create_Nodes+0x9c8>)
 8001b22:	2202      	movs	r2, #2
 8001b24:	f883 212a 	strb.w	r2, [r3, #298]	; 0x12a
 8001b28:	4bc0      	ldr	r3, [pc, #768]	; (8001e2c <Create_Nodes+0x9c8>)
 8001b2a:	2200      	movs	r2, #0
 8001b2c:	f883 212b 	strb.w	r2, [r3, #299]	; 0x12b
 8001b30:	4bbe      	ldr	r3, [pc, #760]	; (8001e2c <Create_Nodes+0x9c8>)
 8001b32:	2201      	movs	r2, #1
 8001b34:	f883 212c 	strb.w	r2, [r3, #300]	; 0x12c
 8001b38:	4bbc      	ldr	r3, [pc, #752]	; (8001e2c <Create_Nodes+0x9c8>)
 8001b3a:	2200      	movs	r2, #0
 8001b3c:	f883 212d 	strb.w	r2, [r3, #301]	; 0x12d
 8001b40:	4bba      	ldr	r3, [pc, #744]	; (8001e2c <Create_Nodes+0x9c8>)
 8001b42:	2200      	movs	r2, #0
 8001b44:	f883 212e 	strb.w	r2, [r3, #302]	; 0x12e
 8001b48:	4bb8      	ldr	r3, [pc, #736]	; (8001e2c <Create_Nodes+0x9c8>)
 8001b4a:	2202      	movs	r2, #2
 8001b4c:	f883 212f 	strb.w	r2, [r3, #303]	; 0x12f
	VALUE_2(N('H').distance,198,0,241,0,0,200);
 8001b50:	4bb6      	ldr	r3, [pc, #728]	; (8001e2c <Create_Nodes+0x9c8>)
 8001b52:	22c6      	movs	r2, #198	; 0xc6
 8001b54:	f8a3 2130 	strh.w	r2, [r3, #304]	; 0x130
 8001b58:	4bb4      	ldr	r3, [pc, #720]	; (8001e2c <Create_Nodes+0x9c8>)
 8001b5a:	2200      	movs	r2, #0
 8001b5c:	f8a3 2132 	strh.w	r2, [r3, #306]	; 0x132
 8001b60:	4bb2      	ldr	r3, [pc, #712]	; (8001e2c <Create_Nodes+0x9c8>)
 8001b62:	22f1      	movs	r2, #241	; 0xf1
 8001b64:	f8a3 2134 	strh.w	r2, [r3, #308]	; 0x134
 8001b68:	4bb0      	ldr	r3, [pc, #704]	; (8001e2c <Create_Nodes+0x9c8>)
 8001b6a:	2200      	movs	r2, #0
 8001b6c:	f8a3 2136 	strh.w	r2, [r3, #310]	; 0x136
 8001b70:	4bae      	ldr	r3, [pc, #696]	; (8001e2c <Create_Nodes+0x9c8>)
 8001b72:	2200      	movs	r2, #0
 8001b74:	f8a3 2138 	strh.w	r2, [r3, #312]	; 0x138
 8001b78:	4bac      	ldr	r3, [pc, #688]	; (8001e2c <Create_Nodes+0x9c8>)
 8001b7a:	22c8      	movs	r2, #200	; 0xc8
 8001b7c:	f8a3 213a 	strh.w	r2, [r3, #314]	; 0x13a
	N('H').middle=NEIGHBOUR1;
 8001b80:	4baa      	ldr	r3, [pc, #680]	; (8001e2c <Create_Nodes+0x9c8>)
 8001b82:	2200      	movs	r2, #0
 8001b84:	f883 213c 	strb.w	r2, [r3, #316]	; 0x13c

	//I node
	N('I').worth=2;
 8001b88:	4ba8      	ldr	r3, [pc, #672]	; (8001e2c <Create_Nodes+0x9c8>)
 8001b8a:	2202      	movs	r2, #2
 8001b8c:	f8c3 2144 	str.w	r2, [r3, #324]	; 0x144
	N('I').type=2;
 8001b90:	4ba6      	ldr	r3, [pc, #664]	; (8001e2c <Create_Nodes+0x9c8>)
 8001b92:	2202      	movs	r2, #2
 8001b94:	f8c3 2148 	str.w	r2, [r3, #328]	; 0x148
	VALUE_2(N('I').neighbours,'L','N','K','F','D','G');
 8001b98:	4ba4      	ldr	r3, [pc, #656]	; (8001e2c <Create_Nodes+0x9c8>)
 8001b9a:	224c      	movs	r2, #76	; 0x4c
 8001b9c:	f883 214c 	strb.w	r2, [r3, #332]	; 0x14c
 8001ba0:	4ba2      	ldr	r3, [pc, #648]	; (8001e2c <Create_Nodes+0x9c8>)
 8001ba2:	224e      	movs	r2, #78	; 0x4e
 8001ba4:	f883 214d 	strb.w	r2, [r3, #333]	; 0x14d
 8001ba8:	4ba0      	ldr	r3, [pc, #640]	; (8001e2c <Create_Nodes+0x9c8>)
 8001baa:	224b      	movs	r2, #75	; 0x4b
 8001bac:	f883 214e 	strb.w	r2, [r3, #334]	; 0x14e
 8001bb0:	4b9e      	ldr	r3, [pc, #632]	; (8001e2c <Create_Nodes+0x9c8>)
 8001bb2:	2246      	movs	r2, #70	; 0x46
 8001bb4:	f883 214f 	strb.w	r2, [r3, #335]	; 0x14f
 8001bb8:	4b9c      	ldr	r3, [pc, #624]	; (8001e2c <Create_Nodes+0x9c8>)
 8001bba:	2244      	movs	r2, #68	; 0x44
 8001bbc:	f883 2150 	strb.w	r2, [r3, #336]	; 0x150
 8001bc0:	4b9a      	ldr	r3, [pc, #616]	; (8001e2c <Create_Nodes+0x9c8>)
 8001bc2:	2247      	movs	r2, #71	; 0x47
 8001bc4:	f883 2151 	strb.w	r2, [r3, #337]	; 0x151
	VALUE_2(N('I').directions,2,1,1,1,2,2);
 8001bc8:	4b98      	ldr	r3, [pc, #608]	; (8001e2c <Create_Nodes+0x9c8>)
 8001bca:	2202      	movs	r2, #2
 8001bcc:	f883 2152 	strb.w	r2, [r3, #338]	; 0x152
 8001bd0:	4b96      	ldr	r3, [pc, #600]	; (8001e2c <Create_Nodes+0x9c8>)
 8001bd2:	2201      	movs	r2, #1
 8001bd4:	f883 2153 	strb.w	r2, [r3, #339]	; 0x153
 8001bd8:	4b94      	ldr	r3, [pc, #592]	; (8001e2c <Create_Nodes+0x9c8>)
 8001bda:	2201      	movs	r2, #1
 8001bdc:	f883 2154 	strb.w	r2, [r3, #340]	; 0x154
 8001be0:	4b92      	ldr	r3, [pc, #584]	; (8001e2c <Create_Nodes+0x9c8>)
 8001be2:	2201      	movs	r2, #1
 8001be4:	f883 2155 	strb.w	r2, [r3, #341]	; 0x155
 8001be8:	4b90      	ldr	r3, [pc, #576]	; (8001e2c <Create_Nodes+0x9c8>)
 8001bea:	2202      	movs	r2, #2
 8001bec:	f883 2156 	strb.w	r2, [r3, #342]	; 0x156
 8001bf0:	4b8e      	ldr	r3, [pc, #568]	; (8001e2c <Create_Nodes+0x9c8>)
 8001bf2:	2202      	movs	r2, #2
 8001bf4:	f883 2157 	strb.w	r2, [r3, #343]	; 0x157
	VALUE_2(N('I').distance,198,241,197,198,241,199);
 8001bf8:	4b8c      	ldr	r3, [pc, #560]	; (8001e2c <Create_Nodes+0x9c8>)
 8001bfa:	22c6      	movs	r2, #198	; 0xc6
 8001bfc:	f8a3 2158 	strh.w	r2, [r3, #344]	; 0x158
 8001c00:	4b8a      	ldr	r3, [pc, #552]	; (8001e2c <Create_Nodes+0x9c8>)
 8001c02:	22f1      	movs	r2, #241	; 0xf1
 8001c04:	f8a3 215a 	strh.w	r2, [r3, #346]	; 0x15a
 8001c08:	4b88      	ldr	r3, [pc, #544]	; (8001e2c <Create_Nodes+0x9c8>)
 8001c0a:	22c5      	movs	r2, #197	; 0xc5
 8001c0c:	f8a3 215c 	strh.w	r2, [r3, #348]	; 0x15c
 8001c10:	4b86      	ldr	r3, [pc, #536]	; (8001e2c <Create_Nodes+0x9c8>)
 8001c12:	22c6      	movs	r2, #198	; 0xc6
 8001c14:	f8a3 215e 	strh.w	r2, [r3, #350]	; 0x15e
 8001c18:	4b84      	ldr	r3, [pc, #528]	; (8001e2c <Create_Nodes+0x9c8>)
 8001c1a:	22f1      	movs	r2, #241	; 0xf1
 8001c1c:	f8a3 2160 	strh.w	r2, [r3, #352]	; 0x160
 8001c20:	4b82      	ldr	r3, [pc, #520]	; (8001e2c <Create_Nodes+0x9c8>)
 8001c22:	22c7      	movs	r2, #199	; 0xc7
 8001c24:	f8a3 2162 	strh.w	r2, [r3, #354]	; 0x162
	N('I').middle=NEIGHBOUR6;
 8001c28:	4b80      	ldr	r3, [pc, #512]	; (8001e2c <Create_Nodes+0x9c8>)
 8001c2a:	2205      	movs	r2, #5
 8001c2c:	f883 2164 	strb.w	r2, [r3, #356]	; 0x164

	//J node
	N('J').worth=2;
 8001c30:	4b7e      	ldr	r3, [pc, #504]	; (8001e2c <Create_Nodes+0x9c8>)
 8001c32:	2202      	movs	r2, #2
 8001c34:	f8c3 216c 	str.w	r2, [r3, #364]	; 0x16c
	N('J').type=2;
 8001c38:	4b7c      	ldr	r3, [pc, #496]	; (8001e2c <Create_Nodes+0x9c8>)
 8001c3a:	2202      	movs	r2, #2
 8001c3c:	f8c3 2170 	str.w	r2, [r3, #368]	; 0x170
	VALUE_2(N('J').neighbours,0,0,'L','G',0,'E');
 8001c40:	4b7a      	ldr	r3, [pc, #488]	; (8001e2c <Create_Nodes+0x9c8>)
 8001c42:	2200      	movs	r2, #0
 8001c44:	f883 2174 	strb.w	r2, [r3, #372]	; 0x174
 8001c48:	4b78      	ldr	r3, [pc, #480]	; (8001e2c <Create_Nodes+0x9c8>)
 8001c4a:	2200      	movs	r2, #0
 8001c4c:	f883 2175 	strb.w	r2, [r3, #373]	; 0x175
 8001c50:	4b76      	ldr	r3, [pc, #472]	; (8001e2c <Create_Nodes+0x9c8>)
 8001c52:	224c      	movs	r2, #76	; 0x4c
 8001c54:	f883 2176 	strb.w	r2, [r3, #374]	; 0x176
 8001c58:	4b74      	ldr	r3, [pc, #464]	; (8001e2c <Create_Nodes+0x9c8>)
 8001c5a:	2247      	movs	r2, #71	; 0x47
 8001c5c:	f883 2177 	strb.w	r2, [r3, #375]	; 0x177
 8001c60:	4b72      	ldr	r3, [pc, #456]	; (8001e2c <Create_Nodes+0x9c8>)
 8001c62:	2200      	movs	r2, #0
 8001c64:	f883 2178 	strb.w	r2, [r3, #376]	; 0x178
 8001c68:	4b70      	ldr	r3, [pc, #448]	; (8001e2c <Create_Nodes+0x9c8>)
 8001c6a:	2245      	movs	r2, #69	; 0x45
 8001c6c:	f883 2179 	strb.w	r2, [r3, #377]	; 0x179
	VALUE_2(N('J').directions,0,0,1,1,0,2);
 8001c70:	4b6e      	ldr	r3, [pc, #440]	; (8001e2c <Create_Nodes+0x9c8>)
 8001c72:	2200      	movs	r2, #0
 8001c74:	f883 217a 	strb.w	r2, [r3, #378]	; 0x17a
 8001c78:	4b6c      	ldr	r3, [pc, #432]	; (8001e2c <Create_Nodes+0x9c8>)
 8001c7a:	2200      	movs	r2, #0
 8001c7c:	f883 217b 	strb.w	r2, [r3, #379]	; 0x17b
 8001c80:	4b6a      	ldr	r3, [pc, #424]	; (8001e2c <Create_Nodes+0x9c8>)
 8001c82:	2201      	movs	r2, #1
 8001c84:	f883 217c 	strb.w	r2, [r3, #380]	; 0x17c
 8001c88:	4b68      	ldr	r3, [pc, #416]	; (8001e2c <Create_Nodes+0x9c8>)
 8001c8a:	2201      	movs	r2, #1
 8001c8c:	f883 217d 	strb.w	r2, [r3, #381]	; 0x17d
 8001c90:	4b66      	ldr	r3, [pc, #408]	; (8001e2c <Create_Nodes+0x9c8>)
 8001c92:	2200      	movs	r2, #0
 8001c94:	f883 217e 	strb.w	r2, [r3, #382]	; 0x17e
 8001c98:	4b64      	ldr	r3, [pc, #400]	; (8001e2c <Create_Nodes+0x9c8>)
 8001c9a:	2202      	movs	r2, #2
 8001c9c:	f883 217f 	strb.w	r2, [r3, #383]	; 0x17f
	VALUE_2(N('J').distance,0,0,197,198,0,241);
 8001ca0:	4b62      	ldr	r3, [pc, #392]	; (8001e2c <Create_Nodes+0x9c8>)
 8001ca2:	2200      	movs	r2, #0
 8001ca4:	f8a3 2180 	strh.w	r2, [r3, #384]	; 0x180
 8001ca8:	4b60      	ldr	r3, [pc, #384]	; (8001e2c <Create_Nodes+0x9c8>)
 8001caa:	2200      	movs	r2, #0
 8001cac:	f8a3 2182 	strh.w	r2, [r3, #386]	; 0x182
 8001cb0:	4b5e      	ldr	r3, [pc, #376]	; (8001e2c <Create_Nodes+0x9c8>)
 8001cb2:	22c5      	movs	r2, #197	; 0xc5
 8001cb4:	f8a3 2184 	strh.w	r2, [r3, #388]	; 0x184
 8001cb8:	4b5c      	ldr	r3, [pc, #368]	; (8001e2c <Create_Nodes+0x9c8>)
 8001cba:	22c6      	movs	r2, #198	; 0xc6
 8001cbc:	f8a3 2186 	strh.w	r2, [r3, #390]	; 0x186
 8001cc0:	4b5a      	ldr	r3, [pc, #360]	; (8001e2c <Create_Nodes+0x9c8>)
 8001cc2:	2200      	movs	r2, #0
 8001cc4:	f8a3 2188 	strh.w	r2, [r3, #392]	; 0x188
 8001cc8:	4b58      	ldr	r3, [pc, #352]	; (8001e2c <Create_Nodes+0x9c8>)
 8001cca:	22f1      	movs	r2, #241	; 0xf1
 8001ccc:	f8a3 218a 	strh.w	r2, [r3, #394]	; 0x18a
	N('J').middle=NEIGHBOUR4;
 8001cd0:	4b56      	ldr	r3, [pc, #344]	; (8001e2c <Create_Nodes+0x9c8>)
 8001cd2:	2203      	movs	r2, #3
 8001cd4:	f883 218c 	strb.w	r2, [r3, #396]	; 0x18c

	//K node
	N('K').worth=2;
 8001cd8:	4b54      	ldr	r3, [pc, #336]	; (8001e2c <Create_Nodes+0x9c8>)
 8001cda:	2202      	movs	r2, #2
 8001cdc:	f8c3 2194 	str.w	r2, [r3, #404]	; 0x194
	N('K').type=1;
 8001ce0:	4b52      	ldr	r3, [pc, #328]	; (8001e2c <Create_Nodes+0x9c8>)
 8001ce2:	2201      	movs	r2, #1
 8001ce4:	f8c3 2198 	str.w	r2, [r3, #408]	; 0x198
	VALUE_2(N('K').neighbours,'M',0,'H','I','L','N');
 8001ce8:	4b50      	ldr	r3, [pc, #320]	; (8001e2c <Create_Nodes+0x9c8>)
 8001cea:	224d      	movs	r2, #77	; 0x4d
 8001cec:	f883 219c 	strb.w	r2, [r3, #412]	; 0x19c
 8001cf0:	4b4e      	ldr	r3, [pc, #312]	; (8001e2c <Create_Nodes+0x9c8>)
 8001cf2:	2200      	movs	r2, #0
 8001cf4:	f883 219d 	strb.w	r2, [r3, #413]	; 0x19d
 8001cf8:	4b4c      	ldr	r3, [pc, #304]	; (8001e2c <Create_Nodes+0x9c8>)
 8001cfa:	2248      	movs	r2, #72	; 0x48
 8001cfc:	f883 219e 	strb.w	r2, [r3, #414]	; 0x19e
 8001d00:	4b4a      	ldr	r3, [pc, #296]	; (8001e2c <Create_Nodes+0x9c8>)
 8001d02:	2249      	movs	r2, #73	; 0x49
 8001d04:	f883 219f 	strb.w	r2, [r3, #415]	; 0x19f
 8001d08:	4b48      	ldr	r3, [pc, #288]	; (8001e2c <Create_Nodes+0x9c8>)
 8001d0a:	224c      	movs	r2, #76	; 0x4c
 8001d0c:	f883 21a0 	strb.w	r2, [r3, #416]	; 0x1a0
 8001d10:	4b46      	ldr	r3, [pc, #280]	; (8001e2c <Create_Nodes+0x9c8>)
 8001d12:	224e      	movs	r2, #78	; 0x4e
 8001d14:	f883 21a1 	strb.w	r2, [r3, #417]	; 0x1a1
	VALUE_2(N('K').directions,1,0,2,2,2,1);
 8001d18:	4b44      	ldr	r3, [pc, #272]	; (8001e2c <Create_Nodes+0x9c8>)
 8001d1a:	2201      	movs	r2, #1
 8001d1c:	f883 21a2 	strb.w	r2, [r3, #418]	; 0x1a2
 8001d20:	4b42      	ldr	r3, [pc, #264]	; (8001e2c <Create_Nodes+0x9c8>)
 8001d22:	2200      	movs	r2, #0
 8001d24:	f883 21a3 	strb.w	r2, [r3, #419]	; 0x1a3
 8001d28:	4b40      	ldr	r3, [pc, #256]	; (8001e2c <Create_Nodes+0x9c8>)
 8001d2a:	2202      	movs	r2, #2
 8001d2c:	f883 21a4 	strb.w	r2, [r3, #420]	; 0x1a4
 8001d30:	4b3e      	ldr	r3, [pc, #248]	; (8001e2c <Create_Nodes+0x9c8>)
 8001d32:	2202      	movs	r2, #2
 8001d34:	f883 21a5 	strb.w	r2, [r3, #421]	; 0x1a5
 8001d38:	4b3c      	ldr	r3, [pc, #240]	; (8001e2c <Create_Nodes+0x9c8>)
 8001d3a:	2202      	movs	r2, #2
 8001d3c:	f883 21a6 	strb.w	r2, [r3, #422]	; 0x1a6
 8001d40:	4b3a      	ldr	r3, [pc, #232]	; (8001e2c <Create_Nodes+0x9c8>)
 8001d42:	2201      	movs	r2, #1
 8001d44:	f883 21a7 	strb.w	r2, [r3, #423]	; 0x1a7
	VALUE_2(N('K').distance,200,0,198,197,241,198);
 8001d48:	4b38      	ldr	r3, [pc, #224]	; (8001e2c <Create_Nodes+0x9c8>)
 8001d4a:	22c8      	movs	r2, #200	; 0xc8
 8001d4c:	f8a3 21a8 	strh.w	r2, [r3, #424]	; 0x1a8
 8001d50:	4b36      	ldr	r3, [pc, #216]	; (8001e2c <Create_Nodes+0x9c8>)
 8001d52:	2200      	movs	r2, #0
 8001d54:	f8a3 21aa 	strh.w	r2, [r3, #426]	; 0x1aa
 8001d58:	4b34      	ldr	r3, [pc, #208]	; (8001e2c <Create_Nodes+0x9c8>)
 8001d5a:	22c6      	movs	r2, #198	; 0xc6
 8001d5c:	f8a3 21ac 	strh.w	r2, [r3, #428]	; 0x1ac
 8001d60:	4b32      	ldr	r3, [pc, #200]	; (8001e2c <Create_Nodes+0x9c8>)
 8001d62:	22c5      	movs	r2, #197	; 0xc5
 8001d64:	f8a3 21ae 	strh.w	r2, [r3, #430]	; 0x1ae
 8001d68:	4b30      	ldr	r3, [pc, #192]	; (8001e2c <Create_Nodes+0x9c8>)
 8001d6a:	22f1      	movs	r2, #241	; 0xf1
 8001d6c:	f8a3 21b0 	strh.w	r2, [r3, #432]	; 0x1b0
 8001d70:	4b2e      	ldr	r3, [pc, #184]	; (8001e2c <Create_Nodes+0x9c8>)
 8001d72:	22c6      	movs	r2, #198	; 0xc6
 8001d74:	f8a3 21b2 	strh.w	r2, [r3, #434]	; 0x1b2
	N('K').middle=NEIGHBOUR4;
 8001d78:	4b2c      	ldr	r3, [pc, #176]	; (8001e2c <Create_Nodes+0x9c8>)
 8001d7a:	2203      	movs	r2, #3
 8001d7c:	f883 21b4 	strb.w	r2, [r3, #436]	; 0x1b4

	//L node
	N('L').worth=2;
 8001d80:	4b2a      	ldr	r3, [pc, #168]	; (8001e2c <Create_Nodes+0x9c8>)
 8001d82:	2202      	movs	r2, #2
 8001d84:	f8c3 21bc 	str.w	r2, [r3, #444]	; 0x1bc
	N('L').type=2;
 8001d88:	4b28      	ldr	r3, [pc, #160]	; (8001e2c <Create_Nodes+0x9c8>)
 8001d8a:	2202      	movs	r2, #2
 8001d8c:	f8c3 21c0 	str.w	r2, [r3, #448]	; 0x1c0
	VALUE_2(N('L').neighbours,'N','K','I','J',0,'O');
 8001d90:	4b26      	ldr	r3, [pc, #152]	; (8001e2c <Create_Nodes+0x9c8>)
 8001d92:	224e      	movs	r2, #78	; 0x4e
 8001d94:	f883 21c4 	strb.w	r2, [r3, #452]	; 0x1c4
 8001d98:	4b24      	ldr	r3, [pc, #144]	; (8001e2c <Create_Nodes+0x9c8>)
 8001d9a:	224b      	movs	r2, #75	; 0x4b
 8001d9c:	f883 21c5 	strb.w	r2, [r3, #453]	; 0x1c5
 8001da0:	4b22      	ldr	r3, [pc, #136]	; (8001e2c <Create_Nodes+0x9c8>)
 8001da2:	2249      	movs	r2, #73	; 0x49
 8001da4:	f883 21c6 	strb.w	r2, [r3, #454]	; 0x1c6
 8001da8:	4b20      	ldr	r3, [pc, #128]	; (8001e2c <Create_Nodes+0x9c8>)
 8001daa:	224a      	movs	r2, #74	; 0x4a
 8001dac:	f883 21c7 	strb.w	r2, [r3, #455]	; 0x1c7
 8001db0:	4b1e      	ldr	r3, [pc, #120]	; (8001e2c <Create_Nodes+0x9c8>)
 8001db2:	2200      	movs	r2, #0
 8001db4:	f883 21c8 	strb.w	r2, [r3, #456]	; 0x1c8
 8001db8:	4b1c      	ldr	r3, [pc, #112]	; (8001e2c <Create_Nodes+0x9c8>)
 8001dba:	224f      	movs	r2, #79	; 0x4f
 8001dbc:	f883 21c9 	strb.w	r2, [r3, #457]	; 0x1c9
	VALUE_2(N('L').directions,1,1,2,2,0,1);
 8001dc0:	4b1a      	ldr	r3, [pc, #104]	; (8001e2c <Create_Nodes+0x9c8>)
 8001dc2:	2201      	movs	r2, #1
 8001dc4:	f883 21ca 	strb.w	r2, [r3, #458]	; 0x1ca
 8001dc8:	4b18      	ldr	r3, [pc, #96]	; (8001e2c <Create_Nodes+0x9c8>)
 8001dca:	2201      	movs	r2, #1
 8001dcc:	f883 21cb 	strb.w	r2, [r3, #459]	; 0x1cb
 8001dd0:	4b16      	ldr	r3, [pc, #88]	; (8001e2c <Create_Nodes+0x9c8>)
 8001dd2:	2202      	movs	r2, #2
 8001dd4:	f883 21cc 	strb.w	r2, [r3, #460]	; 0x1cc
 8001dd8:	4b14      	ldr	r3, [pc, #80]	; (8001e2c <Create_Nodes+0x9c8>)
 8001dda:	2202      	movs	r2, #2
 8001ddc:	f883 21cd 	strb.w	r2, [r3, #461]	; 0x1cd
 8001de0:	4b12      	ldr	r3, [pc, #72]	; (8001e2c <Create_Nodes+0x9c8>)
 8001de2:	2200      	movs	r2, #0
 8001de4:	f883 21ce 	strb.w	r2, [r3, #462]	; 0x1ce
 8001de8:	4b10      	ldr	r3, [pc, #64]	; (8001e2c <Create_Nodes+0x9c8>)
 8001dea:	2201      	movs	r2, #1
 8001dec:	f883 21cf 	strb.w	r2, [r3, #463]	; 0x1cf
	VALUE_2(N('L').distance,199,241,198,197,0,198);
 8001df0:	4b0e      	ldr	r3, [pc, #56]	; (8001e2c <Create_Nodes+0x9c8>)
 8001df2:	22c7      	movs	r2, #199	; 0xc7
 8001df4:	f8a3 21d0 	strh.w	r2, [r3, #464]	; 0x1d0
 8001df8:	4b0c      	ldr	r3, [pc, #48]	; (8001e2c <Create_Nodes+0x9c8>)
 8001dfa:	22f1      	movs	r2, #241	; 0xf1
 8001dfc:	f8a3 21d2 	strh.w	r2, [r3, #466]	; 0x1d2
 8001e00:	4b0a      	ldr	r3, [pc, #40]	; (8001e2c <Create_Nodes+0x9c8>)
 8001e02:	22c6      	movs	r2, #198	; 0xc6
 8001e04:	f8a3 21d4 	strh.w	r2, [r3, #468]	; 0x1d4
 8001e08:	4b08      	ldr	r3, [pc, #32]	; (8001e2c <Create_Nodes+0x9c8>)
 8001e0a:	22c5      	movs	r2, #197	; 0xc5
 8001e0c:	f8a3 21d6 	strh.w	r2, [r3, #470]	; 0x1d6
 8001e10:	4b06      	ldr	r3, [pc, #24]	; (8001e2c <Create_Nodes+0x9c8>)
 8001e12:	2200      	movs	r2, #0
 8001e14:	f8a3 21d8 	strh.w	r2, [r3, #472]	; 0x1d8
 8001e18:	4b04      	ldr	r3, [pc, #16]	; (8001e2c <Create_Nodes+0x9c8>)
 8001e1a:	22c6      	movs	r2, #198	; 0xc6
 8001e1c:	f8a3 21da 	strh.w	r2, [r3, #474]	; 0x1da
	N('L').middle=NEIGHBOUR3;
 8001e20:	4b02      	ldr	r3, [pc, #8]	; (8001e2c <Create_Nodes+0x9c8>)
 8001e22:	2202      	movs	r2, #2
 8001e24:	f883 21dc 	strb.w	r2, [r3, #476]	; 0x1dc
 8001e28:	e002      	b.n	8001e30 <Create_Nodes+0x9cc>
 8001e2a:	bf00      	nop
 8001e2c:	200002c8 	.word	0x200002c8

	//M node
	N('M').worth=2;
 8001e30:	4bcb      	ldr	r3, [pc, #812]	; (8002160 <Create_Nodes+0xcfc>)
 8001e32:	2202      	movs	r2, #2
 8001e34:	f8c3 21e4 	str.w	r2, [r3, #484]	; 0x1e4
	N('M').type=2;
 8001e38:	4bc9      	ldr	r3, [pc, #804]	; (8002160 <Create_Nodes+0xcfc>)
 8001e3a:	2202      	movs	r2, #2
 8001e3c:	f8c3 21e8 	str.w	r2, [r3, #488]	; 0x1e8
	VALUE_2(N('M').neighbours,'P','U',0,'H',0,'K');
 8001e40:	4bc7      	ldr	r3, [pc, #796]	; (8002160 <Create_Nodes+0xcfc>)
 8001e42:	2250      	movs	r2, #80	; 0x50
 8001e44:	f883 21ec 	strb.w	r2, [r3, #492]	; 0x1ec
 8001e48:	4bc5      	ldr	r3, [pc, #788]	; (8002160 <Create_Nodes+0xcfc>)
 8001e4a:	2255      	movs	r2, #85	; 0x55
 8001e4c:	f883 21ed 	strb.w	r2, [r3, #493]	; 0x1ed
 8001e50:	4bc3      	ldr	r3, [pc, #780]	; (8002160 <Create_Nodes+0xcfc>)
 8001e52:	2200      	movs	r2, #0
 8001e54:	f883 21ee 	strb.w	r2, [r3, #494]	; 0x1ee
 8001e58:	4bc1      	ldr	r3, [pc, #772]	; (8002160 <Create_Nodes+0xcfc>)
 8001e5a:	2248      	movs	r2, #72	; 0x48
 8001e5c:	f883 21ef 	strb.w	r2, [r3, #495]	; 0x1ef
 8001e60:	4bbf      	ldr	r3, [pc, #764]	; (8002160 <Create_Nodes+0xcfc>)
 8001e62:	2200      	movs	r2, #0
 8001e64:	f883 21f0 	strb.w	r2, [r3, #496]	; 0x1f0
 8001e68:	4bbd      	ldr	r3, [pc, #756]	; (8002160 <Create_Nodes+0xcfc>)
 8001e6a:	224b      	movs	r2, #75	; 0x4b
 8001e6c:	f883 21f1 	strb.w	r2, [r3, #497]	; 0x1f1
	VALUE_2(N('M').directions,2,2,0,2,0,2);
 8001e70:	4bbb      	ldr	r3, [pc, #748]	; (8002160 <Create_Nodes+0xcfc>)
 8001e72:	2202      	movs	r2, #2
 8001e74:	f883 21f2 	strb.w	r2, [r3, #498]	; 0x1f2
 8001e78:	4bb9      	ldr	r3, [pc, #740]	; (8002160 <Create_Nodes+0xcfc>)
 8001e7a:	2202      	movs	r2, #2
 8001e7c:	f883 21f3 	strb.w	r2, [r3, #499]	; 0x1f3
 8001e80:	4bb7      	ldr	r3, [pc, #732]	; (8002160 <Create_Nodes+0xcfc>)
 8001e82:	2200      	movs	r2, #0
 8001e84:	f883 21f4 	strb.w	r2, [r3, #500]	; 0x1f4
 8001e88:	4bb5      	ldr	r3, [pc, #724]	; (8002160 <Create_Nodes+0xcfc>)
 8001e8a:	2202      	movs	r2, #2
 8001e8c:	f883 21f5 	strb.w	r2, [r3, #501]	; 0x1f5
 8001e90:	4bb3      	ldr	r3, [pc, #716]	; (8002160 <Create_Nodes+0xcfc>)
 8001e92:	2200      	movs	r2, #0
 8001e94:	f883 21f6 	strb.w	r2, [r3, #502]	; 0x1f6
 8001e98:	4bb1      	ldr	r3, [pc, #708]	; (8002160 <Create_Nodes+0xcfc>)
 8001e9a:	2202      	movs	r2, #2
 8001e9c:	f883 21f7 	strb.w	r2, [r3, #503]	; 0x1f7
	VALUE_2(N('M').distance,198,319-25,0,241,0,200);
 8001ea0:	4baf      	ldr	r3, [pc, #700]	; (8002160 <Create_Nodes+0xcfc>)
 8001ea2:	22c6      	movs	r2, #198	; 0xc6
 8001ea4:	f8a3 21f8 	strh.w	r2, [r3, #504]	; 0x1f8
 8001ea8:	4bad      	ldr	r3, [pc, #692]	; (8002160 <Create_Nodes+0xcfc>)
 8001eaa:	f44f 7293 	mov.w	r2, #294	; 0x126
 8001eae:	f8a3 21fa 	strh.w	r2, [r3, #506]	; 0x1fa
 8001eb2:	4bab      	ldr	r3, [pc, #684]	; (8002160 <Create_Nodes+0xcfc>)
 8001eb4:	2200      	movs	r2, #0
 8001eb6:	f8a3 21fc 	strh.w	r2, [r3, #508]	; 0x1fc
 8001eba:	4ba9      	ldr	r3, [pc, #676]	; (8002160 <Create_Nodes+0xcfc>)
 8001ebc:	22f1      	movs	r2, #241	; 0xf1
 8001ebe:	f8a3 21fe 	strh.w	r2, [r3, #510]	; 0x1fe
 8001ec2:	4ba7      	ldr	r3, [pc, #668]	; (8002160 <Create_Nodes+0xcfc>)
 8001ec4:	2200      	movs	r2, #0
 8001ec6:	f8a3 2200 	strh.w	r2, [r3, #512]	; 0x200
 8001eca:	4ba5      	ldr	r3, [pc, #660]	; (8002160 <Create_Nodes+0xcfc>)
 8001ecc:	22c8      	movs	r2, #200	; 0xc8
 8001ece:	f8a3 2202 	strh.w	r2, [r3, #514]	; 0x202
	N('M').middle=NEIGHBOUR6;
 8001ed2:	4ba3      	ldr	r3, [pc, #652]	; (8002160 <Create_Nodes+0xcfc>)
 8001ed4:	2205      	movs	r2, #5
 8001ed6:	f883 2204 	strb.w	r2, [r3, #516]	; 0x204

	//N node
	N('N').worth=2;
 8001eda:	4ba1      	ldr	r3, [pc, #644]	; (8002160 <Create_Nodes+0xcfc>)
 8001edc:	2202      	movs	r2, #2
 8001ede:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
	N('N').type=2;
 8001ee2:	4b9f      	ldr	r3, [pc, #636]	; (8002160 <Create_Nodes+0xcfc>)
 8001ee4:	2202      	movs	r2, #2
 8001ee6:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210
	VALUE_2(N('N').neighbours,'Q','T','P','K','I','L');
 8001eea:	4b9d      	ldr	r3, [pc, #628]	; (8002160 <Create_Nodes+0xcfc>)
 8001eec:	2251      	movs	r2, #81	; 0x51
 8001eee:	f883 2214 	strb.w	r2, [r3, #532]	; 0x214
 8001ef2:	4b9b      	ldr	r3, [pc, #620]	; (8002160 <Create_Nodes+0xcfc>)
 8001ef4:	2254      	movs	r2, #84	; 0x54
 8001ef6:	f883 2215 	strb.w	r2, [r3, #533]	; 0x215
 8001efa:	4b99      	ldr	r3, [pc, #612]	; (8002160 <Create_Nodes+0xcfc>)
 8001efc:	2250      	movs	r2, #80	; 0x50
 8001efe:	f883 2216 	strb.w	r2, [r3, #534]	; 0x216
 8001f02:	4b97      	ldr	r3, [pc, #604]	; (8002160 <Create_Nodes+0xcfc>)
 8001f04:	224b      	movs	r2, #75	; 0x4b
 8001f06:	f883 2217 	strb.w	r2, [r3, #535]	; 0x217
 8001f0a:	4b95      	ldr	r3, [pc, #596]	; (8002160 <Create_Nodes+0xcfc>)
 8001f0c:	2249      	movs	r2, #73	; 0x49
 8001f0e:	f883 2218 	strb.w	r2, [r3, #536]	; 0x218
 8001f12:	4b93      	ldr	r3, [pc, #588]	; (8002160 <Create_Nodes+0xcfc>)
 8001f14:	224c      	movs	r2, #76	; 0x4c
 8001f16:	f883 2219 	strb.w	r2, [r3, #537]	; 0x219
	VALUE_2(N('N').directions,2,1,1,1,2,2);
 8001f1a:	4b91      	ldr	r3, [pc, #580]	; (8002160 <Create_Nodes+0xcfc>)
 8001f1c:	2202      	movs	r2, #2
 8001f1e:	f883 221a 	strb.w	r2, [r3, #538]	; 0x21a
 8001f22:	4b8f      	ldr	r3, [pc, #572]	; (8002160 <Create_Nodes+0xcfc>)
 8001f24:	2201      	movs	r2, #1
 8001f26:	f883 221b 	strb.w	r2, [r3, #539]	; 0x21b
 8001f2a:	4b8d      	ldr	r3, [pc, #564]	; (8002160 <Create_Nodes+0xcfc>)
 8001f2c:	2201      	movs	r2, #1
 8001f2e:	f883 221c 	strb.w	r2, [r3, #540]	; 0x21c
 8001f32:	4b8b      	ldr	r3, [pc, #556]	; (8002160 <Create_Nodes+0xcfc>)
 8001f34:	2201      	movs	r2, #1
 8001f36:	f883 221d 	strb.w	r2, [r3, #541]	; 0x21d
 8001f3a:	4b89      	ldr	r3, [pc, #548]	; (8002160 <Create_Nodes+0xcfc>)
 8001f3c:	2202      	movs	r2, #2
 8001f3e:	f883 221e 	strb.w	r2, [r3, #542]	; 0x21e
 8001f42:	4b87      	ldr	r3, [pc, #540]	; (8002160 <Create_Nodes+0xcfc>)
 8001f44:	2202      	movs	r2, #2
 8001f46:	f883 221f 	strb.w	r2, [r3, #543]	; 0x21f
	VALUE_2(N('N').distance,198,120-25,197,198,241,199);
 8001f4a:	4b85      	ldr	r3, [pc, #532]	; (8002160 <Create_Nodes+0xcfc>)
 8001f4c:	22c6      	movs	r2, #198	; 0xc6
 8001f4e:	f8a3 2220 	strh.w	r2, [r3, #544]	; 0x220
 8001f52:	4b83      	ldr	r3, [pc, #524]	; (8002160 <Create_Nodes+0xcfc>)
 8001f54:	225f      	movs	r2, #95	; 0x5f
 8001f56:	f8a3 2222 	strh.w	r2, [r3, #546]	; 0x222
 8001f5a:	4b81      	ldr	r3, [pc, #516]	; (8002160 <Create_Nodes+0xcfc>)
 8001f5c:	22c5      	movs	r2, #197	; 0xc5
 8001f5e:	f8a3 2224 	strh.w	r2, [r3, #548]	; 0x224
 8001f62:	4b7f      	ldr	r3, [pc, #508]	; (8002160 <Create_Nodes+0xcfc>)
 8001f64:	22c6      	movs	r2, #198	; 0xc6
 8001f66:	f8a3 2226 	strh.w	r2, [r3, #550]	; 0x226
 8001f6a:	4b7d      	ldr	r3, [pc, #500]	; (8002160 <Create_Nodes+0xcfc>)
 8001f6c:	22f1      	movs	r2, #241	; 0xf1
 8001f6e:	f8a3 2228 	strh.w	r2, [r3, #552]	; 0x228
 8001f72:	4b7b      	ldr	r3, [pc, #492]	; (8002160 <Create_Nodes+0xcfc>)
 8001f74:	22c7      	movs	r2, #199	; 0xc7
 8001f76:	f8a3 222a 	strh.w	r2, [r3, #554]	; 0x22a
	N('N').middle=NEIGHBOUR4;
 8001f7a:	4b79      	ldr	r3, [pc, #484]	; (8002160 <Create_Nodes+0xcfc>)
 8001f7c:	2203      	movs	r2, #3
 8001f7e:	f883 222c 	strb.w	r2, [r3, #556]	; 0x22c

	//O node
	N('O').worth=2;
 8001f82:	4b77      	ldr	r3, [pc, #476]	; (8002160 <Create_Nodes+0xcfc>)
 8001f84:	2202      	movs	r2, #2
 8001f86:	f8c3 2234 	str.w	r2, [r3, #564]	; 0x234
	N('O').type=2;
 8001f8a:	4b75      	ldr	r3, [pc, #468]	; (8002160 <Create_Nodes+0xcfc>)
 8001f8c:	2202      	movs	r2, #2
 8001f8e:	f8c3 2238 	str.w	r2, [r3, #568]	; 0x238
	VALUE_2(N('O').neighbours,0,'V','Q','L',0,0);
 8001f92:	4b73      	ldr	r3, [pc, #460]	; (8002160 <Create_Nodes+0xcfc>)
 8001f94:	2200      	movs	r2, #0
 8001f96:	f883 223c 	strb.w	r2, [r3, #572]	; 0x23c
 8001f9a:	4b71      	ldr	r3, [pc, #452]	; (8002160 <Create_Nodes+0xcfc>)
 8001f9c:	2256      	movs	r2, #86	; 0x56
 8001f9e:	f883 223d 	strb.w	r2, [r3, #573]	; 0x23d
 8001fa2:	4b6f      	ldr	r3, [pc, #444]	; (8002160 <Create_Nodes+0xcfc>)
 8001fa4:	2251      	movs	r2, #81	; 0x51
 8001fa6:	f883 223e 	strb.w	r2, [r3, #574]	; 0x23e
 8001faa:	4b6d      	ldr	r3, [pc, #436]	; (8002160 <Create_Nodes+0xcfc>)
 8001fac:	224c      	movs	r2, #76	; 0x4c
 8001fae:	f883 223f 	strb.w	r2, [r3, #575]	; 0x23f
 8001fb2:	4b6b      	ldr	r3, [pc, #428]	; (8002160 <Create_Nodes+0xcfc>)
 8001fb4:	2200      	movs	r2, #0
 8001fb6:	f883 2240 	strb.w	r2, [r3, #576]	; 0x240
 8001fba:	4b69      	ldr	r3, [pc, #420]	; (8002160 <Create_Nodes+0xcfc>)
 8001fbc:	2200      	movs	r2, #0
 8001fbe:	f883 2241 	strb.w	r2, [r3, #577]	; 0x241
	VALUE_2(N('O').directions,0,1,1,1,0,0);
 8001fc2:	4b67      	ldr	r3, [pc, #412]	; (8002160 <Create_Nodes+0xcfc>)
 8001fc4:	2200      	movs	r2, #0
 8001fc6:	f883 2242 	strb.w	r2, [r3, #578]	; 0x242
 8001fca:	4b65      	ldr	r3, [pc, #404]	; (8002160 <Create_Nodes+0xcfc>)
 8001fcc:	2201      	movs	r2, #1
 8001fce:	f883 2243 	strb.w	r2, [r3, #579]	; 0x243
 8001fd2:	4b63      	ldr	r3, [pc, #396]	; (8002160 <Create_Nodes+0xcfc>)
 8001fd4:	2201      	movs	r2, #1
 8001fd6:	f883 2244 	strb.w	r2, [r3, #580]	; 0x244
 8001fda:	4b61      	ldr	r3, [pc, #388]	; (8002160 <Create_Nodes+0xcfc>)
 8001fdc:	2201      	movs	r2, #1
 8001fde:	f883 2245 	strb.w	r2, [r3, #581]	; 0x245
 8001fe2:	4b5f      	ldr	r3, [pc, #380]	; (8002160 <Create_Nodes+0xcfc>)
 8001fe4:	2200      	movs	r2, #0
 8001fe6:	f883 2246 	strb.w	r2, [r3, #582]	; 0x246
 8001fea:	4b5d      	ldr	r3, [pc, #372]	; (8002160 <Create_Nodes+0xcfc>)
 8001fec:	2200      	movs	r2, #0
 8001fee:	f883 2247 	strb.w	r2, [r3, #583]	; 0x247
	VALUE_2(N('O').distance,0,318-25,197,198,0,0);
 8001ff2:	4b5b      	ldr	r3, [pc, #364]	; (8002160 <Create_Nodes+0xcfc>)
 8001ff4:	2200      	movs	r2, #0
 8001ff6:	f8a3 2248 	strh.w	r2, [r3, #584]	; 0x248
 8001ffa:	4b59      	ldr	r3, [pc, #356]	; (8002160 <Create_Nodes+0xcfc>)
 8001ffc:	f240 1225 	movw	r2, #293	; 0x125
 8002000:	f8a3 224a 	strh.w	r2, [r3, #586]	; 0x24a
 8002004:	4b56      	ldr	r3, [pc, #344]	; (8002160 <Create_Nodes+0xcfc>)
 8002006:	22c5      	movs	r2, #197	; 0xc5
 8002008:	f8a3 224c 	strh.w	r2, [r3, #588]	; 0x24c
 800200c:	4b54      	ldr	r3, [pc, #336]	; (8002160 <Create_Nodes+0xcfc>)
 800200e:	22c6      	movs	r2, #198	; 0xc6
 8002010:	f8a3 224e 	strh.w	r2, [r3, #590]	; 0x24e
 8002014:	4b52      	ldr	r3, [pc, #328]	; (8002160 <Create_Nodes+0xcfc>)
 8002016:	2200      	movs	r2, #0
 8002018:	f8a3 2250 	strh.w	r2, [r3, #592]	; 0x250
 800201c:	4b50      	ldr	r3, [pc, #320]	; (8002160 <Create_Nodes+0xcfc>)
 800201e:	2200      	movs	r2, #0
 8002020:	f8a3 2252 	strh.w	r2, [r3, #594]	; 0x252
	N('O').middle=NEIGHBOUR3;
 8002024:	4b4e      	ldr	r3, [pc, #312]	; (8002160 <Create_Nodes+0xcfc>)
 8002026:	2202      	movs	r2, #2
 8002028:	f883 2254 	strb.w	r2, [r3, #596]	; 0x254

	//P node
	N('P').worth=2;
 800202c:	4b4c      	ldr	r3, [pc, #304]	; (8002160 <Create_Nodes+0xcfc>)
 800202e:	2202      	movs	r2, #2
 8002030:	f8c3 225c 	str.w	r2, [r3, #604]	; 0x25c
	N('P').type=1;
 8002034:	4b4a      	ldr	r3, [pc, #296]	; (8002160 <Create_Nodes+0xcfc>)
 8002036:	2201      	movs	r2, #1
 8002038:	f8c3 2260 	str.w	r2, [r3, #608]	; 0x260
	VALUE_2(N('P').neighbours,0,0,'M','N',0,'Q');
 800203c:	4b48      	ldr	r3, [pc, #288]	; (8002160 <Create_Nodes+0xcfc>)
 800203e:	2200      	movs	r2, #0
 8002040:	f883 2264 	strb.w	r2, [r3, #612]	; 0x264
 8002044:	4b46      	ldr	r3, [pc, #280]	; (8002160 <Create_Nodes+0xcfc>)
 8002046:	2200      	movs	r2, #0
 8002048:	f883 2265 	strb.w	r2, [r3, #613]	; 0x265
 800204c:	4b44      	ldr	r3, [pc, #272]	; (8002160 <Create_Nodes+0xcfc>)
 800204e:	224d      	movs	r2, #77	; 0x4d
 8002050:	f883 2266 	strb.w	r2, [r3, #614]	; 0x266
 8002054:	4b42      	ldr	r3, [pc, #264]	; (8002160 <Create_Nodes+0xcfc>)
 8002056:	224e      	movs	r2, #78	; 0x4e
 8002058:	f883 2267 	strb.w	r2, [r3, #615]	; 0x267
 800205c:	4b40      	ldr	r3, [pc, #256]	; (8002160 <Create_Nodes+0xcfc>)
 800205e:	2200      	movs	r2, #0
 8002060:	f883 2268 	strb.w	r2, [r3, #616]	; 0x268
 8002064:	4b3e      	ldr	r3, [pc, #248]	; (8002160 <Create_Nodes+0xcfc>)
 8002066:	2251      	movs	r2, #81	; 0x51
 8002068:	f883 2269 	strb.w	r2, [r3, #617]	; 0x269
	VALUE_2(N('P').directions,0,0,2,2,0,2);
 800206c:	4b3c      	ldr	r3, [pc, #240]	; (8002160 <Create_Nodes+0xcfc>)
 800206e:	2200      	movs	r2, #0
 8002070:	f883 226a 	strb.w	r2, [r3, #618]	; 0x26a
 8002074:	4b3a      	ldr	r3, [pc, #232]	; (8002160 <Create_Nodes+0xcfc>)
 8002076:	2200      	movs	r2, #0
 8002078:	f883 226b 	strb.w	r2, [r3, #619]	; 0x26b
 800207c:	4b38      	ldr	r3, [pc, #224]	; (8002160 <Create_Nodes+0xcfc>)
 800207e:	2202      	movs	r2, #2
 8002080:	f883 226c 	strb.w	r2, [r3, #620]	; 0x26c
 8002084:	4b36      	ldr	r3, [pc, #216]	; (8002160 <Create_Nodes+0xcfc>)
 8002086:	2202      	movs	r2, #2
 8002088:	f883 226d 	strb.w	r2, [r3, #621]	; 0x26d
 800208c:	4b34      	ldr	r3, [pc, #208]	; (8002160 <Create_Nodes+0xcfc>)
 800208e:	2200      	movs	r2, #0
 8002090:	f883 226e 	strb.w	r2, [r3, #622]	; 0x26e
 8002094:	4b32      	ldr	r3, [pc, #200]	; (8002160 <Create_Nodes+0xcfc>)
 8002096:	2202      	movs	r2, #2
 8002098:	f883 226f 	strb.w	r2, [r3, #623]	; 0x26f
	VALUE_2(N('P').distance,0,0,198,197,0,241);
 800209c:	4b30      	ldr	r3, [pc, #192]	; (8002160 <Create_Nodes+0xcfc>)
 800209e:	2200      	movs	r2, #0
 80020a0:	f8a3 2270 	strh.w	r2, [r3, #624]	; 0x270
 80020a4:	4b2e      	ldr	r3, [pc, #184]	; (8002160 <Create_Nodes+0xcfc>)
 80020a6:	2200      	movs	r2, #0
 80020a8:	f8a3 2272 	strh.w	r2, [r3, #626]	; 0x272
 80020ac:	4b2c      	ldr	r3, [pc, #176]	; (8002160 <Create_Nodes+0xcfc>)
 80020ae:	22c6      	movs	r2, #198	; 0xc6
 80020b0:	f8a3 2274 	strh.w	r2, [r3, #628]	; 0x274
 80020b4:	4b2a      	ldr	r3, [pc, #168]	; (8002160 <Create_Nodes+0xcfc>)
 80020b6:	22c5      	movs	r2, #197	; 0xc5
 80020b8:	f8a3 2276 	strh.w	r2, [r3, #630]	; 0x276
 80020bc:	4b28      	ldr	r3, [pc, #160]	; (8002160 <Create_Nodes+0xcfc>)
 80020be:	2200      	movs	r2, #0
 80020c0:	f8a3 2278 	strh.w	r2, [r3, #632]	; 0x278
 80020c4:	4b26      	ldr	r3, [pc, #152]	; (8002160 <Create_Nodes+0xcfc>)
 80020c6:	22f1      	movs	r2, #241	; 0xf1
 80020c8:	f8a3 227a 	strh.w	r2, [r3, #634]	; 0x27a
	N('P').middle=NEIGHBOUR4;
 80020cc:	4b24      	ldr	r3, [pc, #144]	; (8002160 <Create_Nodes+0xcfc>)
 80020ce:	2203      	movs	r2, #3
 80020d0:	f883 227c 	strb.w	r2, [r3, #636]	; 0x27c

	//Q node
	N('Q').worth=2;
 80020d4:	4b22      	ldr	r3, [pc, #136]	; (8002160 <Create_Nodes+0xcfc>)
 80020d6:	2202      	movs	r2, #2
 80020d8:	f8c3 2284 	str.w	r2, [r3, #644]	; 0x284
	N('Q').type=1;
 80020dc:	4b20      	ldr	r3, [pc, #128]	; (8002160 <Create_Nodes+0xcfc>)
 80020de:	2201      	movs	r2, #1
 80020e0:	f8c3 2288 	str.w	r2, [r3, #648]	; 0x288
	VALUE_2(N('Q').neighbours,'P',0,'N','O',0,0);
 80020e4:	4b1e      	ldr	r3, [pc, #120]	; (8002160 <Create_Nodes+0xcfc>)
 80020e6:	2250      	movs	r2, #80	; 0x50
 80020e8:	f883 228c 	strb.w	r2, [r3, #652]	; 0x28c
 80020ec:	4b1c      	ldr	r3, [pc, #112]	; (8002160 <Create_Nodes+0xcfc>)
 80020ee:	2200      	movs	r2, #0
 80020f0:	f883 228d 	strb.w	r2, [r3, #653]	; 0x28d
 80020f4:	4b1a      	ldr	r3, [pc, #104]	; (8002160 <Create_Nodes+0xcfc>)
 80020f6:	224e      	movs	r2, #78	; 0x4e
 80020f8:	f883 228e 	strb.w	r2, [r3, #654]	; 0x28e
 80020fc:	4b18      	ldr	r3, [pc, #96]	; (8002160 <Create_Nodes+0xcfc>)
 80020fe:	224f      	movs	r2, #79	; 0x4f
 8002100:	f883 228f 	strb.w	r2, [r3, #655]	; 0x28f
 8002104:	4b16      	ldr	r3, [pc, #88]	; (8002160 <Create_Nodes+0xcfc>)
 8002106:	2200      	movs	r2, #0
 8002108:	f883 2290 	strb.w	r2, [r3, #656]	; 0x290
 800210c:	4b14      	ldr	r3, [pc, #80]	; (8002160 <Create_Nodes+0xcfc>)
 800210e:	2200      	movs	r2, #0
 8002110:	f883 2291 	strb.w	r2, [r3, #657]	; 0x291
	VALUE_2(N('Q').directions,1,0,2,2,0,0);
 8002114:	4b12      	ldr	r3, [pc, #72]	; (8002160 <Create_Nodes+0xcfc>)
 8002116:	2201      	movs	r2, #1
 8002118:	f883 2292 	strb.w	r2, [r3, #658]	; 0x292
 800211c:	4b10      	ldr	r3, [pc, #64]	; (8002160 <Create_Nodes+0xcfc>)
 800211e:	2200      	movs	r2, #0
 8002120:	f883 2293 	strb.w	r2, [r3, #659]	; 0x293
 8002124:	4b0e      	ldr	r3, [pc, #56]	; (8002160 <Create_Nodes+0xcfc>)
 8002126:	2202      	movs	r2, #2
 8002128:	f883 2294 	strb.w	r2, [r3, #660]	; 0x294
 800212c:	4b0c      	ldr	r3, [pc, #48]	; (8002160 <Create_Nodes+0xcfc>)
 800212e:	2202      	movs	r2, #2
 8002130:	f883 2295 	strb.w	r2, [r3, #661]	; 0x295
 8002134:	4b0a      	ldr	r3, [pc, #40]	; (8002160 <Create_Nodes+0xcfc>)
 8002136:	2200      	movs	r2, #0
 8002138:	f883 2296 	strb.w	r2, [r3, #662]	; 0x296
 800213c:	4b08      	ldr	r3, [pc, #32]	; (8002160 <Create_Nodes+0xcfc>)
 800213e:	2200      	movs	r2, #0
 8002140:	f883 2297 	strb.w	r2, [r3, #663]	; 0x297
	VALUE_2(N('Q').distance,241,0,198,197,0,0);
 8002144:	4b06      	ldr	r3, [pc, #24]	; (8002160 <Create_Nodes+0xcfc>)
 8002146:	22f1      	movs	r2, #241	; 0xf1
 8002148:	f8a3 2298 	strh.w	r2, [r3, #664]	; 0x298
 800214c:	4b04      	ldr	r3, [pc, #16]	; (8002160 <Create_Nodes+0xcfc>)
 800214e:	2200      	movs	r2, #0
 8002150:	f8a3 229a 	strh.w	r2, [r3, #666]	; 0x29a
 8002154:	4b02      	ldr	r3, [pc, #8]	; (8002160 <Create_Nodes+0xcfc>)
 8002156:	22c6      	movs	r2, #198	; 0xc6
 8002158:	f8a3 229c 	strh.w	r2, [r3, #668]	; 0x29c
 800215c:	e002      	b.n	8002164 <Create_Nodes+0xd00>
 800215e:	bf00      	nop
 8002160:	200002c8 	.word	0x200002c8
 8002164:	4bca      	ldr	r3, [pc, #808]	; (8002490 <Create_Nodes+0x102c>)
 8002166:	22c5      	movs	r2, #197	; 0xc5
 8002168:	f8a3 229e 	strh.w	r2, [r3, #670]	; 0x29e
 800216c:	4bc8      	ldr	r3, [pc, #800]	; (8002490 <Create_Nodes+0x102c>)
 800216e:	2200      	movs	r2, #0
 8002170:	f8a3 22a0 	strh.w	r2, [r3, #672]	; 0x2a0
 8002174:	4bc6      	ldr	r3, [pc, #792]	; (8002490 <Create_Nodes+0x102c>)
 8002176:	2200      	movs	r2, #0
 8002178:	f8a3 22a2 	strh.w	r2, [r3, #674]	; 0x2a2
	N('Q').middle=NEIGHBOUR3;
 800217c:	4bc4      	ldr	r3, [pc, #784]	; (8002490 <Create_Nodes+0x102c>)
 800217e:	2202      	movs	r2, #2
 8002180:	f883 22a4 	strb.w	r2, [r3, #676]	; 0x2a4

	//R node
	N('R').worth=0;
 8002184:	4bc2      	ldr	r3, [pc, #776]	; (8002490 <Create_Nodes+0x102c>)
 8002186:	2200      	movs	r2, #0
 8002188:	f8c3 22ac 	str.w	r2, [r3, #684]	; 0x2ac
	N('R').type=3;
 800218c:	4bc0      	ldr	r3, [pc, #768]	; (8002490 <Create_Nodes+0x102c>)
 800218e:	2203      	movs	r2, #3
 8002190:	f8c3 22b0 	str.w	r2, [r3, #688]	; 0x2b0
	VALUE_2(N('R').neighbours,0,0,0,'M',0,'P');
 8002194:	4bbe      	ldr	r3, [pc, #760]	; (8002490 <Create_Nodes+0x102c>)
 8002196:	2200      	movs	r2, #0
 8002198:	f883 22b4 	strb.w	r2, [r3, #692]	; 0x2b4
 800219c:	4bbc      	ldr	r3, [pc, #752]	; (8002490 <Create_Nodes+0x102c>)
 800219e:	2200      	movs	r2, #0
 80021a0:	f883 22b5 	strb.w	r2, [r3, #693]	; 0x2b5
 80021a4:	4bba      	ldr	r3, [pc, #744]	; (8002490 <Create_Nodes+0x102c>)
 80021a6:	2200      	movs	r2, #0
 80021a8:	f883 22b6 	strb.w	r2, [r3, #694]	; 0x2b6
 80021ac:	4bb8      	ldr	r3, [pc, #736]	; (8002490 <Create_Nodes+0x102c>)
 80021ae:	224d      	movs	r2, #77	; 0x4d
 80021b0:	f883 22b7 	strb.w	r2, [r3, #695]	; 0x2b7
 80021b4:	4bb6      	ldr	r3, [pc, #728]	; (8002490 <Create_Nodes+0x102c>)
 80021b6:	2200      	movs	r2, #0
 80021b8:	f883 22b8 	strb.w	r2, [r3, #696]	; 0x2b8
 80021bc:	4bb4      	ldr	r3, [pc, #720]	; (8002490 <Create_Nodes+0x102c>)
 80021be:	2250      	movs	r2, #80	; 0x50
 80021c0:	f883 22b9 	strb.w	r2, [r3, #697]	; 0x2b9
	VALUE_2(N('R').directions,0,0,0,2,0,2);
 80021c4:	4bb2      	ldr	r3, [pc, #712]	; (8002490 <Create_Nodes+0x102c>)
 80021c6:	2200      	movs	r2, #0
 80021c8:	f883 22ba 	strb.w	r2, [r3, #698]	; 0x2ba
 80021cc:	4bb0      	ldr	r3, [pc, #704]	; (8002490 <Create_Nodes+0x102c>)
 80021ce:	2200      	movs	r2, #0
 80021d0:	f883 22bb 	strb.w	r2, [r3, #699]	; 0x2bb
 80021d4:	4bae      	ldr	r3, [pc, #696]	; (8002490 <Create_Nodes+0x102c>)
 80021d6:	2200      	movs	r2, #0
 80021d8:	f883 22bc 	strb.w	r2, [r3, #700]	; 0x2bc
 80021dc:	4bac      	ldr	r3, [pc, #688]	; (8002490 <Create_Nodes+0x102c>)
 80021de:	2202      	movs	r2, #2
 80021e0:	f883 22bd 	strb.w	r2, [r3, #701]	; 0x2bd
 80021e4:	4baa      	ldr	r3, [pc, #680]	; (8002490 <Create_Nodes+0x102c>)
 80021e6:	2200      	movs	r2, #0
 80021e8:	f883 22be 	strb.w	r2, [r3, #702]	; 0x2be
 80021ec:	4ba8      	ldr	r3, [pc, #672]	; (8002490 <Create_Nodes+0x102c>)
 80021ee:	2202      	movs	r2, #2
 80021f0:	f883 22bf 	strb.w	r2, [r3, #703]	; 0x2bf
	VALUE_2(N('R').distance,0,0,0,197,0,241);
 80021f4:	4ba6      	ldr	r3, [pc, #664]	; (8002490 <Create_Nodes+0x102c>)
 80021f6:	2200      	movs	r2, #0
 80021f8:	f8a3 22c0 	strh.w	r2, [r3, #704]	; 0x2c0
 80021fc:	4ba4      	ldr	r3, [pc, #656]	; (8002490 <Create_Nodes+0x102c>)
 80021fe:	2200      	movs	r2, #0
 8002200:	f8a3 22c2 	strh.w	r2, [r3, #706]	; 0x2c2
 8002204:	4ba2      	ldr	r3, [pc, #648]	; (8002490 <Create_Nodes+0x102c>)
 8002206:	2200      	movs	r2, #0
 8002208:	f8a3 22c4 	strh.w	r2, [r3, #708]	; 0x2c4
 800220c:	4ba0      	ldr	r3, [pc, #640]	; (8002490 <Create_Nodes+0x102c>)
 800220e:	22c5      	movs	r2, #197	; 0xc5
 8002210:	f8a3 22c6 	strh.w	r2, [r3, #710]	; 0x2c6
 8002214:	4b9e      	ldr	r3, [pc, #632]	; (8002490 <Create_Nodes+0x102c>)
 8002216:	2200      	movs	r2, #0
 8002218:	f8a3 22c8 	strh.w	r2, [r3, #712]	; 0x2c8
 800221c:	4b9c      	ldr	r3, [pc, #624]	; (8002490 <Create_Nodes+0x102c>)
 800221e:	22f1      	movs	r2, #241	; 0xf1
 8002220:	f8a3 22ca 	strh.w	r2, [r3, #714]	; 0x2ca
	N('R').middle=NEIGHBOUR6;
 8002224:	4b9a      	ldr	r3, [pc, #616]	; (8002490 <Create_Nodes+0x102c>)
 8002226:	2205      	movs	r2, #5
 8002228:	f883 22cc 	strb.w	r2, [r3, #716]	; 0x2cc

	//S node
	N('S').worth=0;
 800222c:	4b98      	ldr	r3, [pc, #608]	; (8002490 <Create_Nodes+0x102c>)
 800222e:	2200      	movs	r2, #0
 8002230:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
	N('S').type=3;
 8002234:	4b96      	ldr	r3, [pc, #600]	; (8002490 <Create_Nodes+0x102c>)
 8002236:	2203      	movs	r2, #3
 8002238:	f8c3 22d8 	str.w	r2, [r3, #728]	; 0x2d8
	VALUE_2(N('S').neighbours,'Q',0,'O',0,0,0);
 800223c:	4b94      	ldr	r3, [pc, #592]	; (8002490 <Create_Nodes+0x102c>)
 800223e:	2251      	movs	r2, #81	; 0x51
 8002240:	f883 22dc 	strb.w	r2, [r3, #732]	; 0x2dc
 8002244:	4b92      	ldr	r3, [pc, #584]	; (8002490 <Create_Nodes+0x102c>)
 8002246:	2200      	movs	r2, #0
 8002248:	f883 22dd 	strb.w	r2, [r3, #733]	; 0x2dd
 800224c:	4b90      	ldr	r3, [pc, #576]	; (8002490 <Create_Nodes+0x102c>)
 800224e:	224f      	movs	r2, #79	; 0x4f
 8002250:	f883 22de 	strb.w	r2, [r3, #734]	; 0x2de
 8002254:	4b8e      	ldr	r3, [pc, #568]	; (8002490 <Create_Nodes+0x102c>)
 8002256:	2200      	movs	r2, #0
 8002258:	f883 22df 	strb.w	r2, [r3, #735]	; 0x2df
 800225c:	4b8c      	ldr	r3, [pc, #560]	; (8002490 <Create_Nodes+0x102c>)
 800225e:	2200      	movs	r2, #0
 8002260:	f883 22e0 	strb.w	r2, [r3, #736]	; 0x2e0
 8002264:	4b8a      	ldr	r3, [pc, #552]	; (8002490 <Create_Nodes+0x102c>)
 8002266:	2200      	movs	r2, #0
 8002268:	f883 22e1 	strb.w	r2, [r3, #737]	; 0x2e1
	VALUE_2(N('S').directions,1,0,2,0,0,0);
 800226c:	4b88      	ldr	r3, [pc, #544]	; (8002490 <Create_Nodes+0x102c>)
 800226e:	2201      	movs	r2, #1
 8002270:	f883 22e2 	strb.w	r2, [r3, #738]	; 0x2e2
 8002274:	4b86      	ldr	r3, [pc, #536]	; (8002490 <Create_Nodes+0x102c>)
 8002276:	2200      	movs	r2, #0
 8002278:	f883 22e3 	strb.w	r2, [r3, #739]	; 0x2e3
 800227c:	4b84      	ldr	r3, [pc, #528]	; (8002490 <Create_Nodes+0x102c>)
 800227e:	2202      	movs	r2, #2
 8002280:	f883 22e4 	strb.w	r2, [r3, #740]	; 0x2e4
 8002284:	4b82      	ldr	r3, [pc, #520]	; (8002490 <Create_Nodes+0x102c>)
 8002286:	2200      	movs	r2, #0
 8002288:	f883 22e5 	strb.w	r2, [r3, #741]	; 0x2e5
 800228c:	4b80      	ldr	r3, [pc, #512]	; (8002490 <Create_Nodes+0x102c>)
 800228e:	2200      	movs	r2, #0
 8002290:	f883 22e6 	strb.w	r2, [r3, #742]	; 0x2e6
 8002294:	4b7e      	ldr	r3, [pc, #504]	; (8002490 <Create_Nodes+0x102c>)
 8002296:	2200      	movs	r2, #0
 8002298:	f883 22e7 	strb.w	r2, [r3, #743]	; 0x2e7
	VALUE_2(N('S').distance,241,0,198,0,0,0);
 800229c:	4b7c      	ldr	r3, [pc, #496]	; (8002490 <Create_Nodes+0x102c>)
 800229e:	22f1      	movs	r2, #241	; 0xf1
 80022a0:	f8a3 22e8 	strh.w	r2, [r3, #744]	; 0x2e8
 80022a4:	4b7a      	ldr	r3, [pc, #488]	; (8002490 <Create_Nodes+0x102c>)
 80022a6:	2200      	movs	r2, #0
 80022a8:	f8a3 22ea 	strh.w	r2, [r3, #746]	; 0x2ea
 80022ac:	4b78      	ldr	r3, [pc, #480]	; (8002490 <Create_Nodes+0x102c>)
 80022ae:	22c6      	movs	r2, #198	; 0xc6
 80022b0:	f8a3 22ec 	strh.w	r2, [r3, #748]	; 0x2ec
 80022b4:	4b76      	ldr	r3, [pc, #472]	; (8002490 <Create_Nodes+0x102c>)
 80022b6:	2200      	movs	r2, #0
 80022b8:	f8a3 22ee 	strh.w	r2, [r3, #750]	; 0x2ee
 80022bc:	4b74      	ldr	r3, [pc, #464]	; (8002490 <Create_Nodes+0x102c>)
 80022be:	2200      	movs	r2, #0
 80022c0:	f8a3 22f0 	strh.w	r2, [r3, #752]	; 0x2f0
 80022c4:	4b72      	ldr	r3, [pc, #456]	; (8002490 <Create_Nodes+0x102c>)
 80022c6:	2200      	movs	r2, #0
 80022c8:	f8a3 22f2 	strh.w	r2, [r3, #754]	; 0x2f2
	N('S').middle=NEIGHBOUR1;
 80022cc:	4b70      	ldr	r3, [pc, #448]	; (8002490 <Create_Nodes+0x102c>)
 80022ce:	2200      	movs	r2, #0
 80022d0:	f883 22f4 	strb.w	r2, [r3, #756]	; 0x2f4

	//T node
	N('T').worth=0;
 80022d4:	4b6e      	ldr	r3, [pc, #440]	; (8002490 <Create_Nodes+0x102c>)
 80022d6:	2200      	movs	r2, #0
 80022d8:	f8c3 22fc 	str.w	r2, [r3, #764]	; 0x2fc
	N('T').type=4;
 80022dc:	4b6c      	ldr	r3, [pc, #432]	; (8002490 <Create_Nodes+0x102c>)
 80022de:	2204      	movs	r2, #4
 80022e0:	f8c3 2300 	str.w	r2, [r3, #768]	; 0x300
	VALUE_2(N('T').neighbours,'V',0,'U','N',0,0);
 80022e4:	4b6a      	ldr	r3, [pc, #424]	; (8002490 <Create_Nodes+0x102c>)
 80022e6:	2256      	movs	r2, #86	; 0x56
 80022e8:	f883 2304 	strb.w	r2, [r3, #772]	; 0x304
 80022ec:	4b68      	ldr	r3, [pc, #416]	; (8002490 <Create_Nodes+0x102c>)
 80022ee:	2200      	movs	r2, #0
 80022f0:	f883 2305 	strb.w	r2, [r3, #773]	; 0x305
 80022f4:	4b66      	ldr	r3, [pc, #408]	; (8002490 <Create_Nodes+0x102c>)
 80022f6:	2255      	movs	r2, #85	; 0x55
 80022f8:	f883 2306 	strb.w	r2, [r3, #774]	; 0x306
 80022fc:	4b64      	ldr	r3, [pc, #400]	; (8002490 <Create_Nodes+0x102c>)
 80022fe:	224e      	movs	r2, #78	; 0x4e
 8002300:	f883 2307 	strb.w	r2, [r3, #775]	; 0x307
 8002304:	4b62      	ldr	r3, [pc, #392]	; (8002490 <Create_Nodes+0x102c>)
 8002306:	2200      	movs	r2, #0
 8002308:	f883 2308 	strb.w	r2, [r3, #776]	; 0x308
 800230c:	4b60      	ldr	r3, [pc, #384]	; (8002490 <Create_Nodes+0x102c>)
 800230e:	2200      	movs	r2, #0
 8002310:	f883 2309 	strb.w	r2, [r3, #777]	; 0x309
	VALUE_2(N('T').directions,2,0,1,2,0,0);
 8002314:	4b5e      	ldr	r3, [pc, #376]	; (8002490 <Create_Nodes+0x102c>)
 8002316:	2202      	movs	r2, #2
 8002318:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
 800231c:	4b5c      	ldr	r3, [pc, #368]	; (8002490 <Create_Nodes+0x102c>)
 800231e:	2200      	movs	r2, #0
 8002320:	f883 230b 	strb.w	r2, [r3, #779]	; 0x30b
 8002324:	4b5a      	ldr	r3, [pc, #360]	; (8002490 <Create_Nodes+0x102c>)
 8002326:	2201      	movs	r2, #1
 8002328:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
 800232c:	4b58      	ldr	r3, [pc, #352]	; (8002490 <Create_Nodes+0x102c>)
 800232e:	2202      	movs	r2, #2
 8002330:	f883 230d 	strb.w	r2, [r3, #781]	; 0x30d
 8002334:	4b56      	ldr	r3, [pc, #344]	; (8002490 <Create_Nodes+0x102c>)
 8002336:	2200      	movs	r2, #0
 8002338:	f883 230e 	strb.w	r2, [r3, #782]	; 0x30e
 800233c:	4b54      	ldr	r3, [pc, #336]	; (8002490 <Create_Nodes+0x102c>)
 800233e:	2200      	movs	r2, #0
 8002340:	f883 230f 	strb.w	r2, [r3, #783]	; 0x30f
	VALUE_2(N('T').distance,199,0,198,120-25,0,0);
 8002344:	4b52      	ldr	r3, [pc, #328]	; (8002490 <Create_Nodes+0x102c>)
 8002346:	22c7      	movs	r2, #199	; 0xc7
 8002348:	f8a3 2310 	strh.w	r2, [r3, #784]	; 0x310
 800234c:	4b50      	ldr	r3, [pc, #320]	; (8002490 <Create_Nodes+0x102c>)
 800234e:	2200      	movs	r2, #0
 8002350:	f8a3 2312 	strh.w	r2, [r3, #786]	; 0x312
 8002354:	4b4e      	ldr	r3, [pc, #312]	; (8002490 <Create_Nodes+0x102c>)
 8002356:	22c6      	movs	r2, #198	; 0xc6
 8002358:	f8a3 2314 	strh.w	r2, [r3, #788]	; 0x314
 800235c:	4b4c      	ldr	r3, [pc, #304]	; (8002490 <Create_Nodes+0x102c>)
 800235e:	225f      	movs	r2, #95	; 0x5f
 8002360:	f8a3 2316 	strh.w	r2, [r3, #790]	; 0x316
 8002364:	4b4a      	ldr	r3, [pc, #296]	; (8002490 <Create_Nodes+0x102c>)
 8002366:	2200      	movs	r2, #0
 8002368:	f8a3 2318 	strh.w	r2, [r3, #792]	; 0x318
 800236c:	4b48      	ldr	r3, [pc, #288]	; (8002490 <Create_Nodes+0x102c>)
 800236e:	2200      	movs	r2, #0
 8002370:	f8a3 231a 	strh.w	r2, [r3, #794]	; 0x31a
	N('T').middle=NEIGHBOUR4;
 8002374:	4b46      	ldr	r3, [pc, #280]	; (8002490 <Create_Nodes+0x102c>)
 8002376:	2203      	movs	r2, #3
 8002378:	f883 231c 	strb.w	r2, [r3, #796]	; 0x31c

	//U node
	N('U').worth=0;
 800237c:	4b44      	ldr	r3, [pc, #272]	; (8002490 <Create_Nodes+0x102c>)
 800237e:	2200      	movs	r2, #0
 8002380:	f8c3 2324 	str.w	r2, [r3, #804]	; 0x324
	N('U').type=3;
 8002384:	4b42      	ldr	r3, [pc, #264]	; (8002490 <Create_Nodes+0x102c>)
 8002386:	2203      	movs	r2, #3
 8002388:	f8c3 2328 	str.w	r2, [r3, #808]	; 0x328
	VALUE_2(N('U').neighbours,0,0,'M','T',0,'V');
 800238c:	4b40      	ldr	r3, [pc, #256]	; (8002490 <Create_Nodes+0x102c>)
 800238e:	2200      	movs	r2, #0
 8002390:	f883 232c 	strb.w	r2, [r3, #812]	; 0x32c
 8002394:	4b3e      	ldr	r3, [pc, #248]	; (8002490 <Create_Nodes+0x102c>)
 8002396:	2200      	movs	r2, #0
 8002398:	f883 232d 	strb.w	r2, [r3, #813]	; 0x32d
 800239c:	4b3c      	ldr	r3, [pc, #240]	; (8002490 <Create_Nodes+0x102c>)
 800239e:	224d      	movs	r2, #77	; 0x4d
 80023a0:	f883 232e 	strb.w	r2, [r3, #814]	; 0x32e
 80023a4:	4b3a      	ldr	r3, [pc, #232]	; (8002490 <Create_Nodes+0x102c>)
 80023a6:	2254      	movs	r2, #84	; 0x54
 80023a8:	f883 232f 	strb.w	r2, [r3, #815]	; 0x32f
 80023ac:	4b38      	ldr	r3, [pc, #224]	; (8002490 <Create_Nodes+0x102c>)
 80023ae:	2200      	movs	r2, #0
 80023b0:	f883 2330 	strb.w	r2, [r3, #816]	; 0x330
 80023b4:	4b36      	ldr	r3, [pc, #216]	; (8002490 <Create_Nodes+0x102c>)
 80023b6:	2256      	movs	r2, #86	; 0x56
 80023b8:	f883 2331 	strb.w	r2, [r3, #817]	; 0x331
	VALUE_2(N('U').directions,0,0,2,2,0,2);
 80023bc:	4b34      	ldr	r3, [pc, #208]	; (8002490 <Create_Nodes+0x102c>)
 80023be:	2200      	movs	r2, #0
 80023c0:	f883 2332 	strb.w	r2, [r3, #818]	; 0x332
 80023c4:	4b32      	ldr	r3, [pc, #200]	; (8002490 <Create_Nodes+0x102c>)
 80023c6:	2200      	movs	r2, #0
 80023c8:	f883 2333 	strb.w	r2, [r3, #819]	; 0x333
 80023cc:	4b30      	ldr	r3, [pc, #192]	; (8002490 <Create_Nodes+0x102c>)
 80023ce:	2202      	movs	r2, #2
 80023d0:	f883 2334 	strb.w	r2, [r3, #820]	; 0x334
 80023d4:	4b2e      	ldr	r3, [pc, #184]	; (8002490 <Create_Nodes+0x102c>)
 80023d6:	2202      	movs	r2, #2
 80023d8:	f883 2335 	strb.w	r2, [r3, #821]	; 0x335
 80023dc:	4b2c      	ldr	r3, [pc, #176]	; (8002490 <Create_Nodes+0x102c>)
 80023de:	2200      	movs	r2, #0
 80023e0:	f883 2336 	strb.w	r2, [r3, #822]	; 0x336
 80023e4:	4b2a      	ldr	r3, [pc, #168]	; (8002490 <Create_Nodes+0x102c>)
 80023e6:	2202      	movs	r2, #2
 80023e8:	f883 2337 	strb.w	r2, [r3, #823]	; 0x337
	VALUE_2(N('U').distance,0,0,319-25,198,0,241);
 80023ec:	4b28      	ldr	r3, [pc, #160]	; (8002490 <Create_Nodes+0x102c>)
 80023ee:	2200      	movs	r2, #0
 80023f0:	f8a3 2338 	strh.w	r2, [r3, #824]	; 0x338
 80023f4:	4b26      	ldr	r3, [pc, #152]	; (8002490 <Create_Nodes+0x102c>)
 80023f6:	2200      	movs	r2, #0
 80023f8:	f8a3 233a 	strh.w	r2, [r3, #826]	; 0x33a
 80023fc:	4b24      	ldr	r3, [pc, #144]	; (8002490 <Create_Nodes+0x102c>)
 80023fe:	f44f 7293 	mov.w	r2, #294	; 0x126
 8002402:	f8a3 233c 	strh.w	r2, [r3, #828]	; 0x33c
 8002406:	4b22      	ldr	r3, [pc, #136]	; (8002490 <Create_Nodes+0x102c>)
 8002408:	22c6      	movs	r2, #198	; 0xc6
 800240a:	f8a3 233e 	strh.w	r2, [r3, #830]	; 0x33e
 800240e:	4b20      	ldr	r3, [pc, #128]	; (8002490 <Create_Nodes+0x102c>)
 8002410:	2200      	movs	r2, #0
 8002412:	f8a3 2340 	strh.w	r2, [r3, #832]	; 0x340
 8002416:	4b1e      	ldr	r3, [pc, #120]	; (8002490 <Create_Nodes+0x102c>)
 8002418:	22f1      	movs	r2, #241	; 0xf1
 800241a:	f8a3 2342 	strh.w	r2, [r3, #834]	; 0x342
	N('U').middle=NEIGHBOUR3;
 800241e:	4b1c      	ldr	r3, [pc, #112]	; (8002490 <Create_Nodes+0x102c>)
 8002420:	2202      	movs	r2, #2
 8002422:	f883 2344 	strb.w	r2, [r3, #836]	; 0x344

	//V node
	N('V').worth=0;
 8002426:	4b1a      	ldr	r3, [pc, #104]	; (8002490 <Create_Nodes+0x102c>)
 8002428:	2200      	movs	r2, #0
 800242a:	f8c3 234c 	str.w	r2, [r3, #844]	; 0x34c
	N('V').type=3;
 800242e:	4b18      	ldr	r3, [pc, #96]	; (8002490 <Create_Nodes+0x102c>)
 8002430:	2203      	movs	r2, #3
 8002432:	f8c3 2350 	str.w	r2, [r3, #848]	; 0x350
	VALUE_2(N('V').neighbours,'U',0,'T','O',0,0);
 8002436:	4b16      	ldr	r3, [pc, #88]	; (8002490 <Create_Nodes+0x102c>)
 8002438:	2255      	movs	r2, #85	; 0x55
 800243a:	f883 2354 	strb.w	r2, [r3, #852]	; 0x354
 800243e:	4b14      	ldr	r3, [pc, #80]	; (8002490 <Create_Nodes+0x102c>)
 8002440:	2200      	movs	r2, #0
 8002442:	f883 2355 	strb.w	r2, [r3, #853]	; 0x355
 8002446:	4b12      	ldr	r3, [pc, #72]	; (8002490 <Create_Nodes+0x102c>)
 8002448:	2254      	movs	r2, #84	; 0x54
 800244a:	f883 2356 	strb.w	r2, [r3, #854]	; 0x356
 800244e:	4b10      	ldr	r3, [pc, #64]	; (8002490 <Create_Nodes+0x102c>)
 8002450:	224f      	movs	r2, #79	; 0x4f
 8002452:	f883 2357 	strb.w	r2, [r3, #855]	; 0x357
 8002456:	4b0e      	ldr	r3, [pc, #56]	; (8002490 <Create_Nodes+0x102c>)
 8002458:	2200      	movs	r2, #0
 800245a:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
 800245e:	4b0c      	ldr	r3, [pc, #48]	; (8002490 <Create_Nodes+0x102c>)
 8002460:	2200      	movs	r2, #0
 8002462:	f883 2359 	strb.w	r2, [r3, #857]	; 0x359
	VALUE_2(N('V').directions,1,0,2,2,0,0);
 8002466:	4b0a      	ldr	r3, [pc, #40]	; (8002490 <Create_Nodes+0x102c>)
 8002468:	2201      	movs	r2, #1
 800246a:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 800246e:	4b08      	ldr	r3, [pc, #32]	; (8002490 <Create_Nodes+0x102c>)
 8002470:	2200      	movs	r2, #0
 8002472:	f883 235b 	strb.w	r2, [r3, #859]	; 0x35b
 8002476:	4b06      	ldr	r3, [pc, #24]	; (8002490 <Create_Nodes+0x102c>)
 8002478:	2202      	movs	r2, #2
 800247a:	f883 235c 	strb.w	r2, [r3, #860]	; 0x35c
 800247e:	4b04      	ldr	r3, [pc, #16]	; (8002490 <Create_Nodes+0x102c>)
 8002480:	2202      	movs	r2, #2
 8002482:	f883 235d 	strb.w	r2, [r3, #861]	; 0x35d
 8002486:	4b02      	ldr	r3, [pc, #8]	; (8002490 <Create_Nodes+0x102c>)
 8002488:	2200      	movs	r2, #0
 800248a:	f883 235e 	strb.w	r2, [r3, #862]	; 0x35e
 800248e:	e001      	b.n	8002494 <Create_Nodes+0x1030>
 8002490:	200002c8 	.word	0x200002c8
 8002494:	4b72      	ldr	r3, [pc, #456]	; (8002660 <Create_Nodes+0x11fc>)
 8002496:	2200      	movs	r2, #0
 8002498:	f883 235f 	strb.w	r2, [r3, #863]	; 0x35f
	VALUE_2(N('V').distance,241,0,199,318-25,0,0);
 800249c:	4b70      	ldr	r3, [pc, #448]	; (8002660 <Create_Nodes+0x11fc>)
 800249e:	22f1      	movs	r2, #241	; 0xf1
 80024a0:	f8a3 2360 	strh.w	r2, [r3, #864]	; 0x360
 80024a4:	4b6e      	ldr	r3, [pc, #440]	; (8002660 <Create_Nodes+0x11fc>)
 80024a6:	2200      	movs	r2, #0
 80024a8:	f8a3 2362 	strh.w	r2, [r3, #866]	; 0x362
 80024ac:	4b6c      	ldr	r3, [pc, #432]	; (8002660 <Create_Nodes+0x11fc>)
 80024ae:	22c7      	movs	r2, #199	; 0xc7
 80024b0:	f8a3 2364 	strh.w	r2, [r3, #868]	; 0x364
 80024b4:	4b6a      	ldr	r3, [pc, #424]	; (8002660 <Create_Nodes+0x11fc>)
 80024b6:	f240 1225 	movw	r2, #293	; 0x125
 80024ba:	f8a3 2366 	strh.w	r2, [r3, #870]	; 0x366
 80024be:	4b68      	ldr	r3, [pc, #416]	; (8002660 <Create_Nodes+0x11fc>)
 80024c0:	2200      	movs	r2, #0
 80024c2:	f8a3 2368 	strh.w	r2, [r3, #872]	; 0x368
 80024c6:	4b66      	ldr	r3, [pc, #408]	; (8002660 <Create_Nodes+0x11fc>)
 80024c8:	2200      	movs	r2, #0
 80024ca:	f8a3 236a 	strh.w	r2, [r3, #874]	; 0x36a
	N('V').middle=NEIGHBOUR3;
 80024ce:	4b64      	ldr	r3, [pc, #400]	; (8002660 <Create_Nodes+0x11fc>)
 80024d0:	2202      	movs	r2, #2
 80024d2:	f883 236c 	strb.w	r2, [r3, #876]	; 0x36c

	//Nodeértékek backup mentésből való visszatöltése
	if(SW2)//ha a kacsapoló2 a megfelelő állapotban van (világít a piros LED)
 80024d6:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80024da:	4862      	ldr	r0, [pc, #392]	; (8002664 <Create_Nodes+0x1200>)
 80024dc:	f006 f894 	bl	8008608 <HAL_GPIO_ReadPin>
 80024e0:	4603      	mov	r3, r0
 80024e2:	2b00      	cmp	r3, #0
 80024e4:	f000 80a0 	beq.w	8002628 <Create_Nodes+0x11c4>
	{
		uint32_t check_flash = *(__IO uint32_t *) FLASH_ADDRESS_NODEWORTH; //tényleg ottvanak  flashbena megfelelő helyen a worth értékek?
 80024e8:	4b5f      	ldr	r3, [pc, #380]	; (8002668 <Create_Nodes+0x1204>)
 80024ea:	681b      	ldr	r3, [r3, #0]
 80024ec:	66bb      	str	r3, [r7, #104]	; 0x68

		if(check_flash==0xffffffff)//nincs semmi a flashben
 80024ee:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80024f0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80024f4:	d161      	bne.n	80025ba <Create_Nodes+0x1156>
		{
			char str[]="Default worths because of FLASH ERROR!\n\r";
 80024f6:	4b5d      	ldr	r3, [pc, #372]	; (800266c <Create_Nodes+0x1208>)
 80024f8:	f107 040c 	add.w	r4, r7, #12
 80024fc:	461d      	mov	r5, r3
 80024fe:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002500:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002502:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002504:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002506:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800250a:	c403      	stmia	r4!, {r0, r1}
 800250c:	7022      	strb	r2, [r4, #0]
			HAL_UART_Transmit(huart_debugg,(uint8_t*) str, strlen(str), 10);
 800250e:	f107 030c 	add.w	r3, r7, #12
 8002512:	4618      	mov	r0, r3
 8002514:	f7fd fe7c 	bl	8000210 <strlen>
 8002518:	4603      	mov	r3, r0
 800251a:	b29a      	uxth	r2, r3
 800251c:	f107 010c 	add.w	r1, r7, #12
 8002520:	230a      	movs	r3, #10
 8002522:	6878      	ldr	r0, [r7, #4]
 8002524:	f008 fddb 	bl	800b0de <HAL_UART_Transmit>
			HAL_FLASH_Unlock();
 8002528:	f005 fd20 	bl	8007f6c <HAL_FLASH_Unlock>
			HAL_Delay(50);
 800252c:	2032      	movs	r0, #50	; 0x32
 800252e:	f004 f9e9 	bl	8006904 <HAL_Delay>
			FLASH_Erase_Sector(6, FLASH_VOLTAGE_RANGE_3);
 8002532:	2102      	movs	r1, #2
 8002534:	2006      	movs	r0, #6
 8002536:	f005 fe8b 	bl	8008250 <FLASH_Erase_Sector>
			HAL_Delay(50);
 800253a:	2032      	movs	r0, #50	; 0x32
 800253c:	f004 f9e2 	bl	8006904 <HAL_Delay>
			HAL_FLASH_Lock();
 8002540:	f005 fd36 	bl	8007fb0 <HAL_FLASH_Lock>
			HAL_Delay(50);
 8002544:	2032      	movs	r0, #50	; 0x32
 8002546:	f004 f9dd 	bl	8006904 <HAL_Delay>
			HAL_FLASH_Unlock();
 800254a:	f005 fd0f 	bl	8007f6c <HAL_FLASH_Unlock>
			HAL_Delay(50);
 800254e:	2032      	movs	r0, #50	; 0x32
 8002550:	f004 f9d8 	bl	8006904 <HAL_Delay>
			for(i=0;i<22;i++)
 8002554:	2300      	movs	r3, #0
 8002556:	66fb      	str	r3, [r7, #108]	; 0x6c
 8002558:	e01a      	b.n	8002590 <Create_Nodes+0x112c>
			{
				HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+i, Nodes[i].worth);
 800255a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800255c:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 8002560:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
 8002564:	4618      	mov	r0, r3
 8002566:	493e      	ldr	r1, [pc, #248]	; (8002660 <Create_Nodes+0x11fc>)
 8002568:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800256a:	4613      	mov	r3, r2
 800256c:	009b      	lsls	r3, r3, #2
 800256e:	4413      	add	r3, r2
 8002570:	00db      	lsls	r3, r3, #3
 8002572:	440b      	add	r3, r1
 8002574:	3304      	adds	r3, #4
 8002576:	681b      	ldr	r3, [r3, #0]
 8002578:	17da      	asrs	r2, r3, #31
 800257a:	469a      	mov	sl, r3
 800257c:	4693      	mov	fp, r2
 800257e:	4652      	mov	r2, sl
 8002580:	465b      	mov	r3, fp
 8002582:	4601      	mov	r1, r0
 8002584:	2000      	movs	r0, #0
 8002586:	f005 fc9d 	bl	8007ec4 <HAL_FLASH_Program>
			for(i=0;i<22;i++)
 800258a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800258c:	3301      	adds	r3, #1
 800258e:	66fb      	str	r3, [r7, #108]	; 0x6c
 8002590:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002592:	2b15      	cmp	r3, #21
 8002594:	dde1      	ble.n	800255a <Create_Nodes+0x10f6>
			}
			HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+22, collectedPoints);
 8002596:	4b36      	ldr	r3, [pc, #216]	; (8002670 <Create_Nodes+0x120c>)
 8002598:	781b      	ldrb	r3, [r3, #0]
 800259a:	b2db      	uxtb	r3, r3
 800259c:	2200      	movs	r2, #0
 800259e:	4698      	mov	r8, r3
 80025a0:	4691      	mov	r9, r2
 80025a2:	4642      	mov	r2, r8
 80025a4:	464b      	mov	r3, r9
 80025a6:	4933      	ldr	r1, [pc, #204]	; (8002674 <Create_Nodes+0x1210>)
 80025a8:	2000      	movs	r0, #0
 80025aa:	f005 fc8b 	bl	8007ec4 <HAL_FLASH_Program>
			HAL_Delay(50);
 80025ae:	2032      	movs	r0, #50	; 0x32
 80025b0:	f004 f9a8 	bl	8006904 <HAL_Delay>
			HAL_FLASH_Lock();
 80025b4:	f005 fcfc 	bl	8007fb0 <HAL_FLASH_Lock>
 80025b8:	e04d      	b.n	8002656 <Create_Nodes+0x11f2>
			return; //ha nem akkor használjuk a default értékeket
		}
		for(i=0;i<22;i++)
 80025ba:	2300      	movs	r3, #0
 80025bc:	66fb      	str	r3, [r7, #108]	; 0x6c
 80025be:	e013      	b.n	80025e8 <Create_Nodes+0x1184>
		{
			Nodes[i].worth=*(__IO uint8_t *) (FLASH_ADDRESS_NODEWORTH+i); //ha igen akkor töltsük be a backup mentést
 80025c0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80025c2:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 80025c6:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
 80025ca:	781b      	ldrb	r3, [r3, #0]
 80025cc:	b2db      	uxtb	r3, r3
 80025ce:	4618      	mov	r0, r3
 80025d0:	4923      	ldr	r1, [pc, #140]	; (8002660 <Create_Nodes+0x11fc>)
 80025d2:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80025d4:	4613      	mov	r3, r2
 80025d6:	009b      	lsls	r3, r3, #2
 80025d8:	4413      	add	r3, r2
 80025da:	00db      	lsls	r3, r3, #3
 80025dc:	440b      	add	r3, r1
 80025de:	3304      	adds	r3, #4
 80025e0:	6018      	str	r0, [r3, #0]
		for(i=0;i<22;i++)
 80025e2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80025e4:	3301      	adds	r3, #1
 80025e6:	66fb      	str	r3, [r7, #108]	; 0x6c
 80025e8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80025ea:	2b15      	cmp	r3, #21
 80025ec:	dde8      	ble.n	80025c0 <Create_Nodes+0x115c>
		}
		collectedPoints=*(__IO uint8_t *) (FLASH_ADDRESS_NODEWORTH+22);
 80025ee:	4b21      	ldr	r3, [pc, #132]	; (8002674 <Create_Nodes+0x1210>)
 80025f0:	781b      	ldrb	r3, [r3, #0]
 80025f2:	b2da      	uxtb	r2, r3
 80025f4:	4b1e      	ldr	r3, [pc, #120]	; (8002670 <Create_Nodes+0x120c>)
 80025f6:	701a      	strb	r2, [r3, #0]
		char str[]="Worths from FLASH backup!\n\r";
 80025f8:	4b1f      	ldr	r3, [pc, #124]	; (8002678 <Create_Nodes+0x1214>)
 80025fa:	f107 044c 	add.w	r4, r7, #76	; 0x4c
 80025fe:	461d      	mov	r5, r3
 8002600:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002602:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002604:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002608:	e884 0007 	stmia.w	r4, {r0, r1, r2}
		HAL_UART_Transmit(huart_debugg,(uint8_t*) str, strlen(str), 10);
 800260c:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8002610:	4618      	mov	r0, r3
 8002612:	f7fd fdfd 	bl	8000210 <strlen>
 8002616:	4603      	mov	r3, r0
 8002618:	b29a      	uxth	r2, r3
 800261a:	f107 014c 	add.w	r1, r7, #76	; 0x4c
 800261e:	230a      	movs	r3, #10
 8002620:	6878      	ldr	r0, [r7, #4]
 8002622:	f008 fd5c 	bl	800b0de <HAL_UART_Transmit>
 8002626:	e016      	b.n	8002656 <Create_Nodes+0x11f2>
	}
	else
	{
		char str[]="Default worths!\n\r";
 8002628:	4b14      	ldr	r3, [pc, #80]	; (800267c <Create_Nodes+0x1218>)
 800262a:	f107 0438 	add.w	r4, r7, #56	; 0x38
 800262e:	461d      	mov	r5, r3
 8002630:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002632:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002634:	682b      	ldr	r3, [r5, #0]
 8002636:	8023      	strh	r3, [r4, #0]
		HAL_UART_Transmit(huart_debugg,(uint8_t*) str, strlen(str), 10);
 8002638:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800263c:	4618      	mov	r0, r3
 800263e:	f7fd fde7 	bl	8000210 <strlen>
 8002642:	4603      	mov	r3, r0
 8002644:	b29a      	uxth	r2, r3
 8002646:	f107 0138 	add.w	r1, r7, #56	; 0x38
 800264a:	230a      	movs	r3, #10
 800264c:	6878      	ldr	r0, [r7, #4]
 800264e:	f008 fd46 	bl	800b0de <HAL_UART_Transmit>
 8002652:	e000      	b.n	8002656 <Create_Nodes+0x11f2>
	if(mode!=SKILL)return;
 8002654:	bf00      	nop
	}
}
 8002656:	3770      	adds	r7, #112	; 0x70
 8002658:	46bd      	mov	sp, r7
 800265a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800265e:	bf00      	nop
 8002660:	200002c8 	.word	0x200002c8
 8002664:	40020400 	.word	0x40020400
 8002668:	08040000 	.word	0x08040000
 800266c:	080105a4 	.word	0x080105a4
 8002670:	200002b7 	.word	0x200002b7
 8002674:	08040016 	.word	0x08040016
 8002678:	080105d0 	.word	0x080105d0
 800267c:	080105ec 	.word	0x080105ec

08002680 <Control_Task_2>:
	}
	/**************************************************************************************/
}

void Control_Task_2(UART_HandleTypeDef *huart_debugg,uint32_t tick, uint32_t period)
{
 8002680:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8002684:	b084      	sub	sp, #16
 8002686:	af00      	add	r7, sp, #0
 8002688:	60f8      	str	r0, [r7, #12]
 800268a:	60b9      	str	r1, [r7, #8]
 800268c:	607a      	str	r2, [r7, #4]
	static uint8_t i=0;
	static char str[30];

	static uint32_t control_task_2_tick = 0;

	if(mode!=SKILL || laneChange)return;
 800268e:	4ba8      	ldr	r3, [pc, #672]	; (8002930 <Control_Task_2+0x2b0>)
 8002690:	781b      	ldrb	r3, [r3, #0]
 8002692:	2b52      	cmp	r3, #82	; 0x52
 8002694:	f040 848f 	bne.w	8002fb6 <Control_Task_2+0x936>
 8002698:	4ba6      	ldr	r3, [pc, #664]	; (8002934 <Control_Task_2+0x2b4>)
 800269a:	781b      	ldrb	r3, [r3, #0]
 800269c:	2b00      	cmp	r3, #0
 800269e:	f040 848a 	bne.w	8002fb6 <Control_Task_2+0x936>

	else if(control_task_2_tick>tick)return;
 80026a2:	4ba5      	ldr	r3, [pc, #660]	; (8002938 <Control_Task_2+0x2b8>)
 80026a4:	681b      	ldr	r3, [r3, #0]
 80026a6:	68ba      	ldr	r2, [r7, #8]
 80026a8:	429a      	cmp	r2, r3
 80026aa:	f0c0 8486 	bcc.w	8002fba <Control_Task_2+0x93a>
	control_task_2_tick=tick+period;
 80026ae:	68ba      	ldr	r2, [r7, #8]
 80026b0:	687b      	ldr	r3, [r7, #4]
 80026b2:	4413      	add	r3, r2
 80026b4:	4aa0      	ldr	r2, [pc, #640]	; (8002938 <Control_Task_2+0x2b8>)
 80026b6:	6013      	str	r3, [r2, #0]

	//ha kapu nélküli nodeba tartunk éppen, akkor időzítéssel "detektáljuk" a nodot
/**/
	if(N(pos[MY]).type>2 && control_task_2_state==2)
 80026b8:	4ba0      	ldr	r3, [pc, #640]	; (800293c <Control_Task_2+0x2bc>)
 80026ba:	781b      	ldrb	r3, [r3, #0]
 80026bc:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80026c0:	499f      	ldr	r1, [pc, #636]	; (8002940 <Control_Task_2+0x2c0>)
 80026c2:	4613      	mov	r3, r2
 80026c4:	009b      	lsls	r3, r3, #2
 80026c6:	4413      	add	r3, r2
 80026c8:	00db      	lsls	r3, r3, #3
 80026ca:	440b      	add	r3, r1
 80026cc:	3308      	adds	r3, #8
 80026ce:	681b      	ldr	r3, [r3, #0]
 80026d0:	2b02      	cmp	r3, #2
 80026d2:	d950      	bls.n	8002776 <Control_Task_2+0xf6>
 80026d4:	4b9b      	ldr	r3, [pc, #620]	; (8002944 <Control_Task_2+0x2c4>)
 80026d6:	781b      	ldrb	r3, [r3, #0]
 80026d8:	2b02      	cmp	r3, #2
 80026da:	d14c      	bne.n	8002776 <Control_Task_2+0xf6>
	{
		s += (float)(tick-tick_prev)*fabs(v)/10000;
 80026dc:	4b9a      	ldr	r3, [pc, #616]	; (8002948 <Control_Task_2+0x2c8>)
 80026de:	681b      	ldr	r3, [r3, #0]
 80026e0:	4618      	mov	r0, r3
 80026e2:	f7fd ff51 	bl	8000588 <__aeabi_f2d>
 80026e6:	4604      	mov	r4, r0
 80026e8:	460d      	mov	r5, r1
 80026ea:	4b98      	ldr	r3, [pc, #608]	; (800294c <Control_Task_2+0x2cc>)
 80026ec:	681b      	ldr	r3, [r3, #0]
 80026ee:	68ba      	ldr	r2, [r7, #8]
 80026f0:	1ad3      	subs	r3, r2, r3
 80026f2:	ee07 3a90 	vmov	s15, r3
 80026f6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80026fa:	ee17 0a90 	vmov	r0, s15
 80026fe:	f7fd ff43 	bl	8000588 <__aeabi_f2d>
 8002702:	4680      	mov	r8, r0
 8002704:	4689      	mov	r9, r1
 8002706:	4b92      	ldr	r3, [pc, #584]	; (8002950 <Control_Task_2+0x2d0>)
 8002708:	edd3 7a00 	vldr	s15, [r3]
 800270c:	eef0 7ae7 	vabs.f32	s15, s15
 8002710:	ee17 0a90 	vmov	r0, s15
 8002714:	f7fd ff38 	bl	8000588 <__aeabi_f2d>
 8002718:	4602      	mov	r2, r0
 800271a:	460b      	mov	r3, r1
 800271c:	4640      	mov	r0, r8
 800271e:	4649      	mov	r1, r9
 8002720:	f7fd ff8a 	bl	8000638 <__aeabi_dmul>
 8002724:	4602      	mov	r2, r0
 8002726:	460b      	mov	r3, r1
 8002728:	4610      	mov	r0, r2
 800272a:	4619      	mov	r1, r3
 800272c:	a37e      	add	r3, pc, #504	; (adr r3, 8002928 <Control_Task_2+0x2a8>)
 800272e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002732:	f7fe f8ab 	bl	800088c <__aeabi_ddiv>
 8002736:	4602      	mov	r2, r0
 8002738:	460b      	mov	r3, r1
 800273a:	4620      	mov	r0, r4
 800273c:	4629      	mov	r1, r5
 800273e:	f7fd fdc5 	bl	80002cc <__adddf3>
 8002742:	4602      	mov	r2, r0
 8002744:	460b      	mov	r3, r1
 8002746:	4610      	mov	r0, r2
 8002748:	4619      	mov	r1, r3
 800274a:	f7fe fa4d 	bl	8000be8 <__aeabi_d2f>
 800274e:	4603      	mov	r3, r0
 8002750:	4a7d      	ldr	r2, [pc, #500]	; (8002948 <Control_Task_2+0x2c8>)
 8002752:	6013      	str	r3, [r2, #0]
		if(s>sMAX)nodeDetected=1;
 8002754:	4b7f      	ldr	r3, [pc, #508]	; (8002954 <Control_Task_2+0x2d4>)
 8002756:	681b      	ldr	r3, [r3, #0]
 8002758:	ee07 3a90 	vmov	s15, r3
 800275c:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8002760:	4b79      	ldr	r3, [pc, #484]	; (8002948 <Control_Task_2+0x2c8>)
 8002762:	edd3 7a00 	vldr	s15, [r3]
 8002766:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800276a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800276e:	d502      	bpl.n	8002776 <Control_Task_2+0xf6>
 8002770:	4b79      	ldr	r3, [pc, #484]	; (8002958 <Control_Task_2+0x2d8>)
 8002772:	2201      	movs	r2, #1
 8002774:	701a      	strb	r2, [r3, #0]
	}
	tick=tick_prev;
 8002776:	4b75      	ldr	r3, [pc, #468]	; (800294c <Control_Task_2+0x2cc>)
 8002778:	681b      	ldr	r3, [r3, #0]
 800277a:	60bb      	str	r3, [r7, #8]

	if(thunderboardFlag==1)		//uj adat erkezik (minden 200ms)
 800277c:	4b77      	ldr	r3, [pc, #476]	; (800295c <Control_Task_2+0x2dc>)
 800277e:	781b      	ldrb	r3, [r3, #0]
 8002780:	b2db      	uxtb	r3, r3
 8002782:	2b01      	cmp	r3, #1
 8002784:	d157      	bne.n	8002836 <Control_Task_2+0x1b6>
	{

		piratePos_prev[0]=piratePos[0];//előző kalozpozíció frissítése P
 8002786:	4b76      	ldr	r3, [pc, #472]	; (8002960 <Control_Task_2+0x2e0>)
 8002788:	781a      	ldrb	r2, [r3, #0]
 800278a:	4b76      	ldr	r3, [pc, #472]	; (8002964 <Control_Task_2+0x2e4>)
 800278c:	701a      	strb	r2, [r3, #0]
		piratePos_prev[1]=piratePos[1];			//M
 800278e:	4b74      	ldr	r3, [pc, #464]	; (8002960 <Control_Task_2+0x2e0>)
 8002790:	785a      	ldrb	r2, [r3, #1]
 8002792:	4b74      	ldr	r3, [pc, #464]	; (8002964 <Control_Task_2+0x2e4>)
 8002794:	705a      	strb	r2, [r3, #1]
		piratePos_prev[2]=piratePos[2];			//K
 8002796:	4b72      	ldr	r3, [pc, #456]	; (8002960 <Control_Task_2+0x2e0>)
 8002798:	789a      	ldrb	r2, [r3, #2]
 800279a:	4b72      	ldr	r3, [pc, #456]	; (8002964 <Control_Task_2+0x2e4>)
 800279c:	709a      	strb	r2, [r3, #2]
		piratePos_prev[3]=piratePos[3];			//65
 800279e:	4b70      	ldr	r3, [pc, #448]	; (8002960 <Control_Task_2+0x2e0>)
 80027a0:	78da      	ldrb	r2, [r3, #3]
 80027a2:	4b70      	ldr	r3, [pc, #448]	; (8002964 <Control_Task_2+0x2e4>)
 80027a4:	70da      	strb	r2, [r3, #3]

		if(piratePos_prev[1]!=piratePos[1] && !laneChange && piratePos[0] !='R')//a kalóz átment egy Node-on
 80027a6:	4b6f      	ldr	r3, [pc, #444]	; (8002964 <Control_Task_2+0x2e4>)
 80027a8:	785a      	ldrb	r2, [r3, #1]
 80027aa:	4b6d      	ldr	r3, [pc, #436]	; (8002960 <Control_Task_2+0x2e0>)
 80027ac:	785b      	ldrb	r3, [r3, #1]
 80027ae:	429a      	cmp	r2, r3
 80027b0:	d03e      	beq.n	8002830 <Control_Task_2+0x1b0>
 80027b2:	4b60      	ldr	r3, [pc, #384]	; (8002934 <Control_Task_2+0x2b4>)
 80027b4:	781b      	ldrb	r3, [r3, #0]
 80027b6:	2b00      	cmp	r3, #0
 80027b8:	d13a      	bne.n	8002830 <Control_Task_2+0x1b0>
 80027ba:	4b69      	ldr	r3, [pc, #420]	; (8002960 <Control_Task_2+0x2e0>)
 80027bc:	781b      	ldrb	r3, [r3, #0]
 80027be:	2b52      	cmp	r3, #82	; 0x52
 80027c0:	d036      	beq.n	8002830 <Control_Task_2+0x1b0>
		{
			if(N(piratePos[0]).worth > 0)
 80027c2:	4b67      	ldr	r3, [pc, #412]	; (8002960 <Control_Task_2+0x2e0>)
 80027c4:	781b      	ldrb	r3, [r3, #0]
 80027c6:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80027ca:	495d      	ldr	r1, [pc, #372]	; (8002940 <Control_Task_2+0x2c0>)
 80027cc:	4613      	mov	r3, r2
 80027ce:	009b      	lsls	r3, r3, #2
 80027d0:	4413      	add	r3, r2
 80027d2:	00db      	lsls	r3, r3, #3
 80027d4:	440b      	add	r3, r1
 80027d6:	3304      	adds	r3, #4
 80027d8:	681b      	ldr	r3, [r3, #0]
 80027da:	2b00      	cmp	r3, #0
 80027dc:	dd1b      	ble.n	8002816 <Control_Task_2+0x196>
			{
				N(piratePos[0]).worth--; //az a node már kevesebbet ér
 80027de:	4b60      	ldr	r3, [pc, #384]	; (8002960 <Control_Task_2+0x2e0>)
 80027e0:	781b      	ldrb	r3, [r3, #0]
 80027e2:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80027e6:	4956      	ldr	r1, [pc, #344]	; (8002940 <Control_Task_2+0x2c0>)
 80027e8:	4613      	mov	r3, r2
 80027ea:	009b      	lsls	r3, r3, #2
 80027ec:	4413      	add	r3, r2
 80027ee:	00db      	lsls	r3, r3, #3
 80027f0:	440b      	add	r3, r1
 80027f2:	3304      	adds	r3, #4
 80027f4:	681b      	ldr	r3, [r3, #0]
 80027f6:	1e59      	subs	r1, r3, #1
 80027f8:	4851      	ldr	r0, [pc, #324]	; (8002940 <Control_Task_2+0x2c0>)
 80027fa:	4613      	mov	r3, r2
 80027fc:	009b      	lsls	r3, r3, #2
 80027fe:	4413      	add	r3, r2
 8002800:	00db      	lsls	r3, r3, #3
 8002802:	4403      	add	r3, r0
 8002804:	3304      	adds	r3, #4
 8002806:	6019      	str	r1, [r3, #0]
				collectedPoints ++;
 8002808:	4b57      	ldr	r3, [pc, #348]	; (8002968 <Control_Task_2+0x2e8>)
 800280a:	781b      	ldrb	r3, [r3, #0]
 800280c:	3301      	adds	r3, #1
 800280e:	b2da      	uxtb	r2, r3
 8002810:	4b55      	ldr	r3, [pc, #340]	; (8002968 <Control_Task_2+0x2e8>)
 8002812:	701a      	strb	r2, [r3, #0]
 8002814:	e00c      	b.n	8002830 <Control_Task_2+0x1b0>
			}
			else N(piratePos[0]).worth=0;
 8002816:	4b52      	ldr	r3, [pc, #328]	; (8002960 <Control_Task_2+0x2e0>)
 8002818:	781b      	ldrb	r3, [r3, #0]
 800281a:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800281e:	4948      	ldr	r1, [pc, #288]	; (8002940 <Control_Task_2+0x2c0>)
 8002820:	4613      	mov	r3, r2
 8002822:	009b      	lsls	r3, r3, #2
 8002824:	4413      	add	r3, r2
 8002826:	00db      	lsls	r3, r3, #3
 8002828:	440b      	add	r3, r1
 800282a:	3304      	adds	r3, #4
 800282c:	2200      	movs	r2, #0
 800282e:	601a      	str	r2, [r3, #0]
		}
		thunderboardFlag=0;
 8002830:	4b4a      	ldr	r3, [pc, #296]	; (800295c <Control_Task_2+0x2dc>)
 8002832:	2200      	movs	r2, #0
 8002834:	701a      	strb	r2, [r3, #0]
	}
	if(piratePos_prev[0]==0)return; //ha nem kaptunk még adatot a TB-tol return
 8002836:	4b4b      	ldr	r3, [pc, #300]	; (8002964 <Control_Task_2+0x2e4>)
 8002838:	781b      	ldrb	r3, [r3, #0]
 800283a:	2b00      	cmp	r3, #0
 800283c:	f000 83bf 	beq.w	8002fbe <Control_Task_2+0x93e>


	if(control_task_2_state==0)
 8002840:	4b40      	ldr	r3, [pc, #256]	; (8002944 <Control_Task_2+0x2c4>)
 8002842:	781b      	ldrb	r3, [r3, #0]
 8002844:	2b00      	cmp	r3, #0
 8002846:	f040 81a6 	bne.w	8002b96 <Control_Task_2+0x516>
	{

		if(nodeDetected)
 800284a:	4b43      	ldr	r3, [pc, #268]	; (8002958 <Control_Task_2+0x2d8>)
 800284c:	781b      	ldrb	r3, [r3, #0]
 800284e:	2b00      	cmp	r3, #0
 8002850:	f000 80d7 	beq.w	8002a02 <Control_Task_2+0x382>
		{
			LED_B_TOGGLE;
 8002854:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8002858:	4844      	ldr	r0, [pc, #272]	; (800296c <Control_Task_2+0x2ec>)
 800285a:	f005 ff06 	bl	800866a <HAL_GPIO_TogglePin>
			//pontok nyugtázása
			collectedPoints +=N(pos[MY]).worth;//sávváltás módik vizsgáljuk az össezgyűjtött kapuk számát
 800285e:	4b37      	ldr	r3, [pc, #220]	; (800293c <Control_Task_2+0x2bc>)
 8002860:	781b      	ldrb	r3, [r3, #0]
 8002862:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002866:	4936      	ldr	r1, [pc, #216]	; (8002940 <Control_Task_2+0x2c0>)
 8002868:	4613      	mov	r3, r2
 800286a:	009b      	lsls	r3, r3, #2
 800286c:	4413      	add	r3, r2
 800286e:	00db      	lsls	r3, r3, #3
 8002870:	440b      	add	r3, r1
 8002872:	3304      	adds	r3, #4
 8002874:	681b      	ldr	r3, [r3, #0]
 8002876:	b2da      	uxtb	r2, r3
 8002878:	4b3b      	ldr	r3, [pc, #236]	; (8002968 <Control_Task_2+0x2e8>)
 800287a:	781b      	ldrb	r3, [r3, #0]
 800287c:	4413      	add	r3, r2
 800287e:	b2da      	uxtb	r2, r3
 8002880:	4b39      	ldr	r3, [pc, #228]	; (8002968 <Control_Task_2+0x2e8>)
 8002882:	701a      	strb	r2, [r3, #0]
			N(pos[MY]).worth=0;//ez a kapu már nem ér pontot
 8002884:	4b2d      	ldr	r3, [pc, #180]	; (800293c <Control_Task_2+0x2bc>)
 8002886:	781b      	ldrb	r3, [r3, #0]
 8002888:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800288c:	492c      	ldr	r1, [pc, #176]	; (8002940 <Control_Task_2+0x2c0>)
 800288e:	4613      	mov	r3, r2
 8002890:	009b      	lsls	r3, r3, #2
 8002892:	4413      	add	r3, r2
 8002894:	00db      	lsls	r3, r3, #3
 8002896:	440b      	add	r3, r1
 8002898:	3304      	adds	r3, #4
 800289a:	2200      	movs	r2, #0
 800289c:	601a      	str	r2, [r3, #0]
			if (route[route_index+2]==0)//még nincs kész az eléállás
 800289e:	4b34      	ldr	r3, [pc, #208]	; (8002970 <Control_Task_2+0x2f0>)
 80028a0:	781b      	ldrb	r3, [r3, #0]
 80028a2:	3302      	adds	r3, #2
 80028a4:	4a33      	ldr	r2, [pc, #204]	; (8002974 <Control_Task_2+0x2f4>)
 80028a6:	5cd3      	ldrb	r3, [r2, r3]
 80028a8:	2b00      	cmp	r3, #0
 80028aa:	d10b      	bne.n	80028c4 <Control_Task_2+0x244>
			{
				//WAITING
				v_control=STOP;
 80028ac:	4b32      	ldr	r3, [pc, #200]	; (8002978 <Control_Task_2+0x2f8>)
 80028ae:	2200      	movs	r2, #0
 80028b0:	701a      	strb	r2, [r3, #0]
				control_task_2_state=1;
 80028b2:	4b24      	ldr	r3, [pc, #144]	; (8002944 <Control_Task_2+0x2c4>)
 80028b4:	2201      	movs	r2, #1
 80028b6:	701a      	strb	r2, [r3, #0]
				LED_Y(0);
 80028b8:	2201      	movs	r2, #1
 80028ba:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80028be:	482b      	ldr	r0, [pc, #172]	; (800296c <Control_Task_2+0x2ec>)
 80028c0:	f005 feba 	bl	8008638 <HAL_GPIO_WritePin>
			}

			pos[MY]=pos[NEXT]; //route 2 eetén a végén még hulyeség kerül ide
 80028c4:	4b1d      	ldr	r3, [pc, #116]	; (800293c <Control_Task_2+0x2bc>)
 80028c6:	785a      	ldrb	r2, [r3, #1]
 80028c8:	4b1c      	ldr	r3, [pc, #112]	; (800293c <Control_Task_2+0x2bc>)
 80028ca:	701a      	strb	r2, [r3, #0]
			pos[NEXT]=route[route_index+1];
 80028cc:	4b28      	ldr	r3, [pc, #160]	; (8002970 <Control_Task_2+0x2f0>)
 80028ce:	781b      	ldrb	r3, [r3, #0]
 80028d0:	3301      	adds	r3, #1
 80028d2:	4a28      	ldr	r2, [pc, #160]	; (8002974 <Control_Task_2+0x2f4>)
 80028d4:	5cd2      	ldrb	r2, [r2, r3]
 80028d6:	4b19      	ldr	r3, [pc, #100]	; (800293c <Control_Task_2+0x2bc>)
 80028d8:	705a      	strb	r2, [r3, #1]
			nodeDetected=0;
 80028da:	4b1f      	ldr	r3, [pc, #124]	; (8002958 <Control_Task_2+0x2d8>)
 80028dc:	2200      	movs	r2, #0
 80028de:	701a      	strb	r2, [r3, #0]
			route_index++;
 80028e0:	4b23      	ldr	r3, [pc, #140]	; (8002970 <Control_Task_2+0x2f0>)
 80028e2:	781b      	ldrb	r3, [r3, #0]
 80028e4:	3301      	adds	r3, #1
 80028e6:	b2da      	uxtb	r2, r3
 80028e8:	4b21      	ldr	r3, [pc, #132]	; (8002970 <Control_Task_2+0x2f0>)
 80028ea:	701a      	strb	r2, [r3, #0]

			for(i=0; i<6;i++)
 80028ec:	4b23      	ldr	r3, [pc, #140]	; (800297c <Control_Task_2+0x2fc>)
 80028ee:	2200      	movs	r2, #0
 80028f0:	701a      	strb	r2, [r3, #0]
 80028f2:	e04d      	b.n	8002990 <Control_Task_2+0x310>
			{
				if (N(pos[MY]).neighbours[i]==pos[NEXT])//O=O-2
 80028f4:	4b11      	ldr	r3, [pc, #68]	; (800293c <Control_Task_2+0x2bc>)
 80028f6:	781b      	ldrb	r3, [r3, #0]
 80028f8:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80028fc:	4b1f      	ldr	r3, [pc, #124]	; (800297c <Control_Task_2+0x2fc>)
 80028fe:	781b      	ldrb	r3, [r3, #0]
 8002900:	4618      	mov	r0, r3
 8002902:	490f      	ldr	r1, [pc, #60]	; (8002940 <Control_Task_2+0x2c0>)
 8002904:	4613      	mov	r3, r2
 8002906:	009b      	lsls	r3, r3, #2
 8002908:	4413      	add	r3, r2
 800290a:	00db      	lsls	r3, r3, #3
 800290c:	440b      	add	r3, r1
 800290e:	4403      	add	r3, r0
 8002910:	330c      	adds	r3, #12
 8002912:	781a      	ldrb	r2, [r3, #0]
 8002914:	4b09      	ldr	r3, [pc, #36]	; (800293c <Control_Task_2+0x2bc>)
 8002916:	785b      	ldrb	r3, [r3, #1]
 8002918:	429a      	cmp	r2, r3
 800291a:	d133      	bne.n	8002984 <Control_Task_2+0x304>
				{
					bestNb[NEXT]=i;
 800291c:	4b17      	ldr	r3, [pc, #92]	; (800297c <Control_Task_2+0x2fc>)
 800291e:	781a      	ldrb	r2, [r3, #0]
 8002920:	4b17      	ldr	r3, [pc, #92]	; (8002980 <Control_Task_2+0x300>)
 8002922:	705a      	strb	r2, [r3, #1]
					break;// ha megvan akkor breakkel kilépünk a for ciklusból azonnal
 8002924:	e038      	b.n	8002998 <Control_Task_2+0x318>
 8002926:	bf00      	nop
 8002928:	00000000 	.word	0x00000000
 800292c:	40c38800 	.word	0x40c38800
 8002930:	200002a6 	.word	0x200002a6
 8002934:	200002b8 	.word	0x200002b8
 8002938:	20000638 	.word	0x20000638
 800293c:	20000000 	.word	0x20000000
 8002940:	200002c8 	.word	0x200002c8
 8002944:	2000063c 	.word	0x2000063c
 8002948:	20000640 	.word	0x20000640
 800294c:	20000644 	.word	0x20000644
 8002950:	20000684 	.word	0x20000684
 8002954:	20000004 	.word	0x20000004
 8002958:	200002b5 	.word	0x200002b5
 800295c:	200002ba 	.word	0x200002ba
 8002960:	200002c4 	.word	0x200002c4
 8002964:	20000648 	.word	0x20000648
 8002968:	200002b7 	.word	0x200002b7
 800296c:	40020400 	.word	0x40020400
 8002970:	2000064c 	.word	0x2000064c
 8002974:	20000650 	.word	0x20000650
 8002978:	200002b9 	.word	0x200002b9
 800297c:	20000656 	.word	0x20000656
 8002980:	20000658 	.word	0x20000658
			for(i=0; i<6;i++)
 8002984:	4b98      	ldr	r3, [pc, #608]	; (8002be8 <Control_Task_2+0x568>)
 8002986:	781b      	ldrb	r3, [r3, #0]
 8002988:	3301      	adds	r3, #1
 800298a:	b2da      	uxtb	r2, r3
 800298c:	4b96      	ldr	r3, [pc, #600]	; (8002be8 <Control_Task_2+0x568>)
 800298e:	701a      	strb	r2, [r3, #0]
 8002990:	4b95      	ldr	r3, [pc, #596]	; (8002be8 <Control_Task_2+0x568>)
 8002992:	781b      	ldrb	r3, [r3, #0]
 8002994:	2b05      	cmp	r3, #5
 8002996:	d9ad      	bls.n	80028f4 <Control_Task_2+0x274>
				}
			}
			if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)path=LEFT;
 8002998:	4b94      	ldr	r3, [pc, #592]	; (8002bec <Control_Task_2+0x56c>)
 800299a:	785b      	ldrb	r3, [r3, #1]
 800299c:	2b00      	cmp	r3, #0
 800299e:	d003      	beq.n	80029a8 <Control_Task_2+0x328>
 80029a0:	4b92      	ldr	r3, [pc, #584]	; (8002bec <Control_Task_2+0x56c>)
 80029a2:	785b      	ldrb	r3, [r3, #1]
 80029a4:	2b03      	cmp	r3, #3
 80029a6:	d103      	bne.n	80029b0 <Control_Task_2+0x330>
 80029a8:	4b91      	ldr	r3, [pc, #580]	; (8002bf0 <Control_Task_2+0x570>)
 80029aa:	2200      	movs	r2, #0
 80029ac:	701a      	strb	r2, [r3, #0]
 80029ae:	e016      	b.n	80029de <Control_Task_2+0x35e>
			else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)path=MIDDLE;
 80029b0:	4b8e      	ldr	r3, [pc, #568]	; (8002bec <Control_Task_2+0x56c>)
 80029b2:	785b      	ldrb	r3, [r3, #1]
 80029b4:	2b01      	cmp	r3, #1
 80029b6:	d003      	beq.n	80029c0 <Control_Task_2+0x340>
 80029b8:	4b8c      	ldr	r3, [pc, #560]	; (8002bec <Control_Task_2+0x56c>)
 80029ba:	785b      	ldrb	r3, [r3, #1]
 80029bc:	2b04      	cmp	r3, #4
 80029be:	d103      	bne.n	80029c8 <Control_Task_2+0x348>
 80029c0:	4b8b      	ldr	r3, [pc, #556]	; (8002bf0 <Control_Task_2+0x570>)
 80029c2:	2201      	movs	r2, #1
 80029c4:	701a      	strb	r2, [r3, #0]
 80029c6:	e00a      	b.n	80029de <Control_Task_2+0x35e>
			else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)path=RIGHT;
 80029c8:	4b88      	ldr	r3, [pc, #544]	; (8002bec <Control_Task_2+0x56c>)
 80029ca:	785b      	ldrb	r3, [r3, #1]
 80029cc:	2b02      	cmp	r3, #2
 80029ce:	d003      	beq.n	80029d8 <Control_Task_2+0x358>
 80029d0:	4b86      	ldr	r3, [pc, #536]	; (8002bec <Control_Task_2+0x56c>)
 80029d2:	785b      	ldrb	r3, [r3, #1]
 80029d4:	2b05      	cmp	r3, #5
 80029d6:	d102      	bne.n	80029de <Control_Task_2+0x35e>
 80029d8:	4b85      	ldr	r3, [pc, #532]	; (8002bf0 <Control_Task_2+0x570>)
 80029da:	2202      	movs	r2, #2
 80029dc:	701a      	strb	r2, [r3, #0]

#ifdef ADIBUGG
			sprintf(str,"dd\n\r");
 80029de:	4985      	ldr	r1, [pc, #532]	; (8002bf4 <Control_Task_2+0x574>)
 80029e0:	4885      	ldr	r0, [pc, #532]	; (8002bf8 <Control_Task_2+0x578>)
 80029e2:	f00a f8e5 	bl	800cbb0 <siprintf>
			str[0]='9';
 80029e6:	4b84      	ldr	r3, [pc, #528]	; (8002bf8 <Control_Task_2+0x578>)
 80029e8:	2239      	movs	r2, #57	; 0x39
 80029ea:	701a      	strb	r2, [r3, #0]
			str[1]=pos[MY];//honnan
 80029ec:	4b83      	ldr	r3, [pc, #524]	; (8002bfc <Control_Task_2+0x57c>)
 80029ee:	781a      	ldrb	r2, [r3, #0]
 80029f0:	4b81      	ldr	r3, [pc, #516]	; (8002bf8 <Control_Task_2+0x578>)
 80029f2:	705a      	strb	r2, [r3, #1]
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 4, 3);
 80029f4:	2303      	movs	r3, #3
 80029f6:	2204      	movs	r2, #4
 80029f8:	497f      	ldr	r1, [pc, #508]	; (8002bf8 <Control_Task_2+0x578>)
 80029fa:	68f8      	ldr	r0, [r7, #12]
 80029fc:	f008 fb6f 	bl	800b0de <HAL_UART_Transmit>
 8002a00:	e1ce      	b.n	8002da0 <Control_Task_2+0x720>
#endif
		}
		else if(!stage)
 8002a02:	4b7f      	ldr	r3, [pc, #508]	; (8002c00 <Control_Task_2+0x580>)
 8002a04:	781b      	ldrb	r3, [r3, #0]
 8002a06:	2b00      	cmp	r3, #0
 8002a08:	f040 81ca 	bne.w	8002da0 <Control_Task_2+0x720>
		{
			LED_Y(1);
 8002a0c:	2200      	movs	r2, #0
 8002a0e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8002a12:	487c      	ldr	r0, [pc, #496]	; (8002c04 <Control_Task_2+0x584>)
 8002a14:	f005 fe10 	bl	8008638 <HAL_GPIO_WritePin>
			switch(piratePos_prev[2])
 8002a18:	4b7b      	ldr	r3, [pc, #492]	; (8002c08 <Control_Task_2+0x588>)
 8002a1a:	789b      	ldrb	r3, [r3, #2]
 8002a1c:	3b48      	subs	r3, #72	; 0x48
 8002a1e:	2b09      	cmp	r3, #9
 8002a20:	d842      	bhi.n	8002aa8 <Control_Task_2+0x428>
 8002a22:	a201      	add	r2, pc, #4	; (adr r2, 8002a28 <Control_Task_2+0x3a8>)
 8002a24:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002a28:	08002a7d 	.word	0x08002a7d
 8002a2c:	08002aa9 	.word	0x08002aa9
 8002a30:	08002aa9 	.word	0x08002aa9
 8002a34:	08002a67 	.word	0x08002a67
 8002a38:	08002aa9 	.word	0x08002aa9
 8002a3c:	08002aa9 	.word	0x08002aa9
 8002a40:	08002a93 	.word	0x08002a93
 8002a44:	08002aa9 	.word	0x08002aa9
 8002a48:	08002aa9 	.word	0x08002aa9
 8002a4c:	08002a51 	.word	0x08002a51
			{
			case 'Q':
				memcpy(route, route_1,6);
 8002a50:	4b6e      	ldr	r3, [pc, #440]	; (8002c0c <Control_Task_2+0x58c>)
 8002a52:	4a6f      	ldr	r2, [pc, #444]	; (8002c10 <Control_Task_2+0x590>)
 8002a54:	e892 0003 	ldmia.w	r2, {r0, r1}
 8002a58:	6018      	str	r0, [r3, #0]
 8002a5a:	3304      	adds	r3, #4
 8002a5c:	8019      	strh	r1, [r3, #0]
				selected_route=1;
 8002a5e:	4b6d      	ldr	r3, [pc, #436]	; (8002c14 <Control_Task_2+0x594>)
 8002a60:	2201      	movs	r2, #1
 8002a62:	701a      	strb	r2, [r3, #0]
				break;
 8002a64:	e020      	b.n	8002aa8 <Control_Task_2+0x428>
			case 'K':
				memcpy(route, route_2,6);
 8002a66:	4b69      	ldr	r3, [pc, #420]	; (8002c0c <Control_Task_2+0x58c>)
 8002a68:	4a6b      	ldr	r2, [pc, #428]	; (8002c18 <Control_Task_2+0x598>)
 8002a6a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8002a6e:	6018      	str	r0, [r3, #0]
 8002a70:	3304      	adds	r3, #4
 8002a72:	8019      	strh	r1, [r3, #0]
				selected_route=2;
 8002a74:	4b67      	ldr	r3, [pc, #412]	; (8002c14 <Control_Task_2+0x594>)
 8002a76:	2202      	movs	r2, #2
 8002a78:	701a      	strb	r2, [r3, #0]
				break;
 8002a7a:	e015      	b.n	8002aa8 <Control_Task_2+0x428>
			case 'H':
				memcpy(route, route_3,6);
 8002a7c:	4b63      	ldr	r3, [pc, #396]	; (8002c0c <Control_Task_2+0x58c>)
 8002a7e:	4a67      	ldr	r2, [pc, #412]	; (8002c1c <Control_Task_2+0x59c>)
 8002a80:	e892 0003 	ldmia.w	r2, {r0, r1}
 8002a84:	6018      	str	r0, [r3, #0]
 8002a86:	3304      	adds	r3, #4
 8002a88:	8019      	strh	r1, [r3, #0]
				selected_route=3;
 8002a8a:	4b62      	ldr	r3, [pc, #392]	; (8002c14 <Control_Task_2+0x594>)
 8002a8c:	2203      	movs	r2, #3
 8002a8e:	701a      	strb	r2, [r3, #0]
				break;
 8002a90:	e00a      	b.n	8002aa8 <Control_Task_2+0x428>
			case 'N':
				memcpy(route, route_4,6);
 8002a92:	4b5e      	ldr	r3, [pc, #376]	; (8002c0c <Control_Task_2+0x58c>)
 8002a94:	4a62      	ldr	r2, [pc, #392]	; (8002c20 <Control_Task_2+0x5a0>)
 8002a96:	e892 0003 	ldmia.w	r2, {r0, r1}
 8002a9a:	6018      	str	r0, [r3, #0]
 8002a9c:	3304      	adds	r3, #4
 8002a9e:	8019      	strh	r1, [r3, #0]
				selected_route=4;
 8002aa0:	4b5c      	ldr	r3, [pc, #368]	; (8002c14 <Control_Task_2+0x594>)
 8002aa2:	2204      	movs	r2, #4
 8002aa4:	701a      	strb	r2, [r3, #0]
				break;
 8002aa6:	bf00      	nop
			}

			pos[MY]=route[route_index];
 8002aa8:	4b5e      	ldr	r3, [pc, #376]	; (8002c24 <Control_Task_2+0x5a4>)
 8002aaa:	781b      	ldrb	r3, [r3, #0]
 8002aac:	461a      	mov	r2, r3
 8002aae:	4b57      	ldr	r3, [pc, #348]	; (8002c0c <Control_Task_2+0x58c>)
 8002ab0:	5c9a      	ldrb	r2, [r3, r2]
 8002ab2:	4b52      	ldr	r3, [pc, #328]	; (8002bfc <Control_Task_2+0x57c>)
 8002ab4:	701a      	strb	r2, [r3, #0]
			pos[NEXT]=route[route_index+1];
 8002ab6:	4b5b      	ldr	r3, [pc, #364]	; (8002c24 <Control_Task_2+0x5a4>)
 8002ab8:	781b      	ldrb	r3, [r3, #0]
 8002aba:	3301      	adds	r3, #1
 8002abc:	4a53      	ldr	r2, [pc, #332]	; (8002c0c <Control_Task_2+0x58c>)
 8002abe:	5cd2      	ldrb	r2, [r2, r3]
 8002ac0:	4b4e      	ldr	r3, [pc, #312]	; (8002bfc <Control_Task_2+0x57c>)
 8002ac2:	705a      	strb	r2, [r3, #1]
			route_index++;
 8002ac4:	4b57      	ldr	r3, [pc, #348]	; (8002c24 <Control_Task_2+0x5a4>)
 8002ac6:	781b      	ldrb	r3, [r3, #0]
 8002ac8:	3301      	adds	r3, #1
 8002aca:	b2da      	uxtb	r2, r3
 8002acc:	4b55      	ldr	r3, [pc, #340]	; (8002c24 <Control_Task_2+0x5a4>)
 8002ace:	701a      	strb	r2, [r3, #0]
			////////////////////////////////////////////////////////////
			for(i=0; i<6;i++)
 8002ad0:	4b45      	ldr	r3, [pc, #276]	; (8002be8 <Control_Task_2+0x568>)
 8002ad2:	2200      	movs	r2, #0
 8002ad4:	701a      	strb	r2, [r3, #0]
 8002ad6:	e01e      	b.n	8002b16 <Control_Task_2+0x496>
			{
				if (N(pos[MY]).neighbours[i]==pos[NEXT])//O=O-2
 8002ad8:	4b48      	ldr	r3, [pc, #288]	; (8002bfc <Control_Task_2+0x57c>)
 8002ada:	781b      	ldrb	r3, [r3, #0]
 8002adc:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002ae0:	4b41      	ldr	r3, [pc, #260]	; (8002be8 <Control_Task_2+0x568>)
 8002ae2:	781b      	ldrb	r3, [r3, #0]
 8002ae4:	4618      	mov	r0, r3
 8002ae6:	4950      	ldr	r1, [pc, #320]	; (8002c28 <Control_Task_2+0x5a8>)
 8002ae8:	4613      	mov	r3, r2
 8002aea:	009b      	lsls	r3, r3, #2
 8002aec:	4413      	add	r3, r2
 8002aee:	00db      	lsls	r3, r3, #3
 8002af0:	440b      	add	r3, r1
 8002af2:	4403      	add	r3, r0
 8002af4:	330c      	adds	r3, #12
 8002af6:	781a      	ldrb	r2, [r3, #0]
 8002af8:	4b40      	ldr	r3, [pc, #256]	; (8002bfc <Control_Task_2+0x57c>)
 8002afa:	785b      	ldrb	r3, [r3, #1]
 8002afc:	429a      	cmp	r2, r3
 8002afe:	d104      	bne.n	8002b0a <Control_Task_2+0x48a>
				{
					bestNb[NEXT]=i;
 8002b00:	4b39      	ldr	r3, [pc, #228]	; (8002be8 <Control_Task_2+0x568>)
 8002b02:	781a      	ldrb	r2, [r3, #0]
 8002b04:	4b39      	ldr	r3, [pc, #228]	; (8002bec <Control_Task_2+0x56c>)
 8002b06:	705a      	strb	r2, [r3, #1]
					break;// ha megvan akkor breakkel kilépünk a for ciklusból azonnal
 8002b08:	e009      	b.n	8002b1e <Control_Task_2+0x49e>
			for(i=0; i<6;i++)
 8002b0a:	4b37      	ldr	r3, [pc, #220]	; (8002be8 <Control_Task_2+0x568>)
 8002b0c:	781b      	ldrb	r3, [r3, #0]
 8002b0e:	3301      	adds	r3, #1
 8002b10:	b2da      	uxtb	r2, r3
 8002b12:	4b35      	ldr	r3, [pc, #212]	; (8002be8 <Control_Task_2+0x568>)
 8002b14:	701a      	strb	r2, [r3, #0]
 8002b16:	4b34      	ldr	r3, [pc, #208]	; (8002be8 <Control_Task_2+0x568>)
 8002b18:	781b      	ldrb	r3, [r3, #0]
 8002b1a:	2b05      	cmp	r3, #5
 8002b1c:	d9dc      	bls.n	8002ad8 <Control_Task_2+0x458>
				}
			}
			if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)path=LEFT;
 8002b1e:	4b33      	ldr	r3, [pc, #204]	; (8002bec <Control_Task_2+0x56c>)
 8002b20:	785b      	ldrb	r3, [r3, #1]
 8002b22:	2b00      	cmp	r3, #0
 8002b24:	d003      	beq.n	8002b2e <Control_Task_2+0x4ae>
 8002b26:	4b31      	ldr	r3, [pc, #196]	; (8002bec <Control_Task_2+0x56c>)
 8002b28:	785b      	ldrb	r3, [r3, #1]
 8002b2a:	2b03      	cmp	r3, #3
 8002b2c:	d103      	bne.n	8002b36 <Control_Task_2+0x4b6>
 8002b2e:	4b30      	ldr	r3, [pc, #192]	; (8002bf0 <Control_Task_2+0x570>)
 8002b30:	2200      	movs	r2, #0
 8002b32:	701a      	strb	r2, [r3, #0]
 8002b34:	e016      	b.n	8002b64 <Control_Task_2+0x4e4>
			else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)path=MIDDLE;
 8002b36:	4b2d      	ldr	r3, [pc, #180]	; (8002bec <Control_Task_2+0x56c>)
 8002b38:	785b      	ldrb	r3, [r3, #1]
 8002b3a:	2b01      	cmp	r3, #1
 8002b3c:	d003      	beq.n	8002b46 <Control_Task_2+0x4c6>
 8002b3e:	4b2b      	ldr	r3, [pc, #172]	; (8002bec <Control_Task_2+0x56c>)
 8002b40:	785b      	ldrb	r3, [r3, #1]
 8002b42:	2b04      	cmp	r3, #4
 8002b44:	d103      	bne.n	8002b4e <Control_Task_2+0x4ce>
 8002b46:	4b2a      	ldr	r3, [pc, #168]	; (8002bf0 <Control_Task_2+0x570>)
 8002b48:	2201      	movs	r2, #1
 8002b4a:	701a      	strb	r2, [r3, #0]
 8002b4c:	e00a      	b.n	8002b64 <Control_Task_2+0x4e4>
			else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)path=RIGHT;
 8002b4e:	4b27      	ldr	r3, [pc, #156]	; (8002bec <Control_Task_2+0x56c>)
 8002b50:	785b      	ldrb	r3, [r3, #1]
 8002b52:	2b02      	cmp	r3, #2
 8002b54:	d003      	beq.n	8002b5e <Control_Task_2+0x4de>
 8002b56:	4b25      	ldr	r3, [pc, #148]	; (8002bec <Control_Task_2+0x56c>)
 8002b58:	785b      	ldrb	r3, [r3, #1]
 8002b5a:	2b05      	cmp	r3, #5
 8002b5c:	d102      	bne.n	8002b64 <Control_Task_2+0x4e4>
 8002b5e:	4b24      	ldr	r3, [pc, #144]	; (8002bf0 <Control_Task_2+0x570>)
 8002b60:	2202      	movs	r2, #2
 8002b62:	701a      	strb	r2, [r3, #0]
			stage=1;
 8002b64:	4b26      	ldr	r3, [pc, #152]	; (8002c00 <Control_Task_2+0x580>)
 8002b66:	2201      	movs	r2, #1
 8002b68:	701a      	strb	r2, [r3, #0]
			v_control=NORMAL_VEL;
 8002b6a:	4b30      	ldr	r3, [pc, #192]	; (8002c2c <Control_Task_2+0x5ac>)
 8002b6c:	2202      	movs	r2, #2
 8002b6e:	701a      	strb	r2, [r3, #0]
			//////////////////////////////////////////////////////////////
#ifdef ADIBUGG
			sprintf(str,"dd\n\r");
 8002b70:	4920      	ldr	r1, [pc, #128]	; (8002bf4 <Control_Task_2+0x574>)
 8002b72:	4821      	ldr	r0, [pc, #132]	; (8002bf8 <Control_Task_2+0x578>)
 8002b74:	f00a f81c 	bl	800cbb0 <siprintf>
			str[0]=pos[MY];
 8002b78:	4b20      	ldr	r3, [pc, #128]	; (8002bfc <Control_Task_2+0x57c>)
 8002b7a:	781a      	ldrb	r2, [r3, #0]
 8002b7c:	4b1e      	ldr	r3, [pc, #120]	; (8002bf8 <Control_Task_2+0x578>)
 8002b7e:	701a      	strb	r2, [r3, #0]
			str[1]=pos[NEXT];//honnan
 8002b80:	4b1e      	ldr	r3, [pc, #120]	; (8002bfc <Control_Task_2+0x57c>)
 8002b82:	785a      	ldrb	r2, [r3, #1]
 8002b84:	4b1c      	ldr	r3, [pc, #112]	; (8002bf8 <Control_Task_2+0x578>)
 8002b86:	705a      	strb	r2, [r3, #1]
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 4, 3);
 8002b88:	2303      	movs	r3, #3
 8002b8a:	2204      	movs	r2, #4
 8002b8c:	491a      	ldr	r1, [pc, #104]	; (8002bf8 <Control_Task_2+0x578>)
 8002b8e:	68f8      	ldr	r0, [r7, #12]
 8002b90:	f008 faa5 	bl	800b0de <HAL_UART_Transmit>
 8002b94:	e104      	b.n	8002da0 <Control_Task_2+0x720>
#endif
		}
	}

	else if(control_task_2_state==1)
 8002b96:	4b26      	ldr	r3, [pc, #152]	; (8002c30 <Control_Task_2+0x5b0>)
 8002b98:	781b      	ldrb	r3, [r3, #0]
 8002b9a:	2b01      	cmp	r3, #1
 8002b9c:	f040 8100 	bne.w	8002da0 <Control_Task_2+0x720>
	{
		//O-ban várakoz
		if (selected_route==1 && piratePos_prev[1]=='O')
 8002ba0:	4b1c      	ldr	r3, [pc, #112]	; (8002c14 <Control_Task_2+0x594>)
 8002ba2:	781b      	ldrb	r3, [r3, #0]
 8002ba4:	2b01      	cmp	r3, #1
 8002ba6:	d10b      	bne.n	8002bc0 <Control_Task_2+0x540>
 8002ba8:	4b17      	ldr	r3, [pc, #92]	; (8002c08 <Control_Task_2+0x588>)
 8002baa:	785b      	ldrb	r3, [r3, #1]
 8002bac:	2b4f      	cmp	r3, #79	; 0x4f
 8002bae:	d107      	bne.n	8002bc0 <Control_Task_2+0x540>
		{
			control_task_2_state=2;//pos[MY]=piratePos[2];//amíg a kalózrobot azt célba nem veszi
 8002bb0:	4b1f      	ldr	r3, [pc, #124]	; (8002c30 <Control_Task_2+0x5b0>)
 8002bb2:	2202      	movs	r2, #2
 8002bb4:	701a      	strb	r2, [r3, #0]
			pos[MY]=piratePos_prev[2];
 8002bb6:	4b14      	ldr	r3, [pc, #80]	; (8002c08 <Control_Task_2+0x588>)
 8002bb8:	789a      	ldrb	r2, [r3, #2]
 8002bba:	4b10      	ldr	r3, [pc, #64]	; (8002bfc <Control_Task_2+0x57c>)
 8002bbc:	701a      	strb	r2, [r3, #0]
 8002bbe:	e08d      	b.n	8002cdc <Control_Task_2+0x65c>
		}
		else if (selected_route==2) //N-ben várakozunk
 8002bc0:	4b14      	ldr	r3, [pc, #80]	; (8002c14 <Control_Task_2+0x594>)
 8002bc2:	781b      	ldrb	r3, [r3, #0]
 8002bc4:	2b02      	cmp	r3, #2
 8002bc6:	d144      	bne.n	8002c52 <Control_Task_2+0x5d2>
		{
			if(piratePos_prev[1]=='K' && piratePos_prev[2] != 'N')
 8002bc8:	4b0f      	ldr	r3, [pc, #60]	; (8002c08 <Control_Task_2+0x588>)
 8002bca:	785b      	ldrb	r3, [r3, #1]
 8002bcc:	2b4b      	cmp	r3, #75	; 0x4b
 8002bce:	d131      	bne.n	8002c34 <Control_Task_2+0x5b4>
 8002bd0:	4b0d      	ldr	r3, [pc, #52]	; (8002c08 <Control_Task_2+0x588>)
 8002bd2:	789b      	ldrb	r3, [r3, #2]
 8002bd4:	2b4e      	cmp	r3, #78	; 0x4e
 8002bd6:	d02d      	beq.n	8002c34 <Control_Task_2+0x5b4>
			{
				pos[MY]=piratePos_prev[2];//menjünk oda ahova ő akar, ez akkor jo ha nem felénk jön, felülbíráljuk a pos[my]='I'-t
 8002bd8:	4b0b      	ldr	r3, [pc, #44]	; (8002c08 <Control_Task_2+0x588>)
 8002bda:	789a      	ldrb	r2, [r3, #2]
 8002bdc:	4b07      	ldr	r3, [pc, #28]	; (8002bfc <Control_Task_2+0x57c>)
 8002bde:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 8002be0:	4b13      	ldr	r3, [pc, #76]	; (8002c30 <Control_Task_2+0x5b0>)
 8002be2:	2202      	movs	r2, #2
 8002be4:	701a      	strb	r2, [r3, #0]
 8002be6:	e079      	b.n	8002cdc <Control_Task_2+0x65c>
 8002be8:	20000656 	.word	0x20000656
 8002bec:	20000658 	.word	0x20000658
 8002bf0:	200002b6 	.word	0x200002b6
 8002bf4:	0801060c 	.word	0x0801060c
 8002bf8:	2000065c 	.word	0x2000065c
 8002bfc:	20000000 	.word	0x20000000
 8002c00:	2000067a 	.word	0x2000067a
 8002c04:	40020400 	.word	0x40020400
 8002c08:	20000648 	.word	0x20000648
 8002c0c:	20000650 	.word	0x20000650
 8002c10:	20000008 	.word	0x20000008
 8002c14:	2000067b 	.word	0x2000067b
 8002c18:	20000010 	.word	0x20000010
 8002c1c:	20000018 	.word	0x20000018
 8002c20:	20000020 	.word	0x20000020
 8002c24:	2000064c 	.word	0x2000064c
 8002c28:	200002c8 	.word	0x200002c8
 8002c2c:	200002b9 	.word	0x200002b9
 8002c30:	2000063c 	.word	0x2000063c
			}
			else if(piratePos_prev[1]=='N') //waiting
 8002c34:	4b94      	ldr	r3, [pc, #592]	; (8002e88 <Control_Task_2+0x808>)
 8002c36:	785b      	ldrb	r3, [r3, #1]
 8002c38:	2b4e      	cmp	r3, #78	; 0x4e
 8002c3a:	d14f      	bne.n	8002cdc <Control_Task_2+0x65c>
			{
				pos[MY]=piratePos_prev[2];
 8002c3c:	4b92      	ldr	r3, [pc, #584]	; (8002e88 <Control_Task_2+0x808>)
 8002c3e:	789a      	ldrb	r2, [r3, #2]
 8002c40:	4b92      	ldr	r3, [pc, #584]	; (8002e8c <Control_Task_2+0x80c>)
 8002c42:	701a      	strb	r2, [r3, #0]
				orientation=REVERSE;
 8002c44:	4b92      	ldr	r3, [pc, #584]	; (8002e90 <Control_Task_2+0x810>)
 8002c46:	2201      	movs	r2, #1
 8002c48:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 8002c4a:	4b92      	ldr	r3, [pc, #584]	; (8002e94 <Control_Task_2+0x814>)
 8002c4c:	2202      	movs	r2, #2
 8002c4e:	701a      	strb	r2, [r3, #0]
 8002c50:	e044      	b.n	8002cdc <Control_Task_2+0x65c>
				sprintf(str,"Wait!\n\r");
				HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);
#endif
			}
		}
		else if(selected_route==3)//I-ben várakozunk
 8002c52:	4b91      	ldr	r3, [pc, #580]	; (8002e98 <Control_Task_2+0x818>)
 8002c54:	781b      	ldrb	r3, [r3, #0]
 8002c56:	2b03      	cmp	r3, #3
 8002c58:	d11e      	bne.n	8002c98 <Control_Task_2+0x618>
		{
			if(piratePos_prev[1]=='F' && piratePos_prev[2] != 'I')
 8002c5a:	4b8b      	ldr	r3, [pc, #556]	; (8002e88 <Control_Task_2+0x808>)
 8002c5c:	785b      	ldrb	r3, [r3, #1]
 8002c5e:	2b46      	cmp	r3, #70	; 0x46
 8002c60:	d10b      	bne.n	8002c7a <Control_Task_2+0x5fa>
 8002c62:	4b89      	ldr	r3, [pc, #548]	; (8002e88 <Control_Task_2+0x808>)
 8002c64:	789b      	ldrb	r3, [r3, #2]
 8002c66:	2b49      	cmp	r3, #73	; 0x49
 8002c68:	d007      	beq.n	8002c7a <Control_Task_2+0x5fa>
			{
				pos[MY]=piratePos_prev[2];//menjünk oda ahova ő akar, ez akkor jo ha nem felénk jön, felülbíráljuk a pos[my]='D'-t
 8002c6a:	4b87      	ldr	r3, [pc, #540]	; (8002e88 <Control_Task_2+0x808>)
 8002c6c:	789a      	ldrb	r2, [r3, #2]
 8002c6e:	4b87      	ldr	r3, [pc, #540]	; (8002e8c <Control_Task_2+0x80c>)
 8002c70:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 8002c72:	4b88      	ldr	r3, [pc, #544]	; (8002e94 <Control_Task_2+0x814>)
 8002c74:	2202      	movs	r2, #2
 8002c76:	701a      	strb	r2, [r3, #0]
 8002c78:	e030      	b.n	8002cdc <Control_Task_2+0x65c>
			}
			else if(piratePos_prev[1]=='I')
 8002c7a:	4b83      	ldr	r3, [pc, #524]	; (8002e88 <Control_Task_2+0x808>)
 8002c7c:	785b      	ldrb	r3, [r3, #1]
 8002c7e:	2b49      	cmp	r3, #73	; 0x49
 8002c80:	d12c      	bne.n	8002cdc <Control_Task_2+0x65c>
			{
				//waiting
				pos[MY]=piratePos_prev[2];
 8002c82:	4b81      	ldr	r3, [pc, #516]	; (8002e88 <Control_Task_2+0x808>)
 8002c84:	789a      	ldrb	r2, [r3, #2]
 8002c86:	4b81      	ldr	r3, [pc, #516]	; (8002e8c <Control_Task_2+0x80c>)
 8002c88:	701a      	strb	r2, [r3, #0]
				orientation=REVERSE;
 8002c8a:	4b81      	ldr	r3, [pc, #516]	; (8002e90 <Control_Task_2+0x810>)
 8002c8c:	2201      	movs	r2, #1
 8002c8e:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 8002c90:	4b80      	ldr	r3, [pc, #512]	; (8002e94 <Control_Task_2+0x814>)
 8002c92:	2202      	movs	r2, #2
 8002c94:	701a      	strb	r2, [r3, #0]
 8002c96:	e021      	b.n	8002cdc <Control_Task_2+0x65c>
				HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);
#endif
			}
		}

		else if (selected_route==4){//I-ben várakozunk
 8002c98:	4b7f      	ldr	r3, [pc, #508]	; (8002e98 <Control_Task_2+0x818>)
 8002c9a:	781b      	ldrb	r3, [r3, #0]
 8002c9c:	2b04      	cmp	r3, #4
 8002c9e:	d11d      	bne.n	8002cdc <Control_Task_2+0x65c>

			if(piratePos_prev[1]=='N' && piratePos_prev[2]!='L')
 8002ca0:	4b79      	ldr	r3, [pc, #484]	; (8002e88 <Control_Task_2+0x808>)
 8002ca2:	785b      	ldrb	r3, [r3, #1]
 8002ca4:	2b4e      	cmp	r3, #78	; 0x4e
 8002ca6:	d10b      	bne.n	8002cc0 <Control_Task_2+0x640>
 8002ca8:	4b77      	ldr	r3, [pc, #476]	; (8002e88 <Control_Task_2+0x808>)
 8002caa:	789b      	ldrb	r3, [r3, #2]
 8002cac:	2b4c      	cmp	r3, #76	; 0x4c
 8002cae:	d007      	beq.n	8002cc0 <Control_Task_2+0x640>
			{
				pos[MY]=piratePos_prev[2];//menjünk oda ahova ő akar, ez akkor jo ha nem felénk jön, felülbíráljuk a pos[my]='I'-t
 8002cb0:	4b75      	ldr	r3, [pc, #468]	; (8002e88 <Control_Task_2+0x808>)
 8002cb2:	789a      	ldrb	r2, [r3, #2]
 8002cb4:	4b75      	ldr	r3, [pc, #468]	; (8002e8c <Control_Task_2+0x80c>)
 8002cb6:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 8002cb8:	4b76      	ldr	r3, [pc, #472]	; (8002e94 <Control_Task_2+0x814>)
 8002cba:	2202      	movs	r2, #2
 8002cbc:	701a      	strb	r2, [r3, #0]
 8002cbe:	e00d      	b.n	8002cdc <Control_Task_2+0x65c>
			}
			else if(piratePos_prev[1]=='L')//waiting
 8002cc0:	4b71      	ldr	r3, [pc, #452]	; (8002e88 <Control_Task_2+0x808>)
 8002cc2:	785b      	ldrb	r3, [r3, #1]
 8002cc4:	2b4c      	cmp	r3, #76	; 0x4c
 8002cc6:	d109      	bne.n	8002cdc <Control_Task_2+0x65c>
			{
				pos[MY]=piratePos_prev[2];
 8002cc8:	4b6f      	ldr	r3, [pc, #444]	; (8002e88 <Control_Task_2+0x808>)
 8002cca:	789a      	ldrb	r2, [r3, #2]
 8002ccc:	4b6f      	ldr	r3, [pc, #444]	; (8002e8c <Control_Task_2+0x80c>)
 8002cce:	701a      	strb	r2, [r3, #0]
				orientation=REVERSE;
 8002cd0:	4b6f      	ldr	r3, [pc, #444]	; (8002e90 <Control_Task_2+0x810>)
 8002cd2:	2201      	movs	r2, #1
 8002cd4:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 8002cd6:	4b6f      	ldr	r3, [pc, #444]	; (8002e94 <Control_Task_2+0x814>)
 8002cd8:	2202      	movs	r2, #2
 8002cda:	701a      	strb	r2, [r3, #0]
				sprintf(str,"Wait!\n\r");
				HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);
#endif
			}
		}
		if (control_task_2_state==2)
 8002cdc:	4b6d      	ldr	r3, [pc, #436]	; (8002e94 <Control_Task_2+0x814>)
 8002cde:	781b      	ldrb	r3, [r3, #0]
 8002ce0:	2b02      	cmp	r3, #2
 8002ce2:	d15d      	bne.n	8002da0 <Control_Task_2+0x720>
		{
			for(i=0;i<6;i++)
 8002ce4:	4b6d      	ldr	r3, [pc, #436]	; (8002e9c <Control_Task_2+0x81c>)
 8002ce6:	2200      	movs	r2, #0
 8002ce8:	701a      	strb	r2, [r3, #0]
 8002cea:	e01e      	b.n	8002d2a <Control_Task_2+0x6aa>
			{
				if (N(piratePos_prev[1]).neighbours[i]==piratePos_prev[2])//O-hanyadik szomszedja L?
 8002cec:	4b66      	ldr	r3, [pc, #408]	; (8002e88 <Control_Task_2+0x808>)
 8002cee:	785b      	ldrb	r3, [r3, #1]
 8002cf0:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002cf4:	4b69      	ldr	r3, [pc, #420]	; (8002e9c <Control_Task_2+0x81c>)
 8002cf6:	781b      	ldrb	r3, [r3, #0]
 8002cf8:	4618      	mov	r0, r3
 8002cfa:	4969      	ldr	r1, [pc, #420]	; (8002ea0 <Control_Task_2+0x820>)
 8002cfc:	4613      	mov	r3, r2
 8002cfe:	009b      	lsls	r3, r3, #2
 8002d00:	4413      	add	r3, r2
 8002d02:	00db      	lsls	r3, r3, #3
 8002d04:	440b      	add	r3, r1
 8002d06:	4403      	add	r3, r0
 8002d08:	330c      	adds	r3, #12
 8002d0a:	781a      	ldrb	r2, [r3, #0]
 8002d0c:	4b5e      	ldr	r3, [pc, #376]	; (8002e88 <Control_Task_2+0x808>)
 8002d0e:	789b      	ldrb	r3, [r3, #2]
 8002d10:	429a      	cmp	r2, r3
 8002d12:	d104      	bne.n	8002d1e <Control_Task_2+0x69e>
				{
					bestNb[NEXT]=i;
 8002d14:	4b61      	ldr	r3, [pc, #388]	; (8002e9c <Control_Task_2+0x81c>)
 8002d16:	781a      	ldrb	r2, [r3, #0]
 8002d18:	4b62      	ldr	r3, [pc, #392]	; (8002ea4 <Control_Task_2+0x824>)
 8002d1a:	705a      	strb	r2, [r3, #1]
					break;
 8002d1c:	e009      	b.n	8002d32 <Control_Task_2+0x6b2>
			for(i=0;i<6;i++)
 8002d1e:	4b5f      	ldr	r3, [pc, #380]	; (8002e9c <Control_Task_2+0x81c>)
 8002d20:	781b      	ldrb	r3, [r3, #0]
 8002d22:	3301      	adds	r3, #1
 8002d24:	b2da      	uxtb	r2, r3
 8002d26:	4b5d      	ldr	r3, [pc, #372]	; (8002e9c <Control_Task_2+0x81c>)
 8002d28:	701a      	strb	r2, [r3, #0]
 8002d2a:	4b5c      	ldr	r3, [pc, #368]	; (8002e9c <Control_Task_2+0x81c>)
 8002d2c:	781b      	ldrb	r3, [r3, #0]
 8002d2e:	2b05      	cmp	r3, #5
 8002d30:	d9dc      	bls.n	8002cec <Control_Task_2+0x66c>
				}
			}
			if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)path=LEFT;
 8002d32:	4b5c      	ldr	r3, [pc, #368]	; (8002ea4 <Control_Task_2+0x824>)
 8002d34:	785b      	ldrb	r3, [r3, #1]
 8002d36:	2b00      	cmp	r3, #0
 8002d38:	d003      	beq.n	8002d42 <Control_Task_2+0x6c2>
 8002d3a:	4b5a      	ldr	r3, [pc, #360]	; (8002ea4 <Control_Task_2+0x824>)
 8002d3c:	785b      	ldrb	r3, [r3, #1]
 8002d3e:	2b03      	cmp	r3, #3
 8002d40:	d103      	bne.n	8002d4a <Control_Task_2+0x6ca>
 8002d42:	4b59      	ldr	r3, [pc, #356]	; (8002ea8 <Control_Task_2+0x828>)
 8002d44:	2200      	movs	r2, #0
 8002d46:	701a      	strb	r2, [r3, #0]
 8002d48:	e016      	b.n	8002d78 <Control_Task_2+0x6f8>
			else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)path=MIDDLE;
 8002d4a:	4b56      	ldr	r3, [pc, #344]	; (8002ea4 <Control_Task_2+0x824>)
 8002d4c:	785b      	ldrb	r3, [r3, #1]
 8002d4e:	2b01      	cmp	r3, #1
 8002d50:	d003      	beq.n	8002d5a <Control_Task_2+0x6da>
 8002d52:	4b54      	ldr	r3, [pc, #336]	; (8002ea4 <Control_Task_2+0x824>)
 8002d54:	785b      	ldrb	r3, [r3, #1]
 8002d56:	2b04      	cmp	r3, #4
 8002d58:	d103      	bne.n	8002d62 <Control_Task_2+0x6e2>
 8002d5a:	4b53      	ldr	r3, [pc, #332]	; (8002ea8 <Control_Task_2+0x828>)
 8002d5c:	2201      	movs	r2, #1
 8002d5e:	701a      	strb	r2, [r3, #0]
 8002d60:	e00a      	b.n	8002d78 <Control_Task_2+0x6f8>
			else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)path=RIGHT;
 8002d62:	4b50      	ldr	r3, [pc, #320]	; (8002ea4 <Control_Task_2+0x824>)
 8002d64:	785b      	ldrb	r3, [r3, #1]
 8002d66:	2b02      	cmp	r3, #2
 8002d68:	d003      	beq.n	8002d72 <Control_Task_2+0x6f2>
 8002d6a:	4b4e      	ldr	r3, [pc, #312]	; (8002ea4 <Control_Task_2+0x824>)
 8002d6c:	785b      	ldrb	r3, [r3, #1]
 8002d6e:	2b05      	cmp	r3, #5
 8002d70:	d102      	bne.n	8002d78 <Control_Task_2+0x6f8>
 8002d72:	4b4d      	ldr	r3, [pc, #308]	; (8002ea8 <Control_Task_2+0x828>)
 8002d74:	2202      	movs	r2, #2
 8002d76:	701a      	strb	r2, [r3, #0]
			v_control=NORMAL_VEL;
 8002d78:	4b4c      	ldr	r3, [pc, #304]	; (8002eac <Control_Task_2+0x82c>)
 8002d7a:	2202      	movs	r2, #2
 8002d7c:	701a      	strb	r2, [r3, #0]
			sprintf(str,"d\n\r");
			str[0]=pos[MY];//honnan
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 3, 3);
#endif
#ifdef ADIBUGG
			sprintf(str,"dd\n\r");
 8002d7e:	494c      	ldr	r1, [pc, #304]	; (8002eb0 <Control_Task_2+0x830>)
 8002d80:	484c      	ldr	r0, [pc, #304]	; (8002eb4 <Control_Task_2+0x834>)
 8002d82:	f009 ff15 	bl	800cbb0 <siprintf>
			str[1]=pos[MY];//honnan
 8002d86:	4b41      	ldr	r3, [pc, #260]	; (8002e8c <Control_Task_2+0x80c>)
 8002d88:	781a      	ldrb	r2, [r3, #0]
 8002d8a:	4b4a      	ldr	r3, [pc, #296]	; (8002eb4 <Control_Task_2+0x834>)
 8002d8c:	705a      	strb	r2, [r3, #1]
			str[0]=9;//honnan
 8002d8e:	4b49      	ldr	r3, [pc, #292]	; (8002eb4 <Control_Task_2+0x834>)
 8002d90:	2209      	movs	r2, #9
 8002d92:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 4, 3);
 8002d94:	2303      	movs	r3, #3
 8002d96:	2204      	movs	r2, #4
 8002d98:	4946      	ldr	r1, [pc, #280]	; (8002eb4 <Control_Task_2+0x834>)
 8002d9a:	68f8      	ldr	r0, [r7, #12]
 8002d9c:	f008 f99f 	bl	800b0de <HAL_UART_Transmit>
#endif
		}
	}

	if (control_task_2_state==2)//elotte mozgas
 8002da0:	4b3c      	ldr	r3, [pc, #240]	; (8002e94 <Control_Task_2+0x814>)
 8002da2:	781b      	ldrb	r3, [r3, #0]
 8002da4:	2b02      	cmp	r3, #2
 8002da6:	f040 810b 	bne.w	8002fc0 <Control_Task_2+0x940>
	{
		static uint8_t stopAfterNode=0;

		if(nodeDetected || stopAfterNode)
 8002daa:	4b43      	ldr	r3, [pc, #268]	; (8002eb8 <Control_Task_2+0x838>)
 8002dac:	781b      	ldrb	r3, [r3, #0]
 8002dae:	2b00      	cmp	r3, #0
 8002db0:	d104      	bne.n	8002dbc <Control_Task_2+0x73c>
 8002db2:	4b42      	ldr	r3, [pc, #264]	; (8002ebc <Control_Task_2+0x83c>)
 8002db4:	781b      	ldrb	r3, [r3, #0]
 8002db6:	2b00      	cmp	r3, #0
 8002db8:	f000 8102 	beq.w	8002fc0 <Control_Task_2+0x940>
		{
			LED_B_TOGGLE;
 8002dbc:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8002dc0:	483f      	ldr	r0, [pc, #252]	; (8002ec0 <Control_Task_2+0x840>)
 8002dc2:	f005 fc52 	bl	800866a <HAL_GPIO_TogglePin>
			if(nodeDetected)//ha nem sávváltó üzemmódban vagyunk pontotszámolunk és felszedett kapukat nullázzuk
 8002dc6:	4b3c      	ldr	r3, [pc, #240]	; (8002eb8 <Control_Task_2+0x838>)
 8002dc8:	781b      	ldrb	r3, [r3, #0]
 8002dca:	2b00      	cmp	r3, #0
 8002dcc:	d01f      	beq.n	8002e0e <Control_Task_2+0x78e>
			{
				collectedPoints +=N(pos[MY]).worth;//sávváltás módik vizsgáljuk az össezgyűjtött kapuk számát
 8002dce:	4b2f      	ldr	r3, [pc, #188]	; (8002e8c <Control_Task_2+0x80c>)
 8002dd0:	781b      	ldrb	r3, [r3, #0]
 8002dd2:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002dd6:	4932      	ldr	r1, [pc, #200]	; (8002ea0 <Control_Task_2+0x820>)
 8002dd8:	4613      	mov	r3, r2
 8002dda:	009b      	lsls	r3, r3, #2
 8002ddc:	4413      	add	r3, r2
 8002dde:	00db      	lsls	r3, r3, #3
 8002de0:	440b      	add	r3, r1
 8002de2:	3304      	adds	r3, #4
 8002de4:	681b      	ldr	r3, [r3, #0]
 8002de6:	b2da      	uxtb	r2, r3
 8002de8:	4b36      	ldr	r3, [pc, #216]	; (8002ec4 <Control_Task_2+0x844>)
 8002dea:	781b      	ldrb	r3, [r3, #0]
 8002dec:	4413      	add	r3, r2
 8002dee:	b2da      	uxtb	r2, r3
 8002df0:	4b34      	ldr	r3, [pc, #208]	; (8002ec4 <Control_Task_2+0x844>)
 8002df2:	701a      	strb	r2, [r3, #0]
				N(pos[MY]).worth=0;//ez a kapu már nem ér pontot
 8002df4:	4b25      	ldr	r3, [pc, #148]	; (8002e8c <Control_Task_2+0x80c>)
 8002df6:	781b      	ldrb	r3, [r3, #0]
 8002df8:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002dfc:	4928      	ldr	r1, [pc, #160]	; (8002ea0 <Control_Task_2+0x820>)
 8002dfe:	4613      	mov	r3, r2
 8002e00:	009b      	lsls	r3, r3, #2
 8002e02:	4413      	add	r3, r2
 8002e04:	00db      	lsls	r3, r3, #3
 8002e06:	440b      	add	r3, r1
 8002e08:	3304      	adds	r3, #4
 8002e0a:	2200      	movs	r2, #0
 8002e0c:	601a      	str	r2, [r3, #0]
			}

			if(collectedPoints >= 34 && !laneChange)
 8002e0e:	4b2d      	ldr	r3, [pc, #180]	; (8002ec4 <Control_Task_2+0x844>)
 8002e10:	781b      	ldrb	r3, [r3, #0]
 8002e12:	2b21      	cmp	r3, #33	; 0x21
 8002e14:	d90f      	bls.n	8002e36 <Control_Task_2+0x7b6>
 8002e16:	4b2c      	ldr	r3, [pc, #176]	; (8002ec8 <Control_Task_2+0x848>)
 8002e18:	781b      	ldrb	r3, [r3, #0]
 8002e1a:	2b00      	cmp	r3, #0
 8002e1c:	d10b      	bne.n	8002e36 <Control_Task_2+0x7b6>
			{
				laneChange=1; //flag állítás
 8002e1e:	4b2a      	ldr	r3, [pc, #168]	; (8002ec8 <Control_Task_2+0x848>)
 8002e20:	2201      	movs	r2, #1
 8002e22:	701a      	strb	r2, [r3, #0]
				Lane_Change_Init(); //a sávváltóhely felé nőnek a rewardok
 8002e24:	f000 faa8 	bl	8003378 <Lane_Change_Init>
				LED_Y(1); //sárga led világít
 8002e28:	2200      	movs	r2, #0
 8002e2a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8002e2e:	4824      	ldr	r0, [pc, #144]	; (8002ec0 <Control_Task_2+0x840>)
 8002e30:	f005 fc02 	bl	8008638 <HAL_GPIO_WritePin>
				return;
 8002e34:	e0c4      	b.n	8002fc0 <Control_Task_2+0x940>
			}

			if(piratePos_prev[1]==pos[MY])//ha celja a mi pozink, tudjuk a kovi celt
 8002e36:	4b14      	ldr	r3, [pc, #80]	; (8002e88 <Control_Task_2+0x808>)
 8002e38:	785a      	ldrb	r2, [r3, #1]
 8002e3a:	4b14      	ldr	r3, [pc, #80]	; (8002e8c <Control_Task_2+0x80c>)
 8002e3c:	781b      	ldrb	r3, [r3, #0]
 8002e3e:	429a      	cmp	r2, r3
 8002e40:	f040 80af 	bne.w	8002fa2 <Control_Task_2+0x922>
			{
				pos[MY]=piratePos_prev[2];
 8002e44:	4b10      	ldr	r3, [pc, #64]	; (8002e88 <Control_Task_2+0x808>)
 8002e46:	789a      	ldrb	r2, [r3, #2]
 8002e48:	4b10      	ldr	r3, [pc, #64]	; (8002e8c <Control_Task_2+0x80c>)
 8002e4a:	701a      	strb	r2, [r3, #0]
				for(i=0; i<6;i++)
 8002e4c:	4b13      	ldr	r3, [pc, #76]	; (8002e9c <Control_Task_2+0x81c>)
 8002e4e:	2200      	movs	r2, #0
 8002e50:	701a      	strb	r2, [r3, #0]
 8002e52:	e041      	b.n	8002ed8 <Control_Task_2+0x858>
				{
					if (N(piratePos_prev[1]).neighbours[i]==piratePos_prev[2])//O-hanyadik szomszedja L?
 8002e54:	4b0c      	ldr	r3, [pc, #48]	; (8002e88 <Control_Task_2+0x808>)
 8002e56:	785b      	ldrb	r3, [r3, #1]
 8002e58:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002e5c:	4b0f      	ldr	r3, [pc, #60]	; (8002e9c <Control_Task_2+0x81c>)
 8002e5e:	781b      	ldrb	r3, [r3, #0]
 8002e60:	4618      	mov	r0, r3
 8002e62:	490f      	ldr	r1, [pc, #60]	; (8002ea0 <Control_Task_2+0x820>)
 8002e64:	4613      	mov	r3, r2
 8002e66:	009b      	lsls	r3, r3, #2
 8002e68:	4413      	add	r3, r2
 8002e6a:	00db      	lsls	r3, r3, #3
 8002e6c:	440b      	add	r3, r1
 8002e6e:	4403      	add	r3, r0
 8002e70:	330c      	adds	r3, #12
 8002e72:	781a      	ldrb	r2, [r3, #0]
 8002e74:	4b04      	ldr	r3, [pc, #16]	; (8002e88 <Control_Task_2+0x808>)
 8002e76:	789b      	ldrb	r3, [r3, #2]
 8002e78:	429a      	cmp	r2, r3
 8002e7a:	d127      	bne.n	8002ecc <Control_Task_2+0x84c>
					{
						bestNb[NEXT]=i;
 8002e7c:	4b07      	ldr	r3, [pc, #28]	; (8002e9c <Control_Task_2+0x81c>)
 8002e7e:	781a      	ldrb	r2, [r3, #0]
 8002e80:	4b08      	ldr	r3, [pc, #32]	; (8002ea4 <Control_Task_2+0x824>)
 8002e82:	705a      	strb	r2, [r3, #1]
						break;
 8002e84:	e02c      	b.n	8002ee0 <Control_Task_2+0x860>
 8002e86:	bf00      	nop
 8002e88:	20000648 	.word	0x20000648
 8002e8c:	20000000 	.word	0x20000000
 8002e90:	200002b4 	.word	0x200002b4
 8002e94:	2000063c 	.word	0x2000063c
 8002e98:	2000067b 	.word	0x2000067b
 8002e9c:	20000656 	.word	0x20000656
 8002ea0:	200002c8 	.word	0x200002c8
 8002ea4:	20000658 	.word	0x20000658
 8002ea8:	200002b6 	.word	0x200002b6
 8002eac:	200002b9 	.word	0x200002b9
 8002eb0:	0801060c 	.word	0x0801060c
 8002eb4:	2000065c 	.word	0x2000065c
 8002eb8:	200002b5 	.word	0x200002b5
 8002ebc:	2000067c 	.word	0x2000067c
 8002ec0:	40020400 	.word	0x40020400
 8002ec4:	200002b7 	.word	0x200002b7
 8002ec8:	200002b8 	.word	0x200002b8
				for(i=0; i<6;i++)
 8002ecc:	4b3e      	ldr	r3, [pc, #248]	; (8002fc8 <Control_Task_2+0x948>)
 8002ece:	781b      	ldrb	r3, [r3, #0]
 8002ed0:	3301      	adds	r3, #1
 8002ed2:	b2da      	uxtb	r2, r3
 8002ed4:	4b3c      	ldr	r3, [pc, #240]	; (8002fc8 <Control_Task_2+0x948>)
 8002ed6:	701a      	strb	r2, [r3, #0]
 8002ed8:	4b3b      	ldr	r3, [pc, #236]	; (8002fc8 <Control_Task_2+0x948>)
 8002eda:	781b      	ldrb	r3, [r3, #0]
 8002edc:	2b05      	cmp	r3, #5
 8002ede:	d9b9      	bls.n	8002e54 <Control_Task_2+0x7d4>
					}
				}
				if(N(pos[MY]).type>2)//ha a kövi node-on nincs kapu
 8002ee0:	4b3a      	ldr	r3, [pc, #232]	; (8002fcc <Control_Task_2+0x94c>)
 8002ee2:	781b      	ldrb	r3, [r3, #0]
 8002ee4:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002ee8:	4939      	ldr	r1, [pc, #228]	; (8002fd0 <Control_Task_2+0x950>)
 8002eea:	4613      	mov	r3, r2
 8002eec:	009b      	lsls	r3, r3, #2
 8002eee:	4413      	add	r3, r2
 8002ef0:	00db      	lsls	r3, r3, #3
 8002ef2:	440b      	add	r3, r1
 8002ef4:	3308      	adds	r3, #8
 8002ef6:	681b      	ldr	r3, [r3, #0]
 8002ef8:	2b02      	cmp	r3, #2
 8002efa:	d917      	bls.n	8002f2c <Control_Task_2+0x8ac>
				{
					s=0;
 8002efc:	4b35      	ldr	r3, [pc, #212]	; (8002fd4 <Control_Task_2+0x954>)
 8002efe:	f04f 0200 	mov.w	r2, #0
 8002f02:	601a      	str	r2, [r3, #0]
					sMAX=N(pos[MY]).distance[bestNb[NEXT]]+25;
 8002f04:	4b31      	ldr	r3, [pc, #196]	; (8002fcc <Control_Task_2+0x94c>)
 8002f06:	781b      	ldrb	r3, [r3, #0]
 8002f08:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002f0c:	4b32      	ldr	r3, [pc, #200]	; (8002fd8 <Control_Task_2+0x958>)
 8002f0e:	785b      	ldrb	r3, [r3, #1]
 8002f10:	4618      	mov	r0, r3
 8002f12:	492f      	ldr	r1, [pc, #188]	; (8002fd0 <Control_Task_2+0x950>)
 8002f14:	4613      	mov	r3, r2
 8002f16:	009b      	lsls	r3, r3, #2
 8002f18:	4413      	add	r3, r2
 8002f1a:	009b      	lsls	r3, r3, #2
 8002f1c:	4403      	add	r3, r0
 8002f1e:	330c      	adds	r3, #12
 8002f20:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8002f24:	3319      	adds	r3, #25
 8002f26:	461a      	mov	r2, r3
 8002f28:	4b2c      	ldr	r3, [pc, #176]	; (8002fdc <Control_Task_2+0x95c>)
 8002f2a:	601a      	str	r2, [r3, #0]
				}
				if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)path=LEFT;
 8002f2c:	4b2a      	ldr	r3, [pc, #168]	; (8002fd8 <Control_Task_2+0x958>)
 8002f2e:	785b      	ldrb	r3, [r3, #1]
 8002f30:	2b00      	cmp	r3, #0
 8002f32:	d003      	beq.n	8002f3c <Control_Task_2+0x8bc>
 8002f34:	4b28      	ldr	r3, [pc, #160]	; (8002fd8 <Control_Task_2+0x958>)
 8002f36:	785b      	ldrb	r3, [r3, #1]
 8002f38:	2b03      	cmp	r3, #3
 8002f3a:	d103      	bne.n	8002f44 <Control_Task_2+0x8c4>
 8002f3c:	4b28      	ldr	r3, [pc, #160]	; (8002fe0 <Control_Task_2+0x960>)
 8002f3e:	2200      	movs	r2, #0
 8002f40:	701a      	strb	r2, [r3, #0]
 8002f42:	e016      	b.n	8002f72 <Control_Task_2+0x8f2>
				else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)path=MIDDLE;
 8002f44:	4b24      	ldr	r3, [pc, #144]	; (8002fd8 <Control_Task_2+0x958>)
 8002f46:	785b      	ldrb	r3, [r3, #1]
 8002f48:	2b01      	cmp	r3, #1
 8002f4a:	d003      	beq.n	8002f54 <Control_Task_2+0x8d4>
 8002f4c:	4b22      	ldr	r3, [pc, #136]	; (8002fd8 <Control_Task_2+0x958>)
 8002f4e:	785b      	ldrb	r3, [r3, #1]
 8002f50:	2b04      	cmp	r3, #4
 8002f52:	d103      	bne.n	8002f5c <Control_Task_2+0x8dc>
 8002f54:	4b22      	ldr	r3, [pc, #136]	; (8002fe0 <Control_Task_2+0x960>)
 8002f56:	2201      	movs	r2, #1
 8002f58:	701a      	strb	r2, [r3, #0]
 8002f5a:	e00a      	b.n	8002f72 <Control_Task_2+0x8f2>
				else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)path=RIGHT;
 8002f5c:	4b1e      	ldr	r3, [pc, #120]	; (8002fd8 <Control_Task_2+0x958>)
 8002f5e:	785b      	ldrb	r3, [r3, #1]
 8002f60:	2b02      	cmp	r3, #2
 8002f62:	d003      	beq.n	8002f6c <Control_Task_2+0x8ec>
 8002f64:	4b1c      	ldr	r3, [pc, #112]	; (8002fd8 <Control_Task_2+0x958>)
 8002f66:	785b      	ldrb	r3, [r3, #1]
 8002f68:	2b05      	cmp	r3, #5
 8002f6a:	d102      	bne.n	8002f72 <Control_Task_2+0x8f2>
 8002f6c:	4b1c      	ldr	r3, [pc, #112]	; (8002fe0 <Control_Task_2+0x960>)
 8002f6e:	2202      	movs	r2, #2
 8002f70:	701a      	strb	r2, [r3, #0]
				v_control=NORMAL_VEL;
 8002f72:	4b1c      	ldr	r3, [pc, #112]	; (8002fe4 <Control_Task_2+0x964>)
 8002f74:	2202      	movs	r2, #2
 8002f76:	701a      	strb	r2, [r3, #0]
				stopAfterNode=0;
 8002f78:	4b1b      	ldr	r3, [pc, #108]	; (8002fe8 <Control_Task_2+0x968>)
 8002f7a:	2200      	movs	r2, #0
 8002f7c:	701a      	strb	r2, [r3, #0]
#ifdef ADIBUGG
			sprintf(str,"dd\n\r");
 8002f7e:	491b      	ldr	r1, [pc, #108]	; (8002fec <Control_Task_2+0x96c>)
 8002f80:	481b      	ldr	r0, [pc, #108]	; (8002ff0 <Control_Task_2+0x970>)
 8002f82:	f009 fe15 	bl	800cbb0 <siprintf>
			str[1]=pos[MY];//honnan
 8002f86:	4b11      	ldr	r3, [pc, #68]	; (8002fcc <Control_Task_2+0x94c>)
 8002f88:	781a      	ldrb	r2, [r3, #0]
 8002f8a:	4b19      	ldr	r3, [pc, #100]	; (8002ff0 <Control_Task_2+0x970>)
 8002f8c:	705a      	strb	r2, [r3, #1]
			str[0]=9;//honnan
 8002f8e:	4b18      	ldr	r3, [pc, #96]	; (8002ff0 <Control_Task_2+0x970>)
 8002f90:	2209      	movs	r2, #9
 8002f92:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 4, 3);
 8002f94:	2303      	movs	r3, #3
 8002f96:	2204      	movs	r2, #4
 8002f98:	4915      	ldr	r1, [pc, #84]	; (8002ff0 <Control_Task_2+0x970>)
 8002f9a:	68f8      	ldr	r0, [r7, #12]
 8002f9c:	f008 f89f 	bl	800b0de <HAL_UART_Transmit>
 8002fa0:	e005      	b.n	8002fae <Control_Task_2+0x92e>
#endif

			}
			else
			{
				v_control=STOP;//wait
 8002fa2:	4b10      	ldr	r3, [pc, #64]	; (8002fe4 <Control_Task_2+0x964>)
 8002fa4:	2200      	movs	r2, #0
 8002fa6:	701a      	strb	r2, [r3, #0]
				stopAfterNode=1;
 8002fa8:	4b0f      	ldr	r3, [pc, #60]	; (8002fe8 <Control_Task_2+0x968>)
 8002faa:	2201      	movs	r2, #1
 8002fac:	701a      	strb	r2, [r3, #0]
			}
			nodeDetected=0;
 8002fae:	4b11      	ldr	r3, [pc, #68]	; (8002ff4 <Control_Task_2+0x974>)
 8002fb0:	2200      	movs	r2, #0
 8002fb2:	701a      	strb	r2, [r3, #0]
 8002fb4:	e004      	b.n	8002fc0 <Control_Task_2+0x940>
	if(mode!=SKILL || laneChange)return;
 8002fb6:	bf00      	nop
 8002fb8:	e002      	b.n	8002fc0 <Control_Task_2+0x940>
	else if(control_task_2_tick>tick)return;
 8002fba:	bf00      	nop
 8002fbc:	e000      	b.n	8002fc0 <Control_Task_2+0x940>
	if(piratePos_prev[0]==0)return; //ha nem kaptunk még adatot a TB-tol return
 8002fbe:	bf00      	nop
		}
	}
}
 8002fc0:	3710      	adds	r7, #16
 8002fc2:	46bd      	mov	sp, r7
 8002fc4:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8002fc8:	20000656 	.word	0x20000656
 8002fcc:	20000000 	.word	0x20000000
 8002fd0:	200002c8 	.word	0x200002c8
 8002fd4:	20000640 	.word	0x20000640
 8002fd8:	20000658 	.word	0x20000658
 8002fdc:	20000004 	.word	0x20000004
 8002fe0:	200002b6 	.word	0x200002b6
 8002fe4:	200002b9 	.word	0x200002b9
 8002fe8:	2000067c 	.word	0x2000067c
 8002fec:	0801060c 	.word	0x0801060c
 8002ff0:	2000065c 	.word	0x2000065c
 8002ff4:	200002b5 	.word	0x200002b5

08002ff8 <Mode_Selector>:

void Mode_Selector(UART_HandleTypeDef *huart_debugg, UART_HandleTypeDef *huart_stm)
{
 8002ff8:	b580      	push	{r7, lr}
 8002ffa:	b08e      	sub	sp, #56	; 0x38
 8002ffc:	af00      	add	r7, sp, #0
 8002ffe:	6078      	str	r0, [r7, #4]
 8003000:	6039      	str	r1, [r7, #0]
	//Milyen módban kell működni?
	uint8_t buffer[40];
	uint8_t tmp=*(__IO uint8_t *) FLASH_ADDRESS_MODESELECTOR; //FLASH-ből kiolvassuk, hogy milyen módban vagyunk
 8003002:	4b5f      	ldr	r3, [pc, #380]	; (8003180 <Mode_Selector+0x188>)
 8003004:	781b      	ldrb	r3, [r3, #0]
 8003006:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37

	if(tmp==SKILL || tmp==FAST) mode = tmp;
 800300a:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 800300e:	2b52      	cmp	r3, #82	; 0x52
 8003010:	d003      	beq.n	800301a <Mode_Selector+0x22>
 8003012:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8003016:	2b3f      	cmp	r3, #63	; 0x3f
 8003018:	d104      	bne.n	8003024 <Mode_Selector+0x2c>
 800301a:	4a5a      	ldr	r2, [pc, #360]	; (8003184 <Mode_Selector+0x18c>)
 800301c:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8003020:	7013      	strb	r3, [r2, #0]
 8003022:	e022      	b.n	800306a <Mode_Selector+0x72>
	else
	{
		HAL_FLASH_Unlock();
 8003024:	f004 ffa2 	bl	8007f6c <HAL_FLASH_Unlock>
		HAL_Delay(50);
 8003028:	2032      	movs	r0, #50	; 0x32
 800302a:	f003 fc6b 	bl	8006904 <HAL_Delay>
		FLASH_Erase_Sector(7, FLASH_VOLTAGE_RANGE_3);
 800302e:	2102      	movs	r1, #2
 8003030:	2007      	movs	r0, #7
 8003032:	f005 f90d 	bl	8008250 <FLASH_Erase_Sector>
		HAL_Delay(50);
 8003036:	2032      	movs	r0, #50	; 0x32
 8003038:	f003 fc64 	bl	8006904 <HAL_Delay>
		HAL_FLASH_Lock();
 800303c:	f004 ffb8 	bl	8007fb0 <HAL_FLASH_Lock>
		HAL_FLASH_Unlock();
 8003040:	f004 ff94 	bl	8007f6c <HAL_FLASH_Unlock>
		HAL_Delay(50);
 8003044:	2032      	movs	r0, #50	; 0x32
 8003046:	f003 fc5d 	bl	8006904 <HAL_Delay>
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_MODESELECTOR, SKILL); //ha eddig skill mód volt akor msot gyors lesz
 800304a:	f04f 0252 	mov.w	r2, #82	; 0x52
 800304e:	f04f 0300 	mov.w	r3, #0
 8003052:	494b      	ldr	r1, [pc, #300]	; (8003180 <Mode_Selector+0x188>)
 8003054:	2000      	movs	r0, #0
 8003056:	f004 ff35 	bl	8007ec4 <HAL_FLASH_Program>
		HAL_Delay(50);
 800305a:	2032      	movs	r0, #50	; 0x32
 800305c:	f003 fc52 	bl	8006904 <HAL_Delay>
		HAL_FLASH_Lock();
 8003060:	f004 ffa6 	bl	8007fb0 <HAL_FLASH_Lock>

		mode=SKILL;
 8003064:	4b47      	ldr	r3, [pc, #284]	; (8003184 <Mode_Selector+0x18c>)
 8003066:	2252      	movs	r2, #82	; 0x52
 8003068:	701a      	strb	r2, [r3, #0]
	}

	if(mode==SKILL)
 800306a:	4b46      	ldr	r3, [pc, #280]	; (8003184 <Mode_Selector+0x18c>)
 800306c:	781b      	ldrb	r3, [r3, #0]
 800306e:	2b52      	cmp	r3, #82	; 0x52
 8003070:	d135      	bne.n	80030de <Mode_Selector+0xe6>
	{
		buffer[0] = CMD_MODE_SKILL; //szólunk a g0-nak, hogy ügyességi módban vagyunk
 8003072:	2352      	movs	r3, #82	; 0x52
 8003074:	733b      	strb	r3, [r7, #12]
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 8003076:	f107 010c 	add.w	r1, r7, #12
 800307a:	230a      	movs	r3, #10
 800307c:	2201      	movs	r2, #1
 800307e:	6838      	ldr	r0, [r7, #0]
 8003080:	f008 f82d 	bl	800b0de <HAL_UART_Transmit>
		HAL_Delay(10);
 8003084:	200a      	movs	r0, #10
 8003086:	f003 fc3d 	bl	8006904 <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);//3 szór is szólunk neki, hogy tuti megkapja a módváltásról az üzenetet
 800308a:	f107 010c 	add.w	r1, r7, #12
 800308e:	230a      	movs	r3, #10
 8003090:	2201      	movs	r2, #1
 8003092:	6838      	ldr	r0, [r7, #0]
 8003094:	f008 f823 	bl	800b0de <HAL_UART_Transmit>
		HAL_Delay(10);
 8003098:	200a      	movs	r0, #10
 800309a:	f003 fc33 	bl	8006904 <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 800309e:	f107 010c 	add.w	r1, r7, #12
 80030a2:	230a      	movs	r3, #10
 80030a4:	2201      	movs	r2, #1
 80030a6:	6838      	ldr	r0, [r7, #0]
 80030a8:	f008 f819 	bl	800b0de <HAL_UART_Transmit>

		sprintf((char*)buffer,"Skill mode!\n\r"); //Debugg uart-ra is kiküldjük, hogy milyen módban vagyunk
 80030ac:	f107 030c 	add.w	r3, r7, #12
 80030b0:	4935      	ldr	r1, [pc, #212]	; (8003188 <Mode_Selector+0x190>)
 80030b2:	4618      	mov	r0, r3
 80030b4:	f009 fd7c 	bl	800cbb0 <siprintf>
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
 80030b8:	f107 030c 	add.w	r3, r7, #12
 80030bc:	4618      	mov	r0, r3
 80030be:	f7fd f8a7 	bl	8000210 <strlen>
 80030c2:	4603      	mov	r3, r0
 80030c4:	b29a      	uxth	r2, r3
 80030c6:	f107 010c 	add.w	r1, r7, #12
 80030ca:	2364      	movs	r3, #100	; 0x64
 80030cc:	6878      	ldr	r0, [r7, #4]
 80030ce:	f008 f806 	bl	800b0de <HAL_UART_Transmit>
		LED_NUCLEO(1); //A NUCLEO zöld LED-je világít, ha ügyeségi üzemmódban vagyunk
 80030d2:	2201      	movs	r2, #1
 80030d4:	2120      	movs	r1, #32
 80030d6:	482d      	ldr	r0, [pc, #180]	; (800318c <Mode_Selector+0x194>)
 80030d8:	f005 faae 	bl	8008638 <HAL_GPIO_WritePin>
	else
	{
		sprintf((char*)buffer,"Flash error! Press blue button!\n\r");
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
	}
}
 80030dc:	e04c      	b.n	8003178 <Mode_Selector+0x180>
	else if(mode==FAST)
 80030de:	4b29      	ldr	r3, [pc, #164]	; (8003184 <Mode_Selector+0x18c>)
 80030e0:	781b      	ldrb	r3, [r3, #0]
 80030e2:	2b3f      	cmp	r3, #63	; 0x3f
 80030e4:	d135      	bne.n	8003152 <Mode_Selector+0x15a>
		buffer[0] = CMD_MODE_FAST;
 80030e6:	233f      	movs	r3, #63	; 0x3f
 80030e8:	733b      	strb	r3, [r7, #12]
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 80030ea:	f107 010c 	add.w	r1, r7, #12
 80030ee:	230a      	movs	r3, #10
 80030f0:	2201      	movs	r2, #1
 80030f2:	6838      	ldr	r0, [r7, #0]
 80030f4:	f007 fff3 	bl	800b0de <HAL_UART_Transmit>
		HAL_Delay(10);
 80030f8:	200a      	movs	r0, #10
 80030fa:	f003 fc03 	bl	8006904 <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 80030fe:	f107 010c 	add.w	r1, r7, #12
 8003102:	230a      	movs	r3, #10
 8003104:	2201      	movs	r2, #1
 8003106:	6838      	ldr	r0, [r7, #0]
 8003108:	f007 ffe9 	bl	800b0de <HAL_UART_Transmit>
		HAL_Delay(10);
 800310c:	200a      	movs	r0, #10
 800310e:	f003 fbf9 	bl	8006904 <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 8003112:	f107 010c 	add.w	r1, r7, #12
 8003116:	230a      	movs	r3, #10
 8003118:	2201      	movs	r2, #1
 800311a:	6838      	ldr	r0, [r7, #0]
 800311c:	f007 ffdf 	bl	800b0de <HAL_UART_Transmit>
		sprintf((char*)buffer,"Fast mode!\n\r");
 8003120:	f107 030c 	add.w	r3, r7, #12
 8003124:	491a      	ldr	r1, [pc, #104]	; (8003190 <Mode_Selector+0x198>)
 8003126:	4618      	mov	r0, r3
 8003128:	f009 fd42 	bl	800cbb0 <siprintf>
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
 800312c:	f107 030c 	add.w	r3, r7, #12
 8003130:	4618      	mov	r0, r3
 8003132:	f7fd f86d 	bl	8000210 <strlen>
 8003136:	4603      	mov	r3, r0
 8003138:	b29a      	uxth	r2, r3
 800313a:	f107 010c 	add.w	r1, r7, #12
 800313e:	2364      	movs	r3, #100	; 0x64
 8003140:	6878      	ldr	r0, [r7, #4]
 8003142:	f007 ffcc 	bl	800b0de <HAL_UART_Transmit>
		LED_NUCLEO(0);
 8003146:	2200      	movs	r2, #0
 8003148:	2120      	movs	r1, #32
 800314a:	4810      	ldr	r0, [pc, #64]	; (800318c <Mode_Selector+0x194>)
 800314c:	f005 fa74 	bl	8008638 <HAL_GPIO_WritePin>
}
 8003150:	e012      	b.n	8003178 <Mode_Selector+0x180>
		sprintf((char*)buffer,"Flash error! Press blue button!\n\r");
 8003152:	f107 030c 	add.w	r3, r7, #12
 8003156:	490f      	ldr	r1, [pc, #60]	; (8003194 <Mode_Selector+0x19c>)
 8003158:	4618      	mov	r0, r3
 800315a:	f009 fd29 	bl	800cbb0 <siprintf>
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
 800315e:	f107 030c 	add.w	r3, r7, #12
 8003162:	4618      	mov	r0, r3
 8003164:	f7fd f854 	bl	8000210 <strlen>
 8003168:	4603      	mov	r3, r0
 800316a:	b29a      	uxth	r2, r3
 800316c:	f107 010c 	add.w	r1, r7, #12
 8003170:	2364      	movs	r3, #100	; 0x64
 8003172:	6878      	ldr	r0, [r7, #4]
 8003174:	f007 ffb3 	bl	800b0de <HAL_UART_Transmit>
}
 8003178:	bf00      	nop
 800317a:	3738      	adds	r7, #56	; 0x38
 800317c:	46bd      	mov	sp, r7
 800317e:	bd80      	pop	{r7, pc}
 8003180:	08060000 	.word	0x08060000
 8003184:	200002a6 	.word	0x200002a6
 8003188:	08010614 	.word	0x08010614
 800318c:	40020000 	.word	0x40020000
 8003190:	08010624 	.word	0x08010624
 8003194:	08010634 	.word	0x08010634

08003198 <Wait_For_Start_Sigal>:
	HAL_UART_Transmit(huart_monitoring, data, 11, 4);
}


void Wait_For_Start_Sigal(UART_HandleTypeDef *huart_TB, UART_HandleTypeDef *huart_debugg)
{
 8003198:	b580      	push	{r7, lr}
 800319a:	b084      	sub	sp, #16
 800319c:	af00      	add	r7, sp, #0
 800319e:	6078      	str	r0, [r7, #4]
 80031a0:	6039      	str	r1, [r7, #0]
	uint8_t rcv[]={0};
 80031a2:	2300      	movs	r3, #0
 80031a4:	723b      	strb	r3, [r7, #8]
	static uint8_t cnt=5;
	if(mode!=SKILL)return;
 80031a6:	4b2f      	ldr	r3, [pc, #188]	; (8003264 <Wait_For_Start_Sigal+0xcc>)
 80031a8:	781b      	ldrb	r3, [r3, #0]
 80031aa:	2b52      	cmp	r3, #82	; 0x52
 80031ac:	d156      	bne.n	800325c <Wait_For_Start_Sigal+0xc4>
	while(1)
	{
		//Bluetooth-on érkezika  start jel
		HAL_UART_Receive(huart_TB, rcv, 1, 7000);
 80031ae:	f107 0108 	add.w	r1, r7, #8
 80031b2:	f641 3358 	movw	r3, #7000	; 0x1b58
 80031b6:	2201      	movs	r2, #1
 80031b8:	6878      	ldr	r0, [r7, #4]
 80031ba:	f008 f822 	bl	800b202 <HAL_UART_Receive>
		if(rcv[0]==cnt+0x30)
 80031be:	7a3b      	ldrb	r3, [r7, #8]
 80031c0:	461a      	mov	r2, r3
 80031c2:	4b29      	ldr	r3, [pc, #164]	; (8003268 <Wait_For_Start_Sigal+0xd0>)
 80031c4:	781b      	ldrb	r3, [r3, #0]
 80031c6:	3330      	adds	r3, #48	; 0x30
 80031c8:	429a      	cmp	r2, r3
 80031ca:	d11a      	bne.n	8003202 <Wait_For_Start_Sigal+0x6a>
		{
			if(cnt<4)
 80031cc:	4b26      	ldr	r3, [pc, #152]	; (8003268 <Wait_For_Start_Sigal+0xd0>)
 80031ce:	781b      	ldrb	r3, [r3, #0]
 80031d0:	2b03      	cmp	r3, #3
 80031d2:	d80c      	bhi.n	80031ee <Wait_For_Start_Sigal+0x56>
			{
				HAL_UART_Transmit(huart_debugg, rcv, 1, 2);
 80031d4:	f107 0108 	add.w	r1, r7, #8
 80031d8:	2302      	movs	r3, #2
 80031da:	2201      	movs	r2, #1
 80031dc:	6838      	ldr	r0, [r7, #0]
 80031de:	f007 ff7e 	bl	800b0de <HAL_UART_Transmit>
				HAL_UART_Transmit(huart_debugg, (uint8_t*)"\n\r", 2, 2);
 80031e2:	2302      	movs	r3, #2
 80031e4:	2202      	movs	r2, #2
 80031e6:	4921      	ldr	r1, [pc, #132]	; (800326c <Wait_For_Start_Sigal+0xd4>)
 80031e8:	6838      	ldr	r0, [r7, #0]
 80031ea:	f007 ff78 	bl	800b0de <HAL_UART_Transmit>
			}
			if(rcv[0]=='0')break;
 80031ee:	7a3b      	ldrb	r3, [r7, #8]
 80031f0:	2b30      	cmp	r3, #48	; 0x30
 80031f2:	d026      	beq.n	8003242 <Wait_For_Start_Sigal+0xaa>
			cnt--;
 80031f4:	4b1c      	ldr	r3, [pc, #112]	; (8003268 <Wait_For_Start_Sigal+0xd0>)
 80031f6:	781b      	ldrb	r3, [r3, #0]
 80031f8:	3b01      	subs	r3, #1
 80031fa:	b2da      	uxtb	r2, r3
 80031fc:	4b1a      	ldr	r3, [pc, #104]	; (8003268 <Wait_For_Start_Sigal+0xd0>)
 80031fe:	701a      	strb	r2, [r3, #0]
 8003200:	e002      	b.n	8003208 <Wait_For_Start_Sigal+0x70>
		}
		else cnt=5;
 8003202:	4b19      	ldr	r3, [pc, #100]	; (8003268 <Wait_For_Start_Sigal+0xd0>)
 8003204:	2205      	movs	r2, #5
 8003206:	701a      	strb	r2, [r3, #0]

		//Kézi próbaindítás
		if(B2)
 8003208:	2120      	movs	r1, #32
 800320a:	4819      	ldr	r0, [pc, #100]	; (8003270 <Wait_For_Start_Sigal+0xd8>)
 800320c:	f005 f9fc 	bl	8008608 <HAL_GPIO_ReadPin>
 8003210:	4603      	mov	r3, r0
 8003212:	2b00      	cmp	r3, #0
 8003214:	d0cb      	beq.n	80031ae <Wait_For_Start_Sigal+0x16>
		{
			int i;
			for(i=0;i<10;i++)
 8003216:	2300      	movs	r3, #0
 8003218:	60fb      	str	r3, [r7, #12]
 800321a:	e009      	b.n	8003230 <Wait_For_Start_Sigal+0x98>
			{
				LED_G_TOGGLE;
 800321c:	2102      	movs	r1, #2
 800321e:	4814      	ldr	r0, [pc, #80]	; (8003270 <Wait_For_Start_Sigal+0xd8>)
 8003220:	f005 fa23 	bl	800866a <HAL_GPIO_TogglePin>
				Delay(200);
 8003224:	20c8      	movs	r0, #200	; 0xc8
 8003226:	f002 fd19 	bl	8005c5c <Delay>
			for(i=0;i<10;i++)
 800322a:	68fb      	ldr	r3, [r7, #12]
 800322c:	3301      	adds	r3, #1
 800322e:	60fb      	str	r3, [r7, #12]
 8003230:	68fb      	ldr	r3, [r7, #12]
 8003232:	2b09      	cmp	r3, #9
 8003234:	ddf2      	ble.n	800321c <Wait_For_Start_Sigal+0x84>
			}
			LED_G(0);
 8003236:	2201      	movs	r2, #1
 8003238:	2102      	movs	r1, #2
 800323a:	480d      	ldr	r0, [pc, #52]	; (8003270 <Wait_For_Start_Sigal+0xd8>)
 800323c:	f005 f9fc 	bl	8008638 <HAL_GPIO_WritePin>
			break;//ha megnyomtuka 2-es gombot kiugrunk a while ciklusból
 8003240:	e000      	b.n	8003244 <Wait_For_Start_Sigal+0xac>
			if(rcv[0]=='0')break;
 8003242:	bf00      	nop
		}

	}
	HAL_UART_Receive_IT(huart_TB, tb_msg, 6);
 8003244:	2206      	movs	r2, #6
 8003246:	490b      	ldr	r1, [pc, #44]	; (8003274 <Wait_For_Start_Sigal+0xdc>)
 8003248:	6878      	ldr	r0, [r7, #4]
 800324a:	f008 f87c 	bl	800b346 <HAL_UART_Receive_IT>
	HAL_UART_Transmit(huart_debugg, (uint8_t*)"START!\n\r",8, 3);
 800324e:	2303      	movs	r3, #3
 8003250:	2208      	movs	r2, #8
 8003252:	4909      	ldr	r1, [pc, #36]	; (8003278 <Wait_For_Start_Sigal+0xe0>)
 8003254:	6838      	ldr	r0, [r7, #0]
 8003256:	f007 ff42 	bl	800b0de <HAL_UART_Transmit>
 800325a:	e000      	b.n	800325e <Wait_For_Start_Sigal+0xc6>
	if(mode!=SKILL)return;
 800325c:	bf00      	nop
}
 800325e:	3710      	adds	r7, #16
 8003260:	46bd      	mov	sp, r7
 8003262:	bd80      	pop	{r7, pc}
 8003264:	200002a6 	.word	0x200002a6
 8003268:	20000026 	.word	0x20000026
 800326c:	08010658 	.word	0x08010658
 8003270:	40020400 	.word	0x40020400
 8003274:	200002bc 	.word	0x200002bc
 8003278:	0801065c 	.word	0x0801065c

0800327c <Uart_Receive_Thunderboard_ISR>:
void Uart_Receive_Thunderboard_ISR(UART_HandleTypeDef *huart_TB, UART_HandleTypeDef *huart_debugg)
{
 800327c:	b580      	push	{r7, lr}
 800327e:	b082      	sub	sp, #8
 8003280:	af00      	add	r7, sp, #0
 8003282:	6078      	str	r0, [r7, #4]
 8003284:	6039      	str	r1, [r7, #0]
	static uint8_t sp[]={0};//slip protection
	static uint8_t cnt=0;
	if(tb_msg[0]>='A' && tb_msg[0]<='Z' && tb_msg[5]>='0' && tb_msg[5]<='9')
 8003286:	4b37      	ldr	r3, [pc, #220]	; (8003364 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003288:	781b      	ldrb	r3, [r3, #0]
 800328a:	2b40      	cmp	r3, #64	; 0x40
 800328c:	d93d      	bls.n	800330a <Uart_Receive_Thunderboard_ISR+0x8e>
 800328e:	4b35      	ldr	r3, [pc, #212]	; (8003364 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003290:	781b      	ldrb	r3, [r3, #0]
 8003292:	2b5a      	cmp	r3, #90	; 0x5a
 8003294:	d839      	bhi.n	800330a <Uart_Receive_Thunderboard_ISR+0x8e>
 8003296:	4b33      	ldr	r3, [pc, #204]	; (8003364 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003298:	795b      	ldrb	r3, [r3, #5]
 800329a:	2b2f      	cmp	r3, #47	; 0x2f
 800329c:	d935      	bls.n	800330a <Uart_Receive_Thunderboard_ISR+0x8e>
 800329e:	4b31      	ldr	r3, [pc, #196]	; (8003364 <Uart_Receive_Thunderboard_ISR+0xe8>)
 80032a0:	795b      	ldrb	r3, [r3, #5]
 80032a2:	2b39      	cmp	r3, #57	; 0x39
 80032a4:	d831      	bhi.n	800330a <Uart_Receive_Thunderboard_ISR+0x8e>
	{
		piratePos[0]=tb_msg[0];	piratePos[1]=tb_msg[1];	piratePos[2]=tb_msg[2];
 80032a6:	4b2f      	ldr	r3, [pc, #188]	; (8003364 <Uart_Receive_Thunderboard_ISR+0xe8>)
 80032a8:	781a      	ldrb	r2, [r3, #0]
 80032aa:	4b2f      	ldr	r3, [pc, #188]	; (8003368 <Uart_Receive_Thunderboard_ISR+0xec>)
 80032ac:	701a      	strb	r2, [r3, #0]
 80032ae:	4b2d      	ldr	r3, [pc, #180]	; (8003364 <Uart_Receive_Thunderboard_ISR+0xe8>)
 80032b0:	785a      	ldrb	r2, [r3, #1]
 80032b2:	4b2d      	ldr	r3, [pc, #180]	; (8003368 <Uart_Receive_Thunderboard_ISR+0xec>)
 80032b4:	705a      	strb	r2, [r3, #1]
 80032b6:	4b2b      	ldr	r3, [pc, #172]	; (8003364 <Uart_Receive_Thunderboard_ISR+0xe8>)
 80032b8:	789a      	ldrb	r2, [r3, #2]
 80032ba:	4b2b      	ldr	r3, [pc, #172]	; (8003368 <Uart_Receive_Thunderboard_ISR+0xec>)
 80032bc:	709a      	strb	r2, [r3, #2]
		piratePos[3]=100*(tb_msg[3]-0x30) + 10*(tb_msg[4]-0x30) + (tb_msg[5]-0x30);
 80032be:	4b29      	ldr	r3, [pc, #164]	; (8003364 <Uart_Receive_Thunderboard_ISR+0xe8>)
 80032c0:	78db      	ldrb	r3, [r3, #3]
 80032c2:	461a      	mov	r2, r3
 80032c4:	0092      	lsls	r2, r2, #2
 80032c6:	4413      	add	r3, r2
 80032c8:	461a      	mov	r2, r3
 80032ca:	0091      	lsls	r1, r2, #2
 80032cc:	461a      	mov	r2, r3
 80032ce:	460b      	mov	r3, r1
 80032d0:	4413      	add	r3, r2
 80032d2:	009b      	lsls	r3, r3, #2
 80032d4:	b2da      	uxtb	r2, r3
 80032d6:	4b23      	ldr	r3, [pc, #140]	; (8003364 <Uart_Receive_Thunderboard_ISR+0xe8>)
 80032d8:	791b      	ldrb	r3, [r3, #4]
 80032da:	4619      	mov	r1, r3
 80032dc:	0089      	lsls	r1, r1, #2
 80032de:	440b      	add	r3, r1
 80032e0:	005b      	lsls	r3, r3, #1
 80032e2:	b2db      	uxtb	r3, r3
 80032e4:	4413      	add	r3, r2
 80032e6:	b2da      	uxtb	r2, r3
 80032e8:	4b1e      	ldr	r3, [pc, #120]	; (8003364 <Uart_Receive_Thunderboard_ISR+0xe8>)
 80032ea:	795b      	ldrb	r3, [r3, #5]
 80032ec:	4413      	add	r3, r2
 80032ee:	b2db      	uxtb	r3, r3
 80032f0:	3330      	adds	r3, #48	; 0x30
 80032f2:	b2da      	uxtb	r2, r3
 80032f4:	4b1c      	ldr	r3, [pc, #112]	; (8003368 <Uart_Receive_Thunderboard_ISR+0xec>)
 80032f6:	70da      	strb	r2, [r3, #3]
		thunderboardFlag=1;
 80032f8:	4b1c      	ldr	r3, [pc, #112]	; (800336c <Uart_Receive_Thunderboard_ISR+0xf0>)
 80032fa:	2201      	movs	r2, #1
 80032fc:	701a      	strb	r2, [r3, #0]
		HAL_UART_Receive_IT(huart_TB, tb_msg, 6);
 80032fe:	2206      	movs	r2, #6
 8003300:	4918      	ldr	r1, [pc, #96]	; (8003364 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003302:	6878      	ldr	r0, [r7, #4]
 8003304:	f008 f81f 	bl	800b346 <HAL_UART_Receive_IT>
#ifdef TB_DEBUGG
		HAL_UART_Transmit(huart_debugg, tb_msg, 6, 2);
		HAL_UART_Transmit(huart_debugg, (uint8_t*)"\n\r", 2, 2);
#endif
		return;
 8003308:	e029      	b.n	800335e <Uart_Receive_Thunderboard_ISR+0xe2>
	}
	//SLIP PROTECTION
	if(sp[0]>='0' && sp[0]<='9')cnt++;
 800330a:	4b19      	ldr	r3, [pc, #100]	; (8003370 <Uart_Receive_Thunderboard_ISR+0xf4>)
 800330c:	781b      	ldrb	r3, [r3, #0]
 800330e:	2b2f      	cmp	r3, #47	; 0x2f
 8003310:	d90a      	bls.n	8003328 <Uart_Receive_Thunderboard_ISR+0xac>
 8003312:	4b17      	ldr	r3, [pc, #92]	; (8003370 <Uart_Receive_Thunderboard_ISR+0xf4>)
 8003314:	781b      	ldrb	r3, [r3, #0]
 8003316:	2b39      	cmp	r3, #57	; 0x39
 8003318:	d806      	bhi.n	8003328 <Uart_Receive_Thunderboard_ISR+0xac>
 800331a:	4b16      	ldr	r3, [pc, #88]	; (8003374 <Uart_Receive_Thunderboard_ISR+0xf8>)
 800331c:	781b      	ldrb	r3, [r3, #0]
 800331e:	3301      	adds	r3, #1
 8003320:	b2da      	uxtb	r2, r3
 8003322:	4b14      	ldr	r3, [pc, #80]	; (8003374 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003324:	701a      	strb	r2, [r3, #0]
 8003326:	e002      	b.n	800332e <Uart_Receive_Thunderboard_ISR+0xb2>
	else cnt=0;
 8003328:	4b12      	ldr	r3, [pc, #72]	; (8003374 <Uart_Receive_Thunderboard_ISR+0xf8>)
 800332a:	2200      	movs	r2, #0
 800332c:	701a      	strb	r2, [r3, #0]

	if(cnt<3) //3 darab ASCI számnak össze kell gyűlnie egymás után
 800332e:	4b11      	ldr	r3, [pc, #68]	; (8003374 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003330:	781b      	ldrb	r3, [r3, #0]
 8003332:	2b02      	cmp	r3, #2
 8003334:	d805      	bhi.n	8003342 <Uart_Receive_Thunderboard_ISR+0xc6>
	{
		HAL_UART_Receive_IT(huart_TB, sp, 1);//amig ez nincs meg addig cask egyesével olvasunk
 8003336:	2201      	movs	r2, #1
 8003338:	490d      	ldr	r1, [pc, #52]	; (8003370 <Uart_Receive_Thunderboard_ISR+0xf4>)
 800333a:	6878      	ldr	r0, [r7, #4]
 800333c:	f008 f803 	bl	800b346 <HAL_UART_Receive_IT>
 8003340:	e00d      	b.n	800335e <Uart_Receive_Thunderboard_ISR+0xe2>
	}
	else//ha megvan megint 6-ossával olvasunk
	{
		sp[0]=0;
 8003342:	4b0b      	ldr	r3, [pc, #44]	; (8003370 <Uart_Receive_Thunderboard_ISR+0xf4>)
 8003344:	2200      	movs	r2, #0
 8003346:	701a      	strb	r2, [r3, #0]
		cnt=0;
 8003348:	4b0a      	ldr	r3, [pc, #40]	; (8003374 <Uart_Receive_Thunderboard_ISR+0xf8>)
 800334a:	2200      	movs	r2, #0
 800334c:	701a      	strb	r2, [r3, #0]
		HAL_UART_Receive_IT(huart_TB, tb_msg, 6);
 800334e:	2206      	movs	r2, #6
 8003350:	4904      	ldr	r1, [pc, #16]	; (8003364 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003352:	6878      	ldr	r0, [r7, #4]
 8003354:	f007 fff7 	bl	800b346 <HAL_UART_Receive_IT>
		thunderboardFlag=1;
 8003358:	4b04      	ldr	r3, [pc, #16]	; (800336c <Uart_Receive_Thunderboard_ISR+0xf0>)
 800335a:	2201      	movs	r2, #1
 800335c:	701a      	strb	r2, [r3, #0]
	}
}
 800335e:	3708      	adds	r7, #8
 8003360:	46bd      	mov	sp, r7
 8003362:	bd80      	pop	{r7, pc}
 8003364:	200002bc 	.word	0x200002bc
 8003368:	200002c4 	.word	0x200002c4
 800336c:	200002ba 	.word	0x200002ba
 8003370:	20000680 	.word	0x20000680
 8003374:	20000681 	.word	0x20000681

08003378 <Lane_Change_Init>:


void Lane_Change_Init(void)
{
 8003378:	b480      	push	{r7}
 800337a:	af00      	add	r7, sp, #0
	N('A').worth = N('B').worth = N('C').worth = N('E').worth = 0;
 800337c:	4b32      	ldr	r3, [pc, #200]	; (8003448 <Lane_Change_Init+0xd0>)
 800337e:	2200      	movs	r2, #0
 8003380:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 8003384:	4b30      	ldr	r3, [pc, #192]	; (8003448 <Lane_Change_Init+0xd0>)
 8003386:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800338a:	4a2f      	ldr	r2, [pc, #188]	; (8003448 <Lane_Change_Init+0xd0>)
 800338c:	6553      	str	r3, [r2, #84]	; 0x54
 800338e:	4b2e      	ldr	r3, [pc, #184]	; (8003448 <Lane_Change_Init+0xd0>)
 8003390:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003392:	4a2d      	ldr	r2, [pc, #180]	; (8003448 <Lane_Change_Init+0xd0>)
 8003394:	62d3      	str	r3, [r2, #44]	; 0x2c
 8003396:	4b2c      	ldr	r3, [pc, #176]	; (8003448 <Lane_Change_Init+0xd0>)
 8003398:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800339a:	4a2b      	ldr	r2, [pc, #172]	; (8003448 <Lane_Change_Init+0xd0>)
 800339c:	6053      	str	r3, [r2, #4]
	N('F').worth = N('D').worth = N('G').worth = 1;
 800339e:	4b2a      	ldr	r3, [pc, #168]	; (8003448 <Lane_Change_Init+0xd0>)
 80033a0:	2201      	movs	r2, #1
 80033a2:	f8c3 20f4 	str.w	r2, [r3, #244]	; 0xf4
 80033a6:	4b28      	ldr	r3, [pc, #160]	; (8003448 <Lane_Change_Init+0xd0>)
 80033a8:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 80033ac:	4a26      	ldr	r2, [pc, #152]	; (8003448 <Lane_Change_Init+0xd0>)
 80033ae:	67d3      	str	r3, [r2, #124]	; 0x7c
 80033b0:	4b25      	ldr	r3, [pc, #148]	; (8003448 <Lane_Change_Init+0xd0>)
 80033b2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80033b4:	4a24      	ldr	r2, [pc, #144]	; (8003448 <Lane_Change_Init+0xd0>)
 80033b6:	f8c2 30cc 	str.w	r3, [r2, #204]	; 0xcc
	N('I').worth = 2;
 80033ba:	4b23      	ldr	r3, [pc, #140]	; (8003448 <Lane_Change_Init+0xd0>)
 80033bc:	2202      	movs	r2, #2
 80033be:	f8c3 2144 	str.w	r2, [r3, #324]	; 0x144
	N('H').worth = N('J').worth = N('K').worth = N('L').worth = N('Q').worth = N('P').worth =  4;
 80033c2:	4b21      	ldr	r3, [pc, #132]	; (8003448 <Lane_Change_Init+0xd0>)
 80033c4:	2204      	movs	r2, #4
 80033c6:	f8c3 225c 	str.w	r2, [r3, #604]	; 0x25c
 80033ca:	4b1f      	ldr	r3, [pc, #124]	; (8003448 <Lane_Change_Init+0xd0>)
 80033cc:	f8d3 325c 	ldr.w	r3, [r3, #604]	; 0x25c
 80033d0:	4a1d      	ldr	r2, [pc, #116]	; (8003448 <Lane_Change_Init+0xd0>)
 80033d2:	f8c2 3284 	str.w	r3, [r2, #644]	; 0x284
 80033d6:	4b1c      	ldr	r3, [pc, #112]	; (8003448 <Lane_Change_Init+0xd0>)
 80033d8:	f8d3 3284 	ldr.w	r3, [r3, #644]	; 0x284
 80033dc:	4a1a      	ldr	r2, [pc, #104]	; (8003448 <Lane_Change_Init+0xd0>)
 80033de:	f8c2 31bc 	str.w	r3, [r2, #444]	; 0x1bc
 80033e2:	4b19      	ldr	r3, [pc, #100]	; (8003448 <Lane_Change_Init+0xd0>)
 80033e4:	f8d3 31bc 	ldr.w	r3, [r3, #444]	; 0x1bc
 80033e8:	4a17      	ldr	r2, [pc, #92]	; (8003448 <Lane_Change_Init+0xd0>)
 80033ea:	f8c2 3194 	str.w	r3, [r2, #404]	; 0x194
 80033ee:	4b16      	ldr	r3, [pc, #88]	; (8003448 <Lane_Change_Init+0xd0>)
 80033f0:	f8d3 3194 	ldr.w	r3, [r3, #404]	; 0x194
 80033f4:	4a14      	ldr	r2, [pc, #80]	; (8003448 <Lane_Change_Init+0xd0>)
 80033f6:	f8c2 316c 	str.w	r3, [r2, #364]	; 0x16c
 80033fa:	4b13      	ldr	r3, [pc, #76]	; (8003448 <Lane_Change_Init+0xd0>)
 80033fc:	f8d3 316c 	ldr.w	r3, [r3, #364]	; 0x16c
 8003400:	4a11      	ldr	r2, [pc, #68]	; (8003448 <Lane_Change_Init+0xd0>)
 8003402:	f8c2 311c 	str.w	r3, [r2, #284]	; 0x11c
	N('N').worth = N('T').worth =8;
 8003406:	4b10      	ldr	r3, [pc, #64]	; (8003448 <Lane_Change_Init+0xd0>)
 8003408:	2208      	movs	r2, #8
 800340a:	f8c3 22fc 	str.w	r2, [r3, #764]	; 0x2fc
 800340e:	4b0e      	ldr	r3, [pc, #56]	; (8003448 <Lane_Change_Init+0xd0>)
 8003410:	f8d3 32fc 	ldr.w	r3, [r3, #764]	; 0x2fc
 8003414:	4a0c      	ldr	r2, [pc, #48]	; (8003448 <Lane_Change_Init+0xd0>)
 8003416:	f8c2 320c 	str.w	r3, [r2, #524]	; 0x20c
	N('O').worth = N('M').worth = 9;
 800341a:	4b0b      	ldr	r3, [pc, #44]	; (8003448 <Lane_Change_Init+0xd0>)
 800341c:	2209      	movs	r2, #9
 800341e:	f8c3 21e4 	str.w	r2, [r3, #484]	; 0x1e4
 8003422:	4b09      	ldr	r3, [pc, #36]	; (8003448 <Lane_Change_Init+0xd0>)
 8003424:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8003428:	4a07      	ldr	r2, [pc, #28]	; (8003448 <Lane_Change_Init+0xd0>)
 800342a:	f8c2 3234 	str.w	r3, [r2, #564]	; 0x234
	N('U').worth = 16;
 800342e:	4b06      	ldr	r3, [pc, #24]	; (8003448 <Lane_Change_Init+0xd0>)
 8003430:	2210      	movs	r2, #16
 8003432:	f8c3 2324 	str.w	r2, [r3, #804]	; 0x324
	N('V').worth = 32;
 8003436:	4b04      	ldr	r3, [pc, #16]	; (8003448 <Lane_Change_Init+0xd0>)
 8003438:	2220      	movs	r2, #32
 800343a:	f8c3 234c 	str.w	r2, [r3, #844]	; 0x34c
}
 800343e:	bf00      	nop
 8003440:	46bd      	mov	sp, r7
 8003442:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003446:	4770      	bx	lr
 8003448:	200002c8 	.word	0x200002c8
 800344c:	00000000 	.word	0x00000000

08003450 <Battery_Voltage_Compensate>:
float v=0;
//ha 1000 akkor a motor full csutkán megy előre
//ha -1000 akkor a motor full csutkán megy hátra

void Battery_Voltage_Compensate(ADC_HandleTypeDef *hadc_UNiMh,ADC_HandleTypeDef *hadc_ULiPo,UART_HandleTypeDef *huart_debugg)
{
 8003450:	b580      	push	{r7, lr}
 8003452:	b090      	sub	sp, #64	; 0x40
 8003454:	af00      	add	r7, sp, #0
 8003456:	60f8      	str	r0, [r7, #12]
 8003458:	60b9      	str	r1, [r7, #8]
 800345a:	607a      	str	r2, [r7, #4]
	char msg[30];
	uint32_t raw=0;
 800345c:	2300      	movs	r3, #0
 800345e:	63fb      	str	r3, [r7, #60]	; 0x3c
	float bat;
	int i;

	//NiMh akku mérése
	for(i=0;i<20;i++)
 8003460:	2300      	movs	r3, #0
 8003462:	63bb      	str	r3, [r7, #56]	; 0x38
 8003464:	e016      	b.n	8003494 <Battery_Voltage_Compensate+0x44>
	{
		HAL_ADC_Start(hadc_UNiMh);
 8003466:	68f8      	ldr	r0, [r7, #12]
 8003468:	f003 fab4 	bl	80069d4 <HAL_ADC_Start>
		HAL_Delay(10);
 800346c:	200a      	movs	r0, #10
 800346e:	f003 fa49 	bl	8006904 <HAL_Delay>
		HAL_ADC_PollForConversion(hadc_UNiMh,20);
 8003472:	2114      	movs	r1, #20
 8003474:	68f8      	ldr	r0, [r7, #12]
 8003476:	f003 fb7f 	bl	8006b78 <HAL_ADC_PollForConversion>
		HAL_Delay(10);
 800347a:	200a      	movs	r0, #10
 800347c:	f003 fa42 	bl	8006904 <HAL_Delay>
		raw += HAL_ADC_GetValue(hadc_UNiMh);
 8003480:	68f8      	ldr	r0, [r7, #12]
 8003482:	f003 fc04 	bl	8006c8e <HAL_ADC_GetValue>
 8003486:	4602      	mov	r2, r0
 8003488:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800348a:	4413      	add	r3, r2
 800348c:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(i=0;i<20;i++)
 800348e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003490:	3301      	adds	r3, #1
 8003492:	63bb      	str	r3, [r7, #56]	; 0x38
 8003494:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003496:	2b13      	cmp	r3, #19
 8003498:	dde5      	ble.n	8003466 <Battery_Voltage_Compensate+0x16>
	}
	bat=(float)raw * 0.00460575 / 20.0;//ez a mi feszültségünk V-ban
 800349a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800349c:	ee07 3a90 	vmov	s15, r3
 80034a0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80034a4:	ee17 0a90 	vmov	r0, s15
 80034a8:	f7fd f86e 	bl	8000588 <__aeabi_f2d>
 80034ac:	a37b      	add	r3, pc, #492	; (adr r3, 800369c <Battery_Voltage_Compensate+0x24c>)
 80034ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80034b2:	f7fd f8c1 	bl	8000638 <__aeabi_dmul>
 80034b6:	4602      	mov	r2, r0
 80034b8:	460b      	mov	r3, r1
 80034ba:	4610      	mov	r0, r2
 80034bc:	4619      	mov	r1, r3
 80034be:	f04f 0200 	mov.w	r2, #0
 80034c2:	4b71      	ldr	r3, [pc, #452]	; (8003688 <Battery_Voltage_Compensate+0x238>)
 80034c4:	f7fd f9e2 	bl	800088c <__aeabi_ddiv>
 80034c8:	4602      	mov	r2, r0
 80034ca:	460b      	mov	r3, r1
 80034cc:	4610      	mov	r0, r2
 80034ce:	4619      	mov	r1, r3
 80034d0:	f7fd fb8a 	bl	8000be8 <__aeabi_d2f>
 80034d4:	4603      	mov	r3, r0
 80034d6:	637b      	str	r3, [r7, #52]	; 0x34
	sprintf(msg,"NiMh charge: %2.2f V \r\n", bat);
 80034d8:	6b78      	ldr	r0, [r7, #52]	; 0x34
 80034da:	f7fd f855 	bl	8000588 <__aeabi_f2d>
 80034de:	4602      	mov	r2, r0
 80034e0:	460b      	mov	r3, r1
 80034e2:	f107 0014 	add.w	r0, r7, #20
 80034e6:	4969      	ldr	r1, [pc, #420]	; (800368c <Battery_Voltage_Compensate+0x23c>)
 80034e8:	f009 fb62 	bl	800cbb0 <siprintf>
	HAL_UART_Transmit(huart_debugg, (uint8_t*) msg, strlen(msg),10);
 80034ec:	f107 0314 	add.w	r3, r7, #20
 80034f0:	4618      	mov	r0, r3
 80034f2:	f7fc fe8d 	bl	8000210 <strlen>
 80034f6:	4603      	mov	r3, r0
 80034f8:	b29a      	uxth	r2, r3
 80034fa:	f107 0114 	add.w	r1, r7, #20
 80034fe:	230a      	movs	r3, #10
 8003500:	6878      	ldr	r0, [r7, #4]
 8003502:	f007 fdec 	bl	800b0de <HAL_UART_Transmit>

	if(bat)compensation=7.75/bat;
 8003506:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800350a:	eef5 7a40 	vcmp.f32	s15, #0.0
 800350e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003512:	d009      	beq.n	8003528 <Battery_Voltage_Compensate+0xd8>
 8003514:	eef1 6a0f 	vmov.f32	s13, #31	; 0x40f80000  7.750
 8003518:	ed97 7a0d 	vldr	s14, [r7, #52]	; 0x34
 800351c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003520:	4b5b      	ldr	r3, [pc, #364]	; (8003690 <Battery_Voltage_Compensate+0x240>)
 8003522:	edc3 7a00 	vstr	s15, [r3]
 8003526:	e003      	b.n	8003530 <Battery_Voltage_Compensate+0xe0>
	else compensation=1;
 8003528:	4b59      	ldr	r3, [pc, #356]	; (8003690 <Battery_Voltage_Compensate+0x240>)
 800352a:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800352e:	601a      	str	r2, [r3, #0]

	if(bat < 7.2)
 8003530:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8003532:	f7fd f829 	bl	8000588 <__aeabi_f2d>
 8003536:	a34e      	add	r3, pc, #312	; (adr r3, 8003670 <Battery_Voltage_Compensate+0x220>)
 8003538:	e9d3 2300 	ldrd	r2, r3, [r3]
 800353c:	f7fd faee 	bl	8000b1c <__aeabi_dcmplt>
 8003540:	4603      	mov	r3, r0
 8003542:	2b00      	cmp	r3, #0
 8003544:	d010      	beq.n	8003568 <Battery_Voltage_Compensate+0x118>
	{
		for(i=0;i<10;i++)
 8003546:	2300      	movs	r3, #0
 8003548:	63bb      	str	r3, [r7, #56]	; 0x38
 800354a:	e00a      	b.n	8003562 <Battery_Voltage_Compensate+0x112>
		{
			LED_Y_TOGGLE;
 800354c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8003550:	4850      	ldr	r0, [pc, #320]	; (8003694 <Battery_Voltage_Compensate+0x244>)
 8003552:	f005 f88a 	bl	800866a <HAL_GPIO_TogglePin>
			HAL_Delay(200);
 8003556:	20c8      	movs	r0, #200	; 0xc8
 8003558:	f003 f9d4 	bl	8006904 <HAL_Delay>
		for(i=0;i<10;i++)
 800355c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800355e:	3301      	adds	r3, #1
 8003560:	63bb      	str	r3, [r7, #56]	; 0x38
 8003562:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003564:	2b09      	cmp	r3, #9
 8003566:	ddf1      	ble.n	800354c <Battery_Voltage_Compensate+0xfc>
		}
	}

	//LiPo akku mérése
	raw=0;
 8003568:	2300      	movs	r3, #0
 800356a:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(i=0;i<20;i++)
 800356c:	2300      	movs	r3, #0
 800356e:	63bb      	str	r3, [r7, #56]	; 0x38
 8003570:	e016      	b.n	80035a0 <Battery_Voltage_Compensate+0x150>
	{
		HAL_ADC_Start(hadc_ULiPo);
 8003572:	68b8      	ldr	r0, [r7, #8]
 8003574:	f003 fa2e 	bl	80069d4 <HAL_ADC_Start>
		HAL_Delay(10);
 8003578:	200a      	movs	r0, #10
 800357a:	f003 f9c3 	bl	8006904 <HAL_Delay>
		HAL_ADC_PollForConversion(hadc_ULiPo,20);
 800357e:	2114      	movs	r1, #20
 8003580:	68b8      	ldr	r0, [r7, #8]
 8003582:	f003 faf9 	bl	8006b78 <HAL_ADC_PollForConversion>
		HAL_Delay(10);
 8003586:	200a      	movs	r0, #10
 8003588:	f003 f9bc 	bl	8006904 <HAL_Delay>
		raw += HAL_ADC_GetValue(hadc_ULiPo);
 800358c:	68b8      	ldr	r0, [r7, #8]
 800358e:	f003 fb7e 	bl	8006c8e <HAL_ADC_GetValue>
 8003592:	4602      	mov	r2, r0
 8003594:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003596:	4413      	add	r3, r2
 8003598:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(i=0;i<20;i++)
 800359a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800359c:	3301      	adds	r3, #1
 800359e:	63bb      	str	r3, [r7, #56]	; 0x38
 80035a0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80035a2:	2b13      	cmp	r3, #19
 80035a4:	dde5      	ble.n	8003572 <Battery_Voltage_Compensate+0x122>

	}
	bat = (float)raw * 0.003241242 / 20.0 + 0.02;//ez a mi feszültségünk V-ban
 80035a6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80035a8:	ee07 3a90 	vmov	s15, r3
 80035ac:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80035b0:	ee17 0a90 	vmov	r0, s15
 80035b4:	f7fc ffe8 	bl	8000588 <__aeabi_f2d>
 80035b8:	a32f      	add	r3, pc, #188	; (adr r3, 8003678 <Battery_Voltage_Compensate+0x228>)
 80035ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80035be:	f7fd f83b 	bl	8000638 <__aeabi_dmul>
 80035c2:	4602      	mov	r2, r0
 80035c4:	460b      	mov	r3, r1
 80035c6:	4610      	mov	r0, r2
 80035c8:	4619      	mov	r1, r3
 80035ca:	f04f 0200 	mov.w	r2, #0
 80035ce:	4b2e      	ldr	r3, [pc, #184]	; (8003688 <Battery_Voltage_Compensate+0x238>)
 80035d0:	f7fd f95c 	bl	800088c <__aeabi_ddiv>
 80035d4:	4602      	mov	r2, r0
 80035d6:	460b      	mov	r3, r1
 80035d8:	4610      	mov	r0, r2
 80035da:	4619      	mov	r1, r3
 80035dc:	a328      	add	r3, pc, #160	; (adr r3, 8003680 <Battery_Voltage_Compensate+0x230>)
 80035de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80035e2:	f7fc fe73 	bl	80002cc <__adddf3>
 80035e6:	4602      	mov	r2, r0
 80035e8:	460b      	mov	r3, r1
 80035ea:	4610      	mov	r0, r2
 80035ec:	4619      	mov	r1, r3
 80035ee:	f7fd fafb 	bl	8000be8 <__aeabi_d2f>
 80035f2:	4603      	mov	r3, r0
 80035f4:	637b      	str	r3, [r7, #52]	; 0x34
	sprintf(msg,"LiPo charge: %2.2f V \r\n", bat);
 80035f6:	6b78      	ldr	r0, [r7, #52]	; 0x34
 80035f8:	f7fc ffc6 	bl	8000588 <__aeabi_f2d>
 80035fc:	4602      	mov	r2, r0
 80035fe:	460b      	mov	r3, r1
 8003600:	f107 0014 	add.w	r0, r7, #20
 8003604:	4924      	ldr	r1, [pc, #144]	; (8003698 <Battery_Voltage_Compensate+0x248>)
 8003606:	f009 fad3 	bl	800cbb0 <siprintf>
	HAL_UART_Transmit(huart_debugg, (uint8_t*)msg, strlen(msg),10);
 800360a:	f107 0314 	add.w	r3, r7, #20
 800360e:	4618      	mov	r0, r3
 8003610:	f7fc fdfe 	bl	8000210 <strlen>
 8003614:	4603      	mov	r3, r0
 8003616:	b29a      	uxth	r2, r3
 8003618:	f107 0114 	add.w	r1, r7, #20
 800361c:	230a      	movs	r3, #10
 800361e:	6878      	ldr	r0, [r7, #4]
 8003620:	f007 fd5d 	bl	800b0de <HAL_UART_Transmit>

	/**/
	if(bat < 10)
 8003624:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8003628:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800362c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003630:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003634:	d510      	bpl.n	8003658 <Battery_Voltage_Compensate+0x208>
	{
		for(i=0;i<20;i++)
 8003636:	2300      	movs	r3, #0
 8003638:	63bb      	str	r3, [r7, #56]	; 0x38
 800363a:	e00a      	b.n	8003652 <Battery_Voltage_Compensate+0x202>
		{
			LED_Y_TOGGLE;
 800363c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8003640:	4814      	ldr	r0, [pc, #80]	; (8003694 <Battery_Voltage_Compensate+0x244>)
 8003642:	f005 f812 	bl	800866a <HAL_GPIO_TogglePin>
			HAL_Delay(200);
 8003646:	20c8      	movs	r0, #200	; 0xc8
 8003648:	f003 f95c 	bl	8006904 <HAL_Delay>
		for(i=0;i<20;i++)
 800364c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800364e:	3301      	adds	r3, #1
 8003650:	63bb      	str	r3, [r7, #56]	; 0x38
 8003652:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003654:	2b13      	cmp	r3, #19
 8003656:	ddf1      	ble.n	800363c <Battery_Voltage_Compensate+0x1ec>
		}
	}

	LED_Y(0);
 8003658:	2201      	movs	r2, #1
 800365a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800365e:	480d      	ldr	r0, [pc, #52]	; (8003694 <Battery_Voltage_Compensate+0x244>)
 8003660:	f004 ffea 	bl	8008638 <HAL_GPIO_WritePin>

}
 8003664:	bf00      	nop
 8003666:	3740      	adds	r7, #64	; 0x40
 8003668:	46bd      	mov	sp, r7
 800366a:	bd80      	pop	{r7, pc}
 800366c:	f3af 8000 	nop.w
 8003670:	cccccccd 	.word	0xcccccccd
 8003674:	401ccccc 	.word	0x401ccccc
 8003678:	8c6df334 	.word	0x8c6df334
 800367c:	3f6a8d60 	.word	0x3f6a8d60
 8003680:	47ae147b 	.word	0x47ae147b
 8003684:	3f947ae1 	.word	0x3f947ae1
 8003688:	40340000 	.word	0x40340000
 800368c:	08010668 	.word	0x08010668
 8003690:	20000028 	.word	0x20000028
 8003694:	40020400 	.word	0x40020400
 8003698:	08010680 	.word	0x08010680
 800369c:	99fa11a9 	.word	0x99fa11a9
 80036a0:	3f72dd7a 	.word	0x3f72dd7a
 80036a4:	00000000 	.word	0x00000000

080036a8 <Measure_Velocity_Task>:

void Measure_Velocity_Task(TIM_HandleTypeDef *htim_encoder,uint32_t tick, uint32_t period)
{
 80036a8:	b5b0      	push	{r4, r5, r7, lr}
 80036aa:	b086      	sub	sp, #24
 80036ac:	af00      	add	r7, sp, #0
 80036ae:	60f8      	str	r0, [r7, #12]
 80036b0:	60b9      	str	r1, [r7, #8]
 80036b2:	607a      	str	r2, [r7, #4]
	static uint32_t tick_prev=0;
	static uint32_t measure_v_task_tick=4;
	static float alpha=0.3;
	static float invalpha=0.7;
	float v_uj=0;
 80036b4:	f04f 0300 	mov.w	r3, #0
 80036b8:	617b      	str	r3, [r7, #20]

	if(measure_v_task_tick>tick) return;
 80036ba:	4b31      	ldr	r3, [pc, #196]	; (8003780 <Measure_Velocity_Task+0xd8>)
 80036bc:	681b      	ldr	r3, [r3, #0]
 80036be:	68ba      	ldr	r2, [r7, #8]
 80036c0:	429a      	cmp	r2, r3
 80036c2:	d354      	bcc.n	800376e <Measure_Velocity_Task+0xc6>
	measure_v_task_tick= tick + period;
 80036c4:	68ba      	ldr	r2, [r7, #8]
 80036c6:	687b      	ldr	r3, [r7, #4]
 80036c8:	4413      	add	r3, r2
 80036ca:	4a2d      	ldr	r2, [pc, #180]	; (8003780 <Measure_Velocity_Task+0xd8>)
 80036cc:	6013      	str	r3, [r2, #0]
	if(!tick_prev)
 80036ce:	4b2d      	ldr	r3, [pc, #180]	; (8003784 <Measure_Velocity_Task+0xdc>)
 80036d0:	681b      	ldr	r3, [r3, #0]
 80036d2:	2b00      	cmp	r3, #0
 80036d4:	d103      	bne.n	80036de <Measure_Velocity_Task+0x36>
	{
		tick_prev=tick;
 80036d6:	4a2b      	ldr	r2, [pc, #172]	; (8003784 <Measure_Velocity_Task+0xdc>)
 80036d8:	68bb      	ldr	r3, [r7, #8]
 80036da:	6013      	str	r3, [r2, #0]
		return;
 80036dc:	e048      	b.n	8003770 <Measure_Velocity_Task+0xc8>
	}
	v_uj =((float) 0x8000 - (float) __HAL_TIM_GET_COUNTER(htim_encoder))*7.49/(float)period; //mm/s dimenzió
 80036de:	68fb      	ldr	r3, [r7, #12]
 80036e0:	681b      	ldr	r3, [r3, #0]
 80036e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80036e4:	ee07 3a90 	vmov	s15, r3
 80036e8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80036ec:	ed9f 7a26 	vldr	s14, [pc, #152]	; 8003788 <Measure_Velocity_Task+0xe0>
 80036f0:	ee77 7a67 	vsub.f32	s15, s14, s15
 80036f4:	ee17 0a90 	vmov	r0, s15
 80036f8:	f7fc ff46 	bl	8000588 <__aeabi_f2d>
 80036fc:	a31e      	add	r3, pc, #120	; (adr r3, 8003778 <Measure_Velocity_Task+0xd0>)
 80036fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003702:	f7fc ff99 	bl	8000638 <__aeabi_dmul>
 8003706:	4602      	mov	r2, r0
 8003708:	460b      	mov	r3, r1
 800370a:	4614      	mov	r4, r2
 800370c:	461d      	mov	r5, r3
 800370e:	687b      	ldr	r3, [r7, #4]
 8003710:	ee07 3a90 	vmov	s15, r3
 8003714:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003718:	ee17 0a90 	vmov	r0, s15
 800371c:	f7fc ff34 	bl	8000588 <__aeabi_f2d>
 8003720:	4602      	mov	r2, r0
 8003722:	460b      	mov	r3, r1
 8003724:	4620      	mov	r0, r4
 8003726:	4629      	mov	r1, r5
 8003728:	f7fd f8b0 	bl	800088c <__aeabi_ddiv>
 800372c:	4602      	mov	r2, r0
 800372e:	460b      	mov	r3, r1
 8003730:	4610      	mov	r0, r2
 8003732:	4619      	mov	r1, r3
 8003734:	f7fd fa58 	bl	8000be8 <__aeabi_d2f>
 8003738:	4603      	mov	r3, r0
 800373a:	617b      	str	r3, [r7, #20]
	TIM8->CNT=0x8000;
 800373c:	4b13      	ldr	r3, [pc, #76]	; (800378c <Measure_Velocity_Task+0xe4>)
 800373e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8003742:	625a      	str	r2, [r3, #36]	; 0x24
	//tick_prev=tick;
	//exponenciális szűrés
	v = alpha*(float)v_uj + invalpha*v;
 8003744:	4b12      	ldr	r3, [pc, #72]	; (8003790 <Measure_Velocity_Task+0xe8>)
 8003746:	ed93 7a00 	vldr	s14, [r3]
 800374a:	edd7 7a05 	vldr	s15, [r7, #20]
 800374e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8003752:	4b10      	ldr	r3, [pc, #64]	; (8003794 <Measure_Velocity_Task+0xec>)
 8003754:	edd3 6a00 	vldr	s13, [r3]
 8003758:	4b0f      	ldr	r3, [pc, #60]	; (8003798 <Measure_Velocity_Task+0xf0>)
 800375a:	edd3 7a00 	vldr	s15, [r3]
 800375e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8003762:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003766:	4b0c      	ldr	r3, [pc, #48]	; (8003798 <Measure_Velocity_Task+0xf0>)
 8003768:	edc3 7a00 	vstr	s15, [r3]
 800376c:	e000      	b.n	8003770 <Measure_Velocity_Task+0xc8>
	if(measure_v_task_tick>tick) return;
 800376e:	bf00      	nop
}
 8003770:	3718      	adds	r7, #24
 8003772:	46bd      	mov	sp, r7
 8003774:	bdb0      	pop	{r4, r5, r7, pc}
 8003776:	bf00      	nop
 8003778:	8f5c28f6 	.word	0x8f5c28f6
 800377c:	401df5c2 	.word	0x401df5c2
 8003780:	2000002c 	.word	0x2000002c
 8003784:	20000688 	.word	0x20000688
 8003788:	47000000 	.word	0x47000000
 800378c:	40010400 	.word	0x40010400
 8003790:	20000030 	.word	0x20000030
 8003794:	20000034 	.word	0x20000034
 8003798:	20000684 	.word	0x20000684
 800379c:	00000000 	.word	0x00000000

080037a0 <Motor_Drive_Task>:

void Motor_Drive_Task(TIM_HandleTypeDef *htim_motor, UART_HandleTypeDef *huart, uint32_t tick, uint32_t period) //DUTY paramtert kiszedtem -> változtassuk a globális változót
{
 80037a0:	b5b0      	push	{r4, r5, r7, lr}
 80037a2:	b086      	sub	sp, #24
 80037a4:	af00      	add	r7, sp, #0
 80037a6:	60f8      	str	r0, [r7, #12]
 80037a8:	60b9      	str	r1, [r7, #8]
 80037aa:	607a      	str	r2, [r7, #4]
 80037ac:	603b      	str	r3, [r7, #0]
	static uint32_t motor_drive_task_tick=5;
	static float f,u=0;

	int32_t ccr1;
	int32_t ccr2;
	if(motor_drive_task_tick>tick) return;
 80037ae:	4ba4      	ldr	r3, [pc, #656]	; (8003a40 <Motor_Drive_Task+0x2a0>)
 80037b0:	681b      	ldr	r3, [r3, #0]
 80037b2:	687a      	ldr	r2, [r7, #4]
 80037b4:	429a      	cmp	r2, r3
 80037b6:	f0c0 8133 	bcc.w	8003a20 <Motor_Drive_Task+0x280>
	motor_drive_task_tick= tick + period;
 80037ba:	687a      	ldr	r2, [r7, #4]
 80037bc:	683b      	ldr	r3, [r7, #0]
 80037be:	4413      	add	r3, r2
 80037c0:	4a9f      	ldr	r2, [pc, #636]	; (8003a40 <Motor_Drive_Task+0x2a0>)
 80037c2:	6013      	str	r3, [r2, #0]

	if(motorEnRemote && motorEnLineOk) //ha nem nyomtunk vészstopot és az akkuk is rendben vannak akkor pöröghet a motor
 80037c4:	4b9f      	ldr	r3, [pc, #636]	; (8003a44 <Motor_Drive_Task+0x2a4>)
 80037c6:	781b      	ldrb	r3, [r3, #0]
 80037c8:	2b00      	cmp	r3, #0
 80037ca:	f000 80da 	beq.w	8003982 <Motor_Drive_Task+0x1e2>
 80037ce:	4b9e      	ldr	r3, [pc, #632]	; (8003a48 <Motor_Drive_Task+0x2a8>)
 80037d0:	781b      	ldrb	r3, [r3, #0]
 80037d2:	2b00      	cmp	r3, #0
 80037d4:	f000 80d5 	beq.w	8003982 <Motor_Drive_Task+0x1e2>
	{
		//az u paraméter a bevatkozó jel minusz holtásávot adja meg
		u= KC * (v_ref - v) * compensation + f;
 80037d8:	4b9c      	ldr	r3, [pc, #624]	; (8003a4c <Motor_Drive_Task+0x2ac>)
 80037da:	ed93 7a00 	vldr	s14, [r3]
 80037de:	4b9c      	ldr	r3, [pc, #624]	; (8003a50 <Motor_Drive_Task+0x2b0>)
 80037e0:	edd3 7a00 	vldr	s15, [r3]
 80037e4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80037e8:	ee17 0a90 	vmov	r0, s15
 80037ec:	f7fc fecc 	bl	8000588 <__aeabi_f2d>
 80037f0:	a38d      	add	r3, pc, #564	; (adr r3, 8003a28 <Motor_Drive_Task+0x288>)
 80037f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037f6:	f7fc ff1f 	bl	8000638 <__aeabi_dmul>
 80037fa:	4602      	mov	r2, r0
 80037fc:	460b      	mov	r3, r1
 80037fe:	4614      	mov	r4, r2
 8003800:	461d      	mov	r5, r3
 8003802:	4b94      	ldr	r3, [pc, #592]	; (8003a54 <Motor_Drive_Task+0x2b4>)
 8003804:	681b      	ldr	r3, [r3, #0]
 8003806:	4618      	mov	r0, r3
 8003808:	f7fc febe 	bl	8000588 <__aeabi_f2d>
 800380c:	4602      	mov	r2, r0
 800380e:	460b      	mov	r3, r1
 8003810:	4620      	mov	r0, r4
 8003812:	4629      	mov	r1, r5
 8003814:	f7fc ff10 	bl	8000638 <__aeabi_dmul>
 8003818:	4602      	mov	r2, r0
 800381a:	460b      	mov	r3, r1
 800381c:	4614      	mov	r4, r2
 800381e:	461d      	mov	r5, r3
 8003820:	4b8d      	ldr	r3, [pc, #564]	; (8003a58 <Motor_Drive_Task+0x2b8>)
 8003822:	681b      	ldr	r3, [r3, #0]
 8003824:	4618      	mov	r0, r3
 8003826:	f7fc feaf 	bl	8000588 <__aeabi_f2d>
 800382a:	4602      	mov	r2, r0
 800382c:	460b      	mov	r3, r1
 800382e:	4620      	mov	r0, r4
 8003830:	4629      	mov	r1, r5
 8003832:	f7fc fd4b 	bl	80002cc <__adddf3>
 8003836:	4602      	mov	r2, r0
 8003838:	460b      	mov	r3, r1
 800383a:	4610      	mov	r0, r2
 800383c:	4619      	mov	r1, r3
 800383e:	f7fd f9d3 	bl	8000be8 <__aeabi_d2f>
 8003842:	4603      	mov	r3, r0
 8003844:	4a85      	ldr	r2, [pc, #532]	; (8003a5c <Motor_Drive_Task+0x2bc>)
 8003846:	6013      	str	r3, [r2, #0]
		if(u>880) u=880;
 8003848:	4b84      	ldr	r3, [pc, #528]	; (8003a5c <Motor_Drive_Task+0x2bc>)
 800384a:	edd3 7a00 	vldr	s15, [r3]
 800384e:	ed9f 7a84 	vldr	s14, [pc, #528]	; 8003a60 <Motor_Drive_Task+0x2c0>
 8003852:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003856:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800385a:	dd03      	ble.n	8003864 <Motor_Drive_Task+0xc4>
 800385c:	4b7f      	ldr	r3, [pc, #508]	; (8003a5c <Motor_Drive_Task+0x2bc>)
 800385e:	4a81      	ldr	r2, [pc, #516]	; (8003a64 <Motor_Drive_Task+0x2c4>)
 8003860:	601a      	str	r2, [r3, #0]
 8003862:	e00c      	b.n	800387e <Motor_Drive_Task+0xde>
		else if(u<-500)u=-500;
 8003864:	4b7d      	ldr	r3, [pc, #500]	; (8003a5c <Motor_Drive_Task+0x2bc>)
 8003866:	edd3 7a00 	vldr	s15, [r3]
 800386a:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 8003a68 <Motor_Drive_Task+0x2c8>
 800386e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003872:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003876:	d502      	bpl.n	800387e <Motor_Drive_Task+0xde>
 8003878:	4b78      	ldr	r3, [pc, #480]	; (8003a5c <Motor_Drive_Task+0x2bc>)
 800387a:	4a7c      	ldr	r2, [pc, #496]	; (8003a6c <Motor_Drive_Task+0x2cc>)
 800387c:	601a      	str	r2, [r3, #0]
		f = ZD*f + (1-ZD)*u;
 800387e:	4b76      	ldr	r3, [pc, #472]	; (8003a58 <Motor_Drive_Task+0x2b8>)
 8003880:	681b      	ldr	r3, [r3, #0]
 8003882:	4618      	mov	r0, r3
 8003884:	f7fc fe80 	bl	8000588 <__aeabi_f2d>
 8003888:	a369      	add	r3, pc, #420	; (adr r3, 8003a30 <Motor_Drive_Task+0x290>)
 800388a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800388e:	f7fc fed3 	bl	8000638 <__aeabi_dmul>
 8003892:	4602      	mov	r2, r0
 8003894:	460b      	mov	r3, r1
 8003896:	4614      	mov	r4, r2
 8003898:	461d      	mov	r5, r3
 800389a:	4b70      	ldr	r3, [pc, #448]	; (8003a5c <Motor_Drive_Task+0x2bc>)
 800389c:	681b      	ldr	r3, [r3, #0]
 800389e:	4618      	mov	r0, r3
 80038a0:	f7fc fe72 	bl	8000588 <__aeabi_f2d>
 80038a4:	a364      	add	r3, pc, #400	; (adr r3, 8003a38 <Motor_Drive_Task+0x298>)
 80038a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80038aa:	f7fc fec5 	bl	8000638 <__aeabi_dmul>
 80038ae:	4602      	mov	r2, r0
 80038b0:	460b      	mov	r3, r1
 80038b2:	4620      	mov	r0, r4
 80038b4:	4629      	mov	r1, r5
 80038b6:	f7fc fd09 	bl	80002cc <__adddf3>
 80038ba:	4602      	mov	r2, r0
 80038bc:	460b      	mov	r3, r1
 80038be:	4610      	mov	r0, r2
 80038c0:	4619      	mov	r1, r3
 80038c2:	f7fd f991 	bl	8000be8 <__aeabi_d2f>
 80038c6:	4603      	mov	r3, r0
 80038c8:	4a63      	ldr	r2, [pc, #396]	; (8003a58 <Motor_Drive_Task+0x2b8>)
 80038ca:	6013      	str	r3, [r2, #0]
		//ez alapján a kiadandó kitöltési tényező
		if(u>0) motorDuty=(int)u+70;
 80038cc:	4b63      	ldr	r3, [pc, #396]	; (8003a5c <Motor_Drive_Task+0x2bc>)
 80038ce:	edd3 7a00 	vldr	s15, [r3]
 80038d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80038d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80038da:	dd0a      	ble.n	80038f2 <Motor_Drive_Task+0x152>
 80038dc:	4b5f      	ldr	r3, [pc, #380]	; (8003a5c <Motor_Drive_Task+0x2bc>)
 80038de:	edd3 7a00 	vldr	s15, [r3]
 80038e2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80038e6:	ee17 3a90 	vmov	r3, s15
 80038ea:	3346      	adds	r3, #70	; 0x46
 80038ec:	4a60      	ldr	r2, [pc, #384]	; (8003a70 <Motor_Drive_Task+0x2d0>)
 80038ee:	6013      	str	r3, [r2, #0]
 80038f0:	e01b      	b.n	800392a <Motor_Drive_Task+0x18a>
		else if(u<0) motorDuty=(int)u-70;
 80038f2:	4b5a      	ldr	r3, [pc, #360]	; (8003a5c <Motor_Drive_Task+0x2bc>)
 80038f4:	edd3 7a00 	vldr	s15, [r3]
 80038f8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80038fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003900:	d50a      	bpl.n	8003918 <Motor_Drive_Task+0x178>
 8003902:	4b56      	ldr	r3, [pc, #344]	; (8003a5c <Motor_Drive_Task+0x2bc>)
 8003904:	edd3 7a00 	vldr	s15, [r3]
 8003908:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800390c:	ee17 3a90 	vmov	r3, s15
 8003910:	3b46      	subs	r3, #70	; 0x46
 8003912:	4a57      	ldr	r2, [pc, #348]	; (8003a70 <Motor_Drive_Task+0x2d0>)
 8003914:	6013      	str	r3, [r2, #0]
 8003916:	e008      	b.n	800392a <Motor_Drive_Task+0x18a>
		else motorDuty=(int)u;
 8003918:	4b50      	ldr	r3, [pc, #320]	; (8003a5c <Motor_Drive_Task+0x2bc>)
 800391a:	edd3 7a00 	vldr	s15, [r3]
 800391e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003922:	ee17 2a90 	vmov	r2, s15
 8003926:	4b52      	ldr	r3, [pc, #328]	; (8003a70 <Motor_Drive_Task+0x2d0>)
 8003928:	601a      	str	r2, [r3, #0]
		MOTOR_EN(1);
 800392a:	2201      	movs	r2, #1
 800392c:	2140      	movs	r1, #64	; 0x40
 800392e:	4851      	ldr	r0, [pc, #324]	; (8003a74 <Motor_Drive_Task+0x2d4>)
 8003930:	f004 fe82 	bl	8008638 <HAL_GPIO_WritePin>
		if(fabs(v_ref)<70 && fabs(v)<70)
 8003934:	4b45      	ldr	r3, [pc, #276]	; (8003a4c <Motor_Drive_Task+0x2ac>)
 8003936:	edd3 7a00 	vldr	s15, [r3]
 800393a:	eef0 7ae7 	vabs.f32	s15, s15
 800393e:	ed9f 7a4e 	vldr	s14, [pc, #312]	; 8003a78 <Motor_Drive_Task+0x2d8>
 8003942:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003946:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800394a:	d527      	bpl.n	800399c <Motor_Drive_Task+0x1fc>
 800394c:	4b40      	ldr	r3, [pc, #256]	; (8003a50 <Motor_Drive_Task+0x2b0>)
 800394e:	edd3 7a00 	vldr	s15, [r3]
 8003952:	eef0 7ae7 	vabs.f32	s15, s15
 8003956:	ed9f 7a48 	vldr	s14, [pc, #288]	; 8003a78 <Motor_Drive_Task+0x2d8>
 800395a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800395e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003962:	d400      	bmi.n	8003966 <Motor_Drive_Task+0x1c6>
 8003964:	e01a      	b.n	800399c <Motor_Drive_Task+0x1fc>
		{
			f=u=0;
 8003966:	4b3d      	ldr	r3, [pc, #244]	; (8003a5c <Motor_Drive_Task+0x2bc>)
 8003968:	f04f 0200 	mov.w	r2, #0
 800396c:	601a      	str	r2, [r3, #0]
 800396e:	4b3b      	ldr	r3, [pc, #236]	; (8003a5c <Motor_Drive_Task+0x2bc>)
 8003970:	681b      	ldr	r3, [r3, #0]
 8003972:	4a39      	ldr	r2, [pc, #228]	; (8003a58 <Motor_Drive_Task+0x2b8>)
 8003974:	6013      	str	r3, [r2, #0]
			MOTOR_EN(0); //amugy stop
 8003976:	2200      	movs	r2, #0
 8003978:	2140      	movs	r1, #64	; 0x40
 800397a:	483e      	ldr	r0, [pc, #248]	; (8003a74 <Motor_Drive_Task+0x2d4>)
 800397c:	f004 fe5c 	bl	8008638 <HAL_GPIO_WritePin>
		if(fabs(v_ref)<70 && fabs(v)<70)
 8003980:	e00c      	b.n	800399c <Motor_Drive_Task+0x1fc>
		}
	}
	else
	{	f=u=0;
 8003982:	4b36      	ldr	r3, [pc, #216]	; (8003a5c <Motor_Drive_Task+0x2bc>)
 8003984:	f04f 0200 	mov.w	r2, #0
 8003988:	601a      	str	r2, [r3, #0]
 800398a:	4b34      	ldr	r3, [pc, #208]	; (8003a5c <Motor_Drive_Task+0x2bc>)
 800398c:	681b      	ldr	r3, [r3, #0]
 800398e:	4a32      	ldr	r2, [pc, #200]	; (8003a58 <Motor_Drive_Task+0x2b8>)
 8003990:	6013      	str	r3, [r2, #0]
		MOTOR_EN(0); //amugy stop
 8003992:	2200      	movs	r2, #0
 8003994:	2140      	movs	r1, #64	; 0x40
 8003996:	4837      	ldr	r0, [pc, #220]	; (8003a74 <Motor_Drive_Task+0x2d4>)
 8003998:	f004 fe4e 	bl	8008638 <HAL_GPIO_WritePin>
	}
	//A két érték amit irogatsz (TIM3->CCR1,CCR2) konkrét timer periféria regiszterek, nem feltétlen jó őket folyamatosan újraírni 10ms enként
	/**/
	if(mode==FAST && rxBuf[1]<1 && !leaveLineEnabled)
 800399c:	4b37      	ldr	r3, [pc, #220]	; (8003a7c <Motor_Drive_Task+0x2dc>)
 800399e:	781b      	ldrb	r3, [r3, #0]
 80039a0:	2b3f      	cmp	r3, #63	; 0x3f
 80039a2:	d110      	bne.n	80039c6 <Motor_Drive_Task+0x226>
 80039a4:	4b36      	ldr	r3, [pc, #216]	; (8003a80 <Motor_Drive_Task+0x2e0>)
 80039a6:	785b      	ldrb	r3, [r3, #1]
 80039a8:	2b00      	cmp	r3, #0
 80039aa:	d10c      	bne.n	80039c6 <Motor_Drive_Task+0x226>
 80039ac:	4b35      	ldr	r3, [pc, #212]	; (8003a84 <Motor_Drive_Task+0x2e4>)
 80039ae:	781b      	ldrb	r3, [r3, #0]
 80039b0:	2b00      	cmp	r3, #0
 80039b2:	d108      	bne.n	80039c6 <Motor_Drive_Task+0x226>
	{
		TIM3->CCR1=499;
 80039b4:	4b34      	ldr	r3, [pc, #208]	; (8003a88 <Motor_Drive_Task+0x2e8>)
 80039b6:	f240 12f3 	movw	r2, #499	; 0x1f3
 80039ba:	635a      	str	r2, [r3, #52]	; 0x34
		TIM3->CCR2=499;
 80039bc:	4b32      	ldr	r3, [pc, #200]	; (8003a88 <Motor_Drive_Task+0x2e8>)
 80039be:	f240 12f3 	movw	r2, #499	; 0x1f3
 80039c2:	639a      	str	r2, [r3, #56]	; 0x38
 80039c4:	e027      	b.n	8003a16 <Motor_Drive_Task+0x276>
		//LED_Y_TOGGLE;
	}
	else if(motorDuty!=motorDutyPrev)//csak akkor írjuk át őket ha tényleg muszáj (ha változtak az előző taskhívás óta)
 80039c6:	4b2a      	ldr	r3, [pc, #168]	; (8003a70 <Motor_Drive_Task+0x2d0>)
 80039c8:	681a      	ldr	r2, [r3, #0]
 80039ca:	4b30      	ldr	r3, [pc, #192]	; (8003a8c <Motor_Drive_Task+0x2ec>)
 80039cc:	681b      	ldr	r3, [r3, #0]
 80039ce:	429a      	cmp	r2, r3
 80039d0:	d021      	beq.n	8003a16 <Motor_Drive_Task+0x276>
	{
		ccr2 = (motorDuty + 1000)/2-1;
 80039d2:	4b27      	ldr	r3, [pc, #156]	; (8003a70 <Motor_Drive_Task+0x2d0>)
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 80039da:	0fda      	lsrs	r2, r3, #31
 80039dc:	4413      	add	r3, r2
 80039de:	105b      	asrs	r3, r3, #1
 80039e0:	3b01      	subs	r3, #1
 80039e2:	617b      	str	r3, [r7, #20]
		if(ccr2>950)ccr2=950;
 80039e4:	697b      	ldr	r3, [r7, #20]
 80039e6:	f240 32b6 	movw	r2, #950	; 0x3b6
 80039ea:	4293      	cmp	r3, r2
 80039ec:	dd02      	ble.n	80039f4 <Motor_Drive_Task+0x254>
 80039ee:	f240 33b6 	movw	r3, #950	; 0x3b6
 80039f2:	617b      	str	r3, [r7, #20]
		if(ccr2<-950)ccr2=-950;
 80039f4:	697b      	ldr	r3, [r7, #20]
 80039f6:	4a26      	ldr	r2, [pc, #152]	; (8003a90 <Motor_Drive_Task+0x2f0>)
 80039f8:	4293      	cmp	r3, r2
 80039fa:	da01      	bge.n	8003a00 <Motor_Drive_Task+0x260>
 80039fc:	4b24      	ldr	r3, [pc, #144]	; (8003a90 <Motor_Drive_Task+0x2f0>)
 80039fe:	617b      	str	r3, [r7, #20]
		ccr1= 998-ccr2;
 8003a00:	697b      	ldr	r3, [r7, #20]
 8003a02:	f5c3 7379 	rsb	r3, r3, #996	; 0x3e4
 8003a06:	3302      	adds	r3, #2
 8003a08:	613b      	str	r3, [r7, #16]

		//2 Referencia megadása
		//Ezeket a loopba kéne változtatni folyamatosan, pwm-elinditas mashova kell majd

		TIM3->CCR1=ccr1;
 8003a0a:	4a1f      	ldr	r2, [pc, #124]	; (8003a88 <Motor_Drive_Task+0x2e8>)
 8003a0c:	693b      	ldr	r3, [r7, #16]
 8003a0e:	6353      	str	r3, [r2, #52]	; 0x34
		TIM3->CCR2=ccr2;
 8003a10:	4a1d      	ldr	r2, [pc, #116]	; (8003a88 <Motor_Drive_Task+0x2e8>)
 8003a12:	697b      	ldr	r3, [r7, #20]
 8003a14:	6393      	str	r3, [r2, #56]	; 0x38
	}
	motorDutyPrev=motorDuty;
 8003a16:	4b16      	ldr	r3, [pc, #88]	; (8003a70 <Motor_Drive_Task+0x2d0>)
 8003a18:	681b      	ldr	r3, [r3, #0]
 8003a1a:	4a1c      	ldr	r2, [pc, #112]	; (8003a8c <Motor_Drive_Task+0x2ec>)
 8003a1c:	6013      	str	r3, [r2, #0]
 8003a1e:	e000      	b.n	8003a22 <Motor_Drive_Task+0x282>
	if(motor_drive_task_tick>tick) return;
 8003a20:	bf00      	nop
}
 8003a22:	3718      	adds	r7, #24
 8003a24:	46bd      	mov	sp, r7
 8003a26:	bdb0      	pop	{r4, r5, r7, pc}
 8003a28:	30be0ded 	.word	0x30be0ded
 8003a2c:	3fd02a99 	.word	0x3fd02a99
 8003a30:	9b3d07c8 	.word	0x9b3d07c8
 8003a34:	3fef9f55 	.word	0x3fef9f55
 8003a38:	30be0e00 	.word	0x30be0e00
 8003a3c:	3f882a99 	.word	0x3f882a99
 8003a40:	20000038 	.word	0x20000038
 8003a44:	20000b60 	.word	0x20000b60
 8003a48:	20000b61 	.word	0x20000b61
 8003a4c:	200002a8 	.word	0x200002a8
 8003a50:	20000684 	.word	0x20000684
 8003a54:	20000028 	.word	0x20000028
 8003a58:	2000068c 	.word	0x2000068c
 8003a5c:	20000690 	.word	0x20000690
 8003a60:	445c0000 	.word	0x445c0000
 8003a64:	445c0000 	.word	0x445c0000
 8003a68:	c3fa0000 	.word	0xc3fa0000
 8003a6c:	c3fa0000 	.word	0xc3fa0000
 8003a70:	20000694 	.word	0x20000694
 8003a74:	40020400 	.word	0x40020400
 8003a78:	428c0000 	.word	0x428c0000
 8003a7c:	200002a6 	.word	0x200002a6
 8003a80:	2000069c 	.word	0x2000069c
 8003a84:	200002ac 	.word	0x200002ac
 8003a88:	40000400 	.word	0x40000400
 8003a8c:	20000698 	.word	0x20000698
 8003a90:	fffffc4a 	.word	0xfffffc4a

08003a94 <G0_Read_Fast>:

uint16_t boostCnt=0;


uint8_t G0_Read_Fast(UART_HandleTypeDef *huart_stm,UART_HandleTypeDef *huart_debugg)
{
 8003a94:	b580      	push	{r7, lr}
 8003a96:	b084      	sub	sp, #16
 8003a98:	af00      	add	r7, sp, #0
 8003a9a:	6078      	str	r0, [r7, #4]
 8003a9c:	6039      	str	r1, [r7, #0]

	uint8_t state=0;
 8003a9e:	2300      	movs	r3, #0
 8003aa0:	73fb      	strb	r3, [r7, #15]
	txBuf[0]=CMD_READ_FAST;
 8003aa2:	4b13      	ldr	r3, [pc, #76]	; (8003af0 <G0_Read_Fast+0x5c>)
 8003aa4:	222a      	movs	r2, #42	; 0x2a
 8003aa6:	701a      	strb	r2, [r3, #0]
	HAL_UART_Transmit(huart_stm, txBuf,1, 2);
 8003aa8:	2302      	movs	r3, #2
 8003aaa:	2201      	movs	r2, #1
 8003aac:	4910      	ldr	r1, [pc, #64]	; (8003af0 <G0_Read_Fast+0x5c>)
 8003aae:	6878      	ldr	r0, [r7, #4]
 8003ab0:	f007 fb15 	bl	800b0de <HAL_UART_Transmit>
	state=HAL_UART_Receive(huart_stm, rxBuf, 8, 4);
 8003ab4:	2304      	movs	r3, #4
 8003ab6:	2208      	movs	r2, #8
 8003ab8:	490e      	ldr	r1, [pc, #56]	; (8003af4 <G0_Read_Fast+0x60>)
 8003aba:	6878      	ldr	r0, [r7, #4]
 8003abc:	f007 fba1 	bl	800b202 <HAL_UART_Receive>
 8003ac0:	4603      	mov	r3, r0
 8003ac2:	73fb      	strb	r3, [r7, #15]
	motorEnLineOk=1; //ha van akkor mehet a szabályozás
 8003ac4:	4b0c      	ldr	r3, [pc, #48]	; (8003af8 <G0_Read_Fast+0x64>)
 8003ac6:	2201      	movs	r2, #1
 8003ac8:	701a      	strb	r2, [r3, #0]
	if((state==HAL_OK)&&(rxBuf[0]==START_BYTE_FAST) && (rxBuf[7]==STOP_BYTE))//jöt adat a G0 tól és a keret is megfelelő
 8003aca:	7bfb      	ldrb	r3, [r7, #15]
 8003acc:	2b00      	cmp	r3, #0
 8003ace:	d109      	bne.n	8003ae4 <G0_Read_Fast+0x50>
 8003ad0:	4b08      	ldr	r3, [pc, #32]	; (8003af4 <G0_Read_Fast+0x60>)
 8003ad2:	781b      	ldrb	r3, [r3, #0]
 8003ad4:	2b41      	cmp	r3, #65	; 0x41
 8003ad6:	d105      	bne.n	8003ae4 <G0_Read_Fast+0x50>
 8003ad8:	4b06      	ldr	r3, [pc, #24]	; (8003af4 <G0_Read_Fast+0x60>)
 8003ada:	79db      	ldrb	r3, [r3, #7]
 8003adc:	2b12      	cmp	r3, #18
 8003ade:	d101      	bne.n	8003ae4 <G0_Read_Fast+0x50>
	{
		return 0;
 8003ae0:	2300      	movs	r3, #0
 8003ae2:	e000      	b.n	8003ae6 <G0_Read_Fast+0x52>
	}
	else //nem jött szabályos adat a G0-tól
	{
		return 1;
 8003ae4:	2301      	movs	r3, #1
	}
}
 8003ae6:	4618      	mov	r0, r3
 8003ae8:	3710      	adds	r7, #16
 8003aea:	46bd      	mov	sp, r7
 8003aec:	bd80      	pop	{r7, pc}
 8003aee:	bf00      	nop
 8003af0:	2000003c 	.word	0x2000003c
 8003af4:	2000069c 	.word	0x2000069c
 8003af8:	20000b61 	.word	0x20000b61

08003afc <G0_Read_Skill>:

uint8_t G0_Read_Skill(UART_HandleTypeDef *huart_stm,UART_HandleTypeDef *huart_debugg, uint8_t command)
{
 8003afc:	b580      	push	{r7, lr}
 8003afe:	b086      	sub	sp, #24
 8003b00:	af00      	add	r7, sp, #0
 8003b02:	60f8      	str	r0, [r7, #12]
 8003b04:	60b9      	str	r1, [r7, #8]
 8003b06:	4613      	mov	r3, r2
 8003b08:	71fb      	strb	r3, [r7, #7]
	uint8_t state=0;
 8003b0a:	2300      	movs	r3, #0
 8003b0c:	75fb      	strb	r3, [r7, #23]
	txBuf[0]=command;
 8003b0e:	4a15      	ldr	r2, [pc, #84]	; (8003b64 <G0_Read_Skill+0x68>)
 8003b10:	79fb      	ldrb	r3, [r7, #7]
 8003b12:	7013      	strb	r3, [r2, #0]
	HAL_UART_Transmit(huart_stm, txBuf,1, 2);
 8003b14:	2302      	movs	r3, #2
 8003b16:	2201      	movs	r2, #1
 8003b18:	4912      	ldr	r1, [pc, #72]	; (8003b64 <G0_Read_Skill+0x68>)
 8003b1a:	68f8      	ldr	r0, [r7, #12]
 8003b1c:	f007 fadf 	bl	800b0de <HAL_UART_Transmit>
	state = HAL_UART_Receive(huart_stm, rxBuf, 10, 4);
 8003b20:	2304      	movs	r3, #4
 8003b22:	220a      	movs	r2, #10
 8003b24:	4910      	ldr	r1, [pc, #64]	; (8003b68 <G0_Read_Skill+0x6c>)
 8003b26:	68f8      	ldr	r0, [r7, #12]
 8003b28:	f007 fb6b 	bl	800b202 <HAL_UART_Receive>
 8003b2c:	4603      	mov	r3, r0
 8003b2e:	75fb      	strb	r3, [r7, #23]
	motorEnLineOk=1; //ha van akkor mehet a szabályozás
 8003b30:	4b0e      	ldr	r3, [pc, #56]	; (8003b6c <G0_Read_Skill+0x70>)
 8003b32:	2201      	movs	r2, #1
 8003b34:	701a      	strb	r2, [r3, #0]
	if((state==HAL_OK)&&(rxBuf[0]==START_BYTE_SKILL_FORWARD || rxBuf[0]==START_BYTE_SKILL_REVERSE) && (rxBuf[9]==STOP_BYTE))//jöt adat a G0 tól és a keret is megfelelő
 8003b36:	7dfb      	ldrb	r3, [r7, #23]
 8003b38:	2b00      	cmp	r3, #0
 8003b3a:	d10d      	bne.n	8003b58 <G0_Read_Skill+0x5c>
 8003b3c:	4b0a      	ldr	r3, [pc, #40]	; (8003b68 <G0_Read_Skill+0x6c>)
 8003b3e:	781b      	ldrb	r3, [r3, #0]
 8003b40:	2b50      	cmp	r3, #80	; 0x50
 8003b42:	d003      	beq.n	8003b4c <G0_Read_Skill+0x50>
 8003b44:	4b08      	ldr	r3, [pc, #32]	; (8003b68 <G0_Read_Skill+0x6c>)
 8003b46:	781b      	ldrb	r3, [r3, #0]
 8003b48:	2ba8      	cmp	r3, #168	; 0xa8
 8003b4a:	d105      	bne.n	8003b58 <G0_Read_Skill+0x5c>
 8003b4c:	4b06      	ldr	r3, [pc, #24]	; (8003b68 <G0_Read_Skill+0x6c>)
 8003b4e:	7a5b      	ldrb	r3, [r3, #9]
 8003b50:	2b12      	cmp	r3, #18
 8003b52:	d101      	bne.n	8003b58 <G0_Read_Skill+0x5c>
	{
		return 0;
 8003b54:	2300      	movs	r3, #0
 8003b56:	e000      	b.n	8003b5a <G0_Read_Skill+0x5e>
	}
	else //nem jött szabályos adat a G0-tól
	{
		return 1;
 8003b58:	2301      	movs	r3, #1
	}
}
 8003b5a:	4618      	mov	r0, r3
 8003b5c:	3718      	adds	r7, #24
 8003b5e:	46bd      	mov	sp, r7
 8003b60:	bd80      	pop	{r7, pc}
 8003b62:	bf00      	nop
 8003b64:	2000003c 	.word	0x2000003c
 8003b68:	2000069c 	.word	0x2000069c
 8003b6c:	20000b61 	.word	0x20000b61

08003b70 <Line_Track_Task>:


void Line_Track_Task(UART_HandleTypeDef *huart_stm,UART_HandleTypeDef *huart_debugg, uint32_t tick, uint32_t period)
{
 8003b70:	b580      	push	{r7, lr}
 8003b72:	b086      	sub	sp, #24
 8003b74:	af00      	add	r7, sp, #0
 8003b76:	60f8      	str	r0, [r7, #12]
 8003b78:	60b9      	str	r1, [r7, #8]
 8003b7a:	607a      	str	r2, [r7, #4]
 8003b7c:	603b      	str	r3, [r7, #0]
	static float PHI;
	static float gamma=0;
	static uint32_t ccr_rear_prev=0;
	static uint32_t tick_prev=0;

	if(line_track_task_tick>tick) return;
 8003b7e:	4b90      	ldr	r3, [pc, #576]	; (8003dc0 <Line_Track_Task+0x250>)
 8003b80:	681b      	ldr	r3, [r3, #0]
 8003b82:	687a      	ldr	r2, [r7, #4]
 8003b84:	429a      	cmp	r2, r3
 8003b86:	f0c0 83b5 	bcc.w	80042f4 <Line_Track_Task+0x784>
	line_track_task_tick = tick + period;
 8003b8a:	687a      	ldr	r2, [r7, #4]
 8003b8c:	683b      	ldr	r3, [r7, #0]
 8003b8e:	4413      	add	r3, r2
 8003b90:	4a8b      	ldr	r2, [pc, #556]	; (8003dc0 <Line_Track_Task+0x250>)
 8003b92:	6013      	str	r3, [r2, #0]

	if(mode == SKILL)
 8003b94:	4b8b      	ldr	r3, [pc, #556]	; (8003dc4 <Line_Track_Task+0x254>)
 8003b96:	781b      	ldrb	r3, [r3, #0]
 8003b98:	2b52      	cmp	r3, #82	; 0x52
 8003b9a:	f040 81f9 	bne.w	8003f90 <Line_Track_Task+0x420>
	{
		if(orientation==FORWARD)
 8003b9e:	4b8a      	ldr	r3, [pc, #552]	; (8003dc8 <Line_Track_Task+0x258>)
 8003ba0:	781b      	ldrb	r3, [r3, #0]
 8003ba2:	2b00      	cmp	r3, #0
 8003ba4:	f040 80e0 	bne.w	8003d68 <Line_Track_Task+0x1f8>
		{
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_FORWARD))return;
 8003ba8:	2239      	movs	r2, #57	; 0x39
 8003baa:	68b9      	ldr	r1, [r7, #8]
 8003bac:	68f8      	ldr	r0, [r7, #12]
 8003bae:	f7ff ffa5 	bl	8003afc <G0_Read_Skill>
 8003bb2:	4603      	mov	r3, r0
 8003bb4:	2b00      	cmp	r3, #0
 8003bb6:	f040 839f 	bne.w	80042f8 <Line_Track_Task+0x788>

			uint8_t tmp=Lane_Changer(tick);
 8003bba:	6878      	ldr	r0, [r7, #4]
 8003bbc:	f001 f86c 	bl	8004c98 <Lane_Changer>
 8003bc0:	4603      	mov	r3, r0
 8003bc2:	75bb      	strb	r3, [r7, #22]
			if(v_control==NORMAL_VEL)v_ref=1100;
 8003bc4:	4b81      	ldr	r3, [pc, #516]	; (8003dcc <Line_Track_Task+0x25c>)
 8003bc6:	781b      	ldrb	r3, [r3, #0]
 8003bc8:	2b02      	cmp	r3, #2
 8003bca:	d103      	bne.n	8003bd4 <Line_Track_Task+0x64>
 8003bcc:	4b80      	ldr	r3, [pc, #512]	; (8003dd0 <Line_Track_Task+0x260>)
 8003bce:	4a81      	ldr	r2, [pc, #516]	; (8003dd4 <Line_Track_Task+0x264>)
 8003bd0:	601a      	str	r2, [r3, #0]
 8003bd2:	e00f      	b.n	8003bf4 <Line_Track_Task+0x84>
			else if(v_control==SLOW_DOWN)v_ref=600;
 8003bd4:	4b7d      	ldr	r3, [pc, #500]	; (8003dcc <Line_Track_Task+0x25c>)
 8003bd6:	781b      	ldrb	r3, [r3, #0]
 8003bd8:	2b01      	cmp	r3, #1
 8003bda:	d103      	bne.n	8003be4 <Line_Track_Task+0x74>
 8003bdc:	4b7c      	ldr	r3, [pc, #496]	; (8003dd0 <Line_Track_Task+0x260>)
 8003bde:	4a7e      	ldr	r2, [pc, #504]	; (8003dd8 <Line_Track_Task+0x268>)
 8003be0:	601a      	str	r2, [r3, #0]
 8003be2:	e007      	b.n	8003bf4 <Line_Track_Task+0x84>
			else if(v_control==STOP)v_ref=0;
 8003be4:	4b79      	ldr	r3, [pc, #484]	; (8003dcc <Line_Track_Task+0x25c>)
 8003be6:	781b      	ldrb	r3, [r3, #0]
 8003be8:	2b00      	cmp	r3, #0
 8003bea:	d103      	bne.n	8003bf4 <Line_Track_Task+0x84>
 8003bec:	4b78      	ldr	r3, [pc, #480]	; (8003dd0 <Line_Track_Task+0x260>)
 8003bee:	f04f 0200 	mov.w	r2, #0
 8003bf2:	601a      	str	r2, [r3, #0]
			if(tmp)return;
 8003bf4:	7dbb      	ldrb	r3, [r7, #22]
 8003bf6:	2b00      	cmp	r3, #0
 8003bf8:	f040 8380 	bne.w	80042fc <Line_Track_Task+0x78c>

			Detect_Node4(huart_debugg, tick);
 8003bfc:	6879      	ldr	r1, [r7, #4]
 8003bfe:	68b8      	ldr	r0, [r7, #8]
 8003c00:	f000 ffb6 	bl	8004b70 <Detect_Node4>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 8003c04:	4b75      	ldr	r3, [pc, #468]	; (8003ddc <Line_Track_Task+0x26c>)
 8003c06:	785b      	ldrb	r3, [r3, #1]
 8003c08:	2b00      	cmp	r3, #0
 8003c0a:	f000 8379 	beq.w	8004300 <Line_Track_Task+0x790>
 8003c0e:	4b73      	ldr	r3, [pc, #460]	; (8003ddc <Line_Track_Task+0x26c>)
 8003c10:	785b      	ldrb	r3, [r3, #1]
 8003c12:	2b04      	cmp	r3, #4
 8003c14:	f200 8374 	bhi.w	8004300 <Line_Track_Task+0x790>
			gamma = Skill_Mode(huart_debugg, 0.004, 0.004, tick); //kD 4ms -es futáshoz hangolva
 8003c18:	6879      	ldr	r1, [r7, #4]
 8003c1a:	eddf 0a71 	vldr	s1, [pc, #452]	; 8003de0 <Line_Track_Task+0x270>
 8003c1e:	ed9f 0a70 	vldr	s0, [pc, #448]	; 8003de0 <Line_Track_Task+0x270>
 8003c22:	68b8      	ldr	r0, [r7, #8]
 8003c24:	f000 fe90 	bl	8004948 <Skill_Mode>
 8003c28:	eef0 7a40 	vmov.f32	s15, s0
 8003c2c:	4b6d      	ldr	r3, [pc, #436]	; (8003de4 <Line_Track_Task+0x274>)
 8003c2e:	edc3 7a00 	vstr	s15, [r3]

			//ELSŐSZERVÓ ELŐREMENETBEN
			PHI = atan((L/(L+D_FRONT))*tan(gamma));
 8003c32:	4b6c      	ldr	r3, [pc, #432]	; (8003de4 <Line_Track_Task+0x274>)
 8003c34:	681b      	ldr	r3, [r3, #0]
 8003c36:	4618      	mov	r0, r3
 8003c38:	f7fc fca6 	bl	8000588 <__aeabi_f2d>
 8003c3c:	4602      	mov	r2, r0
 8003c3e:	460b      	mov	r3, r1
 8003c40:	ec43 2b10 	vmov	d0, r2, r3
 8003c44:	f00b fbd8 	bl	800f3f8 <tan>
 8003c48:	ec51 0b10 	vmov	r0, r1, d0
 8003c4c:	a358      	add	r3, pc, #352	; (adr r3, 8003db0 <Line_Track_Task+0x240>)
 8003c4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003c52:	f7fc fcf1 	bl	8000638 <__aeabi_dmul>
 8003c56:	4602      	mov	r2, r0
 8003c58:	460b      	mov	r3, r1
 8003c5a:	ec43 2b17 	vmov	d7, r2, r3
 8003c5e:	eeb0 0a47 	vmov.f32	s0, s14
 8003c62:	eef0 0a67 	vmov.f32	s1, s15
 8003c66:	f00b fa1b 	bl	800f0a0 <atan>
 8003c6a:	ec53 2b10 	vmov	r2, r3, d0
 8003c6e:	4610      	mov	r0, r2
 8003c70:	4619      	mov	r1, r3
 8003c72:	f7fc ffb9 	bl	8000be8 <__aeabi_d2f>
 8003c76:	4603      	mov	r3, r0
 8003c78:	4a5b      	ldr	r2, [pc, #364]	; (8003de8 <Line_Track_Task+0x278>)
 8003c7a:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_FRONT_CCR_MIDDLE);//balra kanyarodás
 8003c7c:	4b5a      	ldr	r3, [pc, #360]	; (8003de8 <Line_Track_Task+0x278>)
 8003c7e:	edd3 7a00 	vldr	s15, [r3]
 8003c82:	ed9f 7a5a 	vldr	s14, [pc, #360]	; 8003dec <Line_Track_Task+0x27c>
 8003c86:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003c8a:	ed9f 7a59 	vldr	s14, [pc, #356]	; 8003df0 <Line_Track_Task+0x280>
 8003c8e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003c92:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c96:	ee17 3a90 	vmov	r3, s15
 8003c9a:	b29b      	uxth	r3, r3
 8003c9c:	461a      	mov	r2, r3
 8003c9e:	4b55      	ldr	r3, [pc, #340]	; (8003df4 <Line_Track_Task+0x284>)
 8003ca0:	601a      	str	r2, [r3, #0]
			//ne feszítsük neki a mechanikai határnak a szervót
			FRONT_CCR(ccr);
 8003ca2:	4b54      	ldr	r3, [pc, #336]	; (8003df4 <Line_Track_Task+0x284>)
 8003ca4:	681b      	ldr	r3, [r3, #0]
 8003ca6:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8003caa:	dc07      	bgt.n	8003cbc <Line_Track_Task+0x14c>
 8003cac:	4b51      	ldr	r3, [pc, #324]	; (8003df4 <Line_Track_Task+0x284>)
 8003cae:	681b      	ldr	r3, [r3, #0]
 8003cb0:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8003cb4:	bfb8      	it	lt
 8003cb6:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 8003cba:	e001      	b.n	8003cc0 <Line_Track_Task+0x150>
 8003cbc:	f44f 7361 	mov.w	r3, #900	; 0x384
 8003cc0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003cc4:	6353      	str	r3, [r2, #52]	; 0x34

			//HÁTSÓSZERVÓ ELŐREMENETBEN
			PHI = atan((L/(L+D_REAR))*tan(gamma))/3;
 8003cc6:	4b47      	ldr	r3, [pc, #284]	; (8003de4 <Line_Track_Task+0x274>)
 8003cc8:	681b      	ldr	r3, [r3, #0]
 8003cca:	4618      	mov	r0, r3
 8003ccc:	f7fc fc5c 	bl	8000588 <__aeabi_f2d>
 8003cd0:	4602      	mov	r2, r0
 8003cd2:	460b      	mov	r3, r1
 8003cd4:	ec43 2b10 	vmov	d0, r2, r3
 8003cd8:	f00b fb8e 	bl	800f3f8 <tan>
 8003cdc:	ec51 0b10 	vmov	r0, r1, d0
 8003ce0:	a335      	add	r3, pc, #212	; (adr r3, 8003db8 <Line_Track_Task+0x248>)
 8003ce2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003ce6:	f7fc fca7 	bl	8000638 <__aeabi_dmul>
 8003cea:	4602      	mov	r2, r0
 8003cec:	460b      	mov	r3, r1
 8003cee:	ec43 2b17 	vmov	d7, r2, r3
 8003cf2:	eeb0 0a47 	vmov.f32	s0, s14
 8003cf6:	eef0 0a67 	vmov.f32	s1, s15
 8003cfa:	f00b f9d1 	bl	800f0a0 <atan>
 8003cfe:	ec51 0b10 	vmov	r0, r1, d0
 8003d02:	f04f 0200 	mov.w	r2, #0
 8003d06:	4b3c      	ldr	r3, [pc, #240]	; (8003df8 <Line_Track_Task+0x288>)
 8003d08:	f7fc fdc0 	bl	800088c <__aeabi_ddiv>
 8003d0c:	4602      	mov	r2, r0
 8003d0e:	460b      	mov	r3, r1
 8003d10:	4610      	mov	r0, r2
 8003d12:	4619      	mov	r1, r3
 8003d14:	f7fc ff68 	bl	8000be8 <__aeabi_d2f>
 8003d18:	4603      	mov	r3, r0
 8003d1a:	4a33      	ldr	r2, [pc, #204]	; (8003de8 <Line_Track_Task+0x278>)
 8003d1c:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_REAR_CCR_MIDDLE);//balra kanyarodás
 8003d1e:	4b32      	ldr	r3, [pc, #200]	; (8003de8 <Line_Track_Task+0x278>)
 8003d20:	edd3 7a00 	vldr	s15, [r3]
 8003d24:	ed9f 7a31 	vldr	s14, [pc, #196]	; 8003dec <Line_Track_Task+0x27c>
 8003d28:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003d2c:	ed9f 7a33 	vldr	s14, [pc, #204]	; 8003dfc <Line_Track_Task+0x28c>
 8003d30:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003d34:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003d38:	ee17 3a90 	vmov	r3, s15
 8003d3c:	b29b      	uxth	r3, r3
 8003d3e:	461a      	mov	r2, r3
 8003d40:	4b2c      	ldr	r3, [pc, #176]	; (8003df4 <Line_Track_Task+0x284>)
 8003d42:	601a      	str	r2, [r3, #0]
			REAR_CCR(ccr);
 8003d44:	4b2b      	ldr	r3, [pc, #172]	; (8003df4 <Line_Track_Task+0x284>)
 8003d46:	681b      	ldr	r3, [r3, #0]
 8003d48:	f5b3 7f39 	cmp.w	r3, #740	; 0x2e4
 8003d4c:	dc07      	bgt.n	8003d5e <Line_Track_Task+0x1ee>
 8003d4e:	4b29      	ldr	r3, [pc, #164]	; (8003df4 <Line_Track_Task+0x284>)
 8003d50:	681b      	ldr	r3, [r3, #0]
 8003d52:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 8003d56:	bfb8      	it	lt
 8003d58:	f44f 73c8 	movlt.w	r3, #400	; 0x190
 8003d5c:	e001      	b.n	8003d62 <Line_Track_Task+0x1f2>
 8003d5e:	f44f 7339 	mov.w	r3, #740	; 0x2e4
 8003d62:	4a27      	ldr	r2, [pc, #156]	; (8003e00 <Line_Track_Task+0x290>)
 8003d64:	6413      	str	r3, [r2, #64]	; 0x40
 8003d66:	e2c1      	b.n	80042ec <Line_Track_Task+0x77c>
		}
		else if(orientation==REVERSE)//TOLATÁS
 8003d68:	4b17      	ldr	r3, [pc, #92]	; (8003dc8 <Line_Track_Task+0x258>)
 8003d6a:	781b      	ldrb	r3, [r3, #0]
 8003d6c:	2b01      	cmp	r3, #1
 8003d6e:	f040 82bd 	bne.w	80042ec <Line_Track_Task+0x77c>
		{
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_REVERSE))return;
 8003d72:	2291      	movs	r2, #145	; 0x91
 8003d74:	68b9      	ldr	r1, [r7, #8]
 8003d76:	68f8      	ldr	r0, [r7, #12]
 8003d78:	f7ff fec0 	bl	8003afc <G0_Read_Skill>
 8003d7c:	4603      	mov	r3, r0
 8003d7e:	2b00      	cmp	r3, #0
 8003d80:	f040 82c0 	bne.w	8004304 <Line_Track_Task+0x794>

			uint8_t tmp=Lane_Changer(tick);
 8003d84:	6878      	ldr	r0, [r7, #4]
 8003d86:	f000 ff87 	bl	8004c98 <Lane_Changer>
 8003d8a:	4603      	mov	r3, r0
 8003d8c:	75fb      	strb	r3, [r7, #23]
			if(v_control==NORMAL_VEL)v_ref=-1100;
 8003d8e:	4b0f      	ldr	r3, [pc, #60]	; (8003dcc <Line_Track_Task+0x25c>)
 8003d90:	781b      	ldrb	r3, [r3, #0]
 8003d92:	2b02      	cmp	r3, #2
 8003d94:	d103      	bne.n	8003d9e <Line_Track_Task+0x22e>
 8003d96:	4b0e      	ldr	r3, [pc, #56]	; (8003dd0 <Line_Track_Task+0x260>)
 8003d98:	4a1a      	ldr	r2, [pc, #104]	; (8003e04 <Line_Track_Task+0x294>)
 8003d9a:	601a      	str	r2, [r3, #0]
 8003d9c:	e03e      	b.n	8003e1c <Line_Track_Task+0x2ac>
			else if(v_control==SLOW_DOWN)v_ref=-600;
 8003d9e:	4b0b      	ldr	r3, [pc, #44]	; (8003dcc <Line_Track_Task+0x25c>)
 8003da0:	781b      	ldrb	r3, [r3, #0]
 8003da2:	2b01      	cmp	r3, #1
 8003da4:	d132      	bne.n	8003e0c <Line_Track_Task+0x29c>
 8003da6:	4b0a      	ldr	r3, [pc, #40]	; (8003dd0 <Line_Track_Task+0x260>)
 8003da8:	4a17      	ldr	r2, [pc, #92]	; (8003e08 <Line_Track_Task+0x298>)
 8003daa:	601a      	str	r2, [r3, #0]
 8003dac:	e036      	b.n	8003e1c <Line_Track_Task+0x2ac>
 8003dae:	bf00      	nop
 8003db0:	c4830201 	.word	0xc4830201
 8003db4:	3fe73a26 	.word	0x3fe73a26
 8003db8:	a3f47e90 	.word	0xa3f47e90
 8003dbc:	3fe8fd1f 	.word	0x3fe8fd1f
 8003dc0:	20000040 	.word	0x20000040
 8003dc4:	200002a6 	.word	0x200002a6
 8003dc8:	200002b4 	.word	0x200002b4
 8003dcc:	200002b9 	.word	0x200002b9
 8003dd0:	200002a8 	.word	0x200002a8
 8003dd4:	44898000 	.word	0x44898000
 8003dd8:	44160000 	.word	0x44160000
 8003ddc:	2000069c 	.word	0x2000069c
 8003de0:	3b83126f 	.word	0x3b83126f
 8003de4:	200006ac 	.word	0x200006ac
 8003de8:	200006b0 	.word	0x200006b0
 8003dec:	44af0000 	.word	0x44af0000
 8003df0:	442c0000 	.word	0x442c0000
 8003df4:	20000044 	.word	0x20000044
 8003df8:	40080000 	.word	0x40080000
 8003dfc:	44120000 	.word	0x44120000
 8003e00:	40010000 	.word	0x40010000
 8003e04:	c4898000 	.word	0xc4898000
 8003e08:	c4160000 	.word	0xc4160000
			else if(v_control==STOP)v_ref=0;
 8003e0c:	4bb6      	ldr	r3, [pc, #728]	; (80040e8 <Line_Track_Task+0x578>)
 8003e0e:	781b      	ldrb	r3, [r3, #0]
 8003e10:	2b00      	cmp	r3, #0
 8003e12:	d103      	bne.n	8003e1c <Line_Track_Task+0x2ac>
 8003e14:	4bb5      	ldr	r3, [pc, #724]	; (80040ec <Line_Track_Task+0x57c>)
 8003e16:	f04f 0200 	mov.w	r2, #0
 8003e1a:	601a      	str	r2, [r3, #0]
			if(tmp)return;
 8003e1c:	7dfb      	ldrb	r3, [r7, #23]
 8003e1e:	2b00      	cmp	r3, #0
 8003e20:	f040 8272 	bne.w	8004308 <Line_Track_Task+0x798>

			Detect_Node4(huart_debugg, tick);
 8003e24:	6879      	ldr	r1, [r7, #4]
 8003e26:	68b8      	ldr	r0, [r7, #8]
 8003e28:	f000 fea2 	bl	8004b70 <Detect_Node4>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 8003e2c:	4bb0      	ldr	r3, [pc, #704]	; (80040f0 <Line_Track_Task+0x580>)
 8003e2e:	785b      	ldrb	r3, [r3, #1]
 8003e30:	2b00      	cmp	r3, #0
 8003e32:	f000 826b 	beq.w	800430c <Line_Track_Task+0x79c>
 8003e36:	4bae      	ldr	r3, [pc, #696]	; (80040f0 <Line_Track_Task+0x580>)
 8003e38:	785b      	ldrb	r3, [r3, #1]
 8003e3a:	2b04      	cmp	r3, #4
 8003e3c:	f200 8266 	bhi.w	800430c <Line_Track_Task+0x79c>
			gamma = Skill_Mode(huart_debugg, 0.003, 0.032, tick);
 8003e40:	6879      	ldr	r1, [r7, #4]
 8003e42:	eddf 0aac 	vldr	s1, [pc, #688]	; 80040f4 <Line_Track_Task+0x584>
 8003e46:	ed9f 0aac 	vldr	s0, [pc, #688]	; 80040f8 <Line_Track_Task+0x588>
 8003e4a:	68b8      	ldr	r0, [r7, #8]
 8003e4c:	f000 fd7c 	bl	8004948 <Skill_Mode>
 8003e50:	eef0 7a40 	vmov.f32	s15, s0
 8003e54:	4ba9      	ldr	r3, [pc, #676]	; (80040fc <Line_Track_Task+0x58c>)
 8003e56:	edc3 7a00 	vstr	s15, [r3]

			//HÁTSÓ SZERVÓ HÁTRAMENETBEN
			PHI = atan((L/(L+D_REAR))*tan(gamma));////////////////////kiszámolni kézzel
 8003e5a:	4ba8      	ldr	r3, [pc, #672]	; (80040fc <Line_Track_Task+0x58c>)
 8003e5c:	681b      	ldr	r3, [r3, #0]
 8003e5e:	4618      	mov	r0, r3
 8003e60:	f7fc fb92 	bl	8000588 <__aeabi_f2d>
 8003e64:	4602      	mov	r2, r0
 8003e66:	460b      	mov	r3, r1
 8003e68:	ec43 2b10 	vmov	d0, r2, r3
 8003e6c:	f00b fac4 	bl	800f3f8 <tan>
 8003e70:	ec51 0b10 	vmov	r0, r1, d0
 8003e74:	a398      	add	r3, pc, #608	; (adr r3, 80040d8 <Line_Track_Task+0x568>)
 8003e76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003e7a:	f7fc fbdd 	bl	8000638 <__aeabi_dmul>
 8003e7e:	4602      	mov	r2, r0
 8003e80:	460b      	mov	r3, r1
 8003e82:	ec43 2b17 	vmov	d7, r2, r3
 8003e86:	eeb0 0a47 	vmov.f32	s0, s14
 8003e8a:	eef0 0a67 	vmov.f32	s1, s15
 8003e8e:	f00b f907 	bl	800f0a0 <atan>
 8003e92:	ec53 2b10 	vmov	r2, r3, d0
 8003e96:	4610      	mov	r0, r2
 8003e98:	4619      	mov	r1, r3
 8003e9a:	f7fc fea5 	bl	8000be8 <__aeabi_d2f>
 8003e9e:	4603      	mov	r3, r0
 8003ea0:	4a97      	ldr	r2, [pc, #604]	; (8004100 <Line_Track_Task+0x590>)
 8003ea2:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_REAR_CCR_MIDDLE);
 8003ea4:	4b96      	ldr	r3, [pc, #600]	; (8004100 <Line_Track_Task+0x590>)
 8003ea6:	edd3 7a00 	vldr	s15, [r3]
 8003eaa:	ed9f 7a96 	vldr	s14, [pc, #600]	; 8004104 <Line_Track_Task+0x594>
 8003eae:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003eb2:	ed9f 7a95 	vldr	s14, [pc, #596]	; 8004108 <Line_Track_Task+0x598>
 8003eb6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003eba:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003ebe:	ee17 3a90 	vmov	r3, s15
 8003ec2:	b29b      	uxth	r3, r3
 8003ec4:	461a      	mov	r2, r3
 8003ec6:	4b91      	ldr	r3, [pc, #580]	; (800410c <Line_Track_Task+0x59c>)
 8003ec8:	601a      	str	r2, [r3, #0]
			REAR_CCR(ccr);
 8003eca:	4b90      	ldr	r3, [pc, #576]	; (800410c <Line_Track_Task+0x59c>)
 8003ecc:	681b      	ldr	r3, [r3, #0]
 8003ece:	f5b3 7f39 	cmp.w	r3, #740	; 0x2e4
 8003ed2:	dc07      	bgt.n	8003ee4 <Line_Track_Task+0x374>
 8003ed4:	4b8d      	ldr	r3, [pc, #564]	; (800410c <Line_Track_Task+0x59c>)
 8003ed6:	681b      	ldr	r3, [r3, #0]
 8003ed8:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 8003edc:	bfb8      	it	lt
 8003ede:	f44f 73c8 	movlt.w	r3, #400	; 0x190
 8003ee2:	e001      	b.n	8003ee8 <Line_Track_Task+0x378>
 8003ee4:	f44f 7339 	mov.w	r3, #740	; 0x2e4
 8003ee8:	4a89      	ldr	r2, [pc, #548]	; (8004110 <Line_Track_Task+0x5a0>)
 8003eea:	6413      	str	r3, [r2, #64]	; 0x40

			//ELSŐSZERVÓ HÁTRAMENETBEN
			PHI = atan((L/(L+D_FRONT))*tan(gamma))/3;
 8003eec:	4b83      	ldr	r3, [pc, #524]	; (80040fc <Line_Track_Task+0x58c>)
 8003eee:	681b      	ldr	r3, [r3, #0]
 8003ef0:	4618      	mov	r0, r3
 8003ef2:	f7fc fb49 	bl	8000588 <__aeabi_f2d>
 8003ef6:	4602      	mov	r2, r0
 8003ef8:	460b      	mov	r3, r1
 8003efa:	ec43 2b10 	vmov	d0, r2, r3
 8003efe:	f00b fa7b 	bl	800f3f8 <tan>
 8003f02:	ec51 0b10 	vmov	r0, r1, d0
 8003f06:	a376      	add	r3, pc, #472	; (adr r3, 80040e0 <Line_Track_Task+0x570>)
 8003f08:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003f0c:	f7fc fb94 	bl	8000638 <__aeabi_dmul>
 8003f10:	4602      	mov	r2, r0
 8003f12:	460b      	mov	r3, r1
 8003f14:	ec43 2b17 	vmov	d7, r2, r3
 8003f18:	eeb0 0a47 	vmov.f32	s0, s14
 8003f1c:	eef0 0a67 	vmov.f32	s1, s15
 8003f20:	f00b f8be 	bl	800f0a0 <atan>
 8003f24:	ec51 0b10 	vmov	r0, r1, d0
 8003f28:	f04f 0200 	mov.w	r2, #0
 8003f2c:	4b79      	ldr	r3, [pc, #484]	; (8004114 <Line_Track_Task+0x5a4>)
 8003f2e:	f7fc fcad 	bl	800088c <__aeabi_ddiv>
 8003f32:	4602      	mov	r2, r0
 8003f34:	460b      	mov	r3, r1
 8003f36:	4610      	mov	r0, r2
 8003f38:	4619      	mov	r1, r3
 8003f3a:	f7fc fe55 	bl	8000be8 <__aeabi_d2f>
 8003f3e:	4603      	mov	r3, r0
 8003f40:	4a6f      	ldr	r2, [pc, #444]	; (8004100 <Line_Track_Task+0x590>)
 8003f42:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_FRONT_CCR_MIDDLE);//balra kanyarodás
 8003f44:	4b6e      	ldr	r3, [pc, #440]	; (8004100 <Line_Track_Task+0x590>)
 8003f46:	edd3 7a00 	vldr	s15, [r3]
 8003f4a:	ed9f 7a6e 	vldr	s14, [pc, #440]	; 8004104 <Line_Track_Task+0x594>
 8003f4e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003f52:	ed9f 7a71 	vldr	s14, [pc, #452]	; 8004118 <Line_Track_Task+0x5a8>
 8003f56:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003f5a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003f5e:	ee17 3a90 	vmov	r3, s15
 8003f62:	b29b      	uxth	r3, r3
 8003f64:	461a      	mov	r2, r3
 8003f66:	4b69      	ldr	r3, [pc, #420]	; (800410c <Line_Track_Task+0x59c>)
 8003f68:	601a      	str	r2, [r3, #0]
			FRONT_CCR(ccr);
 8003f6a:	4b68      	ldr	r3, [pc, #416]	; (800410c <Line_Track_Task+0x59c>)
 8003f6c:	681b      	ldr	r3, [r3, #0]
 8003f6e:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8003f72:	dc07      	bgt.n	8003f84 <Line_Track_Task+0x414>
 8003f74:	4b65      	ldr	r3, [pc, #404]	; (800410c <Line_Track_Task+0x59c>)
 8003f76:	681b      	ldr	r3, [r3, #0]
 8003f78:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8003f7c:	bfb8      	it	lt
 8003f7e:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 8003f82:	e001      	b.n	8003f88 <Line_Track_Task+0x418>
 8003f84:	f44f 7361 	mov.w	r3, #900	; 0x384
 8003f88:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003f8c:	6353      	str	r3, [r2, #52]	; 0x34
 8003f8e:	e1ad      	b.n	80042ec <Line_Track_Task+0x77c>
		}
	}
	/*****Gyorsasági pálya üzemmód******/
	else if(mode == FAST)
 8003f90:	4b62      	ldr	r3, [pc, #392]	; (800411c <Line_Track_Task+0x5ac>)
 8003f92:	781b      	ldrb	r3, [r3, #0]
 8003f94:	2b3f      	cmp	r3, #63	; 0x3f
 8003f96:	f040 81a9 	bne.w	80042ec <Line_Track_Task+0x77c>
	{
		static uint8_t fast_mode_state=SC_MODE;

		if(G0_Read_Fast(huart_stm, huart_debugg)) return; //ha sikertelen az olvasás a G0 ból akkor nincs értelme az egésznek
 8003f9a:	68b9      	ldr	r1, [r7, #8]
 8003f9c:	68f8      	ldr	r0, [r7, #12]
 8003f9e:	f7ff fd79 	bl	8003a94 <G0_Read_Fast>
 8003fa2:	4603      	mov	r3, r0
 8003fa4:	2b00      	cmp	r3, #0
 8003fa6:	f040 81b3 	bne.w	8004310 <Line_Track_Task+0x7a0>
		if((LINE_CNT<1 || LINE_CNT > 3) && !leaveLineEnabled) return;//ha nincs vonal a kocsi alatt
 8003faa:	4b51      	ldr	r3, [pc, #324]	; (80040f0 <Line_Track_Task+0x580>)
 8003fac:	785b      	ldrb	r3, [r3, #1]
 8003fae:	2b00      	cmp	r3, #0
 8003fb0:	d003      	beq.n	8003fba <Line_Track_Task+0x44a>
 8003fb2:	4b4f      	ldr	r3, [pc, #316]	; (80040f0 <Line_Track_Task+0x580>)
 8003fb4:	785b      	ldrb	r3, [r3, #1]
 8003fb6:	2b03      	cmp	r3, #3
 8003fb8:	d904      	bls.n	8003fc4 <Line_Track_Task+0x454>
 8003fba:	4b59      	ldr	r3, [pc, #356]	; (8004120 <Line_Track_Task+0x5b0>)
 8003fbc:	781b      	ldrb	r3, [r3, #0]
 8003fbe:	2b00      	cmp	r3, #0
 8003fc0:	f000 81a8 	beq.w	8004314 <Line_Track_Task+0x7a4>
		gamma = Fast_Mode(huart_debugg, &fast_mode_state, tick);
 8003fc4:	687a      	ldr	r2, [r7, #4]
 8003fc6:	4957      	ldr	r1, [pc, #348]	; (8004124 <Line_Track_Task+0x5b4>)
 8003fc8:	68b8      	ldr	r0, [r7, #8]
 8003fca:	f000 f9c9 	bl	8004360 <Fast_Mode>
 8003fce:	eef0 7a40 	vmov.f32	s15, s0
 8003fd2:	4b4a      	ldr	r3, [pc, #296]	; (80040fc <Line_Track_Task+0x58c>)
 8003fd4:	edc3 7a00 	vstr	s15, [r3]
		PHI = atan((L/(L+D_FRONT))*tan(gamma));
 8003fd8:	4b48      	ldr	r3, [pc, #288]	; (80040fc <Line_Track_Task+0x58c>)
 8003fda:	681b      	ldr	r3, [r3, #0]
 8003fdc:	4618      	mov	r0, r3
 8003fde:	f7fc fad3 	bl	8000588 <__aeabi_f2d>
 8003fe2:	4602      	mov	r2, r0
 8003fe4:	460b      	mov	r3, r1
 8003fe6:	ec43 2b10 	vmov	d0, r2, r3
 8003fea:	f00b fa05 	bl	800f3f8 <tan>
 8003fee:	ec51 0b10 	vmov	r0, r1, d0
 8003ff2:	a33b      	add	r3, pc, #236	; (adr r3, 80040e0 <Line_Track_Task+0x570>)
 8003ff4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003ff8:	f7fc fb1e 	bl	8000638 <__aeabi_dmul>
 8003ffc:	4602      	mov	r2, r0
 8003ffe:	460b      	mov	r3, r1
 8004000:	ec43 2b17 	vmov	d7, r2, r3
 8004004:	eeb0 0a47 	vmov.f32	s0, s14
 8004008:	eef0 0a67 	vmov.f32	s1, s15
 800400c:	f00b f848 	bl	800f0a0 <atan>
 8004010:	ec53 2b10 	vmov	r2, r3, d0
 8004014:	4610      	mov	r0, r2
 8004016:	4619      	mov	r1, r3
 8004018:	f7fc fde6 	bl	8000be8 <__aeabi_d2f>
 800401c:	4603      	mov	r3, r0
 800401e:	4a38      	ldr	r2, [pc, #224]	; (8004100 <Line_Track_Task+0x590>)
 8004020:	6013      	str	r3, [r2, #0]

		if(fast_mode_state==FREERUN_MODE)
 8004022:	4b40      	ldr	r3, [pc, #256]	; (8004124 <Line_Track_Task+0x5b4>)
 8004024:	781b      	ldrb	r3, [r3, #0]
 8004026:	2b01      	cmp	r3, #1
 8004028:	f040 80ba 	bne.w	80041a0 <Line_Track_Task+0x630>
		{
			if(v>2200)//egyenes
 800402c:	4b3e      	ldr	r3, [pc, #248]	; (8004128 <Line_Track_Task+0x5b8>)
 800402e:	edd3 7a00 	vldr	s15, [r3]
 8004032:	ed9f 7a3e 	vldr	s14, [pc, #248]	; 800412c <Line_Track_Task+0x5bc>
 8004036:	eef4 7ac7 	vcmpe.f32	s15, s14
 800403a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800403e:	dd29      	ble.n	8004094 <Line_Track_Task+0x524>
			{
				ccr = (uint16_t)(-SERVO_M_STRAIGHT * PHI + SERVO_FRONT_CCR_MIDDLE);
 8004040:	4b2f      	ldr	r3, [pc, #188]	; (8004100 <Line_Track_Task+0x590>)
 8004042:	edd3 7a00 	vldr	s15, [r3]
 8004046:	ed9f 7a3a 	vldr	s14, [pc, #232]	; 8004130 <Line_Track_Task+0x5c0>
 800404a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800404e:	ed9f 7a32 	vldr	s14, [pc, #200]	; 8004118 <Line_Track_Task+0x5a8>
 8004052:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004056:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800405a:	ee17 3a90 	vmov	r3, s15
 800405e:	b29b      	uxth	r3, r3
 8004060:	461a      	mov	r2, r3
 8004062:	4b2a      	ldr	r3, [pc, #168]	; (800410c <Line_Track_Task+0x59c>)
 8004064:	601a      	str	r2, [r3, #0]
				FRONT_CCR(ccr);
 8004066:	4b29      	ldr	r3, [pc, #164]	; (800410c <Line_Track_Task+0x59c>)
 8004068:	681b      	ldr	r3, [r3, #0]
 800406a:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 800406e:	dc07      	bgt.n	8004080 <Line_Track_Task+0x510>
 8004070:	4b26      	ldr	r3, [pc, #152]	; (800410c <Line_Track_Task+0x59c>)
 8004072:	681b      	ldr	r3, [r3, #0]
 8004074:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8004078:	bfb8      	it	lt
 800407a:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 800407e:	e001      	b.n	8004084 <Line_Track_Task+0x514>
 8004080:	f44f 7361 	mov.w	r3, #900	; 0x384
 8004084:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004088:	6353      	str	r3, [r2, #52]	; 0x34
				REAR_CCR(SERVO_REAR_CCR_MIDDLE);
 800408a:	4b21      	ldr	r3, [pc, #132]	; (8004110 <Line_Track_Task+0x5a0>)
 800408c:	f44f 7212 	mov.w	r2, #584	; 0x248
 8004090:	641a      	str	r2, [r3, #64]	; 0x40
 8004092:	e12b      	b.n	80042ec <Line_Track_Task+0x77c>
			}
			else//kanyar
			{
				//Első szervó
				ccr =(uint16_t)(-SERVO_M_CORNER * PHI + SERVO_FRONT_CCR_MIDDLE);
 8004094:	4b1a      	ldr	r3, [pc, #104]	; (8004100 <Line_Track_Task+0x590>)
 8004096:	edd3 7a00 	vldr	s15, [r3]
 800409a:	ed9f 7a26 	vldr	s14, [pc, #152]	; 8004134 <Line_Track_Task+0x5c4>
 800409e:	ee67 7a87 	vmul.f32	s15, s15, s14
 80040a2:	ed9f 7a1d 	vldr	s14, [pc, #116]	; 8004118 <Line_Track_Task+0x5a8>
 80040a6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80040aa:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80040ae:	ee17 3a90 	vmov	r3, s15
 80040b2:	b29b      	uxth	r3, r3
 80040b4:	461a      	mov	r2, r3
 80040b6:	4b15      	ldr	r3, [pc, #84]	; (800410c <Line_Track_Task+0x59c>)
 80040b8:	601a      	str	r2, [r3, #0]
				FRONT_CCR(ccr);
 80040ba:	4b14      	ldr	r3, [pc, #80]	; (800410c <Line_Track_Task+0x59c>)
 80040bc:	681b      	ldr	r3, [r3, #0]
 80040be:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 80040c2:	dc39      	bgt.n	8004138 <Line_Track_Task+0x5c8>
 80040c4:	4b11      	ldr	r3, [pc, #68]	; (800410c <Line_Track_Task+0x59c>)
 80040c6:	681b      	ldr	r3, [r3, #0]
 80040c8:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 80040cc:	bfb8      	it	lt
 80040ce:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 80040d2:	e033      	b.n	800413c <Line_Track_Task+0x5cc>
 80040d4:	f3af 8000 	nop.w
 80040d8:	a3f47e90 	.word	0xa3f47e90
 80040dc:	3fe8fd1f 	.word	0x3fe8fd1f
 80040e0:	c4830201 	.word	0xc4830201
 80040e4:	3fe73a26 	.word	0x3fe73a26
 80040e8:	200002b9 	.word	0x200002b9
 80040ec:	200002a8 	.word	0x200002a8
 80040f0:	2000069c 	.word	0x2000069c
 80040f4:	3d03126f 	.word	0x3d03126f
 80040f8:	3b449ba6 	.word	0x3b449ba6
 80040fc:	200006ac 	.word	0x200006ac
 8004100:	200006b0 	.word	0x200006b0
 8004104:	44af0000 	.word	0x44af0000
 8004108:	44120000 	.word	0x44120000
 800410c:	20000044 	.word	0x20000044
 8004110:	40010000 	.word	0x40010000
 8004114:	40080000 	.word	0x40080000
 8004118:	442c0000 	.word	0x442c0000
 800411c:	200002a6 	.word	0x200002a6
 8004120:	200002ac 	.word	0x200002ac
 8004124:	200006b4 	.word	0x200006b4
 8004128:	20000684 	.word	0x20000684
 800412c:	45098000 	.word	0x45098000
 8004130:	c4610000 	.word	0xc4610000
 8004134:	c47a0000 	.word	0xc47a0000
 8004138:	f44f 7361 	mov.w	r3, #900	; 0x384
 800413c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004140:	6353      	str	r3, [r2, #52]	; 0x34
				//Hátsó szervó
				PHI/= 2;
 8004142:	4b76      	ldr	r3, [pc, #472]	; (800431c <Line_Track_Task+0x7ac>)
 8004144:	ed93 7a00 	vldr	s14, [r3]
 8004148:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 800414c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8004150:	4b72      	ldr	r3, [pc, #456]	; (800431c <Line_Track_Task+0x7ac>)
 8004152:	edc3 7a00 	vstr	s15, [r3]
				ccr = (uint16_t)(-SERVO_M_CORNER * PHI + SERVO_REAR_CCR_MIDDLE);
 8004156:	4b71      	ldr	r3, [pc, #452]	; (800431c <Line_Track_Task+0x7ac>)
 8004158:	edd3 7a00 	vldr	s15, [r3]
 800415c:	ed9f 7a70 	vldr	s14, [pc, #448]	; 8004320 <Line_Track_Task+0x7b0>
 8004160:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004164:	ed9f 7a6f 	vldr	s14, [pc, #444]	; 8004324 <Line_Track_Task+0x7b4>
 8004168:	ee77 7a87 	vadd.f32	s15, s15, s14
 800416c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004170:	ee17 3a90 	vmov	r3, s15
 8004174:	b29b      	uxth	r3, r3
 8004176:	461a      	mov	r2, r3
 8004178:	4b6b      	ldr	r3, [pc, #428]	; (8004328 <Line_Track_Task+0x7b8>)
 800417a:	601a      	str	r2, [r3, #0]
				REAR_CCR(ccr);
 800417c:	4b6a      	ldr	r3, [pc, #424]	; (8004328 <Line_Track_Task+0x7b8>)
 800417e:	681b      	ldr	r3, [r3, #0]
 8004180:	f5b3 7f39 	cmp.w	r3, #740	; 0x2e4
 8004184:	dc07      	bgt.n	8004196 <Line_Track_Task+0x626>
 8004186:	4b68      	ldr	r3, [pc, #416]	; (8004328 <Line_Track_Task+0x7b8>)
 8004188:	681b      	ldr	r3, [r3, #0]
 800418a:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800418e:	bfb8      	it	lt
 8004190:	f44f 73c8 	movlt.w	r3, #400	; 0x190
 8004194:	e001      	b.n	800419a <Line_Track_Task+0x62a>
 8004196:	f44f 7339 	mov.w	r3, #740	; 0x2e4
 800419a:	4a64      	ldr	r2, [pc, #400]	; (800432c <Line_Track_Task+0x7bc>)
 800419c:	6413      	str	r3, [r2, #64]	; 0x40
 800419e:	e0a5      	b.n	80042ec <Line_Track_Task+0x77c>
			}
		}
		else if(fast_mode_state==SC_MODE)
 80041a0:	4b63      	ldr	r3, [pc, #396]	; (8004330 <Line_Track_Task+0x7c0>)
 80041a2:	781b      	ldrb	r3, [r3, #0]
 80041a4:	2b00      	cmp	r3, #0
 80041a6:	d153      	bne.n	8004250 <Line_Track_Task+0x6e0>
		{
			//Első szervó
			ccr = (uint16_t)(-SERVO_M_SC * PHI + SERVO_FRONT_CCR_MIDDLE);
 80041a8:	4b5c      	ldr	r3, [pc, #368]	; (800431c <Line_Track_Task+0x7ac>)
 80041aa:	edd3 7a00 	vldr	s15, [r3]
 80041ae:	ed9f 7a61 	vldr	s14, [pc, #388]	; 8004334 <Line_Track_Task+0x7c4>
 80041b2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80041b6:	ed9f 7a60 	vldr	s14, [pc, #384]	; 8004338 <Line_Track_Task+0x7c8>
 80041ba:	ee77 7a87 	vadd.f32	s15, s15, s14
 80041be:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80041c2:	ee17 3a90 	vmov	r3, s15
 80041c6:	b29b      	uxth	r3, r3
 80041c8:	461a      	mov	r2, r3
 80041ca:	4b57      	ldr	r3, [pc, #348]	; (8004328 <Line_Track_Task+0x7b8>)
 80041cc:	601a      	str	r2, [r3, #0]
			FRONT_CCR(ccr);
 80041ce:	4b56      	ldr	r3, [pc, #344]	; (8004328 <Line_Track_Task+0x7b8>)
 80041d0:	681b      	ldr	r3, [r3, #0]
 80041d2:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 80041d6:	dc07      	bgt.n	80041e8 <Line_Track_Task+0x678>
 80041d8:	4b53      	ldr	r3, [pc, #332]	; (8004328 <Line_Track_Task+0x7b8>)
 80041da:	681b      	ldr	r3, [r3, #0]
 80041dc:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 80041e0:	bfb8      	it	lt
 80041e2:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 80041e6:	e001      	b.n	80041ec <Line_Track_Task+0x67c>
 80041e8:	f44f 7361 	mov.w	r3, #900	; 0x384
 80041ec:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80041f0:	6353      	str	r3, [r2, #52]	; 0x34

			//Hátsó szervó
			PHI/= 3;
 80041f2:	4b4a      	ldr	r3, [pc, #296]	; (800431c <Line_Track_Task+0x7ac>)
 80041f4:	ed93 7a00 	vldr	s14, [r3]
 80041f8:	eef0 6a08 	vmov.f32	s13, #8	; 0x40400000  3.0
 80041fc:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8004200:	4b46      	ldr	r3, [pc, #280]	; (800431c <Line_Track_Task+0x7ac>)
 8004202:	edc3 7a00 	vstr	s15, [r3]
			ccr = (uint16_t)(-SERVO_M_SC * PHI + SERVO_REAR_CCR_MIDDLE);
 8004206:	4b45      	ldr	r3, [pc, #276]	; (800431c <Line_Track_Task+0x7ac>)
 8004208:	edd3 7a00 	vldr	s15, [r3]
 800420c:	ed9f 7a49 	vldr	s14, [pc, #292]	; 8004334 <Line_Track_Task+0x7c4>
 8004210:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004214:	ed9f 7a43 	vldr	s14, [pc, #268]	; 8004324 <Line_Track_Task+0x7b4>
 8004218:	ee77 7a87 	vadd.f32	s15, s15, s14
 800421c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004220:	ee17 3a90 	vmov	r3, s15
 8004224:	b29b      	uxth	r3, r3
 8004226:	461a      	mov	r2, r3
 8004228:	4b3f      	ldr	r3, [pc, #252]	; (8004328 <Line_Track_Task+0x7b8>)
 800422a:	601a      	str	r2, [r3, #0]
			REAR_CCR(ccr);
 800422c:	4b3e      	ldr	r3, [pc, #248]	; (8004328 <Line_Track_Task+0x7b8>)
 800422e:	681b      	ldr	r3, [r3, #0]
 8004230:	f5b3 7f39 	cmp.w	r3, #740	; 0x2e4
 8004234:	dc07      	bgt.n	8004246 <Line_Track_Task+0x6d6>
 8004236:	4b3c      	ldr	r3, [pc, #240]	; (8004328 <Line_Track_Task+0x7b8>)
 8004238:	681b      	ldr	r3, [r3, #0]
 800423a:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800423e:	bfb8      	it	lt
 8004240:	f44f 73c8 	movlt.w	r3, #400	; 0x190
 8004244:	e001      	b.n	800424a <Line_Track_Task+0x6da>
 8004246:	f44f 7339 	mov.w	r3, #740	; 0x2e4
 800424a:	4a38      	ldr	r2, [pc, #224]	; (800432c <Line_Track_Task+0x7bc>)
 800424c:	6413      	str	r3, [r2, #64]	; 0x40
 800424e:	e04d      	b.n	80042ec <Line_Track_Task+0x77c>
		}
		else if(fast_mode_state==OVERTAKE_MODE)
 8004250:	4b37      	ldr	r3, [pc, #220]	; (8004330 <Line_Track_Task+0x7c0>)
 8004252:	781b      	ldrb	r3, [r3, #0]
 8004254:	2b02      	cmp	r3, #2
 8004256:	d149      	bne.n	80042ec <Line_Track_Task+0x77c>
		{
			static uint8_t overtake_state=0;
			static uint32_t t_stamp_overtake=0;
			if(overtake_state==0)
 8004258:	4b38      	ldr	r3, [pc, #224]	; (800433c <Line_Track_Task+0x7cc>)
 800425a:	781b      	ldrb	r3, [r3, #0]
 800425c:	2b00      	cmp	r3, #0
 800425e:	d115      	bne.n	800428c <Line_Track_Task+0x71c>
			{
				v_ref=1000;
 8004260:	4b37      	ldr	r3, [pc, #220]	; (8004340 <Line_Track_Task+0x7d0>)
 8004262:	4a38      	ldr	r2, [pc, #224]	; (8004344 <Line_Track_Task+0x7d4>)
 8004264:	601a      	str	r2, [r3, #0]
				t_stamp_overtake=tick;
 8004266:	4a38      	ldr	r2, [pc, #224]	; (8004348 <Line_Track_Task+0x7d8>)
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	6013      	str	r3, [r2, #0]
				leaveLineEnabled=1;
 800426c:	4b37      	ldr	r3, [pc, #220]	; (800434c <Line_Track_Task+0x7dc>)
 800426e:	2201      	movs	r2, #1
 8004270:	701a      	strb	r2, [r3, #0]
				FRONT_CCR(SERVO_FRONT_CCR_MIDDLE+130);
 8004272:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004276:	f240 3232 	movw	r2, #818	; 0x332
 800427a:	635a      	str	r2, [r3, #52]	; 0x34
				REAR_CCR(SERVO_REAR_CCR_MIDDLE-130);
 800427c:	4b2b      	ldr	r3, [pc, #172]	; (800432c <Line_Track_Task+0x7bc>)
 800427e:	f44f 72e3 	mov.w	r2, #454	; 0x1c6
 8004282:	641a      	str	r2, [r3, #64]	; 0x40
				overtake_state=1;
 8004284:	4b2d      	ldr	r3, [pc, #180]	; (800433c <Line_Track_Task+0x7cc>)
 8004286:	2201      	movs	r2, #1
 8004288:	701a      	strb	r2, [r3, #0]
 800428a:	e02f      	b.n	80042ec <Line_Track_Task+0x77c>
			}
			else if(overtake_state==1 && (tick-t_stamp_overtake)>2500)
 800428c:	4b2b      	ldr	r3, [pc, #172]	; (800433c <Line_Track_Task+0x7cc>)
 800428e:	781b      	ldrb	r3, [r3, #0]
 8004290:	2b01      	cmp	r3, #1
 8004292:	d117      	bne.n	80042c4 <Line_Track_Task+0x754>
 8004294:	4b2c      	ldr	r3, [pc, #176]	; (8004348 <Line_Track_Task+0x7d8>)
 8004296:	681b      	ldr	r3, [r3, #0]
 8004298:	687a      	ldr	r2, [r7, #4]
 800429a:	1ad3      	subs	r3, r2, r3
 800429c:	f640 12c4 	movw	r2, #2500	; 0x9c4
 80042a0:	4293      	cmp	r3, r2
 80042a2:	d90f      	bls.n	80042c4 <Line_Track_Task+0x754>
			{
				v_ref=3000;
 80042a4:	4b26      	ldr	r3, [pc, #152]	; (8004340 <Line_Track_Task+0x7d0>)
 80042a6:	4a2a      	ldr	r2, [pc, #168]	; (8004350 <Line_Track_Task+0x7e0>)
 80042a8:	601a      	str	r2, [r3, #0]
				FRONT_CCR(SERVO_FRONT_CCR_MIDDLE-20);
 80042aa:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80042ae:	f44f 7227 	mov.w	r2, #668	; 0x29c
 80042b2:	635a      	str	r2, [r3, #52]	; 0x34
				REAR_CCR(SERVO_REAR_CCR_MIDDLE+20);
 80042b4:	4b1d      	ldr	r3, [pc, #116]	; (800432c <Line_Track_Task+0x7bc>)
 80042b6:	f44f 7217 	mov.w	r2, #604	; 0x25c
 80042ba:	641a      	str	r2, [r3, #64]	; 0x40
				overtake_state=2;
 80042bc:	4b1f      	ldr	r3, [pc, #124]	; (800433c <Line_Track_Task+0x7cc>)
 80042be:	2202      	movs	r2, #2
 80042c0:	701a      	strb	r2, [r3, #0]
 80042c2:	e013      	b.n	80042ec <Line_Track_Task+0x77c>
			}
			else if(overtake_state==2 && LINE_CNT>0)
 80042c4:	4b1d      	ldr	r3, [pc, #116]	; (800433c <Line_Track_Task+0x7cc>)
 80042c6:	781b      	ldrb	r3, [r3, #0]
 80042c8:	2b02      	cmp	r3, #2
 80042ca:	d10f      	bne.n	80042ec <Line_Track_Task+0x77c>
 80042cc:	4b21      	ldr	r3, [pc, #132]	; (8004354 <Line_Track_Task+0x7e4>)
 80042ce:	785b      	ldrb	r3, [r3, #1]
 80042d0:	2b00      	cmp	r3, #0
 80042d2:	d00b      	beq.n	80042ec <Line_Track_Task+0x77c>
			{
				v_ref=1200;
 80042d4:	4b1a      	ldr	r3, [pc, #104]	; (8004340 <Line_Track_Task+0x7d0>)
 80042d6:	4a20      	ldr	r2, [pc, #128]	; (8004358 <Line_Track_Task+0x7e8>)
 80042d8:	601a      	str	r2, [r3, #0]
				overtake_state=0;
 80042da:	4b18      	ldr	r3, [pc, #96]	; (800433c <Line_Track_Task+0x7cc>)
 80042dc:	2200      	movs	r2, #0
 80042de:	701a      	strb	r2, [r3, #0]
				fast_mode_state=FREERUN_MODE;
 80042e0:	4b13      	ldr	r3, [pc, #76]	; (8004330 <Line_Track_Task+0x7c0>)
 80042e2:	2201      	movs	r2, #1
 80042e4:	701a      	strb	r2, [r3, #0]
				leaveLineEnabled=0;
 80042e6:	4b19      	ldr	r3, [pc, #100]	; (800434c <Line_Track_Task+0x7dc>)
 80042e8:	2200      	movs	r2, #0
 80042ea:	701a      	strb	r2, [r3, #0]
			}
		}
	}

	tick_prev=tick;
 80042ec:	4a1b      	ldr	r2, [pc, #108]	; (800435c <Line_Track_Task+0x7ec>)
 80042ee:	687b      	ldr	r3, [r7, #4]
 80042f0:	6013      	str	r3, [r2, #0]
 80042f2:	e010      	b.n	8004316 <Line_Track_Task+0x7a6>
	if(line_track_task_tick>tick) return;
 80042f4:	bf00      	nop
 80042f6:	e00e      	b.n	8004316 <Line_Track_Task+0x7a6>
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_FORWARD))return;
 80042f8:	bf00      	nop
 80042fa:	e00c      	b.n	8004316 <Line_Track_Task+0x7a6>
			if(tmp)return;
 80042fc:	bf00      	nop
 80042fe:	e00a      	b.n	8004316 <Line_Track_Task+0x7a6>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 8004300:	bf00      	nop
 8004302:	e008      	b.n	8004316 <Line_Track_Task+0x7a6>
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_REVERSE))return;
 8004304:	bf00      	nop
 8004306:	e006      	b.n	8004316 <Line_Track_Task+0x7a6>
			if(tmp)return;
 8004308:	bf00      	nop
 800430a:	e004      	b.n	8004316 <Line_Track_Task+0x7a6>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 800430c:	bf00      	nop
 800430e:	e002      	b.n	8004316 <Line_Track_Task+0x7a6>
		if(G0_Read_Fast(huart_stm, huart_debugg)) return; //ha sikertelen az olvasás a G0 ból akkor nincs értelme az egésznek
 8004310:	bf00      	nop
 8004312:	e000      	b.n	8004316 <Line_Track_Task+0x7a6>
		if((LINE_CNT<1 || LINE_CNT > 3) && !leaveLineEnabled) return;//ha nincs vonal a kocsi alatt
 8004314:	bf00      	nop
}
 8004316:	3718      	adds	r7, #24
 8004318:	46bd      	mov	sp, r7
 800431a:	bd80      	pop	{r7, pc}
 800431c:	200006b0 	.word	0x200006b0
 8004320:	c47a0000 	.word	0xc47a0000
 8004324:	44120000 	.word	0x44120000
 8004328:	20000044 	.word	0x20000044
 800432c:	40010000 	.word	0x40010000
 8004330:	200006b4 	.word	0x200006b4
 8004334:	c4a28000 	.word	0xc4a28000
 8004338:	442c0000 	.word	0x442c0000
 800433c:	200006b5 	.word	0x200006b5
 8004340:	200002a8 	.word	0x200002a8
 8004344:	447a0000 	.word	0x447a0000
 8004348:	200006b8 	.word	0x200006b8
 800434c:	200002ac 	.word	0x200002ac
 8004350:	453b8000 	.word	0x453b8000
 8004354:	2000069c 	.word	0x2000069c
 8004358:	44960000 	.word	0x44960000
 800435c:	200006bc 	.word	0x200006bc

08004360 <Fast_Mode>:

float Fast_Mode(UART_HandleTypeDef *huart_debugg,uint8_t* state_pointer, uint32_t t)
{
 8004360:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8004364:	b088      	sub	sp, #32
 8004366:	af00      	add	r7, sp, #0
 8004368:	60f8      	str	r0, [r7, #12]
 800436a:	60b9      	str	r1, [r7, #8]
 800436c:	607a      	str	r2, [r7, #4]
	static float x_elso_prev=0;
	static float x_hatso;
	static float delta;
	static float gamma;

	uint8_t state = *state_pointer;
 800436e:	68bb      	ldr	r3, [r7, #8]
 8004370:	781b      	ldrb	r3, [r3, #0]
 8004372:	77fb      	strb	r3, [r7, #31]

	if(state==OVERTAKE_MODE)return 0;
 8004374:	7ffb      	ldrb	r3, [r7, #31]
 8004376:	2b02      	cmp	r3, #2
 8004378:	d102      	bne.n	8004380 <Fast_Mode+0x20>
 800437a:	f04f 0300 	mov.w	r3, #0
 800437e:	e29e      	b.n	80048be <Fast_Mode+0x55e>
/**/
	//BOOST detect
	if(LINE_CNT != lineCnt_prev && (LINE_CNT==1 || LINE_CNT==3)) //ha változik az alattunk lévő vonalak száma
 8004380:	4b9b      	ldr	r3, [pc, #620]	; (80045f0 <Fast_Mode+0x290>)
 8004382:	785a      	ldrb	r2, [r3, #1]
 8004384:	4b9b      	ldr	r3, [pc, #620]	; (80045f4 <Fast_Mode+0x294>)
 8004386:	781b      	ldrb	r3, [r3, #0]
 8004388:	429a      	cmp	r2, r3
 800438a:	f000 80bb 	beq.w	8004504 <Fast_Mode+0x1a4>
 800438e:	4b98      	ldr	r3, [pc, #608]	; (80045f0 <Fast_Mode+0x290>)
 8004390:	785b      	ldrb	r3, [r3, #1]
 8004392:	2b01      	cmp	r3, #1
 8004394:	d004      	beq.n	80043a0 <Fast_Mode+0x40>
 8004396:	4b96      	ldr	r3, [pc, #600]	; (80045f0 <Fast_Mode+0x290>)
 8004398:	785b      	ldrb	r3, [r3, #1]
 800439a:	2b03      	cmp	r3, #3
 800439c:	f040 80b2 	bne.w	8004504 <Fast_Mode+0x1a4>
	{
		ds[index]=fabs(v)*(t-t_stamp_boost)/1000;
 80043a0:	4b95      	ldr	r3, [pc, #596]	; (80045f8 <Fast_Mode+0x298>)
 80043a2:	edd3 7a00 	vldr	s15, [r3]
 80043a6:	eef0 7ae7 	vabs.f32	s15, s15
 80043aa:	ee17 0a90 	vmov	r0, s15
 80043ae:	f7fc f8eb 	bl	8000588 <__aeabi_f2d>
 80043b2:	4604      	mov	r4, r0
 80043b4:	460d      	mov	r5, r1
 80043b6:	4b91      	ldr	r3, [pc, #580]	; (80045fc <Fast_Mode+0x29c>)
 80043b8:	681b      	ldr	r3, [r3, #0]
 80043ba:	687a      	ldr	r2, [r7, #4]
 80043bc:	1ad3      	subs	r3, r2, r3
 80043be:	4618      	mov	r0, r3
 80043c0:	f7fc f8c0 	bl	8000544 <__aeabi_ui2d>
 80043c4:	4602      	mov	r2, r0
 80043c6:	460b      	mov	r3, r1
 80043c8:	4620      	mov	r0, r4
 80043ca:	4629      	mov	r1, r5
 80043cc:	f7fc f934 	bl	8000638 <__aeabi_dmul>
 80043d0:	4602      	mov	r2, r0
 80043d2:	460b      	mov	r3, r1
 80043d4:	4610      	mov	r0, r2
 80043d6:	4619      	mov	r1, r3
 80043d8:	f04f 0200 	mov.w	r2, #0
 80043dc:	4b88      	ldr	r3, [pc, #544]	; (8004600 <Fast_Mode+0x2a0>)
 80043de:	f7fc fa55 	bl	800088c <__aeabi_ddiv>
 80043e2:	4602      	mov	r2, r0
 80043e4:	460b      	mov	r3, r1
 80043e6:	4987      	ldr	r1, [pc, #540]	; (8004604 <Fast_Mode+0x2a4>)
 80043e8:	7809      	ldrb	r1, [r1, #0]
 80043ea:	460c      	mov	r4, r1
 80043ec:	4610      	mov	r0, r2
 80043ee:	4619      	mov	r1, r3
 80043f0:	f7fc fbfa 	bl	8000be8 <__aeabi_d2f>
 80043f4:	4602      	mov	r2, r0
 80043f6:	4984      	ldr	r1, [pc, #528]	; (8004608 <Fast_Mode+0x2a8>)
 80043f8:	00a3      	lsls	r3, r4, #2
 80043fa:	440b      	add	r3, r1
 80043fc:	601a      	str	r2, [r3, #0]
		float s_boost = ds[0]+ds[1]+ds[2]+ds[3]+ds[4]+ds[5]+ds[6]+ds[7];
 80043fe:	4b82      	ldr	r3, [pc, #520]	; (8004608 <Fast_Mode+0x2a8>)
 8004400:	ed93 7a00 	vldr	s14, [r3]
 8004404:	4b80      	ldr	r3, [pc, #512]	; (8004608 <Fast_Mode+0x2a8>)
 8004406:	edd3 7a01 	vldr	s15, [r3, #4]
 800440a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800440e:	4b7e      	ldr	r3, [pc, #504]	; (8004608 <Fast_Mode+0x2a8>)
 8004410:	edd3 7a02 	vldr	s15, [r3, #8]
 8004414:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004418:	4b7b      	ldr	r3, [pc, #492]	; (8004608 <Fast_Mode+0x2a8>)
 800441a:	edd3 7a03 	vldr	s15, [r3, #12]
 800441e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004422:	4b79      	ldr	r3, [pc, #484]	; (8004608 <Fast_Mode+0x2a8>)
 8004424:	edd3 7a04 	vldr	s15, [r3, #16]
 8004428:	ee37 7a27 	vadd.f32	s14, s14, s15
 800442c:	4b76      	ldr	r3, [pc, #472]	; (8004608 <Fast_Mode+0x2a8>)
 800442e:	edd3 7a05 	vldr	s15, [r3, #20]
 8004432:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004436:	4b74      	ldr	r3, [pc, #464]	; (8004608 <Fast_Mode+0x2a8>)
 8004438:	edd3 7a06 	vldr	s15, [r3, #24]
 800443c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004440:	4b71      	ldr	r3, [pc, #452]	; (8004608 <Fast_Mode+0x2a8>)
 8004442:	edd3 7a07 	vldr	s15, [r3, #28]
 8004446:	ee77 7a27 	vadd.f32	s15, s14, s15
 800444a:	edc7 7a06 	vstr	s15, [r7, #24]
		if(s_boost>250.0 && s_boost<800.0 && boostOrBrake==1) // ha 70 és 80 cm közt bekövetkezik 8 vonalszámváltás
 800444e:	edd7 7a06 	vldr	s15, [r7, #24]
 8004452:	ed9f 7a6e 	vldr	s14, [pc, #440]	; 800460c <Fast_Mode+0x2ac>
 8004456:	eef4 7ac7 	vcmpe.f32	s15, s14
 800445a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800445e:	dd41      	ble.n	80044e4 <Fast_Mode+0x184>
 8004460:	edd7 7a06 	vldr	s15, [r7, #24]
 8004464:	ed9f 7a6a 	vldr	s14, [pc, #424]	; 8004610 <Fast_Mode+0x2b0>
 8004468:	eef4 7ac7 	vcmpe.f32	s15, s14
 800446c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004470:	d538      	bpl.n	80044e4 <Fast_Mode+0x184>
 8004472:	4b68      	ldr	r3, [pc, #416]	; (8004614 <Fast_Mode+0x2b4>)
 8004474:	781b      	ldrb	r3, [r3, #0]
 8004476:	2b01      	cmp	r3, #1
 8004478:	d134      	bne.n	80044e4 <Fast_Mode+0x184>
		{
			boostOrBrake=2;
 800447a:	4b66      	ldr	r3, [pc, #408]	; (8004614 <Fast_Mode+0x2b4>)
 800447c:	2202      	movs	r2, #2
 800447e:	701a      	strb	r2, [r3, #0]
			boostCnt++;
 8004480:	4b65      	ldr	r3, [pc, #404]	; (8004618 <Fast_Mode+0x2b8>)
 8004482:	881b      	ldrh	r3, [r3, #0]
 8004484:	3301      	adds	r3, #1
 8004486:	b29a      	uxth	r2, r3
 8004488:	4b63      	ldr	r3, [pc, #396]	; (8004618 <Fast_Mode+0x2b8>)
 800448a:	801a      	strh	r2, [r3, #0]
			if((boostCnt==3 || boostCnt==11) && state==SC_MODE)
 800448c:	4b62      	ldr	r3, [pc, #392]	; (8004618 <Fast_Mode+0x2b8>)
 800448e:	881b      	ldrh	r3, [r3, #0]
 8004490:	2b03      	cmp	r3, #3
 8004492:	d003      	beq.n	800449c <Fast_Mode+0x13c>
 8004494:	4b60      	ldr	r3, [pc, #384]	; (8004618 <Fast_Mode+0x2b8>)
 8004496:	881b      	ldrh	r3, [r3, #0]
 8004498:	2b0b      	cmp	r3, #11
 800449a:	d108      	bne.n	80044ae <Fast_Mode+0x14e>
 800449c:	7ffb      	ldrb	r3, [r7, #31]
 800449e:	2b00      	cmp	r3, #0
 80044a0:	d105      	bne.n	80044ae <Fast_Mode+0x14e>
			{
				*state_pointer=OVERTAKE_MODE;
 80044a2:	68bb      	ldr	r3, [r7, #8]
 80044a4:	2202      	movs	r2, #2
 80044a6:	701a      	strb	r2, [r3, #0]
				return 0;
 80044a8:	f04f 0300 	mov.w	r3, #0
 80044ac:	e207      	b.n	80048be <Fast_Mode+0x55e>
			}
			else if(state==FREERUN_MODE && boostCnt==8)
 80044ae:	7ffb      	ldrb	r3, [r7, #31]
 80044b0:	2b01      	cmp	r3, #1
 80044b2:	d105      	bne.n	80044c0 <Fast_Mode+0x160>
 80044b4:	4b58      	ldr	r3, [pc, #352]	; (8004618 <Fast_Mode+0x2b8>)
 80044b6:	881b      	ldrh	r3, [r3, #0]
 80044b8:	2b08      	cmp	r3, #8
 80044ba:	d101      	bne.n	80044c0 <Fast_Mode+0x160>
			{
				state=SC_MODE;
 80044bc:	2300      	movs	r3, #0
 80044be:	77fb      	strb	r3, [r7, #31]
			}
			if(state==FREERUN_MODE)
 80044c0:	7ffb      	ldrb	r3, [r7, #31]
 80044c2:	2b01      	cmp	r3, #1
 80044c4:	d109      	bne.n	80044da <Fast_Mode+0x17a>
			{
				v_ref=3000;
 80044c6:	4b55      	ldr	r3, [pc, #340]	; (800461c <Fast_Mode+0x2bc>)
 80044c8:	4a55      	ldr	r2, [pc, #340]	; (8004620 <Fast_Mode+0x2c0>)
 80044ca:	601a      	str	r2, [r3, #0]
				LED_B(1);
 80044cc:	2200      	movs	r2, #0
 80044ce:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80044d2:	4854      	ldr	r0, [pc, #336]	; (8004624 <Fast_Mode+0x2c4>)
 80044d4:	f004 f8b0 	bl	8008638 <HAL_GPIO_WritePin>
 80044d8:	e004      	b.n	80044e4 <Fast_Mode+0x184>
			}
			else LED_B_TOGGLE;
 80044da:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80044de:	4851      	ldr	r0, [pc, #324]	; (8004624 <Fast_Mode+0x2c4>)
 80044e0:	f004 f8c3 	bl	800866a <HAL_GPIO_TogglePin>
		}
		index++;
 80044e4:	4b47      	ldr	r3, [pc, #284]	; (8004604 <Fast_Mode+0x2a4>)
 80044e6:	781b      	ldrb	r3, [r3, #0]
 80044e8:	3301      	adds	r3, #1
 80044ea:	b2da      	uxtb	r2, r3
 80044ec:	4b45      	ldr	r3, [pc, #276]	; (8004604 <Fast_Mode+0x2a4>)
 80044ee:	701a      	strb	r2, [r3, #0]
		if(index>7) index=0;
 80044f0:	4b44      	ldr	r3, [pc, #272]	; (8004604 <Fast_Mode+0x2a4>)
 80044f2:	781b      	ldrb	r3, [r3, #0]
 80044f4:	2b07      	cmp	r3, #7
 80044f6:	d902      	bls.n	80044fe <Fast_Mode+0x19e>
 80044f8:	4b42      	ldr	r3, [pc, #264]	; (8004604 <Fast_Mode+0x2a4>)
 80044fa:	2200      	movs	r2, #0
 80044fc:	701a      	strb	r2, [r3, #0]
		t_stamp_boost = t;
 80044fe:	4a3f      	ldr	r2, [pc, #252]	; (80045fc <Fast_Mode+0x29c>)
 8004500:	687b      	ldr	r3, [r7, #4]
 8004502:	6013      	str	r3, [r2, #0]
	}
	lineCnt_prev = LINE_CNT; //az előző értéket a jelenlegihez hangoljuk
 8004504:	4b3a      	ldr	r3, [pc, #232]	; (80045f0 <Fast_Mode+0x290>)
 8004506:	785a      	ldrb	r2, [r3, #1]
 8004508:	4b3a      	ldr	r3, [pc, #232]	; (80045f4 <Fast_Mode+0x294>)
 800450a:	701a      	strb	r2, [r3, #0]

	//BRAKING detect -> erre csak gyors üzemmódban van szükség
	if(LINE_CNT > 1) //ha 3 vonalat érzékelünk
 800450c:	4b38      	ldr	r3, [pc, #224]	; (80045f0 <Fast_Mode+0x290>)
 800450e:	785b      	ldrb	r3, [r3, #1]
 8004510:	2b01      	cmp	r3, #1
 8004512:	d950      	bls.n	80045b6 <Fast_Mode+0x256>
	{
		s_brake += fabs(v)*(t-t_prev)/1000;
 8004514:	4b44      	ldr	r3, [pc, #272]	; (8004628 <Fast_Mode+0x2c8>)
 8004516:	681b      	ldr	r3, [r3, #0]
 8004518:	4618      	mov	r0, r3
 800451a:	f7fc f835 	bl	8000588 <__aeabi_f2d>
 800451e:	4604      	mov	r4, r0
 8004520:	460d      	mov	r5, r1
 8004522:	4b35      	ldr	r3, [pc, #212]	; (80045f8 <Fast_Mode+0x298>)
 8004524:	edd3 7a00 	vldr	s15, [r3]
 8004528:	eef0 7ae7 	vabs.f32	s15, s15
 800452c:	ee17 0a90 	vmov	r0, s15
 8004530:	f7fc f82a 	bl	8000588 <__aeabi_f2d>
 8004534:	4680      	mov	r8, r0
 8004536:	4689      	mov	r9, r1
 8004538:	4b3c      	ldr	r3, [pc, #240]	; (800462c <Fast_Mode+0x2cc>)
 800453a:	681b      	ldr	r3, [r3, #0]
 800453c:	687a      	ldr	r2, [r7, #4]
 800453e:	1ad3      	subs	r3, r2, r3
 8004540:	4618      	mov	r0, r3
 8004542:	f7fb ffff 	bl	8000544 <__aeabi_ui2d>
 8004546:	4602      	mov	r2, r0
 8004548:	460b      	mov	r3, r1
 800454a:	4640      	mov	r0, r8
 800454c:	4649      	mov	r1, r9
 800454e:	f7fc f873 	bl	8000638 <__aeabi_dmul>
 8004552:	4602      	mov	r2, r0
 8004554:	460b      	mov	r3, r1
 8004556:	4610      	mov	r0, r2
 8004558:	4619      	mov	r1, r3
 800455a:	f04f 0200 	mov.w	r2, #0
 800455e:	4b28      	ldr	r3, [pc, #160]	; (8004600 <Fast_Mode+0x2a0>)
 8004560:	f7fc f994 	bl	800088c <__aeabi_ddiv>
 8004564:	4602      	mov	r2, r0
 8004566:	460b      	mov	r3, r1
 8004568:	4620      	mov	r0, r4
 800456a:	4629      	mov	r1, r5
 800456c:	f7fb feae 	bl	80002cc <__adddf3>
 8004570:	4602      	mov	r2, r0
 8004572:	460b      	mov	r3, r1
 8004574:	4610      	mov	r0, r2
 8004576:	4619      	mov	r1, r3
 8004578:	f7fc fb36 	bl	8000be8 <__aeabi_d2f>
 800457c:	4603      	mov	r3, r0
 800457e:	4a2a      	ldr	r2, [pc, #168]	; (8004628 <Fast_Mode+0x2c8>)
 8004580:	6013      	str	r3, [r2, #0]
		if(s_brake>400) //ha már legalább 30cm óta folyamatosan 3 vonal van alattunk
 8004582:	4b29      	ldr	r3, [pc, #164]	; (8004628 <Fast_Mode+0x2c8>)
 8004584:	edd3 7a00 	vldr	s15, [r3]
 8004588:	ed9f 7a2a 	vldr	s14, [pc, #168]	; 8004634 <Fast_Mode+0x2d4>
 800458c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004590:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004594:	dd13      	ble.n	80045be <Fast_Mode+0x25e>
		{
			boostOrBrake=1;
 8004596:	4b1f      	ldr	r3, [pc, #124]	; (8004614 <Fast_Mode+0x2b4>)
 8004598:	2201      	movs	r2, #1
 800459a:	701a      	strb	r2, [r3, #0]
			if(state == FREERUN_MODE)
 800459c:	7ffb      	ldrb	r3, [r7, #31]
 800459e:	2b01      	cmp	r3, #1
 80045a0:	d10d      	bne.n	80045be <Fast_Mode+0x25e>
			{
				v_ref = 1500;
 80045a2:	4b1e      	ldr	r3, [pc, #120]	; (800461c <Fast_Mode+0x2bc>)
 80045a4:	4a22      	ldr	r2, [pc, #136]	; (8004630 <Fast_Mode+0x2d0>)
 80045a6:	601a      	str	r2, [r3, #0]
				LED_B(0);
 80045a8:	2201      	movs	r2, #1
 80045aa:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80045ae:	481d      	ldr	r0, [pc, #116]	; (8004624 <Fast_Mode+0x2c4>)
 80045b0:	f004 f842 	bl	8008638 <HAL_GPIO_WritePin>
 80045b4:	e003      	b.n	80045be <Fast_Mode+0x25e>
			}
		}
	}
	else //ha 1 vonalat érzékelünk
	{
		s_brake=0;
 80045b6:	4b1c      	ldr	r3, [pc, #112]	; (8004628 <Fast_Mode+0x2c8>)
 80045b8:	f04f 0200 	mov.w	r2, #0
 80045bc:	601a      	str	r2, [r3, #0]
	}
	t_prev=t;
 80045be:	4a1b      	ldr	r2, [pc, #108]	; (800462c <Fast_Mode+0x2cc>)
 80045c0:	687b      	ldr	r3, [r7, #4]
 80045c2:	6013      	str	r3, [r2, #0]

	/*****SC üzemmód******/
	if(state==SC_MODE)
 80045c4:	7ffb      	ldrb	r3, [r7, #31]
 80045c6:	2b00      	cmp	r3, #0
 80045c8:	d144      	bne.n	8004654 <Fast_Mode+0x2f4>
	{
		uint32_t dist=(((uint16_t)rxBuf[5])<<8) | ((uint16_t)rxBuf[6]);
 80045ca:	4b09      	ldr	r3, [pc, #36]	; (80045f0 <Fast_Mode+0x290>)
 80045cc:	795b      	ldrb	r3, [r3, #5]
 80045ce:	021b      	lsls	r3, r3, #8
 80045d0:	4a07      	ldr	r2, [pc, #28]	; (80045f0 <Fast_Mode+0x290>)
 80045d2:	7992      	ldrb	r2, [r2, #6]
 80045d4:	4313      	orrs	r3, r2
 80045d6:	617b      	str	r3, [r7, #20]
		if(dist>1000 || rxBuf[4]) v_ref=1500; //ha tul messze vana  SC vagy érvénytelen az olvasás
 80045d8:	697b      	ldr	r3, [r7, #20]
 80045da:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80045de:	d803      	bhi.n	80045e8 <Fast_Mode+0x288>
 80045e0:	4b03      	ldr	r3, [pc, #12]	; (80045f0 <Fast_Mode+0x290>)
 80045e2:	791b      	ldrb	r3, [r3, #4]
 80045e4:	2b00      	cmp	r3, #0
 80045e6:	d027      	beq.n	8004638 <Fast_Mode+0x2d8>
 80045e8:	4b0c      	ldr	r3, [pc, #48]	; (800461c <Fast_Mode+0x2bc>)
 80045ea:	4a11      	ldr	r2, [pc, #68]	; (8004630 <Fast_Mode+0x2d0>)
 80045ec:	601a      	str	r2, [r3, #0]
 80045ee:	e031      	b.n	8004654 <Fast_Mode+0x2f4>
 80045f0:	2000069c 	.word	0x2000069c
 80045f4:	20000048 	.word	0x20000048
 80045f8:	20000684 	.word	0x20000684
 80045fc:	200006c0 	.word	0x200006c0
 8004600:	408f4000 	.word	0x408f4000
 8004604:	200006c4 	.word	0x200006c4
 8004608:	2000004c 	.word	0x2000004c
 800460c:	437a0000 	.word	0x437a0000
 8004610:	44480000 	.word	0x44480000
 8004614:	2000006c 	.word	0x2000006c
 8004618:	200006a8 	.word	0x200006a8
 800461c:	200002a8 	.word	0x200002a8
 8004620:	453b8000 	.word	0x453b8000
 8004624:	40020400 	.word	0x40020400
 8004628:	200006c8 	.word	0x200006c8
 800462c:	200006cc 	.word	0x200006cc
 8004630:	44bb8000 	.word	0x44bb8000
 8004634:	43c80000 	.word	0x43c80000
		else v_ref = 2*(float)dist-400;
 8004638:	697b      	ldr	r3, [r7, #20]
 800463a:	ee07 3a90 	vmov	s15, r3
 800463e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004642:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8004646:	ed1f 7a05 	vldr	s14, [pc, #-20]	; 8004634 <Fast_Mode+0x2d4>
 800464a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800464e:	4ba6      	ldr	r3, [pc, #664]	; (80048e8 <Fast_Mode+0x588>)
 8004650:	edc3 7a00 	vstr	s15, [r3]
	}

	x_elso=(float)rxBuf[2]*204/248.0-102;//248
 8004654:	4ba5      	ldr	r3, [pc, #660]	; (80048ec <Fast_Mode+0x58c>)
 8004656:	789b      	ldrb	r3, [r3, #2]
 8004658:	ee07 3a90 	vmov	s15, r3
 800465c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004660:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 80048f0 <Fast_Mode+0x590>
 8004664:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004668:	ee17 0a90 	vmov	r0, s15
 800466c:	f7fb ff8c 	bl	8000588 <__aeabi_f2d>
 8004670:	f04f 0200 	mov.w	r2, #0
 8004674:	4b9f      	ldr	r3, [pc, #636]	; (80048f4 <Fast_Mode+0x594>)
 8004676:	f7fc f909 	bl	800088c <__aeabi_ddiv>
 800467a:	4602      	mov	r2, r0
 800467c:	460b      	mov	r3, r1
 800467e:	4610      	mov	r0, r2
 8004680:	4619      	mov	r1, r3
 8004682:	f04f 0200 	mov.w	r2, #0
 8004686:	4b9c      	ldr	r3, [pc, #624]	; (80048f8 <Fast_Mode+0x598>)
 8004688:	f7fb fe1e 	bl	80002c8 <__aeabi_dsub>
 800468c:	4602      	mov	r2, r0
 800468e:	460b      	mov	r3, r1
 8004690:	4610      	mov	r0, r2
 8004692:	4619      	mov	r1, r3
 8004694:	f7fc faa8 	bl	8000be8 <__aeabi_d2f>
 8004698:	4603      	mov	r3, r0
 800469a:	4a98      	ldr	r2, [pc, #608]	; (80048fc <Fast_Mode+0x59c>)
 800469c:	6013      	str	r3, [r2, #0]
	x_hatso=(float)rxBuf[3]*204/248.0-102; //244
 800469e:	4b93      	ldr	r3, [pc, #588]	; (80048ec <Fast_Mode+0x58c>)
 80046a0:	78db      	ldrb	r3, [r3, #3]
 80046a2:	ee07 3a90 	vmov	s15, r3
 80046a6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80046aa:	ed9f 7a91 	vldr	s14, [pc, #580]	; 80048f0 <Fast_Mode+0x590>
 80046ae:	ee67 7a87 	vmul.f32	s15, s15, s14
 80046b2:	ee17 0a90 	vmov	r0, s15
 80046b6:	f7fb ff67 	bl	8000588 <__aeabi_f2d>
 80046ba:	f04f 0200 	mov.w	r2, #0
 80046be:	4b8d      	ldr	r3, [pc, #564]	; (80048f4 <Fast_Mode+0x594>)
 80046c0:	f7fc f8e4 	bl	800088c <__aeabi_ddiv>
 80046c4:	4602      	mov	r2, r0
 80046c6:	460b      	mov	r3, r1
 80046c8:	4610      	mov	r0, r2
 80046ca:	4619      	mov	r1, r3
 80046cc:	f04f 0200 	mov.w	r2, #0
 80046d0:	4b89      	ldr	r3, [pc, #548]	; (80048f8 <Fast_Mode+0x598>)
 80046d2:	f7fb fdf9 	bl	80002c8 <__aeabi_dsub>
 80046d6:	4602      	mov	r2, r0
 80046d8:	460b      	mov	r3, r1
 80046da:	4610      	mov	r0, r2
 80046dc:	4619      	mov	r1, r3
 80046de:	f7fc fa83 	bl	8000be8 <__aeabi_d2f>
 80046e2:	4603      	mov	r3, r0
 80046e4:	4a86      	ldr	r2, [pc, #536]	; (8004900 <Fast_Mode+0x5a0>)
 80046e6:	6013      	str	r3, [r2, #0]
	delta=atan((float)(x_elso-x_hatso)/L_SENSOR);
 80046e8:	4b84      	ldr	r3, [pc, #528]	; (80048fc <Fast_Mode+0x59c>)
 80046ea:	ed93 7a00 	vldr	s14, [r3]
 80046ee:	4b84      	ldr	r3, [pc, #528]	; (8004900 <Fast_Mode+0x5a0>)
 80046f0:	edd3 7a00 	vldr	s15, [r3]
 80046f4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80046f8:	ee17 0a90 	vmov	r0, s15
 80046fc:	f7fb ff44 	bl	8000588 <__aeabi_f2d>
 8004700:	f04f 0200 	mov.w	r2, #0
 8004704:	4b7f      	ldr	r3, [pc, #508]	; (8004904 <Fast_Mode+0x5a4>)
 8004706:	f7fc f8c1 	bl	800088c <__aeabi_ddiv>
 800470a:	4602      	mov	r2, r0
 800470c:	460b      	mov	r3, r1
 800470e:	ec43 2b17 	vmov	d7, r2, r3
 8004712:	eeb0 0a47 	vmov.f32	s0, s14
 8004716:	eef0 0a67 	vmov.f32	s1, s15
 800471a:	f00a fcc1 	bl	800f0a0 <atan>
 800471e:	ec53 2b10 	vmov	r2, r3, d0
 8004722:	4610      	mov	r0, r2
 8004724:	4619      	mov	r1, r3
 8004726:	f7fc fa5f 	bl	8000be8 <__aeabi_d2f>
 800472a:	4603      	mov	r3, r0
 800472c:	4a76      	ldr	r2, [pc, #472]	; (8004908 <Fast_Mode+0x5a8>)
 800472e:	6013      	str	r3, [r2, #0]
	/**/
	//szabályozóparaméterek ujraszámolása az aktuális sebesség alapján
	if(state==SC_MODE)
 8004730:	7ffb      	ldrb	r3, [r7, #31]
 8004732:	2b00      	cmp	r3, #0
 8004734:	d10a      	bne.n	800474c <Fast_Mode+0x3ec>
	{
		k_p = -0.004;
 8004736:	4b75      	ldr	r3, [pc, #468]	; (800490c <Fast_Mode+0x5ac>)
 8004738:	4a75      	ldr	r2, [pc, #468]	; (8004910 <Fast_Mode+0x5b0>)
 800473a:	601a      	str	r2, [r3, #0]
		kD = -0.004;
 800473c:	4b75      	ldr	r3, [pc, #468]	; (8004914 <Fast_Mode+0x5b4>)
 800473e:	4a74      	ldr	r2, [pc, #464]	; (8004910 <Fast_Mode+0x5b0>)
 8004740:	601a      	str	r2, [r3, #0]
		k_delta = 0;
 8004742:	4b75      	ldr	r3, [pc, #468]	; (8004918 <Fast_Mode+0x5b8>)
 8004744:	f04f 0200 	mov.w	r2, #0
 8004748:	601a      	str	r2, [r3, #0]
 800474a:	e089      	b.n	8004860 <Fast_Mode+0x500>
	}

	else //FREERUN modes
	{
		if(v>150 || v<-150)
 800474c:	4b73      	ldr	r3, [pc, #460]	; (800491c <Fast_Mode+0x5bc>)
 800474e:	edd3 7a00 	vldr	s15, [r3]
 8004752:	ed9f 7a73 	vldr	s14, [pc, #460]	; 8004920 <Fast_Mode+0x5c0>
 8004756:	eef4 7ac7 	vcmpe.f32	s15, s14
 800475a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800475e:	dc09      	bgt.n	8004774 <Fast_Mode+0x414>
 8004760:	4b6e      	ldr	r3, [pc, #440]	; (800491c <Fast_Mode+0x5bc>)
 8004762:	edd3 7a00 	vldr	s15, [r3]
 8004766:	ed9f 7a6f 	vldr	s14, [pc, #444]	; 8004924 <Fast_Mode+0x5c4>
 800476a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800476e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004772:	d56c      	bpl.n	800484e <Fast_Mode+0x4ee>
		{
			if(v<2200) //kanyar
 8004774:	4b69      	ldr	r3, [pc, #420]	; (800491c <Fast_Mode+0x5bc>)
 8004776:	edd3 7a00 	vldr	s15, [r3]
 800477a:	ed9f 7a6b 	vldr	s14, [pc, #428]	; 8004928 <Fast_Mode+0x5c8>
 800477e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004782:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004786:	d50a      	bpl.n	800479e <Fast_Mode+0x43e>
			{
				k_p = -0.0026;//-L/(v*v)*S1MULTS2_SLOW;
 8004788:	4b60      	ldr	r3, [pc, #384]	; (800490c <Fast_Mode+0x5ac>)
 800478a:	4a68      	ldr	r2, [pc, #416]	; (800492c <Fast_Mode+0x5cc>)
 800478c:	601a      	str	r2, [r3, #0]
				k_delta = 0;//L/v*(S1ADDS2_SLOW-v*k_p);
 800478e:	4b62      	ldr	r3, [pc, #392]	; (8004918 <Fast_Mode+0x5b8>)
 8004790:	f04f 0200 	mov.w	r2, #0
 8004794:	601a      	str	r2, [r3, #0]
				kD=-0.06;//-0.06
 8004796:	4b5f      	ldr	r3, [pc, #380]	; (8004914 <Fast_Mode+0x5b4>)
 8004798:	4a65      	ldr	r2, [pc, #404]	; (8004930 <Fast_Mode+0x5d0>)
 800479a:	601a      	str	r2, [r3, #0]
			if(v<2200) //kanyar
 800479c:	e060      	b.n	8004860 <Fast_Mode+0x500>
			}
			else //egyenes
			{
				k_p = -L/(v*v)*S1MULTS2_SLOW;
 800479e:	4b5f      	ldr	r3, [pc, #380]	; (800491c <Fast_Mode+0x5bc>)
 80047a0:	ed93 7a00 	vldr	s14, [r3]
 80047a4:	4b5d      	ldr	r3, [pc, #372]	; (800491c <Fast_Mode+0x5bc>)
 80047a6:	edd3 7a00 	vldr	s15, [r3]
 80047aa:	ee67 7a27 	vmul.f32	s15, s14, s15
 80047ae:	ee17 0a90 	vmov	r0, s15
 80047b2:	f7fb fee9 	bl	8000588 <__aeabi_f2d>
 80047b6:	4602      	mov	r2, r0
 80047b8:	460b      	mov	r3, r1
 80047ba:	a145      	add	r1, pc, #276	; (adr r1, 80048d0 <Fast_Mode+0x570>)
 80047bc:	e9d1 0100 	ldrd	r0, r1, [r1]
 80047c0:	f7fc f864 	bl	800088c <__aeabi_ddiv>
 80047c4:	4602      	mov	r2, r0
 80047c6:	460b      	mov	r3, r1
 80047c8:	4610      	mov	r0, r2
 80047ca:	4619      	mov	r1, r3
 80047cc:	a342      	add	r3, pc, #264	; (adr r3, 80048d8 <Fast_Mode+0x578>)
 80047ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80047d2:	f7fb ff31 	bl	8000638 <__aeabi_dmul>
 80047d6:	4602      	mov	r2, r0
 80047d8:	460b      	mov	r3, r1
 80047da:	4610      	mov	r0, r2
 80047dc:	4619      	mov	r1, r3
 80047de:	f7fc fa03 	bl	8000be8 <__aeabi_d2f>
 80047e2:	4603      	mov	r3, r0
 80047e4:	4a49      	ldr	r2, [pc, #292]	; (800490c <Fast_Mode+0x5ac>)
 80047e6:	6013      	str	r3, [r2, #0]
				k_delta = L/v*(S1ADDS2_SLOW-v*k_p);
 80047e8:	4b4c      	ldr	r3, [pc, #304]	; (800491c <Fast_Mode+0x5bc>)
 80047ea:	681b      	ldr	r3, [r3, #0]
 80047ec:	4618      	mov	r0, r3
 80047ee:	f7fb fecb 	bl	8000588 <__aeabi_f2d>
 80047f2:	4602      	mov	r2, r0
 80047f4:	460b      	mov	r3, r1
 80047f6:	a13a      	add	r1, pc, #232	; (adr r1, 80048e0 <Fast_Mode+0x580>)
 80047f8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80047fc:	f7fc f846 	bl	800088c <__aeabi_ddiv>
 8004800:	4602      	mov	r2, r0
 8004802:	460b      	mov	r3, r1
 8004804:	4614      	mov	r4, r2
 8004806:	461d      	mov	r5, r3
 8004808:	4b44      	ldr	r3, [pc, #272]	; (800491c <Fast_Mode+0x5bc>)
 800480a:	ed93 7a00 	vldr	s14, [r3]
 800480e:	4b3f      	ldr	r3, [pc, #252]	; (800490c <Fast_Mode+0x5ac>)
 8004810:	edd3 7a00 	vldr	s15, [r3]
 8004814:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004818:	eeb9 7a08 	vmov.f32	s14, #152	; 0xc0c00000 -6.0
 800481c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004820:	ee17 0a90 	vmov	r0, s15
 8004824:	f7fb feb0 	bl	8000588 <__aeabi_f2d>
 8004828:	4602      	mov	r2, r0
 800482a:	460b      	mov	r3, r1
 800482c:	4620      	mov	r0, r4
 800482e:	4629      	mov	r1, r5
 8004830:	f7fb ff02 	bl	8000638 <__aeabi_dmul>
 8004834:	4602      	mov	r2, r0
 8004836:	460b      	mov	r3, r1
 8004838:	4610      	mov	r0, r2
 800483a:	4619      	mov	r1, r3
 800483c:	f7fc f9d4 	bl	8000be8 <__aeabi_d2f>
 8004840:	4603      	mov	r3, r0
 8004842:	4a35      	ldr	r2, [pc, #212]	; (8004918 <Fast_Mode+0x5b8>)
 8004844:	6013      	str	r3, [r2, #0]
				kD=-0.05;
 8004846:	4b33      	ldr	r3, [pc, #204]	; (8004914 <Fast_Mode+0x5b4>)
 8004848:	4a3a      	ldr	r2, [pc, #232]	; (8004934 <Fast_Mode+0x5d4>)
 800484a:	601a      	str	r2, [r3, #0]
			if(v<2200) //kanyar
 800484c:	e008      	b.n	8004860 <Fast_Mode+0x500>
			}
		}
		else
		{
			k_p=K_P_200;
 800484e:	4b2f      	ldr	r3, [pc, #188]	; (800490c <Fast_Mode+0x5ac>)
 8004850:	4a39      	ldr	r2, [pc, #228]	; (8004938 <Fast_Mode+0x5d8>)
 8004852:	601a      	str	r2, [r3, #0]
			k_delta=K_DELTA_200;
 8004854:	4b30      	ldr	r3, [pc, #192]	; (8004918 <Fast_Mode+0x5b8>)
 8004856:	4a39      	ldr	r2, [pc, #228]	; (800493c <Fast_Mode+0x5dc>)
 8004858:	601a      	str	r2, [r3, #0]
			kD=-0.06;
 800485a:	4b2e      	ldr	r3, [pc, #184]	; (8004914 <Fast_Mode+0x5b4>)
 800485c:	4a34      	ldr	r2, [pc, #208]	; (8004930 <Fast_Mode+0x5d0>)
 800485e:	601a      	str	r2, [r3, #0]
		}
	}
	gamma = -k_p * x_elso -k_delta * delta - kD * (x_elso-x_elso_prev);
 8004860:	4b2a      	ldr	r3, [pc, #168]	; (800490c <Fast_Mode+0x5ac>)
 8004862:	edd3 7a00 	vldr	s15, [r3]
 8004866:	eeb1 7a67 	vneg.f32	s14, s15
 800486a:	4b24      	ldr	r3, [pc, #144]	; (80048fc <Fast_Mode+0x59c>)
 800486c:	edd3 7a00 	vldr	s15, [r3]
 8004870:	ee27 7a27 	vmul.f32	s14, s14, s15
 8004874:	4b28      	ldr	r3, [pc, #160]	; (8004918 <Fast_Mode+0x5b8>)
 8004876:	edd3 6a00 	vldr	s13, [r3]
 800487a:	4b23      	ldr	r3, [pc, #140]	; (8004908 <Fast_Mode+0x5a8>)
 800487c:	edd3 7a00 	vldr	s15, [r3]
 8004880:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8004884:	ee37 7a67 	vsub.f32	s14, s14, s15
 8004888:	4b1c      	ldr	r3, [pc, #112]	; (80048fc <Fast_Mode+0x59c>)
 800488a:	edd3 6a00 	vldr	s13, [r3]
 800488e:	4b2c      	ldr	r3, [pc, #176]	; (8004940 <Fast_Mode+0x5e0>)
 8004890:	edd3 7a00 	vldr	s15, [r3]
 8004894:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8004898:	4b1e      	ldr	r3, [pc, #120]	; (8004914 <Fast_Mode+0x5b4>)
 800489a:	edd3 7a00 	vldr	s15, [r3]
 800489e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80048a2:	ee77 7a67 	vsub.f32	s15, s14, s15
 80048a6:	4b27      	ldr	r3, [pc, #156]	; (8004944 <Fast_Mode+0x5e4>)
 80048a8:	edc3 7a00 	vstr	s15, [r3]
	x_elso_prev = x_elso;
 80048ac:	4b13      	ldr	r3, [pc, #76]	; (80048fc <Fast_Mode+0x59c>)
 80048ae:	681b      	ldr	r3, [r3, #0]
 80048b0:	4a23      	ldr	r2, [pc, #140]	; (8004940 <Fast_Mode+0x5e0>)
 80048b2:	6013      	str	r3, [r2, #0]

	*state_pointer=state;
 80048b4:	68bb      	ldr	r3, [r7, #8]
 80048b6:	7ffa      	ldrb	r2, [r7, #31]
 80048b8:	701a      	strb	r2, [r3, #0]
	return gamma;
 80048ba:	4b22      	ldr	r3, [pc, #136]	; (8004944 <Fast_Mode+0x5e4>)
 80048bc:	681b      	ldr	r3, [r3, #0]
}
 80048be:	ee07 3a90 	vmov	s15, r3
 80048c2:	eeb0 0a67 	vmov.f32	s0, s15
 80048c6:	3720      	adds	r7, #32
 80048c8:	46bd      	mov	sp, r7
 80048ca:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 80048ce:	bf00      	nop
 80048d0:	00000000 	.word	0x00000000
 80048d4:	c0716000 	.word	0xc0716000
 80048d8:	fd21ff2e 	.word	0xfd21ff2e
 80048dc:	402275f6 	.word	0x402275f6
 80048e0:	00000000 	.word	0x00000000
 80048e4:	40716000 	.word	0x40716000
 80048e8:	200002a8 	.word	0x200002a8
 80048ec:	2000069c 	.word	0x2000069c
 80048f0:	434c0000 	.word	0x434c0000
 80048f4:	406f0000 	.word	0x406f0000
 80048f8:	40598000 	.word	0x40598000
 80048fc:	200006d0 	.word	0x200006d0
 8004900:	200006d4 	.word	0x200006d4
 8004904:	407c4000 	.word	0x407c4000
 8004908:	200006d8 	.word	0x200006d8
 800490c:	20000070 	.word	0x20000070
 8004910:	bb83126f 	.word	0xbb83126f
 8004914:	20000074 	.word	0x20000074
 8004918:	20000078 	.word	0x20000078
 800491c:	20000684 	.word	0x20000684
 8004920:	43160000 	.word	0x43160000
 8004924:	c3160000 	.word	0xc3160000
 8004928:	45098000 	.word	0x45098000
 800492c:	bb2a64c3 	.word	0xbb2a64c3
 8004930:	bd75c28f 	.word	0xbd75c28f
 8004934:	bd4ccccd 	.word	0xbd4ccccd
 8004938:	ba30dc42 	.word	0xba30dc42
 800493c:	bf21eadf 	.word	0xbf21eadf
 8004940:	200006dc 	.word	0x200006dc
 8004944:	200006e0 	.word	0x200006e0

08004948 <Skill_Mode>:

float Skill_Mode(UART_HandleTypeDef *huart_debugg, float kP, float kD, uint32_t t)
{
 8004948:	b580      	push	{r7, lr}
 800494a:	b088      	sub	sp, #32
 800494c:	af00      	add	r7, sp, #0
 800494e:	60f8      	str	r0, [r7, #12]
 8004950:	ed87 0a02 	vstr	s0, [r7, #8]
 8004954:	edc7 0a01 	vstr	s1, [r7, #4]
 8004958:	6039      	str	r1, [r7, #0]
	static uint32_t t_prev=0;
	int byte=0;
 800495a:	2300      	movs	r3, #0
 800495c:	61fb      	str	r3, [r7, #28]
	static int byte_prev=0;
	int delta_byte;
	float p=0;
 800495e:	f04f 0300 	mov.w	r3, #0
 8004962:	617b      	str	r3, [r7, #20]
/*	uint8_t str[40];
	sprintf(str,"%d,  %d,  %d,  %d,  %d\n\r",rxBuf[1],rxBuf[2],rxBuf[3],rxBuf[4],rxBuf[5]);
	HAL_UART_Transmit(huart_debugg, str, strlen(str), 10);
*/

	if(LINE_CNT>3 || ignore)//ha éppen node-on vagyunk, akkor az átlagot követjük
 8004964:	4b75      	ldr	r3, [pc, #468]	; (8004b3c <Skill_Mode+0x1f4>)
 8004966:	785b      	ldrb	r3, [r3, #1]
 8004968:	2b03      	cmp	r3, #3
 800496a:	d803      	bhi.n	8004974 <Skill_Mode+0x2c>
 800496c:	4b74      	ldr	r3, [pc, #464]	; (8004b40 <Skill_Mode+0x1f8>)
 800496e:	781b      	ldrb	r3, [r3, #0]
 8004970:	2b00      	cmp	r3, #0
 8004972:	d021      	beq.n	80049b8 <Skill_Mode+0x70>
	{
		byte=0;
 8004974:	2300      	movs	r3, #0
 8004976:	61fb      	str	r3, [r7, #28]
		for(i=0;i<LINE_CNT;i++)
 8004978:	2300      	movs	r3, #0
 800497a:	61bb      	str	r3, [r7, #24]
 800497c:	e00a      	b.n	8004994 <Skill_Mode+0x4c>
		{
			byte += rxBuf[i+2];
 800497e:	69bb      	ldr	r3, [r7, #24]
 8004980:	3302      	adds	r3, #2
 8004982:	4a6e      	ldr	r2, [pc, #440]	; (8004b3c <Skill_Mode+0x1f4>)
 8004984:	5cd3      	ldrb	r3, [r2, r3]
 8004986:	461a      	mov	r2, r3
 8004988:	69fb      	ldr	r3, [r7, #28]
 800498a:	4413      	add	r3, r2
 800498c:	61fb      	str	r3, [r7, #28]
		for(i=0;i<LINE_CNT;i++)
 800498e:	69bb      	ldr	r3, [r7, #24]
 8004990:	3301      	adds	r3, #1
 8004992:	61bb      	str	r3, [r7, #24]
 8004994:	4b69      	ldr	r3, [pc, #420]	; (8004b3c <Skill_Mode+0x1f4>)
 8004996:	785b      	ldrb	r3, [r3, #1]
 8004998:	461a      	mov	r2, r3
 800499a:	69bb      	ldr	r3, [r7, #24]
 800499c:	4293      	cmp	r3, r2
 800499e:	dbee      	blt.n	800497e <Skill_Mode+0x36>
		}

		if(LINE_CNT) byte /= LINE_CNT;
 80049a0:	4b66      	ldr	r3, [pc, #408]	; (8004b3c <Skill_Mode+0x1f4>)
 80049a2:	785b      	ldrb	r3, [r3, #1]
 80049a4:	2b00      	cmp	r3, #0
 80049a6:	d077      	beq.n	8004a98 <Skill_Mode+0x150>
 80049a8:	4b64      	ldr	r3, [pc, #400]	; (8004b3c <Skill_Mode+0x1f4>)
 80049aa:	785b      	ldrb	r3, [r3, #1]
 80049ac:	461a      	mov	r2, r3
 80049ae:	69fb      	ldr	r3, [r7, #28]
 80049b0:	fb93 f3f2 	sdiv	r3, r3, r2
 80049b4:	61fb      	str	r3, [r7, #28]
 80049b6:	e06f      	b.n	8004a98 <Skill_Mode+0x150>
	}
	else if((path==LEFT && orientation==FORWARD) || (path==RIGHT && orientation==REVERSE))
 80049b8:	4b62      	ldr	r3, [pc, #392]	; (8004b44 <Skill_Mode+0x1fc>)
 80049ba:	781b      	ldrb	r3, [r3, #0]
 80049bc:	2b00      	cmp	r3, #0
 80049be:	d103      	bne.n	80049c8 <Skill_Mode+0x80>
 80049c0:	4b61      	ldr	r3, [pc, #388]	; (8004b48 <Skill_Mode+0x200>)
 80049c2:	781b      	ldrb	r3, [r3, #0]
 80049c4:	2b00      	cmp	r3, #0
 80049c6:	d007      	beq.n	80049d8 <Skill_Mode+0x90>
 80049c8:	4b5e      	ldr	r3, [pc, #376]	; (8004b44 <Skill_Mode+0x1fc>)
 80049ca:	781b      	ldrb	r3, [r3, #0]
 80049cc:	2b02      	cmp	r3, #2
 80049ce:	d10f      	bne.n	80049f0 <Skill_Mode+0xa8>
 80049d0:	4b5d      	ldr	r3, [pc, #372]	; (8004b48 <Skill_Mode+0x200>)
 80049d2:	781b      	ldrb	r3, [r3, #0]
 80049d4:	2b01      	cmp	r3, #1
 80049d6:	d10b      	bne.n	80049f0 <Skill_Mode+0xa8>
	{
		byte = LINE1; //az első vonalt kell követni
 80049d8:	4b58      	ldr	r3, [pc, #352]	; (8004b3c <Skill_Mode+0x1f4>)
 80049da:	789b      	ldrb	r3, [r3, #2]
 80049dc:	61fb      	str	r3, [r7, #28]
		delta_byte=abs((int)byte-byte_prev);
 80049de:	4b5b      	ldr	r3, [pc, #364]	; (8004b4c <Skill_Mode+0x204>)
 80049e0:	681b      	ldr	r3, [r3, #0]
 80049e2:	69fa      	ldr	r2, [r7, #28]
 80049e4:	1ad3      	subs	r3, r2, r3
 80049e6:	2b00      	cmp	r3, #0
 80049e8:	bfb8      	it	lt
 80049ea:	425b      	neglt	r3, r3
 80049ec:	613b      	str	r3, [r7, #16]
 80049ee:	e053      	b.n	8004a98 <Skill_Mode+0x150>
			estuary=ESTUARY_MODE_OFF;
			LED_G(0);
		}
*/
	}
	else if((path==RIGHT && orientation==FORWARD) || (path==LEFT && orientation==REVERSE))
 80049f0:	4b54      	ldr	r3, [pc, #336]	; (8004b44 <Skill_Mode+0x1fc>)
 80049f2:	781b      	ldrb	r3, [r3, #0]
 80049f4:	2b02      	cmp	r3, #2
 80049f6:	d103      	bne.n	8004a00 <Skill_Mode+0xb8>
 80049f8:	4b53      	ldr	r3, [pc, #332]	; (8004b48 <Skill_Mode+0x200>)
 80049fa:	781b      	ldrb	r3, [r3, #0]
 80049fc:	2b00      	cmp	r3, #0
 80049fe:	d007      	beq.n	8004a10 <Skill_Mode+0xc8>
 8004a00:	4b50      	ldr	r3, [pc, #320]	; (8004b44 <Skill_Mode+0x1fc>)
 8004a02:	781b      	ldrb	r3, [r3, #0]
 8004a04:	2b00      	cmp	r3, #0
 8004a06:	d112      	bne.n	8004a2e <Skill_Mode+0xe6>
 8004a08:	4b4f      	ldr	r3, [pc, #316]	; (8004b48 <Skill_Mode+0x200>)
 8004a0a:	781b      	ldrb	r3, [r3, #0]
 8004a0c:	2b01      	cmp	r3, #1
 8004a0e:	d10e      	bne.n	8004a2e <Skill_Mode+0xe6>
	{
		byte = rxBuf[1+LINE_CNT];//az utolsó vonalat kell követni
 8004a10:	4b4a      	ldr	r3, [pc, #296]	; (8004b3c <Skill_Mode+0x1f4>)
 8004a12:	785b      	ldrb	r3, [r3, #1]
 8004a14:	3301      	adds	r3, #1
 8004a16:	4a49      	ldr	r2, [pc, #292]	; (8004b3c <Skill_Mode+0x1f4>)
 8004a18:	5cd3      	ldrb	r3, [r2, r3]
 8004a1a:	61fb      	str	r3, [r7, #28]
		delta_byte=abs((int)byte-byte_prev);
 8004a1c:	4b4b      	ldr	r3, [pc, #300]	; (8004b4c <Skill_Mode+0x204>)
 8004a1e:	681b      	ldr	r3, [r3, #0]
 8004a20:	69fa      	ldr	r2, [r7, #28]
 8004a22:	1ad3      	subs	r3, r2, r3
 8004a24:	2b00      	cmp	r3, #0
 8004a26:	bfb8      	it	lt
 8004a28:	425b      	neglt	r3, r3
 8004a2a:	613b      	str	r3, [r7, #16]
 8004a2c:	e034      	b.n	8004a98 <Skill_Mode+0x150>
			LED_G(0);
		}
*/
	}

	else if(path==MIDDLE)
 8004a2e:	4b45      	ldr	r3, [pc, #276]	; (8004b44 <Skill_Mode+0x1fc>)
 8004a30:	781b      	ldrb	r3, [r3, #0]
 8004a32:	2b01      	cmp	r3, #1
 8004a34:	d130      	bne.n	8004a98 <Skill_Mode+0x150>
	{
		if(LINE_CNT==1)byte = LINE1;//ha csak 1 vonal van, akkor azt követjük
 8004a36:	4b41      	ldr	r3, [pc, #260]	; (8004b3c <Skill_Mode+0x1f4>)
 8004a38:	785b      	ldrb	r3, [r3, #1]
 8004a3a:	2b01      	cmp	r3, #1
 8004a3c:	d103      	bne.n	8004a46 <Skill_Mode+0xfe>
 8004a3e:	4b3f      	ldr	r3, [pc, #252]	; (8004b3c <Skill_Mode+0x1f4>)
 8004a40:	789b      	ldrb	r3, [r3, #2]
 8004a42:	61fb      	str	r3, [r7, #28]
 8004a44:	e028      	b.n	8004a98 <Skill_Mode+0x150>
		else if(LINE_CNT==3)//ha 3 vonal van
 8004a46:	4b3d      	ldr	r3, [pc, #244]	; (8004b3c <Skill_Mode+0x1f4>)
 8004a48:	785b      	ldrb	r3, [r3, #1]
 8004a4a:	2b03      	cmp	r3, #3
 8004a4c:	d113      	bne.n	8004a76 <Skill_Mode+0x12e>
		{
			byte = rxBuf[3];//a középsőt követjük
 8004a4e:	4b3b      	ldr	r3, [pc, #236]	; (8004b3c <Skill_Mode+0x1f4>)
 8004a50:	78db      	ldrb	r3, [r3, #3]
 8004a52:	61fb      	str	r3, [r7, #28]
			//folyamatosan nézzük, hogy az 1. és 3.vonal milyen messze van a vonalszenor középontjától
			tmp1=abs((int)LINE1-123);
 8004a54:	4b39      	ldr	r3, [pc, #228]	; (8004b3c <Skill_Mode+0x1f4>)
 8004a56:	789b      	ldrb	r3, [r3, #2]
 8004a58:	3b7b      	subs	r3, #123	; 0x7b
 8004a5a:	2b00      	cmp	r3, #0
 8004a5c:	bfb8      	it	lt
 8004a5e:	425b      	neglt	r3, r3
 8004a60:	4a3b      	ldr	r2, [pc, #236]	; (8004b50 <Skill_Mode+0x208>)
 8004a62:	6013      	str	r3, [r2, #0]
			tmp2=abs((int)LINE3-123);
 8004a64:	4b35      	ldr	r3, [pc, #212]	; (8004b3c <Skill_Mode+0x1f4>)
 8004a66:	791b      	ldrb	r3, [r3, #4]
 8004a68:	3b7b      	subs	r3, #123	; 0x7b
 8004a6a:	2b00      	cmp	r3, #0
 8004a6c:	bfb8      	it	lt
 8004a6e:	425b      	neglt	r3, r3
 8004a70:	4a38      	ldr	r2, [pc, #224]	; (8004b54 <Skill_Mode+0x20c>)
 8004a72:	6013      	str	r3, [r2, #0]
 8004a74:	e010      	b.n	8004a98 <Skill_Mode+0x150>
		}
		else if(LINE_CNT==2)//ha 2 vonal van, az azt jelenti, hogy az elágazás már annyira szétgáazott, hogy csak 2-t látunk a 3 vonalból
 8004a76:	4b31      	ldr	r3, [pc, #196]	; (8004b3c <Skill_Mode+0x1f4>)
 8004a78:	785b      	ldrb	r3, [r3, #1]
 8004a7a:	2b02      	cmp	r3, #2
 8004a7c:	d10c      	bne.n	8004a98 <Skill_Mode+0x150>
		{
			if(tmp1<tmp2) byte = LINE1; //ha a jobboldali vonalat veszítettük el
 8004a7e:	4b34      	ldr	r3, [pc, #208]	; (8004b50 <Skill_Mode+0x208>)
 8004a80:	681a      	ldr	r2, [r3, #0]
 8004a82:	4b34      	ldr	r3, [pc, #208]	; (8004b54 <Skill_Mode+0x20c>)
 8004a84:	681b      	ldr	r3, [r3, #0]
 8004a86:	429a      	cmp	r2, r3
 8004a88:	da03      	bge.n	8004a92 <Skill_Mode+0x14a>
 8004a8a:	4b2c      	ldr	r3, [pc, #176]	; (8004b3c <Skill_Mode+0x1f4>)
 8004a8c:	789b      	ldrb	r3, [r3, #2]
 8004a8e:	61fb      	str	r3, [r7, #28]
 8004a90:	e002      	b.n	8004a98 <Skill_Mode+0x150>
			else byte = LINE2; //ha a baloldali vonalat veszítettük el
 8004a92:	4b2a      	ldr	r3, [pc, #168]	; (8004b3c <Skill_Mode+0x1f4>)
 8004a94:	78db      	ldrb	r3, [r3, #3]
 8004a96:	61fb      	str	r3, [r7, #28]
		}
	}
	if(estuary==ESTUARY_MODE_INIT)estuary=ESTUARY_MODE_OFF;
 8004a98:	4b2f      	ldr	r3, [pc, #188]	; (8004b58 <Skill_Mode+0x210>)
 8004a9a:	781b      	ldrb	r3, [r3, #0]
 8004a9c:	2b00      	cmp	r3, #0
 8004a9e:	d102      	bne.n	8004aa6 <Skill_Mode+0x15e>
 8004aa0:	4b2d      	ldr	r3, [pc, #180]	; (8004b58 <Skill_Mode+0x210>)
 8004aa2:	2201      	movs	r2, #1
 8004aa4:	701a      	strb	r2, [r3, #0]
	//p = (float)byte * 204/248.0-102;
	p = (float)byte * 204/248.0-102;
 8004aa6:	69fb      	ldr	r3, [r7, #28]
 8004aa8:	ee07 3a90 	vmov	s15, r3
 8004aac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004ab0:	ed9f 7a2a 	vldr	s14, [pc, #168]	; 8004b5c <Skill_Mode+0x214>
 8004ab4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004ab8:	ee17 0a90 	vmov	r0, s15
 8004abc:	f7fb fd64 	bl	8000588 <__aeabi_f2d>
 8004ac0:	f04f 0200 	mov.w	r2, #0
 8004ac4:	4b26      	ldr	r3, [pc, #152]	; (8004b60 <Skill_Mode+0x218>)
 8004ac6:	f7fb fee1 	bl	800088c <__aeabi_ddiv>
 8004aca:	4602      	mov	r2, r0
 8004acc:	460b      	mov	r3, r1
 8004ace:	4610      	mov	r0, r2
 8004ad0:	4619      	mov	r1, r3
 8004ad2:	f04f 0200 	mov.w	r2, #0
 8004ad6:	4b23      	ldr	r3, [pc, #140]	; (8004b64 <Skill_Mode+0x21c>)
 8004ad8:	f7fb fbf6 	bl	80002c8 <__aeabi_dsub>
 8004adc:	4602      	mov	r2, r0
 8004ade:	460b      	mov	r3, r1
 8004ae0:	4610      	mov	r0, r2
 8004ae2:	4619      	mov	r1, r3
 8004ae4:	f7fc f880 	bl	8000be8 <__aeabi_d2f>
 8004ae8:	4603      	mov	r3, r0
 8004aea:	617b      	str	r3, [r7, #20]
	gamma = -kP * p  - kD*(p-p_prev);
 8004aec:	edd7 7a02 	vldr	s15, [r7, #8]
 8004af0:	eeb1 7a67 	vneg.f32	s14, s15
 8004af4:	edd7 7a05 	vldr	s15, [r7, #20]
 8004af8:	ee27 7a27 	vmul.f32	s14, s14, s15
 8004afc:	4b1a      	ldr	r3, [pc, #104]	; (8004b68 <Skill_Mode+0x220>)
 8004afe:	edd3 7a00 	vldr	s15, [r3]
 8004b02:	edd7 6a05 	vldr	s13, [r7, #20]
 8004b06:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8004b0a:	edd7 7a01 	vldr	s15, [r7, #4]
 8004b0e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8004b12:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004b16:	4b15      	ldr	r3, [pc, #84]	; (8004b6c <Skill_Mode+0x224>)
 8004b18:	edc3 7a00 	vstr	s15, [r3]
	p_prev = p;
 8004b1c:	4a12      	ldr	r2, [pc, #72]	; (8004b68 <Skill_Mode+0x220>)
 8004b1e:	697b      	ldr	r3, [r7, #20]
 8004b20:	6013      	str	r3, [r2, #0]
	byte_prev=byte;
 8004b22:	4a0a      	ldr	r2, [pc, #40]	; (8004b4c <Skill_Mode+0x204>)
 8004b24:	69fb      	ldr	r3, [r7, #28]
 8004b26:	6013      	str	r3, [r2, #0]

	return gamma;
 8004b28:	4b10      	ldr	r3, [pc, #64]	; (8004b6c <Skill_Mode+0x224>)
 8004b2a:	681b      	ldr	r3, [r3, #0]
 8004b2c:	ee07 3a90 	vmov	s15, r3
}
 8004b30:	eeb0 0a67 	vmov.f32	s0, s15
 8004b34:	3720      	adds	r7, #32
 8004b36:	46bd      	mov	sp, r7
 8004b38:	bd80      	pop	{r7, pc}
 8004b3a:	bf00      	nop
 8004b3c:	2000069c 	.word	0x2000069c
 8004b40:	200006a6 	.word	0x200006a6
 8004b44:	200002b6 	.word	0x200002b6
 8004b48:	200002b4 	.word	0x200002b4
 8004b4c:	200006e4 	.word	0x200006e4
 8004b50:	200006e8 	.word	0x200006e8
 8004b54:	200006ec 	.word	0x200006ec
 8004b58:	200006f0 	.word	0x200006f0
 8004b5c:	434c0000 	.word	0x434c0000
 8004b60:	406f0000 	.word	0x406f0000
 8004b64:	40598000 	.word	0x40598000
 8004b68:	200006f4 	.word	0x200006f4
 8004b6c:	200006f8 	.word	0x200006f8

08004b70 <Detect_Node4>:
		ignore=0;
	}
}

void Detect_Node4(UART_HandleTypeDef *huart_debugg, uint32_t t)
{
 8004b70:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8004b74:	b082      	sub	sp, #8
 8004b76:	af00      	add	r7, sp, #0
 8004b78:	6078      	str	r0, [r7, #4]
 8004b7a:	6039      	str	r1, [r7, #0]
	static uint32_t t_prev=0;
	static uint32_t t_stamp=0;
	static uint8_t detect_node_state=0;
	static float s=0;

	if(LINE_CNT==4 && !detect_node_state)
 8004b7c:	4b3c      	ldr	r3, [pc, #240]	; (8004c70 <Detect_Node4+0x100>)
 8004b7e:	785b      	ldrb	r3, [r3, #1]
 8004b80:	2b04      	cmp	r3, #4
 8004b82:	d111      	bne.n	8004ba8 <Detect_Node4+0x38>
 8004b84:	4b3b      	ldr	r3, [pc, #236]	; (8004c74 <Detect_Node4+0x104>)
 8004b86:	781b      	ldrb	r3, [r3, #0]
 8004b88:	2b00      	cmp	r3, #0
 8004b8a:	d10d      	bne.n	8004ba8 <Detect_Node4+0x38>
	{
		s=0;
 8004b8c:	4b3a      	ldr	r3, [pc, #232]	; (8004c78 <Detect_Node4+0x108>)
 8004b8e:	f04f 0200 	mov.w	r2, #0
 8004b92:	601a      	str	r2, [r3, #0]
		detect_node_state=1;//innentől mérünk
 8004b94:	4b37      	ldr	r3, [pc, #220]	; (8004c74 <Detect_Node4+0x104>)
 8004b96:	2201      	movs	r2, #1
 8004b98:	701a      	strb	r2, [r3, #0]
		ignore=1;
 8004b9a:	4b38      	ldr	r3, [pc, #224]	; (8004c7c <Detect_Node4+0x10c>)
 8004b9c:	2201      	movs	r2, #1
 8004b9e:	701a      	strb	r2, [r3, #0]
		t_stamp=t;
 8004ba0:	4a37      	ldr	r2, [pc, #220]	; (8004c80 <Detect_Node4+0x110>)
 8004ba2:	683b      	ldr	r3, [r7, #0]
 8004ba4:	6013      	str	r3, [r2, #0]
 8004ba6:	e03e      	b.n	8004c26 <Detect_Node4+0xb6>

	}
	else if(LINE_CNT==4 && detect_node_state)
 8004ba8:	4b31      	ldr	r3, [pc, #196]	; (8004c70 <Detect_Node4+0x100>)
 8004baa:	785b      	ldrb	r3, [r3, #1]
 8004bac:	2b04      	cmp	r3, #4
 8004bae:	d13a      	bne.n	8004c26 <Detect_Node4+0xb6>
 8004bb0:	4b30      	ldr	r3, [pc, #192]	; (8004c74 <Detect_Node4+0x104>)
 8004bb2:	781b      	ldrb	r3, [r3, #0]
 8004bb4:	2b00      	cmp	r3, #0
 8004bb6:	d036      	beq.n	8004c26 <Detect_Node4+0xb6>
	{
		s+=fabs(v)*(t-t_prev)/1000;
 8004bb8:	4b2f      	ldr	r3, [pc, #188]	; (8004c78 <Detect_Node4+0x108>)
 8004bba:	681b      	ldr	r3, [r3, #0]
 8004bbc:	4618      	mov	r0, r3
 8004bbe:	f7fb fce3 	bl	8000588 <__aeabi_f2d>
 8004bc2:	4604      	mov	r4, r0
 8004bc4:	460d      	mov	r5, r1
 8004bc6:	4b2f      	ldr	r3, [pc, #188]	; (8004c84 <Detect_Node4+0x114>)
 8004bc8:	edd3 7a00 	vldr	s15, [r3]
 8004bcc:	eef0 7ae7 	vabs.f32	s15, s15
 8004bd0:	ee17 0a90 	vmov	r0, s15
 8004bd4:	f7fb fcd8 	bl	8000588 <__aeabi_f2d>
 8004bd8:	4680      	mov	r8, r0
 8004bda:	4689      	mov	r9, r1
 8004bdc:	4b2a      	ldr	r3, [pc, #168]	; (8004c88 <Detect_Node4+0x118>)
 8004bde:	681b      	ldr	r3, [r3, #0]
 8004be0:	683a      	ldr	r2, [r7, #0]
 8004be2:	1ad3      	subs	r3, r2, r3
 8004be4:	4618      	mov	r0, r3
 8004be6:	f7fb fcad 	bl	8000544 <__aeabi_ui2d>
 8004bea:	4602      	mov	r2, r0
 8004bec:	460b      	mov	r3, r1
 8004bee:	4640      	mov	r0, r8
 8004bf0:	4649      	mov	r1, r9
 8004bf2:	f7fb fd21 	bl	8000638 <__aeabi_dmul>
 8004bf6:	4602      	mov	r2, r0
 8004bf8:	460b      	mov	r3, r1
 8004bfa:	4610      	mov	r0, r2
 8004bfc:	4619      	mov	r1, r3
 8004bfe:	f04f 0200 	mov.w	r2, #0
 8004c02:	4b22      	ldr	r3, [pc, #136]	; (8004c8c <Detect_Node4+0x11c>)
 8004c04:	f7fb fe42 	bl	800088c <__aeabi_ddiv>
 8004c08:	4602      	mov	r2, r0
 8004c0a:	460b      	mov	r3, r1
 8004c0c:	4620      	mov	r0, r4
 8004c0e:	4629      	mov	r1, r5
 8004c10:	f7fb fb5c 	bl	80002cc <__adddf3>
 8004c14:	4602      	mov	r2, r0
 8004c16:	460b      	mov	r3, r1
 8004c18:	4610      	mov	r0, r2
 8004c1a:	4619      	mov	r1, r3
 8004c1c:	f7fb ffe4 	bl	8000be8 <__aeabi_d2f>
 8004c20:	4603      	mov	r3, r0
 8004c22:	4a15      	ldr	r2, [pc, #84]	; (8004c78 <Detect_Node4+0x108>)
 8004c24:	6013      	str	r3, [r2, #0]
	}
	if((t-t_stamp)>230 && detect_node_state)
 8004c26:	4b16      	ldr	r3, [pc, #88]	; (8004c80 <Detect_Node4+0x110>)
 8004c28:	681b      	ldr	r3, [r3, #0]
 8004c2a:	683a      	ldr	r2, [r7, #0]
 8004c2c:	1ad3      	subs	r3, r2, r3
 8004c2e:	2be6      	cmp	r3, #230	; 0xe6
 8004c30:	d916      	bls.n	8004c60 <Detect_Node4+0xf0>
 8004c32:	4b10      	ldr	r3, [pc, #64]	; (8004c74 <Detect_Node4+0x104>)
 8004c34:	781b      	ldrb	r3, [r3, #0]
 8004c36:	2b00      	cmp	r3, #0
 8004c38:	d012      	beq.n	8004c60 <Detect_Node4+0xf0>
	{
		detect_node_state=0;
 8004c3a:	4b0e      	ldr	r3, [pc, #56]	; (8004c74 <Detect_Node4+0x104>)
 8004c3c:	2200      	movs	r2, #0
 8004c3e:	701a      	strb	r2, [r3, #0]
		ignore=0;
 8004c40:	4b0e      	ldr	r3, [pc, #56]	; (8004c7c <Detect_Node4+0x10c>)
 8004c42:	2200      	movs	r2, #0
 8004c44:	701a      	strb	r2, [r3, #0]
		if(s>140)//vertical node
		{
			nodeDetected=1; //horizont node

		}
		else*/ if(s>50)//horizontal node
 8004c46:	4b0c      	ldr	r3, [pc, #48]	; (8004c78 <Detect_Node4+0x108>)
 8004c48:	edd3 7a00 	vldr	s15, [r3]
 8004c4c:	ed9f 7a10 	vldr	s14, [pc, #64]	; 8004c90 <Detect_Node4+0x120>
 8004c50:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004c54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004c58:	dd02      	ble.n	8004c60 <Detect_Node4+0xf0>
		{
			nodeDetected=1; //horizont node
 8004c5a:	4b0e      	ldr	r3, [pc, #56]	; (8004c94 <Detect_Node4+0x124>)
 8004c5c:	2201      	movs	r2, #1
 8004c5e:	701a      	strb	r2, [r3, #0]

		}
	}
	t_prev=t;
 8004c60:	4a09      	ldr	r2, [pc, #36]	; (8004c88 <Detect_Node4+0x118>)
 8004c62:	683b      	ldr	r3, [r7, #0]
 8004c64:	6013      	str	r3, [r2, #0]
}
 8004c66:	bf00      	nop
 8004c68:	3708      	adds	r7, #8
 8004c6a:	46bd      	mov	sp, r7
 8004c6c:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8004c70:	2000069c 	.word	0x2000069c
 8004c74:	200006fc 	.word	0x200006fc
 8004c78:	20000700 	.word	0x20000700
 8004c7c:	200006a6 	.word	0x200006a6
 8004c80:	20000704 	.word	0x20000704
 8004c84:	20000684 	.word	0x20000684
 8004c88:	20000708 	.word	0x20000708
 8004c8c:	408f4000 	.word	0x408f4000
 8004c90:	42480000 	.word	0x42480000
 8004c94:	200002b5 	.word	0x200002b5

08004c98 <Lane_Changer>:

uint8_t Lane_Changer(uint32_t t)
{
 8004c98:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8004c9c:	b084      	sub	sp, #16
 8004c9e:	af00      	add	r7, sp, #0
 8004ca0:	6078      	str	r0, [r7, #4]
	static uint8_t lineCnt_prev=1;
	static float s=0;
	static int i=0;
	static uint32_t dt[5]={1000,1000,1000,1000,1000};

	if(laneChange<2)return 0;
 8004ca2:	4b79      	ldr	r3, [pc, #484]	; (8004e88 <Lane_Changer+0x1f0>)
 8004ca4:	781b      	ldrb	r3, [r3, #0]
 8004ca6:	2b01      	cmp	r3, #1
 8004ca8:	d801      	bhi.n	8004cae <Lane_Changer+0x16>
 8004caa:	2300      	movs	r3, #0
 8004cac:	e0e6      	b.n	8004e7c <Lane_Changer+0x1e4>
	if(LINE_CNT != lineCnt_prev && (LINE_CNT==1 || LINE_CNT==2) && laneChange==2) //ha változik az alattunk lévő vonalak száma
 8004cae:	4b77      	ldr	r3, [pc, #476]	; (8004e8c <Lane_Changer+0x1f4>)
 8004cb0:	785a      	ldrb	r2, [r3, #1]
 8004cb2:	4b77      	ldr	r3, [pc, #476]	; (8004e90 <Lane_Changer+0x1f8>)
 8004cb4:	781b      	ldrb	r3, [r3, #0]
 8004cb6:	429a      	cmp	r2, r3
 8004cb8:	d041      	beq.n	8004d3e <Lane_Changer+0xa6>
 8004cba:	4b74      	ldr	r3, [pc, #464]	; (8004e8c <Lane_Changer+0x1f4>)
 8004cbc:	785b      	ldrb	r3, [r3, #1]
 8004cbe:	2b01      	cmp	r3, #1
 8004cc0:	d003      	beq.n	8004cca <Lane_Changer+0x32>
 8004cc2:	4b72      	ldr	r3, [pc, #456]	; (8004e8c <Lane_Changer+0x1f4>)
 8004cc4:	785b      	ldrb	r3, [r3, #1]
 8004cc6:	2b02      	cmp	r3, #2
 8004cc8:	d139      	bne.n	8004d3e <Lane_Changer+0xa6>
 8004cca:	4b6f      	ldr	r3, [pc, #444]	; (8004e88 <Lane_Changer+0x1f0>)
 8004ccc:	781b      	ldrb	r3, [r3, #0]
 8004cce:	2b02      	cmp	r3, #2
 8004cd0:	d135      	bne.n	8004d3e <Lane_Changer+0xa6>
	{
		dt[i] = t - t_stamp;
 8004cd2:	4b70      	ldr	r3, [pc, #448]	; (8004e94 <Lane_Changer+0x1fc>)
 8004cd4:	681a      	ldr	r2, [r3, #0]
 8004cd6:	4b70      	ldr	r3, [pc, #448]	; (8004e98 <Lane_Changer+0x200>)
 8004cd8:	681b      	ldr	r3, [r3, #0]
 8004cda:	6879      	ldr	r1, [r7, #4]
 8004cdc:	1a8a      	subs	r2, r1, r2
 8004cde:	496f      	ldr	r1, [pc, #444]	; (8004e9c <Lane_Changer+0x204>)
 8004ce0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		uint32_t sum=dt[0] + dt[1] + dt[2] + dt[3]+ dt[4];
 8004ce4:	4b6d      	ldr	r3, [pc, #436]	; (8004e9c <Lane_Changer+0x204>)
 8004ce6:	681a      	ldr	r2, [r3, #0]
 8004ce8:	4b6c      	ldr	r3, [pc, #432]	; (8004e9c <Lane_Changer+0x204>)
 8004cea:	685b      	ldr	r3, [r3, #4]
 8004cec:	441a      	add	r2, r3
 8004cee:	4b6b      	ldr	r3, [pc, #428]	; (8004e9c <Lane_Changer+0x204>)
 8004cf0:	689b      	ldr	r3, [r3, #8]
 8004cf2:	441a      	add	r2, r3
 8004cf4:	4b69      	ldr	r3, [pc, #420]	; (8004e9c <Lane_Changer+0x204>)
 8004cf6:	68db      	ldr	r3, [r3, #12]
 8004cf8:	441a      	add	r2, r3
 8004cfa:	4b68      	ldr	r3, [pc, #416]	; (8004e9c <Lane_Changer+0x204>)
 8004cfc:	691b      	ldr	r3, [r3, #16]
 8004cfe:	4413      	add	r3, r2
 8004d00:	60fb      	str	r3, [r7, #12]
		if((sum > 250) && (sum < 1000))//ha másfél másodpercen belül van8 váltás
 8004d02:	68fb      	ldr	r3, [r7, #12]
 8004d04:	2bfa      	cmp	r3, #250	; 0xfa
 8004d06:	d90a      	bls.n	8004d1e <Lane_Changer+0x86>
 8004d08:	68fb      	ldr	r3, [r7, #12]
 8004d0a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8004d0e:	d206      	bcs.n	8004d1e <Lane_Changer+0x86>
		{
			s=0;
 8004d10:	4b63      	ldr	r3, [pc, #396]	; (8004ea0 <Lane_Changer+0x208>)
 8004d12:	f04f 0200 	mov.w	r2, #0
 8004d16:	601a      	str	r2, [r3, #0]
			laneChange=3;
 8004d18:	4b5b      	ldr	r3, [pc, #364]	; (8004e88 <Lane_Changer+0x1f0>)
 8004d1a:	2203      	movs	r2, #3
 8004d1c:	701a      	strb	r2, [r3, #0]
		}
		i++;
 8004d1e:	4b5e      	ldr	r3, [pc, #376]	; (8004e98 <Lane_Changer+0x200>)
 8004d20:	681b      	ldr	r3, [r3, #0]
 8004d22:	3301      	adds	r3, #1
 8004d24:	4a5c      	ldr	r2, [pc, #368]	; (8004e98 <Lane_Changer+0x200>)
 8004d26:	6013      	str	r3, [r2, #0]
		if(i>4) i=0;
 8004d28:	4b5b      	ldr	r3, [pc, #364]	; (8004e98 <Lane_Changer+0x200>)
 8004d2a:	681b      	ldr	r3, [r3, #0]
 8004d2c:	2b04      	cmp	r3, #4
 8004d2e:	dd02      	ble.n	8004d36 <Lane_Changer+0x9e>
 8004d30:	4b59      	ldr	r3, [pc, #356]	; (8004e98 <Lane_Changer+0x200>)
 8004d32:	2200      	movs	r2, #0
 8004d34:	601a      	str	r2, [r3, #0]
		t_stamp = t;
 8004d36:	4a57      	ldr	r2, [pc, #348]	; (8004e94 <Lane_Changer+0x1fc>)
 8004d38:	687b      	ldr	r3, [r7, #4]
 8004d3a:	6013      	str	r3, [r2, #0]
	{
 8004d3c:	e096      	b.n	8004e6c <Lane_Changer+0x1d4>
	}
	else if(laneChange==3)
 8004d3e:	4b52      	ldr	r3, [pc, #328]	; (8004e88 <Lane_Changer+0x1f0>)
 8004d40:	781b      	ldrb	r3, [r3, #0]
 8004d42:	2b03      	cmp	r3, #3
 8004d44:	d172      	bne.n	8004e2c <Lane_Changer+0x194>
	{
		s+=fabs(v)*(t-t_prev)/1000;
 8004d46:	4b56      	ldr	r3, [pc, #344]	; (8004ea0 <Lane_Changer+0x208>)
 8004d48:	681b      	ldr	r3, [r3, #0]
 8004d4a:	4618      	mov	r0, r3
 8004d4c:	f7fb fc1c 	bl	8000588 <__aeabi_f2d>
 8004d50:	4604      	mov	r4, r0
 8004d52:	460d      	mov	r5, r1
 8004d54:	4b53      	ldr	r3, [pc, #332]	; (8004ea4 <Lane_Changer+0x20c>)
 8004d56:	edd3 7a00 	vldr	s15, [r3]
 8004d5a:	eef0 7ae7 	vabs.f32	s15, s15
 8004d5e:	ee17 0a90 	vmov	r0, s15
 8004d62:	f7fb fc11 	bl	8000588 <__aeabi_f2d>
 8004d66:	4680      	mov	r8, r0
 8004d68:	4689      	mov	r9, r1
 8004d6a:	4b4f      	ldr	r3, [pc, #316]	; (8004ea8 <Lane_Changer+0x210>)
 8004d6c:	681b      	ldr	r3, [r3, #0]
 8004d6e:	687a      	ldr	r2, [r7, #4]
 8004d70:	1ad3      	subs	r3, r2, r3
 8004d72:	4618      	mov	r0, r3
 8004d74:	f7fb fbe6 	bl	8000544 <__aeabi_ui2d>
 8004d78:	4602      	mov	r2, r0
 8004d7a:	460b      	mov	r3, r1
 8004d7c:	4640      	mov	r0, r8
 8004d7e:	4649      	mov	r1, r9
 8004d80:	f7fb fc5a 	bl	8000638 <__aeabi_dmul>
 8004d84:	4602      	mov	r2, r0
 8004d86:	460b      	mov	r3, r1
 8004d88:	4610      	mov	r0, r2
 8004d8a:	4619      	mov	r1, r3
 8004d8c:	f04f 0200 	mov.w	r2, #0
 8004d90:	4b46      	ldr	r3, [pc, #280]	; (8004eac <Lane_Changer+0x214>)
 8004d92:	f7fb fd7b 	bl	800088c <__aeabi_ddiv>
 8004d96:	4602      	mov	r2, r0
 8004d98:	460b      	mov	r3, r1
 8004d9a:	4620      	mov	r0, r4
 8004d9c:	4629      	mov	r1, r5
 8004d9e:	f7fb fa95 	bl	80002cc <__adddf3>
 8004da2:	4602      	mov	r2, r0
 8004da4:	460b      	mov	r3, r1
 8004da6:	4610      	mov	r0, r2
 8004da8:	4619      	mov	r1, r3
 8004daa:	f7fb ff1d 	bl	8000be8 <__aeabi_d2f>
 8004dae:	4603      	mov	r3, r0
 8004db0:	4a3b      	ldr	r2, [pc, #236]	; (8004ea0 <Lane_Changer+0x208>)
 8004db2:	6013      	str	r3, [r2, #0]
		if(orientation==FORWARD)
 8004db4:	4b3e      	ldr	r3, [pc, #248]	; (8004eb0 <Lane_Changer+0x218>)
 8004db6:	781b      	ldrb	r3, [r3, #0]
 8004db8:	2b00      	cmp	r3, #0
 8004dba:	d114      	bne.n	8004de6 <Lane_Changer+0x14e>
		{
			TIM2->CCR1=CCR_FRONT_MAX-40;
 8004dbc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004dc0:	f44f 7257 	mov.w	r2, #860	; 0x35c
 8004dc4:	635a      	str	r2, [r3, #52]	; 0x34
			TIM1->CCR4=CCR_REAR_MIN;
 8004dc6:	4b3b      	ldr	r3, [pc, #236]	; (8004eb4 <Lane_Changer+0x21c>)
 8004dc8:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8004dcc:	641a      	str	r2, [r3, #64]	; 0x40
			timeout=1000;
 8004dce:	4b3a      	ldr	r3, [pc, #232]	; (8004eb8 <Lane_Changer+0x220>)
 8004dd0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004dd4:	601a      	str	r2, [r3, #0]
			laneChange=4;
 8004dd6:	4b2c      	ldr	r3, [pc, #176]	; (8004e88 <Lane_Changer+0x1f0>)
 8004dd8:	2204      	movs	r2, #4
 8004dda:	701a      	strb	r2, [r3, #0]
			t_stamp=t;
 8004ddc:	4a2d      	ldr	r2, [pc, #180]	; (8004e94 <Lane_Changer+0x1fc>)
 8004dde:	687b      	ldr	r3, [r7, #4]
 8004de0:	6013      	str	r3, [r2, #0]
			return 1;
 8004de2:	2301      	movs	r3, #1
 8004de4:	e04a      	b.n	8004e7c <Lane_Changer+0x1e4>
		}
		else if(orientation==REVERSE && s>2000)
 8004de6:	4b32      	ldr	r3, [pc, #200]	; (8004eb0 <Lane_Changer+0x218>)
 8004de8:	781b      	ldrb	r3, [r3, #0]
 8004dea:	2b01      	cmp	r3, #1
 8004dec:	d13e      	bne.n	8004e6c <Lane_Changer+0x1d4>
 8004dee:	4b2c      	ldr	r3, [pc, #176]	; (8004ea0 <Lane_Changer+0x208>)
 8004df0:	edd3 7a00 	vldr	s15, [r3]
 8004df4:	ed9f 7a31 	vldr	s14, [pc, #196]	; 8004ebc <Lane_Changer+0x224>
 8004df8:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004dfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004e00:	dd34      	ble.n	8004e6c <Lane_Changer+0x1d4>
		{
			TIM2->CCR1=CCR_FRONT_MIN;
 8004e02:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004e06:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8004e0a:	635a      	str	r2, [r3, #52]	; 0x34
			TIM1->CCR4=CCR_REAR_MIN;
 8004e0c:	4b29      	ldr	r3, [pc, #164]	; (8004eb4 <Lane_Changer+0x21c>)
 8004e0e:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8004e12:	641a      	str	r2, [r3, #64]	; 0x40
			timeout=3000;
 8004e14:	4b28      	ldr	r3, [pc, #160]	; (8004eb8 <Lane_Changer+0x220>)
 8004e16:	f640 32b8 	movw	r2, #3000	; 0xbb8
 8004e1a:	601a      	str	r2, [r3, #0]
			laneChange=4;
 8004e1c:	4b1a      	ldr	r3, [pc, #104]	; (8004e88 <Lane_Changer+0x1f0>)
 8004e1e:	2204      	movs	r2, #4
 8004e20:	701a      	strb	r2, [r3, #0]
			t_stamp=t;
 8004e22:	4a1c      	ldr	r2, [pc, #112]	; (8004e94 <Lane_Changer+0x1fc>)
 8004e24:	687b      	ldr	r3, [r7, #4]
 8004e26:	6013      	str	r3, [r2, #0]
			return 1;
 8004e28:	2301      	movs	r3, #1
 8004e2a:	e027      	b.n	8004e7c <Lane_Changer+0x1e4>
		}
	}
	else if(laneChange==4)
 8004e2c:	4b16      	ldr	r3, [pc, #88]	; (8004e88 <Lane_Changer+0x1f0>)
 8004e2e:	781b      	ldrb	r3, [r3, #0]
 8004e30:	2b04      	cmp	r3, #4
 8004e32:	d11b      	bne.n	8004e6c <Lane_Changer+0x1d4>
	{
		LED_Y(0);
 8004e34:	2201      	movs	r2, #1
 8004e36:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004e3a:	4821      	ldr	r0, [pc, #132]	; (8004ec0 <Lane_Changer+0x228>)
 8004e3c:	f003 fbfc 	bl	8008638 <HAL_GPIO_WritePin>
		v_control=SLOW_DOWN;
 8004e40:	4b20      	ldr	r3, [pc, #128]	; (8004ec4 <Lane_Changer+0x22c>)
 8004e42:	2201      	movs	r2, #1
 8004e44:	701a      	strb	r2, [r3, #0]
		if((t-t_stamp)>timeout && LINE_CNT>0)
 8004e46:	4b13      	ldr	r3, [pc, #76]	; (8004e94 <Lane_Changer+0x1fc>)
 8004e48:	681b      	ldr	r3, [r3, #0]
 8004e4a:	687a      	ldr	r2, [r7, #4]
 8004e4c:	1ad2      	subs	r2, r2, r3
 8004e4e:	4b1a      	ldr	r3, [pc, #104]	; (8004eb8 <Lane_Changer+0x220>)
 8004e50:	681b      	ldr	r3, [r3, #0]
 8004e52:	429a      	cmp	r2, r3
 8004e54:	d908      	bls.n	8004e68 <Lane_Changer+0x1d0>
 8004e56:	4b0d      	ldr	r3, [pc, #52]	; (8004e8c <Lane_Changer+0x1f4>)
 8004e58:	785b      	ldrb	r3, [r3, #1]
 8004e5a:	2b00      	cmp	r3, #0
 8004e5c:	d004      	beq.n	8004e68 <Lane_Changer+0x1d0>
		{
			ignore=1;
 8004e5e:	4b1a      	ldr	r3, [pc, #104]	; (8004ec8 <Lane_Changer+0x230>)
 8004e60:	2201      	movs	r2, #1
 8004e62:	701a      	strb	r2, [r3, #0]
			return 0;
 8004e64:	2300      	movs	r3, #0
 8004e66:	e009      	b.n	8004e7c <Lane_Changer+0x1e4>
		}
		else return 1;
 8004e68:	2301      	movs	r3, #1
 8004e6a:	e007      	b.n	8004e7c <Lane_Changer+0x1e4>
	}
	lineCnt_prev=LINE_CNT;
 8004e6c:	4b07      	ldr	r3, [pc, #28]	; (8004e8c <Lane_Changer+0x1f4>)
 8004e6e:	785a      	ldrb	r2, [r3, #1]
 8004e70:	4b07      	ldr	r3, [pc, #28]	; (8004e90 <Lane_Changer+0x1f8>)
 8004e72:	701a      	strb	r2, [r3, #0]
	t_prev=t;
 8004e74:	4a0c      	ldr	r2, [pc, #48]	; (8004ea8 <Lane_Changer+0x210>)
 8004e76:	687b      	ldr	r3, [r7, #4]
 8004e78:	6013      	str	r3, [r2, #0]
	return 0;
 8004e7a:	2300      	movs	r3, #0
}
 8004e7c:	4618      	mov	r0, r3
 8004e7e:	3710      	adds	r7, #16
 8004e80:	46bd      	mov	sp, r7
 8004e82:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8004e86:	bf00      	nop
 8004e88:	200002b8 	.word	0x200002b8
 8004e8c:	2000069c 	.word	0x2000069c
 8004e90:	2000007c 	.word	0x2000007c
 8004e94:	2000070c 	.word	0x2000070c
 8004e98:	20000710 	.word	0x20000710
 8004e9c:	20000080 	.word	0x20000080
 8004ea0:	20000714 	.word	0x20000714
 8004ea4:	20000684 	.word	0x20000684
 8004ea8:	20000718 	.word	0x20000718
 8004eac:	408f4000 	.word	0x408f4000
 8004eb0:	200002b4 	.word	0x200002b4
 8004eb4:	40010000 	.word	0x40010000
 8004eb8:	2000071c 	.word	0x2000071c
 8004ebc:	44fa0000 	.word	0x44fa0000
 8004ec0:	40020400 	.word	0x40020400
 8004ec4:	200002b9 	.word	0x200002b9
 8004ec8:	200006a6 	.word	0x200006a6

08004ecc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8004ecc:	b580      	push	{r7, lr}
 8004ece:	b084      	sub	sp, #16
 8004ed0:	af04      	add	r7, sp, #16
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8004ed2:	f001 fca5 	bl	8006820 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8004ed6:	f000 f88f 	bl	8004ff8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8004eda:	f000 fdad 	bl	8005a38 <MX_GPIO_Init>
  MX_DMA_Init();
 8004ede:	f000 fd8b 	bl	80059f8 <MX_DMA_Init>
  MX_TIM2_Init();
 8004ee2:	f000 fa7f 	bl	80053e4 <MX_TIM2_Init>
  MX_USART1_UART_Init();
 8004ee6:	f000 fd09 	bl	80058fc <MX_USART1_UART_Init>
  MX_TIM4_Init();
 8004eea:	f000 fb73 	bl	80055d4 <MX_TIM4_Init>
  MX_ADC2_Init();
 8004eee:	f000 f987 	bl	8005200 <MX_ADC2_Init>
  MX_TIM3_Init();
 8004ef2:	f000 faed 	bl	80054d0 <MX_TIM3_Init>
  MX_UART5_Init();
 8004ef6:	f000 fcd7 	bl	80058a8 <MX_UART5_Init>
  MX_USART2_UART_Init();
 8004efa:	f000 fd29 	bl	8005950 <MX_USART2_UART_Init>
  MX_TIM8_Init();
 8004efe:	f000 fc33 	bl	8005768 <MX_TIM8_Init>
  MX_ADC1_Init();
 8004f02:	f000 f8eb 	bl	80050dc <MX_ADC1_Init>
  MX_USART3_UART_Init();
 8004f06:	f000 fd4d 	bl	80059a4 <MX_USART3_UART_Init>
  MX_TIM5_Init();
 8004f0a:	f000 fbdf 	bl	80056cc <MX_TIM5_Init>
  MX_TIM1_Init();
 8004f0e:	f000 f9c9 	bl	80052a4 <MX_TIM1_Init>
  MX_TIM14_Init();
 8004f12:	f000 fca5 	bl	8005860 <MX_TIM14_Init>
  MX_TIM13_Init();
 8004f16:	f000 fc7f 	bl	8005818 <MX_TIM13_Init>
  /* USER CODE BEGIN 2 */
  F4_Basic_Init(&huart1, &htim5, &htim3, &htim2, &htim1, &htim8,&htim13,&htim14);
 8004f1a:	4b2a      	ldr	r3, [pc, #168]	; (8004fc4 <main+0xf8>)
 8004f1c:	9303      	str	r3, [sp, #12]
 8004f1e:	4b2a      	ldr	r3, [pc, #168]	; (8004fc8 <main+0xfc>)
 8004f20:	9302      	str	r3, [sp, #8]
 8004f22:	4b2a      	ldr	r3, [pc, #168]	; (8004fcc <main+0x100>)
 8004f24:	9301      	str	r3, [sp, #4]
 8004f26:	4b2a      	ldr	r3, [pc, #168]	; (8004fd0 <main+0x104>)
 8004f28:	9300      	str	r3, [sp, #0]
 8004f2a:	4b2a      	ldr	r3, [pc, #168]	; (8004fd4 <main+0x108>)
 8004f2c:	4a2a      	ldr	r2, [pc, #168]	; (8004fd8 <main+0x10c>)
 8004f2e:	492b      	ldr	r1, [pc, #172]	; (8004fdc <main+0x110>)
 8004f30:	482b      	ldr	r0, [pc, #172]	; (8004fe0 <main+0x114>)
 8004f32:	f7fc f841 	bl	8000fb8 <F4_Basic_Init>
  Remote_Control_Init(&htim4, TIM_CHANNEL_3);
 8004f36:	2108      	movs	r1, #8
 8004f38:	482a      	ldr	r0, [pc, #168]	; (8004fe4 <main+0x118>)
 8004f3a:	f000 feaf 	bl	8005c9c <Remote_Control_Init>
  Battery_Voltage_Compensate(&hadc2, &hadc1, &huart1);
 8004f3e:	4a28      	ldr	r2, [pc, #160]	; (8004fe0 <main+0x114>)
 8004f40:	4929      	ldr	r1, [pc, #164]	; (8004fe8 <main+0x11c>)
 8004f42:	482a      	ldr	r0, [pc, #168]	; (8004fec <main+0x120>)
 8004f44:	f7fe fa84 	bl	8003450 <Battery_Voltage_Compensate>

  //leaveLineEnabled=1;
  //v_ref=1000;

  Mode_Selector(&huart1, &huart5);
 8004f48:	4929      	ldr	r1, [pc, #164]	; (8004ff0 <main+0x124>)
 8004f4a:	4825      	ldr	r0, [pc, #148]	; (8004fe0 <main+0x114>)
 8004f4c:	f7fe f854 	bl	8002ff8 <Mode_Selector>
  Create_Nodes(&huart1);
 8004f50:	4823      	ldr	r0, [pc, #140]	; (8004fe0 <main+0x114>)
 8004f52:	f7fc fa87 	bl	8001464 <Create_Nodes>
  Wait_For_Start_Sigal(&huart3,&huart1);
 8004f56:	4922      	ldr	r1, [pc, #136]	; (8004fe0 <main+0x114>)
 8004f58:	4826      	ldr	r0, [pc, #152]	; (8004ff4 <main+0x128>)
 8004f5a:	f7fe f91d 	bl	8003198 <Wait_For_Start_Sigal>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {/**/
	  Measure_Velocity_Task(&htim8,TICK, 4);
 8004f5e:	4b1f      	ldr	r3, [pc, #124]	; (8004fdc <main+0x110>)
 8004f60:	681b      	ldr	r3, [r3, #0]
 8004f62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f64:	2204      	movs	r2, #4
 8004f66:	4619      	mov	r1, r3
 8004f68:	4818      	ldr	r0, [pc, #96]	; (8004fcc <main+0x100>)
 8004f6a:	f7fe fb9d 	bl	80036a8 <Measure_Velocity_Task>
	  Motor_Drive_Task(&htim3, &huart1, TICK, 10);
 8004f6e:	4b1b      	ldr	r3, [pc, #108]	; (8004fdc <main+0x110>)
 8004f70:	681b      	ldr	r3, [r3, #0]
 8004f72:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004f74:	230a      	movs	r3, #10
 8004f76:	491a      	ldr	r1, [pc, #104]	; (8004fe0 <main+0x114>)
 8004f78:	4817      	ldr	r0, [pc, #92]	; (8004fd8 <main+0x10c>)
 8004f7a:	f7fe fc11 	bl	80037a0 <Motor_Drive_Task>
	  Remote_Control_Task(&htim4, TIM_CHANNEL_3, &huart1, TICK, 43);
 8004f7e:	4b17      	ldr	r3, [pc, #92]	; (8004fdc <main+0x110>)
 8004f80:	681b      	ldr	r3, [r3, #0]
 8004f82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f84:	222b      	movs	r2, #43	; 0x2b
 8004f86:	9200      	str	r2, [sp, #0]
 8004f88:	4a15      	ldr	r2, [pc, #84]	; (8004fe0 <main+0x114>)
 8004f8a:	2108      	movs	r1, #8
 8004f8c:	4815      	ldr	r0, [pc, #84]	; (8004fe4 <main+0x118>)
 8004f8e:	f000 fea1 	bl	8005cd4 <Remote_Control_Task>

	  //Control_Task(&huart1,&htim14,TICK, 23);
	  Control_Task_2(&huart1,TICK, 23);
 8004f92:	4b12      	ldr	r3, [pc, #72]	; (8004fdc <main+0x110>)
 8004f94:	681b      	ldr	r3, [r3, #0]
 8004f96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f98:	2217      	movs	r2, #23
 8004f9a:	4619      	mov	r1, r3
 8004f9c:	4810      	ldr	r0, [pc, #64]	; (8004fe0 <main+0x114>)
 8004f9e:	f7fd fb6f 	bl	8002680 <Control_Task_2>
	  Line_Track_Task(&huart5, &huart1, TICK, 4);
 8004fa2:	4b0e      	ldr	r3, [pc, #56]	; (8004fdc <main+0x110>)
 8004fa4:	681b      	ldr	r3, [r3, #0]
 8004fa6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004fa8:	2304      	movs	r3, #4
 8004faa:	490d      	ldr	r1, [pc, #52]	; (8004fe0 <main+0x114>)
 8004fac:	4810      	ldr	r0, [pc, #64]	; (8004ff0 <main+0x124>)
 8004fae:	f7fe fddf 	bl	8003b70 <Line_Track_Task>

	  HDI_Read_Task(&huart1,&htim2,TICK, 200);
 8004fb2:	4b0a      	ldr	r3, [pc, #40]	; (8004fdc <main+0x110>)
 8004fb4:	681b      	ldr	r3, [r3, #0]
 8004fb6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004fb8:	23c8      	movs	r3, #200	; 0xc8
 8004fba:	4906      	ldr	r1, [pc, #24]	; (8004fd4 <main+0x108>)
 8004fbc:	4808      	ldr	r0, [pc, #32]	; (8004fe0 <main+0x114>)
 8004fbe:	f7fc f8c1 	bl	8001144 <HDI_Read_Task>
	  Measure_Velocity_Task(&htim8,TICK, 4);
 8004fc2:	e7cc      	b.n	8004f5e <main+0x92>
 8004fc4:	200009a8 	.word	0x200009a8
 8004fc8:	20000960 	.word	0x20000960
 8004fcc:	20000918 	.word	0x20000918
 8004fd0:	200007b0 	.word	0x200007b0
 8004fd4:	200007f8 	.word	0x200007f8
 8004fd8:	20000840 	.word	0x20000840
 8004fdc:	200008d0 	.word	0x200008d0
 8004fe0:	20000a94 	.word	0x20000a94
 8004fe4:	20000888 	.word	0x20000888
 8004fe8:	20000720 	.word	0x20000720
 8004fec:	20000768 	.word	0x20000768
 8004ff0:	20000a50 	.word	0x20000a50
 8004ff4:	20000b1c 	.word	0x20000b1c

08004ff8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8004ff8:	b580      	push	{r7, lr}
 8004ffa:	b094      	sub	sp, #80	; 0x50
 8004ffc:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8004ffe:	f107 031c 	add.w	r3, r7, #28
 8005002:	2234      	movs	r2, #52	; 0x34
 8005004:	2100      	movs	r1, #0
 8005006:	4618      	mov	r0, r3
 8005008:	f007 f960 	bl	800c2cc <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800500c:	f107 0308 	add.w	r3, r7, #8
 8005010:	2200      	movs	r2, #0
 8005012:	601a      	str	r2, [r3, #0]
 8005014:	605a      	str	r2, [r3, #4]
 8005016:	609a      	str	r2, [r3, #8]
 8005018:	60da      	str	r2, [r3, #12]
 800501a:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 800501c:	2300      	movs	r3, #0
 800501e:	607b      	str	r3, [r7, #4]
 8005020:	4b2c      	ldr	r3, [pc, #176]	; (80050d4 <SystemClock_Config+0xdc>)
 8005022:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005024:	4a2b      	ldr	r2, [pc, #172]	; (80050d4 <SystemClock_Config+0xdc>)
 8005026:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800502a:	6413      	str	r3, [r2, #64]	; 0x40
 800502c:	4b29      	ldr	r3, [pc, #164]	; (80050d4 <SystemClock_Config+0xdc>)
 800502e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005030:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005034:	607b      	str	r3, [r7, #4]
 8005036:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8005038:	2300      	movs	r3, #0
 800503a:	603b      	str	r3, [r7, #0]
 800503c:	4b26      	ldr	r3, [pc, #152]	; (80050d8 <SystemClock_Config+0xe0>)
 800503e:	681b      	ldr	r3, [r3, #0]
 8005040:	4a25      	ldr	r2, [pc, #148]	; (80050d8 <SystemClock_Config+0xe0>)
 8005042:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005046:	6013      	str	r3, [r2, #0]
 8005048:	4b23      	ldr	r3, [pc, #140]	; (80050d8 <SystemClock_Config+0xe0>)
 800504a:	681b      	ldr	r3, [r3, #0]
 800504c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8005050:	603b      	str	r3, [r7, #0]
 8005052:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8005054:	2301      	movs	r3, #1
 8005056:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8005058:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800505c:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800505e:	2302      	movs	r3, #2
 8005060:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8005062:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8005066:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 4;
 8005068:	2304      	movs	r3, #4
 800506a:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 180;
 800506c:	23b4      	movs	r3, #180	; 0xb4
 800506e:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8005070:	2302      	movs	r3, #2
 8005072:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8005074:	2302      	movs	r3, #2
 8005076:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8005078:	2302      	movs	r3, #2
 800507a:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800507c:	f107 031c 	add.w	r3, r7, #28
 8005080:	4618      	mov	r0, r3
 8005082:	f003 febf 	bl	8008e04 <HAL_RCC_OscConfig>
 8005086:	4603      	mov	r3, r0
 8005088:	2b00      	cmp	r3, #0
 800508a:	d001      	beq.n	8005090 <SystemClock_Config+0x98>
  {
    Error_Handler();
 800508c:	f000 fe00 	bl	8005c90 <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8005090:	f003 fb1e 	bl	80086d0 <HAL_PWREx_EnableOverDrive>
 8005094:	4603      	mov	r3, r0
 8005096:	2b00      	cmp	r3, #0
 8005098:	d001      	beq.n	800509e <SystemClock_Config+0xa6>
  {
    Error_Handler();
 800509a:	f000 fdf9 	bl	8005c90 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800509e:	230f      	movs	r3, #15
 80050a0:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80050a2:	2302      	movs	r3, #2
 80050a4:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80050a6:	2300      	movs	r3, #0
 80050a8:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 80050aa:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 80050ae:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80050b0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80050b4:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80050b6:	f107 0308 	add.w	r3, r7, #8
 80050ba:	2105      	movs	r1, #5
 80050bc:	4618      	mov	r0, r3
 80050be:	f003 fb57 	bl	8008770 <HAL_RCC_ClockConfig>
 80050c2:	4603      	mov	r3, r0
 80050c4:	2b00      	cmp	r3, #0
 80050c6:	d001      	beq.n	80050cc <SystemClock_Config+0xd4>
  {
    Error_Handler();
 80050c8:	f000 fde2 	bl	8005c90 <Error_Handler>
  }
}
 80050cc:	bf00      	nop
 80050ce:	3750      	adds	r7, #80	; 0x50
 80050d0:	46bd      	mov	sp, r7
 80050d2:	bd80      	pop	{r7, pc}
 80050d4:	40023800 	.word	0x40023800
 80050d8:	40007000 	.word	0x40007000

080050dc <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 80050dc:	b580      	push	{r7, lr}
 80050de:	b08c      	sub	sp, #48	; 0x30
 80050e0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80050e2:	f107 0320 	add.w	r3, r7, #32
 80050e6:	2200      	movs	r2, #0
 80050e8:	601a      	str	r2, [r3, #0]
 80050ea:	605a      	str	r2, [r3, #4]
 80050ec:	609a      	str	r2, [r3, #8]
 80050ee:	60da      	str	r2, [r3, #12]
  ADC_InjectionConfTypeDef sConfigInjected = {0};
 80050f0:	463b      	mov	r3, r7
 80050f2:	2220      	movs	r2, #32
 80050f4:	2100      	movs	r1, #0
 80050f6:	4618      	mov	r0, r3
 80050f8:	f007 f8e8 	bl	800c2cc <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 80050fc:	4b3c      	ldr	r3, [pc, #240]	; (80051f0 <MX_ADC1_Init+0x114>)
 80050fe:	4a3d      	ldr	r2, [pc, #244]	; (80051f4 <MX_ADC1_Init+0x118>)
 8005100:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV6;
 8005102:	4b3b      	ldr	r3, [pc, #236]	; (80051f0 <MX_ADC1_Init+0x114>)
 8005104:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8005108:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 800510a:	4b39      	ldr	r3, [pc, #228]	; (80051f0 <MX_ADC1_Init+0x114>)
 800510c:	2200      	movs	r2, #0
 800510e:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ENABLE;
 8005110:	4b37      	ldr	r3, [pc, #220]	; (80051f0 <MX_ADC1_Init+0x114>)
 8005112:	2201      	movs	r2, #1
 8005114:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8005116:	4b36      	ldr	r3, [pc, #216]	; (80051f0 <MX_ADC1_Init+0x114>)
 8005118:	2200      	movs	r2, #0
 800511a:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800511c:	4b34      	ldr	r3, [pc, #208]	; (80051f0 <MX_ADC1_Init+0x114>)
 800511e:	2200      	movs	r2, #0
 8005120:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8005124:	4b32      	ldr	r3, [pc, #200]	; (80051f0 <MX_ADC1_Init+0x114>)
 8005126:	2200      	movs	r2, #0
 8005128:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800512a:	4b31      	ldr	r3, [pc, #196]	; (80051f0 <MX_ADC1_Init+0x114>)
 800512c:	4a32      	ldr	r2, [pc, #200]	; (80051f8 <MX_ADC1_Init+0x11c>)
 800512e:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8005130:	4b2f      	ldr	r3, [pc, #188]	; (80051f0 <MX_ADC1_Init+0x114>)
 8005132:	2200      	movs	r2, #0
 8005134:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 3;
 8005136:	4b2e      	ldr	r3, [pc, #184]	; (80051f0 <MX_ADC1_Init+0x114>)
 8005138:	2203      	movs	r2, #3
 800513a:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 800513c:	4b2c      	ldr	r3, [pc, #176]	; (80051f0 <MX_ADC1_Init+0x114>)
 800513e:	2200      	movs	r2, #0
 8005140:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8005144:	4b2a      	ldr	r3, [pc, #168]	; (80051f0 <MX_ADC1_Init+0x114>)
 8005146:	2201      	movs	r2, #1
 8005148:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800514a:	4829      	ldr	r0, [pc, #164]	; (80051f0 <MX_ADC1_Init+0x114>)
 800514c:	f001 fbfe 	bl	800694c <HAL_ADC_Init>
 8005150:	4603      	mov	r3, r0
 8005152:	2b00      	cmp	r3, #0
 8005154:	d001      	beq.n	800515a <MX_ADC1_Init+0x7e>
  {
    Error_Handler();
 8005156:	f000 fd9b 	bl	8005c90 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_8;
 800515a:	2308      	movs	r3, #8
 800515c:	623b      	str	r3, [r7, #32]
  sConfig.Rank = 1;
 800515e:	2301      	movs	r3, #1
 8005160:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8005162:	2307      	movs	r3, #7
 8005164:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8005166:	f107 0320 	add.w	r3, r7, #32
 800516a:	4619      	mov	r1, r3
 800516c:	4820      	ldr	r0, [pc, #128]	; (80051f0 <MX_ADC1_Init+0x114>)
 800516e:	f001 fd9b 	bl	8006ca8 <HAL_ADC_ConfigChannel>
 8005172:	4603      	mov	r3, r0
 8005174:	2b00      	cmp	r3, #0
 8005176:	d001      	beq.n	800517c <MX_ADC1_Init+0xa0>
  {
    Error_Handler();
 8005178:	f000 fd8a 	bl	8005c90 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Rank = 2;
 800517c:	2302      	movs	r3, #2
 800517e:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8005180:	f107 0320 	add.w	r3, r7, #32
 8005184:	4619      	mov	r1, r3
 8005186:	481a      	ldr	r0, [pc, #104]	; (80051f0 <MX_ADC1_Init+0x114>)
 8005188:	f001 fd8e 	bl	8006ca8 <HAL_ADC_ConfigChannel>
 800518c:	4603      	mov	r3, r0
 800518e:	2b00      	cmp	r3, #0
 8005190:	d001      	beq.n	8005196 <MX_ADC1_Init+0xba>
  {
    Error_Handler();
 8005192:	f000 fd7d 	bl	8005c90 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Rank = 3;
 8005196:	2303      	movs	r3, #3
 8005198:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800519a:	f107 0320 	add.w	r3, r7, #32
 800519e:	4619      	mov	r1, r3
 80051a0:	4813      	ldr	r0, [pc, #76]	; (80051f0 <MX_ADC1_Init+0x114>)
 80051a2:	f001 fd81 	bl	8006ca8 <HAL_ADC_ConfigChannel>
 80051a6:	4603      	mov	r3, r0
 80051a8:	2b00      	cmp	r3, #0
 80051aa:	d001      	beq.n	80051b0 <MX_ADC1_Init+0xd4>
  {
    Error_Handler();
 80051ac:	f000 fd70 	bl	8005c90 <Error_Handler>
  }

  /** Configures for the selected ADC injected channel its corresponding rank in the sequencer and its sample time
  */
  sConfigInjected.InjectedChannel = ADC_CHANNEL_8;
 80051b0:	2308      	movs	r3, #8
 80051b2:	603b      	str	r3, [r7, #0]
  sConfigInjected.InjectedRank = 1;
 80051b4:	2301      	movs	r3, #1
 80051b6:	607b      	str	r3, [r7, #4]
  sConfigInjected.InjectedNbrOfConversion = 1;
 80051b8:	2301      	movs	r3, #1
 80051ba:	613b      	str	r3, [r7, #16]
  sConfigInjected.InjectedSamplingTime = ADC_SAMPLETIME_3CYCLES;
 80051bc:	2300      	movs	r3, #0
 80051be:	60bb      	str	r3, [r7, #8]
  sConfigInjected.ExternalTrigInjecConvEdge = ADC_EXTERNALTRIGINJECCONVEDGE_NONE;
 80051c0:	2300      	movs	r3, #0
 80051c2:	61fb      	str	r3, [r7, #28]
  sConfigInjected.ExternalTrigInjecConv = ADC_INJECTED_SOFTWARE_START;
 80051c4:	4b0d      	ldr	r3, [pc, #52]	; (80051fc <MX_ADC1_Init+0x120>)
 80051c6:	61bb      	str	r3, [r7, #24]
  sConfigInjected.AutoInjectedConv = DISABLE;
 80051c8:	2300      	movs	r3, #0
 80051ca:	757b      	strb	r3, [r7, #21]
  sConfigInjected.InjectedDiscontinuousConvMode = DISABLE;
 80051cc:	2300      	movs	r3, #0
 80051ce:	753b      	strb	r3, [r7, #20]
  sConfigInjected.InjectedOffset = 0;
 80051d0:	2300      	movs	r3, #0
 80051d2:	60fb      	str	r3, [r7, #12]
  if (HAL_ADCEx_InjectedConfigChannel(&hadc1, &sConfigInjected) != HAL_OK)
 80051d4:	463b      	mov	r3, r7
 80051d6:	4619      	mov	r1, r3
 80051d8:	4805      	ldr	r0, [pc, #20]	; (80051f0 <MX_ADC1_Init+0x114>)
 80051da:	f001 ff93 	bl	8007104 <HAL_ADCEx_InjectedConfigChannel>
 80051de:	4603      	mov	r3, r0
 80051e0:	2b00      	cmp	r3, #0
 80051e2:	d001      	beq.n	80051e8 <MX_ADC1_Init+0x10c>
  {
    Error_Handler();
 80051e4:	f000 fd54 	bl	8005c90 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 80051e8:	bf00      	nop
 80051ea:	3730      	adds	r7, #48	; 0x30
 80051ec:	46bd      	mov	sp, r7
 80051ee:	bd80      	pop	{r7, pc}
 80051f0:	20000720 	.word	0x20000720
 80051f4:	40012000 	.word	0x40012000
 80051f8:	0f000001 	.word	0x0f000001
 80051fc:	000f0001 	.word	0x000f0001

08005200 <MX_ADC2_Init>:
  * @brief ADC2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC2_Init(void)
{
 8005200:	b580      	push	{r7, lr}
 8005202:	b084      	sub	sp, #16
 8005204:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8005206:	463b      	mov	r3, r7
 8005208:	2200      	movs	r2, #0
 800520a:	601a      	str	r2, [r3, #0]
 800520c:	605a      	str	r2, [r3, #4]
 800520e:	609a      	str	r2, [r3, #8]
 8005210:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC2_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc2.Instance = ADC2;
 8005212:	4b21      	ldr	r3, [pc, #132]	; (8005298 <MX_ADC2_Init+0x98>)
 8005214:	4a21      	ldr	r2, [pc, #132]	; (800529c <MX_ADC2_Init+0x9c>)
 8005216:	601a      	str	r2, [r3, #0]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV6;
 8005218:	4b1f      	ldr	r3, [pc, #124]	; (8005298 <MX_ADC2_Init+0x98>)
 800521a:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 800521e:	605a      	str	r2, [r3, #4]
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 8005220:	4b1d      	ldr	r3, [pc, #116]	; (8005298 <MX_ADC2_Init+0x98>)
 8005222:	2200      	movs	r2, #0
 8005224:	609a      	str	r2, [r3, #8]
  hadc2.Init.ScanConvMode = DISABLE;
 8005226:	4b1c      	ldr	r3, [pc, #112]	; (8005298 <MX_ADC2_Init+0x98>)
 8005228:	2200      	movs	r2, #0
 800522a:	611a      	str	r2, [r3, #16]
  hadc2.Init.ContinuousConvMode = DISABLE;
 800522c:	4b1a      	ldr	r3, [pc, #104]	; (8005298 <MX_ADC2_Init+0x98>)
 800522e:	2200      	movs	r2, #0
 8005230:	761a      	strb	r2, [r3, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 8005232:	4b19      	ldr	r3, [pc, #100]	; (8005298 <MX_ADC2_Init+0x98>)
 8005234:	2200      	movs	r2, #0
 8005236:	f883 2020 	strb.w	r2, [r3, #32]
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800523a:	4b17      	ldr	r3, [pc, #92]	; (8005298 <MX_ADC2_Init+0x98>)
 800523c:	2200      	movs	r2, #0
 800523e:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8005240:	4b15      	ldr	r3, [pc, #84]	; (8005298 <MX_ADC2_Init+0x98>)
 8005242:	4a17      	ldr	r2, [pc, #92]	; (80052a0 <MX_ADC2_Init+0xa0>)
 8005244:	629a      	str	r2, [r3, #40]	; 0x28
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8005246:	4b14      	ldr	r3, [pc, #80]	; (8005298 <MX_ADC2_Init+0x98>)
 8005248:	2200      	movs	r2, #0
 800524a:	60da      	str	r2, [r3, #12]
  hadc2.Init.NbrOfConversion = 1;
 800524c:	4b12      	ldr	r3, [pc, #72]	; (8005298 <MX_ADC2_Init+0x98>)
 800524e:	2201      	movs	r2, #1
 8005250:	61da      	str	r2, [r3, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 8005252:	4b11      	ldr	r3, [pc, #68]	; (8005298 <MX_ADC2_Init+0x98>)
 8005254:	2200      	movs	r2, #0
 8005256:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800525a:	4b0f      	ldr	r3, [pc, #60]	; (8005298 <MX_ADC2_Init+0x98>)
 800525c:	2201      	movs	r2, #1
 800525e:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8005260:	480d      	ldr	r0, [pc, #52]	; (8005298 <MX_ADC2_Init+0x98>)
 8005262:	f001 fb73 	bl	800694c <HAL_ADC_Init>
 8005266:	4603      	mov	r3, r0
 8005268:	2b00      	cmp	r3, #0
 800526a:	d001      	beq.n	8005270 <MX_ADC2_Init+0x70>
  {
    Error_Handler();
 800526c:	f000 fd10 	bl	8005c90 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_13;
 8005270:	230d      	movs	r3, #13
 8005272:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8005274:	2301      	movs	r3, #1
 8005276:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8005278:	2307      	movs	r3, #7
 800527a:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 800527c:	463b      	mov	r3, r7
 800527e:	4619      	mov	r1, r3
 8005280:	4805      	ldr	r0, [pc, #20]	; (8005298 <MX_ADC2_Init+0x98>)
 8005282:	f001 fd11 	bl	8006ca8 <HAL_ADC_ConfigChannel>
 8005286:	4603      	mov	r3, r0
 8005288:	2b00      	cmp	r3, #0
 800528a:	d001      	beq.n	8005290 <MX_ADC2_Init+0x90>
  {
    Error_Handler();
 800528c:	f000 fd00 	bl	8005c90 <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */

  /* USER CODE END ADC2_Init 2 */

}
 8005290:	bf00      	nop
 8005292:	3710      	adds	r7, #16
 8005294:	46bd      	mov	sp, r7
 8005296:	bd80      	pop	{r7, pc}
 8005298:	20000768 	.word	0x20000768
 800529c:	40012100 	.word	0x40012100
 80052a0:	0f000001 	.word	0x0f000001

080052a4 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 80052a4:	b580      	push	{r7, lr}
 80052a6:	b096      	sub	sp, #88	; 0x58
 80052a8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80052aa:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80052ae:	2200      	movs	r2, #0
 80052b0:	601a      	str	r2, [r3, #0]
 80052b2:	605a      	str	r2, [r3, #4]
 80052b4:	609a      	str	r2, [r3, #8]
 80052b6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80052b8:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80052bc:	2200      	movs	r2, #0
 80052be:	601a      	str	r2, [r3, #0]
 80052c0:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80052c2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80052c6:	2200      	movs	r2, #0
 80052c8:	601a      	str	r2, [r3, #0]
 80052ca:	605a      	str	r2, [r3, #4]
 80052cc:	609a      	str	r2, [r3, #8]
 80052ce:	60da      	str	r2, [r3, #12]
 80052d0:	611a      	str	r2, [r3, #16]
 80052d2:	615a      	str	r2, [r3, #20]
 80052d4:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 80052d6:	1d3b      	adds	r3, r7, #4
 80052d8:	2220      	movs	r2, #32
 80052da:	2100      	movs	r1, #0
 80052dc:	4618      	mov	r0, r3
 80052de:	f006 fff5 	bl	800c2cc <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 80052e2:	4b3e      	ldr	r3, [pc, #248]	; (80053dc <MX_TIM1_Init+0x138>)
 80052e4:	4a3e      	ldr	r2, [pc, #248]	; (80053e0 <MX_TIM1_Init+0x13c>)
 80052e6:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 360-1;
 80052e8:	4b3c      	ldr	r3, [pc, #240]	; (80053dc <MX_TIM1_Init+0x138>)
 80052ea:	f240 1267 	movw	r2, #359	; 0x167
 80052ee:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80052f0:	4b3a      	ldr	r3, [pc, #232]	; (80053dc <MX_TIM1_Init+0x138>)
 80052f2:	2200      	movs	r2, #0
 80052f4:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 10000-1;
 80052f6:	4b39      	ldr	r3, [pc, #228]	; (80053dc <MX_TIM1_Init+0x138>)
 80052f8:	f242 720f 	movw	r2, #9999	; 0x270f
 80052fc:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80052fe:	4b37      	ldr	r3, [pc, #220]	; (80053dc <MX_TIM1_Init+0x138>)
 8005300:	2200      	movs	r2, #0
 8005302:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8005304:	4b35      	ldr	r3, [pc, #212]	; (80053dc <MX_TIM1_Init+0x138>)
 8005306:	2200      	movs	r2, #0
 8005308:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800530a:	4b34      	ldr	r3, [pc, #208]	; (80053dc <MX_TIM1_Init+0x138>)
 800530c:	2280      	movs	r2, #128	; 0x80
 800530e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8005310:	4832      	ldr	r0, [pc, #200]	; (80053dc <MX_TIM1_Init+0x138>)
 8005312:	f004 f815 	bl	8009340 <HAL_TIM_Base_Init>
 8005316:	4603      	mov	r3, r0
 8005318:	2b00      	cmp	r3, #0
 800531a:	d001      	beq.n	8005320 <MX_TIM1_Init+0x7c>
  {
    Error_Handler();
 800531c:	f000 fcb8 	bl	8005c90 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8005320:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005324:	64bb      	str	r3, [r7, #72]	; 0x48
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8005326:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800532a:	4619      	mov	r1, r3
 800532c:	482b      	ldr	r0, [pc, #172]	; (80053dc <MX_TIM1_Init+0x138>)
 800532e:	f004 ff7f 	bl	800a230 <HAL_TIM_ConfigClockSource>
 8005332:	4603      	mov	r3, r0
 8005334:	2b00      	cmp	r3, #0
 8005336:	d001      	beq.n	800533c <MX_TIM1_Init+0x98>
  {
    Error_Handler();
 8005338:	f000 fcaa 	bl	8005c90 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 800533c:	4827      	ldr	r0, [pc, #156]	; (80053dc <MX_TIM1_Init+0x138>)
 800533e:	f004 f8b7 	bl	80094b0 <HAL_TIM_PWM_Init>
 8005342:	4603      	mov	r3, r0
 8005344:	2b00      	cmp	r3, #0
 8005346:	d001      	beq.n	800534c <MX_TIM1_Init+0xa8>
  {
    Error_Handler();
 8005348:	f000 fca2 	bl	8005c90 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800534c:	2300      	movs	r3, #0
 800534e:	643b      	str	r3, [r7, #64]	; 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8005350:	2300      	movs	r3, #0
 8005352:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8005354:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8005358:	4619      	mov	r1, r3
 800535a:	4820      	ldr	r0, [pc, #128]	; (80053dc <MX_TIM1_Init+0x138>)
 800535c:	f005 fd90 	bl	800ae80 <HAL_TIMEx_MasterConfigSynchronization>
 8005360:	4603      	mov	r3, r0
 8005362:	2b00      	cmp	r3, #0
 8005364:	d001      	beq.n	800536a <MX_TIM1_Init+0xc6>
  {
    Error_Handler();
 8005366:	f000 fc93 	bl	8005c90 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800536a:	2360      	movs	r3, #96	; 0x60
 800536c:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigOC.Pulse = 750-1;
 800536e:	f240 23ed 	movw	r3, #749	; 0x2ed
 8005372:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8005374:	2300      	movs	r3, #0
 8005376:	62fb      	str	r3, [r7, #44]	; 0x2c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8005378:	2300      	movs	r3, #0
 800537a:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 800537c:	2300      	movs	r3, #0
 800537e:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8005380:	2300      	movs	r3, #0
 8005382:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8005384:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005388:	220c      	movs	r2, #12
 800538a:	4619      	mov	r1, r3
 800538c:	4813      	ldr	r0, [pc, #76]	; (80053dc <MX_TIM1_Init+0x138>)
 800538e:	f004 fe8d 	bl	800a0ac <HAL_TIM_PWM_ConfigChannel>
 8005392:	4603      	mov	r3, r0
 8005394:	2b00      	cmp	r3, #0
 8005396:	d001      	beq.n	800539c <MX_TIM1_Init+0xf8>
  {
    Error_Handler();
 8005398:	f000 fc7a 	bl	8005c90 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 800539c:	2300      	movs	r3, #0
 800539e:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 80053a0:	2300      	movs	r3, #0
 80053a2:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 80053a4:	2300      	movs	r3, #0
 80053a6:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 80053a8:	2300      	movs	r3, #0
 80053aa:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 80053ac:	2300      	movs	r3, #0
 80053ae:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 80053b0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80053b4:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 80053b6:	2300      	movs	r3, #0
 80053b8:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 80053ba:	1d3b      	adds	r3, r7, #4
 80053bc:	4619      	mov	r1, r3
 80053be:	4807      	ldr	r0, [pc, #28]	; (80053dc <MX_TIM1_Init+0x138>)
 80053c0:	f005 fdda 	bl	800af78 <HAL_TIMEx_ConfigBreakDeadTime>
 80053c4:	4603      	mov	r3, r0
 80053c6:	2b00      	cmp	r3, #0
 80053c8:	d001      	beq.n	80053ce <MX_TIM1_Init+0x12a>
  {
    Error_Handler();
 80053ca:	f000 fc61 	bl	8005c90 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 80053ce:	4803      	ldr	r0, [pc, #12]	; (80053dc <MX_TIM1_Init+0x138>)
 80053d0:	f000 ff24 	bl	800621c <HAL_TIM_MspPostInit>

}
 80053d4:	bf00      	nop
 80053d6:	3758      	adds	r7, #88	; 0x58
 80053d8:	46bd      	mov	sp, r7
 80053da:	bd80      	pop	{r7, pc}
 80053dc:	200007b0 	.word	0x200007b0
 80053e0:	40010000 	.word	0x40010000

080053e4 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80053e4:	b580      	push	{r7, lr}
 80053e6:	b08e      	sub	sp, #56	; 0x38
 80053e8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80053ea:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80053ee:	2200      	movs	r2, #0
 80053f0:	601a      	str	r2, [r3, #0]
 80053f2:	605a      	str	r2, [r3, #4]
 80053f4:	609a      	str	r2, [r3, #8]
 80053f6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80053f8:	f107 0320 	add.w	r3, r7, #32
 80053fc:	2200      	movs	r2, #0
 80053fe:	601a      	str	r2, [r3, #0]
 8005400:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8005402:	1d3b      	adds	r3, r7, #4
 8005404:	2200      	movs	r2, #0
 8005406:	601a      	str	r2, [r3, #0]
 8005408:	605a      	str	r2, [r3, #4]
 800540a:	609a      	str	r2, [r3, #8]
 800540c:	60da      	str	r2, [r3, #12]
 800540e:	611a      	str	r2, [r3, #16]
 8005410:	615a      	str	r2, [r3, #20]
 8005412:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8005414:	4b2d      	ldr	r3, [pc, #180]	; (80054cc <MX_TIM2_Init+0xe8>)
 8005416:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800541a:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 90-1;
 800541c:	4b2b      	ldr	r3, [pc, #172]	; (80054cc <MX_TIM2_Init+0xe8>)
 800541e:	2259      	movs	r2, #89	; 0x59
 8005420:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8005422:	4b2a      	ldr	r3, [pc, #168]	; (80054cc <MX_TIM2_Init+0xe8>)
 8005424:	2200      	movs	r2, #0
 8005426:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 10000-1;
 8005428:	4b28      	ldr	r3, [pc, #160]	; (80054cc <MX_TIM2_Init+0xe8>)
 800542a:	f242 720f 	movw	r2, #9999	; 0x270f
 800542e:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8005430:	4b26      	ldr	r3, [pc, #152]	; (80054cc <MX_TIM2_Init+0xe8>)
 8005432:	2200      	movs	r2, #0
 8005434:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8005436:	4b25      	ldr	r3, [pc, #148]	; (80054cc <MX_TIM2_Init+0xe8>)
 8005438:	2280      	movs	r2, #128	; 0x80
 800543a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800543c:	4823      	ldr	r0, [pc, #140]	; (80054cc <MX_TIM2_Init+0xe8>)
 800543e:	f003 ff7f 	bl	8009340 <HAL_TIM_Base_Init>
 8005442:	4603      	mov	r3, r0
 8005444:	2b00      	cmp	r3, #0
 8005446:	d001      	beq.n	800544c <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 8005448:	f000 fc22 	bl	8005c90 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800544c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005450:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8005452:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8005456:	4619      	mov	r1, r3
 8005458:	481c      	ldr	r0, [pc, #112]	; (80054cc <MX_TIM2_Init+0xe8>)
 800545a:	f004 fee9 	bl	800a230 <HAL_TIM_ConfigClockSource>
 800545e:	4603      	mov	r3, r0
 8005460:	2b00      	cmp	r3, #0
 8005462:	d001      	beq.n	8005468 <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 8005464:	f000 fc14 	bl	8005c90 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8005468:	4818      	ldr	r0, [pc, #96]	; (80054cc <MX_TIM2_Init+0xe8>)
 800546a:	f004 f821 	bl	80094b0 <HAL_TIM_PWM_Init>
 800546e:	4603      	mov	r3, r0
 8005470:	2b00      	cmp	r3, #0
 8005472:	d001      	beq.n	8005478 <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 8005474:	f000 fc0c 	bl	8005c90 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8005478:	2300      	movs	r3, #0
 800547a:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800547c:	2300      	movs	r3, #0
 800547e:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8005480:	f107 0320 	add.w	r3, r7, #32
 8005484:	4619      	mov	r1, r3
 8005486:	4811      	ldr	r0, [pc, #68]	; (80054cc <MX_TIM2_Init+0xe8>)
 8005488:	f005 fcfa 	bl	800ae80 <HAL_TIMEx_MasterConfigSynchronization>
 800548c:	4603      	mov	r3, r0
 800548e:	2b00      	cmp	r3, #0
 8005490:	d001      	beq.n	8005496 <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 8005492:	f000 fbfd 	bl	8005c90 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8005496:	2360      	movs	r3, #96	; 0x60
 8005498:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 750-1;
 800549a:	f240 23ed 	movw	r3, #749	; 0x2ed
 800549e:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80054a0:	2300      	movs	r3, #0
 80054a2:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80054a4:	2300      	movs	r3, #0
 80054a6:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80054a8:	1d3b      	adds	r3, r7, #4
 80054aa:	2200      	movs	r2, #0
 80054ac:	4619      	mov	r1, r3
 80054ae:	4807      	ldr	r0, [pc, #28]	; (80054cc <MX_TIM2_Init+0xe8>)
 80054b0:	f004 fdfc 	bl	800a0ac <HAL_TIM_PWM_ConfigChannel>
 80054b4:	4603      	mov	r3, r0
 80054b6:	2b00      	cmp	r3, #0
 80054b8:	d001      	beq.n	80054be <MX_TIM2_Init+0xda>
  {
    Error_Handler();
 80054ba:	f000 fbe9 	bl	8005c90 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 80054be:	4803      	ldr	r0, [pc, #12]	; (80054cc <MX_TIM2_Init+0xe8>)
 80054c0:	f000 feac 	bl	800621c <HAL_TIM_MspPostInit>

}
 80054c4:	bf00      	nop
 80054c6:	3738      	adds	r7, #56	; 0x38
 80054c8:	46bd      	mov	sp, r7
 80054ca:	bd80      	pop	{r7, pc}
 80054cc:	200007f8 	.word	0x200007f8

080054d0 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 80054d0:	b580      	push	{r7, lr}
 80054d2:	b08e      	sub	sp, #56	; 0x38
 80054d4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80054d6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80054da:	2200      	movs	r2, #0
 80054dc:	601a      	str	r2, [r3, #0]
 80054de:	605a      	str	r2, [r3, #4]
 80054e0:	609a      	str	r2, [r3, #8]
 80054e2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80054e4:	f107 0320 	add.w	r3, r7, #32
 80054e8:	2200      	movs	r2, #0
 80054ea:	601a      	str	r2, [r3, #0]
 80054ec:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80054ee:	1d3b      	adds	r3, r7, #4
 80054f0:	2200      	movs	r2, #0
 80054f2:	601a      	str	r2, [r3, #0]
 80054f4:	605a      	str	r2, [r3, #4]
 80054f6:	609a      	str	r2, [r3, #8]
 80054f8:	60da      	str	r2, [r3, #12]
 80054fa:	611a      	str	r2, [r3, #16]
 80054fc:	615a      	str	r2, [r3, #20]
 80054fe:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8005500:	4b32      	ldr	r3, [pc, #200]	; (80055cc <MX_TIM3_Init+0xfc>)
 8005502:	4a33      	ldr	r2, [pc, #204]	; (80055d0 <MX_TIM3_Init+0x100>)
 8005504:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 2-1;
 8005506:	4b31      	ldr	r3, [pc, #196]	; (80055cc <MX_TIM3_Init+0xfc>)
 8005508:	2201      	movs	r2, #1
 800550a:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED3;
 800550c:	4b2f      	ldr	r3, [pc, #188]	; (80055cc <MX_TIM3_Init+0xfc>)
 800550e:	2260      	movs	r2, #96	; 0x60
 8005510:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 1000-1;
 8005512:	4b2e      	ldr	r3, [pc, #184]	; (80055cc <MX_TIM3_Init+0xfc>)
 8005514:	f240 32e7 	movw	r2, #999	; 0x3e7
 8005518:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800551a:	4b2c      	ldr	r3, [pc, #176]	; (80055cc <MX_TIM3_Init+0xfc>)
 800551c:	2200      	movs	r2, #0
 800551e:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8005520:	4b2a      	ldr	r3, [pc, #168]	; (80055cc <MX_TIM3_Init+0xfc>)
 8005522:	2200      	movs	r2, #0
 8005524:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8005526:	4829      	ldr	r0, [pc, #164]	; (80055cc <MX_TIM3_Init+0xfc>)
 8005528:	f003 ff0a 	bl	8009340 <HAL_TIM_Base_Init>
 800552c:	4603      	mov	r3, r0
 800552e:	2b00      	cmp	r3, #0
 8005530:	d001      	beq.n	8005536 <MX_TIM3_Init+0x66>
  {
    Error_Handler();
 8005532:	f000 fbad 	bl	8005c90 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8005536:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800553a:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 800553c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8005540:	4619      	mov	r1, r3
 8005542:	4822      	ldr	r0, [pc, #136]	; (80055cc <MX_TIM3_Init+0xfc>)
 8005544:	f004 fe74 	bl	800a230 <HAL_TIM_ConfigClockSource>
 8005548:	4603      	mov	r3, r0
 800554a:	2b00      	cmp	r3, #0
 800554c:	d001      	beq.n	8005552 <MX_TIM3_Init+0x82>
  {
    Error_Handler();
 800554e:	f000 fb9f 	bl	8005c90 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8005552:	481e      	ldr	r0, [pc, #120]	; (80055cc <MX_TIM3_Init+0xfc>)
 8005554:	f003 ffac 	bl	80094b0 <HAL_TIM_PWM_Init>
 8005558:	4603      	mov	r3, r0
 800555a:	2b00      	cmp	r3, #0
 800555c:	d001      	beq.n	8005562 <MX_TIM3_Init+0x92>
  {
    Error_Handler();
 800555e:	f000 fb97 	bl	8005c90 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8005562:	2300      	movs	r3, #0
 8005564:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8005566:	2300      	movs	r3, #0
 8005568:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800556a:	f107 0320 	add.w	r3, r7, #32
 800556e:	4619      	mov	r1, r3
 8005570:	4816      	ldr	r0, [pc, #88]	; (80055cc <MX_TIM3_Init+0xfc>)
 8005572:	f005 fc85 	bl	800ae80 <HAL_TIMEx_MasterConfigSynchronization>
 8005576:	4603      	mov	r3, r0
 8005578:	2b00      	cmp	r3, #0
 800557a:	d001      	beq.n	8005580 <MX_TIM3_Init+0xb0>
  {
    Error_Handler();
 800557c:	f000 fb88 	bl	8005c90 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8005580:	2360      	movs	r3, #96	; 0x60
 8005582:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8005584:	2300      	movs	r3, #0
 8005586:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8005588:	2300      	movs	r3, #0
 800558a:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800558c:	2300      	movs	r3, #0
 800558e:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8005590:	1d3b      	adds	r3, r7, #4
 8005592:	2200      	movs	r2, #0
 8005594:	4619      	mov	r1, r3
 8005596:	480d      	ldr	r0, [pc, #52]	; (80055cc <MX_TIM3_Init+0xfc>)
 8005598:	f004 fd88 	bl	800a0ac <HAL_TIM_PWM_ConfigChannel>
 800559c:	4603      	mov	r3, r0
 800559e:	2b00      	cmp	r3, #0
 80055a0:	d001      	beq.n	80055a6 <MX_TIM3_Init+0xd6>
  {
    Error_Handler();
 80055a2:	f000 fb75 	bl	8005c90 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80055a6:	1d3b      	adds	r3, r7, #4
 80055a8:	2204      	movs	r2, #4
 80055aa:	4619      	mov	r1, r3
 80055ac:	4807      	ldr	r0, [pc, #28]	; (80055cc <MX_TIM3_Init+0xfc>)
 80055ae:	f004 fd7d 	bl	800a0ac <HAL_TIM_PWM_ConfigChannel>
 80055b2:	4603      	mov	r3, r0
 80055b4:	2b00      	cmp	r3, #0
 80055b6:	d001      	beq.n	80055bc <MX_TIM3_Init+0xec>
  {
    Error_Handler();
 80055b8:	f000 fb6a 	bl	8005c90 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 80055bc:	4803      	ldr	r0, [pc, #12]	; (80055cc <MX_TIM3_Init+0xfc>)
 80055be:	f000 fe2d 	bl	800621c <HAL_TIM_MspPostInit>

}
 80055c2:	bf00      	nop
 80055c4:	3738      	adds	r7, #56	; 0x38
 80055c6:	46bd      	mov	sp, r7
 80055c8:	bd80      	pop	{r7, pc}
 80055ca:	bf00      	nop
 80055cc:	20000840 	.word	0x20000840
 80055d0:	40000400 	.word	0x40000400

080055d4 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 80055d4:	b580      	push	{r7, lr}
 80055d6:	b08a      	sub	sp, #40	; 0x28
 80055d8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80055da:	f107 0318 	add.w	r3, r7, #24
 80055de:	2200      	movs	r2, #0
 80055e0:	601a      	str	r2, [r3, #0]
 80055e2:	605a      	str	r2, [r3, #4]
 80055e4:	609a      	str	r2, [r3, #8]
 80055e6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80055e8:	f107 0310 	add.w	r3, r7, #16
 80055ec:	2200      	movs	r2, #0
 80055ee:	601a      	str	r2, [r3, #0]
 80055f0:	605a      	str	r2, [r3, #4]
  TIM_IC_InitTypeDef sConfigIC = {0};
 80055f2:	463b      	mov	r3, r7
 80055f4:	2200      	movs	r2, #0
 80055f6:	601a      	str	r2, [r3, #0]
 80055f8:	605a      	str	r2, [r3, #4]
 80055fa:	609a      	str	r2, [r3, #8]
 80055fc:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 80055fe:	4b31      	ldr	r3, [pc, #196]	; (80056c4 <MX_TIM4_Init+0xf0>)
 8005600:	4a31      	ldr	r2, [pc, #196]	; (80056c8 <MX_TIM4_Init+0xf4>)
 8005602:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 800-1;
 8005604:	4b2f      	ldr	r3, [pc, #188]	; (80056c4 <MX_TIM4_Init+0xf0>)
 8005606:	f240 321f 	movw	r2, #799	; 0x31f
 800560a:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 800560c:	4b2d      	ldr	r3, [pc, #180]	; (80056c4 <MX_TIM4_Init+0xf0>)
 800560e:	2200      	movs	r2, #0
 8005610:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65536-1;
 8005612:	4b2c      	ldr	r3, [pc, #176]	; (80056c4 <MX_TIM4_Init+0xf0>)
 8005614:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005618:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800561a:	4b2a      	ldr	r3, [pc, #168]	; (80056c4 <MX_TIM4_Init+0xf0>)
 800561c:	2200      	movs	r2, #0
 800561e:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8005620:	4b28      	ldr	r3, [pc, #160]	; (80056c4 <MX_TIM4_Init+0xf0>)
 8005622:	2280      	movs	r2, #128	; 0x80
 8005624:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8005626:	4827      	ldr	r0, [pc, #156]	; (80056c4 <MX_TIM4_Init+0xf0>)
 8005628:	f003 fe8a 	bl	8009340 <HAL_TIM_Base_Init>
 800562c:	4603      	mov	r3, r0
 800562e:	2b00      	cmp	r3, #0
 8005630:	d001      	beq.n	8005636 <MX_TIM4_Init+0x62>
  {
    Error_Handler();
 8005632:	f000 fb2d 	bl	8005c90 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8005636:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800563a:	61bb      	str	r3, [r7, #24]
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 800563c:	f107 0318 	add.w	r3, r7, #24
 8005640:	4619      	mov	r1, r3
 8005642:	4820      	ldr	r0, [pc, #128]	; (80056c4 <MX_TIM4_Init+0xf0>)
 8005644:	f004 fdf4 	bl	800a230 <HAL_TIM_ConfigClockSource>
 8005648:	4603      	mov	r3, r0
 800564a:	2b00      	cmp	r3, #0
 800564c:	d001      	beq.n	8005652 <MX_TIM4_Init+0x7e>
  {
    Error_Handler();
 800564e:	f000 fb1f 	bl	8005c90 <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim4) != HAL_OK)
 8005652:	481c      	ldr	r0, [pc, #112]	; (80056c4 <MX_TIM4_Init+0xf0>)
 8005654:	f004 f84e 	bl	80096f4 <HAL_TIM_IC_Init>
 8005658:	4603      	mov	r3, r0
 800565a:	2b00      	cmp	r3, #0
 800565c:	d001      	beq.n	8005662 <MX_TIM4_Init+0x8e>
  {
    Error_Handler();
 800565e:	f000 fb17 	bl	8005c90 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8005662:	2300      	movs	r3, #0
 8005664:	613b      	str	r3, [r7, #16]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8005666:	2300      	movs	r3, #0
 8005668:	617b      	str	r3, [r7, #20]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 800566a:	f107 0310 	add.w	r3, r7, #16
 800566e:	4619      	mov	r1, r3
 8005670:	4814      	ldr	r0, [pc, #80]	; (80056c4 <MX_TIM4_Init+0xf0>)
 8005672:	f005 fc05 	bl	800ae80 <HAL_TIMEx_MasterConfigSynchronization>
 8005676:	4603      	mov	r3, r0
 8005678:	2b00      	cmp	r3, #0
 800567a:	d001      	beq.n	8005680 <MX_TIM4_Init+0xac>
  {
    Error_Handler();
 800567c:	f000 fb08 	bl	8005c90 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_BOTHEDGE;
 8005680:	230a      	movs	r3, #10
 8005682:	603b      	str	r3, [r7, #0]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 8005684:	2301      	movs	r3, #1
 8005686:	607b      	str	r3, [r7, #4]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 8005688:	2300      	movs	r3, #0
 800568a:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICFilter = 0;
 800568c:	2300      	movs	r3, #0
 800568e:	60fb      	str	r3, [r7, #12]
  if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_3) != HAL_OK)
 8005690:	463b      	mov	r3, r7
 8005692:	2208      	movs	r2, #8
 8005694:	4619      	mov	r1, r3
 8005696:	480b      	ldr	r0, [pc, #44]	; (80056c4 <MX_TIM4_Init+0xf0>)
 8005698:	f004 fc6c 	bl	8009f74 <HAL_TIM_IC_ConfigChannel>
 800569c:	4603      	mov	r3, r0
 800569e:	2b00      	cmp	r3, #0
 80056a0:	d001      	beq.n	80056a6 <MX_TIM4_Init+0xd2>
  {
    Error_Handler();
 80056a2:	f000 faf5 	bl	8005c90 <Error_Handler>
  }
  if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_4) != HAL_OK)
 80056a6:	463b      	mov	r3, r7
 80056a8:	220c      	movs	r2, #12
 80056aa:	4619      	mov	r1, r3
 80056ac:	4805      	ldr	r0, [pc, #20]	; (80056c4 <MX_TIM4_Init+0xf0>)
 80056ae:	f004 fc61 	bl	8009f74 <HAL_TIM_IC_ConfigChannel>
 80056b2:	4603      	mov	r3, r0
 80056b4:	2b00      	cmp	r3, #0
 80056b6:	d001      	beq.n	80056bc <MX_TIM4_Init+0xe8>
  {
    Error_Handler();
 80056b8:	f000 faea 	bl	8005c90 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 80056bc:	bf00      	nop
 80056be:	3728      	adds	r7, #40	; 0x28
 80056c0:	46bd      	mov	sp, r7
 80056c2:	bd80      	pop	{r7, pc}
 80056c4:	20000888 	.word	0x20000888
 80056c8:	40000800 	.word	0x40000800

080056cc <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 80056cc:	b580      	push	{r7, lr}
 80056ce:	b086      	sub	sp, #24
 80056d0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80056d2:	f107 0308 	add.w	r3, r7, #8
 80056d6:	2200      	movs	r2, #0
 80056d8:	601a      	str	r2, [r3, #0]
 80056da:	605a      	str	r2, [r3, #4]
 80056dc:	609a      	str	r2, [r3, #8]
 80056de:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80056e0:	463b      	mov	r3, r7
 80056e2:	2200      	movs	r2, #0
 80056e4:	601a      	str	r2, [r3, #0]
 80056e6:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 80056e8:	4b1d      	ldr	r3, [pc, #116]	; (8005760 <MX_TIM5_Init+0x94>)
 80056ea:	4a1e      	ldr	r2, [pc, #120]	; (8005764 <MX_TIM5_Init+0x98>)
 80056ec:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 45000-1;
 80056ee:	4b1c      	ldr	r3, [pc, #112]	; (8005760 <MX_TIM5_Init+0x94>)
 80056f0:	f64a 72c7 	movw	r2, #44999	; 0xafc7
 80056f4:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 80056f6:	4b1a      	ldr	r3, [pc, #104]	; (8005760 <MX_TIM5_Init+0x94>)
 80056f8:	2200      	movs	r2, #0
 80056fa:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 80056fc:	4b18      	ldr	r3, [pc, #96]	; (8005760 <MX_TIM5_Init+0x94>)
 80056fe:	f04f 32ff 	mov.w	r2, #4294967295
 8005702:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8005704:	4b16      	ldr	r3, [pc, #88]	; (8005760 <MX_TIM5_Init+0x94>)
 8005706:	2200      	movs	r2, #0
 8005708:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800570a:	4b15      	ldr	r3, [pc, #84]	; (8005760 <MX_TIM5_Init+0x94>)
 800570c:	2280      	movs	r2, #128	; 0x80
 800570e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 8005710:	4813      	ldr	r0, [pc, #76]	; (8005760 <MX_TIM5_Init+0x94>)
 8005712:	f003 fe15 	bl	8009340 <HAL_TIM_Base_Init>
 8005716:	4603      	mov	r3, r0
 8005718:	2b00      	cmp	r3, #0
 800571a:	d001      	beq.n	8005720 <MX_TIM5_Init+0x54>
  {
    Error_Handler();
 800571c:	f000 fab8 	bl	8005c90 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8005720:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005724:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 8005726:	f107 0308 	add.w	r3, r7, #8
 800572a:	4619      	mov	r1, r3
 800572c:	480c      	ldr	r0, [pc, #48]	; (8005760 <MX_TIM5_Init+0x94>)
 800572e:	f004 fd7f 	bl	800a230 <HAL_TIM_ConfigClockSource>
 8005732:	4603      	mov	r3, r0
 8005734:	2b00      	cmp	r3, #0
 8005736:	d001      	beq.n	800573c <MX_TIM5_Init+0x70>
  {
    Error_Handler();
 8005738:	f000 faaa 	bl	8005c90 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800573c:	2300      	movs	r3, #0
 800573e:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8005740:	2300      	movs	r3, #0
 8005742:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8005744:	463b      	mov	r3, r7
 8005746:	4619      	mov	r1, r3
 8005748:	4805      	ldr	r0, [pc, #20]	; (8005760 <MX_TIM5_Init+0x94>)
 800574a:	f005 fb99 	bl	800ae80 <HAL_TIMEx_MasterConfigSynchronization>
 800574e:	4603      	mov	r3, r0
 8005750:	2b00      	cmp	r3, #0
 8005752:	d001      	beq.n	8005758 <MX_TIM5_Init+0x8c>
  {
    Error_Handler();
 8005754:	f000 fa9c 	bl	8005c90 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 8005758:	bf00      	nop
 800575a:	3718      	adds	r7, #24
 800575c:	46bd      	mov	sp, r7
 800575e:	bd80      	pop	{r7, pc}
 8005760:	200008d0 	.word	0x200008d0
 8005764:	40000c00 	.word	0x40000c00

08005768 <MX_TIM8_Init>:
  * @brief TIM8 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM8_Init(void)
{
 8005768:	b580      	push	{r7, lr}
 800576a:	b08c      	sub	sp, #48	; 0x30
 800576c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM8_Init 0 */

  /* USER CODE END TIM8_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 800576e:	f107 030c 	add.w	r3, r7, #12
 8005772:	2224      	movs	r2, #36	; 0x24
 8005774:	2100      	movs	r1, #0
 8005776:	4618      	mov	r0, r3
 8005778:	f006 fda8 	bl	800c2cc <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800577c:	1d3b      	adds	r3, r7, #4
 800577e:	2200      	movs	r2, #0
 8005780:	601a      	str	r2, [r3, #0]
 8005782:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM8_Init 1 */

  /* USER CODE END TIM8_Init 1 */
  htim8.Instance = TIM8;
 8005784:	4b22      	ldr	r3, [pc, #136]	; (8005810 <MX_TIM8_Init+0xa8>)
 8005786:	4a23      	ldr	r2, [pc, #140]	; (8005814 <MX_TIM8_Init+0xac>)
 8005788:	601a      	str	r2, [r3, #0]
  htim8.Init.Prescaler = 0;
 800578a:	4b21      	ldr	r3, [pc, #132]	; (8005810 <MX_TIM8_Init+0xa8>)
 800578c:	2200      	movs	r2, #0
 800578e:	605a      	str	r2, [r3, #4]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8005790:	4b1f      	ldr	r3, [pc, #124]	; (8005810 <MX_TIM8_Init+0xa8>)
 8005792:	2200      	movs	r2, #0
 8005794:	609a      	str	r2, [r3, #8]
  htim8.Init.Period = 65535;
 8005796:	4b1e      	ldr	r3, [pc, #120]	; (8005810 <MX_TIM8_Init+0xa8>)
 8005798:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800579c:	60da      	str	r2, [r3, #12]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800579e:	4b1c      	ldr	r3, [pc, #112]	; (8005810 <MX_TIM8_Init+0xa8>)
 80057a0:	2200      	movs	r2, #0
 80057a2:	611a      	str	r2, [r3, #16]
  htim8.Init.RepetitionCounter = 0;
 80057a4:	4b1a      	ldr	r3, [pc, #104]	; (8005810 <MX_TIM8_Init+0xa8>)
 80057a6:	2200      	movs	r2, #0
 80057a8:	615a      	str	r2, [r3, #20]
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80057aa:	4b19      	ldr	r3, [pc, #100]	; (8005810 <MX_TIM8_Init+0xa8>)
 80057ac:	2280      	movs	r2, #128	; 0x80
 80057ae:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 80057b0:	2303      	movs	r3, #3
 80057b2:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 80057b4:	2300      	movs	r3, #0
 80057b6:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 80057b8:	2301      	movs	r3, #1
 80057ba:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 80057bc:	2300      	movs	r3, #0
 80057be:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 12;
 80057c0:	230c      	movs	r3, #12
 80057c2:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 80057c4:	2300      	movs	r3, #0
 80057c6:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 80057c8:	2301      	movs	r3, #1
 80057ca:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 80057cc:	2300      	movs	r3, #0
 80057ce:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 12;
 80057d0:	230c      	movs	r3, #12
 80057d2:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim8, &sConfig) != HAL_OK)
 80057d4:	f107 030c 	add.w	r3, r7, #12
 80057d8:	4619      	mov	r1, r3
 80057da:	480d      	ldr	r0, [pc, #52]	; (8005810 <MX_TIM8_Init+0xa8>)
 80057dc:	f004 f98e 	bl	8009afc <HAL_TIM_Encoder_Init>
 80057e0:	4603      	mov	r3, r0
 80057e2:	2b00      	cmp	r3, #0
 80057e4:	d001      	beq.n	80057ea <MX_TIM8_Init+0x82>
  {
    Error_Handler();
 80057e6:	f000 fa53 	bl	8005c90 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80057ea:	2300      	movs	r3, #0
 80057ec:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80057ee:	2300      	movs	r3, #0
 80057f0:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 80057f2:	1d3b      	adds	r3, r7, #4
 80057f4:	4619      	mov	r1, r3
 80057f6:	4806      	ldr	r0, [pc, #24]	; (8005810 <MX_TIM8_Init+0xa8>)
 80057f8:	f005 fb42 	bl	800ae80 <HAL_TIMEx_MasterConfigSynchronization>
 80057fc:	4603      	mov	r3, r0
 80057fe:	2b00      	cmp	r3, #0
 8005800:	d001      	beq.n	8005806 <MX_TIM8_Init+0x9e>
  {
    Error_Handler();
 8005802:	f000 fa45 	bl	8005c90 <Error_Handler>
  }
  /* USER CODE BEGIN TIM8_Init 2 */

  /* USER CODE END TIM8_Init 2 */

}
 8005806:	bf00      	nop
 8005808:	3730      	adds	r7, #48	; 0x30
 800580a:	46bd      	mov	sp, r7
 800580c:	bd80      	pop	{r7, pc}
 800580e:	bf00      	nop
 8005810:	20000918 	.word	0x20000918
 8005814:	40010400 	.word	0x40010400

08005818 <MX_TIM13_Init>:
  * @brief TIM13 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM13_Init(void)
{
 8005818:	b580      	push	{r7, lr}
 800581a:	af00      	add	r7, sp, #0
  /* USER CODE END TIM13_Init 0 */

  /* USER CODE BEGIN TIM13_Init 1 */

  /* USER CODE END TIM13_Init 1 */
  htim13.Instance = TIM13;
 800581c:	4b0e      	ldr	r3, [pc, #56]	; (8005858 <MX_TIM13_Init+0x40>)
 800581e:	4a0f      	ldr	r2, [pc, #60]	; (800585c <MX_TIM13_Init+0x44>)
 8005820:	601a      	str	r2, [r3, #0]
  htim13.Init.Prescaler = 45000-1;
 8005822:	4b0d      	ldr	r3, [pc, #52]	; (8005858 <MX_TIM13_Init+0x40>)
 8005824:	f64a 72c7 	movw	r2, #44999	; 0xafc7
 8005828:	605a      	str	r2, [r3, #4]
  htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 800582a:	4b0b      	ldr	r3, [pc, #44]	; (8005858 <MX_TIM13_Init+0x40>)
 800582c:	2200      	movs	r2, #0
 800582e:	609a      	str	r2, [r3, #8]
  htim13.Init.Period = 65535;
 8005830:	4b09      	ldr	r3, [pc, #36]	; (8005858 <MX_TIM13_Init+0x40>)
 8005832:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005836:	60da      	str	r2, [r3, #12]
  htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8005838:	4b07      	ldr	r3, [pc, #28]	; (8005858 <MX_TIM13_Init+0x40>)
 800583a:	2200      	movs	r2, #0
 800583c:	611a      	str	r2, [r3, #16]
  htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800583e:	4b06      	ldr	r3, [pc, #24]	; (8005858 <MX_TIM13_Init+0x40>)
 8005840:	2280      	movs	r2, #128	; 0x80
 8005842:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 8005844:	4804      	ldr	r0, [pc, #16]	; (8005858 <MX_TIM13_Init+0x40>)
 8005846:	f003 fd7b 	bl	8009340 <HAL_TIM_Base_Init>
 800584a:	4603      	mov	r3, r0
 800584c:	2b00      	cmp	r3, #0
 800584e:	d001      	beq.n	8005854 <MX_TIM13_Init+0x3c>
  {
    Error_Handler();
 8005850:	f000 fa1e 	bl	8005c90 <Error_Handler>
  }
  /* USER CODE BEGIN TIM13_Init 2 */

  /* USER CODE END TIM13_Init 2 */

}
 8005854:	bf00      	nop
 8005856:	bd80      	pop	{r7, pc}
 8005858:	20000960 	.word	0x20000960
 800585c:	40001c00 	.word	0x40001c00

08005860 <MX_TIM14_Init>:
  * @brief TIM14 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM14_Init(void)
{
 8005860:	b580      	push	{r7, lr}
 8005862:	af00      	add	r7, sp, #0
  /* USER CODE END TIM14_Init 0 */

  /* USER CODE BEGIN TIM14_Init 1 */

  /* USER CODE END TIM14_Init 1 */
  htim14.Instance = TIM14;
 8005864:	4b0e      	ldr	r3, [pc, #56]	; (80058a0 <MX_TIM14_Init+0x40>)
 8005866:	4a0f      	ldr	r2, [pc, #60]	; (80058a4 <MX_TIM14_Init+0x44>)
 8005868:	601a      	str	r2, [r3, #0]
  htim14.Init.Prescaler = 0;
 800586a:	4b0d      	ldr	r3, [pc, #52]	; (80058a0 <MX_TIM14_Init+0x40>)
 800586c:	2200      	movs	r2, #0
 800586e:	605a      	str	r2, [r3, #4]
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8005870:	4b0b      	ldr	r3, [pc, #44]	; (80058a0 <MX_TIM14_Init+0x40>)
 8005872:	2200      	movs	r2, #0
 8005874:	609a      	str	r2, [r3, #8]
  htim14.Init.Period = 1000;
 8005876:	4b0a      	ldr	r3, [pc, #40]	; (80058a0 <MX_TIM14_Init+0x40>)
 8005878:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800587c:	60da      	str	r2, [r3, #12]
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800587e:	4b08      	ldr	r3, [pc, #32]	; (80058a0 <MX_TIM14_Init+0x40>)
 8005880:	2200      	movs	r2, #0
 8005882:	611a      	str	r2, [r3, #16]
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8005884:	4b06      	ldr	r3, [pc, #24]	; (80058a0 <MX_TIM14_Init+0x40>)
 8005886:	2280      	movs	r2, #128	; 0x80
 8005888:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 800588a:	4805      	ldr	r0, [pc, #20]	; (80058a0 <MX_TIM14_Init+0x40>)
 800588c:	f003 fd58 	bl	8009340 <HAL_TIM_Base_Init>
 8005890:	4603      	mov	r3, r0
 8005892:	2b00      	cmp	r3, #0
 8005894:	d001      	beq.n	800589a <MX_TIM14_Init+0x3a>
  {
    Error_Handler();
 8005896:	f000 f9fb 	bl	8005c90 <Error_Handler>
  }
  /* USER CODE BEGIN TIM14_Init 2 */

  /* USER CODE END TIM14_Init 2 */

}
 800589a:	bf00      	nop
 800589c:	bd80      	pop	{r7, pc}
 800589e:	bf00      	nop
 80058a0:	200009a8 	.word	0x200009a8
 80058a4:	40002000 	.word	0x40002000

080058a8 <MX_UART5_Init>:
  * @brief UART5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART5_Init(void)
{
 80058a8:	b580      	push	{r7, lr}
 80058aa:	af00      	add	r7, sp, #0
  /* USER CODE END UART5_Init 0 */

  /* USER CODE BEGIN UART5_Init 1 */

  /* USER CODE END UART5_Init 1 */
  huart5.Instance = UART5;
 80058ac:	4b11      	ldr	r3, [pc, #68]	; (80058f4 <MX_UART5_Init+0x4c>)
 80058ae:	4a12      	ldr	r2, [pc, #72]	; (80058f8 <MX_UART5_Init+0x50>)
 80058b0:	601a      	str	r2, [r3, #0]
  huart5.Init.BaudRate = 460800;
 80058b2:	4b10      	ldr	r3, [pc, #64]	; (80058f4 <MX_UART5_Init+0x4c>)
 80058b4:	f44f 22e1 	mov.w	r2, #460800	; 0x70800
 80058b8:	605a      	str	r2, [r3, #4]
  huart5.Init.WordLength = UART_WORDLENGTH_8B;
 80058ba:	4b0e      	ldr	r3, [pc, #56]	; (80058f4 <MX_UART5_Init+0x4c>)
 80058bc:	2200      	movs	r2, #0
 80058be:	609a      	str	r2, [r3, #8]
  huart5.Init.StopBits = UART_STOPBITS_1;
 80058c0:	4b0c      	ldr	r3, [pc, #48]	; (80058f4 <MX_UART5_Init+0x4c>)
 80058c2:	2200      	movs	r2, #0
 80058c4:	60da      	str	r2, [r3, #12]
  huart5.Init.Parity = UART_PARITY_NONE;
 80058c6:	4b0b      	ldr	r3, [pc, #44]	; (80058f4 <MX_UART5_Init+0x4c>)
 80058c8:	2200      	movs	r2, #0
 80058ca:	611a      	str	r2, [r3, #16]
  huart5.Init.Mode = UART_MODE_TX_RX;
 80058cc:	4b09      	ldr	r3, [pc, #36]	; (80058f4 <MX_UART5_Init+0x4c>)
 80058ce:	220c      	movs	r2, #12
 80058d0:	615a      	str	r2, [r3, #20]
  huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80058d2:	4b08      	ldr	r3, [pc, #32]	; (80058f4 <MX_UART5_Init+0x4c>)
 80058d4:	2200      	movs	r2, #0
 80058d6:	619a      	str	r2, [r3, #24]
  huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 80058d8:	4b06      	ldr	r3, [pc, #24]	; (80058f4 <MX_UART5_Init+0x4c>)
 80058da:	2200      	movs	r2, #0
 80058dc:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart5) != HAL_OK)
 80058de:	4805      	ldr	r0, [pc, #20]	; (80058f4 <MX_UART5_Init+0x4c>)
 80058e0:	f005 fbb0 	bl	800b044 <HAL_UART_Init>
 80058e4:	4603      	mov	r3, r0
 80058e6:	2b00      	cmp	r3, #0
 80058e8:	d001      	beq.n	80058ee <MX_UART5_Init+0x46>
  {
    Error_Handler();
 80058ea:	f000 f9d1 	bl	8005c90 <Error_Handler>
  }
  /* USER CODE BEGIN UART5_Init 2 */

  /* USER CODE END UART5_Init 2 */

}
 80058ee:	bf00      	nop
 80058f0:	bd80      	pop	{r7, pc}
 80058f2:	bf00      	nop
 80058f4:	20000a50 	.word	0x20000a50
 80058f8:	40005000 	.word	0x40005000

080058fc <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80058fc:	b580      	push	{r7, lr}
 80058fe:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8005900:	4b11      	ldr	r3, [pc, #68]	; (8005948 <MX_USART1_UART_Init+0x4c>)
 8005902:	4a12      	ldr	r2, [pc, #72]	; (800594c <MX_USART1_UART_Init+0x50>)
 8005904:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8005906:	4b10      	ldr	r3, [pc, #64]	; (8005948 <MX_USART1_UART_Init+0x4c>)
 8005908:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 800590c:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800590e:	4b0e      	ldr	r3, [pc, #56]	; (8005948 <MX_USART1_UART_Init+0x4c>)
 8005910:	2200      	movs	r2, #0
 8005912:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8005914:	4b0c      	ldr	r3, [pc, #48]	; (8005948 <MX_USART1_UART_Init+0x4c>)
 8005916:	2200      	movs	r2, #0
 8005918:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800591a:	4b0b      	ldr	r3, [pc, #44]	; (8005948 <MX_USART1_UART_Init+0x4c>)
 800591c:	2200      	movs	r2, #0
 800591e:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8005920:	4b09      	ldr	r3, [pc, #36]	; (8005948 <MX_USART1_UART_Init+0x4c>)
 8005922:	220c      	movs	r2, #12
 8005924:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8005926:	4b08      	ldr	r3, [pc, #32]	; (8005948 <MX_USART1_UART_Init+0x4c>)
 8005928:	2200      	movs	r2, #0
 800592a:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 800592c:	4b06      	ldr	r3, [pc, #24]	; (8005948 <MX_USART1_UART_Init+0x4c>)
 800592e:	2200      	movs	r2, #0
 8005930:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8005932:	4805      	ldr	r0, [pc, #20]	; (8005948 <MX_USART1_UART_Init+0x4c>)
 8005934:	f005 fb86 	bl	800b044 <HAL_UART_Init>
 8005938:	4603      	mov	r3, r0
 800593a:	2b00      	cmp	r3, #0
 800593c:	d001      	beq.n	8005942 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 800593e:	f000 f9a7 	bl	8005c90 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8005942:	bf00      	nop
 8005944:	bd80      	pop	{r7, pc}
 8005946:	bf00      	nop
 8005948:	20000a94 	.word	0x20000a94
 800594c:	40011000 	.word	0x40011000

08005950 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8005950:	b580      	push	{r7, lr}
 8005952:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8005954:	4b11      	ldr	r3, [pc, #68]	; (800599c <MX_USART2_UART_Init+0x4c>)
 8005956:	4a12      	ldr	r2, [pc, #72]	; (80059a0 <MX_USART2_UART_Init+0x50>)
 8005958:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 800595a:	4b10      	ldr	r3, [pc, #64]	; (800599c <MX_USART2_UART_Init+0x4c>)
 800595c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8005960:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8005962:	4b0e      	ldr	r3, [pc, #56]	; (800599c <MX_USART2_UART_Init+0x4c>)
 8005964:	2200      	movs	r2, #0
 8005966:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8005968:	4b0c      	ldr	r3, [pc, #48]	; (800599c <MX_USART2_UART_Init+0x4c>)
 800596a:	2200      	movs	r2, #0
 800596c:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800596e:	4b0b      	ldr	r3, [pc, #44]	; (800599c <MX_USART2_UART_Init+0x4c>)
 8005970:	2200      	movs	r2, #0
 8005972:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8005974:	4b09      	ldr	r3, [pc, #36]	; (800599c <MX_USART2_UART_Init+0x4c>)
 8005976:	220c      	movs	r2, #12
 8005978:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800597a:	4b08      	ldr	r3, [pc, #32]	; (800599c <MX_USART2_UART_Init+0x4c>)
 800597c:	2200      	movs	r2, #0
 800597e:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8005980:	4b06      	ldr	r3, [pc, #24]	; (800599c <MX_USART2_UART_Init+0x4c>)
 8005982:	2200      	movs	r2, #0
 8005984:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8005986:	4805      	ldr	r0, [pc, #20]	; (800599c <MX_USART2_UART_Init+0x4c>)
 8005988:	f005 fb5c 	bl	800b044 <HAL_UART_Init>
 800598c:	4603      	mov	r3, r0
 800598e:	2b00      	cmp	r3, #0
 8005990:	d001      	beq.n	8005996 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8005992:	f000 f97d 	bl	8005c90 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8005996:	bf00      	nop
 8005998:	bd80      	pop	{r7, pc}
 800599a:	bf00      	nop
 800599c:	20000ad8 	.word	0x20000ad8
 80059a0:	40004400 	.word	0x40004400

080059a4 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 80059a4:	b580      	push	{r7, lr}
 80059a6:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 80059a8:	4b11      	ldr	r3, [pc, #68]	; (80059f0 <MX_USART3_UART_Init+0x4c>)
 80059aa:	4a12      	ldr	r2, [pc, #72]	; (80059f4 <MX_USART3_UART_Init+0x50>)
 80059ac:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 80059ae:	4b10      	ldr	r3, [pc, #64]	; (80059f0 <MX_USART3_UART_Init+0x4c>)
 80059b0:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80059b4:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 80059b6:	4b0e      	ldr	r3, [pc, #56]	; (80059f0 <MX_USART3_UART_Init+0x4c>)
 80059b8:	2200      	movs	r2, #0
 80059ba:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 80059bc:	4b0c      	ldr	r3, [pc, #48]	; (80059f0 <MX_USART3_UART_Init+0x4c>)
 80059be:	2200      	movs	r2, #0
 80059c0:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 80059c2:	4b0b      	ldr	r3, [pc, #44]	; (80059f0 <MX_USART3_UART_Init+0x4c>)
 80059c4:	2200      	movs	r2, #0
 80059c6:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 80059c8:	4b09      	ldr	r3, [pc, #36]	; (80059f0 <MX_USART3_UART_Init+0x4c>)
 80059ca:	220c      	movs	r2, #12
 80059cc:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80059ce:	4b08      	ldr	r3, [pc, #32]	; (80059f0 <MX_USART3_UART_Init+0x4c>)
 80059d0:	2200      	movs	r2, #0
 80059d2:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 80059d4:	4b06      	ldr	r3, [pc, #24]	; (80059f0 <MX_USART3_UART_Init+0x4c>)
 80059d6:	2200      	movs	r2, #0
 80059d8:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 80059da:	4805      	ldr	r0, [pc, #20]	; (80059f0 <MX_USART3_UART_Init+0x4c>)
 80059dc:	f005 fb32 	bl	800b044 <HAL_UART_Init>
 80059e0:	4603      	mov	r3, r0
 80059e2:	2b00      	cmp	r3, #0
 80059e4:	d001      	beq.n	80059ea <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 80059e6:	f000 f953 	bl	8005c90 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 80059ea:	bf00      	nop
 80059ec:	bd80      	pop	{r7, pc}
 80059ee:	bf00      	nop
 80059f0:	20000b1c 	.word	0x20000b1c
 80059f4:	40004800 	.word	0x40004800

080059f8 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80059f8:	b580      	push	{r7, lr}
 80059fa:	b082      	sub	sp, #8
 80059fc:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80059fe:	2300      	movs	r3, #0
 8005a00:	607b      	str	r3, [r7, #4]
 8005a02:	4b0c      	ldr	r3, [pc, #48]	; (8005a34 <MX_DMA_Init+0x3c>)
 8005a04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a06:	4a0b      	ldr	r2, [pc, #44]	; (8005a34 <MX_DMA_Init+0x3c>)
 8005a08:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8005a0c:	6313      	str	r3, [r2, #48]	; 0x30
 8005a0e:	4b09      	ldr	r3, [pc, #36]	; (8005a34 <MX_DMA_Init+0x3c>)
 8005a10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a12:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005a16:	607b      	str	r3, [r7, #4]
 8005a18:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream7_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream7_IRQn, 0, 0);
 8005a1a:	2200      	movs	r2, #0
 8005a1c:	2100      	movs	r1, #0
 8005a1e:	202f      	movs	r0, #47	; 0x2f
 8005a20:	f001 fe09 	bl	8007636 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 8005a24:	202f      	movs	r0, #47	; 0x2f
 8005a26:	f001 fe22 	bl	800766e <HAL_NVIC_EnableIRQ>

}
 8005a2a:	bf00      	nop
 8005a2c:	3708      	adds	r7, #8
 8005a2e:	46bd      	mov	sp, r7
 8005a30:	bd80      	pop	{r7, pc}
 8005a32:	bf00      	nop
 8005a34:	40023800 	.word	0x40023800

08005a38 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8005a38:	b580      	push	{r7, lr}
 8005a3a:	b08a      	sub	sp, #40	; 0x28
 8005a3c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8005a3e:	f107 0314 	add.w	r3, r7, #20
 8005a42:	2200      	movs	r2, #0
 8005a44:	601a      	str	r2, [r3, #0]
 8005a46:	605a      	str	r2, [r3, #4]
 8005a48:	609a      	str	r2, [r3, #8]
 8005a4a:	60da      	str	r2, [r3, #12]
 8005a4c:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8005a4e:	2300      	movs	r3, #0
 8005a50:	613b      	str	r3, [r7, #16]
 8005a52:	4b64      	ldr	r3, [pc, #400]	; (8005be4 <MX_GPIO_Init+0x1ac>)
 8005a54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a56:	4a63      	ldr	r2, [pc, #396]	; (8005be4 <MX_GPIO_Init+0x1ac>)
 8005a58:	f043 0304 	orr.w	r3, r3, #4
 8005a5c:	6313      	str	r3, [r2, #48]	; 0x30
 8005a5e:	4b61      	ldr	r3, [pc, #388]	; (8005be4 <MX_GPIO_Init+0x1ac>)
 8005a60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a62:	f003 0304 	and.w	r3, r3, #4
 8005a66:	613b      	str	r3, [r7, #16]
 8005a68:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8005a6a:	2300      	movs	r3, #0
 8005a6c:	60fb      	str	r3, [r7, #12]
 8005a6e:	4b5d      	ldr	r3, [pc, #372]	; (8005be4 <MX_GPIO_Init+0x1ac>)
 8005a70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a72:	4a5c      	ldr	r2, [pc, #368]	; (8005be4 <MX_GPIO_Init+0x1ac>)
 8005a74:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005a78:	6313      	str	r3, [r2, #48]	; 0x30
 8005a7a:	4b5a      	ldr	r3, [pc, #360]	; (8005be4 <MX_GPIO_Init+0x1ac>)
 8005a7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a7e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005a82:	60fb      	str	r3, [r7, #12]
 8005a84:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8005a86:	2300      	movs	r3, #0
 8005a88:	60bb      	str	r3, [r7, #8]
 8005a8a:	4b56      	ldr	r3, [pc, #344]	; (8005be4 <MX_GPIO_Init+0x1ac>)
 8005a8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a8e:	4a55      	ldr	r2, [pc, #340]	; (8005be4 <MX_GPIO_Init+0x1ac>)
 8005a90:	f043 0301 	orr.w	r3, r3, #1
 8005a94:	6313      	str	r3, [r2, #48]	; 0x30
 8005a96:	4b53      	ldr	r3, [pc, #332]	; (8005be4 <MX_GPIO_Init+0x1ac>)
 8005a98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a9a:	f003 0301 	and.w	r3, r3, #1
 8005a9e:	60bb      	str	r3, [r7, #8]
 8005aa0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8005aa2:	2300      	movs	r3, #0
 8005aa4:	607b      	str	r3, [r7, #4]
 8005aa6:	4b4f      	ldr	r3, [pc, #316]	; (8005be4 <MX_GPIO_Init+0x1ac>)
 8005aa8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005aaa:	4a4e      	ldr	r2, [pc, #312]	; (8005be4 <MX_GPIO_Init+0x1ac>)
 8005aac:	f043 0302 	orr.w	r3, r3, #2
 8005ab0:	6313      	str	r3, [r2, #48]	; 0x30
 8005ab2:	4b4c      	ldr	r3, [pc, #304]	; (8005be4 <MX_GPIO_Init+0x1ac>)
 8005ab4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005ab6:	f003 0302 	and.w	r3, r3, #2
 8005aba:	607b      	str	r3, [r7, #4]
 8005abc:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8005abe:	2300      	movs	r3, #0
 8005ac0:	603b      	str	r3, [r7, #0]
 8005ac2:	4b48      	ldr	r3, [pc, #288]	; (8005be4 <MX_GPIO_Init+0x1ac>)
 8005ac4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005ac6:	4a47      	ldr	r2, [pc, #284]	; (8005be4 <MX_GPIO_Init+0x1ac>)
 8005ac8:	f043 0308 	orr.w	r3, r3, #8
 8005acc:	6313      	str	r3, [r2, #48]	; 0x30
 8005ace:	4b45      	ldr	r3, [pc, #276]	; (8005be4 <MX_GPIO_Init+0x1ac>)
 8005ad0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005ad2:	f003 0308 	and.w	r3, r3, #8
 8005ad6:	603b      	str	r3, [r7, #0]
 8005ad8:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TEL_GPIO4_GPIO_Port, TEL_GPIO4_Pin, GPIO_PIN_RESET);
 8005ada:	2200      	movs	r2, #0
 8005adc:	2102      	movs	r1, #2
 8005ade:	4842      	ldr	r0, [pc, #264]	; (8005be8 <MX_GPIO_Init+0x1b0>)
 8005ae0:	f002 fdaa 	bl	8008638 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, TEL_GPIO7_Pin|On_Board_LED_Pin, GPIO_PIN_RESET);
 8005ae4:	2200      	movs	r2, #0
 8005ae6:	2122      	movs	r1, #34	; 0x22
 8005ae8:	4840      	ldr	r0, [pc, #256]	; (8005bec <MX_GPIO_Init+0x1b4>)
 8005aea:	f002 fda5 	bl	8008638 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED4_Pin|LED1_Pin|LED2_Pin|LED3_Pin
 8005aee:	2200      	movs	r2, #0
 8005af0:	f24e 0142 	movw	r1, #57410	; 0xe042
 8005af4:	483e      	ldr	r0, [pc, #248]	; (8005bf0 <MX_GPIO_Init+0x1b8>)
 8005af6:	f002 fd9f 	bl	8008638 <HAL_GPIO_WritePin>
                          |Motor_EN_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin : On_Board_Button_Pin */
  GPIO_InitStruct.Pin = On_Board_Button_Pin;
 8005afa:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8005afe:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8005b00:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8005b04:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005b06:	2300      	movs	r3, #0
 8005b08:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(On_Board_Button_GPIO_Port, &GPIO_InitStruct);
 8005b0a:	f107 0314 	add.w	r3, r7, #20
 8005b0e:	4619      	mov	r1, r3
 8005b10:	4835      	ldr	r0, [pc, #212]	; (8005be8 <MX_GPIO_Init+0x1b0>)
 8005b12:	f002 fbe5 	bl	80082e0 <HAL_GPIO_Init>

  /*Configure GPIO pin : TEL_GPIO4_Pin */
  GPIO_InitStruct.Pin = TEL_GPIO4_Pin;
 8005b16:	2302      	movs	r3, #2
 8005b18:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8005b1a:	2301      	movs	r3, #1
 8005b1c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005b1e:	2300      	movs	r3, #0
 8005b20:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8005b22:	2300      	movs	r3, #0
 8005b24:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(TEL_GPIO4_GPIO_Port, &GPIO_InitStruct);
 8005b26:	f107 0314 	add.w	r3, r7, #20
 8005b2a:	4619      	mov	r1, r3
 8005b2c:	482e      	ldr	r0, [pc, #184]	; (8005be8 <MX_GPIO_Init+0x1b0>)
 8005b2e:	f002 fbd7 	bl	80082e0 <HAL_GPIO_Init>

  /*Configure GPIO pins : TEL_GPIO7_Pin On_Board_LED_Pin */
  GPIO_InitStruct.Pin = TEL_GPIO7_Pin|On_Board_LED_Pin;
 8005b32:	2322      	movs	r3, #34	; 0x22
 8005b34:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8005b36:	2301      	movs	r3, #1
 8005b38:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005b3a:	2300      	movs	r3, #0
 8005b3c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8005b3e:	2300      	movs	r3, #0
 8005b40:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8005b42:	f107 0314 	add.w	r3, r7, #20
 8005b46:	4619      	mov	r1, r3
 8005b48:	4828      	ldr	r0, [pc, #160]	; (8005bec <MX_GPIO_Init+0x1b4>)
 8005b4a:	f002 fbc9 	bl	80082e0 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED4_Pin LED1_Pin LED2_Pin LED3_Pin
                           Motor_EN_Pin */
  GPIO_InitStruct.Pin = LED4_Pin|LED1_Pin|LED2_Pin|LED3_Pin
 8005b4e:	f24e 0342 	movw	r3, #57410	; 0xe042
 8005b52:	617b      	str	r3, [r7, #20]
                          |Motor_EN_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8005b54:	2301      	movs	r3, #1
 8005b56:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005b58:	2300      	movs	r3, #0
 8005b5a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8005b5c:	2300      	movs	r3, #0
 8005b5e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8005b60:	f107 0314 	add.w	r3, r7, #20
 8005b64:	4619      	mov	r1, r3
 8005b66:	4822      	ldr	r0, [pc, #136]	; (8005bf0 <MX_GPIO_Init+0x1b8>)
 8005b68:	f002 fbba 	bl	80082e0 <HAL_GPIO_Init>

  /*Configure GPIO pins : SW2_Pin B2_Pin Motor_Feedback_Pin */
  GPIO_InitStruct.Pin = SW2_Pin|B2_Pin|Motor_Feedback_Pin;
 8005b6c:	f44f 6394 	mov.w	r3, #1184	; 0x4a0
 8005b70:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8005b72:	2300      	movs	r3, #0
 8005b74:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005b76:	2300      	movs	r3, #0
 8005b78:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8005b7a:	f107 0314 	add.w	r3, r7, #20
 8005b7e:	4619      	mov	r1, r3
 8005b80:	481b      	ldr	r0, [pc, #108]	; (8005bf0 <MX_GPIO_Init+0x1b8>)
 8005b82:	f002 fbad 	bl	80082e0 <HAL_GPIO_Init>

  /*Configure GPIO pin : SW1_Pin */
  GPIO_InitStruct.Pin = SW1_Pin;
 8005b86:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005b8a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8005b8c:	2300      	movs	r3, #0
 8005b8e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005b90:	2300      	movs	r3, #0
 8005b92:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(SW1_GPIO_Port, &GPIO_InitStruct);
 8005b94:	f107 0314 	add.w	r3, r7, #20
 8005b98:	4619      	mov	r1, r3
 8005b9a:	4814      	ldr	r0, [pc, #80]	; (8005bec <MX_GPIO_Init+0x1b4>)
 8005b9c:	f002 fba0 	bl	80082e0 <HAL_GPIO_Init>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8005ba0:	2310      	movs	r3, #16
 8005ba2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8005ba4:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8005ba8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005baa:	2300      	movs	r3, #0
 8005bac:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8005bae:	f107 0314 	add.w	r3, r7, #20
 8005bb2:	4619      	mov	r1, r3
 8005bb4:	480e      	ldr	r0, [pc, #56]	; (8005bf0 <MX_GPIO_Init+0x1b8>)
 8005bb6:	f002 fb93 	bl	80082e0 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI4_IRQn, 0, 0);
 8005bba:	2200      	movs	r2, #0
 8005bbc:	2100      	movs	r1, #0
 8005bbe:	200a      	movs	r0, #10
 8005bc0:	f001 fd39 	bl	8007636 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 8005bc4:	200a      	movs	r0, #10
 8005bc6:	f001 fd52 	bl	800766e <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8005bca:	2200      	movs	r2, #0
 8005bcc:	2100      	movs	r1, #0
 8005bce:	2028      	movs	r0, #40	; 0x28
 8005bd0:	f001 fd31 	bl	8007636 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8005bd4:	2028      	movs	r0, #40	; 0x28
 8005bd6:	f001 fd4a 	bl	800766e <HAL_NVIC_EnableIRQ>

}
 8005bda:	bf00      	nop
 8005bdc:	3728      	adds	r7, #40	; 0x28
 8005bde:	46bd      	mov	sp, r7
 8005be0:	bd80      	pop	{r7, pc}
 8005be2:	bf00      	nop
 8005be4:	40023800 	.word	0x40023800
 8005be8:	40020800 	.word	0x40020800
 8005bec:	40020000 	.word	0x40020000
 8005bf0:	40020400 	.word	0x40020400

08005bf4 <HAL_GPIO_EXTI_Callback>:

/* USER CODE BEGIN 4 */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8005bf4:	b580      	push	{r7, lr}
 8005bf6:	b082      	sub	sp, #8
 8005bf8:	af00      	add	r7, sp, #0
 8005bfa:	4603      	mov	r3, r0
 8005bfc:	80fb      	strh	r3, [r7, #6]
	//ha meg lett nyomva a nucleon a kék gomb
	if(GPIO_Pin == On_Board_Button_Pin)B_NUCLEO_ISR(&huart1);
 8005bfe:	88fb      	ldrh	r3, [r7, #6]
 8005c00:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005c04:	d102      	bne.n	8005c0c <HAL_GPIO_EXTI_Callback+0x18>
 8005c06:	4806      	ldr	r0, [pc, #24]	; (8005c20 <HAL_GPIO_EXTI_Callback+0x2c>)
 8005c08:	f7fb fb9a 	bl	8001340 <B_NUCLEO_ISR>
	if(GPIO_Pin == B1_Pin) B1_ISR(&huart1);
 8005c0c:	88fb      	ldrh	r3, [r7, #6]
 8005c0e:	2b10      	cmp	r3, #16
 8005c10:	d102      	bne.n	8005c18 <HAL_GPIO_EXTI_Callback+0x24>
 8005c12:	4803      	ldr	r0, [pc, #12]	; (8005c20 <HAL_GPIO_EXTI_Callback+0x2c>)
 8005c14:	f7fb fb20 	bl	8001258 <B1_ISR>
}
 8005c18:	bf00      	nop
 8005c1a:	3708      	adds	r7, #8
 8005c1c:	46bd      	mov	sp, r7
 8005c1e:	bd80      	pop	{r7, pc}
 8005c20:	20000a94 	.word	0x20000a94

08005c24 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8005c24:	b580      	push	{r7, lr}
 8005c26:	b082      	sub	sp, #8
 8005c28:	af00      	add	r7, sp, #0
 8005c2a:	6078      	str	r0, [r7, #4]
	if(huart == &huart1)Uart_Receive_From_PC_ISR(&huart1);
 8005c2c:	687b      	ldr	r3, [r7, #4]
 8005c2e:	4a09      	ldr	r2, [pc, #36]	; (8005c54 <HAL_UART_RxCpltCallback+0x30>)
 8005c30:	4293      	cmp	r3, r2
 8005c32:	d103      	bne.n	8005c3c <HAL_UART_RxCpltCallback+0x18>
 8005c34:	4807      	ldr	r0, [pc, #28]	; (8005c54 <HAL_UART_RxCpltCallback+0x30>)
 8005c36:	f7fb faeb 	bl	8001210 <Uart_Receive_From_PC_ISR>
	else if(huart==&huart3)Uart_Receive_Thunderboard_ISR(&huart3, &huart1);
}
 8005c3a:	e007      	b.n	8005c4c <HAL_UART_RxCpltCallback+0x28>
	else if(huart==&huart3)Uart_Receive_Thunderboard_ISR(&huart3, &huart1);
 8005c3c:	687b      	ldr	r3, [r7, #4]
 8005c3e:	4a06      	ldr	r2, [pc, #24]	; (8005c58 <HAL_UART_RxCpltCallback+0x34>)
 8005c40:	4293      	cmp	r3, r2
 8005c42:	d103      	bne.n	8005c4c <HAL_UART_RxCpltCallback+0x28>
 8005c44:	4903      	ldr	r1, [pc, #12]	; (8005c54 <HAL_UART_RxCpltCallback+0x30>)
 8005c46:	4804      	ldr	r0, [pc, #16]	; (8005c58 <HAL_UART_RxCpltCallback+0x34>)
 8005c48:	f7fd fb18 	bl	800327c <Uart_Receive_Thunderboard_ISR>
}
 8005c4c:	bf00      	nop
 8005c4e:	3708      	adds	r7, #8
 8005c50:	46bd      	mov	sp, r7
 8005c52:	bd80      	pop	{r7, pc}
 8005c54:	20000a94 	.word	0x20000a94
 8005c58:	20000b1c 	.word	0x20000b1c

08005c5c <Delay>:

void Delay(uint16_t ms)
{
 8005c5c:	b480      	push	{r7}
 8005c5e:	b083      	sub	sp, #12
 8005c60:	af00      	add	r7, sp, #0
 8005c62:	4603      	mov	r3, r0
 8005c64:	80fb      	strh	r3, [r7, #6]
	TIM13->CNT=0;
 8005c66:	4b08      	ldr	r3, [pc, #32]	; (8005c88 <Delay+0x2c>)
 8005c68:	2200      	movs	r2, #0
 8005c6a:	625a      	str	r2, [r3, #36]	; 0x24
	while(1)
	{
		if(__HAL_TIM_GET_COUNTER(&htim13)>ms)break;
 8005c6c:	4b07      	ldr	r3, [pc, #28]	; (8005c8c <Delay+0x30>)
 8005c6e:	681b      	ldr	r3, [r3, #0]
 8005c70:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005c72:	88fb      	ldrh	r3, [r7, #6]
 8005c74:	429a      	cmp	r2, r3
 8005c76:	d800      	bhi.n	8005c7a <Delay+0x1e>
 8005c78:	e7f8      	b.n	8005c6c <Delay+0x10>
 8005c7a:	bf00      	nop
	}

}
 8005c7c:	bf00      	nop
 8005c7e:	370c      	adds	r7, #12
 8005c80:	46bd      	mov	sp, r7
 8005c82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c86:	4770      	bx	lr
 8005c88:	40001c00 	.word	0x40001c00
 8005c8c:	20000960 	.word	0x20000960

08005c90 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8005c90:	b480      	push	{r7}
 8005c92:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 8005c94:	b672      	cpsid	i
}
 8005c96:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8005c98:	e7fe      	b.n	8005c98 <Error_Handler+0x8>
	...

08005c9c <Remote_Control_Init>:
#include <stdlib.h>

uint32_t tEdge[3];

void Remote_Control_Init(TIM_HandleTypeDef *htim, uint32_t channel)
{
 8005c9c:	b580      	push	{r7, lr}
 8005c9e:	b082      	sub	sp, #8
 8005ca0:	af00      	add	r7, sp, #0
 8005ca2:	6078      	str	r0, [r7, #4]
 8005ca4:	6039      	str	r1, [r7, #0]
	tEdge[0] = 1000;
 8005ca6:	4b0a      	ldr	r3, [pc, #40]	; (8005cd0 <Remote_Control_Init+0x34>)
 8005ca8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8005cac:	601a      	str	r2, [r3, #0]
	tEdge[1] = 500;
 8005cae:	4b08      	ldr	r3, [pc, #32]	; (8005cd0 <Remote_Control_Init+0x34>)
 8005cb0:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8005cb4:	605a      	str	r2, [r3, #4]
	tEdge[2] = 0;
 8005cb6:	4b06      	ldr	r3, [pc, #24]	; (8005cd0 <Remote_Control_Init+0x34>)
 8005cb8:	2200      	movs	r2, #0
 8005cba:	609a      	str	r2, [r3, #8]
	HAL_TIM_IC_Start_DMA(htim, channel, tEdge, 3);
 8005cbc:	2303      	movs	r3, #3
 8005cbe:	4a04      	ldr	r2, [pc, #16]	; (8005cd0 <Remote_Control_Init+0x34>)
 8005cc0:	6839      	ldr	r1, [r7, #0]
 8005cc2:	6878      	ldr	r0, [r7, #4]
 8005cc4:	f003 fd70 	bl	80097a8 <HAL_TIM_IC_Start_DMA>
}
 8005cc8:	bf00      	nop
 8005cca:	3708      	adds	r7, #8
 8005ccc:	46bd      	mov	sp, r7
 8005cce:	bd80      	pop	{r7, pc}
 8005cd0:	20000b64 	.word	0x20000b64

08005cd4 <Remote_Control_Task>:
void Remote_Control_Task(TIM_HandleTypeDef *htim, uint32_t channel,UART_HandleTypeDef *huart, uint32_t tick, uint32_t period)
{
 8005cd4:	b580      	push	{r7, lr}
 8005cd6:	b084      	sub	sp, #16
 8005cd8:	af00      	add	r7, sp, #0
 8005cda:	60f8      	str	r0, [r7, #12]
 8005cdc:	60b9      	str	r1, [r7, #8]
 8005cde:	607a      	str	r2, [r7, #4]
 8005ce0:	603b      	str	r3, [r7, #0]
	static int32_t dt1=85;
	static int32_t dt2=85;
	static uint32_t tLow=85;
	static uint32_t remote_control_tick=0;

	if(remote_control_tick>tick) return;
 8005ce2:	4b50      	ldr	r3, [pc, #320]	; (8005e24 <Remote_Control_Task+0x150>)
 8005ce4:	681b      	ldr	r3, [r3, #0]
 8005ce6:	683a      	ldr	r2, [r7, #0]
 8005ce8:	429a      	cmp	r2, r3
 8005cea:	f0c0 8096 	bcc.w	8005e1a <Remote_Control_Task+0x146>
	remote_control_tick = tick + period;
 8005cee:	683a      	ldr	r2, [r7, #0]
 8005cf0:	69bb      	ldr	r3, [r7, #24]
 8005cf2:	4413      	add	r3, r2
 8005cf4:	4a4b      	ldr	r2, [pc, #300]	; (8005e24 <Remote_Control_Task+0x150>)
 8005cf6:	6013      	str	r3, [r2, #0]

	//a három időkülönbésgből egy a T_s, egy a D*T_s és egy az (1-D)*T_s, de nem tudjuk melyik melyik a cirkuláris buffer miatt
	HAL_NVIC_DisableIRQ(TIM4_IRQn);  //atomivá tesszük ezt a két műveletet
 8005cf8:	201e      	movs	r0, #30
 8005cfa:	f001 fcc6 	bl	800768a <HAL_NVIC_DisableIRQ>
	dt0=abs((int)tEdge[1]-tEdge[0]);
 8005cfe:	4b4a      	ldr	r3, [pc, #296]	; (8005e28 <Remote_Control_Task+0x154>)
 8005d00:	685a      	ldr	r2, [r3, #4]
 8005d02:	4b49      	ldr	r3, [pc, #292]	; (8005e28 <Remote_Control_Task+0x154>)
 8005d04:	681b      	ldr	r3, [r3, #0]
 8005d06:	1ad3      	subs	r3, r2, r3
 8005d08:	2b00      	cmp	r3, #0
 8005d0a:	bfb8      	it	lt
 8005d0c:	425b      	neglt	r3, r3
 8005d0e:	4a47      	ldr	r2, [pc, #284]	; (8005e2c <Remote_Control_Task+0x158>)
 8005d10:	6013      	str	r3, [r2, #0]
	dt1=abs((int)tEdge[2]-tEdge[1]);
 8005d12:	4b45      	ldr	r3, [pc, #276]	; (8005e28 <Remote_Control_Task+0x154>)
 8005d14:	689a      	ldr	r2, [r3, #8]
 8005d16:	4b44      	ldr	r3, [pc, #272]	; (8005e28 <Remote_Control_Task+0x154>)
 8005d18:	685b      	ldr	r3, [r3, #4]
 8005d1a:	1ad3      	subs	r3, r2, r3
 8005d1c:	2b00      	cmp	r3, #0
 8005d1e:	bfb8      	it	lt
 8005d20:	425b      	neglt	r3, r3
 8005d22:	4a43      	ldr	r2, [pc, #268]	; (8005e30 <Remote_Control_Task+0x15c>)
 8005d24:	6013      	str	r3, [r2, #0]
	dt2=abs((int)tEdge[0]-tEdge[2]);
 8005d26:	4b40      	ldr	r3, [pc, #256]	; (8005e28 <Remote_Control_Task+0x154>)
 8005d28:	681a      	ldr	r2, [r3, #0]
 8005d2a:	4b3f      	ldr	r3, [pc, #252]	; (8005e28 <Remote_Control_Task+0x154>)
 8005d2c:	689b      	ldr	r3, [r3, #8]
 8005d2e:	1ad3      	subs	r3, r2, r3
 8005d30:	2b00      	cmp	r3, #0
 8005d32:	bfb8      	it	lt
 8005d34:	425b      	neglt	r3, r3
 8005d36:	4a3f      	ldr	r2, [pc, #252]	; (8005e34 <Remote_Control_Task+0x160>)
 8005d38:	6013      	str	r3, [r2, #0]
	HAL_NVIC_EnableIRQ(TIM4_IRQn);   // mostmár fogadhatjuk az új pwm periodusokat
 8005d3a:	201e      	movs	r0, #30
 8005d3c:	f001 fc97 	bl	800766e <HAL_NVIC_EnableIRQ>

	//lehet hogy a kövi fűrészjelen vagyunk, ezt ki kell kompenzálni
	if(dt0>5000)dt0=0xffff-dt0;
 8005d40:	4b3a      	ldr	r3, [pc, #232]	; (8005e2c <Remote_Control_Task+0x158>)
 8005d42:	681b      	ldr	r3, [r3, #0]
 8005d44:	f241 3288 	movw	r2, #5000	; 0x1388
 8005d48:	4293      	cmp	r3, r2
 8005d4a:	dd06      	ble.n	8005d5a <Remote_Control_Task+0x86>
 8005d4c:	4b37      	ldr	r3, [pc, #220]	; (8005e2c <Remote_Control_Task+0x158>)
 8005d4e:	681b      	ldr	r3, [r3, #0]
 8005d50:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 8005d54:	33ff      	adds	r3, #255	; 0xff
 8005d56:	4a35      	ldr	r2, [pc, #212]	; (8005e2c <Remote_Control_Task+0x158>)
 8005d58:	6013      	str	r3, [r2, #0]
	if(dt1>5000)dt1=0xffff-dt1;
 8005d5a:	4b35      	ldr	r3, [pc, #212]	; (8005e30 <Remote_Control_Task+0x15c>)
 8005d5c:	681b      	ldr	r3, [r3, #0]
 8005d5e:	f241 3288 	movw	r2, #5000	; 0x1388
 8005d62:	4293      	cmp	r3, r2
 8005d64:	dd06      	ble.n	8005d74 <Remote_Control_Task+0xa0>
 8005d66:	4b32      	ldr	r3, [pc, #200]	; (8005e30 <Remote_Control_Task+0x15c>)
 8005d68:	681b      	ldr	r3, [r3, #0]
 8005d6a:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 8005d6e:	33ff      	adds	r3, #255	; 0xff
 8005d70:	4a2f      	ldr	r2, [pc, #188]	; (8005e30 <Remote_Control_Task+0x15c>)
 8005d72:	6013      	str	r3, [r2, #0]
	if(dt2>5000)dt2=0xffff-dt2;
 8005d74:	4b2f      	ldr	r3, [pc, #188]	; (8005e34 <Remote_Control_Task+0x160>)
 8005d76:	681b      	ldr	r3, [r3, #0]
 8005d78:	f241 3288 	movw	r2, #5000	; 0x1388
 8005d7c:	4293      	cmp	r3, r2
 8005d7e:	dd06      	ble.n	8005d8e <Remote_Control_Task+0xba>
 8005d80:	4b2c      	ldr	r3, [pc, #176]	; (8005e34 <Remote_Control_Task+0x160>)
 8005d82:	681b      	ldr	r3, [r3, #0]
 8005d84:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 8005d88:	33ff      	adds	r3, #255	; 0xff
 8005d8a:	4a2a      	ldr	r2, [pc, #168]	; (8005e34 <Remote_Control_Task+0x160>)
 8005d8c:	6013      	str	r3, [r2, #0]

	//mostmár tényleges időkülönbségeink vannak
	//a három különbéség közül a legkisebb kell nekünk ->
	if(dt0<dt1 && dt0<dt2) //a 4 különbésg közül a legkisebb adja a magasan töltött időt
 8005d8e:	4b27      	ldr	r3, [pc, #156]	; (8005e2c <Remote_Control_Task+0x158>)
 8005d90:	681a      	ldr	r2, [r3, #0]
 8005d92:	4b27      	ldr	r3, [pc, #156]	; (8005e30 <Remote_Control_Task+0x15c>)
 8005d94:	681b      	ldr	r3, [r3, #0]
 8005d96:	429a      	cmp	r2, r3
 8005d98:	da0b      	bge.n	8005db2 <Remote_Control_Task+0xde>
 8005d9a:	4b24      	ldr	r3, [pc, #144]	; (8005e2c <Remote_Control_Task+0x158>)
 8005d9c:	681a      	ldr	r2, [r3, #0]
 8005d9e:	4b25      	ldr	r3, [pc, #148]	; (8005e34 <Remote_Control_Task+0x160>)
 8005da0:	681b      	ldr	r3, [r3, #0]
 8005da2:	429a      	cmp	r2, r3
 8005da4:	da05      	bge.n	8005db2 <Remote_Control_Task+0xde>
	{
		tLow=dt0;
 8005da6:	4b21      	ldr	r3, [pc, #132]	; (8005e2c <Remote_Control_Task+0x158>)
 8005da8:	681b      	ldr	r3, [r3, #0]
 8005daa:	461a      	mov	r2, r3
 8005dac:	4b22      	ldr	r3, [pc, #136]	; (8005e38 <Remote_Control_Task+0x164>)
 8005dae:	601a      	str	r2, [r3, #0]
 8005db0:	e016      	b.n	8005de0 <Remote_Control_Task+0x10c>
	}
	else if(dt1<dt0 && dt1<dt2)
 8005db2:	4b1f      	ldr	r3, [pc, #124]	; (8005e30 <Remote_Control_Task+0x15c>)
 8005db4:	681a      	ldr	r2, [r3, #0]
 8005db6:	4b1d      	ldr	r3, [pc, #116]	; (8005e2c <Remote_Control_Task+0x158>)
 8005db8:	681b      	ldr	r3, [r3, #0]
 8005dba:	429a      	cmp	r2, r3
 8005dbc:	da0b      	bge.n	8005dd6 <Remote_Control_Task+0x102>
 8005dbe:	4b1c      	ldr	r3, [pc, #112]	; (8005e30 <Remote_Control_Task+0x15c>)
 8005dc0:	681a      	ldr	r2, [r3, #0]
 8005dc2:	4b1c      	ldr	r3, [pc, #112]	; (8005e34 <Remote_Control_Task+0x160>)
 8005dc4:	681b      	ldr	r3, [r3, #0]
 8005dc6:	429a      	cmp	r2, r3
 8005dc8:	da05      	bge.n	8005dd6 <Remote_Control_Task+0x102>
	{
		tLow=dt1;
 8005dca:	4b19      	ldr	r3, [pc, #100]	; (8005e30 <Remote_Control_Task+0x15c>)
 8005dcc:	681b      	ldr	r3, [r3, #0]
 8005dce:	461a      	mov	r2, r3
 8005dd0:	4b19      	ldr	r3, [pc, #100]	; (8005e38 <Remote_Control_Task+0x164>)
 8005dd2:	601a      	str	r2, [r3, #0]
 8005dd4:	e004      	b.n	8005de0 <Remote_Control_Task+0x10c>
	}
	else
	{
		tLow=dt2;
 8005dd6:	4b17      	ldr	r3, [pc, #92]	; (8005e34 <Remote_Control_Task+0x160>)
 8005dd8:	681b      	ldr	r3, [r3, #0]
 8005dda:	461a      	mov	r2, r3
 8005ddc:	4b16      	ldr	r3, [pc, #88]	; (8005e38 <Remote_Control_Task+0x164>)
 8005dde:	601a      	str	r2, [r3, #0]
	sprintf(string,"%d\n\r",tLow);
	HAL_UART_Transmit(huart, string, strlen(string), 10);
	remote_control_tick = tick + 1000;
#endif

	if((tLow>70 && tLow<100) || tLow==1000)
 8005de0:	4b15      	ldr	r3, [pc, #84]	; (8005e38 <Remote_Control_Task+0x164>)
 8005de2:	681b      	ldr	r3, [r3, #0]
 8005de4:	2b46      	cmp	r3, #70	; 0x46
 8005de6:	d903      	bls.n	8005df0 <Remote_Control_Task+0x11c>
 8005de8:	4b13      	ldr	r3, [pc, #76]	; (8005e38 <Remote_Control_Task+0x164>)
 8005dea:	681b      	ldr	r3, [r3, #0]
 8005dec:	2b63      	cmp	r3, #99	; 0x63
 8005dee:	d904      	bls.n	8005dfa <Remote_Control_Task+0x126>
 8005df0:	4b11      	ldr	r3, [pc, #68]	; (8005e38 <Remote_Control_Task+0x164>)
 8005df2:	681b      	ldr	r3, [r3, #0]
 8005df4:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005df8:	d103      	bne.n	8005e02 <Remote_Control_Task+0x12e>
	{
		//LED_R(1); //ha nincs meghuzva a ravasz tLow kb 87, ha meg van huzva kb 55, ha előre van nyomva kb 118
		motorEnRemote=0;//állítsuk le a motort ha meghuzzuk a ravaszt
 8005dfa:	4b10      	ldr	r3, [pc, #64]	; (8005e3c <Remote_Control_Task+0x168>)
 8005dfc:	2200      	movs	r2, #0
 8005dfe:	701a      	strb	r2, [r3, #0]
 8005e00:	e00c      	b.n	8005e1c <Remote_Control_Task+0x148>
	}
	else
	{
		//LED_R(0);
		if(tLow <= 70) motorEnRemote=1;
 8005e02:	4b0d      	ldr	r3, [pc, #52]	; (8005e38 <Remote_Control_Task+0x164>)
 8005e04:	681b      	ldr	r3, [r3, #0]
 8005e06:	2b46      	cmp	r3, #70	; 0x46
 8005e08:	d803      	bhi.n	8005e12 <Remote_Control_Task+0x13e>
 8005e0a:	4b0c      	ldr	r3, [pc, #48]	; (8005e3c <Remote_Control_Task+0x168>)
 8005e0c:	2201      	movs	r2, #1
 8005e0e:	701a      	strb	r2, [r3, #0]
 8005e10:	e004      	b.n	8005e1c <Remote_Control_Task+0x148>
		else motorEnRemote=2;
 8005e12:	4b0a      	ldr	r3, [pc, #40]	; (8005e3c <Remote_Control_Task+0x168>)
 8005e14:	2202      	movs	r2, #2
 8005e16:	701a      	strb	r2, [r3, #0]
 8005e18:	e000      	b.n	8005e1c <Remote_Control_Task+0x148>
	if(remote_control_tick>tick) return;
 8005e1a:	bf00      	nop
	}
}
 8005e1c:	3710      	adds	r7, #16
 8005e1e:	46bd      	mov	sp, r7
 8005e20:	bd80      	pop	{r7, pc}
 8005e22:	bf00      	nop
 8005e24:	20000b70 	.word	0x20000b70
 8005e28:	20000b64 	.word	0x20000b64
 8005e2c:	20000094 	.word	0x20000094
 8005e30:	20000098 	.word	0x20000098
 8005e34:	2000009c 	.word	0x2000009c
 8005e38:	200000a0 	.word	0x200000a0
 8005e3c:	20000b60 	.word	0x20000b60

08005e40 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                                            /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8005e40:	b580      	push	{r7, lr}
 8005e42:	b082      	sub	sp, #8
 8005e44:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005e46:	2300      	movs	r3, #0
 8005e48:	607b      	str	r3, [r7, #4]
 8005e4a:	4b10      	ldr	r3, [pc, #64]	; (8005e8c <HAL_MspInit+0x4c>)
 8005e4c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005e4e:	4a0f      	ldr	r2, [pc, #60]	; (8005e8c <HAL_MspInit+0x4c>)
 8005e50:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005e54:	6453      	str	r3, [r2, #68]	; 0x44
 8005e56:	4b0d      	ldr	r3, [pc, #52]	; (8005e8c <HAL_MspInit+0x4c>)
 8005e58:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005e5a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8005e5e:	607b      	str	r3, [r7, #4]
 8005e60:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8005e62:	2300      	movs	r3, #0
 8005e64:	603b      	str	r3, [r7, #0]
 8005e66:	4b09      	ldr	r3, [pc, #36]	; (8005e8c <HAL_MspInit+0x4c>)
 8005e68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005e6a:	4a08      	ldr	r2, [pc, #32]	; (8005e8c <HAL_MspInit+0x4c>)
 8005e6c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005e70:	6413      	str	r3, [r2, #64]	; 0x40
 8005e72:	4b06      	ldr	r3, [pc, #24]	; (8005e8c <HAL_MspInit+0x4c>)
 8005e74:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005e76:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005e7a:	603b      	str	r3, [r7, #0]
 8005e7c:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 8005e7e:	2007      	movs	r0, #7
 8005e80:	f001 fbce 	bl	8007620 <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8005e84:	bf00      	nop
 8005e86:	3708      	adds	r7, #8
 8005e88:	46bd      	mov	sp, r7
 8005e8a:	bd80      	pop	{r7, pc}
 8005e8c:	40023800 	.word	0x40023800

08005e90 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8005e90:	b580      	push	{r7, lr}
 8005e92:	b08c      	sub	sp, #48	; 0x30
 8005e94:	af00      	add	r7, sp, #0
 8005e96:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8005e98:	f107 031c 	add.w	r3, r7, #28
 8005e9c:	2200      	movs	r2, #0
 8005e9e:	601a      	str	r2, [r3, #0]
 8005ea0:	605a      	str	r2, [r3, #4]
 8005ea2:	609a      	str	r2, [r3, #8]
 8005ea4:	60da      	str	r2, [r3, #12]
 8005ea6:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8005ea8:	687b      	ldr	r3, [r7, #4]
 8005eaa:	681b      	ldr	r3, [r3, #0]
 8005eac:	4a2e      	ldr	r2, [pc, #184]	; (8005f68 <HAL_ADC_MspInit+0xd8>)
 8005eae:	4293      	cmp	r3, r2
 8005eb0:	d128      	bne.n	8005f04 <HAL_ADC_MspInit+0x74>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8005eb2:	2300      	movs	r3, #0
 8005eb4:	61bb      	str	r3, [r7, #24]
 8005eb6:	4b2d      	ldr	r3, [pc, #180]	; (8005f6c <HAL_ADC_MspInit+0xdc>)
 8005eb8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005eba:	4a2c      	ldr	r2, [pc, #176]	; (8005f6c <HAL_ADC_MspInit+0xdc>)
 8005ebc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005ec0:	6453      	str	r3, [r2, #68]	; 0x44
 8005ec2:	4b2a      	ldr	r3, [pc, #168]	; (8005f6c <HAL_ADC_MspInit+0xdc>)
 8005ec4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005ec6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005eca:	61bb      	str	r3, [r7, #24]
 8005ecc:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8005ece:	2300      	movs	r3, #0
 8005ed0:	617b      	str	r3, [r7, #20]
 8005ed2:	4b26      	ldr	r3, [pc, #152]	; (8005f6c <HAL_ADC_MspInit+0xdc>)
 8005ed4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005ed6:	4a25      	ldr	r2, [pc, #148]	; (8005f6c <HAL_ADC_MspInit+0xdc>)
 8005ed8:	f043 0302 	orr.w	r3, r3, #2
 8005edc:	6313      	str	r3, [r2, #48]	; 0x30
 8005ede:	4b23      	ldr	r3, [pc, #140]	; (8005f6c <HAL_ADC_MspInit+0xdc>)
 8005ee0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005ee2:	f003 0302 	and.w	r3, r3, #2
 8005ee6:	617b      	str	r3, [r7, #20]
 8005ee8:	697b      	ldr	r3, [r7, #20]
    /**ADC1 GPIO Configuration
    PB0     ------> ADC1_IN8
    */
    GPIO_InitStruct.Pin = Bat_Meas_Pin;
 8005eea:	2301      	movs	r3, #1
 8005eec:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8005eee:	2303      	movs	r3, #3
 8005ef0:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005ef2:	2300      	movs	r3, #0
 8005ef4:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(Bat_Meas_GPIO_Port, &GPIO_InitStruct);
 8005ef6:	f107 031c 	add.w	r3, r7, #28
 8005efa:	4619      	mov	r1, r3
 8005efc:	481c      	ldr	r0, [pc, #112]	; (8005f70 <HAL_ADC_MspInit+0xe0>)
 8005efe:	f002 f9ef 	bl	80082e0 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC2_MspInit 1 */

  /* USER CODE END ADC2_MspInit 1 */
  }

}
 8005f02:	e02c      	b.n	8005f5e <HAL_ADC_MspInit+0xce>
  else if(hadc->Instance==ADC2)
 8005f04:	687b      	ldr	r3, [r7, #4]
 8005f06:	681b      	ldr	r3, [r3, #0]
 8005f08:	4a1a      	ldr	r2, [pc, #104]	; (8005f74 <HAL_ADC_MspInit+0xe4>)
 8005f0a:	4293      	cmp	r3, r2
 8005f0c:	d127      	bne.n	8005f5e <HAL_ADC_MspInit+0xce>
    __HAL_RCC_ADC2_CLK_ENABLE();
 8005f0e:	2300      	movs	r3, #0
 8005f10:	613b      	str	r3, [r7, #16]
 8005f12:	4b16      	ldr	r3, [pc, #88]	; (8005f6c <HAL_ADC_MspInit+0xdc>)
 8005f14:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005f16:	4a15      	ldr	r2, [pc, #84]	; (8005f6c <HAL_ADC_MspInit+0xdc>)
 8005f18:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005f1c:	6453      	str	r3, [r2, #68]	; 0x44
 8005f1e:	4b13      	ldr	r3, [pc, #76]	; (8005f6c <HAL_ADC_MspInit+0xdc>)
 8005f20:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005f22:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8005f26:	613b      	str	r3, [r7, #16]
 8005f28:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8005f2a:	2300      	movs	r3, #0
 8005f2c:	60fb      	str	r3, [r7, #12]
 8005f2e:	4b0f      	ldr	r3, [pc, #60]	; (8005f6c <HAL_ADC_MspInit+0xdc>)
 8005f30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005f32:	4a0e      	ldr	r2, [pc, #56]	; (8005f6c <HAL_ADC_MspInit+0xdc>)
 8005f34:	f043 0304 	orr.w	r3, r3, #4
 8005f38:	6313      	str	r3, [r2, #48]	; 0x30
 8005f3a:	4b0c      	ldr	r3, [pc, #48]	; (8005f6c <HAL_ADC_MspInit+0xdc>)
 8005f3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005f3e:	f003 0304 	and.w	r3, r3, #4
 8005f42:	60fb      	str	r3, [r7, #12]
 8005f44:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = Motor_Bat_Pin;
 8005f46:	2308      	movs	r3, #8
 8005f48:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8005f4a:	2303      	movs	r3, #3
 8005f4c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005f4e:	2300      	movs	r3, #0
 8005f50:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(Motor_Bat_GPIO_Port, &GPIO_InitStruct);
 8005f52:	f107 031c 	add.w	r3, r7, #28
 8005f56:	4619      	mov	r1, r3
 8005f58:	4807      	ldr	r0, [pc, #28]	; (8005f78 <HAL_ADC_MspInit+0xe8>)
 8005f5a:	f002 f9c1 	bl	80082e0 <HAL_GPIO_Init>
}
 8005f5e:	bf00      	nop
 8005f60:	3730      	adds	r7, #48	; 0x30
 8005f62:	46bd      	mov	sp, r7
 8005f64:	bd80      	pop	{r7, pc}
 8005f66:	bf00      	nop
 8005f68:	40012000 	.word	0x40012000
 8005f6c:	40023800 	.word	0x40023800
 8005f70:	40020400 	.word	0x40020400
 8005f74:	40012100 	.word	0x40012100
 8005f78:	40020800 	.word	0x40020800

08005f7c <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8005f7c:	b580      	push	{r7, lr}
 8005f7e:	b090      	sub	sp, #64	; 0x40
 8005f80:	af00      	add	r7, sp, #0
 8005f82:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8005f84:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8005f88:	2200      	movs	r2, #0
 8005f8a:	601a      	str	r2, [r3, #0]
 8005f8c:	605a      	str	r2, [r3, #4]
 8005f8e:	609a      	str	r2, [r3, #8]
 8005f90:	60da      	str	r2, [r3, #12]
 8005f92:	611a      	str	r2, [r3, #16]
  if(htim_base->Instance==TIM1)
 8005f94:	687b      	ldr	r3, [r7, #4]
 8005f96:	681b      	ldr	r3, [r3, #0]
 8005f98:	4a72      	ldr	r2, [pc, #456]	; (8006164 <HAL_TIM_Base_MspInit+0x1e8>)
 8005f9a:	4293      	cmp	r3, r2
 8005f9c:	d10e      	bne.n	8005fbc <HAL_TIM_Base_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8005f9e:	2300      	movs	r3, #0
 8005fa0:	62bb      	str	r3, [r7, #40]	; 0x28
 8005fa2:	4b71      	ldr	r3, [pc, #452]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 8005fa4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005fa6:	4a70      	ldr	r2, [pc, #448]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 8005fa8:	f043 0301 	orr.w	r3, r3, #1
 8005fac:	6453      	str	r3, [r2, #68]	; 0x44
 8005fae:	4b6e      	ldr	r3, [pc, #440]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 8005fb0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005fb2:	f003 0301 	and.w	r3, r3, #1
 8005fb6:	62bb      	str	r3, [r7, #40]	; 0x28
 8005fb8:	6abb      	ldr	r3, [r7, #40]	; 0x28
  /* USER CODE BEGIN TIM14_MspInit 1 */

  /* USER CODE END TIM14_MspInit 1 */
  }

}
 8005fba:	e0cf      	b.n	800615c <HAL_TIM_Base_MspInit+0x1e0>
  else if(htim_base->Instance==TIM2)
 8005fbc:	687b      	ldr	r3, [r7, #4]
 8005fbe:	681b      	ldr	r3, [r3, #0]
 8005fc0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005fc4:	d116      	bne.n	8005ff4 <HAL_TIM_Base_MspInit+0x78>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8005fc6:	2300      	movs	r3, #0
 8005fc8:	627b      	str	r3, [r7, #36]	; 0x24
 8005fca:	4b67      	ldr	r3, [pc, #412]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 8005fcc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005fce:	4a66      	ldr	r2, [pc, #408]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 8005fd0:	f043 0301 	orr.w	r3, r3, #1
 8005fd4:	6413      	str	r3, [r2, #64]	; 0x40
 8005fd6:	4b64      	ldr	r3, [pc, #400]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 8005fd8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005fda:	f003 0301 	and.w	r3, r3, #1
 8005fde:	627b      	str	r3, [r7, #36]	; 0x24
 8005fe0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8005fe2:	2200      	movs	r2, #0
 8005fe4:	2100      	movs	r1, #0
 8005fe6:	201c      	movs	r0, #28
 8005fe8:	f001 fb25 	bl	8007636 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8005fec:	201c      	movs	r0, #28
 8005fee:	f001 fb3e 	bl	800766e <HAL_NVIC_EnableIRQ>
}
 8005ff2:	e0b3      	b.n	800615c <HAL_TIM_Base_MspInit+0x1e0>
  else if(htim_base->Instance==TIM3)
 8005ff4:	687b      	ldr	r3, [r7, #4]
 8005ff6:	681b      	ldr	r3, [r3, #0]
 8005ff8:	4a5c      	ldr	r2, [pc, #368]	; (800616c <HAL_TIM_Base_MspInit+0x1f0>)
 8005ffa:	4293      	cmp	r3, r2
 8005ffc:	d10e      	bne.n	800601c <HAL_TIM_Base_MspInit+0xa0>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8005ffe:	2300      	movs	r3, #0
 8006000:	623b      	str	r3, [r7, #32]
 8006002:	4b59      	ldr	r3, [pc, #356]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 8006004:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006006:	4a58      	ldr	r2, [pc, #352]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 8006008:	f043 0302 	orr.w	r3, r3, #2
 800600c:	6413      	str	r3, [r2, #64]	; 0x40
 800600e:	4b56      	ldr	r3, [pc, #344]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 8006010:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006012:	f003 0302 	and.w	r3, r3, #2
 8006016:	623b      	str	r3, [r7, #32]
 8006018:	6a3b      	ldr	r3, [r7, #32]
}
 800601a:	e09f      	b.n	800615c <HAL_TIM_Base_MspInit+0x1e0>
  else if(htim_base->Instance==TIM4)
 800601c:	687b      	ldr	r3, [r7, #4]
 800601e:	681b      	ldr	r3, [r3, #0]
 8006020:	4a53      	ldr	r2, [pc, #332]	; (8006170 <HAL_TIM_Base_MspInit+0x1f4>)
 8006022:	4293      	cmp	r3, r2
 8006024:	d15f      	bne.n	80060e6 <HAL_TIM_Base_MspInit+0x16a>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8006026:	2300      	movs	r3, #0
 8006028:	61fb      	str	r3, [r7, #28]
 800602a:	4b4f      	ldr	r3, [pc, #316]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 800602c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800602e:	4a4e      	ldr	r2, [pc, #312]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 8006030:	f043 0304 	orr.w	r3, r3, #4
 8006034:	6413      	str	r3, [r2, #64]	; 0x40
 8006036:	4b4c      	ldr	r3, [pc, #304]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 8006038:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800603a:	f003 0304 	and.w	r3, r3, #4
 800603e:	61fb      	str	r3, [r7, #28]
 8006040:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8006042:	2300      	movs	r3, #0
 8006044:	61bb      	str	r3, [r7, #24]
 8006046:	4b48      	ldr	r3, [pc, #288]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 8006048:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800604a:	4a47      	ldr	r2, [pc, #284]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 800604c:	f043 0302 	orr.w	r3, r3, #2
 8006050:	6313      	str	r3, [r2, #48]	; 0x30
 8006052:	4b45      	ldr	r3, [pc, #276]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 8006054:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006056:	f003 0302 	and.w	r3, r3, #2
 800605a:	61bb      	str	r3, [r7, #24]
 800605c:	69bb      	ldr	r3, [r7, #24]
    GPIO_InitStruct.Pin = RC_PWM1_Pin|GPIO_PIN_9;
 800605e:	f44f 7340 	mov.w	r3, #768	; 0x300
 8006062:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8006064:	2302      	movs	r3, #2
 8006066:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006068:	2300      	movs	r3, #0
 800606a:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800606c:	2300      	movs	r3, #0
 800606e:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8006070:	2302      	movs	r3, #2
 8006072:	63fb      	str	r3, [r7, #60]	; 0x3c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8006074:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006078:	4619      	mov	r1, r3
 800607a:	483e      	ldr	r0, [pc, #248]	; (8006174 <HAL_TIM_Base_MspInit+0x1f8>)
 800607c:	f002 f930 	bl	80082e0 <HAL_GPIO_Init>
    hdma_tim4_ch3.Instance = DMA1_Stream7;
 8006080:	4b3d      	ldr	r3, [pc, #244]	; (8006178 <HAL_TIM_Base_MspInit+0x1fc>)
 8006082:	4a3e      	ldr	r2, [pc, #248]	; (800617c <HAL_TIM_Base_MspInit+0x200>)
 8006084:	601a      	str	r2, [r3, #0]
    hdma_tim4_ch3.Init.Channel = DMA_CHANNEL_2;
 8006086:	4b3c      	ldr	r3, [pc, #240]	; (8006178 <HAL_TIM_Base_MspInit+0x1fc>)
 8006088:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800608c:	605a      	str	r2, [r3, #4]
    hdma_tim4_ch3.Init.Direction = DMA_PERIPH_TO_MEMORY;
 800608e:	4b3a      	ldr	r3, [pc, #232]	; (8006178 <HAL_TIM_Base_MspInit+0x1fc>)
 8006090:	2200      	movs	r2, #0
 8006092:	609a      	str	r2, [r3, #8]
    hdma_tim4_ch3.Init.PeriphInc = DMA_PINC_DISABLE;
 8006094:	4b38      	ldr	r3, [pc, #224]	; (8006178 <HAL_TIM_Base_MspInit+0x1fc>)
 8006096:	2200      	movs	r2, #0
 8006098:	60da      	str	r2, [r3, #12]
    hdma_tim4_ch3.Init.MemInc = DMA_MINC_ENABLE;
 800609a:	4b37      	ldr	r3, [pc, #220]	; (8006178 <HAL_TIM_Base_MspInit+0x1fc>)
 800609c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80060a0:	611a      	str	r2, [r3, #16]
    hdma_tim4_ch3.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 80060a2:	4b35      	ldr	r3, [pc, #212]	; (8006178 <HAL_TIM_Base_MspInit+0x1fc>)
 80060a4:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80060a8:	615a      	str	r2, [r3, #20]
    hdma_tim4_ch3.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 80060aa:	4b33      	ldr	r3, [pc, #204]	; (8006178 <HAL_TIM_Base_MspInit+0x1fc>)
 80060ac:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80060b0:	619a      	str	r2, [r3, #24]
    hdma_tim4_ch3.Init.Mode = DMA_CIRCULAR;
 80060b2:	4b31      	ldr	r3, [pc, #196]	; (8006178 <HAL_TIM_Base_MspInit+0x1fc>)
 80060b4:	f44f 7280 	mov.w	r2, #256	; 0x100
 80060b8:	61da      	str	r2, [r3, #28]
    hdma_tim4_ch3.Init.Priority = DMA_PRIORITY_MEDIUM;
 80060ba:	4b2f      	ldr	r3, [pc, #188]	; (8006178 <HAL_TIM_Base_MspInit+0x1fc>)
 80060bc:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 80060c0:	621a      	str	r2, [r3, #32]
    hdma_tim4_ch3.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80060c2:	4b2d      	ldr	r3, [pc, #180]	; (8006178 <HAL_TIM_Base_MspInit+0x1fc>)
 80060c4:	2200      	movs	r2, #0
 80060c6:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_tim4_ch3) != HAL_OK)
 80060c8:	482b      	ldr	r0, [pc, #172]	; (8006178 <HAL_TIM_Base_MspInit+0x1fc>)
 80060ca:	f001 faf9 	bl	80076c0 <HAL_DMA_Init>
 80060ce:	4603      	mov	r3, r0
 80060d0:	2b00      	cmp	r3, #0
 80060d2:	d001      	beq.n	80060d8 <HAL_TIM_Base_MspInit+0x15c>
      Error_Handler();
 80060d4:	f7ff fddc 	bl	8005c90 <Error_Handler>
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC3],hdma_tim4_ch3);
 80060d8:	687b      	ldr	r3, [r7, #4]
 80060da:	4a27      	ldr	r2, [pc, #156]	; (8006178 <HAL_TIM_Base_MspInit+0x1fc>)
 80060dc:	62da      	str	r2, [r3, #44]	; 0x2c
 80060de:	4a26      	ldr	r2, [pc, #152]	; (8006178 <HAL_TIM_Base_MspInit+0x1fc>)
 80060e0:	687b      	ldr	r3, [r7, #4]
 80060e2:	6393      	str	r3, [r2, #56]	; 0x38
}
 80060e4:	e03a      	b.n	800615c <HAL_TIM_Base_MspInit+0x1e0>
  else if(htim_base->Instance==TIM5)
 80060e6:	687b      	ldr	r3, [r7, #4]
 80060e8:	681b      	ldr	r3, [r3, #0]
 80060ea:	4a25      	ldr	r2, [pc, #148]	; (8006180 <HAL_TIM_Base_MspInit+0x204>)
 80060ec:	4293      	cmp	r3, r2
 80060ee:	d10e      	bne.n	800610e <HAL_TIM_Base_MspInit+0x192>
    __HAL_RCC_TIM5_CLK_ENABLE();
 80060f0:	2300      	movs	r3, #0
 80060f2:	617b      	str	r3, [r7, #20]
 80060f4:	4b1c      	ldr	r3, [pc, #112]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 80060f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80060f8:	4a1b      	ldr	r2, [pc, #108]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 80060fa:	f043 0308 	orr.w	r3, r3, #8
 80060fe:	6413      	str	r3, [r2, #64]	; 0x40
 8006100:	4b19      	ldr	r3, [pc, #100]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 8006102:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006104:	f003 0308 	and.w	r3, r3, #8
 8006108:	617b      	str	r3, [r7, #20]
 800610a:	697b      	ldr	r3, [r7, #20]
}
 800610c:	e026      	b.n	800615c <HAL_TIM_Base_MspInit+0x1e0>
  else if(htim_base->Instance==TIM13)
 800610e:	687b      	ldr	r3, [r7, #4]
 8006110:	681b      	ldr	r3, [r3, #0]
 8006112:	4a1c      	ldr	r2, [pc, #112]	; (8006184 <HAL_TIM_Base_MspInit+0x208>)
 8006114:	4293      	cmp	r3, r2
 8006116:	d10e      	bne.n	8006136 <HAL_TIM_Base_MspInit+0x1ba>
    __HAL_RCC_TIM13_CLK_ENABLE();
 8006118:	2300      	movs	r3, #0
 800611a:	613b      	str	r3, [r7, #16]
 800611c:	4b12      	ldr	r3, [pc, #72]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 800611e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006120:	4a11      	ldr	r2, [pc, #68]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 8006122:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006126:	6413      	str	r3, [r2, #64]	; 0x40
 8006128:	4b0f      	ldr	r3, [pc, #60]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 800612a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800612c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006130:	613b      	str	r3, [r7, #16]
 8006132:	693b      	ldr	r3, [r7, #16]
}
 8006134:	e012      	b.n	800615c <HAL_TIM_Base_MspInit+0x1e0>
  else if(htim_base->Instance==TIM14)
 8006136:	687b      	ldr	r3, [r7, #4]
 8006138:	681b      	ldr	r3, [r3, #0]
 800613a:	4a13      	ldr	r2, [pc, #76]	; (8006188 <HAL_TIM_Base_MspInit+0x20c>)
 800613c:	4293      	cmp	r3, r2
 800613e:	d10d      	bne.n	800615c <HAL_TIM_Base_MspInit+0x1e0>
    __HAL_RCC_TIM14_CLK_ENABLE();
 8006140:	2300      	movs	r3, #0
 8006142:	60fb      	str	r3, [r7, #12]
 8006144:	4b08      	ldr	r3, [pc, #32]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 8006146:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006148:	4a07      	ldr	r2, [pc, #28]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 800614a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800614e:	6413      	str	r3, [r2, #64]	; 0x40
 8006150:	4b05      	ldr	r3, [pc, #20]	; (8006168 <HAL_TIM_Base_MspInit+0x1ec>)
 8006152:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006154:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006158:	60fb      	str	r3, [r7, #12]
 800615a:	68fb      	ldr	r3, [r7, #12]
}
 800615c:	bf00      	nop
 800615e:	3740      	adds	r7, #64	; 0x40
 8006160:	46bd      	mov	sp, r7
 8006162:	bd80      	pop	{r7, pc}
 8006164:	40010000 	.word	0x40010000
 8006168:	40023800 	.word	0x40023800
 800616c:	40000400 	.word	0x40000400
 8006170:	40000800 	.word	0x40000800
 8006174:	40020400 	.word	0x40020400
 8006178:	200009f0 	.word	0x200009f0
 800617c:	400260b8 	.word	0x400260b8
 8006180:	40000c00 	.word	0x40000c00
 8006184:	40001c00 	.word	0x40001c00
 8006188:	40002000 	.word	0x40002000

0800618c <HAL_TIM_Encoder_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_encoder: TIM_Encoder handle pointer
* @retval None
*/
void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* htim_encoder)
{
 800618c:	b580      	push	{r7, lr}
 800618e:	b08a      	sub	sp, #40	; 0x28
 8006190:	af00      	add	r7, sp, #0
 8006192:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8006194:	f107 0314 	add.w	r3, r7, #20
 8006198:	2200      	movs	r2, #0
 800619a:	601a      	str	r2, [r3, #0]
 800619c:	605a      	str	r2, [r3, #4]
 800619e:	609a      	str	r2, [r3, #8]
 80061a0:	60da      	str	r2, [r3, #12]
 80061a2:	611a      	str	r2, [r3, #16]
  if(htim_encoder->Instance==TIM8)
 80061a4:	687b      	ldr	r3, [r7, #4]
 80061a6:	681b      	ldr	r3, [r3, #0]
 80061a8:	4a19      	ldr	r2, [pc, #100]	; (8006210 <HAL_TIM_Encoder_MspInit+0x84>)
 80061aa:	4293      	cmp	r3, r2
 80061ac:	d12b      	bne.n	8006206 <HAL_TIM_Encoder_MspInit+0x7a>
  {
  /* USER CODE BEGIN TIM8_MspInit 0 */

  /* USER CODE END TIM8_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM8_CLK_ENABLE();
 80061ae:	2300      	movs	r3, #0
 80061b0:	613b      	str	r3, [r7, #16]
 80061b2:	4b18      	ldr	r3, [pc, #96]	; (8006214 <HAL_TIM_Encoder_MspInit+0x88>)
 80061b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80061b6:	4a17      	ldr	r2, [pc, #92]	; (8006214 <HAL_TIM_Encoder_MspInit+0x88>)
 80061b8:	f043 0302 	orr.w	r3, r3, #2
 80061bc:	6453      	str	r3, [r2, #68]	; 0x44
 80061be:	4b15      	ldr	r3, [pc, #84]	; (8006214 <HAL_TIM_Encoder_MspInit+0x88>)
 80061c0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80061c2:	f003 0302 	and.w	r3, r3, #2
 80061c6:	613b      	str	r3, [r7, #16]
 80061c8:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80061ca:	2300      	movs	r3, #0
 80061cc:	60fb      	str	r3, [r7, #12]
 80061ce:	4b11      	ldr	r3, [pc, #68]	; (8006214 <HAL_TIM_Encoder_MspInit+0x88>)
 80061d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80061d2:	4a10      	ldr	r2, [pc, #64]	; (8006214 <HAL_TIM_Encoder_MspInit+0x88>)
 80061d4:	f043 0304 	orr.w	r3, r3, #4
 80061d8:	6313      	str	r3, [r2, #48]	; 0x30
 80061da:	4b0e      	ldr	r3, [pc, #56]	; (8006214 <HAL_TIM_Encoder_MspInit+0x88>)
 80061dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80061de:	f003 0304 	and.w	r3, r3, #4
 80061e2:	60fb      	str	r3, [r7, #12]
 80061e4:	68fb      	ldr	r3, [r7, #12]
    /**TIM8 GPIO Configuration
    PC6     ------> TIM8_CH1
    PC7     ------> TIM8_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80061e6:	23c0      	movs	r3, #192	; 0xc0
 80061e8:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80061ea:	2302      	movs	r3, #2
 80061ec:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80061ee:	2300      	movs	r3, #0
 80061f0:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80061f2:	2300      	movs	r3, #0
 80061f4:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 80061f6:	2303      	movs	r3, #3
 80061f8:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80061fa:	f107 0314 	add.w	r3, r7, #20
 80061fe:	4619      	mov	r1, r3
 8006200:	4805      	ldr	r0, [pc, #20]	; (8006218 <HAL_TIM_Encoder_MspInit+0x8c>)
 8006202:	f002 f86d 	bl	80082e0 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM8_MspInit 1 */

  /* USER CODE END TIM8_MspInit 1 */
  }

}
 8006206:	bf00      	nop
 8006208:	3728      	adds	r7, #40	; 0x28
 800620a:	46bd      	mov	sp, r7
 800620c:	bd80      	pop	{r7, pc}
 800620e:	bf00      	nop
 8006210:	40010400 	.word	0x40010400
 8006214:	40023800 	.word	0x40023800
 8006218:	40020800 	.word	0x40020800

0800621c <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 800621c:	b580      	push	{r7, lr}
 800621e:	b08a      	sub	sp, #40	; 0x28
 8006220:	af00      	add	r7, sp, #0
 8006222:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8006224:	f107 0314 	add.w	r3, r7, #20
 8006228:	2200      	movs	r2, #0
 800622a:	601a      	str	r2, [r3, #0]
 800622c:	605a      	str	r2, [r3, #4]
 800622e:	609a      	str	r2, [r3, #8]
 8006230:	60da      	str	r2, [r3, #12]
 8006232:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 8006234:	687b      	ldr	r3, [r7, #4]
 8006236:	681b      	ldr	r3, [r3, #0]
 8006238:	4a37      	ldr	r2, [pc, #220]	; (8006318 <HAL_TIM_MspPostInit+0xfc>)
 800623a:	4293      	cmp	r3, r2
 800623c:	d11f      	bne.n	800627e <HAL_TIM_MspPostInit+0x62>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800623e:	2300      	movs	r3, #0
 8006240:	613b      	str	r3, [r7, #16]
 8006242:	4b36      	ldr	r3, [pc, #216]	; (800631c <HAL_TIM_MspPostInit+0x100>)
 8006244:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006246:	4a35      	ldr	r2, [pc, #212]	; (800631c <HAL_TIM_MspPostInit+0x100>)
 8006248:	f043 0301 	orr.w	r3, r3, #1
 800624c:	6313      	str	r3, [r2, #48]	; 0x30
 800624e:	4b33      	ldr	r3, [pc, #204]	; (800631c <HAL_TIM_MspPostInit+0x100>)
 8006250:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006252:	f003 0301 	and.w	r3, r3, #1
 8006256:	613b      	str	r3, [r7, #16]
 8006258:	693b      	ldr	r3, [r7, #16]
    /**TIM1 GPIO Configuration
    PA11     ------> TIM1_CH4
    */
    GPIO_InitStruct.Pin = Servo2_PWM_Pin;
 800625a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800625e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8006260:	2302      	movs	r3, #2
 8006262:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006264:	2300      	movs	r3, #0
 8006266:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006268:	2300      	movs	r3, #0
 800626a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 800626c:	2301      	movs	r3, #1
 800626e:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(Servo2_PWM_GPIO_Port, &GPIO_InitStruct);
 8006270:	f107 0314 	add.w	r3, r7, #20
 8006274:	4619      	mov	r1, r3
 8006276:	482a      	ldr	r0, [pc, #168]	; (8006320 <HAL_TIM_MspPostInit+0x104>)
 8006278:	f002 f832 	bl	80082e0 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 800627c:	e047      	b.n	800630e <HAL_TIM_MspPostInit+0xf2>
  else if(htim->Instance==TIM2)
 800627e:	687b      	ldr	r3, [r7, #4]
 8006280:	681b      	ldr	r3, [r3, #0]
 8006282:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006286:	d11f      	bne.n	80062c8 <HAL_TIM_MspPostInit+0xac>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8006288:	2300      	movs	r3, #0
 800628a:	60fb      	str	r3, [r7, #12]
 800628c:	4b23      	ldr	r3, [pc, #140]	; (800631c <HAL_TIM_MspPostInit+0x100>)
 800628e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006290:	4a22      	ldr	r2, [pc, #136]	; (800631c <HAL_TIM_MspPostInit+0x100>)
 8006292:	f043 0301 	orr.w	r3, r3, #1
 8006296:	6313      	str	r3, [r2, #48]	; 0x30
 8006298:	4b20      	ldr	r3, [pc, #128]	; (800631c <HAL_TIM_MspPostInit+0x100>)
 800629a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800629c:	f003 0301 	and.w	r3, r3, #1
 80062a0:	60fb      	str	r3, [r7, #12]
 80062a2:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = Servo1_PWM_Pin;
 80062a4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80062a8:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80062aa:	2302      	movs	r3, #2
 80062ac:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80062ae:	2300      	movs	r3, #0
 80062b0:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80062b2:	2300      	movs	r3, #0
 80062b4:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 80062b6:	2301      	movs	r3, #1
 80062b8:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(Servo1_PWM_GPIO_Port, &GPIO_InitStruct);
 80062ba:	f107 0314 	add.w	r3, r7, #20
 80062be:	4619      	mov	r1, r3
 80062c0:	4817      	ldr	r0, [pc, #92]	; (8006320 <HAL_TIM_MspPostInit+0x104>)
 80062c2:	f002 f80d 	bl	80082e0 <HAL_GPIO_Init>
}
 80062c6:	e022      	b.n	800630e <HAL_TIM_MspPostInit+0xf2>
  else if(htim->Instance==TIM3)
 80062c8:	687b      	ldr	r3, [r7, #4]
 80062ca:	681b      	ldr	r3, [r3, #0]
 80062cc:	4a15      	ldr	r2, [pc, #84]	; (8006324 <HAL_TIM_MspPostInit+0x108>)
 80062ce:	4293      	cmp	r3, r2
 80062d0:	d11d      	bne.n	800630e <HAL_TIM_MspPostInit+0xf2>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80062d2:	2300      	movs	r3, #0
 80062d4:	60bb      	str	r3, [r7, #8]
 80062d6:	4b11      	ldr	r3, [pc, #68]	; (800631c <HAL_TIM_MspPostInit+0x100>)
 80062d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80062da:	4a10      	ldr	r2, [pc, #64]	; (800631c <HAL_TIM_MspPostInit+0x100>)
 80062dc:	f043 0301 	orr.w	r3, r3, #1
 80062e0:	6313      	str	r3, [r2, #48]	; 0x30
 80062e2:	4b0e      	ldr	r3, [pc, #56]	; (800631c <HAL_TIM_MspPostInit+0x100>)
 80062e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80062e6:	f003 0301 	and.w	r3, r3, #1
 80062ea:	60bb      	str	r3, [r7, #8]
 80062ec:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = MotorPWM1_Pin|MotorPWM2_Pin;
 80062ee:	23c0      	movs	r3, #192	; 0xc0
 80062f0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80062f2:	2302      	movs	r3, #2
 80062f4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80062f6:	2300      	movs	r3, #0
 80062f8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80062fa:	2300      	movs	r3, #0
 80062fc:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 80062fe:	2302      	movs	r3, #2
 8006300:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8006302:	f107 0314 	add.w	r3, r7, #20
 8006306:	4619      	mov	r1, r3
 8006308:	4805      	ldr	r0, [pc, #20]	; (8006320 <HAL_TIM_MspPostInit+0x104>)
 800630a:	f001 ffe9 	bl	80082e0 <HAL_GPIO_Init>
}
 800630e:	bf00      	nop
 8006310:	3728      	adds	r7, #40	; 0x28
 8006312:	46bd      	mov	sp, r7
 8006314:	bd80      	pop	{r7, pc}
 8006316:	bf00      	nop
 8006318:	40010000 	.word	0x40010000
 800631c:	40023800 	.word	0x40023800
 8006320:	40020000 	.word	0x40020000
 8006324:	40000400 	.word	0x40000400

08006328 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8006328:	b580      	push	{r7, lr}
 800632a:	b090      	sub	sp, #64	; 0x40
 800632c:	af00      	add	r7, sp, #0
 800632e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8006330:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006334:	2200      	movs	r2, #0
 8006336:	601a      	str	r2, [r3, #0]
 8006338:	605a      	str	r2, [r3, #4]
 800633a:	609a      	str	r2, [r3, #8]
 800633c:	60da      	str	r2, [r3, #12]
 800633e:	611a      	str	r2, [r3, #16]
  if(huart->Instance==UART5)
 8006340:	687b      	ldr	r3, [r7, #4]
 8006342:	681b      	ldr	r3, [r3, #0]
 8006344:	4a7c      	ldr	r2, [pc, #496]	; (8006538 <HAL_UART_MspInit+0x210>)
 8006346:	4293      	cmp	r3, r2
 8006348:	d14b      	bne.n	80063e2 <HAL_UART_MspInit+0xba>
  {
  /* USER CODE BEGIN UART5_MspInit 0 */

  /* USER CODE END UART5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_UART5_CLK_ENABLE();
 800634a:	2300      	movs	r3, #0
 800634c:	62bb      	str	r3, [r7, #40]	; 0x28
 800634e:	4b7b      	ldr	r3, [pc, #492]	; (800653c <HAL_UART_MspInit+0x214>)
 8006350:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006352:	4a7a      	ldr	r2, [pc, #488]	; (800653c <HAL_UART_MspInit+0x214>)
 8006354:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8006358:	6413      	str	r3, [r2, #64]	; 0x40
 800635a:	4b78      	ldr	r3, [pc, #480]	; (800653c <HAL_UART_MspInit+0x214>)
 800635c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800635e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8006362:	62bb      	str	r3, [r7, #40]	; 0x28
 8006364:	6abb      	ldr	r3, [r7, #40]	; 0x28

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8006366:	2300      	movs	r3, #0
 8006368:	627b      	str	r3, [r7, #36]	; 0x24
 800636a:	4b74      	ldr	r3, [pc, #464]	; (800653c <HAL_UART_MspInit+0x214>)
 800636c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800636e:	4a73      	ldr	r2, [pc, #460]	; (800653c <HAL_UART_MspInit+0x214>)
 8006370:	f043 0304 	orr.w	r3, r3, #4
 8006374:	6313      	str	r3, [r2, #48]	; 0x30
 8006376:	4b71      	ldr	r3, [pc, #452]	; (800653c <HAL_UART_MspInit+0x214>)
 8006378:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800637a:	f003 0304 	and.w	r3, r3, #4
 800637e:	627b      	str	r3, [r7, #36]	; 0x24
 8006380:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8006382:	2300      	movs	r3, #0
 8006384:	623b      	str	r3, [r7, #32]
 8006386:	4b6d      	ldr	r3, [pc, #436]	; (800653c <HAL_UART_MspInit+0x214>)
 8006388:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800638a:	4a6c      	ldr	r2, [pc, #432]	; (800653c <HAL_UART_MspInit+0x214>)
 800638c:	f043 0308 	orr.w	r3, r3, #8
 8006390:	6313      	str	r3, [r2, #48]	; 0x30
 8006392:	4b6a      	ldr	r3, [pc, #424]	; (800653c <HAL_UART_MspInit+0x214>)
 8006394:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006396:	f003 0308 	and.w	r3, r3, #8
 800639a:	623b      	str	r3, [r7, #32]
 800639c:	6a3b      	ldr	r3, [r7, #32]
    /**UART5 GPIO Configuration
    PC12     ------> UART5_TX
    PD2     ------> UART5_RX
    */
    GPIO_InitStruct.Pin = NUCLEO_TX_Pin;
 800639e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80063a2:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80063a4:	2302      	movs	r3, #2
 80063a6:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80063a8:	2300      	movs	r3, #0
 80063aa:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80063ac:	2303      	movs	r3, #3
 80063ae:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 80063b0:	2308      	movs	r3, #8
 80063b2:	63fb      	str	r3, [r7, #60]	; 0x3c
    HAL_GPIO_Init(NUCLEO_TX_GPIO_Port, &GPIO_InitStruct);
 80063b4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80063b8:	4619      	mov	r1, r3
 80063ba:	4861      	ldr	r0, [pc, #388]	; (8006540 <HAL_UART_MspInit+0x218>)
 80063bc:	f001 ff90 	bl	80082e0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = NUCLEO_RX_Pin;
 80063c0:	2304      	movs	r3, #4
 80063c2:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80063c4:	2302      	movs	r3, #2
 80063c6:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80063c8:	2300      	movs	r3, #0
 80063ca:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80063cc:	2303      	movs	r3, #3
 80063ce:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 80063d0:	2308      	movs	r3, #8
 80063d2:	63fb      	str	r3, [r7, #60]	; 0x3c
    HAL_GPIO_Init(NUCLEO_RX_GPIO_Port, &GPIO_InitStruct);
 80063d4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80063d8:	4619      	mov	r1, r3
 80063da:	485a      	ldr	r0, [pc, #360]	; (8006544 <HAL_UART_MspInit+0x21c>)
 80063dc:	f001 ff80 	bl	80082e0 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }

}
 80063e0:	e0a6      	b.n	8006530 <HAL_UART_MspInit+0x208>
  else if(huart->Instance==USART1)
 80063e2:	687b      	ldr	r3, [r7, #4]
 80063e4:	681b      	ldr	r3, [r3, #0]
 80063e6:	4a58      	ldr	r2, [pc, #352]	; (8006548 <HAL_UART_MspInit+0x220>)
 80063e8:	4293      	cmp	r3, r2
 80063ea:	d135      	bne.n	8006458 <HAL_UART_MspInit+0x130>
    __HAL_RCC_USART1_CLK_ENABLE();
 80063ec:	2300      	movs	r3, #0
 80063ee:	61fb      	str	r3, [r7, #28]
 80063f0:	4b52      	ldr	r3, [pc, #328]	; (800653c <HAL_UART_MspInit+0x214>)
 80063f2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80063f4:	4a51      	ldr	r2, [pc, #324]	; (800653c <HAL_UART_MspInit+0x214>)
 80063f6:	f043 0310 	orr.w	r3, r3, #16
 80063fa:	6453      	str	r3, [r2, #68]	; 0x44
 80063fc:	4b4f      	ldr	r3, [pc, #316]	; (800653c <HAL_UART_MspInit+0x214>)
 80063fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006400:	f003 0310 	and.w	r3, r3, #16
 8006404:	61fb      	str	r3, [r7, #28]
 8006406:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8006408:	2300      	movs	r3, #0
 800640a:	61bb      	str	r3, [r7, #24]
 800640c:	4b4b      	ldr	r3, [pc, #300]	; (800653c <HAL_UART_MspInit+0x214>)
 800640e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006410:	4a4a      	ldr	r2, [pc, #296]	; (800653c <HAL_UART_MspInit+0x214>)
 8006412:	f043 0301 	orr.w	r3, r3, #1
 8006416:	6313      	str	r3, [r2, #48]	; 0x30
 8006418:	4b48      	ldr	r3, [pc, #288]	; (800653c <HAL_UART_MspInit+0x214>)
 800641a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800641c:	f003 0301 	and.w	r3, r3, #1
 8006420:	61bb      	str	r3, [r7, #24]
 8006422:	69bb      	ldr	r3, [r7, #24]
    GPIO_InitStruct.Pin = TEL_TX_Pin|TEL_RX_Pin;
 8006424:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8006428:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800642a:	2302      	movs	r3, #2
 800642c:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800642e:	2300      	movs	r3, #0
 8006430:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8006432:	2303      	movs	r3, #3
 8006434:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8006436:	2307      	movs	r3, #7
 8006438:	63fb      	str	r3, [r7, #60]	; 0x3c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800643a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800643e:	4619      	mov	r1, r3
 8006440:	4842      	ldr	r0, [pc, #264]	; (800654c <HAL_UART_MspInit+0x224>)
 8006442:	f001 ff4d 	bl	80082e0 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 8006446:	2200      	movs	r2, #0
 8006448:	2100      	movs	r1, #0
 800644a:	2025      	movs	r0, #37	; 0x25
 800644c:	f001 f8f3 	bl	8007636 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8006450:	2025      	movs	r0, #37	; 0x25
 8006452:	f001 f90c 	bl	800766e <HAL_NVIC_EnableIRQ>
}
 8006456:	e06b      	b.n	8006530 <HAL_UART_MspInit+0x208>
  else if(huart->Instance==USART2)
 8006458:	687b      	ldr	r3, [r7, #4]
 800645a:	681b      	ldr	r3, [r3, #0]
 800645c:	4a3c      	ldr	r2, [pc, #240]	; (8006550 <HAL_UART_MspInit+0x228>)
 800645e:	4293      	cmp	r3, r2
 8006460:	d12c      	bne.n	80064bc <HAL_UART_MspInit+0x194>
    __HAL_RCC_USART2_CLK_ENABLE();
 8006462:	2300      	movs	r3, #0
 8006464:	617b      	str	r3, [r7, #20]
 8006466:	4b35      	ldr	r3, [pc, #212]	; (800653c <HAL_UART_MspInit+0x214>)
 8006468:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800646a:	4a34      	ldr	r2, [pc, #208]	; (800653c <HAL_UART_MspInit+0x214>)
 800646c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006470:	6413      	str	r3, [r2, #64]	; 0x40
 8006472:	4b32      	ldr	r3, [pc, #200]	; (800653c <HAL_UART_MspInit+0x214>)
 8006474:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006476:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800647a:	617b      	str	r3, [r7, #20]
 800647c:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800647e:	2300      	movs	r3, #0
 8006480:	613b      	str	r3, [r7, #16]
 8006482:	4b2e      	ldr	r3, [pc, #184]	; (800653c <HAL_UART_MspInit+0x214>)
 8006484:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006486:	4a2d      	ldr	r2, [pc, #180]	; (800653c <HAL_UART_MspInit+0x214>)
 8006488:	f043 0301 	orr.w	r3, r3, #1
 800648c:	6313      	str	r3, [r2, #48]	; 0x30
 800648e:	4b2b      	ldr	r3, [pc, #172]	; (800653c <HAL_UART_MspInit+0x214>)
 8006490:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006492:	f003 0301 	and.w	r3, r3, #1
 8006496:	613b      	str	r3, [r7, #16]
 8006498:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = STLINK_TX_Pin|STLINK_RX_Pin;
 800649a:	230c      	movs	r3, #12
 800649c:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800649e:	2302      	movs	r3, #2
 80064a0:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80064a2:	2300      	movs	r3, #0
 80064a4:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80064a6:	2303      	movs	r3, #3
 80064a8:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 80064aa:	2307      	movs	r3, #7
 80064ac:	63fb      	str	r3, [r7, #60]	; 0x3c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80064ae:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80064b2:	4619      	mov	r1, r3
 80064b4:	4825      	ldr	r0, [pc, #148]	; (800654c <HAL_UART_MspInit+0x224>)
 80064b6:	f001 ff13 	bl	80082e0 <HAL_GPIO_Init>
}
 80064ba:	e039      	b.n	8006530 <HAL_UART_MspInit+0x208>
  else if(huart->Instance==USART3)
 80064bc:	687b      	ldr	r3, [r7, #4]
 80064be:	681b      	ldr	r3, [r3, #0]
 80064c0:	4a24      	ldr	r2, [pc, #144]	; (8006554 <HAL_UART_MspInit+0x22c>)
 80064c2:	4293      	cmp	r3, r2
 80064c4:	d134      	bne.n	8006530 <HAL_UART_MspInit+0x208>
    __HAL_RCC_USART3_CLK_ENABLE();
 80064c6:	2300      	movs	r3, #0
 80064c8:	60fb      	str	r3, [r7, #12]
 80064ca:	4b1c      	ldr	r3, [pc, #112]	; (800653c <HAL_UART_MspInit+0x214>)
 80064cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80064ce:	4a1b      	ldr	r2, [pc, #108]	; (800653c <HAL_UART_MspInit+0x214>)
 80064d0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80064d4:	6413      	str	r3, [r2, #64]	; 0x40
 80064d6:	4b19      	ldr	r3, [pc, #100]	; (800653c <HAL_UART_MspInit+0x214>)
 80064d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80064da:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80064de:	60fb      	str	r3, [r7, #12]
 80064e0:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80064e2:	2300      	movs	r3, #0
 80064e4:	60bb      	str	r3, [r7, #8]
 80064e6:	4b15      	ldr	r3, [pc, #84]	; (800653c <HAL_UART_MspInit+0x214>)
 80064e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80064ea:	4a14      	ldr	r2, [pc, #80]	; (800653c <HAL_UART_MspInit+0x214>)
 80064ec:	f043 0304 	orr.w	r3, r3, #4
 80064f0:	6313      	str	r3, [r2, #48]	; 0x30
 80064f2:	4b12      	ldr	r3, [pc, #72]	; (800653c <HAL_UART_MspInit+0x214>)
 80064f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80064f6:	f003 0304 	and.w	r3, r3, #4
 80064fa:	60bb      	str	r3, [r7, #8]
 80064fc:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = TB_TX_Pin|TB_RX_Pin;
 80064fe:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8006502:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8006504:	2302      	movs	r3, #2
 8006506:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006508:	2300      	movs	r3, #0
 800650a:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800650c:	2303      	movs	r3, #3
 800650e:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 8006510:	2307      	movs	r3, #7
 8006512:	63fb      	str	r3, [r7, #60]	; 0x3c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8006514:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006518:	4619      	mov	r1, r3
 800651a:	4809      	ldr	r0, [pc, #36]	; (8006540 <HAL_UART_MspInit+0x218>)
 800651c:	f001 fee0 	bl	80082e0 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 8006520:	2200      	movs	r2, #0
 8006522:	2100      	movs	r1, #0
 8006524:	2027      	movs	r0, #39	; 0x27
 8006526:	f001 f886 	bl	8007636 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
 800652a:	2027      	movs	r0, #39	; 0x27
 800652c:	f001 f89f 	bl	800766e <HAL_NVIC_EnableIRQ>
}
 8006530:	bf00      	nop
 8006532:	3740      	adds	r7, #64	; 0x40
 8006534:	46bd      	mov	sp, r7
 8006536:	bd80      	pop	{r7, pc}
 8006538:	40005000 	.word	0x40005000
 800653c:	40023800 	.word	0x40023800
 8006540:	40020800 	.word	0x40020800
 8006544:	40020c00 	.word	0x40020c00
 8006548:	40011000 	.word	0x40011000
 800654c:	40020000 	.word	0x40020000
 8006550:	40004400 	.word	0x40004400
 8006554:	40004800 	.word	0x40004800

08006558 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8006558:	b480      	push	{r7}
 800655a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 800655c:	e7fe      	b.n	800655c <NMI_Handler+0x4>

0800655e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800655e:	b480      	push	{r7}
 8006560:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8006562:	e7fe      	b.n	8006562 <HardFault_Handler+0x4>

08006564 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8006564:	b480      	push	{r7}
 8006566:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8006568:	e7fe      	b.n	8006568 <MemManage_Handler+0x4>

0800656a <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800656a:	b480      	push	{r7}
 800656c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800656e:	e7fe      	b.n	800656e <BusFault_Handler+0x4>

08006570 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8006570:	b480      	push	{r7}
 8006572:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8006574:	e7fe      	b.n	8006574 <UsageFault_Handler+0x4>

08006576 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8006576:	b480      	push	{r7}
 8006578:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800657a:	bf00      	nop
 800657c:	46bd      	mov	sp, r7
 800657e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006582:	4770      	bx	lr

08006584 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8006584:	b480      	push	{r7}
 8006586:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8006588:	bf00      	nop
 800658a:	46bd      	mov	sp, r7
 800658c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006590:	4770      	bx	lr

08006592 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8006592:	b480      	push	{r7}
 8006594:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8006596:	bf00      	nop
 8006598:	46bd      	mov	sp, r7
 800659a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800659e:	4770      	bx	lr

080065a0 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80065a0:	b580      	push	{r7, lr}
 80065a2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80065a4:	f000 f98e 	bl	80068c4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80065a8:	bf00      	nop
 80065aa:	bd80      	pop	{r7, pc}

080065ac <EXTI4_IRQHandler>:

/**
  * @brief This function handles EXTI line 4 interrupt.
  */
void EXTI4_IRQHandler(void)
{
 80065ac:	b580      	push	{r7, lr}
 80065ae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI4_IRQn 0 */

  /* USER CODE END EXTI4_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(B1_Pin);
 80065b0:	2010      	movs	r0, #16
 80065b2:	f002 f875 	bl	80086a0 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI4_IRQn 1 */

  /* USER CODE END EXTI4_IRQn 1 */
}
 80065b6:	bf00      	nop
 80065b8:	bd80      	pop	{r7, pc}
	...

080065bc <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 80065bc:	b580      	push	{r7, lr}
 80065be:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 80065c0:	4802      	ldr	r0, [pc, #8]	; (80065cc <TIM2_IRQHandler+0x10>)
 80065c2:	f003 fbcf 	bl	8009d64 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 80065c6:	bf00      	nop
 80065c8:	bd80      	pop	{r7, pc}
 80065ca:	bf00      	nop
 80065cc:	200007f8 	.word	0x200007f8

080065d0 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 80065d0:	b580      	push	{r7, lr}
 80065d2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 80065d4:	4802      	ldr	r0, [pc, #8]	; (80065e0 <USART1_IRQHandler+0x10>)
 80065d6:	f004 fee7 	bl	800b3a8 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 80065da:	bf00      	nop
 80065dc:	bd80      	pop	{r7, pc}
 80065de:	bf00      	nop
 80065e0:	20000a94 	.word	0x20000a94

080065e4 <USART3_IRQHandler>:

/**
  * @brief This function handles USART3 global interrupt.
  */
void USART3_IRQHandler(void)
{
 80065e4:	b580      	push	{r7, lr}
 80065e6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART3_IRQn 0 */

  /* USER CODE END USART3_IRQn 0 */
  HAL_UART_IRQHandler(&huart3);
 80065e8:	4802      	ldr	r0, [pc, #8]	; (80065f4 <USART3_IRQHandler+0x10>)
 80065ea:	f004 fedd 	bl	800b3a8 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART3_IRQn 1 */

  /* USER CODE END USART3_IRQn 1 */
}
 80065ee:	bf00      	nop
 80065f0:	bd80      	pop	{r7, pc}
 80065f2:	bf00      	nop
 80065f4:	20000b1c 	.word	0x20000b1c

080065f8 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 80065f8:	b580      	push	{r7, lr}
 80065fa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(On_Board_Button_Pin);
 80065fc:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8006600:	f002 f84e 	bl	80086a0 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8006604:	bf00      	nop
 8006606:	bd80      	pop	{r7, pc}

08006608 <DMA1_Stream7_IRQHandler>:

/**
  * @brief This function handles DMA1 stream7 global interrupt.
  */
void DMA1_Stream7_IRQHandler(void)
{
 8006608:	b580      	push	{r7, lr}
 800660a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream7_IRQn 0 */

  /* USER CODE END DMA1_Stream7_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_tim4_ch3);
 800660c:	4802      	ldr	r0, [pc, #8]	; (8006618 <DMA1_Stream7_IRQHandler+0x10>)
 800660e:	f001 f9ef 	bl	80079f0 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream7_IRQn 1 */

  /* USER CODE END DMA1_Stream7_IRQn 1 */
}
 8006612:	bf00      	nop
 8006614:	bd80      	pop	{r7, pc}
 8006616:	bf00      	nop
 8006618:	200009f0 	.word	0x200009f0

0800661c <_getpid>:
 800661c:	b480      	push	{r7}
 800661e:	af00      	add	r7, sp, #0
 8006620:	2301      	movs	r3, #1
 8006622:	4618      	mov	r0, r3
 8006624:	46bd      	mov	sp, r7
 8006626:	f85d 7b04 	ldr.w	r7, [sp], #4
 800662a:	4770      	bx	lr

0800662c <_kill>:
 800662c:	b580      	push	{r7, lr}
 800662e:	b082      	sub	sp, #8
 8006630:	af00      	add	r7, sp, #0
 8006632:	6078      	str	r0, [r7, #4]
 8006634:	6039      	str	r1, [r7, #0]
 8006636:	f005 fe1f 	bl	800c278 <__errno>
 800663a:	4603      	mov	r3, r0
 800663c:	2216      	movs	r2, #22
 800663e:	601a      	str	r2, [r3, #0]
 8006640:	f04f 33ff 	mov.w	r3, #4294967295
 8006644:	4618      	mov	r0, r3
 8006646:	3708      	adds	r7, #8
 8006648:	46bd      	mov	sp, r7
 800664a:	bd80      	pop	{r7, pc}

0800664c <_exit>:
 800664c:	b580      	push	{r7, lr}
 800664e:	b082      	sub	sp, #8
 8006650:	af00      	add	r7, sp, #0
 8006652:	6078      	str	r0, [r7, #4]
 8006654:	f04f 31ff 	mov.w	r1, #4294967295
 8006658:	6878      	ldr	r0, [r7, #4]
 800665a:	f7ff ffe7 	bl	800662c <_kill>
 800665e:	e7fe      	b.n	800665e <_exit+0x12>

08006660 <_read>:
 8006660:	b580      	push	{r7, lr}
 8006662:	b086      	sub	sp, #24
 8006664:	af00      	add	r7, sp, #0
 8006666:	60f8      	str	r0, [r7, #12]
 8006668:	60b9      	str	r1, [r7, #8]
 800666a:	607a      	str	r2, [r7, #4]
 800666c:	2300      	movs	r3, #0
 800666e:	617b      	str	r3, [r7, #20]
 8006670:	e00a      	b.n	8006688 <_read+0x28>
 8006672:	f3af 8000 	nop.w
 8006676:	4601      	mov	r1, r0
 8006678:	68bb      	ldr	r3, [r7, #8]
 800667a:	1c5a      	adds	r2, r3, #1
 800667c:	60ba      	str	r2, [r7, #8]
 800667e:	b2ca      	uxtb	r2, r1
 8006680:	701a      	strb	r2, [r3, #0]
 8006682:	697b      	ldr	r3, [r7, #20]
 8006684:	3301      	adds	r3, #1
 8006686:	617b      	str	r3, [r7, #20]
 8006688:	697a      	ldr	r2, [r7, #20]
 800668a:	687b      	ldr	r3, [r7, #4]
 800668c:	429a      	cmp	r2, r3
 800668e:	dbf0      	blt.n	8006672 <_read+0x12>
 8006690:	687b      	ldr	r3, [r7, #4]
 8006692:	4618      	mov	r0, r3
 8006694:	3718      	adds	r7, #24
 8006696:	46bd      	mov	sp, r7
 8006698:	bd80      	pop	{r7, pc}

0800669a <_write>:
 800669a:	b580      	push	{r7, lr}
 800669c:	b086      	sub	sp, #24
 800669e:	af00      	add	r7, sp, #0
 80066a0:	60f8      	str	r0, [r7, #12]
 80066a2:	60b9      	str	r1, [r7, #8]
 80066a4:	607a      	str	r2, [r7, #4]
 80066a6:	2300      	movs	r3, #0
 80066a8:	617b      	str	r3, [r7, #20]
 80066aa:	e009      	b.n	80066c0 <_write+0x26>
 80066ac:	68bb      	ldr	r3, [r7, #8]
 80066ae:	1c5a      	adds	r2, r3, #1
 80066b0:	60ba      	str	r2, [r7, #8]
 80066b2:	781b      	ldrb	r3, [r3, #0]
 80066b4:	4618      	mov	r0, r3
 80066b6:	f3af 8000 	nop.w
 80066ba:	697b      	ldr	r3, [r7, #20]
 80066bc:	3301      	adds	r3, #1
 80066be:	617b      	str	r3, [r7, #20]
 80066c0:	697a      	ldr	r2, [r7, #20]
 80066c2:	687b      	ldr	r3, [r7, #4]
 80066c4:	429a      	cmp	r2, r3
 80066c6:	dbf1      	blt.n	80066ac <_write+0x12>
 80066c8:	687b      	ldr	r3, [r7, #4]
 80066ca:	4618      	mov	r0, r3
 80066cc:	3718      	adds	r7, #24
 80066ce:	46bd      	mov	sp, r7
 80066d0:	bd80      	pop	{r7, pc}

080066d2 <_close>:
 80066d2:	b480      	push	{r7}
 80066d4:	b083      	sub	sp, #12
 80066d6:	af00      	add	r7, sp, #0
 80066d8:	6078      	str	r0, [r7, #4]
 80066da:	f04f 33ff 	mov.w	r3, #4294967295
 80066de:	4618      	mov	r0, r3
 80066e0:	370c      	adds	r7, #12
 80066e2:	46bd      	mov	sp, r7
 80066e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066e8:	4770      	bx	lr

080066ea <_fstat>:
 80066ea:	b480      	push	{r7}
 80066ec:	b083      	sub	sp, #12
 80066ee:	af00      	add	r7, sp, #0
 80066f0:	6078      	str	r0, [r7, #4]
 80066f2:	6039      	str	r1, [r7, #0]
 80066f4:	683b      	ldr	r3, [r7, #0]
 80066f6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80066fa:	605a      	str	r2, [r3, #4]
 80066fc:	2300      	movs	r3, #0
 80066fe:	4618      	mov	r0, r3
 8006700:	370c      	adds	r7, #12
 8006702:	46bd      	mov	sp, r7
 8006704:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006708:	4770      	bx	lr

0800670a <_isatty>:
 800670a:	b480      	push	{r7}
 800670c:	b083      	sub	sp, #12
 800670e:	af00      	add	r7, sp, #0
 8006710:	6078      	str	r0, [r7, #4]
 8006712:	2301      	movs	r3, #1
 8006714:	4618      	mov	r0, r3
 8006716:	370c      	adds	r7, #12
 8006718:	46bd      	mov	sp, r7
 800671a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800671e:	4770      	bx	lr

08006720 <_lseek>:
 8006720:	b480      	push	{r7}
 8006722:	b085      	sub	sp, #20
 8006724:	af00      	add	r7, sp, #0
 8006726:	60f8      	str	r0, [r7, #12]
 8006728:	60b9      	str	r1, [r7, #8]
 800672a:	607a      	str	r2, [r7, #4]
 800672c:	2300      	movs	r3, #0
 800672e:	4618      	mov	r0, r3
 8006730:	3714      	adds	r7, #20
 8006732:	46bd      	mov	sp, r7
 8006734:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006738:	4770      	bx	lr
	...

0800673c <_sbrk>:
 800673c:	b580      	push	{r7, lr}
 800673e:	b086      	sub	sp, #24
 8006740:	af00      	add	r7, sp, #0
 8006742:	6078      	str	r0, [r7, #4]
 8006744:	4a14      	ldr	r2, [pc, #80]	; (8006798 <_sbrk+0x5c>)
 8006746:	4b15      	ldr	r3, [pc, #84]	; (800679c <_sbrk+0x60>)
 8006748:	1ad3      	subs	r3, r2, r3
 800674a:	617b      	str	r3, [r7, #20]
 800674c:	697b      	ldr	r3, [r7, #20]
 800674e:	613b      	str	r3, [r7, #16]
 8006750:	4b13      	ldr	r3, [pc, #76]	; (80067a0 <_sbrk+0x64>)
 8006752:	681b      	ldr	r3, [r3, #0]
 8006754:	2b00      	cmp	r3, #0
 8006756:	d102      	bne.n	800675e <_sbrk+0x22>
 8006758:	4b11      	ldr	r3, [pc, #68]	; (80067a0 <_sbrk+0x64>)
 800675a:	4a12      	ldr	r2, [pc, #72]	; (80067a4 <_sbrk+0x68>)
 800675c:	601a      	str	r2, [r3, #0]
 800675e:	4b10      	ldr	r3, [pc, #64]	; (80067a0 <_sbrk+0x64>)
 8006760:	681a      	ldr	r2, [r3, #0]
 8006762:	687b      	ldr	r3, [r7, #4]
 8006764:	4413      	add	r3, r2
 8006766:	693a      	ldr	r2, [r7, #16]
 8006768:	429a      	cmp	r2, r3
 800676a:	d207      	bcs.n	800677c <_sbrk+0x40>
 800676c:	f005 fd84 	bl	800c278 <__errno>
 8006770:	4603      	mov	r3, r0
 8006772:	220c      	movs	r2, #12
 8006774:	601a      	str	r2, [r3, #0]
 8006776:	f04f 33ff 	mov.w	r3, #4294967295
 800677a:	e009      	b.n	8006790 <_sbrk+0x54>
 800677c:	4b08      	ldr	r3, [pc, #32]	; (80067a0 <_sbrk+0x64>)
 800677e:	681b      	ldr	r3, [r3, #0]
 8006780:	60fb      	str	r3, [r7, #12]
 8006782:	4b07      	ldr	r3, [pc, #28]	; (80067a0 <_sbrk+0x64>)
 8006784:	681a      	ldr	r2, [r3, #0]
 8006786:	687b      	ldr	r3, [r7, #4]
 8006788:	4413      	add	r3, r2
 800678a:	4a05      	ldr	r2, [pc, #20]	; (80067a0 <_sbrk+0x64>)
 800678c:	6013      	str	r3, [r2, #0]
 800678e:	68fb      	ldr	r3, [r7, #12]
 8006790:	4618      	mov	r0, r3
 8006792:	3718      	adds	r7, #24
 8006794:	46bd      	mov	sp, r7
 8006796:	bd80      	pop	{r7, pc}
 8006798:	20020000 	.word	0x20020000
 800679c:	00000400 	.word	0x00000400
 80067a0:	20000b74 	.word	0x20000b74
 80067a4:	20000bb0 	.word	0x20000bb0

080067a8 <SystemInit>:
 80067a8:	b480      	push	{r7}
 80067aa:	af00      	add	r7, sp, #0
 80067ac:	4b06      	ldr	r3, [pc, #24]	; (80067c8 <SystemInit+0x20>)
 80067ae:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80067b2:	4a05      	ldr	r2, [pc, #20]	; (80067c8 <SystemInit+0x20>)
 80067b4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80067b8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80067bc:	bf00      	nop
 80067be:	46bd      	mov	sp, r7
 80067c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067c4:	4770      	bx	lr
 80067c6:	bf00      	nop
 80067c8:	e000ed00 	.word	0xe000ed00

080067cc <Reset_Handler>:
 80067cc:	f8df d034 	ldr.w	sp, [pc, #52]	; 8006804 <LoopFillZerobss+0x12>
 80067d0:	480d      	ldr	r0, [pc, #52]	; (8006808 <LoopFillZerobss+0x16>)
 80067d2:	490e      	ldr	r1, [pc, #56]	; (800680c <LoopFillZerobss+0x1a>)
 80067d4:	4a0e      	ldr	r2, [pc, #56]	; (8006810 <LoopFillZerobss+0x1e>)
 80067d6:	2300      	movs	r3, #0
 80067d8:	e002      	b.n	80067e0 <LoopCopyDataInit>

080067da <CopyDataInit>:
 80067da:	58d4      	ldr	r4, [r2, r3]
 80067dc:	50c4      	str	r4, [r0, r3]
 80067de:	3304      	adds	r3, #4

080067e0 <LoopCopyDataInit>:
 80067e0:	18c4      	adds	r4, r0, r3
 80067e2:	428c      	cmp	r4, r1
 80067e4:	d3f9      	bcc.n	80067da <CopyDataInit>
 80067e6:	4a0b      	ldr	r2, [pc, #44]	; (8006814 <LoopFillZerobss+0x22>)
 80067e8:	4c0b      	ldr	r4, [pc, #44]	; (8006818 <LoopFillZerobss+0x26>)
 80067ea:	2300      	movs	r3, #0
 80067ec:	e001      	b.n	80067f2 <LoopFillZerobss>

080067ee <FillZerobss>:
 80067ee:	6013      	str	r3, [r2, #0]
 80067f0:	3204      	adds	r2, #4

080067f2 <LoopFillZerobss>:
 80067f2:	42a2      	cmp	r2, r4
 80067f4:	d3fb      	bcc.n	80067ee <FillZerobss>
 80067f6:	f7ff ffd7 	bl	80067a8 <SystemInit>
 80067fa:	f005 fd43 	bl	800c284 <__libc_init_array>
 80067fe:	f7fe fb65 	bl	8004ecc <main>
 8006802:	4770      	bx	lr
 8006804:	20020000 	.word	0x20020000
 8006808:	20000000 	.word	0x20000000
 800680c:	20000280 	.word	0x20000280
 8006810:	08010cc0 	.word	0x08010cc0
 8006814:	20000280 	.word	0x20000280
 8006818:	20000bac 	.word	0x20000bac

0800681c <ADC_IRQHandler>:
 800681c:	e7fe      	b.n	800681c <ADC_IRQHandler>
	...

08006820 <HAL_Init>:
 8006820:	b580      	push	{r7, lr}
 8006822:	af00      	add	r7, sp, #0
 8006824:	4b0e      	ldr	r3, [pc, #56]	; (8006860 <HAL_Init+0x40>)
 8006826:	681b      	ldr	r3, [r3, #0]
 8006828:	4a0d      	ldr	r2, [pc, #52]	; (8006860 <HAL_Init+0x40>)
 800682a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800682e:	6013      	str	r3, [r2, #0]
 8006830:	4b0b      	ldr	r3, [pc, #44]	; (8006860 <HAL_Init+0x40>)
 8006832:	681b      	ldr	r3, [r3, #0]
 8006834:	4a0a      	ldr	r2, [pc, #40]	; (8006860 <HAL_Init+0x40>)
 8006836:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800683a:	6013      	str	r3, [r2, #0]
 800683c:	4b08      	ldr	r3, [pc, #32]	; (8006860 <HAL_Init+0x40>)
 800683e:	681b      	ldr	r3, [r3, #0]
 8006840:	4a07      	ldr	r2, [pc, #28]	; (8006860 <HAL_Init+0x40>)
 8006842:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006846:	6013      	str	r3, [r2, #0]
 8006848:	2003      	movs	r0, #3
 800684a:	f000 fee9 	bl	8007620 <HAL_NVIC_SetPriorityGrouping>
 800684e:	2000      	movs	r0, #0
 8006850:	f000 f808 	bl	8006864 <HAL_InitTick>
 8006854:	f7ff faf4 	bl	8005e40 <HAL_MspInit>
 8006858:	2300      	movs	r3, #0
 800685a:	4618      	mov	r0, r3
 800685c:	bd80      	pop	{r7, pc}
 800685e:	bf00      	nop
 8006860:	40023c00 	.word	0x40023c00

08006864 <HAL_InitTick>:
 8006864:	b580      	push	{r7, lr}
 8006866:	b082      	sub	sp, #8
 8006868:	af00      	add	r7, sp, #0
 800686a:	6078      	str	r0, [r7, #4]
 800686c:	4b12      	ldr	r3, [pc, #72]	; (80068b8 <HAL_InitTick+0x54>)
 800686e:	681a      	ldr	r2, [r3, #0]
 8006870:	4b12      	ldr	r3, [pc, #72]	; (80068bc <HAL_InitTick+0x58>)
 8006872:	781b      	ldrb	r3, [r3, #0]
 8006874:	4619      	mov	r1, r3
 8006876:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800687a:	fbb3 f3f1 	udiv	r3, r3, r1
 800687e:	fbb2 f3f3 	udiv	r3, r2, r3
 8006882:	4618      	mov	r0, r3
 8006884:	f000 ff0f 	bl	80076a6 <HAL_SYSTICK_Config>
 8006888:	4603      	mov	r3, r0
 800688a:	2b00      	cmp	r3, #0
 800688c:	d001      	beq.n	8006892 <HAL_InitTick+0x2e>
 800688e:	2301      	movs	r3, #1
 8006890:	e00e      	b.n	80068b0 <HAL_InitTick+0x4c>
 8006892:	687b      	ldr	r3, [r7, #4]
 8006894:	2b0f      	cmp	r3, #15
 8006896:	d80a      	bhi.n	80068ae <HAL_InitTick+0x4a>
 8006898:	2200      	movs	r2, #0
 800689a:	6879      	ldr	r1, [r7, #4]
 800689c:	f04f 30ff 	mov.w	r0, #4294967295
 80068a0:	f000 fec9 	bl	8007636 <HAL_NVIC_SetPriority>
 80068a4:	4a06      	ldr	r2, [pc, #24]	; (80068c0 <HAL_InitTick+0x5c>)
 80068a6:	687b      	ldr	r3, [r7, #4]
 80068a8:	6013      	str	r3, [r2, #0]
 80068aa:	2300      	movs	r3, #0
 80068ac:	e000      	b.n	80068b0 <HAL_InitTick+0x4c>
 80068ae:	2301      	movs	r3, #1
 80068b0:	4618      	mov	r0, r3
 80068b2:	3708      	adds	r7, #8
 80068b4:	46bd      	mov	sp, r7
 80068b6:	bd80      	pop	{r7, pc}
 80068b8:	200000a4 	.word	0x200000a4
 80068bc:	200000ac 	.word	0x200000ac
 80068c0:	200000a8 	.word	0x200000a8

080068c4 <HAL_IncTick>:
 80068c4:	b480      	push	{r7}
 80068c6:	af00      	add	r7, sp, #0
 80068c8:	4b06      	ldr	r3, [pc, #24]	; (80068e4 <HAL_IncTick+0x20>)
 80068ca:	781b      	ldrb	r3, [r3, #0]
 80068cc:	461a      	mov	r2, r3
 80068ce:	4b06      	ldr	r3, [pc, #24]	; (80068e8 <HAL_IncTick+0x24>)
 80068d0:	681b      	ldr	r3, [r3, #0]
 80068d2:	4413      	add	r3, r2
 80068d4:	4a04      	ldr	r2, [pc, #16]	; (80068e8 <HAL_IncTick+0x24>)
 80068d6:	6013      	str	r3, [r2, #0]
 80068d8:	bf00      	nop
 80068da:	46bd      	mov	sp, r7
 80068dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068e0:	4770      	bx	lr
 80068e2:	bf00      	nop
 80068e4:	200000ac 	.word	0x200000ac
 80068e8:	20000b78 	.word	0x20000b78

080068ec <HAL_GetTick>:
 80068ec:	b480      	push	{r7}
 80068ee:	af00      	add	r7, sp, #0
 80068f0:	4b03      	ldr	r3, [pc, #12]	; (8006900 <HAL_GetTick+0x14>)
 80068f2:	681b      	ldr	r3, [r3, #0]
 80068f4:	4618      	mov	r0, r3
 80068f6:	46bd      	mov	sp, r7
 80068f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068fc:	4770      	bx	lr
 80068fe:	bf00      	nop
 8006900:	20000b78 	.word	0x20000b78

08006904 <HAL_Delay>:
 8006904:	b580      	push	{r7, lr}
 8006906:	b084      	sub	sp, #16
 8006908:	af00      	add	r7, sp, #0
 800690a:	6078      	str	r0, [r7, #4]
 800690c:	f7ff ffee 	bl	80068ec <HAL_GetTick>
 8006910:	60b8      	str	r0, [r7, #8]
 8006912:	687b      	ldr	r3, [r7, #4]
 8006914:	60fb      	str	r3, [r7, #12]
 8006916:	68fb      	ldr	r3, [r7, #12]
 8006918:	f1b3 3fff 	cmp.w	r3, #4294967295
 800691c:	d005      	beq.n	800692a <HAL_Delay+0x26>
 800691e:	4b0a      	ldr	r3, [pc, #40]	; (8006948 <HAL_Delay+0x44>)
 8006920:	781b      	ldrb	r3, [r3, #0]
 8006922:	461a      	mov	r2, r3
 8006924:	68fb      	ldr	r3, [r7, #12]
 8006926:	4413      	add	r3, r2
 8006928:	60fb      	str	r3, [r7, #12]
 800692a:	bf00      	nop
 800692c:	f7ff ffde 	bl	80068ec <HAL_GetTick>
 8006930:	4602      	mov	r2, r0
 8006932:	68bb      	ldr	r3, [r7, #8]
 8006934:	1ad3      	subs	r3, r2, r3
 8006936:	68fa      	ldr	r2, [r7, #12]
 8006938:	429a      	cmp	r2, r3
 800693a:	d8f7      	bhi.n	800692c <HAL_Delay+0x28>
 800693c:	bf00      	nop
 800693e:	bf00      	nop
 8006940:	3710      	adds	r7, #16
 8006942:	46bd      	mov	sp, r7
 8006944:	bd80      	pop	{r7, pc}
 8006946:	bf00      	nop
 8006948:	200000ac 	.word	0x200000ac

0800694c <HAL_ADC_Init>:
 800694c:	b580      	push	{r7, lr}
 800694e:	b084      	sub	sp, #16
 8006950:	af00      	add	r7, sp, #0
 8006952:	6078      	str	r0, [r7, #4]
 8006954:	2300      	movs	r3, #0
 8006956:	73fb      	strb	r3, [r7, #15]
 8006958:	687b      	ldr	r3, [r7, #4]
 800695a:	2b00      	cmp	r3, #0
 800695c:	d101      	bne.n	8006962 <HAL_ADC_Init+0x16>
 800695e:	2301      	movs	r3, #1
 8006960:	e033      	b.n	80069ca <HAL_ADC_Init+0x7e>
 8006962:	687b      	ldr	r3, [r7, #4]
 8006964:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006966:	2b00      	cmp	r3, #0
 8006968:	d109      	bne.n	800697e <HAL_ADC_Init+0x32>
 800696a:	6878      	ldr	r0, [r7, #4]
 800696c:	f7ff fa90 	bl	8005e90 <HAL_ADC_MspInit>
 8006970:	687b      	ldr	r3, [r7, #4]
 8006972:	2200      	movs	r2, #0
 8006974:	645a      	str	r2, [r3, #68]	; 0x44
 8006976:	687b      	ldr	r3, [r7, #4]
 8006978:	2200      	movs	r2, #0
 800697a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800697e:	687b      	ldr	r3, [r7, #4]
 8006980:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006982:	f003 0310 	and.w	r3, r3, #16
 8006986:	2b00      	cmp	r3, #0
 8006988:	d118      	bne.n	80069bc <HAL_ADC_Init+0x70>
 800698a:	687b      	ldr	r3, [r7, #4]
 800698c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800698e:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8006992:	f023 0302 	bic.w	r3, r3, #2
 8006996:	f043 0202 	orr.w	r2, r3, #2
 800699a:	687b      	ldr	r3, [r7, #4]
 800699c:	641a      	str	r2, [r3, #64]	; 0x40
 800699e:	6878      	ldr	r0, [r7, #4]
 80069a0:	f000 fab4 	bl	8006f0c <ADC_Init>
 80069a4:	687b      	ldr	r3, [r7, #4]
 80069a6:	2200      	movs	r2, #0
 80069a8:	645a      	str	r2, [r3, #68]	; 0x44
 80069aa:	687b      	ldr	r3, [r7, #4]
 80069ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80069ae:	f023 0303 	bic.w	r3, r3, #3
 80069b2:	f043 0201 	orr.w	r2, r3, #1
 80069b6:	687b      	ldr	r3, [r7, #4]
 80069b8:	641a      	str	r2, [r3, #64]	; 0x40
 80069ba:	e001      	b.n	80069c0 <HAL_ADC_Init+0x74>
 80069bc:	2301      	movs	r3, #1
 80069be:	73fb      	strb	r3, [r7, #15]
 80069c0:	687b      	ldr	r3, [r7, #4]
 80069c2:	2200      	movs	r2, #0
 80069c4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80069c8:	7bfb      	ldrb	r3, [r7, #15]
 80069ca:	4618      	mov	r0, r3
 80069cc:	3710      	adds	r7, #16
 80069ce:	46bd      	mov	sp, r7
 80069d0:	bd80      	pop	{r7, pc}
	...

080069d4 <HAL_ADC_Start>:
 80069d4:	b480      	push	{r7}
 80069d6:	b085      	sub	sp, #20
 80069d8:	af00      	add	r7, sp, #0
 80069da:	6078      	str	r0, [r7, #4]
 80069dc:	2300      	movs	r3, #0
 80069de:	60bb      	str	r3, [r7, #8]
 80069e0:	687b      	ldr	r3, [r7, #4]
 80069e2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80069e6:	2b01      	cmp	r3, #1
 80069e8:	d101      	bne.n	80069ee <HAL_ADC_Start+0x1a>
 80069ea:	2302      	movs	r3, #2
 80069ec:	e0b2      	b.n	8006b54 <HAL_ADC_Start+0x180>
 80069ee:	687b      	ldr	r3, [r7, #4]
 80069f0:	2201      	movs	r2, #1
 80069f2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80069f6:	687b      	ldr	r3, [r7, #4]
 80069f8:	681b      	ldr	r3, [r3, #0]
 80069fa:	689b      	ldr	r3, [r3, #8]
 80069fc:	f003 0301 	and.w	r3, r3, #1
 8006a00:	2b01      	cmp	r3, #1
 8006a02:	d018      	beq.n	8006a36 <HAL_ADC_Start+0x62>
 8006a04:	687b      	ldr	r3, [r7, #4]
 8006a06:	681b      	ldr	r3, [r3, #0]
 8006a08:	689a      	ldr	r2, [r3, #8]
 8006a0a:	687b      	ldr	r3, [r7, #4]
 8006a0c:	681b      	ldr	r3, [r3, #0]
 8006a0e:	f042 0201 	orr.w	r2, r2, #1
 8006a12:	609a      	str	r2, [r3, #8]
 8006a14:	4b52      	ldr	r3, [pc, #328]	; (8006b60 <HAL_ADC_Start+0x18c>)
 8006a16:	681b      	ldr	r3, [r3, #0]
 8006a18:	4a52      	ldr	r2, [pc, #328]	; (8006b64 <HAL_ADC_Start+0x190>)
 8006a1a:	fba2 2303 	umull	r2, r3, r2, r3
 8006a1e:	0c9a      	lsrs	r2, r3, #18
 8006a20:	4613      	mov	r3, r2
 8006a22:	005b      	lsls	r3, r3, #1
 8006a24:	4413      	add	r3, r2
 8006a26:	60bb      	str	r3, [r7, #8]
 8006a28:	e002      	b.n	8006a30 <HAL_ADC_Start+0x5c>
 8006a2a:	68bb      	ldr	r3, [r7, #8]
 8006a2c:	3b01      	subs	r3, #1
 8006a2e:	60bb      	str	r3, [r7, #8]
 8006a30:	68bb      	ldr	r3, [r7, #8]
 8006a32:	2b00      	cmp	r3, #0
 8006a34:	d1f9      	bne.n	8006a2a <HAL_ADC_Start+0x56>
 8006a36:	687b      	ldr	r3, [r7, #4]
 8006a38:	681b      	ldr	r3, [r3, #0]
 8006a3a:	689b      	ldr	r3, [r3, #8]
 8006a3c:	f003 0301 	and.w	r3, r3, #1
 8006a40:	2b01      	cmp	r3, #1
 8006a42:	d17a      	bne.n	8006b3a <HAL_ADC_Start+0x166>
 8006a44:	687b      	ldr	r3, [r7, #4]
 8006a46:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a48:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8006a4c:	f023 0301 	bic.w	r3, r3, #1
 8006a50:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8006a54:	687b      	ldr	r3, [r7, #4]
 8006a56:	641a      	str	r2, [r3, #64]	; 0x40
 8006a58:	687b      	ldr	r3, [r7, #4]
 8006a5a:	681b      	ldr	r3, [r3, #0]
 8006a5c:	685b      	ldr	r3, [r3, #4]
 8006a5e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8006a62:	2b00      	cmp	r3, #0
 8006a64:	d007      	beq.n	8006a76 <HAL_ADC_Start+0xa2>
 8006a66:	687b      	ldr	r3, [r7, #4]
 8006a68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a6a:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8006a6e:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 8006a72:	687b      	ldr	r3, [r7, #4]
 8006a74:	641a      	str	r2, [r3, #64]	; 0x40
 8006a76:	687b      	ldr	r3, [r7, #4]
 8006a78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a7a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8006a7e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006a82:	d106      	bne.n	8006a92 <HAL_ADC_Start+0xbe>
 8006a84:	687b      	ldr	r3, [r7, #4]
 8006a86:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006a88:	f023 0206 	bic.w	r2, r3, #6
 8006a8c:	687b      	ldr	r3, [r7, #4]
 8006a8e:	645a      	str	r2, [r3, #68]	; 0x44
 8006a90:	e002      	b.n	8006a98 <HAL_ADC_Start+0xc4>
 8006a92:	687b      	ldr	r3, [r7, #4]
 8006a94:	2200      	movs	r2, #0
 8006a96:	645a      	str	r2, [r3, #68]	; 0x44
 8006a98:	687b      	ldr	r3, [r7, #4]
 8006a9a:	2200      	movs	r2, #0
 8006a9c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006aa0:	4b31      	ldr	r3, [pc, #196]	; (8006b68 <HAL_ADC_Start+0x194>)
 8006aa2:	60fb      	str	r3, [r7, #12]
 8006aa4:	687b      	ldr	r3, [r7, #4]
 8006aa6:	681b      	ldr	r3, [r3, #0]
 8006aa8:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8006aac:	601a      	str	r2, [r3, #0]
 8006aae:	68fb      	ldr	r3, [r7, #12]
 8006ab0:	685b      	ldr	r3, [r3, #4]
 8006ab2:	f003 031f 	and.w	r3, r3, #31
 8006ab6:	2b00      	cmp	r3, #0
 8006ab8:	d12a      	bne.n	8006b10 <HAL_ADC_Start+0x13c>
 8006aba:	687b      	ldr	r3, [r7, #4]
 8006abc:	681b      	ldr	r3, [r3, #0]
 8006abe:	4a2b      	ldr	r2, [pc, #172]	; (8006b6c <HAL_ADC_Start+0x198>)
 8006ac0:	4293      	cmp	r3, r2
 8006ac2:	d015      	beq.n	8006af0 <HAL_ADC_Start+0x11c>
 8006ac4:	687b      	ldr	r3, [r7, #4]
 8006ac6:	681b      	ldr	r3, [r3, #0]
 8006ac8:	4a29      	ldr	r2, [pc, #164]	; (8006b70 <HAL_ADC_Start+0x19c>)
 8006aca:	4293      	cmp	r3, r2
 8006acc:	d105      	bne.n	8006ada <HAL_ADC_Start+0x106>
 8006ace:	4b26      	ldr	r3, [pc, #152]	; (8006b68 <HAL_ADC_Start+0x194>)
 8006ad0:	685b      	ldr	r3, [r3, #4]
 8006ad2:	f003 031f 	and.w	r3, r3, #31
 8006ad6:	2b00      	cmp	r3, #0
 8006ad8:	d00a      	beq.n	8006af0 <HAL_ADC_Start+0x11c>
 8006ada:	687b      	ldr	r3, [r7, #4]
 8006adc:	681b      	ldr	r3, [r3, #0]
 8006ade:	4a25      	ldr	r2, [pc, #148]	; (8006b74 <HAL_ADC_Start+0x1a0>)
 8006ae0:	4293      	cmp	r3, r2
 8006ae2:	d136      	bne.n	8006b52 <HAL_ADC_Start+0x17e>
 8006ae4:	4b20      	ldr	r3, [pc, #128]	; (8006b68 <HAL_ADC_Start+0x194>)
 8006ae6:	685b      	ldr	r3, [r3, #4]
 8006ae8:	f003 0310 	and.w	r3, r3, #16
 8006aec:	2b00      	cmp	r3, #0
 8006aee:	d130      	bne.n	8006b52 <HAL_ADC_Start+0x17e>
 8006af0:	687b      	ldr	r3, [r7, #4]
 8006af2:	681b      	ldr	r3, [r3, #0]
 8006af4:	689b      	ldr	r3, [r3, #8]
 8006af6:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8006afa:	2b00      	cmp	r3, #0
 8006afc:	d129      	bne.n	8006b52 <HAL_ADC_Start+0x17e>
 8006afe:	687b      	ldr	r3, [r7, #4]
 8006b00:	681b      	ldr	r3, [r3, #0]
 8006b02:	689a      	ldr	r2, [r3, #8]
 8006b04:	687b      	ldr	r3, [r7, #4]
 8006b06:	681b      	ldr	r3, [r3, #0]
 8006b08:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8006b0c:	609a      	str	r2, [r3, #8]
 8006b0e:	e020      	b.n	8006b52 <HAL_ADC_Start+0x17e>
 8006b10:	687b      	ldr	r3, [r7, #4]
 8006b12:	681b      	ldr	r3, [r3, #0]
 8006b14:	4a15      	ldr	r2, [pc, #84]	; (8006b6c <HAL_ADC_Start+0x198>)
 8006b16:	4293      	cmp	r3, r2
 8006b18:	d11b      	bne.n	8006b52 <HAL_ADC_Start+0x17e>
 8006b1a:	687b      	ldr	r3, [r7, #4]
 8006b1c:	681b      	ldr	r3, [r3, #0]
 8006b1e:	689b      	ldr	r3, [r3, #8]
 8006b20:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8006b24:	2b00      	cmp	r3, #0
 8006b26:	d114      	bne.n	8006b52 <HAL_ADC_Start+0x17e>
 8006b28:	687b      	ldr	r3, [r7, #4]
 8006b2a:	681b      	ldr	r3, [r3, #0]
 8006b2c:	689a      	ldr	r2, [r3, #8]
 8006b2e:	687b      	ldr	r3, [r7, #4]
 8006b30:	681b      	ldr	r3, [r3, #0]
 8006b32:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8006b36:	609a      	str	r2, [r3, #8]
 8006b38:	e00b      	b.n	8006b52 <HAL_ADC_Start+0x17e>
 8006b3a:	687b      	ldr	r3, [r7, #4]
 8006b3c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006b3e:	f043 0210 	orr.w	r2, r3, #16
 8006b42:	687b      	ldr	r3, [r7, #4]
 8006b44:	641a      	str	r2, [r3, #64]	; 0x40
 8006b46:	687b      	ldr	r3, [r7, #4]
 8006b48:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006b4a:	f043 0201 	orr.w	r2, r3, #1
 8006b4e:	687b      	ldr	r3, [r7, #4]
 8006b50:	645a      	str	r2, [r3, #68]	; 0x44
 8006b52:	2300      	movs	r3, #0
 8006b54:	4618      	mov	r0, r3
 8006b56:	3714      	adds	r7, #20
 8006b58:	46bd      	mov	sp, r7
 8006b5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b5e:	4770      	bx	lr
 8006b60:	200000a4 	.word	0x200000a4
 8006b64:	431bde83 	.word	0x431bde83
 8006b68:	40012300 	.word	0x40012300
 8006b6c:	40012000 	.word	0x40012000
 8006b70:	40012100 	.word	0x40012100
 8006b74:	40012200 	.word	0x40012200

08006b78 <HAL_ADC_PollForConversion>:
 8006b78:	b580      	push	{r7, lr}
 8006b7a:	b084      	sub	sp, #16
 8006b7c:	af00      	add	r7, sp, #0
 8006b7e:	6078      	str	r0, [r7, #4]
 8006b80:	6039      	str	r1, [r7, #0]
 8006b82:	2300      	movs	r3, #0
 8006b84:	60fb      	str	r3, [r7, #12]
 8006b86:	687b      	ldr	r3, [r7, #4]
 8006b88:	681b      	ldr	r3, [r3, #0]
 8006b8a:	689b      	ldr	r3, [r3, #8]
 8006b8c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8006b90:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8006b94:	d113      	bne.n	8006bbe <HAL_ADC_PollForConversion+0x46>
 8006b96:	687b      	ldr	r3, [r7, #4]
 8006b98:	681b      	ldr	r3, [r3, #0]
 8006b9a:	689b      	ldr	r3, [r3, #8]
 8006b9c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006ba0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8006ba4:	d10b      	bne.n	8006bbe <HAL_ADC_PollForConversion+0x46>
 8006ba6:	687b      	ldr	r3, [r7, #4]
 8006ba8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006baa:	f043 0220 	orr.w	r2, r3, #32
 8006bae:	687b      	ldr	r3, [r7, #4]
 8006bb0:	641a      	str	r2, [r3, #64]	; 0x40
 8006bb2:	687b      	ldr	r3, [r7, #4]
 8006bb4:	2200      	movs	r2, #0
 8006bb6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006bba:	2301      	movs	r3, #1
 8006bbc:	e063      	b.n	8006c86 <HAL_ADC_PollForConversion+0x10e>
 8006bbe:	f7ff fe95 	bl	80068ec <HAL_GetTick>
 8006bc2:	60f8      	str	r0, [r7, #12]
 8006bc4:	e021      	b.n	8006c0a <HAL_ADC_PollForConversion+0x92>
 8006bc6:	683b      	ldr	r3, [r7, #0]
 8006bc8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006bcc:	d01d      	beq.n	8006c0a <HAL_ADC_PollForConversion+0x92>
 8006bce:	683b      	ldr	r3, [r7, #0]
 8006bd0:	2b00      	cmp	r3, #0
 8006bd2:	d007      	beq.n	8006be4 <HAL_ADC_PollForConversion+0x6c>
 8006bd4:	f7ff fe8a 	bl	80068ec <HAL_GetTick>
 8006bd8:	4602      	mov	r2, r0
 8006bda:	68fb      	ldr	r3, [r7, #12]
 8006bdc:	1ad3      	subs	r3, r2, r3
 8006bde:	683a      	ldr	r2, [r7, #0]
 8006be0:	429a      	cmp	r2, r3
 8006be2:	d212      	bcs.n	8006c0a <HAL_ADC_PollForConversion+0x92>
 8006be4:	687b      	ldr	r3, [r7, #4]
 8006be6:	681b      	ldr	r3, [r3, #0]
 8006be8:	681b      	ldr	r3, [r3, #0]
 8006bea:	f003 0302 	and.w	r3, r3, #2
 8006bee:	2b02      	cmp	r3, #2
 8006bf0:	d00b      	beq.n	8006c0a <HAL_ADC_PollForConversion+0x92>
 8006bf2:	687b      	ldr	r3, [r7, #4]
 8006bf4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006bf6:	f043 0204 	orr.w	r2, r3, #4
 8006bfa:	687b      	ldr	r3, [r7, #4]
 8006bfc:	641a      	str	r2, [r3, #64]	; 0x40
 8006bfe:	687b      	ldr	r3, [r7, #4]
 8006c00:	2200      	movs	r2, #0
 8006c02:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006c06:	2303      	movs	r3, #3
 8006c08:	e03d      	b.n	8006c86 <HAL_ADC_PollForConversion+0x10e>
 8006c0a:	687b      	ldr	r3, [r7, #4]
 8006c0c:	681b      	ldr	r3, [r3, #0]
 8006c0e:	681b      	ldr	r3, [r3, #0]
 8006c10:	f003 0302 	and.w	r3, r3, #2
 8006c14:	2b02      	cmp	r3, #2
 8006c16:	d1d6      	bne.n	8006bc6 <HAL_ADC_PollForConversion+0x4e>
 8006c18:	687b      	ldr	r3, [r7, #4]
 8006c1a:	681b      	ldr	r3, [r3, #0]
 8006c1c:	f06f 0212 	mvn.w	r2, #18
 8006c20:	601a      	str	r2, [r3, #0]
 8006c22:	687b      	ldr	r3, [r7, #4]
 8006c24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c26:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8006c2a:	687b      	ldr	r3, [r7, #4]
 8006c2c:	641a      	str	r2, [r3, #64]	; 0x40
 8006c2e:	687b      	ldr	r3, [r7, #4]
 8006c30:	681b      	ldr	r3, [r3, #0]
 8006c32:	689b      	ldr	r3, [r3, #8]
 8006c34:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8006c38:	2b00      	cmp	r3, #0
 8006c3a:	d123      	bne.n	8006c84 <HAL_ADC_PollForConversion+0x10c>
 8006c3c:	687b      	ldr	r3, [r7, #4]
 8006c3e:	7e1b      	ldrb	r3, [r3, #24]
 8006c40:	2b00      	cmp	r3, #0
 8006c42:	d11f      	bne.n	8006c84 <HAL_ADC_PollForConversion+0x10c>
 8006c44:	687b      	ldr	r3, [r7, #4]
 8006c46:	681b      	ldr	r3, [r3, #0]
 8006c48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006c4a:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 8006c4e:	2b00      	cmp	r3, #0
 8006c50:	d006      	beq.n	8006c60 <HAL_ADC_PollForConversion+0xe8>
 8006c52:	687b      	ldr	r3, [r7, #4]
 8006c54:	681b      	ldr	r3, [r3, #0]
 8006c56:	689b      	ldr	r3, [r3, #8]
 8006c58:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8006c5c:	2b00      	cmp	r3, #0
 8006c5e:	d111      	bne.n	8006c84 <HAL_ADC_PollForConversion+0x10c>
 8006c60:	687b      	ldr	r3, [r7, #4]
 8006c62:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c64:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8006c68:	687b      	ldr	r3, [r7, #4]
 8006c6a:	641a      	str	r2, [r3, #64]	; 0x40
 8006c6c:	687b      	ldr	r3, [r7, #4]
 8006c6e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c70:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8006c74:	2b00      	cmp	r3, #0
 8006c76:	d105      	bne.n	8006c84 <HAL_ADC_PollForConversion+0x10c>
 8006c78:	687b      	ldr	r3, [r7, #4]
 8006c7a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c7c:	f043 0201 	orr.w	r2, r3, #1
 8006c80:	687b      	ldr	r3, [r7, #4]
 8006c82:	641a      	str	r2, [r3, #64]	; 0x40
 8006c84:	2300      	movs	r3, #0
 8006c86:	4618      	mov	r0, r3
 8006c88:	3710      	adds	r7, #16
 8006c8a:	46bd      	mov	sp, r7
 8006c8c:	bd80      	pop	{r7, pc}

08006c8e <HAL_ADC_GetValue>:
 8006c8e:	b480      	push	{r7}
 8006c90:	b083      	sub	sp, #12
 8006c92:	af00      	add	r7, sp, #0
 8006c94:	6078      	str	r0, [r7, #4]
 8006c96:	687b      	ldr	r3, [r7, #4]
 8006c98:	681b      	ldr	r3, [r3, #0]
 8006c9a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006c9c:	4618      	mov	r0, r3
 8006c9e:	370c      	adds	r7, #12
 8006ca0:	46bd      	mov	sp, r7
 8006ca2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ca6:	4770      	bx	lr

08006ca8 <HAL_ADC_ConfigChannel>:
 8006ca8:	b480      	push	{r7}
 8006caa:	b085      	sub	sp, #20
 8006cac:	af00      	add	r7, sp, #0
 8006cae:	6078      	str	r0, [r7, #4]
 8006cb0:	6039      	str	r1, [r7, #0]
 8006cb2:	2300      	movs	r3, #0
 8006cb4:	60bb      	str	r3, [r7, #8]
 8006cb6:	687b      	ldr	r3, [r7, #4]
 8006cb8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006cbc:	2b01      	cmp	r3, #1
 8006cbe:	d101      	bne.n	8006cc4 <HAL_ADC_ConfigChannel+0x1c>
 8006cc0:	2302      	movs	r3, #2
 8006cc2:	e113      	b.n	8006eec <HAL_ADC_ConfigChannel+0x244>
 8006cc4:	687b      	ldr	r3, [r7, #4]
 8006cc6:	2201      	movs	r2, #1
 8006cc8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006ccc:	683b      	ldr	r3, [r7, #0]
 8006cce:	681b      	ldr	r3, [r3, #0]
 8006cd0:	2b09      	cmp	r3, #9
 8006cd2:	d925      	bls.n	8006d20 <HAL_ADC_ConfigChannel+0x78>
 8006cd4:	687b      	ldr	r3, [r7, #4]
 8006cd6:	681b      	ldr	r3, [r3, #0]
 8006cd8:	68d9      	ldr	r1, [r3, #12]
 8006cda:	683b      	ldr	r3, [r7, #0]
 8006cdc:	681b      	ldr	r3, [r3, #0]
 8006cde:	b29b      	uxth	r3, r3
 8006ce0:	461a      	mov	r2, r3
 8006ce2:	4613      	mov	r3, r2
 8006ce4:	005b      	lsls	r3, r3, #1
 8006ce6:	4413      	add	r3, r2
 8006ce8:	3b1e      	subs	r3, #30
 8006cea:	2207      	movs	r2, #7
 8006cec:	fa02 f303 	lsl.w	r3, r2, r3
 8006cf0:	43da      	mvns	r2, r3
 8006cf2:	687b      	ldr	r3, [r7, #4]
 8006cf4:	681b      	ldr	r3, [r3, #0]
 8006cf6:	400a      	ands	r2, r1
 8006cf8:	60da      	str	r2, [r3, #12]
 8006cfa:	687b      	ldr	r3, [r7, #4]
 8006cfc:	681b      	ldr	r3, [r3, #0]
 8006cfe:	68d9      	ldr	r1, [r3, #12]
 8006d00:	683b      	ldr	r3, [r7, #0]
 8006d02:	689a      	ldr	r2, [r3, #8]
 8006d04:	683b      	ldr	r3, [r7, #0]
 8006d06:	681b      	ldr	r3, [r3, #0]
 8006d08:	b29b      	uxth	r3, r3
 8006d0a:	4618      	mov	r0, r3
 8006d0c:	4603      	mov	r3, r0
 8006d0e:	005b      	lsls	r3, r3, #1
 8006d10:	4403      	add	r3, r0
 8006d12:	3b1e      	subs	r3, #30
 8006d14:	409a      	lsls	r2, r3
 8006d16:	687b      	ldr	r3, [r7, #4]
 8006d18:	681b      	ldr	r3, [r3, #0]
 8006d1a:	430a      	orrs	r2, r1
 8006d1c:	60da      	str	r2, [r3, #12]
 8006d1e:	e022      	b.n	8006d66 <HAL_ADC_ConfigChannel+0xbe>
 8006d20:	687b      	ldr	r3, [r7, #4]
 8006d22:	681b      	ldr	r3, [r3, #0]
 8006d24:	6919      	ldr	r1, [r3, #16]
 8006d26:	683b      	ldr	r3, [r7, #0]
 8006d28:	681b      	ldr	r3, [r3, #0]
 8006d2a:	b29b      	uxth	r3, r3
 8006d2c:	461a      	mov	r2, r3
 8006d2e:	4613      	mov	r3, r2
 8006d30:	005b      	lsls	r3, r3, #1
 8006d32:	4413      	add	r3, r2
 8006d34:	2207      	movs	r2, #7
 8006d36:	fa02 f303 	lsl.w	r3, r2, r3
 8006d3a:	43da      	mvns	r2, r3
 8006d3c:	687b      	ldr	r3, [r7, #4]
 8006d3e:	681b      	ldr	r3, [r3, #0]
 8006d40:	400a      	ands	r2, r1
 8006d42:	611a      	str	r2, [r3, #16]
 8006d44:	687b      	ldr	r3, [r7, #4]
 8006d46:	681b      	ldr	r3, [r3, #0]
 8006d48:	6919      	ldr	r1, [r3, #16]
 8006d4a:	683b      	ldr	r3, [r7, #0]
 8006d4c:	689a      	ldr	r2, [r3, #8]
 8006d4e:	683b      	ldr	r3, [r7, #0]
 8006d50:	681b      	ldr	r3, [r3, #0]
 8006d52:	b29b      	uxth	r3, r3
 8006d54:	4618      	mov	r0, r3
 8006d56:	4603      	mov	r3, r0
 8006d58:	005b      	lsls	r3, r3, #1
 8006d5a:	4403      	add	r3, r0
 8006d5c:	409a      	lsls	r2, r3
 8006d5e:	687b      	ldr	r3, [r7, #4]
 8006d60:	681b      	ldr	r3, [r3, #0]
 8006d62:	430a      	orrs	r2, r1
 8006d64:	611a      	str	r2, [r3, #16]
 8006d66:	683b      	ldr	r3, [r7, #0]
 8006d68:	685b      	ldr	r3, [r3, #4]
 8006d6a:	2b06      	cmp	r3, #6
 8006d6c:	d824      	bhi.n	8006db8 <HAL_ADC_ConfigChannel+0x110>
 8006d6e:	687b      	ldr	r3, [r7, #4]
 8006d70:	681b      	ldr	r3, [r3, #0]
 8006d72:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8006d74:	683b      	ldr	r3, [r7, #0]
 8006d76:	685a      	ldr	r2, [r3, #4]
 8006d78:	4613      	mov	r3, r2
 8006d7a:	009b      	lsls	r3, r3, #2
 8006d7c:	4413      	add	r3, r2
 8006d7e:	3b05      	subs	r3, #5
 8006d80:	221f      	movs	r2, #31
 8006d82:	fa02 f303 	lsl.w	r3, r2, r3
 8006d86:	43da      	mvns	r2, r3
 8006d88:	687b      	ldr	r3, [r7, #4]
 8006d8a:	681b      	ldr	r3, [r3, #0]
 8006d8c:	400a      	ands	r2, r1
 8006d8e:	635a      	str	r2, [r3, #52]	; 0x34
 8006d90:	687b      	ldr	r3, [r7, #4]
 8006d92:	681b      	ldr	r3, [r3, #0]
 8006d94:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8006d96:	683b      	ldr	r3, [r7, #0]
 8006d98:	681b      	ldr	r3, [r3, #0]
 8006d9a:	b29b      	uxth	r3, r3
 8006d9c:	4618      	mov	r0, r3
 8006d9e:	683b      	ldr	r3, [r7, #0]
 8006da0:	685a      	ldr	r2, [r3, #4]
 8006da2:	4613      	mov	r3, r2
 8006da4:	009b      	lsls	r3, r3, #2
 8006da6:	4413      	add	r3, r2
 8006da8:	3b05      	subs	r3, #5
 8006daa:	fa00 f203 	lsl.w	r2, r0, r3
 8006dae:	687b      	ldr	r3, [r7, #4]
 8006db0:	681b      	ldr	r3, [r3, #0]
 8006db2:	430a      	orrs	r2, r1
 8006db4:	635a      	str	r2, [r3, #52]	; 0x34
 8006db6:	e04c      	b.n	8006e52 <HAL_ADC_ConfigChannel+0x1aa>
 8006db8:	683b      	ldr	r3, [r7, #0]
 8006dba:	685b      	ldr	r3, [r3, #4]
 8006dbc:	2b0c      	cmp	r3, #12
 8006dbe:	d824      	bhi.n	8006e0a <HAL_ADC_ConfigChannel+0x162>
 8006dc0:	687b      	ldr	r3, [r7, #4]
 8006dc2:	681b      	ldr	r3, [r3, #0]
 8006dc4:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8006dc6:	683b      	ldr	r3, [r7, #0]
 8006dc8:	685a      	ldr	r2, [r3, #4]
 8006dca:	4613      	mov	r3, r2
 8006dcc:	009b      	lsls	r3, r3, #2
 8006dce:	4413      	add	r3, r2
 8006dd0:	3b23      	subs	r3, #35	; 0x23
 8006dd2:	221f      	movs	r2, #31
 8006dd4:	fa02 f303 	lsl.w	r3, r2, r3
 8006dd8:	43da      	mvns	r2, r3
 8006dda:	687b      	ldr	r3, [r7, #4]
 8006ddc:	681b      	ldr	r3, [r3, #0]
 8006dde:	400a      	ands	r2, r1
 8006de0:	631a      	str	r2, [r3, #48]	; 0x30
 8006de2:	687b      	ldr	r3, [r7, #4]
 8006de4:	681b      	ldr	r3, [r3, #0]
 8006de6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8006de8:	683b      	ldr	r3, [r7, #0]
 8006dea:	681b      	ldr	r3, [r3, #0]
 8006dec:	b29b      	uxth	r3, r3
 8006dee:	4618      	mov	r0, r3
 8006df0:	683b      	ldr	r3, [r7, #0]
 8006df2:	685a      	ldr	r2, [r3, #4]
 8006df4:	4613      	mov	r3, r2
 8006df6:	009b      	lsls	r3, r3, #2
 8006df8:	4413      	add	r3, r2
 8006dfa:	3b23      	subs	r3, #35	; 0x23
 8006dfc:	fa00 f203 	lsl.w	r2, r0, r3
 8006e00:	687b      	ldr	r3, [r7, #4]
 8006e02:	681b      	ldr	r3, [r3, #0]
 8006e04:	430a      	orrs	r2, r1
 8006e06:	631a      	str	r2, [r3, #48]	; 0x30
 8006e08:	e023      	b.n	8006e52 <HAL_ADC_ConfigChannel+0x1aa>
 8006e0a:	687b      	ldr	r3, [r7, #4]
 8006e0c:	681b      	ldr	r3, [r3, #0]
 8006e0e:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006e10:	683b      	ldr	r3, [r7, #0]
 8006e12:	685a      	ldr	r2, [r3, #4]
 8006e14:	4613      	mov	r3, r2
 8006e16:	009b      	lsls	r3, r3, #2
 8006e18:	4413      	add	r3, r2
 8006e1a:	3b41      	subs	r3, #65	; 0x41
 8006e1c:	221f      	movs	r2, #31
 8006e1e:	fa02 f303 	lsl.w	r3, r2, r3
 8006e22:	43da      	mvns	r2, r3
 8006e24:	687b      	ldr	r3, [r7, #4]
 8006e26:	681b      	ldr	r3, [r3, #0]
 8006e28:	400a      	ands	r2, r1
 8006e2a:	62da      	str	r2, [r3, #44]	; 0x2c
 8006e2c:	687b      	ldr	r3, [r7, #4]
 8006e2e:	681b      	ldr	r3, [r3, #0]
 8006e30:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006e32:	683b      	ldr	r3, [r7, #0]
 8006e34:	681b      	ldr	r3, [r3, #0]
 8006e36:	b29b      	uxth	r3, r3
 8006e38:	4618      	mov	r0, r3
 8006e3a:	683b      	ldr	r3, [r7, #0]
 8006e3c:	685a      	ldr	r2, [r3, #4]
 8006e3e:	4613      	mov	r3, r2
 8006e40:	009b      	lsls	r3, r3, #2
 8006e42:	4413      	add	r3, r2
 8006e44:	3b41      	subs	r3, #65	; 0x41
 8006e46:	fa00 f203 	lsl.w	r2, r0, r3
 8006e4a:	687b      	ldr	r3, [r7, #4]
 8006e4c:	681b      	ldr	r3, [r3, #0]
 8006e4e:	430a      	orrs	r2, r1
 8006e50:	62da      	str	r2, [r3, #44]	; 0x2c
 8006e52:	4b29      	ldr	r3, [pc, #164]	; (8006ef8 <HAL_ADC_ConfigChannel+0x250>)
 8006e54:	60fb      	str	r3, [r7, #12]
 8006e56:	687b      	ldr	r3, [r7, #4]
 8006e58:	681b      	ldr	r3, [r3, #0]
 8006e5a:	4a28      	ldr	r2, [pc, #160]	; (8006efc <HAL_ADC_ConfigChannel+0x254>)
 8006e5c:	4293      	cmp	r3, r2
 8006e5e:	d10f      	bne.n	8006e80 <HAL_ADC_ConfigChannel+0x1d8>
 8006e60:	683b      	ldr	r3, [r7, #0]
 8006e62:	681b      	ldr	r3, [r3, #0]
 8006e64:	2b12      	cmp	r3, #18
 8006e66:	d10b      	bne.n	8006e80 <HAL_ADC_ConfigChannel+0x1d8>
 8006e68:	68fb      	ldr	r3, [r7, #12]
 8006e6a:	685b      	ldr	r3, [r3, #4]
 8006e6c:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 8006e70:	68fb      	ldr	r3, [r7, #12]
 8006e72:	605a      	str	r2, [r3, #4]
 8006e74:	68fb      	ldr	r3, [r7, #12]
 8006e76:	685b      	ldr	r3, [r3, #4]
 8006e78:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8006e7c:	68fb      	ldr	r3, [r7, #12]
 8006e7e:	605a      	str	r2, [r3, #4]
 8006e80:	687b      	ldr	r3, [r7, #4]
 8006e82:	681b      	ldr	r3, [r3, #0]
 8006e84:	4a1d      	ldr	r2, [pc, #116]	; (8006efc <HAL_ADC_ConfigChannel+0x254>)
 8006e86:	4293      	cmp	r3, r2
 8006e88:	d12b      	bne.n	8006ee2 <HAL_ADC_ConfigChannel+0x23a>
 8006e8a:	683b      	ldr	r3, [r7, #0]
 8006e8c:	681b      	ldr	r3, [r3, #0]
 8006e8e:	4a1c      	ldr	r2, [pc, #112]	; (8006f00 <HAL_ADC_ConfigChannel+0x258>)
 8006e90:	4293      	cmp	r3, r2
 8006e92:	d003      	beq.n	8006e9c <HAL_ADC_ConfigChannel+0x1f4>
 8006e94:	683b      	ldr	r3, [r7, #0]
 8006e96:	681b      	ldr	r3, [r3, #0]
 8006e98:	2b11      	cmp	r3, #17
 8006e9a:	d122      	bne.n	8006ee2 <HAL_ADC_ConfigChannel+0x23a>
 8006e9c:	68fb      	ldr	r3, [r7, #12]
 8006e9e:	685b      	ldr	r3, [r3, #4]
 8006ea0:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 8006ea4:	68fb      	ldr	r3, [r7, #12]
 8006ea6:	605a      	str	r2, [r3, #4]
 8006ea8:	68fb      	ldr	r3, [r7, #12]
 8006eaa:	685b      	ldr	r3, [r3, #4]
 8006eac:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8006eb0:	68fb      	ldr	r3, [r7, #12]
 8006eb2:	605a      	str	r2, [r3, #4]
 8006eb4:	683b      	ldr	r3, [r7, #0]
 8006eb6:	681b      	ldr	r3, [r3, #0]
 8006eb8:	4a11      	ldr	r2, [pc, #68]	; (8006f00 <HAL_ADC_ConfigChannel+0x258>)
 8006eba:	4293      	cmp	r3, r2
 8006ebc:	d111      	bne.n	8006ee2 <HAL_ADC_ConfigChannel+0x23a>
 8006ebe:	4b11      	ldr	r3, [pc, #68]	; (8006f04 <HAL_ADC_ConfigChannel+0x25c>)
 8006ec0:	681b      	ldr	r3, [r3, #0]
 8006ec2:	4a11      	ldr	r2, [pc, #68]	; (8006f08 <HAL_ADC_ConfigChannel+0x260>)
 8006ec4:	fba2 2303 	umull	r2, r3, r2, r3
 8006ec8:	0c9a      	lsrs	r2, r3, #18
 8006eca:	4613      	mov	r3, r2
 8006ecc:	009b      	lsls	r3, r3, #2
 8006ece:	4413      	add	r3, r2
 8006ed0:	005b      	lsls	r3, r3, #1
 8006ed2:	60bb      	str	r3, [r7, #8]
 8006ed4:	e002      	b.n	8006edc <HAL_ADC_ConfigChannel+0x234>
 8006ed6:	68bb      	ldr	r3, [r7, #8]
 8006ed8:	3b01      	subs	r3, #1
 8006eda:	60bb      	str	r3, [r7, #8]
 8006edc:	68bb      	ldr	r3, [r7, #8]
 8006ede:	2b00      	cmp	r3, #0
 8006ee0:	d1f9      	bne.n	8006ed6 <HAL_ADC_ConfigChannel+0x22e>
 8006ee2:	687b      	ldr	r3, [r7, #4]
 8006ee4:	2200      	movs	r2, #0
 8006ee6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006eea:	2300      	movs	r3, #0
 8006eec:	4618      	mov	r0, r3
 8006eee:	3714      	adds	r7, #20
 8006ef0:	46bd      	mov	sp, r7
 8006ef2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ef6:	4770      	bx	lr
 8006ef8:	40012300 	.word	0x40012300
 8006efc:	40012000 	.word	0x40012000
 8006f00:	10000012 	.word	0x10000012
 8006f04:	200000a4 	.word	0x200000a4
 8006f08:	431bde83 	.word	0x431bde83

08006f0c <ADC_Init>:
 8006f0c:	b480      	push	{r7}
 8006f0e:	b085      	sub	sp, #20
 8006f10:	af00      	add	r7, sp, #0
 8006f12:	6078      	str	r0, [r7, #4]
 8006f14:	4b79      	ldr	r3, [pc, #484]	; (80070fc <ADC_Init+0x1f0>)
 8006f16:	60fb      	str	r3, [r7, #12]
 8006f18:	68fb      	ldr	r3, [r7, #12]
 8006f1a:	685b      	ldr	r3, [r3, #4]
 8006f1c:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8006f20:	68fb      	ldr	r3, [r7, #12]
 8006f22:	605a      	str	r2, [r3, #4]
 8006f24:	68fb      	ldr	r3, [r7, #12]
 8006f26:	685a      	ldr	r2, [r3, #4]
 8006f28:	687b      	ldr	r3, [r7, #4]
 8006f2a:	685b      	ldr	r3, [r3, #4]
 8006f2c:	431a      	orrs	r2, r3
 8006f2e:	68fb      	ldr	r3, [r7, #12]
 8006f30:	605a      	str	r2, [r3, #4]
 8006f32:	687b      	ldr	r3, [r7, #4]
 8006f34:	681b      	ldr	r3, [r3, #0]
 8006f36:	685a      	ldr	r2, [r3, #4]
 8006f38:	687b      	ldr	r3, [r7, #4]
 8006f3a:	681b      	ldr	r3, [r3, #0]
 8006f3c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006f40:	605a      	str	r2, [r3, #4]
 8006f42:	687b      	ldr	r3, [r7, #4]
 8006f44:	681b      	ldr	r3, [r3, #0]
 8006f46:	6859      	ldr	r1, [r3, #4]
 8006f48:	687b      	ldr	r3, [r7, #4]
 8006f4a:	691b      	ldr	r3, [r3, #16]
 8006f4c:	021a      	lsls	r2, r3, #8
 8006f4e:	687b      	ldr	r3, [r7, #4]
 8006f50:	681b      	ldr	r3, [r3, #0]
 8006f52:	430a      	orrs	r2, r1
 8006f54:	605a      	str	r2, [r3, #4]
 8006f56:	687b      	ldr	r3, [r7, #4]
 8006f58:	681b      	ldr	r3, [r3, #0]
 8006f5a:	685a      	ldr	r2, [r3, #4]
 8006f5c:	687b      	ldr	r3, [r7, #4]
 8006f5e:	681b      	ldr	r3, [r3, #0]
 8006f60:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8006f64:	605a      	str	r2, [r3, #4]
 8006f66:	687b      	ldr	r3, [r7, #4]
 8006f68:	681b      	ldr	r3, [r3, #0]
 8006f6a:	6859      	ldr	r1, [r3, #4]
 8006f6c:	687b      	ldr	r3, [r7, #4]
 8006f6e:	689a      	ldr	r2, [r3, #8]
 8006f70:	687b      	ldr	r3, [r7, #4]
 8006f72:	681b      	ldr	r3, [r3, #0]
 8006f74:	430a      	orrs	r2, r1
 8006f76:	605a      	str	r2, [r3, #4]
 8006f78:	687b      	ldr	r3, [r7, #4]
 8006f7a:	681b      	ldr	r3, [r3, #0]
 8006f7c:	689a      	ldr	r2, [r3, #8]
 8006f7e:	687b      	ldr	r3, [r7, #4]
 8006f80:	681b      	ldr	r3, [r3, #0]
 8006f82:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006f86:	609a      	str	r2, [r3, #8]
 8006f88:	687b      	ldr	r3, [r7, #4]
 8006f8a:	681b      	ldr	r3, [r3, #0]
 8006f8c:	6899      	ldr	r1, [r3, #8]
 8006f8e:	687b      	ldr	r3, [r7, #4]
 8006f90:	68da      	ldr	r2, [r3, #12]
 8006f92:	687b      	ldr	r3, [r7, #4]
 8006f94:	681b      	ldr	r3, [r3, #0]
 8006f96:	430a      	orrs	r2, r1
 8006f98:	609a      	str	r2, [r3, #8]
 8006f9a:	687b      	ldr	r3, [r7, #4]
 8006f9c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006f9e:	4a58      	ldr	r2, [pc, #352]	; (8007100 <ADC_Init+0x1f4>)
 8006fa0:	4293      	cmp	r3, r2
 8006fa2:	d022      	beq.n	8006fea <ADC_Init+0xde>
 8006fa4:	687b      	ldr	r3, [r7, #4]
 8006fa6:	681b      	ldr	r3, [r3, #0]
 8006fa8:	689a      	ldr	r2, [r3, #8]
 8006faa:	687b      	ldr	r3, [r7, #4]
 8006fac:	681b      	ldr	r3, [r3, #0]
 8006fae:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8006fb2:	609a      	str	r2, [r3, #8]
 8006fb4:	687b      	ldr	r3, [r7, #4]
 8006fb6:	681b      	ldr	r3, [r3, #0]
 8006fb8:	6899      	ldr	r1, [r3, #8]
 8006fba:	687b      	ldr	r3, [r7, #4]
 8006fbc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8006fbe:	687b      	ldr	r3, [r7, #4]
 8006fc0:	681b      	ldr	r3, [r3, #0]
 8006fc2:	430a      	orrs	r2, r1
 8006fc4:	609a      	str	r2, [r3, #8]
 8006fc6:	687b      	ldr	r3, [r7, #4]
 8006fc8:	681b      	ldr	r3, [r3, #0]
 8006fca:	689a      	ldr	r2, [r3, #8]
 8006fcc:	687b      	ldr	r3, [r7, #4]
 8006fce:	681b      	ldr	r3, [r3, #0]
 8006fd0:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8006fd4:	609a      	str	r2, [r3, #8]
 8006fd6:	687b      	ldr	r3, [r7, #4]
 8006fd8:	681b      	ldr	r3, [r3, #0]
 8006fda:	6899      	ldr	r1, [r3, #8]
 8006fdc:	687b      	ldr	r3, [r7, #4]
 8006fde:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006fe0:	687b      	ldr	r3, [r7, #4]
 8006fe2:	681b      	ldr	r3, [r3, #0]
 8006fe4:	430a      	orrs	r2, r1
 8006fe6:	609a      	str	r2, [r3, #8]
 8006fe8:	e00f      	b.n	800700a <ADC_Init+0xfe>
 8006fea:	687b      	ldr	r3, [r7, #4]
 8006fec:	681b      	ldr	r3, [r3, #0]
 8006fee:	689a      	ldr	r2, [r3, #8]
 8006ff0:	687b      	ldr	r3, [r7, #4]
 8006ff2:	681b      	ldr	r3, [r3, #0]
 8006ff4:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8006ff8:	609a      	str	r2, [r3, #8]
 8006ffa:	687b      	ldr	r3, [r7, #4]
 8006ffc:	681b      	ldr	r3, [r3, #0]
 8006ffe:	689a      	ldr	r2, [r3, #8]
 8007000:	687b      	ldr	r3, [r7, #4]
 8007002:	681b      	ldr	r3, [r3, #0]
 8007004:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8007008:	609a      	str	r2, [r3, #8]
 800700a:	687b      	ldr	r3, [r7, #4]
 800700c:	681b      	ldr	r3, [r3, #0]
 800700e:	689a      	ldr	r2, [r3, #8]
 8007010:	687b      	ldr	r3, [r7, #4]
 8007012:	681b      	ldr	r3, [r3, #0]
 8007014:	f022 0202 	bic.w	r2, r2, #2
 8007018:	609a      	str	r2, [r3, #8]
 800701a:	687b      	ldr	r3, [r7, #4]
 800701c:	681b      	ldr	r3, [r3, #0]
 800701e:	6899      	ldr	r1, [r3, #8]
 8007020:	687b      	ldr	r3, [r7, #4]
 8007022:	7e1b      	ldrb	r3, [r3, #24]
 8007024:	005a      	lsls	r2, r3, #1
 8007026:	687b      	ldr	r3, [r7, #4]
 8007028:	681b      	ldr	r3, [r3, #0]
 800702a:	430a      	orrs	r2, r1
 800702c:	609a      	str	r2, [r3, #8]
 800702e:	687b      	ldr	r3, [r7, #4]
 8007030:	f893 3020 	ldrb.w	r3, [r3, #32]
 8007034:	2b00      	cmp	r3, #0
 8007036:	d01b      	beq.n	8007070 <ADC_Init+0x164>
 8007038:	687b      	ldr	r3, [r7, #4]
 800703a:	681b      	ldr	r3, [r3, #0]
 800703c:	685a      	ldr	r2, [r3, #4]
 800703e:	687b      	ldr	r3, [r7, #4]
 8007040:	681b      	ldr	r3, [r3, #0]
 8007042:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8007046:	605a      	str	r2, [r3, #4]
 8007048:	687b      	ldr	r3, [r7, #4]
 800704a:	681b      	ldr	r3, [r3, #0]
 800704c:	685a      	ldr	r2, [r3, #4]
 800704e:	687b      	ldr	r3, [r7, #4]
 8007050:	681b      	ldr	r3, [r3, #0]
 8007052:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8007056:	605a      	str	r2, [r3, #4]
 8007058:	687b      	ldr	r3, [r7, #4]
 800705a:	681b      	ldr	r3, [r3, #0]
 800705c:	6859      	ldr	r1, [r3, #4]
 800705e:	687b      	ldr	r3, [r7, #4]
 8007060:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007062:	3b01      	subs	r3, #1
 8007064:	035a      	lsls	r2, r3, #13
 8007066:	687b      	ldr	r3, [r7, #4]
 8007068:	681b      	ldr	r3, [r3, #0]
 800706a:	430a      	orrs	r2, r1
 800706c:	605a      	str	r2, [r3, #4]
 800706e:	e007      	b.n	8007080 <ADC_Init+0x174>
 8007070:	687b      	ldr	r3, [r7, #4]
 8007072:	681b      	ldr	r3, [r3, #0]
 8007074:	685a      	ldr	r2, [r3, #4]
 8007076:	687b      	ldr	r3, [r7, #4]
 8007078:	681b      	ldr	r3, [r3, #0]
 800707a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800707e:	605a      	str	r2, [r3, #4]
 8007080:	687b      	ldr	r3, [r7, #4]
 8007082:	681b      	ldr	r3, [r3, #0]
 8007084:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007086:	687b      	ldr	r3, [r7, #4]
 8007088:	681b      	ldr	r3, [r3, #0]
 800708a:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800708e:	62da      	str	r2, [r3, #44]	; 0x2c
 8007090:	687b      	ldr	r3, [r7, #4]
 8007092:	681b      	ldr	r3, [r3, #0]
 8007094:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007096:	687b      	ldr	r3, [r7, #4]
 8007098:	69db      	ldr	r3, [r3, #28]
 800709a:	3b01      	subs	r3, #1
 800709c:	051a      	lsls	r2, r3, #20
 800709e:	687b      	ldr	r3, [r7, #4]
 80070a0:	681b      	ldr	r3, [r3, #0]
 80070a2:	430a      	orrs	r2, r1
 80070a4:	62da      	str	r2, [r3, #44]	; 0x2c
 80070a6:	687b      	ldr	r3, [r7, #4]
 80070a8:	681b      	ldr	r3, [r3, #0]
 80070aa:	689a      	ldr	r2, [r3, #8]
 80070ac:	687b      	ldr	r3, [r7, #4]
 80070ae:	681b      	ldr	r3, [r3, #0]
 80070b0:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80070b4:	609a      	str	r2, [r3, #8]
 80070b6:	687b      	ldr	r3, [r7, #4]
 80070b8:	681b      	ldr	r3, [r3, #0]
 80070ba:	6899      	ldr	r1, [r3, #8]
 80070bc:	687b      	ldr	r3, [r7, #4]
 80070be:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 80070c2:	025a      	lsls	r2, r3, #9
 80070c4:	687b      	ldr	r3, [r7, #4]
 80070c6:	681b      	ldr	r3, [r3, #0]
 80070c8:	430a      	orrs	r2, r1
 80070ca:	609a      	str	r2, [r3, #8]
 80070cc:	687b      	ldr	r3, [r7, #4]
 80070ce:	681b      	ldr	r3, [r3, #0]
 80070d0:	689a      	ldr	r2, [r3, #8]
 80070d2:	687b      	ldr	r3, [r7, #4]
 80070d4:	681b      	ldr	r3, [r3, #0]
 80070d6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80070da:	609a      	str	r2, [r3, #8]
 80070dc:	687b      	ldr	r3, [r7, #4]
 80070de:	681b      	ldr	r3, [r3, #0]
 80070e0:	6899      	ldr	r1, [r3, #8]
 80070e2:	687b      	ldr	r3, [r7, #4]
 80070e4:	695b      	ldr	r3, [r3, #20]
 80070e6:	029a      	lsls	r2, r3, #10
 80070e8:	687b      	ldr	r3, [r7, #4]
 80070ea:	681b      	ldr	r3, [r3, #0]
 80070ec:	430a      	orrs	r2, r1
 80070ee:	609a      	str	r2, [r3, #8]
 80070f0:	bf00      	nop
 80070f2:	3714      	adds	r7, #20
 80070f4:	46bd      	mov	sp, r7
 80070f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070fa:	4770      	bx	lr
 80070fc:	40012300 	.word	0x40012300
 8007100:	0f000001 	.word	0x0f000001

08007104 <HAL_ADCEx_InjectedConfigChannel>:
 8007104:	b480      	push	{r7}
 8007106:	b085      	sub	sp, #20
 8007108:	af00      	add	r7, sp, #0
 800710a:	6078      	str	r0, [r7, #4]
 800710c:	6039      	str	r1, [r7, #0]
 800710e:	687b      	ldr	r3, [r7, #4]
 8007110:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007114:	2b01      	cmp	r3, #1
 8007116:	d101      	bne.n	800711c <HAL_ADCEx_InjectedConfigChannel+0x18>
 8007118:	2302      	movs	r3, #2
 800711a:	e17e      	b.n	800741a <HAL_ADCEx_InjectedConfigChannel+0x316>
 800711c:	687b      	ldr	r3, [r7, #4]
 800711e:	2201      	movs	r2, #1
 8007120:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007124:	683b      	ldr	r3, [r7, #0]
 8007126:	681b      	ldr	r3, [r3, #0]
 8007128:	2b09      	cmp	r3, #9
 800712a:	d925      	bls.n	8007178 <HAL_ADCEx_InjectedConfigChannel+0x74>
 800712c:	687b      	ldr	r3, [r7, #4]
 800712e:	681b      	ldr	r3, [r3, #0]
 8007130:	68d9      	ldr	r1, [r3, #12]
 8007132:	683b      	ldr	r3, [r7, #0]
 8007134:	681b      	ldr	r3, [r3, #0]
 8007136:	b29b      	uxth	r3, r3
 8007138:	461a      	mov	r2, r3
 800713a:	4613      	mov	r3, r2
 800713c:	005b      	lsls	r3, r3, #1
 800713e:	4413      	add	r3, r2
 8007140:	3b1e      	subs	r3, #30
 8007142:	2207      	movs	r2, #7
 8007144:	fa02 f303 	lsl.w	r3, r2, r3
 8007148:	43da      	mvns	r2, r3
 800714a:	687b      	ldr	r3, [r7, #4]
 800714c:	681b      	ldr	r3, [r3, #0]
 800714e:	400a      	ands	r2, r1
 8007150:	60da      	str	r2, [r3, #12]
 8007152:	687b      	ldr	r3, [r7, #4]
 8007154:	681b      	ldr	r3, [r3, #0]
 8007156:	68d9      	ldr	r1, [r3, #12]
 8007158:	683b      	ldr	r3, [r7, #0]
 800715a:	689a      	ldr	r2, [r3, #8]
 800715c:	683b      	ldr	r3, [r7, #0]
 800715e:	681b      	ldr	r3, [r3, #0]
 8007160:	b29b      	uxth	r3, r3
 8007162:	4618      	mov	r0, r3
 8007164:	4603      	mov	r3, r0
 8007166:	005b      	lsls	r3, r3, #1
 8007168:	4403      	add	r3, r0
 800716a:	3b1e      	subs	r3, #30
 800716c:	409a      	lsls	r2, r3
 800716e:	687b      	ldr	r3, [r7, #4]
 8007170:	681b      	ldr	r3, [r3, #0]
 8007172:	430a      	orrs	r2, r1
 8007174:	60da      	str	r2, [r3, #12]
 8007176:	e022      	b.n	80071be <HAL_ADCEx_InjectedConfigChannel+0xba>
 8007178:	687b      	ldr	r3, [r7, #4]
 800717a:	681b      	ldr	r3, [r3, #0]
 800717c:	6919      	ldr	r1, [r3, #16]
 800717e:	683b      	ldr	r3, [r7, #0]
 8007180:	681b      	ldr	r3, [r3, #0]
 8007182:	b29b      	uxth	r3, r3
 8007184:	461a      	mov	r2, r3
 8007186:	4613      	mov	r3, r2
 8007188:	005b      	lsls	r3, r3, #1
 800718a:	4413      	add	r3, r2
 800718c:	2207      	movs	r2, #7
 800718e:	fa02 f303 	lsl.w	r3, r2, r3
 8007192:	43da      	mvns	r2, r3
 8007194:	687b      	ldr	r3, [r7, #4]
 8007196:	681b      	ldr	r3, [r3, #0]
 8007198:	400a      	ands	r2, r1
 800719a:	611a      	str	r2, [r3, #16]
 800719c:	687b      	ldr	r3, [r7, #4]
 800719e:	681b      	ldr	r3, [r3, #0]
 80071a0:	6919      	ldr	r1, [r3, #16]
 80071a2:	683b      	ldr	r3, [r7, #0]
 80071a4:	689a      	ldr	r2, [r3, #8]
 80071a6:	683b      	ldr	r3, [r7, #0]
 80071a8:	681b      	ldr	r3, [r3, #0]
 80071aa:	b29b      	uxth	r3, r3
 80071ac:	4618      	mov	r0, r3
 80071ae:	4603      	mov	r3, r0
 80071b0:	005b      	lsls	r3, r3, #1
 80071b2:	4403      	add	r3, r0
 80071b4:	409a      	lsls	r2, r3
 80071b6:	687b      	ldr	r3, [r7, #4]
 80071b8:	681b      	ldr	r3, [r3, #0]
 80071ba:	430a      	orrs	r2, r1
 80071bc:	611a      	str	r2, [r3, #16]
 80071be:	687b      	ldr	r3, [r7, #4]
 80071c0:	681b      	ldr	r3, [r3, #0]
 80071c2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80071c4:	687b      	ldr	r3, [r7, #4]
 80071c6:	681b      	ldr	r3, [r3, #0]
 80071c8:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 80071cc:	639a      	str	r2, [r3, #56]	; 0x38
 80071ce:	687b      	ldr	r3, [r7, #4]
 80071d0:	681b      	ldr	r3, [r3, #0]
 80071d2:	6b99      	ldr	r1, [r3, #56]	; 0x38
 80071d4:	683b      	ldr	r3, [r7, #0]
 80071d6:	691b      	ldr	r3, [r3, #16]
 80071d8:	3b01      	subs	r3, #1
 80071da:	051a      	lsls	r2, r3, #20
 80071dc:	687b      	ldr	r3, [r7, #4]
 80071de:	681b      	ldr	r3, [r3, #0]
 80071e0:	430a      	orrs	r2, r1
 80071e2:	639a      	str	r2, [r3, #56]	; 0x38
 80071e4:	687b      	ldr	r3, [r7, #4]
 80071e6:	681b      	ldr	r3, [r3, #0]
 80071e8:	6b99      	ldr	r1, [r3, #56]	; 0x38
 80071ea:	683b      	ldr	r3, [r7, #0]
 80071ec:	685b      	ldr	r3, [r3, #4]
 80071ee:	b2da      	uxtb	r2, r3
 80071f0:	683b      	ldr	r3, [r7, #0]
 80071f2:	691b      	ldr	r3, [r3, #16]
 80071f4:	b2db      	uxtb	r3, r3
 80071f6:	1ad3      	subs	r3, r2, r3
 80071f8:	b2db      	uxtb	r3, r3
 80071fa:	3303      	adds	r3, #3
 80071fc:	b2db      	uxtb	r3, r3
 80071fe:	461a      	mov	r2, r3
 8007200:	4613      	mov	r3, r2
 8007202:	009b      	lsls	r3, r3, #2
 8007204:	4413      	add	r3, r2
 8007206:	221f      	movs	r2, #31
 8007208:	fa02 f303 	lsl.w	r3, r2, r3
 800720c:	43da      	mvns	r2, r3
 800720e:	687b      	ldr	r3, [r7, #4]
 8007210:	681b      	ldr	r3, [r3, #0]
 8007212:	400a      	ands	r2, r1
 8007214:	639a      	str	r2, [r3, #56]	; 0x38
 8007216:	687b      	ldr	r3, [r7, #4]
 8007218:	681b      	ldr	r3, [r3, #0]
 800721a:	6b99      	ldr	r1, [r3, #56]	; 0x38
 800721c:	683b      	ldr	r3, [r7, #0]
 800721e:	681b      	ldr	r3, [r3, #0]
 8007220:	b29b      	uxth	r3, r3
 8007222:	4618      	mov	r0, r3
 8007224:	683b      	ldr	r3, [r7, #0]
 8007226:	685b      	ldr	r3, [r3, #4]
 8007228:	b2da      	uxtb	r2, r3
 800722a:	683b      	ldr	r3, [r7, #0]
 800722c:	691b      	ldr	r3, [r3, #16]
 800722e:	b2db      	uxtb	r3, r3
 8007230:	1ad3      	subs	r3, r2, r3
 8007232:	b2db      	uxtb	r3, r3
 8007234:	3303      	adds	r3, #3
 8007236:	b2db      	uxtb	r3, r3
 8007238:	461a      	mov	r2, r3
 800723a:	4613      	mov	r3, r2
 800723c:	009b      	lsls	r3, r3, #2
 800723e:	4413      	add	r3, r2
 8007240:	fa00 f203 	lsl.w	r2, r0, r3
 8007244:	687b      	ldr	r3, [r7, #4]
 8007246:	681b      	ldr	r3, [r3, #0]
 8007248:	430a      	orrs	r2, r1
 800724a:	639a      	str	r2, [r3, #56]	; 0x38
 800724c:	683b      	ldr	r3, [r7, #0]
 800724e:	699b      	ldr	r3, [r3, #24]
 8007250:	4a75      	ldr	r2, [pc, #468]	; (8007428 <HAL_ADCEx_InjectedConfigChannel+0x324>)
 8007252:	4293      	cmp	r3, r2
 8007254:	d022      	beq.n	800729c <HAL_ADCEx_InjectedConfigChannel+0x198>
 8007256:	687b      	ldr	r3, [r7, #4]
 8007258:	681b      	ldr	r3, [r3, #0]
 800725a:	689a      	ldr	r2, [r3, #8]
 800725c:	687b      	ldr	r3, [r7, #4]
 800725e:	681b      	ldr	r3, [r3, #0]
 8007260:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8007264:	609a      	str	r2, [r3, #8]
 8007266:	687b      	ldr	r3, [r7, #4]
 8007268:	681b      	ldr	r3, [r3, #0]
 800726a:	6899      	ldr	r1, [r3, #8]
 800726c:	683b      	ldr	r3, [r7, #0]
 800726e:	699a      	ldr	r2, [r3, #24]
 8007270:	687b      	ldr	r3, [r7, #4]
 8007272:	681b      	ldr	r3, [r3, #0]
 8007274:	430a      	orrs	r2, r1
 8007276:	609a      	str	r2, [r3, #8]
 8007278:	687b      	ldr	r3, [r7, #4]
 800727a:	681b      	ldr	r3, [r3, #0]
 800727c:	689a      	ldr	r2, [r3, #8]
 800727e:	687b      	ldr	r3, [r7, #4]
 8007280:	681b      	ldr	r3, [r3, #0]
 8007282:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8007286:	609a      	str	r2, [r3, #8]
 8007288:	687b      	ldr	r3, [r7, #4]
 800728a:	681b      	ldr	r3, [r3, #0]
 800728c:	6899      	ldr	r1, [r3, #8]
 800728e:	683b      	ldr	r3, [r7, #0]
 8007290:	69da      	ldr	r2, [r3, #28]
 8007292:	687b      	ldr	r3, [r7, #4]
 8007294:	681b      	ldr	r3, [r3, #0]
 8007296:	430a      	orrs	r2, r1
 8007298:	609a      	str	r2, [r3, #8]
 800729a:	e00f      	b.n	80072bc <HAL_ADCEx_InjectedConfigChannel+0x1b8>
 800729c:	687b      	ldr	r3, [r7, #4]
 800729e:	681b      	ldr	r3, [r3, #0]
 80072a0:	689a      	ldr	r2, [r3, #8]
 80072a2:	687b      	ldr	r3, [r7, #4]
 80072a4:	681b      	ldr	r3, [r3, #0]
 80072a6:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 80072aa:	609a      	str	r2, [r3, #8]
 80072ac:	687b      	ldr	r3, [r7, #4]
 80072ae:	681b      	ldr	r3, [r3, #0]
 80072b0:	689a      	ldr	r2, [r3, #8]
 80072b2:	687b      	ldr	r3, [r7, #4]
 80072b4:	681b      	ldr	r3, [r3, #0]
 80072b6:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 80072ba:	609a      	str	r2, [r3, #8]
 80072bc:	683b      	ldr	r3, [r7, #0]
 80072be:	7d5b      	ldrb	r3, [r3, #21]
 80072c0:	2b00      	cmp	r3, #0
 80072c2:	d008      	beq.n	80072d6 <HAL_ADCEx_InjectedConfigChannel+0x1d2>
 80072c4:	687b      	ldr	r3, [r7, #4]
 80072c6:	681b      	ldr	r3, [r3, #0]
 80072c8:	685a      	ldr	r2, [r3, #4]
 80072ca:	687b      	ldr	r3, [r7, #4]
 80072cc:	681b      	ldr	r3, [r3, #0]
 80072ce:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80072d2:	605a      	str	r2, [r3, #4]
 80072d4:	e007      	b.n	80072e6 <HAL_ADCEx_InjectedConfigChannel+0x1e2>
 80072d6:	687b      	ldr	r3, [r7, #4]
 80072d8:	681b      	ldr	r3, [r3, #0]
 80072da:	685a      	ldr	r2, [r3, #4]
 80072dc:	687b      	ldr	r3, [r7, #4]
 80072de:	681b      	ldr	r3, [r3, #0]
 80072e0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80072e4:	605a      	str	r2, [r3, #4]
 80072e6:	683b      	ldr	r3, [r7, #0]
 80072e8:	7d1b      	ldrb	r3, [r3, #20]
 80072ea:	2b00      	cmp	r3, #0
 80072ec:	d008      	beq.n	8007300 <HAL_ADCEx_InjectedConfigChannel+0x1fc>
 80072ee:	687b      	ldr	r3, [r7, #4]
 80072f0:	681b      	ldr	r3, [r3, #0]
 80072f2:	685a      	ldr	r2, [r3, #4]
 80072f4:	687b      	ldr	r3, [r7, #4]
 80072f6:	681b      	ldr	r3, [r3, #0]
 80072f8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80072fc:	605a      	str	r2, [r3, #4]
 80072fe:	e007      	b.n	8007310 <HAL_ADCEx_InjectedConfigChannel+0x20c>
 8007300:	687b      	ldr	r3, [r7, #4]
 8007302:	681b      	ldr	r3, [r3, #0]
 8007304:	685a      	ldr	r2, [r3, #4]
 8007306:	687b      	ldr	r3, [r7, #4]
 8007308:	681b      	ldr	r3, [r3, #0]
 800730a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800730e:	605a      	str	r2, [r3, #4]
 8007310:	683b      	ldr	r3, [r7, #0]
 8007312:	685b      	ldr	r3, [r3, #4]
 8007314:	2b03      	cmp	r3, #3
 8007316:	d02e      	beq.n	8007376 <HAL_ADCEx_InjectedConfigChannel+0x272>
 8007318:	2b03      	cmp	r3, #3
 800731a:	d840      	bhi.n	800739e <HAL_ADCEx_InjectedConfigChannel+0x29a>
 800731c:	2b01      	cmp	r3, #1
 800731e:	d002      	beq.n	8007326 <HAL_ADCEx_InjectedConfigChannel+0x222>
 8007320:	2b02      	cmp	r3, #2
 8007322:	d014      	beq.n	800734e <HAL_ADCEx_InjectedConfigChannel+0x24a>
 8007324:	e03b      	b.n	800739e <HAL_ADCEx_InjectedConfigChannel+0x29a>
 8007326:	687b      	ldr	r3, [r7, #4]
 8007328:	681b      	ldr	r3, [r3, #0]
 800732a:	695b      	ldr	r3, [r3, #20]
 800732c:	687a      	ldr	r2, [r7, #4]
 800732e:	6812      	ldr	r2, [r2, #0]
 8007330:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8007334:	f023 030f 	bic.w	r3, r3, #15
 8007338:	6153      	str	r3, [r2, #20]
 800733a:	687b      	ldr	r3, [r7, #4]
 800733c:	681b      	ldr	r3, [r3, #0]
 800733e:	6959      	ldr	r1, [r3, #20]
 8007340:	683b      	ldr	r3, [r7, #0]
 8007342:	68da      	ldr	r2, [r3, #12]
 8007344:	687b      	ldr	r3, [r7, #4]
 8007346:	681b      	ldr	r3, [r3, #0]
 8007348:	430a      	orrs	r2, r1
 800734a:	615a      	str	r2, [r3, #20]
 800734c:	e03b      	b.n	80073c6 <HAL_ADCEx_InjectedConfigChannel+0x2c2>
 800734e:	687b      	ldr	r3, [r7, #4]
 8007350:	681b      	ldr	r3, [r3, #0]
 8007352:	699b      	ldr	r3, [r3, #24]
 8007354:	687a      	ldr	r2, [r7, #4]
 8007356:	6812      	ldr	r2, [r2, #0]
 8007358:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 800735c:	f023 030f 	bic.w	r3, r3, #15
 8007360:	6193      	str	r3, [r2, #24]
 8007362:	687b      	ldr	r3, [r7, #4]
 8007364:	681b      	ldr	r3, [r3, #0]
 8007366:	6999      	ldr	r1, [r3, #24]
 8007368:	683b      	ldr	r3, [r7, #0]
 800736a:	68da      	ldr	r2, [r3, #12]
 800736c:	687b      	ldr	r3, [r7, #4]
 800736e:	681b      	ldr	r3, [r3, #0]
 8007370:	430a      	orrs	r2, r1
 8007372:	619a      	str	r2, [r3, #24]
 8007374:	e027      	b.n	80073c6 <HAL_ADCEx_InjectedConfigChannel+0x2c2>
 8007376:	687b      	ldr	r3, [r7, #4]
 8007378:	681b      	ldr	r3, [r3, #0]
 800737a:	69db      	ldr	r3, [r3, #28]
 800737c:	687a      	ldr	r2, [r7, #4]
 800737e:	6812      	ldr	r2, [r2, #0]
 8007380:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8007384:	f023 030f 	bic.w	r3, r3, #15
 8007388:	61d3      	str	r3, [r2, #28]
 800738a:	687b      	ldr	r3, [r7, #4]
 800738c:	681b      	ldr	r3, [r3, #0]
 800738e:	69d9      	ldr	r1, [r3, #28]
 8007390:	683b      	ldr	r3, [r7, #0]
 8007392:	68da      	ldr	r2, [r3, #12]
 8007394:	687b      	ldr	r3, [r7, #4]
 8007396:	681b      	ldr	r3, [r3, #0]
 8007398:	430a      	orrs	r2, r1
 800739a:	61da      	str	r2, [r3, #28]
 800739c:	e013      	b.n	80073c6 <HAL_ADCEx_InjectedConfigChannel+0x2c2>
 800739e:	687b      	ldr	r3, [r7, #4]
 80073a0:	681b      	ldr	r3, [r3, #0]
 80073a2:	6a1b      	ldr	r3, [r3, #32]
 80073a4:	687a      	ldr	r2, [r7, #4]
 80073a6:	6812      	ldr	r2, [r2, #0]
 80073a8:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 80073ac:	f023 030f 	bic.w	r3, r3, #15
 80073b0:	6213      	str	r3, [r2, #32]
 80073b2:	687b      	ldr	r3, [r7, #4]
 80073b4:	681b      	ldr	r3, [r3, #0]
 80073b6:	6a19      	ldr	r1, [r3, #32]
 80073b8:	683b      	ldr	r3, [r7, #0]
 80073ba:	68da      	ldr	r2, [r3, #12]
 80073bc:	687b      	ldr	r3, [r7, #4]
 80073be:	681b      	ldr	r3, [r3, #0]
 80073c0:	430a      	orrs	r2, r1
 80073c2:	621a      	str	r2, [r3, #32]
 80073c4:	bf00      	nop
 80073c6:	4b19      	ldr	r3, [pc, #100]	; (800742c <HAL_ADCEx_InjectedConfigChannel+0x328>)
 80073c8:	60fb      	str	r3, [r7, #12]
 80073ca:	687b      	ldr	r3, [r7, #4]
 80073cc:	681b      	ldr	r3, [r3, #0]
 80073ce:	4a18      	ldr	r2, [pc, #96]	; (8007430 <HAL_ADCEx_InjectedConfigChannel+0x32c>)
 80073d0:	4293      	cmp	r3, r2
 80073d2:	d109      	bne.n	80073e8 <HAL_ADCEx_InjectedConfigChannel+0x2e4>
 80073d4:	683b      	ldr	r3, [r7, #0]
 80073d6:	681b      	ldr	r3, [r3, #0]
 80073d8:	2b12      	cmp	r3, #18
 80073da:	d105      	bne.n	80073e8 <HAL_ADCEx_InjectedConfigChannel+0x2e4>
 80073dc:	68fb      	ldr	r3, [r7, #12]
 80073de:	685b      	ldr	r3, [r3, #4]
 80073e0:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 80073e4:	68fb      	ldr	r3, [r7, #12]
 80073e6:	605a      	str	r2, [r3, #4]
 80073e8:	687b      	ldr	r3, [r7, #4]
 80073ea:	681b      	ldr	r3, [r3, #0]
 80073ec:	4a10      	ldr	r2, [pc, #64]	; (8007430 <HAL_ADCEx_InjectedConfigChannel+0x32c>)
 80073ee:	4293      	cmp	r3, r2
 80073f0:	d10e      	bne.n	8007410 <HAL_ADCEx_InjectedConfigChannel+0x30c>
 80073f2:	683b      	ldr	r3, [r7, #0]
 80073f4:	681b      	ldr	r3, [r3, #0]
 80073f6:	4a0f      	ldr	r2, [pc, #60]	; (8007434 <HAL_ADCEx_InjectedConfigChannel+0x330>)
 80073f8:	4293      	cmp	r3, r2
 80073fa:	d003      	beq.n	8007404 <HAL_ADCEx_InjectedConfigChannel+0x300>
 80073fc:	683b      	ldr	r3, [r7, #0]
 80073fe:	681b      	ldr	r3, [r3, #0]
 8007400:	2b11      	cmp	r3, #17
 8007402:	d105      	bne.n	8007410 <HAL_ADCEx_InjectedConfigChannel+0x30c>
 8007404:	68fb      	ldr	r3, [r7, #12]
 8007406:	685b      	ldr	r3, [r3, #4]
 8007408:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 800740c:	68fb      	ldr	r3, [r7, #12]
 800740e:	605a      	str	r2, [r3, #4]
 8007410:	687b      	ldr	r3, [r7, #4]
 8007412:	2200      	movs	r2, #0
 8007414:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007418:	2300      	movs	r3, #0
 800741a:	4618      	mov	r0, r3
 800741c:	3714      	adds	r7, #20
 800741e:	46bd      	mov	sp, r7
 8007420:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007424:	4770      	bx	lr
 8007426:	bf00      	nop
 8007428:	000f0001 	.word	0x000f0001
 800742c:	40012300 	.word	0x40012300
 8007430:	40012000 	.word	0x40012000
 8007434:	10000012 	.word	0x10000012

08007438 <__NVIC_SetPriorityGrouping>:
 8007438:	b480      	push	{r7}
 800743a:	b085      	sub	sp, #20
 800743c:	af00      	add	r7, sp, #0
 800743e:	6078      	str	r0, [r7, #4]
 8007440:	687b      	ldr	r3, [r7, #4]
 8007442:	f003 0307 	and.w	r3, r3, #7
 8007446:	60fb      	str	r3, [r7, #12]
 8007448:	4b0c      	ldr	r3, [pc, #48]	; (800747c <__NVIC_SetPriorityGrouping+0x44>)
 800744a:	68db      	ldr	r3, [r3, #12]
 800744c:	60bb      	str	r3, [r7, #8]
 800744e:	68ba      	ldr	r2, [r7, #8]
 8007450:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8007454:	4013      	ands	r3, r2
 8007456:	60bb      	str	r3, [r7, #8]
 8007458:	68fb      	ldr	r3, [r7, #12]
 800745a:	021a      	lsls	r2, r3, #8
 800745c:	68bb      	ldr	r3, [r7, #8]
 800745e:	4313      	orrs	r3, r2
 8007460:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8007464:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007468:	60bb      	str	r3, [r7, #8]
 800746a:	4a04      	ldr	r2, [pc, #16]	; (800747c <__NVIC_SetPriorityGrouping+0x44>)
 800746c:	68bb      	ldr	r3, [r7, #8]
 800746e:	60d3      	str	r3, [r2, #12]
 8007470:	bf00      	nop
 8007472:	3714      	adds	r7, #20
 8007474:	46bd      	mov	sp, r7
 8007476:	f85d 7b04 	ldr.w	r7, [sp], #4
 800747a:	4770      	bx	lr
 800747c:	e000ed00 	.word	0xe000ed00

08007480 <__NVIC_GetPriorityGrouping>:
 8007480:	b480      	push	{r7}
 8007482:	af00      	add	r7, sp, #0
 8007484:	4b04      	ldr	r3, [pc, #16]	; (8007498 <__NVIC_GetPriorityGrouping+0x18>)
 8007486:	68db      	ldr	r3, [r3, #12]
 8007488:	0a1b      	lsrs	r3, r3, #8
 800748a:	f003 0307 	and.w	r3, r3, #7
 800748e:	4618      	mov	r0, r3
 8007490:	46bd      	mov	sp, r7
 8007492:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007496:	4770      	bx	lr
 8007498:	e000ed00 	.word	0xe000ed00

0800749c <__NVIC_EnableIRQ>:
 800749c:	b480      	push	{r7}
 800749e:	b083      	sub	sp, #12
 80074a0:	af00      	add	r7, sp, #0
 80074a2:	4603      	mov	r3, r0
 80074a4:	71fb      	strb	r3, [r7, #7]
 80074a6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80074aa:	2b00      	cmp	r3, #0
 80074ac:	db0b      	blt.n	80074c6 <__NVIC_EnableIRQ+0x2a>
 80074ae:	79fb      	ldrb	r3, [r7, #7]
 80074b0:	f003 021f 	and.w	r2, r3, #31
 80074b4:	4907      	ldr	r1, [pc, #28]	; (80074d4 <__NVIC_EnableIRQ+0x38>)
 80074b6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80074ba:	095b      	lsrs	r3, r3, #5
 80074bc:	2001      	movs	r0, #1
 80074be:	fa00 f202 	lsl.w	r2, r0, r2
 80074c2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80074c6:	bf00      	nop
 80074c8:	370c      	adds	r7, #12
 80074ca:	46bd      	mov	sp, r7
 80074cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074d0:	4770      	bx	lr
 80074d2:	bf00      	nop
 80074d4:	e000e100 	.word	0xe000e100

080074d8 <__NVIC_DisableIRQ>:
 80074d8:	b480      	push	{r7}
 80074da:	b083      	sub	sp, #12
 80074dc:	af00      	add	r7, sp, #0
 80074de:	4603      	mov	r3, r0
 80074e0:	71fb      	strb	r3, [r7, #7]
 80074e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80074e6:	2b00      	cmp	r3, #0
 80074e8:	db12      	blt.n	8007510 <__NVIC_DisableIRQ+0x38>
 80074ea:	79fb      	ldrb	r3, [r7, #7]
 80074ec:	f003 021f 	and.w	r2, r3, #31
 80074f0:	490a      	ldr	r1, [pc, #40]	; (800751c <__NVIC_DisableIRQ+0x44>)
 80074f2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80074f6:	095b      	lsrs	r3, r3, #5
 80074f8:	2001      	movs	r0, #1
 80074fa:	fa00 f202 	lsl.w	r2, r0, r2
 80074fe:	3320      	adds	r3, #32
 8007500:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8007504:	f3bf 8f4f 	dsb	sy
 8007508:	bf00      	nop
 800750a:	f3bf 8f6f 	isb	sy
 800750e:	bf00      	nop
 8007510:	bf00      	nop
 8007512:	370c      	adds	r7, #12
 8007514:	46bd      	mov	sp, r7
 8007516:	f85d 7b04 	ldr.w	r7, [sp], #4
 800751a:	4770      	bx	lr
 800751c:	e000e100 	.word	0xe000e100

08007520 <__NVIC_SetPriority>:
 8007520:	b480      	push	{r7}
 8007522:	b083      	sub	sp, #12
 8007524:	af00      	add	r7, sp, #0
 8007526:	4603      	mov	r3, r0
 8007528:	6039      	str	r1, [r7, #0]
 800752a:	71fb      	strb	r3, [r7, #7]
 800752c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007530:	2b00      	cmp	r3, #0
 8007532:	db0a      	blt.n	800754a <__NVIC_SetPriority+0x2a>
 8007534:	683b      	ldr	r3, [r7, #0]
 8007536:	b2da      	uxtb	r2, r3
 8007538:	490c      	ldr	r1, [pc, #48]	; (800756c <__NVIC_SetPriority+0x4c>)
 800753a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800753e:	0112      	lsls	r2, r2, #4
 8007540:	b2d2      	uxtb	r2, r2
 8007542:	440b      	add	r3, r1
 8007544:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8007548:	e00a      	b.n	8007560 <__NVIC_SetPriority+0x40>
 800754a:	683b      	ldr	r3, [r7, #0]
 800754c:	b2da      	uxtb	r2, r3
 800754e:	4908      	ldr	r1, [pc, #32]	; (8007570 <__NVIC_SetPriority+0x50>)
 8007550:	79fb      	ldrb	r3, [r7, #7]
 8007552:	f003 030f 	and.w	r3, r3, #15
 8007556:	3b04      	subs	r3, #4
 8007558:	0112      	lsls	r2, r2, #4
 800755a:	b2d2      	uxtb	r2, r2
 800755c:	440b      	add	r3, r1
 800755e:	761a      	strb	r2, [r3, #24]
 8007560:	bf00      	nop
 8007562:	370c      	adds	r7, #12
 8007564:	46bd      	mov	sp, r7
 8007566:	f85d 7b04 	ldr.w	r7, [sp], #4
 800756a:	4770      	bx	lr
 800756c:	e000e100 	.word	0xe000e100
 8007570:	e000ed00 	.word	0xe000ed00

08007574 <NVIC_EncodePriority>:
 8007574:	b480      	push	{r7}
 8007576:	b089      	sub	sp, #36	; 0x24
 8007578:	af00      	add	r7, sp, #0
 800757a:	60f8      	str	r0, [r7, #12]
 800757c:	60b9      	str	r1, [r7, #8]
 800757e:	607a      	str	r2, [r7, #4]
 8007580:	68fb      	ldr	r3, [r7, #12]
 8007582:	f003 0307 	and.w	r3, r3, #7
 8007586:	61fb      	str	r3, [r7, #28]
 8007588:	69fb      	ldr	r3, [r7, #28]
 800758a:	f1c3 0307 	rsb	r3, r3, #7
 800758e:	2b04      	cmp	r3, #4
 8007590:	bf28      	it	cs
 8007592:	2304      	movcs	r3, #4
 8007594:	61bb      	str	r3, [r7, #24]
 8007596:	69fb      	ldr	r3, [r7, #28]
 8007598:	3304      	adds	r3, #4
 800759a:	2b06      	cmp	r3, #6
 800759c:	d902      	bls.n	80075a4 <NVIC_EncodePriority+0x30>
 800759e:	69fb      	ldr	r3, [r7, #28]
 80075a0:	3b03      	subs	r3, #3
 80075a2:	e000      	b.n	80075a6 <NVIC_EncodePriority+0x32>
 80075a4:	2300      	movs	r3, #0
 80075a6:	617b      	str	r3, [r7, #20]
 80075a8:	f04f 32ff 	mov.w	r2, #4294967295
 80075ac:	69bb      	ldr	r3, [r7, #24]
 80075ae:	fa02 f303 	lsl.w	r3, r2, r3
 80075b2:	43da      	mvns	r2, r3
 80075b4:	68bb      	ldr	r3, [r7, #8]
 80075b6:	401a      	ands	r2, r3
 80075b8:	697b      	ldr	r3, [r7, #20]
 80075ba:	409a      	lsls	r2, r3
 80075bc:	f04f 31ff 	mov.w	r1, #4294967295
 80075c0:	697b      	ldr	r3, [r7, #20]
 80075c2:	fa01 f303 	lsl.w	r3, r1, r3
 80075c6:	43d9      	mvns	r1, r3
 80075c8:	687b      	ldr	r3, [r7, #4]
 80075ca:	400b      	ands	r3, r1
 80075cc:	4313      	orrs	r3, r2
 80075ce:	4618      	mov	r0, r3
 80075d0:	3724      	adds	r7, #36	; 0x24
 80075d2:	46bd      	mov	sp, r7
 80075d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075d8:	4770      	bx	lr
	...

080075dc <SysTick_Config>:
 80075dc:	b580      	push	{r7, lr}
 80075de:	b082      	sub	sp, #8
 80075e0:	af00      	add	r7, sp, #0
 80075e2:	6078      	str	r0, [r7, #4]
 80075e4:	687b      	ldr	r3, [r7, #4]
 80075e6:	3b01      	subs	r3, #1
 80075e8:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80075ec:	d301      	bcc.n	80075f2 <SysTick_Config+0x16>
 80075ee:	2301      	movs	r3, #1
 80075f0:	e00f      	b.n	8007612 <SysTick_Config+0x36>
 80075f2:	4a0a      	ldr	r2, [pc, #40]	; (800761c <SysTick_Config+0x40>)
 80075f4:	687b      	ldr	r3, [r7, #4]
 80075f6:	3b01      	subs	r3, #1
 80075f8:	6053      	str	r3, [r2, #4]
 80075fa:	210f      	movs	r1, #15
 80075fc:	f04f 30ff 	mov.w	r0, #4294967295
 8007600:	f7ff ff8e 	bl	8007520 <__NVIC_SetPriority>
 8007604:	4b05      	ldr	r3, [pc, #20]	; (800761c <SysTick_Config+0x40>)
 8007606:	2200      	movs	r2, #0
 8007608:	609a      	str	r2, [r3, #8]
 800760a:	4b04      	ldr	r3, [pc, #16]	; (800761c <SysTick_Config+0x40>)
 800760c:	2207      	movs	r2, #7
 800760e:	601a      	str	r2, [r3, #0]
 8007610:	2300      	movs	r3, #0
 8007612:	4618      	mov	r0, r3
 8007614:	3708      	adds	r7, #8
 8007616:	46bd      	mov	sp, r7
 8007618:	bd80      	pop	{r7, pc}
 800761a:	bf00      	nop
 800761c:	e000e010 	.word	0xe000e010

08007620 <HAL_NVIC_SetPriorityGrouping>:
 8007620:	b580      	push	{r7, lr}
 8007622:	b082      	sub	sp, #8
 8007624:	af00      	add	r7, sp, #0
 8007626:	6078      	str	r0, [r7, #4]
 8007628:	6878      	ldr	r0, [r7, #4]
 800762a:	f7ff ff05 	bl	8007438 <__NVIC_SetPriorityGrouping>
 800762e:	bf00      	nop
 8007630:	3708      	adds	r7, #8
 8007632:	46bd      	mov	sp, r7
 8007634:	bd80      	pop	{r7, pc}

08007636 <HAL_NVIC_SetPriority>:
 8007636:	b580      	push	{r7, lr}
 8007638:	b086      	sub	sp, #24
 800763a:	af00      	add	r7, sp, #0
 800763c:	4603      	mov	r3, r0
 800763e:	60b9      	str	r1, [r7, #8]
 8007640:	607a      	str	r2, [r7, #4]
 8007642:	73fb      	strb	r3, [r7, #15]
 8007644:	2300      	movs	r3, #0
 8007646:	617b      	str	r3, [r7, #20]
 8007648:	f7ff ff1a 	bl	8007480 <__NVIC_GetPriorityGrouping>
 800764c:	6178      	str	r0, [r7, #20]
 800764e:	687a      	ldr	r2, [r7, #4]
 8007650:	68b9      	ldr	r1, [r7, #8]
 8007652:	6978      	ldr	r0, [r7, #20]
 8007654:	f7ff ff8e 	bl	8007574 <NVIC_EncodePriority>
 8007658:	4602      	mov	r2, r0
 800765a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800765e:	4611      	mov	r1, r2
 8007660:	4618      	mov	r0, r3
 8007662:	f7ff ff5d 	bl	8007520 <__NVIC_SetPriority>
 8007666:	bf00      	nop
 8007668:	3718      	adds	r7, #24
 800766a:	46bd      	mov	sp, r7
 800766c:	bd80      	pop	{r7, pc}

0800766e <HAL_NVIC_EnableIRQ>:
 800766e:	b580      	push	{r7, lr}
 8007670:	b082      	sub	sp, #8
 8007672:	af00      	add	r7, sp, #0
 8007674:	4603      	mov	r3, r0
 8007676:	71fb      	strb	r3, [r7, #7]
 8007678:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800767c:	4618      	mov	r0, r3
 800767e:	f7ff ff0d 	bl	800749c <__NVIC_EnableIRQ>
 8007682:	bf00      	nop
 8007684:	3708      	adds	r7, #8
 8007686:	46bd      	mov	sp, r7
 8007688:	bd80      	pop	{r7, pc}

0800768a <HAL_NVIC_DisableIRQ>:
 800768a:	b580      	push	{r7, lr}
 800768c:	b082      	sub	sp, #8
 800768e:	af00      	add	r7, sp, #0
 8007690:	4603      	mov	r3, r0
 8007692:	71fb      	strb	r3, [r7, #7]
 8007694:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007698:	4618      	mov	r0, r3
 800769a:	f7ff ff1d 	bl	80074d8 <__NVIC_DisableIRQ>
 800769e:	bf00      	nop
 80076a0:	3708      	adds	r7, #8
 80076a2:	46bd      	mov	sp, r7
 80076a4:	bd80      	pop	{r7, pc}

080076a6 <HAL_SYSTICK_Config>:
 80076a6:	b580      	push	{r7, lr}
 80076a8:	b082      	sub	sp, #8
 80076aa:	af00      	add	r7, sp, #0
 80076ac:	6078      	str	r0, [r7, #4]
 80076ae:	6878      	ldr	r0, [r7, #4]
 80076b0:	f7ff ff94 	bl	80075dc <SysTick_Config>
 80076b4:	4603      	mov	r3, r0
 80076b6:	4618      	mov	r0, r3
 80076b8:	3708      	adds	r7, #8
 80076ba:	46bd      	mov	sp, r7
 80076bc:	bd80      	pop	{r7, pc}
	...

080076c0 <HAL_DMA_Init>:
 80076c0:	b580      	push	{r7, lr}
 80076c2:	b086      	sub	sp, #24
 80076c4:	af00      	add	r7, sp, #0
 80076c6:	6078      	str	r0, [r7, #4]
 80076c8:	2300      	movs	r3, #0
 80076ca:	617b      	str	r3, [r7, #20]
 80076cc:	f7ff f90e 	bl	80068ec <HAL_GetTick>
 80076d0:	6138      	str	r0, [r7, #16]
 80076d2:	687b      	ldr	r3, [r7, #4]
 80076d4:	2b00      	cmp	r3, #0
 80076d6:	d101      	bne.n	80076dc <HAL_DMA_Init+0x1c>
 80076d8:	2301      	movs	r3, #1
 80076da:	e099      	b.n	8007810 <HAL_DMA_Init+0x150>
 80076dc:	687b      	ldr	r3, [r7, #4]
 80076de:	2202      	movs	r2, #2
 80076e0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80076e4:	687b      	ldr	r3, [r7, #4]
 80076e6:	2200      	movs	r2, #0
 80076e8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80076ec:	687b      	ldr	r3, [r7, #4]
 80076ee:	681b      	ldr	r3, [r3, #0]
 80076f0:	681a      	ldr	r2, [r3, #0]
 80076f2:	687b      	ldr	r3, [r7, #4]
 80076f4:	681b      	ldr	r3, [r3, #0]
 80076f6:	f022 0201 	bic.w	r2, r2, #1
 80076fa:	601a      	str	r2, [r3, #0]
 80076fc:	e00f      	b.n	800771e <HAL_DMA_Init+0x5e>
 80076fe:	f7ff f8f5 	bl	80068ec <HAL_GetTick>
 8007702:	4602      	mov	r2, r0
 8007704:	693b      	ldr	r3, [r7, #16]
 8007706:	1ad3      	subs	r3, r2, r3
 8007708:	2b05      	cmp	r3, #5
 800770a:	d908      	bls.n	800771e <HAL_DMA_Init+0x5e>
 800770c:	687b      	ldr	r3, [r7, #4]
 800770e:	2220      	movs	r2, #32
 8007710:	655a      	str	r2, [r3, #84]	; 0x54
 8007712:	687b      	ldr	r3, [r7, #4]
 8007714:	2203      	movs	r2, #3
 8007716:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800771a:	2303      	movs	r3, #3
 800771c:	e078      	b.n	8007810 <HAL_DMA_Init+0x150>
 800771e:	687b      	ldr	r3, [r7, #4]
 8007720:	681b      	ldr	r3, [r3, #0]
 8007722:	681b      	ldr	r3, [r3, #0]
 8007724:	f003 0301 	and.w	r3, r3, #1
 8007728:	2b00      	cmp	r3, #0
 800772a:	d1e8      	bne.n	80076fe <HAL_DMA_Init+0x3e>
 800772c:	687b      	ldr	r3, [r7, #4]
 800772e:	681b      	ldr	r3, [r3, #0]
 8007730:	681b      	ldr	r3, [r3, #0]
 8007732:	617b      	str	r3, [r7, #20]
 8007734:	697a      	ldr	r2, [r7, #20]
 8007736:	4b38      	ldr	r3, [pc, #224]	; (8007818 <HAL_DMA_Init+0x158>)
 8007738:	4013      	ands	r3, r2
 800773a:	617b      	str	r3, [r7, #20]
 800773c:	687b      	ldr	r3, [r7, #4]
 800773e:	685a      	ldr	r2, [r3, #4]
 8007740:	687b      	ldr	r3, [r7, #4]
 8007742:	689b      	ldr	r3, [r3, #8]
 8007744:	431a      	orrs	r2, r3
 8007746:	687b      	ldr	r3, [r7, #4]
 8007748:	68db      	ldr	r3, [r3, #12]
 800774a:	431a      	orrs	r2, r3
 800774c:	687b      	ldr	r3, [r7, #4]
 800774e:	691b      	ldr	r3, [r3, #16]
 8007750:	431a      	orrs	r2, r3
 8007752:	687b      	ldr	r3, [r7, #4]
 8007754:	695b      	ldr	r3, [r3, #20]
 8007756:	431a      	orrs	r2, r3
 8007758:	687b      	ldr	r3, [r7, #4]
 800775a:	699b      	ldr	r3, [r3, #24]
 800775c:	431a      	orrs	r2, r3
 800775e:	687b      	ldr	r3, [r7, #4]
 8007760:	69db      	ldr	r3, [r3, #28]
 8007762:	431a      	orrs	r2, r3
 8007764:	687b      	ldr	r3, [r7, #4]
 8007766:	6a1b      	ldr	r3, [r3, #32]
 8007768:	4313      	orrs	r3, r2
 800776a:	697a      	ldr	r2, [r7, #20]
 800776c:	4313      	orrs	r3, r2
 800776e:	617b      	str	r3, [r7, #20]
 8007770:	687b      	ldr	r3, [r7, #4]
 8007772:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007774:	2b04      	cmp	r3, #4
 8007776:	d107      	bne.n	8007788 <HAL_DMA_Init+0xc8>
 8007778:	687b      	ldr	r3, [r7, #4]
 800777a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800777c:	687b      	ldr	r3, [r7, #4]
 800777e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007780:	4313      	orrs	r3, r2
 8007782:	697a      	ldr	r2, [r7, #20]
 8007784:	4313      	orrs	r3, r2
 8007786:	617b      	str	r3, [r7, #20]
 8007788:	687b      	ldr	r3, [r7, #4]
 800778a:	681b      	ldr	r3, [r3, #0]
 800778c:	697a      	ldr	r2, [r7, #20]
 800778e:	601a      	str	r2, [r3, #0]
 8007790:	687b      	ldr	r3, [r7, #4]
 8007792:	681b      	ldr	r3, [r3, #0]
 8007794:	695b      	ldr	r3, [r3, #20]
 8007796:	617b      	str	r3, [r7, #20]
 8007798:	697b      	ldr	r3, [r7, #20]
 800779a:	f023 0307 	bic.w	r3, r3, #7
 800779e:	617b      	str	r3, [r7, #20]
 80077a0:	687b      	ldr	r3, [r7, #4]
 80077a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80077a4:	697a      	ldr	r2, [r7, #20]
 80077a6:	4313      	orrs	r3, r2
 80077a8:	617b      	str	r3, [r7, #20]
 80077aa:	687b      	ldr	r3, [r7, #4]
 80077ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80077ae:	2b04      	cmp	r3, #4
 80077b0:	d117      	bne.n	80077e2 <HAL_DMA_Init+0x122>
 80077b2:	687b      	ldr	r3, [r7, #4]
 80077b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80077b6:	697a      	ldr	r2, [r7, #20]
 80077b8:	4313      	orrs	r3, r2
 80077ba:	617b      	str	r3, [r7, #20]
 80077bc:	687b      	ldr	r3, [r7, #4]
 80077be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80077c0:	2b00      	cmp	r3, #0
 80077c2:	d00e      	beq.n	80077e2 <HAL_DMA_Init+0x122>
 80077c4:	6878      	ldr	r0, [r7, #4]
 80077c6:	f000 fb01 	bl	8007dcc <DMA_CheckFifoParam>
 80077ca:	4603      	mov	r3, r0
 80077cc:	2b00      	cmp	r3, #0
 80077ce:	d008      	beq.n	80077e2 <HAL_DMA_Init+0x122>
 80077d0:	687b      	ldr	r3, [r7, #4]
 80077d2:	2240      	movs	r2, #64	; 0x40
 80077d4:	655a      	str	r2, [r3, #84]	; 0x54
 80077d6:	687b      	ldr	r3, [r7, #4]
 80077d8:	2201      	movs	r2, #1
 80077da:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80077de:	2301      	movs	r3, #1
 80077e0:	e016      	b.n	8007810 <HAL_DMA_Init+0x150>
 80077e2:	687b      	ldr	r3, [r7, #4]
 80077e4:	681b      	ldr	r3, [r3, #0]
 80077e6:	697a      	ldr	r2, [r7, #20]
 80077e8:	615a      	str	r2, [r3, #20]
 80077ea:	6878      	ldr	r0, [r7, #4]
 80077ec:	f000 fab8 	bl	8007d60 <DMA_CalcBaseAndBitshift>
 80077f0:	4603      	mov	r3, r0
 80077f2:	60fb      	str	r3, [r7, #12]
 80077f4:	687b      	ldr	r3, [r7, #4]
 80077f6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80077f8:	223f      	movs	r2, #63	; 0x3f
 80077fa:	409a      	lsls	r2, r3
 80077fc:	68fb      	ldr	r3, [r7, #12]
 80077fe:	609a      	str	r2, [r3, #8]
 8007800:	687b      	ldr	r3, [r7, #4]
 8007802:	2200      	movs	r2, #0
 8007804:	655a      	str	r2, [r3, #84]	; 0x54
 8007806:	687b      	ldr	r3, [r7, #4]
 8007808:	2201      	movs	r2, #1
 800780a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800780e:	2300      	movs	r3, #0
 8007810:	4618      	mov	r0, r3
 8007812:	3718      	adds	r7, #24
 8007814:	46bd      	mov	sp, r7
 8007816:	bd80      	pop	{r7, pc}
 8007818:	f010803f 	.word	0xf010803f

0800781c <HAL_DMA_Start_IT>:
 800781c:	b580      	push	{r7, lr}
 800781e:	b086      	sub	sp, #24
 8007820:	af00      	add	r7, sp, #0
 8007822:	60f8      	str	r0, [r7, #12]
 8007824:	60b9      	str	r1, [r7, #8]
 8007826:	607a      	str	r2, [r7, #4]
 8007828:	603b      	str	r3, [r7, #0]
 800782a:	2300      	movs	r3, #0
 800782c:	75fb      	strb	r3, [r7, #23]
 800782e:	68fb      	ldr	r3, [r7, #12]
 8007830:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007832:	613b      	str	r3, [r7, #16]
 8007834:	68fb      	ldr	r3, [r7, #12]
 8007836:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800783a:	2b01      	cmp	r3, #1
 800783c:	d101      	bne.n	8007842 <HAL_DMA_Start_IT+0x26>
 800783e:	2302      	movs	r3, #2
 8007840:	e040      	b.n	80078c4 <HAL_DMA_Start_IT+0xa8>
 8007842:	68fb      	ldr	r3, [r7, #12]
 8007844:	2201      	movs	r2, #1
 8007846:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800784a:	68fb      	ldr	r3, [r7, #12]
 800784c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8007850:	b2db      	uxtb	r3, r3
 8007852:	2b01      	cmp	r3, #1
 8007854:	d12f      	bne.n	80078b6 <HAL_DMA_Start_IT+0x9a>
 8007856:	68fb      	ldr	r3, [r7, #12]
 8007858:	2202      	movs	r2, #2
 800785a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800785e:	68fb      	ldr	r3, [r7, #12]
 8007860:	2200      	movs	r2, #0
 8007862:	655a      	str	r2, [r3, #84]	; 0x54
 8007864:	683b      	ldr	r3, [r7, #0]
 8007866:	687a      	ldr	r2, [r7, #4]
 8007868:	68b9      	ldr	r1, [r7, #8]
 800786a:	68f8      	ldr	r0, [r7, #12]
 800786c:	f000 fa4a 	bl	8007d04 <DMA_SetConfig>
 8007870:	68fb      	ldr	r3, [r7, #12]
 8007872:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007874:	223f      	movs	r2, #63	; 0x3f
 8007876:	409a      	lsls	r2, r3
 8007878:	693b      	ldr	r3, [r7, #16]
 800787a:	609a      	str	r2, [r3, #8]
 800787c:	68fb      	ldr	r3, [r7, #12]
 800787e:	681b      	ldr	r3, [r3, #0]
 8007880:	681a      	ldr	r2, [r3, #0]
 8007882:	68fb      	ldr	r3, [r7, #12]
 8007884:	681b      	ldr	r3, [r3, #0]
 8007886:	f042 0216 	orr.w	r2, r2, #22
 800788a:	601a      	str	r2, [r3, #0]
 800788c:	68fb      	ldr	r3, [r7, #12]
 800788e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007890:	2b00      	cmp	r3, #0
 8007892:	d007      	beq.n	80078a4 <HAL_DMA_Start_IT+0x88>
 8007894:	68fb      	ldr	r3, [r7, #12]
 8007896:	681b      	ldr	r3, [r3, #0]
 8007898:	681a      	ldr	r2, [r3, #0]
 800789a:	68fb      	ldr	r3, [r7, #12]
 800789c:	681b      	ldr	r3, [r3, #0]
 800789e:	f042 0208 	orr.w	r2, r2, #8
 80078a2:	601a      	str	r2, [r3, #0]
 80078a4:	68fb      	ldr	r3, [r7, #12]
 80078a6:	681b      	ldr	r3, [r3, #0]
 80078a8:	681a      	ldr	r2, [r3, #0]
 80078aa:	68fb      	ldr	r3, [r7, #12]
 80078ac:	681b      	ldr	r3, [r3, #0]
 80078ae:	f042 0201 	orr.w	r2, r2, #1
 80078b2:	601a      	str	r2, [r3, #0]
 80078b4:	e005      	b.n	80078c2 <HAL_DMA_Start_IT+0xa6>
 80078b6:	68fb      	ldr	r3, [r7, #12]
 80078b8:	2200      	movs	r2, #0
 80078ba:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80078be:	2302      	movs	r3, #2
 80078c0:	75fb      	strb	r3, [r7, #23]
 80078c2:	7dfb      	ldrb	r3, [r7, #23]
 80078c4:	4618      	mov	r0, r3
 80078c6:	3718      	adds	r7, #24
 80078c8:	46bd      	mov	sp, r7
 80078ca:	bd80      	pop	{r7, pc}

080078cc <HAL_DMA_Abort>:
 80078cc:	b580      	push	{r7, lr}
 80078ce:	b084      	sub	sp, #16
 80078d0:	af00      	add	r7, sp, #0
 80078d2:	6078      	str	r0, [r7, #4]
 80078d4:	687b      	ldr	r3, [r7, #4]
 80078d6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80078d8:	60fb      	str	r3, [r7, #12]
 80078da:	f7ff f807 	bl	80068ec <HAL_GetTick>
 80078de:	60b8      	str	r0, [r7, #8]
 80078e0:	687b      	ldr	r3, [r7, #4]
 80078e2:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80078e6:	b2db      	uxtb	r3, r3
 80078e8:	2b02      	cmp	r3, #2
 80078ea:	d008      	beq.n	80078fe <HAL_DMA_Abort+0x32>
 80078ec:	687b      	ldr	r3, [r7, #4]
 80078ee:	2280      	movs	r2, #128	; 0x80
 80078f0:	655a      	str	r2, [r3, #84]	; 0x54
 80078f2:	687b      	ldr	r3, [r7, #4]
 80078f4:	2200      	movs	r2, #0
 80078f6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80078fa:	2301      	movs	r3, #1
 80078fc:	e052      	b.n	80079a4 <HAL_DMA_Abort+0xd8>
 80078fe:	687b      	ldr	r3, [r7, #4]
 8007900:	681b      	ldr	r3, [r3, #0]
 8007902:	681a      	ldr	r2, [r3, #0]
 8007904:	687b      	ldr	r3, [r7, #4]
 8007906:	681b      	ldr	r3, [r3, #0]
 8007908:	f022 0216 	bic.w	r2, r2, #22
 800790c:	601a      	str	r2, [r3, #0]
 800790e:	687b      	ldr	r3, [r7, #4]
 8007910:	681b      	ldr	r3, [r3, #0]
 8007912:	695a      	ldr	r2, [r3, #20]
 8007914:	687b      	ldr	r3, [r7, #4]
 8007916:	681b      	ldr	r3, [r3, #0]
 8007918:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800791c:	615a      	str	r2, [r3, #20]
 800791e:	687b      	ldr	r3, [r7, #4]
 8007920:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007922:	2b00      	cmp	r3, #0
 8007924:	d103      	bne.n	800792e <HAL_DMA_Abort+0x62>
 8007926:	687b      	ldr	r3, [r7, #4]
 8007928:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800792a:	2b00      	cmp	r3, #0
 800792c:	d007      	beq.n	800793e <HAL_DMA_Abort+0x72>
 800792e:	687b      	ldr	r3, [r7, #4]
 8007930:	681b      	ldr	r3, [r3, #0]
 8007932:	681a      	ldr	r2, [r3, #0]
 8007934:	687b      	ldr	r3, [r7, #4]
 8007936:	681b      	ldr	r3, [r3, #0]
 8007938:	f022 0208 	bic.w	r2, r2, #8
 800793c:	601a      	str	r2, [r3, #0]
 800793e:	687b      	ldr	r3, [r7, #4]
 8007940:	681b      	ldr	r3, [r3, #0]
 8007942:	681a      	ldr	r2, [r3, #0]
 8007944:	687b      	ldr	r3, [r7, #4]
 8007946:	681b      	ldr	r3, [r3, #0]
 8007948:	f022 0201 	bic.w	r2, r2, #1
 800794c:	601a      	str	r2, [r3, #0]
 800794e:	e013      	b.n	8007978 <HAL_DMA_Abort+0xac>
 8007950:	f7fe ffcc 	bl	80068ec <HAL_GetTick>
 8007954:	4602      	mov	r2, r0
 8007956:	68bb      	ldr	r3, [r7, #8]
 8007958:	1ad3      	subs	r3, r2, r3
 800795a:	2b05      	cmp	r3, #5
 800795c:	d90c      	bls.n	8007978 <HAL_DMA_Abort+0xac>
 800795e:	687b      	ldr	r3, [r7, #4]
 8007960:	2220      	movs	r2, #32
 8007962:	655a      	str	r2, [r3, #84]	; 0x54
 8007964:	687b      	ldr	r3, [r7, #4]
 8007966:	2203      	movs	r2, #3
 8007968:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800796c:	687b      	ldr	r3, [r7, #4]
 800796e:	2200      	movs	r2, #0
 8007970:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8007974:	2303      	movs	r3, #3
 8007976:	e015      	b.n	80079a4 <HAL_DMA_Abort+0xd8>
 8007978:	687b      	ldr	r3, [r7, #4]
 800797a:	681b      	ldr	r3, [r3, #0]
 800797c:	681b      	ldr	r3, [r3, #0]
 800797e:	f003 0301 	and.w	r3, r3, #1
 8007982:	2b00      	cmp	r3, #0
 8007984:	d1e4      	bne.n	8007950 <HAL_DMA_Abort+0x84>
 8007986:	687b      	ldr	r3, [r7, #4]
 8007988:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800798a:	223f      	movs	r2, #63	; 0x3f
 800798c:	409a      	lsls	r2, r3
 800798e:	68fb      	ldr	r3, [r7, #12]
 8007990:	609a      	str	r2, [r3, #8]
 8007992:	687b      	ldr	r3, [r7, #4]
 8007994:	2201      	movs	r2, #1
 8007996:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800799a:	687b      	ldr	r3, [r7, #4]
 800799c:	2200      	movs	r2, #0
 800799e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80079a2:	2300      	movs	r3, #0
 80079a4:	4618      	mov	r0, r3
 80079a6:	3710      	adds	r7, #16
 80079a8:	46bd      	mov	sp, r7
 80079aa:	bd80      	pop	{r7, pc}

080079ac <HAL_DMA_Abort_IT>:
 80079ac:	b480      	push	{r7}
 80079ae:	b083      	sub	sp, #12
 80079b0:	af00      	add	r7, sp, #0
 80079b2:	6078      	str	r0, [r7, #4]
 80079b4:	687b      	ldr	r3, [r7, #4]
 80079b6:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80079ba:	b2db      	uxtb	r3, r3
 80079bc:	2b02      	cmp	r3, #2
 80079be:	d004      	beq.n	80079ca <HAL_DMA_Abort_IT+0x1e>
 80079c0:	687b      	ldr	r3, [r7, #4]
 80079c2:	2280      	movs	r2, #128	; 0x80
 80079c4:	655a      	str	r2, [r3, #84]	; 0x54
 80079c6:	2301      	movs	r3, #1
 80079c8:	e00c      	b.n	80079e4 <HAL_DMA_Abort_IT+0x38>
 80079ca:	687b      	ldr	r3, [r7, #4]
 80079cc:	2205      	movs	r2, #5
 80079ce:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80079d2:	687b      	ldr	r3, [r7, #4]
 80079d4:	681b      	ldr	r3, [r3, #0]
 80079d6:	681a      	ldr	r2, [r3, #0]
 80079d8:	687b      	ldr	r3, [r7, #4]
 80079da:	681b      	ldr	r3, [r3, #0]
 80079dc:	f022 0201 	bic.w	r2, r2, #1
 80079e0:	601a      	str	r2, [r3, #0]
 80079e2:	2300      	movs	r3, #0
 80079e4:	4618      	mov	r0, r3
 80079e6:	370c      	adds	r7, #12
 80079e8:	46bd      	mov	sp, r7
 80079ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079ee:	4770      	bx	lr

080079f0 <HAL_DMA_IRQHandler>:
 80079f0:	b580      	push	{r7, lr}
 80079f2:	b086      	sub	sp, #24
 80079f4:	af00      	add	r7, sp, #0
 80079f6:	6078      	str	r0, [r7, #4]
 80079f8:	2300      	movs	r3, #0
 80079fa:	60bb      	str	r3, [r7, #8]
 80079fc:	4b8e      	ldr	r3, [pc, #568]	; (8007c38 <HAL_DMA_IRQHandler+0x248>)
 80079fe:	681b      	ldr	r3, [r3, #0]
 8007a00:	4a8e      	ldr	r2, [pc, #568]	; (8007c3c <HAL_DMA_IRQHandler+0x24c>)
 8007a02:	fba2 2303 	umull	r2, r3, r2, r3
 8007a06:	0a9b      	lsrs	r3, r3, #10
 8007a08:	617b      	str	r3, [r7, #20]
 8007a0a:	687b      	ldr	r3, [r7, #4]
 8007a0c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007a0e:	613b      	str	r3, [r7, #16]
 8007a10:	693b      	ldr	r3, [r7, #16]
 8007a12:	681b      	ldr	r3, [r3, #0]
 8007a14:	60fb      	str	r3, [r7, #12]
 8007a16:	687b      	ldr	r3, [r7, #4]
 8007a18:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007a1a:	2208      	movs	r2, #8
 8007a1c:	409a      	lsls	r2, r3
 8007a1e:	68fb      	ldr	r3, [r7, #12]
 8007a20:	4013      	ands	r3, r2
 8007a22:	2b00      	cmp	r3, #0
 8007a24:	d01a      	beq.n	8007a5c <HAL_DMA_IRQHandler+0x6c>
 8007a26:	687b      	ldr	r3, [r7, #4]
 8007a28:	681b      	ldr	r3, [r3, #0]
 8007a2a:	681b      	ldr	r3, [r3, #0]
 8007a2c:	f003 0304 	and.w	r3, r3, #4
 8007a30:	2b00      	cmp	r3, #0
 8007a32:	d013      	beq.n	8007a5c <HAL_DMA_IRQHandler+0x6c>
 8007a34:	687b      	ldr	r3, [r7, #4]
 8007a36:	681b      	ldr	r3, [r3, #0]
 8007a38:	681a      	ldr	r2, [r3, #0]
 8007a3a:	687b      	ldr	r3, [r7, #4]
 8007a3c:	681b      	ldr	r3, [r3, #0]
 8007a3e:	f022 0204 	bic.w	r2, r2, #4
 8007a42:	601a      	str	r2, [r3, #0]
 8007a44:	687b      	ldr	r3, [r7, #4]
 8007a46:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007a48:	2208      	movs	r2, #8
 8007a4a:	409a      	lsls	r2, r3
 8007a4c:	693b      	ldr	r3, [r7, #16]
 8007a4e:	609a      	str	r2, [r3, #8]
 8007a50:	687b      	ldr	r3, [r7, #4]
 8007a52:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007a54:	f043 0201 	orr.w	r2, r3, #1
 8007a58:	687b      	ldr	r3, [r7, #4]
 8007a5a:	655a      	str	r2, [r3, #84]	; 0x54
 8007a5c:	687b      	ldr	r3, [r7, #4]
 8007a5e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007a60:	2201      	movs	r2, #1
 8007a62:	409a      	lsls	r2, r3
 8007a64:	68fb      	ldr	r3, [r7, #12]
 8007a66:	4013      	ands	r3, r2
 8007a68:	2b00      	cmp	r3, #0
 8007a6a:	d012      	beq.n	8007a92 <HAL_DMA_IRQHandler+0xa2>
 8007a6c:	687b      	ldr	r3, [r7, #4]
 8007a6e:	681b      	ldr	r3, [r3, #0]
 8007a70:	695b      	ldr	r3, [r3, #20]
 8007a72:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007a76:	2b00      	cmp	r3, #0
 8007a78:	d00b      	beq.n	8007a92 <HAL_DMA_IRQHandler+0xa2>
 8007a7a:	687b      	ldr	r3, [r7, #4]
 8007a7c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007a7e:	2201      	movs	r2, #1
 8007a80:	409a      	lsls	r2, r3
 8007a82:	693b      	ldr	r3, [r7, #16]
 8007a84:	609a      	str	r2, [r3, #8]
 8007a86:	687b      	ldr	r3, [r7, #4]
 8007a88:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007a8a:	f043 0202 	orr.w	r2, r3, #2
 8007a8e:	687b      	ldr	r3, [r7, #4]
 8007a90:	655a      	str	r2, [r3, #84]	; 0x54
 8007a92:	687b      	ldr	r3, [r7, #4]
 8007a94:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007a96:	2204      	movs	r2, #4
 8007a98:	409a      	lsls	r2, r3
 8007a9a:	68fb      	ldr	r3, [r7, #12]
 8007a9c:	4013      	ands	r3, r2
 8007a9e:	2b00      	cmp	r3, #0
 8007aa0:	d012      	beq.n	8007ac8 <HAL_DMA_IRQHandler+0xd8>
 8007aa2:	687b      	ldr	r3, [r7, #4]
 8007aa4:	681b      	ldr	r3, [r3, #0]
 8007aa6:	681b      	ldr	r3, [r3, #0]
 8007aa8:	f003 0302 	and.w	r3, r3, #2
 8007aac:	2b00      	cmp	r3, #0
 8007aae:	d00b      	beq.n	8007ac8 <HAL_DMA_IRQHandler+0xd8>
 8007ab0:	687b      	ldr	r3, [r7, #4]
 8007ab2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007ab4:	2204      	movs	r2, #4
 8007ab6:	409a      	lsls	r2, r3
 8007ab8:	693b      	ldr	r3, [r7, #16]
 8007aba:	609a      	str	r2, [r3, #8]
 8007abc:	687b      	ldr	r3, [r7, #4]
 8007abe:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007ac0:	f043 0204 	orr.w	r2, r3, #4
 8007ac4:	687b      	ldr	r3, [r7, #4]
 8007ac6:	655a      	str	r2, [r3, #84]	; 0x54
 8007ac8:	687b      	ldr	r3, [r7, #4]
 8007aca:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007acc:	2210      	movs	r2, #16
 8007ace:	409a      	lsls	r2, r3
 8007ad0:	68fb      	ldr	r3, [r7, #12]
 8007ad2:	4013      	ands	r3, r2
 8007ad4:	2b00      	cmp	r3, #0
 8007ad6:	d043      	beq.n	8007b60 <HAL_DMA_IRQHandler+0x170>
 8007ad8:	687b      	ldr	r3, [r7, #4]
 8007ada:	681b      	ldr	r3, [r3, #0]
 8007adc:	681b      	ldr	r3, [r3, #0]
 8007ade:	f003 0308 	and.w	r3, r3, #8
 8007ae2:	2b00      	cmp	r3, #0
 8007ae4:	d03c      	beq.n	8007b60 <HAL_DMA_IRQHandler+0x170>
 8007ae6:	687b      	ldr	r3, [r7, #4]
 8007ae8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007aea:	2210      	movs	r2, #16
 8007aec:	409a      	lsls	r2, r3
 8007aee:	693b      	ldr	r3, [r7, #16]
 8007af0:	609a      	str	r2, [r3, #8]
 8007af2:	687b      	ldr	r3, [r7, #4]
 8007af4:	681b      	ldr	r3, [r3, #0]
 8007af6:	681b      	ldr	r3, [r3, #0]
 8007af8:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8007afc:	2b00      	cmp	r3, #0
 8007afe:	d018      	beq.n	8007b32 <HAL_DMA_IRQHandler+0x142>
 8007b00:	687b      	ldr	r3, [r7, #4]
 8007b02:	681b      	ldr	r3, [r3, #0]
 8007b04:	681b      	ldr	r3, [r3, #0]
 8007b06:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8007b0a:	2b00      	cmp	r3, #0
 8007b0c:	d108      	bne.n	8007b20 <HAL_DMA_IRQHandler+0x130>
 8007b0e:	687b      	ldr	r3, [r7, #4]
 8007b10:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007b12:	2b00      	cmp	r3, #0
 8007b14:	d024      	beq.n	8007b60 <HAL_DMA_IRQHandler+0x170>
 8007b16:	687b      	ldr	r3, [r7, #4]
 8007b18:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007b1a:	6878      	ldr	r0, [r7, #4]
 8007b1c:	4798      	blx	r3
 8007b1e:	e01f      	b.n	8007b60 <HAL_DMA_IRQHandler+0x170>
 8007b20:	687b      	ldr	r3, [r7, #4]
 8007b22:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007b24:	2b00      	cmp	r3, #0
 8007b26:	d01b      	beq.n	8007b60 <HAL_DMA_IRQHandler+0x170>
 8007b28:	687b      	ldr	r3, [r7, #4]
 8007b2a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007b2c:	6878      	ldr	r0, [r7, #4]
 8007b2e:	4798      	blx	r3
 8007b30:	e016      	b.n	8007b60 <HAL_DMA_IRQHandler+0x170>
 8007b32:	687b      	ldr	r3, [r7, #4]
 8007b34:	681b      	ldr	r3, [r3, #0]
 8007b36:	681b      	ldr	r3, [r3, #0]
 8007b38:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007b3c:	2b00      	cmp	r3, #0
 8007b3e:	d107      	bne.n	8007b50 <HAL_DMA_IRQHandler+0x160>
 8007b40:	687b      	ldr	r3, [r7, #4]
 8007b42:	681b      	ldr	r3, [r3, #0]
 8007b44:	681a      	ldr	r2, [r3, #0]
 8007b46:	687b      	ldr	r3, [r7, #4]
 8007b48:	681b      	ldr	r3, [r3, #0]
 8007b4a:	f022 0208 	bic.w	r2, r2, #8
 8007b4e:	601a      	str	r2, [r3, #0]
 8007b50:	687b      	ldr	r3, [r7, #4]
 8007b52:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007b54:	2b00      	cmp	r3, #0
 8007b56:	d003      	beq.n	8007b60 <HAL_DMA_IRQHandler+0x170>
 8007b58:	687b      	ldr	r3, [r7, #4]
 8007b5a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007b5c:	6878      	ldr	r0, [r7, #4]
 8007b5e:	4798      	blx	r3
 8007b60:	687b      	ldr	r3, [r7, #4]
 8007b62:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007b64:	2220      	movs	r2, #32
 8007b66:	409a      	lsls	r2, r3
 8007b68:	68fb      	ldr	r3, [r7, #12]
 8007b6a:	4013      	ands	r3, r2
 8007b6c:	2b00      	cmp	r3, #0
 8007b6e:	f000 808f 	beq.w	8007c90 <HAL_DMA_IRQHandler+0x2a0>
 8007b72:	687b      	ldr	r3, [r7, #4]
 8007b74:	681b      	ldr	r3, [r3, #0]
 8007b76:	681b      	ldr	r3, [r3, #0]
 8007b78:	f003 0310 	and.w	r3, r3, #16
 8007b7c:	2b00      	cmp	r3, #0
 8007b7e:	f000 8087 	beq.w	8007c90 <HAL_DMA_IRQHandler+0x2a0>
 8007b82:	687b      	ldr	r3, [r7, #4]
 8007b84:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007b86:	2220      	movs	r2, #32
 8007b88:	409a      	lsls	r2, r3
 8007b8a:	693b      	ldr	r3, [r7, #16]
 8007b8c:	609a      	str	r2, [r3, #8]
 8007b8e:	687b      	ldr	r3, [r7, #4]
 8007b90:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8007b94:	b2db      	uxtb	r3, r3
 8007b96:	2b05      	cmp	r3, #5
 8007b98:	d136      	bne.n	8007c08 <HAL_DMA_IRQHandler+0x218>
 8007b9a:	687b      	ldr	r3, [r7, #4]
 8007b9c:	681b      	ldr	r3, [r3, #0]
 8007b9e:	681a      	ldr	r2, [r3, #0]
 8007ba0:	687b      	ldr	r3, [r7, #4]
 8007ba2:	681b      	ldr	r3, [r3, #0]
 8007ba4:	f022 0216 	bic.w	r2, r2, #22
 8007ba8:	601a      	str	r2, [r3, #0]
 8007baa:	687b      	ldr	r3, [r7, #4]
 8007bac:	681b      	ldr	r3, [r3, #0]
 8007bae:	695a      	ldr	r2, [r3, #20]
 8007bb0:	687b      	ldr	r3, [r7, #4]
 8007bb2:	681b      	ldr	r3, [r3, #0]
 8007bb4:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8007bb8:	615a      	str	r2, [r3, #20]
 8007bba:	687b      	ldr	r3, [r7, #4]
 8007bbc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007bbe:	2b00      	cmp	r3, #0
 8007bc0:	d103      	bne.n	8007bca <HAL_DMA_IRQHandler+0x1da>
 8007bc2:	687b      	ldr	r3, [r7, #4]
 8007bc4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007bc6:	2b00      	cmp	r3, #0
 8007bc8:	d007      	beq.n	8007bda <HAL_DMA_IRQHandler+0x1ea>
 8007bca:	687b      	ldr	r3, [r7, #4]
 8007bcc:	681b      	ldr	r3, [r3, #0]
 8007bce:	681a      	ldr	r2, [r3, #0]
 8007bd0:	687b      	ldr	r3, [r7, #4]
 8007bd2:	681b      	ldr	r3, [r3, #0]
 8007bd4:	f022 0208 	bic.w	r2, r2, #8
 8007bd8:	601a      	str	r2, [r3, #0]
 8007bda:	687b      	ldr	r3, [r7, #4]
 8007bdc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007bde:	223f      	movs	r2, #63	; 0x3f
 8007be0:	409a      	lsls	r2, r3
 8007be2:	693b      	ldr	r3, [r7, #16]
 8007be4:	609a      	str	r2, [r3, #8]
 8007be6:	687b      	ldr	r3, [r7, #4]
 8007be8:	2201      	movs	r2, #1
 8007bea:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007bee:	687b      	ldr	r3, [r7, #4]
 8007bf0:	2200      	movs	r2, #0
 8007bf2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8007bf6:	687b      	ldr	r3, [r7, #4]
 8007bf8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007bfa:	2b00      	cmp	r3, #0
 8007bfc:	d07e      	beq.n	8007cfc <HAL_DMA_IRQHandler+0x30c>
 8007bfe:	687b      	ldr	r3, [r7, #4]
 8007c00:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007c02:	6878      	ldr	r0, [r7, #4]
 8007c04:	4798      	blx	r3
 8007c06:	e079      	b.n	8007cfc <HAL_DMA_IRQHandler+0x30c>
 8007c08:	687b      	ldr	r3, [r7, #4]
 8007c0a:	681b      	ldr	r3, [r3, #0]
 8007c0c:	681b      	ldr	r3, [r3, #0]
 8007c0e:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8007c12:	2b00      	cmp	r3, #0
 8007c14:	d01d      	beq.n	8007c52 <HAL_DMA_IRQHandler+0x262>
 8007c16:	687b      	ldr	r3, [r7, #4]
 8007c18:	681b      	ldr	r3, [r3, #0]
 8007c1a:	681b      	ldr	r3, [r3, #0]
 8007c1c:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8007c20:	2b00      	cmp	r3, #0
 8007c22:	d10d      	bne.n	8007c40 <HAL_DMA_IRQHandler+0x250>
 8007c24:	687b      	ldr	r3, [r7, #4]
 8007c26:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007c28:	2b00      	cmp	r3, #0
 8007c2a:	d031      	beq.n	8007c90 <HAL_DMA_IRQHandler+0x2a0>
 8007c2c:	687b      	ldr	r3, [r7, #4]
 8007c2e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007c30:	6878      	ldr	r0, [r7, #4]
 8007c32:	4798      	blx	r3
 8007c34:	e02c      	b.n	8007c90 <HAL_DMA_IRQHandler+0x2a0>
 8007c36:	bf00      	nop
 8007c38:	200000a4 	.word	0x200000a4
 8007c3c:	1b4e81b5 	.word	0x1b4e81b5
 8007c40:	687b      	ldr	r3, [r7, #4]
 8007c42:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007c44:	2b00      	cmp	r3, #0
 8007c46:	d023      	beq.n	8007c90 <HAL_DMA_IRQHandler+0x2a0>
 8007c48:	687b      	ldr	r3, [r7, #4]
 8007c4a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007c4c:	6878      	ldr	r0, [r7, #4]
 8007c4e:	4798      	blx	r3
 8007c50:	e01e      	b.n	8007c90 <HAL_DMA_IRQHandler+0x2a0>
 8007c52:	687b      	ldr	r3, [r7, #4]
 8007c54:	681b      	ldr	r3, [r3, #0]
 8007c56:	681b      	ldr	r3, [r3, #0]
 8007c58:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007c5c:	2b00      	cmp	r3, #0
 8007c5e:	d10f      	bne.n	8007c80 <HAL_DMA_IRQHandler+0x290>
 8007c60:	687b      	ldr	r3, [r7, #4]
 8007c62:	681b      	ldr	r3, [r3, #0]
 8007c64:	681a      	ldr	r2, [r3, #0]
 8007c66:	687b      	ldr	r3, [r7, #4]
 8007c68:	681b      	ldr	r3, [r3, #0]
 8007c6a:	f022 0210 	bic.w	r2, r2, #16
 8007c6e:	601a      	str	r2, [r3, #0]
 8007c70:	687b      	ldr	r3, [r7, #4]
 8007c72:	2201      	movs	r2, #1
 8007c74:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007c78:	687b      	ldr	r3, [r7, #4]
 8007c7a:	2200      	movs	r2, #0
 8007c7c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8007c80:	687b      	ldr	r3, [r7, #4]
 8007c82:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007c84:	2b00      	cmp	r3, #0
 8007c86:	d003      	beq.n	8007c90 <HAL_DMA_IRQHandler+0x2a0>
 8007c88:	687b      	ldr	r3, [r7, #4]
 8007c8a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007c8c:	6878      	ldr	r0, [r7, #4]
 8007c8e:	4798      	blx	r3
 8007c90:	687b      	ldr	r3, [r7, #4]
 8007c92:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007c94:	2b00      	cmp	r3, #0
 8007c96:	d032      	beq.n	8007cfe <HAL_DMA_IRQHandler+0x30e>
 8007c98:	687b      	ldr	r3, [r7, #4]
 8007c9a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007c9c:	f003 0301 	and.w	r3, r3, #1
 8007ca0:	2b00      	cmp	r3, #0
 8007ca2:	d022      	beq.n	8007cea <HAL_DMA_IRQHandler+0x2fa>
 8007ca4:	687b      	ldr	r3, [r7, #4]
 8007ca6:	2205      	movs	r2, #5
 8007ca8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007cac:	687b      	ldr	r3, [r7, #4]
 8007cae:	681b      	ldr	r3, [r3, #0]
 8007cb0:	681a      	ldr	r2, [r3, #0]
 8007cb2:	687b      	ldr	r3, [r7, #4]
 8007cb4:	681b      	ldr	r3, [r3, #0]
 8007cb6:	f022 0201 	bic.w	r2, r2, #1
 8007cba:	601a      	str	r2, [r3, #0]
 8007cbc:	68bb      	ldr	r3, [r7, #8]
 8007cbe:	3301      	adds	r3, #1
 8007cc0:	60bb      	str	r3, [r7, #8]
 8007cc2:	697a      	ldr	r2, [r7, #20]
 8007cc4:	429a      	cmp	r2, r3
 8007cc6:	d307      	bcc.n	8007cd8 <HAL_DMA_IRQHandler+0x2e8>
 8007cc8:	687b      	ldr	r3, [r7, #4]
 8007cca:	681b      	ldr	r3, [r3, #0]
 8007ccc:	681b      	ldr	r3, [r3, #0]
 8007cce:	f003 0301 	and.w	r3, r3, #1
 8007cd2:	2b00      	cmp	r3, #0
 8007cd4:	d1f2      	bne.n	8007cbc <HAL_DMA_IRQHandler+0x2cc>
 8007cd6:	e000      	b.n	8007cda <HAL_DMA_IRQHandler+0x2ea>
 8007cd8:	bf00      	nop
 8007cda:	687b      	ldr	r3, [r7, #4]
 8007cdc:	2201      	movs	r2, #1
 8007cde:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007ce2:	687b      	ldr	r3, [r7, #4]
 8007ce4:	2200      	movs	r2, #0
 8007ce6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8007cea:	687b      	ldr	r3, [r7, #4]
 8007cec:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007cee:	2b00      	cmp	r3, #0
 8007cf0:	d005      	beq.n	8007cfe <HAL_DMA_IRQHandler+0x30e>
 8007cf2:	687b      	ldr	r3, [r7, #4]
 8007cf4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007cf6:	6878      	ldr	r0, [r7, #4]
 8007cf8:	4798      	blx	r3
 8007cfa:	e000      	b.n	8007cfe <HAL_DMA_IRQHandler+0x30e>
 8007cfc:	bf00      	nop
 8007cfe:	3718      	adds	r7, #24
 8007d00:	46bd      	mov	sp, r7
 8007d02:	bd80      	pop	{r7, pc}

08007d04 <DMA_SetConfig>:
 8007d04:	b480      	push	{r7}
 8007d06:	b085      	sub	sp, #20
 8007d08:	af00      	add	r7, sp, #0
 8007d0a:	60f8      	str	r0, [r7, #12]
 8007d0c:	60b9      	str	r1, [r7, #8]
 8007d0e:	607a      	str	r2, [r7, #4]
 8007d10:	603b      	str	r3, [r7, #0]
 8007d12:	68fb      	ldr	r3, [r7, #12]
 8007d14:	681b      	ldr	r3, [r3, #0]
 8007d16:	681a      	ldr	r2, [r3, #0]
 8007d18:	68fb      	ldr	r3, [r7, #12]
 8007d1a:	681b      	ldr	r3, [r3, #0]
 8007d1c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8007d20:	601a      	str	r2, [r3, #0]
 8007d22:	68fb      	ldr	r3, [r7, #12]
 8007d24:	681b      	ldr	r3, [r3, #0]
 8007d26:	683a      	ldr	r2, [r7, #0]
 8007d28:	605a      	str	r2, [r3, #4]
 8007d2a:	68fb      	ldr	r3, [r7, #12]
 8007d2c:	689b      	ldr	r3, [r3, #8]
 8007d2e:	2b40      	cmp	r3, #64	; 0x40
 8007d30:	d108      	bne.n	8007d44 <DMA_SetConfig+0x40>
 8007d32:	68fb      	ldr	r3, [r7, #12]
 8007d34:	681b      	ldr	r3, [r3, #0]
 8007d36:	687a      	ldr	r2, [r7, #4]
 8007d38:	609a      	str	r2, [r3, #8]
 8007d3a:	68fb      	ldr	r3, [r7, #12]
 8007d3c:	681b      	ldr	r3, [r3, #0]
 8007d3e:	68ba      	ldr	r2, [r7, #8]
 8007d40:	60da      	str	r2, [r3, #12]
 8007d42:	e007      	b.n	8007d54 <DMA_SetConfig+0x50>
 8007d44:	68fb      	ldr	r3, [r7, #12]
 8007d46:	681b      	ldr	r3, [r3, #0]
 8007d48:	68ba      	ldr	r2, [r7, #8]
 8007d4a:	609a      	str	r2, [r3, #8]
 8007d4c:	68fb      	ldr	r3, [r7, #12]
 8007d4e:	681b      	ldr	r3, [r3, #0]
 8007d50:	687a      	ldr	r2, [r7, #4]
 8007d52:	60da      	str	r2, [r3, #12]
 8007d54:	bf00      	nop
 8007d56:	3714      	adds	r7, #20
 8007d58:	46bd      	mov	sp, r7
 8007d5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d5e:	4770      	bx	lr

08007d60 <DMA_CalcBaseAndBitshift>:
 8007d60:	b480      	push	{r7}
 8007d62:	b085      	sub	sp, #20
 8007d64:	af00      	add	r7, sp, #0
 8007d66:	6078      	str	r0, [r7, #4]
 8007d68:	687b      	ldr	r3, [r7, #4]
 8007d6a:	681b      	ldr	r3, [r3, #0]
 8007d6c:	b2db      	uxtb	r3, r3
 8007d6e:	3b10      	subs	r3, #16
 8007d70:	4a14      	ldr	r2, [pc, #80]	; (8007dc4 <DMA_CalcBaseAndBitshift+0x64>)
 8007d72:	fba2 2303 	umull	r2, r3, r2, r3
 8007d76:	091b      	lsrs	r3, r3, #4
 8007d78:	60fb      	str	r3, [r7, #12]
 8007d7a:	4a13      	ldr	r2, [pc, #76]	; (8007dc8 <DMA_CalcBaseAndBitshift+0x68>)
 8007d7c:	68fb      	ldr	r3, [r7, #12]
 8007d7e:	4413      	add	r3, r2
 8007d80:	781b      	ldrb	r3, [r3, #0]
 8007d82:	461a      	mov	r2, r3
 8007d84:	687b      	ldr	r3, [r7, #4]
 8007d86:	65da      	str	r2, [r3, #92]	; 0x5c
 8007d88:	68fb      	ldr	r3, [r7, #12]
 8007d8a:	2b03      	cmp	r3, #3
 8007d8c:	d909      	bls.n	8007da2 <DMA_CalcBaseAndBitshift+0x42>
 8007d8e:	687b      	ldr	r3, [r7, #4]
 8007d90:	681b      	ldr	r3, [r3, #0]
 8007d92:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8007d96:	f023 0303 	bic.w	r3, r3, #3
 8007d9a:	1d1a      	adds	r2, r3, #4
 8007d9c:	687b      	ldr	r3, [r7, #4]
 8007d9e:	659a      	str	r2, [r3, #88]	; 0x58
 8007da0:	e007      	b.n	8007db2 <DMA_CalcBaseAndBitshift+0x52>
 8007da2:	687b      	ldr	r3, [r7, #4]
 8007da4:	681b      	ldr	r3, [r3, #0]
 8007da6:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8007daa:	f023 0303 	bic.w	r3, r3, #3
 8007dae:	687a      	ldr	r2, [r7, #4]
 8007db0:	6593      	str	r3, [r2, #88]	; 0x58
 8007db2:	687b      	ldr	r3, [r7, #4]
 8007db4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007db6:	4618      	mov	r0, r3
 8007db8:	3714      	adds	r7, #20
 8007dba:	46bd      	mov	sp, r7
 8007dbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007dc0:	4770      	bx	lr
 8007dc2:	bf00      	nop
 8007dc4:	aaaaaaab 	.word	0xaaaaaaab
 8007dc8:	080106b0 	.word	0x080106b0

08007dcc <DMA_CheckFifoParam>:
 8007dcc:	b480      	push	{r7}
 8007dce:	b085      	sub	sp, #20
 8007dd0:	af00      	add	r7, sp, #0
 8007dd2:	6078      	str	r0, [r7, #4]
 8007dd4:	2300      	movs	r3, #0
 8007dd6:	73fb      	strb	r3, [r7, #15]
 8007dd8:	687b      	ldr	r3, [r7, #4]
 8007dda:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007ddc:	60bb      	str	r3, [r7, #8]
 8007dde:	687b      	ldr	r3, [r7, #4]
 8007de0:	699b      	ldr	r3, [r3, #24]
 8007de2:	2b00      	cmp	r3, #0
 8007de4:	d11f      	bne.n	8007e26 <DMA_CheckFifoParam+0x5a>
 8007de6:	68bb      	ldr	r3, [r7, #8]
 8007de8:	2b03      	cmp	r3, #3
 8007dea:	d856      	bhi.n	8007e9a <DMA_CheckFifoParam+0xce>
 8007dec:	a201      	add	r2, pc, #4	; (adr r2, 8007df4 <DMA_CheckFifoParam+0x28>)
 8007dee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007df2:	bf00      	nop
 8007df4:	08007e05 	.word	0x08007e05
 8007df8:	08007e17 	.word	0x08007e17
 8007dfc:	08007e05 	.word	0x08007e05
 8007e00:	08007e9b 	.word	0x08007e9b
 8007e04:	687b      	ldr	r3, [r7, #4]
 8007e06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007e08:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8007e0c:	2b00      	cmp	r3, #0
 8007e0e:	d046      	beq.n	8007e9e <DMA_CheckFifoParam+0xd2>
 8007e10:	2301      	movs	r3, #1
 8007e12:	73fb      	strb	r3, [r7, #15]
 8007e14:	e043      	b.n	8007e9e <DMA_CheckFifoParam+0xd2>
 8007e16:	687b      	ldr	r3, [r7, #4]
 8007e18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007e1a:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8007e1e:	d140      	bne.n	8007ea2 <DMA_CheckFifoParam+0xd6>
 8007e20:	2301      	movs	r3, #1
 8007e22:	73fb      	strb	r3, [r7, #15]
 8007e24:	e03d      	b.n	8007ea2 <DMA_CheckFifoParam+0xd6>
 8007e26:	687b      	ldr	r3, [r7, #4]
 8007e28:	699b      	ldr	r3, [r3, #24]
 8007e2a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007e2e:	d121      	bne.n	8007e74 <DMA_CheckFifoParam+0xa8>
 8007e30:	68bb      	ldr	r3, [r7, #8]
 8007e32:	2b03      	cmp	r3, #3
 8007e34:	d837      	bhi.n	8007ea6 <DMA_CheckFifoParam+0xda>
 8007e36:	a201      	add	r2, pc, #4	; (adr r2, 8007e3c <DMA_CheckFifoParam+0x70>)
 8007e38:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007e3c:	08007e4d 	.word	0x08007e4d
 8007e40:	08007e53 	.word	0x08007e53
 8007e44:	08007e4d 	.word	0x08007e4d
 8007e48:	08007e65 	.word	0x08007e65
 8007e4c:	2301      	movs	r3, #1
 8007e4e:	73fb      	strb	r3, [r7, #15]
 8007e50:	e030      	b.n	8007eb4 <DMA_CheckFifoParam+0xe8>
 8007e52:	687b      	ldr	r3, [r7, #4]
 8007e54:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007e56:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8007e5a:	2b00      	cmp	r3, #0
 8007e5c:	d025      	beq.n	8007eaa <DMA_CheckFifoParam+0xde>
 8007e5e:	2301      	movs	r3, #1
 8007e60:	73fb      	strb	r3, [r7, #15]
 8007e62:	e022      	b.n	8007eaa <DMA_CheckFifoParam+0xde>
 8007e64:	687b      	ldr	r3, [r7, #4]
 8007e66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007e68:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8007e6c:	d11f      	bne.n	8007eae <DMA_CheckFifoParam+0xe2>
 8007e6e:	2301      	movs	r3, #1
 8007e70:	73fb      	strb	r3, [r7, #15]
 8007e72:	e01c      	b.n	8007eae <DMA_CheckFifoParam+0xe2>
 8007e74:	68bb      	ldr	r3, [r7, #8]
 8007e76:	2b02      	cmp	r3, #2
 8007e78:	d903      	bls.n	8007e82 <DMA_CheckFifoParam+0xb6>
 8007e7a:	68bb      	ldr	r3, [r7, #8]
 8007e7c:	2b03      	cmp	r3, #3
 8007e7e:	d003      	beq.n	8007e88 <DMA_CheckFifoParam+0xbc>
 8007e80:	e018      	b.n	8007eb4 <DMA_CheckFifoParam+0xe8>
 8007e82:	2301      	movs	r3, #1
 8007e84:	73fb      	strb	r3, [r7, #15]
 8007e86:	e015      	b.n	8007eb4 <DMA_CheckFifoParam+0xe8>
 8007e88:	687b      	ldr	r3, [r7, #4]
 8007e8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007e8c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8007e90:	2b00      	cmp	r3, #0
 8007e92:	d00e      	beq.n	8007eb2 <DMA_CheckFifoParam+0xe6>
 8007e94:	2301      	movs	r3, #1
 8007e96:	73fb      	strb	r3, [r7, #15]
 8007e98:	e00b      	b.n	8007eb2 <DMA_CheckFifoParam+0xe6>
 8007e9a:	bf00      	nop
 8007e9c:	e00a      	b.n	8007eb4 <DMA_CheckFifoParam+0xe8>
 8007e9e:	bf00      	nop
 8007ea0:	e008      	b.n	8007eb4 <DMA_CheckFifoParam+0xe8>
 8007ea2:	bf00      	nop
 8007ea4:	e006      	b.n	8007eb4 <DMA_CheckFifoParam+0xe8>
 8007ea6:	bf00      	nop
 8007ea8:	e004      	b.n	8007eb4 <DMA_CheckFifoParam+0xe8>
 8007eaa:	bf00      	nop
 8007eac:	e002      	b.n	8007eb4 <DMA_CheckFifoParam+0xe8>
 8007eae:	bf00      	nop
 8007eb0:	e000      	b.n	8007eb4 <DMA_CheckFifoParam+0xe8>
 8007eb2:	bf00      	nop
 8007eb4:	7bfb      	ldrb	r3, [r7, #15]
 8007eb6:	4618      	mov	r0, r3
 8007eb8:	3714      	adds	r7, #20
 8007eba:	46bd      	mov	sp, r7
 8007ebc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ec0:	4770      	bx	lr
 8007ec2:	bf00      	nop

08007ec4 <HAL_FLASH_Program>:
 8007ec4:	b580      	push	{r7, lr}
 8007ec6:	b086      	sub	sp, #24
 8007ec8:	af00      	add	r7, sp, #0
 8007eca:	60f8      	str	r0, [r7, #12]
 8007ecc:	60b9      	str	r1, [r7, #8]
 8007ece:	e9c7 2300 	strd	r2, r3, [r7]
 8007ed2:	2301      	movs	r3, #1
 8007ed4:	75fb      	strb	r3, [r7, #23]
 8007ed6:	4b23      	ldr	r3, [pc, #140]	; (8007f64 <HAL_FLASH_Program+0xa0>)
 8007ed8:	7e1b      	ldrb	r3, [r3, #24]
 8007eda:	2b01      	cmp	r3, #1
 8007edc:	d101      	bne.n	8007ee2 <HAL_FLASH_Program+0x1e>
 8007ede:	2302      	movs	r3, #2
 8007ee0:	e03b      	b.n	8007f5a <HAL_FLASH_Program+0x96>
 8007ee2:	4b20      	ldr	r3, [pc, #128]	; (8007f64 <HAL_FLASH_Program+0xa0>)
 8007ee4:	2201      	movs	r2, #1
 8007ee6:	761a      	strb	r2, [r3, #24]
 8007ee8:	f24c 3050 	movw	r0, #50000	; 0xc350
 8007eec:	f000 f870 	bl	8007fd0 <FLASH_WaitForLastOperation>
 8007ef0:	4603      	mov	r3, r0
 8007ef2:	75fb      	strb	r3, [r7, #23]
 8007ef4:	7dfb      	ldrb	r3, [r7, #23]
 8007ef6:	2b00      	cmp	r3, #0
 8007ef8:	d12b      	bne.n	8007f52 <HAL_FLASH_Program+0x8e>
 8007efa:	68fb      	ldr	r3, [r7, #12]
 8007efc:	2b00      	cmp	r3, #0
 8007efe:	d105      	bne.n	8007f0c <HAL_FLASH_Program+0x48>
 8007f00:	783b      	ldrb	r3, [r7, #0]
 8007f02:	4619      	mov	r1, r3
 8007f04:	68b8      	ldr	r0, [r7, #8]
 8007f06:	f000 f91b 	bl	8008140 <FLASH_Program_Byte>
 8007f0a:	e016      	b.n	8007f3a <HAL_FLASH_Program+0x76>
 8007f0c:	68fb      	ldr	r3, [r7, #12]
 8007f0e:	2b01      	cmp	r3, #1
 8007f10:	d105      	bne.n	8007f1e <HAL_FLASH_Program+0x5a>
 8007f12:	883b      	ldrh	r3, [r7, #0]
 8007f14:	4619      	mov	r1, r3
 8007f16:	68b8      	ldr	r0, [r7, #8]
 8007f18:	f000 f8ee 	bl	80080f8 <FLASH_Program_HalfWord>
 8007f1c:	e00d      	b.n	8007f3a <HAL_FLASH_Program+0x76>
 8007f1e:	68fb      	ldr	r3, [r7, #12]
 8007f20:	2b02      	cmp	r3, #2
 8007f22:	d105      	bne.n	8007f30 <HAL_FLASH_Program+0x6c>
 8007f24:	683b      	ldr	r3, [r7, #0]
 8007f26:	4619      	mov	r1, r3
 8007f28:	68b8      	ldr	r0, [r7, #8]
 8007f2a:	f000 f8c3 	bl	80080b4 <FLASH_Program_Word>
 8007f2e:	e004      	b.n	8007f3a <HAL_FLASH_Program+0x76>
 8007f30:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007f34:	68b8      	ldr	r0, [r7, #8]
 8007f36:	f000 f88b 	bl	8008050 <FLASH_Program_DoubleWord>
 8007f3a:	f24c 3050 	movw	r0, #50000	; 0xc350
 8007f3e:	f000 f847 	bl	8007fd0 <FLASH_WaitForLastOperation>
 8007f42:	4603      	mov	r3, r0
 8007f44:	75fb      	strb	r3, [r7, #23]
 8007f46:	4b08      	ldr	r3, [pc, #32]	; (8007f68 <HAL_FLASH_Program+0xa4>)
 8007f48:	691b      	ldr	r3, [r3, #16]
 8007f4a:	4a07      	ldr	r2, [pc, #28]	; (8007f68 <HAL_FLASH_Program+0xa4>)
 8007f4c:	f023 0301 	bic.w	r3, r3, #1
 8007f50:	6113      	str	r3, [r2, #16]
 8007f52:	4b04      	ldr	r3, [pc, #16]	; (8007f64 <HAL_FLASH_Program+0xa0>)
 8007f54:	2200      	movs	r2, #0
 8007f56:	761a      	strb	r2, [r3, #24]
 8007f58:	7dfb      	ldrb	r3, [r7, #23]
 8007f5a:	4618      	mov	r0, r3
 8007f5c:	3718      	adds	r7, #24
 8007f5e:	46bd      	mov	sp, r7
 8007f60:	bd80      	pop	{r7, pc}
 8007f62:	bf00      	nop
 8007f64:	20000b7c 	.word	0x20000b7c
 8007f68:	40023c00 	.word	0x40023c00

08007f6c <HAL_FLASH_Unlock>:
 8007f6c:	b480      	push	{r7}
 8007f6e:	b083      	sub	sp, #12
 8007f70:	af00      	add	r7, sp, #0
 8007f72:	2300      	movs	r3, #0
 8007f74:	71fb      	strb	r3, [r7, #7]
 8007f76:	4b0b      	ldr	r3, [pc, #44]	; (8007fa4 <HAL_FLASH_Unlock+0x38>)
 8007f78:	691b      	ldr	r3, [r3, #16]
 8007f7a:	2b00      	cmp	r3, #0
 8007f7c:	da0b      	bge.n	8007f96 <HAL_FLASH_Unlock+0x2a>
 8007f7e:	4b09      	ldr	r3, [pc, #36]	; (8007fa4 <HAL_FLASH_Unlock+0x38>)
 8007f80:	4a09      	ldr	r2, [pc, #36]	; (8007fa8 <HAL_FLASH_Unlock+0x3c>)
 8007f82:	605a      	str	r2, [r3, #4]
 8007f84:	4b07      	ldr	r3, [pc, #28]	; (8007fa4 <HAL_FLASH_Unlock+0x38>)
 8007f86:	4a09      	ldr	r2, [pc, #36]	; (8007fac <HAL_FLASH_Unlock+0x40>)
 8007f88:	605a      	str	r2, [r3, #4]
 8007f8a:	4b06      	ldr	r3, [pc, #24]	; (8007fa4 <HAL_FLASH_Unlock+0x38>)
 8007f8c:	691b      	ldr	r3, [r3, #16]
 8007f8e:	2b00      	cmp	r3, #0
 8007f90:	da01      	bge.n	8007f96 <HAL_FLASH_Unlock+0x2a>
 8007f92:	2301      	movs	r3, #1
 8007f94:	71fb      	strb	r3, [r7, #7]
 8007f96:	79fb      	ldrb	r3, [r7, #7]
 8007f98:	4618      	mov	r0, r3
 8007f9a:	370c      	adds	r7, #12
 8007f9c:	46bd      	mov	sp, r7
 8007f9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fa2:	4770      	bx	lr
 8007fa4:	40023c00 	.word	0x40023c00
 8007fa8:	45670123 	.word	0x45670123
 8007fac:	cdef89ab 	.word	0xcdef89ab

08007fb0 <HAL_FLASH_Lock>:
 8007fb0:	b480      	push	{r7}
 8007fb2:	af00      	add	r7, sp, #0
 8007fb4:	4b05      	ldr	r3, [pc, #20]	; (8007fcc <HAL_FLASH_Lock+0x1c>)
 8007fb6:	691b      	ldr	r3, [r3, #16]
 8007fb8:	4a04      	ldr	r2, [pc, #16]	; (8007fcc <HAL_FLASH_Lock+0x1c>)
 8007fba:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8007fbe:	6113      	str	r3, [r2, #16]
 8007fc0:	2300      	movs	r3, #0
 8007fc2:	4618      	mov	r0, r3
 8007fc4:	46bd      	mov	sp, r7
 8007fc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fca:	4770      	bx	lr
 8007fcc:	40023c00 	.word	0x40023c00

08007fd0 <FLASH_WaitForLastOperation>:
 8007fd0:	b580      	push	{r7, lr}
 8007fd2:	b084      	sub	sp, #16
 8007fd4:	af00      	add	r7, sp, #0
 8007fd6:	6078      	str	r0, [r7, #4]
 8007fd8:	2300      	movs	r3, #0
 8007fda:	60fb      	str	r3, [r7, #12]
 8007fdc:	4b1a      	ldr	r3, [pc, #104]	; (8008048 <FLASH_WaitForLastOperation+0x78>)
 8007fde:	2200      	movs	r2, #0
 8007fe0:	61da      	str	r2, [r3, #28]
 8007fe2:	f7fe fc83 	bl	80068ec <HAL_GetTick>
 8007fe6:	60f8      	str	r0, [r7, #12]
 8007fe8:	e010      	b.n	800800c <FLASH_WaitForLastOperation+0x3c>
 8007fea:	687b      	ldr	r3, [r7, #4]
 8007fec:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007ff0:	d00c      	beq.n	800800c <FLASH_WaitForLastOperation+0x3c>
 8007ff2:	687b      	ldr	r3, [r7, #4]
 8007ff4:	2b00      	cmp	r3, #0
 8007ff6:	d007      	beq.n	8008008 <FLASH_WaitForLastOperation+0x38>
 8007ff8:	f7fe fc78 	bl	80068ec <HAL_GetTick>
 8007ffc:	4602      	mov	r2, r0
 8007ffe:	68fb      	ldr	r3, [r7, #12]
 8008000:	1ad3      	subs	r3, r2, r3
 8008002:	687a      	ldr	r2, [r7, #4]
 8008004:	429a      	cmp	r2, r3
 8008006:	d201      	bcs.n	800800c <FLASH_WaitForLastOperation+0x3c>
 8008008:	2303      	movs	r3, #3
 800800a:	e019      	b.n	8008040 <FLASH_WaitForLastOperation+0x70>
 800800c:	4b0f      	ldr	r3, [pc, #60]	; (800804c <FLASH_WaitForLastOperation+0x7c>)
 800800e:	68db      	ldr	r3, [r3, #12]
 8008010:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8008014:	2b00      	cmp	r3, #0
 8008016:	d1e8      	bne.n	8007fea <FLASH_WaitForLastOperation+0x1a>
 8008018:	4b0c      	ldr	r3, [pc, #48]	; (800804c <FLASH_WaitForLastOperation+0x7c>)
 800801a:	68db      	ldr	r3, [r3, #12]
 800801c:	f003 0301 	and.w	r3, r3, #1
 8008020:	2b00      	cmp	r3, #0
 8008022:	d002      	beq.n	800802a <FLASH_WaitForLastOperation+0x5a>
 8008024:	4b09      	ldr	r3, [pc, #36]	; (800804c <FLASH_WaitForLastOperation+0x7c>)
 8008026:	2201      	movs	r2, #1
 8008028:	60da      	str	r2, [r3, #12]
 800802a:	4b08      	ldr	r3, [pc, #32]	; (800804c <FLASH_WaitForLastOperation+0x7c>)
 800802c:	68db      	ldr	r3, [r3, #12]
 800802e:	f403 73f9 	and.w	r3, r3, #498	; 0x1f2
 8008032:	2b00      	cmp	r3, #0
 8008034:	d003      	beq.n	800803e <FLASH_WaitForLastOperation+0x6e>
 8008036:	f000 f8a5 	bl	8008184 <FLASH_SetErrorCode>
 800803a:	2301      	movs	r3, #1
 800803c:	e000      	b.n	8008040 <FLASH_WaitForLastOperation+0x70>
 800803e:	2300      	movs	r3, #0
 8008040:	4618      	mov	r0, r3
 8008042:	3710      	adds	r7, #16
 8008044:	46bd      	mov	sp, r7
 8008046:	bd80      	pop	{r7, pc}
 8008048:	20000b7c 	.word	0x20000b7c
 800804c:	40023c00 	.word	0x40023c00

08008050 <FLASH_Program_DoubleWord>:
 8008050:	b480      	push	{r7}
 8008052:	b085      	sub	sp, #20
 8008054:	af00      	add	r7, sp, #0
 8008056:	60f8      	str	r0, [r7, #12]
 8008058:	e9c7 2300 	strd	r2, r3, [r7]
 800805c:	4b14      	ldr	r3, [pc, #80]	; (80080b0 <FLASH_Program_DoubleWord+0x60>)
 800805e:	691b      	ldr	r3, [r3, #16]
 8008060:	4a13      	ldr	r2, [pc, #76]	; (80080b0 <FLASH_Program_DoubleWord+0x60>)
 8008062:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008066:	6113      	str	r3, [r2, #16]
 8008068:	4b11      	ldr	r3, [pc, #68]	; (80080b0 <FLASH_Program_DoubleWord+0x60>)
 800806a:	691b      	ldr	r3, [r3, #16]
 800806c:	4a10      	ldr	r2, [pc, #64]	; (80080b0 <FLASH_Program_DoubleWord+0x60>)
 800806e:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8008072:	6113      	str	r3, [r2, #16]
 8008074:	4b0e      	ldr	r3, [pc, #56]	; (80080b0 <FLASH_Program_DoubleWord+0x60>)
 8008076:	691b      	ldr	r3, [r3, #16]
 8008078:	4a0d      	ldr	r2, [pc, #52]	; (80080b0 <FLASH_Program_DoubleWord+0x60>)
 800807a:	f043 0301 	orr.w	r3, r3, #1
 800807e:	6113      	str	r3, [r2, #16]
 8008080:	68fb      	ldr	r3, [r7, #12]
 8008082:	683a      	ldr	r2, [r7, #0]
 8008084:	601a      	str	r2, [r3, #0]
 8008086:	f3bf 8f6f 	isb	sy
 800808a:	bf00      	nop
 800808c:	e9d7 0100 	ldrd	r0, r1, [r7]
 8008090:	f04f 0200 	mov.w	r2, #0
 8008094:	f04f 0300 	mov.w	r3, #0
 8008098:	000a      	movs	r2, r1
 800809a:	2300      	movs	r3, #0
 800809c:	68f9      	ldr	r1, [r7, #12]
 800809e:	3104      	adds	r1, #4
 80080a0:	4613      	mov	r3, r2
 80080a2:	600b      	str	r3, [r1, #0]
 80080a4:	bf00      	nop
 80080a6:	3714      	adds	r7, #20
 80080a8:	46bd      	mov	sp, r7
 80080aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080ae:	4770      	bx	lr
 80080b0:	40023c00 	.word	0x40023c00

080080b4 <FLASH_Program_Word>:
 80080b4:	b480      	push	{r7}
 80080b6:	b083      	sub	sp, #12
 80080b8:	af00      	add	r7, sp, #0
 80080ba:	6078      	str	r0, [r7, #4]
 80080bc:	6039      	str	r1, [r7, #0]
 80080be:	4b0d      	ldr	r3, [pc, #52]	; (80080f4 <FLASH_Program_Word+0x40>)
 80080c0:	691b      	ldr	r3, [r3, #16]
 80080c2:	4a0c      	ldr	r2, [pc, #48]	; (80080f4 <FLASH_Program_Word+0x40>)
 80080c4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80080c8:	6113      	str	r3, [r2, #16]
 80080ca:	4b0a      	ldr	r3, [pc, #40]	; (80080f4 <FLASH_Program_Word+0x40>)
 80080cc:	691b      	ldr	r3, [r3, #16]
 80080ce:	4a09      	ldr	r2, [pc, #36]	; (80080f4 <FLASH_Program_Word+0x40>)
 80080d0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80080d4:	6113      	str	r3, [r2, #16]
 80080d6:	4b07      	ldr	r3, [pc, #28]	; (80080f4 <FLASH_Program_Word+0x40>)
 80080d8:	691b      	ldr	r3, [r3, #16]
 80080da:	4a06      	ldr	r2, [pc, #24]	; (80080f4 <FLASH_Program_Word+0x40>)
 80080dc:	f043 0301 	orr.w	r3, r3, #1
 80080e0:	6113      	str	r3, [r2, #16]
 80080e2:	687b      	ldr	r3, [r7, #4]
 80080e4:	683a      	ldr	r2, [r7, #0]
 80080e6:	601a      	str	r2, [r3, #0]
 80080e8:	bf00      	nop
 80080ea:	370c      	adds	r7, #12
 80080ec:	46bd      	mov	sp, r7
 80080ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080f2:	4770      	bx	lr
 80080f4:	40023c00 	.word	0x40023c00

080080f8 <FLASH_Program_HalfWord>:
 80080f8:	b480      	push	{r7}
 80080fa:	b083      	sub	sp, #12
 80080fc:	af00      	add	r7, sp, #0
 80080fe:	6078      	str	r0, [r7, #4]
 8008100:	460b      	mov	r3, r1
 8008102:	807b      	strh	r3, [r7, #2]
 8008104:	4b0d      	ldr	r3, [pc, #52]	; (800813c <FLASH_Program_HalfWord+0x44>)
 8008106:	691b      	ldr	r3, [r3, #16]
 8008108:	4a0c      	ldr	r2, [pc, #48]	; (800813c <FLASH_Program_HalfWord+0x44>)
 800810a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800810e:	6113      	str	r3, [r2, #16]
 8008110:	4b0a      	ldr	r3, [pc, #40]	; (800813c <FLASH_Program_HalfWord+0x44>)
 8008112:	691b      	ldr	r3, [r3, #16]
 8008114:	4a09      	ldr	r2, [pc, #36]	; (800813c <FLASH_Program_HalfWord+0x44>)
 8008116:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800811a:	6113      	str	r3, [r2, #16]
 800811c:	4b07      	ldr	r3, [pc, #28]	; (800813c <FLASH_Program_HalfWord+0x44>)
 800811e:	691b      	ldr	r3, [r3, #16]
 8008120:	4a06      	ldr	r2, [pc, #24]	; (800813c <FLASH_Program_HalfWord+0x44>)
 8008122:	f043 0301 	orr.w	r3, r3, #1
 8008126:	6113      	str	r3, [r2, #16]
 8008128:	687b      	ldr	r3, [r7, #4]
 800812a:	887a      	ldrh	r2, [r7, #2]
 800812c:	801a      	strh	r2, [r3, #0]
 800812e:	bf00      	nop
 8008130:	370c      	adds	r7, #12
 8008132:	46bd      	mov	sp, r7
 8008134:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008138:	4770      	bx	lr
 800813a:	bf00      	nop
 800813c:	40023c00 	.word	0x40023c00

08008140 <FLASH_Program_Byte>:
 8008140:	b480      	push	{r7}
 8008142:	b083      	sub	sp, #12
 8008144:	af00      	add	r7, sp, #0
 8008146:	6078      	str	r0, [r7, #4]
 8008148:	460b      	mov	r3, r1
 800814a:	70fb      	strb	r3, [r7, #3]
 800814c:	4b0c      	ldr	r3, [pc, #48]	; (8008180 <FLASH_Program_Byte+0x40>)
 800814e:	691b      	ldr	r3, [r3, #16]
 8008150:	4a0b      	ldr	r2, [pc, #44]	; (8008180 <FLASH_Program_Byte+0x40>)
 8008152:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008156:	6113      	str	r3, [r2, #16]
 8008158:	4b09      	ldr	r3, [pc, #36]	; (8008180 <FLASH_Program_Byte+0x40>)
 800815a:	4a09      	ldr	r2, [pc, #36]	; (8008180 <FLASH_Program_Byte+0x40>)
 800815c:	691b      	ldr	r3, [r3, #16]
 800815e:	6113      	str	r3, [r2, #16]
 8008160:	4b07      	ldr	r3, [pc, #28]	; (8008180 <FLASH_Program_Byte+0x40>)
 8008162:	691b      	ldr	r3, [r3, #16]
 8008164:	4a06      	ldr	r2, [pc, #24]	; (8008180 <FLASH_Program_Byte+0x40>)
 8008166:	f043 0301 	orr.w	r3, r3, #1
 800816a:	6113      	str	r3, [r2, #16]
 800816c:	687b      	ldr	r3, [r7, #4]
 800816e:	78fa      	ldrb	r2, [r7, #3]
 8008170:	701a      	strb	r2, [r3, #0]
 8008172:	bf00      	nop
 8008174:	370c      	adds	r7, #12
 8008176:	46bd      	mov	sp, r7
 8008178:	f85d 7b04 	ldr.w	r7, [sp], #4
 800817c:	4770      	bx	lr
 800817e:	bf00      	nop
 8008180:	40023c00 	.word	0x40023c00

08008184 <FLASH_SetErrorCode>:
 8008184:	b480      	push	{r7}
 8008186:	af00      	add	r7, sp, #0
 8008188:	4b2f      	ldr	r3, [pc, #188]	; (8008248 <FLASH_SetErrorCode+0xc4>)
 800818a:	68db      	ldr	r3, [r3, #12]
 800818c:	f003 0310 	and.w	r3, r3, #16
 8008190:	2b00      	cmp	r3, #0
 8008192:	d008      	beq.n	80081a6 <FLASH_SetErrorCode+0x22>
 8008194:	4b2d      	ldr	r3, [pc, #180]	; (800824c <FLASH_SetErrorCode+0xc8>)
 8008196:	69db      	ldr	r3, [r3, #28]
 8008198:	f043 0310 	orr.w	r3, r3, #16
 800819c:	4a2b      	ldr	r2, [pc, #172]	; (800824c <FLASH_SetErrorCode+0xc8>)
 800819e:	61d3      	str	r3, [r2, #28]
 80081a0:	4b29      	ldr	r3, [pc, #164]	; (8008248 <FLASH_SetErrorCode+0xc4>)
 80081a2:	2210      	movs	r2, #16
 80081a4:	60da      	str	r2, [r3, #12]
 80081a6:	4b28      	ldr	r3, [pc, #160]	; (8008248 <FLASH_SetErrorCode+0xc4>)
 80081a8:	68db      	ldr	r3, [r3, #12]
 80081aa:	f003 0320 	and.w	r3, r3, #32
 80081ae:	2b00      	cmp	r3, #0
 80081b0:	d008      	beq.n	80081c4 <FLASH_SetErrorCode+0x40>
 80081b2:	4b26      	ldr	r3, [pc, #152]	; (800824c <FLASH_SetErrorCode+0xc8>)
 80081b4:	69db      	ldr	r3, [r3, #28]
 80081b6:	f043 0308 	orr.w	r3, r3, #8
 80081ba:	4a24      	ldr	r2, [pc, #144]	; (800824c <FLASH_SetErrorCode+0xc8>)
 80081bc:	61d3      	str	r3, [r2, #28]
 80081be:	4b22      	ldr	r3, [pc, #136]	; (8008248 <FLASH_SetErrorCode+0xc4>)
 80081c0:	2220      	movs	r2, #32
 80081c2:	60da      	str	r2, [r3, #12]
 80081c4:	4b20      	ldr	r3, [pc, #128]	; (8008248 <FLASH_SetErrorCode+0xc4>)
 80081c6:	68db      	ldr	r3, [r3, #12]
 80081c8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80081cc:	2b00      	cmp	r3, #0
 80081ce:	d008      	beq.n	80081e2 <FLASH_SetErrorCode+0x5e>
 80081d0:	4b1e      	ldr	r3, [pc, #120]	; (800824c <FLASH_SetErrorCode+0xc8>)
 80081d2:	69db      	ldr	r3, [r3, #28]
 80081d4:	f043 0304 	orr.w	r3, r3, #4
 80081d8:	4a1c      	ldr	r2, [pc, #112]	; (800824c <FLASH_SetErrorCode+0xc8>)
 80081da:	61d3      	str	r3, [r2, #28]
 80081dc:	4b1a      	ldr	r3, [pc, #104]	; (8008248 <FLASH_SetErrorCode+0xc4>)
 80081de:	2240      	movs	r2, #64	; 0x40
 80081e0:	60da      	str	r2, [r3, #12]
 80081e2:	4b19      	ldr	r3, [pc, #100]	; (8008248 <FLASH_SetErrorCode+0xc4>)
 80081e4:	68db      	ldr	r3, [r3, #12]
 80081e6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80081ea:	2b00      	cmp	r3, #0
 80081ec:	d008      	beq.n	8008200 <FLASH_SetErrorCode+0x7c>
 80081ee:	4b17      	ldr	r3, [pc, #92]	; (800824c <FLASH_SetErrorCode+0xc8>)
 80081f0:	69db      	ldr	r3, [r3, #28]
 80081f2:	f043 0302 	orr.w	r3, r3, #2
 80081f6:	4a15      	ldr	r2, [pc, #84]	; (800824c <FLASH_SetErrorCode+0xc8>)
 80081f8:	61d3      	str	r3, [r2, #28]
 80081fa:	4b13      	ldr	r3, [pc, #76]	; (8008248 <FLASH_SetErrorCode+0xc4>)
 80081fc:	2280      	movs	r2, #128	; 0x80
 80081fe:	60da      	str	r2, [r3, #12]
 8008200:	4b11      	ldr	r3, [pc, #68]	; (8008248 <FLASH_SetErrorCode+0xc4>)
 8008202:	68db      	ldr	r3, [r3, #12]
 8008204:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008208:	2b00      	cmp	r3, #0
 800820a:	d009      	beq.n	8008220 <FLASH_SetErrorCode+0x9c>
 800820c:	4b0f      	ldr	r3, [pc, #60]	; (800824c <FLASH_SetErrorCode+0xc8>)
 800820e:	69db      	ldr	r3, [r3, #28]
 8008210:	f043 0301 	orr.w	r3, r3, #1
 8008214:	4a0d      	ldr	r2, [pc, #52]	; (800824c <FLASH_SetErrorCode+0xc8>)
 8008216:	61d3      	str	r3, [r2, #28]
 8008218:	4b0b      	ldr	r3, [pc, #44]	; (8008248 <FLASH_SetErrorCode+0xc4>)
 800821a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800821e:	60da      	str	r2, [r3, #12]
 8008220:	4b09      	ldr	r3, [pc, #36]	; (8008248 <FLASH_SetErrorCode+0xc4>)
 8008222:	68db      	ldr	r3, [r3, #12]
 8008224:	f003 0302 	and.w	r3, r3, #2
 8008228:	2b00      	cmp	r3, #0
 800822a:	d008      	beq.n	800823e <FLASH_SetErrorCode+0xba>
 800822c:	4b07      	ldr	r3, [pc, #28]	; (800824c <FLASH_SetErrorCode+0xc8>)
 800822e:	69db      	ldr	r3, [r3, #28]
 8008230:	f043 0320 	orr.w	r3, r3, #32
 8008234:	4a05      	ldr	r2, [pc, #20]	; (800824c <FLASH_SetErrorCode+0xc8>)
 8008236:	61d3      	str	r3, [r2, #28]
 8008238:	4b03      	ldr	r3, [pc, #12]	; (8008248 <FLASH_SetErrorCode+0xc4>)
 800823a:	2202      	movs	r2, #2
 800823c:	60da      	str	r2, [r3, #12]
 800823e:	bf00      	nop
 8008240:	46bd      	mov	sp, r7
 8008242:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008246:	4770      	bx	lr
 8008248:	40023c00 	.word	0x40023c00
 800824c:	20000b7c 	.word	0x20000b7c

08008250 <FLASH_Erase_Sector>:
 8008250:	b480      	push	{r7}
 8008252:	b085      	sub	sp, #20
 8008254:	af00      	add	r7, sp, #0
 8008256:	6078      	str	r0, [r7, #4]
 8008258:	460b      	mov	r3, r1
 800825a:	70fb      	strb	r3, [r7, #3]
 800825c:	2300      	movs	r3, #0
 800825e:	60fb      	str	r3, [r7, #12]
 8008260:	78fb      	ldrb	r3, [r7, #3]
 8008262:	2b00      	cmp	r3, #0
 8008264:	d102      	bne.n	800826c <FLASH_Erase_Sector+0x1c>
 8008266:	2300      	movs	r3, #0
 8008268:	60fb      	str	r3, [r7, #12]
 800826a:	e010      	b.n	800828e <FLASH_Erase_Sector+0x3e>
 800826c:	78fb      	ldrb	r3, [r7, #3]
 800826e:	2b01      	cmp	r3, #1
 8008270:	d103      	bne.n	800827a <FLASH_Erase_Sector+0x2a>
 8008272:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008276:	60fb      	str	r3, [r7, #12]
 8008278:	e009      	b.n	800828e <FLASH_Erase_Sector+0x3e>
 800827a:	78fb      	ldrb	r3, [r7, #3]
 800827c:	2b02      	cmp	r3, #2
 800827e:	d103      	bne.n	8008288 <FLASH_Erase_Sector+0x38>
 8008280:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008284:	60fb      	str	r3, [r7, #12]
 8008286:	e002      	b.n	800828e <FLASH_Erase_Sector+0x3e>
 8008288:	f44f 7340 	mov.w	r3, #768	; 0x300
 800828c:	60fb      	str	r3, [r7, #12]
 800828e:	4b13      	ldr	r3, [pc, #76]	; (80082dc <FLASH_Erase_Sector+0x8c>)
 8008290:	691b      	ldr	r3, [r3, #16]
 8008292:	4a12      	ldr	r2, [pc, #72]	; (80082dc <FLASH_Erase_Sector+0x8c>)
 8008294:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008298:	6113      	str	r3, [r2, #16]
 800829a:	4b10      	ldr	r3, [pc, #64]	; (80082dc <FLASH_Erase_Sector+0x8c>)
 800829c:	691a      	ldr	r2, [r3, #16]
 800829e:	490f      	ldr	r1, [pc, #60]	; (80082dc <FLASH_Erase_Sector+0x8c>)
 80082a0:	68fb      	ldr	r3, [r7, #12]
 80082a2:	4313      	orrs	r3, r2
 80082a4:	610b      	str	r3, [r1, #16]
 80082a6:	4b0d      	ldr	r3, [pc, #52]	; (80082dc <FLASH_Erase_Sector+0x8c>)
 80082a8:	691b      	ldr	r3, [r3, #16]
 80082aa:	4a0c      	ldr	r2, [pc, #48]	; (80082dc <FLASH_Erase_Sector+0x8c>)
 80082ac:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80082b0:	6113      	str	r3, [r2, #16]
 80082b2:	4b0a      	ldr	r3, [pc, #40]	; (80082dc <FLASH_Erase_Sector+0x8c>)
 80082b4:	691a      	ldr	r2, [r3, #16]
 80082b6:	687b      	ldr	r3, [r7, #4]
 80082b8:	00db      	lsls	r3, r3, #3
 80082ba:	4313      	orrs	r3, r2
 80082bc:	4a07      	ldr	r2, [pc, #28]	; (80082dc <FLASH_Erase_Sector+0x8c>)
 80082be:	f043 0302 	orr.w	r3, r3, #2
 80082c2:	6113      	str	r3, [r2, #16]
 80082c4:	4b05      	ldr	r3, [pc, #20]	; (80082dc <FLASH_Erase_Sector+0x8c>)
 80082c6:	691b      	ldr	r3, [r3, #16]
 80082c8:	4a04      	ldr	r2, [pc, #16]	; (80082dc <FLASH_Erase_Sector+0x8c>)
 80082ca:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80082ce:	6113      	str	r3, [r2, #16]
 80082d0:	bf00      	nop
 80082d2:	3714      	adds	r7, #20
 80082d4:	46bd      	mov	sp, r7
 80082d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082da:	4770      	bx	lr
 80082dc:	40023c00 	.word	0x40023c00

080082e0 <HAL_GPIO_Init>:
 80082e0:	b480      	push	{r7}
 80082e2:	b089      	sub	sp, #36	; 0x24
 80082e4:	af00      	add	r7, sp, #0
 80082e6:	6078      	str	r0, [r7, #4]
 80082e8:	6039      	str	r1, [r7, #0]
 80082ea:	2300      	movs	r3, #0
 80082ec:	617b      	str	r3, [r7, #20]
 80082ee:	2300      	movs	r3, #0
 80082f0:	613b      	str	r3, [r7, #16]
 80082f2:	2300      	movs	r3, #0
 80082f4:	61bb      	str	r3, [r7, #24]
 80082f6:	2300      	movs	r3, #0
 80082f8:	61fb      	str	r3, [r7, #28]
 80082fa:	e165      	b.n	80085c8 <HAL_GPIO_Init+0x2e8>
 80082fc:	2201      	movs	r2, #1
 80082fe:	69fb      	ldr	r3, [r7, #28]
 8008300:	fa02 f303 	lsl.w	r3, r2, r3
 8008304:	617b      	str	r3, [r7, #20]
 8008306:	683b      	ldr	r3, [r7, #0]
 8008308:	681b      	ldr	r3, [r3, #0]
 800830a:	697a      	ldr	r2, [r7, #20]
 800830c:	4013      	ands	r3, r2
 800830e:	613b      	str	r3, [r7, #16]
 8008310:	693a      	ldr	r2, [r7, #16]
 8008312:	697b      	ldr	r3, [r7, #20]
 8008314:	429a      	cmp	r2, r3
 8008316:	f040 8154 	bne.w	80085c2 <HAL_GPIO_Init+0x2e2>
 800831a:	683b      	ldr	r3, [r7, #0]
 800831c:	685b      	ldr	r3, [r3, #4]
 800831e:	f003 0303 	and.w	r3, r3, #3
 8008322:	2b01      	cmp	r3, #1
 8008324:	d005      	beq.n	8008332 <HAL_GPIO_Init+0x52>
 8008326:	683b      	ldr	r3, [r7, #0]
 8008328:	685b      	ldr	r3, [r3, #4]
 800832a:	f003 0303 	and.w	r3, r3, #3
 800832e:	2b02      	cmp	r3, #2
 8008330:	d130      	bne.n	8008394 <HAL_GPIO_Init+0xb4>
 8008332:	687b      	ldr	r3, [r7, #4]
 8008334:	689b      	ldr	r3, [r3, #8]
 8008336:	61bb      	str	r3, [r7, #24]
 8008338:	69fb      	ldr	r3, [r7, #28]
 800833a:	005b      	lsls	r3, r3, #1
 800833c:	2203      	movs	r2, #3
 800833e:	fa02 f303 	lsl.w	r3, r2, r3
 8008342:	43db      	mvns	r3, r3
 8008344:	69ba      	ldr	r2, [r7, #24]
 8008346:	4013      	ands	r3, r2
 8008348:	61bb      	str	r3, [r7, #24]
 800834a:	683b      	ldr	r3, [r7, #0]
 800834c:	68da      	ldr	r2, [r3, #12]
 800834e:	69fb      	ldr	r3, [r7, #28]
 8008350:	005b      	lsls	r3, r3, #1
 8008352:	fa02 f303 	lsl.w	r3, r2, r3
 8008356:	69ba      	ldr	r2, [r7, #24]
 8008358:	4313      	orrs	r3, r2
 800835a:	61bb      	str	r3, [r7, #24]
 800835c:	687b      	ldr	r3, [r7, #4]
 800835e:	69ba      	ldr	r2, [r7, #24]
 8008360:	609a      	str	r2, [r3, #8]
 8008362:	687b      	ldr	r3, [r7, #4]
 8008364:	685b      	ldr	r3, [r3, #4]
 8008366:	61bb      	str	r3, [r7, #24]
 8008368:	2201      	movs	r2, #1
 800836a:	69fb      	ldr	r3, [r7, #28]
 800836c:	fa02 f303 	lsl.w	r3, r2, r3
 8008370:	43db      	mvns	r3, r3
 8008372:	69ba      	ldr	r2, [r7, #24]
 8008374:	4013      	ands	r3, r2
 8008376:	61bb      	str	r3, [r7, #24]
 8008378:	683b      	ldr	r3, [r7, #0]
 800837a:	685b      	ldr	r3, [r3, #4]
 800837c:	091b      	lsrs	r3, r3, #4
 800837e:	f003 0201 	and.w	r2, r3, #1
 8008382:	69fb      	ldr	r3, [r7, #28]
 8008384:	fa02 f303 	lsl.w	r3, r2, r3
 8008388:	69ba      	ldr	r2, [r7, #24]
 800838a:	4313      	orrs	r3, r2
 800838c:	61bb      	str	r3, [r7, #24]
 800838e:	687b      	ldr	r3, [r7, #4]
 8008390:	69ba      	ldr	r2, [r7, #24]
 8008392:	605a      	str	r2, [r3, #4]
 8008394:	683b      	ldr	r3, [r7, #0]
 8008396:	685b      	ldr	r3, [r3, #4]
 8008398:	f003 0303 	and.w	r3, r3, #3
 800839c:	2b03      	cmp	r3, #3
 800839e:	d017      	beq.n	80083d0 <HAL_GPIO_Init+0xf0>
 80083a0:	687b      	ldr	r3, [r7, #4]
 80083a2:	68db      	ldr	r3, [r3, #12]
 80083a4:	61bb      	str	r3, [r7, #24]
 80083a6:	69fb      	ldr	r3, [r7, #28]
 80083a8:	005b      	lsls	r3, r3, #1
 80083aa:	2203      	movs	r2, #3
 80083ac:	fa02 f303 	lsl.w	r3, r2, r3
 80083b0:	43db      	mvns	r3, r3
 80083b2:	69ba      	ldr	r2, [r7, #24]
 80083b4:	4013      	ands	r3, r2
 80083b6:	61bb      	str	r3, [r7, #24]
 80083b8:	683b      	ldr	r3, [r7, #0]
 80083ba:	689a      	ldr	r2, [r3, #8]
 80083bc:	69fb      	ldr	r3, [r7, #28]
 80083be:	005b      	lsls	r3, r3, #1
 80083c0:	fa02 f303 	lsl.w	r3, r2, r3
 80083c4:	69ba      	ldr	r2, [r7, #24]
 80083c6:	4313      	orrs	r3, r2
 80083c8:	61bb      	str	r3, [r7, #24]
 80083ca:	687b      	ldr	r3, [r7, #4]
 80083cc:	69ba      	ldr	r2, [r7, #24]
 80083ce:	60da      	str	r2, [r3, #12]
 80083d0:	683b      	ldr	r3, [r7, #0]
 80083d2:	685b      	ldr	r3, [r3, #4]
 80083d4:	f003 0303 	and.w	r3, r3, #3
 80083d8:	2b02      	cmp	r3, #2
 80083da:	d123      	bne.n	8008424 <HAL_GPIO_Init+0x144>
 80083dc:	69fb      	ldr	r3, [r7, #28]
 80083de:	08da      	lsrs	r2, r3, #3
 80083e0:	687b      	ldr	r3, [r7, #4]
 80083e2:	3208      	adds	r2, #8
 80083e4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80083e8:	61bb      	str	r3, [r7, #24]
 80083ea:	69fb      	ldr	r3, [r7, #28]
 80083ec:	f003 0307 	and.w	r3, r3, #7
 80083f0:	009b      	lsls	r3, r3, #2
 80083f2:	220f      	movs	r2, #15
 80083f4:	fa02 f303 	lsl.w	r3, r2, r3
 80083f8:	43db      	mvns	r3, r3
 80083fa:	69ba      	ldr	r2, [r7, #24]
 80083fc:	4013      	ands	r3, r2
 80083fe:	61bb      	str	r3, [r7, #24]
 8008400:	683b      	ldr	r3, [r7, #0]
 8008402:	691a      	ldr	r2, [r3, #16]
 8008404:	69fb      	ldr	r3, [r7, #28]
 8008406:	f003 0307 	and.w	r3, r3, #7
 800840a:	009b      	lsls	r3, r3, #2
 800840c:	fa02 f303 	lsl.w	r3, r2, r3
 8008410:	69ba      	ldr	r2, [r7, #24]
 8008412:	4313      	orrs	r3, r2
 8008414:	61bb      	str	r3, [r7, #24]
 8008416:	69fb      	ldr	r3, [r7, #28]
 8008418:	08da      	lsrs	r2, r3, #3
 800841a:	687b      	ldr	r3, [r7, #4]
 800841c:	3208      	adds	r2, #8
 800841e:	69b9      	ldr	r1, [r7, #24]
 8008420:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8008424:	687b      	ldr	r3, [r7, #4]
 8008426:	681b      	ldr	r3, [r3, #0]
 8008428:	61bb      	str	r3, [r7, #24]
 800842a:	69fb      	ldr	r3, [r7, #28]
 800842c:	005b      	lsls	r3, r3, #1
 800842e:	2203      	movs	r2, #3
 8008430:	fa02 f303 	lsl.w	r3, r2, r3
 8008434:	43db      	mvns	r3, r3
 8008436:	69ba      	ldr	r2, [r7, #24]
 8008438:	4013      	ands	r3, r2
 800843a:	61bb      	str	r3, [r7, #24]
 800843c:	683b      	ldr	r3, [r7, #0]
 800843e:	685b      	ldr	r3, [r3, #4]
 8008440:	f003 0203 	and.w	r2, r3, #3
 8008444:	69fb      	ldr	r3, [r7, #28]
 8008446:	005b      	lsls	r3, r3, #1
 8008448:	fa02 f303 	lsl.w	r3, r2, r3
 800844c:	69ba      	ldr	r2, [r7, #24]
 800844e:	4313      	orrs	r3, r2
 8008450:	61bb      	str	r3, [r7, #24]
 8008452:	687b      	ldr	r3, [r7, #4]
 8008454:	69ba      	ldr	r2, [r7, #24]
 8008456:	601a      	str	r2, [r3, #0]
 8008458:	683b      	ldr	r3, [r7, #0]
 800845a:	685b      	ldr	r3, [r3, #4]
 800845c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8008460:	2b00      	cmp	r3, #0
 8008462:	f000 80ae 	beq.w	80085c2 <HAL_GPIO_Init+0x2e2>
 8008466:	2300      	movs	r3, #0
 8008468:	60fb      	str	r3, [r7, #12]
 800846a:	4b5d      	ldr	r3, [pc, #372]	; (80085e0 <HAL_GPIO_Init+0x300>)
 800846c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800846e:	4a5c      	ldr	r2, [pc, #368]	; (80085e0 <HAL_GPIO_Init+0x300>)
 8008470:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8008474:	6453      	str	r3, [r2, #68]	; 0x44
 8008476:	4b5a      	ldr	r3, [pc, #360]	; (80085e0 <HAL_GPIO_Init+0x300>)
 8008478:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800847a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800847e:	60fb      	str	r3, [r7, #12]
 8008480:	68fb      	ldr	r3, [r7, #12]
 8008482:	4a58      	ldr	r2, [pc, #352]	; (80085e4 <HAL_GPIO_Init+0x304>)
 8008484:	69fb      	ldr	r3, [r7, #28]
 8008486:	089b      	lsrs	r3, r3, #2
 8008488:	3302      	adds	r3, #2
 800848a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800848e:	61bb      	str	r3, [r7, #24]
 8008490:	69fb      	ldr	r3, [r7, #28]
 8008492:	f003 0303 	and.w	r3, r3, #3
 8008496:	009b      	lsls	r3, r3, #2
 8008498:	220f      	movs	r2, #15
 800849a:	fa02 f303 	lsl.w	r3, r2, r3
 800849e:	43db      	mvns	r3, r3
 80084a0:	69ba      	ldr	r2, [r7, #24]
 80084a2:	4013      	ands	r3, r2
 80084a4:	61bb      	str	r3, [r7, #24]
 80084a6:	687b      	ldr	r3, [r7, #4]
 80084a8:	4a4f      	ldr	r2, [pc, #316]	; (80085e8 <HAL_GPIO_Init+0x308>)
 80084aa:	4293      	cmp	r3, r2
 80084ac:	d025      	beq.n	80084fa <HAL_GPIO_Init+0x21a>
 80084ae:	687b      	ldr	r3, [r7, #4]
 80084b0:	4a4e      	ldr	r2, [pc, #312]	; (80085ec <HAL_GPIO_Init+0x30c>)
 80084b2:	4293      	cmp	r3, r2
 80084b4:	d01f      	beq.n	80084f6 <HAL_GPIO_Init+0x216>
 80084b6:	687b      	ldr	r3, [r7, #4]
 80084b8:	4a4d      	ldr	r2, [pc, #308]	; (80085f0 <HAL_GPIO_Init+0x310>)
 80084ba:	4293      	cmp	r3, r2
 80084bc:	d019      	beq.n	80084f2 <HAL_GPIO_Init+0x212>
 80084be:	687b      	ldr	r3, [r7, #4]
 80084c0:	4a4c      	ldr	r2, [pc, #304]	; (80085f4 <HAL_GPIO_Init+0x314>)
 80084c2:	4293      	cmp	r3, r2
 80084c4:	d013      	beq.n	80084ee <HAL_GPIO_Init+0x20e>
 80084c6:	687b      	ldr	r3, [r7, #4]
 80084c8:	4a4b      	ldr	r2, [pc, #300]	; (80085f8 <HAL_GPIO_Init+0x318>)
 80084ca:	4293      	cmp	r3, r2
 80084cc:	d00d      	beq.n	80084ea <HAL_GPIO_Init+0x20a>
 80084ce:	687b      	ldr	r3, [r7, #4]
 80084d0:	4a4a      	ldr	r2, [pc, #296]	; (80085fc <HAL_GPIO_Init+0x31c>)
 80084d2:	4293      	cmp	r3, r2
 80084d4:	d007      	beq.n	80084e6 <HAL_GPIO_Init+0x206>
 80084d6:	687b      	ldr	r3, [r7, #4]
 80084d8:	4a49      	ldr	r2, [pc, #292]	; (8008600 <HAL_GPIO_Init+0x320>)
 80084da:	4293      	cmp	r3, r2
 80084dc:	d101      	bne.n	80084e2 <HAL_GPIO_Init+0x202>
 80084de:	2306      	movs	r3, #6
 80084e0:	e00c      	b.n	80084fc <HAL_GPIO_Init+0x21c>
 80084e2:	2307      	movs	r3, #7
 80084e4:	e00a      	b.n	80084fc <HAL_GPIO_Init+0x21c>
 80084e6:	2305      	movs	r3, #5
 80084e8:	e008      	b.n	80084fc <HAL_GPIO_Init+0x21c>
 80084ea:	2304      	movs	r3, #4
 80084ec:	e006      	b.n	80084fc <HAL_GPIO_Init+0x21c>
 80084ee:	2303      	movs	r3, #3
 80084f0:	e004      	b.n	80084fc <HAL_GPIO_Init+0x21c>
 80084f2:	2302      	movs	r3, #2
 80084f4:	e002      	b.n	80084fc <HAL_GPIO_Init+0x21c>
 80084f6:	2301      	movs	r3, #1
 80084f8:	e000      	b.n	80084fc <HAL_GPIO_Init+0x21c>
 80084fa:	2300      	movs	r3, #0
 80084fc:	69fa      	ldr	r2, [r7, #28]
 80084fe:	f002 0203 	and.w	r2, r2, #3
 8008502:	0092      	lsls	r2, r2, #2
 8008504:	4093      	lsls	r3, r2
 8008506:	69ba      	ldr	r2, [r7, #24]
 8008508:	4313      	orrs	r3, r2
 800850a:	61bb      	str	r3, [r7, #24]
 800850c:	4935      	ldr	r1, [pc, #212]	; (80085e4 <HAL_GPIO_Init+0x304>)
 800850e:	69fb      	ldr	r3, [r7, #28]
 8008510:	089b      	lsrs	r3, r3, #2
 8008512:	3302      	adds	r3, #2
 8008514:	69ba      	ldr	r2, [r7, #24]
 8008516:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800851a:	4b3a      	ldr	r3, [pc, #232]	; (8008604 <HAL_GPIO_Init+0x324>)
 800851c:	689b      	ldr	r3, [r3, #8]
 800851e:	61bb      	str	r3, [r7, #24]
 8008520:	693b      	ldr	r3, [r7, #16]
 8008522:	43db      	mvns	r3, r3
 8008524:	69ba      	ldr	r2, [r7, #24]
 8008526:	4013      	ands	r3, r2
 8008528:	61bb      	str	r3, [r7, #24]
 800852a:	683b      	ldr	r3, [r7, #0]
 800852c:	685b      	ldr	r3, [r3, #4]
 800852e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8008532:	2b00      	cmp	r3, #0
 8008534:	d003      	beq.n	800853e <HAL_GPIO_Init+0x25e>
 8008536:	69ba      	ldr	r2, [r7, #24]
 8008538:	693b      	ldr	r3, [r7, #16]
 800853a:	4313      	orrs	r3, r2
 800853c:	61bb      	str	r3, [r7, #24]
 800853e:	4a31      	ldr	r2, [pc, #196]	; (8008604 <HAL_GPIO_Init+0x324>)
 8008540:	69bb      	ldr	r3, [r7, #24]
 8008542:	6093      	str	r3, [r2, #8]
 8008544:	4b2f      	ldr	r3, [pc, #188]	; (8008604 <HAL_GPIO_Init+0x324>)
 8008546:	68db      	ldr	r3, [r3, #12]
 8008548:	61bb      	str	r3, [r7, #24]
 800854a:	693b      	ldr	r3, [r7, #16]
 800854c:	43db      	mvns	r3, r3
 800854e:	69ba      	ldr	r2, [r7, #24]
 8008550:	4013      	ands	r3, r2
 8008552:	61bb      	str	r3, [r7, #24]
 8008554:	683b      	ldr	r3, [r7, #0]
 8008556:	685b      	ldr	r3, [r3, #4]
 8008558:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800855c:	2b00      	cmp	r3, #0
 800855e:	d003      	beq.n	8008568 <HAL_GPIO_Init+0x288>
 8008560:	69ba      	ldr	r2, [r7, #24]
 8008562:	693b      	ldr	r3, [r7, #16]
 8008564:	4313      	orrs	r3, r2
 8008566:	61bb      	str	r3, [r7, #24]
 8008568:	4a26      	ldr	r2, [pc, #152]	; (8008604 <HAL_GPIO_Init+0x324>)
 800856a:	69bb      	ldr	r3, [r7, #24]
 800856c:	60d3      	str	r3, [r2, #12]
 800856e:	4b25      	ldr	r3, [pc, #148]	; (8008604 <HAL_GPIO_Init+0x324>)
 8008570:	685b      	ldr	r3, [r3, #4]
 8008572:	61bb      	str	r3, [r7, #24]
 8008574:	693b      	ldr	r3, [r7, #16]
 8008576:	43db      	mvns	r3, r3
 8008578:	69ba      	ldr	r2, [r7, #24]
 800857a:	4013      	ands	r3, r2
 800857c:	61bb      	str	r3, [r7, #24]
 800857e:	683b      	ldr	r3, [r7, #0]
 8008580:	685b      	ldr	r3, [r3, #4]
 8008582:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008586:	2b00      	cmp	r3, #0
 8008588:	d003      	beq.n	8008592 <HAL_GPIO_Init+0x2b2>
 800858a:	69ba      	ldr	r2, [r7, #24]
 800858c:	693b      	ldr	r3, [r7, #16]
 800858e:	4313      	orrs	r3, r2
 8008590:	61bb      	str	r3, [r7, #24]
 8008592:	4a1c      	ldr	r2, [pc, #112]	; (8008604 <HAL_GPIO_Init+0x324>)
 8008594:	69bb      	ldr	r3, [r7, #24]
 8008596:	6053      	str	r3, [r2, #4]
 8008598:	4b1a      	ldr	r3, [pc, #104]	; (8008604 <HAL_GPIO_Init+0x324>)
 800859a:	681b      	ldr	r3, [r3, #0]
 800859c:	61bb      	str	r3, [r7, #24]
 800859e:	693b      	ldr	r3, [r7, #16]
 80085a0:	43db      	mvns	r3, r3
 80085a2:	69ba      	ldr	r2, [r7, #24]
 80085a4:	4013      	ands	r3, r2
 80085a6:	61bb      	str	r3, [r7, #24]
 80085a8:	683b      	ldr	r3, [r7, #0]
 80085aa:	685b      	ldr	r3, [r3, #4]
 80085ac:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80085b0:	2b00      	cmp	r3, #0
 80085b2:	d003      	beq.n	80085bc <HAL_GPIO_Init+0x2dc>
 80085b4:	69ba      	ldr	r2, [r7, #24]
 80085b6:	693b      	ldr	r3, [r7, #16]
 80085b8:	4313      	orrs	r3, r2
 80085ba:	61bb      	str	r3, [r7, #24]
 80085bc:	4a11      	ldr	r2, [pc, #68]	; (8008604 <HAL_GPIO_Init+0x324>)
 80085be:	69bb      	ldr	r3, [r7, #24]
 80085c0:	6013      	str	r3, [r2, #0]
 80085c2:	69fb      	ldr	r3, [r7, #28]
 80085c4:	3301      	adds	r3, #1
 80085c6:	61fb      	str	r3, [r7, #28]
 80085c8:	69fb      	ldr	r3, [r7, #28]
 80085ca:	2b0f      	cmp	r3, #15
 80085cc:	f67f ae96 	bls.w	80082fc <HAL_GPIO_Init+0x1c>
 80085d0:	bf00      	nop
 80085d2:	bf00      	nop
 80085d4:	3724      	adds	r7, #36	; 0x24
 80085d6:	46bd      	mov	sp, r7
 80085d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085dc:	4770      	bx	lr
 80085de:	bf00      	nop
 80085e0:	40023800 	.word	0x40023800
 80085e4:	40013800 	.word	0x40013800
 80085e8:	40020000 	.word	0x40020000
 80085ec:	40020400 	.word	0x40020400
 80085f0:	40020800 	.word	0x40020800
 80085f4:	40020c00 	.word	0x40020c00
 80085f8:	40021000 	.word	0x40021000
 80085fc:	40021400 	.word	0x40021400
 8008600:	40021800 	.word	0x40021800
 8008604:	40013c00 	.word	0x40013c00

08008608 <HAL_GPIO_ReadPin>:
 8008608:	b480      	push	{r7}
 800860a:	b085      	sub	sp, #20
 800860c:	af00      	add	r7, sp, #0
 800860e:	6078      	str	r0, [r7, #4]
 8008610:	460b      	mov	r3, r1
 8008612:	807b      	strh	r3, [r7, #2]
 8008614:	687b      	ldr	r3, [r7, #4]
 8008616:	691a      	ldr	r2, [r3, #16]
 8008618:	887b      	ldrh	r3, [r7, #2]
 800861a:	4013      	ands	r3, r2
 800861c:	2b00      	cmp	r3, #0
 800861e:	d002      	beq.n	8008626 <HAL_GPIO_ReadPin+0x1e>
 8008620:	2301      	movs	r3, #1
 8008622:	73fb      	strb	r3, [r7, #15]
 8008624:	e001      	b.n	800862a <HAL_GPIO_ReadPin+0x22>
 8008626:	2300      	movs	r3, #0
 8008628:	73fb      	strb	r3, [r7, #15]
 800862a:	7bfb      	ldrb	r3, [r7, #15]
 800862c:	4618      	mov	r0, r3
 800862e:	3714      	adds	r7, #20
 8008630:	46bd      	mov	sp, r7
 8008632:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008636:	4770      	bx	lr

08008638 <HAL_GPIO_WritePin>:
 8008638:	b480      	push	{r7}
 800863a:	b083      	sub	sp, #12
 800863c:	af00      	add	r7, sp, #0
 800863e:	6078      	str	r0, [r7, #4]
 8008640:	460b      	mov	r3, r1
 8008642:	807b      	strh	r3, [r7, #2]
 8008644:	4613      	mov	r3, r2
 8008646:	707b      	strb	r3, [r7, #1]
 8008648:	787b      	ldrb	r3, [r7, #1]
 800864a:	2b00      	cmp	r3, #0
 800864c:	d003      	beq.n	8008656 <HAL_GPIO_WritePin+0x1e>
 800864e:	887a      	ldrh	r2, [r7, #2]
 8008650:	687b      	ldr	r3, [r7, #4]
 8008652:	619a      	str	r2, [r3, #24]
 8008654:	e003      	b.n	800865e <HAL_GPIO_WritePin+0x26>
 8008656:	887b      	ldrh	r3, [r7, #2]
 8008658:	041a      	lsls	r2, r3, #16
 800865a:	687b      	ldr	r3, [r7, #4]
 800865c:	619a      	str	r2, [r3, #24]
 800865e:	bf00      	nop
 8008660:	370c      	adds	r7, #12
 8008662:	46bd      	mov	sp, r7
 8008664:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008668:	4770      	bx	lr

0800866a <HAL_GPIO_TogglePin>:
 800866a:	b480      	push	{r7}
 800866c:	b085      	sub	sp, #20
 800866e:	af00      	add	r7, sp, #0
 8008670:	6078      	str	r0, [r7, #4]
 8008672:	460b      	mov	r3, r1
 8008674:	807b      	strh	r3, [r7, #2]
 8008676:	687b      	ldr	r3, [r7, #4]
 8008678:	695b      	ldr	r3, [r3, #20]
 800867a:	60fb      	str	r3, [r7, #12]
 800867c:	887a      	ldrh	r2, [r7, #2]
 800867e:	68fb      	ldr	r3, [r7, #12]
 8008680:	4013      	ands	r3, r2
 8008682:	041a      	lsls	r2, r3, #16
 8008684:	68fb      	ldr	r3, [r7, #12]
 8008686:	43d9      	mvns	r1, r3
 8008688:	887b      	ldrh	r3, [r7, #2]
 800868a:	400b      	ands	r3, r1
 800868c:	431a      	orrs	r2, r3
 800868e:	687b      	ldr	r3, [r7, #4]
 8008690:	619a      	str	r2, [r3, #24]
 8008692:	bf00      	nop
 8008694:	3714      	adds	r7, #20
 8008696:	46bd      	mov	sp, r7
 8008698:	f85d 7b04 	ldr.w	r7, [sp], #4
 800869c:	4770      	bx	lr
	...

080086a0 <HAL_GPIO_EXTI_IRQHandler>:
 80086a0:	b580      	push	{r7, lr}
 80086a2:	b082      	sub	sp, #8
 80086a4:	af00      	add	r7, sp, #0
 80086a6:	4603      	mov	r3, r0
 80086a8:	80fb      	strh	r3, [r7, #6]
 80086aa:	4b08      	ldr	r3, [pc, #32]	; (80086cc <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80086ac:	695a      	ldr	r2, [r3, #20]
 80086ae:	88fb      	ldrh	r3, [r7, #6]
 80086b0:	4013      	ands	r3, r2
 80086b2:	2b00      	cmp	r3, #0
 80086b4:	d006      	beq.n	80086c4 <HAL_GPIO_EXTI_IRQHandler+0x24>
 80086b6:	4a05      	ldr	r2, [pc, #20]	; (80086cc <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80086b8:	88fb      	ldrh	r3, [r7, #6]
 80086ba:	6153      	str	r3, [r2, #20]
 80086bc:	88fb      	ldrh	r3, [r7, #6]
 80086be:	4618      	mov	r0, r3
 80086c0:	f7fd fa98 	bl	8005bf4 <HAL_GPIO_EXTI_Callback>
 80086c4:	bf00      	nop
 80086c6:	3708      	adds	r7, #8
 80086c8:	46bd      	mov	sp, r7
 80086ca:	bd80      	pop	{r7, pc}
 80086cc:	40013c00 	.word	0x40013c00

080086d0 <HAL_PWREx_EnableOverDrive>:
 80086d0:	b580      	push	{r7, lr}
 80086d2:	b082      	sub	sp, #8
 80086d4:	af00      	add	r7, sp, #0
 80086d6:	2300      	movs	r3, #0
 80086d8:	607b      	str	r3, [r7, #4]
 80086da:	2300      	movs	r3, #0
 80086dc:	603b      	str	r3, [r7, #0]
 80086de:	4b20      	ldr	r3, [pc, #128]	; (8008760 <HAL_PWREx_EnableOverDrive+0x90>)
 80086e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80086e2:	4a1f      	ldr	r2, [pc, #124]	; (8008760 <HAL_PWREx_EnableOverDrive+0x90>)
 80086e4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80086e8:	6413      	str	r3, [r2, #64]	; 0x40
 80086ea:	4b1d      	ldr	r3, [pc, #116]	; (8008760 <HAL_PWREx_EnableOverDrive+0x90>)
 80086ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80086ee:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80086f2:	603b      	str	r3, [r7, #0]
 80086f4:	683b      	ldr	r3, [r7, #0]
 80086f6:	4b1b      	ldr	r3, [pc, #108]	; (8008764 <HAL_PWREx_EnableOverDrive+0x94>)
 80086f8:	2201      	movs	r2, #1
 80086fa:	601a      	str	r2, [r3, #0]
 80086fc:	f7fe f8f6 	bl	80068ec <HAL_GetTick>
 8008700:	6078      	str	r0, [r7, #4]
 8008702:	e009      	b.n	8008718 <HAL_PWREx_EnableOverDrive+0x48>
 8008704:	f7fe f8f2 	bl	80068ec <HAL_GetTick>
 8008708:	4602      	mov	r2, r0
 800870a:	687b      	ldr	r3, [r7, #4]
 800870c:	1ad3      	subs	r3, r2, r3
 800870e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8008712:	d901      	bls.n	8008718 <HAL_PWREx_EnableOverDrive+0x48>
 8008714:	2303      	movs	r3, #3
 8008716:	e01f      	b.n	8008758 <HAL_PWREx_EnableOverDrive+0x88>
 8008718:	4b13      	ldr	r3, [pc, #76]	; (8008768 <HAL_PWREx_EnableOverDrive+0x98>)
 800871a:	685b      	ldr	r3, [r3, #4]
 800871c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8008720:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008724:	d1ee      	bne.n	8008704 <HAL_PWREx_EnableOverDrive+0x34>
 8008726:	4b11      	ldr	r3, [pc, #68]	; (800876c <HAL_PWREx_EnableOverDrive+0x9c>)
 8008728:	2201      	movs	r2, #1
 800872a:	601a      	str	r2, [r3, #0]
 800872c:	f7fe f8de 	bl	80068ec <HAL_GetTick>
 8008730:	6078      	str	r0, [r7, #4]
 8008732:	e009      	b.n	8008748 <HAL_PWREx_EnableOverDrive+0x78>
 8008734:	f7fe f8da 	bl	80068ec <HAL_GetTick>
 8008738:	4602      	mov	r2, r0
 800873a:	687b      	ldr	r3, [r7, #4]
 800873c:	1ad3      	subs	r3, r2, r3
 800873e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8008742:	d901      	bls.n	8008748 <HAL_PWREx_EnableOverDrive+0x78>
 8008744:	2303      	movs	r3, #3
 8008746:	e007      	b.n	8008758 <HAL_PWREx_EnableOverDrive+0x88>
 8008748:	4b07      	ldr	r3, [pc, #28]	; (8008768 <HAL_PWREx_EnableOverDrive+0x98>)
 800874a:	685b      	ldr	r3, [r3, #4]
 800874c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008750:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8008754:	d1ee      	bne.n	8008734 <HAL_PWREx_EnableOverDrive+0x64>
 8008756:	2300      	movs	r3, #0
 8008758:	4618      	mov	r0, r3
 800875a:	3708      	adds	r7, #8
 800875c:	46bd      	mov	sp, r7
 800875e:	bd80      	pop	{r7, pc}
 8008760:	40023800 	.word	0x40023800
 8008764:	420e0040 	.word	0x420e0040
 8008768:	40007000 	.word	0x40007000
 800876c:	420e0044 	.word	0x420e0044

08008770 <HAL_RCC_ClockConfig>:
 8008770:	b580      	push	{r7, lr}
 8008772:	b084      	sub	sp, #16
 8008774:	af00      	add	r7, sp, #0
 8008776:	6078      	str	r0, [r7, #4]
 8008778:	6039      	str	r1, [r7, #0]
 800877a:	687b      	ldr	r3, [r7, #4]
 800877c:	2b00      	cmp	r3, #0
 800877e:	d101      	bne.n	8008784 <HAL_RCC_ClockConfig+0x14>
 8008780:	2301      	movs	r3, #1
 8008782:	e0cc      	b.n	800891e <HAL_RCC_ClockConfig+0x1ae>
 8008784:	4b68      	ldr	r3, [pc, #416]	; (8008928 <HAL_RCC_ClockConfig+0x1b8>)
 8008786:	681b      	ldr	r3, [r3, #0]
 8008788:	f003 030f 	and.w	r3, r3, #15
 800878c:	683a      	ldr	r2, [r7, #0]
 800878e:	429a      	cmp	r2, r3
 8008790:	d90c      	bls.n	80087ac <HAL_RCC_ClockConfig+0x3c>
 8008792:	4b65      	ldr	r3, [pc, #404]	; (8008928 <HAL_RCC_ClockConfig+0x1b8>)
 8008794:	683a      	ldr	r2, [r7, #0]
 8008796:	b2d2      	uxtb	r2, r2
 8008798:	701a      	strb	r2, [r3, #0]
 800879a:	4b63      	ldr	r3, [pc, #396]	; (8008928 <HAL_RCC_ClockConfig+0x1b8>)
 800879c:	681b      	ldr	r3, [r3, #0]
 800879e:	f003 030f 	and.w	r3, r3, #15
 80087a2:	683a      	ldr	r2, [r7, #0]
 80087a4:	429a      	cmp	r2, r3
 80087a6:	d001      	beq.n	80087ac <HAL_RCC_ClockConfig+0x3c>
 80087a8:	2301      	movs	r3, #1
 80087aa:	e0b8      	b.n	800891e <HAL_RCC_ClockConfig+0x1ae>
 80087ac:	687b      	ldr	r3, [r7, #4]
 80087ae:	681b      	ldr	r3, [r3, #0]
 80087b0:	f003 0302 	and.w	r3, r3, #2
 80087b4:	2b00      	cmp	r3, #0
 80087b6:	d020      	beq.n	80087fa <HAL_RCC_ClockConfig+0x8a>
 80087b8:	687b      	ldr	r3, [r7, #4]
 80087ba:	681b      	ldr	r3, [r3, #0]
 80087bc:	f003 0304 	and.w	r3, r3, #4
 80087c0:	2b00      	cmp	r3, #0
 80087c2:	d005      	beq.n	80087d0 <HAL_RCC_ClockConfig+0x60>
 80087c4:	4b59      	ldr	r3, [pc, #356]	; (800892c <HAL_RCC_ClockConfig+0x1bc>)
 80087c6:	689b      	ldr	r3, [r3, #8]
 80087c8:	4a58      	ldr	r2, [pc, #352]	; (800892c <HAL_RCC_ClockConfig+0x1bc>)
 80087ca:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80087ce:	6093      	str	r3, [r2, #8]
 80087d0:	687b      	ldr	r3, [r7, #4]
 80087d2:	681b      	ldr	r3, [r3, #0]
 80087d4:	f003 0308 	and.w	r3, r3, #8
 80087d8:	2b00      	cmp	r3, #0
 80087da:	d005      	beq.n	80087e8 <HAL_RCC_ClockConfig+0x78>
 80087dc:	4b53      	ldr	r3, [pc, #332]	; (800892c <HAL_RCC_ClockConfig+0x1bc>)
 80087de:	689b      	ldr	r3, [r3, #8]
 80087e0:	4a52      	ldr	r2, [pc, #328]	; (800892c <HAL_RCC_ClockConfig+0x1bc>)
 80087e2:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80087e6:	6093      	str	r3, [r2, #8]
 80087e8:	4b50      	ldr	r3, [pc, #320]	; (800892c <HAL_RCC_ClockConfig+0x1bc>)
 80087ea:	689b      	ldr	r3, [r3, #8]
 80087ec:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80087f0:	687b      	ldr	r3, [r7, #4]
 80087f2:	689b      	ldr	r3, [r3, #8]
 80087f4:	494d      	ldr	r1, [pc, #308]	; (800892c <HAL_RCC_ClockConfig+0x1bc>)
 80087f6:	4313      	orrs	r3, r2
 80087f8:	608b      	str	r3, [r1, #8]
 80087fa:	687b      	ldr	r3, [r7, #4]
 80087fc:	681b      	ldr	r3, [r3, #0]
 80087fe:	f003 0301 	and.w	r3, r3, #1
 8008802:	2b00      	cmp	r3, #0
 8008804:	d044      	beq.n	8008890 <HAL_RCC_ClockConfig+0x120>
 8008806:	687b      	ldr	r3, [r7, #4]
 8008808:	685b      	ldr	r3, [r3, #4]
 800880a:	2b01      	cmp	r3, #1
 800880c:	d107      	bne.n	800881e <HAL_RCC_ClockConfig+0xae>
 800880e:	4b47      	ldr	r3, [pc, #284]	; (800892c <HAL_RCC_ClockConfig+0x1bc>)
 8008810:	681b      	ldr	r3, [r3, #0]
 8008812:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008816:	2b00      	cmp	r3, #0
 8008818:	d119      	bne.n	800884e <HAL_RCC_ClockConfig+0xde>
 800881a:	2301      	movs	r3, #1
 800881c:	e07f      	b.n	800891e <HAL_RCC_ClockConfig+0x1ae>
 800881e:	687b      	ldr	r3, [r7, #4]
 8008820:	685b      	ldr	r3, [r3, #4]
 8008822:	2b02      	cmp	r3, #2
 8008824:	d003      	beq.n	800882e <HAL_RCC_ClockConfig+0xbe>
 8008826:	687b      	ldr	r3, [r7, #4]
 8008828:	685b      	ldr	r3, [r3, #4]
 800882a:	2b03      	cmp	r3, #3
 800882c:	d107      	bne.n	800883e <HAL_RCC_ClockConfig+0xce>
 800882e:	4b3f      	ldr	r3, [pc, #252]	; (800892c <HAL_RCC_ClockConfig+0x1bc>)
 8008830:	681b      	ldr	r3, [r3, #0]
 8008832:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008836:	2b00      	cmp	r3, #0
 8008838:	d109      	bne.n	800884e <HAL_RCC_ClockConfig+0xde>
 800883a:	2301      	movs	r3, #1
 800883c:	e06f      	b.n	800891e <HAL_RCC_ClockConfig+0x1ae>
 800883e:	4b3b      	ldr	r3, [pc, #236]	; (800892c <HAL_RCC_ClockConfig+0x1bc>)
 8008840:	681b      	ldr	r3, [r3, #0]
 8008842:	f003 0302 	and.w	r3, r3, #2
 8008846:	2b00      	cmp	r3, #0
 8008848:	d101      	bne.n	800884e <HAL_RCC_ClockConfig+0xde>
 800884a:	2301      	movs	r3, #1
 800884c:	e067      	b.n	800891e <HAL_RCC_ClockConfig+0x1ae>
 800884e:	4b37      	ldr	r3, [pc, #220]	; (800892c <HAL_RCC_ClockConfig+0x1bc>)
 8008850:	689b      	ldr	r3, [r3, #8]
 8008852:	f023 0203 	bic.w	r2, r3, #3
 8008856:	687b      	ldr	r3, [r7, #4]
 8008858:	685b      	ldr	r3, [r3, #4]
 800885a:	4934      	ldr	r1, [pc, #208]	; (800892c <HAL_RCC_ClockConfig+0x1bc>)
 800885c:	4313      	orrs	r3, r2
 800885e:	608b      	str	r3, [r1, #8]
 8008860:	f7fe f844 	bl	80068ec <HAL_GetTick>
 8008864:	60f8      	str	r0, [r7, #12]
 8008866:	e00a      	b.n	800887e <HAL_RCC_ClockConfig+0x10e>
 8008868:	f7fe f840 	bl	80068ec <HAL_GetTick>
 800886c:	4602      	mov	r2, r0
 800886e:	68fb      	ldr	r3, [r7, #12]
 8008870:	1ad3      	subs	r3, r2, r3
 8008872:	f241 3288 	movw	r2, #5000	; 0x1388
 8008876:	4293      	cmp	r3, r2
 8008878:	d901      	bls.n	800887e <HAL_RCC_ClockConfig+0x10e>
 800887a:	2303      	movs	r3, #3
 800887c:	e04f      	b.n	800891e <HAL_RCC_ClockConfig+0x1ae>
 800887e:	4b2b      	ldr	r3, [pc, #172]	; (800892c <HAL_RCC_ClockConfig+0x1bc>)
 8008880:	689b      	ldr	r3, [r3, #8]
 8008882:	f003 020c 	and.w	r2, r3, #12
 8008886:	687b      	ldr	r3, [r7, #4]
 8008888:	685b      	ldr	r3, [r3, #4]
 800888a:	009b      	lsls	r3, r3, #2
 800888c:	429a      	cmp	r2, r3
 800888e:	d1eb      	bne.n	8008868 <HAL_RCC_ClockConfig+0xf8>
 8008890:	4b25      	ldr	r3, [pc, #148]	; (8008928 <HAL_RCC_ClockConfig+0x1b8>)
 8008892:	681b      	ldr	r3, [r3, #0]
 8008894:	f003 030f 	and.w	r3, r3, #15
 8008898:	683a      	ldr	r2, [r7, #0]
 800889a:	429a      	cmp	r2, r3
 800889c:	d20c      	bcs.n	80088b8 <HAL_RCC_ClockConfig+0x148>
 800889e:	4b22      	ldr	r3, [pc, #136]	; (8008928 <HAL_RCC_ClockConfig+0x1b8>)
 80088a0:	683a      	ldr	r2, [r7, #0]
 80088a2:	b2d2      	uxtb	r2, r2
 80088a4:	701a      	strb	r2, [r3, #0]
 80088a6:	4b20      	ldr	r3, [pc, #128]	; (8008928 <HAL_RCC_ClockConfig+0x1b8>)
 80088a8:	681b      	ldr	r3, [r3, #0]
 80088aa:	f003 030f 	and.w	r3, r3, #15
 80088ae:	683a      	ldr	r2, [r7, #0]
 80088b0:	429a      	cmp	r2, r3
 80088b2:	d001      	beq.n	80088b8 <HAL_RCC_ClockConfig+0x148>
 80088b4:	2301      	movs	r3, #1
 80088b6:	e032      	b.n	800891e <HAL_RCC_ClockConfig+0x1ae>
 80088b8:	687b      	ldr	r3, [r7, #4]
 80088ba:	681b      	ldr	r3, [r3, #0]
 80088bc:	f003 0304 	and.w	r3, r3, #4
 80088c0:	2b00      	cmp	r3, #0
 80088c2:	d008      	beq.n	80088d6 <HAL_RCC_ClockConfig+0x166>
 80088c4:	4b19      	ldr	r3, [pc, #100]	; (800892c <HAL_RCC_ClockConfig+0x1bc>)
 80088c6:	689b      	ldr	r3, [r3, #8]
 80088c8:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 80088cc:	687b      	ldr	r3, [r7, #4]
 80088ce:	68db      	ldr	r3, [r3, #12]
 80088d0:	4916      	ldr	r1, [pc, #88]	; (800892c <HAL_RCC_ClockConfig+0x1bc>)
 80088d2:	4313      	orrs	r3, r2
 80088d4:	608b      	str	r3, [r1, #8]
 80088d6:	687b      	ldr	r3, [r7, #4]
 80088d8:	681b      	ldr	r3, [r3, #0]
 80088da:	f003 0308 	and.w	r3, r3, #8
 80088de:	2b00      	cmp	r3, #0
 80088e0:	d009      	beq.n	80088f6 <HAL_RCC_ClockConfig+0x186>
 80088e2:	4b12      	ldr	r3, [pc, #72]	; (800892c <HAL_RCC_ClockConfig+0x1bc>)
 80088e4:	689b      	ldr	r3, [r3, #8]
 80088e6:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80088ea:	687b      	ldr	r3, [r7, #4]
 80088ec:	691b      	ldr	r3, [r3, #16]
 80088ee:	00db      	lsls	r3, r3, #3
 80088f0:	490e      	ldr	r1, [pc, #56]	; (800892c <HAL_RCC_ClockConfig+0x1bc>)
 80088f2:	4313      	orrs	r3, r2
 80088f4:	608b      	str	r3, [r1, #8]
 80088f6:	f000 f855 	bl	80089a4 <HAL_RCC_GetSysClockFreq>
 80088fa:	4602      	mov	r2, r0
 80088fc:	4b0b      	ldr	r3, [pc, #44]	; (800892c <HAL_RCC_ClockConfig+0x1bc>)
 80088fe:	689b      	ldr	r3, [r3, #8]
 8008900:	091b      	lsrs	r3, r3, #4
 8008902:	f003 030f 	and.w	r3, r3, #15
 8008906:	490a      	ldr	r1, [pc, #40]	; (8008930 <HAL_RCC_ClockConfig+0x1c0>)
 8008908:	5ccb      	ldrb	r3, [r1, r3]
 800890a:	fa22 f303 	lsr.w	r3, r2, r3
 800890e:	4a09      	ldr	r2, [pc, #36]	; (8008934 <HAL_RCC_ClockConfig+0x1c4>)
 8008910:	6013      	str	r3, [r2, #0]
 8008912:	4b09      	ldr	r3, [pc, #36]	; (8008938 <HAL_RCC_ClockConfig+0x1c8>)
 8008914:	681b      	ldr	r3, [r3, #0]
 8008916:	4618      	mov	r0, r3
 8008918:	f7fd ffa4 	bl	8006864 <HAL_InitTick>
 800891c:	2300      	movs	r3, #0
 800891e:	4618      	mov	r0, r3
 8008920:	3710      	adds	r7, #16
 8008922:	46bd      	mov	sp, r7
 8008924:	bd80      	pop	{r7, pc}
 8008926:	bf00      	nop
 8008928:	40023c00 	.word	0x40023c00
 800892c:	40023800 	.word	0x40023800
 8008930:	08010698 	.word	0x08010698
 8008934:	200000a4 	.word	0x200000a4
 8008938:	200000a8 	.word	0x200000a8

0800893c <HAL_RCC_GetHCLKFreq>:
 800893c:	b480      	push	{r7}
 800893e:	af00      	add	r7, sp, #0
 8008940:	4b03      	ldr	r3, [pc, #12]	; (8008950 <HAL_RCC_GetHCLKFreq+0x14>)
 8008942:	681b      	ldr	r3, [r3, #0]
 8008944:	4618      	mov	r0, r3
 8008946:	46bd      	mov	sp, r7
 8008948:	f85d 7b04 	ldr.w	r7, [sp], #4
 800894c:	4770      	bx	lr
 800894e:	bf00      	nop
 8008950:	200000a4 	.word	0x200000a4

08008954 <HAL_RCC_GetPCLK1Freq>:
 8008954:	b580      	push	{r7, lr}
 8008956:	af00      	add	r7, sp, #0
 8008958:	f7ff fff0 	bl	800893c <HAL_RCC_GetHCLKFreq>
 800895c:	4602      	mov	r2, r0
 800895e:	4b05      	ldr	r3, [pc, #20]	; (8008974 <HAL_RCC_GetPCLK1Freq+0x20>)
 8008960:	689b      	ldr	r3, [r3, #8]
 8008962:	0a9b      	lsrs	r3, r3, #10
 8008964:	f003 0307 	and.w	r3, r3, #7
 8008968:	4903      	ldr	r1, [pc, #12]	; (8008978 <HAL_RCC_GetPCLK1Freq+0x24>)
 800896a:	5ccb      	ldrb	r3, [r1, r3]
 800896c:	fa22 f303 	lsr.w	r3, r2, r3
 8008970:	4618      	mov	r0, r3
 8008972:	bd80      	pop	{r7, pc}
 8008974:	40023800 	.word	0x40023800
 8008978:	080106a8 	.word	0x080106a8

0800897c <HAL_RCC_GetPCLK2Freq>:
 800897c:	b580      	push	{r7, lr}
 800897e:	af00      	add	r7, sp, #0
 8008980:	f7ff ffdc 	bl	800893c <HAL_RCC_GetHCLKFreq>
 8008984:	4602      	mov	r2, r0
 8008986:	4b05      	ldr	r3, [pc, #20]	; (800899c <HAL_RCC_GetPCLK2Freq+0x20>)
 8008988:	689b      	ldr	r3, [r3, #8]
 800898a:	0b5b      	lsrs	r3, r3, #13
 800898c:	f003 0307 	and.w	r3, r3, #7
 8008990:	4903      	ldr	r1, [pc, #12]	; (80089a0 <HAL_RCC_GetPCLK2Freq+0x24>)
 8008992:	5ccb      	ldrb	r3, [r1, r3]
 8008994:	fa22 f303 	lsr.w	r3, r2, r3
 8008998:	4618      	mov	r0, r3
 800899a:	bd80      	pop	{r7, pc}
 800899c:	40023800 	.word	0x40023800
 80089a0:	080106a8 	.word	0x080106a8

080089a4 <HAL_RCC_GetSysClockFreq>:
 80089a4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80089a8:	b0ae      	sub	sp, #184	; 0xb8
 80089aa:	af00      	add	r7, sp, #0
 80089ac:	2300      	movs	r3, #0
 80089ae:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 80089b2:	2300      	movs	r3, #0
 80089b4:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80089b8:	2300      	movs	r3, #0
 80089ba:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 80089be:	2300      	movs	r3, #0
 80089c0:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 80089c4:	2300      	movs	r3, #0
 80089c6:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80089ca:	4bcb      	ldr	r3, [pc, #812]	; (8008cf8 <HAL_RCC_GetSysClockFreq+0x354>)
 80089cc:	689b      	ldr	r3, [r3, #8]
 80089ce:	f003 030c 	and.w	r3, r3, #12
 80089d2:	2b0c      	cmp	r3, #12
 80089d4:	f200 8206 	bhi.w	8008de4 <HAL_RCC_GetSysClockFreq+0x440>
 80089d8:	a201      	add	r2, pc, #4	; (adr r2, 80089e0 <HAL_RCC_GetSysClockFreq+0x3c>)
 80089da:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80089de:	bf00      	nop
 80089e0:	08008a15 	.word	0x08008a15
 80089e4:	08008de5 	.word	0x08008de5
 80089e8:	08008de5 	.word	0x08008de5
 80089ec:	08008de5 	.word	0x08008de5
 80089f0:	08008a1d 	.word	0x08008a1d
 80089f4:	08008de5 	.word	0x08008de5
 80089f8:	08008de5 	.word	0x08008de5
 80089fc:	08008de5 	.word	0x08008de5
 8008a00:	08008a25 	.word	0x08008a25
 8008a04:	08008de5 	.word	0x08008de5
 8008a08:	08008de5 	.word	0x08008de5
 8008a0c:	08008de5 	.word	0x08008de5
 8008a10:	08008c15 	.word	0x08008c15
 8008a14:	4bb9      	ldr	r3, [pc, #740]	; (8008cfc <HAL_RCC_GetSysClockFreq+0x358>)
 8008a16:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8008a1a:	e1e7      	b.n	8008dec <HAL_RCC_GetSysClockFreq+0x448>
 8008a1c:	4bb8      	ldr	r3, [pc, #736]	; (8008d00 <HAL_RCC_GetSysClockFreq+0x35c>)
 8008a1e:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8008a22:	e1e3      	b.n	8008dec <HAL_RCC_GetSysClockFreq+0x448>
 8008a24:	4bb4      	ldr	r3, [pc, #720]	; (8008cf8 <HAL_RCC_GetSysClockFreq+0x354>)
 8008a26:	685b      	ldr	r3, [r3, #4]
 8008a28:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8008a2c:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8008a30:	4bb1      	ldr	r3, [pc, #708]	; (8008cf8 <HAL_RCC_GetSysClockFreq+0x354>)
 8008a32:	685b      	ldr	r3, [r3, #4]
 8008a34:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8008a38:	2b00      	cmp	r3, #0
 8008a3a:	d071      	beq.n	8008b20 <HAL_RCC_GetSysClockFreq+0x17c>
 8008a3c:	4bae      	ldr	r3, [pc, #696]	; (8008cf8 <HAL_RCC_GetSysClockFreq+0x354>)
 8008a3e:	685b      	ldr	r3, [r3, #4]
 8008a40:	099b      	lsrs	r3, r3, #6
 8008a42:	2200      	movs	r2, #0
 8008a44:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8008a48:	f8c7 209c 	str.w	r2, [r7, #156]	; 0x9c
 8008a4c:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8008a50:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008a54:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8008a58:	2300      	movs	r3, #0
 8008a5a:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8008a5e:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 8008a62:	4622      	mov	r2, r4
 8008a64:	462b      	mov	r3, r5
 8008a66:	f04f 0000 	mov.w	r0, #0
 8008a6a:	f04f 0100 	mov.w	r1, #0
 8008a6e:	0159      	lsls	r1, r3, #5
 8008a70:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8008a74:	0150      	lsls	r0, r2, #5
 8008a76:	4602      	mov	r2, r0
 8008a78:	460b      	mov	r3, r1
 8008a7a:	4621      	mov	r1, r4
 8008a7c:	1a51      	subs	r1, r2, r1
 8008a7e:	6439      	str	r1, [r7, #64]	; 0x40
 8008a80:	4629      	mov	r1, r5
 8008a82:	eb63 0301 	sbc.w	r3, r3, r1
 8008a86:	647b      	str	r3, [r7, #68]	; 0x44
 8008a88:	f04f 0200 	mov.w	r2, #0
 8008a8c:	f04f 0300 	mov.w	r3, #0
 8008a90:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	; 0x40
 8008a94:	4649      	mov	r1, r9
 8008a96:	018b      	lsls	r3, r1, #6
 8008a98:	4641      	mov	r1, r8
 8008a9a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8008a9e:	4641      	mov	r1, r8
 8008aa0:	018a      	lsls	r2, r1, #6
 8008aa2:	4641      	mov	r1, r8
 8008aa4:	1a51      	subs	r1, r2, r1
 8008aa6:	63b9      	str	r1, [r7, #56]	; 0x38
 8008aa8:	4649      	mov	r1, r9
 8008aaa:	eb63 0301 	sbc.w	r3, r3, r1
 8008aae:	63fb      	str	r3, [r7, #60]	; 0x3c
 8008ab0:	f04f 0200 	mov.w	r2, #0
 8008ab4:	f04f 0300 	mov.w	r3, #0
 8008ab8:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	; 0x38
 8008abc:	4649      	mov	r1, r9
 8008abe:	00cb      	lsls	r3, r1, #3
 8008ac0:	4641      	mov	r1, r8
 8008ac2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8008ac6:	4641      	mov	r1, r8
 8008ac8:	00ca      	lsls	r2, r1, #3
 8008aca:	4610      	mov	r0, r2
 8008acc:	4619      	mov	r1, r3
 8008ace:	4603      	mov	r3, r0
 8008ad0:	4622      	mov	r2, r4
 8008ad2:	189b      	adds	r3, r3, r2
 8008ad4:	633b      	str	r3, [r7, #48]	; 0x30
 8008ad6:	462b      	mov	r3, r5
 8008ad8:	460a      	mov	r2, r1
 8008ada:	eb42 0303 	adc.w	r3, r2, r3
 8008ade:	637b      	str	r3, [r7, #52]	; 0x34
 8008ae0:	f04f 0200 	mov.w	r2, #0
 8008ae4:	f04f 0300 	mov.w	r3, #0
 8008ae8:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8008aec:	4629      	mov	r1, r5
 8008aee:	024b      	lsls	r3, r1, #9
 8008af0:	4621      	mov	r1, r4
 8008af2:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8008af6:	4621      	mov	r1, r4
 8008af8:	024a      	lsls	r2, r1, #9
 8008afa:	4610      	mov	r0, r2
 8008afc:	4619      	mov	r1, r3
 8008afe:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8008b02:	2200      	movs	r2, #0
 8008b04:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8008b08:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8008b0c:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 8008b10:	f7f8 f8ba 	bl	8000c88 <__aeabi_uldivmod>
 8008b14:	4602      	mov	r2, r0
 8008b16:	460b      	mov	r3, r1
 8008b18:	4613      	mov	r3, r2
 8008b1a:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8008b1e:	e067      	b.n	8008bf0 <HAL_RCC_GetSysClockFreq+0x24c>
 8008b20:	4b75      	ldr	r3, [pc, #468]	; (8008cf8 <HAL_RCC_GetSysClockFreq+0x354>)
 8008b22:	685b      	ldr	r3, [r3, #4]
 8008b24:	099b      	lsrs	r3, r3, #6
 8008b26:	2200      	movs	r2, #0
 8008b28:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8008b2c:	f8c7 2084 	str.w	r2, [r7, #132]	; 0x84
 8008b30:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8008b34:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008b38:	67bb      	str	r3, [r7, #120]	; 0x78
 8008b3a:	2300      	movs	r3, #0
 8008b3c:	67fb      	str	r3, [r7, #124]	; 0x7c
 8008b3e:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	; 0x78
 8008b42:	4622      	mov	r2, r4
 8008b44:	462b      	mov	r3, r5
 8008b46:	f04f 0000 	mov.w	r0, #0
 8008b4a:	f04f 0100 	mov.w	r1, #0
 8008b4e:	0159      	lsls	r1, r3, #5
 8008b50:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8008b54:	0150      	lsls	r0, r2, #5
 8008b56:	4602      	mov	r2, r0
 8008b58:	460b      	mov	r3, r1
 8008b5a:	4621      	mov	r1, r4
 8008b5c:	1a51      	subs	r1, r2, r1
 8008b5e:	62b9      	str	r1, [r7, #40]	; 0x28
 8008b60:	4629      	mov	r1, r5
 8008b62:	eb63 0301 	sbc.w	r3, r3, r1
 8008b66:	62fb      	str	r3, [r7, #44]	; 0x2c
 8008b68:	f04f 0200 	mov.w	r2, #0
 8008b6c:	f04f 0300 	mov.w	r3, #0
 8008b70:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	; 0x28
 8008b74:	4649      	mov	r1, r9
 8008b76:	018b      	lsls	r3, r1, #6
 8008b78:	4641      	mov	r1, r8
 8008b7a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8008b7e:	4641      	mov	r1, r8
 8008b80:	018a      	lsls	r2, r1, #6
 8008b82:	4641      	mov	r1, r8
 8008b84:	ebb2 0a01 	subs.w	sl, r2, r1
 8008b88:	4649      	mov	r1, r9
 8008b8a:	eb63 0b01 	sbc.w	fp, r3, r1
 8008b8e:	f04f 0200 	mov.w	r2, #0
 8008b92:	f04f 0300 	mov.w	r3, #0
 8008b96:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8008b9a:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8008b9e:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8008ba2:	4692      	mov	sl, r2
 8008ba4:	469b      	mov	fp, r3
 8008ba6:	4623      	mov	r3, r4
 8008ba8:	eb1a 0303 	adds.w	r3, sl, r3
 8008bac:	623b      	str	r3, [r7, #32]
 8008bae:	462b      	mov	r3, r5
 8008bb0:	eb4b 0303 	adc.w	r3, fp, r3
 8008bb4:	627b      	str	r3, [r7, #36]	; 0x24
 8008bb6:	f04f 0200 	mov.w	r2, #0
 8008bba:	f04f 0300 	mov.w	r3, #0
 8008bbe:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 8008bc2:	4629      	mov	r1, r5
 8008bc4:	028b      	lsls	r3, r1, #10
 8008bc6:	4621      	mov	r1, r4
 8008bc8:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8008bcc:	4621      	mov	r1, r4
 8008bce:	028a      	lsls	r2, r1, #10
 8008bd0:	4610      	mov	r0, r2
 8008bd2:	4619      	mov	r1, r3
 8008bd4:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8008bd8:	2200      	movs	r2, #0
 8008bda:	673b      	str	r3, [r7, #112]	; 0x70
 8008bdc:	677a      	str	r2, [r7, #116]	; 0x74
 8008bde:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 8008be2:	f7f8 f851 	bl	8000c88 <__aeabi_uldivmod>
 8008be6:	4602      	mov	r2, r0
 8008be8:	460b      	mov	r3, r1
 8008bea:	4613      	mov	r3, r2
 8008bec:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8008bf0:	4b41      	ldr	r3, [pc, #260]	; (8008cf8 <HAL_RCC_GetSysClockFreq+0x354>)
 8008bf2:	685b      	ldr	r3, [r3, #4]
 8008bf4:	0c1b      	lsrs	r3, r3, #16
 8008bf6:	f003 0303 	and.w	r3, r3, #3
 8008bfa:	3301      	adds	r3, #1
 8008bfc:	005b      	lsls	r3, r3, #1
 8008bfe:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8008c02:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8008c06:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8008c0a:	fbb2 f3f3 	udiv	r3, r2, r3
 8008c0e:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8008c12:	e0eb      	b.n	8008dec <HAL_RCC_GetSysClockFreq+0x448>
 8008c14:	4b38      	ldr	r3, [pc, #224]	; (8008cf8 <HAL_RCC_GetSysClockFreq+0x354>)
 8008c16:	685b      	ldr	r3, [r3, #4]
 8008c18:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8008c1c:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8008c20:	4b35      	ldr	r3, [pc, #212]	; (8008cf8 <HAL_RCC_GetSysClockFreq+0x354>)
 8008c22:	685b      	ldr	r3, [r3, #4]
 8008c24:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8008c28:	2b00      	cmp	r3, #0
 8008c2a:	d06b      	beq.n	8008d04 <HAL_RCC_GetSysClockFreq+0x360>
 8008c2c:	4b32      	ldr	r3, [pc, #200]	; (8008cf8 <HAL_RCC_GetSysClockFreq+0x354>)
 8008c2e:	685b      	ldr	r3, [r3, #4]
 8008c30:	099b      	lsrs	r3, r3, #6
 8008c32:	2200      	movs	r2, #0
 8008c34:	66bb      	str	r3, [r7, #104]	; 0x68
 8008c36:	66fa      	str	r2, [r7, #108]	; 0x6c
 8008c38:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8008c3a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008c3e:	663b      	str	r3, [r7, #96]	; 0x60
 8008c40:	2300      	movs	r3, #0
 8008c42:	667b      	str	r3, [r7, #100]	; 0x64
 8008c44:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	; 0x60
 8008c48:	4622      	mov	r2, r4
 8008c4a:	462b      	mov	r3, r5
 8008c4c:	f04f 0000 	mov.w	r0, #0
 8008c50:	f04f 0100 	mov.w	r1, #0
 8008c54:	0159      	lsls	r1, r3, #5
 8008c56:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8008c5a:	0150      	lsls	r0, r2, #5
 8008c5c:	4602      	mov	r2, r0
 8008c5e:	460b      	mov	r3, r1
 8008c60:	4621      	mov	r1, r4
 8008c62:	1a51      	subs	r1, r2, r1
 8008c64:	61b9      	str	r1, [r7, #24]
 8008c66:	4629      	mov	r1, r5
 8008c68:	eb63 0301 	sbc.w	r3, r3, r1
 8008c6c:	61fb      	str	r3, [r7, #28]
 8008c6e:	f04f 0200 	mov.w	r2, #0
 8008c72:	f04f 0300 	mov.w	r3, #0
 8008c76:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 8008c7a:	4659      	mov	r1, fp
 8008c7c:	018b      	lsls	r3, r1, #6
 8008c7e:	4651      	mov	r1, sl
 8008c80:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8008c84:	4651      	mov	r1, sl
 8008c86:	018a      	lsls	r2, r1, #6
 8008c88:	4651      	mov	r1, sl
 8008c8a:	ebb2 0801 	subs.w	r8, r2, r1
 8008c8e:	4659      	mov	r1, fp
 8008c90:	eb63 0901 	sbc.w	r9, r3, r1
 8008c94:	f04f 0200 	mov.w	r2, #0
 8008c98:	f04f 0300 	mov.w	r3, #0
 8008c9c:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8008ca0:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8008ca4:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8008ca8:	4690      	mov	r8, r2
 8008caa:	4699      	mov	r9, r3
 8008cac:	4623      	mov	r3, r4
 8008cae:	eb18 0303 	adds.w	r3, r8, r3
 8008cb2:	613b      	str	r3, [r7, #16]
 8008cb4:	462b      	mov	r3, r5
 8008cb6:	eb49 0303 	adc.w	r3, r9, r3
 8008cba:	617b      	str	r3, [r7, #20]
 8008cbc:	f04f 0200 	mov.w	r2, #0
 8008cc0:	f04f 0300 	mov.w	r3, #0
 8008cc4:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8008cc8:	4629      	mov	r1, r5
 8008cca:	024b      	lsls	r3, r1, #9
 8008ccc:	4621      	mov	r1, r4
 8008cce:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8008cd2:	4621      	mov	r1, r4
 8008cd4:	024a      	lsls	r2, r1, #9
 8008cd6:	4610      	mov	r0, r2
 8008cd8:	4619      	mov	r1, r3
 8008cda:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8008cde:	2200      	movs	r2, #0
 8008ce0:	65bb      	str	r3, [r7, #88]	; 0x58
 8008ce2:	65fa      	str	r2, [r7, #92]	; 0x5c
 8008ce4:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8008ce8:	f7f7 ffce 	bl	8000c88 <__aeabi_uldivmod>
 8008cec:	4602      	mov	r2, r0
 8008cee:	460b      	mov	r3, r1
 8008cf0:	4613      	mov	r3, r2
 8008cf2:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8008cf6:	e065      	b.n	8008dc4 <HAL_RCC_GetSysClockFreq+0x420>
 8008cf8:	40023800 	.word	0x40023800
 8008cfc:	00f42400 	.word	0x00f42400
 8008d00:	007a1200 	.word	0x007a1200
 8008d04:	4b3d      	ldr	r3, [pc, #244]	; (8008dfc <HAL_RCC_GetSysClockFreq+0x458>)
 8008d06:	685b      	ldr	r3, [r3, #4]
 8008d08:	099b      	lsrs	r3, r3, #6
 8008d0a:	2200      	movs	r2, #0
 8008d0c:	4618      	mov	r0, r3
 8008d0e:	4611      	mov	r1, r2
 8008d10:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8008d14:	653b      	str	r3, [r7, #80]	; 0x50
 8008d16:	2300      	movs	r3, #0
 8008d18:	657b      	str	r3, [r7, #84]	; 0x54
 8008d1a:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	; 0x50
 8008d1e:	4642      	mov	r2, r8
 8008d20:	464b      	mov	r3, r9
 8008d22:	f04f 0000 	mov.w	r0, #0
 8008d26:	f04f 0100 	mov.w	r1, #0
 8008d2a:	0159      	lsls	r1, r3, #5
 8008d2c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8008d30:	0150      	lsls	r0, r2, #5
 8008d32:	4602      	mov	r2, r0
 8008d34:	460b      	mov	r3, r1
 8008d36:	4641      	mov	r1, r8
 8008d38:	1a51      	subs	r1, r2, r1
 8008d3a:	60b9      	str	r1, [r7, #8]
 8008d3c:	4649      	mov	r1, r9
 8008d3e:	eb63 0301 	sbc.w	r3, r3, r1
 8008d42:	60fb      	str	r3, [r7, #12]
 8008d44:	f04f 0200 	mov.w	r2, #0
 8008d48:	f04f 0300 	mov.w	r3, #0
 8008d4c:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 8008d50:	4659      	mov	r1, fp
 8008d52:	018b      	lsls	r3, r1, #6
 8008d54:	4651      	mov	r1, sl
 8008d56:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8008d5a:	4651      	mov	r1, sl
 8008d5c:	018a      	lsls	r2, r1, #6
 8008d5e:	4651      	mov	r1, sl
 8008d60:	1a54      	subs	r4, r2, r1
 8008d62:	4659      	mov	r1, fp
 8008d64:	eb63 0501 	sbc.w	r5, r3, r1
 8008d68:	f04f 0200 	mov.w	r2, #0
 8008d6c:	f04f 0300 	mov.w	r3, #0
 8008d70:	00eb      	lsls	r3, r5, #3
 8008d72:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8008d76:	00e2      	lsls	r2, r4, #3
 8008d78:	4614      	mov	r4, r2
 8008d7a:	461d      	mov	r5, r3
 8008d7c:	4643      	mov	r3, r8
 8008d7e:	18e3      	adds	r3, r4, r3
 8008d80:	603b      	str	r3, [r7, #0]
 8008d82:	464b      	mov	r3, r9
 8008d84:	eb45 0303 	adc.w	r3, r5, r3
 8008d88:	607b      	str	r3, [r7, #4]
 8008d8a:	f04f 0200 	mov.w	r2, #0
 8008d8e:	f04f 0300 	mov.w	r3, #0
 8008d92:	e9d7 4500 	ldrd	r4, r5, [r7]
 8008d96:	4629      	mov	r1, r5
 8008d98:	028b      	lsls	r3, r1, #10
 8008d9a:	4621      	mov	r1, r4
 8008d9c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8008da0:	4621      	mov	r1, r4
 8008da2:	028a      	lsls	r2, r1, #10
 8008da4:	4610      	mov	r0, r2
 8008da6:	4619      	mov	r1, r3
 8008da8:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8008dac:	2200      	movs	r2, #0
 8008dae:	64bb      	str	r3, [r7, #72]	; 0x48
 8008db0:	64fa      	str	r2, [r7, #76]	; 0x4c
 8008db2:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8008db6:	f7f7 ff67 	bl	8000c88 <__aeabi_uldivmod>
 8008dba:	4602      	mov	r2, r0
 8008dbc:	460b      	mov	r3, r1
 8008dbe:	4613      	mov	r3, r2
 8008dc0:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8008dc4:	4b0d      	ldr	r3, [pc, #52]	; (8008dfc <HAL_RCC_GetSysClockFreq+0x458>)
 8008dc6:	685b      	ldr	r3, [r3, #4]
 8008dc8:	0f1b      	lsrs	r3, r3, #28
 8008dca:	f003 0307 	and.w	r3, r3, #7
 8008dce:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8008dd2:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8008dd6:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 8008dda:	fbb2 f3f3 	udiv	r3, r2, r3
 8008dde:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8008de2:	e003      	b.n	8008dec <HAL_RCC_GetSysClockFreq+0x448>
 8008de4:	4b06      	ldr	r3, [pc, #24]	; (8008e00 <HAL_RCC_GetSysClockFreq+0x45c>)
 8008de6:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8008dea:	bf00      	nop
 8008dec:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 8008df0:	4618      	mov	r0, r3
 8008df2:	37b8      	adds	r7, #184	; 0xb8
 8008df4:	46bd      	mov	sp, r7
 8008df6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8008dfa:	bf00      	nop
 8008dfc:	40023800 	.word	0x40023800
 8008e00:	00f42400 	.word	0x00f42400

08008e04 <HAL_RCC_OscConfig>:
 8008e04:	b580      	push	{r7, lr}
 8008e06:	b086      	sub	sp, #24
 8008e08:	af00      	add	r7, sp, #0
 8008e0a:	6078      	str	r0, [r7, #4]
 8008e0c:	687b      	ldr	r3, [r7, #4]
 8008e0e:	2b00      	cmp	r3, #0
 8008e10:	d101      	bne.n	8008e16 <HAL_RCC_OscConfig+0x12>
 8008e12:	2301      	movs	r3, #1
 8008e14:	e28d      	b.n	8009332 <HAL_RCC_OscConfig+0x52e>
 8008e16:	687b      	ldr	r3, [r7, #4]
 8008e18:	681b      	ldr	r3, [r3, #0]
 8008e1a:	f003 0301 	and.w	r3, r3, #1
 8008e1e:	2b00      	cmp	r3, #0
 8008e20:	f000 8083 	beq.w	8008f2a <HAL_RCC_OscConfig+0x126>
 8008e24:	4b94      	ldr	r3, [pc, #592]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008e26:	689b      	ldr	r3, [r3, #8]
 8008e28:	f003 030c 	and.w	r3, r3, #12
 8008e2c:	2b04      	cmp	r3, #4
 8008e2e:	d019      	beq.n	8008e64 <HAL_RCC_OscConfig+0x60>
 8008e30:	4b91      	ldr	r3, [pc, #580]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008e32:	689b      	ldr	r3, [r3, #8]
 8008e34:	f003 030c 	and.w	r3, r3, #12
 8008e38:	2b08      	cmp	r3, #8
 8008e3a:	d106      	bne.n	8008e4a <HAL_RCC_OscConfig+0x46>
 8008e3c:	4b8e      	ldr	r3, [pc, #568]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008e3e:	685b      	ldr	r3, [r3, #4]
 8008e40:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8008e44:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8008e48:	d00c      	beq.n	8008e64 <HAL_RCC_OscConfig+0x60>
 8008e4a:	4b8b      	ldr	r3, [pc, #556]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008e4c:	689b      	ldr	r3, [r3, #8]
 8008e4e:	f003 030c 	and.w	r3, r3, #12
 8008e52:	2b0c      	cmp	r3, #12
 8008e54:	d112      	bne.n	8008e7c <HAL_RCC_OscConfig+0x78>
 8008e56:	4b88      	ldr	r3, [pc, #544]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008e58:	685b      	ldr	r3, [r3, #4]
 8008e5a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8008e5e:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8008e62:	d10b      	bne.n	8008e7c <HAL_RCC_OscConfig+0x78>
 8008e64:	4b84      	ldr	r3, [pc, #528]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008e66:	681b      	ldr	r3, [r3, #0]
 8008e68:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008e6c:	2b00      	cmp	r3, #0
 8008e6e:	d05b      	beq.n	8008f28 <HAL_RCC_OscConfig+0x124>
 8008e70:	687b      	ldr	r3, [r7, #4]
 8008e72:	685b      	ldr	r3, [r3, #4]
 8008e74:	2b00      	cmp	r3, #0
 8008e76:	d157      	bne.n	8008f28 <HAL_RCC_OscConfig+0x124>
 8008e78:	2301      	movs	r3, #1
 8008e7a:	e25a      	b.n	8009332 <HAL_RCC_OscConfig+0x52e>
 8008e7c:	687b      	ldr	r3, [r7, #4]
 8008e7e:	685b      	ldr	r3, [r3, #4]
 8008e80:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008e84:	d106      	bne.n	8008e94 <HAL_RCC_OscConfig+0x90>
 8008e86:	4b7c      	ldr	r3, [pc, #496]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008e88:	681b      	ldr	r3, [r3, #0]
 8008e8a:	4a7b      	ldr	r2, [pc, #492]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008e8c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008e90:	6013      	str	r3, [r2, #0]
 8008e92:	e01d      	b.n	8008ed0 <HAL_RCC_OscConfig+0xcc>
 8008e94:	687b      	ldr	r3, [r7, #4]
 8008e96:	685b      	ldr	r3, [r3, #4]
 8008e98:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8008e9c:	d10c      	bne.n	8008eb8 <HAL_RCC_OscConfig+0xb4>
 8008e9e:	4b76      	ldr	r3, [pc, #472]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008ea0:	681b      	ldr	r3, [r3, #0]
 8008ea2:	4a75      	ldr	r2, [pc, #468]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008ea4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8008ea8:	6013      	str	r3, [r2, #0]
 8008eaa:	4b73      	ldr	r3, [pc, #460]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008eac:	681b      	ldr	r3, [r3, #0]
 8008eae:	4a72      	ldr	r2, [pc, #456]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008eb0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008eb4:	6013      	str	r3, [r2, #0]
 8008eb6:	e00b      	b.n	8008ed0 <HAL_RCC_OscConfig+0xcc>
 8008eb8:	4b6f      	ldr	r3, [pc, #444]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008eba:	681b      	ldr	r3, [r3, #0]
 8008ebc:	4a6e      	ldr	r2, [pc, #440]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008ebe:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8008ec2:	6013      	str	r3, [r2, #0]
 8008ec4:	4b6c      	ldr	r3, [pc, #432]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008ec6:	681b      	ldr	r3, [r3, #0]
 8008ec8:	4a6b      	ldr	r2, [pc, #428]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008eca:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8008ece:	6013      	str	r3, [r2, #0]
 8008ed0:	687b      	ldr	r3, [r7, #4]
 8008ed2:	685b      	ldr	r3, [r3, #4]
 8008ed4:	2b00      	cmp	r3, #0
 8008ed6:	d013      	beq.n	8008f00 <HAL_RCC_OscConfig+0xfc>
 8008ed8:	f7fd fd08 	bl	80068ec <HAL_GetTick>
 8008edc:	6138      	str	r0, [r7, #16]
 8008ede:	e008      	b.n	8008ef2 <HAL_RCC_OscConfig+0xee>
 8008ee0:	f7fd fd04 	bl	80068ec <HAL_GetTick>
 8008ee4:	4602      	mov	r2, r0
 8008ee6:	693b      	ldr	r3, [r7, #16]
 8008ee8:	1ad3      	subs	r3, r2, r3
 8008eea:	2b64      	cmp	r3, #100	; 0x64
 8008eec:	d901      	bls.n	8008ef2 <HAL_RCC_OscConfig+0xee>
 8008eee:	2303      	movs	r3, #3
 8008ef0:	e21f      	b.n	8009332 <HAL_RCC_OscConfig+0x52e>
 8008ef2:	4b61      	ldr	r3, [pc, #388]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008ef4:	681b      	ldr	r3, [r3, #0]
 8008ef6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008efa:	2b00      	cmp	r3, #0
 8008efc:	d0f0      	beq.n	8008ee0 <HAL_RCC_OscConfig+0xdc>
 8008efe:	e014      	b.n	8008f2a <HAL_RCC_OscConfig+0x126>
 8008f00:	f7fd fcf4 	bl	80068ec <HAL_GetTick>
 8008f04:	6138      	str	r0, [r7, #16]
 8008f06:	e008      	b.n	8008f1a <HAL_RCC_OscConfig+0x116>
 8008f08:	f7fd fcf0 	bl	80068ec <HAL_GetTick>
 8008f0c:	4602      	mov	r2, r0
 8008f0e:	693b      	ldr	r3, [r7, #16]
 8008f10:	1ad3      	subs	r3, r2, r3
 8008f12:	2b64      	cmp	r3, #100	; 0x64
 8008f14:	d901      	bls.n	8008f1a <HAL_RCC_OscConfig+0x116>
 8008f16:	2303      	movs	r3, #3
 8008f18:	e20b      	b.n	8009332 <HAL_RCC_OscConfig+0x52e>
 8008f1a:	4b57      	ldr	r3, [pc, #348]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008f1c:	681b      	ldr	r3, [r3, #0]
 8008f1e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008f22:	2b00      	cmp	r3, #0
 8008f24:	d1f0      	bne.n	8008f08 <HAL_RCC_OscConfig+0x104>
 8008f26:	e000      	b.n	8008f2a <HAL_RCC_OscConfig+0x126>
 8008f28:	bf00      	nop
 8008f2a:	687b      	ldr	r3, [r7, #4]
 8008f2c:	681b      	ldr	r3, [r3, #0]
 8008f2e:	f003 0302 	and.w	r3, r3, #2
 8008f32:	2b00      	cmp	r3, #0
 8008f34:	d06f      	beq.n	8009016 <HAL_RCC_OscConfig+0x212>
 8008f36:	4b50      	ldr	r3, [pc, #320]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008f38:	689b      	ldr	r3, [r3, #8]
 8008f3a:	f003 030c 	and.w	r3, r3, #12
 8008f3e:	2b00      	cmp	r3, #0
 8008f40:	d017      	beq.n	8008f72 <HAL_RCC_OscConfig+0x16e>
 8008f42:	4b4d      	ldr	r3, [pc, #308]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008f44:	689b      	ldr	r3, [r3, #8]
 8008f46:	f003 030c 	and.w	r3, r3, #12
 8008f4a:	2b08      	cmp	r3, #8
 8008f4c:	d105      	bne.n	8008f5a <HAL_RCC_OscConfig+0x156>
 8008f4e:	4b4a      	ldr	r3, [pc, #296]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008f50:	685b      	ldr	r3, [r3, #4]
 8008f52:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8008f56:	2b00      	cmp	r3, #0
 8008f58:	d00b      	beq.n	8008f72 <HAL_RCC_OscConfig+0x16e>
 8008f5a:	4b47      	ldr	r3, [pc, #284]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008f5c:	689b      	ldr	r3, [r3, #8]
 8008f5e:	f003 030c 	and.w	r3, r3, #12
 8008f62:	2b0c      	cmp	r3, #12
 8008f64:	d11c      	bne.n	8008fa0 <HAL_RCC_OscConfig+0x19c>
 8008f66:	4b44      	ldr	r3, [pc, #272]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008f68:	685b      	ldr	r3, [r3, #4]
 8008f6a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8008f6e:	2b00      	cmp	r3, #0
 8008f70:	d116      	bne.n	8008fa0 <HAL_RCC_OscConfig+0x19c>
 8008f72:	4b41      	ldr	r3, [pc, #260]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008f74:	681b      	ldr	r3, [r3, #0]
 8008f76:	f003 0302 	and.w	r3, r3, #2
 8008f7a:	2b00      	cmp	r3, #0
 8008f7c:	d005      	beq.n	8008f8a <HAL_RCC_OscConfig+0x186>
 8008f7e:	687b      	ldr	r3, [r7, #4]
 8008f80:	68db      	ldr	r3, [r3, #12]
 8008f82:	2b01      	cmp	r3, #1
 8008f84:	d001      	beq.n	8008f8a <HAL_RCC_OscConfig+0x186>
 8008f86:	2301      	movs	r3, #1
 8008f88:	e1d3      	b.n	8009332 <HAL_RCC_OscConfig+0x52e>
 8008f8a:	4b3b      	ldr	r3, [pc, #236]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008f8c:	681b      	ldr	r3, [r3, #0]
 8008f8e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8008f92:	687b      	ldr	r3, [r7, #4]
 8008f94:	691b      	ldr	r3, [r3, #16]
 8008f96:	00db      	lsls	r3, r3, #3
 8008f98:	4937      	ldr	r1, [pc, #220]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008f9a:	4313      	orrs	r3, r2
 8008f9c:	600b      	str	r3, [r1, #0]
 8008f9e:	e03a      	b.n	8009016 <HAL_RCC_OscConfig+0x212>
 8008fa0:	687b      	ldr	r3, [r7, #4]
 8008fa2:	68db      	ldr	r3, [r3, #12]
 8008fa4:	2b00      	cmp	r3, #0
 8008fa6:	d020      	beq.n	8008fea <HAL_RCC_OscConfig+0x1e6>
 8008fa8:	4b34      	ldr	r3, [pc, #208]	; (800907c <HAL_RCC_OscConfig+0x278>)
 8008faa:	2201      	movs	r2, #1
 8008fac:	601a      	str	r2, [r3, #0]
 8008fae:	f7fd fc9d 	bl	80068ec <HAL_GetTick>
 8008fb2:	6138      	str	r0, [r7, #16]
 8008fb4:	e008      	b.n	8008fc8 <HAL_RCC_OscConfig+0x1c4>
 8008fb6:	f7fd fc99 	bl	80068ec <HAL_GetTick>
 8008fba:	4602      	mov	r2, r0
 8008fbc:	693b      	ldr	r3, [r7, #16]
 8008fbe:	1ad3      	subs	r3, r2, r3
 8008fc0:	2b02      	cmp	r3, #2
 8008fc2:	d901      	bls.n	8008fc8 <HAL_RCC_OscConfig+0x1c4>
 8008fc4:	2303      	movs	r3, #3
 8008fc6:	e1b4      	b.n	8009332 <HAL_RCC_OscConfig+0x52e>
 8008fc8:	4b2b      	ldr	r3, [pc, #172]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008fca:	681b      	ldr	r3, [r3, #0]
 8008fcc:	f003 0302 	and.w	r3, r3, #2
 8008fd0:	2b00      	cmp	r3, #0
 8008fd2:	d0f0      	beq.n	8008fb6 <HAL_RCC_OscConfig+0x1b2>
 8008fd4:	4b28      	ldr	r3, [pc, #160]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008fd6:	681b      	ldr	r3, [r3, #0]
 8008fd8:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8008fdc:	687b      	ldr	r3, [r7, #4]
 8008fde:	691b      	ldr	r3, [r3, #16]
 8008fe0:	00db      	lsls	r3, r3, #3
 8008fe2:	4925      	ldr	r1, [pc, #148]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 8008fe4:	4313      	orrs	r3, r2
 8008fe6:	600b      	str	r3, [r1, #0]
 8008fe8:	e015      	b.n	8009016 <HAL_RCC_OscConfig+0x212>
 8008fea:	4b24      	ldr	r3, [pc, #144]	; (800907c <HAL_RCC_OscConfig+0x278>)
 8008fec:	2200      	movs	r2, #0
 8008fee:	601a      	str	r2, [r3, #0]
 8008ff0:	f7fd fc7c 	bl	80068ec <HAL_GetTick>
 8008ff4:	6138      	str	r0, [r7, #16]
 8008ff6:	e008      	b.n	800900a <HAL_RCC_OscConfig+0x206>
 8008ff8:	f7fd fc78 	bl	80068ec <HAL_GetTick>
 8008ffc:	4602      	mov	r2, r0
 8008ffe:	693b      	ldr	r3, [r7, #16]
 8009000:	1ad3      	subs	r3, r2, r3
 8009002:	2b02      	cmp	r3, #2
 8009004:	d901      	bls.n	800900a <HAL_RCC_OscConfig+0x206>
 8009006:	2303      	movs	r3, #3
 8009008:	e193      	b.n	8009332 <HAL_RCC_OscConfig+0x52e>
 800900a:	4b1b      	ldr	r3, [pc, #108]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 800900c:	681b      	ldr	r3, [r3, #0]
 800900e:	f003 0302 	and.w	r3, r3, #2
 8009012:	2b00      	cmp	r3, #0
 8009014:	d1f0      	bne.n	8008ff8 <HAL_RCC_OscConfig+0x1f4>
 8009016:	687b      	ldr	r3, [r7, #4]
 8009018:	681b      	ldr	r3, [r3, #0]
 800901a:	f003 0308 	and.w	r3, r3, #8
 800901e:	2b00      	cmp	r3, #0
 8009020:	d036      	beq.n	8009090 <HAL_RCC_OscConfig+0x28c>
 8009022:	687b      	ldr	r3, [r7, #4]
 8009024:	695b      	ldr	r3, [r3, #20]
 8009026:	2b00      	cmp	r3, #0
 8009028:	d016      	beq.n	8009058 <HAL_RCC_OscConfig+0x254>
 800902a:	4b15      	ldr	r3, [pc, #84]	; (8009080 <HAL_RCC_OscConfig+0x27c>)
 800902c:	2201      	movs	r2, #1
 800902e:	601a      	str	r2, [r3, #0]
 8009030:	f7fd fc5c 	bl	80068ec <HAL_GetTick>
 8009034:	6138      	str	r0, [r7, #16]
 8009036:	e008      	b.n	800904a <HAL_RCC_OscConfig+0x246>
 8009038:	f7fd fc58 	bl	80068ec <HAL_GetTick>
 800903c:	4602      	mov	r2, r0
 800903e:	693b      	ldr	r3, [r7, #16]
 8009040:	1ad3      	subs	r3, r2, r3
 8009042:	2b02      	cmp	r3, #2
 8009044:	d901      	bls.n	800904a <HAL_RCC_OscConfig+0x246>
 8009046:	2303      	movs	r3, #3
 8009048:	e173      	b.n	8009332 <HAL_RCC_OscConfig+0x52e>
 800904a:	4b0b      	ldr	r3, [pc, #44]	; (8009078 <HAL_RCC_OscConfig+0x274>)
 800904c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800904e:	f003 0302 	and.w	r3, r3, #2
 8009052:	2b00      	cmp	r3, #0
 8009054:	d0f0      	beq.n	8009038 <HAL_RCC_OscConfig+0x234>
 8009056:	e01b      	b.n	8009090 <HAL_RCC_OscConfig+0x28c>
 8009058:	4b09      	ldr	r3, [pc, #36]	; (8009080 <HAL_RCC_OscConfig+0x27c>)
 800905a:	2200      	movs	r2, #0
 800905c:	601a      	str	r2, [r3, #0]
 800905e:	f7fd fc45 	bl	80068ec <HAL_GetTick>
 8009062:	6138      	str	r0, [r7, #16]
 8009064:	e00e      	b.n	8009084 <HAL_RCC_OscConfig+0x280>
 8009066:	f7fd fc41 	bl	80068ec <HAL_GetTick>
 800906a:	4602      	mov	r2, r0
 800906c:	693b      	ldr	r3, [r7, #16]
 800906e:	1ad3      	subs	r3, r2, r3
 8009070:	2b02      	cmp	r3, #2
 8009072:	d907      	bls.n	8009084 <HAL_RCC_OscConfig+0x280>
 8009074:	2303      	movs	r3, #3
 8009076:	e15c      	b.n	8009332 <HAL_RCC_OscConfig+0x52e>
 8009078:	40023800 	.word	0x40023800
 800907c:	42470000 	.word	0x42470000
 8009080:	42470e80 	.word	0x42470e80
 8009084:	4b8a      	ldr	r3, [pc, #552]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 8009086:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009088:	f003 0302 	and.w	r3, r3, #2
 800908c:	2b00      	cmp	r3, #0
 800908e:	d1ea      	bne.n	8009066 <HAL_RCC_OscConfig+0x262>
 8009090:	687b      	ldr	r3, [r7, #4]
 8009092:	681b      	ldr	r3, [r3, #0]
 8009094:	f003 0304 	and.w	r3, r3, #4
 8009098:	2b00      	cmp	r3, #0
 800909a:	f000 8097 	beq.w	80091cc <HAL_RCC_OscConfig+0x3c8>
 800909e:	2300      	movs	r3, #0
 80090a0:	75fb      	strb	r3, [r7, #23]
 80090a2:	4b83      	ldr	r3, [pc, #524]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 80090a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80090a6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80090aa:	2b00      	cmp	r3, #0
 80090ac:	d10f      	bne.n	80090ce <HAL_RCC_OscConfig+0x2ca>
 80090ae:	2300      	movs	r3, #0
 80090b0:	60bb      	str	r3, [r7, #8]
 80090b2:	4b7f      	ldr	r3, [pc, #508]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 80090b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80090b6:	4a7e      	ldr	r2, [pc, #504]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 80090b8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80090bc:	6413      	str	r3, [r2, #64]	; 0x40
 80090be:	4b7c      	ldr	r3, [pc, #496]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 80090c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80090c2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80090c6:	60bb      	str	r3, [r7, #8]
 80090c8:	68bb      	ldr	r3, [r7, #8]
 80090ca:	2301      	movs	r3, #1
 80090cc:	75fb      	strb	r3, [r7, #23]
 80090ce:	4b79      	ldr	r3, [pc, #484]	; (80092b4 <HAL_RCC_OscConfig+0x4b0>)
 80090d0:	681b      	ldr	r3, [r3, #0]
 80090d2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80090d6:	2b00      	cmp	r3, #0
 80090d8:	d118      	bne.n	800910c <HAL_RCC_OscConfig+0x308>
 80090da:	4b76      	ldr	r3, [pc, #472]	; (80092b4 <HAL_RCC_OscConfig+0x4b0>)
 80090dc:	681b      	ldr	r3, [r3, #0]
 80090de:	4a75      	ldr	r2, [pc, #468]	; (80092b4 <HAL_RCC_OscConfig+0x4b0>)
 80090e0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80090e4:	6013      	str	r3, [r2, #0]
 80090e6:	f7fd fc01 	bl	80068ec <HAL_GetTick>
 80090ea:	6138      	str	r0, [r7, #16]
 80090ec:	e008      	b.n	8009100 <HAL_RCC_OscConfig+0x2fc>
 80090ee:	f7fd fbfd 	bl	80068ec <HAL_GetTick>
 80090f2:	4602      	mov	r2, r0
 80090f4:	693b      	ldr	r3, [r7, #16]
 80090f6:	1ad3      	subs	r3, r2, r3
 80090f8:	2b02      	cmp	r3, #2
 80090fa:	d901      	bls.n	8009100 <HAL_RCC_OscConfig+0x2fc>
 80090fc:	2303      	movs	r3, #3
 80090fe:	e118      	b.n	8009332 <HAL_RCC_OscConfig+0x52e>
 8009100:	4b6c      	ldr	r3, [pc, #432]	; (80092b4 <HAL_RCC_OscConfig+0x4b0>)
 8009102:	681b      	ldr	r3, [r3, #0]
 8009104:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009108:	2b00      	cmp	r3, #0
 800910a:	d0f0      	beq.n	80090ee <HAL_RCC_OscConfig+0x2ea>
 800910c:	687b      	ldr	r3, [r7, #4]
 800910e:	689b      	ldr	r3, [r3, #8]
 8009110:	2b01      	cmp	r3, #1
 8009112:	d106      	bne.n	8009122 <HAL_RCC_OscConfig+0x31e>
 8009114:	4b66      	ldr	r3, [pc, #408]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 8009116:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009118:	4a65      	ldr	r2, [pc, #404]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 800911a:	f043 0301 	orr.w	r3, r3, #1
 800911e:	6713      	str	r3, [r2, #112]	; 0x70
 8009120:	e01c      	b.n	800915c <HAL_RCC_OscConfig+0x358>
 8009122:	687b      	ldr	r3, [r7, #4]
 8009124:	689b      	ldr	r3, [r3, #8]
 8009126:	2b05      	cmp	r3, #5
 8009128:	d10c      	bne.n	8009144 <HAL_RCC_OscConfig+0x340>
 800912a:	4b61      	ldr	r3, [pc, #388]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 800912c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800912e:	4a60      	ldr	r2, [pc, #384]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 8009130:	f043 0304 	orr.w	r3, r3, #4
 8009134:	6713      	str	r3, [r2, #112]	; 0x70
 8009136:	4b5e      	ldr	r3, [pc, #376]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 8009138:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800913a:	4a5d      	ldr	r2, [pc, #372]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 800913c:	f043 0301 	orr.w	r3, r3, #1
 8009140:	6713      	str	r3, [r2, #112]	; 0x70
 8009142:	e00b      	b.n	800915c <HAL_RCC_OscConfig+0x358>
 8009144:	4b5a      	ldr	r3, [pc, #360]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 8009146:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009148:	4a59      	ldr	r2, [pc, #356]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 800914a:	f023 0301 	bic.w	r3, r3, #1
 800914e:	6713      	str	r3, [r2, #112]	; 0x70
 8009150:	4b57      	ldr	r3, [pc, #348]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 8009152:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009154:	4a56      	ldr	r2, [pc, #344]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 8009156:	f023 0304 	bic.w	r3, r3, #4
 800915a:	6713      	str	r3, [r2, #112]	; 0x70
 800915c:	687b      	ldr	r3, [r7, #4]
 800915e:	689b      	ldr	r3, [r3, #8]
 8009160:	2b00      	cmp	r3, #0
 8009162:	d015      	beq.n	8009190 <HAL_RCC_OscConfig+0x38c>
 8009164:	f7fd fbc2 	bl	80068ec <HAL_GetTick>
 8009168:	6138      	str	r0, [r7, #16]
 800916a:	e00a      	b.n	8009182 <HAL_RCC_OscConfig+0x37e>
 800916c:	f7fd fbbe 	bl	80068ec <HAL_GetTick>
 8009170:	4602      	mov	r2, r0
 8009172:	693b      	ldr	r3, [r7, #16]
 8009174:	1ad3      	subs	r3, r2, r3
 8009176:	f241 3288 	movw	r2, #5000	; 0x1388
 800917a:	4293      	cmp	r3, r2
 800917c:	d901      	bls.n	8009182 <HAL_RCC_OscConfig+0x37e>
 800917e:	2303      	movs	r3, #3
 8009180:	e0d7      	b.n	8009332 <HAL_RCC_OscConfig+0x52e>
 8009182:	4b4b      	ldr	r3, [pc, #300]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 8009184:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009186:	f003 0302 	and.w	r3, r3, #2
 800918a:	2b00      	cmp	r3, #0
 800918c:	d0ee      	beq.n	800916c <HAL_RCC_OscConfig+0x368>
 800918e:	e014      	b.n	80091ba <HAL_RCC_OscConfig+0x3b6>
 8009190:	f7fd fbac 	bl	80068ec <HAL_GetTick>
 8009194:	6138      	str	r0, [r7, #16]
 8009196:	e00a      	b.n	80091ae <HAL_RCC_OscConfig+0x3aa>
 8009198:	f7fd fba8 	bl	80068ec <HAL_GetTick>
 800919c:	4602      	mov	r2, r0
 800919e:	693b      	ldr	r3, [r7, #16]
 80091a0:	1ad3      	subs	r3, r2, r3
 80091a2:	f241 3288 	movw	r2, #5000	; 0x1388
 80091a6:	4293      	cmp	r3, r2
 80091a8:	d901      	bls.n	80091ae <HAL_RCC_OscConfig+0x3aa>
 80091aa:	2303      	movs	r3, #3
 80091ac:	e0c1      	b.n	8009332 <HAL_RCC_OscConfig+0x52e>
 80091ae:	4b40      	ldr	r3, [pc, #256]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 80091b0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80091b2:	f003 0302 	and.w	r3, r3, #2
 80091b6:	2b00      	cmp	r3, #0
 80091b8:	d1ee      	bne.n	8009198 <HAL_RCC_OscConfig+0x394>
 80091ba:	7dfb      	ldrb	r3, [r7, #23]
 80091bc:	2b01      	cmp	r3, #1
 80091be:	d105      	bne.n	80091cc <HAL_RCC_OscConfig+0x3c8>
 80091c0:	4b3b      	ldr	r3, [pc, #236]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 80091c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80091c4:	4a3a      	ldr	r2, [pc, #232]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 80091c6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80091ca:	6413      	str	r3, [r2, #64]	; 0x40
 80091cc:	687b      	ldr	r3, [r7, #4]
 80091ce:	699b      	ldr	r3, [r3, #24]
 80091d0:	2b00      	cmp	r3, #0
 80091d2:	f000 80ad 	beq.w	8009330 <HAL_RCC_OscConfig+0x52c>
 80091d6:	4b36      	ldr	r3, [pc, #216]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 80091d8:	689b      	ldr	r3, [r3, #8]
 80091da:	f003 030c 	and.w	r3, r3, #12
 80091de:	2b08      	cmp	r3, #8
 80091e0:	d060      	beq.n	80092a4 <HAL_RCC_OscConfig+0x4a0>
 80091e2:	687b      	ldr	r3, [r7, #4]
 80091e4:	699b      	ldr	r3, [r3, #24]
 80091e6:	2b02      	cmp	r3, #2
 80091e8:	d145      	bne.n	8009276 <HAL_RCC_OscConfig+0x472>
 80091ea:	4b33      	ldr	r3, [pc, #204]	; (80092b8 <HAL_RCC_OscConfig+0x4b4>)
 80091ec:	2200      	movs	r2, #0
 80091ee:	601a      	str	r2, [r3, #0]
 80091f0:	f7fd fb7c 	bl	80068ec <HAL_GetTick>
 80091f4:	6138      	str	r0, [r7, #16]
 80091f6:	e008      	b.n	800920a <HAL_RCC_OscConfig+0x406>
 80091f8:	f7fd fb78 	bl	80068ec <HAL_GetTick>
 80091fc:	4602      	mov	r2, r0
 80091fe:	693b      	ldr	r3, [r7, #16]
 8009200:	1ad3      	subs	r3, r2, r3
 8009202:	2b02      	cmp	r3, #2
 8009204:	d901      	bls.n	800920a <HAL_RCC_OscConfig+0x406>
 8009206:	2303      	movs	r3, #3
 8009208:	e093      	b.n	8009332 <HAL_RCC_OscConfig+0x52e>
 800920a:	4b29      	ldr	r3, [pc, #164]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 800920c:	681b      	ldr	r3, [r3, #0]
 800920e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009212:	2b00      	cmp	r3, #0
 8009214:	d1f0      	bne.n	80091f8 <HAL_RCC_OscConfig+0x3f4>
 8009216:	687b      	ldr	r3, [r7, #4]
 8009218:	69da      	ldr	r2, [r3, #28]
 800921a:	687b      	ldr	r3, [r7, #4]
 800921c:	6a1b      	ldr	r3, [r3, #32]
 800921e:	431a      	orrs	r2, r3
 8009220:	687b      	ldr	r3, [r7, #4]
 8009222:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009224:	019b      	lsls	r3, r3, #6
 8009226:	431a      	orrs	r2, r3
 8009228:	687b      	ldr	r3, [r7, #4]
 800922a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800922c:	085b      	lsrs	r3, r3, #1
 800922e:	3b01      	subs	r3, #1
 8009230:	041b      	lsls	r3, r3, #16
 8009232:	431a      	orrs	r2, r3
 8009234:	687b      	ldr	r3, [r7, #4]
 8009236:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009238:	061b      	lsls	r3, r3, #24
 800923a:	431a      	orrs	r2, r3
 800923c:	687b      	ldr	r3, [r7, #4]
 800923e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009240:	071b      	lsls	r3, r3, #28
 8009242:	491b      	ldr	r1, [pc, #108]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 8009244:	4313      	orrs	r3, r2
 8009246:	604b      	str	r3, [r1, #4]
 8009248:	4b1b      	ldr	r3, [pc, #108]	; (80092b8 <HAL_RCC_OscConfig+0x4b4>)
 800924a:	2201      	movs	r2, #1
 800924c:	601a      	str	r2, [r3, #0]
 800924e:	f7fd fb4d 	bl	80068ec <HAL_GetTick>
 8009252:	6138      	str	r0, [r7, #16]
 8009254:	e008      	b.n	8009268 <HAL_RCC_OscConfig+0x464>
 8009256:	f7fd fb49 	bl	80068ec <HAL_GetTick>
 800925a:	4602      	mov	r2, r0
 800925c:	693b      	ldr	r3, [r7, #16]
 800925e:	1ad3      	subs	r3, r2, r3
 8009260:	2b02      	cmp	r3, #2
 8009262:	d901      	bls.n	8009268 <HAL_RCC_OscConfig+0x464>
 8009264:	2303      	movs	r3, #3
 8009266:	e064      	b.n	8009332 <HAL_RCC_OscConfig+0x52e>
 8009268:	4b11      	ldr	r3, [pc, #68]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 800926a:	681b      	ldr	r3, [r3, #0]
 800926c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009270:	2b00      	cmp	r3, #0
 8009272:	d0f0      	beq.n	8009256 <HAL_RCC_OscConfig+0x452>
 8009274:	e05c      	b.n	8009330 <HAL_RCC_OscConfig+0x52c>
 8009276:	4b10      	ldr	r3, [pc, #64]	; (80092b8 <HAL_RCC_OscConfig+0x4b4>)
 8009278:	2200      	movs	r2, #0
 800927a:	601a      	str	r2, [r3, #0]
 800927c:	f7fd fb36 	bl	80068ec <HAL_GetTick>
 8009280:	6138      	str	r0, [r7, #16]
 8009282:	e008      	b.n	8009296 <HAL_RCC_OscConfig+0x492>
 8009284:	f7fd fb32 	bl	80068ec <HAL_GetTick>
 8009288:	4602      	mov	r2, r0
 800928a:	693b      	ldr	r3, [r7, #16]
 800928c:	1ad3      	subs	r3, r2, r3
 800928e:	2b02      	cmp	r3, #2
 8009290:	d901      	bls.n	8009296 <HAL_RCC_OscConfig+0x492>
 8009292:	2303      	movs	r3, #3
 8009294:	e04d      	b.n	8009332 <HAL_RCC_OscConfig+0x52e>
 8009296:	4b06      	ldr	r3, [pc, #24]	; (80092b0 <HAL_RCC_OscConfig+0x4ac>)
 8009298:	681b      	ldr	r3, [r3, #0]
 800929a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800929e:	2b00      	cmp	r3, #0
 80092a0:	d1f0      	bne.n	8009284 <HAL_RCC_OscConfig+0x480>
 80092a2:	e045      	b.n	8009330 <HAL_RCC_OscConfig+0x52c>
 80092a4:	687b      	ldr	r3, [r7, #4]
 80092a6:	699b      	ldr	r3, [r3, #24]
 80092a8:	2b01      	cmp	r3, #1
 80092aa:	d107      	bne.n	80092bc <HAL_RCC_OscConfig+0x4b8>
 80092ac:	2301      	movs	r3, #1
 80092ae:	e040      	b.n	8009332 <HAL_RCC_OscConfig+0x52e>
 80092b0:	40023800 	.word	0x40023800
 80092b4:	40007000 	.word	0x40007000
 80092b8:	42470060 	.word	0x42470060
 80092bc:	4b1f      	ldr	r3, [pc, #124]	; (800933c <HAL_RCC_OscConfig+0x538>)
 80092be:	685b      	ldr	r3, [r3, #4]
 80092c0:	60fb      	str	r3, [r7, #12]
 80092c2:	687b      	ldr	r3, [r7, #4]
 80092c4:	699b      	ldr	r3, [r3, #24]
 80092c6:	2b01      	cmp	r3, #1
 80092c8:	d030      	beq.n	800932c <HAL_RCC_OscConfig+0x528>
 80092ca:	68fb      	ldr	r3, [r7, #12]
 80092cc:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80092d0:	687b      	ldr	r3, [r7, #4]
 80092d2:	69db      	ldr	r3, [r3, #28]
 80092d4:	429a      	cmp	r2, r3
 80092d6:	d129      	bne.n	800932c <HAL_RCC_OscConfig+0x528>
 80092d8:	68fb      	ldr	r3, [r7, #12]
 80092da:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80092de:	687b      	ldr	r3, [r7, #4]
 80092e0:	6a1b      	ldr	r3, [r3, #32]
 80092e2:	429a      	cmp	r2, r3
 80092e4:	d122      	bne.n	800932c <HAL_RCC_OscConfig+0x528>
 80092e6:	68fa      	ldr	r2, [r7, #12]
 80092e8:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80092ec:	4013      	ands	r3, r2
 80092ee:	687a      	ldr	r2, [r7, #4]
 80092f0:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80092f2:	0192      	lsls	r2, r2, #6
 80092f4:	4293      	cmp	r3, r2
 80092f6:	d119      	bne.n	800932c <HAL_RCC_OscConfig+0x528>
 80092f8:	68fb      	ldr	r3, [r7, #12]
 80092fa:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 80092fe:	687b      	ldr	r3, [r7, #4]
 8009300:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009302:	085b      	lsrs	r3, r3, #1
 8009304:	3b01      	subs	r3, #1
 8009306:	041b      	lsls	r3, r3, #16
 8009308:	429a      	cmp	r2, r3
 800930a:	d10f      	bne.n	800932c <HAL_RCC_OscConfig+0x528>
 800930c:	68fb      	ldr	r3, [r7, #12]
 800930e:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8009312:	687b      	ldr	r3, [r7, #4]
 8009314:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009316:	061b      	lsls	r3, r3, #24
 8009318:	429a      	cmp	r2, r3
 800931a:	d107      	bne.n	800932c <HAL_RCC_OscConfig+0x528>
 800931c:	68fb      	ldr	r3, [r7, #12]
 800931e:	f003 42e0 	and.w	r2, r3, #1879048192	; 0x70000000
 8009322:	687b      	ldr	r3, [r7, #4]
 8009324:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009326:	071b      	lsls	r3, r3, #28
 8009328:	429a      	cmp	r2, r3
 800932a:	d001      	beq.n	8009330 <HAL_RCC_OscConfig+0x52c>
 800932c:	2301      	movs	r3, #1
 800932e:	e000      	b.n	8009332 <HAL_RCC_OscConfig+0x52e>
 8009330:	2300      	movs	r3, #0
 8009332:	4618      	mov	r0, r3
 8009334:	3718      	adds	r7, #24
 8009336:	46bd      	mov	sp, r7
 8009338:	bd80      	pop	{r7, pc}
 800933a:	bf00      	nop
 800933c:	40023800 	.word	0x40023800

08009340 <HAL_TIM_Base_Init>:
 8009340:	b580      	push	{r7, lr}
 8009342:	b082      	sub	sp, #8
 8009344:	af00      	add	r7, sp, #0
 8009346:	6078      	str	r0, [r7, #4]
 8009348:	687b      	ldr	r3, [r7, #4]
 800934a:	2b00      	cmp	r3, #0
 800934c:	d101      	bne.n	8009352 <HAL_TIM_Base_Init+0x12>
 800934e:	2301      	movs	r3, #1
 8009350:	e041      	b.n	80093d6 <HAL_TIM_Base_Init+0x96>
 8009352:	687b      	ldr	r3, [r7, #4]
 8009354:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8009358:	b2db      	uxtb	r3, r3
 800935a:	2b00      	cmp	r3, #0
 800935c:	d106      	bne.n	800936c <HAL_TIM_Base_Init+0x2c>
 800935e:	687b      	ldr	r3, [r7, #4]
 8009360:	2200      	movs	r2, #0
 8009362:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009366:	6878      	ldr	r0, [r7, #4]
 8009368:	f7fc fe08 	bl	8005f7c <HAL_TIM_Base_MspInit>
 800936c:	687b      	ldr	r3, [r7, #4]
 800936e:	2202      	movs	r2, #2
 8009370:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009374:	687b      	ldr	r3, [r7, #4]
 8009376:	681a      	ldr	r2, [r3, #0]
 8009378:	687b      	ldr	r3, [r7, #4]
 800937a:	3304      	adds	r3, #4
 800937c:	4619      	mov	r1, r3
 800937e:	4610      	mov	r0, r2
 8009380:	f001 f944 	bl	800a60c <TIM_Base_SetConfig>
 8009384:	687b      	ldr	r3, [r7, #4]
 8009386:	2201      	movs	r2, #1
 8009388:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800938c:	687b      	ldr	r3, [r7, #4]
 800938e:	2201      	movs	r2, #1
 8009390:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009394:	687b      	ldr	r3, [r7, #4]
 8009396:	2201      	movs	r2, #1
 8009398:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800939c:	687b      	ldr	r3, [r7, #4]
 800939e:	2201      	movs	r2, #1
 80093a0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80093a4:	687b      	ldr	r3, [r7, #4]
 80093a6:	2201      	movs	r2, #1
 80093a8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80093ac:	687b      	ldr	r3, [r7, #4]
 80093ae:	2201      	movs	r2, #1
 80093b0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80093b4:	687b      	ldr	r3, [r7, #4]
 80093b6:	2201      	movs	r2, #1
 80093b8:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80093bc:	687b      	ldr	r3, [r7, #4]
 80093be:	2201      	movs	r2, #1
 80093c0:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80093c4:	687b      	ldr	r3, [r7, #4]
 80093c6:	2201      	movs	r2, #1
 80093c8:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80093cc:	687b      	ldr	r3, [r7, #4]
 80093ce:	2201      	movs	r2, #1
 80093d0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80093d4:	2300      	movs	r3, #0
 80093d6:	4618      	mov	r0, r3
 80093d8:	3708      	adds	r7, #8
 80093da:	46bd      	mov	sp, r7
 80093dc:	bd80      	pop	{r7, pc}
	...

080093e0 <HAL_TIM_Base_Start>:
 80093e0:	b480      	push	{r7}
 80093e2:	b085      	sub	sp, #20
 80093e4:	af00      	add	r7, sp, #0
 80093e6:	6078      	str	r0, [r7, #4]
 80093e8:	687b      	ldr	r3, [r7, #4]
 80093ea:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80093ee:	b2db      	uxtb	r3, r3
 80093f0:	2b01      	cmp	r3, #1
 80093f2:	d001      	beq.n	80093f8 <HAL_TIM_Base_Start+0x18>
 80093f4:	2301      	movs	r3, #1
 80093f6:	e046      	b.n	8009486 <HAL_TIM_Base_Start+0xa6>
 80093f8:	687b      	ldr	r3, [r7, #4]
 80093fa:	2202      	movs	r2, #2
 80093fc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009400:	687b      	ldr	r3, [r7, #4]
 8009402:	681b      	ldr	r3, [r3, #0]
 8009404:	4a23      	ldr	r2, [pc, #140]	; (8009494 <HAL_TIM_Base_Start+0xb4>)
 8009406:	4293      	cmp	r3, r2
 8009408:	d022      	beq.n	8009450 <HAL_TIM_Base_Start+0x70>
 800940a:	687b      	ldr	r3, [r7, #4]
 800940c:	681b      	ldr	r3, [r3, #0]
 800940e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009412:	d01d      	beq.n	8009450 <HAL_TIM_Base_Start+0x70>
 8009414:	687b      	ldr	r3, [r7, #4]
 8009416:	681b      	ldr	r3, [r3, #0]
 8009418:	4a1f      	ldr	r2, [pc, #124]	; (8009498 <HAL_TIM_Base_Start+0xb8>)
 800941a:	4293      	cmp	r3, r2
 800941c:	d018      	beq.n	8009450 <HAL_TIM_Base_Start+0x70>
 800941e:	687b      	ldr	r3, [r7, #4]
 8009420:	681b      	ldr	r3, [r3, #0]
 8009422:	4a1e      	ldr	r2, [pc, #120]	; (800949c <HAL_TIM_Base_Start+0xbc>)
 8009424:	4293      	cmp	r3, r2
 8009426:	d013      	beq.n	8009450 <HAL_TIM_Base_Start+0x70>
 8009428:	687b      	ldr	r3, [r7, #4]
 800942a:	681b      	ldr	r3, [r3, #0]
 800942c:	4a1c      	ldr	r2, [pc, #112]	; (80094a0 <HAL_TIM_Base_Start+0xc0>)
 800942e:	4293      	cmp	r3, r2
 8009430:	d00e      	beq.n	8009450 <HAL_TIM_Base_Start+0x70>
 8009432:	687b      	ldr	r3, [r7, #4]
 8009434:	681b      	ldr	r3, [r3, #0]
 8009436:	4a1b      	ldr	r2, [pc, #108]	; (80094a4 <HAL_TIM_Base_Start+0xc4>)
 8009438:	4293      	cmp	r3, r2
 800943a:	d009      	beq.n	8009450 <HAL_TIM_Base_Start+0x70>
 800943c:	687b      	ldr	r3, [r7, #4]
 800943e:	681b      	ldr	r3, [r3, #0]
 8009440:	4a19      	ldr	r2, [pc, #100]	; (80094a8 <HAL_TIM_Base_Start+0xc8>)
 8009442:	4293      	cmp	r3, r2
 8009444:	d004      	beq.n	8009450 <HAL_TIM_Base_Start+0x70>
 8009446:	687b      	ldr	r3, [r7, #4]
 8009448:	681b      	ldr	r3, [r3, #0]
 800944a:	4a18      	ldr	r2, [pc, #96]	; (80094ac <HAL_TIM_Base_Start+0xcc>)
 800944c:	4293      	cmp	r3, r2
 800944e:	d111      	bne.n	8009474 <HAL_TIM_Base_Start+0x94>
 8009450:	687b      	ldr	r3, [r7, #4]
 8009452:	681b      	ldr	r3, [r3, #0]
 8009454:	689b      	ldr	r3, [r3, #8]
 8009456:	f003 0307 	and.w	r3, r3, #7
 800945a:	60fb      	str	r3, [r7, #12]
 800945c:	68fb      	ldr	r3, [r7, #12]
 800945e:	2b06      	cmp	r3, #6
 8009460:	d010      	beq.n	8009484 <HAL_TIM_Base_Start+0xa4>
 8009462:	687b      	ldr	r3, [r7, #4]
 8009464:	681b      	ldr	r3, [r3, #0]
 8009466:	681a      	ldr	r2, [r3, #0]
 8009468:	687b      	ldr	r3, [r7, #4]
 800946a:	681b      	ldr	r3, [r3, #0]
 800946c:	f042 0201 	orr.w	r2, r2, #1
 8009470:	601a      	str	r2, [r3, #0]
 8009472:	e007      	b.n	8009484 <HAL_TIM_Base_Start+0xa4>
 8009474:	687b      	ldr	r3, [r7, #4]
 8009476:	681b      	ldr	r3, [r3, #0]
 8009478:	681a      	ldr	r2, [r3, #0]
 800947a:	687b      	ldr	r3, [r7, #4]
 800947c:	681b      	ldr	r3, [r3, #0]
 800947e:	f042 0201 	orr.w	r2, r2, #1
 8009482:	601a      	str	r2, [r3, #0]
 8009484:	2300      	movs	r3, #0
 8009486:	4618      	mov	r0, r3
 8009488:	3714      	adds	r7, #20
 800948a:	46bd      	mov	sp, r7
 800948c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009490:	4770      	bx	lr
 8009492:	bf00      	nop
 8009494:	40010000 	.word	0x40010000
 8009498:	40000400 	.word	0x40000400
 800949c:	40000800 	.word	0x40000800
 80094a0:	40000c00 	.word	0x40000c00
 80094a4:	40010400 	.word	0x40010400
 80094a8:	40014000 	.word	0x40014000
 80094ac:	40001800 	.word	0x40001800

080094b0 <HAL_TIM_PWM_Init>:
 80094b0:	b580      	push	{r7, lr}
 80094b2:	b082      	sub	sp, #8
 80094b4:	af00      	add	r7, sp, #0
 80094b6:	6078      	str	r0, [r7, #4]
 80094b8:	687b      	ldr	r3, [r7, #4]
 80094ba:	2b00      	cmp	r3, #0
 80094bc:	d101      	bne.n	80094c2 <HAL_TIM_PWM_Init+0x12>
 80094be:	2301      	movs	r3, #1
 80094c0:	e041      	b.n	8009546 <HAL_TIM_PWM_Init+0x96>
 80094c2:	687b      	ldr	r3, [r7, #4]
 80094c4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80094c8:	b2db      	uxtb	r3, r3
 80094ca:	2b00      	cmp	r3, #0
 80094cc:	d106      	bne.n	80094dc <HAL_TIM_PWM_Init+0x2c>
 80094ce:	687b      	ldr	r3, [r7, #4]
 80094d0:	2200      	movs	r2, #0
 80094d2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80094d6:	6878      	ldr	r0, [r7, #4]
 80094d8:	f000 f839 	bl	800954e <HAL_TIM_PWM_MspInit>
 80094dc:	687b      	ldr	r3, [r7, #4]
 80094de:	2202      	movs	r2, #2
 80094e0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80094e4:	687b      	ldr	r3, [r7, #4]
 80094e6:	681a      	ldr	r2, [r3, #0]
 80094e8:	687b      	ldr	r3, [r7, #4]
 80094ea:	3304      	adds	r3, #4
 80094ec:	4619      	mov	r1, r3
 80094ee:	4610      	mov	r0, r2
 80094f0:	f001 f88c 	bl	800a60c <TIM_Base_SetConfig>
 80094f4:	687b      	ldr	r3, [r7, #4]
 80094f6:	2201      	movs	r2, #1
 80094f8:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80094fc:	687b      	ldr	r3, [r7, #4]
 80094fe:	2201      	movs	r2, #1
 8009500:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009504:	687b      	ldr	r3, [r7, #4]
 8009506:	2201      	movs	r2, #1
 8009508:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800950c:	687b      	ldr	r3, [r7, #4]
 800950e:	2201      	movs	r2, #1
 8009510:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009514:	687b      	ldr	r3, [r7, #4]
 8009516:	2201      	movs	r2, #1
 8009518:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800951c:	687b      	ldr	r3, [r7, #4]
 800951e:	2201      	movs	r2, #1
 8009520:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009524:	687b      	ldr	r3, [r7, #4]
 8009526:	2201      	movs	r2, #1
 8009528:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800952c:	687b      	ldr	r3, [r7, #4]
 800952e:	2201      	movs	r2, #1
 8009530:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8009534:	687b      	ldr	r3, [r7, #4]
 8009536:	2201      	movs	r2, #1
 8009538:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800953c:	687b      	ldr	r3, [r7, #4]
 800953e:	2201      	movs	r2, #1
 8009540:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009544:	2300      	movs	r3, #0
 8009546:	4618      	mov	r0, r3
 8009548:	3708      	adds	r7, #8
 800954a:	46bd      	mov	sp, r7
 800954c:	bd80      	pop	{r7, pc}

0800954e <HAL_TIM_PWM_MspInit>:
 800954e:	b480      	push	{r7}
 8009550:	b083      	sub	sp, #12
 8009552:	af00      	add	r7, sp, #0
 8009554:	6078      	str	r0, [r7, #4]
 8009556:	bf00      	nop
 8009558:	370c      	adds	r7, #12
 800955a:	46bd      	mov	sp, r7
 800955c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009560:	4770      	bx	lr
	...

08009564 <HAL_TIM_PWM_Start>:
 8009564:	b580      	push	{r7, lr}
 8009566:	b084      	sub	sp, #16
 8009568:	af00      	add	r7, sp, #0
 800956a:	6078      	str	r0, [r7, #4]
 800956c:	6039      	str	r1, [r7, #0]
 800956e:	683b      	ldr	r3, [r7, #0]
 8009570:	2b00      	cmp	r3, #0
 8009572:	d109      	bne.n	8009588 <HAL_TIM_PWM_Start+0x24>
 8009574:	687b      	ldr	r3, [r7, #4]
 8009576:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800957a:	b2db      	uxtb	r3, r3
 800957c:	2b01      	cmp	r3, #1
 800957e:	bf14      	ite	ne
 8009580:	2301      	movne	r3, #1
 8009582:	2300      	moveq	r3, #0
 8009584:	b2db      	uxtb	r3, r3
 8009586:	e022      	b.n	80095ce <HAL_TIM_PWM_Start+0x6a>
 8009588:	683b      	ldr	r3, [r7, #0]
 800958a:	2b04      	cmp	r3, #4
 800958c:	d109      	bne.n	80095a2 <HAL_TIM_PWM_Start+0x3e>
 800958e:	687b      	ldr	r3, [r7, #4]
 8009590:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8009594:	b2db      	uxtb	r3, r3
 8009596:	2b01      	cmp	r3, #1
 8009598:	bf14      	ite	ne
 800959a:	2301      	movne	r3, #1
 800959c:	2300      	moveq	r3, #0
 800959e:	b2db      	uxtb	r3, r3
 80095a0:	e015      	b.n	80095ce <HAL_TIM_PWM_Start+0x6a>
 80095a2:	683b      	ldr	r3, [r7, #0]
 80095a4:	2b08      	cmp	r3, #8
 80095a6:	d109      	bne.n	80095bc <HAL_TIM_PWM_Start+0x58>
 80095a8:	687b      	ldr	r3, [r7, #4]
 80095aa:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80095ae:	b2db      	uxtb	r3, r3
 80095b0:	2b01      	cmp	r3, #1
 80095b2:	bf14      	ite	ne
 80095b4:	2301      	movne	r3, #1
 80095b6:	2300      	moveq	r3, #0
 80095b8:	b2db      	uxtb	r3, r3
 80095ba:	e008      	b.n	80095ce <HAL_TIM_PWM_Start+0x6a>
 80095bc:	687b      	ldr	r3, [r7, #4]
 80095be:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80095c2:	b2db      	uxtb	r3, r3
 80095c4:	2b01      	cmp	r3, #1
 80095c6:	bf14      	ite	ne
 80095c8:	2301      	movne	r3, #1
 80095ca:	2300      	moveq	r3, #0
 80095cc:	b2db      	uxtb	r3, r3
 80095ce:	2b00      	cmp	r3, #0
 80095d0:	d001      	beq.n	80095d6 <HAL_TIM_PWM_Start+0x72>
 80095d2:	2301      	movs	r3, #1
 80095d4:	e07c      	b.n	80096d0 <HAL_TIM_PWM_Start+0x16c>
 80095d6:	683b      	ldr	r3, [r7, #0]
 80095d8:	2b00      	cmp	r3, #0
 80095da:	d104      	bne.n	80095e6 <HAL_TIM_PWM_Start+0x82>
 80095dc:	687b      	ldr	r3, [r7, #4]
 80095de:	2202      	movs	r2, #2
 80095e0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80095e4:	e013      	b.n	800960e <HAL_TIM_PWM_Start+0xaa>
 80095e6:	683b      	ldr	r3, [r7, #0]
 80095e8:	2b04      	cmp	r3, #4
 80095ea:	d104      	bne.n	80095f6 <HAL_TIM_PWM_Start+0x92>
 80095ec:	687b      	ldr	r3, [r7, #4]
 80095ee:	2202      	movs	r2, #2
 80095f0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80095f4:	e00b      	b.n	800960e <HAL_TIM_PWM_Start+0xaa>
 80095f6:	683b      	ldr	r3, [r7, #0]
 80095f8:	2b08      	cmp	r3, #8
 80095fa:	d104      	bne.n	8009606 <HAL_TIM_PWM_Start+0xa2>
 80095fc:	687b      	ldr	r3, [r7, #4]
 80095fe:	2202      	movs	r2, #2
 8009600:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009604:	e003      	b.n	800960e <HAL_TIM_PWM_Start+0xaa>
 8009606:	687b      	ldr	r3, [r7, #4]
 8009608:	2202      	movs	r2, #2
 800960a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800960e:	687b      	ldr	r3, [r7, #4]
 8009610:	681b      	ldr	r3, [r3, #0]
 8009612:	2201      	movs	r2, #1
 8009614:	6839      	ldr	r1, [r7, #0]
 8009616:	4618      	mov	r0, r3
 8009618:	f001 fc0c 	bl	800ae34 <TIM_CCxChannelCmd>
 800961c:	687b      	ldr	r3, [r7, #4]
 800961e:	681b      	ldr	r3, [r3, #0]
 8009620:	4a2d      	ldr	r2, [pc, #180]	; (80096d8 <HAL_TIM_PWM_Start+0x174>)
 8009622:	4293      	cmp	r3, r2
 8009624:	d004      	beq.n	8009630 <HAL_TIM_PWM_Start+0xcc>
 8009626:	687b      	ldr	r3, [r7, #4]
 8009628:	681b      	ldr	r3, [r3, #0]
 800962a:	4a2c      	ldr	r2, [pc, #176]	; (80096dc <HAL_TIM_PWM_Start+0x178>)
 800962c:	4293      	cmp	r3, r2
 800962e:	d101      	bne.n	8009634 <HAL_TIM_PWM_Start+0xd0>
 8009630:	2301      	movs	r3, #1
 8009632:	e000      	b.n	8009636 <HAL_TIM_PWM_Start+0xd2>
 8009634:	2300      	movs	r3, #0
 8009636:	2b00      	cmp	r3, #0
 8009638:	d007      	beq.n	800964a <HAL_TIM_PWM_Start+0xe6>
 800963a:	687b      	ldr	r3, [r7, #4]
 800963c:	681b      	ldr	r3, [r3, #0]
 800963e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8009640:	687b      	ldr	r3, [r7, #4]
 8009642:	681b      	ldr	r3, [r3, #0]
 8009644:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009648:	645a      	str	r2, [r3, #68]	; 0x44
 800964a:	687b      	ldr	r3, [r7, #4]
 800964c:	681b      	ldr	r3, [r3, #0]
 800964e:	4a22      	ldr	r2, [pc, #136]	; (80096d8 <HAL_TIM_PWM_Start+0x174>)
 8009650:	4293      	cmp	r3, r2
 8009652:	d022      	beq.n	800969a <HAL_TIM_PWM_Start+0x136>
 8009654:	687b      	ldr	r3, [r7, #4]
 8009656:	681b      	ldr	r3, [r3, #0]
 8009658:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800965c:	d01d      	beq.n	800969a <HAL_TIM_PWM_Start+0x136>
 800965e:	687b      	ldr	r3, [r7, #4]
 8009660:	681b      	ldr	r3, [r3, #0]
 8009662:	4a1f      	ldr	r2, [pc, #124]	; (80096e0 <HAL_TIM_PWM_Start+0x17c>)
 8009664:	4293      	cmp	r3, r2
 8009666:	d018      	beq.n	800969a <HAL_TIM_PWM_Start+0x136>
 8009668:	687b      	ldr	r3, [r7, #4]
 800966a:	681b      	ldr	r3, [r3, #0]
 800966c:	4a1d      	ldr	r2, [pc, #116]	; (80096e4 <HAL_TIM_PWM_Start+0x180>)
 800966e:	4293      	cmp	r3, r2
 8009670:	d013      	beq.n	800969a <HAL_TIM_PWM_Start+0x136>
 8009672:	687b      	ldr	r3, [r7, #4]
 8009674:	681b      	ldr	r3, [r3, #0]
 8009676:	4a1c      	ldr	r2, [pc, #112]	; (80096e8 <HAL_TIM_PWM_Start+0x184>)
 8009678:	4293      	cmp	r3, r2
 800967a:	d00e      	beq.n	800969a <HAL_TIM_PWM_Start+0x136>
 800967c:	687b      	ldr	r3, [r7, #4]
 800967e:	681b      	ldr	r3, [r3, #0]
 8009680:	4a16      	ldr	r2, [pc, #88]	; (80096dc <HAL_TIM_PWM_Start+0x178>)
 8009682:	4293      	cmp	r3, r2
 8009684:	d009      	beq.n	800969a <HAL_TIM_PWM_Start+0x136>
 8009686:	687b      	ldr	r3, [r7, #4]
 8009688:	681b      	ldr	r3, [r3, #0]
 800968a:	4a18      	ldr	r2, [pc, #96]	; (80096ec <HAL_TIM_PWM_Start+0x188>)
 800968c:	4293      	cmp	r3, r2
 800968e:	d004      	beq.n	800969a <HAL_TIM_PWM_Start+0x136>
 8009690:	687b      	ldr	r3, [r7, #4]
 8009692:	681b      	ldr	r3, [r3, #0]
 8009694:	4a16      	ldr	r2, [pc, #88]	; (80096f0 <HAL_TIM_PWM_Start+0x18c>)
 8009696:	4293      	cmp	r3, r2
 8009698:	d111      	bne.n	80096be <HAL_TIM_PWM_Start+0x15a>
 800969a:	687b      	ldr	r3, [r7, #4]
 800969c:	681b      	ldr	r3, [r3, #0]
 800969e:	689b      	ldr	r3, [r3, #8]
 80096a0:	f003 0307 	and.w	r3, r3, #7
 80096a4:	60fb      	str	r3, [r7, #12]
 80096a6:	68fb      	ldr	r3, [r7, #12]
 80096a8:	2b06      	cmp	r3, #6
 80096aa:	d010      	beq.n	80096ce <HAL_TIM_PWM_Start+0x16a>
 80096ac:	687b      	ldr	r3, [r7, #4]
 80096ae:	681b      	ldr	r3, [r3, #0]
 80096b0:	681a      	ldr	r2, [r3, #0]
 80096b2:	687b      	ldr	r3, [r7, #4]
 80096b4:	681b      	ldr	r3, [r3, #0]
 80096b6:	f042 0201 	orr.w	r2, r2, #1
 80096ba:	601a      	str	r2, [r3, #0]
 80096bc:	e007      	b.n	80096ce <HAL_TIM_PWM_Start+0x16a>
 80096be:	687b      	ldr	r3, [r7, #4]
 80096c0:	681b      	ldr	r3, [r3, #0]
 80096c2:	681a      	ldr	r2, [r3, #0]
 80096c4:	687b      	ldr	r3, [r7, #4]
 80096c6:	681b      	ldr	r3, [r3, #0]
 80096c8:	f042 0201 	orr.w	r2, r2, #1
 80096cc:	601a      	str	r2, [r3, #0]
 80096ce:	2300      	movs	r3, #0
 80096d0:	4618      	mov	r0, r3
 80096d2:	3710      	adds	r7, #16
 80096d4:	46bd      	mov	sp, r7
 80096d6:	bd80      	pop	{r7, pc}
 80096d8:	40010000 	.word	0x40010000
 80096dc:	40010400 	.word	0x40010400
 80096e0:	40000400 	.word	0x40000400
 80096e4:	40000800 	.word	0x40000800
 80096e8:	40000c00 	.word	0x40000c00
 80096ec:	40014000 	.word	0x40014000
 80096f0:	40001800 	.word	0x40001800

080096f4 <HAL_TIM_IC_Init>:
 80096f4:	b580      	push	{r7, lr}
 80096f6:	b082      	sub	sp, #8
 80096f8:	af00      	add	r7, sp, #0
 80096fa:	6078      	str	r0, [r7, #4]
 80096fc:	687b      	ldr	r3, [r7, #4]
 80096fe:	2b00      	cmp	r3, #0
 8009700:	d101      	bne.n	8009706 <HAL_TIM_IC_Init+0x12>
 8009702:	2301      	movs	r3, #1
 8009704:	e041      	b.n	800978a <HAL_TIM_IC_Init+0x96>
 8009706:	687b      	ldr	r3, [r7, #4]
 8009708:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800970c:	b2db      	uxtb	r3, r3
 800970e:	2b00      	cmp	r3, #0
 8009710:	d106      	bne.n	8009720 <HAL_TIM_IC_Init+0x2c>
 8009712:	687b      	ldr	r3, [r7, #4]
 8009714:	2200      	movs	r2, #0
 8009716:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800971a:	6878      	ldr	r0, [r7, #4]
 800971c:	f000 f839 	bl	8009792 <HAL_TIM_IC_MspInit>
 8009720:	687b      	ldr	r3, [r7, #4]
 8009722:	2202      	movs	r2, #2
 8009724:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009728:	687b      	ldr	r3, [r7, #4]
 800972a:	681a      	ldr	r2, [r3, #0]
 800972c:	687b      	ldr	r3, [r7, #4]
 800972e:	3304      	adds	r3, #4
 8009730:	4619      	mov	r1, r3
 8009732:	4610      	mov	r0, r2
 8009734:	f000 ff6a 	bl	800a60c <TIM_Base_SetConfig>
 8009738:	687b      	ldr	r3, [r7, #4]
 800973a:	2201      	movs	r2, #1
 800973c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8009740:	687b      	ldr	r3, [r7, #4]
 8009742:	2201      	movs	r2, #1
 8009744:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009748:	687b      	ldr	r3, [r7, #4]
 800974a:	2201      	movs	r2, #1
 800974c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8009750:	687b      	ldr	r3, [r7, #4]
 8009752:	2201      	movs	r2, #1
 8009754:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009758:	687b      	ldr	r3, [r7, #4]
 800975a:	2201      	movs	r2, #1
 800975c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8009760:	687b      	ldr	r3, [r7, #4]
 8009762:	2201      	movs	r2, #1
 8009764:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009768:	687b      	ldr	r3, [r7, #4]
 800976a:	2201      	movs	r2, #1
 800976c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8009770:	687b      	ldr	r3, [r7, #4]
 8009772:	2201      	movs	r2, #1
 8009774:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8009778:	687b      	ldr	r3, [r7, #4]
 800977a:	2201      	movs	r2, #1
 800977c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8009780:	687b      	ldr	r3, [r7, #4]
 8009782:	2201      	movs	r2, #1
 8009784:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009788:	2300      	movs	r3, #0
 800978a:	4618      	mov	r0, r3
 800978c:	3708      	adds	r7, #8
 800978e:	46bd      	mov	sp, r7
 8009790:	bd80      	pop	{r7, pc}

08009792 <HAL_TIM_IC_MspInit>:
 8009792:	b480      	push	{r7}
 8009794:	b083      	sub	sp, #12
 8009796:	af00      	add	r7, sp, #0
 8009798:	6078      	str	r0, [r7, #4]
 800979a:	bf00      	nop
 800979c:	370c      	adds	r7, #12
 800979e:	46bd      	mov	sp, r7
 80097a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097a4:	4770      	bx	lr
	...

080097a8 <HAL_TIM_IC_Start_DMA>:
 80097a8:	b580      	push	{r7, lr}
 80097aa:	b086      	sub	sp, #24
 80097ac:	af00      	add	r7, sp, #0
 80097ae:	60f8      	str	r0, [r7, #12]
 80097b0:	60b9      	str	r1, [r7, #8]
 80097b2:	607a      	str	r2, [r7, #4]
 80097b4:	807b      	strh	r3, [r7, #2]
 80097b6:	2300      	movs	r3, #0
 80097b8:	75fb      	strb	r3, [r7, #23]
 80097ba:	68bb      	ldr	r3, [r7, #8]
 80097bc:	2b00      	cmp	r3, #0
 80097be:	d104      	bne.n	80097ca <HAL_TIM_IC_Start_DMA+0x22>
 80097c0:	68fb      	ldr	r3, [r7, #12]
 80097c2:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80097c6:	b2db      	uxtb	r3, r3
 80097c8:	e013      	b.n	80097f2 <HAL_TIM_IC_Start_DMA+0x4a>
 80097ca:	68bb      	ldr	r3, [r7, #8]
 80097cc:	2b04      	cmp	r3, #4
 80097ce:	d104      	bne.n	80097da <HAL_TIM_IC_Start_DMA+0x32>
 80097d0:	68fb      	ldr	r3, [r7, #12]
 80097d2:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 80097d6:	b2db      	uxtb	r3, r3
 80097d8:	e00b      	b.n	80097f2 <HAL_TIM_IC_Start_DMA+0x4a>
 80097da:	68bb      	ldr	r3, [r7, #8]
 80097dc:	2b08      	cmp	r3, #8
 80097de:	d104      	bne.n	80097ea <HAL_TIM_IC_Start_DMA+0x42>
 80097e0:	68fb      	ldr	r3, [r7, #12]
 80097e2:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80097e6:	b2db      	uxtb	r3, r3
 80097e8:	e003      	b.n	80097f2 <HAL_TIM_IC_Start_DMA+0x4a>
 80097ea:	68fb      	ldr	r3, [r7, #12]
 80097ec:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80097f0:	b2db      	uxtb	r3, r3
 80097f2:	75bb      	strb	r3, [r7, #22]
 80097f4:	68bb      	ldr	r3, [r7, #8]
 80097f6:	2b00      	cmp	r3, #0
 80097f8:	d104      	bne.n	8009804 <HAL_TIM_IC_Start_DMA+0x5c>
 80097fa:	68fb      	ldr	r3, [r7, #12]
 80097fc:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8009800:	b2db      	uxtb	r3, r3
 8009802:	e013      	b.n	800982c <HAL_TIM_IC_Start_DMA+0x84>
 8009804:	68bb      	ldr	r3, [r7, #8]
 8009806:	2b04      	cmp	r3, #4
 8009808:	d104      	bne.n	8009814 <HAL_TIM_IC_Start_DMA+0x6c>
 800980a:	68fb      	ldr	r3, [r7, #12]
 800980c:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 8009810:	b2db      	uxtb	r3, r3
 8009812:	e00b      	b.n	800982c <HAL_TIM_IC_Start_DMA+0x84>
 8009814:	68bb      	ldr	r3, [r7, #8]
 8009816:	2b08      	cmp	r3, #8
 8009818:	d104      	bne.n	8009824 <HAL_TIM_IC_Start_DMA+0x7c>
 800981a:	68fb      	ldr	r3, [r7, #12]
 800981c:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8009820:	b2db      	uxtb	r3, r3
 8009822:	e003      	b.n	800982c <HAL_TIM_IC_Start_DMA+0x84>
 8009824:	68fb      	ldr	r3, [r7, #12]
 8009826:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800982a:	b2db      	uxtb	r3, r3
 800982c:	757b      	strb	r3, [r7, #21]
 800982e:	7dbb      	ldrb	r3, [r7, #22]
 8009830:	2b02      	cmp	r3, #2
 8009832:	d002      	beq.n	800983a <HAL_TIM_IC_Start_DMA+0x92>
 8009834:	7d7b      	ldrb	r3, [r7, #21]
 8009836:	2b02      	cmp	r3, #2
 8009838:	d101      	bne.n	800983e <HAL_TIM_IC_Start_DMA+0x96>
 800983a:	2302      	movs	r3, #2
 800983c:	e146      	b.n	8009acc <HAL_TIM_IC_Start_DMA+0x324>
 800983e:	7dbb      	ldrb	r3, [r7, #22]
 8009840:	2b01      	cmp	r3, #1
 8009842:	d143      	bne.n	80098cc <HAL_TIM_IC_Start_DMA+0x124>
 8009844:	7d7b      	ldrb	r3, [r7, #21]
 8009846:	2b01      	cmp	r3, #1
 8009848:	d140      	bne.n	80098cc <HAL_TIM_IC_Start_DMA+0x124>
 800984a:	687b      	ldr	r3, [r7, #4]
 800984c:	2b00      	cmp	r3, #0
 800984e:	d104      	bne.n	800985a <HAL_TIM_IC_Start_DMA+0xb2>
 8009850:	887b      	ldrh	r3, [r7, #2]
 8009852:	2b00      	cmp	r3, #0
 8009854:	d001      	beq.n	800985a <HAL_TIM_IC_Start_DMA+0xb2>
 8009856:	2301      	movs	r3, #1
 8009858:	e138      	b.n	8009acc <HAL_TIM_IC_Start_DMA+0x324>
 800985a:	68bb      	ldr	r3, [r7, #8]
 800985c:	2b00      	cmp	r3, #0
 800985e:	d104      	bne.n	800986a <HAL_TIM_IC_Start_DMA+0xc2>
 8009860:	68fb      	ldr	r3, [r7, #12]
 8009862:	2202      	movs	r2, #2
 8009864:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009868:	e013      	b.n	8009892 <HAL_TIM_IC_Start_DMA+0xea>
 800986a:	68bb      	ldr	r3, [r7, #8]
 800986c:	2b04      	cmp	r3, #4
 800986e:	d104      	bne.n	800987a <HAL_TIM_IC_Start_DMA+0xd2>
 8009870:	68fb      	ldr	r3, [r7, #12]
 8009872:	2202      	movs	r2, #2
 8009874:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8009878:	e00b      	b.n	8009892 <HAL_TIM_IC_Start_DMA+0xea>
 800987a:	68bb      	ldr	r3, [r7, #8]
 800987c:	2b08      	cmp	r3, #8
 800987e:	d104      	bne.n	800988a <HAL_TIM_IC_Start_DMA+0xe2>
 8009880:	68fb      	ldr	r3, [r7, #12]
 8009882:	2202      	movs	r2, #2
 8009884:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009888:	e003      	b.n	8009892 <HAL_TIM_IC_Start_DMA+0xea>
 800988a:	68fb      	ldr	r3, [r7, #12]
 800988c:	2202      	movs	r2, #2
 800988e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8009892:	68bb      	ldr	r3, [r7, #8]
 8009894:	2b00      	cmp	r3, #0
 8009896:	d104      	bne.n	80098a2 <HAL_TIM_IC_Start_DMA+0xfa>
 8009898:	68fb      	ldr	r3, [r7, #12]
 800989a:	2202      	movs	r2, #2
 800989c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80098a0:	e016      	b.n	80098d0 <HAL_TIM_IC_Start_DMA+0x128>
 80098a2:	68bb      	ldr	r3, [r7, #8]
 80098a4:	2b04      	cmp	r3, #4
 80098a6:	d104      	bne.n	80098b2 <HAL_TIM_IC_Start_DMA+0x10a>
 80098a8:	68fb      	ldr	r3, [r7, #12]
 80098aa:	2202      	movs	r2, #2
 80098ac:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80098b0:	e00e      	b.n	80098d0 <HAL_TIM_IC_Start_DMA+0x128>
 80098b2:	68bb      	ldr	r3, [r7, #8]
 80098b4:	2b08      	cmp	r3, #8
 80098b6:	d104      	bne.n	80098c2 <HAL_TIM_IC_Start_DMA+0x11a>
 80098b8:	68fb      	ldr	r3, [r7, #12]
 80098ba:	2202      	movs	r2, #2
 80098bc:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80098c0:	e006      	b.n	80098d0 <HAL_TIM_IC_Start_DMA+0x128>
 80098c2:	68fb      	ldr	r3, [r7, #12]
 80098c4:	2202      	movs	r2, #2
 80098c6:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80098ca:	e001      	b.n	80098d0 <HAL_TIM_IC_Start_DMA+0x128>
 80098cc:	2301      	movs	r3, #1
 80098ce:	e0fd      	b.n	8009acc <HAL_TIM_IC_Start_DMA+0x324>
 80098d0:	68fb      	ldr	r3, [r7, #12]
 80098d2:	681b      	ldr	r3, [r3, #0]
 80098d4:	2201      	movs	r2, #1
 80098d6:	68b9      	ldr	r1, [r7, #8]
 80098d8:	4618      	mov	r0, r3
 80098da:	f001 faab 	bl	800ae34 <TIM_CCxChannelCmd>
 80098de:	68bb      	ldr	r3, [r7, #8]
 80098e0:	2b0c      	cmp	r3, #12
 80098e2:	f200 80ad 	bhi.w	8009a40 <HAL_TIM_IC_Start_DMA+0x298>
 80098e6:	a201      	add	r2, pc, #4	; (adr r2, 80098ec <HAL_TIM_IC_Start_DMA+0x144>)
 80098e8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80098ec:	08009921 	.word	0x08009921
 80098f0:	08009a41 	.word	0x08009a41
 80098f4:	08009a41 	.word	0x08009a41
 80098f8:	08009a41 	.word	0x08009a41
 80098fc:	08009969 	.word	0x08009969
 8009900:	08009a41 	.word	0x08009a41
 8009904:	08009a41 	.word	0x08009a41
 8009908:	08009a41 	.word	0x08009a41
 800990c:	080099b1 	.word	0x080099b1
 8009910:	08009a41 	.word	0x08009a41
 8009914:	08009a41 	.word	0x08009a41
 8009918:	08009a41 	.word	0x08009a41
 800991c:	080099f9 	.word	0x080099f9
 8009920:	68fb      	ldr	r3, [r7, #12]
 8009922:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009924:	4a6b      	ldr	r2, [pc, #428]	; (8009ad4 <HAL_TIM_IC_Start_DMA+0x32c>)
 8009926:	63da      	str	r2, [r3, #60]	; 0x3c
 8009928:	68fb      	ldr	r3, [r7, #12]
 800992a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800992c:	4a6a      	ldr	r2, [pc, #424]	; (8009ad8 <HAL_TIM_IC_Start_DMA+0x330>)
 800992e:	641a      	str	r2, [r3, #64]	; 0x40
 8009930:	68fb      	ldr	r3, [r7, #12]
 8009932:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009934:	4a69      	ldr	r2, [pc, #420]	; (8009adc <HAL_TIM_IC_Start_DMA+0x334>)
 8009936:	64da      	str	r2, [r3, #76]	; 0x4c
 8009938:	68fb      	ldr	r3, [r7, #12]
 800993a:	6a58      	ldr	r0, [r3, #36]	; 0x24
 800993c:	68fb      	ldr	r3, [r7, #12]
 800993e:	681b      	ldr	r3, [r3, #0]
 8009940:	3334      	adds	r3, #52	; 0x34
 8009942:	4619      	mov	r1, r3
 8009944:	687a      	ldr	r2, [r7, #4]
 8009946:	887b      	ldrh	r3, [r7, #2]
 8009948:	f7fd ff68 	bl	800781c <HAL_DMA_Start_IT>
 800994c:	4603      	mov	r3, r0
 800994e:	2b00      	cmp	r3, #0
 8009950:	d001      	beq.n	8009956 <HAL_TIM_IC_Start_DMA+0x1ae>
 8009952:	2301      	movs	r3, #1
 8009954:	e0ba      	b.n	8009acc <HAL_TIM_IC_Start_DMA+0x324>
 8009956:	68fb      	ldr	r3, [r7, #12]
 8009958:	681b      	ldr	r3, [r3, #0]
 800995a:	68da      	ldr	r2, [r3, #12]
 800995c:	68fb      	ldr	r3, [r7, #12]
 800995e:	681b      	ldr	r3, [r3, #0]
 8009960:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009964:	60da      	str	r2, [r3, #12]
 8009966:	e06e      	b.n	8009a46 <HAL_TIM_IC_Start_DMA+0x29e>
 8009968:	68fb      	ldr	r3, [r7, #12]
 800996a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800996c:	4a59      	ldr	r2, [pc, #356]	; (8009ad4 <HAL_TIM_IC_Start_DMA+0x32c>)
 800996e:	63da      	str	r2, [r3, #60]	; 0x3c
 8009970:	68fb      	ldr	r3, [r7, #12]
 8009972:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009974:	4a58      	ldr	r2, [pc, #352]	; (8009ad8 <HAL_TIM_IC_Start_DMA+0x330>)
 8009976:	641a      	str	r2, [r3, #64]	; 0x40
 8009978:	68fb      	ldr	r3, [r7, #12]
 800997a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800997c:	4a57      	ldr	r2, [pc, #348]	; (8009adc <HAL_TIM_IC_Start_DMA+0x334>)
 800997e:	64da      	str	r2, [r3, #76]	; 0x4c
 8009980:	68fb      	ldr	r3, [r7, #12]
 8009982:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8009984:	68fb      	ldr	r3, [r7, #12]
 8009986:	681b      	ldr	r3, [r3, #0]
 8009988:	3338      	adds	r3, #56	; 0x38
 800998a:	4619      	mov	r1, r3
 800998c:	687a      	ldr	r2, [r7, #4]
 800998e:	887b      	ldrh	r3, [r7, #2]
 8009990:	f7fd ff44 	bl	800781c <HAL_DMA_Start_IT>
 8009994:	4603      	mov	r3, r0
 8009996:	2b00      	cmp	r3, #0
 8009998:	d001      	beq.n	800999e <HAL_TIM_IC_Start_DMA+0x1f6>
 800999a:	2301      	movs	r3, #1
 800999c:	e096      	b.n	8009acc <HAL_TIM_IC_Start_DMA+0x324>
 800999e:	68fb      	ldr	r3, [r7, #12]
 80099a0:	681b      	ldr	r3, [r3, #0]
 80099a2:	68da      	ldr	r2, [r3, #12]
 80099a4:	68fb      	ldr	r3, [r7, #12]
 80099a6:	681b      	ldr	r3, [r3, #0]
 80099a8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80099ac:	60da      	str	r2, [r3, #12]
 80099ae:	e04a      	b.n	8009a46 <HAL_TIM_IC_Start_DMA+0x29e>
 80099b0:	68fb      	ldr	r3, [r7, #12]
 80099b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80099b4:	4a47      	ldr	r2, [pc, #284]	; (8009ad4 <HAL_TIM_IC_Start_DMA+0x32c>)
 80099b6:	63da      	str	r2, [r3, #60]	; 0x3c
 80099b8:	68fb      	ldr	r3, [r7, #12]
 80099ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80099bc:	4a46      	ldr	r2, [pc, #280]	; (8009ad8 <HAL_TIM_IC_Start_DMA+0x330>)
 80099be:	641a      	str	r2, [r3, #64]	; 0x40
 80099c0:	68fb      	ldr	r3, [r7, #12]
 80099c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80099c4:	4a45      	ldr	r2, [pc, #276]	; (8009adc <HAL_TIM_IC_Start_DMA+0x334>)
 80099c6:	64da      	str	r2, [r3, #76]	; 0x4c
 80099c8:	68fb      	ldr	r3, [r7, #12]
 80099ca:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 80099cc:	68fb      	ldr	r3, [r7, #12]
 80099ce:	681b      	ldr	r3, [r3, #0]
 80099d0:	333c      	adds	r3, #60	; 0x3c
 80099d2:	4619      	mov	r1, r3
 80099d4:	687a      	ldr	r2, [r7, #4]
 80099d6:	887b      	ldrh	r3, [r7, #2]
 80099d8:	f7fd ff20 	bl	800781c <HAL_DMA_Start_IT>
 80099dc:	4603      	mov	r3, r0
 80099de:	2b00      	cmp	r3, #0
 80099e0:	d001      	beq.n	80099e6 <HAL_TIM_IC_Start_DMA+0x23e>
 80099e2:	2301      	movs	r3, #1
 80099e4:	e072      	b.n	8009acc <HAL_TIM_IC_Start_DMA+0x324>
 80099e6:	68fb      	ldr	r3, [r7, #12]
 80099e8:	681b      	ldr	r3, [r3, #0]
 80099ea:	68da      	ldr	r2, [r3, #12]
 80099ec:	68fb      	ldr	r3, [r7, #12]
 80099ee:	681b      	ldr	r3, [r3, #0]
 80099f0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80099f4:	60da      	str	r2, [r3, #12]
 80099f6:	e026      	b.n	8009a46 <HAL_TIM_IC_Start_DMA+0x29e>
 80099f8:	68fb      	ldr	r3, [r7, #12]
 80099fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80099fc:	4a35      	ldr	r2, [pc, #212]	; (8009ad4 <HAL_TIM_IC_Start_DMA+0x32c>)
 80099fe:	63da      	str	r2, [r3, #60]	; 0x3c
 8009a00:	68fb      	ldr	r3, [r7, #12]
 8009a02:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009a04:	4a34      	ldr	r2, [pc, #208]	; (8009ad8 <HAL_TIM_IC_Start_DMA+0x330>)
 8009a06:	641a      	str	r2, [r3, #64]	; 0x40
 8009a08:	68fb      	ldr	r3, [r7, #12]
 8009a0a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009a0c:	4a33      	ldr	r2, [pc, #204]	; (8009adc <HAL_TIM_IC_Start_DMA+0x334>)
 8009a0e:	64da      	str	r2, [r3, #76]	; 0x4c
 8009a10:	68fb      	ldr	r3, [r7, #12]
 8009a12:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8009a14:	68fb      	ldr	r3, [r7, #12]
 8009a16:	681b      	ldr	r3, [r3, #0]
 8009a18:	3340      	adds	r3, #64	; 0x40
 8009a1a:	4619      	mov	r1, r3
 8009a1c:	687a      	ldr	r2, [r7, #4]
 8009a1e:	887b      	ldrh	r3, [r7, #2]
 8009a20:	f7fd fefc 	bl	800781c <HAL_DMA_Start_IT>
 8009a24:	4603      	mov	r3, r0
 8009a26:	2b00      	cmp	r3, #0
 8009a28:	d001      	beq.n	8009a2e <HAL_TIM_IC_Start_DMA+0x286>
 8009a2a:	2301      	movs	r3, #1
 8009a2c:	e04e      	b.n	8009acc <HAL_TIM_IC_Start_DMA+0x324>
 8009a2e:	68fb      	ldr	r3, [r7, #12]
 8009a30:	681b      	ldr	r3, [r3, #0]
 8009a32:	68da      	ldr	r2, [r3, #12]
 8009a34:	68fb      	ldr	r3, [r7, #12]
 8009a36:	681b      	ldr	r3, [r3, #0]
 8009a38:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8009a3c:	60da      	str	r2, [r3, #12]
 8009a3e:	e002      	b.n	8009a46 <HAL_TIM_IC_Start_DMA+0x29e>
 8009a40:	2301      	movs	r3, #1
 8009a42:	75fb      	strb	r3, [r7, #23]
 8009a44:	bf00      	nop
 8009a46:	68fb      	ldr	r3, [r7, #12]
 8009a48:	681b      	ldr	r3, [r3, #0]
 8009a4a:	4a25      	ldr	r2, [pc, #148]	; (8009ae0 <HAL_TIM_IC_Start_DMA+0x338>)
 8009a4c:	4293      	cmp	r3, r2
 8009a4e:	d022      	beq.n	8009a96 <HAL_TIM_IC_Start_DMA+0x2ee>
 8009a50:	68fb      	ldr	r3, [r7, #12]
 8009a52:	681b      	ldr	r3, [r3, #0]
 8009a54:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009a58:	d01d      	beq.n	8009a96 <HAL_TIM_IC_Start_DMA+0x2ee>
 8009a5a:	68fb      	ldr	r3, [r7, #12]
 8009a5c:	681b      	ldr	r3, [r3, #0]
 8009a5e:	4a21      	ldr	r2, [pc, #132]	; (8009ae4 <HAL_TIM_IC_Start_DMA+0x33c>)
 8009a60:	4293      	cmp	r3, r2
 8009a62:	d018      	beq.n	8009a96 <HAL_TIM_IC_Start_DMA+0x2ee>
 8009a64:	68fb      	ldr	r3, [r7, #12]
 8009a66:	681b      	ldr	r3, [r3, #0]
 8009a68:	4a1f      	ldr	r2, [pc, #124]	; (8009ae8 <HAL_TIM_IC_Start_DMA+0x340>)
 8009a6a:	4293      	cmp	r3, r2
 8009a6c:	d013      	beq.n	8009a96 <HAL_TIM_IC_Start_DMA+0x2ee>
 8009a6e:	68fb      	ldr	r3, [r7, #12]
 8009a70:	681b      	ldr	r3, [r3, #0]
 8009a72:	4a1e      	ldr	r2, [pc, #120]	; (8009aec <HAL_TIM_IC_Start_DMA+0x344>)
 8009a74:	4293      	cmp	r3, r2
 8009a76:	d00e      	beq.n	8009a96 <HAL_TIM_IC_Start_DMA+0x2ee>
 8009a78:	68fb      	ldr	r3, [r7, #12]
 8009a7a:	681b      	ldr	r3, [r3, #0]
 8009a7c:	4a1c      	ldr	r2, [pc, #112]	; (8009af0 <HAL_TIM_IC_Start_DMA+0x348>)
 8009a7e:	4293      	cmp	r3, r2
 8009a80:	d009      	beq.n	8009a96 <HAL_TIM_IC_Start_DMA+0x2ee>
 8009a82:	68fb      	ldr	r3, [r7, #12]
 8009a84:	681b      	ldr	r3, [r3, #0]
 8009a86:	4a1b      	ldr	r2, [pc, #108]	; (8009af4 <HAL_TIM_IC_Start_DMA+0x34c>)
 8009a88:	4293      	cmp	r3, r2
 8009a8a:	d004      	beq.n	8009a96 <HAL_TIM_IC_Start_DMA+0x2ee>
 8009a8c:	68fb      	ldr	r3, [r7, #12]
 8009a8e:	681b      	ldr	r3, [r3, #0]
 8009a90:	4a19      	ldr	r2, [pc, #100]	; (8009af8 <HAL_TIM_IC_Start_DMA+0x350>)
 8009a92:	4293      	cmp	r3, r2
 8009a94:	d111      	bne.n	8009aba <HAL_TIM_IC_Start_DMA+0x312>
 8009a96:	68fb      	ldr	r3, [r7, #12]
 8009a98:	681b      	ldr	r3, [r3, #0]
 8009a9a:	689b      	ldr	r3, [r3, #8]
 8009a9c:	f003 0307 	and.w	r3, r3, #7
 8009aa0:	613b      	str	r3, [r7, #16]
 8009aa2:	693b      	ldr	r3, [r7, #16]
 8009aa4:	2b06      	cmp	r3, #6
 8009aa6:	d010      	beq.n	8009aca <HAL_TIM_IC_Start_DMA+0x322>
 8009aa8:	68fb      	ldr	r3, [r7, #12]
 8009aaa:	681b      	ldr	r3, [r3, #0]
 8009aac:	681a      	ldr	r2, [r3, #0]
 8009aae:	68fb      	ldr	r3, [r7, #12]
 8009ab0:	681b      	ldr	r3, [r3, #0]
 8009ab2:	f042 0201 	orr.w	r2, r2, #1
 8009ab6:	601a      	str	r2, [r3, #0]
 8009ab8:	e007      	b.n	8009aca <HAL_TIM_IC_Start_DMA+0x322>
 8009aba:	68fb      	ldr	r3, [r7, #12]
 8009abc:	681b      	ldr	r3, [r3, #0]
 8009abe:	681a      	ldr	r2, [r3, #0]
 8009ac0:	68fb      	ldr	r3, [r7, #12]
 8009ac2:	681b      	ldr	r3, [r3, #0]
 8009ac4:	f042 0201 	orr.w	r2, r2, #1
 8009ac8:	601a      	str	r2, [r3, #0]
 8009aca:	7dfb      	ldrb	r3, [r7, #23]
 8009acc:	4618      	mov	r0, r3
 8009ace:	3718      	adds	r7, #24
 8009ad0:	46bd      	mov	sp, r7
 8009ad2:	bd80      	pop	{r7, pc}
 8009ad4:	0800a4dd 	.word	0x0800a4dd
 8009ad8:	0800a5a5 	.word	0x0800a5a5
 8009adc:	0800a44b 	.word	0x0800a44b
 8009ae0:	40010000 	.word	0x40010000
 8009ae4:	40000400 	.word	0x40000400
 8009ae8:	40000800 	.word	0x40000800
 8009aec:	40000c00 	.word	0x40000c00
 8009af0:	40010400 	.word	0x40010400
 8009af4:	40014000 	.word	0x40014000
 8009af8:	40001800 	.word	0x40001800

08009afc <HAL_TIM_Encoder_Init>:
 8009afc:	b580      	push	{r7, lr}
 8009afe:	b086      	sub	sp, #24
 8009b00:	af00      	add	r7, sp, #0
 8009b02:	6078      	str	r0, [r7, #4]
 8009b04:	6039      	str	r1, [r7, #0]
 8009b06:	687b      	ldr	r3, [r7, #4]
 8009b08:	2b00      	cmp	r3, #0
 8009b0a:	d101      	bne.n	8009b10 <HAL_TIM_Encoder_Init+0x14>
 8009b0c:	2301      	movs	r3, #1
 8009b0e:	e097      	b.n	8009c40 <HAL_TIM_Encoder_Init+0x144>
 8009b10:	687b      	ldr	r3, [r7, #4]
 8009b12:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8009b16:	b2db      	uxtb	r3, r3
 8009b18:	2b00      	cmp	r3, #0
 8009b1a:	d106      	bne.n	8009b2a <HAL_TIM_Encoder_Init+0x2e>
 8009b1c:	687b      	ldr	r3, [r7, #4]
 8009b1e:	2200      	movs	r2, #0
 8009b20:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009b24:	6878      	ldr	r0, [r7, #4]
 8009b26:	f7fc fb31 	bl	800618c <HAL_TIM_Encoder_MspInit>
 8009b2a:	687b      	ldr	r3, [r7, #4]
 8009b2c:	2202      	movs	r2, #2
 8009b2e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009b32:	687b      	ldr	r3, [r7, #4]
 8009b34:	681b      	ldr	r3, [r3, #0]
 8009b36:	689b      	ldr	r3, [r3, #8]
 8009b38:	687a      	ldr	r2, [r7, #4]
 8009b3a:	6812      	ldr	r2, [r2, #0]
 8009b3c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8009b40:	f023 0307 	bic.w	r3, r3, #7
 8009b44:	6093      	str	r3, [r2, #8]
 8009b46:	687b      	ldr	r3, [r7, #4]
 8009b48:	681a      	ldr	r2, [r3, #0]
 8009b4a:	687b      	ldr	r3, [r7, #4]
 8009b4c:	3304      	adds	r3, #4
 8009b4e:	4619      	mov	r1, r3
 8009b50:	4610      	mov	r0, r2
 8009b52:	f000 fd5b 	bl	800a60c <TIM_Base_SetConfig>
 8009b56:	687b      	ldr	r3, [r7, #4]
 8009b58:	681b      	ldr	r3, [r3, #0]
 8009b5a:	689b      	ldr	r3, [r3, #8]
 8009b5c:	617b      	str	r3, [r7, #20]
 8009b5e:	687b      	ldr	r3, [r7, #4]
 8009b60:	681b      	ldr	r3, [r3, #0]
 8009b62:	699b      	ldr	r3, [r3, #24]
 8009b64:	613b      	str	r3, [r7, #16]
 8009b66:	687b      	ldr	r3, [r7, #4]
 8009b68:	681b      	ldr	r3, [r3, #0]
 8009b6a:	6a1b      	ldr	r3, [r3, #32]
 8009b6c:	60fb      	str	r3, [r7, #12]
 8009b6e:	683b      	ldr	r3, [r7, #0]
 8009b70:	681b      	ldr	r3, [r3, #0]
 8009b72:	697a      	ldr	r2, [r7, #20]
 8009b74:	4313      	orrs	r3, r2
 8009b76:	617b      	str	r3, [r7, #20]
 8009b78:	693b      	ldr	r3, [r7, #16]
 8009b7a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009b7e:	f023 0303 	bic.w	r3, r3, #3
 8009b82:	613b      	str	r3, [r7, #16]
 8009b84:	683b      	ldr	r3, [r7, #0]
 8009b86:	689a      	ldr	r2, [r3, #8]
 8009b88:	683b      	ldr	r3, [r7, #0]
 8009b8a:	699b      	ldr	r3, [r3, #24]
 8009b8c:	021b      	lsls	r3, r3, #8
 8009b8e:	4313      	orrs	r3, r2
 8009b90:	693a      	ldr	r2, [r7, #16]
 8009b92:	4313      	orrs	r3, r2
 8009b94:	613b      	str	r3, [r7, #16]
 8009b96:	693b      	ldr	r3, [r7, #16]
 8009b98:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8009b9c:	f023 030c 	bic.w	r3, r3, #12
 8009ba0:	613b      	str	r3, [r7, #16]
 8009ba2:	693b      	ldr	r3, [r7, #16]
 8009ba4:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8009ba8:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8009bac:	613b      	str	r3, [r7, #16]
 8009bae:	683b      	ldr	r3, [r7, #0]
 8009bb0:	68da      	ldr	r2, [r3, #12]
 8009bb2:	683b      	ldr	r3, [r7, #0]
 8009bb4:	69db      	ldr	r3, [r3, #28]
 8009bb6:	021b      	lsls	r3, r3, #8
 8009bb8:	4313      	orrs	r3, r2
 8009bba:	693a      	ldr	r2, [r7, #16]
 8009bbc:	4313      	orrs	r3, r2
 8009bbe:	613b      	str	r3, [r7, #16]
 8009bc0:	683b      	ldr	r3, [r7, #0]
 8009bc2:	691b      	ldr	r3, [r3, #16]
 8009bc4:	011a      	lsls	r2, r3, #4
 8009bc6:	683b      	ldr	r3, [r7, #0]
 8009bc8:	6a1b      	ldr	r3, [r3, #32]
 8009bca:	031b      	lsls	r3, r3, #12
 8009bcc:	4313      	orrs	r3, r2
 8009bce:	693a      	ldr	r2, [r7, #16]
 8009bd0:	4313      	orrs	r3, r2
 8009bd2:	613b      	str	r3, [r7, #16]
 8009bd4:	68fb      	ldr	r3, [r7, #12]
 8009bd6:	f023 0322 	bic.w	r3, r3, #34	; 0x22
 8009bda:	60fb      	str	r3, [r7, #12]
 8009bdc:	68fb      	ldr	r3, [r7, #12]
 8009bde:	f023 0388 	bic.w	r3, r3, #136	; 0x88
 8009be2:	60fb      	str	r3, [r7, #12]
 8009be4:	683b      	ldr	r3, [r7, #0]
 8009be6:	685a      	ldr	r2, [r3, #4]
 8009be8:	683b      	ldr	r3, [r7, #0]
 8009bea:	695b      	ldr	r3, [r3, #20]
 8009bec:	011b      	lsls	r3, r3, #4
 8009bee:	4313      	orrs	r3, r2
 8009bf0:	68fa      	ldr	r2, [r7, #12]
 8009bf2:	4313      	orrs	r3, r2
 8009bf4:	60fb      	str	r3, [r7, #12]
 8009bf6:	687b      	ldr	r3, [r7, #4]
 8009bf8:	681b      	ldr	r3, [r3, #0]
 8009bfa:	697a      	ldr	r2, [r7, #20]
 8009bfc:	609a      	str	r2, [r3, #8]
 8009bfe:	687b      	ldr	r3, [r7, #4]
 8009c00:	681b      	ldr	r3, [r3, #0]
 8009c02:	693a      	ldr	r2, [r7, #16]
 8009c04:	619a      	str	r2, [r3, #24]
 8009c06:	687b      	ldr	r3, [r7, #4]
 8009c08:	681b      	ldr	r3, [r3, #0]
 8009c0a:	68fa      	ldr	r2, [r7, #12]
 8009c0c:	621a      	str	r2, [r3, #32]
 8009c0e:	687b      	ldr	r3, [r7, #4]
 8009c10:	2201      	movs	r2, #1
 8009c12:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8009c16:	687b      	ldr	r3, [r7, #4]
 8009c18:	2201      	movs	r2, #1
 8009c1a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009c1e:	687b      	ldr	r3, [r7, #4]
 8009c20:	2201      	movs	r2, #1
 8009c22:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8009c26:	687b      	ldr	r3, [r7, #4]
 8009c28:	2201      	movs	r2, #1
 8009c2a:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009c2e:	687b      	ldr	r3, [r7, #4]
 8009c30:	2201      	movs	r2, #1
 8009c32:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8009c36:	687b      	ldr	r3, [r7, #4]
 8009c38:	2201      	movs	r2, #1
 8009c3a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009c3e:	2300      	movs	r3, #0
 8009c40:	4618      	mov	r0, r3
 8009c42:	3718      	adds	r7, #24
 8009c44:	46bd      	mov	sp, r7
 8009c46:	bd80      	pop	{r7, pc}

08009c48 <HAL_TIM_Encoder_Start>:
 8009c48:	b580      	push	{r7, lr}
 8009c4a:	b084      	sub	sp, #16
 8009c4c:	af00      	add	r7, sp, #0
 8009c4e:	6078      	str	r0, [r7, #4]
 8009c50:	6039      	str	r1, [r7, #0]
 8009c52:	687b      	ldr	r3, [r7, #4]
 8009c54:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8009c58:	73fb      	strb	r3, [r7, #15]
 8009c5a:	687b      	ldr	r3, [r7, #4]
 8009c5c:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8009c60:	73bb      	strb	r3, [r7, #14]
 8009c62:	687b      	ldr	r3, [r7, #4]
 8009c64:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8009c68:	737b      	strb	r3, [r7, #13]
 8009c6a:	687b      	ldr	r3, [r7, #4]
 8009c6c:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 8009c70:	733b      	strb	r3, [r7, #12]
 8009c72:	683b      	ldr	r3, [r7, #0]
 8009c74:	2b00      	cmp	r3, #0
 8009c76:	d110      	bne.n	8009c9a <HAL_TIM_Encoder_Start+0x52>
 8009c78:	7bfb      	ldrb	r3, [r7, #15]
 8009c7a:	2b01      	cmp	r3, #1
 8009c7c:	d102      	bne.n	8009c84 <HAL_TIM_Encoder_Start+0x3c>
 8009c7e:	7b7b      	ldrb	r3, [r7, #13]
 8009c80:	2b01      	cmp	r3, #1
 8009c82:	d001      	beq.n	8009c88 <HAL_TIM_Encoder_Start+0x40>
 8009c84:	2301      	movs	r3, #1
 8009c86:	e069      	b.n	8009d5c <HAL_TIM_Encoder_Start+0x114>
 8009c88:	687b      	ldr	r3, [r7, #4]
 8009c8a:	2202      	movs	r2, #2
 8009c8c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009c90:	687b      	ldr	r3, [r7, #4]
 8009c92:	2202      	movs	r2, #2
 8009c94:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009c98:	e031      	b.n	8009cfe <HAL_TIM_Encoder_Start+0xb6>
 8009c9a:	683b      	ldr	r3, [r7, #0]
 8009c9c:	2b04      	cmp	r3, #4
 8009c9e:	d110      	bne.n	8009cc2 <HAL_TIM_Encoder_Start+0x7a>
 8009ca0:	7bbb      	ldrb	r3, [r7, #14]
 8009ca2:	2b01      	cmp	r3, #1
 8009ca4:	d102      	bne.n	8009cac <HAL_TIM_Encoder_Start+0x64>
 8009ca6:	7b3b      	ldrb	r3, [r7, #12]
 8009ca8:	2b01      	cmp	r3, #1
 8009caa:	d001      	beq.n	8009cb0 <HAL_TIM_Encoder_Start+0x68>
 8009cac:	2301      	movs	r3, #1
 8009cae:	e055      	b.n	8009d5c <HAL_TIM_Encoder_Start+0x114>
 8009cb0:	687b      	ldr	r3, [r7, #4]
 8009cb2:	2202      	movs	r2, #2
 8009cb4:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8009cb8:	687b      	ldr	r3, [r7, #4]
 8009cba:	2202      	movs	r2, #2
 8009cbc:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8009cc0:	e01d      	b.n	8009cfe <HAL_TIM_Encoder_Start+0xb6>
 8009cc2:	7bfb      	ldrb	r3, [r7, #15]
 8009cc4:	2b01      	cmp	r3, #1
 8009cc6:	d108      	bne.n	8009cda <HAL_TIM_Encoder_Start+0x92>
 8009cc8:	7bbb      	ldrb	r3, [r7, #14]
 8009cca:	2b01      	cmp	r3, #1
 8009ccc:	d105      	bne.n	8009cda <HAL_TIM_Encoder_Start+0x92>
 8009cce:	7b7b      	ldrb	r3, [r7, #13]
 8009cd0:	2b01      	cmp	r3, #1
 8009cd2:	d102      	bne.n	8009cda <HAL_TIM_Encoder_Start+0x92>
 8009cd4:	7b3b      	ldrb	r3, [r7, #12]
 8009cd6:	2b01      	cmp	r3, #1
 8009cd8:	d001      	beq.n	8009cde <HAL_TIM_Encoder_Start+0x96>
 8009cda:	2301      	movs	r3, #1
 8009cdc:	e03e      	b.n	8009d5c <HAL_TIM_Encoder_Start+0x114>
 8009cde:	687b      	ldr	r3, [r7, #4]
 8009ce0:	2202      	movs	r2, #2
 8009ce2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009ce6:	687b      	ldr	r3, [r7, #4]
 8009ce8:	2202      	movs	r2, #2
 8009cea:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8009cee:	687b      	ldr	r3, [r7, #4]
 8009cf0:	2202      	movs	r2, #2
 8009cf2:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009cf6:	687b      	ldr	r3, [r7, #4]
 8009cf8:	2202      	movs	r2, #2
 8009cfa:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8009cfe:	683b      	ldr	r3, [r7, #0]
 8009d00:	2b00      	cmp	r3, #0
 8009d02:	d003      	beq.n	8009d0c <HAL_TIM_Encoder_Start+0xc4>
 8009d04:	683b      	ldr	r3, [r7, #0]
 8009d06:	2b04      	cmp	r3, #4
 8009d08:	d008      	beq.n	8009d1c <HAL_TIM_Encoder_Start+0xd4>
 8009d0a:	e00f      	b.n	8009d2c <HAL_TIM_Encoder_Start+0xe4>
 8009d0c:	687b      	ldr	r3, [r7, #4]
 8009d0e:	681b      	ldr	r3, [r3, #0]
 8009d10:	2201      	movs	r2, #1
 8009d12:	2100      	movs	r1, #0
 8009d14:	4618      	mov	r0, r3
 8009d16:	f001 f88d 	bl	800ae34 <TIM_CCxChannelCmd>
 8009d1a:	e016      	b.n	8009d4a <HAL_TIM_Encoder_Start+0x102>
 8009d1c:	687b      	ldr	r3, [r7, #4]
 8009d1e:	681b      	ldr	r3, [r3, #0]
 8009d20:	2201      	movs	r2, #1
 8009d22:	2104      	movs	r1, #4
 8009d24:	4618      	mov	r0, r3
 8009d26:	f001 f885 	bl	800ae34 <TIM_CCxChannelCmd>
 8009d2a:	e00e      	b.n	8009d4a <HAL_TIM_Encoder_Start+0x102>
 8009d2c:	687b      	ldr	r3, [r7, #4]
 8009d2e:	681b      	ldr	r3, [r3, #0]
 8009d30:	2201      	movs	r2, #1
 8009d32:	2100      	movs	r1, #0
 8009d34:	4618      	mov	r0, r3
 8009d36:	f001 f87d 	bl	800ae34 <TIM_CCxChannelCmd>
 8009d3a:	687b      	ldr	r3, [r7, #4]
 8009d3c:	681b      	ldr	r3, [r3, #0]
 8009d3e:	2201      	movs	r2, #1
 8009d40:	2104      	movs	r1, #4
 8009d42:	4618      	mov	r0, r3
 8009d44:	f001 f876 	bl	800ae34 <TIM_CCxChannelCmd>
 8009d48:	bf00      	nop
 8009d4a:	687b      	ldr	r3, [r7, #4]
 8009d4c:	681b      	ldr	r3, [r3, #0]
 8009d4e:	681a      	ldr	r2, [r3, #0]
 8009d50:	687b      	ldr	r3, [r7, #4]
 8009d52:	681b      	ldr	r3, [r3, #0]
 8009d54:	f042 0201 	orr.w	r2, r2, #1
 8009d58:	601a      	str	r2, [r3, #0]
 8009d5a:	2300      	movs	r3, #0
 8009d5c:	4618      	mov	r0, r3
 8009d5e:	3710      	adds	r7, #16
 8009d60:	46bd      	mov	sp, r7
 8009d62:	bd80      	pop	{r7, pc}

08009d64 <HAL_TIM_IRQHandler>:
 8009d64:	b580      	push	{r7, lr}
 8009d66:	b082      	sub	sp, #8
 8009d68:	af00      	add	r7, sp, #0
 8009d6a:	6078      	str	r0, [r7, #4]
 8009d6c:	687b      	ldr	r3, [r7, #4]
 8009d6e:	681b      	ldr	r3, [r3, #0]
 8009d70:	691b      	ldr	r3, [r3, #16]
 8009d72:	f003 0302 	and.w	r3, r3, #2
 8009d76:	2b02      	cmp	r3, #2
 8009d78:	d122      	bne.n	8009dc0 <HAL_TIM_IRQHandler+0x5c>
 8009d7a:	687b      	ldr	r3, [r7, #4]
 8009d7c:	681b      	ldr	r3, [r3, #0]
 8009d7e:	68db      	ldr	r3, [r3, #12]
 8009d80:	f003 0302 	and.w	r3, r3, #2
 8009d84:	2b02      	cmp	r3, #2
 8009d86:	d11b      	bne.n	8009dc0 <HAL_TIM_IRQHandler+0x5c>
 8009d88:	687b      	ldr	r3, [r7, #4]
 8009d8a:	681b      	ldr	r3, [r3, #0]
 8009d8c:	f06f 0202 	mvn.w	r2, #2
 8009d90:	611a      	str	r2, [r3, #16]
 8009d92:	687b      	ldr	r3, [r7, #4]
 8009d94:	2201      	movs	r2, #1
 8009d96:	771a      	strb	r2, [r3, #28]
 8009d98:	687b      	ldr	r3, [r7, #4]
 8009d9a:	681b      	ldr	r3, [r3, #0]
 8009d9c:	699b      	ldr	r3, [r3, #24]
 8009d9e:	f003 0303 	and.w	r3, r3, #3
 8009da2:	2b00      	cmp	r3, #0
 8009da4:	d003      	beq.n	8009dae <HAL_TIM_IRQHandler+0x4a>
 8009da6:	6878      	ldr	r0, [r7, #4]
 8009da8:	f000 fb1d 	bl	800a3e6 <HAL_TIM_IC_CaptureCallback>
 8009dac:	e005      	b.n	8009dba <HAL_TIM_IRQHandler+0x56>
 8009dae:	6878      	ldr	r0, [r7, #4]
 8009db0:	f000 fb0f 	bl	800a3d2 <HAL_TIM_OC_DelayElapsedCallback>
 8009db4:	6878      	ldr	r0, [r7, #4]
 8009db6:	f000 fb2a 	bl	800a40e <HAL_TIM_PWM_PulseFinishedCallback>
 8009dba:	687b      	ldr	r3, [r7, #4]
 8009dbc:	2200      	movs	r2, #0
 8009dbe:	771a      	strb	r2, [r3, #28]
 8009dc0:	687b      	ldr	r3, [r7, #4]
 8009dc2:	681b      	ldr	r3, [r3, #0]
 8009dc4:	691b      	ldr	r3, [r3, #16]
 8009dc6:	f003 0304 	and.w	r3, r3, #4
 8009dca:	2b04      	cmp	r3, #4
 8009dcc:	d122      	bne.n	8009e14 <HAL_TIM_IRQHandler+0xb0>
 8009dce:	687b      	ldr	r3, [r7, #4]
 8009dd0:	681b      	ldr	r3, [r3, #0]
 8009dd2:	68db      	ldr	r3, [r3, #12]
 8009dd4:	f003 0304 	and.w	r3, r3, #4
 8009dd8:	2b04      	cmp	r3, #4
 8009dda:	d11b      	bne.n	8009e14 <HAL_TIM_IRQHandler+0xb0>
 8009ddc:	687b      	ldr	r3, [r7, #4]
 8009dde:	681b      	ldr	r3, [r3, #0]
 8009de0:	f06f 0204 	mvn.w	r2, #4
 8009de4:	611a      	str	r2, [r3, #16]
 8009de6:	687b      	ldr	r3, [r7, #4]
 8009de8:	2202      	movs	r2, #2
 8009dea:	771a      	strb	r2, [r3, #28]
 8009dec:	687b      	ldr	r3, [r7, #4]
 8009dee:	681b      	ldr	r3, [r3, #0]
 8009df0:	699b      	ldr	r3, [r3, #24]
 8009df2:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009df6:	2b00      	cmp	r3, #0
 8009df8:	d003      	beq.n	8009e02 <HAL_TIM_IRQHandler+0x9e>
 8009dfa:	6878      	ldr	r0, [r7, #4]
 8009dfc:	f000 faf3 	bl	800a3e6 <HAL_TIM_IC_CaptureCallback>
 8009e00:	e005      	b.n	8009e0e <HAL_TIM_IRQHandler+0xaa>
 8009e02:	6878      	ldr	r0, [r7, #4]
 8009e04:	f000 fae5 	bl	800a3d2 <HAL_TIM_OC_DelayElapsedCallback>
 8009e08:	6878      	ldr	r0, [r7, #4]
 8009e0a:	f000 fb00 	bl	800a40e <HAL_TIM_PWM_PulseFinishedCallback>
 8009e0e:	687b      	ldr	r3, [r7, #4]
 8009e10:	2200      	movs	r2, #0
 8009e12:	771a      	strb	r2, [r3, #28]
 8009e14:	687b      	ldr	r3, [r7, #4]
 8009e16:	681b      	ldr	r3, [r3, #0]
 8009e18:	691b      	ldr	r3, [r3, #16]
 8009e1a:	f003 0308 	and.w	r3, r3, #8
 8009e1e:	2b08      	cmp	r3, #8
 8009e20:	d122      	bne.n	8009e68 <HAL_TIM_IRQHandler+0x104>
 8009e22:	687b      	ldr	r3, [r7, #4]
 8009e24:	681b      	ldr	r3, [r3, #0]
 8009e26:	68db      	ldr	r3, [r3, #12]
 8009e28:	f003 0308 	and.w	r3, r3, #8
 8009e2c:	2b08      	cmp	r3, #8
 8009e2e:	d11b      	bne.n	8009e68 <HAL_TIM_IRQHandler+0x104>
 8009e30:	687b      	ldr	r3, [r7, #4]
 8009e32:	681b      	ldr	r3, [r3, #0]
 8009e34:	f06f 0208 	mvn.w	r2, #8
 8009e38:	611a      	str	r2, [r3, #16]
 8009e3a:	687b      	ldr	r3, [r7, #4]
 8009e3c:	2204      	movs	r2, #4
 8009e3e:	771a      	strb	r2, [r3, #28]
 8009e40:	687b      	ldr	r3, [r7, #4]
 8009e42:	681b      	ldr	r3, [r3, #0]
 8009e44:	69db      	ldr	r3, [r3, #28]
 8009e46:	f003 0303 	and.w	r3, r3, #3
 8009e4a:	2b00      	cmp	r3, #0
 8009e4c:	d003      	beq.n	8009e56 <HAL_TIM_IRQHandler+0xf2>
 8009e4e:	6878      	ldr	r0, [r7, #4]
 8009e50:	f000 fac9 	bl	800a3e6 <HAL_TIM_IC_CaptureCallback>
 8009e54:	e005      	b.n	8009e62 <HAL_TIM_IRQHandler+0xfe>
 8009e56:	6878      	ldr	r0, [r7, #4]
 8009e58:	f000 fabb 	bl	800a3d2 <HAL_TIM_OC_DelayElapsedCallback>
 8009e5c:	6878      	ldr	r0, [r7, #4]
 8009e5e:	f000 fad6 	bl	800a40e <HAL_TIM_PWM_PulseFinishedCallback>
 8009e62:	687b      	ldr	r3, [r7, #4]
 8009e64:	2200      	movs	r2, #0
 8009e66:	771a      	strb	r2, [r3, #28]
 8009e68:	687b      	ldr	r3, [r7, #4]
 8009e6a:	681b      	ldr	r3, [r3, #0]
 8009e6c:	691b      	ldr	r3, [r3, #16]
 8009e6e:	f003 0310 	and.w	r3, r3, #16
 8009e72:	2b10      	cmp	r3, #16
 8009e74:	d122      	bne.n	8009ebc <HAL_TIM_IRQHandler+0x158>
 8009e76:	687b      	ldr	r3, [r7, #4]
 8009e78:	681b      	ldr	r3, [r3, #0]
 8009e7a:	68db      	ldr	r3, [r3, #12]
 8009e7c:	f003 0310 	and.w	r3, r3, #16
 8009e80:	2b10      	cmp	r3, #16
 8009e82:	d11b      	bne.n	8009ebc <HAL_TIM_IRQHandler+0x158>
 8009e84:	687b      	ldr	r3, [r7, #4]
 8009e86:	681b      	ldr	r3, [r3, #0]
 8009e88:	f06f 0210 	mvn.w	r2, #16
 8009e8c:	611a      	str	r2, [r3, #16]
 8009e8e:	687b      	ldr	r3, [r7, #4]
 8009e90:	2208      	movs	r2, #8
 8009e92:	771a      	strb	r2, [r3, #28]
 8009e94:	687b      	ldr	r3, [r7, #4]
 8009e96:	681b      	ldr	r3, [r3, #0]
 8009e98:	69db      	ldr	r3, [r3, #28]
 8009e9a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009e9e:	2b00      	cmp	r3, #0
 8009ea0:	d003      	beq.n	8009eaa <HAL_TIM_IRQHandler+0x146>
 8009ea2:	6878      	ldr	r0, [r7, #4]
 8009ea4:	f000 fa9f 	bl	800a3e6 <HAL_TIM_IC_CaptureCallback>
 8009ea8:	e005      	b.n	8009eb6 <HAL_TIM_IRQHandler+0x152>
 8009eaa:	6878      	ldr	r0, [r7, #4]
 8009eac:	f000 fa91 	bl	800a3d2 <HAL_TIM_OC_DelayElapsedCallback>
 8009eb0:	6878      	ldr	r0, [r7, #4]
 8009eb2:	f000 faac 	bl	800a40e <HAL_TIM_PWM_PulseFinishedCallback>
 8009eb6:	687b      	ldr	r3, [r7, #4]
 8009eb8:	2200      	movs	r2, #0
 8009eba:	771a      	strb	r2, [r3, #28]
 8009ebc:	687b      	ldr	r3, [r7, #4]
 8009ebe:	681b      	ldr	r3, [r3, #0]
 8009ec0:	691b      	ldr	r3, [r3, #16]
 8009ec2:	f003 0301 	and.w	r3, r3, #1
 8009ec6:	2b01      	cmp	r3, #1
 8009ec8:	d10e      	bne.n	8009ee8 <HAL_TIM_IRQHandler+0x184>
 8009eca:	687b      	ldr	r3, [r7, #4]
 8009ecc:	681b      	ldr	r3, [r3, #0]
 8009ece:	68db      	ldr	r3, [r3, #12]
 8009ed0:	f003 0301 	and.w	r3, r3, #1
 8009ed4:	2b01      	cmp	r3, #1
 8009ed6:	d107      	bne.n	8009ee8 <HAL_TIM_IRQHandler+0x184>
 8009ed8:	687b      	ldr	r3, [r7, #4]
 8009eda:	681b      	ldr	r3, [r3, #0]
 8009edc:	f06f 0201 	mvn.w	r2, #1
 8009ee0:	611a      	str	r2, [r3, #16]
 8009ee2:	6878      	ldr	r0, [r7, #4]
 8009ee4:	f000 fa6b 	bl	800a3be <HAL_TIM_PeriodElapsedCallback>
 8009ee8:	687b      	ldr	r3, [r7, #4]
 8009eea:	681b      	ldr	r3, [r3, #0]
 8009eec:	691b      	ldr	r3, [r3, #16]
 8009eee:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009ef2:	2b80      	cmp	r3, #128	; 0x80
 8009ef4:	d10e      	bne.n	8009f14 <HAL_TIM_IRQHandler+0x1b0>
 8009ef6:	687b      	ldr	r3, [r7, #4]
 8009ef8:	681b      	ldr	r3, [r3, #0]
 8009efa:	68db      	ldr	r3, [r3, #12]
 8009efc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009f00:	2b80      	cmp	r3, #128	; 0x80
 8009f02:	d107      	bne.n	8009f14 <HAL_TIM_IRQHandler+0x1b0>
 8009f04:	687b      	ldr	r3, [r7, #4]
 8009f06:	681b      	ldr	r3, [r3, #0]
 8009f08:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8009f0c:	611a      	str	r2, [r3, #16]
 8009f0e:	6878      	ldr	r0, [r7, #4]
 8009f10:	f001 f88e 	bl	800b030 <HAL_TIMEx_BreakCallback>
 8009f14:	687b      	ldr	r3, [r7, #4]
 8009f16:	681b      	ldr	r3, [r3, #0]
 8009f18:	691b      	ldr	r3, [r3, #16]
 8009f1a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009f1e:	2b40      	cmp	r3, #64	; 0x40
 8009f20:	d10e      	bne.n	8009f40 <HAL_TIM_IRQHandler+0x1dc>
 8009f22:	687b      	ldr	r3, [r7, #4]
 8009f24:	681b      	ldr	r3, [r3, #0]
 8009f26:	68db      	ldr	r3, [r3, #12]
 8009f28:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009f2c:	2b40      	cmp	r3, #64	; 0x40
 8009f2e:	d107      	bne.n	8009f40 <HAL_TIM_IRQHandler+0x1dc>
 8009f30:	687b      	ldr	r3, [r7, #4]
 8009f32:	681b      	ldr	r3, [r3, #0]
 8009f34:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8009f38:	611a      	str	r2, [r3, #16]
 8009f3a:	6878      	ldr	r0, [r7, #4]
 8009f3c:	f000 fa71 	bl	800a422 <HAL_TIM_TriggerCallback>
 8009f40:	687b      	ldr	r3, [r7, #4]
 8009f42:	681b      	ldr	r3, [r3, #0]
 8009f44:	691b      	ldr	r3, [r3, #16]
 8009f46:	f003 0320 	and.w	r3, r3, #32
 8009f4a:	2b20      	cmp	r3, #32
 8009f4c:	d10e      	bne.n	8009f6c <HAL_TIM_IRQHandler+0x208>
 8009f4e:	687b      	ldr	r3, [r7, #4]
 8009f50:	681b      	ldr	r3, [r3, #0]
 8009f52:	68db      	ldr	r3, [r3, #12]
 8009f54:	f003 0320 	and.w	r3, r3, #32
 8009f58:	2b20      	cmp	r3, #32
 8009f5a:	d107      	bne.n	8009f6c <HAL_TIM_IRQHandler+0x208>
 8009f5c:	687b      	ldr	r3, [r7, #4]
 8009f5e:	681b      	ldr	r3, [r3, #0]
 8009f60:	f06f 0220 	mvn.w	r2, #32
 8009f64:	611a      	str	r2, [r3, #16]
 8009f66:	6878      	ldr	r0, [r7, #4]
 8009f68:	f001 f858 	bl	800b01c <HAL_TIMEx_CommutCallback>
 8009f6c:	bf00      	nop
 8009f6e:	3708      	adds	r7, #8
 8009f70:	46bd      	mov	sp, r7
 8009f72:	bd80      	pop	{r7, pc}

08009f74 <HAL_TIM_IC_ConfigChannel>:
 8009f74:	b580      	push	{r7, lr}
 8009f76:	b086      	sub	sp, #24
 8009f78:	af00      	add	r7, sp, #0
 8009f7a:	60f8      	str	r0, [r7, #12]
 8009f7c:	60b9      	str	r1, [r7, #8]
 8009f7e:	607a      	str	r2, [r7, #4]
 8009f80:	2300      	movs	r3, #0
 8009f82:	75fb      	strb	r3, [r7, #23]
 8009f84:	68fb      	ldr	r3, [r7, #12]
 8009f86:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8009f8a:	2b01      	cmp	r3, #1
 8009f8c:	d101      	bne.n	8009f92 <HAL_TIM_IC_ConfigChannel+0x1e>
 8009f8e:	2302      	movs	r3, #2
 8009f90:	e088      	b.n	800a0a4 <HAL_TIM_IC_ConfigChannel+0x130>
 8009f92:	68fb      	ldr	r3, [r7, #12]
 8009f94:	2201      	movs	r2, #1
 8009f96:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009f9a:	687b      	ldr	r3, [r7, #4]
 8009f9c:	2b00      	cmp	r3, #0
 8009f9e:	d11b      	bne.n	8009fd8 <HAL_TIM_IC_ConfigChannel+0x64>
 8009fa0:	68fb      	ldr	r3, [r7, #12]
 8009fa2:	6818      	ldr	r0, [r3, #0]
 8009fa4:	68bb      	ldr	r3, [r7, #8]
 8009fa6:	6819      	ldr	r1, [r3, #0]
 8009fa8:	68bb      	ldr	r3, [r7, #8]
 8009faa:	685a      	ldr	r2, [r3, #4]
 8009fac:	68bb      	ldr	r3, [r7, #8]
 8009fae:	68db      	ldr	r3, [r3, #12]
 8009fb0:	f000 fd7c 	bl	800aaac <TIM_TI1_SetConfig>
 8009fb4:	68fb      	ldr	r3, [r7, #12]
 8009fb6:	681b      	ldr	r3, [r3, #0]
 8009fb8:	699a      	ldr	r2, [r3, #24]
 8009fba:	68fb      	ldr	r3, [r7, #12]
 8009fbc:	681b      	ldr	r3, [r3, #0]
 8009fbe:	f022 020c 	bic.w	r2, r2, #12
 8009fc2:	619a      	str	r2, [r3, #24]
 8009fc4:	68fb      	ldr	r3, [r7, #12]
 8009fc6:	681b      	ldr	r3, [r3, #0]
 8009fc8:	6999      	ldr	r1, [r3, #24]
 8009fca:	68bb      	ldr	r3, [r7, #8]
 8009fcc:	689a      	ldr	r2, [r3, #8]
 8009fce:	68fb      	ldr	r3, [r7, #12]
 8009fd0:	681b      	ldr	r3, [r3, #0]
 8009fd2:	430a      	orrs	r2, r1
 8009fd4:	619a      	str	r2, [r3, #24]
 8009fd6:	e060      	b.n	800a09a <HAL_TIM_IC_ConfigChannel+0x126>
 8009fd8:	687b      	ldr	r3, [r7, #4]
 8009fda:	2b04      	cmp	r3, #4
 8009fdc:	d11c      	bne.n	800a018 <HAL_TIM_IC_ConfigChannel+0xa4>
 8009fde:	68fb      	ldr	r3, [r7, #12]
 8009fe0:	6818      	ldr	r0, [r3, #0]
 8009fe2:	68bb      	ldr	r3, [r7, #8]
 8009fe4:	6819      	ldr	r1, [r3, #0]
 8009fe6:	68bb      	ldr	r3, [r7, #8]
 8009fe8:	685a      	ldr	r2, [r3, #4]
 8009fea:	68bb      	ldr	r3, [r7, #8]
 8009fec:	68db      	ldr	r3, [r3, #12]
 8009fee:	f000 fe00 	bl	800abf2 <TIM_TI2_SetConfig>
 8009ff2:	68fb      	ldr	r3, [r7, #12]
 8009ff4:	681b      	ldr	r3, [r3, #0]
 8009ff6:	699a      	ldr	r2, [r3, #24]
 8009ff8:	68fb      	ldr	r3, [r7, #12]
 8009ffa:	681b      	ldr	r3, [r3, #0]
 8009ffc:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 800a000:	619a      	str	r2, [r3, #24]
 800a002:	68fb      	ldr	r3, [r7, #12]
 800a004:	681b      	ldr	r3, [r3, #0]
 800a006:	6999      	ldr	r1, [r3, #24]
 800a008:	68bb      	ldr	r3, [r7, #8]
 800a00a:	689b      	ldr	r3, [r3, #8]
 800a00c:	021a      	lsls	r2, r3, #8
 800a00e:	68fb      	ldr	r3, [r7, #12]
 800a010:	681b      	ldr	r3, [r3, #0]
 800a012:	430a      	orrs	r2, r1
 800a014:	619a      	str	r2, [r3, #24]
 800a016:	e040      	b.n	800a09a <HAL_TIM_IC_ConfigChannel+0x126>
 800a018:	687b      	ldr	r3, [r7, #4]
 800a01a:	2b08      	cmp	r3, #8
 800a01c:	d11b      	bne.n	800a056 <HAL_TIM_IC_ConfigChannel+0xe2>
 800a01e:	68fb      	ldr	r3, [r7, #12]
 800a020:	6818      	ldr	r0, [r3, #0]
 800a022:	68bb      	ldr	r3, [r7, #8]
 800a024:	6819      	ldr	r1, [r3, #0]
 800a026:	68bb      	ldr	r3, [r7, #8]
 800a028:	685a      	ldr	r2, [r3, #4]
 800a02a:	68bb      	ldr	r3, [r7, #8]
 800a02c:	68db      	ldr	r3, [r3, #12]
 800a02e:	f000 fe4d 	bl	800accc <TIM_TI3_SetConfig>
 800a032:	68fb      	ldr	r3, [r7, #12]
 800a034:	681b      	ldr	r3, [r3, #0]
 800a036:	69da      	ldr	r2, [r3, #28]
 800a038:	68fb      	ldr	r3, [r7, #12]
 800a03a:	681b      	ldr	r3, [r3, #0]
 800a03c:	f022 020c 	bic.w	r2, r2, #12
 800a040:	61da      	str	r2, [r3, #28]
 800a042:	68fb      	ldr	r3, [r7, #12]
 800a044:	681b      	ldr	r3, [r3, #0]
 800a046:	69d9      	ldr	r1, [r3, #28]
 800a048:	68bb      	ldr	r3, [r7, #8]
 800a04a:	689a      	ldr	r2, [r3, #8]
 800a04c:	68fb      	ldr	r3, [r7, #12]
 800a04e:	681b      	ldr	r3, [r3, #0]
 800a050:	430a      	orrs	r2, r1
 800a052:	61da      	str	r2, [r3, #28]
 800a054:	e021      	b.n	800a09a <HAL_TIM_IC_ConfigChannel+0x126>
 800a056:	687b      	ldr	r3, [r7, #4]
 800a058:	2b0c      	cmp	r3, #12
 800a05a:	d11c      	bne.n	800a096 <HAL_TIM_IC_ConfigChannel+0x122>
 800a05c:	68fb      	ldr	r3, [r7, #12]
 800a05e:	6818      	ldr	r0, [r3, #0]
 800a060:	68bb      	ldr	r3, [r7, #8]
 800a062:	6819      	ldr	r1, [r3, #0]
 800a064:	68bb      	ldr	r3, [r7, #8]
 800a066:	685a      	ldr	r2, [r3, #4]
 800a068:	68bb      	ldr	r3, [r7, #8]
 800a06a:	68db      	ldr	r3, [r3, #12]
 800a06c:	f000 fe6a 	bl	800ad44 <TIM_TI4_SetConfig>
 800a070:	68fb      	ldr	r3, [r7, #12]
 800a072:	681b      	ldr	r3, [r3, #0]
 800a074:	69da      	ldr	r2, [r3, #28]
 800a076:	68fb      	ldr	r3, [r7, #12]
 800a078:	681b      	ldr	r3, [r3, #0]
 800a07a:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 800a07e:	61da      	str	r2, [r3, #28]
 800a080:	68fb      	ldr	r3, [r7, #12]
 800a082:	681b      	ldr	r3, [r3, #0]
 800a084:	69d9      	ldr	r1, [r3, #28]
 800a086:	68bb      	ldr	r3, [r7, #8]
 800a088:	689b      	ldr	r3, [r3, #8]
 800a08a:	021a      	lsls	r2, r3, #8
 800a08c:	68fb      	ldr	r3, [r7, #12]
 800a08e:	681b      	ldr	r3, [r3, #0]
 800a090:	430a      	orrs	r2, r1
 800a092:	61da      	str	r2, [r3, #28]
 800a094:	e001      	b.n	800a09a <HAL_TIM_IC_ConfigChannel+0x126>
 800a096:	2301      	movs	r3, #1
 800a098:	75fb      	strb	r3, [r7, #23]
 800a09a:	68fb      	ldr	r3, [r7, #12]
 800a09c:	2200      	movs	r2, #0
 800a09e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a0a2:	7dfb      	ldrb	r3, [r7, #23]
 800a0a4:	4618      	mov	r0, r3
 800a0a6:	3718      	adds	r7, #24
 800a0a8:	46bd      	mov	sp, r7
 800a0aa:	bd80      	pop	{r7, pc}

0800a0ac <HAL_TIM_PWM_ConfigChannel>:
 800a0ac:	b580      	push	{r7, lr}
 800a0ae:	b086      	sub	sp, #24
 800a0b0:	af00      	add	r7, sp, #0
 800a0b2:	60f8      	str	r0, [r7, #12]
 800a0b4:	60b9      	str	r1, [r7, #8]
 800a0b6:	607a      	str	r2, [r7, #4]
 800a0b8:	2300      	movs	r3, #0
 800a0ba:	75fb      	strb	r3, [r7, #23]
 800a0bc:	68fb      	ldr	r3, [r7, #12]
 800a0be:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800a0c2:	2b01      	cmp	r3, #1
 800a0c4:	d101      	bne.n	800a0ca <HAL_TIM_PWM_ConfigChannel+0x1e>
 800a0c6:	2302      	movs	r3, #2
 800a0c8:	e0ae      	b.n	800a228 <HAL_TIM_PWM_ConfigChannel+0x17c>
 800a0ca:	68fb      	ldr	r3, [r7, #12]
 800a0cc:	2201      	movs	r2, #1
 800a0ce:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a0d2:	687b      	ldr	r3, [r7, #4]
 800a0d4:	2b0c      	cmp	r3, #12
 800a0d6:	f200 809f 	bhi.w	800a218 <HAL_TIM_PWM_ConfigChannel+0x16c>
 800a0da:	a201      	add	r2, pc, #4	; (adr r2, 800a0e0 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800a0dc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a0e0:	0800a115 	.word	0x0800a115
 800a0e4:	0800a219 	.word	0x0800a219
 800a0e8:	0800a219 	.word	0x0800a219
 800a0ec:	0800a219 	.word	0x0800a219
 800a0f0:	0800a155 	.word	0x0800a155
 800a0f4:	0800a219 	.word	0x0800a219
 800a0f8:	0800a219 	.word	0x0800a219
 800a0fc:	0800a219 	.word	0x0800a219
 800a100:	0800a197 	.word	0x0800a197
 800a104:	0800a219 	.word	0x0800a219
 800a108:	0800a219 	.word	0x0800a219
 800a10c:	0800a219 	.word	0x0800a219
 800a110:	0800a1d7 	.word	0x0800a1d7
 800a114:	68fb      	ldr	r3, [r7, #12]
 800a116:	681b      	ldr	r3, [r3, #0]
 800a118:	68b9      	ldr	r1, [r7, #8]
 800a11a:	4618      	mov	r0, r3
 800a11c:	f000 fb16 	bl	800a74c <TIM_OC1_SetConfig>
 800a120:	68fb      	ldr	r3, [r7, #12]
 800a122:	681b      	ldr	r3, [r3, #0]
 800a124:	699a      	ldr	r2, [r3, #24]
 800a126:	68fb      	ldr	r3, [r7, #12]
 800a128:	681b      	ldr	r3, [r3, #0]
 800a12a:	f042 0208 	orr.w	r2, r2, #8
 800a12e:	619a      	str	r2, [r3, #24]
 800a130:	68fb      	ldr	r3, [r7, #12]
 800a132:	681b      	ldr	r3, [r3, #0]
 800a134:	699a      	ldr	r2, [r3, #24]
 800a136:	68fb      	ldr	r3, [r7, #12]
 800a138:	681b      	ldr	r3, [r3, #0]
 800a13a:	f022 0204 	bic.w	r2, r2, #4
 800a13e:	619a      	str	r2, [r3, #24]
 800a140:	68fb      	ldr	r3, [r7, #12]
 800a142:	681b      	ldr	r3, [r3, #0]
 800a144:	6999      	ldr	r1, [r3, #24]
 800a146:	68bb      	ldr	r3, [r7, #8]
 800a148:	691a      	ldr	r2, [r3, #16]
 800a14a:	68fb      	ldr	r3, [r7, #12]
 800a14c:	681b      	ldr	r3, [r3, #0]
 800a14e:	430a      	orrs	r2, r1
 800a150:	619a      	str	r2, [r3, #24]
 800a152:	e064      	b.n	800a21e <HAL_TIM_PWM_ConfigChannel+0x172>
 800a154:	68fb      	ldr	r3, [r7, #12]
 800a156:	681b      	ldr	r3, [r3, #0]
 800a158:	68b9      	ldr	r1, [r7, #8]
 800a15a:	4618      	mov	r0, r3
 800a15c:	f000 fb66 	bl	800a82c <TIM_OC2_SetConfig>
 800a160:	68fb      	ldr	r3, [r7, #12]
 800a162:	681b      	ldr	r3, [r3, #0]
 800a164:	699a      	ldr	r2, [r3, #24]
 800a166:	68fb      	ldr	r3, [r7, #12]
 800a168:	681b      	ldr	r3, [r3, #0]
 800a16a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a16e:	619a      	str	r2, [r3, #24]
 800a170:	68fb      	ldr	r3, [r7, #12]
 800a172:	681b      	ldr	r3, [r3, #0]
 800a174:	699a      	ldr	r2, [r3, #24]
 800a176:	68fb      	ldr	r3, [r7, #12]
 800a178:	681b      	ldr	r3, [r3, #0]
 800a17a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a17e:	619a      	str	r2, [r3, #24]
 800a180:	68fb      	ldr	r3, [r7, #12]
 800a182:	681b      	ldr	r3, [r3, #0]
 800a184:	6999      	ldr	r1, [r3, #24]
 800a186:	68bb      	ldr	r3, [r7, #8]
 800a188:	691b      	ldr	r3, [r3, #16]
 800a18a:	021a      	lsls	r2, r3, #8
 800a18c:	68fb      	ldr	r3, [r7, #12]
 800a18e:	681b      	ldr	r3, [r3, #0]
 800a190:	430a      	orrs	r2, r1
 800a192:	619a      	str	r2, [r3, #24]
 800a194:	e043      	b.n	800a21e <HAL_TIM_PWM_ConfigChannel+0x172>
 800a196:	68fb      	ldr	r3, [r7, #12]
 800a198:	681b      	ldr	r3, [r3, #0]
 800a19a:	68b9      	ldr	r1, [r7, #8]
 800a19c:	4618      	mov	r0, r3
 800a19e:	f000 fbbb 	bl	800a918 <TIM_OC3_SetConfig>
 800a1a2:	68fb      	ldr	r3, [r7, #12]
 800a1a4:	681b      	ldr	r3, [r3, #0]
 800a1a6:	69da      	ldr	r2, [r3, #28]
 800a1a8:	68fb      	ldr	r3, [r7, #12]
 800a1aa:	681b      	ldr	r3, [r3, #0]
 800a1ac:	f042 0208 	orr.w	r2, r2, #8
 800a1b0:	61da      	str	r2, [r3, #28]
 800a1b2:	68fb      	ldr	r3, [r7, #12]
 800a1b4:	681b      	ldr	r3, [r3, #0]
 800a1b6:	69da      	ldr	r2, [r3, #28]
 800a1b8:	68fb      	ldr	r3, [r7, #12]
 800a1ba:	681b      	ldr	r3, [r3, #0]
 800a1bc:	f022 0204 	bic.w	r2, r2, #4
 800a1c0:	61da      	str	r2, [r3, #28]
 800a1c2:	68fb      	ldr	r3, [r7, #12]
 800a1c4:	681b      	ldr	r3, [r3, #0]
 800a1c6:	69d9      	ldr	r1, [r3, #28]
 800a1c8:	68bb      	ldr	r3, [r7, #8]
 800a1ca:	691a      	ldr	r2, [r3, #16]
 800a1cc:	68fb      	ldr	r3, [r7, #12]
 800a1ce:	681b      	ldr	r3, [r3, #0]
 800a1d0:	430a      	orrs	r2, r1
 800a1d2:	61da      	str	r2, [r3, #28]
 800a1d4:	e023      	b.n	800a21e <HAL_TIM_PWM_ConfigChannel+0x172>
 800a1d6:	68fb      	ldr	r3, [r7, #12]
 800a1d8:	681b      	ldr	r3, [r3, #0]
 800a1da:	68b9      	ldr	r1, [r7, #8]
 800a1dc:	4618      	mov	r0, r3
 800a1de:	f000 fc0f 	bl	800aa00 <TIM_OC4_SetConfig>
 800a1e2:	68fb      	ldr	r3, [r7, #12]
 800a1e4:	681b      	ldr	r3, [r3, #0]
 800a1e6:	69da      	ldr	r2, [r3, #28]
 800a1e8:	68fb      	ldr	r3, [r7, #12]
 800a1ea:	681b      	ldr	r3, [r3, #0]
 800a1ec:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a1f0:	61da      	str	r2, [r3, #28]
 800a1f2:	68fb      	ldr	r3, [r7, #12]
 800a1f4:	681b      	ldr	r3, [r3, #0]
 800a1f6:	69da      	ldr	r2, [r3, #28]
 800a1f8:	68fb      	ldr	r3, [r7, #12]
 800a1fa:	681b      	ldr	r3, [r3, #0]
 800a1fc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a200:	61da      	str	r2, [r3, #28]
 800a202:	68fb      	ldr	r3, [r7, #12]
 800a204:	681b      	ldr	r3, [r3, #0]
 800a206:	69d9      	ldr	r1, [r3, #28]
 800a208:	68bb      	ldr	r3, [r7, #8]
 800a20a:	691b      	ldr	r3, [r3, #16]
 800a20c:	021a      	lsls	r2, r3, #8
 800a20e:	68fb      	ldr	r3, [r7, #12]
 800a210:	681b      	ldr	r3, [r3, #0]
 800a212:	430a      	orrs	r2, r1
 800a214:	61da      	str	r2, [r3, #28]
 800a216:	e002      	b.n	800a21e <HAL_TIM_PWM_ConfigChannel+0x172>
 800a218:	2301      	movs	r3, #1
 800a21a:	75fb      	strb	r3, [r7, #23]
 800a21c:	bf00      	nop
 800a21e:	68fb      	ldr	r3, [r7, #12]
 800a220:	2200      	movs	r2, #0
 800a222:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a226:	7dfb      	ldrb	r3, [r7, #23]
 800a228:	4618      	mov	r0, r3
 800a22a:	3718      	adds	r7, #24
 800a22c:	46bd      	mov	sp, r7
 800a22e:	bd80      	pop	{r7, pc}

0800a230 <HAL_TIM_ConfigClockSource>:
 800a230:	b580      	push	{r7, lr}
 800a232:	b084      	sub	sp, #16
 800a234:	af00      	add	r7, sp, #0
 800a236:	6078      	str	r0, [r7, #4]
 800a238:	6039      	str	r1, [r7, #0]
 800a23a:	2300      	movs	r3, #0
 800a23c:	73fb      	strb	r3, [r7, #15]
 800a23e:	687b      	ldr	r3, [r7, #4]
 800a240:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800a244:	2b01      	cmp	r3, #1
 800a246:	d101      	bne.n	800a24c <HAL_TIM_ConfigClockSource+0x1c>
 800a248:	2302      	movs	r3, #2
 800a24a:	e0b4      	b.n	800a3b6 <HAL_TIM_ConfigClockSource+0x186>
 800a24c:	687b      	ldr	r3, [r7, #4]
 800a24e:	2201      	movs	r2, #1
 800a250:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a254:	687b      	ldr	r3, [r7, #4]
 800a256:	2202      	movs	r2, #2
 800a258:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a25c:	687b      	ldr	r3, [r7, #4]
 800a25e:	681b      	ldr	r3, [r3, #0]
 800a260:	689b      	ldr	r3, [r3, #8]
 800a262:	60bb      	str	r3, [r7, #8]
 800a264:	68bb      	ldr	r3, [r7, #8]
 800a266:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800a26a:	60bb      	str	r3, [r7, #8]
 800a26c:	68bb      	ldr	r3, [r7, #8]
 800a26e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800a272:	60bb      	str	r3, [r7, #8]
 800a274:	687b      	ldr	r3, [r7, #4]
 800a276:	681b      	ldr	r3, [r3, #0]
 800a278:	68ba      	ldr	r2, [r7, #8]
 800a27a:	609a      	str	r2, [r3, #8]
 800a27c:	683b      	ldr	r3, [r7, #0]
 800a27e:	681b      	ldr	r3, [r3, #0]
 800a280:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800a284:	d03e      	beq.n	800a304 <HAL_TIM_ConfigClockSource+0xd4>
 800a286:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800a28a:	f200 8087 	bhi.w	800a39c <HAL_TIM_ConfigClockSource+0x16c>
 800a28e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800a292:	f000 8086 	beq.w	800a3a2 <HAL_TIM_ConfigClockSource+0x172>
 800a296:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800a29a:	d87f      	bhi.n	800a39c <HAL_TIM_ConfigClockSource+0x16c>
 800a29c:	2b70      	cmp	r3, #112	; 0x70
 800a29e:	d01a      	beq.n	800a2d6 <HAL_TIM_ConfigClockSource+0xa6>
 800a2a0:	2b70      	cmp	r3, #112	; 0x70
 800a2a2:	d87b      	bhi.n	800a39c <HAL_TIM_ConfigClockSource+0x16c>
 800a2a4:	2b60      	cmp	r3, #96	; 0x60
 800a2a6:	d050      	beq.n	800a34a <HAL_TIM_ConfigClockSource+0x11a>
 800a2a8:	2b60      	cmp	r3, #96	; 0x60
 800a2aa:	d877      	bhi.n	800a39c <HAL_TIM_ConfigClockSource+0x16c>
 800a2ac:	2b50      	cmp	r3, #80	; 0x50
 800a2ae:	d03c      	beq.n	800a32a <HAL_TIM_ConfigClockSource+0xfa>
 800a2b0:	2b50      	cmp	r3, #80	; 0x50
 800a2b2:	d873      	bhi.n	800a39c <HAL_TIM_ConfigClockSource+0x16c>
 800a2b4:	2b40      	cmp	r3, #64	; 0x40
 800a2b6:	d058      	beq.n	800a36a <HAL_TIM_ConfigClockSource+0x13a>
 800a2b8:	2b40      	cmp	r3, #64	; 0x40
 800a2ba:	d86f      	bhi.n	800a39c <HAL_TIM_ConfigClockSource+0x16c>
 800a2bc:	2b30      	cmp	r3, #48	; 0x30
 800a2be:	d064      	beq.n	800a38a <HAL_TIM_ConfigClockSource+0x15a>
 800a2c0:	2b30      	cmp	r3, #48	; 0x30
 800a2c2:	d86b      	bhi.n	800a39c <HAL_TIM_ConfigClockSource+0x16c>
 800a2c4:	2b20      	cmp	r3, #32
 800a2c6:	d060      	beq.n	800a38a <HAL_TIM_ConfigClockSource+0x15a>
 800a2c8:	2b20      	cmp	r3, #32
 800a2ca:	d867      	bhi.n	800a39c <HAL_TIM_ConfigClockSource+0x16c>
 800a2cc:	2b00      	cmp	r3, #0
 800a2ce:	d05c      	beq.n	800a38a <HAL_TIM_ConfigClockSource+0x15a>
 800a2d0:	2b10      	cmp	r3, #16
 800a2d2:	d05a      	beq.n	800a38a <HAL_TIM_ConfigClockSource+0x15a>
 800a2d4:	e062      	b.n	800a39c <HAL_TIM_ConfigClockSource+0x16c>
 800a2d6:	687b      	ldr	r3, [r7, #4]
 800a2d8:	6818      	ldr	r0, [r3, #0]
 800a2da:	683b      	ldr	r3, [r7, #0]
 800a2dc:	6899      	ldr	r1, [r3, #8]
 800a2de:	683b      	ldr	r3, [r7, #0]
 800a2e0:	685a      	ldr	r2, [r3, #4]
 800a2e2:	683b      	ldr	r3, [r7, #0]
 800a2e4:	68db      	ldr	r3, [r3, #12]
 800a2e6:	f000 fd85 	bl	800adf4 <TIM_ETR_SetConfig>
 800a2ea:	687b      	ldr	r3, [r7, #4]
 800a2ec:	681b      	ldr	r3, [r3, #0]
 800a2ee:	689b      	ldr	r3, [r3, #8]
 800a2f0:	60bb      	str	r3, [r7, #8]
 800a2f2:	68bb      	ldr	r3, [r7, #8]
 800a2f4:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800a2f8:	60bb      	str	r3, [r7, #8]
 800a2fa:	687b      	ldr	r3, [r7, #4]
 800a2fc:	681b      	ldr	r3, [r3, #0]
 800a2fe:	68ba      	ldr	r2, [r7, #8]
 800a300:	609a      	str	r2, [r3, #8]
 800a302:	e04f      	b.n	800a3a4 <HAL_TIM_ConfigClockSource+0x174>
 800a304:	687b      	ldr	r3, [r7, #4]
 800a306:	6818      	ldr	r0, [r3, #0]
 800a308:	683b      	ldr	r3, [r7, #0]
 800a30a:	6899      	ldr	r1, [r3, #8]
 800a30c:	683b      	ldr	r3, [r7, #0]
 800a30e:	685a      	ldr	r2, [r3, #4]
 800a310:	683b      	ldr	r3, [r7, #0]
 800a312:	68db      	ldr	r3, [r3, #12]
 800a314:	f000 fd6e 	bl	800adf4 <TIM_ETR_SetConfig>
 800a318:	687b      	ldr	r3, [r7, #4]
 800a31a:	681b      	ldr	r3, [r3, #0]
 800a31c:	689a      	ldr	r2, [r3, #8]
 800a31e:	687b      	ldr	r3, [r7, #4]
 800a320:	681b      	ldr	r3, [r3, #0]
 800a322:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800a326:	609a      	str	r2, [r3, #8]
 800a328:	e03c      	b.n	800a3a4 <HAL_TIM_ConfigClockSource+0x174>
 800a32a:	687b      	ldr	r3, [r7, #4]
 800a32c:	6818      	ldr	r0, [r3, #0]
 800a32e:	683b      	ldr	r3, [r7, #0]
 800a330:	6859      	ldr	r1, [r3, #4]
 800a332:	683b      	ldr	r3, [r7, #0]
 800a334:	68db      	ldr	r3, [r3, #12]
 800a336:	461a      	mov	r2, r3
 800a338:	f000 fc2c 	bl	800ab94 <TIM_TI1_ConfigInputStage>
 800a33c:	687b      	ldr	r3, [r7, #4]
 800a33e:	681b      	ldr	r3, [r3, #0]
 800a340:	2150      	movs	r1, #80	; 0x50
 800a342:	4618      	mov	r0, r3
 800a344:	f000 fd3b 	bl	800adbe <TIM_ITRx_SetConfig>
 800a348:	e02c      	b.n	800a3a4 <HAL_TIM_ConfigClockSource+0x174>
 800a34a:	687b      	ldr	r3, [r7, #4]
 800a34c:	6818      	ldr	r0, [r3, #0]
 800a34e:	683b      	ldr	r3, [r7, #0]
 800a350:	6859      	ldr	r1, [r3, #4]
 800a352:	683b      	ldr	r3, [r7, #0]
 800a354:	68db      	ldr	r3, [r3, #12]
 800a356:	461a      	mov	r2, r3
 800a358:	f000 fc88 	bl	800ac6c <TIM_TI2_ConfigInputStage>
 800a35c:	687b      	ldr	r3, [r7, #4]
 800a35e:	681b      	ldr	r3, [r3, #0]
 800a360:	2160      	movs	r1, #96	; 0x60
 800a362:	4618      	mov	r0, r3
 800a364:	f000 fd2b 	bl	800adbe <TIM_ITRx_SetConfig>
 800a368:	e01c      	b.n	800a3a4 <HAL_TIM_ConfigClockSource+0x174>
 800a36a:	687b      	ldr	r3, [r7, #4]
 800a36c:	6818      	ldr	r0, [r3, #0]
 800a36e:	683b      	ldr	r3, [r7, #0]
 800a370:	6859      	ldr	r1, [r3, #4]
 800a372:	683b      	ldr	r3, [r7, #0]
 800a374:	68db      	ldr	r3, [r3, #12]
 800a376:	461a      	mov	r2, r3
 800a378:	f000 fc0c 	bl	800ab94 <TIM_TI1_ConfigInputStage>
 800a37c:	687b      	ldr	r3, [r7, #4]
 800a37e:	681b      	ldr	r3, [r3, #0]
 800a380:	2140      	movs	r1, #64	; 0x40
 800a382:	4618      	mov	r0, r3
 800a384:	f000 fd1b 	bl	800adbe <TIM_ITRx_SetConfig>
 800a388:	e00c      	b.n	800a3a4 <HAL_TIM_ConfigClockSource+0x174>
 800a38a:	687b      	ldr	r3, [r7, #4]
 800a38c:	681a      	ldr	r2, [r3, #0]
 800a38e:	683b      	ldr	r3, [r7, #0]
 800a390:	681b      	ldr	r3, [r3, #0]
 800a392:	4619      	mov	r1, r3
 800a394:	4610      	mov	r0, r2
 800a396:	f000 fd12 	bl	800adbe <TIM_ITRx_SetConfig>
 800a39a:	e003      	b.n	800a3a4 <HAL_TIM_ConfigClockSource+0x174>
 800a39c:	2301      	movs	r3, #1
 800a39e:	73fb      	strb	r3, [r7, #15]
 800a3a0:	e000      	b.n	800a3a4 <HAL_TIM_ConfigClockSource+0x174>
 800a3a2:	bf00      	nop
 800a3a4:	687b      	ldr	r3, [r7, #4]
 800a3a6:	2201      	movs	r2, #1
 800a3a8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a3ac:	687b      	ldr	r3, [r7, #4]
 800a3ae:	2200      	movs	r2, #0
 800a3b0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a3b4:	7bfb      	ldrb	r3, [r7, #15]
 800a3b6:	4618      	mov	r0, r3
 800a3b8:	3710      	adds	r7, #16
 800a3ba:	46bd      	mov	sp, r7
 800a3bc:	bd80      	pop	{r7, pc}

0800a3be <HAL_TIM_PeriodElapsedCallback>:
 800a3be:	b480      	push	{r7}
 800a3c0:	b083      	sub	sp, #12
 800a3c2:	af00      	add	r7, sp, #0
 800a3c4:	6078      	str	r0, [r7, #4]
 800a3c6:	bf00      	nop
 800a3c8:	370c      	adds	r7, #12
 800a3ca:	46bd      	mov	sp, r7
 800a3cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3d0:	4770      	bx	lr

0800a3d2 <HAL_TIM_OC_DelayElapsedCallback>:
 800a3d2:	b480      	push	{r7}
 800a3d4:	b083      	sub	sp, #12
 800a3d6:	af00      	add	r7, sp, #0
 800a3d8:	6078      	str	r0, [r7, #4]
 800a3da:	bf00      	nop
 800a3dc:	370c      	adds	r7, #12
 800a3de:	46bd      	mov	sp, r7
 800a3e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3e4:	4770      	bx	lr

0800a3e6 <HAL_TIM_IC_CaptureCallback>:
 800a3e6:	b480      	push	{r7}
 800a3e8:	b083      	sub	sp, #12
 800a3ea:	af00      	add	r7, sp, #0
 800a3ec:	6078      	str	r0, [r7, #4]
 800a3ee:	bf00      	nop
 800a3f0:	370c      	adds	r7, #12
 800a3f2:	46bd      	mov	sp, r7
 800a3f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3f8:	4770      	bx	lr

0800a3fa <HAL_TIM_IC_CaptureHalfCpltCallback>:
 800a3fa:	b480      	push	{r7}
 800a3fc:	b083      	sub	sp, #12
 800a3fe:	af00      	add	r7, sp, #0
 800a400:	6078      	str	r0, [r7, #4]
 800a402:	bf00      	nop
 800a404:	370c      	adds	r7, #12
 800a406:	46bd      	mov	sp, r7
 800a408:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a40c:	4770      	bx	lr

0800a40e <HAL_TIM_PWM_PulseFinishedCallback>:
 800a40e:	b480      	push	{r7}
 800a410:	b083      	sub	sp, #12
 800a412:	af00      	add	r7, sp, #0
 800a414:	6078      	str	r0, [r7, #4]
 800a416:	bf00      	nop
 800a418:	370c      	adds	r7, #12
 800a41a:	46bd      	mov	sp, r7
 800a41c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a420:	4770      	bx	lr

0800a422 <HAL_TIM_TriggerCallback>:
 800a422:	b480      	push	{r7}
 800a424:	b083      	sub	sp, #12
 800a426:	af00      	add	r7, sp, #0
 800a428:	6078      	str	r0, [r7, #4]
 800a42a:	bf00      	nop
 800a42c:	370c      	adds	r7, #12
 800a42e:	46bd      	mov	sp, r7
 800a430:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a434:	4770      	bx	lr

0800a436 <HAL_TIM_ErrorCallback>:
 800a436:	b480      	push	{r7}
 800a438:	b083      	sub	sp, #12
 800a43a:	af00      	add	r7, sp, #0
 800a43c:	6078      	str	r0, [r7, #4]
 800a43e:	bf00      	nop
 800a440:	370c      	adds	r7, #12
 800a442:	46bd      	mov	sp, r7
 800a444:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a448:	4770      	bx	lr

0800a44a <TIM_DMAError>:
 800a44a:	b580      	push	{r7, lr}
 800a44c:	b084      	sub	sp, #16
 800a44e:	af00      	add	r7, sp, #0
 800a450:	6078      	str	r0, [r7, #4]
 800a452:	687b      	ldr	r3, [r7, #4]
 800a454:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a456:	60fb      	str	r3, [r7, #12]
 800a458:	68fb      	ldr	r3, [r7, #12]
 800a45a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a45c:	687a      	ldr	r2, [r7, #4]
 800a45e:	429a      	cmp	r2, r3
 800a460:	d107      	bne.n	800a472 <TIM_DMAError+0x28>
 800a462:	68fb      	ldr	r3, [r7, #12]
 800a464:	2201      	movs	r2, #1
 800a466:	771a      	strb	r2, [r3, #28]
 800a468:	68fb      	ldr	r3, [r7, #12]
 800a46a:	2201      	movs	r2, #1
 800a46c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a470:	e02a      	b.n	800a4c8 <TIM_DMAError+0x7e>
 800a472:	68fb      	ldr	r3, [r7, #12]
 800a474:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a476:	687a      	ldr	r2, [r7, #4]
 800a478:	429a      	cmp	r2, r3
 800a47a:	d107      	bne.n	800a48c <TIM_DMAError+0x42>
 800a47c:	68fb      	ldr	r3, [r7, #12]
 800a47e:	2202      	movs	r2, #2
 800a480:	771a      	strb	r2, [r3, #28]
 800a482:	68fb      	ldr	r3, [r7, #12]
 800a484:	2201      	movs	r2, #1
 800a486:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a48a:	e01d      	b.n	800a4c8 <TIM_DMAError+0x7e>
 800a48c:	68fb      	ldr	r3, [r7, #12]
 800a48e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a490:	687a      	ldr	r2, [r7, #4]
 800a492:	429a      	cmp	r2, r3
 800a494:	d107      	bne.n	800a4a6 <TIM_DMAError+0x5c>
 800a496:	68fb      	ldr	r3, [r7, #12]
 800a498:	2204      	movs	r2, #4
 800a49a:	771a      	strb	r2, [r3, #28]
 800a49c:	68fb      	ldr	r3, [r7, #12]
 800a49e:	2201      	movs	r2, #1
 800a4a0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a4a4:	e010      	b.n	800a4c8 <TIM_DMAError+0x7e>
 800a4a6:	68fb      	ldr	r3, [r7, #12]
 800a4a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a4aa:	687a      	ldr	r2, [r7, #4]
 800a4ac:	429a      	cmp	r2, r3
 800a4ae:	d107      	bne.n	800a4c0 <TIM_DMAError+0x76>
 800a4b0:	68fb      	ldr	r3, [r7, #12]
 800a4b2:	2208      	movs	r2, #8
 800a4b4:	771a      	strb	r2, [r3, #28]
 800a4b6:	68fb      	ldr	r3, [r7, #12]
 800a4b8:	2201      	movs	r2, #1
 800a4ba:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a4be:	e003      	b.n	800a4c8 <TIM_DMAError+0x7e>
 800a4c0:	68fb      	ldr	r3, [r7, #12]
 800a4c2:	2201      	movs	r2, #1
 800a4c4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a4c8:	68f8      	ldr	r0, [r7, #12]
 800a4ca:	f7ff ffb4 	bl	800a436 <HAL_TIM_ErrorCallback>
 800a4ce:	68fb      	ldr	r3, [r7, #12]
 800a4d0:	2200      	movs	r2, #0
 800a4d2:	771a      	strb	r2, [r3, #28]
 800a4d4:	bf00      	nop
 800a4d6:	3710      	adds	r7, #16
 800a4d8:	46bd      	mov	sp, r7
 800a4da:	bd80      	pop	{r7, pc}

0800a4dc <TIM_DMACaptureCplt>:
 800a4dc:	b580      	push	{r7, lr}
 800a4de:	b084      	sub	sp, #16
 800a4e0:	af00      	add	r7, sp, #0
 800a4e2:	6078      	str	r0, [r7, #4]
 800a4e4:	687b      	ldr	r3, [r7, #4]
 800a4e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a4e8:	60fb      	str	r3, [r7, #12]
 800a4ea:	68fb      	ldr	r3, [r7, #12]
 800a4ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a4ee:	687a      	ldr	r2, [r7, #4]
 800a4f0:	429a      	cmp	r2, r3
 800a4f2:	d10f      	bne.n	800a514 <TIM_DMACaptureCplt+0x38>
 800a4f4:	68fb      	ldr	r3, [r7, #12]
 800a4f6:	2201      	movs	r2, #1
 800a4f8:	771a      	strb	r2, [r3, #28]
 800a4fa:	687b      	ldr	r3, [r7, #4]
 800a4fc:	69db      	ldr	r3, [r3, #28]
 800a4fe:	2b00      	cmp	r3, #0
 800a500:	d146      	bne.n	800a590 <TIM_DMACaptureCplt+0xb4>
 800a502:	68fb      	ldr	r3, [r7, #12]
 800a504:	2201      	movs	r2, #1
 800a506:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a50a:	68fb      	ldr	r3, [r7, #12]
 800a50c:	2201      	movs	r2, #1
 800a50e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a512:	e03d      	b.n	800a590 <TIM_DMACaptureCplt+0xb4>
 800a514:	68fb      	ldr	r3, [r7, #12]
 800a516:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a518:	687a      	ldr	r2, [r7, #4]
 800a51a:	429a      	cmp	r2, r3
 800a51c:	d10f      	bne.n	800a53e <TIM_DMACaptureCplt+0x62>
 800a51e:	68fb      	ldr	r3, [r7, #12]
 800a520:	2202      	movs	r2, #2
 800a522:	771a      	strb	r2, [r3, #28]
 800a524:	687b      	ldr	r3, [r7, #4]
 800a526:	69db      	ldr	r3, [r3, #28]
 800a528:	2b00      	cmp	r3, #0
 800a52a:	d131      	bne.n	800a590 <TIM_DMACaptureCplt+0xb4>
 800a52c:	68fb      	ldr	r3, [r7, #12]
 800a52e:	2201      	movs	r2, #1
 800a530:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a534:	68fb      	ldr	r3, [r7, #12]
 800a536:	2201      	movs	r2, #1
 800a538:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a53c:	e028      	b.n	800a590 <TIM_DMACaptureCplt+0xb4>
 800a53e:	68fb      	ldr	r3, [r7, #12]
 800a540:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a542:	687a      	ldr	r2, [r7, #4]
 800a544:	429a      	cmp	r2, r3
 800a546:	d10f      	bne.n	800a568 <TIM_DMACaptureCplt+0x8c>
 800a548:	68fb      	ldr	r3, [r7, #12]
 800a54a:	2204      	movs	r2, #4
 800a54c:	771a      	strb	r2, [r3, #28]
 800a54e:	687b      	ldr	r3, [r7, #4]
 800a550:	69db      	ldr	r3, [r3, #28]
 800a552:	2b00      	cmp	r3, #0
 800a554:	d11c      	bne.n	800a590 <TIM_DMACaptureCplt+0xb4>
 800a556:	68fb      	ldr	r3, [r7, #12]
 800a558:	2201      	movs	r2, #1
 800a55a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a55e:	68fb      	ldr	r3, [r7, #12]
 800a560:	2201      	movs	r2, #1
 800a562:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a566:	e013      	b.n	800a590 <TIM_DMACaptureCplt+0xb4>
 800a568:	68fb      	ldr	r3, [r7, #12]
 800a56a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a56c:	687a      	ldr	r2, [r7, #4]
 800a56e:	429a      	cmp	r2, r3
 800a570:	d10e      	bne.n	800a590 <TIM_DMACaptureCplt+0xb4>
 800a572:	68fb      	ldr	r3, [r7, #12]
 800a574:	2208      	movs	r2, #8
 800a576:	771a      	strb	r2, [r3, #28]
 800a578:	687b      	ldr	r3, [r7, #4]
 800a57a:	69db      	ldr	r3, [r3, #28]
 800a57c:	2b00      	cmp	r3, #0
 800a57e:	d107      	bne.n	800a590 <TIM_DMACaptureCplt+0xb4>
 800a580:	68fb      	ldr	r3, [r7, #12]
 800a582:	2201      	movs	r2, #1
 800a584:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a588:	68fb      	ldr	r3, [r7, #12]
 800a58a:	2201      	movs	r2, #1
 800a58c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a590:	68f8      	ldr	r0, [r7, #12]
 800a592:	f7ff ff28 	bl	800a3e6 <HAL_TIM_IC_CaptureCallback>
 800a596:	68fb      	ldr	r3, [r7, #12]
 800a598:	2200      	movs	r2, #0
 800a59a:	771a      	strb	r2, [r3, #28]
 800a59c:	bf00      	nop
 800a59e:	3710      	adds	r7, #16
 800a5a0:	46bd      	mov	sp, r7
 800a5a2:	bd80      	pop	{r7, pc}

0800a5a4 <TIM_DMACaptureHalfCplt>:
 800a5a4:	b580      	push	{r7, lr}
 800a5a6:	b084      	sub	sp, #16
 800a5a8:	af00      	add	r7, sp, #0
 800a5aa:	6078      	str	r0, [r7, #4]
 800a5ac:	687b      	ldr	r3, [r7, #4]
 800a5ae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a5b0:	60fb      	str	r3, [r7, #12]
 800a5b2:	68fb      	ldr	r3, [r7, #12]
 800a5b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a5b6:	687a      	ldr	r2, [r7, #4]
 800a5b8:	429a      	cmp	r2, r3
 800a5ba:	d103      	bne.n	800a5c4 <TIM_DMACaptureHalfCplt+0x20>
 800a5bc:	68fb      	ldr	r3, [r7, #12]
 800a5be:	2201      	movs	r2, #1
 800a5c0:	771a      	strb	r2, [r3, #28]
 800a5c2:	e019      	b.n	800a5f8 <TIM_DMACaptureHalfCplt+0x54>
 800a5c4:	68fb      	ldr	r3, [r7, #12]
 800a5c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a5c8:	687a      	ldr	r2, [r7, #4]
 800a5ca:	429a      	cmp	r2, r3
 800a5cc:	d103      	bne.n	800a5d6 <TIM_DMACaptureHalfCplt+0x32>
 800a5ce:	68fb      	ldr	r3, [r7, #12]
 800a5d0:	2202      	movs	r2, #2
 800a5d2:	771a      	strb	r2, [r3, #28]
 800a5d4:	e010      	b.n	800a5f8 <TIM_DMACaptureHalfCplt+0x54>
 800a5d6:	68fb      	ldr	r3, [r7, #12]
 800a5d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a5da:	687a      	ldr	r2, [r7, #4]
 800a5dc:	429a      	cmp	r2, r3
 800a5de:	d103      	bne.n	800a5e8 <TIM_DMACaptureHalfCplt+0x44>
 800a5e0:	68fb      	ldr	r3, [r7, #12]
 800a5e2:	2204      	movs	r2, #4
 800a5e4:	771a      	strb	r2, [r3, #28]
 800a5e6:	e007      	b.n	800a5f8 <TIM_DMACaptureHalfCplt+0x54>
 800a5e8:	68fb      	ldr	r3, [r7, #12]
 800a5ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a5ec:	687a      	ldr	r2, [r7, #4]
 800a5ee:	429a      	cmp	r2, r3
 800a5f0:	d102      	bne.n	800a5f8 <TIM_DMACaptureHalfCplt+0x54>
 800a5f2:	68fb      	ldr	r3, [r7, #12]
 800a5f4:	2208      	movs	r2, #8
 800a5f6:	771a      	strb	r2, [r3, #28]
 800a5f8:	68f8      	ldr	r0, [r7, #12]
 800a5fa:	f7ff fefe 	bl	800a3fa <HAL_TIM_IC_CaptureHalfCpltCallback>
 800a5fe:	68fb      	ldr	r3, [r7, #12]
 800a600:	2200      	movs	r2, #0
 800a602:	771a      	strb	r2, [r3, #28]
 800a604:	bf00      	nop
 800a606:	3710      	adds	r7, #16
 800a608:	46bd      	mov	sp, r7
 800a60a:	bd80      	pop	{r7, pc}

0800a60c <TIM_Base_SetConfig>:
 800a60c:	b480      	push	{r7}
 800a60e:	b085      	sub	sp, #20
 800a610:	af00      	add	r7, sp, #0
 800a612:	6078      	str	r0, [r7, #4]
 800a614:	6039      	str	r1, [r7, #0]
 800a616:	687b      	ldr	r3, [r7, #4]
 800a618:	681b      	ldr	r3, [r3, #0]
 800a61a:	60fb      	str	r3, [r7, #12]
 800a61c:	687b      	ldr	r3, [r7, #4]
 800a61e:	4a40      	ldr	r2, [pc, #256]	; (800a720 <TIM_Base_SetConfig+0x114>)
 800a620:	4293      	cmp	r3, r2
 800a622:	d013      	beq.n	800a64c <TIM_Base_SetConfig+0x40>
 800a624:	687b      	ldr	r3, [r7, #4]
 800a626:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a62a:	d00f      	beq.n	800a64c <TIM_Base_SetConfig+0x40>
 800a62c:	687b      	ldr	r3, [r7, #4]
 800a62e:	4a3d      	ldr	r2, [pc, #244]	; (800a724 <TIM_Base_SetConfig+0x118>)
 800a630:	4293      	cmp	r3, r2
 800a632:	d00b      	beq.n	800a64c <TIM_Base_SetConfig+0x40>
 800a634:	687b      	ldr	r3, [r7, #4]
 800a636:	4a3c      	ldr	r2, [pc, #240]	; (800a728 <TIM_Base_SetConfig+0x11c>)
 800a638:	4293      	cmp	r3, r2
 800a63a:	d007      	beq.n	800a64c <TIM_Base_SetConfig+0x40>
 800a63c:	687b      	ldr	r3, [r7, #4]
 800a63e:	4a3b      	ldr	r2, [pc, #236]	; (800a72c <TIM_Base_SetConfig+0x120>)
 800a640:	4293      	cmp	r3, r2
 800a642:	d003      	beq.n	800a64c <TIM_Base_SetConfig+0x40>
 800a644:	687b      	ldr	r3, [r7, #4]
 800a646:	4a3a      	ldr	r2, [pc, #232]	; (800a730 <TIM_Base_SetConfig+0x124>)
 800a648:	4293      	cmp	r3, r2
 800a64a:	d108      	bne.n	800a65e <TIM_Base_SetConfig+0x52>
 800a64c:	68fb      	ldr	r3, [r7, #12]
 800a64e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800a652:	60fb      	str	r3, [r7, #12]
 800a654:	683b      	ldr	r3, [r7, #0]
 800a656:	685b      	ldr	r3, [r3, #4]
 800a658:	68fa      	ldr	r2, [r7, #12]
 800a65a:	4313      	orrs	r3, r2
 800a65c:	60fb      	str	r3, [r7, #12]
 800a65e:	687b      	ldr	r3, [r7, #4]
 800a660:	4a2f      	ldr	r2, [pc, #188]	; (800a720 <TIM_Base_SetConfig+0x114>)
 800a662:	4293      	cmp	r3, r2
 800a664:	d02b      	beq.n	800a6be <TIM_Base_SetConfig+0xb2>
 800a666:	687b      	ldr	r3, [r7, #4]
 800a668:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a66c:	d027      	beq.n	800a6be <TIM_Base_SetConfig+0xb2>
 800a66e:	687b      	ldr	r3, [r7, #4]
 800a670:	4a2c      	ldr	r2, [pc, #176]	; (800a724 <TIM_Base_SetConfig+0x118>)
 800a672:	4293      	cmp	r3, r2
 800a674:	d023      	beq.n	800a6be <TIM_Base_SetConfig+0xb2>
 800a676:	687b      	ldr	r3, [r7, #4]
 800a678:	4a2b      	ldr	r2, [pc, #172]	; (800a728 <TIM_Base_SetConfig+0x11c>)
 800a67a:	4293      	cmp	r3, r2
 800a67c:	d01f      	beq.n	800a6be <TIM_Base_SetConfig+0xb2>
 800a67e:	687b      	ldr	r3, [r7, #4]
 800a680:	4a2a      	ldr	r2, [pc, #168]	; (800a72c <TIM_Base_SetConfig+0x120>)
 800a682:	4293      	cmp	r3, r2
 800a684:	d01b      	beq.n	800a6be <TIM_Base_SetConfig+0xb2>
 800a686:	687b      	ldr	r3, [r7, #4]
 800a688:	4a29      	ldr	r2, [pc, #164]	; (800a730 <TIM_Base_SetConfig+0x124>)
 800a68a:	4293      	cmp	r3, r2
 800a68c:	d017      	beq.n	800a6be <TIM_Base_SetConfig+0xb2>
 800a68e:	687b      	ldr	r3, [r7, #4]
 800a690:	4a28      	ldr	r2, [pc, #160]	; (800a734 <TIM_Base_SetConfig+0x128>)
 800a692:	4293      	cmp	r3, r2
 800a694:	d013      	beq.n	800a6be <TIM_Base_SetConfig+0xb2>
 800a696:	687b      	ldr	r3, [r7, #4]
 800a698:	4a27      	ldr	r2, [pc, #156]	; (800a738 <TIM_Base_SetConfig+0x12c>)
 800a69a:	4293      	cmp	r3, r2
 800a69c:	d00f      	beq.n	800a6be <TIM_Base_SetConfig+0xb2>
 800a69e:	687b      	ldr	r3, [r7, #4]
 800a6a0:	4a26      	ldr	r2, [pc, #152]	; (800a73c <TIM_Base_SetConfig+0x130>)
 800a6a2:	4293      	cmp	r3, r2
 800a6a4:	d00b      	beq.n	800a6be <TIM_Base_SetConfig+0xb2>
 800a6a6:	687b      	ldr	r3, [r7, #4]
 800a6a8:	4a25      	ldr	r2, [pc, #148]	; (800a740 <TIM_Base_SetConfig+0x134>)
 800a6aa:	4293      	cmp	r3, r2
 800a6ac:	d007      	beq.n	800a6be <TIM_Base_SetConfig+0xb2>
 800a6ae:	687b      	ldr	r3, [r7, #4]
 800a6b0:	4a24      	ldr	r2, [pc, #144]	; (800a744 <TIM_Base_SetConfig+0x138>)
 800a6b2:	4293      	cmp	r3, r2
 800a6b4:	d003      	beq.n	800a6be <TIM_Base_SetConfig+0xb2>
 800a6b6:	687b      	ldr	r3, [r7, #4]
 800a6b8:	4a23      	ldr	r2, [pc, #140]	; (800a748 <TIM_Base_SetConfig+0x13c>)
 800a6ba:	4293      	cmp	r3, r2
 800a6bc:	d108      	bne.n	800a6d0 <TIM_Base_SetConfig+0xc4>
 800a6be:	68fb      	ldr	r3, [r7, #12]
 800a6c0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800a6c4:	60fb      	str	r3, [r7, #12]
 800a6c6:	683b      	ldr	r3, [r7, #0]
 800a6c8:	68db      	ldr	r3, [r3, #12]
 800a6ca:	68fa      	ldr	r2, [r7, #12]
 800a6cc:	4313      	orrs	r3, r2
 800a6ce:	60fb      	str	r3, [r7, #12]
 800a6d0:	68fb      	ldr	r3, [r7, #12]
 800a6d2:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800a6d6:	683b      	ldr	r3, [r7, #0]
 800a6d8:	695b      	ldr	r3, [r3, #20]
 800a6da:	4313      	orrs	r3, r2
 800a6dc:	60fb      	str	r3, [r7, #12]
 800a6de:	687b      	ldr	r3, [r7, #4]
 800a6e0:	68fa      	ldr	r2, [r7, #12]
 800a6e2:	601a      	str	r2, [r3, #0]
 800a6e4:	683b      	ldr	r3, [r7, #0]
 800a6e6:	689a      	ldr	r2, [r3, #8]
 800a6e8:	687b      	ldr	r3, [r7, #4]
 800a6ea:	62da      	str	r2, [r3, #44]	; 0x2c
 800a6ec:	683b      	ldr	r3, [r7, #0]
 800a6ee:	681a      	ldr	r2, [r3, #0]
 800a6f0:	687b      	ldr	r3, [r7, #4]
 800a6f2:	629a      	str	r2, [r3, #40]	; 0x28
 800a6f4:	687b      	ldr	r3, [r7, #4]
 800a6f6:	4a0a      	ldr	r2, [pc, #40]	; (800a720 <TIM_Base_SetConfig+0x114>)
 800a6f8:	4293      	cmp	r3, r2
 800a6fa:	d003      	beq.n	800a704 <TIM_Base_SetConfig+0xf8>
 800a6fc:	687b      	ldr	r3, [r7, #4]
 800a6fe:	4a0c      	ldr	r2, [pc, #48]	; (800a730 <TIM_Base_SetConfig+0x124>)
 800a700:	4293      	cmp	r3, r2
 800a702:	d103      	bne.n	800a70c <TIM_Base_SetConfig+0x100>
 800a704:	683b      	ldr	r3, [r7, #0]
 800a706:	691a      	ldr	r2, [r3, #16]
 800a708:	687b      	ldr	r3, [r7, #4]
 800a70a:	631a      	str	r2, [r3, #48]	; 0x30
 800a70c:	687b      	ldr	r3, [r7, #4]
 800a70e:	2201      	movs	r2, #1
 800a710:	615a      	str	r2, [r3, #20]
 800a712:	bf00      	nop
 800a714:	3714      	adds	r7, #20
 800a716:	46bd      	mov	sp, r7
 800a718:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a71c:	4770      	bx	lr
 800a71e:	bf00      	nop
 800a720:	40010000 	.word	0x40010000
 800a724:	40000400 	.word	0x40000400
 800a728:	40000800 	.word	0x40000800
 800a72c:	40000c00 	.word	0x40000c00
 800a730:	40010400 	.word	0x40010400
 800a734:	40014000 	.word	0x40014000
 800a738:	40014400 	.word	0x40014400
 800a73c:	40014800 	.word	0x40014800
 800a740:	40001800 	.word	0x40001800
 800a744:	40001c00 	.word	0x40001c00
 800a748:	40002000 	.word	0x40002000

0800a74c <TIM_OC1_SetConfig>:
 800a74c:	b480      	push	{r7}
 800a74e:	b087      	sub	sp, #28
 800a750:	af00      	add	r7, sp, #0
 800a752:	6078      	str	r0, [r7, #4]
 800a754:	6039      	str	r1, [r7, #0]
 800a756:	687b      	ldr	r3, [r7, #4]
 800a758:	6a1b      	ldr	r3, [r3, #32]
 800a75a:	f023 0201 	bic.w	r2, r3, #1
 800a75e:	687b      	ldr	r3, [r7, #4]
 800a760:	621a      	str	r2, [r3, #32]
 800a762:	687b      	ldr	r3, [r7, #4]
 800a764:	6a1b      	ldr	r3, [r3, #32]
 800a766:	617b      	str	r3, [r7, #20]
 800a768:	687b      	ldr	r3, [r7, #4]
 800a76a:	685b      	ldr	r3, [r3, #4]
 800a76c:	613b      	str	r3, [r7, #16]
 800a76e:	687b      	ldr	r3, [r7, #4]
 800a770:	699b      	ldr	r3, [r3, #24]
 800a772:	60fb      	str	r3, [r7, #12]
 800a774:	68fb      	ldr	r3, [r7, #12]
 800a776:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800a77a:	60fb      	str	r3, [r7, #12]
 800a77c:	68fb      	ldr	r3, [r7, #12]
 800a77e:	f023 0303 	bic.w	r3, r3, #3
 800a782:	60fb      	str	r3, [r7, #12]
 800a784:	683b      	ldr	r3, [r7, #0]
 800a786:	681b      	ldr	r3, [r3, #0]
 800a788:	68fa      	ldr	r2, [r7, #12]
 800a78a:	4313      	orrs	r3, r2
 800a78c:	60fb      	str	r3, [r7, #12]
 800a78e:	697b      	ldr	r3, [r7, #20]
 800a790:	f023 0302 	bic.w	r3, r3, #2
 800a794:	617b      	str	r3, [r7, #20]
 800a796:	683b      	ldr	r3, [r7, #0]
 800a798:	689b      	ldr	r3, [r3, #8]
 800a79a:	697a      	ldr	r2, [r7, #20]
 800a79c:	4313      	orrs	r3, r2
 800a79e:	617b      	str	r3, [r7, #20]
 800a7a0:	687b      	ldr	r3, [r7, #4]
 800a7a2:	4a20      	ldr	r2, [pc, #128]	; (800a824 <TIM_OC1_SetConfig+0xd8>)
 800a7a4:	4293      	cmp	r3, r2
 800a7a6:	d003      	beq.n	800a7b0 <TIM_OC1_SetConfig+0x64>
 800a7a8:	687b      	ldr	r3, [r7, #4]
 800a7aa:	4a1f      	ldr	r2, [pc, #124]	; (800a828 <TIM_OC1_SetConfig+0xdc>)
 800a7ac:	4293      	cmp	r3, r2
 800a7ae:	d10c      	bne.n	800a7ca <TIM_OC1_SetConfig+0x7e>
 800a7b0:	697b      	ldr	r3, [r7, #20]
 800a7b2:	f023 0308 	bic.w	r3, r3, #8
 800a7b6:	617b      	str	r3, [r7, #20]
 800a7b8:	683b      	ldr	r3, [r7, #0]
 800a7ba:	68db      	ldr	r3, [r3, #12]
 800a7bc:	697a      	ldr	r2, [r7, #20]
 800a7be:	4313      	orrs	r3, r2
 800a7c0:	617b      	str	r3, [r7, #20]
 800a7c2:	697b      	ldr	r3, [r7, #20]
 800a7c4:	f023 0304 	bic.w	r3, r3, #4
 800a7c8:	617b      	str	r3, [r7, #20]
 800a7ca:	687b      	ldr	r3, [r7, #4]
 800a7cc:	4a15      	ldr	r2, [pc, #84]	; (800a824 <TIM_OC1_SetConfig+0xd8>)
 800a7ce:	4293      	cmp	r3, r2
 800a7d0:	d003      	beq.n	800a7da <TIM_OC1_SetConfig+0x8e>
 800a7d2:	687b      	ldr	r3, [r7, #4]
 800a7d4:	4a14      	ldr	r2, [pc, #80]	; (800a828 <TIM_OC1_SetConfig+0xdc>)
 800a7d6:	4293      	cmp	r3, r2
 800a7d8:	d111      	bne.n	800a7fe <TIM_OC1_SetConfig+0xb2>
 800a7da:	693b      	ldr	r3, [r7, #16]
 800a7dc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800a7e0:	613b      	str	r3, [r7, #16]
 800a7e2:	693b      	ldr	r3, [r7, #16]
 800a7e4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800a7e8:	613b      	str	r3, [r7, #16]
 800a7ea:	683b      	ldr	r3, [r7, #0]
 800a7ec:	695b      	ldr	r3, [r3, #20]
 800a7ee:	693a      	ldr	r2, [r7, #16]
 800a7f0:	4313      	orrs	r3, r2
 800a7f2:	613b      	str	r3, [r7, #16]
 800a7f4:	683b      	ldr	r3, [r7, #0]
 800a7f6:	699b      	ldr	r3, [r3, #24]
 800a7f8:	693a      	ldr	r2, [r7, #16]
 800a7fa:	4313      	orrs	r3, r2
 800a7fc:	613b      	str	r3, [r7, #16]
 800a7fe:	687b      	ldr	r3, [r7, #4]
 800a800:	693a      	ldr	r2, [r7, #16]
 800a802:	605a      	str	r2, [r3, #4]
 800a804:	687b      	ldr	r3, [r7, #4]
 800a806:	68fa      	ldr	r2, [r7, #12]
 800a808:	619a      	str	r2, [r3, #24]
 800a80a:	683b      	ldr	r3, [r7, #0]
 800a80c:	685a      	ldr	r2, [r3, #4]
 800a80e:	687b      	ldr	r3, [r7, #4]
 800a810:	635a      	str	r2, [r3, #52]	; 0x34
 800a812:	687b      	ldr	r3, [r7, #4]
 800a814:	697a      	ldr	r2, [r7, #20]
 800a816:	621a      	str	r2, [r3, #32]
 800a818:	bf00      	nop
 800a81a:	371c      	adds	r7, #28
 800a81c:	46bd      	mov	sp, r7
 800a81e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a822:	4770      	bx	lr
 800a824:	40010000 	.word	0x40010000
 800a828:	40010400 	.word	0x40010400

0800a82c <TIM_OC2_SetConfig>:
 800a82c:	b480      	push	{r7}
 800a82e:	b087      	sub	sp, #28
 800a830:	af00      	add	r7, sp, #0
 800a832:	6078      	str	r0, [r7, #4]
 800a834:	6039      	str	r1, [r7, #0]
 800a836:	687b      	ldr	r3, [r7, #4]
 800a838:	6a1b      	ldr	r3, [r3, #32]
 800a83a:	f023 0210 	bic.w	r2, r3, #16
 800a83e:	687b      	ldr	r3, [r7, #4]
 800a840:	621a      	str	r2, [r3, #32]
 800a842:	687b      	ldr	r3, [r7, #4]
 800a844:	6a1b      	ldr	r3, [r3, #32]
 800a846:	617b      	str	r3, [r7, #20]
 800a848:	687b      	ldr	r3, [r7, #4]
 800a84a:	685b      	ldr	r3, [r3, #4]
 800a84c:	613b      	str	r3, [r7, #16]
 800a84e:	687b      	ldr	r3, [r7, #4]
 800a850:	699b      	ldr	r3, [r3, #24]
 800a852:	60fb      	str	r3, [r7, #12]
 800a854:	68fb      	ldr	r3, [r7, #12]
 800a856:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800a85a:	60fb      	str	r3, [r7, #12]
 800a85c:	68fb      	ldr	r3, [r7, #12]
 800a85e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800a862:	60fb      	str	r3, [r7, #12]
 800a864:	683b      	ldr	r3, [r7, #0]
 800a866:	681b      	ldr	r3, [r3, #0]
 800a868:	021b      	lsls	r3, r3, #8
 800a86a:	68fa      	ldr	r2, [r7, #12]
 800a86c:	4313      	orrs	r3, r2
 800a86e:	60fb      	str	r3, [r7, #12]
 800a870:	697b      	ldr	r3, [r7, #20]
 800a872:	f023 0320 	bic.w	r3, r3, #32
 800a876:	617b      	str	r3, [r7, #20]
 800a878:	683b      	ldr	r3, [r7, #0]
 800a87a:	689b      	ldr	r3, [r3, #8]
 800a87c:	011b      	lsls	r3, r3, #4
 800a87e:	697a      	ldr	r2, [r7, #20]
 800a880:	4313      	orrs	r3, r2
 800a882:	617b      	str	r3, [r7, #20]
 800a884:	687b      	ldr	r3, [r7, #4]
 800a886:	4a22      	ldr	r2, [pc, #136]	; (800a910 <TIM_OC2_SetConfig+0xe4>)
 800a888:	4293      	cmp	r3, r2
 800a88a:	d003      	beq.n	800a894 <TIM_OC2_SetConfig+0x68>
 800a88c:	687b      	ldr	r3, [r7, #4]
 800a88e:	4a21      	ldr	r2, [pc, #132]	; (800a914 <TIM_OC2_SetConfig+0xe8>)
 800a890:	4293      	cmp	r3, r2
 800a892:	d10d      	bne.n	800a8b0 <TIM_OC2_SetConfig+0x84>
 800a894:	697b      	ldr	r3, [r7, #20]
 800a896:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800a89a:	617b      	str	r3, [r7, #20]
 800a89c:	683b      	ldr	r3, [r7, #0]
 800a89e:	68db      	ldr	r3, [r3, #12]
 800a8a0:	011b      	lsls	r3, r3, #4
 800a8a2:	697a      	ldr	r2, [r7, #20]
 800a8a4:	4313      	orrs	r3, r2
 800a8a6:	617b      	str	r3, [r7, #20]
 800a8a8:	697b      	ldr	r3, [r7, #20]
 800a8aa:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a8ae:	617b      	str	r3, [r7, #20]
 800a8b0:	687b      	ldr	r3, [r7, #4]
 800a8b2:	4a17      	ldr	r2, [pc, #92]	; (800a910 <TIM_OC2_SetConfig+0xe4>)
 800a8b4:	4293      	cmp	r3, r2
 800a8b6:	d003      	beq.n	800a8c0 <TIM_OC2_SetConfig+0x94>
 800a8b8:	687b      	ldr	r3, [r7, #4]
 800a8ba:	4a16      	ldr	r2, [pc, #88]	; (800a914 <TIM_OC2_SetConfig+0xe8>)
 800a8bc:	4293      	cmp	r3, r2
 800a8be:	d113      	bne.n	800a8e8 <TIM_OC2_SetConfig+0xbc>
 800a8c0:	693b      	ldr	r3, [r7, #16]
 800a8c2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a8c6:	613b      	str	r3, [r7, #16]
 800a8c8:	693b      	ldr	r3, [r7, #16]
 800a8ca:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800a8ce:	613b      	str	r3, [r7, #16]
 800a8d0:	683b      	ldr	r3, [r7, #0]
 800a8d2:	695b      	ldr	r3, [r3, #20]
 800a8d4:	009b      	lsls	r3, r3, #2
 800a8d6:	693a      	ldr	r2, [r7, #16]
 800a8d8:	4313      	orrs	r3, r2
 800a8da:	613b      	str	r3, [r7, #16]
 800a8dc:	683b      	ldr	r3, [r7, #0]
 800a8de:	699b      	ldr	r3, [r3, #24]
 800a8e0:	009b      	lsls	r3, r3, #2
 800a8e2:	693a      	ldr	r2, [r7, #16]
 800a8e4:	4313      	orrs	r3, r2
 800a8e6:	613b      	str	r3, [r7, #16]
 800a8e8:	687b      	ldr	r3, [r7, #4]
 800a8ea:	693a      	ldr	r2, [r7, #16]
 800a8ec:	605a      	str	r2, [r3, #4]
 800a8ee:	687b      	ldr	r3, [r7, #4]
 800a8f0:	68fa      	ldr	r2, [r7, #12]
 800a8f2:	619a      	str	r2, [r3, #24]
 800a8f4:	683b      	ldr	r3, [r7, #0]
 800a8f6:	685a      	ldr	r2, [r3, #4]
 800a8f8:	687b      	ldr	r3, [r7, #4]
 800a8fa:	639a      	str	r2, [r3, #56]	; 0x38
 800a8fc:	687b      	ldr	r3, [r7, #4]
 800a8fe:	697a      	ldr	r2, [r7, #20]
 800a900:	621a      	str	r2, [r3, #32]
 800a902:	bf00      	nop
 800a904:	371c      	adds	r7, #28
 800a906:	46bd      	mov	sp, r7
 800a908:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a90c:	4770      	bx	lr
 800a90e:	bf00      	nop
 800a910:	40010000 	.word	0x40010000
 800a914:	40010400 	.word	0x40010400

0800a918 <TIM_OC3_SetConfig>:
 800a918:	b480      	push	{r7}
 800a91a:	b087      	sub	sp, #28
 800a91c:	af00      	add	r7, sp, #0
 800a91e:	6078      	str	r0, [r7, #4]
 800a920:	6039      	str	r1, [r7, #0]
 800a922:	687b      	ldr	r3, [r7, #4]
 800a924:	6a1b      	ldr	r3, [r3, #32]
 800a926:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800a92a:	687b      	ldr	r3, [r7, #4]
 800a92c:	621a      	str	r2, [r3, #32]
 800a92e:	687b      	ldr	r3, [r7, #4]
 800a930:	6a1b      	ldr	r3, [r3, #32]
 800a932:	617b      	str	r3, [r7, #20]
 800a934:	687b      	ldr	r3, [r7, #4]
 800a936:	685b      	ldr	r3, [r3, #4]
 800a938:	613b      	str	r3, [r7, #16]
 800a93a:	687b      	ldr	r3, [r7, #4]
 800a93c:	69db      	ldr	r3, [r3, #28]
 800a93e:	60fb      	str	r3, [r7, #12]
 800a940:	68fb      	ldr	r3, [r7, #12]
 800a942:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800a946:	60fb      	str	r3, [r7, #12]
 800a948:	68fb      	ldr	r3, [r7, #12]
 800a94a:	f023 0303 	bic.w	r3, r3, #3
 800a94e:	60fb      	str	r3, [r7, #12]
 800a950:	683b      	ldr	r3, [r7, #0]
 800a952:	681b      	ldr	r3, [r3, #0]
 800a954:	68fa      	ldr	r2, [r7, #12]
 800a956:	4313      	orrs	r3, r2
 800a958:	60fb      	str	r3, [r7, #12]
 800a95a:	697b      	ldr	r3, [r7, #20]
 800a95c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800a960:	617b      	str	r3, [r7, #20]
 800a962:	683b      	ldr	r3, [r7, #0]
 800a964:	689b      	ldr	r3, [r3, #8]
 800a966:	021b      	lsls	r3, r3, #8
 800a968:	697a      	ldr	r2, [r7, #20]
 800a96a:	4313      	orrs	r3, r2
 800a96c:	617b      	str	r3, [r7, #20]
 800a96e:	687b      	ldr	r3, [r7, #4]
 800a970:	4a21      	ldr	r2, [pc, #132]	; (800a9f8 <TIM_OC3_SetConfig+0xe0>)
 800a972:	4293      	cmp	r3, r2
 800a974:	d003      	beq.n	800a97e <TIM_OC3_SetConfig+0x66>
 800a976:	687b      	ldr	r3, [r7, #4]
 800a978:	4a20      	ldr	r2, [pc, #128]	; (800a9fc <TIM_OC3_SetConfig+0xe4>)
 800a97a:	4293      	cmp	r3, r2
 800a97c:	d10d      	bne.n	800a99a <TIM_OC3_SetConfig+0x82>
 800a97e:	697b      	ldr	r3, [r7, #20]
 800a980:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800a984:	617b      	str	r3, [r7, #20]
 800a986:	683b      	ldr	r3, [r7, #0]
 800a988:	68db      	ldr	r3, [r3, #12]
 800a98a:	021b      	lsls	r3, r3, #8
 800a98c:	697a      	ldr	r2, [r7, #20]
 800a98e:	4313      	orrs	r3, r2
 800a990:	617b      	str	r3, [r7, #20]
 800a992:	697b      	ldr	r3, [r7, #20]
 800a994:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a998:	617b      	str	r3, [r7, #20]
 800a99a:	687b      	ldr	r3, [r7, #4]
 800a99c:	4a16      	ldr	r2, [pc, #88]	; (800a9f8 <TIM_OC3_SetConfig+0xe0>)
 800a99e:	4293      	cmp	r3, r2
 800a9a0:	d003      	beq.n	800a9aa <TIM_OC3_SetConfig+0x92>
 800a9a2:	687b      	ldr	r3, [r7, #4]
 800a9a4:	4a15      	ldr	r2, [pc, #84]	; (800a9fc <TIM_OC3_SetConfig+0xe4>)
 800a9a6:	4293      	cmp	r3, r2
 800a9a8:	d113      	bne.n	800a9d2 <TIM_OC3_SetConfig+0xba>
 800a9aa:	693b      	ldr	r3, [r7, #16]
 800a9ac:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800a9b0:	613b      	str	r3, [r7, #16]
 800a9b2:	693b      	ldr	r3, [r7, #16]
 800a9b4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800a9b8:	613b      	str	r3, [r7, #16]
 800a9ba:	683b      	ldr	r3, [r7, #0]
 800a9bc:	695b      	ldr	r3, [r3, #20]
 800a9be:	011b      	lsls	r3, r3, #4
 800a9c0:	693a      	ldr	r2, [r7, #16]
 800a9c2:	4313      	orrs	r3, r2
 800a9c4:	613b      	str	r3, [r7, #16]
 800a9c6:	683b      	ldr	r3, [r7, #0]
 800a9c8:	699b      	ldr	r3, [r3, #24]
 800a9ca:	011b      	lsls	r3, r3, #4
 800a9cc:	693a      	ldr	r2, [r7, #16]
 800a9ce:	4313      	orrs	r3, r2
 800a9d0:	613b      	str	r3, [r7, #16]
 800a9d2:	687b      	ldr	r3, [r7, #4]
 800a9d4:	693a      	ldr	r2, [r7, #16]
 800a9d6:	605a      	str	r2, [r3, #4]
 800a9d8:	687b      	ldr	r3, [r7, #4]
 800a9da:	68fa      	ldr	r2, [r7, #12]
 800a9dc:	61da      	str	r2, [r3, #28]
 800a9de:	683b      	ldr	r3, [r7, #0]
 800a9e0:	685a      	ldr	r2, [r3, #4]
 800a9e2:	687b      	ldr	r3, [r7, #4]
 800a9e4:	63da      	str	r2, [r3, #60]	; 0x3c
 800a9e6:	687b      	ldr	r3, [r7, #4]
 800a9e8:	697a      	ldr	r2, [r7, #20]
 800a9ea:	621a      	str	r2, [r3, #32]
 800a9ec:	bf00      	nop
 800a9ee:	371c      	adds	r7, #28
 800a9f0:	46bd      	mov	sp, r7
 800a9f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9f6:	4770      	bx	lr
 800a9f8:	40010000 	.word	0x40010000
 800a9fc:	40010400 	.word	0x40010400

0800aa00 <TIM_OC4_SetConfig>:
 800aa00:	b480      	push	{r7}
 800aa02:	b087      	sub	sp, #28
 800aa04:	af00      	add	r7, sp, #0
 800aa06:	6078      	str	r0, [r7, #4]
 800aa08:	6039      	str	r1, [r7, #0]
 800aa0a:	687b      	ldr	r3, [r7, #4]
 800aa0c:	6a1b      	ldr	r3, [r3, #32]
 800aa0e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800aa12:	687b      	ldr	r3, [r7, #4]
 800aa14:	621a      	str	r2, [r3, #32]
 800aa16:	687b      	ldr	r3, [r7, #4]
 800aa18:	6a1b      	ldr	r3, [r3, #32]
 800aa1a:	613b      	str	r3, [r7, #16]
 800aa1c:	687b      	ldr	r3, [r7, #4]
 800aa1e:	685b      	ldr	r3, [r3, #4]
 800aa20:	617b      	str	r3, [r7, #20]
 800aa22:	687b      	ldr	r3, [r7, #4]
 800aa24:	69db      	ldr	r3, [r3, #28]
 800aa26:	60fb      	str	r3, [r7, #12]
 800aa28:	68fb      	ldr	r3, [r7, #12]
 800aa2a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800aa2e:	60fb      	str	r3, [r7, #12]
 800aa30:	68fb      	ldr	r3, [r7, #12]
 800aa32:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800aa36:	60fb      	str	r3, [r7, #12]
 800aa38:	683b      	ldr	r3, [r7, #0]
 800aa3a:	681b      	ldr	r3, [r3, #0]
 800aa3c:	021b      	lsls	r3, r3, #8
 800aa3e:	68fa      	ldr	r2, [r7, #12]
 800aa40:	4313      	orrs	r3, r2
 800aa42:	60fb      	str	r3, [r7, #12]
 800aa44:	693b      	ldr	r3, [r7, #16]
 800aa46:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800aa4a:	613b      	str	r3, [r7, #16]
 800aa4c:	683b      	ldr	r3, [r7, #0]
 800aa4e:	689b      	ldr	r3, [r3, #8]
 800aa50:	031b      	lsls	r3, r3, #12
 800aa52:	693a      	ldr	r2, [r7, #16]
 800aa54:	4313      	orrs	r3, r2
 800aa56:	613b      	str	r3, [r7, #16]
 800aa58:	687b      	ldr	r3, [r7, #4]
 800aa5a:	4a12      	ldr	r2, [pc, #72]	; (800aaa4 <TIM_OC4_SetConfig+0xa4>)
 800aa5c:	4293      	cmp	r3, r2
 800aa5e:	d003      	beq.n	800aa68 <TIM_OC4_SetConfig+0x68>
 800aa60:	687b      	ldr	r3, [r7, #4]
 800aa62:	4a11      	ldr	r2, [pc, #68]	; (800aaa8 <TIM_OC4_SetConfig+0xa8>)
 800aa64:	4293      	cmp	r3, r2
 800aa66:	d109      	bne.n	800aa7c <TIM_OC4_SetConfig+0x7c>
 800aa68:	697b      	ldr	r3, [r7, #20]
 800aa6a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800aa6e:	617b      	str	r3, [r7, #20]
 800aa70:	683b      	ldr	r3, [r7, #0]
 800aa72:	695b      	ldr	r3, [r3, #20]
 800aa74:	019b      	lsls	r3, r3, #6
 800aa76:	697a      	ldr	r2, [r7, #20]
 800aa78:	4313      	orrs	r3, r2
 800aa7a:	617b      	str	r3, [r7, #20]
 800aa7c:	687b      	ldr	r3, [r7, #4]
 800aa7e:	697a      	ldr	r2, [r7, #20]
 800aa80:	605a      	str	r2, [r3, #4]
 800aa82:	687b      	ldr	r3, [r7, #4]
 800aa84:	68fa      	ldr	r2, [r7, #12]
 800aa86:	61da      	str	r2, [r3, #28]
 800aa88:	683b      	ldr	r3, [r7, #0]
 800aa8a:	685a      	ldr	r2, [r3, #4]
 800aa8c:	687b      	ldr	r3, [r7, #4]
 800aa8e:	641a      	str	r2, [r3, #64]	; 0x40
 800aa90:	687b      	ldr	r3, [r7, #4]
 800aa92:	693a      	ldr	r2, [r7, #16]
 800aa94:	621a      	str	r2, [r3, #32]
 800aa96:	bf00      	nop
 800aa98:	371c      	adds	r7, #28
 800aa9a:	46bd      	mov	sp, r7
 800aa9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aaa0:	4770      	bx	lr
 800aaa2:	bf00      	nop
 800aaa4:	40010000 	.word	0x40010000
 800aaa8:	40010400 	.word	0x40010400

0800aaac <TIM_TI1_SetConfig>:
 800aaac:	b480      	push	{r7}
 800aaae:	b087      	sub	sp, #28
 800aab0:	af00      	add	r7, sp, #0
 800aab2:	60f8      	str	r0, [r7, #12]
 800aab4:	60b9      	str	r1, [r7, #8]
 800aab6:	607a      	str	r2, [r7, #4]
 800aab8:	603b      	str	r3, [r7, #0]
 800aaba:	68fb      	ldr	r3, [r7, #12]
 800aabc:	6a1b      	ldr	r3, [r3, #32]
 800aabe:	f023 0201 	bic.w	r2, r3, #1
 800aac2:	68fb      	ldr	r3, [r7, #12]
 800aac4:	621a      	str	r2, [r3, #32]
 800aac6:	68fb      	ldr	r3, [r7, #12]
 800aac8:	699b      	ldr	r3, [r3, #24]
 800aaca:	617b      	str	r3, [r7, #20]
 800aacc:	68fb      	ldr	r3, [r7, #12]
 800aace:	6a1b      	ldr	r3, [r3, #32]
 800aad0:	613b      	str	r3, [r7, #16]
 800aad2:	68fb      	ldr	r3, [r7, #12]
 800aad4:	4a28      	ldr	r2, [pc, #160]	; (800ab78 <TIM_TI1_SetConfig+0xcc>)
 800aad6:	4293      	cmp	r3, r2
 800aad8:	d01b      	beq.n	800ab12 <TIM_TI1_SetConfig+0x66>
 800aada:	68fb      	ldr	r3, [r7, #12]
 800aadc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800aae0:	d017      	beq.n	800ab12 <TIM_TI1_SetConfig+0x66>
 800aae2:	68fb      	ldr	r3, [r7, #12]
 800aae4:	4a25      	ldr	r2, [pc, #148]	; (800ab7c <TIM_TI1_SetConfig+0xd0>)
 800aae6:	4293      	cmp	r3, r2
 800aae8:	d013      	beq.n	800ab12 <TIM_TI1_SetConfig+0x66>
 800aaea:	68fb      	ldr	r3, [r7, #12]
 800aaec:	4a24      	ldr	r2, [pc, #144]	; (800ab80 <TIM_TI1_SetConfig+0xd4>)
 800aaee:	4293      	cmp	r3, r2
 800aaf0:	d00f      	beq.n	800ab12 <TIM_TI1_SetConfig+0x66>
 800aaf2:	68fb      	ldr	r3, [r7, #12]
 800aaf4:	4a23      	ldr	r2, [pc, #140]	; (800ab84 <TIM_TI1_SetConfig+0xd8>)
 800aaf6:	4293      	cmp	r3, r2
 800aaf8:	d00b      	beq.n	800ab12 <TIM_TI1_SetConfig+0x66>
 800aafa:	68fb      	ldr	r3, [r7, #12]
 800aafc:	4a22      	ldr	r2, [pc, #136]	; (800ab88 <TIM_TI1_SetConfig+0xdc>)
 800aafe:	4293      	cmp	r3, r2
 800ab00:	d007      	beq.n	800ab12 <TIM_TI1_SetConfig+0x66>
 800ab02:	68fb      	ldr	r3, [r7, #12]
 800ab04:	4a21      	ldr	r2, [pc, #132]	; (800ab8c <TIM_TI1_SetConfig+0xe0>)
 800ab06:	4293      	cmp	r3, r2
 800ab08:	d003      	beq.n	800ab12 <TIM_TI1_SetConfig+0x66>
 800ab0a:	68fb      	ldr	r3, [r7, #12]
 800ab0c:	4a20      	ldr	r2, [pc, #128]	; (800ab90 <TIM_TI1_SetConfig+0xe4>)
 800ab0e:	4293      	cmp	r3, r2
 800ab10:	d101      	bne.n	800ab16 <TIM_TI1_SetConfig+0x6a>
 800ab12:	2301      	movs	r3, #1
 800ab14:	e000      	b.n	800ab18 <TIM_TI1_SetConfig+0x6c>
 800ab16:	2300      	movs	r3, #0
 800ab18:	2b00      	cmp	r3, #0
 800ab1a:	d008      	beq.n	800ab2e <TIM_TI1_SetConfig+0x82>
 800ab1c:	697b      	ldr	r3, [r7, #20]
 800ab1e:	f023 0303 	bic.w	r3, r3, #3
 800ab22:	617b      	str	r3, [r7, #20]
 800ab24:	697a      	ldr	r2, [r7, #20]
 800ab26:	687b      	ldr	r3, [r7, #4]
 800ab28:	4313      	orrs	r3, r2
 800ab2a:	617b      	str	r3, [r7, #20]
 800ab2c:	e003      	b.n	800ab36 <TIM_TI1_SetConfig+0x8a>
 800ab2e:	697b      	ldr	r3, [r7, #20]
 800ab30:	f043 0301 	orr.w	r3, r3, #1
 800ab34:	617b      	str	r3, [r7, #20]
 800ab36:	697b      	ldr	r3, [r7, #20]
 800ab38:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800ab3c:	617b      	str	r3, [r7, #20]
 800ab3e:	683b      	ldr	r3, [r7, #0]
 800ab40:	011b      	lsls	r3, r3, #4
 800ab42:	b2db      	uxtb	r3, r3
 800ab44:	697a      	ldr	r2, [r7, #20]
 800ab46:	4313      	orrs	r3, r2
 800ab48:	617b      	str	r3, [r7, #20]
 800ab4a:	693b      	ldr	r3, [r7, #16]
 800ab4c:	f023 030a 	bic.w	r3, r3, #10
 800ab50:	613b      	str	r3, [r7, #16]
 800ab52:	68bb      	ldr	r3, [r7, #8]
 800ab54:	f003 030a 	and.w	r3, r3, #10
 800ab58:	693a      	ldr	r2, [r7, #16]
 800ab5a:	4313      	orrs	r3, r2
 800ab5c:	613b      	str	r3, [r7, #16]
 800ab5e:	68fb      	ldr	r3, [r7, #12]
 800ab60:	697a      	ldr	r2, [r7, #20]
 800ab62:	619a      	str	r2, [r3, #24]
 800ab64:	68fb      	ldr	r3, [r7, #12]
 800ab66:	693a      	ldr	r2, [r7, #16]
 800ab68:	621a      	str	r2, [r3, #32]
 800ab6a:	bf00      	nop
 800ab6c:	371c      	adds	r7, #28
 800ab6e:	46bd      	mov	sp, r7
 800ab70:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab74:	4770      	bx	lr
 800ab76:	bf00      	nop
 800ab78:	40010000 	.word	0x40010000
 800ab7c:	40000400 	.word	0x40000400
 800ab80:	40000800 	.word	0x40000800
 800ab84:	40000c00 	.word	0x40000c00
 800ab88:	40010400 	.word	0x40010400
 800ab8c:	40014000 	.word	0x40014000
 800ab90:	40001800 	.word	0x40001800

0800ab94 <TIM_TI1_ConfigInputStage>:
 800ab94:	b480      	push	{r7}
 800ab96:	b087      	sub	sp, #28
 800ab98:	af00      	add	r7, sp, #0
 800ab9a:	60f8      	str	r0, [r7, #12]
 800ab9c:	60b9      	str	r1, [r7, #8]
 800ab9e:	607a      	str	r2, [r7, #4]
 800aba0:	68fb      	ldr	r3, [r7, #12]
 800aba2:	6a1b      	ldr	r3, [r3, #32]
 800aba4:	617b      	str	r3, [r7, #20]
 800aba6:	68fb      	ldr	r3, [r7, #12]
 800aba8:	6a1b      	ldr	r3, [r3, #32]
 800abaa:	f023 0201 	bic.w	r2, r3, #1
 800abae:	68fb      	ldr	r3, [r7, #12]
 800abb0:	621a      	str	r2, [r3, #32]
 800abb2:	68fb      	ldr	r3, [r7, #12]
 800abb4:	699b      	ldr	r3, [r3, #24]
 800abb6:	613b      	str	r3, [r7, #16]
 800abb8:	693b      	ldr	r3, [r7, #16]
 800abba:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800abbe:	613b      	str	r3, [r7, #16]
 800abc0:	687b      	ldr	r3, [r7, #4]
 800abc2:	011b      	lsls	r3, r3, #4
 800abc4:	693a      	ldr	r2, [r7, #16]
 800abc6:	4313      	orrs	r3, r2
 800abc8:	613b      	str	r3, [r7, #16]
 800abca:	697b      	ldr	r3, [r7, #20]
 800abcc:	f023 030a 	bic.w	r3, r3, #10
 800abd0:	617b      	str	r3, [r7, #20]
 800abd2:	697a      	ldr	r2, [r7, #20]
 800abd4:	68bb      	ldr	r3, [r7, #8]
 800abd6:	4313      	orrs	r3, r2
 800abd8:	617b      	str	r3, [r7, #20]
 800abda:	68fb      	ldr	r3, [r7, #12]
 800abdc:	693a      	ldr	r2, [r7, #16]
 800abde:	619a      	str	r2, [r3, #24]
 800abe0:	68fb      	ldr	r3, [r7, #12]
 800abe2:	697a      	ldr	r2, [r7, #20]
 800abe4:	621a      	str	r2, [r3, #32]
 800abe6:	bf00      	nop
 800abe8:	371c      	adds	r7, #28
 800abea:	46bd      	mov	sp, r7
 800abec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abf0:	4770      	bx	lr

0800abf2 <TIM_TI2_SetConfig>:
 800abf2:	b480      	push	{r7}
 800abf4:	b087      	sub	sp, #28
 800abf6:	af00      	add	r7, sp, #0
 800abf8:	60f8      	str	r0, [r7, #12]
 800abfa:	60b9      	str	r1, [r7, #8]
 800abfc:	607a      	str	r2, [r7, #4]
 800abfe:	603b      	str	r3, [r7, #0]
 800ac00:	68fb      	ldr	r3, [r7, #12]
 800ac02:	6a1b      	ldr	r3, [r3, #32]
 800ac04:	f023 0210 	bic.w	r2, r3, #16
 800ac08:	68fb      	ldr	r3, [r7, #12]
 800ac0a:	621a      	str	r2, [r3, #32]
 800ac0c:	68fb      	ldr	r3, [r7, #12]
 800ac0e:	699b      	ldr	r3, [r3, #24]
 800ac10:	617b      	str	r3, [r7, #20]
 800ac12:	68fb      	ldr	r3, [r7, #12]
 800ac14:	6a1b      	ldr	r3, [r3, #32]
 800ac16:	613b      	str	r3, [r7, #16]
 800ac18:	697b      	ldr	r3, [r7, #20]
 800ac1a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800ac1e:	617b      	str	r3, [r7, #20]
 800ac20:	687b      	ldr	r3, [r7, #4]
 800ac22:	021b      	lsls	r3, r3, #8
 800ac24:	697a      	ldr	r2, [r7, #20]
 800ac26:	4313      	orrs	r3, r2
 800ac28:	617b      	str	r3, [r7, #20]
 800ac2a:	697b      	ldr	r3, [r7, #20]
 800ac2c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800ac30:	617b      	str	r3, [r7, #20]
 800ac32:	683b      	ldr	r3, [r7, #0]
 800ac34:	031b      	lsls	r3, r3, #12
 800ac36:	b29b      	uxth	r3, r3
 800ac38:	697a      	ldr	r2, [r7, #20]
 800ac3a:	4313      	orrs	r3, r2
 800ac3c:	617b      	str	r3, [r7, #20]
 800ac3e:	693b      	ldr	r3, [r7, #16]
 800ac40:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800ac44:	613b      	str	r3, [r7, #16]
 800ac46:	68bb      	ldr	r3, [r7, #8]
 800ac48:	011b      	lsls	r3, r3, #4
 800ac4a:	f003 03a0 	and.w	r3, r3, #160	; 0xa0
 800ac4e:	693a      	ldr	r2, [r7, #16]
 800ac50:	4313      	orrs	r3, r2
 800ac52:	613b      	str	r3, [r7, #16]
 800ac54:	68fb      	ldr	r3, [r7, #12]
 800ac56:	697a      	ldr	r2, [r7, #20]
 800ac58:	619a      	str	r2, [r3, #24]
 800ac5a:	68fb      	ldr	r3, [r7, #12]
 800ac5c:	693a      	ldr	r2, [r7, #16]
 800ac5e:	621a      	str	r2, [r3, #32]
 800ac60:	bf00      	nop
 800ac62:	371c      	adds	r7, #28
 800ac64:	46bd      	mov	sp, r7
 800ac66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac6a:	4770      	bx	lr

0800ac6c <TIM_TI2_ConfigInputStage>:
 800ac6c:	b480      	push	{r7}
 800ac6e:	b087      	sub	sp, #28
 800ac70:	af00      	add	r7, sp, #0
 800ac72:	60f8      	str	r0, [r7, #12]
 800ac74:	60b9      	str	r1, [r7, #8]
 800ac76:	607a      	str	r2, [r7, #4]
 800ac78:	68fb      	ldr	r3, [r7, #12]
 800ac7a:	6a1b      	ldr	r3, [r3, #32]
 800ac7c:	f023 0210 	bic.w	r2, r3, #16
 800ac80:	68fb      	ldr	r3, [r7, #12]
 800ac82:	621a      	str	r2, [r3, #32]
 800ac84:	68fb      	ldr	r3, [r7, #12]
 800ac86:	699b      	ldr	r3, [r3, #24]
 800ac88:	617b      	str	r3, [r7, #20]
 800ac8a:	68fb      	ldr	r3, [r7, #12]
 800ac8c:	6a1b      	ldr	r3, [r3, #32]
 800ac8e:	613b      	str	r3, [r7, #16]
 800ac90:	697b      	ldr	r3, [r7, #20]
 800ac92:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800ac96:	617b      	str	r3, [r7, #20]
 800ac98:	687b      	ldr	r3, [r7, #4]
 800ac9a:	031b      	lsls	r3, r3, #12
 800ac9c:	697a      	ldr	r2, [r7, #20]
 800ac9e:	4313      	orrs	r3, r2
 800aca0:	617b      	str	r3, [r7, #20]
 800aca2:	693b      	ldr	r3, [r7, #16]
 800aca4:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800aca8:	613b      	str	r3, [r7, #16]
 800acaa:	68bb      	ldr	r3, [r7, #8]
 800acac:	011b      	lsls	r3, r3, #4
 800acae:	693a      	ldr	r2, [r7, #16]
 800acb0:	4313      	orrs	r3, r2
 800acb2:	613b      	str	r3, [r7, #16]
 800acb4:	68fb      	ldr	r3, [r7, #12]
 800acb6:	697a      	ldr	r2, [r7, #20]
 800acb8:	619a      	str	r2, [r3, #24]
 800acba:	68fb      	ldr	r3, [r7, #12]
 800acbc:	693a      	ldr	r2, [r7, #16]
 800acbe:	621a      	str	r2, [r3, #32]
 800acc0:	bf00      	nop
 800acc2:	371c      	adds	r7, #28
 800acc4:	46bd      	mov	sp, r7
 800acc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acca:	4770      	bx	lr

0800accc <TIM_TI3_SetConfig>:
 800accc:	b480      	push	{r7}
 800acce:	b087      	sub	sp, #28
 800acd0:	af00      	add	r7, sp, #0
 800acd2:	60f8      	str	r0, [r7, #12]
 800acd4:	60b9      	str	r1, [r7, #8]
 800acd6:	607a      	str	r2, [r7, #4]
 800acd8:	603b      	str	r3, [r7, #0]
 800acda:	68fb      	ldr	r3, [r7, #12]
 800acdc:	6a1b      	ldr	r3, [r3, #32]
 800acde:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800ace2:	68fb      	ldr	r3, [r7, #12]
 800ace4:	621a      	str	r2, [r3, #32]
 800ace6:	68fb      	ldr	r3, [r7, #12]
 800ace8:	69db      	ldr	r3, [r3, #28]
 800acea:	617b      	str	r3, [r7, #20]
 800acec:	68fb      	ldr	r3, [r7, #12]
 800acee:	6a1b      	ldr	r3, [r3, #32]
 800acf0:	613b      	str	r3, [r7, #16]
 800acf2:	697b      	ldr	r3, [r7, #20]
 800acf4:	f023 0303 	bic.w	r3, r3, #3
 800acf8:	617b      	str	r3, [r7, #20]
 800acfa:	697a      	ldr	r2, [r7, #20]
 800acfc:	687b      	ldr	r3, [r7, #4]
 800acfe:	4313      	orrs	r3, r2
 800ad00:	617b      	str	r3, [r7, #20]
 800ad02:	697b      	ldr	r3, [r7, #20]
 800ad04:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800ad08:	617b      	str	r3, [r7, #20]
 800ad0a:	683b      	ldr	r3, [r7, #0]
 800ad0c:	011b      	lsls	r3, r3, #4
 800ad0e:	b2db      	uxtb	r3, r3
 800ad10:	697a      	ldr	r2, [r7, #20]
 800ad12:	4313      	orrs	r3, r2
 800ad14:	617b      	str	r3, [r7, #20]
 800ad16:	693b      	ldr	r3, [r7, #16]
 800ad18:	f423 6320 	bic.w	r3, r3, #2560	; 0xa00
 800ad1c:	613b      	str	r3, [r7, #16]
 800ad1e:	68bb      	ldr	r3, [r7, #8]
 800ad20:	021b      	lsls	r3, r3, #8
 800ad22:	f403 6320 	and.w	r3, r3, #2560	; 0xa00
 800ad26:	693a      	ldr	r2, [r7, #16]
 800ad28:	4313      	orrs	r3, r2
 800ad2a:	613b      	str	r3, [r7, #16]
 800ad2c:	68fb      	ldr	r3, [r7, #12]
 800ad2e:	697a      	ldr	r2, [r7, #20]
 800ad30:	61da      	str	r2, [r3, #28]
 800ad32:	68fb      	ldr	r3, [r7, #12]
 800ad34:	693a      	ldr	r2, [r7, #16]
 800ad36:	621a      	str	r2, [r3, #32]
 800ad38:	bf00      	nop
 800ad3a:	371c      	adds	r7, #28
 800ad3c:	46bd      	mov	sp, r7
 800ad3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad42:	4770      	bx	lr

0800ad44 <TIM_TI4_SetConfig>:
 800ad44:	b480      	push	{r7}
 800ad46:	b087      	sub	sp, #28
 800ad48:	af00      	add	r7, sp, #0
 800ad4a:	60f8      	str	r0, [r7, #12]
 800ad4c:	60b9      	str	r1, [r7, #8]
 800ad4e:	607a      	str	r2, [r7, #4]
 800ad50:	603b      	str	r3, [r7, #0]
 800ad52:	68fb      	ldr	r3, [r7, #12]
 800ad54:	6a1b      	ldr	r3, [r3, #32]
 800ad56:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800ad5a:	68fb      	ldr	r3, [r7, #12]
 800ad5c:	621a      	str	r2, [r3, #32]
 800ad5e:	68fb      	ldr	r3, [r7, #12]
 800ad60:	69db      	ldr	r3, [r3, #28]
 800ad62:	617b      	str	r3, [r7, #20]
 800ad64:	68fb      	ldr	r3, [r7, #12]
 800ad66:	6a1b      	ldr	r3, [r3, #32]
 800ad68:	613b      	str	r3, [r7, #16]
 800ad6a:	697b      	ldr	r3, [r7, #20]
 800ad6c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800ad70:	617b      	str	r3, [r7, #20]
 800ad72:	687b      	ldr	r3, [r7, #4]
 800ad74:	021b      	lsls	r3, r3, #8
 800ad76:	697a      	ldr	r2, [r7, #20]
 800ad78:	4313      	orrs	r3, r2
 800ad7a:	617b      	str	r3, [r7, #20]
 800ad7c:	697b      	ldr	r3, [r7, #20]
 800ad7e:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800ad82:	617b      	str	r3, [r7, #20]
 800ad84:	683b      	ldr	r3, [r7, #0]
 800ad86:	031b      	lsls	r3, r3, #12
 800ad88:	b29b      	uxth	r3, r3
 800ad8a:	697a      	ldr	r2, [r7, #20]
 800ad8c:	4313      	orrs	r3, r2
 800ad8e:	617b      	str	r3, [r7, #20]
 800ad90:	693b      	ldr	r3, [r7, #16]
 800ad92:	f423 4320 	bic.w	r3, r3, #40960	; 0xa000
 800ad96:	613b      	str	r3, [r7, #16]
 800ad98:	68bb      	ldr	r3, [r7, #8]
 800ad9a:	031b      	lsls	r3, r3, #12
 800ad9c:	f403 4320 	and.w	r3, r3, #40960	; 0xa000
 800ada0:	693a      	ldr	r2, [r7, #16]
 800ada2:	4313      	orrs	r3, r2
 800ada4:	613b      	str	r3, [r7, #16]
 800ada6:	68fb      	ldr	r3, [r7, #12]
 800ada8:	697a      	ldr	r2, [r7, #20]
 800adaa:	61da      	str	r2, [r3, #28]
 800adac:	68fb      	ldr	r3, [r7, #12]
 800adae:	693a      	ldr	r2, [r7, #16]
 800adb0:	621a      	str	r2, [r3, #32]
 800adb2:	bf00      	nop
 800adb4:	371c      	adds	r7, #28
 800adb6:	46bd      	mov	sp, r7
 800adb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adbc:	4770      	bx	lr

0800adbe <TIM_ITRx_SetConfig>:
 800adbe:	b480      	push	{r7}
 800adc0:	b085      	sub	sp, #20
 800adc2:	af00      	add	r7, sp, #0
 800adc4:	6078      	str	r0, [r7, #4]
 800adc6:	6039      	str	r1, [r7, #0]
 800adc8:	687b      	ldr	r3, [r7, #4]
 800adca:	689b      	ldr	r3, [r3, #8]
 800adcc:	60fb      	str	r3, [r7, #12]
 800adce:	68fb      	ldr	r3, [r7, #12]
 800add0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800add4:	60fb      	str	r3, [r7, #12]
 800add6:	683a      	ldr	r2, [r7, #0]
 800add8:	68fb      	ldr	r3, [r7, #12]
 800adda:	4313      	orrs	r3, r2
 800addc:	f043 0307 	orr.w	r3, r3, #7
 800ade0:	60fb      	str	r3, [r7, #12]
 800ade2:	687b      	ldr	r3, [r7, #4]
 800ade4:	68fa      	ldr	r2, [r7, #12]
 800ade6:	609a      	str	r2, [r3, #8]
 800ade8:	bf00      	nop
 800adea:	3714      	adds	r7, #20
 800adec:	46bd      	mov	sp, r7
 800adee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adf2:	4770      	bx	lr

0800adf4 <TIM_ETR_SetConfig>:
 800adf4:	b480      	push	{r7}
 800adf6:	b087      	sub	sp, #28
 800adf8:	af00      	add	r7, sp, #0
 800adfa:	60f8      	str	r0, [r7, #12]
 800adfc:	60b9      	str	r1, [r7, #8]
 800adfe:	607a      	str	r2, [r7, #4]
 800ae00:	603b      	str	r3, [r7, #0]
 800ae02:	68fb      	ldr	r3, [r7, #12]
 800ae04:	689b      	ldr	r3, [r3, #8]
 800ae06:	617b      	str	r3, [r7, #20]
 800ae08:	697b      	ldr	r3, [r7, #20]
 800ae0a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800ae0e:	617b      	str	r3, [r7, #20]
 800ae10:	683b      	ldr	r3, [r7, #0]
 800ae12:	021a      	lsls	r2, r3, #8
 800ae14:	687b      	ldr	r3, [r7, #4]
 800ae16:	431a      	orrs	r2, r3
 800ae18:	68bb      	ldr	r3, [r7, #8]
 800ae1a:	4313      	orrs	r3, r2
 800ae1c:	697a      	ldr	r2, [r7, #20]
 800ae1e:	4313      	orrs	r3, r2
 800ae20:	617b      	str	r3, [r7, #20]
 800ae22:	68fb      	ldr	r3, [r7, #12]
 800ae24:	697a      	ldr	r2, [r7, #20]
 800ae26:	609a      	str	r2, [r3, #8]
 800ae28:	bf00      	nop
 800ae2a:	371c      	adds	r7, #28
 800ae2c:	46bd      	mov	sp, r7
 800ae2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae32:	4770      	bx	lr

0800ae34 <TIM_CCxChannelCmd>:
 800ae34:	b480      	push	{r7}
 800ae36:	b087      	sub	sp, #28
 800ae38:	af00      	add	r7, sp, #0
 800ae3a:	60f8      	str	r0, [r7, #12]
 800ae3c:	60b9      	str	r1, [r7, #8]
 800ae3e:	607a      	str	r2, [r7, #4]
 800ae40:	68bb      	ldr	r3, [r7, #8]
 800ae42:	f003 031f 	and.w	r3, r3, #31
 800ae46:	2201      	movs	r2, #1
 800ae48:	fa02 f303 	lsl.w	r3, r2, r3
 800ae4c:	617b      	str	r3, [r7, #20]
 800ae4e:	68fb      	ldr	r3, [r7, #12]
 800ae50:	6a1a      	ldr	r2, [r3, #32]
 800ae52:	697b      	ldr	r3, [r7, #20]
 800ae54:	43db      	mvns	r3, r3
 800ae56:	401a      	ands	r2, r3
 800ae58:	68fb      	ldr	r3, [r7, #12]
 800ae5a:	621a      	str	r2, [r3, #32]
 800ae5c:	68fb      	ldr	r3, [r7, #12]
 800ae5e:	6a1a      	ldr	r2, [r3, #32]
 800ae60:	68bb      	ldr	r3, [r7, #8]
 800ae62:	f003 031f 	and.w	r3, r3, #31
 800ae66:	6879      	ldr	r1, [r7, #4]
 800ae68:	fa01 f303 	lsl.w	r3, r1, r3
 800ae6c:	431a      	orrs	r2, r3
 800ae6e:	68fb      	ldr	r3, [r7, #12]
 800ae70:	621a      	str	r2, [r3, #32]
 800ae72:	bf00      	nop
 800ae74:	371c      	adds	r7, #28
 800ae76:	46bd      	mov	sp, r7
 800ae78:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae7c:	4770      	bx	lr
	...

0800ae80 <HAL_TIMEx_MasterConfigSynchronization>:
 800ae80:	b480      	push	{r7}
 800ae82:	b085      	sub	sp, #20
 800ae84:	af00      	add	r7, sp, #0
 800ae86:	6078      	str	r0, [r7, #4]
 800ae88:	6039      	str	r1, [r7, #0]
 800ae8a:	687b      	ldr	r3, [r7, #4]
 800ae8c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800ae90:	2b01      	cmp	r3, #1
 800ae92:	d101      	bne.n	800ae98 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800ae94:	2302      	movs	r3, #2
 800ae96:	e05a      	b.n	800af4e <HAL_TIMEx_MasterConfigSynchronization+0xce>
 800ae98:	687b      	ldr	r3, [r7, #4]
 800ae9a:	2201      	movs	r2, #1
 800ae9c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800aea0:	687b      	ldr	r3, [r7, #4]
 800aea2:	2202      	movs	r2, #2
 800aea4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800aea8:	687b      	ldr	r3, [r7, #4]
 800aeaa:	681b      	ldr	r3, [r3, #0]
 800aeac:	685b      	ldr	r3, [r3, #4]
 800aeae:	60fb      	str	r3, [r7, #12]
 800aeb0:	687b      	ldr	r3, [r7, #4]
 800aeb2:	681b      	ldr	r3, [r3, #0]
 800aeb4:	689b      	ldr	r3, [r3, #8]
 800aeb6:	60bb      	str	r3, [r7, #8]
 800aeb8:	68fb      	ldr	r3, [r7, #12]
 800aeba:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800aebe:	60fb      	str	r3, [r7, #12]
 800aec0:	683b      	ldr	r3, [r7, #0]
 800aec2:	681b      	ldr	r3, [r3, #0]
 800aec4:	68fa      	ldr	r2, [r7, #12]
 800aec6:	4313      	orrs	r3, r2
 800aec8:	60fb      	str	r3, [r7, #12]
 800aeca:	687b      	ldr	r3, [r7, #4]
 800aecc:	681b      	ldr	r3, [r3, #0]
 800aece:	68fa      	ldr	r2, [r7, #12]
 800aed0:	605a      	str	r2, [r3, #4]
 800aed2:	687b      	ldr	r3, [r7, #4]
 800aed4:	681b      	ldr	r3, [r3, #0]
 800aed6:	4a21      	ldr	r2, [pc, #132]	; (800af5c <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 800aed8:	4293      	cmp	r3, r2
 800aeda:	d022      	beq.n	800af22 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800aedc:	687b      	ldr	r3, [r7, #4]
 800aede:	681b      	ldr	r3, [r3, #0]
 800aee0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800aee4:	d01d      	beq.n	800af22 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800aee6:	687b      	ldr	r3, [r7, #4]
 800aee8:	681b      	ldr	r3, [r3, #0]
 800aeea:	4a1d      	ldr	r2, [pc, #116]	; (800af60 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 800aeec:	4293      	cmp	r3, r2
 800aeee:	d018      	beq.n	800af22 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800aef0:	687b      	ldr	r3, [r7, #4]
 800aef2:	681b      	ldr	r3, [r3, #0]
 800aef4:	4a1b      	ldr	r2, [pc, #108]	; (800af64 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800aef6:	4293      	cmp	r3, r2
 800aef8:	d013      	beq.n	800af22 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800aefa:	687b      	ldr	r3, [r7, #4]
 800aefc:	681b      	ldr	r3, [r3, #0]
 800aefe:	4a1a      	ldr	r2, [pc, #104]	; (800af68 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 800af00:	4293      	cmp	r3, r2
 800af02:	d00e      	beq.n	800af22 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800af04:	687b      	ldr	r3, [r7, #4]
 800af06:	681b      	ldr	r3, [r3, #0]
 800af08:	4a18      	ldr	r2, [pc, #96]	; (800af6c <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 800af0a:	4293      	cmp	r3, r2
 800af0c:	d009      	beq.n	800af22 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800af0e:	687b      	ldr	r3, [r7, #4]
 800af10:	681b      	ldr	r3, [r3, #0]
 800af12:	4a17      	ldr	r2, [pc, #92]	; (800af70 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 800af14:	4293      	cmp	r3, r2
 800af16:	d004      	beq.n	800af22 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800af18:	687b      	ldr	r3, [r7, #4]
 800af1a:	681b      	ldr	r3, [r3, #0]
 800af1c:	4a15      	ldr	r2, [pc, #84]	; (800af74 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800af1e:	4293      	cmp	r3, r2
 800af20:	d10c      	bne.n	800af3c <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 800af22:	68bb      	ldr	r3, [r7, #8]
 800af24:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800af28:	60bb      	str	r3, [r7, #8]
 800af2a:	683b      	ldr	r3, [r7, #0]
 800af2c:	685b      	ldr	r3, [r3, #4]
 800af2e:	68ba      	ldr	r2, [r7, #8]
 800af30:	4313      	orrs	r3, r2
 800af32:	60bb      	str	r3, [r7, #8]
 800af34:	687b      	ldr	r3, [r7, #4]
 800af36:	681b      	ldr	r3, [r3, #0]
 800af38:	68ba      	ldr	r2, [r7, #8]
 800af3a:	609a      	str	r2, [r3, #8]
 800af3c:	687b      	ldr	r3, [r7, #4]
 800af3e:	2201      	movs	r2, #1
 800af40:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800af44:	687b      	ldr	r3, [r7, #4]
 800af46:	2200      	movs	r2, #0
 800af48:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800af4c:	2300      	movs	r3, #0
 800af4e:	4618      	mov	r0, r3
 800af50:	3714      	adds	r7, #20
 800af52:	46bd      	mov	sp, r7
 800af54:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af58:	4770      	bx	lr
 800af5a:	bf00      	nop
 800af5c:	40010000 	.word	0x40010000
 800af60:	40000400 	.word	0x40000400
 800af64:	40000800 	.word	0x40000800
 800af68:	40000c00 	.word	0x40000c00
 800af6c:	40010400 	.word	0x40010400
 800af70:	40014000 	.word	0x40014000
 800af74:	40001800 	.word	0x40001800

0800af78 <HAL_TIMEx_ConfigBreakDeadTime>:
 800af78:	b480      	push	{r7}
 800af7a:	b085      	sub	sp, #20
 800af7c:	af00      	add	r7, sp, #0
 800af7e:	6078      	str	r0, [r7, #4]
 800af80:	6039      	str	r1, [r7, #0]
 800af82:	2300      	movs	r3, #0
 800af84:	60fb      	str	r3, [r7, #12]
 800af86:	687b      	ldr	r3, [r7, #4]
 800af88:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800af8c:	2b01      	cmp	r3, #1
 800af8e:	d101      	bne.n	800af94 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 800af90:	2302      	movs	r3, #2
 800af92:	e03d      	b.n	800b010 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 800af94:	687b      	ldr	r3, [r7, #4]
 800af96:	2201      	movs	r2, #1
 800af98:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800af9c:	68fb      	ldr	r3, [r7, #12]
 800af9e:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 800afa2:	683b      	ldr	r3, [r7, #0]
 800afa4:	68db      	ldr	r3, [r3, #12]
 800afa6:	4313      	orrs	r3, r2
 800afa8:	60fb      	str	r3, [r7, #12]
 800afaa:	68fb      	ldr	r3, [r7, #12]
 800afac:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800afb0:	683b      	ldr	r3, [r7, #0]
 800afb2:	689b      	ldr	r3, [r3, #8]
 800afb4:	4313      	orrs	r3, r2
 800afb6:	60fb      	str	r3, [r7, #12]
 800afb8:	68fb      	ldr	r3, [r7, #12]
 800afba:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 800afbe:	683b      	ldr	r3, [r7, #0]
 800afc0:	685b      	ldr	r3, [r3, #4]
 800afc2:	4313      	orrs	r3, r2
 800afc4:	60fb      	str	r3, [r7, #12]
 800afc6:	68fb      	ldr	r3, [r7, #12]
 800afc8:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 800afcc:	683b      	ldr	r3, [r7, #0]
 800afce:	681b      	ldr	r3, [r3, #0]
 800afd0:	4313      	orrs	r3, r2
 800afd2:	60fb      	str	r3, [r7, #12]
 800afd4:	68fb      	ldr	r3, [r7, #12]
 800afd6:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800afda:	683b      	ldr	r3, [r7, #0]
 800afdc:	691b      	ldr	r3, [r3, #16]
 800afde:	4313      	orrs	r3, r2
 800afe0:	60fb      	str	r3, [r7, #12]
 800afe2:	68fb      	ldr	r3, [r7, #12]
 800afe4:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 800afe8:	683b      	ldr	r3, [r7, #0]
 800afea:	695b      	ldr	r3, [r3, #20]
 800afec:	4313      	orrs	r3, r2
 800afee:	60fb      	str	r3, [r7, #12]
 800aff0:	68fb      	ldr	r3, [r7, #12]
 800aff2:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 800aff6:	683b      	ldr	r3, [r7, #0]
 800aff8:	69db      	ldr	r3, [r3, #28]
 800affa:	4313      	orrs	r3, r2
 800affc:	60fb      	str	r3, [r7, #12]
 800affe:	687b      	ldr	r3, [r7, #4]
 800b000:	681b      	ldr	r3, [r3, #0]
 800b002:	68fa      	ldr	r2, [r7, #12]
 800b004:	645a      	str	r2, [r3, #68]	; 0x44
 800b006:	687b      	ldr	r3, [r7, #4]
 800b008:	2200      	movs	r2, #0
 800b00a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b00e:	2300      	movs	r3, #0
 800b010:	4618      	mov	r0, r3
 800b012:	3714      	adds	r7, #20
 800b014:	46bd      	mov	sp, r7
 800b016:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b01a:	4770      	bx	lr

0800b01c <HAL_TIMEx_CommutCallback>:
 800b01c:	b480      	push	{r7}
 800b01e:	b083      	sub	sp, #12
 800b020:	af00      	add	r7, sp, #0
 800b022:	6078      	str	r0, [r7, #4]
 800b024:	bf00      	nop
 800b026:	370c      	adds	r7, #12
 800b028:	46bd      	mov	sp, r7
 800b02a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b02e:	4770      	bx	lr

0800b030 <HAL_TIMEx_BreakCallback>:
 800b030:	b480      	push	{r7}
 800b032:	b083      	sub	sp, #12
 800b034:	af00      	add	r7, sp, #0
 800b036:	6078      	str	r0, [r7, #4]
 800b038:	bf00      	nop
 800b03a:	370c      	adds	r7, #12
 800b03c:	46bd      	mov	sp, r7
 800b03e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b042:	4770      	bx	lr

0800b044 <HAL_UART_Init>:
 800b044:	b580      	push	{r7, lr}
 800b046:	b082      	sub	sp, #8
 800b048:	af00      	add	r7, sp, #0
 800b04a:	6078      	str	r0, [r7, #4]
 800b04c:	687b      	ldr	r3, [r7, #4]
 800b04e:	2b00      	cmp	r3, #0
 800b050:	d101      	bne.n	800b056 <HAL_UART_Init+0x12>
 800b052:	2301      	movs	r3, #1
 800b054:	e03f      	b.n	800b0d6 <HAL_UART_Init+0x92>
 800b056:	687b      	ldr	r3, [r7, #4]
 800b058:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800b05c:	b2db      	uxtb	r3, r3
 800b05e:	2b00      	cmp	r3, #0
 800b060:	d106      	bne.n	800b070 <HAL_UART_Init+0x2c>
 800b062:	687b      	ldr	r3, [r7, #4]
 800b064:	2200      	movs	r2, #0
 800b066:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b06a:	6878      	ldr	r0, [r7, #4]
 800b06c:	f7fb f95c 	bl	8006328 <HAL_UART_MspInit>
 800b070:	687b      	ldr	r3, [r7, #4]
 800b072:	2224      	movs	r2, #36	; 0x24
 800b074:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b078:	687b      	ldr	r3, [r7, #4]
 800b07a:	681b      	ldr	r3, [r3, #0]
 800b07c:	68da      	ldr	r2, [r3, #12]
 800b07e:	687b      	ldr	r3, [r7, #4]
 800b080:	681b      	ldr	r3, [r3, #0]
 800b082:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800b086:	60da      	str	r2, [r3, #12]
 800b088:	6878      	ldr	r0, [r7, #4]
 800b08a:	f000 fe81 	bl	800bd90 <UART_SetConfig>
 800b08e:	687b      	ldr	r3, [r7, #4]
 800b090:	681b      	ldr	r3, [r3, #0]
 800b092:	691a      	ldr	r2, [r3, #16]
 800b094:	687b      	ldr	r3, [r7, #4]
 800b096:	681b      	ldr	r3, [r3, #0]
 800b098:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800b09c:	611a      	str	r2, [r3, #16]
 800b09e:	687b      	ldr	r3, [r7, #4]
 800b0a0:	681b      	ldr	r3, [r3, #0]
 800b0a2:	695a      	ldr	r2, [r3, #20]
 800b0a4:	687b      	ldr	r3, [r7, #4]
 800b0a6:	681b      	ldr	r3, [r3, #0]
 800b0a8:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800b0ac:	615a      	str	r2, [r3, #20]
 800b0ae:	687b      	ldr	r3, [r7, #4]
 800b0b0:	681b      	ldr	r3, [r3, #0]
 800b0b2:	68da      	ldr	r2, [r3, #12]
 800b0b4:	687b      	ldr	r3, [r7, #4]
 800b0b6:	681b      	ldr	r3, [r3, #0]
 800b0b8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800b0bc:	60da      	str	r2, [r3, #12]
 800b0be:	687b      	ldr	r3, [r7, #4]
 800b0c0:	2200      	movs	r2, #0
 800b0c2:	641a      	str	r2, [r3, #64]	; 0x40
 800b0c4:	687b      	ldr	r3, [r7, #4]
 800b0c6:	2220      	movs	r2, #32
 800b0c8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b0cc:	687b      	ldr	r3, [r7, #4]
 800b0ce:	2220      	movs	r2, #32
 800b0d0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b0d4:	2300      	movs	r3, #0
 800b0d6:	4618      	mov	r0, r3
 800b0d8:	3708      	adds	r7, #8
 800b0da:	46bd      	mov	sp, r7
 800b0dc:	bd80      	pop	{r7, pc}

0800b0de <HAL_UART_Transmit>:
 800b0de:	b580      	push	{r7, lr}
 800b0e0:	b08a      	sub	sp, #40	; 0x28
 800b0e2:	af02      	add	r7, sp, #8
 800b0e4:	60f8      	str	r0, [r7, #12]
 800b0e6:	60b9      	str	r1, [r7, #8]
 800b0e8:	603b      	str	r3, [r7, #0]
 800b0ea:	4613      	mov	r3, r2
 800b0ec:	80fb      	strh	r3, [r7, #6]
 800b0ee:	2300      	movs	r3, #0
 800b0f0:	617b      	str	r3, [r7, #20]
 800b0f2:	68fb      	ldr	r3, [r7, #12]
 800b0f4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800b0f8:	b2db      	uxtb	r3, r3
 800b0fa:	2b20      	cmp	r3, #32
 800b0fc:	d17c      	bne.n	800b1f8 <HAL_UART_Transmit+0x11a>
 800b0fe:	68bb      	ldr	r3, [r7, #8]
 800b100:	2b00      	cmp	r3, #0
 800b102:	d002      	beq.n	800b10a <HAL_UART_Transmit+0x2c>
 800b104:	88fb      	ldrh	r3, [r7, #6]
 800b106:	2b00      	cmp	r3, #0
 800b108:	d101      	bne.n	800b10e <HAL_UART_Transmit+0x30>
 800b10a:	2301      	movs	r3, #1
 800b10c:	e075      	b.n	800b1fa <HAL_UART_Transmit+0x11c>
 800b10e:	68fb      	ldr	r3, [r7, #12]
 800b110:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b114:	2b01      	cmp	r3, #1
 800b116:	d101      	bne.n	800b11c <HAL_UART_Transmit+0x3e>
 800b118:	2302      	movs	r3, #2
 800b11a:	e06e      	b.n	800b1fa <HAL_UART_Transmit+0x11c>
 800b11c:	68fb      	ldr	r3, [r7, #12]
 800b11e:	2201      	movs	r2, #1
 800b120:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b124:	68fb      	ldr	r3, [r7, #12]
 800b126:	2200      	movs	r2, #0
 800b128:	641a      	str	r2, [r3, #64]	; 0x40
 800b12a:	68fb      	ldr	r3, [r7, #12]
 800b12c:	2221      	movs	r2, #33	; 0x21
 800b12e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b132:	f7fb fbdb 	bl	80068ec <HAL_GetTick>
 800b136:	6178      	str	r0, [r7, #20]
 800b138:	68fb      	ldr	r3, [r7, #12]
 800b13a:	88fa      	ldrh	r2, [r7, #6]
 800b13c:	849a      	strh	r2, [r3, #36]	; 0x24
 800b13e:	68fb      	ldr	r3, [r7, #12]
 800b140:	88fa      	ldrh	r2, [r7, #6]
 800b142:	84da      	strh	r2, [r3, #38]	; 0x26
 800b144:	68fb      	ldr	r3, [r7, #12]
 800b146:	689b      	ldr	r3, [r3, #8]
 800b148:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b14c:	d108      	bne.n	800b160 <HAL_UART_Transmit+0x82>
 800b14e:	68fb      	ldr	r3, [r7, #12]
 800b150:	691b      	ldr	r3, [r3, #16]
 800b152:	2b00      	cmp	r3, #0
 800b154:	d104      	bne.n	800b160 <HAL_UART_Transmit+0x82>
 800b156:	2300      	movs	r3, #0
 800b158:	61fb      	str	r3, [r7, #28]
 800b15a:	68bb      	ldr	r3, [r7, #8]
 800b15c:	61bb      	str	r3, [r7, #24]
 800b15e:	e003      	b.n	800b168 <HAL_UART_Transmit+0x8a>
 800b160:	68bb      	ldr	r3, [r7, #8]
 800b162:	61fb      	str	r3, [r7, #28]
 800b164:	2300      	movs	r3, #0
 800b166:	61bb      	str	r3, [r7, #24]
 800b168:	68fb      	ldr	r3, [r7, #12]
 800b16a:	2200      	movs	r2, #0
 800b16c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b170:	e02a      	b.n	800b1c8 <HAL_UART_Transmit+0xea>
 800b172:	683b      	ldr	r3, [r7, #0]
 800b174:	9300      	str	r3, [sp, #0]
 800b176:	697b      	ldr	r3, [r7, #20]
 800b178:	2200      	movs	r2, #0
 800b17a:	2180      	movs	r1, #128	; 0x80
 800b17c:	68f8      	ldr	r0, [r7, #12]
 800b17e:	f000 fbc1 	bl	800b904 <UART_WaitOnFlagUntilTimeout>
 800b182:	4603      	mov	r3, r0
 800b184:	2b00      	cmp	r3, #0
 800b186:	d001      	beq.n	800b18c <HAL_UART_Transmit+0xae>
 800b188:	2303      	movs	r3, #3
 800b18a:	e036      	b.n	800b1fa <HAL_UART_Transmit+0x11c>
 800b18c:	69fb      	ldr	r3, [r7, #28]
 800b18e:	2b00      	cmp	r3, #0
 800b190:	d10b      	bne.n	800b1aa <HAL_UART_Transmit+0xcc>
 800b192:	69bb      	ldr	r3, [r7, #24]
 800b194:	881b      	ldrh	r3, [r3, #0]
 800b196:	461a      	mov	r2, r3
 800b198:	68fb      	ldr	r3, [r7, #12]
 800b19a:	681b      	ldr	r3, [r3, #0]
 800b19c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800b1a0:	605a      	str	r2, [r3, #4]
 800b1a2:	69bb      	ldr	r3, [r7, #24]
 800b1a4:	3302      	adds	r3, #2
 800b1a6:	61bb      	str	r3, [r7, #24]
 800b1a8:	e007      	b.n	800b1ba <HAL_UART_Transmit+0xdc>
 800b1aa:	69fb      	ldr	r3, [r7, #28]
 800b1ac:	781a      	ldrb	r2, [r3, #0]
 800b1ae:	68fb      	ldr	r3, [r7, #12]
 800b1b0:	681b      	ldr	r3, [r3, #0]
 800b1b2:	605a      	str	r2, [r3, #4]
 800b1b4:	69fb      	ldr	r3, [r7, #28]
 800b1b6:	3301      	adds	r3, #1
 800b1b8:	61fb      	str	r3, [r7, #28]
 800b1ba:	68fb      	ldr	r3, [r7, #12]
 800b1bc:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800b1be:	b29b      	uxth	r3, r3
 800b1c0:	3b01      	subs	r3, #1
 800b1c2:	b29a      	uxth	r2, r3
 800b1c4:	68fb      	ldr	r3, [r7, #12]
 800b1c6:	84da      	strh	r2, [r3, #38]	; 0x26
 800b1c8:	68fb      	ldr	r3, [r7, #12]
 800b1ca:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800b1cc:	b29b      	uxth	r3, r3
 800b1ce:	2b00      	cmp	r3, #0
 800b1d0:	d1cf      	bne.n	800b172 <HAL_UART_Transmit+0x94>
 800b1d2:	683b      	ldr	r3, [r7, #0]
 800b1d4:	9300      	str	r3, [sp, #0]
 800b1d6:	697b      	ldr	r3, [r7, #20]
 800b1d8:	2200      	movs	r2, #0
 800b1da:	2140      	movs	r1, #64	; 0x40
 800b1dc:	68f8      	ldr	r0, [r7, #12]
 800b1de:	f000 fb91 	bl	800b904 <UART_WaitOnFlagUntilTimeout>
 800b1e2:	4603      	mov	r3, r0
 800b1e4:	2b00      	cmp	r3, #0
 800b1e6:	d001      	beq.n	800b1ec <HAL_UART_Transmit+0x10e>
 800b1e8:	2303      	movs	r3, #3
 800b1ea:	e006      	b.n	800b1fa <HAL_UART_Transmit+0x11c>
 800b1ec:	68fb      	ldr	r3, [r7, #12]
 800b1ee:	2220      	movs	r2, #32
 800b1f0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b1f4:	2300      	movs	r3, #0
 800b1f6:	e000      	b.n	800b1fa <HAL_UART_Transmit+0x11c>
 800b1f8:	2302      	movs	r3, #2
 800b1fa:	4618      	mov	r0, r3
 800b1fc:	3720      	adds	r7, #32
 800b1fe:	46bd      	mov	sp, r7
 800b200:	bd80      	pop	{r7, pc}

0800b202 <HAL_UART_Receive>:
 800b202:	b580      	push	{r7, lr}
 800b204:	b08a      	sub	sp, #40	; 0x28
 800b206:	af02      	add	r7, sp, #8
 800b208:	60f8      	str	r0, [r7, #12]
 800b20a:	60b9      	str	r1, [r7, #8]
 800b20c:	603b      	str	r3, [r7, #0]
 800b20e:	4613      	mov	r3, r2
 800b210:	80fb      	strh	r3, [r7, #6]
 800b212:	2300      	movs	r3, #0
 800b214:	617b      	str	r3, [r7, #20]
 800b216:	68fb      	ldr	r3, [r7, #12]
 800b218:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800b21c:	b2db      	uxtb	r3, r3
 800b21e:	2b20      	cmp	r3, #32
 800b220:	f040 808c 	bne.w	800b33c <HAL_UART_Receive+0x13a>
 800b224:	68bb      	ldr	r3, [r7, #8]
 800b226:	2b00      	cmp	r3, #0
 800b228:	d002      	beq.n	800b230 <HAL_UART_Receive+0x2e>
 800b22a:	88fb      	ldrh	r3, [r7, #6]
 800b22c:	2b00      	cmp	r3, #0
 800b22e:	d101      	bne.n	800b234 <HAL_UART_Receive+0x32>
 800b230:	2301      	movs	r3, #1
 800b232:	e084      	b.n	800b33e <HAL_UART_Receive+0x13c>
 800b234:	68fb      	ldr	r3, [r7, #12]
 800b236:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b23a:	2b01      	cmp	r3, #1
 800b23c:	d101      	bne.n	800b242 <HAL_UART_Receive+0x40>
 800b23e:	2302      	movs	r3, #2
 800b240:	e07d      	b.n	800b33e <HAL_UART_Receive+0x13c>
 800b242:	68fb      	ldr	r3, [r7, #12]
 800b244:	2201      	movs	r2, #1
 800b246:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b24a:	68fb      	ldr	r3, [r7, #12]
 800b24c:	2200      	movs	r2, #0
 800b24e:	641a      	str	r2, [r3, #64]	; 0x40
 800b250:	68fb      	ldr	r3, [r7, #12]
 800b252:	2222      	movs	r2, #34	; 0x22
 800b254:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b258:	68fb      	ldr	r3, [r7, #12]
 800b25a:	2200      	movs	r2, #0
 800b25c:	631a      	str	r2, [r3, #48]	; 0x30
 800b25e:	f7fb fb45 	bl	80068ec <HAL_GetTick>
 800b262:	6178      	str	r0, [r7, #20]
 800b264:	68fb      	ldr	r3, [r7, #12]
 800b266:	88fa      	ldrh	r2, [r7, #6]
 800b268:	859a      	strh	r2, [r3, #44]	; 0x2c
 800b26a:	68fb      	ldr	r3, [r7, #12]
 800b26c:	88fa      	ldrh	r2, [r7, #6]
 800b26e:	85da      	strh	r2, [r3, #46]	; 0x2e
 800b270:	68fb      	ldr	r3, [r7, #12]
 800b272:	689b      	ldr	r3, [r3, #8]
 800b274:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b278:	d108      	bne.n	800b28c <HAL_UART_Receive+0x8a>
 800b27a:	68fb      	ldr	r3, [r7, #12]
 800b27c:	691b      	ldr	r3, [r3, #16]
 800b27e:	2b00      	cmp	r3, #0
 800b280:	d104      	bne.n	800b28c <HAL_UART_Receive+0x8a>
 800b282:	2300      	movs	r3, #0
 800b284:	61fb      	str	r3, [r7, #28]
 800b286:	68bb      	ldr	r3, [r7, #8]
 800b288:	61bb      	str	r3, [r7, #24]
 800b28a:	e003      	b.n	800b294 <HAL_UART_Receive+0x92>
 800b28c:	68bb      	ldr	r3, [r7, #8]
 800b28e:	61fb      	str	r3, [r7, #28]
 800b290:	2300      	movs	r3, #0
 800b292:	61bb      	str	r3, [r7, #24]
 800b294:	68fb      	ldr	r3, [r7, #12]
 800b296:	2200      	movs	r2, #0
 800b298:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b29c:	e043      	b.n	800b326 <HAL_UART_Receive+0x124>
 800b29e:	683b      	ldr	r3, [r7, #0]
 800b2a0:	9300      	str	r3, [sp, #0]
 800b2a2:	697b      	ldr	r3, [r7, #20]
 800b2a4:	2200      	movs	r2, #0
 800b2a6:	2120      	movs	r1, #32
 800b2a8:	68f8      	ldr	r0, [r7, #12]
 800b2aa:	f000 fb2b 	bl	800b904 <UART_WaitOnFlagUntilTimeout>
 800b2ae:	4603      	mov	r3, r0
 800b2b0:	2b00      	cmp	r3, #0
 800b2b2:	d001      	beq.n	800b2b8 <HAL_UART_Receive+0xb6>
 800b2b4:	2303      	movs	r3, #3
 800b2b6:	e042      	b.n	800b33e <HAL_UART_Receive+0x13c>
 800b2b8:	69fb      	ldr	r3, [r7, #28]
 800b2ba:	2b00      	cmp	r3, #0
 800b2bc:	d10c      	bne.n	800b2d8 <HAL_UART_Receive+0xd6>
 800b2be:	68fb      	ldr	r3, [r7, #12]
 800b2c0:	681b      	ldr	r3, [r3, #0]
 800b2c2:	685b      	ldr	r3, [r3, #4]
 800b2c4:	b29b      	uxth	r3, r3
 800b2c6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800b2ca:	b29a      	uxth	r2, r3
 800b2cc:	69bb      	ldr	r3, [r7, #24]
 800b2ce:	801a      	strh	r2, [r3, #0]
 800b2d0:	69bb      	ldr	r3, [r7, #24]
 800b2d2:	3302      	adds	r3, #2
 800b2d4:	61bb      	str	r3, [r7, #24]
 800b2d6:	e01f      	b.n	800b318 <HAL_UART_Receive+0x116>
 800b2d8:	68fb      	ldr	r3, [r7, #12]
 800b2da:	689b      	ldr	r3, [r3, #8]
 800b2dc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b2e0:	d007      	beq.n	800b2f2 <HAL_UART_Receive+0xf0>
 800b2e2:	68fb      	ldr	r3, [r7, #12]
 800b2e4:	689b      	ldr	r3, [r3, #8]
 800b2e6:	2b00      	cmp	r3, #0
 800b2e8:	d10a      	bne.n	800b300 <HAL_UART_Receive+0xfe>
 800b2ea:	68fb      	ldr	r3, [r7, #12]
 800b2ec:	691b      	ldr	r3, [r3, #16]
 800b2ee:	2b00      	cmp	r3, #0
 800b2f0:	d106      	bne.n	800b300 <HAL_UART_Receive+0xfe>
 800b2f2:	68fb      	ldr	r3, [r7, #12]
 800b2f4:	681b      	ldr	r3, [r3, #0]
 800b2f6:	685b      	ldr	r3, [r3, #4]
 800b2f8:	b2da      	uxtb	r2, r3
 800b2fa:	69fb      	ldr	r3, [r7, #28]
 800b2fc:	701a      	strb	r2, [r3, #0]
 800b2fe:	e008      	b.n	800b312 <HAL_UART_Receive+0x110>
 800b300:	68fb      	ldr	r3, [r7, #12]
 800b302:	681b      	ldr	r3, [r3, #0]
 800b304:	685b      	ldr	r3, [r3, #4]
 800b306:	b2db      	uxtb	r3, r3
 800b308:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800b30c:	b2da      	uxtb	r2, r3
 800b30e:	69fb      	ldr	r3, [r7, #28]
 800b310:	701a      	strb	r2, [r3, #0]
 800b312:	69fb      	ldr	r3, [r7, #28]
 800b314:	3301      	adds	r3, #1
 800b316:	61fb      	str	r3, [r7, #28]
 800b318:	68fb      	ldr	r3, [r7, #12]
 800b31a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800b31c:	b29b      	uxth	r3, r3
 800b31e:	3b01      	subs	r3, #1
 800b320:	b29a      	uxth	r2, r3
 800b322:	68fb      	ldr	r3, [r7, #12]
 800b324:	85da      	strh	r2, [r3, #46]	; 0x2e
 800b326:	68fb      	ldr	r3, [r7, #12]
 800b328:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800b32a:	b29b      	uxth	r3, r3
 800b32c:	2b00      	cmp	r3, #0
 800b32e:	d1b6      	bne.n	800b29e <HAL_UART_Receive+0x9c>
 800b330:	68fb      	ldr	r3, [r7, #12]
 800b332:	2220      	movs	r2, #32
 800b334:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b338:	2300      	movs	r3, #0
 800b33a:	e000      	b.n	800b33e <HAL_UART_Receive+0x13c>
 800b33c:	2302      	movs	r3, #2
 800b33e:	4618      	mov	r0, r3
 800b340:	3720      	adds	r7, #32
 800b342:	46bd      	mov	sp, r7
 800b344:	bd80      	pop	{r7, pc}

0800b346 <HAL_UART_Receive_IT>:
 800b346:	b580      	push	{r7, lr}
 800b348:	b084      	sub	sp, #16
 800b34a:	af00      	add	r7, sp, #0
 800b34c:	60f8      	str	r0, [r7, #12]
 800b34e:	60b9      	str	r1, [r7, #8]
 800b350:	4613      	mov	r3, r2
 800b352:	80fb      	strh	r3, [r7, #6]
 800b354:	68fb      	ldr	r3, [r7, #12]
 800b356:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800b35a:	b2db      	uxtb	r3, r3
 800b35c:	2b20      	cmp	r3, #32
 800b35e:	d11d      	bne.n	800b39c <HAL_UART_Receive_IT+0x56>
 800b360:	68bb      	ldr	r3, [r7, #8]
 800b362:	2b00      	cmp	r3, #0
 800b364:	d002      	beq.n	800b36c <HAL_UART_Receive_IT+0x26>
 800b366:	88fb      	ldrh	r3, [r7, #6]
 800b368:	2b00      	cmp	r3, #0
 800b36a:	d101      	bne.n	800b370 <HAL_UART_Receive_IT+0x2a>
 800b36c:	2301      	movs	r3, #1
 800b36e:	e016      	b.n	800b39e <HAL_UART_Receive_IT+0x58>
 800b370:	68fb      	ldr	r3, [r7, #12]
 800b372:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b376:	2b01      	cmp	r3, #1
 800b378:	d101      	bne.n	800b37e <HAL_UART_Receive_IT+0x38>
 800b37a:	2302      	movs	r3, #2
 800b37c:	e00f      	b.n	800b39e <HAL_UART_Receive_IT+0x58>
 800b37e:	68fb      	ldr	r3, [r7, #12]
 800b380:	2201      	movs	r2, #1
 800b382:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b386:	68fb      	ldr	r3, [r7, #12]
 800b388:	2200      	movs	r2, #0
 800b38a:	631a      	str	r2, [r3, #48]	; 0x30
 800b38c:	88fb      	ldrh	r3, [r7, #6]
 800b38e:	461a      	mov	r2, r3
 800b390:	68b9      	ldr	r1, [r7, #8]
 800b392:	68f8      	ldr	r0, [r7, #12]
 800b394:	f000 fb24 	bl	800b9e0 <UART_Start_Receive_IT>
 800b398:	4603      	mov	r3, r0
 800b39a:	e000      	b.n	800b39e <HAL_UART_Receive_IT+0x58>
 800b39c:	2302      	movs	r3, #2
 800b39e:	4618      	mov	r0, r3
 800b3a0:	3710      	adds	r7, #16
 800b3a2:	46bd      	mov	sp, r7
 800b3a4:	bd80      	pop	{r7, pc}
	...

0800b3a8 <HAL_UART_IRQHandler>:
 800b3a8:	b580      	push	{r7, lr}
 800b3aa:	b0ba      	sub	sp, #232	; 0xe8
 800b3ac:	af00      	add	r7, sp, #0
 800b3ae:	6078      	str	r0, [r7, #4]
 800b3b0:	687b      	ldr	r3, [r7, #4]
 800b3b2:	681b      	ldr	r3, [r3, #0]
 800b3b4:	681b      	ldr	r3, [r3, #0]
 800b3b6:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800b3ba:	687b      	ldr	r3, [r7, #4]
 800b3bc:	681b      	ldr	r3, [r3, #0]
 800b3be:	68db      	ldr	r3, [r3, #12]
 800b3c0:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800b3c4:	687b      	ldr	r3, [r7, #4]
 800b3c6:	681b      	ldr	r3, [r3, #0]
 800b3c8:	695b      	ldr	r3, [r3, #20]
 800b3ca:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800b3ce:	2300      	movs	r3, #0
 800b3d0:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800b3d4:	2300      	movs	r3, #0
 800b3d6:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800b3da:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b3de:	f003 030f 	and.w	r3, r3, #15
 800b3e2:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800b3e6:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800b3ea:	2b00      	cmp	r3, #0
 800b3ec:	d10f      	bne.n	800b40e <HAL_UART_IRQHandler+0x66>
 800b3ee:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b3f2:	f003 0320 	and.w	r3, r3, #32
 800b3f6:	2b00      	cmp	r3, #0
 800b3f8:	d009      	beq.n	800b40e <HAL_UART_IRQHandler+0x66>
 800b3fa:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800b3fe:	f003 0320 	and.w	r3, r3, #32
 800b402:	2b00      	cmp	r3, #0
 800b404:	d003      	beq.n	800b40e <HAL_UART_IRQHandler+0x66>
 800b406:	6878      	ldr	r0, [r7, #4]
 800b408:	f000 fc07 	bl	800bc1a <UART_Receive_IT>
 800b40c:	e256      	b.n	800b8bc <HAL_UART_IRQHandler+0x514>
 800b40e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800b412:	2b00      	cmp	r3, #0
 800b414:	f000 80de 	beq.w	800b5d4 <HAL_UART_IRQHandler+0x22c>
 800b418:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800b41c:	f003 0301 	and.w	r3, r3, #1
 800b420:	2b00      	cmp	r3, #0
 800b422:	d106      	bne.n	800b432 <HAL_UART_IRQHandler+0x8a>
 800b424:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800b428:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800b42c:	2b00      	cmp	r3, #0
 800b42e:	f000 80d1 	beq.w	800b5d4 <HAL_UART_IRQHandler+0x22c>
 800b432:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b436:	f003 0301 	and.w	r3, r3, #1
 800b43a:	2b00      	cmp	r3, #0
 800b43c:	d00b      	beq.n	800b456 <HAL_UART_IRQHandler+0xae>
 800b43e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800b442:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800b446:	2b00      	cmp	r3, #0
 800b448:	d005      	beq.n	800b456 <HAL_UART_IRQHandler+0xae>
 800b44a:	687b      	ldr	r3, [r7, #4]
 800b44c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b44e:	f043 0201 	orr.w	r2, r3, #1
 800b452:	687b      	ldr	r3, [r7, #4]
 800b454:	641a      	str	r2, [r3, #64]	; 0x40
 800b456:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b45a:	f003 0304 	and.w	r3, r3, #4
 800b45e:	2b00      	cmp	r3, #0
 800b460:	d00b      	beq.n	800b47a <HAL_UART_IRQHandler+0xd2>
 800b462:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800b466:	f003 0301 	and.w	r3, r3, #1
 800b46a:	2b00      	cmp	r3, #0
 800b46c:	d005      	beq.n	800b47a <HAL_UART_IRQHandler+0xd2>
 800b46e:	687b      	ldr	r3, [r7, #4]
 800b470:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b472:	f043 0202 	orr.w	r2, r3, #2
 800b476:	687b      	ldr	r3, [r7, #4]
 800b478:	641a      	str	r2, [r3, #64]	; 0x40
 800b47a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b47e:	f003 0302 	and.w	r3, r3, #2
 800b482:	2b00      	cmp	r3, #0
 800b484:	d00b      	beq.n	800b49e <HAL_UART_IRQHandler+0xf6>
 800b486:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800b48a:	f003 0301 	and.w	r3, r3, #1
 800b48e:	2b00      	cmp	r3, #0
 800b490:	d005      	beq.n	800b49e <HAL_UART_IRQHandler+0xf6>
 800b492:	687b      	ldr	r3, [r7, #4]
 800b494:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b496:	f043 0204 	orr.w	r2, r3, #4
 800b49a:	687b      	ldr	r3, [r7, #4]
 800b49c:	641a      	str	r2, [r3, #64]	; 0x40
 800b49e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b4a2:	f003 0308 	and.w	r3, r3, #8
 800b4a6:	2b00      	cmp	r3, #0
 800b4a8:	d011      	beq.n	800b4ce <HAL_UART_IRQHandler+0x126>
 800b4aa:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800b4ae:	f003 0320 	and.w	r3, r3, #32
 800b4b2:	2b00      	cmp	r3, #0
 800b4b4:	d105      	bne.n	800b4c2 <HAL_UART_IRQHandler+0x11a>
 800b4b6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800b4ba:	f003 0301 	and.w	r3, r3, #1
 800b4be:	2b00      	cmp	r3, #0
 800b4c0:	d005      	beq.n	800b4ce <HAL_UART_IRQHandler+0x126>
 800b4c2:	687b      	ldr	r3, [r7, #4]
 800b4c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b4c6:	f043 0208 	orr.w	r2, r3, #8
 800b4ca:	687b      	ldr	r3, [r7, #4]
 800b4cc:	641a      	str	r2, [r3, #64]	; 0x40
 800b4ce:	687b      	ldr	r3, [r7, #4]
 800b4d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b4d2:	2b00      	cmp	r3, #0
 800b4d4:	f000 81ed 	beq.w	800b8b2 <HAL_UART_IRQHandler+0x50a>
 800b4d8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b4dc:	f003 0320 	and.w	r3, r3, #32
 800b4e0:	2b00      	cmp	r3, #0
 800b4e2:	d008      	beq.n	800b4f6 <HAL_UART_IRQHandler+0x14e>
 800b4e4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800b4e8:	f003 0320 	and.w	r3, r3, #32
 800b4ec:	2b00      	cmp	r3, #0
 800b4ee:	d002      	beq.n	800b4f6 <HAL_UART_IRQHandler+0x14e>
 800b4f0:	6878      	ldr	r0, [r7, #4]
 800b4f2:	f000 fb92 	bl	800bc1a <UART_Receive_IT>
 800b4f6:	687b      	ldr	r3, [r7, #4]
 800b4f8:	681b      	ldr	r3, [r3, #0]
 800b4fa:	695b      	ldr	r3, [r3, #20]
 800b4fc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b500:	2b40      	cmp	r3, #64	; 0x40
 800b502:	bf0c      	ite	eq
 800b504:	2301      	moveq	r3, #1
 800b506:	2300      	movne	r3, #0
 800b508:	b2db      	uxtb	r3, r3
 800b50a:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800b50e:	687b      	ldr	r3, [r7, #4]
 800b510:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b512:	f003 0308 	and.w	r3, r3, #8
 800b516:	2b00      	cmp	r3, #0
 800b518:	d103      	bne.n	800b522 <HAL_UART_IRQHandler+0x17a>
 800b51a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800b51e:	2b00      	cmp	r3, #0
 800b520:	d04f      	beq.n	800b5c2 <HAL_UART_IRQHandler+0x21a>
 800b522:	6878      	ldr	r0, [r7, #4]
 800b524:	f000 fa9a 	bl	800ba5c <UART_EndRxTransfer>
 800b528:	687b      	ldr	r3, [r7, #4]
 800b52a:	681b      	ldr	r3, [r3, #0]
 800b52c:	695b      	ldr	r3, [r3, #20]
 800b52e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b532:	2b40      	cmp	r3, #64	; 0x40
 800b534:	d141      	bne.n	800b5ba <HAL_UART_IRQHandler+0x212>
 800b536:	687b      	ldr	r3, [r7, #4]
 800b538:	681b      	ldr	r3, [r3, #0]
 800b53a:	3314      	adds	r3, #20
 800b53c:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800b540:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800b544:	e853 3f00 	ldrex	r3, [r3]
 800b548:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800b54c:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800b550:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b554:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800b558:	687b      	ldr	r3, [r7, #4]
 800b55a:	681b      	ldr	r3, [r3, #0]
 800b55c:	3314      	adds	r3, #20
 800b55e:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 800b562:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800b566:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800b56a:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 800b56e:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 800b572:	e841 2300 	strex	r3, r2, [r1]
 800b576:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800b57a:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800b57e:	2b00      	cmp	r3, #0
 800b580:	d1d9      	bne.n	800b536 <HAL_UART_IRQHandler+0x18e>
 800b582:	687b      	ldr	r3, [r7, #4]
 800b584:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b586:	2b00      	cmp	r3, #0
 800b588:	d013      	beq.n	800b5b2 <HAL_UART_IRQHandler+0x20a>
 800b58a:	687b      	ldr	r3, [r7, #4]
 800b58c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b58e:	4a7d      	ldr	r2, [pc, #500]	; (800b784 <HAL_UART_IRQHandler+0x3dc>)
 800b590:	651a      	str	r2, [r3, #80]	; 0x50
 800b592:	687b      	ldr	r3, [r7, #4]
 800b594:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b596:	4618      	mov	r0, r3
 800b598:	f7fc fa08 	bl	80079ac <HAL_DMA_Abort_IT>
 800b59c:	4603      	mov	r3, r0
 800b59e:	2b00      	cmp	r3, #0
 800b5a0:	d016      	beq.n	800b5d0 <HAL_UART_IRQHandler+0x228>
 800b5a2:	687b      	ldr	r3, [r7, #4]
 800b5a4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b5a6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800b5a8:	687a      	ldr	r2, [r7, #4]
 800b5aa:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800b5ac:	4610      	mov	r0, r2
 800b5ae:	4798      	blx	r3
 800b5b0:	e00e      	b.n	800b5d0 <HAL_UART_IRQHandler+0x228>
 800b5b2:	6878      	ldr	r0, [r7, #4]
 800b5b4:	f000 f990 	bl	800b8d8 <HAL_UART_ErrorCallback>
 800b5b8:	e00a      	b.n	800b5d0 <HAL_UART_IRQHandler+0x228>
 800b5ba:	6878      	ldr	r0, [r7, #4]
 800b5bc:	f000 f98c 	bl	800b8d8 <HAL_UART_ErrorCallback>
 800b5c0:	e006      	b.n	800b5d0 <HAL_UART_IRQHandler+0x228>
 800b5c2:	6878      	ldr	r0, [r7, #4]
 800b5c4:	f000 f988 	bl	800b8d8 <HAL_UART_ErrorCallback>
 800b5c8:	687b      	ldr	r3, [r7, #4]
 800b5ca:	2200      	movs	r2, #0
 800b5cc:	641a      	str	r2, [r3, #64]	; 0x40
 800b5ce:	e170      	b.n	800b8b2 <HAL_UART_IRQHandler+0x50a>
 800b5d0:	bf00      	nop
 800b5d2:	e16e      	b.n	800b8b2 <HAL_UART_IRQHandler+0x50a>
 800b5d4:	687b      	ldr	r3, [r7, #4]
 800b5d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b5d8:	2b01      	cmp	r3, #1
 800b5da:	f040 814a 	bne.w	800b872 <HAL_UART_IRQHandler+0x4ca>
 800b5de:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b5e2:	f003 0310 	and.w	r3, r3, #16
 800b5e6:	2b00      	cmp	r3, #0
 800b5e8:	f000 8143 	beq.w	800b872 <HAL_UART_IRQHandler+0x4ca>
 800b5ec:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800b5f0:	f003 0310 	and.w	r3, r3, #16
 800b5f4:	2b00      	cmp	r3, #0
 800b5f6:	f000 813c 	beq.w	800b872 <HAL_UART_IRQHandler+0x4ca>
 800b5fa:	2300      	movs	r3, #0
 800b5fc:	60bb      	str	r3, [r7, #8]
 800b5fe:	687b      	ldr	r3, [r7, #4]
 800b600:	681b      	ldr	r3, [r3, #0]
 800b602:	681b      	ldr	r3, [r3, #0]
 800b604:	60bb      	str	r3, [r7, #8]
 800b606:	687b      	ldr	r3, [r7, #4]
 800b608:	681b      	ldr	r3, [r3, #0]
 800b60a:	685b      	ldr	r3, [r3, #4]
 800b60c:	60bb      	str	r3, [r7, #8]
 800b60e:	68bb      	ldr	r3, [r7, #8]
 800b610:	687b      	ldr	r3, [r7, #4]
 800b612:	681b      	ldr	r3, [r3, #0]
 800b614:	695b      	ldr	r3, [r3, #20]
 800b616:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b61a:	2b40      	cmp	r3, #64	; 0x40
 800b61c:	f040 80b4 	bne.w	800b788 <HAL_UART_IRQHandler+0x3e0>
 800b620:	687b      	ldr	r3, [r7, #4]
 800b622:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b624:	681b      	ldr	r3, [r3, #0]
 800b626:	685b      	ldr	r3, [r3, #4]
 800b628:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 800b62c:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 800b630:	2b00      	cmp	r3, #0
 800b632:	f000 8140 	beq.w	800b8b6 <HAL_UART_IRQHandler+0x50e>
 800b636:	687b      	ldr	r3, [r7, #4]
 800b638:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800b63a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800b63e:	429a      	cmp	r2, r3
 800b640:	f080 8139 	bcs.w	800b8b6 <HAL_UART_IRQHandler+0x50e>
 800b644:	687b      	ldr	r3, [r7, #4]
 800b646:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800b64a:	85da      	strh	r2, [r3, #46]	; 0x2e
 800b64c:	687b      	ldr	r3, [r7, #4]
 800b64e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b650:	69db      	ldr	r3, [r3, #28]
 800b652:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b656:	f000 8088 	beq.w	800b76a <HAL_UART_IRQHandler+0x3c2>
 800b65a:	687b      	ldr	r3, [r7, #4]
 800b65c:	681b      	ldr	r3, [r3, #0]
 800b65e:	330c      	adds	r3, #12
 800b660:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800b664:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800b668:	e853 3f00 	ldrex	r3, [r3]
 800b66c:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800b670:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800b674:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800b678:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800b67c:	687b      	ldr	r3, [r7, #4]
 800b67e:	681b      	ldr	r3, [r3, #0]
 800b680:	330c      	adds	r3, #12
 800b682:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 800b686:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800b68a:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800b68e:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800b692:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800b696:	e841 2300 	strex	r3, r2, [r1]
 800b69a:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800b69e:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800b6a2:	2b00      	cmp	r3, #0
 800b6a4:	d1d9      	bne.n	800b65a <HAL_UART_IRQHandler+0x2b2>
 800b6a6:	687b      	ldr	r3, [r7, #4]
 800b6a8:	681b      	ldr	r3, [r3, #0]
 800b6aa:	3314      	adds	r3, #20
 800b6ac:	677b      	str	r3, [r7, #116]	; 0x74
 800b6ae:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800b6b0:	e853 3f00 	ldrex	r3, [r3]
 800b6b4:	673b      	str	r3, [r7, #112]	; 0x70
 800b6b6:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800b6b8:	f023 0301 	bic.w	r3, r3, #1
 800b6bc:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800b6c0:	687b      	ldr	r3, [r7, #4]
 800b6c2:	681b      	ldr	r3, [r3, #0]
 800b6c4:	3314      	adds	r3, #20
 800b6c6:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800b6ca:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 800b6ce:	67fb      	str	r3, [r7, #124]	; 0x7c
 800b6d0:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800b6d2:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800b6d6:	e841 2300 	strex	r3, r2, [r1]
 800b6da:	67bb      	str	r3, [r7, #120]	; 0x78
 800b6dc:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800b6de:	2b00      	cmp	r3, #0
 800b6e0:	d1e1      	bne.n	800b6a6 <HAL_UART_IRQHandler+0x2fe>
 800b6e2:	687b      	ldr	r3, [r7, #4]
 800b6e4:	681b      	ldr	r3, [r3, #0]
 800b6e6:	3314      	adds	r3, #20
 800b6e8:	663b      	str	r3, [r7, #96]	; 0x60
 800b6ea:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800b6ec:	e853 3f00 	ldrex	r3, [r3]
 800b6f0:	65fb      	str	r3, [r7, #92]	; 0x5c
 800b6f2:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800b6f4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b6f8:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800b6fc:	687b      	ldr	r3, [r7, #4]
 800b6fe:	681b      	ldr	r3, [r3, #0]
 800b700:	3314      	adds	r3, #20
 800b702:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800b706:	66fa      	str	r2, [r7, #108]	; 0x6c
 800b708:	66bb      	str	r3, [r7, #104]	; 0x68
 800b70a:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800b70c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800b70e:	e841 2300 	strex	r3, r2, [r1]
 800b712:	667b      	str	r3, [r7, #100]	; 0x64
 800b714:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800b716:	2b00      	cmp	r3, #0
 800b718:	d1e3      	bne.n	800b6e2 <HAL_UART_IRQHandler+0x33a>
 800b71a:	687b      	ldr	r3, [r7, #4]
 800b71c:	2220      	movs	r2, #32
 800b71e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b722:	687b      	ldr	r3, [r7, #4]
 800b724:	2200      	movs	r2, #0
 800b726:	631a      	str	r2, [r3, #48]	; 0x30
 800b728:	687b      	ldr	r3, [r7, #4]
 800b72a:	681b      	ldr	r3, [r3, #0]
 800b72c:	330c      	adds	r3, #12
 800b72e:	64fb      	str	r3, [r7, #76]	; 0x4c
 800b730:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800b732:	e853 3f00 	ldrex	r3, [r3]
 800b736:	64bb      	str	r3, [r7, #72]	; 0x48
 800b738:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800b73a:	f023 0310 	bic.w	r3, r3, #16
 800b73e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800b742:	687b      	ldr	r3, [r7, #4]
 800b744:	681b      	ldr	r3, [r3, #0]
 800b746:	330c      	adds	r3, #12
 800b748:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 800b74c:	65ba      	str	r2, [r7, #88]	; 0x58
 800b74e:	657b      	str	r3, [r7, #84]	; 0x54
 800b750:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800b752:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800b754:	e841 2300 	strex	r3, r2, [r1]
 800b758:	653b      	str	r3, [r7, #80]	; 0x50
 800b75a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800b75c:	2b00      	cmp	r3, #0
 800b75e:	d1e3      	bne.n	800b728 <HAL_UART_IRQHandler+0x380>
 800b760:	687b      	ldr	r3, [r7, #4]
 800b762:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b764:	4618      	mov	r0, r3
 800b766:	f7fc f8b1 	bl	80078cc <HAL_DMA_Abort>
 800b76a:	687b      	ldr	r3, [r7, #4]
 800b76c:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800b76e:	687b      	ldr	r3, [r7, #4]
 800b770:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800b772:	b29b      	uxth	r3, r3
 800b774:	1ad3      	subs	r3, r2, r3
 800b776:	b29b      	uxth	r3, r3
 800b778:	4619      	mov	r1, r3
 800b77a:	6878      	ldr	r0, [r7, #4]
 800b77c:	f000 f8b6 	bl	800b8ec <HAL_UARTEx_RxEventCallback>
 800b780:	e099      	b.n	800b8b6 <HAL_UART_IRQHandler+0x50e>
 800b782:	bf00      	nop
 800b784:	0800bb23 	.word	0x0800bb23
 800b788:	687b      	ldr	r3, [r7, #4]
 800b78a:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800b78c:	687b      	ldr	r3, [r7, #4]
 800b78e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800b790:	b29b      	uxth	r3, r3
 800b792:	1ad3      	subs	r3, r2, r3
 800b794:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 800b798:	687b      	ldr	r3, [r7, #4]
 800b79a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800b79c:	b29b      	uxth	r3, r3
 800b79e:	2b00      	cmp	r3, #0
 800b7a0:	f000 808b 	beq.w	800b8ba <HAL_UART_IRQHandler+0x512>
 800b7a4:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800b7a8:	2b00      	cmp	r3, #0
 800b7aa:	f000 8086 	beq.w	800b8ba <HAL_UART_IRQHandler+0x512>
 800b7ae:	687b      	ldr	r3, [r7, #4]
 800b7b0:	681b      	ldr	r3, [r3, #0]
 800b7b2:	330c      	adds	r3, #12
 800b7b4:	63bb      	str	r3, [r7, #56]	; 0x38
 800b7b6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800b7b8:	e853 3f00 	ldrex	r3, [r3]
 800b7bc:	637b      	str	r3, [r7, #52]	; 0x34
 800b7be:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b7c0:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800b7c4:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800b7c8:	687b      	ldr	r3, [r7, #4]
 800b7ca:	681b      	ldr	r3, [r3, #0]
 800b7cc:	330c      	adds	r3, #12
 800b7ce:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 800b7d2:	647a      	str	r2, [r7, #68]	; 0x44
 800b7d4:	643b      	str	r3, [r7, #64]	; 0x40
 800b7d6:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800b7d8:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800b7da:	e841 2300 	strex	r3, r2, [r1]
 800b7de:	63fb      	str	r3, [r7, #60]	; 0x3c
 800b7e0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800b7e2:	2b00      	cmp	r3, #0
 800b7e4:	d1e3      	bne.n	800b7ae <HAL_UART_IRQHandler+0x406>
 800b7e6:	687b      	ldr	r3, [r7, #4]
 800b7e8:	681b      	ldr	r3, [r3, #0]
 800b7ea:	3314      	adds	r3, #20
 800b7ec:	627b      	str	r3, [r7, #36]	; 0x24
 800b7ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b7f0:	e853 3f00 	ldrex	r3, [r3]
 800b7f4:	623b      	str	r3, [r7, #32]
 800b7f6:	6a3b      	ldr	r3, [r7, #32]
 800b7f8:	f023 0301 	bic.w	r3, r3, #1
 800b7fc:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800b800:	687b      	ldr	r3, [r7, #4]
 800b802:	681b      	ldr	r3, [r3, #0]
 800b804:	3314      	adds	r3, #20
 800b806:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800b80a:	633a      	str	r2, [r7, #48]	; 0x30
 800b80c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b80e:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800b810:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800b812:	e841 2300 	strex	r3, r2, [r1]
 800b816:	62bb      	str	r3, [r7, #40]	; 0x28
 800b818:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b81a:	2b00      	cmp	r3, #0
 800b81c:	d1e3      	bne.n	800b7e6 <HAL_UART_IRQHandler+0x43e>
 800b81e:	687b      	ldr	r3, [r7, #4]
 800b820:	2220      	movs	r2, #32
 800b822:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b826:	687b      	ldr	r3, [r7, #4]
 800b828:	2200      	movs	r2, #0
 800b82a:	631a      	str	r2, [r3, #48]	; 0x30
 800b82c:	687b      	ldr	r3, [r7, #4]
 800b82e:	681b      	ldr	r3, [r3, #0]
 800b830:	330c      	adds	r3, #12
 800b832:	613b      	str	r3, [r7, #16]
 800b834:	693b      	ldr	r3, [r7, #16]
 800b836:	e853 3f00 	ldrex	r3, [r3]
 800b83a:	60fb      	str	r3, [r7, #12]
 800b83c:	68fb      	ldr	r3, [r7, #12]
 800b83e:	f023 0310 	bic.w	r3, r3, #16
 800b842:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800b846:	687b      	ldr	r3, [r7, #4]
 800b848:	681b      	ldr	r3, [r3, #0]
 800b84a:	330c      	adds	r3, #12
 800b84c:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 800b850:	61fa      	str	r2, [r7, #28]
 800b852:	61bb      	str	r3, [r7, #24]
 800b854:	69b9      	ldr	r1, [r7, #24]
 800b856:	69fa      	ldr	r2, [r7, #28]
 800b858:	e841 2300 	strex	r3, r2, [r1]
 800b85c:	617b      	str	r3, [r7, #20]
 800b85e:	697b      	ldr	r3, [r7, #20]
 800b860:	2b00      	cmp	r3, #0
 800b862:	d1e3      	bne.n	800b82c <HAL_UART_IRQHandler+0x484>
 800b864:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800b868:	4619      	mov	r1, r3
 800b86a:	6878      	ldr	r0, [r7, #4]
 800b86c:	f000 f83e 	bl	800b8ec <HAL_UARTEx_RxEventCallback>
 800b870:	e023      	b.n	800b8ba <HAL_UART_IRQHandler+0x512>
 800b872:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b876:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800b87a:	2b00      	cmp	r3, #0
 800b87c:	d009      	beq.n	800b892 <HAL_UART_IRQHandler+0x4ea>
 800b87e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800b882:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800b886:	2b00      	cmp	r3, #0
 800b888:	d003      	beq.n	800b892 <HAL_UART_IRQHandler+0x4ea>
 800b88a:	6878      	ldr	r0, [r7, #4]
 800b88c:	f000 f95d 	bl	800bb4a <UART_Transmit_IT>
 800b890:	e014      	b.n	800b8bc <HAL_UART_IRQHandler+0x514>
 800b892:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b896:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b89a:	2b00      	cmp	r3, #0
 800b89c:	d00e      	beq.n	800b8bc <HAL_UART_IRQHandler+0x514>
 800b89e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800b8a2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b8a6:	2b00      	cmp	r3, #0
 800b8a8:	d008      	beq.n	800b8bc <HAL_UART_IRQHandler+0x514>
 800b8aa:	6878      	ldr	r0, [r7, #4]
 800b8ac:	f000 f99d 	bl	800bbea <UART_EndTransmit_IT>
 800b8b0:	e004      	b.n	800b8bc <HAL_UART_IRQHandler+0x514>
 800b8b2:	bf00      	nop
 800b8b4:	e002      	b.n	800b8bc <HAL_UART_IRQHandler+0x514>
 800b8b6:	bf00      	nop
 800b8b8:	e000      	b.n	800b8bc <HAL_UART_IRQHandler+0x514>
 800b8ba:	bf00      	nop
 800b8bc:	37e8      	adds	r7, #232	; 0xe8
 800b8be:	46bd      	mov	sp, r7
 800b8c0:	bd80      	pop	{r7, pc}
 800b8c2:	bf00      	nop

0800b8c4 <HAL_UART_TxCpltCallback>:
 800b8c4:	b480      	push	{r7}
 800b8c6:	b083      	sub	sp, #12
 800b8c8:	af00      	add	r7, sp, #0
 800b8ca:	6078      	str	r0, [r7, #4]
 800b8cc:	bf00      	nop
 800b8ce:	370c      	adds	r7, #12
 800b8d0:	46bd      	mov	sp, r7
 800b8d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8d6:	4770      	bx	lr

0800b8d8 <HAL_UART_ErrorCallback>:
 800b8d8:	b480      	push	{r7}
 800b8da:	b083      	sub	sp, #12
 800b8dc:	af00      	add	r7, sp, #0
 800b8de:	6078      	str	r0, [r7, #4]
 800b8e0:	bf00      	nop
 800b8e2:	370c      	adds	r7, #12
 800b8e4:	46bd      	mov	sp, r7
 800b8e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8ea:	4770      	bx	lr

0800b8ec <HAL_UARTEx_RxEventCallback>:
 800b8ec:	b480      	push	{r7}
 800b8ee:	b083      	sub	sp, #12
 800b8f0:	af00      	add	r7, sp, #0
 800b8f2:	6078      	str	r0, [r7, #4]
 800b8f4:	460b      	mov	r3, r1
 800b8f6:	807b      	strh	r3, [r7, #2]
 800b8f8:	bf00      	nop
 800b8fa:	370c      	adds	r7, #12
 800b8fc:	46bd      	mov	sp, r7
 800b8fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b902:	4770      	bx	lr

0800b904 <UART_WaitOnFlagUntilTimeout>:
 800b904:	b580      	push	{r7, lr}
 800b906:	b090      	sub	sp, #64	; 0x40
 800b908:	af00      	add	r7, sp, #0
 800b90a:	60f8      	str	r0, [r7, #12]
 800b90c:	60b9      	str	r1, [r7, #8]
 800b90e:	603b      	str	r3, [r7, #0]
 800b910:	4613      	mov	r3, r2
 800b912:	71fb      	strb	r3, [r7, #7]
 800b914:	e050      	b.n	800b9b8 <UART_WaitOnFlagUntilTimeout+0xb4>
 800b916:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800b918:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b91c:	d04c      	beq.n	800b9b8 <UART_WaitOnFlagUntilTimeout+0xb4>
 800b91e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800b920:	2b00      	cmp	r3, #0
 800b922:	d007      	beq.n	800b934 <UART_WaitOnFlagUntilTimeout+0x30>
 800b924:	f7fa ffe2 	bl	80068ec <HAL_GetTick>
 800b928:	4602      	mov	r2, r0
 800b92a:	683b      	ldr	r3, [r7, #0]
 800b92c:	1ad3      	subs	r3, r2, r3
 800b92e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800b930:	429a      	cmp	r2, r3
 800b932:	d241      	bcs.n	800b9b8 <UART_WaitOnFlagUntilTimeout+0xb4>
 800b934:	68fb      	ldr	r3, [r7, #12]
 800b936:	681b      	ldr	r3, [r3, #0]
 800b938:	330c      	adds	r3, #12
 800b93a:	62bb      	str	r3, [r7, #40]	; 0x28
 800b93c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b93e:	e853 3f00 	ldrex	r3, [r3]
 800b942:	627b      	str	r3, [r7, #36]	; 0x24
 800b944:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b946:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800b94a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800b94c:	68fb      	ldr	r3, [r7, #12]
 800b94e:	681b      	ldr	r3, [r3, #0]
 800b950:	330c      	adds	r3, #12
 800b952:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800b954:	637a      	str	r2, [r7, #52]	; 0x34
 800b956:	633b      	str	r3, [r7, #48]	; 0x30
 800b958:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800b95a:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800b95c:	e841 2300 	strex	r3, r2, [r1]
 800b960:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b962:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b964:	2b00      	cmp	r3, #0
 800b966:	d1e5      	bne.n	800b934 <UART_WaitOnFlagUntilTimeout+0x30>
 800b968:	68fb      	ldr	r3, [r7, #12]
 800b96a:	681b      	ldr	r3, [r3, #0]
 800b96c:	3314      	adds	r3, #20
 800b96e:	617b      	str	r3, [r7, #20]
 800b970:	697b      	ldr	r3, [r7, #20]
 800b972:	e853 3f00 	ldrex	r3, [r3]
 800b976:	613b      	str	r3, [r7, #16]
 800b978:	693b      	ldr	r3, [r7, #16]
 800b97a:	f023 0301 	bic.w	r3, r3, #1
 800b97e:	63bb      	str	r3, [r7, #56]	; 0x38
 800b980:	68fb      	ldr	r3, [r7, #12]
 800b982:	681b      	ldr	r3, [r3, #0]
 800b984:	3314      	adds	r3, #20
 800b986:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800b988:	623a      	str	r2, [r7, #32]
 800b98a:	61fb      	str	r3, [r7, #28]
 800b98c:	69f9      	ldr	r1, [r7, #28]
 800b98e:	6a3a      	ldr	r2, [r7, #32]
 800b990:	e841 2300 	strex	r3, r2, [r1]
 800b994:	61bb      	str	r3, [r7, #24]
 800b996:	69bb      	ldr	r3, [r7, #24]
 800b998:	2b00      	cmp	r3, #0
 800b99a:	d1e5      	bne.n	800b968 <UART_WaitOnFlagUntilTimeout+0x64>
 800b99c:	68fb      	ldr	r3, [r7, #12]
 800b99e:	2220      	movs	r2, #32
 800b9a0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b9a4:	68fb      	ldr	r3, [r7, #12]
 800b9a6:	2220      	movs	r2, #32
 800b9a8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b9ac:	68fb      	ldr	r3, [r7, #12]
 800b9ae:	2200      	movs	r2, #0
 800b9b0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b9b4:	2303      	movs	r3, #3
 800b9b6:	e00f      	b.n	800b9d8 <UART_WaitOnFlagUntilTimeout+0xd4>
 800b9b8:	68fb      	ldr	r3, [r7, #12]
 800b9ba:	681b      	ldr	r3, [r3, #0]
 800b9bc:	681a      	ldr	r2, [r3, #0]
 800b9be:	68bb      	ldr	r3, [r7, #8]
 800b9c0:	4013      	ands	r3, r2
 800b9c2:	68ba      	ldr	r2, [r7, #8]
 800b9c4:	429a      	cmp	r2, r3
 800b9c6:	bf0c      	ite	eq
 800b9c8:	2301      	moveq	r3, #1
 800b9ca:	2300      	movne	r3, #0
 800b9cc:	b2db      	uxtb	r3, r3
 800b9ce:	461a      	mov	r2, r3
 800b9d0:	79fb      	ldrb	r3, [r7, #7]
 800b9d2:	429a      	cmp	r2, r3
 800b9d4:	d09f      	beq.n	800b916 <UART_WaitOnFlagUntilTimeout+0x12>
 800b9d6:	2300      	movs	r3, #0
 800b9d8:	4618      	mov	r0, r3
 800b9da:	3740      	adds	r7, #64	; 0x40
 800b9dc:	46bd      	mov	sp, r7
 800b9de:	bd80      	pop	{r7, pc}

0800b9e0 <UART_Start_Receive_IT>:
 800b9e0:	b480      	push	{r7}
 800b9e2:	b085      	sub	sp, #20
 800b9e4:	af00      	add	r7, sp, #0
 800b9e6:	60f8      	str	r0, [r7, #12]
 800b9e8:	60b9      	str	r1, [r7, #8]
 800b9ea:	4613      	mov	r3, r2
 800b9ec:	80fb      	strh	r3, [r7, #6]
 800b9ee:	68fb      	ldr	r3, [r7, #12]
 800b9f0:	68ba      	ldr	r2, [r7, #8]
 800b9f2:	629a      	str	r2, [r3, #40]	; 0x28
 800b9f4:	68fb      	ldr	r3, [r7, #12]
 800b9f6:	88fa      	ldrh	r2, [r7, #6]
 800b9f8:	859a      	strh	r2, [r3, #44]	; 0x2c
 800b9fa:	68fb      	ldr	r3, [r7, #12]
 800b9fc:	88fa      	ldrh	r2, [r7, #6]
 800b9fe:	85da      	strh	r2, [r3, #46]	; 0x2e
 800ba00:	68fb      	ldr	r3, [r7, #12]
 800ba02:	2200      	movs	r2, #0
 800ba04:	641a      	str	r2, [r3, #64]	; 0x40
 800ba06:	68fb      	ldr	r3, [r7, #12]
 800ba08:	2222      	movs	r2, #34	; 0x22
 800ba0a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800ba0e:	68fb      	ldr	r3, [r7, #12]
 800ba10:	2200      	movs	r2, #0
 800ba12:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ba16:	68fb      	ldr	r3, [r7, #12]
 800ba18:	691b      	ldr	r3, [r3, #16]
 800ba1a:	2b00      	cmp	r3, #0
 800ba1c:	d007      	beq.n	800ba2e <UART_Start_Receive_IT+0x4e>
 800ba1e:	68fb      	ldr	r3, [r7, #12]
 800ba20:	681b      	ldr	r3, [r3, #0]
 800ba22:	68da      	ldr	r2, [r3, #12]
 800ba24:	68fb      	ldr	r3, [r7, #12]
 800ba26:	681b      	ldr	r3, [r3, #0]
 800ba28:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800ba2c:	60da      	str	r2, [r3, #12]
 800ba2e:	68fb      	ldr	r3, [r7, #12]
 800ba30:	681b      	ldr	r3, [r3, #0]
 800ba32:	695a      	ldr	r2, [r3, #20]
 800ba34:	68fb      	ldr	r3, [r7, #12]
 800ba36:	681b      	ldr	r3, [r3, #0]
 800ba38:	f042 0201 	orr.w	r2, r2, #1
 800ba3c:	615a      	str	r2, [r3, #20]
 800ba3e:	68fb      	ldr	r3, [r7, #12]
 800ba40:	681b      	ldr	r3, [r3, #0]
 800ba42:	68da      	ldr	r2, [r3, #12]
 800ba44:	68fb      	ldr	r3, [r7, #12]
 800ba46:	681b      	ldr	r3, [r3, #0]
 800ba48:	f042 0220 	orr.w	r2, r2, #32
 800ba4c:	60da      	str	r2, [r3, #12]
 800ba4e:	2300      	movs	r3, #0
 800ba50:	4618      	mov	r0, r3
 800ba52:	3714      	adds	r7, #20
 800ba54:	46bd      	mov	sp, r7
 800ba56:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba5a:	4770      	bx	lr

0800ba5c <UART_EndRxTransfer>:
 800ba5c:	b480      	push	{r7}
 800ba5e:	b095      	sub	sp, #84	; 0x54
 800ba60:	af00      	add	r7, sp, #0
 800ba62:	6078      	str	r0, [r7, #4]
 800ba64:	687b      	ldr	r3, [r7, #4]
 800ba66:	681b      	ldr	r3, [r3, #0]
 800ba68:	330c      	adds	r3, #12
 800ba6a:	637b      	str	r3, [r7, #52]	; 0x34
 800ba6c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ba6e:	e853 3f00 	ldrex	r3, [r3]
 800ba72:	633b      	str	r3, [r7, #48]	; 0x30
 800ba74:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800ba76:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800ba7a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800ba7c:	687b      	ldr	r3, [r7, #4]
 800ba7e:	681b      	ldr	r3, [r3, #0]
 800ba80:	330c      	adds	r3, #12
 800ba82:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800ba84:	643a      	str	r2, [r7, #64]	; 0x40
 800ba86:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ba88:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800ba8a:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800ba8c:	e841 2300 	strex	r3, r2, [r1]
 800ba90:	63bb      	str	r3, [r7, #56]	; 0x38
 800ba92:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800ba94:	2b00      	cmp	r3, #0
 800ba96:	d1e5      	bne.n	800ba64 <UART_EndRxTransfer+0x8>
 800ba98:	687b      	ldr	r3, [r7, #4]
 800ba9a:	681b      	ldr	r3, [r3, #0]
 800ba9c:	3314      	adds	r3, #20
 800ba9e:	623b      	str	r3, [r7, #32]
 800baa0:	6a3b      	ldr	r3, [r7, #32]
 800baa2:	e853 3f00 	ldrex	r3, [r3]
 800baa6:	61fb      	str	r3, [r7, #28]
 800baa8:	69fb      	ldr	r3, [r7, #28]
 800baaa:	f023 0301 	bic.w	r3, r3, #1
 800baae:	64bb      	str	r3, [r7, #72]	; 0x48
 800bab0:	687b      	ldr	r3, [r7, #4]
 800bab2:	681b      	ldr	r3, [r3, #0]
 800bab4:	3314      	adds	r3, #20
 800bab6:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800bab8:	62fa      	str	r2, [r7, #44]	; 0x2c
 800baba:	62bb      	str	r3, [r7, #40]	; 0x28
 800babc:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800babe:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800bac0:	e841 2300 	strex	r3, r2, [r1]
 800bac4:	627b      	str	r3, [r7, #36]	; 0x24
 800bac6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bac8:	2b00      	cmp	r3, #0
 800baca:	d1e5      	bne.n	800ba98 <UART_EndRxTransfer+0x3c>
 800bacc:	687b      	ldr	r3, [r7, #4]
 800bace:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bad0:	2b01      	cmp	r3, #1
 800bad2:	d119      	bne.n	800bb08 <UART_EndRxTransfer+0xac>
 800bad4:	687b      	ldr	r3, [r7, #4]
 800bad6:	681b      	ldr	r3, [r3, #0]
 800bad8:	330c      	adds	r3, #12
 800bada:	60fb      	str	r3, [r7, #12]
 800badc:	68fb      	ldr	r3, [r7, #12]
 800bade:	e853 3f00 	ldrex	r3, [r3]
 800bae2:	60bb      	str	r3, [r7, #8]
 800bae4:	68bb      	ldr	r3, [r7, #8]
 800bae6:	f023 0310 	bic.w	r3, r3, #16
 800baea:	647b      	str	r3, [r7, #68]	; 0x44
 800baec:	687b      	ldr	r3, [r7, #4]
 800baee:	681b      	ldr	r3, [r3, #0]
 800baf0:	330c      	adds	r3, #12
 800baf2:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800baf4:	61ba      	str	r2, [r7, #24]
 800baf6:	617b      	str	r3, [r7, #20]
 800baf8:	6979      	ldr	r1, [r7, #20]
 800bafa:	69ba      	ldr	r2, [r7, #24]
 800bafc:	e841 2300 	strex	r3, r2, [r1]
 800bb00:	613b      	str	r3, [r7, #16]
 800bb02:	693b      	ldr	r3, [r7, #16]
 800bb04:	2b00      	cmp	r3, #0
 800bb06:	d1e5      	bne.n	800bad4 <UART_EndRxTransfer+0x78>
 800bb08:	687b      	ldr	r3, [r7, #4]
 800bb0a:	2220      	movs	r2, #32
 800bb0c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800bb10:	687b      	ldr	r3, [r7, #4]
 800bb12:	2200      	movs	r2, #0
 800bb14:	631a      	str	r2, [r3, #48]	; 0x30
 800bb16:	bf00      	nop
 800bb18:	3754      	adds	r7, #84	; 0x54
 800bb1a:	46bd      	mov	sp, r7
 800bb1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb20:	4770      	bx	lr

0800bb22 <UART_DMAAbortOnError>:
 800bb22:	b580      	push	{r7, lr}
 800bb24:	b084      	sub	sp, #16
 800bb26:	af00      	add	r7, sp, #0
 800bb28:	6078      	str	r0, [r7, #4]
 800bb2a:	687b      	ldr	r3, [r7, #4]
 800bb2c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bb2e:	60fb      	str	r3, [r7, #12]
 800bb30:	68fb      	ldr	r3, [r7, #12]
 800bb32:	2200      	movs	r2, #0
 800bb34:	85da      	strh	r2, [r3, #46]	; 0x2e
 800bb36:	68fb      	ldr	r3, [r7, #12]
 800bb38:	2200      	movs	r2, #0
 800bb3a:	84da      	strh	r2, [r3, #38]	; 0x26
 800bb3c:	68f8      	ldr	r0, [r7, #12]
 800bb3e:	f7ff fecb 	bl	800b8d8 <HAL_UART_ErrorCallback>
 800bb42:	bf00      	nop
 800bb44:	3710      	adds	r7, #16
 800bb46:	46bd      	mov	sp, r7
 800bb48:	bd80      	pop	{r7, pc}

0800bb4a <UART_Transmit_IT>:
 800bb4a:	b480      	push	{r7}
 800bb4c:	b085      	sub	sp, #20
 800bb4e:	af00      	add	r7, sp, #0
 800bb50:	6078      	str	r0, [r7, #4]
 800bb52:	687b      	ldr	r3, [r7, #4]
 800bb54:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800bb58:	b2db      	uxtb	r3, r3
 800bb5a:	2b21      	cmp	r3, #33	; 0x21
 800bb5c:	d13e      	bne.n	800bbdc <UART_Transmit_IT+0x92>
 800bb5e:	687b      	ldr	r3, [r7, #4]
 800bb60:	689b      	ldr	r3, [r3, #8]
 800bb62:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800bb66:	d114      	bne.n	800bb92 <UART_Transmit_IT+0x48>
 800bb68:	687b      	ldr	r3, [r7, #4]
 800bb6a:	691b      	ldr	r3, [r3, #16]
 800bb6c:	2b00      	cmp	r3, #0
 800bb6e:	d110      	bne.n	800bb92 <UART_Transmit_IT+0x48>
 800bb70:	687b      	ldr	r3, [r7, #4]
 800bb72:	6a1b      	ldr	r3, [r3, #32]
 800bb74:	60fb      	str	r3, [r7, #12]
 800bb76:	68fb      	ldr	r3, [r7, #12]
 800bb78:	881b      	ldrh	r3, [r3, #0]
 800bb7a:	461a      	mov	r2, r3
 800bb7c:	687b      	ldr	r3, [r7, #4]
 800bb7e:	681b      	ldr	r3, [r3, #0]
 800bb80:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800bb84:	605a      	str	r2, [r3, #4]
 800bb86:	687b      	ldr	r3, [r7, #4]
 800bb88:	6a1b      	ldr	r3, [r3, #32]
 800bb8a:	1c9a      	adds	r2, r3, #2
 800bb8c:	687b      	ldr	r3, [r7, #4]
 800bb8e:	621a      	str	r2, [r3, #32]
 800bb90:	e008      	b.n	800bba4 <UART_Transmit_IT+0x5a>
 800bb92:	687b      	ldr	r3, [r7, #4]
 800bb94:	6a1b      	ldr	r3, [r3, #32]
 800bb96:	1c59      	adds	r1, r3, #1
 800bb98:	687a      	ldr	r2, [r7, #4]
 800bb9a:	6211      	str	r1, [r2, #32]
 800bb9c:	781a      	ldrb	r2, [r3, #0]
 800bb9e:	687b      	ldr	r3, [r7, #4]
 800bba0:	681b      	ldr	r3, [r3, #0]
 800bba2:	605a      	str	r2, [r3, #4]
 800bba4:	687b      	ldr	r3, [r7, #4]
 800bba6:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800bba8:	b29b      	uxth	r3, r3
 800bbaa:	3b01      	subs	r3, #1
 800bbac:	b29b      	uxth	r3, r3
 800bbae:	687a      	ldr	r2, [r7, #4]
 800bbb0:	4619      	mov	r1, r3
 800bbb2:	84d1      	strh	r1, [r2, #38]	; 0x26
 800bbb4:	2b00      	cmp	r3, #0
 800bbb6:	d10f      	bne.n	800bbd8 <UART_Transmit_IT+0x8e>
 800bbb8:	687b      	ldr	r3, [r7, #4]
 800bbba:	681b      	ldr	r3, [r3, #0]
 800bbbc:	68da      	ldr	r2, [r3, #12]
 800bbbe:	687b      	ldr	r3, [r7, #4]
 800bbc0:	681b      	ldr	r3, [r3, #0]
 800bbc2:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800bbc6:	60da      	str	r2, [r3, #12]
 800bbc8:	687b      	ldr	r3, [r7, #4]
 800bbca:	681b      	ldr	r3, [r3, #0]
 800bbcc:	68da      	ldr	r2, [r3, #12]
 800bbce:	687b      	ldr	r3, [r7, #4]
 800bbd0:	681b      	ldr	r3, [r3, #0]
 800bbd2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800bbd6:	60da      	str	r2, [r3, #12]
 800bbd8:	2300      	movs	r3, #0
 800bbda:	e000      	b.n	800bbde <UART_Transmit_IT+0x94>
 800bbdc:	2302      	movs	r3, #2
 800bbde:	4618      	mov	r0, r3
 800bbe0:	3714      	adds	r7, #20
 800bbe2:	46bd      	mov	sp, r7
 800bbe4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bbe8:	4770      	bx	lr

0800bbea <UART_EndTransmit_IT>:
 800bbea:	b580      	push	{r7, lr}
 800bbec:	b082      	sub	sp, #8
 800bbee:	af00      	add	r7, sp, #0
 800bbf0:	6078      	str	r0, [r7, #4]
 800bbf2:	687b      	ldr	r3, [r7, #4]
 800bbf4:	681b      	ldr	r3, [r3, #0]
 800bbf6:	68da      	ldr	r2, [r3, #12]
 800bbf8:	687b      	ldr	r3, [r7, #4]
 800bbfa:	681b      	ldr	r3, [r3, #0]
 800bbfc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800bc00:	60da      	str	r2, [r3, #12]
 800bc02:	687b      	ldr	r3, [r7, #4]
 800bc04:	2220      	movs	r2, #32
 800bc06:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bc0a:	6878      	ldr	r0, [r7, #4]
 800bc0c:	f7ff fe5a 	bl	800b8c4 <HAL_UART_TxCpltCallback>
 800bc10:	2300      	movs	r3, #0
 800bc12:	4618      	mov	r0, r3
 800bc14:	3708      	adds	r7, #8
 800bc16:	46bd      	mov	sp, r7
 800bc18:	bd80      	pop	{r7, pc}

0800bc1a <UART_Receive_IT>:
 800bc1a:	b580      	push	{r7, lr}
 800bc1c:	b08c      	sub	sp, #48	; 0x30
 800bc1e:	af00      	add	r7, sp, #0
 800bc20:	6078      	str	r0, [r7, #4]
 800bc22:	687b      	ldr	r3, [r7, #4]
 800bc24:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800bc28:	b2db      	uxtb	r3, r3
 800bc2a:	2b22      	cmp	r3, #34	; 0x22
 800bc2c:	f040 80ab 	bne.w	800bd86 <UART_Receive_IT+0x16c>
 800bc30:	687b      	ldr	r3, [r7, #4]
 800bc32:	689b      	ldr	r3, [r3, #8]
 800bc34:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800bc38:	d117      	bne.n	800bc6a <UART_Receive_IT+0x50>
 800bc3a:	687b      	ldr	r3, [r7, #4]
 800bc3c:	691b      	ldr	r3, [r3, #16]
 800bc3e:	2b00      	cmp	r3, #0
 800bc40:	d113      	bne.n	800bc6a <UART_Receive_IT+0x50>
 800bc42:	2300      	movs	r3, #0
 800bc44:	62fb      	str	r3, [r7, #44]	; 0x2c
 800bc46:	687b      	ldr	r3, [r7, #4]
 800bc48:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bc4a:	62bb      	str	r3, [r7, #40]	; 0x28
 800bc4c:	687b      	ldr	r3, [r7, #4]
 800bc4e:	681b      	ldr	r3, [r3, #0]
 800bc50:	685b      	ldr	r3, [r3, #4]
 800bc52:	b29b      	uxth	r3, r3
 800bc54:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800bc58:	b29a      	uxth	r2, r3
 800bc5a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bc5c:	801a      	strh	r2, [r3, #0]
 800bc5e:	687b      	ldr	r3, [r7, #4]
 800bc60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bc62:	1c9a      	adds	r2, r3, #2
 800bc64:	687b      	ldr	r3, [r7, #4]
 800bc66:	629a      	str	r2, [r3, #40]	; 0x28
 800bc68:	e026      	b.n	800bcb8 <UART_Receive_IT+0x9e>
 800bc6a:	687b      	ldr	r3, [r7, #4]
 800bc6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bc6e:	62fb      	str	r3, [r7, #44]	; 0x2c
 800bc70:	2300      	movs	r3, #0
 800bc72:	62bb      	str	r3, [r7, #40]	; 0x28
 800bc74:	687b      	ldr	r3, [r7, #4]
 800bc76:	689b      	ldr	r3, [r3, #8]
 800bc78:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800bc7c:	d007      	beq.n	800bc8e <UART_Receive_IT+0x74>
 800bc7e:	687b      	ldr	r3, [r7, #4]
 800bc80:	689b      	ldr	r3, [r3, #8]
 800bc82:	2b00      	cmp	r3, #0
 800bc84:	d10a      	bne.n	800bc9c <UART_Receive_IT+0x82>
 800bc86:	687b      	ldr	r3, [r7, #4]
 800bc88:	691b      	ldr	r3, [r3, #16]
 800bc8a:	2b00      	cmp	r3, #0
 800bc8c:	d106      	bne.n	800bc9c <UART_Receive_IT+0x82>
 800bc8e:	687b      	ldr	r3, [r7, #4]
 800bc90:	681b      	ldr	r3, [r3, #0]
 800bc92:	685b      	ldr	r3, [r3, #4]
 800bc94:	b2da      	uxtb	r2, r3
 800bc96:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bc98:	701a      	strb	r2, [r3, #0]
 800bc9a:	e008      	b.n	800bcae <UART_Receive_IT+0x94>
 800bc9c:	687b      	ldr	r3, [r7, #4]
 800bc9e:	681b      	ldr	r3, [r3, #0]
 800bca0:	685b      	ldr	r3, [r3, #4]
 800bca2:	b2db      	uxtb	r3, r3
 800bca4:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800bca8:	b2da      	uxtb	r2, r3
 800bcaa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bcac:	701a      	strb	r2, [r3, #0]
 800bcae:	687b      	ldr	r3, [r7, #4]
 800bcb0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bcb2:	1c5a      	adds	r2, r3, #1
 800bcb4:	687b      	ldr	r3, [r7, #4]
 800bcb6:	629a      	str	r2, [r3, #40]	; 0x28
 800bcb8:	687b      	ldr	r3, [r7, #4]
 800bcba:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800bcbc:	b29b      	uxth	r3, r3
 800bcbe:	3b01      	subs	r3, #1
 800bcc0:	b29b      	uxth	r3, r3
 800bcc2:	687a      	ldr	r2, [r7, #4]
 800bcc4:	4619      	mov	r1, r3
 800bcc6:	85d1      	strh	r1, [r2, #46]	; 0x2e
 800bcc8:	2b00      	cmp	r3, #0
 800bcca:	d15a      	bne.n	800bd82 <UART_Receive_IT+0x168>
 800bccc:	687b      	ldr	r3, [r7, #4]
 800bcce:	681b      	ldr	r3, [r3, #0]
 800bcd0:	68da      	ldr	r2, [r3, #12]
 800bcd2:	687b      	ldr	r3, [r7, #4]
 800bcd4:	681b      	ldr	r3, [r3, #0]
 800bcd6:	f022 0220 	bic.w	r2, r2, #32
 800bcda:	60da      	str	r2, [r3, #12]
 800bcdc:	687b      	ldr	r3, [r7, #4]
 800bcde:	681b      	ldr	r3, [r3, #0]
 800bce0:	68da      	ldr	r2, [r3, #12]
 800bce2:	687b      	ldr	r3, [r7, #4]
 800bce4:	681b      	ldr	r3, [r3, #0]
 800bce6:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800bcea:	60da      	str	r2, [r3, #12]
 800bcec:	687b      	ldr	r3, [r7, #4]
 800bcee:	681b      	ldr	r3, [r3, #0]
 800bcf0:	695a      	ldr	r2, [r3, #20]
 800bcf2:	687b      	ldr	r3, [r7, #4]
 800bcf4:	681b      	ldr	r3, [r3, #0]
 800bcf6:	f022 0201 	bic.w	r2, r2, #1
 800bcfa:	615a      	str	r2, [r3, #20]
 800bcfc:	687b      	ldr	r3, [r7, #4]
 800bcfe:	2220      	movs	r2, #32
 800bd00:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800bd04:	687b      	ldr	r3, [r7, #4]
 800bd06:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bd08:	2b01      	cmp	r3, #1
 800bd0a:	d135      	bne.n	800bd78 <UART_Receive_IT+0x15e>
 800bd0c:	687b      	ldr	r3, [r7, #4]
 800bd0e:	2200      	movs	r2, #0
 800bd10:	631a      	str	r2, [r3, #48]	; 0x30
 800bd12:	687b      	ldr	r3, [r7, #4]
 800bd14:	681b      	ldr	r3, [r3, #0]
 800bd16:	330c      	adds	r3, #12
 800bd18:	617b      	str	r3, [r7, #20]
 800bd1a:	697b      	ldr	r3, [r7, #20]
 800bd1c:	e853 3f00 	ldrex	r3, [r3]
 800bd20:	613b      	str	r3, [r7, #16]
 800bd22:	693b      	ldr	r3, [r7, #16]
 800bd24:	f023 0310 	bic.w	r3, r3, #16
 800bd28:	627b      	str	r3, [r7, #36]	; 0x24
 800bd2a:	687b      	ldr	r3, [r7, #4]
 800bd2c:	681b      	ldr	r3, [r3, #0]
 800bd2e:	330c      	adds	r3, #12
 800bd30:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800bd32:	623a      	str	r2, [r7, #32]
 800bd34:	61fb      	str	r3, [r7, #28]
 800bd36:	69f9      	ldr	r1, [r7, #28]
 800bd38:	6a3a      	ldr	r2, [r7, #32]
 800bd3a:	e841 2300 	strex	r3, r2, [r1]
 800bd3e:	61bb      	str	r3, [r7, #24]
 800bd40:	69bb      	ldr	r3, [r7, #24]
 800bd42:	2b00      	cmp	r3, #0
 800bd44:	d1e5      	bne.n	800bd12 <UART_Receive_IT+0xf8>
 800bd46:	687b      	ldr	r3, [r7, #4]
 800bd48:	681b      	ldr	r3, [r3, #0]
 800bd4a:	681b      	ldr	r3, [r3, #0]
 800bd4c:	f003 0310 	and.w	r3, r3, #16
 800bd50:	2b10      	cmp	r3, #16
 800bd52:	d10a      	bne.n	800bd6a <UART_Receive_IT+0x150>
 800bd54:	2300      	movs	r3, #0
 800bd56:	60fb      	str	r3, [r7, #12]
 800bd58:	687b      	ldr	r3, [r7, #4]
 800bd5a:	681b      	ldr	r3, [r3, #0]
 800bd5c:	681b      	ldr	r3, [r3, #0]
 800bd5e:	60fb      	str	r3, [r7, #12]
 800bd60:	687b      	ldr	r3, [r7, #4]
 800bd62:	681b      	ldr	r3, [r3, #0]
 800bd64:	685b      	ldr	r3, [r3, #4]
 800bd66:	60fb      	str	r3, [r7, #12]
 800bd68:	68fb      	ldr	r3, [r7, #12]
 800bd6a:	687b      	ldr	r3, [r7, #4]
 800bd6c:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800bd6e:	4619      	mov	r1, r3
 800bd70:	6878      	ldr	r0, [r7, #4]
 800bd72:	f7ff fdbb 	bl	800b8ec <HAL_UARTEx_RxEventCallback>
 800bd76:	e002      	b.n	800bd7e <UART_Receive_IT+0x164>
 800bd78:	6878      	ldr	r0, [r7, #4]
 800bd7a:	f7f9 ff53 	bl	8005c24 <HAL_UART_RxCpltCallback>
 800bd7e:	2300      	movs	r3, #0
 800bd80:	e002      	b.n	800bd88 <UART_Receive_IT+0x16e>
 800bd82:	2300      	movs	r3, #0
 800bd84:	e000      	b.n	800bd88 <UART_Receive_IT+0x16e>
 800bd86:	2302      	movs	r3, #2
 800bd88:	4618      	mov	r0, r3
 800bd8a:	3730      	adds	r7, #48	; 0x30
 800bd8c:	46bd      	mov	sp, r7
 800bd8e:	bd80      	pop	{r7, pc}

0800bd90 <UART_SetConfig>:
 800bd90:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800bd94:	b0c0      	sub	sp, #256	; 0x100
 800bd96:	af00      	add	r7, sp, #0
 800bd98:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 800bd9c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bda0:	681b      	ldr	r3, [r3, #0]
 800bda2:	691b      	ldr	r3, [r3, #16]
 800bda4:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 800bda8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bdac:	68d9      	ldr	r1, [r3, #12]
 800bdae:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bdb2:	681a      	ldr	r2, [r3, #0]
 800bdb4:	ea40 0301 	orr.w	r3, r0, r1
 800bdb8:	6113      	str	r3, [r2, #16]
 800bdba:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bdbe:	689a      	ldr	r2, [r3, #8]
 800bdc0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bdc4:	691b      	ldr	r3, [r3, #16]
 800bdc6:	431a      	orrs	r2, r3
 800bdc8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bdcc:	695b      	ldr	r3, [r3, #20]
 800bdce:	431a      	orrs	r2, r3
 800bdd0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bdd4:	69db      	ldr	r3, [r3, #28]
 800bdd6:	4313      	orrs	r3, r2
 800bdd8:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 800bddc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bde0:	681b      	ldr	r3, [r3, #0]
 800bde2:	68db      	ldr	r3, [r3, #12]
 800bde4:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 800bde8:	f021 010c 	bic.w	r1, r1, #12
 800bdec:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bdf0:	681a      	ldr	r2, [r3, #0]
 800bdf2:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 800bdf6:	430b      	orrs	r3, r1
 800bdf8:	60d3      	str	r3, [r2, #12]
 800bdfa:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bdfe:	681b      	ldr	r3, [r3, #0]
 800be00:	695b      	ldr	r3, [r3, #20]
 800be02:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 800be06:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800be0a:	6999      	ldr	r1, [r3, #24]
 800be0c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800be10:	681a      	ldr	r2, [r3, #0]
 800be12:	ea40 0301 	orr.w	r3, r0, r1
 800be16:	6153      	str	r3, [r2, #20]
 800be18:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800be1c:	681a      	ldr	r2, [r3, #0]
 800be1e:	4b8f      	ldr	r3, [pc, #572]	; (800c05c <UART_SetConfig+0x2cc>)
 800be20:	429a      	cmp	r2, r3
 800be22:	d005      	beq.n	800be30 <UART_SetConfig+0xa0>
 800be24:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800be28:	681a      	ldr	r2, [r3, #0]
 800be2a:	4b8d      	ldr	r3, [pc, #564]	; (800c060 <UART_SetConfig+0x2d0>)
 800be2c:	429a      	cmp	r2, r3
 800be2e:	d104      	bne.n	800be3a <UART_SetConfig+0xaa>
 800be30:	f7fc fda4 	bl	800897c <HAL_RCC_GetPCLK2Freq>
 800be34:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800be38:	e003      	b.n	800be42 <UART_SetConfig+0xb2>
 800be3a:	f7fc fd8b 	bl	8008954 <HAL_RCC_GetPCLK1Freq>
 800be3e:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800be42:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800be46:	69db      	ldr	r3, [r3, #28]
 800be48:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800be4c:	f040 810c 	bne.w	800c068 <UART_SetConfig+0x2d8>
 800be50:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800be54:	2200      	movs	r2, #0
 800be56:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800be5a:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 800be5e:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 800be62:	4622      	mov	r2, r4
 800be64:	462b      	mov	r3, r5
 800be66:	1891      	adds	r1, r2, r2
 800be68:	65b9      	str	r1, [r7, #88]	; 0x58
 800be6a:	415b      	adcs	r3, r3
 800be6c:	65fb      	str	r3, [r7, #92]	; 0x5c
 800be6e:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800be72:	4621      	mov	r1, r4
 800be74:	eb12 0801 	adds.w	r8, r2, r1
 800be78:	4629      	mov	r1, r5
 800be7a:	eb43 0901 	adc.w	r9, r3, r1
 800be7e:	f04f 0200 	mov.w	r2, #0
 800be82:	f04f 0300 	mov.w	r3, #0
 800be86:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800be8a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800be8e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800be92:	4690      	mov	r8, r2
 800be94:	4699      	mov	r9, r3
 800be96:	4623      	mov	r3, r4
 800be98:	eb18 0303 	adds.w	r3, r8, r3
 800be9c:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800bea0:	462b      	mov	r3, r5
 800bea2:	eb49 0303 	adc.w	r3, r9, r3
 800bea6:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800beaa:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800beae:	685b      	ldr	r3, [r3, #4]
 800beb0:	2200      	movs	r2, #0
 800beb2:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800beb6:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 800beba:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 800bebe:	460b      	mov	r3, r1
 800bec0:	18db      	adds	r3, r3, r3
 800bec2:	653b      	str	r3, [r7, #80]	; 0x50
 800bec4:	4613      	mov	r3, r2
 800bec6:	eb42 0303 	adc.w	r3, r2, r3
 800beca:	657b      	str	r3, [r7, #84]	; 0x54
 800becc:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800bed0:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800bed4:	f7f4 fed8 	bl	8000c88 <__aeabi_uldivmod>
 800bed8:	4602      	mov	r2, r0
 800beda:	460b      	mov	r3, r1
 800bedc:	4b61      	ldr	r3, [pc, #388]	; (800c064 <UART_SetConfig+0x2d4>)
 800bede:	fba3 2302 	umull	r2, r3, r3, r2
 800bee2:	095b      	lsrs	r3, r3, #5
 800bee4:	011c      	lsls	r4, r3, #4
 800bee6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800beea:	2200      	movs	r2, #0
 800beec:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800bef0:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 800bef4:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 800bef8:	4642      	mov	r2, r8
 800befa:	464b      	mov	r3, r9
 800befc:	1891      	adds	r1, r2, r2
 800befe:	64b9      	str	r1, [r7, #72]	; 0x48
 800bf00:	415b      	adcs	r3, r3
 800bf02:	64fb      	str	r3, [r7, #76]	; 0x4c
 800bf04:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 800bf08:	4641      	mov	r1, r8
 800bf0a:	eb12 0a01 	adds.w	sl, r2, r1
 800bf0e:	4649      	mov	r1, r9
 800bf10:	eb43 0b01 	adc.w	fp, r3, r1
 800bf14:	f04f 0200 	mov.w	r2, #0
 800bf18:	f04f 0300 	mov.w	r3, #0
 800bf1c:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800bf20:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800bf24:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800bf28:	4692      	mov	sl, r2
 800bf2a:	469b      	mov	fp, r3
 800bf2c:	4643      	mov	r3, r8
 800bf2e:	eb1a 0303 	adds.w	r3, sl, r3
 800bf32:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800bf36:	464b      	mov	r3, r9
 800bf38:	eb4b 0303 	adc.w	r3, fp, r3
 800bf3c:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 800bf40:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bf44:	685b      	ldr	r3, [r3, #4]
 800bf46:	2200      	movs	r2, #0
 800bf48:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800bf4c:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 800bf50:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 800bf54:	460b      	mov	r3, r1
 800bf56:	18db      	adds	r3, r3, r3
 800bf58:	643b      	str	r3, [r7, #64]	; 0x40
 800bf5a:	4613      	mov	r3, r2
 800bf5c:	eb42 0303 	adc.w	r3, r2, r3
 800bf60:	647b      	str	r3, [r7, #68]	; 0x44
 800bf62:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800bf66:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 800bf6a:	f7f4 fe8d 	bl	8000c88 <__aeabi_uldivmod>
 800bf6e:	4602      	mov	r2, r0
 800bf70:	460b      	mov	r3, r1
 800bf72:	4611      	mov	r1, r2
 800bf74:	4b3b      	ldr	r3, [pc, #236]	; (800c064 <UART_SetConfig+0x2d4>)
 800bf76:	fba3 2301 	umull	r2, r3, r3, r1
 800bf7a:	095b      	lsrs	r3, r3, #5
 800bf7c:	2264      	movs	r2, #100	; 0x64
 800bf7e:	fb02 f303 	mul.w	r3, r2, r3
 800bf82:	1acb      	subs	r3, r1, r3
 800bf84:	00db      	lsls	r3, r3, #3
 800bf86:	f103 0232 	add.w	r2, r3, #50	; 0x32
 800bf8a:	4b36      	ldr	r3, [pc, #216]	; (800c064 <UART_SetConfig+0x2d4>)
 800bf8c:	fba3 2302 	umull	r2, r3, r3, r2
 800bf90:	095b      	lsrs	r3, r3, #5
 800bf92:	005b      	lsls	r3, r3, #1
 800bf94:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800bf98:	441c      	add	r4, r3
 800bf9a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800bf9e:	2200      	movs	r2, #0
 800bfa0:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800bfa4:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 800bfa8:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 800bfac:	4642      	mov	r2, r8
 800bfae:	464b      	mov	r3, r9
 800bfb0:	1891      	adds	r1, r2, r2
 800bfb2:	63b9      	str	r1, [r7, #56]	; 0x38
 800bfb4:	415b      	adcs	r3, r3
 800bfb6:	63fb      	str	r3, [r7, #60]	; 0x3c
 800bfb8:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800bfbc:	4641      	mov	r1, r8
 800bfbe:	1851      	adds	r1, r2, r1
 800bfc0:	6339      	str	r1, [r7, #48]	; 0x30
 800bfc2:	4649      	mov	r1, r9
 800bfc4:	414b      	adcs	r3, r1
 800bfc6:	637b      	str	r3, [r7, #52]	; 0x34
 800bfc8:	f04f 0200 	mov.w	r2, #0
 800bfcc:	f04f 0300 	mov.w	r3, #0
 800bfd0:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 800bfd4:	4659      	mov	r1, fp
 800bfd6:	00cb      	lsls	r3, r1, #3
 800bfd8:	4651      	mov	r1, sl
 800bfda:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800bfde:	4651      	mov	r1, sl
 800bfe0:	00ca      	lsls	r2, r1, #3
 800bfe2:	4610      	mov	r0, r2
 800bfe4:	4619      	mov	r1, r3
 800bfe6:	4603      	mov	r3, r0
 800bfe8:	4642      	mov	r2, r8
 800bfea:	189b      	adds	r3, r3, r2
 800bfec:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800bff0:	464b      	mov	r3, r9
 800bff2:	460a      	mov	r2, r1
 800bff4:	eb42 0303 	adc.w	r3, r2, r3
 800bff8:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800bffc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800c000:	685b      	ldr	r3, [r3, #4]
 800c002:	2200      	movs	r2, #0
 800c004:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800c008:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 800c00c:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 800c010:	460b      	mov	r3, r1
 800c012:	18db      	adds	r3, r3, r3
 800c014:	62bb      	str	r3, [r7, #40]	; 0x28
 800c016:	4613      	mov	r3, r2
 800c018:	eb42 0303 	adc.w	r3, r2, r3
 800c01c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800c01e:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800c022:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 800c026:	f7f4 fe2f 	bl	8000c88 <__aeabi_uldivmod>
 800c02a:	4602      	mov	r2, r0
 800c02c:	460b      	mov	r3, r1
 800c02e:	4b0d      	ldr	r3, [pc, #52]	; (800c064 <UART_SetConfig+0x2d4>)
 800c030:	fba3 1302 	umull	r1, r3, r3, r2
 800c034:	095b      	lsrs	r3, r3, #5
 800c036:	2164      	movs	r1, #100	; 0x64
 800c038:	fb01 f303 	mul.w	r3, r1, r3
 800c03c:	1ad3      	subs	r3, r2, r3
 800c03e:	00db      	lsls	r3, r3, #3
 800c040:	3332      	adds	r3, #50	; 0x32
 800c042:	4a08      	ldr	r2, [pc, #32]	; (800c064 <UART_SetConfig+0x2d4>)
 800c044:	fba2 2303 	umull	r2, r3, r2, r3
 800c048:	095b      	lsrs	r3, r3, #5
 800c04a:	f003 0207 	and.w	r2, r3, #7
 800c04e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800c052:	681b      	ldr	r3, [r3, #0]
 800c054:	4422      	add	r2, r4
 800c056:	609a      	str	r2, [r3, #8]
 800c058:	e105      	b.n	800c266 <UART_SetConfig+0x4d6>
 800c05a:	bf00      	nop
 800c05c:	40011000 	.word	0x40011000
 800c060:	40011400 	.word	0x40011400
 800c064:	51eb851f 	.word	0x51eb851f
 800c068:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800c06c:	2200      	movs	r2, #0
 800c06e:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800c072:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800c076:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 800c07a:	4642      	mov	r2, r8
 800c07c:	464b      	mov	r3, r9
 800c07e:	1891      	adds	r1, r2, r2
 800c080:	6239      	str	r1, [r7, #32]
 800c082:	415b      	adcs	r3, r3
 800c084:	627b      	str	r3, [r7, #36]	; 0x24
 800c086:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800c08a:	4641      	mov	r1, r8
 800c08c:	1854      	adds	r4, r2, r1
 800c08e:	4649      	mov	r1, r9
 800c090:	eb43 0501 	adc.w	r5, r3, r1
 800c094:	f04f 0200 	mov.w	r2, #0
 800c098:	f04f 0300 	mov.w	r3, #0
 800c09c:	00eb      	lsls	r3, r5, #3
 800c09e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800c0a2:	00e2      	lsls	r2, r4, #3
 800c0a4:	4614      	mov	r4, r2
 800c0a6:	461d      	mov	r5, r3
 800c0a8:	4643      	mov	r3, r8
 800c0aa:	18e3      	adds	r3, r4, r3
 800c0ac:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800c0b0:	464b      	mov	r3, r9
 800c0b2:	eb45 0303 	adc.w	r3, r5, r3
 800c0b6:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800c0ba:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800c0be:	685b      	ldr	r3, [r3, #4]
 800c0c0:	2200      	movs	r2, #0
 800c0c2:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800c0c6:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800c0ca:	f04f 0200 	mov.w	r2, #0
 800c0ce:	f04f 0300 	mov.w	r3, #0
 800c0d2:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 800c0d6:	4629      	mov	r1, r5
 800c0d8:	008b      	lsls	r3, r1, #2
 800c0da:	4621      	mov	r1, r4
 800c0dc:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800c0e0:	4621      	mov	r1, r4
 800c0e2:	008a      	lsls	r2, r1, #2
 800c0e4:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 800c0e8:	f7f4 fdce 	bl	8000c88 <__aeabi_uldivmod>
 800c0ec:	4602      	mov	r2, r0
 800c0ee:	460b      	mov	r3, r1
 800c0f0:	4b60      	ldr	r3, [pc, #384]	; (800c274 <UART_SetConfig+0x4e4>)
 800c0f2:	fba3 2302 	umull	r2, r3, r3, r2
 800c0f6:	095b      	lsrs	r3, r3, #5
 800c0f8:	011c      	lsls	r4, r3, #4
 800c0fa:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800c0fe:	2200      	movs	r2, #0
 800c100:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800c104:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800c108:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 800c10c:	4642      	mov	r2, r8
 800c10e:	464b      	mov	r3, r9
 800c110:	1891      	adds	r1, r2, r2
 800c112:	61b9      	str	r1, [r7, #24]
 800c114:	415b      	adcs	r3, r3
 800c116:	61fb      	str	r3, [r7, #28]
 800c118:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800c11c:	4641      	mov	r1, r8
 800c11e:	1851      	adds	r1, r2, r1
 800c120:	6139      	str	r1, [r7, #16]
 800c122:	4649      	mov	r1, r9
 800c124:	414b      	adcs	r3, r1
 800c126:	617b      	str	r3, [r7, #20]
 800c128:	f04f 0200 	mov.w	r2, #0
 800c12c:	f04f 0300 	mov.w	r3, #0
 800c130:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800c134:	4659      	mov	r1, fp
 800c136:	00cb      	lsls	r3, r1, #3
 800c138:	4651      	mov	r1, sl
 800c13a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800c13e:	4651      	mov	r1, sl
 800c140:	00ca      	lsls	r2, r1, #3
 800c142:	4610      	mov	r0, r2
 800c144:	4619      	mov	r1, r3
 800c146:	4603      	mov	r3, r0
 800c148:	4642      	mov	r2, r8
 800c14a:	189b      	adds	r3, r3, r2
 800c14c:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800c150:	464b      	mov	r3, r9
 800c152:	460a      	mov	r2, r1
 800c154:	eb42 0303 	adc.w	r3, r2, r3
 800c158:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800c15c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800c160:	685b      	ldr	r3, [r3, #4]
 800c162:	2200      	movs	r2, #0
 800c164:	67bb      	str	r3, [r7, #120]	; 0x78
 800c166:	67fa      	str	r2, [r7, #124]	; 0x7c
 800c168:	f04f 0200 	mov.w	r2, #0
 800c16c:	f04f 0300 	mov.w	r3, #0
 800c170:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 800c174:	4649      	mov	r1, r9
 800c176:	008b      	lsls	r3, r1, #2
 800c178:	4641      	mov	r1, r8
 800c17a:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800c17e:	4641      	mov	r1, r8
 800c180:	008a      	lsls	r2, r1, #2
 800c182:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800c186:	f7f4 fd7f 	bl	8000c88 <__aeabi_uldivmod>
 800c18a:	4602      	mov	r2, r0
 800c18c:	460b      	mov	r3, r1
 800c18e:	4b39      	ldr	r3, [pc, #228]	; (800c274 <UART_SetConfig+0x4e4>)
 800c190:	fba3 1302 	umull	r1, r3, r3, r2
 800c194:	095b      	lsrs	r3, r3, #5
 800c196:	2164      	movs	r1, #100	; 0x64
 800c198:	fb01 f303 	mul.w	r3, r1, r3
 800c19c:	1ad3      	subs	r3, r2, r3
 800c19e:	011b      	lsls	r3, r3, #4
 800c1a0:	3332      	adds	r3, #50	; 0x32
 800c1a2:	4a34      	ldr	r2, [pc, #208]	; (800c274 <UART_SetConfig+0x4e4>)
 800c1a4:	fba2 2303 	umull	r2, r3, r2, r3
 800c1a8:	095b      	lsrs	r3, r3, #5
 800c1aa:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800c1ae:	441c      	add	r4, r3
 800c1b0:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800c1b4:	2200      	movs	r2, #0
 800c1b6:	673b      	str	r3, [r7, #112]	; 0x70
 800c1b8:	677a      	str	r2, [r7, #116]	; 0x74
 800c1ba:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 800c1be:	4642      	mov	r2, r8
 800c1c0:	464b      	mov	r3, r9
 800c1c2:	1891      	adds	r1, r2, r2
 800c1c4:	60b9      	str	r1, [r7, #8]
 800c1c6:	415b      	adcs	r3, r3
 800c1c8:	60fb      	str	r3, [r7, #12]
 800c1ca:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800c1ce:	4641      	mov	r1, r8
 800c1d0:	1851      	adds	r1, r2, r1
 800c1d2:	6039      	str	r1, [r7, #0]
 800c1d4:	4649      	mov	r1, r9
 800c1d6:	414b      	adcs	r3, r1
 800c1d8:	607b      	str	r3, [r7, #4]
 800c1da:	f04f 0200 	mov.w	r2, #0
 800c1de:	f04f 0300 	mov.w	r3, #0
 800c1e2:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800c1e6:	4659      	mov	r1, fp
 800c1e8:	00cb      	lsls	r3, r1, #3
 800c1ea:	4651      	mov	r1, sl
 800c1ec:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800c1f0:	4651      	mov	r1, sl
 800c1f2:	00ca      	lsls	r2, r1, #3
 800c1f4:	4610      	mov	r0, r2
 800c1f6:	4619      	mov	r1, r3
 800c1f8:	4603      	mov	r3, r0
 800c1fa:	4642      	mov	r2, r8
 800c1fc:	189b      	adds	r3, r3, r2
 800c1fe:	66bb      	str	r3, [r7, #104]	; 0x68
 800c200:	464b      	mov	r3, r9
 800c202:	460a      	mov	r2, r1
 800c204:	eb42 0303 	adc.w	r3, r2, r3
 800c208:	66fb      	str	r3, [r7, #108]	; 0x6c
 800c20a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800c20e:	685b      	ldr	r3, [r3, #4]
 800c210:	2200      	movs	r2, #0
 800c212:	663b      	str	r3, [r7, #96]	; 0x60
 800c214:	667a      	str	r2, [r7, #100]	; 0x64
 800c216:	f04f 0200 	mov.w	r2, #0
 800c21a:	f04f 0300 	mov.w	r3, #0
 800c21e:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 800c222:	4649      	mov	r1, r9
 800c224:	008b      	lsls	r3, r1, #2
 800c226:	4641      	mov	r1, r8
 800c228:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800c22c:	4641      	mov	r1, r8
 800c22e:	008a      	lsls	r2, r1, #2
 800c230:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800c234:	f7f4 fd28 	bl	8000c88 <__aeabi_uldivmod>
 800c238:	4602      	mov	r2, r0
 800c23a:	460b      	mov	r3, r1
 800c23c:	4b0d      	ldr	r3, [pc, #52]	; (800c274 <UART_SetConfig+0x4e4>)
 800c23e:	fba3 1302 	umull	r1, r3, r3, r2
 800c242:	095b      	lsrs	r3, r3, #5
 800c244:	2164      	movs	r1, #100	; 0x64
 800c246:	fb01 f303 	mul.w	r3, r1, r3
 800c24a:	1ad3      	subs	r3, r2, r3
 800c24c:	011b      	lsls	r3, r3, #4
 800c24e:	3332      	adds	r3, #50	; 0x32
 800c250:	4a08      	ldr	r2, [pc, #32]	; (800c274 <UART_SetConfig+0x4e4>)
 800c252:	fba2 2303 	umull	r2, r3, r2, r3
 800c256:	095b      	lsrs	r3, r3, #5
 800c258:	f003 020f 	and.w	r2, r3, #15
 800c25c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800c260:	681b      	ldr	r3, [r3, #0]
 800c262:	4422      	add	r2, r4
 800c264:	609a      	str	r2, [r3, #8]
 800c266:	bf00      	nop
 800c268:	f507 7780 	add.w	r7, r7, #256	; 0x100
 800c26c:	46bd      	mov	sp, r7
 800c26e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800c272:	bf00      	nop
 800c274:	51eb851f 	.word	0x51eb851f

0800c278 <__errno>:
 800c278:	4b01      	ldr	r3, [pc, #4]	; (800c280 <__errno+0x8>)
 800c27a:	6818      	ldr	r0, [r3, #0]
 800c27c:	4770      	bx	lr
 800c27e:	bf00      	nop
 800c280:	200000b0 	.word	0x200000b0

0800c284 <__libc_init_array>:
 800c284:	b570      	push	{r4, r5, r6, lr}
 800c286:	4d0d      	ldr	r5, [pc, #52]	; (800c2bc <__libc_init_array+0x38>)
 800c288:	4c0d      	ldr	r4, [pc, #52]	; (800c2c0 <__libc_init_array+0x3c>)
 800c28a:	1b64      	subs	r4, r4, r5
 800c28c:	10a4      	asrs	r4, r4, #2
 800c28e:	2600      	movs	r6, #0
 800c290:	42a6      	cmp	r6, r4
 800c292:	d109      	bne.n	800c2a8 <__libc_init_array+0x24>
 800c294:	4d0b      	ldr	r5, [pc, #44]	; (800c2c4 <__libc_init_array+0x40>)
 800c296:	4c0c      	ldr	r4, [pc, #48]	; (800c2c8 <__libc_init_array+0x44>)
 800c298:	f004 f950 	bl	801053c <_init>
 800c29c:	1b64      	subs	r4, r4, r5
 800c29e:	10a4      	asrs	r4, r4, #2
 800c2a0:	2600      	movs	r6, #0
 800c2a2:	42a6      	cmp	r6, r4
 800c2a4:	d105      	bne.n	800c2b2 <__libc_init_array+0x2e>
 800c2a6:	bd70      	pop	{r4, r5, r6, pc}
 800c2a8:	f855 3b04 	ldr.w	r3, [r5], #4
 800c2ac:	4798      	blx	r3
 800c2ae:	3601      	adds	r6, #1
 800c2b0:	e7ee      	b.n	800c290 <__libc_init_array+0xc>
 800c2b2:	f855 3b04 	ldr.w	r3, [r5], #4
 800c2b6:	4798      	blx	r3
 800c2b8:	3601      	adds	r6, #1
 800c2ba:	e7f2      	b.n	800c2a2 <__libc_init_array+0x1e>
 800c2bc:	08010cb8 	.word	0x08010cb8
 800c2c0:	08010cb8 	.word	0x08010cb8
 800c2c4:	08010cb8 	.word	0x08010cb8
 800c2c8:	08010cbc 	.word	0x08010cbc

0800c2cc <memset>:
 800c2cc:	4402      	add	r2, r0
 800c2ce:	4603      	mov	r3, r0
 800c2d0:	4293      	cmp	r3, r2
 800c2d2:	d100      	bne.n	800c2d6 <memset+0xa>
 800c2d4:	4770      	bx	lr
 800c2d6:	f803 1b01 	strb.w	r1, [r3], #1
 800c2da:	e7f9      	b.n	800c2d0 <memset+0x4>

0800c2dc <__cvt>:
 800c2dc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c2e0:	ec55 4b10 	vmov	r4, r5, d0
 800c2e4:	2d00      	cmp	r5, #0
 800c2e6:	460e      	mov	r6, r1
 800c2e8:	4619      	mov	r1, r3
 800c2ea:	462b      	mov	r3, r5
 800c2ec:	bfbb      	ittet	lt
 800c2ee:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 800c2f2:	461d      	movlt	r5, r3
 800c2f4:	2300      	movge	r3, #0
 800c2f6:	232d      	movlt	r3, #45	; 0x2d
 800c2f8:	700b      	strb	r3, [r1, #0]
 800c2fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c2fc:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800c300:	4691      	mov	r9, r2
 800c302:	f023 0820 	bic.w	r8, r3, #32
 800c306:	bfbc      	itt	lt
 800c308:	4622      	movlt	r2, r4
 800c30a:	4614      	movlt	r4, r2
 800c30c:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800c310:	d005      	beq.n	800c31e <__cvt+0x42>
 800c312:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800c316:	d100      	bne.n	800c31a <__cvt+0x3e>
 800c318:	3601      	adds	r6, #1
 800c31a:	2102      	movs	r1, #2
 800c31c:	e000      	b.n	800c320 <__cvt+0x44>
 800c31e:	2103      	movs	r1, #3
 800c320:	ab03      	add	r3, sp, #12
 800c322:	9301      	str	r3, [sp, #4]
 800c324:	ab02      	add	r3, sp, #8
 800c326:	9300      	str	r3, [sp, #0]
 800c328:	ec45 4b10 	vmov	d0, r4, r5
 800c32c:	4653      	mov	r3, sl
 800c32e:	4632      	mov	r2, r6
 800c330:	f000 fcea 	bl	800cd08 <_dtoa_r>
 800c334:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800c338:	4607      	mov	r7, r0
 800c33a:	d102      	bne.n	800c342 <__cvt+0x66>
 800c33c:	f019 0f01 	tst.w	r9, #1
 800c340:	d022      	beq.n	800c388 <__cvt+0xac>
 800c342:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800c346:	eb07 0906 	add.w	r9, r7, r6
 800c34a:	d110      	bne.n	800c36e <__cvt+0x92>
 800c34c:	783b      	ldrb	r3, [r7, #0]
 800c34e:	2b30      	cmp	r3, #48	; 0x30
 800c350:	d10a      	bne.n	800c368 <__cvt+0x8c>
 800c352:	2200      	movs	r2, #0
 800c354:	2300      	movs	r3, #0
 800c356:	4620      	mov	r0, r4
 800c358:	4629      	mov	r1, r5
 800c35a:	f7f4 fbd5 	bl	8000b08 <__aeabi_dcmpeq>
 800c35e:	b918      	cbnz	r0, 800c368 <__cvt+0x8c>
 800c360:	f1c6 0601 	rsb	r6, r6, #1
 800c364:	f8ca 6000 	str.w	r6, [sl]
 800c368:	f8da 3000 	ldr.w	r3, [sl]
 800c36c:	4499      	add	r9, r3
 800c36e:	2200      	movs	r2, #0
 800c370:	2300      	movs	r3, #0
 800c372:	4620      	mov	r0, r4
 800c374:	4629      	mov	r1, r5
 800c376:	f7f4 fbc7 	bl	8000b08 <__aeabi_dcmpeq>
 800c37a:	b108      	cbz	r0, 800c380 <__cvt+0xa4>
 800c37c:	f8cd 900c 	str.w	r9, [sp, #12]
 800c380:	2230      	movs	r2, #48	; 0x30
 800c382:	9b03      	ldr	r3, [sp, #12]
 800c384:	454b      	cmp	r3, r9
 800c386:	d307      	bcc.n	800c398 <__cvt+0xbc>
 800c388:	9b03      	ldr	r3, [sp, #12]
 800c38a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800c38c:	1bdb      	subs	r3, r3, r7
 800c38e:	4638      	mov	r0, r7
 800c390:	6013      	str	r3, [r2, #0]
 800c392:	b004      	add	sp, #16
 800c394:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c398:	1c59      	adds	r1, r3, #1
 800c39a:	9103      	str	r1, [sp, #12]
 800c39c:	701a      	strb	r2, [r3, #0]
 800c39e:	e7f0      	b.n	800c382 <__cvt+0xa6>

0800c3a0 <__exponent>:
 800c3a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c3a2:	4603      	mov	r3, r0
 800c3a4:	2900      	cmp	r1, #0
 800c3a6:	bfb8      	it	lt
 800c3a8:	4249      	neglt	r1, r1
 800c3aa:	f803 2b02 	strb.w	r2, [r3], #2
 800c3ae:	bfb4      	ite	lt
 800c3b0:	222d      	movlt	r2, #45	; 0x2d
 800c3b2:	222b      	movge	r2, #43	; 0x2b
 800c3b4:	2909      	cmp	r1, #9
 800c3b6:	7042      	strb	r2, [r0, #1]
 800c3b8:	dd2a      	ble.n	800c410 <__exponent+0x70>
 800c3ba:	f10d 0407 	add.w	r4, sp, #7
 800c3be:	46a4      	mov	ip, r4
 800c3c0:	270a      	movs	r7, #10
 800c3c2:	46a6      	mov	lr, r4
 800c3c4:	460a      	mov	r2, r1
 800c3c6:	fb91 f6f7 	sdiv	r6, r1, r7
 800c3ca:	fb07 1516 	mls	r5, r7, r6, r1
 800c3ce:	3530      	adds	r5, #48	; 0x30
 800c3d0:	2a63      	cmp	r2, #99	; 0x63
 800c3d2:	f104 34ff 	add.w	r4, r4, #4294967295
 800c3d6:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800c3da:	4631      	mov	r1, r6
 800c3dc:	dcf1      	bgt.n	800c3c2 <__exponent+0x22>
 800c3de:	3130      	adds	r1, #48	; 0x30
 800c3e0:	f1ae 0502 	sub.w	r5, lr, #2
 800c3e4:	f804 1c01 	strb.w	r1, [r4, #-1]
 800c3e8:	1c44      	adds	r4, r0, #1
 800c3ea:	4629      	mov	r1, r5
 800c3ec:	4561      	cmp	r1, ip
 800c3ee:	d30a      	bcc.n	800c406 <__exponent+0x66>
 800c3f0:	f10d 0209 	add.w	r2, sp, #9
 800c3f4:	eba2 020e 	sub.w	r2, r2, lr
 800c3f8:	4565      	cmp	r5, ip
 800c3fa:	bf88      	it	hi
 800c3fc:	2200      	movhi	r2, #0
 800c3fe:	4413      	add	r3, r2
 800c400:	1a18      	subs	r0, r3, r0
 800c402:	b003      	add	sp, #12
 800c404:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c406:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c40a:	f804 2f01 	strb.w	r2, [r4, #1]!
 800c40e:	e7ed      	b.n	800c3ec <__exponent+0x4c>
 800c410:	2330      	movs	r3, #48	; 0x30
 800c412:	3130      	adds	r1, #48	; 0x30
 800c414:	7083      	strb	r3, [r0, #2]
 800c416:	70c1      	strb	r1, [r0, #3]
 800c418:	1d03      	adds	r3, r0, #4
 800c41a:	e7f1      	b.n	800c400 <__exponent+0x60>

0800c41c <_printf_float>:
 800c41c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c420:	ed2d 8b02 	vpush	{d8}
 800c424:	b08d      	sub	sp, #52	; 0x34
 800c426:	460c      	mov	r4, r1
 800c428:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 800c42c:	4616      	mov	r6, r2
 800c42e:	461f      	mov	r7, r3
 800c430:	4605      	mov	r5, r0
 800c432:	f001 fa57 	bl	800d8e4 <_localeconv_r>
 800c436:	f8d0 a000 	ldr.w	sl, [r0]
 800c43a:	4650      	mov	r0, sl
 800c43c:	f7f3 fee8 	bl	8000210 <strlen>
 800c440:	2300      	movs	r3, #0
 800c442:	930a      	str	r3, [sp, #40]	; 0x28
 800c444:	6823      	ldr	r3, [r4, #0]
 800c446:	9305      	str	r3, [sp, #20]
 800c448:	f8d8 3000 	ldr.w	r3, [r8]
 800c44c:	f894 b018 	ldrb.w	fp, [r4, #24]
 800c450:	3307      	adds	r3, #7
 800c452:	f023 0307 	bic.w	r3, r3, #7
 800c456:	f103 0208 	add.w	r2, r3, #8
 800c45a:	f8c8 2000 	str.w	r2, [r8]
 800c45e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c462:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800c466:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 800c46a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800c46e:	9307      	str	r3, [sp, #28]
 800c470:	f8cd 8018 	str.w	r8, [sp, #24]
 800c474:	ee08 0a10 	vmov	s16, r0
 800c478:	4b9f      	ldr	r3, [pc, #636]	; (800c6f8 <_printf_float+0x2dc>)
 800c47a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800c47e:	f04f 32ff 	mov.w	r2, #4294967295
 800c482:	f7f4 fb73 	bl	8000b6c <__aeabi_dcmpun>
 800c486:	bb88      	cbnz	r0, 800c4ec <_printf_float+0xd0>
 800c488:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800c48c:	4b9a      	ldr	r3, [pc, #616]	; (800c6f8 <_printf_float+0x2dc>)
 800c48e:	f04f 32ff 	mov.w	r2, #4294967295
 800c492:	f7f4 fb4d 	bl	8000b30 <__aeabi_dcmple>
 800c496:	bb48      	cbnz	r0, 800c4ec <_printf_float+0xd0>
 800c498:	2200      	movs	r2, #0
 800c49a:	2300      	movs	r3, #0
 800c49c:	4640      	mov	r0, r8
 800c49e:	4649      	mov	r1, r9
 800c4a0:	f7f4 fb3c 	bl	8000b1c <__aeabi_dcmplt>
 800c4a4:	b110      	cbz	r0, 800c4ac <_printf_float+0x90>
 800c4a6:	232d      	movs	r3, #45	; 0x2d
 800c4a8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c4ac:	4b93      	ldr	r3, [pc, #588]	; (800c6fc <_printf_float+0x2e0>)
 800c4ae:	4894      	ldr	r0, [pc, #592]	; (800c700 <_printf_float+0x2e4>)
 800c4b0:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 800c4b4:	bf94      	ite	ls
 800c4b6:	4698      	movls	r8, r3
 800c4b8:	4680      	movhi	r8, r0
 800c4ba:	2303      	movs	r3, #3
 800c4bc:	6123      	str	r3, [r4, #16]
 800c4be:	9b05      	ldr	r3, [sp, #20]
 800c4c0:	f023 0204 	bic.w	r2, r3, #4
 800c4c4:	6022      	str	r2, [r4, #0]
 800c4c6:	f04f 0900 	mov.w	r9, #0
 800c4ca:	9700      	str	r7, [sp, #0]
 800c4cc:	4633      	mov	r3, r6
 800c4ce:	aa0b      	add	r2, sp, #44	; 0x2c
 800c4d0:	4621      	mov	r1, r4
 800c4d2:	4628      	mov	r0, r5
 800c4d4:	f000 f9d8 	bl	800c888 <_printf_common>
 800c4d8:	3001      	adds	r0, #1
 800c4da:	f040 8090 	bne.w	800c5fe <_printf_float+0x1e2>
 800c4de:	f04f 30ff 	mov.w	r0, #4294967295
 800c4e2:	b00d      	add	sp, #52	; 0x34
 800c4e4:	ecbd 8b02 	vpop	{d8}
 800c4e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c4ec:	4642      	mov	r2, r8
 800c4ee:	464b      	mov	r3, r9
 800c4f0:	4640      	mov	r0, r8
 800c4f2:	4649      	mov	r1, r9
 800c4f4:	f7f4 fb3a 	bl	8000b6c <__aeabi_dcmpun>
 800c4f8:	b140      	cbz	r0, 800c50c <_printf_float+0xf0>
 800c4fa:	464b      	mov	r3, r9
 800c4fc:	2b00      	cmp	r3, #0
 800c4fe:	bfbc      	itt	lt
 800c500:	232d      	movlt	r3, #45	; 0x2d
 800c502:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800c506:	487f      	ldr	r0, [pc, #508]	; (800c704 <_printf_float+0x2e8>)
 800c508:	4b7f      	ldr	r3, [pc, #508]	; (800c708 <_printf_float+0x2ec>)
 800c50a:	e7d1      	b.n	800c4b0 <_printf_float+0x94>
 800c50c:	6863      	ldr	r3, [r4, #4]
 800c50e:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 800c512:	9206      	str	r2, [sp, #24]
 800c514:	1c5a      	adds	r2, r3, #1
 800c516:	d13f      	bne.n	800c598 <_printf_float+0x17c>
 800c518:	2306      	movs	r3, #6
 800c51a:	6063      	str	r3, [r4, #4]
 800c51c:	9b05      	ldr	r3, [sp, #20]
 800c51e:	6861      	ldr	r1, [r4, #4]
 800c520:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 800c524:	2300      	movs	r3, #0
 800c526:	9303      	str	r3, [sp, #12]
 800c528:	ab0a      	add	r3, sp, #40	; 0x28
 800c52a:	e9cd b301 	strd	fp, r3, [sp, #4]
 800c52e:	ab09      	add	r3, sp, #36	; 0x24
 800c530:	ec49 8b10 	vmov	d0, r8, r9
 800c534:	9300      	str	r3, [sp, #0]
 800c536:	6022      	str	r2, [r4, #0]
 800c538:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 800c53c:	4628      	mov	r0, r5
 800c53e:	f7ff fecd 	bl	800c2dc <__cvt>
 800c542:	9b06      	ldr	r3, [sp, #24]
 800c544:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c546:	2b47      	cmp	r3, #71	; 0x47
 800c548:	4680      	mov	r8, r0
 800c54a:	d108      	bne.n	800c55e <_printf_float+0x142>
 800c54c:	1cc8      	adds	r0, r1, #3
 800c54e:	db02      	blt.n	800c556 <_printf_float+0x13a>
 800c550:	6863      	ldr	r3, [r4, #4]
 800c552:	4299      	cmp	r1, r3
 800c554:	dd41      	ble.n	800c5da <_printf_float+0x1be>
 800c556:	f1ab 0b02 	sub.w	fp, fp, #2
 800c55a:	fa5f fb8b 	uxtb.w	fp, fp
 800c55e:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800c562:	d820      	bhi.n	800c5a6 <_printf_float+0x18a>
 800c564:	3901      	subs	r1, #1
 800c566:	465a      	mov	r2, fp
 800c568:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800c56c:	9109      	str	r1, [sp, #36]	; 0x24
 800c56e:	f7ff ff17 	bl	800c3a0 <__exponent>
 800c572:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c574:	1813      	adds	r3, r2, r0
 800c576:	2a01      	cmp	r2, #1
 800c578:	4681      	mov	r9, r0
 800c57a:	6123      	str	r3, [r4, #16]
 800c57c:	dc02      	bgt.n	800c584 <_printf_float+0x168>
 800c57e:	6822      	ldr	r2, [r4, #0]
 800c580:	07d2      	lsls	r2, r2, #31
 800c582:	d501      	bpl.n	800c588 <_printf_float+0x16c>
 800c584:	3301      	adds	r3, #1
 800c586:	6123      	str	r3, [r4, #16]
 800c588:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 800c58c:	2b00      	cmp	r3, #0
 800c58e:	d09c      	beq.n	800c4ca <_printf_float+0xae>
 800c590:	232d      	movs	r3, #45	; 0x2d
 800c592:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c596:	e798      	b.n	800c4ca <_printf_float+0xae>
 800c598:	9a06      	ldr	r2, [sp, #24]
 800c59a:	2a47      	cmp	r2, #71	; 0x47
 800c59c:	d1be      	bne.n	800c51c <_printf_float+0x100>
 800c59e:	2b00      	cmp	r3, #0
 800c5a0:	d1bc      	bne.n	800c51c <_printf_float+0x100>
 800c5a2:	2301      	movs	r3, #1
 800c5a4:	e7b9      	b.n	800c51a <_printf_float+0xfe>
 800c5a6:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 800c5aa:	d118      	bne.n	800c5de <_printf_float+0x1c2>
 800c5ac:	2900      	cmp	r1, #0
 800c5ae:	6863      	ldr	r3, [r4, #4]
 800c5b0:	dd0b      	ble.n	800c5ca <_printf_float+0x1ae>
 800c5b2:	6121      	str	r1, [r4, #16]
 800c5b4:	b913      	cbnz	r3, 800c5bc <_printf_float+0x1a0>
 800c5b6:	6822      	ldr	r2, [r4, #0]
 800c5b8:	07d0      	lsls	r0, r2, #31
 800c5ba:	d502      	bpl.n	800c5c2 <_printf_float+0x1a6>
 800c5bc:	3301      	adds	r3, #1
 800c5be:	440b      	add	r3, r1
 800c5c0:	6123      	str	r3, [r4, #16]
 800c5c2:	65a1      	str	r1, [r4, #88]	; 0x58
 800c5c4:	f04f 0900 	mov.w	r9, #0
 800c5c8:	e7de      	b.n	800c588 <_printf_float+0x16c>
 800c5ca:	b913      	cbnz	r3, 800c5d2 <_printf_float+0x1b6>
 800c5cc:	6822      	ldr	r2, [r4, #0]
 800c5ce:	07d2      	lsls	r2, r2, #31
 800c5d0:	d501      	bpl.n	800c5d6 <_printf_float+0x1ba>
 800c5d2:	3302      	adds	r3, #2
 800c5d4:	e7f4      	b.n	800c5c0 <_printf_float+0x1a4>
 800c5d6:	2301      	movs	r3, #1
 800c5d8:	e7f2      	b.n	800c5c0 <_printf_float+0x1a4>
 800c5da:	f04f 0b67 	mov.w	fp, #103	; 0x67
 800c5de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c5e0:	4299      	cmp	r1, r3
 800c5e2:	db05      	blt.n	800c5f0 <_printf_float+0x1d4>
 800c5e4:	6823      	ldr	r3, [r4, #0]
 800c5e6:	6121      	str	r1, [r4, #16]
 800c5e8:	07d8      	lsls	r0, r3, #31
 800c5ea:	d5ea      	bpl.n	800c5c2 <_printf_float+0x1a6>
 800c5ec:	1c4b      	adds	r3, r1, #1
 800c5ee:	e7e7      	b.n	800c5c0 <_printf_float+0x1a4>
 800c5f0:	2900      	cmp	r1, #0
 800c5f2:	bfd4      	ite	le
 800c5f4:	f1c1 0202 	rsble	r2, r1, #2
 800c5f8:	2201      	movgt	r2, #1
 800c5fa:	4413      	add	r3, r2
 800c5fc:	e7e0      	b.n	800c5c0 <_printf_float+0x1a4>
 800c5fe:	6823      	ldr	r3, [r4, #0]
 800c600:	055a      	lsls	r2, r3, #21
 800c602:	d407      	bmi.n	800c614 <_printf_float+0x1f8>
 800c604:	6923      	ldr	r3, [r4, #16]
 800c606:	4642      	mov	r2, r8
 800c608:	4631      	mov	r1, r6
 800c60a:	4628      	mov	r0, r5
 800c60c:	47b8      	blx	r7
 800c60e:	3001      	adds	r0, #1
 800c610:	d12c      	bne.n	800c66c <_printf_float+0x250>
 800c612:	e764      	b.n	800c4de <_printf_float+0xc2>
 800c614:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800c618:	f240 80e0 	bls.w	800c7dc <_printf_float+0x3c0>
 800c61c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800c620:	2200      	movs	r2, #0
 800c622:	2300      	movs	r3, #0
 800c624:	f7f4 fa70 	bl	8000b08 <__aeabi_dcmpeq>
 800c628:	2800      	cmp	r0, #0
 800c62a:	d034      	beq.n	800c696 <_printf_float+0x27a>
 800c62c:	4a37      	ldr	r2, [pc, #220]	; (800c70c <_printf_float+0x2f0>)
 800c62e:	2301      	movs	r3, #1
 800c630:	4631      	mov	r1, r6
 800c632:	4628      	mov	r0, r5
 800c634:	47b8      	blx	r7
 800c636:	3001      	adds	r0, #1
 800c638:	f43f af51 	beq.w	800c4de <_printf_float+0xc2>
 800c63c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c640:	429a      	cmp	r2, r3
 800c642:	db02      	blt.n	800c64a <_printf_float+0x22e>
 800c644:	6823      	ldr	r3, [r4, #0]
 800c646:	07d8      	lsls	r0, r3, #31
 800c648:	d510      	bpl.n	800c66c <_printf_float+0x250>
 800c64a:	ee18 3a10 	vmov	r3, s16
 800c64e:	4652      	mov	r2, sl
 800c650:	4631      	mov	r1, r6
 800c652:	4628      	mov	r0, r5
 800c654:	47b8      	blx	r7
 800c656:	3001      	adds	r0, #1
 800c658:	f43f af41 	beq.w	800c4de <_printf_float+0xc2>
 800c65c:	f04f 0800 	mov.w	r8, #0
 800c660:	f104 091a 	add.w	r9, r4, #26
 800c664:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c666:	3b01      	subs	r3, #1
 800c668:	4543      	cmp	r3, r8
 800c66a:	dc09      	bgt.n	800c680 <_printf_float+0x264>
 800c66c:	6823      	ldr	r3, [r4, #0]
 800c66e:	079b      	lsls	r3, r3, #30
 800c670:	f100 8105 	bmi.w	800c87e <_printf_float+0x462>
 800c674:	68e0      	ldr	r0, [r4, #12]
 800c676:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c678:	4298      	cmp	r0, r3
 800c67a:	bfb8      	it	lt
 800c67c:	4618      	movlt	r0, r3
 800c67e:	e730      	b.n	800c4e2 <_printf_float+0xc6>
 800c680:	2301      	movs	r3, #1
 800c682:	464a      	mov	r2, r9
 800c684:	4631      	mov	r1, r6
 800c686:	4628      	mov	r0, r5
 800c688:	47b8      	blx	r7
 800c68a:	3001      	adds	r0, #1
 800c68c:	f43f af27 	beq.w	800c4de <_printf_float+0xc2>
 800c690:	f108 0801 	add.w	r8, r8, #1
 800c694:	e7e6      	b.n	800c664 <_printf_float+0x248>
 800c696:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c698:	2b00      	cmp	r3, #0
 800c69a:	dc39      	bgt.n	800c710 <_printf_float+0x2f4>
 800c69c:	4a1b      	ldr	r2, [pc, #108]	; (800c70c <_printf_float+0x2f0>)
 800c69e:	2301      	movs	r3, #1
 800c6a0:	4631      	mov	r1, r6
 800c6a2:	4628      	mov	r0, r5
 800c6a4:	47b8      	blx	r7
 800c6a6:	3001      	adds	r0, #1
 800c6a8:	f43f af19 	beq.w	800c4de <_printf_float+0xc2>
 800c6ac:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c6b0:	4313      	orrs	r3, r2
 800c6b2:	d102      	bne.n	800c6ba <_printf_float+0x29e>
 800c6b4:	6823      	ldr	r3, [r4, #0]
 800c6b6:	07d9      	lsls	r1, r3, #31
 800c6b8:	d5d8      	bpl.n	800c66c <_printf_float+0x250>
 800c6ba:	ee18 3a10 	vmov	r3, s16
 800c6be:	4652      	mov	r2, sl
 800c6c0:	4631      	mov	r1, r6
 800c6c2:	4628      	mov	r0, r5
 800c6c4:	47b8      	blx	r7
 800c6c6:	3001      	adds	r0, #1
 800c6c8:	f43f af09 	beq.w	800c4de <_printf_float+0xc2>
 800c6cc:	f04f 0900 	mov.w	r9, #0
 800c6d0:	f104 0a1a 	add.w	sl, r4, #26
 800c6d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c6d6:	425b      	negs	r3, r3
 800c6d8:	454b      	cmp	r3, r9
 800c6da:	dc01      	bgt.n	800c6e0 <_printf_float+0x2c4>
 800c6dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c6de:	e792      	b.n	800c606 <_printf_float+0x1ea>
 800c6e0:	2301      	movs	r3, #1
 800c6e2:	4652      	mov	r2, sl
 800c6e4:	4631      	mov	r1, r6
 800c6e6:	4628      	mov	r0, r5
 800c6e8:	47b8      	blx	r7
 800c6ea:	3001      	adds	r0, #1
 800c6ec:	f43f aef7 	beq.w	800c4de <_printf_float+0xc2>
 800c6f0:	f109 0901 	add.w	r9, r9, #1
 800c6f4:	e7ee      	b.n	800c6d4 <_printf_float+0x2b8>
 800c6f6:	bf00      	nop
 800c6f8:	7fefffff 	.word	0x7fefffff
 800c6fc:	080106bc 	.word	0x080106bc
 800c700:	080106c0 	.word	0x080106c0
 800c704:	080106c8 	.word	0x080106c8
 800c708:	080106c4 	.word	0x080106c4
 800c70c:	080106cc 	.word	0x080106cc
 800c710:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c712:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800c714:	429a      	cmp	r2, r3
 800c716:	bfa8      	it	ge
 800c718:	461a      	movge	r2, r3
 800c71a:	2a00      	cmp	r2, #0
 800c71c:	4691      	mov	r9, r2
 800c71e:	dc37      	bgt.n	800c790 <_printf_float+0x374>
 800c720:	f04f 0b00 	mov.w	fp, #0
 800c724:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800c728:	f104 021a 	add.w	r2, r4, #26
 800c72c:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800c72e:	9305      	str	r3, [sp, #20]
 800c730:	eba3 0309 	sub.w	r3, r3, r9
 800c734:	455b      	cmp	r3, fp
 800c736:	dc33      	bgt.n	800c7a0 <_printf_float+0x384>
 800c738:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c73c:	429a      	cmp	r2, r3
 800c73e:	db3b      	blt.n	800c7b8 <_printf_float+0x39c>
 800c740:	6823      	ldr	r3, [r4, #0]
 800c742:	07da      	lsls	r2, r3, #31
 800c744:	d438      	bmi.n	800c7b8 <_printf_float+0x39c>
 800c746:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c748:	9a05      	ldr	r2, [sp, #20]
 800c74a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c74c:	1a9a      	subs	r2, r3, r2
 800c74e:	eba3 0901 	sub.w	r9, r3, r1
 800c752:	4591      	cmp	r9, r2
 800c754:	bfa8      	it	ge
 800c756:	4691      	movge	r9, r2
 800c758:	f1b9 0f00 	cmp.w	r9, #0
 800c75c:	dc35      	bgt.n	800c7ca <_printf_float+0x3ae>
 800c75e:	f04f 0800 	mov.w	r8, #0
 800c762:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800c766:	f104 0a1a 	add.w	sl, r4, #26
 800c76a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c76e:	1a9b      	subs	r3, r3, r2
 800c770:	eba3 0309 	sub.w	r3, r3, r9
 800c774:	4543      	cmp	r3, r8
 800c776:	f77f af79 	ble.w	800c66c <_printf_float+0x250>
 800c77a:	2301      	movs	r3, #1
 800c77c:	4652      	mov	r2, sl
 800c77e:	4631      	mov	r1, r6
 800c780:	4628      	mov	r0, r5
 800c782:	47b8      	blx	r7
 800c784:	3001      	adds	r0, #1
 800c786:	f43f aeaa 	beq.w	800c4de <_printf_float+0xc2>
 800c78a:	f108 0801 	add.w	r8, r8, #1
 800c78e:	e7ec      	b.n	800c76a <_printf_float+0x34e>
 800c790:	4613      	mov	r3, r2
 800c792:	4631      	mov	r1, r6
 800c794:	4642      	mov	r2, r8
 800c796:	4628      	mov	r0, r5
 800c798:	47b8      	blx	r7
 800c79a:	3001      	adds	r0, #1
 800c79c:	d1c0      	bne.n	800c720 <_printf_float+0x304>
 800c79e:	e69e      	b.n	800c4de <_printf_float+0xc2>
 800c7a0:	2301      	movs	r3, #1
 800c7a2:	4631      	mov	r1, r6
 800c7a4:	4628      	mov	r0, r5
 800c7a6:	9205      	str	r2, [sp, #20]
 800c7a8:	47b8      	blx	r7
 800c7aa:	3001      	adds	r0, #1
 800c7ac:	f43f ae97 	beq.w	800c4de <_printf_float+0xc2>
 800c7b0:	9a05      	ldr	r2, [sp, #20]
 800c7b2:	f10b 0b01 	add.w	fp, fp, #1
 800c7b6:	e7b9      	b.n	800c72c <_printf_float+0x310>
 800c7b8:	ee18 3a10 	vmov	r3, s16
 800c7bc:	4652      	mov	r2, sl
 800c7be:	4631      	mov	r1, r6
 800c7c0:	4628      	mov	r0, r5
 800c7c2:	47b8      	blx	r7
 800c7c4:	3001      	adds	r0, #1
 800c7c6:	d1be      	bne.n	800c746 <_printf_float+0x32a>
 800c7c8:	e689      	b.n	800c4de <_printf_float+0xc2>
 800c7ca:	9a05      	ldr	r2, [sp, #20]
 800c7cc:	464b      	mov	r3, r9
 800c7ce:	4442      	add	r2, r8
 800c7d0:	4631      	mov	r1, r6
 800c7d2:	4628      	mov	r0, r5
 800c7d4:	47b8      	blx	r7
 800c7d6:	3001      	adds	r0, #1
 800c7d8:	d1c1      	bne.n	800c75e <_printf_float+0x342>
 800c7da:	e680      	b.n	800c4de <_printf_float+0xc2>
 800c7dc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c7de:	2a01      	cmp	r2, #1
 800c7e0:	dc01      	bgt.n	800c7e6 <_printf_float+0x3ca>
 800c7e2:	07db      	lsls	r3, r3, #31
 800c7e4:	d538      	bpl.n	800c858 <_printf_float+0x43c>
 800c7e6:	2301      	movs	r3, #1
 800c7e8:	4642      	mov	r2, r8
 800c7ea:	4631      	mov	r1, r6
 800c7ec:	4628      	mov	r0, r5
 800c7ee:	47b8      	blx	r7
 800c7f0:	3001      	adds	r0, #1
 800c7f2:	f43f ae74 	beq.w	800c4de <_printf_float+0xc2>
 800c7f6:	ee18 3a10 	vmov	r3, s16
 800c7fa:	4652      	mov	r2, sl
 800c7fc:	4631      	mov	r1, r6
 800c7fe:	4628      	mov	r0, r5
 800c800:	47b8      	blx	r7
 800c802:	3001      	adds	r0, #1
 800c804:	f43f ae6b 	beq.w	800c4de <_printf_float+0xc2>
 800c808:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800c80c:	2200      	movs	r2, #0
 800c80e:	2300      	movs	r3, #0
 800c810:	f7f4 f97a 	bl	8000b08 <__aeabi_dcmpeq>
 800c814:	b9d8      	cbnz	r0, 800c84e <_printf_float+0x432>
 800c816:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c818:	f108 0201 	add.w	r2, r8, #1
 800c81c:	3b01      	subs	r3, #1
 800c81e:	4631      	mov	r1, r6
 800c820:	4628      	mov	r0, r5
 800c822:	47b8      	blx	r7
 800c824:	3001      	adds	r0, #1
 800c826:	d10e      	bne.n	800c846 <_printf_float+0x42a>
 800c828:	e659      	b.n	800c4de <_printf_float+0xc2>
 800c82a:	2301      	movs	r3, #1
 800c82c:	4652      	mov	r2, sl
 800c82e:	4631      	mov	r1, r6
 800c830:	4628      	mov	r0, r5
 800c832:	47b8      	blx	r7
 800c834:	3001      	adds	r0, #1
 800c836:	f43f ae52 	beq.w	800c4de <_printf_float+0xc2>
 800c83a:	f108 0801 	add.w	r8, r8, #1
 800c83e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c840:	3b01      	subs	r3, #1
 800c842:	4543      	cmp	r3, r8
 800c844:	dcf1      	bgt.n	800c82a <_printf_float+0x40e>
 800c846:	464b      	mov	r3, r9
 800c848:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800c84c:	e6dc      	b.n	800c608 <_printf_float+0x1ec>
 800c84e:	f04f 0800 	mov.w	r8, #0
 800c852:	f104 0a1a 	add.w	sl, r4, #26
 800c856:	e7f2      	b.n	800c83e <_printf_float+0x422>
 800c858:	2301      	movs	r3, #1
 800c85a:	4642      	mov	r2, r8
 800c85c:	e7df      	b.n	800c81e <_printf_float+0x402>
 800c85e:	2301      	movs	r3, #1
 800c860:	464a      	mov	r2, r9
 800c862:	4631      	mov	r1, r6
 800c864:	4628      	mov	r0, r5
 800c866:	47b8      	blx	r7
 800c868:	3001      	adds	r0, #1
 800c86a:	f43f ae38 	beq.w	800c4de <_printf_float+0xc2>
 800c86e:	f108 0801 	add.w	r8, r8, #1
 800c872:	68e3      	ldr	r3, [r4, #12]
 800c874:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800c876:	1a5b      	subs	r3, r3, r1
 800c878:	4543      	cmp	r3, r8
 800c87a:	dcf0      	bgt.n	800c85e <_printf_float+0x442>
 800c87c:	e6fa      	b.n	800c674 <_printf_float+0x258>
 800c87e:	f04f 0800 	mov.w	r8, #0
 800c882:	f104 0919 	add.w	r9, r4, #25
 800c886:	e7f4      	b.n	800c872 <_printf_float+0x456>

0800c888 <_printf_common>:
 800c888:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c88c:	4616      	mov	r6, r2
 800c88e:	4699      	mov	r9, r3
 800c890:	688a      	ldr	r2, [r1, #8]
 800c892:	690b      	ldr	r3, [r1, #16]
 800c894:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800c898:	4293      	cmp	r3, r2
 800c89a:	bfb8      	it	lt
 800c89c:	4613      	movlt	r3, r2
 800c89e:	6033      	str	r3, [r6, #0]
 800c8a0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800c8a4:	4607      	mov	r7, r0
 800c8a6:	460c      	mov	r4, r1
 800c8a8:	b10a      	cbz	r2, 800c8ae <_printf_common+0x26>
 800c8aa:	3301      	adds	r3, #1
 800c8ac:	6033      	str	r3, [r6, #0]
 800c8ae:	6823      	ldr	r3, [r4, #0]
 800c8b0:	0699      	lsls	r1, r3, #26
 800c8b2:	bf42      	ittt	mi
 800c8b4:	6833      	ldrmi	r3, [r6, #0]
 800c8b6:	3302      	addmi	r3, #2
 800c8b8:	6033      	strmi	r3, [r6, #0]
 800c8ba:	6825      	ldr	r5, [r4, #0]
 800c8bc:	f015 0506 	ands.w	r5, r5, #6
 800c8c0:	d106      	bne.n	800c8d0 <_printf_common+0x48>
 800c8c2:	f104 0a19 	add.w	sl, r4, #25
 800c8c6:	68e3      	ldr	r3, [r4, #12]
 800c8c8:	6832      	ldr	r2, [r6, #0]
 800c8ca:	1a9b      	subs	r3, r3, r2
 800c8cc:	42ab      	cmp	r3, r5
 800c8ce:	dc26      	bgt.n	800c91e <_printf_common+0x96>
 800c8d0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800c8d4:	1e13      	subs	r3, r2, #0
 800c8d6:	6822      	ldr	r2, [r4, #0]
 800c8d8:	bf18      	it	ne
 800c8da:	2301      	movne	r3, #1
 800c8dc:	0692      	lsls	r2, r2, #26
 800c8de:	d42b      	bmi.n	800c938 <_printf_common+0xb0>
 800c8e0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800c8e4:	4649      	mov	r1, r9
 800c8e6:	4638      	mov	r0, r7
 800c8e8:	47c0      	blx	r8
 800c8ea:	3001      	adds	r0, #1
 800c8ec:	d01e      	beq.n	800c92c <_printf_common+0xa4>
 800c8ee:	6823      	ldr	r3, [r4, #0]
 800c8f0:	68e5      	ldr	r5, [r4, #12]
 800c8f2:	6832      	ldr	r2, [r6, #0]
 800c8f4:	f003 0306 	and.w	r3, r3, #6
 800c8f8:	2b04      	cmp	r3, #4
 800c8fa:	bf08      	it	eq
 800c8fc:	1aad      	subeq	r5, r5, r2
 800c8fe:	68a3      	ldr	r3, [r4, #8]
 800c900:	6922      	ldr	r2, [r4, #16]
 800c902:	bf0c      	ite	eq
 800c904:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800c908:	2500      	movne	r5, #0
 800c90a:	4293      	cmp	r3, r2
 800c90c:	bfc4      	itt	gt
 800c90e:	1a9b      	subgt	r3, r3, r2
 800c910:	18ed      	addgt	r5, r5, r3
 800c912:	2600      	movs	r6, #0
 800c914:	341a      	adds	r4, #26
 800c916:	42b5      	cmp	r5, r6
 800c918:	d11a      	bne.n	800c950 <_printf_common+0xc8>
 800c91a:	2000      	movs	r0, #0
 800c91c:	e008      	b.n	800c930 <_printf_common+0xa8>
 800c91e:	2301      	movs	r3, #1
 800c920:	4652      	mov	r2, sl
 800c922:	4649      	mov	r1, r9
 800c924:	4638      	mov	r0, r7
 800c926:	47c0      	blx	r8
 800c928:	3001      	adds	r0, #1
 800c92a:	d103      	bne.n	800c934 <_printf_common+0xac>
 800c92c:	f04f 30ff 	mov.w	r0, #4294967295
 800c930:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c934:	3501      	adds	r5, #1
 800c936:	e7c6      	b.n	800c8c6 <_printf_common+0x3e>
 800c938:	18e1      	adds	r1, r4, r3
 800c93a:	1c5a      	adds	r2, r3, #1
 800c93c:	2030      	movs	r0, #48	; 0x30
 800c93e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800c942:	4422      	add	r2, r4
 800c944:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800c948:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800c94c:	3302      	adds	r3, #2
 800c94e:	e7c7      	b.n	800c8e0 <_printf_common+0x58>
 800c950:	2301      	movs	r3, #1
 800c952:	4622      	mov	r2, r4
 800c954:	4649      	mov	r1, r9
 800c956:	4638      	mov	r0, r7
 800c958:	47c0      	blx	r8
 800c95a:	3001      	adds	r0, #1
 800c95c:	d0e6      	beq.n	800c92c <_printf_common+0xa4>
 800c95e:	3601      	adds	r6, #1
 800c960:	e7d9      	b.n	800c916 <_printf_common+0x8e>
	...

0800c964 <_printf_i>:
 800c964:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c968:	7e0f      	ldrb	r7, [r1, #24]
 800c96a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800c96c:	2f78      	cmp	r7, #120	; 0x78
 800c96e:	4691      	mov	r9, r2
 800c970:	4680      	mov	r8, r0
 800c972:	460c      	mov	r4, r1
 800c974:	469a      	mov	sl, r3
 800c976:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800c97a:	d807      	bhi.n	800c98c <_printf_i+0x28>
 800c97c:	2f62      	cmp	r7, #98	; 0x62
 800c97e:	d80a      	bhi.n	800c996 <_printf_i+0x32>
 800c980:	2f00      	cmp	r7, #0
 800c982:	f000 80d8 	beq.w	800cb36 <_printf_i+0x1d2>
 800c986:	2f58      	cmp	r7, #88	; 0x58
 800c988:	f000 80a3 	beq.w	800cad2 <_printf_i+0x16e>
 800c98c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800c990:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800c994:	e03a      	b.n	800ca0c <_printf_i+0xa8>
 800c996:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800c99a:	2b15      	cmp	r3, #21
 800c99c:	d8f6      	bhi.n	800c98c <_printf_i+0x28>
 800c99e:	a101      	add	r1, pc, #4	; (adr r1, 800c9a4 <_printf_i+0x40>)
 800c9a0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800c9a4:	0800c9fd 	.word	0x0800c9fd
 800c9a8:	0800ca11 	.word	0x0800ca11
 800c9ac:	0800c98d 	.word	0x0800c98d
 800c9b0:	0800c98d 	.word	0x0800c98d
 800c9b4:	0800c98d 	.word	0x0800c98d
 800c9b8:	0800c98d 	.word	0x0800c98d
 800c9bc:	0800ca11 	.word	0x0800ca11
 800c9c0:	0800c98d 	.word	0x0800c98d
 800c9c4:	0800c98d 	.word	0x0800c98d
 800c9c8:	0800c98d 	.word	0x0800c98d
 800c9cc:	0800c98d 	.word	0x0800c98d
 800c9d0:	0800cb1d 	.word	0x0800cb1d
 800c9d4:	0800ca41 	.word	0x0800ca41
 800c9d8:	0800caff 	.word	0x0800caff
 800c9dc:	0800c98d 	.word	0x0800c98d
 800c9e0:	0800c98d 	.word	0x0800c98d
 800c9e4:	0800cb3f 	.word	0x0800cb3f
 800c9e8:	0800c98d 	.word	0x0800c98d
 800c9ec:	0800ca41 	.word	0x0800ca41
 800c9f0:	0800c98d 	.word	0x0800c98d
 800c9f4:	0800c98d 	.word	0x0800c98d
 800c9f8:	0800cb07 	.word	0x0800cb07
 800c9fc:	682b      	ldr	r3, [r5, #0]
 800c9fe:	1d1a      	adds	r2, r3, #4
 800ca00:	681b      	ldr	r3, [r3, #0]
 800ca02:	602a      	str	r2, [r5, #0]
 800ca04:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800ca08:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800ca0c:	2301      	movs	r3, #1
 800ca0e:	e0a3      	b.n	800cb58 <_printf_i+0x1f4>
 800ca10:	6820      	ldr	r0, [r4, #0]
 800ca12:	6829      	ldr	r1, [r5, #0]
 800ca14:	0606      	lsls	r6, r0, #24
 800ca16:	f101 0304 	add.w	r3, r1, #4
 800ca1a:	d50a      	bpl.n	800ca32 <_printf_i+0xce>
 800ca1c:	680e      	ldr	r6, [r1, #0]
 800ca1e:	602b      	str	r3, [r5, #0]
 800ca20:	2e00      	cmp	r6, #0
 800ca22:	da03      	bge.n	800ca2c <_printf_i+0xc8>
 800ca24:	232d      	movs	r3, #45	; 0x2d
 800ca26:	4276      	negs	r6, r6
 800ca28:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ca2c:	485e      	ldr	r0, [pc, #376]	; (800cba8 <_printf_i+0x244>)
 800ca2e:	230a      	movs	r3, #10
 800ca30:	e019      	b.n	800ca66 <_printf_i+0x102>
 800ca32:	680e      	ldr	r6, [r1, #0]
 800ca34:	602b      	str	r3, [r5, #0]
 800ca36:	f010 0f40 	tst.w	r0, #64	; 0x40
 800ca3a:	bf18      	it	ne
 800ca3c:	b236      	sxthne	r6, r6
 800ca3e:	e7ef      	b.n	800ca20 <_printf_i+0xbc>
 800ca40:	682b      	ldr	r3, [r5, #0]
 800ca42:	6820      	ldr	r0, [r4, #0]
 800ca44:	1d19      	adds	r1, r3, #4
 800ca46:	6029      	str	r1, [r5, #0]
 800ca48:	0601      	lsls	r1, r0, #24
 800ca4a:	d501      	bpl.n	800ca50 <_printf_i+0xec>
 800ca4c:	681e      	ldr	r6, [r3, #0]
 800ca4e:	e002      	b.n	800ca56 <_printf_i+0xf2>
 800ca50:	0646      	lsls	r6, r0, #25
 800ca52:	d5fb      	bpl.n	800ca4c <_printf_i+0xe8>
 800ca54:	881e      	ldrh	r6, [r3, #0]
 800ca56:	4854      	ldr	r0, [pc, #336]	; (800cba8 <_printf_i+0x244>)
 800ca58:	2f6f      	cmp	r7, #111	; 0x6f
 800ca5a:	bf0c      	ite	eq
 800ca5c:	2308      	moveq	r3, #8
 800ca5e:	230a      	movne	r3, #10
 800ca60:	2100      	movs	r1, #0
 800ca62:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800ca66:	6865      	ldr	r5, [r4, #4]
 800ca68:	60a5      	str	r5, [r4, #8]
 800ca6a:	2d00      	cmp	r5, #0
 800ca6c:	bfa2      	ittt	ge
 800ca6e:	6821      	ldrge	r1, [r4, #0]
 800ca70:	f021 0104 	bicge.w	r1, r1, #4
 800ca74:	6021      	strge	r1, [r4, #0]
 800ca76:	b90e      	cbnz	r6, 800ca7c <_printf_i+0x118>
 800ca78:	2d00      	cmp	r5, #0
 800ca7a:	d04d      	beq.n	800cb18 <_printf_i+0x1b4>
 800ca7c:	4615      	mov	r5, r2
 800ca7e:	fbb6 f1f3 	udiv	r1, r6, r3
 800ca82:	fb03 6711 	mls	r7, r3, r1, r6
 800ca86:	5dc7      	ldrb	r7, [r0, r7]
 800ca88:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800ca8c:	4637      	mov	r7, r6
 800ca8e:	42bb      	cmp	r3, r7
 800ca90:	460e      	mov	r6, r1
 800ca92:	d9f4      	bls.n	800ca7e <_printf_i+0x11a>
 800ca94:	2b08      	cmp	r3, #8
 800ca96:	d10b      	bne.n	800cab0 <_printf_i+0x14c>
 800ca98:	6823      	ldr	r3, [r4, #0]
 800ca9a:	07de      	lsls	r6, r3, #31
 800ca9c:	d508      	bpl.n	800cab0 <_printf_i+0x14c>
 800ca9e:	6923      	ldr	r3, [r4, #16]
 800caa0:	6861      	ldr	r1, [r4, #4]
 800caa2:	4299      	cmp	r1, r3
 800caa4:	bfde      	ittt	le
 800caa6:	2330      	movle	r3, #48	; 0x30
 800caa8:	f805 3c01 	strble.w	r3, [r5, #-1]
 800caac:	f105 35ff 	addle.w	r5, r5, #4294967295
 800cab0:	1b52      	subs	r2, r2, r5
 800cab2:	6122      	str	r2, [r4, #16]
 800cab4:	f8cd a000 	str.w	sl, [sp]
 800cab8:	464b      	mov	r3, r9
 800caba:	aa03      	add	r2, sp, #12
 800cabc:	4621      	mov	r1, r4
 800cabe:	4640      	mov	r0, r8
 800cac0:	f7ff fee2 	bl	800c888 <_printf_common>
 800cac4:	3001      	adds	r0, #1
 800cac6:	d14c      	bne.n	800cb62 <_printf_i+0x1fe>
 800cac8:	f04f 30ff 	mov.w	r0, #4294967295
 800cacc:	b004      	add	sp, #16
 800cace:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cad2:	4835      	ldr	r0, [pc, #212]	; (800cba8 <_printf_i+0x244>)
 800cad4:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800cad8:	6829      	ldr	r1, [r5, #0]
 800cada:	6823      	ldr	r3, [r4, #0]
 800cadc:	f851 6b04 	ldr.w	r6, [r1], #4
 800cae0:	6029      	str	r1, [r5, #0]
 800cae2:	061d      	lsls	r5, r3, #24
 800cae4:	d514      	bpl.n	800cb10 <_printf_i+0x1ac>
 800cae6:	07df      	lsls	r7, r3, #31
 800cae8:	bf44      	itt	mi
 800caea:	f043 0320 	orrmi.w	r3, r3, #32
 800caee:	6023      	strmi	r3, [r4, #0]
 800caf0:	b91e      	cbnz	r6, 800cafa <_printf_i+0x196>
 800caf2:	6823      	ldr	r3, [r4, #0]
 800caf4:	f023 0320 	bic.w	r3, r3, #32
 800caf8:	6023      	str	r3, [r4, #0]
 800cafa:	2310      	movs	r3, #16
 800cafc:	e7b0      	b.n	800ca60 <_printf_i+0xfc>
 800cafe:	6823      	ldr	r3, [r4, #0]
 800cb00:	f043 0320 	orr.w	r3, r3, #32
 800cb04:	6023      	str	r3, [r4, #0]
 800cb06:	2378      	movs	r3, #120	; 0x78
 800cb08:	4828      	ldr	r0, [pc, #160]	; (800cbac <_printf_i+0x248>)
 800cb0a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800cb0e:	e7e3      	b.n	800cad8 <_printf_i+0x174>
 800cb10:	0659      	lsls	r1, r3, #25
 800cb12:	bf48      	it	mi
 800cb14:	b2b6      	uxthmi	r6, r6
 800cb16:	e7e6      	b.n	800cae6 <_printf_i+0x182>
 800cb18:	4615      	mov	r5, r2
 800cb1a:	e7bb      	b.n	800ca94 <_printf_i+0x130>
 800cb1c:	682b      	ldr	r3, [r5, #0]
 800cb1e:	6826      	ldr	r6, [r4, #0]
 800cb20:	6961      	ldr	r1, [r4, #20]
 800cb22:	1d18      	adds	r0, r3, #4
 800cb24:	6028      	str	r0, [r5, #0]
 800cb26:	0635      	lsls	r5, r6, #24
 800cb28:	681b      	ldr	r3, [r3, #0]
 800cb2a:	d501      	bpl.n	800cb30 <_printf_i+0x1cc>
 800cb2c:	6019      	str	r1, [r3, #0]
 800cb2e:	e002      	b.n	800cb36 <_printf_i+0x1d2>
 800cb30:	0670      	lsls	r0, r6, #25
 800cb32:	d5fb      	bpl.n	800cb2c <_printf_i+0x1c8>
 800cb34:	8019      	strh	r1, [r3, #0]
 800cb36:	2300      	movs	r3, #0
 800cb38:	6123      	str	r3, [r4, #16]
 800cb3a:	4615      	mov	r5, r2
 800cb3c:	e7ba      	b.n	800cab4 <_printf_i+0x150>
 800cb3e:	682b      	ldr	r3, [r5, #0]
 800cb40:	1d1a      	adds	r2, r3, #4
 800cb42:	602a      	str	r2, [r5, #0]
 800cb44:	681d      	ldr	r5, [r3, #0]
 800cb46:	6862      	ldr	r2, [r4, #4]
 800cb48:	2100      	movs	r1, #0
 800cb4a:	4628      	mov	r0, r5
 800cb4c:	f7f3 fb68 	bl	8000220 <memchr>
 800cb50:	b108      	cbz	r0, 800cb56 <_printf_i+0x1f2>
 800cb52:	1b40      	subs	r0, r0, r5
 800cb54:	6060      	str	r0, [r4, #4]
 800cb56:	6863      	ldr	r3, [r4, #4]
 800cb58:	6123      	str	r3, [r4, #16]
 800cb5a:	2300      	movs	r3, #0
 800cb5c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800cb60:	e7a8      	b.n	800cab4 <_printf_i+0x150>
 800cb62:	6923      	ldr	r3, [r4, #16]
 800cb64:	462a      	mov	r2, r5
 800cb66:	4649      	mov	r1, r9
 800cb68:	4640      	mov	r0, r8
 800cb6a:	47d0      	blx	sl
 800cb6c:	3001      	adds	r0, #1
 800cb6e:	d0ab      	beq.n	800cac8 <_printf_i+0x164>
 800cb70:	6823      	ldr	r3, [r4, #0]
 800cb72:	079b      	lsls	r3, r3, #30
 800cb74:	d413      	bmi.n	800cb9e <_printf_i+0x23a>
 800cb76:	68e0      	ldr	r0, [r4, #12]
 800cb78:	9b03      	ldr	r3, [sp, #12]
 800cb7a:	4298      	cmp	r0, r3
 800cb7c:	bfb8      	it	lt
 800cb7e:	4618      	movlt	r0, r3
 800cb80:	e7a4      	b.n	800cacc <_printf_i+0x168>
 800cb82:	2301      	movs	r3, #1
 800cb84:	4632      	mov	r2, r6
 800cb86:	4649      	mov	r1, r9
 800cb88:	4640      	mov	r0, r8
 800cb8a:	47d0      	blx	sl
 800cb8c:	3001      	adds	r0, #1
 800cb8e:	d09b      	beq.n	800cac8 <_printf_i+0x164>
 800cb90:	3501      	adds	r5, #1
 800cb92:	68e3      	ldr	r3, [r4, #12]
 800cb94:	9903      	ldr	r1, [sp, #12]
 800cb96:	1a5b      	subs	r3, r3, r1
 800cb98:	42ab      	cmp	r3, r5
 800cb9a:	dcf2      	bgt.n	800cb82 <_printf_i+0x21e>
 800cb9c:	e7eb      	b.n	800cb76 <_printf_i+0x212>
 800cb9e:	2500      	movs	r5, #0
 800cba0:	f104 0619 	add.w	r6, r4, #25
 800cba4:	e7f5      	b.n	800cb92 <_printf_i+0x22e>
 800cba6:	bf00      	nop
 800cba8:	080106ce 	.word	0x080106ce
 800cbac:	080106df 	.word	0x080106df

0800cbb0 <siprintf>:
 800cbb0:	b40e      	push	{r1, r2, r3}
 800cbb2:	b500      	push	{lr}
 800cbb4:	b09c      	sub	sp, #112	; 0x70
 800cbb6:	ab1d      	add	r3, sp, #116	; 0x74
 800cbb8:	9002      	str	r0, [sp, #8]
 800cbba:	9006      	str	r0, [sp, #24]
 800cbbc:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800cbc0:	4809      	ldr	r0, [pc, #36]	; (800cbe8 <siprintf+0x38>)
 800cbc2:	9107      	str	r1, [sp, #28]
 800cbc4:	9104      	str	r1, [sp, #16]
 800cbc6:	4909      	ldr	r1, [pc, #36]	; (800cbec <siprintf+0x3c>)
 800cbc8:	f853 2b04 	ldr.w	r2, [r3], #4
 800cbcc:	9105      	str	r1, [sp, #20]
 800cbce:	6800      	ldr	r0, [r0, #0]
 800cbd0:	9301      	str	r3, [sp, #4]
 800cbd2:	a902      	add	r1, sp, #8
 800cbd4:	f001 fb76 	bl	800e2c4 <_svfiprintf_r>
 800cbd8:	9b02      	ldr	r3, [sp, #8]
 800cbda:	2200      	movs	r2, #0
 800cbdc:	701a      	strb	r2, [r3, #0]
 800cbde:	b01c      	add	sp, #112	; 0x70
 800cbe0:	f85d eb04 	ldr.w	lr, [sp], #4
 800cbe4:	b003      	add	sp, #12
 800cbe6:	4770      	bx	lr
 800cbe8:	200000b0 	.word	0x200000b0
 800cbec:	ffff0208 	.word	0xffff0208

0800cbf0 <quorem>:
 800cbf0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cbf4:	6903      	ldr	r3, [r0, #16]
 800cbf6:	690c      	ldr	r4, [r1, #16]
 800cbf8:	42a3      	cmp	r3, r4
 800cbfa:	4607      	mov	r7, r0
 800cbfc:	f2c0 8081 	blt.w	800cd02 <quorem+0x112>
 800cc00:	3c01      	subs	r4, #1
 800cc02:	f101 0814 	add.w	r8, r1, #20
 800cc06:	f100 0514 	add.w	r5, r0, #20
 800cc0a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800cc0e:	9301      	str	r3, [sp, #4]
 800cc10:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800cc14:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800cc18:	3301      	adds	r3, #1
 800cc1a:	429a      	cmp	r2, r3
 800cc1c:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800cc20:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800cc24:	fbb2 f6f3 	udiv	r6, r2, r3
 800cc28:	d331      	bcc.n	800cc8e <quorem+0x9e>
 800cc2a:	f04f 0e00 	mov.w	lr, #0
 800cc2e:	4640      	mov	r0, r8
 800cc30:	46ac      	mov	ip, r5
 800cc32:	46f2      	mov	sl, lr
 800cc34:	f850 2b04 	ldr.w	r2, [r0], #4
 800cc38:	b293      	uxth	r3, r2
 800cc3a:	fb06 e303 	mla	r3, r6, r3, lr
 800cc3e:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800cc42:	b29b      	uxth	r3, r3
 800cc44:	ebaa 0303 	sub.w	r3, sl, r3
 800cc48:	f8dc a000 	ldr.w	sl, [ip]
 800cc4c:	0c12      	lsrs	r2, r2, #16
 800cc4e:	fa13 f38a 	uxtah	r3, r3, sl
 800cc52:	fb06 e202 	mla	r2, r6, r2, lr
 800cc56:	9300      	str	r3, [sp, #0]
 800cc58:	9b00      	ldr	r3, [sp, #0]
 800cc5a:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800cc5e:	b292      	uxth	r2, r2
 800cc60:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800cc64:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800cc68:	f8bd 3000 	ldrh.w	r3, [sp]
 800cc6c:	4581      	cmp	r9, r0
 800cc6e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800cc72:	f84c 3b04 	str.w	r3, [ip], #4
 800cc76:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800cc7a:	d2db      	bcs.n	800cc34 <quorem+0x44>
 800cc7c:	f855 300b 	ldr.w	r3, [r5, fp]
 800cc80:	b92b      	cbnz	r3, 800cc8e <quorem+0x9e>
 800cc82:	9b01      	ldr	r3, [sp, #4]
 800cc84:	3b04      	subs	r3, #4
 800cc86:	429d      	cmp	r5, r3
 800cc88:	461a      	mov	r2, r3
 800cc8a:	d32e      	bcc.n	800ccea <quorem+0xfa>
 800cc8c:	613c      	str	r4, [r7, #16]
 800cc8e:	4638      	mov	r0, r7
 800cc90:	f001 f8c4 	bl	800de1c <__mcmp>
 800cc94:	2800      	cmp	r0, #0
 800cc96:	db24      	blt.n	800cce2 <quorem+0xf2>
 800cc98:	3601      	adds	r6, #1
 800cc9a:	4628      	mov	r0, r5
 800cc9c:	f04f 0c00 	mov.w	ip, #0
 800cca0:	f858 2b04 	ldr.w	r2, [r8], #4
 800cca4:	f8d0 e000 	ldr.w	lr, [r0]
 800cca8:	b293      	uxth	r3, r2
 800ccaa:	ebac 0303 	sub.w	r3, ip, r3
 800ccae:	0c12      	lsrs	r2, r2, #16
 800ccb0:	fa13 f38e 	uxtah	r3, r3, lr
 800ccb4:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800ccb8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800ccbc:	b29b      	uxth	r3, r3
 800ccbe:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800ccc2:	45c1      	cmp	r9, r8
 800ccc4:	f840 3b04 	str.w	r3, [r0], #4
 800ccc8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800cccc:	d2e8      	bcs.n	800cca0 <quorem+0xb0>
 800ccce:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800ccd2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800ccd6:	b922      	cbnz	r2, 800cce2 <quorem+0xf2>
 800ccd8:	3b04      	subs	r3, #4
 800ccda:	429d      	cmp	r5, r3
 800ccdc:	461a      	mov	r2, r3
 800ccde:	d30a      	bcc.n	800ccf6 <quorem+0x106>
 800cce0:	613c      	str	r4, [r7, #16]
 800cce2:	4630      	mov	r0, r6
 800cce4:	b003      	add	sp, #12
 800cce6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ccea:	6812      	ldr	r2, [r2, #0]
 800ccec:	3b04      	subs	r3, #4
 800ccee:	2a00      	cmp	r2, #0
 800ccf0:	d1cc      	bne.n	800cc8c <quorem+0x9c>
 800ccf2:	3c01      	subs	r4, #1
 800ccf4:	e7c7      	b.n	800cc86 <quorem+0x96>
 800ccf6:	6812      	ldr	r2, [r2, #0]
 800ccf8:	3b04      	subs	r3, #4
 800ccfa:	2a00      	cmp	r2, #0
 800ccfc:	d1f0      	bne.n	800cce0 <quorem+0xf0>
 800ccfe:	3c01      	subs	r4, #1
 800cd00:	e7eb      	b.n	800ccda <quorem+0xea>
 800cd02:	2000      	movs	r0, #0
 800cd04:	e7ee      	b.n	800cce4 <quorem+0xf4>
	...

0800cd08 <_dtoa_r>:
 800cd08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cd0c:	ed2d 8b04 	vpush	{d8-d9}
 800cd10:	ec57 6b10 	vmov	r6, r7, d0
 800cd14:	b093      	sub	sp, #76	; 0x4c
 800cd16:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800cd18:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 800cd1c:	9106      	str	r1, [sp, #24]
 800cd1e:	ee10 aa10 	vmov	sl, s0
 800cd22:	4604      	mov	r4, r0
 800cd24:	9209      	str	r2, [sp, #36]	; 0x24
 800cd26:	930c      	str	r3, [sp, #48]	; 0x30
 800cd28:	46bb      	mov	fp, r7
 800cd2a:	b975      	cbnz	r5, 800cd4a <_dtoa_r+0x42>
 800cd2c:	2010      	movs	r0, #16
 800cd2e:	f000 fddd 	bl	800d8ec <malloc>
 800cd32:	4602      	mov	r2, r0
 800cd34:	6260      	str	r0, [r4, #36]	; 0x24
 800cd36:	b920      	cbnz	r0, 800cd42 <_dtoa_r+0x3a>
 800cd38:	4ba7      	ldr	r3, [pc, #668]	; (800cfd8 <_dtoa_r+0x2d0>)
 800cd3a:	21ea      	movs	r1, #234	; 0xea
 800cd3c:	48a7      	ldr	r0, [pc, #668]	; (800cfdc <_dtoa_r+0x2d4>)
 800cd3e:	f001 fbd1 	bl	800e4e4 <__assert_func>
 800cd42:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800cd46:	6005      	str	r5, [r0, #0]
 800cd48:	60c5      	str	r5, [r0, #12]
 800cd4a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cd4c:	6819      	ldr	r1, [r3, #0]
 800cd4e:	b151      	cbz	r1, 800cd66 <_dtoa_r+0x5e>
 800cd50:	685a      	ldr	r2, [r3, #4]
 800cd52:	604a      	str	r2, [r1, #4]
 800cd54:	2301      	movs	r3, #1
 800cd56:	4093      	lsls	r3, r2
 800cd58:	608b      	str	r3, [r1, #8]
 800cd5a:	4620      	mov	r0, r4
 800cd5c:	f000 fe1c 	bl	800d998 <_Bfree>
 800cd60:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cd62:	2200      	movs	r2, #0
 800cd64:	601a      	str	r2, [r3, #0]
 800cd66:	1e3b      	subs	r3, r7, #0
 800cd68:	bfaa      	itet	ge
 800cd6a:	2300      	movge	r3, #0
 800cd6c:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 800cd70:	f8c8 3000 	strge.w	r3, [r8]
 800cd74:	4b9a      	ldr	r3, [pc, #616]	; (800cfe0 <_dtoa_r+0x2d8>)
 800cd76:	bfbc      	itt	lt
 800cd78:	2201      	movlt	r2, #1
 800cd7a:	f8c8 2000 	strlt.w	r2, [r8]
 800cd7e:	ea33 030b 	bics.w	r3, r3, fp
 800cd82:	d11b      	bne.n	800cdbc <_dtoa_r+0xb4>
 800cd84:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800cd86:	f242 730f 	movw	r3, #9999	; 0x270f
 800cd8a:	6013      	str	r3, [r2, #0]
 800cd8c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800cd90:	4333      	orrs	r3, r6
 800cd92:	f000 8592 	beq.w	800d8ba <_dtoa_r+0xbb2>
 800cd96:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800cd98:	b963      	cbnz	r3, 800cdb4 <_dtoa_r+0xac>
 800cd9a:	4b92      	ldr	r3, [pc, #584]	; (800cfe4 <_dtoa_r+0x2dc>)
 800cd9c:	e022      	b.n	800cde4 <_dtoa_r+0xdc>
 800cd9e:	4b92      	ldr	r3, [pc, #584]	; (800cfe8 <_dtoa_r+0x2e0>)
 800cda0:	9301      	str	r3, [sp, #4]
 800cda2:	3308      	adds	r3, #8
 800cda4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800cda6:	6013      	str	r3, [r2, #0]
 800cda8:	9801      	ldr	r0, [sp, #4]
 800cdaa:	b013      	add	sp, #76	; 0x4c
 800cdac:	ecbd 8b04 	vpop	{d8-d9}
 800cdb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cdb4:	4b8b      	ldr	r3, [pc, #556]	; (800cfe4 <_dtoa_r+0x2dc>)
 800cdb6:	9301      	str	r3, [sp, #4]
 800cdb8:	3303      	adds	r3, #3
 800cdba:	e7f3      	b.n	800cda4 <_dtoa_r+0x9c>
 800cdbc:	2200      	movs	r2, #0
 800cdbe:	2300      	movs	r3, #0
 800cdc0:	4650      	mov	r0, sl
 800cdc2:	4659      	mov	r1, fp
 800cdc4:	f7f3 fea0 	bl	8000b08 <__aeabi_dcmpeq>
 800cdc8:	ec4b ab19 	vmov	d9, sl, fp
 800cdcc:	4680      	mov	r8, r0
 800cdce:	b158      	cbz	r0, 800cde8 <_dtoa_r+0xe0>
 800cdd0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800cdd2:	2301      	movs	r3, #1
 800cdd4:	6013      	str	r3, [r2, #0]
 800cdd6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800cdd8:	2b00      	cmp	r3, #0
 800cdda:	f000 856b 	beq.w	800d8b4 <_dtoa_r+0xbac>
 800cdde:	4883      	ldr	r0, [pc, #524]	; (800cfec <_dtoa_r+0x2e4>)
 800cde0:	6018      	str	r0, [r3, #0]
 800cde2:	1e43      	subs	r3, r0, #1
 800cde4:	9301      	str	r3, [sp, #4]
 800cde6:	e7df      	b.n	800cda8 <_dtoa_r+0xa0>
 800cde8:	ec4b ab10 	vmov	d0, sl, fp
 800cdec:	aa10      	add	r2, sp, #64	; 0x40
 800cdee:	a911      	add	r1, sp, #68	; 0x44
 800cdf0:	4620      	mov	r0, r4
 800cdf2:	f001 f8b9 	bl	800df68 <__d2b>
 800cdf6:	f3cb 550a 	ubfx	r5, fp, #20, #11
 800cdfa:	ee08 0a10 	vmov	s16, r0
 800cdfe:	2d00      	cmp	r5, #0
 800ce00:	f000 8084 	beq.w	800cf0c <_dtoa_r+0x204>
 800ce04:	ee19 3a90 	vmov	r3, s19
 800ce08:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800ce0c:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 800ce10:	4656      	mov	r6, sl
 800ce12:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 800ce16:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800ce1a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 800ce1e:	4b74      	ldr	r3, [pc, #464]	; (800cff0 <_dtoa_r+0x2e8>)
 800ce20:	2200      	movs	r2, #0
 800ce22:	4630      	mov	r0, r6
 800ce24:	4639      	mov	r1, r7
 800ce26:	f7f3 fa4f 	bl	80002c8 <__aeabi_dsub>
 800ce2a:	a365      	add	r3, pc, #404	; (adr r3, 800cfc0 <_dtoa_r+0x2b8>)
 800ce2c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ce30:	f7f3 fc02 	bl	8000638 <__aeabi_dmul>
 800ce34:	a364      	add	r3, pc, #400	; (adr r3, 800cfc8 <_dtoa_r+0x2c0>)
 800ce36:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ce3a:	f7f3 fa47 	bl	80002cc <__adddf3>
 800ce3e:	4606      	mov	r6, r0
 800ce40:	4628      	mov	r0, r5
 800ce42:	460f      	mov	r7, r1
 800ce44:	f7f3 fb8e 	bl	8000564 <__aeabi_i2d>
 800ce48:	a361      	add	r3, pc, #388	; (adr r3, 800cfd0 <_dtoa_r+0x2c8>)
 800ce4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ce4e:	f7f3 fbf3 	bl	8000638 <__aeabi_dmul>
 800ce52:	4602      	mov	r2, r0
 800ce54:	460b      	mov	r3, r1
 800ce56:	4630      	mov	r0, r6
 800ce58:	4639      	mov	r1, r7
 800ce5a:	f7f3 fa37 	bl	80002cc <__adddf3>
 800ce5e:	4606      	mov	r6, r0
 800ce60:	460f      	mov	r7, r1
 800ce62:	f7f3 fe99 	bl	8000b98 <__aeabi_d2iz>
 800ce66:	2200      	movs	r2, #0
 800ce68:	9000      	str	r0, [sp, #0]
 800ce6a:	2300      	movs	r3, #0
 800ce6c:	4630      	mov	r0, r6
 800ce6e:	4639      	mov	r1, r7
 800ce70:	f7f3 fe54 	bl	8000b1c <__aeabi_dcmplt>
 800ce74:	b150      	cbz	r0, 800ce8c <_dtoa_r+0x184>
 800ce76:	9800      	ldr	r0, [sp, #0]
 800ce78:	f7f3 fb74 	bl	8000564 <__aeabi_i2d>
 800ce7c:	4632      	mov	r2, r6
 800ce7e:	463b      	mov	r3, r7
 800ce80:	f7f3 fe42 	bl	8000b08 <__aeabi_dcmpeq>
 800ce84:	b910      	cbnz	r0, 800ce8c <_dtoa_r+0x184>
 800ce86:	9b00      	ldr	r3, [sp, #0]
 800ce88:	3b01      	subs	r3, #1
 800ce8a:	9300      	str	r3, [sp, #0]
 800ce8c:	9b00      	ldr	r3, [sp, #0]
 800ce8e:	2b16      	cmp	r3, #22
 800ce90:	d85a      	bhi.n	800cf48 <_dtoa_r+0x240>
 800ce92:	9a00      	ldr	r2, [sp, #0]
 800ce94:	4b57      	ldr	r3, [pc, #348]	; (800cff4 <_dtoa_r+0x2ec>)
 800ce96:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800ce9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ce9e:	ec51 0b19 	vmov	r0, r1, d9
 800cea2:	f7f3 fe3b 	bl	8000b1c <__aeabi_dcmplt>
 800cea6:	2800      	cmp	r0, #0
 800cea8:	d050      	beq.n	800cf4c <_dtoa_r+0x244>
 800ceaa:	9b00      	ldr	r3, [sp, #0]
 800ceac:	3b01      	subs	r3, #1
 800ceae:	9300      	str	r3, [sp, #0]
 800ceb0:	2300      	movs	r3, #0
 800ceb2:	930b      	str	r3, [sp, #44]	; 0x2c
 800ceb4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ceb6:	1b5d      	subs	r5, r3, r5
 800ceb8:	1e6b      	subs	r3, r5, #1
 800ceba:	9305      	str	r3, [sp, #20]
 800cebc:	bf45      	ittet	mi
 800cebe:	f1c5 0301 	rsbmi	r3, r5, #1
 800cec2:	9304      	strmi	r3, [sp, #16]
 800cec4:	2300      	movpl	r3, #0
 800cec6:	2300      	movmi	r3, #0
 800cec8:	bf4c      	ite	mi
 800ceca:	9305      	strmi	r3, [sp, #20]
 800cecc:	9304      	strpl	r3, [sp, #16]
 800cece:	9b00      	ldr	r3, [sp, #0]
 800ced0:	2b00      	cmp	r3, #0
 800ced2:	db3d      	blt.n	800cf50 <_dtoa_r+0x248>
 800ced4:	9b05      	ldr	r3, [sp, #20]
 800ced6:	9a00      	ldr	r2, [sp, #0]
 800ced8:	920a      	str	r2, [sp, #40]	; 0x28
 800ceda:	4413      	add	r3, r2
 800cedc:	9305      	str	r3, [sp, #20]
 800cede:	2300      	movs	r3, #0
 800cee0:	9307      	str	r3, [sp, #28]
 800cee2:	9b06      	ldr	r3, [sp, #24]
 800cee4:	2b09      	cmp	r3, #9
 800cee6:	f200 8089 	bhi.w	800cffc <_dtoa_r+0x2f4>
 800ceea:	2b05      	cmp	r3, #5
 800ceec:	bfc4      	itt	gt
 800ceee:	3b04      	subgt	r3, #4
 800cef0:	9306      	strgt	r3, [sp, #24]
 800cef2:	9b06      	ldr	r3, [sp, #24]
 800cef4:	f1a3 0302 	sub.w	r3, r3, #2
 800cef8:	bfcc      	ite	gt
 800cefa:	2500      	movgt	r5, #0
 800cefc:	2501      	movle	r5, #1
 800cefe:	2b03      	cmp	r3, #3
 800cf00:	f200 8087 	bhi.w	800d012 <_dtoa_r+0x30a>
 800cf04:	e8df f003 	tbb	[pc, r3]
 800cf08:	59383a2d 	.word	0x59383a2d
 800cf0c:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 800cf10:	441d      	add	r5, r3
 800cf12:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800cf16:	2b20      	cmp	r3, #32
 800cf18:	bfc1      	itttt	gt
 800cf1a:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800cf1e:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 800cf22:	fa0b f303 	lslgt.w	r3, fp, r3
 800cf26:	fa26 f000 	lsrgt.w	r0, r6, r0
 800cf2a:	bfda      	itte	le
 800cf2c:	f1c3 0320 	rsble	r3, r3, #32
 800cf30:	fa06 f003 	lslle.w	r0, r6, r3
 800cf34:	4318      	orrgt	r0, r3
 800cf36:	f7f3 fb05 	bl	8000544 <__aeabi_ui2d>
 800cf3a:	2301      	movs	r3, #1
 800cf3c:	4606      	mov	r6, r0
 800cf3e:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 800cf42:	3d01      	subs	r5, #1
 800cf44:	930e      	str	r3, [sp, #56]	; 0x38
 800cf46:	e76a      	b.n	800ce1e <_dtoa_r+0x116>
 800cf48:	2301      	movs	r3, #1
 800cf4a:	e7b2      	b.n	800ceb2 <_dtoa_r+0x1aa>
 800cf4c:	900b      	str	r0, [sp, #44]	; 0x2c
 800cf4e:	e7b1      	b.n	800ceb4 <_dtoa_r+0x1ac>
 800cf50:	9b04      	ldr	r3, [sp, #16]
 800cf52:	9a00      	ldr	r2, [sp, #0]
 800cf54:	1a9b      	subs	r3, r3, r2
 800cf56:	9304      	str	r3, [sp, #16]
 800cf58:	4253      	negs	r3, r2
 800cf5a:	9307      	str	r3, [sp, #28]
 800cf5c:	2300      	movs	r3, #0
 800cf5e:	930a      	str	r3, [sp, #40]	; 0x28
 800cf60:	e7bf      	b.n	800cee2 <_dtoa_r+0x1da>
 800cf62:	2300      	movs	r3, #0
 800cf64:	9308      	str	r3, [sp, #32]
 800cf66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cf68:	2b00      	cmp	r3, #0
 800cf6a:	dc55      	bgt.n	800d018 <_dtoa_r+0x310>
 800cf6c:	2301      	movs	r3, #1
 800cf6e:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800cf72:	461a      	mov	r2, r3
 800cf74:	9209      	str	r2, [sp, #36]	; 0x24
 800cf76:	e00c      	b.n	800cf92 <_dtoa_r+0x28a>
 800cf78:	2301      	movs	r3, #1
 800cf7a:	e7f3      	b.n	800cf64 <_dtoa_r+0x25c>
 800cf7c:	2300      	movs	r3, #0
 800cf7e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800cf80:	9308      	str	r3, [sp, #32]
 800cf82:	9b00      	ldr	r3, [sp, #0]
 800cf84:	4413      	add	r3, r2
 800cf86:	9302      	str	r3, [sp, #8]
 800cf88:	3301      	adds	r3, #1
 800cf8a:	2b01      	cmp	r3, #1
 800cf8c:	9303      	str	r3, [sp, #12]
 800cf8e:	bfb8      	it	lt
 800cf90:	2301      	movlt	r3, #1
 800cf92:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800cf94:	2200      	movs	r2, #0
 800cf96:	6042      	str	r2, [r0, #4]
 800cf98:	2204      	movs	r2, #4
 800cf9a:	f102 0614 	add.w	r6, r2, #20
 800cf9e:	429e      	cmp	r6, r3
 800cfa0:	6841      	ldr	r1, [r0, #4]
 800cfa2:	d93d      	bls.n	800d020 <_dtoa_r+0x318>
 800cfa4:	4620      	mov	r0, r4
 800cfa6:	f000 fcb7 	bl	800d918 <_Balloc>
 800cfaa:	9001      	str	r0, [sp, #4]
 800cfac:	2800      	cmp	r0, #0
 800cfae:	d13b      	bne.n	800d028 <_dtoa_r+0x320>
 800cfb0:	4b11      	ldr	r3, [pc, #68]	; (800cff8 <_dtoa_r+0x2f0>)
 800cfb2:	4602      	mov	r2, r0
 800cfb4:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800cfb8:	e6c0      	b.n	800cd3c <_dtoa_r+0x34>
 800cfba:	2301      	movs	r3, #1
 800cfbc:	e7df      	b.n	800cf7e <_dtoa_r+0x276>
 800cfbe:	bf00      	nop
 800cfc0:	636f4361 	.word	0x636f4361
 800cfc4:	3fd287a7 	.word	0x3fd287a7
 800cfc8:	8b60c8b3 	.word	0x8b60c8b3
 800cfcc:	3fc68a28 	.word	0x3fc68a28
 800cfd0:	509f79fb 	.word	0x509f79fb
 800cfd4:	3fd34413 	.word	0x3fd34413
 800cfd8:	080106fd 	.word	0x080106fd
 800cfdc:	08010714 	.word	0x08010714
 800cfe0:	7ff00000 	.word	0x7ff00000
 800cfe4:	080106f9 	.word	0x080106f9
 800cfe8:	080106f0 	.word	0x080106f0
 800cfec:	080106cd 	.word	0x080106cd
 800cff0:	3ff80000 	.word	0x3ff80000
 800cff4:	08010808 	.word	0x08010808
 800cff8:	0801076f 	.word	0x0801076f
 800cffc:	2501      	movs	r5, #1
 800cffe:	2300      	movs	r3, #0
 800d000:	9306      	str	r3, [sp, #24]
 800d002:	9508      	str	r5, [sp, #32]
 800d004:	f04f 33ff 	mov.w	r3, #4294967295
 800d008:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800d00c:	2200      	movs	r2, #0
 800d00e:	2312      	movs	r3, #18
 800d010:	e7b0      	b.n	800cf74 <_dtoa_r+0x26c>
 800d012:	2301      	movs	r3, #1
 800d014:	9308      	str	r3, [sp, #32]
 800d016:	e7f5      	b.n	800d004 <_dtoa_r+0x2fc>
 800d018:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d01a:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800d01e:	e7b8      	b.n	800cf92 <_dtoa_r+0x28a>
 800d020:	3101      	adds	r1, #1
 800d022:	6041      	str	r1, [r0, #4]
 800d024:	0052      	lsls	r2, r2, #1
 800d026:	e7b8      	b.n	800cf9a <_dtoa_r+0x292>
 800d028:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d02a:	9a01      	ldr	r2, [sp, #4]
 800d02c:	601a      	str	r2, [r3, #0]
 800d02e:	9b03      	ldr	r3, [sp, #12]
 800d030:	2b0e      	cmp	r3, #14
 800d032:	f200 809d 	bhi.w	800d170 <_dtoa_r+0x468>
 800d036:	2d00      	cmp	r5, #0
 800d038:	f000 809a 	beq.w	800d170 <_dtoa_r+0x468>
 800d03c:	9b00      	ldr	r3, [sp, #0]
 800d03e:	2b00      	cmp	r3, #0
 800d040:	dd32      	ble.n	800d0a8 <_dtoa_r+0x3a0>
 800d042:	4ab7      	ldr	r2, [pc, #732]	; (800d320 <_dtoa_r+0x618>)
 800d044:	f003 030f 	and.w	r3, r3, #15
 800d048:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800d04c:	e9d3 8900 	ldrd	r8, r9, [r3]
 800d050:	9b00      	ldr	r3, [sp, #0]
 800d052:	05d8      	lsls	r0, r3, #23
 800d054:	ea4f 1723 	mov.w	r7, r3, asr #4
 800d058:	d516      	bpl.n	800d088 <_dtoa_r+0x380>
 800d05a:	4bb2      	ldr	r3, [pc, #712]	; (800d324 <_dtoa_r+0x61c>)
 800d05c:	ec51 0b19 	vmov	r0, r1, d9
 800d060:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800d064:	f7f3 fc12 	bl	800088c <__aeabi_ddiv>
 800d068:	f007 070f 	and.w	r7, r7, #15
 800d06c:	4682      	mov	sl, r0
 800d06e:	468b      	mov	fp, r1
 800d070:	2503      	movs	r5, #3
 800d072:	4eac      	ldr	r6, [pc, #688]	; (800d324 <_dtoa_r+0x61c>)
 800d074:	b957      	cbnz	r7, 800d08c <_dtoa_r+0x384>
 800d076:	4642      	mov	r2, r8
 800d078:	464b      	mov	r3, r9
 800d07a:	4650      	mov	r0, sl
 800d07c:	4659      	mov	r1, fp
 800d07e:	f7f3 fc05 	bl	800088c <__aeabi_ddiv>
 800d082:	4682      	mov	sl, r0
 800d084:	468b      	mov	fp, r1
 800d086:	e028      	b.n	800d0da <_dtoa_r+0x3d2>
 800d088:	2502      	movs	r5, #2
 800d08a:	e7f2      	b.n	800d072 <_dtoa_r+0x36a>
 800d08c:	07f9      	lsls	r1, r7, #31
 800d08e:	d508      	bpl.n	800d0a2 <_dtoa_r+0x39a>
 800d090:	4640      	mov	r0, r8
 800d092:	4649      	mov	r1, r9
 800d094:	e9d6 2300 	ldrd	r2, r3, [r6]
 800d098:	f7f3 face 	bl	8000638 <__aeabi_dmul>
 800d09c:	3501      	adds	r5, #1
 800d09e:	4680      	mov	r8, r0
 800d0a0:	4689      	mov	r9, r1
 800d0a2:	107f      	asrs	r7, r7, #1
 800d0a4:	3608      	adds	r6, #8
 800d0a6:	e7e5      	b.n	800d074 <_dtoa_r+0x36c>
 800d0a8:	f000 809b 	beq.w	800d1e2 <_dtoa_r+0x4da>
 800d0ac:	9b00      	ldr	r3, [sp, #0]
 800d0ae:	4f9d      	ldr	r7, [pc, #628]	; (800d324 <_dtoa_r+0x61c>)
 800d0b0:	425e      	negs	r6, r3
 800d0b2:	4b9b      	ldr	r3, [pc, #620]	; (800d320 <_dtoa_r+0x618>)
 800d0b4:	f006 020f 	and.w	r2, r6, #15
 800d0b8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800d0bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d0c0:	ec51 0b19 	vmov	r0, r1, d9
 800d0c4:	f7f3 fab8 	bl	8000638 <__aeabi_dmul>
 800d0c8:	1136      	asrs	r6, r6, #4
 800d0ca:	4682      	mov	sl, r0
 800d0cc:	468b      	mov	fp, r1
 800d0ce:	2300      	movs	r3, #0
 800d0d0:	2502      	movs	r5, #2
 800d0d2:	2e00      	cmp	r6, #0
 800d0d4:	d17a      	bne.n	800d1cc <_dtoa_r+0x4c4>
 800d0d6:	2b00      	cmp	r3, #0
 800d0d8:	d1d3      	bne.n	800d082 <_dtoa_r+0x37a>
 800d0da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d0dc:	2b00      	cmp	r3, #0
 800d0de:	f000 8082 	beq.w	800d1e6 <_dtoa_r+0x4de>
 800d0e2:	4b91      	ldr	r3, [pc, #580]	; (800d328 <_dtoa_r+0x620>)
 800d0e4:	2200      	movs	r2, #0
 800d0e6:	4650      	mov	r0, sl
 800d0e8:	4659      	mov	r1, fp
 800d0ea:	f7f3 fd17 	bl	8000b1c <__aeabi_dcmplt>
 800d0ee:	2800      	cmp	r0, #0
 800d0f0:	d079      	beq.n	800d1e6 <_dtoa_r+0x4de>
 800d0f2:	9b03      	ldr	r3, [sp, #12]
 800d0f4:	2b00      	cmp	r3, #0
 800d0f6:	d076      	beq.n	800d1e6 <_dtoa_r+0x4de>
 800d0f8:	9b02      	ldr	r3, [sp, #8]
 800d0fa:	2b00      	cmp	r3, #0
 800d0fc:	dd36      	ble.n	800d16c <_dtoa_r+0x464>
 800d0fe:	9b00      	ldr	r3, [sp, #0]
 800d100:	4650      	mov	r0, sl
 800d102:	4659      	mov	r1, fp
 800d104:	1e5f      	subs	r7, r3, #1
 800d106:	2200      	movs	r2, #0
 800d108:	4b88      	ldr	r3, [pc, #544]	; (800d32c <_dtoa_r+0x624>)
 800d10a:	f7f3 fa95 	bl	8000638 <__aeabi_dmul>
 800d10e:	9e02      	ldr	r6, [sp, #8]
 800d110:	4682      	mov	sl, r0
 800d112:	468b      	mov	fp, r1
 800d114:	3501      	adds	r5, #1
 800d116:	4628      	mov	r0, r5
 800d118:	f7f3 fa24 	bl	8000564 <__aeabi_i2d>
 800d11c:	4652      	mov	r2, sl
 800d11e:	465b      	mov	r3, fp
 800d120:	f7f3 fa8a 	bl	8000638 <__aeabi_dmul>
 800d124:	4b82      	ldr	r3, [pc, #520]	; (800d330 <_dtoa_r+0x628>)
 800d126:	2200      	movs	r2, #0
 800d128:	f7f3 f8d0 	bl	80002cc <__adddf3>
 800d12c:	46d0      	mov	r8, sl
 800d12e:	46d9      	mov	r9, fp
 800d130:	4682      	mov	sl, r0
 800d132:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 800d136:	2e00      	cmp	r6, #0
 800d138:	d158      	bne.n	800d1ec <_dtoa_r+0x4e4>
 800d13a:	4b7e      	ldr	r3, [pc, #504]	; (800d334 <_dtoa_r+0x62c>)
 800d13c:	2200      	movs	r2, #0
 800d13e:	4640      	mov	r0, r8
 800d140:	4649      	mov	r1, r9
 800d142:	f7f3 f8c1 	bl	80002c8 <__aeabi_dsub>
 800d146:	4652      	mov	r2, sl
 800d148:	465b      	mov	r3, fp
 800d14a:	4680      	mov	r8, r0
 800d14c:	4689      	mov	r9, r1
 800d14e:	f7f3 fd03 	bl	8000b58 <__aeabi_dcmpgt>
 800d152:	2800      	cmp	r0, #0
 800d154:	f040 8295 	bne.w	800d682 <_dtoa_r+0x97a>
 800d158:	4652      	mov	r2, sl
 800d15a:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800d15e:	4640      	mov	r0, r8
 800d160:	4649      	mov	r1, r9
 800d162:	f7f3 fcdb 	bl	8000b1c <__aeabi_dcmplt>
 800d166:	2800      	cmp	r0, #0
 800d168:	f040 8289 	bne.w	800d67e <_dtoa_r+0x976>
 800d16c:	ec5b ab19 	vmov	sl, fp, d9
 800d170:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d172:	2b00      	cmp	r3, #0
 800d174:	f2c0 8148 	blt.w	800d408 <_dtoa_r+0x700>
 800d178:	9a00      	ldr	r2, [sp, #0]
 800d17a:	2a0e      	cmp	r2, #14
 800d17c:	f300 8144 	bgt.w	800d408 <_dtoa_r+0x700>
 800d180:	4b67      	ldr	r3, [pc, #412]	; (800d320 <_dtoa_r+0x618>)
 800d182:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800d186:	e9d3 8900 	ldrd	r8, r9, [r3]
 800d18a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d18c:	2b00      	cmp	r3, #0
 800d18e:	f280 80d5 	bge.w	800d33c <_dtoa_r+0x634>
 800d192:	9b03      	ldr	r3, [sp, #12]
 800d194:	2b00      	cmp	r3, #0
 800d196:	f300 80d1 	bgt.w	800d33c <_dtoa_r+0x634>
 800d19a:	f040 826f 	bne.w	800d67c <_dtoa_r+0x974>
 800d19e:	4b65      	ldr	r3, [pc, #404]	; (800d334 <_dtoa_r+0x62c>)
 800d1a0:	2200      	movs	r2, #0
 800d1a2:	4640      	mov	r0, r8
 800d1a4:	4649      	mov	r1, r9
 800d1a6:	f7f3 fa47 	bl	8000638 <__aeabi_dmul>
 800d1aa:	4652      	mov	r2, sl
 800d1ac:	465b      	mov	r3, fp
 800d1ae:	f7f3 fcc9 	bl	8000b44 <__aeabi_dcmpge>
 800d1b2:	9e03      	ldr	r6, [sp, #12]
 800d1b4:	4637      	mov	r7, r6
 800d1b6:	2800      	cmp	r0, #0
 800d1b8:	f040 8245 	bne.w	800d646 <_dtoa_r+0x93e>
 800d1bc:	9d01      	ldr	r5, [sp, #4]
 800d1be:	2331      	movs	r3, #49	; 0x31
 800d1c0:	f805 3b01 	strb.w	r3, [r5], #1
 800d1c4:	9b00      	ldr	r3, [sp, #0]
 800d1c6:	3301      	adds	r3, #1
 800d1c8:	9300      	str	r3, [sp, #0]
 800d1ca:	e240      	b.n	800d64e <_dtoa_r+0x946>
 800d1cc:	07f2      	lsls	r2, r6, #31
 800d1ce:	d505      	bpl.n	800d1dc <_dtoa_r+0x4d4>
 800d1d0:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d1d4:	f7f3 fa30 	bl	8000638 <__aeabi_dmul>
 800d1d8:	3501      	adds	r5, #1
 800d1da:	2301      	movs	r3, #1
 800d1dc:	1076      	asrs	r6, r6, #1
 800d1de:	3708      	adds	r7, #8
 800d1e0:	e777      	b.n	800d0d2 <_dtoa_r+0x3ca>
 800d1e2:	2502      	movs	r5, #2
 800d1e4:	e779      	b.n	800d0da <_dtoa_r+0x3d2>
 800d1e6:	9f00      	ldr	r7, [sp, #0]
 800d1e8:	9e03      	ldr	r6, [sp, #12]
 800d1ea:	e794      	b.n	800d116 <_dtoa_r+0x40e>
 800d1ec:	9901      	ldr	r1, [sp, #4]
 800d1ee:	4b4c      	ldr	r3, [pc, #304]	; (800d320 <_dtoa_r+0x618>)
 800d1f0:	4431      	add	r1, r6
 800d1f2:	910d      	str	r1, [sp, #52]	; 0x34
 800d1f4:	9908      	ldr	r1, [sp, #32]
 800d1f6:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800d1fa:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800d1fe:	2900      	cmp	r1, #0
 800d200:	d043      	beq.n	800d28a <_dtoa_r+0x582>
 800d202:	494d      	ldr	r1, [pc, #308]	; (800d338 <_dtoa_r+0x630>)
 800d204:	2000      	movs	r0, #0
 800d206:	f7f3 fb41 	bl	800088c <__aeabi_ddiv>
 800d20a:	4652      	mov	r2, sl
 800d20c:	465b      	mov	r3, fp
 800d20e:	f7f3 f85b 	bl	80002c8 <__aeabi_dsub>
 800d212:	9d01      	ldr	r5, [sp, #4]
 800d214:	4682      	mov	sl, r0
 800d216:	468b      	mov	fp, r1
 800d218:	4649      	mov	r1, r9
 800d21a:	4640      	mov	r0, r8
 800d21c:	f7f3 fcbc 	bl	8000b98 <__aeabi_d2iz>
 800d220:	4606      	mov	r6, r0
 800d222:	f7f3 f99f 	bl	8000564 <__aeabi_i2d>
 800d226:	4602      	mov	r2, r0
 800d228:	460b      	mov	r3, r1
 800d22a:	4640      	mov	r0, r8
 800d22c:	4649      	mov	r1, r9
 800d22e:	f7f3 f84b 	bl	80002c8 <__aeabi_dsub>
 800d232:	3630      	adds	r6, #48	; 0x30
 800d234:	f805 6b01 	strb.w	r6, [r5], #1
 800d238:	4652      	mov	r2, sl
 800d23a:	465b      	mov	r3, fp
 800d23c:	4680      	mov	r8, r0
 800d23e:	4689      	mov	r9, r1
 800d240:	f7f3 fc6c 	bl	8000b1c <__aeabi_dcmplt>
 800d244:	2800      	cmp	r0, #0
 800d246:	d163      	bne.n	800d310 <_dtoa_r+0x608>
 800d248:	4642      	mov	r2, r8
 800d24a:	464b      	mov	r3, r9
 800d24c:	4936      	ldr	r1, [pc, #216]	; (800d328 <_dtoa_r+0x620>)
 800d24e:	2000      	movs	r0, #0
 800d250:	f7f3 f83a 	bl	80002c8 <__aeabi_dsub>
 800d254:	4652      	mov	r2, sl
 800d256:	465b      	mov	r3, fp
 800d258:	f7f3 fc60 	bl	8000b1c <__aeabi_dcmplt>
 800d25c:	2800      	cmp	r0, #0
 800d25e:	f040 80b5 	bne.w	800d3cc <_dtoa_r+0x6c4>
 800d262:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d264:	429d      	cmp	r5, r3
 800d266:	d081      	beq.n	800d16c <_dtoa_r+0x464>
 800d268:	4b30      	ldr	r3, [pc, #192]	; (800d32c <_dtoa_r+0x624>)
 800d26a:	2200      	movs	r2, #0
 800d26c:	4650      	mov	r0, sl
 800d26e:	4659      	mov	r1, fp
 800d270:	f7f3 f9e2 	bl	8000638 <__aeabi_dmul>
 800d274:	4b2d      	ldr	r3, [pc, #180]	; (800d32c <_dtoa_r+0x624>)
 800d276:	4682      	mov	sl, r0
 800d278:	468b      	mov	fp, r1
 800d27a:	4640      	mov	r0, r8
 800d27c:	4649      	mov	r1, r9
 800d27e:	2200      	movs	r2, #0
 800d280:	f7f3 f9da 	bl	8000638 <__aeabi_dmul>
 800d284:	4680      	mov	r8, r0
 800d286:	4689      	mov	r9, r1
 800d288:	e7c6      	b.n	800d218 <_dtoa_r+0x510>
 800d28a:	4650      	mov	r0, sl
 800d28c:	4659      	mov	r1, fp
 800d28e:	f7f3 f9d3 	bl	8000638 <__aeabi_dmul>
 800d292:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d294:	9d01      	ldr	r5, [sp, #4]
 800d296:	930f      	str	r3, [sp, #60]	; 0x3c
 800d298:	4682      	mov	sl, r0
 800d29a:	468b      	mov	fp, r1
 800d29c:	4649      	mov	r1, r9
 800d29e:	4640      	mov	r0, r8
 800d2a0:	f7f3 fc7a 	bl	8000b98 <__aeabi_d2iz>
 800d2a4:	4606      	mov	r6, r0
 800d2a6:	f7f3 f95d 	bl	8000564 <__aeabi_i2d>
 800d2aa:	3630      	adds	r6, #48	; 0x30
 800d2ac:	4602      	mov	r2, r0
 800d2ae:	460b      	mov	r3, r1
 800d2b0:	4640      	mov	r0, r8
 800d2b2:	4649      	mov	r1, r9
 800d2b4:	f7f3 f808 	bl	80002c8 <__aeabi_dsub>
 800d2b8:	f805 6b01 	strb.w	r6, [r5], #1
 800d2bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d2be:	429d      	cmp	r5, r3
 800d2c0:	4680      	mov	r8, r0
 800d2c2:	4689      	mov	r9, r1
 800d2c4:	f04f 0200 	mov.w	r2, #0
 800d2c8:	d124      	bne.n	800d314 <_dtoa_r+0x60c>
 800d2ca:	4b1b      	ldr	r3, [pc, #108]	; (800d338 <_dtoa_r+0x630>)
 800d2cc:	4650      	mov	r0, sl
 800d2ce:	4659      	mov	r1, fp
 800d2d0:	f7f2 fffc 	bl	80002cc <__adddf3>
 800d2d4:	4602      	mov	r2, r0
 800d2d6:	460b      	mov	r3, r1
 800d2d8:	4640      	mov	r0, r8
 800d2da:	4649      	mov	r1, r9
 800d2dc:	f7f3 fc3c 	bl	8000b58 <__aeabi_dcmpgt>
 800d2e0:	2800      	cmp	r0, #0
 800d2e2:	d173      	bne.n	800d3cc <_dtoa_r+0x6c4>
 800d2e4:	4652      	mov	r2, sl
 800d2e6:	465b      	mov	r3, fp
 800d2e8:	4913      	ldr	r1, [pc, #76]	; (800d338 <_dtoa_r+0x630>)
 800d2ea:	2000      	movs	r0, #0
 800d2ec:	f7f2 ffec 	bl	80002c8 <__aeabi_dsub>
 800d2f0:	4602      	mov	r2, r0
 800d2f2:	460b      	mov	r3, r1
 800d2f4:	4640      	mov	r0, r8
 800d2f6:	4649      	mov	r1, r9
 800d2f8:	f7f3 fc10 	bl	8000b1c <__aeabi_dcmplt>
 800d2fc:	2800      	cmp	r0, #0
 800d2fe:	f43f af35 	beq.w	800d16c <_dtoa_r+0x464>
 800d302:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800d304:	1e6b      	subs	r3, r5, #1
 800d306:	930f      	str	r3, [sp, #60]	; 0x3c
 800d308:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800d30c:	2b30      	cmp	r3, #48	; 0x30
 800d30e:	d0f8      	beq.n	800d302 <_dtoa_r+0x5fa>
 800d310:	9700      	str	r7, [sp, #0]
 800d312:	e049      	b.n	800d3a8 <_dtoa_r+0x6a0>
 800d314:	4b05      	ldr	r3, [pc, #20]	; (800d32c <_dtoa_r+0x624>)
 800d316:	f7f3 f98f 	bl	8000638 <__aeabi_dmul>
 800d31a:	4680      	mov	r8, r0
 800d31c:	4689      	mov	r9, r1
 800d31e:	e7bd      	b.n	800d29c <_dtoa_r+0x594>
 800d320:	08010808 	.word	0x08010808
 800d324:	080107e0 	.word	0x080107e0
 800d328:	3ff00000 	.word	0x3ff00000
 800d32c:	40240000 	.word	0x40240000
 800d330:	401c0000 	.word	0x401c0000
 800d334:	40140000 	.word	0x40140000
 800d338:	3fe00000 	.word	0x3fe00000
 800d33c:	9d01      	ldr	r5, [sp, #4]
 800d33e:	4656      	mov	r6, sl
 800d340:	465f      	mov	r7, fp
 800d342:	4642      	mov	r2, r8
 800d344:	464b      	mov	r3, r9
 800d346:	4630      	mov	r0, r6
 800d348:	4639      	mov	r1, r7
 800d34a:	f7f3 fa9f 	bl	800088c <__aeabi_ddiv>
 800d34e:	f7f3 fc23 	bl	8000b98 <__aeabi_d2iz>
 800d352:	4682      	mov	sl, r0
 800d354:	f7f3 f906 	bl	8000564 <__aeabi_i2d>
 800d358:	4642      	mov	r2, r8
 800d35a:	464b      	mov	r3, r9
 800d35c:	f7f3 f96c 	bl	8000638 <__aeabi_dmul>
 800d360:	4602      	mov	r2, r0
 800d362:	460b      	mov	r3, r1
 800d364:	4630      	mov	r0, r6
 800d366:	4639      	mov	r1, r7
 800d368:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 800d36c:	f7f2 ffac 	bl	80002c8 <__aeabi_dsub>
 800d370:	f805 6b01 	strb.w	r6, [r5], #1
 800d374:	9e01      	ldr	r6, [sp, #4]
 800d376:	9f03      	ldr	r7, [sp, #12]
 800d378:	1bae      	subs	r6, r5, r6
 800d37a:	42b7      	cmp	r7, r6
 800d37c:	4602      	mov	r2, r0
 800d37e:	460b      	mov	r3, r1
 800d380:	d135      	bne.n	800d3ee <_dtoa_r+0x6e6>
 800d382:	f7f2 ffa3 	bl	80002cc <__adddf3>
 800d386:	4642      	mov	r2, r8
 800d388:	464b      	mov	r3, r9
 800d38a:	4606      	mov	r6, r0
 800d38c:	460f      	mov	r7, r1
 800d38e:	f7f3 fbe3 	bl	8000b58 <__aeabi_dcmpgt>
 800d392:	b9d0      	cbnz	r0, 800d3ca <_dtoa_r+0x6c2>
 800d394:	4642      	mov	r2, r8
 800d396:	464b      	mov	r3, r9
 800d398:	4630      	mov	r0, r6
 800d39a:	4639      	mov	r1, r7
 800d39c:	f7f3 fbb4 	bl	8000b08 <__aeabi_dcmpeq>
 800d3a0:	b110      	cbz	r0, 800d3a8 <_dtoa_r+0x6a0>
 800d3a2:	f01a 0f01 	tst.w	sl, #1
 800d3a6:	d110      	bne.n	800d3ca <_dtoa_r+0x6c2>
 800d3a8:	4620      	mov	r0, r4
 800d3aa:	ee18 1a10 	vmov	r1, s16
 800d3ae:	f000 faf3 	bl	800d998 <_Bfree>
 800d3b2:	2300      	movs	r3, #0
 800d3b4:	9800      	ldr	r0, [sp, #0]
 800d3b6:	702b      	strb	r3, [r5, #0]
 800d3b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d3ba:	3001      	adds	r0, #1
 800d3bc:	6018      	str	r0, [r3, #0]
 800d3be:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800d3c0:	2b00      	cmp	r3, #0
 800d3c2:	f43f acf1 	beq.w	800cda8 <_dtoa_r+0xa0>
 800d3c6:	601d      	str	r5, [r3, #0]
 800d3c8:	e4ee      	b.n	800cda8 <_dtoa_r+0xa0>
 800d3ca:	9f00      	ldr	r7, [sp, #0]
 800d3cc:	462b      	mov	r3, r5
 800d3ce:	461d      	mov	r5, r3
 800d3d0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800d3d4:	2a39      	cmp	r2, #57	; 0x39
 800d3d6:	d106      	bne.n	800d3e6 <_dtoa_r+0x6de>
 800d3d8:	9a01      	ldr	r2, [sp, #4]
 800d3da:	429a      	cmp	r2, r3
 800d3dc:	d1f7      	bne.n	800d3ce <_dtoa_r+0x6c6>
 800d3de:	9901      	ldr	r1, [sp, #4]
 800d3e0:	2230      	movs	r2, #48	; 0x30
 800d3e2:	3701      	adds	r7, #1
 800d3e4:	700a      	strb	r2, [r1, #0]
 800d3e6:	781a      	ldrb	r2, [r3, #0]
 800d3e8:	3201      	adds	r2, #1
 800d3ea:	701a      	strb	r2, [r3, #0]
 800d3ec:	e790      	b.n	800d310 <_dtoa_r+0x608>
 800d3ee:	4ba6      	ldr	r3, [pc, #664]	; (800d688 <_dtoa_r+0x980>)
 800d3f0:	2200      	movs	r2, #0
 800d3f2:	f7f3 f921 	bl	8000638 <__aeabi_dmul>
 800d3f6:	2200      	movs	r2, #0
 800d3f8:	2300      	movs	r3, #0
 800d3fa:	4606      	mov	r6, r0
 800d3fc:	460f      	mov	r7, r1
 800d3fe:	f7f3 fb83 	bl	8000b08 <__aeabi_dcmpeq>
 800d402:	2800      	cmp	r0, #0
 800d404:	d09d      	beq.n	800d342 <_dtoa_r+0x63a>
 800d406:	e7cf      	b.n	800d3a8 <_dtoa_r+0x6a0>
 800d408:	9a08      	ldr	r2, [sp, #32]
 800d40a:	2a00      	cmp	r2, #0
 800d40c:	f000 80d7 	beq.w	800d5be <_dtoa_r+0x8b6>
 800d410:	9a06      	ldr	r2, [sp, #24]
 800d412:	2a01      	cmp	r2, #1
 800d414:	f300 80ba 	bgt.w	800d58c <_dtoa_r+0x884>
 800d418:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d41a:	2a00      	cmp	r2, #0
 800d41c:	f000 80b2 	beq.w	800d584 <_dtoa_r+0x87c>
 800d420:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800d424:	9e07      	ldr	r6, [sp, #28]
 800d426:	9d04      	ldr	r5, [sp, #16]
 800d428:	9a04      	ldr	r2, [sp, #16]
 800d42a:	441a      	add	r2, r3
 800d42c:	9204      	str	r2, [sp, #16]
 800d42e:	9a05      	ldr	r2, [sp, #20]
 800d430:	2101      	movs	r1, #1
 800d432:	441a      	add	r2, r3
 800d434:	4620      	mov	r0, r4
 800d436:	9205      	str	r2, [sp, #20]
 800d438:	f000 fb66 	bl	800db08 <__i2b>
 800d43c:	4607      	mov	r7, r0
 800d43e:	2d00      	cmp	r5, #0
 800d440:	dd0c      	ble.n	800d45c <_dtoa_r+0x754>
 800d442:	9b05      	ldr	r3, [sp, #20]
 800d444:	2b00      	cmp	r3, #0
 800d446:	dd09      	ble.n	800d45c <_dtoa_r+0x754>
 800d448:	42ab      	cmp	r3, r5
 800d44a:	9a04      	ldr	r2, [sp, #16]
 800d44c:	bfa8      	it	ge
 800d44e:	462b      	movge	r3, r5
 800d450:	1ad2      	subs	r2, r2, r3
 800d452:	9204      	str	r2, [sp, #16]
 800d454:	9a05      	ldr	r2, [sp, #20]
 800d456:	1aed      	subs	r5, r5, r3
 800d458:	1ad3      	subs	r3, r2, r3
 800d45a:	9305      	str	r3, [sp, #20]
 800d45c:	9b07      	ldr	r3, [sp, #28]
 800d45e:	b31b      	cbz	r3, 800d4a8 <_dtoa_r+0x7a0>
 800d460:	9b08      	ldr	r3, [sp, #32]
 800d462:	2b00      	cmp	r3, #0
 800d464:	f000 80af 	beq.w	800d5c6 <_dtoa_r+0x8be>
 800d468:	2e00      	cmp	r6, #0
 800d46a:	dd13      	ble.n	800d494 <_dtoa_r+0x78c>
 800d46c:	4639      	mov	r1, r7
 800d46e:	4632      	mov	r2, r6
 800d470:	4620      	mov	r0, r4
 800d472:	f000 fc09 	bl	800dc88 <__pow5mult>
 800d476:	ee18 2a10 	vmov	r2, s16
 800d47a:	4601      	mov	r1, r0
 800d47c:	4607      	mov	r7, r0
 800d47e:	4620      	mov	r0, r4
 800d480:	f000 fb58 	bl	800db34 <__multiply>
 800d484:	ee18 1a10 	vmov	r1, s16
 800d488:	4680      	mov	r8, r0
 800d48a:	4620      	mov	r0, r4
 800d48c:	f000 fa84 	bl	800d998 <_Bfree>
 800d490:	ee08 8a10 	vmov	s16, r8
 800d494:	9b07      	ldr	r3, [sp, #28]
 800d496:	1b9a      	subs	r2, r3, r6
 800d498:	d006      	beq.n	800d4a8 <_dtoa_r+0x7a0>
 800d49a:	ee18 1a10 	vmov	r1, s16
 800d49e:	4620      	mov	r0, r4
 800d4a0:	f000 fbf2 	bl	800dc88 <__pow5mult>
 800d4a4:	ee08 0a10 	vmov	s16, r0
 800d4a8:	2101      	movs	r1, #1
 800d4aa:	4620      	mov	r0, r4
 800d4ac:	f000 fb2c 	bl	800db08 <__i2b>
 800d4b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d4b2:	2b00      	cmp	r3, #0
 800d4b4:	4606      	mov	r6, r0
 800d4b6:	f340 8088 	ble.w	800d5ca <_dtoa_r+0x8c2>
 800d4ba:	461a      	mov	r2, r3
 800d4bc:	4601      	mov	r1, r0
 800d4be:	4620      	mov	r0, r4
 800d4c0:	f000 fbe2 	bl	800dc88 <__pow5mult>
 800d4c4:	9b06      	ldr	r3, [sp, #24]
 800d4c6:	2b01      	cmp	r3, #1
 800d4c8:	4606      	mov	r6, r0
 800d4ca:	f340 8081 	ble.w	800d5d0 <_dtoa_r+0x8c8>
 800d4ce:	f04f 0800 	mov.w	r8, #0
 800d4d2:	6933      	ldr	r3, [r6, #16]
 800d4d4:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800d4d8:	6918      	ldr	r0, [r3, #16]
 800d4da:	f000 fac5 	bl	800da68 <__hi0bits>
 800d4de:	f1c0 0020 	rsb	r0, r0, #32
 800d4e2:	9b05      	ldr	r3, [sp, #20]
 800d4e4:	4418      	add	r0, r3
 800d4e6:	f010 001f 	ands.w	r0, r0, #31
 800d4ea:	f000 8092 	beq.w	800d612 <_dtoa_r+0x90a>
 800d4ee:	f1c0 0320 	rsb	r3, r0, #32
 800d4f2:	2b04      	cmp	r3, #4
 800d4f4:	f340 808a 	ble.w	800d60c <_dtoa_r+0x904>
 800d4f8:	f1c0 001c 	rsb	r0, r0, #28
 800d4fc:	9b04      	ldr	r3, [sp, #16]
 800d4fe:	4403      	add	r3, r0
 800d500:	9304      	str	r3, [sp, #16]
 800d502:	9b05      	ldr	r3, [sp, #20]
 800d504:	4403      	add	r3, r0
 800d506:	4405      	add	r5, r0
 800d508:	9305      	str	r3, [sp, #20]
 800d50a:	9b04      	ldr	r3, [sp, #16]
 800d50c:	2b00      	cmp	r3, #0
 800d50e:	dd07      	ble.n	800d520 <_dtoa_r+0x818>
 800d510:	ee18 1a10 	vmov	r1, s16
 800d514:	461a      	mov	r2, r3
 800d516:	4620      	mov	r0, r4
 800d518:	f000 fc10 	bl	800dd3c <__lshift>
 800d51c:	ee08 0a10 	vmov	s16, r0
 800d520:	9b05      	ldr	r3, [sp, #20]
 800d522:	2b00      	cmp	r3, #0
 800d524:	dd05      	ble.n	800d532 <_dtoa_r+0x82a>
 800d526:	4631      	mov	r1, r6
 800d528:	461a      	mov	r2, r3
 800d52a:	4620      	mov	r0, r4
 800d52c:	f000 fc06 	bl	800dd3c <__lshift>
 800d530:	4606      	mov	r6, r0
 800d532:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d534:	2b00      	cmp	r3, #0
 800d536:	d06e      	beq.n	800d616 <_dtoa_r+0x90e>
 800d538:	ee18 0a10 	vmov	r0, s16
 800d53c:	4631      	mov	r1, r6
 800d53e:	f000 fc6d 	bl	800de1c <__mcmp>
 800d542:	2800      	cmp	r0, #0
 800d544:	da67      	bge.n	800d616 <_dtoa_r+0x90e>
 800d546:	9b00      	ldr	r3, [sp, #0]
 800d548:	3b01      	subs	r3, #1
 800d54a:	ee18 1a10 	vmov	r1, s16
 800d54e:	9300      	str	r3, [sp, #0]
 800d550:	220a      	movs	r2, #10
 800d552:	2300      	movs	r3, #0
 800d554:	4620      	mov	r0, r4
 800d556:	f000 fa41 	bl	800d9dc <__multadd>
 800d55a:	9b08      	ldr	r3, [sp, #32]
 800d55c:	ee08 0a10 	vmov	s16, r0
 800d560:	2b00      	cmp	r3, #0
 800d562:	f000 81b1 	beq.w	800d8c8 <_dtoa_r+0xbc0>
 800d566:	2300      	movs	r3, #0
 800d568:	4639      	mov	r1, r7
 800d56a:	220a      	movs	r2, #10
 800d56c:	4620      	mov	r0, r4
 800d56e:	f000 fa35 	bl	800d9dc <__multadd>
 800d572:	9b02      	ldr	r3, [sp, #8]
 800d574:	2b00      	cmp	r3, #0
 800d576:	4607      	mov	r7, r0
 800d578:	f300 808e 	bgt.w	800d698 <_dtoa_r+0x990>
 800d57c:	9b06      	ldr	r3, [sp, #24]
 800d57e:	2b02      	cmp	r3, #2
 800d580:	dc51      	bgt.n	800d626 <_dtoa_r+0x91e>
 800d582:	e089      	b.n	800d698 <_dtoa_r+0x990>
 800d584:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d586:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800d58a:	e74b      	b.n	800d424 <_dtoa_r+0x71c>
 800d58c:	9b03      	ldr	r3, [sp, #12]
 800d58e:	1e5e      	subs	r6, r3, #1
 800d590:	9b07      	ldr	r3, [sp, #28]
 800d592:	42b3      	cmp	r3, r6
 800d594:	bfbf      	itttt	lt
 800d596:	9b07      	ldrlt	r3, [sp, #28]
 800d598:	9607      	strlt	r6, [sp, #28]
 800d59a:	1af2      	sublt	r2, r6, r3
 800d59c:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800d59e:	bfb6      	itet	lt
 800d5a0:	189b      	addlt	r3, r3, r2
 800d5a2:	1b9e      	subge	r6, r3, r6
 800d5a4:	930a      	strlt	r3, [sp, #40]	; 0x28
 800d5a6:	9b03      	ldr	r3, [sp, #12]
 800d5a8:	bfb8      	it	lt
 800d5aa:	2600      	movlt	r6, #0
 800d5ac:	2b00      	cmp	r3, #0
 800d5ae:	bfb7      	itett	lt
 800d5b0:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 800d5b4:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 800d5b8:	1a9d      	sublt	r5, r3, r2
 800d5ba:	2300      	movlt	r3, #0
 800d5bc:	e734      	b.n	800d428 <_dtoa_r+0x720>
 800d5be:	9e07      	ldr	r6, [sp, #28]
 800d5c0:	9d04      	ldr	r5, [sp, #16]
 800d5c2:	9f08      	ldr	r7, [sp, #32]
 800d5c4:	e73b      	b.n	800d43e <_dtoa_r+0x736>
 800d5c6:	9a07      	ldr	r2, [sp, #28]
 800d5c8:	e767      	b.n	800d49a <_dtoa_r+0x792>
 800d5ca:	9b06      	ldr	r3, [sp, #24]
 800d5cc:	2b01      	cmp	r3, #1
 800d5ce:	dc18      	bgt.n	800d602 <_dtoa_r+0x8fa>
 800d5d0:	f1ba 0f00 	cmp.w	sl, #0
 800d5d4:	d115      	bne.n	800d602 <_dtoa_r+0x8fa>
 800d5d6:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800d5da:	b993      	cbnz	r3, 800d602 <_dtoa_r+0x8fa>
 800d5dc:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800d5e0:	0d1b      	lsrs	r3, r3, #20
 800d5e2:	051b      	lsls	r3, r3, #20
 800d5e4:	b183      	cbz	r3, 800d608 <_dtoa_r+0x900>
 800d5e6:	9b04      	ldr	r3, [sp, #16]
 800d5e8:	3301      	adds	r3, #1
 800d5ea:	9304      	str	r3, [sp, #16]
 800d5ec:	9b05      	ldr	r3, [sp, #20]
 800d5ee:	3301      	adds	r3, #1
 800d5f0:	9305      	str	r3, [sp, #20]
 800d5f2:	f04f 0801 	mov.w	r8, #1
 800d5f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d5f8:	2b00      	cmp	r3, #0
 800d5fa:	f47f af6a 	bne.w	800d4d2 <_dtoa_r+0x7ca>
 800d5fe:	2001      	movs	r0, #1
 800d600:	e76f      	b.n	800d4e2 <_dtoa_r+0x7da>
 800d602:	f04f 0800 	mov.w	r8, #0
 800d606:	e7f6      	b.n	800d5f6 <_dtoa_r+0x8ee>
 800d608:	4698      	mov	r8, r3
 800d60a:	e7f4      	b.n	800d5f6 <_dtoa_r+0x8ee>
 800d60c:	f43f af7d 	beq.w	800d50a <_dtoa_r+0x802>
 800d610:	4618      	mov	r0, r3
 800d612:	301c      	adds	r0, #28
 800d614:	e772      	b.n	800d4fc <_dtoa_r+0x7f4>
 800d616:	9b03      	ldr	r3, [sp, #12]
 800d618:	2b00      	cmp	r3, #0
 800d61a:	dc37      	bgt.n	800d68c <_dtoa_r+0x984>
 800d61c:	9b06      	ldr	r3, [sp, #24]
 800d61e:	2b02      	cmp	r3, #2
 800d620:	dd34      	ble.n	800d68c <_dtoa_r+0x984>
 800d622:	9b03      	ldr	r3, [sp, #12]
 800d624:	9302      	str	r3, [sp, #8]
 800d626:	9b02      	ldr	r3, [sp, #8]
 800d628:	b96b      	cbnz	r3, 800d646 <_dtoa_r+0x93e>
 800d62a:	4631      	mov	r1, r6
 800d62c:	2205      	movs	r2, #5
 800d62e:	4620      	mov	r0, r4
 800d630:	f000 f9d4 	bl	800d9dc <__multadd>
 800d634:	4601      	mov	r1, r0
 800d636:	4606      	mov	r6, r0
 800d638:	ee18 0a10 	vmov	r0, s16
 800d63c:	f000 fbee 	bl	800de1c <__mcmp>
 800d640:	2800      	cmp	r0, #0
 800d642:	f73f adbb 	bgt.w	800d1bc <_dtoa_r+0x4b4>
 800d646:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d648:	9d01      	ldr	r5, [sp, #4]
 800d64a:	43db      	mvns	r3, r3
 800d64c:	9300      	str	r3, [sp, #0]
 800d64e:	f04f 0800 	mov.w	r8, #0
 800d652:	4631      	mov	r1, r6
 800d654:	4620      	mov	r0, r4
 800d656:	f000 f99f 	bl	800d998 <_Bfree>
 800d65a:	2f00      	cmp	r7, #0
 800d65c:	f43f aea4 	beq.w	800d3a8 <_dtoa_r+0x6a0>
 800d660:	f1b8 0f00 	cmp.w	r8, #0
 800d664:	d005      	beq.n	800d672 <_dtoa_r+0x96a>
 800d666:	45b8      	cmp	r8, r7
 800d668:	d003      	beq.n	800d672 <_dtoa_r+0x96a>
 800d66a:	4641      	mov	r1, r8
 800d66c:	4620      	mov	r0, r4
 800d66e:	f000 f993 	bl	800d998 <_Bfree>
 800d672:	4639      	mov	r1, r7
 800d674:	4620      	mov	r0, r4
 800d676:	f000 f98f 	bl	800d998 <_Bfree>
 800d67a:	e695      	b.n	800d3a8 <_dtoa_r+0x6a0>
 800d67c:	2600      	movs	r6, #0
 800d67e:	4637      	mov	r7, r6
 800d680:	e7e1      	b.n	800d646 <_dtoa_r+0x93e>
 800d682:	9700      	str	r7, [sp, #0]
 800d684:	4637      	mov	r7, r6
 800d686:	e599      	b.n	800d1bc <_dtoa_r+0x4b4>
 800d688:	40240000 	.word	0x40240000
 800d68c:	9b08      	ldr	r3, [sp, #32]
 800d68e:	2b00      	cmp	r3, #0
 800d690:	f000 80ca 	beq.w	800d828 <_dtoa_r+0xb20>
 800d694:	9b03      	ldr	r3, [sp, #12]
 800d696:	9302      	str	r3, [sp, #8]
 800d698:	2d00      	cmp	r5, #0
 800d69a:	dd05      	ble.n	800d6a8 <_dtoa_r+0x9a0>
 800d69c:	4639      	mov	r1, r7
 800d69e:	462a      	mov	r2, r5
 800d6a0:	4620      	mov	r0, r4
 800d6a2:	f000 fb4b 	bl	800dd3c <__lshift>
 800d6a6:	4607      	mov	r7, r0
 800d6a8:	f1b8 0f00 	cmp.w	r8, #0
 800d6ac:	d05b      	beq.n	800d766 <_dtoa_r+0xa5e>
 800d6ae:	6879      	ldr	r1, [r7, #4]
 800d6b0:	4620      	mov	r0, r4
 800d6b2:	f000 f931 	bl	800d918 <_Balloc>
 800d6b6:	4605      	mov	r5, r0
 800d6b8:	b928      	cbnz	r0, 800d6c6 <_dtoa_r+0x9be>
 800d6ba:	4b87      	ldr	r3, [pc, #540]	; (800d8d8 <_dtoa_r+0xbd0>)
 800d6bc:	4602      	mov	r2, r0
 800d6be:	f240 21ea 	movw	r1, #746	; 0x2ea
 800d6c2:	f7ff bb3b 	b.w	800cd3c <_dtoa_r+0x34>
 800d6c6:	693a      	ldr	r2, [r7, #16]
 800d6c8:	3202      	adds	r2, #2
 800d6ca:	0092      	lsls	r2, r2, #2
 800d6cc:	f107 010c 	add.w	r1, r7, #12
 800d6d0:	300c      	adds	r0, #12
 800d6d2:	f000 f913 	bl	800d8fc <memcpy>
 800d6d6:	2201      	movs	r2, #1
 800d6d8:	4629      	mov	r1, r5
 800d6da:	4620      	mov	r0, r4
 800d6dc:	f000 fb2e 	bl	800dd3c <__lshift>
 800d6e0:	9b01      	ldr	r3, [sp, #4]
 800d6e2:	f103 0901 	add.w	r9, r3, #1
 800d6e6:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800d6ea:	4413      	add	r3, r2
 800d6ec:	9305      	str	r3, [sp, #20]
 800d6ee:	f00a 0301 	and.w	r3, sl, #1
 800d6f2:	46b8      	mov	r8, r7
 800d6f4:	9304      	str	r3, [sp, #16]
 800d6f6:	4607      	mov	r7, r0
 800d6f8:	4631      	mov	r1, r6
 800d6fa:	ee18 0a10 	vmov	r0, s16
 800d6fe:	f7ff fa77 	bl	800cbf0 <quorem>
 800d702:	4641      	mov	r1, r8
 800d704:	9002      	str	r0, [sp, #8]
 800d706:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800d70a:	ee18 0a10 	vmov	r0, s16
 800d70e:	f000 fb85 	bl	800de1c <__mcmp>
 800d712:	463a      	mov	r2, r7
 800d714:	9003      	str	r0, [sp, #12]
 800d716:	4631      	mov	r1, r6
 800d718:	4620      	mov	r0, r4
 800d71a:	f000 fb9b 	bl	800de54 <__mdiff>
 800d71e:	68c2      	ldr	r2, [r0, #12]
 800d720:	f109 3bff 	add.w	fp, r9, #4294967295
 800d724:	4605      	mov	r5, r0
 800d726:	bb02      	cbnz	r2, 800d76a <_dtoa_r+0xa62>
 800d728:	4601      	mov	r1, r0
 800d72a:	ee18 0a10 	vmov	r0, s16
 800d72e:	f000 fb75 	bl	800de1c <__mcmp>
 800d732:	4602      	mov	r2, r0
 800d734:	4629      	mov	r1, r5
 800d736:	4620      	mov	r0, r4
 800d738:	9207      	str	r2, [sp, #28]
 800d73a:	f000 f92d 	bl	800d998 <_Bfree>
 800d73e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800d742:	ea43 0102 	orr.w	r1, r3, r2
 800d746:	9b04      	ldr	r3, [sp, #16]
 800d748:	430b      	orrs	r3, r1
 800d74a:	464d      	mov	r5, r9
 800d74c:	d10f      	bne.n	800d76e <_dtoa_r+0xa66>
 800d74e:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800d752:	d02a      	beq.n	800d7aa <_dtoa_r+0xaa2>
 800d754:	9b03      	ldr	r3, [sp, #12]
 800d756:	2b00      	cmp	r3, #0
 800d758:	dd02      	ble.n	800d760 <_dtoa_r+0xa58>
 800d75a:	9b02      	ldr	r3, [sp, #8]
 800d75c:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 800d760:	f88b a000 	strb.w	sl, [fp]
 800d764:	e775      	b.n	800d652 <_dtoa_r+0x94a>
 800d766:	4638      	mov	r0, r7
 800d768:	e7ba      	b.n	800d6e0 <_dtoa_r+0x9d8>
 800d76a:	2201      	movs	r2, #1
 800d76c:	e7e2      	b.n	800d734 <_dtoa_r+0xa2c>
 800d76e:	9b03      	ldr	r3, [sp, #12]
 800d770:	2b00      	cmp	r3, #0
 800d772:	db04      	blt.n	800d77e <_dtoa_r+0xa76>
 800d774:	9906      	ldr	r1, [sp, #24]
 800d776:	430b      	orrs	r3, r1
 800d778:	9904      	ldr	r1, [sp, #16]
 800d77a:	430b      	orrs	r3, r1
 800d77c:	d122      	bne.n	800d7c4 <_dtoa_r+0xabc>
 800d77e:	2a00      	cmp	r2, #0
 800d780:	ddee      	ble.n	800d760 <_dtoa_r+0xa58>
 800d782:	ee18 1a10 	vmov	r1, s16
 800d786:	2201      	movs	r2, #1
 800d788:	4620      	mov	r0, r4
 800d78a:	f000 fad7 	bl	800dd3c <__lshift>
 800d78e:	4631      	mov	r1, r6
 800d790:	ee08 0a10 	vmov	s16, r0
 800d794:	f000 fb42 	bl	800de1c <__mcmp>
 800d798:	2800      	cmp	r0, #0
 800d79a:	dc03      	bgt.n	800d7a4 <_dtoa_r+0xa9c>
 800d79c:	d1e0      	bne.n	800d760 <_dtoa_r+0xa58>
 800d79e:	f01a 0f01 	tst.w	sl, #1
 800d7a2:	d0dd      	beq.n	800d760 <_dtoa_r+0xa58>
 800d7a4:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800d7a8:	d1d7      	bne.n	800d75a <_dtoa_r+0xa52>
 800d7aa:	2339      	movs	r3, #57	; 0x39
 800d7ac:	f88b 3000 	strb.w	r3, [fp]
 800d7b0:	462b      	mov	r3, r5
 800d7b2:	461d      	mov	r5, r3
 800d7b4:	3b01      	subs	r3, #1
 800d7b6:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800d7ba:	2a39      	cmp	r2, #57	; 0x39
 800d7bc:	d071      	beq.n	800d8a2 <_dtoa_r+0xb9a>
 800d7be:	3201      	adds	r2, #1
 800d7c0:	701a      	strb	r2, [r3, #0]
 800d7c2:	e746      	b.n	800d652 <_dtoa_r+0x94a>
 800d7c4:	2a00      	cmp	r2, #0
 800d7c6:	dd07      	ble.n	800d7d8 <_dtoa_r+0xad0>
 800d7c8:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800d7cc:	d0ed      	beq.n	800d7aa <_dtoa_r+0xaa2>
 800d7ce:	f10a 0301 	add.w	r3, sl, #1
 800d7d2:	f88b 3000 	strb.w	r3, [fp]
 800d7d6:	e73c      	b.n	800d652 <_dtoa_r+0x94a>
 800d7d8:	9b05      	ldr	r3, [sp, #20]
 800d7da:	f809 ac01 	strb.w	sl, [r9, #-1]
 800d7de:	4599      	cmp	r9, r3
 800d7e0:	d047      	beq.n	800d872 <_dtoa_r+0xb6a>
 800d7e2:	ee18 1a10 	vmov	r1, s16
 800d7e6:	2300      	movs	r3, #0
 800d7e8:	220a      	movs	r2, #10
 800d7ea:	4620      	mov	r0, r4
 800d7ec:	f000 f8f6 	bl	800d9dc <__multadd>
 800d7f0:	45b8      	cmp	r8, r7
 800d7f2:	ee08 0a10 	vmov	s16, r0
 800d7f6:	f04f 0300 	mov.w	r3, #0
 800d7fa:	f04f 020a 	mov.w	r2, #10
 800d7fe:	4641      	mov	r1, r8
 800d800:	4620      	mov	r0, r4
 800d802:	d106      	bne.n	800d812 <_dtoa_r+0xb0a>
 800d804:	f000 f8ea 	bl	800d9dc <__multadd>
 800d808:	4680      	mov	r8, r0
 800d80a:	4607      	mov	r7, r0
 800d80c:	f109 0901 	add.w	r9, r9, #1
 800d810:	e772      	b.n	800d6f8 <_dtoa_r+0x9f0>
 800d812:	f000 f8e3 	bl	800d9dc <__multadd>
 800d816:	4639      	mov	r1, r7
 800d818:	4680      	mov	r8, r0
 800d81a:	2300      	movs	r3, #0
 800d81c:	220a      	movs	r2, #10
 800d81e:	4620      	mov	r0, r4
 800d820:	f000 f8dc 	bl	800d9dc <__multadd>
 800d824:	4607      	mov	r7, r0
 800d826:	e7f1      	b.n	800d80c <_dtoa_r+0xb04>
 800d828:	9b03      	ldr	r3, [sp, #12]
 800d82a:	9302      	str	r3, [sp, #8]
 800d82c:	9d01      	ldr	r5, [sp, #4]
 800d82e:	ee18 0a10 	vmov	r0, s16
 800d832:	4631      	mov	r1, r6
 800d834:	f7ff f9dc 	bl	800cbf0 <quorem>
 800d838:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800d83c:	9b01      	ldr	r3, [sp, #4]
 800d83e:	f805 ab01 	strb.w	sl, [r5], #1
 800d842:	1aea      	subs	r2, r5, r3
 800d844:	9b02      	ldr	r3, [sp, #8]
 800d846:	4293      	cmp	r3, r2
 800d848:	dd09      	ble.n	800d85e <_dtoa_r+0xb56>
 800d84a:	ee18 1a10 	vmov	r1, s16
 800d84e:	2300      	movs	r3, #0
 800d850:	220a      	movs	r2, #10
 800d852:	4620      	mov	r0, r4
 800d854:	f000 f8c2 	bl	800d9dc <__multadd>
 800d858:	ee08 0a10 	vmov	s16, r0
 800d85c:	e7e7      	b.n	800d82e <_dtoa_r+0xb26>
 800d85e:	9b02      	ldr	r3, [sp, #8]
 800d860:	2b00      	cmp	r3, #0
 800d862:	bfc8      	it	gt
 800d864:	461d      	movgt	r5, r3
 800d866:	9b01      	ldr	r3, [sp, #4]
 800d868:	bfd8      	it	le
 800d86a:	2501      	movle	r5, #1
 800d86c:	441d      	add	r5, r3
 800d86e:	f04f 0800 	mov.w	r8, #0
 800d872:	ee18 1a10 	vmov	r1, s16
 800d876:	2201      	movs	r2, #1
 800d878:	4620      	mov	r0, r4
 800d87a:	f000 fa5f 	bl	800dd3c <__lshift>
 800d87e:	4631      	mov	r1, r6
 800d880:	ee08 0a10 	vmov	s16, r0
 800d884:	f000 faca 	bl	800de1c <__mcmp>
 800d888:	2800      	cmp	r0, #0
 800d88a:	dc91      	bgt.n	800d7b0 <_dtoa_r+0xaa8>
 800d88c:	d102      	bne.n	800d894 <_dtoa_r+0xb8c>
 800d88e:	f01a 0f01 	tst.w	sl, #1
 800d892:	d18d      	bne.n	800d7b0 <_dtoa_r+0xaa8>
 800d894:	462b      	mov	r3, r5
 800d896:	461d      	mov	r5, r3
 800d898:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800d89c:	2a30      	cmp	r2, #48	; 0x30
 800d89e:	d0fa      	beq.n	800d896 <_dtoa_r+0xb8e>
 800d8a0:	e6d7      	b.n	800d652 <_dtoa_r+0x94a>
 800d8a2:	9a01      	ldr	r2, [sp, #4]
 800d8a4:	429a      	cmp	r2, r3
 800d8a6:	d184      	bne.n	800d7b2 <_dtoa_r+0xaaa>
 800d8a8:	9b00      	ldr	r3, [sp, #0]
 800d8aa:	3301      	adds	r3, #1
 800d8ac:	9300      	str	r3, [sp, #0]
 800d8ae:	2331      	movs	r3, #49	; 0x31
 800d8b0:	7013      	strb	r3, [r2, #0]
 800d8b2:	e6ce      	b.n	800d652 <_dtoa_r+0x94a>
 800d8b4:	4b09      	ldr	r3, [pc, #36]	; (800d8dc <_dtoa_r+0xbd4>)
 800d8b6:	f7ff ba95 	b.w	800cde4 <_dtoa_r+0xdc>
 800d8ba:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800d8bc:	2b00      	cmp	r3, #0
 800d8be:	f47f aa6e 	bne.w	800cd9e <_dtoa_r+0x96>
 800d8c2:	4b07      	ldr	r3, [pc, #28]	; (800d8e0 <_dtoa_r+0xbd8>)
 800d8c4:	f7ff ba8e 	b.w	800cde4 <_dtoa_r+0xdc>
 800d8c8:	9b02      	ldr	r3, [sp, #8]
 800d8ca:	2b00      	cmp	r3, #0
 800d8cc:	dcae      	bgt.n	800d82c <_dtoa_r+0xb24>
 800d8ce:	9b06      	ldr	r3, [sp, #24]
 800d8d0:	2b02      	cmp	r3, #2
 800d8d2:	f73f aea8 	bgt.w	800d626 <_dtoa_r+0x91e>
 800d8d6:	e7a9      	b.n	800d82c <_dtoa_r+0xb24>
 800d8d8:	0801076f 	.word	0x0801076f
 800d8dc:	080106cc 	.word	0x080106cc
 800d8e0:	080106f0 	.word	0x080106f0

0800d8e4 <_localeconv_r>:
 800d8e4:	4800      	ldr	r0, [pc, #0]	; (800d8e8 <_localeconv_r+0x4>)
 800d8e6:	4770      	bx	lr
 800d8e8:	20000204 	.word	0x20000204

0800d8ec <malloc>:
 800d8ec:	4b02      	ldr	r3, [pc, #8]	; (800d8f8 <malloc+0xc>)
 800d8ee:	4601      	mov	r1, r0
 800d8f0:	6818      	ldr	r0, [r3, #0]
 800d8f2:	f000 bc17 	b.w	800e124 <_malloc_r>
 800d8f6:	bf00      	nop
 800d8f8:	200000b0 	.word	0x200000b0

0800d8fc <memcpy>:
 800d8fc:	440a      	add	r2, r1
 800d8fe:	4291      	cmp	r1, r2
 800d900:	f100 33ff 	add.w	r3, r0, #4294967295
 800d904:	d100      	bne.n	800d908 <memcpy+0xc>
 800d906:	4770      	bx	lr
 800d908:	b510      	push	{r4, lr}
 800d90a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800d90e:	f803 4f01 	strb.w	r4, [r3, #1]!
 800d912:	4291      	cmp	r1, r2
 800d914:	d1f9      	bne.n	800d90a <memcpy+0xe>
 800d916:	bd10      	pop	{r4, pc}

0800d918 <_Balloc>:
 800d918:	b570      	push	{r4, r5, r6, lr}
 800d91a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800d91c:	4604      	mov	r4, r0
 800d91e:	460d      	mov	r5, r1
 800d920:	b976      	cbnz	r6, 800d940 <_Balloc+0x28>
 800d922:	2010      	movs	r0, #16
 800d924:	f7ff ffe2 	bl	800d8ec <malloc>
 800d928:	4602      	mov	r2, r0
 800d92a:	6260      	str	r0, [r4, #36]	; 0x24
 800d92c:	b920      	cbnz	r0, 800d938 <_Balloc+0x20>
 800d92e:	4b18      	ldr	r3, [pc, #96]	; (800d990 <_Balloc+0x78>)
 800d930:	4818      	ldr	r0, [pc, #96]	; (800d994 <_Balloc+0x7c>)
 800d932:	2166      	movs	r1, #102	; 0x66
 800d934:	f000 fdd6 	bl	800e4e4 <__assert_func>
 800d938:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800d93c:	6006      	str	r6, [r0, #0]
 800d93e:	60c6      	str	r6, [r0, #12]
 800d940:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800d942:	68f3      	ldr	r3, [r6, #12]
 800d944:	b183      	cbz	r3, 800d968 <_Balloc+0x50>
 800d946:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d948:	68db      	ldr	r3, [r3, #12]
 800d94a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800d94e:	b9b8      	cbnz	r0, 800d980 <_Balloc+0x68>
 800d950:	2101      	movs	r1, #1
 800d952:	fa01 f605 	lsl.w	r6, r1, r5
 800d956:	1d72      	adds	r2, r6, #5
 800d958:	0092      	lsls	r2, r2, #2
 800d95a:	4620      	mov	r0, r4
 800d95c:	f000 fb60 	bl	800e020 <_calloc_r>
 800d960:	b160      	cbz	r0, 800d97c <_Balloc+0x64>
 800d962:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800d966:	e00e      	b.n	800d986 <_Balloc+0x6e>
 800d968:	2221      	movs	r2, #33	; 0x21
 800d96a:	2104      	movs	r1, #4
 800d96c:	4620      	mov	r0, r4
 800d96e:	f000 fb57 	bl	800e020 <_calloc_r>
 800d972:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d974:	60f0      	str	r0, [r6, #12]
 800d976:	68db      	ldr	r3, [r3, #12]
 800d978:	2b00      	cmp	r3, #0
 800d97a:	d1e4      	bne.n	800d946 <_Balloc+0x2e>
 800d97c:	2000      	movs	r0, #0
 800d97e:	bd70      	pop	{r4, r5, r6, pc}
 800d980:	6802      	ldr	r2, [r0, #0]
 800d982:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800d986:	2300      	movs	r3, #0
 800d988:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800d98c:	e7f7      	b.n	800d97e <_Balloc+0x66>
 800d98e:	bf00      	nop
 800d990:	080106fd 	.word	0x080106fd
 800d994:	08010780 	.word	0x08010780

0800d998 <_Bfree>:
 800d998:	b570      	push	{r4, r5, r6, lr}
 800d99a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800d99c:	4605      	mov	r5, r0
 800d99e:	460c      	mov	r4, r1
 800d9a0:	b976      	cbnz	r6, 800d9c0 <_Bfree+0x28>
 800d9a2:	2010      	movs	r0, #16
 800d9a4:	f7ff ffa2 	bl	800d8ec <malloc>
 800d9a8:	4602      	mov	r2, r0
 800d9aa:	6268      	str	r0, [r5, #36]	; 0x24
 800d9ac:	b920      	cbnz	r0, 800d9b8 <_Bfree+0x20>
 800d9ae:	4b09      	ldr	r3, [pc, #36]	; (800d9d4 <_Bfree+0x3c>)
 800d9b0:	4809      	ldr	r0, [pc, #36]	; (800d9d8 <_Bfree+0x40>)
 800d9b2:	218a      	movs	r1, #138	; 0x8a
 800d9b4:	f000 fd96 	bl	800e4e4 <__assert_func>
 800d9b8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800d9bc:	6006      	str	r6, [r0, #0]
 800d9be:	60c6      	str	r6, [r0, #12]
 800d9c0:	b13c      	cbz	r4, 800d9d2 <_Bfree+0x3a>
 800d9c2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800d9c4:	6862      	ldr	r2, [r4, #4]
 800d9c6:	68db      	ldr	r3, [r3, #12]
 800d9c8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800d9cc:	6021      	str	r1, [r4, #0]
 800d9ce:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800d9d2:	bd70      	pop	{r4, r5, r6, pc}
 800d9d4:	080106fd 	.word	0x080106fd
 800d9d8:	08010780 	.word	0x08010780

0800d9dc <__multadd>:
 800d9dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d9e0:	690d      	ldr	r5, [r1, #16]
 800d9e2:	4607      	mov	r7, r0
 800d9e4:	460c      	mov	r4, r1
 800d9e6:	461e      	mov	r6, r3
 800d9e8:	f101 0c14 	add.w	ip, r1, #20
 800d9ec:	2000      	movs	r0, #0
 800d9ee:	f8dc 3000 	ldr.w	r3, [ip]
 800d9f2:	b299      	uxth	r1, r3
 800d9f4:	fb02 6101 	mla	r1, r2, r1, r6
 800d9f8:	0c1e      	lsrs	r6, r3, #16
 800d9fa:	0c0b      	lsrs	r3, r1, #16
 800d9fc:	fb02 3306 	mla	r3, r2, r6, r3
 800da00:	b289      	uxth	r1, r1
 800da02:	3001      	adds	r0, #1
 800da04:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800da08:	4285      	cmp	r5, r0
 800da0a:	f84c 1b04 	str.w	r1, [ip], #4
 800da0e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800da12:	dcec      	bgt.n	800d9ee <__multadd+0x12>
 800da14:	b30e      	cbz	r6, 800da5a <__multadd+0x7e>
 800da16:	68a3      	ldr	r3, [r4, #8]
 800da18:	42ab      	cmp	r3, r5
 800da1a:	dc19      	bgt.n	800da50 <__multadd+0x74>
 800da1c:	6861      	ldr	r1, [r4, #4]
 800da1e:	4638      	mov	r0, r7
 800da20:	3101      	adds	r1, #1
 800da22:	f7ff ff79 	bl	800d918 <_Balloc>
 800da26:	4680      	mov	r8, r0
 800da28:	b928      	cbnz	r0, 800da36 <__multadd+0x5a>
 800da2a:	4602      	mov	r2, r0
 800da2c:	4b0c      	ldr	r3, [pc, #48]	; (800da60 <__multadd+0x84>)
 800da2e:	480d      	ldr	r0, [pc, #52]	; (800da64 <__multadd+0x88>)
 800da30:	21b5      	movs	r1, #181	; 0xb5
 800da32:	f000 fd57 	bl	800e4e4 <__assert_func>
 800da36:	6922      	ldr	r2, [r4, #16]
 800da38:	3202      	adds	r2, #2
 800da3a:	f104 010c 	add.w	r1, r4, #12
 800da3e:	0092      	lsls	r2, r2, #2
 800da40:	300c      	adds	r0, #12
 800da42:	f7ff ff5b 	bl	800d8fc <memcpy>
 800da46:	4621      	mov	r1, r4
 800da48:	4638      	mov	r0, r7
 800da4a:	f7ff ffa5 	bl	800d998 <_Bfree>
 800da4e:	4644      	mov	r4, r8
 800da50:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800da54:	3501      	adds	r5, #1
 800da56:	615e      	str	r6, [r3, #20]
 800da58:	6125      	str	r5, [r4, #16]
 800da5a:	4620      	mov	r0, r4
 800da5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800da60:	0801076f 	.word	0x0801076f
 800da64:	08010780 	.word	0x08010780

0800da68 <__hi0bits>:
 800da68:	0c03      	lsrs	r3, r0, #16
 800da6a:	041b      	lsls	r3, r3, #16
 800da6c:	b9d3      	cbnz	r3, 800daa4 <__hi0bits+0x3c>
 800da6e:	0400      	lsls	r0, r0, #16
 800da70:	2310      	movs	r3, #16
 800da72:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800da76:	bf04      	itt	eq
 800da78:	0200      	lsleq	r0, r0, #8
 800da7a:	3308      	addeq	r3, #8
 800da7c:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800da80:	bf04      	itt	eq
 800da82:	0100      	lsleq	r0, r0, #4
 800da84:	3304      	addeq	r3, #4
 800da86:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800da8a:	bf04      	itt	eq
 800da8c:	0080      	lsleq	r0, r0, #2
 800da8e:	3302      	addeq	r3, #2
 800da90:	2800      	cmp	r0, #0
 800da92:	db05      	blt.n	800daa0 <__hi0bits+0x38>
 800da94:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800da98:	f103 0301 	add.w	r3, r3, #1
 800da9c:	bf08      	it	eq
 800da9e:	2320      	moveq	r3, #32
 800daa0:	4618      	mov	r0, r3
 800daa2:	4770      	bx	lr
 800daa4:	2300      	movs	r3, #0
 800daa6:	e7e4      	b.n	800da72 <__hi0bits+0xa>

0800daa8 <__lo0bits>:
 800daa8:	6803      	ldr	r3, [r0, #0]
 800daaa:	f013 0207 	ands.w	r2, r3, #7
 800daae:	4601      	mov	r1, r0
 800dab0:	d00b      	beq.n	800daca <__lo0bits+0x22>
 800dab2:	07da      	lsls	r2, r3, #31
 800dab4:	d423      	bmi.n	800dafe <__lo0bits+0x56>
 800dab6:	0798      	lsls	r0, r3, #30
 800dab8:	bf49      	itett	mi
 800daba:	085b      	lsrmi	r3, r3, #1
 800dabc:	089b      	lsrpl	r3, r3, #2
 800dabe:	2001      	movmi	r0, #1
 800dac0:	600b      	strmi	r3, [r1, #0]
 800dac2:	bf5c      	itt	pl
 800dac4:	600b      	strpl	r3, [r1, #0]
 800dac6:	2002      	movpl	r0, #2
 800dac8:	4770      	bx	lr
 800daca:	b298      	uxth	r0, r3
 800dacc:	b9a8      	cbnz	r0, 800dafa <__lo0bits+0x52>
 800dace:	0c1b      	lsrs	r3, r3, #16
 800dad0:	2010      	movs	r0, #16
 800dad2:	b2da      	uxtb	r2, r3
 800dad4:	b90a      	cbnz	r2, 800dada <__lo0bits+0x32>
 800dad6:	3008      	adds	r0, #8
 800dad8:	0a1b      	lsrs	r3, r3, #8
 800dada:	071a      	lsls	r2, r3, #28
 800dadc:	bf04      	itt	eq
 800dade:	091b      	lsreq	r3, r3, #4
 800dae0:	3004      	addeq	r0, #4
 800dae2:	079a      	lsls	r2, r3, #30
 800dae4:	bf04      	itt	eq
 800dae6:	089b      	lsreq	r3, r3, #2
 800dae8:	3002      	addeq	r0, #2
 800daea:	07da      	lsls	r2, r3, #31
 800daec:	d403      	bmi.n	800daf6 <__lo0bits+0x4e>
 800daee:	085b      	lsrs	r3, r3, #1
 800daf0:	f100 0001 	add.w	r0, r0, #1
 800daf4:	d005      	beq.n	800db02 <__lo0bits+0x5a>
 800daf6:	600b      	str	r3, [r1, #0]
 800daf8:	4770      	bx	lr
 800dafa:	4610      	mov	r0, r2
 800dafc:	e7e9      	b.n	800dad2 <__lo0bits+0x2a>
 800dafe:	2000      	movs	r0, #0
 800db00:	4770      	bx	lr
 800db02:	2020      	movs	r0, #32
 800db04:	4770      	bx	lr
	...

0800db08 <__i2b>:
 800db08:	b510      	push	{r4, lr}
 800db0a:	460c      	mov	r4, r1
 800db0c:	2101      	movs	r1, #1
 800db0e:	f7ff ff03 	bl	800d918 <_Balloc>
 800db12:	4602      	mov	r2, r0
 800db14:	b928      	cbnz	r0, 800db22 <__i2b+0x1a>
 800db16:	4b05      	ldr	r3, [pc, #20]	; (800db2c <__i2b+0x24>)
 800db18:	4805      	ldr	r0, [pc, #20]	; (800db30 <__i2b+0x28>)
 800db1a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800db1e:	f000 fce1 	bl	800e4e4 <__assert_func>
 800db22:	2301      	movs	r3, #1
 800db24:	6144      	str	r4, [r0, #20]
 800db26:	6103      	str	r3, [r0, #16]
 800db28:	bd10      	pop	{r4, pc}
 800db2a:	bf00      	nop
 800db2c:	0801076f 	.word	0x0801076f
 800db30:	08010780 	.word	0x08010780

0800db34 <__multiply>:
 800db34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db38:	4691      	mov	r9, r2
 800db3a:	690a      	ldr	r2, [r1, #16]
 800db3c:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800db40:	429a      	cmp	r2, r3
 800db42:	bfb8      	it	lt
 800db44:	460b      	movlt	r3, r1
 800db46:	460c      	mov	r4, r1
 800db48:	bfbc      	itt	lt
 800db4a:	464c      	movlt	r4, r9
 800db4c:	4699      	movlt	r9, r3
 800db4e:	6927      	ldr	r7, [r4, #16]
 800db50:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800db54:	68a3      	ldr	r3, [r4, #8]
 800db56:	6861      	ldr	r1, [r4, #4]
 800db58:	eb07 060a 	add.w	r6, r7, sl
 800db5c:	42b3      	cmp	r3, r6
 800db5e:	b085      	sub	sp, #20
 800db60:	bfb8      	it	lt
 800db62:	3101      	addlt	r1, #1
 800db64:	f7ff fed8 	bl	800d918 <_Balloc>
 800db68:	b930      	cbnz	r0, 800db78 <__multiply+0x44>
 800db6a:	4602      	mov	r2, r0
 800db6c:	4b44      	ldr	r3, [pc, #272]	; (800dc80 <__multiply+0x14c>)
 800db6e:	4845      	ldr	r0, [pc, #276]	; (800dc84 <__multiply+0x150>)
 800db70:	f240 115d 	movw	r1, #349	; 0x15d
 800db74:	f000 fcb6 	bl	800e4e4 <__assert_func>
 800db78:	f100 0514 	add.w	r5, r0, #20
 800db7c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800db80:	462b      	mov	r3, r5
 800db82:	2200      	movs	r2, #0
 800db84:	4543      	cmp	r3, r8
 800db86:	d321      	bcc.n	800dbcc <__multiply+0x98>
 800db88:	f104 0314 	add.w	r3, r4, #20
 800db8c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800db90:	f109 0314 	add.w	r3, r9, #20
 800db94:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800db98:	9202      	str	r2, [sp, #8]
 800db9a:	1b3a      	subs	r2, r7, r4
 800db9c:	3a15      	subs	r2, #21
 800db9e:	f022 0203 	bic.w	r2, r2, #3
 800dba2:	3204      	adds	r2, #4
 800dba4:	f104 0115 	add.w	r1, r4, #21
 800dba8:	428f      	cmp	r7, r1
 800dbaa:	bf38      	it	cc
 800dbac:	2204      	movcc	r2, #4
 800dbae:	9201      	str	r2, [sp, #4]
 800dbb0:	9a02      	ldr	r2, [sp, #8]
 800dbb2:	9303      	str	r3, [sp, #12]
 800dbb4:	429a      	cmp	r2, r3
 800dbb6:	d80c      	bhi.n	800dbd2 <__multiply+0x9e>
 800dbb8:	2e00      	cmp	r6, #0
 800dbba:	dd03      	ble.n	800dbc4 <__multiply+0x90>
 800dbbc:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800dbc0:	2b00      	cmp	r3, #0
 800dbc2:	d05a      	beq.n	800dc7a <__multiply+0x146>
 800dbc4:	6106      	str	r6, [r0, #16]
 800dbc6:	b005      	add	sp, #20
 800dbc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dbcc:	f843 2b04 	str.w	r2, [r3], #4
 800dbd0:	e7d8      	b.n	800db84 <__multiply+0x50>
 800dbd2:	f8b3 a000 	ldrh.w	sl, [r3]
 800dbd6:	f1ba 0f00 	cmp.w	sl, #0
 800dbda:	d024      	beq.n	800dc26 <__multiply+0xf2>
 800dbdc:	f104 0e14 	add.w	lr, r4, #20
 800dbe0:	46a9      	mov	r9, r5
 800dbe2:	f04f 0c00 	mov.w	ip, #0
 800dbe6:	f85e 2b04 	ldr.w	r2, [lr], #4
 800dbea:	f8d9 1000 	ldr.w	r1, [r9]
 800dbee:	fa1f fb82 	uxth.w	fp, r2
 800dbf2:	b289      	uxth	r1, r1
 800dbf4:	fb0a 110b 	mla	r1, sl, fp, r1
 800dbf8:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800dbfc:	f8d9 2000 	ldr.w	r2, [r9]
 800dc00:	4461      	add	r1, ip
 800dc02:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800dc06:	fb0a c20b 	mla	r2, sl, fp, ip
 800dc0a:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800dc0e:	b289      	uxth	r1, r1
 800dc10:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800dc14:	4577      	cmp	r7, lr
 800dc16:	f849 1b04 	str.w	r1, [r9], #4
 800dc1a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800dc1e:	d8e2      	bhi.n	800dbe6 <__multiply+0xb2>
 800dc20:	9a01      	ldr	r2, [sp, #4]
 800dc22:	f845 c002 	str.w	ip, [r5, r2]
 800dc26:	9a03      	ldr	r2, [sp, #12]
 800dc28:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800dc2c:	3304      	adds	r3, #4
 800dc2e:	f1b9 0f00 	cmp.w	r9, #0
 800dc32:	d020      	beq.n	800dc76 <__multiply+0x142>
 800dc34:	6829      	ldr	r1, [r5, #0]
 800dc36:	f104 0c14 	add.w	ip, r4, #20
 800dc3a:	46ae      	mov	lr, r5
 800dc3c:	f04f 0a00 	mov.w	sl, #0
 800dc40:	f8bc b000 	ldrh.w	fp, [ip]
 800dc44:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800dc48:	fb09 220b 	mla	r2, r9, fp, r2
 800dc4c:	4492      	add	sl, r2
 800dc4e:	b289      	uxth	r1, r1
 800dc50:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800dc54:	f84e 1b04 	str.w	r1, [lr], #4
 800dc58:	f85c 2b04 	ldr.w	r2, [ip], #4
 800dc5c:	f8be 1000 	ldrh.w	r1, [lr]
 800dc60:	0c12      	lsrs	r2, r2, #16
 800dc62:	fb09 1102 	mla	r1, r9, r2, r1
 800dc66:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800dc6a:	4567      	cmp	r7, ip
 800dc6c:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800dc70:	d8e6      	bhi.n	800dc40 <__multiply+0x10c>
 800dc72:	9a01      	ldr	r2, [sp, #4]
 800dc74:	50a9      	str	r1, [r5, r2]
 800dc76:	3504      	adds	r5, #4
 800dc78:	e79a      	b.n	800dbb0 <__multiply+0x7c>
 800dc7a:	3e01      	subs	r6, #1
 800dc7c:	e79c      	b.n	800dbb8 <__multiply+0x84>
 800dc7e:	bf00      	nop
 800dc80:	0801076f 	.word	0x0801076f
 800dc84:	08010780 	.word	0x08010780

0800dc88 <__pow5mult>:
 800dc88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dc8c:	4615      	mov	r5, r2
 800dc8e:	f012 0203 	ands.w	r2, r2, #3
 800dc92:	4606      	mov	r6, r0
 800dc94:	460f      	mov	r7, r1
 800dc96:	d007      	beq.n	800dca8 <__pow5mult+0x20>
 800dc98:	4c25      	ldr	r4, [pc, #148]	; (800dd30 <__pow5mult+0xa8>)
 800dc9a:	3a01      	subs	r2, #1
 800dc9c:	2300      	movs	r3, #0
 800dc9e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800dca2:	f7ff fe9b 	bl	800d9dc <__multadd>
 800dca6:	4607      	mov	r7, r0
 800dca8:	10ad      	asrs	r5, r5, #2
 800dcaa:	d03d      	beq.n	800dd28 <__pow5mult+0xa0>
 800dcac:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800dcae:	b97c      	cbnz	r4, 800dcd0 <__pow5mult+0x48>
 800dcb0:	2010      	movs	r0, #16
 800dcb2:	f7ff fe1b 	bl	800d8ec <malloc>
 800dcb6:	4602      	mov	r2, r0
 800dcb8:	6270      	str	r0, [r6, #36]	; 0x24
 800dcba:	b928      	cbnz	r0, 800dcc8 <__pow5mult+0x40>
 800dcbc:	4b1d      	ldr	r3, [pc, #116]	; (800dd34 <__pow5mult+0xac>)
 800dcbe:	481e      	ldr	r0, [pc, #120]	; (800dd38 <__pow5mult+0xb0>)
 800dcc0:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800dcc4:	f000 fc0e 	bl	800e4e4 <__assert_func>
 800dcc8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800dccc:	6004      	str	r4, [r0, #0]
 800dcce:	60c4      	str	r4, [r0, #12]
 800dcd0:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800dcd4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800dcd8:	b94c      	cbnz	r4, 800dcee <__pow5mult+0x66>
 800dcda:	f240 2171 	movw	r1, #625	; 0x271
 800dcde:	4630      	mov	r0, r6
 800dce0:	f7ff ff12 	bl	800db08 <__i2b>
 800dce4:	2300      	movs	r3, #0
 800dce6:	f8c8 0008 	str.w	r0, [r8, #8]
 800dcea:	4604      	mov	r4, r0
 800dcec:	6003      	str	r3, [r0, #0]
 800dcee:	f04f 0900 	mov.w	r9, #0
 800dcf2:	07eb      	lsls	r3, r5, #31
 800dcf4:	d50a      	bpl.n	800dd0c <__pow5mult+0x84>
 800dcf6:	4639      	mov	r1, r7
 800dcf8:	4622      	mov	r2, r4
 800dcfa:	4630      	mov	r0, r6
 800dcfc:	f7ff ff1a 	bl	800db34 <__multiply>
 800dd00:	4639      	mov	r1, r7
 800dd02:	4680      	mov	r8, r0
 800dd04:	4630      	mov	r0, r6
 800dd06:	f7ff fe47 	bl	800d998 <_Bfree>
 800dd0a:	4647      	mov	r7, r8
 800dd0c:	106d      	asrs	r5, r5, #1
 800dd0e:	d00b      	beq.n	800dd28 <__pow5mult+0xa0>
 800dd10:	6820      	ldr	r0, [r4, #0]
 800dd12:	b938      	cbnz	r0, 800dd24 <__pow5mult+0x9c>
 800dd14:	4622      	mov	r2, r4
 800dd16:	4621      	mov	r1, r4
 800dd18:	4630      	mov	r0, r6
 800dd1a:	f7ff ff0b 	bl	800db34 <__multiply>
 800dd1e:	6020      	str	r0, [r4, #0]
 800dd20:	f8c0 9000 	str.w	r9, [r0]
 800dd24:	4604      	mov	r4, r0
 800dd26:	e7e4      	b.n	800dcf2 <__pow5mult+0x6a>
 800dd28:	4638      	mov	r0, r7
 800dd2a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800dd2e:	bf00      	nop
 800dd30:	080108d0 	.word	0x080108d0
 800dd34:	080106fd 	.word	0x080106fd
 800dd38:	08010780 	.word	0x08010780

0800dd3c <__lshift>:
 800dd3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dd40:	460c      	mov	r4, r1
 800dd42:	6849      	ldr	r1, [r1, #4]
 800dd44:	6923      	ldr	r3, [r4, #16]
 800dd46:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800dd4a:	68a3      	ldr	r3, [r4, #8]
 800dd4c:	4607      	mov	r7, r0
 800dd4e:	4691      	mov	r9, r2
 800dd50:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800dd54:	f108 0601 	add.w	r6, r8, #1
 800dd58:	42b3      	cmp	r3, r6
 800dd5a:	db0b      	blt.n	800dd74 <__lshift+0x38>
 800dd5c:	4638      	mov	r0, r7
 800dd5e:	f7ff fddb 	bl	800d918 <_Balloc>
 800dd62:	4605      	mov	r5, r0
 800dd64:	b948      	cbnz	r0, 800dd7a <__lshift+0x3e>
 800dd66:	4602      	mov	r2, r0
 800dd68:	4b2a      	ldr	r3, [pc, #168]	; (800de14 <__lshift+0xd8>)
 800dd6a:	482b      	ldr	r0, [pc, #172]	; (800de18 <__lshift+0xdc>)
 800dd6c:	f240 11d9 	movw	r1, #473	; 0x1d9
 800dd70:	f000 fbb8 	bl	800e4e4 <__assert_func>
 800dd74:	3101      	adds	r1, #1
 800dd76:	005b      	lsls	r3, r3, #1
 800dd78:	e7ee      	b.n	800dd58 <__lshift+0x1c>
 800dd7a:	2300      	movs	r3, #0
 800dd7c:	f100 0114 	add.w	r1, r0, #20
 800dd80:	f100 0210 	add.w	r2, r0, #16
 800dd84:	4618      	mov	r0, r3
 800dd86:	4553      	cmp	r3, sl
 800dd88:	db37      	blt.n	800ddfa <__lshift+0xbe>
 800dd8a:	6920      	ldr	r0, [r4, #16]
 800dd8c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800dd90:	f104 0314 	add.w	r3, r4, #20
 800dd94:	f019 091f 	ands.w	r9, r9, #31
 800dd98:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800dd9c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800dda0:	d02f      	beq.n	800de02 <__lshift+0xc6>
 800dda2:	f1c9 0e20 	rsb	lr, r9, #32
 800dda6:	468a      	mov	sl, r1
 800dda8:	f04f 0c00 	mov.w	ip, #0
 800ddac:	681a      	ldr	r2, [r3, #0]
 800ddae:	fa02 f209 	lsl.w	r2, r2, r9
 800ddb2:	ea42 020c 	orr.w	r2, r2, ip
 800ddb6:	f84a 2b04 	str.w	r2, [sl], #4
 800ddba:	f853 2b04 	ldr.w	r2, [r3], #4
 800ddbe:	4298      	cmp	r0, r3
 800ddc0:	fa22 fc0e 	lsr.w	ip, r2, lr
 800ddc4:	d8f2      	bhi.n	800ddac <__lshift+0x70>
 800ddc6:	1b03      	subs	r3, r0, r4
 800ddc8:	3b15      	subs	r3, #21
 800ddca:	f023 0303 	bic.w	r3, r3, #3
 800ddce:	3304      	adds	r3, #4
 800ddd0:	f104 0215 	add.w	r2, r4, #21
 800ddd4:	4290      	cmp	r0, r2
 800ddd6:	bf38      	it	cc
 800ddd8:	2304      	movcc	r3, #4
 800ddda:	f841 c003 	str.w	ip, [r1, r3]
 800ddde:	f1bc 0f00 	cmp.w	ip, #0
 800dde2:	d001      	beq.n	800dde8 <__lshift+0xac>
 800dde4:	f108 0602 	add.w	r6, r8, #2
 800dde8:	3e01      	subs	r6, #1
 800ddea:	4638      	mov	r0, r7
 800ddec:	612e      	str	r6, [r5, #16]
 800ddee:	4621      	mov	r1, r4
 800ddf0:	f7ff fdd2 	bl	800d998 <_Bfree>
 800ddf4:	4628      	mov	r0, r5
 800ddf6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ddfa:	f842 0f04 	str.w	r0, [r2, #4]!
 800ddfe:	3301      	adds	r3, #1
 800de00:	e7c1      	b.n	800dd86 <__lshift+0x4a>
 800de02:	3904      	subs	r1, #4
 800de04:	f853 2b04 	ldr.w	r2, [r3], #4
 800de08:	f841 2f04 	str.w	r2, [r1, #4]!
 800de0c:	4298      	cmp	r0, r3
 800de0e:	d8f9      	bhi.n	800de04 <__lshift+0xc8>
 800de10:	e7ea      	b.n	800dde8 <__lshift+0xac>
 800de12:	bf00      	nop
 800de14:	0801076f 	.word	0x0801076f
 800de18:	08010780 	.word	0x08010780

0800de1c <__mcmp>:
 800de1c:	b530      	push	{r4, r5, lr}
 800de1e:	6902      	ldr	r2, [r0, #16]
 800de20:	690c      	ldr	r4, [r1, #16]
 800de22:	1b12      	subs	r2, r2, r4
 800de24:	d10e      	bne.n	800de44 <__mcmp+0x28>
 800de26:	f100 0314 	add.w	r3, r0, #20
 800de2a:	3114      	adds	r1, #20
 800de2c:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800de30:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800de34:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800de38:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800de3c:	42a5      	cmp	r5, r4
 800de3e:	d003      	beq.n	800de48 <__mcmp+0x2c>
 800de40:	d305      	bcc.n	800de4e <__mcmp+0x32>
 800de42:	2201      	movs	r2, #1
 800de44:	4610      	mov	r0, r2
 800de46:	bd30      	pop	{r4, r5, pc}
 800de48:	4283      	cmp	r3, r0
 800de4a:	d3f3      	bcc.n	800de34 <__mcmp+0x18>
 800de4c:	e7fa      	b.n	800de44 <__mcmp+0x28>
 800de4e:	f04f 32ff 	mov.w	r2, #4294967295
 800de52:	e7f7      	b.n	800de44 <__mcmp+0x28>

0800de54 <__mdiff>:
 800de54:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de58:	460c      	mov	r4, r1
 800de5a:	4606      	mov	r6, r0
 800de5c:	4611      	mov	r1, r2
 800de5e:	4620      	mov	r0, r4
 800de60:	4690      	mov	r8, r2
 800de62:	f7ff ffdb 	bl	800de1c <__mcmp>
 800de66:	1e05      	subs	r5, r0, #0
 800de68:	d110      	bne.n	800de8c <__mdiff+0x38>
 800de6a:	4629      	mov	r1, r5
 800de6c:	4630      	mov	r0, r6
 800de6e:	f7ff fd53 	bl	800d918 <_Balloc>
 800de72:	b930      	cbnz	r0, 800de82 <__mdiff+0x2e>
 800de74:	4b3a      	ldr	r3, [pc, #232]	; (800df60 <__mdiff+0x10c>)
 800de76:	4602      	mov	r2, r0
 800de78:	f240 2132 	movw	r1, #562	; 0x232
 800de7c:	4839      	ldr	r0, [pc, #228]	; (800df64 <__mdiff+0x110>)
 800de7e:	f000 fb31 	bl	800e4e4 <__assert_func>
 800de82:	2301      	movs	r3, #1
 800de84:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800de88:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800de8c:	bfa4      	itt	ge
 800de8e:	4643      	movge	r3, r8
 800de90:	46a0      	movge	r8, r4
 800de92:	4630      	mov	r0, r6
 800de94:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800de98:	bfa6      	itte	ge
 800de9a:	461c      	movge	r4, r3
 800de9c:	2500      	movge	r5, #0
 800de9e:	2501      	movlt	r5, #1
 800dea0:	f7ff fd3a 	bl	800d918 <_Balloc>
 800dea4:	b920      	cbnz	r0, 800deb0 <__mdiff+0x5c>
 800dea6:	4b2e      	ldr	r3, [pc, #184]	; (800df60 <__mdiff+0x10c>)
 800dea8:	4602      	mov	r2, r0
 800deaa:	f44f 7110 	mov.w	r1, #576	; 0x240
 800deae:	e7e5      	b.n	800de7c <__mdiff+0x28>
 800deb0:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800deb4:	6926      	ldr	r6, [r4, #16]
 800deb6:	60c5      	str	r5, [r0, #12]
 800deb8:	f104 0914 	add.w	r9, r4, #20
 800debc:	f108 0514 	add.w	r5, r8, #20
 800dec0:	f100 0e14 	add.w	lr, r0, #20
 800dec4:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800dec8:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800decc:	f108 0210 	add.w	r2, r8, #16
 800ded0:	46f2      	mov	sl, lr
 800ded2:	2100      	movs	r1, #0
 800ded4:	f859 3b04 	ldr.w	r3, [r9], #4
 800ded8:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800dedc:	fa1f f883 	uxth.w	r8, r3
 800dee0:	fa11 f18b 	uxtah	r1, r1, fp
 800dee4:	0c1b      	lsrs	r3, r3, #16
 800dee6:	eba1 0808 	sub.w	r8, r1, r8
 800deea:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800deee:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800def2:	fa1f f888 	uxth.w	r8, r8
 800def6:	1419      	asrs	r1, r3, #16
 800def8:	454e      	cmp	r6, r9
 800defa:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800defe:	f84a 3b04 	str.w	r3, [sl], #4
 800df02:	d8e7      	bhi.n	800ded4 <__mdiff+0x80>
 800df04:	1b33      	subs	r3, r6, r4
 800df06:	3b15      	subs	r3, #21
 800df08:	f023 0303 	bic.w	r3, r3, #3
 800df0c:	3304      	adds	r3, #4
 800df0e:	3415      	adds	r4, #21
 800df10:	42a6      	cmp	r6, r4
 800df12:	bf38      	it	cc
 800df14:	2304      	movcc	r3, #4
 800df16:	441d      	add	r5, r3
 800df18:	4473      	add	r3, lr
 800df1a:	469e      	mov	lr, r3
 800df1c:	462e      	mov	r6, r5
 800df1e:	4566      	cmp	r6, ip
 800df20:	d30e      	bcc.n	800df40 <__mdiff+0xec>
 800df22:	f10c 0203 	add.w	r2, ip, #3
 800df26:	1b52      	subs	r2, r2, r5
 800df28:	f022 0203 	bic.w	r2, r2, #3
 800df2c:	3d03      	subs	r5, #3
 800df2e:	45ac      	cmp	ip, r5
 800df30:	bf38      	it	cc
 800df32:	2200      	movcc	r2, #0
 800df34:	441a      	add	r2, r3
 800df36:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800df3a:	b17b      	cbz	r3, 800df5c <__mdiff+0x108>
 800df3c:	6107      	str	r7, [r0, #16]
 800df3e:	e7a3      	b.n	800de88 <__mdiff+0x34>
 800df40:	f856 8b04 	ldr.w	r8, [r6], #4
 800df44:	fa11 f288 	uxtah	r2, r1, r8
 800df48:	1414      	asrs	r4, r2, #16
 800df4a:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800df4e:	b292      	uxth	r2, r2
 800df50:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800df54:	f84e 2b04 	str.w	r2, [lr], #4
 800df58:	1421      	asrs	r1, r4, #16
 800df5a:	e7e0      	b.n	800df1e <__mdiff+0xca>
 800df5c:	3f01      	subs	r7, #1
 800df5e:	e7ea      	b.n	800df36 <__mdiff+0xe2>
 800df60:	0801076f 	.word	0x0801076f
 800df64:	08010780 	.word	0x08010780

0800df68 <__d2b>:
 800df68:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800df6c:	4689      	mov	r9, r1
 800df6e:	2101      	movs	r1, #1
 800df70:	ec57 6b10 	vmov	r6, r7, d0
 800df74:	4690      	mov	r8, r2
 800df76:	f7ff fccf 	bl	800d918 <_Balloc>
 800df7a:	4604      	mov	r4, r0
 800df7c:	b930      	cbnz	r0, 800df8c <__d2b+0x24>
 800df7e:	4602      	mov	r2, r0
 800df80:	4b25      	ldr	r3, [pc, #148]	; (800e018 <__d2b+0xb0>)
 800df82:	4826      	ldr	r0, [pc, #152]	; (800e01c <__d2b+0xb4>)
 800df84:	f240 310a 	movw	r1, #778	; 0x30a
 800df88:	f000 faac 	bl	800e4e4 <__assert_func>
 800df8c:	f3c7 550a 	ubfx	r5, r7, #20, #11
 800df90:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800df94:	bb35      	cbnz	r5, 800dfe4 <__d2b+0x7c>
 800df96:	2e00      	cmp	r6, #0
 800df98:	9301      	str	r3, [sp, #4]
 800df9a:	d028      	beq.n	800dfee <__d2b+0x86>
 800df9c:	4668      	mov	r0, sp
 800df9e:	9600      	str	r6, [sp, #0]
 800dfa0:	f7ff fd82 	bl	800daa8 <__lo0bits>
 800dfa4:	9900      	ldr	r1, [sp, #0]
 800dfa6:	b300      	cbz	r0, 800dfea <__d2b+0x82>
 800dfa8:	9a01      	ldr	r2, [sp, #4]
 800dfaa:	f1c0 0320 	rsb	r3, r0, #32
 800dfae:	fa02 f303 	lsl.w	r3, r2, r3
 800dfb2:	430b      	orrs	r3, r1
 800dfb4:	40c2      	lsrs	r2, r0
 800dfb6:	6163      	str	r3, [r4, #20]
 800dfb8:	9201      	str	r2, [sp, #4]
 800dfba:	9b01      	ldr	r3, [sp, #4]
 800dfbc:	61a3      	str	r3, [r4, #24]
 800dfbe:	2b00      	cmp	r3, #0
 800dfc0:	bf14      	ite	ne
 800dfc2:	2202      	movne	r2, #2
 800dfc4:	2201      	moveq	r2, #1
 800dfc6:	6122      	str	r2, [r4, #16]
 800dfc8:	b1d5      	cbz	r5, 800e000 <__d2b+0x98>
 800dfca:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800dfce:	4405      	add	r5, r0
 800dfd0:	f8c9 5000 	str.w	r5, [r9]
 800dfd4:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800dfd8:	f8c8 0000 	str.w	r0, [r8]
 800dfdc:	4620      	mov	r0, r4
 800dfde:	b003      	add	sp, #12
 800dfe0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dfe4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800dfe8:	e7d5      	b.n	800df96 <__d2b+0x2e>
 800dfea:	6161      	str	r1, [r4, #20]
 800dfec:	e7e5      	b.n	800dfba <__d2b+0x52>
 800dfee:	a801      	add	r0, sp, #4
 800dff0:	f7ff fd5a 	bl	800daa8 <__lo0bits>
 800dff4:	9b01      	ldr	r3, [sp, #4]
 800dff6:	6163      	str	r3, [r4, #20]
 800dff8:	2201      	movs	r2, #1
 800dffa:	6122      	str	r2, [r4, #16]
 800dffc:	3020      	adds	r0, #32
 800dffe:	e7e3      	b.n	800dfc8 <__d2b+0x60>
 800e000:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800e004:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800e008:	f8c9 0000 	str.w	r0, [r9]
 800e00c:	6918      	ldr	r0, [r3, #16]
 800e00e:	f7ff fd2b 	bl	800da68 <__hi0bits>
 800e012:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800e016:	e7df      	b.n	800dfd8 <__d2b+0x70>
 800e018:	0801076f 	.word	0x0801076f
 800e01c:	08010780 	.word	0x08010780

0800e020 <_calloc_r>:
 800e020:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e022:	fba1 2402 	umull	r2, r4, r1, r2
 800e026:	b94c      	cbnz	r4, 800e03c <_calloc_r+0x1c>
 800e028:	4611      	mov	r1, r2
 800e02a:	9201      	str	r2, [sp, #4]
 800e02c:	f000 f87a 	bl	800e124 <_malloc_r>
 800e030:	9a01      	ldr	r2, [sp, #4]
 800e032:	4605      	mov	r5, r0
 800e034:	b930      	cbnz	r0, 800e044 <_calloc_r+0x24>
 800e036:	4628      	mov	r0, r5
 800e038:	b003      	add	sp, #12
 800e03a:	bd30      	pop	{r4, r5, pc}
 800e03c:	220c      	movs	r2, #12
 800e03e:	6002      	str	r2, [r0, #0]
 800e040:	2500      	movs	r5, #0
 800e042:	e7f8      	b.n	800e036 <_calloc_r+0x16>
 800e044:	4621      	mov	r1, r4
 800e046:	f7fe f941 	bl	800c2cc <memset>
 800e04a:	e7f4      	b.n	800e036 <_calloc_r+0x16>

0800e04c <_free_r>:
 800e04c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e04e:	2900      	cmp	r1, #0
 800e050:	d044      	beq.n	800e0dc <_free_r+0x90>
 800e052:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800e056:	9001      	str	r0, [sp, #4]
 800e058:	2b00      	cmp	r3, #0
 800e05a:	f1a1 0404 	sub.w	r4, r1, #4
 800e05e:	bfb8      	it	lt
 800e060:	18e4      	addlt	r4, r4, r3
 800e062:	f000 fa9b 	bl	800e59c <__malloc_lock>
 800e066:	4a1e      	ldr	r2, [pc, #120]	; (800e0e0 <_free_r+0x94>)
 800e068:	9801      	ldr	r0, [sp, #4]
 800e06a:	6813      	ldr	r3, [r2, #0]
 800e06c:	b933      	cbnz	r3, 800e07c <_free_r+0x30>
 800e06e:	6063      	str	r3, [r4, #4]
 800e070:	6014      	str	r4, [r2, #0]
 800e072:	b003      	add	sp, #12
 800e074:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800e078:	f000 ba96 	b.w	800e5a8 <__malloc_unlock>
 800e07c:	42a3      	cmp	r3, r4
 800e07e:	d908      	bls.n	800e092 <_free_r+0x46>
 800e080:	6825      	ldr	r5, [r4, #0]
 800e082:	1961      	adds	r1, r4, r5
 800e084:	428b      	cmp	r3, r1
 800e086:	bf01      	itttt	eq
 800e088:	6819      	ldreq	r1, [r3, #0]
 800e08a:	685b      	ldreq	r3, [r3, #4]
 800e08c:	1949      	addeq	r1, r1, r5
 800e08e:	6021      	streq	r1, [r4, #0]
 800e090:	e7ed      	b.n	800e06e <_free_r+0x22>
 800e092:	461a      	mov	r2, r3
 800e094:	685b      	ldr	r3, [r3, #4]
 800e096:	b10b      	cbz	r3, 800e09c <_free_r+0x50>
 800e098:	42a3      	cmp	r3, r4
 800e09a:	d9fa      	bls.n	800e092 <_free_r+0x46>
 800e09c:	6811      	ldr	r1, [r2, #0]
 800e09e:	1855      	adds	r5, r2, r1
 800e0a0:	42a5      	cmp	r5, r4
 800e0a2:	d10b      	bne.n	800e0bc <_free_r+0x70>
 800e0a4:	6824      	ldr	r4, [r4, #0]
 800e0a6:	4421      	add	r1, r4
 800e0a8:	1854      	adds	r4, r2, r1
 800e0aa:	42a3      	cmp	r3, r4
 800e0ac:	6011      	str	r1, [r2, #0]
 800e0ae:	d1e0      	bne.n	800e072 <_free_r+0x26>
 800e0b0:	681c      	ldr	r4, [r3, #0]
 800e0b2:	685b      	ldr	r3, [r3, #4]
 800e0b4:	6053      	str	r3, [r2, #4]
 800e0b6:	4421      	add	r1, r4
 800e0b8:	6011      	str	r1, [r2, #0]
 800e0ba:	e7da      	b.n	800e072 <_free_r+0x26>
 800e0bc:	d902      	bls.n	800e0c4 <_free_r+0x78>
 800e0be:	230c      	movs	r3, #12
 800e0c0:	6003      	str	r3, [r0, #0]
 800e0c2:	e7d6      	b.n	800e072 <_free_r+0x26>
 800e0c4:	6825      	ldr	r5, [r4, #0]
 800e0c6:	1961      	adds	r1, r4, r5
 800e0c8:	428b      	cmp	r3, r1
 800e0ca:	bf04      	itt	eq
 800e0cc:	6819      	ldreq	r1, [r3, #0]
 800e0ce:	685b      	ldreq	r3, [r3, #4]
 800e0d0:	6063      	str	r3, [r4, #4]
 800e0d2:	bf04      	itt	eq
 800e0d4:	1949      	addeq	r1, r1, r5
 800e0d6:	6021      	streq	r1, [r4, #0]
 800e0d8:	6054      	str	r4, [r2, #4]
 800e0da:	e7ca      	b.n	800e072 <_free_r+0x26>
 800e0dc:	b003      	add	sp, #12
 800e0de:	bd30      	pop	{r4, r5, pc}
 800e0e0:	20000b9c 	.word	0x20000b9c

0800e0e4 <sbrk_aligned>:
 800e0e4:	b570      	push	{r4, r5, r6, lr}
 800e0e6:	4e0e      	ldr	r6, [pc, #56]	; (800e120 <sbrk_aligned+0x3c>)
 800e0e8:	460c      	mov	r4, r1
 800e0ea:	6831      	ldr	r1, [r6, #0]
 800e0ec:	4605      	mov	r5, r0
 800e0ee:	b911      	cbnz	r1, 800e0f6 <sbrk_aligned+0x12>
 800e0f0:	f000 f9e8 	bl	800e4c4 <_sbrk_r>
 800e0f4:	6030      	str	r0, [r6, #0]
 800e0f6:	4621      	mov	r1, r4
 800e0f8:	4628      	mov	r0, r5
 800e0fa:	f000 f9e3 	bl	800e4c4 <_sbrk_r>
 800e0fe:	1c43      	adds	r3, r0, #1
 800e100:	d00a      	beq.n	800e118 <sbrk_aligned+0x34>
 800e102:	1cc4      	adds	r4, r0, #3
 800e104:	f024 0403 	bic.w	r4, r4, #3
 800e108:	42a0      	cmp	r0, r4
 800e10a:	d007      	beq.n	800e11c <sbrk_aligned+0x38>
 800e10c:	1a21      	subs	r1, r4, r0
 800e10e:	4628      	mov	r0, r5
 800e110:	f000 f9d8 	bl	800e4c4 <_sbrk_r>
 800e114:	3001      	adds	r0, #1
 800e116:	d101      	bne.n	800e11c <sbrk_aligned+0x38>
 800e118:	f04f 34ff 	mov.w	r4, #4294967295
 800e11c:	4620      	mov	r0, r4
 800e11e:	bd70      	pop	{r4, r5, r6, pc}
 800e120:	20000ba0 	.word	0x20000ba0

0800e124 <_malloc_r>:
 800e124:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e128:	1ccd      	adds	r5, r1, #3
 800e12a:	f025 0503 	bic.w	r5, r5, #3
 800e12e:	3508      	adds	r5, #8
 800e130:	2d0c      	cmp	r5, #12
 800e132:	bf38      	it	cc
 800e134:	250c      	movcc	r5, #12
 800e136:	2d00      	cmp	r5, #0
 800e138:	4607      	mov	r7, r0
 800e13a:	db01      	blt.n	800e140 <_malloc_r+0x1c>
 800e13c:	42a9      	cmp	r1, r5
 800e13e:	d905      	bls.n	800e14c <_malloc_r+0x28>
 800e140:	230c      	movs	r3, #12
 800e142:	603b      	str	r3, [r7, #0]
 800e144:	2600      	movs	r6, #0
 800e146:	4630      	mov	r0, r6
 800e148:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e14c:	4e2e      	ldr	r6, [pc, #184]	; (800e208 <_malloc_r+0xe4>)
 800e14e:	f000 fa25 	bl	800e59c <__malloc_lock>
 800e152:	6833      	ldr	r3, [r6, #0]
 800e154:	461c      	mov	r4, r3
 800e156:	bb34      	cbnz	r4, 800e1a6 <_malloc_r+0x82>
 800e158:	4629      	mov	r1, r5
 800e15a:	4638      	mov	r0, r7
 800e15c:	f7ff ffc2 	bl	800e0e4 <sbrk_aligned>
 800e160:	1c43      	adds	r3, r0, #1
 800e162:	4604      	mov	r4, r0
 800e164:	d14d      	bne.n	800e202 <_malloc_r+0xde>
 800e166:	6834      	ldr	r4, [r6, #0]
 800e168:	4626      	mov	r6, r4
 800e16a:	2e00      	cmp	r6, #0
 800e16c:	d140      	bne.n	800e1f0 <_malloc_r+0xcc>
 800e16e:	6823      	ldr	r3, [r4, #0]
 800e170:	4631      	mov	r1, r6
 800e172:	4638      	mov	r0, r7
 800e174:	eb04 0803 	add.w	r8, r4, r3
 800e178:	f000 f9a4 	bl	800e4c4 <_sbrk_r>
 800e17c:	4580      	cmp	r8, r0
 800e17e:	d13a      	bne.n	800e1f6 <_malloc_r+0xd2>
 800e180:	6821      	ldr	r1, [r4, #0]
 800e182:	3503      	adds	r5, #3
 800e184:	1a6d      	subs	r5, r5, r1
 800e186:	f025 0503 	bic.w	r5, r5, #3
 800e18a:	3508      	adds	r5, #8
 800e18c:	2d0c      	cmp	r5, #12
 800e18e:	bf38      	it	cc
 800e190:	250c      	movcc	r5, #12
 800e192:	4629      	mov	r1, r5
 800e194:	4638      	mov	r0, r7
 800e196:	f7ff ffa5 	bl	800e0e4 <sbrk_aligned>
 800e19a:	3001      	adds	r0, #1
 800e19c:	d02b      	beq.n	800e1f6 <_malloc_r+0xd2>
 800e19e:	6823      	ldr	r3, [r4, #0]
 800e1a0:	442b      	add	r3, r5
 800e1a2:	6023      	str	r3, [r4, #0]
 800e1a4:	e00e      	b.n	800e1c4 <_malloc_r+0xa0>
 800e1a6:	6822      	ldr	r2, [r4, #0]
 800e1a8:	1b52      	subs	r2, r2, r5
 800e1aa:	d41e      	bmi.n	800e1ea <_malloc_r+0xc6>
 800e1ac:	2a0b      	cmp	r2, #11
 800e1ae:	d916      	bls.n	800e1de <_malloc_r+0xba>
 800e1b0:	1961      	adds	r1, r4, r5
 800e1b2:	42a3      	cmp	r3, r4
 800e1b4:	6025      	str	r5, [r4, #0]
 800e1b6:	bf18      	it	ne
 800e1b8:	6059      	strne	r1, [r3, #4]
 800e1ba:	6863      	ldr	r3, [r4, #4]
 800e1bc:	bf08      	it	eq
 800e1be:	6031      	streq	r1, [r6, #0]
 800e1c0:	5162      	str	r2, [r4, r5]
 800e1c2:	604b      	str	r3, [r1, #4]
 800e1c4:	4638      	mov	r0, r7
 800e1c6:	f104 060b 	add.w	r6, r4, #11
 800e1ca:	f000 f9ed 	bl	800e5a8 <__malloc_unlock>
 800e1ce:	f026 0607 	bic.w	r6, r6, #7
 800e1d2:	1d23      	adds	r3, r4, #4
 800e1d4:	1af2      	subs	r2, r6, r3
 800e1d6:	d0b6      	beq.n	800e146 <_malloc_r+0x22>
 800e1d8:	1b9b      	subs	r3, r3, r6
 800e1da:	50a3      	str	r3, [r4, r2]
 800e1dc:	e7b3      	b.n	800e146 <_malloc_r+0x22>
 800e1de:	6862      	ldr	r2, [r4, #4]
 800e1e0:	42a3      	cmp	r3, r4
 800e1e2:	bf0c      	ite	eq
 800e1e4:	6032      	streq	r2, [r6, #0]
 800e1e6:	605a      	strne	r2, [r3, #4]
 800e1e8:	e7ec      	b.n	800e1c4 <_malloc_r+0xa0>
 800e1ea:	4623      	mov	r3, r4
 800e1ec:	6864      	ldr	r4, [r4, #4]
 800e1ee:	e7b2      	b.n	800e156 <_malloc_r+0x32>
 800e1f0:	4634      	mov	r4, r6
 800e1f2:	6876      	ldr	r6, [r6, #4]
 800e1f4:	e7b9      	b.n	800e16a <_malloc_r+0x46>
 800e1f6:	230c      	movs	r3, #12
 800e1f8:	603b      	str	r3, [r7, #0]
 800e1fa:	4638      	mov	r0, r7
 800e1fc:	f000 f9d4 	bl	800e5a8 <__malloc_unlock>
 800e200:	e7a1      	b.n	800e146 <_malloc_r+0x22>
 800e202:	6025      	str	r5, [r4, #0]
 800e204:	e7de      	b.n	800e1c4 <_malloc_r+0xa0>
 800e206:	bf00      	nop
 800e208:	20000b9c 	.word	0x20000b9c

0800e20c <__ssputs_r>:
 800e20c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e210:	688e      	ldr	r6, [r1, #8]
 800e212:	429e      	cmp	r6, r3
 800e214:	4682      	mov	sl, r0
 800e216:	460c      	mov	r4, r1
 800e218:	4690      	mov	r8, r2
 800e21a:	461f      	mov	r7, r3
 800e21c:	d838      	bhi.n	800e290 <__ssputs_r+0x84>
 800e21e:	898a      	ldrh	r2, [r1, #12]
 800e220:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800e224:	d032      	beq.n	800e28c <__ssputs_r+0x80>
 800e226:	6825      	ldr	r5, [r4, #0]
 800e228:	6909      	ldr	r1, [r1, #16]
 800e22a:	eba5 0901 	sub.w	r9, r5, r1
 800e22e:	6965      	ldr	r5, [r4, #20]
 800e230:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800e234:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800e238:	3301      	adds	r3, #1
 800e23a:	444b      	add	r3, r9
 800e23c:	106d      	asrs	r5, r5, #1
 800e23e:	429d      	cmp	r5, r3
 800e240:	bf38      	it	cc
 800e242:	461d      	movcc	r5, r3
 800e244:	0553      	lsls	r3, r2, #21
 800e246:	d531      	bpl.n	800e2ac <__ssputs_r+0xa0>
 800e248:	4629      	mov	r1, r5
 800e24a:	f7ff ff6b 	bl	800e124 <_malloc_r>
 800e24e:	4606      	mov	r6, r0
 800e250:	b950      	cbnz	r0, 800e268 <__ssputs_r+0x5c>
 800e252:	230c      	movs	r3, #12
 800e254:	f8ca 3000 	str.w	r3, [sl]
 800e258:	89a3      	ldrh	r3, [r4, #12]
 800e25a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e25e:	81a3      	strh	r3, [r4, #12]
 800e260:	f04f 30ff 	mov.w	r0, #4294967295
 800e264:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e268:	6921      	ldr	r1, [r4, #16]
 800e26a:	464a      	mov	r2, r9
 800e26c:	f7ff fb46 	bl	800d8fc <memcpy>
 800e270:	89a3      	ldrh	r3, [r4, #12]
 800e272:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800e276:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800e27a:	81a3      	strh	r3, [r4, #12]
 800e27c:	6126      	str	r6, [r4, #16]
 800e27e:	6165      	str	r5, [r4, #20]
 800e280:	444e      	add	r6, r9
 800e282:	eba5 0509 	sub.w	r5, r5, r9
 800e286:	6026      	str	r6, [r4, #0]
 800e288:	60a5      	str	r5, [r4, #8]
 800e28a:	463e      	mov	r6, r7
 800e28c:	42be      	cmp	r6, r7
 800e28e:	d900      	bls.n	800e292 <__ssputs_r+0x86>
 800e290:	463e      	mov	r6, r7
 800e292:	6820      	ldr	r0, [r4, #0]
 800e294:	4632      	mov	r2, r6
 800e296:	4641      	mov	r1, r8
 800e298:	f000 f966 	bl	800e568 <memmove>
 800e29c:	68a3      	ldr	r3, [r4, #8]
 800e29e:	1b9b      	subs	r3, r3, r6
 800e2a0:	60a3      	str	r3, [r4, #8]
 800e2a2:	6823      	ldr	r3, [r4, #0]
 800e2a4:	4433      	add	r3, r6
 800e2a6:	6023      	str	r3, [r4, #0]
 800e2a8:	2000      	movs	r0, #0
 800e2aa:	e7db      	b.n	800e264 <__ssputs_r+0x58>
 800e2ac:	462a      	mov	r2, r5
 800e2ae:	f000 f981 	bl	800e5b4 <_realloc_r>
 800e2b2:	4606      	mov	r6, r0
 800e2b4:	2800      	cmp	r0, #0
 800e2b6:	d1e1      	bne.n	800e27c <__ssputs_r+0x70>
 800e2b8:	6921      	ldr	r1, [r4, #16]
 800e2ba:	4650      	mov	r0, sl
 800e2bc:	f7ff fec6 	bl	800e04c <_free_r>
 800e2c0:	e7c7      	b.n	800e252 <__ssputs_r+0x46>
	...

0800e2c4 <_svfiprintf_r>:
 800e2c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e2c8:	4698      	mov	r8, r3
 800e2ca:	898b      	ldrh	r3, [r1, #12]
 800e2cc:	061b      	lsls	r3, r3, #24
 800e2ce:	b09d      	sub	sp, #116	; 0x74
 800e2d0:	4607      	mov	r7, r0
 800e2d2:	460d      	mov	r5, r1
 800e2d4:	4614      	mov	r4, r2
 800e2d6:	d50e      	bpl.n	800e2f6 <_svfiprintf_r+0x32>
 800e2d8:	690b      	ldr	r3, [r1, #16]
 800e2da:	b963      	cbnz	r3, 800e2f6 <_svfiprintf_r+0x32>
 800e2dc:	2140      	movs	r1, #64	; 0x40
 800e2de:	f7ff ff21 	bl	800e124 <_malloc_r>
 800e2e2:	6028      	str	r0, [r5, #0]
 800e2e4:	6128      	str	r0, [r5, #16]
 800e2e6:	b920      	cbnz	r0, 800e2f2 <_svfiprintf_r+0x2e>
 800e2e8:	230c      	movs	r3, #12
 800e2ea:	603b      	str	r3, [r7, #0]
 800e2ec:	f04f 30ff 	mov.w	r0, #4294967295
 800e2f0:	e0d1      	b.n	800e496 <_svfiprintf_r+0x1d2>
 800e2f2:	2340      	movs	r3, #64	; 0x40
 800e2f4:	616b      	str	r3, [r5, #20]
 800e2f6:	2300      	movs	r3, #0
 800e2f8:	9309      	str	r3, [sp, #36]	; 0x24
 800e2fa:	2320      	movs	r3, #32
 800e2fc:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e300:	f8cd 800c 	str.w	r8, [sp, #12]
 800e304:	2330      	movs	r3, #48	; 0x30
 800e306:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 800e4b0 <_svfiprintf_r+0x1ec>
 800e30a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800e30e:	f04f 0901 	mov.w	r9, #1
 800e312:	4623      	mov	r3, r4
 800e314:	469a      	mov	sl, r3
 800e316:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e31a:	b10a      	cbz	r2, 800e320 <_svfiprintf_r+0x5c>
 800e31c:	2a25      	cmp	r2, #37	; 0x25
 800e31e:	d1f9      	bne.n	800e314 <_svfiprintf_r+0x50>
 800e320:	ebba 0b04 	subs.w	fp, sl, r4
 800e324:	d00b      	beq.n	800e33e <_svfiprintf_r+0x7a>
 800e326:	465b      	mov	r3, fp
 800e328:	4622      	mov	r2, r4
 800e32a:	4629      	mov	r1, r5
 800e32c:	4638      	mov	r0, r7
 800e32e:	f7ff ff6d 	bl	800e20c <__ssputs_r>
 800e332:	3001      	adds	r0, #1
 800e334:	f000 80aa 	beq.w	800e48c <_svfiprintf_r+0x1c8>
 800e338:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e33a:	445a      	add	r2, fp
 800e33c:	9209      	str	r2, [sp, #36]	; 0x24
 800e33e:	f89a 3000 	ldrb.w	r3, [sl]
 800e342:	2b00      	cmp	r3, #0
 800e344:	f000 80a2 	beq.w	800e48c <_svfiprintf_r+0x1c8>
 800e348:	2300      	movs	r3, #0
 800e34a:	f04f 32ff 	mov.w	r2, #4294967295
 800e34e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800e352:	f10a 0a01 	add.w	sl, sl, #1
 800e356:	9304      	str	r3, [sp, #16]
 800e358:	9307      	str	r3, [sp, #28]
 800e35a:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800e35e:	931a      	str	r3, [sp, #104]	; 0x68
 800e360:	4654      	mov	r4, sl
 800e362:	2205      	movs	r2, #5
 800e364:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e368:	4851      	ldr	r0, [pc, #324]	; (800e4b0 <_svfiprintf_r+0x1ec>)
 800e36a:	f7f1 ff59 	bl	8000220 <memchr>
 800e36e:	9a04      	ldr	r2, [sp, #16]
 800e370:	b9d8      	cbnz	r0, 800e3aa <_svfiprintf_r+0xe6>
 800e372:	06d0      	lsls	r0, r2, #27
 800e374:	bf44      	itt	mi
 800e376:	2320      	movmi	r3, #32
 800e378:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e37c:	0711      	lsls	r1, r2, #28
 800e37e:	bf44      	itt	mi
 800e380:	232b      	movmi	r3, #43	; 0x2b
 800e382:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e386:	f89a 3000 	ldrb.w	r3, [sl]
 800e38a:	2b2a      	cmp	r3, #42	; 0x2a
 800e38c:	d015      	beq.n	800e3ba <_svfiprintf_r+0xf6>
 800e38e:	9a07      	ldr	r2, [sp, #28]
 800e390:	4654      	mov	r4, sl
 800e392:	2000      	movs	r0, #0
 800e394:	f04f 0c0a 	mov.w	ip, #10
 800e398:	4621      	mov	r1, r4
 800e39a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e39e:	3b30      	subs	r3, #48	; 0x30
 800e3a0:	2b09      	cmp	r3, #9
 800e3a2:	d94e      	bls.n	800e442 <_svfiprintf_r+0x17e>
 800e3a4:	b1b0      	cbz	r0, 800e3d4 <_svfiprintf_r+0x110>
 800e3a6:	9207      	str	r2, [sp, #28]
 800e3a8:	e014      	b.n	800e3d4 <_svfiprintf_r+0x110>
 800e3aa:	eba0 0308 	sub.w	r3, r0, r8
 800e3ae:	fa09 f303 	lsl.w	r3, r9, r3
 800e3b2:	4313      	orrs	r3, r2
 800e3b4:	9304      	str	r3, [sp, #16]
 800e3b6:	46a2      	mov	sl, r4
 800e3b8:	e7d2      	b.n	800e360 <_svfiprintf_r+0x9c>
 800e3ba:	9b03      	ldr	r3, [sp, #12]
 800e3bc:	1d19      	adds	r1, r3, #4
 800e3be:	681b      	ldr	r3, [r3, #0]
 800e3c0:	9103      	str	r1, [sp, #12]
 800e3c2:	2b00      	cmp	r3, #0
 800e3c4:	bfbb      	ittet	lt
 800e3c6:	425b      	neglt	r3, r3
 800e3c8:	f042 0202 	orrlt.w	r2, r2, #2
 800e3cc:	9307      	strge	r3, [sp, #28]
 800e3ce:	9307      	strlt	r3, [sp, #28]
 800e3d0:	bfb8      	it	lt
 800e3d2:	9204      	strlt	r2, [sp, #16]
 800e3d4:	7823      	ldrb	r3, [r4, #0]
 800e3d6:	2b2e      	cmp	r3, #46	; 0x2e
 800e3d8:	d10c      	bne.n	800e3f4 <_svfiprintf_r+0x130>
 800e3da:	7863      	ldrb	r3, [r4, #1]
 800e3dc:	2b2a      	cmp	r3, #42	; 0x2a
 800e3de:	d135      	bne.n	800e44c <_svfiprintf_r+0x188>
 800e3e0:	9b03      	ldr	r3, [sp, #12]
 800e3e2:	1d1a      	adds	r2, r3, #4
 800e3e4:	681b      	ldr	r3, [r3, #0]
 800e3e6:	9203      	str	r2, [sp, #12]
 800e3e8:	2b00      	cmp	r3, #0
 800e3ea:	bfb8      	it	lt
 800e3ec:	f04f 33ff 	movlt.w	r3, #4294967295
 800e3f0:	3402      	adds	r4, #2
 800e3f2:	9305      	str	r3, [sp, #20]
 800e3f4:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800e4c0 <_svfiprintf_r+0x1fc>
 800e3f8:	7821      	ldrb	r1, [r4, #0]
 800e3fa:	2203      	movs	r2, #3
 800e3fc:	4650      	mov	r0, sl
 800e3fe:	f7f1 ff0f 	bl	8000220 <memchr>
 800e402:	b140      	cbz	r0, 800e416 <_svfiprintf_r+0x152>
 800e404:	2340      	movs	r3, #64	; 0x40
 800e406:	eba0 000a 	sub.w	r0, r0, sl
 800e40a:	fa03 f000 	lsl.w	r0, r3, r0
 800e40e:	9b04      	ldr	r3, [sp, #16]
 800e410:	4303      	orrs	r3, r0
 800e412:	3401      	adds	r4, #1
 800e414:	9304      	str	r3, [sp, #16]
 800e416:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e41a:	4826      	ldr	r0, [pc, #152]	; (800e4b4 <_svfiprintf_r+0x1f0>)
 800e41c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800e420:	2206      	movs	r2, #6
 800e422:	f7f1 fefd 	bl	8000220 <memchr>
 800e426:	2800      	cmp	r0, #0
 800e428:	d038      	beq.n	800e49c <_svfiprintf_r+0x1d8>
 800e42a:	4b23      	ldr	r3, [pc, #140]	; (800e4b8 <_svfiprintf_r+0x1f4>)
 800e42c:	bb1b      	cbnz	r3, 800e476 <_svfiprintf_r+0x1b2>
 800e42e:	9b03      	ldr	r3, [sp, #12]
 800e430:	3307      	adds	r3, #7
 800e432:	f023 0307 	bic.w	r3, r3, #7
 800e436:	3308      	adds	r3, #8
 800e438:	9303      	str	r3, [sp, #12]
 800e43a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e43c:	4433      	add	r3, r6
 800e43e:	9309      	str	r3, [sp, #36]	; 0x24
 800e440:	e767      	b.n	800e312 <_svfiprintf_r+0x4e>
 800e442:	fb0c 3202 	mla	r2, ip, r2, r3
 800e446:	460c      	mov	r4, r1
 800e448:	2001      	movs	r0, #1
 800e44a:	e7a5      	b.n	800e398 <_svfiprintf_r+0xd4>
 800e44c:	2300      	movs	r3, #0
 800e44e:	3401      	adds	r4, #1
 800e450:	9305      	str	r3, [sp, #20]
 800e452:	4619      	mov	r1, r3
 800e454:	f04f 0c0a 	mov.w	ip, #10
 800e458:	4620      	mov	r0, r4
 800e45a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e45e:	3a30      	subs	r2, #48	; 0x30
 800e460:	2a09      	cmp	r2, #9
 800e462:	d903      	bls.n	800e46c <_svfiprintf_r+0x1a8>
 800e464:	2b00      	cmp	r3, #0
 800e466:	d0c5      	beq.n	800e3f4 <_svfiprintf_r+0x130>
 800e468:	9105      	str	r1, [sp, #20]
 800e46a:	e7c3      	b.n	800e3f4 <_svfiprintf_r+0x130>
 800e46c:	fb0c 2101 	mla	r1, ip, r1, r2
 800e470:	4604      	mov	r4, r0
 800e472:	2301      	movs	r3, #1
 800e474:	e7f0      	b.n	800e458 <_svfiprintf_r+0x194>
 800e476:	ab03      	add	r3, sp, #12
 800e478:	9300      	str	r3, [sp, #0]
 800e47a:	462a      	mov	r2, r5
 800e47c:	4b0f      	ldr	r3, [pc, #60]	; (800e4bc <_svfiprintf_r+0x1f8>)
 800e47e:	a904      	add	r1, sp, #16
 800e480:	4638      	mov	r0, r7
 800e482:	f7fd ffcb 	bl	800c41c <_printf_float>
 800e486:	1c42      	adds	r2, r0, #1
 800e488:	4606      	mov	r6, r0
 800e48a:	d1d6      	bne.n	800e43a <_svfiprintf_r+0x176>
 800e48c:	89ab      	ldrh	r3, [r5, #12]
 800e48e:	065b      	lsls	r3, r3, #25
 800e490:	f53f af2c 	bmi.w	800e2ec <_svfiprintf_r+0x28>
 800e494:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e496:	b01d      	add	sp, #116	; 0x74
 800e498:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e49c:	ab03      	add	r3, sp, #12
 800e49e:	9300      	str	r3, [sp, #0]
 800e4a0:	462a      	mov	r2, r5
 800e4a2:	4b06      	ldr	r3, [pc, #24]	; (800e4bc <_svfiprintf_r+0x1f8>)
 800e4a4:	a904      	add	r1, sp, #16
 800e4a6:	4638      	mov	r0, r7
 800e4a8:	f7fe fa5c 	bl	800c964 <_printf_i>
 800e4ac:	e7eb      	b.n	800e486 <_svfiprintf_r+0x1c2>
 800e4ae:	bf00      	nop
 800e4b0:	080108dc 	.word	0x080108dc
 800e4b4:	080108e6 	.word	0x080108e6
 800e4b8:	0800c41d 	.word	0x0800c41d
 800e4bc:	0800e20d 	.word	0x0800e20d
 800e4c0:	080108e2 	.word	0x080108e2

0800e4c4 <_sbrk_r>:
 800e4c4:	b538      	push	{r3, r4, r5, lr}
 800e4c6:	4d06      	ldr	r5, [pc, #24]	; (800e4e0 <_sbrk_r+0x1c>)
 800e4c8:	2300      	movs	r3, #0
 800e4ca:	4604      	mov	r4, r0
 800e4cc:	4608      	mov	r0, r1
 800e4ce:	602b      	str	r3, [r5, #0]
 800e4d0:	f7f8 f934 	bl	800673c <_sbrk>
 800e4d4:	1c43      	adds	r3, r0, #1
 800e4d6:	d102      	bne.n	800e4de <_sbrk_r+0x1a>
 800e4d8:	682b      	ldr	r3, [r5, #0]
 800e4da:	b103      	cbz	r3, 800e4de <_sbrk_r+0x1a>
 800e4dc:	6023      	str	r3, [r4, #0]
 800e4de:	bd38      	pop	{r3, r4, r5, pc}
 800e4e0:	20000ba4 	.word	0x20000ba4

0800e4e4 <__assert_func>:
 800e4e4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e4e6:	4614      	mov	r4, r2
 800e4e8:	461a      	mov	r2, r3
 800e4ea:	4b09      	ldr	r3, [pc, #36]	; (800e510 <__assert_func+0x2c>)
 800e4ec:	681b      	ldr	r3, [r3, #0]
 800e4ee:	4605      	mov	r5, r0
 800e4f0:	68d8      	ldr	r0, [r3, #12]
 800e4f2:	b14c      	cbz	r4, 800e508 <__assert_func+0x24>
 800e4f4:	4b07      	ldr	r3, [pc, #28]	; (800e514 <__assert_func+0x30>)
 800e4f6:	9100      	str	r1, [sp, #0]
 800e4f8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800e4fc:	4906      	ldr	r1, [pc, #24]	; (800e518 <__assert_func+0x34>)
 800e4fe:	462b      	mov	r3, r5
 800e500:	f000 f80e 	bl	800e520 <fiprintf>
 800e504:	f000 faac 	bl	800ea60 <abort>
 800e508:	4b04      	ldr	r3, [pc, #16]	; (800e51c <__assert_func+0x38>)
 800e50a:	461c      	mov	r4, r3
 800e50c:	e7f3      	b.n	800e4f6 <__assert_func+0x12>
 800e50e:	bf00      	nop
 800e510:	200000b0 	.word	0x200000b0
 800e514:	080108ed 	.word	0x080108ed
 800e518:	080108fa 	.word	0x080108fa
 800e51c:	08010928 	.word	0x08010928

0800e520 <fiprintf>:
 800e520:	b40e      	push	{r1, r2, r3}
 800e522:	b503      	push	{r0, r1, lr}
 800e524:	4601      	mov	r1, r0
 800e526:	ab03      	add	r3, sp, #12
 800e528:	4805      	ldr	r0, [pc, #20]	; (800e540 <fiprintf+0x20>)
 800e52a:	f853 2b04 	ldr.w	r2, [r3], #4
 800e52e:	6800      	ldr	r0, [r0, #0]
 800e530:	9301      	str	r3, [sp, #4]
 800e532:	f000 f897 	bl	800e664 <_vfiprintf_r>
 800e536:	b002      	add	sp, #8
 800e538:	f85d eb04 	ldr.w	lr, [sp], #4
 800e53c:	b003      	add	sp, #12
 800e53e:	4770      	bx	lr
 800e540:	200000b0 	.word	0x200000b0

0800e544 <__ascii_mbtowc>:
 800e544:	b082      	sub	sp, #8
 800e546:	b901      	cbnz	r1, 800e54a <__ascii_mbtowc+0x6>
 800e548:	a901      	add	r1, sp, #4
 800e54a:	b142      	cbz	r2, 800e55e <__ascii_mbtowc+0x1a>
 800e54c:	b14b      	cbz	r3, 800e562 <__ascii_mbtowc+0x1e>
 800e54e:	7813      	ldrb	r3, [r2, #0]
 800e550:	600b      	str	r3, [r1, #0]
 800e552:	7812      	ldrb	r2, [r2, #0]
 800e554:	1e10      	subs	r0, r2, #0
 800e556:	bf18      	it	ne
 800e558:	2001      	movne	r0, #1
 800e55a:	b002      	add	sp, #8
 800e55c:	4770      	bx	lr
 800e55e:	4610      	mov	r0, r2
 800e560:	e7fb      	b.n	800e55a <__ascii_mbtowc+0x16>
 800e562:	f06f 0001 	mvn.w	r0, #1
 800e566:	e7f8      	b.n	800e55a <__ascii_mbtowc+0x16>

0800e568 <memmove>:
 800e568:	4288      	cmp	r0, r1
 800e56a:	b510      	push	{r4, lr}
 800e56c:	eb01 0402 	add.w	r4, r1, r2
 800e570:	d902      	bls.n	800e578 <memmove+0x10>
 800e572:	4284      	cmp	r4, r0
 800e574:	4623      	mov	r3, r4
 800e576:	d807      	bhi.n	800e588 <memmove+0x20>
 800e578:	1e43      	subs	r3, r0, #1
 800e57a:	42a1      	cmp	r1, r4
 800e57c:	d008      	beq.n	800e590 <memmove+0x28>
 800e57e:	f811 2b01 	ldrb.w	r2, [r1], #1
 800e582:	f803 2f01 	strb.w	r2, [r3, #1]!
 800e586:	e7f8      	b.n	800e57a <memmove+0x12>
 800e588:	4402      	add	r2, r0
 800e58a:	4601      	mov	r1, r0
 800e58c:	428a      	cmp	r2, r1
 800e58e:	d100      	bne.n	800e592 <memmove+0x2a>
 800e590:	bd10      	pop	{r4, pc}
 800e592:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800e596:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800e59a:	e7f7      	b.n	800e58c <memmove+0x24>

0800e59c <__malloc_lock>:
 800e59c:	4801      	ldr	r0, [pc, #4]	; (800e5a4 <__malloc_lock+0x8>)
 800e59e:	f000 bc1f 	b.w	800ede0 <__retarget_lock_acquire_recursive>
 800e5a2:	bf00      	nop
 800e5a4:	20000ba8 	.word	0x20000ba8

0800e5a8 <__malloc_unlock>:
 800e5a8:	4801      	ldr	r0, [pc, #4]	; (800e5b0 <__malloc_unlock+0x8>)
 800e5aa:	f000 bc1a 	b.w	800ede2 <__retarget_lock_release_recursive>
 800e5ae:	bf00      	nop
 800e5b0:	20000ba8 	.word	0x20000ba8

0800e5b4 <_realloc_r>:
 800e5b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e5b8:	4680      	mov	r8, r0
 800e5ba:	4614      	mov	r4, r2
 800e5bc:	460e      	mov	r6, r1
 800e5be:	b921      	cbnz	r1, 800e5ca <_realloc_r+0x16>
 800e5c0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800e5c4:	4611      	mov	r1, r2
 800e5c6:	f7ff bdad 	b.w	800e124 <_malloc_r>
 800e5ca:	b92a      	cbnz	r2, 800e5d8 <_realloc_r+0x24>
 800e5cc:	f7ff fd3e 	bl	800e04c <_free_r>
 800e5d0:	4625      	mov	r5, r4
 800e5d2:	4628      	mov	r0, r5
 800e5d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e5d8:	f000 fc6a 	bl	800eeb0 <_malloc_usable_size_r>
 800e5dc:	4284      	cmp	r4, r0
 800e5de:	4607      	mov	r7, r0
 800e5e0:	d802      	bhi.n	800e5e8 <_realloc_r+0x34>
 800e5e2:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800e5e6:	d812      	bhi.n	800e60e <_realloc_r+0x5a>
 800e5e8:	4621      	mov	r1, r4
 800e5ea:	4640      	mov	r0, r8
 800e5ec:	f7ff fd9a 	bl	800e124 <_malloc_r>
 800e5f0:	4605      	mov	r5, r0
 800e5f2:	2800      	cmp	r0, #0
 800e5f4:	d0ed      	beq.n	800e5d2 <_realloc_r+0x1e>
 800e5f6:	42bc      	cmp	r4, r7
 800e5f8:	4622      	mov	r2, r4
 800e5fa:	4631      	mov	r1, r6
 800e5fc:	bf28      	it	cs
 800e5fe:	463a      	movcs	r2, r7
 800e600:	f7ff f97c 	bl	800d8fc <memcpy>
 800e604:	4631      	mov	r1, r6
 800e606:	4640      	mov	r0, r8
 800e608:	f7ff fd20 	bl	800e04c <_free_r>
 800e60c:	e7e1      	b.n	800e5d2 <_realloc_r+0x1e>
 800e60e:	4635      	mov	r5, r6
 800e610:	e7df      	b.n	800e5d2 <_realloc_r+0x1e>

0800e612 <__sfputc_r>:
 800e612:	6893      	ldr	r3, [r2, #8]
 800e614:	3b01      	subs	r3, #1
 800e616:	2b00      	cmp	r3, #0
 800e618:	b410      	push	{r4}
 800e61a:	6093      	str	r3, [r2, #8]
 800e61c:	da08      	bge.n	800e630 <__sfputc_r+0x1e>
 800e61e:	6994      	ldr	r4, [r2, #24]
 800e620:	42a3      	cmp	r3, r4
 800e622:	db01      	blt.n	800e628 <__sfputc_r+0x16>
 800e624:	290a      	cmp	r1, #10
 800e626:	d103      	bne.n	800e630 <__sfputc_r+0x1e>
 800e628:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e62c:	f000 b94a 	b.w	800e8c4 <__swbuf_r>
 800e630:	6813      	ldr	r3, [r2, #0]
 800e632:	1c58      	adds	r0, r3, #1
 800e634:	6010      	str	r0, [r2, #0]
 800e636:	7019      	strb	r1, [r3, #0]
 800e638:	4608      	mov	r0, r1
 800e63a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e63e:	4770      	bx	lr

0800e640 <__sfputs_r>:
 800e640:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e642:	4606      	mov	r6, r0
 800e644:	460f      	mov	r7, r1
 800e646:	4614      	mov	r4, r2
 800e648:	18d5      	adds	r5, r2, r3
 800e64a:	42ac      	cmp	r4, r5
 800e64c:	d101      	bne.n	800e652 <__sfputs_r+0x12>
 800e64e:	2000      	movs	r0, #0
 800e650:	e007      	b.n	800e662 <__sfputs_r+0x22>
 800e652:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e656:	463a      	mov	r2, r7
 800e658:	4630      	mov	r0, r6
 800e65a:	f7ff ffda 	bl	800e612 <__sfputc_r>
 800e65e:	1c43      	adds	r3, r0, #1
 800e660:	d1f3      	bne.n	800e64a <__sfputs_r+0xa>
 800e662:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e664 <_vfiprintf_r>:
 800e664:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e668:	460d      	mov	r5, r1
 800e66a:	b09d      	sub	sp, #116	; 0x74
 800e66c:	4614      	mov	r4, r2
 800e66e:	4698      	mov	r8, r3
 800e670:	4606      	mov	r6, r0
 800e672:	b118      	cbz	r0, 800e67c <_vfiprintf_r+0x18>
 800e674:	6983      	ldr	r3, [r0, #24]
 800e676:	b90b      	cbnz	r3, 800e67c <_vfiprintf_r+0x18>
 800e678:	f000 fb14 	bl	800eca4 <__sinit>
 800e67c:	4b89      	ldr	r3, [pc, #548]	; (800e8a4 <_vfiprintf_r+0x240>)
 800e67e:	429d      	cmp	r5, r3
 800e680:	d11b      	bne.n	800e6ba <_vfiprintf_r+0x56>
 800e682:	6875      	ldr	r5, [r6, #4]
 800e684:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800e686:	07d9      	lsls	r1, r3, #31
 800e688:	d405      	bmi.n	800e696 <_vfiprintf_r+0x32>
 800e68a:	89ab      	ldrh	r3, [r5, #12]
 800e68c:	059a      	lsls	r2, r3, #22
 800e68e:	d402      	bmi.n	800e696 <_vfiprintf_r+0x32>
 800e690:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800e692:	f000 fba5 	bl	800ede0 <__retarget_lock_acquire_recursive>
 800e696:	89ab      	ldrh	r3, [r5, #12]
 800e698:	071b      	lsls	r3, r3, #28
 800e69a:	d501      	bpl.n	800e6a0 <_vfiprintf_r+0x3c>
 800e69c:	692b      	ldr	r3, [r5, #16]
 800e69e:	b9eb      	cbnz	r3, 800e6dc <_vfiprintf_r+0x78>
 800e6a0:	4629      	mov	r1, r5
 800e6a2:	4630      	mov	r0, r6
 800e6a4:	f000 f96e 	bl	800e984 <__swsetup_r>
 800e6a8:	b1c0      	cbz	r0, 800e6dc <_vfiprintf_r+0x78>
 800e6aa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800e6ac:	07dc      	lsls	r4, r3, #31
 800e6ae:	d50e      	bpl.n	800e6ce <_vfiprintf_r+0x6a>
 800e6b0:	f04f 30ff 	mov.w	r0, #4294967295
 800e6b4:	b01d      	add	sp, #116	; 0x74
 800e6b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e6ba:	4b7b      	ldr	r3, [pc, #492]	; (800e8a8 <_vfiprintf_r+0x244>)
 800e6bc:	429d      	cmp	r5, r3
 800e6be:	d101      	bne.n	800e6c4 <_vfiprintf_r+0x60>
 800e6c0:	68b5      	ldr	r5, [r6, #8]
 800e6c2:	e7df      	b.n	800e684 <_vfiprintf_r+0x20>
 800e6c4:	4b79      	ldr	r3, [pc, #484]	; (800e8ac <_vfiprintf_r+0x248>)
 800e6c6:	429d      	cmp	r5, r3
 800e6c8:	bf08      	it	eq
 800e6ca:	68f5      	ldreq	r5, [r6, #12]
 800e6cc:	e7da      	b.n	800e684 <_vfiprintf_r+0x20>
 800e6ce:	89ab      	ldrh	r3, [r5, #12]
 800e6d0:	0598      	lsls	r0, r3, #22
 800e6d2:	d4ed      	bmi.n	800e6b0 <_vfiprintf_r+0x4c>
 800e6d4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800e6d6:	f000 fb84 	bl	800ede2 <__retarget_lock_release_recursive>
 800e6da:	e7e9      	b.n	800e6b0 <_vfiprintf_r+0x4c>
 800e6dc:	2300      	movs	r3, #0
 800e6de:	9309      	str	r3, [sp, #36]	; 0x24
 800e6e0:	2320      	movs	r3, #32
 800e6e2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e6e6:	f8cd 800c 	str.w	r8, [sp, #12]
 800e6ea:	2330      	movs	r3, #48	; 0x30
 800e6ec:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800e8b0 <_vfiprintf_r+0x24c>
 800e6f0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800e6f4:	f04f 0901 	mov.w	r9, #1
 800e6f8:	4623      	mov	r3, r4
 800e6fa:	469a      	mov	sl, r3
 800e6fc:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e700:	b10a      	cbz	r2, 800e706 <_vfiprintf_r+0xa2>
 800e702:	2a25      	cmp	r2, #37	; 0x25
 800e704:	d1f9      	bne.n	800e6fa <_vfiprintf_r+0x96>
 800e706:	ebba 0b04 	subs.w	fp, sl, r4
 800e70a:	d00b      	beq.n	800e724 <_vfiprintf_r+0xc0>
 800e70c:	465b      	mov	r3, fp
 800e70e:	4622      	mov	r2, r4
 800e710:	4629      	mov	r1, r5
 800e712:	4630      	mov	r0, r6
 800e714:	f7ff ff94 	bl	800e640 <__sfputs_r>
 800e718:	3001      	adds	r0, #1
 800e71a:	f000 80aa 	beq.w	800e872 <_vfiprintf_r+0x20e>
 800e71e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e720:	445a      	add	r2, fp
 800e722:	9209      	str	r2, [sp, #36]	; 0x24
 800e724:	f89a 3000 	ldrb.w	r3, [sl]
 800e728:	2b00      	cmp	r3, #0
 800e72a:	f000 80a2 	beq.w	800e872 <_vfiprintf_r+0x20e>
 800e72e:	2300      	movs	r3, #0
 800e730:	f04f 32ff 	mov.w	r2, #4294967295
 800e734:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800e738:	f10a 0a01 	add.w	sl, sl, #1
 800e73c:	9304      	str	r3, [sp, #16]
 800e73e:	9307      	str	r3, [sp, #28]
 800e740:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800e744:	931a      	str	r3, [sp, #104]	; 0x68
 800e746:	4654      	mov	r4, sl
 800e748:	2205      	movs	r2, #5
 800e74a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e74e:	4858      	ldr	r0, [pc, #352]	; (800e8b0 <_vfiprintf_r+0x24c>)
 800e750:	f7f1 fd66 	bl	8000220 <memchr>
 800e754:	9a04      	ldr	r2, [sp, #16]
 800e756:	b9d8      	cbnz	r0, 800e790 <_vfiprintf_r+0x12c>
 800e758:	06d1      	lsls	r1, r2, #27
 800e75a:	bf44      	itt	mi
 800e75c:	2320      	movmi	r3, #32
 800e75e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e762:	0713      	lsls	r3, r2, #28
 800e764:	bf44      	itt	mi
 800e766:	232b      	movmi	r3, #43	; 0x2b
 800e768:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e76c:	f89a 3000 	ldrb.w	r3, [sl]
 800e770:	2b2a      	cmp	r3, #42	; 0x2a
 800e772:	d015      	beq.n	800e7a0 <_vfiprintf_r+0x13c>
 800e774:	9a07      	ldr	r2, [sp, #28]
 800e776:	4654      	mov	r4, sl
 800e778:	2000      	movs	r0, #0
 800e77a:	f04f 0c0a 	mov.w	ip, #10
 800e77e:	4621      	mov	r1, r4
 800e780:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e784:	3b30      	subs	r3, #48	; 0x30
 800e786:	2b09      	cmp	r3, #9
 800e788:	d94e      	bls.n	800e828 <_vfiprintf_r+0x1c4>
 800e78a:	b1b0      	cbz	r0, 800e7ba <_vfiprintf_r+0x156>
 800e78c:	9207      	str	r2, [sp, #28]
 800e78e:	e014      	b.n	800e7ba <_vfiprintf_r+0x156>
 800e790:	eba0 0308 	sub.w	r3, r0, r8
 800e794:	fa09 f303 	lsl.w	r3, r9, r3
 800e798:	4313      	orrs	r3, r2
 800e79a:	9304      	str	r3, [sp, #16]
 800e79c:	46a2      	mov	sl, r4
 800e79e:	e7d2      	b.n	800e746 <_vfiprintf_r+0xe2>
 800e7a0:	9b03      	ldr	r3, [sp, #12]
 800e7a2:	1d19      	adds	r1, r3, #4
 800e7a4:	681b      	ldr	r3, [r3, #0]
 800e7a6:	9103      	str	r1, [sp, #12]
 800e7a8:	2b00      	cmp	r3, #0
 800e7aa:	bfbb      	ittet	lt
 800e7ac:	425b      	neglt	r3, r3
 800e7ae:	f042 0202 	orrlt.w	r2, r2, #2
 800e7b2:	9307      	strge	r3, [sp, #28]
 800e7b4:	9307      	strlt	r3, [sp, #28]
 800e7b6:	bfb8      	it	lt
 800e7b8:	9204      	strlt	r2, [sp, #16]
 800e7ba:	7823      	ldrb	r3, [r4, #0]
 800e7bc:	2b2e      	cmp	r3, #46	; 0x2e
 800e7be:	d10c      	bne.n	800e7da <_vfiprintf_r+0x176>
 800e7c0:	7863      	ldrb	r3, [r4, #1]
 800e7c2:	2b2a      	cmp	r3, #42	; 0x2a
 800e7c4:	d135      	bne.n	800e832 <_vfiprintf_r+0x1ce>
 800e7c6:	9b03      	ldr	r3, [sp, #12]
 800e7c8:	1d1a      	adds	r2, r3, #4
 800e7ca:	681b      	ldr	r3, [r3, #0]
 800e7cc:	9203      	str	r2, [sp, #12]
 800e7ce:	2b00      	cmp	r3, #0
 800e7d0:	bfb8      	it	lt
 800e7d2:	f04f 33ff 	movlt.w	r3, #4294967295
 800e7d6:	3402      	adds	r4, #2
 800e7d8:	9305      	str	r3, [sp, #20]
 800e7da:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800e8c0 <_vfiprintf_r+0x25c>
 800e7de:	7821      	ldrb	r1, [r4, #0]
 800e7e0:	2203      	movs	r2, #3
 800e7e2:	4650      	mov	r0, sl
 800e7e4:	f7f1 fd1c 	bl	8000220 <memchr>
 800e7e8:	b140      	cbz	r0, 800e7fc <_vfiprintf_r+0x198>
 800e7ea:	2340      	movs	r3, #64	; 0x40
 800e7ec:	eba0 000a 	sub.w	r0, r0, sl
 800e7f0:	fa03 f000 	lsl.w	r0, r3, r0
 800e7f4:	9b04      	ldr	r3, [sp, #16]
 800e7f6:	4303      	orrs	r3, r0
 800e7f8:	3401      	adds	r4, #1
 800e7fa:	9304      	str	r3, [sp, #16]
 800e7fc:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e800:	482c      	ldr	r0, [pc, #176]	; (800e8b4 <_vfiprintf_r+0x250>)
 800e802:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800e806:	2206      	movs	r2, #6
 800e808:	f7f1 fd0a 	bl	8000220 <memchr>
 800e80c:	2800      	cmp	r0, #0
 800e80e:	d03f      	beq.n	800e890 <_vfiprintf_r+0x22c>
 800e810:	4b29      	ldr	r3, [pc, #164]	; (800e8b8 <_vfiprintf_r+0x254>)
 800e812:	bb1b      	cbnz	r3, 800e85c <_vfiprintf_r+0x1f8>
 800e814:	9b03      	ldr	r3, [sp, #12]
 800e816:	3307      	adds	r3, #7
 800e818:	f023 0307 	bic.w	r3, r3, #7
 800e81c:	3308      	adds	r3, #8
 800e81e:	9303      	str	r3, [sp, #12]
 800e820:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e822:	443b      	add	r3, r7
 800e824:	9309      	str	r3, [sp, #36]	; 0x24
 800e826:	e767      	b.n	800e6f8 <_vfiprintf_r+0x94>
 800e828:	fb0c 3202 	mla	r2, ip, r2, r3
 800e82c:	460c      	mov	r4, r1
 800e82e:	2001      	movs	r0, #1
 800e830:	e7a5      	b.n	800e77e <_vfiprintf_r+0x11a>
 800e832:	2300      	movs	r3, #0
 800e834:	3401      	adds	r4, #1
 800e836:	9305      	str	r3, [sp, #20]
 800e838:	4619      	mov	r1, r3
 800e83a:	f04f 0c0a 	mov.w	ip, #10
 800e83e:	4620      	mov	r0, r4
 800e840:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e844:	3a30      	subs	r2, #48	; 0x30
 800e846:	2a09      	cmp	r2, #9
 800e848:	d903      	bls.n	800e852 <_vfiprintf_r+0x1ee>
 800e84a:	2b00      	cmp	r3, #0
 800e84c:	d0c5      	beq.n	800e7da <_vfiprintf_r+0x176>
 800e84e:	9105      	str	r1, [sp, #20]
 800e850:	e7c3      	b.n	800e7da <_vfiprintf_r+0x176>
 800e852:	fb0c 2101 	mla	r1, ip, r1, r2
 800e856:	4604      	mov	r4, r0
 800e858:	2301      	movs	r3, #1
 800e85a:	e7f0      	b.n	800e83e <_vfiprintf_r+0x1da>
 800e85c:	ab03      	add	r3, sp, #12
 800e85e:	9300      	str	r3, [sp, #0]
 800e860:	462a      	mov	r2, r5
 800e862:	4b16      	ldr	r3, [pc, #88]	; (800e8bc <_vfiprintf_r+0x258>)
 800e864:	a904      	add	r1, sp, #16
 800e866:	4630      	mov	r0, r6
 800e868:	f7fd fdd8 	bl	800c41c <_printf_float>
 800e86c:	4607      	mov	r7, r0
 800e86e:	1c78      	adds	r0, r7, #1
 800e870:	d1d6      	bne.n	800e820 <_vfiprintf_r+0x1bc>
 800e872:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800e874:	07d9      	lsls	r1, r3, #31
 800e876:	d405      	bmi.n	800e884 <_vfiprintf_r+0x220>
 800e878:	89ab      	ldrh	r3, [r5, #12]
 800e87a:	059a      	lsls	r2, r3, #22
 800e87c:	d402      	bmi.n	800e884 <_vfiprintf_r+0x220>
 800e87e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800e880:	f000 faaf 	bl	800ede2 <__retarget_lock_release_recursive>
 800e884:	89ab      	ldrh	r3, [r5, #12]
 800e886:	065b      	lsls	r3, r3, #25
 800e888:	f53f af12 	bmi.w	800e6b0 <_vfiprintf_r+0x4c>
 800e88c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e88e:	e711      	b.n	800e6b4 <_vfiprintf_r+0x50>
 800e890:	ab03      	add	r3, sp, #12
 800e892:	9300      	str	r3, [sp, #0]
 800e894:	462a      	mov	r2, r5
 800e896:	4b09      	ldr	r3, [pc, #36]	; (800e8bc <_vfiprintf_r+0x258>)
 800e898:	a904      	add	r1, sp, #16
 800e89a:	4630      	mov	r0, r6
 800e89c:	f7fe f862 	bl	800c964 <_printf_i>
 800e8a0:	e7e4      	b.n	800e86c <_vfiprintf_r+0x208>
 800e8a2:	bf00      	nop
 800e8a4:	08010a54 	.word	0x08010a54
 800e8a8:	08010a74 	.word	0x08010a74
 800e8ac:	08010a34 	.word	0x08010a34
 800e8b0:	080108dc 	.word	0x080108dc
 800e8b4:	080108e6 	.word	0x080108e6
 800e8b8:	0800c41d 	.word	0x0800c41d
 800e8bc:	0800e641 	.word	0x0800e641
 800e8c0:	080108e2 	.word	0x080108e2

0800e8c4 <__swbuf_r>:
 800e8c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e8c6:	460e      	mov	r6, r1
 800e8c8:	4614      	mov	r4, r2
 800e8ca:	4605      	mov	r5, r0
 800e8cc:	b118      	cbz	r0, 800e8d6 <__swbuf_r+0x12>
 800e8ce:	6983      	ldr	r3, [r0, #24]
 800e8d0:	b90b      	cbnz	r3, 800e8d6 <__swbuf_r+0x12>
 800e8d2:	f000 f9e7 	bl	800eca4 <__sinit>
 800e8d6:	4b21      	ldr	r3, [pc, #132]	; (800e95c <__swbuf_r+0x98>)
 800e8d8:	429c      	cmp	r4, r3
 800e8da:	d12b      	bne.n	800e934 <__swbuf_r+0x70>
 800e8dc:	686c      	ldr	r4, [r5, #4]
 800e8de:	69a3      	ldr	r3, [r4, #24]
 800e8e0:	60a3      	str	r3, [r4, #8]
 800e8e2:	89a3      	ldrh	r3, [r4, #12]
 800e8e4:	071a      	lsls	r2, r3, #28
 800e8e6:	d52f      	bpl.n	800e948 <__swbuf_r+0x84>
 800e8e8:	6923      	ldr	r3, [r4, #16]
 800e8ea:	b36b      	cbz	r3, 800e948 <__swbuf_r+0x84>
 800e8ec:	6923      	ldr	r3, [r4, #16]
 800e8ee:	6820      	ldr	r0, [r4, #0]
 800e8f0:	1ac0      	subs	r0, r0, r3
 800e8f2:	6963      	ldr	r3, [r4, #20]
 800e8f4:	b2f6      	uxtb	r6, r6
 800e8f6:	4283      	cmp	r3, r0
 800e8f8:	4637      	mov	r7, r6
 800e8fa:	dc04      	bgt.n	800e906 <__swbuf_r+0x42>
 800e8fc:	4621      	mov	r1, r4
 800e8fe:	4628      	mov	r0, r5
 800e900:	f000 f93c 	bl	800eb7c <_fflush_r>
 800e904:	bb30      	cbnz	r0, 800e954 <__swbuf_r+0x90>
 800e906:	68a3      	ldr	r3, [r4, #8]
 800e908:	3b01      	subs	r3, #1
 800e90a:	60a3      	str	r3, [r4, #8]
 800e90c:	6823      	ldr	r3, [r4, #0]
 800e90e:	1c5a      	adds	r2, r3, #1
 800e910:	6022      	str	r2, [r4, #0]
 800e912:	701e      	strb	r6, [r3, #0]
 800e914:	6963      	ldr	r3, [r4, #20]
 800e916:	3001      	adds	r0, #1
 800e918:	4283      	cmp	r3, r0
 800e91a:	d004      	beq.n	800e926 <__swbuf_r+0x62>
 800e91c:	89a3      	ldrh	r3, [r4, #12]
 800e91e:	07db      	lsls	r3, r3, #31
 800e920:	d506      	bpl.n	800e930 <__swbuf_r+0x6c>
 800e922:	2e0a      	cmp	r6, #10
 800e924:	d104      	bne.n	800e930 <__swbuf_r+0x6c>
 800e926:	4621      	mov	r1, r4
 800e928:	4628      	mov	r0, r5
 800e92a:	f000 f927 	bl	800eb7c <_fflush_r>
 800e92e:	b988      	cbnz	r0, 800e954 <__swbuf_r+0x90>
 800e930:	4638      	mov	r0, r7
 800e932:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e934:	4b0a      	ldr	r3, [pc, #40]	; (800e960 <__swbuf_r+0x9c>)
 800e936:	429c      	cmp	r4, r3
 800e938:	d101      	bne.n	800e93e <__swbuf_r+0x7a>
 800e93a:	68ac      	ldr	r4, [r5, #8]
 800e93c:	e7cf      	b.n	800e8de <__swbuf_r+0x1a>
 800e93e:	4b09      	ldr	r3, [pc, #36]	; (800e964 <__swbuf_r+0xa0>)
 800e940:	429c      	cmp	r4, r3
 800e942:	bf08      	it	eq
 800e944:	68ec      	ldreq	r4, [r5, #12]
 800e946:	e7ca      	b.n	800e8de <__swbuf_r+0x1a>
 800e948:	4621      	mov	r1, r4
 800e94a:	4628      	mov	r0, r5
 800e94c:	f000 f81a 	bl	800e984 <__swsetup_r>
 800e950:	2800      	cmp	r0, #0
 800e952:	d0cb      	beq.n	800e8ec <__swbuf_r+0x28>
 800e954:	f04f 37ff 	mov.w	r7, #4294967295
 800e958:	e7ea      	b.n	800e930 <__swbuf_r+0x6c>
 800e95a:	bf00      	nop
 800e95c:	08010a54 	.word	0x08010a54
 800e960:	08010a74 	.word	0x08010a74
 800e964:	08010a34 	.word	0x08010a34

0800e968 <__ascii_wctomb>:
 800e968:	b149      	cbz	r1, 800e97e <__ascii_wctomb+0x16>
 800e96a:	2aff      	cmp	r2, #255	; 0xff
 800e96c:	bf85      	ittet	hi
 800e96e:	238a      	movhi	r3, #138	; 0x8a
 800e970:	6003      	strhi	r3, [r0, #0]
 800e972:	700a      	strbls	r2, [r1, #0]
 800e974:	f04f 30ff 	movhi.w	r0, #4294967295
 800e978:	bf98      	it	ls
 800e97a:	2001      	movls	r0, #1
 800e97c:	4770      	bx	lr
 800e97e:	4608      	mov	r0, r1
 800e980:	4770      	bx	lr
	...

0800e984 <__swsetup_r>:
 800e984:	4b32      	ldr	r3, [pc, #200]	; (800ea50 <__swsetup_r+0xcc>)
 800e986:	b570      	push	{r4, r5, r6, lr}
 800e988:	681d      	ldr	r5, [r3, #0]
 800e98a:	4606      	mov	r6, r0
 800e98c:	460c      	mov	r4, r1
 800e98e:	b125      	cbz	r5, 800e99a <__swsetup_r+0x16>
 800e990:	69ab      	ldr	r3, [r5, #24]
 800e992:	b913      	cbnz	r3, 800e99a <__swsetup_r+0x16>
 800e994:	4628      	mov	r0, r5
 800e996:	f000 f985 	bl	800eca4 <__sinit>
 800e99a:	4b2e      	ldr	r3, [pc, #184]	; (800ea54 <__swsetup_r+0xd0>)
 800e99c:	429c      	cmp	r4, r3
 800e99e:	d10f      	bne.n	800e9c0 <__swsetup_r+0x3c>
 800e9a0:	686c      	ldr	r4, [r5, #4]
 800e9a2:	89a3      	ldrh	r3, [r4, #12]
 800e9a4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800e9a8:	0719      	lsls	r1, r3, #28
 800e9aa:	d42c      	bmi.n	800ea06 <__swsetup_r+0x82>
 800e9ac:	06dd      	lsls	r5, r3, #27
 800e9ae:	d411      	bmi.n	800e9d4 <__swsetup_r+0x50>
 800e9b0:	2309      	movs	r3, #9
 800e9b2:	6033      	str	r3, [r6, #0]
 800e9b4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800e9b8:	81a3      	strh	r3, [r4, #12]
 800e9ba:	f04f 30ff 	mov.w	r0, #4294967295
 800e9be:	e03e      	b.n	800ea3e <__swsetup_r+0xba>
 800e9c0:	4b25      	ldr	r3, [pc, #148]	; (800ea58 <__swsetup_r+0xd4>)
 800e9c2:	429c      	cmp	r4, r3
 800e9c4:	d101      	bne.n	800e9ca <__swsetup_r+0x46>
 800e9c6:	68ac      	ldr	r4, [r5, #8]
 800e9c8:	e7eb      	b.n	800e9a2 <__swsetup_r+0x1e>
 800e9ca:	4b24      	ldr	r3, [pc, #144]	; (800ea5c <__swsetup_r+0xd8>)
 800e9cc:	429c      	cmp	r4, r3
 800e9ce:	bf08      	it	eq
 800e9d0:	68ec      	ldreq	r4, [r5, #12]
 800e9d2:	e7e6      	b.n	800e9a2 <__swsetup_r+0x1e>
 800e9d4:	0758      	lsls	r0, r3, #29
 800e9d6:	d512      	bpl.n	800e9fe <__swsetup_r+0x7a>
 800e9d8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800e9da:	b141      	cbz	r1, 800e9ee <__swsetup_r+0x6a>
 800e9dc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800e9e0:	4299      	cmp	r1, r3
 800e9e2:	d002      	beq.n	800e9ea <__swsetup_r+0x66>
 800e9e4:	4630      	mov	r0, r6
 800e9e6:	f7ff fb31 	bl	800e04c <_free_r>
 800e9ea:	2300      	movs	r3, #0
 800e9ec:	6363      	str	r3, [r4, #52]	; 0x34
 800e9ee:	89a3      	ldrh	r3, [r4, #12]
 800e9f0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800e9f4:	81a3      	strh	r3, [r4, #12]
 800e9f6:	2300      	movs	r3, #0
 800e9f8:	6063      	str	r3, [r4, #4]
 800e9fa:	6923      	ldr	r3, [r4, #16]
 800e9fc:	6023      	str	r3, [r4, #0]
 800e9fe:	89a3      	ldrh	r3, [r4, #12]
 800ea00:	f043 0308 	orr.w	r3, r3, #8
 800ea04:	81a3      	strh	r3, [r4, #12]
 800ea06:	6923      	ldr	r3, [r4, #16]
 800ea08:	b94b      	cbnz	r3, 800ea1e <__swsetup_r+0x9a>
 800ea0a:	89a3      	ldrh	r3, [r4, #12]
 800ea0c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800ea10:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ea14:	d003      	beq.n	800ea1e <__swsetup_r+0x9a>
 800ea16:	4621      	mov	r1, r4
 800ea18:	4630      	mov	r0, r6
 800ea1a:	f000 fa09 	bl	800ee30 <__smakebuf_r>
 800ea1e:	89a0      	ldrh	r0, [r4, #12]
 800ea20:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800ea24:	f010 0301 	ands.w	r3, r0, #1
 800ea28:	d00a      	beq.n	800ea40 <__swsetup_r+0xbc>
 800ea2a:	2300      	movs	r3, #0
 800ea2c:	60a3      	str	r3, [r4, #8]
 800ea2e:	6963      	ldr	r3, [r4, #20]
 800ea30:	425b      	negs	r3, r3
 800ea32:	61a3      	str	r3, [r4, #24]
 800ea34:	6923      	ldr	r3, [r4, #16]
 800ea36:	b943      	cbnz	r3, 800ea4a <__swsetup_r+0xc6>
 800ea38:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800ea3c:	d1ba      	bne.n	800e9b4 <__swsetup_r+0x30>
 800ea3e:	bd70      	pop	{r4, r5, r6, pc}
 800ea40:	0781      	lsls	r1, r0, #30
 800ea42:	bf58      	it	pl
 800ea44:	6963      	ldrpl	r3, [r4, #20]
 800ea46:	60a3      	str	r3, [r4, #8]
 800ea48:	e7f4      	b.n	800ea34 <__swsetup_r+0xb0>
 800ea4a:	2000      	movs	r0, #0
 800ea4c:	e7f7      	b.n	800ea3e <__swsetup_r+0xba>
 800ea4e:	bf00      	nop
 800ea50:	200000b0 	.word	0x200000b0
 800ea54:	08010a54 	.word	0x08010a54
 800ea58:	08010a74 	.word	0x08010a74
 800ea5c:	08010a34 	.word	0x08010a34

0800ea60 <abort>:
 800ea60:	b508      	push	{r3, lr}
 800ea62:	2006      	movs	r0, #6
 800ea64:	f000 fa54 	bl	800ef10 <raise>
 800ea68:	2001      	movs	r0, #1
 800ea6a:	f7f7 fdef 	bl	800664c <_exit>
	...

0800ea70 <__sflush_r>:
 800ea70:	898a      	ldrh	r2, [r1, #12]
 800ea72:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ea76:	4605      	mov	r5, r0
 800ea78:	0710      	lsls	r0, r2, #28
 800ea7a:	460c      	mov	r4, r1
 800ea7c:	d458      	bmi.n	800eb30 <__sflush_r+0xc0>
 800ea7e:	684b      	ldr	r3, [r1, #4]
 800ea80:	2b00      	cmp	r3, #0
 800ea82:	dc05      	bgt.n	800ea90 <__sflush_r+0x20>
 800ea84:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800ea86:	2b00      	cmp	r3, #0
 800ea88:	dc02      	bgt.n	800ea90 <__sflush_r+0x20>
 800ea8a:	2000      	movs	r0, #0
 800ea8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ea90:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800ea92:	2e00      	cmp	r6, #0
 800ea94:	d0f9      	beq.n	800ea8a <__sflush_r+0x1a>
 800ea96:	2300      	movs	r3, #0
 800ea98:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800ea9c:	682f      	ldr	r7, [r5, #0]
 800ea9e:	602b      	str	r3, [r5, #0]
 800eaa0:	d032      	beq.n	800eb08 <__sflush_r+0x98>
 800eaa2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800eaa4:	89a3      	ldrh	r3, [r4, #12]
 800eaa6:	075a      	lsls	r2, r3, #29
 800eaa8:	d505      	bpl.n	800eab6 <__sflush_r+0x46>
 800eaaa:	6863      	ldr	r3, [r4, #4]
 800eaac:	1ac0      	subs	r0, r0, r3
 800eaae:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800eab0:	b10b      	cbz	r3, 800eab6 <__sflush_r+0x46>
 800eab2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800eab4:	1ac0      	subs	r0, r0, r3
 800eab6:	2300      	movs	r3, #0
 800eab8:	4602      	mov	r2, r0
 800eaba:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800eabc:	6a21      	ldr	r1, [r4, #32]
 800eabe:	4628      	mov	r0, r5
 800eac0:	47b0      	blx	r6
 800eac2:	1c43      	adds	r3, r0, #1
 800eac4:	89a3      	ldrh	r3, [r4, #12]
 800eac6:	d106      	bne.n	800ead6 <__sflush_r+0x66>
 800eac8:	6829      	ldr	r1, [r5, #0]
 800eaca:	291d      	cmp	r1, #29
 800eacc:	d82c      	bhi.n	800eb28 <__sflush_r+0xb8>
 800eace:	4a2a      	ldr	r2, [pc, #168]	; (800eb78 <__sflush_r+0x108>)
 800ead0:	40ca      	lsrs	r2, r1
 800ead2:	07d6      	lsls	r6, r2, #31
 800ead4:	d528      	bpl.n	800eb28 <__sflush_r+0xb8>
 800ead6:	2200      	movs	r2, #0
 800ead8:	6062      	str	r2, [r4, #4]
 800eada:	04d9      	lsls	r1, r3, #19
 800eadc:	6922      	ldr	r2, [r4, #16]
 800eade:	6022      	str	r2, [r4, #0]
 800eae0:	d504      	bpl.n	800eaec <__sflush_r+0x7c>
 800eae2:	1c42      	adds	r2, r0, #1
 800eae4:	d101      	bne.n	800eaea <__sflush_r+0x7a>
 800eae6:	682b      	ldr	r3, [r5, #0]
 800eae8:	b903      	cbnz	r3, 800eaec <__sflush_r+0x7c>
 800eaea:	6560      	str	r0, [r4, #84]	; 0x54
 800eaec:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800eaee:	602f      	str	r7, [r5, #0]
 800eaf0:	2900      	cmp	r1, #0
 800eaf2:	d0ca      	beq.n	800ea8a <__sflush_r+0x1a>
 800eaf4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800eaf8:	4299      	cmp	r1, r3
 800eafa:	d002      	beq.n	800eb02 <__sflush_r+0x92>
 800eafc:	4628      	mov	r0, r5
 800eafe:	f7ff faa5 	bl	800e04c <_free_r>
 800eb02:	2000      	movs	r0, #0
 800eb04:	6360      	str	r0, [r4, #52]	; 0x34
 800eb06:	e7c1      	b.n	800ea8c <__sflush_r+0x1c>
 800eb08:	6a21      	ldr	r1, [r4, #32]
 800eb0a:	2301      	movs	r3, #1
 800eb0c:	4628      	mov	r0, r5
 800eb0e:	47b0      	blx	r6
 800eb10:	1c41      	adds	r1, r0, #1
 800eb12:	d1c7      	bne.n	800eaa4 <__sflush_r+0x34>
 800eb14:	682b      	ldr	r3, [r5, #0]
 800eb16:	2b00      	cmp	r3, #0
 800eb18:	d0c4      	beq.n	800eaa4 <__sflush_r+0x34>
 800eb1a:	2b1d      	cmp	r3, #29
 800eb1c:	d001      	beq.n	800eb22 <__sflush_r+0xb2>
 800eb1e:	2b16      	cmp	r3, #22
 800eb20:	d101      	bne.n	800eb26 <__sflush_r+0xb6>
 800eb22:	602f      	str	r7, [r5, #0]
 800eb24:	e7b1      	b.n	800ea8a <__sflush_r+0x1a>
 800eb26:	89a3      	ldrh	r3, [r4, #12]
 800eb28:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800eb2c:	81a3      	strh	r3, [r4, #12]
 800eb2e:	e7ad      	b.n	800ea8c <__sflush_r+0x1c>
 800eb30:	690f      	ldr	r7, [r1, #16]
 800eb32:	2f00      	cmp	r7, #0
 800eb34:	d0a9      	beq.n	800ea8a <__sflush_r+0x1a>
 800eb36:	0793      	lsls	r3, r2, #30
 800eb38:	680e      	ldr	r6, [r1, #0]
 800eb3a:	bf08      	it	eq
 800eb3c:	694b      	ldreq	r3, [r1, #20]
 800eb3e:	600f      	str	r7, [r1, #0]
 800eb40:	bf18      	it	ne
 800eb42:	2300      	movne	r3, #0
 800eb44:	eba6 0807 	sub.w	r8, r6, r7
 800eb48:	608b      	str	r3, [r1, #8]
 800eb4a:	f1b8 0f00 	cmp.w	r8, #0
 800eb4e:	dd9c      	ble.n	800ea8a <__sflush_r+0x1a>
 800eb50:	6a21      	ldr	r1, [r4, #32]
 800eb52:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800eb54:	4643      	mov	r3, r8
 800eb56:	463a      	mov	r2, r7
 800eb58:	4628      	mov	r0, r5
 800eb5a:	47b0      	blx	r6
 800eb5c:	2800      	cmp	r0, #0
 800eb5e:	dc06      	bgt.n	800eb6e <__sflush_r+0xfe>
 800eb60:	89a3      	ldrh	r3, [r4, #12]
 800eb62:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800eb66:	81a3      	strh	r3, [r4, #12]
 800eb68:	f04f 30ff 	mov.w	r0, #4294967295
 800eb6c:	e78e      	b.n	800ea8c <__sflush_r+0x1c>
 800eb6e:	4407      	add	r7, r0
 800eb70:	eba8 0800 	sub.w	r8, r8, r0
 800eb74:	e7e9      	b.n	800eb4a <__sflush_r+0xda>
 800eb76:	bf00      	nop
 800eb78:	20400001 	.word	0x20400001

0800eb7c <_fflush_r>:
 800eb7c:	b538      	push	{r3, r4, r5, lr}
 800eb7e:	690b      	ldr	r3, [r1, #16]
 800eb80:	4605      	mov	r5, r0
 800eb82:	460c      	mov	r4, r1
 800eb84:	b913      	cbnz	r3, 800eb8c <_fflush_r+0x10>
 800eb86:	2500      	movs	r5, #0
 800eb88:	4628      	mov	r0, r5
 800eb8a:	bd38      	pop	{r3, r4, r5, pc}
 800eb8c:	b118      	cbz	r0, 800eb96 <_fflush_r+0x1a>
 800eb8e:	6983      	ldr	r3, [r0, #24]
 800eb90:	b90b      	cbnz	r3, 800eb96 <_fflush_r+0x1a>
 800eb92:	f000 f887 	bl	800eca4 <__sinit>
 800eb96:	4b14      	ldr	r3, [pc, #80]	; (800ebe8 <_fflush_r+0x6c>)
 800eb98:	429c      	cmp	r4, r3
 800eb9a:	d11b      	bne.n	800ebd4 <_fflush_r+0x58>
 800eb9c:	686c      	ldr	r4, [r5, #4]
 800eb9e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800eba2:	2b00      	cmp	r3, #0
 800eba4:	d0ef      	beq.n	800eb86 <_fflush_r+0xa>
 800eba6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800eba8:	07d0      	lsls	r0, r2, #31
 800ebaa:	d404      	bmi.n	800ebb6 <_fflush_r+0x3a>
 800ebac:	0599      	lsls	r1, r3, #22
 800ebae:	d402      	bmi.n	800ebb6 <_fflush_r+0x3a>
 800ebb0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ebb2:	f000 f915 	bl	800ede0 <__retarget_lock_acquire_recursive>
 800ebb6:	4628      	mov	r0, r5
 800ebb8:	4621      	mov	r1, r4
 800ebba:	f7ff ff59 	bl	800ea70 <__sflush_r>
 800ebbe:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800ebc0:	07da      	lsls	r2, r3, #31
 800ebc2:	4605      	mov	r5, r0
 800ebc4:	d4e0      	bmi.n	800eb88 <_fflush_r+0xc>
 800ebc6:	89a3      	ldrh	r3, [r4, #12]
 800ebc8:	059b      	lsls	r3, r3, #22
 800ebca:	d4dd      	bmi.n	800eb88 <_fflush_r+0xc>
 800ebcc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ebce:	f000 f908 	bl	800ede2 <__retarget_lock_release_recursive>
 800ebd2:	e7d9      	b.n	800eb88 <_fflush_r+0xc>
 800ebd4:	4b05      	ldr	r3, [pc, #20]	; (800ebec <_fflush_r+0x70>)
 800ebd6:	429c      	cmp	r4, r3
 800ebd8:	d101      	bne.n	800ebde <_fflush_r+0x62>
 800ebda:	68ac      	ldr	r4, [r5, #8]
 800ebdc:	e7df      	b.n	800eb9e <_fflush_r+0x22>
 800ebde:	4b04      	ldr	r3, [pc, #16]	; (800ebf0 <_fflush_r+0x74>)
 800ebe0:	429c      	cmp	r4, r3
 800ebe2:	bf08      	it	eq
 800ebe4:	68ec      	ldreq	r4, [r5, #12]
 800ebe6:	e7da      	b.n	800eb9e <_fflush_r+0x22>
 800ebe8:	08010a54 	.word	0x08010a54
 800ebec:	08010a74 	.word	0x08010a74
 800ebf0:	08010a34 	.word	0x08010a34

0800ebf4 <std>:
 800ebf4:	2300      	movs	r3, #0
 800ebf6:	b510      	push	{r4, lr}
 800ebf8:	4604      	mov	r4, r0
 800ebfa:	e9c0 3300 	strd	r3, r3, [r0]
 800ebfe:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800ec02:	6083      	str	r3, [r0, #8]
 800ec04:	8181      	strh	r1, [r0, #12]
 800ec06:	6643      	str	r3, [r0, #100]	; 0x64
 800ec08:	81c2      	strh	r2, [r0, #14]
 800ec0a:	6183      	str	r3, [r0, #24]
 800ec0c:	4619      	mov	r1, r3
 800ec0e:	2208      	movs	r2, #8
 800ec10:	305c      	adds	r0, #92	; 0x5c
 800ec12:	f7fd fb5b 	bl	800c2cc <memset>
 800ec16:	4b05      	ldr	r3, [pc, #20]	; (800ec2c <std+0x38>)
 800ec18:	6263      	str	r3, [r4, #36]	; 0x24
 800ec1a:	4b05      	ldr	r3, [pc, #20]	; (800ec30 <std+0x3c>)
 800ec1c:	62a3      	str	r3, [r4, #40]	; 0x28
 800ec1e:	4b05      	ldr	r3, [pc, #20]	; (800ec34 <std+0x40>)
 800ec20:	62e3      	str	r3, [r4, #44]	; 0x2c
 800ec22:	4b05      	ldr	r3, [pc, #20]	; (800ec38 <std+0x44>)
 800ec24:	6224      	str	r4, [r4, #32]
 800ec26:	6323      	str	r3, [r4, #48]	; 0x30
 800ec28:	bd10      	pop	{r4, pc}
 800ec2a:	bf00      	nop
 800ec2c:	0800ef49 	.word	0x0800ef49
 800ec30:	0800ef6b 	.word	0x0800ef6b
 800ec34:	0800efa3 	.word	0x0800efa3
 800ec38:	0800efc7 	.word	0x0800efc7

0800ec3c <_cleanup_r>:
 800ec3c:	4901      	ldr	r1, [pc, #4]	; (800ec44 <_cleanup_r+0x8>)
 800ec3e:	f000 b8af 	b.w	800eda0 <_fwalk_reent>
 800ec42:	bf00      	nop
 800ec44:	0800eb7d 	.word	0x0800eb7d

0800ec48 <__sfmoreglue>:
 800ec48:	b570      	push	{r4, r5, r6, lr}
 800ec4a:	2268      	movs	r2, #104	; 0x68
 800ec4c:	1e4d      	subs	r5, r1, #1
 800ec4e:	4355      	muls	r5, r2
 800ec50:	460e      	mov	r6, r1
 800ec52:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800ec56:	f7ff fa65 	bl	800e124 <_malloc_r>
 800ec5a:	4604      	mov	r4, r0
 800ec5c:	b140      	cbz	r0, 800ec70 <__sfmoreglue+0x28>
 800ec5e:	2100      	movs	r1, #0
 800ec60:	e9c0 1600 	strd	r1, r6, [r0]
 800ec64:	300c      	adds	r0, #12
 800ec66:	60a0      	str	r0, [r4, #8]
 800ec68:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800ec6c:	f7fd fb2e 	bl	800c2cc <memset>
 800ec70:	4620      	mov	r0, r4
 800ec72:	bd70      	pop	{r4, r5, r6, pc}

0800ec74 <__sfp_lock_acquire>:
 800ec74:	4801      	ldr	r0, [pc, #4]	; (800ec7c <__sfp_lock_acquire+0x8>)
 800ec76:	f000 b8b3 	b.w	800ede0 <__retarget_lock_acquire_recursive>
 800ec7a:	bf00      	nop
 800ec7c:	20000ba9 	.word	0x20000ba9

0800ec80 <__sfp_lock_release>:
 800ec80:	4801      	ldr	r0, [pc, #4]	; (800ec88 <__sfp_lock_release+0x8>)
 800ec82:	f000 b8ae 	b.w	800ede2 <__retarget_lock_release_recursive>
 800ec86:	bf00      	nop
 800ec88:	20000ba9 	.word	0x20000ba9

0800ec8c <__sinit_lock_acquire>:
 800ec8c:	4801      	ldr	r0, [pc, #4]	; (800ec94 <__sinit_lock_acquire+0x8>)
 800ec8e:	f000 b8a7 	b.w	800ede0 <__retarget_lock_acquire_recursive>
 800ec92:	bf00      	nop
 800ec94:	20000baa 	.word	0x20000baa

0800ec98 <__sinit_lock_release>:
 800ec98:	4801      	ldr	r0, [pc, #4]	; (800eca0 <__sinit_lock_release+0x8>)
 800ec9a:	f000 b8a2 	b.w	800ede2 <__retarget_lock_release_recursive>
 800ec9e:	bf00      	nop
 800eca0:	20000baa 	.word	0x20000baa

0800eca4 <__sinit>:
 800eca4:	b510      	push	{r4, lr}
 800eca6:	4604      	mov	r4, r0
 800eca8:	f7ff fff0 	bl	800ec8c <__sinit_lock_acquire>
 800ecac:	69a3      	ldr	r3, [r4, #24]
 800ecae:	b11b      	cbz	r3, 800ecb8 <__sinit+0x14>
 800ecb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ecb4:	f7ff bff0 	b.w	800ec98 <__sinit_lock_release>
 800ecb8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800ecbc:	6523      	str	r3, [r4, #80]	; 0x50
 800ecbe:	4b13      	ldr	r3, [pc, #76]	; (800ed0c <__sinit+0x68>)
 800ecc0:	4a13      	ldr	r2, [pc, #76]	; (800ed10 <__sinit+0x6c>)
 800ecc2:	681b      	ldr	r3, [r3, #0]
 800ecc4:	62a2      	str	r2, [r4, #40]	; 0x28
 800ecc6:	42a3      	cmp	r3, r4
 800ecc8:	bf04      	itt	eq
 800ecca:	2301      	moveq	r3, #1
 800eccc:	61a3      	streq	r3, [r4, #24]
 800ecce:	4620      	mov	r0, r4
 800ecd0:	f000 f820 	bl	800ed14 <__sfp>
 800ecd4:	6060      	str	r0, [r4, #4]
 800ecd6:	4620      	mov	r0, r4
 800ecd8:	f000 f81c 	bl	800ed14 <__sfp>
 800ecdc:	60a0      	str	r0, [r4, #8]
 800ecde:	4620      	mov	r0, r4
 800ece0:	f000 f818 	bl	800ed14 <__sfp>
 800ece4:	2200      	movs	r2, #0
 800ece6:	60e0      	str	r0, [r4, #12]
 800ece8:	2104      	movs	r1, #4
 800ecea:	6860      	ldr	r0, [r4, #4]
 800ecec:	f7ff ff82 	bl	800ebf4 <std>
 800ecf0:	68a0      	ldr	r0, [r4, #8]
 800ecf2:	2201      	movs	r2, #1
 800ecf4:	2109      	movs	r1, #9
 800ecf6:	f7ff ff7d 	bl	800ebf4 <std>
 800ecfa:	68e0      	ldr	r0, [r4, #12]
 800ecfc:	2202      	movs	r2, #2
 800ecfe:	2112      	movs	r1, #18
 800ed00:	f7ff ff78 	bl	800ebf4 <std>
 800ed04:	2301      	movs	r3, #1
 800ed06:	61a3      	str	r3, [r4, #24]
 800ed08:	e7d2      	b.n	800ecb0 <__sinit+0xc>
 800ed0a:	bf00      	nop
 800ed0c:	080106b8 	.word	0x080106b8
 800ed10:	0800ec3d 	.word	0x0800ec3d

0800ed14 <__sfp>:
 800ed14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ed16:	4607      	mov	r7, r0
 800ed18:	f7ff ffac 	bl	800ec74 <__sfp_lock_acquire>
 800ed1c:	4b1e      	ldr	r3, [pc, #120]	; (800ed98 <__sfp+0x84>)
 800ed1e:	681e      	ldr	r6, [r3, #0]
 800ed20:	69b3      	ldr	r3, [r6, #24]
 800ed22:	b913      	cbnz	r3, 800ed2a <__sfp+0x16>
 800ed24:	4630      	mov	r0, r6
 800ed26:	f7ff ffbd 	bl	800eca4 <__sinit>
 800ed2a:	3648      	adds	r6, #72	; 0x48
 800ed2c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800ed30:	3b01      	subs	r3, #1
 800ed32:	d503      	bpl.n	800ed3c <__sfp+0x28>
 800ed34:	6833      	ldr	r3, [r6, #0]
 800ed36:	b30b      	cbz	r3, 800ed7c <__sfp+0x68>
 800ed38:	6836      	ldr	r6, [r6, #0]
 800ed3a:	e7f7      	b.n	800ed2c <__sfp+0x18>
 800ed3c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800ed40:	b9d5      	cbnz	r5, 800ed78 <__sfp+0x64>
 800ed42:	4b16      	ldr	r3, [pc, #88]	; (800ed9c <__sfp+0x88>)
 800ed44:	60e3      	str	r3, [r4, #12]
 800ed46:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800ed4a:	6665      	str	r5, [r4, #100]	; 0x64
 800ed4c:	f000 f847 	bl	800edde <__retarget_lock_init_recursive>
 800ed50:	f7ff ff96 	bl	800ec80 <__sfp_lock_release>
 800ed54:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800ed58:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800ed5c:	6025      	str	r5, [r4, #0]
 800ed5e:	61a5      	str	r5, [r4, #24]
 800ed60:	2208      	movs	r2, #8
 800ed62:	4629      	mov	r1, r5
 800ed64:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800ed68:	f7fd fab0 	bl	800c2cc <memset>
 800ed6c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800ed70:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800ed74:	4620      	mov	r0, r4
 800ed76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ed78:	3468      	adds	r4, #104	; 0x68
 800ed7a:	e7d9      	b.n	800ed30 <__sfp+0x1c>
 800ed7c:	2104      	movs	r1, #4
 800ed7e:	4638      	mov	r0, r7
 800ed80:	f7ff ff62 	bl	800ec48 <__sfmoreglue>
 800ed84:	4604      	mov	r4, r0
 800ed86:	6030      	str	r0, [r6, #0]
 800ed88:	2800      	cmp	r0, #0
 800ed8a:	d1d5      	bne.n	800ed38 <__sfp+0x24>
 800ed8c:	f7ff ff78 	bl	800ec80 <__sfp_lock_release>
 800ed90:	230c      	movs	r3, #12
 800ed92:	603b      	str	r3, [r7, #0]
 800ed94:	e7ee      	b.n	800ed74 <__sfp+0x60>
 800ed96:	bf00      	nop
 800ed98:	080106b8 	.word	0x080106b8
 800ed9c:	ffff0001 	.word	0xffff0001

0800eda0 <_fwalk_reent>:
 800eda0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800eda4:	4606      	mov	r6, r0
 800eda6:	4688      	mov	r8, r1
 800eda8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800edac:	2700      	movs	r7, #0
 800edae:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800edb2:	f1b9 0901 	subs.w	r9, r9, #1
 800edb6:	d505      	bpl.n	800edc4 <_fwalk_reent+0x24>
 800edb8:	6824      	ldr	r4, [r4, #0]
 800edba:	2c00      	cmp	r4, #0
 800edbc:	d1f7      	bne.n	800edae <_fwalk_reent+0xe>
 800edbe:	4638      	mov	r0, r7
 800edc0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800edc4:	89ab      	ldrh	r3, [r5, #12]
 800edc6:	2b01      	cmp	r3, #1
 800edc8:	d907      	bls.n	800edda <_fwalk_reent+0x3a>
 800edca:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800edce:	3301      	adds	r3, #1
 800edd0:	d003      	beq.n	800edda <_fwalk_reent+0x3a>
 800edd2:	4629      	mov	r1, r5
 800edd4:	4630      	mov	r0, r6
 800edd6:	47c0      	blx	r8
 800edd8:	4307      	orrs	r7, r0
 800edda:	3568      	adds	r5, #104	; 0x68
 800eddc:	e7e9      	b.n	800edb2 <_fwalk_reent+0x12>

0800edde <__retarget_lock_init_recursive>:
 800edde:	4770      	bx	lr

0800ede0 <__retarget_lock_acquire_recursive>:
 800ede0:	4770      	bx	lr

0800ede2 <__retarget_lock_release_recursive>:
 800ede2:	4770      	bx	lr

0800ede4 <__swhatbuf_r>:
 800ede4:	b570      	push	{r4, r5, r6, lr}
 800ede6:	460e      	mov	r6, r1
 800ede8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800edec:	2900      	cmp	r1, #0
 800edee:	b096      	sub	sp, #88	; 0x58
 800edf0:	4614      	mov	r4, r2
 800edf2:	461d      	mov	r5, r3
 800edf4:	da08      	bge.n	800ee08 <__swhatbuf_r+0x24>
 800edf6:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800edfa:	2200      	movs	r2, #0
 800edfc:	602a      	str	r2, [r5, #0]
 800edfe:	061a      	lsls	r2, r3, #24
 800ee00:	d410      	bmi.n	800ee24 <__swhatbuf_r+0x40>
 800ee02:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800ee06:	e00e      	b.n	800ee26 <__swhatbuf_r+0x42>
 800ee08:	466a      	mov	r2, sp
 800ee0a:	f000 f903 	bl	800f014 <_fstat_r>
 800ee0e:	2800      	cmp	r0, #0
 800ee10:	dbf1      	blt.n	800edf6 <__swhatbuf_r+0x12>
 800ee12:	9a01      	ldr	r2, [sp, #4]
 800ee14:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800ee18:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800ee1c:	425a      	negs	r2, r3
 800ee1e:	415a      	adcs	r2, r3
 800ee20:	602a      	str	r2, [r5, #0]
 800ee22:	e7ee      	b.n	800ee02 <__swhatbuf_r+0x1e>
 800ee24:	2340      	movs	r3, #64	; 0x40
 800ee26:	2000      	movs	r0, #0
 800ee28:	6023      	str	r3, [r4, #0]
 800ee2a:	b016      	add	sp, #88	; 0x58
 800ee2c:	bd70      	pop	{r4, r5, r6, pc}
	...

0800ee30 <__smakebuf_r>:
 800ee30:	898b      	ldrh	r3, [r1, #12]
 800ee32:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ee34:	079d      	lsls	r5, r3, #30
 800ee36:	4606      	mov	r6, r0
 800ee38:	460c      	mov	r4, r1
 800ee3a:	d507      	bpl.n	800ee4c <__smakebuf_r+0x1c>
 800ee3c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800ee40:	6023      	str	r3, [r4, #0]
 800ee42:	6123      	str	r3, [r4, #16]
 800ee44:	2301      	movs	r3, #1
 800ee46:	6163      	str	r3, [r4, #20]
 800ee48:	b002      	add	sp, #8
 800ee4a:	bd70      	pop	{r4, r5, r6, pc}
 800ee4c:	ab01      	add	r3, sp, #4
 800ee4e:	466a      	mov	r2, sp
 800ee50:	f7ff ffc8 	bl	800ede4 <__swhatbuf_r>
 800ee54:	9900      	ldr	r1, [sp, #0]
 800ee56:	4605      	mov	r5, r0
 800ee58:	4630      	mov	r0, r6
 800ee5a:	f7ff f963 	bl	800e124 <_malloc_r>
 800ee5e:	b948      	cbnz	r0, 800ee74 <__smakebuf_r+0x44>
 800ee60:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800ee64:	059a      	lsls	r2, r3, #22
 800ee66:	d4ef      	bmi.n	800ee48 <__smakebuf_r+0x18>
 800ee68:	f023 0303 	bic.w	r3, r3, #3
 800ee6c:	f043 0302 	orr.w	r3, r3, #2
 800ee70:	81a3      	strh	r3, [r4, #12]
 800ee72:	e7e3      	b.n	800ee3c <__smakebuf_r+0xc>
 800ee74:	4b0d      	ldr	r3, [pc, #52]	; (800eeac <__smakebuf_r+0x7c>)
 800ee76:	62b3      	str	r3, [r6, #40]	; 0x28
 800ee78:	89a3      	ldrh	r3, [r4, #12]
 800ee7a:	6020      	str	r0, [r4, #0]
 800ee7c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800ee80:	81a3      	strh	r3, [r4, #12]
 800ee82:	9b00      	ldr	r3, [sp, #0]
 800ee84:	6163      	str	r3, [r4, #20]
 800ee86:	9b01      	ldr	r3, [sp, #4]
 800ee88:	6120      	str	r0, [r4, #16]
 800ee8a:	b15b      	cbz	r3, 800eea4 <__smakebuf_r+0x74>
 800ee8c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800ee90:	4630      	mov	r0, r6
 800ee92:	f000 f8d1 	bl	800f038 <_isatty_r>
 800ee96:	b128      	cbz	r0, 800eea4 <__smakebuf_r+0x74>
 800ee98:	89a3      	ldrh	r3, [r4, #12]
 800ee9a:	f023 0303 	bic.w	r3, r3, #3
 800ee9e:	f043 0301 	orr.w	r3, r3, #1
 800eea2:	81a3      	strh	r3, [r4, #12]
 800eea4:	89a0      	ldrh	r0, [r4, #12]
 800eea6:	4305      	orrs	r5, r0
 800eea8:	81a5      	strh	r5, [r4, #12]
 800eeaa:	e7cd      	b.n	800ee48 <__smakebuf_r+0x18>
 800eeac:	0800ec3d 	.word	0x0800ec3d

0800eeb0 <_malloc_usable_size_r>:
 800eeb0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800eeb4:	1f18      	subs	r0, r3, #4
 800eeb6:	2b00      	cmp	r3, #0
 800eeb8:	bfbc      	itt	lt
 800eeba:	580b      	ldrlt	r3, [r1, r0]
 800eebc:	18c0      	addlt	r0, r0, r3
 800eebe:	4770      	bx	lr

0800eec0 <_raise_r>:
 800eec0:	291f      	cmp	r1, #31
 800eec2:	b538      	push	{r3, r4, r5, lr}
 800eec4:	4604      	mov	r4, r0
 800eec6:	460d      	mov	r5, r1
 800eec8:	d904      	bls.n	800eed4 <_raise_r+0x14>
 800eeca:	2316      	movs	r3, #22
 800eecc:	6003      	str	r3, [r0, #0]
 800eece:	f04f 30ff 	mov.w	r0, #4294967295
 800eed2:	bd38      	pop	{r3, r4, r5, pc}
 800eed4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800eed6:	b112      	cbz	r2, 800eede <_raise_r+0x1e>
 800eed8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800eedc:	b94b      	cbnz	r3, 800eef2 <_raise_r+0x32>
 800eede:	4620      	mov	r0, r4
 800eee0:	f000 f830 	bl	800ef44 <_getpid_r>
 800eee4:	462a      	mov	r2, r5
 800eee6:	4601      	mov	r1, r0
 800eee8:	4620      	mov	r0, r4
 800eeea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800eeee:	f000 b817 	b.w	800ef20 <_kill_r>
 800eef2:	2b01      	cmp	r3, #1
 800eef4:	d00a      	beq.n	800ef0c <_raise_r+0x4c>
 800eef6:	1c59      	adds	r1, r3, #1
 800eef8:	d103      	bne.n	800ef02 <_raise_r+0x42>
 800eefa:	2316      	movs	r3, #22
 800eefc:	6003      	str	r3, [r0, #0]
 800eefe:	2001      	movs	r0, #1
 800ef00:	e7e7      	b.n	800eed2 <_raise_r+0x12>
 800ef02:	2400      	movs	r4, #0
 800ef04:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800ef08:	4628      	mov	r0, r5
 800ef0a:	4798      	blx	r3
 800ef0c:	2000      	movs	r0, #0
 800ef0e:	e7e0      	b.n	800eed2 <_raise_r+0x12>

0800ef10 <raise>:
 800ef10:	4b02      	ldr	r3, [pc, #8]	; (800ef1c <raise+0xc>)
 800ef12:	4601      	mov	r1, r0
 800ef14:	6818      	ldr	r0, [r3, #0]
 800ef16:	f7ff bfd3 	b.w	800eec0 <_raise_r>
 800ef1a:	bf00      	nop
 800ef1c:	200000b0 	.word	0x200000b0

0800ef20 <_kill_r>:
 800ef20:	b538      	push	{r3, r4, r5, lr}
 800ef22:	4d07      	ldr	r5, [pc, #28]	; (800ef40 <_kill_r+0x20>)
 800ef24:	2300      	movs	r3, #0
 800ef26:	4604      	mov	r4, r0
 800ef28:	4608      	mov	r0, r1
 800ef2a:	4611      	mov	r1, r2
 800ef2c:	602b      	str	r3, [r5, #0]
 800ef2e:	f7f7 fb7d 	bl	800662c <_kill>
 800ef32:	1c43      	adds	r3, r0, #1
 800ef34:	d102      	bne.n	800ef3c <_kill_r+0x1c>
 800ef36:	682b      	ldr	r3, [r5, #0]
 800ef38:	b103      	cbz	r3, 800ef3c <_kill_r+0x1c>
 800ef3a:	6023      	str	r3, [r4, #0]
 800ef3c:	bd38      	pop	{r3, r4, r5, pc}
 800ef3e:	bf00      	nop
 800ef40:	20000ba4 	.word	0x20000ba4

0800ef44 <_getpid_r>:
 800ef44:	f7f7 bb6a 	b.w	800661c <_getpid>

0800ef48 <__sread>:
 800ef48:	b510      	push	{r4, lr}
 800ef4a:	460c      	mov	r4, r1
 800ef4c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800ef50:	f000 f894 	bl	800f07c <_read_r>
 800ef54:	2800      	cmp	r0, #0
 800ef56:	bfab      	itete	ge
 800ef58:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800ef5a:	89a3      	ldrhlt	r3, [r4, #12]
 800ef5c:	181b      	addge	r3, r3, r0
 800ef5e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800ef62:	bfac      	ite	ge
 800ef64:	6563      	strge	r3, [r4, #84]	; 0x54
 800ef66:	81a3      	strhlt	r3, [r4, #12]
 800ef68:	bd10      	pop	{r4, pc}

0800ef6a <__swrite>:
 800ef6a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ef6e:	461f      	mov	r7, r3
 800ef70:	898b      	ldrh	r3, [r1, #12]
 800ef72:	05db      	lsls	r3, r3, #23
 800ef74:	4605      	mov	r5, r0
 800ef76:	460c      	mov	r4, r1
 800ef78:	4616      	mov	r6, r2
 800ef7a:	d505      	bpl.n	800ef88 <__swrite+0x1e>
 800ef7c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800ef80:	2302      	movs	r3, #2
 800ef82:	2200      	movs	r2, #0
 800ef84:	f000 f868 	bl	800f058 <_lseek_r>
 800ef88:	89a3      	ldrh	r3, [r4, #12]
 800ef8a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800ef8e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800ef92:	81a3      	strh	r3, [r4, #12]
 800ef94:	4632      	mov	r2, r6
 800ef96:	463b      	mov	r3, r7
 800ef98:	4628      	mov	r0, r5
 800ef9a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ef9e:	f000 b817 	b.w	800efd0 <_write_r>

0800efa2 <__sseek>:
 800efa2:	b510      	push	{r4, lr}
 800efa4:	460c      	mov	r4, r1
 800efa6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800efaa:	f000 f855 	bl	800f058 <_lseek_r>
 800efae:	1c43      	adds	r3, r0, #1
 800efb0:	89a3      	ldrh	r3, [r4, #12]
 800efb2:	bf15      	itete	ne
 800efb4:	6560      	strne	r0, [r4, #84]	; 0x54
 800efb6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800efba:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800efbe:	81a3      	strheq	r3, [r4, #12]
 800efc0:	bf18      	it	ne
 800efc2:	81a3      	strhne	r3, [r4, #12]
 800efc4:	bd10      	pop	{r4, pc}

0800efc6 <__sclose>:
 800efc6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800efca:	f000 b813 	b.w	800eff4 <_close_r>
	...

0800efd0 <_write_r>:
 800efd0:	b538      	push	{r3, r4, r5, lr}
 800efd2:	4d07      	ldr	r5, [pc, #28]	; (800eff0 <_write_r+0x20>)
 800efd4:	4604      	mov	r4, r0
 800efd6:	4608      	mov	r0, r1
 800efd8:	4611      	mov	r1, r2
 800efda:	2200      	movs	r2, #0
 800efdc:	602a      	str	r2, [r5, #0]
 800efde:	461a      	mov	r2, r3
 800efe0:	f7f7 fb5b 	bl	800669a <_write>
 800efe4:	1c43      	adds	r3, r0, #1
 800efe6:	d102      	bne.n	800efee <_write_r+0x1e>
 800efe8:	682b      	ldr	r3, [r5, #0]
 800efea:	b103      	cbz	r3, 800efee <_write_r+0x1e>
 800efec:	6023      	str	r3, [r4, #0]
 800efee:	bd38      	pop	{r3, r4, r5, pc}
 800eff0:	20000ba4 	.word	0x20000ba4

0800eff4 <_close_r>:
 800eff4:	b538      	push	{r3, r4, r5, lr}
 800eff6:	4d06      	ldr	r5, [pc, #24]	; (800f010 <_close_r+0x1c>)
 800eff8:	2300      	movs	r3, #0
 800effa:	4604      	mov	r4, r0
 800effc:	4608      	mov	r0, r1
 800effe:	602b      	str	r3, [r5, #0]
 800f000:	f7f7 fb67 	bl	80066d2 <_close>
 800f004:	1c43      	adds	r3, r0, #1
 800f006:	d102      	bne.n	800f00e <_close_r+0x1a>
 800f008:	682b      	ldr	r3, [r5, #0]
 800f00a:	b103      	cbz	r3, 800f00e <_close_r+0x1a>
 800f00c:	6023      	str	r3, [r4, #0]
 800f00e:	bd38      	pop	{r3, r4, r5, pc}
 800f010:	20000ba4 	.word	0x20000ba4

0800f014 <_fstat_r>:
 800f014:	b538      	push	{r3, r4, r5, lr}
 800f016:	4d07      	ldr	r5, [pc, #28]	; (800f034 <_fstat_r+0x20>)
 800f018:	2300      	movs	r3, #0
 800f01a:	4604      	mov	r4, r0
 800f01c:	4608      	mov	r0, r1
 800f01e:	4611      	mov	r1, r2
 800f020:	602b      	str	r3, [r5, #0]
 800f022:	f7f7 fb62 	bl	80066ea <_fstat>
 800f026:	1c43      	adds	r3, r0, #1
 800f028:	d102      	bne.n	800f030 <_fstat_r+0x1c>
 800f02a:	682b      	ldr	r3, [r5, #0]
 800f02c:	b103      	cbz	r3, 800f030 <_fstat_r+0x1c>
 800f02e:	6023      	str	r3, [r4, #0]
 800f030:	bd38      	pop	{r3, r4, r5, pc}
 800f032:	bf00      	nop
 800f034:	20000ba4 	.word	0x20000ba4

0800f038 <_isatty_r>:
 800f038:	b538      	push	{r3, r4, r5, lr}
 800f03a:	4d06      	ldr	r5, [pc, #24]	; (800f054 <_isatty_r+0x1c>)
 800f03c:	2300      	movs	r3, #0
 800f03e:	4604      	mov	r4, r0
 800f040:	4608      	mov	r0, r1
 800f042:	602b      	str	r3, [r5, #0]
 800f044:	f7f7 fb61 	bl	800670a <_isatty>
 800f048:	1c43      	adds	r3, r0, #1
 800f04a:	d102      	bne.n	800f052 <_isatty_r+0x1a>
 800f04c:	682b      	ldr	r3, [r5, #0]
 800f04e:	b103      	cbz	r3, 800f052 <_isatty_r+0x1a>
 800f050:	6023      	str	r3, [r4, #0]
 800f052:	bd38      	pop	{r3, r4, r5, pc}
 800f054:	20000ba4 	.word	0x20000ba4

0800f058 <_lseek_r>:
 800f058:	b538      	push	{r3, r4, r5, lr}
 800f05a:	4d07      	ldr	r5, [pc, #28]	; (800f078 <_lseek_r+0x20>)
 800f05c:	4604      	mov	r4, r0
 800f05e:	4608      	mov	r0, r1
 800f060:	4611      	mov	r1, r2
 800f062:	2200      	movs	r2, #0
 800f064:	602a      	str	r2, [r5, #0]
 800f066:	461a      	mov	r2, r3
 800f068:	f7f7 fb5a 	bl	8006720 <_lseek>
 800f06c:	1c43      	adds	r3, r0, #1
 800f06e:	d102      	bne.n	800f076 <_lseek_r+0x1e>
 800f070:	682b      	ldr	r3, [r5, #0]
 800f072:	b103      	cbz	r3, 800f076 <_lseek_r+0x1e>
 800f074:	6023      	str	r3, [r4, #0]
 800f076:	bd38      	pop	{r3, r4, r5, pc}
 800f078:	20000ba4 	.word	0x20000ba4

0800f07c <_read_r>:
 800f07c:	b538      	push	{r3, r4, r5, lr}
 800f07e:	4d07      	ldr	r5, [pc, #28]	; (800f09c <_read_r+0x20>)
 800f080:	4604      	mov	r4, r0
 800f082:	4608      	mov	r0, r1
 800f084:	4611      	mov	r1, r2
 800f086:	2200      	movs	r2, #0
 800f088:	602a      	str	r2, [r5, #0]
 800f08a:	461a      	mov	r2, r3
 800f08c:	f7f7 fae8 	bl	8006660 <_read>
 800f090:	1c43      	adds	r3, r0, #1
 800f092:	d102      	bne.n	800f09a <_read_r+0x1e>
 800f094:	682b      	ldr	r3, [r5, #0]
 800f096:	b103      	cbz	r3, 800f09a <_read_r+0x1e>
 800f098:	6023      	str	r3, [r4, #0]
 800f09a:	bd38      	pop	{r3, r4, r5, pc}
 800f09c:	20000ba4 	.word	0x20000ba4

0800f0a0 <atan>:
 800f0a0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f0a4:	ec55 4b10 	vmov	r4, r5, d0
 800f0a8:	4bc3      	ldr	r3, [pc, #780]	; (800f3b8 <atan+0x318>)
 800f0aa:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 800f0ae:	429e      	cmp	r6, r3
 800f0b0:	46ab      	mov	fp, r5
 800f0b2:	dd18      	ble.n	800f0e6 <atan+0x46>
 800f0b4:	4bc1      	ldr	r3, [pc, #772]	; (800f3bc <atan+0x31c>)
 800f0b6:	429e      	cmp	r6, r3
 800f0b8:	dc01      	bgt.n	800f0be <atan+0x1e>
 800f0ba:	d109      	bne.n	800f0d0 <atan+0x30>
 800f0bc:	b144      	cbz	r4, 800f0d0 <atan+0x30>
 800f0be:	4622      	mov	r2, r4
 800f0c0:	462b      	mov	r3, r5
 800f0c2:	4620      	mov	r0, r4
 800f0c4:	4629      	mov	r1, r5
 800f0c6:	f7f1 f901 	bl	80002cc <__adddf3>
 800f0ca:	4604      	mov	r4, r0
 800f0cc:	460d      	mov	r5, r1
 800f0ce:	e006      	b.n	800f0de <atan+0x3e>
 800f0d0:	f1bb 0f00 	cmp.w	fp, #0
 800f0d4:	f300 8131 	bgt.w	800f33a <atan+0x29a>
 800f0d8:	a59b      	add	r5, pc, #620	; (adr r5, 800f348 <atan+0x2a8>)
 800f0da:	e9d5 4500 	ldrd	r4, r5, [r5]
 800f0de:	ec45 4b10 	vmov	d0, r4, r5
 800f0e2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f0e6:	4bb6      	ldr	r3, [pc, #728]	; (800f3c0 <atan+0x320>)
 800f0e8:	429e      	cmp	r6, r3
 800f0ea:	dc14      	bgt.n	800f116 <atan+0x76>
 800f0ec:	f1a3 73de 	sub.w	r3, r3, #29097984	; 0x1bc0000
 800f0f0:	429e      	cmp	r6, r3
 800f0f2:	dc0d      	bgt.n	800f110 <atan+0x70>
 800f0f4:	a396      	add	r3, pc, #600	; (adr r3, 800f350 <atan+0x2b0>)
 800f0f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f0fa:	ee10 0a10 	vmov	r0, s0
 800f0fe:	4629      	mov	r1, r5
 800f100:	f7f1 f8e4 	bl	80002cc <__adddf3>
 800f104:	4baf      	ldr	r3, [pc, #700]	; (800f3c4 <atan+0x324>)
 800f106:	2200      	movs	r2, #0
 800f108:	f7f1 fd26 	bl	8000b58 <__aeabi_dcmpgt>
 800f10c:	2800      	cmp	r0, #0
 800f10e:	d1e6      	bne.n	800f0de <atan+0x3e>
 800f110:	f04f 3aff 	mov.w	sl, #4294967295
 800f114:	e02b      	b.n	800f16e <atan+0xce>
 800f116:	f000 f963 	bl	800f3e0 <fabs>
 800f11a:	4bab      	ldr	r3, [pc, #684]	; (800f3c8 <atan+0x328>)
 800f11c:	429e      	cmp	r6, r3
 800f11e:	ec55 4b10 	vmov	r4, r5, d0
 800f122:	f300 80bf 	bgt.w	800f2a4 <atan+0x204>
 800f126:	f5a3 2350 	sub.w	r3, r3, #851968	; 0xd0000
 800f12a:	429e      	cmp	r6, r3
 800f12c:	f300 80a0 	bgt.w	800f270 <atan+0x1d0>
 800f130:	ee10 2a10 	vmov	r2, s0
 800f134:	ee10 0a10 	vmov	r0, s0
 800f138:	462b      	mov	r3, r5
 800f13a:	4629      	mov	r1, r5
 800f13c:	f7f1 f8c6 	bl	80002cc <__adddf3>
 800f140:	4ba0      	ldr	r3, [pc, #640]	; (800f3c4 <atan+0x324>)
 800f142:	2200      	movs	r2, #0
 800f144:	f7f1 f8c0 	bl	80002c8 <__aeabi_dsub>
 800f148:	2200      	movs	r2, #0
 800f14a:	4606      	mov	r6, r0
 800f14c:	460f      	mov	r7, r1
 800f14e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800f152:	4620      	mov	r0, r4
 800f154:	4629      	mov	r1, r5
 800f156:	f7f1 f8b9 	bl	80002cc <__adddf3>
 800f15a:	4602      	mov	r2, r0
 800f15c:	460b      	mov	r3, r1
 800f15e:	4630      	mov	r0, r6
 800f160:	4639      	mov	r1, r7
 800f162:	f7f1 fb93 	bl	800088c <__aeabi_ddiv>
 800f166:	f04f 0a00 	mov.w	sl, #0
 800f16a:	4604      	mov	r4, r0
 800f16c:	460d      	mov	r5, r1
 800f16e:	4622      	mov	r2, r4
 800f170:	462b      	mov	r3, r5
 800f172:	4620      	mov	r0, r4
 800f174:	4629      	mov	r1, r5
 800f176:	f7f1 fa5f 	bl	8000638 <__aeabi_dmul>
 800f17a:	4602      	mov	r2, r0
 800f17c:	460b      	mov	r3, r1
 800f17e:	4680      	mov	r8, r0
 800f180:	4689      	mov	r9, r1
 800f182:	f7f1 fa59 	bl	8000638 <__aeabi_dmul>
 800f186:	a374      	add	r3, pc, #464	; (adr r3, 800f358 <atan+0x2b8>)
 800f188:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f18c:	4606      	mov	r6, r0
 800f18e:	460f      	mov	r7, r1
 800f190:	f7f1 fa52 	bl	8000638 <__aeabi_dmul>
 800f194:	a372      	add	r3, pc, #456	; (adr r3, 800f360 <atan+0x2c0>)
 800f196:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f19a:	f7f1 f897 	bl	80002cc <__adddf3>
 800f19e:	4632      	mov	r2, r6
 800f1a0:	463b      	mov	r3, r7
 800f1a2:	f7f1 fa49 	bl	8000638 <__aeabi_dmul>
 800f1a6:	a370      	add	r3, pc, #448	; (adr r3, 800f368 <atan+0x2c8>)
 800f1a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f1ac:	f7f1 f88e 	bl	80002cc <__adddf3>
 800f1b0:	4632      	mov	r2, r6
 800f1b2:	463b      	mov	r3, r7
 800f1b4:	f7f1 fa40 	bl	8000638 <__aeabi_dmul>
 800f1b8:	a36d      	add	r3, pc, #436	; (adr r3, 800f370 <atan+0x2d0>)
 800f1ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f1be:	f7f1 f885 	bl	80002cc <__adddf3>
 800f1c2:	4632      	mov	r2, r6
 800f1c4:	463b      	mov	r3, r7
 800f1c6:	f7f1 fa37 	bl	8000638 <__aeabi_dmul>
 800f1ca:	a36b      	add	r3, pc, #428	; (adr r3, 800f378 <atan+0x2d8>)
 800f1cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f1d0:	f7f1 f87c 	bl	80002cc <__adddf3>
 800f1d4:	4632      	mov	r2, r6
 800f1d6:	463b      	mov	r3, r7
 800f1d8:	f7f1 fa2e 	bl	8000638 <__aeabi_dmul>
 800f1dc:	a368      	add	r3, pc, #416	; (adr r3, 800f380 <atan+0x2e0>)
 800f1de:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f1e2:	f7f1 f873 	bl	80002cc <__adddf3>
 800f1e6:	4642      	mov	r2, r8
 800f1e8:	464b      	mov	r3, r9
 800f1ea:	f7f1 fa25 	bl	8000638 <__aeabi_dmul>
 800f1ee:	a366      	add	r3, pc, #408	; (adr r3, 800f388 <atan+0x2e8>)
 800f1f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f1f4:	4680      	mov	r8, r0
 800f1f6:	4689      	mov	r9, r1
 800f1f8:	4630      	mov	r0, r6
 800f1fa:	4639      	mov	r1, r7
 800f1fc:	f7f1 fa1c 	bl	8000638 <__aeabi_dmul>
 800f200:	a363      	add	r3, pc, #396	; (adr r3, 800f390 <atan+0x2f0>)
 800f202:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f206:	f7f1 f85f 	bl	80002c8 <__aeabi_dsub>
 800f20a:	4632      	mov	r2, r6
 800f20c:	463b      	mov	r3, r7
 800f20e:	f7f1 fa13 	bl	8000638 <__aeabi_dmul>
 800f212:	a361      	add	r3, pc, #388	; (adr r3, 800f398 <atan+0x2f8>)
 800f214:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f218:	f7f1 f856 	bl	80002c8 <__aeabi_dsub>
 800f21c:	4632      	mov	r2, r6
 800f21e:	463b      	mov	r3, r7
 800f220:	f7f1 fa0a 	bl	8000638 <__aeabi_dmul>
 800f224:	a35e      	add	r3, pc, #376	; (adr r3, 800f3a0 <atan+0x300>)
 800f226:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f22a:	f7f1 f84d 	bl	80002c8 <__aeabi_dsub>
 800f22e:	4632      	mov	r2, r6
 800f230:	463b      	mov	r3, r7
 800f232:	f7f1 fa01 	bl	8000638 <__aeabi_dmul>
 800f236:	a35c      	add	r3, pc, #368	; (adr r3, 800f3a8 <atan+0x308>)
 800f238:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f23c:	f7f1 f844 	bl	80002c8 <__aeabi_dsub>
 800f240:	4632      	mov	r2, r6
 800f242:	463b      	mov	r3, r7
 800f244:	f7f1 f9f8 	bl	8000638 <__aeabi_dmul>
 800f248:	4602      	mov	r2, r0
 800f24a:	460b      	mov	r3, r1
 800f24c:	4640      	mov	r0, r8
 800f24e:	4649      	mov	r1, r9
 800f250:	f7f1 f83c 	bl	80002cc <__adddf3>
 800f254:	4622      	mov	r2, r4
 800f256:	462b      	mov	r3, r5
 800f258:	f7f1 f9ee 	bl	8000638 <__aeabi_dmul>
 800f25c:	f1ba 3fff 	cmp.w	sl, #4294967295
 800f260:	4602      	mov	r2, r0
 800f262:	460b      	mov	r3, r1
 800f264:	d14b      	bne.n	800f2fe <atan+0x25e>
 800f266:	4620      	mov	r0, r4
 800f268:	4629      	mov	r1, r5
 800f26a:	f7f1 f82d 	bl	80002c8 <__aeabi_dsub>
 800f26e:	e72c      	b.n	800f0ca <atan+0x2a>
 800f270:	ee10 0a10 	vmov	r0, s0
 800f274:	4b53      	ldr	r3, [pc, #332]	; (800f3c4 <atan+0x324>)
 800f276:	2200      	movs	r2, #0
 800f278:	4629      	mov	r1, r5
 800f27a:	f7f1 f825 	bl	80002c8 <__aeabi_dsub>
 800f27e:	4b51      	ldr	r3, [pc, #324]	; (800f3c4 <atan+0x324>)
 800f280:	4606      	mov	r6, r0
 800f282:	460f      	mov	r7, r1
 800f284:	2200      	movs	r2, #0
 800f286:	4620      	mov	r0, r4
 800f288:	4629      	mov	r1, r5
 800f28a:	f7f1 f81f 	bl	80002cc <__adddf3>
 800f28e:	4602      	mov	r2, r0
 800f290:	460b      	mov	r3, r1
 800f292:	4630      	mov	r0, r6
 800f294:	4639      	mov	r1, r7
 800f296:	f7f1 faf9 	bl	800088c <__aeabi_ddiv>
 800f29a:	f04f 0a01 	mov.w	sl, #1
 800f29e:	4604      	mov	r4, r0
 800f2a0:	460d      	mov	r5, r1
 800f2a2:	e764      	b.n	800f16e <atan+0xce>
 800f2a4:	4b49      	ldr	r3, [pc, #292]	; (800f3cc <atan+0x32c>)
 800f2a6:	429e      	cmp	r6, r3
 800f2a8:	da1d      	bge.n	800f2e6 <atan+0x246>
 800f2aa:	ee10 0a10 	vmov	r0, s0
 800f2ae:	4b48      	ldr	r3, [pc, #288]	; (800f3d0 <atan+0x330>)
 800f2b0:	2200      	movs	r2, #0
 800f2b2:	4629      	mov	r1, r5
 800f2b4:	f7f1 f808 	bl	80002c8 <__aeabi_dsub>
 800f2b8:	4b45      	ldr	r3, [pc, #276]	; (800f3d0 <atan+0x330>)
 800f2ba:	4606      	mov	r6, r0
 800f2bc:	460f      	mov	r7, r1
 800f2be:	2200      	movs	r2, #0
 800f2c0:	4620      	mov	r0, r4
 800f2c2:	4629      	mov	r1, r5
 800f2c4:	f7f1 f9b8 	bl	8000638 <__aeabi_dmul>
 800f2c8:	4b3e      	ldr	r3, [pc, #248]	; (800f3c4 <atan+0x324>)
 800f2ca:	2200      	movs	r2, #0
 800f2cc:	f7f0 fffe 	bl	80002cc <__adddf3>
 800f2d0:	4602      	mov	r2, r0
 800f2d2:	460b      	mov	r3, r1
 800f2d4:	4630      	mov	r0, r6
 800f2d6:	4639      	mov	r1, r7
 800f2d8:	f7f1 fad8 	bl	800088c <__aeabi_ddiv>
 800f2dc:	f04f 0a02 	mov.w	sl, #2
 800f2e0:	4604      	mov	r4, r0
 800f2e2:	460d      	mov	r5, r1
 800f2e4:	e743      	b.n	800f16e <atan+0xce>
 800f2e6:	462b      	mov	r3, r5
 800f2e8:	ee10 2a10 	vmov	r2, s0
 800f2ec:	4939      	ldr	r1, [pc, #228]	; (800f3d4 <atan+0x334>)
 800f2ee:	2000      	movs	r0, #0
 800f2f0:	f7f1 facc 	bl	800088c <__aeabi_ddiv>
 800f2f4:	f04f 0a03 	mov.w	sl, #3
 800f2f8:	4604      	mov	r4, r0
 800f2fa:	460d      	mov	r5, r1
 800f2fc:	e737      	b.n	800f16e <atan+0xce>
 800f2fe:	4b36      	ldr	r3, [pc, #216]	; (800f3d8 <atan+0x338>)
 800f300:	4e36      	ldr	r6, [pc, #216]	; (800f3dc <atan+0x33c>)
 800f302:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 800f306:	eb03 0aca 	add.w	sl, r3, sl, lsl #3
 800f30a:	e9da 2300 	ldrd	r2, r3, [sl]
 800f30e:	f7f0 ffdb 	bl	80002c8 <__aeabi_dsub>
 800f312:	4622      	mov	r2, r4
 800f314:	462b      	mov	r3, r5
 800f316:	f7f0 ffd7 	bl	80002c8 <__aeabi_dsub>
 800f31a:	4602      	mov	r2, r0
 800f31c:	460b      	mov	r3, r1
 800f31e:	e9d6 0100 	ldrd	r0, r1, [r6]
 800f322:	f7f0 ffd1 	bl	80002c8 <__aeabi_dsub>
 800f326:	f1bb 0f00 	cmp.w	fp, #0
 800f32a:	4604      	mov	r4, r0
 800f32c:	460d      	mov	r5, r1
 800f32e:	f6bf aed6 	bge.w	800f0de <atan+0x3e>
 800f332:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800f336:	461d      	mov	r5, r3
 800f338:	e6d1      	b.n	800f0de <atan+0x3e>
 800f33a:	a51d      	add	r5, pc, #116	; (adr r5, 800f3b0 <atan+0x310>)
 800f33c:	e9d5 4500 	ldrd	r4, r5, [r5]
 800f340:	e6cd      	b.n	800f0de <atan+0x3e>
 800f342:	bf00      	nop
 800f344:	f3af 8000 	nop.w
 800f348:	54442d18 	.word	0x54442d18
 800f34c:	bff921fb 	.word	0xbff921fb
 800f350:	8800759c 	.word	0x8800759c
 800f354:	7e37e43c 	.word	0x7e37e43c
 800f358:	e322da11 	.word	0xe322da11
 800f35c:	3f90ad3a 	.word	0x3f90ad3a
 800f360:	24760deb 	.word	0x24760deb
 800f364:	3fa97b4b 	.word	0x3fa97b4b
 800f368:	a0d03d51 	.word	0xa0d03d51
 800f36c:	3fb10d66 	.word	0x3fb10d66
 800f370:	c54c206e 	.word	0xc54c206e
 800f374:	3fb745cd 	.word	0x3fb745cd
 800f378:	920083ff 	.word	0x920083ff
 800f37c:	3fc24924 	.word	0x3fc24924
 800f380:	5555550d 	.word	0x5555550d
 800f384:	3fd55555 	.word	0x3fd55555
 800f388:	2c6a6c2f 	.word	0x2c6a6c2f
 800f38c:	bfa2b444 	.word	0xbfa2b444
 800f390:	52defd9a 	.word	0x52defd9a
 800f394:	3fadde2d 	.word	0x3fadde2d
 800f398:	af749a6d 	.word	0xaf749a6d
 800f39c:	3fb3b0f2 	.word	0x3fb3b0f2
 800f3a0:	fe231671 	.word	0xfe231671
 800f3a4:	3fbc71c6 	.word	0x3fbc71c6
 800f3a8:	9998ebc4 	.word	0x9998ebc4
 800f3ac:	3fc99999 	.word	0x3fc99999
 800f3b0:	54442d18 	.word	0x54442d18
 800f3b4:	3ff921fb 	.word	0x3ff921fb
 800f3b8:	440fffff 	.word	0x440fffff
 800f3bc:	7ff00000 	.word	0x7ff00000
 800f3c0:	3fdbffff 	.word	0x3fdbffff
 800f3c4:	3ff00000 	.word	0x3ff00000
 800f3c8:	3ff2ffff 	.word	0x3ff2ffff
 800f3cc:	40038000 	.word	0x40038000
 800f3d0:	3ff80000 	.word	0x3ff80000
 800f3d4:	bff00000 	.word	0xbff00000
 800f3d8:	08010ab8 	.word	0x08010ab8
 800f3dc:	08010a98 	.word	0x08010a98

0800f3e0 <fabs>:
 800f3e0:	ec51 0b10 	vmov	r0, r1, d0
 800f3e4:	ee10 2a10 	vmov	r2, s0
 800f3e8:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 800f3ec:	ec43 2b10 	vmov	d0, r2, r3
 800f3f0:	4770      	bx	lr
 800f3f2:	0000      	movs	r0, r0
 800f3f4:	0000      	movs	r0, r0
	...

0800f3f8 <tan>:
 800f3f8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f3fa:	ec53 2b10 	vmov	r2, r3, d0
 800f3fe:	4816      	ldr	r0, [pc, #88]	; (800f458 <tan+0x60>)
 800f400:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 800f404:	4281      	cmp	r1, r0
 800f406:	dc07      	bgt.n	800f418 <tan+0x20>
 800f408:	ed9f 1b11 	vldr	d1, [pc, #68]	; 800f450 <tan+0x58>
 800f40c:	2001      	movs	r0, #1
 800f40e:	b005      	add	sp, #20
 800f410:	f85d eb04 	ldr.w	lr, [sp], #4
 800f414:	f000 bd80 	b.w	800ff18 <__kernel_tan>
 800f418:	4810      	ldr	r0, [pc, #64]	; (800f45c <tan+0x64>)
 800f41a:	4281      	cmp	r1, r0
 800f41c:	dd09      	ble.n	800f432 <tan+0x3a>
 800f41e:	ee10 0a10 	vmov	r0, s0
 800f422:	4619      	mov	r1, r3
 800f424:	f7f0 ff50 	bl	80002c8 <__aeabi_dsub>
 800f428:	ec41 0b10 	vmov	d0, r0, r1
 800f42c:	b005      	add	sp, #20
 800f42e:	f85d fb04 	ldr.w	pc, [sp], #4
 800f432:	4668      	mov	r0, sp
 800f434:	f000 f814 	bl	800f460 <__ieee754_rem_pio2>
 800f438:	0040      	lsls	r0, r0, #1
 800f43a:	f000 0002 	and.w	r0, r0, #2
 800f43e:	ed9d 1b02 	vldr	d1, [sp, #8]
 800f442:	ed9d 0b00 	vldr	d0, [sp]
 800f446:	f1c0 0001 	rsb	r0, r0, #1
 800f44a:	f000 fd65 	bl	800ff18 <__kernel_tan>
 800f44e:	e7ed      	b.n	800f42c <tan+0x34>
	...
 800f458:	3fe921fb 	.word	0x3fe921fb
 800f45c:	7fefffff 	.word	0x7fefffff

0800f460 <__ieee754_rem_pio2>:
 800f460:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f464:	ed2d 8b02 	vpush	{d8}
 800f468:	ec55 4b10 	vmov	r4, r5, d0
 800f46c:	4bca      	ldr	r3, [pc, #808]	; (800f798 <__ieee754_rem_pio2+0x338>)
 800f46e:	b08b      	sub	sp, #44	; 0x2c
 800f470:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 800f474:	4598      	cmp	r8, r3
 800f476:	4682      	mov	sl, r0
 800f478:	9502      	str	r5, [sp, #8]
 800f47a:	dc08      	bgt.n	800f48e <__ieee754_rem_pio2+0x2e>
 800f47c:	2200      	movs	r2, #0
 800f47e:	2300      	movs	r3, #0
 800f480:	ed80 0b00 	vstr	d0, [r0]
 800f484:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800f488:	f04f 0b00 	mov.w	fp, #0
 800f48c:	e028      	b.n	800f4e0 <__ieee754_rem_pio2+0x80>
 800f48e:	4bc3      	ldr	r3, [pc, #780]	; (800f79c <__ieee754_rem_pio2+0x33c>)
 800f490:	4598      	cmp	r8, r3
 800f492:	dc78      	bgt.n	800f586 <__ieee754_rem_pio2+0x126>
 800f494:	9b02      	ldr	r3, [sp, #8]
 800f496:	4ec2      	ldr	r6, [pc, #776]	; (800f7a0 <__ieee754_rem_pio2+0x340>)
 800f498:	2b00      	cmp	r3, #0
 800f49a:	ee10 0a10 	vmov	r0, s0
 800f49e:	a3b0      	add	r3, pc, #704	; (adr r3, 800f760 <__ieee754_rem_pio2+0x300>)
 800f4a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f4a4:	4629      	mov	r1, r5
 800f4a6:	dd39      	ble.n	800f51c <__ieee754_rem_pio2+0xbc>
 800f4a8:	f7f0 ff0e 	bl	80002c8 <__aeabi_dsub>
 800f4ac:	45b0      	cmp	r8, r6
 800f4ae:	4604      	mov	r4, r0
 800f4b0:	460d      	mov	r5, r1
 800f4b2:	d01b      	beq.n	800f4ec <__ieee754_rem_pio2+0x8c>
 800f4b4:	a3ac      	add	r3, pc, #688	; (adr r3, 800f768 <__ieee754_rem_pio2+0x308>)
 800f4b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f4ba:	f7f0 ff05 	bl	80002c8 <__aeabi_dsub>
 800f4be:	4602      	mov	r2, r0
 800f4c0:	460b      	mov	r3, r1
 800f4c2:	e9ca 2300 	strd	r2, r3, [sl]
 800f4c6:	4620      	mov	r0, r4
 800f4c8:	4629      	mov	r1, r5
 800f4ca:	f7f0 fefd 	bl	80002c8 <__aeabi_dsub>
 800f4ce:	a3a6      	add	r3, pc, #664	; (adr r3, 800f768 <__ieee754_rem_pio2+0x308>)
 800f4d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f4d4:	f7f0 fef8 	bl	80002c8 <__aeabi_dsub>
 800f4d8:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800f4dc:	f04f 0b01 	mov.w	fp, #1
 800f4e0:	4658      	mov	r0, fp
 800f4e2:	b00b      	add	sp, #44	; 0x2c
 800f4e4:	ecbd 8b02 	vpop	{d8}
 800f4e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f4ec:	a3a0      	add	r3, pc, #640	; (adr r3, 800f770 <__ieee754_rem_pio2+0x310>)
 800f4ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f4f2:	f7f0 fee9 	bl	80002c8 <__aeabi_dsub>
 800f4f6:	a3a0      	add	r3, pc, #640	; (adr r3, 800f778 <__ieee754_rem_pio2+0x318>)
 800f4f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f4fc:	4604      	mov	r4, r0
 800f4fe:	460d      	mov	r5, r1
 800f500:	f7f0 fee2 	bl	80002c8 <__aeabi_dsub>
 800f504:	4602      	mov	r2, r0
 800f506:	460b      	mov	r3, r1
 800f508:	e9ca 2300 	strd	r2, r3, [sl]
 800f50c:	4620      	mov	r0, r4
 800f50e:	4629      	mov	r1, r5
 800f510:	f7f0 feda 	bl	80002c8 <__aeabi_dsub>
 800f514:	a398      	add	r3, pc, #608	; (adr r3, 800f778 <__ieee754_rem_pio2+0x318>)
 800f516:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f51a:	e7db      	b.n	800f4d4 <__ieee754_rem_pio2+0x74>
 800f51c:	f7f0 fed6 	bl	80002cc <__adddf3>
 800f520:	45b0      	cmp	r8, r6
 800f522:	4604      	mov	r4, r0
 800f524:	460d      	mov	r5, r1
 800f526:	d016      	beq.n	800f556 <__ieee754_rem_pio2+0xf6>
 800f528:	a38f      	add	r3, pc, #572	; (adr r3, 800f768 <__ieee754_rem_pio2+0x308>)
 800f52a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f52e:	f7f0 fecd 	bl	80002cc <__adddf3>
 800f532:	4602      	mov	r2, r0
 800f534:	460b      	mov	r3, r1
 800f536:	e9ca 2300 	strd	r2, r3, [sl]
 800f53a:	4620      	mov	r0, r4
 800f53c:	4629      	mov	r1, r5
 800f53e:	f7f0 fec3 	bl	80002c8 <__aeabi_dsub>
 800f542:	a389      	add	r3, pc, #548	; (adr r3, 800f768 <__ieee754_rem_pio2+0x308>)
 800f544:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f548:	f7f0 fec0 	bl	80002cc <__adddf3>
 800f54c:	f04f 3bff 	mov.w	fp, #4294967295
 800f550:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800f554:	e7c4      	b.n	800f4e0 <__ieee754_rem_pio2+0x80>
 800f556:	a386      	add	r3, pc, #536	; (adr r3, 800f770 <__ieee754_rem_pio2+0x310>)
 800f558:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f55c:	f7f0 feb6 	bl	80002cc <__adddf3>
 800f560:	a385      	add	r3, pc, #532	; (adr r3, 800f778 <__ieee754_rem_pio2+0x318>)
 800f562:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f566:	4604      	mov	r4, r0
 800f568:	460d      	mov	r5, r1
 800f56a:	f7f0 feaf 	bl	80002cc <__adddf3>
 800f56e:	4602      	mov	r2, r0
 800f570:	460b      	mov	r3, r1
 800f572:	e9ca 2300 	strd	r2, r3, [sl]
 800f576:	4620      	mov	r0, r4
 800f578:	4629      	mov	r1, r5
 800f57a:	f7f0 fea5 	bl	80002c8 <__aeabi_dsub>
 800f57e:	a37e      	add	r3, pc, #504	; (adr r3, 800f778 <__ieee754_rem_pio2+0x318>)
 800f580:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f584:	e7e0      	b.n	800f548 <__ieee754_rem_pio2+0xe8>
 800f586:	4b87      	ldr	r3, [pc, #540]	; (800f7a4 <__ieee754_rem_pio2+0x344>)
 800f588:	4598      	cmp	r8, r3
 800f58a:	f300 80d9 	bgt.w	800f740 <__ieee754_rem_pio2+0x2e0>
 800f58e:	f7ff ff27 	bl	800f3e0 <fabs>
 800f592:	ec55 4b10 	vmov	r4, r5, d0
 800f596:	ee10 0a10 	vmov	r0, s0
 800f59a:	a379      	add	r3, pc, #484	; (adr r3, 800f780 <__ieee754_rem_pio2+0x320>)
 800f59c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f5a0:	4629      	mov	r1, r5
 800f5a2:	f7f1 f849 	bl	8000638 <__aeabi_dmul>
 800f5a6:	4b80      	ldr	r3, [pc, #512]	; (800f7a8 <__ieee754_rem_pio2+0x348>)
 800f5a8:	2200      	movs	r2, #0
 800f5aa:	f7f0 fe8f 	bl	80002cc <__adddf3>
 800f5ae:	f7f1 faf3 	bl	8000b98 <__aeabi_d2iz>
 800f5b2:	4683      	mov	fp, r0
 800f5b4:	f7f0 ffd6 	bl	8000564 <__aeabi_i2d>
 800f5b8:	4602      	mov	r2, r0
 800f5ba:	460b      	mov	r3, r1
 800f5bc:	ec43 2b18 	vmov	d8, r2, r3
 800f5c0:	a367      	add	r3, pc, #412	; (adr r3, 800f760 <__ieee754_rem_pio2+0x300>)
 800f5c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f5c6:	f7f1 f837 	bl	8000638 <__aeabi_dmul>
 800f5ca:	4602      	mov	r2, r0
 800f5cc:	460b      	mov	r3, r1
 800f5ce:	4620      	mov	r0, r4
 800f5d0:	4629      	mov	r1, r5
 800f5d2:	f7f0 fe79 	bl	80002c8 <__aeabi_dsub>
 800f5d6:	a364      	add	r3, pc, #400	; (adr r3, 800f768 <__ieee754_rem_pio2+0x308>)
 800f5d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f5dc:	4606      	mov	r6, r0
 800f5de:	460f      	mov	r7, r1
 800f5e0:	ec51 0b18 	vmov	r0, r1, d8
 800f5e4:	f7f1 f828 	bl	8000638 <__aeabi_dmul>
 800f5e8:	f1bb 0f1f 	cmp.w	fp, #31
 800f5ec:	4604      	mov	r4, r0
 800f5ee:	460d      	mov	r5, r1
 800f5f0:	dc0d      	bgt.n	800f60e <__ieee754_rem_pio2+0x1ae>
 800f5f2:	4b6e      	ldr	r3, [pc, #440]	; (800f7ac <__ieee754_rem_pio2+0x34c>)
 800f5f4:	f10b 32ff 	add.w	r2, fp, #4294967295
 800f5f8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800f5fc:	4543      	cmp	r3, r8
 800f5fe:	d006      	beq.n	800f60e <__ieee754_rem_pio2+0x1ae>
 800f600:	4622      	mov	r2, r4
 800f602:	462b      	mov	r3, r5
 800f604:	4630      	mov	r0, r6
 800f606:	4639      	mov	r1, r7
 800f608:	f7f0 fe5e 	bl	80002c8 <__aeabi_dsub>
 800f60c:	e00f      	b.n	800f62e <__ieee754_rem_pio2+0x1ce>
 800f60e:	462b      	mov	r3, r5
 800f610:	4622      	mov	r2, r4
 800f612:	4630      	mov	r0, r6
 800f614:	4639      	mov	r1, r7
 800f616:	f7f0 fe57 	bl	80002c8 <__aeabi_dsub>
 800f61a:	ea4f 5328 	mov.w	r3, r8, asr #20
 800f61e:	9303      	str	r3, [sp, #12]
 800f620:	f3c1 530a 	ubfx	r3, r1, #20, #11
 800f624:	ebc3 5818 	rsb	r8, r3, r8, lsr #20
 800f628:	f1b8 0f10 	cmp.w	r8, #16
 800f62c:	dc02      	bgt.n	800f634 <__ieee754_rem_pio2+0x1d4>
 800f62e:	e9ca 0100 	strd	r0, r1, [sl]
 800f632:	e039      	b.n	800f6a8 <__ieee754_rem_pio2+0x248>
 800f634:	a34e      	add	r3, pc, #312	; (adr r3, 800f770 <__ieee754_rem_pio2+0x310>)
 800f636:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f63a:	ec51 0b18 	vmov	r0, r1, d8
 800f63e:	f7f0 fffb 	bl	8000638 <__aeabi_dmul>
 800f642:	4604      	mov	r4, r0
 800f644:	460d      	mov	r5, r1
 800f646:	4602      	mov	r2, r0
 800f648:	460b      	mov	r3, r1
 800f64a:	4630      	mov	r0, r6
 800f64c:	4639      	mov	r1, r7
 800f64e:	f7f0 fe3b 	bl	80002c8 <__aeabi_dsub>
 800f652:	4602      	mov	r2, r0
 800f654:	460b      	mov	r3, r1
 800f656:	4680      	mov	r8, r0
 800f658:	4689      	mov	r9, r1
 800f65a:	4630      	mov	r0, r6
 800f65c:	4639      	mov	r1, r7
 800f65e:	f7f0 fe33 	bl	80002c8 <__aeabi_dsub>
 800f662:	4622      	mov	r2, r4
 800f664:	462b      	mov	r3, r5
 800f666:	f7f0 fe2f 	bl	80002c8 <__aeabi_dsub>
 800f66a:	a343      	add	r3, pc, #268	; (adr r3, 800f778 <__ieee754_rem_pio2+0x318>)
 800f66c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f670:	4604      	mov	r4, r0
 800f672:	460d      	mov	r5, r1
 800f674:	ec51 0b18 	vmov	r0, r1, d8
 800f678:	f7f0 ffde 	bl	8000638 <__aeabi_dmul>
 800f67c:	4622      	mov	r2, r4
 800f67e:	462b      	mov	r3, r5
 800f680:	f7f0 fe22 	bl	80002c8 <__aeabi_dsub>
 800f684:	4602      	mov	r2, r0
 800f686:	460b      	mov	r3, r1
 800f688:	4604      	mov	r4, r0
 800f68a:	460d      	mov	r5, r1
 800f68c:	4640      	mov	r0, r8
 800f68e:	4649      	mov	r1, r9
 800f690:	f7f0 fe1a 	bl	80002c8 <__aeabi_dsub>
 800f694:	9a03      	ldr	r2, [sp, #12]
 800f696:	f3c1 530a 	ubfx	r3, r1, #20, #11
 800f69a:	1ad3      	subs	r3, r2, r3
 800f69c:	2b31      	cmp	r3, #49	; 0x31
 800f69e:	dc24      	bgt.n	800f6ea <__ieee754_rem_pio2+0x28a>
 800f6a0:	e9ca 0100 	strd	r0, r1, [sl]
 800f6a4:	4646      	mov	r6, r8
 800f6a6:	464f      	mov	r7, r9
 800f6a8:	e9da 8900 	ldrd	r8, r9, [sl]
 800f6ac:	4630      	mov	r0, r6
 800f6ae:	4642      	mov	r2, r8
 800f6b0:	464b      	mov	r3, r9
 800f6b2:	4639      	mov	r1, r7
 800f6b4:	f7f0 fe08 	bl	80002c8 <__aeabi_dsub>
 800f6b8:	462b      	mov	r3, r5
 800f6ba:	4622      	mov	r2, r4
 800f6bc:	f7f0 fe04 	bl	80002c8 <__aeabi_dsub>
 800f6c0:	9b02      	ldr	r3, [sp, #8]
 800f6c2:	2b00      	cmp	r3, #0
 800f6c4:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800f6c8:	f6bf af0a 	bge.w	800f4e0 <__ieee754_rem_pio2+0x80>
 800f6cc:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800f6d0:	f8ca 3004 	str.w	r3, [sl, #4]
 800f6d4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800f6d8:	f8ca 8000 	str.w	r8, [sl]
 800f6dc:	f8ca 0008 	str.w	r0, [sl, #8]
 800f6e0:	f8ca 300c 	str.w	r3, [sl, #12]
 800f6e4:	f1cb 0b00 	rsb	fp, fp, #0
 800f6e8:	e6fa      	b.n	800f4e0 <__ieee754_rem_pio2+0x80>
 800f6ea:	a327      	add	r3, pc, #156	; (adr r3, 800f788 <__ieee754_rem_pio2+0x328>)
 800f6ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f6f0:	ec51 0b18 	vmov	r0, r1, d8
 800f6f4:	f7f0 ffa0 	bl	8000638 <__aeabi_dmul>
 800f6f8:	4604      	mov	r4, r0
 800f6fa:	460d      	mov	r5, r1
 800f6fc:	4602      	mov	r2, r0
 800f6fe:	460b      	mov	r3, r1
 800f700:	4640      	mov	r0, r8
 800f702:	4649      	mov	r1, r9
 800f704:	f7f0 fde0 	bl	80002c8 <__aeabi_dsub>
 800f708:	4602      	mov	r2, r0
 800f70a:	460b      	mov	r3, r1
 800f70c:	4606      	mov	r6, r0
 800f70e:	460f      	mov	r7, r1
 800f710:	4640      	mov	r0, r8
 800f712:	4649      	mov	r1, r9
 800f714:	f7f0 fdd8 	bl	80002c8 <__aeabi_dsub>
 800f718:	4622      	mov	r2, r4
 800f71a:	462b      	mov	r3, r5
 800f71c:	f7f0 fdd4 	bl	80002c8 <__aeabi_dsub>
 800f720:	a31b      	add	r3, pc, #108	; (adr r3, 800f790 <__ieee754_rem_pio2+0x330>)
 800f722:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f726:	4604      	mov	r4, r0
 800f728:	460d      	mov	r5, r1
 800f72a:	ec51 0b18 	vmov	r0, r1, d8
 800f72e:	f7f0 ff83 	bl	8000638 <__aeabi_dmul>
 800f732:	4622      	mov	r2, r4
 800f734:	462b      	mov	r3, r5
 800f736:	f7f0 fdc7 	bl	80002c8 <__aeabi_dsub>
 800f73a:	4604      	mov	r4, r0
 800f73c:	460d      	mov	r5, r1
 800f73e:	e75f      	b.n	800f600 <__ieee754_rem_pio2+0x1a0>
 800f740:	4b1b      	ldr	r3, [pc, #108]	; (800f7b0 <__ieee754_rem_pio2+0x350>)
 800f742:	4598      	cmp	r8, r3
 800f744:	dd36      	ble.n	800f7b4 <__ieee754_rem_pio2+0x354>
 800f746:	ee10 2a10 	vmov	r2, s0
 800f74a:	462b      	mov	r3, r5
 800f74c:	4620      	mov	r0, r4
 800f74e:	4629      	mov	r1, r5
 800f750:	f7f0 fdba 	bl	80002c8 <__aeabi_dsub>
 800f754:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800f758:	e9ca 0100 	strd	r0, r1, [sl]
 800f75c:	e694      	b.n	800f488 <__ieee754_rem_pio2+0x28>
 800f75e:	bf00      	nop
 800f760:	54400000 	.word	0x54400000
 800f764:	3ff921fb 	.word	0x3ff921fb
 800f768:	1a626331 	.word	0x1a626331
 800f76c:	3dd0b461 	.word	0x3dd0b461
 800f770:	1a600000 	.word	0x1a600000
 800f774:	3dd0b461 	.word	0x3dd0b461
 800f778:	2e037073 	.word	0x2e037073
 800f77c:	3ba3198a 	.word	0x3ba3198a
 800f780:	6dc9c883 	.word	0x6dc9c883
 800f784:	3fe45f30 	.word	0x3fe45f30
 800f788:	2e000000 	.word	0x2e000000
 800f78c:	3ba3198a 	.word	0x3ba3198a
 800f790:	252049c1 	.word	0x252049c1
 800f794:	397b839a 	.word	0x397b839a
 800f798:	3fe921fb 	.word	0x3fe921fb
 800f79c:	4002d97b 	.word	0x4002d97b
 800f7a0:	3ff921fb 	.word	0x3ff921fb
 800f7a4:	413921fb 	.word	0x413921fb
 800f7a8:	3fe00000 	.word	0x3fe00000
 800f7ac:	08010ad8 	.word	0x08010ad8
 800f7b0:	7fefffff 	.word	0x7fefffff
 800f7b4:	ea4f 5428 	mov.w	r4, r8, asr #20
 800f7b8:	f2a4 4416 	subw	r4, r4, #1046	; 0x416
 800f7bc:	ee10 0a10 	vmov	r0, s0
 800f7c0:	eba8 5104 	sub.w	r1, r8, r4, lsl #20
 800f7c4:	ee10 6a10 	vmov	r6, s0
 800f7c8:	460f      	mov	r7, r1
 800f7ca:	f7f1 f9e5 	bl	8000b98 <__aeabi_d2iz>
 800f7ce:	f7f0 fec9 	bl	8000564 <__aeabi_i2d>
 800f7d2:	4602      	mov	r2, r0
 800f7d4:	460b      	mov	r3, r1
 800f7d6:	4630      	mov	r0, r6
 800f7d8:	4639      	mov	r1, r7
 800f7da:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800f7de:	f7f0 fd73 	bl	80002c8 <__aeabi_dsub>
 800f7e2:	4b23      	ldr	r3, [pc, #140]	; (800f870 <__ieee754_rem_pio2+0x410>)
 800f7e4:	2200      	movs	r2, #0
 800f7e6:	f7f0 ff27 	bl	8000638 <__aeabi_dmul>
 800f7ea:	460f      	mov	r7, r1
 800f7ec:	4606      	mov	r6, r0
 800f7ee:	f7f1 f9d3 	bl	8000b98 <__aeabi_d2iz>
 800f7f2:	f7f0 feb7 	bl	8000564 <__aeabi_i2d>
 800f7f6:	4602      	mov	r2, r0
 800f7f8:	460b      	mov	r3, r1
 800f7fa:	4630      	mov	r0, r6
 800f7fc:	4639      	mov	r1, r7
 800f7fe:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800f802:	f7f0 fd61 	bl	80002c8 <__aeabi_dsub>
 800f806:	4b1a      	ldr	r3, [pc, #104]	; (800f870 <__ieee754_rem_pio2+0x410>)
 800f808:	2200      	movs	r2, #0
 800f80a:	f7f0 ff15 	bl	8000638 <__aeabi_dmul>
 800f80e:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800f812:	ad04      	add	r5, sp, #16
 800f814:	f04f 0803 	mov.w	r8, #3
 800f818:	46a9      	mov	r9, r5
 800f81a:	2600      	movs	r6, #0
 800f81c:	2700      	movs	r7, #0
 800f81e:	4632      	mov	r2, r6
 800f820:	463b      	mov	r3, r7
 800f822:	e9d5 0104 	ldrd	r0, r1, [r5, #16]
 800f826:	46c3      	mov	fp, r8
 800f828:	3d08      	subs	r5, #8
 800f82a:	f108 38ff 	add.w	r8, r8, #4294967295
 800f82e:	f7f1 f96b 	bl	8000b08 <__aeabi_dcmpeq>
 800f832:	2800      	cmp	r0, #0
 800f834:	d1f3      	bne.n	800f81e <__ieee754_rem_pio2+0x3be>
 800f836:	4b0f      	ldr	r3, [pc, #60]	; (800f874 <__ieee754_rem_pio2+0x414>)
 800f838:	9301      	str	r3, [sp, #4]
 800f83a:	2302      	movs	r3, #2
 800f83c:	9300      	str	r3, [sp, #0]
 800f83e:	4622      	mov	r2, r4
 800f840:	465b      	mov	r3, fp
 800f842:	4651      	mov	r1, sl
 800f844:	4648      	mov	r0, r9
 800f846:	f000 f817 	bl	800f878 <__kernel_rem_pio2>
 800f84a:	9b02      	ldr	r3, [sp, #8]
 800f84c:	2b00      	cmp	r3, #0
 800f84e:	4683      	mov	fp, r0
 800f850:	f6bf ae46 	bge.w	800f4e0 <__ieee754_rem_pio2+0x80>
 800f854:	e9da 2100 	ldrd	r2, r1, [sl]
 800f858:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800f85c:	e9ca 2300 	strd	r2, r3, [sl]
 800f860:	e9da 2102 	ldrd	r2, r1, [sl, #8]
 800f864:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800f868:	e9ca 2302 	strd	r2, r3, [sl, #8]
 800f86c:	e73a      	b.n	800f6e4 <__ieee754_rem_pio2+0x284>
 800f86e:	bf00      	nop
 800f870:	41700000 	.word	0x41700000
 800f874:	08010b58 	.word	0x08010b58

0800f878 <__kernel_rem_pio2>:
 800f878:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f87c:	ed2d 8b02 	vpush	{d8}
 800f880:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
 800f884:	f112 0f14 	cmn.w	r2, #20
 800f888:	9308      	str	r3, [sp, #32]
 800f88a:	9101      	str	r1, [sp, #4]
 800f88c:	4bc4      	ldr	r3, [pc, #784]	; (800fba0 <__kernel_rem_pio2+0x328>)
 800f88e:	99a6      	ldr	r1, [sp, #664]	; 0x298
 800f890:	900b      	str	r0, [sp, #44]	; 0x2c
 800f892:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800f896:	9302      	str	r3, [sp, #8]
 800f898:	9b08      	ldr	r3, [sp, #32]
 800f89a:	f103 33ff 	add.w	r3, r3, #4294967295
 800f89e:	bfa8      	it	ge
 800f8a0:	1ed4      	subge	r4, r2, #3
 800f8a2:	9306      	str	r3, [sp, #24]
 800f8a4:	bfb2      	itee	lt
 800f8a6:	2400      	movlt	r4, #0
 800f8a8:	2318      	movge	r3, #24
 800f8aa:	fb94 f4f3 	sdivge	r4, r4, r3
 800f8ae:	f06f 0317 	mvn.w	r3, #23
 800f8b2:	fb04 3303 	mla	r3, r4, r3, r3
 800f8b6:	eb03 0a02 	add.w	sl, r3, r2
 800f8ba:	9b02      	ldr	r3, [sp, #8]
 800f8bc:	9a06      	ldr	r2, [sp, #24]
 800f8be:	ed9f 8bb4 	vldr	d8, [pc, #720]	; 800fb90 <__kernel_rem_pio2+0x318>
 800f8c2:	eb03 0802 	add.w	r8, r3, r2
 800f8c6:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 800f8c8:	1aa7      	subs	r7, r4, r2
 800f8ca:	ae22      	add	r6, sp, #136	; 0x88
 800f8cc:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 800f8d0:	2500      	movs	r5, #0
 800f8d2:	4545      	cmp	r5, r8
 800f8d4:	dd13      	ble.n	800f8fe <__kernel_rem_pio2+0x86>
 800f8d6:	9b08      	ldr	r3, [sp, #32]
 800f8d8:	ed9f 8bad 	vldr	d8, [pc, #692]	; 800fb90 <__kernel_rem_pio2+0x318>
 800f8dc:	aa22      	add	r2, sp, #136	; 0x88
 800f8de:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 800f8e2:	f50d 7be4 	add.w	fp, sp, #456	; 0x1c8
 800f8e6:	f04f 0800 	mov.w	r8, #0
 800f8ea:	9b02      	ldr	r3, [sp, #8]
 800f8ec:	4598      	cmp	r8, r3
 800f8ee:	dc2f      	bgt.n	800f950 <__kernel_rem_pio2+0xd8>
 800f8f0:	ed8d 8b04 	vstr	d8, [sp, #16]
 800f8f4:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 800f8f8:	462f      	mov	r7, r5
 800f8fa:	2600      	movs	r6, #0
 800f8fc:	e01b      	b.n	800f936 <__kernel_rem_pio2+0xbe>
 800f8fe:	42ef      	cmn	r7, r5
 800f900:	d407      	bmi.n	800f912 <__kernel_rem_pio2+0x9a>
 800f902:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 800f906:	f7f0 fe2d 	bl	8000564 <__aeabi_i2d>
 800f90a:	e8e6 0102 	strd	r0, r1, [r6], #8
 800f90e:	3501      	adds	r5, #1
 800f910:	e7df      	b.n	800f8d2 <__kernel_rem_pio2+0x5a>
 800f912:	ec51 0b18 	vmov	r0, r1, d8
 800f916:	e7f8      	b.n	800f90a <__kernel_rem_pio2+0x92>
 800f918:	e9d7 2300 	ldrd	r2, r3, [r7]
 800f91c:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 800f920:	f7f0 fe8a 	bl	8000638 <__aeabi_dmul>
 800f924:	4602      	mov	r2, r0
 800f926:	460b      	mov	r3, r1
 800f928:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800f92c:	f7f0 fcce 	bl	80002cc <__adddf3>
 800f930:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800f934:	3601      	adds	r6, #1
 800f936:	9b06      	ldr	r3, [sp, #24]
 800f938:	429e      	cmp	r6, r3
 800f93a:	f1a7 0708 	sub.w	r7, r7, #8
 800f93e:	ddeb      	ble.n	800f918 <__kernel_rem_pio2+0xa0>
 800f940:	ed9d 7b04 	vldr	d7, [sp, #16]
 800f944:	f108 0801 	add.w	r8, r8, #1
 800f948:	ecab 7b02 	vstmia	fp!, {d7}
 800f94c:	3508      	adds	r5, #8
 800f94e:	e7cc      	b.n	800f8ea <__kernel_rem_pio2+0x72>
 800f950:	9b02      	ldr	r3, [sp, #8]
 800f952:	aa0e      	add	r2, sp, #56	; 0x38
 800f954:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800f958:	930d      	str	r3, [sp, #52]	; 0x34
 800f95a:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 800f95c:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 800f960:	9c02      	ldr	r4, [sp, #8]
 800f962:	930c      	str	r3, [sp, #48]	; 0x30
 800f964:	00e3      	lsls	r3, r4, #3
 800f966:	930a      	str	r3, [sp, #40]	; 0x28
 800f968:	ab9a      	add	r3, sp, #616	; 0x268
 800f96a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800f96e:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 800f972:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800f976:	ab72      	add	r3, sp, #456	; 0x1c8
 800f978:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 800f97c:	46c3      	mov	fp, r8
 800f97e:	46a1      	mov	r9, r4
 800f980:	f1b9 0f00 	cmp.w	r9, #0
 800f984:	f1a5 0508 	sub.w	r5, r5, #8
 800f988:	dc77      	bgt.n	800fa7a <__kernel_rem_pio2+0x202>
 800f98a:	ec47 6b10 	vmov	d0, r6, r7
 800f98e:	4650      	mov	r0, sl
 800f990:	f000 fd4e 	bl	8010430 <scalbn>
 800f994:	ec57 6b10 	vmov	r6, r7, d0
 800f998:	2200      	movs	r2, #0
 800f99a:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 800f99e:	ee10 0a10 	vmov	r0, s0
 800f9a2:	4639      	mov	r1, r7
 800f9a4:	f7f0 fe48 	bl	8000638 <__aeabi_dmul>
 800f9a8:	ec41 0b10 	vmov	d0, r0, r1
 800f9ac:	f000 fcc0 	bl	8010330 <floor>
 800f9b0:	4b7c      	ldr	r3, [pc, #496]	; (800fba4 <__kernel_rem_pio2+0x32c>)
 800f9b2:	ec51 0b10 	vmov	r0, r1, d0
 800f9b6:	2200      	movs	r2, #0
 800f9b8:	f7f0 fe3e 	bl	8000638 <__aeabi_dmul>
 800f9bc:	4602      	mov	r2, r0
 800f9be:	460b      	mov	r3, r1
 800f9c0:	4630      	mov	r0, r6
 800f9c2:	4639      	mov	r1, r7
 800f9c4:	f7f0 fc80 	bl	80002c8 <__aeabi_dsub>
 800f9c8:	460f      	mov	r7, r1
 800f9ca:	4606      	mov	r6, r0
 800f9cc:	f7f1 f8e4 	bl	8000b98 <__aeabi_d2iz>
 800f9d0:	9004      	str	r0, [sp, #16]
 800f9d2:	f7f0 fdc7 	bl	8000564 <__aeabi_i2d>
 800f9d6:	4602      	mov	r2, r0
 800f9d8:	460b      	mov	r3, r1
 800f9da:	4630      	mov	r0, r6
 800f9dc:	4639      	mov	r1, r7
 800f9de:	f7f0 fc73 	bl	80002c8 <__aeabi_dsub>
 800f9e2:	f1ba 0f00 	cmp.w	sl, #0
 800f9e6:	4606      	mov	r6, r0
 800f9e8:	460f      	mov	r7, r1
 800f9ea:	dd6d      	ble.n	800fac8 <__kernel_rem_pio2+0x250>
 800f9ec:	1e62      	subs	r2, r4, #1
 800f9ee:	ab0e      	add	r3, sp, #56	; 0x38
 800f9f0:	9d04      	ldr	r5, [sp, #16]
 800f9f2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800f9f6:	f1ca 0118 	rsb	r1, sl, #24
 800f9fa:	fa40 f301 	asr.w	r3, r0, r1
 800f9fe:	441d      	add	r5, r3
 800fa00:	408b      	lsls	r3, r1
 800fa02:	1ac0      	subs	r0, r0, r3
 800fa04:	ab0e      	add	r3, sp, #56	; 0x38
 800fa06:	9504      	str	r5, [sp, #16]
 800fa08:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 800fa0c:	f1ca 0317 	rsb	r3, sl, #23
 800fa10:	fa40 fb03 	asr.w	fp, r0, r3
 800fa14:	f1bb 0f00 	cmp.w	fp, #0
 800fa18:	dd65      	ble.n	800fae6 <__kernel_rem_pio2+0x26e>
 800fa1a:	9b04      	ldr	r3, [sp, #16]
 800fa1c:	2200      	movs	r2, #0
 800fa1e:	3301      	adds	r3, #1
 800fa20:	9304      	str	r3, [sp, #16]
 800fa22:	4615      	mov	r5, r2
 800fa24:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 800fa28:	4294      	cmp	r4, r2
 800fa2a:	f300 809c 	bgt.w	800fb66 <__kernel_rem_pio2+0x2ee>
 800fa2e:	f1ba 0f00 	cmp.w	sl, #0
 800fa32:	dd07      	ble.n	800fa44 <__kernel_rem_pio2+0x1cc>
 800fa34:	f1ba 0f01 	cmp.w	sl, #1
 800fa38:	f000 80c0 	beq.w	800fbbc <__kernel_rem_pio2+0x344>
 800fa3c:	f1ba 0f02 	cmp.w	sl, #2
 800fa40:	f000 80c6 	beq.w	800fbd0 <__kernel_rem_pio2+0x358>
 800fa44:	f1bb 0f02 	cmp.w	fp, #2
 800fa48:	d14d      	bne.n	800fae6 <__kernel_rem_pio2+0x26e>
 800fa4a:	4632      	mov	r2, r6
 800fa4c:	463b      	mov	r3, r7
 800fa4e:	4956      	ldr	r1, [pc, #344]	; (800fba8 <__kernel_rem_pio2+0x330>)
 800fa50:	2000      	movs	r0, #0
 800fa52:	f7f0 fc39 	bl	80002c8 <__aeabi_dsub>
 800fa56:	4606      	mov	r6, r0
 800fa58:	460f      	mov	r7, r1
 800fa5a:	2d00      	cmp	r5, #0
 800fa5c:	d043      	beq.n	800fae6 <__kernel_rem_pio2+0x26e>
 800fa5e:	4650      	mov	r0, sl
 800fa60:	ed9f 0b4d 	vldr	d0, [pc, #308]	; 800fb98 <__kernel_rem_pio2+0x320>
 800fa64:	f000 fce4 	bl	8010430 <scalbn>
 800fa68:	4630      	mov	r0, r6
 800fa6a:	4639      	mov	r1, r7
 800fa6c:	ec53 2b10 	vmov	r2, r3, d0
 800fa70:	f7f0 fc2a 	bl	80002c8 <__aeabi_dsub>
 800fa74:	4606      	mov	r6, r0
 800fa76:	460f      	mov	r7, r1
 800fa78:	e035      	b.n	800fae6 <__kernel_rem_pio2+0x26e>
 800fa7a:	4b4c      	ldr	r3, [pc, #304]	; (800fbac <__kernel_rem_pio2+0x334>)
 800fa7c:	2200      	movs	r2, #0
 800fa7e:	4630      	mov	r0, r6
 800fa80:	4639      	mov	r1, r7
 800fa82:	f7f0 fdd9 	bl	8000638 <__aeabi_dmul>
 800fa86:	f7f1 f887 	bl	8000b98 <__aeabi_d2iz>
 800fa8a:	f7f0 fd6b 	bl	8000564 <__aeabi_i2d>
 800fa8e:	4602      	mov	r2, r0
 800fa90:	460b      	mov	r3, r1
 800fa92:	ec43 2b18 	vmov	d8, r2, r3
 800fa96:	4b46      	ldr	r3, [pc, #280]	; (800fbb0 <__kernel_rem_pio2+0x338>)
 800fa98:	2200      	movs	r2, #0
 800fa9a:	f7f0 fdcd 	bl	8000638 <__aeabi_dmul>
 800fa9e:	4602      	mov	r2, r0
 800faa0:	460b      	mov	r3, r1
 800faa2:	4630      	mov	r0, r6
 800faa4:	4639      	mov	r1, r7
 800faa6:	f7f0 fc0f 	bl	80002c8 <__aeabi_dsub>
 800faaa:	f7f1 f875 	bl	8000b98 <__aeabi_d2iz>
 800faae:	e9d5 2300 	ldrd	r2, r3, [r5]
 800fab2:	f84b 0b04 	str.w	r0, [fp], #4
 800fab6:	ec51 0b18 	vmov	r0, r1, d8
 800faba:	f7f0 fc07 	bl	80002cc <__adddf3>
 800fabe:	f109 39ff 	add.w	r9, r9, #4294967295
 800fac2:	4606      	mov	r6, r0
 800fac4:	460f      	mov	r7, r1
 800fac6:	e75b      	b.n	800f980 <__kernel_rem_pio2+0x108>
 800fac8:	d106      	bne.n	800fad8 <__kernel_rem_pio2+0x260>
 800faca:	1e63      	subs	r3, r4, #1
 800facc:	aa0e      	add	r2, sp, #56	; 0x38
 800face:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800fad2:	ea4f 5be0 	mov.w	fp, r0, asr #23
 800fad6:	e79d      	b.n	800fa14 <__kernel_rem_pio2+0x19c>
 800fad8:	4b36      	ldr	r3, [pc, #216]	; (800fbb4 <__kernel_rem_pio2+0x33c>)
 800fada:	2200      	movs	r2, #0
 800fadc:	f7f1 f832 	bl	8000b44 <__aeabi_dcmpge>
 800fae0:	2800      	cmp	r0, #0
 800fae2:	d13d      	bne.n	800fb60 <__kernel_rem_pio2+0x2e8>
 800fae4:	4683      	mov	fp, r0
 800fae6:	2200      	movs	r2, #0
 800fae8:	2300      	movs	r3, #0
 800faea:	4630      	mov	r0, r6
 800faec:	4639      	mov	r1, r7
 800faee:	f7f1 f80b 	bl	8000b08 <__aeabi_dcmpeq>
 800faf2:	2800      	cmp	r0, #0
 800faf4:	f000 80c0 	beq.w	800fc78 <__kernel_rem_pio2+0x400>
 800faf8:	1e65      	subs	r5, r4, #1
 800fafa:	462b      	mov	r3, r5
 800fafc:	2200      	movs	r2, #0
 800fafe:	9902      	ldr	r1, [sp, #8]
 800fb00:	428b      	cmp	r3, r1
 800fb02:	da6c      	bge.n	800fbde <__kernel_rem_pio2+0x366>
 800fb04:	2a00      	cmp	r2, #0
 800fb06:	f000 8089 	beq.w	800fc1c <__kernel_rem_pio2+0x3a4>
 800fb0a:	ab0e      	add	r3, sp, #56	; 0x38
 800fb0c:	f1aa 0a18 	sub.w	sl, sl, #24
 800fb10:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800fb14:	2b00      	cmp	r3, #0
 800fb16:	f000 80ad 	beq.w	800fc74 <__kernel_rem_pio2+0x3fc>
 800fb1a:	4650      	mov	r0, sl
 800fb1c:	ed9f 0b1e 	vldr	d0, [pc, #120]	; 800fb98 <__kernel_rem_pio2+0x320>
 800fb20:	f000 fc86 	bl	8010430 <scalbn>
 800fb24:	ab9a      	add	r3, sp, #616	; 0x268
 800fb26:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800fb2a:	ec57 6b10 	vmov	r6, r7, d0
 800fb2e:	00ec      	lsls	r4, r5, #3
 800fb30:	f1a3 0898 	sub.w	r8, r3, #152	; 0x98
 800fb34:	46aa      	mov	sl, r5
 800fb36:	f1ba 0f00 	cmp.w	sl, #0
 800fb3a:	f280 80d6 	bge.w	800fcea <__kernel_rem_pio2+0x472>
 800fb3e:	ed9f 8b14 	vldr	d8, [pc, #80]	; 800fb90 <__kernel_rem_pio2+0x318>
 800fb42:	462e      	mov	r6, r5
 800fb44:	2e00      	cmp	r6, #0
 800fb46:	f2c0 8104 	blt.w	800fd52 <__kernel_rem_pio2+0x4da>
 800fb4a:	ab72      	add	r3, sp, #456	; 0x1c8
 800fb4c:	ed8d 8b06 	vstr	d8, [sp, #24]
 800fb50:	f8df a064 	ldr.w	sl, [pc, #100]	; 800fbb8 <__kernel_rem_pio2+0x340>
 800fb54:	eb03 09c6 	add.w	r9, r3, r6, lsl #3
 800fb58:	f04f 0800 	mov.w	r8, #0
 800fb5c:	1baf      	subs	r7, r5, r6
 800fb5e:	e0ea      	b.n	800fd36 <__kernel_rem_pio2+0x4be>
 800fb60:	f04f 0b02 	mov.w	fp, #2
 800fb64:	e759      	b.n	800fa1a <__kernel_rem_pio2+0x1a2>
 800fb66:	f8d8 3000 	ldr.w	r3, [r8]
 800fb6a:	b955      	cbnz	r5, 800fb82 <__kernel_rem_pio2+0x30a>
 800fb6c:	b123      	cbz	r3, 800fb78 <__kernel_rem_pio2+0x300>
 800fb6e:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 800fb72:	f8c8 3000 	str.w	r3, [r8]
 800fb76:	2301      	movs	r3, #1
 800fb78:	3201      	adds	r2, #1
 800fb7a:	f108 0804 	add.w	r8, r8, #4
 800fb7e:	461d      	mov	r5, r3
 800fb80:	e752      	b.n	800fa28 <__kernel_rem_pio2+0x1b0>
 800fb82:	1acb      	subs	r3, r1, r3
 800fb84:	f8c8 3000 	str.w	r3, [r8]
 800fb88:	462b      	mov	r3, r5
 800fb8a:	e7f5      	b.n	800fb78 <__kernel_rem_pio2+0x300>
 800fb8c:	f3af 8000 	nop.w
	...
 800fb9c:	3ff00000 	.word	0x3ff00000
 800fba0:	08010ca0 	.word	0x08010ca0
 800fba4:	40200000 	.word	0x40200000
 800fba8:	3ff00000 	.word	0x3ff00000
 800fbac:	3e700000 	.word	0x3e700000
 800fbb0:	41700000 	.word	0x41700000
 800fbb4:	3fe00000 	.word	0x3fe00000
 800fbb8:	08010c60 	.word	0x08010c60
 800fbbc:	1e62      	subs	r2, r4, #1
 800fbbe:	ab0e      	add	r3, sp, #56	; 0x38
 800fbc0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800fbc4:	f3c3 0316 	ubfx	r3, r3, #0, #23
 800fbc8:	a90e      	add	r1, sp, #56	; 0x38
 800fbca:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 800fbce:	e739      	b.n	800fa44 <__kernel_rem_pio2+0x1cc>
 800fbd0:	1e62      	subs	r2, r4, #1
 800fbd2:	ab0e      	add	r3, sp, #56	; 0x38
 800fbd4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800fbd8:	f3c3 0315 	ubfx	r3, r3, #0, #22
 800fbdc:	e7f4      	b.n	800fbc8 <__kernel_rem_pio2+0x350>
 800fbde:	a90e      	add	r1, sp, #56	; 0x38
 800fbe0:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 800fbe4:	3b01      	subs	r3, #1
 800fbe6:	430a      	orrs	r2, r1
 800fbe8:	e789      	b.n	800fafe <__kernel_rem_pio2+0x286>
 800fbea:	3301      	adds	r3, #1
 800fbec:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 800fbf0:	2900      	cmp	r1, #0
 800fbf2:	d0fa      	beq.n	800fbea <__kernel_rem_pio2+0x372>
 800fbf4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fbf6:	f502 721a 	add.w	r2, r2, #616	; 0x268
 800fbfa:	446a      	add	r2, sp
 800fbfc:	3a98      	subs	r2, #152	; 0x98
 800fbfe:	920a      	str	r2, [sp, #40]	; 0x28
 800fc00:	9a08      	ldr	r2, [sp, #32]
 800fc02:	18e3      	adds	r3, r4, r3
 800fc04:	18a5      	adds	r5, r4, r2
 800fc06:	aa22      	add	r2, sp, #136	; 0x88
 800fc08:	f104 0801 	add.w	r8, r4, #1
 800fc0c:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 800fc10:	9304      	str	r3, [sp, #16]
 800fc12:	9b04      	ldr	r3, [sp, #16]
 800fc14:	4543      	cmp	r3, r8
 800fc16:	da04      	bge.n	800fc22 <__kernel_rem_pio2+0x3aa>
 800fc18:	461c      	mov	r4, r3
 800fc1a:	e6a3      	b.n	800f964 <__kernel_rem_pio2+0xec>
 800fc1c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fc1e:	2301      	movs	r3, #1
 800fc20:	e7e4      	b.n	800fbec <__kernel_rem_pio2+0x374>
 800fc22:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fc24:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 800fc28:	f7f0 fc9c 	bl	8000564 <__aeabi_i2d>
 800fc2c:	e8e5 0102 	strd	r0, r1, [r5], #8
 800fc30:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800fc32:	46ab      	mov	fp, r5
 800fc34:	461c      	mov	r4, r3
 800fc36:	f04f 0900 	mov.w	r9, #0
 800fc3a:	2600      	movs	r6, #0
 800fc3c:	2700      	movs	r7, #0
 800fc3e:	9b06      	ldr	r3, [sp, #24]
 800fc40:	4599      	cmp	r9, r3
 800fc42:	dd06      	ble.n	800fc52 <__kernel_rem_pio2+0x3da>
 800fc44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fc46:	e8e3 6702 	strd	r6, r7, [r3], #8
 800fc4a:	f108 0801 	add.w	r8, r8, #1
 800fc4e:	930a      	str	r3, [sp, #40]	; 0x28
 800fc50:	e7df      	b.n	800fc12 <__kernel_rem_pio2+0x39a>
 800fc52:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 800fc56:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 800fc5a:	f7f0 fced 	bl	8000638 <__aeabi_dmul>
 800fc5e:	4602      	mov	r2, r0
 800fc60:	460b      	mov	r3, r1
 800fc62:	4630      	mov	r0, r6
 800fc64:	4639      	mov	r1, r7
 800fc66:	f7f0 fb31 	bl	80002cc <__adddf3>
 800fc6a:	f109 0901 	add.w	r9, r9, #1
 800fc6e:	4606      	mov	r6, r0
 800fc70:	460f      	mov	r7, r1
 800fc72:	e7e4      	b.n	800fc3e <__kernel_rem_pio2+0x3c6>
 800fc74:	3d01      	subs	r5, #1
 800fc76:	e748      	b.n	800fb0a <__kernel_rem_pio2+0x292>
 800fc78:	ec47 6b10 	vmov	d0, r6, r7
 800fc7c:	f1ca 0000 	rsb	r0, sl, #0
 800fc80:	f000 fbd6 	bl	8010430 <scalbn>
 800fc84:	ec57 6b10 	vmov	r6, r7, d0
 800fc88:	4ba0      	ldr	r3, [pc, #640]	; (800ff0c <__kernel_rem_pio2+0x694>)
 800fc8a:	ee10 0a10 	vmov	r0, s0
 800fc8e:	2200      	movs	r2, #0
 800fc90:	4639      	mov	r1, r7
 800fc92:	f7f0 ff57 	bl	8000b44 <__aeabi_dcmpge>
 800fc96:	b1f8      	cbz	r0, 800fcd8 <__kernel_rem_pio2+0x460>
 800fc98:	4b9d      	ldr	r3, [pc, #628]	; (800ff10 <__kernel_rem_pio2+0x698>)
 800fc9a:	2200      	movs	r2, #0
 800fc9c:	4630      	mov	r0, r6
 800fc9e:	4639      	mov	r1, r7
 800fca0:	f7f0 fcca 	bl	8000638 <__aeabi_dmul>
 800fca4:	f7f0 ff78 	bl	8000b98 <__aeabi_d2iz>
 800fca8:	4680      	mov	r8, r0
 800fcaa:	f7f0 fc5b 	bl	8000564 <__aeabi_i2d>
 800fcae:	4b97      	ldr	r3, [pc, #604]	; (800ff0c <__kernel_rem_pio2+0x694>)
 800fcb0:	2200      	movs	r2, #0
 800fcb2:	f7f0 fcc1 	bl	8000638 <__aeabi_dmul>
 800fcb6:	460b      	mov	r3, r1
 800fcb8:	4602      	mov	r2, r0
 800fcba:	4639      	mov	r1, r7
 800fcbc:	4630      	mov	r0, r6
 800fcbe:	f7f0 fb03 	bl	80002c8 <__aeabi_dsub>
 800fcc2:	f7f0 ff69 	bl	8000b98 <__aeabi_d2iz>
 800fcc6:	1c65      	adds	r5, r4, #1
 800fcc8:	ab0e      	add	r3, sp, #56	; 0x38
 800fcca:	f10a 0a18 	add.w	sl, sl, #24
 800fcce:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 800fcd2:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 800fcd6:	e720      	b.n	800fb1a <__kernel_rem_pio2+0x2a2>
 800fcd8:	4630      	mov	r0, r6
 800fcda:	4639      	mov	r1, r7
 800fcdc:	f7f0 ff5c 	bl	8000b98 <__aeabi_d2iz>
 800fce0:	ab0e      	add	r3, sp, #56	; 0x38
 800fce2:	4625      	mov	r5, r4
 800fce4:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 800fce8:	e717      	b.n	800fb1a <__kernel_rem_pio2+0x2a2>
 800fcea:	ab0e      	add	r3, sp, #56	; 0x38
 800fcec:	f853 002a 	ldr.w	r0, [r3, sl, lsl #2]
 800fcf0:	f7f0 fc38 	bl	8000564 <__aeabi_i2d>
 800fcf4:	4632      	mov	r2, r6
 800fcf6:	463b      	mov	r3, r7
 800fcf8:	f7f0 fc9e 	bl	8000638 <__aeabi_dmul>
 800fcfc:	4b84      	ldr	r3, [pc, #528]	; (800ff10 <__kernel_rem_pio2+0x698>)
 800fcfe:	e968 0102 	strd	r0, r1, [r8, #-8]!
 800fd02:	2200      	movs	r2, #0
 800fd04:	4630      	mov	r0, r6
 800fd06:	4639      	mov	r1, r7
 800fd08:	f7f0 fc96 	bl	8000638 <__aeabi_dmul>
 800fd0c:	f10a 3aff 	add.w	sl, sl, #4294967295
 800fd10:	4606      	mov	r6, r0
 800fd12:	460f      	mov	r7, r1
 800fd14:	e70f      	b.n	800fb36 <__kernel_rem_pio2+0x2be>
 800fd16:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 800fd1a:	e8fa 0102 	ldrd	r0, r1, [sl], #8
 800fd1e:	f7f0 fc8b 	bl	8000638 <__aeabi_dmul>
 800fd22:	4602      	mov	r2, r0
 800fd24:	460b      	mov	r3, r1
 800fd26:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800fd2a:	f7f0 facf 	bl	80002cc <__adddf3>
 800fd2e:	e9cd 0106 	strd	r0, r1, [sp, #24]
 800fd32:	f108 0801 	add.w	r8, r8, #1
 800fd36:	9b02      	ldr	r3, [sp, #8]
 800fd38:	4598      	cmp	r8, r3
 800fd3a:	dc01      	bgt.n	800fd40 <__kernel_rem_pio2+0x4c8>
 800fd3c:	45b8      	cmp	r8, r7
 800fd3e:	ddea      	ble.n	800fd16 <__kernel_rem_pio2+0x49e>
 800fd40:	ed9d 7b06 	vldr	d7, [sp, #24]
 800fd44:	ab4a      	add	r3, sp, #296	; 0x128
 800fd46:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 800fd4a:	ed87 7b00 	vstr	d7, [r7]
 800fd4e:	3e01      	subs	r6, #1
 800fd50:	e6f8      	b.n	800fb44 <__kernel_rem_pio2+0x2cc>
 800fd52:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 800fd54:	2b02      	cmp	r3, #2
 800fd56:	dc0b      	bgt.n	800fd70 <__kernel_rem_pio2+0x4f8>
 800fd58:	2b00      	cmp	r3, #0
 800fd5a:	dc35      	bgt.n	800fdc8 <__kernel_rem_pio2+0x550>
 800fd5c:	d059      	beq.n	800fe12 <__kernel_rem_pio2+0x59a>
 800fd5e:	9b04      	ldr	r3, [sp, #16]
 800fd60:	f003 0007 	and.w	r0, r3, #7
 800fd64:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
 800fd68:	ecbd 8b02 	vpop	{d8}
 800fd6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fd70:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 800fd72:	2b03      	cmp	r3, #3
 800fd74:	d1f3      	bne.n	800fd5e <__kernel_rem_pio2+0x4e6>
 800fd76:	ab4a      	add	r3, sp, #296	; 0x128
 800fd78:	4423      	add	r3, r4
 800fd7a:	9306      	str	r3, [sp, #24]
 800fd7c:	461c      	mov	r4, r3
 800fd7e:	469a      	mov	sl, r3
 800fd80:	9502      	str	r5, [sp, #8]
 800fd82:	9b02      	ldr	r3, [sp, #8]
 800fd84:	2b00      	cmp	r3, #0
 800fd86:	f1aa 0a08 	sub.w	sl, sl, #8
 800fd8a:	dc6b      	bgt.n	800fe64 <__kernel_rem_pio2+0x5ec>
 800fd8c:	46aa      	mov	sl, r5
 800fd8e:	f1ba 0f01 	cmp.w	sl, #1
 800fd92:	f1a4 0408 	sub.w	r4, r4, #8
 800fd96:	f300 8085 	bgt.w	800fea4 <__kernel_rem_pio2+0x62c>
 800fd9a:	9c06      	ldr	r4, [sp, #24]
 800fd9c:	2000      	movs	r0, #0
 800fd9e:	3408      	adds	r4, #8
 800fda0:	2100      	movs	r1, #0
 800fda2:	2d01      	cmp	r5, #1
 800fda4:	f300 809d 	bgt.w	800fee2 <__kernel_rem_pio2+0x66a>
 800fda8:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	; 0x128
 800fdac:	e9dd 784c 	ldrd	r7, r8, [sp, #304]	; 0x130
 800fdb0:	f1bb 0f00 	cmp.w	fp, #0
 800fdb4:	f040 809b 	bne.w	800feee <__kernel_rem_pio2+0x676>
 800fdb8:	9b01      	ldr	r3, [sp, #4]
 800fdba:	e9c3 5600 	strd	r5, r6, [r3]
 800fdbe:	e9c3 7802 	strd	r7, r8, [r3, #8]
 800fdc2:	e9c3 0104 	strd	r0, r1, [r3, #16]
 800fdc6:	e7ca      	b.n	800fd5e <__kernel_rem_pio2+0x4e6>
 800fdc8:	3408      	adds	r4, #8
 800fdca:	ab4a      	add	r3, sp, #296	; 0x128
 800fdcc:	441c      	add	r4, r3
 800fdce:	462e      	mov	r6, r5
 800fdd0:	2000      	movs	r0, #0
 800fdd2:	2100      	movs	r1, #0
 800fdd4:	2e00      	cmp	r6, #0
 800fdd6:	da36      	bge.n	800fe46 <__kernel_rem_pio2+0x5ce>
 800fdd8:	f1bb 0f00 	cmp.w	fp, #0
 800fddc:	d039      	beq.n	800fe52 <__kernel_rem_pio2+0x5da>
 800fdde:	4602      	mov	r2, r0
 800fde0:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800fde4:	9c01      	ldr	r4, [sp, #4]
 800fde6:	e9c4 2300 	strd	r2, r3, [r4]
 800fdea:	4602      	mov	r2, r0
 800fdec:	460b      	mov	r3, r1
 800fdee:	e9dd 014a 	ldrd	r0, r1, [sp, #296]	; 0x128
 800fdf2:	f7f0 fa69 	bl	80002c8 <__aeabi_dsub>
 800fdf6:	ae4c      	add	r6, sp, #304	; 0x130
 800fdf8:	2401      	movs	r4, #1
 800fdfa:	42a5      	cmp	r5, r4
 800fdfc:	da2c      	bge.n	800fe58 <__kernel_rem_pio2+0x5e0>
 800fdfe:	f1bb 0f00 	cmp.w	fp, #0
 800fe02:	d002      	beq.n	800fe0a <__kernel_rem_pio2+0x592>
 800fe04:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800fe08:	4619      	mov	r1, r3
 800fe0a:	9b01      	ldr	r3, [sp, #4]
 800fe0c:	e9c3 0102 	strd	r0, r1, [r3, #8]
 800fe10:	e7a5      	b.n	800fd5e <__kernel_rem_pio2+0x4e6>
 800fe12:	f504 731a 	add.w	r3, r4, #616	; 0x268
 800fe16:	eb0d 0403 	add.w	r4, sp, r3
 800fe1a:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
 800fe1e:	2000      	movs	r0, #0
 800fe20:	2100      	movs	r1, #0
 800fe22:	2d00      	cmp	r5, #0
 800fe24:	da09      	bge.n	800fe3a <__kernel_rem_pio2+0x5c2>
 800fe26:	f1bb 0f00 	cmp.w	fp, #0
 800fe2a:	d002      	beq.n	800fe32 <__kernel_rem_pio2+0x5ba>
 800fe2c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800fe30:	4619      	mov	r1, r3
 800fe32:	9b01      	ldr	r3, [sp, #4]
 800fe34:	e9c3 0100 	strd	r0, r1, [r3]
 800fe38:	e791      	b.n	800fd5e <__kernel_rem_pio2+0x4e6>
 800fe3a:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 800fe3e:	f7f0 fa45 	bl	80002cc <__adddf3>
 800fe42:	3d01      	subs	r5, #1
 800fe44:	e7ed      	b.n	800fe22 <__kernel_rem_pio2+0x5aa>
 800fe46:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 800fe4a:	f7f0 fa3f 	bl	80002cc <__adddf3>
 800fe4e:	3e01      	subs	r6, #1
 800fe50:	e7c0      	b.n	800fdd4 <__kernel_rem_pio2+0x55c>
 800fe52:	4602      	mov	r2, r0
 800fe54:	460b      	mov	r3, r1
 800fe56:	e7c5      	b.n	800fde4 <__kernel_rem_pio2+0x56c>
 800fe58:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 800fe5c:	f7f0 fa36 	bl	80002cc <__adddf3>
 800fe60:	3401      	adds	r4, #1
 800fe62:	e7ca      	b.n	800fdfa <__kernel_rem_pio2+0x582>
 800fe64:	e9da 8900 	ldrd	r8, r9, [sl]
 800fe68:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 800fe6c:	9b02      	ldr	r3, [sp, #8]
 800fe6e:	3b01      	subs	r3, #1
 800fe70:	9302      	str	r3, [sp, #8]
 800fe72:	4632      	mov	r2, r6
 800fe74:	463b      	mov	r3, r7
 800fe76:	4640      	mov	r0, r8
 800fe78:	4649      	mov	r1, r9
 800fe7a:	f7f0 fa27 	bl	80002cc <__adddf3>
 800fe7e:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800fe82:	4602      	mov	r2, r0
 800fe84:	460b      	mov	r3, r1
 800fe86:	4640      	mov	r0, r8
 800fe88:	4649      	mov	r1, r9
 800fe8a:	f7f0 fa1d 	bl	80002c8 <__aeabi_dsub>
 800fe8e:	4632      	mov	r2, r6
 800fe90:	463b      	mov	r3, r7
 800fe92:	f7f0 fa1b 	bl	80002cc <__adddf3>
 800fe96:	ed9d 7b08 	vldr	d7, [sp, #32]
 800fe9a:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800fe9e:	ed8a 7b00 	vstr	d7, [sl]
 800fea2:	e76e      	b.n	800fd82 <__kernel_rem_pio2+0x50a>
 800fea4:	e9d4 8900 	ldrd	r8, r9, [r4]
 800fea8:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
 800feac:	4640      	mov	r0, r8
 800feae:	4632      	mov	r2, r6
 800feb0:	463b      	mov	r3, r7
 800feb2:	4649      	mov	r1, r9
 800feb4:	f7f0 fa0a 	bl	80002cc <__adddf3>
 800feb8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800febc:	4602      	mov	r2, r0
 800febe:	460b      	mov	r3, r1
 800fec0:	4640      	mov	r0, r8
 800fec2:	4649      	mov	r1, r9
 800fec4:	f7f0 fa00 	bl	80002c8 <__aeabi_dsub>
 800fec8:	4632      	mov	r2, r6
 800feca:	463b      	mov	r3, r7
 800fecc:	f7f0 f9fe 	bl	80002cc <__adddf3>
 800fed0:	ed9d 7b02 	vldr	d7, [sp, #8]
 800fed4:	e9c4 0102 	strd	r0, r1, [r4, #8]
 800fed8:	ed84 7b00 	vstr	d7, [r4]
 800fedc:	f10a 3aff 	add.w	sl, sl, #4294967295
 800fee0:	e755      	b.n	800fd8e <__kernel_rem_pio2+0x516>
 800fee2:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 800fee6:	f7f0 f9f1 	bl	80002cc <__adddf3>
 800feea:	3d01      	subs	r5, #1
 800feec:	e759      	b.n	800fda2 <__kernel_rem_pio2+0x52a>
 800feee:	9b01      	ldr	r3, [sp, #4]
 800fef0:	9a01      	ldr	r2, [sp, #4]
 800fef2:	601d      	str	r5, [r3, #0]
 800fef4:	f106 4400 	add.w	r4, r6, #2147483648	; 0x80000000
 800fef8:	605c      	str	r4, [r3, #4]
 800fefa:	609f      	str	r7, [r3, #8]
 800fefc:	f108 4300 	add.w	r3, r8, #2147483648	; 0x80000000
 800ff00:	60d3      	str	r3, [r2, #12]
 800ff02:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800ff06:	6110      	str	r0, [r2, #16]
 800ff08:	6153      	str	r3, [r2, #20]
 800ff0a:	e728      	b.n	800fd5e <__kernel_rem_pio2+0x4e6>
 800ff0c:	41700000 	.word	0x41700000
 800ff10:	3e700000 	.word	0x3e700000
 800ff14:	00000000 	.word	0x00000000

0800ff18 <__kernel_tan>:
 800ff18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff1c:	ed2d 8b06 	vpush	{d8-d10}
 800ff20:	ec5b ab10 	vmov	sl, fp, d0
 800ff24:	4be0      	ldr	r3, [pc, #896]	; (80102a8 <__kernel_tan+0x390>)
 800ff26:	b083      	sub	sp, #12
 800ff28:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
 800ff2c:	429f      	cmp	r7, r3
 800ff2e:	ec59 8b11 	vmov	r8, r9, d1
 800ff32:	4606      	mov	r6, r0
 800ff34:	f8cd b000 	str.w	fp, [sp]
 800ff38:	dc61      	bgt.n	800fffe <__kernel_tan+0xe6>
 800ff3a:	ee10 0a10 	vmov	r0, s0
 800ff3e:	4659      	mov	r1, fp
 800ff40:	f7f0 fe2a 	bl	8000b98 <__aeabi_d2iz>
 800ff44:	4605      	mov	r5, r0
 800ff46:	2800      	cmp	r0, #0
 800ff48:	f040 8083 	bne.w	8010052 <__kernel_tan+0x13a>
 800ff4c:	1c73      	adds	r3, r6, #1
 800ff4e:	4652      	mov	r2, sl
 800ff50:	4313      	orrs	r3, r2
 800ff52:	433b      	orrs	r3, r7
 800ff54:	d112      	bne.n	800ff7c <__kernel_tan+0x64>
 800ff56:	ec4b ab10 	vmov	d0, sl, fp
 800ff5a:	f7ff fa41 	bl	800f3e0 <fabs>
 800ff5e:	49d3      	ldr	r1, [pc, #844]	; (80102ac <__kernel_tan+0x394>)
 800ff60:	ec53 2b10 	vmov	r2, r3, d0
 800ff64:	2000      	movs	r0, #0
 800ff66:	f7f0 fc91 	bl	800088c <__aeabi_ddiv>
 800ff6a:	4682      	mov	sl, r0
 800ff6c:	468b      	mov	fp, r1
 800ff6e:	ec4b ab10 	vmov	d0, sl, fp
 800ff72:	b003      	add	sp, #12
 800ff74:	ecbd 8b06 	vpop	{d8-d10}
 800ff78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ff7c:	2e01      	cmp	r6, #1
 800ff7e:	d0f6      	beq.n	800ff6e <__kernel_tan+0x56>
 800ff80:	4642      	mov	r2, r8
 800ff82:	464b      	mov	r3, r9
 800ff84:	4650      	mov	r0, sl
 800ff86:	4659      	mov	r1, fp
 800ff88:	f7f0 f9a0 	bl	80002cc <__adddf3>
 800ff8c:	4602      	mov	r2, r0
 800ff8e:	460b      	mov	r3, r1
 800ff90:	460f      	mov	r7, r1
 800ff92:	2000      	movs	r0, #0
 800ff94:	49c6      	ldr	r1, [pc, #792]	; (80102b0 <__kernel_tan+0x398>)
 800ff96:	f7f0 fc79 	bl	800088c <__aeabi_ddiv>
 800ff9a:	e9cd 0100 	strd	r0, r1, [sp]
 800ff9e:	e9dd 2300 	ldrd	r2, r3, [sp]
 800ffa2:	462e      	mov	r6, r5
 800ffa4:	4652      	mov	r2, sl
 800ffa6:	462c      	mov	r4, r5
 800ffa8:	4630      	mov	r0, r6
 800ffaa:	461d      	mov	r5, r3
 800ffac:	4639      	mov	r1, r7
 800ffae:	465b      	mov	r3, fp
 800ffb0:	f7f0 f98a 	bl	80002c8 <__aeabi_dsub>
 800ffb4:	4602      	mov	r2, r0
 800ffb6:	460b      	mov	r3, r1
 800ffb8:	4640      	mov	r0, r8
 800ffba:	4649      	mov	r1, r9
 800ffbc:	f7f0 f984 	bl	80002c8 <__aeabi_dsub>
 800ffc0:	4632      	mov	r2, r6
 800ffc2:	462b      	mov	r3, r5
 800ffc4:	f7f0 fb38 	bl	8000638 <__aeabi_dmul>
 800ffc8:	4632      	mov	r2, r6
 800ffca:	4680      	mov	r8, r0
 800ffcc:	4689      	mov	r9, r1
 800ffce:	462b      	mov	r3, r5
 800ffd0:	4630      	mov	r0, r6
 800ffd2:	4639      	mov	r1, r7
 800ffd4:	f7f0 fb30 	bl	8000638 <__aeabi_dmul>
 800ffd8:	4bb4      	ldr	r3, [pc, #720]	; (80102ac <__kernel_tan+0x394>)
 800ffda:	2200      	movs	r2, #0
 800ffdc:	f7f0 f976 	bl	80002cc <__adddf3>
 800ffe0:	4602      	mov	r2, r0
 800ffe2:	460b      	mov	r3, r1
 800ffe4:	4640      	mov	r0, r8
 800ffe6:	4649      	mov	r1, r9
 800ffe8:	f7f0 f970 	bl	80002cc <__adddf3>
 800ffec:	e9dd 2300 	ldrd	r2, r3, [sp]
 800fff0:	f7f0 fb22 	bl	8000638 <__aeabi_dmul>
 800fff4:	4622      	mov	r2, r4
 800fff6:	462b      	mov	r3, r5
 800fff8:	f7f0 f968 	bl	80002cc <__adddf3>
 800fffc:	e7b5      	b.n	800ff6a <__kernel_tan+0x52>
 800fffe:	4bad      	ldr	r3, [pc, #692]	; (80102b4 <__kernel_tan+0x39c>)
 8010000:	429f      	cmp	r7, r3
 8010002:	dd26      	ble.n	8010052 <__kernel_tan+0x13a>
 8010004:	9b00      	ldr	r3, [sp, #0]
 8010006:	2b00      	cmp	r3, #0
 8010008:	da09      	bge.n	801001e <__kernel_tan+0x106>
 801000a:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 801000e:	469b      	mov	fp, r3
 8010010:	ee10 aa10 	vmov	sl, s0
 8010014:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8010018:	ee11 8a10 	vmov	r8, s2
 801001c:	4699      	mov	r9, r3
 801001e:	4652      	mov	r2, sl
 8010020:	465b      	mov	r3, fp
 8010022:	a183      	add	r1, pc, #524	; (adr r1, 8010230 <__kernel_tan+0x318>)
 8010024:	e9d1 0100 	ldrd	r0, r1, [r1]
 8010028:	f7f0 f94e 	bl	80002c8 <__aeabi_dsub>
 801002c:	4642      	mov	r2, r8
 801002e:	464b      	mov	r3, r9
 8010030:	4604      	mov	r4, r0
 8010032:	460d      	mov	r5, r1
 8010034:	a180      	add	r1, pc, #512	; (adr r1, 8010238 <__kernel_tan+0x320>)
 8010036:	e9d1 0100 	ldrd	r0, r1, [r1]
 801003a:	f7f0 f945 	bl	80002c8 <__aeabi_dsub>
 801003e:	4622      	mov	r2, r4
 8010040:	462b      	mov	r3, r5
 8010042:	f7f0 f943 	bl	80002cc <__adddf3>
 8010046:	f04f 0800 	mov.w	r8, #0
 801004a:	4682      	mov	sl, r0
 801004c:	468b      	mov	fp, r1
 801004e:	f04f 0900 	mov.w	r9, #0
 8010052:	4652      	mov	r2, sl
 8010054:	465b      	mov	r3, fp
 8010056:	4650      	mov	r0, sl
 8010058:	4659      	mov	r1, fp
 801005a:	f7f0 faed 	bl	8000638 <__aeabi_dmul>
 801005e:	4602      	mov	r2, r0
 8010060:	460b      	mov	r3, r1
 8010062:	ec43 2b18 	vmov	d8, r2, r3
 8010066:	f7f0 fae7 	bl	8000638 <__aeabi_dmul>
 801006a:	ec53 2b18 	vmov	r2, r3, d8
 801006e:	4604      	mov	r4, r0
 8010070:	460d      	mov	r5, r1
 8010072:	4650      	mov	r0, sl
 8010074:	4659      	mov	r1, fp
 8010076:	f7f0 fadf 	bl	8000638 <__aeabi_dmul>
 801007a:	a371      	add	r3, pc, #452	; (adr r3, 8010240 <__kernel_tan+0x328>)
 801007c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010080:	ec41 0b19 	vmov	d9, r0, r1
 8010084:	4620      	mov	r0, r4
 8010086:	4629      	mov	r1, r5
 8010088:	f7f0 fad6 	bl	8000638 <__aeabi_dmul>
 801008c:	a36e      	add	r3, pc, #440	; (adr r3, 8010248 <__kernel_tan+0x330>)
 801008e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010092:	f7f0 f91b 	bl	80002cc <__adddf3>
 8010096:	4622      	mov	r2, r4
 8010098:	462b      	mov	r3, r5
 801009a:	f7f0 facd 	bl	8000638 <__aeabi_dmul>
 801009e:	a36c      	add	r3, pc, #432	; (adr r3, 8010250 <__kernel_tan+0x338>)
 80100a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100a4:	f7f0 f912 	bl	80002cc <__adddf3>
 80100a8:	4622      	mov	r2, r4
 80100aa:	462b      	mov	r3, r5
 80100ac:	f7f0 fac4 	bl	8000638 <__aeabi_dmul>
 80100b0:	a369      	add	r3, pc, #420	; (adr r3, 8010258 <__kernel_tan+0x340>)
 80100b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100b6:	f7f0 f909 	bl	80002cc <__adddf3>
 80100ba:	4622      	mov	r2, r4
 80100bc:	462b      	mov	r3, r5
 80100be:	f7f0 fabb 	bl	8000638 <__aeabi_dmul>
 80100c2:	a367      	add	r3, pc, #412	; (adr r3, 8010260 <__kernel_tan+0x348>)
 80100c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100c8:	f7f0 f900 	bl	80002cc <__adddf3>
 80100cc:	4622      	mov	r2, r4
 80100ce:	462b      	mov	r3, r5
 80100d0:	f7f0 fab2 	bl	8000638 <__aeabi_dmul>
 80100d4:	a364      	add	r3, pc, #400	; (adr r3, 8010268 <__kernel_tan+0x350>)
 80100d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100da:	f7f0 f8f7 	bl	80002cc <__adddf3>
 80100de:	ec53 2b18 	vmov	r2, r3, d8
 80100e2:	f7f0 faa9 	bl	8000638 <__aeabi_dmul>
 80100e6:	a362      	add	r3, pc, #392	; (adr r3, 8010270 <__kernel_tan+0x358>)
 80100e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100ec:	ec41 0b1a 	vmov	d10, r0, r1
 80100f0:	4620      	mov	r0, r4
 80100f2:	4629      	mov	r1, r5
 80100f4:	f7f0 faa0 	bl	8000638 <__aeabi_dmul>
 80100f8:	a35f      	add	r3, pc, #380	; (adr r3, 8010278 <__kernel_tan+0x360>)
 80100fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100fe:	f7f0 f8e5 	bl	80002cc <__adddf3>
 8010102:	4622      	mov	r2, r4
 8010104:	462b      	mov	r3, r5
 8010106:	f7f0 fa97 	bl	8000638 <__aeabi_dmul>
 801010a:	a35d      	add	r3, pc, #372	; (adr r3, 8010280 <__kernel_tan+0x368>)
 801010c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010110:	f7f0 f8dc 	bl	80002cc <__adddf3>
 8010114:	4622      	mov	r2, r4
 8010116:	462b      	mov	r3, r5
 8010118:	f7f0 fa8e 	bl	8000638 <__aeabi_dmul>
 801011c:	a35a      	add	r3, pc, #360	; (adr r3, 8010288 <__kernel_tan+0x370>)
 801011e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010122:	f7f0 f8d3 	bl	80002cc <__adddf3>
 8010126:	4622      	mov	r2, r4
 8010128:	462b      	mov	r3, r5
 801012a:	f7f0 fa85 	bl	8000638 <__aeabi_dmul>
 801012e:	a358      	add	r3, pc, #352	; (adr r3, 8010290 <__kernel_tan+0x378>)
 8010130:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010134:	f7f0 f8ca 	bl	80002cc <__adddf3>
 8010138:	4622      	mov	r2, r4
 801013a:	462b      	mov	r3, r5
 801013c:	f7f0 fa7c 	bl	8000638 <__aeabi_dmul>
 8010140:	a355      	add	r3, pc, #340	; (adr r3, 8010298 <__kernel_tan+0x380>)
 8010142:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010146:	f7f0 f8c1 	bl	80002cc <__adddf3>
 801014a:	4602      	mov	r2, r0
 801014c:	460b      	mov	r3, r1
 801014e:	ec51 0b1a 	vmov	r0, r1, d10
 8010152:	f7f0 f8bb 	bl	80002cc <__adddf3>
 8010156:	ec53 2b19 	vmov	r2, r3, d9
 801015a:	f7f0 fa6d 	bl	8000638 <__aeabi_dmul>
 801015e:	4642      	mov	r2, r8
 8010160:	464b      	mov	r3, r9
 8010162:	f7f0 f8b3 	bl	80002cc <__adddf3>
 8010166:	ec53 2b18 	vmov	r2, r3, d8
 801016a:	f7f0 fa65 	bl	8000638 <__aeabi_dmul>
 801016e:	4642      	mov	r2, r8
 8010170:	464b      	mov	r3, r9
 8010172:	f7f0 f8ab 	bl	80002cc <__adddf3>
 8010176:	a34a      	add	r3, pc, #296	; (adr r3, 80102a0 <__kernel_tan+0x388>)
 8010178:	e9d3 2300 	ldrd	r2, r3, [r3]
 801017c:	4604      	mov	r4, r0
 801017e:	460d      	mov	r5, r1
 8010180:	ec51 0b19 	vmov	r0, r1, d9
 8010184:	f7f0 fa58 	bl	8000638 <__aeabi_dmul>
 8010188:	4622      	mov	r2, r4
 801018a:	462b      	mov	r3, r5
 801018c:	f7f0 f89e 	bl	80002cc <__adddf3>
 8010190:	460b      	mov	r3, r1
 8010192:	ec41 0b18 	vmov	d8, r0, r1
 8010196:	4602      	mov	r2, r0
 8010198:	4659      	mov	r1, fp
 801019a:	4650      	mov	r0, sl
 801019c:	f7f0 f896 	bl	80002cc <__adddf3>
 80101a0:	4b44      	ldr	r3, [pc, #272]	; (80102b4 <__kernel_tan+0x39c>)
 80101a2:	429f      	cmp	r7, r3
 80101a4:	4604      	mov	r4, r0
 80101a6:	460d      	mov	r5, r1
 80101a8:	f340 8086 	ble.w	80102b8 <__kernel_tan+0x3a0>
 80101ac:	4630      	mov	r0, r6
 80101ae:	f7f0 f9d9 	bl	8000564 <__aeabi_i2d>
 80101b2:	4622      	mov	r2, r4
 80101b4:	4680      	mov	r8, r0
 80101b6:	4689      	mov	r9, r1
 80101b8:	462b      	mov	r3, r5
 80101ba:	4620      	mov	r0, r4
 80101bc:	4629      	mov	r1, r5
 80101be:	f7f0 fa3b 	bl	8000638 <__aeabi_dmul>
 80101c2:	4642      	mov	r2, r8
 80101c4:	4606      	mov	r6, r0
 80101c6:	460f      	mov	r7, r1
 80101c8:	464b      	mov	r3, r9
 80101ca:	4620      	mov	r0, r4
 80101cc:	4629      	mov	r1, r5
 80101ce:	f7f0 f87d 	bl	80002cc <__adddf3>
 80101d2:	4602      	mov	r2, r0
 80101d4:	460b      	mov	r3, r1
 80101d6:	4630      	mov	r0, r6
 80101d8:	4639      	mov	r1, r7
 80101da:	f7f0 fb57 	bl	800088c <__aeabi_ddiv>
 80101de:	ec53 2b18 	vmov	r2, r3, d8
 80101e2:	f7f0 f871 	bl	80002c8 <__aeabi_dsub>
 80101e6:	4602      	mov	r2, r0
 80101e8:	460b      	mov	r3, r1
 80101ea:	4650      	mov	r0, sl
 80101ec:	4659      	mov	r1, fp
 80101ee:	f7f0 f86b 	bl	80002c8 <__aeabi_dsub>
 80101f2:	4602      	mov	r2, r0
 80101f4:	460b      	mov	r3, r1
 80101f6:	f7f0 f869 	bl	80002cc <__adddf3>
 80101fa:	4602      	mov	r2, r0
 80101fc:	460b      	mov	r3, r1
 80101fe:	4640      	mov	r0, r8
 8010200:	4649      	mov	r1, r9
 8010202:	f7f0 f861 	bl	80002c8 <__aeabi_dsub>
 8010206:	9b00      	ldr	r3, [sp, #0]
 8010208:	ea4f 7aa3 	mov.w	sl, r3, asr #30
 801020c:	f00a 0a02 	and.w	sl, sl, #2
 8010210:	4604      	mov	r4, r0
 8010212:	f1ca 0001 	rsb	r0, sl, #1
 8010216:	460d      	mov	r5, r1
 8010218:	f7f0 f9a4 	bl	8000564 <__aeabi_i2d>
 801021c:	4602      	mov	r2, r0
 801021e:	460b      	mov	r3, r1
 8010220:	4620      	mov	r0, r4
 8010222:	4629      	mov	r1, r5
 8010224:	f7f0 fa08 	bl	8000638 <__aeabi_dmul>
 8010228:	e69f      	b.n	800ff6a <__kernel_tan+0x52>
 801022a:	bf00      	nop
 801022c:	f3af 8000 	nop.w
 8010230:	54442d18 	.word	0x54442d18
 8010234:	3fe921fb 	.word	0x3fe921fb
 8010238:	33145c07 	.word	0x33145c07
 801023c:	3c81a626 	.word	0x3c81a626
 8010240:	74bf7ad4 	.word	0x74bf7ad4
 8010244:	3efb2a70 	.word	0x3efb2a70
 8010248:	32f0a7e9 	.word	0x32f0a7e9
 801024c:	3f12b80f 	.word	0x3f12b80f
 8010250:	1a8d1068 	.word	0x1a8d1068
 8010254:	3f3026f7 	.word	0x3f3026f7
 8010258:	fee08315 	.word	0xfee08315
 801025c:	3f57dbc8 	.word	0x3f57dbc8
 8010260:	e96e8493 	.word	0xe96e8493
 8010264:	3f8226e3 	.word	0x3f8226e3
 8010268:	1bb341fe 	.word	0x1bb341fe
 801026c:	3faba1ba 	.word	0x3faba1ba
 8010270:	db605373 	.word	0xdb605373
 8010274:	bef375cb 	.word	0xbef375cb
 8010278:	a03792a6 	.word	0xa03792a6
 801027c:	3f147e88 	.word	0x3f147e88
 8010280:	f2f26501 	.word	0xf2f26501
 8010284:	3f4344d8 	.word	0x3f4344d8
 8010288:	c9560328 	.word	0xc9560328
 801028c:	3f6d6d22 	.word	0x3f6d6d22
 8010290:	8406d637 	.word	0x8406d637
 8010294:	3f9664f4 	.word	0x3f9664f4
 8010298:	1110fe7a 	.word	0x1110fe7a
 801029c:	3fc11111 	.word	0x3fc11111
 80102a0:	55555563 	.word	0x55555563
 80102a4:	3fd55555 	.word	0x3fd55555
 80102a8:	3e2fffff 	.word	0x3e2fffff
 80102ac:	3ff00000 	.word	0x3ff00000
 80102b0:	bff00000 	.word	0xbff00000
 80102b4:	3fe59427 	.word	0x3fe59427
 80102b8:	2e01      	cmp	r6, #1
 80102ba:	d02f      	beq.n	801031c <__kernel_tan+0x404>
 80102bc:	460f      	mov	r7, r1
 80102be:	4602      	mov	r2, r0
 80102c0:	460b      	mov	r3, r1
 80102c2:	4689      	mov	r9, r1
 80102c4:	2000      	movs	r0, #0
 80102c6:	4917      	ldr	r1, [pc, #92]	; (8010324 <__kernel_tan+0x40c>)
 80102c8:	f7f0 fae0 	bl	800088c <__aeabi_ddiv>
 80102cc:	2600      	movs	r6, #0
 80102ce:	e9cd 0100 	strd	r0, r1, [sp]
 80102d2:	4652      	mov	r2, sl
 80102d4:	465b      	mov	r3, fp
 80102d6:	4630      	mov	r0, r6
 80102d8:	4639      	mov	r1, r7
 80102da:	f7ef fff5 	bl	80002c8 <__aeabi_dsub>
 80102de:	e9dd 4500 	ldrd	r4, r5, [sp]
 80102e2:	4602      	mov	r2, r0
 80102e4:	460b      	mov	r3, r1
 80102e6:	ec51 0b18 	vmov	r0, r1, d8
 80102ea:	f7ef ffed 	bl	80002c8 <__aeabi_dsub>
 80102ee:	4632      	mov	r2, r6
 80102f0:	462b      	mov	r3, r5
 80102f2:	f7f0 f9a1 	bl	8000638 <__aeabi_dmul>
 80102f6:	46b0      	mov	r8, r6
 80102f8:	460f      	mov	r7, r1
 80102fa:	4642      	mov	r2, r8
 80102fc:	462b      	mov	r3, r5
 80102fe:	4634      	mov	r4, r6
 8010300:	4649      	mov	r1, r9
 8010302:	4606      	mov	r6, r0
 8010304:	4640      	mov	r0, r8
 8010306:	f7f0 f997 	bl	8000638 <__aeabi_dmul>
 801030a:	4b07      	ldr	r3, [pc, #28]	; (8010328 <__kernel_tan+0x410>)
 801030c:	2200      	movs	r2, #0
 801030e:	f7ef ffdd 	bl	80002cc <__adddf3>
 8010312:	4602      	mov	r2, r0
 8010314:	460b      	mov	r3, r1
 8010316:	4630      	mov	r0, r6
 8010318:	4639      	mov	r1, r7
 801031a:	e665      	b.n	800ffe8 <__kernel_tan+0xd0>
 801031c:	4682      	mov	sl, r0
 801031e:	468b      	mov	fp, r1
 8010320:	e625      	b.n	800ff6e <__kernel_tan+0x56>
 8010322:	bf00      	nop
 8010324:	bff00000 	.word	0xbff00000
 8010328:	3ff00000 	.word	0x3ff00000
 801032c:	00000000 	.word	0x00000000

08010330 <floor>:
 8010330:	ec51 0b10 	vmov	r0, r1, d0
 8010334:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010338:	f3c1 570a 	ubfx	r7, r1, #20, #11
 801033c:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 8010340:	2e13      	cmp	r6, #19
 8010342:	ee10 5a10 	vmov	r5, s0
 8010346:	ee10 8a10 	vmov	r8, s0
 801034a:	460c      	mov	r4, r1
 801034c:	dc32      	bgt.n	80103b4 <floor+0x84>
 801034e:	2e00      	cmp	r6, #0
 8010350:	da14      	bge.n	801037c <floor+0x4c>
 8010352:	a333      	add	r3, pc, #204	; (adr r3, 8010420 <floor+0xf0>)
 8010354:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010358:	f7ef ffb8 	bl	80002cc <__adddf3>
 801035c:	2200      	movs	r2, #0
 801035e:	2300      	movs	r3, #0
 8010360:	f7f0 fbfa 	bl	8000b58 <__aeabi_dcmpgt>
 8010364:	b138      	cbz	r0, 8010376 <floor+0x46>
 8010366:	2c00      	cmp	r4, #0
 8010368:	da57      	bge.n	801041a <floor+0xea>
 801036a:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 801036e:	431d      	orrs	r5, r3
 8010370:	d001      	beq.n	8010376 <floor+0x46>
 8010372:	4c2d      	ldr	r4, [pc, #180]	; (8010428 <floor+0xf8>)
 8010374:	2500      	movs	r5, #0
 8010376:	4621      	mov	r1, r4
 8010378:	4628      	mov	r0, r5
 801037a:	e025      	b.n	80103c8 <floor+0x98>
 801037c:	4f2b      	ldr	r7, [pc, #172]	; (801042c <floor+0xfc>)
 801037e:	4137      	asrs	r7, r6
 8010380:	ea01 0307 	and.w	r3, r1, r7
 8010384:	4303      	orrs	r3, r0
 8010386:	d01f      	beq.n	80103c8 <floor+0x98>
 8010388:	a325      	add	r3, pc, #148	; (adr r3, 8010420 <floor+0xf0>)
 801038a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801038e:	f7ef ff9d 	bl	80002cc <__adddf3>
 8010392:	2200      	movs	r2, #0
 8010394:	2300      	movs	r3, #0
 8010396:	f7f0 fbdf 	bl	8000b58 <__aeabi_dcmpgt>
 801039a:	2800      	cmp	r0, #0
 801039c:	d0eb      	beq.n	8010376 <floor+0x46>
 801039e:	2c00      	cmp	r4, #0
 80103a0:	bfbe      	ittt	lt
 80103a2:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 80103a6:	fa43 f606 	asrlt.w	r6, r3, r6
 80103aa:	19a4      	addlt	r4, r4, r6
 80103ac:	ea24 0407 	bic.w	r4, r4, r7
 80103b0:	2500      	movs	r5, #0
 80103b2:	e7e0      	b.n	8010376 <floor+0x46>
 80103b4:	2e33      	cmp	r6, #51	; 0x33
 80103b6:	dd0b      	ble.n	80103d0 <floor+0xa0>
 80103b8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 80103bc:	d104      	bne.n	80103c8 <floor+0x98>
 80103be:	ee10 2a10 	vmov	r2, s0
 80103c2:	460b      	mov	r3, r1
 80103c4:	f7ef ff82 	bl	80002cc <__adddf3>
 80103c8:	ec41 0b10 	vmov	d0, r0, r1
 80103cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80103d0:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 80103d4:	f04f 33ff 	mov.w	r3, #4294967295
 80103d8:	fa23 f707 	lsr.w	r7, r3, r7
 80103dc:	4207      	tst	r7, r0
 80103de:	d0f3      	beq.n	80103c8 <floor+0x98>
 80103e0:	a30f      	add	r3, pc, #60	; (adr r3, 8010420 <floor+0xf0>)
 80103e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80103e6:	f7ef ff71 	bl	80002cc <__adddf3>
 80103ea:	2200      	movs	r2, #0
 80103ec:	2300      	movs	r3, #0
 80103ee:	f7f0 fbb3 	bl	8000b58 <__aeabi_dcmpgt>
 80103f2:	2800      	cmp	r0, #0
 80103f4:	d0bf      	beq.n	8010376 <floor+0x46>
 80103f6:	2c00      	cmp	r4, #0
 80103f8:	da02      	bge.n	8010400 <floor+0xd0>
 80103fa:	2e14      	cmp	r6, #20
 80103fc:	d103      	bne.n	8010406 <floor+0xd6>
 80103fe:	3401      	adds	r4, #1
 8010400:	ea25 0507 	bic.w	r5, r5, r7
 8010404:	e7b7      	b.n	8010376 <floor+0x46>
 8010406:	2301      	movs	r3, #1
 8010408:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 801040c:	fa03 f606 	lsl.w	r6, r3, r6
 8010410:	4435      	add	r5, r6
 8010412:	4545      	cmp	r5, r8
 8010414:	bf38      	it	cc
 8010416:	18e4      	addcc	r4, r4, r3
 8010418:	e7f2      	b.n	8010400 <floor+0xd0>
 801041a:	2500      	movs	r5, #0
 801041c:	462c      	mov	r4, r5
 801041e:	e7aa      	b.n	8010376 <floor+0x46>
 8010420:	8800759c 	.word	0x8800759c
 8010424:	7e37e43c 	.word	0x7e37e43c
 8010428:	bff00000 	.word	0xbff00000
 801042c:	000fffff 	.word	0x000fffff

08010430 <scalbn>:
 8010430:	b570      	push	{r4, r5, r6, lr}
 8010432:	ec55 4b10 	vmov	r4, r5, d0
 8010436:	f3c5 520a 	ubfx	r2, r5, #20, #11
 801043a:	4606      	mov	r6, r0
 801043c:	462b      	mov	r3, r5
 801043e:	b99a      	cbnz	r2, 8010468 <scalbn+0x38>
 8010440:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8010444:	4323      	orrs	r3, r4
 8010446:	d036      	beq.n	80104b6 <scalbn+0x86>
 8010448:	4b39      	ldr	r3, [pc, #228]	; (8010530 <scalbn+0x100>)
 801044a:	4629      	mov	r1, r5
 801044c:	ee10 0a10 	vmov	r0, s0
 8010450:	2200      	movs	r2, #0
 8010452:	f7f0 f8f1 	bl	8000638 <__aeabi_dmul>
 8010456:	4b37      	ldr	r3, [pc, #220]	; (8010534 <scalbn+0x104>)
 8010458:	429e      	cmp	r6, r3
 801045a:	4604      	mov	r4, r0
 801045c:	460d      	mov	r5, r1
 801045e:	da10      	bge.n	8010482 <scalbn+0x52>
 8010460:	a32b      	add	r3, pc, #172	; (adr r3, 8010510 <scalbn+0xe0>)
 8010462:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010466:	e03a      	b.n	80104de <scalbn+0xae>
 8010468:	f240 71ff 	movw	r1, #2047	; 0x7ff
 801046c:	428a      	cmp	r2, r1
 801046e:	d10c      	bne.n	801048a <scalbn+0x5a>
 8010470:	ee10 2a10 	vmov	r2, s0
 8010474:	4620      	mov	r0, r4
 8010476:	4629      	mov	r1, r5
 8010478:	f7ef ff28 	bl	80002cc <__adddf3>
 801047c:	4604      	mov	r4, r0
 801047e:	460d      	mov	r5, r1
 8010480:	e019      	b.n	80104b6 <scalbn+0x86>
 8010482:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8010486:	460b      	mov	r3, r1
 8010488:	3a36      	subs	r2, #54	; 0x36
 801048a:	4432      	add	r2, r6
 801048c:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8010490:	428a      	cmp	r2, r1
 8010492:	dd08      	ble.n	80104a6 <scalbn+0x76>
 8010494:	2d00      	cmp	r5, #0
 8010496:	a120      	add	r1, pc, #128	; (adr r1, 8010518 <scalbn+0xe8>)
 8010498:	e9d1 0100 	ldrd	r0, r1, [r1]
 801049c:	da1c      	bge.n	80104d8 <scalbn+0xa8>
 801049e:	a120      	add	r1, pc, #128	; (adr r1, 8010520 <scalbn+0xf0>)
 80104a0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80104a4:	e018      	b.n	80104d8 <scalbn+0xa8>
 80104a6:	2a00      	cmp	r2, #0
 80104a8:	dd08      	ble.n	80104bc <scalbn+0x8c>
 80104aa:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80104ae:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 80104b2:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 80104b6:	ec45 4b10 	vmov	d0, r4, r5
 80104ba:	bd70      	pop	{r4, r5, r6, pc}
 80104bc:	f112 0f35 	cmn.w	r2, #53	; 0x35
 80104c0:	da19      	bge.n	80104f6 <scalbn+0xc6>
 80104c2:	f24c 3350 	movw	r3, #50000	; 0xc350
 80104c6:	429e      	cmp	r6, r3
 80104c8:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 80104cc:	dd0a      	ble.n	80104e4 <scalbn+0xb4>
 80104ce:	a112      	add	r1, pc, #72	; (adr r1, 8010518 <scalbn+0xe8>)
 80104d0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80104d4:	2b00      	cmp	r3, #0
 80104d6:	d1e2      	bne.n	801049e <scalbn+0x6e>
 80104d8:	a30f      	add	r3, pc, #60	; (adr r3, 8010518 <scalbn+0xe8>)
 80104da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80104de:	f7f0 f8ab 	bl	8000638 <__aeabi_dmul>
 80104e2:	e7cb      	b.n	801047c <scalbn+0x4c>
 80104e4:	a10a      	add	r1, pc, #40	; (adr r1, 8010510 <scalbn+0xe0>)
 80104e6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80104ea:	2b00      	cmp	r3, #0
 80104ec:	d0b8      	beq.n	8010460 <scalbn+0x30>
 80104ee:	a10e      	add	r1, pc, #56	; (adr r1, 8010528 <scalbn+0xf8>)
 80104f0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80104f4:	e7b4      	b.n	8010460 <scalbn+0x30>
 80104f6:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80104fa:	3236      	adds	r2, #54	; 0x36
 80104fc:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8010500:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 8010504:	4620      	mov	r0, r4
 8010506:	4b0c      	ldr	r3, [pc, #48]	; (8010538 <scalbn+0x108>)
 8010508:	2200      	movs	r2, #0
 801050a:	e7e8      	b.n	80104de <scalbn+0xae>
 801050c:	f3af 8000 	nop.w
 8010510:	c2f8f359 	.word	0xc2f8f359
 8010514:	01a56e1f 	.word	0x01a56e1f
 8010518:	8800759c 	.word	0x8800759c
 801051c:	7e37e43c 	.word	0x7e37e43c
 8010520:	8800759c 	.word	0x8800759c
 8010524:	fe37e43c 	.word	0xfe37e43c
 8010528:	c2f8f359 	.word	0xc2f8f359
 801052c:	81a56e1f 	.word	0x81a56e1f
 8010530:	43500000 	.word	0x43500000
 8010534:	ffff3cb0 	.word	0xffff3cb0
 8010538:	3c900000 	.word	0x3c900000

0801053c <_init>:
 801053c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801053e:	bf00      	nop
 8010540:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8010542:	bc08      	pop	{r3}
 8010544:	469e      	mov	lr, r3
 8010546:	4770      	bx	lr

08010548 <_fini>:
 8010548:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801054a:	bf00      	nop
 801054c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801054e:	bc08      	pop	{r3}
 8010550:	469e      	mov	lr, r3
 8010552:	4770      	bx	lr
