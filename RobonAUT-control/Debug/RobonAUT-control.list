
RobonAUT-control.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000f004  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000006b8  0800f1d8  0800f1d8  0001f1d8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800f890  0800f890  00020248  2**0
                  CONTENTS
  4 .ARM          00000008  0800f890  0800f890  0001f890  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800f898  0800f898  00020248  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800f898  0800f898  0001f898  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800f89c  0800f89c  0001f89c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000248  20000000  0800f8a0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000798  20000248  0800fae8  00020248  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200009e0  0800fae8  000209e0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020248  2**0
                  CONTENTS, READONLY
 12 .debug_info   00017d66  00000000  00000000  00020278  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000037f1  00000000  00000000  00037fde  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001290  00000000  00000000  0003b7d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001128  00000000  00000000  0003ca60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00026298  00000000  00000000  0003db88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001894f  00000000  00000000  00063e20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000e1336  00000000  00000000  0007c76f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0015daa5  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00006040  00000000  00000000  0015daf8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000248 	.word	0x20000248
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800f1bc 	.word	0x0800f1bc

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	2000024c 	.word	0x2000024c
 800020c:	0800f1bc 	.word	0x0800f1bc

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295
 8000c9c:	f000 b974 	b.w	8000f88 <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f806 	bl	8000cb8 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__udivmoddi4>:
 8000cb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cbc:	9d08      	ldr	r5, [sp, #32]
 8000cbe:	4604      	mov	r4, r0
 8000cc0:	468e      	mov	lr, r1
 8000cc2:	2b00      	cmp	r3, #0
 8000cc4:	d14d      	bne.n	8000d62 <__udivmoddi4+0xaa>
 8000cc6:	428a      	cmp	r2, r1
 8000cc8:	4694      	mov	ip, r2
 8000cca:	d969      	bls.n	8000da0 <__udivmoddi4+0xe8>
 8000ccc:	fab2 f282 	clz	r2, r2
 8000cd0:	b152      	cbz	r2, 8000ce8 <__udivmoddi4+0x30>
 8000cd2:	fa01 f302 	lsl.w	r3, r1, r2
 8000cd6:	f1c2 0120 	rsb	r1, r2, #32
 8000cda:	fa20 f101 	lsr.w	r1, r0, r1
 8000cde:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ce2:	ea41 0e03 	orr.w	lr, r1, r3
 8000ce6:	4094      	lsls	r4, r2
 8000ce8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000cec:	0c21      	lsrs	r1, r4, #16
 8000cee:	fbbe f6f8 	udiv	r6, lr, r8
 8000cf2:	fa1f f78c 	uxth.w	r7, ip
 8000cf6:	fb08 e316 	mls	r3, r8, r6, lr
 8000cfa:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000cfe:	fb06 f107 	mul.w	r1, r6, r7
 8000d02:	4299      	cmp	r1, r3
 8000d04:	d90a      	bls.n	8000d1c <__udivmoddi4+0x64>
 8000d06:	eb1c 0303 	adds.w	r3, ip, r3
 8000d0a:	f106 30ff 	add.w	r0, r6, #4294967295
 8000d0e:	f080 811f 	bcs.w	8000f50 <__udivmoddi4+0x298>
 8000d12:	4299      	cmp	r1, r3
 8000d14:	f240 811c 	bls.w	8000f50 <__udivmoddi4+0x298>
 8000d18:	3e02      	subs	r6, #2
 8000d1a:	4463      	add	r3, ip
 8000d1c:	1a5b      	subs	r3, r3, r1
 8000d1e:	b2a4      	uxth	r4, r4
 8000d20:	fbb3 f0f8 	udiv	r0, r3, r8
 8000d24:	fb08 3310 	mls	r3, r8, r0, r3
 8000d28:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000d2c:	fb00 f707 	mul.w	r7, r0, r7
 8000d30:	42a7      	cmp	r7, r4
 8000d32:	d90a      	bls.n	8000d4a <__udivmoddi4+0x92>
 8000d34:	eb1c 0404 	adds.w	r4, ip, r4
 8000d38:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d3c:	f080 810a 	bcs.w	8000f54 <__udivmoddi4+0x29c>
 8000d40:	42a7      	cmp	r7, r4
 8000d42:	f240 8107 	bls.w	8000f54 <__udivmoddi4+0x29c>
 8000d46:	4464      	add	r4, ip
 8000d48:	3802      	subs	r0, #2
 8000d4a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d4e:	1be4      	subs	r4, r4, r7
 8000d50:	2600      	movs	r6, #0
 8000d52:	b11d      	cbz	r5, 8000d5c <__udivmoddi4+0xa4>
 8000d54:	40d4      	lsrs	r4, r2
 8000d56:	2300      	movs	r3, #0
 8000d58:	e9c5 4300 	strd	r4, r3, [r5]
 8000d5c:	4631      	mov	r1, r6
 8000d5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d62:	428b      	cmp	r3, r1
 8000d64:	d909      	bls.n	8000d7a <__udivmoddi4+0xc2>
 8000d66:	2d00      	cmp	r5, #0
 8000d68:	f000 80ef 	beq.w	8000f4a <__udivmoddi4+0x292>
 8000d6c:	2600      	movs	r6, #0
 8000d6e:	e9c5 0100 	strd	r0, r1, [r5]
 8000d72:	4630      	mov	r0, r6
 8000d74:	4631      	mov	r1, r6
 8000d76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d7a:	fab3 f683 	clz	r6, r3
 8000d7e:	2e00      	cmp	r6, #0
 8000d80:	d14a      	bne.n	8000e18 <__udivmoddi4+0x160>
 8000d82:	428b      	cmp	r3, r1
 8000d84:	d302      	bcc.n	8000d8c <__udivmoddi4+0xd4>
 8000d86:	4282      	cmp	r2, r0
 8000d88:	f200 80f9 	bhi.w	8000f7e <__udivmoddi4+0x2c6>
 8000d8c:	1a84      	subs	r4, r0, r2
 8000d8e:	eb61 0303 	sbc.w	r3, r1, r3
 8000d92:	2001      	movs	r0, #1
 8000d94:	469e      	mov	lr, r3
 8000d96:	2d00      	cmp	r5, #0
 8000d98:	d0e0      	beq.n	8000d5c <__udivmoddi4+0xa4>
 8000d9a:	e9c5 4e00 	strd	r4, lr, [r5]
 8000d9e:	e7dd      	b.n	8000d5c <__udivmoddi4+0xa4>
 8000da0:	b902      	cbnz	r2, 8000da4 <__udivmoddi4+0xec>
 8000da2:	deff      	udf	#255	; 0xff
 8000da4:	fab2 f282 	clz	r2, r2
 8000da8:	2a00      	cmp	r2, #0
 8000daa:	f040 8092 	bne.w	8000ed2 <__udivmoddi4+0x21a>
 8000dae:	eba1 010c 	sub.w	r1, r1, ip
 8000db2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000db6:	fa1f fe8c 	uxth.w	lr, ip
 8000dba:	2601      	movs	r6, #1
 8000dbc:	0c20      	lsrs	r0, r4, #16
 8000dbe:	fbb1 f3f7 	udiv	r3, r1, r7
 8000dc2:	fb07 1113 	mls	r1, r7, r3, r1
 8000dc6:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000dca:	fb0e f003 	mul.w	r0, lr, r3
 8000dce:	4288      	cmp	r0, r1
 8000dd0:	d908      	bls.n	8000de4 <__udivmoddi4+0x12c>
 8000dd2:	eb1c 0101 	adds.w	r1, ip, r1
 8000dd6:	f103 38ff 	add.w	r8, r3, #4294967295
 8000dda:	d202      	bcs.n	8000de2 <__udivmoddi4+0x12a>
 8000ddc:	4288      	cmp	r0, r1
 8000dde:	f200 80cb 	bhi.w	8000f78 <__udivmoddi4+0x2c0>
 8000de2:	4643      	mov	r3, r8
 8000de4:	1a09      	subs	r1, r1, r0
 8000de6:	b2a4      	uxth	r4, r4
 8000de8:	fbb1 f0f7 	udiv	r0, r1, r7
 8000dec:	fb07 1110 	mls	r1, r7, r0, r1
 8000df0:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000df4:	fb0e fe00 	mul.w	lr, lr, r0
 8000df8:	45a6      	cmp	lr, r4
 8000dfa:	d908      	bls.n	8000e0e <__udivmoddi4+0x156>
 8000dfc:	eb1c 0404 	adds.w	r4, ip, r4
 8000e00:	f100 31ff 	add.w	r1, r0, #4294967295
 8000e04:	d202      	bcs.n	8000e0c <__udivmoddi4+0x154>
 8000e06:	45a6      	cmp	lr, r4
 8000e08:	f200 80bb 	bhi.w	8000f82 <__udivmoddi4+0x2ca>
 8000e0c:	4608      	mov	r0, r1
 8000e0e:	eba4 040e 	sub.w	r4, r4, lr
 8000e12:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000e16:	e79c      	b.n	8000d52 <__udivmoddi4+0x9a>
 8000e18:	f1c6 0720 	rsb	r7, r6, #32
 8000e1c:	40b3      	lsls	r3, r6
 8000e1e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000e22:	ea4c 0c03 	orr.w	ip, ip, r3
 8000e26:	fa20 f407 	lsr.w	r4, r0, r7
 8000e2a:	fa01 f306 	lsl.w	r3, r1, r6
 8000e2e:	431c      	orrs	r4, r3
 8000e30:	40f9      	lsrs	r1, r7
 8000e32:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000e36:	fa00 f306 	lsl.w	r3, r0, r6
 8000e3a:	fbb1 f8f9 	udiv	r8, r1, r9
 8000e3e:	0c20      	lsrs	r0, r4, #16
 8000e40:	fa1f fe8c 	uxth.w	lr, ip
 8000e44:	fb09 1118 	mls	r1, r9, r8, r1
 8000e48:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e4c:	fb08 f00e 	mul.w	r0, r8, lr
 8000e50:	4288      	cmp	r0, r1
 8000e52:	fa02 f206 	lsl.w	r2, r2, r6
 8000e56:	d90b      	bls.n	8000e70 <__udivmoddi4+0x1b8>
 8000e58:	eb1c 0101 	adds.w	r1, ip, r1
 8000e5c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000e60:	f080 8088 	bcs.w	8000f74 <__udivmoddi4+0x2bc>
 8000e64:	4288      	cmp	r0, r1
 8000e66:	f240 8085 	bls.w	8000f74 <__udivmoddi4+0x2bc>
 8000e6a:	f1a8 0802 	sub.w	r8, r8, #2
 8000e6e:	4461      	add	r1, ip
 8000e70:	1a09      	subs	r1, r1, r0
 8000e72:	b2a4      	uxth	r4, r4
 8000e74:	fbb1 f0f9 	udiv	r0, r1, r9
 8000e78:	fb09 1110 	mls	r1, r9, r0, r1
 8000e7c:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000e80:	fb00 fe0e 	mul.w	lr, r0, lr
 8000e84:	458e      	cmp	lr, r1
 8000e86:	d908      	bls.n	8000e9a <__udivmoddi4+0x1e2>
 8000e88:	eb1c 0101 	adds.w	r1, ip, r1
 8000e8c:	f100 34ff 	add.w	r4, r0, #4294967295
 8000e90:	d26c      	bcs.n	8000f6c <__udivmoddi4+0x2b4>
 8000e92:	458e      	cmp	lr, r1
 8000e94:	d96a      	bls.n	8000f6c <__udivmoddi4+0x2b4>
 8000e96:	3802      	subs	r0, #2
 8000e98:	4461      	add	r1, ip
 8000e9a:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000e9e:	fba0 9402 	umull	r9, r4, r0, r2
 8000ea2:	eba1 010e 	sub.w	r1, r1, lr
 8000ea6:	42a1      	cmp	r1, r4
 8000ea8:	46c8      	mov	r8, r9
 8000eaa:	46a6      	mov	lr, r4
 8000eac:	d356      	bcc.n	8000f5c <__udivmoddi4+0x2a4>
 8000eae:	d053      	beq.n	8000f58 <__udivmoddi4+0x2a0>
 8000eb0:	b15d      	cbz	r5, 8000eca <__udivmoddi4+0x212>
 8000eb2:	ebb3 0208 	subs.w	r2, r3, r8
 8000eb6:	eb61 010e 	sbc.w	r1, r1, lr
 8000eba:	fa01 f707 	lsl.w	r7, r1, r7
 8000ebe:	fa22 f306 	lsr.w	r3, r2, r6
 8000ec2:	40f1      	lsrs	r1, r6
 8000ec4:	431f      	orrs	r7, r3
 8000ec6:	e9c5 7100 	strd	r7, r1, [r5]
 8000eca:	2600      	movs	r6, #0
 8000ecc:	4631      	mov	r1, r6
 8000ece:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ed2:	f1c2 0320 	rsb	r3, r2, #32
 8000ed6:	40d8      	lsrs	r0, r3
 8000ed8:	fa0c fc02 	lsl.w	ip, ip, r2
 8000edc:	fa21 f303 	lsr.w	r3, r1, r3
 8000ee0:	4091      	lsls	r1, r2
 8000ee2:	4301      	orrs	r1, r0
 8000ee4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ee8:	fa1f fe8c 	uxth.w	lr, ip
 8000eec:	fbb3 f0f7 	udiv	r0, r3, r7
 8000ef0:	fb07 3610 	mls	r6, r7, r0, r3
 8000ef4:	0c0b      	lsrs	r3, r1, #16
 8000ef6:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000efa:	fb00 f60e 	mul.w	r6, r0, lr
 8000efe:	429e      	cmp	r6, r3
 8000f00:	fa04 f402 	lsl.w	r4, r4, r2
 8000f04:	d908      	bls.n	8000f18 <__udivmoddi4+0x260>
 8000f06:	eb1c 0303 	adds.w	r3, ip, r3
 8000f0a:	f100 38ff 	add.w	r8, r0, #4294967295
 8000f0e:	d22f      	bcs.n	8000f70 <__udivmoddi4+0x2b8>
 8000f10:	429e      	cmp	r6, r3
 8000f12:	d92d      	bls.n	8000f70 <__udivmoddi4+0x2b8>
 8000f14:	3802      	subs	r0, #2
 8000f16:	4463      	add	r3, ip
 8000f18:	1b9b      	subs	r3, r3, r6
 8000f1a:	b289      	uxth	r1, r1
 8000f1c:	fbb3 f6f7 	udiv	r6, r3, r7
 8000f20:	fb07 3316 	mls	r3, r7, r6, r3
 8000f24:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f28:	fb06 f30e 	mul.w	r3, r6, lr
 8000f2c:	428b      	cmp	r3, r1
 8000f2e:	d908      	bls.n	8000f42 <__udivmoddi4+0x28a>
 8000f30:	eb1c 0101 	adds.w	r1, ip, r1
 8000f34:	f106 38ff 	add.w	r8, r6, #4294967295
 8000f38:	d216      	bcs.n	8000f68 <__udivmoddi4+0x2b0>
 8000f3a:	428b      	cmp	r3, r1
 8000f3c:	d914      	bls.n	8000f68 <__udivmoddi4+0x2b0>
 8000f3e:	3e02      	subs	r6, #2
 8000f40:	4461      	add	r1, ip
 8000f42:	1ac9      	subs	r1, r1, r3
 8000f44:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000f48:	e738      	b.n	8000dbc <__udivmoddi4+0x104>
 8000f4a:	462e      	mov	r6, r5
 8000f4c:	4628      	mov	r0, r5
 8000f4e:	e705      	b.n	8000d5c <__udivmoddi4+0xa4>
 8000f50:	4606      	mov	r6, r0
 8000f52:	e6e3      	b.n	8000d1c <__udivmoddi4+0x64>
 8000f54:	4618      	mov	r0, r3
 8000f56:	e6f8      	b.n	8000d4a <__udivmoddi4+0x92>
 8000f58:	454b      	cmp	r3, r9
 8000f5a:	d2a9      	bcs.n	8000eb0 <__udivmoddi4+0x1f8>
 8000f5c:	ebb9 0802 	subs.w	r8, r9, r2
 8000f60:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000f64:	3801      	subs	r0, #1
 8000f66:	e7a3      	b.n	8000eb0 <__udivmoddi4+0x1f8>
 8000f68:	4646      	mov	r6, r8
 8000f6a:	e7ea      	b.n	8000f42 <__udivmoddi4+0x28a>
 8000f6c:	4620      	mov	r0, r4
 8000f6e:	e794      	b.n	8000e9a <__udivmoddi4+0x1e2>
 8000f70:	4640      	mov	r0, r8
 8000f72:	e7d1      	b.n	8000f18 <__udivmoddi4+0x260>
 8000f74:	46d0      	mov	r8, sl
 8000f76:	e77b      	b.n	8000e70 <__udivmoddi4+0x1b8>
 8000f78:	3b02      	subs	r3, #2
 8000f7a:	4461      	add	r1, ip
 8000f7c:	e732      	b.n	8000de4 <__udivmoddi4+0x12c>
 8000f7e:	4630      	mov	r0, r6
 8000f80:	e709      	b.n	8000d96 <__udivmoddi4+0xde>
 8000f82:	4464      	add	r4, ip
 8000f84:	3802      	subs	r0, #2
 8000f86:	e742      	b.n	8000e0e <__udivmoddi4+0x156>

08000f88 <__aeabi_idiv0>:
 8000f88:	4770      	bx	lr
 8000f8a:	bf00      	nop

08000f8c <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000f8c:	b480      	push	{r7}
 8000f8e:	b083      	sub	sp, #12
 8000f90:	af00      	add	r7, sp, #0
 8000f92:	4603      	mov	r3, r0
 8000f94:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000f96:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f9a:	2b00      	cmp	r3, #0
 8000f9c:	db0b      	blt.n	8000fb6 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000f9e:	79fb      	ldrb	r3, [r7, #7]
 8000fa0:	f003 021f 	and.w	r2, r3, #31
 8000fa4:	4907      	ldr	r1, [pc, #28]	; (8000fc4 <__NVIC_EnableIRQ+0x38>)
 8000fa6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000faa:	095b      	lsrs	r3, r3, #5
 8000fac:	2001      	movs	r0, #1
 8000fae:	fa00 f202 	lsl.w	r2, r0, r2
 8000fb2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000fb6:	bf00      	nop
 8000fb8:	370c      	adds	r7, #12
 8000fba:	46bd      	mov	sp, r7
 8000fbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fc0:	4770      	bx	lr
 8000fc2:	bf00      	nop
 8000fc4:	e000e100 	.word	0xe000e100

08000fc8 <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8000fc8:	b480      	push	{r7}
 8000fca:	b083      	sub	sp, #12
 8000fcc:	af00      	add	r7, sp, #0
 8000fce:	4603      	mov	r3, r0
 8000fd0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000fd2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000fd6:	2b00      	cmp	r3, #0
 8000fd8:	db12      	blt.n	8001000 <__NVIC_DisableIRQ+0x38>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000fda:	79fb      	ldrb	r3, [r7, #7]
 8000fdc:	f003 021f 	and.w	r2, r3, #31
 8000fe0:	490a      	ldr	r1, [pc, #40]	; (800100c <__NVIC_DisableIRQ+0x44>)
 8000fe2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000fe6:	095b      	lsrs	r3, r3, #5
 8000fe8:	2001      	movs	r0, #1
 8000fea:	fa00 f202 	lsl.w	r2, r0, r2
 8000fee:	3320      	adds	r3, #32
 8000ff0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000ff4:	f3bf 8f4f 	dsb	sy
}
 8000ff8:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8000ffa:	f3bf 8f6f 	isb	sy
}
 8000ffe:	bf00      	nop
    __DSB();
    __ISB();
  }
}
 8001000:	bf00      	nop
 8001002:	370c      	adds	r7, #12
 8001004:	46bd      	mov	sp, r7
 8001006:	f85d 7b04 	ldr.w	r7, [sp], #4
 800100a:	4770      	bx	lr
 800100c:	e000e100 	.word	0xe000e100

08001010 <__NVIC_ClearPendingIRQ>:
  \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 8001010:	b480      	push	{r7}
 8001012:	b083      	sub	sp, #12
 8001014:	af00      	add	r7, sp, #0
 8001016:	4603      	mov	r3, r0
 8001018:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800101a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800101e:	2b00      	cmp	r3, #0
 8001020:	db0c      	blt.n	800103c <__NVIC_ClearPendingIRQ+0x2c>
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001022:	79fb      	ldrb	r3, [r7, #7]
 8001024:	f003 021f 	and.w	r2, r3, #31
 8001028:	4907      	ldr	r1, [pc, #28]	; (8001048 <__NVIC_ClearPendingIRQ+0x38>)
 800102a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800102e:	095b      	lsrs	r3, r3, #5
 8001030:	2001      	movs	r0, #1
 8001032:	fa00 f202 	lsl.w	r2, r0, r2
 8001036:	3360      	adds	r3, #96	; 0x60
 8001038:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 800103c:	bf00      	nop
 800103e:	370c      	adds	r7, #12
 8001040:	46bd      	mov	sp, r7
 8001042:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001046:	4770      	bx	lr
 8001048:	e000e100 	.word	0xe000e100

0800104c <__NVIC_SystemReset>:
/**
  \brief   System Reset
  \details Initiates a system reset request to reset the MCU.
 */
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
 800104c:	b480      	push	{r7}
 800104e:	af00      	add	r7, sp, #0
  __ASM volatile ("dsb 0xF":::"memory");
 8001050:	f3bf 8f4f 	dsb	sy
}
 8001054:	bf00      	nop
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 8001056:	4b06      	ldr	r3, [pc, #24]	; (8001070 <__NVIC_SystemReset+0x24>)
 8001058:	68db      	ldr	r3, [r3, #12]
 800105a:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 800105e:	4904      	ldr	r1, [pc, #16]	; (8001070 <__NVIC_SystemReset+0x24>)
 8001060:	4b04      	ldr	r3, [pc, #16]	; (8001074 <__NVIC_SystemReset+0x28>)
 8001062:	4313      	orrs	r3, r2
 8001064:	60cb      	str	r3, [r1, #12]
  __ASM volatile ("dsb 0xF":::"memory");
 8001066:	f3bf 8f4f 	dsb	sy
}
 800106a:	bf00      	nop
                            SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchanged */
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
 800106c:	bf00      	nop
 800106e:	e7fd      	b.n	800106c <__NVIC_SystemReset+0x20>
 8001070:	e000ed00 	.word	0xe000ed00
 8001074:	05fa0004 	.word	0x05fa0004

08001078 <F4_Basic_Init>:
volatile uint8_t fromPC[2];
uint8_t mode;
float v_ref; //mm/s

void F4_Basic_Init(UART_HandleTypeDef *huart_debugg,TIM_HandleTypeDef *htim_scheduler,TIM_HandleTypeDef *htim_motor,TIM_HandleTypeDef *htim_servo1,TIM_HandleTypeDef *htim_servo2, TIM_HandleTypeDef *htim_encoder)
{
 8001078:	b580      	push	{r7, lr}
 800107a:	b08e      	sub	sp, #56	; 0x38
 800107c:	af00      	add	r7, sp, #0
 800107e:	60f8      	str	r0, [r7, #12]
 8001080:	60b9      	str	r1, [r7, #8]
 8001082:	607a      	str	r2, [r7, #4]
 8001084:	603b      	str	r3, [r7, #0]
	char buf[40];
	LED_R(0);
 8001086:	2201      	movs	r2, #1
 8001088:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800108c:	4841      	ldr	r0, [pc, #260]	; (8001194 <F4_Basic_Init+0x11c>)
 800108e:	f006 f8a3 	bl	80071d8 <HAL_GPIO_WritePin>
	LED_B(0);
 8001092:	2201      	movs	r2, #1
 8001094:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8001098:	483e      	ldr	r0, [pc, #248]	; (8001194 <F4_Basic_Init+0x11c>)
 800109a:	f006 f89d 	bl	80071d8 <HAL_GPIO_WritePin>
	LED_G(0);
 800109e:	2201      	movs	r2, #1
 80010a0:	2102      	movs	r1, #2
 80010a2:	483c      	ldr	r0, [pc, #240]	; (8001194 <F4_Basic_Init+0x11c>)
 80010a4:	f006 f898 	bl	80071d8 <HAL_GPIO_WritePin>
	LED_Y(0);
 80010a8:	2201      	movs	r2, #1
 80010aa:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80010ae:	4839      	ldr	r0, [pc, #228]	; (8001194 <F4_Basic_Init+0x11c>)
 80010b0:	f006 f892 	bl	80071d8 <HAL_GPIO_WritePin>
	LED_NUCLEO(0);
 80010b4:	2200      	movs	r2, #0
 80010b6:	2120      	movs	r1, #32
 80010b8:	4837      	ldr	r0, [pc, #220]	; (8001198 <F4_Basic_Init+0x120>)
 80010ba:	f006 f88d 	bl	80071d8 <HAL_GPIO_WritePin>
	sprintf(buf,"\r\nRobonAUT 2023 Bit Bangers F4\r\n");// a buff tömb-be beleírom (stringprint) a string-emet. 1 karakter = 1 byte = 1 tömbelem
 80010be:	f107 0310 	add.w	r3, r7, #16
 80010c2:	4936      	ldr	r1, [pc, #216]	; (800119c <F4_Basic_Init+0x124>)
 80010c4:	4618      	mov	r0, r3
 80010c6:	f00a fbb3 	bl	800b830 <siprintf>
	HAL_UART_Transmit(huart_debugg,(uint8_t*) buf, strlen(buf), 100);// A UART2-őn (ide van kötve a programozó) kiküldöm a buf karaktertömböt (string) és maximum 10-ms -ot várok hogy ezt elvégezze a periféria
 80010ca:	f107 0310 	add.w	r3, r7, #16
 80010ce:	4618      	mov	r0, r3
 80010d0:	f7ff f89e 	bl	8000210 <strlen>
 80010d4:	4603      	mov	r3, r0
 80010d6:	b29a      	uxth	r2, r3
 80010d8:	f107 0110 	add.w	r1, r7, #16
 80010dc:	2364      	movs	r3, #100	; 0x64
 80010de:	68f8      	ldr	r0, [r7, #12]
 80010e0:	f008 fe3d 	bl	8009d5e <HAL_UART_Transmit>

	//MotorEnable engedélyezése
	motorEnRemote=0;//csak akkor ha megnyomtuk a ravaszt
 80010e4:	4b2e      	ldr	r3, [pc, #184]	; (80011a0 <F4_Basic_Init+0x128>)
 80010e6:	2200      	movs	r2, #0
 80010e8:	701a      	strb	r2, [r3, #0]
	motorEnLineOk=1;
 80010ea:	4b2e      	ldr	r3, [pc, #184]	; (80011a4 <F4_Basic_Init+0x12c>)
 80010ec:	2201      	movs	r2, #1
 80010ee:	701a      	strb	r2, [r3, #0]

	NVIC_ClearPendingIRQ(On_Board_Button_EXTI_IRQn);
 80010f0:	2028      	movs	r0, #40	; 0x28
 80010f2:	f7ff ff8d 	bl	8001010 <__NVIC_ClearPendingIRQ>
	swState[0] = swState[1] = 0;
 80010f6:	4b2c      	ldr	r3, [pc, #176]	; (80011a8 <F4_Basic_Init+0x130>)
 80010f8:	2200      	movs	r2, #0
 80010fa:	705a      	strb	r2, [r3, #1]
 80010fc:	4b2a      	ldr	r3, [pc, #168]	; (80011a8 <F4_Basic_Init+0x130>)
 80010fe:	785a      	ldrb	r2, [r3, #1]
 8001100:	4b29      	ldr	r3, [pc, #164]	; (80011a8 <F4_Basic_Init+0x130>)
 8001102:	701a      	strb	r2, [r3, #0]
	bFlag[0] = bFlag[1] = bFlag[2] = 0;
 8001104:	2200      	movs	r2, #0
 8001106:	4b29      	ldr	r3, [pc, #164]	; (80011ac <F4_Basic_Init+0x134>)
 8001108:	4611      	mov	r1, r2
 800110a:	7099      	strb	r1, [r3, #2]
 800110c:	4b27      	ldr	r3, [pc, #156]	; (80011ac <F4_Basic_Init+0x134>)
 800110e:	4611      	mov	r1, r2
 8001110:	7059      	strb	r1, [r3, #1]
 8001112:	4b26      	ldr	r3, [pc, #152]	; (80011ac <F4_Basic_Init+0x134>)
 8001114:	701a      	strb	r2, [r3, #0]
	fromPC[0]=150;
 8001116:	4b26      	ldr	r3, [pc, #152]	; (80011b0 <F4_Basic_Init+0x138>)
 8001118:	2296      	movs	r2, #150	; 0x96
 800111a:	701a      	strb	r2, [r3, #0]
	fromPC[1]=150;
 800111c:	4b24      	ldr	r3, [pc, #144]	; (80011b0 <F4_Basic_Init+0x138>)
 800111e:	2296      	movs	r2, #150	; 0x96
 8001120:	705a      	strb	r2, [r3, #1]
	mode=SKILL;
 8001122:	4b24      	ldr	r3, [pc, #144]	; (80011b4 <F4_Basic_Init+0x13c>)
 8001124:	2252      	movs	r2, #82	; 0x52
 8001126:	701a      	strb	r2, [r3, #0]
	v_ref = 1000;
 8001128:	4b23      	ldr	r3, [pc, #140]	; (80011b8 <F4_Basic_Init+0x140>)
 800112a:	4a24      	ldr	r2, [pc, #144]	; (80011bc <F4_Basic_Init+0x144>)
 800112c:	601a      	str	r2, [r3, #0]
	v=0;
 800112e:	4b24      	ldr	r3, [pc, #144]	; (80011c0 <F4_Basic_Init+0x148>)
 8001130:	f04f 0200 	mov.w	r2, #0
 8001134:	601a      	str	r2, [r3, #0]

	//timerek elindítása
	TIM1->CCR4=680;
 8001136:	4b23      	ldr	r3, [pc, #140]	; (80011c4 <F4_Basic_Init+0x14c>)
 8001138:	f44f 722a 	mov.w	r2, #680	; 0x2a8
 800113c:	641a      	str	r2, [r3, #64]	; 0x40
	TIM2->CCR1=684;
 800113e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001142:	f44f 722b 	mov.w	r2, #684	; 0x2ac
 8001146:	635a      	str	r2, [r3, #52]	; 0x34
	//TIM2->CCR1=684; //servot középre
	TIM3->CCR1=499; //0 kitöltési tényező a motorra
 8001148:	4b1f      	ldr	r3, [pc, #124]	; (80011c8 <F4_Basic_Init+0x150>)
 800114a:	f240 12f3 	movw	r2, #499	; 0x1f3
 800114e:	635a      	str	r2, [r3, #52]	; 0x34
	TIM3->CCR2=499;
 8001150:	4b1d      	ldr	r3, [pc, #116]	; (80011c8 <F4_Basic_Init+0x150>)
 8001152:	f240 12f3 	movw	r2, #499	; 0x1f3
 8001156:	639a      	str	r2, [r3, #56]	; 0x38
	HAL_TIM_Base_Start(htim_scheduler);//heart beat timer tick start
 8001158:	68b8      	ldr	r0, [r7, #8]
 800115a:	f006 ff11 	bl	8007f80 <HAL_TIM_Base_Start>
	HAL_TIM_PWM_Start(htim_motor, TIM_CHANNEL_1);//motor PWM-ek elindítása
 800115e:	2100      	movs	r1, #0
 8001160:	6878      	ldr	r0, [r7, #4]
 8001162:	f006 ffcf 	bl	8008104 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim_motor, TIM_CHANNEL_2);
 8001166:	2104      	movs	r1, #4
 8001168:	6878      	ldr	r0, [r7, #4]
 800116a:	f006 ffcb 	bl	8008104 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim_servo1, TIM_CHANNEL_1); //servo RC pwm elindítása
 800116e:	2100      	movs	r1, #0
 8001170:	6838      	ldr	r0, [r7, #0]
 8001172:	f006 ffc7 	bl	8008104 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim_servo2, TIM_CHANNEL_4); //servo RC pwm elindítása
 8001176:	210c      	movs	r1, #12
 8001178:	6c38      	ldr	r0, [r7, #64]	; 0x40
 800117a:	f006 ffc3 	bl	8008104 <HAL_TIM_PWM_Start>
	HAL_TIM_Encoder_Start(htim_encoder,TIM_CHANNEL_ALL);
 800117e:	213c      	movs	r1, #60	; 0x3c
 8001180:	6c78      	ldr	r0, [r7, #68]	; 0x44
 8001182:	f007 fba1 	bl	80088c8 <HAL_TIM_Encoder_Start>

	//Ha a PC-ről küldünk vmit azt fogadjuk
	//HAL_UART_Receive_IT(huart_debugg, fromPC, 2);
	NVIC_DisableIRQ(B1_EXTI_IRQn);
 8001186:	200a      	movs	r0, #10
 8001188:	f7ff ff1e 	bl	8000fc8 <__NVIC_DisableIRQ>
}
 800118c:	bf00      	nop
 800118e:	3738      	adds	r7, #56	; 0x38
 8001190:	46bd      	mov	sp, r7
 8001192:	bd80      	pop	{r7, pc}
 8001194:	40020400 	.word	0x40020400
 8001198:	40020000 	.word	0x40020000
 800119c:	0800f1d8 	.word	0x0800f1d8
 80011a0:	20000994 	.word	0x20000994
 80011a4:	20000995 	.word	0x20000995
 80011a8:	20000264 	.word	0x20000264
 80011ac:	20000268 	.word	0x20000268
 80011b0:	2000026c 	.word	0x2000026c
 80011b4:	2000026e 	.word	0x2000026e
 80011b8:	20000270 	.word	0x20000270
 80011bc:	447a0000 	.word	0x447a0000
 80011c0:	20000588 	.word	0x20000588
 80011c4:	40010000 	.word	0x40010000
 80011c8:	40000400 	.word	0x40000400

080011cc <HDI_Read_Task>:


void HDI_Read_Task(TIM_HandleTypeDef *htim_servo,uint32_t tick, uint32_t period)
{
 80011cc:	b580      	push	{r7, lr}
 80011ce:	b084      	sub	sp, #16
 80011d0:	af00      	add	r7, sp, #0
 80011d2:	60f8      	str	r0, [r7, #12]
 80011d4:	60b9      	str	r1, [r7, #8]
 80011d6:	607a      	str	r2, [r7, #4]
	static uint32_t hdi_read_task_tick=0;
	static uint8_t b1_state=0;

	if(hdi_read_task_tick>tick) return;
 80011d8:	4b50      	ldr	r3, [pc, #320]	; (800131c <HDI_Read_Task+0x150>)
 80011da:	681b      	ldr	r3, [r3, #0]
 80011dc:	68ba      	ldr	r2, [r7, #8]
 80011de:	429a      	cmp	r2, r3
 80011e0:	f0c0 8097 	bcc.w	8001312 <HDI_Read_Task+0x146>
	hdi_read_task_tick = tick + period;
 80011e4:	68ba      	ldr	r2, [r7, #8]
 80011e6:	687b      	ldr	r3, [r7, #4]
 80011e8:	4413      	add	r3, r2
 80011ea:	4a4c      	ldr	r2, [pc, #304]	; (800131c <HDI_Read_Task+0x150>)
 80011ec:	6013      	str	r3, [r2, #0]

	swState[0]=SW1;
 80011ee:	f44f 7180 	mov.w	r1, #256	; 0x100
 80011f2:	484b      	ldr	r0, [pc, #300]	; (8001320 <HDI_Read_Task+0x154>)
 80011f4:	f005 ffd8 	bl	80071a8 <HAL_GPIO_ReadPin>
 80011f8:	4603      	mov	r3, r0
 80011fa:	461a      	mov	r2, r3
 80011fc:	4b49      	ldr	r3, [pc, #292]	; (8001324 <HDI_Read_Task+0x158>)
 80011fe:	701a      	strb	r2, [r3, #0]
	swState[1]=SW2;
 8001200:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001204:	4848      	ldr	r0, [pc, #288]	; (8001328 <HDI_Read_Task+0x15c>)
 8001206:	f005 ffcf 	bl	80071a8 <HAL_GPIO_ReadPin>
 800120a:	4603      	mov	r3, r0
 800120c:	461a      	mov	r2, r3
 800120e:	4b45      	ldr	r3, [pc, #276]	; (8001324 <HDI_Read_Task+0x158>)
 8001210:	705a      	strb	r2, [r3, #1]

	if(swState[0] && mode==FAST) LED_G(1);
 8001212:	4b44      	ldr	r3, [pc, #272]	; (8001324 <HDI_Read_Task+0x158>)
 8001214:	781b      	ldrb	r3, [r3, #0]
 8001216:	2b00      	cmp	r3, #0
 8001218:	d008      	beq.n	800122c <HDI_Read_Task+0x60>
 800121a:	4b44      	ldr	r3, [pc, #272]	; (800132c <HDI_Read_Task+0x160>)
 800121c:	781b      	ldrb	r3, [r3, #0]
 800121e:	2b3f      	cmp	r3, #63	; 0x3f
 8001220:	d104      	bne.n	800122c <HDI_Read_Task+0x60>
 8001222:	2200      	movs	r2, #0
 8001224:	2102      	movs	r1, #2
 8001226:	4840      	ldr	r0, [pc, #256]	; (8001328 <HDI_Read_Task+0x15c>)
 8001228:	f005 ffd6 	bl	80071d8 <HAL_GPIO_WritePin>
	if(!swState[0] && mode==FAST) LED_G(0);
 800122c:	4b3d      	ldr	r3, [pc, #244]	; (8001324 <HDI_Read_Task+0x158>)
 800122e:	781b      	ldrb	r3, [r3, #0]
 8001230:	2b00      	cmp	r3, #0
 8001232:	d108      	bne.n	8001246 <HDI_Read_Task+0x7a>
 8001234:	4b3d      	ldr	r3, [pc, #244]	; (800132c <HDI_Read_Task+0x160>)
 8001236:	781b      	ldrb	r3, [r3, #0]
 8001238:	2b3f      	cmp	r3, #63	; 0x3f
 800123a:	d104      	bne.n	8001246 <HDI_Read_Task+0x7a>
 800123c:	2201      	movs	r2, #1
 800123e:	2102      	movs	r1, #2
 8001240:	4839      	ldr	r0, [pc, #228]	; (8001328 <HDI_Read_Task+0x15c>)
 8001242:	f005 ffc9 	bl	80071d8 <HAL_GPIO_WritePin>
	/*if(swState[1]) LED_B(1);
	else LED_B(0);*/

	if(bFlag[0])
 8001246:	4b3a      	ldr	r3, [pc, #232]	; (8001330 <HDI_Read_Task+0x164>)
 8001248:	781b      	ldrb	r3, [r3, #0]
 800124a:	b2db      	uxtb	r3, r3
 800124c:	2b00      	cmp	r3, #0
 800124e:	d031      	beq.n	80012b4 <HDI_Read_Task+0xe8>
	{
		bFlag[0]=0;
 8001250:	4b37      	ldr	r3, [pc, #220]	; (8001330 <HDI_Read_Task+0x164>)
 8001252:	2200      	movs	r2, #0
 8001254:	701a      	strb	r2, [r3, #0]
		//Milyen módban voltunk eddig?
		HAL_FLASH_Unlock();
 8001256:	f005 fc59 	bl	8006b0c <HAL_FLASH_Unlock>
		mode= *(__IO uint32_t *) FLASH_ADDRESS_SECTOR7;
 800125a:	4b36      	ldr	r3, [pc, #216]	; (8001334 <HDI_Read_Task+0x168>)
 800125c:	681b      	ldr	r3, [r3, #0]
 800125e:	b2da      	uxtb	r2, r3
 8001260:	4b32      	ldr	r3, [pc, #200]	; (800132c <HDI_Read_Task+0x160>)
 8001262:	701a      	strb	r2, [r3, #0]
		HAL_FLASH_Lock();
 8001264:	f005 fc74 	bl	8006b50 <HAL_FLASH_Lock>

		//section 7 törlése, hogy újraírhassuk a módot jelző bytot
		HAL_FLASH_Unlock();
 8001268:	f005 fc50 	bl	8006b0c <HAL_FLASH_Unlock>
		FLASH_Erase_Sector(7, FLASH_VOLTAGE_RANGE_3);
 800126c:	2102      	movs	r1, #2
 800126e:	2007      	movs	r0, #7
 8001270:	f005 fdbe 	bl	8006df0 <FLASH_Erase_Sector>
		HAL_FLASH_Lock();
 8001274:	f005 fc6c 	bl	8006b50 <HAL_FLASH_Lock>
		HAL_Delay(200);
 8001278:	20c8      	movs	r0, #200	; 0xc8
 800127a:	f004 f913 	bl	80054a4 <HAL_Delay>

		//Állítsuk át a módot
		HAL_FLASH_Unlock();
 800127e:	f005 fc45 	bl	8006b0c <HAL_FLASH_Unlock>
		if(mode==SKILL) HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_SECTOR7, FAST);
 8001282:	4b2a      	ldr	r3, [pc, #168]	; (800132c <HDI_Read_Task+0x160>)
 8001284:	781b      	ldrb	r3, [r3, #0]
 8001286:	2b52      	cmp	r3, #82	; 0x52
 8001288:	d108      	bne.n	800129c <HDI_Read_Task+0xd0>
 800128a:	f04f 023f 	mov.w	r2, #63	; 0x3f
 800128e:	f04f 0300 	mov.w	r3, #0
 8001292:	4928      	ldr	r1, [pc, #160]	; (8001334 <HDI_Read_Task+0x168>)
 8001294:	2000      	movs	r0, #0
 8001296:	f005 fbe5 	bl	8006a64 <HAL_FLASH_Program>
 800129a:	e007      	b.n	80012ac <HDI_Read_Task+0xe0>
		else HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_SECTOR7, SKILL);
 800129c:	f04f 0252 	mov.w	r2, #82	; 0x52
 80012a0:	f04f 0300 	mov.w	r3, #0
 80012a4:	4923      	ldr	r1, [pc, #140]	; (8001334 <HDI_Read_Task+0x168>)
 80012a6:	2000      	movs	r0, #0
 80012a8:	f005 fbdc 	bl	8006a64 <HAL_FLASH_Program>
		HAL_FLASH_Lock();
 80012ac:	f005 fc50 	bl	8006b50 <HAL_FLASH_Lock>

		NVIC_SystemReset(); //SW reseteljük a mikorvezérlőt
 80012b0:	f7ff fecc 	bl	800104c <__NVIC_SystemReset>
	}

	if(bFlag[1])
 80012b4:	4b1e      	ldr	r3, [pc, #120]	; (8001330 <HDI_Read_Task+0x164>)
 80012b6:	785b      	ldrb	r3, [r3, #1]
 80012b8:	b2db      	uxtb	r3, r3
 80012ba:	2b00      	cmp	r3, #0
 80012bc:	d02a      	beq.n	8001314 <HDI_Read_Task+0x148>
	{
		if(b1_state)HAL_TIM_PWM_Start(htim_servo, TIM_CHANNEL_1);
 80012be:	4b1e      	ldr	r3, [pc, #120]	; (8001338 <HDI_Read_Task+0x16c>)
 80012c0:	781b      	ldrb	r3, [r3, #0]
 80012c2:	2b00      	cmp	r3, #0
 80012c4:	d004      	beq.n	80012d0 <HDI_Read_Task+0x104>
 80012c6:	2100      	movs	r1, #0
 80012c8:	68f8      	ldr	r0, [r7, #12]
 80012ca:	f006 ff1b 	bl	8008104 <HAL_TIM_PWM_Start>
 80012ce:	e003      	b.n	80012d8 <HDI_Read_Task+0x10c>
		else HAL_TIM_PWM_Stop(htim_servo, TIM_CHANNEL_1);
 80012d0:	2100      	movs	r1, #0
 80012d2:	68f8      	ldr	r0, [r7, #12]
 80012d4:	f006 ffde 	bl	8008294 <HAL_TIM_PWM_Stop>
		LED_Y_TOGGLE;
 80012d8:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80012dc:	4812      	ldr	r0, [pc, #72]	; (8001328 <HDI_Read_Task+0x15c>)
 80012de:	f005 ff94 	bl	800720a <HAL_GPIO_TogglePin>
		b1_state = !b1_state;
 80012e2:	4b15      	ldr	r3, [pc, #84]	; (8001338 <HDI_Read_Task+0x16c>)
 80012e4:	781b      	ldrb	r3, [r3, #0]
 80012e6:	2b00      	cmp	r3, #0
 80012e8:	bf0c      	ite	eq
 80012ea:	2301      	moveq	r3, #1
 80012ec:	2300      	movne	r3, #0
 80012ee:	b2db      	uxtb	r3, r3
 80012f0:	461a      	mov	r2, r3
 80012f2:	4b11      	ldr	r3, [pc, #68]	; (8001338 <HDI_Read_Task+0x16c>)
 80012f4:	701a      	strb	r2, [r3, #0]
		bFlag[1]=0;
 80012f6:	4b0e      	ldr	r3, [pc, #56]	; (8001330 <HDI_Read_Task+0x164>)
 80012f8:	2200      	movs	r2, #0
 80012fa:	705a      	strb	r2, [r3, #1]
		HAL_Delay(800);
 80012fc:	f44f 7048 	mov.w	r0, #800	; 0x320
 8001300:	f004 f8d0 	bl	80054a4 <HAL_Delay>
		NVIC_ClearPendingIRQ(B1_EXTI_IRQn);
 8001304:	200a      	movs	r0, #10
 8001306:	f7ff fe83 	bl	8001010 <__NVIC_ClearPendingIRQ>
		NVIC_EnableIRQ(B1_EXTI_IRQn);
 800130a:	200a      	movs	r0, #10
 800130c:	f7ff fe3e 	bl	8000f8c <__NVIC_EnableIRQ>
 8001310:	e000      	b.n	8001314 <HDI_Read_Task+0x148>
	if(hdi_read_task_tick>tick) return;
 8001312:	bf00      	nop
	}

}
 8001314:	3710      	adds	r7, #16
 8001316:	46bd      	mov	sp, r7
 8001318:	bd80      	pop	{r7, pc}
 800131a:	bf00      	nop
 800131c:	20000274 	.word	0x20000274
 8001320:	40020000 	.word	0x40020000
 8001324:	20000264 	.word	0x20000264
 8001328:	40020400 	.word	0x40020400
 800132c:	2000026e 	.word	0x2000026e
 8001330:	20000268 	.word	0x20000268
 8001334:	08060000 	.word	0x08060000
 8001338:	20000278 	.word	0x20000278

0800133c <Uart_Receive_From_PC_ISR>:

void Uart_Receive_From_PC_ISR(UART_HandleTypeDef *huart)
{
 800133c:	b580      	push	{r7, lr}
 800133e:	b082      	sub	sp, #8
 8001340:	af00      	add	r7, sp, #0
 8001342:	6078      	str	r0, [r7, #4]
	LED_Y_TOGGLE;
 8001344:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001348:	480c      	ldr	r0, [pc, #48]	; (800137c <Uart_Receive_From_PC_ISR+0x40>)
 800134a:	f005 ff5e 	bl	800720a <HAL_GPIO_TogglePin>
	HAL_UART_Receive_IT(huart, (uint8_t*)fromPC, 2);
 800134e:	2202      	movs	r2, #2
 8001350:	490b      	ldr	r1, [pc, #44]	; (8001380 <Uart_Receive_From_PC_ISR+0x44>)
 8001352:	6878      	ldr	r0, [r7, #4]
 8001354:	f008 fe37 	bl	8009fc6 <HAL_UART_Receive_IT>
	TIM2->CCR1 = 4*fromPC[0];
 8001358:	4b09      	ldr	r3, [pc, #36]	; (8001380 <Uart_Receive_From_PC_ISR+0x44>)
 800135a:	781b      	ldrb	r3, [r3, #0]
 800135c:	b2db      	uxtb	r3, r3
 800135e:	009a      	lsls	r2, r3, #2
 8001360:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001364:	635a      	str	r2, [r3, #52]	; 0x34
	TIM1->CCR4 = 4*fromPC[1];
 8001366:	4b06      	ldr	r3, [pc, #24]	; (8001380 <Uart_Receive_From_PC_ISR+0x44>)
 8001368:	785b      	ldrb	r3, [r3, #1]
 800136a:	b2db      	uxtb	r3, r3
 800136c:	009a      	lsls	r2, r3, #2
 800136e:	4b05      	ldr	r3, [pc, #20]	; (8001384 <Uart_Receive_From_PC_ISR+0x48>)
 8001370:	641a      	str	r2, [r3, #64]	; 0x40
}
 8001372:	bf00      	nop
 8001374:	3708      	adds	r7, #8
 8001376:	46bd      	mov	sp, r7
 8001378:	bd80      	pop	{r7, pc}
 800137a:	bf00      	nop
 800137c:	40020400 	.word	0x40020400
 8001380:	2000026c 	.word	0x2000026c
 8001384:	40010000 	.word	0x40010000

08001388 <Create_Nodes>:
volatile uint8_t uartThunder[6];
volatile uint8_t thunderboardFlag=0;
node N[25];

void Create_Nodes(void)
{
 8001388:	b480      	push	{r7}
 800138a:	b083      	sub	sp, #12
 800138c:	af00      	add	r7, sp, #0
	int i;
	orientation=FORWARD;
 800138e:	4b04      	ldr	r3, [pc, #16]	; (80013a0 <Create_Nodes+0x18>)
 8001390:	2200      	movs	r2, #0
 8001392:	701a      	strb	r2, [r3, #0]
	nodeDetected=1;
 8001394:	4b03      	ldr	r3, [pc, #12]	; (80013a4 <Create_Nodes+0x1c>)
 8001396:	2201      	movs	r2, #1
 8001398:	701a      	strb	r2, [r3, #0]

	for(i=0;i<25;i++)
 800139a:	2300      	movs	r3, #0
 800139c:	607b      	str	r3, [r7, #4]
 800139e:	e09f      	b.n	80014e0 <Create_Nodes+0x158>
 80013a0:	20000279 	.word	0x20000279
 80013a4:	2000027a 	.word	0x2000027a
	{
		N[i].id=65+i;
 80013a8:	687b      	ldr	r3, [r7, #4]
 80013aa:	b2db      	uxtb	r3, r3
 80013ac:	3341      	adds	r3, #65	; 0x41
 80013ae:	b2d8      	uxtb	r0, r3
 80013b0:	49c1      	ldr	r1, [pc, #772]	; (80016b8 <Create_Nodes+0x330>)
 80013b2:	687a      	ldr	r2, [r7, #4]
 80013b4:	4613      	mov	r3, r2
 80013b6:	00db      	lsls	r3, r3, #3
 80013b8:	1a9b      	subs	r3, r3, r2
 80013ba:	009b      	lsls	r3, r3, #2
 80013bc:	440b      	add	r3, r1
 80013be:	4602      	mov	r2, r0
 80013c0:	701a      	strb	r2, [r3, #0]
		N[i].worth=0;
 80013c2:	49bd      	ldr	r1, [pc, #756]	; (80016b8 <Create_Nodes+0x330>)
 80013c4:	687a      	ldr	r2, [r7, #4]
 80013c6:	4613      	mov	r3, r2
 80013c8:	00db      	lsls	r3, r3, #3
 80013ca:	1a9b      	subs	r3, r3, r2
 80013cc:	009b      	lsls	r3, r3, #2
 80013ce:	440b      	add	r3, r1
 80013d0:	3304      	adds	r3, #4
 80013d2:	2200      	movs	r2, #0
 80013d4:	601a      	str	r2, [r3, #0]
		N[i].type=0;
 80013d6:	49b8      	ldr	r1, [pc, #736]	; (80016b8 <Create_Nodes+0x330>)
 80013d8:	687a      	ldr	r2, [r7, #4]
 80013da:	4613      	mov	r3, r2
 80013dc:	00db      	lsls	r3, r3, #3
 80013de:	1a9b      	subs	r3, r3, r2
 80013e0:	009b      	lsls	r3, r3, #2
 80013e2:	440b      	add	r3, r1
 80013e4:	3308      	adds	r3, #8
 80013e6:	2200      	movs	r2, #0
 80013e8:	601a      	str	r2, [r3, #0]
		VALUE(N[i].neighbours,0,0,0,0);
 80013ea:	49b3      	ldr	r1, [pc, #716]	; (80016b8 <Create_Nodes+0x330>)
 80013ec:	687a      	ldr	r2, [r7, #4]
 80013ee:	4613      	mov	r3, r2
 80013f0:	00db      	lsls	r3, r3, #3
 80013f2:	1a9b      	subs	r3, r3, r2
 80013f4:	009b      	lsls	r3, r3, #2
 80013f6:	440b      	add	r3, r1
 80013f8:	330c      	adds	r3, #12
 80013fa:	2200      	movs	r2, #0
 80013fc:	701a      	strb	r2, [r3, #0]
 80013fe:	49ae      	ldr	r1, [pc, #696]	; (80016b8 <Create_Nodes+0x330>)
 8001400:	687a      	ldr	r2, [r7, #4]
 8001402:	4613      	mov	r3, r2
 8001404:	00db      	lsls	r3, r3, #3
 8001406:	1a9b      	subs	r3, r3, r2
 8001408:	009b      	lsls	r3, r3, #2
 800140a:	440b      	add	r3, r1
 800140c:	330d      	adds	r3, #13
 800140e:	2200      	movs	r2, #0
 8001410:	701a      	strb	r2, [r3, #0]
 8001412:	49a9      	ldr	r1, [pc, #676]	; (80016b8 <Create_Nodes+0x330>)
 8001414:	687a      	ldr	r2, [r7, #4]
 8001416:	4613      	mov	r3, r2
 8001418:	00db      	lsls	r3, r3, #3
 800141a:	1a9b      	subs	r3, r3, r2
 800141c:	009b      	lsls	r3, r3, #2
 800141e:	440b      	add	r3, r1
 8001420:	330e      	adds	r3, #14
 8001422:	2200      	movs	r2, #0
 8001424:	701a      	strb	r2, [r3, #0]
 8001426:	49a4      	ldr	r1, [pc, #656]	; (80016b8 <Create_Nodes+0x330>)
 8001428:	687a      	ldr	r2, [r7, #4]
 800142a:	4613      	mov	r3, r2
 800142c:	00db      	lsls	r3, r3, #3
 800142e:	1a9b      	subs	r3, r3, r2
 8001430:	009b      	lsls	r3, r3, #2
 8001432:	440b      	add	r3, r1
 8001434:	330f      	adds	r3, #15
 8001436:	2200      	movs	r2, #0
 8001438:	701a      	strb	r2, [r3, #0]
		VALUE(N[i].directions,0,0,0,0);
 800143a:	499f      	ldr	r1, [pc, #636]	; (80016b8 <Create_Nodes+0x330>)
 800143c:	687a      	ldr	r2, [r7, #4]
 800143e:	4613      	mov	r3, r2
 8001440:	00db      	lsls	r3, r3, #3
 8001442:	1a9b      	subs	r3, r3, r2
 8001444:	009b      	lsls	r3, r3, #2
 8001446:	440b      	add	r3, r1
 8001448:	3310      	adds	r3, #16
 800144a:	2200      	movs	r2, #0
 800144c:	701a      	strb	r2, [r3, #0]
 800144e:	499a      	ldr	r1, [pc, #616]	; (80016b8 <Create_Nodes+0x330>)
 8001450:	687a      	ldr	r2, [r7, #4]
 8001452:	4613      	mov	r3, r2
 8001454:	00db      	lsls	r3, r3, #3
 8001456:	1a9b      	subs	r3, r3, r2
 8001458:	009b      	lsls	r3, r3, #2
 800145a:	440b      	add	r3, r1
 800145c:	3311      	adds	r3, #17
 800145e:	2200      	movs	r2, #0
 8001460:	701a      	strb	r2, [r3, #0]
 8001462:	4995      	ldr	r1, [pc, #596]	; (80016b8 <Create_Nodes+0x330>)
 8001464:	687a      	ldr	r2, [r7, #4]
 8001466:	4613      	mov	r3, r2
 8001468:	00db      	lsls	r3, r3, #3
 800146a:	1a9b      	subs	r3, r3, r2
 800146c:	009b      	lsls	r3, r3, #2
 800146e:	440b      	add	r3, r1
 8001470:	3312      	adds	r3, #18
 8001472:	2200      	movs	r2, #0
 8001474:	701a      	strb	r2, [r3, #0]
 8001476:	4990      	ldr	r1, [pc, #576]	; (80016b8 <Create_Nodes+0x330>)
 8001478:	687a      	ldr	r2, [r7, #4]
 800147a:	4613      	mov	r3, r2
 800147c:	00db      	lsls	r3, r3, #3
 800147e:	1a9b      	subs	r3, r3, r2
 8001480:	009b      	lsls	r3, r3, #2
 8001482:	440b      	add	r3, r1
 8001484:	3313      	adds	r3, #19
 8001486:	2200      	movs	r2, #0
 8001488:	701a      	strb	r2, [r3, #0]
		VALUE(N[i].distance,0,0,0,0);
 800148a:	498b      	ldr	r1, [pc, #556]	; (80016b8 <Create_Nodes+0x330>)
 800148c:	687a      	ldr	r2, [r7, #4]
 800148e:	4613      	mov	r3, r2
 8001490:	00db      	lsls	r3, r3, #3
 8001492:	1a9b      	subs	r3, r3, r2
 8001494:	009b      	lsls	r3, r3, #2
 8001496:	440b      	add	r3, r1
 8001498:	3314      	adds	r3, #20
 800149a:	2200      	movs	r2, #0
 800149c:	801a      	strh	r2, [r3, #0]
 800149e:	4986      	ldr	r1, [pc, #536]	; (80016b8 <Create_Nodes+0x330>)
 80014a0:	687a      	ldr	r2, [r7, #4]
 80014a2:	4613      	mov	r3, r2
 80014a4:	00db      	lsls	r3, r3, #3
 80014a6:	1a9b      	subs	r3, r3, r2
 80014a8:	009b      	lsls	r3, r3, #2
 80014aa:	440b      	add	r3, r1
 80014ac:	3316      	adds	r3, #22
 80014ae:	2200      	movs	r2, #0
 80014b0:	801a      	strh	r2, [r3, #0]
 80014b2:	4981      	ldr	r1, [pc, #516]	; (80016b8 <Create_Nodes+0x330>)
 80014b4:	687a      	ldr	r2, [r7, #4]
 80014b6:	4613      	mov	r3, r2
 80014b8:	00db      	lsls	r3, r3, #3
 80014ba:	1a9b      	subs	r3, r3, r2
 80014bc:	009b      	lsls	r3, r3, #2
 80014be:	440b      	add	r3, r1
 80014c0:	3318      	adds	r3, #24
 80014c2:	2200      	movs	r2, #0
 80014c4:	801a      	strh	r2, [r3, #0]
 80014c6:	497c      	ldr	r1, [pc, #496]	; (80016b8 <Create_Nodes+0x330>)
 80014c8:	687a      	ldr	r2, [r7, #4]
 80014ca:	4613      	mov	r3, r2
 80014cc:	00db      	lsls	r3, r3, #3
 80014ce:	1a9b      	subs	r3, r3, r2
 80014d0:	009b      	lsls	r3, r3, #2
 80014d2:	440b      	add	r3, r1
 80014d4:	331a      	adds	r3, #26
 80014d6:	2200      	movs	r2, #0
 80014d8:	801a      	strh	r2, [r3, #0]
	for(i=0;i<25;i++)
 80014da:	687b      	ldr	r3, [r7, #4]
 80014dc:	3301      	adds	r3, #1
 80014de:	607b      	str	r3, [r7, #4]
 80014e0:	687b      	ldr	r3, [r7, #4]
 80014e2:	2b18      	cmp	r3, #24
 80014e4:	f77f af60 	ble.w	80013a8 <Create_Nodes+0x20>
	}
	//A node
	N[ID('A')].worth=0;
 80014e8:	4b73      	ldr	r3, [pc, #460]	; (80016b8 <Create_Nodes+0x330>)
 80014ea:	2200      	movs	r2, #0
 80014ec:	605a      	str	r2, [r3, #4]
	N[ID('A')].type=1;
 80014ee:	4b72      	ldr	r3, [pc, #456]	; (80016b8 <Create_Nodes+0x330>)
 80014f0:	2201      	movs	r2, #1
 80014f2:	609a      	str	r2, [r3, #8]
	VALUE(N[ID('A')].neighbours,0,0,0,'C');
 80014f4:	4b70      	ldr	r3, [pc, #448]	; (80016b8 <Create_Nodes+0x330>)
 80014f6:	2200      	movs	r2, #0
 80014f8:	731a      	strb	r2, [r3, #12]
 80014fa:	4b6f      	ldr	r3, [pc, #444]	; (80016b8 <Create_Nodes+0x330>)
 80014fc:	2200      	movs	r2, #0
 80014fe:	735a      	strb	r2, [r3, #13]
 8001500:	4b6d      	ldr	r3, [pc, #436]	; (80016b8 <Create_Nodes+0x330>)
 8001502:	2200      	movs	r2, #0
 8001504:	739a      	strb	r2, [r3, #14]
 8001506:	4b6c      	ldr	r3, [pc, #432]	; (80016b8 <Create_Nodes+0x330>)
 8001508:	2243      	movs	r2, #67	; 0x43
 800150a:	73da      	strb	r2, [r3, #15]
	VALUE(N[ID('A')].directions,0,0,0,2);
 800150c:	4b6a      	ldr	r3, [pc, #424]	; (80016b8 <Create_Nodes+0x330>)
 800150e:	2200      	movs	r2, #0
 8001510:	741a      	strb	r2, [r3, #16]
 8001512:	4b69      	ldr	r3, [pc, #420]	; (80016b8 <Create_Nodes+0x330>)
 8001514:	2200      	movs	r2, #0
 8001516:	745a      	strb	r2, [r3, #17]
 8001518:	4b67      	ldr	r3, [pc, #412]	; (80016b8 <Create_Nodes+0x330>)
 800151a:	2200      	movs	r2, #0
 800151c:	749a      	strb	r2, [r3, #18]
 800151e:	4b66      	ldr	r3, [pc, #408]	; (80016b8 <Create_Nodes+0x330>)
 8001520:	2202      	movs	r2, #2
 8001522:	74da      	strb	r2, [r3, #19]
	VALUE(N[ID('A')].distance,0,0,0,365);
 8001524:	4b64      	ldr	r3, [pc, #400]	; (80016b8 <Create_Nodes+0x330>)
 8001526:	2200      	movs	r2, #0
 8001528:	829a      	strh	r2, [r3, #20]
 800152a:	4b63      	ldr	r3, [pc, #396]	; (80016b8 <Create_Nodes+0x330>)
 800152c:	2200      	movs	r2, #0
 800152e:	82da      	strh	r2, [r3, #22]
 8001530:	4b61      	ldr	r3, [pc, #388]	; (80016b8 <Create_Nodes+0x330>)
 8001532:	2200      	movs	r2, #0
 8001534:	831a      	strh	r2, [r3, #24]
 8001536:	4b60      	ldr	r3, [pc, #384]	; (80016b8 <Create_Nodes+0x330>)
 8001538:	f240 126d 	movw	r2, #365	; 0x16d
 800153c:	835a      	strh	r2, [r3, #26]

	//B node
	N[ID('B')].worth=3;
 800153e:	4b5e      	ldr	r3, [pc, #376]	; (80016b8 <Create_Nodes+0x330>)
 8001540:	2203      	movs	r2, #3
 8001542:	621a      	str	r2, [r3, #32]
	N[ID('B')].type=2;
 8001544:	4b5c      	ldr	r3, [pc, #368]	; (80016b8 <Create_Nodes+0x330>)
 8001546:	2202      	movs	r2, #2
 8001548:	625a      	str	r2, [r3, #36]	; 0x24
	VALUE(N[ID('B')].neighbours,'D',0,'C',0);
 800154a:	4b5b      	ldr	r3, [pc, #364]	; (80016b8 <Create_Nodes+0x330>)
 800154c:	2244      	movs	r2, #68	; 0x44
 800154e:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 8001552:	4b59      	ldr	r3, [pc, #356]	; (80016b8 <Create_Nodes+0x330>)
 8001554:	2200      	movs	r2, #0
 8001556:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 800155a:	4b57      	ldr	r3, [pc, #348]	; (80016b8 <Create_Nodes+0x330>)
 800155c:	2243      	movs	r2, #67	; 0x43
 800155e:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 8001562:	4b55      	ldr	r3, [pc, #340]	; (80016b8 <Create_Nodes+0x330>)
 8001564:	2200      	movs	r2, #0
 8001566:	f883 202b 	strb.w	r2, [r3, #43]	; 0x2b
	VALUE(N[ID('B')].directions,2,0,2,0);
 800156a:	4b53      	ldr	r3, [pc, #332]	; (80016b8 <Create_Nodes+0x330>)
 800156c:	2202      	movs	r2, #2
 800156e:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 8001572:	4b51      	ldr	r3, [pc, #324]	; (80016b8 <Create_Nodes+0x330>)
 8001574:	2200      	movs	r2, #0
 8001576:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800157a:	4b4f      	ldr	r3, [pc, #316]	; (80016b8 <Create_Nodes+0x330>)
 800157c:	2202      	movs	r2, #2
 800157e:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
 8001582:	4b4d      	ldr	r3, [pc, #308]	; (80016b8 <Create_Nodes+0x330>)
 8001584:	2200      	movs	r2, #0
 8001586:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
	VALUE(N[ID('B')].distance,452,0,168,0);
 800158a:	4b4b      	ldr	r3, [pc, #300]	; (80016b8 <Create_Nodes+0x330>)
 800158c:	f44f 72e2 	mov.w	r2, #452	; 0x1c4
 8001590:	861a      	strh	r2, [r3, #48]	; 0x30
 8001592:	4b49      	ldr	r3, [pc, #292]	; (80016b8 <Create_Nodes+0x330>)
 8001594:	2200      	movs	r2, #0
 8001596:	865a      	strh	r2, [r3, #50]	; 0x32
 8001598:	4b47      	ldr	r3, [pc, #284]	; (80016b8 <Create_Nodes+0x330>)
 800159a:	22a8      	movs	r2, #168	; 0xa8
 800159c:	869a      	strh	r2, [r3, #52]	; 0x34
 800159e:	4b46      	ldr	r3, [pc, #280]	; (80016b8 <Create_Nodes+0x330>)
 80015a0:	2200      	movs	r2, #0
 80015a2:	86da      	strh	r2, [r3, #54]	; 0x36

	//C node
	N[ID('C')].worth=1;
 80015a4:	4b44      	ldr	r3, [pc, #272]	; (80016b8 <Create_Nodes+0x330>)
 80015a6:	2201      	movs	r2, #1
 80015a8:	63da      	str	r2, [r3, #60]	; 0x3c
	N[ID('C')].type=3;
 80015aa:	4b43      	ldr	r3, [pc, #268]	; (80016b8 <Create_Nodes+0x330>)
 80015ac:	2203      	movs	r2, #3
 80015ae:	641a      	str	r2, [r3, #64]	; 0x40
	VALUE(N[ID('C')].neighbours,0,'B','E',0);
 80015b0:	4b41      	ldr	r3, [pc, #260]	; (80016b8 <Create_Nodes+0x330>)
 80015b2:	2200      	movs	r2, #0
 80015b4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80015b8:	4b3f      	ldr	r3, [pc, #252]	; (80016b8 <Create_Nodes+0x330>)
 80015ba:	2242      	movs	r2, #66	; 0x42
 80015bc:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80015c0:	4b3d      	ldr	r3, [pc, #244]	; (80016b8 <Create_Nodes+0x330>)
 80015c2:	2245      	movs	r2, #69	; 0x45
 80015c4:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80015c8:	4b3b      	ldr	r3, [pc, #236]	; (80016b8 <Create_Nodes+0x330>)
 80015ca:	2200      	movs	r2, #0
 80015cc:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
	VALUE(N[ID('C')].directions,0,1,2,0);
 80015d0:	4b39      	ldr	r3, [pc, #228]	; (80016b8 <Create_Nodes+0x330>)
 80015d2:	2200      	movs	r2, #0
 80015d4:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 80015d8:	4b37      	ldr	r3, [pc, #220]	; (80016b8 <Create_Nodes+0x330>)
 80015da:	2201      	movs	r2, #1
 80015dc:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
 80015e0:	4b35      	ldr	r3, [pc, #212]	; (80016b8 <Create_Nodes+0x330>)
 80015e2:	2202      	movs	r2, #2
 80015e4:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
 80015e8:	4b33      	ldr	r3, [pc, #204]	; (80016b8 <Create_Nodes+0x330>)
 80015ea:	2200      	movs	r2, #0
 80015ec:	f883 204b 	strb.w	r2, [r3, #75]	; 0x4b
	VALUE(N[ID('C')].distance,0,218,130,0);
 80015f0:	4b31      	ldr	r3, [pc, #196]	; (80016b8 <Create_Nodes+0x330>)
 80015f2:	2200      	movs	r2, #0
 80015f4:	f8a3 204c 	strh.w	r2, [r3, #76]	; 0x4c
 80015f8:	4b2f      	ldr	r3, [pc, #188]	; (80016b8 <Create_Nodes+0x330>)
 80015fa:	22da      	movs	r2, #218	; 0xda
 80015fc:	f8a3 204e 	strh.w	r2, [r3, #78]	; 0x4e
 8001600:	4b2d      	ldr	r3, [pc, #180]	; (80016b8 <Create_Nodes+0x330>)
 8001602:	2282      	movs	r2, #130	; 0x82
 8001604:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 8001608:	4b2b      	ldr	r3, [pc, #172]	; (80016b8 <Create_Nodes+0x330>)
 800160a:	2200      	movs	r2, #0
 800160c:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52

	//D node
	N[ID('D')].worth=3;
 8001610:	4b29      	ldr	r3, [pc, #164]	; (80016b8 <Create_Nodes+0x330>)
 8001612:	2203      	movs	r2, #3
 8001614:	659a      	str	r2, [r3, #88]	; 0x58
	N[ID('D')].type=1;
 8001616:	4b28      	ldr	r3, [pc, #160]	; (80016b8 <Create_Nodes+0x330>)
 8001618:	2201      	movs	r2, #1
 800161a:	65da      	str	r2, [r3, #92]	; 0x5c
	VALUE(N[ID('D')].neighbours,'B',0,'F',0);
 800161c:	4b26      	ldr	r3, [pc, #152]	; (80016b8 <Create_Nodes+0x330>)
 800161e:	2242      	movs	r2, #66	; 0x42
 8001620:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
 8001624:	4b24      	ldr	r3, [pc, #144]	; (80016b8 <Create_Nodes+0x330>)
 8001626:	2200      	movs	r2, #0
 8001628:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
 800162c:	4b22      	ldr	r3, [pc, #136]	; (80016b8 <Create_Nodes+0x330>)
 800162e:	2246      	movs	r2, #70	; 0x46
 8001630:	f883 2062 	strb.w	r2, [r3, #98]	; 0x62
 8001634:	4b20      	ldr	r3, [pc, #128]	; (80016b8 <Create_Nodes+0x330>)
 8001636:	2200      	movs	r2, #0
 8001638:	f883 2063 	strb.w	r2, [r3, #99]	; 0x63
	VALUE(N[ID('D')].directions,2,0,2,0);
 800163c:	4b1e      	ldr	r3, [pc, #120]	; (80016b8 <Create_Nodes+0x330>)
 800163e:	2202      	movs	r2, #2
 8001640:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
 8001644:	4b1c      	ldr	r3, [pc, #112]	; (80016b8 <Create_Nodes+0x330>)
 8001646:	2200      	movs	r2, #0
 8001648:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
 800164c:	4b1a      	ldr	r3, [pc, #104]	; (80016b8 <Create_Nodes+0x330>)
 800164e:	2202      	movs	r2, #2
 8001650:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
 8001654:	4b18      	ldr	r3, [pc, #96]	; (80016b8 <Create_Nodes+0x330>)
 8001656:	2200      	movs	r2, #0
 8001658:	f883 2067 	strb.w	r2, [r3, #103]	; 0x67
	VALUE(N[ID('D')].distance,452,0,316,0);
 800165c:	4b16      	ldr	r3, [pc, #88]	; (80016b8 <Create_Nodes+0x330>)
 800165e:	f44f 72e2 	mov.w	r2, #452	; 0x1c4
 8001662:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 8001666:	4b14      	ldr	r3, [pc, #80]	; (80016b8 <Create_Nodes+0x330>)
 8001668:	2200      	movs	r2, #0
 800166a:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800166e:	4b12      	ldr	r3, [pc, #72]	; (80016b8 <Create_Nodes+0x330>)
 8001670:	f44f 729e 	mov.w	r2, #316	; 0x13c
 8001674:	f8a3 206c 	strh.w	r2, [r3, #108]	; 0x6c
 8001678:	4b0f      	ldr	r3, [pc, #60]	; (80016b8 <Create_Nodes+0x330>)
 800167a:	2200      	movs	r2, #0
 800167c:	f8a3 206e 	strh.w	r2, [r3, #110]	; 0x6e

	//E node
	N[ID('E')].worth=1;
 8001680:	4b0d      	ldr	r3, [pc, #52]	; (80016b8 <Create_Nodes+0x330>)
 8001682:	2201      	movs	r2, #1
 8001684:	675a      	str	r2, [r3, #116]	; 0x74
	N[ID('E')].type=3;
 8001686:	4b0c      	ldr	r3, [pc, #48]	; (80016b8 <Create_Nodes+0x330>)
 8001688:	2203      	movs	r2, #3
 800168a:	679a      	str	r2, [r3, #120]	; 0x78
	VALUE(N[ID('E')].neighbours,'C',0,'F','G');
 800168c:	4b0a      	ldr	r3, [pc, #40]	; (80016b8 <Create_Nodes+0x330>)
 800168e:	2243      	movs	r2, #67	; 0x43
 8001690:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 8001694:	4b08      	ldr	r3, [pc, #32]	; (80016b8 <Create_Nodes+0x330>)
 8001696:	2200      	movs	r2, #0
 8001698:	f883 207d 	strb.w	r2, [r3, #125]	; 0x7d
 800169c:	4b06      	ldr	r3, [pc, #24]	; (80016b8 <Create_Nodes+0x330>)
 800169e:	2246      	movs	r2, #70	; 0x46
 80016a0:	f883 207e 	strb.w	r2, [r3, #126]	; 0x7e
 80016a4:	4b04      	ldr	r3, [pc, #16]	; (80016b8 <Create_Nodes+0x330>)
 80016a6:	2247      	movs	r2, #71	; 0x47
 80016a8:	f883 207f 	strb.w	r2, [r3, #127]	; 0x7f
	VALUE(N[ID('E')].directions,1,0,2,2);
 80016ac:	4b02      	ldr	r3, [pc, #8]	; (80016b8 <Create_Nodes+0x330>)
 80016ae:	2201      	movs	r2, #1
 80016b0:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 80016b4:	e002      	b.n	80016bc <Create_Nodes+0x334>
 80016b6:	bf00      	nop
 80016b8:	20000280 	.word	0x20000280
 80016bc:	4bcd      	ldr	r3, [pc, #820]	; (80019f4 <Create_Nodes+0x66c>)
 80016be:	2200      	movs	r2, #0
 80016c0:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
 80016c4:	4bcb      	ldr	r3, [pc, #812]	; (80019f4 <Create_Nodes+0x66c>)
 80016c6:	2202      	movs	r2, #2
 80016c8:	f883 2082 	strb.w	r2, [r3, #130]	; 0x82
 80016cc:	4bc9      	ldr	r3, [pc, #804]	; (80019f4 <Create_Nodes+0x66c>)
 80016ce:	2202      	movs	r2, #2
 80016d0:	f883 2083 	strb.w	r2, [r3, #131]	; 0x83
	VALUE(N[ID('E')].distance,130,0,428,385);
 80016d4:	4bc7      	ldr	r3, [pc, #796]	; (80019f4 <Create_Nodes+0x66c>)
 80016d6:	2282      	movs	r2, #130	; 0x82
 80016d8:	f8a3 2084 	strh.w	r2, [r3, #132]	; 0x84
 80016dc:	4bc5      	ldr	r3, [pc, #788]	; (80019f4 <Create_Nodes+0x66c>)
 80016de:	2200      	movs	r2, #0
 80016e0:	f8a3 2086 	strh.w	r2, [r3, #134]	; 0x86
 80016e4:	4bc3      	ldr	r3, [pc, #780]	; (80019f4 <Create_Nodes+0x66c>)
 80016e6:	f44f 72d6 	mov.w	r2, #428	; 0x1ac
 80016ea:	f8a3 2088 	strh.w	r2, [r3, #136]	; 0x88
 80016ee:	4bc1      	ldr	r3, [pc, #772]	; (80019f4 <Create_Nodes+0x66c>)
 80016f0:	f240 1281 	movw	r2, #385	; 0x181
 80016f4:	f8a3 208a 	strh.w	r2, [r3, #138]	; 0x8a

	//F node
	N[ID('F')].worth=3;
 80016f8:	4bbe      	ldr	r3, [pc, #760]	; (80019f4 <Create_Nodes+0x66c>)
 80016fa:	2203      	movs	r2, #3
 80016fc:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
	N[ID('F')].type=1;
 8001700:	4bbc      	ldr	r3, [pc, #752]	; (80019f4 <Create_Nodes+0x66c>)
 8001702:	2201      	movs	r2, #1
 8001704:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
	VALUE(N[ID('F')].neighbours,'E','D','H','I');
 8001708:	4bba      	ldr	r3, [pc, #744]	; (80019f4 <Create_Nodes+0x66c>)
 800170a:	2245      	movs	r2, #69	; 0x45
 800170c:	f883 2098 	strb.w	r2, [r3, #152]	; 0x98
 8001710:	4bb8      	ldr	r3, [pc, #736]	; (80019f4 <Create_Nodes+0x66c>)
 8001712:	2244      	movs	r2, #68	; 0x44
 8001714:	f883 2099 	strb.w	r2, [r3, #153]	; 0x99
 8001718:	4bb6      	ldr	r3, [pc, #728]	; (80019f4 <Create_Nodes+0x66c>)
 800171a:	2248      	movs	r2, #72	; 0x48
 800171c:	f883 209a 	strb.w	r2, [r3, #154]	; 0x9a
 8001720:	4bb4      	ldr	r3, [pc, #720]	; (80019f4 <Create_Nodes+0x66c>)
 8001722:	2249      	movs	r2, #73	; 0x49
 8001724:	f883 209b 	strb.w	r2, [r3, #155]	; 0x9b
	VALUE(N[ID('F')].directions,1,1,2,2);
 8001728:	4bb2      	ldr	r3, [pc, #712]	; (80019f4 <Create_Nodes+0x66c>)
 800172a:	2201      	movs	r2, #1
 800172c:	f883 209c 	strb.w	r2, [r3, #156]	; 0x9c
 8001730:	4bb0      	ldr	r3, [pc, #704]	; (80019f4 <Create_Nodes+0x66c>)
 8001732:	2201      	movs	r2, #1
 8001734:	f883 209d 	strb.w	r2, [r3, #157]	; 0x9d
 8001738:	4bae      	ldr	r3, [pc, #696]	; (80019f4 <Create_Nodes+0x66c>)
 800173a:	2202      	movs	r2, #2
 800173c:	f883 209e 	strb.w	r2, [r3, #158]	; 0x9e
 8001740:	4bac      	ldr	r3, [pc, #688]	; (80019f4 <Create_Nodes+0x66c>)
 8001742:	2202      	movs	r2, #2
 8001744:	f883 209f 	strb.w	r2, [r3, #159]	; 0x9f
	VALUE(N[ID('F')].distance,428,316,284,335);
 8001748:	4baa      	ldr	r3, [pc, #680]	; (80019f4 <Create_Nodes+0x66c>)
 800174a:	f44f 72d6 	mov.w	r2, #428	; 0x1ac
 800174e:	f8a3 20a0 	strh.w	r2, [r3, #160]	; 0xa0
 8001752:	4ba8      	ldr	r3, [pc, #672]	; (80019f4 <Create_Nodes+0x66c>)
 8001754:	f44f 729e 	mov.w	r2, #316	; 0x13c
 8001758:	f8a3 20a2 	strh.w	r2, [r3, #162]	; 0xa2
 800175c:	4ba5      	ldr	r3, [pc, #660]	; (80019f4 <Create_Nodes+0x66c>)
 800175e:	f44f 728e 	mov.w	r2, #284	; 0x11c
 8001762:	f8a3 20a4 	strh.w	r2, [r3, #164]	; 0xa4
 8001766:	4ba3      	ldr	r3, [pc, #652]	; (80019f4 <Create_Nodes+0x66c>)
 8001768:	f240 124f 	movw	r2, #335	; 0x14f
 800176c:	f8a3 20a6 	strh.w	r2, [r3, #166]	; 0xa6

	//G node
	N[ID('G')].worth=3;
 8001770:	4ba0      	ldr	r3, [pc, #640]	; (80019f4 <Create_Nodes+0x66c>)
 8001772:	2203      	movs	r2, #3
 8001774:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
	N[ID('G')].type=1;
 8001778:	4b9e      	ldr	r3, [pc, #632]	; (80019f4 <Create_Nodes+0x66c>)
 800177a:	2201      	movs	r2, #1
 800177c:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
	VALUE(N[ID('G')].neighbours,'E',0,'H','I');
 8001780:	4b9c      	ldr	r3, [pc, #624]	; (80019f4 <Create_Nodes+0x66c>)
 8001782:	2245      	movs	r2, #69	; 0x45
 8001784:	f883 20b4 	strb.w	r2, [r3, #180]	; 0xb4
 8001788:	4b9a      	ldr	r3, [pc, #616]	; (80019f4 <Create_Nodes+0x66c>)
 800178a:	2200      	movs	r2, #0
 800178c:	f883 20b5 	strb.w	r2, [r3, #181]	; 0xb5
 8001790:	4b98      	ldr	r3, [pc, #608]	; (80019f4 <Create_Nodes+0x66c>)
 8001792:	2248      	movs	r2, #72	; 0x48
 8001794:	f883 20b6 	strb.w	r2, [r3, #182]	; 0xb6
 8001798:	4b96      	ldr	r3, [pc, #600]	; (80019f4 <Create_Nodes+0x66c>)
 800179a:	2249      	movs	r2, #73	; 0x49
 800179c:	f883 20b7 	strb.w	r2, [r3, #183]	; 0xb7
	VALUE(N[ID('G')].directions,1,0,2,2);
 80017a0:	4b94      	ldr	r3, [pc, #592]	; (80019f4 <Create_Nodes+0x66c>)
 80017a2:	2201      	movs	r2, #1
 80017a4:	f883 20b8 	strb.w	r2, [r3, #184]	; 0xb8
 80017a8:	4b92      	ldr	r3, [pc, #584]	; (80019f4 <Create_Nodes+0x66c>)
 80017aa:	2200      	movs	r2, #0
 80017ac:	f883 20b9 	strb.w	r2, [r3, #185]	; 0xb9
 80017b0:	4b90      	ldr	r3, [pc, #576]	; (80019f4 <Create_Nodes+0x66c>)
 80017b2:	2202      	movs	r2, #2
 80017b4:	f883 20ba 	strb.w	r2, [r3, #186]	; 0xba
 80017b8:	4b8e      	ldr	r3, [pc, #568]	; (80019f4 <Create_Nodes+0x66c>)
 80017ba:	2202      	movs	r2, #2
 80017bc:	f883 20bb 	strb.w	r2, [r3, #187]	; 0xbb
	VALUE(N[ID('G')].distance,385,0,336,284);
 80017c0:	4b8c      	ldr	r3, [pc, #560]	; (80019f4 <Create_Nodes+0x66c>)
 80017c2:	f240 1281 	movw	r2, #385	; 0x181
 80017c6:	f8a3 20bc 	strh.w	r2, [r3, #188]	; 0xbc
 80017ca:	4b8a      	ldr	r3, [pc, #552]	; (80019f4 <Create_Nodes+0x66c>)
 80017cc:	2200      	movs	r2, #0
 80017ce:	f8a3 20be 	strh.w	r2, [r3, #190]	; 0xbe
 80017d2:	4b88      	ldr	r3, [pc, #544]	; (80019f4 <Create_Nodes+0x66c>)
 80017d4:	f44f 72a8 	mov.w	r2, #336	; 0x150
 80017d8:	f8a3 20c0 	strh.w	r2, [r3, #192]	; 0xc0
 80017dc:	4b85      	ldr	r3, [pc, #532]	; (80019f4 <Create_Nodes+0x66c>)
 80017de:	f44f 728e 	mov.w	r2, #284	; 0x11c
 80017e2:	f8a3 20c2 	strh.w	r2, [r3, #194]	; 0xc2

	//H node
	N[ID('H')].worth=3;
 80017e6:	4b83      	ldr	r3, [pc, #524]	; (80019f4 <Create_Nodes+0x66c>)
 80017e8:	2203      	movs	r2, #3
 80017ea:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
	N[ID('H')].type=1;
 80017ee:	4b81      	ldr	r3, [pc, #516]	; (80019f4 <Create_Nodes+0x66c>)
 80017f0:	2201      	movs	r2, #1
 80017f2:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
	VALUE(N[ID('H')].neighbours,'G','F','K','J');
 80017f6:	4b7f      	ldr	r3, [pc, #508]	; (80019f4 <Create_Nodes+0x66c>)
 80017f8:	2247      	movs	r2, #71	; 0x47
 80017fa:	f883 20d0 	strb.w	r2, [r3, #208]	; 0xd0
 80017fe:	4b7d      	ldr	r3, [pc, #500]	; (80019f4 <Create_Nodes+0x66c>)
 8001800:	2246      	movs	r2, #70	; 0x46
 8001802:	f883 20d1 	strb.w	r2, [r3, #209]	; 0xd1
 8001806:	4b7b      	ldr	r3, [pc, #492]	; (80019f4 <Create_Nodes+0x66c>)
 8001808:	224b      	movs	r2, #75	; 0x4b
 800180a:	f883 20d2 	strb.w	r2, [r3, #210]	; 0xd2
 800180e:	4b79      	ldr	r3, [pc, #484]	; (80019f4 <Create_Nodes+0x66c>)
 8001810:	224a      	movs	r2, #74	; 0x4a
 8001812:	f883 20d3 	strb.w	r2, [r3, #211]	; 0xd3
	VALUE(N[ID('H')].directions,1,1,2,2);
 8001816:	4b77      	ldr	r3, [pc, #476]	; (80019f4 <Create_Nodes+0x66c>)
 8001818:	2201      	movs	r2, #1
 800181a:	f883 20d4 	strb.w	r2, [r3, #212]	; 0xd4
 800181e:	4b75      	ldr	r3, [pc, #468]	; (80019f4 <Create_Nodes+0x66c>)
 8001820:	2201      	movs	r2, #1
 8001822:	f883 20d5 	strb.w	r2, [r3, #213]	; 0xd5
 8001826:	4b73      	ldr	r3, [pc, #460]	; (80019f4 <Create_Nodes+0x66c>)
 8001828:	2202      	movs	r2, #2
 800182a:	f883 20d6 	strb.w	r2, [r3, #214]	; 0xd6
 800182e:	4b71      	ldr	r3, [pc, #452]	; (80019f4 <Create_Nodes+0x66c>)
 8001830:	2202      	movs	r2, #2
 8001832:	f883 20d7 	strb.w	r2, [r3, #215]	; 0xd7
	VALUE(N[ID('H')].distance,336,284,407,230);
 8001836:	4b6f      	ldr	r3, [pc, #444]	; (80019f4 <Create_Nodes+0x66c>)
 8001838:	f44f 72a8 	mov.w	r2, #336	; 0x150
 800183c:	f8a3 20d8 	strh.w	r2, [r3, #216]	; 0xd8
 8001840:	4b6c      	ldr	r3, [pc, #432]	; (80019f4 <Create_Nodes+0x66c>)
 8001842:	f44f 728e 	mov.w	r2, #284	; 0x11c
 8001846:	f8a3 20da 	strh.w	r2, [r3, #218]	; 0xda
 800184a:	4b6a      	ldr	r3, [pc, #424]	; (80019f4 <Create_Nodes+0x66c>)
 800184c:	f240 1297 	movw	r2, #407	; 0x197
 8001850:	f8a3 20dc 	strh.w	r2, [r3, #220]	; 0xdc
 8001854:	4b67      	ldr	r3, [pc, #412]	; (80019f4 <Create_Nodes+0x66c>)
 8001856:	22e6      	movs	r2, #230	; 0xe6
 8001858:	f8a3 20de 	strh.w	r2, [r3, #222]	; 0xde

	//I node
	N[ID('I')].worth=1;
 800185c:	4b65      	ldr	r3, [pc, #404]	; (80019f4 <Create_Nodes+0x66c>)
 800185e:	2201      	movs	r2, #1
 8001860:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	N[ID('I')].type=3;
 8001864:	4b63      	ldr	r3, [pc, #396]	; (80019f4 <Create_Nodes+0x66c>)
 8001866:	2203      	movs	r2, #3
 8001868:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
	VALUE(N[ID('I')].neighbours,'G','F',0,'L');
 800186c:	4b61      	ldr	r3, [pc, #388]	; (80019f4 <Create_Nodes+0x66c>)
 800186e:	2247      	movs	r2, #71	; 0x47
 8001870:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 8001874:	4b5f      	ldr	r3, [pc, #380]	; (80019f4 <Create_Nodes+0x66c>)
 8001876:	2246      	movs	r2, #70	; 0x46
 8001878:	f883 20ed 	strb.w	r2, [r3, #237]	; 0xed
 800187c:	4b5d      	ldr	r3, [pc, #372]	; (80019f4 <Create_Nodes+0x66c>)
 800187e:	2200      	movs	r2, #0
 8001880:	f883 20ee 	strb.w	r2, [r3, #238]	; 0xee
 8001884:	4b5b      	ldr	r3, [pc, #364]	; (80019f4 <Create_Nodes+0x66c>)
 8001886:	224c      	movs	r2, #76	; 0x4c
 8001888:	f883 20ef 	strb.w	r2, [r3, #239]	; 0xef
	VALUE(N[ID('I')].directions,1,1,0,2);
 800188c:	4b59      	ldr	r3, [pc, #356]	; (80019f4 <Create_Nodes+0x66c>)
 800188e:	2201      	movs	r2, #1
 8001890:	f883 20f0 	strb.w	r2, [r3, #240]	; 0xf0
 8001894:	4b57      	ldr	r3, [pc, #348]	; (80019f4 <Create_Nodes+0x66c>)
 8001896:	2201      	movs	r2, #1
 8001898:	f883 20f1 	strb.w	r2, [r3, #241]	; 0xf1
 800189c:	4b55      	ldr	r3, [pc, #340]	; (80019f4 <Create_Nodes+0x66c>)
 800189e:	2200      	movs	r2, #0
 80018a0:	f883 20f2 	strb.w	r2, [r3, #242]	; 0xf2
 80018a4:	4b53      	ldr	r3, [pc, #332]	; (80019f4 <Create_Nodes+0x66c>)
 80018a6:	2202      	movs	r2, #2
 80018a8:	f883 20f3 	strb.w	r2, [r3, #243]	; 0xf3
	VALUE(N[ID('I')].distance,284,335,0,418);
 80018ac:	4b51      	ldr	r3, [pc, #324]	; (80019f4 <Create_Nodes+0x66c>)
 80018ae:	f44f 728e 	mov.w	r2, #284	; 0x11c
 80018b2:	f8a3 20f4 	strh.w	r2, [r3, #244]	; 0xf4
 80018b6:	4b4f      	ldr	r3, [pc, #316]	; (80019f4 <Create_Nodes+0x66c>)
 80018b8:	f240 124f 	movw	r2, #335	; 0x14f
 80018bc:	f8a3 20f6 	strh.w	r2, [r3, #246]	; 0xf6
 80018c0:	4b4c      	ldr	r3, [pc, #304]	; (80019f4 <Create_Nodes+0x66c>)
 80018c2:	2200      	movs	r2, #0
 80018c4:	f8a3 20f8 	strh.w	r2, [r3, #248]	; 0xf8
 80018c8:	4b4a      	ldr	r3, [pc, #296]	; (80019f4 <Create_Nodes+0x66c>)
 80018ca:	f44f 72d1 	mov.w	r2, #418	; 0x1a2
 80018ce:	f8a3 20fa 	strh.w	r2, [r3, #250]	; 0xfa

	//J node
	N[ID('J')].worth=1;
 80018d2:	4b48      	ldr	r3, [pc, #288]	; (80019f4 <Create_Nodes+0x66c>)
 80018d4:	2201      	movs	r2, #1
 80018d6:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
	N[ID('J')].type=3;
 80018da:	4b46      	ldr	r3, [pc, #280]	; (80019f4 <Create_Nodes+0x66c>)
 80018dc:	2203      	movs	r2, #3
 80018de:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	VALUE(N[ID('J')].neighbours,'H',0,'K','L');
 80018e2:	4b44      	ldr	r3, [pc, #272]	; (80019f4 <Create_Nodes+0x66c>)
 80018e4:	2248      	movs	r2, #72	; 0x48
 80018e6:	f883 2108 	strb.w	r2, [r3, #264]	; 0x108
 80018ea:	4b42      	ldr	r3, [pc, #264]	; (80019f4 <Create_Nodes+0x66c>)
 80018ec:	2200      	movs	r2, #0
 80018ee:	f883 2109 	strb.w	r2, [r3, #265]	; 0x109
 80018f2:	4b40      	ldr	r3, [pc, #256]	; (80019f4 <Create_Nodes+0x66c>)
 80018f4:	224b      	movs	r2, #75	; 0x4b
 80018f6:	f883 210a 	strb.w	r2, [r3, #266]	; 0x10a
 80018fa:	4b3e      	ldr	r3, [pc, #248]	; (80019f4 <Create_Nodes+0x66c>)
 80018fc:	224c      	movs	r2, #76	; 0x4c
 80018fe:	f883 210b 	strb.w	r2, [r3, #267]	; 0x10b
	VALUE(N[ID('J')].directions,1,0,2,2);
 8001902:	4b3c      	ldr	r3, [pc, #240]	; (80019f4 <Create_Nodes+0x66c>)
 8001904:	2201      	movs	r2, #1
 8001906:	f883 210c 	strb.w	r2, [r3, #268]	; 0x10c
 800190a:	4b3a      	ldr	r3, [pc, #232]	; (80019f4 <Create_Nodes+0x66c>)
 800190c:	2200      	movs	r2, #0
 800190e:	f883 210d 	strb.w	r2, [r3, #269]	; 0x10d
 8001912:	4b38      	ldr	r3, [pc, #224]	; (80019f4 <Create_Nodes+0x66c>)
 8001914:	2202      	movs	r2, #2
 8001916:	f883 210e 	strb.w	r2, [r3, #270]	; 0x10e
 800191a:	4b36      	ldr	r3, [pc, #216]	; (80019f4 <Create_Nodes+0x66c>)
 800191c:	2202      	movs	r2, #2
 800191e:	f883 210f 	strb.w	r2, [r3, #271]	; 0x10f
	VALUE(N[ID('J')].distance,230,0,204,229);
 8001922:	4b34      	ldr	r3, [pc, #208]	; (80019f4 <Create_Nodes+0x66c>)
 8001924:	22e6      	movs	r2, #230	; 0xe6
 8001926:	f8a3 2110 	strh.w	r2, [r3, #272]	; 0x110
 800192a:	4b32      	ldr	r3, [pc, #200]	; (80019f4 <Create_Nodes+0x66c>)
 800192c:	2200      	movs	r2, #0
 800192e:	f8a3 2112 	strh.w	r2, [r3, #274]	; 0x112
 8001932:	4b30      	ldr	r3, [pc, #192]	; (80019f4 <Create_Nodes+0x66c>)
 8001934:	22cc      	movs	r2, #204	; 0xcc
 8001936:	f8a3 2114 	strh.w	r2, [r3, #276]	; 0x114
 800193a:	4b2e      	ldr	r3, [pc, #184]	; (80019f4 <Create_Nodes+0x66c>)
 800193c:	22e5      	movs	r2, #229	; 0xe5
 800193e:	f8a3 2116 	strh.w	r2, [r3, #278]	; 0x116

	//K node
	N[ID('K')].worth=3;
 8001942:	4b2c      	ldr	r3, [pc, #176]	; (80019f4 <Create_Nodes+0x66c>)
 8001944:	2203      	movs	r2, #3
 8001946:	f8c3 211c 	str.w	r2, [r3, #284]	; 0x11c
	N[ID('K')].type=1;
 800194a:	4b2a      	ldr	r3, [pc, #168]	; (80019f4 <Create_Nodes+0x66c>)
 800194c:	2201      	movs	r2, #1
 800194e:	f8c3 2120 	str.w	r2, [r3, #288]	; 0x120
	VALUE(N[ID('K')].neighbours,'J','H','M','N');
 8001952:	4b28      	ldr	r3, [pc, #160]	; (80019f4 <Create_Nodes+0x66c>)
 8001954:	224a      	movs	r2, #74	; 0x4a
 8001956:	f883 2124 	strb.w	r2, [r3, #292]	; 0x124
 800195a:	4b26      	ldr	r3, [pc, #152]	; (80019f4 <Create_Nodes+0x66c>)
 800195c:	2248      	movs	r2, #72	; 0x48
 800195e:	f883 2125 	strb.w	r2, [r3, #293]	; 0x125
 8001962:	4b24      	ldr	r3, [pc, #144]	; (80019f4 <Create_Nodes+0x66c>)
 8001964:	224d      	movs	r2, #77	; 0x4d
 8001966:	f883 2126 	strb.w	r2, [r3, #294]	; 0x126
 800196a:	4b22      	ldr	r3, [pc, #136]	; (80019f4 <Create_Nodes+0x66c>)
 800196c:	224e      	movs	r2, #78	; 0x4e
 800196e:	f883 2127 	strb.w	r2, [r3, #295]	; 0x127
	VALUE(N[ID('K')].directions,1,1,2,2);
 8001972:	4b20      	ldr	r3, [pc, #128]	; (80019f4 <Create_Nodes+0x66c>)
 8001974:	2201      	movs	r2, #1
 8001976:	f883 2128 	strb.w	r2, [r3, #296]	; 0x128
 800197a:	4b1e      	ldr	r3, [pc, #120]	; (80019f4 <Create_Nodes+0x66c>)
 800197c:	2201      	movs	r2, #1
 800197e:	f883 2129 	strb.w	r2, [r3, #297]	; 0x129
 8001982:	4b1c      	ldr	r3, [pc, #112]	; (80019f4 <Create_Nodes+0x66c>)
 8001984:	2202      	movs	r2, #2
 8001986:	f883 212a 	strb.w	r2, [r3, #298]	; 0x12a
 800198a:	4b1a      	ldr	r3, [pc, #104]	; (80019f4 <Create_Nodes+0x66c>)
 800198c:	2202      	movs	r2, #2
 800198e:	f883 212b 	strb.w	r2, [r3, #299]	; 0x12b
	VALUE(N[ID('K')].distance,204,407,288,319);
 8001992:	4b18      	ldr	r3, [pc, #96]	; (80019f4 <Create_Nodes+0x66c>)
 8001994:	22cc      	movs	r2, #204	; 0xcc
 8001996:	f8a3 212c 	strh.w	r2, [r3, #300]	; 0x12c
 800199a:	4b16      	ldr	r3, [pc, #88]	; (80019f4 <Create_Nodes+0x66c>)
 800199c:	f240 1297 	movw	r2, #407	; 0x197
 80019a0:	f8a3 212e 	strh.w	r2, [r3, #302]	; 0x12e
 80019a4:	4b13      	ldr	r3, [pc, #76]	; (80019f4 <Create_Nodes+0x66c>)
 80019a6:	f44f 7290 	mov.w	r2, #288	; 0x120
 80019aa:	f8a3 2130 	strh.w	r2, [r3, #304]	; 0x130
 80019ae:	4b11      	ldr	r3, [pc, #68]	; (80019f4 <Create_Nodes+0x66c>)
 80019b0:	f240 123f 	movw	r2, #319	; 0x13f
 80019b4:	f8a3 2132 	strh.w	r2, [r3, #306]	; 0x132

	//L node
	N[ID('L')].worth=3;
 80019b8:	4b0e      	ldr	r3, [pc, #56]	; (80019f4 <Create_Nodes+0x66c>)
 80019ba:	2203      	movs	r2, #3
 80019bc:	f8c3 2138 	str.w	r2, [r3, #312]	; 0x138
	N[ID('L')].type=1;
 80019c0:	4b0c      	ldr	r3, [pc, #48]	; (80019f4 <Create_Nodes+0x66c>)
 80019c2:	2201      	movs	r2, #1
 80019c4:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
	VALUE(N[ID('L')].neighbours,'I','J','M','N');
 80019c8:	4b0a      	ldr	r3, [pc, #40]	; (80019f4 <Create_Nodes+0x66c>)
 80019ca:	2249      	movs	r2, #73	; 0x49
 80019cc:	f883 2140 	strb.w	r2, [r3, #320]	; 0x140
 80019d0:	4b08      	ldr	r3, [pc, #32]	; (80019f4 <Create_Nodes+0x66c>)
 80019d2:	224a      	movs	r2, #74	; 0x4a
 80019d4:	f883 2141 	strb.w	r2, [r3, #321]	; 0x141
 80019d8:	4b06      	ldr	r3, [pc, #24]	; (80019f4 <Create_Nodes+0x66c>)
 80019da:	224d      	movs	r2, #77	; 0x4d
 80019dc:	f883 2142 	strb.w	r2, [r3, #322]	; 0x142
 80019e0:	4b04      	ldr	r3, [pc, #16]	; (80019f4 <Create_Nodes+0x66c>)
 80019e2:	224e      	movs	r2, #78	; 0x4e
 80019e4:	f883 2143 	strb.w	r2, [r3, #323]	; 0x143
	VALUE(N[ID('L')].directions,1,1,2,2);
 80019e8:	4b02      	ldr	r3, [pc, #8]	; (80019f4 <Create_Nodes+0x66c>)
 80019ea:	2201      	movs	r2, #1
 80019ec:	f883 2144 	strb.w	r2, [r3, #324]	; 0x144
 80019f0:	e002      	b.n	80019f8 <Create_Nodes+0x670>
 80019f2:	bf00      	nop
 80019f4:	20000280 	.word	0x20000280
 80019f8:	4bcd      	ldr	r3, [pc, #820]	; (8001d30 <Create_Nodes+0x9a8>)
 80019fa:	2201      	movs	r2, #1
 80019fc:	f883 2145 	strb.w	r2, [r3, #325]	; 0x145
 8001a00:	4bcb      	ldr	r3, [pc, #812]	; (8001d30 <Create_Nodes+0x9a8>)
 8001a02:	2202      	movs	r2, #2
 8001a04:	f883 2146 	strb.w	r2, [r3, #326]	; 0x146
 8001a08:	4bc9      	ldr	r3, [pc, #804]	; (8001d30 <Create_Nodes+0x9a8>)
 8001a0a:	2202      	movs	r2, #2
 8001a0c:	f883 2147 	strb.w	r2, [r3, #327]	; 0x147
	VALUE(N[ID('L')].distance,418,229,329,258);
 8001a10:	4bc7      	ldr	r3, [pc, #796]	; (8001d30 <Create_Nodes+0x9a8>)
 8001a12:	f44f 72d1 	mov.w	r2, #418	; 0x1a2
 8001a16:	f8a3 2148 	strh.w	r2, [r3, #328]	; 0x148
 8001a1a:	4bc5      	ldr	r3, [pc, #788]	; (8001d30 <Create_Nodes+0x9a8>)
 8001a1c:	22e5      	movs	r2, #229	; 0xe5
 8001a1e:	f8a3 214a 	strh.w	r2, [r3, #330]	; 0x14a
 8001a22:	4bc3      	ldr	r3, [pc, #780]	; (8001d30 <Create_Nodes+0x9a8>)
 8001a24:	f240 1249 	movw	r2, #329	; 0x149
 8001a28:	f8a3 214c 	strh.w	r2, [r3, #332]	; 0x14c
 8001a2c:	4bc0      	ldr	r3, [pc, #768]	; (8001d30 <Create_Nodes+0x9a8>)
 8001a2e:	f44f 7281 	mov.w	r2, #258	; 0x102
 8001a32:	f8a3 214e 	strh.w	r2, [r3, #334]	; 0x14e

	//M node
	N[ID('M')].worth=3;
 8001a36:	4bbe      	ldr	r3, [pc, #760]	; (8001d30 <Create_Nodes+0x9a8>)
 8001a38:	2203      	movs	r2, #3
 8001a3a:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
	N[ID('M')].type=1;
 8001a3e:	4bbc      	ldr	r3, [pc, #752]	; (8001d30 <Create_Nodes+0x9a8>)
 8001a40:	2201      	movs	r2, #1
 8001a42:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158
	VALUE(N[ID('M')].neighbours,'L','K','P','O');
 8001a46:	4bba      	ldr	r3, [pc, #744]	; (8001d30 <Create_Nodes+0x9a8>)
 8001a48:	224c      	movs	r2, #76	; 0x4c
 8001a4a:	f883 215c 	strb.w	r2, [r3, #348]	; 0x15c
 8001a4e:	4bb8      	ldr	r3, [pc, #736]	; (8001d30 <Create_Nodes+0x9a8>)
 8001a50:	224b      	movs	r2, #75	; 0x4b
 8001a52:	f883 215d 	strb.w	r2, [r3, #349]	; 0x15d
 8001a56:	4bb6      	ldr	r3, [pc, #728]	; (8001d30 <Create_Nodes+0x9a8>)
 8001a58:	2250      	movs	r2, #80	; 0x50
 8001a5a:	f883 215e 	strb.w	r2, [r3, #350]	; 0x15e
 8001a5e:	4bb4      	ldr	r3, [pc, #720]	; (8001d30 <Create_Nodes+0x9a8>)
 8001a60:	224f      	movs	r2, #79	; 0x4f
 8001a62:	f883 215f 	strb.w	r2, [r3, #351]	; 0x15f
	VALUE(N[ID('M')].directions,1,1,2,2);
 8001a66:	4bb2      	ldr	r3, [pc, #712]	; (8001d30 <Create_Nodes+0x9a8>)
 8001a68:	2201      	movs	r2, #1
 8001a6a:	f883 2160 	strb.w	r2, [r3, #352]	; 0x160
 8001a6e:	4bb0      	ldr	r3, [pc, #704]	; (8001d30 <Create_Nodes+0x9a8>)
 8001a70:	2201      	movs	r2, #1
 8001a72:	f883 2161 	strb.w	r2, [r3, #353]	; 0x161
 8001a76:	4bae      	ldr	r3, [pc, #696]	; (8001d30 <Create_Nodes+0x9a8>)
 8001a78:	2202      	movs	r2, #2
 8001a7a:	f883 2162 	strb.w	r2, [r3, #354]	; 0x162
 8001a7e:	4bac      	ldr	r3, [pc, #688]	; (8001d30 <Create_Nodes+0x9a8>)
 8001a80:	2202      	movs	r2, #2
 8001a82:	f883 2163 	strb.w	r2, [r3, #355]	; 0x163
	VALUE(N[ID('M')].distance,329,288,416,198);
 8001a86:	4baa      	ldr	r3, [pc, #680]	; (8001d30 <Create_Nodes+0x9a8>)
 8001a88:	f240 1249 	movw	r2, #329	; 0x149
 8001a8c:	f8a3 2164 	strh.w	r2, [r3, #356]	; 0x164
 8001a90:	4ba7      	ldr	r3, [pc, #668]	; (8001d30 <Create_Nodes+0x9a8>)
 8001a92:	f44f 7290 	mov.w	r2, #288	; 0x120
 8001a96:	f8a3 2166 	strh.w	r2, [r3, #358]	; 0x166
 8001a9a:	4ba5      	ldr	r3, [pc, #660]	; (8001d30 <Create_Nodes+0x9a8>)
 8001a9c:	f44f 72d0 	mov.w	r2, #416	; 0x1a0
 8001aa0:	f8a3 2168 	strh.w	r2, [r3, #360]	; 0x168
 8001aa4:	4ba2      	ldr	r3, [pc, #648]	; (8001d30 <Create_Nodes+0x9a8>)
 8001aa6:	22c6      	movs	r2, #198	; 0xc6
 8001aa8:	f8a3 216a 	strh.w	r2, [r3, #362]	; 0x16a

	//N node
	N[ID('N')].worth=1;
 8001aac:	4ba0      	ldr	r3, [pc, #640]	; (8001d30 <Create_Nodes+0x9a8>)
 8001aae:	2201      	movs	r2, #1
 8001ab0:	f8c3 2170 	str.w	r2, [r3, #368]	; 0x170
	N[ID('N')].type=3;
 8001ab4:	4b9e      	ldr	r3, [pc, #632]	; (8001d30 <Create_Nodes+0x9a8>)
 8001ab6:	2203      	movs	r2, #3
 8001ab8:	f8c3 2174 	str.w	r2, [r3, #372]	; 0x174
	VALUE(N[ID('N')].neighbours,'L','K','O','Q');
 8001abc:	4b9c      	ldr	r3, [pc, #624]	; (8001d30 <Create_Nodes+0x9a8>)
 8001abe:	224c      	movs	r2, #76	; 0x4c
 8001ac0:	f883 2178 	strb.w	r2, [r3, #376]	; 0x178
 8001ac4:	4b9a      	ldr	r3, [pc, #616]	; (8001d30 <Create_Nodes+0x9a8>)
 8001ac6:	224b      	movs	r2, #75	; 0x4b
 8001ac8:	f883 2179 	strb.w	r2, [r3, #377]	; 0x179
 8001acc:	4b98      	ldr	r3, [pc, #608]	; (8001d30 <Create_Nodes+0x9a8>)
 8001ace:	224f      	movs	r2, #79	; 0x4f
 8001ad0:	f883 217a 	strb.w	r2, [r3, #378]	; 0x17a
 8001ad4:	4b96      	ldr	r3, [pc, #600]	; (8001d30 <Create_Nodes+0x9a8>)
 8001ad6:	2251      	movs	r2, #81	; 0x51
 8001ad8:	f883 217b 	strb.w	r2, [r3, #379]	; 0x17b
	VALUE(N[ID('N')].directions,1,1,2,2);
 8001adc:	4b94      	ldr	r3, [pc, #592]	; (8001d30 <Create_Nodes+0x9a8>)
 8001ade:	2201      	movs	r2, #1
 8001ae0:	f883 217c 	strb.w	r2, [r3, #380]	; 0x17c
 8001ae4:	4b92      	ldr	r3, [pc, #584]	; (8001d30 <Create_Nodes+0x9a8>)
 8001ae6:	2201      	movs	r2, #1
 8001ae8:	f883 217d 	strb.w	r2, [r3, #381]	; 0x17d
 8001aec:	4b90      	ldr	r3, [pc, #576]	; (8001d30 <Create_Nodes+0x9a8>)
 8001aee:	2202      	movs	r2, #2
 8001af0:	f883 217e 	strb.w	r2, [r3, #382]	; 0x17e
 8001af4:	4b8e      	ldr	r3, [pc, #568]	; (8001d30 <Create_Nodes+0x9a8>)
 8001af6:	2202      	movs	r2, #2
 8001af8:	f883 217f 	strb.w	r2, [r3, #383]	; 0x17f
	VALUE(N[ID('N')].distance,258,318,228,447);
 8001afc:	4b8c      	ldr	r3, [pc, #560]	; (8001d30 <Create_Nodes+0x9a8>)
 8001afe:	f44f 7281 	mov.w	r2, #258	; 0x102
 8001b02:	f8a3 2180 	strh.w	r2, [r3, #384]	; 0x180
 8001b06:	4b8a      	ldr	r3, [pc, #552]	; (8001d30 <Create_Nodes+0x9a8>)
 8001b08:	f44f 729f 	mov.w	r2, #318	; 0x13e
 8001b0c:	f8a3 2182 	strh.w	r2, [r3, #386]	; 0x182
 8001b10:	4b87      	ldr	r3, [pc, #540]	; (8001d30 <Create_Nodes+0x9a8>)
 8001b12:	22e4      	movs	r2, #228	; 0xe4
 8001b14:	f8a3 2184 	strh.w	r2, [r3, #388]	; 0x184
 8001b18:	4b85      	ldr	r3, [pc, #532]	; (8001d30 <Create_Nodes+0x9a8>)
 8001b1a:	f240 12bf 	movw	r2, #447	; 0x1bf
 8001b1e:	f8a3 2186 	strh.w	r2, [r3, #390]	; 0x186

	//O node
	N[ID('O')].worth=3;
 8001b22:	4b83      	ldr	r3, [pc, #524]	; (8001d30 <Create_Nodes+0x9a8>)
 8001b24:	2203      	movs	r2, #3
 8001b26:	f8c3 218c 	str.w	r2, [r3, #396]	; 0x18c
	N[ID('O')].type=1;
 8001b2a:	4b81      	ldr	r3, [pc, #516]	; (8001d30 <Create_Nodes+0x9a8>)
 8001b2c:	2201      	movs	r2, #1
 8001b2e:	f8c3 2190 	str.w	r2, [r3, #400]	; 0x190
	VALUE(N[ID('O')].neighbours,'N','M','P',0);
 8001b32:	4b7f      	ldr	r3, [pc, #508]	; (8001d30 <Create_Nodes+0x9a8>)
 8001b34:	224e      	movs	r2, #78	; 0x4e
 8001b36:	f883 2194 	strb.w	r2, [r3, #404]	; 0x194
 8001b3a:	4b7d      	ldr	r3, [pc, #500]	; (8001d30 <Create_Nodes+0x9a8>)
 8001b3c:	224d      	movs	r2, #77	; 0x4d
 8001b3e:	f883 2195 	strb.w	r2, [r3, #405]	; 0x195
 8001b42:	4b7b      	ldr	r3, [pc, #492]	; (8001d30 <Create_Nodes+0x9a8>)
 8001b44:	2250      	movs	r2, #80	; 0x50
 8001b46:	f883 2196 	strb.w	r2, [r3, #406]	; 0x196
 8001b4a:	4b79      	ldr	r3, [pc, #484]	; (8001d30 <Create_Nodes+0x9a8>)
 8001b4c:	2200      	movs	r2, #0
 8001b4e:	f883 2197 	strb.w	r2, [r3, #407]	; 0x197
	VALUE(N[ID('O')].directions,1,1,2,0);
 8001b52:	4b77      	ldr	r3, [pc, #476]	; (8001d30 <Create_Nodes+0x9a8>)
 8001b54:	2201      	movs	r2, #1
 8001b56:	f883 2198 	strb.w	r2, [r3, #408]	; 0x198
 8001b5a:	4b75      	ldr	r3, [pc, #468]	; (8001d30 <Create_Nodes+0x9a8>)
 8001b5c:	2201      	movs	r2, #1
 8001b5e:	f883 2199 	strb.w	r2, [r3, #409]	; 0x199
 8001b62:	4b73      	ldr	r3, [pc, #460]	; (8001d30 <Create_Nodes+0x9a8>)
 8001b64:	2202      	movs	r2, #2
 8001b66:	f883 219a 	strb.w	r2, [r3, #410]	; 0x19a
 8001b6a:	4b71      	ldr	r3, [pc, #452]	; (8001d30 <Create_Nodes+0x9a8>)
 8001b6c:	2200      	movs	r2, #0
 8001b6e:	f883 219b 	strb.w	r2, [r3, #411]	; 0x19b
	VALUE(N[ID('O')].distance,228,198,248,0);
 8001b72:	4b6f      	ldr	r3, [pc, #444]	; (8001d30 <Create_Nodes+0x9a8>)
 8001b74:	22e4      	movs	r2, #228	; 0xe4
 8001b76:	f8a3 219c 	strh.w	r2, [r3, #412]	; 0x19c
 8001b7a:	4b6d      	ldr	r3, [pc, #436]	; (8001d30 <Create_Nodes+0x9a8>)
 8001b7c:	22c6      	movs	r2, #198	; 0xc6
 8001b7e:	f8a3 219e 	strh.w	r2, [r3, #414]	; 0x19e
 8001b82:	4b6b      	ldr	r3, [pc, #428]	; (8001d30 <Create_Nodes+0x9a8>)
 8001b84:	22f8      	movs	r2, #248	; 0xf8
 8001b86:	f8a3 21a0 	strh.w	r2, [r3, #416]	; 0x1a0
 8001b8a:	4b69      	ldr	r3, [pc, #420]	; (8001d30 <Create_Nodes+0x9a8>)
 8001b8c:	2200      	movs	r2, #0
 8001b8e:	f8a3 21a2 	strh.w	r2, [r3, #418]	; 0x1a2

	//P node
	N[ID('P')].worth=3;
 8001b92:	4b67      	ldr	r3, [pc, #412]	; (8001d30 <Create_Nodes+0x9a8>)
 8001b94:	2203      	movs	r2, #3
 8001b96:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
	N[ID('P')].type=1;
 8001b9a:	4b65      	ldr	r3, [pc, #404]	; (8001d30 <Create_Nodes+0x9a8>)
 8001b9c:	2201      	movs	r2, #1
 8001b9e:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
	VALUE(N[ID('P')].neighbours,'O','M','R','S');
 8001ba2:	4b63      	ldr	r3, [pc, #396]	; (8001d30 <Create_Nodes+0x9a8>)
 8001ba4:	224f      	movs	r2, #79	; 0x4f
 8001ba6:	f883 21b0 	strb.w	r2, [r3, #432]	; 0x1b0
 8001baa:	4b61      	ldr	r3, [pc, #388]	; (8001d30 <Create_Nodes+0x9a8>)
 8001bac:	224d      	movs	r2, #77	; 0x4d
 8001bae:	f883 21b1 	strb.w	r2, [r3, #433]	; 0x1b1
 8001bb2:	4b5f      	ldr	r3, [pc, #380]	; (8001d30 <Create_Nodes+0x9a8>)
 8001bb4:	2252      	movs	r2, #82	; 0x52
 8001bb6:	f883 21b2 	strb.w	r2, [r3, #434]	; 0x1b2
 8001bba:	4b5d      	ldr	r3, [pc, #372]	; (8001d30 <Create_Nodes+0x9a8>)
 8001bbc:	2253      	movs	r2, #83	; 0x53
 8001bbe:	f883 21b3 	strb.w	r2, [r3, #435]	; 0x1b3
	VALUE(N[ID('P')].directions,1,1,2,2);
 8001bc2:	4b5b      	ldr	r3, [pc, #364]	; (8001d30 <Create_Nodes+0x9a8>)
 8001bc4:	2201      	movs	r2, #1
 8001bc6:	f883 21b4 	strb.w	r2, [r3, #436]	; 0x1b4
 8001bca:	4b59      	ldr	r3, [pc, #356]	; (8001d30 <Create_Nodes+0x9a8>)
 8001bcc:	2201      	movs	r2, #1
 8001bce:	f883 21b5 	strb.w	r2, [r3, #437]	; 0x1b5
 8001bd2:	4b57      	ldr	r3, [pc, #348]	; (8001d30 <Create_Nodes+0x9a8>)
 8001bd4:	2202      	movs	r2, #2
 8001bd6:	f883 21b6 	strb.w	r2, [r3, #438]	; 0x1b6
 8001bda:	4b55      	ldr	r3, [pc, #340]	; (8001d30 <Create_Nodes+0x9a8>)
 8001bdc:	2202      	movs	r2, #2
 8001bde:	f883 21b7 	strb.w	r2, [r3, #439]	; 0x1b7
	VALUE(N[ID('P')].distance,248,416,305,346);
 8001be2:	4b53      	ldr	r3, [pc, #332]	; (8001d30 <Create_Nodes+0x9a8>)
 8001be4:	22f8      	movs	r2, #248	; 0xf8
 8001be6:	f8a3 21b8 	strh.w	r2, [r3, #440]	; 0x1b8
 8001bea:	4b51      	ldr	r3, [pc, #324]	; (8001d30 <Create_Nodes+0x9a8>)
 8001bec:	f44f 72d0 	mov.w	r2, #416	; 0x1a0
 8001bf0:	f8a3 21ba 	strh.w	r2, [r3, #442]	; 0x1ba
 8001bf4:	4b4e      	ldr	r3, [pc, #312]	; (8001d30 <Create_Nodes+0x9a8>)
 8001bf6:	f240 1231 	movw	r2, #305	; 0x131
 8001bfa:	f8a3 21bc 	strh.w	r2, [r3, #444]	; 0x1bc
 8001bfe:	4b4c      	ldr	r3, [pc, #304]	; (8001d30 <Create_Nodes+0x9a8>)
 8001c00:	f44f 72ad 	mov.w	r2, #346	; 0x15a
 8001c04:	f8a3 21be 	strh.w	r2, [r3, #446]	; 0x1be

	//Q node
	N[ID('Q')].worth=3;
 8001c08:	4b49      	ldr	r3, [pc, #292]	; (8001d30 <Create_Nodes+0x9a8>)
 8001c0a:	2203      	movs	r2, #3
 8001c0c:	f8c3 21c4 	str.w	r2, [r3, #452]	; 0x1c4
	N[ID('Q')].type=1;
 8001c10:	4b47      	ldr	r3, [pc, #284]	; (8001d30 <Create_Nodes+0x9a8>)
 8001c12:	2201      	movs	r2, #1
 8001c14:	f8c3 21c8 	str.w	r2, [r3, #456]	; 0x1c8
	VALUE(N[ID('Q')].neighbours,'N',0,'R','S');
 8001c18:	4b45      	ldr	r3, [pc, #276]	; (8001d30 <Create_Nodes+0x9a8>)
 8001c1a:	224e      	movs	r2, #78	; 0x4e
 8001c1c:	f883 21cc 	strb.w	r2, [r3, #460]	; 0x1cc
 8001c20:	4b43      	ldr	r3, [pc, #268]	; (8001d30 <Create_Nodes+0x9a8>)
 8001c22:	2200      	movs	r2, #0
 8001c24:	f883 21cd 	strb.w	r2, [r3, #461]	; 0x1cd
 8001c28:	4b41      	ldr	r3, [pc, #260]	; (8001d30 <Create_Nodes+0x9a8>)
 8001c2a:	2252      	movs	r2, #82	; 0x52
 8001c2c:	f883 21ce 	strb.w	r2, [r3, #462]	; 0x1ce
 8001c30:	4b3f      	ldr	r3, [pc, #252]	; (8001d30 <Create_Nodes+0x9a8>)
 8001c32:	2253      	movs	r2, #83	; 0x53
 8001c34:	f883 21cf 	strb.w	r2, [r3, #463]	; 0x1cf
	VALUE(N[ID('Q')].directions,1,0,2,2);
 8001c38:	4b3d      	ldr	r3, [pc, #244]	; (8001d30 <Create_Nodes+0x9a8>)
 8001c3a:	2201      	movs	r2, #1
 8001c3c:	f883 21d0 	strb.w	r2, [r3, #464]	; 0x1d0
 8001c40:	4b3b      	ldr	r3, [pc, #236]	; (8001d30 <Create_Nodes+0x9a8>)
 8001c42:	2200      	movs	r2, #0
 8001c44:	f883 21d1 	strb.w	r2, [r3, #465]	; 0x1d1
 8001c48:	4b39      	ldr	r3, [pc, #228]	; (8001d30 <Create_Nodes+0x9a8>)
 8001c4a:	2202      	movs	r2, #2
 8001c4c:	f883 21d2 	strb.w	r2, [r3, #466]	; 0x1d2
 8001c50:	4b37      	ldr	r3, [pc, #220]	; (8001d30 <Create_Nodes+0x9a8>)
 8001c52:	2202      	movs	r2, #2
 8001c54:	f883 21d3 	strb.w	r2, [r3, #467]	; 0x1d3
	VALUE(N[ID('Q')].distance,447,0,346,284);
 8001c58:	4b35      	ldr	r3, [pc, #212]	; (8001d30 <Create_Nodes+0x9a8>)
 8001c5a:	f240 12bf 	movw	r2, #447	; 0x1bf
 8001c5e:	f8a3 21d4 	strh.w	r2, [r3, #468]	; 0x1d4
 8001c62:	4b33      	ldr	r3, [pc, #204]	; (8001d30 <Create_Nodes+0x9a8>)
 8001c64:	2200      	movs	r2, #0
 8001c66:	f8a3 21d6 	strh.w	r2, [r3, #470]	; 0x1d6
 8001c6a:	4b31      	ldr	r3, [pc, #196]	; (8001d30 <Create_Nodes+0x9a8>)
 8001c6c:	f44f 72ad 	mov.w	r2, #346	; 0x15a
 8001c70:	f8a3 21d8 	strh.w	r2, [r3, #472]	; 0x1d8
 8001c74:	4b2e      	ldr	r3, [pc, #184]	; (8001d30 <Create_Nodes+0x9a8>)
 8001c76:	f44f 728e 	mov.w	r2, #284	; 0x11c
 8001c7a:	f8a3 21da 	strh.w	r2, [r3, #474]	; 0x1da

	//R node
	N[ID('R')].worth=3;
 8001c7e:	4b2c      	ldr	r3, [pc, #176]	; (8001d30 <Create_Nodes+0x9a8>)
 8001c80:	2203      	movs	r2, #3
 8001c82:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
	N[ID('R')].type=1;
 8001c86:	4b2a      	ldr	r3, [pc, #168]	; (8001d30 <Create_Nodes+0x9a8>)
 8001c88:	2201      	movs	r2, #1
 8001c8a:	f8c3 21e4 	str.w	r2, [r3, #484]	; 0x1e4
	VALUE(N[ID('R')].neighbours,'Q','P','U','T');
 8001c8e:	4b28      	ldr	r3, [pc, #160]	; (8001d30 <Create_Nodes+0x9a8>)
 8001c90:	2251      	movs	r2, #81	; 0x51
 8001c92:	f883 21e8 	strb.w	r2, [r3, #488]	; 0x1e8
 8001c96:	4b26      	ldr	r3, [pc, #152]	; (8001d30 <Create_Nodes+0x9a8>)
 8001c98:	2250      	movs	r2, #80	; 0x50
 8001c9a:	f883 21e9 	strb.w	r2, [r3, #489]	; 0x1e9
 8001c9e:	4b24      	ldr	r3, [pc, #144]	; (8001d30 <Create_Nodes+0x9a8>)
 8001ca0:	2255      	movs	r2, #85	; 0x55
 8001ca2:	f883 21ea 	strb.w	r2, [r3, #490]	; 0x1ea
 8001ca6:	4b22      	ldr	r3, [pc, #136]	; (8001d30 <Create_Nodes+0x9a8>)
 8001ca8:	2254      	movs	r2, #84	; 0x54
 8001caa:	f883 21eb 	strb.w	r2, [r3, #491]	; 0x1eb
	VALUE(N[ID('R')].directions,1,1,2,2);
 8001cae:	4b20      	ldr	r3, [pc, #128]	; (8001d30 <Create_Nodes+0x9a8>)
 8001cb0:	2201      	movs	r2, #1
 8001cb2:	f883 21ec 	strb.w	r2, [r3, #492]	; 0x1ec
 8001cb6:	4b1e      	ldr	r3, [pc, #120]	; (8001d30 <Create_Nodes+0x9a8>)
 8001cb8:	2201      	movs	r2, #1
 8001cba:	f883 21ed 	strb.w	r2, [r3, #493]	; 0x1ed
 8001cbe:	4b1c      	ldr	r3, [pc, #112]	; (8001d30 <Create_Nodes+0x9a8>)
 8001cc0:	2202      	movs	r2, #2
 8001cc2:	f883 21ee 	strb.w	r2, [r3, #494]	; 0x1ee
 8001cc6:	4b1a      	ldr	r3, [pc, #104]	; (8001d30 <Create_Nodes+0x9a8>)
 8001cc8:	2202      	movs	r2, #2
 8001cca:	f883 21ef 	strb.w	r2, [r3, #495]	; 0x1ef
	VALUE(N[ID('R')].distance,346,305,366,204);
 8001cce:	4b18      	ldr	r3, [pc, #96]	; (8001d30 <Create_Nodes+0x9a8>)
 8001cd0:	f44f 72ad 	mov.w	r2, #346	; 0x15a
 8001cd4:	f8a3 21f0 	strh.w	r2, [r3, #496]	; 0x1f0
 8001cd8:	4b15      	ldr	r3, [pc, #84]	; (8001d30 <Create_Nodes+0x9a8>)
 8001cda:	f240 1231 	movw	r2, #305	; 0x131
 8001cde:	f8a3 21f2 	strh.w	r2, [r3, #498]	; 0x1f2
 8001ce2:	4b13      	ldr	r3, [pc, #76]	; (8001d30 <Create_Nodes+0x9a8>)
 8001ce4:	f44f 72b7 	mov.w	r2, #366	; 0x16e
 8001ce8:	f8a3 21f4 	strh.w	r2, [r3, #500]	; 0x1f4
 8001cec:	4b10      	ldr	r3, [pc, #64]	; (8001d30 <Create_Nodes+0x9a8>)
 8001cee:	22cc      	movs	r2, #204	; 0xcc
 8001cf0:	f8a3 21f6 	strh.w	r2, [r3, #502]	; 0x1f6

	//S node
	N[ID('S')].worth=3;
 8001cf4:	4b0e      	ldr	r3, [pc, #56]	; (8001d30 <Create_Nodes+0x9a8>)
 8001cf6:	2203      	movs	r2, #3
 8001cf8:	f8c3 21fc 	str.w	r2, [r3, #508]	; 0x1fc
	N[ID('S')].type=1;
 8001cfc:	4b0c      	ldr	r3, [pc, #48]	; (8001d30 <Create_Nodes+0x9a8>)
 8001cfe:	2201      	movs	r2, #1
 8001d00:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
	VALUE(N[ID('S')].neighbours,'Q','P','T','V');
 8001d04:	4b0a      	ldr	r3, [pc, #40]	; (8001d30 <Create_Nodes+0x9a8>)
 8001d06:	2251      	movs	r2, #81	; 0x51
 8001d08:	f883 2204 	strb.w	r2, [r3, #516]	; 0x204
 8001d0c:	4b08      	ldr	r3, [pc, #32]	; (8001d30 <Create_Nodes+0x9a8>)
 8001d0e:	2250      	movs	r2, #80	; 0x50
 8001d10:	f883 2205 	strb.w	r2, [r3, #517]	; 0x205
 8001d14:	4b06      	ldr	r3, [pc, #24]	; (8001d30 <Create_Nodes+0x9a8>)
 8001d16:	2254      	movs	r2, #84	; 0x54
 8001d18:	f883 2206 	strb.w	r2, [r3, #518]	; 0x206
 8001d1c:	4b04      	ldr	r3, [pc, #16]	; (8001d30 <Create_Nodes+0x9a8>)
 8001d1e:	2256      	movs	r2, #86	; 0x56
 8001d20:	f883 2207 	strb.w	r2, [r3, #519]	; 0x207
	VALUE(N[ID('S')].directions,1,1,2,2);
 8001d24:	4b02      	ldr	r3, [pc, #8]	; (8001d30 <Create_Nodes+0x9a8>)
 8001d26:	2201      	movs	r2, #1
 8001d28:	f883 2208 	strb.w	r2, [r3, #520]	; 0x208
 8001d2c:	e002      	b.n	8001d34 <Create_Nodes+0x9ac>
 8001d2e:	bf00      	nop
 8001d30:	20000280 	.word	0x20000280
 8001d34:	4bcc      	ldr	r3, [pc, #816]	; (8002068 <Create_Nodes+0xce0>)
 8001d36:	2201      	movs	r2, #1
 8001d38:	f883 2209 	strb.w	r2, [r3, #521]	; 0x209
 8001d3c:	4bca      	ldr	r3, [pc, #808]	; (8002068 <Create_Nodes+0xce0>)
 8001d3e:	2202      	movs	r2, #2
 8001d40:	f883 220a 	strb.w	r2, [r3, #522]	; 0x20a
 8001d44:	4bc8      	ldr	r3, [pc, #800]	; (8002068 <Create_Nodes+0xce0>)
 8001d46:	2202      	movs	r2, #2
 8001d48:	f883 220b 	strb.w	r2, [r3, #523]	; 0x20b
	VALUE(N[ID('S')].distance,284,346,223,406);
 8001d4c:	4bc6      	ldr	r3, [pc, #792]	; (8002068 <Create_Nodes+0xce0>)
 8001d4e:	f44f 728e 	mov.w	r2, #284	; 0x11c
 8001d52:	f8a3 220c 	strh.w	r2, [r3, #524]	; 0x20c
 8001d56:	4bc4      	ldr	r3, [pc, #784]	; (8002068 <Create_Nodes+0xce0>)
 8001d58:	f44f 72ad 	mov.w	r2, #346	; 0x15a
 8001d5c:	f8a3 220e 	strh.w	r2, [r3, #526]	; 0x20e
 8001d60:	4bc1      	ldr	r3, [pc, #772]	; (8002068 <Create_Nodes+0xce0>)
 8001d62:	22df      	movs	r2, #223	; 0xdf
 8001d64:	f8a3 2210 	strh.w	r2, [r3, #528]	; 0x210
 8001d68:	4bbf      	ldr	r3, [pc, #764]	; (8002068 <Create_Nodes+0xce0>)
 8001d6a:	f44f 72cb 	mov.w	r2, #406	; 0x196
 8001d6e:	f8a3 2212 	strh.w	r2, [r3, #530]	; 0x212

	//T node
	N[ID('T')].worth=3;
 8001d72:	4bbd      	ldr	r3, [pc, #756]	; (8002068 <Create_Nodes+0xce0>)
 8001d74:	2203      	movs	r2, #3
 8001d76:	f8c3 2218 	str.w	r2, [r3, #536]	; 0x218
	N[ID('T')].type=1;
 8001d7a:	4bbb      	ldr	r3, [pc, #748]	; (8002068 <Create_Nodes+0xce0>)
 8001d7c:	2201      	movs	r2, #1
 8001d7e:	f8c3 221c 	str.w	r2, [r3, #540]	; 0x21c
	VALUE(N[ID('T')].neighbours,'S','R','U','V');
 8001d82:	4bb9      	ldr	r3, [pc, #740]	; (8002068 <Create_Nodes+0xce0>)
 8001d84:	2253      	movs	r2, #83	; 0x53
 8001d86:	f883 2220 	strb.w	r2, [r3, #544]	; 0x220
 8001d8a:	4bb7      	ldr	r3, [pc, #732]	; (8002068 <Create_Nodes+0xce0>)
 8001d8c:	2252      	movs	r2, #82	; 0x52
 8001d8e:	f883 2221 	strb.w	r2, [r3, #545]	; 0x221
 8001d92:	4bb5      	ldr	r3, [pc, #724]	; (8002068 <Create_Nodes+0xce0>)
 8001d94:	2255      	movs	r2, #85	; 0x55
 8001d96:	f883 2222 	strb.w	r2, [r3, #546]	; 0x222
 8001d9a:	4bb3      	ldr	r3, [pc, #716]	; (8002068 <Create_Nodes+0xce0>)
 8001d9c:	2256      	movs	r2, #86	; 0x56
 8001d9e:	f883 2223 	strb.w	r2, [r3, #547]	; 0x223
	VALUE(N[ID('T')].directions,1,1,2,2);
 8001da2:	4bb1      	ldr	r3, [pc, #708]	; (8002068 <Create_Nodes+0xce0>)
 8001da4:	2201      	movs	r2, #1
 8001da6:	f883 2224 	strb.w	r2, [r3, #548]	; 0x224
 8001daa:	4baf      	ldr	r3, [pc, #700]	; (8002068 <Create_Nodes+0xce0>)
 8001dac:	2201      	movs	r2, #1
 8001dae:	f883 2225 	strb.w	r2, [r3, #549]	; 0x225
 8001db2:	4bad      	ldr	r3, [pc, #692]	; (8002068 <Create_Nodes+0xce0>)
 8001db4:	2202      	movs	r2, #2
 8001db6:	f883 2226 	strb.w	r2, [r3, #550]	; 0x226
 8001dba:	4bab      	ldr	r3, [pc, #684]	; (8002068 <Create_Nodes+0xce0>)
 8001dbc:	2202      	movs	r2, #2
 8001dbe:	f883 2227 	strb.w	r2, [r3, #551]	; 0x227
	VALUE(N[ID('T')].distance,223,204,192,233);
 8001dc2:	4ba9      	ldr	r3, [pc, #676]	; (8002068 <Create_Nodes+0xce0>)
 8001dc4:	22df      	movs	r2, #223	; 0xdf
 8001dc6:	f8a3 2228 	strh.w	r2, [r3, #552]	; 0x228
 8001dca:	4ba7      	ldr	r3, [pc, #668]	; (8002068 <Create_Nodes+0xce0>)
 8001dcc:	22cc      	movs	r2, #204	; 0xcc
 8001dce:	f8a3 222a 	strh.w	r2, [r3, #554]	; 0x22a
 8001dd2:	4ba5      	ldr	r3, [pc, #660]	; (8002068 <Create_Nodes+0xce0>)
 8001dd4:	22c0      	movs	r2, #192	; 0xc0
 8001dd6:	f8a3 222c 	strh.w	r2, [r3, #556]	; 0x22c
 8001dda:	4ba3      	ldr	r3, [pc, #652]	; (8002068 <Create_Nodes+0xce0>)
 8001ddc:	22e9      	movs	r2, #233	; 0xe9
 8001dde:	f8a3 222e 	strh.w	r2, [r3, #558]	; 0x22e

	//U node
	N[ID('U')].worth=3;
 8001de2:	4ba1      	ldr	r3, [pc, #644]	; (8002068 <Create_Nodes+0xce0>)
 8001de4:	2203      	movs	r2, #3
 8001de6:	f8c3 2234 	str.w	r2, [r3, #564]	; 0x234
	N[ID('U')].type=1;
 8001dea:	4b9f      	ldr	r3, [pc, #636]	; (8002068 <Create_Nodes+0xce0>)
 8001dec:	2201      	movs	r2, #1
 8001dee:	f8c3 2238 	str.w	r2, [r3, #568]	; 0x238
	VALUE(N[ID('U')].neighbours,'T','R','X',0);
 8001df2:	4b9d      	ldr	r3, [pc, #628]	; (8002068 <Create_Nodes+0xce0>)
 8001df4:	2254      	movs	r2, #84	; 0x54
 8001df6:	f883 223c 	strb.w	r2, [r3, #572]	; 0x23c
 8001dfa:	4b9b      	ldr	r3, [pc, #620]	; (8002068 <Create_Nodes+0xce0>)
 8001dfc:	2252      	movs	r2, #82	; 0x52
 8001dfe:	f883 223d 	strb.w	r2, [r3, #573]	; 0x23d
 8001e02:	4b99      	ldr	r3, [pc, #612]	; (8002068 <Create_Nodes+0xce0>)
 8001e04:	2258      	movs	r2, #88	; 0x58
 8001e06:	f883 223e 	strb.w	r2, [r3, #574]	; 0x23e
 8001e0a:	4b97      	ldr	r3, [pc, #604]	; (8002068 <Create_Nodes+0xce0>)
 8001e0c:	2200      	movs	r2, #0
 8001e0e:	f883 223f 	strb.w	r2, [r3, #575]	; 0x23f
	VALUE(N[ID('U')].directions,1,1,2,0);
 8001e12:	4b95      	ldr	r3, [pc, #596]	; (8002068 <Create_Nodes+0xce0>)
 8001e14:	2201      	movs	r2, #1
 8001e16:	f883 2240 	strb.w	r2, [r3, #576]	; 0x240
 8001e1a:	4b93      	ldr	r3, [pc, #588]	; (8002068 <Create_Nodes+0xce0>)
 8001e1c:	2201      	movs	r2, #1
 8001e1e:	f883 2241 	strb.w	r2, [r3, #577]	; 0x241
 8001e22:	4b91      	ldr	r3, [pc, #580]	; (8002068 <Create_Nodes+0xce0>)
 8001e24:	2202      	movs	r2, #2
 8001e26:	f883 2242 	strb.w	r2, [r3, #578]	; 0x242
 8001e2a:	4b8f      	ldr	r3, [pc, #572]	; (8002068 <Create_Nodes+0xce0>)
 8001e2c:	2200      	movs	r2, #0
 8001e2e:	f883 2243 	strb.w	r2, [r3, #579]	; 0x243
	VALUE(N[ID('U')].distance,192,366,371,0);
 8001e32:	4b8d      	ldr	r3, [pc, #564]	; (8002068 <Create_Nodes+0xce0>)
 8001e34:	22c0      	movs	r2, #192	; 0xc0
 8001e36:	f8a3 2244 	strh.w	r2, [r3, #580]	; 0x244
 8001e3a:	4b8b      	ldr	r3, [pc, #556]	; (8002068 <Create_Nodes+0xce0>)
 8001e3c:	f44f 72b7 	mov.w	r2, #366	; 0x16e
 8001e40:	f8a3 2246 	strh.w	r2, [r3, #582]	; 0x246
 8001e44:	4b88      	ldr	r3, [pc, #544]	; (8002068 <Create_Nodes+0xce0>)
 8001e46:	f240 1273 	movw	r2, #371	; 0x173
 8001e4a:	f8a3 2248 	strh.w	r2, [r3, #584]	; 0x248
 8001e4e:	4b86      	ldr	r3, [pc, #536]	; (8002068 <Create_Nodes+0xce0>)
 8001e50:	2200      	movs	r2, #0
 8001e52:	f8a3 224a 	strh.w	r2, [r3, #586]	; 0x24a

	//V node
	N[ID('V')].worth=3;
 8001e56:	4b84      	ldr	r3, [pc, #528]	; (8002068 <Create_Nodes+0xce0>)
 8001e58:	2203      	movs	r2, #3
 8001e5a:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
	N[ID('V')].type=1;
 8001e5e:	4b82      	ldr	r3, [pc, #520]	; (8002068 <Create_Nodes+0xce0>)
 8001e60:	2201      	movs	r2, #1
 8001e62:	f8c3 2254 	str.w	r2, [r3, #596]	; 0x254
	VALUE(N[ID('V')].neighbours,'S','T','W',0);
 8001e66:	4b80      	ldr	r3, [pc, #512]	; (8002068 <Create_Nodes+0xce0>)
 8001e68:	2253      	movs	r2, #83	; 0x53
 8001e6a:	f883 2258 	strb.w	r2, [r3, #600]	; 0x258
 8001e6e:	4b7e      	ldr	r3, [pc, #504]	; (8002068 <Create_Nodes+0xce0>)
 8001e70:	2254      	movs	r2, #84	; 0x54
 8001e72:	f883 2259 	strb.w	r2, [r3, #601]	; 0x259
 8001e76:	4b7c      	ldr	r3, [pc, #496]	; (8002068 <Create_Nodes+0xce0>)
 8001e78:	2257      	movs	r2, #87	; 0x57
 8001e7a:	f883 225a 	strb.w	r2, [r3, #602]	; 0x25a
 8001e7e:	4b7a      	ldr	r3, [pc, #488]	; (8002068 <Create_Nodes+0xce0>)
 8001e80:	2200      	movs	r2, #0
 8001e82:	f883 225b 	strb.w	r2, [r3, #603]	; 0x25b
	VALUE(N[ID('V')].directions,1,1,2,0);
 8001e86:	4b78      	ldr	r3, [pc, #480]	; (8002068 <Create_Nodes+0xce0>)
 8001e88:	2201      	movs	r2, #1
 8001e8a:	f883 225c 	strb.w	r2, [r3, #604]	; 0x25c
 8001e8e:	4b76      	ldr	r3, [pc, #472]	; (8002068 <Create_Nodes+0xce0>)
 8001e90:	2201      	movs	r2, #1
 8001e92:	f883 225d 	strb.w	r2, [r3, #605]	; 0x25d
 8001e96:	4b74      	ldr	r3, [pc, #464]	; (8002068 <Create_Nodes+0xce0>)
 8001e98:	2202      	movs	r2, #2
 8001e9a:	f883 225e 	strb.w	r2, [r3, #606]	; 0x25e
 8001e9e:	4b72      	ldr	r3, [pc, #456]	; (8002068 <Create_Nodes+0xce0>)
 8001ea0:	2200      	movs	r2, #0
 8001ea2:	f883 225f 	strb.w	r2, [r3, #607]	; 0x25f
	VALUE(N[ID('V')].distance,406,233,149,0);
 8001ea6:	4b70      	ldr	r3, [pc, #448]	; (8002068 <Create_Nodes+0xce0>)
 8001ea8:	f44f 72cb 	mov.w	r2, #406	; 0x196
 8001eac:	f8a3 2260 	strh.w	r2, [r3, #608]	; 0x260
 8001eb0:	4b6d      	ldr	r3, [pc, #436]	; (8002068 <Create_Nodes+0xce0>)
 8001eb2:	22e9      	movs	r2, #233	; 0xe9
 8001eb4:	f8a3 2262 	strh.w	r2, [r3, #610]	; 0x262
 8001eb8:	4b6b      	ldr	r3, [pc, #428]	; (8002068 <Create_Nodes+0xce0>)
 8001eba:	2295      	movs	r2, #149	; 0x95
 8001ebc:	f8a3 2264 	strh.w	r2, [r3, #612]	; 0x264
 8001ec0:	4b69      	ldr	r3, [pc, #420]	; (8002068 <Create_Nodes+0xce0>)
 8001ec2:	2200      	movs	r2, #0
 8001ec4:	f8a3 2266 	strh.w	r2, [r3, #614]	; 0x266

	//W node
	N[ID('W')].worth=1;
 8001ec8:	4b67      	ldr	r3, [pc, #412]	; (8002068 <Create_Nodes+0xce0>)
 8001eca:	2201      	movs	r2, #1
 8001ecc:	f8c3 226c 	str.w	r2, [r3, #620]	; 0x26c
	N[ID('W')].type=3;
 8001ed0:	4b65      	ldr	r3, [pc, #404]	; (8002068 <Create_Nodes+0xce0>)
 8001ed2:	2203      	movs	r2, #3
 8001ed4:	f8c3 2270 	str.w	r2, [r3, #624]	; 0x270
	VALUE(N[ID('W')].neighbours,'V',0,'X',0);
 8001ed8:	4b63      	ldr	r3, [pc, #396]	; (8002068 <Create_Nodes+0xce0>)
 8001eda:	2256      	movs	r2, #86	; 0x56
 8001edc:	f883 2274 	strb.w	r2, [r3, #628]	; 0x274
 8001ee0:	4b61      	ldr	r3, [pc, #388]	; (8002068 <Create_Nodes+0xce0>)
 8001ee2:	2200      	movs	r2, #0
 8001ee4:	f883 2275 	strb.w	r2, [r3, #629]	; 0x275
 8001ee8:	4b5f      	ldr	r3, [pc, #380]	; (8002068 <Create_Nodes+0xce0>)
 8001eea:	2258      	movs	r2, #88	; 0x58
 8001eec:	f883 2276 	strb.w	r2, [r3, #630]	; 0x276
 8001ef0:	4b5d      	ldr	r3, [pc, #372]	; (8002068 <Create_Nodes+0xce0>)
 8001ef2:	2200      	movs	r2, #0
 8001ef4:	f883 2277 	strb.w	r2, [r3, #631]	; 0x277
	VALUE(N[ID('W')].directions,1,0,1,0);
 8001ef8:	4b5b      	ldr	r3, [pc, #364]	; (8002068 <Create_Nodes+0xce0>)
 8001efa:	2201      	movs	r2, #1
 8001efc:	f883 2278 	strb.w	r2, [r3, #632]	; 0x278
 8001f00:	4b59      	ldr	r3, [pc, #356]	; (8002068 <Create_Nodes+0xce0>)
 8001f02:	2200      	movs	r2, #0
 8001f04:	f883 2279 	strb.w	r2, [r3, #633]	; 0x279
 8001f08:	4b57      	ldr	r3, [pc, #348]	; (8002068 <Create_Nodes+0xce0>)
 8001f0a:	2201      	movs	r2, #1
 8001f0c:	f883 227a 	strb.w	r2, [r3, #634]	; 0x27a
 8001f10:	4b55      	ldr	r3, [pc, #340]	; (8002068 <Create_Nodes+0xce0>)
 8001f12:	2200      	movs	r2, #0
 8001f14:	f883 227b 	strb.w	r2, [r3, #635]	; 0x27b
	VALUE(N[ID('W')].distance,149,0,189,0);
 8001f18:	4b53      	ldr	r3, [pc, #332]	; (8002068 <Create_Nodes+0xce0>)
 8001f1a:	2295      	movs	r2, #149	; 0x95
 8001f1c:	f8a3 227c 	strh.w	r2, [r3, #636]	; 0x27c
 8001f20:	4b51      	ldr	r3, [pc, #324]	; (8002068 <Create_Nodes+0xce0>)
 8001f22:	2200      	movs	r2, #0
 8001f24:	f8a3 227e 	strh.w	r2, [r3, #638]	; 0x27e
 8001f28:	4b4f      	ldr	r3, [pc, #316]	; (8002068 <Create_Nodes+0xce0>)
 8001f2a:	22bd      	movs	r2, #189	; 0xbd
 8001f2c:	f8a3 2280 	strh.w	r2, [r3, #640]	; 0x280
 8001f30:	4b4d      	ldr	r3, [pc, #308]	; (8002068 <Create_Nodes+0xce0>)
 8001f32:	2200      	movs	r2, #0
 8001f34:	f8a3 2282 	strh.w	r2, [r3, #642]	; 0x282

	//X node
	N[ID('X')].worth=3;
 8001f38:	4b4b      	ldr	r3, [pc, #300]	; (8002068 <Create_Nodes+0xce0>)
 8001f3a:	2203      	movs	r2, #3
 8001f3c:	f8c3 2288 	str.w	r2, [r3, #648]	; 0x288
	N[ID('X')].type=2;
 8001f40:	4b49      	ldr	r3, [pc, #292]	; (8002068 <Create_Nodes+0xce0>)
 8001f42:	2202      	movs	r2, #2
 8001f44:	f8c3 228c 	str.w	r2, [r3, #652]	; 0x28c
	VALUE(N[ID('X')].neighbours,'U',0,0,'W');
 8001f48:	4b47      	ldr	r3, [pc, #284]	; (8002068 <Create_Nodes+0xce0>)
 8001f4a:	2255      	movs	r2, #85	; 0x55
 8001f4c:	f883 2290 	strb.w	r2, [r3, #656]	; 0x290
 8001f50:	4b45      	ldr	r3, [pc, #276]	; (8002068 <Create_Nodes+0xce0>)
 8001f52:	2200      	movs	r2, #0
 8001f54:	f883 2291 	strb.w	r2, [r3, #657]	; 0x291
 8001f58:	4b43      	ldr	r3, [pc, #268]	; (8002068 <Create_Nodes+0xce0>)
 8001f5a:	2200      	movs	r2, #0
 8001f5c:	f883 2292 	strb.w	r2, [r3, #658]	; 0x292
 8001f60:	4b41      	ldr	r3, [pc, #260]	; (8002068 <Create_Nodes+0xce0>)
 8001f62:	2257      	movs	r2, #87	; 0x57
 8001f64:	f883 2293 	strb.w	r2, [r3, #659]	; 0x293
	VALUE(N[ID('X')].directions,1,0,0,1);
 8001f68:	4b3f      	ldr	r3, [pc, #252]	; (8002068 <Create_Nodes+0xce0>)
 8001f6a:	2201      	movs	r2, #1
 8001f6c:	f883 2294 	strb.w	r2, [r3, #660]	; 0x294
 8001f70:	4b3d      	ldr	r3, [pc, #244]	; (8002068 <Create_Nodes+0xce0>)
 8001f72:	2200      	movs	r2, #0
 8001f74:	f883 2295 	strb.w	r2, [r3, #661]	; 0x295
 8001f78:	4b3b      	ldr	r3, [pc, #236]	; (8002068 <Create_Nodes+0xce0>)
 8001f7a:	2200      	movs	r2, #0
 8001f7c:	f883 2296 	strb.w	r2, [r3, #662]	; 0x296
 8001f80:	4b39      	ldr	r3, [pc, #228]	; (8002068 <Create_Nodes+0xce0>)
 8001f82:	2201      	movs	r2, #1
 8001f84:	f883 2297 	strb.w	r2, [r3, #663]	; 0x297
	VALUE(N[ID('X')].distance,371,0,0,189);
 8001f88:	4b37      	ldr	r3, [pc, #220]	; (8002068 <Create_Nodes+0xce0>)
 8001f8a:	f240 1273 	movw	r2, #371	; 0x173
 8001f8e:	f8a3 2298 	strh.w	r2, [r3, #664]	; 0x298
 8001f92:	4b35      	ldr	r3, [pc, #212]	; (8002068 <Create_Nodes+0xce0>)
 8001f94:	2200      	movs	r2, #0
 8001f96:	f8a3 229a 	strh.w	r2, [r3, #666]	; 0x29a
 8001f9a:	4b33      	ldr	r3, [pc, #204]	; (8002068 <Create_Nodes+0xce0>)
 8001f9c:	2200      	movs	r2, #0
 8001f9e:	f8a3 229c 	strh.w	r2, [r3, #668]	; 0x29c
 8001fa2:	4b31      	ldr	r3, [pc, #196]	; (8002068 <Create_Nodes+0xce0>)
 8001fa4:	22bd      	movs	r2, #189	; 0xbd
 8001fa6:	f8a3 229e 	strh.w	r2, [r3, #670]	; 0x29e

	//X node
	N[ID('X')].worth=3;
 8001faa:	4b2f      	ldr	r3, [pc, #188]	; (8002068 <Create_Nodes+0xce0>)
 8001fac:	2203      	movs	r2, #3
 8001fae:	f8c3 2288 	str.w	r2, [r3, #648]	; 0x288
	N[ID('X')].type=2;
 8001fb2:	4b2d      	ldr	r3, [pc, #180]	; (8002068 <Create_Nodes+0xce0>)
 8001fb4:	2202      	movs	r2, #2
 8001fb6:	f8c3 228c 	str.w	r2, [r3, #652]	; 0x28c
	VALUE(N[ID('X')].neighbours,'U',0,0,'W');
 8001fba:	4b2b      	ldr	r3, [pc, #172]	; (8002068 <Create_Nodes+0xce0>)
 8001fbc:	2255      	movs	r2, #85	; 0x55
 8001fbe:	f883 2290 	strb.w	r2, [r3, #656]	; 0x290
 8001fc2:	4b29      	ldr	r3, [pc, #164]	; (8002068 <Create_Nodes+0xce0>)
 8001fc4:	2200      	movs	r2, #0
 8001fc6:	f883 2291 	strb.w	r2, [r3, #657]	; 0x291
 8001fca:	4b27      	ldr	r3, [pc, #156]	; (8002068 <Create_Nodes+0xce0>)
 8001fcc:	2200      	movs	r2, #0
 8001fce:	f883 2292 	strb.w	r2, [r3, #658]	; 0x292
 8001fd2:	4b25      	ldr	r3, [pc, #148]	; (8002068 <Create_Nodes+0xce0>)
 8001fd4:	2257      	movs	r2, #87	; 0x57
 8001fd6:	f883 2293 	strb.w	r2, [r3, #659]	; 0x293
	VALUE(N[ID('X')].directions,1,0,0,1);
 8001fda:	4b23      	ldr	r3, [pc, #140]	; (8002068 <Create_Nodes+0xce0>)
 8001fdc:	2201      	movs	r2, #1
 8001fde:	f883 2294 	strb.w	r2, [r3, #660]	; 0x294
 8001fe2:	4b21      	ldr	r3, [pc, #132]	; (8002068 <Create_Nodes+0xce0>)
 8001fe4:	2200      	movs	r2, #0
 8001fe6:	f883 2295 	strb.w	r2, [r3, #661]	; 0x295
 8001fea:	4b1f      	ldr	r3, [pc, #124]	; (8002068 <Create_Nodes+0xce0>)
 8001fec:	2200      	movs	r2, #0
 8001fee:	f883 2296 	strb.w	r2, [r3, #662]	; 0x296
 8001ff2:	4b1d      	ldr	r3, [pc, #116]	; (8002068 <Create_Nodes+0xce0>)
 8001ff4:	2201      	movs	r2, #1
 8001ff6:	f883 2297 	strb.w	r2, [r3, #663]	; 0x297
	VALUE(N[ID('X')].distance,371,0,0,189);
 8001ffa:	4b1b      	ldr	r3, [pc, #108]	; (8002068 <Create_Nodes+0xce0>)
 8001ffc:	f240 1273 	movw	r2, #371	; 0x173
 8002000:	f8a3 2298 	strh.w	r2, [r3, #664]	; 0x298
 8002004:	4b18      	ldr	r3, [pc, #96]	; (8002068 <Create_Nodes+0xce0>)
 8002006:	2200      	movs	r2, #0
 8002008:	f8a3 229a 	strh.w	r2, [r3, #666]	; 0x29a
 800200c:	4b16      	ldr	r3, [pc, #88]	; (8002068 <Create_Nodes+0xce0>)
 800200e:	2200      	movs	r2, #0
 8002010:	f8a3 229c 	strh.w	r2, [r3, #668]	; 0x29c
 8002014:	4b14      	ldr	r3, [pc, #80]	; (8002068 <Create_Nodes+0xce0>)
 8002016:	22bd      	movs	r2, #189	; 0xbd
 8002018:	f8a3 229e 	strh.w	r2, [r3, #670]	; 0x29e

	//Y node
	/**/N[ID('Y')].worth=0;
 800201c:	4b12      	ldr	r3, [pc, #72]	; (8002068 <Create_Nodes+0xce0>)
 800201e:	2200      	movs	r2, #0
 8002020:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
	N[ID('Y')].type=1;
 8002024:	4b10      	ldr	r3, [pc, #64]	; (8002068 <Create_Nodes+0xce0>)
 8002026:	2201      	movs	r2, #1
 8002028:	f8c3 22a8 	str.w	r2, [r3, #680]	; 0x2a8
	VALUE(N[ID('Y')].neighbours,'W',0,0,0);
 800202c:	4b0e      	ldr	r3, [pc, #56]	; (8002068 <Create_Nodes+0xce0>)
 800202e:	2257      	movs	r2, #87	; 0x57
 8002030:	f883 22ac 	strb.w	r2, [r3, #684]	; 0x2ac
 8002034:	4b0c      	ldr	r3, [pc, #48]	; (8002068 <Create_Nodes+0xce0>)
 8002036:	2200      	movs	r2, #0
 8002038:	f883 22ad 	strb.w	r2, [r3, #685]	; 0x2ad
 800203c:	4b0a      	ldr	r3, [pc, #40]	; (8002068 <Create_Nodes+0xce0>)
 800203e:	2200      	movs	r2, #0
 8002040:	f883 22ae 	strb.w	r2, [r3, #686]	; 0x2ae
 8002044:	4b08      	ldr	r3, [pc, #32]	; (8002068 <Create_Nodes+0xce0>)
 8002046:	2200      	movs	r2, #0
 8002048:	f883 22af 	strb.w	r2, [r3, #687]	; 0x2af
	VALUE(N[ID('Y')].directions,1,0,0,0);
 800204c:	4b06      	ldr	r3, [pc, #24]	; (8002068 <Create_Nodes+0xce0>)
 800204e:	2201      	movs	r2, #1
 8002050:	f883 22b0 	strb.w	r2, [r3, #688]	; 0x2b0
 8002054:	4b04      	ldr	r3, [pc, #16]	; (8002068 <Create_Nodes+0xce0>)
 8002056:	2200      	movs	r2, #0
 8002058:	f883 22b1 	strb.w	r2, [r3, #689]	; 0x2b1
 800205c:	4b02      	ldr	r3, [pc, #8]	; (8002068 <Create_Nodes+0xce0>)
 800205e:	2200      	movs	r2, #0
 8002060:	f883 22b2 	strb.w	r2, [r3, #690]	; 0x2b2
 8002064:	e002      	b.n	800206c <Create_Nodes+0xce4>
 8002066:	bf00      	nop
 8002068:	20000280 	.word	0x20000280
 800206c:	4b0d      	ldr	r3, [pc, #52]	; (80020a4 <Create_Nodes+0xd1c>)
 800206e:	2200      	movs	r2, #0
 8002070:	f883 22b3 	strb.w	r2, [r3, #691]	; 0x2b3
	VALUE(N[ID('Y')].distance,351,0,0,0);
 8002074:	4b0b      	ldr	r3, [pc, #44]	; (80020a4 <Create_Nodes+0xd1c>)
 8002076:	f240 125f 	movw	r2, #351	; 0x15f
 800207a:	f8a3 22b4 	strh.w	r2, [r3, #692]	; 0x2b4
 800207e:	4b09      	ldr	r3, [pc, #36]	; (80020a4 <Create_Nodes+0xd1c>)
 8002080:	2200      	movs	r2, #0
 8002082:	f8a3 22b6 	strh.w	r2, [r3, #694]	; 0x2b6
 8002086:	4b07      	ldr	r3, [pc, #28]	; (80020a4 <Create_Nodes+0xd1c>)
 8002088:	2200      	movs	r2, #0
 800208a:	f8a3 22b8 	strh.w	r2, [r3, #696]	; 0x2b8
 800208e:	4b05      	ldr	r3, [pc, #20]	; (80020a4 <Create_Nodes+0xd1c>)
 8002090:	2200      	movs	r2, #0
 8002092:	f8a3 22ba 	strh.w	r2, [r3, #698]	; 0x2ba
}
 8002096:	bf00      	nop
 8002098:	370c      	adds	r7, #12
 800209a:	46bd      	mov	sp, r7
 800209c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020a0:	4770      	bx	lr
 80020a2:	bf00      	nop
 80020a4:	20000280 	.word	0x20000280

080020a8 <Control_Task>:


void Control_Task(UART_HandleTypeDef *huart_debugg,uint32_t tick, uint32_t period)
{
 80020a8:	b580      	push	{r7, lr}
 80020aa:	b08c      	sub	sp, #48	; 0x30
 80020ac:	af00      	add	r7, sp, #0
 80020ae:	60f8      	str	r0, [r7, #12]
 80020b0:	60b9      	str	r1, [r7, #8]
 80020b2:	607a      	str	r2, [r7, #4]
	static uint8_t nextPath=LEFT;
	static uint32_t t_prev=0;
	static float s=0;
	static uint32_t sMAX=351;
	static float fitness[4]={0,0,0,0};
	uint8_t i=0;
 80020b4:	2300      	movs	r3, #0
 80020b6:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f

	static uint32_t rewards=0;
	float bestFitness=0;
 80020ba:	f04f 0300 	mov.w	r3, #0
 80020be:	62bb      	str	r3, [r7, #40]	; 0x28
	static uint8_t bestPath=0;
	uint8_t nID=0;
 80020c0:	2300      	movs	r3, #0
 80020c2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27

	static uint32_t control_task_tick = 0;


	if(control_task_tick>tick)return;
 80020c6:	4baf      	ldr	r3, [pc, #700]	; (8002384 <Control_Task+0x2dc>)
 80020c8:	681b      	ldr	r3, [r3, #0]
 80020ca:	68ba      	ldr	r2, [r7, #8]
 80020cc:	429a      	cmp	r2, r3
 80020ce:	f0c0 8205 	bcc.w	80024dc <Control_Task+0x434>
	control_task_tick=tick+period;
 80020d2:	68ba      	ldr	r2, [r7, #8]
 80020d4:	687b      	ldr	r3, [r7, #4]
 80020d6:	4413      	add	r3, r2
 80020d8:	4aaa      	ldr	r2, [pc, #680]	; (8002384 <Control_Task+0x2dc>)
 80020da:	6013      	str	r3, [r2, #0]
	if(mode!=SKILL)return;
 80020dc:	4baa      	ldr	r3, [pc, #680]	; (8002388 <Control_Task+0x2e0>)
 80020de:	781b      	ldrb	r3, [r3, #0]
 80020e0:	2b52      	cmp	r3, #82	; 0x52
 80020e2:	f040 81fd 	bne.w	80024e0 <Control_Task+0x438>
	if(!readytorace)return;
 80020e6:	4ba9      	ldr	r3, [pc, #676]	; (800238c <Control_Task+0x2e4>)
 80020e8:	781b      	ldrb	r3, [r3, #0]
 80020ea:	2b00      	cmp	r3, #0
 80020ec:	f000 81fa 	beq.w	80024e4 <Control_Task+0x43c>
	//a pathirány megahtárzása az orientation ismeretében már egyszerű


	char str[20];
	//ha odaértünk a myPositionbe, akkor indulhat a mozgás a nextPosition felé
	if(nodeDetected)
 80020f0:	4ba7      	ldr	r3, [pc, #668]	; (8002390 <Control_Task+0x2e8>)
 80020f2:	781b      	ldrb	r3, [r3, #0]
 80020f4:	2b00      	cmp	r3, #0
 80020f6:	d079      	beq.n	80021ec <Control_Task+0x144>
	{
		LED_B_TOGGLE;
 80020f8:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80020fc:	48a5      	ldr	r0, [pc, #660]	; (8002394 <Control_Task+0x2ec>)
 80020fe:	f005 f884 	bl	800720a <HAL_GPIO_TogglePin>
		nodeDetected=0;
 8002102:	4ba3      	ldr	r3, [pc, #652]	; (8002390 <Control_Task+0x2e8>)
 8002104:	2200      	movs	r2, #0
 8002106:	701a      	strb	r2, [r3, #0]
		rewards +=N[ID(myPosition)].worth;
 8002108:	4ba3      	ldr	r3, [pc, #652]	; (8002398 <Control_Task+0x2f0>)
 800210a:	781b      	ldrb	r3, [r3, #0]
 800210c:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002110:	49a2      	ldr	r1, [pc, #648]	; (800239c <Control_Task+0x2f4>)
 8002112:	4613      	mov	r3, r2
 8002114:	00db      	lsls	r3, r3, #3
 8002116:	1a9b      	subs	r3, r3, r2
 8002118:	009b      	lsls	r3, r3, #2
 800211a:	440b      	add	r3, r1
 800211c:	3304      	adds	r3, #4
 800211e:	681b      	ldr	r3, [r3, #0]
 8002120:	461a      	mov	r2, r3
 8002122:	4b9f      	ldr	r3, [pc, #636]	; (80023a0 <Control_Task+0x2f8>)
 8002124:	681b      	ldr	r3, [r3, #0]
 8002126:	4413      	add	r3, r2
 8002128:	4a9d      	ldr	r2, [pc, #628]	; (80023a0 <Control_Task+0x2f8>)
 800212a:	6013      	str	r3, [r2, #0]
		N[ID(myPosition)].worth=0;//ez a kapu már nem ér pontot
 800212c:	4b9a      	ldr	r3, [pc, #616]	; (8002398 <Control_Task+0x2f0>)
 800212e:	781b      	ldrb	r3, [r3, #0]
 8002130:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002134:	4999      	ldr	r1, [pc, #612]	; (800239c <Control_Task+0x2f4>)
 8002136:	4613      	mov	r3, r2
 8002138:	00db      	lsls	r3, r3, #3
 800213a:	1a9b      	subs	r3, r3, r2
 800213c:	009b      	lsls	r3, r3, #2
 800213e:	440b      	add	r3, r1
 8002140:	3304      	adds	r3, #4
 8002142:	2200      	movs	r2, #0
 8002144:	601a      	str	r2, [r3, #0]
		if(N[ID(nextPosition)].type>2)//ha a kövi node-on nincs kapu
 8002146:	4b97      	ldr	r3, [pc, #604]	; (80023a4 <Control_Task+0x2fc>)
 8002148:	781b      	ldrb	r3, [r3, #0]
 800214a:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800214e:	4993      	ldr	r1, [pc, #588]	; (800239c <Control_Task+0x2f4>)
 8002150:	4613      	mov	r3, r2
 8002152:	00db      	lsls	r3, r3, #3
 8002154:	1a9b      	subs	r3, r3, r2
 8002156:	009b      	lsls	r3, r3, #2
 8002158:	440b      	add	r3, r1
 800215a:	3308      	adds	r3, #8
 800215c:	681b      	ldr	r3, [r3, #0]
 800215e:	2b02      	cmp	r3, #2
 8002160:	d918      	bls.n	8002194 <Control_Task+0xec>
		{
			s=0;
 8002162:	4b91      	ldr	r3, [pc, #580]	; (80023a8 <Control_Task+0x300>)
 8002164:	f04f 0200 	mov.w	r2, #0
 8002168:	601a      	str	r2, [r3, #0]
			sMAX=N[ID(myPosition)].distance[bestPath]+30;
 800216a:	4b8b      	ldr	r3, [pc, #556]	; (8002398 <Control_Task+0x2f0>)
 800216c:	781b      	ldrb	r3, [r3, #0]
 800216e:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002172:	4b8e      	ldr	r3, [pc, #568]	; (80023ac <Control_Task+0x304>)
 8002174:	781b      	ldrb	r3, [r3, #0]
 8002176:	4618      	mov	r0, r3
 8002178:	4988      	ldr	r1, [pc, #544]	; (800239c <Control_Task+0x2f4>)
 800217a:	4613      	mov	r3, r2
 800217c:	00db      	lsls	r3, r3, #3
 800217e:	1a9b      	subs	r3, r3, r2
 8002180:	005b      	lsls	r3, r3, #1
 8002182:	4403      	add	r3, r0
 8002184:	3308      	adds	r3, #8
 8002186:	005b      	lsls	r3, r3, #1
 8002188:	440b      	add	r3, r1
 800218a:	889b      	ldrh	r3, [r3, #4]
 800218c:	331e      	adds	r3, #30
 800218e:	461a      	mov	r2, r3
 8002190:	4b87      	ldr	r3, [pc, #540]	; (80023b0 <Control_Task+0x308>)
 8002192:	601a      	str	r2, [r3, #0]
			//sprintf(str,"%d\n\r",sMAX);
			//HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 5, 5);
			//node_detection_time=11000*N[ID(myPosition)].distance[bestPath]/abs(v_ref);//ennyi ms-nek kell eltelnie, amíg odaérünk
		}
		sprintf(str,"d,d,%d\n\r",(int)rewards);
 8002194:	4b82      	ldr	r3, [pc, #520]	; (80023a0 <Control_Task+0x2f8>)
 8002196:	681b      	ldr	r3, [r3, #0]
 8002198:	461a      	mov	r2, r3
 800219a:	f107 0310 	add.w	r3, r7, #16
 800219e:	4985      	ldr	r1, [pc, #532]	; (80023b4 <Control_Task+0x30c>)
 80021a0:	4618      	mov	r0, r3
 80021a2:	f009 fb45 	bl	800b830 <siprintf>
		str[0]=myPosition;
 80021a6:	4b7c      	ldr	r3, [pc, #496]	; (8002398 <Control_Task+0x2f0>)
 80021a8:	781b      	ldrb	r3, [r3, #0]
 80021aa:	743b      	strb	r3, [r7, #16]
		str[2]=nextPosition;
 80021ac:	4b7d      	ldr	r3, [pc, #500]	; (80023a4 <Control_Task+0x2fc>)
 80021ae:	781b      	ldrb	r3, [r3, #0]
 80021b0:	74bb      	strb	r3, [r7, #18]
		HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 5);
 80021b2:	f107 0310 	add.w	r3, r7, #16
 80021b6:	4618      	mov	r0, r3
 80021b8:	f7fe f82a 	bl	8000210 <strlen>
 80021bc:	4603      	mov	r3, r0
 80021be:	b29a      	uxth	r2, r3
 80021c0:	f107 0110 	add.w	r1, r7, #16
 80021c4:	2305      	movs	r3, #5
 80021c6:	68f8      	ldr	r0, [r7, #12]
 80021c8:	f007 fdc9 	bl	8009d5e <HAL_UART_Transmit>

		myPosition=nextPosition; //'C'
 80021cc:	4b75      	ldr	r3, [pc, #468]	; (80023a4 <Control_Task+0x2fc>)
 80021ce:	781a      	ldrb	r2, [r3, #0]
 80021d0:	4b71      	ldr	r3, [pc, #452]	; (8002398 <Control_Task+0x2f0>)
 80021d2:	701a      	strb	r2, [r3, #0]
		path=nextPath;//RIGHT
 80021d4:	4b78      	ldr	r3, [pc, #480]	; (80023b8 <Control_Task+0x310>)
 80021d6:	781a      	ldrb	r2, [r3, #0]
 80021d8:	4b78      	ldr	r3, [pc, #480]	; (80023bc <Control_Task+0x314>)
 80021da:	701a      	strb	r2, [r3, #0]
		myDirection=nextDirection;//2
 80021dc:	4b78      	ldr	r3, [pc, #480]	; (80023c0 <Control_Task+0x318>)
 80021de:	781a      	ldrb	r2, [r3, #0]
 80021e0:	4b78      	ldr	r3, [pc, #480]	; (80023c4 <Control_Task+0x31c>)
 80021e2:	701a      	strb	r2, [r3, #0]
		orientation=nextOrientation;//FORWARD
 80021e4:	4b78      	ldr	r3, [pc, #480]	; (80023c8 <Control_Task+0x320>)
 80021e6:	781a      	ldrb	r2, [r3, #0]
 80021e8:	4b78      	ldr	r3, [pc, #480]	; (80023cc <Control_Task+0x324>)
 80021ea:	701a      	strb	r2, [r3, #0]

	}

	//legjobb szomszéd kiválasztása
	bestFitness=0;
 80021ec:	f04f 0300 	mov.w	r3, #0
 80021f0:	62bb      	str	r3, [r7, #40]	; 0x28
	for(i=0;i<4;i++)
 80021f2:	2300      	movs	r3, #0
 80021f4:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 80021f8:	e074      	b.n	80022e4 <Control_Task+0x23c>
	{
		if(N[ID(myPosition)].neighbours[i]>0) //ha létezik a szomszéd
 80021fa:	4b67      	ldr	r3, [pc, #412]	; (8002398 <Control_Task+0x2f0>)
 80021fc:	781b      	ldrb	r3, [r3, #0]
 80021fe:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002202:	f897 102f 	ldrb.w	r1, [r7, #47]	; 0x2f
 8002206:	4865      	ldr	r0, [pc, #404]	; (800239c <Control_Task+0x2f4>)
 8002208:	4613      	mov	r3, r2
 800220a:	00db      	lsls	r3, r3, #3
 800220c:	1a9b      	subs	r3, r3, r2
 800220e:	009b      	lsls	r3, r3, #2
 8002210:	4403      	add	r3, r0
 8002212:	440b      	add	r3, r1
 8002214:	330c      	adds	r3, #12
 8002216:	781b      	ldrb	r3, [r3, #0]
 8002218:	2b00      	cmp	r3, #0
 800221a:	d03e      	beq.n	800229a <Control_Task+0x1f2>
		{
			nID=N[ID(myPosition)].neighbours[i]; //a vizsgált szomszéd azonosítója
 800221c:	4b5e      	ldr	r3, [pc, #376]	; (8002398 <Control_Task+0x2f0>)
 800221e:	781b      	ldrb	r3, [r3, #0]
 8002220:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002224:	f897 102f 	ldrb.w	r1, [r7, #47]	; 0x2f
 8002228:	485c      	ldr	r0, [pc, #368]	; (800239c <Control_Task+0x2f4>)
 800222a:	4613      	mov	r3, r2
 800222c:	00db      	lsls	r3, r3, #3
 800222e:	1a9b      	subs	r3, r3, r2
 8002230:	009b      	lsls	r3, r3, #2
 8002232:	4403      	add	r3, r0
 8002234:	440b      	add	r3, r1
 8002236:	330c      	adds	r3, #12
 8002238:	781b      	ldrb	r3, [r3, #0]
 800223a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
			fitness[i]=(float)N[ID(nID)].worth/(N[ID(myPosition)].distance[i]); //a fitneszértéke
 800223e:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002242:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002246:	4955      	ldr	r1, [pc, #340]	; (800239c <Control_Task+0x2f4>)
 8002248:	4613      	mov	r3, r2
 800224a:	00db      	lsls	r3, r3, #3
 800224c:	1a9b      	subs	r3, r3, r2
 800224e:	009b      	lsls	r3, r3, #2
 8002250:	440b      	add	r3, r1
 8002252:	3304      	adds	r3, #4
 8002254:	681b      	ldr	r3, [r3, #0]
 8002256:	ee07 3a90 	vmov	s15, r3
 800225a:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 800225e:	4b4e      	ldr	r3, [pc, #312]	; (8002398 <Control_Task+0x2f0>)
 8002260:	781b      	ldrb	r3, [r3, #0]
 8002262:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002266:	f897 102f 	ldrb.w	r1, [r7, #47]	; 0x2f
 800226a:	484c      	ldr	r0, [pc, #304]	; (800239c <Control_Task+0x2f4>)
 800226c:	4613      	mov	r3, r2
 800226e:	00db      	lsls	r3, r3, #3
 8002270:	1a9b      	subs	r3, r3, r2
 8002272:	005b      	lsls	r3, r3, #1
 8002274:	440b      	add	r3, r1
 8002276:	3308      	adds	r3, #8
 8002278:	005b      	lsls	r3, r3, #1
 800227a:	4403      	add	r3, r0
 800227c:	889b      	ldrh	r3, [r3, #4]
 800227e:	ee07 3a90 	vmov	s15, r3
 8002282:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002286:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 800228a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800228e:	4a50      	ldr	r2, [pc, #320]	; (80023d0 <Control_Task+0x328>)
 8002290:	009b      	lsls	r3, r3, #2
 8002292:	4413      	add	r3, r2
 8002294:	edc3 7a00 	vstr	s15, [r3]
 8002298:	e006      	b.n	80022a8 <Control_Task+0x200>
		}
		else fitness[i]=-100.0;//ha nem létezik a szomszéd erre tuti ne menjünk
 800229a:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 800229e:	4a4c      	ldr	r2, [pc, #304]	; (80023d0 <Control_Task+0x328>)
 80022a0:	009b      	lsls	r3, r3, #2
 80022a2:	4413      	add	r3, r2
 80022a4:	4a4b      	ldr	r2, [pc, #300]	; (80023d4 <Control_Task+0x32c>)
 80022a6:	601a      	str	r2, [r3, #0]
		if(fitness[i]>=bestFitness)
 80022a8:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80022ac:	4a48      	ldr	r2, [pc, #288]	; (80023d0 <Control_Task+0x328>)
 80022ae:	009b      	lsls	r3, r3, #2
 80022b0:	4413      	add	r3, r2
 80022b2:	edd3 7a00 	vldr	s15, [r3]
 80022b6:	ed97 7a0a 	vldr	s14, [r7, #40]	; 0x28
 80022ba:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80022be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80022c2:	d80a      	bhi.n	80022da <Control_Task+0x232>
		{
			bestFitness=fitness[i];
 80022c4:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80022c8:	4a41      	ldr	r2, [pc, #260]	; (80023d0 <Control_Task+0x328>)
 80022ca:	009b      	lsls	r3, r3, #2
 80022cc:	4413      	add	r3, r2
 80022ce:	681b      	ldr	r3, [r3, #0]
 80022d0:	62bb      	str	r3, [r7, #40]	; 0x28
			bestPath = i;//2
 80022d2:	4a36      	ldr	r2, [pc, #216]	; (80023ac <Control_Task+0x304>)
 80022d4:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80022d8:	7013      	strb	r3, [r2, #0]
	for(i=0;i<4;i++)
 80022da:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80022de:	3301      	adds	r3, #1
 80022e0:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 80022e4:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80022e8:	2b03      	cmp	r3, #3
 80022ea:	d986      	bls.n	80021fa <Control_Task+0x152>
			//str[0]=0x30+bestPath;
		}
	}
	//a következő poziciónk a legjobb szomszéd lesz
	nextPosition=N[ID(myPosition)].neighbours[bestPath];//'B'
 80022ec:	4b2a      	ldr	r3, [pc, #168]	; (8002398 <Control_Task+0x2f0>)
 80022ee:	781b      	ldrb	r3, [r3, #0]
 80022f0:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80022f4:	4b2d      	ldr	r3, [pc, #180]	; (80023ac <Control_Task+0x304>)
 80022f6:	781b      	ldrb	r3, [r3, #0]
 80022f8:	4618      	mov	r0, r3
 80022fa:	4928      	ldr	r1, [pc, #160]	; (800239c <Control_Task+0x2f4>)
 80022fc:	4613      	mov	r3, r2
 80022fe:	00db      	lsls	r3, r3, #3
 8002300:	1a9b      	subs	r3, r3, r2
 8002302:	009b      	lsls	r3, r3, #2
 8002304:	440b      	add	r3, r1
 8002306:	4403      	add	r3, r0
 8002308:	330c      	adds	r3, #12
 800230a:	781a      	ldrb	r2, [r3, #0]
 800230c:	4b25      	ldr	r3, [pc, #148]	; (80023a4 <Control_Task+0x2fc>)
 800230e:	701a      	strb	r2, [r3, #0]
	nextDirection=N[ID(myPosition)].directions[bestPath];//már most tudjuk, mi lesz az irányunk, ha odaértünk
 8002310:	4b21      	ldr	r3, [pc, #132]	; (8002398 <Control_Task+0x2f0>)
 8002312:	781b      	ldrb	r3, [r3, #0]
 8002314:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002318:	4b24      	ldr	r3, [pc, #144]	; (80023ac <Control_Task+0x304>)
 800231a:	781b      	ldrb	r3, [r3, #0]
 800231c:	4618      	mov	r0, r3
 800231e:	491f      	ldr	r1, [pc, #124]	; (800239c <Control_Task+0x2f4>)
 8002320:	4613      	mov	r3, r2
 8002322:	00db      	lsls	r3, r3, #3
 8002324:	1a9b      	subs	r3, r3, r2
 8002326:	009b      	lsls	r3, r3, #2
 8002328:	440b      	add	r3, r1
 800232a:	4403      	add	r3, r0
 800232c:	3310      	adds	r3, #16
 800232e:	781a      	ldrb	r2, [r3, #0]
 8002330:	4b23      	ldr	r3, [pc, #140]	; (80023c0 <Control_Task+0x318>)
 8002332:	701a      	strb	r2, [r3, #0]
	//1

	//a kocsi az egyik node-ból átmegy egy másikba-> az irányok segítségével meghatározzu az új orientationt
	if(bestPath<2) //ha balra/le kell majd mennünk a nextPosition -höz
 8002334:	4b1d      	ldr	r3, [pc, #116]	; (80023ac <Control_Task+0x304>)
 8002336:	781b      	ldrb	r3, [r3, #0]
 8002338:	2b01      	cmp	r3, #1
 800233a:	d813      	bhi.n	8002364 <Control_Task+0x2bc>
	{
		if(myDirection==2)//és eddig jobbra/fel mentünk,
 800233c:	4b21      	ldr	r3, [pc, #132]	; (80023c4 <Control_Task+0x31c>)
 800233e:	781b      	ldrb	r3, [r3, #0]
 8002340:	2b02      	cmp	r3, #2
 8002342:	d10a      	bne.n	800235a <Control_Task+0x2b2>
			nextOrientation = !orientation;//akkor most orientációt kell váltanunk
 8002344:	4b21      	ldr	r3, [pc, #132]	; (80023cc <Control_Task+0x324>)
 8002346:	781b      	ldrb	r3, [r3, #0]
 8002348:	2b00      	cmp	r3, #0
 800234a:	bf0c      	ite	eq
 800234c:	2301      	moveq	r3, #1
 800234e:	2300      	movne	r3, #0
 8002350:	b2db      	uxtb	r3, r3
 8002352:	461a      	mov	r2, r3
 8002354:	4b1c      	ldr	r3, [pc, #112]	; (80023c8 <Control_Task+0x320>)
 8002356:	701a      	strb	r2, [r3, #0]
 8002358:	e042      	b.n	80023e0 <Control_Task+0x338>
		else nextOrientation=orientation; //különben nem kell
 800235a:	4b1c      	ldr	r3, [pc, #112]	; (80023cc <Control_Task+0x324>)
 800235c:	781a      	ldrb	r2, [r3, #0]
 800235e:	4b1a      	ldr	r3, [pc, #104]	; (80023c8 <Control_Task+0x320>)
 8002360:	701a      	strb	r2, [r3, #0]
 8002362:	e03d      	b.n	80023e0 <Control_Task+0x338>
	}
	else //ha jobbra kell majd mennünk
	{
		if(myDirection==1)//és eddig jobbra/fel mentünk,
 8002364:	4b17      	ldr	r3, [pc, #92]	; (80023c4 <Control_Task+0x31c>)
 8002366:	781b      	ldrb	r3, [r3, #0]
 8002368:	2b01      	cmp	r3, #1
 800236a:	d135      	bne.n	80023d8 <Control_Task+0x330>
			nextOrientation = !orientation;//akkor most irányt kell váltanunk
 800236c:	4b17      	ldr	r3, [pc, #92]	; (80023cc <Control_Task+0x324>)
 800236e:	781b      	ldrb	r3, [r3, #0]
 8002370:	2b00      	cmp	r3, #0
 8002372:	bf0c      	ite	eq
 8002374:	2301      	moveq	r3, #1
 8002376:	2300      	movne	r3, #0
 8002378:	b2db      	uxtb	r3, r3
 800237a:	461a      	mov	r2, r3
 800237c:	4b12      	ldr	r3, [pc, #72]	; (80023c8 <Control_Task+0x320>)
 800237e:	701a      	strb	r2, [r3, #0]
 8002380:	e02e      	b.n	80023e0 <Control_Task+0x338>
 8002382:	bf00      	nop
 8002384:	2000053c 	.word	0x2000053c
 8002388:	2000026e 	.word	0x2000026e
 800238c:	2000027d 	.word	0x2000027d
 8002390:	2000027a 	.word	0x2000027a
 8002394:	40020400 	.word	0x40020400
 8002398:	20000000 	.word	0x20000000
 800239c:	20000280 	.word	0x20000280
 80023a0:	20000540 	.word	0x20000540
 80023a4:	20000001 	.word	0x20000001
 80023a8:	20000544 	.word	0x20000544
 80023ac:	20000548 	.word	0x20000548
 80023b0:	20000004 	.word	0x20000004
 80023b4:	0800f1fc 	.word	0x0800f1fc
 80023b8:	20000549 	.word	0x20000549
 80023bc:	2000027b 	.word	0x2000027b
 80023c0:	20000008 	.word	0x20000008
 80023c4:	20000009 	.word	0x20000009
 80023c8:	2000054a 	.word	0x2000054a
 80023cc:	20000279 	.word	0x20000279
 80023d0:	2000054c 	.word	0x2000054c
 80023d4:	c2c80000 	.word	0xc2c80000
		else nextOrientation=orientation; //különben nem kell
 80023d8:	4b44      	ldr	r3, [pc, #272]	; (80024ec <Control_Task+0x444>)
 80023da:	781a      	ldrb	r2, [r3, #0]
 80023dc:	4b44      	ldr	r3, [pc, #272]	; (80024f0 <Control_Task+0x448>)
 80023de:	701a      	strb	r2, [r3, #0]
	}

	//path kiválasztás -> az orientációt mostmár tudjuk (tolatás/előre), már csak az ösvény kell kivákasztani, hogy a megfelelő szomszédhoz jussunk
	if(nextOrientation==FORWARD)
 80023e0:	4b43      	ldr	r3, [pc, #268]	; (80024f0 <Control_Task+0x448>)
 80023e2:	781b      	ldrb	r3, [r3, #0]
 80023e4:	2b00      	cmp	r3, #0
 80023e6:	d117      	bne.n	8002418 <Control_Task+0x370>
	{
		if(bestPath==0 || bestPath==2)nextPath=LEFT;
 80023e8:	4b42      	ldr	r3, [pc, #264]	; (80024f4 <Control_Task+0x44c>)
 80023ea:	781b      	ldrb	r3, [r3, #0]
 80023ec:	2b00      	cmp	r3, #0
 80023ee:	d003      	beq.n	80023f8 <Control_Task+0x350>
 80023f0:	4b40      	ldr	r3, [pc, #256]	; (80024f4 <Control_Task+0x44c>)
 80023f2:	781b      	ldrb	r3, [r3, #0]
 80023f4:	2b02      	cmp	r3, #2
 80023f6:	d103      	bne.n	8002400 <Control_Task+0x358>
 80023f8:	4b3f      	ldr	r3, [pc, #252]	; (80024f8 <Control_Task+0x450>)
 80023fa:	2200      	movs	r2, #0
 80023fc:	701a      	strb	r2, [r3, #0]
 80023fe:	e026      	b.n	800244e <Control_Task+0x3a6>
		else if(bestPath==1 || bestPath==3)nextPath=RIGHT;
 8002400:	4b3c      	ldr	r3, [pc, #240]	; (80024f4 <Control_Task+0x44c>)
 8002402:	781b      	ldrb	r3, [r3, #0]
 8002404:	2b01      	cmp	r3, #1
 8002406:	d003      	beq.n	8002410 <Control_Task+0x368>
 8002408:	4b3a      	ldr	r3, [pc, #232]	; (80024f4 <Control_Task+0x44c>)
 800240a:	781b      	ldrb	r3, [r3, #0]
 800240c:	2b03      	cmp	r3, #3
 800240e:	d11e      	bne.n	800244e <Control_Task+0x3a6>
 8002410:	4b39      	ldr	r3, [pc, #228]	; (80024f8 <Control_Task+0x450>)
 8002412:	2202      	movs	r2, #2
 8002414:	701a      	strb	r2, [r3, #0]
 8002416:	e01a      	b.n	800244e <Control_Task+0x3a6>
	}
	else if(nextOrientation==REVERSE) //tolatásnál pont forditva vannak a pathirányok
 8002418:	4b35      	ldr	r3, [pc, #212]	; (80024f0 <Control_Task+0x448>)
 800241a:	781b      	ldrb	r3, [r3, #0]
 800241c:	2b01      	cmp	r3, #1
 800241e:	d116      	bne.n	800244e <Control_Task+0x3a6>
	{
		if(bestPath==0 || bestPath==2)nextPath=RIGHT;
 8002420:	4b34      	ldr	r3, [pc, #208]	; (80024f4 <Control_Task+0x44c>)
 8002422:	781b      	ldrb	r3, [r3, #0]
 8002424:	2b00      	cmp	r3, #0
 8002426:	d003      	beq.n	8002430 <Control_Task+0x388>
 8002428:	4b32      	ldr	r3, [pc, #200]	; (80024f4 <Control_Task+0x44c>)
 800242a:	781b      	ldrb	r3, [r3, #0]
 800242c:	2b02      	cmp	r3, #2
 800242e:	d103      	bne.n	8002438 <Control_Task+0x390>
 8002430:	4b31      	ldr	r3, [pc, #196]	; (80024f8 <Control_Task+0x450>)
 8002432:	2202      	movs	r2, #2
 8002434:	701a      	strb	r2, [r3, #0]
 8002436:	e00a      	b.n	800244e <Control_Task+0x3a6>
		else if(bestPath==1 || bestPath==3)nextPath=LEFT;
 8002438:	4b2e      	ldr	r3, [pc, #184]	; (80024f4 <Control_Task+0x44c>)
 800243a:	781b      	ldrb	r3, [r3, #0]
 800243c:	2b01      	cmp	r3, #1
 800243e:	d003      	beq.n	8002448 <Control_Task+0x3a0>
 8002440:	4b2c      	ldr	r3, [pc, #176]	; (80024f4 <Control_Task+0x44c>)
 8002442:	781b      	ldrb	r3, [r3, #0]
 8002444:	2b03      	cmp	r3, #3
 8002446:	d102      	bne.n	800244e <Control_Task+0x3a6>
 8002448:	4b2b      	ldr	r3, [pc, #172]	; (80024f8 <Control_Task+0x450>)
 800244a:	2200      	movs	r2, #0
 800244c:	701a      	strb	r2, [r3, #0]
	}

	//ha kapu nélküli nodeba tartunk éppen, akkor időzítéssel "detektáljuk" a nodot
	s += (float)(tick-t_prev)*abs((int)v)/10000;
 800244e:	4b2b      	ldr	r3, [pc, #172]	; (80024fc <Control_Task+0x454>)
 8002450:	681b      	ldr	r3, [r3, #0]
 8002452:	68ba      	ldr	r2, [r7, #8]
 8002454:	1ad3      	subs	r3, r2, r3
 8002456:	ee07 3a90 	vmov	s15, r3
 800245a:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800245e:	4b28      	ldr	r3, [pc, #160]	; (8002500 <Control_Task+0x458>)
 8002460:	edd3 7a00 	vldr	s15, [r3]
 8002464:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002468:	ee17 3a90 	vmov	r3, s15
 800246c:	2b00      	cmp	r3, #0
 800246e:	bfb8      	it	lt
 8002470:	425b      	neglt	r3, r3
 8002472:	ee07 3a90 	vmov	s15, r3
 8002476:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800247a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800247e:	eddf 6a21 	vldr	s13, [pc, #132]	; 8002504 <Control_Task+0x45c>
 8002482:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8002486:	4b20      	ldr	r3, [pc, #128]	; (8002508 <Control_Task+0x460>)
 8002488:	edd3 7a00 	vldr	s15, [r3]
 800248c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002490:	4b1d      	ldr	r3, [pc, #116]	; (8002508 <Control_Task+0x460>)
 8002492:	edc3 7a00 	vstr	s15, [r3]
	//sprintf(str,"%f\n\r",s);
	//HAL_UART_Transmit(huart_debugg, str, strlen(str), 10);
	if(N[ID(myPosition)].type>2 && s>sMAX)
 8002496:	4b1d      	ldr	r3, [pc, #116]	; (800250c <Control_Task+0x464>)
 8002498:	781b      	ldrb	r3, [r3, #0]
 800249a:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800249e:	491c      	ldr	r1, [pc, #112]	; (8002510 <Control_Task+0x468>)
 80024a0:	4613      	mov	r3, r2
 80024a2:	00db      	lsls	r3, r3, #3
 80024a4:	1a9b      	subs	r3, r3, r2
 80024a6:	009b      	lsls	r3, r3, #2
 80024a8:	440b      	add	r3, r1
 80024aa:	3308      	adds	r3, #8
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	2b02      	cmp	r3, #2
 80024b0:	d910      	bls.n	80024d4 <Control_Task+0x42c>
 80024b2:	4b18      	ldr	r3, [pc, #96]	; (8002514 <Control_Task+0x46c>)
 80024b4:	681b      	ldr	r3, [r3, #0]
 80024b6:	ee07 3a90 	vmov	s15, r3
 80024ba:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80024be:	4b12      	ldr	r3, [pc, #72]	; (8002508 <Control_Task+0x460>)
 80024c0:	edd3 7a00 	vldr	s15, [r3]
 80024c4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80024c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80024cc:	d502      	bpl.n	80024d4 <Control_Task+0x42c>
	{
		nodeDetected=1;
 80024ce:	4b12      	ldr	r3, [pc, #72]	; (8002518 <Control_Task+0x470>)
 80024d0:	2201      	movs	r2, #1
 80024d2:	701a      	strb	r2, [r3, #0]
	}
	t_prev=tick;//mostantól mérjük az időt
 80024d4:	4a09      	ldr	r2, [pc, #36]	; (80024fc <Control_Task+0x454>)
 80024d6:	68bb      	ldr	r3, [r7, #8]
 80024d8:	6013      	str	r3, [r2, #0]
 80024da:	e004      	b.n	80024e6 <Control_Task+0x43e>
	if(control_task_tick>tick)return;
 80024dc:	bf00      	nop
 80024de:	e002      	b.n	80024e6 <Control_Task+0x43e>
	if(mode!=SKILL)return;
 80024e0:	bf00      	nop
 80024e2:	e000      	b.n	80024e6 <Control_Task+0x43e>
	if(!readytorace)return;
 80024e4:	bf00      	nop

}
 80024e6:	3730      	adds	r7, #48	; 0x30
 80024e8:	46bd      	mov	sp, r7
 80024ea:	bd80      	pop	{r7, pc}
 80024ec:	20000279 	.word	0x20000279
 80024f0:	2000054a 	.word	0x2000054a
 80024f4:	20000548 	.word	0x20000548
 80024f8:	20000549 	.word	0x20000549
 80024fc:	2000055c 	.word	0x2000055c
 8002500:	20000588 	.word	0x20000588
 8002504:	461c4000 	.word	0x461c4000
 8002508:	20000544 	.word	0x20000544
 800250c:	20000000 	.word	0x20000000
 8002510:	20000280 	.word	0x20000280
 8002514:	20000004 	.word	0x20000004
 8002518:	2000027a 	.word	0x2000027a

0800251c <Mode_Selector>:


void Mode_Selector(UART_HandleTypeDef *huart_debugg, UART_HandleTypeDef *huart_stm)
{
 800251c:	b580      	push	{r7, lr}
 800251e:	b08e      	sub	sp, #56	; 0x38
 8002520:	af00      	add	r7, sp, #0
 8002522:	6078      	str	r0, [r7, #4]
 8002524:	6039      	str	r1, [r7, #0]
	//Milyen módban kell működni?
	uint8_t buffer[40];
	uint32_t tmp=0;
 8002526:	2300      	movs	r3, #0
 8002528:	637b      	str	r3, [r7, #52]	; 0x34

	//HAL_FLASH_Unlock();
	tmp= *(__IO uint32_t *) FLASH_ADDRESS_SECTOR7; //FLASH-ből kiolvassuk, hogy milyen módban vagyunk
 800252a:	4b49      	ldr	r3, [pc, #292]	; (8002650 <Mode_Selector+0x134>)
 800252c:	681b      	ldr	r3, [r3, #0]
 800252e:	637b      	str	r3, [r7, #52]	; 0x34
	//HAL_FLASH_Lock();
	mode = (uint8_t)tmp;
 8002530:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002532:	b2da      	uxtb	r2, r3
 8002534:	4b47      	ldr	r3, [pc, #284]	; (8002654 <Mode_Selector+0x138>)
 8002536:	701a      	strb	r2, [r3, #0]

	if(mode==SKILL)
 8002538:	4b46      	ldr	r3, [pc, #280]	; (8002654 <Mode_Selector+0x138>)
 800253a:	781b      	ldrb	r3, [r3, #0]
 800253c:	2b52      	cmp	r3, #82	; 0x52
 800253e:	d135      	bne.n	80025ac <Mode_Selector+0x90>
	{
		buffer[0] = CMD_MODE_SKILL; //szólunk a g0-nak, hogy ügyességi módban vagyunk
 8002540:	2352      	movs	r3, #82	; 0x52
 8002542:	733b      	strb	r3, [r7, #12]
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 8002544:	f107 010c 	add.w	r1, r7, #12
 8002548:	230a      	movs	r3, #10
 800254a:	2201      	movs	r2, #1
 800254c:	6838      	ldr	r0, [r7, #0]
 800254e:	f007 fc06 	bl	8009d5e <HAL_UART_Transmit>
		HAL_Delay(10);
 8002552:	200a      	movs	r0, #10
 8002554:	f002 ffa6 	bl	80054a4 <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);//3 szór is szólunk neki, hogy tuti megkapja a módváltásról az üzenetet
 8002558:	f107 010c 	add.w	r1, r7, #12
 800255c:	230a      	movs	r3, #10
 800255e:	2201      	movs	r2, #1
 8002560:	6838      	ldr	r0, [r7, #0]
 8002562:	f007 fbfc 	bl	8009d5e <HAL_UART_Transmit>
		HAL_Delay(10);
 8002566:	200a      	movs	r0, #10
 8002568:	f002 ff9c 	bl	80054a4 <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 800256c:	f107 010c 	add.w	r1, r7, #12
 8002570:	230a      	movs	r3, #10
 8002572:	2201      	movs	r2, #1
 8002574:	6838      	ldr	r0, [r7, #0]
 8002576:	f007 fbf2 	bl	8009d5e <HAL_UART_Transmit>

		sprintf((char*)buffer,"Skill mode!\n\r"); //Debugg uart-ra is kiküldjük, hogy milyen módban vagyunk
 800257a:	f107 030c 	add.w	r3, r7, #12
 800257e:	4936      	ldr	r1, [pc, #216]	; (8002658 <Mode_Selector+0x13c>)
 8002580:	4618      	mov	r0, r3
 8002582:	f009 f955 	bl	800b830 <siprintf>
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
 8002586:	f107 030c 	add.w	r3, r7, #12
 800258a:	4618      	mov	r0, r3
 800258c:	f7fd fe40 	bl	8000210 <strlen>
 8002590:	4603      	mov	r3, r0
 8002592:	b29a      	uxth	r2, r3
 8002594:	f107 010c 	add.w	r1, r7, #12
 8002598:	2364      	movs	r3, #100	; 0x64
 800259a:	6878      	ldr	r0, [r7, #4]
 800259c:	f007 fbdf 	bl	8009d5e <HAL_UART_Transmit>
		LED_NUCLEO(1); //A NUCLEO zöld LED-je világít, ha ügyeségi üzemmódban vagyunk
 80025a0:	2201      	movs	r2, #1
 80025a2:	2120      	movs	r1, #32
 80025a4:	482d      	ldr	r0, [pc, #180]	; (800265c <Mode_Selector+0x140>)
 80025a6:	f004 fe17 	bl	80071d8 <HAL_GPIO_WritePin>
	else
	{
		sprintf((char*)buffer,"Flash error! Press blue button!\n\r");
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
	}
}
 80025aa:	e04c      	b.n	8002646 <Mode_Selector+0x12a>
	else if(mode==FAST)
 80025ac:	4b29      	ldr	r3, [pc, #164]	; (8002654 <Mode_Selector+0x138>)
 80025ae:	781b      	ldrb	r3, [r3, #0]
 80025b0:	2b3f      	cmp	r3, #63	; 0x3f
 80025b2:	d135      	bne.n	8002620 <Mode_Selector+0x104>
		buffer[0] = CMD_MODE_FAST;
 80025b4:	233f      	movs	r3, #63	; 0x3f
 80025b6:	733b      	strb	r3, [r7, #12]
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 80025b8:	f107 010c 	add.w	r1, r7, #12
 80025bc:	230a      	movs	r3, #10
 80025be:	2201      	movs	r2, #1
 80025c0:	6838      	ldr	r0, [r7, #0]
 80025c2:	f007 fbcc 	bl	8009d5e <HAL_UART_Transmit>
		HAL_Delay(10);
 80025c6:	200a      	movs	r0, #10
 80025c8:	f002 ff6c 	bl	80054a4 <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 80025cc:	f107 010c 	add.w	r1, r7, #12
 80025d0:	230a      	movs	r3, #10
 80025d2:	2201      	movs	r2, #1
 80025d4:	6838      	ldr	r0, [r7, #0]
 80025d6:	f007 fbc2 	bl	8009d5e <HAL_UART_Transmit>
		HAL_Delay(10);
 80025da:	200a      	movs	r0, #10
 80025dc:	f002 ff62 	bl	80054a4 <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 80025e0:	f107 010c 	add.w	r1, r7, #12
 80025e4:	230a      	movs	r3, #10
 80025e6:	2201      	movs	r2, #1
 80025e8:	6838      	ldr	r0, [r7, #0]
 80025ea:	f007 fbb8 	bl	8009d5e <HAL_UART_Transmit>
		sprintf((char*)buffer,"Fast mode!\n\r");
 80025ee:	f107 030c 	add.w	r3, r7, #12
 80025f2:	491b      	ldr	r1, [pc, #108]	; (8002660 <Mode_Selector+0x144>)
 80025f4:	4618      	mov	r0, r3
 80025f6:	f009 f91b 	bl	800b830 <siprintf>
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
 80025fa:	f107 030c 	add.w	r3, r7, #12
 80025fe:	4618      	mov	r0, r3
 8002600:	f7fd fe06 	bl	8000210 <strlen>
 8002604:	4603      	mov	r3, r0
 8002606:	b29a      	uxth	r2, r3
 8002608:	f107 010c 	add.w	r1, r7, #12
 800260c:	2364      	movs	r3, #100	; 0x64
 800260e:	6878      	ldr	r0, [r7, #4]
 8002610:	f007 fba5 	bl	8009d5e <HAL_UART_Transmit>
		LED_NUCLEO(0);
 8002614:	2200      	movs	r2, #0
 8002616:	2120      	movs	r1, #32
 8002618:	4810      	ldr	r0, [pc, #64]	; (800265c <Mode_Selector+0x140>)
 800261a:	f004 fddd 	bl	80071d8 <HAL_GPIO_WritePin>
}
 800261e:	e012      	b.n	8002646 <Mode_Selector+0x12a>
		sprintf((char*)buffer,"Flash error! Press blue button!\n\r");
 8002620:	f107 030c 	add.w	r3, r7, #12
 8002624:	490f      	ldr	r1, [pc, #60]	; (8002664 <Mode_Selector+0x148>)
 8002626:	4618      	mov	r0, r3
 8002628:	f009 f902 	bl	800b830 <siprintf>
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
 800262c:	f107 030c 	add.w	r3, r7, #12
 8002630:	4618      	mov	r0, r3
 8002632:	f7fd fded 	bl	8000210 <strlen>
 8002636:	4603      	mov	r3, r0
 8002638:	b29a      	uxth	r2, r3
 800263a:	f107 010c 	add.w	r1, r7, #12
 800263e:	2364      	movs	r3, #100	; 0x64
 8002640:	6878      	ldr	r0, [r7, #4]
 8002642:	f007 fb8c 	bl	8009d5e <HAL_UART_Transmit>
}
 8002646:	bf00      	nop
 8002648:	3738      	adds	r7, #56	; 0x38
 800264a:	46bd      	mov	sp, r7
 800264c:	bd80      	pop	{r7, pc}
 800264e:	bf00      	nop
 8002650:	08060000 	.word	0x08060000
 8002654:	2000026e 	.word	0x2000026e
 8002658:	0800f208 	.word	0x0800f208
 800265c:	40020000 	.word	0x40020000
 8002660:	0800f218 	.word	0x0800f218
 8002664:	0800f228 	.word	0x0800f228

08002668 <Skill_Mode>:

//bemenet detect, kalozrobpoz; kimenet direction
float Skill_Mode(UART_HandleTypeDef *huart_debugg, float kP, float kD, uint32_t t)
{
 8002668:	b580      	push	{r7, lr}
 800266a:	b088      	sub	sp, #32
 800266c:	af00      	add	r7, sp, #0
 800266e:	60f8      	str	r0, [r7, #12]
 8002670:	ed87 0a02 	vstr	s0, [r7, #8]
 8002674:	edc7 0a01 	vstr	s1, [r7, #4]
 8002678:	6039      	str	r1, [r7, #0]
	static uint32_t t_prev=0;
	int byte=0;
 800267a:	2300      	movs	r3, #0
 800267c:	61fb      	str	r3, [r7, #28]
	static int byte_prev=0;
	uint8_t delta_byte;
	float p=0;
 800267e:	f04f 0300 	mov.w	r3, #0
 8002682:	617b      	str	r3, [r7, #20]
/*	uint8_t str[40];
	sprintf(str,"%d,  %d,  %d,  %d,  %d\n\r",rxBuf[1],rxBuf[2],rxBuf[3],rxBuf[4],rxBuf[5]);
	HAL_UART_Transmit(huart_debugg, str, strlen(str), 10);
*/

	if(LINE_CNT>3 || ignore)//ha éppen node-on vagyunk, akkor az átlagot követjük
 8002684:	4b8c      	ldr	r3, [pc, #560]	; (80028b8 <Skill_Mode+0x250>)
 8002686:	785b      	ldrb	r3, [r3, #1]
 8002688:	2b03      	cmp	r3, #3
 800268a:	d803      	bhi.n	8002694 <Skill_Mode+0x2c>
 800268c:	4b8b      	ldr	r3, [pc, #556]	; (80028bc <Skill_Mode+0x254>)
 800268e:	781b      	ldrb	r3, [r3, #0]
 8002690:	2b00      	cmp	r3, #0
 8002692:	d022      	beq.n	80026da <Skill_Mode+0x72>
	{
		byte=0;
 8002694:	2300      	movs	r3, #0
 8002696:	61fb      	str	r3, [r7, #28]
		for(i=0;i<LINE_CNT;i++)
 8002698:	2300      	movs	r3, #0
 800269a:	61bb      	str	r3, [r7, #24]
 800269c:	e00a      	b.n	80026b4 <Skill_Mode+0x4c>
		{
			byte += rxBuf[i+2];
 800269e:	69bb      	ldr	r3, [r7, #24]
 80026a0:	3302      	adds	r3, #2
 80026a2:	4a85      	ldr	r2, [pc, #532]	; (80028b8 <Skill_Mode+0x250>)
 80026a4:	5cd3      	ldrb	r3, [r2, r3]
 80026a6:	461a      	mov	r2, r3
 80026a8:	69fb      	ldr	r3, [r7, #28]
 80026aa:	4413      	add	r3, r2
 80026ac:	61fb      	str	r3, [r7, #28]
		for(i=0;i<LINE_CNT;i++)
 80026ae:	69bb      	ldr	r3, [r7, #24]
 80026b0:	3301      	adds	r3, #1
 80026b2:	61bb      	str	r3, [r7, #24]
 80026b4:	4b80      	ldr	r3, [pc, #512]	; (80028b8 <Skill_Mode+0x250>)
 80026b6:	785b      	ldrb	r3, [r3, #1]
 80026b8:	461a      	mov	r2, r3
 80026ba:	69bb      	ldr	r3, [r7, #24]
 80026bc:	4293      	cmp	r3, r2
 80026be:	dbee      	blt.n	800269e <Skill_Mode+0x36>
		}

		if(LINE_CNT) byte /= LINE_CNT;
 80026c0:	4b7d      	ldr	r3, [pc, #500]	; (80028b8 <Skill_Mode+0x250>)
 80026c2:	785b      	ldrb	r3, [r3, #1]
 80026c4:	2b00      	cmp	r3, #0
 80026c6:	f000 810c 	beq.w	80028e2 <Skill_Mode+0x27a>
 80026ca:	4b7b      	ldr	r3, [pc, #492]	; (80028b8 <Skill_Mode+0x250>)
 80026cc:	785b      	ldrb	r3, [r3, #1]
 80026ce:	461a      	mov	r2, r3
 80026d0:	69fb      	ldr	r3, [r7, #28]
 80026d2:	fb93 f3f2 	sdiv	r3, r3, r2
 80026d6:	61fb      	str	r3, [r7, #28]
 80026d8:	e103      	b.n	80028e2 <Skill_Mode+0x27a>
	}
	else if(path==LEFT)
 80026da:	4b79      	ldr	r3, [pc, #484]	; (80028c0 <Skill_Mode+0x258>)
 80026dc:	781b      	ldrb	r3, [r3, #0]
 80026de:	2b00      	cmp	r3, #0
 80026e0:	d15a      	bne.n	8002798 <Skill_Mode+0x130>
	{
		byte = LINE1; //az első vonalt kell követni
 80026e2:	4b75      	ldr	r3, [pc, #468]	; (80028b8 <Skill_Mode+0x250>)
 80026e4:	789b      	ldrb	r3, [r3, #2]
 80026e6:	61fb      	str	r3, [r7, #28]
		delta_byte=abs((int)byte-byte_prev);
 80026e8:	4b76      	ldr	r3, [pc, #472]	; (80028c4 <Skill_Mode+0x25c>)
 80026ea:	681b      	ldr	r3, [r3, #0]
 80026ec:	69fa      	ldr	r2, [r7, #28]
 80026ee:	1ad3      	subs	r3, r2, r3
 80026f0:	2b00      	cmp	r3, #0
 80026f2:	bfb8      	it	lt
 80026f4:	425b      	neglt	r3, r3
 80026f6:	74fb      	strb	r3, [r7, #19]
		/**/
		if((delta_byte>ESTUARY_TH && estuary!=ESTUARY_MODE_INIT)|| estuary==ESTUARY_MODE_ON) //torkolatkompenzálás
 80026f8:	7cfb      	ldrb	r3, [r7, #19]
 80026fa:	2b4b      	cmp	r3, #75	; 0x4b
 80026fc:	d903      	bls.n	8002706 <Skill_Mode+0x9e>
 80026fe:	4b72      	ldr	r3, [pc, #456]	; (80028c8 <Skill_Mode+0x260>)
 8002700:	781b      	ldrb	r3, [r3, #0]
 8002702:	2b00      	cmp	r3, #0
 8002704:	d103      	bne.n	800270e <Skill_Mode+0xa6>
 8002706:	4b70      	ldr	r3, [pc, #448]	; (80028c8 <Skill_Mode+0x260>)
 8002708:	781b      	ldrb	r3, [r3, #0]
 800270a:	2b02      	cmp	r3, #2
 800270c:	d132      	bne.n	8002774 <Skill_Mode+0x10c>
		{
			if(LINE_CNT>1)//torkolatkompenzálás csak akkor van ha legalább 2 vonalat látunk
 800270e:	4b6a      	ldr	r3, [pc, #424]	; (80028b8 <Skill_Mode+0x250>)
 8002710:	785b      	ldrb	r3, [r3, #1]
 8002712:	2b01      	cmp	r3, #1
 8002714:	d925      	bls.n	8002762 <Skill_Mode+0xfa>
			{
				if(estuary==ESTUARY_MODE_OFF)t_prev=t;//ha most kapcsoltuk be a torkolatkompenzálást, akkor mostantól mérjük az eltelt időt
 8002716:	4b6c      	ldr	r3, [pc, #432]	; (80028c8 <Skill_Mode+0x260>)
 8002718:	781b      	ldrb	r3, [r3, #0]
 800271a:	2b01      	cmp	r3, #1
 800271c:	d102      	bne.n	8002724 <Skill_Mode+0xbc>
 800271e:	4a6b      	ldr	r2, [pc, #428]	; (80028cc <Skill_Mode+0x264>)
 8002720:	683b      	ldr	r3, [r7, #0]
 8002722:	6013      	str	r3, [r2, #0]
				if((t-t_prev)>ESTURAY_TIMEOUT)//400ms után mindenképpen kilépünk a kompenzálásból
 8002724:	4b69      	ldr	r3, [pc, #420]	; (80028cc <Skill_Mode+0x264>)
 8002726:	681b      	ldr	r3, [r3, #0]
 8002728:	683a      	ldr	r2, [r7, #0]
 800272a:	1ad3      	subs	r3, r2, r3
 800272c:	f5b3 7f48 	cmp.w	r3, #800	; 0x320
 8002730:	d908      	bls.n	8002744 <Skill_Mode+0xdc>
				{
					estuary=ESTUARY_MODE_OFF; //ha letelt a timeout kilépünk a kompenzálásból
 8002732:	4b65      	ldr	r3, [pc, #404]	; (80028c8 <Skill_Mode+0x260>)
 8002734:	2201      	movs	r2, #1
 8002736:	701a      	strb	r2, [r3, #0]
					LED_G(0);
 8002738:	2201      	movs	r2, #1
 800273a:	2102      	movs	r1, #2
 800273c:	4864      	ldr	r0, [pc, #400]	; (80028d0 <Skill_Mode+0x268>)
 800273e:	f004 fd4b 	bl	80071d8 <HAL_GPIO_WritePin>
			if(LINE_CNT>1)//torkolatkompenzálás csak akkor van ha legalább 2 vonalat látunk
 8002742:	e0ce      	b.n	80028e2 <Skill_Mode+0x27a>
				}
				else //ha még nem telt le az timout idő
				{
					byte = rxBuf[1+LINE_CNT]; //ilyenkor az utolsó vonalat nézzük az első helyett
 8002744:	4b5c      	ldr	r3, [pc, #368]	; (80028b8 <Skill_Mode+0x250>)
 8002746:	785b      	ldrb	r3, [r3, #1]
 8002748:	3301      	adds	r3, #1
 800274a:	4a5b      	ldr	r2, [pc, #364]	; (80028b8 <Skill_Mode+0x250>)
 800274c:	5cd3      	ldrb	r3, [r2, r3]
 800274e:	61fb      	str	r3, [r7, #28]
					estuary=ESTUARY_MODE_ON; //öntartás
 8002750:	4b5d      	ldr	r3, [pc, #372]	; (80028c8 <Skill_Mode+0x260>)
 8002752:	2202      	movs	r2, #2
 8002754:	701a      	strb	r2, [r3, #0]
					LED_G(1);
 8002756:	2200      	movs	r2, #0
 8002758:	2102      	movs	r1, #2
 800275a:	485d      	ldr	r0, [pc, #372]	; (80028d0 <Skill_Mode+0x268>)
 800275c:	f004 fd3c 	bl	80071d8 <HAL_GPIO_WritePin>
			if(LINE_CNT>1)//torkolatkompenzálás csak akkor van ha legalább 2 vonalat látunk
 8002760:	e0bf      	b.n	80028e2 <Skill_Mode+0x27a>
				}

			}
			else
			{
				estuary=ESTUARY_MODE_OFF; //ha nincs elég vonal kikapcsoljuk az öntartást (legalább2 vonal esetén beszélhetünk torkolatról)
 8002762:	4b59      	ldr	r3, [pc, #356]	; (80028c8 <Skill_Mode+0x260>)
 8002764:	2201      	movs	r2, #1
 8002766:	701a      	strb	r2, [r3, #0]
				LED_G(0);
 8002768:	2201      	movs	r2, #1
 800276a:	2102      	movs	r1, #2
 800276c:	4858      	ldr	r0, [pc, #352]	; (80028d0 <Skill_Mode+0x268>)
 800276e:	f004 fd33 	bl	80071d8 <HAL_GPIO_WritePin>
			if(LINE_CNT>1)//torkolatkompenzálás csak akkor van ha legalább 2 vonalat látunk
 8002772:	e0b6      	b.n	80028e2 <Skill_Mode+0x27a>
			}
		}
		else if(delta_byte<ESTUARY_EXIT && estuary==ESTUARY_MODE_ON) //ha már eléggé összeszűkült a torkolat, akkor nem kell kompenzálni
 8002774:	7cfb      	ldrb	r3, [r7, #19]
 8002776:	2b2c      	cmp	r3, #44	; 0x2c
 8002778:	f200 80b3 	bhi.w	80028e2 <Skill_Mode+0x27a>
 800277c:	4b52      	ldr	r3, [pc, #328]	; (80028c8 <Skill_Mode+0x260>)
 800277e:	781b      	ldrb	r3, [r3, #0]
 8002780:	2b02      	cmp	r3, #2
 8002782:	f040 80ae 	bne.w	80028e2 <Skill_Mode+0x27a>
		{
			estuary=ESTUARY_MODE_OFF;
 8002786:	4b50      	ldr	r3, [pc, #320]	; (80028c8 <Skill_Mode+0x260>)
 8002788:	2201      	movs	r2, #1
 800278a:	701a      	strb	r2, [r3, #0]
			LED_G(0);
 800278c:	2201      	movs	r2, #1
 800278e:	2102      	movs	r1, #2
 8002790:	484f      	ldr	r0, [pc, #316]	; (80028d0 <Skill_Mode+0x268>)
 8002792:	f004 fd21 	bl	80071d8 <HAL_GPIO_WritePin>
 8002796:	e0a4      	b.n	80028e2 <Skill_Mode+0x27a>
		}

	}
	else if(path==RIGHT)
 8002798:	4b49      	ldr	r3, [pc, #292]	; (80028c0 <Skill_Mode+0x258>)
 800279a:	781b      	ldrb	r3, [r3, #0]
 800279c:	2b02      	cmp	r3, #2
 800279e:	d158      	bne.n	8002852 <Skill_Mode+0x1ea>
	{
		byte = rxBuf[1+LINE_CNT];//az utolsó vonalat kell követni
 80027a0:	4b45      	ldr	r3, [pc, #276]	; (80028b8 <Skill_Mode+0x250>)
 80027a2:	785b      	ldrb	r3, [r3, #1]
 80027a4:	3301      	adds	r3, #1
 80027a6:	4a44      	ldr	r2, [pc, #272]	; (80028b8 <Skill_Mode+0x250>)
 80027a8:	5cd3      	ldrb	r3, [r2, r3]
 80027aa:	61fb      	str	r3, [r7, #28]
		delta_byte=abs((int)byte-byte_prev);
 80027ac:	4b45      	ldr	r3, [pc, #276]	; (80028c4 <Skill_Mode+0x25c>)
 80027ae:	681b      	ldr	r3, [r3, #0]
 80027b0:	69fa      	ldr	r2, [r7, #28]
 80027b2:	1ad3      	subs	r3, r2, r3
 80027b4:	2b00      	cmp	r3, #0
 80027b6:	bfb8      	it	lt
 80027b8:	425b      	neglt	r3, r3
 80027ba:	74fb      	strb	r3, [r7, #19]
		/**/
		if((delta_byte>ESTUARY_TH && estuary!=ESTUARY_MODE_INIT)|| estuary==ESTUARY_MODE_ON) //torkolatkompenzálás
 80027bc:	7cfb      	ldrb	r3, [r7, #19]
 80027be:	2b4b      	cmp	r3, #75	; 0x4b
 80027c0:	d903      	bls.n	80027ca <Skill_Mode+0x162>
 80027c2:	4b41      	ldr	r3, [pc, #260]	; (80028c8 <Skill_Mode+0x260>)
 80027c4:	781b      	ldrb	r3, [r3, #0]
 80027c6:	2b00      	cmp	r3, #0
 80027c8:	d103      	bne.n	80027d2 <Skill_Mode+0x16a>
 80027ca:	4b3f      	ldr	r3, [pc, #252]	; (80028c8 <Skill_Mode+0x260>)
 80027cc:	781b      	ldrb	r3, [r3, #0]
 80027ce:	2b02      	cmp	r3, #2
 80027d0:	d12f      	bne.n	8002832 <Skill_Mode+0x1ca>
		{
			if(LINE_CNT>1)//torkolatkompenzálás csak akkor van ha legalább 2 vonalat látunk
 80027d2:	4b39      	ldr	r3, [pc, #228]	; (80028b8 <Skill_Mode+0x250>)
 80027d4:	785b      	ldrb	r3, [r3, #1]
 80027d6:	2b01      	cmp	r3, #1
 80027d8:	d922      	bls.n	8002820 <Skill_Mode+0x1b8>
			{
				if(estuary==ESTUARY_MODE_OFF)t_prev=t;//ha most kapcsoltuk be a torkolatkompenzálást, akkor mostantól mérjük az eltelt időt
 80027da:	4b3b      	ldr	r3, [pc, #236]	; (80028c8 <Skill_Mode+0x260>)
 80027dc:	781b      	ldrb	r3, [r3, #0]
 80027de:	2b01      	cmp	r3, #1
 80027e0:	d102      	bne.n	80027e8 <Skill_Mode+0x180>
 80027e2:	4a3a      	ldr	r2, [pc, #232]	; (80028cc <Skill_Mode+0x264>)
 80027e4:	683b      	ldr	r3, [r7, #0]
 80027e6:	6013      	str	r3, [r2, #0]
				if((t-t_prev)>ESTURAY_TIMEOUT)//400ms után mindenképpen kilépünk a kompenzálásból
 80027e8:	4b38      	ldr	r3, [pc, #224]	; (80028cc <Skill_Mode+0x264>)
 80027ea:	681b      	ldr	r3, [r3, #0]
 80027ec:	683a      	ldr	r2, [r7, #0]
 80027ee:	1ad3      	subs	r3, r2, r3
 80027f0:	f5b3 7f48 	cmp.w	r3, #800	; 0x320
 80027f4:	d908      	bls.n	8002808 <Skill_Mode+0x1a0>
				{
					estuary=ESTUARY_MODE_OFF; //ha letelt a timeout kilépünk a kompenzálásból
 80027f6:	4b34      	ldr	r3, [pc, #208]	; (80028c8 <Skill_Mode+0x260>)
 80027f8:	2201      	movs	r2, #1
 80027fa:	701a      	strb	r2, [r3, #0]
					LED_G(0);
 80027fc:	2201      	movs	r2, #1
 80027fe:	2102      	movs	r1, #2
 8002800:	4833      	ldr	r0, [pc, #204]	; (80028d0 <Skill_Mode+0x268>)
 8002802:	f004 fce9 	bl	80071d8 <HAL_GPIO_WritePin>
			if(LINE_CNT>1)//torkolatkompenzálás csak akkor van ha legalább 2 vonalat látunk
 8002806:	e06c      	b.n	80028e2 <Skill_Mode+0x27a>
				}
				else //ha még nem telt le az idő
				{
					byte = rxBuf[2]; //ilyenkor az első vonalat nézzük az utolsó helyett
 8002808:	4b2b      	ldr	r3, [pc, #172]	; (80028b8 <Skill_Mode+0x250>)
 800280a:	789b      	ldrb	r3, [r3, #2]
 800280c:	61fb      	str	r3, [r7, #28]
					estuary=ESTUARY_MODE_ON; //öntartás
 800280e:	4b2e      	ldr	r3, [pc, #184]	; (80028c8 <Skill_Mode+0x260>)
 8002810:	2202      	movs	r2, #2
 8002812:	701a      	strb	r2, [r3, #0]
					LED_G(1);
 8002814:	2200      	movs	r2, #0
 8002816:	2102      	movs	r1, #2
 8002818:	482d      	ldr	r0, [pc, #180]	; (80028d0 <Skill_Mode+0x268>)
 800281a:	f004 fcdd 	bl	80071d8 <HAL_GPIO_WritePin>
			if(LINE_CNT>1)//torkolatkompenzálás csak akkor van ha legalább 2 vonalat látunk
 800281e:	e060      	b.n	80028e2 <Skill_Mode+0x27a>
				}

			}
			else
			{
				estuary=ESTUARY_MODE_OFF; //ha nincs elég vonal kikapcsoljuk az öntartást
 8002820:	4b29      	ldr	r3, [pc, #164]	; (80028c8 <Skill_Mode+0x260>)
 8002822:	2201      	movs	r2, #1
 8002824:	701a      	strb	r2, [r3, #0]
				LED_G(0);
 8002826:	2201      	movs	r2, #1
 8002828:	2102      	movs	r1, #2
 800282a:	4829      	ldr	r0, [pc, #164]	; (80028d0 <Skill_Mode+0x268>)
 800282c:	f004 fcd4 	bl	80071d8 <HAL_GPIO_WritePin>
			if(LINE_CNT>1)//torkolatkompenzálás csak akkor van ha legalább 2 vonalat látunk
 8002830:	e057      	b.n	80028e2 <Skill_Mode+0x27a>
			}
		}
		else if(delta_byte<ESTUARY_EXIT && estuary==ESTUARY_MODE_ON) //ha már eléggé összeszűkült a torkolat, akkor nem kell kompenzálni
 8002832:	7cfb      	ldrb	r3, [r7, #19]
 8002834:	2b2c      	cmp	r3, #44	; 0x2c
 8002836:	d854      	bhi.n	80028e2 <Skill_Mode+0x27a>
 8002838:	4b23      	ldr	r3, [pc, #140]	; (80028c8 <Skill_Mode+0x260>)
 800283a:	781b      	ldrb	r3, [r3, #0]
 800283c:	2b02      	cmp	r3, #2
 800283e:	d150      	bne.n	80028e2 <Skill_Mode+0x27a>
		{
			estuary=ESTUARY_MODE_OFF;
 8002840:	4b21      	ldr	r3, [pc, #132]	; (80028c8 <Skill_Mode+0x260>)
 8002842:	2201      	movs	r2, #1
 8002844:	701a      	strb	r2, [r3, #0]
			LED_G(0);
 8002846:	2201      	movs	r2, #1
 8002848:	2102      	movs	r1, #2
 800284a:	4821      	ldr	r0, [pc, #132]	; (80028d0 <Skill_Mode+0x268>)
 800284c:	f004 fcc4 	bl	80071d8 <HAL_GPIO_WritePin>
 8002850:	e047      	b.n	80028e2 <Skill_Mode+0x27a>
		}

	}

	else if(path==MIDDLE)
 8002852:	4b1b      	ldr	r3, [pc, #108]	; (80028c0 <Skill_Mode+0x258>)
 8002854:	781b      	ldrb	r3, [r3, #0]
 8002856:	2b01      	cmp	r3, #1
 8002858:	d143      	bne.n	80028e2 <Skill_Mode+0x27a>
	{
		if(LINE_CNT==1)byte = LINE1;//ha csak 1 vonal van, akkor azt követjük
 800285a:	4b17      	ldr	r3, [pc, #92]	; (80028b8 <Skill_Mode+0x250>)
 800285c:	785b      	ldrb	r3, [r3, #1]
 800285e:	2b01      	cmp	r3, #1
 8002860:	d103      	bne.n	800286a <Skill_Mode+0x202>
 8002862:	4b15      	ldr	r3, [pc, #84]	; (80028b8 <Skill_Mode+0x250>)
 8002864:	789b      	ldrb	r3, [r3, #2]
 8002866:	61fb      	str	r3, [r7, #28]
 8002868:	e03b      	b.n	80028e2 <Skill_Mode+0x27a>
		else if(LINE_CNT==3)//ha 3 vonal van
 800286a:	4b13      	ldr	r3, [pc, #76]	; (80028b8 <Skill_Mode+0x250>)
 800286c:	785b      	ldrb	r3, [r3, #1]
 800286e:	2b03      	cmp	r3, #3
 8002870:	d113      	bne.n	800289a <Skill_Mode+0x232>
		{
			byte = rxBuf[3];//a középsőt követjük
 8002872:	4b11      	ldr	r3, [pc, #68]	; (80028b8 <Skill_Mode+0x250>)
 8002874:	78db      	ldrb	r3, [r3, #3]
 8002876:	61fb      	str	r3, [r7, #28]
			//folyamatosan nézzük, hogy az 1. és 3.vonal milyen messze van a vonalszenor középontjától
			tmp1=abs((int)LINE1-123);
 8002878:	4b0f      	ldr	r3, [pc, #60]	; (80028b8 <Skill_Mode+0x250>)
 800287a:	789b      	ldrb	r3, [r3, #2]
 800287c:	3b7b      	subs	r3, #123	; 0x7b
 800287e:	2b00      	cmp	r3, #0
 8002880:	bfb8      	it	lt
 8002882:	425b      	neglt	r3, r3
 8002884:	4a13      	ldr	r2, [pc, #76]	; (80028d4 <Skill_Mode+0x26c>)
 8002886:	6013      	str	r3, [r2, #0]
			tmp2=abs((int)LINE3-123);
 8002888:	4b0b      	ldr	r3, [pc, #44]	; (80028b8 <Skill_Mode+0x250>)
 800288a:	791b      	ldrb	r3, [r3, #4]
 800288c:	3b7b      	subs	r3, #123	; 0x7b
 800288e:	2b00      	cmp	r3, #0
 8002890:	bfb8      	it	lt
 8002892:	425b      	neglt	r3, r3
 8002894:	4a10      	ldr	r2, [pc, #64]	; (80028d8 <Skill_Mode+0x270>)
 8002896:	6013      	str	r3, [r2, #0]
 8002898:	e023      	b.n	80028e2 <Skill_Mode+0x27a>
		}
		else if(LINE_CNT==2)//ha 2 vonal van, az azt jelenti, hogy az elágazás már annyira szétgáazott, hogy csak 2-t látunk a 3 vonalból
 800289a:	4b07      	ldr	r3, [pc, #28]	; (80028b8 <Skill_Mode+0x250>)
 800289c:	785b      	ldrb	r3, [r3, #1]
 800289e:	2b02      	cmp	r3, #2
 80028a0:	d11f      	bne.n	80028e2 <Skill_Mode+0x27a>
		{
			if(tmp1<tmp2) byte = LINE1; //ha a jobboldali vonalat veszítettük el
 80028a2:	4b0c      	ldr	r3, [pc, #48]	; (80028d4 <Skill_Mode+0x26c>)
 80028a4:	681a      	ldr	r2, [r3, #0]
 80028a6:	4b0c      	ldr	r3, [pc, #48]	; (80028d8 <Skill_Mode+0x270>)
 80028a8:	681b      	ldr	r3, [r3, #0]
 80028aa:	429a      	cmp	r2, r3
 80028ac:	da16      	bge.n	80028dc <Skill_Mode+0x274>
 80028ae:	4b02      	ldr	r3, [pc, #8]	; (80028b8 <Skill_Mode+0x250>)
 80028b0:	789b      	ldrb	r3, [r3, #2]
 80028b2:	61fb      	str	r3, [r7, #28]
 80028b4:	e015      	b.n	80028e2 <Skill_Mode+0x27a>
 80028b6:	bf00      	nop
 80028b8:	200005a0 	.word	0x200005a0
 80028bc:	2000027c 	.word	0x2000027c
 80028c0:	2000027b 	.word	0x2000027b
 80028c4:	20000560 	.word	0x20000560
 80028c8:	20000564 	.word	0x20000564
 80028cc:	20000568 	.word	0x20000568
 80028d0:	40020400 	.word	0x40020400
 80028d4:	2000056c 	.word	0x2000056c
 80028d8:	20000570 	.word	0x20000570
			else byte = LINE2; //ha a baloldali vonalat veszítettük el
 80028dc:	4b2c      	ldr	r3, [pc, #176]	; (8002990 <Skill_Mode+0x328>)
 80028de:	78db      	ldrb	r3, [r3, #3]
 80028e0:	61fb      	str	r3, [r7, #28]
		}
	}
	if(estuary==ESTUARY_MODE_INIT)estuary=ESTUARY_MODE_OFF;
 80028e2:	4b2c      	ldr	r3, [pc, #176]	; (8002994 <Skill_Mode+0x32c>)
 80028e4:	781b      	ldrb	r3, [r3, #0]
 80028e6:	2b00      	cmp	r3, #0
 80028e8:	d102      	bne.n	80028f0 <Skill_Mode+0x288>
 80028ea:	4b2a      	ldr	r3, [pc, #168]	; (8002994 <Skill_Mode+0x32c>)
 80028ec:	2201      	movs	r2, #1
 80028ee:	701a      	strb	r2, [r3, #0]
	//p = (float)byte * 204/248.0-102;
	p = (float)byte * 204/255.0-102;
 80028f0:	69fb      	ldr	r3, [r7, #28]
 80028f2:	ee07 3a90 	vmov	s15, r3
 80028f6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80028fa:	ed9f 7a27 	vldr	s14, [pc, #156]	; 8002998 <Skill_Mode+0x330>
 80028fe:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002902:	ee17 0a90 	vmov	r0, s15
 8002906:	f7fd fe3f 	bl	8000588 <__aeabi_f2d>
 800290a:	a31f      	add	r3, pc, #124	; (adr r3, 8002988 <Skill_Mode+0x320>)
 800290c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002910:	f7fd ffbc 	bl	800088c <__aeabi_ddiv>
 8002914:	4602      	mov	r2, r0
 8002916:	460b      	mov	r3, r1
 8002918:	4610      	mov	r0, r2
 800291a:	4619      	mov	r1, r3
 800291c:	f04f 0200 	mov.w	r2, #0
 8002920:	4b1e      	ldr	r3, [pc, #120]	; (800299c <Skill_Mode+0x334>)
 8002922:	f7fd fcd1 	bl	80002c8 <__aeabi_dsub>
 8002926:	4602      	mov	r2, r0
 8002928:	460b      	mov	r3, r1
 800292a:	4610      	mov	r0, r2
 800292c:	4619      	mov	r1, r3
 800292e:	f7fe f95b 	bl	8000be8 <__aeabi_d2f>
 8002932:	4603      	mov	r3, r0
 8002934:	617b      	str	r3, [r7, #20]
	gamma = -kP * p  - kD*(p-p_prev);
 8002936:	edd7 7a02 	vldr	s15, [r7, #8]
 800293a:	eeb1 7a67 	vneg.f32	s14, s15
 800293e:	edd7 7a05 	vldr	s15, [r7, #20]
 8002942:	ee27 7a27 	vmul.f32	s14, s14, s15
 8002946:	4b16      	ldr	r3, [pc, #88]	; (80029a0 <Skill_Mode+0x338>)
 8002948:	edd3 7a00 	vldr	s15, [r3]
 800294c:	edd7 6a05 	vldr	s13, [r7, #20]
 8002950:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8002954:	edd7 7a01 	vldr	s15, [r7, #4]
 8002958:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800295c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002960:	4b10      	ldr	r3, [pc, #64]	; (80029a4 <Skill_Mode+0x33c>)
 8002962:	edc3 7a00 	vstr	s15, [r3]
	p_prev = p;
 8002966:	4a0e      	ldr	r2, [pc, #56]	; (80029a0 <Skill_Mode+0x338>)
 8002968:	697b      	ldr	r3, [r7, #20]
 800296a:	6013      	str	r3, [r2, #0]
	byte_prev=byte;
 800296c:	4a0e      	ldr	r2, [pc, #56]	; (80029a8 <Skill_Mode+0x340>)
 800296e:	69fb      	ldr	r3, [r7, #28]
 8002970:	6013      	str	r3, [r2, #0]

	return gamma;
 8002972:	4b0c      	ldr	r3, [pc, #48]	; (80029a4 <Skill_Mode+0x33c>)
 8002974:	681b      	ldr	r3, [r3, #0]
 8002976:	ee07 3a90 	vmov	s15, r3
}
 800297a:	eeb0 0a67 	vmov.f32	s0, s15
 800297e:	3720      	adds	r7, #32
 8002980:	46bd      	mov	sp, r7
 8002982:	bd80      	pop	{r7, pc}
 8002984:	f3af 8000 	nop.w
 8002988:	00000000 	.word	0x00000000
 800298c:	406fe000 	.word	0x406fe000
 8002990:	200005a0 	.word	0x200005a0
 8002994:	20000564 	.word	0x20000564
 8002998:	434c0000 	.word	0x434c0000
 800299c:	40598000 	.word	0x40598000
 80029a0:	20000574 	.word	0x20000574
 80029a4:	20000578 	.word	0x20000578
 80029a8:	20000560 	.word	0x20000560

080029ac <Detect_Node3>:
	}

}

void Detect_Node3(UART_HandleTypeDef *huart_debugg, uint32_t t)
{
 80029ac:	b480      	push	{r7}
 80029ae:	b083      	sub	sp, #12
 80029b0:	af00      	add	r7, sp, #0
 80029b2:	6078      	str	r0, [r7, #4]
 80029b4:	6039      	str	r1, [r7, #0]
	static uint32_t dt=0;
	static uint32_t t_prev=0;
	static uint8_t flag=0;

	dt=t-t_prev;
 80029b6:	4b1d      	ldr	r3, [pc, #116]	; (8002a2c <Detect_Node3+0x80>)
 80029b8:	681b      	ldr	r3, [r3, #0]
 80029ba:	683a      	ldr	r2, [r7, #0]
 80029bc:	1ad3      	subs	r3, r2, r3
 80029be:	4a1c      	ldr	r2, [pc, #112]	; (8002a30 <Detect_Node3+0x84>)
 80029c0:	6013      	str	r3, [r2, #0]
	if(LINE_CNT==4 && dt> 1500)
 80029c2:	4b1c      	ldr	r3, [pc, #112]	; (8002a34 <Detect_Node3+0x88>)
 80029c4:	785b      	ldrb	r3, [r3, #1]
 80029c6:	2b04      	cmp	r3, #4
 80029c8:	d10f      	bne.n	80029ea <Detect_Node3+0x3e>
 80029ca:	4b19      	ldr	r3, [pc, #100]	; (8002a30 <Detect_Node3+0x84>)
 80029cc:	681b      	ldr	r3, [r3, #0]
 80029ce:	f240 52dc 	movw	r2, #1500	; 0x5dc
 80029d2:	4293      	cmp	r3, r2
 80029d4:	d909      	bls.n	80029ea <Detect_Node3+0x3e>
	{
		flag=1;
 80029d6:	4b18      	ldr	r3, [pc, #96]	; (8002a38 <Detect_Node3+0x8c>)
 80029d8:	2201      	movs	r2, #1
 80029da:	701a      	strb	r2, [r3, #0]
		//nodeDetected=1;
		/*
		if(path==0)path=2;
		else if(path==2)path=0;*/
		ignore=1;
 80029dc:	4b17      	ldr	r3, [pc, #92]	; (8002a3c <Detect_Node3+0x90>)
 80029de:	2201      	movs	r2, #1
 80029e0:	701a      	strb	r2, [r3, #0]

		t_prev=t;
 80029e2:	4a12      	ldr	r2, [pc, #72]	; (8002a2c <Detect_Node3+0x80>)
 80029e4:	683b      	ldr	r3, [r7, #0]
 80029e6:	6013      	str	r3, [r2, #0]
 80029e8:	e00e      	b.n	8002a08 <Detect_Node3+0x5c>
	}
	else if(flag==1 && dt>300)
 80029ea:	4b13      	ldr	r3, [pc, #76]	; (8002a38 <Detect_Node3+0x8c>)
 80029ec:	781b      	ldrb	r3, [r3, #0]
 80029ee:	2b01      	cmp	r3, #1
 80029f0:	d10a      	bne.n	8002a08 <Detect_Node3+0x5c>
 80029f2:	4b0f      	ldr	r3, [pc, #60]	; (8002a30 <Detect_Node3+0x84>)
 80029f4:	681b      	ldr	r3, [r3, #0]
 80029f6:	f5b3 7f96 	cmp.w	r3, #300	; 0x12c
 80029fa:	d905      	bls.n	8002a08 <Detect_Node3+0x5c>
	{
		flag=0;
 80029fc:	4b0e      	ldr	r3, [pc, #56]	; (8002a38 <Detect_Node3+0x8c>)
 80029fe:	2200      	movs	r2, #0
 8002a00:	701a      	strb	r2, [r3, #0]
		nodeDetected=1;
 8002a02:	4b0f      	ldr	r3, [pc, #60]	; (8002a40 <Detect_Node3+0x94>)
 8002a04:	2201      	movs	r2, #1
 8002a06:	701a      	strb	r2, [r3, #0]
	}

	if(ignore && dt>200)
 8002a08:	4b0c      	ldr	r3, [pc, #48]	; (8002a3c <Detect_Node3+0x90>)
 8002a0a:	781b      	ldrb	r3, [r3, #0]
 8002a0c:	2b00      	cmp	r3, #0
 8002a0e:	d006      	beq.n	8002a1e <Detect_Node3+0x72>
 8002a10:	4b07      	ldr	r3, [pc, #28]	; (8002a30 <Detect_Node3+0x84>)
 8002a12:	681b      	ldr	r3, [r3, #0]
 8002a14:	2bc8      	cmp	r3, #200	; 0xc8
 8002a16:	d902      	bls.n	8002a1e <Detect_Node3+0x72>
	{
		ignore=0;
 8002a18:	4b08      	ldr	r3, [pc, #32]	; (8002a3c <Detect_Node3+0x90>)
 8002a1a:	2200      	movs	r2, #0
 8002a1c:	701a      	strb	r2, [r3, #0]
	}
}
 8002a1e:	bf00      	nop
 8002a20:	370c      	adds	r7, #12
 8002a22:	46bd      	mov	sp, r7
 8002a24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a28:	4770      	bx	lr
 8002a2a:	bf00      	nop
 8002a2c:	2000057c 	.word	0x2000057c
 8002a30:	20000580 	.word	0x20000580
 8002a34:	200005a0 	.word	0x200005a0
 8002a38:	20000584 	.word	0x20000584
 8002a3c:	2000027c 	.word	0x2000027c
 8002a40:	2000027a 	.word	0x2000027a
 8002a44:	00000000 	.word	0x00000000

08002a48 <Battery_Voltage_Compensate>:
float v=0;
//ha 1000 akkor a motor full csutkán megy előre
//ha -1000 akkor a motor full csutkán megy hátra

void Battery_Voltage_Compensate(ADC_HandleTypeDef *hadc_UNiMh,ADC_HandleTypeDef *hadc_ULiPo,UART_HandleTypeDef *huart_debugg)
{
 8002a48:	b580      	push	{r7, lr}
 8002a4a:	b090      	sub	sp, #64	; 0x40
 8002a4c:	af00      	add	r7, sp, #0
 8002a4e:	60f8      	str	r0, [r7, #12]
 8002a50:	60b9      	str	r1, [r7, #8]
 8002a52:	607a      	str	r2, [r7, #4]
	char msg[30];
	uint32_t raw=0;
 8002a54:	2300      	movs	r3, #0
 8002a56:	63fb      	str	r3, [r7, #60]	; 0x3c
	float bat;
	int i;

	//NiMh akku mérése
	for(i=0;i<20;i++)
 8002a58:	2300      	movs	r3, #0
 8002a5a:	63bb      	str	r3, [r7, #56]	; 0x38
 8002a5c:	e016      	b.n	8002a8c <Battery_Voltage_Compensate+0x44>
	{
		HAL_ADC_Start(hadc_UNiMh);
 8002a5e:	68f8      	ldr	r0, [r7, #12]
 8002a60:	f002 fd88 	bl	8005574 <HAL_ADC_Start>
		HAL_Delay(10);
 8002a64:	200a      	movs	r0, #10
 8002a66:	f002 fd1d 	bl	80054a4 <HAL_Delay>
		HAL_ADC_PollForConversion(hadc_UNiMh,20);
 8002a6a:	2114      	movs	r1, #20
 8002a6c:	68f8      	ldr	r0, [r7, #12]
 8002a6e:	f002 fe53 	bl	8005718 <HAL_ADC_PollForConversion>
		HAL_Delay(10);
 8002a72:	200a      	movs	r0, #10
 8002a74:	f002 fd16 	bl	80054a4 <HAL_Delay>
		raw += HAL_ADC_GetValue(hadc_UNiMh);
 8002a78:	68f8      	ldr	r0, [r7, #12]
 8002a7a:	f002 fed8 	bl	800582e <HAL_ADC_GetValue>
 8002a7e:	4602      	mov	r2, r0
 8002a80:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8002a82:	4413      	add	r3, r2
 8002a84:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(i=0;i<20;i++)
 8002a86:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002a88:	3301      	adds	r3, #1
 8002a8a:	63bb      	str	r3, [r7, #56]	; 0x38
 8002a8c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002a8e:	2b13      	cmp	r3, #19
 8002a90:	dde5      	ble.n	8002a5e <Battery_Voltage_Compensate+0x16>
	}
	bat=(float)raw * 0.00460575 / 20.0;//ez a mi feszültségünk V-ban
 8002a92:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8002a94:	ee07 3a90 	vmov	s15, r3
 8002a98:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002a9c:	ee17 0a90 	vmov	r0, s15
 8002aa0:	f7fd fd72 	bl	8000588 <__aeabi_f2d>
 8002aa4:	a37b      	add	r3, pc, #492	; (adr r3, 8002c94 <Battery_Voltage_Compensate+0x24c>)
 8002aa6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002aaa:	f7fd fdc5 	bl	8000638 <__aeabi_dmul>
 8002aae:	4602      	mov	r2, r0
 8002ab0:	460b      	mov	r3, r1
 8002ab2:	4610      	mov	r0, r2
 8002ab4:	4619      	mov	r1, r3
 8002ab6:	f04f 0200 	mov.w	r2, #0
 8002aba:	4b71      	ldr	r3, [pc, #452]	; (8002c80 <Battery_Voltage_Compensate+0x238>)
 8002abc:	f7fd fee6 	bl	800088c <__aeabi_ddiv>
 8002ac0:	4602      	mov	r2, r0
 8002ac2:	460b      	mov	r3, r1
 8002ac4:	4610      	mov	r0, r2
 8002ac6:	4619      	mov	r1, r3
 8002ac8:	f7fe f88e 	bl	8000be8 <__aeabi_d2f>
 8002acc:	4603      	mov	r3, r0
 8002ace:	637b      	str	r3, [r7, #52]	; 0x34
	sprintf(msg,"NiMh charge: %2.2f V \r\n", bat);
 8002ad0:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8002ad2:	f7fd fd59 	bl	8000588 <__aeabi_f2d>
 8002ad6:	4602      	mov	r2, r0
 8002ad8:	460b      	mov	r3, r1
 8002ada:	f107 0014 	add.w	r0, r7, #20
 8002ade:	4969      	ldr	r1, [pc, #420]	; (8002c84 <Battery_Voltage_Compensate+0x23c>)
 8002ae0:	f008 fea6 	bl	800b830 <siprintf>
	HAL_UART_Transmit(huart_debugg, (uint8_t*) msg, strlen(msg),10);
 8002ae4:	f107 0314 	add.w	r3, r7, #20
 8002ae8:	4618      	mov	r0, r3
 8002aea:	f7fd fb91 	bl	8000210 <strlen>
 8002aee:	4603      	mov	r3, r0
 8002af0:	b29a      	uxth	r2, r3
 8002af2:	f107 0114 	add.w	r1, r7, #20
 8002af6:	230a      	movs	r3, #10
 8002af8:	6878      	ldr	r0, [r7, #4]
 8002afa:	f007 f930 	bl	8009d5e <HAL_UART_Transmit>

	if(bat)compensation=7.75/bat;
 8002afe:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8002b02:	eef5 7a40 	vcmp.f32	s15, #0.0
 8002b06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002b0a:	d009      	beq.n	8002b20 <Battery_Voltage_Compensate+0xd8>
 8002b0c:	eef1 6a0f 	vmov.f32	s13, #31	; 0x40f80000  7.750
 8002b10:	ed97 7a0d 	vldr	s14, [r7, #52]	; 0x34
 8002b14:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8002b18:	4b5b      	ldr	r3, [pc, #364]	; (8002c88 <Battery_Voltage_Compensate+0x240>)
 8002b1a:	edc3 7a00 	vstr	s15, [r3]
 8002b1e:	e003      	b.n	8002b28 <Battery_Voltage_Compensate+0xe0>
	else compensation=1;
 8002b20:	4b59      	ldr	r3, [pc, #356]	; (8002c88 <Battery_Voltage_Compensate+0x240>)
 8002b22:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8002b26:	601a      	str	r2, [r3, #0]

	if(bat < 7.2)
 8002b28:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8002b2a:	f7fd fd2d 	bl	8000588 <__aeabi_f2d>
 8002b2e:	a34e      	add	r3, pc, #312	; (adr r3, 8002c68 <Battery_Voltage_Compensate+0x220>)
 8002b30:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b34:	f7fd fff2 	bl	8000b1c <__aeabi_dcmplt>
 8002b38:	4603      	mov	r3, r0
 8002b3a:	2b00      	cmp	r3, #0
 8002b3c:	d010      	beq.n	8002b60 <Battery_Voltage_Compensate+0x118>
	{
		for(i=0;i<10;i++)
 8002b3e:	2300      	movs	r3, #0
 8002b40:	63bb      	str	r3, [r7, #56]	; 0x38
 8002b42:	e00a      	b.n	8002b5a <Battery_Voltage_Compensate+0x112>
		{
			LED_Y_TOGGLE;
 8002b44:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8002b48:	4850      	ldr	r0, [pc, #320]	; (8002c8c <Battery_Voltage_Compensate+0x244>)
 8002b4a:	f004 fb5e 	bl	800720a <HAL_GPIO_TogglePin>
			HAL_Delay(200);
 8002b4e:	20c8      	movs	r0, #200	; 0xc8
 8002b50:	f002 fca8 	bl	80054a4 <HAL_Delay>
		for(i=0;i<10;i++)
 8002b54:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002b56:	3301      	adds	r3, #1
 8002b58:	63bb      	str	r3, [r7, #56]	; 0x38
 8002b5a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002b5c:	2b09      	cmp	r3, #9
 8002b5e:	ddf1      	ble.n	8002b44 <Battery_Voltage_Compensate+0xfc>
		}
	}

	//LiPo akku mérése
	raw=0;
 8002b60:	2300      	movs	r3, #0
 8002b62:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(i=0;i<20;i++)
 8002b64:	2300      	movs	r3, #0
 8002b66:	63bb      	str	r3, [r7, #56]	; 0x38
 8002b68:	e016      	b.n	8002b98 <Battery_Voltage_Compensate+0x150>
	{
		HAL_ADC_Start(hadc_ULiPo);
 8002b6a:	68b8      	ldr	r0, [r7, #8]
 8002b6c:	f002 fd02 	bl	8005574 <HAL_ADC_Start>
		HAL_Delay(10);
 8002b70:	200a      	movs	r0, #10
 8002b72:	f002 fc97 	bl	80054a4 <HAL_Delay>
		HAL_ADC_PollForConversion(hadc_ULiPo,20);
 8002b76:	2114      	movs	r1, #20
 8002b78:	68b8      	ldr	r0, [r7, #8]
 8002b7a:	f002 fdcd 	bl	8005718 <HAL_ADC_PollForConversion>
		HAL_Delay(10);
 8002b7e:	200a      	movs	r0, #10
 8002b80:	f002 fc90 	bl	80054a4 <HAL_Delay>
		raw += HAL_ADC_GetValue(hadc_ULiPo);
 8002b84:	68b8      	ldr	r0, [r7, #8]
 8002b86:	f002 fe52 	bl	800582e <HAL_ADC_GetValue>
 8002b8a:	4602      	mov	r2, r0
 8002b8c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8002b8e:	4413      	add	r3, r2
 8002b90:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(i=0;i<20;i++)
 8002b92:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002b94:	3301      	adds	r3, #1
 8002b96:	63bb      	str	r3, [r7, #56]	; 0x38
 8002b98:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002b9a:	2b13      	cmp	r3, #19
 8002b9c:	dde5      	ble.n	8002b6a <Battery_Voltage_Compensate+0x122>

	}
	bat = (float)raw * 0.003241242 / 20.0 + 0.02;//ez a mi feszültségünk V-ban
 8002b9e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8002ba0:	ee07 3a90 	vmov	s15, r3
 8002ba4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002ba8:	ee17 0a90 	vmov	r0, s15
 8002bac:	f7fd fcec 	bl	8000588 <__aeabi_f2d>
 8002bb0:	a32f      	add	r3, pc, #188	; (adr r3, 8002c70 <Battery_Voltage_Compensate+0x228>)
 8002bb2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002bb6:	f7fd fd3f 	bl	8000638 <__aeabi_dmul>
 8002bba:	4602      	mov	r2, r0
 8002bbc:	460b      	mov	r3, r1
 8002bbe:	4610      	mov	r0, r2
 8002bc0:	4619      	mov	r1, r3
 8002bc2:	f04f 0200 	mov.w	r2, #0
 8002bc6:	4b2e      	ldr	r3, [pc, #184]	; (8002c80 <Battery_Voltage_Compensate+0x238>)
 8002bc8:	f7fd fe60 	bl	800088c <__aeabi_ddiv>
 8002bcc:	4602      	mov	r2, r0
 8002bce:	460b      	mov	r3, r1
 8002bd0:	4610      	mov	r0, r2
 8002bd2:	4619      	mov	r1, r3
 8002bd4:	a328      	add	r3, pc, #160	; (adr r3, 8002c78 <Battery_Voltage_Compensate+0x230>)
 8002bd6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002bda:	f7fd fb77 	bl	80002cc <__adddf3>
 8002bde:	4602      	mov	r2, r0
 8002be0:	460b      	mov	r3, r1
 8002be2:	4610      	mov	r0, r2
 8002be4:	4619      	mov	r1, r3
 8002be6:	f7fd ffff 	bl	8000be8 <__aeabi_d2f>
 8002bea:	4603      	mov	r3, r0
 8002bec:	637b      	str	r3, [r7, #52]	; 0x34
	sprintf(msg,"LiPo charge: %2.2f V \r\n", bat);
 8002bee:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8002bf0:	f7fd fcca 	bl	8000588 <__aeabi_f2d>
 8002bf4:	4602      	mov	r2, r0
 8002bf6:	460b      	mov	r3, r1
 8002bf8:	f107 0014 	add.w	r0, r7, #20
 8002bfc:	4924      	ldr	r1, [pc, #144]	; (8002c90 <Battery_Voltage_Compensate+0x248>)
 8002bfe:	f008 fe17 	bl	800b830 <siprintf>
	HAL_UART_Transmit(huart_debugg, (uint8_t*)msg, strlen(msg),10);
 8002c02:	f107 0314 	add.w	r3, r7, #20
 8002c06:	4618      	mov	r0, r3
 8002c08:	f7fd fb02 	bl	8000210 <strlen>
 8002c0c:	4603      	mov	r3, r0
 8002c0e:	b29a      	uxth	r2, r3
 8002c10:	f107 0114 	add.w	r1, r7, #20
 8002c14:	230a      	movs	r3, #10
 8002c16:	6878      	ldr	r0, [r7, #4]
 8002c18:	f007 f8a1 	bl	8009d5e <HAL_UART_Transmit>

	/**/
	if(bat < 10)
 8002c1c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8002c20:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8002c24:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002c28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002c2c:	d510      	bpl.n	8002c50 <Battery_Voltage_Compensate+0x208>
	{
		for(i=0;i<20;i++)
 8002c2e:	2300      	movs	r3, #0
 8002c30:	63bb      	str	r3, [r7, #56]	; 0x38
 8002c32:	e00a      	b.n	8002c4a <Battery_Voltage_Compensate+0x202>
		{
			LED_Y_TOGGLE;
 8002c34:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8002c38:	4814      	ldr	r0, [pc, #80]	; (8002c8c <Battery_Voltage_Compensate+0x244>)
 8002c3a:	f004 fae6 	bl	800720a <HAL_GPIO_TogglePin>
			HAL_Delay(200);
 8002c3e:	20c8      	movs	r0, #200	; 0xc8
 8002c40:	f002 fc30 	bl	80054a4 <HAL_Delay>
		for(i=0;i<20;i++)
 8002c44:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002c46:	3301      	adds	r3, #1
 8002c48:	63bb      	str	r3, [r7, #56]	; 0x38
 8002c4a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002c4c:	2b13      	cmp	r3, #19
 8002c4e:	ddf1      	ble.n	8002c34 <Battery_Voltage_Compensate+0x1ec>
		}
	}

	LED_Y(0);
 8002c50:	2201      	movs	r2, #1
 8002c52:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8002c56:	480d      	ldr	r0, [pc, #52]	; (8002c8c <Battery_Voltage_Compensate+0x244>)
 8002c58:	f004 fabe 	bl	80071d8 <HAL_GPIO_WritePin>

}
 8002c5c:	bf00      	nop
 8002c5e:	3740      	adds	r7, #64	; 0x40
 8002c60:	46bd      	mov	sp, r7
 8002c62:	bd80      	pop	{r7, pc}
 8002c64:	f3af 8000 	nop.w
 8002c68:	cccccccd 	.word	0xcccccccd
 8002c6c:	401ccccc 	.word	0x401ccccc
 8002c70:	8c6df334 	.word	0x8c6df334
 8002c74:	3f6a8d60 	.word	0x3f6a8d60
 8002c78:	47ae147b 	.word	0x47ae147b
 8002c7c:	3f947ae1 	.word	0x3f947ae1
 8002c80:	40340000 	.word	0x40340000
 8002c84:	0800f24c 	.word	0x0800f24c
 8002c88:	2000000c 	.word	0x2000000c
 8002c8c:	40020400 	.word	0x40020400
 8002c90:	0800f264 	.word	0x0800f264
 8002c94:	99fa11a9 	.word	0x99fa11a9
 8002c98:	3f72dd7a 	.word	0x3f72dd7a
 8002c9c:	00000000 	.word	0x00000000

08002ca0 <Measure_Velocity_Task>:

void Measure_Velocity_Task(TIM_HandleTypeDef *htim_encoder,uint32_t tick, uint32_t period)
{
 8002ca0:	b5b0      	push	{r4, r5, r7, lr}
 8002ca2:	b086      	sub	sp, #24
 8002ca4:	af00      	add	r7, sp, #0
 8002ca6:	60f8      	str	r0, [r7, #12]
 8002ca8:	60b9      	str	r1, [r7, #8]
 8002caa:	607a      	str	r2, [r7, #4]
	static uint32_t tick_prev=0;
	static uint32_t measure_v_task_tick=4;
	static float alpha=0.3;
	static float invalpha=0.7;
	float v_uj=0;
 8002cac:	f04f 0300 	mov.w	r3, #0
 8002cb0:	617b      	str	r3, [r7, #20]

	if(measure_v_task_tick>tick) return;
 8002cb2:	4b31      	ldr	r3, [pc, #196]	; (8002d78 <Measure_Velocity_Task+0xd8>)
 8002cb4:	681b      	ldr	r3, [r3, #0]
 8002cb6:	68ba      	ldr	r2, [r7, #8]
 8002cb8:	429a      	cmp	r2, r3
 8002cba:	d354      	bcc.n	8002d66 <Measure_Velocity_Task+0xc6>
	measure_v_task_tick= tick + period;
 8002cbc:	68ba      	ldr	r2, [r7, #8]
 8002cbe:	687b      	ldr	r3, [r7, #4]
 8002cc0:	4413      	add	r3, r2
 8002cc2:	4a2d      	ldr	r2, [pc, #180]	; (8002d78 <Measure_Velocity_Task+0xd8>)
 8002cc4:	6013      	str	r3, [r2, #0]
	if(!tick_prev)
 8002cc6:	4b2d      	ldr	r3, [pc, #180]	; (8002d7c <Measure_Velocity_Task+0xdc>)
 8002cc8:	681b      	ldr	r3, [r3, #0]
 8002cca:	2b00      	cmp	r3, #0
 8002ccc:	d103      	bne.n	8002cd6 <Measure_Velocity_Task+0x36>
	{
		tick_prev=tick;
 8002cce:	4a2b      	ldr	r2, [pc, #172]	; (8002d7c <Measure_Velocity_Task+0xdc>)
 8002cd0:	68bb      	ldr	r3, [r7, #8]
 8002cd2:	6013      	str	r3, [r2, #0]
		return;
 8002cd4:	e048      	b.n	8002d68 <Measure_Velocity_Task+0xc8>
	}
	v_uj =((float) 0x8000 - (float) __HAL_TIM_GET_COUNTER(htim_encoder))*7.49/(float)period; //mm/s dimenzió
 8002cd6:	68fb      	ldr	r3, [r7, #12]
 8002cd8:	681b      	ldr	r3, [r3, #0]
 8002cda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002cdc:	ee07 3a90 	vmov	s15, r3
 8002ce0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002ce4:	ed9f 7a26 	vldr	s14, [pc, #152]	; 8002d80 <Measure_Velocity_Task+0xe0>
 8002ce8:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002cec:	ee17 0a90 	vmov	r0, s15
 8002cf0:	f7fd fc4a 	bl	8000588 <__aeabi_f2d>
 8002cf4:	a31e      	add	r3, pc, #120	; (adr r3, 8002d70 <Measure_Velocity_Task+0xd0>)
 8002cf6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002cfa:	f7fd fc9d 	bl	8000638 <__aeabi_dmul>
 8002cfe:	4602      	mov	r2, r0
 8002d00:	460b      	mov	r3, r1
 8002d02:	4614      	mov	r4, r2
 8002d04:	461d      	mov	r5, r3
 8002d06:	687b      	ldr	r3, [r7, #4]
 8002d08:	ee07 3a90 	vmov	s15, r3
 8002d0c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002d10:	ee17 0a90 	vmov	r0, s15
 8002d14:	f7fd fc38 	bl	8000588 <__aeabi_f2d>
 8002d18:	4602      	mov	r2, r0
 8002d1a:	460b      	mov	r3, r1
 8002d1c:	4620      	mov	r0, r4
 8002d1e:	4629      	mov	r1, r5
 8002d20:	f7fd fdb4 	bl	800088c <__aeabi_ddiv>
 8002d24:	4602      	mov	r2, r0
 8002d26:	460b      	mov	r3, r1
 8002d28:	4610      	mov	r0, r2
 8002d2a:	4619      	mov	r1, r3
 8002d2c:	f7fd ff5c 	bl	8000be8 <__aeabi_d2f>
 8002d30:	4603      	mov	r3, r0
 8002d32:	617b      	str	r3, [r7, #20]
	TIM8->CNT=0x8000;
 8002d34:	4b13      	ldr	r3, [pc, #76]	; (8002d84 <Measure_Velocity_Task+0xe4>)
 8002d36:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8002d3a:	625a      	str	r2, [r3, #36]	; 0x24
	//tick_prev=tick;
	//exponenciális szűrés
	v = alpha*(float)v_uj + invalpha*v;
 8002d3c:	4b12      	ldr	r3, [pc, #72]	; (8002d88 <Measure_Velocity_Task+0xe8>)
 8002d3e:	ed93 7a00 	vldr	s14, [r3]
 8002d42:	edd7 7a05 	vldr	s15, [r7, #20]
 8002d46:	ee27 7a27 	vmul.f32	s14, s14, s15
 8002d4a:	4b10      	ldr	r3, [pc, #64]	; (8002d8c <Measure_Velocity_Task+0xec>)
 8002d4c:	edd3 6a00 	vldr	s13, [r3]
 8002d50:	4b0f      	ldr	r3, [pc, #60]	; (8002d90 <Measure_Velocity_Task+0xf0>)
 8002d52:	edd3 7a00 	vldr	s15, [r3]
 8002d56:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8002d5a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002d5e:	4b0c      	ldr	r3, [pc, #48]	; (8002d90 <Measure_Velocity_Task+0xf0>)
 8002d60:	edc3 7a00 	vstr	s15, [r3]
 8002d64:	e000      	b.n	8002d68 <Measure_Velocity_Task+0xc8>
	if(measure_v_task_tick>tick) return;
 8002d66:	bf00      	nop
}
 8002d68:	3718      	adds	r7, #24
 8002d6a:	46bd      	mov	sp, r7
 8002d6c:	bdb0      	pop	{r4, r5, r7, pc}
 8002d6e:	bf00      	nop
 8002d70:	8f5c28f6 	.word	0x8f5c28f6
 8002d74:	401df5c2 	.word	0x401df5c2
 8002d78:	20000010 	.word	0x20000010
 8002d7c:	2000058c 	.word	0x2000058c
 8002d80:	47000000 	.word	0x47000000
 8002d84:	40010400 	.word	0x40010400
 8002d88:	20000014 	.word	0x20000014
 8002d8c:	20000018 	.word	0x20000018
 8002d90:	20000588 	.word	0x20000588
 8002d94:	00000000 	.word	0x00000000

08002d98 <Motor_Drive_Task>:

void Motor_Drive_Task(TIM_HandleTypeDef *htim_motor, UART_HandleTypeDef *huart, uint32_t tick, uint32_t period) //DUTY paramtert kiszedtem -> változtassuk a globális változót
{
 8002d98:	b5b0      	push	{r4, r5, r7, lr}
 8002d9a:	b086      	sub	sp, #24
 8002d9c:	af00      	add	r7, sp, #0
 8002d9e:	60f8      	str	r0, [r7, #12]
 8002da0:	60b9      	str	r1, [r7, #8]
 8002da2:	607a      	str	r2, [r7, #4]
 8002da4:	603b      	str	r3, [r7, #0]
	static uint32_t motor_drive_task_tick=5;
	static float f,u=0;

	int32_t ccr1;
	int32_t ccr2;
	if(motor_drive_task_tick>tick) return;
 8002da6:	4b92      	ldr	r3, [pc, #584]	; (8002ff0 <Motor_Drive_Task+0x258>)
 8002da8:	681b      	ldr	r3, [r3, #0]
 8002daa:	687a      	ldr	r2, [r7, #4]
 8002dac:	429a      	cmp	r2, r3
 8002dae:	f0c0 810e 	bcc.w	8002fce <Motor_Drive_Task+0x236>
	motor_drive_task_tick= tick + period;
 8002db2:	687a      	ldr	r2, [r7, #4]
 8002db4:	683b      	ldr	r3, [r7, #0]
 8002db6:	4413      	add	r3, r2
 8002db8:	4a8d      	ldr	r2, [pc, #564]	; (8002ff0 <Motor_Drive_Task+0x258>)
 8002dba:	6013      	str	r3, [r2, #0]

	if(motorEnRemote && motorEnLineOk) //ha nem nyomtunk vészstopot és az akkuk is rendben vannak akkor pöröghet a motor
 8002dbc:	4b8d      	ldr	r3, [pc, #564]	; (8002ff4 <Motor_Drive_Task+0x25c>)
 8002dbe:	781b      	ldrb	r3, [r3, #0]
 8002dc0:	2b00      	cmp	r3, #0
 8002dc2:	f000 80b4 	beq.w	8002f2e <Motor_Drive_Task+0x196>
 8002dc6:	4b8c      	ldr	r3, [pc, #560]	; (8002ff8 <Motor_Drive_Task+0x260>)
 8002dc8:	781b      	ldrb	r3, [r3, #0]
 8002dca:	2b00      	cmp	r3, #0
 8002dcc:	f000 80af 	beq.w	8002f2e <Motor_Drive_Task+0x196>
	{
		//az u paraméter a bevatkozó jel minusz holtásávot adja meg
		u= KC * (v_ref - v) * compensation + f;
 8002dd0:	4b8a      	ldr	r3, [pc, #552]	; (8002ffc <Motor_Drive_Task+0x264>)
 8002dd2:	ed93 7a00 	vldr	s14, [r3]
 8002dd6:	4b8a      	ldr	r3, [pc, #552]	; (8003000 <Motor_Drive_Task+0x268>)
 8002dd8:	edd3 7a00 	vldr	s15, [r3]
 8002ddc:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002de0:	ee17 0a90 	vmov	r0, s15
 8002de4:	f7fd fbd0 	bl	8000588 <__aeabi_f2d>
 8002de8:	a37b      	add	r3, pc, #492	; (adr r3, 8002fd8 <Motor_Drive_Task+0x240>)
 8002dea:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002dee:	f7fd fc23 	bl	8000638 <__aeabi_dmul>
 8002df2:	4602      	mov	r2, r0
 8002df4:	460b      	mov	r3, r1
 8002df6:	4614      	mov	r4, r2
 8002df8:	461d      	mov	r5, r3
 8002dfa:	4b82      	ldr	r3, [pc, #520]	; (8003004 <Motor_Drive_Task+0x26c>)
 8002dfc:	681b      	ldr	r3, [r3, #0]
 8002dfe:	4618      	mov	r0, r3
 8002e00:	f7fd fbc2 	bl	8000588 <__aeabi_f2d>
 8002e04:	4602      	mov	r2, r0
 8002e06:	460b      	mov	r3, r1
 8002e08:	4620      	mov	r0, r4
 8002e0a:	4629      	mov	r1, r5
 8002e0c:	f7fd fc14 	bl	8000638 <__aeabi_dmul>
 8002e10:	4602      	mov	r2, r0
 8002e12:	460b      	mov	r3, r1
 8002e14:	4614      	mov	r4, r2
 8002e16:	461d      	mov	r5, r3
 8002e18:	4b7b      	ldr	r3, [pc, #492]	; (8003008 <Motor_Drive_Task+0x270>)
 8002e1a:	681b      	ldr	r3, [r3, #0]
 8002e1c:	4618      	mov	r0, r3
 8002e1e:	f7fd fbb3 	bl	8000588 <__aeabi_f2d>
 8002e22:	4602      	mov	r2, r0
 8002e24:	460b      	mov	r3, r1
 8002e26:	4620      	mov	r0, r4
 8002e28:	4629      	mov	r1, r5
 8002e2a:	f7fd fa4f 	bl	80002cc <__adddf3>
 8002e2e:	4602      	mov	r2, r0
 8002e30:	460b      	mov	r3, r1
 8002e32:	4610      	mov	r0, r2
 8002e34:	4619      	mov	r1, r3
 8002e36:	f7fd fed7 	bl	8000be8 <__aeabi_d2f>
 8002e3a:	4603      	mov	r3, r0
 8002e3c:	4a73      	ldr	r2, [pc, #460]	; (800300c <Motor_Drive_Task+0x274>)
 8002e3e:	6013      	str	r3, [r2, #0]
		if(u>880) u=880;
 8002e40:	4b72      	ldr	r3, [pc, #456]	; (800300c <Motor_Drive_Task+0x274>)
 8002e42:	edd3 7a00 	vldr	s15, [r3]
 8002e46:	ed9f 7a72 	vldr	s14, [pc, #456]	; 8003010 <Motor_Drive_Task+0x278>
 8002e4a:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002e4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002e52:	dd03      	ble.n	8002e5c <Motor_Drive_Task+0xc4>
 8002e54:	4b6d      	ldr	r3, [pc, #436]	; (800300c <Motor_Drive_Task+0x274>)
 8002e56:	4a6f      	ldr	r2, [pc, #444]	; (8003014 <Motor_Drive_Task+0x27c>)
 8002e58:	601a      	str	r2, [r3, #0]
 8002e5a:	e00c      	b.n	8002e76 <Motor_Drive_Task+0xde>
		else if(u<-500)u=-500;
 8002e5c:	4b6b      	ldr	r3, [pc, #428]	; (800300c <Motor_Drive_Task+0x274>)
 8002e5e:	edd3 7a00 	vldr	s15, [r3]
 8002e62:	ed9f 7a6d 	vldr	s14, [pc, #436]	; 8003018 <Motor_Drive_Task+0x280>
 8002e66:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002e6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002e6e:	d502      	bpl.n	8002e76 <Motor_Drive_Task+0xde>
 8002e70:	4b66      	ldr	r3, [pc, #408]	; (800300c <Motor_Drive_Task+0x274>)
 8002e72:	4a6a      	ldr	r2, [pc, #424]	; (800301c <Motor_Drive_Task+0x284>)
 8002e74:	601a      	str	r2, [r3, #0]
		f = ZD*f + (1-ZD)*u;
 8002e76:	4b64      	ldr	r3, [pc, #400]	; (8003008 <Motor_Drive_Task+0x270>)
 8002e78:	681b      	ldr	r3, [r3, #0]
 8002e7a:	4618      	mov	r0, r3
 8002e7c:	f7fd fb84 	bl	8000588 <__aeabi_f2d>
 8002e80:	a357      	add	r3, pc, #348	; (adr r3, 8002fe0 <Motor_Drive_Task+0x248>)
 8002e82:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002e86:	f7fd fbd7 	bl	8000638 <__aeabi_dmul>
 8002e8a:	4602      	mov	r2, r0
 8002e8c:	460b      	mov	r3, r1
 8002e8e:	4614      	mov	r4, r2
 8002e90:	461d      	mov	r5, r3
 8002e92:	4b5e      	ldr	r3, [pc, #376]	; (800300c <Motor_Drive_Task+0x274>)
 8002e94:	681b      	ldr	r3, [r3, #0]
 8002e96:	4618      	mov	r0, r3
 8002e98:	f7fd fb76 	bl	8000588 <__aeabi_f2d>
 8002e9c:	a352      	add	r3, pc, #328	; (adr r3, 8002fe8 <Motor_Drive_Task+0x250>)
 8002e9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002ea2:	f7fd fbc9 	bl	8000638 <__aeabi_dmul>
 8002ea6:	4602      	mov	r2, r0
 8002ea8:	460b      	mov	r3, r1
 8002eaa:	4620      	mov	r0, r4
 8002eac:	4629      	mov	r1, r5
 8002eae:	f7fd fa0d 	bl	80002cc <__adddf3>
 8002eb2:	4602      	mov	r2, r0
 8002eb4:	460b      	mov	r3, r1
 8002eb6:	4610      	mov	r0, r2
 8002eb8:	4619      	mov	r1, r3
 8002eba:	f7fd fe95 	bl	8000be8 <__aeabi_d2f>
 8002ebe:	4603      	mov	r3, r0
 8002ec0:	4a51      	ldr	r2, [pc, #324]	; (8003008 <Motor_Drive_Task+0x270>)
 8002ec2:	6013      	str	r3, [r2, #0]
		//ez alapján a kiadandó kitöltési tényező
		if(u>0) motorDuty=(int)u+70;
 8002ec4:	4b51      	ldr	r3, [pc, #324]	; (800300c <Motor_Drive_Task+0x274>)
 8002ec6:	edd3 7a00 	vldr	s15, [r3]
 8002eca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002ece:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002ed2:	dd0a      	ble.n	8002eea <Motor_Drive_Task+0x152>
 8002ed4:	4b4d      	ldr	r3, [pc, #308]	; (800300c <Motor_Drive_Task+0x274>)
 8002ed6:	edd3 7a00 	vldr	s15, [r3]
 8002eda:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002ede:	ee17 3a90 	vmov	r3, s15
 8002ee2:	3346      	adds	r3, #70	; 0x46
 8002ee4:	4a4e      	ldr	r2, [pc, #312]	; (8003020 <Motor_Drive_Task+0x288>)
 8002ee6:	6013      	str	r3, [r2, #0]
 8002ee8:	e01b      	b.n	8002f22 <Motor_Drive_Task+0x18a>
		else if(u<0) motorDuty=(int)u-70;
 8002eea:	4b48      	ldr	r3, [pc, #288]	; (800300c <Motor_Drive_Task+0x274>)
 8002eec:	edd3 7a00 	vldr	s15, [r3]
 8002ef0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002ef4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002ef8:	d50a      	bpl.n	8002f10 <Motor_Drive_Task+0x178>
 8002efa:	4b44      	ldr	r3, [pc, #272]	; (800300c <Motor_Drive_Task+0x274>)
 8002efc:	edd3 7a00 	vldr	s15, [r3]
 8002f00:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002f04:	ee17 3a90 	vmov	r3, s15
 8002f08:	3b46      	subs	r3, #70	; 0x46
 8002f0a:	4a45      	ldr	r2, [pc, #276]	; (8003020 <Motor_Drive_Task+0x288>)
 8002f0c:	6013      	str	r3, [r2, #0]
 8002f0e:	e008      	b.n	8002f22 <Motor_Drive_Task+0x18a>
		else motorDuty=(int)u;
 8002f10:	4b3e      	ldr	r3, [pc, #248]	; (800300c <Motor_Drive_Task+0x274>)
 8002f12:	edd3 7a00 	vldr	s15, [r3]
 8002f16:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002f1a:	ee17 2a90 	vmov	r2, s15
 8002f1e:	4b40      	ldr	r3, [pc, #256]	; (8003020 <Motor_Drive_Task+0x288>)
 8002f20:	601a      	str	r2, [r3, #0]


		MOTOR_EN(1);
 8002f22:	2201      	movs	r2, #1
 8002f24:	2140      	movs	r1, #64	; 0x40
 8002f26:	483f      	ldr	r0, [pc, #252]	; (8003024 <Motor_Drive_Task+0x28c>)
 8002f28:	f004 f956 	bl	80071d8 <HAL_GPIO_WritePin>
 8002f2c:	e00c      	b.n	8002f48 <Motor_Drive_Task+0x1b0>
	}
	else
	{	f=u=0;
 8002f2e:	4b37      	ldr	r3, [pc, #220]	; (800300c <Motor_Drive_Task+0x274>)
 8002f30:	f04f 0200 	mov.w	r2, #0
 8002f34:	601a      	str	r2, [r3, #0]
 8002f36:	4b35      	ldr	r3, [pc, #212]	; (800300c <Motor_Drive_Task+0x274>)
 8002f38:	681b      	ldr	r3, [r3, #0]
 8002f3a:	4a33      	ldr	r2, [pc, #204]	; (8003008 <Motor_Drive_Task+0x270>)
 8002f3c:	6013      	str	r3, [r2, #0]
		MOTOR_EN(0); //amugy stop
 8002f3e:	2200      	movs	r2, #0
 8002f40:	2140      	movs	r1, #64	; 0x40
 8002f42:	4838      	ldr	r0, [pc, #224]	; (8003024 <Motor_Drive_Task+0x28c>)
 8002f44:	f004 f948 	bl	80071d8 <HAL_GPIO_WritePin>
	}
	//A két érték amit irogatsz (TIM3->CCR1,CCR2) konkrét timer periféria regiszterek, nem feltétlen jó őket folyamatosan újraírni 10ms enként
	/**/
	if(mode==FAST && rxBuf[1]<1)
 8002f48:	4b37      	ldr	r3, [pc, #220]	; (8003028 <Motor_Drive_Task+0x290>)
 8002f4a:	781b      	ldrb	r3, [r3, #0]
 8002f4c:	2b3f      	cmp	r3, #63	; 0x3f
 8002f4e:	d111      	bne.n	8002f74 <Motor_Drive_Task+0x1dc>
 8002f50:	4b36      	ldr	r3, [pc, #216]	; (800302c <Motor_Drive_Task+0x294>)
 8002f52:	785b      	ldrb	r3, [r3, #1]
 8002f54:	2b00      	cmp	r3, #0
 8002f56:	d10d      	bne.n	8002f74 <Motor_Drive_Task+0x1dc>
	{
		TIM3->CCR1=499;
 8002f58:	4b35      	ldr	r3, [pc, #212]	; (8003030 <Motor_Drive_Task+0x298>)
 8002f5a:	f240 12f3 	movw	r2, #499	; 0x1f3
 8002f5e:	635a      	str	r2, [r3, #52]	; 0x34
		TIM3->CCR2=499;
 8002f60:	4b33      	ldr	r3, [pc, #204]	; (8003030 <Motor_Drive_Task+0x298>)
 8002f62:	f240 12f3 	movw	r2, #499	; 0x1f3
 8002f66:	639a      	str	r2, [r3, #56]	; 0x38
		LED_Y_TOGGLE;
 8002f68:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8002f6c:	482d      	ldr	r0, [pc, #180]	; (8003024 <Motor_Drive_Task+0x28c>)
 8002f6e:	f004 f94c 	bl	800720a <HAL_GPIO_TogglePin>
 8002f72:	e027      	b.n	8002fc4 <Motor_Drive_Task+0x22c>
	}
	else if(motorDuty!=motorDutyPrev)//csak akkor írjuk át őket ha tényleg muszáj (ha változtak az előző taskhívás óta)
 8002f74:	4b2a      	ldr	r3, [pc, #168]	; (8003020 <Motor_Drive_Task+0x288>)
 8002f76:	681a      	ldr	r2, [r3, #0]
 8002f78:	4b2e      	ldr	r3, [pc, #184]	; (8003034 <Motor_Drive_Task+0x29c>)
 8002f7a:	681b      	ldr	r3, [r3, #0]
 8002f7c:	429a      	cmp	r2, r3
 8002f7e:	d021      	beq.n	8002fc4 <Motor_Drive_Task+0x22c>
	{
		ccr2 = (motorDuty + 1000)/2-1;
 8002f80:	4b27      	ldr	r3, [pc, #156]	; (8003020 <Motor_Drive_Task+0x288>)
 8002f82:	681b      	ldr	r3, [r3, #0]
 8002f84:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8002f88:	0fda      	lsrs	r2, r3, #31
 8002f8a:	4413      	add	r3, r2
 8002f8c:	105b      	asrs	r3, r3, #1
 8002f8e:	3b01      	subs	r3, #1
 8002f90:	617b      	str	r3, [r7, #20]
		if(ccr2>950)ccr2=950;
 8002f92:	697b      	ldr	r3, [r7, #20]
 8002f94:	f240 32b6 	movw	r2, #950	; 0x3b6
 8002f98:	4293      	cmp	r3, r2
 8002f9a:	dd02      	ble.n	8002fa2 <Motor_Drive_Task+0x20a>
 8002f9c:	f240 33b6 	movw	r3, #950	; 0x3b6
 8002fa0:	617b      	str	r3, [r7, #20]
		if(ccr2<-950)ccr2=-950;
 8002fa2:	697b      	ldr	r3, [r7, #20]
 8002fa4:	4a24      	ldr	r2, [pc, #144]	; (8003038 <Motor_Drive_Task+0x2a0>)
 8002fa6:	4293      	cmp	r3, r2
 8002fa8:	da01      	bge.n	8002fae <Motor_Drive_Task+0x216>
 8002faa:	4b23      	ldr	r3, [pc, #140]	; (8003038 <Motor_Drive_Task+0x2a0>)
 8002fac:	617b      	str	r3, [r7, #20]
		ccr1= 998-ccr2;
 8002fae:	697b      	ldr	r3, [r7, #20]
 8002fb0:	f5c3 7379 	rsb	r3, r3, #996	; 0x3e4
 8002fb4:	3302      	adds	r3, #2
 8002fb6:	613b      	str	r3, [r7, #16]

		//2 Referencia megadása
		//Ezeket a loopba kéne változtatni folyamatosan, pwm-elinditas mashova kell majd

		TIM3->CCR1=ccr1;
 8002fb8:	4a1d      	ldr	r2, [pc, #116]	; (8003030 <Motor_Drive_Task+0x298>)
 8002fba:	693b      	ldr	r3, [r7, #16]
 8002fbc:	6353      	str	r3, [r2, #52]	; 0x34
		TIM3->CCR2=ccr2;
 8002fbe:	4a1c      	ldr	r2, [pc, #112]	; (8003030 <Motor_Drive_Task+0x298>)
 8002fc0:	697b      	ldr	r3, [r7, #20]
 8002fc2:	6393      	str	r3, [r2, #56]	; 0x38
	}
	motorDutyPrev=motorDuty;
 8002fc4:	4b16      	ldr	r3, [pc, #88]	; (8003020 <Motor_Drive_Task+0x288>)
 8002fc6:	681b      	ldr	r3, [r3, #0]
 8002fc8:	4a1a      	ldr	r2, [pc, #104]	; (8003034 <Motor_Drive_Task+0x29c>)
 8002fca:	6013      	str	r3, [r2, #0]
 8002fcc:	e000      	b.n	8002fd0 <Motor_Drive_Task+0x238>
	if(motor_drive_task_tick>tick) return;
 8002fce:	bf00      	nop
}
 8002fd0:	3718      	adds	r7, #24
 8002fd2:	46bd      	mov	sp, r7
 8002fd4:	bdb0      	pop	{r4, r5, r7, pc}
 8002fd6:	bf00      	nop
 8002fd8:	30be0ded 	.word	0x30be0ded
 8002fdc:	3fd02a99 	.word	0x3fd02a99
 8002fe0:	9b3d07c8 	.word	0x9b3d07c8
 8002fe4:	3fef9f55 	.word	0x3fef9f55
 8002fe8:	30be0e00 	.word	0x30be0e00
 8002fec:	3f882a99 	.word	0x3f882a99
 8002ff0:	2000001c 	.word	0x2000001c
 8002ff4:	20000994 	.word	0x20000994
 8002ff8:	20000995 	.word	0x20000995
 8002ffc:	20000270 	.word	0x20000270
 8003000:	20000588 	.word	0x20000588
 8003004:	2000000c 	.word	0x2000000c
 8003008:	20000590 	.word	0x20000590
 800300c:	20000594 	.word	0x20000594
 8003010:	445c0000 	.word	0x445c0000
 8003014:	445c0000 	.word	0x445c0000
 8003018:	c3fa0000 	.word	0xc3fa0000
 800301c:	c3fa0000 	.word	0xc3fa0000
 8003020:	20000598 	.word	0x20000598
 8003024:	40020400 	.word	0x40020400
 8003028:	2000026e 	.word	0x2000026e
 800302c:	200005a0 	.word	0x200005a0
 8003030:	40000400 	.word	0x40000400
 8003034:	2000059c 	.word	0x2000059c
 8003038:	fffffc4a 	.word	0xfffffc4a

0800303c <G0_Read_Fast>:
uint8_t rxBuf[10];
volatile uint8_t flagG0=0;


uint8_t G0_Read_Fast(UART_HandleTypeDef *huart_stm,UART_HandleTypeDef *huart_debugg)
{
 800303c:	b580      	push	{r7, lr}
 800303e:	b084      	sub	sp, #16
 8003040:	af00      	add	r7, sp, #0
 8003042:	6078      	str	r0, [r7, #4]
 8003044:	6039      	str	r1, [r7, #0]

	uint8_t state=0;
 8003046:	2300      	movs	r3, #0
 8003048:	73fb      	strb	r3, [r7, #15]
	txBuf[0]=CMD_READ_FAST;
 800304a:	4b13      	ldr	r3, [pc, #76]	; (8003098 <G0_Read_Fast+0x5c>)
 800304c:	222a      	movs	r2, #42	; 0x2a
 800304e:	701a      	strb	r2, [r3, #0]
	HAL_UART_Transmit(huart_stm, txBuf,1, 2);
 8003050:	2302      	movs	r3, #2
 8003052:	2201      	movs	r2, #1
 8003054:	4910      	ldr	r1, [pc, #64]	; (8003098 <G0_Read_Fast+0x5c>)
 8003056:	6878      	ldr	r0, [r7, #4]
 8003058:	f006 fe81 	bl	8009d5e <HAL_UART_Transmit>
	state=HAL_UART_Receive(huart_stm, rxBuf, 8, 4);
 800305c:	2304      	movs	r3, #4
 800305e:	2208      	movs	r2, #8
 8003060:	490e      	ldr	r1, [pc, #56]	; (800309c <G0_Read_Fast+0x60>)
 8003062:	6878      	ldr	r0, [r7, #4]
 8003064:	f006 ff0d 	bl	8009e82 <HAL_UART_Receive>
 8003068:	4603      	mov	r3, r0
 800306a:	73fb      	strb	r3, [r7, #15]
	motorEnLineOk=1; //ha van akkor mehet a szabályozás
 800306c:	4b0c      	ldr	r3, [pc, #48]	; (80030a0 <G0_Read_Fast+0x64>)
 800306e:	2201      	movs	r2, #1
 8003070:	701a      	strb	r2, [r3, #0]
	if((state==0)&&(rxBuf[0]==START_BYTE_FAST) && (rxBuf[7]==STOP_BYTE))//jöt adat a G0 tól és a keret is megfelelő
 8003072:	7bfb      	ldrb	r3, [r7, #15]
 8003074:	2b00      	cmp	r3, #0
 8003076:	d109      	bne.n	800308c <G0_Read_Fast+0x50>
 8003078:	4b08      	ldr	r3, [pc, #32]	; (800309c <G0_Read_Fast+0x60>)
 800307a:	781b      	ldrb	r3, [r3, #0]
 800307c:	2b41      	cmp	r3, #65	; 0x41
 800307e:	d105      	bne.n	800308c <G0_Read_Fast+0x50>
 8003080:	4b06      	ldr	r3, [pc, #24]	; (800309c <G0_Read_Fast+0x60>)
 8003082:	79db      	ldrb	r3, [r3, #7]
 8003084:	2b12      	cmp	r3, #18
 8003086:	d101      	bne.n	800308c <G0_Read_Fast+0x50>
	{
		return 0;
 8003088:	2300      	movs	r3, #0
 800308a:	e000      	b.n	800308e <G0_Read_Fast+0x52>
	}
	else //nem jött szabályos adat a G0-tól
	{
		return 1;
 800308c:	2301      	movs	r3, #1
	}
}
 800308e:	4618      	mov	r0, r3
 8003090:	3710      	adds	r7, #16
 8003092:	46bd      	mov	sp, r7
 8003094:	bd80      	pop	{r7, pc}
 8003096:	bf00      	nop
 8003098:	20000020 	.word	0x20000020
 800309c:	200005a0 	.word	0x200005a0
 80030a0:	20000995 	.word	0x20000995

080030a4 <G0_Read_Skill>:

uint8_t G0_Read_Skill(UART_HandleTypeDef *huart_stm,UART_HandleTypeDef *huart_debugg, uint8_t command)
{
 80030a4:	b580      	push	{r7, lr}
 80030a6:	b086      	sub	sp, #24
 80030a8:	af00      	add	r7, sp, #0
 80030aa:	60f8      	str	r0, [r7, #12]
 80030ac:	60b9      	str	r1, [r7, #8]
 80030ae:	4613      	mov	r3, r2
 80030b0:	71fb      	strb	r3, [r7, #7]
	uint8_t state=1;
 80030b2:	2301      	movs	r3, #1
 80030b4:	75fb      	strb	r3, [r7, #23]
	txBuf[0]=command;
 80030b6:	4a15      	ldr	r2, [pc, #84]	; (800310c <G0_Read_Skill+0x68>)
 80030b8:	79fb      	ldrb	r3, [r7, #7]
 80030ba:	7013      	strb	r3, [r2, #0]
	HAL_UART_Transmit(huart_stm, txBuf,1, 2);
 80030bc:	2302      	movs	r3, #2
 80030be:	2201      	movs	r2, #1
 80030c0:	4912      	ldr	r1, [pc, #72]	; (800310c <G0_Read_Skill+0x68>)
 80030c2:	68f8      	ldr	r0, [r7, #12]
 80030c4:	f006 fe4b 	bl	8009d5e <HAL_UART_Transmit>
	state = HAL_UART_Receive(huart_stm, rxBuf, 10, 4);
 80030c8:	2304      	movs	r3, #4
 80030ca:	220a      	movs	r2, #10
 80030cc:	4910      	ldr	r1, [pc, #64]	; (8003110 <G0_Read_Skill+0x6c>)
 80030ce:	68f8      	ldr	r0, [r7, #12]
 80030d0:	f006 fed7 	bl	8009e82 <HAL_UART_Receive>
 80030d4:	4603      	mov	r3, r0
 80030d6:	75fb      	strb	r3, [r7, #23]
	motorEnLineOk=1; //ha van akkor mehet a szabályozás
 80030d8:	4b0e      	ldr	r3, [pc, #56]	; (8003114 <G0_Read_Skill+0x70>)
 80030da:	2201      	movs	r2, #1
 80030dc:	701a      	strb	r2, [r3, #0]
	if((state==0)&&(rxBuf[0]==START_BYTE_SKILL_FORWARD || rxBuf[0]==START_BYTE_SKILL_REVERSE) && (rxBuf[9]==STOP_BYTE))//jöt adat a G0 tól és a keret is megfelelő
 80030de:	7dfb      	ldrb	r3, [r7, #23]
 80030e0:	2b00      	cmp	r3, #0
 80030e2:	d10d      	bne.n	8003100 <G0_Read_Skill+0x5c>
 80030e4:	4b0a      	ldr	r3, [pc, #40]	; (8003110 <G0_Read_Skill+0x6c>)
 80030e6:	781b      	ldrb	r3, [r3, #0]
 80030e8:	2b50      	cmp	r3, #80	; 0x50
 80030ea:	d003      	beq.n	80030f4 <G0_Read_Skill+0x50>
 80030ec:	4b08      	ldr	r3, [pc, #32]	; (8003110 <G0_Read_Skill+0x6c>)
 80030ee:	781b      	ldrb	r3, [r3, #0]
 80030f0:	2ba8      	cmp	r3, #168	; 0xa8
 80030f2:	d105      	bne.n	8003100 <G0_Read_Skill+0x5c>
 80030f4:	4b06      	ldr	r3, [pc, #24]	; (8003110 <G0_Read_Skill+0x6c>)
 80030f6:	7a5b      	ldrb	r3, [r3, #9]
 80030f8:	2b12      	cmp	r3, #18
 80030fa:	d101      	bne.n	8003100 <G0_Read_Skill+0x5c>
	{
		return 0;
 80030fc:	2300      	movs	r3, #0
 80030fe:	e000      	b.n	8003102 <G0_Read_Skill+0x5e>
	}
	else //nem jött szabályos adat a G0-tól
	{
		return 1;
 8003100:	2301      	movs	r3, #1
	}
}
 8003102:	4618      	mov	r0, r3
 8003104:	3718      	adds	r7, #24
 8003106:	46bd      	mov	sp, r7
 8003108:	bd80      	pop	{r7, pc}
 800310a:	bf00      	nop
 800310c:	20000020 	.word	0x20000020
 8003110:	200005a0 	.word	0x200005a0
 8003114:	20000995 	.word	0x20000995

08003118 <Line_Track_Task>:
	}
	else flagG0=0;
}

void Line_Track_Task(UART_HandleTypeDef *huart_stm,UART_HandleTypeDef *huart_debugg, uint32_t tick, uint32_t period)
{
 8003118:	b580      	push	{r7, lr}
 800311a:	b084      	sub	sp, #16
 800311c:	af00      	add	r7, sp, #0
 800311e:	60f8      	str	r0, [r7, #12]
 8003120:	60b9      	str	r1, [r7, #8]
 8003122:	607a      	str	r2, [r7, #4]
 8003124:	603b      	str	r3, [r7, #0]
	static float gamma=0;
	static uint32_t ccr_rear_prev=0;
	static uint32_t ccr_front_prev=0;
	static uint32_t tick_prev=0;

	if(line_track_task_tick>tick) return;
 8003126:	4bb2      	ldr	r3, [pc, #712]	; (80033f0 <Line_Track_Task+0x2d8>)
 8003128:	681b      	ldr	r3, [r3, #0]
 800312a:	687a      	ldr	r2, [r7, #4]
 800312c:	429a      	cmp	r2, r3
 800312e:	f0c0 824f 	bcc.w	80035d0 <Line_Track_Task+0x4b8>
	line_track_task_tick = tick + period;
 8003132:	687a      	ldr	r2, [r7, #4]
 8003134:	683b      	ldr	r3, [r7, #0]
 8003136:	4413      	add	r3, r2
 8003138:	4aad      	ldr	r2, [pc, #692]	; (80033f0 <Line_Track_Task+0x2d8>)
 800313a:	6013      	str	r3, [r2, #0]

	if(mode == SKILL)
 800313c:	4bad      	ldr	r3, [pc, #692]	; (80033f4 <Line_Track_Task+0x2dc>)
 800313e:	781b      	ldrb	r3, [r3, #0]
 8003140:	2b52      	cmp	r3, #82	; 0x52
 8003142:	f040 81a0 	bne.w	8003486 <Line_Track_Task+0x36e>
	{
		//if(orientation==FORWARD) //ELŐREMENET
		if(orientation==FORWARD)
 8003146:	4bac      	ldr	r3, [pc, #688]	; (80033f8 <Line_Track_Task+0x2e0>)
 8003148:	781b      	ldrb	r3, [r3, #0]
 800314a:	2b00      	cmp	r3, #0
 800314c:	f040 80a0 	bne.w	8003290 <Line_Track_Task+0x178>
				if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
				gamma = Skill_Mode(huart_debugg, -0.004, -0.05, tick);
			}
			HAL_UART_Transmit_IT(huart_stm, txBuf, 1);//elindítom a következő olvasást egy CMD parancs kiküldésével
			*/
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_FORWARD))return;
 8003150:	2239      	movs	r2, #57	; 0x39
 8003152:	68b9      	ldr	r1, [r7, #8]
 8003154:	68f8      	ldr	r0, [r7, #12]
 8003156:	f7ff ffa5 	bl	80030a4 <G0_Read_Skill>
 800315a:	4603      	mov	r3, r0
 800315c:	2b00      	cmp	r3, #0
 800315e:	f040 8239 	bne.w	80035d4 <Line_Track_Task+0x4bc>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 8003162:	4ba6      	ldr	r3, [pc, #664]	; (80033fc <Line_Track_Task+0x2e4>)
 8003164:	785b      	ldrb	r3, [r3, #1]
 8003166:	2b00      	cmp	r3, #0
 8003168:	f000 8236 	beq.w	80035d8 <Line_Track_Task+0x4c0>
 800316c:	4ba3      	ldr	r3, [pc, #652]	; (80033fc <Line_Track_Task+0x2e4>)
 800316e:	785b      	ldrb	r3, [r3, #1]
 8003170:	2b04      	cmp	r3, #4
 8003172:	f200 8231 	bhi.w	80035d8 <Line_Track_Task+0x4c0>
			v_ref=1100;
 8003176:	4ba2      	ldr	r3, [pc, #648]	; (8003400 <Line_Track_Task+0x2e8>)
 8003178:	4aa2      	ldr	r2, [pc, #648]	; (8003404 <Line_Track_Task+0x2ec>)
 800317a:	601a      	str	r2, [r3, #0]
			Detect_Node3(huart_debugg, tick);
 800317c:	6879      	ldr	r1, [r7, #4]
 800317e:	68b8      	ldr	r0, [r7, #8]
 8003180:	f7ff fc14 	bl	80029ac <Detect_Node3>
			gamma = Skill_Mode(huart_debugg, -0.004, -0.05*8/(tick-tick_prev), tick);
 8003184:	4ba0      	ldr	r3, [pc, #640]	; (8003408 <Line_Track_Task+0x2f0>)
 8003186:	681b      	ldr	r3, [r3, #0]
 8003188:	687a      	ldr	r2, [r7, #4]
 800318a:	1ad3      	subs	r3, r2, r3
 800318c:	4618      	mov	r0, r3
 800318e:	f7fd f9d9 	bl	8000544 <__aeabi_ui2d>
 8003192:	4602      	mov	r2, r0
 8003194:	460b      	mov	r3, r1
 8003196:	a18e      	add	r1, pc, #568	; (adr r1, 80033d0 <Line_Track_Task+0x2b8>)
 8003198:	e9d1 0100 	ldrd	r0, r1, [r1]
 800319c:	f7fd fb76 	bl	800088c <__aeabi_ddiv>
 80031a0:	4602      	mov	r2, r0
 80031a2:	460b      	mov	r3, r1
 80031a4:	4610      	mov	r0, r2
 80031a6:	4619      	mov	r1, r3
 80031a8:	f7fd fd1e 	bl	8000be8 <__aeabi_d2f>
 80031ac:	4603      	mov	r3, r0
 80031ae:	6879      	ldr	r1, [r7, #4]
 80031b0:	ee00 3a90 	vmov	s1, r3
 80031b4:	ed9f 0a95 	vldr	s0, [pc, #596]	; 800340c <Line_Track_Task+0x2f4>
 80031b8:	68b8      	ldr	r0, [r7, #8]
 80031ba:	f7ff fa55 	bl	8002668 <Skill_Mode>
 80031be:	eef0 7a40 	vmov.f32	s15, s0
 80031c2:	4b93      	ldr	r3, [pc, #588]	; (8003410 <Line_Track_Task+0x2f8>)
 80031c4:	edc3 7a00 	vstr	s15, [r3]

			PHI = atan((L/(L+D_FRONT))*tan(gamma));
 80031c8:	4b91      	ldr	r3, [pc, #580]	; (8003410 <Line_Track_Task+0x2f8>)
 80031ca:	681b      	ldr	r3, [r3, #0]
 80031cc:	4618      	mov	r0, r3
 80031ce:	f7fd f9db 	bl	8000588 <__aeabi_f2d>
 80031d2:	4602      	mov	r2, r0
 80031d4:	460b      	mov	r3, r1
 80031d6:	ec43 2b10 	vmov	d0, r2, r3
 80031da:	f00a ff4d 	bl	800e078 <tan>
 80031de:	ec51 0b10 	vmov	r0, r1, d0
 80031e2:	a37d      	add	r3, pc, #500	; (adr r3, 80033d8 <Line_Track_Task+0x2c0>)
 80031e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80031e8:	f7fd fa26 	bl	8000638 <__aeabi_dmul>
 80031ec:	4602      	mov	r2, r0
 80031ee:	460b      	mov	r3, r1
 80031f0:	ec43 2b17 	vmov	d7, r2, r3
 80031f4:	eeb0 0a47 	vmov.f32	s0, s14
 80031f8:	eef0 0a67 	vmov.f32	s1, s15
 80031fc:	f00a fd90 	bl	800dd20 <atan>
 8003200:	ec53 2b10 	vmov	r2, r3, d0
 8003204:	4610      	mov	r0, r2
 8003206:	4619      	mov	r1, r3
 8003208:	f7fd fcee 	bl	8000be8 <__aeabi_d2f>
 800320c:	4603      	mov	r3, r0
 800320e:	4a81      	ldr	r2, [pc, #516]	; (8003414 <Line_Track_Task+0x2fc>)
 8003210:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(-1470 * PHI + SERVO_FRONT_CCR_MIDDLE);//balra kanyarodás
 8003212:	4b80      	ldr	r3, [pc, #512]	; (8003414 <Line_Track_Task+0x2fc>)
 8003214:	edd3 7a00 	vldr	s15, [r3]
 8003218:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 8003418 <Line_Track_Task+0x300>
 800321c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003220:	ed9f 7a7e 	vldr	s14, [pc, #504]	; 800341c <Line_Track_Task+0x304>
 8003224:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003228:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800322c:	ee17 3a90 	vmov	r3, s15
 8003230:	b29b      	uxth	r3, r3
 8003232:	461a      	mov	r2, r3
 8003234:	4b7a      	ldr	r3, [pc, #488]	; (8003420 <Line_Track_Task+0x308>)
 8003236:	601a      	str	r2, [r3, #0]
			if(ccr > CCR_FRONT_MAX)//ne feszítsük neki a mechanikai határnak a szervót
 8003238:	4b79      	ldr	r3, [pc, #484]	; (8003420 <Line_Track_Task+0x308>)
 800323a:	681b      	ldr	r3, [r3, #0]
 800323c:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8003240:	dd04      	ble.n	800324c <Line_Track_Task+0x134>
			{
				ccr = CCR_FRONT_MAX;
 8003242:	4b77      	ldr	r3, [pc, #476]	; (8003420 <Line_Track_Task+0x308>)
 8003244:	f44f 7261 	mov.w	r2, #900	; 0x384
 8003248:	601a      	str	r2, [r3, #0]
 800324a:	e008      	b.n	800325e <Line_Track_Task+0x146>
			}
			else if(ccr < CCR_FRONT_MIN)//egyik irányba se
 800324c:	4b74      	ldr	r3, [pc, #464]	; (8003420 <Line_Track_Task+0x308>)
 800324e:	681b      	ldr	r3, [r3, #0]
 8003250:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8003254:	da03      	bge.n	800325e <Line_Track_Task+0x146>
			{
				ccr = CCR_FRONT_MIN;
 8003256:	4b72      	ldr	r3, [pc, #456]	; (8003420 <Line_Track_Task+0x308>)
 8003258:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 800325c:	601a      	str	r2, [r3, #0]
			}
			TIM2->CCR1 = ccr;
 800325e:	4b70      	ldr	r3, [pc, #448]	; (8003420 <Line_Track_Task+0x308>)
 8003260:	681a      	ldr	r2, [r3, #0]
 8003262:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003266:	635a      	str	r2, [r3, #52]	; 0x34
			ccr_front_prev= ccr;
 8003268:	4b6d      	ldr	r3, [pc, #436]	; (8003420 <Line_Track_Task+0x308>)
 800326a:	681b      	ldr	r3, [r3, #0]
 800326c:	461a      	mov	r2, r3
 800326e:	4b6d      	ldr	r3, [pc, #436]	; (8003424 <Line_Track_Task+0x30c>)
 8003270:	601a      	str	r2, [r3, #0]
			if(ccr_rear_prev!=SERVO_REAR_CCR_MIDDLE) TIM1->CCR4 = SERVO_REAR_CCR_MIDDLE;
 8003272:	4b6d      	ldr	r3, [pc, #436]	; (8003428 <Line_Track_Task+0x310>)
 8003274:	681b      	ldr	r3, [r3, #0]
 8003276:	f240 22b2 	movw	r2, #690	; 0x2b2
 800327a:	4293      	cmp	r3, r2
 800327c:	d003      	beq.n	8003286 <Line_Track_Task+0x16e>
 800327e:	4b6b      	ldr	r3, [pc, #428]	; (800342c <Line_Track_Task+0x314>)
 8003280:	f240 22b2 	movw	r2, #690	; 0x2b2
 8003284:	641a      	str	r2, [r3, #64]	; 0x40
			ccr_rear_prev=SERVO_REAR_CCR_MIDDLE;
 8003286:	4b68      	ldr	r3, [pc, #416]	; (8003428 <Line_Track_Task+0x310>)
 8003288:	f240 22b2 	movw	r2, #690	; 0x2b2
 800328c:	601a      	str	r2, [r3, #0]
 800328e:	e19b      	b.n	80035c8 <Line_Track_Task+0x4b0>
		}
		else if(orientation==REVERSE)//TOLATÁS
 8003290:	4b59      	ldr	r3, [pc, #356]	; (80033f8 <Line_Track_Task+0x2e0>)
 8003292:	781b      	ldrb	r3, [r3, #0]
 8003294:	2b01      	cmp	r3, #1
 8003296:	f040 8197 	bne.w	80035c8 <Line_Track_Task+0x4b0>
				gamma = Skill_Mode(huart_debugg, 0.005, 0.12, tick);

			}
			HAL_UART_Transmit_IT(huart_stm, txBuf, 1);//elindítom a következő olvasást egy CMD parancs kiküldésével
			*/
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_REVERSE))return;
 800329a:	2291      	movs	r2, #145	; 0x91
 800329c:	68b9      	ldr	r1, [r7, #8]
 800329e:	68f8      	ldr	r0, [r7, #12]
 80032a0:	f7ff ff00 	bl	80030a4 <G0_Read_Skill>
 80032a4:	4603      	mov	r3, r0
 80032a6:	2b00      	cmp	r3, #0
 80032a8:	f040 8198 	bne.w	80035dc <Line_Track_Task+0x4c4>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 80032ac:	4b53      	ldr	r3, [pc, #332]	; (80033fc <Line_Track_Task+0x2e4>)
 80032ae:	785b      	ldrb	r3, [r3, #1]
 80032b0:	2b00      	cmp	r3, #0
 80032b2:	f000 8195 	beq.w	80035e0 <Line_Track_Task+0x4c8>
 80032b6:	4b51      	ldr	r3, [pc, #324]	; (80033fc <Line_Track_Task+0x2e4>)
 80032b8:	785b      	ldrb	r3, [r3, #1]
 80032ba:	2b04      	cmp	r3, #4
 80032bc:	f200 8190 	bhi.w	80035e0 <Line_Track_Task+0x4c8>
			v_ref=-900;
 80032c0:	4b4f      	ldr	r3, [pc, #316]	; (8003400 <Line_Track_Task+0x2e8>)
 80032c2:	4a5b      	ldr	r2, [pc, #364]	; (8003430 <Line_Track_Task+0x318>)
 80032c4:	601a      	str	r2, [r3, #0]
			Detect_Node3(huart_debugg, tick);
 80032c6:	6879      	ldr	r1, [r7, #4]
 80032c8:	68b8      	ldr	r0, [r7, #8]
 80032ca:	f7ff fb6f 	bl	80029ac <Detect_Node3>

			gamma = Skill_Mode(huart_debugg, 0.0047, 0.127*8/(tick-tick_prev), tick);
 80032ce:	4b4e      	ldr	r3, [pc, #312]	; (8003408 <Line_Track_Task+0x2f0>)
 80032d0:	681b      	ldr	r3, [r3, #0]
 80032d2:	687a      	ldr	r2, [r7, #4]
 80032d4:	1ad3      	subs	r3, r2, r3
 80032d6:	4618      	mov	r0, r3
 80032d8:	f7fd f934 	bl	8000544 <__aeabi_ui2d>
 80032dc:	4602      	mov	r2, r0
 80032de:	460b      	mov	r3, r1
 80032e0:	a13f      	add	r1, pc, #252	; (adr r1, 80033e0 <Line_Track_Task+0x2c8>)
 80032e2:	e9d1 0100 	ldrd	r0, r1, [r1]
 80032e6:	f7fd fad1 	bl	800088c <__aeabi_ddiv>
 80032ea:	4602      	mov	r2, r0
 80032ec:	460b      	mov	r3, r1
 80032ee:	4610      	mov	r0, r2
 80032f0:	4619      	mov	r1, r3
 80032f2:	f7fd fc79 	bl	8000be8 <__aeabi_d2f>
 80032f6:	4603      	mov	r3, r0
 80032f8:	6879      	ldr	r1, [r7, #4]
 80032fa:	ee00 3a90 	vmov	s1, r3
 80032fe:	ed9f 0a4d 	vldr	s0, [pc, #308]	; 8003434 <Line_Track_Task+0x31c>
 8003302:	68b8      	ldr	r0, [r7, #8]
 8003304:	f7ff f9b0 	bl	8002668 <Skill_Mode>
 8003308:	eef0 7a40 	vmov.f32	s15, s0
 800330c:	4b40      	ldr	r3, [pc, #256]	; (8003410 <Line_Track_Task+0x2f8>)
 800330e:	edc3 7a00 	vstr	s15, [r3]
			PHI = atan((L/(L+D_REAR))*tan(gamma));////////////////////kiszámolni kézzel
 8003312:	4b3f      	ldr	r3, [pc, #252]	; (8003410 <Line_Track_Task+0x2f8>)
 8003314:	681b      	ldr	r3, [r3, #0]
 8003316:	4618      	mov	r0, r3
 8003318:	f7fd f936 	bl	8000588 <__aeabi_f2d>
 800331c:	4602      	mov	r2, r0
 800331e:	460b      	mov	r3, r1
 8003320:	ec43 2b10 	vmov	d0, r2, r3
 8003324:	f00a fea8 	bl	800e078 <tan>
 8003328:	ec51 0b10 	vmov	r0, r1, d0
 800332c:	a32e      	add	r3, pc, #184	; (adr r3, 80033e8 <Line_Track_Task+0x2d0>)
 800332e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003332:	f7fd f981 	bl	8000638 <__aeabi_dmul>
 8003336:	4602      	mov	r2, r0
 8003338:	460b      	mov	r3, r1
 800333a:	ec43 2b17 	vmov	d7, r2, r3
 800333e:	eeb0 0a47 	vmov.f32	s0, s14
 8003342:	eef0 0a67 	vmov.f32	s1, s15
 8003346:	f00a fceb 	bl	800dd20 <atan>
 800334a:	ec53 2b10 	vmov	r2, r3, d0
 800334e:	4610      	mov	r0, r2
 8003350:	4619      	mov	r1, r3
 8003352:	f7fd fc49 	bl	8000be8 <__aeabi_d2f>
 8003356:	4603      	mov	r3, r0
 8003358:	4a2e      	ldr	r2, [pc, #184]	; (8003414 <Line_Track_Task+0x2fc>)
 800335a:	6013      	str	r3, [r2, #0]
			if(PHI>0)ccr = (uint16_t)(1260 * PHI + SERVO_REAR_CCR_MIDDLE);
 800335c:	4b2d      	ldr	r3, [pc, #180]	; (8003414 <Line_Track_Task+0x2fc>)
 800335e:	edd3 7a00 	vldr	s15, [r3]
 8003362:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8003366:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800336a:	dd13      	ble.n	8003394 <Line_Track_Task+0x27c>
 800336c:	4b29      	ldr	r3, [pc, #164]	; (8003414 <Line_Track_Task+0x2fc>)
 800336e:	edd3 7a00 	vldr	s15, [r3]
 8003372:	ed9f 7a31 	vldr	s14, [pc, #196]	; 8003438 <Line_Track_Task+0x320>
 8003376:	ee67 7a87 	vmul.f32	s15, s15, s14
 800337a:	ed9f 7a30 	vldr	s14, [pc, #192]	; 800343c <Line_Track_Task+0x324>
 800337e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003382:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003386:	ee17 3a90 	vmov	r3, s15
 800338a:	b29b      	uxth	r3, r3
 800338c:	461a      	mov	r2, r3
 800338e:	4b24      	ldr	r3, [pc, #144]	; (8003420 <Line_Track_Task+0x308>)
 8003390:	601a      	str	r2, [r3, #0]
 8003392:	e012      	b.n	80033ba <Line_Track_Task+0x2a2>
			else ccr = (uint16_t)(1311 * PHI + SERVO_REAR_CCR_MIDDLE);
 8003394:	4b1f      	ldr	r3, [pc, #124]	; (8003414 <Line_Track_Task+0x2fc>)
 8003396:	edd3 7a00 	vldr	s15, [r3]
 800339a:	ed9f 7a29 	vldr	s14, [pc, #164]	; 8003440 <Line_Track_Task+0x328>
 800339e:	ee67 7a87 	vmul.f32	s15, s15, s14
 80033a2:	ed9f 7a26 	vldr	s14, [pc, #152]	; 800343c <Line_Track_Task+0x324>
 80033a6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80033aa:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80033ae:	ee17 3a90 	vmov	r3, s15
 80033b2:	b29b      	uxth	r3, r3
 80033b4:	461a      	mov	r2, r3
 80033b6:	4b1a      	ldr	r3, [pc, #104]	; (8003420 <Line_Track_Task+0x308>)
 80033b8:	601a      	str	r2, [r3, #0]
			//HÁTSÓ SZERVÓ
			if(ccr > CCR_REAR_MAX)//ne feszítsük neki a mechanikai határnak a szervót
 80033ba:	4b19      	ldr	r3, [pc, #100]	; (8003420 <Line_Track_Task+0x308>)
 80033bc:	681b      	ldr	r3, [r3, #0]
 80033be:	f240 327a 	movw	r2, #890	; 0x37a
 80033c2:	4293      	cmp	r3, r2
 80033c4:	dd3e      	ble.n	8003444 <Line_Track_Task+0x32c>
			{
				ccr = CCR_REAR_MAX;
 80033c6:	4b16      	ldr	r3, [pc, #88]	; (8003420 <Line_Track_Task+0x308>)
 80033c8:	f240 327a 	movw	r2, #890	; 0x37a
 80033cc:	601a      	str	r2, [r3, #0]
 80033ce:	e042      	b.n	8003456 <Line_Track_Task+0x33e>
 80033d0:	9999999a 	.word	0x9999999a
 80033d4:	bfd99999 	.word	0xbfd99999
 80033d8:	c4830201 	.word	0xc4830201
 80033dc:	3fe73a26 	.word	0x3fe73a26
 80033e0:	374bc6a8 	.word	0x374bc6a8
 80033e4:	3ff04189 	.word	0x3ff04189
 80033e8:	a3f47e90 	.word	0xa3f47e90
 80033ec:	3fe8fd1f 	.word	0x3fe8fd1f
 80033f0:	20000024 	.word	0x20000024
 80033f4:	2000026e 	.word	0x2000026e
 80033f8:	20000279 	.word	0x20000279
 80033fc:	200005a0 	.word	0x200005a0
 8003400:	20000270 	.word	0x20000270
 8003404:	44898000 	.word	0x44898000
 8003408:	200005ac 	.word	0x200005ac
 800340c:	bb83126f 	.word	0xbb83126f
 8003410:	200005b0 	.word	0x200005b0
 8003414:	200005b4 	.word	0x200005b4
 8003418:	c4b7c000 	.word	0xc4b7c000
 800341c:	442d0000 	.word	0x442d0000
 8003420:	20000028 	.word	0x20000028
 8003424:	200005b8 	.word	0x200005b8
 8003428:	200005bc 	.word	0x200005bc
 800342c:	40010000 	.word	0x40010000
 8003430:	c4610000 	.word	0xc4610000
 8003434:	3b9a0275 	.word	0x3b9a0275
 8003438:	449d8000 	.word	0x449d8000
 800343c:	442c8000 	.word	0x442c8000
 8003440:	44a3e000 	.word	0x44a3e000
			}
			else if(ccr < CCR_REAR_MIN)//egyik irányba se
 8003444:	4b6c      	ldr	r3, [pc, #432]	; (80035f8 <Line_Track_Task+0x4e0>)
 8003446:	681b      	ldr	r3, [r3, #0]
 8003448:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 800344c:	da03      	bge.n	8003456 <Line_Track_Task+0x33e>
			{
				ccr = CCR_REAR_MIN;
 800344e:	4b6a      	ldr	r3, [pc, #424]	; (80035f8 <Line_Track_Task+0x4e0>)
 8003450:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8003454:	601a      	str	r2, [r3, #0]
			}
			TIM1->CCR4 = ccr;
 8003456:	4b68      	ldr	r3, [pc, #416]	; (80035f8 <Line_Track_Task+0x4e0>)
 8003458:	681a      	ldr	r2, [r3, #0]
 800345a:	4b68      	ldr	r3, [pc, #416]	; (80035fc <Line_Track_Task+0x4e4>)
 800345c:	641a      	str	r2, [r3, #64]	; 0x40
			ccr_rear_prev=ccr;
 800345e:	4b66      	ldr	r3, [pc, #408]	; (80035f8 <Line_Track_Task+0x4e0>)
 8003460:	681b      	ldr	r3, [r3, #0]
 8003462:	461a      	mov	r2, r3
 8003464:	4b66      	ldr	r3, [pc, #408]	; (8003600 <Line_Track_Task+0x4e8>)
 8003466:	601a      	str	r2, [r3, #0]
			if(ccr_front_prev!=SERVO_FRONT_CCR_MIDDLE) TIM2->CCR1 = SERVO_FRONT_CCR_MIDDLE;
 8003468:	4b66      	ldr	r3, [pc, #408]	; (8003604 <Line_Track_Task+0x4ec>)
 800346a:	681b      	ldr	r3, [r3, #0]
 800346c:	f5b3 7f2d 	cmp.w	r3, #692	; 0x2b4
 8003470:	d004      	beq.n	800347c <Line_Track_Task+0x364>
 8003472:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003476:	f44f 722d 	mov.w	r2, #692	; 0x2b4
 800347a:	635a      	str	r2, [r3, #52]	; 0x34
			ccr_front_prev=SERVO_FRONT_CCR_MIDDLE;
 800347c:	4b61      	ldr	r3, [pc, #388]	; (8003604 <Line_Track_Task+0x4ec>)
 800347e:	f44f 722d 	mov.w	r2, #692	; 0x2b4
 8003482:	601a      	str	r2, [r3, #0]
 8003484:	e0a0      	b.n	80035c8 <Line_Track_Task+0x4b0>
		}

	}
	/*****Gyorsasági pálya üzemmód******/
	else if(mode == FAST)
 8003486:	4b60      	ldr	r3, [pc, #384]	; (8003608 <Line_Track_Task+0x4f0>)
 8003488:	781b      	ldrb	r3, [r3, #0]
 800348a:	2b3f      	cmp	r3, #63	; 0x3f
 800348c:	f040 809c 	bne.w	80035c8 <Line_Track_Task+0x4b0>
	{
		if(G0_Read_Fast(huart_stm, huart_debugg)) return; //ha sikertelen az olvasás a G0 ból akkor nincs értelme az egésznek
 8003490:	68b9      	ldr	r1, [r7, #8]
 8003492:	68f8      	ldr	r0, [r7, #12]
 8003494:	f7ff fdd2 	bl	800303c <G0_Read_Fast>
 8003498:	4603      	mov	r3, r0
 800349a:	2b00      	cmp	r3, #0
 800349c:	f040 80a2 	bne.w	80035e4 <Line_Track_Task+0x4cc>
		if (LINE_CNT<1 || LINE_CNT > 3) return;//ha nincs vonal a kocsi alatt
 80034a0:	4b5a      	ldr	r3, [pc, #360]	; (800360c <Line_Track_Task+0x4f4>)
 80034a2:	785b      	ldrb	r3, [r3, #1]
 80034a4:	2b00      	cmp	r3, #0
 80034a6:	f000 809f 	beq.w	80035e8 <Line_Track_Task+0x4d0>
 80034aa:	4b58      	ldr	r3, [pc, #352]	; (800360c <Line_Track_Task+0x4f4>)
 80034ac:	785b      	ldrb	r3, [r3, #1]
 80034ae:	2b03      	cmp	r3, #3
 80034b0:	f200 809a 	bhi.w	80035e8 <Line_Track_Task+0x4d0>
		gamma = Fast_Mode(huart_debugg,tick);
 80034b4:	6879      	ldr	r1, [r7, #4]
 80034b6:	68b8      	ldr	r0, [r7, #8]
 80034b8:	f000 f8ba 	bl	8003630 <Fast_Mode>
 80034bc:	eef0 7a40 	vmov.f32	s15, s0
 80034c0:	4b53      	ldr	r3, [pc, #332]	; (8003610 <Line_Track_Task+0x4f8>)
 80034c2:	edc3 7a00 	vstr	s15, [r3]
		PHI = atan((L/(L+D_FRONT))*tan(gamma));
 80034c6:	4b52      	ldr	r3, [pc, #328]	; (8003610 <Line_Track_Task+0x4f8>)
 80034c8:	681b      	ldr	r3, [r3, #0]
 80034ca:	4618      	mov	r0, r3
 80034cc:	f7fd f85c 	bl	8000588 <__aeabi_f2d>
 80034d0:	4602      	mov	r2, r0
 80034d2:	460b      	mov	r3, r1
 80034d4:	ec43 2b10 	vmov	d0, r2, r3
 80034d8:	f00a fdce 	bl	800e078 <tan>
 80034dc:	ec51 0b10 	vmov	r0, r1, d0
 80034e0:	a343      	add	r3, pc, #268	; (adr r3, 80035f0 <Line_Track_Task+0x4d8>)
 80034e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80034e6:	f7fd f8a7 	bl	8000638 <__aeabi_dmul>
 80034ea:	4602      	mov	r2, r0
 80034ec:	460b      	mov	r3, r1
 80034ee:	ec43 2b17 	vmov	d7, r2, r3
 80034f2:	eeb0 0a47 	vmov.f32	s0, s14
 80034f6:	eef0 0a67 	vmov.f32	s1, s15
 80034fa:	f00a fc11 	bl	800dd20 <atan>
 80034fe:	ec53 2b10 	vmov	r2, r3, d0
 8003502:	4610      	mov	r0, r2
 8003504:	4619      	mov	r1, r3
 8003506:	f7fd fb6f 	bl	8000be8 <__aeabi_d2f>
 800350a:	4603      	mov	r3, r0
 800350c:	4a41      	ldr	r2, [pc, #260]	; (8003614 <Line_Track_Task+0x4fc>)
 800350e:	6013      	str	r3, [r2, #0]
		if(v>2000) ccr = (uint16_t)(-SERVO_M_STRAIGHT * PHI + SERVO_FRONT_CCR_MIDDLE);
 8003510:	4b41      	ldr	r3, [pc, #260]	; (8003618 <Line_Track_Task+0x500>)
 8003512:	edd3 7a00 	vldr	s15, [r3]
 8003516:	ed9f 7a41 	vldr	s14, [pc, #260]	; 800361c <Line_Track_Task+0x504>
 800351a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800351e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003522:	dd13      	ble.n	800354c <Line_Track_Task+0x434>
 8003524:	4b3b      	ldr	r3, [pc, #236]	; (8003614 <Line_Track_Task+0x4fc>)
 8003526:	edd3 7a00 	vldr	s15, [r3]
 800352a:	ed9f 7a3d 	vldr	s14, [pc, #244]	; 8003620 <Line_Track_Task+0x508>
 800352e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003532:	ed9f 7a3c 	vldr	s14, [pc, #240]	; 8003624 <Line_Track_Task+0x50c>
 8003536:	ee77 7a87 	vadd.f32	s15, s15, s14
 800353a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800353e:	ee17 3a90 	vmov	r3, s15
 8003542:	b29b      	uxth	r3, r3
 8003544:	461a      	mov	r2, r3
 8003546:	4b2c      	ldr	r3, [pc, #176]	; (80035f8 <Line_Track_Task+0x4e0>)
 8003548:	601a      	str	r2, [r3, #0]
 800354a:	e012      	b.n	8003572 <Line_Track_Task+0x45a>
		else ccr =(uint16_t)(-SERVO_M_CORNER * PHI + SERVO_FRONT_CCR_MIDDLE);
 800354c:	4b31      	ldr	r3, [pc, #196]	; (8003614 <Line_Track_Task+0x4fc>)
 800354e:	edd3 7a00 	vldr	s15, [r3]
 8003552:	ed9f 7a35 	vldr	s14, [pc, #212]	; 8003628 <Line_Track_Task+0x510>
 8003556:	ee67 7a87 	vmul.f32	s15, s15, s14
 800355a:	ed9f 7a32 	vldr	s14, [pc, #200]	; 8003624 <Line_Track_Task+0x50c>
 800355e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003562:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003566:	ee17 3a90 	vmov	r3, s15
 800356a:	b29b      	uxth	r3, r3
 800356c:	461a      	mov	r2, r3
 800356e:	4b22      	ldr	r3, [pc, #136]	; (80035f8 <Line_Track_Task+0x4e0>)
 8003570:	601a      	str	r2, [r3, #0]
		if(ccr > CCR_FRONT_MAX)//ne feszítsük neki a mechanikai határnak a szervót
 8003572:	4b21      	ldr	r3, [pc, #132]	; (80035f8 <Line_Track_Task+0x4e0>)
 8003574:	681b      	ldr	r3, [r3, #0]
 8003576:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 800357a:	dd04      	ble.n	8003586 <Line_Track_Task+0x46e>
		{
			ccr = CCR_FRONT_MAX;
 800357c:	4b1e      	ldr	r3, [pc, #120]	; (80035f8 <Line_Track_Task+0x4e0>)
 800357e:	f44f 7261 	mov.w	r2, #900	; 0x384
 8003582:	601a      	str	r2, [r3, #0]
 8003584:	e008      	b.n	8003598 <Line_Track_Task+0x480>
		}
		else if(ccr < CCR_FRONT_MIN)//egyik irányba se
 8003586:	4b1c      	ldr	r3, [pc, #112]	; (80035f8 <Line_Track_Task+0x4e0>)
 8003588:	681b      	ldr	r3, [r3, #0]
 800358a:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 800358e:	da03      	bge.n	8003598 <Line_Track_Task+0x480>
		{
			ccr = CCR_FRONT_MIN;
 8003590:	4b19      	ldr	r3, [pc, #100]	; (80035f8 <Line_Track_Task+0x4e0>)
 8003592:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8003596:	601a      	str	r2, [r3, #0]
		}
		TIM2->CCR1 = ccr;
 8003598:	4b17      	ldr	r3, [pc, #92]	; (80035f8 <Line_Track_Task+0x4e0>)
 800359a:	681a      	ldr	r2, [r3, #0]
 800359c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80035a0:	635a      	str	r2, [r3, #52]	; 0x34
		ccr_front_prev= ccr;
 80035a2:	4b15      	ldr	r3, [pc, #84]	; (80035f8 <Line_Track_Task+0x4e0>)
 80035a4:	681b      	ldr	r3, [r3, #0]
 80035a6:	461a      	mov	r2, r3
 80035a8:	4b16      	ldr	r3, [pc, #88]	; (8003604 <Line_Track_Task+0x4ec>)
 80035aa:	601a      	str	r2, [r3, #0]
		if(ccr_rear_prev!=SERVO_REAR_CCR_MIDDLE) TIM1->CCR4 = SERVO_REAR_CCR_MIDDLE;
 80035ac:	4b14      	ldr	r3, [pc, #80]	; (8003600 <Line_Track_Task+0x4e8>)
 80035ae:	681b      	ldr	r3, [r3, #0]
 80035b0:	f240 22b2 	movw	r2, #690	; 0x2b2
 80035b4:	4293      	cmp	r3, r2
 80035b6:	d003      	beq.n	80035c0 <Line_Track_Task+0x4a8>
 80035b8:	4b10      	ldr	r3, [pc, #64]	; (80035fc <Line_Track_Task+0x4e4>)
 80035ba:	f240 22b2 	movw	r2, #690	; 0x2b2
 80035be:	641a      	str	r2, [r3, #64]	; 0x40
		ccr_rear_prev=SERVO_REAR_CCR_MIDDLE;
 80035c0:	4b0f      	ldr	r3, [pc, #60]	; (8003600 <Line_Track_Task+0x4e8>)
 80035c2:	f240 22b2 	movw	r2, #690	; 0x2b2
 80035c6:	601a      	str	r2, [r3, #0]
	}

	tick_prev=tick;
 80035c8:	4a18      	ldr	r2, [pc, #96]	; (800362c <Line_Track_Task+0x514>)
 80035ca:	687b      	ldr	r3, [r7, #4]
 80035cc:	6013      	str	r3, [r2, #0]
 80035ce:	e00c      	b.n	80035ea <Line_Track_Task+0x4d2>
	if(line_track_task_tick>tick) return;
 80035d0:	bf00      	nop
 80035d2:	e00a      	b.n	80035ea <Line_Track_Task+0x4d2>
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_FORWARD))return;
 80035d4:	bf00      	nop
 80035d6:	e008      	b.n	80035ea <Line_Track_Task+0x4d2>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 80035d8:	bf00      	nop
 80035da:	e006      	b.n	80035ea <Line_Track_Task+0x4d2>
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_REVERSE))return;
 80035dc:	bf00      	nop
 80035de:	e004      	b.n	80035ea <Line_Track_Task+0x4d2>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 80035e0:	bf00      	nop
 80035e2:	e002      	b.n	80035ea <Line_Track_Task+0x4d2>
		if(G0_Read_Fast(huart_stm, huart_debugg)) return; //ha sikertelen az olvasás a G0 ból akkor nincs értelme az egésznek
 80035e4:	bf00      	nop
 80035e6:	e000      	b.n	80035ea <Line_Track_Task+0x4d2>
		if (LINE_CNT<1 || LINE_CNT > 3) return;//ha nincs vonal a kocsi alatt
 80035e8:	bf00      	nop
}
 80035ea:	3710      	adds	r7, #16
 80035ec:	46bd      	mov	sp, r7
 80035ee:	bd80      	pop	{r7, pc}
 80035f0:	c4830201 	.word	0xc4830201
 80035f4:	3fe73a26 	.word	0x3fe73a26
 80035f8:	20000028 	.word	0x20000028
 80035fc:	40010000 	.word	0x40010000
 8003600:	200005bc 	.word	0x200005bc
 8003604:	200005b8 	.word	0x200005b8
 8003608:	2000026e 	.word	0x2000026e
 800360c:	200005a0 	.word	0x200005a0
 8003610:	200005b0 	.word	0x200005b0
 8003614:	200005b4 	.word	0x200005b4
 8003618:	20000588 	.word	0x20000588
 800361c:	44fa0000 	.word	0x44fa0000
 8003620:	c4610000 	.word	0xc4610000
 8003624:	442d0000 	.word	0x442d0000
 8003628:	c4c1c000 	.word	0xc4c1c000
 800362c:	200005ac 	.word	0x200005ac

08003630 <Fast_Mode>:

float Fast_Mode(UART_HandleTypeDef *huart_debugg, uint32_t t)
{
 8003630:	b5b0      	push	{r4, r5, r7, lr}
 8003632:	b084      	sub	sp, #16
 8003634:	af00      	add	r7, sp, #0
 8003636:	6078      	str	r0, [r7, #4]
 8003638:	6039      	str	r1, [r7, #0]
	static float delta;
	static float gamma;

	static float kD=K_D;

	uint32_t sum=0;
 800363a:	2300      	movs	r3, #0
 800363c:	60fb      	str	r3, [r7, #12]
	uint32_t dist=0;
 800363e:	2300      	movs	r3, #0
 8003640:	60bb      	str	r3, [r7, #8]


	if(swState[0] == FREERUN_MODE)
 8003642:	4b50      	ldr	r3, [pc, #320]	; (8003784 <Fast_Mode+0x154>)
 8003644:	781b      	ldrb	r3, [r3, #0]
 8003646:	2b01      	cmp	r3, #1
 8003648:	f040 8084 	bne.w	8003754 <Fast_Mode+0x124>
	{
		/*****Gyorsító jelölés figyelése (szaggatott 3 vonal)*****/
		if(LINE_CNT != lineCnt_prev && (!Free_Run_State || Free_Run_State==2) && (LINE_CNT==1 || LINE_CNT==3)) //ha változik az alattunk lévő vonalak száma
 800364c:	4b4e      	ldr	r3, [pc, #312]	; (8003788 <Fast_Mode+0x158>)
 800364e:	785a      	ldrb	r2, [r3, #1]
 8003650:	4b4e      	ldr	r3, [pc, #312]	; (800378c <Fast_Mode+0x15c>)
 8003652:	781b      	ldrb	r3, [r3, #0]
 8003654:	429a      	cmp	r2, r3
 8003656:	d056      	beq.n	8003706 <Fast_Mode+0xd6>
 8003658:	4b4d      	ldr	r3, [pc, #308]	; (8003790 <Fast_Mode+0x160>)
 800365a:	781b      	ldrb	r3, [r3, #0]
 800365c:	2b00      	cmp	r3, #0
 800365e:	d003      	beq.n	8003668 <Fast_Mode+0x38>
 8003660:	4b4b      	ldr	r3, [pc, #300]	; (8003790 <Fast_Mode+0x160>)
 8003662:	781b      	ldrb	r3, [r3, #0]
 8003664:	2b02      	cmp	r3, #2
 8003666:	d14e      	bne.n	8003706 <Fast_Mode+0xd6>
 8003668:	4b47      	ldr	r3, [pc, #284]	; (8003788 <Fast_Mode+0x158>)
 800366a:	785b      	ldrb	r3, [r3, #1]
 800366c:	2b01      	cmp	r3, #1
 800366e:	d003      	beq.n	8003678 <Fast_Mode+0x48>
 8003670:	4b45      	ldr	r3, [pc, #276]	; (8003788 <Fast_Mode+0x158>)
 8003672:	785b      	ldrb	r3, [r3, #1]
 8003674:	2b03      	cmp	r3, #3
 8003676:	d146      	bne.n	8003706 <Fast_Mode+0xd6>
		{
			dt[index] = t - t_prev;
 8003678:	4b46      	ldr	r3, [pc, #280]	; (8003794 <Fast_Mode+0x164>)
 800367a:	681b      	ldr	r3, [r3, #0]
 800367c:	4a46      	ldr	r2, [pc, #280]	; (8003798 <Fast_Mode+0x168>)
 800367e:	7812      	ldrb	r2, [r2, #0]
 8003680:	4611      	mov	r1, r2
 8003682:	683a      	ldr	r2, [r7, #0]
 8003684:	1ad3      	subs	r3, r2, r3
 8003686:	4a45      	ldr	r2, [pc, #276]	; (800379c <Fast_Mode+0x16c>)
 8003688:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
			sum=dt[0] + dt[1] + dt[2] + dt[3]+ dt[4]+dt[5] + dt[6] + dt[7];
 800368c:	4b43      	ldr	r3, [pc, #268]	; (800379c <Fast_Mode+0x16c>)
 800368e:	681a      	ldr	r2, [r3, #0]
 8003690:	4b42      	ldr	r3, [pc, #264]	; (800379c <Fast_Mode+0x16c>)
 8003692:	685b      	ldr	r3, [r3, #4]
 8003694:	441a      	add	r2, r3
 8003696:	4b41      	ldr	r3, [pc, #260]	; (800379c <Fast_Mode+0x16c>)
 8003698:	689b      	ldr	r3, [r3, #8]
 800369a:	441a      	add	r2, r3
 800369c:	4b3f      	ldr	r3, [pc, #252]	; (800379c <Fast_Mode+0x16c>)
 800369e:	68db      	ldr	r3, [r3, #12]
 80036a0:	441a      	add	r2, r3
 80036a2:	4b3e      	ldr	r3, [pc, #248]	; (800379c <Fast_Mode+0x16c>)
 80036a4:	691b      	ldr	r3, [r3, #16]
 80036a6:	441a      	add	r2, r3
 80036a8:	4b3c      	ldr	r3, [pc, #240]	; (800379c <Fast_Mode+0x16c>)
 80036aa:	695b      	ldr	r3, [r3, #20]
 80036ac:	441a      	add	r2, r3
 80036ae:	4b3b      	ldr	r3, [pc, #236]	; (800379c <Fast_Mode+0x16c>)
 80036b0:	699b      	ldr	r3, [r3, #24]
 80036b2:	441a      	add	r2, r3
 80036b4:	4b39      	ldr	r3, [pc, #228]	; (800379c <Fast_Mode+0x16c>)
 80036b6:	69db      	ldr	r3, [r3, #28]
 80036b8:	4413      	add	r3, r2
 80036ba:	60fb      	str	r3, [r7, #12]
			if((sum > 400) && (sum < 1100))
 80036bc:	68fb      	ldr	r3, [r7, #12]
 80036be:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 80036c2:	d910      	bls.n	80036e6 <Fast_Mode+0xb6>
 80036c4:	68fb      	ldr	r3, [r7, #12]
 80036c6:	f240 424b 	movw	r2, #1099	; 0x44b
 80036ca:	4293      	cmp	r3, r2
 80036cc:	d80b      	bhi.n	80036e6 <Fast_Mode+0xb6>
			{
				v_ref=5500;
 80036ce:	4b34      	ldr	r3, [pc, #208]	; (80037a0 <Fast_Mode+0x170>)
 80036d0:	4a34      	ldr	r2, [pc, #208]	; (80037a4 <Fast_Mode+0x174>)
 80036d2:	601a      	str	r2, [r3, #0]
				LED_B(1);
 80036d4:	2200      	movs	r2, #0
 80036d6:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80036da:	4833      	ldr	r0, [pc, #204]	; (80037a8 <Fast_Mode+0x178>)
 80036dc:	f003 fd7c 	bl	80071d8 <HAL_GPIO_WritePin>
				Free_Run_State=1;
 80036e0:	4b2b      	ldr	r3, [pc, #172]	; (8003790 <Fast_Mode+0x160>)
 80036e2:	2201      	movs	r2, #1
 80036e4:	701a      	strb	r2, [r3, #0]
			}
			index++;
 80036e6:	4b2c      	ldr	r3, [pc, #176]	; (8003798 <Fast_Mode+0x168>)
 80036e8:	781b      	ldrb	r3, [r3, #0]
 80036ea:	3301      	adds	r3, #1
 80036ec:	b2da      	uxtb	r2, r3
 80036ee:	4b2a      	ldr	r3, [pc, #168]	; (8003798 <Fast_Mode+0x168>)
 80036f0:	701a      	strb	r2, [r3, #0]
			if(index>7) index=0;
 80036f2:	4b29      	ldr	r3, [pc, #164]	; (8003798 <Fast_Mode+0x168>)
 80036f4:	781b      	ldrb	r3, [r3, #0]
 80036f6:	2b07      	cmp	r3, #7
 80036f8:	d902      	bls.n	8003700 <Fast_Mode+0xd0>
 80036fa:	4b27      	ldr	r3, [pc, #156]	; (8003798 <Fast_Mode+0x168>)
 80036fc:	2200      	movs	r2, #0
 80036fe:	701a      	strb	r2, [r3, #0]
			t_prev = t;
 8003700:	4a24      	ldr	r2, [pc, #144]	; (8003794 <Fast_Mode+0x164>)
 8003702:	683b      	ldr	r3, [r7, #0]
 8003704:	6013      	str	r3, [r2, #0]
		}
		/* A memóriajellegű statikus változók segítségével vizsgáljuk a szaggatott vonalat*/
		lineCnt_prev = LINE_CNT; //az előző értéket a jelenlegihez hangoljuk
 8003706:	4b20      	ldr	r3, [pc, #128]	; (8003788 <Fast_Mode+0x158>)
 8003708:	785a      	ldrb	r2, [r3, #1]
 800370a:	4b20      	ldr	r3, [pc, #128]	; (800378c <Fast_Mode+0x15c>)
 800370c:	701a      	strb	r2, [r3, #0]

		/*****Lassító jelölés figyelése (folytonos 3 vonal)*****/
		if(LINE_CNT > 1 && (!Free_Run_State || Free_Run_State==1)) //ha 3 vonalat érzékelünk
 800370e:	4b1e      	ldr	r3, [pc, #120]	; (8003788 <Fast_Mode+0x158>)
 8003710:	785b      	ldrb	r3, [r3, #1]
 8003712:	2b01      	cmp	r3, #1
 8003714:	d91a      	bls.n	800374c <Fast_Mode+0x11c>
 8003716:	4b1e      	ldr	r3, [pc, #120]	; (8003790 <Fast_Mode+0x160>)
 8003718:	781b      	ldrb	r3, [r3, #0]
 800371a:	2b00      	cmp	r3, #0
 800371c:	d003      	beq.n	8003726 <Fast_Mode+0xf6>
 800371e:	4b1c      	ldr	r3, [pc, #112]	; (8003790 <Fast_Mode+0x160>)
 8003720:	781b      	ldrb	r3, [r3, #0]
 8003722:	2b01      	cmp	r3, #1
 8003724:	d112      	bne.n	800374c <Fast_Mode+0x11c>
		{
			if(t > (start3time + BREAK_TIME_MS)) //ha már legalább BREAK_TIME_MS -idő óta folyamatosan 3 vonal van alattunk
 8003726:	4b21      	ldr	r3, [pc, #132]	; (80037ac <Fast_Mode+0x17c>)
 8003728:	681b      	ldr	r3, [r3, #0]
 800372a:	3350      	adds	r3, #80	; 0x50
 800372c:	683a      	ldr	r2, [r7, #0]
 800372e:	429a      	cmp	r2, r3
 8003730:	d952      	bls.n	80037d8 <Fast_Mode+0x1a8>
			{
				v_ref = 1600;
 8003732:	4b1b      	ldr	r3, [pc, #108]	; (80037a0 <Fast_Mode+0x170>)
 8003734:	4a1e      	ldr	r2, [pc, #120]	; (80037b0 <Fast_Mode+0x180>)
 8003736:	601a      	str	r2, [r3, #0]
				Free_Run_State=2;
 8003738:	4b15      	ldr	r3, [pc, #84]	; (8003790 <Fast_Mode+0x160>)
 800373a:	2202      	movs	r2, #2
 800373c:	701a      	strb	r2, [r3, #0]
				LED_B(0);
 800373e:	2201      	movs	r2, #1
 8003740:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8003744:	4818      	ldr	r0, [pc, #96]	; (80037a8 <Fast_Mode+0x178>)
 8003746:	f003 fd47 	bl	80071d8 <HAL_GPIO_WritePin>
			if(t > (start3time + BREAK_TIME_MS)) //ha már legalább BREAK_TIME_MS -idő óta folyamatosan 3 vonal van alattunk
 800374a:	e045      	b.n	80037d8 <Fast_Mode+0x1a8>
			}
		}
		else //ha 1 vonalat érzékelünk
		{
			start3time = t;
 800374c:	4a17      	ldr	r2, [pc, #92]	; (80037ac <Fast_Mode+0x17c>)
 800374e:	683b      	ldr	r3, [r7, #0]
 8003750:	6013      	str	r3, [r2, #0]
 8003752:	e041      	b.n	80037d8 <Fast_Mode+0x1a8>
		}
		/*****FÉKEZÉS NEGATÍV PWM-EL*******/
	}

	/*****SC üzemmód******/
	else if(swState[0]==SC_MODE)
 8003754:	4b0b      	ldr	r3, [pc, #44]	; (8003784 <Fast_Mode+0x154>)
 8003756:	781b      	ldrb	r3, [r3, #0]
 8003758:	2b00      	cmp	r3, #0
 800375a:	d13d      	bne.n	80037d8 <Fast_Mode+0x1a8>
	{
		dist=(((uint16_t)rxBuf[5])<<8) | ((uint16_t)rxBuf[6]);
 800375c:	4b0a      	ldr	r3, [pc, #40]	; (8003788 <Fast_Mode+0x158>)
 800375e:	795b      	ldrb	r3, [r3, #5]
 8003760:	021b      	lsls	r3, r3, #8
 8003762:	4a09      	ldr	r2, [pc, #36]	; (8003788 <Fast_Mode+0x158>)
 8003764:	7992      	ldrb	r2, [r2, #6]
 8003766:	4313      	orrs	r3, r2
 8003768:	60bb      	str	r3, [r7, #8]
		if(dist>1000 || rxBuf[4]) v_ref=1500; //ha tul messze vana  SC vagy érvénytelen az olvasás
 800376a:	68bb      	ldr	r3, [r7, #8]
 800376c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003770:	d803      	bhi.n	800377a <Fast_Mode+0x14a>
 8003772:	4b05      	ldr	r3, [pc, #20]	; (8003788 <Fast_Mode+0x158>)
 8003774:	791b      	ldrb	r3, [r3, #4]
 8003776:	2b00      	cmp	r3, #0
 8003778:	d020      	beq.n	80037bc <Fast_Mode+0x18c>
 800377a:	4b09      	ldr	r3, [pc, #36]	; (80037a0 <Fast_Mode+0x170>)
 800377c:	4a0d      	ldr	r2, [pc, #52]	; (80037b4 <Fast_Mode+0x184>)
 800377e:	601a      	str	r2, [r3, #0]
 8003780:	e02a      	b.n	80037d8 <Fast_Mode+0x1a8>
 8003782:	bf00      	nop
 8003784:	20000264 	.word	0x20000264
 8003788:	200005a0 	.word	0x200005a0
 800378c:	2000002c 	.word	0x2000002c
 8003790:	200005c0 	.word	0x200005c0
 8003794:	200005c4 	.word	0x200005c4
 8003798:	200005c8 	.word	0x200005c8
 800379c:	20000030 	.word	0x20000030
 80037a0:	20000270 	.word	0x20000270
 80037a4:	45abe000 	.word	0x45abe000
 80037a8:	40020400 	.word	0x40020400
 80037ac:	200005cc 	.word	0x200005cc
 80037b0:	44c80000 	.word	0x44c80000
 80037b4:	44bb8000 	.word	0x44bb8000
 80037b8:	43fa0000 	.word	0x43fa0000
		else v_ref = 2*(float)dist-500;
 80037bc:	68bb      	ldr	r3, [r7, #8]
 80037be:	ee07 3a90 	vmov	s15, r3
 80037c2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80037c6:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80037ca:	ed1f 7a05 	vldr	s14, [pc, #-20]	; 80037b8 <Fast_Mode+0x188>
 80037ce:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80037d2:	4bc1      	ldr	r3, [pc, #772]	; (8003ad8 <Fast_Mode+0x4a8>)
 80037d4:	edc3 7a00 	vstr	s15, [r3]
	}

	x_elso=(float)rxBuf[2]*204/255.0-102;//248
 80037d8:	4bc0      	ldr	r3, [pc, #768]	; (8003adc <Fast_Mode+0x4ac>)
 80037da:	789b      	ldrb	r3, [r3, #2]
 80037dc:	ee07 3a90 	vmov	s15, r3
 80037e0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80037e4:	ed9f 7abe 	vldr	s14, [pc, #760]	; 8003ae0 <Fast_Mode+0x4b0>
 80037e8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80037ec:	ee17 0a90 	vmov	r0, s15
 80037f0:	f7fc feca 	bl	8000588 <__aeabi_f2d>
 80037f4:	a3b0      	add	r3, pc, #704	; (adr r3, 8003ab8 <Fast_Mode+0x488>)
 80037f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037fa:	f7fd f847 	bl	800088c <__aeabi_ddiv>
 80037fe:	4602      	mov	r2, r0
 8003800:	460b      	mov	r3, r1
 8003802:	4610      	mov	r0, r2
 8003804:	4619      	mov	r1, r3
 8003806:	f04f 0200 	mov.w	r2, #0
 800380a:	4bb6      	ldr	r3, [pc, #728]	; (8003ae4 <Fast_Mode+0x4b4>)
 800380c:	f7fc fd5c 	bl	80002c8 <__aeabi_dsub>
 8003810:	4602      	mov	r2, r0
 8003812:	460b      	mov	r3, r1
 8003814:	4610      	mov	r0, r2
 8003816:	4619      	mov	r1, r3
 8003818:	f7fd f9e6 	bl	8000be8 <__aeabi_d2f>
 800381c:	4603      	mov	r3, r0
 800381e:	4ab2      	ldr	r2, [pc, #712]	; (8003ae8 <Fast_Mode+0x4b8>)
 8003820:	6013      	str	r3, [r2, #0]
	x_hatso=(float)rxBuf[3]*204/255.0-102; //244
 8003822:	4bae      	ldr	r3, [pc, #696]	; (8003adc <Fast_Mode+0x4ac>)
 8003824:	78db      	ldrb	r3, [r3, #3]
 8003826:	ee07 3a90 	vmov	s15, r3
 800382a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800382e:	ed9f 7aac 	vldr	s14, [pc, #688]	; 8003ae0 <Fast_Mode+0x4b0>
 8003832:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003836:	ee17 0a90 	vmov	r0, s15
 800383a:	f7fc fea5 	bl	8000588 <__aeabi_f2d>
 800383e:	a39e      	add	r3, pc, #632	; (adr r3, 8003ab8 <Fast_Mode+0x488>)
 8003840:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003844:	f7fd f822 	bl	800088c <__aeabi_ddiv>
 8003848:	4602      	mov	r2, r0
 800384a:	460b      	mov	r3, r1
 800384c:	4610      	mov	r0, r2
 800384e:	4619      	mov	r1, r3
 8003850:	f04f 0200 	mov.w	r2, #0
 8003854:	4ba3      	ldr	r3, [pc, #652]	; (8003ae4 <Fast_Mode+0x4b4>)
 8003856:	f7fc fd37 	bl	80002c8 <__aeabi_dsub>
 800385a:	4602      	mov	r2, r0
 800385c:	460b      	mov	r3, r1
 800385e:	4610      	mov	r0, r2
 8003860:	4619      	mov	r1, r3
 8003862:	f7fd f9c1 	bl	8000be8 <__aeabi_d2f>
 8003866:	4603      	mov	r3, r0
 8003868:	4aa0      	ldr	r2, [pc, #640]	; (8003aec <Fast_Mode+0x4bc>)
 800386a:	6013      	str	r3, [r2, #0]
	delta=atan((float)(x_elso-x_hatso)/L_SENSOR);
 800386c:	4b9e      	ldr	r3, [pc, #632]	; (8003ae8 <Fast_Mode+0x4b8>)
 800386e:	ed93 7a00 	vldr	s14, [r3]
 8003872:	4b9e      	ldr	r3, [pc, #632]	; (8003aec <Fast_Mode+0x4bc>)
 8003874:	edd3 7a00 	vldr	s15, [r3]
 8003878:	ee77 7a67 	vsub.f32	s15, s14, s15
 800387c:	ee17 0a90 	vmov	r0, s15
 8003880:	f7fc fe82 	bl	8000588 <__aeabi_f2d>
 8003884:	f04f 0200 	mov.w	r2, #0
 8003888:	4b99      	ldr	r3, [pc, #612]	; (8003af0 <Fast_Mode+0x4c0>)
 800388a:	f7fc ffff 	bl	800088c <__aeabi_ddiv>
 800388e:	4602      	mov	r2, r0
 8003890:	460b      	mov	r3, r1
 8003892:	ec43 2b17 	vmov	d7, r2, r3
 8003896:	eeb0 0a47 	vmov.f32	s0, s14
 800389a:	eef0 0a67 	vmov.f32	s1, s15
 800389e:	f00a fa3f 	bl	800dd20 <atan>
 80038a2:	ec53 2b10 	vmov	r2, r3, d0
 80038a6:	4610      	mov	r0, r2
 80038a8:	4619      	mov	r1, r3
 80038aa:	f7fd f99d 	bl	8000be8 <__aeabi_d2f>
 80038ae:	4603      	mov	r3, r0
 80038b0:	4a90      	ldr	r2, [pc, #576]	; (8003af4 <Fast_Mode+0x4c4>)
 80038b2:	6013      	str	r3, [r2, #0]
	/**/
	//szabályozóparaméterek ujraszámolása az aktuális sebesség alapján
	if(v>100 || v<-100)
 80038b4:	4b90      	ldr	r3, [pc, #576]	; (8003af8 <Fast_Mode+0x4c8>)
 80038b6:	edd3 7a00 	vldr	s15, [r3]
 80038ba:	ed9f 7a90 	vldr	s14, [pc, #576]	; 8003afc <Fast_Mode+0x4cc>
 80038be:	eef4 7ac7 	vcmpe.f32	s15, s14
 80038c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80038c6:	dc0a      	bgt.n	80038de <Fast_Mode+0x2ae>
 80038c8:	4b8b      	ldr	r3, [pc, #556]	; (8003af8 <Fast_Mode+0x4c8>)
 80038ca:	edd3 7a00 	vldr	s15, [r3]
 80038ce:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 8003b00 <Fast_Mode+0x4d0>
 80038d2:	eef4 7ac7 	vcmpe.f32	s15, s14
 80038d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80038da:	f140 80b9 	bpl.w	8003a50 <Fast_Mode+0x420>
	{
		if(v<2400)
 80038de:	4b86      	ldr	r3, [pc, #536]	; (8003af8 <Fast_Mode+0x4c8>)
 80038e0:	edd3 7a00 	vldr	s15, [r3]
 80038e4:	ed9f 7a87 	vldr	s14, [pc, #540]	; 8003b04 <Fast_Mode+0x4d4>
 80038e8:	eef4 7ac7 	vcmpe.f32	s15, s14
 80038ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80038f0:	d557      	bpl.n	80039a2 <Fast_Mode+0x372>
		{
			k_p = -L/(v*v)*S1MULTS2_SLOW;
 80038f2:	4b81      	ldr	r3, [pc, #516]	; (8003af8 <Fast_Mode+0x4c8>)
 80038f4:	ed93 7a00 	vldr	s14, [r3]
 80038f8:	4b7f      	ldr	r3, [pc, #508]	; (8003af8 <Fast_Mode+0x4c8>)
 80038fa:	edd3 7a00 	vldr	s15, [r3]
 80038fe:	ee67 7a27 	vmul.f32	s15, s14, s15
 8003902:	ee17 0a90 	vmov	r0, s15
 8003906:	f7fc fe3f 	bl	8000588 <__aeabi_f2d>
 800390a:	4602      	mov	r2, r0
 800390c:	460b      	mov	r3, r1
 800390e:	a16c      	add	r1, pc, #432	; (adr r1, 8003ac0 <Fast_Mode+0x490>)
 8003910:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003914:	f7fc ffba 	bl	800088c <__aeabi_ddiv>
 8003918:	4602      	mov	r2, r0
 800391a:	460b      	mov	r3, r1
 800391c:	4610      	mov	r0, r2
 800391e:	4619      	mov	r1, r3
 8003920:	a369      	add	r3, pc, #420	; (adr r3, 8003ac8 <Fast_Mode+0x498>)
 8003922:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003926:	f7fc fe87 	bl	8000638 <__aeabi_dmul>
 800392a:	4602      	mov	r2, r0
 800392c:	460b      	mov	r3, r1
 800392e:	4610      	mov	r0, r2
 8003930:	4619      	mov	r1, r3
 8003932:	f7fd f959 	bl	8000be8 <__aeabi_d2f>
 8003936:	4603      	mov	r3, r0
 8003938:	4a73      	ldr	r2, [pc, #460]	; (8003b08 <Fast_Mode+0x4d8>)
 800393a:	6013      	str	r3, [r2, #0]
			k_delta = L/v*(S1ADDS2_SLOW-v*k_p);
 800393c:	4b6e      	ldr	r3, [pc, #440]	; (8003af8 <Fast_Mode+0x4c8>)
 800393e:	681b      	ldr	r3, [r3, #0]
 8003940:	4618      	mov	r0, r3
 8003942:	f7fc fe21 	bl	8000588 <__aeabi_f2d>
 8003946:	4602      	mov	r2, r0
 8003948:	460b      	mov	r3, r1
 800394a:	a161      	add	r1, pc, #388	; (adr r1, 8003ad0 <Fast_Mode+0x4a0>)
 800394c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003950:	f7fc ff9c 	bl	800088c <__aeabi_ddiv>
 8003954:	4602      	mov	r2, r0
 8003956:	460b      	mov	r3, r1
 8003958:	4614      	mov	r4, r2
 800395a:	461d      	mov	r5, r3
 800395c:	4b66      	ldr	r3, [pc, #408]	; (8003af8 <Fast_Mode+0x4c8>)
 800395e:	ed93 7a00 	vldr	s14, [r3]
 8003962:	4b69      	ldr	r3, [pc, #420]	; (8003b08 <Fast_Mode+0x4d8>)
 8003964:	edd3 7a00 	vldr	s15, [r3]
 8003968:	ee67 7a27 	vmul.f32	s15, s14, s15
 800396c:	eeb9 7a08 	vmov.f32	s14, #152	; 0xc0c00000 -6.0
 8003970:	ee77 7a67 	vsub.f32	s15, s14, s15
 8003974:	ee17 0a90 	vmov	r0, s15
 8003978:	f7fc fe06 	bl	8000588 <__aeabi_f2d>
 800397c:	4602      	mov	r2, r0
 800397e:	460b      	mov	r3, r1
 8003980:	4620      	mov	r0, r4
 8003982:	4629      	mov	r1, r5
 8003984:	f7fc fe58 	bl	8000638 <__aeabi_dmul>
 8003988:	4602      	mov	r2, r0
 800398a:	460b      	mov	r3, r1
 800398c:	4610      	mov	r0, r2
 800398e:	4619      	mov	r1, r3
 8003990:	f7fd f92a 	bl	8000be8 <__aeabi_d2f>
 8003994:	4603      	mov	r3, r0
 8003996:	4a5d      	ldr	r2, [pc, #372]	; (8003b0c <Fast_Mode+0x4dc>)
 8003998:	6013      	str	r3, [r2, #0]
			kD=-0.06;
 800399a:	4b5d      	ldr	r3, [pc, #372]	; (8003b10 <Fast_Mode+0x4e0>)
 800399c:	4a5d      	ldr	r2, [pc, #372]	; (8003b14 <Fast_Mode+0x4e4>)
 800399e:	601a      	str	r2, [r3, #0]
 80039a0:	e056      	b.n	8003a50 <Fast_Mode+0x420>
			//kD=0;
		}
		else
		{
			k_p = -L/(v*v)*S1MULTS2_SLOW;
 80039a2:	4b55      	ldr	r3, [pc, #340]	; (8003af8 <Fast_Mode+0x4c8>)
 80039a4:	ed93 7a00 	vldr	s14, [r3]
 80039a8:	4b53      	ldr	r3, [pc, #332]	; (8003af8 <Fast_Mode+0x4c8>)
 80039aa:	edd3 7a00 	vldr	s15, [r3]
 80039ae:	ee67 7a27 	vmul.f32	s15, s14, s15
 80039b2:	ee17 0a90 	vmov	r0, s15
 80039b6:	f7fc fde7 	bl	8000588 <__aeabi_f2d>
 80039ba:	4602      	mov	r2, r0
 80039bc:	460b      	mov	r3, r1
 80039be:	a140      	add	r1, pc, #256	; (adr r1, 8003ac0 <Fast_Mode+0x490>)
 80039c0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80039c4:	f7fc ff62 	bl	800088c <__aeabi_ddiv>
 80039c8:	4602      	mov	r2, r0
 80039ca:	460b      	mov	r3, r1
 80039cc:	4610      	mov	r0, r2
 80039ce:	4619      	mov	r1, r3
 80039d0:	a33d      	add	r3, pc, #244	; (adr r3, 8003ac8 <Fast_Mode+0x498>)
 80039d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80039d6:	f7fc fe2f 	bl	8000638 <__aeabi_dmul>
 80039da:	4602      	mov	r2, r0
 80039dc:	460b      	mov	r3, r1
 80039de:	4610      	mov	r0, r2
 80039e0:	4619      	mov	r1, r3
 80039e2:	f7fd f901 	bl	8000be8 <__aeabi_d2f>
 80039e6:	4603      	mov	r3, r0
 80039e8:	4a47      	ldr	r2, [pc, #284]	; (8003b08 <Fast_Mode+0x4d8>)
 80039ea:	6013      	str	r3, [r2, #0]
			k_delta = L/v*(S1ADDS2_SLOW-v*k_p);
 80039ec:	4b42      	ldr	r3, [pc, #264]	; (8003af8 <Fast_Mode+0x4c8>)
 80039ee:	681b      	ldr	r3, [r3, #0]
 80039f0:	4618      	mov	r0, r3
 80039f2:	f7fc fdc9 	bl	8000588 <__aeabi_f2d>
 80039f6:	4602      	mov	r2, r0
 80039f8:	460b      	mov	r3, r1
 80039fa:	a135      	add	r1, pc, #212	; (adr r1, 8003ad0 <Fast_Mode+0x4a0>)
 80039fc:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003a00:	f7fc ff44 	bl	800088c <__aeabi_ddiv>
 8003a04:	4602      	mov	r2, r0
 8003a06:	460b      	mov	r3, r1
 8003a08:	4614      	mov	r4, r2
 8003a0a:	461d      	mov	r5, r3
 8003a0c:	4b3a      	ldr	r3, [pc, #232]	; (8003af8 <Fast_Mode+0x4c8>)
 8003a0e:	ed93 7a00 	vldr	s14, [r3]
 8003a12:	4b3d      	ldr	r3, [pc, #244]	; (8003b08 <Fast_Mode+0x4d8>)
 8003a14:	edd3 7a00 	vldr	s15, [r3]
 8003a18:	ee67 7a27 	vmul.f32	s15, s14, s15
 8003a1c:	eeb9 7a08 	vmov.f32	s14, #152	; 0xc0c00000 -6.0
 8003a20:	ee77 7a67 	vsub.f32	s15, s14, s15
 8003a24:	ee17 0a90 	vmov	r0, s15
 8003a28:	f7fc fdae 	bl	8000588 <__aeabi_f2d>
 8003a2c:	4602      	mov	r2, r0
 8003a2e:	460b      	mov	r3, r1
 8003a30:	4620      	mov	r0, r4
 8003a32:	4629      	mov	r1, r5
 8003a34:	f7fc fe00 	bl	8000638 <__aeabi_dmul>
 8003a38:	4602      	mov	r2, r0
 8003a3a:	460b      	mov	r3, r1
 8003a3c:	4610      	mov	r0, r2
 8003a3e:	4619      	mov	r1, r3
 8003a40:	f7fd f8d2 	bl	8000be8 <__aeabi_d2f>
 8003a44:	4603      	mov	r3, r0
 8003a46:	4a31      	ldr	r2, [pc, #196]	; (8003b0c <Fast_Mode+0x4dc>)
 8003a48:	6013      	str	r3, [r2, #0]
			kD=-0.05;
 8003a4a:	4b31      	ldr	r3, [pc, #196]	; (8003b10 <Fast_Mode+0x4e0>)
 8003a4c:	4a32      	ldr	r2, [pc, #200]	; (8003b18 <Fast_Mode+0x4e8>)
 8003a4e:	601a      	str	r2, [r3, #0]
		}
	}

	gamma = -k_p * x_elso -k_delta * delta - kD * (x_elso-x_elso_prev);
 8003a50:	4b2d      	ldr	r3, [pc, #180]	; (8003b08 <Fast_Mode+0x4d8>)
 8003a52:	edd3 7a00 	vldr	s15, [r3]
 8003a56:	eeb1 7a67 	vneg.f32	s14, s15
 8003a5a:	4b23      	ldr	r3, [pc, #140]	; (8003ae8 <Fast_Mode+0x4b8>)
 8003a5c:	edd3 7a00 	vldr	s15, [r3]
 8003a60:	ee27 7a27 	vmul.f32	s14, s14, s15
 8003a64:	4b29      	ldr	r3, [pc, #164]	; (8003b0c <Fast_Mode+0x4dc>)
 8003a66:	edd3 6a00 	vldr	s13, [r3]
 8003a6a:	4b22      	ldr	r3, [pc, #136]	; (8003af4 <Fast_Mode+0x4c4>)
 8003a6c:	edd3 7a00 	vldr	s15, [r3]
 8003a70:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8003a74:	ee37 7a67 	vsub.f32	s14, s14, s15
 8003a78:	4b1b      	ldr	r3, [pc, #108]	; (8003ae8 <Fast_Mode+0x4b8>)
 8003a7a:	edd3 6a00 	vldr	s13, [r3]
 8003a7e:	4b27      	ldr	r3, [pc, #156]	; (8003b1c <Fast_Mode+0x4ec>)
 8003a80:	edd3 7a00 	vldr	s15, [r3]
 8003a84:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8003a88:	4b21      	ldr	r3, [pc, #132]	; (8003b10 <Fast_Mode+0x4e0>)
 8003a8a:	edd3 7a00 	vldr	s15, [r3]
 8003a8e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8003a92:	ee77 7a67 	vsub.f32	s15, s14, s15
 8003a96:	4b22      	ldr	r3, [pc, #136]	; (8003b20 <Fast_Mode+0x4f0>)
 8003a98:	edc3 7a00 	vstr	s15, [r3]
	x_elso_prev = x_elso;
 8003a9c:	4b12      	ldr	r3, [pc, #72]	; (8003ae8 <Fast_Mode+0x4b8>)
 8003a9e:	681b      	ldr	r3, [r3, #0]
 8003aa0:	4a1e      	ldr	r2, [pc, #120]	; (8003b1c <Fast_Mode+0x4ec>)
 8003aa2:	6013      	str	r3, [r2, #0]

	return gamma;
 8003aa4:	4b1e      	ldr	r3, [pc, #120]	; (8003b20 <Fast_Mode+0x4f0>)
 8003aa6:	681b      	ldr	r3, [r3, #0]
 8003aa8:	ee07 3a90 	vmov	s15, r3
}
 8003aac:	eeb0 0a67 	vmov.f32	s0, s15
 8003ab0:	3710      	adds	r7, #16
 8003ab2:	46bd      	mov	sp, r7
 8003ab4:	bdb0      	pop	{r4, r5, r7, pc}
 8003ab6:	bf00      	nop
 8003ab8:	00000000 	.word	0x00000000
 8003abc:	406fe000 	.word	0x406fe000
 8003ac0:	00000000 	.word	0x00000000
 8003ac4:	c0716000 	.word	0xc0716000
 8003ac8:	fd21ff2e 	.word	0xfd21ff2e
 8003acc:	402275f6 	.word	0x402275f6
 8003ad0:	00000000 	.word	0x00000000
 8003ad4:	40716000 	.word	0x40716000
 8003ad8:	20000270 	.word	0x20000270
 8003adc:	200005a0 	.word	0x200005a0
 8003ae0:	434c0000 	.word	0x434c0000
 8003ae4:	40598000 	.word	0x40598000
 8003ae8:	200005d0 	.word	0x200005d0
 8003aec:	200005d4 	.word	0x200005d4
 8003af0:	407c4000 	.word	0x407c4000
 8003af4:	200005d8 	.word	0x200005d8
 8003af8:	20000588 	.word	0x20000588
 8003afc:	42c80000 	.word	0x42c80000
 8003b00:	c2c80000 	.word	0xc2c80000
 8003b04:	45160000 	.word	0x45160000
 8003b08:	20000050 	.word	0x20000050
 8003b0c:	20000054 	.word	0x20000054
 8003b10:	20000058 	.word	0x20000058
 8003b14:	bd75c28f 	.word	0xbd75c28f
 8003b18:	bd4ccccd 	.word	0xbd4ccccd
 8003b1c:	200005dc 	.word	0x200005dc
 8003b20:	200005e0 	.word	0x200005e0

08003b24 <__NVIC_DisableIRQ>:
{
 8003b24:	b480      	push	{r7}
 8003b26:	b083      	sub	sp, #12
 8003b28:	af00      	add	r7, sp, #0
 8003b2a:	4603      	mov	r3, r0
 8003b2c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003b2e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003b32:	2b00      	cmp	r3, #0
 8003b34:	db12      	blt.n	8003b5c <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003b36:	79fb      	ldrb	r3, [r7, #7]
 8003b38:	f003 021f 	and.w	r2, r3, #31
 8003b3c:	490a      	ldr	r1, [pc, #40]	; (8003b68 <__NVIC_DisableIRQ+0x44>)
 8003b3e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003b42:	095b      	lsrs	r3, r3, #5
 8003b44:	2001      	movs	r0, #1
 8003b46:	fa00 f202 	lsl.w	r2, r0, r2
 8003b4a:	3320      	adds	r3, #32
 8003b4c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8003b50:	f3bf 8f4f 	dsb	sy
}
 8003b54:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8003b56:	f3bf 8f6f 	isb	sy
}
 8003b5a:	bf00      	nop
}
 8003b5c:	bf00      	nop
 8003b5e:	370c      	adds	r7, #12
 8003b60:	46bd      	mov	sp, r7
 8003b62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b66:	4770      	bx	lr
 8003b68:	e000e100 	.word	0xe000e100

08003b6c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8003b6c:	b580      	push	{r7, lr}
 8003b6e:	b082      	sub	sp, #8
 8003b70:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8003b72:	f001 fc25 	bl	80053c0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8003b76:	f000 f88f 	bl	8003c98 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8003b7a:	f000 fd65 	bl	8004648 <MX_GPIO_Init>
  MX_DMA_Init();
 8003b7e:	f000 fd43 	bl	8004608 <MX_DMA_Init>
  MX_TIM2_Init();
 8003b82:	f000 fa7f 	bl	8004084 <MX_TIM2_Init>
  MX_USART1_UART_Init();
 8003b86:	f000 fcc1 	bl	800450c <MX_USART1_UART_Init>
  MX_TIM4_Init();
 8003b8a:	f000 fb73 	bl	8004274 <MX_TIM4_Init>
  MX_ADC2_Init();
 8003b8e:	f000 f987 	bl	8003ea0 <MX_ADC2_Init>
  MX_TIM3_Init();
 8003b92:	f000 faed 	bl	8004170 <MX_TIM3_Init>
  MX_UART5_Init();
 8003b96:	f000 fc8f 	bl	80044b8 <MX_UART5_Init>
  MX_USART2_UART_Init();
 8003b9a:	f000 fce1 	bl	8004560 <MX_USART2_UART_Init>
  MX_TIM8_Init();
 8003b9e:	f000 fc33 	bl	8004408 <MX_TIM8_Init>
  MX_ADC1_Init();
 8003ba2:	f000 f8eb 	bl	8003d7c <MX_ADC1_Init>
  MX_USART3_UART_Init();
 8003ba6:	f000 fd05 	bl	80045b4 <MX_USART3_UART_Init>
  MX_TIM5_Init();
 8003baa:	f000 fbdf 	bl	800436c <MX_TIM5_Init>
  MX_TIM1_Init();
 8003bae:	f000 f9c9 	bl	8003f44 <MX_TIM1_Init>
  /* USER CODE BEGIN 2 */
  F4_Basic_Init(&huart1, &htim5, &htim3, &htim2, &htim1, &htim8);
 8003bb2:	4b2c      	ldr	r3, [pc, #176]	; (8003c64 <main+0xf8>)
 8003bb4:	9301      	str	r3, [sp, #4]
 8003bb6:	4b2c      	ldr	r3, [pc, #176]	; (8003c68 <main+0xfc>)
 8003bb8:	9300      	str	r3, [sp, #0]
 8003bba:	4b2c      	ldr	r3, [pc, #176]	; (8003c6c <main+0x100>)
 8003bbc:	4a2c      	ldr	r2, [pc, #176]	; (8003c70 <main+0x104>)
 8003bbe:	492d      	ldr	r1, [pc, #180]	; (8003c74 <main+0x108>)
 8003bc0:	482d      	ldr	r0, [pc, #180]	; (8003c78 <main+0x10c>)
 8003bc2:	f7fd fa59 	bl	8001078 <F4_Basic_Init>
  Remote_Control_Init(&htim4, TIM_CHANNEL_3);
 8003bc6:	2108      	movs	r1, #8
 8003bc8:	482c      	ldr	r0, [pc, #176]	; (8003c7c <main+0x110>)
 8003bca:	f000 fe51 	bl	8004870 <Remote_Control_Init>
  Battery_Voltage_Compensate(&hadc2, &hadc1, &huart1);
 8003bce:	4a2a      	ldr	r2, [pc, #168]	; (8003c78 <main+0x10c>)
 8003bd0:	492b      	ldr	r1, [pc, #172]	; (8003c80 <main+0x114>)
 8003bd2:	482c      	ldr	r0, [pc, #176]	; (8003c84 <main+0x118>)
 8003bd4:	f7fe ff38 	bl	8002a48 <Battery_Voltage_Compensate>
  Mode_Selector(&huart1, &huart5);
 8003bd8:	492b      	ldr	r1, [pc, #172]	; (8003c88 <main+0x11c>)
 8003bda:	4827      	ldr	r0, [pc, #156]	; (8003c78 <main+0x10c>)
 8003bdc:	f7fe fc9e 	bl	800251c <Mode_Selector>
  TIM1->CCR4=SERVO_REAR_CCR_MIDDLE;
 8003be0:	4b2a      	ldr	r3, [pc, #168]	; (8003c8c <main+0x120>)
 8003be2:	f240 22b2 	movw	r2, #690	; 0x2b2
 8003be6:	641a      	str	r2, [r3, #64]	; 0x40
  TIM2->CCR1=SERVO_FRONT_CCR_MIDDLE;
 8003be8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003bec:	f44f 722d 	mov.w	r2, #692	; 0x2b4
 8003bf0:	635a      	str	r2, [r3, #52]	; 0x34
  Create_Nodes();
 8003bf2:	f7fd fbc9 	bl	8001388 <Create_Nodes>
  v_ref=1500;
 8003bf6:	4b26      	ldr	r3, [pc, #152]	; (8003c90 <main+0x124>)
 8003bf8:	4a26      	ldr	r2, [pc, #152]	; (8003c94 <main+0x128>)
 8003bfa:	601a      	str	r2, [r3, #0]

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  Measure_Velocity_Task(&htim8,TICK, 4);
 8003bfc:	4b1d      	ldr	r3, [pc, #116]	; (8003c74 <main+0x108>)
 8003bfe:	681b      	ldr	r3, [r3, #0]
 8003c00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c02:	2204      	movs	r2, #4
 8003c04:	4619      	mov	r1, r3
 8003c06:	4817      	ldr	r0, [pc, #92]	; (8003c64 <main+0xf8>)
 8003c08:	f7ff f84a 	bl	8002ca0 <Measure_Velocity_Task>
	  Motor_Drive_Task(&htim3, &huart1, TICK, 10);
 8003c0c:	4b19      	ldr	r3, [pc, #100]	; (8003c74 <main+0x108>)
 8003c0e:	681b      	ldr	r3, [r3, #0]
 8003c10:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003c12:	230a      	movs	r3, #10
 8003c14:	4918      	ldr	r1, [pc, #96]	; (8003c78 <main+0x10c>)
 8003c16:	4816      	ldr	r0, [pc, #88]	; (8003c70 <main+0x104>)
 8003c18:	f7ff f8be 	bl	8002d98 <Motor_Drive_Task>
	  Line_Track_Task(&huart5, &huart1, TICK, 4);
 8003c1c:	4b15      	ldr	r3, [pc, #84]	; (8003c74 <main+0x108>)
 8003c1e:	681b      	ldr	r3, [r3, #0]
 8003c20:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003c22:	2304      	movs	r3, #4
 8003c24:	4914      	ldr	r1, [pc, #80]	; (8003c78 <main+0x10c>)
 8003c26:	4818      	ldr	r0, [pc, #96]	; (8003c88 <main+0x11c>)
 8003c28:	f7ff fa76 	bl	8003118 <Line_Track_Task>
	  Remote_Control_Task(&htim4, TIM_CHANNEL_3, &huart1, TICK, 29);
 8003c2c:	4b11      	ldr	r3, [pc, #68]	; (8003c74 <main+0x108>)
 8003c2e:	681b      	ldr	r3, [r3, #0]
 8003c30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c32:	221d      	movs	r2, #29
 8003c34:	9200      	str	r2, [sp, #0]
 8003c36:	4a10      	ldr	r2, [pc, #64]	; (8003c78 <main+0x10c>)
 8003c38:	2108      	movs	r1, #8
 8003c3a:	4810      	ldr	r0, [pc, #64]	; (8003c7c <main+0x110>)
 8003c3c:	f000 fe34 	bl	80048a8 <Remote_Control_Task>
	  HDI_Read_Task(&htim2,TICK, 200);
 8003c40:	4b0c      	ldr	r3, [pc, #48]	; (8003c74 <main+0x108>)
 8003c42:	681b      	ldr	r3, [r3, #0]
 8003c44:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c46:	22c8      	movs	r2, #200	; 0xc8
 8003c48:	4619      	mov	r1, r3
 8003c4a:	4808      	ldr	r0, [pc, #32]	; (8003c6c <main+0x100>)
 8003c4c:	f7fd fabe 	bl	80011cc <HDI_Read_Task>
	  Control_Task(&huart1,TICK, 53);
 8003c50:	4b08      	ldr	r3, [pc, #32]	; (8003c74 <main+0x108>)
 8003c52:	681b      	ldr	r3, [r3, #0]
 8003c54:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c56:	2235      	movs	r2, #53	; 0x35
 8003c58:	4619      	mov	r1, r3
 8003c5a:	4807      	ldr	r0, [pc, #28]	; (8003c78 <main+0x10c>)
 8003c5c:	f7fe fa24 	bl	80020a8 <Control_Task>
	  Measure_Velocity_Task(&htim8,TICK, 4);
 8003c60:	e7cc      	b.n	8003bfc <main+0x90>
 8003c62:	bf00      	nop
 8003c64:	200007dc 	.word	0x200007dc
 8003c68:	20000674 	.word	0x20000674
 8003c6c:	200006bc 	.word	0x200006bc
 8003c70:	20000704 	.word	0x20000704
 8003c74:	20000794 	.word	0x20000794
 8003c78:	200008c8 	.word	0x200008c8
 8003c7c:	2000074c 	.word	0x2000074c
 8003c80:	200005e4 	.word	0x200005e4
 8003c84:	2000062c 	.word	0x2000062c
 8003c88:	20000884 	.word	0x20000884
 8003c8c:	40010000 	.word	0x40010000
 8003c90:	20000270 	.word	0x20000270
 8003c94:	44bb8000 	.word	0x44bb8000

08003c98 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8003c98:	b580      	push	{r7, lr}
 8003c9a:	b094      	sub	sp, #80	; 0x50
 8003c9c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8003c9e:	f107 031c 	add.w	r3, r7, #28
 8003ca2:	2234      	movs	r2, #52	; 0x34
 8003ca4:	2100      	movs	r1, #0
 8003ca6:	4618      	mov	r0, r3
 8003ca8:	f007 f950 	bl	800af4c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8003cac:	f107 0308 	add.w	r3, r7, #8
 8003cb0:	2200      	movs	r2, #0
 8003cb2:	601a      	str	r2, [r3, #0]
 8003cb4:	605a      	str	r2, [r3, #4]
 8003cb6:	609a      	str	r2, [r3, #8]
 8003cb8:	60da      	str	r2, [r3, #12]
 8003cba:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8003cbc:	2300      	movs	r3, #0
 8003cbe:	607b      	str	r3, [r7, #4]
 8003cc0:	4b2c      	ldr	r3, [pc, #176]	; (8003d74 <SystemClock_Config+0xdc>)
 8003cc2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003cc4:	4a2b      	ldr	r2, [pc, #172]	; (8003d74 <SystemClock_Config+0xdc>)
 8003cc6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003cca:	6413      	str	r3, [r2, #64]	; 0x40
 8003ccc:	4b29      	ldr	r3, [pc, #164]	; (8003d74 <SystemClock_Config+0xdc>)
 8003cce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003cd0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003cd4:	607b      	str	r3, [r7, #4]
 8003cd6:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8003cd8:	2300      	movs	r3, #0
 8003cda:	603b      	str	r3, [r7, #0]
 8003cdc:	4b26      	ldr	r3, [pc, #152]	; (8003d78 <SystemClock_Config+0xe0>)
 8003cde:	681b      	ldr	r3, [r3, #0]
 8003ce0:	4a25      	ldr	r2, [pc, #148]	; (8003d78 <SystemClock_Config+0xe0>)
 8003ce2:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8003ce6:	6013      	str	r3, [r2, #0]
 8003ce8:	4b23      	ldr	r3, [pc, #140]	; (8003d78 <SystemClock_Config+0xe0>)
 8003cea:	681b      	ldr	r3, [r3, #0]
 8003cec:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8003cf0:	603b      	str	r3, [r7, #0]
 8003cf2:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8003cf4:	2301      	movs	r3, #1
 8003cf6:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8003cf8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8003cfc:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8003cfe:	2302      	movs	r3, #2
 8003d00:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8003d02:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8003d06:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 4;
 8003d08:	2304      	movs	r3, #4
 8003d0a:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 180;
 8003d0c:	23b4      	movs	r3, #180	; 0xb4
 8003d0e:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8003d10:	2302      	movs	r3, #2
 8003d12:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8003d14:	2302      	movs	r3, #2
 8003d16:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8003d18:	2302      	movs	r3, #2
 8003d1a:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8003d1c:	f107 031c 	add.w	r3, r7, #28
 8003d20:	4618      	mov	r0, r3
 8003d22:	f003 fe3f 	bl	80079a4 <HAL_RCC_OscConfig>
 8003d26:	4603      	mov	r3, r0
 8003d28:	2b00      	cmp	r3, #0
 8003d2a:	d001      	beq.n	8003d30 <SystemClock_Config+0x98>
  {
    Error_Handler();
 8003d2c:	f000 fd9a 	bl	8004864 <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8003d30:	f003 fa9e 	bl	8007270 <HAL_PWREx_EnableOverDrive>
 8003d34:	4603      	mov	r3, r0
 8003d36:	2b00      	cmp	r3, #0
 8003d38:	d001      	beq.n	8003d3e <SystemClock_Config+0xa6>
  {
    Error_Handler();
 8003d3a:	f000 fd93 	bl	8004864 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8003d3e:	230f      	movs	r3, #15
 8003d40:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8003d42:	2302      	movs	r3, #2
 8003d44:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8003d46:	2300      	movs	r3, #0
 8003d48:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 8003d4a:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 8003d4e:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8003d50:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003d54:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8003d56:	f107 0308 	add.w	r3, r7, #8
 8003d5a:	2105      	movs	r1, #5
 8003d5c:	4618      	mov	r0, r3
 8003d5e:	f003 fad7 	bl	8007310 <HAL_RCC_ClockConfig>
 8003d62:	4603      	mov	r3, r0
 8003d64:	2b00      	cmp	r3, #0
 8003d66:	d001      	beq.n	8003d6c <SystemClock_Config+0xd4>
  {
    Error_Handler();
 8003d68:	f000 fd7c 	bl	8004864 <Error_Handler>
  }
}
 8003d6c:	bf00      	nop
 8003d6e:	3750      	adds	r7, #80	; 0x50
 8003d70:	46bd      	mov	sp, r7
 8003d72:	bd80      	pop	{r7, pc}
 8003d74:	40023800 	.word	0x40023800
 8003d78:	40007000 	.word	0x40007000

08003d7c <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8003d7c:	b580      	push	{r7, lr}
 8003d7e:	b08c      	sub	sp, #48	; 0x30
 8003d80:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8003d82:	f107 0320 	add.w	r3, r7, #32
 8003d86:	2200      	movs	r2, #0
 8003d88:	601a      	str	r2, [r3, #0]
 8003d8a:	605a      	str	r2, [r3, #4]
 8003d8c:	609a      	str	r2, [r3, #8]
 8003d8e:	60da      	str	r2, [r3, #12]
  ADC_InjectionConfTypeDef sConfigInjected = {0};
 8003d90:	463b      	mov	r3, r7
 8003d92:	2220      	movs	r2, #32
 8003d94:	2100      	movs	r1, #0
 8003d96:	4618      	mov	r0, r3
 8003d98:	f007 f8d8 	bl	800af4c <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8003d9c:	4b3c      	ldr	r3, [pc, #240]	; (8003e90 <MX_ADC1_Init+0x114>)
 8003d9e:	4a3d      	ldr	r2, [pc, #244]	; (8003e94 <MX_ADC1_Init+0x118>)
 8003da0:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV6;
 8003da2:	4b3b      	ldr	r3, [pc, #236]	; (8003e90 <MX_ADC1_Init+0x114>)
 8003da4:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8003da8:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8003daa:	4b39      	ldr	r3, [pc, #228]	; (8003e90 <MX_ADC1_Init+0x114>)
 8003dac:	2200      	movs	r2, #0
 8003dae:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ENABLE;
 8003db0:	4b37      	ldr	r3, [pc, #220]	; (8003e90 <MX_ADC1_Init+0x114>)
 8003db2:	2201      	movs	r2, #1
 8003db4:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8003db6:	4b36      	ldr	r3, [pc, #216]	; (8003e90 <MX_ADC1_Init+0x114>)
 8003db8:	2200      	movs	r2, #0
 8003dba:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8003dbc:	4b34      	ldr	r3, [pc, #208]	; (8003e90 <MX_ADC1_Init+0x114>)
 8003dbe:	2200      	movs	r2, #0
 8003dc0:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8003dc4:	4b32      	ldr	r3, [pc, #200]	; (8003e90 <MX_ADC1_Init+0x114>)
 8003dc6:	2200      	movs	r2, #0
 8003dc8:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8003dca:	4b31      	ldr	r3, [pc, #196]	; (8003e90 <MX_ADC1_Init+0x114>)
 8003dcc:	4a32      	ldr	r2, [pc, #200]	; (8003e98 <MX_ADC1_Init+0x11c>)
 8003dce:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8003dd0:	4b2f      	ldr	r3, [pc, #188]	; (8003e90 <MX_ADC1_Init+0x114>)
 8003dd2:	2200      	movs	r2, #0
 8003dd4:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 3;
 8003dd6:	4b2e      	ldr	r3, [pc, #184]	; (8003e90 <MX_ADC1_Init+0x114>)
 8003dd8:	2203      	movs	r2, #3
 8003dda:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8003ddc:	4b2c      	ldr	r3, [pc, #176]	; (8003e90 <MX_ADC1_Init+0x114>)
 8003dde:	2200      	movs	r2, #0
 8003de0:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8003de4:	4b2a      	ldr	r3, [pc, #168]	; (8003e90 <MX_ADC1_Init+0x114>)
 8003de6:	2201      	movs	r2, #1
 8003de8:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8003dea:	4829      	ldr	r0, [pc, #164]	; (8003e90 <MX_ADC1_Init+0x114>)
 8003dec:	f001 fb7e 	bl	80054ec <HAL_ADC_Init>
 8003df0:	4603      	mov	r3, r0
 8003df2:	2b00      	cmp	r3, #0
 8003df4:	d001      	beq.n	8003dfa <MX_ADC1_Init+0x7e>
  {
    Error_Handler();
 8003df6:	f000 fd35 	bl	8004864 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_8;
 8003dfa:	2308      	movs	r3, #8
 8003dfc:	623b      	str	r3, [r7, #32]
  sConfig.Rank = 1;
 8003dfe:	2301      	movs	r3, #1
 8003e00:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8003e02:	2307      	movs	r3, #7
 8003e04:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8003e06:	f107 0320 	add.w	r3, r7, #32
 8003e0a:	4619      	mov	r1, r3
 8003e0c:	4820      	ldr	r0, [pc, #128]	; (8003e90 <MX_ADC1_Init+0x114>)
 8003e0e:	f001 fd1b 	bl	8005848 <HAL_ADC_ConfigChannel>
 8003e12:	4603      	mov	r3, r0
 8003e14:	2b00      	cmp	r3, #0
 8003e16:	d001      	beq.n	8003e1c <MX_ADC1_Init+0xa0>
  {
    Error_Handler();
 8003e18:	f000 fd24 	bl	8004864 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Rank = 2;
 8003e1c:	2302      	movs	r3, #2
 8003e1e:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8003e20:	f107 0320 	add.w	r3, r7, #32
 8003e24:	4619      	mov	r1, r3
 8003e26:	481a      	ldr	r0, [pc, #104]	; (8003e90 <MX_ADC1_Init+0x114>)
 8003e28:	f001 fd0e 	bl	8005848 <HAL_ADC_ConfigChannel>
 8003e2c:	4603      	mov	r3, r0
 8003e2e:	2b00      	cmp	r3, #0
 8003e30:	d001      	beq.n	8003e36 <MX_ADC1_Init+0xba>
  {
    Error_Handler();
 8003e32:	f000 fd17 	bl	8004864 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Rank = 3;
 8003e36:	2303      	movs	r3, #3
 8003e38:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8003e3a:	f107 0320 	add.w	r3, r7, #32
 8003e3e:	4619      	mov	r1, r3
 8003e40:	4813      	ldr	r0, [pc, #76]	; (8003e90 <MX_ADC1_Init+0x114>)
 8003e42:	f001 fd01 	bl	8005848 <HAL_ADC_ConfigChannel>
 8003e46:	4603      	mov	r3, r0
 8003e48:	2b00      	cmp	r3, #0
 8003e4a:	d001      	beq.n	8003e50 <MX_ADC1_Init+0xd4>
  {
    Error_Handler();
 8003e4c:	f000 fd0a 	bl	8004864 <Error_Handler>
  }

  /** Configures for the selected ADC injected channel its corresponding rank in the sequencer and its sample time
  */
  sConfigInjected.InjectedChannel = ADC_CHANNEL_8;
 8003e50:	2308      	movs	r3, #8
 8003e52:	603b      	str	r3, [r7, #0]
  sConfigInjected.InjectedRank = 1;
 8003e54:	2301      	movs	r3, #1
 8003e56:	607b      	str	r3, [r7, #4]
  sConfigInjected.InjectedNbrOfConversion = 1;
 8003e58:	2301      	movs	r3, #1
 8003e5a:	613b      	str	r3, [r7, #16]
  sConfigInjected.InjectedSamplingTime = ADC_SAMPLETIME_3CYCLES;
 8003e5c:	2300      	movs	r3, #0
 8003e5e:	60bb      	str	r3, [r7, #8]
  sConfigInjected.ExternalTrigInjecConvEdge = ADC_EXTERNALTRIGINJECCONVEDGE_NONE;
 8003e60:	2300      	movs	r3, #0
 8003e62:	61fb      	str	r3, [r7, #28]
  sConfigInjected.ExternalTrigInjecConv = ADC_INJECTED_SOFTWARE_START;
 8003e64:	4b0d      	ldr	r3, [pc, #52]	; (8003e9c <MX_ADC1_Init+0x120>)
 8003e66:	61bb      	str	r3, [r7, #24]
  sConfigInjected.AutoInjectedConv = DISABLE;
 8003e68:	2300      	movs	r3, #0
 8003e6a:	757b      	strb	r3, [r7, #21]
  sConfigInjected.InjectedDiscontinuousConvMode = DISABLE;
 8003e6c:	2300      	movs	r3, #0
 8003e6e:	753b      	strb	r3, [r7, #20]
  sConfigInjected.InjectedOffset = 0;
 8003e70:	2300      	movs	r3, #0
 8003e72:	60fb      	str	r3, [r7, #12]
  if (HAL_ADCEx_InjectedConfigChannel(&hadc1, &sConfigInjected) != HAL_OK)
 8003e74:	463b      	mov	r3, r7
 8003e76:	4619      	mov	r1, r3
 8003e78:	4805      	ldr	r0, [pc, #20]	; (8003e90 <MX_ADC1_Init+0x114>)
 8003e7a:	f001 ff13 	bl	8005ca4 <HAL_ADCEx_InjectedConfigChannel>
 8003e7e:	4603      	mov	r3, r0
 8003e80:	2b00      	cmp	r3, #0
 8003e82:	d001      	beq.n	8003e88 <MX_ADC1_Init+0x10c>
  {
    Error_Handler();
 8003e84:	f000 fcee 	bl	8004864 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8003e88:	bf00      	nop
 8003e8a:	3730      	adds	r7, #48	; 0x30
 8003e8c:	46bd      	mov	sp, r7
 8003e8e:	bd80      	pop	{r7, pc}
 8003e90:	200005e4 	.word	0x200005e4
 8003e94:	40012000 	.word	0x40012000
 8003e98:	0f000001 	.word	0x0f000001
 8003e9c:	000f0001 	.word	0x000f0001

08003ea0 <MX_ADC2_Init>:
  * @brief ADC2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC2_Init(void)
{
 8003ea0:	b580      	push	{r7, lr}
 8003ea2:	b084      	sub	sp, #16
 8003ea4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8003ea6:	463b      	mov	r3, r7
 8003ea8:	2200      	movs	r2, #0
 8003eaa:	601a      	str	r2, [r3, #0]
 8003eac:	605a      	str	r2, [r3, #4]
 8003eae:	609a      	str	r2, [r3, #8]
 8003eb0:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC2_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc2.Instance = ADC2;
 8003eb2:	4b21      	ldr	r3, [pc, #132]	; (8003f38 <MX_ADC2_Init+0x98>)
 8003eb4:	4a21      	ldr	r2, [pc, #132]	; (8003f3c <MX_ADC2_Init+0x9c>)
 8003eb6:	601a      	str	r2, [r3, #0]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV6;
 8003eb8:	4b1f      	ldr	r3, [pc, #124]	; (8003f38 <MX_ADC2_Init+0x98>)
 8003eba:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8003ebe:	605a      	str	r2, [r3, #4]
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 8003ec0:	4b1d      	ldr	r3, [pc, #116]	; (8003f38 <MX_ADC2_Init+0x98>)
 8003ec2:	2200      	movs	r2, #0
 8003ec4:	609a      	str	r2, [r3, #8]
  hadc2.Init.ScanConvMode = DISABLE;
 8003ec6:	4b1c      	ldr	r3, [pc, #112]	; (8003f38 <MX_ADC2_Init+0x98>)
 8003ec8:	2200      	movs	r2, #0
 8003eca:	611a      	str	r2, [r3, #16]
  hadc2.Init.ContinuousConvMode = DISABLE;
 8003ecc:	4b1a      	ldr	r3, [pc, #104]	; (8003f38 <MX_ADC2_Init+0x98>)
 8003ece:	2200      	movs	r2, #0
 8003ed0:	761a      	strb	r2, [r3, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 8003ed2:	4b19      	ldr	r3, [pc, #100]	; (8003f38 <MX_ADC2_Init+0x98>)
 8003ed4:	2200      	movs	r2, #0
 8003ed6:	f883 2020 	strb.w	r2, [r3, #32]
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8003eda:	4b17      	ldr	r3, [pc, #92]	; (8003f38 <MX_ADC2_Init+0x98>)
 8003edc:	2200      	movs	r2, #0
 8003ede:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8003ee0:	4b15      	ldr	r3, [pc, #84]	; (8003f38 <MX_ADC2_Init+0x98>)
 8003ee2:	4a17      	ldr	r2, [pc, #92]	; (8003f40 <MX_ADC2_Init+0xa0>)
 8003ee4:	629a      	str	r2, [r3, #40]	; 0x28
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8003ee6:	4b14      	ldr	r3, [pc, #80]	; (8003f38 <MX_ADC2_Init+0x98>)
 8003ee8:	2200      	movs	r2, #0
 8003eea:	60da      	str	r2, [r3, #12]
  hadc2.Init.NbrOfConversion = 1;
 8003eec:	4b12      	ldr	r3, [pc, #72]	; (8003f38 <MX_ADC2_Init+0x98>)
 8003eee:	2201      	movs	r2, #1
 8003ef0:	61da      	str	r2, [r3, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 8003ef2:	4b11      	ldr	r3, [pc, #68]	; (8003f38 <MX_ADC2_Init+0x98>)
 8003ef4:	2200      	movs	r2, #0
 8003ef6:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8003efa:	4b0f      	ldr	r3, [pc, #60]	; (8003f38 <MX_ADC2_Init+0x98>)
 8003efc:	2201      	movs	r2, #1
 8003efe:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8003f00:	480d      	ldr	r0, [pc, #52]	; (8003f38 <MX_ADC2_Init+0x98>)
 8003f02:	f001 faf3 	bl	80054ec <HAL_ADC_Init>
 8003f06:	4603      	mov	r3, r0
 8003f08:	2b00      	cmp	r3, #0
 8003f0a:	d001      	beq.n	8003f10 <MX_ADC2_Init+0x70>
  {
    Error_Handler();
 8003f0c:	f000 fcaa 	bl	8004864 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_13;
 8003f10:	230d      	movs	r3, #13
 8003f12:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8003f14:	2301      	movs	r3, #1
 8003f16:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8003f18:	2307      	movs	r3, #7
 8003f1a:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8003f1c:	463b      	mov	r3, r7
 8003f1e:	4619      	mov	r1, r3
 8003f20:	4805      	ldr	r0, [pc, #20]	; (8003f38 <MX_ADC2_Init+0x98>)
 8003f22:	f001 fc91 	bl	8005848 <HAL_ADC_ConfigChannel>
 8003f26:	4603      	mov	r3, r0
 8003f28:	2b00      	cmp	r3, #0
 8003f2a:	d001      	beq.n	8003f30 <MX_ADC2_Init+0x90>
  {
    Error_Handler();
 8003f2c:	f000 fc9a 	bl	8004864 <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */

  /* USER CODE END ADC2_Init 2 */

}
 8003f30:	bf00      	nop
 8003f32:	3710      	adds	r7, #16
 8003f34:	46bd      	mov	sp, r7
 8003f36:	bd80      	pop	{r7, pc}
 8003f38:	2000062c 	.word	0x2000062c
 8003f3c:	40012100 	.word	0x40012100
 8003f40:	0f000001 	.word	0x0f000001

08003f44 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8003f44:	b580      	push	{r7, lr}
 8003f46:	b096      	sub	sp, #88	; 0x58
 8003f48:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8003f4a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8003f4e:	2200      	movs	r2, #0
 8003f50:	601a      	str	r2, [r3, #0]
 8003f52:	605a      	str	r2, [r3, #4]
 8003f54:	609a      	str	r2, [r3, #8]
 8003f56:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003f58:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8003f5c:	2200      	movs	r2, #0
 8003f5e:	601a      	str	r2, [r3, #0]
 8003f60:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8003f62:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8003f66:	2200      	movs	r2, #0
 8003f68:	601a      	str	r2, [r3, #0]
 8003f6a:	605a      	str	r2, [r3, #4]
 8003f6c:	609a      	str	r2, [r3, #8]
 8003f6e:	60da      	str	r2, [r3, #12]
 8003f70:	611a      	str	r2, [r3, #16]
 8003f72:	615a      	str	r2, [r3, #20]
 8003f74:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8003f76:	1d3b      	adds	r3, r7, #4
 8003f78:	2220      	movs	r2, #32
 8003f7a:	2100      	movs	r1, #0
 8003f7c:	4618      	mov	r0, r3
 8003f7e:	f006 ffe5 	bl	800af4c <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8003f82:	4b3e      	ldr	r3, [pc, #248]	; (800407c <MX_TIM1_Init+0x138>)
 8003f84:	4a3e      	ldr	r2, [pc, #248]	; (8004080 <MX_TIM1_Init+0x13c>)
 8003f86:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 360-1;
 8003f88:	4b3c      	ldr	r3, [pc, #240]	; (800407c <MX_TIM1_Init+0x138>)
 8003f8a:	f240 1267 	movw	r2, #359	; 0x167
 8003f8e:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003f90:	4b3a      	ldr	r3, [pc, #232]	; (800407c <MX_TIM1_Init+0x138>)
 8003f92:	2200      	movs	r2, #0
 8003f94:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 10000-1;
 8003f96:	4b39      	ldr	r3, [pc, #228]	; (800407c <MX_TIM1_Init+0x138>)
 8003f98:	f242 720f 	movw	r2, #9999	; 0x270f
 8003f9c:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8003f9e:	4b37      	ldr	r3, [pc, #220]	; (800407c <MX_TIM1_Init+0x138>)
 8003fa0:	2200      	movs	r2, #0
 8003fa2:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8003fa4:	4b35      	ldr	r3, [pc, #212]	; (800407c <MX_TIM1_Init+0x138>)
 8003fa6:	2200      	movs	r2, #0
 8003fa8:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8003faa:	4b34      	ldr	r3, [pc, #208]	; (800407c <MX_TIM1_Init+0x138>)
 8003fac:	2280      	movs	r2, #128	; 0x80
 8003fae:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8003fb0:	4832      	ldr	r0, [pc, #200]	; (800407c <MX_TIM1_Init+0x138>)
 8003fb2:	f003 ff95 	bl	8007ee0 <HAL_TIM_Base_Init>
 8003fb6:	4603      	mov	r3, r0
 8003fb8:	2b00      	cmp	r3, #0
 8003fba:	d001      	beq.n	8003fc0 <MX_TIM1_Init+0x7c>
  {
    Error_Handler();
 8003fbc:	f000 fc52 	bl	8004864 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8003fc0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003fc4:	64bb      	str	r3, [r7, #72]	; 0x48
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8003fc6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8003fca:	4619      	mov	r1, r3
 8003fcc:	482b      	ldr	r0, [pc, #172]	; (800407c <MX_TIM1_Init+0x138>)
 8003fce:	f004 ff6f 	bl	8008eb0 <HAL_TIM_ConfigClockSource>
 8003fd2:	4603      	mov	r3, r0
 8003fd4:	2b00      	cmp	r3, #0
 8003fd6:	d001      	beq.n	8003fdc <MX_TIM1_Init+0x98>
  {
    Error_Handler();
 8003fd8:	f000 fc44 	bl	8004864 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8003fdc:	4827      	ldr	r0, [pc, #156]	; (800407c <MX_TIM1_Init+0x138>)
 8003fde:	f004 f837 	bl	8008050 <HAL_TIM_PWM_Init>
 8003fe2:	4603      	mov	r3, r0
 8003fe4:	2b00      	cmp	r3, #0
 8003fe6:	d001      	beq.n	8003fec <MX_TIM1_Init+0xa8>
  {
    Error_Handler();
 8003fe8:	f000 fc3c 	bl	8004864 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8003fec:	2300      	movs	r3, #0
 8003fee:	643b      	str	r3, [r7, #64]	; 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003ff0:	2300      	movs	r3, #0
 8003ff2:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8003ff4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8003ff8:	4619      	mov	r1, r3
 8003ffa:	4820      	ldr	r0, [pc, #128]	; (800407c <MX_TIM1_Init+0x138>)
 8003ffc:	f005 fd80 	bl	8009b00 <HAL_TIMEx_MasterConfigSynchronization>
 8004000:	4603      	mov	r3, r0
 8004002:	2b00      	cmp	r3, #0
 8004004:	d001      	beq.n	800400a <MX_TIM1_Init+0xc6>
  {
    Error_Handler();
 8004006:	f000 fc2d 	bl	8004864 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800400a:	2360      	movs	r3, #96	; 0x60
 800400c:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigOC.Pulse = 750-1;
 800400e:	f240 23ed 	movw	r3, #749	; 0x2ed
 8004012:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8004014:	2300      	movs	r3, #0
 8004016:	62fb      	str	r3, [r7, #44]	; 0x2c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8004018:	2300      	movs	r3, #0
 800401a:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 800401c:	2300      	movs	r3, #0
 800401e:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8004020:	2300      	movs	r3, #0
 8004022:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8004024:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004028:	220c      	movs	r2, #12
 800402a:	4619      	mov	r1, r3
 800402c:	4813      	ldr	r0, [pc, #76]	; (800407c <MX_TIM1_Init+0x138>)
 800402e:	f004 fe7d 	bl	8008d2c <HAL_TIM_PWM_ConfigChannel>
 8004032:	4603      	mov	r3, r0
 8004034:	2b00      	cmp	r3, #0
 8004036:	d001      	beq.n	800403c <MX_TIM1_Init+0xf8>
  {
    Error_Handler();
 8004038:	f000 fc14 	bl	8004864 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 800403c:	2300      	movs	r3, #0
 800403e:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8004040:	2300      	movs	r3, #0
 8004042:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8004044:	2300      	movs	r3, #0
 8004046:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8004048:	2300      	movs	r3, #0
 800404a:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 800404c:	2300      	movs	r3, #0
 800404e:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8004050:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8004054:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8004056:	2300      	movs	r3, #0
 8004058:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 800405a:	1d3b      	adds	r3, r7, #4
 800405c:	4619      	mov	r1, r3
 800405e:	4807      	ldr	r0, [pc, #28]	; (800407c <MX_TIM1_Init+0x138>)
 8004060:	f005 fdca 	bl	8009bf8 <HAL_TIMEx_ConfigBreakDeadTime>
 8004064:	4603      	mov	r3, r0
 8004066:	2b00      	cmp	r3, #0
 8004068:	d001      	beq.n	800406e <MX_TIM1_Init+0x12a>
  {
    Error_Handler();
 800406a:	f000 fbfb 	bl	8004864 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 800406e:	4803      	ldr	r0, [pc, #12]	; (800407c <MX_TIM1_Init+0x138>)
 8004070:	f000 fea4 	bl	8004dbc <HAL_TIM_MspPostInit>

}
 8004074:	bf00      	nop
 8004076:	3758      	adds	r7, #88	; 0x58
 8004078:	46bd      	mov	sp, r7
 800407a:	bd80      	pop	{r7, pc}
 800407c:	20000674 	.word	0x20000674
 8004080:	40010000 	.word	0x40010000

08004084 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8004084:	b580      	push	{r7, lr}
 8004086:	b08e      	sub	sp, #56	; 0x38
 8004088:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800408a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800408e:	2200      	movs	r2, #0
 8004090:	601a      	str	r2, [r3, #0]
 8004092:	605a      	str	r2, [r3, #4]
 8004094:	609a      	str	r2, [r3, #8]
 8004096:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004098:	f107 0320 	add.w	r3, r7, #32
 800409c:	2200      	movs	r2, #0
 800409e:	601a      	str	r2, [r3, #0]
 80040a0:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80040a2:	1d3b      	adds	r3, r7, #4
 80040a4:	2200      	movs	r2, #0
 80040a6:	601a      	str	r2, [r3, #0]
 80040a8:	605a      	str	r2, [r3, #4]
 80040aa:	609a      	str	r2, [r3, #8]
 80040ac:	60da      	str	r2, [r3, #12]
 80040ae:	611a      	str	r2, [r3, #16]
 80040b0:	615a      	str	r2, [r3, #20]
 80040b2:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80040b4:	4b2d      	ldr	r3, [pc, #180]	; (800416c <MX_TIM2_Init+0xe8>)
 80040b6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80040ba:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 90-1;
 80040bc:	4b2b      	ldr	r3, [pc, #172]	; (800416c <MX_TIM2_Init+0xe8>)
 80040be:	2259      	movs	r2, #89	; 0x59
 80040c0:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80040c2:	4b2a      	ldr	r3, [pc, #168]	; (800416c <MX_TIM2_Init+0xe8>)
 80040c4:	2200      	movs	r2, #0
 80040c6:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 10000-1;
 80040c8:	4b28      	ldr	r3, [pc, #160]	; (800416c <MX_TIM2_Init+0xe8>)
 80040ca:	f242 720f 	movw	r2, #9999	; 0x270f
 80040ce:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80040d0:	4b26      	ldr	r3, [pc, #152]	; (800416c <MX_TIM2_Init+0xe8>)
 80040d2:	2200      	movs	r2, #0
 80040d4:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80040d6:	4b25      	ldr	r3, [pc, #148]	; (800416c <MX_TIM2_Init+0xe8>)
 80040d8:	2280      	movs	r2, #128	; 0x80
 80040da:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80040dc:	4823      	ldr	r0, [pc, #140]	; (800416c <MX_TIM2_Init+0xe8>)
 80040de:	f003 feff 	bl	8007ee0 <HAL_TIM_Base_Init>
 80040e2:	4603      	mov	r3, r0
 80040e4:	2b00      	cmp	r3, #0
 80040e6:	d001      	beq.n	80040ec <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 80040e8:	f000 fbbc 	bl	8004864 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80040ec:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80040f0:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80040f2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80040f6:	4619      	mov	r1, r3
 80040f8:	481c      	ldr	r0, [pc, #112]	; (800416c <MX_TIM2_Init+0xe8>)
 80040fa:	f004 fed9 	bl	8008eb0 <HAL_TIM_ConfigClockSource>
 80040fe:	4603      	mov	r3, r0
 8004100:	2b00      	cmp	r3, #0
 8004102:	d001      	beq.n	8004108 <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 8004104:	f000 fbae 	bl	8004864 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8004108:	4818      	ldr	r0, [pc, #96]	; (800416c <MX_TIM2_Init+0xe8>)
 800410a:	f003 ffa1 	bl	8008050 <HAL_TIM_PWM_Init>
 800410e:	4603      	mov	r3, r0
 8004110:	2b00      	cmp	r3, #0
 8004112:	d001      	beq.n	8004118 <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 8004114:	f000 fba6 	bl	8004864 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8004118:	2300      	movs	r3, #0
 800411a:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800411c:	2300      	movs	r3, #0
 800411e:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8004120:	f107 0320 	add.w	r3, r7, #32
 8004124:	4619      	mov	r1, r3
 8004126:	4811      	ldr	r0, [pc, #68]	; (800416c <MX_TIM2_Init+0xe8>)
 8004128:	f005 fcea 	bl	8009b00 <HAL_TIMEx_MasterConfigSynchronization>
 800412c:	4603      	mov	r3, r0
 800412e:	2b00      	cmp	r3, #0
 8004130:	d001      	beq.n	8004136 <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 8004132:	f000 fb97 	bl	8004864 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8004136:	2360      	movs	r3, #96	; 0x60
 8004138:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 750-1;
 800413a:	f240 23ed 	movw	r3, #749	; 0x2ed
 800413e:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8004140:	2300      	movs	r3, #0
 8004142:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8004144:	2300      	movs	r3, #0
 8004146:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8004148:	1d3b      	adds	r3, r7, #4
 800414a:	2200      	movs	r2, #0
 800414c:	4619      	mov	r1, r3
 800414e:	4807      	ldr	r0, [pc, #28]	; (800416c <MX_TIM2_Init+0xe8>)
 8004150:	f004 fdec 	bl	8008d2c <HAL_TIM_PWM_ConfigChannel>
 8004154:	4603      	mov	r3, r0
 8004156:	2b00      	cmp	r3, #0
 8004158:	d001      	beq.n	800415e <MX_TIM2_Init+0xda>
  {
    Error_Handler();
 800415a:	f000 fb83 	bl	8004864 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 800415e:	4803      	ldr	r0, [pc, #12]	; (800416c <MX_TIM2_Init+0xe8>)
 8004160:	f000 fe2c 	bl	8004dbc <HAL_TIM_MspPostInit>

}
 8004164:	bf00      	nop
 8004166:	3738      	adds	r7, #56	; 0x38
 8004168:	46bd      	mov	sp, r7
 800416a:	bd80      	pop	{r7, pc}
 800416c:	200006bc 	.word	0x200006bc

08004170 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8004170:	b580      	push	{r7, lr}
 8004172:	b08e      	sub	sp, #56	; 0x38
 8004174:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8004176:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800417a:	2200      	movs	r2, #0
 800417c:	601a      	str	r2, [r3, #0]
 800417e:	605a      	str	r2, [r3, #4]
 8004180:	609a      	str	r2, [r3, #8]
 8004182:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004184:	f107 0320 	add.w	r3, r7, #32
 8004188:	2200      	movs	r2, #0
 800418a:	601a      	str	r2, [r3, #0]
 800418c:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800418e:	1d3b      	adds	r3, r7, #4
 8004190:	2200      	movs	r2, #0
 8004192:	601a      	str	r2, [r3, #0]
 8004194:	605a      	str	r2, [r3, #4]
 8004196:	609a      	str	r2, [r3, #8]
 8004198:	60da      	str	r2, [r3, #12]
 800419a:	611a      	str	r2, [r3, #16]
 800419c:	615a      	str	r2, [r3, #20]
 800419e:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80041a0:	4b32      	ldr	r3, [pc, #200]	; (800426c <MX_TIM3_Init+0xfc>)
 80041a2:	4a33      	ldr	r2, [pc, #204]	; (8004270 <MX_TIM3_Init+0x100>)
 80041a4:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 2-1;
 80041a6:	4b31      	ldr	r3, [pc, #196]	; (800426c <MX_TIM3_Init+0xfc>)
 80041a8:	2201      	movs	r2, #1
 80041aa:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED3;
 80041ac:	4b2f      	ldr	r3, [pc, #188]	; (800426c <MX_TIM3_Init+0xfc>)
 80041ae:	2260      	movs	r2, #96	; 0x60
 80041b0:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 1000-1;
 80041b2:	4b2e      	ldr	r3, [pc, #184]	; (800426c <MX_TIM3_Init+0xfc>)
 80041b4:	f240 32e7 	movw	r2, #999	; 0x3e7
 80041b8:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80041ba:	4b2c      	ldr	r3, [pc, #176]	; (800426c <MX_TIM3_Init+0xfc>)
 80041bc:	2200      	movs	r2, #0
 80041be:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80041c0:	4b2a      	ldr	r3, [pc, #168]	; (800426c <MX_TIM3_Init+0xfc>)
 80041c2:	2200      	movs	r2, #0
 80041c4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80041c6:	4829      	ldr	r0, [pc, #164]	; (800426c <MX_TIM3_Init+0xfc>)
 80041c8:	f003 fe8a 	bl	8007ee0 <HAL_TIM_Base_Init>
 80041cc:	4603      	mov	r3, r0
 80041ce:	2b00      	cmp	r3, #0
 80041d0:	d001      	beq.n	80041d6 <MX_TIM3_Init+0x66>
  {
    Error_Handler();
 80041d2:	f000 fb47 	bl	8004864 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80041d6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80041da:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80041dc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80041e0:	4619      	mov	r1, r3
 80041e2:	4822      	ldr	r0, [pc, #136]	; (800426c <MX_TIM3_Init+0xfc>)
 80041e4:	f004 fe64 	bl	8008eb0 <HAL_TIM_ConfigClockSource>
 80041e8:	4603      	mov	r3, r0
 80041ea:	2b00      	cmp	r3, #0
 80041ec:	d001      	beq.n	80041f2 <MX_TIM3_Init+0x82>
  {
    Error_Handler();
 80041ee:	f000 fb39 	bl	8004864 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 80041f2:	481e      	ldr	r0, [pc, #120]	; (800426c <MX_TIM3_Init+0xfc>)
 80041f4:	f003 ff2c 	bl	8008050 <HAL_TIM_PWM_Init>
 80041f8:	4603      	mov	r3, r0
 80041fa:	2b00      	cmp	r3, #0
 80041fc:	d001      	beq.n	8004202 <MX_TIM3_Init+0x92>
  {
    Error_Handler();
 80041fe:	f000 fb31 	bl	8004864 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8004202:	2300      	movs	r3, #0
 8004204:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8004206:	2300      	movs	r3, #0
 8004208:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800420a:	f107 0320 	add.w	r3, r7, #32
 800420e:	4619      	mov	r1, r3
 8004210:	4816      	ldr	r0, [pc, #88]	; (800426c <MX_TIM3_Init+0xfc>)
 8004212:	f005 fc75 	bl	8009b00 <HAL_TIMEx_MasterConfigSynchronization>
 8004216:	4603      	mov	r3, r0
 8004218:	2b00      	cmp	r3, #0
 800421a:	d001      	beq.n	8004220 <MX_TIM3_Init+0xb0>
  {
    Error_Handler();
 800421c:	f000 fb22 	bl	8004864 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8004220:	2360      	movs	r3, #96	; 0x60
 8004222:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8004224:	2300      	movs	r3, #0
 8004226:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8004228:	2300      	movs	r3, #0
 800422a:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800422c:	2300      	movs	r3, #0
 800422e:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8004230:	1d3b      	adds	r3, r7, #4
 8004232:	2200      	movs	r2, #0
 8004234:	4619      	mov	r1, r3
 8004236:	480d      	ldr	r0, [pc, #52]	; (800426c <MX_TIM3_Init+0xfc>)
 8004238:	f004 fd78 	bl	8008d2c <HAL_TIM_PWM_ConfigChannel>
 800423c:	4603      	mov	r3, r0
 800423e:	2b00      	cmp	r3, #0
 8004240:	d001      	beq.n	8004246 <MX_TIM3_Init+0xd6>
  {
    Error_Handler();
 8004242:	f000 fb0f 	bl	8004864 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8004246:	1d3b      	adds	r3, r7, #4
 8004248:	2204      	movs	r2, #4
 800424a:	4619      	mov	r1, r3
 800424c:	4807      	ldr	r0, [pc, #28]	; (800426c <MX_TIM3_Init+0xfc>)
 800424e:	f004 fd6d 	bl	8008d2c <HAL_TIM_PWM_ConfigChannel>
 8004252:	4603      	mov	r3, r0
 8004254:	2b00      	cmp	r3, #0
 8004256:	d001      	beq.n	800425c <MX_TIM3_Init+0xec>
  {
    Error_Handler();
 8004258:	f000 fb04 	bl	8004864 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 800425c:	4803      	ldr	r0, [pc, #12]	; (800426c <MX_TIM3_Init+0xfc>)
 800425e:	f000 fdad 	bl	8004dbc <HAL_TIM_MspPostInit>

}
 8004262:	bf00      	nop
 8004264:	3738      	adds	r7, #56	; 0x38
 8004266:	46bd      	mov	sp, r7
 8004268:	bd80      	pop	{r7, pc}
 800426a:	bf00      	nop
 800426c:	20000704 	.word	0x20000704
 8004270:	40000400 	.word	0x40000400

08004274 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8004274:	b580      	push	{r7, lr}
 8004276:	b08a      	sub	sp, #40	; 0x28
 8004278:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800427a:	f107 0318 	add.w	r3, r7, #24
 800427e:	2200      	movs	r2, #0
 8004280:	601a      	str	r2, [r3, #0]
 8004282:	605a      	str	r2, [r3, #4]
 8004284:	609a      	str	r2, [r3, #8]
 8004286:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004288:	f107 0310 	add.w	r3, r7, #16
 800428c:	2200      	movs	r2, #0
 800428e:	601a      	str	r2, [r3, #0]
 8004290:	605a      	str	r2, [r3, #4]
  TIM_IC_InitTypeDef sConfigIC = {0};
 8004292:	463b      	mov	r3, r7
 8004294:	2200      	movs	r2, #0
 8004296:	601a      	str	r2, [r3, #0]
 8004298:	605a      	str	r2, [r3, #4]
 800429a:	609a      	str	r2, [r3, #8]
 800429c:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 800429e:	4b31      	ldr	r3, [pc, #196]	; (8004364 <MX_TIM4_Init+0xf0>)
 80042a0:	4a31      	ldr	r2, [pc, #196]	; (8004368 <MX_TIM4_Init+0xf4>)
 80042a2:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 800-1;
 80042a4:	4b2f      	ldr	r3, [pc, #188]	; (8004364 <MX_TIM4_Init+0xf0>)
 80042a6:	f240 321f 	movw	r2, #799	; 0x31f
 80042aa:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 80042ac:	4b2d      	ldr	r3, [pc, #180]	; (8004364 <MX_TIM4_Init+0xf0>)
 80042ae:	2200      	movs	r2, #0
 80042b0:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65536-1;
 80042b2:	4b2c      	ldr	r3, [pc, #176]	; (8004364 <MX_TIM4_Init+0xf0>)
 80042b4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80042b8:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80042ba:	4b2a      	ldr	r3, [pc, #168]	; (8004364 <MX_TIM4_Init+0xf0>)
 80042bc:	2200      	movs	r2, #0
 80042be:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80042c0:	4b28      	ldr	r3, [pc, #160]	; (8004364 <MX_TIM4_Init+0xf0>)
 80042c2:	2280      	movs	r2, #128	; 0x80
 80042c4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 80042c6:	4827      	ldr	r0, [pc, #156]	; (8004364 <MX_TIM4_Init+0xf0>)
 80042c8:	f003 fe0a 	bl	8007ee0 <HAL_TIM_Base_Init>
 80042cc:	4603      	mov	r3, r0
 80042ce:	2b00      	cmp	r3, #0
 80042d0:	d001      	beq.n	80042d6 <MX_TIM4_Init+0x62>
  {
    Error_Handler();
 80042d2:	f000 fac7 	bl	8004864 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80042d6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80042da:	61bb      	str	r3, [r7, #24]
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 80042dc:	f107 0318 	add.w	r3, r7, #24
 80042e0:	4619      	mov	r1, r3
 80042e2:	4820      	ldr	r0, [pc, #128]	; (8004364 <MX_TIM4_Init+0xf0>)
 80042e4:	f004 fde4 	bl	8008eb0 <HAL_TIM_ConfigClockSource>
 80042e8:	4603      	mov	r3, r0
 80042ea:	2b00      	cmp	r3, #0
 80042ec:	d001      	beq.n	80042f2 <MX_TIM4_Init+0x7e>
  {
    Error_Handler();
 80042ee:	f000 fab9 	bl	8004864 <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim4) != HAL_OK)
 80042f2:	481c      	ldr	r0, [pc, #112]	; (8004364 <MX_TIM4_Init+0xf0>)
 80042f4:	f004 f83e 	bl	8008374 <HAL_TIM_IC_Init>
 80042f8:	4603      	mov	r3, r0
 80042fa:	2b00      	cmp	r3, #0
 80042fc:	d001      	beq.n	8004302 <MX_TIM4_Init+0x8e>
  {
    Error_Handler();
 80042fe:	f000 fab1 	bl	8004864 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8004302:	2300      	movs	r3, #0
 8004304:	613b      	str	r3, [r7, #16]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8004306:	2300      	movs	r3, #0
 8004308:	617b      	str	r3, [r7, #20]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 800430a:	f107 0310 	add.w	r3, r7, #16
 800430e:	4619      	mov	r1, r3
 8004310:	4814      	ldr	r0, [pc, #80]	; (8004364 <MX_TIM4_Init+0xf0>)
 8004312:	f005 fbf5 	bl	8009b00 <HAL_TIMEx_MasterConfigSynchronization>
 8004316:	4603      	mov	r3, r0
 8004318:	2b00      	cmp	r3, #0
 800431a:	d001      	beq.n	8004320 <MX_TIM4_Init+0xac>
  {
    Error_Handler();
 800431c:	f000 faa2 	bl	8004864 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_BOTHEDGE;
 8004320:	230a      	movs	r3, #10
 8004322:	603b      	str	r3, [r7, #0]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 8004324:	2301      	movs	r3, #1
 8004326:	607b      	str	r3, [r7, #4]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 8004328:	2300      	movs	r3, #0
 800432a:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICFilter = 0;
 800432c:	2300      	movs	r3, #0
 800432e:	60fb      	str	r3, [r7, #12]
  if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_3) != HAL_OK)
 8004330:	463b      	mov	r3, r7
 8004332:	2208      	movs	r2, #8
 8004334:	4619      	mov	r1, r3
 8004336:	480b      	ldr	r0, [pc, #44]	; (8004364 <MX_TIM4_Init+0xf0>)
 8004338:	f004 fc5c 	bl	8008bf4 <HAL_TIM_IC_ConfigChannel>
 800433c:	4603      	mov	r3, r0
 800433e:	2b00      	cmp	r3, #0
 8004340:	d001      	beq.n	8004346 <MX_TIM4_Init+0xd2>
  {
    Error_Handler();
 8004342:	f000 fa8f 	bl	8004864 <Error_Handler>
  }
  if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_4) != HAL_OK)
 8004346:	463b      	mov	r3, r7
 8004348:	220c      	movs	r2, #12
 800434a:	4619      	mov	r1, r3
 800434c:	4805      	ldr	r0, [pc, #20]	; (8004364 <MX_TIM4_Init+0xf0>)
 800434e:	f004 fc51 	bl	8008bf4 <HAL_TIM_IC_ConfigChannel>
 8004352:	4603      	mov	r3, r0
 8004354:	2b00      	cmp	r3, #0
 8004356:	d001      	beq.n	800435c <MX_TIM4_Init+0xe8>
  {
    Error_Handler();
 8004358:	f000 fa84 	bl	8004864 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 800435c:	bf00      	nop
 800435e:	3728      	adds	r7, #40	; 0x28
 8004360:	46bd      	mov	sp, r7
 8004362:	bd80      	pop	{r7, pc}
 8004364:	2000074c 	.word	0x2000074c
 8004368:	40000800 	.word	0x40000800

0800436c <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 800436c:	b580      	push	{r7, lr}
 800436e:	b086      	sub	sp, #24
 8004370:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8004372:	f107 0308 	add.w	r3, r7, #8
 8004376:	2200      	movs	r2, #0
 8004378:	601a      	str	r2, [r3, #0]
 800437a:	605a      	str	r2, [r3, #4]
 800437c:	609a      	str	r2, [r3, #8]
 800437e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004380:	463b      	mov	r3, r7
 8004382:	2200      	movs	r2, #0
 8004384:	601a      	str	r2, [r3, #0]
 8004386:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 8004388:	4b1d      	ldr	r3, [pc, #116]	; (8004400 <MX_TIM5_Init+0x94>)
 800438a:	4a1e      	ldr	r2, [pc, #120]	; (8004404 <MX_TIM5_Init+0x98>)
 800438c:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 45000-1;
 800438e:	4b1c      	ldr	r3, [pc, #112]	; (8004400 <MX_TIM5_Init+0x94>)
 8004390:	f64a 72c7 	movw	r2, #44999	; 0xafc7
 8004394:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004396:	4b1a      	ldr	r3, [pc, #104]	; (8004400 <MX_TIM5_Init+0x94>)
 8004398:	2200      	movs	r2, #0
 800439a:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 800439c:	4b18      	ldr	r3, [pc, #96]	; (8004400 <MX_TIM5_Init+0x94>)
 800439e:	f04f 32ff 	mov.w	r2, #4294967295
 80043a2:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80043a4:	4b16      	ldr	r3, [pc, #88]	; (8004400 <MX_TIM5_Init+0x94>)
 80043a6:	2200      	movs	r2, #0
 80043a8:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80043aa:	4b15      	ldr	r3, [pc, #84]	; (8004400 <MX_TIM5_Init+0x94>)
 80043ac:	2280      	movs	r2, #128	; 0x80
 80043ae:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 80043b0:	4813      	ldr	r0, [pc, #76]	; (8004400 <MX_TIM5_Init+0x94>)
 80043b2:	f003 fd95 	bl	8007ee0 <HAL_TIM_Base_Init>
 80043b6:	4603      	mov	r3, r0
 80043b8:	2b00      	cmp	r3, #0
 80043ba:	d001      	beq.n	80043c0 <MX_TIM5_Init+0x54>
  {
    Error_Handler();
 80043bc:	f000 fa52 	bl	8004864 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80043c0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80043c4:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 80043c6:	f107 0308 	add.w	r3, r7, #8
 80043ca:	4619      	mov	r1, r3
 80043cc:	480c      	ldr	r0, [pc, #48]	; (8004400 <MX_TIM5_Init+0x94>)
 80043ce:	f004 fd6f 	bl	8008eb0 <HAL_TIM_ConfigClockSource>
 80043d2:	4603      	mov	r3, r0
 80043d4:	2b00      	cmp	r3, #0
 80043d6:	d001      	beq.n	80043dc <MX_TIM5_Init+0x70>
  {
    Error_Handler();
 80043d8:	f000 fa44 	bl	8004864 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80043dc:	2300      	movs	r3, #0
 80043de:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80043e0:	2300      	movs	r3, #0
 80043e2:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 80043e4:	463b      	mov	r3, r7
 80043e6:	4619      	mov	r1, r3
 80043e8:	4805      	ldr	r0, [pc, #20]	; (8004400 <MX_TIM5_Init+0x94>)
 80043ea:	f005 fb89 	bl	8009b00 <HAL_TIMEx_MasterConfigSynchronization>
 80043ee:	4603      	mov	r3, r0
 80043f0:	2b00      	cmp	r3, #0
 80043f2:	d001      	beq.n	80043f8 <MX_TIM5_Init+0x8c>
  {
    Error_Handler();
 80043f4:	f000 fa36 	bl	8004864 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 80043f8:	bf00      	nop
 80043fa:	3718      	adds	r7, #24
 80043fc:	46bd      	mov	sp, r7
 80043fe:	bd80      	pop	{r7, pc}
 8004400:	20000794 	.word	0x20000794
 8004404:	40000c00 	.word	0x40000c00

08004408 <MX_TIM8_Init>:
  * @brief TIM8 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM8_Init(void)
{
 8004408:	b580      	push	{r7, lr}
 800440a:	b08c      	sub	sp, #48	; 0x30
 800440c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM8_Init 0 */

  /* USER CODE END TIM8_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 800440e:	f107 030c 	add.w	r3, r7, #12
 8004412:	2224      	movs	r2, #36	; 0x24
 8004414:	2100      	movs	r1, #0
 8004416:	4618      	mov	r0, r3
 8004418:	f006 fd98 	bl	800af4c <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800441c:	1d3b      	adds	r3, r7, #4
 800441e:	2200      	movs	r2, #0
 8004420:	601a      	str	r2, [r3, #0]
 8004422:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM8_Init 1 */

  /* USER CODE END TIM8_Init 1 */
  htim8.Instance = TIM8;
 8004424:	4b22      	ldr	r3, [pc, #136]	; (80044b0 <MX_TIM8_Init+0xa8>)
 8004426:	4a23      	ldr	r2, [pc, #140]	; (80044b4 <MX_TIM8_Init+0xac>)
 8004428:	601a      	str	r2, [r3, #0]
  htim8.Init.Prescaler = 0;
 800442a:	4b21      	ldr	r3, [pc, #132]	; (80044b0 <MX_TIM8_Init+0xa8>)
 800442c:	2200      	movs	r2, #0
 800442e:	605a      	str	r2, [r3, #4]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004430:	4b1f      	ldr	r3, [pc, #124]	; (80044b0 <MX_TIM8_Init+0xa8>)
 8004432:	2200      	movs	r2, #0
 8004434:	609a      	str	r2, [r3, #8]
  htim8.Init.Period = 65535;
 8004436:	4b1e      	ldr	r3, [pc, #120]	; (80044b0 <MX_TIM8_Init+0xa8>)
 8004438:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800443c:	60da      	str	r2, [r3, #12]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800443e:	4b1c      	ldr	r3, [pc, #112]	; (80044b0 <MX_TIM8_Init+0xa8>)
 8004440:	2200      	movs	r2, #0
 8004442:	611a      	str	r2, [r3, #16]
  htim8.Init.RepetitionCounter = 0;
 8004444:	4b1a      	ldr	r3, [pc, #104]	; (80044b0 <MX_TIM8_Init+0xa8>)
 8004446:	2200      	movs	r2, #0
 8004448:	615a      	str	r2, [r3, #20]
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800444a:	4b19      	ldr	r3, [pc, #100]	; (80044b0 <MX_TIM8_Init+0xa8>)
 800444c:	2280      	movs	r2, #128	; 0x80
 800444e:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 8004450:	2303      	movs	r3, #3
 8004452:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8004454:	2300      	movs	r3, #0
 8004456:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8004458:	2301      	movs	r3, #1
 800445a:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 800445c:	2300      	movs	r3, #0
 800445e:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 12;
 8004460:	230c      	movs	r3, #12
 8004462:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8004464:	2300      	movs	r3, #0
 8004466:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8004468:	2301      	movs	r3, #1
 800446a:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 800446c:	2300      	movs	r3, #0
 800446e:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 12;
 8004470:	230c      	movs	r3, #12
 8004472:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim8, &sConfig) != HAL_OK)
 8004474:	f107 030c 	add.w	r3, r7, #12
 8004478:	4619      	mov	r1, r3
 800447a:	480d      	ldr	r0, [pc, #52]	; (80044b0 <MX_TIM8_Init+0xa8>)
 800447c:	f004 f97e 	bl	800877c <HAL_TIM_Encoder_Init>
 8004480:	4603      	mov	r3, r0
 8004482:	2b00      	cmp	r3, #0
 8004484:	d001      	beq.n	800448a <MX_TIM8_Init+0x82>
  {
    Error_Handler();
 8004486:	f000 f9ed 	bl	8004864 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800448a:	2300      	movs	r3, #0
 800448c:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800448e:	2300      	movs	r3, #0
 8004490:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 8004492:	1d3b      	adds	r3, r7, #4
 8004494:	4619      	mov	r1, r3
 8004496:	4806      	ldr	r0, [pc, #24]	; (80044b0 <MX_TIM8_Init+0xa8>)
 8004498:	f005 fb32 	bl	8009b00 <HAL_TIMEx_MasterConfigSynchronization>
 800449c:	4603      	mov	r3, r0
 800449e:	2b00      	cmp	r3, #0
 80044a0:	d001      	beq.n	80044a6 <MX_TIM8_Init+0x9e>
  {
    Error_Handler();
 80044a2:	f000 f9df 	bl	8004864 <Error_Handler>
  }
  /* USER CODE BEGIN TIM8_Init 2 */

  /* USER CODE END TIM8_Init 2 */

}
 80044a6:	bf00      	nop
 80044a8:	3730      	adds	r7, #48	; 0x30
 80044aa:	46bd      	mov	sp, r7
 80044ac:	bd80      	pop	{r7, pc}
 80044ae:	bf00      	nop
 80044b0:	200007dc 	.word	0x200007dc
 80044b4:	40010400 	.word	0x40010400

080044b8 <MX_UART5_Init>:
  * @brief UART5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART5_Init(void)
{
 80044b8:	b580      	push	{r7, lr}
 80044ba:	af00      	add	r7, sp, #0
  /* USER CODE END UART5_Init 0 */

  /* USER CODE BEGIN UART5_Init 1 */

  /* USER CODE END UART5_Init 1 */
  huart5.Instance = UART5;
 80044bc:	4b11      	ldr	r3, [pc, #68]	; (8004504 <MX_UART5_Init+0x4c>)
 80044be:	4a12      	ldr	r2, [pc, #72]	; (8004508 <MX_UART5_Init+0x50>)
 80044c0:	601a      	str	r2, [r3, #0]
  huart5.Init.BaudRate = 460800;
 80044c2:	4b10      	ldr	r3, [pc, #64]	; (8004504 <MX_UART5_Init+0x4c>)
 80044c4:	f44f 22e1 	mov.w	r2, #460800	; 0x70800
 80044c8:	605a      	str	r2, [r3, #4]
  huart5.Init.WordLength = UART_WORDLENGTH_8B;
 80044ca:	4b0e      	ldr	r3, [pc, #56]	; (8004504 <MX_UART5_Init+0x4c>)
 80044cc:	2200      	movs	r2, #0
 80044ce:	609a      	str	r2, [r3, #8]
  huart5.Init.StopBits = UART_STOPBITS_1;
 80044d0:	4b0c      	ldr	r3, [pc, #48]	; (8004504 <MX_UART5_Init+0x4c>)
 80044d2:	2200      	movs	r2, #0
 80044d4:	60da      	str	r2, [r3, #12]
  huart5.Init.Parity = UART_PARITY_NONE;
 80044d6:	4b0b      	ldr	r3, [pc, #44]	; (8004504 <MX_UART5_Init+0x4c>)
 80044d8:	2200      	movs	r2, #0
 80044da:	611a      	str	r2, [r3, #16]
  huart5.Init.Mode = UART_MODE_TX_RX;
 80044dc:	4b09      	ldr	r3, [pc, #36]	; (8004504 <MX_UART5_Init+0x4c>)
 80044de:	220c      	movs	r2, #12
 80044e0:	615a      	str	r2, [r3, #20]
  huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80044e2:	4b08      	ldr	r3, [pc, #32]	; (8004504 <MX_UART5_Init+0x4c>)
 80044e4:	2200      	movs	r2, #0
 80044e6:	619a      	str	r2, [r3, #24]
  huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 80044e8:	4b06      	ldr	r3, [pc, #24]	; (8004504 <MX_UART5_Init+0x4c>)
 80044ea:	2200      	movs	r2, #0
 80044ec:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart5) != HAL_OK)
 80044ee:	4805      	ldr	r0, [pc, #20]	; (8004504 <MX_UART5_Init+0x4c>)
 80044f0:	f005 fbe8 	bl	8009cc4 <HAL_UART_Init>
 80044f4:	4603      	mov	r3, r0
 80044f6:	2b00      	cmp	r3, #0
 80044f8:	d001      	beq.n	80044fe <MX_UART5_Init+0x46>
  {
    Error_Handler();
 80044fa:	f000 f9b3 	bl	8004864 <Error_Handler>
  }
  /* USER CODE BEGIN UART5_Init 2 */

  /* USER CODE END UART5_Init 2 */

}
 80044fe:	bf00      	nop
 8004500:	bd80      	pop	{r7, pc}
 8004502:	bf00      	nop
 8004504:	20000884 	.word	0x20000884
 8004508:	40005000 	.word	0x40005000

0800450c <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 800450c:	b580      	push	{r7, lr}
 800450e:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8004510:	4b11      	ldr	r3, [pc, #68]	; (8004558 <MX_USART1_UART_Init+0x4c>)
 8004512:	4a12      	ldr	r2, [pc, #72]	; (800455c <MX_USART1_UART_Init+0x50>)
 8004514:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8004516:	4b10      	ldr	r3, [pc, #64]	; (8004558 <MX_USART1_UART_Init+0x4c>)
 8004518:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 800451c:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800451e:	4b0e      	ldr	r3, [pc, #56]	; (8004558 <MX_USART1_UART_Init+0x4c>)
 8004520:	2200      	movs	r2, #0
 8004522:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8004524:	4b0c      	ldr	r3, [pc, #48]	; (8004558 <MX_USART1_UART_Init+0x4c>)
 8004526:	2200      	movs	r2, #0
 8004528:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800452a:	4b0b      	ldr	r3, [pc, #44]	; (8004558 <MX_USART1_UART_Init+0x4c>)
 800452c:	2200      	movs	r2, #0
 800452e:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8004530:	4b09      	ldr	r3, [pc, #36]	; (8004558 <MX_USART1_UART_Init+0x4c>)
 8004532:	220c      	movs	r2, #12
 8004534:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8004536:	4b08      	ldr	r3, [pc, #32]	; (8004558 <MX_USART1_UART_Init+0x4c>)
 8004538:	2200      	movs	r2, #0
 800453a:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 800453c:	4b06      	ldr	r3, [pc, #24]	; (8004558 <MX_USART1_UART_Init+0x4c>)
 800453e:	2200      	movs	r2, #0
 8004540:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8004542:	4805      	ldr	r0, [pc, #20]	; (8004558 <MX_USART1_UART_Init+0x4c>)
 8004544:	f005 fbbe 	bl	8009cc4 <HAL_UART_Init>
 8004548:	4603      	mov	r3, r0
 800454a:	2b00      	cmp	r3, #0
 800454c:	d001      	beq.n	8004552 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 800454e:	f000 f989 	bl	8004864 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8004552:	bf00      	nop
 8004554:	bd80      	pop	{r7, pc}
 8004556:	bf00      	nop
 8004558:	200008c8 	.word	0x200008c8
 800455c:	40011000 	.word	0x40011000

08004560 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8004560:	b580      	push	{r7, lr}
 8004562:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8004564:	4b11      	ldr	r3, [pc, #68]	; (80045ac <MX_USART2_UART_Init+0x4c>)
 8004566:	4a12      	ldr	r2, [pc, #72]	; (80045b0 <MX_USART2_UART_Init+0x50>)
 8004568:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 800456a:	4b10      	ldr	r3, [pc, #64]	; (80045ac <MX_USART2_UART_Init+0x4c>)
 800456c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8004570:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8004572:	4b0e      	ldr	r3, [pc, #56]	; (80045ac <MX_USART2_UART_Init+0x4c>)
 8004574:	2200      	movs	r2, #0
 8004576:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8004578:	4b0c      	ldr	r3, [pc, #48]	; (80045ac <MX_USART2_UART_Init+0x4c>)
 800457a:	2200      	movs	r2, #0
 800457c:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800457e:	4b0b      	ldr	r3, [pc, #44]	; (80045ac <MX_USART2_UART_Init+0x4c>)
 8004580:	2200      	movs	r2, #0
 8004582:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8004584:	4b09      	ldr	r3, [pc, #36]	; (80045ac <MX_USART2_UART_Init+0x4c>)
 8004586:	220c      	movs	r2, #12
 8004588:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800458a:	4b08      	ldr	r3, [pc, #32]	; (80045ac <MX_USART2_UART_Init+0x4c>)
 800458c:	2200      	movs	r2, #0
 800458e:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8004590:	4b06      	ldr	r3, [pc, #24]	; (80045ac <MX_USART2_UART_Init+0x4c>)
 8004592:	2200      	movs	r2, #0
 8004594:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8004596:	4805      	ldr	r0, [pc, #20]	; (80045ac <MX_USART2_UART_Init+0x4c>)
 8004598:	f005 fb94 	bl	8009cc4 <HAL_UART_Init>
 800459c:	4603      	mov	r3, r0
 800459e:	2b00      	cmp	r3, #0
 80045a0:	d001      	beq.n	80045a6 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80045a2:	f000 f95f 	bl	8004864 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80045a6:	bf00      	nop
 80045a8:	bd80      	pop	{r7, pc}
 80045aa:	bf00      	nop
 80045ac:	2000090c 	.word	0x2000090c
 80045b0:	40004400 	.word	0x40004400

080045b4 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 80045b4:	b580      	push	{r7, lr}
 80045b6:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 80045b8:	4b11      	ldr	r3, [pc, #68]	; (8004600 <MX_USART3_UART_Init+0x4c>)
 80045ba:	4a12      	ldr	r2, [pc, #72]	; (8004604 <MX_USART3_UART_Init+0x50>)
 80045bc:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 80045be:	4b10      	ldr	r3, [pc, #64]	; (8004600 <MX_USART3_UART_Init+0x4c>)
 80045c0:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80045c4:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 80045c6:	4b0e      	ldr	r3, [pc, #56]	; (8004600 <MX_USART3_UART_Init+0x4c>)
 80045c8:	2200      	movs	r2, #0
 80045ca:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 80045cc:	4b0c      	ldr	r3, [pc, #48]	; (8004600 <MX_USART3_UART_Init+0x4c>)
 80045ce:	2200      	movs	r2, #0
 80045d0:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 80045d2:	4b0b      	ldr	r3, [pc, #44]	; (8004600 <MX_USART3_UART_Init+0x4c>)
 80045d4:	2200      	movs	r2, #0
 80045d6:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 80045d8:	4b09      	ldr	r3, [pc, #36]	; (8004600 <MX_USART3_UART_Init+0x4c>)
 80045da:	220c      	movs	r2, #12
 80045dc:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80045de:	4b08      	ldr	r3, [pc, #32]	; (8004600 <MX_USART3_UART_Init+0x4c>)
 80045e0:	2200      	movs	r2, #0
 80045e2:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 80045e4:	4b06      	ldr	r3, [pc, #24]	; (8004600 <MX_USART3_UART_Init+0x4c>)
 80045e6:	2200      	movs	r2, #0
 80045e8:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 80045ea:	4805      	ldr	r0, [pc, #20]	; (8004600 <MX_USART3_UART_Init+0x4c>)
 80045ec:	f005 fb6a 	bl	8009cc4 <HAL_UART_Init>
 80045f0:	4603      	mov	r3, r0
 80045f2:	2b00      	cmp	r3, #0
 80045f4:	d001      	beq.n	80045fa <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 80045f6:	f000 f935 	bl	8004864 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 80045fa:	bf00      	nop
 80045fc:	bd80      	pop	{r7, pc}
 80045fe:	bf00      	nop
 8004600:	20000950 	.word	0x20000950
 8004604:	40004800 	.word	0x40004800

08004608 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8004608:	b580      	push	{r7, lr}
 800460a:	b082      	sub	sp, #8
 800460c:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 800460e:	2300      	movs	r3, #0
 8004610:	607b      	str	r3, [r7, #4]
 8004612:	4b0c      	ldr	r3, [pc, #48]	; (8004644 <MX_DMA_Init+0x3c>)
 8004614:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004616:	4a0b      	ldr	r2, [pc, #44]	; (8004644 <MX_DMA_Init+0x3c>)
 8004618:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800461c:	6313      	str	r3, [r2, #48]	; 0x30
 800461e:	4b09      	ldr	r3, [pc, #36]	; (8004644 <MX_DMA_Init+0x3c>)
 8004620:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004622:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004626:	607b      	str	r3, [r7, #4]
 8004628:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream7_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream7_IRQn, 0, 0);
 800462a:	2200      	movs	r2, #0
 800462c:	2100      	movs	r1, #0
 800462e:	202f      	movs	r0, #47	; 0x2f
 8004630:	f001 fdd1 	bl	80061d6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 8004634:	202f      	movs	r0, #47	; 0x2f
 8004636:	f001 fdea 	bl	800620e <HAL_NVIC_EnableIRQ>

}
 800463a:	bf00      	nop
 800463c:	3708      	adds	r7, #8
 800463e:	46bd      	mov	sp, r7
 8004640:	bd80      	pop	{r7, pc}
 8004642:	bf00      	nop
 8004644:	40023800 	.word	0x40023800

08004648 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8004648:	b580      	push	{r7, lr}
 800464a:	b08a      	sub	sp, #40	; 0x28
 800464c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800464e:	f107 0314 	add.w	r3, r7, #20
 8004652:	2200      	movs	r2, #0
 8004654:	601a      	str	r2, [r3, #0]
 8004656:	605a      	str	r2, [r3, #4]
 8004658:	609a      	str	r2, [r3, #8]
 800465a:	60da      	str	r2, [r3, #12]
 800465c:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800465e:	2300      	movs	r3, #0
 8004660:	613b      	str	r3, [r7, #16]
 8004662:	4b64      	ldr	r3, [pc, #400]	; (80047f4 <MX_GPIO_Init+0x1ac>)
 8004664:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004666:	4a63      	ldr	r2, [pc, #396]	; (80047f4 <MX_GPIO_Init+0x1ac>)
 8004668:	f043 0304 	orr.w	r3, r3, #4
 800466c:	6313      	str	r3, [r2, #48]	; 0x30
 800466e:	4b61      	ldr	r3, [pc, #388]	; (80047f4 <MX_GPIO_Init+0x1ac>)
 8004670:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004672:	f003 0304 	and.w	r3, r3, #4
 8004676:	613b      	str	r3, [r7, #16]
 8004678:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800467a:	2300      	movs	r3, #0
 800467c:	60fb      	str	r3, [r7, #12]
 800467e:	4b5d      	ldr	r3, [pc, #372]	; (80047f4 <MX_GPIO_Init+0x1ac>)
 8004680:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004682:	4a5c      	ldr	r2, [pc, #368]	; (80047f4 <MX_GPIO_Init+0x1ac>)
 8004684:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004688:	6313      	str	r3, [r2, #48]	; 0x30
 800468a:	4b5a      	ldr	r3, [pc, #360]	; (80047f4 <MX_GPIO_Init+0x1ac>)
 800468c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800468e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004692:	60fb      	str	r3, [r7, #12]
 8004694:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8004696:	2300      	movs	r3, #0
 8004698:	60bb      	str	r3, [r7, #8]
 800469a:	4b56      	ldr	r3, [pc, #344]	; (80047f4 <MX_GPIO_Init+0x1ac>)
 800469c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800469e:	4a55      	ldr	r2, [pc, #340]	; (80047f4 <MX_GPIO_Init+0x1ac>)
 80046a0:	f043 0301 	orr.w	r3, r3, #1
 80046a4:	6313      	str	r3, [r2, #48]	; 0x30
 80046a6:	4b53      	ldr	r3, [pc, #332]	; (80047f4 <MX_GPIO_Init+0x1ac>)
 80046a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80046aa:	f003 0301 	and.w	r3, r3, #1
 80046ae:	60bb      	str	r3, [r7, #8]
 80046b0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80046b2:	2300      	movs	r3, #0
 80046b4:	607b      	str	r3, [r7, #4]
 80046b6:	4b4f      	ldr	r3, [pc, #316]	; (80047f4 <MX_GPIO_Init+0x1ac>)
 80046b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80046ba:	4a4e      	ldr	r2, [pc, #312]	; (80047f4 <MX_GPIO_Init+0x1ac>)
 80046bc:	f043 0302 	orr.w	r3, r3, #2
 80046c0:	6313      	str	r3, [r2, #48]	; 0x30
 80046c2:	4b4c      	ldr	r3, [pc, #304]	; (80047f4 <MX_GPIO_Init+0x1ac>)
 80046c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80046c6:	f003 0302 	and.w	r3, r3, #2
 80046ca:	607b      	str	r3, [r7, #4]
 80046cc:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80046ce:	2300      	movs	r3, #0
 80046d0:	603b      	str	r3, [r7, #0]
 80046d2:	4b48      	ldr	r3, [pc, #288]	; (80047f4 <MX_GPIO_Init+0x1ac>)
 80046d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80046d6:	4a47      	ldr	r2, [pc, #284]	; (80047f4 <MX_GPIO_Init+0x1ac>)
 80046d8:	f043 0308 	orr.w	r3, r3, #8
 80046dc:	6313      	str	r3, [r2, #48]	; 0x30
 80046de:	4b45      	ldr	r3, [pc, #276]	; (80047f4 <MX_GPIO_Init+0x1ac>)
 80046e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80046e2:	f003 0308 	and.w	r3, r3, #8
 80046e6:	603b      	str	r3, [r7, #0]
 80046e8:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TEL_GPIO4_GPIO_Port, TEL_GPIO4_Pin, GPIO_PIN_RESET);
 80046ea:	2200      	movs	r2, #0
 80046ec:	2102      	movs	r1, #2
 80046ee:	4842      	ldr	r0, [pc, #264]	; (80047f8 <MX_GPIO_Init+0x1b0>)
 80046f0:	f002 fd72 	bl	80071d8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, TEL_GPIO7_Pin|On_Board_LED_Pin, GPIO_PIN_RESET);
 80046f4:	2200      	movs	r2, #0
 80046f6:	2122      	movs	r1, #34	; 0x22
 80046f8:	4840      	ldr	r0, [pc, #256]	; (80047fc <MX_GPIO_Init+0x1b4>)
 80046fa:	f002 fd6d 	bl	80071d8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED4_Pin|LED1_Pin|LED2_Pin|LED3_Pin
 80046fe:	2200      	movs	r2, #0
 8004700:	f24e 0142 	movw	r1, #57410	; 0xe042
 8004704:	483e      	ldr	r0, [pc, #248]	; (8004800 <MX_GPIO_Init+0x1b8>)
 8004706:	f002 fd67 	bl	80071d8 <HAL_GPIO_WritePin>
                          |Motor_EN_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin : On_Board_Button_Pin */
  GPIO_InitStruct.Pin = On_Board_Button_Pin;
 800470a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800470e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8004710:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8004714:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004716:	2300      	movs	r3, #0
 8004718:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(On_Board_Button_GPIO_Port, &GPIO_InitStruct);
 800471a:	f107 0314 	add.w	r3, r7, #20
 800471e:	4619      	mov	r1, r3
 8004720:	4835      	ldr	r0, [pc, #212]	; (80047f8 <MX_GPIO_Init+0x1b0>)
 8004722:	f002 fbad 	bl	8006e80 <HAL_GPIO_Init>

  /*Configure GPIO pin : TEL_GPIO4_Pin */
  GPIO_InitStruct.Pin = TEL_GPIO4_Pin;
 8004726:	2302      	movs	r3, #2
 8004728:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800472a:	2301      	movs	r3, #1
 800472c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800472e:	2300      	movs	r3, #0
 8004730:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004732:	2300      	movs	r3, #0
 8004734:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(TEL_GPIO4_GPIO_Port, &GPIO_InitStruct);
 8004736:	f107 0314 	add.w	r3, r7, #20
 800473a:	4619      	mov	r1, r3
 800473c:	482e      	ldr	r0, [pc, #184]	; (80047f8 <MX_GPIO_Init+0x1b0>)
 800473e:	f002 fb9f 	bl	8006e80 <HAL_GPIO_Init>

  /*Configure GPIO pins : TEL_GPIO7_Pin On_Board_LED_Pin */
  GPIO_InitStruct.Pin = TEL_GPIO7_Pin|On_Board_LED_Pin;
 8004742:	2322      	movs	r3, #34	; 0x22
 8004744:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8004746:	2301      	movs	r3, #1
 8004748:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800474a:	2300      	movs	r3, #0
 800474c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800474e:	2300      	movs	r3, #0
 8004750:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8004752:	f107 0314 	add.w	r3, r7, #20
 8004756:	4619      	mov	r1, r3
 8004758:	4828      	ldr	r0, [pc, #160]	; (80047fc <MX_GPIO_Init+0x1b4>)
 800475a:	f002 fb91 	bl	8006e80 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED4_Pin LED1_Pin LED2_Pin LED3_Pin
                           Motor_EN_Pin */
  GPIO_InitStruct.Pin = LED4_Pin|LED1_Pin|LED2_Pin|LED3_Pin
 800475e:	f24e 0342 	movw	r3, #57410	; 0xe042
 8004762:	617b      	str	r3, [r7, #20]
                          |Motor_EN_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8004764:	2301      	movs	r3, #1
 8004766:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004768:	2300      	movs	r3, #0
 800476a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800476c:	2300      	movs	r3, #0
 800476e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8004770:	f107 0314 	add.w	r3, r7, #20
 8004774:	4619      	mov	r1, r3
 8004776:	4822      	ldr	r0, [pc, #136]	; (8004800 <MX_GPIO_Init+0x1b8>)
 8004778:	f002 fb82 	bl	8006e80 <HAL_GPIO_Init>

  /*Configure GPIO pins : SW2_Pin B2_Pin Motor_Feedback_Pin */
  GPIO_InitStruct.Pin = SW2_Pin|B2_Pin|Motor_Feedback_Pin;
 800477c:	f44f 6394 	mov.w	r3, #1184	; 0x4a0
 8004780:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8004782:	2300      	movs	r3, #0
 8004784:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004786:	2300      	movs	r3, #0
 8004788:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800478a:	f107 0314 	add.w	r3, r7, #20
 800478e:	4619      	mov	r1, r3
 8004790:	481b      	ldr	r0, [pc, #108]	; (8004800 <MX_GPIO_Init+0x1b8>)
 8004792:	f002 fb75 	bl	8006e80 <HAL_GPIO_Init>

  /*Configure GPIO pin : SW1_Pin */
  GPIO_InitStruct.Pin = SW1_Pin;
 8004796:	f44f 7380 	mov.w	r3, #256	; 0x100
 800479a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800479c:	2300      	movs	r3, #0
 800479e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80047a0:	2300      	movs	r3, #0
 80047a2:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(SW1_GPIO_Port, &GPIO_InitStruct);
 80047a4:	f107 0314 	add.w	r3, r7, #20
 80047a8:	4619      	mov	r1, r3
 80047aa:	4814      	ldr	r0, [pc, #80]	; (80047fc <MX_GPIO_Init+0x1b4>)
 80047ac:	f002 fb68 	bl	8006e80 <HAL_GPIO_Init>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 80047b0:	2310      	movs	r3, #16
 80047b2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80047b4:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 80047b8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80047ba:	2300      	movs	r3, #0
 80047bc:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 80047be:	f107 0314 	add.w	r3, r7, #20
 80047c2:	4619      	mov	r1, r3
 80047c4:	480e      	ldr	r0, [pc, #56]	; (8004800 <MX_GPIO_Init+0x1b8>)
 80047c6:	f002 fb5b 	bl	8006e80 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI4_IRQn, 0, 0);
 80047ca:	2200      	movs	r2, #0
 80047cc:	2100      	movs	r1, #0
 80047ce:	200a      	movs	r0, #10
 80047d0:	f001 fd01 	bl	80061d6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 80047d4:	200a      	movs	r0, #10
 80047d6:	f001 fd1a 	bl	800620e <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 80047da:	2200      	movs	r2, #0
 80047dc:	2100      	movs	r1, #0
 80047de:	2028      	movs	r0, #40	; 0x28
 80047e0:	f001 fcf9 	bl	80061d6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 80047e4:	2028      	movs	r0, #40	; 0x28
 80047e6:	f001 fd12 	bl	800620e <HAL_NVIC_EnableIRQ>

}
 80047ea:	bf00      	nop
 80047ec:	3728      	adds	r7, #40	; 0x28
 80047ee:	46bd      	mov	sp, r7
 80047f0:	bd80      	pop	{r7, pc}
 80047f2:	bf00      	nop
 80047f4:	40023800 	.word	0x40023800
 80047f8:	40020800 	.word	0x40020800
 80047fc:	40020000 	.word	0x40020000
 8004800:	40020400 	.word	0x40020400

08004804 <HAL_GPIO_EXTI_Callback>:

/* USER CODE BEGIN 4 */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8004804:	b580      	push	{r7, lr}
 8004806:	b082      	sub	sp, #8
 8004808:	af00      	add	r7, sp, #0
 800480a:	4603      	mov	r3, r0
 800480c:	80fb      	strh	r3, [r7, #6]
	//ha meg lett nyomva a nucleon a kék gomb
	if(GPIO_Pin == On_Board_Button_Pin)
 800480e:	88fb      	ldrh	r3, [r7, #6]
 8004810:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8004814:	d105      	bne.n	8004822 <HAL_GPIO_EXTI_Callback+0x1e>
	{
		bFlag[0]=1;
 8004816:	4b09      	ldr	r3, [pc, #36]	; (800483c <HAL_GPIO_EXTI_Callback+0x38>)
 8004818:	2201      	movs	r2, #1
 800481a:	701a      	strb	r2, [r3, #0]
		NVIC_DisableIRQ(On_Board_Button_EXTI_IRQn);
 800481c:	2028      	movs	r0, #40	; 0x28
 800481e:	f7ff f981 	bl	8003b24 <__NVIC_DisableIRQ>
	}
	if(GPIO_Pin == B1_Pin)
 8004822:	88fb      	ldrh	r3, [r7, #6]
 8004824:	2b10      	cmp	r3, #16
 8004826:	d105      	bne.n	8004834 <HAL_GPIO_EXTI_Callback+0x30>
	{
		bFlag[1]=1;
 8004828:	4b04      	ldr	r3, [pc, #16]	; (800483c <HAL_GPIO_EXTI_Callback+0x38>)
 800482a:	2201      	movs	r2, #1
 800482c:	705a      	strb	r2, [r3, #1]
		NVIC_DisableIRQ(B1_EXTI_IRQn);
 800482e:	200a      	movs	r0, #10
 8004830:	f7ff f978 	bl	8003b24 <__NVIC_DisableIRQ>
	}
}
 8004834:	bf00      	nop
 8004836:	3708      	adds	r7, #8
 8004838:	46bd      	mov	sp, r7
 800483a:	bd80      	pop	{r7, pc}
 800483c:	20000268 	.word	0x20000268

08004840 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8004840:	b580      	push	{r7, lr}
 8004842:	b082      	sub	sp, #8
 8004844:	af00      	add	r7, sp, #0
 8004846:	6078      	str	r0, [r7, #4]
	if(huart == &huart1)Uart_Receive_From_PC_ISR(huart);
 8004848:	687b      	ldr	r3, [r7, #4]
 800484a:	4a05      	ldr	r2, [pc, #20]	; (8004860 <HAL_UART_RxCpltCallback+0x20>)
 800484c:	4293      	cmp	r3, r2
 800484e:	d102      	bne.n	8004856 <HAL_UART_RxCpltCallback+0x16>
 8004850:	6878      	ldr	r0, [r7, #4]
 8004852:	f7fc fd73 	bl	800133c <Uart_Receive_From_PC_ISR>
	//else if(huart==&huart3)Uart_Receive_Thunderboard_ISR(huart);
}
 8004856:	bf00      	nop
 8004858:	3708      	adds	r7, #8
 800485a:	46bd      	mov	sp, r7
 800485c:	bd80      	pop	{r7, pc}
 800485e:	bf00      	nop
 8004860:	200008c8 	.word	0x200008c8

08004864 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8004864:	b480      	push	{r7}
 8004866:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 8004868:	b672      	cpsid	i
}
 800486a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800486c:	e7fe      	b.n	800486c <Error_Handler+0x8>
	...

08004870 <Remote_Control_Init>:
#include <math.h>

uint32_t tEdge[3];

void Remote_Control_Init(TIM_HandleTypeDef *htim, uint32_t channel)
{
 8004870:	b580      	push	{r7, lr}
 8004872:	b082      	sub	sp, #8
 8004874:	af00      	add	r7, sp, #0
 8004876:	6078      	str	r0, [r7, #4]
 8004878:	6039      	str	r1, [r7, #0]
	tEdge[0] = 1000;
 800487a:	4b0a      	ldr	r3, [pc, #40]	; (80048a4 <Remote_Control_Init+0x34>)
 800487c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004880:	601a      	str	r2, [r3, #0]
	tEdge[1] = 500;
 8004882:	4b08      	ldr	r3, [pc, #32]	; (80048a4 <Remote_Control_Init+0x34>)
 8004884:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8004888:	605a      	str	r2, [r3, #4]
	tEdge[2] = 0;
 800488a:	4b06      	ldr	r3, [pc, #24]	; (80048a4 <Remote_Control_Init+0x34>)
 800488c:	2200      	movs	r2, #0
 800488e:	609a      	str	r2, [r3, #8]
	HAL_TIM_IC_Start_DMA(htim, channel, tEdge, 3);
 8004890:	2303      	movs	r3, #3
 8004892:	4a04      	ldr	r2, [pc, #16]	; (80048a4 <Remote_Control_Init+0x34>)
 8004894:	6839      	ldr	r1, [r7, #0]
 8004896:	6878      	ldr	r0, [r7, #4]
 8004898:	f003 fdc6 	bl	8008428 <HAL_TIM_IC_Start_DMA>
}
 800489c:	bf00      	nop
 800489e:	3708      	adds	r7, #8
 80048a0:	46bd      	mov	sp, r7
 80048a2:	bd80      	pop	{r7, pc}
 80048a4:	20000998 	.word	0x20000998

080048a8 <Remote_Control_Task>:
void Remote_Control_Task(TIM_HandleTypeDef *htim, uint32_t channel,UART_HandleTypeDef *huart, uint32_t tick, uint32_t period)
{
 80048a8:	b580      	push	{r7, lr}
 80048aa:	b084      	sub	sp, #16
 80048ac:	af00      	add	r7, sp, #0
 80048ae:	60f8      	str	r0, [r7, #12]
 80048b0:	60b9      	str	r1, [r7, #8]
 80048b2:	607a      	str	r2, [r7, #4]
 80048b4:	603b      	str	r3, [r7, #0]
	static int32_t dt1=85;
	static int32_t dt2=85;
	static uint32_t tLow=85;
	static uint32_t remote_control_tick=0;

	if(remote_control_tick>tick) return;
 80048b6:	4b57      	ldr	r3, [pc, #348]	; (8004a14 <Remote_Control_Task+0x16c>)
 80048b8:	681b      	ldr	r3, [r3, #0]
 80048ba:	683a      	ldr	r2, [r7, #0]
 80048bc:	429a      	cmp	r2, r3
 80048be:	f0c0 80a5 	bcc.w	8004a0c <Remote_Control_Task+0x164>
	remote_control_tick = tick + period;
 80048c2:	683a      	ldr	r2, [r7, #0]
 80048c4:	69bb      	ldr	r3, [r7, #24]
 80048c6:	4413      	add	r3, r2
 80048c8:	4a52      	ldr	r2, [pc, #328]	; (8004a14 <Remote_Control_Task+0x16c>)
 80048ca:	6013      	str	r3, [r2, #0]

	//a három időkülönbésgből egy a T_s, egy a D*T_s és egy az (1-D)*T_s, de nem tudjuk melyik melyik a cirkuláris buffer miatt
	HAL_NVIC_DisableIRQ(TIM4_IRQn);  //atomivá tesszük ezt a két műveletet
 80048cc:	201e      	movs	r0, #30
 80048ce:	f001 fcac 	bl	800622a <HAL_NVIC_DisableIRQ>
	dt0=abs(tEdge[1]-tEdge[0]);
 80048d2:	4b51      	ldr	r3, [pc, #324]	; (8004a18 <Remote_Control_Task+0x170>)
 80048d4:	685a      	ldr	r2, [r3, #4]
 80048d6:	4b50      	ldr	r3, [pc, #320]	; (8004a18 <Remote_Control_Task+0x170>)
 80048d8:	681b      	ldr	r3, [r3, #0]
 80048da:	1ad3      	subs	r3, r2, r3
 80048dc:	2b00      	cmp	r3, #0
 80048de:	bfb8      	it	lt
 80048e0:	425b      	neglt	r3, r3
 80048e2:	4a4e      	ldr	r2, [pc, #312]	; (8004a1c <Remote_Control_Task+0x174>)
 80048e4:	6013      	str	r3, [r2, #0]
	dt1=abs(tEdge[2]-tEdge[1]);
 80048e6:	4b4c      	ldr	r3, [pc, #304]	; (8004a18 <Remote_Control_Task+0x170>)
 80048e8:	689a      	ldr	r2, [r3, #8]
 80048ea:	4b4b      	ldr	r3, [pc, #300]	; (8004a18 <Remote_Control_Task+0x170>)
 80048ec:	685b      	ldr	r3, [r3, #4]
 80048ee:	1ad3      	subs	r3, r2, r3
 80048f0:	2b00      	cmp	r3, #0
 80048f2:	bfb8      	it	lt
 80048f4:	425b      	neglt	r3, r3
 80048f6:	4a4a      	ldr	r2, [pc, #296]	; (8004a20 <Remote_Control_Task+0x178>)
 80048f8:	6013      	str	r3, [r2, #0]
	dt2=abs(tEdge[0]-tEdge[2]);
 80048fa:	4b47      	ldr	r3, [pc, #284]	; (8004a18 <Remote_Control_Task+0x170>)
 80048fc:	681a      	ldr	r2, [r3, #0]
 80048fe:	4b46      	ldr	r3, [pc, #280]	; (8004a18 <Remote_Control_Task+0x170>)
 8004900:	689b      	ldr	r3, [r3, #8]
 8004902:	1ad3      	subs	r3, r2, r3
 8004904:	2b00      	cmp	r3, #0
 8004906:	bfb8      	it	lt
 8004908:	425b      	neglt	r3, r3
 800490a:	4a46      	ldr	r2, [pc, #280]	; (8004a24 <Remote_Control_Task+0x17c>)
 800490c:	6013      	str	r3, [r2, #0]
	HAL_NVIC_EnableIRQ(TIM4_IRQn);   // mostmár fogadhatjuk az új pwm periodusokat
 800490e:	201e      	movs	r0, #30
 8004910:	f001 fc7d 	bl	800620e <HAL_NVIC_EnableIRQ>

	//lehet hogy a kövi fűrészjelen vagyunk, ezt ki kell kompenzálni
	if(dt0>5000)dt0=0xffff-dt0;
 8004914:	4b41      	ldr	r3, [pc, #260]	; (8004a1c <Remote_Control_Task+0x174>)
 8004916:	681b      	ldr	r3, [r3, #0]
 8004918:	f241 3288 	movw	r2, #5000	; 0x1388
 800491c:	4293      	cmp	r3, r2
 800491e:	dd06      	ble.n	800492e <Remote_Control_Task+0x86>
 8004920:	4b3e      	ldr	r3, [pc, #248]	; (8004a1c <Remote_Control_Task+0x174>)
 8004922:	681b      	ldr	r3, [r3, #0]
 8004924:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 8004928:	33ff      	adds	r3, #255	; 0xff
 800492a:	4a3c      	ldr	r2, [pc, #240]	; (8004a1c <Remote_Control_Task+0x174>)
 800492c:	6013      	str	r3, [r2, #0]
	if(dt1>5000)dt1=0xffff-dt1;
 800492e:	4b3c      	ldr	r3, [pc, #240]	; (8004a20 <Remote_Control_Task+0x178>)
 8004930:	681b      	ldr	r3, [r3, #0]
 8004932:	f241 3288 	movw	r2, #5000	; 0x1388
 8004936:	4293      	cmp	r3, r2
 8004938:	dd06      	ble.n	8004948 <Remote_Control_Task+0xa0>
 800493a:	4b39      	ldr	r3, [pc, #228]	; (8004a20 <Remote_Control_Task+0x178>)
 800493c:	681b      	ldr	r3, [r3, #0]
 800493e:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 8004942:	33ff      	adds	r3, #255	; 0xff
 8004944:	4a36      	ldr	r2, [pc, #216]	; (8004a20 <Remote_Control_Task+0x178>)
 8004946:	6013      	str	r3, [r2, #0]
	if(dt2>5000)dt2=0xffff-dt2;
 8004948:	4b36      	ldr	r3, [pc, #216]	; (8004a24 <Remote_Control_Task+0x17c>)
 800494a:	681b      	ldr	r3, [r3, #0]
 800494c:	f241 3288 	movw	r2, #5000	; 0x1388
 8004950:	4293      	cmp	r3, r2
 8004952:	dd06      	ble.n	8004962 <Remote_Control_Task+0xba>
 8004954:	4b33      	ldr	r3, [pc, #204]	; (8004a24 <Remote_Control_Task+0x17c>)
 8004956:	681b      	ldr	r3, [r3, #0]
 8004958:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 800495c:	33ff      	adds	r3, #255	; 0xff
 800495e:	4a31      	ldr	r2, [pc, #196]	; (8004a24 <Remote_Control_Task+0x17c>)
 8004960:	6013      	str	r3, [r2, #0]

	//mostmár tényleges időkülönbségeink vannak
	//a három különbéség közül a legkisebb kell nekünk ->
	if(dt0<dt1 && dt0<dt2) //a 4 különbésg közül a legkisebb adja a magasan töltött időt
 8004962:	4b2e      	ldr	r3, [pc, #184]	; (8004a1c <Remote_Control_Task+0x174>)
 8004964:	681a      	ldr	r2, [r3, #0]
 8004966:	4b2e      	ldr	r3, [pc, #184]	; (8004a20 <Remote_Control_Task+0x178>)
 8004968:	681b      	ldr	r3, [r3, #0]
 800496a:	429a      	cmp	r2, r3
 800496c:	da0b      	bge.n	8004986 <Remote_Control_Task+0xde>
 800496e:	4b2b      	ldr	r3, [pc, #172]	; (8004a1c <Remote_Control_Task+0x174>)
 8004970:	681a      	ldr	r2, [r3, #0]
 8004972:	4b2c      	ldr	r3, [pc, #176]	; (8004a24 <Remote_Control_Task+0x17c>)
 8004974:	681b      	ldr	r3, [r3, #0]
 8004976:	429a      	cmp	r2, r3
 8004978:	da05      	bge.n	8004986 <Remote_Control_Task+0xde>
	{
		tLow=dt0;
 800497a:	4b28      	ldr	r3, [pc, #160]	; (8004a1c <Remote_Control_Task+0x174>)
 800497c:	681b      	ldr	r3, [r3, #0]
 800497e:	461a      	mov	r2, r3
 8004980:	4b29      	ldr	r3, [pc, #164]	; (8004a28 <Remote_Control_Task+0x180>)
 8004982:	601a      	str	r2, [r3, #0]
 8004984:	e016      	b.n	80049b4 <Remote_Control_Task+0x10c>
	}
	else if(dt1<dt0 && dt1<dt2)
 8004986:	4b26      	ldr	r3, [pc, #152]	; (8004a20 <Remote_Control_Task+0x178>)
 8004988:	681a      	ldr	r2, [r3, #0]
 800498a:	4b24      	ldr	r3, [pc, #144]	; (8004a1c <Remote_Control_Task+0x174>)
 800498c:	681b      	ldr	r3, [r3, #0]
 800498e:	429a      	cmp	r2, r3
 8004990:	da0b      	bge.n	80049aa <Remote_Control_Task+0x102>
 8004992:	4b23      	ldr	r3, [pc, #140]	; (8004a20 <Remote_Control_Task+0x178>)
 8004994:	681a      	ldr	r2, [r3, #0]
 8004996:	4b23      	ldr	r3, [pc, #140]	; (8004a24 <Remote_Control_Task+0x17c>)
 8004998:	681b      	ldr	r3, [r3, #0]
 800499a:	429a      	cmp	r2, r3
 800499c:	da05      	bge.n	80049aa <Remote_Control_Task+0x102>
	{
		tLow=dt1;
 800499e:	4b20      	ldr	r3, [pc, #128]	; (8004a20 <Remote_Control_Task+0x178>)
 80049a0:	681b      	ldr	r3, [r3, #0]
 80049a2:	461a      	mov	r2, r3
 80049a4:	4b20      	ldr	r3, [pc, #128]	; (8004a28 <Remote_Control_Task+0x180>)
 80049a6:	601a      	str	r2, [r3, #0]
 80049a8:	e004      	b.n	80049b4 <Remote_Control_Task+0x10c>
	}
	else
	{
		tLow=dt2;
 80049aa:	4b1e      	ldr	r3, [pc, #120]	; (8004a24 <Remote_Control_Task+0x17c>)
 80049ac:	681b      	ldr	r3, [r3, #0]
 80049ae:	461a      	mov	r2, r3
 80049b0:	4b1d      	ldr	r3, [pc, #116]	; (8004a28 <Remote_Control_Task+0x180>)
 80049b2:	601a      	str	r2, [r3, #0]
	sprintf(string,"%d\n\r",tLow);
	HAL_UART_Transmit(huart, string, strlen(string), 10);
	remote_control_tick = tick + 1000;
#endif

	if((tLow>70 && tLow<100) || tLow==1000)
 80049b4:	4b1c      	ldr	r3, [pc, #112]	; (8004a28 <Remote_Control_Task+0x180>)
 80049b6:	681b      	ldr	r3, [r3, #0]
 80049b8:	2b46      	cmp	r3, #70	; 0x46
 80049ba:	d903      	bls.n	80049c4 <Remote_Control_Task+0x11c>
 80049bc:	4b1a      	ldr	r3, [pc, #104]	; (8004a28 <Remote_Control_Task+0x180>)
 80049be:	681b      	ldr	r3, [r3, #0]
 80049c0:	2b63      	cmp	r3, #99	; 0x63
 80049c2:	d904      	bls.n	80049ce <Remote_Control_Task+0x126>
 80049c4:	4b18      	ldr	r3, [pc, #96]	; (8004a28 <Remote_Control_Task+0x180>)
 80049c6:	681b      	ldr	r3, [r3, #0]
 80049c8:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80049cc:	d109      	bne.n	80049e2 <Remote_Control_Task+0x13a>
	{
		LED_R(1); //ha nincs meghuzva a ravasz tLow kb 87, ha meg van huzva kb 55, ha előre van nyomva kb 118
 80049ce:	2200      	movs	r2, #0
 80049d0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80049d4:	4815      	ldr	r0, [pc, #84]	; (8004a2c <Remote_Control_Task+0x184>)
 80049d6:	f002 fbff 	bl	80071d8 <HAL_GPIO_WritePin>
		motorEnRemote=0;//állítsuk le a motort ha meghuzzuk a ravaszt
 80049da:	4b15      	ldr	r3, [pc, #84]	; (8004a30 <Remote_Control_Task+0x188>)
 80049dc:	2200      	movs	r2, #0
 80049de:	701a      	strb	r2, [r3, #0]
 80049e0:	e015      	b.n	8004a0e <Remote_Control_Task+0x166>
	}
	else
	{
		LED_R(0);
 80049e2:	2201      	movs	r2, #1
 80049e4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80049e8:	4810      	ldr	r0, [pc, #64]	; (8004a2c <Remote_Control_Task+0x184>)
 80049ea:	f002 fbf5 	bl	80071d8 <HAL_GPIO_WritePin>
		if(tLow <= 70) motorEnRemote=1;
 80049ee:	4b0e      	ldr	r3, [pc, #56]	; (8004a28 <Remote_Control_Task+0x180>)
 80049f0:	681b      	ldr	r3, [r3, #0]
 80049f2:	2b46      	cmp	r3, #70	; 0x46
 80049f4:	d803      	bhi.n	80049fe <Remote_Control_Task+0x156>
 80049f6:	4b0e      	ldr	r3, [pc, #56]	; (8004a30 <Remote_Control_Task+0x188>)
 80049f8:	2201      	movs	r2, #1
 80049fa:	701a      	strb	r2, [r3, #0]
 80049fc:	e002      	b.n	8004a04 <Remote_Control_Task+0x15c>
		else motorEnRemote=2;
 80049fe:	4b0c      	ldr	r3, [pc, #48]	; (8004a30 <Remote_Control_Task+0x188>)
 8004a00:	2202      	movs	r2, #2
 8004a02:	701a      	strb	r2, [r3, #0]
		readytorace=1;
 8004a04:	4b0b      	ldr	r3, [pc, #44]	; (8004a34 <Remote_Control_Task+0x18c>)
 8004a06:	2201      	movs	r2, #1
 8004a08:	701a      	strb	r2, [r3, #0]
 8004a0a:	e000      	b.n	8004a0e <Remote_Control_Task+0x166>
	if(remote_control_tick>tick) return;
 8004a0c:	bf00      	nop

	}
}
 8004a0e:	3710      	adds	r7, #16
 8004a10:	46bd      	mov	sp, r7
 8004a12:	bd80      	pop	{r7, pc}
 8004a14:	200009a4 	.word	0x200009a4
 8004a18:	20000998 	.word	0x20000998
 8004a1c:	2000005c 	.word	0x2000005c
 8004a20:	20000060 	.word	0x20000060
 8004a24:	20000064 	.word	0x20000064
 8004a28:	20000068 	.word	0x20000068
 8004a2c:	40020400 	.word	0x40020400
 8004a30:	20000994 	.word	0x20000994
 8004a34:	2000027d 	.word	0x2000027d

08004a38 <HAL_MspInit>:
 8004a38:	b580      	push	{r7, lr}
 8004a3a:	b082      	sub	sp, #8
 8004a3c:	af00      	add	r7, sp, #0
 8004a3e:	2300      	movs	r3, #0
 8004a40:	607b      	str	r3, [r7, #4]
 8004a42:	4b10      	ldr	r3, [pc, #64]	; (8004a84 <HAL_MspInit+0x4c>)
 8004a44:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004a46:	4a0f      	ldr	r2, [pc, #60]	; (8004a84 <HAL_MspInit+0x4c>)
 8004a48:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004a4c:	6453      	str	r3, [r2, #68]	; 0x44
 8004a4e:	4b0d      	ldr	r3, [pc, #52]	; (8004a84 <HAL_MspInit+0x4c>)
 8004a50:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004a52:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004a56:	607b      	str	r3, [r7, #4]
 8004a58:	687b      	ldr	r3, [r7, #4]
 8004a5a:	2300      	movs	r3, #0
 8004a5c:	603b      	str	r3, [r7, #0]
 8004a5e:	4b09      	ldr	r3, [pc, #36]	; (8004a84 <HAL_MspInit+0x4c>)
 8004a60:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004a62:	4a08      	ldr	r2, [pc, #32]	; (8004a84 <HAL_MspInit+0x4c>)
 8004a64:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004a68:	6413      	str	r3, [r2, #64]	; 0x40
 8004a6a:	4b06      	ldr	r3, [pc, #24]	; (8004a84 <HAL_MspInit+0x4c>)
 8004a6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004a6e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004a72:	603b      	str	r3, [r7, #0]
 8004a74:	683b      	ldr	r3, [r7, #0]
 8004a76:	2007      	movs	r0, #7
 8004a78:	f001 fba2 	bl	80061c0 <HAL_NVIC_SetPriorityGrouping>
 8004a7c:	bf00      	nop
 8004a7e:	3708      	adds	r7, #8
 8004a80:	46bd      	mov	sp, r7
 8004a82:	bd80      	pop	{r7, pc}
 8004a84:	40023800 	.word	0x40023800

08004a88 <HAL_ADC_MspInit>:
 8004a88:	b580      	push	{r7, lr}
 8004a8a:	b08c      	sub	sp, #48	; 0x30
 8004a8c:	af00      	add	r7, sp, #0
 8004a8e:	6078      	str	r0, [r7, #4]
 8004a90:	f107 031c 	add.w	r3, r7, #28
 8004a94:	2200      	movs	r2, #0
 8004a96:	601a      	str	r2, [r3, #0]
 8004a98:	605a      	str	r2, [r3, #4]
 8004a9a:	609a      	str	r2, [r3, #8]
 8004a9c:	60da      	str	r2, [r3, #12]
 8004a9e:	611a      	str	r2, [r3, #16]
 8004aa0:	687b      	ldr	r3, [r7, #4]
 8004aa2:	681b      	ldr	r3, [r3, #0]
 8004aa4:	4a2e      	ldr	r2, [pc, #184]	; (8004b60 <HAL_ADC_MspInit+0xd8>)
 8004aa6:	4293      	cmp	r3, r2
 8004aa8:	d128      	bne.n	8004afc <HAL_ADC_MspInit+0x74>
 8004aaa:	2300      	movs	r3, #0
 8004aac:	61bb      	str	r3, [r7, #24]
 8004aae:	4b2d      	ldr	r3, [pc, #180]	; (8004b64 <HAL_ADC_MspInit+0xdc>)
 8004ab0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004ab2:	4a2c      	ldr	r2, [pc, #176]	; (8004b64 <HAL_ADC_MspInit+0xdc>)
 8004ab4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004ab8:	6453      	str	r3, [r2, #68]	; 0x44
 8004aba:	4b2a      	ldr	r3, [pc, #168]	; (8004b64 <HAL_ADC_MspInit+0xdc>)
 8004abc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004abe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004ac2:	61bb      	str	r3, [r7, #24]
 8004ac4:	69bb      	ldr	r3, [r7, #24]
 8004ac6:	2300      	movs	r3, #0
 8004ac8:	617b      	str	r3, [r7, #20]
 8004aca:	4b26      	ldr	r3, [pc, #152]	; (8004b64 <HAL_ADC_MspInit+0xdc>)
 8004acc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004ace:	4a25      	ldr	r2, [pc, #148]	; (8004b64 <HAL_ADC_MspInit+0xdc>)
 8004ad0:	f043 0302 	orr.w	r3, r3, #2
 8004ad4:	6313      	str	r3, [r2, #48]	; 0x30
 8004ad6:	4b23      	ldr	r3, [pc, #140]	; (8004b64 <HAL_ADC_MspInit+0xdc>)
 8004ad8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004ada:	f003 0302 	and.w	r3, r3, #2
 8004ade:	617b      	str	r3, [r7, #20]
 8004ae0:	697b      	ldr	r3, [r7, #20]
 8004ae2:	2301      	movs	r3, #1
 8004ae4:	61fb      	str	r3, [r7, #28]
 8004ae6:	2303      	movs	r3, #3
 8004ae8:	623b      	str	r3, [r7, #32]
 8004aea:	2300      	movs	r3, #0
 8004aec:	627b      	str	r3, [r7, #36]	; 0x24
 8004aee:	f107 031c 	add.w	r3, r7, #28
 8004af2:	4619      	mov	r1, r3
 8004af4:	481c      	ldr	r0, [pc, #112]	; (8004b68 <HAL_ADC_MspInit+0xe0>)
 8004af6:	f002 f9c3 	bl	8006e80 <HAL_GPIO_Init>
 8004afa:	e02c      	b.n	8004b56 <HAL_ADC_MspInit+0xce>
 8004afc:	687b      	ldr	r3, [r7, #4]
 8004afe:	681b      	ldr	r3, [r3, #0]
 8004b00:	4a1a      	ldr	r2, [pc, #104]	; (8004b6c <HAL_ADC_MspInit+0xe4>)
 8004b02:	4293      	cmp	r3, r2
 8004b04:	d127      	bne.n	8004b56 <HAL_ADC_MspInit+0xce>
 8004b06:	2300      	movs	r3, #0
 8004b08:	613b      	str	r3, [r7, #16]
 8004b0a:	4b16      	ldr	r3, [pc, #88]	; (8004b64 <HAL_ADC_MspInit+0xdc>)
 8004b0c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004b0e:	4a15      	ldr	r2, [pc, #84]	; (8004b64 <HAL_ADC_MspInit+0xdc>)
 8004b10:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004b14:	6453      	str	r3, [r2, #68]	; 0x44
 8004b16:	4b13      	ldr	r3, [pc, #76]	; (8004b64 <HAL_ADC_MspInit+0xdc>)
 8004b18:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004b1a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8004b1e:	613b      	str	r3, [r7, #16]
 8004b20:	693b      	ldr	r3, [r7, #16]
 8004b22:	2300      	movs	r3, #0
 8004b24:	60fb      	str	r3, [r7, #12]
 8004b26:	4b0f      	ldr	r3, [pc, #60]	; (8004b64 <HAL_ADC_MspInit+0xdc>)
 8004b28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b2a:	4a0e      	ldr	r2, [pc, #56]	; (8004b64 <HAL_ADC_MspInit+0xdc>)
 8004b2c:	f043 0304 	orr.w	r3, r3, #4
 8004b30:	6313      	str	r3, [r2, #48]	; 0x30
 8004b32:	4b0c      	ldr	r3, [pc, #48]	; (8004b64 <HAL_ADC_MspInit+0xdc>)
 8004b34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b36:	f003 0304 	and.w	r3, r3, #4
 8004b3a:	60fb      	str	r3, [r7, #12]
 8004b3c:	68fb      	ldr	r3, [r7, #12]
 8004b3e:	2308      	movs	r3, #8
 8004b40:	61fb      	str	r3, [r7, #28]
 8004b42:	2303      	movs	r3, #3
 8004b44:	623b      	str	r3, [r7, #32]
 8004b46:	2300      	movs	r3, #0
 8004b48:	627b      	str	r3, [r7, #36]	; 0x24
 8004b4a:	f107 031c 	add.w	r3, r7, #28
 8004b4e:	4619      	mov	r1, r3
 8004b50:	4807      	ldr	r0, [pc, #28]	; (8004b70 <HAL_ADC_MspInit+0xe8>)
 8004b52:	f002 f995 	bl	8006e80 <HAL_GPIO_Init>
 8004b56:	bf00      	nop
 8004b58:	3730      	adds	r7, #48	; 0x30
 8004b5a:	46bd      	mov	sp, r7
 8004b5c:	bd80      	pop	{r7, pc}
 8004b5e:	bf00      	nop
 8004b60:	40012000 	.word	0x40012000
 8004b64:	40023800 	.word	0x40023800
 8004b68:	40020400 	.word	0x40020400
 8004b6c:	40012100 	.word	0x40012100
 8004b70:	40020800 	.word	0x40020800

08004b74 <HAL_TIM_Base_MspInit>:
 8004b74:	b580      	push	{r7, lr}
 8004b76:	b08e      	sub	sp, #56	; 0x38
 8004b78:	af00      	add	r7, sp, #0
 8004b7a:	6078      	str	r0, [r7, #4]
 8004b7c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004b80:	2200      	movs	r2, #0
 8004b82:	601a      	str	r2, [r3, #0]
 8004b84:	605a      	str	r2, [r3, #4]
 8004b86:	609a      	str	r2, [r3, #8]
 8004b88:	60da      	str	r2, [r3, #12]
 8004b8a:	611a      	str	r2, [r3, #16]
 8004b8c:	687b      	ldr	r3, [r7, #4]
 8004b8e:	681b      	ldr	r3, [r3, #0]
 8004b90:	4a5e      	ldr	r2, [pc, #376]	; (8004d0c <HAL_TIM_Base_MspInit+0x198>)
 8004b92:	4293      	cmp	r3, r2
 8004b94:	d10e      	bne.n	8004bb4 <HAL_TIM_Base_MspInit+0x40>
 8004b96:	2300      	movs	r3, #0
 8004b98:	623b      	str	r3, [r7, #32]
 8004b9a:	4b5d      	ldr	r3, [pc, #372]	; (8004d10 <HAL_TIM_Base_MspInit+0x19c>)
 8004b9c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004b9e:	4a5c      	ldr	r2, [pc, #368]	; (8004d10 <HAL_TIM_Base_MspInit+0x19c>)
 8004ba0:	f043 0301 	orr.w	r3, r3, #1
 8004ba4:	6453      	str	r3, [r2, #68]	; 0x44
 8004ba6:	4b5a      	ldr	r3, [pc, #360]	; (8004d10 <HAL_TIM_Base_MspInit+0x19c>)
 8004ba8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004baa:	f003 0301 	and.w	r3, r3, #1
 8004bae:	623b      	str	r3, [r7, #32]
 8004bb0:	6a3b      	ldr	r3, [r7, #32]
 8004bb2:	e0a7      	b.n	8004d04 <HAL_TIM_Base_MspInit+0x190>
 8004bb4:	687b      	ldr	r3, [r7, #4]
 8004bb6:	681b      	ldr	r3, [r3, #0]
 8004bb8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004bbc:	d116      	bne.n	8004bec <HAL_TIM_Base_MspInit+0x78>
 8004bbe:	2300      	movs	r3, #0
 8004bc0:	61fb      	str	r3, [r7, #28]
 8004bc2:	4b53      	ldr	r3, [pc, #332]	; (8004d10 <HAL_TIM_Base_MspInit+0x19c>)
 8004bc4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004bc6:	4a52      	ldr	r2, [pc, #328]	; (8004d10 <HAL_TIM_Base_MspInit+0x19c>)
 8004bc8:	f043 0301 	orr.w	r3, r3, #1
 8004bcc:	6413      	str	r3, [r2, #64]	; 0x40
 8004bce:	4b50      	ldr	r3, [pc, #320]	; (8004d10 <HAL_TIM_Base_MspInit+0x19c>)
 8004bd0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004bd2:	f003 0301 	and.w	r3, r3, #1
 8004bd6:	61fb      	str	r3, [r7, #28]
 8004bd8:	69fb      	ldr	r3, [r7, #28]
 8004bda:	2200      	movs	r2, #0
 8004bdc:	2100      	movs	r1, #0
 8004bde:	201c      	movs	r0, #28
 8004be0:	f001 faf9 	bl	80061d6 <HAL_NVIC_SetPriority>
 8004be4:	201c      	movs	r0, #28
 8004be6:	f001 fb12 	bl	800620e <HAL_NVIC_EnableIRQ>
 8004bea:	e08b      	b.n	8004d04 <HAL_TIM_Base_MspInit+0x190>
 8004bec:	687b      	ldr	r3, [r7, #4]
 8004bee:	681b      	ldr	r3, [r3, #0]
 8004bf0:	4a48      	ldr	r2, [pc, #288]	; (8004d14 <HAL_TIM_Base_MspInit+0x1a0>)
 8004bf2:	4293      	cmp	r3, r2
 8004bf4:	d10e      	bne.n	8004c14 <HAL_TIM_Base_MspInit+0xa0>
 8004bf6:	2300      	movs	r3, #0
 8004bf8:	61bb      	str	r3, [r7, #24]
 8004bfa:	4b45      	ldr	r3, [pc, #276]	; (8004d10 <HAL_TIM_Base_MspInit+0x19c>)
 8004bfc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004bfe:	4a44      	ldr	r2, [pc, #272]	; (8004d10 <HAL_TIM_Base_MspInit+0x19c>)
 8004c00:	f043 0302 	orr.w	r3, r3, #2
 8004c04:	6413      	str	r3, [r2, #64]	; 0x40
 8004c06:	4b42      	ldr	r3, [pc, #264]	; (8004d10 <HAL_TIM_Base_MspInit+0x19c>)
 8004c08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c0a:	f003 0302 	and.w	r3, r3, #2
 8004c0e:	61bb      	str	r3, [r7, #24]
 8004c10:	69bb      	ldr	r3, [r7, #24]
 8004c12:	e077      	b.n	8004d04 <HAL_TIM_Base_MspInit+0x190>
 8004c14:	687b      	ldr	r3, [r7, #4]
 8004c16:	681b      	ldr	r3, [r3, #0]
 8004c18:	4a3f      	ldr	r2, [pc, #252]	; (8004d18 <HAL_TIM_Base_MspInit+0x1a4>)
 8004c1a:	4293      	cmp	r3, r2
 8004c1c:	d15f      	bne.n	8004cde <HAL_TIM_Base_MspInit+0x16a>
 8004c1e:	2300      	movs	r3, #0
 8004c20:	617b      	str	r3, [r7, #20]
 8004c22:	4b3b      	ldr	r3, [pc, #236]	; (8004d10 <HAL_TIM_Base_MspInit+0x19c>)
 8004c24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c26:	4a3a      	ldr	r2, [pc, #232]	; (8004d10 <HAL_TIM_Base_MspInit+0x19c>)
 8004c28:	f043 0304 	orr.w	r3, r3, #4
 8004c2c:	6413      	str	r3, [r2, #64]	; 0x40
 8004c2e:	4b38      	ldr	r3, [pc, #224]	; (8004d10 <HAL_TIM_Base_MspInit+0x19c>)
 8004c30:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c32:	f003 0304 	and.w	r3, r3, #4
 8004c36:	617b      	str	r3, [r7, #20]
 8004c38:	697b      	ldr	r3, [r7, #20]
 8004c3a:	2300      	movs	r3, #0
 8004c3c:	613b      	str	r3, [r7, #16]
 8004c3e:	4b34      	ldr	r3, [pc, #208]	; (8004d10 <HAL_TIM_Base_MspInit+0x19c>)
 8004c40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004c42:	4a33      	ldr	r2, [pc, #204]	; (8004d10 <HAL_TIM_Base_MspInit+0x19c>)
 8004c44:	f043 0302 	orr.w	r3, r3, #2
 8004c48:	6313      	str	r3, [r2, #48]	; 0x30
 8004c4a:	4b31      	ldr	r3, [pc, #196]	; (8004d10 <HAL_TIM_Base_MspInit+0x19c>)
 8004c4c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004c4e:	f003 0302 	and.w	r3, r3, #2
 8004c52:	613b      	str	r3, [r7, #16]
 8004c54:	693b      	ldr	r3, [r7, #16]
 8004c56:	f44f 7340 	mov.w	r3, #768	; 0x300
 8004c5a:	627b      	str	r3, [r7, #36]	; 0x24
 8004c5c:	2302      	movs	r3, #2
 8004c5e:	62bb      	str	r3, [r7, #40]	; 0x28
 8004c60:	2300      	movs	r3, #0
 8004c62:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004c64:	2300      	movs	r3, #0
 8004c66:	633b      	str	r3, [r7, #48]	; 0x30
 8004c68:	2302      	movs	r3, #2
 8004c6a:	637b      	str	r3, [r7, #52]	; 0x34
 8004c6c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004c70:	4619      	mov	r1, r3
 8004c72:	482a      	ldr	r0, [pc, #168]	; (8004d1c <HAL_TIM_Base_MspInit+0x1a8>)
 8004c74:	f002 f904 	bl	8006e80 <HAL_GPIO_Init>
 8004c78:	4b29      	ldr	r3, [pc, #164]	; (8004d20 <HAL_TIM_Base_MspInit+0x1ac>)
 8004c7a:	4a2a      	ldr	r2, [pc, #168]	; (8004d24 <HAL_TIM_Base_MspInit+0x1b0>)
 8004c7c:	601a      	str	r2, [r3, #0]
 8004c7e:	4b28      	ldr	r3, [pc, #160]	; (8004d20 <HAL_TIM_Base_MspInit+0x1ac>)
 8004c80:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8004c84:	605a      	str	r2, [r3, #4]
 8004c86:	4b26      	ldr	r3, [pc, #152]	; (8004d20 <HAL_TIM_Base_MspInit+0x1ac>)
 8004c88:	2200      	movs	r2, #0
 8004c8a:	609a      	str	r2, [r3, #8]
 8004c8c:	4b24      	ldr	r3, [pc, #144]	; (8004d20 <HAL_TIM_Base_MspInit+0x1ac>)
 8004c8e:	2200      	movs	r2, #0
 8004c90:	60da      	str	r2, [r3, #12]
 8004c92:	4b23      	ldr	r3, [pc, #140]	; (8004d20 <HAL_TIM_Base_MspInit+0x1ac>)
 8004c94:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004c98:	611a      	str	r2, [r3, #16]
 8004c9a:	4b21      	ldr	r3, [pc, #132]	; (8004d20 <HAL_TIM_Base_MspInit+0x1ac>)
 8004c9c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8004ca0:	615a      	str	r2, [r3, #20]
 8004ca2:	4b1f      	ldr	r3, [pc, #124]	; (8004d20 <HAL_TIM_Base_MspInit+0x1ac>)
 8004ca4:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8004ca8:	619a      	str	r2, [r3, #24]
 8004caa:	4b1d      	ldr	r3, [pc, #116]	; (8004d20 <HAL_TIM_Base_MspInit+0x1ac>)
 8004cac:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004cb0:	61da      	str	r2, [r3, #28]
 8004cb2:	4b1b      	ldr	r3, [pc, #108]	; (8004d20 <HAL_TIM_Base_MspInit+0x1ac>)
 8004cb4:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8004cb8:	621a      	str	r2, [r3, #32]
 8004cba:	4b19      	ldr	r3, [pc, #100]	; (8004d20 <HAL_TIM_Base_MspInit+0x1ac>)
 8004cbc:	2200      	movs	r2, #0
 8004cbe:	625a      	str	r2, [r3, #36]	; 0x24
 8004cc0:	4817      	ldr	r0, [pc, #92]	; (8004d20 <HAL_TIM_Base_MspInit+0x1ac>)
 8004cc2:	f001 facd 	bl	8006260 <HAL_DMA_Init>
 8004cc6:	4603      	mov	r3, r0
 8004cc8:	2b00      	cmp	r3, #0
 8004cca:	d001      	beq.n	8004cd0 <HAL_TIM_Base_MspInit+0x15c>
 8004ccc:	f7ff fdca 	bl	8004864 <Error_Handler>
 8004cd0:	687b      	ldr	r3, [r7, #4]
 8004cd2:	4a13      	ldr	r2, [pc, #76]	; (8004d20 <HAL_TIM_Base_MspInit+0x1ac>)
 8004cd4:	62da      	str	r2, [r3, #44]	; 0x2c
 8004cd6:	4a12      	ldr	r2, [pc, #72]	; (8004d20 <HAL_TIM_Base_MspInit+0x1ac>)
 8004cd8:	687b      	ldr	r3, [r7, #4]
 8004cda:	6393      	str	r3, [r2, #56]	; 0x38
 8004cdc:	e012      	b.n	8004d04 <HAL_TIM_Base_MspInit+0x190>
 8004cde:	687b      	ldr	r3, [r7, #4]
 8004ce0:	681b      	ldr	r3, [r3, #0]
 8004ce2:	4a11      	ldr	r2, [pc, #68]	; (8004d28 <HAL_TIM_Base_MspInit+0x1b4>)
 8004ce4:	4293      	cmp	r3, r2
 8004ce6:	d10d      	bne.n	8004d04 <HAL_TIM_Base_MspInit+0x190>
 8004ce8:	2300      	movs	r3, #0
 8004cea:	60fb      	str	r3, [r7, #12]
 8004cec:	4b08      	ldr	r3, [pc, #32]	; (8004d10 <HAL_TIM_Base_MspInit+0x19c>)
 8004cee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004cf0:	4a07      	ldr	r2, [pc, #28]	; (8004d10 <HAL_TIM_Base_MspInit+0x19c>)
 8004cf2:	f043 0308 	orr.w	r3, r3, #8
 8004cf6:	6413      	str	r3, [r2, #64]	; 0x40
 8004cf8:	4b05      	ldr	r3, [pc, #20]	; (8004d10 <HAL_TIM_Base_MspInit+0x19c>)
 8004cfa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004cfc:	f003 0308 	and.w	r3, r3, #8
 8004d00:	60fb      	str	r3, [r7, #12]
 8004d02:	68fb      	ldr	r3, [r7, #12]
 8004d04:	bf00      	nop
 8004d06:	3738      	adds	r7, #56	; 0x38
 8004d08:	46bd      	mov	sp, r7
 8004d0a:	bd80      	pop	{r7, pc}
 8004d0c:	40010000 	.word	0x40010000
 8004d10:	40023800 	.word	0x40023800
 8004d14:	40000400 	.word	0x40000400
 8004d18:	40000800 	.word	0x40000800
 8004d1c:	40020400 	.word	0x40020400
 8004d20:	20000824 	.word	0x20000824
 8004d24:	400260b8 	.word	0x400260b8
 8004d28:	40000c00 	.word	0x40000c00

08004d2c <HAL_TIM_Encoder_MspInit>:
 8004d2c:	b580      	push	{r7, lr}
 8004d2e:	b08a      	sub	sp, #40	; 0x28
 8004d30:	af00      	add	r7, sp, #0
 8004d32:	6078      	str	r0, [r7, #4]
 8004d34:	f107 0314 	add.w	r3, r7, #20
 8004d38:	2200      	movs	r2, #0
 8004d3a:	601a      	str	r2, [r3, #0]
 8004d3c:	605a      	str	r2, [r3, #4]
 8004d3e:	609a      	str	r2, [r3, #8]
 8004d40:	60da      	str	r2, [r3, #12]
 8004d42:	611a      	str	r2, [r3, #16]
 8004d44:	687b      	ldr	r3, [r7, #4]
 8004d46:	681b      	ldr	r3, [r3, #0]
 8004d48:	4a19      	ldr	r2, [pc, #100]	; (8004db0 <HAL_TIM_Encoder_MspInit+0x84>)
 8004d4a:	4293      	cmp	r3, r2
 8004d4c:	d12b      	bne.n	8004da6 <HAL_TIM_Encoder_MspInit+0x7a>
 8004d4e:	2300      	movs	r3, #0
 8004d50:	613b      	str	r3, [r7, #16]
 8004d52:	4b18      	ldr	r3, [pc, #96]	; (8004db4 <HAL_TIM_Encoder_MspInit+0x88>)
 8004d54:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004d56:	4a17      	ldr	r2, [pc, #92]	; (8004db4 <HAL_TIM_Encoder_MspInit+0x88>)
 8004d58:	f043 0302 	orr.w	r3, r3, #2
 8004d5c:	6453      	str	r3, [r2, #68]	; 0x44
 8004d5e:	4b15      	ldr	r3, [pc, #84]	; (8004db4 <HAL_TIM_Encoder_MspInit+0x88>)
 8004d60:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004d62:	f003 0302 	and.w	r3, r3, #2
 8004d66:	613b      	str	r3, [r7, #16]
 8004d68:	693b      	ldr	r3, [r7, #16]
 8004d6a:	2300      	movs	r3, #0
 8004d6c:	60fb      	str	r3, [r7, #12]
 8004d6e:	4b11      	ldr	r3, [pc, #68]	; (8004db4 <HAL_TIM_Encoder_MspInit+0x88>)
 8004d70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004d72:	4a10      	ldr	r2, [pc, #64]	; (8004db4 <HAL_TIM_Encoder_MspInit+0x88>)
 8004d74:	f043 0304 	orr.w	r3, r3, #4
 8004d78:	6313      	str	r3, [r2, #48]	; 0x30
 8004d7a:	4b0e      	ldr	r3, [pc, #56]	; (8004db4 <HAL_TIM_Encoder_MspInit+0x88>)
 8004d7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004d7e:	f003 0304 	and.w	r3, r3, #4
 8004d82:	60fb      	str	r3, [r7, #12]
 8004d84:	68fb      	ldr	r3, [r7, #12]
 8004d86:	23c0      	movs	r3, #192	; 0xc0
 8004d88:	617b      	str	r3, [r7, #20]
 8004d8a:	2302      	movs	r3, #2
 8004d8c:	61bb      	str	r3, [r7, #24]
 8004d8e:	2300      	movs	r3, #0
 8004d90:	61fb      	str	r3, [r7, #28]
 8004d92:	2300      	movs	r3, #0
 8004d94:	623b      	str	r3, [r7, #32]
 8004d96:	2303      	movs	r3, #3
 8004d98:	627b      	str	r3, [r7, #36]	; 0x24
 8004d9a:	f107 0314 	add.w	r3, r7, #20
 8004d9e:	4619      	mov	r1, r3
 8004da0:	4805      	ldr	r0, [pc, #20]	; (8004db8 <HAL_TIM_Encoder_MspInit+0x8c>)
 8004da2:	f002 f86d 	bl	8006e80 <HAL_GPIO_Init>
 8004da6:	bf00      	nop
 8004da8:	3728      	adds	r7, #40	; 0x28
 8004daa:	46bd      	mov	sp, r7
 8004dac:	bd80      	pop	{r7, pc}
 8004dae:	bf00      	nop
 8004db0:	40010400 	.word	0x40010400
 8004db4:	40023800 	.word	0x40023800
 8004db8:	40020800 	.word	0x40020800

08004dbc <HAL_TIM_MspPostInit>:
 8004dbc:	b580      	push	{r7, lr}
 8004dbe:	b08a      	sub	sp, #40	; 0x28
 8004dc0:	af00      	add	r7, sp, #0
 8004dc2:	6078      	str	r0, [r7, #4]
 8004dc4:	f107 0314 	add.w	r3, r7, #20
 8004dc8:	2200      	movs	r2, #0
 8004dca:	601a      	str	r2, [r3, #0]
 8004dcc:	605a      	str	r2, [r3, #4]
 8004dce:	609a      	str	r2, [r3, #8]
 8004dd0:	60da      	str	r2, [r3, #12]
 8004dd2:	611a      	str	r2, [r3, #16]
 8004dd4:	687b      	ldr	r3, [r7, #4]
 8004dd6:	681b      	ldr	r3, [r3, #0]
 8004dd8:	4a37      	ldr	r2, [pc, #220]	; (8004eb8 <HAL_TIM_MspPostInit+0xfc>)
 8004dda:	4293      	cmp	r3, r2
 8004ddc:	d11f      	bne.n	8004e1e <HAL_TIM_MspPostInit+0x62>
 8004dde:	2300      	movs	r3, #0
 8004de0:	613b      	str	r3, [r7, #16]
 8004de2:	4b36      	ldr	r3, [pc, #216]	; (8004ebc <HAL_TIM_MspPostInit+0x100>)
 8004de4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004de6:	4a35      	ldr	r2, [pc, #212]	; (8004ebc <HAL_TIM_MspPostInit+0x100>)
 8004de8:	f043 0301 	orr.w	r3, r3, #1
 8004dec:	6313      	str	r3, [r2, #48]	; 0x30
 8004dee:	4b33      	ldr	r3, [pc, #204]	; (8004ebc <HAL_TIM_MspPostInit+0x100>)
 8004df0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004df2:	f003 0301 	and.w	r3, r3, #1
 8004df6:	613b      	str	r3, [r7, #16]
 8004df8:	693b      	ldr	r3, [r7, #16]
 8004dfa:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8004dfe:	617b      	str	r3, [r7, #20]
 8004e00:	2302      	movs	r3, #2
 8004e02:	61bb      	str	r3, [r7, #24]
 8004e04:	2300      	movs	r3, #0
 8004e06:	61fb      	str	r3, [r7, #28]
 8004e08:	2300      	movs	r3, #0
 8004e0a:	623b      	str	r3, [r7, #32]
 8004e0c:	2301      	movs	r3, #1
 8004e0e:	627b      	str	r3, [r7, #36]	; 0x24
 8004e10:	f107 0314 	add.w	r3, r7, #20
 8004e14:	4619      	mov	r1, r3
 8004e16:	482a      	ldr	r0, [pc, #168]	; (8004ec0 <HAL_TIM_MspPostInit+0x104>)
 8004e18:	f002 f832 	bl	8006e80 <HAL_GPIO_Init>
 8004e1c:	e047      	b.n	8004eae <HAL_TIM_MspPostInit+0xf2>
 8004e1e:	687b      	ldr	r3, [r7, #4]
 8004e20:	681b      	ldr	r3, [r3, #0]
 8004e22:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004e26:	d11f      	bne.n	8004e68 <HAL_TIM_MspPostInit+0xac>
 8004e28:	2300      	movs	r3, #0
 8004e2a:	60fb      	str	r3, [r7, #12]
 8004e2c:	4b23      	ldr	r3, [pc, #140]	; (8004ebc <HAL_TIM_MspPostInit+0x100>)
 8004e2e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004e30:	4a22      	ldr	r2, [pc, #136]	; (8004ebc <HAL_TIM_MspPostInit+0x100>)
 8004e32:	f043 0301 	orr.w	r3, r3, #1
 8004e36:	6313      	str	r3, [r2, #48]	; 0x30
 8004e38:	4b20      	ldr	r3, [pc, #128]	; (8004ebc <HAL_TIM_MspPostInit+0x100>)
 8004e3a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004e3c:	f003 0301 	and.w	r3, r3, #1
 8004e40:	60fb      	str	r3, [r7, #12]
 8004e42:	68fb      	ldr	r3, [r7, #12]
 8004e44:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8004e48:	617b      	str	r3, [r7, #20]
 8004e4a:	2302      	movs	r3, #2
 8004e4c:	61bb      	str	r3, [r7, #24]
 8004e4e:	2300      	movs	r3, #0
 8004e50:	61fb      	str	r3, [r7, #28]
 8004e52:	2300      	movs	r3, #0
 8004e54:	623b      	str	r3, [r7, #32]
 8004e56:	2301      	movs	r3, #1
 8004e58:	627b      	str	r3, [r7, #36]	; 0x24
 8004e5a:	f107 0314 	add.w	r3, r7, #20
 8004e5e:	4619      	mov	r1, r3
 8004e60:	4817      	ldr	r0, [pc, #92]	; (8004ec0 <HAL_TIM_MspPostInit+0x104>)
 8004e62:	f002 f80d 	bl	8006e80 <HAL_GPIO_Init>
 8004e66:	e022      	b.n	8004eae <HAL_TIM_MspPostInit+0xf2>
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	681b      	ldr	r3, [r3, #0]
 8004e6c:	4a15      	ldr	r2, [pc, #84]	; (8004ec4 <HAL_TIM_MspPostInit+0x108>)
 8004e6e:	4293      	cmp	r3, r2
 8004e70:	d11d      	bne.n	8004eae <HAL_TIM_MspPostInit+0xf2>
 8004e72:	2300      	movs	r3, #0
 8004e74:	60bb      	str	r3, [r7, #8]
 8004e76:	4b11      	ldr	r3, [pc, #68]	; (8004ebc <HAL_TIM_MspPostInit+0x100>)
 8004e78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004e7a:	4a10      	ldr	r2, [pc, #64]	; (8004ebc <HAL_TIM_MspPostInit+0x100>)
 8004e7c:	f043 0301 	orr.w	r3, r3, #1
 8004e80:	6313      	str	r3, [r2, #48]	; 0x30
 8004e82:	4b0e      	ldr	r3, [pc, #56]	; (8004ebc <HAL_TIM_MspPostInit+0x100>)
 8004e84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004e86:	f003 0301 	and.w	r3, r3, #1
 8004e8a:	60bb      	str	r3, [r7, #8]
 8004e8c:	68bb      	ldr	r3, [r7, #8]
 8004e8e:	23c0      	movs	r3, #192	; 0xc0
 8004e90:	617b      	str	r3, [r7, #20]
 8004e92:	2302      	movs	r3, #2
 8004e94:	61bb      	str	r3, [r7, #24]
 8004e96:	2300      	movs	r3, #0
 8004e98:	61fb      	str	r3, [r7, #28]
 8004e9a:	2300      	movs	r3, #0
 8004e9c:	623b      	str	r3, [r7, #32]
 8004e9e:	2302      	movs	r3, #2
 8004ea0:	627b      	str	r3, [r7, #36]	; 0x24
 8004ea2:	f107 0314 	add.w	r3, r7, #20
 8004ea6:	4619      	mov	r1, r3
 8004ea8:	4805      	ldr	r0, [pc, #20]	; (8004ec0 <HAL_TIM_MspPostInit+0x104>)
 8004eaa:	f001 ffe9 	bl	8006e80 <HAL_GPIO_Init>
 8004eae:	bf00      	nop
 8004eb0:	3728      	adds	r7, #40	; 0x28
 8004eb2:	46bd      	mov	sp, r7
 8004eb4:	bd80      	pop	{r7, pc}
 8004eb6:	bf00      	nop
 8004eb8:	40010000 	.word	0x40010000
 8004ebc:	40023800 	.word	0x40023800
 8004ec0:	40020000 	.word	0x40020000
 8004ec4:	40000400 	.word	0x40000400

08004ec8 <HAL_UART_MspInit>:
 8004ec8:	b580      	push	{r7, lr}
 8004eca:	b090      	sub	sp, #64	; 0x40
 8004ecc:	af00      	add	r7, sp, #0
 8004ece:	6078      	str	r0, [r7, #4]
 8004ed0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004ed4:	2200      	movs	r2, #0
 8004ed6:	601a      	str	r2, [r3, #0]
 8004ed8:	605a      	str	r2, [r3, #4]
 8004eda:	609a      	str	r2, [r3, #8]
 8004edc:	60da      	str	r2, [r3, #12]
 8004ede:	611a      	str	r2, [r3, #16]
 8004ee0:	687b      	ldr	r3, [r7, #4]
 8004ee2:	681b      	ldr	r3, [r3, #0]
 8004ee4:	4a7c      	ldr	r2, [pc, #496]	; (80050d8 <HAL_UART_MspInit+0x210>)
 8004ee6:	4293      	cmp	r3, r2
 8004ee8:	d153      	bne.n	8004f92 <HAL_UART_MspInit+0xca>
 8004eea:	2300      	movs	r3, #0
 8004eec:	62bb      	str	r3, [r7, #40]	; 0x28
 8004eee:	4b7b      	ldr	r3, [pc, #492]	; (80050dc <HAL_UART_MspInit+0x214>)
 8004ef0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ef2:	4a7a      	ldr	r2, [pc, #488]	; (80050dc <HAL_UART_MspInit+0x214>)
 8004ef4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8004ef8:	6413      	str	r3, [r2, #64]	; 0x40
 8004efa:	4b78      	ldr	r3, [pc, #480]	; (80050dc <HAL_UART_MspInit+0x214>)
 8004efc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004efe:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004f02:	62bb      	str	r3, [r7, #40]	; 0x28
 8004f04:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004f06:	2300      	movs	r3, #0
 8004f08:	627b      	str	r3, [r7, #36]	; 0x24
 8004f0a:	4b74      	ldr	r3, [pc, #464]	; (80050dc <HAL_UART_MspInit+0x214>)
 8004f0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f0e:	4a73      	ldr	r2, [pc, #460]	; (80050dc <HAL_UART_MspInit+0x214>)
 8004f10:	f043 0304 	orr.w	r3, r3, #4
 8004f14:	6313      	str	r3, [r2, #48]	; 0x30
 8004f16:	4b71      	ldr	r3, [pc, #452]	; (80050dc <HAL_UART_MspInit+0x214>)
 8004f18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f1a:	f003 0304 	and.w	r3, r3, #4
 8004f1e:	627b      	str	r3, [r7, #36]	; 0x24
 8004f20:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004f22:	2300      	movs	r3, #0
 8004f24:	623b      	str	r3, [r7, #32]
 8004f26:	4b6d      	ldr	r3, [pc, #436]	; (80050dc <HAL_UART_MspInit+0x214>)
 8004f28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f2a:	4a6c      	ldr	r2, [pc, #432]	; (80050dc <HAL_UART_MspInit+0x214>)
 8004f2c:	f043 0308 	orr.w	r3, r3, #8
 8004f30:	6313      	str	r3, [r2, #48]	; 0x30
 8004f32:	4b6a      	ldr	r3, [pc, #424]	; (80050dc <HAL_UART_MspInit+0x214>)
 8004f34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f36:	f003 0308 	and.w	r3, r3, #8
 8004f3a:	623b      	str	r3, [r7, #32]
 8004f3c:	6a3b      	ldr	r3, [r7, #32]
 8004f3e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004f42:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004f44:	2302      	movs	r3, #2
 8004f46:	633b      	str	r3, [r7, #48]	; 0x30
 8004f48:	2300      	movs	r3, #0
 8004f4a:	637b      	str	r3, [r7, #52]	; 0x34
 8004f4c:	2303      	movs	r3, #3
 8004f4e:	63bb      	str	r3, [r7, #56]	; 0x38
 8004f50:	2308      	movs	r3, #8
 8004f52:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004f54:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004f58:	4619      	mov	r1, r3
 8004f5a:	4861      	ldr	r0, [pc, #388]	; (80050e0 <HAL_UART_MspInit+0x218>)
 8004f5c:	f001 ff90 	bl	8006e80 <HAL_GPIO_Init>
 8004f60:	2304      	movs	r3, #4
 8004f62:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004f64:	2302      	movs	r3, #2
 8004f66:	633b      	str	r3, [r7, #48]	; 0x30
 8004f68:	2300      	movs	r3, #0
 8004f6a:	637b      	str	r3, [r7, #52]	; 0x34
 8004f6c:	2303      	movs	r3, #3
 8004f6e:	63bb      	str	r3, [r7, #56]	; 0x38
 8004f70:	2308      	movs	r3, #8
 8004f72:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004f74:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004f78:	4619      	mov	r1, r3
 8004f7a:	485a      	ldr	r0, [pc, #360]	; (80050e4 <HAL_UART_MspInit+0x21c>)
 8004f7c:	f001 ff80 	bl	8006e80 <HAL_GPIO_Init>
 8004f80:	2200      	movs	r2, #0
 8004f82:	2100      	movs	r1, #0
 8004f84:	2035      	movs	r0, #53	; 0x35
 8004f86:	f001 f926 	bl	80061d6 <HAL_NVIC_SetPriority>
 8004f8a:	2035      	movs	r0, #53	; 0x35
 8004f8c:	f001 f93f 	bl	800620e <HAL_NVIC_EnableIRQ>
 8004f90:	e09e      	b.n	80050d0 <HAL_UART_MspInit+0x208>
 8004f92:	687b      	ldr	r3, [r7, #4]
 8004f94:	681b      	ldr	r3, [r3, #0]
 8004f96:	4a54      	ldr	r2, [pc, #336]	; (80050e8 <HAL_UART_MspInit+0x220>)
 8004f98:	4293      	cmp	r3, r2
 8004f9a:	d135      	bne.n	8005008 <HAL_UART_MspInit+0x140>
 8004f9c:	2300      	movs	r3, #0
 8004f9e:	61fb      	str	r3, [r7, #28]
 8004fa0:	4b4e      	ldr	r3, [pc, #312]	; (80050dc <HAL_UART_MspInit+0x214>)
 8004fa2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004fa4:	4a4d      	ldr	r2, [pc, #308]	; (80050dc <HAL_UART_MspInit+0x214>)
 8004fa6:	f043 0310 	orr.w	r3, r3, #16
 8004faa:	6453      	str	r3, [r2, #68]	; 0x44
 8004fac:	4b4b      	ldr	r3, [pc, #300]	; (80050dc <HAL_UART_MspInit+0x214>)
 8004fae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004fb0:	f003 0310 	and.w	r3, r3, #16
 8004fb4:	61fb      	str	r3, [r7, #28]
 8004fb6:	69fb      	ldr	r3, [r7, #28]
 8004fb8:	2300      	movs	r3, #0
 8004fba:	61bb      	str	r3, [r7, #24]
 8004fbc:	4b47      	ldr	r3, [pc, #284]	; (80050dc <HAL_UART_MspInit+0x214>)
 8004fbe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004fc0:	4a46      	ldr	r2, [pc, #280]	; (80050dc <HAL_UART_MspInit+0x214>)
 8004fc2:	f043 0301 	orr.w	r3, r3, #1
 8004fc6:	6313      	str	r3, [r2, #48]	; 0x30
 8004fc8:	4b44      	ldr	r3, [pc, #272]	; (80050dc <HAL_UART_MspInit+0x214>)
 8004fca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004fcc:	f003 0301 	and.w	r3, r3, #1
 8004fd0:	61bb      	str	r3, [r7, #24]
 8004fd2:	69bb      	ldr	r3, [r7, #24]
 8004fd4:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8004fd8:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004fda:	2302      	movs	r3, #2
 8004fdc:	633b      	str	r3, [r7, #48]	; 0x30
 8004fde:	2300      	movs	r3, #0
 8004fe0:	637b      	str	r3, [r7, #52]	; 0x34
 8004fe2:	2303      	movs	r3, #3
 8004fe4:	63bb      	str	r3, [r7, #56]	; 0x38
 8004fe6:	2307      	movs	r3, #7
 8004fe8:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004fea:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004fee:	4619      	mov	r1, r3
 8004ff0:	483e      	ldr	r0, [pc, #248]	; (80050ec <HAL_UART_MspInit+0x224>)
 8004ff2:	f001 ff45 	bl	8006e80 <HAL_GPIO_Init>
 8004ff6:	2200      	movs	r2, #0
 8004ff8:	2100      	movs	r1, #0
 8004ffa:	2025      	movs	r0, #37	; 0x25
 8004ffc:	f001 f8eb 	bl	80061d6 <HAL_NVIC_SetPriority>
 8005000:	2025      	movs	r0, #37	; 0x25
 8005002:	f001 f904 	bl	800620e <HAL_NVIC_EnableIRQ>
 8005006:	e063      	b.n	80050d0 <HAL_UART_MspInit+0x208>
 8005008:	687b      	ldr	r3, [r7, #4]
 800500a:	681b      	ldr	r3, [r3, #0]
 800500c:	4a38      	ldr	r2, [pc, #224]	; (80050f0 <HAL_UART_MspInit+0x228>)
 800500e:	4293      	cmp	r3, r2
 8005010:	d12c      	bne.n	800506c <HAL_UART_MspInit+0x1a4>
 8005012:	2300      	movs	r3, #0
 8005014:	617b      	str	r3, [r7, #20]
 8005016:	4b31      	ldr	r3, [pc, #196]	; (80050dc <HAL_UART_MspInit+0x214>)
 8005018:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800501a:	4a30      	ldr	r2, [pc, #192]	; (80050dc <HAL_UART_MspInit+0x214>)
 800501c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8005020:	6413      	str	r3, [r2, #64]	; 0x40
 8005022:	4b2e      	ldr	r3, [pc, #184]	; (80050dc <HAL_UART_MspInit+0x214>)
 8005024:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005026:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800502a:	617b      	str	r3, [r7, #20]
 800502c:	697b      	ldr	r3, [r7, #20]
 800502e:	2300      	movs	r3, #0
 8005030:	613b      	str	r3, [r7, #16]
 8005032:	4b2a      	ldr	r3, [pc, #168]	; (80050dc <HAL_UART_MspInit+0x214>)
 8005034:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005036:	4a29      	ldr	r2, [pc, #164]	; (80050dc <HAL_UART_MspInit+0x214>)
 8005038:	f043 0301 	orr.w	r3, r3, #1
 800503c:	6313      	str	r3, [r2, #48]	; 0x30
 800503e:	4b27      	ldr	r3, [pc, #156]	; (80050dc <HAL_UART_MspInit+0x214>)
 8005040:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005042:	f003 0301 	and.w	r3, r3, #1
 8005046:	613b      	str	r3, [r7, #16]
 8005048:	693b      	ldr	r3, [r7, #16]
 800504a:	230c      	movs	r3, #12
 800504c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800504e:	2302      	movs	r3, #2
 8005050:	633b      	str	r3, [r7, #48]	; 0x30
 8005052:	2300      	movs	r3, #0
 8005054:	637b      	str	r3, [r7, #52]	; 0x34
 8005056:	2303      	movs	r3, #3
 8005058:	63bb      	str	r3, [r7, #56]	; 0x38
 800505a:	2307      	movs	r3, #7
 800505c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800505e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8005062:	4619      	mov	r1, r3
 8005064:	4821      	ldr	r0, [pc, #132]	; (80050ec <HAL_UART_MspInit+0x224>)
 8005066:	f001 ff0b 	bl	8006e80 <HAL_GPIO_Init>
 800506a:	e031      	b.n	80050d0 <HAL_UART_MspInit+0x208>
 800506c:	687b      	ldr	r3, [r7, #4]
 800506e:	681b      	ldr	r3, [r3, #0]
 8005070:	4a20      	ldr	r2, [pc, #128]	; (80050f4 <HAL_UART_MspInit+0x22c>)
 8005072:	4293      	cmp	r3, r2
 8005074:	d12c      	bne.n	80050d0 <HAL_UART_MspInit+0x208>
 8005076:	2300      	movs	r3, #0
 8005078:	60fb      	str	r3, [r7, #12]
 800507a:	4b18      	ldr	r3, [pc, #96]	; (80050dc <HAL_UART_MspInit+0x214>)
 800507c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800507e:	4a17      	ldr	r2, [pc, #92]	; (80050dc <HAL_UART_MspInit+0x214>)
 8005080:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8005084:	6413      	str	r3, [r2, #64]	; 0x40
 8005086:	4b15      	ldr	r3, [pc, #84]	; (80050dc <HAL_UART_MspInit+0x214>)
 8005088:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800508a:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800508e:	60fb      	str	r3, [r7, #12]
 8005090:	68fb      	ldr	r3, [r7, #12]
 8005092:	2300      	movs	r3, #0
 8005094:	60bb      	str	r3, [r7, #8]
 8005096:	4b11      	ldr	r3, [pc, #68]	; (80050dc <HAL_UART_MspInit+0x214>)
 8005098:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800509a:	4a10      	ldr	r2, [pc, #64]	; (80050dc <HAL_UART_MspInit+0x214>)
 800509c:	f043 0304 	orr.w	r3, r3, #4
 80050a0:	6313      	str	r3, [r2, #48]	; 0x30
 80050a2:	4b0e      	ldr	r3, [pc, #56]	; (80050dc <HAL_UART_MspInit+0x214>)
 80050a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050a6:	f003 0304 	and.w	r3, r3, #4
 80050aa:	60bb      	str	r3, [r7, #8]
 80050ac:	68bb      	ldr	r3, [r7, #8]
 80050ae:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 80050b2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80050b4:	2302      	movs	r3, #2
 80050b6:	633b      	str	r3, [r7, #48]	; 0x30
 80050b8:	2300      	movs	r3, #0
 80050ba:	637b      	str	r3, [r7, #52]	; 0x34
 80050bc:	2303      	movs	r3, #3
 80050be:	63bb      	str	r3, [r7, #56]	; 0x38
 80050c0:	2307      	movs	r3, #7
 80050c2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80050c4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80050c8:	4619      	mov	r1, r3
 80050ca:	4805      	ldr	r0, [pc, #20]	; (80050e0 <HAL_UART_MspInit+0x218>)
 80050cc:	f001 fed8 	bl	8006e80 <HAL_GPIO_Init>
 80050d0:	bf00      	nop
 80050d2:	3740      	adds	r7, #64	; 0x40
 80050d4:	46bd      	mov	sp, r7
 80050d6:	bd80      	pop	{r7, pc}
 80050d8:	40005000 	.word	0x40005000
 80050dc:	40023800 	.word	0x40023800
 80050e0:	40020800 	.word	0x40020800
 80050e4:	40020c00 	.word	0x40020c00
 80050e8:	40011000 	.word	0x40011000
 80050ec:	40020000 	.word	0x40020000
 80050f0:	40004400 	.word	0x40004400
 80050f4:	40004800 	.word	0x40004800

080050f8 <NMI_Handler>:
 80050f8:	b480      	push	{r7}
 80050fa:	af00      	add	r7, sp, #0
 80050fc:	e7fe      	b.n	80050fc <NMI_Handler+0x4>

080050fe <HardFault_Handler>:
 80050fe:	b480      	push	{r7}
 8005100:	af00      	add	r7, sp, #0
 8005102:	e7fe      	b.n	8005102 <HardFault_Handler+0x4>

08005104 <MemManage_Handler>:
 8005104:	b480      	push	{r7}
 8005106:	af00      	add	r7, sp, #0
 8005108:	e7fe      	b.n	8005108 <MemManage_Handler+0x4>

0800510a <BusFault_Handler>:
 800510a:	b480      	push	{r7}
 800510c:	af00      	add	r7, sp, #0
 800510e:	e7fe      	b.n	800510e <BusFault_Handler+0x4>

08005110 <UsageFault_Handler>:
 8005110:	b480      	push	{r7}
 8005112:	af00      	add	r7, sp, #0
 8005114:	e7fe      	b.n	8005114 <UsageFault_Handler+0x4>

08005116 <SVC_Handler>:
 8005116:	b480      	push	{r7}
 8005118:	af00      	add	r7, sp, #0
 800511a:	bf00      	nop
 800511c:	46bd      	mov	sp, r7
 800511e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005122:	4770      	bx	lr

08005124 <DebugMon_Handler>:
 8005124:	b480      	push	{r7}
 8005126:	af00      	add	r7, sp, #0
 8005128:	bf00      	nop
 800512a:	46bd      	mov	sp, r7
 800512c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005130:	4770      	bx	lr

08005132 <PendSV_Handler>:
 8005132:	b480      	push	{r7}
 8005134:	af00      	add	r7, sp, #0
 8005136:	bf00      	nop
 8005138:	46bd      	mov	sp, r7
 800513a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800513e:	4770      	bx	lr

08005140 <SysTick_Handler>:
 8005140:	b580      	push	{r7, lr}
 8005142:	af00      	add	r7, sp, #0
 8005144:	f000 f98e 	bl	8005464 <HAL_IncTick>
 8005148:	bf00      	nop
 800514a:	bd80      	pop	{r7, pc}

0800514c <EXTI4_IRQHandler>:
 800514c:	b580      	push	{r7, lr}
 800514e:	af00      	add	r7, sp, #0
 8005150:	2010      	movs	r0, #16
 8005152:	f002 f875 	bl	8007240 <HAL_GPIO_EXTI_IRQHandler>
 8005156:	bf00      	nop
 8005158:	bd80      	pop	{r7, pc}
	...

0800515c <TIM2_IRQHandler>:
 800515c:	b580      	push	{r7, lr}
 800515e:	af00      	add	r7, sp, #0
 8005160:	4802      	ldr	r0, [pc, #8]	; (800516c <TIM2_IRQHandler+0x10>)
 8005162:	f003 fc3f 	bl	80089e4 <HAL_TIM_IRQHandler>
 8005166:	bf00      	nop
 8005168:	bd80      	pop	{r7, pc}
 800516a:	bf00      	nop
 800516c:	200006bc 	.word	0x200006bc

08005170 <USART1_IRQHandler>:
 8005170:	b580      	push	{r7, lr}
 8005172:	af00      	add	r7, sp, #0
 8005174:	4802      	ldr	r0, [pc, #8]	; (8005180 <USART1_IRQHandler+0x10>)
 8005176:	f004 ff57 	bl	800a028 <HAL_UART_IRQHandler>
 800517a:	bf00      	nop
 800517c:	bd80      	pop	{r7, pc}
 800517e:	bf00      	nop
 8005180:	200008c8 	.word	0x200008c8

08005184 <EXTI15_10_IRQHandler>:
 8005184:	b580      	push	{r7, lr}
 8005186:	af00      	add	r7, sp, #0
 8005188:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 800518c:	f002 f858 	bl	8007240 <HAL_GPIO_EXTI_IRQHandler>
 8005190:	bf00      	nop
 8005192:	bd80      	pop	{r7, pc}

08005194 <DMA1_Stream7_IRQHandler>:
 8005194:	b580      	push	{r7, lr}
 8005196:	af00      	add	r7, sp, #0
 8005198:	4802      	ldr	r0, [pc, #8]	; (80051a4 <DMA1_Stream7_IRQHandler+0x10>)
 800519a:	f001 f9f9 	bl	8006590 <HAL_DMA_IRQHandler>
 800519e:	bf00      	nop
 80051a0:	bd80      	pop	{r7, pc}
 80051a2:	bf00      	nop
 80051a4:	20000824 	.word	0x20000824

080051a8 <UART5_IRQHandler>:
 80051a8:	b580      	push	{r7, lr}
 80051aa:	af00      	add	r7, sp, #0
 80051ac:	4802      	ldr	r0, [pc, #8]	; (80051b8 <UART5_IRQHandler+0x10>)
 80051ae:	f004 ff3b 	bl	800a028 <HAL_UART_IRQHandler>
 80051b2:	bf00      	nop
 80051b4:	bd80      	pop	{r7, pc}
 80051b6:	bf00      	nop
 80051b8:	20000884 	.word	0x20000884

080051bc <_getpid>:
 80051bc:	b480      	push	{r7}
 80051be:	af00      	add	r7, sp, #0
 80051c0:	2301      	movs	r3, #1
 80051c2:	4618      	mov	r0, r3
 80051c4:	46bd      	mov	sp, r7
 80051c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051ca:	4770      	bx	lr

080051cc <_kill>:
 80051cc:	b580      	push	{r7, lr}
 80051ce:	b082      	sub	sp, #8
 80051d0:	af00      	add	r7, sp, #0
 80051d2:	6078      	str	r0, [r7, #4]
 80051d4:	6039      	str	r1, [r7, #0]
 80051d6:	f005 fe8f 	bl	800aef8 <__errno>
 80051da:	4603      	mov	r3, r0
 80051dc:	2216      	movs	r2, #22
 80051de:	601a      	str	r2, [r3, #0]
 80051e0:	f04f 33ff 	mov.w	r3, #4294967295
 80051e4:	4618      	mov	r0, r3
 80051e6:	3708      	adds	r7, #8
 80051e8:	46bd      	mov	sp, r7
 80051ea:	bd80      	pop	{r7, pc}

080051ec <_exit>:
 80051ec:	b580      	push	{r7, lr}
 80051ee:	b082      	sub	sp, #8
 80051f0:	af00      	add	r7, sp, #0
 80051f2:	6078      	str	r0, [r7, #4]
 80051f4:	f04f 31ff 	mov.w	r1, #4294967295
 80051f8:	6878      	ldr	r0, [r7, #4]
 80051fa:	f7ff ffe7 	bl	80051cc <_kill>
 80051fe:	e7fe      	b.n	80051fe <_exit+0x12>

08005200 <_read>:
 8005200:	b580      	push	{r7, lr}
 8005202:	b086      	sub	sp, #24
 8005204:	af00      	add	r7, sp, #0
 8005206:	60f8      	str	r0, [r7, #12]
 8005208:	60b9      	str	r1, [r7, #8]
 800520a:	607a      	str	r2, [r7, #4]
 800520c:	2300      	movs	r3, #0
 800520e:	617b      	str	r3, [r7, #20]
 8005210:	e00a      	b.n	8005228 <_read+0x28>
 8005212:	f3af 8000 	nop.w
 8005216:	4601      	mov	r1, r0
 8005218:	68bb      	ldr	r3, [r7, #8]
 800521a:	1c5a      	adds	r2, r3, #1
 800521c:	60ba      	str	r2, [r7, #8]
 800521e:	b2ca      	uxtb	r2, r1
 8005220:	701a      	strb	r2, [r3, #0]
 8005222:	697b      	ldr	r3, [r7, #20]
 8005224:	3301      	adds	r3, #1
 8005226:	617b      	str	r3, [r7, #20]
 8005228:	697a      	ldr	r2, [r7, #20]
 800522a:	687b      	ldr	r3, [r7, #4]
 800522c:	429a      	cmp	r2, r3
 800522e:	dbf0      	blt.n	8005212 <_read+0x12>
 8005230:	687b      	ldr	r3, [r7, #4]
 8005232:	4618      	mov	r0, r3
 8005234:	3718      	adds	r7, #24
 8005236:	46bd      	mov	sp, r7
 8005238:	bd80      	pop	{r7, pc}

0800523a <_write>:
 800523a:	b580      	push	{r7, lr}
 800523c:	b086      	sub	sp, #24
 800523e:	af00      	add	r7, sp, #0
 8005240:	60f8      	str	r0, [r7, #12]
 8005242:	60b9      	str	r1, [r7, #8]
 8005244:	607a      	str	r2, [r7, #4]
 8005246:	2300      	movs	r3, #0
 8005248:	617b      	str	r3, [r7, #20]
 800524a:	e009      	b.n	8005260 <_write+0x26>
 800524c:	68bb      	ldr	r3, [r7, #8]
 800524e:	1c5a      	adds	r2, r3, #1
 8005250:	60ba      	str	r2, [r7, #8]
 8005252:	781b      	ldrb	r3, [r3, #0]
 8005254:	4618      	mov	r0, r3
 8005256:	f3af 8000 	nop.w
 800525a:	697b      	ldr	r3, [r7, #20]
 800525c:	3301      	adds	r3, #1
 800525e:	617b      	str	r3, [r7, #20]
 8005260:	697a      	ldr	r2, [r7, #20]
 8005262:	687b      	ldr	r3, [r7, #4]
 8005264:	429a      	cmp	r2, r3
 8005266:	dbf1      	blt.n	800524c <_write+0x12>
 8005268:	687b      	ldr	r3, [r7, #4]
 800526a:	4618      	mov	r0, r3
 800526c:	3718      	adds	r7, #24
 800526e:	46bd      	mov	sp, r7
 8005270:	bd80      	pop	{r7, pc}

08005272 <_close>:
 8005272:	b480      	push	{r7}
 8005274:	b083      	sub	sp, #12
 8005276:	af00      	add	r7, sp, #0
 8005278:	6078      	str	r0, [r7, #4]
 800527a:	f04f 33ff 	mov.w	r3, #4294967295
 800527e:	4618      	mov	r0, r3
 8005280:	370c      	adds	r7, #12
 8005282:	46bd      	mov	sp, r7
 8005284:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005288:	4770      	bx	lr

0800528a <_fstat>:
 800528a:	b480      	push	{r7}
 800528c:	b083      	sub	sp, #12
 800528e:	af00      	add	r7, sp, #0
 8005290:	6078      	str	r0, [r7, #4]
 8005292:	6039      	str	r1, [r7, #0]
 8005294:	683b      	ldr	r3, [r7, #0]
 8005296:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800529a:	605a      	str	r2, [r3, #4]
 800529c:	2300      	movs	r3, #0
 800529e:	4618      	mov	r0, r3
 80052a0:	370c      	adds	r7, #12
 80052a2:	46bd      	mov	sp, r7
 80052a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052a8:	4770      	bx	lr

080052aa <_isatty>:
 80052aa:	b480      	push	{r7}
 80052ac:	b083      	sub	sp, #12
 80052ae:	af00      	add	r7, sp, #0
 80052b0:	6078      	str	r0, [r7, #4]
 80052b2:	2301      	movs	r3, #1
 80052b4:	4618      	mov	r0, r3
 80052b6:	370c      	adds	r7, #12
 80052b8:	46bd      	mov	sp, r7
 80052ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052be:	4770      	bx	lr

080052c0 <_lseek>:
 80052c0:	b480      	push	{r7}
 80052c2:	b085      	sub	sp, #20
 80052c4:	af00      	add	r7, sp, #0
 80052c6:	60f8      	str	r0, [r7, #12]
 80052c8:	60b9      	str	r1, [r7, #8]
 80052ca:	607a      	str	r2, [r7, #4]
 80052cc:	2300      	movs	r3, #0
 80052ce:	4618      	mov	r0, r3
 80052d0:	3714      	adds	r7, #20
 80052d2:	46bd      	mov	sp, r7
 80052d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052d8:	4770      	bx	lr
	...

080052dc <_sbrk>:
 80052dc:	b580      	push	{r7, lr}
 80052de:	b086      	sub	sp, #24
 80052e0:	af00      	add	r7, sp, #0
 80052e2:	6078      	str	r0, [r7, #4]
 80052e4:	4a14      	ldr	r2, [pc, #80]	; (8005338 <_sbrk+0x5c>)
 80052e6:	4b15      	ldr	r3, [pc, #84]	; (800533c <_sbrk+0x60>)
 80052e8:	1ad3      	subs	r3, r2, r3
 80052ea:	617b      	str	r3, [r7, #20]
 80052ec:	697b      	ldr	r3, [r7, #20]
 80052ee:	613b      	str	r3, [r7, #16]
 80052f0:	4b13      	ldr	r3, [pc, #76]	; (8005340 <_sbrk+0x64>)
 80052f2:	681b      	ldr	r3, [r3, #0]
 80052f4:	2b00      	cmp	r3, #0
 80052f6:	d102      	bne.n	80052fe <_sbrk+0x22>
 80052f8:	4b11      	ldr	r3, [pc, #68]	; (8005340 <_sbrk+0x64>)
 80052fa:	4a12      	ldr	r2, [pc, #72]	; (8005344 <_sbrk+0x68>)
 80052fc:	601a      	str	r2, [r3, #0]
 80052fe:	4b10      	ldr	r3, [pc, #64]	; (8005340 <_sbrk+0x64>)
 8005300:	681a      	ldr	r2, [r3, #0]
 8005302:	687b      	ldr	r3, [r7, #4]
 8005304:	4413      	add	r3, r2
 8005306:	693a      	ldr	r2, [r7, #16]
 8005308:	429a      	cmp	r2, r3
 800530a:	d207      	bcs.n	800531c <_sbrk+0x40>
 800530c:	f005 fdf4 	bl	800aef8 <__errno>
 8005310:	4603      	mov	r3, r0
 8005312:	220c      	movs	r2, #12
 8005314:	601a      	str	r2, [r3, #0]
 8005316:	f04f 33ff 	mov.w	r3, #4294967295
 800531a:	e009      	b.n	8005330 <_sbrk+0x54>
 800531c:	4b08      	ldr	r3, [pc, #32]	; (8005340 <_sbrk+0x64>)
 800531e:	681b      	ldr	r3, [r3, #0]
 8005320:	60fb      	str	r3, [r7, #12]
 8005322:	4b07      	ldr	r3, [pc, #28]	; (8005340 <_sbrk+0x64>)
 8005324:	681a      	ldr	r2, [r3, #0]
 8005326:	687b      	ldr	r3, [r7, #4]
 8005328:	4413      	add	r3, r2
 800532a:	4a05      	ldr	r2, [pc, #20]	; (8005340 <_sbrk+0x64>)
 800532c:	6013      	str	r3, [r2, #0]
 800532e:	68fb      	ldr	r3, [r7, #12]
 8005330:	4618      	mov	r0, r3
 8005332:	3718      	adds	r7, #24
 8005334:	46bd      	mov	sp, r7
 8005336:	bd80      	pop	{r7, pc}
 8005338:	20020000 	.word	0x20020000
 800533c:	00000400 	.word	0x00000400
 8005340:	200009a8 	.word	0x200009a8
 8005344:	200009e0 	.word	0x200009e0

08005348 <SystemInit>:
 8005348:	b480      	push	{r7}
 800534a:	af00      	add	r7, sp, #0
 800534c:	4b06      	ldr	r3, [pc, #24]	; (8005368 <SystemInit+0x20>)
 800534e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005352:	4a05      	ldr	r2, [pc, #20]	; (8005368 <SystemInit+0x20>)
 8005354:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8005358:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 800535c:	bf00      	nop
 800535e:	46bd      	mov	sp, r7
 8005360:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005364:	4770      	bx	lr
 8005366:	bf00      	nop
 8005368:	e000ed00 	.word	0xe000ed00

0800536c <Reset_Handler>:
 800536c:	f8df d034 	ldr.w	sp, [pc, #52]	; 80053a4 <LoopFillZerobss+0x12>
 8005370:	480d      	ldr	r0, [pc, #52]	; (80053a8 <LoopFillZerobss+0x16>)
 8005372:	490e      	ldr	r1, [pc, #56]	; (80053ac <LoopFillZerobss+0x1a>)
 8005374:	4a0e      	ldr	r2, [pc, #56]	; (80053b0 <LoopFillZerobss+0x1e>)
 8005376:	2300      	movs	r3, #0
 8005378:	e002      	b.n	8005380 <LoopCopyDataInit>

0800537a <CopyDataInit>:
 800537a:	58d4      	ldr	r4, [r2, r3]
 800537c:	50c4      	str	r4, [r0, r3]
 800537e:	3304      	adds	r3, #4

08005380 <LoopCopyDataInit>:
 8005380:	18c4      	adds	r4, r0, r3
 8005382:	428c      	cmp	r4, r1
 8005384:	d3f9      	bcc.n	800537a <CopyDataInit>
 8005386:	4a0b      	ldr	r2, [pc, #44]	; (80053b4 <LoopFillZerobss+0x22>)
 8005388:	4c0b      	ldr	r4, [pc, #44]	; (80053b8 <LoopFillZerobss+0x26>)
 800538a:	2300      	movs	r3, #0
 800538c:	e001      	b.n	8005392 <LoopFillZerobss>

0800538e <FillZerobss>:
 800538e:	6013      	str	r3, [r2, #0]
 8005390:	3204      	adds	r2, #4

08005392 <LoopFillZerobss>:
 8005392:	42a2      	cmp	r2, r4
 8005394:	d3fb      	bcc.n	800538e <FillZerobss>
 8005396:	f7ff ffd7 	bl	8005348 <SystemInit>
 800539a:	f005 fdb3 	bl	800af04 <__libc_init_array>
 800539e:	f7fe fbe5 	bl	8003b6c <main>
 80053a2:	4770      	bx	lr
 80053a4:	20020000 	.word	0x20020000
 80053a8:	20000000 	.word	0x20000000
 80053ac:	20000248 	.word	0x20000248
 80053b0:	0800f8a0 	.word	0x0800f8a0
 80053b4:	20000248 	.word	0x20000248
 80053b8:	200009e0 	.word	0x200009e0

080053bc <ADC_IRQHandler>:
 80053bc:	e7fe      	b.n	80053bc <ADC_IRQHandler>
	...

080053c0 <HAL_Init>:
 80053c0:	b580      	push	{r7, lr}
 80053c2:	af00      	add	r7, sp, #0
 80053c4:	4b0e      	ldr	r3, [pc, #56]	; (8005400 <HAL_Init+0x40>)
 80053c6:	681b      	ldr	r3, [r3, #0]
 80053c8:	4a0d      	ldr	r2, [pc, #52]	; (8005400 <HAL_Init+0x40>)
 80053ca:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80053ce:	6013      	str	r3, [r2, #0]
 80053d0:	4b0b      	ldr	r3, [pc, #44]	; (8005400 <HAL_Init+0x40>)
 80053d2:	681b      	ldr	r3, [r3, #0]
 80053d4:	4a0a      	ldr	r2, [pc, #40]	; (8005400 <HAL_Init+0x40>)
 80053d6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80053da:	6013      	str	r3, [r2, #0]
 80053dc:	4b08      	ldr	r3, [pc, #32]	; (8005400 <HAL_Init+0x40>)
 80053de:	681b      	ldr	r3, [r3, #0]
 80053e0:	4a07      	ldr	r2, [pc, #28]	; (8005400 <HAL_Init+0x40>)
 80053e2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80053e6:	6013      	str	r3, [r2, #0]
 80053e8:	2003      	movs	r0, #3
 80053ea:	f000 fee9 	bl	80061c0 <HAL_NVIC_SetPriorityGrouping>
 80053ee:	2000      	movs	r0, #0
 80053f0:	f000 f808 	bl	8005404 <HAL_InitTick>
 80053f4:	f7ff fb20 	bl	8004a38 <HAL_MspInit>
 80053f8:	2300      	movs	r3, #0
 80053fa:	4618      	mov	r0, r3
 80053fc:	bd80      	pop	{r7, pc}
 80053fe:	bf00      	nop
 8005400:	40023c00 	.word	0x40023c00

08005404 <HAL_InitTick>:
 8005404:	b580      	push	{r7, lr}
 8005406:	b082      	sub	sp, #8
 8005408:	af00      	add	r7, sp, #0
 800540a:	6078      	str	r0, [r7, #4]
 800540c:	4b12      	ldr	r3, [pc, #72]	; (8005458 <HAL_InitTick+0x54>)
 800540e:	681a      	ldr	r2, [r3, #0]
 8005410:	4b12      	ldr	r3, [pc, #72]	; (800545c <HAL_InitTick+0x58>)
 8005412:	781b      	ldrb	r3, [r3, #0]
 8005414:	4619      	mov	r1, r3
 8005416:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800541a:	fbb3 f3f1 	udiv	r3, r3, r1
 800541e:	fbb2 f3f3 	udiv	r3, r2, r3
 8005422:	4618      	mov	r0, r3
 8005424:	f000 ff0f 	bl	8006246 <HAL_SYSTICK_Config>
 8005428:	4603      	mov	r3, r0
 800542a:	2b00      	cmp	r3, #0
 800542c:	d001      	beq.n	8005432 <HAL_InitTick+0x2e>
 800542e:	2301      	movs	r3, #1
 8005430:	e00e      	b.n	8005450 <HAL_InitTick+0x4c>
 8005432:	687b      	ldr	r3, [r7, #4]
 8005434:	2b0f      	cmp	r3, #15
 8005436:	d80a      	bhi.n	800544e <HAL_InitTick+0x4a>
 8005438:	2200      	movs	r2, #0
 800543a:	6879      	ldr	r1, [r7, #4]
 800543c:	f04f 30ff 	mov.w	r0, #4294967295
 8005440:	f000 fec9 	bl	80061d6 <HAL_NVIC_SetPriority>
 8005444:	4a06      	ldr	r2, [pc, #24]	; (8005460 <HAL_InitTick+0x5c>)
 8005446:	687b      	ldr	r3, [r7, #4]
 8005448:	6013      	str	r3, [r2, #0]
 800544a:	2300      	movs	r3, #0
 800544c:	e000      	b.n	8005450 <HAL_InitTick+0x4c>
 800544e:	2301      	movs	r3, #1
 8005450:	4618      	mov	r0, r3
 8005452:	3708      	adds	r7, #8
 8005454:	46bd      	mov	sp, r7
 8005456:	bd80      	pop	{r7, pc}
 8005458:	2000006c 	.word	0x2000006c
 800545c:	20000074 	.word	0x20000074
 8005460:	20000070 	.word	0x20000070

08005464 <HAL_IncTick>:
 8005464:	b480      	push	{r7}
 8005466:	af00      	add	r7, sp, #0
 8005468:	4b06      	ldr	r3, [pc, #24]	; (8005484 <HAL_IncTick+0x20>)
 800546a:	781b      	ldrb	r3, [r3, #0]
 800546c:	461a      	mov	r2, r3
 800546e:	4b06      	ldr	r3, [pc, #24]	; (8005488 <HAL_IncTick+0x24>)
 8005470:	681b      	ldr	r3, [r3, #0]
 8005472:	4413      	add	r3, r2
 8005474:	4a04      	ldr	r2, [pc, #16]	; (8005488 <HAL_IncTick+0x24>)
 8005476:	6013      	str	r3, [r2, #0]
 8005478:	bf00      	nop
 800547a:	46bd      	mov	sp, r7
 800547c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005480:	4770      	bx	lr
 8005482:	bf00      	nop
 8005484:	20000074 	.word	0x20000074
 8005488:	200009ac 	.word	0x200009ac

0800548c <HAL_GetTick>:
 800548c:	b480      	push	{r7}
 800548e:	af00      	add	r7, sp, #0
 8005490:	4b03      	ldr	r3, [pc, #12]	; (80054a0 <HAL_GetTick+0x14>)
 8005492:	681b      	ldr	r3, [r3, #0]
 8005494:	4618      	mov	r0, r3
 8005496:	46bd      	mov	sp, r7
 8005498:	f85d 7b04 	ldr.w	r7, [sp], #4
 800549c:	4770      	bx	lr
 800549e:	bf00      	nop
 80054a0:	200009ac 	.word	0x200009ac

080054a4 <HAL_Delay>:
 80054a4:	b580      	push	{r7, lr}
 80054a6:	b084      	sub	sp, #16
 80054a8:	af00      	add	r7, sp, #0
 80054aa:	6078      	str	r0, [r7, #4]
 80054ac:	f7ff ffee 	bl	800548c <HAL_GetTick>
 80054b0:	60b8      	str	r0, [r7, #8]
 80054b2:	687b      	ldr	r3, [r7, #4]
 80054b4:	60fb      	str	r3, [r7, #12]
 80054b6:	68fb      	ldr	r3, [r7, #12]
 80054b8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80054bc:	d005      	beq.n	80054ca <HAL_Delay+0x26>
 80054be:	4b0a      	ldr	r3, [pc, #40]	; (80054e8 <HAL_Delay+0x44>)
 80054c0:	781b      	ldrb	r3, [r3, #0]
 80054c2:	461a      	mov	r2, r3
 80054c4:	68fb      	ldr	r3, [r7, #12]
 80054c6:	4413      	add	r3, r2
 80054c8:	60fb      	str	r3, [r7, #12]
 80054ca:	bf00      	nop
 80054cc:	f7ff ffde 	bl	800548c <HAL_GetTick>
 80054d0:	4602      	mov	r2, r0
 80054d2:	68bb      	ldr	r3, [r7, #8]
 80054d4:	1ad3      	subs	r3, r2, r3
 80054d6:	68fa      	ldr	r2, [r7, #12]
 80054d8:	429a      	cmp	r2, r3
 80054da:	d8f7      	bhi.n	80054cc <HAL_Delay+0x28>
 80054dc:	bf00      	nop
 80054de:	bf00      	nop
 80054e0:	3710      	adds	r7, #16
 80054e2:	46bd      	mov	sp, r7
 80054e4:	bd80      	pop	{r7, pc}
 80054e6:	bf00      	nop
 80054e8:	20000074 	.word	0x20000074

080054ec <HAL_ADC_Init>:
 80054ec:	b580      	push	{r7, lr}
 80054ee:	b084      	sub	sp, #16
 80054f0:	af00      	add	r7, sp, #0
 80054f2:	6078      	str	r0, [r7, #4]
 80054f4:	2300      	movs	r3, #0
 80054f6:	73fb      	strb	r3, [r7, #15]
 80054f8:	687b      	ldr	r3, [r7, #4]
 80054fa:	2b00      	cmp	r3, #0
 80054fc:	d101      	bne.n	8005502 <HAL_ADC_Init+0x16>
 80054fe:	2301      	movs	r3, #1
 8005500:	e033      	b.n	800556a <HAL_ADC_Init+0x7e>
 8005502:	687b      	ldr	r3, [r7, #4]
 8005504:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005506:	2b00      	cmp	r3, #0
 8005508:	d109      	bne.n	800551e <HAL_ADC_Init+0x32>
 800550a:	6878      	ldr	r0, [r7, #4]
 800550c:	f7ff fabc 	bl	8004a88 <HAL_ADC_MspInit>
 8005510:	687b      	ldr	r3, [r7, #4]
 8005512:	2200      	movs	r2, #0
 8005514:	645a      	str	r2, [r3, #68]	; 0x44
 8005516:	687b      	ldr	r3, [r7, #4]
 8005518:	2200      	movs	r2, #0
 800551a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800551e:	687b      	ldr	r3, [r7, #4]
 8005520:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005522:	f003 0310 	and.w	r3, r3, #16
 8005526:	2b00      	cmp	r3, #0
 8005528:	d118      	bne.n	800555c <HAL_ADC_Init+0x70>
 800552a:	687b      	ldr	r3, [r7, #4]
 800552c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800552e:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8005532:	f023 0302 	bic.w	r3, r3, #2
 8005536:	f043 0202 	orr.w	r2, r3, #2
 800553a:	687b      	ldr	r3, [r7, #4]
 800553c:	641a      	str	r2, [r3, #64]	; 0x40
 800553e:	6878      	ldr	r0, [r7, #4]
 8005540:	f000 fab4 	bl	8005aac <ADC_Init>
 8005544:	687b      	ldr	r3, [r7, #4]
 8005546:	2200      	movs	r2, #0
 8005548:	645a      	str	r2, [r3, #68]	; 0x44
 800554a:	687b      	ldr	r3, [r7, #4]
 800554c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800554e:	f023 0303 	bic.w	r3, r3, #3
 8005552:	f043 0201 	orr.w	r2, r3, #1
 8005556:	687b      	ldr	r3, [r7, #4]
 8005558:	641a      	str	r2, [r3, #64]	; 0x40
 800555a:	e001      	b.n	8005560 <HAL_ADC_Init+0x74>
 800555c:	2301      	movs	r3, #1
 800555e:	73fb      	strb	r3, [r7, #15]
 8005560:	687b      	ldr	r3, [r7, #4]
 8005562:	2200      	movs	r2, #0
 8005564:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005568:	7bfb      	ldrb	r3, [r7, #15]
 800556a:	4618      	mov	r0, r3
 800556c:	3710      	adds	r7, #16
 800556e:	46bd      	mov	sp, r7
 8005570:	bd80      	pop	{r7, pc}
	...

08005574 <HAL_ADC_Start>:
 8005574:	b480      	push	{r7}
 8005576:	b085      	sub	sp, #20
 8005578:	af00      	add	r7, sp, #0
 800557a:	6078      	str	r0, [r7, #4]
 800557c:	2300      	movs	r3, #0
 800557e:	60bb      	str	r3, [r7, #8]
 8005580:	687b      	ldr	r3, [r7, #4]
 8005582:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005586:	2b01      	cmp	r3, #1
 8005588:	d101      	bne.n	800558e <HAL_ADC_Start+0x1a>
 800558a:	2302      	movs	r3, #2
 800558c:	e0b2      	b.n	80056f4 <HAL_ADC_Start+0x180>
 800558e:	687b      	ldr	r3, [r7, #4]
 8005590:	2201      	movs	r2, #1
 8005592:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005596:	687b      	ldr	r3, [r7, #4]
 8005598:	681b      	ldr	r3, [r3, #0]
 800559a:	689b      	ldr	r3, [r3, #8]
 800559c:	f003 0301 	and.w	r3, r3, #1
 80055a0:	2b01      	cmp	r3, #1
 80055a2:	d018      	beq.n	80055d6 <HAL_ADC_Start+0x62>
 80055a4:	687b      	ldr	r3, [r7, #4]
 80055a6:	681b      	ldr	r3, [r3, #0]
 80055a8:	689a      	ldr	r2, [r3, #8]
 80055aa:	687b      	ldr	r3, [r7, #4]
 80055ac:	681b      	ldr	r3, [r3, #0]
 80055ae:	f042 0201 	orr.w	r2, r2, #1
 80055b2:	609a      	str	r2, [r3, #8]
 80055b4:	4b52      	ldr	r3, [pc, #328]	; (8005700 <HAL_ADC_Start+0x18c>)
 80055b6:	681b      	ldr	r3, [r3, #0]
 80055b8:	4a52      	ldr	r2, [pc, #328]	; (8005704 <HAL_ADC_Start+0x190>)
 80055ba:	fba2 2303 	umull	r2, r3, r2, r3
 80055be:	0c9a      	lsrs	r2, r3, #18
 80055c0:	4613      	mov	r3, r2
 80055c2:	005b      	lsls	r3, r3, #1
 80055c4:	4413      	add	r3, r2
 80055c6:	60bb      	str	r3, [r7, #8]
 80055c8:	e002      	b.n	80055d0 <HAL_ADC_Start+0x5c>
 80055ca:	68bb      	ldr	r3, [r7, #8]
 80055cc:	3b01      	subs	r3, #1
 80055ce:	60bb      	str	r3, [r7, #8]
 80055d0:	68bb      	ldr	r3, [r7, #8]
 80055d2:	2b00      	cmp	r3, #0
 80055d4:	d1f9      	bne.n	80055ca <HAL_ADC_Start+0x56>
 80055d6:	687b      	ldr	r3, [r7, #4]
 80055d8:	681b      	ldr	r3, [r3, #0]
 80055da:	689b      	ldr	r3, [r3, #8]
 80055dc:	f003 0301 	and.w	r3, r3, #1
 80055e0:	2b01      	cmp	r3, #1
 80055e2:	d17a      	bne.n	80056da <HAL_ADC_Start+0x166>
 80055e4:	687b      	ldr	r3, [r7, #4]
 80055e6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80055e8:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 80055ec:	f023 0301 	bic.w	r3, r3, #1
 80055f0:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 80055f4:	687b      	ldr	r3, [r7, #4]
 80055f6:	641a      	str	r2, [r3, #64]	; 0x40
 80055f8:	687b      	ldr	r3, [r7, #4]
 80055fa:	681b      	ldr	r3, [r3, #0]
 80055fc:	685b      	ldr	r3, [r3, #4]
 80055fe:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005602:	2b00      	cmp	r3, #0
 8005604:	d007      	beq.n	8005616 <HAL_ADC_Start+0xa2>
 8005606:	687b      	ldr	r3, [r7, #4]
 8005608:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800560a:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800560e:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 8005612:	687b      	ldr	r3, [r7, #4]
 8005614:	641a      	str	r2, [r3, #64]	; 0x40
 8005616:	687b      	ldr	r3, [r7, #4]
 8005618:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800561a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800561e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005622:	d106      	bne.n	8005632 <HAL_ADC_Start+0xbe>
 8005624:	687b      	ldr	r3, [r7, #4]
 8005626:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005628:	f023 0206 	bic.w	r2, r3, #6
 800562c:	687b      	ldr	r3, [r7, #4]
 800562e:	645a      	str	r2, [r3, #68]	; 0x44
 8005630:	e002      	b.n	8005638 <HAL_ADC_Start+0xc4>
 8005632:	687b      	ldr	r3, [r7, #4]
 8005634:	2200      	movs	r2, #0
 8005636:	645a      	str	r2, [r3, #68]	; 0x44
 8005638:	687b      	ldr	r3, [r7, #4]
 800563a:	2200      	movs	r2, #0
 800563c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005640:	4b31      	ldr	r3, [pc, #196]	; (8005708 <HAL_ADC_Start+0x194>)
 8005642:	60fb      	str	r3, [r7, #12]
 8005644:	687b      	ldr	r3, [r7, #4]
 8005646:	681b      	ldr	r3, [r3, #0]
 8005648:	f06f 0222 	mvn.w	r2, #34	; 0x22
 800564c:	601a      	str	r2, [r3, #0]
 800564e:	68fb      	ldr	r3, [r7, #12]
 8005650:	685b      	ldr	r3, [r3, #4]
 8005652:	f003 031f 	and.w	r3, r3, #31
 8005656:	2b00      	cmp	r3, #0
 8005658:	d12a      	bne.n	80056b0 <HAL_ADC_Start+0x13c>
 800565a:	687b      	ldr	r3, [r7, #4]
 800565c:	681b      	ldr	r3, [r3, #0]
 800565e:	4a2b      	ldr	r2, [pc, #172]	; (800570c <HAL_ADC_Start+0x198>)
 8005660:	4293      	cmp	r3, r2
 8005662:	d015      	beq.n	8005690 <HAL_ADC_Start+0x11c>
 8005664:	687b      	ldr	r3, [r7, #4]
 8005666:	681b      	ldr	r3, [r3, #0]
 8005668:	4a29      	ldr	r2, [pc, #164]	; (8005710 <HAL_ADC_Start+0x19c>)
 800566a:	4293      	cmp	r3, r2
 800566c:	d105      	bne.n	800567a <HAL_ADC_Start+0x106>
 800566e:	4b26      	ldr	r3, [pc, #152]	; (8005708 <HAL_ADC_Start+0x194>)
 8005670:	685b      	ldr	r3, [r3, #4]
 8005672:	f003 031f 	and.w	r3, r3, #31
 8005676:	2b00      	cmp	r3, #0
 8005678:	d00a      	beq.n	8005690 <HAL_ADC_Start+0x11c>
 800567a:	687b      	ldr	r3, [r7, #4]
 800567c:	681b      	ldr	r3, [r3, #0]
 800567e:	4a25      	ldr	r2, [pc, #148]	; (8005714 <HAL_ADC_Start+0x1a0>)
 8005680:	4293      	cmp	r3, r2
 8005682:	d136      	bne.n	80056f2 <HAL_ADC_Start+0x17e>
 8005684:	4b20      	ldr	r3, [pc, #128]	; (8005708 <HAL_ADC_Start+0x194>)
 8005686:	685b      	ldr	r3, [r3, #4]
 8005688:	f003 0310 	and.w	r3, r3, #16
 800568c:	2b00      	cmp	r3, #0
 800568e:	d130      	bne.n	80056f2 <HAL_ADC_Start+0x17e>
 8005690:	687b      	ldr	r3, [r7, #4]
 8005692:	681b      	ldr	r3, [r3, #0]
 8005694:	689b      	ldr	r3, [r3, #8]
 8005696:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800569a:	2b00      	cmp	r3, #0
 800569c:	d129      	bne.n	80056f2 <HAL_ADC_Start+0x17e>
 800569e:	687b      	ldr	r3, [r7, #4]
 80056a0:	681b      	ldr	r3, [r3, #0]
 80056a2:	689a      	ldr	r2, [r3, #8]
 80056a4:	687b      	ldr	r3, [r7, #4]
 80056a6:	681b      	ldr	r3, [r3, #0]
 80056a8:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80056ac:	609a      	str	r2, [r3, #8]
 80056ae:	e020      	b.n	80056f2 <HAL_ADC_Start+0x17e>
 80056b0:	687b      	ldr	r3, [r7, #4]
 80056b2:	681b      	ldr	r3, [r3, #0]
 80056b4:	4a15      	ldr	r2, [pc, #84]	; (800570c <HAL_ADC_Start+0x198>)
 80056b6:	4293      	cmp	r3, r2
 80056b8:	d11b      	bne.n	80056f2 <HAL_ADC_Start+0x17e>
 80056ba:	687b      	ldr	r3, [r7, #4]
 80056bc:	681b      	ldr	r3, [r3, #0]
 80056be:	689b      	ldr	r3, [r3, #8]
 80056c0:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80056c4:	2b00      	cmp	r3, #0
 80056c6:	d114      	bne.n	80056f2 <HAL_ADC_Start+0x17e>
 80056c8:	687b      	ldr	r3, [r7, #4]
 80056ca:	681b      	ldr	r3, [r3, #0]
 80056cc:	689a      	ldr	r2, [r3, #8]
 80056ce:	687b      	ldr	r3, [r7, #4]
 80056d0:	681b      	ldr	r3, [r3, #0]
 80056d2:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80056d6:	609a      	str	r2, [r3, #8]
 80056d8:	e00b      	b.n	80056f2 <HAL_ADC_Start+0x17e>
 80056da:	687b      	ldr	r3, [r7, #4]
 80056dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80056de:	f043 0210 	orr.w	r2, r3, #16
 80056e2:	687b      	ldr	r3, [r7, #4]
 80056e4:	641a      	str	r2, [r3, #64]	; 0x40
 80056e6:	687b      	ldr	r3, [r7, #4]
 80056e8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80056ea:	f043 0201 	orr.w	r2, r3, #1
 80056ee:	687b      	ldr	r3, [r7, #4]
 80056f0:	645a      	str	r2, [r3, #68]	; 0x44
 80056f2:	2300      	movs	r3, #0
 80056f4:	4618      	mov	r0, r3
 80056f6:	3714      	adds	r7, #20
 80056f8:	46bd      	mov	sp, r7
 80056fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056fe:	4770      	bx	lr
 8005700:	2000006c 	.word	0x2000006c
 8005704:	431bde83 	.word	0x431bde83
 8005708:	40012300 	.word	0x40012300
 800570c:	40012000 	.word	0x40012000
 8005710:	40012100 	.word	0x40012100
 8005714:	40012200 	.word	0x40012200

08005718 <HAL_ADC_PollForConversion>:
 8005718:	b580      	push	{r7, lr}
 800571a:	b084      	sub	sp, #16
 800571c:	af00      	add	r7, sp, #0
 800571e:	6078      	str	r0, [r7, #4]
 8005720:	6039      	str	r1, [r7, #0]
 8005722:	2300      	movs	r3, #0
 8005724:	60fb      	str	r3, [r7, #12]
 8005726:	687b      	ldr	r3, [r7, #4]
 8005728:	681b      	ldr	r3, [r3, #0]
 800572a:	689b      	ldr	r3, [r3, #8]
 800572c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005730:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005734:	d113      	bne.n	800575e <HAL_ADC_PollForConversion+0x46>
 8005736:	687b      	ldr	r3, [r7, #4]
 8005738:	681b      	ldr	r3, [r3, #0]
 800573a:	689b      	ldr	r3, [r3, #8]
 800573c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005740:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005744:	d10b      	bne.n	800575e <HAL_ADC_PollForConversion+0x46>
 8005746:	687b      	ldr	r3, [r7, #4]
 8005748:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800574a:	f043 0220 	orr.w	r2, r3, #32
 800574e:	687b      	ldr	r3, [r7, #4]
 8005750:	641a      	str	r2, [r3, #64]	; 0x40
 8005752:	687b      	ldr	r3, [r7, #4]
 8005754:	2200      	movs	r2, #0
 8005756:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800575a:	2301      	movs	r3, #1
 800575c:	e063      	b.n	8005826 <HAL_ADC_PollForConversion+0x10e>
 800575e:	f7ff fe95 	bl	800548c <HAL_GetTick>
 8005762:	60f8      	str	r0, [r7, #12]
 8005764:	e021      	b.n	80057aa <HAL_ADC_PollForConversion+0x92>
 8005766:	683b      	ldr	r3, [r7, #0]
 8005768:	f1b3 3fff 	cmp.w	r3, #4294967295
 800576c:	d01d      	beq.n	80057aa <HAL_ADC_PollForConversion+0x92>
 800576e:	683b      	ldr	r3, [r7, #0]
 8005770:	2b00      	cmp	r3, #0
 8005772:	d007      	beq.n	8005784 <HAL_ADC_PollForConversion+0x6c>
 8005774:	f7ff fe8a 	bl	800548c <HAL_GetTick>
 8005778:	4602      	mov	r2, r0
 800577a:	68fb      	ldr	r3, [r7, #12]
 800577c:	1ad3      	subs	r3, r2, r3
 800577e:	683a      	ldr	r2, [r7, #0]
 8005780:	429a      	cmp	r2, r3
 8005782:	d212      	bcs.n	80057aa <HAL_ADC_PollForConversion+0x92>
 8005784:	687b      	ldr	r3, [r7, #4]
 8005786:	681b      	ldr	r3, [r3, #0]
 8005788:	681b      	ldr	r3, [r3, #0]
 800578a:	f003 0302 	and.w	r3, r3, #2
 800578e:	2b02      	cmp	r3, #2
 8005790:	d00b      	beq.n	80057aa <HAL_ADC_PollForConversion+0x92>
 8005792:	687b      	ldr	r3, [r7, #4]
 8005794:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005796:	f043 0204 	orr.w	r2, r3, #4
 800579a:	687b      	ldr	r3, [r7, #4]
 800579c:	641a      	str	r2, [r3, #64]	; 0x40
 800579e:	687b      	ldr	r3, [r7, #4]
 80057a0:	2200      	movs	r2, #0
 80057a2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80057a6:	2303      	movs	r3, #3
 80057a8:	e03d      	b.n	8005826 <HAL_ADC_PollForConversion+0x10e>
 80057aa:	687b      	ldr	r3, [r7, #4]
 80057ac:	681b      	ldr	r3, [r3, #0]
 80057ae:	681b      	ldr	r3, [r3, #0]
 80057b0:	f003 0302 	and.w	r3, r3, #2
 80057b4:	2b02      	cmp	r3, #2
 80057b6:	d1d6      	bne.n	8005766 <HAL_ADC_PollForConversion+0x4e>
 80057b8:	687b      	ldr	r3, [r7, #4]
 80057ba:	681b      	ldr	r3, [r3, #0]
 80057bc:	f06f 0212 	mvn.w	r2, #18
 80057c0:	601a      	str	r2, [r3, #0]
 80057c2:	687b      	ldr	r3, [r7, #4]
 80057c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80057c6:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 80057ca:	687b      	ldr	r3, [r7, #4]
 80057cc:	641a      	str	r2, [r3, #64]	; 0x40
 80057ce:	687b      	ldr	r3, [r7, #4]
 80057d0:	681b      	ldr	r3, [r3, #0]
 80057d2:	689b      	ldr	r3, [r3, #8]
 80057d4:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80057d8:	2b00      	cmp	r3, #0
 80057da:	d123      	bne.n	8005824 <HAL_ADC_PollForConversion+0x10c>
 80057dc:	687b      	ldr	r3, [r7, #4]
 80057de:	7e1b      	ldrb	r3, [r3, #24]
 80057e0:	2b00      	cmp	r3, #0
 80057e2:	d11f      	bne.n	8005824 <HAL_ADC_PollForConversion+0x10c>
 80057e4:	687b      	ldr	r3, [r7, #4]
 80057e6:	681b      	ldr	r3, [r3, #0]
 80057e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80057ea:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 80057ee:	2b00      	cmp	r3, #0
 80057f0:	d006      	beq.n	8005800 <HAL_ADC_PollForConversion+0xe8>
 80057f2:	687b      	ldr	r3, [r7, #4]
 80057f4:	681b      	ldr	r3, [r3, #0]
 80057f6:	689b      	ldr	r3, [r3, #8]
 80057f8:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80057fc:	2b00      	cmp	r3, #0
 80057fe:	d111      	bne.n	8005824 <HAL_ADC_PollForConversion+0x10c>
 8005800:	687b      	ldr	r3, [r7, #4]
 8005802:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005804:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8005808:	687b      	ldr	r3, [r7, #4]
 800580a:	641a      	str	r2, [r3, #64]	; 0x40
 800580c:	687b      	ldr	r3, [r7, #4]
 800580e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005810:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8005814:	2b00      	cmp	r3, #0
 8005816:	d105      	bne.n	8005824 <HAL_ADC_PollForConversion+0x10c>
 8005818:	687b      	ldr	r3, [r7, #4]
 800581a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800581c:	f043 0201 	orr.w	r2, r3, #1
 8005820:	687b      	ldr	r3, [r7, #4]
 8005822:	641a      	str	r2, [r3, #64]	; 0x40
 8005824:	2300      	movs	r3, #0
 8005826:	4618      	mov	r0, r3
 8005828:	3710      	adds	r7, #16
 800582a:	46bd      	mov	sp, r7
 800582c:	bd80      	pop	{r7, pc}

0800582e <HAL_ADC_GetValue>:
 800582e:	b480      	push	{r7}
 8005830:	b083      	sub	sp, #12
 8005832:	af00      	add	r7, sp, #0
 8005834:	6078      	str	r0, [r7, #4]
 8005836:	687b      	ldr	r3, [r7, #4]
 8005838:	681b      	ldr	r3, [r3, #0]
 800583a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800583c:	4618      	mov	r0, r3
 800583e:	370c      	adds	r7, #12
 8005840:	46bd      	mov	sp, r7
 8005842:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005846:	4770      	bx	lr

08005848 <HAL_ADC_ConfigChannel>:
 8005848:	b480      	push	{r7}
 800584a:	b085      	sub	sp, #20
 800584c:	af00      	add	r7, sp, #0
 800584e:	6078      	str	r0, [r7, #4]
 8005850:	6039      	str	r1, [r7, #0]
 8005852:	2300      	movs	r3, #0
 8005854:	60bb      	str	r3, [r7, #8]
 8005856:	687b      	ldr	r3, [r7, #4]
 8005858:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800585c:	2b01      	cmp	r3, #1
 800585e:	d101      	bne.n	8005864 <HAL_ADC_ConfigChannel+0x1c>
 8005860:	2302      	movs	r3, #2
 8005862:	e113      	b.n	8005a8c <HAL_ADC_ConfigChannel+0x244>
 8005864:	687b      	ldr	r3, [r7, #4]
 8005866:	2201      	movs	r2, #1
 8005868:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800586c:	683b      	ldr	r3, [r7, #0]
 800586e:	681b      	ldr	r3, [r3, #0]
 8005870:	2b09      	cmp	r3, #9
 8005872:	d925      	bls.n	80058c0 <HAL_ADC_ConfigChannel+0x78>
 8005874:	687b      	ldr	r3, [r7, #4]
 8005876:	681b      	ldr	r3, [r3, #0]
 8005878:	68d9      	ldr	r1, [r3, #12]
 800587a:	683b      	ldr	r3, [r7, #0]
 800587c:	681b      	ldr	r3, [r3, #0]
 800587e:	b29b      	uxth	r3, r3
 8005880:	461a      	mov	r2, r3
 8005882:	4613      	mov	r3, r2
 8005884:	005b      	lsls	r3, r3, #1
 8005886:	4413      	add	r3, r2
 8005888:	3b1e      	subs	r3, #30
 800588a:	2207      	movs	r2, #7
 800588c:	fa02 f303 	lsl.w	r3, r2, r3
 8005890:	43da      	mvns	r2, r3
 8005892:	687b      	ldr	r3, [r7, #4]
 8005894:	681b      	ldr	r3, [r3, #0]
 8005896:	400a      	ands	r2, r1
 8005898:	60da      	str	r2, [r3, #12]
 800589a:	687b      	ldr	r3, [r7, #4]
 800589c:	681b      	ldr	r3, [r3, #0]
 800589e:	68d9      	ldr	r1, [r3, #12]
 80058a0:	683b      	ldr	r3, [r7, #0]
 80058a2:	689a      	ldr	r2, [r3, #8]
 80058a4:	683b      	ldr	r3, [r7, #0]
 80058a6:	681b      	ldr	r3, [r3, #0]
 80058a8:	b29b      	uxth	r3, r3
 80058aa:	4618      	mov	r0, r3
 80058ac:	4603      	mov	r3, r0
 80058ae:	005b      	lsls	r3, r3, #1
 80058b0:	4403      	add	r3, r0
 80058b2:	3b1e      	subs	r3, #30
 80058b4:	409a      	lsls	r2, r3
 80058b6:	687b      	ldr	r3, [r7, #4]
 80058b8:	681b      	ldr	r3, [r3, #0]
 80058ba:	430a      	orrs	r2, r1
 80058bc:	60da      	str	r2, [r3, #12]
 80058be:	e022      	b.n	8005906 <HAL_ADC_ConfigChannel+0xbe>
 80058c0:	687b      	ldr	r3, [r7, #4]
 80058c2:	681b      	ldr	r3, [r3, #0]
 80058c4:	6919      	ldr	r1, [r3, #16]
 80058c6:	683b      	ldr	r3, [r7, #0]
 80058c8:	681b      	ldr	r3, [r3, #0]
 80058ca:	b29b      	uxth	r3, r3
 80058cc:	461a      	mov	r2, r3
 80058ce:	4613      	mov	r3, r2
 80058d0:	005b      	lsls	r3, r3, #1
 80058d2:	4413      	add	r3, r2
 80058d4:	2207      	movs	r2, #7
 80058d6:	fa02 f303 	lsl.w	r3, r2, r3
 80058da:	43da      	mvns	r2, r3
 80058dc:	687b      	ldr	r3, [r7, #4]
 80058de:	681b      	ldr	r3, [r3, #0]
 80058e0:	400a      	ands	r2, r1
 80058e2:	611a      	str	r2, [r3, #16]
 80058e4:	687b      	ldr	r3, [r7, #4]
 80058e6:	681b      	ldr	r3, [r3, #0]
 80058e8:	6919      	ldr	r1, [r3, #16]
 80058ea:	683b      	ldr	r3, [r7, #0]
 80058ec:	689a      	ldr	r2, [r3, #8]
 80058ee:	683b      	ldr	r3, [r7, #0]
 80058f0:	681b      	ldr	r3, [r3, #0]
 80058f2:	b29b      	uxth	r3, r3
 80058f4:	4618      	mov	r0, r3
 80058f6:	4603      	mov	r3, r0
 80058f8:	005b      	lsls	r3, r3, #1
 80058fa:	4403      	add	r3, r0
 80058fc:	409a      	lsls	r2, r3
 80058fe:	687b      	ldr	r3, [r7, #4]
 8005900:	681b      	ldr	r3, [r3, #0]
 8005902:	430a      	orrs	r2, r1
 8005904:	611a      	str	r2, [r3, #16]
 8005906:	683b      	ldr	r3, [r7, #0]
 8005908:	685b      	ldr	r3, [r3, #4]
 800590a:	2b06      	cmp	r3, #6
 800590c:	d824      	bhi.n	8005958 <HAL_ADC_ConfigChannel+0x110>
 800590e:	687b      	ldr	r3, [r7, #4]
 8005910:	681b      	ldr	r3, [r3, #0]
 8005912:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005914:	683b      	ldr	r3, [r7, #0]
 8005916:	685a      	ldr	r2, [r3, #4]
 8005918:	4613      	mov	r3, r2
 800591a:	009b      	lsls	r3, r3, #2
 800591c:	4413      	add	r3, r2
 800591e:	3b05      	subs	r3, #5
 8005920:	221f      	movs	r2, #31
 8005922:	fa02 f303 	lsl.w	r3, r2, r3
 8005926:	43da      	mvns	r2, r3
 8005928:	687b      	ldr	r3, [r7, #4]
 800592a:	681b      	ldr	r3, [r3, #0]
 800592c:	400a      	ands	r2, r1
 800592e:	635a      	str	r2, [r3, #52]	; 0x34
 8005930:	687b      	ldr	r3, [r7, #4]
 8005932:	681b      	ldr	r3, [r3, #0]
 8005934:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005936:	683b      	ldr	r3, [r7, #0]
 8005938:	681b      	ldr	r3, [r3, #0]
 800593a:	b29b      	uxth	r3, r3
 800593c:	4618      	mov	r0, r3
 800593e:	683b      	ldr	r3, [r7, #0]
 8005940:	685a      	ldr	r2, [r3, #4]
 8005942:	4613      	mov	r3, r2
 8005944:	009b      	lsls	r3, r3, #2
 8005946:	4413      	add	r3, r2
 8005948:	3b05      	subs	r3, #5
 800594a:	fa00 f203 	lsl.w	r2, r0, r3
 800594e:	687b      	ldr	r3, [r7, #4]
 8005950:	681b      	ldr	r3, [r3, #0]
 8005952:	430a      	orrs	r2, r1
 8005954:	635a      	str	r2, [r3, #52]	; 0x34
 8005956:	e04c      	b.n	80059f2 <HAL_ADC_ConfigChannel+0x1aa>
 8005958:	683b      	ldr	r3, [r7, #0]
 800595a:	685b      	ldr	r3, [r3, #4]
 800595c:	2b0c      	cmp	r3, #12
 800595e:	d824      	bhi.n	80059aa <HAL_ADC_ConfigChannel+0x162>
 8005960:	687b      	ldr	r3, [r7, #4]
 8005962:	681b      	ldr	r3, [r3, #0]
 8005964:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8005966:	683b      	ldr	r3, [r7, #0]
 8005968:	685a      	ldr	r2, [r3, #4]
 800596a:	4613      	mov	r3, r2
 800596c:	009b      	lsls	r3, r3, #2
 800596e:	4413      	add	r3, r2
 8005970:	3b23      	subs	r3, #35	; 0x23
 8005972:	221f      	movs	r2, #31
 8005974:	fa02 f303 	lsl.w	r3, r2, r3
 8005978:	43da      	mvns	r2, r3
 800597a:	687b      	ldr	r3, [r7, #4]
 800597c:	681b      	ldr	r3, [r3, #0]
 800597e:	400a      	ands	r2, r1
 8005980:	631a      	str	r2, [r3, #48]	; 0x30
 8005982:	687b      	ldr	r3, [r7, #4]
 8005984:	681b      	ldr	r3, [r3, #0]
 8005986:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8005988:	683b      	ldr	r3, [r7, #0]
 800598a:	681b      	ldr	r3, [r3, #0]
 800598c:	b29b      	uxth	r3, r3
 800598e:	4618      	mov	r0, r3
 8005990:	683b      	ldr	r3, [r7, #0]
 8005992:	685a      	ldr	r2, [r3, #4]
 8005994:	4613      	mov	r3, r2
 8005996:	009b      	lsls	r3, r3, #2
 8005998:	4413      	add	r3, r2
 800599a:	3b23      	subs	r3, #35	; 0x23
 800599c:	fa00 f203 	lsl.w	r2, r0, r3
 80059a0:	687b      	ldr	r3, [r7, #4]
 80059a2:	681b      	ldr	r3, [r3, #0]
 80059a4:	430a      	orrs	r2, r1
 80059a6:	631a      	str	r2, [r3, #48]	; 0x30
 80059a8:	e023      	b.n	80059f2 <HAL_ADC_ConfigChannel+0x1aa>
 80059aa:	687b      	ldr	r3, [r7, #4]
 80059ac:	681b      	ldr	r3, [r3, #0]
 80059ae:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80059b0:	683b      	ldr	r3, [r7, #0]
 80059b2:	685a      	ldr	r2, [r3, #4]
 80059b4:	4613      	mov	r3, r2
 80059b6:	009b      	lsls	r3, r3, #2
 80059b8:	4413      	add	r3, r2
 80059ba:	3b41      	subs	r3, #65	; 0x41
 80059bc:	221f      	movs	r2, #31
 80059be:	fa02 f303 	lsl.w	r3, r2, r3
 80059c2:	43da      	mvns	r2, r3
 80059c4:	687b      	ldr	r3, [r7, #4]
 80059c6:	681b      	ldr	r3, [r3, #0]
 80059c8:	400a      	ands	r2, r1
 80059ca:	62da      	str	r2, [r3, #44]	; 0x2c
 80059cc:	687b      	ldr	r3, [r7, #4]
 80059ce:	681b      	ldr	r3, [r3, #0]
 80059d0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80059d2:	683b      	ldr	r3, [r7, #0]
 80059d4:	681b      	ldr	r3, [r3, #0]
 80059d6:	b29b      	uxth	r3, r3
 80059d8:	4618      	mov	r0, r3
 80059da:	683b      	ldr	r3, [r7, #0]
 80059dc:	685a      	ldr	r2, [r3, #4]
 80059de:	4613      	mov	r3, r2
 80059e0:	009b      	lsls	r3, r3, #2
 80059e2:	4413      	add	r3, r2
 80059e4:	3b41      	subs	r3, #65	; 0x41
 80059e6:	fa00 f203 	lsl.w	r2, r0, r3
 80059ea:	687b      	ldr	r3, [r7, #4]
 80059ec:	681b      	ldr	r3, [r3, #0]
 80059ee:	430a      	orrs	r2, r1
 80059f0:	62da      	str	r2, [r3, #44]	; 0x2c
 80059f2:	4b29      	ldr	r3, [pc, #164]	; (8005a98 <HAL_ADC_ConfigChannel+0x250>)
 80059f4:	60fb      	str	r3, [r7, #12]
 80059f6:	687b      	ldr	r3, [r7, #4]
 80059f8:	681b      	ldr	r3, [r3, #0]
 80059fa:	4a28      	ldr	r2, [pc, #160]	; (8005a9c <HAL_ADC_ConfigChannel+0x254>)
 80059fc:	4293      	cmp	r3, r2
 80059fe:	d10f      	bne.n	8005a20 <HAL_ADC_ConfigChannel+0x1d8>
 8005a00:	683b      	ldr	r3, [r7, #0]
 8005a02:	681b      	ldr	r3, [r3, #0]
 8005a04:	2b12      	cmp	r3, #18
 8005a06:	d10b      	bne.n	8005a20 <HAL_ADC_ConfigChannel+0x1d8>
 8005a08:	68fb      	ldr	r3, [r7, #12]
 8005a0a:	685b      	ldr	r3, [r3, #4]
 8005a0c:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 8005a10:	68fb      	ldr	r3, [r7, #12]
 8005a12:	605a      	str	r2, [r3, #4]
 8005a14:	68fb      	ldr	r3, [r7, #12]
 8005a16:	685b      	ldr	r3, [r3, #4]
 8005a18:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8005a1c:	68fb      	ldr	r3, [r7, #12]
 8005a1e:	605a      	str	r2, [r3, #4]
 8005a20:	687b      	ldr	r3, [r7, #4]
 8005a22:	681b      	ldr	r3, [r3, #0]
 8005a24:	4a1d      	ldr	r2, [pc, #116]	; (8005a9c <HAL_ADC_ConfigChannel+0x254>)
 8005a26:	4293      	cmp	r3, r2
 8005a28:	d12b      	bne.n	8005a82 <HAL_ADC_ConfigChannel+0x23a>
 8005a2a:	683b      	ldr	r3, [r7, #0]
 8005a2c:	681b      	ldr	r3, [r3, #0]
 8005a2e:	4a1c      	ldr	r2, [pc, #112]	; (8005aa0 <HAL_ADC_ConfigChannel+0x258>)
 8005a30:	4293      	cmp	r3, r2
 8005a32:	d003      	beq.n	8005a3c <HAL_ADC_ConfigChannel+0x1f4>
 8005a34:	683b      	ldr	r3, [r7, #0]
 8005a36:	681b      	ldr	r3, [r3, #0]
 8005a38:	2b11      	cmp	r3, #17
 8005a3a:	d122      	bne.n	8005a82 <HAL_ADC_ConfigChannel+0x23a>
 8005a3c:	68fb      	ldr	r3, [r7, #12]
 8005a3e:	685b      	ldr	r3, [r3, #4]
 8005a40:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 8005a44:	68fb      	ldr	r3, [r7, #12]
 8005a46:	605a      	str	r2, [r3, #4]
 8005a48:	68fb      	ldr	r3, [r7, #12]
 8005a4a:	685b      	ldr	r3, [r3, #4]
 8005a4c:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8005a50:	68fb      	ldr	r3, [r7, #12]
 8005a52:	605a      	str	r2, [r3, #4]
 8005a54:	683b      	ldr	r3, [r7, #0]
 8005a56:	681b      	ldr	r3, [r3, #0]
 8005a58:	4a11      	ldr	r2, [pc, #68]	; (8005aa0 <HAL_ADC_ConfigChannel+0x258>)
 8005a5a:	4293      	cmp	r3, r2
 8005a5c:	d111      	bne.n	8005a82 <HAL_ADC_ConfigChannel+0x23a>
 8005a5e:	4b11      	ldr	r3, [pc, #68]	; (8005aa4 <HAL_ADC_ConfigChannel+0x25c>)
 8005a60:	681b      	ldr	r3, [r3, #0]
 8005a62:	4a11      	ldr	r2, [pc, #68]	; (8005aa8 <HAL_ADC_ConfigChannel+0x260>)
 8005a64:	fba2 2303 	umull	r2, r3, r2, r3
 8005a68:	0c9a      	lsrs	r2, r3, #18
 8005a6a:	4613      	mov	r3, r2
 8005a6c:	009b      	lsls	r3, r3, #2
 8005a6e:	4413      	add	r3, r2
 8005a70:	005b      	lsls	r3, r3, #1
 8005a72:	60bb      	str	r3, [r7, #8]
 8005a74:	e002      	b.n	8005a7c <HAL_ADC_ConfigChannel+0x234>
 8005a76:	68bb      	ldr	r3, [r7, #8]
 8005a78:	3b01      	subs	r3, #1
 8005a7a:	60bb      	str	r3, [r7, #8]
 8005a7c:	68bb      	ldr	r3, [r7, #8]
 8005a7e:	2b00      	cmp	r3, #0
 8005a80:	d1f9      	bne.n	8005a76 <HAL_ADC_ConfigChannel+0x22e>
 8005a82:	687b      	ldr	r3, [r7, #4]
 8005a84:	2200      	movs	r2, #0
 8005a86:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005a8a:	2300      	movs	r3, #0
 8005a8c:	4618      	mov	r0, r3
 8005a8e:	3714      	adds	r7, #20
 8005a90:	46bd      	mov	sp, r7
 8005a92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a96:	4770      	bx	lr
 8005a98:	40012300 	.word	0x40012300
 8005a9c:	40012000 	.word	0x40012000
 8005aa0:	10000012 	.word	0x10000012
 8005aa4:	2000006c 	.word	0x2000006c
 8005aa8:	431bde83 	.word	0x431bde83

08005aac <ADC_Init>:
 8005aac:	b480      	push	{r7}
 8005aae:	b085      	sub	sp, #20
 8005ab0:	af00      	add	r7, sp, #0
 8005ab2:	6078      	str	r0, [r7, #4]
 8005ab4:	4b79      	ldr	r3, [pc, #484]	; (8005c9c <ADC_Init+0x1f0>)
 8005ab6:	60fb      	str	r3, [r7, #12]
 8005ab8:	68fb      	ldr	r3, [r7, #12]
 8005aba:	685b      	ldr	r3, [r3, #4]
 8005abc:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8005ac0:	68fb      	ldr	r3, [r7, #12]
 8005ac2:	605a      	str	r2, [r3, #4]
 8005ac4:	68fb      	ldr	r3, [r7, #12]
 8005ac6:	685a      	ldr	r2, [r3, #4]
 8005ac8:	687b      	ldr	r3, [r7, #4]
 8005aca:	685b      	ldr	r3, [r3, #4]
 8005acc:	431a      	orrs	r2, r3
 8005ace:	68fb      	ldr	r3, [r7, #12]
 8005ad0:	605a      	str	r2, [r3, #4]
 8005ad2:	687b      	ldr	r3, [r7, #4]
 8005ad4:	681b      	ldr	r3, [r3, #0]
 8005ad6:	685a      	ldr	r2, [r3, #4]
 8005ad8:	687b      	ldr	r3, [r7, #4]
 8005ada:	681b      	ldr	r3, [r3, #0]
 8005adc:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005ae0:	605a      	str	r2, [r3, #4]
 8005ae2:	687b      	ldr	r3, [r7, #4]
 8005ae4:	681b      	ldr	r3, [r3, #0]
 8005ae6:	6859      	ldr	r1, [r3, #4]
 8005ae8:	687b      	ldr	r3, [r7, #4]
 8005aea:	691b      	ldr	r3, [r3, #16]
 8005aec:	021a      	lsls	r2, r3, #8
 8005aee:	687b      	ldr	r3, [r7, #4]
 8005af0:	681b      	ldr	r3, [r3, #0]
 8005af2:	430a      	orrs	r2, r1
 8005af4:	605a      	str	r2, [r3, #4]
 8005af6:	687b      	ldr	r3, [r7, #4]
 8005af8:	681b      	ldr	r3, [r3, #0]
 8005afa:	685a      	ldr	r2, [r3, #4]
 8005afc:	687b      	ldr	r3, [r7, #4]
 8005afe:	681b      	ldr	r3, [r3, #0]
 8005b00:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8005b04:	605a      	str	r2, [r3, #4]
 8005b06:	687b      	ldr	r3, [r7, #4]
 8005b08:	681b      	ldr	r3, [r3, #0]
 8005b0a:	6859      	ldr	r1, [r3, #4]
 8005b0c:	687b      	ldr	r3, [r7, #4]
 8005b0e:	689a      	ldr	r2, [r3, #8]
 8005b10:	687b      	ldr	r3, [r7, #4]
 8005b12:	681b      	ldr	r3, [r3, #0]
 8005b14:	430a      	orrs	r2, r1
 8005b16:	605a      	str	r2, [r3, #4]
 8005b18:	687b      	ldr	r3, [r7, #4]
 8005b1a:	681b      	ldr	r3, [r3, #0]
 8005b1c:	689a      	ldr	r2, [r3, #8]
 8005b1e:	687b      	ldr	r3, [r7, #4]
 8005b20:	681b      	ldr	r3, [r3, #0]
 8005b22:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005b26:	609a      	str	r2, [r3, #8]
 8005b28:	687b      	ldr	r3, [r7, #4]
 8005b2a:	681b      	ldr	r3, [r3, #0]
 8005b2c:	6899      	ldr	r1, [r3, #8]
 8005b2e:	687b      	ldr	r3, [r7, #4]
 8005b30:	68da      	ldr	r2, [r3, #12]
 8005b32:	687b      	ldr	r3, [r7, #4]
 8005b34:	681b      	ldr	r3, [r3, #0]
 8005b36:	430a      	orrs	r2, r1
 8005b38:	609a      	str	r2, [r3, #8]
 8005b3a:	687b      	ldr	r3, [r7, #4]
 8005b3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005b3e:	4a58      	ldr	r2, [pc, #352]	; (8005ca0 <ADC_Init+0x1f4>)
 8005b40:	4293      	cmp	r3, r2
 8005b42:	d022      	beq.n	8005b8a <ADC_Init+0xde>
 8005b44:	687b      	ldr	r3, [r7, #4]
 8005b46:	681b      	ldr	r3, [r3, #0]
 8005b48:	689a      	ldr	r2, [r3, #8]
 8005b4a:	687b      	ldr	r3, [r7, #4]
 8005b4c:	681b      	ldr	r3, [r3, #0]
 8005b4e:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8005b52:	609a      	str	r2, [r3, #8]
 8005b54:	687b      	ldr	r3, [r7, #4]
 8005b56:	681b      	ldr	r3, [r3, #0]
 8005b58:	6899      	ldr	r1, [r3, #8]
 8005b5a:	687b      	ldr	r3, [r7, #4]
 8005b5c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8005b5e:	687b      	ldr	r3, [r7, #4]
 8005b60:	681b      	ldr	r3, [r3, #0]
 8005b62:	430a      	orrs	r2, r1
 8005b64:	609a      	str	r2, [r3, #8]
 8005b66:	687b      	ldr	r3, [r7, #4]
 8005b68:	681b      	ldr	r3, [r3, #0]
 8005b6a:	689a      	ldr	r2, [r3, #8]
 8005b6c:	687b      	ldr	r3, [r7, #4]
 8005b6e:	681b      	ldr	r3, [r3, #0]
 8005b70:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005b74:	609a      	str	r2, [r3, #8]
 8005b76:	687b      	ldr	r3, [r7, #4]
 8005b78:	681b      	ldr	r3, [r3, #0]
 8005b7a:	6899      	ldr	r1, [r3, #8]
 8005b7c:	687b      	ldr	r3, [r7, #4]
 8005b7e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005b80:	687b      	ldr	r3, [r7, #4]
 8005b82:	681b      	ldr	r3, [r3, #0]
 8005b84:	430a      	orrs	r2, r1
 8005b86:	609a      	str	r2, [r3, #8]
 8005b88:	e00f      	b.n	8005baa <ADC_Init+0xfe>
 8005b8a:	687b      	ldr	r3, [r7, #4]
 8005b8c:	681b      	ldr	r3, [r3, #0]
 8005b8e:	689a      	ldr	r2, [r3, #8]
 8005b90:	687b      	ldr	r3, [r7, #4]
 8005b92:	681b      	ldr	r3, [r3, #0]
 8005b94:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8005b98:	609a      	str	r2, [r3, #8]
 8005b9a:	687b      	ldr	r3, [r7, #4]
 8005b9c:	681b      	ldr	r3, [r3, #0]
 8005b9e:	689a      	ldr	r2, [r3, #8]
 8005ba0:	687b      	ldr	r3, [r7, #4]
 8005ba2:	681b      	ldr	r3, [r3, #0]
 8005ba4:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005ba8:	609a      	str	r2, [r3, #8]
 8005baa:	687b      	ldr	r3, [r7, #4]
 8005bac:	681b      	ldr	r3, [r3, #0]
 8005bae:	689a      	ldr	r2, [r3, #8]
 8005bb0:	687b      	ldr	r3, [r7, #4]
 8005bb2:	681b      	ldr	r3, [r3, #0]
 8005bb4:	f022 0202 	bic.w	r2, r2, #2
 8005bb8:	609a      	str	r2, [r3, #8]
 8005bba:	687b      	ldr	r3, [r7, #4]
 8005bbc:	681b      	ldr	r3, [r3, #0]
 8005bbe:	6899      	ldr	r1, [r3, #8]
 8005bc0:	687b      	ldr	r3, [r7, #4]
 8005bc2:	7e1b      	ldrb	r3, [r3, #24]
 8005bc4:	005a      	lsls	r2, r3, #1
 8005bc6:	687b      	ldr	r3, [r7, #4]
 8005bc8:	681b      	ldr	r3, [r3, #0]
 8005bca:	430a      	orrs	r2, r1
 8005bcc:	609a      	str	r2, [r3, #8]
 8005bce:	687b      	ldr	r3, [r7, #4]
 8005bd0:	f893 3020 	ldrb.w	r3, [r3, #32]
 8005bd4:	2b00      	cmp	r3, #0
 8005bd6:	d01b      	beq.n	8005c10 <ADC_Init+0x164>
 8005bd8:	687b      	ldr	r3, [r7, #4]
 8005bda:	681b      	ldr	r3, [r3, #0]
 8005bdc:	685a      	ldr	r2, [r3, #4]
 8005bde:	687b      	ldr	r3, [r7, #4]
 8005be0:	681b      	ldr	r3, [r3, #0]
 8005be2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005be6:	605a      	str	r2, [r3, #4]
 8005be8:	687b      	ldr	r3, [r7, #4]
 8005bea:	681b      	ldr	r3, [r3, #0]
 8005bec:	685a      	ldr	r2, [r3, #4]
 8005bee:	687b      	ldr	r3, [r7, #4]
 8005bf0:	681b      	ldr	r3, [r3, #0]
 8005bf2:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8005bf6:	605a      	str	r2, [r3, #4]
 8005bf8:	687b      	ldr	r3, [r7, #4]
 8005bfa:	681b      	ldr	r3, [r3, #0]
 8005bfc:	6859      	ldr	r1, [r3, #4]
 8005bfe:	687b      	ldr	r3, [r7, #4]
 8005c00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c02:	3b01      	subs	r3, #1
 8005c04:	035a      	lsls	r2, r3, #13
 8005c06:	687b      	ldr	r3, [r7, #4]
 8005c08:	681b      	ldr	r3, [r3, #0]
 8005c0a:	430a      	orrs	r2, r1
 8005c0c:	605a      	str	r2, [r3, #4]
 8005c0e:	e007      	b.n	8005c20 <ADC_Init+0x174>
 8005c10:	687b      	ldr	r3, [r7, #4]
 8005c12:	681b      	ldr	r3, [r3, #0]
 8005c14:	685a      	ldr	r2, [r3, #4]
 8005c16:	687b      	ldr	r3, [r7, #4]
 8005c18:	681b      	ldr	r3, [r3, #0]
 8005c1a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005c1e:	605a      	str	r2, [r3, #4]
 8005c20:	687b      	ldr	r3, [r7, #4]
 8005c22:	681b      	ldr	r3, [r3, #0]
 8005c24:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005c26:	687b      	ldr	r3, [r7, #4]
 8005c28:	681b      	ldr	r3, [r3, #0]
 8005c2a:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8005c2e:	62da      	str	r2, [r3, #44]	; 0x2c
 8005c30:	687b      	ldr	r3, [r7, #4]
 8005c32:	681b      	ldr	r3, [r3, #0]
 8005c34:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8005c36:	687b      	ldr	r3, [r7, #4]
 8005c38:	69db      	ldr	r3, [r3, #28]
 8005c3a:	3b01      	subs	r3, #1
 8005c3c:	051a      	lsls	r2, r3, #20
 8005c3e:	687b      	ldr	r3, [r7, #4]
 8005c40:	681b      	ldr	r3, [r3, #0]
 8005c42:	430a      	orrs	r2, r1
 8005c44:	62da      	str	r2, [r3, #44]	; 0x2c
 8005c46:	687b      	ldr	r3, [r7, #4]
 8005c48:	681b      	ldr	r3, [r3, #0]
 8005c4a:	689a      	ldr	r2, [r3, #8]
 8005c4c:	687b      	ldr	r3, [r7, #4]
 8005c4e:	681b      	ldr	r3, [r3, #0]
 8005c50:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8005c54:	609a      	str	r2, [r3, #8]
 8005c56:	687b      	ldr	r3, [r7, #4]
 8005c58:	681b      	ldr	r3, [r3, #0]
 8005c5a:	6899      	ldr	r1, [r3, #8]
 8005c5c:	687b      	ldr	r3, [r7, #4]
 8005c5e:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8005c62:	025a      	lsls	r2, r3, #9
 8005c64:	687b      	ldr	r3, [r7, #4]
 8005c66:	681b      	ldr	r3, [r3, #0]
 8005c68:	430a      	orrs	r2, r1
 8005c6a:	609a      	str	r2, [r3, #8]
 8005c6c:	687b      	ldr	r3, [r7, #4]
 8005c6e:	681b      	ldr	r3, [r3, #0]
 8005c70:	689a      	ldr	r2, [r3, #8]
 8005c72:	687b      	ldr	r3, [r7, #4]
 8005c74:	681b      	ldr	r3, [r3, #0]
 8005c76:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005c7a:	609a      	str	r2, [r3, #8]
 8005c7c:	687b      	ldr	r3, [r7, #4]
 8005c7e:	681b      	ldr	r3, [r3, #0]
 8005c80:	6899      	ldr	r1, [r3, #8]
 8005c82:	687b      	ldr	r3, [r7, #4]
 8005c84:	695b      	ldr	r3, [r3, #20]
 8005c86:	029a      	lsls	r2, r3, #10
 8005c88:	687b      	ldr	r3, [r7, #4]
 8005c8a:	681b      	ldr	r3, [r3, #0]
 8005c8c:	430a      	orrs	r2, r1
 8005c8e:	609a      	str	r2, [r3, #8]
 8005c90:	bf00      	nop
 8005c92:	3714      	adds	r7, #20
 8005c94:	46bd      	mov	sp, r7
 8005c96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c9a:	4770      	bx	lr
 8005c9c:	40012300 	.word	0x40012300
 8005ca0:	0f000001 	.word	0x0f000001

08005ca4 <HAL_ADCEx_InjectedConfigChannel>:
 8005ca4:	b480      	push	{r7}
 8005ca6:	b085      	sub	sp, #20
 8005ca8:	af00      	add	r7, sp, #0
 8005caa:	6078      	str	r0, [r7, #4]
 8005cac:	6039      	str	r1, [r7, #0]
 8005cae:	687b      	ldr	r3, [r7, #4]
 8005cb0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005cb4:	2b01      	cmp	r3, #1
 8005cb6:	d101      	bne.n	8005cbc <HAL_ADCEx_InjectedConfigChannel+0x18>
 8005cb8:	2302      	movs	r3, #2
 8005cba:	e17e      	b.n	8005fba <HAL_ADCEx_InjectedConfigChannel+0x316>
 8005cbc:	687b      	ldr	r3, [r7, #4]
 8005cbe:	2201      	movs	r2, #1
 8005cc0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005cc4:	683b      	ldr	r3, [r7, #0]
 8005cc6:	681b      	ldr	r3, [r3, #0]
 8005cc8:	2b09      	cmp	r3, #9
 8005cca:	d925      	bls.n	8005d18 <HAL_ADCEx_InjectedConfigChannel+0x74>
 8005ccc:	687b      	ldr	r3, [r7, #4]
 8005cce:	681b      	ldr	r3, [r3, #0]
 8005cd0:	68d9      	ldr	r1, [r3, #12]
 8005cd2:	683b      	ldr	r3, [r7, #0]
 8005cd4:	681b      	ldr	r3, [r3, #0]
 8005cd6:	b29b      	uxth	r3, r3
 8005cd8:	461a      	mov	r2, r3
 8005cda:	4613      	mov	r3, r2
 8005cdc:	005b      	lsls	r3, r3, #1
 8005cde:	4413      	add	r3, r2
 8005ce0:	3b1e      	subs	r3, #30
 8005ce2:	2207      	movs	r2, #7
 8005ce4:	fa02 f303 	lsl.w	r3, r2, r3
 8005ce8:	43da      	mvns	r2, r3
 8005cea:	687b      	ldr	r3, [r7, #4]
 8005cec:	681b      	ldr	r3, [r3, #0]
 8005cee:	400a      	ands	r2, r1
 8005cf0:	60da      	str	r2, [r3, #12]
 8005cf2:	687b      	ldr	r3, [r7, #4]
 8005cf4:	681b      	ldr	r3, [r3, #0]
 8005cf6:	68d9      	ldr	r1, [r3, #12]
 8005cf8:	683b      	ldr	r3, [r7, #0]
 8005cfa:	689a      	ldr	r2, [r3, #8]
 8005cfc:	683b      	ldr	r3, [r7, #0]
 8005cfe:	681b      	ldr	r3, [r3, #0]
 8005d00:	b29b      	uxth	r3, r3
 8005d02:	4618      	mov	r0, r3
 8005d04:	4603      	mov	r3, r0
 8005d06:	005b      	lsls	r3, r3, #1
 8005d08:	4403      	add	r3, r0
 8005d0a:	3b1e      	subs	r3, #30
 8005d0c:	409a      	lsls	r2, r3
 8005d0e:	687b      	ldr	r3, [r7, #4]
 8005d10:	681b      	ldr	r3, [r3, #0]
 8005d12:	430a      	orrs	r2, r1
 8005d14:	60da      	str	r2, [r3, #12]
 8005d16:	e022      	b.n	8005d5e <HAL_ADCEx_InjectedConfigChannel+0xba>
 8005d18:	687b      	ldr	r3, [r7, #4]
 8005d1a:	681b      	ldr	r3, [r3, #0]
 8005d1c:	6919      	ldr	r1, [r3, #16]
 8005d1e:	683b      	ldr	r3, [r7, #0]
 8005d20:	681b      	ldr	r3, [r3, #0]
 8005d22:	b29b      	uxth	r3, r3
 8005d24:	461a      	mov	r2, r3
 8005d26:	4613      	mov	r3, r2
 8005d28:	005b      	lsls	r3, r3, #1
 8005d2a:	4413      	add	r3, r2
 8005d2c:	2207      	movs	r2, #7
 8005d2e:	fa02 f303 	lsl.w	r3, r2, r3
 8005d32:	43da      	mvns	r2, r3
 8005d34:	687b      	ldr	r3, [r7, #4]
 8005d36:	681b      	ldr	r3, [r3, #0]
 8005d38:	400a      	ands	r2, r1
 8005d3a:	611a      	str	r2, [r3, #16]
 8005d3c:	687b      	ldr	r3, [r7, #4]
 8005d3e:	681b      	ldr	r3, [r3, #0]
 8005d40:	6919      	ldr	r1, [r3, #16]
 8005d42:	683b      	ldr	r3, [r7, #0]
 8005d44:	689a      	ldr	r2, [r3, #8]
 8005d46:	683b      	ldr	r3, [r7, #0]
 8005d48:	681b      	ldr	r3, [r3, #0]
 8005d4a:	b29b      	uxth	r3, r3
 8005d4c:	4618      	mov	r0, r3
 8005d4e:	4603      	mov	r3, r0
 8005d50:	005b      	lsls	r3, r3, #1
 8005d52:	4403      	add	r3, r0
 8005d54:	409a      	lsls	r2, r3
 8005d56:	687b      	ldr	r3, [r7, #4]
 8005d58:	681b      	ldr	r3, [r3, #0]
 8005d5a:	430a      	orrs	r2, r1
 8005d5c:	611a      	str	r2, [r3, #16]
 8005d5e:	687b      	ldr	r3, [r7, #4]
 8005d60:	681b      	ldr	r3, [r3, #0]
 8005d62:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8005d64:	687b      	ldr	r3, [r7, #4]
 8005d66:	681b      	ldr	r3, [r3, #0]
 8005d68:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8005d6c:	639a      	str	r2, [r3, #56]	; 0x38
 8005d6e:	687b      	ldr	r3, [r7, #4]
 8005d70:	681b      	ldr	r3, [r3, #0]
 8005d72:	6b99      	ldr	r1, [r3, #56]	; 0x38
 8005d74:	683b      	ldr	r3, [r7, #0]
 8005d76:	691b      	ldr	r3, [r3, #16]
 8005d78:	3b01      	subs	r3, #1
 8005d7a:	051a      	lsls	r2, r3, #20
 8005d7c:	687b      	ldr	r3, [r7, #4]
 8005d7e:	681b      	ldr	r3, [r3, #0]
 8005d80:	430a      	orrs	r2, r1
 8005d82:	639a      	str	r2, [r3, #56]	; 0x38
 8005d84:	687b      	ldr	r3, [r7, #4]
 8005d86:	681b      	ldr	r3, [r3, #0]
 8005d88:	6b99      	ldr	r1, [r3, #56]	; 0x38
 8005d8a:	683b      	ldr	r3, [r7, #0]
 8005d8c:	685b      	ldr	r3, [r3, #4]
 8005d8e:	b2da      	uxtb	r2, r3
 8005d90:	683b      	ldr	r3, [r7, #0]
 8005d92:	691b      	ldr	r3, [r3, #16]
 8005d94:	b2db      	uxtb	r3, r3
 8005d96:	1ad3      	subs	r3, r2, r3
 8005d98:	b2db      	uxtb	r3, r3
 8005d9a:	3303      	adds	r3, #3
 8005d9c:	b2db      	uxtb	r3, r3
 8005d9e:	461a      	mov	r2, r3
 8005da0:	4613      	mov	r3, r2
 8005da2:	009b      	lsls	r3, r3, #2
 8005da4:	4413      	add	r3, r2
 8005da6:	221f      	movs	r2, #31
 8005da8:	fa02 f303 	lsl.w	r3, r2, r3
 8005dac:	43da      	mvns	r2, r3
 8005dae:	687b      	ldr	r3, [r7, #4]
 8005db0:	681b      	ldr	r3, [r3, #0]
 8005db2:	400a      	ands	r2, r1
 8005db4:	639a      	str	r2, [r3, #56]	; 0x38
 8005db6:	687b      	ldr	r3, [r7, #4]
 8005db8:	681b      	ldr	r3, [r3, #0]
 8005dba:	6b99      	ldr	r1, [r3, #56]	; 0x38
 8005dbc:	683b      	ldr	r3, [r7, #0]
 8005dbe:	681b      	ldr	r3, [r3, #0]
 8005dc0:	b29b      	uxth	r3, r3
 8005dc2:	4618      	mov	r0, r3
 8005dc4:	683b      	ldr	r3, [r7, #0]
 8005dc6:	685b      	ldr	r3, [r3, #4]
 8005dc8:	b2da      	uxtb	r2, r3
 8005dca:	683b      	ldr	r3, [r7, #0]
 8005dcc:	691b      	ldr	r3, [r3, #16]
 8005dce:	b2db      	uxtb	r3, r3
 8005dd0:	1ad3      	subs	r3, r2, r3
 8005dd2:	b2db      	uxtb	r3, r3
 8005dd4:	3303      	adds	r3, #3
 8005dd6:	b2db      	uxtb	r3, r3
 8005dd8:	461a      	mov	r2, r3
 8005dda:	4613      	mov	r3, r2
 8005ddc:	009b      	lsls	r3, r3, #2
 8005dde:	4413      	add	r3, r2
 8005de0:	fa00 f203 	lsl.w	r2, r0, r3
 8005de4:	687b      	ldr	r3, [r7, #4]
 8005de6:	681b      	ldr	r3, [r3, #0]
 8005de8:	430a      	orrs	r2, r1
 8005dea:	639a      	str	r2, [r3, #56]	; 0x38
 8005dec:	683b      	ldr	r3, [r7, #0]
 8005dee:	699b      	ldr	r3, [r3, #24]
 8005df0:	4a75      	ldr	r2, [pc, #468]	; (8005fc8 <HAL_ADCEx_InjectedConfigChannel+0x324>)
 8005df2:	4293      	cmp	r3, r2
 8005df4:	d022      	beq.n	8005e3c <HAL_ADCEx_InjectedConfigChannel+0x198>
 8005df6:	687b      	ldr	r3, [r7, #4]
 8005df8:	681b      	ldr	r3, [r3, #0]
 8005dfa:	689a      	ldr	r2, [r3, #8]
 8005dfc:	687b      	ldr	r3, [r7, #4]
 8005dfe:	681b      	ldr	r3, [r3, #0]
 8005e00:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8005e04:	609a      	str	r2, [r3, #8]
 8005e06:	687b      	ldr	r3, [r7, #4]
 8005e08:	681b      	ldr	r3, [r3, #0]
 8005e0a:	6899      	ldr	r1, [r3, #8]
 8005e0c:	683b      	ldr	r3, [r7, #0]
 8005e0e:	699a      	ldr	r2, [r3, #24]
 8005e10:	687b      	ldr	r3, [r7, #4]
 8005e12:	681b      	ldr	r3, [r3, #0]
 8005e14:	430a      	orrs	r2, r1
 8005e16:	609a      	str	r2, [r3, #8]
 8005e18:	687b      	ldr	r3, [r7, #4]
 8005e1a:	681b      	ldr	r3, [r3, #0]
 8005e1c:	689a      	ldr	r2, [r3, #8]
 8005e1e:	687b      	ldr	r3, [r7, #4]
 8005e20:	681b      	ldr	r3, [r3, #0]
 8005e22:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8005e26:	609a      	str	r2, [r3, #8]
 8005e28:	687b      	ldr	r3, [r7, #4]
 8005e2a:	681b      	ldr	r3, [r3, #0]
 8005e2c:	6899      	ldr	r1, [r3, #8]
 8005e2e:	683b      	ldr	r3, [r7, #0]
 8005e30:	69da      	ldr	r2, [r3, #28]
 8005e32:	687b      	ldr	r3, [r7, #4]
 8005e34:	681b      	ldr	r3, [r3, #0]
 8005e36:	430a      	orrs	r2, r1
 8005e38:	609a      	str	r2, [r3, #8]
 8005e3a:	e00f      	b.n	8005e5c <HAL_ADCEx_InjectedConfigChannel+0x1b8>
 8005e3c:	687b      	ldr	r3, [r7, #4]
 8005e3e:	681b      	ldr	r3, [r3, #0]
 8005e40:	689a      	ldr	r2, [r3, #8]
 8005e42:	687b      	ldr	r3, [r7, #4]
 8005e44:	681b      	ldr	r3, [r3, #0]
 8005e46:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8005e4a:	609a      	str	r2, [r3, #8]
 8005e4c:	687b      	ldr	r3, [r7, #4]
 8005e4e:	681b      	ldr	r3, [r3, #0]
 8005e50:	689a      	ldr	r2, [r3, #8]
 8005e52:	687b      	ldr	r3, [r7, #4]
 8005e54:	681b      	ldr	r3, [r3, #0]
 8005e56:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8005e5a:	609a      	str	r2, [r3, #8]
 8005e5c:	683b      	ldr	r3, [r7, #0]
 8005e5e:	7d5b      	ldrb	r3, [r3, #21]
 8005e60:	2b00      	cmp	r3, #0
 8005e62:	d008      	beq.n	8005e76 <HAL_ADCEx_InjectedConfigChannel+0x1d2>
 8005e64:	687b      	ldr	r3, [r7, #4]
 8005e66:	681b      	ldr	r3, [r3, #0]
 8005e68:	685a      	ldr	r2, [r3, #4]
 8005e6a:	687b      	ldr	r3, [r7, #4]
 8005e6c:	681b      	ldr	r3, [r3, #0]
 8005e6e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005e72:	605a      	str	r2, [r3, #4]
 8005e74:	e007      	b.n	8005e86 <HAL_ADCEx_InjectedConfigChannel+0x1e2>
 8005e76:	687b      	ldr	r3, [r7, #4]
 8005e78:	681b      	ldr	r3, [r3, #0]
 8005e7a:	685a      	ldr	r2, [r3, #4]
 8005e7c:	687b      	ldr	r3, [r7, #4]
 8005e7e:	681b      	ldr	r3, [r3, #0]
 8005e80:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005e84:	605a      	str	r2, [r3, #4]
 8005e86:	683b      	ldr	r3, [r7, #0]
 8005e88:	7d1b      	ldrb	r3, [r3, #20]
 8005e8a:	2b00      	cmp	r3, #0
 8005e8c:	d008      	beq.n	8005ea0 <HAL_ADCEx_InjectedConfigChannel+0x1fc>
 8005e8e:	687b      	ldr	r3, [r7, #4]
 8005e90:	681b      	ldr	r3, [r3, #0]
 8005e92:	685a      	ldr	r2, [r3, #4]
 8005e94:	687b      	ldr	r3, [r7, #4]
 8005e96:	681b      	ldr	r3, [r3, #0]
 8005e98:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8005e9c:	605a      	str	r2, [r3, #4]
 8005e9e:	e007      	b.n	8005eb0 <HAL_ADCEx_InjectedConfigChannel+0x20c>
 8005ea0:	687b      	ldr	r3, [r7, #4]
 8005ea2:	681b      	ldr	r3, [r3, #0]
 8005ea4:	685a      	ldr	r2, [r3, #4]
 8005ea6:	687b      	ldr	r3, [r7, #4]
 8005ea8:	681b      	ldr	r3, [r3, #0]
 8005eaa:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8005eae:	605a      	str	r2, [r3, #4]
 8005eb0:	683b      	ldr	r3, [r7, #0]
 8005eb2:	685b      	ldr	r3, [r3, #4]
 8005eb4:	2b03      	cmp	r3, #3
 8005eb6:	d02e      	beq.n	8005f16 <HAL_ADCEx_InjectedConfigChannel+0x272>
 8005eb8:	2b03      	cmp	r3, #3
 8005eba:	d840      	bhi.n	8005f3e <HAL_ADCEx_InjectedConfigChannel+0x29a>
 8005ebc:	2b01      	cmp	r3, #1
 8005ebe:	d002      	beq.n	8005ec6 <HAL_ADCEx_InjectedConfigChannel+0x222>
 8005ec0:	2b02      	cmp	r3, #2
 8005ec2:	d014      	beq.n	8005eee <HAL_ADCEx_InjectedConfigChannel+0x24a>
 8005ec4:	e03b      	b.n	8005f3e <HAL_ADCEx_InjectedConfigChannel+0x29a>
 8005ec6:	687b      	ldr	r3, [r7, #4]
 8005ec8:	681b      	ldr	r3, [r3, #0]
 8005eca:	695b      	ldr	r3, [r3, #20]
 8005ecc:	687a      	ldr	r2, [r7, #4]
 8005ece:	6812      	ldr	r2, [r2, #0]
 8005ed0:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8005ed4:	f023 030f 	bic.w	r3, r3, #15
 8005ed8:	6153      	str	r3, [r2, #20]
 8005eda:	687b      	ldr	r3, [r7, #4]
 8005edc:	681b      	ldr	r3, [r3, #0]
 8005ede:	6959      	ldr	r1, [r3, #20]
 8005ee0:	683b      	ldr	r3, [r7, #0]
 8005ee2:	68da      	ldr	r2, [r3, #12]
 8005ee4:	687b      	ldr	r3, [r7, #4]
 8005ee6:	681b      	ldr	r3, [r3, #0]
 8005ee8:	430a      	orrs	r2, r1
 8005eea:	615a      	str	r2, [r3, #20]
 8005eec:	e03b      	b.n	8005f66 <HAL_ADCEx_InjectedConfigChannel+0x2c2>
 8005eee:	687b      	ldr	r3, [r7, #4]
 8005ef0:	681b      	ldr	r3, [r3, #0]
 8005ef2:	699b      	ldr	r3, [r3, #24]
 8005ef4:	687a      	ldr	r2, [r7, #4]
 8005ef6:	6812      	ldr	r2, [r2, #0]
 8005ef8:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8005efc:	f023 030f 	bic.w	r3, r3, #15
 8005f00:	6193      	str	r3, [r2, #24]
 8005f02:	687b      	ldr	r3, [r7, #4]
 8005f04:	681b      	ldr	r3, [r3, #0]
 8005f06:	6999      	ldr	r1, [r3, #24]
 8005f08:	683b      	ldr	r3, [r7, #0]
 8005f0a:	68da      	ldr	r2, [r3, #12]
 8005f0c:	687b      	ldr	r3, [r7, #4]
 8005f0e:	681b      	ldr	r3, [r3, #0]
 8005f10:	430a      	orrs	r2, r1
 8005f12:	619a      	str	r2, [r3, #24]
 8005f14:	e027      	b.n	8005f66 <HAL_ADCEx_InjectedConfigChannel+0x2c2>
 8005f16:	687b      	ldr	r3, [r7, #4]
 8005f18:	681b      	ldr	r3, [r3, #0]
 8005f1a:	69db      	ldr	r3, [r3, #28]
 8005f1c:	687a      	ldr	r2, [r7, #4]
 8005f1e:	6812      	ldr	r2, [r2, #0]
 8005f20:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8005f24:	f023 030f 	bic.w	r3, r3, #15
 8005f28:	61d3      	str	r3, [r2, #28]
 8005f2a:	687b      	ldr	r3, [r7, #4]
 8005f2c:	681b      	ldr	r3, [r3, #0]
 8005f2e:	69d9      	ldr	r1, [r3, #28]
 8005f30:	683b      	ldr	r3, [r7, #0]
 8005f32:	68da      	ldr	r2, [r3, #12]
 8005f34:	687b      	ldr	r3, [r7, #4]
 8005f36:	681b      	ldr	r3, [r3, #0]
 8005f38:	430a      	orrs	r2, r1
 8005f3a:	61da      	str	r2, [r3, #28]
 8005f3c:	e013      	b.n	8005f66 <HAL_ADCEx_InjectedConfigChannel+0x2c2>
 8005f3e:	687b      	ldr	r3, [r7, #4]
 8005f40:	681b      	ldr	r3, [r3, #0]
 8005f42:	6a1b      	ldr	r3, [r3, #32]
 8005f44:	687a      	ldr	r2, [r7, #4]
 8005f46:	6812      	ldr	r2, [r2, #0]
 8005f48:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8005f4c:	f023 030f 	bic.w	r3, r3, #15
 8005f50:	6213      	str	r3, [r2, #32]
 8005f52:	687b      	ldr	r3, [r7, #4]
 8005f54:	681b      	ldr	r3, [r3, #0]
 8005f56:	6a19      	ldr	r1, [r3, #32]
 8005f58:	683b      	ldr	r3, [r7, #0]
 8005f5a:	68da      	ldr	r2, [r3, #12]
 8005f5c:	687b      	ldr	r3, [r7, #4]
 8005f5e:	681b      	ldr	r3, [r3, #0]
 8005f60:	430a      	orrs	r2, r1
 8005f62:	621a      	str	r2, [r3, #32]
 8005f64:	bf00      	nop
 8005f66:	4b19      	ldr	r3, [pc, #100]	; (8005fcc <HAL_ADCEx_InjectedConfigChannel+0x328>)
 8005f68:	60fb      	str	r3, [r7, #12]
 8005f6a:	687b      	ldr	r3, [r7, #4]
 8005f6c:	681b      	ldr	r3, [r3, #0]
 8005f6e:	4a18      	ldr	r2, [pc, #96]	; (8005fd0 <HAL_ADCEx_InjectedConfigChannel+0x32c>)
 8005f70:	4293      	cmp	r3, r2
 8005f72:	d109      	bne.n	8005f88 <HAL_ADCEx_InjectedConfigChannel+0x2e4>
 8005f74:	683b      	ldr	r3, [r7, #0]
 8005f76:	681b      	ldr	r3, [r3, #0]
 8005f78:	2b12      	cmp	r3, #18
 8005f7a:	d105      	bne.n	8005f88 <HAL_ADCEx_InjectedConfigChannel+0x2e4>
 8005f7c:	68fb      	ldr	r3, [r7, #12]
 8005f7e:	685b      	ldr	r3, [r3, #4]
 8005f80:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8005f84:	68fb      	ldr	r3, [r7, #12]
 8005f86:	605a      	str	r2, [r3, #4]
 8005f88:	687b      	ldr	r3, [r7, #4]
 8005f8a:	681b      	ldr	r3, [r3, #0]
 8005f8c:	4a10      	ldr	r2, [pc, #64]	; (8005fd0 <HAL_ADCEx_InjectedConfigChannel+0x32c>)
 8005f8e:	4293      	cmp	r3, r2
 8005f90:	d10e      	bne.n	8005fb0 <HAL_ADCEx_InjectedConfigChannel+0x30c>
 8005f92:	683b      	ldr	r3, [r7, #0]
 8005f94:	681b      	ldr	r3, [r3, #0]
 8005f96:	4a0f      	ldr	r2, [pc, #60]	; (8005fd4 <HAL_ADCEx_InjectedConfigChannel+0x330>)
 8005f98:	4293      	cmp	r3, r2
 8005f9a:	d003      	beq.n	8005fa4 <HAL_ADCEx_InjectedConfigChannel+0x300>
 8005f9c:	683b      	ldr	r3, [r7, #0]
 8005f9e:	681b      	ldr	r3, [r3, #0]
 8005fa0:	2b11      	cmp	r3, #17
 8005fa2:	d105      	bne.n	8005fb0 <HAL_ADCEx_InjectedConfigChannel+0x30c>
 8005fa4:	68fb      	ldr	r3, [r7, #12]
 8005fa6:	685b      	ldr	r3, [r3, #4]
 8005fa8:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8005fac:	68fb      	ldr	r3, [r7, #12]
 8005fae:	605a      	str	r2, [r3, #4]
 8005fb0:	687b      	ldr	r3, [r7, #4]
 8005fb2:	2200      	movs	r2, #0
 8005fb4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005fb8:	2300      	movs	r3, #0
 8005fba:	4618      	mov	r0, r3
 8005fbc:	3714      	adds	r7, #20
 8005fbe:	46bd      	mov	sp, r7
 8005fc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fc4:	4770      	bx	lr
 8005fc6:	bf00      	nop
 8005fc8:	000f0001 	.word	0x000f0001
 8005fcc:	40012300 	.word	0x40012300
 8005fd0:	40012000 	.word	0x40012000
 8005fd4:	10000012 	.word	0x10000012

08005fd8 <__NVIC_SetPriorityGrouping>:
 8005fd8:	b480      	push	{r7}
 8005fda:	b085      	sub	sp, #20
 8005fdc:	af00      	add	r7, sp, #0
 8005fde:	6078      	str	r0, [r7, #4]
 8005fe0:	687b      	ldr	r3, [r7, #4]
 8005fe2:	f003 0307 	and.w	r3, r3, #7
 8005fe6:	60fb      	str	r3, [r7, #12]
 8005fe8:	4b0c      	ldr	r3, [pc, #48]	; (800601c <__NVIC_SetPriorityGrouping+0x44>)
 8005fea:	68db      	ldr	r3, [r3, #12]
 8005fec:	60bb      	str	r3, [r7, #8]
 8005fee:	68ba      	ldr	r2, [r7, #8]
 8005ff0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8005ff4:	4013      	ands	r3, r2
 8005ff6:	60bb      	str	r3, [r7, #8]
 8005ff8:	68fb      	ldr	r3, [r7, #12]
 8005ffa:	021a      	lsls	r2, r3, #8
 8005ffc:	68bb      	ldr	r3, [r7, #8]
 8005ffe:	4313      	orrs	r3, r2
 8006000:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8006004:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006008:	60bb      	str	r3, [r7, #8]
 800600a:	4a04      	ldr	r2, [pc, #16]	; (800601c <__NVIC_SetPriorityGrouping+0x44>)
 800600c:	68bb      	ldr	r3, [r7, #8]
 800600e:	60d3      	str	r3, [r2, #12]
 8006010:	bf00      	nop
 8006012:	3714      	adds	r7, #20
 8006014:	46bd      	mov	sp, r7
 8006016:	f85d 7b04 	ldr.w	r7, [sp], #4
 800601a:	4770      	bx	lr
 800601c:	e000ed00 	.word	0xe000ed00

08006020 <__NVIC_GetPriorityGrouping>:
 8006020:	b480      	push	{r7}
 8006022:	af00      	add	r7, sp, #0
 8006024:	4b04      	ldr	r3, [pc, #16]	; (8006038 <__NVIC_GetPriorityGrouping+0x18>)
 8006026:	68db      	ldr	r3, [r3, #12]
 8006028:	0a1b      	lsrs	r3, r3, #8
 800602a:	f003 0307 	and.w	r3, r3, #7
 800602e:	4618      	mov	r0, r3
 8006030:	46bd      	mov	sp, r7
 8006032:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006036:	4770      	bx	lr
 8006038:	e000ed00 	.word	0xe000ed00

0800603c <__NVIC_EnableIRQ>:
 800603c:	b480      	push	{r7}
 800603e:	b083      	sub	sp, #12
 8006040:	af00      	add	r7, sp, #0
 8006042:	4603      	mov	r3, r0
 8006044:	71fb      	strb	r3, [r7, #7]
 8006046:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800604a:	2b00      	cmp	r3, #0
 800604c:	db0b      	blt.n	8006066 <__NVIC_EnableIRQ+0x2a>
 800604e:	79fb      	ldrb	r3, [r7, #7]
 8006050:	f003 021f 	and.w	r2, r3, #31
 8006054:	4907      	ldr	r1, [pc, #28]	; (8006074 <__NVIC_EnableIRQ+0x38>)
 8006056:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800605a:	095b      	lsrs	r3, r3, #5
 800605c:	2001      	movs	r0, #1
 800605e:	fa00 f202 	lsl.w	r2, r0, r2
 8006062:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8006066:	bf00      	nop
 8006068:	370c      	adds	r7, #12
 800606a:	46bd      	mov	sp, r7
 800606c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006070:	4770      	bx	lr
 8006072:	bf00      	nop
 8006074:	e000e100 	.word	0xe000e100

08006078 <__NVIC_DisableIRQ>:
 8006078:	b480      	push	{r7}
 800607a:	b083      	sub	sp, #12
 800607c:	af00      	add	r7, sp, #0
 800607e:	4603      	mov	r3, r0
 8006080:	71fb      	strb	r3, [r7, #7]
 8006082:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006086:	2b00      	cmp	r3, #0
 8006088:	db12      	blt.n	80060b0 <__NVIC_DisableIRQ+0x38>
 800608a:	79fb      	ldrb	r3, [r7, #7]
 800608c:	f003 021f 	and.w	r2, r3, #31
 8006090:	490a      	ldr	r1, [pc, #40]	; (80060bc <__NVIC_DisableIRQ+0x44>)
 8006092:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006096:	095b      	lsrs	r3, r3, #5
 8006098:	2001      	movs	r0, #1
 800609a:	fa00 f202 	lsl.w	r2, r0, r2
 800609e:	3320      	adds	r3, #32
 80060a0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80060a4:	f3bf 8f4f 	dsb	sy
 80060a8:	bf00      	nop
 80060aa:	f3bf 8f6f 	isb	sy
 80060ae:	bf00      	nop
 80060b0:	bf00      	nop
 80060b2:	370c      	adds	r7, #12
 80060b4:	46bd      	mov	sp, r7
 80060b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060ba:	4770      	bx	lr
 80060bc:	e000e100 	.word	0xe000e100

080060c0 <__NVIC_SetPriority>:
 80060c0:	b480      	push	{r7}
 80060c2:	b083      	sub	sp, #12
 80060c4:	af00      	add	r7, sp, #0
 80060c6:	4603      	mov	r3, r0
 80060c8:	6039      	str	r1, [r7, #0]
 80060ca:	71fb      	strb	r3, [r7, #7]
 80060cc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80060d0:	2b00      	cmp	r3, #0
 80060d2:	db0a      	blt.n	80060ea <__NVIC_SetPriority+0x2a>
 80060d4:	683b      	ldr	r3, [r7, #0]
 80060d6:	b2da      	uxtb	r2, r3
 80060d8:	490c      	ldr	r1, [pc, #48]	; (800610c <__NVIC_SetPriority+0x4c>)
 80060da:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80060de:	0112      	lsls	r2, r2, #4
 80060e0:	b2d2      	uxtb	r2, r2
 80060e2:	440b      	add	r3, r1
 80060e4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80060e8:	e00a      	b.n	8006100 <__NVIC_SetPriority+0x40>
 80060ea:	683b      	ldr	r3, [r7, #0]
 80060ec:	b2da      	uxtb	r2, r3
 80060ee:	4908      	ldr	r1, [pc, #32]	; (8006110 <__NVIC_SetPriority+0x50>)
 80060f0:	79fb      	ldrb	r3, [r7, #7]
 80060f2:	f003 030f 	and.w	r3, r3, #15
 80060f6:	3b04      	subs	r3, #4
 80060f8:	0112      	lsls	r2, r2, #4
 80060fa:	b2d2      	uxtb	r2, r2
 80060fc:	440b      	add	r3, r1
 80060fe:	761a      	strb	r2, [r3, #24]
 8006100:	bf00      	nop
 8006102:	370c      	adds	r7, #12
 8006104:	46bd      	mov	sp, r7
 8006106:	f85d 7b04 	ldr.w	r7, [sp], #4
 800610a:	4770      	bx	lr
 800610c:	e000e100 	.word	0xe000e100
 8006110:	e000ed00 	.word	0xe000ed00

08006114 <NVIC_EncodePriority>:
 8006114:	b480      	push	{r7}
 8006116:	b089      	sub	sp, #36	; 0x24
 8006118:	af00      	add	r7, sp, #0
 800611a:	60f8      	str	r0, [r7, #12]
 800611c:	60b9      	str	r1, [r7, #8]
 800611e:	607a      	str	r2, [r7, #4]
 8006120:	68fb      	ldr	r3, [r7, #12]
 8006122:	f003 0307 	and.w	r3, r3, #7
 8006126:	61fb      	str	r3, [r7, #28]
 8006128:	69fb      	ldr	r3, [r7, #28]
 800612a:	f1c3 0307 	rsb	r3, r3, #7
 800612e:	2b04      	cmp	r3, #4
 8006130:	bf28      	it	cs
 8006132:	2304      	movcs	r3, #4
 8006134:	61bb      	str	r3, [r7, #24]
 8006136:	69fb      	ldr	r3, [r7, #28]
 8006138:	3304      	adds	r3, #4
 800613a:	2b06      	cmp	r3, #6
 800613c:	d902      	bls.n	8006144 <NVIC_EncodePriority+0x30>
 800613e:	69fb      	ldr	r3, [r7, #28]
 8006140:	3b03      	subs	r3, #3
 8006142:	e000      	b.n	8006146 <NVIC_EncodePriority+0x32>
 8006144:	2300      	movs	r3, #0
 8006146:	617b      	str	r3, [r7, #20]
 8006148:	f04f 32ff 	mov.w	r2, #4294967295
 800614c:	69bb      	ldr	r3, [r7, #24]
 800614e:	fa02 f303 	lsl.w	r3, r2, r3
 8006152:	43da      	mvns	r2, r3
 8006154:	68bb      	ldr	r3, [r7, #8]
 8006156:	401a      	ands	r2, r3
 8006158:	697b      	ldr	r3, [r7, #20]
 800615a:	409a      	lsls	r2, r3
 800615c:	f04f 31ff 	mov.w	r1, #4294967295
 8006160:	697b      	ldr	r3, [r7, #20]
 8006162:	fa01 f303 	lsl.w	r3, r1, r3
 8006166:	43d9      	mvns	r1, r3
 8006168:	687b      	ldr	r3, [r7, #4]
 800616a:	400b      	ands	r3, r1
 800616c:	4313      	orrs	r3, r2
 800616e:	4618      	mov	r0, r3
 8006170:	3724      	adds	r7, #36	; 0x24
 8006172:	46bd      	mov	sp, r7
 8006174:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006178:	4770      	bx	lr
	...

0800617c <SysTick_Config>:
 800617c:	b580      	push	{r7, lr}
 800617e:	b082      	sub	sp, #8
 8006180:	af00      	add	r7, sp, #0
 8006182:	6078      	str	r0, [r7, #4]
 8006184:	687b      	ldr	r3, [r7, #4]
 8006186:	3b01      	subs	r3, #1
 8006188:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800618c:	d301      	bcc.n	8006192 <SysTick_Config+0x16>
 800618e:	2301      	movs	r3, #1
 8006190:	e00f      	b.n	80061b2 <SysTick_Config+0x36>
 8006192:	4a0a      	ldr	r2, [pc, #40]	; (80061bc <SysTick_Config+0x40>)
 8006194:	687b      	ldr	r3, [r7, #4]
 8006196:	3b01      	subs	r3, #1
 8006198:	6053      	str	r3, [r2, #4]
 800619a:	210f      	movs	r1, #15
 800619c:	f04f 30ff 	mov.w	r0, #4294967295
 80061a0:	f7ff ff8e 	bl	80060c0 <__NVIC_SetPriority>
 80061a4:	4b05      	ldr	r3, [pc, #20]	; (80061bc <SysTick_Config+0x40>)
 80061a6:	2200      	movs	r2, #0
 80061a8:	609a      	str	r2, [r3, #8]
 80061aa:	4b04      	ldr	r3, [pc, #16]	; (80061bc <SysTick_Config+0x40>)
 80061ac:	2207      	movs	r2, #7
 80061ae:	601a      	str	r2, [r3, #0]
 80061b0:	2300      	movs	r3, #0
 80061b2:	4618      	mov	r0, r3
 80061b4:	3708      	adds	r7, #8
 80061b6:	46bd      	mov	sp, r7
 80061b8:	bd80      	pop	{r7, pc}
 80061ba:	bf00      	nop
 80061bc:	e000e010 	.word	0xe000e010

080061c0 <HAL_NVIC_SetPriorityGrouping>:
 80061c0:	b580      	push	{r7, lr}
 80061c2:	b082      	sub	sp, #8
 80061c4:	af00      	add	r7, sp, #0
 80061c6:	6078      	str	r0, [r7, #4]
 80061c8:	6878      	ldr	r0, [r7, #4]
 80061ca:	f7ff ff05 	bl	8005fd8 <__NVIC_SetPriorityGrouping>
 80061ce:	bf00      	nop
 80061d0:	3708      	adds	r7, #8
 80061d2:	46bd      	mov	sp, r7
 80061d4:	bd80      	pop	{r7, pc}

080061d6 <HAL_NVIC_SetPriority>:
 80061d6:	b580      	push	{r7, lr}
 80061d8:	b086      	sub	sp, #24
 80061da:	af00      	add	r7, sp, #0
 80061dc:	4603      	mov	r3, r0
 80061de:	60b9      	str	r1, [r7, #8]
 80061e0:	607a      	str	r2, [r7, #4]
 80061e2:	73fb      	strb	r3, [r7, #15]
 80061e4:	2300      	movs	r3, #0
 80061e6:	617b      	str	r3, [r7, #20]
 80061e8:	f7ff ff1a 	bl	8006020 <__NVIC_GetPriorityGrouping>
 80061ec:	6178      	str	r0, [r7, #20]
 80061ee:	687a      	ldr	r2, [r7, #4]
 80061f0:	68b9      	ldr	r1, [r7, #8]
 80061f2:	6978      	ldr	r0, [r7, #20]
 80061f4:	f7ff ff8e 	bl	8006114 <NVIC_EncodePriority>
 80061f8:	4602      	mov	r2, r0
 80061fa:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80061fe:	4611      	mov	r1, r2
 8006200:	4618      	mov	r0, r3
 8006202:	f7ff ff5d 	bl	80060c0 <__NVIC_SetPriority>
 8006206:	bf00      	nop
 8006208:	3718      	adds	r7, #24
 800620a:	46bd      	mov	sp, r7
 800620c:	bd80      	pop	{r7, pc}

0800620e <HAL_NVIC_EnableIRQ>:
 800620e:	b580      	push	{r7, lr}
 8006210:	b082      	sub	sp, #8
 8006212:	af00      	add	r7, sp, #0
 8006214:	4603      	mov	r3, r0
 8006216:	71fb      	strb	r3, [r7, #7]
 8006218:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800621c:	4618      	mov	r0, r3
 800621e:	f7ff ff0d 	bl	800603c <__NVIC_EnableIRQ>
 8006222:	bf00      	nop
 8006224:	3708      	adds	r7, #8
 8006226:	46bd      	mov	sp, r7
 8006228:	bd80      	pop	{r7, pc}

0800622a <HAL_NVIC_DisableIRQ>:
 800622a:	b580      	push	{r7, lr}
 800622c:	b082      	sub	sp, #8
 800622e:	af00      	add	r7, sp, #0
 8006230:	4603      	mov	r3, r0
 8006232:	71fb      	strb	r3, [r7, #7]
 8006234:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006238:	4618      	mov	r0, r3
 800623a:	f7ff ff1d 	bl	8006078 <__NVIC_DisableIRQ>
 800623e:	bf00      	nop
 8006240:	3708      	adds	r7, #8
 8006242:	46bd      	mov	sp, r7
 8006244:	bd80      	pop	{r7, pc}

08006246 <HAL_SYSTICK_Config>:
 8006246:	b580      	push	{r7, lr}
 8006248:	b082      	sub	sp, #8
 800624a:	af00      	add	r7, sp, #0
 800624c:	6078      	str	r0, [r7, #4]
 800624e:	6878      	ldr	r0, [r7, #4]
 8006250:	f7ff ff94 	bl	800617c <SysTick_Config>
 8006254:	4603      	mov	r3, r0
 8006256:	4618      	mov	r0, r3
 8006258:	3708      	adds	r7, #8
 800625a:	46bd      	mov	sp, r7
 800625c:	bd80      	pop	{r7, pc}
	...

08006260 <HAL_DMA_Init>:
 8006260:	b580      	push	{r7, lr}
 8006262:	b086      	sub	sp, #24
 8006264:	af00      	add	r7, sp, #0
 8006266:	6078      	str	r0, [r7, #4]
 8006268:	2300      	movs	r3, #0
 800626a:	617b      	str	r3, [r7, #20]
 800626c:	f7ff f90e 	bl	800548c <HAL_GetTick>
 8006270:	6138      	str	r0, [r7, #16]
 8006272:	687b      	ldr	r3, [r7, #4]
 8006274:	2b00      	cmp	r3, #0
 8006276:	d101      	bne.n	800627c <HAL_DMA_Init+0x1c>
 8006278:	2301      	movs	r3, #1
 800627a:	e099      	b.n	80063b0 <HAL_DMA_Init+0x150>
 800627c:	687b      	ldr	r3, [r7, #4]
 800627e:	2202      	movs	r2, #2
 8006280:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8006284:	687b      	ldr	r3, [r7, #4]
 8006286:	2200      	movs	r2, #0
 8006288:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800628c:	687b      	ldr	r3, [r7, #4]
 800628e:	681b      	ldr	r3, [r3, #0]
 8006290:	681a      	ldr	r2, [r3, #0]
 8006292:	687b      	ldr	r3, [r7, #4]
 8006294:	681b      	ldr	r3, [r3, #0]
 8006296:	f022 0201 	bic.w	r2, r2, #1
 800629a:	601a      	str	r2, [r3, #0]
 800629c:	e00f      	b.n	80062be <HAL_DMA_Init+0x5e>
 800629e:	f7ff f8f5 	bl	800548c <HAL_GetTick>
 80062a2:	4602      	mov	r2, r0
 80062a4:	693b      	ldr	r3, [r7, #16]
 80062a6:	1ad3      	subs	r3, r2, r3
 80062a8:	2b05      	cmp	r3, #5
 80062aa:	d908      	bls.n	80062be <HAL_DMA_Init+0x5e>
 80062ac:	687b      	ldr	r3, [r7, #4]
 80062ae:	2220      	movs	r2, #32
 80062b0:	655a      	str	r2, [r3, #84]	; 0x54
 80062b2:	687b      	ldr	r3, [r7, #4]
 80062b4:	2203      	movs	r2, #3
 80062b6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80062ba:	2303      	movs	r3, #3
 80062bc:	e078      	b.n	80063b0 <HAL_DMA_Init+0x150>
 80062be:	687b      	ldr	r3, [r7, #4]
 80062c0:	681b      	ldr	r3, [r3, #0]
 80062c2:	681b      	ldr	r3, [r3, #0]
 80062c4:	f003 0301 	and.w	r3, r3, #1
 80062c8:	2b00      	cmp	r3, #0
 80062ca:	d1e8      	bne.n	800629e <HAL_DMA_Init+0x3e>
 80062cc:	687b      	ldr	r3, [r7, #4]
 80062ce:	681b      	ldr	r3, [r3, #0]
 80062d0:	681b      	ldr	r3, [r3, #0]
 80062d2:	617b      	str	r3, [r7, #20]
 80062d4:	697a      	ldr	r2, [r7, #20]
 80062d6:	4b38      	ldr	r3, [pc, #224]	; (80063b8 <HAL_DMA_Init+0x158>)
 80062d8:	4013      	ands	r3, r2
 80062da:	617b      	str	r3, [r7, #20]
 80062dc:	687b      	ldr	r3, [r7, #4]
 80062de:	685a      	ldr	r2, [r3, #4]
 80062e0:	687b      	ldr	r3, [r7, #4]
 80062e2:	689b      	ldr	r3, [r3, #8]
 80062e4:	431a      	orrs	r2, r3
 80062e6:	687b      	ldr	r3, [r7, #4]
 80062e8:	68db      	ldr	r3, [r3, #12]
 80062ea:	431a      	orrs	r2, r3
 80062ec:	687b      	ldr	r3, [r7, #4]
 80062ee:	691b      	ldr	r3, [r3, #16]
 80062f0:	431a      	orrs	r2, r3
 80062f2:	687b      	ldr	r3, [r7, #4]
 80062f4:	695b      	ldr	r3, [r3, #20]
 80062f6:	431a      	orrs	r2, r3
 80062f8:	687b      	ldr	r3, [r7, #4]
 80062fa:	699b      	ldr	r3, [r3, #24]
 80062fc:	431a      	orrs	r2, r3
 80062fe:	687b      	ldr	r3, [r7, #4]
 8006300:	69db      	ldr	r3, [r3, #28]
 8006302:	431a      	orrs	r2, r3
 8006304:	687b      	ldr	r3, [r7, #4]
 8006306:	6a1b      	ldr	r3, [r3, #32]
 8006308:	4313      	orrs	r3, r2
 800630a:	697a      	ldr	r2, [r7, #20]
 800630c:	4313      	orrs	r3, r2
 800630e:	617b      	str	r3, [r7, #20]
 8006310:	687b      	ldr	r3, [r7, #4]
 8006312:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006314:	2b04      	cmp	r3, #4
 8006316:	d107      	bne.n	8006328 <HAL_DMA_Init+0xc8>
 8006318:	687b      	ldr	r3, [r7, #4]
 800631a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800631c:	687b      	ldr	r3, [r7, #4]
 800631e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006320:	4313      	orrs	r3, r2
 8006322:	697a      	ldr	r2, [r7, #20]
 8006324:	4313      	orrs	r3, r2
 8006326:	617b      	str	r3, [r7, #20]
 8006328:	687b      	ldr	r3, [r7, #4]
 800632a:	681b      	ldr	r3, [r3, #0]
 800632c:	697a      	ldr	r2, [r7, #20]
 800632e:	601a      	str	r2, [r3, #0]
 8006330:	687b      	ldr	r3, [r7, #4]
 8006332:	681b      	ldr	r3, [r3, #0]
 8006334:	695b      	ldr	r3, [r3, #20]
 8006336:	617b      	str	r3, [r7, #20]
 8006338:	697b      	ldr	r3, [r7, #20]
 800633a:	f023 0307 	bic.w	r3, r3, #7
 800633e:	617b      	str	r3, [r7, #20]
 8006340:	687b      	ldr	r3, [r7, #4]
 8006342:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006344:	697a      	ldr	r2, [r7, #20]
 8006346:	4313      	orrs	r3, r2
 8006348:	617b      	str	r3, [r7, #20]
 800634a:	687b      	ldr	r3, [r7, #4]
 800634c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800634e:	2b04      	cmp	r3, #4
 8006350:	d117      	bne.n	8006382 <HAL_DMA_Init+0x122>
 8006352:	687b      	ldr	r3, [r7, #4]
 8006354:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006356:	697a      	ldr	r2, [r7, #20]
 8006358:	4313      	orrs	r3, r2
 800635a:	617b      	str	r3, [r7, #20]
 800635c:	687b      	ldr	r3, [r7, #4]
 800635e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006360:	2b00      	cmp	r3, #0
 8006362:	d00e      	beq.n	8006382 <HAL_DMA_Init+0x122>
 8006364:	6878      	ldr	r0, [r7, #4]
 8006366:	f000 fb01 	bl	800696c <DMA_CheckFifoParam>
 800636a:	4603      	mov	r3, r0
 800636c:	2b00      	cmp	r3, #0
 800636e:	d008      	beq.n	8006382 <HAL_DMA_Init+0x122>
 8006370:	687b      	ldr	r3, [r7, #4]
 8006372:	2240      	movs	r2, #64	; 0x40
 8006374:	655a      	str	r2, [r3, #84]	; 0x54
 8006376:	687b      	ldr	r3, [r7, #4]
 8006378:	2201      	movs	r2, #1
 800637a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800637e:	2301      	movs	r3, #1
 8006380:	e016      	b.n	80063b0 <HAL_DMA_Init+0x150>
 8006382:	687b      	ldr	r3, [r7, #4]
 8006384:	681b      	ldr	r3, [r3, #0]
 8006386:	697a      	ldr	r2, [r7, #20]
 8006388:	615a      	str	r2, [r3, #20]
 800638a:	6878      	ldr	r0, [r7, #4]
 800638c:	f000 fab8 	bl	8006900 <DMA_CalcBaseAndBitshift>
 8006390:	4603      	mov	r3, r0
 8006392:	60fb      	str	r3, [r7, #12]
 8006394:	687b      	ldr	r3, [r7, #4]
 8006396:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8006398:	223f      	movs	r2, #63	; 0x3f
 800639a:	409a      	lsls	r2, r3
 800639c:	68fb      	ldr	r3, [r7, #12]
 800639e:	609a      	str	r2, [r3, #8]
 80063a0:	687b      	ldr	r3, [r7, #4]
 80063a2:	2200      	movs	r2, #0
 80063a4:	655a      	str	r2, [r3, #84]	; 0x54
 80063a6:	687b      	ldr	r3, [r7, #4]
 80063a8:	2201      	movs	r2, #1
 80063aa:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80063ae:	2300      	movs	r3, #0
 80063b0:	4618      	mov	r0, r3
 80063b2:	3718      	adds	r7, #24
 80063b4:	46bd      	mov	sp, r7
 80063b6:	bd80      	pop	{r7, pc}
 80063b8:	f010803f 	.word	0xf010803f

080063bc <HAL_DMA_Start_IT>:
 80063bc:	b580      	push	{r7, lr}
 80063be:	b086      	sub	sp, #24
 80063c0:	af00      	add	r7, sp, #0
 80063c2:	60f8      	str	r0, [r7, #12]
 80063c4:	60b9      	str	r1, [r7, #8]
 80063c6:	607a      	str	r2, [r7, #4]
 80063c8:	603b      	str	r3, [r7, #0]
 80063ca:	2300      	movs	r3, #0
 80063cc:	75fb      	strb	r3, [r7, #23]
 80063ce:	68fb      	ldr	r3, [r7, #12]
 80063d0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80063d2:	613b      	str	r3, [r7, #16]
 80063d4:	68fb      	ldr	r3, [r7, #12]
 80063d6:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 80063da:	2b01      	cmp	r3, #1
 80063dc:	d101      	bne.n	80063e2 <HAL_DMA_Start_IT+0x26>
 80063de:	2302      	movs	r3, #2
 80063e0:	e040      	b.n	8006464 <HAL_DMA_Start_IT+0xa8>
 80063e2:	68fb      	ldr	r3, [r7, #12]
 80063e4:	2201      	movs	r2, #1
 80063e6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80063ea:	68fb      	ldr	r3, [r7, #12]
 80063ec:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80063f0:	b2db      	uxtb	r3, r3
 80063f2:	2b01      	cmp	r3, #1
 80063f4:	d12f      	bne.n	8006456 <HAL_DMA_Start_IT+0x9a>
 80063f6:	68fb      	ldr	r3, [r7, #12]
 80063f8:	2202      	movs	r2, #2
 80063fa:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80063fe:	68fb      	ldr	r3, [r7, #12]
 8006400:	2200      	movs	r2, #0
 8006402:	655a      	str	r2, [r3, #84]	; 0x54
 8006404:	683b      	ldr	r3, [r7, #0]
 8006406:	687a      	ldr	r2, [r7, #4]
 8006408:	68b9      	ldr	r1, [r7, #8]
 800640a:	68f8      	ldr	r0, [r7, #12]
 800640c:	f000 fa4a 	bl	80068a4 <DMA_SetConfig>
 8006410:	68fb      	ldr	r3, [r7, #12]
 8006412:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8006414:	223f      	movs	r2, #63	; 0x3f
 8006416:	409a      	lsls	r2, r3
 8006418:	693b      	ldr	r3, [r7, #16]
 800641a:	609a      	str	r2, [r3, #8]
 800641c:	68fb      	ldr	r3, [r7, #12]
 800641e:	681b      	ldr	r3, [r3, #0]
 8006420:	681a      	ldr	r2, [r3, #0]
 8006422:	68fb      	ldr	r3, [r7, #12]
 8006424:	681b      	ldr	r3, [r3, #0]
 8006426:	f042 0216 	orr.w	r2, r2, #22
 800642a:	601a      	str	r2, [r3, #0]
 800642c:	68fb      	ldr	r3, [r7, #12]
 800642e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006430:	2b00      	cmp	r3, #0
 8006432:	d007      	beq.n	8006444 <HAL_DMA_Start_IT+0x88>
 8006434:	68fb      	ldr	r3, [r7, #12]
 8006436:	681b      	ldr	r3, [r3, #0]
 8006438:	681a      	ldr	r2, [r3, #0]
 800643a:	68fb      	ldr	r3, [r7, #12]
 800643c:	681b      	ldr	r3, [r3, #0]
 800643e:	f042 0208 	orr.w	r2, r2, #8
 8006442:	601a      	str	r2, [r3, #0]
 8006444:	68fb      	ldr	r3, [r7, #12]
 8006446:	681b      	ldr	r3, [r3, #0]
 8006448:	681a      	ldr	r2, [r3, #0]
 800644a:	68fb      	ldr	r3, [r7, #12]
 800644c:	681b      	ldr	r3, [r3, #0]
 800644e:	f042 0201 	orr.w	r2, r2, #1
 8006452:	601a      	str	r2, [r3, #0]
 8006454:	e005      	b.n	8006462 <HAL_DMA_Start_IT+0xa6>
 8006456:	68fb      	ldr	r3, [r7, #12]
 8006458:	2200      	movs	r2, #0
 800645a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800645e:	2302      	movs	r3, #2
 8006460:	75fb      	strb	r3, [r7, #23]
 8006462:	7dfb      	ldrb	r3, [r7, #23]
 8006464:	4618      	mov	r0, r3
 8006466:	3718      	adds	r7, #24
 8006468:	46bd      	mov	sp, r7
 800646a:	bd80      	pop	{r7, pc}

0800646c <HAL_DMA_Abort>:
 800646c:	b580      	push	{r7, lr}
 800646e:	b084      	sub	sp, #16
 8006470:	af00      	add	r7, sp, #0
 8006472:	6078      	str	r0, [r7, #4]
 8006474:	687b      	ldr	r3, [r7, #4]
 8006476:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006478:	60fb      	str	r3, [r7, #12]
 800647a:	f7ff f807 	bl	800548c <HAL_GetTick>
 800647e:	60b8      	str	r0, [r7, #8]
 8006480:	687b      	ldr	r3, [r7, #4]
 8006482:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8006486:	b2db      	uxtb	r3, r3
 8006488:	2b02      	cmp	r3, #2
 800648a:	d008      	beq.n	800649e <HAL_DMA_Abort+0x32>
 800648c:	687b      	ldr	r3, [r7, #4]
 800648e:	2280      	movs	r2, #128	; 0x80
 8006490:	655a      	str	r2, [r3, #84]	; 0x54
 8006492:	687b      	ldr	r3, [r7, #4]
 8006494:	2200      	movs	r2, #0
 8006496:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800649a:	2301      	movs	r3, #1
 800649c:	e052      	b.n	8006544 <HAL_DMA_Abort+0xd8>
 800649e:	687b      	ldr	r3, [r7, #4]
 80064a0:	681b      	ldr	r3, [r3, #0]
 80064a2:	681a      	ldr	r2, [r3, #0]
 80064a4:	687b      	ldr	r3, [r7, #4]
 80064a6:	681b      	ldr	r3, [r3, #0]
 80064a8:	f022 0216 	bic.w	r2, r2, #22
 80064ac:	601a      	str	r2, [r3, #0]
 80064ae:	687b      	ldr	r3, [r7, #4]
 80064b0:	681b      	ldr	r3, [r3, #0]
 80064b2:	695a      	ldr	r2, [r3, #20]
 80064b4:	687b      	ldr	r3, [r7, #4]
 80064b6:	681b      	ldr	r3, [r3, #0]
 80064b8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80064bc:	615a      	str	r2, [r3, #20]
 80064be:	687b      	ldr	r3, [r7, #4]
 80064c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80064c2:	2b00      	cmp	r3, #0
 80064c4:	d103      	bne.n	80064ce <HAL_DMA_Abort+0x62>
 80064c6:	687b      	ldr	r3, [r7, #4]
 80064c8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80064ca:	2b00      	cmp	r3, #0
 80064cc:	d007      	beq.n	80064de <HAL_DMA_Abort+0x72>
 80064ce:	687b      	ldr	r3, [r7, #4]
 80064d0:	681b      	ldr	r3, [r3, #0]
 80064d2:	681a      	ldr	r2, [r3, #0]
 80064d4:	687b      	ldr	r3, [r7, #4]
 80064d6:	681b      	ldr	r3, [r3, #0]
 80064d8:	f022 0208 	bic.w	r2, r2, #8
 80064dc:	601a      	str	r2, [r3, #0]
 80064de:	687b      	ldr	r3, [r7, #4]
 80064e0:	681b      	ldr	r3, [r3, #0]
 80064e2:	681a      	ldr	r2, [r3, #0]
 80064e4:	687b      	ldr	r3, [r7, #4]
 80064e6:	681b      	ldr	r3, [r3, #0]
 80064e8:	f022 0201 	bic.w	r2, r2, #1
 80064ec:	601a      	str	r2, [r3, #0]
 80064ee:	e013      	b.n	8006518 <HAL_DMA_Abort+0xac>
 80064f0:	f7fe ffcc 	bl	800548c <HAL_GetTick>
 80064f4:	4602      	mov	r2, r0
 80064f6:	68bb      	ldr	r3, [r7, #8]
 80064f8:	1ad3      	subs	r3, r2, r3
 80064fa:	2b05      	cmp	r3, #5
 80064fc:	d90c      	bls.n	8006518 <HAL_DMA_Abort+0xac>
 80064fe:	687b      	ldr	r3, [r7, #4]
 8006500:	2220      	movs	r2, #32
 8006502:	655a      	str	r2, [r3, #84]	; 0x54
 8006504:	687b      	ldr	r3, [r7, #4]
 8006506:	2203      	movs	r2, #3
 8006508:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800650c:	687b      	ldr	r3, [r7, #4]
 800650e:	2200      	movs	r2, #0
 8006510:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006514:	2303      	movs	r3, #3
 8006516:	e015      	b.n	8006544 <HAL_DMA_Abort+0xd8>
 8006518:	687b      	ldr	r3, [r7, #4]
 800651a:	681b      	ldr	r3, [r3, #0]
 800651c:	681b      	ldr	r3, [r3, #0]
 800651e:	f003 0301 	and.w	r3, r3, #1
 8006522:	2b00      	cmp	r3, #0
 8006524:	d1e4      	bne.n	80064f0 <HAL_DMA_Abort+0x84>
 8006526:	687b      	ldr	r3, [r7, #4]
 8006528:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800652a:	223f      	movs	r2, #63	; 0x3f
 800652c:	409a      	lsls	r2, r3
 800652e:	68fb      	ldr	r3, [r7, #12]
 8006530:	609a      	str	r2, [r3, #8]
 8006532:	687b      	ldr	r3, [r7, #4]
 8006534:	2201      	movs	r2, #1
 8006536:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800653a:	687b      	ldr	r3, [r7, #4]
 800653c:	2200      	movs	r2, #0
 800653e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006542:	2300      	movs	r3, #0
 8006544:	4618      	mov	r0, r3
 8006546:	3710      	adds	r7, #16
 8006548:	46bd      	mov	sp, r7
 800654a:	bd80      	pop	{r7, pc}

0800654c <HAL_DMA_Abort_IT>:
 800654c:	b480      	push	{r7}
 800654e:	b083      	sub	sp, #12
 8006550:	af00      	add	r7, sp, #0
 8006552:	6078      	str	r0, [r7, #4]
 8006554:	687b      	ldr	r3, [r7, #4]
 8006556:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800655a:	b2db      	uxtb	r3, r3
 800655c:	2b02      	cmp	r3, #2
 800655e:	d004      	beq.n	800656a <HAL_DMA_Abort_IT+0x1e>
 8006560:	687b      	ldr	r3, [r7, #4]
 8006562:	2280      	movs	r2, #128	; 0x80
 8006564:	655a      	str	r2, [r3, #84]	; 0x54
 8006566:	2301      	movs	r3, #1
 8006568:	e00c      	b.n	8006584 <HAL_DMA_Abort_IT+0x38>
 800656a:	687b      	ldr	r3, [r7, #4]
 800656c:	2205      	movs	r2, #5
 800656e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8006572:	687b      	ldr	r3, [r7, #4]
 8006574:	681b      	ldr	r3, [r3, #0]
 8006576:	681a      	ldr	r2, [r3, #0]
 8006578:	687b      	ldr	r3, [r7, #4]
 800657a:	681b      	ldr	r3, [r3, #0]
 800657c:	f022 0201 	bic.w	r2, r2, #1
 8006580:	601a      	str	r2, [r3, #0]
 8006582:	2300      	movs	r3, #0
 8006584:	4618      	mov	r0, r3
 8006586:	370c      	adds	r7, #12
 8006588:	46bd      	mov	sp, r7
 800658a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800658e:	4770      	bx	lr

08006590 <HAL_DMA_IRQHandler>:
 8006590:	b580      	push	{r7, lr}
 8006592:	b086      	sub	sp, #24
 8006594:	af00      	add	r7, sp, #0
 8006596:	6078      	str	r0, [r7, #4]
 8006598:	2300      	movs	r3, #0
 800659a:	60bb      	str	r3, [r7, #8]
 800659c:	4b8e      	ldr	r3, [pc, #568]	; (80067d8 <HAL_DMA_IRQHandler+0x248>)
 800659e:	681b      	ldr	r3, [r3, #0]
 80065a0:	4a8e      	ldr	r2, [pc, #568]	; (80067dc <HAL_DMA_IRQHandler+0x24c>)
 80065a2:	fba2 2303 	umull	r2, r3, r2, r3
 80065a6:	0a9b      	lsrs	r3, r3, #10
 80065a8:	617b      	str	r3, [r7, #20]
 80065aa:	687b      	ldr	r3, [r7, #4]
 80065ac:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80065ae:	613b      	str	r3, [r7, #16]
 80065b0:	693b      	ldr	r3, [r7, #16]
 80065b2:	681b      	ldr	r3, [r3, #0]
 80065b4:	60fb      	str	r3, [r7, #12]
 80065b6:	687b      	ldr	r3, [r7, #4]
 80065b8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80065ba:	2208      	movs	r2, #8
 80065bc:	409a      	lsls	r2, r3
 80065be:	68fb      	ldr	r3, [r7, #12]
 80065c0:	4013      	ands	r3, r2
 80065c2:	2b00      	cmp	r3, #0
 80065c4:	d01a      	beq.n	80065fc <HAL_DMA_IRQHandler+0x6c>
 80065c6:	687b      	ldr	r3, [r7, #4]
 80065c8:	681b      	ldr	r3, [r3, #0]
 80065ca:	681b      	ldr	r3, [r3, #0]
 80065cc:	f003 0304 	and.w	r3, r3, #4
 80065d0:	2b00      	cmp	r3, #0
 80065d2:	d013      	beq.n	80065fc <HAL_DMA_IRQHandler+0x6c>
 80065d4:	687b      	ldr	r3, [r7, #4]
 80065d6:	681b      	ldr	r3, [r3, #0]
 80065d8:	681a      	ldr	r2, [r3, #0]
 80065da:	687b      	ldr	r3, [r7, #4]
 80065dc:	681b      	ldr	r3, [r3, #0]
 80065de:	f022 0204 	bic.w	r2, r2, #4
 80065e2:	601a      	str	r2, [r3, #0]
 80065e4:	687b      	ldr	r3, [r7, #4]
 80065e6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80065e8:	2208      	movs	r2, #8
 80065ea:	409a      	lsls	r2, r3
 80065ec:	693b      	ldr	r3, [r7, #16]
 80065ee:	609a      	str	r2, [r3, #8]
 80065f0:	687b      	ldr	r3, [r7, #4]
 80065f2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80065f4:	f043 0201 	orr.w	r2, r3, #1
 80065f8:	687b      	ldr	r3, [r7, #4]
 80065fa:	655a      	str	r2, [r3, #84]	; 0x54
 80065fc:	687b      	ldr	r3, [r7, #4]
 80065fe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8006600:	2201      	movs	r2, #1
 8006602:	409a      	lsls	r2, r3
 8006604:	68fb      	ldr	r3, [r7, #12]
 8006606:	4013      	ands	r3, r2
 8006608:	2b00      	cmp	r3, #0
 800660a:	d012      	beq.n	8006632 <HAL_DMA_IRQHandler+0xa2>
 800660c:	687b      	ldr	r3, [r7, #4]
 800660e:	681b      	ldr	r3, [r3, #0]
 8006610:	695b      	ldr	r3, [r3, #20]
 8006612:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006616:	2b00      	cmp	r3, #0
 8006618:	d00b      	beq.n	8006632 <HAL_DMA_IRQHandler+0xa2>
 800661a:	687b      	ldr	r3, [r7, #4]
 800661c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800661e:	2201      	movs	r2, #1
 8006620:	409a      	lsls	r2, r3
 8006622:	693b      	ldr	r3, [r7, #16]
 8006624:	609a      	str	r2, [r3, #8]
 8006626:	687b      	ldr	r3, [r7, #4]
 8006628:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800662a:	f043 0202 	orr.w	r2, r3, #2
 800662e:	687b      	ldr	r3, [r7, #4]
 8006630:	655a      	str	r2, [r3, #84]	; 0x54
 8006632:	687b      	ldr	r3, [r7, #4]
 8006634:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8006636:	2204      	movs	r2, #4
 8006638:	409a      	lsls	r2, r3
 800663a:	68fb      	ldr	r3, [r7, #12]
 800663c:	4013      	ands	r3, r2
 800663e:	2b00      	cmp	r3, #0
 8006640:	d012      	beq.n	8006668 <HAL_DMA_IRQHandler+0xd8>
 8006642:	687b      	ldr	r3, [r7, #4]
 8006644:	681b      	ldr	r3, [r3, #0]
 8006646:	681b      	ldr	r3, [r3, #0]
 8006648:	f003 0302 	and.w	r3, r3, #2
 800664c:	2b00      	cmp	r3, #0
 800664e:	d00b      	beq.n	8006668 <HAL_DMA_IRQHandler+0xd8>
 8006650:	687b      	ldr	r3, [r7, #4]
 8006652:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8006654:	2204      	movs	r2, #4
 8006656:	409a      	lsls	r2, r3
 8006658:	693b      	ldr	r3, [r7, #16]
 800665a:	609a      	str	r2, [r3, #8]
 800665c:	687b      	ldr	r3, [r7, #4]
 800665e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006660:	f043 0204 	orr.w	r2, r3, #4
 8006664:	687b      	ldr	r3, [r7, #4]
 8006666:	655a      	str	r2, [r3, #84]	; 0x54
 8006668:	687b      	ldr	r3, [r7, #4]
 800666a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800666c:	2210      	movs	r2, #16
 800666e:	409a      	lsls	r2, r3
 8006670:	68fb      	ldr	r3, [r7, #12]
 8006672:	4013      	ands	r3, r2
 8006674:	2b00      	cmp	r3, #0
 8006676:	d043      	beq.n	8006700 <HAL_DMA_IRQHandler+0x170>
 8006678:	687b      	ldr	r3, [r7, #4]
 800667a:	681b      	ldr	r3, [r3, #0]
 800667c:	681b      	ldr	r3, [r3, #0]
 800667e:	f003 0308 	and.w	r3, r3, #8
 8006682:	2b00      	cmp	r3, #0
 8006684:	d03c      	beq.n	8006700 <HAL_DMA_IRQHandler+0x170>
 8006686:	687b      	ldr	r3, [r7, #4]
 8006688:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800668a:	2210      	movs	r2, #16
 800668c:	409a      	lsls	r2, r3
 800668e:	693b      	ldr	r3, [r7, #16]
 8006690:	609a      	str	r2, [r3, #8]
 8006692:	687b      	ldr	r3, [r7, #4]
 8006694:	681b      	ldr	r3, [r3, #0]
 8006696:	681b      	ldr	r3, [r3, #0]
 8006698:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800669c:	2b00      	cmp	r3, #0
 800669e:	d018      	beq.n	80066d2 <HAL_DMA_IRQHandler+0x142>
 80066a0:	687b      	ldr	r3, [r7, #4]
 80066a2:	681b      	ldr	r3, [r3, #0]
 80066a4:	681b      	ldr	r3, [r3, #0]
 80066a6:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80066aa:	2b00      	cmp	r3, #0
 80066ac:	d108      	bne.n	80066c0 <HAL_DMA_IRQHandler+0x130>
 80066ae:	687b      	ldr	r3, [r7, #4]
 80066b0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80066b2:	2b00      	cmp	r3, #0
 80066b4:	d024      	beq.n	8006700 <HAL_DMA_IRQHandler+0x170>
 80066b6:	687b      	ldr	r3, [r7, #4]
 80066b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80066ba:	6878      	ldr	r0, [r7, #4]
 80066bc:	4798      	blx	r3
 80066be:	e01f      	b.n	8006700 <HAL_DMA_IRQHandler+0x170>
 80066c0:	687b      	ldr	r3, [r7, #4]
 80066c2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80066c4:	2b00      	cmp	r3, #0
 80066c6:	d01b      	beq.n	8006700 <HAL_DMA_IRQHandler+0x170>
 80066c8:	687b      	ldr	r3, [r7, #4]
 80066ca:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80066cc:	6878      	ldr	r0, [r7, #4]
 80066ce:	4798      	blx	r3
 80066d0:	e016      	b.n	8006700 <HAL_DMA_IRQHandler+0x170>
 80066d2:	687b      	ldr	r3, [r7, #4]
 80066d4:	681b      	ldr	r3, [r3, #0]
 80066d6:	681b      	ldr	r3, [r3, #0]
 80066d8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80066dc:	2b00      	cmp	r3, #0
 80066de:	d107      	bne.n	80066f0 <HAL_DMA_IRQHandler+0x160>
 80066e0:	687b      	ldr	r3, [r7, #4]
 80066e2:	681b      	ldr	r3, [r3, #0]
 80066e4:	681a      	ldr	r2, [r3, #0]
 80066e6:	687b      	ldr	r3, [r7, #4]
 80066e8:	681b      	ldr	r3, [r3, #0]
 80066ea:	f022 0208 	bic.w	r2, r2, #8
 80066ee:	601a      	str	r2, [r3, #0]
 80066f0:	687b      	ldr	r3, [r7, #4]
 80066f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80066f4:	2b00      	cmp	r3, #0
 80066f6:	d003      	beq.n	8006700 <HAL_DMA_IRQHandler+0x170>
 80066f8:	687b      	ldr	r3, [r7, #4]
 80066fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80066fc:	6878      	ldr	r0, [r7, #4]
 80066fe:	4798      	blx	r3
 8006700:	687b      	ldr	r3, [r7, #4]
 8006702:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8006704:	2220      	movs	r2, #32
 8006706:	409a      	lsls	r2, r3
 8006708:	68fb      	ldr	r3, [r7, #12]
 800670a:	4013      	ands	r3, r2
 800670c:	2b00      	cmp	r3, #0
 800670e:	f000 808f 	beq.w	8006830 <HAL_DMA_IRQHandler+0x2a0>
 8006712:	687b      	ldr	r3, [r7, #4]
 8006714:	681b      	ldr	r3, [r3, #0]
 8006716:	681b      	ldr	r3, [r3, #0]
 8006718:	f003 0310 	and.w	r3, r3, #16
 800671c:	2b00      	cmp	r3, #0
 800671e:	f000 8087 	beq.w	8006830 <HAL_DMA_IRQHandler+0x2a0>
 8006722:	687b      	ldr	r3, [r7, #4]
 8006724:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8006726:	2220      	movs	r2, #32
 8006728:	409a      	lsls	r2, r3
 800672a:	693b      	ldr	r3, [r7, #16]
 800672c:	609a      	str	r2, [r3, #8]
 800672e:	687b      	ldr	r3, [r7, #4]
 8006730:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8006734:	b2db      	uxtb	r3, r3
 8006736:	2b05      	cmp	r3, #5
 8006738:	d136      	bne.n	80067a8 <HAL_DMA_IRQHandler+0x218>
 800673a:	687b      	ldr	r3, [r7, #4]
 800673c:	681b      	ldr	r3, [r3, #0]
 800673e:	681a      	ldr	r2, [r3, #0]
 8006740:	687b      	ldr	r3, [r7, #4]
 8006742:	681b      	ldr	r3, [r3, #0]
 8006744:	f022 0216 	bic.w	r2, r2, #22
 8006748:	601a      	str	r2, [r3, #0]
 800674a:	687b      	ldr	r3, [r7, #4]
 800674c:	681b      	ldr	r3, [r3, #0]
 800674e:	695a      	ldr	r2, [r3, #20]
 8006750:	687b      	ldr	r3, [r7, #4]
 8006752:	681b      	ldr	r3, [r3, #0]
 8006754:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8006758:	615a      	str	r2, [r3, #20]
 800675a:	687b      	ldr	r3, [r7, #4]
 800675c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800675e:	2b00      	cmp	r3, #0
 8006760:	d103      	bne.n	800676a <HAL_DMA_IRQHandler+0x1da>
 8006762:	687b      	ldr	r3, [r7, #4]
 8006764:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8006766:	2b00      	cmp	r3, #0
 8006768:	d007      	beq.n	800677a <HAL_DMA_IRQHandler+0x1ea>
 800676a:	687b      	ldr	r3, [r7, #4]
 800676c:	681b      	ldr	r3, [r3, #0]
 800676e:	681a      	ldr	r2, [r3, #0]
 8006770:	687b      	ldr	r3, [r7, #4]
 8006772:	681b      	ldr	r3, [r3, #0]
 8006774:	f022 0208 	bic.w	r2, r2, #8
 8006778:	601a      	str	r2, [r3, #0]
 800677a:	687b      	ldr	r3, [r7, #4]
 800677c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800677e:	223f      	movs	r2, #63	; 0x3f
 8006780:	409a      	lsls	r2, r3
 8006782:	693b      	ldr	r3, [r7, #16]
 8006784:	609a      	str	r2, [r3, #8]
 8006786:	687b      	ldr	r3, [r7, #4]
 8006788:	2201      	movs	r2, #1
 800678a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800678e:	687b      	ldr	r3, [r7, #4]
 8006790:	2200      	movs	r2, #0
 8006792:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006796:	687b      	ldr	r3, [r7, #4]
 8006798:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800679a:	2b00      	cmp	r3, #0
 800679c:	d07e      	beq.n	800689c <HAL_DMA_IRQHandler+0x30c>
 800679e:	687b      	ldr	r3, [r7, #4]
 80067a0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80067a2:	6878      	ldr	r0, [r7, #4]
 80067a4:	4798      	blx	r3
 80067a6:	e079      	b.n	800689c <HAL_DMA_IRQHandler+0x30c>
 80067a8:	687b      	ldr	r3, [r7, #4]
 80067aa:	681b      	ldr	r3, [r3, #0]
 80067ac:	681b      	ldr	r3, [r3, #0]
 80067ae:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80067b2:	2b00      	cmp	r3, #0
 80067b4:	d01d      	beq.n	80067f2 <HAL_DMA_IRQHandler+0x262>
 80067b6:	687b      	ldr	r3, [r7, #4]
 80067b8:	681b      	ldr	r3, [r3, #0]
 80067ba:	681b      	ldr	r3, [r3, #0]
 80067bc:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80067c0:	2b00      	cmp	r3, #0
 80067c2:	d10d      	bne.n	80067e0 <HAL_DMA_IRQHandler+0x250>
 80067c4:	687b      	ldr	r3, [r7, #4]
 80067c6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80067c8:	2b00      	cmp	r3, #0
 80067ca:	d031      	beq.n	8006830 <HAL_DMA_IRQHandler+0x2a0>
 80067cc:	687b      	ldr	r3, [r7, #4]
 80067ce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80067d0:	6878      	ldr	r0, [r7, #4]
 80067d2:	4798      	blx	r3
 80067d4:	e02c      	b.n	8006830 <HAL_DMA_IRQHandler+0x2a0>
 80067d6:	bf00      	nop
 80067d8:	2000006c 	.word	0x2000006c
 80067dc:	1b4e81b5 	.word	0x1b4e81b5
 80067e0:	687b      	ldr	r3, [r7, #4]
 80067e2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80067e4:	2b00      	cmp	r3, #0
 80067e6:	d023      	beq.n	8006830 <HAL_DMA_IRQHandler+0x2a0>
 80067e8:	687b      	ldr	r3, [r7, #4]
 80067ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80067ec:	6878      	ldr	r0, [r7, #4]
 80067ee:	4798      	blx	r3
 80067f0:	e01e      	b.n	8006830 <HAL_DMA_IRQHandler+0x2a0>
 80067f2:	687b      	ldr	r3, [r7, #4]
 80067f4:	681b      	ldr	r3, [r3, #0]
 80067f6:	681b      	ldr	r3, [r3, #0]
 80067f8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80067fc:	2b00      	cmp	r3, #0
 80067fe:	d10f      	bne.n	8006820 <HAL_DMA_IRQHandler+0x290>
 8006800:	687b      	ldr	r3, [r7, #4]
 8006802:	681b      	ldr	r3, [r3, #0]
 8006804:	681a      	ldr	r2, [r3, #0]
 8006806:	687b      	ldr	r3, [r7, #4]
 8006808:	681b      	ldr	r3, [r3, #0]
 800680a:	f022 0210 	bic.w	r2, r2, #16
 800680e:	601a      	str	r2, [r3, #0]
 8006810:	687b      	ldr	r3, [r7, #4]
 8006812:	2201      	movs	r2, #1
 8006814:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8006818:	687b      	ldr	r3, [r7, #4]
 800681a:	2200      	movs	r2, #0
 800681c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006820:	687b      	ldr	r3, [r7, #4]
 8006822:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006824:	2b00      	cmp	r3, #0
 8006826:	d003      	beq.n	8006830 <HAL_DMA_IRQHandler+0x2a0>
 8006828:	687b      	ldr	r3, [r7, #4]
 800682a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800682c:	6878      	ldr	r0, [r7, #4]
 800682e:	4798      	blx	r3
 8006830:	687b      	ldr	r3, [r7, #4]
 8006832:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006834:	2b00      	cmp	r3, #0
 8006836:	d032      	beq.n	800689e <HAL_DMA_IRQHandler+0x30e>
 8006838:	687b      	ldr	r3, [r7, #4]
 800683a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800683c:	f003 0301 	and.w	r3, r3, #1
 8006840:	2b00      	cmp	r3, #0
 8006842:	d022      	beq.n	800688a <HAL_DMA_IRQHandler+0x2fa>
 8006844:	687b      	ldr	r3, [r7, #4]
 8006846:	2205      	movs	r2, #5
 8006848:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800684c:	687b      	ldr	r3, [r7, #4]
 800684e:	681b      	ldr	r3, [r3, #0]
 8006850:	681a      	ldr	r2, [r3, #0]
 8006852:	687b      	ldr	r3, [r7, #4]
 8006854:	681b      	ldr	r3, [r3, #0]
 8006856:	f022 0201 	bic.w	r2, r2, #1
 800685a:	601a      	str	r2, [r3, #0]
 800685c:	68bb      	ldr	r3, [r7, #8]
 800685e:	3301      	adds	r3, #1
 8006860:	60bb      	str	r3, [r7, #8]
 8006862:	697a      	ldr	r2, [r7, #20]
 8006864:	429a      	cmp	r2, r3
 8006866:	d307      	bcc.n	8006878 <HAL_DMA_IRQHandler+0x2e8>
 8006868:	687b      	ldr	r3, [r7, #4]
 800686a:	681b      	ldr	r3, [r3, #0]
 800686c:	681b      	ldr	r3, [r3, #0]
 800686e:	f003 0301 	and.w	r3, r3, #1
 8006872:	2b00      	cmp	r3, #0
 8006874:	d1f2      	bne.n	800685c <HAL_DMA_IRQHandler+0x2cc>
 8006876:	e000      	b.n	800687a <HAL_DMA_IRQHandler+0x2ea>
 8006878:	bf00      	nop
 800687a:	687b      	ldr	r3, [r7, #4]
 800687c:	2201      	movs	r2, #1
 800687e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8006882:	687b      	ldr	r3, [r7, #4]
 8006884:	2200      	movs	r2, #0
 8006886:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800688a:	687b      	ldr	r3, [r7, #4]
 800688c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800688e:	2b00      	cmp	r3, #0
 8006890:	d005      	beq.n	800689e <HAL_DMA_IRQHandler+0x30e>
 8006892:	687b      	ldr	r3, [r7, #4]
 8006894:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006896:	6878      	ldr	r0, [r7, #4]
 8006898:	4798      	blx	r3
 800689a:	e000      	b.n	800689e <HAL_DMA_IRQHandler+0x30e>
 800689c:	bf00      	nop
 800689e:	3718      	adds	r7, #24
 80068a0:	46bd      	mov	sp, r7
 80068a2:	bd80      	pop	{r7, pc}

080068a4 <DMA_SetConfig>:
 80068a4:	b480      	push	{r7}
 80068a6:	b085      	sub	sp, #20
 80068a8:	af00      	add	r7, sp, #0
 80068aa:	60f8      	str	r0, [r7, #12]
 80068ac:	60b9      	str	r1, [r7, #8]
 80068ae:	607a      	str	r2, [r7, #4]
 80068b0:	603b      	str	r3, [r7, #0]
 80068b2:	68fb      	ldr	r3, [r7, #12]
 80068b4:	681b      	ldr	r3, [r3, #0]
 80068b6:	681a      	ldr	r2, [r3, #0]
 80068b8:	68fb      	ldr	r3, [r7, #12]
 80068ba:	681b      	ldr	r3, [r3, #0]
 80068bc:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80068c0:	601a      	str	r2, [r3, #0]
 80068c2:	68fb      	ldr	r3, [r7, #12]
 80068c4:	681b      	ldr	r3, [r3, #0]
 80068c6:	683a      	ldr	r2, [r7, #0]
 80068c8:	605a      	str	r2, [r3, #4]
 80068ca:	68fb      	ldr	r3, [r7, #12]
 80068cc:	689b      	ldr	r3, [r3, #8]
 80068ce:	2b40      	cmp	r3, #64	; 0x40
 80068d0:	d108      	bne.n	80068e4 <DMA_SetConfig+0x40>
 80068d2:	68fb      	ldr	r3, [r7, #12]
 80068d4:	681b      	ldr	r3, [r3, #0]
 80068d6:	687a      	ldr	r2, [r7, #4]
 80068d8:	609a      	str	r2, [r3, #8]
 80068da:	68fb      	ldr	r3, [r7, #12]
 80068dc:	681b      	ldr	r3, [r3, #0]
 80068de:	68ba      	ldr	r2, [r7, #8]
 80068e0:	60da      	str	r2, [r3, #12]
 80068e2:	e007      	b.n	80068f4 <DMA_SetConfig+0x50>
 80068e4:	68fb      	ldr	r3, [r7, #12]
 80068e6:	681b      	ldr	r3, [r3, #0]
 80068e8:	68ba      	ldr	r2, [r7, #8]
 80068ea:	609a      	str	r2, [r3, #8]
 80068ec:	68fb      	ldr	r3, [r7, #12]
 80068ee:	681b      	ldr	r3, [r3, #0]
 80068f0:	687a      	ldr	r2, [r7, #4]
 80068f2:	60da      	str	r2, [r3, #12]
 80068f4:	bf00      	nop
 80068f6:	3714      	adds	r7, #20
 80068f8:	46bd      	mov	sp, r7
 80068fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068fe:	4770      	bx	lr

08006900 <DMA_CalcBaseAndBitshift>:
 8006900:	b480      	push	{r7}
 8006902:	b085      	sub	sp, #20
 8006904:	af00      	add	r7, sp, #0
 8006906:	6078      	str	r0, [r7, #4]
 8006908:	687b      	ldr	r3, [r7, #4]
 800690a:	681b      	ldr	r3, [r3, #0]
 800690c:	b2db      	uxtb	r3, r3
 800690e:	3b10      	subs	r3, #16
 8006910:	4a14      	ldr	r2, [pc, #80]	; (8006964 <DMA_CalcBaseAndBitshift+0x64>)
 8006912:	fba2 2303 	umull	r2, r3, r2, r3
 8006916:	091b      	lsrs	r3, r3, #4
 8006918:	60fb      	str	r3, [r7, #12]
 800691a:	4a13      	ldr	r2, [pc, #76]	; (8006968 <DMA_CalcBaseAndBitshift+0x68>)
 800691c:	68fb      	ldr	r3, [r7, #12]
 800691e:	4413      	add	r3, r2
 8006920:	781b      	ldrb	r3, [r3, #0]
 8006922:	461a      	mov	r2, r3
 8006924:	687b      	ldr	r3, [r7, #4]
 8006926:	65da      	str	r2, [r3, #92]	; 0x5c
 8006928:	68fb      	ldr	r3, [r7, #12]
 800692a:	2b03      	cmp	r3, #3
 800692c:	d909      	bls.n	8006942 <DMA_CalcBaseAndBitshift+0x42>
 800692e:	687b      	ldr	r3, [r7, #4]
 8006930:	681b      	ldr	r3, [r3, #0]
 8006932:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8006936:	f023 0303 	bic.w	r3, r3, #3
 800693a:	1d1a      	adds	r2, r3, #4
 800693c:	687b      	ldr	r3, [r7, #4]
 800693e:	659a      	str	r2, [r3, #88]	; 0x58
 8006940:	e007      	b.n	8006952 <DMA_CalcBaseAndBitshift+0x52>
 8006942:	687b      	ldr	r3, [r7, #4]
 8006944:	681b      	ldr	r3, [r3, #0]
 8006946:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 800694a:	f023 0303 	bic.w	r3, r3, #3
 800694e:	687a      	ldr	r2, [r7, #4]
 8006950:	6593      	str	r3, [r2, #88]	; 0x58
 8006952:	687b      	ldr	r3, [r7, #4]
 8006954:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006956:	4618      	mov	r0, r3
 8006958:	3714      	adds	r7, #20
 800695a:	46bd      	mov	sp, r7
 800695c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006960:	4770      	bx	lr
 8006962:	bf00      	nop
 8006964:	aaaaaaab 	.word	0xaaaaaaab
 8006968:	0800f294 	.word	0x0800f294

0800696c <DMA_CheckFifoParam>:
 800696c:	b480      	push	{r7}
 800696e:	b085      	sub	sp, #20
 8006970:	af00      	add	r7, sp, #0
 8006972:	6078      	str	r0, [r7, #4]
 8006974:	2300      	movs	r3, #0
 8006976:	73fb      	strb	r3, [r7, #15]
 8006978:	687b      	ldr	r3, [r7, #4]
 800697a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800697c:	60bb      	str	r3, [r7, #8]
 800697e:	687b      	ldr	r3, [r7, #4]
 8006980:	699b      	ldr	r3, [r3, #24]
 8006982:	2b00      	cmp	r3, #0
 8006984:	d11f      	bne.n	80069c6 <DMA_CheckFifoParam+0x5a>
 8006986:	68bb      	ldr	r3, [r7, #8]
 8006988:	2b03      	cmp	r3, #3
 800698a:	d856      	bhi.n	8006a3a <DMA_CheckFifoParam+0xce>
 800698c:	a201      	add	r2, pc, #4	; (adr r2, 8006994 <DMA_CheckFifoParam+0x28>)
 800698e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006992:	bf00      	nop
 8006994:	080069a5 	.word	0x080069a5
 8006998:	080069b7 	.word	0x080069b7
 800699c:	080069a5 	.word	0x080069a5
 80069a0:	08006a3b 	.word	0x08006a3b
 80069a4:	687b      	ldr	r3, [r7, #4]
 80069a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80069a8:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80069ac:	2b00      	cmp	r3, #0
 80069ae:	d046      	beq.n	8006a3e <DMA_CheckFifoParam+0xd2>
 80069b0:	2301      	movs	r3, #1
 80069b2:	73fb      	strb	r3, [r7, #15]
 80069b4:	e043      	b.n	8006a3e <DMA_CheckFifoParam+0xd2>
 80069b6:	687b      	ldr	r3, [r7, #4]
 80069b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80069ba:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80069be:	d140      	bne.n	8006a42 <DMA_CheckFifoParam+0xd6>
 80069c0:	2301      	movs	r3, #1
 80069c2:	73fb      	strb	r3, [r7, #15]
 80069c4:	e03d      	b.n	8006a42 <DMA_CheckFifoParam+0xd6>
 80069c6:	687b      	ldr	r3, [r7, #4]
 80069c8:	699b      	ldr	r3, [r3, #24]
 80069ca:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80069ce:	d121      	bne.n	8006a14 <DMA_CheckFifoParam+0xa8>
 80069d0:	68bb      	ldr	r3, [r7, #8]
 80069d2:	2b03      	cmp	r3, #3
 80069d4:	d837      	bhi.n	8006a46 <DMA_CheckFifoParam+0xda>
 80069d6:	a201      	add	r2, pc, #4	; (adr r2, 80069dc <DMA_CheckFifoParam+0x70>)
 80069d8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80069dc:	080069ed 	.word	0x080069ed
 80069e0:	080069f3 	.word	0x080069f3
 80069e4:	080069ed 	.word	0x080069ed
 80069e8:	08006a05 	.word	0x08006a05
 80069ec:	2301      	movs	r3, #1
 80069ee:	73fb      	strb	r3, [r7, #15]
 80069f0:	e030      	b.n	8006a54 <DMA_CheckFifoParam+0xe8>
 80069f2:	687b      	ldr	r3, [r7, #4]
 80069f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80069f6:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80069fa:	2b00      	cmp	r3, #0
 80069fc:	d025      	beq.n	8006a4a <DMA_CheckFifoParam+0xde>
 80069fe:	2301      	movs	r3, #1
 8006a00:	73fb      	strb	r3, [r7, #15]
 8006a02:	e022      	b.n	8006a4a <DMA_CheckFifoParam+0xde>
 8006a04:	687b      	ldr	r3, [r7, #4]
 8006a06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006a08:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8006a0c:	d11f      	bne.n	8006a4e <DMA_CheckFifoParam+0xe2>
 8006a0e:	2301      	movs	r3, #1
 8006a10:	73fb      	strb	r3, [r7, #15]
 8006a12:	e01c      	b.n	8006a4e <DMA_CheckFifoParam+0xe2>
 8006a14:	68bb      	ldr	r3, [r7, #8]
 8006a16:	2b02      	cmp	r3, #2
 8006a18:	d903      	bls.n	8006a22 <DMA_CheckFifoParam+0xb6>
 8006a1a:	68bb      	ldr	r3, [r7, #8]
 8006a1c:	2b03      	cmp	r3, #3
 8006a1e:	d003      	beq.n	8006a28 <DMA_CheckFifoParam+0xbc>
 8006a20:	e018      	b.n	8006a54 <DMA_CheckFifoParam+0xe8>
 8006a22:	2301      	movs	r3, #1
 8006a24:	73fb      	strb	r3, [r7, #15]
 8006a26:	e015      	b.n	8006a54 <DMA_CheckFifoParam+0xe8>
 8006a28:	687b      	ldr	r3, [r7, #4]
 8006a2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006a2c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8006a30:	2b00      	cmp	r3, #0
 8006a32:	d00e      	beq.n	8006a52 <DMA_CheckFifoParam+0xe6>
 8006a34:	2301      	movs	r3, #1
 8006a36:	73fb      	strb	r3, [r7, #15]
 8006a38:	e00b      	b.n	8006a52 <DMA_CheckFifoParam+0xe6>
 8006a3a:	bf00      	nop
 8006a3c:	e00a      	b.n	8006a54 <DMA_CheckFifoParam+0xe8>
 8006a3e:	bf00      	nop
 8006a40:	e008      	b.n	8006a54 <DMA_CheckFifoParam+0xe8>
 8006a42:	bf00      	nop
 8006a44:	e006      	b.n	8006a54 <DMA_CheckFifoParam+0xe8>
 8006a46:	bf00      	nop
 8006a48:	e004      	b.n	8006a54 <DMA_CheckFifoParam+0xe8>
 8006a4a:	bf00      	nop
 8006a4c:	e002      	b.n	8006a54 <DMA_CheckFifoParam+0xe8>
 8006a4e:	bf00      	nop
 8006a50:	e000      	b.n	8006a54 <DMA_CheckFifoParam+0xe8>
 8006a52:	bf00      	nop
 8006a54:	7bfb      	ldrb	r3, [r7, #15]
 8006a56:	4618      	mov	r0, r3
 8006a58:	3714      	adds	r7, #20
 8006a5a:	46bd      	mov	sp, r7
 8006a5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a60:	4770      	bx	lr
 8006a62:	bf00      	nop

08006a64 <HAL_FLASH_Program>:
 8006a64:	b580      	push	{r7, lr}
 8006a66:	b086      	sub	sp, #24
 8006a68:	af00      	add	r7, sp, #0
 8006a6a:	60f8      	str	r0, [r7, #12]
 8006a6c:	60b9      	str	r1, [r7, #8]
 8006a6e:	e9c7 2300 	strd	r2, r3, [r7]
 8006a72:	2301      	movs	r3, #1
 8006a74:	75fb      	strb	r3, [r7, #23]
 8006a76:	4b23      	ldr	r3, [pc, #140]	; (8006b04 <HAL_FLASH_Program+0xa0>)
 8006a78:	7e1b      	ldrb	r3, [r3, #24]
 8006a7a:	2b01      	cmp	r3, #1
 8006a7c:	d101      	bne.n	8006a82 <HAL_FLASH_Program+0x1e>
 8006a7e:	2302      	movs	r3, #2
 8006a80:	e03b      	b.n	8006afa <HAL_FLASH_Program+0x96>
 8006a82:	4b20      	ldr	r3, [pc, #128]	; (8006b04 <HAL_FLASH_Program+0xa0>)
 8006a84:	2201      	movs	r2, #1
 8006a86:	761a      	strb	r2, [r3, #24]
 8006a88:	f24c 3050 	movw	r0, #50000	; 0xc350
 8006a8c:	f000 f870 	bl	8006b70 <FLASH_WaitForLastOperation>
 8006a90:	4603      	mov	r3, r0
 8006a92:	75fb      	strb	r3, [r7, #23]
 8006a94:	7dfb      	ldrb	r3, [r7, #23]
 8006a96:	2b00      	cmp	r3, #0
 8006a98:	d12b      	bne.n	8006af2 <HAL_FLASH_Program+0x8e>
 8006a9a:	68fb      	ldr	r3, [r7, #12]
 8006a9c:	2b00      	cmp	r3, #0
 8006a9e:	d105      	bne.n	8006aac <HAL_FLASH_Program+0x48>
 8006aa0:	783b      	ldrb	r3, [r7, #0]
 8006aa2:	4619      	mov	r1, r3
 8006aa4:	68b8      	ldr	r0, [r7, #8]
 8006aa6:	f000 f91b 	bl	8006ce0 <FLASH_Program_Byte>
 8006aaa:	e016      	b.n	8006ada <HAL_FLASH_Program+0x76>
 8006aac:	68fb      	ldr	r3, [r7, #12]
 8006aae:	2b01      	cmp	r3, #1
 8006ab0:	d105      	bne.n	8006abe <HAL_FLASH_Program+0x5a>
 8006ab2:	883b      	ldrh	r3, [r7, #0]
 8006ab4:	4619      	mov	r1, r3
 8006ab6:	68b8      	ldr	r0, [r7, #8]
 8006ab8:	f000 f8ee 	bl	8006c98 <FLASH_Program_HalfWord>
 8006abc:	e00d      	b.n	8006ada <HAL_FLASH_Program+0x76>
 8006abe:	68fb      	ldr	r3, [r7, #12]
 8006ac0:	2b02      	cmp	r3, #2
 8006ac2:	d105      	bne.n	8006ad0 <HAL_FLASH_Program+0x6c>
 8006ac4:	683b      	ldr	r3, [r7, #0]
 8006ac6:	4619      	mov	r1, r3
 8006ac8:	68b8      	ldr	r0, [r7, #8]
 8006aca:	f000 f8c3 	bl	8006c54 <FLASH_Program_Word>
 8006ace:	e004      	b.n	8006ada <HAL_FLASH_Program+0x76>
 8006ad0:	e9d7 2300 	ldrd	r2, r3, [r7]
 8006ad4:	68b8      	ldr	r0, [r7, #8]
 8006ad6:	f000 f88b 	bl	8006bf0 <FLASH_Program_DoubleWord>
 8006ada:	f24c 3050 	movw	r0, #50000	; 0xc350
 8006ade:	f000 f847 	bl	8006b70 <FLASH_WaitForLastOperation>
 8006ae2:	4603      	mov	r3, r0
 8006ae4:	75fb      	strb	r3, [r7, #23]
 8006ae6:	4b08      	ldr	r3, [pc, #32]	; (8006b08 <HAL_FLASH_Program+0xa4>)
 8006ae8:	691b      	ldr	r3, [r3, #16]
 8006aea:	4a07      	ldr	r2, [pc, #28]	; (8006b08 <HAL_FLASH_Program+0xa4>)
 8006aec:	f023 0301 	bic.w	r3, r3, #1
 8006af0:	6113      	str	r3, [r2, #16]
 8006af2:	4b04      	ldr	r3, [pc, #16]	; (8006b04 <HAL_FLASH_Program+0xa0>)
 8006af4:	2200      	movs	r2, #0
 8006af6:	761a      	strb	r2, [r3, #24]
 8006af8:	7dfb      	ldrb	r3, [r7, #23]
 8006afa:	4618      	mov	r0, r3
 8006afc:	3718      	adds	r7, #24
 8006afe:	46bd      	mov	sp, r7
 8006b00:	bd80      	pop	{r7, pc}
 8006b02:	bf00      	nop
 8006b04:	200009b0 	.word	0x200009b0
 8006b08:	40023c00 	.word	0x40023c00

08006b0c <HAL_FLASH_Unlock>:
 8006b0c:	b480      	push	{r7}
 8006b0e:	b083      	sub	sp, #12
 8006b10:	af00      	add	r7, sp, #0
 8006b12:	2300      	movs	r3, #0
 8006b14:	71fb      	strb	r3, [r7, #7]
 8006b16:	4b0b      	ldr	r3, [pc, #44]	; (8006b44 <HAL_FLASH_Unlock+0x38>)
 8006b18:	691b      	ldr	r3, [r3, #16]
 8006b1a:	2b00      	cmp	r3, #0
 8006b1c:	da0b      	bge.n	8006b36 <HAL_FLASH_Unlock+0x2a>
 8006b1e:	4b09      	ldr	r3, [pc, #36]	; (8006b44 <HAL_FLASH_Unlock+0x38>)
 8006b20:	4a09      	ldr	r2, [pc, #36]	; (8006b48 <HAL_FLASH_Unlock+0x3c>)
 8006b22:	605a      	str	r2, [r3, #4]
 8006b24:	4b07      	ldr	r3, [pc, #28]	; (8006b44 <HAL_FLASH_Unlock+0x38>)
 8006b26:	4a09      	ldr	r2, [pc, #36]	; (8006b4c <HAL_FLASH_Unlock+0x40>)
 8006b28:	605a      	str	r2, [r3, #4]
 8006b2a:	4b06      	ldr	r3, [pc, #24]	; (8006b44 <HAL_FLASH_Unlock+0x38>)
 8006b2c:	691b      	ldr	r3, [r3, #16]
 8006b2e:	2b00      	cmp	r3, #0
 8006b30:	da01      	bge.n	8006b36 <HAL_FLASH_Unlock+0x2a>
 8006b32:	2301      	movs	r3, #1
 8006b34:	71fb      	strb	r3, [r7, #7]
 8006b36:	79fb      	ldrb	r3, [r7, #7]
 8006b38:	4618      	mov	r0, r3
 8006b3a:	370c      	adds	r7, #12
 8006b3c:	46bd      	mov	sp, r7
 8006b3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b42:	4770      	bx	lr
 8006b44:	40023c00 	.word	0x40023c00
 8006b48:	45670123 	.word	0x45670123
 8006b4c:	cdef89ab 	.word	0xcdef89ab

08006b50 <HAL_FLASH_Lock>:
 8006b50:	b480      	push	{r7}
 8006b52:	af00      	add	r7, sp, #0
 8006b54:	4b05      	ldr	r3, [pc, #20]	; (8006b6c <HAL_FLASH_Lock+0x1c>)
 8006b56:	691b      	ldr	r3, [r3, #16]
 8006b58:	4a04      	ldr	r2, [pc, #16]	; (8006b6c <HAL_FLASH_Lock+0x1c>)
 8006b5a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8006b5e:	6113      	str	r3, [r2, #16]
 8006b60:	2300      	movs	r3, #0
 8006b62:	4618      	mov	r0, r3
 8006b64:	46bd      	mov	sp, r7
 8006b66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b6a:	4770      	bx	lr
 8006b6c:	40023c00 	.word	0x40023c00

08006b70 <FLASH_WaitForLastOperation>:
 8006b70:	b580      	push	{r7, lr}
 8006b72:	b084      	sub	sp, #16
 8006b74:	af00      	add	r7, sp, #0
 8006b76:	6078      	str	r0, [r7, #4]
 8006b78:	2300      	movs	r3, #0
 8006b7a:	60fb      	str	r3, [r7, #12]
 8006b7c:	4b1a      	ldr	r3, [pc, #104]	; (8006be8 <FLASH_WaitForLastOperation+0x78>)
 8006b7e:	2200      	movs	r2, #0
 8006b80:	61da      	str	r2, [r3, #28]
 8006b82:	f7fe fc83 	bl	800548c <HAL_GetTick>
 8006b86:	60f8      	str	r0, [r7, #12]
 8006b88:	e010      	b.n	8006bac <FLASH_WaitForLastOperation+0x3c>
 8006b8a:	687b      	ldr	r3, [r7, #4]
 8006b8c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006b90:	d00c      	beq.n	8006bac <FLASH_WaitForLastOperation+0x3c>
 8006b92:	687b      	ldr	r3, [r7, #4]
 8006b94:	2b00      	cmp	r3, #0
 8006b96:	d007      	beq.n	8006ba8 <FLASH_WaitForLastOperation+0x38>
 8006b98:	f7fe fc78 	bl	800548c <HAL_GetTick>
 8006b9c:	4602      	mov	r2, r0
 8006b9e:	68fb      	ldr	r3, [r7, #12]
 8006ba0:	1ad3      	subs	r3, r2, r3
 8006ba2:	687a      	ldr	r2, [r7, #4]
 8006ba4:	429a      	cmp	r2, r3
 8006ba6:	d201      	bcs.n	8006bac <FLASH_WaitForLastOperation+0x3c>
 8006ba8:	2303      	movs	r3, #3
 8006baa:	e019      	b.n	8006be0 <FLASH_WaitForLastOperation+0x70>
 8006bac:	4b0f      	ldr	r3, [pc, #60]	; (8006bec <FLASH_WaitForLastOperation+0x7c>)
 8006bae:	68db      	ldr	r3, [r3, #12]
 8006bb0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8006bb4:	2b00      	cmp	r3, #0
 8006bb6:	d1e8      	bne.n	8006b8a <FLASH_WaitForLastOperation+0x1a>
 8006bb8:	4b0c      	ldr	r3, [pc, #48]	; (8006bec <FLASH_WaitForLastOperation+0x7c>)
 8006bba:	68db      	ldr	r3, [r3, #12]
 8006bbc:	f003 0301 	and.w	r3, r3, #1
 8006bc0:	2b00      	cmp	r3, #0
 8006bc2:	d002      	beq.n	8006bca <FLASH_WaitForLastOperation+0x5a>
 8006bc4:	4b09      	ldr	r3, [pc, #36]	; (8006bec <FLASH_WaitForLastOperation+0x7c>)
 8006bc6:	2201      	movs	r2, #1
 8006bc8:	60da      	str	r2, [r3, #12]
 8006bca:	4b08      	ldr	r3, [pc, #32]	; (8006bec <FLASH_WaitForLastOperation+0x7c>)
 8006bcc:	68db      	ldr	r3, [r3, #12]
 8006bce:	f403 73f9 	and.w	r3, r3, #498	; 0x1f2
 8006bd2:	2b00      	cmp	r3, #0
 8006bd4:	d003      	beq.n	8006bde <FLASH_WaitForLastOperation+0x6e>
 8006bd6:	f000 f8a5 	bl	8006d24 <FLASH_SetErrorCode>
 8006bda:	2301      	movs	r3, #1
 8006bdc:	e000      	b.n	8006be0 <FLASH_WaitForLastOperation+0x70>
 8006bde:	2300      	movs	r3, #0
 8006be0:	4618      	mov	r0, r3
 8006be2:	3710      	adds	r7, #16
 8006be4:	46bd      	mov	sp, r7
 8006be6:	bd80      	pop	{r7, pc}
 8006be8:	200009b0 	.word	0x200009b0
 8006bec:	40023c00 	.word	0x40023c00

08006bf0 <FLASH_Program_DoubleWord>:
 8006bf0:	b480      	push	{r7}
 8006bf2:	b085      	sub	sp, #20
 8006bf4:	af00      	add	r7, sp, #0
 8006bf6:	60f8      	str	r0, [r7, #12]
 8006bf8:	e9c7 2300 	strd	r2, r3, [r7]
 8006bfc:	4b14      	ldr	r3, [pc, #80]	; (8006c50 <FLASH_Program_DoubleWord+0x60>)
 8006bfe:	691b      	ldr	r3, [r3, #16]
 8006c00:	4a13      	ldr	r2, [pc, #76]	; (8006c50 <FLASH_Program_DoubleWord+0x60>)
 8006c02:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006c06:	6113      	str	r3, [r2, #16]
 8006c08:	4b11      	ldr	r3, [pc, #68]	; (8006c50 <FLASH_Program_DoubleWord+0x60>)
 8006c0a:	691b      	ldr	r3, [r3, #16]
 8006c0c:	4a10      	ldr	r2, [pc, #64]	; (8006c50 <FLASH_Program_DoubleWord+0x60>)
 8006c0e:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8006c12:	6113      	str	r3, [r2, #16]
 8006c14:	4b0e      	ldr	r3, [pc, #56]	; (8006c50 <FLASH_Program_DoubleWord+0x60>)
 8006c16:	691b      	ldr	r3, [r3, #16]
 8006c18:	4a0d      	ldr	r2, [pc, #52]	; (8006c50 <FLASH_Program_DoubleWord+0x60>)
 8006c1a:	f043 0301 	orr.w	r3, r3, #1
 8006c1e:	6113      	str	r3, [r2, #16]
 8006c20:	68fb      	ldr	r3, [r7, #12]
 8006c22:	683a      	ldr	r2, [r7, #0]
 8006c24:	601a      	str	r2, [r3, #0]
 8006c26:	f3bf 8f6f 	isb	sy
 8006c2a:	bf00      	nop
 8006c2c:	e9d7 0100 	ldrd	r0, r1, [r7]
 8006c30:	f04f 0200 	mov.w	r2, #0
 8006c34:	f04f 0300 	mov.w	r3, #0
 8006c38:	000a      	movs	r2, r1
 8006c3a:	2300      	movs	r3, #0
 8006c3c:	68f9      	ldr	r1, [r7, #12]
 8006c3e:	3104      	adds	r1, #4
 8006c40:	4613      	mov	r3, r2
 8006c42:	600b      	str	r3, [r1, #0]
 8006c44:	bf00      	nop
 8006c46:	3714      	adds	r7, #20
 8006c48:	46bd      	mov	sp, r7
 8006c4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c4e:	4770      	bx	lr
 8006c50:	40023c00 	.word	0x40023c00

08006c54 <FLASH_Program_Word>:
 8006c54:	b480      	push	{r7}
 8006c56:	b083      	sub	sp, #12
 8006c58:	af00      	add	r7, sp, #0
 8006c5a:	6078      	str	r0, [r7, #4]
 8006c5c:	6039      	str	r1, [r7, #0]
 8006c5e:	4b0d      	ldr	r3, [pc, #52]	; (8006c94 <FLASH_Program_Word+0x40>)
 8006c60:	691b      	ldr	r3, [r3, #16]
 8006c62:	4a0c      	ldr	r2, [pc, #48]	; (8006c94 <FLASH_Program_Word+0x40>)
 8006c64:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006c68:	6113      	str	r3, [r2, #16]
 8006c6a:	4b0a      	ldr	r3, [pc, #40]	; (8006c94 <FLASH_Program_Word+0x40>)
 8006c6c:	691b      	ldr	r3, [r3, #16]
 8006c6e:	4a09      	ldr	r2, [pc, #36]	; (8006c94 <FLASH_Program_Word+0x40>)
 8006c70:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006c74:	6113      	str	r3, [r2, #16]
 8006c76:	4b07      	ldr	r3, [pc, #28]	; (8006c94 <FLASH_Program_Word+0x40>)
 8006c78:	691b      	ldr	r3, [r3, #16]
 8006c7a:	4a06      	ldr	r2, [pc, #24]	; (8006c94 <FLASH_Program_Word+0x40>)
 8006c7c:	f043 0301 	orr.w	r3, r3, #1
 8006c80:	6113      	str	r3, [r2, #16]
 8006c82:	687b      	ldr	r3, [r7, #4]
 8006c84:	683a      	ldr	r2, [r7, #0]
 8006c86:	601a      	str	r2, [r3, #0]
 8006c88:	bf00      	nop
 8006c8a:	370c      	adds	r7, #12
 8006c8c:	46bd      	mov	sp, r7
 8006c8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c92:	4770      	bx	lr
 8006c94:	40023c00 	.word	0x40023c00

08006c98 <FLASH_Program_HalfWord>:
 8006c98:	b480      	push	{r7}
 8006c9a:	b083      	sub	sp, #12
 8006c9c:	af00      	add	r7, sp, #0
 8006c9e:	6078      	str	r0, [r7, #4]
 8006ca0:	460b      	mov	r3, r1
 8006ca2:	807b      	strh	r3, [r7, #2]
 8006ca4:	4b0d      	ldr	r3, [pc, #52]	; (8006cdc <FLASH_Program_HalfWord+0x44>)
 8006ca6:	691b      	ldr	r3, [r3, #16]
 8006ca8:	4a0c      	ldr	r2, [pc, #48]	; (8006cdc <FLASH_Program_HalfWord+0x44>)
 8006caa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006cae:	6113      	str	r3, [r2, #16]
 8006cb0:	4b0a      	ldr	r3, [pc, #40]	; (8006cdc <FLASH_Program_HalfWord+0x44>)
 8006cb2:	691b      	ldr	r3, [r3, #16]
 8006cb4:	4a09      	ldr	r2, [pc, #36]	; (8006cdc <FLASH_Program_HalfWord+0x44>)
 8006cb6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006cba:	6113      	str	r3, [r2, #16]
 8006cbc:	4b07      	ldr	r3, [pc, #28]	; (8006cdc <FLASH_Program_HalfWord+0x44>)
 8006cbe:	691b      	ldr	r3, [r3, #16]
 8006cc0:	4a06      	ldr	r2, [pc, #24]	; (8006cdc <FLASH_Program_HalfWord+0x44>)
 8006cc2:	f043 0301 	orr.w	r3, r3, #1
 8006cc6:	6113      	str	r3, [r2, #16]
 8006cc8:	687b      	ldr	r3, [r7, #4]
 8006cca:	887a      	ldrh	r2, [r7, #2]
 8006ccc:	801a      	strh	r2, [r3, #0]
 8006cce:	bf00      	nop
 8006cd0:	370c      	adds	r7, #12
 8006cd2:	46bd      	mov	sp, r7
 8006cd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cd8:	4770      	bx	lr
 8006cda:	bf00      	nop
 8006cdc:	40023c00 	.word	0x40023c00

08006ce0 <FLASH_Program_Byte>:
 8006ce0:	b480      	push	{r7}
 8006ce2:	b083      	sub	sp, #12
 8006ce4:	af00      	add	r7, sp, #0
 8006ce6:	6078      	str	r0, [r7, #4]
 8006ce8:	460b      	mov	r3, r1
 8006cea:	70fb      	strb	r3, [r7, #3]
 8006cec:	4b0c      	ldr	r3, [pc, #48]	; (8006d20 <FLASH_Program_Byte+0x40>)
 8006cee:	691b      	ldr	r3, [r3, #16]
 8006cf0:	4a0b      	ldr	r2, [pc, #44]	; (8006d20 <FLASH_Program_Byte+0x40>)
 8006cf2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006cf6:	6113      	str	r3, [r2, #16]
 8006cf8:	4b09      	ldr	r3, [pc, #36]	; (8006d20 <FLASH_Program_Byte+0x40>)
 8006cfa:	4a09      	ldr	r2, [pc, #36]	; (8006d20 <FLASH_Program_Byte+0x40>)
 8006cfc:	691b      	ldr	r3, [r3, #16]
 8006cfe:	6113      	str	r3, [r2, #16]
 8006d00:	4b07      	ldr	r3, [pc, #28]	; (8006d20 <FLASH_Program_Byte+0x40>)
 8006d02:	691b      	ldr	r3, [r3, #16]
 8006d04:	4a06      	ldr	r2, [pc, #24]	; (8006d20 <FLASH_Program_Byte+0x40>)
 8006d06:	f043 0301 	orr.w	r3, r3, #1
 8006d0a:	6113      	str	r3, [r2, #16]
 8006d0c:	687b      	ldr	r3, [r7, #4]
 8006d0e:	78fa      	ldrb	r2, [r7, #3]
 8006d10:	701a      	strb	r2, [r3, #0]
 8006d12:	bf00      	nop
 8006d14:	370c      	adds	r7, #12
 8006d16:	46bd      	mov	sp, r7
 8006d18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d1c:	4770      	bx	lr
 8006d1e:	bf00      	nop
 8006d20:	40023c00 	.word	0x40023c00

08006d24 <FLASH_SetErrorCode>:
 8006d24:	b480      	push	{r7}
 8006d26:	af00      	add	r7, sp, #0
 8006d28:	4b2f      	ldr	r3, [pc, #188]	; (8006de8 <FLASH_SetErrorCode+0xc4>)
 8006d2a:	68db      	ldr	r3, [r3, #12]
 8006d2c:	f003 0310 	and.w	r3, r3, #16
 8006d30:	2b00      	cmp	r3, #0
 8006d32:	d008      	beq.n	8006d46 <FLASH_SetErrorCode+0x22>
 8006d34:	4b2d      	ldr	r3, [pc, #180]	; (8006dec <FLASH_SetErrorCode+0xc8>)
 8006d36:	69db      	ldr	r3, [r3, #28]
 8006d38:	f043 0310 	orr.w	r3, r3, #16
 8006d3c:	4a2b      	ldr	r2, [pc, #172]	; (8006dec <FLASH_SetErrorCode+0xc8>)
 8006d3e:	61d3      	str	r3, [r2, #28]
 8006d40:	4b29      	ldr	r3, [pc, #164]	; (8006de8 <FLASH_SetErrorCode+0xc4>)
 8006d42:	2210      	movs	r2, #16
 8006d44:	60da      	str	r2, [r3, #12]
 8006d46:	4b28      	ldr	r3, [pc, #160]	; (8006de8 <FLASH_SetErrorCode+0xc4>)
 8006d48:	68db      	ldr	r3, [r3, #12]
 8006d4a:	f003 0320 	and.w	r3, r3, #32
 8006d4e:	2b00      	cmp	r3, #0
 8006d50:	d008      	beq.n	8006d64 <FLASH_SetErrorCode+0x40>
 8006d52:	4b26      	ldr	r3, [pc, #152]	; (8006dec <FLASH_SetErrorCode+0xc8>)
 8006d54:	69db      	ldr	r3, [r3, #28]
 8006d56:	f043 0308 	orr.w	r3, r3, #8
 8006d5a:	4a24      	ldr	r2, [pc, #144]	; (8006dec <FLASH_SetErrorCode+0xc8>)
 8006d5c:	61d3      	str	r3, [r2, #28]
 8006d5e:	4b22      	ldr	r3, [pc, #136]	; (8006de8 <FLASH_SetErrorCode+0xc4>)
 8006d60:	2220      	movs	r2, #32
 8006d62:	60da      	str	r2, [r3, #12]
 8006d64:	4b20      	ldr	r3, [pc, #128]	; (8006de8 <FLASH_SetErrorCode+0xc4>)
 8006d66:	68db      	ldr	r3, [r3, #12]
 8006d68:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006d6c:	2b00      	cmp	r3, #0
 8006d6e:	d008      	beq.n	8006d82 <FLASH_SetErrorCode+0x5e>
 8006d70:	4b1e      	ldr	r3, [pc, #120]	; (8006dec <FLASH_SetErrorCode+0xc8>)
 8006d72:	69db      	ldr	r3, [r3, #28]
 8006d74:	f043 0304 	orr.w	r3, r3, #4
 8006d78:	4a1c      	ldr	r2, [pc, #112]	; (8006dec <FLASH_SetErrorCode+0xc8>)
 8006d7a:	61d3      	str	r3, [r2, #28]
 8006d7c:	4b1a      	ldr	r3, [pc, #104]	; (8006de8 <FLASH_SetErrorCode+0xc4>)
 8006d7e:	2240      	movs	r2, #64	; 0x40
 8006d80:	60da      	str	r2, [r3, #12]
 8006d82:	4b19      	ldr	r3, [pc, #100]	; (8006de8 <FLASH_SetErrorCode+0xc4>)
 8006d84:	68db      	ldr	r3, [r3, #12]
 8006d86:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006d8a:	2b00      	cmp	r3, #0
 8006d8c:	d008      	beq.n	8006da0 <FLASH_SetErrorCode+0x7c>
 8006d8e:	4b17      	ldr	r3, [pc, #92]	; (8006dec <FLASH_SetErrorCode+0xc8>)
 8006d90:	69db      	ldr	r3, [r3, #28]
 8006d92:	f043 0302 	orr.w	r3, r3, #2
 8006d96:	4a15      	ldr	r2, [pc, #84]	; (8006dec <FLASH_SetErrorCode+0xc8>)
 8006d98:	61d3      	str	r3, [r2, #28]
 8006d9a:	4b13      	ldr	r3, [pc, #76]	; (8006de8 <FLASH_SetErrorCode+0xc4>)
 8006d9c:	2280      	movs	r2, #128	; 0x80
 8006d9e:	60da      	str	r2, [r3, #12]
 8006da0:	4b11      	ldr	r3, [pc, #68]	; (8006de8 <FLASH_SetErrorCode+0xc4>)
 8006da2:	68db      	ldr	r3, [r3, #12]
 8006da4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006da8:	2b00      	cmp	r3, #0
 8006daa:	d009      	beq.n	8006dc0 <FLASH_SetErrorCode+0x9c>
 8006dac:	4b0f      	ldr	r3, [pc, #60]	; (8006dec <FLASH_SetErrorCode+0xc8>)
 8006dae:	69db      	ldr	r3, [r3, #28]
 8006db0:	f043 0301 	orr.w	r3, r3, #1
 8006db4:	4a0d      	ldr	r2, [pc, #52]	; (8006dec <FLASH_SetErrorCode+0xc8>)
 8006db6:	61d3      	str	r3, [r2, #28]
 8006db8:	4b0b      	ldr	r3, [pc, #44]	; (8006de8 <FLASH_SetErrorCode+0xc4>)
 8006dba:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006dbe:	60da      	str	r2, [r3, #12]
 8006dc0:	4b09      	ldr	r3, [pc, #36]	; (8006de8 <FLASH_SetErrorCode+0xc4>)
 8006dc2:	68db      	ldr	r3, [r3, #12]
 8006dc4:	f003 0302 	and.w	r3, r3, #2
 8006dc8:	2b00      	cmp	r3, #0
 8006dca:	d008      	beq.n	8006dde <FLASH_SetErrorCode+0xba>
 8006dcc:	4b07      	ldr	r3, [pc, #28]	; (8006dec <FLASH_SetErrorCode+0xc8>)
 8006dce:	69db      	ldr	r3, [r3, #28]
 8006dd0:	f043 0320 	orr.w	r3, r3, #32
 8006dd4:	4a05      	ldr	r2, [pc, #20]	; (8006dec <FLASH_SetErrorCode+0xc8>)
 8006dd6:	61d3      	str	r3, [r2, #28]
 8006dd8:	4b03      	ldr	r3, [pc, #12]	; (8006de8 <FLASH_SetErrorCode+0xc4>)
 8006dda:	2202      	movs	r2, #2
 8006ddc:	60da      	str	r2, [r3, #12]
 8006dde:	bf00      	nop
 8006de0:	46bd      	mov	sp, r7
 8006de2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006de6:	4770      	bx	lr
 8006de8:	40023c00 	.word	0x40023c00
 8006dec:	200009b0 	.word	0x200009b0

08006df0 <FLASH_Erase_Sector>:
 8006df0:	b480      	push	{r7}
 8006df2:	b085      	sub	sp, #20
 8006df4:	af00      	add	r7, sp, #0
 8006df6:	6078      	str	r0, [r7, #4]
 8006df8:	460b      	mov	r3, r1
 8006dfa:	70fb      	strb	r3, [r7, #3]
 8006dfc:	2300      	movs	r3, #0
 8006dfe:	60fb      	str	r3, [r7, #12]
 8006e00:	78fb      	ldrb	r3, [r7, #3]
 8006e02:	2b00      	cmp	r3, #0
 8006e04:	d102      	bne.n	8006e0c <FLASH_Erase_Sector+0x1c>
 8006e06:	2300      	movs	r3, #0
 8006e08:	60fb      	str	r3, [r7, #12]
 8006e0a:	e010      	b.n	8006e2e <FLASH_Erase_Sector+0x3e>
 8006e0c:	78fb      	ldrb	r3, [r7, #3]
 8006e0e:	2b01      	cmp	r3, #1
 8006e10:	d103      	bne.n	8006e1a <FLASH_Erase_Sector+0x2a>
 8006e12:	f44f 7380 	mov.w	r3, #256	; 0x100
 8006e16:	60fb      	str	r3, [r7, #12]
 8006e18:	e009      	b.n	8006e2e <FLASH_Erase_Sector+0x3e>
 8006e1a:	78fb      	ldrb	r3, [r7, #3]
 8006e1c:	2b02      	cmp	r3, #2
 8006e1e:	d103      	bne.n	8006e28 <FLASH_Erase_Sector+0x38>
 8006e20:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006e24:	60fb      	str	r3, [r7, #12]
 8006e26:	e002      	b.n	8006e2e <FLASH_Erase_Sector+0x3e>
 8006e28:	f44f 7340 	mov.w	r3, #768	; 0x300
 8006e2c:	60fb      	str	r3, [r7, #12]
 8006e2e:	4b13      	ldr	r3, [pc, #76]	; (8006e7c <FLASH_Erase_Sector+0x8c>)
 8006e30:	691b      	ldr	r3, [r3, #16]
 8006e32:	4a12      	ldr	r2, [pc, #72]	; (8006e7c <FLASH_Erase_Sector+0x8c>)
 8006e34:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006e38:	6113      	str	r3, [r2, #16]
 8006e3a:	4b10      	ldr	r3, [pc, #64]	; (8006e7c <FLASH_Erase_Sector+0x8c>)
 8006e3c:	691a      	ldr	r2, [r3, #16]
 8006e3e:	490f      	ldr	r1, [pc, #60]	; (8006e7c <FLASH_Erase_Sector+0x8c>)
 8006e40:	68fb      	ldr	r3, [r7, #12]
 8006e42:	4313      	orrs	r3, r2
 8006e44:	610b      	str	r3, [r1, #16]
 8006e46:	4b0d      	ldr	r3, [pc, #52]	; (8006e7c <FLASH_Erase_Sector+0x8c>)
 8006e48:	691b      	ldr	r3, [r3, #16]
 8006e4a:	4a0c      	ldr	r2, [pc, #48]	; (8006e7c <FLASH_Erase_Sector+0x8c>)
 8006e4c:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006e50:	6113      	str	r3, [r2, #16]
 8006e52:	4b0a      	ldr	r3, [pc, #40]	; (8006e7c <FLASH_Erase_Sector+0x8c>)
 8006e54:	691a      	ldr	r2, [r3, #16]
 8006e56:	687b      	ldr	r3, [r7, #4]
 8006e58:	00db      	lsls	r3, r3, #3
 8006e5a:	4313      	orrs	r3, r2
 8006e5c:	4a07      	ldr	r2, [pc, #28]	; (8006e7c <FLASH_Erase_Sector+0x8c>)
 8006e5e:	f043 0302 	orr.w	r3, r3, #2
 8006e62:	6113      	str	r3, [r2, #16]
 8006e64:	4b05      	ldr	r3, [pc, #20]	; (8006e7c <FLASH_Erase_Sector+0x8c>)
 8006e66:	691b      	ldr	r3, [r3, #16]
 8006e68:	4a04      	ldr	r2, [pc, #16]	; (8006e7c <FLASH_Erase_Sector+0x8c>)
 8006e6a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006e6e:	6113      	str	r3, [r2, #16]
 8006e70:	bf00      	nop
 8006e72:	3714      	adds	r7, #20
 8006e74:	46bd      	mov	sp, r7
 8006e76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e7a:	4770      	bx	lr
 8006e7c:	40023c00 	.word	0x40023c00

08006e80 <HAL_GPIO_Init>:
 8006e80:	b480      	push	{r7}
 8006e82:	b089      	sub	sp, #36	; 0x24
 8006e84:	af00      	add	r7, sp, #0
 8006e86:	6078      	str	r0, [r7, #4]
 8006e88:	6039      	str	r1, [r7, #0]
 8006e8a:	2300      	movs	r3, #0
 8006e8c:	617b      	str	r3, [r7, #20]
 8006e8e:	2300      	movs	r3, #0
 8006e90:	613b      	str	r3, [r7, #16]
 8006e92:	2300      	movs	r3, #0
 8006e94:	61bb      	str	r3, [r7, #24]
 8006e96:	2300      	movs	r3, #0
 8006e98:	61fb      	str	r3, [r7, #28]
 8006e9a:	e165      	b.n	8007168 <HAL_GPIO_Init+0x2e8>
 8006e9c:	2201      	movs	r2, #1
 8006e9e:	69fb      	ldr	r3, [r7, #28]
 8006ea0:	fa02 f303 	lsl.w	r3, r2, r3
 8006ea4:	617b      	str	r3, [r7, #20]
 8006ea6:	683b      	ldr	r3, [r7, #0]
 8006ea8:	681b      	ldr	r3, [r3, #0]
 8006eaa:	697a      	ldr	r2, [r7, #20]
 8006eac:	4013      	ands	r3, r2
 8006eae:	613b      	str	r3, [r7, #16]
 8006eb0:	693a      	ldr	r2, [r7, #16]
 8006eb2:	697b      	ldr	r3, [r7, #20]
 8006eb4:	429a      	cmp	r2, r3
 8006eb6:	f040 8154 	bne.w	8007162 <HAL_GPIO_Init+0x2e2>
 8006eba:	683b      	ldr	r3, [r7, #0]
 8006ebc:	685b      	ldr	r3, [r3, #4]
 8006ebe:	f003 0303 	and.w	r3, r3, #3
 8006ec2:	2b01      	cmp	r3, #1
 8006ec4:	d005      	beq.n	8006ed2 <HAL_GPIO_Init+0x52>
 8006ec6:	683b      	ldr	r3, [r7, #0]
 8006ec8:	685b      	ldr	r3, [r3, #4]
 8006eca:	f003 0303 	and.w	r3, r3, #3
 8006ece:	2b02      	cmp	r3, #2
 8006ed0:	d130      	bne.n	8006f34 <HAL_GPIO_Init+0xb4>
 8006ed2:	687b      	ldr	r3, [r7, #4]
 8006ed4:	689b      	ldr	r3, [r3, #8]
 8006ed6:	61bb      	str	r3, [r7, #24]
 8006ed8:	69fb      	ldr	r3, [r7, #28]
 8006eda:	005b      	lsls	r3, r3, #1
 8006edc:	2203      	movs	r2, #3
 8006ede:	fa02 f303 	lsl.w	r3, r2, r3
 8006ee2:	43db      	mvns	r3, r3
 8006ee4:	69ba      	ldr	r2, [r7, #24]
 8006ee6:	4013      	ands	r3, r2
 8006ee8:	61bb      	str	r3, [r7, #24]
 8006eea:	683b      	ldr	r3, [r7, #0]
 8006eec:	68da      	ldr	r2, [r3, #12]
 8006eee:	69fb      	ldr	r3, [r7, #28]
 8006ef0:	005b      	lsls	r3, r3, #1
 8006ef2:	fa02 f303 	lsl.w	r3, r2, r3
 8006ef6:	69ba      	ldr	r2, [r7, #24]
 8006ef8:	4313      	orrs	r3, r2
 8006efa:	61bb      	str	r3, [r7, #24]
 8006efc:	687b      	ldr	r3, [r7, #4]
 8006efe:	69ba      	ldr	r2, [r7, #24]
 8006f00:	609a      	str	r2, [r3, #8]
 8006f02:	687b      	ldr	r3, [r7, #4]
 8006f04:	685b      	ldr	r3, [r3, #4]
 8006f06:	61bb      	str	r3, [r7, #24]
 8006f08:	2201      	movs	r2, #1
 8006f0a:	69fb      	ldr	r3, [r7, #28]
 8006f0c:	fa02 f303 	lsl.w	r3, r2, r3
 8006f10:	43db      	mvns	r3, r3
 8006f12:	69ba      	ldr	r2, [r7, #24]
 8006f14:	4013      	ands	r3, r2
 8006f16:	61bb      	str	r3, [r7, #24]
 8006f18:	683b      	ldr	r3, [r7, #0]
 8006f1a:	685b      	ldr	r3, [r3, #4]
 8006f1c:	091b      	lsrs	r3, r3, #4
 8006f1e:	f003 0201 	and.w	r2, r3, #1
 8006f22:	69fb      	ldr	r3, [r7, #28]
 8006f24:	fa02 f303 	lsl.w	r3, r2, r3
 8006f28:	69ba      	ldr	r2, [r7, #24]
 8006f2a:	4313      	orrs	r3, r2
 8006f2c:	61bb      	str	r3, [r7, #24]
 8006f2e:	687b      	ldr	r3, [r7, #4]
 8006f30:	69ba      	ldr	r2, [r7, #24]
 8006f32:	605a      	str	r2, [r3, #4]
 8006f34:	683b      	ldr	r3, [r7, #0]
 8006f36:	685b      	ldr	r3, [r3, #4]
 8006f38:	f003 0303 	and.w	r3, r3, #3
 8006f3c:	2b03      	cmp	r3, #3
 8006f3e:	d017      	beq.n	8006f70 <HAL_GPIO_Init+0xf0>
 8006f40:	687b      	ldr	r3, [r7, #4]
 8006f42:	68db      	ldr	r3, [r3, #12]
 8006f44:	61bb      	str	r3, [r7, #24]
 8006f46:	69fb      	ldr	r3, [r7, #28]
 8006f48:	005b      	lsls	r3, r3, #1
 8006f4a:	2203      	movs	r2, #3
 8006f4c:	fa02 f303 	lsl.w	r3, r2, r3
 8006f50:	43db      	mvns	r3, r3
 8006f52:	69ba      	ldr	r2, [r7, #24]
 8006f54:	4013      	ands	r3, r2
 8006f56:	61bb      	str	r3, [r7, #24]
 8006f58:	683b      	ldr	r3, [r7, #0]
 8006f5a:	689a      	ldr	r2, [r3, #8]
 8006f5c:	69fb      	ldr	r3, [r7, #28]
 8006f5e:	005b      	lsls	r3, r3, #1
 8006f60:	fa02 f303 	lsl.w	r3, r2, r3
 8006f64:	69ba      	ldr	r2, [r7, #24]
 8006f66:	4313      	orrs	r3, r2
 8006f68:	61bb      	str	r3, [r7, #24]
 8006f6a:	687b      	ldr	r3, [r7, #4]
 8006f6c:	69ba      	ldr	r2, [r7, #24]
 8006f6e:	60da      	str	r2, [r3, #12]
 8006f70:	683b      	ldr	r3, [r7, #0]
 8006f72:	685b      	ldr	r3, [r3, #4]
 8006f74:	f003 0303 	and.w	r3, r3, #3
 8006f78:	2b02      	cmp	r3, #2
 8006f7a:	d123      	bne.n	8006fc4 <HAL_GPIO_Init+0x144>
 8006f7c:	69fb      	ldr	r3, [r7, #28]
 8006f7e:	08da      	lsrs	r2, r3, #3
 8006f80:	687b      	ldr	r3, [r7, #4]
 8006f82:	3208      	adds	r2, #8
 8006f84:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8006f88:	61bb      	str	r3, [r7, #24]
 8006f8a:	69fb      	ldr	r3, [r7, #28]
 8006f8c:	f003 0307 	and.w	r3, r3, #7
 8006f90:	009b      	lsls	r3, r3, #2
 8006f92:	220f      	movs	r2, #15
 8006f94:	fa02 f303 	lsl.w	r3, r2, r3
 8006f98:	43db      	mvns	r3, r3
 8006f9a:	69ba      	ldr	r2, [r7, #24]
 8006f9c:	4013      	ands	r3, r2
 8006f9e:	61bb      	str	r3, [r7, #24]
 8006fa0:	683b      	ldr	r3, [r7, #0]
 8006fa2:	691a      	ldr	r2, [r3, #16]
 8006fa4:	69fb      	ldr	r3, [r7, #28]
 8006fa6:	f003 0307 	and.w	r3, r3, #7
 8006faa:	009b      	lsls	r3, r3, #2
 8006fac:	fa02 f303 	lsl.w	r3, r2, r3
 8006fb0:	69ba      	ldr	r2, [r7, #24]
 8006fb2:	4313      	orrs	r3, r2
 8006fb4:	61bb      	str	r3, [r7, #24]
 8006fb6:	69fb      	ldr	r3, [r7, #28]
 8006fb8:	08da      	lsrs	r2, r3, #3
 8006fba:	687b      	ldr	r3, [r7, #4]
 8006fbc:	3208      	adds	r2, #8
 8006fbe:	69b9      	ldr	r1, [r7, #24]
 8006fc0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8006fc4:	687b      	ldr	r3, [r7, #4]
 8006fc6:	681b      	ldr	r3, [r3, #0]
 8006fc8:	61bb      	str	r3, [r7, #24]
 8006fca:	69fb      	ldr	r3, [r7, #28]
 8006fcc:	005b      	lsls	r3, r3, #1
 8006fce:	2203      	movs	r2, #3
 8006fd0:	fa02 f303 	lsl.w	r3, r2, r3
 8006fd4:	43db      	mvns	r3, r3
 8006fd6:	69ba      	ldr	r2, [r7, #24]
 8006fd8:	4013      	ands	r3, r2
 8006fda:	61bb      	str	r3, [r7, #24]
 8006fdc:	683b      	ldr	r3, [r7, #0]
 8006fde:	685b      	ldr	r3, [r3, #4]
 8006fe0:	f003 0203 	and.w	r2, r3, #3
 8006fe4:	69fb      	ldr	r3, [r7, #28]
 8006fe6:	005b      	lsls	r3, r3, #1
 8006fe8:	fa02 f303 	lsl.w	r3, r2, r3
 8006fec:	69ba      	ldr	r2, [r7, #24]
 8006fee:	4313      	orrs	r3, r2
 8006ff0:	61bb      	str	r3, [r7, #24]
 8006ff2:	687b      	ldr	r3, [r7, #4]
 8006ff4:	69ba      	ldr	r2, [r7, #24]
 8006ff6:	601a      	str	r2, [r3, #0]
 8006ff8:	683b      	ldr	r3, [r7, #0]
 8006ffa:	685b      	ldr	r3, [r3, #4]
 8006ffc:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8007000:	2b00      	cmp	r3, #0
 8007002:	f000 80ae 	beq.w	8007162 <HAL_GPIO_Init+0x2e2>
 8007006:	2300      	movs	r3, #0
 8007008:	60fb      	str	r3, [r7, #12]
 800700a:	4b5d      	ldr	r3, [pc, #372]	; (8007180 <HAL_GPIO_Init+0x300>)
 800700c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800700e:	4a5c      	ldr	r2, [pc, #368]	; (8007180 <HAL_GPIO_Init+0x300>)
 8007010:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8007014:	6453      	str	r3, [r2, #68]	; 0x44
 8007016:	4b5a      	ldr	r3, [pc, #360]	; (8007180 <HAL_GPIO_Init+0x300>)
 8007018:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800701a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800701e:	60fb      	str	r3, [r7, #12]
 8007020:	68fb      	ldr	r3, [r7, #12]
 8007022:	4a58      	ldr	r2, [pc, #352]	; (8007184 <HAL_GPIO_Init+0x304>)
 8007024:	69fb      	ldr	r3, [r7, #28]
 8007026:	089b      	lsrs	r3, r3, #2
 8007028:	3302      	adds	r3, #2
 800702a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800702e:	61bb      	str	r3, [r7, #24]
 8007030:	69fb      	ldr	r3, [r7, #28]
 8007032:	f003 0303 	and.w	r3, r3, #3
 8007036:	009b      	lsls	r3, r3, #2
 8007038:	220f      	movs	r2, #15
 800703a:	fa02 f303 	lsl.w	r3, r2, r3
 800703e:	43db      	mvns	r3, r3
 8007040:	69ba      	ldr	r2, [r7, #24]
 8007042:	4013      	ands	r3, r2
 8007044:	61bb      	str	r3, [r7, #24]
 8007046:	687b      	ldr	r3, [r7, #4]
 8007048:	4a4f      	ldr	r2, [pc, #316]	; (8007188 <HAL_GPIO_Init+0x308>)
 800704a:	4293      	cmp	r3, r2
 800704c:	d025      	beq.n	800709a <HAL_GPIO_Init+0x21a>
 800704e:	687b      	ldr	r3, [r7, #4]
 8007050:	4a4e      	ldr	r2, [pc, #312]	; (800718c <HAL_GPIO_Init+0x30c>)
 8007052:	4293      	cmp	r3, r2
 8007054:	d01f      	beq.n	8007096 <HAL_GPIO_Init+0x216>
 8007056:	687b      	ldr	r3, [r7, #4]
 8007058:	4a4d      	ldr	r2, [pc, #308]	; (8007190 <HAL_GPIO_Init+0x310>)
 800705a:	4293      	cmp	r3, r2
 800705c:	d019      	beq.n	8007092 <HAL_GPIO_Init+0x212>
 800705e:	687b      	ldr	r3, [r7, #4]
 8007060:	4a4c      	ldr	r2, [pc, #304]	; (8007194 <HAL_GPIO_Init+0x314>)
 8007062:	4293      	cmp	r3, r2
 8007064:	d013      	beq.n	800708e <HAL_GPIO_Init+0x20e>
 8007066:	687b      	ldr	r3, [r7, #4]
 8007068:	4a4b      	ldr	r2, [pc, #300]	; (8007198 <HAL_GPIO_Init+0x318>)
 800706a:	4293      	cmp	r3, r2
 800706c:	d00d      	beq.n	800708a <HAL_GPIO_Init+0x20a>
 800706e:	687b      	ldr	r3, [r7, #4]
 8007070:	4a4a      	ldr	r2, [pc, #296]	; (800719c <HAL_GPIO_Init+0x31c>)
 8007072:	4293      	cmp	r3, r2
 8007074:	d007      	beq.n	8007086 <HAL_GPIO_Init+0x206>
 8007076:	687b      	ldr	r3, [r7, #4]
 8007078:	4a49      	ldr	r2, [pc, #292]	; (80071a0 <HAL_GPIO_Init+0x320>)
 800707a:	4293      	cmp	r3, r2
 800707c:	d101      	bne.n	8007082 <HAL_GPIO_Init+0x202>
 800707e:	2306      	movs	r3, #6
 8007080:	e00c      	b.n	800709c <HAL_GPIO_Init+0x21c>
 8007082:	2307      	movs	r3, #7
 8007084:	e00a      	b.n	800709c <HAL_GPIO_Init+0x21c>
 8007086:	2305      	movs	r3, #5
 8007088:	e008      	b.n	800709c <HAL_GPIO_Init+0x21c>
 800708a:	2304      	movs	r3, #4
 800708c:	e006      	b.n	800709c <HAL_GPIO_Init+0x21c>
 800708e:	2303      	movs	r3, #3
 8007090:	e004      	b.n	800709c <HAL_GPIO_Init+0x21c>
 8007092:	2302      	movs	r3, #2
 8007094:	e002      	b.n	800709c <HAL_GPIO_Init+0x21c>
 8007096:	2301      	movs	r3, #1
 8007098:	e000      	b.n	800709c <HAL_GPIO_Init+0x21c>
 800709a:	2300      	movs	r3, #0
 800709c:	69fa      	ldr	r2, [r7, #28]
 800709e:	f002 0203 	and.w	r2, r2, #3
 80070a2:	0092      	lsls	r2, r2, #2
 80070a4:	4093      	lsls	r3, r2
 80070a6:	69ba      	ldr	r2, [r7, #24]
 80070a8:	4313      	orrs	r3, r2
 80070aa:	61bb      	str	r3, [r7, #24]
 80070ac:	4935      	ldr	r1, [pc, #212]	; (8007184 <HAL_GPIO_Init+0x304>)
 80070ae:	69fb      	ldr	r3, [r7, #28]
 80070b0:	089b      	lsrs	r3, r3, #2
 80070b2:	3302      	adds	r3, #2
 80070b4:	69ba      	ldr	r2, [r7, #24]
 80070b6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80070ba:	4b3a      	ldr	r3, [pc, #232]	; (80071a4 <HAL_GPIO_Init+0x324>)
 80070bc:	689b      	ldr	r3, [r3, #8]
 80070be:	61bb      	str	r3, [r7, #24]
 80070c0:	693b      	ldr	r3, [r7, #16]
 80070c2:	43db      	mvns	r3, r3
 80070c4:	69ba      	ldr	r2, [r7, #24]
 80070c6:	4013      	ands	r3, r2
 80070c8:	61bb      	str	r3, [r7, #24]
 80070ca:	683b      	ldr	r3, [r7, #0]
 80070cc:	685b      	ldr	r3, [r3, #4]
 80070ce:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80070d2:	2b00      	cmp	r3, #0
 80070d4:	d003      	beq.n	80070de <HAL_GPIO_Init+0x25e>
 80070d6:	69ba      	ldr	r2, [r7, #24]
 80070d8:	693b      	ldr	r3, [r7, #16]
 80070da:	4313      	orrs	r3, r2
 80070dc:	61bb      	str	r3, [r7, #24]
 80070de:	4a31      	ldr	r2, [pc, #196]	; (80071a4 <HAL_GPIO_Init+0x324>)
 80070e0:	69bb      	ldr	r3, [r7, #24]
 80070e2:	6093      	str	r3, [r2, #8]
 80070e4:	4b2f      	ldr	r3, [pc, #188]	; (80071a4 <HAL_GPIO_Init+0x324>)
 80070e6:	68db      	ldr	r3, [r3, #12]
 80070e8:	61bb      	str	r3, [r7, #24]
 80070ea:	693b      	ldr	r3, [r7, #16]
 80070ec:	43db      	mvns	r3, r3
 80070ee:	69ba      	ldr	r2, [r7, #24]
 80070f0:	4013      	ands	r3, r2
 80070f2:	61bb      	str	r3, [r7, #24]
 80070f4:	683b      	ldr	r3, [r7, #0]
 80070f6:	685b      	ldr	r3, [r3, #4]
 80070f8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80070fc:	2b00      	cmp	r3, #0
 80070fe:	d003      	beq.n	8007108 <HAL_GPIO_Init+0x288>
 8007100:	69ba      	ldr	r2, [r7, #24]
 8007102:	693b      	ldr	r3, [r7, #16]
 8007104:	4313      	orrs	r3, r2
 8007106:	61bb      	str	r3, [r7, #24]
 8007108:	4a26      	ldr	r2, [pc, #152]	; (80071a4 <HAL_GPIO_Init+0x324>)
 800710a:	69bb      	ldr	r3, [r7, #24]
 800710c:	60d3      	str	r3, [r2, #12]
 800710e:	4b25      	ldr	r3, [pc, #148]	; (80071a4 <HAL_GPIO_Init+0x324>)
 8007110:	685b      	ldr	r3, [r3, #4]
 8007112:	61bb      	str	r3, [r7, #24]
 8007114:	693b      	ldr	r3, [r7, #16]
 8007116:	43db      	mvns	r3, r3
 8007118:	69ba      	ldr	r2, [r7, #24]
 800711a:	4013      	ands	r3, r2
 800711c:	61bb      	str	r3, [r7, #24]
 800711e:	683b      	ldr	r3, [r7, #0]
 8007120:	685b      	ldr	r3, [r3, #4]
 8007122:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007126:	2b00      	cmp	r3, #0
 8007128:	d003      	beq.n	8007132 <HAL_GPIO_Init+0x2b2>
 800712a:	69ba      	ldr	r2, [r7, #24]
 800712c:	693b      	ldr	r3, [r7, #16]
 800712e:	4313      	orrs	r3, r2
 8007130:	61bb      	str	r3, [r7, #24]
 8007132:	4a1c      	ldr	r2, [pc, #112]	; (80071a4 <HAL_GPIO_Init+0x324>)
 8007134:	69bb      	ldr	r3, [r7, #24]
 8007136:	6053      	str	r3, [r2, #4]
 8007138:	4b1a      	ldr	r3, [pc, #104]	; (80071a4 <HAL_GPIO_Init+0x324>)
 800713a:	681b      	ldr	r3, [r3, #0]
 800713c:	61bb      	str	r3, [r7, #24]
 800713e:	693b      	ldr	r3, [r7, #16]
 8007140:	43db      	mvns	r3, r3
 8007142:	69ba      	ldr	r2, [r7, #24]
 8007144:	4013      	ands	r3, r2
 8007146:	61bb      	str	r3, [r7, #24]
 8007148:	683b      	ldr	r3, [r7, #0]
 800714a:	685b      	ldr	r3, [r3, #4]
 800714c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8007150:	2b00      	cmp	r3, #0
 8007152:	d003      	beq.n	800715c <HAL_GPIO_Init+0x2dc>
 8007154:	69ba      	ldr	r2, [r7, #24]
 8007156:	693b      	ldr	r3, [r7, #16]
 8007158:	4313      	orrs	r3, r2
 800715a:	61bb      	str	r3, [r7, #24]
 800715c:	4a11      	ldr	r2, [pc, #68]	; (80071a4 <HAL_GPIO_Init+0x324>)
 800715e:	69bb      	ldr	r3, [r7, #24]
 8007160:	6013      	str	r3, [r2, #0]
 8007162:	69fb      	ldr	r3, [r7, #28]
 8007164:	3301      	adds	r3, #1
 8007166:	61fb      	str	r3, [r7, #28]
 8007168:	69fb      	ldr	r3, [r7, #28]
 800716a:	2b0f      	cmp	r3, #15
 800716c:	f67f ae96 	bls.w	8006e9c <HAL_GPIO_Init+0x1c>
 8007170:	bf00      	nop
 8007172:	bf00      	nop
 8007174:	3724      	adds	r7, #36	; 0x24
 8007176:	46bd      	mov	sp, r7
 8007178:	f85d 7b04 	ldr.w	r7, [sp], #4
 800717c:	4770      	bx	lr
 800717e:	bf00      	nop
 8007180:	40023800 	.word	0x40023800
 8007184:	40013800 	.word	0x40013800
 8007188:	40020000 	.word	0x40020000
 800718c:	40020400 	.word	0x40020400
 8007190:	40020800 	.word	0x40020800
 8007194:	40020c00 	.word	0x40020c00
 8007198:	40021000 	.word	0x40021000
 800719c:	40021400 	.word	0x40021400
 80071a0:	40021800 	.word	0x40021800
 80071a4:	40013c00 	.word	0x40013c00

080071a8 <HAL_GPIO_ReadPin>:
 80071a8:	b480      	push	{r7}
 80071aa:	b085      	sub	sp, #20
 80071ac:	af00      	add	r7, sp, #0
 80071ae:	6078      	str	r0, [r7, #4]
 80071b0:	460b      	mov	r3, r1
 80071b2:	807b      	strh	r3, [r7, #2]
 80071b4:	687b      	ldr	r3, [r7, #4]
 80071b6:	691a      	ldr	r2, [r3, #16]
 80071b8:	887b      	ldrh	r3, [r7, #2]
 80071ba:	4013      	ands	r3, r2
 80071bc:	2b00      	cmp	r3, #0
 80071be:	d002      	beq.n	80071c6 <HAL_GPIO_ReadPin+0x1e>
 80071c0:	2301      	movs	r3, #1
 80071c2:	73fb      	strb	r3, [r7, #15]
 80071c4:	e001      	b.n	80071ca <HAL_GPIO_ReadPin+0x22>
 80071c6:	2300      	movs	r3, #0
 80071c8:	73fb      	strb	r3, [r7, #15]
 80071ca:	7bfb      	ldrb	r3, [r7, #15]
 80071cc:	4618      	mov	r0, r3
 80071ce:	3714      	adds	r7, #20
 80071d0:	46bd      	mov	sp, r7
 80071d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071d6:	4770      	bx	lr

080071d8 <HAL_GPIO_WritePin>:
 80071d8:	b480      	push	{r7}
 80071da:	b083      	sub	sp, #12
 80071dc:	af00      	add	r7, sp, #0
 80071de:	6078      	str	r0, [r7, #4]
 80071e0:	460b      	mov	r3, r1
 80071e2:	807b      	strh	r3, [r7, #2]
 80071e4:	4613      	mov	r3, r2
 80071e6:	707b      	strb	r3, [r7, #1]
 80071e8:	787b      	ldrb	r3, [r7, #1]
 80071ea:	2b00      	cmp	r3, #0
 80071ec:	d003      	beq.n	80071f6 <HAL_GPIO_WritePin+0x1e>
 80071ee:	887a      	ldrh	r2, [r7, #2]
 80071f0:	687b      	ldr	r3, [r7, #4]
 80071f2:	619a      	str	r2, [r3, #24]
 80071f4:	e003      	b.n	80071fe <HAL_GPIO_WritePin+0x26>
 80071f6:	887b      	ldrh	r3, [r7, #2]
 80071f8:	041a      	lsls	r2, r3, #16
 80071fa:	687b      	ldr	r3, [r7, #4]
 80071fc:	619a      	str	r2, [r3, #24]
 80071fe:	bf00      	nop
 8007200:	370c      	adds	r7, #12
 8007202:	46bd      	mov	sp, r7
 8007204:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007208:	4770      	bx	lr

0800720a <HAL_GPIO_TogglePin>:
 800720a:	b480      	push	{r7}
 800720c:	b085      	sub	sp, #20
 800720e:	af00      	add	r7, sp, #0
 8007210:	6078      	str	r0, [r7, #4]
 8007212:	460b      	mov	r3, r1
 8007214:	807b      	strh	r3, [r7, #2]
 8007216:	687b      	ldr	r3, [r7, #4]
 8007218:	695b      	ldr	r3, [r3, #20]
 800721a:	60fb      	str	r3, [r7, #12]
 800721c:	887a      	ldrh	r2, [r7, #2]
 800721e:	68fb      	ldr	r3, [r7, #12]
 8007220:	4013      	ands	r3, r2
 8007222:	041a      	lsls	r2, r3, #16
 8007224:	68fb      	ldr	r3, [r7, #12]
 8007226:	43d9      	mvns	r1, r3
 8007228:	887b      	ldrh	r3, [r7, #2]
 800722a:	400b      	ands	r3, r1
 800722c:	431a      	orrs	r2, r3
 800722e:	687b      	ldr	r3, [r7, #4]
 8007230:	619a      	str	r2, [r3, #24]
 8007232:	bf00      	nop
 8007234:	3714      	adds	r7, #20
 8007236:	46bd      	mov	sp, r7
 8007238:	f85d 7b04 	ldr.w	r7, [sp], #4
 800723c:	4770      	bx	lr
	...

08007240 <HAL_GPIO_EXTI_IRQHandler>:
 8007240:	b580      	push	{r7, lr}
 8007242:	b082      	sub	sp, #8
 8007244:	af00      	add	r7, sp, #0
 8007246:	4603      	mov	r3, r0
 8007248:	80fb      	strh	r3, [r7, #6]
 800724a:	4b08      	ldr	r3, [pc, #32]	; (800726c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800724c:	695a      	ldr	r2, [r3, #20]
 800724e:	88fb      	ldrh	r3, [r7, #6]
 8007250:	4013      	ands	r3, r2
 8007252:	2b00      	cmp	r3, #0
 8007254:	d006      	beq.n	8007264 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8007256:	4a05      	ldr	r2, [pc, #20]	; (800726c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8007258:	88fb      	ldrh	r3, [r7, #6]
 800725a:	6153      	str	r3, [r2, #20]
 800725c:	88fb      	ldrh	r3, [r7, #6]
 800725e:	4618      	mov	r0, r3
 8007260:	f7fd fad0 	bl	8004804 <HAL_GPIO_EXTI_Callback>
 8007264:	bf00      	nop
 8007266:	3708      	adds	r7, #8
 8007268:	46bd      	mov	sp, r7
 800726a:	bd80      	pop	{r7, pc}
 800726c:	40013c00 	.word	0x40013c00

08007270 <HAL_PWREx_EnableOverDrive>:
 8007270:	b580      	push	{r7, lr}
 8007272:	b082      	sub	sp, #8
 8007274:	af00      	add	r7, sp, #0
 8007276:	2300      	movs	r3, #0
 8007278:	607b      	str	r3, [r7, #4]
 800727a:	2300      	movs	r3, #0
 800727c:	603b      	str	r3, [r7, #0]
 800727e:	4b20      	ldr	r3, [pc, #128]	; (8007300 <HAL_PWREx_EnableOverDrive+0x90>)
 8007280:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007282:	4a1f      	ldr	r2, [pc, #124]	; (8007300 <HAL_PWREx_EnableOverDrive+0x90>)
 8007284:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8007288:	6413      	str	r3, [r2, #64]	; 0x40
 800728a:	4b1d      	ldr	r3, [pc, #116]	; (8007300 <HAL_PWREx_EnableOverDrive+0x90>)
 800728c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800728e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007292:	603b      	str	r3, [r7, #0]
 8007294:	683b      	ldr	r3, [r7, #0]
 8007296:	4b1b      	ldr	r3, [pc, #108]	; (8007304 <HAL_PWREx_EnableOverDrive+0x94>)
 8007298:	2201      	movs	r2, #1
 800729a:	601a      	str	r2, [r3, #0]
 800729c:	f7fe f8f6 	bl	800548c <HAL_GetTick>
 80072a0:	6078      	str	r0, [r7, #4]
 80072a2:	e009      	b.n	80072b8 <HAL_PWREx_EnableOverDrive+0x48>
 80072a4:	f7fe f8f2 	bl	800548c <HAL_GetTick>
 80072a8:	4602      	mov	r2, r0
 80072aa:	687b      	ldr	r3, [r7, #4]
 80072ac:	1ad3      	subs	r3, r2, r3
 80072ae:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80072b2:	d901      	bls.n	80072b8 <HAL_PWREx_EnableOverDrive+0x48>
 80072b4:	2303      	movs	r3, #3
 80072b6:	e01f      	b.n	80072f8 <HAL_PWREx_EnableOverDrive+0x88>
 80072b8:	4b13      	ldr	r3, [pc, #76]	; (8007308 <HAL_PWREx_EnableOverDrive+0x98>)
 80072ba:	685b      	ldr	r3, [r3, #4]
 80072bc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80072c0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80072c4:	d1ee      	bne.n	80072a4 <HAL_PWREx_EnableOverDrive+0x34>
 80072c6:	4b11      	ldr	r3, [pc, #68]	; (800730c <HAL_PWREx_EnableOverDrive+0x9c>)
 80072c8:	2201      	movs	r2, #1
 80072ca:	601a      	str	r2, [r3, #0]
 80072cc:	f7fe f8de 	bl	800548c <HAL_GetTick>
 80072d0:	6078      	str	r0, [r7, #4]
 80072d2:	e009      	b.n	80072e8 <HAL_PWREx_EnableOverDrive+0x78>
 80072d4:	f7fe f8da 	bl	800548c <HAL_GetTick>
 80072d8:	4602      	mov	r2, r0
 80072da:	687b      	ldr	r3, [r7, #4]
 80072dc:	1ad3      	subs	r3, r2, r3
 80072de:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80072e2:	d901      	bls.n	80072e8 <HAL_PWREx_EnableOverDrive+0x78>
 80072e4:	2303      	movs	r3, #3
 80072e6:	e007      	b.n	80072f8 <HAL_PWREx_EnableOverDrive+0x88>
 80072e8:	4b07      	ldr	r3, [pc, #28]	; (8007308 <HAL_PWREx_EnableOverDrive+0x98>)
 80072ea:	685b      	ldr	r3, [r3, #4]
 80072ec:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80072f0:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80072f4:	d1ee      	bne.n	80072d4 <HAL_PWREx_EnableOverDrive+0x64>
 80072f6:	2300      	movs	r3, #0
 80072f8:	4618      	mov	r0, r3
 80072fa:	3708      	adds	r7, #8
 80072fc:	46bd      	mov	sp, r7
 80072fe:	bd80      	pop	{r7, pc}
 8007300:	40023800 	.word	0x40023800
 8007304:	420e0040 	.word	0x420e0040
 8007308:	40007000 	.word	0x40007000
 800730c:	420e0044 	.word	0x420e0044

08007310 <HAL_RCC_ClockConfig>:
 8007310:	b580      	push	{r7, lr}
 8007312:	b084      	sub	sp, #16
 8007314:	af00      	add	r7, sp, #0
 8007316:	6078      	str	r0, [r7, #4]
 8007318:	6039      	str	r1, [r7, #0]
 800731a:	687b      	ldr	r3, [r7, #4]
 800731c:	2b00      	cmp	r3, #0
 800731e:	d101      	bne.n	8007324 <HAL_RCC_ClockConfig+0x14>
 8007320:	2301      	movs	r3, #1
 8007322:	e0cc      	b.n	80074be <HAL_RCC_ClockConfig+0x1ae>
 8007324:	4b68      	ldr	r3, [pc, #416]	; (80074c8 <HAL_RCC_ClockConfig+0x1b8>)
 8007326:	681b      	ldr	r3, [r3, #0]
 8007328:	f003 030f 	and.w	r3, r3, #15
 800732c:	683a      	ldr	r2, [r7, #0]
 800732e:	429a      	cmp	r2, r3
 8007330:	d90c      	bls.n	800734c <HAL_RCC_ClockConfig+0x3c>
 8007332:	4b65      	ldr	r3, [pc, #404]	; (80074c8 <HAL_RCC_ClockConfig+0x1b8>)
 8007334:	683a      	ldr	r2, [r7, #0]
 8007336:	b2d2      	uxtb	r2, r2
 8007338:	701a      	strb	r2, [r3, #0]
 800733a:	4b63      	ldr	r3, [pc, #396]	; (80074c8 <HAL_RCC_ClockConfig+0x1b8>)
 800733c:	681b      	ldr	r3, [r3, #0]
 800733e:	f003 030f 	and.w	r3, r3, #15
 8007342:	683a      	ldr	r2, [r7, #0]
 8007344:	429a      	cmp	r2, r3
 8007346:	d001      	beq.n	800734c <HAL_RCC_ClockConfig+0x3c>
 8007348:	2301      	movs	r3, #1
 800734a:	e0b8      	b.n	80074be <HAL_RCC_ClockConfig+0x1ae>
 800734c:	687b      	ldr	r3, [r7, #4]
 800734e:	681b      	ldr	r3, [r3, #0]
 8007350:	f003 0302 	and.w	r3, r3, #2
 8007354:	2b00      	cmp	r3, #0
 8007356:	d020      	beq.n	800739a <HAL_RCC_ClockConfig+0x8a>
 8007358:	687b      	ldr	r3, [r7, #4]
 800735a:	681b      	ldr	r3, [r3, #0]
 800735c:	f003 0304 	and.w	r3, r3, #4
 8007360:	2b00      	cmp	r3, #0
 8007362:	d005      	beq.n	8007370 <HAL_RCC_ClockConfig+0x60>
 8007364:	4b59      	ldr	r3, [pc, #356]	; (80074cc <HAL_RCC_ClockConfig+0x1bc>)
 8007366:	689b      	ldr	r3, [r3, #8]
 8007368:	4a58      	ldr	r2, [pc, #352]	; (80074cc <HAL_RCC_ClockConfig+0x1bc>)
 800736a:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800736e:	6093      	str	r3, [r2, #8]
 8007370:	687b      	ldr	r3, [r7, #4]
 8007372:	681b      	ldr	r3, [r3, #0]
 8007374:	f003 0308 	and.w	r3, r3, #8
 8007378:	2b00      	cmp	r3, #0
 800737a:	d005      	beq.n	8007388 <HAL_RCC_ClockConfig+0x78>
 800737c:	4b53      	ldr	r3, [pc, #332]	; (80074cc <HAL_RCC_ClockConfig+0x1bc>)
 800737e:	689b      	ldr	r3, [r3, #8]
 8007380:	4a52      	ldr	r2, [pc, #328]	; (80074cc <HAL_RCC_ClockConfig+0x1bc>)
 8007382:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8007386:	6093      	str	r3, [r2, #8]
 8007388:	4b50      	ldr	r3, [pc, #320]	; (80074cc <HAL_RCC_ClockConfig+0x1bc>)
 800738a:	689b      	ldr	r3, [r3, #8]
 800738c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8007390:	687b      	ldr	r3, [r7, #4]
 8007392:	689b      	ldr	r3, [r3, #8]
 8007394:	494d      	ldr	r1, [pc, #308]	; (80074cc <HAL_RCC_ClockConfig+0x1bc>)
 8007396:	4313      	orrs	r3, r2
 8007398:	608b      	str	r3, [r1, #8]
 800739a:	687b      	ldr	r3, [r7, #4]
 800739c:	681b      	ldr	r3, [r3, #0]
 800739e:	f003 0301 	and.w	r3, r3, #1
 80073a2:	2b00      	cmp	r3, #0
 80073a4:	d044      	beq.n	8007430 <HAL_RCC_ClockConfig+0x120>
 80073a6:	687b      	ldr	r3, [r7, #4]
 80073a8:	685b      	ldr	r3, [r3, #4]
 80073aa:	2b01      	cmp	r3, #1
 80073ac:	d107      	bne.n	80073be <HAL_RCC_ClockConfig+0xae>
 80073ae:	4b47      	ldr	r3, [pc, #284]	; (80074cc <HAL_RCC_ClockConfig+0x1bc>)
 80073b0:	681b      	ldr	r3, [r3, #0]
 80073b2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80073b6:	2b00      	cmp	r3, #0
 80073b8:	d119      	bne.n	80073ee <HAL_RCC_ClockConfig+0xde>
 80073ba:	2301      	movs	r3, #1
 80073bc:	e07f      	b.n	80074be <HAL_RCC_ClockConfig+0x1ae>
 80073be:	687b      	ldr	r3, [r7, #4]
 80073c0:	685b      	ldr	r3, [r3, #4]
 80073c2:	2b02      	cmp	r3, #2
 80073c4:	d003      	beq.n	80073ce <HAL_RCC_ClockConfig+0xbe>
 80073c6:	687b      	ldr	r3, [r7, #4]
 80073c8:	685b      	ldr	r3, [r3, #4]
 80073ca:	2b03      	cmp	r3, #3
 80073cc:	d107      	bne.n	80073de <HAL_RCC_ClockConfig+0xce>
 80073ce:	4b3f      	ldr	r3, [pc, #252]	; (80074cc <HAL_RCC_ClockConfig+0x1bc>)
 80073d0:	681b      	ldr	r3, [r3, #0]
 80073d2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80073d6:	2b00      	cmp	r3, #0
 80073d8:	d109      	bne.n	80073ee <HAL_RCC_ClockConfig+0xde>
 80073da:	2301      	movs	r3, #1
 80073dc:	e06f      	b.n	80074be <HAL_RCC_ClockConfig+0x1ae>
 80073de:	4b3b      	ldr	r3, [pc, #236]	; (80074cc <HAL_RCC_ClockConfig+0x1bc>)
 80073e0:	681b      	ldr	r3, [r3, #0]
 80073e2:	f003 0302 	and.w	r3, r3, #2
 80073e6:	2b00      	cmp	r3, #0
 80073e8:	d101      	bne.n	80073ee <HAL_RCC_ClockConfig+0xde>
 80073ea:	2301      	movs	r3, #1
 80073ec:	e067      	b.n	80074be <HAL_RCC_ClockConfig+0x1ae>
 80073ee:	4b37      	ldr	r3, [pc, #220]	; (80074cc <HAL_RCC_ClockConfig+0x1bc>)
 80073f0:	689b      	ldr	r3, [r3, #8]
 80073f2:	f023 0203 	bic.w	r2, r3, #3
 80073f6:	687b      	ldr	r3, [r7, #4]
 80073f8:	685b      	ldr	r3, [r3, #4]
 80073fa:	4934      	ldr	r1, [pc, #208]	; (80074cc <HAL_RCC_ClockConfig+0x1bc>)
 80073fc:	4313      	orrs	r3, r2
 80073fe:	608b      	str	r3, [r1, #8]
 8007400:	f7fe f844 	bl	800548c <HAL_GetTick>
 8007404:	60f8      	str	r0, [r7, #12]
 8007406:	e00a      	b.n	800741e <HAL_RCC_ClockConfig+0x10e>
 8007408:	f7fe f840 	bl	800548c <HAL_GetTick>
 800740c:	4602      	mov	r2, r0
 800740e:	68fb      	ldr	r3, [r7, #12]
 8007410:	1ad3      	subs	r3, r2, r3
 8007412:	f241 3288 	movw	r2, #5000	; 0x1388
 8007416:	4293      	cmp	r3, r2
 8007418:	d901      	bls.n	800741e <HAL_RCC_ClockConfig+0x10e>
 800741a:	2303      	movs	r3, #3
 800741c:	e04f      	b.n	80074be <HAL_RCC_ClockConfig+0x1ae>
 800741e:	4b2b      	ldr	r3, [pc, #172]	; (80074cc <HAL_RCC_ClockConfig+0x1bc>)
 8007420:	689b      	ldr	r3, [r3, #8]
 8007422:	f003 020c 	and.w	r2, r3, #12
 8007426:	687b      	ldr	r3, [r7, #4]
 8007428:	685b      	ldr	r3, [r3, #4]
 800742a:	009b      	lsls	r3, r3, #2
 800742c:	429a      	cmp	r2, r3
 800742e:	d1eb      	bne.n	8007408 <HAL_RCC_ClockConfig+0xf8>
 8007430:	4b25      	ldr	r3, [pc, #148]	; (80074c8 <HAL_RCC_ClockConfig+0x1b8>)
 8007432:	681b      	ldr	r3, [r3, #0]
 8007434:	f003 030f 	and.w	r3, r3, #15
 8007438:	683a      	ldr	r2, [r7, #0]
 800743a:	429a      	cmp	r2, r3
 800743c:	d20c      	bcs.n	8007458 <HAL_RCC_ClockConfig+0x148>
 800743e:	4b22      	ldr	r3, [pc, #136]	; (80074c8 <HAL_RCC_ClockConfig+0x1b8>)
 8007440:	683a      	ldr	r2, [r7, #0]
 8007442:	b2d2      	uxtb	r2, r2
 8007444:	701a      	strb	r2, [r3, #0]
 8007446:	4b20      	ldr	r3, [pc, #128]	; (80074c8 <HAL_RCC_ClockConfig+0x1b8>)
 8007448:	681b      	ldr	r3, [r3, #0]
 800744a:	f003 030f 	and.w	r3, r3, #15
 800744e:	683a      	ldr	r2, [r7, #0]
 8007450:	429a      	cmp	r2, r3
 8007452:	d001      	beq.n	8007458 <HAL_RCC_ClockConfig+0x148>
 8007454:	2301      	movs	r3, #1
 8007456:	e032      	b.n	80074be <HAL_RCC_ClockConfig+0x1ae>
 8007458:	687b      	ldr	r3, [r7, #4]
 800745a:	681b      	ldr	r3, [r3, #0]
 800745c:	f003 0304 	and.w	r3, r3, #4
 8007460:	2b00      	cmp	r3, #0
 8007462:	d008      	beq.n	8007476 <HAL_RCC_ClockConfig+0x166>
 8007464:	4b19      	ldr	r3, [pc, #100]	; (80074cc <HAL_RCC_ClockConfig+0x1bc>)
 8007466:	689b      	ldr	r3, [r3, #8]
 8007468:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 800746c:	687b      	ldr	r3, [r7, #4]
 800746e:	68db      	ldr	r3, [r3, #12]
 8007470:	4916      	ldr	r1, [pc, #88]	; (80074cc <HAL_RCC_ClockConfig+0x1bc>)
 8007472:	4313      	orrs	r3, r2
 8007474:	608b      	str	r3, [r1, #8]
 8007476:	687b      	ldr	r3, [r7, #4]
 8007478:	681b      	ldr	r3, [r3, #0]
 800747a:	f003 0308 	and.w	r3, r3, #8
 800747e:	2b00      	cmp	r3, #0
 8007480:	d009      	beq.n	8007496 <HAL_RCC_ClockConfig+0x186>
 8007482:	4b12      	ldr	r3, [pc, #72]	; (80074cc <HAL_RCC_ClockConfig+0x1bc>)
 8007484:	689b      	ldr	r3, [r3, #8]
 8007486:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 800748a:	687b      	ldr	r3, [r7, #4]
 800748c:	691b      	ldr	r3, [r3, #16]
 800748e:	00db      	lsls	r3, r3, #3
 8007490:	490e      	ldr	r1, [pc, #56]	; (80074cc <HAL_RCC_ClockConfig+0x1bc>)
 8007492:	4313      	orrs	r3, r2
 8007494:	608b      	str	r3, [r1, #8]
 8007496:	f000 f855 	bl	8007544 <HAL_RCC_GetSysClockFreq>
 800749a:	4602      	mov	r2, r0
 800749c:	4b0b      	ldr	r3, [pc, #44]	; (80074cc <HAL_RCC_ClockConfig+0x1bc>)
 800749e:	689b      	ldr	r3, [r3, #8]
 80074a0:	091b      	lsrs	r3, r3, #4
 80074a2:	f003 030f 	and.w	r3, r3, #15
 80074a6:	490a      	ldr	r1, [pc, #40]	; (80074d0 <HAL_RCC_ClockConfig+0x1c0>)
 80074a8:	5ccb      	ldrb	r3, [r1, r3]
 80074aa:	fa22 f303 	lsr.w	r3, r2, r3
 80074ae:	4a09      	ldr	r2, [pc, #36]	; (80074d4 <HAL_RCC_ClockConfig+0x1c4>)
 80074b0:	6013      	str	r3, [r2, #0]
 80074b2:	4b09      	ldr	r3, [pc, #36]	; (80074d8 <HAL_RCC_ClockConfig+0x1c8>)
 80074b4:	681b      	ldr	r3, [r3, #0]
 80074b6:	4618      	mov	r0, r3
 80074b8:	f7fd ffa4 	bl	8005404 <HAL_InitTick>
 80074bc:	2300      	movs	r3, #0
 80074be:	4618      	mov	r0, r3
 80074c0:	3710      	adds	r7, #16
 80074c2:	46bd      	mov	sp, r7
 80074c4:	bd80      	pop	{r7, pc}
 80074c6:	bf00      	nop
 80074c8:	40023c00 	.word	0x40023c00
 80074cc:	40023800 	.word	0x40023800
 80074d0:	0800f27c 	.word	0x0800f27c
 80074d4:	2000006c 	.word	0x2000006c
 80074d8:	20000070 	.word	0x20000070

080074dc <HAL_RCC_GetHCLKFreq>:
 80074dc:	b480      	push	{r7}
 80074de:	af00      	add	r7, sp, #0
 80074e0:	4b03      	ldr	r3, [pc, #12]	; (80074f0 <HAL_RCC_GetHCLKFreq+0x14>)
 80074e2:	681b      	ldr	r3, [r3, #0]
 80074e4:	4618      	mov	r0, r3
 80074e6:	46bd      	mov	sp, r7
 80074e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074ec:	4770      	bx	lr
 80074ee:	bf00      	nop
 80074f0:	2000006c 	.word	0x2000006c

080074f4 <HAL_RCC_GetPCLK1Freq>:
 80074f4:	b580      	push	{r7, lr}
 80074f6:	af00      	add	r7, sp, #0
 80074f8:	f7ff fff0 	bl	80074dc <HAL_RCC_GetHCLKFreq>
 80074fc:	4602      	mov	r2, r0
 80074fe:	4b05      	ldr	r3, [pc, #20]	; (8007514 <HAL_RCC_GetPCLK1Freq+0x20>)
 8007500:	689b      	ldr	r3, [r3, #8]
 8007502:	0a9b      	lsrs	r3, r3, #10
 8007504:	f003 0307 	and.w	r3, r3, #7
 8007508:	4903      	ldr	r1, [pc, #12]	; (8007518 <HAL_RCC_GetPCLK1Freq+0x24>)
 800750a:	5ccb      	ldrb	r3, [r1, r3]
 800750c:	fa22 f303 	lsr.w	r3, r2, r3
 8007510:	4618      	mov	r0, r3
 8007512:	bd80      	pop	{r7, pc}
 8007514:	40023800 	.word	0x40023800
 8007518:	0800f28c 	.word	0x0800f28c

0800751c <HAL_RCC_GetPCLK2Freq>:
 800751c:	b580      	push	{r7, lr}
 800751e:	af00      	add	r7, sp, #0
 8007520:	f7ff ffdc 	bl	80074dc <HAL_RCC_GetHCLKFreq>
 8007524:	4602      	mov	r2, r0
 8007526:	4b05      	ldr	r3, [pc, #20]	; (800753c <HAL_RCC_GetPCLK2Freq+0x20>)
 8007528:	689b      	ldr	r3, [r3, #8]
 800752a:	0b5b      	lsrs	r3, r3, #13
 800752c:	f003 0307 	and.w	r3, r3, #7
 8007530:	4903      	ldr	r1, [pc, #12]	; (8007540 <HAL_RCC_GetPCLK2Freq+0x24>)
 8007532:	5ccb      	ldrb	r3, [r1, r3]
 8007534:	fa22 f303 	lsr.w	r3, r2, r3
 8007538:	4618      	mov	r0, r3
 800753a:	bd80      	pop	{r7, pc}
 800753c:	40023800 	.word	0x40023800
 8007540:	0800f28c 	.word	0x0800f28c

08007544 <HAL_RCC_GetSysClockFreq>:
 8007544:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8007548:	b0ae      	sub	sp, #184	; 0xb8
 800754a:	af00      	add	r7, sp, #0
 800754c:	2300      	movs	r3, #0
 800754e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8007552:	2300      	movs	r3, #0
 8007554:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8007558:	2300      	movs	r3, #0
 800755a:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800755e:	2300      	movs	r3, #0
 8007560:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8007564:	2300      	movs	r3, #0
 8007566:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800756a:	4bcb      	ldr	r3, [pc, #812]	; (8007898 <HAL_RCC_GetSysClockFreq+0x354>)
 800756c:	689b      	ldr	r3, [r3, #8]
 800756e:	f003 030c 	and.w	r3, r3, #12
 8007572:	2b0c      	cmp	r3, #12
 8007574:	f200 8206 	bhi.w	8007984 <HAL_RCC_GetSysClockFreq+0x440>
 8007578:	a201      	add	r2, pc, #4	; (adr r2, 8007580 <HAL_RCC_GetSysClockFreq+0x3c>)
 800757a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800757e:	bf00      	nop
 8007580:	080075b5 	.word	0x080075b5
 8007584:	08007985 	.word	0x08007985
 8007588:	08007985 	.word	0x08007985
 800758c:	08007985 	.word	0x08007985
 8007590:	080075bd 	.word	0x080075bd
 8007594:	08007985 	.word	0x08007985
 8007598:	08007985 	.word	0x08007985
 800759c:	08007985 	.word	0x08007985
 80075a0:	080075c5 	.word	0x080075c5
 80075a4:	08007985 	.word	0x08007985
 80075a8:	08007985 	.word	0x08007985
 80075ac:	08007985 	.word	0x08007985
 80075b0:	080077b5 	.word	0x080077b5
 80075b4:	4bb9      	ldr	r3, [pc, #740]	; (800789c <HAL_RCC_GetSysClockFreq+0x358>)
 80075b6:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80075ba:	e1e7      	b.n	800798c <HAL_RCC_GetSysClockFreq+0x448>
 80075bc:	4bb8      	ldr	r3, [pc, #736]	; (80078a0 <HAL_RCC_GetSysClockFreq+0x35c>)
 80075be:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80075c2:	e1e3      	b.n	800798c <HAL_RCC_GetSysClockFreq+0x448>
 80075c4:	4bb4      	ldr	r3, [pc, #720]	; (8007898 <HAL_RCC_GetSysClockFreq+0x354>)
 80075c6:	685b      	ldr	r3, [r3, #4]
 80075c8:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80075cc:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 80075d0:	4bb1      	ldr	r3, [pc, #708]	; (8007898 <HAL_RCC_GetSysClockFreq+0x354>)
 80075d2:	685b      	ldr	r3, [r3, #4]
 80075d4:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80075d8:	2b00      	cmp	r3, #0
 80075da:	d071      	beq.n	80076c0 <HAL_RCC_GetSysClockFreq+0x17c>
 80075dc:	4bae      	ldr	r3, [pc, #696]	; (8007898 <HAL_RCC_GetSysClockFreq+0x354>)
 80075de:	685b      	ldr	r3, [r3, #4]
 80075e0:	099b      	lsrs	r3, r3, #6
 80075e2:	2200      	movs	r2, #0
 80075e4:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 80075e8:	f8c7 209c 	str.w	r2, [r7, #156]	; 0x9c
 80075ec:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80075f0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80075f4:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 80075f8:	2300      	movs	r3, #0
 80075fa:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 80075fe:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 8007602:	4622      	mov	r2, r4
 8007604:	462b      	mov	r3, r5
 8007606:	f04f 0000 	mov.w	r0, #0
 800760a:	f04f 0100 	mov.w	r1, #0
 800760e:	0159      	lsls	r1, r3, #5
 8007610:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8007614:	0150      	lsls	r0, r2, #5
 8007616:	4602      	mov	r2, r0
 8007618:	460b      	mov	r3, r1
 800761a:	4621      	mov	r1, r4
 800761c:	1a51      	subs	r1, r2, r1
 800761e:	6439      	str	r1, [r7, #64]	; 0x40
 8007620:	4629      	mov	r1, r5
 8007622:	eb63 0301 	sbc.w	r3, r3, r1
 8007626:	647b      	str	r3, [r7, #68]	; 0x44
 8007628:	f04f 0200 	mov.w	r2, #0
 800762c:	f04f 0300 	mov.w	r3, #0
 8007630:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	; 0x40
 8007634:	4649      	mov	r1, r9
 8007636:	018b      	lsls	r3, r1, #6
 8007638:	4641      	mov	r1, r8
 800763a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800763e:	4641      	mov	r1, r8
 8007640:	018a      	lsls	r2, r1, #6
 8007642:	4641      	mov	r1, r8
 8007644:	1a51      	subs	r1, r2, r1
 8007646:	63b9      	str	r1, [r7, #56]	; 0x38
 8007648:	4649      	mov	r1, r9
 800764a:	eb63 0301 	sbc.w	r3, r3, r1
 800764e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007650:	f04f 0200 	mov.w	r2, #0
 8007654:	f04f 0300 	mov.w	r3, #0
 8007658:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	; 0x38
 800765c:	4649      	mov	r1, r9
 800765e:	00cb      	lsls	r3, r1, #3
 8007660:	4641      	mov	r1, r8
 8007662:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8007666:	4641      	mov	r1, r8
 8007668:	00ca      	lsls	r2, r1, #3
 800766a:	4610      	mov	r0, r2
 800766c:	4619      	mov	r1, r3
 800766e:	4603      	mov	r3, r0
 8007670:	4622      	mov	r2, r4
 8007672:	189b      	adds	r3, r3, r2
 8007674:	633b      	str	r3, [r7, #48]	; 0x30
 8007676:	462b      	mov	r3, r5
 8007678:	460a      	mov	r2, r1
 800767a:	eb42 0303 	adc.w	r3, r2, r3
 800767e:	637b      	str	r3, [r7, #52]	; 0x34
 8007680:	f04f 0200 	mov.w	r2, #0
 8007684:	f04f 0300 	mov.w	r3, #0
 8007688:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 800768c:	4629      	mov	r1, r5
 800768e:	024b      	lsls	r3, r1, #9
 8007690:	4621      	mov	r1, r4
 8007692:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8007696:	4621      	mov	r1, r4
 8007698:	024a      	lsls	r2, r1, #9
 800769a:	4610      	mov	r0, r2
 800769c:	4619      	mov	r1, r3
 800769e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80076a2:	2200      	movs	r2, #0
 80076a4:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 80076a8:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80076ac:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 80076b0:	f7f9 faea 	bl	8000c88 <__aeabi_uldivmod>
 80076b4:	4602      	mov	r2, r0
 80076b6:	460b      	mov	r3, r1
 80076b8:	4613      	mov	r3, r2
 80076ba:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80076be:	e067      	b.n	8007790 <HAL_RCC_GetSysClockFreq+0x24c>
 80076c0:	4b75      	ldr	r3, [pc, #468]	; (8007898 <HAL_RCC_GetSysClockFreq+0x354>)
 80076c2:	685b      	ldr	r3, [r3, #4]
 80076c4:	099b      	lsrs	r3, r3, #6
 80076c6:	2200      	movs	r2, #0
 80076c8:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 80076cc:	f8c7 2084 	str.w	r2, [r7, #132]	; 0x84
 80076d0:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 80076d4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80076d8:	67bb      	str	r3, [r7, #120]	; 0x78
 80076da:	2300      	movs	r3, #0
 80076dc:	67fb      	str	r3, [r7, #124]	; 0x7c
 80076de:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	; 0x78
 80076e2:	4622      	mov	r2, r4
 80076e4:	462b      	mov	r3, r5
 80076e6:	f04f 0000 	mov.w	r0, #0
 80076ea:	f04f 0100 	mov.w	r1, #0
 80076ee:	0159      	lsls	r1, r3, #5
 80076f0:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80076f4:	0150      	lsls	r0, r2, #5
 80076f6:	4602      	mov	r2, r0
 80076f8:	460b      	mov	r3, r1
 80076fa:	4621      	mov	r1, r4
 80076fc:	1a51      	subs	r1, r2, r1
 80076fe:	62b9      	str	r1, [r7, #40]	; 0x28
 8007700:	4629      	mov	r1, r5
 8007702:	eb63 0301 	sbc.w	r3, r3, r1
 8007706:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007708:	f04f 0200 	mov.w	r2, #0
 800770c:	f04f 0300 	mov.w	r3, #0
 8007710:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	; 0x28
 8007714:	4649      	mov	r1, r9
 8007716:	018b      	lsls	r3, r1, #6
 8007718:	4641      	mov	r1, r8
 800771a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800771e:	4641      	mov	r1, r8
 8007720:	018a      	lsls	r2, r1, #6
 8007722:	4641      	mov	r1, r8
 8007724:	ebb2 0a01 	subs.w	sl, r2, r1
 8007728:	4649      	mov	r1, r9
 800772a:	eb63 0b01 	sbc.w	fp, r3, r1
 800772e:	f04f 0200 	mov.w	r2, #0
 8007732:	f04f 0300 	mov.w	r3, #0
 8007736:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800773a:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800773e:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8007742:	4692      	mov	sl, r2
 8007744:	469b      	mov	fp, r3
 8007746:	4623      	mov	r3, r4
 8007748:	eb1a 0303 	adds.w	r3, sl, r3
 800774c:	623b      	str	r3, [r7, #32]
 800774e:	462b      	mov	r3, r5
 8007750:	eb4b 0303 	adc.w	r3, fp, r3
 8007754:	627b      	str	r3, [r7, #36]	; 0x24
 8007756:	f04f 0200 	mov.w	r2, #0
 800775a:	f04f 0300 	mov.w	r3, #0
 800775e:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 8007762:	4629      	mov	r1, r5
 8007764:	028b      	lsls	r3, r1, #10
 8007766:	4621      	mov	r1, r4
 8007768:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 800776c:	4621      	mov	r1, r4
 800776e:	028a      	lsls	r2, r1, #10
 8007770:	4610      	mov	r0, r2
 8007772:	4619      	mov	r1, r3
 8007774:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8007778:	2200      	movs	r2, #0
 800777a:	673b      	str	r3, [r7, #112]	; 0x70
 800777c:	677a      	str	r2, [r7, #116]	; 0x74
 800777e:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 8007782:	f7f9 fa81 	bl	8000c88 <__aeabi_uldivmod>
 8007786:	4602      	mov	r2, r0
 8007788:	460b      	mov	r3, r1
 800778a:	4613      	mov	r3, r2
 800778c:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8007790:	4b41      	ldr	r3, [pc, #260]	; (8007898 <HAL_RCC_GetSysClockFreq+0x354>)
 8007792:	685b      	ldr	r3, [r3, #4]
 8007794:	0c1b      	lsrs	r3, r3, #16
 8007796:	f003 0303 	and.w	r3, r3, #3
 800779a:	3301      	adds	r3, #1
 800779c:	005b      	lsls	r3, r3, #1
 800779e:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 80077a2:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 80077a6:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 80077aa:	fbb2 f3f3 	udiv	r3, r2, r3
 80077ae:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80077b2:	e0eb      	b.n	800798c <HAL_RCC_GetSysClockFreq+0x448>
 80077b4:	4b38      	ldr	r3, [pc, #224]	; (8007898 <HAL_RCC_GetSysClockFreq+0x354>)
 80077b6:	685b      	ldr	r3, [r3, #4]
 80077b8:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80077bc:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 80077c0:	4b35      	ldr	r3, [pc, #212]	; (8007898 <HAL_RCC_GetSysClockFreq+0x354>)
 80077c2:	685b      	ldr	r3, [r3, #4]
 80077c4:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80077c8:	2b00      	cmp	r3, #0
 80077ca:	d06b      	beq.n	80078a4 <HAL_RCC_GetSysClockFreq+0x360>
 80077cc:	4b32      	ldr	r3, [pc, #200]	; (8007898 <HAL_RCC_GetSysClockFreq+0x354>)
 80077ce:	685b      	ldr	r3, [r3, #4]
 80077d0:	099b      	lsrs	r3, r3, #6
 80077d2:	2200      	movs	r2, #0
 80077d4:	66bb      	str	r3, [r7, #104]	; 0x68
 80077d6:	66fa      	str	r2, [r7, #108]	; 0x6c
 80077d8:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80077da:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80077de:	663b      	str	r3, [r7, #96]	; 0x60
 80077e0:	2300      	movs	r3, #0
 80077e2:	667b      	str	r3, [r7, #100]	; 0x64
 80077e4:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	; 0x60
 80077e8:	4622      	mov	r2, r4
 80077ea:	462b      	mov	r3, r5
 80077ec:	f04f 0000 	mov.w	r0, #0
 80077f0:	f04f 0100 	mov.w	r1, #0
 80077f4:	0159      	lsls	r1, r3, #5
 80077f6:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80077fa:	0150      	lsls	r0, r2, #5
 80077fc:	4602      	mov	r2, r0
 80077fe:	460b      	mov	r3, r1
 8007800:	4621      	mov	r1, r4
 8007802:	1a51      	subs	r1, r2, r1
 8007804:	61b9      	str	r1, [r7, #24]
 8007806:	4629      	mov	r1, r5
 8007808:	eb63 0301 	sbc.w	r3, r3, r1
 800780c:	61fb      	str	r3, [r7, #28]
 800780e:	f04f 0200 	mov.w	r2, #0
 8007812:	f04f 0300 	mov.w	r3, #0
 8007816:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 800781a:	4659      	mov	r1, fp
 800781c:	018b      	lsls	r3, r1, #6
 800781e:	4651      	mov	r1, sl
 8007820:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8007824:	4651      	mov	r1, sl
 8007826:	018a      	lsls	r2, r1, #6
 8007828:	4651      	mov	r1, sl
 800782a:	ebb2 0801 	subs.w	r8, r2, r1
 800782e:	4659      	mov	r1, fp
 8007830:	eb63 0901 	sbc.w	r9, r3, r1
 8007834:	f04f 0200 	mov.w	r2, #0
 8007838:	f04f 0300 	mov.w	r3, #0
 800783c:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8007840:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8007844:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8007848:	4690      	mov	r8, r2
 800784a:	4699      	mov	r9, r3
 800784c:	4623      	mov	r3, r4
 800784e:	eb18 0303 	adds.w	r3, r8, r3
 8007852:	613b      	str	r3, [r7, #16]
 8007854:	462b      	mov	r3, r5
 8007856:	eb49 0303 	adc.w	r3, r9, r3
 800785a:	617b      	str	r3, [r7, #20]
 800785c:	f04f 0200 	mov.w	r2, #0
 8007860:	f04f 0300 	mov.w	r3, #0
 8007864:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8007868:	4629      	mov	r1, r5
 800786a:	024b      	lsls	r3, r1, #9
 800786c:	4621      	mov	r1, r4
 800786e:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8007872:	4621      	mov	r1, r4
 8007874:	024a      	lsls	r2, r1, #9
 8007876:	4610      	mov	r0, r2
 8007878:	4619      	mov	r1, r3
 800787a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800787e:	2200      	movs	r2, #0
 8007880:	65bb      	str	r3, [r7, #88]	; 0x58
 8007882:	65fa      	str	r2, [r7, #92]	; 0x5c
 8007884:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8007888:	f7f9 f9fe 	bl	8000c88 <__aeabi_uldivmod>
 800788c:	4602      	mov	r2, r0
 800788e:	460b      	mov	r3, r1
 8007890:	4613      	mov	r3, r2
 8007892:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8007896:	e065      	b.n	8007964 <HAL_RCC_GetSysClockFreq+0x420>
 8007898:	40023800 	.word	0x40023800
 800789c:	00f42400 	.word	0x00f42400
 80078a0:	007a1200 	.word	0x007a1200
 80078a4:	4b3d      	ldr	r3, [pc, #244]	; (800799c <HAL_RCC_GetSysClockFreq+0x458>)
 80078a6:	685b      	ldr	r3, [r3, #4]
 80078a8:	099b      	lsrs	r3, r3, #6
 80078aa:	2200      	movs	r2, #0
 80078ac:	4618      	mov	r0, r3
 80078ae:	4611      	mov	r1, r2
 80078b0:	f3c0 0308 	ubfx	r3, r0, #0, #9
 80078b4:	653b      	str	r3, [r7, #80]	; 0x50
 80078b6:	2300      	movs	r3, #0
 80078b8:	657b      	str	r3, [r7, #84]	; 0x54
 80078ba:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	; 0x50
 80078be:	4642      	mov	r2, r8
 80078c0:	464b      	mov	r3, r9
 80078c2:	f04f 0000 	mov.w	r0, #0
 80078c6:	f04f 0100 	mov.w	r1, #0
 80078ca:	0159      	lsls	r1, r3, #5
 80078cc:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80078d0:	0150      	lsls	r0, r2, #5
 80078d2:	4602      	mov	r2, r0
 80078d4:	460b      	mov	r3, r1
 80078d6:	4641      	mov	r1, r8
 80078d8:	1a51      	subs	r1, r2, r1
 80078da:	60b9      	str	r1, [r7, #8]
 80078dc:	4649      	mov	r1, r9
 80078de:	eb63 0301 	sbc.w	r3, r3, r1
 80078e2:	60fb      	str	r3, [r7, #12]
 80078e4:	f04f 0200 	mov.w	r2, #0
 80078e8:	f04f 0300 	mov.w	r3, #0
 80078ec:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 80078f0:	4659      	mov	r1, fp
 80078f2:	018b      	lsls	r3, r1, #6
 80078f4:	4651      	mov	r1, sl
 80078f6:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80078fa:	4651      	mov	r1, sl
 80078fc:	018a      	lsls	r2, r1, #6
 80078fe:	4651      	mov	r1, sl
 8007900:	1a54      	subs	r4, r2, r1
 8007902:	4659      	mov	r1, fp
 8007904:	eb63 0501 	sbc.w	r5, r3, r1
 8007908:	f04f 0200 	mov.w	r2, #0
 800790c:	f04f 0300 	mov.w	r3, #0
 8007910:	00eb      	lsls	r3, r5, #3
 8007912:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8007916:	00e2      	lsls	r2, r4, #3
 8007918:	4614      	mov	r4, r2
 800791a:	461d      	mov	r5, r3
 800791c:	4643      	mov	r3, r8
 800791e:	18e3      	adds	r3, r4, r3
 8007920:	603b      	str	r3, [r7, #0]
 8007922:	464b      	mov	r3, r9
 8007924:	eb45 0303 	adc.w	r3, r5, r3
 8007928:	607b      	str	r3, [r7, #4]
 800792a:	f04f 0200 	mov.w	r2, #0
 800792e:	f04f 0300 	mov.w	r3, #0
 8007932:	e9d7 4500 	ldrd	r4, r5, [r7]
 8007936:	4629      	mov	r1, r5
 8007938:	028b      	lsls	r3, r1, #10
 800793a:	4621      	mov	r1, r4
 800793c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8007940:	4621      	mov	r1, r4
 8007942:	028a      	lsls	r2, r1, #10
 8007944:	4610      	mov	r0, r2
 8007946:	4619      	mov	r1, r3
 8007948:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800794c:	2200      	movs	r2, #0
 800794e:	64bb      	str	r3, [r7, #72]	; 0x48
 8007950:	64fa      	str	r2, [r7, #76]	; 0x4c
 8007952:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8007956:	f7f9 f997 	bl	8000c88 <__aeabi_uldivmod>
 800795a:	4602      	mov	r2, r0
 800795c:	460b      	mov	r3, r1
 800795e:	4613      	mov	r3, r2
 8007960:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8007964:	4b0d      	ldr	r3, [pc, #52]	; (800799c <HAL_RCC_GetSysClockFreq+0x458>)
 8007966:	685b      	ldr	r3, [r3, #4]
 8007968:	0f1b      	lsrs	r3, r3, #28
 800796a:	f003 0307 	and.w	r3, r3, #7
 800796e:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8007972:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8007976:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 800797a:	fbb2 f3f3 	udiv	r3, r2, r3
 800797e:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8007982:	e003      	b.n	800798c <HAL_RCC_GetSysClockFreq+0x448>
 8007984:	4b06      	ldr	r3, [pc, #24]	; (80079a0 <HAL_RCC_GetSysClockFreq+0x45c>)
 8007986:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800798a:	bf00      	nop
 800798c:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 8007990:	4618      	mov	r0, r3
 8007992:	37b8      	adds	r7, #184	; 0xb8
 8007994:	46bd      	mov	sp, r7
 8007996:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800799a:	bf00      	nop
 800799c:	40023800 	.word	0x40023800
 80079a0:	00f42400 	.word	0x00f42400

080079a4 <HAL_RCC_OscConfig>:
 80079a4:	b580      	push	{r7, lr}
 80079a6:	b086      	sub	sp, #24
 80079a8:	af00      	add	r7, sp, #0
 80079aa:	6078      	str	r0, [r7, #4]
 80079ac:	687b      	ldr	r3, [r7, #4]
 80079ae:	2b00      	cmp	r3, #0
 80079b0:	d101      	bne.n	80079b6 <HAL_RCC_OscConfig+0x12>
 80079b2:	2301      	movs	r3, #1
 80079b4:	e28d      	b.n	8007ed2 <HAL_RCC_OscConfig+0x52e>
 80079b6:	687b      	ldr	r3, [r7, #4]
 80079b8:	681b      	ldr	r3, [r3, #0]
 80079ba:	f003 0301 	and.w	r3, r3, #1
 80079be:	2b00      	cmp	r3, #0
 80079c0:	f000 8083 	beq.w	8007aca <HAL_RCC_OscConfig+0x126>
 80079c4:	4b94      	ldr	r3, [pc, #592]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 80079c6:	689b      	ldr	r3, [r3, #8]
 80079c8:	f003 030c 	and.w	r3, r3, #12
 80079cc:	2b04      	cmp	r3, #4
 80079ce:	d019      	beq.n	8007a04 <HAL_RCC_OscConfig+0x60>
 80079d0:	4b91      	ldr	r3, [pc, #580]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 80079d2:	689b      	ldr	r3, [r3, #8]
 80079d4:	f003 030c 	and.w	r3, r3, #12
 80079d8:	2b08      	cmp	r3, #8
 80079da:	d106      	bne.n	80079ea <HAL_RCC_OscConfig+0x46>
 80079dc:	4b8e      	ldr	r3, [pc, #568]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 80079de:	685b      	ldr	r3, [r3, #4]
 80079e0:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80079e4:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80079e8:	d00c      	beq.n	8007a04 <HAL_RCC_OscConfig+0x60>
 80079ea:	4b8b      	ldr	r3, [pc, #556]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 80079ec:	689b      	ldr	r3, [r3, #8]
 80079ee:	f003 030c 	and.w	r3, r3, #12
 80079f2:	2b0c      	cmp	r3, #12
 80079f4:	d112      	bne.n	8007a1c <HAL_RCC_OscConfig+0x78>
 80079f6:	4b88      	ldr	r3, [pc, #544]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 80079f8:	685b      	ldr	r3, [r3, #4]
 80079fa:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80079fe:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8007a02:	d10b      	bne.n	8007a1c <HAL_RCC_OscConfig+0x78>
 8007a04:	4b84      	ldr	r3, [pc, #528]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007a06:	681b      	ldr	r3, [r3, #0]
 8007a08:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007a0c:	2b00      	cmp	r3, #0
 8007a0e:	d05b      	beq.n	8007ac8 <HAL_RCC_OscConfig+0x124>
 8007a10:	687b      	ldr	r3, [r7, #4]
 8007a12:	685b      	ldr	r3, [r3, #4]
 8007a14:	2b00      	cmp	r3, #0
 8007a16:	d157      	bne.n	8007ac8 <HAL_RCC_OscConfig+0x124>
 8007a18:	2301      	movs	r3, #1
 8007a1a:	e25a      	b.n	8007ed2 <HAL_RCC_OscConfig+0x52e>
 8007a1c:	687b      	ldr	r3, [r7, #4]
 8007a1e:	685b      	ldr	r3, [r3, #4]
 8007a20:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007a24:	d106      	bne.n	8007a34 <HAL_RCC_OscConfig+0x90>
 8007a26:	4b7c      	ldr	r3, [pc, #496]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007a28:	681b      	ldr	r3, [r3, #0]
 8007a2a:	4a7b      	ldr	r2, [pc, #492]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007a2c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007a30:	6013      	str	r3, [r2, #0]
 8007a32:	e01d      	b.n	8007a70 <HAL_RCC_OscConfig+0xcc>
 8007a34:	687b      	ldr	r3, [r7, #4]
 8007a36:	685b      	ldr	r3, [r3, #4]
 8007a38:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8007a3c:	d10c      	bne.n	8007a58 <HAL_RCC_OscConfig+0xb4>
 8007a3e:	4b76      	ldr	r3, [pc, #472]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007a40:	681b      	ldr	r3, [r3, #0]
 8007a42:	4a75      	ldr	r2, [pc, #468]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007a44:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8007a48:	6013      	str	r3, [r2, #0]
 8007a4a:	4b73      	ldr	r3, [pc, #460]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007a4c:	681b      	ldr	r3, [r3, #0]
 8007a4e:	4a72      	ldr	r2, [pc, #456]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007a50:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007a54:	6013      	str	r3, [r2, #0]
 8007a56:	e00b      	b.n	8007a70 <HAL_RCC_OscConfig+0xcc>
 8007a58:	4b6f      	ldr	r3, [pc, #444]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007a5a:	681b      	ldr	r3, [r3, #0]
 8007a5c:	4a6e      	ldr	r2, [pc, #440]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007a5e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007a62:	6013      	str	r3, [r2, #0]
 8007a64:	4b6c      	ldr	r3, [pc, #432]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007a66:	681b      	ldr	r3, [r3, #0]
 8007a68:	4a6b      	ldr	r2, [pc, #428]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007a6a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007a6e:	6013      	str	r3, [r2, #0]
 8007a70:	687b      	ldr	r3, [r7, #4]
 8007a72:	685b      	ldr	r3, [r3, #4]
 8007a74:	2b00      	cmp	r3, #0
 8007a76:	d013      	beq.n	8007aa0 <HAL_RCC_OscConfig+0xfc>
 8007a78:	f7fd fd08 	bl	800548c <HAL_GetTick>
 8007a7c:	6138      	str	r0, [r7, #16]
 8007a7e:	e008      	b.n	8007a92 <HAL_RCC_OscConfig+0xee>
 8007a80:	f7fd fd04 	bl	800548c <HAL_GetTick>
 8007a84:	4602      	mov	r2, r0
 8007a86:	693b      	ldr	r3, [r7, #16]
 8007a88:	1ad3      	subs	r3, r2, r3
 8007a8a:	2b64      	cmp	r3, #100	; 0x64
 8007a8c:	d901      	bls.n	8007a92 <HAL_RCC_OscConfig+0xee>
 8007a8e:	2303      	movs	r3, #3
 8007a90:	e21f      	b.n	8007ed2 <HAL_RCC_OscConfig+0x52e>
 8007a92:	4b61      	ldr	r3, [pc, #388]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007a94:	681b      	ldr	r3, [r3, #0]
 8007a96:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007a9a:	2b00      	cmp	r3, #0
 8007a9c:	d0f0      	beq.n	8007a80 <HAL_RCC_OscConfig+0xdc>
 8007a9e:	e014      	b.n	8007aca <HAL_RCC_OscConfig+0x126>
 8007aa0:	f7fd fcf4 	bl	800548c <HAL_GetTick>
 8007aa4:	6138      	str	r0, [r7, #16]
 8007aa6:	e008      	b.n	8007aba <HAL_RCC_OscConfig+0x116>
 8007aa8:	f7fd fcf0 	bl	800548c <HAL_GetTick>
 8007aac:	4602      	mov	r2, r0
 8007aae:	693b      	ldr	r3, [r7, #16]
 8007ab0:	1ad3      	subs	r3, r2, r3
 8007ab2:	2b64      	cmp	r3, #100	; 0x64
 8007ab4:	d901      	bls.n	8007aba <HAL_RCC_OscConfig+0x116>
 8007ab6:	2303      	movs	r3, #3
 8007ab8:	e20b      	b.n	8007ed2 <HAL_RCC_OscConfig+0x52e>
 8007aba:	4b57      	ldr	r3, [pc, #348]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007abc:	681b      	ldr	r3, [r3, #0]
 8007abe:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007ac2:	2b00      	cmp	r3, #0
 8007ac4:	d1f0      	bne.n	8007aa8 <HAL_RCC_OscConfig+0x104>
 8007ac6:	e000      	b.n	8007aca <HAL_RCC_OscConfig+0x126>
 8007ac8:	bf00      	nop
 8007aca:	687b      	ldr	r3, [r7, #4]
 8007acc:	681b      	ldr	r3, [r3, #0]
 8007ace:	f003 0302 	and.w	r3, r3, #2
 8007ad2:	2b00      	cmp	r3, #0
 8007ad4:	d06f      	beq.n	8007bb6 <HAL_RCC_OscConfig+0x212>
 8007ad6:	4b50      	ldr	r3, [pc, #320]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007ad8:	689b      	ldr	r3, [r3, #8]
 8007ada:	f003 030c 	and.w	r3, r3, #12
 8007ade:	2b00      	cmp	r3, #0
 8007ae0:	d017      	beq.n	8007b12 <HAL_RCC_OscConfig+0x16e>
 8007ae2:	4b4d      	ldr	r3, [pc, #308]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007ae4:	689b      	ldr	r3, [r3, #8]
 8007ae6:	f003 030c 	and.w	r3, r3, #12
 8007aea:	2b08      	cmp	r3, #8
 8007aec:	d105      	bne.n	8007afa <HAL_RCC_OscConfig+0x156>
 8007aee:	4b4a      	ldr	r3, [pc, #296]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007af0:	685b      	ldr	r3, [r3, #4]
 8007af2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8007af6:	2b00      	cmp	r3, #0
 8007af8:	d00b      	beq.n	8007b12 <HAL_RCC_OscConfig+0x16e>
 8007afa:	4b47      	ldr	r3, [pc, #284]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007afc:	689b      	ldr	r3, [r3, #8]
 8007afe:	f003 030c 	and.w	r3, r3, #12
 8007b02:	2b0c      	cmp	r3, #12
 8007b04:	d11c      	bne.n	8007b40 <HAL_RCC_OscConfig+0x19c>
 8007b06:	4b44      	ldr	r3, [pc, #272]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007b08:	685b      	ldr	r3, [r3, #4]
 8007b0a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8007b0e:	2b00      	cmp	r3, #0
 8007b10:	d116      	bne.n	8007b40 <HAL_RCC_OscConfig+0x19c>
 8007b12:	4b41      	ldr	r3, [pc, #260]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007b14:	681b      	ldr	r3, [r3, #0]
 8007b16:	f003 0302 	and.w	r3, r3, #2
 8007b1a:	2b00      	cmp	r3, #0
 8007b1c:	d005      	beq.n	8007b2a <HAL_RCC_OscConfig+0x186>
 8007b1e:	687b      	ldr	r3, [r7, #4]
 8007b20:	68db      	ldr	r3, [r3, #12]
 8007b22:	2b01      	cmp	r3, #1
 8007b24:	d001      	beq.n	8007b2a <HAL_RCC_OscConfig+0x186>
 8007b26:	2301      	movs	r3, #1
 8007b28:	e1d3      	b.n	8007ed2 <HAL_RCC_OscConfig+0x52e>
 8007b2a:	4b3b      	ldr	r3, [pc, #236]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007b2c:	681b      	ldr	r3, [r3, #0]
 8007b2e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8007b32:	687b      	ldr	r3, [r7, #4]
 8007b34:	691b      	ldr	r3, [r3, #16]
 8007b36:	00db      	lsls	r3, r3, #3
 8007b38:	4937      	ldr	r1, [pc, #220]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007b3a:	4313      	orrs	r3, r2
 8007b3c:	600b      	str	r3, [r1, #0]
 8007b3e:	e03a      	b.n	8007bb6 <HAL_RCC_OscConfig+0x212>
 8007b40:	687b      	ldr	r3, [r7, #4]
 8007b42:	68db      	ldr	r3, [r3, #12]
 8007b44:	2b00      	cmp	r3, #0
 8007b46:	d020      	beq.n	8007b8a <HAL_RCC_OscConfig+0x1e6>
 8007b48:	4b34      	ldr	r3, [pc, #208]	; (8007c1c <HAL_RCC_OscConfig+0x278>)
 8007b4a:	2201      	movs	r2, #1
 8007b4c:	601a      	str	r2, [r3, #0]
 8007b4e:	f7fd fc9d 	bl	800548c <HAL_GetTick>
 8007b52:	6138      	str	r0, [r7, #16]
 8007b54:	e008      	b.n	8007b68 <HAL_RCC_OscConfig+0x1c4>
 8007b56:	f7fd fc99 	bl	800548c <HAL_GetTick>
 8007b5a:	4602      	mov	r2, r0
 8007b5c:	693b      	ldr	r3, [r7, #16]
 8007b5e:	1ad3      	subs	r3, r2, r3
 8007b60:	2b02      	cmp	r3, #2
 8007b62:	d901      	bls.n	8007b68 <HAL_RCC_OscConfig+0x1c4>
 8007b64:	2303      	movs	r3, #3
 8007b66:	e1b4      	b.n	8007ed2 <HAL_RCC_OscConfig+0x52e>
 8007b68:	4b2b      	ldr	r3, [pc, #172]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007b6a:	681b      	ldr	r3, [r3, #0]
 8007b6c:	f003 0302 	and.w	r3, r3, #2
 8007b70:	2b00      	cmp	r3, #0
 8007b72:	d0f0      	beq.n	8007b56 <HAL_RCC_OscConfig+0x1b2>
 8007b74:	4b28      	ldr	r3, [pc, #160]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007b76:	681b      	ldr	r3, [r3, #0]
 8007b78:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8007b7c:	687b      	ldr	r3, [r7, #4]
 8007b7e:	691b      	ldr	r3, [r3, #16]
 8007b80:	00db      	lsls	r3, r3, #3
 8007b82:	4925      	ldr	r1, [pc, #148]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007b84:	4313      	orrs	r3, r2
 8007b86:	600b      	str	r3, [r1, #0]
 8007b88:	e015      	b.n	8007bb6 <HAL_RCC_OscConfig+0x212>
 8007b8a:	4b24      	ldr	r3, [pc, #144]	; (8007c1c <HAL_RCC_OscConfig+0x278>)
 8007b8c:	2200      	movs	r2, #0
 8007b8e:	601a      	str	r2, [r3, #0]
 8007b90:	f7fd fc7c 	bl	800548c <HAL_GetTick>
 8007b94:	6138      	str	r0, [r7, #16]
 8007b96:	e008      	b.n	8007baa <HAL_RCC_OscConfig+0x206>
 8007b98:	f7fd fc78 	bl	800548c <HAL_GetTick>
 8007b9c:	4602      	mov	r2, r0
 8007b9e:	693b      	ldr	r3, [r7, #16]
 8007ba0:	1ad3      	subs	r3, r2, r3
 8007ba2:	2b02      	cmp	r3, #2
 8007ba4:	d901      	bls.n	8007baa <HAL_RCC_OscConfig+0x206>
 8007ba6:	2303      	movs	r3, #3
 8007ba8:	e193      	b.n	8007ed2 <HAL_RCC_OscConfig+0x52e>
 8007baa:	4b1b      	ldr	r3, [pc, #108]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007bac:	681b      	ldr	r3, [r3, #0]
 8007bae:	f003 0302 	and.w	r3, r3, #2
 8007bb2:	2b00      	cmp	r3, #0
 8007bb4:	d1f0      	bne.n	8007b98 <HAL_RCC_OscConfig+0x1f4>
 8007bb6:	687b      	ldr	r3, [r7, #4]
 8007bb8:	681b      	ldr	r3, [r3, #0]
 8007bba:	f003 0308 	and.w	r3, r3, #8
 8007bbe:	2b00      	cmp	r3, #0
 8007bc0:	d036      	beq.n	8007c30 <HAL_RCC_OscConfig+0x28c>
 8007bc2:	687b      	ldr	r3, [r7, #4]
 8007bc4:	695b      	ldr	r3, [r3, #20]
 8007bc6:	2b00      	cmp	r3, #0
 8007bc8:	d016      	beq.n	8007bf8 <HAL_RCC_OscConfig+0x254>
 8007bca:	4b15      	ldr	r3, [pc, #84]	; (8007c20 <HAL_RCC_OscConfig+0x27c>)
 8007bcc:	2201      	movs	r2, #1
 8007bce:	601a      	str	r2, [r3, #0]
 8007bd0:	f7fd fc5c 	bl	800548c <HAL_GetTick>
 8007bd4:	6138      	str	r0, [r7, #16]
 8007bd6:	e008      	b.n	8007bea <HAL_RCC_OscConfig+0x246>
 8007bd8:	f7fd fc58 	bl	800548c <HAL_GetTick>
 8007bdc:	4602      	mov	r2, r0
 8007bde:	693b      	ldr	r3, [r7, #16]
 8007be0:	1ad3      	subs	r3, r2, r3
 8007be2:	2b02      	cmp	r3, #2
 8007be4:	d901      	bls.n	8007bea <HAL_RCC_OscConfig+0x246>
 8007be6:	2303      	movs	r3, #3
 8007be8:	e173      	b.n	8007ed2 <HAL_RCC_OscConfig+0x52e>
 8007bea:	4b0b      	ldr	r3, [pc, #44]	; (8007c18 <HAL_RCC_OscConfig+0x274>)
 8007bec:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8007bee:	f003 0302 	and.w	r3, r3, #2
 8007bf2:	2b00      	cmp	r3, #0
 8007bf4:	d0f0      	beq.n	8007bd8 <HAL_RCC_OscConfig+0x234>
 8007bf6:	e01b      	b.n	8007c30 <HAL_RCC_OscConfig+0x28c>
 8007bf8:	4b09      	ldr	r3, [pc, #36]	; (8007c20 <HAL_RCC_OscConfig+0x27c>)
 8007bfa:	2200      	movs	r2, #0
 8007bfc:	601a      	str	r2, [r3, #0]
 8007bfe:	f7fd fc45 	bl	800548c <HAL_GetTick>
 8007c02:	6138      	str	r0, [r7, #16]
 8007c04:	e00e      	b.n	8007c24 <HAL_RCC_OscConfig+0x280>
 8007c06:	f7fd fc41 	bl	800548c <HAL_GetTick>
 8007c0a:	4602      	mov	r2, r0
 8007c0c:	693b      	ldr	r3, [r7, #16]
 8007c0e:	1ad3      	subs	r3, r2, r3
 8007c10:	2b02      	cmp	r3, #2
 8007c12:	d907      	bls.n	8007c24 <HAL_RCC_OscConfig+0x280>
 8007c14:	2303      	movs	r3, #3
 8007c16:	e15c      	b.n	8007ed2 <HAL_RCC_OscConfig+0x52e>
 8007c18:	40023800 	.word	0x40023800
 8007c1c:	42470000 	.word	0x42470000
 8007c20:	42470e80 	.word	0x42470e80
 8007c24:	4b8a      	ldr	r3, [pc, #552]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007c26:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8007c28:	f003 0302 	and.w	r3, r3, #2
 8007c2c:	2b00      	cmp	r3, #0
 8007c2e:	d1ea      	bne.n	8007c06 <HAL_RCC_OscConfig+0x262>
 8007c30:	687b      	ldr	r3, [r7, #4]
 8007c32:	681b      	ldr	r3, [r3, #0]
 8007c34:	f003 0304 	and.w	r3, r3, #4
 8007c38:	2b00      	cmp	r3, #0
 8007c3a:	f000 8097 	beq.w	8007d6c <HAL_RCC_OscConfig+0x3c8>
 8007c3e:	2300      	movs	r3, #0
 8007c40:	75fb      	strb	r3, [r7, #23]
 8007c42:	4b83      	ldr	r3, [pc, #524]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007c44:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007c46:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007c4a:	2b00      	cmp	r3, #0
 8007c4c:	d10f      	bne.n	8007c6e <HAL_RCC_OscConfig+0x2ca>
 8007c4e:	2300      	movs	r3, #0
 8007c50:	60bb      	str	r3, [r7, #8]
 8007c52:	4b7f      	ldr	r3, [pc, #508]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007c54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007c56:	4a7e      	ldr	r2, [pc, #504]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007c58:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8007c5c:	6413      	str	r3, [r2, #64]	; 0x40
 8007c5e:	4b7c      	ldr	r3, [pc, #496]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007c60:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007c62:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007c66:	60bb      	str	r3, [r7, #8]
 8007c68:	68bb      	ldr	r3, [r7, #8]
 8007c6a:	2301      	movs	r3, #1
 8007c6c:	75fb      	strb	r3, [r7, #23]
 8007c6e:	4b79      	ldr	r3, [pc, #484]	; (8007e54 <HAL_RCC_OscConfig+0x4b0>)
 8007c70:	681b      	ldr	r3, [r3, #0]
 8007c72:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007c76:	2b00      	cmp	r3, #0
 8007c78:	d118      	bne.n	8007cac <HAL_RCC_OscConfig+0x308>
 8007c7a:	4b76      	ldr	r3, [pc, #472]	; (8007e54 <HAL_RCC_OscConfig+0x4b0>)
 8007c7c:	681b      	ldr	r3, [r3, #0]
 8007c7e:	4a75      	ldr	r2, [pc, #468]	; (8007e54 <HAL_RCC_OscConfig+0x4b0>)
 8007c80:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007c84:	6013      	str	r3, [r2, #0]
 8007c86:	f7fd fc01 	bl	800548c <HAL_GetTick>
 8007c8a:	6138      	str	r0, [r7, #16]
 8007c8c:	e008      	b.n	8007ca0 <HAL_RCC_OscConfig+0x2fc>
 8007c8e:	f7fd fbfd 	bl	800548c <HAL_GetTick>
 8007c92:	4602      	mov	r2, r0
 8007c94:	693b      	ldr	r3, [r7, #16]
 8007c96:	1ad3      	subs	r3, r2, r3
 8007c98:	2b02      	cmp	r3, #2
 8007c9a:	d901      	bls.n	8007ca0 <HAL_RCC_OscConfig+0x2fc>
 8007c9c:	2303      	movs	r3, #3
 8007c9e:	e118      	b.n	8007ed2 <HAL_RCC_OscConfig+0x52e>
 8007ca0:	4b6c      	ldr	r3, [pc, #432]	; (8007e54 <HAL_RCC_OscConfig+0x4b0>)
 8007ca2:	681b      	ldr	r3, [r3, #0]
 8007ca4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007ca8:	2b00      	cmp	r3, #0
 8007caa:	d0f0      	beq.n	8007c8e <HAL_RCC_OscConfig+0x2ea>
 8007cac:	687b      	ldr	r3, [r7, #4]
 8007cae:	689b      	ldr	r3, [r3, #8]
 8007cb0:	2b01      	cmp	r3, #1
 8007cb2:	d106      	bne.n	8007cc2 <HAL_RCC_OscConfig+0x31e>
 8007cb4:	4b66      	ldr	r3, [pc, #408]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007cb6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007cb8:	4a65      	ldr	r2, [pc, #404]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007cba:	f043 0301 	orr.w	r3, r3, #1
 8007cbe:	6713      	str	r3, [r2, #112]	; 0x70
 8007cc0:	e01c      	b.n	8007cfc <HAL_RCC_OscConfig+0x358>
 8007cc2:	687b      	ldr	r3, [r7, #4]
 8007cc4:	689b      	ldr	r3, [r3, #8]
 8007cc6:	2b05      	cmp	r3, #5
 8007cc8:	d10c      	bne.n	8007ce4 <HAL_RCC_OscConfig+0x340>
 8007cca:	4b61      	ldr	r3, [pc, #388]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007ccc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007cce:	4a60      	ldr	r2, [pc, #384]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007cd0:	f043 0304 	orr.w	r3, r3, #4
 8007cd4:	6713      	str	r3, [r2, #112]	; 0x70
 8007cd6:	4b5e      	ldr	r3, [pc, #376]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007cd8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007cda:	4a5d      	ldr	r2, [pc, #372]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007cdc:	f043 0301 	orr.w	r3, r3, #1
 8007ce0:	6713      	str	r3, [r2, #112]	; 0x70
 8007ce2:	e00b      	b.n	8007cfc <HAL_RCC_OscConfig+0x358>
 8007ce4:	4b5a      	ldr	r3, [pc, #360]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007ce6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007ce8:	4a59      	ldr	r2, [pc, #356]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007cea:	f023 0301 	bic.w	r3, r3, #1
 8007cee:	6713      	str	r3, [r2, #112]	; 0x70
 8007cf0:	4b57      	ldr	r3, [pc, #348]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007cf2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007cf4:	4a56      	ldr	r2, [pc, #344]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007cf6:	f023 0304 	bic.w	r3, r3, #4
 8007cfa:	6713      	str	r3, [r2, #112]	; 0x70
 8007cfc:	687b      	ldr	r3, [r7, #4]
 8007cfe:	689b      	ldr	r3, [r3, #8]
 8007d00:	2b00      	cmp	r3, #0
 8007d02:	d015      	beq.n	8007d30 <HAL_RCC_OscConfig+0x38c>
 8007d04:	f7fd fbc2 	bl	800548c <HAL_GetTick>
 8007d08:	6138      	str	r0, [r7, #16]
 8007d0a:	e00a      	b.n	8007d22 <HAL_RCC_OscConfig+0x37e>
 8007d0c:	f7fd fbbe 	bl	800548c <HAL_GetTick>
 8007d10:	4602      	mov	r2, r0
 8007d12:	693b      	ldr	r3, [r7, #16]
 8007d14:	1ad3      	subs	r3, r2, r3
 8007d16:	f241 3288 	movw	r2, #5000	; 0x1388
 8007d1a:	4293      	cmp	r3, r2
 8007d1c:	d901      	bls.n	8007d22 <HAL_RCC_OscConfig+0x37e>
 8007d1e:	2303      	movs	r3, #3
 8007d20:	e0d7      	b.n	8007ed2 <HAL_RCC_OscConfig+0x52e>
 8007d22:	4b4b      	ldr	r3, [pc, #300]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007d24:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007d26:	f003 0302 	and.w	r3, r3, #2
 8007d2a:	2b00      	cmp	r3, #0
 8007d2c:	d0ee      	beq.n	8007d0c <HAL_RCC_OscConfig+0x368>
 8007d2e:	e014      	b.n	8007d5a <HAL_RCC_OscConfig+0x3b6>
 8007d30:	f7fd fbac 	bl	800548c <HAL_GetTick>
 8007d34:	6138      	str	r0, [r7, #16]
 8007d36:	e00a      	b.n	8007d4e <HAL_RCC_OscConfig+0x3aa>
 8007d38:	f7fd fba8 	bl	800548c <HAL_GetTick>
 8007d3c:	4602      	mov	r2, r0
 8007d3e:	693b      	ldr	r3, [r7, #16]
 8007d40:	1ad3      	subs	r3, r2, r3
 8007d42:	f241 3288 	movw	r2, #5000	; 0x1388
 8007d46:	4293      	cmp	r3, r2
 8007d48:	d901      	bls.n	8007d4e <HAL_RCC_OscConfig+0x3aa>
 8007d4a:	2303      	movs	r3, #3
 8007d4c:	e0c1      	b.n	8007ed2 <HAL_RCC_OscConfig+0x52e>
 8007d4e:	4b40      	ldr	r3, [pc, #256]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007d50:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007d52:	f003 0302 	and.w	r3, r3, #2
 8007d56:	2b00      	cmp	r3, #0
 8007d58:	d1ee      	bne.n	8007d38 <HAL_RCC_OscConfig+0x394>
 8007d5a:	7dfb      	ldrb	r3, [r7, #23]
 8007d5c:	2b01      	cmp	r3, #1
 8007d5e:	d105      	bne.n	8007d6c <HAL_RCC_OscConfig+0x3c8>
 8007d60:	4b3b      	ldr	r3, [pc, #236]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007d62:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007d64:	4a3a      	ldr	r2, [pc, #232]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007d66:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8007d6a:	6413      	str	r3, [r2, #64]	; 0x40
 8007d6c:	687b      	ldr	r3, [r7, #4]
 8007d6e:	699b      	ldr	r3, [r3, #24]
 8007d70:	2b00      	cmp	r3, #0
 8007d72:	f000 80ad 	beq.w	8007ed0 <HAL_RCC_OscConfig+0x52c>
 8007d76:	4b36      	ldr	r3, [pc, #216]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007d78:	689b      	ldr	r3, [r3, #8]
 8007d7a:	f003 030c 	and.w	r3, r3, #12
 8007d7e:	2b08      	cmp	r3, #8
 8007d80:	d060      	beq.n	8007e44 <HAL_RCC_OscConfig+0x4a0>
 8007d82:	687b      	ldr	r3, [r7, #4]
 8007d84:	699b      	ldr	r3, [r3, #24]
 8007d86:	2b02      	cmp	r3, #2
 8007d88:	d145      	bne.n	8007e16 <HAL_RCC_OscConfig+0x472>
 8007d8a:	4b33      	ldr	r3, [pc, #204]	; (8007e58 <HAL_RCC_OscConfig+0x4b4>)
 8007d8c:	2200      	movs	r2, #0
 8007d8e:	601a      	str	r2, [r3, #0]
 8007d90:	f7fd fb7c 	bl	800548c <HAL_GetTick>
 8007d94:	6138      	str	r0, [r7, #16]
 8007d96:	e008      	b.n	8007daa <HAL_RCC_OscConfig+0x406>
 8007d98:	f7fd fb78 	bl	800548c <HAL_GetTick>
 8007d9c:	4602      	mov	r2, r0
 8007d9e:	693b      	ldr	r3, [r7, #16]
 8007da0:	1ad3      	subs	r3, r2, r3
 8007da2:	2b02      	cmp	r3, #2
 8007da4:	d901      	bls.n	8007daa <HAL_RCC_OscConfig+0x406>
 8007da6:	2303      	movs	r3, #3
 8007da8:	e093      	b.n	8007ed2 <HAL_RCC_OscConfig+0x52e>
 8007daa:	4b29      	ldr	r3, [pc, #164]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007dac:	681b      	ldr	r3, [r3, #0]
 8007dae:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8007db2:	2b00      	cmp	r3, #0
 8007db4:	d1f0      	bne.n	8007d98 <HAL_RCC_OscConfig+0x3f4>
 8007db6:	687b      	ldr	r3, [r7, #4]
 8007db8:	69da      	ldr	r2, [r3, #28]
 8007dba:	687b      	ldr	r3, [r7, #4]
 8007dbc:	6a1b      	ldr	r3, [r3, #32]
 8007dbe:	431a      	orrs	r2, r3
 8007dc0:	687b      	ldr	r3, [r7, #4]
 8007dc2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007dc4:	019b      	lsls	r3, r3, #6
 8007dc6:	431a      	orrs	r2, r3
 8007dc8:	687b      	ldr	r3, [r7, #4]
 8007dca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007dcc:	085b      	lsrs	r3, r3, #1
 8007dce:	3b01      	subs	r3, #1
 8007dd0:	041b      	lsls	r3, r3, #16
 8007dd2:	431a      	orrs	r2, r3
 8007dd4:	687b      	ldr	r3, [r7, #4]
 8007dd6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007dd8:	061b      	lsls	r3, r3, #24
 8007dda:	431a      	orrs	r2, r3
 8007ddc:	687b      	ldr	r3, [r7, #4]
 8007dde:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007de0:	071b      	lsls	r3, r3, #28
 8007de2:	491b      	ldr	r1, [pc, #108]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007de4:	4313      	orrs	r3, r2
 8007de6:	604b      	str	r3, [r1, #4]
 8007de8:	4b1b      	ldr	r3, [pc, #108]	; (8007e58 <HAL_RCC_OscConfig+0x4b4>)
 8007dea:	2201      	movs	r2, #1
 8007dec:	601a      	str	r2, [r3, #0]
 8007dee:	f7fd fb4d 	bl	800548c <HAL_GetTick>
 8007df2:	6138      	str	r0, [r7, #16]
 8007df4:	e008      	b.n	8007e08 <HAL_RCC_OscConfig+0x464>
 8007df6:	f7fd fb49 	bl	800548c <HAL_GetTick>
 8007dfa:	4602      	mov	r2, r0
 8007dfc:	693b      	ldr	r3, [r7, #16]
 8007dfe:	1ad3      	subs	r3, r2, r3
 8007e00:	2b02      	cmp	r3, #2
 8007e02:	d901      	bls.n	8007e08 <HAL_RCC_OscConfig+0x464>
 8007e04:	2303      	movs	r3, #3
 8007e06:	e064      	b.n	8007ed2 <HAL_RCC_OscConfig+0x52e>
 8007e08:	4b11      	ldr	r3, [pc, #68]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007e0a:	681b      	ldr	r3, [r3, #0]
 8007e0c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8007e10:	2b00      	cmp	r3, #0
 8007e12:	d0f0      	beq.n	8007df6 <HAL_RCC_OscConfig+0x452>
 8007e14:	e05c      	b.n	8007ed0 <HAL_RCC_OscConfig+0x52c>
 8007e16:	4b10      	ldr	r3, [pc, #64]	; (8007e58 <HAL_RCC_OscConfig+0x4b4>)
 8007e18:	2200      	movs	r2, #0
 8007e1a:	601a      	str	r2, [r3, #0]
 8007e1c:	f7fd fb36 	bl	800548c <HAL_GetTick>
 8007e20:	6138      	str	r0, [r7, #16]
 8007e22:	e008      	b.n	8007e36 <HAL_RCC_OscConfig+0x492>
 8007e24:	f7fd fb32 	bl	800548c <HAL_GetTick>
 8007e28:	4602      	mov	r2, r0
 8007e2a:	693b      	ldr	r3, [r7, #16]
 8007e2c:	1ad3      	subs	r3, r2, r3
 8007e2e:	2b02      	cmp	r3, #2
 8007e30:	d901      	bls.n	8007e36 <HAL_RCC_OscConfig+0x492>
 8007e32:	2303      	movs	r3, #3
 8007e34:	e04d      	b.n	8007ed2 <HAL_RCC_OscConfig+0x52e>
 8007e36:	4b06      	ldr	r3, [pc, #24]	; (8007e50 <HAL_RCC_OscConfig+0x4ac>)
 8007e38:	681b      	ldr	r3, [r3, #0]
 8007e3a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8007e3e:	2b00      	cmp	r3, #0
 8007e40:	d1f0      	bne.n	8007e24 <HAL_RCC_OscConfig+0x480>
 8007e42:	e045      	b.n	8007ed0 <HAL_RCC_OscConfig+0x52c>
 8007e44:	687b      	ldr	r3, [r7, #4]
 8007e46:	699b      	ldr	r3, [r3, #24]
 8007e48:	2b01      	cmp	r3, #1
 8007e4a:	d107      	bne.n	8007e5c <HAL_RCC_OscConfig+0x4b8>
 8007e4c:	2301      	movs	r3, #1
 8007e4e:	e040      	b.n	8007ed2 <HAL_RCC_OscConfig+0x52e>
 8007e50:	40023800 	.word	0x40023800
 8007e54:	40007000 	.word	0x40007000
 8007e58:	42470060 	.word	0x42470060
 8007e5c:	4b1f      	ldr	r3, [pc, #124]	; (8007edc <HAL_RCC_OscConfig+0x538>)
 8007e5e:	685b      	ldr	r3, [r3, #4]
 8007e60:	60fb      	str	r3, [r7, #12]
 8007e62:	687b      	ldr	r3, [r7, #4]
 8007e64:	699b      	ldr	r3, [r3, #24]
 8007e66:	2b01      	cmp	r3, #1
 8007e68:	d030      	beq.n	8007ecc <HAL_RCC_OscConfig+0x528>
 8007e6a:	68fb      	ldr	r3, [r7, #12]
 8007e6c:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8007e70:	687b      	ldr	r3, [r7, #4]
 8007e72:	69db      	ldr	r3, [r3, #28]
 8007e74:	429a      	cmp	r2, r3
 8007e76:	d129      	bne.n	8007ecc <HAL_RCC_OscConfig+0x528>
 8007e78:	68fb      	ldr	r3, [r7, #12]
 8007e7a:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8007e7e:	687b      	ldr	r3, [r7, #4]
 8007e80:	6a1b      	ldr	r3, [r3, #32]
 8007e82:	429a      	cmp	r2, r3
 8007e84:	d122      	bne.n	8007ecc <HAL_RCC_OscConfig+0x528>
 8007e86:	68fa      	ldr	r2, [r7, #12]
 8007e88:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8007e8c:	4013      	ands	r3, r2
 8007e8e:	687a      	ldr	r2, [r7, #4]
 8007e90:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8007e92:	0192      	lsls	r2, r2, #6
 8007e94:	4293      	cmp	r3, r2
 8007e96:	d119      	bne.n	8007ecc <HAL_RCC_OscConfig+0x528>
 8007e98:	68fb      	ldr	r3, [r7, #12]
 8007e9a:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8007e9e:	687b      	ldr	r3, [r7, #4]
 8007ea0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007ea2:	085b      	lsrs	r3, r3, #1
 8007ea4:	3b01      	subs	r3, #1
 8007ea6:	041b      	lsls	r3, r3, #16
 8007ea8:	429a      	cmp	r2, r3
 8007eaa:	d10f      	bne.n	8007ecc <HAL_RCC_OscConfig+0x528>
 8007eac:	68fb      	ldr	r3, [r7, #12]
 8007eae:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8007eb2:	687b      	ldr	r3, [r7, #4]
 8007eb4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007eb6:	061b      	lsls	r3, r3, #24
 8007eb8:	429a      	cmp	r2, r3
 8007eba:	d107      	bne.n	8007ecc <HAL_RCC_OscConfig+0x528>
 8007ebc:	68fb      	ldr	r3, [r7, #12]
 8007ebe:	f003 42e0 	and.w	r2, r3, #1879048192	; 0x70000000
 8007ec2:	687b      	ldr	r3, [r7, #4]
 8007ec4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007ec6:	071b      	lsls	r3, r3, #28
 8007ec8:	429a      	cmp	r2, r3
 8007eca:	d001      	beq.n	8007ed0 <HAL_RCC_OscConfig+0x52c>
 8007ecc:	2301      	movs	r3, #1
 8007ece:	e000      	b.n	8007ed2 <HAL_RCC_OscConfig+0x52e>
 8007ed0:	2300      	movs	r3, #0
 8007ed2:	4618      	mov	r0, r3
 8007ed4:	3718      	adds	r7, #24
 8007ed6:	46bd      	mov	sp, r7
 8007ed8:	bd80      	pop	{r7, pc}
 8007eda:	bf00      	nop
 8007edc:	40023800 	.word	0x40023800

08007ee0 <HAL_TIM_Base_Init>:
 8007ee0:	b580      	push	{r7, lr}
 8007ee2:	b082      	sub	sp, #8
 8007ee4:	af00      	add	r7, sp, #0
 8007ee6:	6078      	str	r0, [r7, #4]
 8007ee8:	687b      	ldr	r3, [r7, #4]
 8007eea:	2b00      	cmp	r3, #0
 8007eec:	d101      	bne.n	8007ef2 <HAL_TIM_Base_Init+0x12>
 8007eee:	2301      	movs	r3, #1
 8007ef0:	e041      	b.n	8007f76 <HAL_TIM_Base_Init+0x96>
 8007ef2:	687b      	ldr	r3, [r7, #4]
 8007ef4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007ef8:	b2db      	uxtb	r3, r3
 8007efa:	2b00      	cmp	r3, #0
 8007efc:	d106      	bne.n	8007f0c <HAL_TIM_Base_Init+0x2c>
 8007efe:	687b      	ldr	r3, [r7, #4]
 8007f00:	2200      	movs	r2, #0
 8007f02:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007f06:	6878      	ldr	r0, [r7, #4]
 8007f08:	f7fc fe34 	bl	8004b74 <HAL_TIM_Base_MspInit>
 8007f0c:	687b      	ldr	r3, [r7, #4]
 8007f0e:	2202      	movs	r2, #2
 8007f10:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007f14:	687b      	ldr	r3, [r7, #4]
 8007f16:	681a      	ldr	r2, [r3, #0]
 8007f18:	687b      	ldr	r3, [r7, #4]
 8007f1a:	3304      	adds	r3, #4
 8007f1c:	4619      	mov	r1, r3
 8007f1e:	4610      	mov	r0, r2
 8007f20:	f001 f9b4 	bl	800928c <TIM_Base_SetConfig>
 8007f24:	687b      	ldr	r3, [r7, #4]
 8007f26:	2201      	movs	r2, #1
 8007f28:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8007f2c:	687b      	ldr	r3, [r7, #4]
 8007f2e:	2201      	movs	r2, #1
 8007f30:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007f34:	687b      	ldr	r3, [r7, #4]
 8007f36:	2201      	movs	r2, #1
 8007f38:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8007f3c:	687b      	ldr	r3, [r7, #4]
 8007f3e:	2201      	movs	r2, #1
 8007f40:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8007f44:	687b      	ldr	r3, [r7, #4]
 8007f46:	2201      	movs	r2, #1
 8007f48:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8007f4c:	687b      	ldr	r3, [r7, #4]
 8007f4e:	2201      	movs	r2, #1
 8007f50:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8007f54:	687b      	ldr	r3, [r7, #4]
 8007f56:	2201      	movs	r2, #1
 8007f58:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8007f5c:	687b      	ldr	r3, [r7, #4]
 8007f5e:	2201      	movs	r2, #1
 8007f60:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8007f64:	687b      	ldr	r3, [r7, #4]
 8007f66:	2201      	movs	r2, #1
 8007f68:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8007f6c:	687b      	ldr	r3, [r7, #4]
 8007f6e:	2201      	movs	r2, #1
 8007f70:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007f74:	2300      	movs	r3, #0
 8007f76:	4618      	mov	r0, r3
 8007f78:	3708      	adds	r7, #8
 8007f7a:	46bd      	mov	sp, r7
 8007f7c:	bd80      	pop	{r7, pc}
	...

08007f80 <HAL_TIM_Base_Start>:
 8007f80:	b480      	push	{r7}
 8007f82:	b085      	sub	sp, #20
 8007f84:	af00      	add	r7, sp, #0
 8007f86:	6078      	str	r0, [r7, #4]
 8007f88:	687b      	ldr	r3, [r7, #4]
 8007f8a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007f8e:	b2db      	uxtb	r3, r3
 8007f90:	2b01      	cmp	r3, #1
 8007f92:	d001      	beq.n	8007f98 <HAL_TIM_Base_Start+0x18>
 8007f94:	2301      	movs	r3, #1
 8007f96:	e046      	b.n	8008026 <HAL_TIM_Base_Start+0xa6>
 8007f98:	687b      	ldr	r3, [r7, #4]
 8007f9a:	2202      	movs	r2, #2
 8007f9c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007fa0:	687b      	ldr	r3, [r7, #4]
 8007fa2:	681b      	ldr	r3, [r3, #0]
 8007fa4:	4a23      	ldr	r2, [pc, #140]	; (8008034 <HAL_TIM_Base_Start+0xb4>)
 8007fa6:	4293      	cmp	r3, r2
 8007fa8:	d022      	beq.n	8007ff0 <HAL_TIM_Base_Start+0x70>
 8007faa:	687b      	ldr	r3, [r7, #4]
 8007fac:	681b      	ldr	r3, [r3, #0]
 8007fae:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007fb2:	d01d      	beq.n	8007ff0 <HAL_TIM_Base_Start+0x70>
 8007fb4:	687b      	ldr	r3, [r7, #4]
 8007fb6:	681b      	ldr	r3, [r3, #0]
 8007fb8:	4a1f      	ldr	r2, [pc, #124]	; (8008038 <HAL_TIM_Base_Start+0xb8>)
 8007fba:	4293      	cmp	r3, r2
 8007fbc:	d018      	beq.n	8007ff0 <HAL_TIM_Base_Start+0x70>
 8007fbe:	687b      	ldr	r3, [r7, #4]
 8007fc0:	681b      	ldr	r3, [r3, #0]
 8007fc2:	4a1e      	ldr	r2, [pc, #120]	; (800803c <HAL_TIM_Base_Start+0xbc>)
 8007fc4:	4293      	cmp	r3, r2
 8007fc6:	d013      	beq.n	8007ff0 <HAL_TIM_Base_Start+0x70>
 8007fc8:	687b      	ldr	r3, [r7, #4]
 8007fca:	681b      	ldr	r3, [r3, #0]
 8007fcc:	4a1c      	ldr	r2, [pc, #112]	; (8008040 <HAL_TIM_Base_Start+0xc0>)
 8007fce:	4293      	cmp	r3, r2
 8007fd0:	d00e      	beq.n	8007ff0 <HAL_TIM_Base_Start+0x70>
 8007fd2:	687b      	ldr	r3, [r7, #4]
 8007fd4:	681b      	ldr	r3, [r3, #0]
 8007fd6:	4a1b      	ldr	r2, [pc, #108]	; (8008044 <HAL_TIM_Base_Start+0xc4>)
 8007fd8:	4293      	cmp	r3, r2
 8007fda:	d009      	beq.n	8007ff0 <HAL_TIM_Base_Start+0x70>
 8007fdc:	687b      	ldr	r3, [r7, #4]
 8007fde:	681b      	ldr	r3, [r3, #0]
 8007fe0:	4a19      	ldr	r2, [pc, #100]	; (8008048 <HAL_TIM_Base_Start+0xc8>)
 8007fe2:	4293      	cmp	r3, r2
 8007fe4:	d004      	beq.n	8007ff0 <HAL_TIM_Base_Start+0x70>
 8007fe6:	687b      	ldr	r3, [r7, #4]
 8007fe8:	681b      	ldr	r3, [r3, #0]
 8007fea:	4a18      	ldr	r2, [pc, #96]	; (800804c <HAL_TIM_Base_Start+0xcc>)
 8007fec:	4293      	cmp	r3, r2
 8007fee:	d111      	bne.n	8008014 <HAL_TIM_Base_Start+0x94>
 8007ff0:	687b      	ldr	r3, [r7, #4]
 8007ff2:	681b      	ldr	r3, [r3, #0]
 8007ff4:	689b      	ldr	r3, [r3, #8]
 8007ff6:	f003 0307 	and.w	r3, r3, #7
 8007ffa:	60fb      	str	r3, [r7, #12]
 8007ffc:	68fb      	ldr	r3, [r7, #12]
 8007ffe:	2b06      	cmp	r3, #6
 8008000:	d010      	beq.n	8008024 <HAL_TIM_Base_Start+0xa4>
 8008002:	687b      	ldr	r3, [r7, #4]
 8008004:	681b      	ldr	r3, [r3, #0]
 8008006:	681a      	ldr	r2, [r3, #0]
 8008008:	687b      	ldr	r3, [r7, #4]
 800800a:	681b      	ldr	r3, [r3, #0]
 800800c:	f042 0201 	orr.w	r2, r2, #1
 8008010:	601a      	str	r2, [r3, #0]
 8008012:	e007      	b.n	8008024 <HAL_TIM_Base_Start+0xa4>
 8008014:	687b      	ldr	r3, [r7, #4]
 8008016:	681b      	ldr	r3, [r3, #0]
 8008018:	681a      	ldr	r2, [r3, #0]
 800801a:	687b      	ldr	r3, [r7, #4]
 800801c:	681b      	ldr	r3, [r3, #0]
 800801e:	f042 0201 	orr.w	r2, r2, #1
 8008022:	601a      	str	r2, [r3, #0]
 8008024:	2300      	movs	r3, #0
 8008026:	4618      	mov	r0, r3
 8008028:	3714      	adds	r7, #20
 800802a:	46bd      	mov	sp, r7
 800802c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008030:	4770      	bx	lr
 8008032:	bf00      	nop
 8008034:	40010000 	.word	0x40010000
 8008038:	40000400 	.word	0x40000400
 800803c:	40000800 	.word	0x40000800
 8008040:	40000c00 	.word	0x40000c00
 8008044:	40010400 	.word	0x40010400
 8008048:	40014000 	.word	0x40014000
 800804c:	40001800 	.word	0x40001800

08008050 <HAL_TIM_PWM_Init>:
 8008050:	b580      	push	{r7, lr}
 8008052:	b082      	sub	sp, #8
 8008054:	af00      	add	r7, sp, #0
 8008056:	6078      	str	r0, [r7, #4]
 8008058:	687b      	ldr	r3, [r7, #4]
 800805a:	2b00      	cmp	r3, #0
 800805c:	d101      	bne.n	8008062 <HAL_TIM_PWM_Init+0x12>
 800805e:	2301      	movs	r3, #1
 8008060:	e041      	b.n	80080e6 <HAL_TIM_PWM_Init+0x96>
 8008062:	687b      	ldr	r3, [r7, #4]
 8008064:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8008068:	b2db      	uxtb	r3, r3
 800806a:	2b00      	cmp	r3, #0
 800806c:	d106      	bne.n	800807c <HAL_TIM_PWM_Init+0x2c>
 800806e:	687b      	ldr	r3, [r7, #4]
 8008070:	2200      	movs	r2, #0
 8008072:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008076:	6878      	ldr	r0, [r7, #4]
 8008078:	f000 f839 	bl	80080ee <HAL_TIM_PWM_MspInit>
 800807c:	687b      	ldr	r3, [r7, #4]
 800807e:	2202      	movs	r2, #2
 8008080:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008084:	687b      	ldr	r3, [r7, #4]
 8008086:	681a      	ldr	r2, [r3, #0]
 8008088:	687b      	ldr	r3, [r7, #4]
 800808a:	3304      	adds	r3, #4
 800808c:	4619      	mov	r1, r3
 800808e:	4610      	mov	r0, r2
 8008090:	f001 f8fc 	bl	800928c <TIM_Base_SetConfig>
 8008094:	687b      	ldr	r3, [r7, #4]
 8008096:	2201      	movs	r2, #1
 8008098:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800809c:	687b      	ldr	r3, [r7, #4]
 800809e:	2201      	movs	r2, #1
 80080a0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80080a4:	687b      	ldr	r3, [r7, #4]
 80080a6:	2201      	movs	r2, #1
 80080a8:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80080ac:	687b      	ldr	r3, [r7, #4]
 80080ae:	2201      	movs	r2, #1
 80080b0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80080b4:	687b      	ldr	r3, [r7, #4]
 80080b6:	2201      	movs	r2, #1
 80080b8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80080bc:	687b      	ldr	r3, [r7, #4]
 80080be:	2201      	movs	r2, #1
 80080c0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80080c4:	687b      	ldr	r3, [r7, #4]
 80080c6:	2201      	movs	r2, #1
 80080c8:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80080cc:	687b      	ldr	r3, [r7, #4]
 80080ce:	2201      	movs	r2, #1
 80080d0:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80080d4:	687b      	ldr	r3, [r7, #4]
 80080d6:	2201      	movs	r2, #1
 80080d8:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80080dc:	687b      	ldr	r3, [r7, #4]
 80080de:	2201      	movs	r2, #1
 80080e0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80080e4:	2300      	movs	r3, #0
 80080e6:	4618      	mov	r0, r3
 80080e8:	3708      	adds	r7, #8
 80080ea:	46bd      	mov	sp, r7
 80080ec:	bd80      	pop	{r7, pc}

080080ee <HAL_TIM_PWM_MspInit>:
 80080ee:	b480      	push	{r7}
 80080f0:	b083      	sub	sp, #12
 80080f2:	af00      	add	r7, sp, #0
 80080f4:	6078      	str	r0, [r7, #4]
 80080f6:	bf00      	nop
 80080f8:	370c      	adds	r7, #12
 80080fa:	46bd      	mov	sp, r7
 80080fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008100:	4770      	bx	lr
	...

08008104 <HAL_TIM_PWM_Start>:
 8008104:	b580      	push	{r7, lr}
 8008106:	b084      	sub	sp, #16
 8008108:	af00      	add	r7, sp, #0
 800810a:	6078      	str	r0, [r7, #4]
 800810c:	6039      	str	r1, [r7, #0]
 800810e:	683b      	ldr	r3, [r7, #0]
 8008110:	2b00      	cmp	r3, #0
 8008112:	d109      	bne.n	8008128 <HAL_TIM_PWM_Start+0x24>
 8008114:	687b      	ldr	r3, [r7, #4]
 8008116:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800811a:	b2db      	uxtb	r3, r3
 800811c:	2b01      	cmp	r3, #1
 800811e:	bf14      	ite	ne
 8008120:	2301      	movne	r3, #1
 8008122:	2300      	moveq	r3, #0
 8008124:	b2db      	uxtb	r3, r3
 8008126:	e022      	b.n	800816e <HAL_TIM_PWM_Start+0x6a>
 8008128:	683b      	ldr	r3, [r7, #0]
 800812a:	2b04      	cmp	r3, #4
 800812c:	d109      	bne.n	8008142 <HAL_TIM_PWM_Start+0x3e>
 800812e:	687b      	ldr	r3, [r7, #4]
 8008130:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8008134:	b2db      	uxtb	r3, r3
 8008136:	2b01      	cmp	r3, #1
 8008138:	bf14      	ite	ne
 800813a:	2301      	movne	r3, #1
 800813c:	2300      	moveq	r3, #0
 800813e:	b2db      	uxtb	r3, r3
 8008140:	e015      	b.n	800816e <HAL_TIM_PWM_Start+0x6a>
 8008142:	683b      	ldr	r3, [r7, #0]
 8008144:	2b08      	cmp	r3, #8
 8008146:	d109      	bne.n	800815c <HAL_TIM_PWM_Start+0x58>
 8008148:	687b      	ldr	r3, [r7, #4]
 800814a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800814e:	b2db      	uxtb	r3, r3
 8008150:	2b01      	cmp	r3, #1
 8008152:	bf14      	ite	ne
 8008154:	2301      	movne	r3, #1
 8008156:	2300      	moveq	r3, #0
 8008158:	b2db      	uxtb	r3, r3
 800815a:	e008      	b.n	800816e <HAL_TIM_PWM_Start+0x6a>
 800815c:	687b      	ldr	r3, [r7, #4]
 800815e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8008162:	b2db      	uxtb	r3, r3
 8008164:	2b01      	cmp	r3, #1
 8008166:	bf14      	ite	ne
 8008168:	2301      	movne	r3, #1
 800816a:	2300      	moveq	r3, #0
 800816c:	b2db      	uxtb	r3, r3
 800816e:	2b00      	cmp	r3, #0
 8008170:	d001      	beq.n	8008176 <HAL_TIM_PWM_Start+0x72>
 8008172:	2301      	movs	r3, #1
 8008174:	e07c      	b.n	8008270 <HAL_TIM_PWM_Start+0x16c>
 8008176:	683b      	ldr	r3, [r7, #0]
 8008178:	2b00      	cmp	r3, #0
 800817a:	d104      	bne.n	8008186 <HAL_TIM_PWM_Start+0x82>
 800817c:	687b      	ldr	r3, [r7, #4]
 800817e:	2202      	movs	r2, #2
 8008180:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008184:	e013      	b.n	80081ae <HAL_TIM_PWM_Start+0xaa>
 8008186:	683b      	ldr	r3, [r7, #0]
 8008188:	2b04      	cmp	r3, #4
 800818a:	d104      	bne.n	8008196 <HAL_TIM_PWM_Start+0x92>
 800818c:	687b      	ldr	r3, [r7, #4]
 800818e:	2202      	movs	r2, #2
 8008190:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8008194:	e00b      	b.n	80081ae <HAL_TIM_PWM_Start+0xaa>
 8008196:	683b      	ldr	r3, [r7, #0]
 8008198:	2b08      	cmp	r3, #8
 800819a:	d104      	bne.n	80081a6 <HAL_TIM_PWM_Start+0xa2>
 800819c:	687b      	ldr	r3, [r7, #4]
 800819e:	2202      	movs	r2, #2
 80081a0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80081a4:	e003      	b.n	80081ae <HAL_TIM_PWM_Start+0xaa>
 80081a6:	687b      	ldr	r3, [r7, #4]
 80081a8:	2202      	movs	r2, #2
 80081aa:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80081ae:	687b      	ldr	r3, [r7, #4]
 80081b0:	681b      	ldr	r3, [r3, #0]
 80081b2:	2201      	movs	r2, #1
 80081b4:	6839      	ldr	r1, [r7, #0]
 80081b6:	4618      	mov	r0, r3
 80081b8:	f001 fc7c 	bl	8009ab4 <TIM_CCxChannelCmd>
 80081bc:	687b      	ldr	r3, [r7, #4]
 80081be:	681b      	ldr	r3, [r3, #0]
 80081c0:	4a2d      	ldr	r2, [pc, #180]	; (8008278 <HAL_TIM_PWM_Start+0x174>)
 80081c2:	4293      	cmp	r3, r2
 80081c4:	d004      	beq.n	80081d0 <HAL_TIM_PWM_Start+0xcc>
 80081c6:	687b      	ldr	r3, [r7, #4]
 80081c8:	681b      	ldr	r3, [r3, #0]
 80081ca:	4a2c      	ldr	r2, [pc, #176]	; (800827c <HAL_TIM_PWM_Start+0x178>)
 80081cc:	4293      	cmp	r3, r2
 80081ce:	d101      	bne.n	80081d4 <HAL_TIM_PWM_Start+0xd0>
 80081d0:	2301      	movs	r3, #1
 80081d2:	e000      	b.n	80081d6 <HAL_TIM_PWM_Start+0xd2>
 80081d4:	2300      	movs	r3, #0
 80081d6:	2b00      	cmp	r3, #0
 80081d8:	d007      	beq.n	80081ea <HAL_TIM_PWM_Start+0xe6>
 80081da:	687b      	ldr	r3, [r7, #4]
 80081dc:	681b      	ldr	r3, [r3, #0]
 80081de:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80081e0:	687b      	ldr	r3, [r7, #4]
 80081e2:	681b      	ldr	r3, [r3, #0]
 80081e4:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80081e8:	645a      	str	r2, [r3, #68]	; 0x44
 80081ea:	687b      	ldr	r3, [r7, #4]
 80081ec:	681b      	ldr	r3, [r3, #0]
 80081ee:	4a22      	ldr	r2, [pc, #136]	; (8008278 <HAL_TIM_PWM_Start+0x174>)
 80081f0:	4293      	cmp	r3, r2
 80081f2:	d022      	beq.n	800823a <HAL_TIM_PWM_Start+0x136>
 80081f4:	687b      	ldr	r3, [r7, #4]
 80081f6:	681b      	ldr	r3, [r3, #0]
 80081f8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80081fc:	d01d      	beq.n	800823a <HAL_TIM_PWM_Start+0x136>
 80081fe:	687b      	ldr	r3, [r7, #4]
 8008200:	681b      	ldr	r3, [r3, #0]
 8008202:	4a1f      	ldr	r2, [pc, #124]	; (8008280 <HAL_TIM_PWM_Start+0x17c>)
 8008204:	4293      	cmp	r3, r2
 8008206:	d018      	beq.n	800823a <HAL_TIM_PWM_Start+0x136>
 8008208:	687b      	ldr	r3, [r7, #4]
 800820a:	681b      	ldr	r3, [r3, #0]
 800820c:	4a1d      	ldr	r2, [pc, #116]	; (8008284 <HAL_TIM_PWM_Start+0x180>)
 800820e:	4293      	cmp	r3, r2
 8008210:	d013      	beq.n	800823a <HAL_TIM_PWM_Start+0x136>
 8008212:	687b      	ldr	r3, [r7, #4]
 8008214:	681b      	ldr	r3, [r3, #0]
 8008216:	4a1c      	ldr	r2, [pc, #112]	; (8008288 <HAL_TIM_PWM_Start+0x184>)
 8008218:	4293      	cmp	r3, r2
 800821a:	d00e      	beq.n	800823a <HAL_TIM_PWM_Start+0x136>
 800821c:	687b      	ldr	r3, [r7, #4]
 800821e:	681b      	ldr	r3, [r3, #0]
 8008220:	4a16      	ldr	r2, [pc, #88]	; (800827c <HAL_TIM_PWM_Start+0x178>)
 8008222:	4293      	cmp	r3, r2
 8008224:	d009      	beq.n	800823a <HAL_TIM_PWM_Start+0x136>
 8008226:	687b      	ldr	r3, [r7, #4]
 8008228:	681b      	ldr	r3, [r3, #0]
 800822a:	4a18      	ldr	r2, [pc, #96]	; (800828c <HAL_TIM_PWM_Start+0x188>)
 800822c:	4293      	cmp	r3, r2
 800822e:	d004      	beq.n	800823a <HAL_TIM_PWM_Start+0x136>
 8008230:	687b      	ldr	r3, [r7, #4]
 8008232:	681b      	ldr	r3, [r3, #0]
 8008234:	4a16      	ldr	r2, [pc, #88]	; (8008290 <HAL_TIM_PWM_Start+0x18c>)
 8008236:	4293      	cmp	r3, r2
 8008238:	d111      	bne.n	800825e <HAL_TIM_PWM_Start+0x15a>
 800823a:	687b      	ldr	r3, [r7, #4]
 800823c:	681b      	ldr	r3, [r3, #0]
 800823e:	689b      	ldr	r3, [r3, #8]
 8008240:	f003 0307 	and.w	r3, r3, #7
 8008244:	60fb      	str	r3, [r7, #12]
 8008246:	68fb      	ldr	r3, [r7, #12]
 8008248:	2b06      	cmp	r3, #6
 800824a:	d010      	beq.n	800826e <HAL_TIM_PWM_Start+0x16a>
 800824c:	687b      	ldr	r3, [r7, #4]
 800824e:	681b      	ldr	r3, [r3, #0]
 8008250:	681a      	ldr	r2, [r3, #0]
 8008252:	687b      	ldr	r3, [r7, #4]
 8008254:	681b      	ldr	r3, [r3, #0]
 8008256:	f042 0201 	orr.w	r2, r2, #1
 800825a:	601a      	str	r2, [r3, #0]
 800825c:	e007      	b.n	800826e <HAL_TIM_PWM_Start+0x16a>
 800825e:	687b      	ldr	r3, [r7, #4]
 8008260:	681b      	ldr	r3, [r3, #0]
 8008262:	681a      	ldr	r2, [r3, #0]
 8008264:	687b      	ldr	r3, [r7, #4]
 8008266:	681b      	ldr	r3, [r3, #0]
 8008268:	f042 0201 	orr.w	r2, r2, #1
 800826c:	601a      	str	r2, [r3, #0]
 800826e:	2300      	movs	r3, #0
 8008270:	4618      	mov	r0, r3
 8008272:	3710      	adds	r7, #16
 8008274:	46bd      	mov	sp, r7
 8008276:	bd80      	pop	{r7, pc}
 8008278:	40010000 	.word	0x40010000
 800827c:	40010400 	.word	0x40010400
 8008280:	40000400 	.word	0x40000400
 8008284:	40000800 	.word	0x40000800
 8008288:	40000c00 	.word	0x40000c00
 800828c:	40014000 	.word	0x40014000
 8008290:	40001800 	.word	0x40001800

08008294 <HAL_TIM_PWM_Stop>:
 8008294:	b580      	push	{r7, lr}
 8008296:	b082      	sub	sp, #8
 8008298:	af00      	add	r7, sp, #0
 800829a:	6078      	str	r0, [r7, #4]
 800829c:	6039      	str	r1, [r7, #0]
 800829e:	687b      	ldr	r3, [r7, #4]
 80082a0:	681b      	ldr	r3, [r3, #0]
 80082a2:	2200      	movs	r2, #0
 80082a4:	6839      	ldr	r1, [r7, #0]
 80082a6:	4618      	mov	r0, r3
 80082a8:	f001 fc04 	bl	8009ab4 <TIM_CCxChannelCmd>
 80082ac:	687b      	ldr	r3, [r7, #4]
 80082ae:	681b      	ldr	r3, [r3, #0]
 80082b0:	4a2e      	ldr	r2, [pc, #184]	; (800836c <HAL_TIM_PWM_Stop+0xd8>)
 80082b2:	4293      	cmp	r3, r2
 80082b4:	d004      	beq.n	80082c0 <HAL_TIM_PWM_Stop+0x2c>
 80082b6:	687b      	ldr	r3, [r7, #4]
 80082b8:	681b      	ldr	r3, [r3, #0]
 80082ba:	4a2d      	ldr	r2, [pc, #180]	; (8008370 <HAL_TIM_PWM_Stop+0xdc>)
 80082bc:	4293      	cmp	r3, r2
 80082be:	d101      	bne.n	80082c4 <HAL_TIM_PWM_Stop+0x30>
 80082c0:	2301      	movs	r3, #1
 80082c2:	e000      	b.n	80082c6 <HAL_TIM_PWM_Stop+0x32>
 80082c4:	2300      	movs	r3, #0
 80082c6:	2b00      	cmp	r3, #0
 80082c8:	d017      	beq.n	80082fa <HAL_TIM_PWM_Stop+0x66>
 80082ca:	687b      	ldr	r3, [r7, #4]
 80082cc:	681b      	ldr	r3, [r3, #0]
 80082ce:	6a1a      	ldr	r2, [r3, #32]
 80082d0:	f241 1311 	movw	r3, #4369	; 0x1111
 80082d4:	4013      	ands	r3, r2
 80082d6:	2b00      	cmp	r3, #0
 80082d8:	d10f      	bne.n	80082fa <HAL_TIM_PWM_Stop+0x66>
 80082da:	687b      	ldr	r3, [r7, #4]
 80082dc:	681b      	ldr	r3, [r3, #0]
 80082de:	6a1a      	ldr	r2, [r3, #32]
 80082e0:	f240 4344 	movw	r3, #1092	; 0x444
 80082e4:	4013      	ands	r3, r2
 80082e6:	2b00      	cmp	r3, #0
 80082e8:	d107      	bne.n	80082fa <HAL_TIM_PWM_Stop+0x66>
 80082ea:	687b      	ldr	r3, [r7, #4]
 80082ec:	681b      	ldr	r3, [r3, #0]
 80082ee:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80082f0:	687b      	ldr	r3, [r7, #4]
 80082f2:	681b      	ldr	r3, [r3, #0]
 80082f4:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80082f8:	645a      	str	r2, [r3, #68]	; 0x44
 80082fa:	687b      	ldr	r3, [r7, #4]
 80082fc:	681b      	ldr	r3, [r3, #0]
 80082fe:	6a1a      	ldr	r2, [r3, #32]
 8008300:	f241 1311 	movw	r3, #4369	; 0x1111
 8008304:	4013      	ands	r3, r2
 8008306:	2b00      	cmp	r3, #0
 8008308:	d10f      	bne.n	800832a <HAL_TIM_PWM_Stop+0x96>
 800830a:	687b      	ldr	r3, [r7, #4]
 800830c:	681b      	ldr	r3, [r3, #0]
 800830e:	6a1a      	ldr	r2, [r3, #32]
 8008310:	f240 4344 	movw	r3, #1092	; 0x444
 8008314:	4013      	ands	r3, r2
 8008316:	2b00      	cmp	r3, #0
 8008318:	d107      	bne.n	800832a <HAL_TIM_PWM_Stop+0x96>
 800831a:	687b      	ldr	r3, [r7, #4]
 800831c:	681b      	ldr	r3, [r3, #0]
 800831e:	681a      	ldr	r2, [r3, #0]
 8008320:	687b      	ldr	r3, [r7, #4]
 8008322:	681b      	ldr	r3, [r3, #0]
 8008324:	f022 0201 	bic.w	r2, r2, #1
 8008328:	601a      	str	r2, [r3, #0]
 800832a:	683b      	ldr	r3, [r7, #0]
 800832c:	2b00      	cmp	r3, #0
 800832e:	d104      	bne.n	800833a <HAL_TIM_PWM_Stop+0xa6>
 8008330:	687b      	ldr	r3, [r7, #4]
 8008332:	2201      	movs	r2, #1
 8008334:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008338:	e013      	b.n	8008362 <HAL_TIM_PWM_Stop+0xce>
 800833a:	683b      	ldr	r3, [r7, #0]
 800833c:	2b04      	cmp	r3, #4
 800833e:	d104      	bne.n	800834a <HAL_TIM_PWM_Stop+0xb6>
 8008340:	687b      	ldr	r3, [r7, #4]
 8008342:	2201      	movs	r2, #1
 8008344:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8008348:	e00b      	b.n	8008362 <HAL_TIM_PWM_Stop+0xce>
 800834a:	683b      	ldr	r3, [r7, #0]
 800834c:	2b08      	cmp	r3, #8
 800834e:	d104      	bne.n	800835a <HAL_TIM_PWM_Stop+0xc6>
 8008350:	687b      	ldr	r3, [r7, #4]
 8008352:	2201      	movs	r2, #1
 8008354:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008358:	e003      	b.n	8008362 <HAL_TIM_PWM_Stop+0xce>
 800835a:	687b      	ldr	r3, [r7, #4]
 800835c:	2201      	movs	r2, #1
 800835e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008362:	2300      	movs	r3, #0
 8008364:	4618      	mov	r0, r3
 8008366:	3708      	adds	r7, #8
 8008368:	46bd      	mov	sp, r7
 800836a:	bd80      	pop	{r7, pc}
 800836c:	40010000 	.word	0x40010000
 8008370:	40010400 	.word	0x40010400

08008374 <HAL_TIM_IC_Init>:
 8008374:	b580      	push	{r7, lr}
 8008376:	b082      	sub	sp, #8
 8008378:	af00      	add	r7, sp, #0
 800837a:	6078      	str	r0, [r7, #4]
 800837c:	687b      	ldr	r3, [r7, #4]
 800837e:	2b00      	cmp	r3, #0
 8008380:	d101      	bne.n	8008386 <HAL_TIM_IC_Init+0x12>
 8008382:	2301      	movs	r3, #1
 8008384:	e041      	b.n	800840a <HAL_TIM_IC_Init+0x96>
 8008386:	687b      	ldr	r3, [r7, #4]
 8008388:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800838c:	b2db      	uxtb	r3, r3
 800838e:	2b00      	cmp	r3, #0
 8008390:	d106      	bne.n	80083a0 <HAL_TIM_IC_Init+0x2c>
 8008392:	687b      	ldr	r3, [r7, #4]
 8008394:	2200      	movs	r2, #0
 8008396:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800839a:	6878      	ldr	r0, [r7, #4]
 800839c:	f000 f839 	bl	8008412 <HAL_TIM_IC_MspInit>
 80083a0:	687b      	ldr	r3, [r7, #4]
 80083a2:	2202      	movs	r2, #2
 80083a4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80083a8:	687b      	ldr	r3, [r7, #4]
 80083aa:	681a      	ldr	r2, [r3, #0]
 80083ac:	687b      	ldr	r3, [r7, #4]
 80083ae:	3304      	adds	r3, #4
 80083b0:	4619      	mov	r1, r3
 80083b2:	4610      	mov	r0, r2
 80083b4:	f000 ff6a 	bl	800928c <TIM_Base_SetConfig>
 80083b8:	687b      	ldr	r3, [r7, #4]
 80083ba:	2201      	movs	r2, #1
 80083bc:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80083c0:	687b      	ldr	r3, [r7, #4]
 80083c2:	2201      	movs	r2, #1
 80083c4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80083c8:	687b      	ldr	r3, [r7, #4]
 80083ca:	2201      	movs	r2, #1
 80083cc:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80083d0:	687b      	ldr	r3, [r7, #4]
 80083d2:	2201      	movs	r2, #1
 80083d4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80083d8:	687b      	ldr	r3, [r7, #4]
 80083da:	2201      	movs	r2, #1
 80083dc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80083e0:	687b      	ldr	r3, [r7, #4]
 80083e2:	2201      	movs	r2, #1
 80083e4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80083e8:	687b      	ldr	r3, [r7, #4]
 80083ea:	2201      	movs	r2, #1
 80083ec:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80083f0:	687b      	ldr	r3, [r7, #4]
 80083f2:	2201      	movs	r2, #1
 80083f4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80083f8:	687b      	ldr	r3, [r7, #4]
 80083fa:	2201      	movs	r2, #1
 80083fc:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8008400:	687b      	ldr	r3, [r7, #4]
 8008402:	2201      	movs	r2, #1
 8008404:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008408:	2300      	movs	r3, #0
 800840a:	4618      	mov	r0, r3
 800840c:	3708      	adds	r7, #8
 800840e:	46bd      	mov	sp, r7
 8008410:	bd80      	pop	{r7, pc}

08008412 <HAL_TIM_IC_MspInit>:
 8008412:	b480      	push	{r7}
 8008414:	b083      	sub	sp, #12
 8008416:	af00      	add	r7, sp, #0
 8008418:	6078      	str	r0, [r7, #4]
 800841a:	bf00      	nop
 800841c:	370c      	adds	r7, #12
 800841e:	46bd      	mov	sp, r7
 8008420:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008424:	4770      	bx	lr
	...

08008428 <HAL_TIM_IC_Start_DMA>:
 8008428:	b580      	push	{r7, lr}
 800842a:	b086      	sub	sp, #24
 800842c:	af00      	add	r7, sp, #0
 800842e:	60f8      	str	r0, [r7, #12]
 8008430:	60b9      	str	r1, [r7, #8]
 8008432:	607a      	str	r2, [r7, #4]
 8008434:	807b      	strh	r3, [r7, #2]
 8008436:	2300      	movs	r3, #0
 8008438:	75fb      	strb	r3, [r7, #23]
 800843a:	68bb      	ldr	r3, [r7, #8]
 800843c:	2b00      	cmp	r3, #0
 800843e:	d104      	bne.n	800844a <HAL_TIM_IC_Start_DMA+0x22>
 8008440:	68fb      	ldr	r3, [r7, #12]
 8008442:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8008446:	b2db      	uxtb	r3, r3
 8008448:	e013      	b.n	8008472 <HAL_TIM_IC_Start_DMA+0x4a>
 800844a:	68bb      	ldr	r3, [r7, #8]
 800844c:	2b04      	cmp	r3, #4
 800844e:	d104      	bne.n	800845a <HAL_TIM_IC_Start_DMA+0x32>
 8008450:	68fb      	ldr	r3, [r7, #12]
 8008452:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8008456:	b2db      	uxtb	r3, r3
 8008458:	e00b      	b.n	8008472 <HAL_TIM_IC_Start_DMA+0x4a>
 800845a:	68bb      	ldr	r3, [r7, #8]
 800845c:	2b08      	cmp	r3, #8
 800845e:	d104      	bne.n	800846a <HAL_TIM_IC_Start_DMA+0x42>
 8008460:	68fb      	ldr	r3, [r7, #12]
 8008462:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8008466:	b2db      	uxtb	r3, r3
 8008468:	e003      	b.n	8008472 <HAL_TIM_IC_Start_DMA+0x4a>
 800846a:	68fb      	ldr	r3, [r7, #12]
 800846c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8008470:	b2db      	uxtb	r3, r3
 8008472:	75bb      	strb	r3, [r7, #22]
 8008474:	68bb      	ldr	r3, [r7, #8]
 8008476:	2b00      	cmp	r3, #0
 8008478:	d104      	bne.n	8008484 <HAL_TIM_IC_Start_DMA+0x5c>
 800847a:	68fb      	ldr	r3, [r7, #12]
 800847c:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8008480:	b2db      	uxtb	r3, r3
 8008482:	e013      	b.n	80084ac <HAL_TIM_IC_Start_DMA+0x84>
 8008484:	68bb      	ldr	r3, [r7, #8]
 8008486:	2b04      	cmp	r3, #4
 8008488:	d104      	bne.n	8008494 <HAL_TIM_IC_Start_DMA+0x6c>
 800848a:	68fb      	ldr	r3, [r7, #12]
 800848c:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 8008490:	b2db      	uxtb	r3, r3
 8008492:	e00b      	b.n	80084ac <HAL_TIM_IC_Start_DMA+0x84>
 8008494:	68bb      	ldr	r3, [r7, #8]
 8008496:	2b08      	cmp	r3, #8
 8008498:	d104      	bne.n	80084a4 <HAL_TIM_IC_Start_DMA+0x7c>
 800849a:	68fb      	ldr	r3, [r7, #12]
 800849c:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 80084a0:	b2db      	uxtb	r3, r3
 80084a2:	e003      	b.n	80084ac <HAL_TIM_IC_Start_DMA+0x84>
 80084a4:	68fb      	ldr	r3, [r7, #12]
 80084a6:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 80084aa:	b2db      	uxtb	r3, r3
 80084ac:	757b      	strb	r3, [r7, #21]
 80084ae:	7dbb      	ldrb	r3, [r7, #22]
 80084b0:	2b02      	cmp	r3, #2
 80084b2:	d002      	beq.n	80084ba <HAL_TIM_IC_Start_DMA+0x92>
 80084b4:	7d7b      	ldrb	r3, [r7, #21]
 80084b6:	2b02      	cmp	r3, #2
 80084b8:	d101      	bne.n	80084be <HAL_TIM_IC_Start_DMA+0x96>
 80084ba:	2302      	movs	r3, #2
 80084bc:	e146      	b.n	800874c <HAL_TIM_IC_Start_DMA+0x324>
 80084be:	7dbb      	ldrb	r3, [r7, #22]
 80084c0:	2b01      	cmp	r3, #1
 80084c2:	d143      	bne.n	800854c <HAL_TIM_IC_Start_DMA+0x124>
 80084c4:	7d7b      	ldrb	r3, [r7, #21]
 80084c6:	2b01      	cmp	r3, #1
 80084c8:	d140      	bne.n	800854c <HAL_TIM_IC_Start_DMA+0x124>
 80084ca:	687b      	ldr	r3, [r7, #4]
 80084cc:	2b00      	cmp	r3, #0
 80084ce:	d104      	bne.n	80084da <HAL_TIM_IC_Start_DMA+0xb2>
 80084d0:	887b      	ldrh	r3, [r7, #2]
 80084d2:	2b00      	cmp	r3, #0
 80084d4:	d001      	beq.n	80084da <HAL_TIM_IC_Start_DMA+0xb2>
 80084d6:	2301      	movs	r3, #1
 80084d8:	e138      	b.n	800874c <HAL_TIM_IC_Start_DMA+0x324>
 80084da:	68bb      	ldr	r3, [r7, #8]
 80084dc:	2b00      	cmp	r3, #0
 80084de:	d104      	bne.n	80084ea <HAL_TIM_IC_Start_DMA+0xc2>
 80084e0:	68fb      	ldr	r3, [r7, #12]
 80084e2:	2202      	movs	r2, #2
 80084e4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80084e8:	e013      	b.n	8008512 <HAL_TIM_IC_Start_DMA+0xea>
 80084ea:	68bb      	ldr	r3, [r7, #8]
 80084ec:	2b04      	cmp	r3, #4
 80084ee:	d104      	bne.n	80084fa <HAL_TIM_IC_Start_DMA+0xd2>
 80084f0:	68fb      	ldr	r3, [r7, #12]
 80084f2:	2202      	movs	r2, #2
 80084f4:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80084f8:	e00b      	b.n	8008512 <HAL_TIM_IC_Start_DMA+0xea>
 80084fa:	68bb      	ldr	r3, [r7, #8]
 80084fc:	2b08      	cmp	r3, #8
 80084fe:	d104      	bne.n	800850a <HAL_TIM_IC_Start_DMA+0xe2>
 8008500:	68fb      	ldr	r3, [r7, #12]
 8008502:	2202      	movs	r2, #2
 8008504:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008508:	e003      	b.n	8008512 <HAL_TIM_IC_Start_DMA+0xea>
 800850a:	68fb      	ldr	r3, [r7, #12]
 800850c:	2202      	movs	r2, #2
 800850e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008512:	68bb      	ldr	r3, [r7, #8]
 8008514:	2b00      	cmp	r3, #0
 8008516:	d104      	bne.n	8008522 <HAL_TIM_IC_Start_DMA+0xfa>
 8008518:	68fb      	ldr	r3, [r7, #12]
 800851a:	2202      	movs	r2, #2
 800851c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8008520:	e016      	b.n	8008550 <HAL_TIM_IC_Start_DMA+0x128>
 8008522:	68bb      	ldr	r3, [r7, #8]
 8008524:	2b04      	cmp	r3, #4
 8008526:	d104      	bne.n	8008532 <HAL_TIM_IC_Start_DMA+0x10a>
 8008528:	68fb      	ldr	r3, [r7, #12]
 800852a:	2202      	movs	r2, #2
 800852c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8008530:	e00e      	b.n	8008550 <HAL_TIM_IC_Start_DMA+0x128>
 8008532:	68bb      	ldr	r3, [r7, #8]
 8008534:	2b08      	cmp	r3, #8
 8008536:	d104      	bne.n	8008542 <HAL_TIM_IC_Start_DMA+0x11a>
 8008538:	68fb      	ldr	r3, [r7, #12]
 800853a:	2202      	movs	r2, #2
 800853c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8008540:	e006      	b.n	8008550 <HAL_TIM_IC_Start_DMA+0x128>
 8008542:	68fb      	ldr	r3, [r7, #12]
 8008544:	2202      	movs	r2, #2
 8008546:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800854a:	e001      	b.n	8008550 <HAL_TIM_IC_Start_DMA+0x128>
 800854c:	2301      	movs	r3, #1
 800854e:	e0fd      	b.n	800874c <HAL_TIM_IC_Start_DMA+0x324>
 8008550:	68fb      	ldr	r3, [r7, #12]
 8008552:	681b      	ldr	r3, [r3, #0]
 8008554:	2201      	movs	r2, #1
 8008556:	68b9      	ldr	r1, [r7, #8]
 8008558:	4618      	mov	r0, r3
 800855a:	f001 faab 	bl	8009ab4 <TIM_CCxChannelCmd>
 800855e:	68bb      	ldr	r3, [r7, #8]
 8008560:	2b0c      	cmp	r3, #12
 8008562:	f200 80ad 	bhi.w	80086c0 <HAL_TIM_IC_Start_DMA+0x298>
 8008566:	a201      	add	r2, pc, #4	; (adr r2, 800856c <HAL_TIM_IC_Start_DMA+0x144>)
 8008568:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800856c:	080085a1 	.word	0x080085a1
 8008570:	080086c1 	.word	0x080086c1
 8008574:	080086c1 	.word	0x080086c1
 8008578:	080086c1 	.word	0x080086c1
 800857c:	080085e9 	.word	0x080085e9
 8008580:	080086c1 	.word	0x080086c1
 8008584:	080086c1 	.word	0x080086c1
 8008588:	080086c1 	.word	0x080086c1
 800858c:	08008631 	.word	0x08008631
 8008590:	080086c1 	.word	0x080086c1
 8008594:	080086c1 	.word	0x080086c1
 8008598:	080086c1 	.word	0x080086c1
 800859c:	08008679 	.word	0x08008679
 80085a0:	68fb      	ldr	r3, [r7, #12]
 80085a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80085a4:	4a6b      	ldr	r2, [pc, #428]	; (8008754 <HAL_TIM_IC_Start_DMA+0x32c>)
 80085a6:	63da      	str	r2, [r3, #60]	; 0x3c
 80085a8:	68fb      	ldr	r3, [r7, #12]
 80085aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80085ac:	4a6a      	ldr	r2, [pc, #424]	; (8008758 <HAL_TIM_IC_Start_DMA+0x330>)
 80085ae:	641a      	str	r2, [r3, #64]	; 0x40
 80085b0:	68fb      	ldr	r3, [r7, #12]
 80085b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80085b4:	4a69      	ldr	r2, [pc, #420]	; (800875c <HAL_TIM_IC_Start_DMA+0x334>)
 80085b6:	64da      	str	r2, [r3, #76]	; 0x4c
 80085b8:	68fb      	ldr	r3, [r7, #12]
 80085ba:	6a58      	ldr	r0, [r3, #36]	; 0x24
 80085bc:	68fb      	ldr	r3, [r7, #12]
 80085be:	681b      	ldr	r3, [r3, #0]
 80085c0:	3334      	adds	r3, #52	; 0x34
 80085c2:	4619      	mov	r1, r3
 80085c4:	687a      	ldr	r2, [r7, #4]
 80085c6:	887b      	ldrh	r3, [r7, #2]
 80085c8:	f7fd fef8 	bl	80063bc <HAL_DMA_Start_IT>
 80085cc:	4603      	mov	r3, r0
 80085ce:	2b00      	cmp	r3, #0
 80085d0:	d001      	beq.n	80085d6 <HAL_TIM_IC_Start_DMA+0x1ae>
 80085d2:	2301      	movs	r3, #1
 80085d4:	e0ba      	b.n	800874c <HAL_TIM_IC_Start_DMA+0x324>
 80085d6:	68fb      	ldr	r3, [r7, #12]
 80085d8:	681b      	ldr	r3, [r3, #0]
 80085da:	68da      	ldr	r2, [r3, #12]
 80085dc:	68fb      	ldr	r3, [r7, #12]
 80085de:	681b      	ldr	r3, [r3, #0]
 80085e0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80085e4:	60da      	str	r2, [r3, #12]
 80085e6:	e06e      	b.n	80086c6 <HAL_TIM_IC_Start_DMA+0x29e>
 80085e8:	68fb      	ldr	r3, [r7, #12]
 80085ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80085ec:	4a59      	ldr	r2, [pc, #356]	; (8008754 <HAL_TIM_IC_Start_DMA+0x32c>)
 80085ee:	63da      	str	r2, [r3, #60]	; 0x3c
 80085f0:	68fb      	ldr	r3, [r7, #12]
 80085f2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80085f4:	4a58      	ldr	r2, [pc, #352]	; (8008758 <HAL_TIM_IC_Start_DMA+0x330>)
 80085f6:	641a      	str	r2, [r3, #64]	; 0x40
 80085f8:	68fb      	ldr	r3, [r7, #12]
 80085fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80085fc:	4a57      	ldr	r2, [pc, #348]	; (800875c <HAL_TIM_IC_Start_DMA+0x334>)
 80085fe:	64da      	str	r2, [r3, #76]	; 0x4c
 8008600:	68fb      	ldr	r3, [r7, #12]
 8008602:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8008604:	68fb      	ldr	r3, [r7, #12]
 8008606:	681b      	ldr	r3, [r3, #0]
 8008608:	3338      	adds	r3, #56	; 0x38
 800860a:	4619      	mov	r1, r3
 800860c:	687a      	ldr	r2, [r7, #4]
 800860e:	887b      	ldrh	r3, [r7, #2]
 8008610:	f7fd fed4 	bl	80063bc <HAL_DMA_Start_IT>
 8008614:	4603      	mov	r3, r0
 8008616:	2b00      	cmp	r3, #0
 8008618:	d001      	beq.n	800861e <HAL_TIM_IC_Start_DMA+0x1f6>
 800861a:	2301      	movs	r3, #1
 800861c:	e096      	b.n	800874c <HAL_TIM_IC_Start_DMA+0x324>
 800861e:	68fb      	ldr	r3, [r7, #12]
 8008620:	681b      	ldr	r3, [r3, #0]
 8008622:	68da      	ldr	r2, [r3, #12]
 8008624:	68fb      	ldr	r3, [r7, #12]
 8008626:	681b      	ldr	r3, [r3, #0]
 8008628:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800862c:	60da      	str	r2, [r3, #12]
 800862e:	e04a      	b.n	80086c6 <HAL_TIM_IC_Start_DMA+0x29e>
 8008630:	68fb      	ldr	r3, [r7, #12]
 8008632:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008634:	4a47      	ldr	r2, [pc, #284]	; (8008754 <HAL_TIM_IC_Start_DMA+0x32c>)
 8008636:	63da      	str	r2, [r3, #60]	; 0x3c
 8008638:	68fb      	ldr	r3, [r7, #12]
 800863a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800863c:	4a46      	ldr	r2, [pc, #280]	; (8008758 <HAL_TIM_IC_Start_DMA+0x330>)
 800863e:	641a      	str	r2, [r3, #64]	; 0x40
 8008640:	68fb      	ldr	r3, [r7, #12]
 8008642:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008644:	4a45      	ldr	r2, [pc, #276]	; (800875c <HAL_TIM_IC_Start_DMA+0x334>)
 8008646:	64da      	str	r2, [r3, #76]	; 0x4c
 8008648:	68fb      	ldr	r3, [r7, #12]
 800864a:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 800864c:	68fb      	ldr	r3, [r7, #12]
 800864e:	681b      	ldr	r3, [r3, #0]
 8008650:	333c      	adds	r3, #60	; 0x3c
 8008652:	4619      	mov	r1, r3
 8008654:	687a      	ldr	r2, [r7, #4]
 8008656:	887b      	ldrh	r3, [r7, #2]
 8008658:	f7fd feb0 	bl	80063bc <HAL_DMA_Start_IT>
 800865c:	4603      	mov	r3, r0
 800865e:	2b00      	cmp	r3, #0
 8008660:	d001      	beq.n	8008666 <HAL_TIM_IC_Start_DMA+0x23e>
 8008662:	2301      	movs	r3, #1
 8008664:	e072      	b.n	800874c <HAL_TIM_IC_Start_DMA+0x324>
 8008666:	68fb      	ldr	r3, [r7, #12]
 8008668:	681b      	ldr	r3, [r3, #0]
 800866a:	68da      	ldr	r2, [r3, #12]
 800866c:	68fb      	ldr	r3, [r7, #12]
 800866e:	681b      	ldr	r3, [r3, #0]
 8008670:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8008674:	60da      	str	r2, [r3, #12]
 8008676:	e026      	b.n	80086c6 <HAL_TIM_IC_Start_DMA+0x29e>
 8008678:	68fb      	ldr	r3, [r7, #12]
 800867a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800867c:	4a35      	ldr	r2, [pc, #212]	; (8008754 <HAL_TIM_IC_Start_DMA+0x32c>)
 800867e:	63da      	str	r2, [r3, #60]	; 0x3c
 8008680:	68fb      	ldr	r3, [r7, #12]
 8008682:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008684:	4a34      	ldr	r2, [pc, #208]	; (8008758 <HAL_TIM_IC_Start_DMA+0x330>)
 8008686:	641a      	str	r2, [r3, #64]	; 0x40
 8008688:	68fb      	ldr	r3, [r7, #12]
 800868a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800868c:	4a33      	ldr	r2, [pc, #204]	; (800875c <HAL_TIM_IC_Start_DMA+0x334>)
 800868e:	64da      	str	r2, [r3, #76]	; 0x4c
 8008690:	68fb      	ldr	r3, [r7, #12]
 8008692:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8008694:	68fb      	ldr	r3, [r7, #12]
 8008696:	681b      	ldr	r3, [r3, #0]
 8008698:	3340      	adds	r3, #64	; 0x40
 800869a:	4619      	mov	r1, r3
 800869c:	687a      	ldr	r2, [r7, #4]
 800869e:	887b      	ldrh	r3, [r7, #2]
 80086a0:	f7fd fe8c 	bl	80063bc <HAL_DMA_Start_IT>
 80086a4:	4603      	mov	r3, r0
 80086a6:	2b00      	cmp	r3, #0
 80086a8:	d001      	beq.n	80086ae <HAL_TIM_IC_Start_DMA+0x286>
 80086aa:	2301      	movs	r3, #1
 80086ac:	e04e      	b.n	800874c <HAL_TIM_IC_Start_DMA+0x324>
 80086ae:	68fb      	ldr	r3, [r7, #12]
 80086b0:	681b      	ldr	r3, [r3, #0]
 80086b2:	68da      	ldr	r2, [r3, #12]
 80086b4:	68fb      	ldr	r3, [r7, #12]
 80086b6:	681b      	ldr	r3, [r3, #0]
 80086b8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80086bc:	60da      	str	r2, [r3, #12]
 80086be:	e002      	b.n	80086c6 <HAL_TIM_IC_Start_DMA+0x29e>
 80086c0:	2301      	movs	r3, #1
 80086c2:	75fb      	strb	r3, [r7, #23]
 80086c4:	bf00      	nop
 80086c6:	68fb      	ldr	r3, [r7, #12]
 80086c8:	681b      	ldr	r3, [r3, #0]
 80086ca:	4a25      	ldr	r2, [pc, #148]	; (8008760 <HAL_TIM_IC_Start_DMA+0x338>)
 80086cc:	4293      	cmp	r3, r2
 80086ce:	d022      	beq.n	8008716 <HAL_TIM_IC_Start_DMA+0x2ee>
 80086d0:	68fb      	ldr	r3, [r7, #12]
 80086d2:	681b      	ldr	r3, [r3, #0]
 80086d4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80086d8:	d01d      	beq.n	8008716 <HAL_TIM_IC_Start_DMA+0x2ee>
 80086da:	68fb      	ldr	r3, [r7, #12]
 80086dc:	681b      	ldr	r3, [r3, #0]
 80086de:	4a21      	ldr	r2, [pc, #132]	; (8008764 <HAL_TIM_IC_Start_DMA+0x33c>)
 80086e0:	4293      	cmp	r3, r2
 80086e2:	d018      	beq.n	8008716 <HAL_TIM_IC_Start_DMA+0x2ee>
 80086e4:	68fb      	ldr	r3, [r7, #12]
 80086e6:	681b      	ldr	r3, [r3, #0]
 80086e8:	4a1f      	ldr	r2, [pc, #124]	; (8008768 <HAL_TIM_IC_Start_DMA+0x340>)
 80086ea:	4293      	cmp	r3, r2
 80086ec:	d013      	beq.n	8008716 <HAL_TIM_IC_Start_DMA+0x2ee>
 80086ee:	68fb      	ldr	r3, [r7, #12]
 80086f0:	681b      	ldr	r3, [r3, #0]
 80086f2:	4a1e      	ldr	r2, [pc, #120]	; (800876c <HAL_TIM_IC_Start_DMA+0x344>)
 80086f4:	4293      	cmp	r3, r2
 80086f6:	d00e      	beq.n	8008716 <HAL_TIM_IC_Start_DMA+0x2ee>
 80086f8:	68fb      	ldr	r3, [r7, #12]
 80086fa:	681b      	ldr	r3, [r3, #0]
 80086fc:	4a1c      	ldr	r2, [pc, #112]	; (8008770 <HAL_TIM_IC_Start_DMA+0x348>)
 80086fe:	4293      	cmp	r3, r2
 8008700:	d009      	beq.n	8008716 <HAL_TIM_IC_Start_DMA+0x2ee>
 8008702:	68fb      	ldr	r3, [r7, #12]
 8008704:	681b      	ldr	r3, [r3, #0]
 8008706:	4a1b      	ldr	r2, [pc, #108]	; (8008774 <HAL_TIM_IC_Start_DMA+0x34c>)
 8008708:	4293      	cmp	r3, r2
 800870a:	d004      	beq.n	8008716 <HAL_TIM_IC_Start_DMA+0x2ee>
 800870c:	68fb      	ldr	r3, [r7, #12]
 800870e:	681b      	ldr	r3, [r3, #0]
 8008710:	4a19      	ldr	r2, [pc, #100]	; (8008778 <HAL_TIM_IC_Start_DMA+0x350>)
 8008712:	4293      	cmp	r3, r2
 8008714:	d111      	bne.n	800873a <HAL_TIM_IC_Start_DMA+0x312>
 8008716:	68fb      	ldr	r3, [r7, #12]
 8008718:	681b      	ldr	r3, [r3, #0]
 800871a:	689b      	ldr	r3, [r3, #8]
 800871c:	f003 0307 	and.w	r3, r3, #7
 8008720:	613b      	str	r3, [r7, #16]
 8008722:	693b      	ldr	r3, [r7, #16]
 8008724:	2b06      	cmp	r3, #6
 8008726:	d010      	beq.n	800874a <HAL_TIM_IC_Start_DMA+0x322>
 8008728:	68fb      	ldr	r3, [r7, #12]
 800872a:	681b      	ldr	r3, [r3, #0]
 800872c:	681a      	ldr	r2, [r3, #0]
 800872e:	68fb      	ldr	r3, [r7, #12]
 8008730:	681b      	ldr	r3, [r3, #0]
 8008732:	f042 0201 	orr.w	r2, r2, #1
 8008736:	601a      	str	r2, [r3, #0]
 8008738:	e007      	b.n	800874a <HAL_TIM_IC_Start_DMA+0x322>
 800873a:	68fb      	ldr	r3, [r7, #12]
 800873c:	681b      	ldr	r3, [r3, #0]
 800873e:	681a      	ldr	r2, [r3, #0]
 8008740:	68fb      	ldr	r3, [r7, #12]
 8008742:	681b      	ldr	r3, [r3, #0]
 8008744:	f042 0201 	orr.w	r2, r2, #1
 8008748:	601a      	str	r2, [r3, #0]
 800874a:	7dfb      	ldrb	r3, [r7, #23]
 800874c:	4618      	mov	r0, r3
 800874e:	3718      	adds	r7, #24
 8008750:	46bd      	mov	sp, r7
 8008752:	bd80      	pop	{r7, pc}
 8008754:	0800915d 	.word	0x0800915d
 8008758:	08009225 	.word	0x08009225
 800875c:	080090cb 	.word	0x080090cb
 8008760:	40010000 	.word	0x40010000
 8008764:	40000400 	.word	0x40000400
 8008768:	40000800 	.word	0x40000800
 800876c:	40000c00 	.word	0x40000c00
 8008770:	40010400 	.word	0x40010400
 8008774:	40014000 	.word	0x40014000
 8008778:	40001800 	.word	0x40001800

0800877c <HAL_TIM_Encoder_Init>:
 800877c:	b580      	push	{r7, lr}
 800877e:	b086      	sub	sp, #24
 8008780:	af00      	add	r7, sp, #0
 8008782:	6078      	str	r0, [r7, #4]
 8008784:	6039      	str	r1, [r7, #0]
 8008786:	687b      	ldr	r3, [r7, #4]
 8008788:	2b00      	cmp	r3, #0
 800878a:	d101      	bne.n	8008790 <HAL_TIM_Encoder_Init+0x14>
 800878c:	2301      	movs	r3, #1
 800878e:	e097      	b.n	80088c0 <HAL_TIM_Encoder_Init+0x144>
 8008790:	687b      	ldr	r3, [r7, #4]
 8008792:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8008796:	b2db      	uxtb	r3, r3
 8008798:	2b00      	cmp	r3, #0
 800879a:	d106      	bne.n	80087aa <HAL_TIM_Encoder_Init+0x2e>
 800879c:	687b      	ldr	r3, [r7, #4]
 800879e:	2200      	movs	r2, #0
 80087a0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80087a4:	6878      	ldr	r0, [r7, #4]
 80087a6:	f7fc fac1 	bl	8004d2c <HAL_TIM_Encoder_MspInit>
 80087aa:	687b      	ldr	r3, [r7, #4]
 80087ac:	2202      	movs	r2, #2
 80087ae:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80087b2:	687b      	ldr	r3, [r7, #4]
 80087b4:	681b      	ldr	r3, [r3, #0]
 80087b6:	689b      	ldr	r3, [r3, #8]
 80087b8:	687a      	ldr	r2, [r7, #4]
 80087ba:	6812      	ldr	r2, [r2, #0]
 80087bc:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80087c0:	f023 0307 	bic.w	r3, r3, #7
 80087c4:	6093      	str	r3, [r2, #8]
 80087c6:	687b      	ldr	r3, [r7, #4]
 80087c8:	681a      	ldr	r2, [r3, #0]
 80087ca:	687b      	ldr	r3, [r7, #4]
 80087cc:	3304      	adds	r3, #4
 80087ce:	4619      	mov	r1, r3
 80087d0:	4610      	mov	r0, r2
 80087d2:	f000 fd5b 	bl	800928c <TIM_Base_SetConfig>
 80087d6:	687b      	ldr	r3, [r7, #4]
 80087d8:	681b      	ldr	r3, [r3, #0]
 80087da:	689b      	ldr	r3, [r3, #8]
 80087dc:	617b      	str	r3, [r7, #20]
 80087de:	687b      	ldr	r3, [r7, #4]
 80087e0:	681b      	ldr	r3, [r3, #0]
 80087e2:	699b      	ldr	r3, [r3, #24]
 80087e4:	613b      	str	r3, [r7, #16]
 80087e6:	687b      	ldr	r3, [r7, #4]
 80087e8:	681b      	ldr	r3, [r3, #0]
 80087ea:	6a1b      	ldr	r3, [r3, #32]
 80087ec:	60fb      	str	r3, [r7, #12]
 80087ee:	683b      	ldr	r3, [r7, #0]
 80087f0:	681b      	ldr	r3, [r3, #0]
 80087f2:	697a      	ldr	r2, [r7, #20]
 80087f4:	4313      	orrs	r3, r2
 80087f6:	617b      	str	r3, [r7, #20]
 80087f8:	693b      	ldr	r3, [r7, #16]
 80087fa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80087fe:	f023 0303 	bic.w	r3, r3, #3
 8008802:	613b      	str	r3, [r7, #16]
 8008804:	683b      	ldr	r3, [r7, #0]
 8008806:	689a      	ldr	r2, [r3, #8]
 8008808:	683b      	ldr	r3, [r7, #0]
 800880a:	699b      	ldr	r3, [r3, #24]
 800880c:	021b      	lsls	r3, r3, #8
 800880e:	4313      	orrs	r3, r2
 8008810:	693a      	ldr	r2, [r7, #16]
 8008812:	4313      	orrs	r3, r2
 8008814:	613b      	str	r3, [r7, #16]
 8008816:	693b      	ldr	r3, [r7, #16]
 8008818:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 800881c:	f023 030c 	bic.w	r3, r3, #12
 8008820:	613b      	str	r3, [r7, #16]
 8008822:	693b      	ldr	r3, [r7, #16]
 8008824:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8008828:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800882c:	613b      	str	r3, [r7, #16]
 800882e:	683b      	ldr	r3, [r7, #0]
 8008830:	68da      	ldr	r2, [r3, #12]
 8008832:	683b      	ldr	r3, [r7, #0]
 8008834:	69db      	ldr	r3, [r3, #28]
 8008836:	021b      	lsls	r3, r3, #8
 8008838:	4313      	orrs	r3, r2
 800883a:	693a      	ldr	r2, [r7, #16]
 800883c:	4313      	orrs	r3, r2
 800883e:	613b      	str	r3, [r7, #16]
 8008840:	683b      	ldr	r3, [r7, #0]
 8008842:	691b      	ldr	r3, [r3, #16]
 8008844:	011a      	lsls	r2, r3, #4
 8008846:	683b      	ldr	r3, [r7, #0]
 8008848:	6a1b      	ldr	r3, [r3, #32]
 800884a:	031b      	lsls	r3, r3, #12
 800884c:	4313      	orrs	r3, r2
 800884e:	693a      	ldr	r2, [r7, #16]
 8008850:	4313      	orrs	r3, r2
 8008852:	613b      	str	r3, [r7, #16]
 8008854:	68fb      	ldr	r3, [r7, #12]
 8008856:	f023 0322 	bic.w	r3, r3, #34	; 0x22
 800885a:	60fb      	str	r3, [r7, #12]
 800885c:	68fb      	ldr	r3, [r7, #12]
 800885e:	f023 0388 	bic.w	r3, r3, #136	; 0x88
 8008862:	60fb      	str	r3, [r7, #12]
 8008864:	683b      	ldr	r3, [r7, #0]
 8008866:	685a      	ldr	r2, [r3, #4]
 8008868:	683b      	ldr	r3, [r7, #0]
 800886a:	695b      	ldr	r3, [r3, #20]
 800886c:	011b      	lsls	r3, r3, #4
 800886e:	4313      	orrs	r3, r2
 8008870:	68fa      	ldr	r2, [r7, #12]
 8008872:	4313      	orrs	r3, r2
 8008874:	60fb      	str	r3, [r7, #12]
 8008876:	687b      	ldr	r3, [r7, #4]
 8008878:	681b      	ldr	r3, [r3, #0]
 800887a:	697a      	ldr	r2, [r7, #20]
 800887c:	609a      	str	r2, [r3, #8]
 800887e:	687b      	ldr	r3, [r7, #4]
 8008880:	681b      	ldr	r3, [r3, #0]
 8008882:	693a      	ldr	r2, [r7, #16]
 8008884:	619a      	str	r2, [r3, #24]
 8008886:	687b      	ldr	r3, [r7, #4]
 8008888:	681b      	ldr	r3, [r3, #0]
 800888a:	68fa      	ldr	r2, [r7, #12]
 800888c:	621a      	str	r2, [r3, #32]
 800888e:	687b      	ldr	r3, [r7, #4]
 8008890:	2201      	movs	r2, #1
 8008892:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8008896:	687b      	ldr	r3, [r7, #4]
 8008898:	2201      	movs	r2, #1
 800889a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800889e:	687b      	ldr	r3, [r7, #4]
 80088a0:	2201      	movs	r2, #1
 80088a2:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80088a6:	687b      	ldr	r3, [r7, #4]
 80088a8:	2201      	movs	r2, #1
 80088aa:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80088ae:	687b      	ldr	r3, [r7, #4]
 80088b0:	2201      	movs	r2, #1
 80088b2:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80088b6:	687b      	ldr	r3, [r7, #4]
 80088b8:	2201      	movs	r2, #1
 80088ba:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80088be:	2300      	movs	r3, #0
 80088c0:	4618      	mov	r0, r3
 80088c2:	3718      	adds	r7, #24
 80088c4:	46bd      	mov	sp, r7
 80088c6:	bd80      	pop	{r7, pc}

080088c8 <HAL_TIM_Encoder_Start>:
 80088c8:	b580      	push	{r7, lr}
 80088ca:	b084      	sub	sp, #16
 80088cc:	af00      	add	r7, sp, #0
 80088ce:	6078      	str	r0, [r7, #4]
 80088d0:	6039      	str	r1, [r7, #0]
 80088d2:	687b      	ldr	r3, [r7, #4]
 80088d4:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80088d8:	73fb      	strb	r3, [r7, #15]
 80088da:	687b      	ldr	r3, [r7, #4]
 80088dc:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 80088e0:	73bb      	strb	r3, [r7, #14]
 80088e2:	687b      	ldr	r3, [r7, #4]
 80088e4:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 80088e8:	737b      	strb	r3, [r7, #13]
 80088ea:	687b      	ldr	r3, [r7, #4]
 80088ec:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 80088f0:	733b      	strb	r3, [r7, #12]
 80088f2:	683b      	ldr	r3, [r7, #0]
 80088f4:	2b00      	cmp	r3, #0
 80088f6:	d110      	bne.n	800891a <HAL_TIM_Encoder_Start+0x52>
 80088f8:	7bfb      	ldrb	r3, [r7, #15]
 80088fa:	2b01      	cmp	r3, #1
 80088fc:	d102      	bne.n	8008904 <HAL_TIM_Encoder_Start+0x3c>
 80088fe:	7b7b      	ldrb	r3, [r7, #13]
 8008900:	2b01      	cmp	r3, #1
 8008902:	d001      	beq.n	8008908 <HAL_TIM_Encoder_Start+0x40>
 8008904:	2301      	movs	r3, #1
 8008906:	e069      	b.n	80089dc <HAL_TIM_Encoder_Start+0x114>
 8008908:	687b      	ldr	r3, [r7, #4]
 800890a:	2202      	movs	r2, #2
 800890c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008910:	687b      	ldr	r3, [r7, #4]
 8008912:	2202      	movs	r2, #2
 8008914:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8008918:	e031      	b.n	800897e <HAL_TIM_Encoder_Start+0xb6>
 800891a:	683b      	ldr	r3, [r7, #0]
 800891c:	2b04      	cmp	r3, #4
 800891e:	d110      	bne.n	8008942 <HAL_TIM_Encoder_Start+0x7a>
 8008920:	7bbb      	ldrb	r3, [r7, #14]
 8008922:	2b01      	cmp	r3, #1
 8008924:	d102      	bne.n	800892c <HAL_TIM_Encoder_Start+0x64>
 8008926:	7b3b      	ldrb	r3, [r7, #12]
 8008928:	2b01      	cmp	r3, #1
 800892a:	d001      	beq.n	8008930 <HAL_TIM_Encoder_Start+0x68>
 800892c:	2301      	movs	r3, #1
 800892e:	e055      	b.n	80089dc <HAL_TIM_Encoder_Start+0x114>
 8008930:	687b      	ldr	r3, [r7, #4]
 8008932:	2202      	movs	r2, #2
 8008934:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8008938:	687b      	ldr	r3, [r7, #4]
 800893a:	2202      	movs	r2, #2
 800893c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8008940:	e01d      	b.n	800897e <HAL_TIM_Encoder_Start+0xb6>
 8008942:	7bfb      	ldrb	r3, [r7, #15]
 8008944:	2b01      	cmp	r3, #1
 8008946:	d108      	bne.n	800895a <HAL_TIM_Encoder_Start+0x92>
 8008948:	7bbb      	ldrb	r3, [r7, #14]
 800894a:	2b01      	cmp	r3, #1
 800894c:	d105      	bne.n	800895a <HAL_TIM_Encoder_Start+0x92>
 800894e:	7b7b      	ldrb	r3, [r7, #13]
 8008950:	2b01      	cmp	r3, #1
 8008952:	d102      	bne.n	800895a <HAL_TIM_Encoder_Start+0x92>
 8008954:	7b3b      	ldrb	r3, [r7, #12]
 8008956:	2b01      	cmp	r3, #1
 8008958:	d001      	beq.n	800895e <HAL_TIM_Encoder_Start+0x96>
 800895a:	2301      	movs	r3, #1
 800895c:	e03e      	b.n	80089dc <HAL_TIM_Encoder_Start+0x114>
 800895e:	687b      	ldr	r3, [r7, #4]
 8008960:	2202      	movs	r2, #2
 8008962:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008966:	687b      	ldr	r3, [r7, #4]
 8008968:	2202      	movs	r2, #2
 800896a:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800896e:	687b      	ldr	r3, [r7, #4]
 8008970:	2202      	movs	r2, #2
 8008972:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8008976:	687b      	ldr	r3, [r7, #4]
 8008978:	2202      	movs	r2, #2
 800897a:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800897e:	683b      	ldr	r3, [r7, #0]
 8008980:	2b00      	cmp	r3, #0
 8008982:	d003      	beq.n	800898c <HAL_TIM_Encoder_Start+0xc4>
 8008984:	683b      	ldr	r3, [r7, #0]
 8008986:	2b04      	cmp	r3, #4
 8008988:	d008      	beq.n	800899c <HAL_TIM_Encoder_Start+0xd4>
 800898a:	e00f      	b.n	80089ac <HAL_TIM_Encoder_Start+0xe4>
 800898c:	687b      	ldr	r3, [r7, #4]
 800898e:	681b      	ldr	r3, [r3, #0]
 8008990:	2201      	movs	r2, #1
 8008992:	2100      	movs	r1, #0
 8008994:	4618      	mov	r0, r3
 8008996:	f001 f88d 	bl	8009ab4 <TIM_CCxChannelCmd>
 800899a:	e016      	b.n	80089ca <HAL_TIM_Encoder_Start+0x102>
 800899c:	687b      	ldr	r3, [r7, #4]
 800899e:	681b      	ldr	r3, [r3, #0]
 80089a0:	2201      	movs	r2, #1
 80089a2:	2104      	movs	r1, #4
 80089a4:	4618      	mov	r0, r3
 80089a6:	f001 f885 	bl	8009ab4 <TIM_CCxChannelCmd>
 80089aa:	e00e      	b.n	80089ca <HAL_TIM_Encoder_Start+0x102>
 80089ac:	687b      	ldr	r3, [r7, #4]
 80089ae:	681b      	ldr	r3, [r3, #0]
 80089b0:	2201      	movs	r2, #1
 80089b2:	2100      	movs	r1, #0
 80089b4:	4618      	mov	r0, r3
 80089b6:	f001 f87d 	bl	8009ab4 <TIM_CCxChannelCmd>
 80089ba:	687b      	ldr	r3, [r7, #4]
 80089bc:	681b      	ldr	r3, [r3, #0]
 80089be:	2201      	movs	r2, #1
 80089c0:	2104      	movs	r1, #4
 80089c2:	4618      	mov	r0, r3
 80089c4:	f001 f876 	bl	8009ab4 <TIM_CCxChannelCmd>
 80089c8:	bf00      	nop
 80089ca:	687b      	ldr	r3, [r7, #4]
 80089cc:	681b      	ldr	r3, [r3, #0]
 80089ce:	681a      	ldr	r2, [r3, #0]
 80089d0:	687b      	ldr	r3, [r7, #4]
 80089d2:	681b      	ldr	r3, [r3, #0]
 80089d4:	f042 0201 	orr.w	r2, r2, #1
 80089d8:	601a      	str	r2, [r3, #0]
 80089da:	2300      	movs	r3, #0
 80089dc:	4618      	mov	r0, r3
 80089de:	3710      	adds	r7, #16
 80089e0:	46bd      	mov	sp, r7
 80089e2:	bd80      	pop	{r7, pc}

080089e4 <HAL_TIM_IRQHandler>:
 80089e4:	b580      	push	{r7, lr}
 80089e6:	b082      	sub	sp, #8
 80089e8:	af00      	add	r7, sp, #0
 80089ea:	6078      	str	r0, [r7, #4]
 80089ec:	687b      	ldr	r3, [r7, #4]
 80089ee:	681b      	ldr	r3, [r3, #0]
 80089f0:	691b      	ldr	r3, [r3, #16]
 80089f2:	f003 0302 	and.w	r3, r3, #2
 80089f6:	2b02      	cmp	r3, #2
 80089f8:	d122      	bne.n	8008a40 <HAL_TIM_IRQHandler+0x5c>
 80089fa:	687b      	ldr	r3, [r7, #4]
 80089fc:	681b      	ldr	r3, [r3, #0]
 80089fe:	68db      	ldr	r3, [r3, #12]
 8008a00:	f003 0302 	and.w	r3, r3, #2
 8008a04:	2b02      	cmp	r3, #2
 8008a06:	d11b      	bne.n	8008a40 <HAL_TIM_IRQHandler+0x5c>
 8008a08:	687b      	ldr	r3, [r7, #4]
 8008a0a:	681b      	ldr	r3, [r3, #0]
 8008a0c:	f06f 0202 	mvn.w	r2, #2
 8008a10:	611a      	str	r2, [r3, #16]
 8008a12:	687b      	ldr	r3, [r7, #4]
 8008a14:	2201      	movs	r2, #1
 8008a16:	771a      	strb	r2, [r3, #28]
 8008a18:	687b      	ldr	r3, [r7, #4]
 8008a1a:	681b      	ldr	r3, [r3, #0]
 8008a1c:	699b      	ldr	r3, [r3, #24]
 8008a1e:	f003 0303 	and.w	r3, r3, #3
 8008a22:	2b00      	cmp	r3, #0
 8008a24:	d003      	beq.n	8008a2e <HAL_TIM_IRQHandler+0x4a>
 8008a26:	6878      	ldr	r0, [r7, #4]
 8008a28:	f000 fb1d 	bl	8009066 <HAL_TIM_IC_CaptureCallback>
 8008a2c:	e005      	b.n	8008a3a <HAL_TIM_IRQHandler+0x56>
 8008a2e:	6878      	ldr	r0, [r7, #4]
 8008a30:	f000 fb0f 	bl	8009052 <HAL_TIM_OC_DelayElapsedCallback>
 8008a34:	6878      	ldr	r0, [r7, #4]
 8008a36:	f000 fb2a 	bl	800908e <HAL_TIM_PWM_PulseFinishedCallback>
 8008a3a:	687b      	ldr	r3, [r7, #4]
 8008a3c:	2200      	movs	r2, #0
 8008a3e:	771a      	strb	r2, [r3, #28]
 8008a40:	687b      	ldr	r3, [r7, #4]
 8008a42:	681b      	ldr	r3, [r3, #0]
 8008a44:	691b      	ldr	r3, [r3, #16]
 8008a46:	f003 0304 	and.w	r3, r3, #4
 8008a4a:	2b04      	cmp	r3, #4
 8008a4c:	d122      	bne.n	8008a94 <HAL_TIM_IRQHandler+0xb0>
 8008a4e:	687b      	ldr	r3, [r7, #4]
 8008a50:	681b      	ldr	r3, [r3, #0]
 8008a52:	68db      	ldr	r3, [r3, #12]
 8008a54:	f003 0304 	and.w	r3, r3, #4
 8008a58:	2b04      	cmp	r3, #4
 8008a5a:	d11b      	bne.n	8008a94 <HAL_TIM_IRQHandler+0xb0>
 8008a5c:	687b      	ldr	r3, [r7, #4]
 8008a5e:	681b      	ldr	r3, [r3, #0]
 8008a60:	f06f 0204 	mvn.w	r2, #4
 8008a64:	611a      	str	r2, [r3, #16]
 8008a66:	687b      	ldr	r3, [r7, #4]
 8008a68:	2202      	movs	r2, #2
 8008a6a:	771a      	strb	r2, [r3, #28]
 8008a6c:	687b      	ldr	r3, [r7, #4]
 8008a6e:	681b      	ldr	r3, [r3, #0]
 8008a70:	699b      	ldr	r3, [r3, #24]
 8008a72:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8008a76:	2b00      	cmp	r3, #0
 8008a78:	d003      	beq.n	8008a82 <HAL_TIM_IRQHandler+0x9e>
 8008a7a:	6878      	ldr	r0, [r7, #4]
 8008a7c:	f000 faf3 	bl	8009066 <HAL_TIM_IC_CaptureCallback>
 8008a80:	e005      	b.n	8008a8e <HAL_TIM_IRQHandler+0xaa>
 8008a82:	6878      	ldr	r0, [r7, #4]
 8008a84:	f000 fae5 	bl	8009052 <HAL_TIM_OC_DelayElapsedCallback>
 8008a88:	6878      	ldr	r0, [r7, #4]
 8008a8a:	f000 fb00 	bl	800908e <HAL_TIM_PWM_PulseFinishedCallback>
 8008a8e:	687b      	ldr	r3, [r7, #4]
 8008a90:	2200      	movs	r2, #0
 8008a92:	771a      	strb	r2, [r3, #28]
 8008a94:	687b      	ldr	r3, [r7, #4]
 8008a96:	681b      	ldr	r3, [r3, #0]
 8008a98:	691b      	ldr	r3, [r3, #16]
 8008a9a:	f003 0308 	and.w	r3, r3, #8
 8008a9e:	2b08      	cmp	r3, #8
 8008aa0:	d122      	bne.n	8008ae8 <HAL_TIM_IRQHandler+0x104>
 8008aa2:	687b      	ldr	r3, [r7, #4]
 8008aa4:	681b      	ldr	r3, [r3, #0]
 8008aa6:	68db      	ldr	r3, [r3, #12]
 8008aa8:	f003 0308 	and.w	r3, r3, #8
 8008aac:	2b08      	cmp	r3, #8
 8008aae:	d11b      	bne.n	8008ae8 <HAL_TIM_IRQHandler+0x104>
 8008ab0:	687b      	ldr	r3, [r7, #4]
 8008ab2:	681b      	ldr	r3, [r3, #0]
 8008ab4:	f06f 0208 	mvn.w	r2, #8
 8008ab8:	611a      	str	r2, [r3, #16]
 8008aba:	687b      	ldr	r3, [r7, #4]
 8008abc:	2204      	movs	r2, #4
 8008abe:	771a      	strb	r2, [r3, #28]
 8008ac0:	687b      	ldr	r3, [r7, #4]
 8008ac2:	681b      	ldr	r3, [r3, #0]
 8008ac4:	69db      	ldr	r3, [r3, #28]
 8008ac6:	f003 0303 	and.w	r3, r3, #3
 8008aca:	2b00      	cmp	r3, #0
 8008acc:	d003      	beq.n	8008ad6 <HAL_TIM_IRQHandler+0xf2>
 8008ace:	6878      	ldr	r0, [r7, #4]
 8008ad0:	f000 fac9 	bl	8009066 <HAL_TIM_IC_CaptureCallback>
 8008ad4:	e005      	b.n	8008ae2 <HAL_TIM_IRQHandler+0xfe>
 8008ad6:	6878      	ldr	r0, [r7, #4]
 8008ad8:	f000 fabb 	bl	8009052 <HAL_TIM_OC_DelayElapsedCallback>
 8008adc:	6878      	ldr	r0, [r7, #4]
 8008ade:	f000 fad6 	bl	800908e <HAL_TIM_PWM_PulseFinishedCallback>
 8008ae2:	687b      	ldr	r3, [r7, #4]
 8008ae4:	2200      	movs	r2, #0
 8008ae6:	771a      	strb	r2, [r3, #28]
 8008ae8:	687b      	ldr	r3, [r7, #4]
 8008aea:	681b      	ldr	r3, [r3, #0]
 8008aec:	691b      	ldr	r3, [r3, #16]
 8008aee:	f003 0310 	and.w	r3, r3, #16
 8008af2:	2b10      	cmp	r3, #16
 8008af4:	d122      	bne.n	8008b3c <HAL_TIM_IRQHandler+0x158>
 8008af6:	687b      	ldr	r3, [r7, #4]
 8008af8:	681b      	ldr	r3, [r3, #0]
 8008afa:	68db      	ldr	r3, [r3, #12]
 8008afc:	f003 0310 	and.w	r3, r3, #16
 8008b00:	2b10      	cmp	r3, #16
 8008b02:	d11b      	bne.n	8008b3c <HAL_TIM_IRQHandler+0x158>
 8008b04:	687b      	ldr	r3, [r7, #4]
 8008b06:	681b      	ldr	r3, [r3, #0]
 8008b08:	f06f 0210 	mvn.w	r2, #16
 8008b0c:	611a      	str	r2, [r3, #16]
 8008b0e:	687b      	ldr	r3, [r7, #4]
 8008b10:	2208      	movs	r2, #8
 8008b12:	771a      	strb	r2, [r3, #28]
 8008b14:	687b      	ldr	r3, [r7, #4]
 8008b16:	681b      	ldr	r3, [r3, #0]
 8008b18:	69db      	ldr	r3, [r3, #28]
 8008b1a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8008b1e:	2b00      	cmp	r3, #0
 8008b20:	d003      	beq.n	8008b2a <HAL_TIM_IRQHandler+0x146>
 8008b22:	6878      	ldr	r0, [r7, #4]
 8008b24:	f000 fa9f 	bl	8009066 <HAL_TIM_IC_CaptureCallback>
 8008b28:	e005      	b.n	8008b36 <HAL_TIM_IRQHandler+0x152>
 8008b2a:	6878      	ldr	r0, [r7, #4]
 8008b2c:	f000 fa91 	bl	8009052 <HAL_TIM_OC_DelayElapsedCallback>
 8008b30:	6878      	ldr	r0, [r7, #4]
 8008b32:	f000 faac 	bl	800908e <HAL_TIM_PWM_PulseFinishedCallback>
 8008b36:	687b      	ldr	r3, [r7, #4]
 8008b38:	2200      	movs	r2, #0
 8008b3a:	771a      	strb	r2, [r3, #28]
 8008b3c:	687b      	ldr	r3, [r7, #4]
 8008b3e:	681b      	ldr	r3, [r3, #0]
 8008b40:	691b      	ldr	r3, [r3, #16]
 8008b42:	f003 0301 	and.w	r3, r3, #1
 8008b46:	2b01      	cmp	r3, #1
 8008b48:	d10e      	bne.n	8008b68 <HAL_TIM_IRQHandler+0x184>
 8008b4a:	687b      	ldr	r3, [r7, #4]
 8008b4c:	681b      	ldr	r3, [r3, #0]
 8008b4e:	68db      	ldr	r3, [r3, #12]
 8008b50:	f003 0301 	and.w	r3, r3, #1
 8008b54:	2b01      	cmp	r3, #1
 8008b56:	d107      	bne.n	8008b68 <HAL_TIM_IRQHandler+0x184>
 8008b58:	687b      	ldr	r3, [r7, #4]
 8008b5a:	681b      	ldr	r3, [r3, #0]
 8008b5c:	f06f 0201 	mvn.w	r2, #1
 8008b60:	611a      	str	r2, [r3, #16]
 8008b62:	6878      	ldr	r0, [r7, #4]
 8008b64:	f000 fa6b 	bl	800903e <HAL_TIM_PeriodElapsedCallback>
 8008b68:	687b      	ldr	r3, [r7, #4]
 8008b6a:	681b      	ldr	r3, [r3, #0]
 8008b6c:	691b      	ldr	r3, [r3, #16]
 8008b6e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008b72:	2b80      	cmp	r3, #128	; 0x80
 8008b74:	d10e      	bne.n	8008b94 <HAL_TIM_IRQHandler+0x1b0>
 8008b76:	687b      	ldr	r3, [r7, #4]
 8008b78:	681b      	ldr	r3, [r3, #0]
 8008b7a:	68db      	ldr	r3, [r3, #12]
 8008b7c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008b80:	2b80      	cmp	r3, #128	; 0x80
 8008b82:	d107      	bne.n	8008b94 <HAL_TIM_IRQHandler+0x1b0>
 8008b84:	687b      	ldr	r3, [r7, #4]
 8008b86:	681b      	ldr	r3, [r3, #0]
 8008b88:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8008b8c:	611a      	str	r2, [r3, #16]
 8008b8e:	6878      	ldr	r0, [r7, #4]
 8008b90:	f001 f88e 	bl	8009cb0 <HAL_TIMEx_BreakCallback>
 8008b94:	687b      	ldr	r3, [r7, #4]
 8008b96:	681b      	ldr	r3, [r3, #0]
 8008b98:	691b      	ldr	r3, [r3, #16]
 8008b9a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008b9e:	2b40      	cmp	r3, #64	; 0x40
 8008ba0:	d10e      	bne.n	8008bc0 <HAL_TIM_IRQHandler+0x1dc>
 8008ba2:	687b      	ldr	r3, [r7, #4]
 8008ba4:	681b      	ldr	r3, [r3, #0]
 8008ba6:	68db      	ldr	r3, [r3, #12]
 8008ba8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008bac:	2b40      	cmp	r3, #64	; 0x40
 8008bae:	d107      	bne.n	8008bc0 <HAL_TIM_IRQHandler+0x1dc>
 8008bb0:	687b      	ldr	r3, [r7, #4]
 8008bb2:	681b      	ldr	r3, [r3, #0]
 8008bb4:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8008bb8:	611a      	str	r2, [r3, #16]
 8008bba:	6878      	ldr	r0, [r7, #4]
 8008bbc:	f000 fa71 	bl	80090a2 <HAL_TIM_TriggerCallback>
 8008bc0:	687b      	ldr	r3, [r7, #4]
 8008bc2:	681b      	ldr	r3, [r3, #0]
 8008bc4:	691b      	ldr	r3, [r3, #16]
 8008bc6:	f003 0320 	and.w	r3, r3, #32
 8008bca:	2b20      	cmp	r3, #32
 8008bcc:	d10e      	bne.n	8008bec <HAL_TIM_IRQHandler+0x208>
 8008bce:	687b      	ldr	r3, [r7, #4]
 8008bd0:	681b      	ldr	r3, [r3, #0]
 8008bd2:	68db      	ldr	r3, [r3, #12]
 8008bd4:	f003 0320 	and.w	r3, r3, #32
 8008bd8:	2b20      	cmp	r3, #32
 8008bda:	d107      	bne.n	8008bec <HAL_TIM_IRQHandler+0x208>
 8008bdc:	687b      	ldr	r3, [r7, #4]
 8008bde:	681b      	ldr	r3, [r3, #0]
 8008be0:	f06f 0220 	mvn.w	r2, #32
 8008be4:	611a      	str	r2, [r3, #16]
 8008be6:	6878      	ldr	r0, [r7, #4]
 8008be8:	f001 f858 	bl	8009c9c <HAL_TIMEx_CommutCallback>
 8008bec:	bf00      	nop
 8008bee:	3708      	adds	r7, #8
 8008bf0:	46bd      	mov	sp, r7
 8008bf2:	bd80      	pop	{r7, pc}

08008bf4 <HAL_TIM_IC_ConfigChannel>:
 8008bf4:	b580      	push	{r7, lr}
 8008bf6:	b086      	sub	sp, #24
 8008bf8:	af00      	add	r7, sp, #0
 8008bfa:	60f8      	str	r0, [r7, #12]
 8008bfc:	60b9      	str	r1, [r7, #8]
 8008bfe:	607a      	str	r2, [r7, #4]
 8008c00:	2300      	movs	r3, #0
 8008c02:	75fb      	strb	r3, [r7, #23]
 8008c04:	68fb      	ldr	r3, [r7, #12]
 8008c06:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8008c0a:	2b01      	cmp	r3, #1
 8008c0c:	d101      	bne.n	8008c12 <HAL_TIM_IC_ConfigChannel+0x1e>
 8008c0e:	2302      	movs	r3, #2
 8008c10:	e088      	b.n	8008d24 <HAL_TIM_IC_ConfigChannel+0x130>
 8008c12:	68fb      	ldr	r3, [r7, #12]
 8008c14:	2201      	movs	r2, #1
 8008c16:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008c1a:	687b      	ldr	r3, [r7, #4]
 8008c1c:	2b00      	cmp	r3, #0
 8008c1e:	d11b      	bne.n	8008c58 <HAL_TIM_IC_ConfigChannel+0x64>
 8008c20:	68fb      	ldr	r3, [r7, #12]
 8008c22:	6818      	ldr	r0, [r3, #0]
 8008c24:	68bb      	ldr	r3, [r7, #8]
 8008c26:	6819      	ldr	r1, [r3, #0]
 8008c28:	68bb      	ldr	r3, [r7, #8]
 8008c2a:	685a      	ldr	r2, [r3, #4]
 8008c2c:	68bb      	ldr	r3, [r7, #8]
 8008c2e:	68db      	ldr	r3, [r3, #12]
 8008c30:	f000 fd7c 	bl	800972c <TIM_TI1_SetConfig>
 8008c34:	68fb      	ldr	r3, [r7, #12]
 8008c36:	681b      	ldr	r3, [r3, #0]
 8008c38:	699a      	ldr	r2, [r3, #24]
 8008c3a:	68fb      	ldr	r3, [r7, #12]
 8008c3c:	681b      	ldr	r3, [r3, #0]
 8008c3e:	f022 020c 	bic.w	r2, r2, #12
 8008c42:	619a      	str	r2, [r3, #24]
 8008c44:	68fb      	ldr	r3, [r7, #12]
 8008c46:	681b      	ldr	r3, [r3, #0]
 8008c48:	6999      	ldr	r1, [r3, #24]
 8008c4a:	68bb      	ldr	r3, [r7, #8]
 8008c4c:	689a      	ldr	r2, [r3, #8]
 8008c4e:	68fb      	ldr	r3, [r7, #12]
 8008c50:	681b      	ldr	r3, [r3, #0]
 8008c52:	430a      	orrs	r2, r1
 8008c54:	619a      	str	r2, [r3, #24]
 8008c56:	e060      	b.n	8008d1a <HAL_TIM_IC_ConfigChannel+0x126>
 8008c58:	687b      	ldr	r3, [r7, #4]
 8008c5a:	2b04      	cmp	r3, #4
 8008c5c:	d11c      	bne.n	8008c98 <HAL_TIM_IC_ConfigChannel+0xa4>
 8008c5e:	68fb      	ldr	r3, [r7, #12]
 8008c60:	6818      	ldr	r0, [r3, #0]
 8008c62:	68bb      	ldr	r3, [r7, #8]
 8008c64:	6819      	ldr	r1, [r3, #0]
 8008c66:	68bb      	ldr	r3, [r7, #8]
 8008c68:	685a      	ldr	r2, [r3, #4]
 8008c6a:	68bb      	ldr	r3, [r7, #8]
 8008c6c:	68db      	ldr	r3, [r3, #12]
 8008c6e:	f000 fe00 	bl	8009872 <TIM_TI2_SetConfig>
 8008c72:	68fb      	ldr	r3, [r7, #12]
 8008c74:	681b      	ldr	r3, [r3, #0]
 8008c76:	699a      	ldr	r2, [r3, #24]
 8008c78:	68fb      	ldr	r3, [r7, #12]
 8008c7a:	681b      	ldr	r3, [r3, #0]
 8008c7c:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8008c80:	619a      	str	r2, [r3, #24]
 8008c82:	68fb      	ldr	r3, [r7, #12]
 8008c84:	681b      	ldr	r3, [r3, #0]
 8008c86:	6999      	ldr	r1, [r3, #24]
 8008c88:	68bb      	ldr	r3, [r7, #8]
 8008c8a:	689b      	ldr	r3, [r3, #8]
 8008c8c:	021a      	lsls	r2, r3, #8
 8008c8e:	68fb      	ldr	r3, [r7, #12]
 8008c90:	681b      	ldr	r3, [r3, #0]
 8008c92:	430a      	orrs	r2, r1
 8008c94:	619a      	str	r2, [r3, #24]
 8008c96:	e040      	b.n	8008d1a <HAL_TIM_IC_ConfigChannel+0x126>
 8008c98:	687b      	ldr	r3, [r7, #4]
 8008c9a:	2b08      	cmp	r3, #8
 8008c9c:	d11b      	bne.n	8008cd6 <HAL_TIM_IC_ConfigChannel+0xe2>
 8008c9e:	68fb      	ldr	r3, [r7, #12]
 8008ca0:	6818      	ldr	r0, [r3, #0]
 8008ca2:	68bb      	ldr	r3, [r7, #8]
 8008ca4:	6819      	ldr	r1, [r3, #0]
 8008ca6:	68bb      	ldr	r3, [r7, #8]
 8008ca8:	685a      	ldr	r2, [r3, #4]
 8008caa:	68bb      	ldr	r3, [r7, #8]
 8008cac:	68db      	ldr	r3, [r3, #12]
 8008cae:	f000 fe4d 	bl	800994c <TIM_TI3_SetConfig>
 8008cb2:	68fb      	ldr	r3, [r7, #12]
 8008cb4:	681b      	ldr	r3, [r3, #0]
 8008cb6:	69da      	ldr	r2, [r3, #28]
 8008cb8:	68fb      	ldr	r3, [r7, #12]
 8008cba:	681b      	ldr	r3, [r3, #0]
 8008cbc:	f022 020c 	bic.w	r2, r2, #12
 8008cc0:	61da      	str	r2, [r3, #28]
 8008cc2:	68fb      	ldr	r3, [r7, #12]
 8008cc4:	681b      	ldr	r3, [r3, #0]
 8008cc6:	69d9      	ldr	r1, [r3, #28]
 8008cc8:	68bb      	ldr	r3, [r7, #8]
 8008cca:	689a      	ldr	r2, [r3, #8]
 8008ccc:	68fb      	ldr	r3, [r7, #12]
 8008cce:	681b      	ldr	r3, [r3, #0]
 8008cd0:	430a      	orrs	r2, r1
 8008cd2:	61da      	str	r2, [r3, #28]
 8008cd4:	e021      	b.n	8008d1a <HAL_TIM_IC_ConfigChannel+0x126>
 8008cd6:	687b      	ldr	r3, [r7, #4]
 8008cd8:	2b0c      	cmp	r3, #12
 8008cda:	d11c      	bne.n	8008d16 <HAL_TIM_IC_ConfigChannel+0x122>
 8008cdc:	68fb      	ldr	r3, [r7, #12]
 8008cde:	6818      	ldr	r0, [r3, #0]
 8008ce0:	68bb      	ldr	r3, [r7, #8]
 8008ce2:	6819      	ldr	r1, [r3, #0]
 8008ce4:	68bb      	ldr	r3, [r7, #8]
 8008ce6:	685a      	ldr	r2, [r3, #4]
 8008ce8:	68bb      	ldr	r3, [r7, #8]
 8008cea:	68db      	ldr	r3, [r3, #12]
 8008cec:	f000 fe6a 	bl	80099c4 <TIM_TI4_SetConfig>
 8008cf0:	68fb      	ldr	r3, [r7, #12]
 8008cf2:	681b      	ldr	r3, [r3, #0]
 8008cf4:	69da      	ldr	r2, [r3, #28]
 8008cf6:	68fb      	ldr	r3, [r7, #12]
 8008cf8:	681b      	ldr	r3, [r3, #0]
 8008cfa:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8008cfe:	61da      	str	r2, [r3, #28]
 8008d00:	68fb      	ldr	r3, [r7, #12]
 8008d02:	681b      	ldr	r3, [r3, #0]
 8008d04:	69d9      	ldr	r1, [r3, #28]
 8008d06:	68bb      	ldr	r3, [r7, #8]
 8008d08:	689b      	ldr	r3, [r3, #8]
 8008d0a:	021a      	lsls	r2, r3, #8
 8008d0c:	68fb      	ldr	r3, [r7, #12]
 8008d0e:	681b      	ldr	r3, [r3, #0]
 8008d10:	430a      	orrs	r2, r1
 8008d12:	61da      	str	r2, [r3, #28]
 8008d14:	e001      	b.n	8008d1a <HAL_TIM_IC_ConfigChannel+0x126>
 8008d16:	2301      	movs	r3, #1
 8008d18:	75fb      	strb	r3, [r7, #23]
 8008d1a:	68fb      	ldr	r3, [r7, #12]
 8008d1c:	2200      	movs	r2, #0
 8008d1e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008d22:	7dfb      	ldrb	r3, [r7, #23]
 8008d24:	4618      	mov	r0, r3
 8008d26:	3718      	adds	r7, #24
 8008d28:	46bd      	mov	sp, r7
 8008d2a:	bd80      	pop	{r7, pc}

08008d2c <HAL_TIM_PWM_ConfigChannel>:
 8008d2c:	b580      	push	{r7, lr}
 8008d2e:	b086      	sub	sp, #24
 8008d30:	af00      	add	r7, sp, #0
 8008d32:	60f8      	str	r0, [r7, #12]
 8008d34:	60b9      	str	r1, [r7, #8]
 8008d36:	607a      	str	r2, [r7, #4]
 8008d38:	2300      	movs	r3, #0
 8008d3a:	75fb      	strb	r3, [r7, #23]
 8008d3c:	68fb      	ldr	r3, [r7, #12]
 8008d3e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8008d42:	2b01      	cmp	r3, #1
 8008d44:	d101      	bne.n	8008d4a <HAL_TIM_PWM_ConfigChannel+0x1e>
 8008d46:	2302      	movs	r3, #2
 8008d48:	e0ae      	b.n	8008ea8 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8008d4a:	68fb      	ldr	r3, [r7, #12]
 8008d4c:	2201      	movs	r2, #1
 8008d4e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008d52:	687b      	ldr	r3, [r7, #4]
 8008d54:	2b0c      	cmp	r3, #12
 8008d56:	f200 809f 	bhi.w	8008e98 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8008d5a:	a201      	add	r2, pc, #4	; (adr r2, 8008d60 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8008d5c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008d60:	08008d95 	.word	0x08008d95
 8008d64:	08008e99 	.word	0x08008e99
 8008d68:	08008e99 	.word	0x08008e99
 8008d6c:	08008e99 	.word	0x08008e99
 8008d70:	08008dd5 	.word	0x08008dd5
 8008d74:	08008e99 	.word	0x08008e99
 8008d78:	08008e99 	.word	0x08008e99
 8008d7c:	08008e99 	.word	0x08008e99
 8008d80:	08008e17 	.word	0x08008e17
 8008d84:	08008e99 	.word	0x08008e99
 8008d88:	08008e99 	.word	0x08008e99
 8008d8c:	08008e99 	.word	0x08008e99
 8008d90:	08008e57 	.word	0x08008e57
 8008d94:	68fb      	ldr	r3, [r7, #12]
 8008d96:	681b      	ldr	r3, [r3, #0]
 8008d98:	68b9      	ldr	r1, [r7, #8]
 8008d9a:	4618      	mov	r0, r3
 8008d9c:	f000 fb16 	bl	80093cc <TIM_OC1_SetConfig>
 8008da0:	68fb      	ldr	r3, [r7, #12]
 8008da2:	681b      	ldr	r3, [r3, #0]
 8008da4:	699a      	ldr	r2, [r3, #24]
 8008da6:	68fb      	ldr	r3, [r7, #12]
 8008da8:	681b      	ldr	r3, [r3, #0]
 8008daa:	f042 0208 	orr.w	r2, r2, #8
 8008dae:	619a      	str	r2, [r3, #24]
 8008db0:	68fb      	ldr	r3, [r7, #12]
 8008db2:	681b      	ldr	r3, [r3, #0]
 8008db4:	699a      	ldr	r2, [r3, #24]
 8008db6:	68fb      	ldr	r3, [r7, #12]
 8008db8:	681b      	ldr	r3, [r3, #0]
 8008dba:	f022 0204 	bic.w	r2, r2, #4
 8008dbe:	619a      	str	r2, [r3, #24]
 8008dc0:	68fb      	ldr	r3, [r7, #12]
 8008dc2:	681b      	ldr	r3, [r3, #0]
 8008dc4:	6999      	ldr	r1, [r3, #24]
 8008dc6:	68bb      	ldr	r3, [r7, #8]
 8008dc8:	691a      	ldr	r2, [r3, #16]
 8008dca:	68fb      	ldr	r3, [r7, #12]
 8008dcc:	681b      	ldr	r3, [r3, #0]
 8008dce:	430a      	orrs	r2, r1
 8008dd0:	619a      	str	r2, [r3, #24]
 8008dd2:	e064      	b.n	8008e9e <HAL_TIM_PWM_ConfigChannel+0x172>
 8008dd4:	68fb      	ldr	r3, [r7, #12]
 8008dd6:	681b      	ldr	r3, [r3, #0]
 8008dd8:	68b9      	ldr	r1, [r7, #8]
 8008dda:	4618      	mov	r0, r3
 8008ddc:	f000 fb66 	bl	80094ac <TIM_OC2_SetConfig>
 8008de0:	68fb      	ldr	r3, [r7, #12]
 8008de2:	681b      	ldr	r3, [r3, #0]
 8008de4:	699a      	ldr	r2, [r3, #24]
 8008de6:	68fb      	ldr	r3, [r7, #12]
 8008de8:	681b      	ldr	r3, [r3, #0]
 8008dea:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8008dee:	619a      	str	r2, [r3, #24]
 8008df0:	68fb      	ldr	r3, [r7, #12]
 8008df2:	681b      	ldr	r3, [r3, #0]
 8008df4:	699a      	ldr	r2, [r3, #24]
 8008df6:	68fb      	ldr	r3, [r7, #12]
 8008df8:	681b      	ldr	r3, [r3, #0]
 8008dfa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8008dfe:	619a      	str	r2, [r3, #24]
 8008e00:	68fb      	ldr	r3, [r7, #12]
 8008e02:	681b      	ldr	r3, [r3, #0]
 8008e04:	6999      	ldr	r1, [r3, #24]
 8008e06:	68bb      	ldr	r3, [r7, #8]
 8008e08:	691b      	ldr	r3, [r3, #16]
 8008e0a:	021a      	lsls	r2, r3, #8
 8008e0c:	68fb      	ldr	r3, [r7, #12]
 8008e0e:	681b      	ldr	r3, [r3, #0]
 8008e10:	430a      	orrs	r2, r1
 8008e12:	619a      	str	r2, [r3, #24]
 8008e14:	e043      	b.n	8008e9e <HAL_TIM_PWM_ConfigChannel+0x172>
 8008e16:	68fb      	ldr	r3, [r7, #12]
 8008e18:	681b      	ldr	r3, [r3, #0]
 8008e1a:	68b9      	ldr	r1, [r7, #8]
 8008e1c:	4618      	mov	r0, r3
 8008e1e:	f000 fbbb 	bl	8009598 <TIM_OC3_SetConfig>
 8008e22:	68fb      	ldr	r3, [r7, #12]
 8008e24:	681b      	ldr	r3, [r3, #0]
 8008e26:	69da      	ldr	r2, [r3, #28]
 8008e28:	68fb      	ldr	r3, [r7, #12]
 8008e2a:	681b      	ldr	r3, [r3, #0]
 8008e2c:	f042 0208 	orr.w	r2, r2, #8
 8008e30:	61da      	str	r2, [r3, #28]
 8008e32:	68fb      	ldr	r3, [r7, #12]
 8008e34:	681b      	ldr	r3, [r3, #0]
 8008e36:	69da      	ldr	r2, [r3, #28]
 8008e38:	68fb      	ldr	r3, [r7, #12]
 8008e3a:	681b      	ldr	r3, [r3, #0]
 8008e3c:	f022 0204 	bic.w	r2, r2, #4
 8008e40:	61da      	str	r2, [r3, #28]
 8008e42:	68fb      	ldr	r3, [r7, #12]
 8008e44:	681b      	ldr	r3, [r3, #0]
 8008e46:	69d9      	ldr	r1, [r3, #28]
 8008e48:	68bb      	ldr	r3, [r7, #8]
 8008e4a:	691a      	ldr	r2, [r3, #16]
 8008e4c:	68fb      	ldr	r3, [r7, #12]
 8008e4e:	681b      	ldr	r3, [r3, #0]
 8008e50:	430a      	orrs	r2, r1
 8008e52:	61da      	str	r2, [r3, #28]
 8008e54:	e023      	b.n	8008e9e <HAL_TIM_PWM_ConfigChannel+0x172>
 8008e56:	68fb      	ldr	r3, [r7, #12]
 8008e58:	681b      	ldr	r3, [r3, #0]
 8008e5a:	68b9      	ldr	r1, [r7, #8]
 8008e5c:	4618      	mov	r0, r3
 8008e5e:	f000 fc0f 	bl	8009680 <TIM_OC4_SetConfig>
 8008e62:	68fb      	ldr	r3, [r7, #12]
 8008e64:	681b      	ldr	r3, [r3, #0]
 8008e66:	69da      	ldr	r2, [r3, #28]
 8008e68:	68fb      	ldr	r3, [r7, #12]
 8008e6a:	681b      	ldr	r3, [r3, #0]
 8008e6c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8008e70:	61da      	str	r2, [r3, #28]
 8008e72:	68fb      	ldr	r3, [r7, #12]
 8008e74:	681b      	ldr	r3, [r3, #0]
 8008e76:	69da      	ldr	r2, [r3, #28]
 8008e78:	68fb      	ldr	r3, [r7, #12]
 8008e7a:	681b      	ldr	r3, [r3, #0]
 8008e7c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8008e80:	61da      	str	r2, [r3, #28]
 8008e82:	68fb      	ldr	r3, [r7, #12]
 8008e84:	681b      	ldr	r3, [r3, #0]
 8008e86:	69d9      	ldr	r1, [r3, #28]
 8008e88:	68bb      	ldr	r3, [r7, #8]
 8008e8a:	691b      	ldr	r3, [r3, #16]
 8008e8c:	021a      	lsls	r2, r3, #8
 8008e8e:	68fb      	ldr	r3, [r7, #12]
 8008e90:	681b      	ldr	r3, [r3, #0]
 8008e92:	430a      	orrs	r2, r1
 8008e94:	61da      	str	r2, [r3, #28]
 8008e96:	e002      	b.n	8008e9e <HAL_TIM_PWM_ConfigChannel+0x172>
 8008e98:	2301      	movs	r3, #1
 8008e9a:	75fb      	strb	r3, [r7, #23]
 8008e9c:	bf00      	nop
 8008e9e:	68fb      	ldr	r3, [r7, #12]
 8008ea0:	2200      	movs	r2, #0
 8008ea2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008ea6:	7dfb      	ldrb	r3, [r7, #23]
 8008ea8:	4618      	mov	r0, r3
 8008eaa:	3718      	adds	r7, #24
 8008eac:	46bd      	mov	sp, r7
 8008eae:	bd80      	pop	{r7, pc}

08008eb0 <HAL_TIM_ConfigClockSource>:
 8008eb0:	b580      	push	{r7, lr}
 8008eb2:	b084      	sub	sp, #16
 8008eb4:	af00      	add	r7, sp, #0
 8008eb6:	6078      	str	r0, [r7, #4]
 8008eb8:	6039      	str	r1, [r7, #0]
 8008eba:	2300      	movs	r3, #0
 8008ebc:	73fb      	strb	r3, [r7, #15]
 8008ebe:	687b      	ldr	r3, [r7, #4]
 8008ec0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8008ec4:	2b01      	cmp	r3, #1
 8008ec6:	d101      	bne.n	8008ecc <HAL_TIM_ConfigClockSource+0x1c>
 8008ec8:	2302      	movs	r3, #2
 8008eca:	e0b4      	b.n	8009036 <HAL_TIM_ConfigClockSource+0x186>
 8008ecc:	687b      	ldr	r3, [r7, #4]
 8008ece:	2201      	movs	r2, #1
 8008ed0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008ed4:	687b      	ldr	r3, [r7, #4]
 8008ed6:	2202      	movs	r2, #2
 8008ed8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008edc:	687b      	ldr	r3, [r7, #4]
 8008ede:	681b      	ldr	r3, [r3, #0]
 8008ee0:	689b      	ldr	r3, [r3, #8]
 8008ee2:	60bb      	str	r3, [r7, #8]
 8008ee4:	68bb      	ldr	r3, [r7, #8]
 8008ee6:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8008eea:	60bb      	str	r3, [r7, #8]
 8008eec:	68bb      	ldr	r3, [r7, #8]
 8008eee:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8008ef2:	60bb      	str	r3, [r7, #8]
 8008ef4:	687b      	ldr	r3, [r7, #4]
 8008ef6:	681b      	ldr	r3, [r3, #0]
 8008ef8:	68ba      	ldr	r2, [r7, #8]
 8008efa:	609a      	str	r2, [r3, #8]
 8008efc:	683b      	ldr	r3, [r7, #0]
 8008efe:	681b      	ldr	r3, [r3, #0]
 8008f00:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008f04:	d03e      	beq.n	8008f84 <HAL_TIM_ConfigClockSource+0xd4>
 8008f06:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008f0a:	f200 8087 	bhi.w	800901c <HAL_TIM_ConfigClockSource+0x16c>
 8008f0e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008f12:	f000 8086 	beq.w	8009022 <HAL_TIM_ConfigClockSource+0x172>
 8008f16:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008f1a:	d87f      	bhi.n	800901c <HAL_TIM_ConfigClockSource+0x16c>
 8008f1c:	2b70      	cmp	r3, #112	; 0x70
 8008f1e:	d01a      	beq.n	8008f56 <HAL_TIM_ConfigClockSource+0xa6>
 8008f20:	2b70      	cmp	r3, #112	; 0x70
 8008f22:	d87b      	bhi.n	800901c <HAL_TIM_ConfigClockSource+0x16c>
 8008f24:	2b60      	cmp	r3, #96	; 0x60
 8008f26:	d050      	beq.n	8008fca <HAL_TIM_ConfigClockSource+0x11a>
 8008f28:	2b60      	cmp	r3, #96	; 0x60
 8008f2a:	d877      	bhi.n	800901c <HAL_TIM_ConfigClockSource+0x16c>
 8008f2c:	2b50      	cmp	r3, #80	; 0x50
 8008f2e:	d03c      	beq.n	8008faa <HAL_TIM_ConfigClockSource+0xfa>
 8008f30:	2b50      	cmp	r3, #80	; 0x50
 8008f32:	d873      	bhi.n	800901c <HAL_TIM_ConfigClockSource+0x16c>
 8008f34:	2b40      	cmp	r3, #64	; 0x40
 8008f36:	d058      	beq.n	8008fea <HAL_TIM_ConfigClockSource+0x13a>
 8008f38:	2b40      	cmp	r3, #64	; 0x40
 8008f3a:	d86f      	bhi.n	800901c <HAL_TIM_ConfigClockSource+0x16c>
 8008f3c:	2b30      	cmp	r3, #48	; 0x30
 8008f3e:	d064      	beq.n	800900a <HAL_TIM_ConfigClockSource+0x15a>
 8008f40:	2b30      	cmp	r3, #48	; 0x30
 8008f42:	d86b      	bhi.n	800901c <HAL_TIM_ConfigClockSource+0x16c>
 8008f44:	2b20      	cmp	r3, #32
 8008f46:	d060      	beq.n	800900a <HAL_TIM_ConfigClockSource+0x15a>
 8008f48:	2b20      	cmp	r3, #32
 8008f4a:	d867      	bhi.n	800901c <HAL_TIM_ConfigClockSource+0x16c>
 8008f4c:	2b00      	cmp	r3, #0
 8008f4e:	d05c      	beq.n	800900a <HAL_TIM_ConfigClockSource+0x15a>
 8008f50:	2b10      	cmp	r3, #16
 8008f52:	d05a      	beq.n	800900a <HAL_TIM_ConfigClockSource+0x15a>
 8008f54:	e062      	b.n	800901c <HAL_TIM_ConfigClockSource+0x16c>
 8008f56:	687b      	ldr	r3, [r7, #4]
 8008f58:	6818      	ldr	r0, [r3, #0]
 8008f5a:	683b      	ldr	r3, [r7, #0]
 8008f5c:	6899      	ldr	r1, [r3, #8]
 8008f5e:	683b      	ldr	r3, [r7, #0]
 8008f60:	685a      	ldr	r2, [r3, #4]
 8008f62:	683b      	ldr	r3, [r7, #0]
 8008f64:	68db      	ldr	r3, [r3, #12]
 8008f66:	f000 fd85 	bl	8009a74 <TIM_ETR_SetConfig>
 8008f6a:	687b      	ldr	r3, [r7, #4]
 8008f6c:	681b      	ldr	r3, [r3, #0]
 8008f6e:	689b      	ldr	r3, [r3, #8]
 8008f70:	60bb      	str	r3, [r7, #8]
 8008f72:	68bb      	ldr	r3, [r7, #8]
 8008f74:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8008f78:	60bb      	str	r3, [r7, #8]
 8008f7a:	687b      	ldr	r3, [r7, #4]
 8008f7c:	681b      	ldr	r3, [r3, #0]
 8008f7e:	68ba      	ldr	r2, [r7, #8]
 8008f80:	609a      	str	r2, [r3, #8]
 8008f82:	e04f      	b.n	8009024 <HAL_TIM_ConfigClockSource+0x174>
 8008f84:	687b      	ldr	r3, [r7, #4]
 8008f86:	6818      	ldr	r0, [r3, #0]
 8008f88:	683b      	ldr	r3, [r7, #0]
 8008f8a:	6899      	ldr	r1, [r3, #8]
 8008f8c:	683b      	ldr	r3, [r7, #0]
 8008f8e:	685a      	ldr	r2, [r3, #4]
 8008f90:	683b      	ldr	r3, [r7, #0]
 8008f92:	68db      	ldr	r3, [r3, #12]
 8008f94:	f000 fd6e 	bl	8009a74 <TIM_ETR_SetConfig>
 8008f98:	687b      	ldr	r3, [r7, #4]
 8008f9a:	681b      	ldr	r3, [r3, #0]
 8008f9c:	689a      	ldr	r2, [r3, #8]
 8008f9e:	687b      	ldr	r3, [r7, #4]
 8008fa0:	681b      	ldr	r3, [r3, #0]
 8008fa2:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8008fa6:	609a      	str	r2, [r3, #8]
 8008fa8:	e03c      	b.n	8009024 <HAL_TIM_ConfigClockSource+0x174>
 8008faa:	687b      	ldr	r3, [r7, #4]
 8008fac:	6818      	ldr	r0, [r3, #0]
 8008fae:	683b      	ldr	r3, [r7, #0]
 8008fb0:	6859      	ldr	r1, [r3, #4]
 8008fb2:	683b      	ldr	r3, [r7, #0]
 8008fb4:	68db      	ldr	r3, [r3, #12]
 8008fb6:	461a      	mov	r2, r3
 8008fb8:	f000 fc2c 	bl	8009814 <TIM_TI1_ConfigInputStage>
 8008fbc:	687b      	ldr	r3, [r7, #4]
 8008fbe:	681b      	ldr	r3, [r3, #0]
 8008fc0:	2150      	movs	r1, #80	; 0x50
 8008fc2:	4618      	mov	r0, r3
 8008fc4:	f000 fd3b 	bl	8009a3e <TIM_ITRx_SetConfig>
 8008fc8:	e02c      	b.n	8009024 <HAL_TIM_ConfigClockSource+0x174>
 8008fca:	687b      	ldr	r3, [r7, #4]
 8008fcc:	6818      	ldr	r0, [r3, #0]
 8008fce:	683b      	ldr	r3, [r7, #0]
 8008fd0:	6859      	ldr	r1, [r3, #4]
 8008fd2:	683b      	ldr	r3, [r7, #0]
 8008fd4:	68db      	ldr	r3, [r3, #12]
 8008fd6:	461a      	mov	r2, r3
 8008fd8:	f000 fc88 	bl	80098ec <TIM_TI2_ConfigInputStage>
 8008fdc:	687b      	ldr	r3, [r7, #4]
 8008fde:	681b      	ldr	r3, [r3, #0]
 8008fe0:	2160      	movs	r1, #96	; 0x60
 8008fe2:	4618      	mov	r0, r3
 8008fe4:	f000 fd2b 	bl	8009a3e <TIM_ITRx_SetConfig>
 8008fe8:	e01c      	b.n	8009024 <HAL_TIM_ConfigClockSource+0x174>
 8008fea:	687b      	ldr	r3, [r7, #4]
 8008fec:	6818      	ldr	r0, [r3, #0]
 8008fee:	683b      	ldr	r3, [r7, #0]
 8008ff0:	6859      	ldr	r1, [r3, #4]
 8008ff2:	683b      	ldr	r3, [r7, #0]
 8008ff4:	68db      	ldr	r3, [r3, #12]
 8008ff6:	461a      	mov	r2, r3
 8008ff8:	f000 fc0c 	bl	8009814 <TIM_TI1_ConfigInputStage>
 8008ffc:	687b      	ldr	r3, [r7, #4]
 8008ffe:	681b      	ldr	r3, [r3, #0]
 8009000:	2140      	movs	r1, #64	; 0x40
 8009002:	4618      	mov	r0, r3
 8009004:	f000 fd1b 	bl	8009a3e <TIM_ITRx_SetConfig>
 8009008:	e00c      	b.n	8009024 <HAL_TIM_ConfigClockSource+0x174>
 800900a:	687b      	ldr	r3, [r7, #4]
 800900c:	681a      	ldr	r2, [r3, #0]
 800900e:	683b      	ldr	r3, [r7, #0]
 8009010:	681b      	ldr	r3, [r3, #0]
 8009012:	4619      	mov	r1, r3
 8009014:	4610      	mov	r0, r2
 8009016:	f000 fd12 	bl	8009a3e <TIM_ITRx_SetConfig>
 800901a:	e003      	b.n	8009024 <HAL_TIM_ConfigClockSource+0x174>
 800901c:	2301      	movs	r3, #1
 800901e:	73fb      	strb	r3, [r7, #15]
 8009020:	e000      	b.n	8009024 <HAL_TIM_ConfigClockSource+0x174>
 8009022:	bf00      	nop
 8009024:	687b      	ldr	r3, [r7, #4]
 8009026:	2201      	movs	r2, #1
 8009028:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800902c:	687b      	ldr	r3, [r7, #4]
 800902e:	2200      	movs	r2, #0
 8009030:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009034:	7bfb      	ldrb	r3, [r7, #15]
 8009036:	4618      	mov	r0, r3
 8009038:	3710      	adds	r7, #16
 800903a:	46bd      	mov	sp, r7
 800903c:	bd80      	pop	{r7, pc}

0800903e <HAL_TIM_PeriodElapsedCallback>:
 800903e:	b480      	push	{r7}
 8009040:	b083      	sub	sp, #12
 8009042:	af00      	add	r7, sp, #0
 8009044:	6078      	str	r0, [r7, #4]
 8009046:	bf00      	nop
 8009048:	370c      	adds	r7, #12
 800904a:	46bd      	mov	sp, r7
 800904c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009050:	4770      	bx	lr

08009052 <HAL_TIM_OC_DelayElapsedCallback>:
 8009052:	b480      	push	{r7}
 8009054:	b083      	sub	sp, #12
 8009056:	af00      	add	r7, sp, #0
 8009058:	6078      	str	r0, [r7, #4]
 800905a:	bf00      	nop
 800905c:	370c      	adds	r7, #12
 800905e:	46bd      	mov	sp, r7
 8009060:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009064:	4770      	bx	lr

08009066 <HAL_TIM_IC_CaptureCallback>:
 8009066:	b480      	push	{r7}
 8009068:	b083      	sub	sp, #12
 800906a:	af00      	add	r7, sp, #0
 800906c:	6078      	str	r0, [r7, #4]
 800906e:	bf00      	nop
 8009070:	370c      	adds	r7, #12
 8009072:	46bd      	mov	sp, r7
 8009074:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009078:	4770      	bx	lr

0800907a <HAL_TIM_IC_CaptureHalfCpltCallback>:
 800907a:	b480      	push	{r7}
 800907c:	b083      	sub	sp, #12
 800907e:	af00      	add	r7, sp, #0
 8009080:	6078      	str	r0, [r7, #4]
 8009082:	bf00      	nop
 8009084:	370c      	adds	r7, #12
 8009086:	46bd      	mov	sp, r7
 8009088:	f85d 7b04 	ldr.w	r7, [sp], #4
 800908c:	4770      	bx	lr

0800908e <HAL_TIM_PWM_PulseFinishedCallback>:
 800908e:	b480      	push	{r7}
 8009090:	b083      	sub	sp, #12
 8009092:	af00      	add	r7, sp, #0
 8009094:	6078      	str	r0, [r7, #4]
 8009096:	bf00      	nop
 8009098:	370c      	adds	r7, #12
 800909a:	46bd      	mov	sp, r7
 800909c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090a0:	4770      	bx	lr

080090a2 <HAL_TIM_TriggerCallback>:
 80090a2:	b480      	push	{r7}
 80090a4:	b083      	sub	sp, #12
 80090a6:	af00      	add	r7, sp, #0
 80090a8:	6078      	str	r0, [r7, #4]
 80090aa:	bf00      	nop
 80090ac:	370c      	adds	r7, #12
 80090ae:	46bd      	mov	sp, r7
 80090b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090b4:	4770      	bx	lr

080090b6 <HAL_TIM_ErrorCallback>:
 80090b6:	b480      	push	{r7}
 80090b8:	b083      	sub	sp, #12
 80090ba:	af00      	add	r7, sp, #0
 80090bc:	6078      	str	r0, [r7, #4]
 80090be:	bf00      	nop
 80090c0:	370c      	adds	r7, #12
 80090c2:	46bd      	mov	sp, r7
 80090c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090c8:	4770      	bx	lr

080090ca <TIM_DMAError>:
 80090ca:	b580      	push	{r7, lr}
 80090cc:	b084      	sub	sp, #16
 80090ce:	af00      	add	r7, sp, #0
 80090d0:	6078      	str	r0, [r7, #4]
 80090d2:	687b      	ldr	r3, [r7, #4]
 80090d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80090d6:	60fb      	str	r3, [r7, #12]
 80090d8:	68fb      	ldr	r3, [r7, #12]
 80090da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80090dc:	687a      	ldr	r2, [r7, #4]
 80090de:	429a      	cmp	r2, r3
 80090e0:	d107      	bne.n	80090f2 <TIM_DMAError+0x28>
 80090e2:	68fb      	ldr	r3, [r7, #12]
 80090e4:	2201      	movs	r2, #1
 80090e6:	771a      	strb	r2, [r3, #28]
 80090e8:	68fb      	ldr	r3, [r7, #12]
 80090ea:	2201      	movs	r2, #1
 80090ec:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80090f0:	e02a      	b.n	8009148 <TIM_DMAError+0x7e>
 80090f2:	68fb      	ldr	r3, [r7, #12]
 80090f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80090f6:	687a      	ldr	r2, [r7, #4]
 80090f8:	429a      	cmp	r2, r3
 80090fa:	d107      	bne.n	800910c <TIM_DMAError+0x42>
 80090fc:	68fb      	ldr	r3, [r7, #12]
 80090fe:	2202      	movs	r2, #2
 8009100:	771a      	strb	r2, [r3, #28]
 8009102:	68fb      	ldr	r3, [r7, #12]
 8009104:	2201      	movs	r2, #1
 8009106:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800910a:	e01d      	b.n	8009148 <TIM_DMAError+0x7e>
 800910c:	68fb      	ldr	r3, [r7, #12]
 800910e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009110:	687a      	ldr	r2, [r7, #4]
 8009112:	429a      	cmp	r2, r3
 8009114:	d107      	bne.n	8009126 <TIM_DMAError+0x5c>
 8009116:	68fb      	ldr	r3, [r7, #12]
 8009118:	2204      	movs	r2, #4
 800911a:	771a      	strb	r2, [r3, #28]
 800911c:	68fb      	ldr	r3, [r7, #12]
 800911e:	2201      	movs	r2, #1
 8009120:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009124:	e010      	b.n	8009148 <TIM_DMAError+0x7e>
 8009126:	68fb      	ldr	r3, [r7, #12]
 8009128:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800912a:	687a      	ldr	r2, [r7, #4]
 800912c:	429a      	cmp	r2, r3
 800912e:	d107      	bne.n	8009140 <TIM_DMAError+0x76>
 8009130:	68fb      	ldr	r3, [r7, #12]
 8009132:	2208      	movs	r2, #8
 8009134:	771a      	strb	r2, [r3, #28]
 8009136:	68fb      	ldr	r3, [r7, #12]
 8009138:	2201      	movs	r2, #1
 800913a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800913e:	e003      	b.n	8009148 <TIM_DMAError+0x7e>
 8009140:	68fb      	ldr	r3, [r7, #12]
 8009142:	2201      	movs	r2, #1
 8009144:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009148:	68f8      	ldr	r0, [r7, #12]
 800914a:	f7ff ffb4 	bl	80090b6 <HAL_TIM_ErrorCallback>
 800914e:	68fb      	ldr	r3, [r7, #12]
 8009150:	2200      	movs	r2, #0
 8009152:	771a      	strb	r2, [r3, #28]
 8009154:	bf00      	nop
 8009156:	3710      	adds	r7, #16
 8009158:	46bd      	mov	sp, r7
 800915a:	bd80      	pop	{r7, pc}

0800915c <TIM_DMACaptureCplt>:
 800915c:	b580      	push	{r7, lr}
 800915e:	b084      	sub	sp, #16
 8009160:	af00      	add	r7, sp, #0
 8009162:	6078      	str	r0, [r7, #4]
 8009164:	687b      	ldr	r3, [r7, #4]
 8009166:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009168:	60fb      	str	r3, [r7, #12]
 800916a:	68fb      	ldr	r3, [r7, #12]
 800916c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800916e:	687a      	ldr	r2, [r7, #4]
 8009170:	429a      	cmp	r2, r3
 8009172:	d10f      	bne.n	8009194 <TIM_DMACaptureCplt+0x38>
 8009174:	68fb      	ldr	r3, [r7, #12]
 8009176:	2201      	movs	r2, #1
 8009178:	771a      	strb	r2, [r3, #28]
 800917a:	687b      	ldr	r3, [r7, #4]
 800917c:	69db      	ldr	r3, [r3, #28]
 800917e:	2b00      	cmp	r3, #0
 8009180:	d146      	bne.n	8009210 <TIM_DMACaptureCplt+0xb4>
 8009182:	68fb      	ldr	r3, [r7, #12]
 8009184:	2201      	movs	r2, #1
 8009186:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800918a:	68fb      	ldr	r3, [r7, #12]
 800918c:	2201      	movs	r2, #1
 800918e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009192:	e03d      	b.n	8009210 <TIM_DMACaptureCplt+0xb4>
 8009194:	68fb      	ldr	r3, [r7, #12]
 8009196:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009198:	687a      	ldr	r2, [r7, #4]
 800919a:	429a      	cmp	r2, r3
 800919c:	d10f      	bne.n	80091be <TIM_DMACaptureCplt+0x62>
 800919e:	68fb      	ldr	r3, [r7, #12]
 80091a0:	2202      	movs	r2, #2
 80091a2:	771a      	strb	r2, [r3, #28]
 80091a4:	687b      	ldr	r3, [r7, #4]
 80091a6:	69db      	ldr	r3, [r3, #28]
 80091a8:	2b00      	cmp	r3, #0
 80091aa:	d131      	bne.n	8009210 <TIM_DMACaptureCplt+0xb4>
 80091ac:	68fb      	ldr	r3, [r7, #12]
 80091ae:	2201      	movs	r2, #1
 80091b0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80091b4:	68fb      	ldr	r3, [r7, #12]
 80091b6:	2201      	movs	r2, #1
 80091b8:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80091bc:	e028      	b.n	8009210 <TIM_DMACaptureCplt+0xb4>
 80091be:	68fb      	ldr	r3, [r7, #12]
 80091c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80091c2:	687a      	ldr	r2, [r7, #4]
 80091c4:	429a      	cmp	r2, r3
 80091c6:	d10f      	bne.n	80091e8 <TIM_DMACaptureCplt+0x8c>
 80091c8:	68fb      	ldr	r3, [r7, #12]
 80091ca:	2204      	movs	r2, #4
 80091cc:	771a      	strb	r2, [r3, #28]
 80091ce:	687b      	ldr	r3, [r7, #4]
 80091d0:	69db      	ldr	r3, [r3, #28]
 80091d2:	2b00      	cmp	r3, #0
 80091d4:	d11c      	bne.n	8009210 <TIM_DMACaptureCplt+0xb4>
 80091d6:	68fb      	ldr	r3, [r7, #12]
 80091d8:	2201      	movs	r2, #1
 80091da:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80091de:	68fb      	ldr	r3, [r7, #12]
 80091e0:	2201      	movs	r2, #1
 80091e2:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80091e6:	e013      	b.n	8009210 <TIM_DMACaptureCplt+0xb4>
 80091e8:	68fb      	ldr	r3, [r7, #12]
 80091ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80091ec:	687a      	ldr	r2, [r7, #4]
 80091ee:	429a      	cmp	r2, r3
 80091f0:	d10e      	bne.n	8009210 <TIM_DMACaptureCplt+0xb4>
 80091f2:	68fb      	ldr	r3, [r7, #12]
 80091f4:	2208      	movs	r2, #8
 80091f6:	771a      	strb	r2, [r3, #28]
 80091f8:	687b      	ldr	r3, [r7, #4]
 80091fa:	69db      	ldr	r3, [r3, #28]
 80091fc:	2b00      	cmp	r3, #0
 80091fe:	d107      	bne.n	8009210 <TIM_DMACaptureCplt+0xb4>
 8009200:	68fb      	ldr	r3, [r7, #12]
 8009202:	2201      	movs	r2, #1
 8009204:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8009208:	68fb      	ldr	r3, [r7, #12]
 800920a:	2201      	movs	r2, #1
 800920c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8009210:	68f8      	ldr	r0, [r7, #12]
 8009212:	f7ff ff28 	bl	8009066 <HAL_TIM_IC_CaptureCallback>
 8009216:	68fb      	ldr	r3, [r7, #12]
 8009218:	2200      	movs	r2, #0
 800921a:	771a      	strb	r2, [r3, #28]
 800921c:	bf00      	nop
 800921e:	3710      	adds	r7, #16
 8009220:	46bd      	mov	sp, r7
 8009222:	bd80      	pop	{r7, pc}

08009224 <TIM_DMACaptureHalfCplt>:
 8009224:	b580      	push	{r7, lr}
 8009226:	b084      	sub	sp, #16
 8009228:	af00      	add	r7, sp, #0
 800922a:	6078      	str	r0, [r7, #4]
 800922c:	687b      	ldr	r3, [r7, #4]
 800922e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009230:	60fb      	str	r3, [r7, #12]
 8009232:	68fb      	ldr	r3, [r7, #12]
 8009234:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009236:	687a      	ldr	r2, [r7, #4]
 8009238:	429a      	cmp	r2, r3
 800923a:	d103      	bne.n	8009244 <TIM_DMACaptureHalfCplt+0x20>
 800923c:	68fb      	ldr	r3, [r7, #12]
 800923e:	2201      	movs	r2, #1
 8009240:	771a      	strb	r2, [r3, #28]
 8009242:	e019      	b.n	8009278 <TIM_DMACaptureHalfCplt+0x54>
 8009244:	68fb      	ldr	r3, [r7, #12]
 8009246:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009248:	687a      	ldr	r2, [r7, #4]
 800924a:	429a      	cmp	r2, r3
 800924c:	d103      	bne.n	8009256 <TIM_DMACaptureHalfCplt+0x32>
 800924e:	68fb      	ldr	r3, [r7, #12]
 8009250:	2202      	movs	r2, #2
 8009252:	771a      	strb	r2, [r3, #28]
 8009254:	e010      	b.n	8009278 <TIM_DMACaptureHalfCplt+0x54>
 8009256:	68fb      	ldr	r3, [r7, #12]
 8009258:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800925a:	687a      	ldr	r2, [r7, #4]
 800925c:	429a      	cmp	r2, r3
 800925e:	d103      	bne.n	8009268 <TIM_DMACaptureHalfCplt+0x44>
 8009260:	68fb      	ldr	r3, [r7, #12]
 8009262:	2204      	movs	r2, #4
 8009264:	771a      	strb	r2, [r3, #28]
 8009266:	e007      	b.n	8009278 <TIM_DMACaptureHalfCplt+0x54>
 8009268:	68fb      	ldr	r3, [r7, #12]
 800926a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800926c:	687a      	ldr	r2, [r7, #4]
 800926e:	429a      	cmp	r2, r3
 8009270:	d102      	bne.n	8009278 <TIM_DMACaptureHalfCplt+0x54>
 8009272:	68fb      	ldr	r3, [r7, #12]
 8009274:	2208      	movs	r2, #8
 8009276:	771a      	strb	r2, [r3, #28]
 8009278:	68f8      	ldr	r0, [r7, #12]
 800927a:	f7ff fefe 	bl	800907a <HAL_TIM_IC_CaptureHalfCpltCallback>
 800927e:	68fb      	ldr	r3, [r7, #12]
 8009280:	2200      	movs	r2, #0
 8009282:	771a      	strb	r2, [r3, #28]
 8009284:	bf00      	nop
 8009286:	3710      	adds	r7, #16
 8009288:	46bd      	mov	sp, r7
 800928a:	bd80      	pop	{r7, pc}

0800928c <TIM_Base_SetConfig>:
 800928c:	b480      	push	{r7}
 800928e:	b085      	sub	sp, #20
 8009290:	af00      	add	r7, sp, #0
 8009292:	6078      	str	r0, [r7, #4]
 8009294:	6039      	str	r1, [r7, #0]
 8009296:	687b      	ldr	r3, [r7, #4]
 8009298:	681b      	ldr	r3, [r3, #0]
 800929a:	60fb      	str	r3, [r7, #12]
 800929c:	687b      	ldr	r3, [r7, #4]
 800929e:	4a40      	ldr	r2, [pc, #256]	; (80093a0 <TIM_Base_SetConfig+0x114>)
 80092a0:	4293      	cmp	r3, r2
 80092a2:	d013      	beq.n	80092cc <TIM_Base_SetConfig+0x40>
 80092a4:	687b      	ldr	r3, [r7, #4]
 80092a6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80092aa:	d00f      	beq.n	80092cc <TIM_Base_SetConfig+0x40>
 80092ac:	687b      	ldr	r3, [r7, #4]
 80092ae:	4a3d      	ldr	r2, [pc, #244]	; (80093a4 <TIM_Base_SetConfig+0x118>)
 80092b0:	4293      	cmp	r3, r2
 80092b2:	d00b      	beq.n	80092cc <TIM_Base_SetConfig+0x40>
 80092b4:	687b      	ldr	r3, [r7, #4]
 80092b6:	4a3c      	ldr	r2, [pc, #240]	; (80093a8 <TIM_Base_SetConfig+0x11c>)
 80092b8:	4293      	cmp	r3, r2
 80092ba:	d007      	beq.n	80092cc <TIM_Base_SetConfig+0x40>
 80092bc:	687b      	ldr	r3, [r7, #4]
 80092be:	4a3b      	ldr	r2, [pc, #236]	; (80093ac <TIM_Base_SetConfig+0x120>)
 80092c0:	4293      	cmp	r3, r2
 80092c2:	d003      	beq.n	80092cc <TIM_Base_SetConfig+0x40>
 80092c4:	687b      	ldr	r3, [r7, #4]
 80092c6:	4a3a      	ldr	r2, [pc, #232]	; (80093b0 <TIM_Base_SetConfig+0x124>)
 80092c8:	4293      	cmp	r3, r2
 80092ca:	d108      	bne.n	80092de <TIM_Base_SetConfig+0x52>
 80092cc:	68fb      	ldr	r3, [r7, #12]
 80092ce:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80092d2:	60fb      	str	r3, [r7, #12]
 80092d4:	683b      	ldr	r3, [r7, #0]
 80092d6:	685b      	ldr	r3, [r3, #4]
 80092d8:	68fa      	ldr	r2, [r7, #12]
 80092da:	4313      	orrs	r3, r2
 80092dc:	60fb      	str	r3, [r7, #12]
 80092de:	687b      	ldr	r3, [r7, #4]
 80092e0:	4a2f      	ldr	r2, [pc, #188]	; (80093a0 <TIM_Base_SetConfig+0x114>)
 80092e2:	4293      	cmp	r3, r2
 80092e4:	d02b      	beq.n	800933e <TIM_Base_SetConfig+0xb2>
 80092e6:	687b      	ldr	r3, [r7, #4]
 80092e8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80092ec:	d027      	beq.n	800933e <TIM_Base_SetConfig+0xb2>
 80092ee:	687b      	ldr	r3, [r7, #4]
 80092f0:	4a2c      	ldr	r2, [pc, #176]	; (80093a4 <TIM_Base_SetConfig+0x118>)
 80092f2:	4293      	cmp	r3, r2
 80092f4:	d023      	beq.n	800933e <TIM_Base_SetConfig+0xb2>
 80092f6:	687b      	ldr	r3, [r7, #4]
 80092f8:	4a2b      	ldr	r2, [pc, #172]	; (80093a8 <TIM_Base_SetConfig+0x11c>)
 80092fa:	4293      	cmp	r3, r2
 80092fc:	d01f      	beq.n	800933e <TIM_Base_SetConfig+0xb2>
 80092fe:	687b      	ldr	r3, [r7, #4]
 8009300:	4a2a      	ldr	r2, [pc, #168]	; (80093ac <TIM_Base_SetConfig+0x120>)
 8009302:	4293      	cmp	r3, r2
 8009304:	d01b      	beq.n	800933e <TIM_Base_SetConfig+0xb2>
 8009306:	687b      	ldr	r3, [r7, #4]
 8009308:	4a29      	ldr	r2, [pc, #164]	; (80093b0 <TIM_Base_SetConfig+0x124>)
 800930a:	4293      	cmp	r3, r2
 800930c:	d017      	beq.n	800933e <TIM_Base_SetConfig+0xb2>
 800930e:	687b      	ldr	r3, [r7, #4]
 8009310:	4a28      	ldr	r2, [pc, #160]	; (80093b4 <TIM_Base_SetConfig+0x128>)
 8009312:	4293      	cmp	r3, r2
 8009314:	d013      	beq.n	800933e <TIM_Base_SetConfig+0xb2>
 8009316:	687b      	ldr	r3, [r7, #4]
 8009318:	4a27      	ldr	r2, [pc, #156]	; (80093b8 <TIM_Base_SetConfig+0x12c>)
 800931a:	4293      	cmp	r3, r2
 800931c:	d00f      	beq.n	800933e <TIM_Base_SetConfig+0xb2>
 800931e:	687b      	ldr	r3, [r7, #4]
 8009320:	4a26      	ldr	r2, [pc, #152]	; (80093bc <TIM_Base_SetConfig+0x130>)
 8009322:	4293      	cmp	r3, r2
 8009324:	d00b      	beq.n	800933e <TIM_Base_SetConfig+0xb2>
 8009326:	687b      	ldr	r3, [r7, #4]
 8009328:	4a25      	ldr	r2, [pc, #148]	; (80093c0 <TIM_Base_SetConfig+0x134>)
 800932a:	4293      	cmp	r3, r2
 800932c:	d007      	beq.n	800933e <TIM_Base_SetConfig+0xb2>
 800932e:	687b      	ldr	r3, [r7, #4]
 8009330:	4a24      	ldr	r2, [pc, #144]	; (80093c4 <TIM_Base_SetConfig+0x138>)
 8009332:	4293      	cmp	r3, r2
 8009334:	d003      	beq.n	800933e <TIM_Base_SetConfig+0xb2>
 8009336:	687b      	ldr	r3, [r7, #4]
 8009338:	4a23      	ldr	r2, [pc, #140]	; (80093c8 <TIM_Base_SetConfig+0x13c>)
 800933a:	4293      	cmp	r3, r2
 800933c:	d108      	bne.n	8009350 <TIM_Base_SetConfig+0xc4>
 800933e:	68fb      	ldr	r3, [r7, #12]
 8009340:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009344:	60fb      	str	r3, [r7, #12]
 8009346:	683b      	ldr	r3, [r7, #0]
 8009348:	68db      	ldr	r3, [r3, #12]
 800934a:	68fa      	ldr	r2, [r7, #12]
 800934c:	4313      	orrs	r3, r2
 800934e:	60fb      	str	r3, [r7, #12]
 8009350:	68fb      	ldr	r3, [r7, #12]
 8009352:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8009356:	683b      	ldr	r3, [r7, #0]
 8009358:	695b      	ldr	r3, [r3, #20]
 800935a:	4313      	orrs	r3, r2
 800935c:	60fb      	str	r3, [r7, #12]
 800935e:	687b      	ldr	r3, [r7, #4]
 8009360:	68fa      	ldr	r2, [r7, #12]
 8009362:	601a      	str	r2, [r3, #0]
 8009364:	683b      	ldr	r3, [r7, #0]
 8009366:	689a      	ldr	r2, [r3, #8]
 8009368:	687b      	ldr	r3, [r7, #4]
 800936a:	62da      	str	r2, [r3, #44]	; 0x2c
 800936c:	683b      	ldr	r3, [r7, #0]
 800936e:	681a      	ldr	r2, [r3, #0]
 8009370:	687b      	ldr	r3, [r7, #4]
 8009372:	629a      	str	r2, [r3, #40]	; 0x28
 8009374:	687b      	ldr	r3, [r7, #4]
 8009376:	4a0a      	ldr	r2, [pc, #40]	; (80093a0 <TIM_Base_SetConfig+0x114>)
 8009378:	4293      	cmp	r3, r2
 800937a:	d003      	beq.n	8009384 <TIM_Base_SetConfig+0xf8>
 800937c:	687b      	ldr	r3, [r7, #4]
 800937e:	4a0c      	ldr	r2, [pc, #48]	; (80093b0 <TIM_Base_SetConfig+0x124>)
 8009380:	4293      	cmp	r3, r2
 8009382:	d103      	bne.n	800938c <TIM_Base_SetConfig+0x100>
 8009384:	683b      	ldr	r3, [r7, #0]
 8009386:	691a      	ldr	r2, [r3, #16]
 8009388:	687b      	ldr	r3, [r7, #4]
 800938a:	631a      	str	r2, [r3, #48]	; 0x30
 800938c:	687b      	ldr	r3, [r7, #4]
 800938e:	2201      	movs	r2, #1
 8009390:	615a      	str	r2, [r3, #20]
 8009392:	bf00      	nop
 8009394:	3714      	adds	r7, #20
 8009396:	46bd      	mov	sp, r7
 8009398:	f85d 7b04 	ldr.w	r7, [sp], #4
 800939c:	4770      	bx	lr
 800939e:	bf00      	nop
 80093a0:	40010000 	.word	0x40010000
 80093a4:	40000400 	.word	0x40000400
 80093a8:	40000800 	.word	0x40000800
 80093ac:	40000c00 	.word	0x40000c00
 80093b0:	40010400 	.word	0x40010400
 80093b4:	40014000 	.word	0x40014000
 80093b8:	40014400 	.word	0x40014400
 80093bc:	40014800 	.word	0x40014800
 80093c0:	40001800 	.word	0x40001800
 80093c4:	40001c00 	.word	0x40001c00
 80093c8:	40002000 	.word	0x40002000

080093cc <TIM_OC1_SetConfig>:
 80093cc:	b480      	push	{r7}
 80093ce:	b087      	sub	sp, #28
 80093d0:	af00      	add	r7, sp, #0
 80093d2:	6078      	str	r0, [r7, #4]
 80093d4:	6039      	str	r1, [r7, #0]
 80093d6:	687b      	ldr	r3, [r7, #4]
 80093d8:	6a1b      	ldr	r3, [r3, #32]
 80093da:	f023 0201 	bic.w	r2, r3, #1
 80093de:	687b      	ldr	r3, [r7, #4]
 80093e0:	621a      	str	r2, [r3, #32]
 80093e2:	687b      	ldr	r3, [r7, #4]
 80093e4:	6a1b      	ldr	r3, [r3, #32]
 80093e6:	617b      	str	r3, [r7, #20]
 80093e8:	687b      	ldr	r3, [r7, #4]
 80093ea:	685b      	ldr	r3, [r3, #4]
 80093ec:	613b      	str	r3, [r7, #16]
 80093ee:	687b      	ldr	r3, [r7, #4]
 80093f0:	699b      	ldr	r3, [r3, #24]
 80093f2:	60fb      	str	r3, [r7, #12]
 80093f4:	68fb      	ldr	r3, [r7, #12]
 80093f6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80093fa:	60fb      	str	r3, [r7, #12]
 80093fc:	68fb      	ldr	r3, [r7, #12]
 80093fe:	f023 0303 	bic.w	r3, r3, #3
 8009402:	60fb      	str	r3, [r7, #12]
 8009404:	683b      	ldr	r3, [r7, #0]
 8009406:	681b      	ldr	r3, [r3, #0]
 8009408:	68fa      	ldr	r2, [r7, #12]
 800940a:	4313      	orrs	r3, r2
 800940c:	60fb      	str	r3, [r7, #12]
 800940e:	697b      	ldr	r3, [r7, #20]
 8009410:	f023 0302 	bic.w	r3, r3, #2
 8009414:	617b      	str	r3, [r7, #20]
 8009416:	683b      	ldr	r3, [r7, #0]
 8009418:	689b      	ldr	r3, [r3, #8]
 800941a:	697a      	ldr	r2, [r7, #20]
 800941c:	4313      	orrs	r3, r2
 800941e:	617b      	str	r3, [r7, #20]
 8009420:	687b      	ldr	r3, [r7, #4]
 8009422:	4a20      	ldr	r2, [pc, #128]	; (80094a4 <TIM_OC1_SetConfig+0xd8>)
 8009424:	4293      	cmp	r3, r2
 8009426:	d003      	beq.n	8009430 <TIM_OC1_SetConfig+0x64>
 8009428:	687b      	ldr	r3, [r7, #4]
 800942a:	4a1f      	ldr	r2, [pc, #124]	; (80094a8 <TIM_OC1_SetConfig+0xdc>)
 800942c:	4293      	cmp	r3, r2
 800942e:	d10c      	bne.n	800944a <TIM_OC1_SetConfig+0x7e>
 8009430:	697b      	ldr	r3, [r7, #20]
 8009432:	f023 0308 	bic.w	r3, r3, #8
 8009436:	617b      	str	r3, [r7, #20]
 8009438:	683b      	ldr	r3, [r7, #0]
 800943a:	68db      	ldr	r3, [r3, #12]
 800943c:	697a      	ldr	r2, [r7, #20]
 800943e:	4313      	orrs	r3, r2
 8009440:	617b      	str	r3, [r7, #20]
 8009442:	697b      	ldr	r3, [r7, #20]
 8009444:	f023 0304 	bic.w	r3, r3, #4
 8009448:	617b      	str	r3, [r7, #20]
 800944a:	687b      	ldr	r3, [r7, #4]
 800944c:	4a15      	ldr	r2, [pc, #84]	; (80094a4 <TIM_OC1_SetConfig+0xd8>)
 800944e:	4293      	cmp	r3, r2
 8009450:	d003      	beq.n	800945a <TIM_OC1_SetConfig+0x8e>
 8009452:	687b      	ldr	r3, [r7, #4]
 8009454:	4a14      	ldr	r2, [pc, #80]	; (80094a8 <TIM_OC1_SetConfig+0xdc>)
 8009456:	4293      	cmp	r3, r2
 8009458:	d111      	bne.n	800947e <TIM_OC1_SetConfig+0xb2>
 800945a:	693b      	ldr	r3, [r7, #16]
 800945c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8009460:	613b      	str	r3, [r7, #16]
 8009462:	693b      	ldr	r3, [r7, #16]
 8009464:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8009468:	613b      	str	r3, [r7, #16]
 800946a:	683b      	ldr	r3, [r7, #0]
 800946c:	695b      	ldr	r3, [r3, #20]
 800946e:	693a      	ldr	r2, [r7, #16]
 8009470:	4313      	orrs	r3, r2
 8009472:	613b      	str	r3, [r7, #16]
 8009474:	683b      	ldr	r3, [r7, #0]
 8009476:	699b      	ldr	r3, [r3, #24]
 8009478:	693a      	ldr	r2, [r7, #16]
 800947a:	4313      	orrs	r3, r2
 800947c:	613b      	str	r3, [r7, #16]
 800947e:	687b      	ldr	r3, [r7, #4]
 8009480:	693a      	ldr	r2, [r7, #16]
 8009482:	605a      	str	r2, [r3, #4]
 8009484:	687b      	ldr	r3, [r7, #4]
 8009486:	68fa      	ldr	r2, [r7, #12]
 8009488:	619a      	str	r2, [r3, #24]
 800948a:	683b      	ldr	r3, [r7, #0]
 800948c:	685a      	ldr	r2, [r3, #4]
 800948e:	687b      	ldr	r3, [r7, #4]
 8009490:	635a      	str	r2, [r3, #52]	; 0x34
 8009492:	687b      	ldr	r3, [r7, #4]
 8009494:	697a      	ldr	r2, [r7, #20]
 8009496:	621a      	str	r2, [r3, #32]
 8009498:	bf00      	nop
 800949a:	371c      	adds	r7, #28
 800949c:	46bd      	mov	sp, r7
 800949e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094a2:	4770      	bx	lr
 80094a4:	40010000 	.word	0x40010000
 80094a8:	40010400 	.word	0x40010400

080094ac <TIM_OC2_SetConfig>:
 80094ac:	b480      	push	{r7}
 80094ae:	b087      	sub	sp, #28
 80094b0:	af00      	add	r7, sp, #0
 80094b2:	6078      	str	r0, [r7, #4]
 80094b4:	6039      	str	r1, [r7, #0]
 80094b6:	687b      	ldr	r3, [r7, #4]
 80094b8:	6a1b      	ldr	r3, [r3, #32]
 80094ba:	f023 0210 	bic.w	r2, r3, #16
 80094be:	687b      	ldr	r3, [r7, #4]
 80094c0:	621a      	str	r2, [r3, #32]
 80094c2:	687b      	ldr	r3, [r7, #4]
 80094c4:	6a1b      	ldr	r3, [r3, #32]
 80094c6:	617b      	str	r3, [r7, #20]
 80094c8:	687b      	ldr	r3, [r7, #4]
 80094ca:	685b      	ldr	r3, [r3, #4]
 80094cc:	613b      	str	r3, [r7, #16]
 80094ce:	687b      	ldr	r3, [r7, #4]
 80094d0:	699b      	ldr	r3, [r3, #24]
 80094d2:	60fb      	str	r3, [r7, #12]
 80094d4:	68fb      	ldr	r3, [r7, #12]
 80094d6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80094da:	60fb      	str	r3, [r7, #12]
 80094dc:	68fb      	ldr	r3, [r7, #12]
 80094de:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80094e2:	60fb      	str	r3, [r7, #12]
 80094e4:	683b      	ldr	r3, [r7, #0]
 80094e6:	681b      	ldr	r3, [r3, #0]
 80094e8:	021b      	lsls	r3, r3, #8
 80094ea:	68fa      	ldr	r2, [r7, #12]
 80094ec:	4313      	orrs	r3, r2
 80094ee:	60fb      	str	r3, [r7, #12]
 80094f0:	697b      	ldr	r3, [r7, #20]
 80094f2:	f023 0320 	bic.w	r3, r3, #32
 80094f6:	617b      	str	r3, [r7, #20]
 80094f8:	683b      	ldr	r3, [r7, #0]
 80094fa:	689b      	ldr	r3, [r3, #8]
 80094fc:	011b      	lsls	r3, r3, #4
 80094fe:	697a      	ldr	r2, [r7, #20]
 8009500:	4313      	orrs	r3, r2
 8009502:	617b      	str	r3, [r7, #20]
 8009504:	687b      	ldr	r3, [r7, #4]
 8009506:	4a22      	ldr	r2, [pc, #136]	; (8009590 <TIM_OC2_SetConfig+0xe4>)
 8009508:	4293      	cmp	r3, r2
 800950a:	d003      	beq.n	8009514 <TIM_OC2_SetConfig+0x68>
 800950c:	687b      	ldr	r3, [r7, #4]
 800950e:	4a21      	ldr	r2, [pc, #132]	; (8009594 <TIM_OC2_SetConfig+0xe8>)
 8009510:	4293      	cmp	r3, r2
 8009512:	d10d      	bne.n	8009530 <TIM_OC2_SetConfig+0x84>
 8009514:	697b      	ldr	r3, [r7, #20]
 8009516:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800951a:	617b      	str	r3, [r7, #20]
 800951c:	683b      	ldr	r3, [r7, #0]
 800951e:	68db      	ldr	r3, [r3, #12]
 8009520:	011b      	lsls	r3, r3, #4
 8009522:	697a      	ldr	r2, [r7, #20]
 8009524:	4313      	orrs	r3, r2
 8009526:	617b      	str	r3, [r7, #20]
 8009528:	697b      	ldr	r3, [r7, #20]
 800952a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800952e:	617b      	str	r3, [r7, #20]
 8009530:	687b      	ldr	r3, [r7, #4]
 8009532:	4a17      	ldr	r2, [pc, #92]	; (8009590 <TIM_OC2_SetConfig+0xe4>)
 8009534:	4293      	cmp	r3, r2
 8009536:	d003      	beq.n	8009540 <TIM_OC2_SetConfig+0x94>
 8009538:	687b      	ldr	r3, [r7, #4]
 800953a:	4a16      	ldr	r2, [pc, #88]	; (8009594 <TIM_OC2_SetConfig+0xe8>)
 800953c:	4293      	cmp	r3, r2
 800953e:	d113      	bne.n	8009568 <TIM_OC2_SetConfig+0xbc>
 8009540:	693b      	ldr	r3, [r7, #16]
 8009542:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8009546:	613b      	str	r3, [r7, #16]
 8009548:	693b      	ldr	r3, [r7, #16]
 800954a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800954e:	613b      	str	r3, [r7, #16]
 8009550:	683b      	ldr	r3, [r7, #0]
 8009552:	695b      	ldr	r3, [r3, #20]
 8009554:	009b      	lsls	r3, r3, #2
 8009556:	693a      	ldr	r2, [r7, #16]
 8009558:	4313      	orrs	r3, r2
 800955a:	613b      	str	r3, [r7, #16]
 800955c:	683b      	ldr	r3, [r7, #0]
 800955e:	699b      	ldr	r3, [r3, #24]
 8009560:	009b      	lsls	r3, r3, #2
 8009562:	693a      	ldr	r2, [r7, #16]
 8009564:	4313      	orrs	r3, r2
 8009566:	613b      	str	r3, [r7, #16]
 8009568:	687b      	ldr	r3, [r7, #4]
 800956a:	693a      	ldr	r2, [r7, #16]
 800956c:	605a      	str	r2, [r3, #4]
 800956e:	687b      	ldr	r3, [r7, #4]
 8009570:	68fa      	ldr	r2, [r7, #12]
 8009572:	619a      	str	r2, [r3, #24]
 8009574:	683b      	ldr	r3, [r7, #0]
 8009576:	685a      	ldr	r2, [r3, #4]
 8009578:	687b      	ldr	r3, [r7, #4]
 800957a:	639a      	str	r2, [r3, #56]	; 0x38
 800957c:	687b      	ldr	r3, [r7, #4]
 800957e:	697a      	ldr	r2, [r7, #20]
 8009580:	621a      	str	r2, [r3, #32]
 8009582:	bf00      	nop
 8009584:	371c      	adds	r7, #28
 8009586:	46bd      	mov	sp, r7
 8009588:	f85d 7b04 	ldr.w	r7, [sp], #4
 800958c:	4770      	bx	lr
 800958e:	bf00      	nop
 8009590:	40010000 	.word	0x40010000
 8009594:	40010400 	.word	0x40010400

08009598 <TIM_OC3_SetConfig>:
 8009598:	b480      	push	{r7}
 800959a:	b087      	sub	sp, #28
 800959c:	af00      	add	r7, sp, #0
 800959e:	6078      	str	r0, [r7, #4]
 80095a0:	6039      	str	r1, [r7, #0]
 80095a2:	687b      	ldr	r3, [r7, #4]
 80095a4:	6a1b      	ldr	r3, [r3, #32]
 80095a6:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80095aa:	687b      	ldr	r3, [r7, #4]
 80095ac:	621a      	str	r2, [r3, #32]
 80095ae:	687b      	ldr	r3, [r7, #4]
 80095b0:	6a1b      	ldr	r3, [r3, #32]
 80095b2:	617b      	str	r3, [r7, #20]
 80095b4:	687b      	ldr	r3, [r7, #4]
 80095b6:	685b      	ldr	r3, [r3, #4]
 80095b8:	613b      	str	r3, [r7, #16]
 80095ba:	687b      	ldr	r3, [r7, #4]
 80095bc:	69db      	ldr	r3, [r3, #28]
 80095be:	60fb      	str	r3, [r7, #12]
 80095c0:	68fb      	ldr	r3, [r7, #12]
 80095c2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80095c6:	60fb      	str	r3, [r7, #12]
 80095c8:	68fb      	ldr	r3, [r7, #12]
 80095ca:	f023 0303 	bic.w	r3, r3, #3
 80095ce:	60fb      	str	r3, [r7, #12]
 80095d0:	683b      	ldr	r3, [r7, #0]
 80095d2:	681b      	ldr	r3, [r3, #0]
 80095d4:	68fa      	ldr	r2, [r7, #12]
 80095d6:	4313      	orrs	r3, r2
 80095d8:	60fb      	str	r3, [r7, #12]
 80095da:	697b      	ldr	r3, [r7, #20]
 80095dc:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80095e0:	617b      	str	r3, [r7, #20]
 80095e2:	683b      	ldr	r3, [r7, #0]
 80095e4:	689b      	ldr	r3, [r3, #8]
 80095e6:	021b      	lsls	r3, r3, #8
 80095e8:	697a      	ldr	r2, [r7, #20]
 80095ea:	4313      	orrs	r3, r2
 80095ec:	617b      	str	r3, [r7, #20]
 80095ee:	687b      	ldr	r3, [r7, #4]
 80095f0:	4a21      	ldr	r2, [pc, #132]	; (8009678 <TIM_OC3_SetConfig+0xe0>)
 80095f2:	4293      	cmp	r3, r2
 80095f4:	d003      	beq.n	80095fe <TIM_OC3_SetConfig+0x66>
 80095f6:	687b      	ldr	r3, [r7, #4]
 80095f8:	4a20      	ldr	r2, [pc, #128]	; (800967c <TIM_OC3_SetConfig+0xe4>)
 80095fa:	4293      	cmp	r3, r2
 80095fc:	d10d      	bne.n	800961a <TIM_OC3_SetConfig+0x82>
 80095fe:	697b      	ldr	r3, [r7, #20]
 8009600:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8009604:	617b      	str	r3, [r7, #20]
 8009606:	683b      	ldr	r3, [r7, #0]
 8009608:	68db      	ldr	r3, [r3, #12]
 800960a:	021b      	lsls	r3, r3, #8
 800960c:	697a      	ldr	r2, [r7, #20]
 800960e:	4313      	orrs	r3, r2
 8009610:	617b      	str	r3, [r7, #20]
 8009612:	697b      	ldr	r3, [r7, #20]
 8009614:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8009618:	617b      	str	r3, [r7, #20]
 800961a:	687b      	ldr	r3, [r7, #4]
 800961c:	4a16      	ldr	r2, [pc, #88]	; (8009678 <TIM_OC3_SetConfig+0xe0>)
 800961e:	4293      	cmp	r3, r2
 8009620:	d003      	beq.n	800962a <TIM_OC3_SetConfig+0x92>
 8009622:	687b      	ldr	r3, [r7, #4]
 8009624:	4a15      	ldr	r2, [pc, #84]	; (800967c <TIM_OC3_SetConfig+0xe4>)
 8009626:	4293      	cmp	r3, r2
 8009628:	d113      	bne.n	8009652 <TIM_OC3_SetConfig+0xba>
 800962a:	693b      	ldr	r3, [r7, #16]
 800962c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8009630:	613b      	str	r3, [r7, #16]
 8009632:	693b      	ldr	r3, [r7, #16]
 8009634:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8009638:	613b      	str	r3, [r7, #16]
 800963a:	683b      	ldr	r3, [r7, #0]
 800963c:	695b      	ldr	r3, [r3, #20]
 800963e:	011b      	lsls	r3, r3, #4
 8009640:	693a      	ldr	r2, [r7, #16]
 8009642:	4313      	orrs	r3, r2
 8009644:	613b      	str	r3, [r7, #16]
 8009646:	683b      	ldr	r3, [r7, #0]
 8009648:	699b      	ldr	r3, [r3, #24]
 800964a:	011b      	lsls	r3, r3, #4
 800964c:	693a      	ldr	r2, [r7, #16]
 800964e:	4313      	orrs	r3, r2
 8009650:	613b      	str	r3, [r7, #16]
 8009652:	687b      	ldr	r3, [r7, #4]
 8009654:	693a      	ldr	r2, [r7, #16]
 8009656:	605a      	str	r2, [r3, #4]
 8009658:	687b      	ldr	r3, [r7, #4]
 800965a:	68fa      	ldr	r2, [r7, #12]
 800965c:	61da      	str	r2, [r3, #28]
 800965e:	683b      	ldr	r3, [r7, #0]
 8009660:	685a      	ldr	r2, [r3, #4]
 8009662:	687b      	ldr	r3, [r7, #4]
 8009664:	63da      	str	r2, [r3, #60]	; 0x3c
 8009666:	687b      	ldr	r3, [r7, #4]
 8009668:	697a      	ldr	r2, [r7, #20]
 800966a:	621a      	str	r2, [r3, #32]
 800966c:	bf00      	nop
 800966e:	371c      	adds	r7, #28
 8009670:	46bd      	mov	sp, r7
 8009672:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009676:	4770      	bx	lr
 8009678:	40010000 	.word	0x40010000
 800967c:	40010400 	.word	0x40010400

08009680 <TIM_OC4_SetConfig>:
 8009680:	b480      	push	{r7}
 8009682:	b087      	sub	sp, #28
 8009684:	af00      	add	r7, sp, #0
 8009686:	6078      	str	r0, [r7, #4]
 8009688:	6039      	str	r1, [r7, #0]
 800968a:	687b      	ldr	r3, [r7, #4]
 800968c:	6a1b      	ldr	r3, [r3, #32]
 800968e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8009692:	687b      	ldr	r3, [r7, #4]
 8009694:	621a      	str	r2, [r3, #32]
 8009696:	687b      	ldr	r3, [r7, #4]
 8009698:	6a1b      	ldr	r3, [r3, #32]
 800969a:	613b      	str	r3, [r7, #16]
 800969c:	687b      	ldr	r3, [r7, #4]
 800969e:	685b      	ldr	r3, [r3, #4]
 80096a0:	617b      	str	r3, [r7, #20]
 80096a2:	687b      	ldr	r3, [r7, #4]
 80096a4:	69db      	ldr	r3, [r3, #28]
 80096a6:	60fb      	str	r3, [r7, #12]
 80096a8:	68fb      	ldr	r3, [r7, #12]
 80096aa:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80096ae:	60fb      	str	r3, [r7, #12]
 80096b0:	68fb      	ldr	r3, [r7, #12]
 80096b2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80096b6:	60fb      	str	r3, [r7, #12]
 80096b8:	683b      	ldr	r3, [r7, #0]
 80096ba:	681b      	ldr	r3, [r3, #0]
 80096bc:	021b      	lsls	r3, r3, #8
 80096be:	68fa      	ldr	r2, [r7, #12]
 80096c0:	4313      	orrs	r3, r2
 80096c2:	60fb      	str	r3, [r7, #12]
 80096c4:	693b      	ldr	r3, [r7, #16]
 80096c6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80096ca:	613b      	str	r3, [r7, #16]
 80096cc:	683b      	ldr	r3, [r7, #0]
 80096ce:	689b      	ldr	r3, [r3, #8]
 80096d0:	031b      	lsls	r3, r3, #12
 80096d2:	693a      	ldr	r2, [r7, #16]
 80096d4:	4313      	orrs	r3, r2
 80096d6:	613b      	str	r3, [r7, #16]
 80096d8:	687b      	ldr	r3, [r7, #4]
 80096da:	4a12      	ldr	r2, [pc, #72]	; (8009724 <TIM_OC4_SetConfig+0xa4>)
 80096dc:	4293      	cmp	r3, r2
 80096de:	d003      	beq.n	80096e8 <TIM_OC4_SetConfig+0x68>
 80096e0:	687b      	ldr	r3, [r7, #4]
 80096e2:	4a11      	ldr	r2, [pc, #68]	; (8009728 <TIM_OC4_SetConfig+0xa8>)
 80096e4:	4293      	cmp	r3, r2
 80096e6:	d109      	bne.n	80096fc <TIM_OC4_SetConfig+0x7c>
 80096e8:	697b      	ldr	r3, [r7, #20]
 80096ea:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80096ee:	617b      	str	r3, [r7, #20]
 80096f0:	683b      	ldr	r3, [r7, #0]
 80096f2:	695b      	ldr	r3, [r3, #20]
 80096f4:	019b      	lsls	r3, r3, #6
 80096f6:	697a      	ldr	r2, [r7, #20]
 80096f8:	4313      	orrs	r3, r2
 80096fa:	617b      	str	r3, [r7, #20]
 80096fc:	687b      	ldr	r3, [r7, #4]
 80096fe:	697a      	ldr	r2, [r7, #20]
 8009700:	605a      	str	r2, [r3, #4]
 8009702:	687b      	ldr	r3, [r7, #4]
 8009704:	68fa      	ldr	r2, [r7, #12]
 8009706:	61da      	str	r2, [r3, #28]
 8009708:	683b      	ldr	r3, [r7, #0]
 800970a:	685a      	ldr	r2, [r3, #4]
 800970c:	687b      	ldr	r3, [r7, #4]
 800970e:	641a      	str	r2, [r3, #64]	; 0x40
 8009710:	687b      	ldr	r3, [r7, #4]
 8009712:	693a      	ldr	r2, [r7, #16]
 8009714:	621a      	str	r2, [r3, #32]
 8009716:	bf00      	nop
 8009718:	371c      	adds	r7, #28
 800971a:	46bd      	mov	sp, r7
 800971c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009720:	4770      	bx	lr
 8009722:	bf00      	nop
 8009724:	40010000 	.word	0x40010000
 8009728:	40010400 	.word	0x40010400

0800972c <TIM_TI1_SetConfig>:
 800972c:	b480      	push	{r7}
 800972e:	b087      	sub	sp, #28
 8009730:	af00      	add	r7, sp, #0
 8009732:	60f8      	str	r0, [r7, #12]
 8009734:	60b9      	str	r1, [r7, #8]
 8009736:	607a      	str	r2, [r7, #4]
 8009738:	603b      	str	r3, [r7, #0]
 800973a:	68fb      	ldr	r3, [r7, #12]
 800973c:	6a1b      	ldr	r3, [r3, #32]
 800973e:	f023 0201 	bic.w	r2, r3, #1
 8009742:	68fb      	ldr	r3, [r7, #12]
 8009744:	621a      	str	r2, [r3, #32]
 8009746:	68fb      	ldr	r3, [r7, #12]
 8009748:	699b      	ldr	r3, [r3, #24]
 800974a:	617b      	str	r3, [r7, #20]
 800974c:	68fb      	ldr	r3, [r7, #12]
 800974e:	6a1b      	ldr	r3, [r3, #32]
 8009750:	613b      	str	r3, [r7, #16]
 8009752:	68fb      	ldr	r3, [r7, #12]
 8009754:	4a28      	ldr	r2, [pc, #160]	; (80097f8 <TIM_TI1_SetConfig+0xcc>)
 8009756:	4293      	cmp	r3, r2
 8009758:	d01b      	beq.n	8009792 <TIM_TI1_SetConfig+0x66>
 800975a:	68fb      	ldr	r3, [r7, #12]
 800975c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009760:	d017      	beq.n	8009792 <TIM_TI1_SetConfig+0x66>
 8009762:	68fb      	ldr	r3, [r7, #12]
 8009764:	4a25      	ldr	r2, [pc, #148]	; (80097fc <TIM_TI1_SetConfig+0xd0>)
 8009766:	4293      	cmp	r3, r2
 8009768:	d013      	beq.n	8009792 <TIM_TI1_SetConfig+0x66>
 800976a:	68fb      	ldr	r3, [r7, #12]
 800976c:	4a24      	ldr	r2, [pc, #144]	; (8009800 <TIM_TI1_SetConfig+0xd4>)
 800976e:	4293      	cmp	r3, r2
 8009770:	d00f      	beq.n	8009792 <TIM_TI1_SetConfig+0x66>
 8009772:	68fb      	ldr	r3, [r7, #12]
 8009774:	4a23      	ldr	r2, [pc, #140]	; (8009804 <TIM_TI1_SetConfig+0xd8>)
 8009776:	4293      	cmp	r3, r2
 8009778:	d00b      	beq.n	8009792 <TIM_TI1_SetConfig+0x66>
 800977a:	68fb      	ldr	r3, [r7, #12]
 800977c:	4a22      	ldr	r2, [pc, #136]	; (8009808 <TIM_TI1_SetConfig+0xdc>)
 800977e:	4293      	cmp	r3, r2
 8009780:	d007      	beq.n	8009792 <TIM_TI1_SetConfig+0x66>
 8009782:	68fb      	ldr	r3, [r7, #12]
 8009784:	4a21      	ldr	r2, [pc, #132]	; (800980c <TIM_TI1_SetConfig+0xe0>)
 8009786:	4293      	cmp	r3, r2
 8009788:	d003      	beq.n	8009792 <TIM_TI1_SetConfig+0x66>
 800978a:	68fb      	ldr	r3, [r7, #12]
 800978c:	4a20      	ldr	r2, [pc, #128]	; (8009810 <TIM_TI1_SetConfig+0xe4>)
 800978e:	4293      	cmp	r3, r2
 8009790:	d101      	bne.n	8009796 <TIM_TI1_SetConfig+0x6a>
 8009792:	2301      	movs	r3, #1
 8009794:	e000      	b.n	8009798 <TIM_TI1_SetConfig+0x6c>
 8009796:	2300      	movs	r3, #0
 8009798:	2b00      	cmp	r3, #0
 800979a:	d008      	beq.n	80097ae <TIM_TI1_SetConfig+0x82>
 800979c:	697b      	ldr	r3, [r7, #20]
 800979e:	f023 0303 	bic.w	r3, r3, #3
 80097a2:	617b      	str	r3, [r7, #20]
 80097a4:	697a      	ldr	r2, [r7, #20]
 80097a6:	687b      	ldr	r3, [r7, #4]
 80097a8:	4313      	orrs	r3, r2
 80097aa:	617b      	str	r3, [r7, #20]
 80097ac:	e003      	b.n	80097b6 <TIM_TI1_SetConfig+0x8a>
 80097ae:	697b      	ldr	r3, [r7, #20]
 80097b0:	f043 0301 	orr.w	r3, r3, #1
 80097b4:	617b      	str	r3, [r7, #20]
 80097b6:	697b      	ldr	r3, [r7, #20]
 80097b8:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80097bc:	617b      	str	r3, [r7, #20]
 80097be:	683b      	ldr	r3, [r7, #0]
 80097c0:	011b      	lsls	r3, r3, #4
 80097c2:	b2db      	uxtb	r3, r3
 80097c4:	697a      	ldr	r2, [r7, #20]
 80097c6:	4313      	orrs	r3, r2
 80097c8:	617b      	str	r3, [r7, #20]
 80097ca:	693b      	ldr	r3, [r7, #16]
 80097cc:	f023 030a 	bic.w	r3, r3, #10
 80097d0:	613b      	str	r3, [r7, #16]
 80097d2:	68bb      	ldr	r3, [r7, #8]
 80097d4:	f003 030a 	and.w	r3, r3, #10
 80097d8:	693a      	ldr	r2, [r7, #16]
 80097da:	4313      	orrs	r3, r2
 80097dc:	613b      	str	r3, [r7, #16]
 80097de:	68fb      	ldr	r3, [r7, #12]
 80097e0:	697a      	ldr	r2, [r7, #20]
 80097e2:	619a      	str	r2, [r3, #24]
 80097e4:	68fb      	ldr	r3, [r7, #12]
 80097e6:	693a      	ldr	r2, [r7, #16]
 80097e8:	621a      	str	r2, [r3, #32]
 80097ea:	bf00      	nop
 80097ec:	371c      	adds	r7, #28
 80097ee:	46bd      	mov	sp, r7
 80097f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097f4:	4770      	bx	lr
 80097f6:	bf00      	nop
 80097f8:	40010000 	.word	0x40010000
 80097fc:	40000400 	.word	0x40000400
 8009800:	40000800 	.word	0x40000800
 8009804:	40000c00 	.word	0x40000c00
 8009808:	40010400 	.word	0x40010400
 800980c:	40014000 	.word	0x40014000
 8009810:	40001800 	.word	0x40001800

08009814 <TIM_TI1_ConfigInputStage>:
 8009814:	b480      	push	{r7}
 8009816:	b087      	sub	sp, #28
 8009818:	af00      	add	r7, sp, #0
 800981a:	60f8      	str	r0, [r7, #12]
 800981c:	60b9      	str	r1, [r7, #8]
 800981e:	607a      	str	r2, [r7, #4]
 8009820:	68fb      	ldr	r3, [r7, #12]
 8009822:	6a1b      	ldr	r3, [r3, #32]
 8009824:	617b      	str	r3, [r7, #20]
 8009826:	68fb      	ldr	r3, [r7, #12]
 8009828:	6a1b      	ldr	r3, [r3, #32]
 800982a:	f023 0201 	bic.w	r2, r3, #1
 800982e:	68fb      	ldr	r3, [r7, #12]
 8009830:	621a      	str	r2, [r3, #32]
 8009832:	68fb      	ldr	r3, [r7, #12]
 8009834:	699b      	ldr	r3, [r3, #24]
 8009836:	613b      	str	r3, [r7, #16]
 8009838:	693b      	ldr	r3, [r7, #16]
 800983a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800983e:	613b      	str	r3, [r7, #16]
 8009840:	687b      	ldr	r3, [r7, #4]
 8009842:	011b      	lsls	r3, r3, #4
 8009844:	693a      	ldr	r2, [r7, #16]
 8009846:	4313      	orrs	r3, r2
 8009848:	613b      	str	r3, [r7, #16]
 800984a:	697b      	ldr	r3, [r7, #20]
 800984c:	f023 030a 	bic.w	r3, r3, #10
 8009850:	617b      	str	r3, [r7, #20]
 8009852:	697a      	ldr	r2, [r7, #20]
 8009854:	68bb      	ldr	r3, [r7, #8]
 8009856:	4313      	orrs	r3, r2
 8009858:	617b      	str	r3, [r7, #20]
 800985a:	68fb      	ldr	r3, [r7, #12]
 800985c:	693a      	ldr	r2, [r7, #16]
 800985e:	619a      	str	r2, [r3, #24]
 8009860:	68fb      	ldr	r3, [r7, #12]
 8009862:	697a      	ldr	r2, [r7, #20]
 8009864:	621a      	str	r2, [r3, #32]
 8009866:	bf00      	nop
 8009868:	371c      	adds	r7, #28
 800986a:	46bd      	mov	sp, r7
 800986c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009870:	4770      	bx	lr

08009872 <TIM_TI2_SetConfig>:
 8009872:	b480      	push	{r7}
 8009874:	b087      	sub	sp, #28
 8009876:	af00      	add	r7, sp, #0
 8009878:	60f8      	str	r0, [r7, #12]
 800987a:	60b9      	str	r1, [r7, #8]
 800987c:	607a      	str	r2, [r7, #4]
 800987e:	603b      	str	r3, [r7, #0]
 8009880:	68fb      	ldr	r3, [r7, #12]
 8009882:	6a1b      	ldr	r3, [r3, #32]
 8009884:	f023 0210 	bic.w	r2, r3, #16
 8009888:	68fb      	ldr	r3, [r7, #12]
 800988a:	621a      	str	r2, [r3, #32]
 800988c:	68fb      	ldr	r3, [r7, #12]
 800988e:	699b      	ldr	r3, [r3, #24]
 8009890:	617b      	str	r3, [r7, #20]
 8009892:	68fb      	ldr	r3, [r7, #12]
 8009894:	6a1b      	ldr	r3, [r3, #32]
 8009896:	613b      	str	r3, [r7, #16]
 8009898:	697b      	ldr	r3, [r7, #20]
 800989a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800989e:	617b      	str	r3, [r7, #20]
 80098a0:	687b      	ldr	r3, [r7, #4]
 80098a2:	021b      	lsls	r3, r3, #8
 80098a4:	697a      	ldr	r2, [r7, #20]
 80098a6:	4313      	orrs	r3, r2
 80098a8:	617b      	str	r3, [r7, #20]
 80098aa:	697b      	ldr	r3, [r7, #20]
 80098ac:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80098b0:	617b      	str	r3, [r7, #20]
 80098b2:	683b      	ldr	r3, [r7, #0]
 80098b4:	031b      	lsls	r3, r3, #12
 80098b6:	b29b      	uxth	r3, r3
 80098b8:	697a      	ldr	r2, [r7, #20]
 80098ba:	4313      	orrs	r3, r2
 80098bc:	617b      	str	r3, [r7, #20]
 80098be:	693b      	ldr	r3, [r7, #16]
 80098c0:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 80098c4:	613b      	str	r3, [r7, #16]
 80098c6:	68bb      	ldr	r3, [r7, #8]
 80098c8:	011b      	lsls	r3, r3, #4
 80098ca:	f003 03a0 	and.w	r3, r3, #160	; 0xa0
 80098ce:	693a      	ldr	r2, [r7, #16]
 80098d0:	4313      	orrs	r3, r2
 80098d2:	613b      	str	r3, [r7, #16]
 80098d4:	68fb      	ldr	r3, [r7, #12]
 80098d6:	697a      	ldr	r2, [r7, #20]
 80098d8:	619a      	str	r2, [r3, #24]
 80098da:	68fb      	ldr	r3, [r7, #12]
 80098dc:	693a      	ldr	r2, [r7, #16]
 80098de:	621a      	str	r2, [r3, #32]
 80098e0:	bf00      	nop
 80098e2:	371c      	adds	r7, #28
 80098e4:	46bd      	mov	sp, r7
 80098e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098ea:	4770      	bx	lr

080098ec <TIM_TI2_ConfigInputStage>:
 80098ec:	b480      	push	{r7}
 80098ee:	b087      	sub	sp, #28
 80098f0:	af00      	add	r7, sp, #0
 80098f2:	60f8      	str	r0, [r7, #12]
 80098f4:	60b9      	str	r1, [r7, #8]
 80098f6:	607a      	str	r2, [r7, #4]
 80098f8:	68fb      	ldr	r3, [r7, #12]
 80098fa:	6a1b      	ldr	r3, [r3, #32]
 80098fc:	f023 0210 	bic.w	r2, r3, #16
 8009900:	68fb      	ldr	r3, [r7, #12]
 8009902:	621a      	str	r2, [r3, #32]
 8009904:	68fb      	ldr	r3, [r7, #12]
 8009906:	699b      	ldr	r3, [r3, #24]
 8009908:	617b      	str	r3, [r7, #20]
 800990a:	68fb      	ldr	r3, [r7, #12]
 800990c:	6a1b      	ldr	r3, [r3, #32]
 800990e:	613b      	str	r3, [r7, #16]
 8009910:	697b      	ldr	r3, [r7, #20]
 8009912:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8009916:	617b      	str	r3, [r7, #20]
 8009918:	687b      	ldr	r3, [r7, #4]
 800991a:	031b      	lsls	r3, r3, #12
 800991c:	697a      	ldr	r2, [r7, #20]
 800991e:	4313      	orrs	r3, r2
 8009920:	617b      	str	r3, [r7, #20]
 8009922:	693b      	ldr	r3, [r7, #16]
 8009924:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8009928:	613b      	str	r3, [r7, #16]
 800992a:	68bb      	ldr	r3, [r7, #8]
 800992c:	011b      	lsls	r3, r3, #4
 800992e:	693a      	ldr	r2, [r7, #16]
 8009930:	4313      	orrs	r3, r2
 8009932:	613b      	str	r3, [r7, #16]
 8009934:	68fb      	ldr	r3, [r7, #12]
 8009936:	697a      	ldr	r2, [r7, #20]
 8009938:	619a      	str	r2, [r3, #24]
 800993a:	68fb      	ldr	r3, [r7, #12]
 800993c:	693a      	ldr	r2, [r7, #16]
 800993e:	621a      	str	r2, [r3, #32]
 8009940:	bf00      	nop
 8009942:	371c      	adds	r7, #28
 8009944:	46bd      	mov	sp, r7
 8009946:	f85d 7b04 	ldr.w	r7, [sp], #4
 800994a:	4770      	bx	lr

0800994c <TIM_TI3_SetConfig>:
 800994c:	b480      	push	{r7}
 800994e:	b087      	sub	sp, #28
 8009950:	af00      	add	r7, sp, #0
 8009952:	60f8      	str	r0, [r7, #12]
 8009954:	60b9      	str	r1, [r7, #8]
 8009956:	607a      	str	r2, [r7, #4]
 8009958:	603b      	str	r3, [r7, #0]
 800995a:	68fb      	ldr	r3, [r7, #12]
 800995c:	6a1b      	ldr	r3, [r3, #32]
 800995e:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8009962:	68fb      	ldr	r3, [r7, #12]
 8009964:	621a      	str	r2, [r3, #32]
 8009966:	68fb      	ldr	r3, [r7, #12]
 8009968:	69db      	ldr	r3, [r3, #28]
 800996a:	617b      	str	r3, [r7, #20]
 800996c:	68fb      	ldr	r3, [r7, #12]
 800996e:	6a1b      	ldr	r3, [r3, #32]
 8009970:	613b      	str	r3, [r7, #16]
 8009972:	697b      	ldr	r3, [r7, #20]
 8009974:	f023 0303 	bic.w	r3, r3, #3
 8009978:	617b      	str	r3, [r7, #20]
 800997a:	697a      	ldr	r2, [r7, #20]
 800997c:	687b      	ldr	r3, [r7, #4]
 800997e:	4313      	orrs	r3, r2
 8009980:	617b      	str	r3, [r7, #20]
 8009982:	697b      	ldr	r3, [r7, #20]
 8009984:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8009988:	617b      	str	r3, [r7, #20]
 800998a:	683b      	ldr	r3, [r7, #0]
 800998c:	011b      	lsls	r3, r3, #4
 800998e:	b2db      	uxtb	r3, r3
 8009990:	697a      	ldr	r2, [r7, #20]
 8009992:	4313      	orrs	r3, r2
 8009994:	617b      	str	r3, [r7, #20]
 8009996:	693b      	ldr	r3, [r7, #16]
 8009998:	f423 6320 	bic.w	r3, r3, #2560	; 0xa00
 800999c:	613b      	str	r3, [r7, #16]
 800999e:	68bb      	ldr	r3, [r7, #8]
 80099a0:	021b      	lsls	r3, r3, #8
 80099a2:	f403 6320 	and.w	r3, r3, #2560	; 0xa00
 80099a6:	693a      	ldr	r2, [r7, #16]
 80099a8:	4313      	orrs	r3, r2
 80099aa:	613b      	str	r3, [r7, #16]
 80099ac:	68fb      	ldr	r3, [r7, #12]
 80099ae:	697a      	ldr	r2, [r7, #20]
 80099b0:	61da      	str	r2, [r3, #28]
 80099b2:	68fb      	ldr	r3, [r7, #12]
 80099b4:	693a      	ldr	r2, [r7, #16]
 80099b6:	621a      	str	r2, [r3, #32]
 80099b8:	bf00      	nop
 80099ba:	371c      	adds	r7, #28
 80099bc:	46bd      	mov	sp, r7
 80099be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099c2:	4770      	bx	lr

080099c4 <TIM_TI4_SetConfig>:
 80099c4:	b480      	push	{r7}
 80099c6:	b087      	sub	sp, #28
 80099c8:	af00      	add	r7, sp, #0
 80099ca:	60f8      	str	r0, [r7, #12]
 80099cc:	60b9      	str	r1, [r7, #8]
 80099ce:	607a      	str	r2, [r7, #4]
 80099d0:	603b      	str	r3, [r7, #0]
 80099d2:	68fb      	ldr	r3, [r7, #12]
 80099d4:	6a1b      	ldr	r3, [r3, #32]
 80099d6:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80099da:	68fb      	ldr	r3, [r7, #12]
 80099dc:	621a      	str	r2, [r3, #32]
 80099de:	68fb      	ldr	r3, [r7, #12]
 80099e0:	69db      	ldr	r3, [r3, #28]
 80099e2:	617b      	str	r3, [r7, #20]
 80099e4:	68fb      	ldr	r3, [r7, #12]
 80099e6:	6a1b      	ldr	r3, [r3, #32]
 80099e8:	613b      	str	r3, [r7, #16]
 80099ea:	697b      	ldr	r3, [r7, #20]
 80099ec:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80099f0:	617b      	str	r3, [r7, #20]
 80099f2:	687b      	ldr	r3, [r7, #4]
 80099f4:	021b      	lsls	r3, r3, #8
 80099f6:	697a      	ldr	r2, [r7, #20]
 80099f8:	4313      	orrs	r3, r2
 80099fa:	617b      	str	r3, [r7, #20]
 80099fc:	697b      	ldr	r3, [r7, #20]
 80099fe:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8009a02:	617b      	str	r3, [r7, #20]
 8009a04:	683b      	ldr	r3, [r7, #0]
 8009a06:	031b      	lsls	r3, r3, #12
 8009a08:	b29b      	uxth	r3, r3
 8009a0a:	697a      	ldr	r2, [r7, #20]
 8009a0c:	4313      	orrs	r3, r2
 8009a0e:	617b      	str	r3, [r7, #20]
 8009a10:	693b      	ldr	r3, [r7, #16]
 8009a12:	f423 4320 	bic.w	r3, r3, #40960	; 0xa000
 8009a16:	613b      	str	r3, [r7, #16]
 8009a18:	68bb      	ldr	r3, [r7, #8]
 8009a1a:	031b      	lsls	r3, r3, #12
 8009a1c:	f403 4320 	and.w	r3, r3, #40960	; 0xa000
 8009a20:	693a      	ldr	r2, [r7, #16]
 8009a22:	4313      	orrs	r3, r2
 8009a24:	613b      	str	r3, [r7, #16]
 8009a26:	68fb      	ldr	r3, [r7, #12]
 8009a28:	697a      	ldr	r2, [r7, #20]
 8009a2a:	61da      	str	r2, [r3, #28]
 8009a2c:	68fb      	ldr	r3, [r7, #12]
 8009a2e:	693a      	ldr	r2, [r7, #16]
 8009a30:	621a      	str	r2, [r3, #32]
 8009a32:	bf00      	nop
 8009a34:	371c      	adds	r7, #28
 8009a36:	46bd      	mov	sp, r7
 8009a38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a3c:	4770      	bx	lr

08009a3e <TIM_ITRx_SetConfig>:
 8009a3e:	b480      	push	{r7}
 8009a40:	b085      	sub	sp, #20
 8009a42:	af00      	add	r7, sp, #0
 8009a44:	6078      	str	r0, [r7, #4]
 8009a46:	6039      	str	r1, [r7, #0]
 8009a48:	687b      	ldr	r3, [r7, #4]
 8009a4a:	689b      	ldr	r3, [r3, #8]
 8009a4c:	60fb      	str	r3, [r7, #12]
 8009a4e:	68fb      	ldr	r3, [r7, #12]
 8009a50:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009a54:	60fb      	str	r3, [r7, #12]
 8009a56:	683a      	ldr	r2, [r7, #0]
 8009a58:	68fb      	ldr	r3, [r7, #12]
 8009a5a:	4313      	orrs	r3, r2
 8009a5c:	f043 0307 	orr.w	r3, r3, #7
 8009a60:	60fb      	str	r3, [r7, #12]
 8009a62:	687b      	ldr	r3, [r7, #4]
 8009a64:	68fa      	ldr	r2, [r7, #12]
 8009a66:	609a      	str	r2, [r3, #8]
 8009a68:	bf00      	nop
 8009a6a:	3714      	adds	r7, #20
 8009a6c:	46bd      	mov	sp, r7
 8009a6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a72:	4770      	bx	lr

08009a74 <TIM_ETR_SetConfig>:
 8009a74:	b480      	push	{r7}
 8009a76:	b087      	sub	sp, #28
 8009a78:	af00      	add	r7, sp, #0
 8009a7a:	60f8      	str	r0, [r7, #12]
 8009a7c:	60b9      	str	r1, [r7, #8]
 8009a7e:	607a      	str	r2, [r7, #4]
 8009a80:	603b      	str	r3, [r7, #0]
 8009a82:	68fb      	ldr	r3, [r7, #12]
 8009a84:	689b      	ldr	r3, [r3, #8]
 8009a86:	617b      	str	r3, [r7, #20]
 8009a88:	697b      	ldr	r3, [r7, #20]
 8009a8a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8009a8e:	617b      	str	r3, [r7, #20]
 8009a90:	683b      	ldr	r3, [r7, #0]
 8009a92:	021a      	lsls	r2, r3, #8
 8009a94:	687b      	ldr	r3, [r7, #4]
 8009a96:	431a      	orrs	r2, r3
 8009a98:	68bb      	ldr	r3, [r7, #8]
 8009a9a:	4313      	orrs	r3, r2
 8009a9c:	697a      	ldr	r2, [r7, #20]
 8009a9e:	4313      	orrs	r3, r2
 8009aa0:	617b      	str	r3, [r7, #20]
 8009aa2:	68fb      	ldr	r3, [r7, #12]
 8009aa4:	697a      	ldr	r2, [r7, #20]
 8009aa6:	609a      	str	r2, [r3, #8]
 8009aa8:	bf00      	nop
 8009aaa:	371c      	adds	r7, #28
 8009aac:	46bd      	mov	sp, r7
 8009aae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ab2:	4770      	bx	lr

08009ab4 <TIM_CCxChannelCmd>:
 8009ab4:	b480      	push	{r7}
 8009ab6:	b087      	sub	sp, #28
 8009ab8:	af00      	add	r7, sp, #0
 8009aba:	60f8      	str	r0, [r7, #12]
 8009abc:	60b9      	str	r1, [r7, #8]
 8009abe:	607a      	str	r2, [r7, #4]
 8009ac0:	68bb      	ldr	r3, [r7, #8]
 8009ac2:	f003 031f 	and.w	r3, r3, #31
 8009ac6:	2201      	movs	r2, #1
 8009ac8:	fa02 f303 	lsl.w	r3, r2, r3
 8009acc:	617b      	str	r3, [r7, #20]
 8009ace:	68fb      	ldr	r3, [r7, #12]
 8009ad0:	6a1a      	ldr	r2, [r3, #32]
 8009ad2:	697b      	ldr	r3, [r7, #20]
 8009ad4:	43db      	mvns	r3, r3
 8009ad6:	401a      	ands	r2, r3
 8009ad8:	68fb      	ldr	r3, [r7, #12]
 8009ada:	621a      	str	r2, [r3, #32]
 8009adc:	68fb      	ldr	r3, [r7, #12]
 8009ade:	6a1a      	ldr	r2, [r3, #32]
 8009ae0:	68bb      	ldr	r3, [r7, #8]
 8009ae2:	f003 031f 	and.w	r3, r3, #31
 8009ae6:	6879      	ldr	r1, [r7, #4]
 8009ae8:	fa01 f303 	lsl.w	r3, r1, r3
 8009aec:	431a      	orrs	r2, r3
 8009aee:	68fb      	ldr	r3, [r7, #12]
 8009af0:	621a      	str	r2, [r3, #32]
 8009af2:	bf00      	nop
 8009af4:	371c      	adds	r7, #28
 8009af6:	46bd      	mov	sp, r7
 8009af8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009afc:	4770      	bx	lr
	...

08009b00 <HAL_TIMEx_MasterConfigSynchronization>:
 8009b00:	b480      	push	{r7}
 8009b02:	b085      	sub	sp, #20
 8009b04:	af00      	add	r7, sp, #0
 8009b06:	6078      	str	r0, [r7, #4]
 8009b08:	6039      	str	r1, [r7, #0]
 8009b0a:	687b      	ldr	r3, [r7, #4]
 8009b0c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8009b10:	2b01      	cmp	r3, #1
 8009b12:	d101      	bne.n	8009b18 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8009b14:	2302      	movs	r3, #2
 8009b16:	e05a      	b.n	8009bce <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8009b18:	687b      	ldr	r3, [r7, #4]
 8009b1a:	2201      	movs	r2, #1
 8009b1c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009b20:	687b      	ldr	r3, [r7, #4]
 8009b22:	2202      	movs	r2, #2
 8009b24:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009b28:	687b      	ldr	r3, [r7, #4]
 8009b2a:	681b      	ldr	r3, [r3, #0]
 8009b2c:	685b      	ldr	r3, [r3, #4]
 8009b2e:	60fb      	str	r3, [r7, #12]
 8009b30:	687b      	ldr	r3, [r7, #4]
 8009b32:	681b      	ldr	r3, [r3, #0]
 8009b34:	689b      	ldr	r3, [r3, #8]
 8009b36:	60bb      	str	r3, [r7, #8]
 8009b38:	68fb      	ldr	r3, [r7, #12]
 8009b3a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009b3e:	60fb      	str	r3, [r7, #12]
 8009b40:	683b      	ldr	r3, [r7, #0]
 8009b42:	681b      	ldr	r3, [r3, #0]
 8009b44:	68fa      	ldr	r2, [r7, #12]
 8009b46:	4313      	orrs	r3, r2
 8009b48:	60fb      	str	r3, [r7, #12]
 8009b4a:	687b      	ldr	r3, [r7, #4]
 8009b4c:	681b      	ldr	r3, [r3, #0]
 8009b4e:	68fa      	ldr	r2, [r7, #12]
 8009b50:	605a      	str	r2, [r3, #4]
 8009b52:	687b      	ldr	r3, [r7, #4]
 8009b54:	681b      	ldr	r3, [r3, #0]
 8009b56:	4a21      	ldr	r2, [pc, #132]	; (8009bdc <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8009b58:	4293      	cmp	r3, r2
 8009b5a:	d022      	beq.n	8009ba2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8009b5c:	687b      	ldr	r3, [r7, #4]
 8009b5e:	681b      	ldr	r3, [r3, #0]
 8009b60:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009b64:	d01d      	beq.n	8009ba2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8009b66:	687b      	ldr	r3, [r7, #4]
 8009b68:	681b      	ldr	r3, [r3, #0]
 8009b6a:	4a1d      	ldr	r2, [pc, #116]	; (8009be0 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8009b6c:	4293      	cmp	r3, r2
 8009b6e:	d018      	beq.n	8009ba2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8009b70:	687b      	ldr	r3, [r7, #4]
 8009b72:	681b      	ldr	r3, [r3, #0]
 8009b74:	4a1b      	ldr	r2, [pc, #108]	; (8009be4 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8009b76:	4293      	cmp	r3, r2
 8009b78:	d013      	beq.n	8009ba2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8009b7a:	687b      	ldr	r3, [r7, #4]
 8009b7c:	681b      	ldr	r3, [r3, #0]
 8009b7e:	4a1a      	ldr	r2, [pc, #104]	; (8009be8 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8009b80:	4293      	cmp	r3, r2
 8009b82:	d00e      	beq.n	8009ba2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8009b84:	687b      	ldr	r3, [r7, #4]
 8009b86:	681b      	ldr	r3, [r3, #0]
 8009b88:	4a18      	ldr	r2, [pc, #96]	; (8009bec <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8009b8a:	4293      	cmp	r3, r2
 8009b8c:	d009      	beq.n	8009ba2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8009b8e:	687b      	ldr	r3, [r7, #4]
 8009b90:	681b      	ldr	r3, [r3, #0]
 8009b92:	4a17      	ldr	r2, [pc, #92]	; (8009bf0 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8009b94:	4293      	cmp	r3, r2
 8009b96:	d004      	beq.n	8009ba2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8009b98:	687b      	ldr	r3, [r7, #4]
 8009b9a:	681b      	ldr	r3, [r3, #0]
 8009b9c:	4a15      	ldr	r2, [pc, #84]	; (8009bf4 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8009b9e:	4293      	cmp	r3, r2
 8009ba0:	d10c      	bne.n	8009bbc <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8009ba2:	68bb      	ldr	r3, [r7, #8]
 8009ba4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8009ba8:	60bb      	str	r3, [r7, #8]
 8009baa:	683b      	ldr	r3, [r7, #0]
 8009bac:	685b      	ldr	r3, [r3, #4]
 8009bae:	68ba      	ldr	r2, [r7, #8]
 8009bb0:	4313      	orrs	r3, r2
 8009bb2:	60bb      	str	r3, [r7, #8]
 8009bb4:	687b      	ldr	r3, [r7, #4]
 8009bb6:	681b      	ldr	r3, [r3, #0]
 8009bb8:	68ba      	ldr	r2, [r7, #8]
 8009bba:	609a      	str	r2, [r3, #8]
 8009bbc:	687b      	ldr	r3, [r7, #4]
 8009bbe:	2201      	movs	r2, #1
 8009bc0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009bc4:	687b      	ldr	r3, [r7, #4]
 8009bc6:	2200      	movs	r2, #0
 8009bc8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009bcc:	2300      	movs	r3, #0
 8009bce:	4618      	mov	r0, r3
 8009bd0:	3714      	adds	r7, #20
 8009bd2:	46bd      	mov	sp, r7
 8009bd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bd8:	4770      	bx	lr
 8009bda:	bf00      	nop
 8009bdc:	40010000 	.word	0x40010000
 8009be0:	40000400 	.word	0x40000400
 8009be4:	40000800 	.word	0x40000800
 8009be8:	40000c00 	.word	0x40000c00
 8009bec:	40010400 	.word	0x40010400
 8009bf0:	40014000 	.word	0x40014000
 8009bf4:	40001800 	.word	0x40001800

08009bf8 <HAL_TIMEx_ConfigBreakDeadTime>:
 8009bf8:	b480      	push	{r7}
 8009bfa:	b085      	sub	sp, #20
 8009bfc:	af00      	add	r7, sp, #0
 8009bfe:	6078      	str	r0, [r7, #4]
 8009c00:	6039      	str	r1, [r7, #0]
 8009c02:	2300      	movs	r3, #0
 8009c04:	60fb      	str	r3, [r7, #12]
 8009c06:	687b      	ldr	r3, [r7, #4]
 8009c08:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8009c0c:	2b01      	cmp	r3, #1
 8009c0e:	d101      	bne.n	8009c14 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8009c10:	2302      	movs	r3, #2
 8009c12:	e03d      	b.n	8009c90 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 8009c14:	687b      	ldr	r3, [r7, #4]
 8009c16:	2201      	movs	r2, #1
 8009c18:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009c1c:	68fb      	ldr	r3, [r7, #12]
 8009c1e:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 8009c22:	683b      	ldr	r3, [r7, #0]
 8009c24:	68db      	ldr	r3, [r3, #12]
 8009c26:	4313      	orrs	r3, r2
 8009c28:	60fb      	str	r3, [r7, #12]
 8009c2a:	68fb      	ldr	r3, [r7, #12]
 8009c2c:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8009c30:	683b      	ldr	r3, [r7, #0]
 8009c32:	689b      	ldr	r3, [r3, #8]
 8009c34:	4313      	orrs	r3, r2
 8009c36:	60fb      	str	r3, [r7, #12]
 8009c38:	68fb      	ldr	r3, [r7, #12]
 8009c3a:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8009c3e:	683b      	ldr	r3, [r7, #0]
 8009c40:	685b      	ldr	r3, [r3, #4]
 8009c42:	4313      	orrs	r3, r2
 8009c44:	60fb      	str	r3, [r7, #12]
 8009c46:	68fb      	ldr	r3, [r7, #12]
 8009c48:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8009c4c:	683b      	ldr	r3, [r7, #0]
 8009c4e:	681b      	ldr	r3, [r3, #0]
 8009c50:	4313      	orrs	r3, r2
 8009c52:	60fb      	str	r3, [r7, #12]
 8009c54:	68fb      	ldr	r3, [r7, #12]
 8009c56:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8009c5a:	683b      	ldr	r3, [r7, #0]
 8009c5c:	691b      	ldr	r3, [r3, #16]
 8009c5e:	4313      	orrs	r3, r2
 8009c60:	60fb      	str	r3, [r7, #12]
 8009c62:	68fb      	ldr	r3, [r7, #12]
 8009c64:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8009c68:	683b      	ldr	r3, [r7, #0]
 8009c6a:	695b      	ldr	r3, [r3, #20]
 8009c6c:	4313      	orrs	r3, r2
 8009c6e:	60fb      	str	r3, [r7, #12]
 8009c70:	68fb      	ldr	r3, [r7, #12]
 8009c72:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 8009c76:	683b      	ldr	r3, [r7, #0]
 8009c78:	69db      	ldr	r3, [r3, #28]
 8009c7a:	4313      	orrs	r3, r2
 8009c7c:	60fb      	str	r3, [r7, #12]
 8009c7e:	687b      	ldr	r3, [r7, #4]
 8009c80:	681b      	ldr	r3, [r3, #0]
 8009c82:	68fa      	ldr	r2, [r7, #12]
 8009c84:	645a      	str	r2, [r3, #68]	; 0x44
 8009c86:	687b      	ldr	r3, [r7, #4]
 8009c88:	2200      	movs	r2, #0
 8009c8a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009c8e:	2300      	movs	r3, #0
 8009c90:	4618      	mov	r0, r3
 8009c92:	3714      	adds	r7, #20
 8009c94:	46bd      	mov	sp, r7
 8009c96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c9a:	4770      	bx	lr

08009c9c <HAL_TIMEx_CommutCallback>:
 8009c9c:	b480      	push	{r7}
 8009c9e:	b083      	sub	sp, #12
 8009ca0:	af00      	add	r7, sp, #0
 8009ca2:	6078      	str	r0, [r7, #4]
 8009ca4:	bf00      	nop
 8009ca6:	370c      	adds	r7, #12
 8009ca8:	46bd      	mov	sp, r7
 8009caa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cae:	4770      	bx	lr

08009cb0 <HAL_TIMEx_BreakCallback>:
 8009cb0:	b480      	push	{r7}
 8009cb2:	b083      	sub	sp, #12
 8009cb4:	af00      	add	r7, sp, #0
 8009cb6:	6078      	str	r0, [r7, #4]
 8009cb8:	bf00      	nop
 8009cba:	370c      	adds	r7, #12
 8009cbc:	46bd      	mov	sp, r7
 8009cbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cc2:	4770      	bx	lr

08009cc4 <HAL_UART_Init>:
 8009cc4:	b580      	push	{r7, lr}
 8009cc6:	b082      	sub	sp, #8
 8009cc8:	af00      	add	r7, sp, #0
 8009cca:	6078      	str	r0, [r7, #4]
 8009ccc:	687b      	ldr	r3, [r7, #4]
 8009cce:	2b00      	cmp	r3, #0
 8009cd0:	d101      	bne.n	8009cd6 <HAL_UART_Init+0x12>
 8009cd2:	2301      	movs	r3, #1
 8009cd4:	e03f      	b.n	8009d56 <HAL_UART_Init+0x92>
 8009cd6:	687b      	ldr	r3, [r7, #4]
 8009cd8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8009cdc:	b2db      	uxtb	r3, r3
 8009cde:	2b00      	cmp	r3, #0
 8009ce0:	d106      	bne.n	8009cf0 <HAL_UART_Init+0x2c>
 8009ce2:	687b      	ldr	r3, [r7, #4]
 8009ce4:	2200      	movs	r2, #0
 8009ce6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009cea:	6878      	ldr	r0, [r7, #4]
 8009cec:	f7fb f8ec 	bl	8004ec8 <HAL_UART_MspInit>
 8009cf0:	687b      	ldr	r3, [r7, #4]
 8009cf2:	2224      	movs	r2, #36	; 0x24
 8009cf4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009cf8:	687b      	ldr	r3, [r7, #4]
 8009cfa:	681b      	ldr	r3, [r3, #0]
 8009cfc:	68da      	ldr	r2, [r3, #12]
 8009cfe:	687b      	ldr	r3, [r7, #4]
 8009d00:	681b      	ldr	r3, [r3, #0]
 8009d02:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8009d06:	60da      	str	r2, [r3, #12]
 8009d08:	6878      	ldr	r0, [r7, #4]
 8009d0a:	f000 fe81 	bl	800aa10 <UART_SetConfig>
 8009d0e:	687b      	ldr	r3, [r7, #4]
 8009d10:	681b      	ldr	r3, [r3, #0]
 8009d12:	691a      	ldr	r2, [r3, #16]
 8009d14:	687b      	ldr	r3, [r7, #4]
 8009d16:	681b      	ldr	r3, [r3, #0]
 8009d18:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8009d1c:	611a      	str	r2, [r3, #16]
 8009d1e:	687b      	ldr	r3, [r7, #4]
 8009d20:	681b      	ldr	r3, [r3, #0]
 8009d22:	695a      	ldr	r2, [r3, #20]
 8009d24:	687b      	ldr	r3, [r7, #4]
 8009d26:	681b      	ldr	r3, [r3, #0]
 8009d28:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8009d2c:	615a      	str	r2, [r3, #20]
 8009d2e:	687b      	ldr	r3, [r7, #4]
 8009d30:	681b      	ldr	r3, [r3, #0]
 8009d32:	68da      	ldr	r2, [r3, #12]
 8009d34:	687b      	ldr	r3, [r7, #4]
 8009d36:	681b      	ldr	r3, [r3, #0]
 8009d38:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8009d3c:	60da      	str	r2, [r3, #12]
 8009d3e:	687b      	ldr	r3, [r7, #4]
 8009d40:	2200      	movs	r2, #0
 8009d42:	641a      	str	r2, [r3, #64]	; 0x40
 8009d44:	687b      	ldr	r3, [r7, #4]
 8009d46:	2220      	movs	r2, #32
 8009d48:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009d4c:	687b      	ldr	r3, [r7, #4]
 8009d4e:	2220      	movs	r2, #32
 8009d50:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009d54:	2300      	movs	r3, #0
 8009d56:	4618      	mov	r0, r3
 8009d58:	3708      	adds	r7, #8
 8009d5a:	46bd      	mov	sp, r7
 8009d5c:	bd80      	pop	{r7, pc}

08009d5e <HAL_UART_Transmit>:
 8009d5e:	b580      	push	{r7, lr}
 8009d60:	b08a      	sub	sp, #40	; 0x28
 8009d62:	af02      	add	r7, sp, #8
 8009d64:	60f8      	str	r0, [r7, #12]
 8009d66:	60b9      	str	r1, [r7, #8]
 8009d68:	603b      	str	r3, [r7, #0]
 8009d6a:	4613      	mov	r3, r2
 8009d6c:	80fb      	strh	r3, [r7, #6]
 8009d6e:	2300      	movs	r3, #0
 8009d70:	617b      	str	r3, [r7, #20]
 8009d72:	68fb      	ldr	r3, [r7, #12]
 8009d74:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8009d78:	b2db      	uxtb	r3, r3
 8009d7a:	2b20      	cmp	r3, #32
 8009d7c:	d17c      	bne.n	8009e78 <HAL_UART_Transmit+0x11a>
 8009d7e:	68bb      	ldr	r3, [r7, #8]
 8009d80:	2b00      	cmp	r3, #0
 8009d82:	d002      	beq.n	8009d8a <HAL_UART_Transmit+0x2c>
 8009d84:	88fb      	ldrh	r3, [r7, #6]
 8009d86:	2b00      	cmp	r3, #0
 8009d88:	d101      	bne.n	8009d8e <HAL_UART_Transmit+0x30>
 8009d8a:	2301      	movs	r3, #1
 8009d8c:	e075      	b.n	8009e7a <HAL_UART_Transmit+0x11c>
 8009d8e:	68fb      	ldr	r3, [r7, #12]
 8009d90:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8009d94:	2b01      	cmp	r3, #1
 8009d96:	d101      	bne.n	8009d9c <HAL_UART_Transmit+0x3e>
 8009d98:	2302      	movs	r3, #2
 8009d9a:	e06e      	b.n	8009e7a <HAL_UART_Transmit+0x11c>
 8009d9c:	68fb      	ldr	r3, [r7, #12]
 8009d9e:	2201      	movs	r2, #1
 8009da0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009da4:	68fb      	ldr	r3, [r7, #12]
 8009da6:	2200      	movs	r2, #0
 8009da8:	641a      	str	r2, [r3, #64]	; 0x40
 8009daa:	68fb      	ldr	r3, [r7, #12]
 8009dac:	2221      	movs	r2, #33	; 0x21
 8009dae:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009db2:	f7fb fb6b 	bl	800548c <HAL_GetTick>
 8009db6:	6178      	str	r0, [r7, #20]
 8009db8:	68fb      	ldr	r3, [r7, #12]
 8009dba:	88fa      	ldrh	r2, [r7, #6]
 8009dbc:	849a      	strh	r2, [r3, #36]	; 0x24
 8009dbe:	68fb      	ldr	r3, [r7, #12]
 8009dc0:	88fa      	ldrh	r2, [r7, #6]
 8009dc2:	84da      	strh	r2, [r3, #38]	; 0x26
 8009dc4:	68fb      	ldr	r3, [r7, #12]
 8009dc6:	689b      	ldr	r3, [r3, #8]
 8009dc8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009dcc:	d108      	bne.n	8009de0 <HAL_UART_Transmit+0x82>
 8009dce:	68fb      	ldr	r3, [r7, #12]
 8009dd0:	691b      	ldr	r3, [r3, #16]
 8009dd2:	2b00      	cmp	r3, #0
 8009dd4:	d104      	bne.n	8009de0 <HAL_UART_Transmit+0x82>
 8009dd6:	2300      	movs	r3, #0
 8009dd8:	61fb      	str	r3, [r7, #28]
 8009dda:	68bb      	ldr	r3, [r7, #8]
 8009ddc:	61bb      	str	r3, [r7, #24]
 8009dde:	e003      	b.n	8009de8 <HAL_UART_Transmit+0x8a>
 8009de0:	68bb      	ldr	r3, [r7, #8]
 8009de2:	61fb      	str	r3, [r7, #28]
 8009de4:	2300      	movs	r3, #0
 8009de6:	61bb      	str	r3, [r7, #24]
 8009de8:	68fb      	ldr	r3, [r7, #12]
 8009dea:	2200      	movs	r2, #0
 8009dec:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009df0:	e02a      	b.n	8009e48 <HAL_UART_Transmit+0xea>
 8009df2:	683b      	ldr	r3, [r7, #0]
 8009df4:	9300      	str	r3, [sp, #0]
 8009df6:	697b      	ldr	r3, [r7, #20]
 8009df8:	2200      	movs	r2, #0
 8009dfa:	2180      	movs	r1, #128	; 0x80
 8009dfc:	68f8      	ldr	r0, [r7, #12]
 8009dfe:	f000 fbc1 	bl	800a584 <UART_WaitOnFlagUntilTimeout>
 8009e02:	4603      	mov	r3, r0
 8009e04:	2b00      	cmp	r3, #0
 8009e06:	d001      	beq.n	8009e0c <HAL_UART_Transmit+0xae>
 8009e08:	2303      	movs	r3, #3
 8009e0a:	e036      	b.n	8009e7a <HAL_UART_Transmit+0x11c>
 8009e0c:	69fb      	ldr	r3, [r7, #28]
 8009e0e:	2b00      	cmp	r3, #0
 8009e10:	d10b      	bne.n	8009e2a <HAL_UART_Transmit+0xcc>
 8009e12:	69bb      	ldr	r3, [r7, #24]
 8009e14:	881b      	ldrh	r3, [r3, #0]
 8009e16:	461a      	mov	r2, r3
 8009e18:	68fb      	ldr	r3, [r7, #12]
 8009e1a:	681b      	ldr	r3, [r3, #0]
 8009e1c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8009e20:	605a      	str	r2, [r3, #4]
 8009e22:	69bb      	ldr	r3, [r7, #24]
 8009e24:	3302      	adds	r3, #2
 8009e26:	61bb      	str	r3, [r7, #24]
 8009e28:	e007      	b.n	8009e3a <HAL_UART_Transmit+0xdc>
 8009e2a:	69fb      	ldr	r3, [r7, #28]
 8009e2c:	781a      	ldrb	r2, [r3, #0]
 8009e2e:	68fb      	ldr	r3, [r7, #12]
 8009e30:	681b      	ldr	r3, [r3, #0]
 8009e32:	605a      	str	r2, [r3, #4]
 8009e34:	69fb      	ldr	r3, [r7, #28]
 8009e36:	3301      	adds	r3, #1
 8009e38:	61fb      	str	r3, [r7, #28]
 8009e3a:	68fb      	ldr	r3, [r7, #12]
 8009e3c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8009e3e:	b29b      	uxth	r3, r3
 8009e40:	3b01      	subs	r3, #1
 8009e42:	b29a      	uxth	r2, r3
 8009e44:	68fb      	ldr	r3, [r7, #12]
 8009e46:	84da      	strh	r2, [r3, #38]	; 0x26
 8009e48:	68fb      	ldr	r3, [r7, #12]
 8009e4a:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8009e4c:	b29b      	uxth	r3, r3
 8009e4e:	2b00      	cmp	r3, #0
 8009e50:	d1cf      	bne.n	8009df2 <HAL_UART_Transmit+0x94>
 8009e52:	683b      	ldr	r3, [r7, #0]
 8009e54:	9300      	str	r3, [sp, #0]
 8009e56:	697b      	ldr	r3, [r7, #20]
 8009e58:	2200      	movs	r2, #0
 8009e5a:	2140      	movs	r1, #64	; 0x40
 8009e5c:	68f8      	ldr	r0, [r7, #12]
 8009e5e:	f000 fb91 	bl	800a584 <UART_WaitOnFlagUntilTimeout>
 8009e62:	4603      	mov	r3, r0
 8009e64:	2b00      	cmp	r3, #0
 8009e66:	d001      	beq.n	8009e6c <HAL_UART_Transmit+0x10e>
 8009e68:	2303      	movs	r3, #3
 8009e6a:	e006      	b.n	8009e7a <HAL_UART_Transmit+0x11c>
 8009e6c:	68fb      	ldr	r3, [r7, #12]
 8009e6e:	2220      	movs	r2, #32
 8009e70:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009e74:	2300      	movs	r3, #0
 8009e76:	e000      	b.n	8009e7a <HAL_UART_Transmit+0x11c>
 8009e78:	2302      	movs	r3, #2
 8009e7a:	4618      	mov	r0, r3
 8009e7c:	3720      	adds	r7, #32
 8009e7e:	46bd      	mov	sp, r7
 8009e80:	bd80      	pop	{r7, pc}

08009e82 <HAL_UART_Receive>:
 8009e82:	b580      	push	{r7, lr}
 8009e84:	b08a      	sub	sp, #40	; 0x28
 8009e86:	af02      	add	r7, sp, #8
 8009e88:	60f8      	str	r0, [r7, #12]
 8009e8a:	60b9      	str	r1, [r7, #8]
 8009e8c:	603b      	str	r3, [r7, #0]
 8009e8e:	4613      	mov	r3, r2
 8009e90:	80fb      	strh	r3, [r7, #6]
 8009e92:	2300      	movs	r3, #0
 8009e94:	617b      	str	r3, [r7, #20]
 8009e96:	68fb      	ldr	r3, [r7, #12]
 8009e98:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8009e9c:	b2db      	uxtb	r3, r3
 8009e9e:	2b20      	cmp	r3, #32
 8009ea0:	f040 808c 	bne.w	8009fbc <HAL_UART_Receive+0x13a>
 8009ea4:	68bb      	ldr	r3, [r7, #8]
 8009ea6:	2b00      	cmp	r3, #0
 8009ea8:	d002      	beq.n	8009eb0 <HAL_UART_Receive+0x2e>
 8009eaa:	88fb      	ldrh	r3, [r7, #6]
 8009eac:	2b00      	cmp	r3, #0
 8009eae:	d101      	bne.n	8009eb4 <HAL_UART_Receive+0x32>
 8009eb0:	2301      	movs	r3, #1
 8009eb2:	e084      	b.n	8009fbe <HAL_UART_Receive+0x13c>
 8009eb4:	68fb      	ldr	r3, [r7, #12]
 8009eb6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8009eba:	2b01      	cmp	r3, #1
 8009ebc:	d101      	bne.n	8009ec2 <HAL_UART_Receive+0x40>
 8009ebe:	2302      	movs	r3, #2
 8009ec0:	e07d      	b.n	8009fbe <HAL_UART_Receive+0x13c>
 8009ec2:	68fb      	ldr	r3, [r7, #12]
 8009ec4:	2201      	movs	r2, #1
 8009ec6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009eca:	68fb      	ldr	r3, [r7, #12]
 8009ecc:	2200      	movs	r2, #0
 8009ece:	641a      	str	r2, [r3, #64]	; 0x40
 8009ed0:	68fb      	ldr	r3, [r7, #12]
 8009ed2:	2222      	movs	r2, #34	; 0x22
 8009ed4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009ed8:	68fb      	ldr	r3, [r7, #12]
 8009eda:	2200      	movs	r2, #0
 8009edc:	631a      	str	r2, [r3, #48]	; 0x30
 8009ede:	f7fb fad5 	bl	800548c <HAL_GetTick>
 8009ee2:	6178      	str	r0, [r7, #20]
 8009ee4:	68fb      	ldr	r3, [r7, #12]
 8009ee6:	88fa      	ldrh	r2, [r7, #6]
 8009ee8:	859a      	strh	r2, [r3, #44]	; 0x2c
 8009eea:	68fb      	ldr	r3, [r7, #12]
 8009eec:	88fa      	ldrh	r2, [r7, #6]
 8009eee:	85da      	strh	r2, [r3, #46]	; 0x2e
 8009ef0:	68fb      	ldr	r3, [r7, #12]
 8009ef2:	689b      	ldr	r3, [r3, #8]
 8009ef4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009ef8:	d108      	bne.n	8009f0c <HAL_UART_Receive+0x8a>
 8009efa:	68fb      	ldr	r3, [r7, #12]
 8009efc:	691b      	ldr	r3, [r3, #16]
 8009efe:	2b00      	cmp	r3, #0
 8009f00:	d104      	bne.n	8009f0c <HAL_UART_Receive+0x8a>
 8009f02:	2300      	movs	r3, #0
 8009f04:	61fb      	str	r3, [r7, #28]
 8009f06:	68bb      	ldr	r3, [r7, #8]
 8009f08:	61bb      	str	r3, [r7, #24]
 8009f0a:	e003      	b.n	8009f14 <HAL_UART_Receive+0x92>
 8009f0c:	68bb      	ldr	r3, [r7, #8]
 8009f0e:	61fb      	str	r3, [r7, #28]
 8009f10:	2300      	movs	r3, #0
 8009f12:	61bb      	str	r3, [r7, #24]
 8009f14:	68fb      	ldr	r3, [r7, #12]
 8009f16:	2200      	movs	r2, #0
 8009f18:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009f1c:	e043      	b.n	8009fa6 <HAL_UART_Receive+0x124>
 8009f1e:	683b      	ldr	r3, [r7, #0]
 8009f20:	9300      	str	r3, [sp, #0]
 8009f22:	697b      	ldr	r3, [r7, #20]
 8009f24:	2200      	movs	r2, #0
 8009f26:	2120      	movs	r1, #32
 8009f28:	68f8      	ldr	r0, [r7, #12]
 8009f2a:	f000 fb2b 	bl	800a584 <UART_WaitOnFlagUntilTimeout>
 8009f2e:	4603      	mov	r3, r0
 8009f30:	2b00      	cmp	r3, #0
 8009f32:	d001      	beq.n	8009f38 <HAL_UART_Receive+0xb6>
 8009f34:	2303      	movs	r3, #3
 8009f36:	e042      	b.n	8009fbe <HAL_UART_Receive+0x13c>
 8009f38:	69fb      	ldr	r3, [r7, #28]
 8009f3a:	2b00      	cmp	r3, #0
 8009f3c:	d10c      	bne.n	8009f58 <HAL_UART_Receive+0xd6>
 8009f3e:	68fb      	ldr	r3, [r7, #12]
 8009f40:	681b      	ldr	r3, [r3, #0]
 8009f42:	685b      	ldr	r3, [r3, #4]
 8009f44:	b29b      	uxth	r3, r3
 8009f46:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009f4a:	b29a      	uxth	r2, r3
 8009f4c:	69bb      	ldr	r3, [r7, #24]
 8009f4e:	801a      	strh	r2, [r3, #0]
 8009f50:	69bb      	ldr	r3, [r7, #24]
 8009f52:	3302      	adds	r3, #2
 8009f54:	61bb      	str	r3, [r7, #24]
 8009f56:	e01f      	b.n	8009f98 <HAL_UART_Receive+0x116>
 8009f58:	68fb      	ldr	r3, [r7, #12]
 8009f5a:	689b      	ldr	r3, [r3, #8]
 8009f5c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009f60:	d007      	beq.n	8009f72 <HAL_UART_Receive+0xf0>
 8009f62:	68fb      	ldr	r3, [r7, #12]
 8009f64:	689b      	ldr	r3, [r3, #8]
 8009f66:	2b00      	cmp	r3, #0
 8009f68:	d10a      	bne.n	8009f80 <HAL_UART_Receive+0xfe>
 8009f6a:	68fb      	ldr	r3, [r7, #12]
 8009f6c:	691b      	ldr	r3, [r3, #16]
 8009f6e:	2b00      	cmp	r3, #0
 8009f70:	d106      	bne.n	8009f80 <HAL_UART_Receive+0xfe>
 8009f72:	68fb      	ldr	r3, [r7, #12]
 8009f74:	681b      	ldr	r3, [r3, #0]
 8009f76:	685b      	ldr	r3, [r3, #4]
 8009f78:	b2da      	uxtb	r2, r3
 8009f7a:	69fb      	ldr	r3, [r7, #28]
 8009f7c:	701a      	strb	r2, [r3, #0]
 8009f7e:	e008      	b.n	8009f92 <HAL_UART_Receive+0x110>
 8009f80:	68fb      	ldr	r3, [r7, #12]
 8009f82:	681b      	ldr	r3, [r3, #0]
 8009f84:	685b      	ldr	r3, [r3, #4]
 8009f86:	b2db      	uxtb	r3, r3
 8009f88:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009f8c:	b2da      	uxtb	r2, r3
 8009f8e:	69fb      	ldr	r3, [r7, #28]
 8009f90:	701a      	strb	r2, [r3, #0]
 8009f92:	69fb      	ldr	r3, [r7, #28]
 8009f94:	3301      	adds	r3, #1
 8009f96:	61fb      	str	r3, [r7, #28]
 8009f98:	68fb      	ldr	r3, [r7, #12]
 8009f9a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8009f9c:	b29b      	uxth	r3, r3
 8009f9e:	3b01      	subs	r3, #1
 8009fa0:	b29a      	uxth	r2, r3
 8009fa2:	68fb      	ldr	r3, [r7, #12]
 8009fa4:	85da      	strh	r2, [r3, #46]	; 0x2e
 8009fa6:	68fb      	ldr	r3, [r7, #12]
 8009fa8:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8009faa:	b29b      	uxth	r3, r3
 8009fac:	2b00      	cmp	r3, #0
 8009fae:	d1b6      	bne.n	8009f1e <HAL_UART_Receive+0x9c>
 8009fb0:	68fb      	ldr	r3, [r7, #12]
 8009fb2:	2220      	movs	r2, #32
 8009fb4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009fb8:	2300      	movs	r3, #0
 8009fba:	e000      	b.n	8009fbe <HAL_UART_Receive+0x13c>
 8009fbc:	2302      	movs	r3, #2
 8009fbe:	4618      	mov	r0, r3
 8009fc0:	3720      	adds	r7, #32
 8009fc2:	46bd      	mov	sp, r7
 8009fc4:	bd80      	pop	{r7, pc}

08009fc6 <HAL_UART_Receive_IT>:
 8009fc6:	b580      	push	{r7, lr}
 8009fc8:	b084      	sub	sp, #16
 8009fca:	af00      	add	r7, sp, #0
 8009fcc:	60f8      	str	r0, [r7, #12]
 8009fce:	60b9      	str	r1, [r7, #8]
 8009fd0:	4613      	mov	r3, r2
 8009fd2:	80fb      	strh	r3, [r7, #6]
 8009fd4:	68fb      	ldr	r3, [r7, #12]
 8009fd6:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8009fda:	b2db      	uxtb	r3, r3
 8009fdc:	2b20      	cmp	r3, #32
 8009fde:	d11d      	bne.n	800a01c <HAL_UART_Receive_IT+0x56>
 8009fe0:	68bb      	ldr	r3, [r7, #8]
 8009fe2:	2b00      	cmp	r3, #0
 8009fe4:	d002      	beq.n	8009fec <HAL_UART_Receive_IT+0x26>
 8009fe6:	88fb      	ldrh	r3, [r7, #6]
 8009fe8:	2b00      	cmp	r3, #0
 8009fea:	d101      	bne.n	8009ff0 <HAL_UART_Receive_IT+0x2a>
 8009fec:	2301      	movs	r3, #1
 8009fee:	e016      	b.n	800a01e <HAL_UART_Receive_IT+0x58>
 8009ff0:	68fb      	ldr	r3, [r7, #12]
 8009ff2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8009ff6:	2b01      	cmp	r3, #1
 8009ff8:	d101      	bne.n	8009ffe <HAL_UART_Receive_IT+0x38>
 8009ffa:	2302      	movs	r3, #2
 8009ffc:	e00f      	b.n	800a01e <HAL_UART_Receive_IT+0x58>
 8009ffe:	68fb      	ldr	r3, [r7, #12]
 800a000:	2201      	movs	r2, #1
 800a002:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a006:	68fb      	ldr	r3, [r7, #12]
 800a008:	2200      	movs	r2, #0
 800a00a:	631a      	str	r2, [r3, #48]	; 0x30
 800a00c:	88fb      	ldrh	r3, [r7, #6]
 800a00e:	461a      	mov	r2, r3
 800a010:	68b9      	ldr	r1, [r7, #8]
 800a012:	68f8      	ldr	r0, [r7, #12]
 800a014:	f000 fb24 	bl	800a660 <UART_Start_Receive_IT>
 800a018:	4603      	mov	r3, r0
 800a01a:	e000      	b.n	800a01e <HAL_UART_Receive_IT+0x58>
 800a01c:	2302      	movs	r3, #2
 800a01e:	4618      	mov	r0, r3
 800a020:	3710      	adds	r7, #16
 800a022:	46bd      	mov	sp, r7
 800a024:	bd80      	pop	{r7, pc}
	...

0800a028 <HAL_UART_IRQHandler>:
 800a028:	b580      	push	{r7, lr}
 800a02a:	b0ba      	sub	sp, #232	; 0xe8
 800a02c:	af00      	add	r7, sp, #0
 800a02e:	6078      	str	r0, [r7, #4]
 800a030:	687b      	ldr	r3, [r7, #4]
 800a032:	681b      	ldr	r3, [r3, #0]
 800a034:	681b      	ldr	r3, [r3, #0]
 800a036:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800a03a:	687b      	ldr	r3, [r7, #4]
 800a03c:	681b      	ldr	r3, [r3, #0]
 800a03e:	68db      	ldr	r3, [r3, #12]
 800a040:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800a044:	687b      	ldr	r3, [r7, #4]
 800a046:	681b      	ldr	r3, [r3, #0]
 800a048:	695b      	ldr	r3, [r3, #20]
 800a04a:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800a04e:	2300      	movs	r3, #0
 800a050:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800a054:	2300      	movs	r3, #0
 800a056:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800a05a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a05e:	f003 030f 	and.w	r3, r3, #15
 800a062:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800a066:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800a06a:	2b00      	cmp	r3, #0
 800a06c:	d10f      	bne.n	800a08e <HAL_UART_IRQHandler+0x66>
 800a06e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a072:	f003 0320 	and.w	r3, r3, #32
 800a076:	2b00      	cmp	r3, #0
 800a078:	d009      	beq.n	800a08e <HAL_UART_IRQHandler+0x66>
 800a07a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a07e:	f003 0320 	and.w	r3, r3, #32
 800a082:	2b00      	cmp	r3, #0
 800a084:	d003      	beq.n	800a08e <HAL_UART_IRQHandler+0x66>
 800a086:	6878      	ldr	r0, [r7, #4]
 800a088:	f000 fc07 	bl	800a89a <UART_Receive_IT>
 800a08c:	e256      	b.n	800a53c <HAL_UART_IRQHandler+0x514>
 800a08e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800a092:	2b00      	cmp	r3, #0
 800a094:	f000 80de 	beq.w	800a254 <HAL_UART_IRQHandler+0x22c>
 800a098:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800a09c:	f003 0301 	and.w	r3, r3, #1
 800a0a0:	2b00      	cmp	r3, #0
 800a0a2:	d106      	bne.n	800a0b2 <HAL_UART_IRQHandler+0x8a>
 800a0a4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a0a8:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800a0ac:	2b00      	cmp	r3, #0
 800a0ae:	f000 80d1 	beq.w	800a254 <HAL_UART_IRQHandler+0x22c>
 800a0b2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a0b6:	f003 0301 	and.w	r3, r3, #1
 800a0ba:	2b00      	cmp	r3, #0
 800a0bc:	d00b      	beq.n	800a0d6 <HAL_UART_IRQHandler+0xae>
 800a0be:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a0c2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a0c6:	2b00      	cmp	r3, #0
 800a0c8:	d005      	beq.n	800a0d6 <HAL_UART_IRQHandler+0xae>
 800a0ca:	687b      	ldr	r3, [r7, #4]
 800a0cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a0ce:	f043 0201 	orr.w	r2, r3, #1
 800a0d2:	687b      	ldr	r3, [r7, #4]
 800a0d4:	641a      	str	r2, [r3, #64]	; 0x40
 800a0d6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a0da:	f003 0304 	and.w	r3, r3, #4
 800a0de:	2b00      	cmp	r3, #0
 800a0e0:	d00b      	beq.n	800a0fa <HAL_UART_IRQHandler+0xd2>
 800a0e2:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800a0e6:	f003 0301 	and.w	r3, r3, #1
 800a0ea:	2b00      	cmp	r3, #0
 800a0ec:	d005      	beq.n	800a0fa <HAL_UART_IRQHandler+0xd2>
 800a0ee:	687b      	ldr	r3, [r7, #4]
 800a0f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a0f2:	f043 0202 	orr.w	r2, r3, #2
 800a0f6:	687b      	ldr	r3, [r7, #4]
 800a0f8:	641a      	str	r2, [r3, #64]	; 0x40
 800a0fa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a0fe:	f003 0302 	and.w	r3, r3, #2
 800a102:	2b00      	cmp	r3, #0
 800a104:	d00b      	beq.n	800a11e <HAL_UART_IRQHandler+0xf6>
 800a106:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800a10a:	f003 0301 	and.w	r3, r3, #1
 800a10e:	2b00      	cmp	r3, #0
 800a110:	d005      	beq.n	800a11e <HAL_UART_IRQHandler+0xf6>
 800a112:	687b      	ldr	r3, [r7, #4]
 800a114:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a116:	f043 0204 	orr.w	r2, r3, #4
 800a11a:	687b      	ldr	r3, [r7, #4]
 800a11c:	641a      	str	r2, [r3, #64]	; 0x40
 800a11e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a122:	f003 0308 	and.w	r3, r3, #8
 800a126:	2b00      	cmp	r3, #0
 800a128:	d011      	beq.n	800a14e <HAL_UART_IRQHandler+0x126>
 800a12a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a12e:	f003 0320 	and.w	r3, r3, #32
 800a132:	2b00      	cmp	r3, #0
 800a134:	d105      	bne.n	800a142 <HAL_UART_IRQHandler+0x11a>
 800a136:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800a13a:	f003 0301 	and.w	r3, r3, #1
 800a13e:	2b00      	cmp	r3, #0
 800a140:	d005      	beq.n	800a14e <HAL_UART_IRQHandler+0x126>
 800a142:	687b      	ldr	r3, [r7, #4]
 800a144:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a146:	f043 0208 	orr.w	r2, r3, #8
 800a14a:	687b      	ldr	r3, [r7, #4]
 800a14c:	641a      	str	r2, [r3, #64]	; 0x40
 800a14e:	687b      	ldr	r3, [r7, #4]
 800a150:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a152:	2b00      	cmp	r3, #0
 800a154:	f000 81ed 	beq.w	800a532 <HAL_UART_IRQHandler+0x50a>
 800a158:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a15c:	f003 0320 	and.w	r3, r3, #32
 800a160:	2b00      	cmp	r3, #0
 800a162:	d008      	beq.n	800a176 <HAL_UART_IRQHandler+0x14e>
 800a164:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a168:	f003 0320 	and.w	r3, r3, #32
 800a16c:	2b00      	cmp	r3, #0
 800a16e:	d002      	beq.n	800a176 <HAL_UART_IRQHandler+0x14e>
 800a170:	6878      	ldr	r0, [r7, #4]
 800a172:	f000 fb92 	bl	800a89a <UART_Receive_IT>
 800a176:	687b      	ldr	r3, [r7, #4]
 800a178:	681b      	ldr	r3, [r3, #0]
 800a17a:	695b      	ldr	r3, [r3, #20]
 800a17c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a180:	2b40      	cmp	r3, #64	; 0x40
 800a182:	bf0c      	ite	eq
 800a184:	2301      	moveq	r3, #1
 800a186:	2300      	movne	r3, #0
 800a188:	b2db      	uxtb	r3, r3
 800a18a:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800a18e:	687b      	ldr	r3, [r7, #4]
 800a190:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a192:	f003 0308 	and.w	r3, r3, #8
 800a196:	2b00      	cmp	r3, #0
 800a198:	d103      	bne.n	800a1a2 <HAL_UART_IRQHandler+0x17a>
 800a19a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800a19e:	2b00      	cmp	r3, #0
 800a1a0:	d04f      	beq.n	800a242 <HAL_UART_IRQHandler+0x21a>
 800a1a2:	6878      	ldr	r0, [r7, #4]
 800a1a4:	f000 fa9a 	bl	800a6dc <UART_EndRxTransfer>
 800a1a8:	687b      	ldr	r3, [r7, #4]
 800a1aa:	681b      	ldr	r3, [r3, #0]
 800a1ac:	695b      	ldr	r3, [r3, #20]
 800a1ae:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a1b2:	2b40      	cmp	r3, #64	; 0x40
 800a1b4:	d141      	bne.n	800a23a <HAL_UART_IRQHandler+0x212>
 800a1b6:	687b      	ldr	r3, [r7, #4]
 800a1b8:	681b      	ldr	r3, [r3, #0]
 800a1ba:	3314      	adds	r3, #20
 800a1bc:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800a1c0:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800a1c4:	e853 3f00 	ldrex	r3, [r3]
 800a1c8:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800a1cc:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800a1d0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a1d4:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800a1d8:	687b      	ldr	r3, [r7, #4]
 800a1da:	681b      	ldr	r3, [r3, #0]
 800a1dc:	3314      	adds	r3, #20
 800a1de:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 800a1e2:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800a1e6:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800a1ea:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 800a1ee:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 800a1f2:	e841 2300 	strex	r3, r2, [r1]
 800a1f6:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800a1fa:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800a1fe:	2b00      	cmp	r3, #0
 800a200:	d1d9      	bne.n	800a1b6 <HAL_UART_IRQHandler+0x18e>
 800a202:	687b      	ldr	r3, [r7, #4]
 800a204:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a206:	2b00      	cmp	r3, #0
 800a208:	d013      	beq.n	800a232 <HAL_UART_IRQHandler+0x20a>
 800a20a:	687b      	ldr	r3, [r7, #4]
 800a20c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a20e:	4a7d      	ldr	r2, [pc, #500]	; (800a404 <HAL_UART_IRQHandler+0x3dc>)
 800a210:	651a      	str	r2, [r3, #80]	; 0x50
 800a212:	687b      	ldr	r3, [r7, #4]
 800a214:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a216:	4618      	mov	r0, r3
 800a218:	f7fc f998 	bl	800654c <HAL_DMA_Abort_IT>
 800a21c:	4603      	mov	r3, r0
 800a21e:	2b00      	cmp	r3, #0
 800a220:	d016      	beq.n	800a250 <HAL_UART_IRQHandler+0x228>
 800a222:	687b      	ldr	r3, [r7, #4]
 800a224:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a226:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800a228:	687a      	ldr	r2, [r7, #4]
 800a22a:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800a22c:	4610      	mov	r0, r2
 800a22e:	4798      	blx	r3
 800a230:	e00e      	b.n	800a250 <HAL_UART_IRQHandler+0x228>
 800a232:	6878      	ldr	r0, [r7, #4]
 800a234:	f000 f990 	bl	800a558 <HAL_UART_ErrorCallback>
 800a238:	e00a      	b.n	800a250 <HAL_UART_IRQHandler+0x228>
 800a23a:	6878      	ldr	r0, [r7, #4]
 800a23c:	f000 f98c 	bl	800a558 <HAL_UART_ErrorCallback>
 800a240:	e006      	b.n	800a250 <HAL_UART_IRQHandler+0x228>
 800a242:	6878      	ldr	r0, [r7, #4]
 800a244:	f000 f988 	bl	800a558 <HAL_UART_ErrorCallback>
 800a248:	687b      	ldr	r3, [r7, #4]
 800a24a:	2200      	movs	r2, #0
 800a24c:	641a      	str	r2, [r3, #64]	; 0x40
 800a24e:	e170      	b.n	800a532 <HAL_UART_IRQHandler+0x50a>
 800a250:	bf00      	nop
 800a252:	e16e      	b.n	800a532 <HAL_UART_IRQHandler+0x50a>
 800a254:	687b      	ldr	r3, [r7, #4]
 800a256:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a258:	2b01      	cmp	r3, #1
 800a25a:	f040 814a 	bne.w	800a4f2 <HAL_UART_IRQHandler+0x4ca>
 800a25e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a262:	f003 0310 	and.w	r3, r3, #16
 800a266:	2b00      	cmp	r3, #0
 800a268:	f000 8143 	beq.w	800a4f2 <HAL_UART_IRQHandler+0x4ca>
 800a26c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a270:	f003 0310 	and.w	r3, r3, #16
 800a274:	2b00      	cmp	r3, #0
 800a276:	f000 813c 	beq.w	800a4f2 <HAL_UART_IRQHandler+0x4ca>
 800a27a:	2300      	movs	r3, #0
 800a27c:	60bb      	str	r3, [r7, #8]
 800a27e:	687b      	ldr	r3, [r7, #4]
 800a280:	681b      	ldr	r3, [r3, #0]
 800a282:	681b      	ldr	r3, [r3, #0]
 800a284:	60bb      	str	r3, [r7, #8]
 800a286:	687b      	ldr	r3, [r7, #4]
 800a288:	681b      	ldr	r3, [r3, #0]
 800a28a:	685b      	ldr	r3, [r3, #4]
 800a28c:	60bb      	str	r3, [r7, #8]
 800a28e:	68bb      	ldr	r3, [r7, #8]
 800a290:	687b      	ldr	r3, [r7, #4]
 800a292:	681b      	ldr	r3, [r3, #0]
 800a294:	695b      	ldr	r3, [r3, #20]
 800a296:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a29a:	2b40      	cmp	r3, #64	; 0x40
 800a29c:	f040 80b4 	bne.w	800a408 <HAL_UART_IRQHandler+0x3e0>
 800a2a0:	687b      	ldr	r3, [r7, #4]
 800a2a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a2a4:	681b      	ldr	r3, [r3, #0]
 800a2a6:	685b      	ldr	r3, [r3, #4]
 800a2a8:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 800a2ac:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 800a2b0:	2b00      	cmp	r3, #0
 800a2b2:	f000 8140 	beq.w	800a536 <HAL_UART_IRQHandler+0x50e>
 800a2b6:	687b      	ldr	r3, [r7, #4]
 800a2b8:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800a2ba:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800a2be:	429a      	cmp	r2, r3
 800a2c0:	f080 8139 	bcs.w	800a536 <HAL_UART_IRQHandler+0x50e>
 800a2c4:	687b      	ldr	r3, [r7, #4]
 800a2c6:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800a2ca:	85da      	strh	r2, [r3, #46]	; 0x2e
 800a2cc:	687b      	ldr	r3, [r7, #4]
 800a2ce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a2d0:	69db      	ldr	r3, [r3, #28]
 800a2d2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a2d6:	f000 8088 	beq.w	800a3ea <HAL_UART_IRQHandler+0x3c2>
 800a2da:	687b      	ldr	r3, [r7, #4]
 800a2dc:	681b      	ldr	r3, [r3, #0]
 800a2de:	330c      	adds	r3, #12
 800a2e0:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800a2e4:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800a2e8:	e853 3f00 	ldrex	r3, [r3]
 800a2ec:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800a2f0:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800a2f4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800a2f8:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800a2fc:	687b      	ldr	r3, [r7, #4]
 800a2fe:	681b      	ldr	r3, [r3, #0]
 800a300:	330c      	adds	r3, #12
 800a302:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 800a306:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800a30a:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800a30e:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800a312:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800a316:	e841 2300 	strex	r3, r2, [r1]
 800a31a:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800a31e:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800a322:	2b00      	cmp	r3, #0
 800a324:	d1d9      	bne.n	800a2da <HAL_UART_IRQHandler+0x2b2>
 800a326:	687b      	ldr	r3, [r7, #4]
 800a328:	681b      	ldr	r3, [r3, #0]
 800a32a:	3314      	adds	r3, #20
 800a32c:	677b      	str	r3, [r7, #116]	; 0x74
 800a32e:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800a330:	e853 3f00 	ldrex	r3, [r3]
 800a334:	673b      	str	r3, [r7, #112]	; 0x70
 800a336:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800a338:	f023 0301 	bic.w	r3, r3, #1
 800a33c:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800a340:	687b      	ldr	r3, [r7, #4]
 800a342:	681b      	ldr	r3, [r3, #0]
 800a344:	3314      	adds	r3, #20
 800a346:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800a34a:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 800a34e:	67fb      	str	r3, [r7, #124]	; 0x7c
 800a350:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800a352:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800a356:	e841 2300 	strex	r3, r2, [r1]
 800a35a:	67bb      	str	r3, [r7, #120]	; 0x78
 800a35c:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800a35e:	2b00      	cmp	r3, #0
 800a360:	d1e1      	bne.n	800a326 <HAL_UART_IRQHandler+0x2fe>
 800a362:	687b      	ldr	r3, [r7, #4]
 800a364:	681b      	ldr	r3, [r3, #0]
 800a366:	3314      	adds	r3, #20
 800a368:	663b      	str	r3, [r7, #96]	; 0x60
 800a36a:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800a36c:	e853 3f00 	ldrex	r3, [r3]
 800a370:	65fb      	str	r3, [r7, #92]	; 0x5c
 800a372:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800a374:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a378:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800a37c:	687b      	ldr	r3, [r7, #4]
 800a37e:	681b      	ldr	r3, [r3, #0]
 800a380:	3314      	adds	r3, #20
 800a382:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800a386:	66fa      	str	r2, [r7, #108]	; 0x6c
 800a388:	66bb      	str	r3, [r7, #104]	; 0x68
 800a38a:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800a38c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800a38e:	e841 2300 	strex	r3, r2, [r1]
 800a392:	667b      	str	r3, [r7, #100]	; 0x64
 800a394:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800a396:	2b00      	cmp	r3, #0
 800a398:	d1e3      	bne.n	800a362 <HAL_UART_IRQHandler+0x33a>
 800a39a:	687b      	ldr	r3, [r7, #4]
 800a39c:	2220      	movs	r2, #32
 800a39e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a3a2:	687b      	ldr	r3, [r7, #4]
 800a3a4:	2200      	movs	r2, #0
 800a3a6:	631a      	str	r2, [r3, #48]	; 0x30
 800a3a8:	687b      	ldr	r3, [r7, #4]
 800a3aa:	681b      	ldr	r3, [r3, #0]
 800a3ac:	330c      	adds	r3, #12
 800a3ae:	64fb      	str	r3, [r7, #76]	; 0x4c
 800a3b0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800a3b2:	e853 3f00 	ldrex	r3, [r3]
 800a3b6:	64bb      	str	r3, [r7, #72]	; 0x48
 800a3b8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800a3ba:	f023 0310 	bic.w	r3, r3, #16
 800a3be:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800a3c2:	687b      	ldr	r3, [r7, #4]
 800a3c4:	681b      	ldr	r3, [r3, #0]
 800a3c6:	330c      	adds	r3, #12
 800a3c8:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 800a3cc:	65ba      	str	r2, [r7, #88]	; 0x58
 800a3ce:	657b      	str	r3, [r7, #84]	; 0x54
 800a3d0:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800a3d2:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800a3d4:	e841 2300 	strex	r3, r2, [r1]
 800a3d8:	653b      	str	r3, [r7, #80]	; 0x50
 800a3da:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800a3dc:	2b00      	cmp	r3, #0
 800a3de:	d1e3      	bne.n	800a3a8 <HAL_UART_IRQHandler+0x380>
 800a3e0:	687b      	ldr	r3, [r7, #4]
 800a3e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a3e4:	4618      	mov	r0, r3
 800a3e6:	f7fc f841 	bl	800646c <HAL_DMA_Abort>
 800a3ea:	687b      	ldr	r3, [r7, #4]
 800a3ec:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800a3ee:	687b      	ldr	r3, [r7, #4]
 800a3f0:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800a3f2:	b29b      	uxth	r3, r3
 800a3f4:	1ad3      	subs	r3, r2, r3
 800a3f6:	b29b      	uxth	r3, r3
 800a3f8:	4619      	mov	r1, r3
 800a3fa:	6878      	ldr	r0, [r7, #4]
 800a3fc:	f000 f8b6 	bl	800a56c <HAL_UARTEx_RxEventCallback>
 800a400:	e099      	b.n	800a536 <HAL_UART_IRQHandler+0x50e>
 800a402:	bf00      	nop
 800a404:	0800a7a3 	.word	0x0800a7a3
 800a408:	687b      	ldr	r3, [r7, #4]
 800a40a:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800a40c:	687b      	ldr	r3, [r7, #4]
 800a40e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800a410:	b29b      	uxth	r3, r3
 800a412:	1ad3      	subs	r3, r2, r3
 800a414:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 800a418:	687b      	ldr	r3, [r7, #4]
 800a41a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800a41c:	b29b      	uxth	r3, r3
 800a41e:	2b00      	cmp	r3, #0
 800a420:	f000 808b 	beq.w	800a53a <HAL_UART_IRQHandler+0x512>
 800a424:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800a428:	2b00      	cmp	r3, #0
 800a42a:	f000 8086 	beq.w	800a53a <HAL_UART_IRQHandler+0x512>
 800a42e:	687b      	ldr	r3, [r7, #4]
 800a430:	681b      	ldr	r3, [r3, #0]
 800a432:	330c      	adds	r3, #12
 800a434:	63bb      	str	r3, [r7, #56]	; 0x38
 800a436:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a438:	e853 3f00 	ldrex	r3, [r3]
 800a43c:	637b      	str	r3, [r7, #52]	; 0x34
 800a43e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a440:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800a444:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800a448:	687b      	ldr	r3, [r7, #4]
 800a44a:	681b      	ldr	r3, [r3, #0]
 800a44c:	330c      	adds	r3, #12
 800a44e:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 800a452:	647a      	str	r2, [r7, #68]	; 0x44
 800a454:	643b      	str	r3, [r7, #64]	; 0x40
 800a456:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800a458:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800a45a:	e841 2300 	strex	r3, r2, [r1]
 800a45e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800a460:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800a462:	2b00      	cmp	r3, #0
 800a464:	d1e3      	bne.n	800a42e <HAL_UART_IRQHandler+0x406>
 800a466:	687b      	ldr	r3, [r7, #4]
 800a468:	681b      	ldr	r3, [r3, #0]
 800a46a:	3314      	adds	r3, #20
 800a46c:	627b      	str	r3, [r7, #36]	; 0x24
 800a46e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a470:	e853 3f00 	ldrex	r3, [r3]
 800a474:	623b      	str	r3, [r7, #32]
 800a476:	6a3b      	ldr	r3, [r7, #32]
 800a478:	f023 0301 	bic.w	r3, r3, #1
 800a47c:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800a480:	687b      	ldr	r3, [r7, #4]
 800a482:	681b      	ldr	r3, [r3, #0]
 800a484:	3314      	adds	r3, #20
 800a486:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800a48a:	633a      	str	r2, [r7, #48]	; 0x30
 800a48c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a48e:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800a490:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800a492:	e841 2300 	strex	r3, r2, [r1]
 800a496:	62bb      	str	r3, [r7, #40]	; 0x28
 800a498:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a49a:	2b00      	cmp	r3, #0
 800a49c:	d1e3      	bne.n	800a466 <HAL_UART_IRQHandler+0x43e>
 800a49e:	687b      	ldr	r3, [r7, #4]
 800a4a0:	2220      	movs	r2, #32
 800a4a2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a4a6:	687b      	ldr	r3, [r7, #4]
 800a4a8:	2200      	movs	r2, #0
 800a4aa:	631a      	str	r2, [r3, #48]	; 0x30
 800a4ac:	687b      	ldr	r3, [r7, #4]
 800a4ae:	681b      	ldr	r3, [r3, #0]
 800a4b0:	330c      	adds	r3, #12
 800a4b2:	613b      	str	r3, [r7, #16]
 800a4b4:	693b      	ldr	r3, [r7, #16]
 800a4b6:	e853 3f00 	ldrex	r3, [r3]
 800a4ba:	60fb      	str	r3, [r7, #12]
 800a4bc:	68fb      	ldr	r3, [r7, #12]
 800a4be:	f023 0310 	bic.w	r3, r3, #16
 800a4c2:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800a4c6:	687b      	ldr	r3, [r7, #4]
 800a4c8:	681b      	ldr	r3, [r3, #0]
 800a4ca:	330c      	adds	r3, #12
 800a4cc:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 800a4d0:	61fa      	str	r2, [r7, #28]
 800a4d2:	61bb      	str	r3, [r7, #24]
 800a4d4:	69b9      	ldr	r1, [r7, #24]
 800a4d6:	69fa      	ldr	r2, [r7, #28]
 800a4d8:	e841 2300 	strex	r3, r2, [r1]
 800a4dc:	617b      	str	r3, [r7, #20]
 800a4de:	697b      	ldr	r3, [r7, #20]
 800a4e0:	2b00      	cmp	r3, #0
 800a4e2:	d1e3      	bne.n	800a4ac <HAL_UART_IRQHandler+0x484>
 800a4e4:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800a4e8:	4619      	mov	r1, r3
 800a4ea:	6878      	ldr	r0, [r7, #4]
 800a4ec:	f000 f83e 	bl	800a56c <HAL_UARTEx_RxEventCallback>
 800a4f0:	e023      	b.n	800a53a <HAL_UART_IRQHandler+0x512>
 800a4f2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a4f6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800a4fa:	2b00      	cmp	r3, #0
 800a4fc:	d009      	beq.n	800a512 <HAL_UART_IRQHandler+0x4ea>
 800a4fe:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a502:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800a506:	2b00      	cmp	r3, #0
 800a508:	d003      	beq.n	800a512 <HAL_UART_IRQHandler+0x4ea>
 800a50a:	6878      	ldr	r0, [r7, #4]
 800a50c:	f000 f95d 	bl	800a7ca <UART_Transmit_IT>
 800a510:	e014      	b.n	800a53c <HAL_UART_IRQHandler+0x514>
 800a512:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a516:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a51a:	2b00      	cmp	r3, #0
 800a51c:	d00e      	beq.n	800a53c <HAL_UART_IRQHandler+0x514>
 800a51e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a522:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a526:	2b00      	cmp	r3, #0
 800a528:	d008      	beq.n	800a53c <HAL_UART_IRQHandler+0x514>
 800a52a:	6878      	ldr	r0, [r7, #4]
 800a52c:	f000 f99d 	bl	800a86a <UART_EndTransmit_IT>
 800a530:	e004      	b.n	800a53c <HAL_UART_IRQHandler+0x514>
 800a532:	bf00      	nop
 800a534:	e002      	b.n	800a53c <HAL_UART_IRQHandler+0x514>
 800a536:	bf00      	nop
 800a538:	e000      	b.n	800a53c <HAL_UART_IRQHandler+0x514>
 800a53a:	bf00      	nop
 800a53c:	37e8      	adds	r7, #232	; 0xe8
 800a53e:	46bd      	mov	sp, r7
 800a540:	bd80      	pop	{r7, pc}
 800a542:	bf00      	nop

0800a544 <HAL_UART_TxCpltCallback>:
 800a544:	b480      	push	{r7}
 800a546:	b083      	sub	sp, #12
 800a548:	af00      	add	r7, sp, #0
 800a54a:	6078      	str	r0, [r7, #4]
 800a54c:	bf00      	nop
 800a54e:	370c      	adds	r7, #12
 800a550:	46bd      	mov	sp, r7
 800a552:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a556:	4770      	bx	lr

0800a558 <HAL_UART_ErrorCallback>:
 800a558:	b480      	push	{r7}
 800a55a:	b083      	sub	sp, #12
 800a55c:	af00      	add	r7, sp, #0
 800a55e:	6078      	str	r0, [r7, #4]
 800a560:	bf00      	nop
 800a562:	370c      	adds	r7, #12
 800a564:	46bd      	mov	sp, r7
 800a566:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a56a:	4770      	bx	lr

0800a56c <HAL_UARTEx_RxEventCallback>:
 800a56c:	b480      	push	{r7}
 800a56e:	b083      	sub	sp, #12
 800a570:	af00      	add	r7, sp, #0
 800a572:	6078      	str	r0, [r7, #4]
 800a574:	460b      	mov	r3, r1
 800a576:	807b      	strh	r3, [r7, #2]
 800a578:	bf00      	nop
 800a57a:	370c      	adds	r7, #12
 800a57c:	46bd      	mov	sp, r7
 800a57e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a582:	4770      	bx	lr

0800a584 <UART_WaitOnFlagUntilTimeout>:
 800a584:	b580      	push	{r7, lr}
 800a586:	b090      	sub	sp, #64	; 0x40
 800a588:	af00      	add	r7, sp, #0
 800a58a:	60f8      	str	r0, [r7, #12]
 800a58c:	60b9      	str	r1, [r7, #8]
 800a58e:	603b      	str	r3, [r7, #0]
 800a590:	4613      	mov	r3, r2
 800a592:	71fb      	strb	r3, [r7, #7]
 800a594:	e050      	b.n	800a638 <UART_WaitOnFlagUntilTimeout+0xb4>
 800a596:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800a598:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a59c:	d04c      	beq.n	800a638 <UART_WaitOnFlagUntilTimeout+0xb4>
 800a59e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800a5a0:	2b00      	cmp	r3, #0
 800a5a2:	d007      	beq.n	800a5b4 <UART_WaitOnFlagUntilTimeout+0x30>
 800a5a4:	f7fa ff72 	bl	800548c <HAL_GetTick>
 800a5a8:	4602      	mov	r2, r0
 800a5aa:	683b      	ldr	r3, [r7, #0]
 800a5ac:	1ad3      	subs	r3, r2, r3
 800a5ae:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800a5b0:	429a      	cmp	r2, r3
 800a5b2:	d241      	bcs.n	800a638 <UART_WaitOnFlagUntilTimeout+0xb4>
 800a5b4:	68fb      	ldr	r3, [r7, #12]
 800a5b6:	681b      	ldr	r3, [r3, #0]
 800a5b8:	330c      	adds	r3, #12
 800a5ba:	62bb      	str	r3, [r7, #40]	; 0x28
 800a5bc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a5be:	e853 3f00 	ldrex	r3, [r3]
 800a5c2:	627b      	str	r3, [r7, #36]	; 0x24
 800a5c4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a5c6:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800a5ca:	63fb      	str	r3, [r7, #60]	; 0x3c
 800a5cc:	68fb      	ldr	r3, [r7, #12]
 800a5ce:	681b      	ldr	r3, [r3, #0]
 800a5d0:	330c      	adds	r3, #12
 800a5d2:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800a5d4:	637a      	str	r2, [r7, #52]	; 0x34
 800a5d6:	633b      	str	r3, [r7, #48]	; 0x30
 800a5d8:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800a5da:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800a5dc:	e841 2300 	strex	r3, r2, [r1]
 800a5e0:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a5e2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a5e4:	2b00      	cmp	r3, #0
 800a5e6:	d1e5      	bne.n	800a5b4 <UART_WaitOnFlagUntilTimeout+0x30>
 800a5e8:	68fb      	ldr	r3, [r7, #12]
 800a5ea:	681b      	ldr	r3, [r3, #0]
 800a5ec:	3314      	adds	r3, #20
 800a5ee:	617b      	str	r3, [r7, #20]
 800a5f0:	697b      	ldr	r3, [r7, #20]
 800a5f2:	e853 3f00 	ldrex	r3, [r3]
 800a5f6:	613b      	str	r3, [r7, #16]
 800a5f8:	693b      	ldr	r3, [r7, #16]
 800a5fa:	f023 0301 	bic.w	r3, r3, #1
 800a5fe:	63bb      	str	r3, [r7, #56]	; 0x38
 800a600:	68fb      	ldr	r3, [r7, #12]
 800a602:	681b      	ldr	r3, [r3, #0]
 800a604:	3314      	adds	r3, #20
 800a606:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800a608:	623a      	str	r2, [r7, #32]
 800a60a:	61fb      	str	r3, [r7, #28]
 800a60c:	69f9      	ldr	r1, [r7, #28]
 800a60e:	6a3a      	ldr	r2, [r7, #32]
 800a610:	e841 2300 	strex	r3, r2, [r1]
 800a614:	61bb      	str	r3, [r7, #24]
 800a616:	69bb      	ldr	r3, [r7, #24]
 800a618:	2b00      	cmp	r3, #0
 800a61a:	d1e5      	bne.n	800a5e8 <UART_WaitOnFlagUntilTimeout+0x64>
 800a61c:	68fb      	ldr	r3, [r7, #12]
 800a61e:	2220      	movs	r2, #32
 800a620:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a624:	68fb      	ldr	r3, [r7, #12]
 800a626:	2220      	movs	r2, #32
 800a628:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a62c:	68fb      	ldr	r3, [r7, #12]
 800a62e:	2200      	movs	r2, #0
 800a630:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a634:	2303      	movs	r3, #3
 800a636:	e00f      	b.n	800a658 <UART_WaitOnFlagUntilTimeout+0xd4>
 800a638:	68fb      	ldr	r3, [r7, #12]
 800a63a:	681b      	ldr	r3, [r3, #0]
 800a63c:	681a      	ldr	r2, [r3, #0]
 800a63e:	68bb      	ldr	r3, [r7, #8]
 800a640:	4013      	ands	r3, r2
 800a642:	68ba      	ldr	r2, [r7, #8]
 800a644:	429a      	cmp	r2, r3
 800a646:	bf0c      	ite	eq
 800a648:	2301      	moveq	r3, #1
 800a64a:	2300      	movne	r3, #0
 800a64c:	b2db      	uxtb	r3, r3
 800a64e:	461a      	mov	r2, r3
 800a650:	79fb      	ldrb	r3, [r7, #7]
 800a652:	429a      	cmp	r2, r3
 800a654:	d09f      	beq.n	800a596 <UART_WaitOnFlagUntilTimeout+0x12>
 800a656:	2300      	movs	r3, #0
 800a658:	4618      	mov	r0, r3
 800a65a:	3740      	adds	r7, #64	; 0x40
 800a65c:	46bd      	mov	sp, r7
 800a65e:	bd80      	pop	{r7, pc}

0800a660 <UART_Start_Receive_IT>:
 800a660:	b480      	push	{r7}
 800a662:	b085      	sub	sp, #20
 800a664:	af00      	add	r7, sp, #0
 800a666:	60f8      	str	r0, [r7, #12]
 800a668:	60b9      	str	r1, [r7, #8]
 800a66a:	4613      	mov	r3, r2
 800a66c:	80fb      	strh	r3, [r7, #6]
 800a66e:	68fb      	ldr	r3, [r7, #12]
 800a670:	68ba      	ldr	r2, [r7, #8]
 800a672:	629a      	str	r2, [r3, #40]	; 0x28
 800a674:	68fb      	ldr	r3, [r7, #12]
 800a676:	88fa      	ldrh	r2, [r7, #6]
 800a678:	859a      	strh	r2, [r3, #44]	; 0x2c
 800a67a:	68fb      	ldr	r3, [r7, #12]
 800a67c:	88fa      	ldrh	r2, [r7, #6]
 800a67e:	85da      	strh	r2, [r3, #46]	; 0x2e
 800a680:	68fb      	ldr	r3, [r7, #12]
 800a682:	2200      	movs	r2, #0
 800a684:	641a      	str	r2, [r3, #64]	; 0x40
 800a686:	68fb      	ldr	r3, [r7, #12]
 800a688:	2222      	movs	r2, #34	; 0x22
 800a68a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a68e:	68fb      	ldr	r3, [r7, #12]
 800a690:	2200      	movs	r2, #0
 800a692:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a696:	68fb      	ldr	r3, [r7, #12]
 800a698:	691b      	ldr	r3, [r3, #16]
 800a69a:	2b00      	cmp	r3, #0
 800a69c:	d007      	beq.n	800a6ae <UART_Start_Receive_IT+0x4e>
 800a69e:	68fb      	ldr	r3, [r7, #12]
 800a6a0:	681b      	ldr	r3, [r3, #0]
 800a6a2:	68da      	ldr	r2, [r3, #12]
 800a6a4:	68fb      	ldr	r3, [r7, #12]
 800a6a6:	681b      	ldr	r3, [r3, #0]
 800a6a8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a6ac:	60da      	str	r2, [r3, #12]
 800a6ae:	68fb      	ldr	r3, [r7, #12]
 800a6b0:	681b      	ldr	r3, [r3, #0]
 800a6b2:	695a      	ldr	r2, [r3, #20]
 800a6b4:	68fb      	ldr	r3, [r7, #12]
 800a6b6:	681b      	ldr	r3, [r3, #0]
 800a6b8:	f042 0201 	orr.w	r2, r2, #1
 800a6bc:	615a      	str	r2, [r3, #20]
 800a6be:	68fb      	ldr	r3, [r7, #12]
 800a6c0:	681b      	ldr	r3, [r3, #0]
 800a6c2:	68da      	ldr	r2, [r3, #12]
 800a6c4:	68fb      	ldr	r3, [r7, #12]
 800a6c6:	681b      	ldr	r3, [r3, #0]
 800a6c8:	f042 0220 	orr.w	r2, r2, #32
 800a6cc:	60da      	str	r2, [r3, #12]
 800a6ce:	2300      	movs	r3, #0
 800a6d0:	4618      	mov	r0, r3
 800a6d2:	3714      	adds	r7, #20
 800a6d4:	46bd      	mov	sp, r7
 800a6d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6da:	4770      	bx	lr

0800a6dc <UART_EndRxTransfer>:
 800a6dc:	b480      	push	{r7}
 800a6de:	b095      	sub	sp, #84	; 0x54
 800a6e0:	af00      	add	r7, sp, #0
 800a6e2:	6078      	str	r0, [r7, #4]
 800a6e4:	687b      	ldr	r3, [r7, #4]
 800a6e6:	681b      	ldr	r3, [r3, #0]
 800a6e8:	330c      	adds	r3, #12
 800a6ea:	637b      	str	r3, [r7, #52]	; 0x34
 800a6ec:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a6ee:	e853 3f00 	ldrex	r3, [r3]
 800a6f2:	633b      	str	r3, [r7, #48]	; 0x30
 800a6f4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a6f6:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800a6fa:	64fb      	str	r3, [r7, #76]	; 0x4c
 800a6fc:	687b      	ldr	r3, [r7, #4]
 800a6fe:	681b      	ldr	r3, [r3, #0]
 800a700:	330c      	adds	r3, #12
 800a702:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800a704:	643a      	str	r2, [r7, #64]	; 0x40
 800a706:	63fb      	str	r3, [r7, #60]	; 0x3c
 800a708:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800a70a:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800a70c:	e841 2300 	strex	r3, r2, [r1]
 800a710:	63bb      	str	r3, [r7, #56]	; 0x38
 800a712:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a714:	2b00      	cmp	r3, #0
 800a716:	d1e5      	bne.n	800a6e4 <UART_EndRxTransfer+0x8>
 800a718:	687b      	ldr	r3, [r7, #4]
 800a71a:	681b      	ldr	r3, [r3, #0]
 800a71c:	3314      	adds	r3, #20
 800a71e:	623b      	str	r3, [r7, #32]
 800a720:	6a3b      	ldr	r3, [r7, #32]
 800a722:	e853 3f00 	ldrex	r3, [r3]
 800a726:	61fb      	str	r3, [r7, #28]
 800a728:	69fb      	ldr	r3, [r7, #28]
 800a72a:	f023 0301 	bic.w	r3, r3, #1
 800a72e:	64bb      	str	r3, [r7, #72]	; 0x48
 800a730:	687b      	ldr	r3, [r7, #4]
 800a732:	681b      	ldr	r3, [r3, #0]
 800a734:	3314      	adds	r3, #20
 800a736:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800a738:	62fa      	str	r2, [r7, #44]	; 0x2c
 800a73a:	62bb      	str	r3, [r7, #40]	; 0x28
 800a73c:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800a73e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800a740:	e841 2300 	strex	r3, r2, [r1]
 800a744:	627b      	str	r3, [r7, #36]	; 0x24
 800a746:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a748:	2b00      	cmp	r3, #0
 800a74a:	d1e5      	bne.n	800a718 <UART_EndRxTransfer+0x3c>
 800a74c:	687b      	ldr	r3, [r7, #4]
 800a74e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a750:	2b01      	cmp	r3, #1
 800a752:	d119      	bne.n	800a788 <UART_EndRxTransfer+0xac>
 800a754:	687b      	ldr	r3, [r7, #4]
 800a756:	681b      	ldr	r3, [r3, #0]
 800a758:	330c      	adds	r3, #12
 800a75a:	60fb      	str	r3, [r7, #12]
 800a75c:	68fb      	ldr	r3, [r7, #12]
 800a75e:	e853 3f00 	ldrex	r3, [r3]
 800a762:	60bb      	str	r3, [r7, #8]
 800a764:	68bb      	ldr	r3, [r7, #8]
 800a766:	f023 0310 	bic.w	r3, r3, #16
 800a76a:	647b      	str	r3, [r7, #68]	; 0x44
 800a76c:	687b      	ldr	r3, [r7, #4]
 800a76e:	681b      	ldr	r3, [r3, #0]
 800a770:	330c      	adds	r3, #12
 800a772:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800a774:	61ba      	str	r2, [r7, #24]
 800a776:	617b      	str	r3, [r7, #20]
 800a778:	6979      	ldr	r1, [r7, #20]
 800a77a:	69ba      	ldr	r2, [r7, #24]
 800a77c:	e841 2300 	strex	r3, r2, [r1]
 800a780:	613b      	str	r3, [r7, #16]
 800a782:	693b      	ldr	r3, [r7, #16]
 800a784:	2b00      	cmp	r3, #0
 800a786:	d1e5      	bne.n	800a754 <UART_EndRxTransfer+0x78>
 800a788:	687b      	ldr	r3, [r7, #4]
 800a78a:	2220      	movs	r2, #32
 800a78c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a790:	687b      	ldr	r3, [r7, #4]
 800a792:	2200      	movs	r2, #0
 800a794:	631a      	str	r2, [r3, #48]	; 0x30
 800a796:	bf00      	nop
 800a798:	3754      	adds	r7, #84	; 0x54
 800a79a:	46bd      	mov	sp, r7
 800a79c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7a0:	4770      	bx	lr

0800a7a2 <UART_DMAAbortOnError>:
 800a7a2:	b580      	push	{r7, lr}
 800a7a4:	b084      	sub	sp, #16
 800a7a6:	af00      	add	r7, sp, #0
 800a7a8:	6078      	str	r0, [r7, #4]
 800a7aa:	687b      	ldr	r3, [r7, #4]
 800a7ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a7ae:	60fb      	str	r3, [r7, #12]
 800a7b0:	68fb      	ldr	r3, [r7, #12]
 800a7b2:	2200      	movs	r2, #0
 800a7b4:	85da      	strh	r2, [r3, #46]	; 0x2e
 800a7b6:	68fb      	ldr	r3, [r7, #12]
 800a7b8:	2200      	movs	r2, #0
 800a7ba:	84da      	strh	r2, [r3, #38]	; 0x26
 800a7bc:	68f8      	ldr	r0, [r7, #12]
 800a7be:	f7ff fecb 	bl	800a558 <HAL_UART_ErrorCallback>
 800a7c2:	bf00      	nop
 800a7c4:	3710      	adds	r7, #16
 800a7c6:	46bd      	mov	sp, r7
 800a7c8:	bd80      	pop	{r7, pc}

0800a7ca <UART_Transmit_IT>:
 800a7ca:	b480      	push	{r7}
 800a7cc:	b085      	sub	sp, #20
 800a7ce:	af00      	add	r7, sp, #0
 800a7d0:	6078      	str	r0, [r7, #4]
 800a7d2:	687b      	ldr	r3, [r7, #4]
 800a7d4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a7d8:	b2db      	uxtb	r3, r3
 800a7da:	2b21      	cmp	r3, #33	; 0x21
 800a7dc:	d13e      	bne.n	800a85c <UART_Transmit_IT+0x92>
 800a7de:	687b      	ldr	r3, [r7, #4]
 800a7e0:	689b      	ldr	r3, [r3, #8]
 800a7e2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800a7e6:	d114      	bne.n	800a812 <UART_Transmit_IT+0x48>
 800a7e8:	687b      	ldr	r3, [r7, #4]
 800a7ea:	691b      	ldr	r3, [r3, #16]
 800a7ec:	2b00      	cmp	r3, #0
 800a7ee:	d110      	bne.n	800a812 <UART_Transmit_IT+0x48>
 800a7f0:	687b      	ldr	r3, [r7, #4]
 800a7f2:	6a1b      	ldr	r3, [r3, #32]
 800a7f4:	60fb      	str	r3, [r7, #12]
 800a7f6:	68fb      	ldr	r3, [r7, #12]
 800a7f8:	881b      	ldrh	r3, [r3, #0]
 800a7fa:	461a      	mov	r2, r3
 800a7fc:	687b      	ldr	r3, [r7, #4]
 800a7fe:	681b      	ldr	r3, [r3, #0]
 800a800:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800a804:	605a      	str	r2, [r3, #4]
 800a806:	687b      	ldr	r3, [r7, #4]
 800a808:	6a1b      	ldr	r3, [r3, #32]
 800a80a:	1c9a      	adds	r2, r3, #2
 800a80c:	687b      	ldr	r3, [r7, #4]
 800a80e:	621a      	str	r2, [r3, #32]
 800a810:	e008      	b.n	800a824 <UART_Transmit_IT+0x5a>
 800a812:	687b      	ldr	r3, [r7, #4]
 800a814:	6a1b      	ldr	r3, [r3, #32]
 800a816:	1c59      	adds	r1, r3, #1
 800a818:	687a      	ldr	r2, [r7, #4]
 800a81a:	6211      	str	r1, [r2, #32]
 800a81c:	781a      	ldrb	r2, [r3, #0]
 800a81e:	687b      	ldr	r3, [r7, #4]
 800a820:	681b      	ldr	r3, [r3, #0]
 800a822:	605a      	str	r2, [r3, #4]
 800a824:	687b      	ldr	r3, [r7, #4]
 800a826:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800a828:	b29b      	uxth	r3, r3
 800a82a:	3b01      	subs	r3, #1
 800a82c:	b29b      	uxth	r3, r3
 800a82e:	687a      	ldr	r2, [r7, #4]
 800a830:	4619      	mov	r1, r3
 800a832:	84d1      	strh	r1, [r2, #38]	; 0x26
 800a834:	2b00      	cmp	r3, #0
 800a836:	d10f      	bne.n	800a858 <UART_Transmit_IT+0x8e>
 800a838:	687b      	ldr	r3, [r7, #4]
 800a83a:	681b      	ldr	r3, [r3, #0]
 800a83c:	68da      	ldr	r2, [r3, #12]
 800a83e:	687b      	ldr	r3, [r7, #4]
 800a840:	681b      	ldr	r3, [r3, #0]
 800a842:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800a846:	60da      	str	r2, [r3, #12]
 800a848:	687b      	ldr	r3, [r7, #4]
 800a84a:	681b      	ldr	r3, [r3, #0]
 800a84c:	68da      	ldr	r2, [r3, #12]
 800a84e:	687b      	ldr	r3, [r7, #4]
 800a850:	681b      	ldr	r3, [r3, #0]
 800a852:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800a856:	60da      	str	r2, [r3, #12]
 800a858:	2300      	movs	r3, #0
 800a85a:	e000      	b.n	800a85e <UART_Transmit_IT+0x94>
 800a85c:	2302      	movs	r3, #2
 800a85e:	4618      	mov	r0, r3
 800a860:	3714      	adds	r7, #20
 800a862:	46bd      	mov	sp, r7
 800a864:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a868:	4770      	bx	lr

0800a86a <UART_EndTransmit_IT>:
 800a86a:	b580      	push	{r7, lr}
 800a86c:	b082      	sub	sp, #8
 800a86e:	af00      	add	r7, sp, #0
 800a870:	6078      	str	r0, [r7, #4]
 800a872:	687b      	ldr	r3, [r7, #4]
 800a874:	681b      	ldr	r3, [r3, #0]
 800a876:	68da      	ldr	r2, [r3, #12]
 800a878:	687b      	ldr	r3, [r7, #4]
 800a87a:	681b      	ldr	r3, [r3, #0]
 800a87c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800a880:	60da      	str	r2, [r3, #12]
 800a882:	687b      	ldr	r3, [r7, #4]
 800a884:	2220      	movs	r2, #32
 800a886:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a88a:	6878      	ldr	r0, [r7, #4]
 800a88c:	f7ff fe5a 	bl	800a544 <HAL_UART_TxCpltCallback>
 800a890:	2300      	movs	r3, #0
 800a892:	4618      	mov	r0, r3
 800a894:	3708      	adds	r7, #8
 800a896:	46bd      	mov	sp, r7
 800a898:	bd80      	pop	{r7, pc}

0800a89a <UART_Receive_IT>:
 800a89a:	b580      	push	{r7, lr}
 800a89c:	b08c      	sub	sp, #48	; 0x30
 800a89e:	af00      	add	r7, sp, #0
 800a8a0:	6078      	str	r0, [r7, #4]
 800a8a2:	687b      	ldr	r3, [r7, #4]
 800a8a4:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a8a8:	b2db      	uxtb	r3, r3
 800a8aa:	2b22      	cmp	r3, #34	; 0x22
 800a8ac:	f040 80ab 	bne.w	800aa06 <UART_Receive_IT+0x16c>
 800a8b0:	687b      	ldr	r3, [r7, #4]
 800a8b2:	689b      	ldr	r3, [r3, #8]
 800a8b4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800a8b8:	d117      	bne.n	800a8ea <UART_Receive_IT+0x50>
 800a8ba:	687b      	ldr	r3, [r7, #4]
 800a8bc:	691b      	ldr	r3, [r3, #16]
 800a8be:	2b00      	cmp	r3, #0
 800a8c0:	d113      	bne.n	800a8ea <UART_Receive_IT+0x50>
 800a8c2:	2300      	movs	r3, #0
 800a8c4:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a8c6:	687b      	ldr	r3, [r7, #4]
 800a8c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a8ca:	62bb      	str	r3, [r7, #40]	; 0x28
 800a8cc:	687b      	ldr	r3, [r7, #4]
 800a8ce:	681b      	ldr	r3, [r3, #0]
 800a8d0:	685b      	ldr	r3, [r3, #4]
 800a8d2:	b29b      	uxth	r3, r3
 800a8d4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a8d8:	b29a      	uxth	r2, r3
 800a8da:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a8dc:	801a      	strh	r2, [r3, #0]
 800a8de:	687b      	ldr	r3, [r7, #4]
 800a8e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a8e2:	1c9a      	adds	r2, r3, #2
 800a8e4:	687b      	ldr	r3, [r7, #4]
 800a8e6:	629a      	str	r2, [r3, #40]	; 0x28
 800a8e8:	e026      	b.n	800a938 <UART_Receive_IT+0x9e>
 800a8ea:	687b      	ldr	r3, [r7, #4]
 800a8ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a8ee:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a8f0:	2300      	movs	r3, #0
 800a8f2:	62bb      	str	r3, [r7, #40]	; 0x28
 800a8f4:	687b      	ldr	r3, [r7, #4]
 800a8f6:	689b      	ldr	r3, [r3, #8]
 800a8f8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800a8fc:	d007      	beq.n	800a90e <UART_Receive_IT+0x74>
 800a8fe:	687b      	ldr	r3, [r7, #4]
 800a900:	689b      	ldr	r3, [r3, #8]
 800a902:	2b00      	cmp	r3, #0
 800a904:	d10a      	bne.n	800a91c <UART_Receive_IT+0x82>
 800a906:	687b      	ldr	r3, [r7, #4]
 800a908:	691b      	ldr	r3, [r3, #16]
 800a90a:	2b00      	cmp	r3, #0
 800a90c:	d106      	bne.n	800a91c <UART_Receive_IT+0x82>
 800a90e:	687b      	ldr	r3, [r7, #4]
 800a910:	681b      	ldr	r3, [r3, #0]
 800a912:	685b      	ldr	r3, [r3, #4]
 800a914:	b2da      	uxtb	r2, r3
 800a916:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a918:	701a      	strb	r2, [r3, #0]
 800a91a:	e008      	b.n	800a92e <UART_Receive_IT+0x94>
 800a91c:	687b      	ldr	r3, [r7, #4]
 800a91e:	681b      	ldr	r3, [r3, #0]
 800a920:	685b      	ldr	r3, [r3, #4]
 800a922:	b2db      	uxtb	r3, r3
 800a924:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a928:	b2da      	uxtb	r2, r3
 800a92a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a92c:	701a      	strb	r2, [r3, #0]
 800a92e:	687b      	ldr	r3, [r7, #4]
 800a930:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a932:	1c5a      	adds	r2, r3, #1
 800a934:	687b      	ldr	r3, [r7, #4]
 800a936:	629a      	str	r2, [r3, #40]	; 0x28
 800a938:	687b      	ldr	r3, [r7, #4]
 800a93a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800a93c:	b29b      	uxth	r3, r3
 800a93e:	3b01      	subs	r3, #1
 800a940:	b29b      	uxth	r3, r3
 800a942:	687a      	ldr	r2, [r7, #4]
 800a944:	4619      	mov	r1, r3
 800a946:	85d1      	strh	r1, [r2, #46]	; 0x2e
 800a948:	2b00      	cmp	r3, #0
 800a94a:	d15a      	bne.n	800aa02 <UART_Receive_IT+0x168>
 800a94c:	687b      	ldr	r3, [r7, #4]
 800a94e:	681b      	ldr	r3, [r3, #0]
 800a950:	68da      	ldr	r2, [r3, #12]
 800a952:	687b      	ldr	r3, [r7, #4]
 800a954:	681b      	ldr	r3, [r3, #0]
 800a956:	f022 0220 	bic.w	r2, r2, #32
 800a95a:	60da      	str	r2, [r3, #12]
 800a95c:	687b      	ldr	r3, [r7, #4]
 800a95e:	681b      	ldr	r3, [r3, #0]
 800a960:	68da      	ldr	r2, [r3, #12]
 800a962:	687b      	ldr	r3, [r7, #4]
 800a964:	681b      	ldr	r3, [r3, #0]
 800a966:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800a96a:	60da      	str	r2, [r3, #12]
 800a96c:	687b      	ldr	r3, [r7, #4]
 800a96e:	681b      	ldr	r3, [r3, #0]
 800a970:	695a      	ldr	r2, [r3, #20]
 800a972:	687b      	ldr	r3, [r7, #4]
 800a974:	681b      	ldr	r3, [r3, #0]
 800a976:	f022 0201 	bic.w	r2, r2, #1
 800a97a:	615a      	str	r2, [r3, #20]
 800a97c:	687b      	ldr	r3, [r7, #4]
 800a97e:	2220      	movs	r2, #32
 800a980:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a984:	687b      	ldr	r3, [r7, #4]
 800a986:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a988:	2b01      	cmp	r3, #1
 800a98a:	d135      	bne.n	800a9f8 <UART_Receive_IT+0x15e>
 800a98c:	687b      	ldr	r3, [r7, #4]
 800a98e:	2200      	movs	r2, #0
 800a990:	631a      	str	r2, [r3, #48]	; 0x30
 800a992:	687b      	ldr	r3, [r7, #4]
 800a994:	681b      	ldr	r3, [r3, #0]
 800a996:	330c      	adds	r3, #12
 800a998:	617b      	str	r3, [r7, #20]
 800a99a:	697b      	ldr	r3, [r7, #20]
 800a99c:	e853 3f00 	ldrex	r3, [r3]
 800a9a0:	613b      	str	r3, [r7, #16]
 800a9a2:	693b      	ldr	r3, [r7, #16]
 800a9a4:	f023 0310 	bic.w	r3, r3, #16
 800a9a8:	627b      	str	r3, [r7, #36]	; 0x24
 800a9aa:	687b      	ldr	r3, [r7, #4]
 800a9ac:	681b      	ldr	r3, [r3, #0]
 800a9ae:	330c      	adds	r3, #12
 800a9b0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a9b2:	623a      	str	r2, [r7, #32]
 800a9b4:	61fb      	str	r3, [r7, #28]
 800a9b6:	69f9      	ldr	r1, [r7, #28]
 800a9b8:	6a3a      	ldr	r2, [r7, #32]
 800a9ba:	e841 2300 	strex	r3, r2, [r1]
 800a9be:	61bb      	str	r3, [r7, #24]
 800a9c0:	69bb      	ldr	r3, [r7, #24]
 800a9c2:	2b00      	cmp	r3, #0
 800a9c4:	d1e5      	bne.n	800a992 <UART_Receive_IT+0xf8>
 800a9c6:	687b      	ldr	r3, [r7, #4]
 800a9c8:	681b      	ldr	r3, [r3, #0]
 800a9ca:	681b      	ldr	r3, [r3, #0]
 800a9cc:	f003 0310 	and.w	r3, r3, #16
 800a9d0:	2b10      	cmp	r3, #16
 800a9d2:	d10a      	bne.n	800a9ea <UART_Receive_IT+0x150>
 800a9d4:	2300      	movs	r3, #0
 800a9d6:	60fb      	str	r3, [r7, #12]
 800a9d8:	687b      	ldr	r3, [r7, #4]
 800a9da:	681b      	ldr	r3, [r3, #0]
 800a9dc:	681b      	ldr	r3, [r3, #0]
 800a9de:	60fb      	str	r3, [r7, #12]
 800a9e0:	687b      	ldr	r3, [r7, #4]
 800a9e2:	681b      	ldr	r3, [r3, #0]
 800a9e4:	685b      	ldr	r3, [r3, #4]
 800a9e6:	60fb      	str	r3, [r7, #12]
 800a9e8:	68fb      	ldr	r3, [r7, #12]
 800a9ea:	687b      	ldr	r3, [r7, #4]
 800a9ec:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800a9ee:	4619      	mov	r1, r3
 800a9f0:	6878      	ldr	r0, [r7, #4]
 800a9f2:	f7ff fdbb 	bl	800a56c <HAL_UARTEx_RxEventCallback>
 800a9f6:	e002      	b.n	800a9fe <UART_Receive_IT+0x164>
 800a9f8:	6878      	ldr	r0, [r7, #4]
 800a9fa:	f7f9 ff21 	bl	8004840 <HAL_UART_RxCpltCallback>
 800a9fe:	2300      	movs	r3, #0
 800aa00:	e002      	b.n	800aa08 <UART_Receive_IT+0x16e>
 800aa02:	2300      	movs	r3, #0
 800aa04:	e000      	b.n	800aa08 <UART_Receive_IT+0x16e>
 800aa06:	2302      	movs	r3, #2
 800aa08:	4618      	mov	r0, r3
 800aa0a:	3730      	adds	r7, #48	; 0x30
 800aa0c:	46bd      	mov	sp, r7
 800aa0e:	bd80      	pop	{r7, pc}

0800aa10 <UART_SetConfig>:
 800aa10:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800aa14:	b0c0      	sub	sp, #256	; 0x100
 800aa16:	af00      	add	r7, sp, #0
 800aa18:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 800aa1c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800aa20:	681b      	ldr	r3, [r3, #0]
 800aa22:	691b      	ldr	r3, [r3, #16]
 800aa24:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 800aa28:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800aa2c:	68d9      	ldr	r1, [r3, #12]
 800aa2e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800aa32:	681a      	ldr	r2, [r3, #0]
 800aa34:	ea40 0301 	orr.w	r3, r0, r1
 800aa38:	6113      	str	r3, [r2, #16]
 800aa3a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800aa3e:	689a      	ldr	r2, [r3, #8]
 800aa40:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800aa44:	691b      	ldr	r3, [r3, #16]
 800aa46:	431a      	orrs	r2, r3
 800aa48:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800aa4c:	695b      	ldr	r3, [r3, #20]
 800aa4e:	431a      	orrs	r2, r3
 800aa50:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800aa54:	69db      	ldr	r3, [r3, #28]
 800aa56:	4313      	orrs	r3, r2
 800aa58:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 800aa5c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800aa60:	681b      	ldr	r3, [r3, #0]
 800aa62:	68db      	ldr	r3, [r3, #12]
 800aa64:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 800aa68:	f021 010c 	bic.w	r1, r1, #12
 800aa6c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800aa70:	681a      	ldr	r2, [r3, #0]
 800aa72:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 800aa76:	430b      	orrs	r3, r1
 800aa78:	60d3      	str	r3, [r2, #12]
 800aa7a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800aa7e:	681b      	ldr	r3, [r3, #0]
 800aa80:	695b      	ldr	r3, [r3, #20]
 800aa82:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 800aa86:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800aa8a:	6999      	ldr	r1, [r3, #24]
 800aa8c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800aa90:	681a      	ldr	r2, [r3, #0]
 800aa92:	ea40 0301 	orr.w	r3, r0, r1
 800aa96:	6153      	str	r3, [r2, #20]
 800aa98:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800aa9c:	681a      	ldr	r2, [r3, #0]
 800aa9e:	4b8f      	ldr	r3, [pc, #572]	; (800acdc <UART_SetConfig+0x2cc>)
 800aaa0:	429a      	cmp	r2, r3
 800aaa2:	d005      	beq.n	800aab0 <UART_SetConfig+0xa0>
 800aaa4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800aaa8:	681a      	ldr	r2, [r3, #0]
 800aaaa:	4b8d      	ldr	r3, [pc, #564]	; (800ace0 <UART_SetConfig+0x2d0>)
 800aaac:	429a      	cmp	r2, r3
 800aaae:	d104      	bne.n	800aaba <UART_SetConfig+0xaa>
 800aab0:	f7fc fd34 	bl	800751c <HAL_RCC_GetPCLK2Freq>
 800aab4:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800aab8:	e003      	b.n	800aac2 <UART_SetConfig+0xb2>
 800aaba:	f7fc fd1b 	bl	80074f4 <HAL_RCC_GetPCLK1Freq>
 800aabe:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800aac2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800aac6:	69db      	ldr	r3, [r3, #28]
 800aac8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800aacc:	f040 810c 	bne.w	800ace8 <UART_SetConfig+0x2d8>
 800aad0:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800aad4:	2200      	movs	r2, #0
 800aad6:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800aada:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 800aade:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 800aae2:	4622      	mov	r2, r4
 800aae4:	462b      	mov	r3, r5
 800aae6:	1891      	adds	r1, r2, r2
 800aae8:	65b9      	str	r1, [r7, #88]	; 0x58
 800aaea:	415b      	adcs	r3, r3
 800aaec:	65fb      	str	r3, [r7, #92]	; 0x5c
 800aaee:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800aaf2:	4621      	mov	r1, r4
 800aaf4:	eb12 0801 	adds.w	r8, r2, r1
 800aaf8:	4629      	mov	r1, r5
 800aafa:	eb43 0901 	adc.w	r9, r3, r1
 800aafe:	f04f 0200 	mov.w	r2, #0
 800ab02:	f04f 0300 	mov.w	r3, #0
 800ab06:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800ab0a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800ab0e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800ab12:	4690      	mov	r8, r2
 800ab14:	4699      	mov	r9, r3
 800ab16:	4623      	mov	r3, r4
 800ab18:	eb18 0303 	adds.w	r3, r8, r3
 800ab1c:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800ab20:	462b      	mov	r3, r5
 800ab22:	eb49 0303 	adc.w	r3, r9, r3
 800ab26:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800ab2a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ab2e:	685b      	ldr	r3, [r3, #4]
 800ab30:	2200      	movs	r2, #0
 800ab32:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800ab36:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 800ab3a:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 800ab3e:	460b      	mov	r3, r1
 800ab40:	18db      	adds	r3, r3, r3
 800ab42:	653b      	str	r3, [r7, #80]	; 0x50
 800ab44:	4613      	mov	r3, r2
 800ab46:	eb42 0303 	adc.w	r3, r2, r3
 800ab4a:	657b      	str	r3, [r7, #84]	; 0x54
 800ab4c:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800ab50:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800ab54:	f7f6 f898 	bl	8000c88 <__aeabi_uldivmod>
 800ab58:	4602      	mov	r2, r0
 800ab5a:	460b      	mov	r3, r1
 800ab5c:	4b61      	ldr	r3, [pc, #388]	; (800ace4 <UART_SetConfig+0x2d4>)
 800ab5e:	fba3 2302 	umull	r2, r3, r3, r2
 800ab62:	095b      	lsrs	r3, r3, #5
 800ab64:	011c      	lsls	r4, r3, #4
 800ab66:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800ab6a:	2200      	movs	r2, #0
 800ab6c:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800ab70:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 800ab74:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 800ab78:	4642      	mov	r2, r8
 800ab7a:	464b      	mov	r3, r9
 800ab7c:	1891      	adds	r1, r2, r2
 800ab7e:	64b9      	str	r1, [r7, #72]	; 0x48
 800ab80:	415b      	adcs	r3, r3
 800ab82:	64fb      	str	r3, [r7, #76]	; 0x4c
 800ab84:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 800ab88:	4641      	mov	r1, r8
 800ab8a:	eb12 0a01 	adds.w	sl, r2, r1
 800ab8e:	4649      	mov	r1, r9
 800ab90:	eb43 0b01 	adc.w	fp, r3, r1
 800ab94:	f04f 0200 	mov.w	r2, #0
 800ab98:	f04f 0300 	mov.w	r3, #0
 800ab9c:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800aba0:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800aba4:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800aba8:	4692      	mov	sl, r2
 800abaa:	469b      	mov	fp, r3
 800abac:	4643      	mov	r3, r8
 800abae:	eb1a 0303 	adds.w	r3, sl, r3
 800abb2:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800abb6:	464b      	mov	r3, r9
 800abb8:	eb4b 0303 	adc.w	r3, fp, r3
 800abbc:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 800abc0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800abc4:	685b      	ldr	r3, [r3, #4]
 800abc6:	2200      	movs	r2, #0
 800abc8:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800abcc:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 800abd0:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 800abd4:	460b      	mov	r3, r1
 800abd6:	18db      	adds	r3, r3, r3
 800abd8:	643b      	str	r3, [r7, #64]	; 0x40
 800abda:	4613      	mov	r3, r2
 800abdc:	eb42 0303 	adc.w	r3, r2, r3
 800abe0:	647b      	str	r3, [r7, #68]	; 0x44
 800abe2:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800abe6:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 800abea:	f7f6 f84d 	bl	8000c88 <__aeabi_uldivmod>
 800abee:	4602      	mov	r2, r0
 800abf0:	460b      	mov	r3, r1
 800abf2:	4611      	mov	r1, r2
 800abf4:	4b3b      	ldr	r3, [pc, #236]	; (800ace4 <UART_SetConfig+0x2d4>)
 800abf6:	fba3 2301 	umull	r2, r3, r3, r1
 800abfa:	095b      	lsrs	r3, r3, #5
 800abfc:	2264      	movs	r2, #100	; 0x64
 800abfe:	fb02 f303 	mul.w	r3, r2, r3
 800ac02:	1acb      	subs	r3, r1, r3
 800ac04:	00db      	lsls	r3, r3, #3
 800ac06:	f103 0232 	add.w	r2, r3, #50	; 0x32
 800ac0a:	4b36      	ldr	r3, [pc, #216]	; (800ace4 <UART_SetConfig+0x2d4>)
 800ac0c:	fba3 2302 	umull	r2, r3, r3, r2
 800ac10:	095b      	lsrs	r3, r3, #5
 800ac12:	005b      	lsls	r3, r3, #1
 800ac14:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800ac18:	441c      	add	r4, r3
 800ac1a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800ac1e:	2200      	movs	r2, #0
 800ac20:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800ac24:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 800ac28:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 800ac2c:	4642      	mov	r2, r8
 800ac2e:	464b      	mov	r3, r9
 800ac30:	1891      	adds	r1, r2, r2
 800ac32:	63b9      	str	r1, [r7, #56]	; 0x38
 800ac34:	415b      	adcs	r3, r3
 800ac36:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ac38:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800ac3c:	4641      	mov	r1, r8
 800ac3e:	1851      	adds	r1, r2, r1
 800ac40:	6339      	str	r1, [r7, #48]	; 0x30
 800ac42:	4649      	mov	r1, r9
 800ac44:	414b      	adcs	r3, r1
 800ac46:	637b      	str	r3, [r7, #52]	; 0x34
 800ac48:	f04f 0200 	mov.w	r2, #0
 800ac4c:	f04f 0300 	mov.w	r3, #0
 800ac50:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 800ac54:	4659      	mov	r1, fp
 800ac56:	00cb      	lsls	r3, r1, #3
 800ac58:	4651      	mov	r1, sl
 800ac5a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800ac5e:	4651      	mov	r1, sl
 800ac60:	00ca      	lsls	r2, r1, #3
 800ac62:	4610      	mov	r0, r2
 800ac64:	4619      	mov	r1, r3
 800ac66:	4603      	mov	r3, r0
 800ac68:	4642      	mov	r2, r8
 800ac6a:	189b      	adds	r3, r3, r2
 800ac6c:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800ac70:	464b      	mov	r3, r9
 800ac72:	460a      	mov	r2, r1
 800ac74:	eb42 0303 	adc.w	r3, r2, r3
 800ac78:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800ac7c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ac80:	685b      	ldr	r3, [r3, #4]
 800ac82:	2200      	movs	r2, #0
 800ac84:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800ac88:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 800ac8c:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 800ac90:	460b      	mov	r3, r1
 800ac92:	18db      	adds	r3, r3, r3
 800ac94:	62bb      	str	r3, [r7, #40]	; 0x28
 800ac96:	4613      	mov	r3, r2
 800ac98:	eb42 0303 	adc.w	r3, r2, r3
 800ac9c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800ac9e:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800aca2:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 800aca6:	f7f5 ffef 	bl	8000c88 <__aeabi_uldivmod>
 800acaa:	4602      	mov	r2, r0
 800acac:	460b      	mov	r3, r1
 800acae:	4b0d      	ldr	r3, [pc, #52]	; (800ace4 <UART_SetConfig+0x2d4>)
 800acb0:	fba3 1302 	umull	r1, r3, r3, r2
 800acb4:	095b      	lsrs	r3, r3, #5
 800acb6:	2164      	movs	r1, #100	; 0x64
 800acb8:	fb01 f303 	mul.w	r3, r1, r3
 800acbc:	1ad3      	subs	r3, r2, r3
 800acbe:	00db      	lsls	r3, r3, #3
 800acc0:	3332      	adds	r3, #50	; 0x32
 800acc2:	4a08      	ldr	r2, [pc, #32]	; (800ace4 <UART_SetConfig+0x2d4>)
 800acc4:	fba2 2303 	umull	r2, r3, r2, r3
 800acc8:	095b      	lsrs	r3, r3, #5
 800acca:	f003 0207 	and.w	r2, r3, #7
 800acce:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800acd2:	681b      	ldr	r3, [r3, #0]
 800acd4:	4422      	add	r2, r4
 800acd6:	609a      	str	r2, [r3, #8]
 800acd8:	e105      	b.n	800aee6 <UART_SetConfig+0x4d6>
 800acda:	bf00      	nop
 800acdc:	40011000 	.word	0x40011000
 800ace0:	40011400 	.word	0x40011400
 800ace4:	51eb851f 	.word	0x51eb851f
 800ace8:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800acec:	2200      	movs	r2, #0
 800acee:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800acf2:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800acf6:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 800acfa:	4642      	mov	r2, r8
 800acfc:	464b      	mov	r3, r9
 800acfe:	1891      	adds	r1, r2, r2
 800ad00:	6239      	str	r1, [r7, #32]
 800ad02:	415b      	adcs	r3, r3
 800ad04:	627b      	str	r3, [r7, #36]	; 0x24
 800ad06:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800ad0a:	4641      	mov	r1, r8
 800ad0c:	1854      	adds	r4, r2, r1
 800ad0e:	4649      	mov	r1, r9
 800ad10:	eb43 0501 	adc.w	r5, r3, r1
 800ad14:	f04f 0200 	mov.w	r2, #0
 800ad18:	f04f 0300 	mov.w	r3, #0
 800ad1c:	00eb      	lsls	r3, r5, #3
 800ad1e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800ad22:	00e2      	lsls	r2, r4, #3
 800ad24:	4614      	mov	r4, r2
 800ad26:	461d      	mov	r5, r3
 800ad28:	4643      	mov	r3, r8
 800ad2a:	18e3      	adds	r3, r4, r3
 800ad2c:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800ad30:	464b      	mov	r3, r9
 800ad32:	eb45 0303 	adc.w	r3, r5, r3
 800ad36:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800ad3a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ad3e:	685b      	ldr	r3, [r3, #4]
 800ad40:	2200      	movs	r2, #0
 800ad42:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800ad46:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800ad4a:	f04f 0200 	mov.w	r2, #0
 800ad4e:	f04f 0300 	mov.w	r3, #0
 800ad52:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 800ad56:	4629      	mov	r1, r5
 800ad58:	008b      	lsls	r3, r1, #2
 800ad5a:	4621      	mov	r1, r4
 800ad5c:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800ad60:	4621      	mov	r1, r4
 800ad62:	008a      	lsls	r2, r1, #2
 800ad64:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 800ad68:	f7f5 ff8e 	bl	8000c88 <__aeabi_uldivmod>
 800ad6c:	4602      	mov	r2, r0
 800ad6e:	460b      	mov	r3, r1
 800ad70:	4b60      	ldr	r3, [pc, #384]	; (800aef4 <UART_SetConfig+0x4e4>)
 800ad72:	fba3 2302 	umull	r2, r3, r3, r2
 800ad76:	095b      	lsrs	r3, r3, #5
 800ad78:	011c      	lsls	r4, r3, #4
 800ad7a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800ad7e:	2200      	movs	r2, #0
 800ad80:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800ad84:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800ad88:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 800ad8c:	4642      	mov	r2, r8
 800ad8e:	464b      	mov	r3, r9
 800ad90:	1891      	adds	r1, r2, r2
 800ad92:	61b9      	str	r1, [r7, #24]
 800ad94:	415b      	adcs	r3, r3
 800ad96:	61fb      	str	r3, [r7, #28]
 800ad98:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800ad9c:	4641      	mov	r1, r8
 800ad9e:	1851      	adds	r1, r2, r1
 800ada0:	6139      	str	r1, [r7, #16]
 800ada2:	4649      	mov	r1, r9
 800ada4:	414b      	adcs	r3, r1
 800ada6:	617b      	str	r3, [r7, #20]
 800ada8:	f04f 0200 	mov.w	r2, #0
 800adac:	f04f 0300 	mov.w	r3, #0
 800adb0:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800adb4:	4659      	mov	r1, fp
 800adb6:	00cb      	lsls	r3, r1, #3
 800adb8:	4651      	mov	r1, sl
 800adba:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800adbe:	4651      	mov	r1, sl
 800adc0:	00ca      	lsls	r2, r1, #3
 800adc2:	4610      	mov	r0, r2
 800adc4:	4619      	mov	r1, r3
 800adc6:	4603      	mov	r3, r0
 800adc8:	4642      	mov	r2, r8
 800adca:	189b      	adds	r3, r3, r2
 800adcc:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800add0:	464b      	mov	r3, r9
 800add2:	460a      	mov	r2, r1
 800add4:	eb42 0303 	adc.w	r3, r2, r3
 800add8:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800addc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ade0:	685b      	ldr	r3, [r3, #4]
 800ade2:	2200      	movs	r2, #0
 800ade4:	67bb      	str	r3, [r7, #120]	; 0x78
 800ade6:	67fa      	str	r2, [r7, #124]	; 0x7c
 800ade8:	f04f 0200 	mov.w	r2, #0
 800adec:	f04f 0300 	mov.w	r3, #0
 800adf0:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 800adf4:	4649      	mov	r1, r9
 800adf6:	008b      	lsls	r3, r1, #2
 800adf8:	4641      	mov	r1, r8
 800adfa:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800adfe:	4641      	mov	r1, r8
 800ae00:	008a      	lsls	r2, r1, #2
 800ae02:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800ae06:	f7f5 ff3f 	bl	8000c88 <__aeabi_uldivmod>
 800ae0a:	4602      	mov	r2, r0
 800ae0c:	460b      	mov	r3, r1
 800ae0e:	4b39      	ldr	r3, [pc, #228]	; (800aef4 <UART_SetConfig+0x4e4>)
 800ae10:	fba3 1302 	umull	r1, r3, r3, r2
 800ae14:	095b      	lsrs	r3, r3, #5
 800ae16:	2164      	movs	r1, #100	; 0x64
 800ae18:	fb01 f303 	mul.w	r3, r1, r3
 800ae1c:	1ad3      	subs	r3, r2, r3
 800ae1e:	011b      	lsls	r3, r3, #4
 800ae20:	3332      	adds	r3, #50	; 0x32
 800ae22:	4a34      	ldr	r2, [pc, #208]	; (800aef4 <UART_SetConfig+0x4e4>)
 800ae24:	fba2 2303 	umull	r2, r3, r2, r3
 800ae28:	095b      	lsrs	r3, r3, #5
 800ae2a:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800ae2e:	441c      	add	r4, r3
 800ae30:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800ae34:	2200      	movs	r2, #0
 800ae36:	673b      	str	r3, [r7, #112]	; 0x70
 800ae38:	677a      	str	r2, [r7, #116]	; 0x74
 800ae3a:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 800ae3e:	4642      	mov	r2, r8
 800ae40:	464b      	mov	r3, r9
 800ae42:	1891      	adds	r1, r2, r2
 800ae44:	60b9      	str	r1, [r7, #8]
 800ae46:	415b      	adcs	r3, r3
 800ae48:	60fb      	str	r3, [r7, #12]
 800ae4a:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800ae4e:	4641      	mov	r1, r8
 800ae50:	1851      	adds	r1, r2, r1
 800ae52:	6039      	str	r1, [r7, #0]
 800ae54:	4649      	mov	r1, r9
 800ae56:	414b      	adcs	r3, r1
 800ae58:	607b      	str	r3, [r7, #4]
 800ae5a:	f04f 0200 	mov.w	r2, #0
 800ae5e:	f04f 0300 	mov.w	r3, #0
 800ae62:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800ae66:	4659      	mov	r1, fp
 800ae68:	00cb      	lsls	r3, r1, #3
 800ae6a:	4651      	mov	r1, sl
 800ae6c:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800ae70:	4651      	mov	r1, sl
 800ae72:	00ca      	lsls	r2, r1, #3
 800ae74:	4610      	mov	r0, r2
 800ae76:	4619      	mov	r1, r3
 800ae78:	4603      	mov	r3, r0
 800ae7a:	4642      	mov	r2, r8
 800ae7c:	189b      	adds	r3, r3, r2
 800ae7e:	66bb      	str	r3, [r7, #104]	; 0x68
 800ae80:	464b      	mov	r3, r9
 800ae82:	460a      	mov	r2, r1
 800ae84:	eb42 0303 	adc.w	r3, r2, r3
 800ae88:	66fb      	str	r3, [r7, #108]	; 0x6c
 800ae8a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ae8e:	685b      	ldr	r3, [r3, #4]
 800ae90:	2200      	movs	r2, #0
 800ae92:	663b      	str	r3, [r7, #96]	; 0x60
 800ae94:	667a      	str	r2, [r7, #100]	; 0x64
 800ae96:	f04f 0200 	mov.w	r2, #0
 800ae9a:	f04f 0300 	mov.w	r3, #0
 800ae9e:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 800aea2:	4649      	mov	r1, r9
 800aea4:	008b      	lsls	r3, r1, #2
 800aea6:	4641      	mov	r1, r8
 800aea8:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800aeac:	4641      	mov	r1, r8
 800aeae:	008a      	lsls	r2, r1, #2
 800aeb0:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800aeb4:	f7f5 fee8 	bl	8000c88 <__aeabi_uldivmod>
 800aeb8:	4602      	mov	r2, r0
 800aeba:	460b      	mov	r3, r1
 800aebc:	4b0d      	ldr	r3, [pc, #52]	; (800aef4 <UART_SetConfig+0x4e4>)
 800aebe:	fba3 1302 	umull	r1, r3, r3, r2
 800aec2:	095b      	lsrs	r3, r3, #5
 800aec4:	2164      	movs	r1, #100	; 0x64
 800aec6:	fb01 f303 	mul.w	r3, r1, r3
 800aeca:	1ad3      	subs	r3, r2, r3
 800aecc:	011b      	lsls	r3, r3, #4
 800aece:	3332      	adds	r3, #50	; 0x32
 800aed0:	4a08      	ldr	r2, [pc, #32]	; (800aef4 <UART_SetConfig+0x4e4>)
 800aed2:	fba2 2303 	umull	r2, r3, r2, r3
 800aed6:	095b      	lsrs	r3, r3, #5
 800aed8:	f003 020f 	and.w	r2, r3, #15
 800aedc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800aee0:	681b      	ldr	r3, [r3, #0]
 800aee2:	4422      	add	r2, r4
 800aee4:	609a      	str	r2, [r3, #8]
 800aee6:	bf00      	nop
 800aee8:	f507 7780 	add.w	r7, r7, #256	; 0x100
 800aeec:	46bd      	mov	sp, r7
 800aeee:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800aef2:	bf00      	nop
 800aef4:	51eb851f 	.word	0x51eb851f

0800aef8 <__errno>:
 800aef8:	4b01      	ldr	r3, [pc, #4]	; (800af00 <__errno+0x8>)
 800aefa:	6818      	ldr	r0, [r3, #0]
 800aefc:	4770      	bx	lr
 800aefe:	bf00      	nop
 800af00:	20000078 	.word	0x20000078

0800af04 <__libc_init_array>:
 800af04:	b570      	push	{r4, r5, r6, lr}
 800af06:	4d0d      	ldr	r5, [pc, #52]	; (800af3c <__libc_init_array+0x38>)
 800af08:	4c0d      	ldr	r4, [pc, #52]	; (800af40 <__libc_init_array+0x3c>)
 800af0a:	1b64      	subs	r4, r4, r5
 800af0c:	10a4      	asrs	r4, r4, #2
 800af0e:	2600      	movs	r6, #0
 800af10:	42a6      	cmp	r6, r4
 800af12:	d109      	bne.n	800af28 <__libc_init_array+0x24>
 800af14:	4d0b      	ldr	r5, [pc, #44]	; (800af44 <__libc_init_array+0x40>)
 800af16:	4c0c      	ldr	r4, [pc, #48]	; (800af48 <__libc_init_array+0x44>)
 800af18:	f004 f950 	bl	800f1bc <_init>
 800af1c:	1b64      	subs	r4, r4, r5
 800af1e:	10a4      	asrs	r4, r4, #2
 800af20:	2600      	movs	r6, #0
 800af22:	42a6      	cmp	r6, r4
 800af24:	d105      	bne.n	800af32 <__libc_init_array+0x2e>
 800af26:	bd70      	pop	{r4, r5, r6, pc}
 800af28:	f855 3b04 	ldr.w	r3, [r5], #4
 800af2c:	4798      	blx	r3
 800af2e:	3601      	adds	r6, #1
 800af30:	e7ee      	b.n	800af10 <__libc_init_array+0xc>
 800af32:	f855 3b04 	ldr.w	r3, [r5], #4
 800af36:	4798      	blx	r3
 800af38:	3601      	adds	r6, #1
 800af3a:	e7f2      	b.n	800af22 <__libc_init_array+0x1e>
 800af3c:	0800f898 	.word	0x0800f898
 800af40:	0800f898 	.word	0x0800f898
 800af44:	0800f898 	.word	0x0800f898
 800af48:	0800f89c 	.word	0x0800f89c

0800af4c <memset>:
 800af4c:	4402      	add	r2, r0
 800af4e:	4603      	mov	r3, r0
 800af50:	4293      	cmp	r3, r2
 800af52:	d100      	bne.n	800af56 <memset+0xa>
 800af54:	4770      	bx	lr
 800af56:	f803 1b01 	strb.w	r1, [r3], #1
 800af5a:	e7f9      	b.n	800af50 <memset+0x4>

0800af5c <__cvt>:
 800af5c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800af60:	ec55 4b10 	vmov	r4, r5, d0
 800af64:	2d00      	cmp	r5, #0
 800af66:	460e      	mov	r6, r1
 800af68:	4619      	mov	r1, r3
 800af6a:	462b      	mov	r3, r5
 800af6c:	bfbb      	ittet	lt
 800af6e:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 800af72:	461d      	movlt	r5, r3
 800af74:	2300      	movge	r3, #0
 800af76:	232d      	movlt	r3, #45	; 0x2d
 800af78:	700b      	strb	r3, [r1, #0]
 800af7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800af7c:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800af80:	4691      	mov	r9, r2
 800af82:	f023 0820 	bic.w	r8, r3, #32
 800af86:	bfbc      	itt	lt
 800af88:	4622      	movlt	r2, r4
 800af8a:	4614      	movlt	r4, r2
 800af8c:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800af90:	d005      	beq.n	800af9e <__cvt+0x42>
 800af92:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800af96:	d100      	bne.n	800af9a <__cvt+0x3e>
 800af98:	3601      	adds	r6, #1
 800af9a:	2102      	movs	r1, #2
 800af9c:	e000      	b.n	800afa0 <__cvt+0x44>
 800af9e:	2103      	movs	r1, #3
 800afa0:	ab03      	add	r3, sp, #12
 800afa2:	9301      	str	r3, [sp, #4]
 800afa4:	ab02      	add	r3, sp, #8
 800afa6:	9300      	str	r3, [sp, #0]
 800afa8:	ec45 4b10 	vmov	d0, r4, r5
 800afac:	4653      	mov	r3, sl
 800afae:	4632      	mov	r2, r6
 800afb0:	f000 fcea 	bl	800b988 <_dtoa_r>
 800afb4:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800afb8:	4607      	mov	r7, r0
 800afba:	d102      	bne.n	800afc2 <__cvt+0x66>
 800afbc:	f019 0f01 	tst.w	r9, #1
 800afc0:	d022      	beq.n	800b008 <__cvt+0xac>
 800afc2:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800afc6:	eb07 0906 	add.w	r9, r7, r6
 800afca:	d110      	bne.n	800afee <__cvt+0x92>
 800afcc:	783b      	ldrb	r3, [r7, #0]
 800afce:	2b30      	cmp	r3, #48	; 0x30
 800afd0:	d10a      	bne.n	800afe8 <__cvt+0x8c>
 800afd2:	2200      	movs	r2, #0
 800afd4:	2300      	movs	r3, #0
 800afd6:	4620      	mov	r0, r4
 800afd8:	4629      	mov	r1, r5
 800afda:	f7f5 fd95 	bl	8000b08 <__aeabi_dcmpeq>
 800afde:	b918      	cbnz	r0, 800afe8 <__cvt+0x8c>
 800afe0:	f1c6 0601 	rsb	r6, r6, #1
 800afe4:	f8ca 6000 	str.w	r6, [sl]
 800afe8:	f8da 3000 	ldr.w	r3, [sl]
 800afec:	4499      	add	r9, r3
 800afee:	2200      	movs	r2, #0
 800aff0:	2300      	movs	r3, #0
 800aff2:	4620      	mov	r0, r4
 800aff4:	4629      	mov	r1, r5
 800aff6:	f7f5 fd87 	bl	8000b08 <__aeabi_dcmpeq>
 800affa:	b108      	cbz	r0, 800b000 <__cvt+0xa4>
 800affc:	f8cd 900c 	str.w	r9, [sp, #12]
 800b000:	2230      	movs	r2, #48	; 0x30
 800b002:	9b03      	ldr	r3, [sp, #12]
 800b004:	454b      	cmp	r3, r9
 800b006:	d307      	bcc.n	800b018 <__cvt+0xbc>
 800b008:	9b03      	ldr	r3, [sp, #12]
 800b00a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b00c:	1bdb      	subs	r3, r3, r7
 800b00e:	4638      	mov	r0, r7
 800b010:	6013      	str	r3, [r2, #0]
 800b012:	b004      	add	sp, #16
 800b014:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b018:	1c59      	adds	r1, r3, #1
 800b01a:	9103      	str	r1, [sp, #12]
 800b01c:	701a      	strb	r2, [r3, #0]
 800b01e:	e7f0      	b.n	800b002 <__cvt+0xa6>

0800b020 <__exponent>:
 800b020:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b022:	4603      	mov	r3, r0
 800b024:	2900      	cmp	r1, #0
 800b026:	bfb8      	it	lt
 800b028:	4249      	neglt	r1, r1
 800b02a:	f803 2b02 	strb.w	r2, [r3], #2
 800b02e:	bfb4      	ite	lt
 800b030:	222d      	movlt	r2, #45	; 0x2d
 800b032:	222b      	movge	r2, #43	; 0x2b
 800b034:	2909      	cmp	r1, #9
 800b036:	7042      	strb	r2, [r0, #1]
 800b038:	dd2a      	ble.n	800b090 <__exponent+0x70>
 800b03a:	f10d 0407 	add.w	r4, sp, #7
 800b03e:	46a4      	mov	ip, r4
 800b040:	270a      	movs	r7, #10
 800b042:	46a6      	mov	lr, r4
 800b044:	460a      	mov	r2, r1
 800b046:	fb91 f6f7 	sdiv	r6, r1, r7
 800b04a:	fb07 1516 	mls	r5, r7, r6, r1
 800b04e:	3530      	adds	r5, #48	; 0x30
 800b050:	2a63      	cmp	r2, #99	; 0x63
 800b052:	f104 34ff 	add.w	r4, r4, #4294967295
 800b056:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800b05a:	4631      	mov	r1, r6
 800b05c:	dcf1      	bgt.n	800b042 <__exponent+0x22>
 800b05e:	3130      	adds	r1, #48	; 0x30
 800b060:	f1ae 0502 	sub.w	r5, lr, #2
 800b064:	f804 1c01 	strb.w	r1, [r4, #-1]
 800b068:	1c44      	adds	r4, r0, #1
 800b06a:	4629      	mov	r1, r5
 800b06c:	4561      	cmp	r1, ip
 800b06e:	d30a      	bcc.n	800b086 <__exponent+0x66>
 800b070:	f10d 0209 	add.w	r2, sp, #9
 800b074:	eba2 020e 	sub.w	r2, r2, lr
 800b078:	4565      	cmp	r5, ip
 800b07a:	bf88      	it	hi
 800b07c:	2200      	movhi	r2, #0
 800b07e:	4413      	add	r3, r2
 800b080:	1a18      	subs	r0, r3, r0
 800b082:	b003      	add	sp, #12
 800b084:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b086:	f811 2b01 	ldrb.w	r2, [r1], #1
 800b08a:	f804 2f01 	strb.w	r2, [r4, #1]!
 800b08e:	e7ed      	b.n	800b06c <__exponent+0x4c>
 800b090:	2330      	movs	r3, #48	; 0x30
 800b092:	3130      	adds	r1, #48	; 0x30
 800b094:	7083      	strb	r3, [r0, #2]
 800b096:	70c1      	strb	r1, [r0, #3]
 800b098:	1d03      	adds	r3, r0, #4
 800b09a:	e7f1      	b.n	800b080 <__exponent+0x60>

0800b09c <_printf_float>:
 800b09c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b0a0:	ed2d 8b02 	vpush	{d8}
 800b0a4:	b08d      	sub	sp, #52	; 0x34
 800b0a6:	460c      	mov	r4, r1
 800b0a8:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 800b0ac:	4616      	mov	r6, r2
 800b0ae:	461f      	mov	r7, r3
 800b0b0:	4605      	mov	r5, r0
 800b0b2:	f001 fa57 	bl	800c564 <_localeconv_r>
 800b0b6:	f8d0 a000 	ldr.w	sl, [r0]
 800b0ba:	4650      	mov	r0, sl
 800b0bc:	f7f5 f8a8 	bl	8000210 <strlen>
 800b0c0:	2300      	movs	r3, #0
 800b0c2:	930a      	str	r3, [sp, #40]	; 0x28
 800b0c4:	6823      	ldr	r3, [r4, #0]
 800b0c6:	9305      	str	r3, [sp, #20]
 800b0c8:	f8d8 3000 	ldr.w	r3, [r8]
 800b0cc:	f894 b018 	ldrb.w	fp, [r4, #24]
 800b0d0:	3307      	adds	r3, #7
 800b0d2:	f023 0307 	bic.w	r3, r3, #7
 800b0d6:	f103 0208 	add.w	r2, r3, #8
 800b0da:	f8c8 2000 	str.w	r2, [r8]
 800b0de:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b0e2:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800b0e6:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 800b0ea:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800b0ee:	9307      	str	r3, [sp, #28]
 800b0f0:	f8cd 8018 	str.w	r8, [sp, #24]
 800b0f4:	ee08 0a10 	vmov	s16, r0
 800b0f8:	4b9f      	ldr	r3, [pc, #636]	; (800b378 <_printf_float+0x2dc>)
 800b0fa:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800b0fe:	f04f 32ff 	mov.w	r2, #4294967295
 800b102:	f7f5 fd33 	bl	8000b6c <__aeabi_dcmpun>
 800b106:	bb88      	cbnz	r0, 800b16c <_printf_float+0xd0>
 800b108:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800b10c:	4b9a      	ldr	r3, [pc, #616]	; (800b378 <_printf_float+0x2dc>)
 800b10e:	f04f 32ff 	mov.w	r2, #4294967295
 800b112:	f7f5 fd0d 	bl	8000b30 <__aeabi_dcmple>
 800b116:	bb48      	cbnz	r0, 800b16c <_printf_float+0xd0>
 800b118:	2200      	movs	r2, #0
 800b11a:	2300      	movs	r3, #0
 800b11c:	4640      	mov	r0, r8
 800b11e:	4649      	mov	r1, r9
 800b120:	f7f5 fcfc 	bl	8000b1c <__aeabi_dcmplt>
 800b124:	b110      	cbz	r0, 800b12c <_printf_float+0x90>
 800b126:	232d      	movs	r3, #45	; 0x2d
 800b128:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800b12c:	4b93      	ldr	r3, [pc, #588]	; (800b37c <_printf_float+0x2e0>)
 800b12e:	4894      	ldr	r0, [pc, #592]	; (800b380 <_printf_float+0x2e4>)
 800b130:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 800b134:	bf94      	ite	ls
 800b136:	4698      	movls	r8, r3
 800b138:	4680      	movhi	r8, r0
 800b13a:	2303      	movs	r3, #3
 800b13c:	6123      	str	r3, [r4, #16]
 800b13e:	9b05      	ldr	r3, [sp, #20]
 800b140:	f023 0204 	bic.w	r2, r3, #4
 800b144:	6022      	str	r2, [r4, #0]
 800b146:	f04f 0900 	mov.w	r9, #0
 800b14a:	9700      	str	r7, [sp, #0]
 800b14c:	4633      	mov	r3, r6
 800b14e:	aa0b      	add	r2, sp, #44	; 0x2c
 800b150:	4621      	mov	r1, r4
 800b152:	4628      	mov	r0, r5
 800b154:	f000 f9d8 	bl	800b508 <_printf_common>
 800b158:	3001      	adds	r0, #1
 800b15a:	f040 8090 	bne.w	800b27e <_printf_float+0x1e2>
 800b15e:	f04f 30ff 	mov.w	r0, #4294967295
 800b162:	b00d      	add	sp, #52	; 0x34
 800b164:	ecbd 8b02 	vpop	{d8}
 800b168:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b16c:	4642      	mov	r2, r8
 800b16e:	464b      	mov	r3, r9
 800b170:	4640      	mov	r0, r8
 800b172:	4649      	mov	r1, r9
 800b174:	f7f5 fcfa 	bl	8000b6c <__aeabi_dcmpun>
 800b178:	b140      	cbz	r0, 800b18c <_printf_float+0xf0>
 800b17a:	464b      	mov	r3, r9
 800b17c:	2b00      	cmp	r3, #0
 800b17e:	bfbc      	itt	lt
 800b180:	232d      	movlt	r3, #45	; 0x2d
 800b182:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800b186:	487f      	ldr	r0, [pc, #508]	; (800b384 <_printf_float+0x2e8>)
 800b188:	4b7f      	ldr	r3, [pc, #508]	; (800b388 <_printf_float+0x2ec>)
 800b18a:	e7d1      	b.n	800b130 <_printf_float+0x94>
 800b18c:	6863      	ldr	r3, [r4, #4]
 800b18e:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 800b192:	9206      	str	r2, [sp, #24]
 800b194:	1c5a      	adds	r2, r3, #1
 800b196:	d13f      	bne.n	800b218 <_printf_float+0x17c>
 800b198:	2306      	movs	r3, #6
 800b19a:	6063      	str	r3, [r4, #4]
 800b19c:	9b05      	ldr	r3, [sp, #20]
 800b19e:	6861      	ldr	r1, [r4, #4]
 800b1a0:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 800b1a4:	2300      	movs	r3, #0
 800b1a6:	9303      	str	r3, [sp, #12]
 800b1a8:	ab0a      	add	r3, sp, #40	; 0x28
 800b1aa:	e9cd b301 	strd	fp, r3, [sp, #4]
 800b1ae:	ab09      	add	r3, sp, #36	; 0x24
 800b1b0:	ec49 8b10 	vmov	d0, r8, r9
 800b1b4:	9300      	str	r3, [sp, #0]
 800b1b6:	6022      	str	r2, [r4, #0]
 800b1b8:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 800b1bc:	4628      	mov	r0, r5
 800b1be:	f7ff fecd 	bl	800af5c <__cvt>
 800b1c2:	9b06      	ldr	r3, [sp, #24]
 800b1c4:	9909      	ldr	r1, [sp, #36]	; 0x24
 800b1c6:	2b47      	cmp	r3, #71	; 0x47
 800b1c8:	4680      	mov	r8, r0
 800b1ca:	d108      	bne.n	800b1de <_printf_float+0x142>
 800b1cc:	1cc8      	adds	r0, r1, #3
 800b1ce:	db02      	blt.n	800b1d6 <_printf_float+0x13a>
 800b1d0:	6863      	ldr	r3, [r4, #4]
 800b1d2:	4299      	cmp	r1, r3
 800b1d4:	dd41      	ble.n	800b25a <_printf_float+0x1be>
 800b1d6:	f1ab 0b02 	sub.w	fp, fp, #2
 800b1da:	fa5f fb8b 	uxtb.w	fp, fp
 800b1de:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800b1e2:	d820      	bhi.n	800b226 <_printf_float+0x18a>
 800b1e4:	3901      	subs	r1, #1
 800b1e6:	465a      	mov	r2, fp
 800b1e8:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800b1ec:	9109      	str	r1, [sp, #36]	; 0x24
 800b1ee:	f7ff ff17 	bl	800b020 <__exponent>
 800b1f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b1f4:	1813      	adds	r3, r2, r0
 800b1f6:	2a01      	cmp	r2, #1
 800b1f8:	4681      	mov	r9, r0
 800b1fa:	6123      	str	r3, [r4, #16]
 800b1fc:	dc02      	bgt.n	800b204 <_printf_float+0x168>
 800b1fe:	6822      	ldr	r2, [r4, #0]
 800b200:	07d2      	lsls	r2, r2, #31
 800b202:	d501      	bpl.n	800b208 <_printf_float+0x16c>
 800b204:	3301      	adds	r3, #1
 800b206:	6123      	str	r3, [r4, #16]
 800b208:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 800b20c:	2b00      	cmp	r3, #0
 800b20e:	d09c      	beq.n	800b14a <_printf_float+0xae>
 800b210:	232d      	movs	r3, #45	; 0x2d
 800b212:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800b216:	e798      	b.n	800b14a <_printf_float+0xae>
 800b218:	9a06      	ldr	r2, [sp, #24]
 800b21a:	2a47      	cmp	r2, #71	; 0x47
 800b21c:	d1be      	bne.n	800b19c <_printf_float+0x100>
 800b21e:	2b00      	cmp	r3, #0
 800b220:	d1bc      	bne.n	800b19c <_printf_float+0x100>
 800b222:	2301      	movs	r3, #1
 800b224:	e7b9      	b.n	800b19a <_printf_float+0xfe>
 800b226:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 800b22a:	d118      	bne.n	800b25e <_printf_float+0x1c2>
 800b22c:	2900      	cmp	r1, #0
 800b22e:	6863      	ldr	r3, [r4, #4]
 800b230:	dd0b      	ble.n	800b24a <_printf_float+0x1ae>
 800b232:	6121      	str	r1, [r4, #16]
 800b234:	b913      	cbnz	r3, 800b23c <_printf_float+0x1a0>
 800b236:	6822      	ldr	r2, [r4, #0]
 800b238:	07d0      	lsls	r0, r2, #31
 800b23a:	d502      	bpl.n	800b242 <_printf_float+0x1a6>
 800b23c:	3301      	adds	r3, #1
 800b23e:	440b      	add	r3, r1
 800b240:	6123      	str	r3, [r4, #16]
 800b242:	65a1      	str	r1, [r4, #88]	; 0x58
 800b244:	f04f 0900 	mov.w	r9, #0
 800b248:	e7de      	b.n	800b208 <_printf_float+0x16c>
 800b24a:	b913      	cbnz	r3, 800b252 <_printf_float+0x1b6>
 800b24c:	6822      	ldr	r2, [r4, #0]
 800b24e:	07d2      	lsls	r2, r2, #31
 800b250:	d501      	bpl.n	800b256 <_printf_float+0x1ba>
 800b252:	3302      	adds	r3, #2
 800b254:	e7f4      	b.n	800b240 <_printf_float+0x1a4>
 800b256:	2301      	movs	r3, #1
 800b258:	e7f2      	b.n	800b240 <_printf_float+0x1a4>
 800b25a:	f04f 0b67 	mov.w	fp, #103	; 0x67
 800b25e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b260:	4299      	cmp	r1, r3
 800b262:	db05      	blt.n	800b270 <_printf_float+0x1d4>
 800b264:	6823      	ldr	r3, [r4, #0]
 800b266:	6121      	str	r1, [r4, #16]
 800b268:	07d8      	lsls	r0, r3, #31
 800b26a:	d5ea      	bpl.n	800b242 <_printf_float+0x1a6>
 800b26c:	1c4b      	adds	r3, r1, #1
 800b26e:	e7e7      	b.n	800b240 <_printf_float+0x1a4>
 800b270:	2900      	cmp	r1, #0
 800b272:	bfd4      	ite	le
 800b274:	f1c1 0202 	rsble	r2, r1, #2
 800b278:	2201      	movgt	r2, #1
 800b27a:	4413      	add	r3, r2
 800b27c:	e7e0      	b.n	800b240 <_printf_float+0x1a4>
 800b27e:	6823      	ldr	r3, [r4, #0]
 800b280:	055a      	lsls	r2, r3, #21
 800b282:	d407      	bmi.n	800b294 <_printf_float+0x1f8>
 800b284:	6923      	ldr	r3, [r4, #16]
 800b286:	4642      	mov	r2, r8
 800b288:	4631      	mov	r1, r6
 800b28a:	4628      	mov	r0, r5
 800b28c:	47b8      	blx	r7
 800b28e:	3001      	adds	r0, #1
 800b290:	d12c      	bne.n	800b2ec <_printf_float+0x250>
 800b292:	e764      	b.n	800b15e <_printf_float+0xc2>
 800b294:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800b298:	f240 80e0 	bls.w	800b45c <_printf_float+0x3c0>
 800b29c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800b2a0:	2200      	movs	r2, #0
 800b2a2:	2300      	movs	r3, #0
 800b2a4:	f7f5 fc30 	bl	8000b08 <__aeabi_dcmpeq>
 800b2a8:	2800      	cmp	r0, #0
 800b2aa:	d034      	beq.n	800b316 <_printf_float+0x27a>
 800b2ac:	4a37      	ldr	r2, [pc, #220]	; (800b38c <_printf_float+0x2f0>)
 800b2ae:	2301      	movs	r3, #1
 800b2b0:	4631      	mov	r1, r6
 800b2b2:	4628      	mov	r0, r5
 800b2b4:	47b8      	blx	r7
 800b2b6:	3001      	adds	r0, #1
 800b2b8:	f43f af51 	beq.w	800b15e <_printf_float+0xc2>
 800b2bc:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800b2c0:	429a      	cmp	r2, r3
 800b2c2:	db02      	blt.n	800b2ca <_printf_float+0x22e>
 800b2c4:	6823      	ldr	r3, [r4, #0]
 800b2c6:	07d8      	lsls	r0, r3, #31
 800b2c8:	d510      	bpl.n	800b2ec <_printf_float+0x250>
 800b2ca:	ee18 3a10 	vmov	r3, s16
 800b2ce:	4652      	mov	r2, sl
 800b2d0:	4631      	mov	r1, r6
 800b2d2:	4628      	mov	r0, r5
 800b2d4:	47b8      	blx	r7
 800b2d6:	3001      	adds	r0, #1
 800b2d8:	f43f af41 	beq.w	800b15e <_printf_float+0xc2>
 800b2dc:	f04f 0800 	mov.w	r8, #0
 800b2e0:	f104 091a 	add.w	r9, r4, #26
 800b2e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b2e6:	3b01      	subs	r3, #1
 800b2e8:	4543      	cmp	r3, r8
 800b2ea:	dc09      	bgt.n	800b300 <_printf_float+0x264>
 800b2ec:	6823      	ldr	r3, [r4, #0]
 800b2ee:	079b      	lsls	r3, r3, #30
 800b2f0:	f100 8105 	bmi.w	800b4fe <_printf_float+0x462>
 800b2f4:	68e0      	ldr	r0, [r4, #12]
 800b2f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b2f8:	4298      	cmp	r0, r3
 800b2fa:	bfb8      	it	lt
 800b2fc:	4618      	movlt	r0, r3
 800b2fe:	e730      	b.n	800b162 <_printf_float+0xc6>
 800b300:	2301      	movs	r3, #1
 800b302:	464a      	mov	r2, r9
 800b304:	4631      	mov	r1, r6
 800b306:	4628      	mov	r0, r5
 800b308:	47b8      	blx	r7
 800b30a:	3001      	adds	r0, #1
 800b30c:	f43f af27 	beq.w	800b15e <_printf_float+0xc2>
 800b310:	f108 0801 	add.w	r8, r8, #1
 800b314:	e7e6      	b.n	800b2e4 <_printf_float+0x248>
 800b316:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b318:	2b00      	cmp	r3, #0
 800b31a:	dc39      	bgt.n	800b390 <_printf_float+0x2f4>
 800b31c:	4a1b      	ldr	r2, [pc, #108]	; (800b38c <_printf_float+0x2f0>)
 800b31e:	2301      	movs	r3, #1
 800b320:	4631      	mov	r1, r6
 800b322:	4628      	mov	r0, r5
 800b324:	47b8      	blx	r7
 800b326:	3001      	adds	r0, #1
 800b328:	f43f af19 	beq.w	800b15e <_printf_float+0xc2>
 800b32c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800b330:	4313      	orrs	r3, r2
 800b332:	d102      	bne.n	800b33a <_printf_float+0x29e>
 800b334:	6823      	ldr	r3, [r4, #0]
 800b336:	07d9      	lsls	r1, r3, #31
 800b338:	d5d8      	bpl.n	800b2ec <_printf_float+0x250>
 800b33a:	ee18 3a10 	vmov	r3, s16
 800b33e:	4652      	mov	r2, sl
 800b340:	4631      	mov	r1, r6
 800b342:	4628      	mov	r0, r5
 800b344:	47b8      	blx	r7
 800b346:	3001      	adds	r0, #1
 800b348:	f43f af09 	beq.w	800b15e <_printf_float+0xc2>
 800b34c:	f04f 0900 	mov.w	r9, #0
 800b350:	f104 0a1a 	add.w	sl, r4, #26
 800b354:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b356:	425b      	negs	r3, r3
 800b358:	454b      	cmp	r3, r9
 800b35a:	dc01      	bgt.n	800b360 <_printf_float+0x2c4>
 800b35c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b35e:	e792      	b.n	800b286 <_printf_float+0x1ea>
 800b360:	2301      	movs	r3, #1
 800b362:	4652      	mov	r2, sl
 800b364:	4631      	mov	r1, r6
 800b366:	4628      	mov	r0, r5
 800b368:	47b8      	blx	r7
 800b36a:	3001      	adds	r0, #1
 800b36c:	f43f aef7 	beq.w	800b15e <_printf_float+0xc2>
 800b370:	f109 0901 	add.w	r9, r9, #1
 800b374:	e7ee      	b.n	800b354 <_printf_float+0x2b8>
 800b376:	bf00      	nop
 800b378:	7fefffff 	.word	0x7fefffff
 800b37c:	0800f2a0 	.word	0x0800f2a0
 800b380:	0800f2a4 	.word	0x0800f2a4
 800b384:	0800f2ac 	.word	0x0800f2ac
 800b388:	0800f2a8 	.word	0x0800f2a8
 800b38c:	0800f2b0 	.word	0x0800f2b0
 800b390:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b392:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800b394:	429a      	cmp	r2, r3
 800b396:	bfa8      	it	ge
 800b398:	461a      	movge	r2, r3
 800b39a:	2a00      	cmp	r2, #0
 800b39c:	4691      	mov	r9, r2
 800b39e:	dc37      	bgt.n	800b410 <_printf_float+0x374>
 800b3a0:	f04f 0b00 	mov.w	fp, #0
 800b3a4:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800b3a8:	f104 021a 	add.w	r2, r4, #26
 800b3ac:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800b3ae:	9305      	str	r3, [sp, #20]
 800b3b0:	eba3 0309 	sub.w	r3, r3, r9
 800b3b4:	455b      	cmp	r3, fp
 800b3b6:	dc33      	bgt.n	800b420 <_printf_float+0x384>
 800b3b8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800b3bc:	429a      	cmp	r2, r3
 800b3be:	db3b      	blt.n	800b438 <_printf_float+0x39c>
 800b3c0:	6823      	ldr	r3, [r4, #0]
 800b3c2:	07da      	lsls	r2, r3, #31
 800b3c4:	d438      	bmi.n	800b438 <_printf_float+0x39c>
 800b3c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b3c8:	9a05      	ldr	r2, [sp, #20]
 800b3ca:	9909      	ldr	r1, [sp, #36]	; 0x24
 800b3cc:	1a9a      	subs	r2, r3, r2
 800b3ce:	eba3 0901 	sub.w	r9, r3, r1
 800b3d2:	4591      	cmp	r9, r2
 800b3d4:	bfa8      	it	ge
 800b3d6:	4691      	movge	r9, r2
 800b3d8:	f1b9 0f00 	cmp.w	r9, #0
 800b3dc:	dc35      	bgt.n	800b44a <_printf_float+0x3ae>
 800b3de:	f04f 0800 	mov.w	r8, #0
 800b3e2:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800b3e6:	f104 0a1a 	add.w	sl, r4, #26
 800b3ea:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800b3ee:	1a9b      	subs	r3, r3, r2
 800b3f0:	eba3 0309 	sub.w	r3, r3, r9
 800b3f4:	4543      	cmp	r3, r8
 800b3f6:	f77f af79 	ble.w	800b2ec <_printf_float+0x250>
 800b3fa:	2301      	movs	r3, #1
 800b3fc:	4652      	mov	r2, sl
 800b3fe:	4631      	mov	r1, r6
 800b400:	4628      	mov	r0, r5
 800b402:	47b8      	blx	r7
 800b404:	3001      	adds	r0, #1
 800b406:	f43f aeaa 	beq.w	800b15e <_printf_float+0xc2>
 800b40a:	f108 0801 	add.w	r8, r8, #1
 800b40e:	e7ec      	b.n	800b3ea <_printf_float+0x34e>
 800b410:	4613      	mov	r3, r2
 800b412:	4631      	mov	r1, r6
 800b414:	4642      	mov	r2, r8
 800b416:	4628      	mov	r0, r5
 800b418:	47b8      	blx	r7
 800b41a:	3001      	adds	r0, #1
 800b41c:	d1c0      	bne.n	800b3a0 <_printf_float+0x304>
 800b41e:	e69e      	b.n	800b15e <_printf_float+0xc2>
 800b420:	2301      	movs	r3, #1
 800b422:	4631      	mov	r1, r6
 800b424:	4628      	mov	r0, r5
 800b426:	9205      	str	r2, [sp, #20]
 800b428:	47b8      	blx	r7
 800b42a:	3001      	adds	r0, #1
 800b42c:	f43f ae97 	beq.w	800b15e <_printf_float+0xc2>
 800b430:	9a05      	ldr	r2, [sp, #20]
 800b432:	f10b 0b01 	add.w	fp, fp, #1
 800b436:	e7b9      	b.n	800b3ac <_printf_float+0x310>
 800b438:	ee18 3a10 	vmov	r3, s16
 800b43c:	4652      	mov	r2, sl
 800b43e:	4631      	mov	r1, r6
 800b440:	4628      	mov	r0, r5
 800b442:	47b8      	blx	r7
 800b444:	3001      	adds	r0, #1
 800b446:	d1be      	bne.n	800b3c6 <_printf_float+0x32a>
 800b448:	e689      	b.n	800b15e <_printf_float+0xc2>
 800b44a:	9a05      	ldr	r2, [sp, #20]
 800b44c:	464b      	mov	r3, r9
 800b44e:	4442      	add	r2, r8
 800b450:	4631      	mov	r1, r6
 800b452:	4628      	mov	r0, r5
 800b454:	47b8      	blx	r7
 800b456:	3001      	adds	r0, #1
 800b458:	d1c1      	bne.n	800b3de <_printf_float+0x342>
 800b45a:	e680      	b.n	800b15e <_printf_float+0xc2>
 800b45c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b45e:	2a01      	cmp	r2, #1
 800b460:	dc01      	bgt.n	800b466 <_printf_float+0x3ca>
 800b462:	07db      	lsls	r3, r3, #31
 800b464:	d538      	bpl.n	800b4d8 <_printf_float+0x43c>
 800b466:	2301      	movs	r3, #1
 800b468:	4642      	mov	r2, r8
 800b46a:	4631      	mov	r1, r6
 800b46c:	4628      	mov	r0, r5
 800b46e:	47b8      	blx	r7
 800b470:	3001      	adds	r0, #1
 800b472:	f43f ae74 	beq.w	800b15e <_printf_float+0xc2>
 800b476:	ee18 3a10 	vmov	r3, s16
 800b47a:	4652      	mov	r2, sl
 800b47c:	4631      	mov	r1, r6
 800b47e:	4628      	mov	r0, r5
 800b480:	47b8      	blx	r7
 800b482:	3001      	adds	r0, #1
 800b484:	f43f ae6b 	beq.w	800b15e <_printf_float+0xc2>
 800b488:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800b48c:	2200      	movs	r2, #0
 800b48e:	2300      	movs	r3, #0
 800b490:	f7f5 fb3a 	bl	8000b08 <__aeabi_dcmpeq>
 800b494:	b9d8      	cbnz	r0, 800b4ce <_printf_float+0x432>
 800b496:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b498:	f108 0201 	add.w	r2, r8, #1
 800b49c:	3b01      	subs	r3, #1
 800b49e:	4631      	mov	r1, r6
 800b4a0:	4628      	mov	r0, r5
 800b4a2:	47b8      	blx	r7
 800b4a4:	3001      	adds	r0, #1
 800b4a6:	d10e      	bne.n	800b4c6 <_printf_float+0x42a>
 800b4a8:	e659      	b.n	800b15e <_printf_float+0xc2>
 800b4aa:	2301      	movs	r3, #1
 800b4ac:	4652      	mov	r2, sl
 800b4ae:	4631      	mov	r1, r6
 800b4b0:	4628      	mov	r0, r5
 800b4b2:	47b8      	blx	r7
 800b4b4:	3001      	adds	r0, #1
 800b4b6:	f43f ae52 	beq.w	800b15e <_printf_float+0xc2>
 800b4ba:	f108 0801 	add.w	r8, r8, #1
 800b4be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b4c0:	3b01      	subs	r3, #1
 800b4c2:	4543      	cmp	r3, r8
 800b4c4:	dcf1      	bgt.n	800b4aa <_printf_float+0x40e>
 800b4c6:	464b      	mov	r3, r9
 800b4c8:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800b4cc:	e6dc      	b.n	800b288 <_printf_float+0x1ec>
 800b4ce:	f04f 0800 	mov.w	r8, #0
 800b4d2:	f104 0a1a 	add.w	sl, r4, #26
 800b4d6:	e7f2      	b.n	800b4be <_printf_float+0x422>
 800b4d8:	2301      	movs	r3, #1
 800b4da:	4642      	mov	r2, r8
 800b4dc:	e7df      	b.n	800b49e <_printf_float+0x402>
 800b4de:	2301      	movs	r3, #1
 800b4e0:	464a      	mov	r2, r9
 800b4e2:	4631      	mov	r1, r6
 800b4e4:	4628      	mov	r0, r5
 800b4e6:	47b8      	blx	r7
 800b4e8:	3001      	adds	r0, #1
 800b4ea:	f43f ae38 	beq.w	800b15e <_printf_float+0xc2>
 800b4ee:	f108 0801 	add.w	r8, r8, #1
 800b4f2:	68e3      	ldr	r3, [r4, #12]
 800b4f4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b4f6:	1a5b      	subs	r3, r3, r1
 800b4f8:	4543      	cmp	r3, r8
 800b4fa:	dcf0      	bgt.n	800b4de <_printf_float+0x442>
 800b4fc:	e6fa      	b.n	800b2f4 <_printf_float+0x258>
 800b4fe:	f04f 0800 	mov.w	r8, #0
 800b502:	f104 0919 	add.w	r9, r4, #25
 800b506:	e7f4      	b.n	800b4f2 <_printf_float+0x456>

0800b508 <_printf_common>:
 800b508:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b50c:	4616      	mov	r6, r2
 800b50e:	4699      	mov	r9, r3
 800b510:	688a      	ldr	r2, [r1, #8]
 800b512:	690b      	ldr	r3, [r1, #16]
 800b514:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800b518:	4293      	cmp	r3, r2
 800b51a:	bfb8      	it	lt
 800b51c:	4613      	movlt	r3, r2
 800b51e:	6033      	str	r3, [r6, #0]
 800b520:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800b524:	4607      	mov	r7, r0
 800b526:	460c      	mov	r4, r1
 800b528:	b10a      	cbz	r2, 800b52e <_printf_common+0x26>
 800b52a:	3301      	adds	r3, #1
 800b52c:	6033      	str	r3, [r6, #0]
 800b52e:	6823      	ldr	r3, [r4, #0]
 800b530:	0699      	lsls	r1, r3, #26
 800b532:	bf42      	ittt	mi
 800b534:	6833      	ldrmi	r3, [r6, #0]
 800b536:	3302      	addmi	r3, #2
 800b538:	6033      	strmi	r3, [r6, #0]
 800b53a:	6825      	ldr	r5, [r4, #0]
 800b53c:	f015 0506 	ands.w	r5, r5, #6
 800b540:	d106      	bne.n	800b550 <_printf_common+0x48>
 800b542:	f104 0a19 	add.w	sl, r4, #25
 800b546:	68e3      	ldr	r3, [r4, #12]
 800b548:	6832      	ldr	r2, [r6, #0]
 800b54a:	1a9b      	subs	r3, r3, r2
 800b54c:	42ab      	cmp	r3, r5
 800b54e:	dc26      	bgt.n	800b59e <_printf_common+0x96>
 800b550:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800b554:	1e13      	subs	r3, r2, #0
 800b556:	6822      	ldr	r2, [r4, #0]
 800b558:	bf18      	it	ne
 800b55a:	2301      	movne	r3, #1
 800b55c:	0692      	lsls	r2, r2, #26
 800b55e:	d42b      	bmi.n	800b5b8 <_printf_common+0xb0>
 800b560:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800b564:	4649      	mov	r1, r9
 800b566:	4638      	mov	r0, r7
 800b568:	47c0      	blx	r8
 800b56a:	3001      	adds	r0, #1
 800b56c:	d01e      	beq.n	800b5ac <_printf_common+0xa4>
 800b56e:	6823      	ldr	r3, [r4, #0]
 800b570:	68e5      	ldr	r5, [r4, #12]
 800b572:	6832      	ldr	r2, [r6, #0]
 800b574:	f003 0306 	and.w	r3, r3, #6
 800b578:	2b04      	cmp	r3, #4
 800b57a:	bf08      	it	eq
 800b57c:	1aad      	subeq	r5, r5, r2
 800b57e:	68a3      	ldr	r3, [r4, #8]
 800b580:	6922      	ldr	r2, [r4, #16]
 800b582:	bf0c      	ite	eq
 800b584:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800b588:	2500      	movne	r5, #0
 800b58a:	4293      	cmp	r3, r2
 800b58c:	bfc4      	itt	gt
 800b58e:	1a9b      	subgt	r3, r3, r2
 800b590:	18ed      	addgt	r5, r5, r3
 800b592:	2600      	movs	r6, #0
 800b594:	341a      	adds	r4, #26
 800b596:	42b5      	cmp	r5, r6
 800b598:	d11a      	bne.n	800b5d0 <_printf_common+0xc8>
 800b59a:	2000      	movs	r0, #0
 800b59c:	e008      	b.n	800b5b0 <_printf_common+0xa8>
 800b59e:	2301      	movs	r3, #1
 800b5a0:	4652      	mov	r2, sl
 800b5a2:	4649      	mov	r1, r9
 800b5a4:	4638      	mov	r0, r7
 800b5a6:	47c0      	blx	r8
 800b5a8:	3001      	adds	r0, #1
 800b5aa:	d103      	bne.n	800b5b4 <_printf_common+0xac>
 800b5ac:	f04f 30ff 	mov.w	r0, #4294967295
 800b5b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b5b4:	3501      	adds	r5, #1
 800b5b6:	e7c6      	b.n	800b546 <_printf_common+0x3e>
 800b5b8:	18e1      	adds	r1, r4, r3
 800b5ba:	1c5a      	adds	r2, r3, #1
 800b5bc:	2030      	movs	r0, #48	; 0x30
 800b5be:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800b5c2:	4422      	add	r2, r4
 800b5c4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800b5c8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800b5cc:	3302      	adds	r3, #2
 800b5ce:	e7c7      	b.n	800b560 <_printf_common+0x58>
 800b5d0:	2301      	movs	r3, #1
 800b5d2:	4622      	mov	r2, r4
 800b5d4:	4649      	mov	r1, r9
 800b5d6:	4638      	mov	r0, r7
 800b5d8:	47c0      	blx	r8
 800b5da:	3001      	adds	r0, #1
 800b5dc:	d0e6      	beq.n	800b5ac <_printf_common+0xa4>
 800b5de:	3601      	adds	r6, #1
 800b5e0:	e7d9      	b.n	800b596 <_printf_common+0x8e>
	...

0800b5e4 <_printf_i>:
 800b5e4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800b5e8:	7e0f      	ldrb	r7, [r1, #24]
 800b5ea:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800b5ec:	2f78      	cmp	r7, #120	; 0x78
 800b5ee:	4691      	mov	r9, r2
 800b5f0:	4680      	mov	r8, r0
 800b5f2:	460c      	mov	r4, r1
 800b5f4:	469a      	mov	sl, r3
 800b5f6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800b5fa:	d807      	bhi.n	800b60c <_printf_i+0x28>
 800b5fc:	2f62      	cmp	r7, #98	; 0x62
 800b5fe:	d80a      	bhi.n	800b616 <_printf_i+0x32>
 800b600:	2f00      	cmp	r7, #0
 800b602:	f000 80d8 	beq.w	800b7b6 <_printf_i+0x1d2>
 800b606:	2f58      	cmp	r7, #88	; 0x58
 800b608:	f000 80a3 	beq.w	800b752 <_printf_i+0x16e>
 800b60c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800b610:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800b614:	e03a      	b.n	800b68c <_printf_i+0xa8>
 800b616:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800b61a:	2b15      	cmp	r3, #21
 800b61c:	d8f6      	bhi.n	800b60c <_printf_i+0x28>
 800b61e:	a101      	add	r1, pc, #4	; (adr r1, 800b624 <_printf_i+0x40>)
 800b620:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800b624:	0800b67d 	.word	0x0800b67d
 800b628:	0800b691 	.word	0x0800b691
 800b62c:	0800b60d 	.word	0x0800b60d
 800b630:	0800b60d 	.word	0x0800b60d
 800b634:	0800b60d 	.word	0x0800b60d
 800b638:	0800b60d 	.word	0x0800b60d
 800b63c:	0800b691 	.word	0x0800b691
 800b640:	0800b60d 	.word	0x0800b60d
 800b644:	0800b60d 	.word	0x0800b60d
 800b648:	0800b60d 	.word	0x0800b60d
 800b64c:	0800b60d 	.word	0x0800b60d
 800b650:	0800b79d 	.word	0x0800b79d
 800b654:	0800b6c1 	.word	0x0800b6c1
 800b658:	0800b77f 	.word	0x0800b77f
 800b65c:	0800b60d 	.word	0x0800b60d
 800b660:	0800b60d 	.word	0x0800b60d
 800b664:	0800b7bf 	.word	0x0800b7bf
 800b668:	0800b60d 	.word	0x0800b60d
 800b66c:	0800b6c1 	.word	0x0800b6c1
 800b670:	0800b60d 	.word	0x0800b60d
 800b674:	0800b60d 	.word	0x0800b60d
 800b678:	0800b787 	.word	0x0800b787
 800b67c:	682b      	ldr	r3, [r5, #0]
 800b67e:	1d1a      	adds	r2, r3, #4
 800b680:	681b      	ldr	r3, [r3, #0]
 800b682:	602a      	str	r2, [r5, #0]
 800b684:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800b688:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800b68c:	2301      	movs	r3, #1
 800b68e:	e0a3      	b.n	800b7d8 <_printf_i+0x1f4>
 800b690:	6820      	ldr	r0, [r4, #0]
 800b692:	6829      	ldr	r1, [r5, #0]
 800b694:	0606      	lsls	r6, r0, #24
 800b696:	f101 0304 	add.w	r3, r1, #4
 800b69a:	d50a      	bpl.n	800b6b2 <_printf_i+0xce>
 800b69c:	680e      	ldr	r6, [r1, #0]
 800b69e:	602b      	str	r3, [r5, #0]
 800b6a0:	2e00      	cmp	r6, #0
 800b6a2:	da03      	bge.n	800b6ac <_printf_i+0xc8>
 800b6a4:	232d      	movs	r3, #45	; 0x2d
 800b6a6:	4276      	negs	r6, r6
 800b6a8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800b6ac:	485e      	ldr	r0, [pc, #376]	; (800b828 <_printf_i+0x244>)
 800b6ae:	230a      	movs	r3, #10
 800b6b0:	e019      	b.n	800b6e6 <_printf_i+0x102>
 800b6b2:	680e      	ldr	r6, [r1, #0]
 800b6b4:	602b      	str	r3, [r5, #0]
 800b6b6:	f010 0f40 	tst.w	r0, #64	; 0x40
 800b6ba:	bf18      	it	ne
 800b6bc:	b236      	sxthne	r6, r6
 800b6be:	e7ef      	b.n	800b6a0 <_printf_i+0xbc>
 800b6c0:	682b      	ldr	r3, [r5, #0]
 800b6c2:	6820      	ldr	r0, [r4, #0]
 800b6c4:	1d19      	adds	r1, r3, #4
 800b6c6:	6029      	str	r1, [r5, #0]
 800b6c8:	0601      	lsls	r1, r0, #24
 800b6ca:	d501      	bpl.n	800b6d0 <_printf_i+0xec>
 800b6cc:	681e      	ldr	r6, [r3, #0]
 800b6ce:	e002      	b.n	800b6d6 <_printf_i+0xf2>
 800b6d0:	0646      	lsls	r6, r0, #25
 800b6d2:	d5fb      	bpl.n	800b6cc <_printf_i+0xe8>
 800b6d4:	881e      	ldrh	r6, [r3, #0]
 800b6d6:	4854      	ldr	r0, [pc, #336]	; (800b828 <_printf_i+0x244>)
 800b6d8:	2f6f      	cmp	r7, #111	; 0x6f
 800b6da:	bf0c      	ite	eq
 800b6dc:	2308      	moveq	r3, #8
 800b6de:	230a      	movne	r3, #10
 800b6e0:	2100      	movs	r1, #0
 800b6e2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800b6e6:	6865      	ldr	r5, [r4, #4]
 800b6e8:	60a5      	str	r5, [r4, #8]
 800b6ea:	2d00      	cmp	r5, #0
 800b6ec:	bfa2      	ittt	ge
 800b6ee:	6821      	ldrge	r1, [r4, #0]
 800b6f0:	f021 0104 	bicge.w	r1, r1, #4
 800b6f4:	6021      	strge	r1, [r4, #0]
 800b6f6:	b90e      	cbnz	r6, 800b6fc <_printf_i+0x118>
 800b6f8:	2d00      	cmp	r5, #0
 800b6fa:	d04d      	beq.n	800b798 <_printf_i+0x1b4>
 800b6fc:	4615      	mov	r5, r2
 800b6fe:	fbb6 f1f3 	udiv	r1, r6, r3
 800b702:	fb03 6711 	mls	r7, r3, r1, r6
 800b706:	5dc7      	ldrb	r7, [r0, r7]
 800b708:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800b70c:	4637      	mov	r7, r6
 800b70e:	42bb      	cmp	r3, r7
 800b710:	460e      	mov	r6, r1
 800b712:	d9f4      	bls.n	800b6fe <_printf_i+0x11a>
 800b714:	2b08      	cmp	r3, #8
 800b716:	d10b      	bne.n	800b730 <_printf_i+0x14c>
 800b718:	6823      	ldr	r3, [r4, #0]
 800b71a:	07de      	lsls	r6, r3, #31
 800b71c:	d508      	bpl.n	800b730 <_printf_i+0x14c>
 800b71e:	6923      	ldr	r3, [r4, #16]
 800b720:	6861      	ldr	r1, [r4, #4]
 800b722:	4299      	cmp	r1, r3
 800b724:	bfde      	ittt	le
 800b726:	2330      	movle	r3, #48	; 0x30
 800b728:	f805 3c01 	strble.w	r3, [r5, #-1]
 800b72c:	f105 35ff 	addle.w	r5, r5, #4294967295
 800b730:	1b52      	subs	r2, r2, r5
 800b732:	6122      	str	r2, [r4, #16]
 800b734:	f8cd a000 	str.w	sl, [sp]
 800b738:	464b      	mov	r3, r9
 800b73a:	aa03      	add	r2, sp, #12
 800b73c:	4621      	mov	r1, r4
 800b73e:	4640      	mov	r0, r8
 800b740:	f7ff fee2 	bl	800b508 <_printf_common>
 800b744:	3001      	adds	r0, #1
 800b746:	d14c      	bne.n	800b7e2 <_printf_i+0x1fe>
 800b748:	f04f 30ff 	mov.w	r0, #4294967295
 800b74c:	b004      	add	sp, #16
 800b74e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b752:	4835      	ldr	r0, [pc, #212]	; (800b828 <_printf_i+0x244>)
 800b754:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800b758:	6829      	ldr	r1, [r5, #0]
 800b75a:	6823      	ldr	r3, [r4, #0]
 800b75c:	f851 6b04 	ldr.w	r6, [r1], #4
 800b760:	6029      	str	r1, [r5, #0]
 800b762:	061d      	lsls	r5, r3, #24
 800b764:	d514      	bpl.n	800b790 <_printf_i+0x1ac>
 800b766:	07df      	lsls	r7, r3, #31
 800b768:	bf44      	itt	mi
 800b76a:	f043 0320 	orrmi.w	r3, r3, #32
 800b76e:	6023      	strmi	r3, [r4, #0]
 800b770:	b91e      	cbnz	r6, 800b77a <_printf_i+0x196>
 800b772:	6823      	ldr	r3, [r4, #0]
 800b774:	f023 0320 	bic.w	r3, r3, #32
 800b778:	6023      	str	r3, [r4, #0]
 800b77a:	2310      	movs	r3, #16
 800b77c:	e7b0      	b.n	800b6e0 <_printf_i+0xfc>
 800b77e:	6823      	ldr	r3, [r4, #0]
 800b780:	f043 0320 	orr.w	r3, r3, #32
 800b784:	6023      	str	r3, [r4, #0]
 800b786:	2378      	movs	r3, #120	; 0x78
 800b788:	4828      	ldr	r0, [pc, #160]	; (800b82c <_printf_i+0x248>)
 800b78a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800b78e:	e7e3      	b.n	800b758 <_printf_i+0x174>
 800b790:	0659      	lsls	r1, r3, #25
 800b792:	bf48      	it	mi
 800b794:	b2b6      	uxthmi	r6, r6
 800b796:	e7e6      	b.n	800b766 <_printf_i+0x182>
 800b798:	4615      	mov	r5, r2
 800b79a:	e7bb      	b.n	800b714 <_printf_i+0x130>
 800b79c:	682b      	ldr	r3, [r5, #0]
 800b79e:	6826      	ldr	r6, [r4, #0]
 800b7a0:	6961      	ldr	r1, [r4, #20]
 800b7a2:	1d18      	adds	r0, r3, #4
 800b7a4:	6028      	str	r0, [r5, #0]
 800b7a6:	0635      	lsls	r5, r6, #24
 800b7a8:	681b      	ldr	r3, [r3, #0]
 800b7aa:	d501      	bpl.n	800b7b0 <_printf_i+0x1cc>
 800b7ac:	6019      	str	r1, [r3, #0]
 800b7ae:	e002      	b.n	800b7b6 <_printf_i+0x1d2>
 800b7b0:	0670      	lsls	r0, r6, #25
 800b7b2:	d5fb      	bpl.n	800b7ac <_printf_i+0x1c8>
 800b7b4:	8019      	strh	r1, [r3, #0]
 800b7b6:	2300      	movs	r3, #0
 800b7b8:	6123      	str	r3, [r4, #16]
 800b7ba:	4615      	mov	r5, r2
 800b7bc:	e7ba      	b.n	800b734 <_printf_i+0x150>
 800b7be:	682b      	ldr	r3, [r5, #0]
 800b7c0:	1d1a      	adds	r2, r3, #4
 800b7c2:	602a      	str	r2, [r5, #0]
 800b7c4:	681d      	ldr	r5, [r3, #0]
 800b7c6:	6862      	ldr	r2, [r4, #4]
 800b7c8:	2100      	movs	r1, #0
 800b7ca:	4628      	mov	r0, r5
 800b7cc:	f7f4 fd28 	bl	8000220 <memchr>
 800b7d0:	b108      	cbz	r0, 800b7d6 <_printf_i+0x1f2>
 800b7d2:	1b40      	subs	r0, r0, r5
 800b7d4:	6060      	str	r0, [r4, #4]
 800b7d6:	6863      	ldr	r3, [r4, #4]
 800b7d8:	6123      	str	r3, [r4, #16]
 800b7da:	2300      	movs	r3, #0
 800b7dc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800b7e0:	e7a8      	b.n	800b734 <_printf_i+0x150>
 800b7e2:	6923      	ldr	r3, [r4, #16]
 800b7e4:	462a      	mov	r2, r5
 800b7e6:	4649      	mov	r1, r9
 800b7e8:	4640      	mov	r0, r8
 800b7ea:	47d0      	blx	sl
 800b7ec:	3001      	adds	r0, #1
 800b7ee:	d0ab      	beq.n	800b748 <_printf_i+0x164>
 800b7f0:	6823      	ldr	r3, [r4, #0]
 800b7f2:	079b      	lsls	r3, r3, #30
 800b7f4:	d413      	bmi.n	800b81e <_printf_i+0x23a>
 800b7f6:	68e0      	ldr	r0, [r4, #12]
 800b7f8:	9b03      	ldr	r3, [sp, #12]
 800b7fa:	4298      	cmp	r0, r3
 800b7fc:	bfb8      	it	lt
 800b7fe:	4618      	movlt	r0, r3
 800b800:	e7a4      	b.n	800b74c <_printf_i+0x168>
 800b802:	2301      	movs	r3, #1
 800b804:	4632      	mov	r2, r6
 800b806:	4649      	mov	r1, r9
 800b808:	4640      	mov	r0, r8
 800b80a:	47d0      	blx	sl
 800b80c:	3001      	adds	r0, #1
 800b80e:	d09b      	beq.n	800b748 <_printf_i+0x164>
 800b810:	3501      	adds	r5, #1
 800b812:	68e3      	ldr	r3, [r4, #12]
 800b814:	9903      	ldr	r1, [sp, #12]
 800b816:	1a5b      	subs	r3, r3, r1
 800b818:	42ab      	cmp	r3, r5
 800b81a:	dcf2      	bgt.n	800b802 <_printf_i+0x21e>
 800b81c:	e7eb      	b.n	800b7f6 <_printf_i+0x212>
 800b81e:	2500      	movs	r5, #0
 800b820:	f104 0619 	add.w	r6, r4, #25
 800b824:	e7f5      	b.n	800b812 <_printf_i+0x22e>
 800b826:	bf00      	nop
 800b828:	0800f2b2 	.word	0x0800f2b2
 800b82c:	0800f2c3 	.word	0x0800f2c3

0800b830 <siprintf>:
 800b830:	b40e      	push	{r1, r2, r3}
 800b832:	b500      	push	{lr}
 800b834:	b09c      	sub	sp, #112	; 0x70
 800b836:	ab1d      	add	r3, sp, #116	; 0x74
 800b838:	9002      	str	r0, [sp, #8]
 800b83a:	9006      	str	r0, [sp, #24]
 800b83c:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800b840:	4809      	ldr	r0, [pc, #36]	; (800b868 <siprintf+0x38>)
 800b842:	9107      	str	r1, [sp, #28]
 800b844:	9104      	str	r1, [sp, #16]
 800b846:	4909      	ldr	r1, [pc, #36]	; (800b86c <siprintf+0x3c>)
 800b848:	f853 2b04 	ldr.w	r2, [r3], #4
 800b84c:	9105      	str	r1, [sp, #20]
 800b84e:	6800      	ldr	r0, [r0, #0]
 800b850:	9301      	str	r3, [sp, #4]
 800b852:	a902      	add	r1, sp, #8
 800b854:	f001 fb76 	bl	800cf44 <_svfiprintf_r>
 800b858:	9b02      	ldr	r3, [sp, #8]
 800b85a:	2200      	movs	r2, #0
 800b85c:	701a      	strb	r2, [r3, #0]
 800b85e:	b01c      	add	sp, #112	; 0x70
 800b860:	f85d eb04 	ldr.w	lr, [sp], #4
 800b864:	b003      	add	sp, #12
 800b866:	4770      	bx	lr
 800b868:	20000078 	.word	0x20000078
 800b86c:	ffff0208 	.word	0xffff0208

0800b870 <quorem>:
 800b870:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b874:	6903      	ldr	r3, [r0, #16]
 800b876:	690c      	ldr	r4, [r1, #16]
 800b878:	42a3      	cmp	r3, r4
 800b87a:	4607      	mov	r7, r0
 800b87c:	f2c0 8081 	blt.w	800b982 <quorem+0x112>
 800b880:	3c01      	subs	r4, #1
 800b882:	f101 0814 	add.w	r8, r1, #20
 800b886:	f100 0514 	add.w	r5, r0, #20
 800b88a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800b88e:	9301      	str	r3, [sp, #4]
 800b890:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800b894:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800b898:	3301      	adds	r3, #1
 800b89a:	429a      	cmp	r2, r3
 800b89c:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800b8a0:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800b8a4:	fbb2 f6f3 	udiv	r6, r2, r3
 800b8a8:	d331      	bcc.n	800b90e <quorem+0x9e>
 800b8aa:	f04f 0e00 	mov.w	lr, #0
 800b8ae:	4640      	mov	r0, r8
 800b8b0:	46ac      	mov	ip, r5
 800b8b2:	46f2      	mov	sl, lr
 800b8b4:	f850 2b04 	ldr.w	r2, [r0], #4
 800b8b8:	b293      	uxth	r3, r2
 800b8ba:	fb06 e303 	mla	r3, r6, r3, lr
 800b8be:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800b8c2:	b29b      	uxth	r3, r3
 800b8c4:	ebaa 0303 	sub.w	r3, sl, r3
 800b8c8:	f8dc a000 	ldr.w	sl, [ip]
 800b8cc:	0c12      	lsrs	r2, r2, #16
 800b8ce:	fa13 f38a 	uxtah	r3, r3, sl
 800b8d2:	fb06 e202 	mla	r2, r6, r2, lr
 800b8d6:	9300      	str	r3, [sp, #0]
 800b8d8:	9b00      	ldr	r3, [sp, #0]
 800b8da:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800b8de:	b292      	uxth	r2, r2
 800b8e0:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800b8e4:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800b8e8:	f8bd 3000 	ldrh.w	r3, [sp]
 800b8ec:	4581      	cmp	r9, r0
 800b8ee:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800b8f2:	f84c 3b04 	str.w	r3, [ip], #4
 800b8f6:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800b8fa:	d2db      	bcs.n	800b8b4 <quorem+0x44>
 800b8fc:	f855 300b 	ldr.w	r3, [r5, fp]
 800b900:	b92b      	cbnz	r3, 800b90e <quorem+0x9e>
 800b902:	9b01      	ldr	r3, [sp, #4]
 800b904:	3b04      	subs	r3, #4
 800b906:	429d      	cmp	r5, r3
 800b908:	461a      	mov	r2, r3
 800b90a:	d32e      	bcc.n	800b96a <quorem+0xfa>
 800b90c:	613c      	str	r4, [r7, #16]
 800b90e:	4638      	mov	r0, r7
 800b910:	f001 f8c4 	bl	800ca9c <__mcmp>
 800b914:	2800      	cmp	r0, #0
 800b916:	db24      	blt.n	800b962 <quorem+0xf2>
 800b918:	3601      	adds	r6, #1
 800b91a:	4628      	mov	r0, r5
 800b91c:	f04f 0c00 	mov.w	ip, #0
 800b920:	f858 2b04 	ldr.w	r2, [r8], #4
 800b924:	f8d0 e000 	ldr.w	lr, [r0]
 800b928:	b293      	uxth	r3, r2
 800b92a:	ebac 0303 	sub.w	r3, ip, r3
 800b92e:	0c12      	lsrs	r2, r2, #16
 800b930:	fa13 f38e 	uxtah	r3, r3, lr
 800b934:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800b938:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800b93c:	b29b      	uxth	r3, r3
 800b93e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800b942:	45c1      	cmp	r9, r8
 800b944:	f840 3b04 	str.w	r3, [r0], #4
 800b948:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800b94c:	d2e8      	bcs.n	800b920 <quorem+0xb0>
 800b94e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800b952:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800b956:	b922      	cbnz	r2, 800b962 <quorem+0xf2>
 800b958:	3b04      	subs	r3, #4
 800b95a:	429d      	cmp	r5, r3
 800b95c:	461a      	mov	r2, r3
 800b95e:	d30a      	bcc.n	800b976 <quorem+0x106>
 800b960:	613c      	str	r4, [r7, #16]
 800b962:	4630      	mov	r0, r6
 800b964:	b003      	add	sp, #12
 800b966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b96a:	6812      	ldr	r2, [r2, #0]
 800b96c:	3b04      	subs	r3, #4
 800b96e:	2a00      	cmp	r2, #0
 800b970:	d1cc      	bne.n	800b90c <quorem+0x9c>
 800b972:	3c01      	subs	r4, #1
 800b974:	e7c7      	b.n	800b906 <quorem+0x96>
 800b976:	6812      	ldr	r2, [r2, #0]
 800b978:	3b04      	subs	r3, #4
 800b97a:	2a00      	cmp	r2, #0
 800b97c:	d1f0      	bne.n	800b960 <quorem+0xf0>
 800b97e:	3c01      	subs	r4, #1
 800b980:	e7eb      	b.n	800b95a <quorem+0xea>
 800b982:	2000      	movs	r0, #0
 800b984:	e7ee      	b.n	800b964 <quorem+0xf4>
	...

0800b988 <_dtoa_r>:
 800b988:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b98c:	ed2d 8b04 	vpush	{d8-d9}
 800b990:	ec57 6b10 	vmov	r6, r7, d0
 800b994:	b093      	sub	sp, #76	; 0x4c
 800b996:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800b998:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 800b99c:	9106      	str	r1, [sp, #24]
 800b99e:	ee10 aa10 	vmov	sl, s0
 800b9a2:	4604      	mov	r4, r0
 800b9a4:	9209      	str	r2, [sp, #36]	; 0x24
 800b9a6:	930c      	str	r3, [sp, #48]	; 0x30
 800b9a8:	46bb      	mov	fp, r7
 800b9aa:	b975      	cbnz	r5, 800b9ca <_dtoa_r+0x42>
 800b9ac:	2010      	movs	r0, #16
 800b9ae:	f000 fddd 	bl	800c56c <malloc>
 800b9b2:	4602      	mov	r2, r0
 800b9b4:	6260      	str	r0, [r4, #36]	; 0x24
 800b9b6:	b920      	cbnz	r0, 800b9c2 <_dtoa_r+0x3a>
 800b9b8:	4ba7      	ldr	r3, [pc, #668]	; (800bc58 <_dtoa_r+0x2d0>)
 800b9ba:	21ea      	movs	r1, #234	; 0xea
 800b9bc:	48a7      	ldr	r0, [pc, #668]	; (800bc5c <_dtoa_r+0x2d4>)
 800b9be:	f001 fbd1 	bl	800d164 <__assert_func>
 800b9c2:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800b9c6:	6005      	str	r5, [r0, #0]
 800b9c8:	60c5      	str	r5, [r0, #12]
 800b9ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b9cc:	6819      	ldr	r1, [r3, #0]
 800b9ce:	b151      	cbz	r1, 800b9e6 <_dtoa_r+0x5e>
 800b9d0:	685a      	ldr	r2, [r3, #4]
 800b9d2:	604a      	str	r2, [r1, #4]
 800b9d4:	2301      	movs	r3, #1
 800b9d6:	4093      	lsls	r3, r2
 800b9d8:	608b      	str	r3, [r1, #8]
 800b9da:	4620      	mov	r0, r4
 800b9dc:	f000 fe1c 	bl	800c618 <_Bfree>
 800b9e0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b9e2:	2200      	movs	r2, #0
 800b9e4:	601a      	str	r2, [r3, #0]
 800b9e6:	1e3b      	subs	r3, r7, #0
 800b9e8:	bfaa      	itet	ge
 800b9ea:	2300      	movge	r3, #0
 800b9ec:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 800b9f0:	f8c8 3000 	strge.w	r3, [r8]
 800b9f4:	4b9a      	ldr	r3, [pc, #616]	; (800bc60 <_dtoa_r+0x2d8>)
 800b9f6:	bfbc      	itt	lt
 800b9f8:	2201      	movlt	r2, #1
 800b9fa:	f8c8 2000 	strlt.w	r2, [r8]
 800b9fe:	ea33 030b 	bics.w	r3, r3, fp
 800ba02:	d11b      	bne.n	800ba3c <_dtoa_r+0xb4>
 800ba04:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800ba06:	f242 730f 	movw	r3, #9999	; 0x270f
 800ba0a:	6013      	str	r3, [r2, #0]
 800ba0c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800ba10:	4333      	orrs	r3, r6
 800ba12:	f000 8592 	beq.w	800c53a <_dtoa_r+0xbb2>
 800ba16:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800ba18:	b963      	cbnz	r3, 800ba34 <_dtoa_r+0xac>
 800ba1a:	4b92      	ldr	r3, [pc, #584]	; (800bc64 <_dtoa_r+0x2dc>)
 800ba1c:	e022      	b.n	800ba64 <_dtoa_r+0xdc>
 800ba1e:	4b92      	ldr	r3, [pc, #584]	; (800bc68 <_dtoa_r+0x2e0>)
 800ba20:	9301      	str	r3, [sp, #4]
 800ba22:	3308      	adds	r3, #8
 800ba24:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800ba26:	6013      	str	r3, [r2, #0]
 800ba28:	9801      	ldr	r0, [sp, #4]
 800ba2a:	b013      	add	sp, #76	; 0x4c
 800ba2c:	ecbd 8b04 	vpop	{d8-d9}
 800ba30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ba34:	4b8b      	ldr	r3, [pc, #556]	; (800bc64 <_dtoa_r+0x2dc>)
 800ba36:	9301      	str	r3, [sp, #4]
 800ba38:	3303      	adds	r3, #3
 800ba3a:	e7f3      	b.n	800ba24 <_dtoa_r+0x9c>
 800ba3c:	2200      	movs	r2, #0
 800ba3e:	2300      	movs	r3, #0
 800ba40:	4650      	mov	r0, sl
 800ba42:	4659      	mov	r1, fp
 800ba44:	f7f5 f860 	bl	8000b08 <__aeabi_dcmpeq>
 800ba48:	ec4b ab19 	vmov	d9, sl, fp
 800ba4c:	4680      	mov	r8, r0
 800ba4e:	b158      	cbz	r0, 800ba68 <_dtoa_r+0xe0>
 800ba50:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800ba52:	2301      	movs	r3, #1
 800ba54:	6013      	str	r3, [r2, #0]
 800ba56:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800ba58:	2b00      	cmp	r3, #0
 800ba5a:	f000 856b 	beq.w	800c534 <_dtoa_r+0xbac>
 800ba5e:	4883      	ldr	r0, [pc, #524]	; (800bc6c <_dtoa_r+0x2e4>)
 800ba60:	6018      	str	r0, [r3, #0]
 800ba62:	1e43      	subs	r3, r0, #1
 800ba64:	9301      	str	r3, [sp, #4]
 800ba66:	e7df      	b.n	800ba28 <_dtoa_r+0xa0>
 800ba68:	ec4b ab10 	vmov	d0, sl, fp
 800ba6c:	aa10      	add	r2, sp, #64	; 0x40
 800ba6e:	a911      	add	r1, sp, #68	; 0x44
 800ba70:	4620      	mov	r0, r4
 800ba72:	f001 f8b9 	bl	800cbe8 <__d2b>
 800ba76:	f3cb 550a 	ubfx	r5, fp, #20, #11
 800ba7a:	ee08 0a10 	vmov	s16, r0
 800ba7e:	2d00      	cmp	r5, #0
 800ba80:	f000 8084 	beq.w	800bb8c <_dtoa_r+0x204>
 800ba84:	ee19 3a90 	vmov	r3, s19
 800ba88:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800ba8c:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 800ba90:	4656      	mov	r6, sl
 800ba92:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 800ba96:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800ba9a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 800ba9e:	4b74      	ldr	r3, [pc, #464]	; (800bc70 <_dtoa_r+0x2e8>)
 800baa0:	2200      	movs	r2, #0
 800baa2:	4630      	mov	r0, r6
 800baa4:	4639      	mov	r1, r7
 800baa6:	f7f4 fc0f 	bl	80002c8 <__aeabi_dsub>
 800baaa:	a365      	add	r3, pc, #404	; (adr r3, 800bc40 <_dtoa_r+0x2b8>)
 800baac:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bab0:	f7f4 fdc2 	bl	8000638 <__aeabi_dmul>
 800bab4:	a364      	add	r3, pc, #400	; (adr r3, 800bc48 <_dtoa_r+0x2c0>)
 800bab6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800baba:	f7f4 fc07 	bl	80002cc <__adddf3>
 800babe:	4606      	mov	r6, r0
 800bac0:	4628      	mov	r0, r5
 800bac2:	460f      	mov	r7, r1
 800bac4:	f7f4 fd4e 	bl	8000564 <__aeabi_i2d>
 800bac8:	a361      	add	r3, pc, #388	; (adr r3, 800bc50 <_dtoa_r+0x2c8>)
 800baca:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bace:	f7f4 fdb3 	bl	8000638 <__aeabi_dmul>
 800bad2:	4602      	mov	r2, r0
 800bad4:	460b      	mov	r3, r1
 800bad6:	4630      	mov	r0, r6
 800bad8:	4639      	mov	r1, r7
 800bada:	f7f4 fbf7 	bl	80002cc <__adddf3>
 800bade:	4606      	mov	r6, r0
 800bae0:	460f      	mov	r7, r1
 800bae2:	f7f5 f859 	bl	8000b98 <__aeabi_d2iz>
 800bae6:	2200      	movs	r2, #0
 800bae8:	9000      	str	r0, [sp, #0]
 800baea:	2300      	movs	r3, #0
 800baec:	4630      	mov	r0, r6
 800baee:	4639      	mov	r1, r7
 800baf0:	f7f5 f814 	bl	8000b1c <__aeabi_dcmplt>
 800baf4:	b150      	cbz	r0, 800bb0c <_dtoa_r+0x184>
 800baf6:	9800      	ldr	r0, [sp, #0]
 800baf8:	f7f4 fd34 	bl	8000564 <__aeabi_i2d>
 800bafc:	4632      	mov	r2, r6
 800bafe:	463b      	mov	r3, r7
 800bb00:	f7f5 f802 	bl	8000b08 <__aeabi_dcmpeq>
 800bb04:	b910      	cbnz	r0, 800bb0c <_dtoa_r+0x184>
 800bb06:	9b00      	ldr	r3, [sp, #0]
 800bb08:	3b01      	subs	r3, #1
 800bb0a:	9300      	str	r3, [sp, #0]
 800bb0c:	9b00      	ldr	r3, [sp, #0]
 800bb0e:	2b16      	cmp	r3, #22
 800bb10:	d85a      	bhi.n	800bbc8 <_dtoa_r+0x240>
 800bb12:	9a00      	ldr	r2, [sp, #0]
 800bb14:	4b57      	ldr	r3, [pc, #348]	; (800bc74 <_dtoa_r+0x2ec>)
 800bb16:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800bb1a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bb1e:	ec51 0b19 	vmov	r0, r1, d9
 800bb22:	f7f4 fffb 	bl	8000b1c <__aeabi_dcmplt>
 800bb26:	2800      	cmp	r0, #0
 800bb28:	d050      	beq.n	800bbcc <_dtoa_r+0x244>
 800bb2a:	9b00      	ldr	r3, [sp, #0]
 800bb2c:	3b01      	subs	r3, #1
 800bb2e:	9300      	str	r3, [sp, #0]
 800bb30:	2300      	movs	r3, #0
 800bb32:	930b      	str	r3, [sp, #44]	; 0x2c
 800bb34:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800bb36:	1b5d      	subs	r5, r3, r5
 800bb38:	1e6b      	subs	r3, r5, #1
 800bb3a:	9305      	str	r3, [sp, #20]
 800bb3c:	bf45      	ittet	mi
 800bb3e:	f1c5 0301 	rsbmi	r3, r5, #1
 800bb42:	9304      	strmi	r3, [sp, #16]
 800bb44:	2300      	movpl	r3, #0
 800bb46:	2300      	movmi	r3, #0
 800bb48:	bf4c      	ite	mi
 800bb4a:	9305      	strmi	r3, [sp, #20]
 800bb4c:	9304      	strpl	r3, [sp, #16]
 800bb4e:	9b00      	ldr	r3, [sp, #0]
 800bb50:	2b00      	cmp	r3, #0
 800bb52:	db3d      	blt.n	800bbd0 <_dtoa_r+0x248>
 800bb54:	9b05      	ldr	r3, [sp, #20]
 800bb56:	9a00      	ldr	r2, [sp, #0]
 800bb58:	920a      	str	r2, [sp, #40]	; 0x28
 800bb5a:	4413      	add	r3, r2
 800bb5c:	9305      	str	r3, [sp, #20]
 800bb5e:	2300      	movs	r3, #0
 800bb60:	9307      	str	r3, [sp, #28]
 800bb62:	9b06      	ldr	r3, [sp, #24]
 800bb64:	2b09      	cmp	r3, #9
 800bb66:	f200 8089 	bhi.w	800bc7c <_dtoa_r+0x2f4>
 800bb6a:	2b05      	cmp	r3, #5
 800bb6c:	bfc4      	itt	gt
 800bb6e:	3b04      	subgt	r3, #4
 800bb70:	9306      	strgt	r3, [sp, #24]
 800bb72:	9b06      	ldr	r3, [sp, #24]
 800bb74:	f1a3 0302 	sub.w	r3, r3, #2
 800bb78:	bfcc      	ite	gt
 800bb7a:	2500      	movgt	r5, #0
 800bb7c:	2501      	movle	r5, #1
 800bb7e:	2b03      	cmp	r3, #3
 800bb80:	f200 8087 	bhi.w	800bc92 <_dtoa_r+0x30a>
 800bb84:	e8df f003 	tbb	[pc, r3]
 800bb88:	59383a2d 	.word	0x59383a2d
 800bb8c:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 800bb90:	441d      	add	r5, r3
 800bb92:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800bb96:	2b20      	cmp	r3, #32
 800bb98:	bfc1      	itttt	gt
 800bb9a:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800bb9e:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 800bba2:	fa0b f303 	lslgt.w	r3, fp, r3
 800bba6:	fa26 f000 	lsrgt.w	r0, r6, r0
 800bbaa:	bfda      	itte	le
 800bbac:	f1c3 0320 	rsble	r3, r3, #32
 800bbb0:	fa06 f003 	lslle.w	r0, r6, r3
 800bbb4:	4318      	orrgt	r0, r3
 800bbb6:	f7f4 fcc5 	bl	8000544 <__aeabi_ui2d>
 800bbba:	2301      	movs	r3, #1
 800bbbc:	4606      	mov	r6, r0
 800bbbe:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 800bbc2:	3d01      	subs	r5, #1
 800bbc4:	930e      	str	r3, [sp, #56]	; 0x38
 800bbc6:	e76a      	b.n	800ba9e <_dtoa_r+0x116>
 800bbc8:	2301      	movs	r3, #1
 800bbca:	e7b2      	b.n	800bb32 <_dtoa_r+0x1aa>
 800bbcc:	900b      	str	r0, [sp, #44]	; 0x2c
 800bbce:	e7b1      	b.n	800bb34 <_dtoa_r+0x1ac>
 800bbd0:	9b04      	ldr	r3, [sp, #16]
 800bbd2:	9a00      	ldr	r2, [sp, #0]
 800bbd4:	1a9b      	subs	r3, r3, r2
 800bbd6:	9304      	str	r3, [sp, #16]
 800bbd8:	4253      	negs	r3, r2
 800bbda:	9307      	str	r3, [sp, #28]
 800bbdc:	2300      	movs	r3, #0
 800bbde:	930a      	str	r3, [sp, #40]	; 0x28
 800bbe0:	e7bf      	b.n	800bb62 <_dtoa_r+0x1da>
 800bbe2:	2300      	movs	r3, #0
 800bbe4:	9308      	str	r3, [sp, #32]
 800bbe6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bbe8:	2b00      	cmp	r3, #0
 800bbea:	dc55      	bgt.n	800bc98 <_dtoa_r+0x310>
 800bbec:	2301      	movs	r3, #1
 800bbee:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800bbf2:	461a      	mov	r2, r3
 800bbf4:	9209      	str	r2, [sp, #36]	; 0x24
 800bbf6:	e00c      	b.n	800bc12 <_dtoa_r+0x28a>
 800bbf8:	2301      	movs	r3, #1
 800bbfa:	e7f3      	b.n	800bbe4 <_dtoa_r+0x25c>
 800bbfc:	2300      	movs	r3, #0
 800bbfe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800bc00:	9308      	str	r3, [sp, #32]
 800bc02:	9b00      	ldr	r3, [sp, #0]
 800bc04:	4413      	add	r3, r2
 800bc06:	9302      	str	r3, [sp, #8]
 800bc08:	3301      	adds	r3, #1
 800bc0a:	2b01      	cmp	r3, #1
 800bc0c:	9303      	str	r3, [sp, #12]
 800bc0e:	bfb8      	it	lt
 800bc10:	2301      	movlt	r3, #1
 800bc12:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800bc14:	2200      	movs	r2, #0
 800bc16:	6042      	str	r2, [r0, #4]
 800bc18:	2204      	movs	r2, #4
 800bc1a:	f102 0614 	add.w	r6, r2, #20
 800bc1e:	429e      	cmp	r6, r3
 800bc20:	6841      	ldr	r1, [r0, #4]
 800bc22:	d93d      	bls.n	800bca0 <_dtoa_r+0x318>
 800bc24:	4620      	mov	r0, r4
 800bc26:	f000 fcb7 	bl	800c598 <_Balloc>
 800bc2a:	9001      	str	r0, [sp, #4]
 800bc2c:	2800      	cmp	r0, #0
 800bc2e:	d13b      	bne.n	800bca8 <_dtoa_r+0x320>
 800bc30:	4b11      	ldr	r3, [pc, #68]	; (800bc78 <_dtoa_r+0x2f0>)
 800bc32:	4602      	mov	r2, r0
 800bc34:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800bc38:	e6c0      	b.n	800b9bc <_dtoa_r+0x34>
 800bc3a:	2301      	movs	r3, #1
 800bc3c:	e7df      	b.n	800bbfe <_dtoa_r+0x276>
 800bc3e:	bf00      	nop
 800bc40:	636f4361 	.word	0x636f4361
 800bc44:	3fd287a7 	.word	0x3fd287a7
 800bc48:	8b60c8b3 	.word	0x8b60c8b3
 800bc4c:	3fc68a28 	.word	0x3fc68a28
 800bc50:	509f79fb 	.word	0x509f79fb
 800bc54:	3fd34413 	.word	0x3fd34413
 800bc58:	0800f2e1 	.word	0x0800f2e1
 800bc5c:	0800f2f8 	.word	0x0800f2f8
 800bc60:	7ff00000 	.word	0x7ff00000
 800bc64:	0800f2dd 	.word	0x0800f2dd
 800bc68:	0800f2d4 	.word	0x0800f2d4
 800bc6c:	0800f2b1 	.word	0x0800f2b1
 800bc70:	3ff80000 	.word	0x3ff80000
 800bc74:	0800f3e8 	.word	0x0800f3e8
 800bc78:	0800f353 	.word	0x0800f353
 800bc7c:	2501      	movs	r5, #1
 800bc7e:	2300      	movs	r3, #0
 800bc80:	9306      	str	r3, [sp, #24]
 800bc82:	9508      	str	r5, [sp, #32]
 800bc84:	f04f 33ff 	mov.w	r3, #4294967295
 800bc88:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800bc8c:	2200      	movs	r2, #0
 800bc8e:	2312      	movs	r3, #18
 800bc90:	e7b0      	b.n	800bbf4 <_dtoa_r+0x26c>
 800bc92:	2301      	movs	r3, #1
 800bc94:	9308      	str	r3, [sp, #32]
 800bc96:	e7f5      	b.n	800bc84 <_dtoa_r+0x2fc>
 800bc98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bc9a:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800bc9e:	e7b8      	b.n	800bc12 <_dtoa_r+0x28a>
 800bca0:	3101      	adds	r1, #1
 800bca2:	6041      	str	r1, [r0, #4]
 800bca4:	0052      	lsls	r2, r2, #1
 800bca6:	e7b8      	b.n	800bc1a <_dtoa_r+0x292>
 800bca8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800bcaa:	9a01      	ldr	r2, [sp, #4]
 800bcac:	601a      	str	r2, [r3, #0]
 800bcae:	9b03      	ldr	r3, [sp, #12]
 800bcb0:	2b0e      	cmp	r3, #14
 800bcb2:	f200 809d 	bhi.w	800bdf0 <_dtoa_r+0x468>
 800bcb6:	2d00      	cmp	r5, #0
 800bcb8:	f000 809a 	beq.w	800bdf0 <_dtoa_r+0x468>
 800bcbc:	9b00      	ldr	r3, [sp, #0]
 800bcbe:	2b00      	cmp	r3, #0
 800bcc0:	dd32      	ble.n	800bd28 <_dtoa_r+0x3a0>
 800bcc2:	4ab7      	ldr	r2, [pc, #732]	; (800bfa0 <_dtoa_r+0x618>)
 800bcc4:	f003 030f 	and.w	r3, r3, #15
 800bcc8:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800bccc:	e9d3 8900 	ldrd	r8, r9, [r3]
 800bcd0:	9b00      	ldr	r3, [sp, #0]
 800bcd2:	05d8      	lsls	r0, r3, #23
 800bcd4:	ea4f 1723 	mov.w	r7, r3, asr #4
 800bcd8:	d516      	bpl.n	800bd08 <_dtoa_r+0x380>
 800bcda:	4bb2      	ldr	r3, [pc, #712]	; (800bfa4 <_dtoa_r+0x61c>)
 800bcdc:	ec51 0b19 	vmov	r0, r1, d9
 800bce0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800bce4:	f7f4 fdd2 	bl	800088c <__aeabi_ddiv>
 800bce8:	f007 070f 	and.w	r7, r7, #15
 800bcec:	4682      	mov	sl, r0
 800bcee:	468b      	mov	fp, r1
 800bcf0:	2503      	movs	r5, #3
 800bcf2:	4eac      	ldr	r6, [pc, #688]	; (800bfa4 <_dtoa_r+0x61c>)
 800bcf4:	b957      	cbnz	r7, 800bd0c <_dtoa_r+0x384>
 800bcf6:	4642      	mov	r2, r8
 800bcf8:	464b      	mov	r3, r9
 800bcfa:	4650      	mov	r0, sl
 800bcfc:	4659      	mov	r1, fp
 800bcfe:	f7f4 fdc5 	bl	800088c <__aeabi_ddiv>
 800bd02:	4682      	mov	sl, r0
 800bd04:	468b      	mov	fp, r1
 800bd06:	e028      	b.n	800bd5a <_dtoa_r+0x3d2>
 800bd08:	2502      	movs	r5, #2
 800bd0a:	e7f2      	b.n	800bcf2 <_dtoa_r+0x36a>
 800bd0c:	07f9      	lsls	r1, r7, #31
 800bd0e:	d508      	bpl.n	800bd22 <_dtoa_r+0x39a>
 800bd10:	4640      	mov	r0, r8
 800bd12:	4649      	mov	r1, r9
 800bd14:	e9d6 2300 	ldrd	r2, r3, [r6]
 800bd18:	f7f4 fc8e 	bl	8000638 <__aeabi_dmul>
 800bd1c:	3501      	adds	r5, #1
 800bd1e:	4680      	mov	r8, r0
 800bd20:	4689      	mov	r9, r1
 800bd22:	107f      	asrs	r7, r7, #1
 800bd24:	3608      	adds	r6, #8
 800bd26:	e7e5      	b.n	800bcf4 <_dtoa_r+0x36c>
 800bd28:	f000 809b 	beq.w	800be62 <_dtoa_r+0x4da>
 800bd2c:	9b00      	ldr	r3, [sp, #0]
 800bd2e:	4f9d      	ldr	r7, [pc, #628]	; (800bfa4 <_dtoa_r+0x61c>)
 800bd30:	425e      	negs	r6, r3
 800bd32:	4b9b      	ldr	r3, [pc, #620]	; (800bfa0 <_dtoa_r+0x618>)
 800bd34:	f006 020f 	and.w	r2, r6, #15
 800bd38:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800bd3c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bd40:	ec51 0b19 	vmov	r0, r1, d9
 800bd44:	f7f4 fc78 	bl	8000638 <__aeabi_dmul>
 800bd48:	1136      	asrs	r6, r6, #4
 800bd4a:	4682      	mov	sl, r0
 800bd4c:	468b      	mov	fp, r1
 800bd4e:	2300      	movs	r3, #0
 800bd50:	2502      	movs	r5, #2
 800bd52:	2e00      	cmp	r6, #0
 800bd54:	d17a      	bne.n	800be4c <_dtoa_r+0x4c4>
 800bd56:	2b00      	cmp	r3, #0
 800bd58:	d1d3      	bne.n	800bd02 <_dtoa_r+0x37a>
 800bd5a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800bd5c:	2b00      	cmp	r3, #0
 800bd5e:	f000 8082 	beq.w	800be66 <_dtoa_r+0x4de>
 800bd62:	4b91      	ldr	r3, [pc, #580]	; (800bfa8 <_dtoa_r+0x620>)
 800bd64:	2200      	movs	r2, #0
 800bd66:	4650      	mov	r0, sl
 800bd68:	4659      	mov	r1, fp
 800bd6a:	f7f4 fed7 	bl	8000b1c <__aeabi_dcmplt>
 800bd6e:	2800      	cmp	r0, #0
 800bd70:	d079      	beq.n	800be66 <_dtoa_r+0x4de>
 800bd72:	9b03      	ldr	r3, [sp, #12]
 800bd74:	2b00      	cmp	r3, #0
 800bd76:	d076      	beq.n	800be66 <_dtoa_r+0x4de>
 800bd78:	9b02      	ldr	r3, [sp, #8]
 800bd7a:	2b00      	cmp	r3, #0
 800bd7c:	dd36      	ble.n	800bdec <_dtoa_r+0x464>
 800bd7e:	9b00      	ldr	r3, [sp, #0]
 800bd80:	4650      	mov	r0, sl
 800bd82:	4659      	mov	r1, fp
 800bd84:	1e5f      	subs	r7, r3, #1
 800bd86:	2200      	movs	r2, #0
 800bd88:	4b88      	ldr	r3, [pc, #544]	; (800bfac <_dtoa_r+0x624>)
 800bd8a:	f7f4 fc55 	bl	8000638 <__aeabi_dmul>
 800bd8e:	9e02      	ldr	r6, [sp, #8]
 800bd90:	4682      	mov	sl, r0
 800bd92:	468b      	mov	fp, r1
 800bd94:	3501      	adds	r5, #1
 800bd96:	4628      	mov	r0, r5
 800bd98:	f7f4 fbe4 	bl	8000564 <__aeabi_i2d>
 800bd9c:	4652      	mov	r2, sl
 800bd9e:	465b      	mov	r3, fp
 800bda0:	f7f4 fc4a 	bl	8000638 <__aeabi_dmul>
 800bda4:	4b82      	ldr	r3, [pc, #520]	; (800bfb0 <_dtoa_r+0x628>)
 800bda6:	2200      	movs	r2, #0
 800bda8:	f7f4 fa90 	bl	80002cc <__adddf3>
 800bdac:	46d0      	mov	r8, sl
 800bdae:	46d9      	mov	r9, fp
 800bdb0:	4682      	mov	sl, r0
 800bdb2:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 800bdb6:	2e00      	cmp	r6, #0
 800bdb8:	d158      	bne.n	800be6c <_dtoa_r+0x4e4>
 800bdba:	4b7e      	ldr	r3, [pc, #504]	; (800bfb4 <_dtoa_r+0x62c>)
 800bdbc:	2200      	movs	r2, #0
 800bdbe:	4640      	mov	r0, r8
 800bdc0:	4649      	mov	r1, r9
 800bdc2:	f7f4 fa81 	bl	80002c8 <__aeabi_dsub>
 800bdc6:	4652      	mov	r2, sl
 800bdc8:	465b      	mov	r3, fp
 800bdca:	4680      	mov	r8, r0
 800bdcc:	4689      	mov	r9, r1
 800bdce:	f7f4 fec3 	bl	8000b58 <__aeabi_dcmpgt>
 800bdd2:	2800      	cmp	r0, #0
 800bdd4:	f040 8295 	bne.w	800c302 <_dtoa_r+0x97a>
 800bdd8:	4652      	mov	r2, sl
 800bdda:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800bdde:	4640      	mov	r0, r8
 800bde0:	4649      	mov	r1, r9
 800bde2:	f7f4 fe9b 	bl	8000b1c <__aeabi_dcmplt>
 800bde6:	2800      	cmp	r0, #0
 800bde8:	f040 8289 	bne.w	800c2fe <_dtoa_r+0x976>
 800bdec:	ec5b ab19 	vmov	sl, fp, d9
 800bdf0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800bdf2:	2b00      	cmp	r3, #0
 800bdf4:	f2c0 8148 	blt.w	800c088 <_dtoa_r+0x700>
 800bdf8:	9a00      	ldr	r2, [sp, #0]
 800bdfa:	2a0e      	cmp	r2, #14
 800bdfc:	f300 8144 	bgt.w	800c088 <_dtoa_r+0x700>
 800be00:	4b67      	ldr	r3, [pc, #412]	; (800bfa0 <_dtoa_r+0x618>)
 800be02:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800be06:	e9d3 8900 	ldrd	r8, r9, [r3]
 800be0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800be0c:	2b00      	cmp	r3, #0
 800be0e:	f280 80d5 	bge.w	800bfbc <_dtoa_r+0x634>
 800be12:	9b03      	ldr	r3, [sp, #12]
 800be14:	2b00      	cmp	r3, #0
 800be16:	f300 80d1 	bgt.w	800bfbc <_dtoa_r+0x634>
 800be1a:	f040 826f 	bne.w	800c2fc <_dtoa_r+0x974>
 800be1e:	4b65      	ldr	r3, [pc, #404]	; (800bfb4 <_dtoa_r+0x62c>)
 800be20:	2200      	movs	r2, #0
 800be22:	4640      	mov	r0, r8
 800be24:	4649      	mov	r1, r9
 800be26:	f7f4 fc07 	bl	8000638 <__aeabi_dmul>
 800be2a:	4652      	mov	r2, sl
 800be2c:	465b      	mov	r3, fp
 800be2e:	f7f4 fe89 	bl	8000b44 <__aeabi_dcmpge>
 800be32:	9e03      	ldr	r6, [sp, #12]
 800be34:	4637      	mov	r7, r6
 800be36:	2800      	cmp	r0, #0
 800be38:	f040 8245 	bne.w	800c2c6 <_dtoa_r+0x93e>
 800be3c:	9d01      	ldr	r5, [sp, #4]
 800be3e:	2331      	movs	r3, #49	; 0x31
 800be40:	f805 3b01 	strb.w	r3, [r5], #1
 800be44:	9b00      	ldr	r3, [sp, #0]
 800be46:	3301      	adds	r3, #1
 800be48:	9300      	str	r3, [sp, #0]
 800be4a:	e240      	b.n	800c2ce <_dtoa_r+0x946>
 800be4c:	07f2      	lsls	r2, r6, #31
 800be4e:	d505      	bpl.n	800be5c <_dtoa_r+0x4d4>
 800be50:	e9d7 2300 	ldrd	r2, r3, [r7]
 800be54:	f7f4 fbf0 	bl	8000638 <__aeabi_dmul>
 800be58:	3501      	adds	r5, #1
 800be5a:	2301      	movs	r3, #1
 800be5c:	1076      	asrs	r6, r6, #1
 800be5e:	3708      	adds	r7, #8
 800be60:	e777      	b.n	800bd52 <_dtoa_r+0x3ca>
 800be62:	2502      	movs	r5, #2
 800be64:	e779      	b.n	800bd5a <_dtoa_r+0x3d2>
 800be66:	9f00      	ldr	r7, [sp, #0]
 800be68:	9e03      	ldr	r6, [sp, #12]
 800be6a:	e794      	b.n	800bd96 <_dtoa_r+0x40e>
 800be6c:	9901      	ldr	r1, [sp, #4]
 800be6e:	4b4c      	ldr	r3, [pc, #304]	; (800bfa0 <_dtoa_r+0x618>)
 800be70:	4431      	add	r1, r6
 800be72:	910d      	str	r1, [sp, #52]	; 0x34
 800be74:	9908      	ldr	r1, [sp, #32]
 800be76:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800be7a:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800be7e:	2900      	cmp	r1, #0
 800be80:	d043      	beq.n	800bf0a <_dtoa_r+0x582>
 800be82:	494d      	ldr	r1, [pc, #308]	; (800bfb8 <_dtoa_r+0x630>)
 800be84:	2000      	movs	r0, #0
 800be86:	f7f4 fd01 	bl	800088c <__aeabi_ddiv>
 800be8a:	4652      	mov	r2, sl
 800be8c:	465b      	mov	r3, fp
 800be8e:	f7f4 fa1b 	bl	80002c8 <__aeabi_dsub>
 800be92:	9d01      	ldr	r5, [sp, #4]
 800be94:	4682      	mov	sl, r0
 800be96:	468b      	mov	fp, r1
 800be98:	4649      	mov	r1, r9
 800be9a:	4640      	mov	r0, r8
 800be9c:	f7f4 fe7c 	bl	8000b98 <__aeabi_d2iz>
 800bea0:	4606      	mov	r6, r0
 800bea2:	f7f4 fb5f 	bl	8000564 <__aeabi_i2d>
 800bea6:	4602      	mov	r2, r0
 800bea8:	460b      	mov	r3, r1
 800beaa:	4640      	mov	r0, r8
 800beac:	4649      	mov	r1, r9
 800beae:	f7f4 fa0b 	bl	80002c8 <__aeabi_dsub>
 800beb2:	3630      	adds	r6, #48	; 0x30
 800beb4:	f805 6b01 	strb.w	r6, [r5], #1
 800beb8:	4652      	mov	r2, sl
 800beba:	465b      	mov	r3, fp
 800bebc:	4680      	mov	r8, r0
 800bebe:	4689      	mov	r9, r1
 800bec0:	f7f4 fe2c 	bl	8000b1c <__aeabi_dcmplt>
 800bec4:	2800      	cmp	r0, #0
 800bec6:	d163      	bne.n	800bf90 <_dtoa_r+0x608>
 800bec8:	4642      	mov	r2, r8
 800beca:	464b      	mov	r3, r9
 800becc:	4936      	ldr	r1, [pc, #216]	; (800bfa8 <_dtoa_r+0x620>)
 800bece:	2000      	movs	r0, #0
 800bed0:	f7f4 f9fa 	bl	80002c8 <__aeabi_dsub>
 800bed4:	4652      	mov	r2, sl
 800bed6:	465b      	mov	r3, fp
 800bed8:	f7f4 fe20 	bl	8000b1c <__aeabi_dcmplt>
 800bedc:	2800      	cmp	r0, #0
 800bede:	f040 80b5 	bne.w	800c04c <_dtoa_r+0x6c4>
 800bee2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bee4:	429d      	cmp	r5, r3
 800bee6:	d081      	beq.n	800bdec <_dtoa_r+0x464>
 800bee8:	4b30      	ldr	r3, [pc, #192]	; (800bfac <_dtoa_r+0x624>)
 800beea:	2200      	movs	r2, #0
 800beec:	4650      	mov	r0, sl
 800beee:	4659      	mov	r1, fp
 800bef0:	f7f4 fba2 	bl	8000638 <__aeabi_dmul>
 800bef4:	4b2d      	ldr	r3, [pc, #180]	; (800bfac <_dtoa_r+0x624>)
 800bef6:	4682      	mov	sl, r0
 800bef8:	468b      	mov	fp, r1
 800befa:	4640      	mov	r0, r8
 800befc:	4649      	mov	r1, r9
 800befe:	2200      	movs	r2, #0
 800bf00:	f7f4 fb9a 	bl	8000638 <__aeabi_dmul>
 800bf04:	4680      	mov	r8, r0
 800bf06:	4689      	mov	r9, r1
 800bf08:	e7c6      	b.n	800be98 <_dtoa_r+0x510>
 800bf0a:	4650      	mov	r0, sl
 800bf0c:	4659      	mov	r1, fp
 800bf0e:	f7f4 fb93 	bl	8000638 <__aeabi_dmul>
 800bf12:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bf14:	9d01      	ldr	r5, [sp, #4]
 800bf16:	930f      	str	r3, [sp, #60]	; 0x3c
 800bf18:	4682      	mov	sl, r0
 800bf1a:	468b      	mov	fp, r1
 800bf1c:	4649      	mov	r1, r9
 800bf1e:	4640      	mov	r0, r8
 800bf20:	f7f4 fe3a 	bl	8000b98 <__aeabi_d2iz>
 800bf24:	4606      	mov	r6, r0
 800bf26:	f7f4 fb1d 	bl	8000564 <__aeabi_i2d>
 800bf2a:	3630      	adds	r6, #48	; 0x30
 800bf2c:	4602      	mov	r2, r0
 800bf2e:	460b      	mov	r3, r1
 800bf30:	4640      	mov	r0, r8
 800bf32:	4649      	mov	r1, r9
 800bf34:	f7f4 f9c8 	bl	80002c8 <__aeabi_dsub>
 800bf38:	f805 6b01 	strb.w	r6, [r5], #1
 800bf3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bf3e:	429d      	cmp	r5, r3
 800bf40:	4680      	mov	r8, r0
 800bf42:	4689      	mov	r9, r1
 800bf44:	f04f 0200 	mov.w	r2, #0
 800bf48:	d124      	bne.n	800bf94 <_dtoa_r+0x60c>
 800bf4a:	4b1b      	ldr	r3, [pc, #108]	; (800bfb8 <_dtoa_r+0x630>)
 800bf4c:	4650      	mov	r0, sl
 800bf4e:	4659      	mov	r1, fp
 800bf50:	f7f4 f9bc 	bl	80002cc <__adddf3>
 800bf54:	4602      	mov	r2, r0
 800bf56:	460b      	mov	r3, r1
 800bf58:	4640      	mov	r0, r8
 800bf5a:	4649      	mov	r1, r9
 800bf5c:	f7f4 fdfc 	bl	8000b58 <__aeabi_dcmpgt>
 800bf60:	2800      	cmp	r0, #0
 800bf62:	d173      	bne.n	800c04c <_dtoa_r+0x6c4>
 800bf64:	4652      	mov	r2, sl
 800bf66:	465b      	mov	r3, fp
 800bf68:	4913      	ldr	r1, [pc, #76]	; (800bfb8 <_dtoa_r+0x630>)
 800bf6a:	2000      	movs	r0, #0
 800bf6c:	f7f4 f9ac 	bl	80002c8 <__aeabi_dsub>
 800bf70:	4602      	mov	r2, r0
 800bf72:	460b      	mov	r3, r1
 800bf74:	4640      	mov	r0, r8
 800bf76:	4649      	mov	r1, r9
 800bf78:	f7f4 fdd0 	bl	8000b1c <__aeabi_dcmplt>
 800bf7c:	2800      	cmp	r0, #0
 800bf7e:	f43f af35 	beq.w	800bdec <_dtoa_r+0x464>
 800bf82:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800bf84:	1e6b      	subs	r3, r5, #1
 800bf86:	930f      	str	r3, [sp, #60]	; 0x3c
 800bf88:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800bf8c:	2b30      	cmp	r3, #48	; 0x30
 800bf8e:	d0f8      	beq.n	800bf82 <_dtoa_r+0x5fa>
 800bf90:	9700      	str	r7, [sp, #0]
 800bf92:	e049      	b.n	800c028 <_dtoa_r+0x6a0>
 800bf94:	4b05      	ldr	r3, [pc, #20]	; (800bfac <_dtoa_r+0x624>)
 800bf96:	f7f4 fb4f 	bl	8000638 <__aeabi_dmul>
 800bf9a:	4680      	mov	r8, r0
 800bf9c:	4689      	mov	r9, r1
 800bf9e:	e7bd      	b.n	800bf1c <_dtoa_r+0x594>
 800bfa0:	0800f3e8 	.word	0x0800f3e8
 800bfa4:	0800f3c0 	.word	0x0800f3c0
 800bfa8:	3ff00000 	.word	0x3ff00000
 800bfac:	40240000 	.word	0x40240000
 800bfb0:	401c0000 	.word	0x401c0000
 800bfb4:	40140000 	.word	0x40140000
 800bfb8:	3fe00000 	.word	0x3fe00000
 800bfbc:	9d01      	ldr	r5, [sp, #4]
 800bfbe:	4656      	mov	r6, sl
 800bfc0:	465f      	mov	r7, fp
 800bfc2:	4642      	mov	r2, r8
 800bfc4:	464b      	mov	r3, r9
 800bfc6:	4630      	mov	r0, r6
 800bfc8:	4639      	mov	r1, r7
 800bfca:	f7f4 fc5f 	bl	800088c <__aeabi_ddiv>
 800bfce:	f7f4 fde3 	bl	8000b98 <__aeabi_d2iz>
 800bfd2:	4682      	mov	sl, r0
 800bfd4:	f7f4 fac6 	bl	8000564 <__aeabi_i2d>
 800bfd8:	4642      	mov	r2, r8
 800bfda:	464b      	mov	r3, r9
 800bfdc:	f7f4 fb2c 	bl	8000638 <__aeabi_dmul>
 800bfe0:	4602      	mov	r2, r0
 800bfe2:	460b      	mov	r3, r1
 800bfe4:	4630      	mov	r0, r6
 800bfe6:	4639      	mov	r1, r7
 800bfe8:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 800bfec:	f7f4 f96c 	bl	80002c8 <__aeabi_dsub>
 800bff0:	f805 6b01 	strb.w	r6, [r5], #1
 800bff4:	9e01      	ldr	r6, [sp, #4]
 800bff6:	9f03      	ldr	r7, [sp, #12]
 800bff8:	1bae      	subs	r6, r5, r6
 800bffa:	42b7      	cmp	r7, r6
 800bffc:	4602      	mov	r2, r0
 800bffe:	460b      	mov	r3, r1
 800c000:	d135      	bne.n	800c06e <_dtoa_r+0x6e6>
 800c002:	f7f4 f963 	bl	80002cc <__adddf3>
 800c006:	4642      	mov	r2, r8
 800c008:	464b      	mov	r3, r9
 800c00a:	4606      	mov	r6, r0
 800c00c:	460f      	mov	r7, r1
 800c00e:	f7f4 fda3 	bl	8000b58 <__aeabi_dcmpgt>
 800c012:	b9d0      	cbnz	r0, 800c04a <_dtoa_r+0x6c2>
 800c014:	4642      	mov	r2, r8
 800c016:	464b      	mov	r3, r9
 800c018:	4630      	mov	r0, r6
 800c01a:	4639      	mov	r1, r7
 800c01c:	f7f4 fd74 	bl	8000b08 <__aeabi_dcmpeq>
 800c020:	b110      	cbz	r0, 800c028 <_dtoa_r+0x6a0>
 800c022:	f01a 0f01 	tst.w	sl, #1
 800c026:	d110      	bne.n	800c04a <_dtoa_r+0x6c2>
 800c028:	4620      	mov	r0, r4
 800c02a:	ee18 1a10 	vmov	r1, s16
 800c02e:	f000 faf3 	bl	800c618 <_Bfree>
 800c032:	2300      	movs	r3, #0
 800c034:	9800      	ldr	r0, [sp, #0]
 800c036:	702b      	strb	r3, [r5, #0]
 800c038:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c03a:	3001      	adds	r0, #1
 800c03c:	6018      	str	r0, [r3, #0]
 800c03e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800c040:	2b00      	cmp	r3, #0
 800c042:	f43f acf1 	beq.w	800ba28 <_dtoa_r+0xa0>
 800c046:	601d      	str	r5, [r3, #0]
 800c048:	e4ee      	b.n	800ba28 <_dtoa_r+0xa0>
 800c04a:	9f00      	ldr	r7, [sp, #0]
 800c04c:	462b      	mov	r3, r5
 800c04e:	461d      	mov	r5, r3
 800c050:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800c054:	2a39      	cmp	r2, #57	; 0x39
 800c056:	d106      	bne.n	800c066 <_dtoa_r+0x6de>
 800c058:	9a01      	ldr	r2, [sp, #4]
 800c05a:	429a      	cmp	r2, r3
 800c05c:	d1f7      	bne.n	800c04e <_dtoa_r+0x6c6>
 800c05e:	9901      	ldr	r1, [sp, #4]
 800c060:	2230      	movs	r2, #48	; 0x30
 800c062:	3701      	adds	r7, #1
 800c064:	700a      	strb	r2, [r1, #0]
 800c066:	781a      	ldrb	r2, [r3, #0]
 800c068:	3201      	adds	r2, #1
 800c06a:	701a      	strb	r2, [r3, #0]
 800c06c:	e790      	b.n	800bf90 <_dtoa_r+0x608>
 800c06e:	4ba6      	ldr	r3, [pc, #664]	; (800c308 <_dtoa_r+0x980>)
 800c070:	2200      	movs	r2, #0
 800c072:	f7f4 fae1 	bl	8000638 <__aeabi_dmul>
 800c076:	2200      	movs	r2, #0
 800c078:	2300      	movs	r3, #0
 800c07a:	4606      	mov	r6, r0
 800c07c:	460f      	mov	r7, r1
 800c07e:	f7f4 fd43 	bl	8000b08 <__aeabi_dcmpeq>
 800c082:	2800      	cmp	r0, #0
 800c084:	d09d      	beq.n	800bfc2 <_dtoa_r+0x63a>
 800c086:	e7cf      	b.n	800c028 <_dtoa_r+0x6a0>
 800c088:	9a08      	ldr	r2, [sp, #32]
 800c08a:	2a00      	cmp	r2, #0
 800c08c:	f000 80d7 	beq.w	800c23e <_dtoa_r+0x8b6>
 800c090:	9a06      	ldr	r2, [sp, #24]
 800c092:	2a01      	cmp	r2, #1
 800c094:	f300 80ba 	bgt.w	800c20c <_dtoa_r+0x884>
 800c098:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800c09a:	2a00      	cmp	r2, #0
 800c09c:	f000 80b2 	beq.w	800c204 <_dtoa_r+0x87c>
 800c0a0:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800c0a4:	9e07      	ldr	r6, [sp, #28]
 800c0a6:	9d04      	ldr	r5, [sp, #16]
 800c0a8:	9a04      	ldr	r2, [sp, #16]
 800c0aa:	441a      	add	r2, r3
 800c0ac:	9204      	str	r2, [sp, #16]
 800c0ae:	9a05      	ldr	r2, [sp, #20]
 800c0b0:	2101      	movs	r1, #1
 800c0b2:	441a      	add	r2, r3
 800c0b4:	4620      	mov	r0, r4
 800c0b6:	9205      	str	r2, [sp, #20]
 800c0b8:	f000 fb66 	bl	800c788 <__i2b>
 800c0bc:	4607      	mov	r7, r0
 800c0be:	2d00      	cmp	r5, #0
 800c0c0:	dd0c      	ble.n	800c0dc <_dtoa_r+0x754>
 800c0c2:	9b05      	ldr	r3, [sp, #20]
 800c0c4:	2b00      	cmp	r3, #0
 800c0c6:	dd09      	ble.n	800c0dc <_dtoa_r+0x754>
 800c0c8:	42ab      	cmp	r3, r5
 800c0ca:	9a04      	ldr	r2, [sp, #16]
 800c0cc:	bfa8      	it	ge
 800c0ce:	462b      	movge	r3, r5
 800c0d0:	1ad2      	subs	r2, r2, r3
 800c0d2:	9204      	str	r2, [sp, #16]
 800c0d4:	9a05      	ldr	r2, [sp, #20]
 800c0d6:	1aed      	subs	r5, r5, r3
 800c0d8:	1ad3      	subs	r3, r2, r3
 800c0da:	9305      	str	r3, [sp, #20]
 800c0dc:	9b07      	ldr	r3, [sp, #28]
 800c0de:	b31b      	cbz	r3, 800c128 <_dtoa_r+0x7a0>
 800c0e0:	9b08      	ldr	r3, [sp, #32]
 800c0e2:	2b00      	cmp	r3, #0
 800c0e4:	f000 80af 	beq.w	800c246 <_dtoa_r+0x8be>
 800c0e8:	2e00      	cmp	r6, #0
 800c0ea:	dd13      	ble.n	800c114 <_dtoa_r+0x78c>
 800c0ec:	4639      	mov	r1, r7
 800c0ee:	4632      	mov	r2, r6
 800c0f0:	4620      	mov	r0, r4
 800c0f2:	f000 fc09 	bl	800c908 <__pow5mult>
 800c0f6:	ee18 2a10 	vmov	r2, s16
 800c0fa:	4601      	mov	r1, r0
 800c0fc:	4607      	mov	r7, r0
 800c0fe:	4620      	mov	r0, r4
 800c100:	f000 fb58 	bl	800c7b4 <__multiply>
 800c104:	ee18 1a10 	vmov	r1, s16
 800c108:	4680      	mov	r8, r0
 800c10a:	4620      	mov	r0, r4
 800c10c:	f000 fa84 	bl	800c618 <_Bfree>
 800c110:	ee08 8a10 	vmov	s16, r8
 800c114:	9b07      	ldr	r3, [sp, #28]
 800c116:	1b9a      	subs	r2, r3, r6
 800c118:	d006      	beq.n	800c128 <_dtoa_r+0x7a0>
 800c11a:	ee18 1a10 	vmov	r1, s16
 800c11e:	4620      	mov	r0, r4
 800c120:	f000 fbf2 	bl	800c908 <__pow5mult>
 800c124:	ee08 0a10 	vmov	s16, r0
 800c128:	2101      	movs	r1, #1
 800c12a:	4620      	mov	r0, r4
 800c12c:	f000 fb2c 	bl	800c788 <__i2b>
 800c130:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c132:	2b00      	cmp	r3, #0
 800c134:	4606      	mov	r6, r0
 800c136:	f340 8088 	ble.w	800c24a <_dtoa_r+0x8c2>
 800c13a:	461a      	mov	r2, r3
 800c13c:	4601      	mov	r1, r0
 800c13e:	4620      	mov	r0, r4
 800c140:	f000 fbe2 	bl	800c908 <__pow5mult>
 800c144:	9b06      	ldr	r3, [sp, #24]
 800c146:	2b01      	cmp	r3, #1
 800c148:	4606      	mov	r6, r0
 800c14a:	f340 8081 	ble.w	800c250 <_dtoa_r+0x8c8>
 800c14e:	f04f 0800 	mov.w	r8, #0
 800c152:	6933      	ldr	r3, [r6, #16]
 800c154:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800c158:	6918      	ldr	r0, [r3, #16]
 800c15a:	f000 fac5 	bl	800c6e8 <__hi0bits>
 800c15e:	f1c0 0020 	rsb	r0, r0, #32
 800c162:	9b05      	ldr	r3, [sp, #20]
 800c164:	4418      	add	r0, r3
 800c166:	f010 001f 	ands.w	r0, r0, #31
 800c16a:	f000 8092 	beq.w	800c292 <_dtoa_r+0x90a>
 800c16e:	f1c0 0320 	rsb	r3, r0, #32
 800c172:	2b04      	cmp	r3, #4
 800c174:	f340 808a 	ble.w	800c28c <_dtoa_r+0x904>
 800c178:	f1c0 001c 	rsb	r0, r0, #28
 800c17c:	9b04      	ldr	r3, [sp, #16]
 800c17e:	4403      	add	r3, r0
 800c180:	9304      	str	r3, [sp, #16]
 800c182:	9b05      	ldr	r3, [sp, #20]
 800c184:	4403      	add	r3, r0
 800c186:	4405      	add	r5, r0
 800c188:	9305      	str	r3, [sp, #20]
 800c18a:	9b04      	ldr	r3, [sp, #16]
 800c18c:	2b00      	cmp	r3, #0
 800c18e:	dd07      	ble.n	800c1a0 <_dtoa_r+0x818>
 800c190:	ee18 1a10 	vmov	r1, s16
 800c194:	461a      	mov	r2, r3
 800c196:	4620      	mov	r0, r4
 800c198:	f000 fc10 	bl	800c9bc <__lshift>
 800c19c:	ee08 0a10 	vmov	s16, r0
 800c1a0:	9b05      	ldr	r3, [sp, #20]
 800c1a2:	2b00      	cmp	r3, #0
 800c1a4:	dd05      	ble.n	800c1b2 <_dtoa_r+0x82a>
 800c1a6:	4631      	mov	r1, r6
 800c1a8:	461a      	mov	r2, r3
 800c1aa:	4620      	mov	r0, r4
 800c1ac:	f000 fc06 	bl	800c9bc <__lshift>
 800c1b0:	4606      	mov	r6, r0
 800c1b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c1b4:	2b00      	cmp	r3, #0
 800c1b6:	d06e      	beq.n	800c296 <_dtoa_r+0x90e>
 800c1b8:	ee18 0a10 	vmov	r0, s16
 800c1bc:	4631      	mov	r1, r6
 800c1be:	f000 fc6d 	bl	800ca9c <__mcmp>
 800c1c2:	2800      	cmp	r0, #0
 800c1c4:	da67      	bge.n	800c296 <_dtoa_r+0x90e>
 800c1c6:	9b00      	ldr	r3, [sp, #0]
 800c1c8:	3b01      	subs	r3, #1
 800c1ca:	ee18 1a10 	vmov	r1, s16
 800c1ce:	9300      	str	r3, [sp, #0]
 800c1d0:	220a      	movs	r2, #10
 800c1d2:	2300      	movs	r3, #0
 800c1d4:	4620      	mov	r0, r4
 800c1d6:	f000 fa41 	bl	800c65c <__multadd>
 800c1da:	9b08      	ldr	r3, [sp, #32]
 800c1dc:	ee08 0a10 	vmov	s16, r0
 800c1e0:	2b00      	cmp	r3, #0
 800c1e2:	f000 81b1 	beq.w	800c548 <_dtoa_r+0xbc0>
 800c1e6:	2300      	movs	r3, #0
 800c1e8:	4639      	mov	r1, r7
 800c1ea:	220a      	movs	r2, #10
 800c1ec:	4620      	mov	r0, r4
 800c1ee:	f000 fa35 	bl	800c65c <__multadd>
 800c1f2:	9b02      	ldr	r3, [sp, #8]
 800c1f4:	2b00      	cmp	r3, #0
 800c1f6:	4607      	mov	r7, r0
 800c1f8:	f300 808e 	bgt.w	800c318 <_dtoa_r+0x990>
 800c1fc:	9b06      	ldr	r3, [sp, #24]
 800c1fe:	2b02      	cmp	r3, #2
 800c200:	dc51      	bgt.n	800c2a6 <_dtoa_r+0x91e>
 800c202:	e089      	b.n	800c318 <_dtoa_r+0x990>
 800c204:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c206:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800c20a:	e74b      	b.n	800c0a4 <_dtoa_r+0x71c>
 800c20c:	9b03      	ldr	r3, [sp, #12]
 800c20e:	1e5e      	subs	r6, r3, #1
 800c210:	9b07      	ldr	r3, [sp, #28]
 800c212:	42b3      	cmp	r3, r6
 800c214:	bfbf      	itttt	lt
 800c216:	9b07      	ldrlt	r3, [sp, #28]
 800c218:	9607      	strlt	r6, [sp, #28]
 800c21a:	1af2      	sublt	r2, r6, r3
 800c21c:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800c21e:	bfb6      	itet	lt
 800c220:	189b      	addlt	r3, r3, r2
 800c222:	1b9e      	subge	r6, r3, r6
 800c224:	930a      	strlt	r3, [sp, #40]	; 0x28
 800c226:	9b03      	ldr	r3, [sp, #12]
 800c228:	bfb8      	it	lt
 800c22a:	2600      	movlt	r6, #0
 800c22c:	2b00      	cmp	r3, #0
 800c22e:	bfb7      	itett	lt
 800c230:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 800c234:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 800c238:	1a9d      	sublt	r5, r3, r2
 800c23a:	2300      	movlt	r3, #0
 800c23c:	e734      	b.n	800c0a8 <_dtoa_r+0x720>
 800c23e:	9e07      	ldr	r6, [sp, #28]
 800c240:	9d04      	ldr	r5, [sp, #16]
 800c242:	9f08      	ldr	r7, [sp, #32]
 800c244:	e73b      	b.n	800c0be <_dtoa_r+0x736>
 800c246:	9a07      	ldr	r2, [sp, #28]
 800c248:	e767      	b.n	800c11a <_dtoa_r+0x792>
 800c24a:	9b06      	ldr	r3, [sp, #24]
 800c24c:	2b01      	cmp	r3, #1
 800c24e:	dc18      	bgt.n	800c282 <_dtoa_r+0x8fa>
 800c250:	f1ba 0f00 	cmp.w	sl, #0
 800c254:	d115      	bne.n	800c282 <_dtoa_r+0x8fa>
 800c256:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800c25a:	b993      	cbnz	r3, 800c282 <_dtoa_r+0x8fa>
 800c25c:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800c260:	0d1b      	lsrs	r3, r3, #20
 800c262:	051b      	lsls	r3, r3, #20
 800c264:	b183      	cbz	r3, 800c288 <_dtoa_r+0x900>
 800c266:	9b04      	ldr	r3, [sp, #16]
 800c268:	3301      	adds	r3, #1
 800c26a:	9304      	str	r3, [sp, #16]
 800c26c:	9b05      	ldr	r3, [sp, #20]
 800c26e:	3301      	adds	r3, #1
 800c270:	9305      	str	r3, [sp, #20]
 800c272:	f04f 0801 	mov.w	r8, #1
 800c276:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c278:	2b00      	cmp	r3, #0
 800c27a:	f47f af6a 	bne.w	800c152 <_dtoa_r+0x7ca>
 800c27e:	2001      	movs	r0, #1
 800c280:	e76f      	b.n	800c162 <_dtoa_r+0x7da>
 800c282:	f04f 0800 	mov.w	r8, #0
 800c286:	e7f6      	b.n	800c276 <_dtoa_r+0x8ee>
 800c288:	4698      	mov	r8, r3
 800c28a:	e7f4      	b.n	800c276 <_dtoa_r+0x8ee>
 800c28c:	f43f af7d 	beq.w	800c18a <_dtoa_r+0x802>
 800c290:	4618      	mov	r0, r3
 800c292:	301c      	adds	r0, #28
 800c294:	e772      	b.n	800c17c <_dtoa_r+0x7f4>
 800c296:	9b03      	ldr	r3, [sp, #12]
 800c298:	2b00      	cmp	r3, #0
 800c29a:	dc37      	bgt.n	800c30c <_dtoa_r+0x984>
 800c29c:	9b06      	ldr	r3, [sp, #24]
 800c29e:	2b02      	cmp	r3, #2
 800c2a0:	dd34      	ble.n	800c30c <_dtoa_r+0x984>
 800c2a2:	9b03      	ldr	r3, [sp, #12]
 800c2a4:	9302      	str	r3, [sp, #8]
 800c2a6:	9b02      	ldr	r3, [sp, #8]
 800c2a8:	b96b      	cbnz	r3, 800c2c6 <_dtoa_r+0x93e>
 800c2aa:	4631      	mov	r1, r6
 800c2ac:	2205      	movs	r2, #5
 800c2ae:	4620      	mov	r0, r4
 800c2b0:	f000 f9d4 	bl	800c65c <__multadd>
 800c2b4:	4601      	mov	r1, r0
 800c2b6:	4606      	mov	r6, r0
 800c2b8:	ee18 0a10 	vmov	r0, s16
 800c2bc:	f000 fbee 	bl	800ca9c <__mcmp>
 800c2c0:	2800      	cmp	r0, #0
 800c2c2:	f73f adbb 	bgt.w	800be3c <_dtoa_r+0x4b4>
 800c2c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c2c8:	9d01      	ldr	r5, [sp, #4]
 800c2ca:	43db      	mvns	r3, r3
 800c2cc:	9300      	str	r3, [sp, #0]
 800c2ce:	f04f 0800 	mov.w	r8, #0
 800c2d2:	4631      	mov	r1, r6
 800c2d4:	4620      	mov	r0, r4
 800c2d6:	f000 f99f 	bl	800c618 <_Bfree>
 800c2da:	2f00      	cmp	r7, #0
 800c2dc:	f43f aea4 	beq.w	800c028 <_dtoa_r+0x6a0>
 800c2e0:	f1b8 0f00 	cmp.w	r8, #0
 800c2e4:	d005      	beq.n	800c2f2 <_dtoa_r+0x96a>
 800c2e6:	45b8      	cmp	r8, r7
 800c2e8:	d003      	beq.n	800c2f2 <_dtoa_r+0x96a>
 800c2ea:	4641      	mov	r1, r8
 800c2ec:	4620      	mov	r0, r4
 800c2ee:	f000 f993 	bl	800c618 <_Bfree>
 800c2f2:	4639      	mov	r1, r7
 800c2f4:	4620      	mov	r0, r4
 800c2f6:	f000 f98f 	bl	800c618 <_Bfree>
 800c2fa:	e695      	b.n	800c028 <_dtoa_r+0x6a0>
 800c2fc:	2600      	movs	r6, #0
 800c2fe:	4637      	mov	r7, r6
 800c300:	e7e1      	b.n	800c2c6 <_dtoa_r+0x93e>
 800c302:	9700      	str	r7, [sp, #0]
 800c304:	4637      	mov	r7, r6
 800c306:	e599      	b.n	800be3c <_dtoa_r+0x4b4>
 800c308:	40240000 	.word	0x40240000
 800c30c:	9b08      	ldr	r3, [sp, #32]
 800c30e:	2b00      	cmp	r3, #0
 800c310:	f000 80ca 	beq.w	800c4a8 <_dtoa_r+0xb20>
 800c314:	9b03      	ldr	r3, [sp, #12]
 800c316:	9302      	str	r3, [sp, #8]
 800c318:	2d00      	cmp	r5, #0
 800c31a:	dd05      	ble.n	800c328 <_dtoa_r+0x9a0>
 800c31c:	4639      	mov	r1, r7
 800c31e:	462a      	mov	r2, r5
 800c320:	4620      	mov	r0, r4
 800c322:	f000 fb4b 	bl	800c9bc <__lshift>
 800c326:	4607      	mov	r7, r0
 800c328:	f1b8 0f00 	cmp.w	r8, #0
 800c32c:	d05b      	beq.n	800c3e6 <_dtoa_r+0xa5e>
 800c32e:	6879      	ldr	r1, [r7, #4]
 800c330:	4620      	mov	r0, r4
 800c332:	f000 f931 	bl	800c598 <_Balloc>
 800c336:	4605      	mov	r5, r0
 800c338:	b928      	cbnz	r0, 800c346 <_dtoa_r+0x9be>
 800c33a:	4b87      	ldr	r3, [pc, #540]	; (800c558 <_dtoa_r+0xbd0>)
 800c33c:	4602      	mov	r2, r0
 800c33e:	f240 21ea 	movw	r1, #746	; 0x2ea
 800c342:	f7ff bb3b 	b.w	800b9bc <_dtoa_r+0x34>
 800c346:	693a      	ldr	r2, [r7, #16]
 800c348:	3202      	adds	r2, #2
 800c34a:	0092      	lsls	r2, r2, #2
 800c34c:	f107 010c 	add.w	r1, r7, #12
 800c350:	300c      	adds	r0, #12
 800c352:	f000 f913 	bl	800c57c <memcpy>
 800c356:	2201      	movs	r2, #1
 800c358:	4629      	mov	r1, r5
 800c35a:	4620      	mov	r0, r4
 800c35c:	f000 fb2e 	bl	800c9bc <__lshift>
 800c360:	9b01      	ldr	r3, [sp, #4]
 800c362:	f103 0901 	add.w	r9, r3, #1
 800c366:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800c36a:	4413      	add	r3, r2
 800c36c:	9305      	str	r3, [sp, #20]
 800c36e:	f00a 0301 	and.w	r3, sl, #1
 800c372:	46b8      	mov	r8, r7
 800c374:	9304      	str	r3, [sp, #16]
 800c376:	4607      	mov	r7, r0
 800c378:	4631      	mov	r1, r6
 800c37a:	ee18 0a10 	vmov	r0, s16
 800c37e:	f7ff fa77 	bl	800b870 <quorem>
 800c382:	4641      	mov	r1, r8
 800c384:	9002      	str	r0, [sp, #8]
 800c386:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800c38a:	ee18 0a10 	vmov	r0, s16
 800c38e:	f000 fb85 	bl	800ca9c <__mcmp>
 800c392:	463a      	mov	r2, r7
 800c394:	9003      	str	r0, [sp, #12]
 800c396:	4631      	mov	r1, r6
 800c398:	4620      	mov	r0, r4
 800c39a:	f000 fb9b 	bl	800cad4 <__mdiff>
 800c39e:	68c2      	ldr	r2, [r0, #12]
 800c3a0:	f109 3bff 	add.w	fp, r9, #4294967295
 800c3a4:	4605      	mov	r5, r0
 800c3a6:	bb02      	cbnz	r2, 800c3ea <_dtoa_r+0xa62>
 800c3a8:	4601      	mov	r1, r0
 800c3aa:	ee18 0a10 	vmov	r0, s16
 800c3ae:	f000 fb75 	bl	800ca9c <__mcmp>
 800c3b2:	4602      	mov	r2, r0
 800c3b4:	4629      	mov	r1, r5
 800c3b6:	4620      	mov	r0, r4
 800c3b8:	9207      	str	r2, [sp, #28]
 800c3ba:	f000 f92d 	bl	800c618 <_Bfree>
 800c3be:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800c3c2:	ea43 0102 	orr.w	r1, r3, r2
 800c3c6:	9b04      	ldr	r3, [sp, #16]
 800c3c8:	430b      	orrs	r3, r1
 800c3ca:	464d      	mov	r5, r9
 800c3cc:	d10f      	bne.n	800c3ee <_dtoa_r+0xa66>
 800c3ce:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800c3d2:	d02a      	beq.n	800c42a <_dtoa_r+0xaa2>
 800c3d4:	9b03      	ldr	r3, [sp, #12]
 800c3d6:	2b00      	cmp	r3, #0
 800c3d8:	dd02      	ble.n	800c3e0 <_dtoa_r+0xa58>
 800c3da:	9b02      	ldr	r3, [sp, #8]
 800c3dc:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 800c3e0:	f88b a000 	strb.w	sl, [fp]
 800c3e4:	e775      	b.n	800c2d2 <_dtoa_r+0x94a>
 800c3e6:	4638      	mov	r0, r7
 800c3e8:	e7ba      	b.n	800c360 <_dtoa_r+0x9d8>
 800c3ea:	2201      	movs	r2, #1
 800c3ec:	e7e2      	b.n	800c3b4 <_dtoa_r+0xa2c>
 800c3ee:	9b03      	ldr	r3, [sp, #12]
 800c3f0:	2b00      	cmp	r3, #0
 800c3f2:	db04      	blt.n	800c3fe <_dtoa_r+0xa76>
 800c3f4:	9906      	ldr	r1, [sp, #24]
 800c3f6:	430b      	orrs	r3, r1
 800c3f8:	9904      	ldr	r1, [sp, #16]
 800c3fa:	430b      	orrs	r3, r1
 800c3fc:	d122      	bne.n	800c444 <_dtoa_r+0xabc>
 800c3fe:	2a00      	cmp	r2, #0
 800c400:	ddee      	ble.n	800c3e0 <_dtoa_r+0xa58>
 800c402:	ee18 1a10 	vmov	r1, s16
 800c406:	2201      	movs	r2, #1
 800c408:	4620      	mov	r0, r4
 800c40a:	f000 fad7 	bl	800c9bc <__lshift>
 800c40e:	4631      	mov	r1, r6
 800c410:	ee08 0a10 	vmov	s16, r0
 800c414:	f000 fb42 	bl	800ca9c <__mcmp>
 800c418:	2800      	cmp	r0, #0
 800c41a:	dc03      	bgt.n	800c424 <_dtoa_r+0xa9c>
 800c41c:	d1e0      	bne.n	800c3e0 <_dtoa_r+0xa58>
 800c41e:	f01a 0f01 	tst.w	sl, #1
 800c422:	d0dd      	beq.n	800c3e0 <_dtoa_r+0xa58>
 800c424:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800c428:	d1d7      	bne.n	800c3da <_dtoa_r+0xa52>
 800c42a:	2339      	movs	r3, #57	; 0x39
 800c42c:	f88b 3000 	strb.w	r3, [fp]
 800c430:	462b      	mov	r3, r5
 800c432:	461d      	mov	r5, r3
 800c434:	3b01      	subs	r3, #1
 800c436:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800c43a:	2a39      	cmp	r2, #57	; 0x39
 800c43c:	d071      	beq.n	800c522 <_dtoa_r+0xb9a>
 800c43e:	3201      	adds	r2, #1
 800c440:	701a      	strb	r2, [r3, #0]
 800c442:	e746      	b.n	800c2d2 <_dtoa_r+0x94a>
 800c444:	2a00      	cmp	r2, #0
 800c446:	dd07      	ble.n	800c458 <_dtoa_r+0xad0>
 800c448:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800c44c:	d0ed      	beq.n	800c42a <_dtoa_r+0xaa2>
 800c44e:	f10a 0301 	add.w	r3, sl, #1
 800c452:	f88b 3000 	strb.w	r3, [fp]
 800c456:	e73c      	b.n	800c2d2 <_dtoa_r+0x94a>
 800c458:	9b05      	ldr	r3, [sp, #20]
 800c45a:	f809 ac01 	strb.w	sl, [r9, #-1]
 800c45e:	4599      	cmp	r9, r3
 800c460:	d047      	beq.n	800c4f2 <_dtoa_r+0xb6a>
 800c462:	ee18 1a10 	vmov	r1, s16
 800c466:	2300      	movs	r3, #0
 800c468:	220a      	movs	r2, #10
 800c46a:	4620      	mov	r0, r4
 800c46c:	f000 f8f6 	bl	800c65c <__multadd>
 800c470:	45b8      	cmp	r8, r7
 800c472:	ee08 0a10 	vmov	s16, r0
 800c476:	f04f 0300 	mov.w	r3, #0
 800c47a:	f04f 020a 	mov.w	r2, #10
 800c47e:	4641      	mov	r1, r8
 800c480:	4620      	mov	r0, r4
 800c482:	d106      	bne.n	800c492 <_dtoa_r+0xb0a>
 800c484:	f000 f8ea 	bl	800c65c <__multadd>
 800c488:	4680      	mov	r8, r0
 800c48a:	4607      	mov	r7, r0
 800c48c:	f109 0901 	add.w	r9, r9, #1
 800c490:	e772      	b.n	800c378 <_dtoa_r+0x9f0>
 800c492:	f000 f8e3 	bl	800c65c <__multadd>
 800c496:	4639      	mov	r1, r7
 800c498:	4680      	mov	r8, r0
 800c49a:	2300      	movs	r3, #0
 800c49c:	220a      	movs	r2, #10
 800c49e:	4620      	mov	r0, r4
 800c4a0:	f000 f8dc 	bl	800c65c <__multadd>
 800c4a4:	4607      	mov	r7, r0
 800c4a6:	e7f1      	b.n	800c48c <_dtoa_r+0xb04>
 800c4a8:	9b03      	ldr	r3, [sp, #12]
 800c4aa:	9302      	str	r3, [sp, #8]
 800c4ac:	9d01      	ldr	r5, [sp, #4]
 800c4ae:	ee18 0a10 	vmov	r0, s16
 800c4b2:	4631      	mov	r1, r6
 800c4b4:	f7ff f9dc 	bl	800b870 <quorem>
 800c4b8:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800c4bc:	9b01      	ldr	r3, [sp, #4]
 800c4be:	f805 ab01 	strb.w	sl, [r5], #1
 800c4c2:	1aea      	subs	r2, r5, r3
 800c4c4:	9b02      	ldr	r3, [sp, #8]
 800c4c6:	4293      	cmp	r3, r2
 800c4c8:	dd09      	ble.n	800c4de <_dtoa_r+0xb56>
 800c4ca:	ee18 1a10 	vmov	r1, s16
 800c4ce:	2300      	movs	r3, #0
 800c4d0:	220a      	movs	r2, #10
 800c4d2:	4620      	mov	r0, r4
 800c4d4:	f000 f8c2 	bl	800c65c <__multadd>
 800c4d8:	ee08 0a10 	vmov	s16, r0
 800c4dc:	e7e7      	b.n	800c4ae <_dtoa_r+0xb26>
 800c4de:	9b02      	ldr	r3, [sp, #8]
 800c4e0:	2b00      	cmp	r3, #0
 800c4e2:	bfc8      	it	gt
 800c4e4:	461d      	movgt	r5, r3
 800c4e6:	9b01      	ldr	r3, [sp, #4]
 800c4e8:	bfd8      	it	le
 800c4ea:	2501      	movle	r5, #1
 800c4ec:	441d      	add	r5, r3
 800c4ee:	f04f 0800 	mov.w	r8, #0
 800c4f2:	ee18 1a10 	vmov	r1, s16
 800c4f6:	2201      	movs	r2, #1
 800c4f8:	4620      	mov	r0, r4
 800c4fa:	f000 fa5f 	bl	800c9bc <__lshift>
 800c4fe:	4631      	mov	r1, r6
 800c500:	ee08 0a10 	vmov	s16, r0
 800c504:	f000 faca 	bl	800ca9c <__mcmp>
 800c508:	2800      	cmp	r0, #0
 800c50a:	dc91      	bgt.n	800c430 <_dtoa_r+0xaa8>
 800c50c:	d102      	bne.n	800c514 <_dtoa_r+0xb8c>
 800c50e:	f01a 0f01 	tst.w	sl, #1
 800c512:	d18d      	bne.n	800c430 <_dtoa_r+0xaa8>
 800c514:	462b      	mov	r3, r5
 800c516:	461d      	mov	r5, r3
 800c518:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800c51c:	2a30      	cmp	r2, #48	; 0x30
 800c51e:	d0fa      	beq.n	800c516 <_dtoa_r+0xb8e>
 800c520:	e6d7      	b.n	800c2d2 <_dtoa_r+0x94a>
 800c522:	9a01      	ldr	r2, [sp, #4]
 800c524:	429a      	cmp	r2, r3
 800c526:	d184      	bne.n	800c432 <_dtoa_r+0xaaa>
 800c528:	9b00      	ldr	r3, [sp, #0]
 800c52a:	3301      	adds	r3, #1
 800c52c:	9300      	str	r3, [sp, #0]
 800c52e:	2331      	movs	r3, #49	; 0x31
 800c530:	7013      	strb	r3, [r2, #0]
 800c532:	e6ce      	b.n	800c2d2 <_dtoa_r+0x94a>
 800c534:	4b09      	ldr	r3, [pc, #36]	; (800c55c <_dtoa_r+0xbd4>)
 800c536:	f7ff ba95 	b.w	800ba64 <_dtoa_r+0xdc>
 800c53a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800c53c:	2b00      	cmp	r3, #0
 800c53e:	f47f aa6e 	bne.w	800ba1e <_dtoa_r+0x96>
 800c542:	4b07      	ldr	r3, [pc, #28]	; (800c560 <_dtoa_r+0xbd8>)
 800c544:	f7ff ba8e 	b.w	800ba64 <_dtoa_r+0xdc>
 800c548:	9b02      	ldr	r3, [sp, #8]
 800c54a:	2b00      	cmp	r3, #0
 800c54c:	dcae      	bgt.n	800c4ac <_dtoa_r+0xb24>
 800c54e:	9b06      	ldr	r3, [sp, #24]
 800c550:	2b02      	cmp	r3, #2
 800c552:	f73f aea8 	bgt.w	800c2a6 <_dtoa_r+0x91e>
 800c556:	e7a9      	b.n	800c4ac <_dtoa_r+0xb24>
 800c558:	0800f353 	.word	0x0800f353
 800c55c:	0800f2b0 	.word	0x0800f2b0
 800c560:	0800f2d4 	.word	0x0800f2d4

0800c564 <_localeconv_r>:
 800c564:	4800      	ldr	r0, [pc, #0]	; (800c568 <_localeconv_r+0x4>)
 800c566:	4770      	bx	lr
 800c568:	200001cc 	.word	0x200001cc

0800c56c <malloc>:
 800c56c:	4b02      	ldr	r3, [pc, #8]	; (800c578 <malloc+0xc>)
 800c56e:	4601      	mov	r1, r0
 800c570:	6818      	ldr	r0, [r3, #0]
 800c572:	f000 bc17 	b.w	800cda4 <_malloc_r>
 800c576:	bf00      	nop
 800c578:	20000078 	.word	0x20000078

0800c57c <memcpy>:
 800c57c:	440a      	add	r2, r1
 800c57e:	4291      	cmp	r1, r2
 800c580:	f100 33ff 	add.w	r3, r0, #4294967295
 800c584:	d100      	bne.n	800c588 <memcpy+0xc>
 800c586:	4770      	bx	lr
 800c588:	b510      	push	{r4, lr}
 800c58a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c58e:	f803 4f01 	strb.w	r4, [r3, #1]!
 800c592:	4291      	cmp	r1, r2
 800c594:	d1f9      	bne.n	800c58a <memcpy+0xe>
 800c596:	bd10      	pop	{r4, pc}

0800c598 <_Balloc>:
 800c598:	b570      	push	{r4, r5, r6, lr}
 800c59a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800c59c:	4604      	mov	r4, r0
 800c59e:	460d      	mov	r5, r1
 800c5a0:	b976      	cbnz	r6, 800c5c0 <_Balloc+0x28>
 800c5a2:	2010      	movs	r0, #16
 800c5a4:	f7ff ffe2 	bl	800c56c <malloc>
 800c5a8:	4602      	mov	r2, r0
 800c5aa:	6260      	str	r0, [r4, #36]	; 0x24
 800c5ac:	b920      	cbnz	r0, 800c5b8 <_Balloc+0x20>
 800c5ae:	4b18      	ldr	r3, [pc, #96]	; (800c610 <_Balloc+0x78>)
 800c5b0:	4818      	ldr	r0, [pc, #96]	; (800c614 <_Balloc+0x7c>)
 800c5b2:	2166      	movs	r1, #102	; 0x66
 800c5b4:	f000 fdd6 	bl	800d164 <__assert_func>
 800c5b8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800c5bc:	6006      	str	r6, [r0, #0]
 800c5be:	60c6      	str	r6, [r0, #12]
 800c5c0:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800c5c2:	68f3      	ldr	r3, [r6, #12]
 800c5c4:	b183      	cbz	r3, 800c5e8 <_Balloc+0x50>
 800c5c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c5c8:	68db      	ldr	r3, [r3, #12]
 800c5ca:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800c5ce:	b9b8      	cbnz	r0, 800c600 <_Balloc+0x68>
 800c5d0:	2101      	movs	r1, #1
 800c5d2:	fa01 f605 	lsl.w	r6, r1, r5
 800c5d6:	1d72      	adds	r2, r6, #5
 800c5d8:	0092      	lsls	r2, r2, #2
 800c5da:	4620      	mov	r0, r4
 800c5dc:	f000 fb60 	bl	800cca0 <_calloc_r>
 800c5e0:	b160      	cbz	r0, 800c5fc <_Balloc+0x64>
 800c5e2:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800c5e6:	e00e      	b.n	800c606 <_Balloc+0x6e>
 800c5e8:	2221      	movs	r2, #33	; 0x21
 800c5ea:	2104      	movs	r1, #4
 800c5ec:	4620      	mov	r0, r4
 800c5ee:	f000 fb57 	bl	800cca0 <_calloc_r>
 800c5f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c5f4:	60f0      	str	r0, [r6, #12]
 800c5f6:	68db      	ldr	r3, [r3, #12]
 800c5f8:	2b00      	cmp	r3, #0
 800c5fa:	d1e4      	bne.n	800c5c6 <_Balloc+0x2e>
 800c5fc:	2000      	movs	r0, #0
 800c5fe:	bd70      	pop	{r4, r5, r6, pc}
 800c600:	6802      	ldr	r2, [r0, #0]
 800c602:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800c606:	2300      	movs	r3, #0
 800c608:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800c60c:	e7f7      	b.n	800c5fe <_Balloc+0x66>
 800c60e:	bf00      	nop
 800c610:	0800f2e1 	.word	0x0800f2e1
 800c614:	0800f364 	.word	0x0800f364

0800c618 <_Bfree>:
 800c618:	b570      	push	{r4, r5, r6, lr}
 800c61a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800c61c:	4605      	mov	r5, r0
 800c61e:	460c      	mov	r4, r1
 800c620:	b976      	cbnz	r6, 800c640 <_Bfree+0x28>
 800c622:	2010      	movs	r0, #16
 800c624:	f7ff ffa2 	bl	800c56c <malloc>
 800c628:	4602      	mov	r2, r0
 800c62a:	6268      	str	r0, [r5, #36]	; 0x24
 800c62c:	b920      	cbnz	r0, 800c638 <_Bfree+0x20>
 800c62e:	4b09      	ldr	r3, [pc, #36]	; (800c654 <_Bfree+0x3c>)
 800c630:	4809      	ldr	r0, [pc, #36]	; (800c658 <_Bfree+0x40>)
 800c632:	218a      	movs	r1, #138	; 0x8a
 800c634:	f000 fd96 	bl	800d164 <__assert_func>
 800c638:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800c63c:	6006      	str	r6, [r0, #0]
 800c63e:	60c6      	str	r6, [r0, #12]
 800c640:	b13c      	cbz	r4, 800c652 <_Bfree+0x3a>
 800c642:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800c644:	6862      	ldr	r2, [r4, #4]
 800c646:	68db      	ldr	r3, [r3, #12]
 800c648:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800c64c:	6021      	str	r1, [r4, #0]
 800c64e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800c652:	bd70      	pop	{r4, r5, r6, pc}
 800c654:	0800f2e1 	.word	0x0800f2e1
 800c658:	0800f364 	.word	0x0800f364

0800c65c <__multadd>:
 800c65c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c660:	690d      	ldr	r5, [r1, #16]
 800c662:	4607      	mov	r7, r0
 800c664:	460c      	mov	r4, r1
 800c666:	461e      	mov	r6, r3
 800c668:	f101 0c14 	add.w	ip, r1, #20
 800c66c:	2000      	movs	r0, #0
 800c66e:	f8dc 3000 	ldr.w	r3, [ip]
 800c672:	b299      	uxth	r1, r3
 800c674:	fb02 6101 	mla	r1, r2, r1, r6
 800c678:	0c1e      	lsrs	r6, r3, #16
 800c67a:	0c0b      	lsrs	r3, r1, #16
 800c67c:	fb02 3306 	mla	r3, r2, r6, r3
 800c680:	b289      	uxth	r1, r1
 800c682:	3001      	adds	r0, #1
 800c684:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800c688:	4285      	cmp	r5, r0
 800c68a:	f84c 1b04 	str.w	r1, [ip], #4
 800c68e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800c692:	dcec      	bgt.n	800c66e <__multadd+0x12>
 800c694:	b30e      	cbz	r6, 800c6da <__multadd+0x7e>
 800c696:	68a3      	ldr	r3, [r4, #8]
 800c698:	42ab      	cmp	r3, r5
 800c69a:	dc19      	bgt.n	800c6d0 <__multadd+0x74>
 800c69c:	6861      	ldr	r1, [r4, #4]
 800c69e:	4638      	mov	r0, r7
 800c6a0:	3101      	adds	r1, #1
 800c6a2:	f7ff ff79 	bl	800c598 <_Balloc>
 800c6a6:	4680      	mov	r8, r0
 800c6a8:	b928      	cbnz	r0, 800c6b6 <__multadd+0x5a>
 800c6aa:	4602      	mov	r2, r0
 800c6ac:	4b0c      	ldr	r3, [pc, #48]	; (800c6e0 <__multadd+0x84>)
 800c6ae:	480d      	ldr	r0, [pc, #52]	; (800c6e4 <__multadd+0x88>)
 800c6b0:	21b5      	movs	r1, #181	; 0xb5
 800c6b2:	f000 fd57 	bl	800d164 <__assert_func>
 800c6b6:	6922      	ldr	r2, [r4, #16]
 800c6b8:	3202      	adds	r2, #2
 800c6ba:	f104 010c 	add.w	r1, r4, #12
 800c6be:	0092      	lsls	r2, r2, #2
 800c6c0:	300c      	adds	r0, #12
 800c6c2:	f7ff ff5b 	bl	800c57c <memcpy>
 800c6c6:	4621      	mov	r1, r4
 800c6c8:	4638      	mov	r0, r7
 800c6ca:	f7ff ffa5 	bl	800c618 <_Bfree>
 800c6ce:	4644      	mov	r4, r8
 800c6d0:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800c6d4:	3501      	adds	r5, #1
 800c6d6:	615e      	str	r6, [r3, #20]
 800c6d8:	6125      	str	r5, [r4, #16]
 800c6da:	4620      	mov	r0, r4
 800c6dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c6e0:	0800f353 	.word	0x0800f353
 800c6e4:	0800f364 	.word	0x0800f364

0800c6e8 <__hi0bits>:
 800c6e8:	0c03      	lsrs	r3, r0, #16
 800c6ea:	041b      	lsls	r3, r3, #16
 800c6ec:	b9d3      	cbnz	r3, 800c724 <__hi0bits+0x3c>
 800c6ee:	0400      	lsls	r0, r0, #16
 800c6f0:	2310      	movs	r3, #16
 800c6f2:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800c6f6:	bf04      	itt	eq
 800c6f8:	0200      	lsleq	r0, r0, #8
 800c6fa:	3308      	addeq	r3, #8
 800c6fc:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800c700:	bf04      	itt	eq
 800c702:	0100      	lsleq	r0, r0, #4
 800c704:	3304      	addeq	r3, #4
 800c706:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800c70a:	bf04      	itt	eq
 800c70c:	0080      	lsleq	r0, r0, #2
 800c70e:	3302      	addeq	r3, #2
 800c710:	2800      	cmp	r0, #0
 800c712:	db05      	blt.n	800c720 <__hi0bits+0x38>
 800c714:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800c718:	f103 0301 	add.w	r3, r3, #1
 800c71c:	bf08      	it	eq
 800c71e:	2320      	moveq	r3, #32
 800c720:	4618      	mov	r0, r3
 800c722:	4770      	bx	lr
 800c724:	2300      	movs	r3, #0
 800c726:	e7e4      	b.n	800c6f2 <__hi0bits+0xa>

0800c728 <__lo0bits>:
 800c728:	6803      	ldr	r3, [r0, #0]
 800c72a:	f013 0207 	ands.w	r2, r3, #7
 800c72e:	4601      	mov	r1, r0
 800c730:	d00b      	beq.n	800c74a <__lo0bits+0x22>
 800c732:	07da      	lsls	r2, r3, #31
 800c734:	d423      	bmi.n	800c77e <__lo0bits+0x56>
 800c736:	0798      	lsls	r0, r3, #30
 800c738:	bf49      	itett	mi
 800c73a:	085b      	lsrmi	r3, r3, #1
 800c73c:	089b      	lsrpl	r3, r3, #2
 800c73e:	2001      	movmi	r0, #1
 800c740:	600b      	strmi	r3, [r1, #0]
 800c742:	bf5c      	itt	pl
 800c744:	600b      	strpl	r3, [r1, #0]
 800c746:	2002      	movpl	r0, #2
 800c748:	4770      	bx	lr
 800c74a:	b298      	uxth	r0, r3
 800c74c:	b9a8      	cbnz	r0, 800c77a <__lo0bits+0x52>
 800c74e:	0c1b      	lsrs	r3, r3, #16
 800c750:	2010      	movs	r0, #16
 800c752:	b2da      	uxtb	r2, r3
 800c754:	b90a      	cbnz	r2, 800c75a <__lo0bits+0x32>
 800c756:	3008      	adds	r0, #8
 800c758:	0a1b      	lsrs	r3, r3, #8
 800c75a:	071a      	lsls	r2, r3, #28
 800c75c:	bf04      	itt	eq
 800c75e:	091b      	lsreq	r3, r3, #4
 800c760:	3004      	addeq	r0, #4
 800c762:	079a      	lsls	r2, r3, #30
 800c764:	bf04      	itt	eq
 800c766:	089b      	lsreq	r3, r3, #2
 800c768:	3002      	addeq	r0, #2
 800c76a:	07da      	lsls	r2, r3, #31
 800c76c:	d403      	bmi.n	800c776 <__lo0bits+0x4e>
 800c76e:	085b      	lsrs	r3, r3, #1
 800c770:	f100 0001 	add.w	r0, r0, #1
 800c774:	d005      	beq.n	800c782 <__lo0bits+0x5a>
 800c776:	600b      	str	r3, [r1, #0]
 800c778:	4770      	bx	lr
 800c77a:	4610      	mov	r0, r2
 800c77c:	e7e9      	b.n	800c752 <__lo0bits+0x2a>
 800c77e:	2000      	movs	r0, #0
 800c780:	4770      	bx	lr
 800c782:	2020      	movs	r0, #32
 800c784:	4770      	bx	lr
	...

0800c788 <__i2b>:
 800c788:	b510      	push	{r4, lr}
 800c78a:	460c      	mov	r4, r1
 800c78c:	2101      	movs	r1, #1
 800c78e:	f7ff ff03 	bl	800c598 <_Balloc>
 800c792:	4602      	mov	r2, r0
 800c794:	b928      	cbnz	r0, 800c7a2 <__i2b+0x1a>
 800c796:	4b05      	ldr	r3, [pc, #20]	; (800c7ac <__i2b+0x24>)
 800c798:	4805      	ldr	r0, [pc, #20]	; (800c7b0 <__i2b+0x28>)
 800c79a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800c79e:	f000 fce1 	bl	800d164 <__assert_func>
 800c7a2:	2301      	movs	r3, #1
 800c7a4:	6144      	str	r4, [r0, #20]
 800c7a6:	6103      	str	r3, [r0, #16]
 800c7a8:	bd10      	pop	{r4, pc}
 800c7aa:	bf00      	nop
 800c7ac:	0800f353 	.word	0x0800f353
 800c7b0:	0800f364 	.word	0x0800f364

0800c7b4 <__multiply>:
 800c7b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c7b8:	4691      	mov	r9, r2
 800c7ba:	690a      	ldr	r2, [r1, #16]
 800c7bc:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800c7c0:	429a      	cmp	r2, r3
 800c7c2:	bfb8      	it	lt
 800c7c4:	460b      	movlt	r3, r1
 800c7c6:	460c      	mov	r4, r1
 800c7c8:	bfbc      	itt	lt
 800c7ca:	464c      	movlt	r4, r9
 800c7cc:	4699      	movlt	r9, r3
 800c7ce:	6927      	ldr	r7, [r4, #16]
 800c7d0:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800c7d4:	68a3      	ldr	r3, [r4, #8]
 800c7d6:	6861      	ldr	r1, [r4, #4]
 800c7d8:	eb07 060a 	add.w	r6, r7, sl
 800c7dc:	42b3      	cmp	r3, r6
 800c7de:	b085      	sub	sp, #20
 800c7e0:	bfb8      	it	lt
 800c7e2:	3101      	addlt	r1, #1
 800c7e4:	f7ff fed8 	bl	800c598 <_Balloc>
 800c7e8:	b930      	cbnz	r0, 800c7f8 <__multiply+0x44>
 800c7ea:	4602      	mov	r2, r0
 800c7ec:	4b44      	ldr	r3, [pc, #272]	; (800c900 <__multiply+0x14c>)
 800c7ee:	4845      	ldr	r0, [pc, #276]	; (800c904 <__multiply+0x150>)
 800c7f0:	f240 115d 	movw	r1, #349	; 0x15d
 800c7f4:	f000 fcb6 	bl	800d164 <__assert_func>
 800c7f8:	f100 0514 	add.w	r5, r0, #20
 800c7fc:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800c800:	462b      	mov	r3, r5
 800c802:	2200      	movs	r2, #0
 800c804:	4543      	cmp	r3, r8
 800c806:	d321      	bcc.n	800c84c <__multiply+0x98>
 800c808:	f104 0314 	add.w	r3, r4, #20
 800c80c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800c810:	f109 0314 	add.w	r3, r9, #20
 800c814:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800c818:	9202      	str	r2, [sp, #8]
 800c81a:	1b3a      	subs	r2, r7, r4
 800c81c:	3a15      	subs	r2, #21
 800c81e:	f022 0203 	bic.w	r2, r2, #3
 800c822:	3204      	adds	r2, #4
 800c824:	f104 0115 	add.w	r1, r4, #21
 800c828:	428f      	cmp	r7, r1
 800c82a:	bf38      	it	cc
 800c82c:	2204      	movcc	r2, #4
 800c82e:	9201      	str	r2, [sp, #4]
 800c830:	9a02      	ldr	r2, [sp, #8]
 800c832:	9303      	str	r3, [sp, #12]
 800c834:	429a      	cmp	r2, r3
 800c836:	d80c      	bhi.n	800c852 <__multiply+0x9e>
 800c838:	2e00      	cmp	r6, #0
 800c83a:	dd03      	ble.n	800c844 <__multiply+0x90>
 800c83c:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800c840:	2b00      	cmp	r3, #0
 800c842:	d05a      	beq.n	800c8fa <__multiply+0x146>
 800c844:	6106      	str	r6, [r0, #16]
 800c846:	b005      	add	sp, #20
 800c848:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c84c:	f843 2b04 	str.w	r2, [r3], #4
 800c850:	e7d8      	b.n	800c804 <__multiply+0x50>
 800c852:	f8b3 a000 	ldrh.w	sl, [r3]
 800c856:	f1ba 0f00 	cmp.w	sl, #0
 800c85a:	d024      	beq.n	800c8a6 <__multiply+0xf2>
 800c85c:	f104 0e14 	add.w	lr, r4, #20
 800c860:	46a9      	mov	r9, r5
 800c862:	f04f 0c00 	mov.w	ip, #0
 800c866:	f85e 2b04 	ldr.w	r2, [lr], #4
 800c86a:	f8d9 1000 	ldr.w	r1, [r9]
 800c86e:	fa1f fb82 	uxth.w	fp, r2
 800c872:	b289      	uxth	r1, r1
 800c874:	fb0a 110b 	mla	r1, sl, fp, r1
 800c878:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800c87c:	f8d9 2000 	ldr.w	r2, [r9]
 800c880:	4461      	add	r1, ip
 800c882:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800c886:	fb0a c20b 	mla	r2, sl, fp, ip
 800c88a:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800c88e:	b289      	uxth	r1, r1
 800c890:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800c894:	4577      	cmp	r7, lr
 800c896:	f849 1b04 	str.w	r1, [r9], #4
 800c89a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800c89e:	d8e2      	bhi.n	800c866 <__multiply+0xb2>
 800c8a0:	9a01      	ldr	r2, [sp, #4]
 800c8a2:	f845 c002 	str.w	ip, [r5, r2]
 800c8a6:	9a03      	ldr	r2, [sp, #12]
 800c8a8:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800c8ac:	3304      	adds	r3, #4
 800c8ae:	f1b9 0f00 	cmp.w	r9, #0
 800c8b2:	d020      	beq.n	800c8f6 <__multiply+0x142>
 800c8b4:	6829      	ldr	r1, [r5, #0]
 800c8b6:	f104 0c14 	add.w	ip, r4, #20
 800c8ba:	46ae      	mov	lr, r5
 800c8bc:	f04f 0a00 	mov.w	sl, #0
 800c8c0:	f8bc b000 	ldrh.w	fp, [ip]
 800c8c4:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800c8c8:	fb09 220b 	mla	r2, r9, fp, r2
 800c8cc:	4492      	add	sl, r2
 800c8ce:	b289      	uxth	r1, r1
 800c8d0:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800c8d4:	f84e 1b04 	str.w	r1, [lr], #4
 800c8d8:	f85c 2b04 	ldr.w	r2, [ip], #4
 800c8dc:	f8be 1000 	ldrh.w	r1, [lr]
 800c8e0:	0c12      	lsrs	r2, r2, #16
 800c8e2:	fb09 1102 	mla	r1, r9, r2, r1
 800c8e6:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800c8ea:	4567      	cmp	r7, ip
 800c8ec:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800c8f0:	d8e6      	bhi.n	800c8c0 <__multiply+0x10c>
 800c8f2:	9a01      	ldr	r2, [sp, #4]
 800c8f4:	50a9      	str	r1, [r5, r2]
 800c8f6:	3504      	adds	r5, #4
 800c8f8:	e79a      	b.n	800c830 <__multiply+0x7c>
 800c8fa:	3e01      	subs	r6, #1
 800c8fc:	e79c      	b.n	800c838 <__multiply+0x84>
 800c8fe:	bf00      	nop
 800c900:	0800f353 	.word	0x0800f353
 800c904:	0800f364 	.word	0x0800f364

0800c908 <__pow5mult>:
 800c908:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c90c:	4615      	mov	r5, r2
 800c90e:	f012 0203 	ands.w	r2, r2, #3
 800c912:	4606      	mov	r6, r0
 800c914:	460f      	mov	r7, r1
 800c916:	d007      	beq.n	800c928 <__pow5mult+0x20>
 800c918:	4c25      	ldr	r4, [pc, #148]	; (800c9b0 <__pow5mult+0xa8>)
 800c91a:	3a01      	subs	r2, #1
 800c91c:	2300      	movs	r3, #0
 800c91e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800c922:	f7ff fe9b 	bl	800c65c <__multadd>
 800c926:	4607      	mov	r7, r0
 800c928:	10ad      	asrs	r5, r5, #2
 800c92a:	d03d      	beq.n	800c9a8 <__pow5mult+0xa0>
 800c92c:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800c92e:	b97c      	cbnz	r4, 800c950 <__pow5mult+0x48>
 800c930:	2010      	movs	r0, #16
 800c932:	f7ff fe1b 	bl	800c56c <malloc>
 800c936:	4602      	mov	r2, r0
 800c938:	6270      	str	r0, [r6, #36]	; 0x24
 800c93a:	b928      	cbnz	r0, 800c948 <__pow5mult+0x40>
 800c93c:	4b1d      	ldr	r3, [pc, #116]	; (800c9b4 <__pow5mult+0xac>)
 800c93e:	481e      	ldr	r0, [pc, #120]	; (800c9b8 <__pow5mult+0xb0>)
 800c940:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800c944:	f000 fc0e 	bl	800d164 <__assert_func>
 800c948:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800c94c:	6004      	str	r4, [r0, #0]
 800c94e:	60c4      	str	r4, [r0, #12]
 800c950:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800c954:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800c958:	b94c      	cbnz	r4, 800c96e <__pow5mult+0x66>
 800c95a:	f240 2171 	movw	r1, #625	; 0x271
 800c95e:	4630      	mov	r0, r6
 800c960:	f7ff ff12 	bl	800c788 <__i2b>
 800c964:	2300      	movs	r3, #0
 800c966:	f8c8 0008 	str.w	r0, [r8, #8]
 800c96a:	4604      	mov	r4, r0
 800c96c:	6003      	str	r3, [r0, #0]
 800c96e:	f04f 0900 	mov.w	r9, #0
 800c972:	07eb      	lsls	r3, r5, #31
 800c974:	d50a      	bpl.n	800c98c <__pow5mult+0x84>
 800c976:	4639      	mov	r1, r7
 800c978:	4622      	mov	r2, r4
 800c97a:	4630      	mov	r0, r6
 800c97c:	f7ff ff1a 	bl	800c7b4 <__multiply>
 800c980:	4639      	mov	r1, r7
 800c982:	4680      	mov	r8, r0
 800c984:	4630      	mov	r0, r6
 800c986:	f7ff fe47 	bl	800c618 <_Bfree>
 800c98a:	4647      	mov	r7, r8
 800c98c:	106d      	asrs	r5, r5, #1
 800c98e:	d00b      	beq.n	800c9a8 <__pow5mult+0xa0>
 800c990:	6820      	ldr	r0, [r4, #0]
 800c992:	b938      	cbnz	r0, 800c9a4 <__pow5mult+0x9c>
 800c994:	4622      	mov	r2, r4
 800c996:	4621      	mov	r1, r4
 800c998:	4630      	mov	r0, r6
 800c99a:	f7ff ff0b 	bl	800c7b4 <__multiply>
 800c99e:	6020      	str	r0, [r4, #0]
 800c9a0:	f8c0 9000 	str.w	r9, [r0]
 800c9a4:	4604      	mov	r4, r0
 800c9a6:	e7e4      	b.n	800c972 <__pow5mult+0x6a>
 800c9a8:	4638      	mov	r0, r7
 800c9aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c9ae:	bf00      	nop
 800c9b0:	0800f4b0 	.word	0x0800f4b0
 800c9b4:	0800f2e1 	.word	0x0800f2e1
 800c9b8:	0800f364 	.word	0x0800f364

0800c9bc <__lshift>:
 800c9bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c9c0:	460c      	mov	r4, r1
 800c9c2:	6849      	ldr	r1, [r1, #4]
 800c9c4:	6923      	ldr	r3, [r4, #16]
 800c9c6:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800c9ca:	68a3      	ldr	r3, [r4, #8]
 800c9cc:	4607      	mov	r7, r0
 800c9ce:	4691      	mov	r9, r2
 800c9d0:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800c9d4:	f108 0601 	add.w	r6, r8, #1
 800c9d8:	42b3      	cmp	r3, r6
 800c9da:	db0b      	blt.n	800c9f4 <__lshift+0x38>
 800c9dc:	4638      	mov	r0, r7
 800c9de:	f7ff fddb 	bl	800c598 <_Balloc>
 800c9e2:	4605      	mov	r5, r0
 800c9e4:	b948      	cbnz	r0, 800c9fa <__lshift+0x3e>
 800c9e6:	4602      	mov	r2, r0
 800c9e8:	4b2a      	ldr	r3, [pc, #168]	; (800ca94 <__lshift+0xd8>)
 800c9ea:	482b      	ldr	r0, [pc, #172]	; (800ca98 <__lshift+0xdc>)
 800c9ec:	f240 11d9 	movw	r1, #473	; 0x1d9
 800c9f0:	f000 fbb8 	bl	800d164 <__assert_func>
 800c9f4:	3101      	adds	r1, #1
 800c9f6:	005b      	lsls	r3, r3, #1
 800c9f8:	e7ee      	b.n	800c9d8 <__lshift+0x1c>
 800c9fa:	2300      	movs	r3, #0
 800c9fc:	f100 0114 	add.w	r1, r0, #20
 800ca00:	f100 0210 	add.w	r2, r0, #16
 800ca04:	4618      	mov	r0, r3
 800ca06:	4553      	cmp	r3, sl
 800ca08:	db37      	blt.n	800ca7a <__lshift+0xbe>
 800ca0a:	6920      	ldr	r0, [r4, #16]
 800ca0c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800ca10:	f104 0314 	add.w	r3, r4, #20
 800ca14:	f019 091f 	ands.w	r9, r9, #31
 800ca18:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800ca1c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800ca20:	d02f      	beq.n	800ca82 <__lshift+0xc6>
 800ca22:	f1c9 0e20 	rsb	lr, r9, #32
 800ca26:	468a      	mov	sl, r1
 800ca28:	f04f 0c00 	mov.w	ip, #0
 800ca2c:	681a      	ldr	r2, [r3, #0]
 800ca2e:	fa02 f209 	lsl.w	r2, r2, r9
 800ca32:	ea42 020c 	orr.w	r2, r2, ip
 800ca36:	f84a 2b04 	str.w	r2, [sl], #4
 800ca3a:	f853 2b04 	ldr.w	r2, [r3], #4
 800ca3e:	4298      	cmp	r0, r3
 800ca40:	fa22 fc0e 	lsr.w	ip, r2, lr
 800ca44:	d8f2      	bhi.n	800ca2c <__lshift+0x70>
 800ca46:	1b03      	subs	r3, r0, r4
 800ca48:	3b15      	subs	r3, #21
 800ca4a:	f023 0303 	bic.w	r3, r3, #3
 800ca4e:	3304      	adds	r3, #4
 800ca50:	f104 0215 	add.w	r2, r4, #21
 800ca54:	4290      	cmp	r0, r2
 800ca56:	bf38      	it	cc
 800ca58:	2304      	movcc	r3, #4
 800ca5a:	f841 c003 	str.w	ip, [r1, r3]
 800ca5e:	f1bc 0f00 	cmp.w	ip, #0
 800ca62:	d001      	beq.n	800ca68 <__lshift+0xac>
 800ca64:	f108 0602 	add.w	r6, r8, #2
 800ca68:	3e01      	subs	r6, #1
 800ca6a:	4638      	mov	r0, r7
 800ca6c:	612e      	str	r6, [r5, #16]
 800ca6e:	4621      	mov	r1, r4
 800ca70:	f7ff fdd2 	bl	800c618 <_Bfree>
 800ca74:	4628      	mov	r0, r5
 800ca76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ca7a:	f842 0f04 	str.w	r0, [r2, #4]!
 800ca7e:	3301      	adds	r3, #1
 800ca80:	e7c1      	b.n	800ca06 <__lshift+0x4a>
 800ca82:	3904      	subs	r1, #4
 800ca84:	f853 2b04 	ldr.w	r2, [r3], #4
 800ca88:	f841 2f04 	str.w	r2, [r1, #4]!
 800ca8c:	4298      	cmp	r0, r3
 800ca8e:	d8f9      	bhi.n	800ca84 <__lshift+0xc8>
 800ca90:	e7ea      	b.n	800ca68 <__lshift+0xac>
 800ca92:	bf00      	nop
 800ca94:	0800f353 	.word	0x0800f353
 800ca98:	0800f364 	.word	0x0800f364

0800ca9c <__mcmp>:
 800ca9c:	b530      	push	{r4, r5, lr}
 800ca9e:	6902      	ldr	r2, [r0, #16]
 800caa0:	690c      	ldr	r4, [r1, #16]
 800caa2:	1b12      	subs	r2, r2, r4
 800caa4:	d10e      	bne.n	800cac4 <__mcmp+0x28>
 800caa6:	f100 0314 	add.w	r3, r0, #20
 800caaa:	3114      	adds	r1, #20
 800caac:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800cab0:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800cab4:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800cab8:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800cabc:	42a5      	cmp	r5, r4
 800cabe:	d003      	beq.n	800cac8 <__mcmp+0x2c>
 800cac0:	d305      	bcc.n	800cace <__mcmp+0x32>
 800cac2:	2201      	movs	r2, #1
 800cac4:	4610      	mov	r0, r2
 800cac6:	bd30      	pop	{r4, r5, pc}
 800cac8:	4283      	cmp	r3, r0
 800caca:	d3f3      	bcc.n	800cab4 <__mcmp+0x18>
 800cacc:	e7fa      	b.n	800cac4 <__mcmp+0x28>
 800cace:	f04f 32ff 	mov.w	r2, #4294967295
 800cad2:	e7f7      	b.n	800cac4 <__mcmp+0x28>

0800cad4 <__mdiff>:
 800cad4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cad8:	460c      	mov	r4, r1
 800cada:	4606      	mov	r6, r0
 800cadc:	4611      	mov	r1, r2
 800cade:	4620      	mov	r0, r4
 800cae0:	4690      	mov	r8, r2
 800cae2:	f7ff ffdb 	bl	800ca9c <__mcmp>
 800cae6:	1e05      	subs	r5, r0, #0
 800cae8:	d110      	bne.n	800cb0c <__mdiff+0x38>
 800caea:	4629      	mov	r1, r5
 800caec:	4630      	mov	r0, r6
 800caee:	f7ff fd53 	bl	800c598 <_Balloc>
 800caf2:	b930      	cbnz	r0, 800cb02 <__mdiff+0x2e>
 800caf4:	4b3a      	ldr	r3, [pc, #232]	; (800cbe0 <__mdiff+0x10c>)
 800caf6:	4602      	mov	r2, r0
 800caf8:	f240 2132 	movw	r1, #562	; 0x232
 800cafc:	4839      	ldr	r0, [pc, #228]	; (800cbe4 <__mdiff+0x110>)
 800cafe:	f000 fb31 	bl	800d164 <__assert_func>
 800cb02:	2301      	movs	r3, #1
 800cb04:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800cb08:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cb0c:	bfa4      	itt	ge
 800cb0e:	4643      	movge	r3, r8
 800cb10:	46a0      	movge	r8, r4
 800cb12:	4630      	mov	r0, r6
 800cb14:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800cb18:	bfa6      	itte	ge
 800cb1a:	461c      	movge	r4, r3
 800cb1c:	2500      	movge	r5, #0
 800cb1e:	2501      	movlt	r5, #1
 800cb20:	f7ff fd3a 	bl	800c598 <_Balloc>
 800cb24:	b920      	cbnz	r0, 800cb30 <__mdiff+0x5c>
 800cb26:	4b2e      	ldr	r3, [pc, #184]	; (800cbe0 <__mdiff+0x10c>)
 800cb28:	4602      	mov	r2, r0
 800cb2a:	f44f 7110 	mov.w	r1, #576	; 0x240
 800cb2e:	e7e5      	b.n	800cafc <__mdiff+0x28>
 800cb30:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800cb34:	6926      	ldr	r6, [r4, #16]
 800cb36:	60c5      	str	r5, [r0, #12]
 800cb38:	f104 0914 	add.w	r9, r4, #20
 800cb3c:	f108 0514 	add.w	r5, r8, #20
 800cb40:	f100 0e14 	add.w	lr, r0, #20
 800cb44:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800cb48:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800cb4c:	f108 0210 	add.w	r2, r8, #16
 800cb50:	46f2      	mov	sl, lr
 800cb52:	2100      	movs	r1, #0
 800cb54:	f859 3b04 	ldr.w	r3, [r9], #4
 800cb58:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800cb5c:	fa1f f883 	uxth.w	r8, r3
 800cb60:	fa11 f18b 	uxtah	r1, r1, fp
 800cb64:	0c1b      	lsrs	r3, r3, #16
 800cb66:	eba1 0808 	sub.w	r8, r1, r8
 800cb6a:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800cb6e:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800cb72:	fa1f f888 	uxth.w	r8, r8
 800cb76:	1419      	asrs	r1, r3, #16
 800cb78:	454e      	cmp	r6, r9
 800cb7a:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800cb7e:	f84a 3b04 	str.w	r3, [sl], #4
 800cb82:	d8e7      	bhi.n	800cb54 <__mdiff+0x80>
 800cb84:	1b33      	subs	r3, r6, r4
 800cb86:	3b15      	subs	r3, #21
 800cb88:	f023 0303 	bic.w	r3, r3, #3
 800cb8c:	3304      	adds	r3, #4
 800cb8e:	3415      	adds	r4, #21
 800cb90:	42a6      	cmp	r6, r4
 800cb92:	bf38      	it	cc
 800cb94:	2304      	movcc	r3, #4
 800cb96:	441d      	add	r5, r3
 800cb98:	4473      	add	r3, lr
 800cb9a:	469e      	mov	lr, r3
 800cb9c:	462e      	mov	r6, r5
 800cb9e:	4566      	cmp	r6, ip
 800cba0:	d30e      	bcc.n	800cbc0 <__mdiff+0xec>
 800cba2:	f10c 0203 	add.w	r2, ip, #3
 800cba6:	1b52      	subs	r2, r2, r5
 800cba8:	f022 0203 	bic.w	r2, r2, #3
 800cbac:	3d03      	subs	r5, #3
 800cbae:	45ac      	cmp	ip, r5
 800cbb0:	bf38      	it	cc
 800cbb2:	2200      	movcc	r2, #0
 800cbb4:	441a      	add	r2, r3
 800cbb6:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800cbba:	b17b      	cbz	r3, 800cbdc <__mdiff+0x108>
 800cbbc:	6107      	str	r7, [r0, #16]
 800cbbe:	e7a3      	b.n	800cb08 <__mdiff+0x34>
 800cbc0:	f856 8b04 	ldr.w	r8, [r6], #4
 800cbc4:	fa11 f288 	uxtah	r2, r1, r8
 800cbc8:	1414      	asrs	r4, r2, #16
 800cbca:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800cbce:	b292      	uxth	r2, r2
 800cbd0:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800cbd4:	f84e 2b04 	str.w	r2, [lr], #4
 800cbd8:	1421      	asrs	r1, r4, #16
 800cbda:	e7e0      	b.n	800cb9e <__mdiff+0xca>
 800cbdc:	3f01      	subs	r7, #1
 800cbde:	e7ea      	b.n	800cbb6 <__mdiff+0xe2>
 800cbe0:	0800f353 	.word	0x0800f353
 800cbe4:	0800f364 	.word	0x0800f364

0800cbe8 <__d2b>:
 800cbe8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800cbec:	4689      	mov	r9, r1
 800cbee:	2101      	movs	r1, #1
 800cbf0:	ec57 6b10 	vmov	r6, r7, d0
 800cbf4:	4690      	mov	r8, r2
 800cbf6:	f7ff fccf 	bl	800c598 <_Balloc>
 800cbfa:	4604      	mov	r4, r0
 800cbfc:	b930      	cbnz	r0, 800cc0c <__d2b+0x24>
 800cbfe:	4602      	mov	r2, r0
 800cc00:	4b25      	ldr	r3, [pc, #148]	; (800cc98 <__d2b+0xb0>)
 800cc02:	4826      	ldr	r0, [pc, #152]	; (800cc9c <__d2b+0xb4>)
 800cc04:	f240 310a 	movw	r1, #778	; 0x30a
 800cc08:	f000 faac 	bl	800d164 <__assert_func>
 800cc0c:	f3c7 550a 	ubfx	r5, r7, #20, #11
 800cc10:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800cc14:	bb35      	cbnz	r5, 800cc64 <__d2b+0x7c>
 800cc16:	2e00      	cmp	r6, #0
 800cc18:	9301      	str	r3, [sp, #4]
 800cc1a:	d028      	beq.n	800cc6e <__d2b+0x86>
 800cc1c:	4668      	mov	r0, sp
 800cc1e:	9600      	str	r6, [sp, #0]
 800cc20:	f7ff fd82 	bl	800c728 <__lo0bits>
 800cc24:	9900      	ldr	r1, [sp, #0]
 800cc26:	b300      	cbz	r0, 800cc6a <__d2b+0x82>
 800cc28:	9a01      	ldr	r2, [sp, #4]
 800cc2a:	f1c0 0320 	rsb	r3, r0, #32
 800cc2e:	fa02 f303 	lsl.w	r3, r2, r3
 800cc32:	430b      	orrs	r3, r1
 800cc34:	40c2      	lsrs	r2, r0
 800cc36:	6163      	str	r3, [r4, #20]
 800cc38:	9201      	str	r2, [sp, #4]
 800cc3a:	9b01      	ldr	r3, [sp, #4]
 800cc3c:	61a3      	str	r3, [r4, #24]
 800cc3e:	2b00      	cmp	r3, #0
 800cc40:	bf14      	ite	ne
 800cc42:	2202      	movne	r2, #2
 800cc44:	2201      	moveq	r2, #1
 800cc46:	6122      	str	r2, [r4, #16]
 800cc48:	b1d5      	cbz	r5, 800cc80 <__d2b+0x98>
 800cc4a:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800cc4e:	4405      	add	r5, r0
 800cc50:	f8c9 5000 	str.w	r5, [r9]
 800cc54:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800cc58:	f8c8 0000 	str.w	r0, [r8]
 800cc5c:	4620      	mov	r0, r4
 800cc5e:	b003      	add	sp, #12
 800cc60:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cc64:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800cc68:	e7d5      	b.n	800cc16 <__d2b+0x2e>
 800cc6a:	6161      	str	r1, [r4, #20]
 800cc6c:	e7e5      	b.n	800cc3a <__d2b+0x52>
 800cc6e:	a801      	add	r0, sp, #4
 800cc70:	f7ff fd5a 	bl	800c728 <__lo0bits>
 800cc74:	9b01      	ldr	r3, [sp, #4]
 800cc76:	6163      	str	r3, [r4, #20]
 800cc78:	2201      	movs	r2, #1
 800cc7a:	6122      	str	r2, [r4, #16]
 800cc7c:	3020      	adds	r0, #32
 800cc7e:	e7e3      	b.n	800cc48 <__d2b+0x60>
 800cc80:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800cc84:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800cc88:	f8c9 0000 	str.w	r0, [r9]
 800cc8c:	6918      	ldr	r0, [r3, #16]
 800cc8e:	f7ff fd2b 	bl	800c6e8 <__hi0bits>
 800cc92:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800cc96:	e7df      	b.n	800cc58 <__d2b+0x70>
 800cc98:	0800f353 	.word	0x0800f353
 800cc9c:	0800f364 	.word	0x0800f364

0800cca0 <_calloc_r>:
 800cca0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cca2:	fba1 2402 	umull	r2, r4, r1, r2
 800cca6:	b94c      	cbnz	r4, 800ccbc <_calloc_r+0x1c>
 800cca8:	4611      	mov	r1, r2
 800ccaa:	9201      	str	r2, [sp, #4]
 800ccac:	f000 f87a 	bl	800cda4 <_malloc_r>
 800ccb0:	9a01      	ldr	r2, [sp, #4]
 800ccb2:	4605      	mov	r5, r0
 800ccb4:	b930      	cbnz	r0, 800ccc4 <_calloc_r+0x24>
 800ccb6:	4628      	mov	r0, r5
 800ccb8:	b003      	add	sp, #12
 800ccba:	bd30      	pop	{r4, r5, pc}
 800ccbc:	220c      	movs	r2, #12
 800ccbe:	6002      	str	r2, [r0, #0]
 800ccc0:	2500      	movs	r5, #0
 800ccc2:	e7f8      	b.n	800ccb6 <_calloc_r+0x16>
 800ccc4:	4621      	mov	r1, r4
 800ccc6:	f7fe f941 	bl	800af4c <memset>
 800ccca:	e7f4      	b.n	800ccb6 <_calloc_r+0x16>

0800cccc <_free_r>:
 800cccc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ccce:	2900      	cmp	r1, #0
 800ccd0:	d044      	beq.n	800cd5c <_free_r+0x90>
 800ccd2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800ccd6:	9001      	str	r0, [sp, #4]
 800ccd8:	2b00      	cmp	r3, #0
 800ccda:	f1a1 0404 	sub.w	r4, r1, #4
 800ccde:	bfb8      	it	lt
 800cce0:	18e4      	addlt	r4, r4, r3
 800cce2:	f000 fa9b 	bl	800d21c <__malloc_lock>
 800cce6:	4a1e      	ldr	r2, [pc, #120]	; (800cd60 <_free_r+0x94>)
 800cce8:	9801      	ldr	r0, [sp, #4]
 800ccea:	6813      	ldr	r3, [r2, #0]
 800ccec:	b933      	cbnz	r3, 800ccfc <_free_r+0x30>
 800ccee:	6063      	str	r3, [r4, #4]
 800ccf0:	6014      	str	r4, [r2, #0]
 800ccf2:	b003      	add	sp, #12
 800ccf4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800ccf8:	f000 ba96 	b.w	800d228 <__malloc_unlock>
 800ccfc:	42a3      	cmp	r3, r4
 800ccfe:	d908      	bls.n	800cd12 <_free_r+0x46>
 800cd00:	6825      	ldr	r5, [r4, #0]
 800cd02:	1961      	adds	r1, r4, r5
 800cd04:	428b      	cmp	r3, r1
 800cd06:	bf01      	itttt	eq
 800cd08:	6819      	ldreq	r1, [r3, #0]
 800cd0a:	685b      	ldreq	r3, [r3, #4]
 800cd0c:	1949      	addeq	r1, r1, r5
 800cd0e:	6021      	streq	r1, [r4, #0]
 800cd10:	e7ed      	b.n	800ccee <_free_r+0x22>
 800cd12:	461a      	mov	r2, r3
 800cd14:	685b      	ldr	r3, [r3, #4]
 800cd16:	b10b      	cbz	r3, 800cd1c <_free_r+0x50>
 800cd18:	42a3      	cmp	r3, r4
 800cd1a:	d9fa      	bls.n	800cd12 <_free_r+0x46>
 800cd1c:	6811      	ldr	r1, [r2, #0]
 800cd1e:	1855      	adds	r5, r2, r1
 800cd20:	42a5      	cmp	r5, r4
 800cd22:	d10b      	bne.n	800cd3c <_free_r+0x70>
 800cd24:	6824      	ldr	r4, [r4, #0]
 800cd26:	4421      	add	r1, r4
 800cd28:	1854      	adds	r4, r2, r1
 800cd2a:	42a3      	cmp	r3, r4
 800cd2c:	6011      	str	r1, [r2, #0]
 800cd2e:	d1e0      	bne.n	800ccf2 <_free_r+0x26>
 800cd30:	681c      	ldr	r4, [r3, #0]
 800cd32:	685b      	ldr	r3, [r3, #4]
 800cd34:	6053      	str	r3, [r2, #4]
 800cd36:	4421      	add	r1, r4
 800cd38:	6011      	str	r1, [r2, #0]
 800cd3a:	e7da      	b.n	800ccf2 <_free_r+0x26>
 800cd3c:	d902      	bls.n	800cd44 <_free_r+0x78>
 800cd3e:	230c      	movs	r3, #12
 800cd40:	6003      	str	r3, [r0, #0]
 800cd42:	e7d6      	b.n	800ccf2 <_free_r+0x26>
 800cd44:	6825      	ldr	r5, [r4, #0]
 800cd46:	1961      	adds	r1, r4, r5
 800cd48:	428b      	cmp	r3, r1
 800cd4a:	bf04      	itt	eq
 800cd4c:	6819      	ldreq	r1, [r3, #0]
 800cd4e:	685b      	ldreq	r3, [r3, #4]
 800cd50:	6063      	str	r3, [r4, #4]
 800cd52:	bf04      	itt	eq
 800cd54:	1949      	addeq	r1, r1, r5
 800cd56:	6021      	streq	r1, [r4, #0]
 800cd58:	6054      	str	r4, [r2, #4]
 800cd5a:	e7ca      	b.n	800ccf2 <_free_r+0x26>
 800cd5c:	b003      	add	sp, #12
 800cd5e:	bd30      	pop	{r4, r5, pc}
 800cd60:	200009d0 	.word	0x200009d0

0800cd64 <sbrk_aligned>:
 800cd64:	b570      	push	{r4, r5, r6, lr}
 800cd66:	4e0e      	ldr	r6, [pc, #56]	; (800cda0 <sbrk_aligned+0x3c>)
 800cd68:	460c      	mov	r4, r1
 800cd6a:	6831      	ldr	r1, [r6, #0]
 800cd6c:	4605      	mov	r5, r0
 800cd6e:	b911      	cbnz	r1, 800cd76 <sbrk_aligned+0x12>
 800cd70:	f000 f9e8 	bl	800d144 <_sbrk_r>
 800cd74:	6030      	str	r0, [r6, #0]
 800cd76:	4621      	mov	r1, r4
 800cd78:	4628      	mov	r0, r5
 800cd7a:	f000 f9e3 	bl	800d144 <_sbrk_r>
 800cd7e:	1c43      	adds	r3, r0, #1
 800cd80:	d00a      	beq.n	800cd98 <sbrk_aligned+0x34>
 800cd82:	1cc4      	adds	r4, r0, #3
 800cd84:	f024 0403 	bic.w	r4, r4, #3
 800cd88:	42a0      	cmp	r0, r4
 800cd8a:	d007      	beq.n	800cd9c <sbrk_aligned+0x38>
 800cd8c:	1a21      	subs	r1, r4, r0
 800cd8e:	4628      	mov	r0, r5
 800cd90:	f000 f9d8 	bl	800d144 <_sbrk_r>
 800cd94:	3001      	adds	r0, #1
 800cd96:	d101      	bne.n	800cd9c <sbrk_aligned+0x38>
 800cd98:	f04f 34ff 	mov.w	r4, #4294967295
 800cd9c:	4620      	mov	r0, r4
 800cd9e:	bd70      	pop	{r4, r5, r6, pc}
 800cda0:	200009d4 	.word	0x200009d4

0800cda4 <_malloc_r>:
 800cda4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cda8:	1ccd      	adds	r5, r1, #3
 800cdaa:	f025 0503 	bic.w	r5, r5, #3
 800cdae:	3508      	adds	r5, #8
 800cdb0:	2d0c      	cmp	r5, #12
 800cdb2:	bf38      	it	cc
 800cdb4:	250c      	movcc	r5, #12
 800cdb6:	2d00      	cmp	r5, #0
 800cdb8:	4607      	mov	r7, r0
 800cdba:	db01      	blt.n	800cdc0 <_malloc_r+0x1c>
 800cdbc:	42a9      	cmp	r1, r5
 800cdbe:	d905      	bls.n	800cdcc <_malloc_r+0x28>
 800cdc0:	230c      	movs	r3, #12
 800cdc2:	603b      	str	r3, [r7, #0]
 800cdc4:	2600      	movs	r6, #0
 800cdc6:	4630      	mov	r0, r6
 800cdc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cdcc:	4e2e      	ldr	r6, [pc, #184]	; (800ce88 <_malloc_r+0xe4>)
 800cdce:	f000 fa25 	bl	800d21c <__malloc_lock>
 800cdd2:	6833      	ldr	r3, [r6, #0]
 800cdd4:	461c      	mov	r4, r3
 800cdd6:	bb34      	cbnz	r4, 800ce26 <_malloc_r+0x82>
 800cdd8:	4629      	mov	r1, r5
 800cdda:	4638      	mov	r0, r7
 800cddc:	f7ff ffc2 	bl	800cd64 <sbrk_aligned>
 800cde0:	1c43      	adds	r3, r0, #1
 800cde2:	4604      	mov	r4, r0
 800cde4:	d14d      	bne.n	800ce82 <_malloc_r+0xde>
 800cde6:	6834      	ldr	r4, [r6, #0]
 800cde8:	4626      	mov	r6, r4
 800cdea:	2e00      	cmp	r6, #0
 800cdec:	d140      	bne.n	800ce70 <_malloc_r+0xcc>
 800cdee:	6823      	ldr	r3, [r4, #0]
 800cdf0:	4631      	mov	r1, r6
 800cdf2:	4638      	mov	r0, r7
 800cdf4:	eb04 0803 	add.w	r8, r4, r3
 800cdf8:	f000 f9a4 	bl	800d144 <_sbrk_r>
 800cdfc:	4580      	cmp	r8, r0
 800cdfe:	d13a      	bne.n	800ce76 <_malloc_r+0xd2>
 800ce00:	6821      	ldr	r1, [r4, #0]
 800ce02:	3503      	adds	r5, #3
 800ce04:	1a6d      	subs	r5, r5, r1
 800ce06:	f025 0503 	bic.w	r5, r5, #3
 800ce0a:	3508      	adds	r5, #8
 800ce0c:	2d0c      	cmp	r5, #12
 800ce0e:	bf38      	it	cc
 800ce10:	250c      	movcc	r5, #12
 800ce12:	4629      	mov	r1, r5
 800ce14:	4638      	mov	r0, r7
 800ce16:	f7ff ffa5 	bl	800cd64 <sbrk_aligned>
 800ce1a:	3001      	adds	r0, #1
 800ce1c:	d02b      	beq.n	800ce76 <_malloc_r+0xd2>
 800ce1e:	6823      	ldr	r3, [r4, #0]
 800ce20:	442b      	add	r3, r5
 800ce22:	6023      	str	r3, [r4, #0]
 800ce24:	e00e      	b.n	800ce44 <_malloc_r+0xa0>
 800ce26:	6822      	ldr	r2, [r4, #0]
 800ce28:	1b52      	subs	r2, r2, r5
 800ce2a:	d41e      	bmi.n	800ce6a <_malloc_r+0xc6>
 800ce2c:	2a0b      	cmp	r2, #11
 800ce2e:	d916      	bls.n	800ce5e <_malloc_r+0xba>
 800ce30:	1961      	adds	r1, r4, r5
 800ce32:	42a3      	cmp	r3, r4
 800ce34:	6025      	str	r5, [r4, #0]
 800ce36:	bf18      	it	ne
 800ce38:	6059      	strne	r1, [r3, #4]
 800ce3a:	6863      	ldr	r3, [r4, #4]
 800ce3c:	bf08      	it	eq
 800ce3e:	6031      	streq	r1, [r6, #0]
 800ce40:	5162      	str	r2, [r4, r5]
 800ce42:	604b      	str	r3, [r1, #4]
 800ce44:	4638      	mov	r0, r7
 800ce46:	f104 060b 	add.w	r6, r4, #11
 800ce4a:	f000 f9ed 	bl	800d228 <__malloc_unlock>
 800ce4e:	f026 0607 	bic.w	r6, r6, #7
 800ce52:	1d23      	adds	r3, r4, #4
 800ce54:	1af2      	subs	r2, r6, r3
 800ce56:	d0b6      	beq.n	800cdc6 <_malloc_r+0x22>
 800ce58:	1b9b      	subs	r3, r3, r6
 800ce5a:	50a3      	str	r3, [r4, r2]
 800ce5c:	e7b3      	b.n	800cdc6 <_malloc_r+0x22>
 800ce5e:	6862      	ldr	r2, [r4, #4]
 800ce60:	42a3      	cmp	r3, r4
 800ce62:	bf0c      	ite	eq
 800ce64:	6032      	streq	r2, [r6, #0]
 800ce66:	605a      	strne	r2, [r3, #4]
 800ce68:	e7ec      	b.n	800ce44 <_malloc_r+0xa0>
 800ce6a:	4623      	mov	r3, r4
 800ce6c:	6864      	ldr	r4, [r4, #4]
 800ce6e:	e7b2      	b.n	800cdd6 <_malloc_r+0x32>
 800ce70:	4634      	mov	r4, r6
 800ce72:	6876      	ldr	r6, [r6, #4]
 800ce74:	e7b9      	b.n	800cdea <_malloc_r+0x46>
 800ce76:	230c      	movs	r3, #12
 800ce78:	603b      	str	r3, [r7, #0]
 800ce7a:	4638      	mov	r0, r7
 800ce7c:	f000 f9d4 	bl	800d228 <__malloc_unlock>
 800ce80:	e7a1      	b.n	800cdc6 <_malloc_r+0x22>
 800ce82:	6025      	str	r5, [r4, #0]
 800ce84:	e7de      	b.n	800ce44 <_malloc_r+0xa0>
 800ce86:	bf00      	nop
 800ce88:	200009d0 	.word	0x200009d0

0800ce8c <__ssputs_r>:
 800ce8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ce90:	688e      	ldr	r6, [r1, #8]
 800ce92:	429e      	cmp	r6, r3
 800ce94:	4682      	mov	sl, r0
 800ce96:	460c      	mov	r4, r1
 800ce98:	4690      	mov	r8, r2
 800ce9a:	461f      	mov	r7, r3
 800ce9c:	d838      	bhi.n	800cf10 <__ssputs_r+0x84>
 800ce9e:	898a      	ldrh	r2, [r1, #12]
 800cea0:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800cea4:	d032      	beq.n	800cf0c <__ssputs_r+0x80>
 800cea6:	6825      	ldr	r5, [r4, #0]
 800cea8:	6909      	ldr	r1, [r1, #16]
 800ceaa:	eba5 0901 	sub.w	r9, r5, r1
 800ceae:	6965      	ldr	r5, [r4, #20]
 800ceb0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800ceb4:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800ceb8:	3301      	adds	r3, #1
 800ceba:	444b      	add	r3, r9
 800cebc:	106d      	asrs	r5, r5, #1
 800cebe:	429d      	cmp	r5, r3
 800cec0:	bf38      	it	cc
 800cec2:	461d      	movcc	r5, r3
 800cec4:	0553      	lsls	r3, r2, #21
 800cec6:	d531      	bpl.n	800cf2c <__ssputs_r+0xa0>
 800cec8:	4629      	mov	r1, r5
 800ceca:	f7ff ff6b 	bl	800cda4 <_malloc_r>
 800cece:	4606      	mov	r6, r0
 800ced0:	b950      	cbnz	r0, 800cee8 <__ssputs_r+0x5c>
 800ced2:	230c      	movs	r3, #12
 800ced4:	f8ca 3000 	str.w	r3, [sl]
 800ced8:	89a3      	ldrh	r3, [r4, #12]
 800ceda:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800cede:	81a3      	strh	r3, [r4, #12]
 800cee0:	f04f 30ff 	mov.w	r0, #4294967295
 800cee4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cee8:	6921      	ldr	r1, [r4, #16]
 800ceea:	464a      	mov	r2, r9
 800ceec:	f7ff fb46 	bl	800c57c <memcpy>
 800cef0:	89a3      	ldrh	r3, [r4, #12]
 800cef2:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800cef6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800cefa:	81a3      	strh	r3, [r4, #12]
 800cefc:	6126      	str	r6, [r4, #16]
 800cefe:	6165      	str	r5, [r4, #20]
 800cf00:	444e      	add	r6, r9
 800cf02:	eba5 0509 	sub.w	r5, r5, r9
 800cf06:	6026      	str	r6, [r4, #0]
 800cf08:	60a5      	str	r5, [r4, #8]
 800cf0a:	463e      	mov	r6, r7
 800cf0c:	42be      	cmp	r6, r7
 800cf0e:	d900      	bls.n	800cf12 <__ssputs_r+0x86>
 800cf10:	463e      	mov	r6, r7
 800cf12:	6820      	ldr	r0, [r4, #0]
 800cf14:	4632      	mov	r2, r6
 800cf16:	4641      	mov	r1, r8
 800cf18:	f000 f966 	bl	800d1e8 <memmove>
 800cf1c:	68a3      	ldr	r3, [r4, #8]
 800cf1e:	1b9b      	subs	r3, r3, r6
 800cf20:	60a3      	str	r3, [r4, #8]
 800cf22:	6823      	ldr	r3, [r4, #0]
 800cf24:	4433      	add	r3, r6
 800cf26:	6023      	str	r3, [r4, #0]
 800cf28:	2000      	movs	r0, #0
 800cf2a:	e7db      	b.n	800cee4 <__ssputs_r+0x58>
 800cf2c:	462a      	mov	r2, r5
 800cf2e:	f000 f981 	bl	800d234 <_realloc_r>
 800cf32:	4606      	mov	r6, r0
 800cf34:	2800      	cmp	r0, #0
 800cf36:	d1e1      	bne.n	800cefc <__ssputs_r+0x70>
 800cf38:	6921      	ldr	r1, [r4, #16]
 800cf3a:	4650      	mov	r0, sl
 800cf3c:	f7ff fec6 	bl	800cccc <_free_r>
 800cf40:	e7c7      	b.n	800ced2 <__ssputs_r+0x46>
	...

0800cf44 <_svfiprintf_r>:
 800cf44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf48:	4698      	mov	r8, r3
 800cf4a:	898b      	ldrh	r3, [r1, #12]
 800cf4c:	061b      	lsls	r3, r3, #24
 800cf4e:	b09d      	sub	sp, #116	; 0x74
 800cf50:	4607      	mov	r7, r0
 800cf52:	460d      	mov	r5, r1
 800cf54:	4614      	mov	r4, r2
 800cf56:	d50e      	bpl.n	800cf76 <_svfiprintf_r+0x32>
 800cf58:	690b      	ldr	r3, [r1, #16]
 800cf5a:	b963      	cbnz	r3, 800cf76 <_svfiprintf_r+0x32>
 800cf5c:	2140      	movs	r1, #64	; 0x40
 800cf5e:	f7ff ff21 	bl	800cda4 <_malloc_r>
 800cf62:	6028      	str	r0, [r5, #0]
 800cf64:	6128      	str	r0, [r5, #16]
 800cf66:	b920      	cbnz	r0, 800cf72 <_svfiprintf_r+0x2e>
 800cf68:	230c      	movs	r3, #12
 800cf6a:	603b      	str	r3, [r7, #0]
 800cf6c:	f04f 30ff 	mov.w	r0, #4294967295
 800cf70:	e0d1      	b.n	800d116 <_svfiprintf_r+0x1d2>
 800cf72:	2340      	movs	r3, #64	; 0x40
 800cf74:	616b      	str	r3, [r5, #20]
 800cf76:	2300      	movs	r3, #0
 800cf78:	9309      	str	r3, [sp, #36]	; 0x24
 800cf7a:	2320      	movs	r3, #32
 800cf7c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800cf80:	f8cd 800c 	str.w	r8, [sp, #12]
 800cf84:	2330      	movs	r3, #48	; 0x30
 800cf86:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 800d130 <_svfiprintf_r+0x1ec>
 800cf8a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800cf8e:	f04f 0901 	mov.w	r9, #1
 800cf92:	4623      	mov	r3, r4
 800cf94:	469a      	mov	sl, r3
 800cf96:	f813 2b01 	ldrb.w	r2, [r3], #1
 800cf9a:	b10a      	cbz	r2, 800cfa0 <_svfiprintf_r+0x5c>
 800cf9c:	2a25      	cmp	r2, #37	; 0x25
 800cf9e:	d1f9      	bne.n	800cf94 <_svfiprintf_r+0x50>
 800cfa0:	ebba 0b04 	subs.w	fp, sl, r4
 800cfa4:	d00b      	beq.n	800cfbe <_svfiprintf_r+0x7a>
 800cfa6:	465b      	mov	r3, fp
 800cfa8:	4622      	mov	r2, r4
 800cfaa:	4629      	mov	r1, r5
 800cfac:	4638      	mov	r0, r7
 800cfae:	f7ff ff6d 	bl	800ce8c <__ssputs_r>
 800cfb2:	3001      	adds	r0, #1
 800cfb4:	f000 80aa 	beq.w	800d10c <_svfiprintf_r+0x1c8>
 800cfb8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800cfba:	445a      	add	r2, fp
 800cfbc:	9209      	str	r2, [sp, #36]	; 0x24
 800cfbe:	f89a 3000 	ldrb.w	r3, [sl]
 800cfc2:	2b00      	cmp	r3, #0
 800cfc4:	f000 80a2 	beq.w	800d10c <_svfiprintf_r+0x1c8>
 800cfc8:	2300      	movs	r3, #0
 800cfca:	f04f 32ff 	mov.w	r2, #4294967295
 800cfce:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800cfd2:	f10a 0a01 	add.w	sl, sl, #1
 800cfd6:	9304      	str	r3, [sp, #16]
 800cfd8:	9307      	str	r3, [sp, #28]
 800cfda:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800cfde:	931a      	str	r3, [sp, #104]	; 0x68
 800cfe0:	4654      	mov	r4, sl
 800cfe2:	2205      	movs	r2, #5
 800cfe4:	f814 1b01 	ldrb.w	r1, [r4], #1
 800cfe8:	4851      	ldr	r0, [pc, #324]	; (800d130 <_svfiprintf_r+0x1ec>)
 800cfea:	f7f3 f919 	bl	8000220 <memchr>
 800cfee:	9a04      	ldr	r2, [sp, #16]
 800cff0:	b9d8      	cbnz	r0, 800d02a <_svfiprintf_r+0xe6>
 800cff2:	06d0      	lsls	r0, r2, #27
 800cff4:	bf44      	itt	mi
 800cff6:	2320      	movmi	r3, #32
 800cff8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800cffc:	0711      	lsls	r1, r2, #28
 800cffe:	bf44      	itt	mi
 800d000:	232b      	movmi	r3, #43	; 0x2b
 800d002:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800d006:	f89a 3000 	ldrb.w	r3, [sl]
 800d00a:	2b2a      	cmp	r3, #42	; 0x2a
 800d00c:	d015      	beq.n	800d03a <_svfiprintf_r+0xf6>
 800d00e:	9a07      	ldr	r2, [sp, #28]
 800d010:	4654      	mov	r4, sl
 800d012:	2000      	movs	r0, #0
 800d014:	f04f 0c0a 	mov.w	ip, #10
 800d018:	4621      	mov	r1, r4
 800d01a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d01e:	3b30      	subs	r3, #48	; 0x30
 800d020:	2b09      	cmp	r3, #9
 800d022:	d94e      	bls.n	800d0c2 <_svfiprintf_r+0x17e>
 800d024:	b1b0      	cbz	r0, 800d054 <_svfiprintf_r+0x110>
 800d026:	9207      	str	r2, [sp, #28]
 800d028:	e014      	b.n	800d054 <_svfiprintf_r+0x110>
 800d02a:	eba0 0308 	sub.w	r3, r0, r8
 800d02e:	fa09 f303 	lsl.w	r3, r9, r3
 800d032:	4313      	orrs	r3, r2
 800d034:	9304      	str	r3, [sp, #16]
 800d036:	46a2      	mov	sl, r4
 800d038:	e7d2      	b.n	800cfe0 <_svfiprintf_r+0x9c>
 800d03a:	9b03      	ldr	r3, [sp, #12]
 800d03c:	1d19      	adds	r1, r3, #4
 800d03e:	681b      	ldr	r3, [r3, #0]
 800d040:	9103      	str	r1, [sp, #12]
 800d042:	2b00      	cmp	r3, #0
 800d044:	bfbb      	ittet	lt
 800d046:	425b      	neglt	r3, r3
 800d048:	f042 0202 	orrlt.w	r2, r2, #2
 800d04c:	9307      	strge	r3, [sp, #28]
 800d04e:	9307      	strlt	r3, [sp, #28]
 800d050:	bfb8      	it	lt
 800d052:	9204      	strlt	r2, [sp, #16]
 800d054:	7823      	ldrb	r3, [r4, #0]
 800d056:	2b2e      	cmp	r3, #46	; 0x2e
 800d058:	d10c      	bne.n	800d074 <_svfiprintf_r+0x130>
 800d05a:	7863      	ldrb	r3, [r4, #1]
 800d05c:	2b2a      	cmp	r3, #42	; 0x2a
 800d05e:	d135      	bne.n	800d0cc <_svfiprintf_r+0x188>
 800d060:	9b03      	ldr	r3, [sp, #12]
 800d062:	1d1a      	adds	r2, r3, #4
 800d064:	681b      	ldr	r3, [r3, #0]
 800d066:	9203      	str	r2, [sp, #12]
 800d068:	2b00      	cmp	r3, #0
 800d06a:	bfb8      	it	lt
 800d06c:	f04f 33ff 	movlt.w	r3, #4294967295
 800d070:	3402      	adds	r4, #2
 800d072:	9305      	str	r3, [sp, #20]
 800d074:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800d140 <_svfiprintf_r+0x1fc>
 800d078:	7821      	ldrb	r1, [r4, #0]
 800d07a:	2203      	movs	r2, #3
 800d07c:	4650      	mov	r0, sl
 800d07e:	f7f3 f8cf 	bl	8000220 <memchr>
 800d082:	b140      	cbz	r0, 800d096 <_svfiprintf_r+0x152>
 800d084:	2340      	movs	r3, #64	; 0x40
 800d086:	eba0 000a 	sub.w	r0, r0, sl
 800d08a:	fa03 f000 	lsl.w	r0, r3, r0
 800d08e:	9b04      	ldr	r3, [sp, #16]
 800d090:	4303      	orrs	r3, r0
 800d092:	3401      	adds	r4, #1
 800d094:	9304      	str	r3, [sp, #16]
 800d096:	f814 1b01 	ldrb.w	r1, [r4], #1
 800d09a:	4826      	ldr	r0, [pc, #152]	; (800d134 <_svfiprintf_r+0x1f0>)
 800d09c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800d0a0:	2206      	movs	r2, #6
 800d0a2:	f7f3 f8bd 	bl	8000220 <memchr>
 800d0a6:	2800      	cmp	r0, #0
 800d0a8:	d038      	beq.n	800d11c <_svfiprintf_r+0x1d8>
 800d0aa:	4b23      	ldr	r3, [pc, #140]	; (800d138 <_svfiprintf_r+0x1f4>)
 800d0ac:	bb1b      	cbnz	r3, 800d0f6 <_svfiprintf_r+0x1b2>
 800d0ae:	9b03      	ldr	r3, [sp, #12]
 800d0b0:	3307      	adds	r3, #7
 800d0b2:	f023 0307 	bic.w	r3, r3, #7
 800d0b6:	3308      	adds	r3, #8
 800d0b8:	9303      	str	r3, [sp, #12]
 800d0ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d0bc:	4433      	add	r3, r6
 800d0be:	9309      	str	r3, [sp, #36]	; 0x24
 800d0c0:	e767      	b.n	800cf92 <_svfiprintf_r+0x4e>
 800d0c2:	fb0c 3202 	mla	r2, ip, r2, r3
 800d0c6:	460c      	mov	r4, r1
 800d0c8:	2001      	movs	r0, #1
 800d0ca:	e7a5      	b.n	800d018 <_svfiprintf_r+0xd4>
 800d0cc:	2300      	movs	r3, #0
 800d0ce:	3401      	adds	r4, #1
 800d0d0:	9305      	str	r3, [sp, #20]
 800d0d2:	4619      	mov	r1, r3
 800d0d4:	f04f 0c0a 	mov.w	ip, #10
 800d0d8:	4620      	mov	r0, r4
 800d0da:	f810 2b01 	ldrb.w	r2, [r0], #1
 800d0de:	3a30      	subs	r2, #48	; 0x30
 800d0e0:	2a09      	cmp	r2, #9
 800d0e2:	d903      	bls.n	800d0ec <_svfiprintf_r+0x1a8>
 800d0e4:	2b00      	cmp	r3, #0
 800d0e6:	d0c5      	beq.n	800d074 <_svfiprintf_r+0x130>
 800d0e8:	9105      	str	r1, [sp, #20]
 800d0ea:	e7c3      	b.n	800d074 <_svfiprintf_r+0x130>
 800d0ec:	fb0c 2101 	mla	r1, ip, r1, r2
 800d0f0:	4604      	mov	r4, r0
 800d0f2:	2301      	movs	r3, #1
 800d0f4:	e7f0      	b.n	800d0d8 <_svfiprintf_r+0x194>
 800d0f6:	ab03      	add	r3, sp, #12
 800d0f8:	9300      	str	r3, [sp, #0]
 800d0fa:	462a      	mov	r2, r5
 800d0fc:	4b0f      	ldr	r3, [pc, #60]	; (800d13c <_svfiprintf_r+0x1f8>)
 800d0fe:	a904      	add	r1, sp, #16
 800d100:	4638      	mov	r0, r7
 800d102:	f7fd ffcb 	bl	800b09c <_printf_float>
 800d106:	1c42      	adds	r2, r0, #1
 800d108:	4606      	mov	r6, r0
 800d10a:	d1d6      	bne.n	800d0ba <_svfiprintf_r+0x176>
 800d10c:	89ab      	ldrh	r3, [r5, #12]
 800d10e:	065b      	lsls	r3, r3, #25
 800d110:	f53f af2c 	bmi.w	800cf6c <_svfiprintf_r+0x28>
 800d114:	9809      	ldr	r0, [sp, #36]	; 0x24
 800d116:	b01d      	add	sp, #116	; 0x74
 800d118:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d11c:	ab03      	add	r3, sp, #12
 800d11e:	9300      	str	r3, [sp, #0]
 800d120:	462a      	mov	r2, r5
 800d122:	4b06      	ldr	r3, [pc, #24]	; (800d13c <_svfiprintf_r+0x1f8>)
 800d124:	a904      	add	r1, sp, #16
 800d126:	4638      	mov	r0, r7
 800d128:	f7fe fa5c 	bl	800b5e4 <_printf_i>
 800d12c:	e7eb      	b.n	800d106 <_svfiprintf_r+0x1c2>
 800d12e:	bf00      	nop
 800d130:	0800f4bc 	.word	0x0800f4bc
 800d134:	0800f4c6 	.word	0x0800f4c6
 800d138:	0800b09d 	.word	0x0800b09d
 800d13c:	0800ce8d 	.word	0x0800ce8d
 800d140:	0800f4c2 	.word	0x0800f4c2

0800d144 <_sbrk_r>:
 800d144:	b538      	push	{r3, r4, r5, lr}
 800d146:	4d06      	ldr	r5, [pc, #24]	; (800d160 <_sbrk_r+0x1c>)
 800d148:	2300      	movs	r3, #0
 800d14a:	4604      	mov	r4, r0
 800d14c:	4608      	mov	r0, r1
 800d14e:	602b      	str	r3, [r5, #0]
 800d150:	f7f8 f8c4 	bl	80052dc <_sbrk>
 800d154:	1c43      	adds	r3, r0, #1
 800d156:	d102      	bne.n	800d15e <_sbrk_r+0x1a>
 800d158:	682b      	ldr	r3, [r5, #0]
 800d15a:	b103      	cbz	r3, 800d15e <_sbrk_r+0x1a>
 800d15c:	6023      	str	r3, [r4, #0]
 800d15e:	bd38      	pop	{r3, r4, r5, pc}
 800d160:	200009d8 	.word	0x200009d8

0800d164 <__assert_func>:
 800d164:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d166:	4614      	mov	r4, r2
 800d168:	461a      	mov	r2, r3
 800d16a:	4b09      	ldr	r3, [pc, #36]	; (800d190 <__assert_func+0x2c>)
 800d16c:	681b      	ldr	r3, [r3, #0]
 800d16e:	4605      	mov	r5, r0
 800d170:	68d8      	ldr	r0, [r3, #12]
 800d172:	b14c      	cbz	r4, 800d188 <__assert_func+0x24>
 800d174:	4b07      	ldr	r3, [pc, #28]	; (800d194 <__assert_func+0x30>)
 800d176:	9100      	str	r1, [sp, #0]
 800d178:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800d17c:	4906      	ldr	r1, [pc, #24]	; (800d198 <__assert_func+0x34>)
 800d17e:	462b      	mov	r3, r5
 800d180:	f000 f80e 	bl	800d1a0 <fiprintf>
 800d184:	f000 faac 	bl	800d6e0 <abort>
 800d188:	4b04      	ldr	r3, [pc, #16]	; (800d19c <__assert_func+0x38>)
 800d18a:	461c      	mov	r4, r3
 800d18c:	e7f3      	b.n	800d176 <__assert_func+0x12>
 800d18e:	bf00      	nop
 800d190:	20000078 	.word	0x20000078
 800d194:	0800f4cd 	.word	0x0800f4cd
 800d198:	0800f4da 	.word	0x0800f4da
 800d19c:	0800f508 	.word	0x0800f508

0800d1a0 <fiprintf>:
 800d1a0:	b40e      	push	{r1, r2, r3}
 800d1a2:	b503      	push	{r0, r1, lr}
 800d1a4:	4601      	mov	r1, r0
 800d1a6:	ab03      	add	r3, sp, #12
 800d1a8:	4805      	ldr	r0, [pc, #20]	; (800d1c0 <fiprintf+0x20>)
 800d1aa:	f853 2b04 	ldr.w	r2, [r3], #4
 800d1ae:	6800      	ldr	r0, [r0, #0]
 800d1b0:	9301      	str	r3, [sp, #4]
 800d1b2:	f000 f897 	bl	800d2e4 <_vfiprintf_r>
 800d1b6:	b002      	add	sp, #8
 800d1b8:	f85d eb04 	ldr.w	lr, [sp], #4
 800d1bc:	b003      	add	sp, #12
 800d1be:	4770      	bx	lr
 800d1c0:	20000078 	.word	0x20000078

0800d1c4 <__ascii_mbtowc>:
 800d1c4:	b082      	sub	sp, #8
 800d1c6:	b901      	cbnz	r1, 800d1ca <__ascii_mbtowc+0x6>
 800d1c8:	a901      	add	r1, sp, #4
 800d1ca:	b142      	cbz	r2, 800d1de <__ascii_mbtowc+0x1a>
 800d1cc:	b14b      	cbz	r3, 800d1e2 <__ascii_mbtowc+0x1e>
 800d1ce:	7813      	ldrb	r3, [r2, #0]
 800d1d0:	600b      	str	r3, [r1, #0]
 800d1d2:	7812      	ldrb	r2, [r2, #0]
 800d1d4:	1e10      	subs	r0, r2, #0
 800d1d6:	bf18      	it	ne
 800d1d8:	2001      	movne	r0, #1
 800d1da:	b002      	add	sp, #8
 800d1dc:	4770      	bx	lr
 800d1de:	4610      	mov	r0, r2
 800d1e0:	e7fb      	b.n	800d1da <__ascii_mbtowc+0x16>
 800d1e2:	f06f 0001 	mvn.w	r0, #1
 800d1e6:	e7f8      	b.n	800d1da <__ascii_mbtowc+0x16>

0800d1e8 <memmove>:
 800d1e8:	4288      	cmp	r0, r1
 800d1ea:	b510      	push	{r4, lr}
 800d1ec:	eb01 0402 	add.w	r4, r1, r2
 800d1f0:	d902      	bls.n	800d1f8 <memmove+0x10>
 800d1f2:	4284      	cmp	r4, r0
 800d1f4:	4623      	mov	r3, r4
 800d1f6:	d807      	bhi.n	800d208 <memmove+0x20>
 800d1f8:	1e43      	subs	r3, r0, #1
 800d1fa:	42a1      	cmp	r1, r4
 800d1fc:	d008      	beq.n	800d210 <memmove+0x28>
 800d1fe:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d202:	f803 2f01 	strb.w	r2, [r3, #1]!
 800d206:	e7f8      	b.n	800d1fa <memmove+0x12>
 800d208:	4402      	add	r2, r0
 800d20a:	4601      	mov	r1, r0
 800d20c:	428a      	cmp	r2, r1
 800d20e:	d100      	bne.n	800d212 <memmove+0x2a>
 800d210:	bd10      	pop	{r4, pc}
 800d212:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800d216:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800d21a:	e7f7      	b.n	800d20c <memmove+0x24>

0800d21c <__malloc_lock>:
 800d21c:	4801      	ldr	r0, [pc, #4]	; (800d224 <__malloc_lock+0x8>)
 800d21e:	f000 bc1f 	b.w	800da60 <__retarget_lock_acquire_recursive>
 800d222:	bf00      	nop
 800d224:	200009dc 	.word	0x200009dc

0800d228 <__malloc_unlock>:
 800d228:	4801      	ldr	r0, [pc, #4]	; (800d230 <__malloc_unlock+0x8>)
 800d22a:	f000 bc1a 	b.w	800da62 <__retarget_lock_release_recursive>
 800d22e:	bf00      	nop
 800d230:	200009dc 	.word	0x200009dc

0800d234 <_realloc_r>:
 800d234:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d238:	4680      	mov	r8, r0
 800d23a:	4614      	mov	r4, r2
 800d23c:	460e      	mov	r6, r1
 800d23e:	b921      	cbnz	r1, 800d24a <_realloc_r+0x16>
 800d240:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d244:	4611      	mov	r1, r2
 800d246:	f7ff bdad 	b.w	800cda4 <_malloc_r>
 800d24a:	b92a      	cbnz	r2, 800d258 <_realloc_r+0x24>
 800d24c:	f7ff fd3e 	bl	800cccc <_free_r>
 800d250:	4625      	mov	r5, r4
 800d252:	4628      	mov	r0, r5
 800d254:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d258:	f000 fc6a 	bl	800db30 <_malloc_usable_size_r>
 800d25c:	4284      	cmp	r4, r0
 800d25e:	4607      	mov	r7, r0
 800d260:	d802      	bhi.n	800d268 <_realloc_r+0x34>
 800d262:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800d266:	d812      	bhi.n	800d28e <_realloc_r+0x5a>
 800d268:	4621      	mov	r1, r4
 800d26a:	4640      	mov	r0, r8
 800d26c:	f7ff fd9a 	bl	800cda4 <_malloc_r>
 800d270:	4605      	mov	r5, r0
 800d272:	2800      	cmp	r0, #0
 800d274:	d0ed      	beq.n	800d252 <_realloc_r+0x1e>
 800d276:	42bc      	cmp	r4, r7
 800d278:	4622      	mov	r2, r4
 800d27a:	4631      	mov	r1, r6
 800d27c:	bf28      	it	cs
 800d27e:	463a      	movcs	r2, r7
 800d280:	f7ff f97c 	bl	800c57c <memcpy>
 800d284:	4631      	mov	r1, r6
 800d286:	4640      	mov	r0, r8
 800d288:	f7ff fd20 	bl	800cccc <_free_r>
 800d28c:	e7e1      	b.n	800d252 <_realloc_r+0x1e>
 800d28e:	4635      	mov	r5, r6
 800d290:	e7df      	b.n	800d252 <_realloc_r+0x1e>

0800d292 <__sfputc_r>:
 800d292:	6893      	ldr	r3, [r2, #8]
 800d294:	3b01      	subs	r3, #1
 800d296:	2b00      	cmp	r3, #0
 800d298:	b410      	push	{r4}
 800d29a:	6093      	str	r3, [r2, #8]
 800d29c:	da08      	bge.n	800d2b0 <__sfputc_r+0x1e>
 800d29e:	6994      	ldr	r4, [r2, #24]
 800d2a0:	42a3      	cmp	r3, r4
 800d2a2:	db01      	blt.n	800d2a8 <__sfputc_r+0x16>
 800d2a4:	290a      	cmp	r1, #10
 800d2a6:	d103      	bne.n	800d2b0 <__sfputc_r+0x1e>
 800d2a8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d2ac:	f000 b94a 	b.w	800d544 <__swbuf_r>
 800d2b0:	6813      	ldr	r3, [r2, #0]
 800d2b2:	1c58      	adds	r0, r3, #1
 800d2b4:	6010      	str	r0, [r2, #0]
 800d2b6:	7019      	strb	r1, [r3, #0]
 800d2b8:	4608      	mov	r0, r1
 800d2ba:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d2be:	4770      	bx	lr

0800d2c0 <__sfputs_r>:
 800d2c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d2c2:	4606      	mov	r6, r0
 800d2c4:	460f      	mov	r7, r1
 800d2c6:	4614      	mov	r4, r2
 800d2c8:	18d5      	adds	r5, r2, r3
 800d2ca:	42ac      	cmp	r4, r5
 800d2cc:	d101      	bne.n	800d2d2 <__sfputs_r+0x12>
 800d2ce:	2000      	movs	r0, #0
 800d2d0:	e007      	b.n	800d2e2 <__sfputs_r+0x22>
 800d2d2:	f814 1b01 	ldrb.w	r1, [r4], #1
 800d2d6:	463a      	mov	r2, r7
 800d2d8:	4630      	mov	r0, r6
 800d2da:	f7ff ffda 	bl	800d292 <__sfputc_r>
 800d2de:	1c43      	adds	r3, r0, #1
 800d2e0:	d1f3      	bne.n	800d2ca <__sfputs_r+0xa>
 800d2e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d2e4 <_vfiprintf_r>:
 800d2e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2e8:	460d      	mov	r5, r1
 800d2ea:	b09d      	sub	sp, #116	; 0x74
 800d2ec:	4614      	mov	r4, r2
 800d2ee:	4698      	mov	r8, r3
 800d2f0:	4606      	mov	r6, r0
 800d2f2:	b118      	cbz	r0, 800d2fc <_vfiprintf_r+0x18>
 800d2f4:	6983      	ldr	r3, [r0, #24]
 800d2f6:	b90b      	cbnz	r3, 800d2fc <_vfiprintf_r+0x18>
 800d2f8:	f000 fb14 	bl	800d924 <__sinit>
 800d2fc:	4b89      	ldr	r3, [pc, #548]	; (800d524 <_vfiprintf_r+0x240>)
 800d2fe:	429d      	cmp	r5, r3
 800d300:	d11b      	bne.n	800d33a <_vfiprintf_r+0x56>
 800d302:	6875      	ldr	r5, [r6, #4]
 800d304:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800d306:	07d9      	lsls	r1, r3, #31
 800d308:	d405      	bmi.n	800d316 <_vfiprintf_r+0x32>
 800d30a:	89ab      	ldrh	r3, [r5, #12]
 800d30c:	059a      	lsls	r2, r3, #22
 800d30e:	d402      	bmi.n	800d316 <_vfiprintf_r+0x32>
 800d310:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800d312:	f000 fba5 	bl	800da60 <__retarget_lock_acquire_recursive>
 800d316:	89ab      	ldrh	r3, [r5, #12]
 800d318:	071b      	lsls	r3, r3, #28
 800d31a:	d501      	bpl.n	800d320 <_vfiprintf_r+0x3c>
 800d31c:	692b      	ldr	r3, [r5, #16]
 800d31e:	b9eb      	cbnz	r3, 800d35c <_vfiprintf_r+0x78>
 800d320:	4629      	mov	r1, r5
 800d322:	4630      	mov	r0, r6
 800d324:	f000 f96e 	bl	800d604 <__swsetup_r>
 800d328:	b1c0      	cbz	r0, 800d35c <_vfiprintf_r+0x78>
 800d32a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800d32c:	07dc      	lsls	r4, r3, #31
 800d32e:	d50e      	bpl.n	800d34e <_vfiprintf_r+0x6a>
 800d330:	f04f 30ff 	mov.w	r0, #4294967295
 800d334:	b01d      	add	sp, #116	; 0x74
 800d336:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d33a:	4b7b      	ldr	r3, [pc, #492]	; (800d528 <_vfiprintf_r+0x244>)
 800d33c:	429d      	cmp	r5, r3
 800d33e:	d101      	bne.n	800d344 <_vfiprintf_r+0x60>
 800d340:	68b5      	ldr	r5, [r6, #8]
 800d342:	e7df      	b.n	800d304 <_vfiprintf_r+0x20>
 800d344:	4b79      	ldr	r3, [pc, #484]	; (800d52c <_vfiprintf_r+0x248>)
 800d346:	429d      	cmp	r5, r3
 800d348:	bf08      	it	eq
 800d34a:	68f5      	ldreq	r5, [r6, #12]
 800d34c:	e7da      	b.n	800d304 <_vfiprintf_r+0x20>
 800d34e:	89ab      	ldrh	r3, [r5, #12]
 800d350:	0598      	lsls	r0, r3, #22
 800d352:	d4ed      	bmi.n	800d330 <_vfiprintf_r+0x4c>
 800d354:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800d356:	f000 fb84 	bl	800da62 <__retarget_lock_release_recursive>
 800d35a:	e7e9      	b.n	800d330 <_vfiprintf_r+0x4c>
 800d35c:	2300      	movs	r3, #0
 800d35e:	9309      	str	r3, [sp, #36]	; 0x24
 800d360:	2320      	movs	r3, #32
 800d362:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d366:	f8cd 800c 	str.w	r8, [sp, #12]
 800d36a:	2330      	movs	r3, #48	; 0x30
 800d36c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800d530 <_vfiprintf_r+0x24c>
 800d370:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800d374:	f04f 0901 	mov.w	r9, #1
 800d378:	4623      	mov	r3, r4
 800d37a:	469a      	mov	sl, r3
 800d37c:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d380:	b10a      	cbz	r2, 800d386 <_vfiprintf_r+0xa2>
 800d382:	2a25      	cmp	r2, #37	; 0x25
 800d384:	d1f9      	bne.n	800d37a <_vfiprintf_r+0x96>
 800d386:	ebba 0b04 	subs.w	fp, sl, r4
 800d38a:	d00b      	beq.n	800d3a4 <_vfiprintf_r+0xc0>
 800d38c:	465b      	mov	r3, fp
 800d38e:	4622      	mov	r2, r4
 800d390:	4629      	mov	r1, r5
 800d392:	4630      	mov	r0, r6
 800d394:	f7ff ff94 	bl	800d2c0 <__sfputs_r>
 800d398:	3001      	adds	r0, #1
 800d39a:	f000 80aa 	beq.w	800d4f2 <_vfiprintf_r+0x20e>
 800d39e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800d3a0:	445a      	add	r2, fp
 800d3a2:	9209      	str	r2, [sp, #36]	; 0x24
 800d3a4:	f89a 3000 	ldrb.w	r3, [sl]
 800d3a8:	2b00      	cmp	r3, #0
 800d3aa:	f000 80a2 	beq.w	800d4f2 <_vfiprintf_r+0x20e>
 800d3ae:	2300      	movs	r3, #0
 800d3b0:	f04f 32ff 	mov.w	r2, #4294967295
 800d3b4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800d3b8:	f10a 0a01 	add.w	sl, sl, #1
 800d3bc:	9304      	str	r3, [sp, #16]
 800d3be:	9307      	str	r3, [sp, #28]
 800d3c0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800d3c4:	931a      	str	r3, [sp, #104]	; 0x68
 800d3c6:	4654      	mov	r4, sl
 800d3c8:	2205      	movs	r2, #5
 800d3ca:	f814 1b01 	ldrb.w	r1, [r4], #1
 800d3ce:	4858      	ldr	r0, [pc, #352]	; (800d530 <_vfiprintf_r+0x24c>)
 800d3d0:	f7f2 ff26 	bl	8000220 <memchr>
 800d3d4:	9a04      	ldr	r2, [sp, #16]
 800d3d6:	b9d8      	cbnz	r0, 800d410 <_vfiprintf_r+0x12c>
 800d3d8:	06d1      	lsls	r1, r2, #27
 800d3da:	bf44      	itt	mi
 800d3dc:	2320      	movmi	r3, #32
 800d3de:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800d3e2:	0713      	lsls	r3, r2, #28
 800d3e4:	bf44      	itt	mi
 800d3e6:	232b      	movmi	r3, #43	; 0x2b
 800d3e8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800d3ec:	f89a 3000 	ldrb.w	r3, [sl]
 800d3f0:	2b2a      	cmp	r3, #42	; 0x2a
 800d3f2:	d015      	beq.n	800d420 <_vfiprintf_r+0x13c>
 800d3f4:	9a07      	ldr	r2, [sp, #28]
 800d3f6:	4654      	mov	r4, sl
 800d3f8:	2000      	movs	r0, #0
 800d3fa:	f04f 0c0a 	mov.w	ip, #10
 800d3fe:	4621      	mov	r1, r4
 800d400:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d404:	3b30      	subs	r3, #48	; 0x30
 800d406:	2b09      	cmp	r3, #9
 800d408:	d94e      	bls.n	800d4a8 <_vfiprintf_r+0x1c4>
 800d40a:	b1b0      	cbz	r0, 800d43a <_vfiprintf_r+0x156>
 800d40c:	9207      	str	r2, [sp, #28]
 800d40e:	e014      	b.n	800d43a <_vfiprintf_r+0x156>
 800d410:	eba0 0308 	sub.w	r3, r0, r8
 800d414:	fa09 f303 	lsl.w	r3, r9, r3
 800d418:	4313      	orrs	r3, r2
 800d41a:	9304      	str	r3, [sp, #16]
 800d41c:	46a2      	mov	sl, r4
 800d41e:	e7d2      	b.n	800d3c6 <_vfiprintf_r+0xe2>
 800d420:	9b03      	ldr	r3, [sp, #12]
 800d422:	1d19      	adds	r1, r3, #4
 800d424:	681b      	ldr	r3, [r3, #0]
 800d426:	9103      	str	r1, [sp, #12]
 800d428:	2b00      	cmp	r3, #0
 800d42a:	bfbb      	ittet	lt
 800d42c:	425b      	neglt	r3, r3
 800d42e:	f042 0202 	orrlt.w	r2, r2, #2
 800d432:	9307      	strge	r3, [sp, #28]
 800d434:	9307      	strlt	r3, [sp, #28]
 800d436:	bfb8      	it	lt
 800d438:	9204      	strlt	r2, [sp, #16]
 800d43a:	7823      	ldrb	r3, [r4, #0]
 800d43c:	2b2e      	cmp	r3, #46	; 0x2e
 800d43e:	d10c      	bne.n	800d45a <_vfiprintf_r+0x176>
 800d440:	7863      	ldrb	r3, [r4, #1]
 800d442:	2b2a      	cmp	r3, #42	; 0x2a
 800d444:	d135      	bne.n	800d4b2 <_vfiprintf_r+0x1ce>
 800d446:	9b03      	ldr	r3, [sp, #12]
 800d448:	1d1a      	adds	r2, r3, #4
 800d44a:	681b      	ldr	r3, [r3, #0]
 800d44c:	9203      	str	r2, [sp, #12]
 800d44e:	2b00      	cmp	r3, #0
 800d450:	bfb8      	it	lt
 800d452:	f04f 33ff 	movlt.w	r3, #4294967295
 800d456:	3402      	adds	r4, #2
 800d458:	9305      	str	r3, [sp, #20]
 800d45a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800d540 <_vfiprintf_r+0x25c>
 800d45e:	7821      	ldrb	r1, [r4, #0]
 800d460:	2203      	movs	r2, #3
 800d462:	4650      	mov	r0, sl
 800d464:	f7f2 fedc 	bl	8000220 <memchr>
 800d468:	b140      	cbz	r0, 800d47c <_vfiprintf_r+0x198>
 800d46a:	2340      	movs	r3, #64	; 0x40
 800d46c:	eba0 000a 	sub.w	r0, r0, sl
 800d470:	fa03 f000 	lsl.w	r0, r3, r0
 800d474:	9b04      	ldr	r3, [sp, #16]
 800d476:	4303      	orrs	r3, r0
 800d478:	3401      	adds	r4, #1
 800d47a:	9304      	str	r3, [sp, #16]
 800d47c:	f814 1b01 	ldrb.w	r1, [r4], #1
 800d480:	482c      	ldr	r0, [pc, #176]	; (800d534 <_vfiprintf_r+0x250>)
 800d482:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800d486:	2206      	movs	r2, #6
 800d488:	f7f2 feca 	bl	8000220 <memchr>
 800d48c:	2800      	cmp	r0, #0
 800d48e:	d03f      	beq.n	800d510 <_vfiprintf_r+0x22c>
 800d490:	4b29      	ldr	r3, [pc, #164]	; (800d538 <_vfiprintf_r+0x254>)
 800d492:	bb1b      	cbnz	r3, 800d4dc <_vfiprintf_r+0x1f8>
 800d494:	9b03      	ldr	r3, [sp, #12]
 800d496:	3307      	adds	r3, #7
 800d498:	f023 0307 	bic.w	r3, r3, #7
 800d49c:	3308      	adds	r3, #8
 800d49e:	9303      	str	r3, [sp, #12]
 800d4a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d4a2:	443b      	add	r3, r7
 800d4a4:	9309      	str	r3, [sp, #36]	; 0x24
 800d4a6:	e767      	b.n	800d378 <_vfiprintf_r+0x94>
 800d4a8:	fb0c 3202 	mla	r2, ip, r2, r3
 800d4ac:	460c      	mov	r4, r1
 800d4ae:	2001      	movs	r0, #1
 800d4b0:	e7a5      	b.n	800d3fe <_vfiprintf_r+0x11a>
 800d4b2:	2300      	movs	r3, #0
 800d4b4:	3401      	adds	r4, #1
 800d4b6:	9305      	str	r3, [sp, #20]
 800d4b8:	4619      	mov	r1, r3
 800d4ba:	f04f 0c0a 	mov.w	ip, #10
 800d4be:	4620      	mov	r0, r4
 800d4c0:	f810 2b01 	ldrb.w	r2, [r0], #1
 800d4c4:	3a30      	subs	r2, #48	; 0x30
 800d4c6:	2a09      	cmp	r2, #9
 800d4c8:	d903      	bls.n	800d4d2 <_vfiprintf_r+0x1ee>
 800d4ca:	2b00      	cmp	r3, #0
 800d4cc:	d0c5      	beq.n	800d45a <_vfiprintf_r+0x176>
 800d4ce:	9105      	str	r1, [sp, #20]
 800d4d0:	e7c3      	b.n	800d45a <_vfiprintf_r+0x176>
 800d4d2:	fb0c 2101 	mla	r1, ip, r1, r2
 800d4d6:	4604      	mov	r4, r0
 800d4d8:	2301      	movs	r3, #1
 800d4da:	e7f0      	b.n	800d4be <_vfiprintf_r+0x1da>
 800d4dc:	ab03      	add	r3, sp, #12
 800d4de:	9300      	str	r3, [sp, #0]
 800d4e0:	462a      	mov	r2, r5
 800d4e2:	4b16      	ldr	r3, [pc, #88]	; (800d53c <_vfiprintf_r+0x258>)
 800d4e4:	a904      	add	r1, sp, #16
 800d4e6:	4630      	mov	r0, r6
 800d4e8:	f7fd fdd8 	bl	800b09c <_printf_float>
 800d4ec:	4607      	mov	r7, r0
 800d4ee:	1c78      	adds	r0, r7, #1
 800d4f0:	d1d6      	bne.n	800d4a0 <_vfiprintf_r+0x1bc>
 800d4f2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800d4f4:	07d9      	lsls	r1, r3, #31
 800d4f6:	d405      	bmi.n	800d504 <_vfiprintf_r+0x220>
 800d4f8:	89ab      	ldrh	r3, [r5, #12]
 800d4fa:	059a      	lsls	r2, r3, #22
 800d4fc:	d402      	bmi.n	800d504 <_vfiprintf_r+0x220>
 800d4fe:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800d500:	f000 faaf 	bl	800da62 <__retarget_lock_release_recursive>
 800d504:	89ab      	ldrh	r3, [r5, #12]
 800d506:	065b      	lsls	r3, r3, #25
 800d508:	f53f af12 	bmi.w	800d330 <_vfiprintf_r+0x4c>
 800d50c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800d50e:	e711      	b.n	800d334 <_vfiprintf_r+0x50>
 800d510:	ab03      	add	r3, sp, #12
 800d512:	9300      	str	r3, [sp, #0]
 800d514:	462a      	mov	r2, r5
 800d516:	4b09      	ldr	r3, [pc, #36]	; (800d53c <_vfiprintf_r+0x258>)
 800d518:	a904      	add	r1, sp, #16
 800d51a:	4630      	mov	r0, r6
 800d51c:	f7fe f862 	bl	800b5e4 <_printf_i>
 800d520:	e7e4      	b.n	800d4ec <_vfiprintf_r+0x208>
 800d522:	bf00      	nop
 800d524:	0800f634 	.word	0x0800f634
 800d528:	0800f654 	.word	0x0800f654
 800d52c:	0800f614 	.word	0x0800f614
 800d530:	0800f4bc 	.word	0x0800f4bc
 800d534:	0800f4c6 	.word	0x0800f4c6
 800d538:	0800b09d 	.word	0x0800b09d
 800d53c:	0800d2c1 	.word	0x0800d2c1
 800d540:	0800f4c2 	.word	0x0800f4c2

0800d544 <__swbuf_r>:
 800d544:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d546:	460e      	mov	r6, r1
 800d548:	4614      	mov	r4, r2
 800d54a:	4605      	mov	r5, r0
 800d54c:	b118      	cbz	r0, 800d556 <__swbuf_r+0x12>
 800d54e:	6983      	ldr	r3, [r0, #24]
 800d550:	b90b      	cbnz	r3, 800d556 <__swbuf_r+0x12>
 800d552:	f000 f9e7 	bl	800d924 <__sinit>
 800d556:	4b21      	ldr	r3, [pc, #132]	; (800d5dc <__swbuf_r+0x98>)
 800d558:	429c      	cmp	r4, r3
 800d55a:	d12b      	bne.n	800d5b4 <__swbuf_r+0x70>
 800d55c:	686c      	ldr	r4, [r5, #4]
 800d55e:	69a3      	ldr	r3, [r4, #24]
 800d560:	60a3      	str	r3, [r4, #8]
 800d562:	89a3      	ldrh	r3, [r4, #12]
 800d564:	071a      	lsls	r2, r3, #28
 800d566:	d52f      	bpl.n	800d5c8 <__swbuf_r+0x84>
 800d568:	6923      	ldr	r3, [r4, #16]
 800d56a:	b36b      	cbz	r3, 800d5c8 <__swbuf_r+0x84>
 800d56c:	6923      	ldr	r3, [r4, #16]
 800d56e:	6820      	ldr	r0, [r4, #0]
 800d570:	1ac0      	subs	r0, r0, r3
 800d572:	6963      	ldr	r3, [r4, #20]
 800d574:	b2f6      	uxtb	r6, r6
 800d576:	4283      	cmp	r3, r0
 800d578:	4637      	mov	r7, r6
 800d57a:	dc04      	bgt.n	800d586 <__swbuf_r+0x42>
 800d57c:	4621      	mov	r1, r4
 800d57e:	4628      	mov	r0, r5
 800d580:	f000 f93c 	bl	800d7fc <_fflush_r>
 800d584:	bb30      	cbnz	r0, 800d5d4 <__swbuf_r+0x90>
 800d586:	68a3      	ldr	r3, [r4, #8]
 800d588:	3b01      	subs	r3, #1
 800d58a:	60a3      	str	r3, [r4, #8]
 800d58c:	6823      	ldr	r3, [r4, #0]
 800d58e:	1c5a      	adds	r2, r3, #1
 800d590:	6022      	str	r2, [r4, #0]
 800d592:	701e      	strb	r6, [r3, #0]
 800d594:	6963      	ldr	r3, [r4, #20]
 800d596:	3001      	adds	r0, #1
 800d598:	4283      	cmp	r3, r0
 800d59a:	d004      	beq.n	800d5a6 <__swbuf_r+0x62>
 800d59c:	89a3      	ldrh	r3, [r4, #12]
 800d59e:	07db      	lsls	r3, r3, #31
 800d5a0:	d506      	bpl.n	800d5b0 <__swbuf_r+0x6c>
 800d5a2:	2e0a      	cmp	r6, #10
 800d5a4:	d104      	bne.n	800d5b0 <__swbuf_r+0x6c>
 800d5a6:	4621      	mov	r1, r4
 800d5a8:	4628      	mov	r0, r5
 800d5aa:	f000 f927 	bl	800d7fc <_fflush_r>
 800d5ae:	b988      	cbnz	r0, 800d5d4 <__swbuf_r+0x90>
 800d5b0:	4638      	mov	r0, r7
 800d5b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d5b4:	4b0a      	ldr	r3, [pc, #40]	; (800d5e0 <__swbuf_r+0x9c>)
 800d5b6:	429c      	cmp	r4, r3
 800d5b8:	d101      	bne.n	800d5be <__swbuf_r+0x7a>
 800d5ba:	68ac      	ldr	r4, [r5, #8]
 800d5bc:	e7cf      	b.n	800d55e <__swbuf_r+0x1a>
 800d5be:	4b09      	ldr	r3, [pc, #36]	; (800d5e4 <__swbuf_r+0xa0>)
 800d5c0:	429c      	cmp	r4, r3
 800d5c2:	bf08      	it	eq
 800d5c4:	68ec      	ldreq	r4, [r5, #12]
 800d5c6:	e7ca      	b.n	800d55e <__swbuf_r+0x1a>
 800d5c8:	4621      	mov	r1, r4
 800d5ca:	4628      	mov	r0, r5
 800d5cc:	f000 f81a 	bl	800d604 <__swsetup_r>
 800d5d0:	2800      	cmp	r0, #0
 800d5d2:	d0cb      	beq.n	800d56c <__swbuf_r+0x28>
 800d5d4:	f04f 37ff 	mov.w	r7, #4294967295
 800d5d8:	e7ea      	b.n	800d5b0 <__swbuf_r+0x6c>
 800d5da:	bf00      	nop
 800d5dc:	0800f634 	.word	0x0800f634
 800d5e0:	0800f654 	.word	0x0800f654
 800d5e4:	0800f614 	.word	0x0800f614

0800d5e8 <__ascii_wctomb>:
 800d5e8:	b149      	cbz	r1, 800d5fe <__ascii_wctomb+0x16>
 800d5ea:	2aff      	cmp	r2, #255	; 0xff
 800d5ec:	bf85      	ittet	hi
 800d5ee:	238a      	movhi	r3, #138	; 0x8a
 800d5f0:	6003      	strhi	r3, [r0, #0]
 800d5f2:	700a      	strbls	r2, [r1, #0]
 800d5f4:	f04f 30ff 	movhi.w	r0, #4294967295
 800d5f8:	bf98      	it	ls
 800d5fa:	2001      	movls	r0, #1
 800d5fc:	4770      	bx	lr
 800d5fe:	4608      	mov	r0, r1
 800d600:	4770      	bx	lr
	...

0800d604 <__swsetup_r>:
 800d604:	4b32      	ldr	r3, [pc, #200]	; (800d6d0 <__swsetup_r+0xcc>)
 800d606:	b570      	push	{r4, r5, r6, lr}
 800d608:	681d      	ldr	r5, [r3, #0]
 800d60a:	4606      	mov	r6, r0
 800d60c:	460c      	mov	r4, r1
 800d60e:	b125      	cbz	r5, 800d61a <__swsetup_r+0x16>
 800d610:	69ab      	ldr	r3, [r5, #24]
 800d612:	b913      	cbnz	r3, 800d61a <__swsetup_r+0x16>
 800d614:	4628      	mov	r0, r5
 800d616:	f000 f985 	bl	800d924 <__sinit>
 800d61a:	4b2e      	ldr	r3, [pc, #184]	; (800d6d4 <__swsetup_r+0xd0>)
 800d61c:	429c      	cmp	r4, r3
 800d61e:	d10f      	bne.n	800d640 <__swsetup_r+0x3c>
 800d620:	686c      	ldr	r4, [r5, #4]
 800d622:	89a3      	ldrh	r3, [r4, #12]
 800d624:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800d628:	0719      	lsls	r1, r3, #28
 800d62a:	d42c      	bmi.n	800d686 <__swsetup_r+0x82>
 800d62c:	06dd      	lsls	r5, r3, #27
 800d62e:	d411      	bmi.n	800d654 <__swsetup_r+0x50>
 800d630:	2309      	movs	r3, #9
 800d632:	6033      	str	r3, [r6, #0]
 800d634:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800d638:	81a3      	strh	r3, [r4, #12]
 800d63a:	f04f 30ff 	mov.w	r0, #4294967295
 800d63e:	e03e      	b.n	800d6be <__swsetup_r+0xba>
 800d640:	4b25      	ldr	r3, [pc, #148]	; (800d6d8 <__swsetup_r+0xd4>)
 800d642:	429c      	cmp	r4, r3
 800d644:	d101      	bne.n	800d64a <__swsetup_r+0x46>
 800d646:	68ac      	ldr	r4, [r5, #8]
 800d648:	e7eb      	b.n	800d622 <__swsetup_r+0x1e>
 800d64a:	4b24      	ldr	r3, [pc, #144]	; (800d6dc <__swsetup_r+0xd8>)
 800d64c:	429c      	cmp	r4, r3
 800d64e:	bf08      	it	eq
 800d650:	68ec      	ldreq	r4, [r5, #12]
 800d652:	e7e6      	b.n	800d622 <__swsetup_r+0x1e>
 800d654:	0758      	lsls	r0, r3, #29
 800d656:	d512      	bpl.n	800d67e <__swsetup_r+0x7a>
 800d658:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800d65a:	b141      	cbz	r1, 800d66e <__swsetup_r+0x6a>
 800d65c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800d660:	4299      	cmp	r1, r3
 800d662:	d002      	beq.n	800d66a <__swsetup_r+0x66>
 800d664:	4630      	mov	r0, r6
 800d666:	f7ff fb31 	bl	800cccc <_free_r>
 800d66a:	2300      	movs	r3, #0
 800d66c:	6363      	str	r3, [r4, #52]	; 0x34
 800d66e:	89a3      	ldrh	r3, [r4, #12]
 800d670:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800d674:	81a3      	strh	r3, [r4, #12]
 800d676:	2300      	movs	r3, #0
 800d678:	6063      	str	r3, [r4, #4]
 800d67a:	6923      	ldr	r3, [r4, #16]
 800d67c:	6023      	str	r3, [r4, #0]
 800d67e:	89a3      	ldrh	r3, [r4, #12]
 800d680:	f043 0308 	orr.w	r3, r3, #8
 800d684:	81a3      	strh	r3, [r4, #12]
 800d686:	6923      	ldr	r3, [r4, #16]
 800d688:	b94b      	cbnz	r3, 800d69e <__swsetup_r+0x9a>
 800d68a:	89a3      	ldrh	r3, [r4, #12]
 800d68c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800d690:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800d694:	d003      	beq.n	800d69e <__swsetup_r+0x9a>
 800d696:	4621      	mov	r1, r4
 800d698:	4630      	mov	r0, r6
 800d69a:	f000 fa09 	bl	800dab0 <__smakebuf_r>
 800d69e:	89a0      	ldrh	r0, [r4, #12]
 800d6a0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800d6a4:	f010 0301 	ands.w	r3, r0, #1
 800d6a8:	d00a      	beq.n	800d6c0 <__swsetup_r+0xbc>
 800d6aa:	2300      	movs	r3, #0
 800d6ac:	60a3      	str	r3, [r4, #8]
 800d6ae:	6963      	ldr	r3, [r4, #20]
 800d6b0:	425b      	negs	r3, r3
 800d6b2:	61a3      	str	r3, [r4, #24]
 800d6b4:	6923      	ldr	r3, [r4, #16]
 800d6b6:	b943      	cbnz	r3, 800d6ca <__swsetup_r+0xc6>
 800d6b8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800d6bc:	d1ba      	bne.n	800d634 <__swsetup_r+0x30>
 800d6be:	bd70      	pop	{r4, r5, r6, pc}
 800d6c0:	0781      	lsls	r1, r0, #30
 800d6c2:	bf58      	it	pl
 800d6c4:	6963      	ldrpl	r3, [r4, #20]
 800d6c6:	60a3      	str	r3, [r4, #8]
 800d6c8:	e7f4      	b.n	800d6b4 <__swsetup_r+0xb0>
 800d6ca:	2000      	movs	r0, #0
 800d6cc:	e7f7      	b.n	800d6be <__swsetup_r+0xba>
 800d6ce:	bf00      	nop
 800d6d0:	20000078 	.word	0x20000078
 800d6d4:	0800f634 	.word	0x0800f634
 800d6d8:	0800f654 	.word	0x0800f654
 800d6dc:	0800f614 	.word	0x0800f614

0800d6e0 <abort>:
 800d6e0:	b508      	push	{r3, lr}
 800d6e2:	2006      	movs	r0, #6
 800d6e4:	f000 fa54 	bl	800db90 <raise>
 800d6e8:	2001      	movs	r0, #1
 800d6ea:	f7f7 fd7f 	bl	80051ec <_exit>
	...

0800d6f0 <__sflush_r>:
 800d6f0:	898a      	ldrh	r2, [r1, #12]
 800d6f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d6f6:	4605      	mov	r5, r0
 800d6f8:	0710      	lsls	r0, r2, #28
 800d6fa:	460c      	mov	r4, r1
 800d6fc:	d458      	bmi.n	800d7b0 <__sflush_r+0xc0>
 800d6fe:	684b      	ldr	r3, [r1, #4]
 800d700:	2b00      	cmp	r3, #0
 800d702:	dc05      	bgt.n	800d710 <__sflush_r+0x20>
 800d704:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800d706:	2b00      	cmp	r3, #0
 800d708:	dc02      	bgt.n	800d710 <__sflush_r+0x20>
 800d70a:	2000      	movs	r0, #0
 800d70c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d710:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800d712:	2e00      	cmp	r6, #0
 800d714:	d0f9      	beq.n	800d70a <__sflush_r+0x1a>
 800d716:	2300      	movs	r3, #0
 800d718:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800d71c:	682f      	ldr	r7, [r5, #0]
 800d71e:	602b      	str	r3, [r5, #0]
 800d720:	d032      	beq.n	800d788 <__sflush_r+0x98>
 800d722:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800d724:	89a3      	ldrh	r3, [r4, #12]
 800d726:	075a      	lsls	r2, r3, #29
 800d728:	d505      	bpl.n	800d736 <__sflush_r+0x46>
 800d72a:	6863      	ldr	r3, [r4, #4]
 800d72c:	1ac0      	subs	r0, r0, r3
 800d72e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800d730:	b10b      	cbz	r3, 800d736 <__sflush_r+0x46>
 800d732:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800d734:	1ac0      	subs	r0, r0, r3
 800d736:	2300      	movs	r3, #0
 800d738:	4602      	mov	r2, r0
 800d73a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800d73c:	6a21      	ldr	r1, [r4, #32]
 800d73e:	4628      	mov	r0, r5
 800d740:	47b0      	blx	r6
 800d742:	1c43      	adds	r3, r0, #1
 800d744:	89a3      	ldrh	r3, [r4, #12]
 800d746:	d106      	bne.n	800d756 <__sflush_r+0x66>
 800d748:	6829      	ldr	r1, [r5, #0]
 800d74a:	291d      	cmp	r1, #29
 800d74c:	d82c      	bhi.n	800d7a8 <__sflush_r+0xb8>
 800d74e:	4a2a      	ldr	r2, [pc, #168]	; (800d7f8 <__sflush_r+0x108>)
 800d750:	40ca      	lsrs	r2, r1
 800d752:	07d6      	lsls	r6, r2, #31
 800d754:	d528      	bpl.n	800d7a8 <__sflush_r+0xb8>
 800d756:	2200      	movs	r2, #0
 800d758:	6062      	str	r2, [r4, #4]
 800d75a:	04d9      	lsls	r1, r3, #19
 800d75c:	6922      	ldr	r2, [r4, #16]
 800d75e:	6022      	str	r2, [r4, #0]
 800d760:	d504      	bpl.n	800d76c <__sflush_r+0x7c>
 800d762:	1c42      	adds	r2, r0, #1
 800d764:	d101      	bne.n	800d76a <__sflush_r+0x7a>
 800d766:	682b      	ldr	r3, [r5, #0]
 800d768:	b903      	cbnz	r3, 800d76c <__sflush_r+0x7c>
 800d76a:	6560      	str	r0, [r4, #84]	; 0x54
 800d76c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800d76e:	602f      	str	r7, [r5, #0]
 800d770:	2900      	cmp	r1, #0
 800d772:	d0ca      	beq.n	800d70a <__sflush_r+0x1a>
 800d774:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800d778:	4299      	cmp	r1, r3
 800d77a:	d002      	beq.n	800d782 <__sflush_r+0x92>
 800d77c:	4628      	mov	r0, r5
 800d77e:	f7ff faa5 	bl	800cccc <_free_r>
 800d782:	2000      	movs	r0, #0
 800d784:	6360      	str	r0, [r4, #52]	; 0x34
 800d786:	e7c1      	b.n	800d70c <__sflush_r+0x1c>
 800d788:	6a21      	ldr	r1, [r4, #32]
 800d78a:	2301      	movs	r3, #1
 800d78c:	4628      	mov	r0, r5
 800d78e:	47b0      	blx	r6
 800d790:	1c41      	adds	r1, r0, #1
 800d792:	d1c7      	bne.n	800d724 <__sflush_r+0x34>
 800d794:	682b      	ldr	r3, [r5, #0]
 800d796:	2b00      	cmp	r3, #0
 800d798:	d0c4      	beq.n	800d724 <__sflush_r+0x34>
 800d79a:	2b1d      	cmp	r3, #29
 800d79c:	d001      	beq.n	800d7a2 <__sflush_r+0xb2>
 800d79e:	2b16      	cmp	r3, #22
 800d7a0:	d101      	bne.n	800d7a6 <__sflush_r+0xb6>
 800d7a2:	602f      	str	r7, [r5, #0]
 800d7a4:	e7b1      	b.n	800d70a <__sflush_r+0x1a>
 800d7a6:	89a3      	ldrh	r3, [r4, #12]
 800d7a8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d7ac:	81a3      	strh	r3, [r4, #12]
 800d7ae:	e7ad      	b.n	800d70c <__sflush_r+0x1c>
 800d7b0:	690f      	ldr	r7, [r1, #16]
 800d7b2:	2f00      	cmp	r7, #0
 800d7b4:	d0a9      	beq.n	800d70a <__sflush_r+0x1a>
 800d7b6:	0793      	lsls	r3, r2, #30
 800d7b8:	680e      	ldr	r6, [r1, #0]
 800d7ba:	bf08      	it	eq
 800d7bc:	694b      	ldreq	r3, [r1, #20]
 800d7be:	600f      	str	r7, [r1, #0]
 800d7c0:	bf18      	it	ne
 800d7c2:	2300      	movne	r3, #0
 800d7c4:	eba6 0807 	sub.w	r8, r6, r7
 800d7c8:	608b      	str	r3, [r1, #8]
 800d7ca:	f1b8 0f00 	cmp.w	r8, #0
 800d7ce:	dd9c      	ble.n	800d70a <__sflush_r+0x1a>
 800d7d0:	6a21      	ldr	r1, [r4, #32]
 800d7d2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800d7d4:	4643      	mov	r3, r8
 800d7d6:	463a      	mov	r2, r7
 800d7d8:	4628      	mov	r0, r5
 800d7da:	47b0      	blx	r6
 800d7dc:	2800      	cmp	r0, #0
 800d7de:	dc06      	bgt.n	800d7ee <__sflush_r+0xfe>
 800d7e0:	89a3      	ldrh	r3, [r4, #12]
 800d7e2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d7e6:	81a3      	strh	r3, [r4, #12]
 800d7e8:	f04f 30ff 	mov.w	r0, #4294967295
 800d7ec:	e78e      	b.n	800d70c <__sflush_r+0x1c>
 800d7ee:	4407      	add	r7, r0
 800d7f0:	eba8 0800 	sub.w	r8, r8, r0
 800d7f4:	e7e9      	b.n	800d7ca <__sflush_r+0xda>
 800d7f6:	bf00      	nop
 800d7f8:	20400001 	.word	0x20400001

0800d7fc <_fflush_r>:
 800d7fc:	b538      	push	{r3, r4, r5, lr}
 800d7fe:	690b      	ldr	r3, [r1, #16]
 800d800:	4605      	mov	r5, r0
 800d802:	460c      	mov	r4, r1
 800d804:	b913      	cbnz	r3, 800d80c <_fflush_r+0x10>
 800d806:	2500      	movs	r5, #0
 800d808:	4628      	mov	r0, r5
 800d80a:	bd38      	pop	{r3, r4, r5, pc}
 800d80c:	b118      	cbz	r0, 800d816 <_fflush_r+0x1a>
 800d80e:	6983      	ldr	r3, [r0, #24]
 800d810:	b90b      	cbnz	r3, 800d816 <_fflush_r+0x1a>
 800d812:	f000 f887 	bl	800d924 <__sinit>
 800d816:	4b14      	ldr	r3, [pc, #80]	; (800d868 <_fflush_r+0x6c>)
 800d818:	429c      	cmp	r4, r3
 800d81a:	d11b      	bne.n	800d854 <_fflush_r+0x58>
 800d81c:	686c      	ldr	r4, [r5, #4]
 800d81e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d822:	2b00      	cmp	r3, #0
 800d824:	d0ef      	beq.n	800d806 <_fflush_r+0xa>
 800d826:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800d828:	07d0      	lsls	r0, r2, #31
 800d82a:	d404      	bmi.n	800d836 <_fflush_r+0x3a>
 800d82c:	0599      	lsls	r1, r3, #22
 800d82e:	d402      	bmi.n	800d836 <_fflush_r+0x3a>
 800d830:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d832:	f000 f915 	bl	800da60 <__retarget_lock_acquire_recursive>
 800d836:	4628      	mov	r0, r5
 800d838:	4621      	mov	r1, r4
 800d83a:	f7ff ff59 	bl	800d6f0 <__sflush_r>
 800d83e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d840:	07da      	lsls	r2, r3, #31
 800d842:	4605      	mov	r5, r0
 800d844:	d4e0      	bmi.n	800d808 <_fflush_r+0xc>
 800d846:	89a3      	ldrh	r3, [r4, #12]
 800d848:	059b      	lsls	r3, r3, #22
 800d84a:	d4dd      	bmi.n	800d808 <_fflush_r+0xc>
 800d84c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d84e:	f000 f908 	bl	800da62 <__retarget_lock_release_recursive>
 800d852:	e7d9      	b.n	800d808 <_fflush_r+0xc>
 800d854:	4b05      	ldr	r3, [pc, #20]	; (800d86c <_fflush_r+0x70>)
 800d856:	429c      	cmp	r4, r3
 800d858:	d101      	bne.n	800d85e <_fflush_r+0x62>
 800d85a:	68ac      	ldr	r4, [r5, #8]
 800d85c:	e7df      	b.n	800d81e <_fflush_r+0x22>
 800d85e:	4b04      	ldr	r3, [pc, #16]	; (800d870 <_fflush_r+0x74>)
 800d860:	429c      	cmp	r4, r3
 800d862:	bf08      	it	eq
 800d864:	68ec      	ldreq	r4, [r5, #12]
 800d866:	e7da      	b.n	800d81e <_fflush_r+0x22>
 800d868:	0800f634 	.word	0x0800f634
 800d86c:	0800f654 	.word	0x0800f654
 800d870:	0800f614 	.word	0x0800f614

0800d874 <std>:
 800d874:	2300      	movs	r3, #0
 800d876:	b510      	push	{r4, lr}
 800d878:	4604      	mov	r4, r0
 800d87a:	e9c0 3300 	strd	r3, r3, [r0]
 800d87e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800d882:	6083      	str	r3, [r0, #8]
 800d884:	8181      	strh	r1, [r0, #12]
 800d886:	6643      	str	r3, [r0, #100]	; 0x64
 800d888:	81c2      	strh	r2, [r0, #14]
 800d88a:	6183      	str	r3, [r0, #24]
 800d88c:	4619      	mov	r1, r3
 800d88e:	2208      	movs	r2, #8
 800d890:	305c      	adds	r0, #92	; 0x5c
 800d892:	f7fd fb5b 	bl	800af4c <memset>
 800d896:	4b05      	ldr	r3, [pc, #20]	; (800d8ac <std+0x38>)
 800d898:	6263      	str	r3, [r4, #36]	; 0x24
 800d89a:	4b05      	ldr	r3, [pc, #20]	; (800d8b0 <std+0x3c>)
 800d89c:	62a3      	str	r3, [r4, #40]	; 0x28
 800d89e:	4b05      	ldr	r3, [pc, #20]	; (800d8b4 <std+0x40>)
 800d8a0:	62e3      	str	r3, [r4, #44]	; 0x2c
 800d8a2:	4b05      	ldr	r3, [pc, #20]	; (800d8b8 <std+0x44>)
 800d8a4:	6224      	str	r4, [r4, #32]
 800d8a6:	6323      	str	r3, [r4, #48]	; 0x30
 800d8a8:	bd10      	pop	{r4, pc}
 800d8aa:	bf00      	nop
 800d8ac:	0800dbc9 	.word	0x0800dbc9
 800d8b0:	0800dbeb 	.word	0x0800dbeb
 800d8b4:	0800dc23 	.word	0x0800dc23
 800d8b8:	0800dc47 	.word	0x0800dc47

0800d8bc <_cleanup_r>:
 800d8bc:	4901      	ldr	r1, [pc, #4]	; (800d8c4 <_cleanup_r+0x8>)
 800d8be:	f000 b8af 	b.w	800da20 <_fwalk_reent>
 800d8c2:	bf00      	nop
 800d8c4:	0800d7fd 	.word	0x0800d7fd

0800d8c8 <__sfmoreglue>:
 800d8c8:	b570      	push	{r4, r5, r6, lr}
 800d8ca:	2268      	movs	r2, #104	; 0x68
 800d8cc:	1e4d      	subs	r5, r1, #1
 800d8ce:	4355      	muls	r5, r2
 800d8d0:	460e      	mov	r6, r1
 800d8d2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800d8d6:	f7ff fa65 	bl	800cda4 <_malloc_r>
 800d8da:	4604      	mov	r4, r0
 800d8dc:	b140      	cbz	r0, 800d8f0 <__sfmoreglue+0x28>
 800d8de:	2100      	movs	r1, #0
 800d8e0:	e9c0 1600 	strd	r1, r6, [r0]
 800d8e4:	300c      	adds	r0, #12
 800d8e6:	60a0      	str	r0, [r4, #8]
 800d8e8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800d8ec:	f7fd fb2e 	bl	800af4c <memset>
 800d8f0:	4620      	mov	r0, r4
 800d8f2:	bd70      	pop	{r4, r5, r6, pc}

0800d8f4 <__sfp_lock_acquire>:
 800d8f4:	4801      	ldr	r0, [pc, #4]	; (800d8fc <__sfp_lock_acquire+0x8>)
 800d8f6:	f000 b8b3 	b.w	800da60 <__retarget_lock_acquire_recursive>
 800d8fa:	bf00      	nop
 800d8fc:	200009dd 	.word	0x200009dd

0800d900 <__sfp_lock_release>:
 800d900:	4801      	ldr	r0, [pc, #4]	; (800d908 <__sfp_lock_release+0x8>)
 800d902:	f000 b8ae 	b.w	800da62 <__retarget_lock_release_recursive>
 800d906:	bf00      	nop
 800d908:	200009dd 	.word	0x200009dd

0800d90c <__sinit_lock_acquire>:
 800d90c:	4801      	ldr	r0, [pc, #4]	; (800d914 <__sinit_lock_acquire+0x8>)
 800d90e:	f000 b8a7 	b.w	800da60 <__retarget_lock_acquire_recursive>
 800d912:	bf00      	nop
 800d914:	200009de 	.word	0x200009de

0800d918 <__sinit_lock_release>:
 800d918:	4801      	ldr	r0, [pc, #4]	; (800d920 <__sinit_lock_release+0x8>)
 800d91a:	f000 b8a2 	b.w	800da62 <__retarget_lock_release_recursive>
 800d91e:	bf00      	nop
 800d920:	200009de 	.word	0x200009de

0800d924 <__sinit>:
 800d924:	b510      	push	{r4, lr}
 800d926:	4604      	mov	r4, r0
 800d928:	f7ff fff0 	bl	800d90c <__sinit_lock_acquire>
 800d92c:	69a3      	ldr	r3, [r4, #24]
 800d92e:	b11b      	cbz	r3, 800d938 <__sinit+0x14>
 800d930:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d934:	f7ff bff0 	b.w	800d918 <__sinit_lock_release>
 800d938:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800d93c:	6523      	str	r3, [r4, #80]	; 0x50
 800d93e:	4b13      	ldr	r3, [pc, #76]	; (800d98c <__sinit+0x68>)
 800d940:	4a13      	ldr	r2, [pc, #76]	; (800d990 <__sinit+0x6c>)
 800d942:	681b      	ldr	r3, [r3, #0]
 800d944:	62a2      	str	r2, [r4, #40]	; 0x28
 800d946:	42a3      	cmp	r3, r4
 800d948:	bf04      	itt	eq
 800d94a:	2301      	moveq	r3, #1
 800d94c:	61a3      	streq	r3, [r4, #24]
 800d94e:	4620      	mov	r0, r4
 800d950:	f000 f820 	bl	800d994 <__sfp>
 800d954:	6060      	str	r0, [r4, #4]
 800d956:	4620      	mov	r0, r4
 800d958:	f000 f81c 	bl	800d994 <__sfp>
 800d95c:	60a0      	str	r0, [r4, #8]
 800d95e:	4620      	mov	r0, r4
 800d960:	f000 f818 	bl	800d994 <__sfp>
 800d964:	2200      	movs	r2, #0
 800d966:	60e0      	str	r0, [r4, #12]
 800d968:	2104      	movs	r1, #4
 800d96a:	6860      	ldr	r0, [r4, #4]
 800d96c:	f7ff ff82 	bl	800d874 <std>
 800d970:	68a0      	ldr	r0, [r4, #8]
 800d972:	2201      	movs	r2, #1
 800d974:	2109      	movs	r1, #9
 800d976:	f7ff ff7d 	bl	800d874 <std>
 800d97a:	68e0      	ldr	r0, [r4, #12]
 800d97c:	2202      	movs	r2, #2
 800d97e:	2112      	movs	r1, #18
 800d980:	f7ff ff78 	bl	800d874 <std>
 800d984:	2301      	movs	r3, #1
 800d986:	61a3      	str	r3, [r4, #24]
 800d988:	e7d2      	b.n	800d930 <__sinit+0xc>
 800d98a:	bf00      	nop
 800d98c:	0800f29c 	.word	0x0800f29c
 800d990:	0800d8bd 	.word	0x0800d8bd

0800d994 <__sfp>:
 800d994:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d996:	4607      	mov	r7, r0
 800d998:	f7ff ffac 	bl	800d8f4 <__sfp_lock_acquire>
 800d99c:	4b1e      	ldr	r3, [pc, #120]	; (800da18 <__sfp+0x84>)
 800d99e:	681e      	ldr	r6, [r3, #0]
 800d9a0:	69b3      	ldr	r3, [r6, #24]
 800d9a2:	b913      	cbnz	r3, 800d9aa <__sfp+0x16>
 800d9a4:	4630      	mov	r0, r6
 800d9a6:	f7ff ffbd 	bl	800d924 <__sinit>
 800d9aa:	3648      	adds	r6, #72	; 0x48
 800d9ac:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800d9b0:	3b01      	subs	r3, #1
 800d9b2:	d503      	bpl.n	800d9bc <__sfp+0x28>
 800d9b4:	6833      	ldr	r3, [r6, #0]
 800d9b6:	b30b      	cbz	r3, 800d9fc <__sfp+0x68>
 800d9b8:	6836      	ldr	r6, [r6, #0]
 800d9ba:	e7f7      	b.n	800d9ac <__sfp+0x18>
 800d9bc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800d9c0:	b9d5      	cbnz	r5, 800d9f8 <__sfp+0x64>
 800d9c2:	4b16      	ldr	r3, [pc, #88]	; (800da1c <__sfp+0x88>)
 800d9c4:	60e3      	str	r3, [r4, #12]
 800d9c6:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800d9ca:	6665      	str	r5, [r4, #100]	; 0x64
 800d9cc:	f000 f847 	bl	800da5e <__retarget_lock_init_recursive>
 800d9d0:	f7ff ff96 	bl	800d900 <__sfp_lock_release>
 800d9d4:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800d9d8:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800d9dc:	6025      	str	r5, [r4, #0]
 800d9de:	61a5      	str	r5, [r4, #24]
 800d9e0:	2208      	movs	r2, #8
 800d9e2:	4629      	mov	r1, r5
 800d9e4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800d9e8:	f7fd fab0 	bl	800af4c <memset>
 800d9ec:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800d9f0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800d9f4:	4620      	mov	r0, r4
 800d9f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d9f8:	3468      	adds	r4, #104	; 0x68
 800d9fa:	e7d9      	b.n	800d9b0 <__sfp+0x1c>
 800d9fc:	2104      	movs	r1, #4
 800d9fe:	4638      	mov	r0, r7
 800da00:	f7ff ff62 	bl	800d8c8 <__sfmoreglue>
 800da04:	4604      	mov	r4, r0
 800da06:	6030      	str	r0, [r6, #0]
 800da08:	2800      	cmp	r0, #0
 800da0a:	d1d5      	bne.n	800d9b8 <__sfp+0x24>
 800da0c:	f7ff ff78 	bl	800d900 <__sfp_lock_release>
 800da10:	230c      	movs	r3, #12
 800da12:	603b      	str	r3, [r7, #0]
 800da14:	e7ee      	b.n	800d9f4 <__sfp+0x60>
 800da16:	bf00      	nop
 800da18:	0800f29c 	.word	0x0800f29c
 800da1c:	ffff0001 	.word	0xffff0001

0800da20 <_fwalk_reent>:
 800da20:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800da24:	4606      	mov	r6, r0
 800da26:	4688      	mov	r8, r1
 800da28:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800da2c:	2700      	movs	r7, #0
 800da2e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800da32:	f1b9 0901 	subs.w	r9, r9, #1
 800da36:	d505      	bpl.n	800da44 <_fwalk_reent+0x24>
 800da38:	6824      	ldr	r4, [r4, #0]
 800da3a:	2c00      	cmp	r4, #0
 800da3c:	d1f7      	bne.n	800da2e <_fwalk_reent+0xe>
 800da3e:	4638      	mov	r0, r7
 800da40:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800da44:	89ab      	ldrh	r3, [r5, #12]
 800da46:	2b01      	cmp	r3, #1
 800da48:	d907      	bls.n	800da5a <_fwalk_reent+0x3a>
 800da4a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800da4e:	3301      	adds	r3, #1
 800da50:	d003      	beq.n	800da5a <_fwalk_reent+0x3a>
 800da52:	4629      	mov	r1, r5
 800da54:	4630      	mov	r0, r6
 800da56:	47c0      	blx	r8
 800da58:	4307      	orrs	r7, r0
 800da5a:	3568      	adds	r5, #104	; 0x68
 800da5c:	e7e9      	b.n	800da32 <_fwalk_reent+0x12>

0800da5e <__retarget_lock_init_recursive>:
 800da5e:	4770      	bx	lr

0800da60 <__retarget_lock_acquire_recursive>:
 800da60:	4770      	bx	lr

0800da62 <__retarget_lock_release_recursive>:
 800da62:	4770      	bx	lr

0800da64 <__swhatbuf_r>:
 800da64:	b570      	push	{r4, r5, r6, lr}
 800da66:	460e      	mov	r6, r1
 800da68:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800da6c:	2900      	cmp	r1, #0
 800da6e:	b096      	sub	sp, #88	; 0x58
 800da70:	4614      	mov	r4, r2
 800da72:	461d      	mov	r5, r3
 800da74:	da08      	bge.n	800da88 <__swhatbuf_r+0x24>
 800da76:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800da7a:	2200      	movs	r2, #0
 800da7c:	602a      	str	r2, [r5, #0]
 800da7e:	061a      	lsls	r2, r3, #24
 800da80:	d410      	bmi.n	800daa4 <__swhatbuf_r+0x40>
 800da82:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800da86:	e00e      	b.n	800daa6 <__swhatbuf_r+0x42>
 800da88:	466a      	mov	r2, sp
 800da8a:	f000 f903 	bl	800dc94 <_fstat_r>
 800da8e:	2800      	cmp	r0, #0
 800da90:	dbf1      	blt.n	800da76 <__swhatbuf_r+0x12>
 800da92:	9a01      	ldr	r2, [sp, #4]
 800da94:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800da98:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800da9c:	425a      	negs	r2, r3
 800da9e:	415a      	adcs	r2, r3
 800daa0:	602a      	str	r2, [r5, #0]
 800daa2:	e7ee      	b.n	800da82 <__swhatbuf_r+0x1e>
 800daa4:	2340      	movs	r3, #64	; 0x40
 800daa6:	2000      	movs	r0, #0
 800daa8:	6023      	str	r3, [r4, #0]
 800daaa:	b016      	add	sp, #88	; 0x58
 800daac:	bd70      	pop	{r4, r5, r6, pc}
	...

0800dab0 <__smakebuf_r>:
 800dab0:	898b      	ldrh	r3, [r1, #12]
 800dab2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800dab4:	079d      	lsls	r5, r3, #30
 800dab6:	4606      	mov	r6, r0
 800dab8:	460c      	mov	r4, r1
 800daba:	d507      	bpl.n	800dacc <__smakebuf_r+0x1c>
 800dabc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800dac0:	6023      	str	r3, [r4, #0]
 800dac2:	6123      	str	r3, [r4, #16]
 800dac4:	2301      	movs	r3, #1
 800dac6:	6163      	str	r3, [r4, #20]
 800dac8:	b002      	add	sp, #8
 800daca:	bd70      	pop	{r4, r5, r6, pc}
 800dacc:	ab01      	add	r3, sp, #4
 800dace:	466a      	mov	r2, sp
 800dad0:	f7ff ffc8 	bl	800da64 <__swhatbuf_r>
 800dad4:	9900      	ldr	r1, [sp, #0]
 800dad6:	4605      	mov	r5, r0
 800dad8:	4630      	mov	r0, r6
 800dada:	f7ff f963 	bl	800cda4 <_malloc_r>
 800dade:	b948      	cbnz	r0, 800daf4 <__smakebuf_r+0x44>
 800dae0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800dae4:	059a      	lsls	r2, r3, #22
 800dae6:	d4ef      	bmi.n	800dac8 <__smakebuf_r+0x18>
 800dae8:	f023 0303 	bic.w	r3, r3, #3
 800daec:	f043 0302 	orr.w	r3, r3, #2
 800daf0:	81a3      	strh	r3, [r4, #12]
 800daf2:	e7e3      	b.n	800dabc <__smakebuf_r+0xc>
 800daf4:	4b0d      	ldr	r3, [pc, #52]	; (800db2c <__smakebuf_r+0x7c>)
 800daf6:	62b3      	str	r3, [r6, #40]	; 0x28
 800daf8:	89a3      	ldrh	r3, [r4, #12]
 800dafa:	6020      	str	r0, [r4, #0]
 800dafc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800db00:	81a3      	strh	r3, [r4, #12]
 800db02:	9b00      	ldr	r3, [sp, #0]
 800db04:	6163      	str	r3, [r4, #20]
 800db06:	9b01      	ldr	r3, [sp, #4]
 800db08:	6120      	str	r0, [r4, #16]
 800db0a:	b15b      	cbz	r3, 800db24 <__smakebuf_r+0x74>
 800db0c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800db10:	4630      	mov	r0, r6
 800db12:	f000 f8d1 	bl	800dcb8 <_isatty_r>
 800db16:	b128      	cbz	r0, 800db24 <__smakebuf_r+0x74>
 800db18:	89a3      	ldrh	r3, [r4, #12]
 800db1a:	f023 0303 	bic.w	r3, r3, #3
 800db1e:	f043 0301 	orr.w	r3, r3, #1
 800db22:	81a3      	strh	r3, [r4, #12]
 800db24:	89a0      	ldrh	r0, [r4, #12]
 800db26:	4305      	orrs	r5, r0
 800db28:	81a5      	strh	r5, [r4, #12]
 800db2a:	e7cd      	b.n	800dac8 <__smakebuf_r+0x18>
 800db2c:	0800d8bd 	.word	0x0800d8bd

0800db30 <_malloc_usable_size_r>:
 800db30:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800db34:	1f18      	subs	r0, r3, #4
 800db36:	2b00      	cmp	r3, #0
 800db38:	bfbc      	itt	lt
 800db3a:	580b      	ldrlt	r3, [r1, r0]
 800db3c:	18c0      	addlt	r0, r0, r3
 800db3e:	4770      	bx	lr

0800db40 <_raise_r>:
 800db40:	291f      	cmp	r1, #31
 800db42:	b538      	push	{r3, r4, r5, lr}
 800db44:	4604      	mov	r4, r0
 800db46:	460d      	mov	r5, r1
 800db48:	d904      	bls.n	800db54 <_raise_r+0x14>
 800db4a:	2316      	movs	r3, #22
 800db4c:	6003      	str	r3, [r0, #0]
 800db4e:	f04f 30ff 	mov.w	r0, #4294967295
 800db52:	bd38      	pop	{r3, r4, r5, pc}
 800db54:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800db56:	b112      	cbz	r2, 800db5e <_raise_r+0x1e>
 800db58:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800db5c:	b94b      	cbnz	r3, 800db72 <_raise_r+0x32>
 800db5e:	4620      	mov	r0, r4
 800db60:	f000 f830 	bl	800dbc4 <_getpid_r>
 800db64:	462a      	mov	r2, r5
 800db66:	4601      	mov	r1, r0
 800db68:	4620      	mov	r0, r4
 800db6a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800db6e:	f000 b817 	b.w	800dba0 <_kill_r>
 800db72:	2b01      	cmp	r3, #1
 800db74:	d00a      	beq.n	800db8c <_raise_r+0x4c>
 800db76:	1c59      	adds	r1, r3, #1
 800db78:	d103      	bne.n	800db82 <_raise_r+0x42>
 800db7a:	2316      	movs	r3, #22
 800db7c:	6003      	str	r3, [r0, #0]
 800db7e:	2001      	movs	r0, #1
 800db80:	e7e7      	b.n	800db52 <_raise_r+0x12>
 800db82:	2400      	movs	r4, #0
 800db84:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800db88:	4628      	mov	r0, r5
 800db8a:	4798      	blx	r3
 800db8c:	2000      	movs	r0, #0
 800db8e:	e7e0      	b.n	800db52 <_raise_r+0x12>

0800db90 <raise>:
 800db90:	4b02      	ldr	r3, [pc, #8]	; (800db9c <raise+0xc>)
 800db92:	4601      	mov	r1, r0
 800db94:	6818      	ldr	r0, [r3, #0]
 800db96:	f7ff bfd3 	b.w	800db40 <_raise_r>
 800db9a:	bf00      	nop
 800db9c:	20000078 	.word	0x20000078

0800dba0 <_kill_r>:
 800dba0:	b538      	push	{r3, r4, r5, lr}
 800dba2:	4d07      	ldr	r5, [pc, #28]	; (800dbc0 <_kill_r+0x20>)
 800dba4:	2300      	movs	r3, #0
 800dba6:	4604      	mov	r4, r0
 800dba8:	4608      	mov	r0, r1
 800dbaa:	4611      	mov	r1, r2
 800dbac:	602b      	str	r3, [r5, #0]
 800dbae:	f7f7 fb0d 	bl	80051cc <_kill>
 800dbb2:	1c43      	adds	r3, r0, #1
 800dbb4:	d102      	bne.n	800dbbc <_kill_r+0x1c>
 800dbb6:	682b      	ldr	r3, [r5, #0]
 800dbb8:	b103      	cbz	r3, 800dbbc <_kill_r+0x1c>
 800dbba:	6023      	str	r3, [r4, #0]
 800dbbc:	bd38      	pop	{r3, r4, r5, pc}
 800dbbe:	bf00      	nop
 800dbc0:	200009d8 	.word	0x200009d8

0800dbc4 <_getpid_r>:
 800dbc4:	f7f7 bafa 	b.w	80051bc <_getpid>

0800dbc8 <__sread>:
 800dbc8:	b510      	push	{r4, lr}
 800dbca:	460c      	mov	r4, r1
 800dbcc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800dbd0:	f000 f894 	bl	800dcfc <_read_r>
 800dbd4:	2800      	cmp	r0, #0
 800dbd6:	bfab      	itete	ge
 800dbd8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800dbda:	89a3      	ldrhlt	r3, [r4, #12]
 800dbdc:	181b      	addge	r3, r3, r0
 800dbde:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800dbe2:	bfac      	ite	ge
 800dbe4:	6563      	strge	r3, [r4, #84]	; 0x54
 800dbe6:	81a3      	strhlt	r3, [r4, #12]
 800dbe8:	bd10      	pop	{r4, pc}

0800dbea <__swrite>:
 800dbea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dbee:	461f      	mov	r7, r3
 800dbf0:	898b      	ldrh	r3, [r1, #12]
 800dbf2:	05db      	lsls	r3, r3, #23
 800dbf4:	4605      	mov	r5, r0
 800dbf6:	460c      	mov	r4, r1
 800dbf8:	4616      	mov	r6, r2
 800dbfa:	d505      	bpl.n	800dc08 <__swrite+0x1e>
 800dbfc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800dc00:	2302      	movs	r3, #2
 800dc02:	2200      	movs	r2, #0
 800dc04:	f000 f868 	bl	800dcd8 <_lseek_r>
 800dc08:	89a3      	ldrh	r3, [r4, #12]
 800dc0a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800dc0e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800dc12:	81a3      	strh	r3, [r4, #12]
 800dc14:	4632      	mov	r2, r6
 800dc16:	463b      	mov	r3, r7
 800dc18:	4628      	mov	r0, r5
 800dc1a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800dc1e:	f000 b817 	b.w	800dc50 <_write_r>

0800dc22 <__sseek>:
 800dc22:	b510      	push	{r4, lr}
 800dc24:	460c      	mov	r4, r1
 800dc26:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800dc2a:	f000 f855 	bl	800dcd8 <_lseek_r>
 800dc2e:	1c43      	adds	r3, r0, #1
 800dc30:	89a3      	ldrh	r3, [r4, #12]
 800dc32:	bf15      	itete	ne
 800dc34:	6560      	strne	r0, [r4, #84]	; 0x54
 800dc36:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800dc3a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800dc3e:	81a3      	strheq	r3, [r4, #12]
 800dc40:	bf18      	it	ne
 800dc42:	81a3      	strhne	r3, [r4, #12]
 800dc44:	bd10      	pop	{r4, pc}

0800dc46 <__sclose>:
 800dc46:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800dc4a:	f000 b813 	b.w	800dc74 <_close_r>
	...

0800dc50 <_write_r>:
 800dc50:	b538      	push	{r3, r4, r5, lr}
 800dc52:	4d07      	ldr	r5, [pc, #28]	; (800dc70 <_write_r+0x20>)
 800dc54:	4604      	mov	r4, r0
 800dc56:	4608      	mov	r0, r1
 800dc58:	4611      	mov	r1, r2
 800dc5a:	2200      	movs	r2, #0
 800dc5c:	602a      	str	r2, [r5, #0]
 800dc5e:	461a      	mov	r2, r3
 800dc60:	f7f7 faeb 	bl	800523a <_write>
 800dc64:	1c43      	adds	r3, r0, #1
 800dc66:	d102      	bne.n	800dc6e <_write_r+0x1e>
 800dc68:	682b      	ldr	r3, [r5, #0]
 800dc6a:	b103      	cbz	r3, 800dc6e <_write_r+0x1e>
 800dc6c:	6023      	str	r3, [r4, #0]
 800dc6e:	bd38      	pop	{r3, r4, r5, pc}
 800dc70:	200009d8 	.word	0x200009d8

0800dc74 <_close_r>:
 800dc74:	b538      	push	{r3, r4, r5, lr}
 800dc76:	4d06      	ldr	r5, [pc, #24]	; (800dc90 <_close_r+0x1c>)
 800dc78:	2300      	movs	r3, #0
 800dc7a:	4604      	mov	r4, r0
 800dc7c:	4608      	mov	r0, r1
 800dc7e:	602b      	str	r3, [r5, #0]
 800dc80:	f7f7 faf7 	bl	8005272 <_close>
 800dc84:	1c43      	adds	r3, r0, #1
 800dc86:	d102      	bne.n	800dc8e <_close_r+0x1a>
 800dc88:	682b      	ldr	r3, [r5, #0]
 800dc8a:	b103      	cbz	r3, 800dc8e <_close_r+0x1a>
 800dc8c:	6023      	str	r3, [r4, #0]
 800dc8e:	bd38      	pop	{r3, r4, r5, pc}
 800dc90:	200009d8 	.word	0x200009d8

0800dc94 <_fstat_r>:
 800dc94:	b538      	push	{r3, r4, r5, lr}
 800dc96:	4d07      	ldr	r5, [pc, #28]	; (800dcb4 <_fstat_r+0x20>)
 800dc98:	2300      	movs	r3, #0
 800dc9a:	4604      	mov	r4, r0
 800dc9c:	4608      	mov	r0, r1
 800dc9e:	4611      	mov	r1, r2
 800dca0:	602b      	str	r3, [r5, #0]
 800dca2:	f7f7 faf2 	bl	800528a <_fstat>
 800dca6:	1c43      	adds	r3, r0, #1
 800dca8:	d102      	bne.n	800dcb0 <_fstat_r+0x1c>
 800dcaa:	682b      	ldr	r3, [r5, #0]
 800dcac:	b103      	cbz	r3, 800dcb0 <_fstat_r+0x1c>
 800dcae:	6023      	str	r3, [r4, #0]
 800dcb0:	bd38      	pop	{r3, r4, r5, pc}
 800dcb2:	bf00      	nop
 800dcb4:	200009d8 	.word	0x200009d8

0800dcb8 <_isatty_r>:
 800dcb8:	b538      	push	{r3, r4, r5, lr}
 800dcba:	4d06      	ldr	r5, [pc, #24]	; (800dcd4 <_isatty_r+0x1c>)
 800dcbc:	2300      	movs	r3, #0
 800dcbe:	4604      	mov	r4, r0
 800dcc0:	4608      	mov	r0, r1
 800dcc2:	602b      	str	r3, [r5, #0]
 800dcc4:	f7f7 faf1 	bl	80052aa <_isatty>
 800dcc8:	1c43      	adds	r3, r0, #1
 800dcca:	d102      	bne.n	800dcd2 <_isatty_r+0x1a>
 800dccc:	682b      	ldr	r3, [r5, #0]
 800dcce:	b103      	cbz	r3, 800dcd2 <_isatty_r+0x1a>
 800dcd0:	6023      	str	r3, [r4, #0]
 800dcd2:	bd38      	pop	{r3, r4, r5, pc}
 800dcd4:	200009d8 	.word	0x200009d8

0800dcd8 <_lseek_r>:
 800dcd8:	b538      	push	{r3, r4, r5, lr}
 800dcda:	4d07      	ldr	r5, [pc, #28]	; (800dcf8 <_lseek_r+0x20>)
 800dcdc:	4604      	mov	r4, r0
 800dcde:	4608      	mov	r0, r1
 800dce0:	4611      	mov	r1, r2
 800dce2:	2200      	movs	r2, #0
 800dce4:	602a      	str	r2, [r5, #0]
 800dce6:	461a      	mov	r2, r3
 800dce8:	f7f7 faea 	bl	80052c0 <_lseek>
 800dcec:	1c43      	adds	r3, r0, #1
 800dcee:	d102      	bne.n	800dcf6 <_lseek_r+0x1e>
 800dcf0:	682b      	ldr	r3, [r5, #0]
 800dcf2:	b103      	cbz	r3, 800dcf6 <_lseek_r+0x1e>
 800dcf4:	6023      	str	r3, [r4, #0]
 800dcf6:	bd38      	pop	{r3, r4, r5, pc}
 800dcf8:	200009d8 	.word	0x200009d8

0800dcfc <_read_r>:
 800dcfc:	b538      	push	{r3, r4, r5, lr}
 800dcfe:	4d07      	ldr	r5, [pc, #28]	; (800dd1c <_read_r+0x20>)
 800dd00:	4604      	mov	r4, r0
 800dd02:	4608      	mov	r0, r1
 800dd04:	4611      	mov	r1, r2
 800dd06:	2200      	movs	r2, #0
 800dd08:	602a      	str	r2, [r5, #0]
 800dd0a:	461a      	mov	r2, r3
 800dd0c:	f7f7 fa78 	bl	8005200 <_read>
 800dd10:	1c43      	adds	r3, r0, #1
 800dd12:	d102      	bne.n	800dd1a <_read_r+0x1e>
 800dd14:	682b      	ldr	r3, [r5, #0]
 800dd16:	b103      	cbz	r3, 800dd1a <_read_r+0x1e>
 800dd18:	6023      	str	r3, [r4, #0]
 800dd1a:	bd38      	pop	{r3, r4, r5, pc}
 800dd1c:	200009d8 	.word	0x200009d8

0800dd20 <atan>:
 800dd20:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd24:	ec55 4b10 	vmov	r4, r5, d0
 800dd28:	4bc3      	ldr	r3, [pc, #780]	; (800e038 <atan+0x318>)
 800dd2a:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 800dd2e:	429e      	cmp	r6, r3
 800dd30:	46ab      	mov	fp, r5
 800dd32:	dd18      	ble.n	800dd66 <atan+0x46>
 800dd34:	4bc1      	ldr	r3, [pc, #772]	; (800e03c <atan+0x31c>)
 800dd36:	429e      	cmp	r6, r3
 800dd38:	dc01      	bgt.n	800dd3e <atan+0x1e>
 800dd3a:	d109      	bne.n	800dd50 <atan+0x30>
 800dd3c:	b144      	cbz	r4, 800dd50 <atan+0x30>
 800dd3e:	4622      	mov	r2, r4
 800dd40:	462b      	mov	r3, r5
 800dd42:	4620      	mov	r0, r4
 800dd44:	4629      	mov	r1, r5
 800dd46:	f7f2 fac1 	bl	80002cc <__adddf3>
 800dd4a:	4604      	mov	r4, r0
 800dd4c:	460d      	mov	r5, r1
 800dd4e:	e006      	b.n	800dd5e <atan+0x3e>
 800dd50:	f1bb 0f00 	cmp.w	fp, #0
 800dd54:	f300 8131 	bgt.w	800dfba <atan+0x29a>
 800dd58:	a59b      	add	r5, pc, #620	; (adr r5, 800dfc8 <atan+0x2a8>)
 800dd5a:	e9d5 4500 	ldrd	r4, r5, [r5]
 800dd5e:	ec45 4b10 	vmov	d0, r4, r5
 800dd62:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd66:	4bb6      	ldr	r3, [pc, #728]	; (800e040 <atan+0x320>)
 800dd68:	429e      	cmp	r6, r3
 800dd6a:	dc14      	bgt.n	800dd96 <atan+0x76>
 800dd6c:	f1a3 73de 	sub.w	r3, r3, #29097984	; 0x1bc0000
 800dd70:	429e      	cmp	r6, r3
 800dd72:	dc0d      	bgt.n	800dd90 <atan+0x70>
 800dd74:	a396      	add	r3, pc, #600	; (adr r3, 800dfd0 <atan+0x2b0>)
 800dd76:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dd7a:	ee10 0a10 	vmov	r0, s0
 800dd7e:	4629      	mov	r1, r5
 800dd80:	f7f2 faa4 	bl	80002cc <__adddf3>
 800dd84:	4baf      	ldr	r3, [pc, #700]	; (800e044 <atan+0x324>)
 800dd86:	2200      	movs	r2, #0
 800dd88:	f7f2 fee6 	bl	8000b58 <__aeabi_dcmpgt>
 800dd8c:	2800      	cmp	r0, #0
 800dd8e:	d1e6      	bne.n	800dd5e <atan+0x3e>
 800dd90:	f04f 3aff 	mov.w	sl, #4294967295
 800dd94:	e02b      	b.n	800ddee <atan+0xce>
 800dd96:	f000 f963 	bl	800e060 <fabs>
 800dd9a:	4bab      	ldr	r3, [pc, #684]	; (800e048 <atan+0x328>)
 800dd9c:	429e      	cmp	r6, r3
 800dd9e:	ec55 4b10 	vmov	r4, r5, d0
 800dda2:	f300 80bf 	bgt.w	800df24 <atan+0x204>
 800dda6:	f5a3 2350 	sub.w	r3, r3, #851968	; 0xd0000
 800ddaa:	429e      	cmp	r6, r3
 800ddac:	f300 80a0 	bgt.w	800def0 <atan+0x1d0>
 800ddb0:	ee10 2a10 	vmov	r2, s0
 800ddb4:	ee10 0a10 	vmov	r0, s0
 800ddb8:	462b      	mov	r3, r5
 800ddba:	4629      	mov	r1, r5
 800ddbc:	f7f2 fa86 	bl	80002cc <__adddf3>
 800ddc0:	4ba0      	ldr	r3, [pc, #640]	; (800e044 <atan+0x324>)
 800ddc2:	2200      	movs	r2, #0
 800ddc4:	f7f2 fa80 	bl	80002c8 <__aeabi_dsub>
 800ddc8:	2200      	movs	r2, #0
 800ddca:	4606      	mov	r6, r0
 800ddcc:	460f      	mov	r7, r1
 800ddce:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800ddd2:	4620      	mov	r0, r4
 800ddd4:	4629      	mov	r1, r5
 800ddd6:	f7f2 fa79 	bl	80002cc <__adddf3>
 800ddda:	4602      	mov	r2, r0
 800dddc:	460b      	mov	r3, r1
 800ddde:	4630      	mov	r0, r6
 800dde0:	4639      	mov	r1, r7
 800dde2:	f7f2 fd53 	bl	800088c <__aeabi_ddiv>
 800dde6:	f04f 0a00 	mov.w	sl, #0
 800ddea:	4604      	mov	r4, r0
 800ddec:	460d      	mov	r5, r1
 800ddee:	4622      	mov	r2, r4
 800ddf0:	462b      	mov	r3, r5
 800ddf2:	4620      	mov	r0, r4
 800ddf4:	4629      	mov	r1, r5
 800ddf6:	f7f2 fc1f 	bl	8000638 <__aeabi_dmul>
 800ddfa:	4602      	mov	r2, r0
 800ddfc:	460b      	mov	r3, r1
 800ddfe:	4680      	mov	r8, r0
 800de00:	4689      	mov	r9, r1
 800de02:	f7f2 fc19 	bl	8000638 <__aeabi_dmul>
 800de06:	a374      	add	r3, pc, #464	; (adr r3, 800dfd8 <atan+0x2b8>)
 800de08:	e9d3 2300 	ldrd	r2, r3, [r3]
 800de0c:	4606      	mov	r6, r0
 800de0e:	460f      	mov	r7, r1
 800de10:	f7f2 fc12 	bl	8000638 <__aeabi_dmul>
 800de14:	a372      	add	r3, pc, #456	; (adr r3, 800dfe0 <atan+0x2c0>)
 800de16:	e9d3 2300 	ldrd	r2, r3, [r3]
 800de1a:	f7f2 fa57 	bl	80002cc <__adddf3>
 800de1e:	4632      	mov	r2, r6
 800de20:	463b      	mov	r3, r7
 800de22:	f7f2 fc09 	bl	8000638 <__aeabi_dmul>
 800de26:	a370      	add	r3, pc, #448	; (adr r3, 800dfe8 <atan+0x2c8>)
 800de28:	e9d3 2300 	ldrd	r2, r3, [r3]
 800de2c:	f7f2 fa4e 	bl	80002cc <__adddf3>
 800de30:	4632      	mov	r2, r6
 800de32:	463b      	mov	r3, r7
 800de34:	f7f2 fc00 	bl	8000638 <__aeabi_dmul>
 800de38:	a36d      	add	r3, pc, #436	; (adr r3, 800dff0 <atan+0x2d0>)
 800de3a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800de3e:	f7f2 fa45 	bl	80002cc <__adddf3>
 800de42:	4632      	mov	r2, r6
 800de44:	463b      	mov	r3, r7
 800de46:	f7f2 fbf7 	bl	8000638 <__aeabi_dmul>
 800de4a:	a36b      	add	r3, pc, #428	; (adr r3, 800dff8 <atan+0x2d8>)
 800de4c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800de50:	f7f2 fa3c 	bl	80002cc <__adddf3>
 800de54:	4632      	mov	r2, r6
 800de56:	463b      	mov	r3, r7
 800de58:	f7f2 fbee 	bl	8000638 <__aeabi_dmul>
 800de5c:	a368      	add	r3, pc, #416	; (adr r3, 800e000 <atan+0x2e0>)
 800de5e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800de62:	f7f2 fa33 	bl	80002cc <__adddf3>
 800de66:	4642      	mov	r2, r8
 800de68:	464b      	mov	r3, r9
 800de6a:	f7f2 fbe5 	bl	8000638 <__aeabi_dmul>
 800de6e:	a366      	add	r3, pc, #408	; (adr r3, 800e008 <atan+0x2e8>)
 800de70:	e9d3 2300 	ldrd	r2, r3, [r3]
 800de74:	4680      	mov	r8, r0
 800de76:	4689      	mov	r9, r1
 800de78:	4630      	mov	r0, r6
 800de7a:	4639      	mov	r1, r7
 800de7c:	f7f2 fbdc 	bl	8000638 <__aeabi_dmul>
 800de80:	a363      	add	r3, pc, #396	; (adr r3, 800e010 <atan+0x2f0>)
 800de82:	e9d3 2300 	ldrd	r2, r3, [r3]
 800de86:	f7f2 fa1f 	bl	80002c8 <__aeabi_dsub>
 800de8a:	4632      	mov	r2, r6
 800de8c:	463b      	mov	r3, r7
 800de8e:	f7f2 fbd3 	bl	8000638 <__aeabi_dmul>
 800de92:	a361      	add	r3, pc, #388	; (adr r3, 800e018 <atan+0x2f8>)
 800de94:	e9d3 2300 	ldrd	r2, r3, [r3]
 800de98:	f7f2 fa16 	bl	80002c8 <__aeabi_dsub>
 800de9c:	4632      	mov	r2, r6
 800de9e:	463b      	mov	r3, r7
 800dea0:	f7f2 fbca 	bl	8000638 <__aeabi_dmul>
 800dea4:	a35e      	add	r3, pc, #376	; (adr r3, 800e020 <atan+0x300>)
 800dea6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800deaa:	f7f2 fa0d 	bl	80002c8 <__aeabi_dsub>
 800deae:	4632      	mov	r2, r6
 800deb0:	463b      	mov	r3, r7
 800deb2:	f7f2 fbc1 	bl	8000638 <__aeabi_dmul>
 800deb6:	a35c      	add	r3, pc, #368	; (adr r3, 800e028 <atan+0x308>)
 800deb8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800debc:	f7f2 fa04 	bl	80002c8 <__aeabi_dsub>
 800dec0:	4632      	mov	r2, r6
 800dec2:	463b      	mov	r3, r7
 800dec4:	f7f2 fbb8 	bl	8000638 <__aeabi_dmul>
 800dec8:	4602      	mov	r2, r0
 800deca:	460b      	mov	r3, r1
 800decc:	4640      	mov	r0, r8
 800dece:	4649      	mov	r1, r9
 800ded0:	f7f2 f9fc 	bl	80002cc <__adddf3>
 800ded4:	4622      	mov	r2, r4
 800ded6:	462b      	mov	r3, r5
 800ded8:	f7f2 fbae 	bl	8000638 <__aeabi_dmul>
 800dedc:	f1ba 3fff 	cmp.w	sl, #4294967295
 800dee0:	4602      	mov	r2, r0
 800dee2:	460b      	mov	r3, r1
 800dee4:	d14b      	bne.n	800df7e <atan+0x25e>
 800dee6:	4620      	mov	r0, r4
 800dee8:	4629      	mov	r1, r5
 800deea:	f7f2 f9ed 	bl	80002c8 <__aeabi_dsub>
 800deee:	e72c      	b.n	800dd4a <atan+0x2a>
 800def0:	ee10 0a10 	vmov	r0, s0
 800def4:	4b53      	ldr	r3, [pc, #332]	; (800e044 <atan+0x324>)
 800def6:	2200      	movs	r2, #0
 800def8:	4629      	mov	r1, r5
 800defa:	f7f2 f9e5 	bl	80002c8 <__aeabi_dsub>
 800defe:	4b51      	ldr	r3, [pc, #324]	; (800e044 <atan+0x324>)
 800df00:	4606      	mov	r6, r0
 800df02:	460f      	mov	r7, r1
 800df04:	2200      	movs	r2, #0
 800df06:	4620      	mov	r0, r4
 800df08:	4629      	mov	r1, r5
 800df0a:	f7f2 f9df 	bl	80002cc <__adddf3>
 800df0e:	4602      	mov	r2, r0
 800df10:	460b      	mov	r3, r1
 800df12:	4630      	mov	r0, r6
 800df14:	4639      	mov	r1, r7
 800df16:	f7f2 fcb9 	bl	800088c <__aeabi_ddiv>
 800df1a:	f04f 0a01 	mov.w	sl, #1
 800df1e:	4604      	mov	r4, r0
 800df20:	460d      	mov	r5, r1
 800df22:	e764      	b.n	800ddee <atan+0xce>
 800df24:	4b49      	ldr	r3, [pc, #292]	; (800e04c <atan+0x32c>)
 800df26:	429e      	cmp	r6, r3
 800df28:	da1d      	bge.n	800df66 <atan+0x246>
 800df2a:	ee10 0a10 	vmov	r0, s0
 800df2e:	4b48      	ldr	r3, [pc, #288]	; (800e050 <atan+0x330>)
 800df30:	2200      	movs	r2, #0
 800df32:	4629      	mov	r1, r5
 800df34:	f7f2 f9c8 	bl	80002c8 <__aeabi_dsub>
 800df38:	4b45      	ldr	r3, [pc, #276]	; (800e050 <atan+0x330>)
 800df3a:	4606      	mov	r6, r0
 800df3c:	460f      	mov	r7, r1
 800df3e:	2200      	movs	r2, #0
 800df40:	4620      	mov	r0, r4
 800df42:	4629      	mov	r1, r5
 800df44:	f7f2 fb78 	bl	8000638 <__aeabi_dmul>
 800df48:	4b3e      	ldr	r3, [pc, #248]	; (800e044 <atan+0x324>)
 800df4a:	2200      	movs	r2, #0
 800df4c:	f7f2 f9be 	bl	80002cc <__adddf3>
 800df50:	4602      	mov	r2, r0
 800df52:	460b      	mov	r3, r1
 800df54:	4630      	mov	r0, r6
 800df56:	4639      	mov	r1, r7
 800df58:	f7f2 fc98 	bl	800088c <__aeabi_ddiv>
 800df5c:	f04f 0a02 	mov.w	sl, #2
 800df60:	4604      	mov	r4, r0
 800df62:	460d      	mov	r5, r1
 800df64:	e743      	b.n	800ddee <atan+0xce>
 800df66:	462b      	mov	r3, r5
 800df68:	ee10 2a10 	vmov	r2, s0
 800df6c:	4939      	ldr	r1, [pc, #228]	; (800e054 <atan+0x334>)
 800df6e:	2000      	movs	r0, #0
 800df70:	f7f2 fc8c 	bl	800088c <__aeabi_ddiv>
 800df74:	f04f 0a03 	mov.w	sl, #3
 800df78:	4604      	mov	r4, r0
 800df7a:	460d      	mov	r5, r1
 800df7c:	e737      	b.n	800ddee <atan+0xce>
 800df7e:	4b36      	ldr	r3, [pc, #216]	; (800e058 <atan+0x338>)
 800df80:	4e36      	ldr	r6, [pc, #216]	; (800e05c <atan+0x33c>)
 800df82:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 800df86:	eb03 0aca 	add.w	sl, r3, sl, lsl #3
 800df8a:	e9da 2300 	ldrd	r2, r3, [sl]
 800df8e:	f7f2 f99b 	bl	80002c8 <__aeabi_dsub>
 800df92:	4622      	mov	r2, r4
 800df94:	462b      	mov	r3, r5
 800df96:	f7f2 f997 	bl	80002c8 <__aeabi_dsub>
 800df9a:	4602      	mov	r2, r0
 800df9c:	460b      	mov	r3, r1
 800df9e:	e9d6 0100 	ldrd	r0, r1, [r6]
 800dfa2:	f7f2 f991 	bl	80002c8 <__aeabi_dsub>
 800dfa6:	f1bb 0f00 	cmp.w	fp, #0
 800dfaa:	4604      	mov	r4, r0
 800dfac:	460d      	mov	r5, r1
 800dfae:	f6bf aed6 	bge.w	800dd5e <atan+0x3e>
 800dfb2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800dfb6:	461d      	mov	r5, r3
 800dfb8:	e6d1      	b.n	800dd5e <atan+0x3e>
 800dfba:	a51d      	add	r5, pc, #116	; (adr r5, 800e030 <atan+0x310>)
 800dfbc:	e9d5 4500 	ldrd	r4, r5, [r5]
 800dfc0:	e6cd      	b.n	800dd5e <atan+0x3e>
 800dfc2:	bf00      	nop
 800dfc4:	f3af 8000 	nop.w
 800dfc8:	54442d18 	.word	0x54442d18
 800dfcc:	bff921fb 	.word	0xbff921fb
 800dfd0:	8800759c 	.word	0x8800759c
 800dfd4:	7e37e43c 	.word	0x7e37e43c
 800dfd8:	e322da11 	.word	0xe322da11
 800dfdc:	3f90ad3a 	.word	0x3f90ad3a
 800dfe0:	24760deb 	.word	0x24760deb
 800dfe4:	3fa97b4b 	.word	0x3fa97b4b
 800dfe8:	a0d03d51 	.word	0xa0d03d51
 800dfec:	3fb10d66 	.word	0x3fb10d66
 800dff0:	c54c206e 	.word	0xc54c206e
 800dff4:	3fb745cd 	.word	0x3fb745cd
 800dff8:	920083ff 	.word	0x920083ff
 800dffc:	3fc24924 	.word	0x3fc24924
 800e000:	5555550d 	.word	0x5555550d
 800e004:	3fd55555 	.word	0x3fd55555
 800e008:	2c6a6c2f 	.word	0x2c6a6c2f
 800e00c:	bfa2b444 	.word	0xbfa2b444
 800e010:	52defd9a 	.word	0x52defd9a
 800e014:	3fadde2d 	.word	0x3fadde2d
 800e018:	af749a6d 	.word	0xaf749a6d
 800e01c:	3fb3b0f2 	.word	0x3fb3b0f2
 800e020:	fe231671 	.word	0xfe231671
 800e024:	3fbc71c6 	.word	0x3fbc71c6
 800e028:	9998ebc4 	.word	0x9998ebc4
 800e02c:	3fc99999 	.word	0x3fc99999
 800e030:	54442d18 	.word	0x54442d18
 800e034:	3ff921fb 	.word	0x3ff921fb
 800e038:	440fffff 	.word	0x440fffff
 800e03c:	7ff00000 	.word	0x7ff00000
 800e040:	3fdbffff 	.word	0x3fdbffff
 800e044:	3ff00000 	.word	0x3ff00000
 800e048:	3ff2ffff 	.word	0x3ff2ffff
 800e04c:	40038000 	.word	0x40038000
 800e050:	3ff80000 	.word	0x3ff80000
 800e054:	bff00000 	.word	0xbff00000
 800e058:	0800f698 	.word	0x0800f698
 800e05c:	0800f678 	.word	0x0800f678

0800e060 <fabs>:
 800e060:	ec51 0b10 	vmov	r0, r1, d0
 800e064:	ee10 2a10 	vmov	r2, s0
 800e068:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 800e06c:	ec43 2b10 	vmov	d0, r2, r3
 800e070:	4770      	bx	lr
 800e072:	0000      	movs	r0, r0
 800e074:	0000      	movs	r0, r0
	...

0800e078 <tan>:
 800e078:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e07a:	ec53 2b10 	vmov	r2, r3, d0
 800e07e:	4816      	ldr	r0, [pc, #88]	; (800e0d8 <tan+0x60>)
 800e080:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 800e084:	4281      	cmp	r1, r0
 800e086:	dc07      	bgt.n	800e098 <tan+0x20>
 800e088:	ed9f 1b11 	vldr	d1, [pc, #68]	; 800e0d0 <tan+0x58>
 800e08c:	2001      	movs	r0, #1
 800e08e:	b005      	add	sp, #20
 800e090:	f85d eb04 	ldr.w	lr, [sp], #4
 800e094:	f000 bd80 	b.w	800eb98 <__kernel_tan>
 800e098:	4810      	ldr	r0, [pc, #64]	; (800e0dc <tan+0x64>)
 800e09a:	4281      	cmp	r1, r0
 800e09c:	dd09      	ble.n	800e0b2 <tan+0x3a>
 800e09e:	ee10 0a10 	vmov	r0, s0
 800e0a2:	4619      	mov	r1, r3
 800e0a4:	f7f2 f910 	bl	80002c8 <__aeabi_dsub>
 800e0a8:	ec41 0b10 	vmov	d0, r0, r1
 800e0ac:	b005      	add	sp, #20
 800e0ae:	f85d fb04 	ldr.w	pc, [sp], #4
 800e0b2:	4668      	mov	r0, sp
 800e0b4:	f000 f814 	bl	800e0e0 <__ieee754_rem_pio2>
 800e0b8:	0040      	lsls	r0, r0, #1
 800e0ba:	f000 0002 	and.w	r0, r0, #2
 800e0be:	ed9d 1b02 	vldr	d1, [sp, #8]
 800e0c2:	ed9d 0b00 	vldr	d0, [sp]
 800e0c6:	f1c0 0001 	rsb	r0, r0, #1
 800e0ca:	f000 fd65 	bl	800eb98 <__kernel_tan>
 800e0ce:	e7ed      	b.n	800e0ac <tan+0x34>
	...
 800e0d8:	3fe921fb 	.word	0x3fe921fb
 800e0dc:	7fefffff 	.word	0x7fefffff

0800e0e0 <__ieee754_rem_pio2>:
 800e0e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e0e4:	ed2d 8b02 	vpush	{d8}
 800e0e8:	ec55 4b10 	vmov	r4, r5, d0
 800e0ec:	4bca      	ldr	r3, [pc, #808]	; (800e418 <__ieee754_rem_pio2+0x338>)
 800e0ee:	b08b      	sub	sp, #44	; 0x2c
 800e0f0:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 800e0f4:	4598      	cmp	r8, r3
 800e0f6:	4682      	mov	sl, r0
 800e0f8:	9502      	str	r5, [sp, #8]
 800e0fa:	dc08      	bgt.n	800e10e <__ieee754_rem_pio2+0x2e>
 800e0fc:	2200      	movs	r2, #0
 800e0fe:	2300      	movs	r3, #0
 800e100:	ed80 0b00 	vstr	d0, [r0]
 800e104:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800e108:	f04f 0b00 	mov.w	fp, #0
 800e10c:	e028      	b.n	800e160 <__ieee754_rem_pio2+0x80>
 800e10e:	4bc3      	ldr	r3, [pc, #780]	; (800e41c <__ieee754_rem_pio2+0x33c>)
 800e110:	4598      	cmp	r8, r3
 800e112:	dc78      	bgt.n	800e206 <__ieee754_rem_pio2+0x126>
 800e114:	9b02      	ldr	r3, [sp, #8]
 800e116:	4ec2      	ldr	r6, [pc, #776]	; (800e420 <__ieee754_rem_pio2+0x340>)
 800e118:	2b00      	cmp	r3, #0
 800e11a:	ee10 0a10 	vmov	r0, s0
 800e11e:	a3b0      	add	r3, pc, #704	; (adr r3, 800e3e0 <__ieee754_rem_pio2+0x300>)
 800e120:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e124:	4629      	mov	r1, r5
 800e126:	dd39      	ble.n	800e19c <__ieee754_rem_pio2+0xbc>
 800e128:	f7f2 f8ce 	bl	80002c8 <__aeabi_dsub>
 800e12c:	45b0      	cmp	r8, r6
 800e12e:	4604      	mov	r4, r0
 800e130:	460d      	mov	r5, r1
 800e132:	d01b      	beq.n	800e16c <__ieee754_rem_pio2+0x8c>
 800e134:	a3ac      	add	r3, pc, #688	; (adr r3, 800e3e8 <__ieee754_rem_pio2+0x308>)
 800e136:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e13a:	f7f2 f8c5 	bl	80002c8 <__aeabi_dsub>
 800e13e:	4602      	mov	r2, r0
 800e140:	460b      	mov	r3, r1
 800e142:	e9ca 2300 	strd	r2, r3, [sl]
 800e146:	4620      	mov	r0, r4
 800e148:	4629      	mov	r1, r5
 800e14a:	f7f2 f8bd 	bl	80002c8 <__aeabi_dsub>
 800e14e:	a3a6      	add	r3, pc, #664	; (adr r3, 800e3e8 <__ieee754_rem_pio2+0x308>)
 800e150:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e154:	f7f2 f8b8 	bl	80002c8 <__aeabi_dsub>
 800e158:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800e15c:	f04f 0b01 	mov.w	fp, #1
 800e160:	4658      	mov	r0, fp
 800e162:	b00b      	add	sp, #44	; 0x2c
 800e164:	ecbd 8b02 	vpop	{d8}
 800e168:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e16c:	a3a0      	add	r3, pc, #640	; (adr r3, 800e3f0 <__ieee754_rem_pio2+0x310>)
 800e16e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e172:	f7f2 f8a9 	bl	80002c8 <__aeabi_dsub>
 800e176:	a3a0      	add	r3, pc, #640	; (adr r3, 800e3f8 <__ieee754_rem_pio2+0x318>)
 800e178:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e17c:	4604      	mov	r4, r0
 800e17e:	460d      	mov	r5, r1
 800e180:	f7f2 f8a2 	bl	80002c8 <__aeabi_dsub>
 800e184:	4602      	mov	r2, r0
 800e186:	460b      	mov	r3, r1
 800e188:	e9ca 2300 	strd	r2, r3, [sl]
 800e18c:	4620      	mov	r0, r4
 800e18e:	4629      	mov	r1, r5
 800e190:	f7f2 f89a 	bl	80002c8 <__aeabi_dsub>
 800e194:	a398      	add	r3, pc, #608	; (adr r3, 800e3f8 <__ieee754_rem_pio2+0x318>)
 800e196:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e19a:	e7db      	b.n	800e154 <__ieee754_rem_pio2+0x74>
 800e19c:	f7f2 f896 	bl	80002cc <__adddf3>
 800e1a0:	45b0      	cmp	r8, r6
 800e1a2:	4604      	mov	r4, r0
 800e1a4:	460d      	mov	r5, r1
 800e1a6:	d016      	beq.n	800e1d6 <__ieee754_rem_pio2+0xf6>
 800e1a8:	a38f      	add	r3, pc, #572	; (adr r3, 800e3e8 <__ieee754_rem_pio2+0x308>)
 800e1aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e1ae:	f7f2 f88d 	bl	80002cc <__adddf3>
 800e1b2:	4602      	mov	r2, r0
 800e1b4:	460b      	mov	r3, r1
 800e1b6:	e9ca 2300 	strd	r2, r3, [sl]
 800e1ba:	4620      	mov	r0, r4
 800e1bc:	4629      	mov	r1, r5
 800e1be:	f7f2 f883 	bl	80002c8 <__aeabi_dsub>
 800e1c2:	a389      	add	r3, pc, #548	; (adr r3, 800e3e8 <__ieee754_rem_pio2+0x308>)
 800e1c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e1c8:	f7f2 f880 	bl	80002cc <__adddf3>
 800e1cc:	f04f 3bff 	mov.w	fp, #4294967295
 800e1d0:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800e1d4:	e7c4      	b.n	800e160 <__ieee754_rem_pio2+0x80>
 800e1d6:	a386      	add	r3, pc, #536	; (adr r3, 800e3f0 <__ieee754_rem_pio2+0x310>)
 800e1d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e1dc:	f7f2 f876 	bl	80002cc <__adddf3>
 800e1e0:	a385      	add	r3, pc, #532	; (adr r3, 800e3f8 <__ieee754_rem_pio2+0x318>)
 800e1e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e1e6:	4604      	mov	r4, r0
 800e1e8:	460d      	mov	r5, r1
 800e1ea:	f7f2 f86f 	bl	80002cc <__adddf3>
 800e1ee:	4602      	mov	r2, r0
 800e1f0:	460b      	mov	r3, r1
 800e1f2:	e9ca 2300 	strd	r2, r3, [sl]
 800e1f6:	4620      	mov	r0, r4
 800e1f8:	4629      	mov	r1, r5
 800e1fa:	f7f2 f865 	bl	80002c8 <__aeabi_dsub>
 800e1fe:	a37e      	add	r3, pc, #504	; (adr r3, 800e3f8 <__ieee754_rem_pio2+0x318>)
 800e200:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e204:	e7e0      	b.n	800e1c8 <__ieee754_rem_pio2+0xe8>
 800e206:	4b87      	ldr	r3, [pc, #540]	; (800e424 <__ieee754_rem_pio2+0x344>)
 800e208:	4598      	cmp	r8, r3
 800e20a:	f300 80d9 	bgt.w	800e3c0 <__ieee754_rem_pio2+0x2e0>
 800e20e:	f7ff ff27 	bl	800e060 <fabs>
 800e212:	ec55 4b10 	vmov	r4, r5, d0
 800e216:	ee10 0a10 	vmov	r0, s0
 800e21a:	a379      	add	r3, pc, #484	; (adr r3, 800e400 <__ieee754_rem_pio2+0x320>)
 800e21c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e220:	4629      	mov	r1, r5
 800e222:	f7f2 fa09 	bl	8000638 <__aeabi_dmul>
 800e226:	4b80      	ldr	r3, [pc, #512]	; (800e428 <__ieee754_rem_pio2+0x348>)
 800e228:	2200      	movs	r2, #0
 800e22a:	f7f2 f84f 	bl	80002cc <__adddf3>
 800e22e:	f7f2 fcb3 	bl	8000b98 <__aeabi_d2iz>
 800e232:	4683      	mov	fp, r0
 800e234:	f7f2 f996 	bl	8000564 <__aeabi_i2d>
 800e238:	4602      	mov	r2, r0
 800e23a:	460b      	mov	r3, r1
 800e23c:	ec43 2b18 	vmov	d8, r2, r3
 800e240:	a367      	add	r3, pc, #412	; (adr r3, 800e3e0 <__ieee754_rem_pio2+0x300>)
 800e242:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e246:	f7f2 f9f7 	bl	8000638 <__aeabi_dmul>
 800e24a:	4602      	mov	r2, r0
 800e24c:	460b      	mov	r3, r1
 800e24e:	4620      	mov	r0, r4
 800e250:	4629      	mov	r1, r5
 800e252:	f7f2 f839 	bl	80002c8 <__aeabi_dsub>
 800e256:	a364      	add	r3, pc, #400	; (adr r3, 800e3e8 <__ieee754_rem_pio2+0x308>)
 800e258:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e25c:	4606      	mov	r6, r0
 800e25e:	460f      	mov	r7, r1
 800e260:	ec51 0b18 	vmov	r0, r1, d8
 800e264:	f7f2 f9e8 	bl	8000638 <__aeabi_dmul>
 800e268:	f1bb 0f1f 	cmp.w	fp, #31
 800e26c:	4604      	mov	r4, r0
 800e26e:	460d      	mov	r5, r1
 800e270:	dc0d      	bgt.n	800e28e <__ieee754_rem_pio2+0x1ae>
 800e272:	4b6e      	ldr	r3, [pc, #440]	; (800e42c <__ieee754_rem_pio2+0x34c>)
 800e274:	f10b 32ff 	add.w	r2, fp, #4294967295
 800e278:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e27c:	4543      	cmp	r3, r8
 800e27e:	d006      	beq.n	800e28e <__ieee754_rem_pio2+0x1ae>
 800e280:	4622      	mov	r2, r4
 800e282:	462b      	mov	r3, r5
 800e284:	4630      	mov	r0, r6
 800e286:	4639      	mov	r1, r7
 800e288:	f7f2 f81e 	bl	80002c8 <__aeabi_dsub>
 800e28c:	e00f      	b.n	800e2ae <__ieee754_rem_pio2+0x1ce>
 800e28e:	462b      	mov	r3, r5
 800e290:	4622      	mov	r2, r4
 800e292:	4630      	mov	r0, r6
 800e294:	4639      	mov	r1, r7
 800e296:	f7f2 f817 	bl	80002c8 <__aeabi_dsub>
 800e29a:	ea4f 5328 	mov.w	r3, r8, asr #20
 800e29e:	9303      	str	r3, [sp, #12]
 800e2a0:	f3c1 530a 	ubfx	r3, r1, #20, #11
 800e2a4:	ebc3 5818 	rsb	r8, r3, r8, lsr #20
 800e2a8:	f1b8 0f10 	cmp.w	r8, #16
 800e2ac:	dc02      	bgt.n	800e2b4 <__ieee754_rem_pio2+0x1d4>
 800e2ae:	e9ca 0100 	strd	r0, r1, [sl]
 800e2b2:	e039      	b.n	800e328 <__ieee754_rem_pio2+0x248>
 800e2b4:	a34e      	add	r3, pc, #312	; (adr r3, 800e3f0 <__ieee754_rem_pio2+0x310>)
 800e2b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e2ba:	ec51 0b18 	vmov	r0, r1, d8
 800e2be:	f7f2 f9bb 	bl	8000638 <__aeabi_dmul>
 800e2c2:	4604      	mov	r4, r0
 800e2c4:	460d      	mov	r5, r1
 800e2c6:	4602      	mov	r2, r0
 800e2c8:	460b      	mov	r3, r1
 800e2ca:	4630      	mov	r0, r6
 800e2cc:	4639      	mov	r1, r7
 800e2ce:	f7f1 fffb 	bl	80002c8 <__aeabi_dsub>
 800e2d2:	4602      	mov	r2, r0
 800e2d4:	460b      	mov	r3, r1
 800e2d6:	4680      	mov	r8, r0
 800e2d8:	4689      	mov	r9, r1
 800e2da:	4630      	mov	r0, r6
 800e2dc:	4639      	mov	r1, r7
 800e2de:	f7f1 fff3 	bl	80002c8 <__aeabi_dsub>
 800e2e2:	4622      	mov	r2, r4
 800e2e4:	462b      	mov	r3, r5
 800e2e6:	f7f1 ffef 	bl	80002c8 <__aeabi_dsub>
 800e2ea:	a343      	add	r3, pc, #268	; (adr r3, 800e3f8 <__ieee754_rem_pio2+0x318>)
 800e2ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e2f0:	4604      	mov	r4, r0
 800e2f2:	460d      	mov	r5, r1
 800e2f4:	ec51 0b18 	vmov	r0, r1, d8
 800e2f8:	f7f2 f99e 	bl	8000638 <__aeabi_dmul>
 800e2fc:	4622      	mov	r2, r4
 800e2fe:	462b      	mov	r3, r5
 800e300:	f7f1 ffe2 	bl	80002c8 <__aeabi_dsub>
 800e304:	4602      	mov	r2, r0
 800e306:	460b      	mov	r3, r1
 800e308:	4604      	mov	r4, r0
 800e30a:	460d      	mov	r5, r1
 800e30c:	4640      	mov	r0, r8
 800e30e:	4649      	mov	r1, r9
 800e310:	f7f1 ffda 	bl	80002c8 <__aeabi_dsub>
 800e314:	9a03      	ldr	r2, [sp, #12]
 800e316:	f3c1 530a 	ubfx	r3, r1, #20, #11
 800e31a:	1ad3      	subs	r3, r2, r3
 800e31c:	2b31      	cmp	r3, #49	; 0x31
 800e31e:	dc24      	bgt.n	800e36a <__ieee754_rem_pio2+0x28a>
 800e320:	e9ca 0100 	strd	r0, r1, [sl]
 800e324:	4646      	mov	r6, r8
 800e326:	464f      	mov	r7, r9
 800e328:	e9da 8900 	ldrd	r8, r9, [sl]
 800e32c:	4630      	mov	r0, r6
 800e32e:	4642      	mov	r2, r8
 800e330:	464b      	mov	r3, r9
 800e332:	4639      	mov	r1, r7
 800e334:	f7f1 ffc8 	bl	80002c8 <__aeabi_dsub>
 800e338:	462b      	mov	r3, r5
 800e33a:	4622      	mov	r2, r4
 800e33c:	f7f1 ffc4 	bl	80002c8 <__aeabi_dsub>
 800e340:	9b02      	ldr	r3, [sp, #8]
 800e342:	2b00      	cmp	r3, #0
 800e344:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800e348:	f6bf af0a 	bge.w	800e160 <__ieee754_rem_pio2+0x80>
 800e34c:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800e350:	f8ca 3004 	str.w	r3, [sl, #4]
 800e354:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800e358:	f8ca 8000 	str.w	r8, [sl]
 800e35c:	f8ca 0008 	str.w	r0, [sl, #8]
 800e360:	f8ca 300c 	str.w	r3, [sl, #12]
 800e364:	f1cb 0b00 	rsb	fp, fp, #0
 800e368:	e6fa      	b.n	800e160 <__ieee754_rem_pio2+0x80>
 800e36a:	a327      	add	r3, pc, #156	; (adr r3, 800e408 <__ieee754_rem_pio2+0x328>)
 800e36c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e370:	ec51 0b18 	vmov	r0, r1, d8
 800e374:	f7f2 f960 	bl	8000638 <__aeabi_dmul>
 800e378:	4604      	mov	r4, r0
 800e37a:	460d      	mov	r5, r1
 800e37c:	4602      	mov	r2, r0
 800e37e:	460b      	mov	r3, r1
 800e380:	4640      	mov	r0, r8
 800e382:	4649      	mov	r1, r9
 800e384:	f7f1 ffa0 	bl	80002c8 <__aeabi_dsub>
 800e388:	4602      	mov	r2, r0
 800e38a:	460b      	mov	r3, r1
 800e38c:	4606      	mov	r6, r0
 800e38e:	460f      	mov	r7, r1
 800e390:	4640      	mov	r0, r8
 800e392:	4649      	mov	r1, r9
 800e394:	f7f1 ff98 	bl	80002c8 <__aeabi_dsub>
 800e398:	4622      	mov	r2, r4
 800e39a:	462b      	mov	r3, r5
 800e39c:	f7f1 ff94 	bl	80002c8 <__aeabi_dsub>
 800e3a0:	a31b      	add	r3, pc, #108	; (adr r3, 800e410 <__ieee754_rem_pio2+0x330>)
 800e3a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e3a6:	4604      	mov	r4, r0
 800e3a8:	460d      	mov	r5, r1
 800e3aa:	ec51 0b18 	vmov	r0, r1, d8
 800e3ae:	f7f2 f943 	bl	8000638 <__aeabi_dmul>
 800e3b2:	4622      	mov	r2, r4
 800e3b4:	462b      	mov	r3, r5
 800e3b6:	f7f1 ff87 	bl	80002c8 <__aeabi_dsub>
 800e3ba:	4604      	mov	r4, r0
 800e3bc:	460d      	mov	r5, r1
 800e3be:	e75f      	b.n	800e280 <__ieee754_rem_pio2+0x1a0>
 800e3c0:	4b1b      	ldr	r3, [pc, #108]	; (800e430 <__ieee754_rem_pio2+0x350>)
 800e3c2:	4598      	cmp	r8, r3
 800e3c4:	dd36      	ble.n	800e434 <__ieee754_rem_pio2+0x354>
 800e3c6:	ee10 2a10 	vmov	r2, s0
 800e3ca:	462b      	mov	r3, r5
 800e3cc:	4620      	mov	r0, r4
 800e3ce:	4629      	mov	r1, r5
 800e3d0:	f7f1 ff7a 	bl	80002c8 <__aeabi_dsub>
 800e3d4:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800e3d8:	e9ca 0100 	strd	r0, r1, [sl]
 800e3dc:	e694      	b.n	800e108 <__ieee754_rem_pio2+0x28>
 800e3de:	bf00      	nop
 800e3e0:	54400000 	.word	0x54400000
 800e3e4:	3ff921fb 	.word	0x3ff921fb
 800e3e8:	1a626331 	.word	0x1a626331
 800e3ec:	3dd0b461 	.word	0x3dd0b461
 800e3f0:	1a600000 	.word	0x1a600000
 800e3f4:	3dd0b461 	.word	0x3dd0b461
 800e3f8:	2e037073 	.word	0x2e037073
 800e3fc:	3ba3198a 	.word	0x3ba3198a
 800e400:	6dc9c883 	.word	0x6dc9c883
 800e404:	3fe45f30 	.word	0x3fe45f30
 800e408:	2e000000 	.word	0x2e000000
 800e40c:	3ba3198a 	.word	0x3ba3198a
 800e410:	252049c1 	.word	0x252049c1
 800e414:	397b839a 	.word	0x397b839a
 800e418:	3fe921fb 	.word	0x3fe921fb
 800e41c:	4002d97b 	.word	0x4002d97b
 800e420:	3ff921fb 	.word	0x3ff921fb
 800e424:	413921fb 	.word	0x413921fb
 800e428:	3fe00000 	.word	0x3fe00000
 800e42c:	0800f6b8 	.word	0x0800f6b8
 800e430:	7fefffff 	.word	0x7fefffff
 800e434:	ea4f 5428 	mov.w	r4, r8, asr #20
 800e438:	f2a4 4416 	subw	r4, r4, #1046	; 0x416
 800e43c:	ee10 0a10 	vmov	r0, s0
 800e440:	eba8 5104 	sub.w	r1, r8, r4, lsl #20
 800e444:	ee10 6a10 	vmov	r6, s0
 800e448:	460f      	mov	r7, r1
 800e44a:	f7f2 fba5 	bl	8000b98 <__aeabi_d2iz>
 800e44e:	f7f2 f889 	bl	8000564 <__aeabi_i2d>
 800e452:	4602      	mov	r2, r0
 800e454:	460b      	mov	r3, r1
 800e456:	4630      	mov	r0, r6
 800e458:	4639      	mov	r1, r7
 800e45a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800e45e:	f7f1 ff33 	bl	80002c8 <__aeabi_dsub>
 800e462:	4b23      	ldr	r3, [pc, #140]	; (800e4f0 <__ieee754_rem_pio2+0x410>)
 800e464:	2200      	movs	r2, #0
 800e466:	f7f2 f8e7 	bl	8000638 <__aeabi_dmul>
 800e46a:	460f      	mov	r7, r1
 800e46c:	4606      	mov	r6, r0
 800e46e:	f7f2 fb93 	bl	8000b98 <__aeabi_d2iz>
 800e472:	f7f2 f877 	bl	8000564 <__aeabi_i2d>
 800e476:	4602      	mov	r2, r0
 800e478:	460b      	mov	r3, r1
 800e47a:	4630      	mov	r0, r6
 800e47c:	4639      	mov	r1, r7
 800e47e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800e482:	f7f1 ff21 	bl	80002c8 <__aeabi_dsub>
 800e486:	4b1a      	ldr	r3, [pc, #104]	; (800e4f0 <__ieee754_rem_pio2+0x410>)
 800e488:	2200      	movs	r2, #0
 800e48a:	f7f2 f8d5 	bl	8000638 <__aeabi_dmul>
 800e48e:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800e492:	ad04      	add	r5, sp, #16
 800e494:	f04f 0803 	mov.w	r8, #3
 800e498:	46a9      	mov	r9, r5
 800e49a:	2600      	movs	r6, #0
 800e49c:	2700      	movs	r7, #0
 800e49e:	4632      	mov	r2, r6
 800e4a0:	463b      	mov	r3, r7
 800e4a2:	e9d5 0104 	ldrd	r0, r1, [r5, #16]
 800e4a6:	46c3      	mov	fp, r8
 800e4a8:	3d08      	subs	r5, #8
 800e4aa:	f108 38ff 	add.w	r8, r8, #4294967295
 800e4ae:	f7f2 fb2b 	bl	8000b08 <__aeabi_dcmpeq>
 800e4b2:	2800      	cmp	r0, #0
 800e4b4:	d1f3      	bne.n	800e49e <__ieee754_rem_pio2+0x3be>
 800e4b6:	4b0f      	ldr	r3, [pc, #60]	; (800e4f4 <__ieee754_rem_pio2+0x414>)
 800e4b8:	9301      	str	r3, [sp, #4]
 800e4ba:	2302      	movs	r3, #2
 800e4bc:	9300      	str	r3, [sp, #0]
 800e4be:	4622      	mov	r2, r4
 800e4c0:	465b      	mov	r3, fp
 800e4c2:	4651      	mov	r1, sl
 800e4c4:	4648      	mov	r0, r9
 800e4c6:	f000 f817 	bl	800e4f8 <__kernel_rem_pio2>
 800e4ca:	9b02      	ldr	r3, [sp, #8]
 800e4cc:	2b00      	cmp	r3, #0
 800e4ce:	4683      	mov	fp, r0
 800e4d0:	f6bf ae46 	bge.w	800e160 <__ieee754_rem_pio2+0x80>
 800e4d4:	e9da 2100 	ldrd	r2, r1, [sl]
 800e4d8:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800e4dc:	e9ca 2300 	strd	r2, r3, [sl]
 800e4e0:	e9da 2102 	ldrd	r2, r1, [sl, #8]
 800e4e4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800e4e8:	e9ca 2302 	strd	r2, r3, [sl, #8]
 800e4ec:	e73a      	b.n	800e364 <__ieee754_rem_pio2+0x284>
 800e4ee:	bf00      	nop
 800e4f0:	41700000 	.word	0x41700000
 800e4f4:	0800f738 	.word	0x0800f738

0800e4f8 <__kernel_rem_pio2>:
 800e4f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e4fc:	ed2d 8b02 	vpush	{d8}
 800e500:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
 800e504:	f112 0f14 	cmn.w	r2, #20
 800e508:	9308      	str	r3, [sp, #32]
 800e50a:	9101      	str	r1, [sp, #4]
 800e50c:	4bc4      	ldr	r3, [pc, #784]	; (800e820 <__kernel_rem_pio2+0x328>)
 800e50e:	99a6      	ldr	r1, [sp, #664]	; 0x298
 800e510:	900b      	str	r0, [sp, #44]	; 0x2c
 800e512:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800e516:	9302      	str	r3, [sp, #8]
 800e518:	9b08      	ldr	r3, [sp, #32]
 800e51a:	f103 33ff 	add.w	r3, r3, #4294967295
 800e51e:	bfa8      	it	ge
 800e520:	1ed4      	subge	r4, r2, #3
 800e522:	9306      	str	r3, [sp, #24]
 800e524:	bfb2      	itee	lt
 800e526:	2400      	movlt	r4, #0
 800e528:	2318      	movge	r3, #24
 800e52a:	fb94 f4f3 	sdivge	r4, r4, r3
 800e52e:	f06f 0317 	mvn.w	r3, #23
 800e532:	fb04 3303 	mla	r3, r4, r3, r3
 800e536:	eb03 0a02 	add.w	sl, r3, r2
 800e53a:	9b02      	ldr	r3, [sp, #8]
 800e53c:	9a06      	ldr	r2, [sp, #24]
 800e53e:	ed9f 8bb4 	vldr	d8, [pc, #720]	; 800e810 <__kernel_rem_pio2+0x318>
 800e542:	eb03 0802 	add.w	r8, r3, r2
 800e546:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 800e548:	1aa7      	subs	r7, r4, r2
 800e54a:	ae22      	add	r6, sp, #136	; 0x88
 800e54c:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 800e550:	2500      	movs	r5, #0
 800e552:	4545      	cmp	r5, r8
 800e554:	dd13      	ble.n	800e57e <__kernel_rem_pio2+0x86>
 800e556:	9b08      	ldr	r3, [sp, #32]
 800e558:	ed9f 8bad 	vldr	d8, [pc, #692]	; 800e810 <__kernel_rem_pio2+0x318>
 800e55c:	aa22      	add	r2, sp, #136	; 0x88
 800e55e:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 800e562:	f50d 7be4 	add.w	fp, sp, #456	; 0x1c8
 800e566:	f04f 0800 	mov.w	r8, #0
 800e56a:	9b02      	ldr	r3, [sp, #8]
 800e56c:	4598      	cmp	r8, r3
 800e56e:	dc2f      	bgt.n	800e5d0 <__kernel_rem_pio2+0xd8>
 800e570:	ed8d 8b04 	vstr	d8, [sp, #16]
 800e574:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 800e578:	462f      	mov	r7, r5
 800e57a:	2600      	movs	r6, #0
 800e57c:	e01b      	b.n	800e5b6 <__kernel_rem_pio2+0xbe>
 800e57e:	42ef      	cmn	r7, r5
 800e580:	d407      	bmi.n	800e592 <__kernel_rem_pio2+0x9a>
 800e582:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 800e586:	f7f1 ffed 	bl	8000564 <__aeabi_i2d>
 800e58a:	e8e6 0102 	strd	r0, r1, [r6], #8
 800e58e:	3501      	adds	r5, #1
 800e590:	e7df      	b.n	800e552 <__kernel_rem_pio2+0x5a>
 800e592:	ec51 0b18 	vmov	r0, r1, d8
 800e596:	e7f8      	b.n	800e58a <__kernel_rem_pio2+0x92>
 800e598:	e9d7 2300 	ldrd	r2, r3, [r7]
 800e59c:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 800e5a0:	f7f2 f84a 	bl	8000638 <__aeabi_dmul>
 800e5a4:	4602      	mov	r2, r0
 800e5a6:	460b      	mov	r3, r1
 800e5a8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800e5ac:	f7f1 fe8e 	bl	80002cc <__adddf3>
 800e5b0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800e5b4:	3601      	adds	r6, #1
 800e5b6:	9b06      	ldr	r3, [sp, #24]
 800e5b8:	429e      	cmp	r6, r3
 800e5ba:	f1a7 0708 	sub.w	r7, r7, #8
 800e5be:	ddeb      	ble.n	800e598 <__kernel_rem_pio2+0xa0>
 800e5c0:	ed9d 7b04 	vldr	d7, [sp, #16]
 800e5c4:	f108 0801 	add.w	r8, r8, #1
 800e5c8:	ecab 7b02 	vstmia	fp!, {d7}
 800e5cc:	3508      	adds	r5, #8
 800e5ce:	e7cc      	b.n	800e56a <__kernel_rem_pio2+0x72>
 800e5d0:	9b02      	ldr	r3, [sp, #8]
 800e5d2:	aa0e      	add	r2, sp, #56	; 0x38
 800e5d4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800e5d8:	930d      	str	r3, [sp, #52]	; 0x34
 800e5da:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 800e5dc:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 800e5e0:	9c02      	ldr	r4, [sp, #8]
 800e5e2:	930c      	str	r3, [sp, #48]	; 0x30
 800e5e4:	00e3      	lsls	r3, r4, #3
 800e5e6:	930a      	str	r3, [sp, #40]	; 0x28
 800e5e8:	ab9a      	add	r3, sp, #616	; 0x268
 800e5ea:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800e5ee:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 800e5f2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800e5f6:	ab72      	add	r3, sp, #456	; 0x1c8
 800e5f8:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 800e5fc:	46c3      	mov	fp, r8
 800e5fe:	46a1      	mov	r9, r4
 800e600:	f1b9 0f00 	cmp.w	r9, #0
 800e604:	f1a5 0508 	sub.w	r5, r5, #8
 800e608:	dc77      	bgt.n	800e6fa <__kernel_rem_pio2+0x202>
 800e60a:	ec47 6b10 	vmov	d0, r6, r7
 800e60e:	4650      	mov	r0, sl
 800e610:	f000 fd4e 	bl	800f0b0 <scalbn>
 800e614:	ec57 6b10 	vmov	r6, r7, d0
 800e618:	2200      	movs	r2, #0
 800e61a:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 800e61e:	ee10 0a10 	vmov	r0, s0
 800e622:	4639      	mov	r1, r7
 800e624:	f7f2 f808 	bl	8000638 <__aeabi_dmul>
 800e628:	ec41 0b10 	vmov	d0, r0, r1
 800e62c:	f000 fcc0 	bl	800efb0 <floor>
 800e630:	4b7c      	ldr	r3, [pc, #496]	; (800e824 <__kernel_rem_pio2+0x32c>)
 800e632:	ec51 0b10 	vmov	r0, r1, d0
 800e636:	2200      	movs	r2, #0
 800e638:	f7f1 fffe 	bl	8000638 <__aeabi_dmul>
 800e63c:	4602      	mov	r2, r0
 800e63e:	460b      	mov	r3, r1
 800e640:	4630      	mov	r0, r6
 800e642:	4639      	mov	r1, r7
 800e644:	f7f1 fe40 	bl	80002c8 <__aeabi_dsub>
 800e648:	460f      	mov	r7, r1
 800e64a:	4606      	mov	r6, r0
 800e64c:	f7f2 faa4 	bl	8000b98 <__aeabi_d2iz>
 800e650:	9004      	str	r0, [sp, #16]
 800e652:	f7f1 ff87 	bl	8000564 <__aeabi_i2d>
 800e656:	4602      	mov	r2, r0
 800e658:	460b      	mov	r3, r1
 800e65a:	4630      	mov	r0, r6
 800e65c:	4639      	mov	r1, r7
 800e65e:	f7f1 fe33 	bl	80002c8 <__aeabi_dsub>
 800e662:	f1ba 0f00 	cmp.w	sl, #0
 800e666:	4606      	mov	r6, r0
 800e668:	460f      	mov	r7, r1
 800e66a:	dd6d      	ble.n	800e748 <__kernel_rem_pio2+0x250>
 800e66c:	1e62      	subs	r2, r4, #1
 800e66e:	ab0e      	add	r3, sp, #56	; 0x38
 800e670:	9d04      	ldr	r5, [sp, #16]
 800e672:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800e676:	f1ca 0118 	rsb	r1, sl, #24
 800e67a:	fa40 f301 	asr.w	r3, r0, r1
 800e67e:	441d      	add	r5, r3
 800e680:	408b      	lsls	r3, r1
 800e682:	1ac0      	subs	r0, r0, r3
 800e684:	ab0e      	add	r3, sp, #56	; 0x38
 800e686:	9504      	str	r5, [sp, #16]
 800e688:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 800e68c:	f1ca 0317 	rsb	r3, sl, #23
 800e690:	fa40 fb03 	asr.w	fp, r0, r3
 800e694:	f1bb 0f00 	cmp.w	fp, #0
 800e698:	dd65      	ble.n	800e766 <__kernel_rem_pio2+0x26e>
 800e69a:	9b04      	ldr	r3, [sp, #16]
 800e69c:	2200      	movs	r2, #0
 800e69e:	3301      	adds	r3, #1
 800e6a0:	9304      	str	r3, [sp, #16]
 800e6a2:	4615      	mov	r5, r2
 800e6a4:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 800e6a8:	4294      	cmp	r4, r2
 800e6aa:	f300 809c 	bgt.w	800e7e6 <__kernel_rem_pio2+0x2ee>
 800e6ae:	f1ba 0f00 	cmp.w	sl, #0
 800e6b2:	dd07      	ble.n	800e6c4 <__kernel_rem_pio2+0x1cc>
 800e6b4:	f1ba 0f01 	cmp.w	sl, #1
 800e6b8:	f000 80c0 	beq.w	800e83c <__kernel_rem_pio2+0x344>
 800e6bc:	f1ba 0f02 	cmp.w	sl, #2
 800e6c0:	f000 80c6 	beq.w	800e850 <__kernel_rem_pio2+0x358>
 800e6c4:	f1bb 0f02 	cmp.w	fp, #2
 800e6c8:	d14d      	bne.n	800e766 <__kernel_rem_pio2+0x26e>
 800e6ca:	4632      	mov	r2, r6
 800e6cc:	463b      	mov	r3, r7
 800e6ce:	4956      	ldr	r1, [pc, #344]	; (800e828 <__kernel_rem_pio2+0x330>)
 800e6d0:	2000      	movs	r0, #0
 800e6d2:	f7f1 fdf9 	bl	80002c8 <__aeabi_dsub>
 800e6d6:	4606      	mov	r6, r0
 800e6d8:	460f      	mov	r7, r1
 800e6da:	2d00      	cmp	r5, #0
 800e6dc:	d043      	beq.n	800e766 <__kernel_rem_pio2+0x26e>
 800e6de:	4650      	mov	r0, sl
 800e6e0:	ed9f 0b4d 	vldr	d0, [pc, #308]	; 800e818 <__kernel_rem_pio2+0x320>
 800e6e4:	f000 fce4 	bl	800f0b0 <scalbn>
 800e6e8:	4630      	mov	r0, r6
 800e6ea:	4639      	mov	r1, r7
 800e6ec:	ec53 2b10 	vmov	r2, r3, d0
 800e6f0:	f7f1 fdea 	bl	80002c8 <__aeabi_dsub>
 800e6f4:	4606      	mov	r6, r0
 800e6f6:	460f      	mov	r7, r1
 800e6f8:	e035      	b.n	800e766 <__kernel_rem_pio2+0x26e>
 800e6fa:	4b4c      	ldr	r3, [pc, #304]	; (800e82c <__kernel_rem_pio2+0x334>)
 800e6fc:	2200      	movs	r2, #0
 800e6fe:	4630      	mov	r0, r6
 800e700:	4639      	mov	r1, r7
 800e702:	f7f1 ff99 	bl	8000638 <__aeabi_dmul>
 800e706:	f7f2 fa47 	bl	8000b98 <__aeabi_d2iz>
 800e70a:	f7f1 ff2b 	bl	8000564 <__aeabi_i2d>
 800e70e:	4602      	mov	r2, r0
 800e710:	460b      	mov	r3, r1
 800e712:	ec43 2b18 	vmov	d8, r2, r3
 800e716:	4b46      	ldr	r3, [pc, #280]	; (800e830 <__kernel_rem_pio2+0x338>)
 800e718:	2200      	movs	r2, #0
 800e71a:	f7f1 ff8d 	bl	8000638 <__aeabi_dmul>
 800e71e:	4602      	mov	r2, r0
 800e720:	460b      	mov	r3, r1
 800e722:	4630      	mov	r0, r6
 800e724:	4639      	mov	r1, r7
 800e726:	f7f1 fdcf 	bl	80002c8 <__aeabi_dsub>
 800e72a:	f7f2 fa35 	bl	8000b98 <__aeabi_d2iz>
 800e72e:	e9d5 2300 	ldrd	r2, r3, [r5]
 800e732:	f84b 0b04 	str.w	r0, [fp], #4
 800e736:	ec51 0b18 	vmov	r0, r1, d8
 800e73a:	f7f1 fdc7 	bl	80002cc <__adddf3>
 800e73e:	f109 39ff 	add.w	r9, r9, #4294967295
 800e742:	4606      	mov	r6, r0
 800e744:	460f      	mov	r7, r1
 800e746:	e75b      	b.n	800e600 <__kernel_rem_pio2+0x108>
 800e748:	d106      	bne.n	800e758 <__kernel_rem_pio2+0x260>
 800e74a:	1e63      	subs	r3, r4, #1
 800e74c:	aa0e      	add	r2, sp, #56	; 0x38
 800e74e:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800e752:	ea4f 5be0 	mov.w	fp, r0, asr #23
 800e756:	e79d      	b.n	800e694 <__kernel_rem_pio2+0x19c>
 800e758:	4b36      	ldr	r3, [pc, #216]	; (800e834 <__kernel_rem_pio2+0x33c>)
 800e75a:	2200      	movs	r2, #0
 800e75c:	f7f2 f9f2 	bl	8000b44 <__aeabi_dcmpge>
 800e760:	2800      	cmp	r0, #0
 800e762:	d13d      	bne.n	800e7e0 <__kernel_rem_pio2+0x2e8>
 800e764:	4683      	mov	fp, r0
 800e766:	2200      	movs	r2, #0
 800e768:	2300      	movs	r3, #0
 800e76a:	4630      	mov	r0, r6
 800e76c:	4639      	mov	r1, r7
 800e76e:	f7f2 f9cb 	bl	8000b08 <__aeabi_dcmpeq>
 800e772:	2800      	cmp	r0, #0
 800e774:	f000 80c0 	beq.w	800e8f8 <__kernel_rem_pio2+0x400>
 800e778:	1e65      	subs	r5, r4, #1
 800e77a:	462b      	mov	r3, r5
 800e77c:	2200      	movs	r2, #0
 800e77e:	9902      	ldr	r1, [sp, #8]
 800e780:	428b      	cmp	r3, r1
 800e782:	da6c      	bge.n	800e85e <__kernel_rem_pio2+0x366>
 800e784:	2a00      	cmp	r2, #0
 800e786:	f000 8089 	beq.w	800e89c <__kernel_rem_pio2+0x3a4>
 800e78a:	ab0e      	add	r3, sp, #56	; 0x38
 800e78c:	f1aa 0a18 	sub.w	sl, sl, #24
 800e790:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800e794:	2b00      	cmp	r3, #0
 800e796:	f000 80ad 	beq.w	800e8f4 <__kernel_rem_pio2+0x3fc>
 800e79a:	4650      	mov	r0, sl
 800e79c:	ed9f 0b1e 	vldr	d0, [pc, #120]	; 800e818 <__kernel_rem_pio2+0x320>
 800e7a0:	f000 fc86 	bl	800f0b0 <scalbn>
 800e7a4:	ab9a      	add	r3, sp, #616	; 0x268
 800e7a6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e7aa:	ec57 6b10 	vmov	r6, r7, d0
 800e7ae:	00ec      	lsls	r4, r5, #3
 800e7b0:	f1a3 0898 	sub.w	r8, r3, #152	; 0x98
 800e7b4:	46aa      	mov	sl, r5
 800e7b6:	f1ba 0f00 	cmp.w	sl, #0
 800e7ba:	f280 80d6 	bge.w	800e96a <__kernel_rem_pio2+0x472>
 800e7be:	ed9f 8b14 	vldr	d8, [pc, #80]	; 800e810 <__kernel_rem_pio2+0x318>
 800e7c2:	462e      	mov	r6, r5
 800e7c4:	2e00      	cmp	r6, #0
 800e7c6:	f2c0 8104 	blt.w	800e9d2 <__kernel_rem_pio2+0x4da>
 800e7ca:	ab72      	add	r3, sp, #456	; 0x1c8
 800e7cc:	ed8d 8b06 	vstr	d8, [sp, #24]
 800e7d0:	f8df a064 	ldr.w	sl, [pc, #100]	; 800e838 <__kernel_rem_pio2+0x340>
 800e7d4:	eb03 09c6 	add.w	r9, r3, r6, lsl #3
 800e7d8:	f04f 0800 	mov.w	r8, #0
 800e7dc:	1baf      	subs	r7, r5, r6
 800e7de:	e0ea      	b.n	800e9b6 <__kernel_rem_pio2+0x4be>
 800e7e0:	f04f 0b02 	mov.w	fp, #2
 800e7e4:	e759      	b.n	800e69a <__kernel_rem_pio2+0x1a2>
 800e7e6:	f8d8 3000 	ldr.w	r3, [r8]
 800e7ea:	b955      	cbnz	r5, 800e802 <__kernel_rem_pio2+0x30a>
 800e7ec:	b123      	cbz	r3, 800e7f8 <__kernel_rem_pio2+0x300>
 800e7ee:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 800e7f2:	f8c8 3000 	str.w	r3, [r8]
 800e7f6:	2301      	movs	r3, #1
 800e7f8:	3201      	adds	r2, #1
 800e7fa:	f108 0804 	add.w	r8, r8, #4
 800e7fe:	461d      	mov	r5, r3
 800e800:	e752      	b.n	800e6a8 <__kernel_rem_pio2+0x1b0>
 800e802:	1acb      	subs	r3, r1, r3
 800e804:	f8c8 3000 	str.w	r3, [r8]
 800e808:	462b      	mov	r3, r5
 800e80a:	e7f5      	b.n	800e7f8 <__kernel_rem_pio2+0x300>
 800e80c:	f3af 8000 	nop.w
	...
 800e81c:	3ff00000 	.word	0x3ff00000
 800e820:	0800f880 	.word	0x0800f880
 800e824:	40200000 	.word	0x40200000
 800e828:	3ff00000 	.word	0x3ff00000
 800e82c:	3e700000 	.word	0x3e700000
 800e830:	41700000 	.word	0x41700000
 800e834:	3fe00000 	.word	0x3fe00000
 800e838:	0800f840 	.word	0x0800f840
 800e83c:	1e62      	subs	r2, r4, #1
 800e83e:	ab0e      	add	r3, sp, #56	; 0x38
 800e840:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e844:	f3c3 0316 	ubfx	r3, r3, #0, #23
 800e848:	a90e      	add	r1, sp, #56	; 0x38
 800e84a:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 800e84e:	e739      	b.n	800e6c4 <__kernel_rem_pio2+0x1cc>
 800e850:	1e62      	subs	r2, r4, #1
 800e852:	ab0e      	add	r3, sp, #56	; 0x38
 800e854:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e858:	f3c3 0315 	ubfx	r3, r3, #0, #22
 800e85c:	e7f4      	b.n	800e848 <__kernel_rem_pio2+0x350>
 800e85e:	a90e      	add	r1, sp, #56	; 0x38
 800e860:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 800e864:	3b01      	subs	r3, #1
 800e866:	430a      	orrs	r2, r1
 800e868:	e789      	b.n	800e77e <__kernel_rem_pio2+0x286>
 800e86a:	3301      	adds	r3, #1
 800e86c:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 800e870:	2900      	cmp	r1, #0
 800e872:	d0fa      	beq.n	800e86a <__kernel_rem_pio2+0x372>
 800e874:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800e876:	f502 721a 	add.w	r2, r2, #616	; 0x268
 800e87a:	446a      	add	r2, sp
 800e87c:	3a98      	subs	r2, #152	; 0x98
 800e87e:	920a      	str	r2, [sp, #40]	; 0x28
 800e880:	9a08      	ldr	r2, [sp, #32]
 800e882:	18e3      	adds	r3, r4, r3
 800e884:	18a5      	adds	r5, r4, r2
 800e886:	aa22      	add	r2, sp, #136	; 0x88
 800e888:	f104 0801 	add.w	r8, r4, #1
 800e88c:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 800e890:	9304      	str	r3, [sp, #16]
 800e892:	9b04      	ldr	r3, [sp, #16]
 800e894:	4543      	cmp	r3, r8
 800e896:	da04      	bge.n	800e8a2 <__kernel_rem_pio2+0x3aa>
 800e898:	461c      	mov	r4, r3
 800e89a:	e6a3      	b.n	800e5e4 <__kernel_rem_pio2+0xec>
 800e89c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800e89e:	2301      	movs	r3, #1
 800e8a0:	e7e4      	b.n	800e86c <__kernel_rem_pio2+0x374>
 800e8a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e8a4:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 800e8a8:	f7f1 fe5c 	bl	8000564 <__aeabi_i2d>
 800e8ac:	e8e5 0102 	strd	r0, r1, [r5], #8
 800e8b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e8b2:	46ab      	mov	fp, r5
 800e8b4:	461c      	mov	r4, r3
 800e8b6:	f04f 0900 	mov.w	r9, #0
 800e8ba:	2600      	movs	r6, #0
 800e8bc:	2700      	movs	r7, #0
 800e8be:	9b06      	ldr	r3, [sp, #24]
 800e8c0:	4599      	cmp	r9, r3
 800e8c2:	dd06      	ble.n	800e8d2 <__kernel_rem_pio2+0x3da>
 800e8c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e8c6:	e8e3 6702 	strd	r6, r7, [r3], #8
 800e8ca:	f108 0801 	add.w	r8, r8, #1
 800e8ce:	930a      	str	r3, [sp, #40]	; 0x28
 800e8d0:	e7df      	b.n	800e892 <__kernel_rem_pio2+0x39a>
 800e8d2:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 800e8d6:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 800e8da:	f7f1 fead 	bl	8000638 <__aeabi_dmul>
 800e8de:	4602      	mov	r2, r0
 800e8e0:	460b      	mov	r3, r1
 800e8e2:	4630      	mov	r0, r6
 800e8e4:	4639      	mov	r1, r7
 800e8e6:	f7f1 fcf1 	bl	80002cc <__adddf3>
 800e8ea:	f109 0901 	add.w	r9, r9, #1
 800e8ee:	4606      	mov	r6, r0
 800e8f0:	460f      	mov	r7, r1
 800e8f2:	e7e4      	b.n	800e8be <__kernel_rem_pio2+0x3c6>
 800e8f4:	3d01      	subs	r5, #1
 800e8f6:	e748      	b.n	800e78a <__kernel_rem_pio2+0x292>
 800e8f8:	ec47 6b10 	vmov	d0, r6, r7
 800e8fc:	f1ca 0000 	rsb	r0, sl, #0
 800e900:	f000 fbd6 	bl	800f0b0 <scalbn>
 800e904:	ec57 6b10 	vmov	r6, r7, d0
 800e908:	4ba0      	ldr	r3, [pc, #640]	; (800eb8c <__kernel_rem_pio2+0x694>)
 800e90a:	ee10 0a10 	vmov	r0, s0
 800e90e:	2200      	movs	r2, #0
 800e910:	4639      	mov	r1, r7
 800e912:	f7f2 f917 	bl	8000b44 <__aeabi_dcmpge>
 800e916:	b1f8      	cbz	r0, 800e958 <__kernel_rem_pio2+0x460>
 800e918:	4b9d      	ldr	r3, [pc, #628]	; (800eb90 <__kernel_rem_pio2+0x698>)
 800e91a:	2200      	movs	r2, #0
 800e91c:	4630      	mov	r0, r6
 800e91e:	4639      	mov	r1, r7
 800e920:	f7f1 fe8a 	bl	8000638 <__aeabi_dmul>
 800e924:	f7f2 f938 	bl	8000b98 <__aeabi_d2iz>
 800e928:	4680      	mov	r8, r0
 800e92a:	f7f1 fe1b 	bl	8000564 <__aeabi_i2d>
 800e92e:	4b97      	ldr	r3, [pc, #604]	; (800eb8c <__kernel_rem_pio2+0x694>)
 800e930:	2200      	movs	r2, #0
 800e932:	f7f1 fe81 	bl	8000638 <__aeabi_dmul>
 800e936:	460b      	mov	r3, r1
 800e938:	4602      	mov	r2, r0
 800e93a:	4639      	mov	r1, r7
 800e93c:	4630      	mov	r0, r6
 800e93e:	f7f1 fcc3 	bl	80002c8 <__aeabi_dsub>
 800e942:	f7f2 f929 	bl	8000b98 <__aeabi_d2iz>
 800e946:	1c65      	adds	r5, r4, #1
 800e948:	ab0e      	add	r3, sp, #56	; 0x38
 800e94a:	f10a 0a18 	add.w	sl, sl, #24
 800e94e:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 800e952:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 800e956:	e720      	b.n	800e79a <__kernel_rem_pio2+0x2a2>
 800e958:	4630      	mov	r0, r6
 800e95a:	4639      	mov	r1, r7
 800e95c:	f7f2 f91c 	bl	8000b98 <__aeabi_d2iz>
 800e960:	ab0e      	add	r3, sp, #56	; 0x38
 800e962:	4625      	mov	r5, r4
 800e964:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 800e968:	e717      	b.n	800e79a <__kernel_rem_pio2+0x2a2>
 800e96a:	ab0e      	add	r3, sp, #56	; 0x38
 800e96c:	f853 002a 	ldr.w	r0, [r3, sl, lsl #2]
 800e970:	f7f1 fdf8 	bl	8000564 <__aeabi_i2d>
 800e974:	4632      	mov	r2, r6
 800e976:	463b      	mov	r3, r7
 800e978:	f7f1 fe5e 	bl	8000638 <__aeabi_dmul>
 800e97c:	4b84      	ldr	r3, [pc, #528]	; (800eb90 <__kernel_rem_pio2+0x698>)
 800e97e:	e968 0102 	strd	r0, r1, [r8, #-8]!
 800e982:	2200      	movs	r2, #0
 800e984:	4630      	mov	r0, r6
 800e986:	4639      	mov	r1, r7
 800e988:	f7f1 fe56 	bl	8000638 <__aeabi_dmul>
 800e98c:	f10a 3aff 	add.w	sl, sl, #4294967295
 800e990:	4606      	mov	r6, r0
 800e992:	460f      	mov	r7, r1
 800e994:	e70f      	b.n	800e7b6 <__kernel_rem_pio2+0x2be>
 800e996:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 800e99a:	e8fa 0102 	ldrd	r0, r1, [sl], #8
 800e99e:	f7f1 fe4b 	bl	8000638 <__aeabi_dmul>
 800e9a2:	4602      	mov	r2, r0
 800e9a4:	460b      	mov	r3, r1
 800e9a6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800e9aa:	f7f1 fc8f 	bl	80002cc <__adddf3>
 800e9ae:	e9cd 0106 	strd	r0, r1, [sp, #24]
 800e9b2:	f108 0801 	add.w	r8, r8, #1
 800e9b6:	9b02      	ldr	r3, [sp, #8]
 800e9b8:	4598      	cmp	r8, r3
 800e9ba:	dc01      	bgt.n	800e9c0 <__kernel_rem_pio2+0x4c8>
 800e9bc:	45b8      	cmp	r8, r7
 800e9be:	ddea      	ble.n	800e996 <__kernel_rem_pio2+0x49e>
 800e9c0:	ed9d 7b06 	vldr	d7, [sp, #24]
 800e9c4:	ab4a      	add	r3, sp, #296	; 0x128
 800e9c6:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 800e9ca:	ed87 7b00 	vstr	d7, [r7]
 800e9ce:	3e01      	subs	r6, #1
 800e9d0:	e6f8      	b.n	800e7c4 <__kernel_rem_pio2+0x2cc>
 800e9d2:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 800e9d4:	2b02      	cmp	r3, #2
 800e9d6:	dc0b      	bgt.n	800e9f0 <__kernel_rem_pio2+0x4f8>
 800e9d8:	2b00      	cmp	r3, #0
 800e9da:	dc35      	bgt.n	800ea48 <__kernel_rem_pio2+0x550>
 800e9dc:	d059      	beq.n	800ea92 <__kernel_rem_pio2+0x59a>
 800e9de:	9b04      	ldr	r3, [sp, #16]
 800e9e0:	f003 0007 	and.w	r0, r3, #7
 800e9e4:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
 800e9e8:	ecbd 8b02 	vpop	{d8}
 800e9ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e9f0:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 800e9f2:	2b03      	cmp	r3, #3
 800e9f4:	d1f3      	bne.n	800e9de <__kernel_rem_pio2+0x4e6>
 800e9f6:	ab4a      	add	r3, sp, #296	; 0x128
 800e9f8:	4423      	add	r3, r4
 800e9fa:	9306      	str	r3, [sp, #24]
 800e9fc:	461c      	mov	r4, r3
 800e9fe:	469a      	mov	sl, r3
 800ea00:	9502      	str	r5, [sp, #8]
 800ea02:	9b02      	ldr	r3, [sp, #8]
 800ea04:	2b00      	cmp	r3, #0
 800ea06:	f1aa 0a08 	sub.w	sl, sl, #8
 800ea0a:	dc6b      	bgt.n	800eae4 <__kernel_rem_pio2+0x5ec>
 800ea0c:	46aa      	mov	sl, r5
 800ea0e:	f1ba 0f01 	cmp.w	sl, #1
 800ea12:	f1a4 0408 	sub.w	r4, r4, #8
 800ea16:	f300 8085 	bgt.w	800eb24 <__kernel_rem_pio2+0x62c>
 800ea1a:	9c06      	ldr	r4, [sp, #24]
 800ea1c:	2000      	movs	r0, #0
 800ea1e:	3408      	adds	r4, #8
 800ea20:	2100      	movs	r1, #0
 800ea22:	2d01      	cmp	r5, #1
 800ea24:	f300 809d 	bgt.w	800eb62 <__kernel_rem_pio2+0x66a>
 800ea28:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	; 0x128
 800ea2c:	e9dd 784c 	ldrd	r7, r8, [sp, #304]	; 0x130
 800ea30:	f1bb 0f00 	cmp.w	fp, #0
 800ea34:	f040 809b 	bne.w	800eb6e <__kernel_rem_pio2+0x676>
 800ea38:	9b01      	ldr	r3, [sp, #4]
 800ea3a:	e9c3 5600 	strd	r5, r6, [r3]
 800ea3e:	e9c3 7802 	strd	r7, r8, [r3, #8]
 800ea42:	e9c3 0104 	strd	r0, r1, [r3, #16]
 800ea46:	e7ca      	b.n	800e9de <__kernel_rem_pio2+0x4e6>
 800ea48:	3408      	adds	r4, #8
 800ea4a:	ab4a      	add	r3, sp, #296	; 0x128
 800ea4c:	441c      	add	r4, r3
 800ea4e:	462e      	mov	r6, r5
 800ea50:	2000      	movs	r0, #0
 800ea52:	2100      	movs	r1, #0
 800ea54:	2e00      	cmp	r6, #0
 800ea56:	da36      	bge.n	800eac6 <__kernel_rem_pio2+0x5ce>
 800ea58:	f1bb 0f00 	cmp.w	fp, #0
 800ea5c:	d039      	beq.n	800ead2 <__kernel_rem_pio2+0x5da>
 800ea5e:	4602      	mov	r2, r0
 800ea60:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800ea64:	9c01      	ldr	r4, [sp, #4]
 800ea66:	e9c4 2300 	strd	r2, r3, [r4]
 800ea6a:	4602      	mov	r2, r0
 800ea6c:	460b      	mov	r3, r1
 800ea6e:	e9dd 014a 	ldrd	r0, r1, [sp, #296]	; 0x128
 800ea72:	f7f1 fc29 	bl	80002c8 <__aeabi_dsub>
 800ea76:	ae4c      	add	r6, sp, #304	; 0x130
 800ea78:	2401      	movs	r4, #1
 800ea7a:	42a5      	cmp	r5, r4
 800ea7c:	da2c      	bge.n	800ead8 <__kernel_rem_pio2+0x5e0>
 800ea7e:	f1bb 0f00 	cmp.w	fp, #0
 800ea82:	d002      	beq.n	800ea8a <__kernel_rem_pio2+0x592>
 800ea84:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800ea88:	4619      	mov	r1, r3
 800ea8a:	9b01      	ldr	r3, [sp, #4]
 800ea8c:	e9c3 0102 	strd	r0, r1, [r3, #8]
 800ea90:	e7a5      	b.n	800e9de <__kernel_rem_pio2+0x4e6>
 800ea92:	f504 731a 	add.w	r3, r4, #616	; 0x268
 800ea96:	eb0d 0403 	add.w	r4, sp, r3
 800ea9a:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
 800ea9e:	2000      	movs	r0, #0
 800eaa0:	2100      	movs	r1, #0
 800eaa2:	2d00      	cmp	r5, #0
 800eaa4:	da09      	bge.n	800eaba <__kernel_rem_pio2+0x5c2>
 800eaa6:	f1bb 0f00 	cmp.w	fp, #0
 800eaaa:	d002      	beq.n	800eab2 <__kernel_rem_pio2+0x5ba>
 800eaac:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800eab0:	4619      	mov	r1, r3
 800eab2:	9b01      	ldr	r3, [sp, #4]
 800eab4:	e9c3 0100 	strd	r0, r1, [r3]
 800eab8:	e791      	b.n	800e9de <__kernel_rem_pio2+0x4e6>
 800eaba:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 800eabe:	f7f1 fc05 	bl	80002cc <__adddf3>
 800eac2:	3d01      	subs	r5, #1
 800eac4:	e7ed      	b.n	800eaa2 <__kernel_rem_pio2+0x5aa>
 800eac6:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 800eaca:	f7f1 fbff 	bl	80002cc <__adddf3>
 800eace:	3e01      	subs	r6, #1
 800ead0:	e7c0      	b.n	800ea54 <__kernel_rem_pio2+0x55c>
 800ead2:	4602      	mov	r2, r0
 800ead4:	460b      	mov	r3, r1
 800ead6:	e7c5      	b.n	800ea64 <__kernel_rem_pio2+0x56c>
 800ead8:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 800eadc:	f7f1 fbf6 	bl	80002cc <__adddf3>
 800eae0:	3401      	adds	r4, #1
 800eae2:	e7ca      	b.n	800ea7a <__kernel_rem_pio2+0x582>
 800eae4:	e9da 8900 	ldrd	r8, r9, [sl]
 800eae8:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 800eaec:	9b02      	ldr	r3, [sp, #8]
 800eaee:	3b01      	subs	r3, #1
 800eaf0:	9302      	str	r3, [sp, #8]
 800eaf2:	4632      	mov	r2, r6
 800eaf4:	463b      	mov	r3, r7
 800eaf6:	4640      	mov	r0, r8
 800eaf8:	4649      	mov	r1, r9
 800eafa:	f7f1 fbe7 	bl	80002cc <__adddf3>
 800eafe:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800eb02:	4602      	mov	r2, r0
 800eb04:	460b      	mov	r3, r1
 800eb06:	4640      	mov	r0, r8
 800eb08:	4649      	mov	r1, r9
 800eb0a:	f7f1 fbdd 	bl	80002c8 <__aeabi_dsub>
 800eb0e:	4632      	mov	r2, r6
 800eb10:	463b      	mov	r3, r7
 800eb12:	f7f1 fbdb 	bl	80002cc <__adddf3>
 800eb16:	ed9d 7b08 	vldr	d7, [sp, #32]
 800eb1a:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800eb1e:	ed8a 7b00 	vstr	d7, [sl]
 800eb22:	e76e      	b.n	800ea02 <__kernel_rem_pio2+0x50a>
 800eb24:	e9d4 8900 	ldrd	r8, r9, [r4]
 800eb28:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
 800eb2c:	4640      	mov	r0, r8
 800eb2e:	4632      	mov	r2, r6
 800eb30:	463b      	mov	r3, r7
 800eb32:	4649      	mov	r1, r9
 800eb34:	f7f1 fbca 	bl	80002cc <__adddf3>
 800eb38:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800eb3c:	4602      	mov	r2, r0
 800eb3e:	460b      	mov	r3, r1
 800eb40:	4640      	mov	r0, r8
 800eb42:	4649      	mov	r1, r9
 800eb44:	f7f1 fbc0 	bl	80002c8 <__aeabi_dsub>
 800eb48:	4632      	mov	r2, r6
 800eb4a:	463b      	mov	r3, r7
 800eb4c:	f7f1 fbbe 	bl	80002cc <__adddf3>
 800eb50:	ed9d 7b02 	vldr	d7, [sp, #8]
 800eb54:	e9c4 0102 	strd	r0, r1, [r4, #8]
 800eb58:	ed84 7b00 	vstr	d7, [r4]
 800eb5c:	f10a 3aff 	add.w	sl, sl, #4294967295
 800eb60:	e755      	b.n	800ea0e <__kernel_rem_pio2+0x516>
 800eb62:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 800eb66:	f7f1 fbb1 	bl	80002cc <__adddf3>
 800eb6a:	3d01      	subs	r5, #1
 800eb6c:	e759      	b.n	800ea22 <__kernel_rem_pio2+0x52a>
 800eb6e:	9b01      	ldr	r3, [sp, #4]
 800eb70:	9a01      	ldr	r2, [sp, #4]
 800eb72:	601d      	str	r5, [r3, #0]
 800eb74:	f106 4400 	add.w	r4, r6, #2147483648	; 0x80000000
 800eb78:	605c      	str	r4, [r3, #4]
 800eb7a:	609f      	str	r7, [r3, #8]
 800eb7c:	f108 4300 	add.w	r3, r8, #2147483648	; 0x80000000
 800eb80:	60d3      	str	r3, [r2, #12]
 800eb82:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800eb86:	6110      	str	r0, [r2, #16]
 800eb88:	6153      	str	r3, [r2, #20]
 800eb8a:	e728      	b.n	800e9de <__kernel_rem_pio2+0x4e6>
 800eb8c:	41700000 	.word	0x41700000
 800eb90:	3e700000 	.word	0x3e700000
 800eb94:	00000000 	.word	0x00000000

0800eb98 <__kernel_tan>:
 800eb98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eb9c:	ed2d 8b06 	vpush	{d8-d10}
 800eba0:	ec5b ab10 	vmov	sl, fp, d0
 800eba4:	4be0      	ldr	r3, [pc, #896]	; (800ef28 <__kernel_tan+0x390>)
 800eba6:	b083      	sub	sp, #12
 800eba8:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
 800ebac:	429f      	cmp	r7, r3
 800ebae:	ec59 8b11 	vmov	r8, r9, d1
 800ebb2:	4606      	mov	r6, r0
 800ebb4:	f8cd b000 	str.w	fp, [sp]
 800ebb8:	dc61      	bgt.n	800ec7e <__kernel_tan+0xe6>
 800ebba:	ee10 0a10 	vmov	r0, s0
 800ebbe:	4659      	mov	r1, fp
 800ebc0:	f7f1 ffea 	bl	8000b98 <__aeabi_d2iz>
 800ebc4:	4605      	mov	r5, r0
 800ebc6:	2800      	cmp	r0, #0
 800ebc8:	f040 8083 	bne.w	800ecd2 <__kernel_tan+0x13a>
 800ebcc:	1c73      	adds	r3, r6, #1
 800ebce:	4652      	mov	r2, sl
 800ebd0:	4313      	orrs	r3, r2
 800ebd2:	433b      	orrs	r3, r7
 800ebd4:	d112      	bne.n	800ebfc <__kernel_tan+0x64>
 800ebd6:	ec4b ab10 	vmov	d0, sl, fp
 800ebda:	f7ff fa41 	bl	800e060 <fabs>
 800ebde:	49d3      	ldr	r1, [pc, #844]	; (800ef2c <__kernel_tan+0x394>)
 800ebe0:	ec53 2b10 	vmov	r2, r3, d0
 800ebe4:	2000      	movs	r0, #0
 800ebe6:	f7f1 fe51 	bl	800088c <__aeabi_ddiv>
 800ebea:	4682      	mov	sl, r0
 800ebec:	468b      	mov	fp, r1
 800ebee:	ec4b ab10 	vmov	d0, sl, fp
 800ebf2:	b003      	add	sp, #12
 800ebf4:	ecbd 8b06 	vpop	{d8-d10}
 800ebf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ebfc:	2e01      	cmp	r6, #1
 800ebfe:	d0f6      	beq.n	800ebee <__kernel_tan+0x56>
 800ec00:	4642      	mov	r2, r8
 800ec02:	464b      	mov	r3, r9
 800ec04:	4650      	mov	r0, sl
 800ec06:	4659      	mov	r1, fp
 800ec08:	f7f1 fb60 	bl	80002cc <__adddf3>
 800ec0c:	4602      	mov	r2, r0
 800ec0e:	460b      	mov	r3, r1
 800ec10:	460f      	mov	r7, r1
 800ec12:	2000      	movs	r0, #0
 800ec14:	49c6      	ldr	r1, [pc, #792]	; (800ef30 <__kernel_tan+0x398>)
 800ec16:	f7f1 fe39 	bl	800088c <__aeabi_ddiv>
 800ec1a:	e9cd 0100 	strd	r0, r1, [sp]
 800ec1e:	e9dd 2300 	ldrd	r2, r3, [sp]
 800ec22:	462e      	mov	r6, r5
 800ec24:	4652      	mov	r2, sl
 800ec26:	462c      	mov	r4, r5
 800ec28:	4630      	mov	r0, r6
 800ec2a:	461d      	mov	r5, r3
 800ec2c:	4639      	mov	r1, r7
 800ec2e:	465b      	mov	r3, fp
 800ec30:	f7f1 fb4a 	bl	80002c8 <__aeabi_dsub>
 800ec34:	4602      	mov	r2, r0
 800ec36:	460b      	mov	r3, r1
 800ec38:	4640      	mov	r0, r8
 800ec3a:	4649      	mov	r1, r9
 800ec3c:	f7f1 fb44 	bl	80002c8 <__aeabi_dsub>
 800ec40:	4632      	mov	r2, r6
 800ec42:	462b      	mov	r3, r5
 800ec44:	f7f1 fcf8 	bl	8000638 <__aeabi_dmul>
 800ec48:	4632      	mov	r2, r6
 800ec4a:	4680      	mov	r8, r0
 800ec4c:	4689      	mov	r9, r1
 800ec4e:	462b      	mov	r3, r5
 800ec50:	4630      	mov	r0, r6
 800ec52:	4639      	mov	r1, r7
 800ec54:	f7f1 fcf0 	bl	8000638 <__aeabi_dmul>
 800ec58:	4bb4      	ldr	r3, [pc, #720]	; (800ef2c <__kernel_tan+0x394>)
 800ec5a:	2200      	movs	r2, #0
 800ec5c:	f7f1 fb36 	bl	80002cc <__adddf3>
 800ec60:	4602      	mov	r2, r0
 800ec62:	460b      	mov	r3, r1
 800ec64:	4640      	mov	r0, r8
 800ec66:	4649      	mov	r1, r9
 800ec68:	f7f1 fb30 	bl	80002cc <__adddf3>
 800ec6c:	e9dd 2300 	ldrd	r2, r3, [sp]
 800ec70:	f7f1 fce2 	bl	8000638 <__aeabi_dmul>
 800ec74:	4622      	mov	r2, r4
 800ec76:	462b      	mov	r3, r5
 800ec78:	f7f1 fb28 	bl	80002cc <__adddf3>
 800ec7c:	e7b5      	b.n	800ebea <__kernel_tan+0x52>
 800ec7e:	4bad      	ldr	r3, [pc, #692]	; (800ef34 <__kernel_tan+0x39c>)
 800ec80:	429f      	cmp	r7, r3
 800ec82:	dd26      	ble.n	800ecd2 <__kernel_tan+0x13a>
 800ec84:	9b00      	ldr	r3, [sp, #0]
 800ec86:	2b00      	cmp	r3, #0
 800ec88:	da09      	bge.n	800ec9e <__kernel_tan+0x106>
 800ec8a:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800ec8e:	469b      	mov	fp, r3
 800ec90:	ee10 aa10 	vmov	sl, s0
 800ec94:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800ec98:	ee11 8a10 	vmov	r8, s2
 800ec9c:	4699      	mov	r9, r3
 800ec9e:	4652      	mov	r2, sl
 800eca0:	465b      	mov	r3, fp
 800eca2:	a183      	add	r1, pc, #524	; (adr r1, 800eeb0 <__kernel_tan+0x318>)
 800eca4:	e9d1 0100 	ldrd	r0, r1, [r1]
 800eca8:	f7f1 fb0e 	bl	80002c8 <__aeabi_dsub>
 800ecac:	4642      	mov	r2, r8
 800ecae:	464b      	mov	r3, r9
 800ecb0:	4604      	mov	r4, r0
 800ecb2:	460d      	mov	r5, r1
 800ecb4:	a180      	add	r1, pc, #512	; (adr r1, 800eeb8 <__kernel_tan+0x320>)
 800ecb6:	e9d1 0100 	ldrd	r0, r1, [r1]
 800ecba:	f7f1 fb05 	bl	80002c8 <__aeabi_dsub>
 800ecbe:	4622      	mov	r2, r4
 800ecc0:	462b      	mov	r3, r5
 800ecc2:	f7f1 fb03 	bl	80002cc <__adddf3>
 800ecc6:	f04f 0800 	mov.w	r8, #0
 800ecca:	4682      	mov	sl, r0
 800eccc:	468b      	mov	fp, r1
 800ecce:	f04f 0900 	mov.w	r9, #0
 800ecd2:	4652      	mov	r2, sl
 800ecd4:	465b      	mov	r3, fp
 800ecd6:	4650      	mov	r0, sl
 800ecd8:	4659      	mov	r1, fp
 800ecda:	f7f1 fcad 	bl	8000638 <__aeabi_dmul>
 800ecde:	4602      	mov	r2, r0
 800ece0:	460b      	mov	r3, r1
 800ece2:	ec43 2b18 	vmov	d8, r2, r3
 800ece6:	f7f1 fca7 	bl	8000638 <__aeabi_dmul>
 800ecea:	ec53 2b18 	vmov	r2, r3, d8
 800ecee:	4604      	mov	r4, r0
 800ecf0:	460d      	mov	r5, r1
 800ecf2:	4650      	mov	r0, sl
 800ecf4:	4659      	mov	r1, fp
 800ecf6:	f7f1 fc9f 	bl	8000638 <__aeabi_dmul>
 800ecfa:	a371      	add	r3, pc, #452	; (adr r3, 800eec0 <__kernel_tan+0x328>)
 800ecfc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ed00:	ec41 0b19 	vmov	d9, r0, r1
 800ed04:	4620      	mov	r0, r4
 800ed06:	4629      	mov	r1, r5
 800ed08:	f7f1 fc96 	bl	8000638 <__aeabi_dmul>
 800ed0c:	a36e      	add	r3, pc, #440	; (adr r3, 800eec8 <__kernel_tan+0x330>)
 800ed0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ed12:	f7f1 fadb 	bl	80002cc <__adddf3>
 800ed16:	4622      	mov	r2, r4
 800ed18:	462b      	mov	r3, r5
 800ed1a:	f7f1 fc8d 	bl	8000638 <__aeabi_dmul>
 800ed1e:	a36c      	add	r3, pc, #432	; (adr r3, 800eed0 <__kernel_tan+0x338>)
 800ed20:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ed24:	f7f1 fad2 	bl	80002cc <__adddf3>
 800ed28:	4622      	mov	r2, r4
 800ed2a:	462b      	mov	r3, r5
 800ed2c:	f7f1 fc84 	bl	8000638 <__aeabi_dmul>
 800ed30:	a369      	add	r3, pc, #420	; (adr r3, 800eed8 <__kernel_tan+0x340>)
 800ed32:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ed36:	f7f1 fac9 	bl	80002cc <__adddf3>
 800ed3a:	4622      	mov	r2, r4
 800ed3c:	462b      	mov	r3, r5
 800ed3e:	f7f1 fc7b 	bl	8000638 <__aeabi_dmul>
 800ed42:	a367      	add	r3, pc, #412	; (adr r3, 800eee0 <__kernel_tan+0x348>)
 800ed44:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ed48:	f7f1 fac0 	bl	80002cc <__adddf3>
 800ed4c:	4622      	mov	r2, r4
 800ed4e:	462b      	mov	r3, r5
 800ed50:	f7f1 fc72 	bl	8000638 <__aeabi_dmul>
 800ed54:	a364      	add	r3, pc, #400	; (adr r3, 800eee8 <__kernel_tan+0x350>)
 800ed56:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ed5a:	f7f1 fab7 	bl	80002cc <__adddf3>
 800ed5e:	ec53 2b18 	vmov	r2, r3, d8
 800ed62:	f7f1 fc69 	bl	8000638 <__aeabi_dmul>
 800ed66:	a362      	add	r3, pc, #392	; (adr r3, 800eef0 <__kernel_tan+0x358>)
 800ed68:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ed6c:	ec41 0b1a 	vmov	d10, r0, r1
 800ed70:	4620      	mov	r0, r4
 800ed72:	4629      	mov	r1, r5
 800ed74:	f7f1 fc60 	bl	8000638 <__aeabi_dmul>
 800ed78:	a35f      	add	r3, pc, #380	; (adr r3, 800eef8 <__kernel_tan+0x360>)
 800ed7a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ed7e:	f7f1 faa5 	bl	80002cc <__adddf3>
 800ed82:	4622      	mov	r2, r4
 800ed84:	462b      	mov	r3, r5
 800ed86:	f7f1 fc57 	bl	8000638 <__aeabi_dmul>
 800ed8a:	a35d      	add	r3, pc, #372	; (adr r3, 800ef00 <__kernel_tan+0x368>)
 800ed8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ed90:	f7f1 fa9c 	bl	80002cc <__adddf3>
 800ed94:	4622      	mov	r2, r4
 800ed96:	462b      	mov	r3, r5
 800ed98:	f7f1 fc4e 	bl	8000638 <__aeabi_dmul>
 800ed9c:	a35a      	add	r3, pc, #360	; (adr r3, 800ef08 <__kernel_tan+0x370>)
 800ed9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800eda2:	f7f1 fa93 	bl	80002cc <__adddf3>
 800eda6:	4622      	mov	r2, r4
 800eda8:	462b      	mov	r3, r5
 800edaa:	f7f1 fc45 	bl	8000638 <__aeabi_dmul>
 800edae:	a358      	add	r3, pc, #352	; (adr r3, 800ef10 <__kernel_tan+0x378>)
 800edb0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800edb4:	f7f1 fa8a 	bl	80002cc <__adddf3>
 800edb8:	4622      	mov	r2, r4
 800edba:	462b      	mov	r3, r5
 800edbc:	f7f1 fc3c 	bl	8000638 <__aeabi_dmul>
 800edc0:	a355      	add	r3, pc, #340	; (adr r3, 800ef18 <__kernel_tan+0x380>)
 800edc2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800edc6:	f7f1 fa81 	bl	80002cc <__adddf3>
 800edca:	4602      	mov	r2, r0
 800edcc:	460b      	mov	r3, r1
 800edce:	ec51 0b1a 	vmov	r0, r1, d10
 800edd2:	f7f1 fa7b 	bl	80002cc <__adddf3>
 800edd6:	ec53 2b19 	vmov	r2, r3, d9
 800edda:	f7f1 fc2d 	bl	8000638 <__aeabi_dmul>
 800edde:	4642      	mov	r2, r8
 800ede0:	464b      	mov	r3, r9
 800ede2:	f7f1 fa73 	bl	80002cc <__adddf3>
 800ede6:	ec53 2b18 	vmov	r2, r3, d8
 800edea:	f7f1 fc25 	bl	8000638 <__aeabi_dmul>
 800edee:	4642      	mov	r2, r8
 800edf0:	464b      	mov	r3, r9
 800edf2:	f7f1 fa6b 	bl	80002cc <__adddf3>
 800edf6:	a34a      	add	r3, pc, #296	; (adr r3, 800ef20 <__kernel_tan+0x388>)
 800edf8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800edfc:	4604      	mov	r4, r0
 800edfe:	460d      	mov	r5, r1
 800ee00:	ec51 0b19 	vmov	r0, r1, d9
 800ee04:	f7f1 fc18 	bl	8000638 <__aeabi_dmul>
 800ee08:	4622      	mov	r2, r4
 800ee0a:	462b      	mov	r3, r5
 800ee0c:	f7f1 fa5e 	bl	80002cc <__adddf3>
 800ee10:	460b      	mov	r3, r1
 800ee12:	ec41 0b18 	vmov	d8, r0, r1
 800ee16:	4602      	mov	r2, r0
 800ee18:	4659      	mov	r1, fp
 800ee1a:	4650      	mov	r0, sl
 800ee1c:	f7f1 fa56 	bl	80002cc <__adddf3>
 800ee20:	4b44      	ldr	r3, [pc, #272]	; (800ef34 <__kernel_tan+0x39c>)
 800ee22:	429f      	cmp	r7, r3
 800ee24:	4604      	mov	r4, r0
 800ee26:	460d      	mov	r5, r1
 800ee28:	f340 8086 	ble.w	800ef38 <__kernel_tan+0x3a0>
 800ee2c:	4630      	mov	r0, r6
 800ee2e:	f7f1 fb99 	bl	8000564 <__aeabi_i2d>
 800ee32:	4622      	mov	r2, r4
 800ee34:	4680      	mov	r8, r0
 800ee36:	4689      	mov	r9, r1
 800ee38:	462b      	mov	r3, r5
 800ee3a:	4620      	mov	r0, r4
 800ee3c:	4629      	mov	r1, r5
 800ee3e:	f7f1 fbfb 	bl	8000638 <__aeabi_dmul>
 800ee42:	4642      	mov	r2, r8
 800ee44:	4606      	mov	r6, r0
 800ee46:	460f      	mov	r7, r1
 800ee48:	464b      	mov	r3, r9
 800ee4a:	4620      	mov	r0, r4
 800ee4c:	4629      	mov	r1, r5
 800ee4e:	f7f1 fa3d 	bl	80002cc <__adddf3>
 800ee52:	4602      	mov	r2, r0
 800ee54:	460b      	mov	r3, r1
 800ee56:	4630      	mov	r0, r6
 800ee58:	4639      	mov	r1, r7
 800ee5a:	f7f1 fd17 	bl	800088c <__aeabi_ddiv>
 800ee5e:	ec53 2b18 	vmov	r2, r3, d8
 800ee62:	f7f1 fa31 	bl	80002c8 <__aeabi_dsub>
 800ee66:	4602      	mov	r2, r0
 800ee68:	460b      	mov	r3, r1
 800ee6a:	4650      	mov	r0, sl
 800ee6c:	4659      	mov	r1, fp
 800ee6e:	f7f1 fa2b 	bl	80002c8 <__aeabi_dsub>
 800ee72:	4602      	mov	r2, r0
 800ee74:	460b      	mov	r3, r1
 800ee76:	f7f1 fa29 	bl	80002cc <__adddf3>
 800ee7a:	4602      	mov	r2, r0
 800ee7c:	460b      	mov	r3, r1
 800ee7e:	4640      	mov	r0, r8
 800ee80:	4649      	mov	r1, r9
 800ee82:	f7f1 fa21 	bl	80002c8 <__aeabi_dsub>
 800ee86:	9b00      	ldr	r3, [sp, #0]
 800ee88:	ea4f 7aa3 	mov.w	sl, r3, asr #30
 800ee8c:	f00a 0a02 	and.w	sl, sl, #2
 800ee90:	4604      	mov	r4, r0
 800ee92:	f1ca 0001 	rsb	r0, sl, #1
 800ee96:	460d      	mov	r5, r1
 800ee98:	f7f1 fb64 	bl	8000564 <__aeabi_i2d>
 800ee9c:	4602      	mov	r2, r0
 800ee9e:	460b      	mov	r3, r1
 800eea0:	4620      	mov	r0, r4
 800eea2:	4629      	mov	r1, r5
 800eea4:	f7f1 fbc8 	bl	8000638 <__aeabi_dmul>
 800eea8:	e69f      	b.n	800ebea <__kernel_tan+0x52>
 800eeaa:	bf00      	nop
 800eeac:	f3af 8000 	nop.w
 800eeb0:	54442d18 	.word	0x54442d18
 800eeb4:	3fe921fb 	.word	0x3fe921fb
 800eeb8:	33145c07 	.word	0x33145c07
 800eebc:	3c81a626 	.word	0x3c81a626
 800eec0:	74bf7ad4 	.word	0x74bf7ad4
 800eec4:	3efb2a70 	.word	0x3efb2a70
 800eec8:	32f0a7e9 	.word	0x32f0a7e9
 800eecc:	3f12b80f 	.word	0x3f12b80f
 800eed0:	1a8d1068 	.word	0x1a8d1068
 800eed4:	3f3026f7 	.word	0x3f3026f7
 800eed8:	fee08315 	.word	0xfee08315
 800eedc:	3f57dbc8 	.word	0x3f57dbc8
 800eee0:	e96e8493 	.word	0xe96e8493
 800eee4:	3f8226e3 	.word	0x3f8226e3
 800eee8:	1bb341fe 	.word	0x1bb341fe
 800eeec:	3faba1ba 	.word	0x3faba1ba
 800eef0:	db605373 	.word	0xdb605373
 800eef4:	bef375cb 	.word	0xbef375cb
 800eef8:	a03792a6 	.word	0xa03792a6
 800eefc:	3f147e88 	.word	0x3f147e88
 800ef00:	f2f26501 	.word	0xf2f26501
 800ef04:	3f4344d8 	.word	0x3f4344d8
 800ef08:	c9560328 	.word	0xc9560328
 800ef0c:	3f6d6d22 	.word	0x3f6d6d22
 800ef10:	8406d637 	.word	0x8406d637
 800ef14:	3f9664f4 	.word	0x3f9664f4
 800ef18:	1110fe7a 	.word	0x1110fe7a
 800ef1c:	3fc11111 	.word	0x3fc11111
 800ef20:	55555563 	.word	0x55555563
 800ef24:	3fd55555 	.word	0x3fd55555
 800ef28:	3e2fffff 	.word	0x3e2fffff
 800ef2c:	3ff00000 	.word	0x3ff00000
 800ef30:	bff00000 	.word	0xbff00000
 800ef34:	3fe59427 	.word	0x3fe59427
 800ef38:	2e01      	cmp	r6, #1
 800ef3a:	d02f      	beq.n	800ef9c <__kernel_tan+0x404>
 800ef3c:	460f      	mov	r7, r1
 800ef3e:	4602      	mov	r2, r0
 800ef40:	460b      	mov	r3, r1
 800ef42:	4689      	mov	r9, r1
 800ef44:	2000      	movs	r0, #0
 800ef46:	4917      	ldr	r1, [pc, #92]	; (800efa4 <__kernel_tan+0x40c>)
 800ef48:	f7f1 fca0 	bl	800088c <__aeabi_ddiv>
 800ef4c:	2600      	movs	r6, #0
 800ef4e:	e9cd 0100 	strd	r0, r1, [sp]
 800ef52:	4652      	mov	r2, sl
 800ef54:	465b      	mov	r3, fp
 800ef56:	4630      	mov	r0, r6
 800ef58:	4639      	mov	r1, r7
 800ef5a:	f7f1 f9b5 	bl	80002c8 <__aeabi_dsub>
 800ef5e:	e9dd 4500 	ldrd	r4, r5, [sp]
 800ef62:	4602      	mov	r2, r0
 800ef64:	460b      	mov	r3, r1
 800ef66:	ec51 0b18 	vmov	r0, r1, d8
 800ef6a:	f7f1 f9ad 	bl	80002c8 <__aeabi_dsub>
 800ef6e:	4632      	mov	r2, r6
 800ef70:	462b      	mov	r3, r5
 800ef72:	f7f1 fb61 	bl	8000638 <__aeabi_dmul>
 800ef76:	46b0      	mov	r8, r6
 800ef78:	460f      	mov	r7, r1
 800ef7a:	4642      	mov	r2, r8
 800ef7c:	462b      	mov	r3, r5
 800ef7e:	4634      	mov	r4, r6
 800ef80:	4649      	mov	r1, r9
 800ef82:	4606      	mov	r6, r0
 800ef84:	4640      	mov	r0, r8
 800ef86:	f7f1 fb57 	bl	8000638 <__aeabi_dmul>
 800ef8a:	4b07      	ldr	r3, [pc, #28]	; (800efa8 <__kernel_tan+0x410>)
 800ef8c:	2200      	movs	r2, #0
 800ef8e:	f7f1 f99d 	bl	80002cc <__adddf3>
 800ef92:	4602      	mov	r2, r0
 800ef94:	460b      	mov	r3, r1
 800ef96:	4630      	mov	r0, r6
 800ef98:	4639      	mov	r1, r7
 800ef9a:	e665      	b.n	800ec68 <__kernel_tan+0xd0>
 800ef9c:	4682      	mov	sl, r0
 800ef9e:	468b      	mov	fp, r1
 800efa0:	e625      	b.n	800ebee <__kernel_tan+0x56>
 800efa2:	bf00      	nop
 800efa4:	bff00000 	.word	0xbff00000
 800efa8:	3ff00000 	.word	0x3ff00000
 800efac:	00000000 	.word	0x00000000

0800efb0 <floor>:
 800efb0:	ec51 0b10 	vmov	r0, r1, d0
 800efb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800efb8:	f3c1 570a 	ubfx	r7, r1, #20, #11
 800efbc:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 800efc0:	2e13      	cmp	r6, #19
 800efc2:	ee10 5a10 	vmov	r5, s0
 800efc6:	ee10 8a10 	vmov	r8, s0
 800efca:	460c      	mov	r4, r1
 800efcc:	dc32      	bgt.n	800f034 <floor+0x84>
 800efce:	2e00      	cmp	r6, #0
 800efd0:	da14      	bge.n	800effc <floor+0x4c>
 800efd2:	a333      	add	r3, pc, #204	; (adr r3, 800f0a0 <floor+0xf0>)
 800efd4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800efd8:	f7f1 f978 	bl	80002cc <__adddf3>
 800efdc:	2200      	movs	r2, #0
 800efde:	2300      	movs	r3, #0
 800efe0:	f7f1 fdba 	bl	8000b58 <__aeabi_dcmpgt>
 800efe4:	b138      	cbz	r0, 800eff6 <floor+0x46>
 800efe6:	2c00      	cmp	r4, #0
 800efe8:	da57      	bge.n	800f09a <floor+0xea>
 800efea:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 800efee:	431d      	orrs	r5, r3
 800eff0:	d001      	beq.n	800eff6 <floor+0x46>
 800eff2:	4c2d      	ldr	r4, [pc, #180]	; (800f0a8 <floor+0xf8>)
 800eff4:	2500      	movs	r5, #0
 800eff6:	4621      	mov	r1, r4
 800eff8:	4628      	mov	r0, r5
 800effa:	e025      	b.n	800f048 <floor+0x98>
 800effc:	4f2b      	ldr	r7, [pc, #172]	; (800f0ac <floor+0xfc>)
 800effe:	4137      	asrs	r7, r6
 800f000:	ea01 0307 	and.w	r3, r1, r7
 800f004:	4303      	orrs	r3, r0
 800f006:	d01f      	beq.n	800f048 <floor+0x98>
 800f008:	a325      	add	r3, pc, #148	; (adr r3, 800f0a0 <floor+0xf0>)
 800f00a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f00e:	f7f1 f95d 	bl	80002cc <__adddf3>
 800f012:	2200      	movs	r2, #0
 800f014:	2300      	movs	r3, #0
 800f016:	f7f1 fd9f 	bl	8000b58 <__aeabi_dcmpgt>
 800f01a:	2800      	cmp	r0, #0
 800f01c:	d0eb      	beq.n	800eff6 <floor+0x46>
 800f01e:	2c00      	cmp	r4, #0
 800f020:	bfbe      	ittt	lt
 800f022:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 800f026:	fa43 f606 	asrlt.w	r6, r3, r6
 800f02a:	19a4      	addlt	r4, r4, r6
 800f02c:	ea24 0407 	bic.w	r4, r4, r7
 800f030:	2500      	movs	r5, #0
 800f032:	e7e0      	b.n	800eff6 <floor+0x46>
 800f034:	2e33      	cmp	r6, #51	; 0x33
 800f036:	dd0b      	ble.n	800f050 <floor+0xa0>
 800f038:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 800f03c:	d104      	bne.n	800f048 <floor+0x98>
 800f03e:	ee10 2a10 	vmov	r2, s0
 800f042:	460b      	mov	r3, r1
 800f044:	f7f1 f942 	bl	80002cc <__adddf3>
 800f048:	ec41 0b10 	vmov	d0, r0, r1
 800f04c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f050:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 800f054:	f04f 33ff 	mov.w	r3, #4294967295
 800f058:	fa23 f707 	lsr.w	r7, r3, r7
 800f05c:	4207      	tst	r7, r0
 800f05e:	d0f3      	beq.n	800f048 <floor+0x98>
 800f060:	a30f      	add	r3, pc, #60	; (adr r3, 800f0a0 <floor+0xf0>)
 800f062:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f066:	f7f1 f931 	bl	80002cc <__adddf3>
 800f06a:	2200      	movs	r2, #0
 800f06c:	2300      	movs	r3, #0
 800f06e:	f7f1 fd73 	bl	8000b58 <__aeabi_dcmpgt>
 800f072:	2800      	cmp	r0, #0
 800f074:	d0bf      	beq.n	800eff6 <floor+0x46>
 800f076:	2c00      	cmp	r4, #0
 800f078:	da02      	bge.n	800f080 <floor+0xd0>
 800f07a:	2e14      	cmp	r6, #20
 800f07c:	d103      	bne.n	800f086 <floor+0xd6>
 800f07e:	3401      	adds	r4, #1
 800f080:	ea25 0507 	bic.w	r5, r5, r7
 800f084:	e7b7      	b.n	800eff6 <floor+0x46>
 800f086:	2301      	movs	r3, #1
 800f088:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 800f08c:	fa03 f606 	lsl.w	r6, r3, r6
 800f090:	4435      	add	r5, r6
 800f092:	4545      	cmp	r5, r8
 800f094:	bf38      	it	cc
 800f096:	18e4      	addcc	r4, r4, r3
 800f098:	e7f2      	b.n	800f080 <floor+0xd0>
 800f09a:	2500      	movs	r5, #0
 800f09c:	462c      	mov	r4, r5
 800f09e:	e7aa      	b.n	800eff6 <floor+0x46>
 800f0a0:	8800759c 	.word	0x8800759c
 800f0a4:	7e37e43c 	.word	0x7e37e43c
 800f0a8:	bff00000 	.word	0xbff00000
 800f0ac:	000fffff 	.word	0x000fffff

0800f0b0 <scalbn>:
 800f0b0:	b570      	push	{r4, r5, r6, lr}
 800f0b2:	ec55 4b10 	vmov	r4, r5, d0
 800f0b6:	f3c5 520a 	ubfx	r2, r5, #20, #11
 800f0ba:	4606      	mov	r6, r0
 800f0bc:	462b      	mov	r3, r5
 800f0be:	b99a      	cbnz	r2, 800f0e8 <scalbn+0x38>
 800f0c0:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 800f0c4:	4323      	orrs	r3, r4
 800f0c6:	d036      	beq.n	800f136 <scalbn+0x86>
 800f0c8:	4b39      	ldr	r3, [pc, #228]	; (800f1b0 <scalbn+0x100>)
 800f0ca:	4629      	mov	r1, r5
 800f0cc:	ee10 0a10 	vmov	r0, s0
 800f0d0:	2200      	movs	r2, #0
 800f0d2:	f7f1 fab1 	bl	8000638 <__aeabi_dmul>
 800f0d6:	4b37      	ldr	r3, [pc, #220]	; (800f1b4 <scalbn+0x104>)
 800f0d8:	429e      	cmp	r6, r3
 800f0da:	4604      	mov	r4, r0
 800f0dc:	460d      	mov	r5, r1
 800f0de:	da10      	bge.n	800f102 <scalbn+0x52>
 800f0e0:	a32b      	add	r3, pc, #172	; (adr r3, 800f190 <scalbn+0xe0>)
 800f0e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f0e6:	e03a      	b.n	800f15e <scalbn+0xae>
 800f0e8:	f240 71ff 	movw	r1, #2047	; 0x7ff
 800f0ec:	428a      	cmp	r2, r1
 800f0ee:	d10c      	bne.n	800f10a <scalbn+0x5a>
 800f0f0:	ee10 2a10 	vmov	r2, s0
 800f0f4:	4620      	mov	r0, r4
 800f0f6:	4629      	mov	r1, r5
 800f0f8:	f7f1 f8e8 	bl	80002cc <__adddf3>
 800f0fc:	4604      	mov	r4, r0
 800f0fe:	460d      	mov	r5, r1
 800f100:	e019      	b.n	800f136 <scalbn+0x86>
 800f102:	f3c1 520a 	ubfx	r2, r1, #20, #11
 800f106:	460b      	mov	r3, r1
 800f108:	3a36      	subs	r2, #54	; 0x36
 800f10a:	4432      	add	r2, r6
 800f10c:	f240 71fe 	movw	r1, #2046	; 0x7fe
 800f110:	428a      	cmp	r2, r1
 800f112:	dd08      	ble.n	800f126 <scalbn+0x76>
 800f114:	2d00      	cmp	r5, #0
 800f116:	a120      	add	r1, pc, #128	; (adr r1, 800f198 <scalbn+0xe8>)
 800f118:	e9d1 0100 	ldrd	r0, r1, [r1]
 800f11c:	da1c      	bge.n	800f158 <scalbn+0xa8>
 800f11e:	a120      	add	r1, pc, #128	; (adr r1, 800f1a0 <scalbn+0xf0>)
 800f120:	e9d1 0100 	ldrd	r0, r1, [r1]
 800f124:	e018      	b.n	800f158 <scalbn+0xa8>
 800f126:	2a00      	cmp	r2, #0
 800f128:	dd08      	ble.n	800f13c <scalbn+0x8c>
 800f12a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 800f12e:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 800f132:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 800f136:	ec45 4b10 	vmov	d0, r4, r5
 800f13a:	bd70      	pop	{r4, r5, r6, pc}
 800f13c:	f112 0f35 	cmn.w	r2, #53	; 0x35
 800f140:	da19      	bge.n	800f176 <scalbn+0xc6>
 800f142:	f24c 3350 	movw	r3, #50000	; 0xc350
 800f146:	429e      	cmp	r6, r3
 800f148:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 800f14c:	dd0a      	ble.n	800f164 <scalbn+0xb4>
 800f14e:	a112      	add	r1, pc, #72	; (adr r1, 800f198 <scalbn+0xe8>)
 800f150:	e9d1 0100 	ldrd	r0, r1, [r1]
 800f154:	2b00      	cmp	r3, #0
 800f156:	d1e2      	bne.n	800f11e <scalbn+0x6e>
 800f158:	a30f      	add	r3, pc, #60	; (adr r3, 800f198 <scalbn+0xe8>)
 800f15a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f15e:	f7f1 fa6b 	bl	8000638 <__aeabi_dmul>
 800f162:	e7cb      	b.n	800f0fc <scalbn+0x4c>
 800f164:	a10a      	add	r1, pc, #40	; (adr r1, 800f190 <scalbn+0xe0>)
 800f166:	e9d1 0100 	ldrd	r0, r1, [r1]
 800f16a:	2b00      	cmp	r3, #0
 800f16c:	d0b8      	beq.n	800f0e0 <scalbn+0x30>
 800f16e:	a10e      	add	r1, pc, #56	; (adr r1, 800f1a8 <scalbn+0xf8>)
 800f170:	e9d1 0100 	ldrd	r0, r1, [r1]
 800f174:	e7b4      	b.n	800f0e0 <scalbn+0x30>
 800f176:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 800f17a:	3236      	adds	r2, #54	; 0x36
 800f17c:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 800f180:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 800f184:	4620      	mov	r0, r4
 800f186:	4b0c      	ldr	r3, [pc, #48]	; (800f1b8 <scalbn+0x108>)
 800f188:	2200      	movs	r2, #0
 800f18a:	e7e8      	b.n	800f15e <scalbn+0xae>
 800f18c:	f3af 8000 	nop.w
 800f190:	c2f8f359 	.word	0xc2f8f359
 800f194:	01a56e1f 	.word	0x01a56e1f
 800f198:	8800759c 	.word	0x8800759c
 800f19c:	7e37e43c 	.word	0x7e37e43c
 800f1a0:	8800759c 	.word	0x8800759c
 800f1a4:	fe37e43c 	.word	0xfe37e43c
 800f1a8:	c2f8f359 	.word	0xc2f8f359
 800f1ac:	81a56e1f 	.word	0x81a56e1f
 800f1b0:	43500000 	.word	0x43500000
 800f1b4:	ffff3cb0 	.word	0xffff3cb0
 800f1b8:	3c900000 	.word	0x3c900000

0800f1bc <_init>:
 800f1bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f1be:	bf00      	nop
 800f1c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800f1c2:	bc08      	pop	{r3}
 800f1c4:	469e      	mov	lr, r3
 800f1c6:	4770      	bx	lr

0800f1c8 <_fini>:
 800f1c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f1ca:	bf00      	nop
 800f1cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800f1ce:	bc08      	pop	{r3}
 800f1d0:	469e      	mov	lr, r3
 800f1d2:	4770      	bx	lr
