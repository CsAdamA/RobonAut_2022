
RobonAUT-control.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00010f8c  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000758  08011160  08011160  00021160  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080118b8  080118b8  00030318  2**0
                  CONTENTS
  4 .ARM          00000008  080118b8  080118b8  000218b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080118c0  080118c0  00030318  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080118c0  080118c0  000218c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080118c4  080118c4  000218c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000318  20000000  080118c8  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000970  20000318  08011be0  00030318  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000c88  08011be0  00030c88  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00030318  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001817f  00000000  00000000  00030348  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000380f  00000000  00000000  000484c7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000012a8  00000000  00000000  0004bcd8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001188  00000000  00000000  0004cf80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00026427  00000000  00000000  0004e108  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001987f  00000000  00000000  0007452f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000e16f8  00000000  00000000  0008ddae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0016f4a6  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000060b8  00000000  00000000  0016f4f8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000318 	.word	0x20000318
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08011144 	.word	0x08011144

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	2000031c 	.word	0x2000031c
 800020c:	08011144 	.word	0x08011144

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295
 8000c9c:	f000 b974 	b.w	8000f88 <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f806 	bl	8000cb8 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__udivmoddi4>:
 8000cb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cbc:	9d08      	ldr	r5, [sp, #32]
 8000cbe:	4604      	mov	r4, r0
 8000cc0:	468e      	mov	lr, r1
 8000cc2:	2b00      	cmp	r3, #0
 8000cc4:	d14d      	bne.n	8000d62 <__udivmoddi4+0xaa>
 8000cc6:	428a      	cmp	r2, r1
 8000cc8:	4694      	mov	ip, r2
 8000cca:	d969      	bls.n	8000da0 <__udivmoddi4+0xe8>
 8000ccc:	fab2 f282 	clz	r2, r2
 8000cd0:	b152      	cbz	r2, 8000ce8 <__udivmoddi4+0x30>
 8000cd2:	fa01 f302 	lsl.w	r3, r1, r2
 8000cd6:	f1c2 0120 	rsb	r1, r2, #32
 8000cda:	fa20 f101 	lsr.w	r1, r0, r1
 8000cde:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ce2:	ea41 0e03 	orr.w	lr, r1, r3
 8000ce6:	4094      	lsls	r4, r2
 8000ce8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000cec:	0c21      	lsrs	r1, r4, #16
 8000cee:	fbbe f6f8 	udiv	r6, lr, r8
 8000cf2:	fa1f f78c 	uxth.w	r7, ip
 8000cf6:	fb08 e316 	mls	r3, r8, r6, lr
 8000cfa:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000cfe:	fb06 f107 	mul.w	r1, r6, r7
 8000d02:	4299      	cmp	r1, r3
 8000d04:	d90a      	bls.n	8000d1c <__udivmoddi4+0x64>
 8000d06:	eb1c 0303 	adds.w	r3, ip, r3
 8000d0a:	f106 30ff 	add.w	r0, r6, #4294967295
 8000d0e:	f080 811f 	bcs.w	8000f50 <__udivmoddi4+0x298>
 8000d12:	4299      	cmp	r1, r3
 8000d14:	f240 811c 	bls.w	8000f50 <__udivmoddi4+0x298>
 8000d18:	3e02      	subs	r6, #2
 8000d1a:	4463      	add	r3, ip
 8000d1c:	1a5b      	subs	r3, r3, r1
 8000d1e:	b2a4      	uxth	r4, r4
 8000d20:	fbb3 f0f8 	udiv	r0, r3, r8
 8000d24:	fb08 3310 	mls	r3, r8, r0, r3
 8000d28:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000d2c:	fb00 f707 	mul.w	r7, r0, r7
 8000d30:	42a7      	cmp	r7, r4
 8000d32:	d90a      	bls.n	8000d4a <__udivmoddi4+0x92>
 8000d34:	eb1c 0404 	adds.w	r4, ip, r4
 8000d38:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d3c:	f080 810a 	bcs.w	8000f54 <__udivmoddi4+0x29c>
 8000d40:	42a7      	cmp	r7, r4
 8000d42:	f240 8107 	bls.w	8000f54 <__udivmoddi4+0x29c>
 8000d46:	4464      	add	r4, ip
 8000d48:	3802      	subs	r0, #2
 8000d4a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d4e:	1be4      	subs	r4, r4, r7
 8000d50:	2600      	movs	r6, #0
 8000d52:	b11d      	cbz	r5, 8000d5c <__udivmoddi4+0xa4>
 8000d54:	40d4      	lsrs	r4, r2
 8000d56:	2300      	movs	r3, #0
 8000d58:	e9c5 4300 	strd	r4, r3, [r5]
 8000d5c:	4631      	mov	r1, r6
 8000d5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d62:	428b      	cmp	r3, r1
 8000d64:	d909      	bls.n	8000d7a <__udivmoddi4+0xc2>
 8000d66:	2d00      	cmp	r5, #0
 8000d68:	f000 80ef 	beq.w	8000f4a <__udivmoddi4+0x292>
 8000d6c:	2600      	movs	r6, #0
 8000d6e:	e9c5 0100 	strd	r0, r1, [r5]
 8000d72:	4630      	mov	r0, r6
 8000d74:	4631      	mov	r1, r6
 8000d76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d7a:	fab3 f683 	clz	r6, r3
 8000d7e:	2e00      	cmp	r6, #0
 8000d80:	d14a      	bne.n	8000e18 <__udivmoddi4+0x160>
 8000d82:	428b      	cmp	r3, r1
 8000d84:	d302      	bcc.n	8000d8c <__udivmoddi4+0xd4>
 8000d86:	4282      	cmp	r2, r0
 8000d88:	f200 80f9 	bhi.w	8000f7e <__udivmoddi4+0x2c6>
 8000d8c:	1a84      	subs	r4, r0, r2
 8000d8e:	eb61 0303 	sbc.w	r3, r1, r3
 8000d92:	2001      	movs	r0, #1
 8000d94:	469e      	mov	lr, r3
 8000d96:	2d00      	cmp	r5, #0
 8000d98:	d0e0      	beq.n	8000d5c <__udivmoddi4+0xa4>
 8000d9a:	e9c5 4e00 	strd	r4, lr, [r5]
 8000d9e:	e7dd      	b.n	8000d5c <__udivmoddi4+0xa4>
 8000da0:	b902      	cbnz	r2, 8000da4 <__udivmoddi4+0xec>
 8000da2:	deff      	udf	#255	; 0xff
 8000da4:	fab2 f282 	clz	r2, r2
 8000da8:	2a00      	cmp	r2, #0
 8000daa:	f040 8092 	bne.w	8000ed2 <__udivmoddi4+0x21a>
 8000dae:	eba1 010c 	sub.w	r1, r1, ip
 8000db2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000db6:	fa1f fe8c 	uxth.w	lr, ip
 8000dba:	2601      	movs	r6, #1
 8000dbc:	0c20      	lsrs	r0, r4, #16
 8000dbe:	fbb1 f3f7 	udiv	r3, r1, r7
 8000dc2:	fb07 1113 	mls	r1, r7, r3, r1
 8000dc6:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000dca:	fb0e f003 	mul.w	r0, lr, r3
 8000dce:	4288      	cmp	r0, r1
 8000dd0:	d908      	bls.n	8000de4 <__udivmoddi4+0x12c>
 8000dd2:	eb1c 0101 	adds.w	r1, ip, r1
 8000dd6:	f103 38ff 	add.w	r8, r3, #4294967295
 8000dda:	d202      	bcs.n	8000de2 <__udivmoddi4+0x12a>
 8000ddc:	4288      	cmp	r0, r1
 8000dde:	f200 80cb 	bhi.w	8000f78 <__udivmoddi4+0x2c0>
 8000de2:	4643      	mov	r3, r8
 8000de4:	1a09      	subs	r1, r1, r0
 8000de6:	b2a4      	uxth	r4, r4
 8000de8:	fbb1 f0f7 	udiv	r0, r1, r7
 8000dec:	fb07 1110 	mls	r1, r7, r0, r1
 8000df0:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000df4:	fb0e fe00 	mul.w	lr, lr, r0
 8000df8:	45a6      	cmp	lr, r4
 8000dfa:	d908      	bls.n	8000e0e <__udivmoddi4+0x156>
 8000dfc:	eb1c 0404 	adds.w	r4, ip, r4
 8000e00:	f100 31ff 	add.w	r1, r0, #4294967295
 8000e04:	d202      	bcs.n	8000e0c <__udivmoddi4+0x154>
 8000e06:	45a6      	cmp	lr, r4
 8000e08:	f200 80bb 	bhi.w	8000f82 <__udivmoddi4+0x2ca>
 8000e0c:	4608      	mov	r0, r1
 8000e0e:	eba4 040e 	sub.w	r4, r4, lr
 8000e12:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000e16:	e79c      	b.n	8000d52 <__udivmoddi4+0x9a>
 8000e18:	f1c6 0720 	rsb	r7, r6, #32
 8000e1c:	40b3      	lsls	r3, r6
 8000e1e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000e22:	ea4c 0c03 	orr.w	ip, ip, r3
 8000e26:	fa20 f407 	lsr.w	r4, r0, r7
 8000e2a:	fa01 f306 	lsl.w	r3, r1, r6
 8000e2e:	431c      	orrs	r4, r3
 8000e30:	40f9      	lsrs	r1, r7
 8000e32:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000e36:	fa00 f306 	lsl.w	r3, r0, r6
 8000e3a:	fbb1 f8f9 	udiv	r8, r1, r9
 8000e3e:	0c20      	lsrs	r0, r4, #16
 8000e40:	fa1f fe8c 	uxth.w	lr, ip
 8000e44:	fb09 1118 	mls	r1, r9, r8, r1
 8000e48:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e4c:	fb08 f00e 	mul.w	r0, r8, lr
 8000e50:	4288      	cmp	r0, r1
 8000e52:	fa02 f206 	lsl.w	r2, r2, r6
 8000e56:	d90b      	bls.n	8000e70 <__udivmoddi4+0x1b8>
 8000e58:	eb1c 0101 	adds.w	r1, ip, r1
 8000e5c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000e60:	f080 8088 	bcs.w	8000f74 <__udivmoddi4+0x2bc>
 8000e64:	4288      	cmp	r0, r1
 8000e66:	f240 8085 	bls.w	8000f74 <__udivmoddi4+0x2bc>
 8000e6a:	f1a8 0802 	sub.w	r8, r8, #2
 8000e6e:	4461      	add	r1, ip
 8000e70:	1a09      	subs	r1, r1, r0
 8000e72:	b2a4      	uxth	r4, r4
 8000e74:	fbb1 f0f9 	udiv	r0, r1, r9
 8000e78:	fb09 1110 	mls	r1, r9, r0, r1
 8000e7c:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000e80:	fb00 fe0e 	mul.w	lr, r0, lr
 8000e84:	458e      	cmp	lr, r1
 8000e86:	d908      	bls.n	8000e9a <__udivmoddi4+0x1e2>
 8000e88:	eb1c 0101 	adds.w	r1, ip, r1
 8000e8c:	f100 34ff 	add.w	r4, r0, #4294967295
 8000e90:	d26c      	bcs.n	8000f6c <__udivmoddi4+0x2b4>
 8000e92:	458e      	cmp	lr, r1
 8000e94:	d96a      	bls.n	8000f6c <__udivmoddi4+0x2b4>
 8000e96:	3802      	subs	r0, #2
 8000e98:	4461      	add	r1, ip
 8000e9a:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000e9e:	fba0 9402 	umull	r9, r4, r0, r2
 8000ea2:	eba1 010e 	sub.w	r1, r1, lr
 8000ea6:	42a1      	cmp	r1, r4
 8000ea8:	46c8      	mov	r8, r9
 8000eaa:	46a6      	mov	lr, r4
 8000eac:	d356      	bcc.n	8000f5c <__udivmoddi4+0x2a4>
 8000eae:	d053      	beq.n	8000f58 <__udivmoddi4+0x2a0>
 8000eb0:	b15d      	cbz	r5, 8000eca <__udivmoddi4+0x212>
 8000eb2:	ebb3 0208 	subs.w	r2, r3, r8
 8000eb6:	eb61 010e 	sbc.w	r1, r1, lr
 8000eba:	fa01 f707 	lsl.w	r7, r1, r7
 8000ebe:	fa22 f306 	lsr.w	r3, r2, r6
 8000ec2:	40f1      	lsrs	r1, r6
 8000ec4:	431f      	orrs	r7, r3
 8000ec6:	e9c5 7100 	strd	r7, r1, [r5]
 8000eca:	2600      	movs	r6, #0
 8000ecc:	4631      	mov	r1, r6
 8000ece:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ed2:	f1c2 0320 	rsb	r3, r2, #32
 8000ed6:	40d8      	lsrs	r0, r3
 8000ed8:	fa0c fc02 	lsl.w	ip, ip, r2
 8000edc:	fa21 f303 	lsr.w	r3, r1, r3
 8000ee0:	4091      	lsls	r1, r2
 8000ee2:	4301      	orrs	r1, r0
 8000ee4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ee8:	fa1f fe8c 	uxth.w	lr, ip
 8000eec:	fbb3 f0f7 	udiv	r0, r3, r7
 8000ef0:	fb07 3610 	mls	r6, r7, r0, r3
 8000ef4:	0c0b      	lsrs	r3, r1, #16
 8000ef6:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000efa:	fb00 f60e 	mul.w	r6, r0, lr
 8000efe:	429e      	cmp	r6, r3
 8000f00:	fa04 f402 	lsl.w	r4, r4, r2
 8000f04:	d908      	bls.n	8000f18 <__udivmoddi4+0x260>
 8000f06:	eb1c 0303 	adds.w	r3, ip, r3
 8000f0a:	f100 38ff 	add.w	r8, r0, #4294967295
 8000f0e:	d22f      	bcs.n	8000f70 <__udivmoddi4+0x2b8>
 8000f10:	429e      	cmp	r6, r3
 8000f12:	d92d      	bls.n	8000f70 <__udivmoddi4+0x2b8>
 8000f14:	3802      	subs	r0, #2
 8000f16:	4463      	add	r3, ip
 8000f18:	1b9b      	subs	r3, r3, r6
 8000f1a:	b289      	uxth	r1, r1
 8000f1c:	fbb3 f6f7 	udiv	r6, r3, r7
 8000f20:	fb07 3316 	mls	r3, r7, r6, r3
 8000f24:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f28:	fb06 f30e 	mul.w	r3, r6, lr
 8000f2c:	428b      	cmp	r3, r1
 8000f2e:	d908      	bls.n	8000f42 <__udivmoddi4+0x28a>
 8000f30:	eb1c 0101 	adds.w	r1, ip, r1
 8000f34:	f106 38ff 	add.w	r8, r6, #4294967295
 8000f38:	d216      	bcs.n	8000f68 <__udivmoddi4+0x2b0>
 8000f3a:	428b      	cmp	r3, r1
 8000f3c:	d914      	bls.n	8000f68 <__udivmoddi4+0x2b0>
 8000f3e:	3e02      	subs	r6, #2
 8000f40:	4461      	add	r1, ip
 8000f42:	1ac9      	subs	r1, r1, r3
 8000f44:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000f48:	e738      	b.n	8000dbc <__udivmoddi4+0x104>
 8000f4a:	462e      	mov	r6, r5
 8000f4c:	4628      	mov	r0, r5
 8000f4e:	e705      	b.n	8000d5c <__udivmoddi4+0xa4>
 8000f50:	4606      	mov	r6, r0
 8000f52:	e6e3      	b.n	8000d1c <__udivmoddi4+0x64>
 8000f54:	4618      	mov	r0, r3
 8000f56:	e6f8      	b.n	8000d4a <__udivmoddi4+0x92>
 8000f58:	454b      	cmp	r3, r9
 8000f5a:	d2a9      	bcs.n	8000eb0 <__udivmoddi4+0x1f8>
 8000f5c:	ebb9 0802 	subs.w	r8, r9, r2
 8000f60:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000f64:	3801      	subs	r0, #1
 8000f66:	e7a3      	b.n	8000eb0 <__udivmoddi4+0x1f8>
 8000f68:	4646      	mov	r6, r8
 8000f6a:	e7ea      	b.n	8000f42 <__udivmoddi4+0x28a>
 8000f6c:	4620      	mov	r0, r4
 8000f6e:	e794      	b.n	8000e9a <__udivmoddi4+0x1e2>
 8000f70:	4640      	mov	r0, r8
 8000f72:	e7d1      	b.n	8000f18 <__udivmoddi4+0x260>
 8000f74:	46d0      	mov	r8, sl
 8000f76:	e77b      	b.n	8000e70 <__udivmoddi4+0x1b8>
 8000f78:	3b02      	subs	r3, #2
 8000f7a:	4461      	add	r1, ip
 8000f7c:	e732      	b.n	8000de4 <__udivmoddi4+0x12c>
 8000f7e:	4630      	mov	r0, r6
 8000f80:	e709      	b.n	8000d96 <__udivmoddi4+0xde>
 8000f82:	4464      	add	r4, ip
 8000f84:	3802      	subs	r0, #2
 8000f86:	e742      	b.n	8000e0e <__udivmoddi4+0x156>

08000f88 <__aeabi_idiv0>:
 8000f88:	4770      	bx	lr
 8000f8a:	bf00      	nop

08000f8c <__NVIC_SystemReset>:
/**
  \brief   System Reset
  \details Initiates a system reset request to reset the MCU.
 */
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
 8000f8c:	b480      	push	{r7}
 8000f8e:	af00      	add	r7, sp, #0
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000f90:	f3bf 8f4f 	dsb	sy
}
 8000f94:	bf00      	nop
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 8000f96:	4b06      	ldr	r3, [pc, #24]	; (8000fb0 <__NVIC_SystemReset+0x24>)
 8000f98:	68db      	ldr	r3, [r3, #12]
 8000f9a:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 8000f9e:	4904      	ldr	r1, [pc, #16]	; (8000fb0 <__NVIC_SystemReset+0x24>)
 8000fa0:	4b04      	ldr	r3, [pc, #16]	; (8000fb4 <__NVIC_SystemReset+0x28>)
 8000fa2:	4313      	orrs	r3, r2
 8000fa4:	60cb      	str	r3, [r1, #12]
  __ASM volatile ("dsb 0xF":::"memory");
 8000fa6:	f3bf 8f4f 	dsb	sy
}
 8000faa:	bf00      	nop
                            SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchanged */
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
 8000fac:	bf00      	nop
 8000fae:	e7fd      	b.n	8000fac <__NVIC_SystemReset+0x20>
 8000fb0:	e000ed00 	.word	0xe000ed00
 8000fb4:	05fa0004 	.word	0x05fa0004

08000fb8 <F4_Basic_Init>:
uint8_t mode;
float v_ref; //mm/s
uint8_t leaveLineEnabled;

void F4_Basic_Init(UART_HandleTypeDef *huart_debugg,TIM_HandleTypeDef *htim_scheduler,TIM_HandleTypeDef *htim_motor,TIM_HandleTypeDef *htim_servo1,TIM_HandleTypeDef *htim_servo2, TIM_HandleTypeDef *htim_encoder,TIM_HandleTypeDef *htim_delay,TIM_HandleTypeDef *htim_rand)
{
 8000fb8:	b580      	push	{r7, lr}
 8000fba:	b08e      	sub	sp, #56	; 0x38
 8000fbc:	af00      	add	r7, sp, #0
 8000fbe:	60f8      	str	r0, [r7, #12]
 8000fc0:	60b9      	str	r1, [r7, #8]
 8000fc2:	607a      	str	r2, [r7, #4]
 8000fc4:	603b      	str	r3, [r7, #0]
	char buf[40];
	LED_R(0);
 8000fc6:	2201      	movs	r2, #1
 8000fc8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000fcc:	484f      	ldr	r0, [pc, #316]	; (800110c <F4_Basic_Init+0x154>)
 8000fce:	f008 f935 	bl	800923c <HAL_GPIO_WritePin>
	LED_B(0);
 8000fd2:	2201      	movs	r2, #1
 8000fd4:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000fd8:	484c      	ldr	r0, [pc, #304]	; (800110c <F4_Basic_Init+0x154>)
 8000fda:	f008 f92f 	bl	800923c <HAL_GPIO_WritePin>
	LED_G(0);
 8000fde:	2201      	movs	r2, #1
 8000fe0:	2102      	movs	r1, #2
 8000fe2:	484a      	ldr	r0, [pc, #296]	; (800110c <F4_Basic_Init+0x154>)
 8000fe4:	f008 f92a 	bl	800923c <HAL_GPIO_WritePin>
	LED_Y(0);
 8000fe8:	2201      	movs	r2, #1
 8000fea:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000fee:	4847      	ldr	r0, [pc, #284]	; (800110c <F4_Basic_Init+0x154>)
 8000ff0:	f008 f924 	bl	800923c <HAL_GPIO_WritePin>
	LED_NUCLEO(0);
 8000ff4:	2200      	movs	r2, #0
 8000ff6:	2120      	movs	r1, #32
 8000ff8:	4845      	ldr	r0, [pc, #276]	; (8001110 <F4_Basic_Init+0x158>)
 8000ffa:	f008 f91f 	bl	800923c <HAL_GPIO_WritePin>
	sprintf(buf,"\r\nRobonAUT 2023 Bit Bangers F4\r\n");// a buff tömb-be beleírom (stringprint) a string-emet. 1 karakter = 1 byte = 1 tömbelem
 8000ffe:	f107 0310 	add.w	r3, r7, #16
 8001002:	4944      	ldr	r1, [pc, #272]	; (8001114 <F4_Basic_Init+0x15c>)
 8001004:	4618      	mov	r0, r3
 8001006:	f00c fbd5 	bl	800d7b4 <siprintf>
	HAL_UART_Transmit(huart_debugg,(uint8_t*) buf, strlen(buf), 100);// A UART2-őn (ide van kötve a programozó) kiküldöm a buf karaktertömböt (string) és maximum 10-ms -ot várok hogy ezt elvégezze a periféria
 800100a:	f107 0310 	add.w	r3, r7, #16
 800100e:	4618      	mov	r0, r3
 8001010:	f7ff f8fe 	bl	8000210 <strlen>
 8001014:	4603      	mov	r3, r0
 8001016:	b29a      	uxth	r2, r3
 8001018:	f107 0110 	add.w	r1, r7, #16
 800101c:	2364      	movs	r3, #100	; 0x64
 800101e:	68f8      	ldr	r0, [r7, #12]
 8001020:	f00a fe5f 	bl	800bce2 <HAL_UART_Transmit>

	//MotorEnable engedélyezése
	motorEnRemote=0;//csak akkor ha megnyomtuk a ravaszt
 8001024:	4b3c      	ldr	r3, [pc, #240]	; (8001118 <F4_Basic_Init+0x160>)
 8001026:	2200      	movs	r2, #0
 8001028:	701a      	strb	r2, [r3, #0]
	motorEnLineOk=1;
 800102a:	4b3c      	ldr	r3, [pc, #240]	; (800111c <F4_Basic_Init+0x164>)
 800102c:	2201      	movs	r2, #1
 800102e:	701a      	strb	r2, [r3, #0]
	leaveLineEnabled=0;
 8001030:	4b3b      	ldr	r3, [pc, #236]	; (8001120 <F4_Basic_Init+0x168>)
 8001032:	2200      	movs	r2, #0
 8001034:	701a      	strb	r2, [r3, #0]

	swState[0] = SW1;
 8001036:	f44f 7180 	mov.w	r1, #256	; 0x100
 800103a:	4835      	ldr	r0, [pc, #212]	; (8001110 <F4_Basic_Init+0x158>)
 800103c:	f008 f8e6 	bl	800920c <HAL_GPIO_ReadPin>
 8001040:	4603      	mov	r3, r0
 8001042:	461a      	mov	r2, r3
 8001044:	4b37      	ldr	r3, [pc, #220]	; (8001124 <F4_Basic_Init+0x16c>)
 8001046:	701a      	strb	r2, [r3, #0]
	swState[1] = SW2;
 8001048:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800104c:	482f      	ldr	r0, [pc, #188]	; (800110c <F4_Basic_Init+0x154>)
 800104e:	f008 f8dd 	bl	800920c <HAL_GPIO_ReadPin>
 8001052:	4603      	mov	r3, r0
 8001054:	461a      	mov	r2, r3
 8001056:	4b33      	ldr	r3, [pc, #204]	; (8001124 <F4_Basic_Init+0x16c>)
 8001058:	705a      	strb	r2, [r3, #1]
	if(SW2)LED_R(1);
 800105a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800105e:	482b      	ldr	r0, [pc, #172]	; (800110c <F4_Basic_Init+0x154>)
 8001060:	f008 f8d4 	bl	800920c <HAL_GPIO_ReadPin>
 8001064:	4603      	mov	r3, r0
 8001066:	2b00      	cmp	r3, #0
 8001068:	d006      	beq.n	8001078 <F4_Basic_Init+0xc0>
 800106a:	2200      	movs	r2, #0
 800106c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001070:	4826      	ldr	r0, [pc, #152]	; (800110c <F4_Basic_Init+0x154>)
 8001072:	f008 f8e3 	bl	800923c <HAL_GPIO_WritePin>
 8001076:	e005      	b.n	8001084 <F4_Basic_Init+0xcc>
	else LED_R(0);
 8001078:	2201      	movs	r2, #1
 800107a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800107e:	4823      	ldr	r0, [pc, #140]	; (800110c <F4_Basic_Init+0x154>)
 8001080:	f008 f8dc 	bl	800923c <HAL_GPIO_WritePin>

	bFlag[0] = bFlag[1] = bFlag[2] = 0;
 8001084:	2200      	movs	r2, #0
 8001086:	4b28      	ldr	r3, [pc, #160]	; (8001128 <F4_Basic_Init+0x170>)
 8001088:	4611      	mov	r1, r2
 800108a:	7099      	strb	r1, [r3, #2]
 800108c:	4b26      	ldr	r3, [pc, #152]	; (8001128 <F4_Basic_Init+0x170>)
 800108e:	4611      	mov	r1, r2
 8001090:	7059      	strb	r1, [r3, #1]
 8001092:	4b25      	ldr	r3, [pc, #148]	; (8001128 <F4_Basic_Init+0x170>)
 8001094:	701a      	strb	r2, [r3, #0]
	fromPC[0]=150;
 8001096:	4b25      	ldr	r3, [pc, #148]	; (800112c <F4_Basic_Init+0x174>)
 8001098:	2296      	movs	r2, #150	; 0x96
 800109a:	701a      	strb	r2, [r3, #0]
	fromPC[1]=150;
 800109c:	4b23      	ldr	r3, [pc, #140]	; (800112c <F4_Basic_Init+0x174>)
 800109e:	2296      	movs	r2, #150	; 0x96
 80010a0:	705a      	strb	r2, [r3, #1]
	mode=SKILL;
 80010a2:	4b23      	ldr	r3, [pc, #140]	; (8001130 <F4_Basic_Init+0x178>)
 80010a4:	2252      	movs	r2, #82	; 0x52
 80010a6:	701a      	strb	r2, [r3, #0]
	v_ref = 1000;
 80010a8:	4b22      	ldr	r3, [pc, #136]	; (8001134 <F4_Basic_Init+0x17c>)
 80010aa:	4a23      	ldr	r2, [pc, #140]	; (8001138 <F4_Basic_Init+0x180>)
 80010ac:	601a      	str	r2, [r3, #0]
	v=0;
 80010ae:	4b23      	ldr	r3, [pc, #140]	; (800113c <F4_Basic_Init+0x184>)
 80010b0:	f04f 0200 	mov.w	r2, #0
 80010b4:	601a      	str	r2, [r3, #0]

	//timerek elindítása
	TIM1->CCR4=SERVO_REAR_CCR_MIDDLE;
 80010b6:	4b22      	ldr	r3, [pc, #136]	; (8001140 <F4_Basic_Init+0x188>)
 80010b8:	f44f 722a 	mov.w	r2, #680	; 0x2a8
 80010bc:	641a      	str	r2, [r3, #64]	; 0x40
	TIM2->CCR1=SERVO_FRONT_CCR_MIDDLE;
 80010be:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80010c2:	f44f 722d 	mov.w	r2, #692	; 0x2b4
 80010c6:	635a      	str	r2, [r3, #52]	; 0x34
	//TIM2->CCR1=684; //servot középre
	//TIM3->CCR1=499; //0 kitöltési tényező a motorra
	//TIM3->CCR2=499;
	HAL_TIM_Base_Start(htim_scheduler);//heart beat timer tick start
 80010c8:	68b8      	ldr	r0, [r7, #8]
 80010ca:	f008 ff8b 	bl	8009fe4 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(htim_delay);//heart beat timer tick start
 80010ce:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 80010d0:	f008 ff88 	bl	8009fe4 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(htim_rand);//heart beat timer tick start
 80010d4:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 80010d6:	f008 ff85 	bl	8009fe4 <HAL_TIM_Base_Start>
	HAL_TIM_PWM_Start(htim_motor, TIM_CHANNEL_1);//motor PWM-ek elindítása
 80010da:	2100      	movs	r1, #0
 80010dc:	6878      	ldr	r0, [r7, #4]
 80010de:	f009 f843 	bl	800a168 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim_motor, TIM_CHANNEL_2);
 80010e2:	2104      	movs	r1, #4
 80010e4:	6878      	ldr	r0, [r7, #4]
 80010e6:	f009 f83f 	bl	800a168 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim_servo1, TIM_CHANNEL_1); //servo RC pwm elindítása
 80010ea:	2100      	movs	r1, #0
 80010ec:	6838      	ldr	r0, [r7, #0]
 80010ee:	f009 f83b 	bl	800a168 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim_servo2, TIM_CHANNEL_4); //servo RC pwm elindítása
 80010f2:	210c      	movs	r1, #12
 80010f4:	6c38      	ldr	r0, [r7, #64]	; 0x40
 80010f6:	f009 f837 	bl	800a168 <HAL_TIM_PWM_Start>
	HAL_TIM_Encoder_Start(htim_encoder,TIM_CHANNEL_ALL);
 80010fa:	213c      	movs	r1, #60	; 0x3c
 80010fc:	6c78      	ldr	r0, [r7, #68]	; 0x44
 80010fe:	f009 fba5 	bl	800a84c <HAL_TIM_Encoder_Start>

	//Ha a PC-ről küldünk vmit azt fogadjuk
	//HAL_UART_Receive_IT(huart_debugg, fromPC, 2);
}
 8001102:	bf00      	nop
 8001104:	3738      	adds	r7, #56	; 0x38
 8001106:	46bd      	mov	sp, r7
 8001108:	bd80      	pop	{r7, pc}
 800110a:	bf00      	nop
 800110c:	40020400 	.word	0x40020400
 8001110:	40020000 	.word	0x40020000
 8001114:	08011160 	.word	0x08011160
 8001118:	20000c3c 	.word	0x20000c3c
 800111c:	20000c3d 	.word	0x20000c3d
 8001120:	20000344 	.word	0x20000344
 8001124:	20000334 	.word	0x20000334
 8001128:	20000338 	.word	0x20000338
 800112c:	2000033c 	.word	0x2000033c
 8001130:	2000033e 	.word	0x2000033e
 8001134:	20000340 	.word	0x20000340
 8001138:	447a0000 	.word	0x447a0000
 800113c:	20000758 	.word	0x20000758
 8001140:	40010000 	.word	0x40010000

08001144 <HDI_Read_Task>:


void HDI_Read_Task(UART_HandleTypeDef *huart_debugg,TIM_HandleTypeDef *htim_servo,uint32_t tick, uint32_t period)
{
 8001144:	b580      	push	{r7, lr}
 8001146:	b084      	sub	sp, #16
 8001148:	af00      	add	r7, sp, #0
 800114a:	60f8      	str	r0, [r7, #12]
 800114c:	60b9      	str	r1, [r7, #8]
 800114e:	607a      	str	r2, [r7, #4]
 8001150:	603b      	str	r3, [r7, #0]
	static uint32_t hdi_read_task_tick=0;

	if(hdi_read_task_tick>tick) return;
 8001152:	4b29      	ldr	r3, [pc, #164]	; (80011f8 <HDI_Read_Task+0xb4>)
 8001154:	681b      	ldr	r3, [r3, #0]
 8001156:	687a      	ldr	r2, [r7, #4]
 8001158:	429a      	cmp	r2, r3
 800115a:	d349      	bcc.n	80011f0 <HDI_Read_Task+0xac>
	hdi_read_task_tick = tick + period;
 800115c:	687a      	ldr	r2, [r7, #4]
 800115e:	683b      	ldr	r3, [r7, #0]
 8001160:	4413      	add	r3, r2
 8001162:	4a25      	ldr	r2, [pc, #148]	; (80011f8 <HDI_Read_Task+0xb4>)
 8001164:	6013      	str	r3, [r2, #0]

	swState[0]=SW1;
 8001166:	f44f 7180 	mov.w	r1, #256	; 0x100
 800116a:	4824      	ldr	r0, [pc, #144]	; (80011fc <HDI_Read_Task+0xb8>)
 800116c:	f008 f84e 	bl	800920c <HAL_GPIO_ReadPin>
 8001170:	4603      	mov	r3, r0
 8001172:	461a      	mov	r2, r3
 8001174:	4b22      	ldr	r3, [pc, #136]	; (8001200 <HDI_Read_Task+0xbc>)
 8001176:	701a      	strb	r2, [r3, #0]
	swState[1]=SW2;
 8001178:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800117c:	4821      	ldr	r0, [pc, #132]	; (8001204 <HDI_Read_Task+0xc0>)
 800117e:	f008 f845 	bl	800920c <HAL_GPIO_ReadPin>
 8001182:	4603      	mov	r3, r0
 8001184:	461a      	mov	r2, r3
 8001186:	4b1e      	ldr	r3, [pc, #120]	; (8001200 <HDI_Read_Task+0xbc>)
 8001188:	705a      	strb	r2, [r3, #1]

	if(swState[0] && mode==FAST) LED_G(1);
 800118a:	4b1d      	ldr	r3, [pc, #116]	; (8001200 <HDI_Read_Task+0xbc>)
 800118c:	781b      	ldrb	r3, [r3, #0]
 800118e:	2b00      	cmp	r3, #0
 8001190:	d008      	beq.n	80011a4 <HDI_Read_Task+0x60>
 8001192:	4b1d      	ldr	r3, [pc, #116]	; (8001208 <HDI_Read_Task+0xc4>)
 8001194:	781b      	ldrb	r3, [r3, #0]
 8001196:	2b3f      	cmp	r3, #63	; 0x3f
 8001198:	d104      	bne.n	80011a4 <HDI_Read_Task+0x60>
 800119a:	2200      	movs	r2, #0
 800119c:	2102      	movs	r1, #2
 800119e:	4819      	ldr	r0, [pc, #100]	; (8001204 <HDI_Read_Task+0xc0>)
 80011a0:	f008 f84c 	bl	800923c <HAL_GPIO_WritePin>
	if(!swState[0] && mode==FAST) LED_G(0);
 80011a4:	4b16      	ldr	r3, [pc, #88]	; (8001200 <HDI_Read_Task+0xbc>)
 80011a6:	781b      	ldrb	r3, [r3, #0]
 80011a8:	2b00      	cmp	r3, #0
 80011aa:	d108      	bne.n	80011be <HDI_Read_Task+0x7a>
 80011ac:	4b16      	ldr	r3, [pc, #88]	; (8001208 <HDI_Read_Task+0xc4>)
 80011ae:	781b      	ldrb	r3, [r3, #0]
 80011b0:	2b3f      	cmp	r3, #63	; 0x3f
 80011b2:	d104      	bne.n	80011be <HDI_Read_Task+0x7a>
 80011b4:	2201      	movs	r2, #1
 80011b6:	2102      	movs	r1, #2
 80011b8:	4812      	ldr	r0, [pc, #72]	; (8001204 <HDI_Read_Task+0xc0>)
 80011ba:	f008 f83f 	bl	800923c <HAL_GPIO_WritePin>
	if(swState[1]) LED_R(1);
 80011be:	4b10      	ldr	r3, [pc, #64]	; (8001200 <HDI_Read_Task+0xbc>)
 80011c0:	785b      	ldrb	r3, [r3, #1]
 80011c2:	2b00      	cmp	r3, #0
 80011c4:	d005      	beq.n	80011d2 <HDI_Read_Task+0x8e>
 80011c6:	2200      	movs	r2, #0
 80011c8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011cc:	480d      	ldr	r0, [pc, #52]	; (8001204 <HDI_Read_Task+0xc0>)
 80011ce:	f008 f835 	bl	800923c <HAL_GPIO_WritePin>
	if(!swState[1]) LED_R(0);
 80011d2:	4b0b      	ldr	r3, [pc, #44]	; (8001200 <HDI_Read_Task+0xbc>)
 80011d4:	785b      	ldrb	r3, [r3, #1]
 80011d6:	2b00      	cmp	r3, #0
 80011d8:	d105      	bne.n	80011e6 <HDI_Read_Task+0xa2>
 80011da:	2201      	movs	r2, #1
 80011dc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011e0:	4808      	ldr	r0, [pc, #32]	; (8001204 <HDI_Read_Task+0xc0>)
 80011e2:	f008 f82b 	bl	800923c <HAL_GPIO_WritePin>

	if(bFlag[0]);
 80011e6:	4b09      	ldr	r3, [pc, #36]	; (800120c <HDI_Read_Task+0xc8>)
 80011e8:	781b      	ldrb	r3, [r3, #0]
	if(bFlag[1]);
 80011ea:	4b08      	ldr	r3, [pc, #32]	; (800120c <HDI_Read_Task+0xc8>)
 80011ec:	785b      	ldrb	r3, [r3, #1]
 80011ee:	e000      	b.n	80011f2 <HDI_Read_Task+0xae>
	if(hdi_read_task_tick>tick) return;
 80011f0:	bf00      	nop

}
 80011f2:	3710      	adds	r7, #16
 80011f4:	46bd      	mov	sp, r7
 80011f6:	bd80      	pop	{r7, pc}
 80011f8:	20000348 	.word	0x20000348
 80011fc:	40020000 	.word	0x40020000
 8001200:	20000334 	.word	0x20000334
 8001204:	40020400 	.word	0x40020400
 8001208:	2000033e 	.word	0x2000033e
 800120c:	20000338 	.word	0x20000338

08001210 <Uart_Receive_From_PC_ISR>:

void Uart_Receive_From_PC_ISR(UART_HandleTypeDef *huart)
{
 8001210:	b580      	push	{r7, lr}
 8001212:	b082      	sub	sp, #8
 8001214:	af00      	add	r7, sp, #0
 8001216:	6078      	str	r0, [r7, #4]
	LED_Y_TOGGLE;
 8001218:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800121c:	480b      	ldr	r0, [pc, #44]	; (800124c <Uart_Receive_From_PC_ISR+0x3c>)
 800121e:	f008 f826 	bl	800926e <HAL_GPIO_TogglePin>
	HAL_UART_Receive_IT(huart, (uint8_t*)fromPC, 2);
 8001222:	2202      	movs	r2, #2
 8001224:	490a      	ldr	r1, [pc, #40]	; (8001250 <Uart_Receive_From_PC_ISR+0x40>)
 8001226:	6878      	ldr	r0, [r7, #4]
 8001228:	f00a fe8f 	bl	800bf4a <HAL_UART_Receive_IT>
	TIM2->CCR1 = 4*fromPC[0];
 800122c:	4b08      	ldr	r3, [pc, #32]	; (8001250 <Uart_Receive_From_PC_ISR+0x40>)
 800122e:	781b      	ldrb	r3, [r3, #0]
 8001230:	009a      	lsls	r2, r3, #2
 8001232:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001236:	635a      	str	r2, [r3, #52]	; 0x34
	TIM1->CCR4 = 4*fromPC[1];
 8001238:	4b05      	ldr	r3, [pc, #20]	; (8001250 <Uart_Receive_From_PC_ISR+0x40>)
 800123a:	785b      	ldrb	r3, [r3, #1]
 800123c:	009a      	lsls	r2, r3, #2
 800123e:	4b05      	ldr	r3, [pc, #20]	; (8001254 <Uart_Receive_From_PC_ISR+0x44>)
 8001240:	641a      	str	r2, [r3, #64]	; 0x40
}
 8001242:	bf00      	nop
 8001244:	3708      	adds	r7, #8
 8001246:	46bd      	mov	sp, r7
 8001248:	bd80      	pop	{r7, pc}
 800124a:	bf00      	nop
 800124c:	40020400 	.word	0x40020400
 8001250:	2000033c 	.word	0x2000033c
 8001254:	40010000 	.word	0x40010000

08001258 <B1_ISR>:

void B1_ISR(UART_HandleTypeDef *huart_debugg)
{
 8001258:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 800125c:	b084      	sub	sp, #16
 800125e:	af00      	add	r7, sp, #0
 8001260:	6078      	str	r0, [r7, #4]
		HAL_FLASH_Unlock();
 8001262:	f007 fc85 	bl	8008b70 <HAL_FLASH_Unlock>
		Delay(50);
 8001266:	2032      	movs	r0, #50	; 0x32
 8001268:	f005 fafa 	bl	8006860 <Delay>
		FLASH_Erase_Sector(6, FLASH_VOLTAGE_RANGE_3);
 800126c:	2102      	movs	r1, #2
 800126e:	2006      	movs	r0, #6
 8001270:	f007 fdf0 	bl	8008e54 <FLASH_Erase_Sector>
		Delay(50);
 8001274:	2032      	movs	r0, #50	; 0x32
 8001276:	f005 faf3 	bl	8006860 <Delay>
		HAL_FLASH_Lock();
 800127a:	f007 fc9b 	bl	8008bb4 <HAL_FLASH_Lock>

		int i;
		for(i=0;i<8;i++)
 800127e:	2300      	movs	r3, #0
 8001280:	60fb      	str	r3, [r7, #12]
 8001282:	e00a      	b.n	800129a <B1_ISR+0x42>
		{
			LED_R_TOGGLE;
 8001284:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001288:	4828      	ldr	r0, [pc, #160]	; (800132c <B1_ISR+0xd4>)
 800128a:	f007 fff0 	bl	800926e <HAL_GPIO_TogglePin>
			Delay(150);
 800128e:	2096      	movs	r0, #150	; 0x96
 8001290:	f005 fae6 	bl	8006860 <Delay>
		for(i=0;i<8;i++)
 8001294:	68fb      	ldr	r3, [r7, #12]
 8001296:	3301      	adds	r3, #1
 8001298:	60fb      	str	r3, [r7, #12]
 800129a:	68fb      	ldr	r3, [r7, #12]
 800129c:	2b07      	cmp	r3, #7
 800129e:	ddf1      	ble.n	8001284 <B1_ISR+0x2c>
		}
		LED_R(0);
 80012a0:	2201      	movs	r2, #1
 80012a2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80012a6:	4821      	ldr	r0, [pc, #132]	; (800132c <B1_ISR+0xd4>)
 80012a8:	f007 ffc8 	bl	800923c <HAL_GPIO_WritePin>

		HAL_FLASH_Unlock();
 80012ac:	f007 fc60 	bl	8008b70 <HAL_FLASH_Unlock>
		Delay(50);
 80012b0:	2032      	movs	r0, #50	; 0x32
 80012b2:	f005 fad5 	bl	8006860 <Delay>
		for(i=0;i<22;i++)
 80012b6:	2300      	movs	r3, #0
 80012b8:	60fb      	str	r3, [r7, #12]
 80012ba:	e01a      	b.n	80012f2 <B1_ISR+0x9a>
		{
			HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+i, Nodes[i].worth);
 80012bc:	68fb      	ldr	r3, [r7, #12]
 80012be:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 80012c2:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
 80012c6:	4618      	mov	r0, r3
 80012c8:	4919      	ldr	r1, [pc, #100]	; (8001330 <B1_ISR+0xd8>)
 80012ca:	68fa      	ldr	r2, [r7, #12]
 80012cc:	4613      	mov	r3, r2
 80012ce:	009b      	lsls	r3, r3, #2
 80012d0:	4413      	add	r3, r2
 80012d2:	00db      	lsls	r3, r3, #3
 80012d4:	440b      	add	r3, r1
 80012d6:	3304      	adds	r3, #4
 80012d8:	681b      	ldr	r3, [r3, #0]
 80012da:	17da      	asrs	r2, r3, #31
 80012dc:	4698      	mov	r8, r3
 80012de:	4691      	mov	r9, r2
 80012e0:	4642      	mov	r2, r8
 80012e2:	464b      	mov	r3, r9
 80012e4:	4601      	mov	r1, r0
 80012e6:	2000      	movs	r0, #0
 80012e8:	f007 fbee 	bl	8008ac8 <HAL_FLASH_Program>
		for(i=0;i<22;i++)
 80012ec:	68fb      	ldr	r3, [r7, #12]
 80012ee:	3301      	adds	r3, #1
 80012f0:	60fb      	str	r3, [r7, #12]
 80012f2:	68fb      	ldr	r3, [r7, #12]
 80012f4:	2b15      	cmp	r3, #21
 80012f6:	dde1      	ble.n	80012bc <B1_ISR+0x64>
		}
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+22, collectedPoints);
 80012f8:	4b0e      	ldr	r3, [pc, #56]	; (8001334 <B1_ISR+0xdc>)
 80012fa:	781b      	ldrb	r3, [r3, #0]
 80012fc:	b2db      	uxtb	r3, r3
 80012fe:	2200      	movs	r2, #0
 8001300:	461c      	mov	r4, r3
 8001302:	4615      	mov	r5, r2
 8001304:	4622      	mov	r2, r4
 8001306:	462b      	mov	r3, r5
 8001308:	490b      	ldr	r1, [pc, #44]	; (8001338 <B1_ISR+0xe0>)
 800130a:	2000      	movs	r0, #0
 800130c:	f007 fbdc 	bl	8008ac8 <HAL_FLASH_Program>
		Delay(50);
 8001310:	2032      	movs	r0, #50	; 0x32
 8001312:	f005 faa5 	bl	8006860 <Delay>
		HAL_FLASH_Lock();
 8001316:	f007 fc4d 	bl	8008bb4 <HAL_FLASH_Lock>
		HAL_UART_Transmit(huart_debugg,(uint8_t*) "\n\rBackup save!\n\r", 16, 10);
 800131a:	230a      	movs	r3, #10
 800131c:	2210      	movs	r2, #16
 800131e:	4907      	ldr	r1, [pc, #28]	; (800133c <B1_ISR+0xe4>)
 8001320:	6878      	ldr	r0, [r7, #4]
 8001322:	f00a fcde 	bl	800bce2 <HAL_UART_Transmit>
		NVIC_SystemReset(); //SW reseteljük a mikorvezérlőt
 8001326:	f7ff fe31 	bl	8000f8c <__NVIC_SystemReset>
 800132a:	bf00      	nop
 800132c:	40020400 	.word	0x40020400
 8001330:	20000360 	.word	0x20000360
 8001334:	2000034f 	.word	0x2000034f
 8001338:	08040016 	.word	0x08040016
 800133c:	08011184 	.word	0x08011184

08001340 <B_NUCLEO_ISR>:
}

void B_NUCLEO_ISR(UART_HandleTypeDef *huart_debugg)
{
 8001340:	b580      	push	{r7, lr}
 8001342:	b084      	sub	sp, #16
 8001344:	af00      	add	r7, sp, #0
 8001346:	6078      	str	r0, [r7, #4]
	//Milyen módban voltunk eddig?
	uint8_t tmp= *(__IO uint8_t *) FLASH_ADDRESS_MODESELECTOR;
 8001348:	4b41      	ldr	r3, [pc, #260]	; (8001450 <B_NUCLEO_ISR+0x110>)
 800134a:	781b      	ldrb	r3, [r3, #0]
 800134c:	72fb      	strb	r3, [r7, #11]
	if(tmp==SKILL || tmp==FAST)mode=tmp;
 800134e:	7afb      	ldrb	r3, [r7, #11]
 8001350:	2b52      	cmp	r3, #82	; 0x52
 8001352:	d002      	beq.n	800135a <B_NUCLEO_ISR+0x1a>
 8001354:	7afb      	ldrb	r3, [r7, #11]
 8001356:	2b3f      	cmp	r3, #63	; 0x3f
 8001358:	d103      	bne.n	8001362 <B_NUCLEO_ISR+0x22>
 800135a:	4a3e      	ldr	r2, [pc, #248]	; (8001454 <B_NUCLEO_ISR+0x114>)
 800135c:	7afb      	ldrb	r3, [r7, #11]
 800135e:	7013      	strb	r3, [r2, #0]
 8001360:	e002      	b.n	8001368 <B_NUCLEO_ISR+0x28>
	else mode=SKILL;
 8001362:	4b3c      	ldr	r3, [pc, #240]	; (8001454 <B_NUCLEO_ISR+0x114>)
 8001364:	2252      	movs	r2, #82	; 0x52
 8001366:	701a      	strb	r2, [r3, #0]

	//section 7 törlése, hogy újraírhassuk a módot jelző bytot
	HAL_FLASH_Unlock();
 8001368:	f007 fc02 	bl	8008b70 <HAL_FLASH_Unlock>
	Delay(50);
 800136c:	2032      	movs	r0, #50	; 0x32
 800136e:	f005 fa77 	bl	8006860 <Delay>
	FLASH_Erase_Sector(7, FLASH_VOLTAGE_RANGE_3);
 8001372:	2102      	movs	r1, #2
 8001374:	2007      	movs	r0, #7
 8001376:	f007 fd6d 	bl	8008e54 <FLASH_Erase_Sector>
	Delay(50);
 800137a:	2032      	movs	r0, #50	; 0x32
 800137c:	f005 fa70 	bl	8006860 <Delay>
	HAL_FLASH_Lock();
 8001380:	f007 fc18 	bl	8008bb4 <HAL_FLASH_Lock>

	LED_NUCLEO(0);
 8001384:	2200      	movs	r2, #0
 8001386:	2120      	movs	r1, #32
 8001388:	4833      	ldr	r0, [pc, #204]	; (8001458 <B_NUCLEO_ISR+0x118>)
 800138a:	f007 ff57 	bl	800923c <HAL_GPIO_WritePin>
	LED_Y(0);
 800138e:	2201      	movs	r2, #1
 8001390:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001394:	4831      	ldr	r0, [pc, #196]	; (800145c <B_NUCLEO_ISR+0x11c>)
 8001396:	f007 ff51 	bl	800923c <HAL_GPIO_WritePin>
	LED_G(0);
 800139a:	2201      	movs	r2, #1
 800139c:	2102      	movs	r1, #2
 800139e:	482f      	ldr	r0, [pc, #188]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013a0:	f007 ff4c 	bl	800923c <HAL_GPIO_WritePin>
	LED_B(0);
 80013a4:	2201      	movs	r2, #1
 80013a6:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80013aa:	482c      	ldr	r0, [pc, #176]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013ac:	f007 ff46 	bl	800923c <HAL_GPIO_WritePin>
	LED_R(0);
 80013b0:	2201      	movs	r2, #1
 80013b2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013b6:	4829      	ldr	r0, [pc, #164]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013b8:	f007 ff40 	bl	800923c <HAL_GPIO_WritePin>
	int i;
	for(i=0;i<8;i++)
 80013bc:	2300      	movs	r3, #0
 80013be:	60fb      	str	r3, [r7, #12]
 80013c0:	e01c      	b.n	80013fc <B_NUCLEO_ISR+0xbc>
	{
		LED_NUCLEO_TOGGLE;
 80013c2:	2120      	movs	r1, #32
 80013c4:	4824      	ldr	r0, [pc, #144]	; (8001458 <B_NUCLEO_ISR+0x118>)
 80013c6:	f007 ff52 	bl	800926e <HAL_GPIO_TogglePin>
		LED_Y_TOGGLE;
 80013ca:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80013ce:	4823      	ldr	r0, [pc, #140]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013d0:	f007 ff4d 	bl	800926e <HAL_GPIO_TogglePin>
		LED_G_TOGGLE;
 80013d4:	2102      	movs	r1, #2
 80013d6:	4821      	ldr	r0, [pc, #132]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013d8:	f007 ff49 	bl	800926e <HAL_GPIO_TogglePin>
		LED_B_TOGGLE;
 80013dc:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80013e0:	481e      	ldr	r0, [pc, #120]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013e2:	f007 ff44 	bl	800926e <HAL_GPIO_TogglePin>
		LED_R_TOGGLE;
 80013e6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013ea:	481c      	ldr	r0, [pc, #112]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013ec:	f007 ff3f 	bl	800926e <HAL_GPIO_TogglePin>
		Delay(150);
 80013f0:	2096      	movs	r0, #150	; 0x96
 80013f2:	f005 fa35 	bl	8006860 <Delay>
	for(i=0;i<8;i++)
 80013f6:	68fb      	ldr	r3, [r7, #12]
 80013f8:	3301      	adds	r3, #1
 80013fa:	60fb      	str	r3, [r7, #12]
 80013fc:	68fb      	ldr	r3, [r7, #12]
 80013fe:	2b07      	cmp	r3, #7
 8001400:	dddf      	ble.n	80013c2 <B_NUCLEO_ISR+0x82>
	}

	//Állítsuk át a módot
	HAL_FLASH_Unlock();
 8001402:	f007 fbb5 	bl	8008b70 <HAL_FLASH_Unlock>
	Delay(50);
 8001406:	2032      	movs	r0, #50	; 0x32
 8001408:	f005 fa2a 	bl	8006860 <Delay>
	if(mode==SKILL) HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_MODESELECTOR, FAST); //ha eddig skill mód volt akor msot gyors lesz
 800140c:	4b11      	ldr	r3, [pc, #68]	; (8001454 <B_NUCLEO_ISR+0x114>)
 800140e:	781b      	ldrb	r3, [r3, #0]
 8001410:	2b52      	cmp	r3, #82	; 0x52
 8001412:	d108      	bne.n	8001426 <B_NUCLEO_ISR+0xe6>
 8001414:	f04f 023f 	mov.w	r2, #63	; 0x3f
 8001418:	f04f 0300 	mov.w	r3, #0
 800141c:	490c      	ldr	r1, [pc, #48]	; (8001450 <B_NUCLEO_ISR+0x110>)
 800141e:	2000      	movs	r0, #0
 8001420:	f007 fb52 	bl	8008ac8 <HAL_FLASH_Program>
 8001424:	e007      	b.n	8001436 <B_NUCLEO_ISR+0xf6>
	else HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_MODESELECTOR, SKILL); //ha eddig gyors mód vagy memóriaszemét volt akkor msot skil lesz
 8001426:	f04f 0252 	mov.w	r2, #82	; 0x52
 800142a:	f04f 0300 	mov.w	r3, #0
 800142e:	4908      	ldr	r1, [pc, #32]	; (8001450 <B_NUCLEO_ISR+0x110>)
 8001430:	2000      	movs	r0, #0
 8001432:	f007 fb49 	bl	8008ac8 <HAL_FLASH_Program>
	Delay(50);
 8001436:	2032      	movs	r0, #50	; 0x32
 8001438:	f005 fa12 	bl	8006860 <Delay>
	HAL_FLASH_Lock();
 800143c:	f007 fbba 	bl	8008bb4 <HAL_FLASH_Lock>
	HAL_UART_Transmit(huart_debugg, (uint8_t*)"\n\rMode change!\n\r", 16, 10);
 8001440:	230a      	movs	r3, #10
 8001442:	2210      	movs	r2, #16
 8001444:	4906      	ldr	r1, [pc, #24]	; (8001460 <B_NUCLEO_ISR+0x120>)
 8001446:	6878      	ldr	r0, [r7, #4]
 8001448:	f00a fc4b 	bl	800bce2 <HAL_UART_Transmit>
	NVIC_SystemReset(); //SW reseteljük a mikorvezérlőt
 800144c:	f7ff fd9e 	bl	8000f8c <__NVIC_SystemReset>
 8001450:	08060000 	.word	0x08060000
 8001454:	2000033e 	.word	0x2000033e
 8001458:	40020000 	.word	0x40020000
 800145c:	40020400 	.word	0x40020400
 8001460:	08011198 	.word	0x08011198

08001464 <Create_Nodes>:
uint8_t piratePos[4];

node Nodes[22];

void Create_Nodes(UART_HandleTypeDef *huart_debugg)
{
 8001464:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8001468:	b09c      	sub	sp, #112	; 0x70
 800146a:	af00      	add	r7, sp, #0
 800146c:	6078      	str	r0, [r7, #4]
	int i;
	orientation=FORWARD;
 800146e:	4b0d      	ldr	r3, [pc, #52]	; (80014a4 <Create_Nodes+0x40>)
 8001470:	2200      	movs	r2, #0
 8001472:	701a      	strb	r2, [r3, #0]
	collectedPoints=0;
 8001474:	4b0c      	ldr	r3, [pc, #48]	; (80014a8 <Create_Nodes+0x44>)
 8001476:	2200      	movs	r2, #0
 8001478:	701a      	strb	r2, [r3, #0]
	laneChange=0;
 800147a:	4b0c      	ldr	r3, [pc, #48]	; (80014ac <Create_Nodes+0x48>)
 800147c:	2200      	movs	r2, #0
 800147e:	701a      	strb	r2, [r3, #0]
	path=LEFT;
 8001480:	4b0b      	ldr	r3, [pc, #44]	; (80014b0 <Create_Nodes+0x4c>)
 8001482:	2200      	movs	r2, #0
 8001484:	701a      	strb	r2, [r3, #0]

	//Ct2			//Ct
	nodeDetected=0;
 8001486:	4b0b      	ldr	r3, [pc, #44]	; (80014b4 <Create_Nodes+0x50>)
 8001488:	2200      	movs	r2, #0
 800148a:	701a      	strb	r2, [r3, #0]
	//nodeDetected=1;
	v_control=STOP;
 800148c:	4b0a      	ldr	r3, [pc, #40]	; (80014b8 <Create_Nodes+0x54>)
 800148e:	2200      	movs	r2, #0
 8001490:	701a      	strb	r2, [r3, #0]
	//v_control=NORMAL_VEL;

	if(mode!=SKILL)return;
 8001492:	4b0a      	ldr	r3, [pc, #40]	; (80014bc <Create_Nodes+0x58>)
 8001494:	781b      	ldrb	r3, [r3, #0]
 8001496:	2b52      	cmp	r3, #82	; 0x52
 8001498:	f041 80e2 	bne.w	8002660 <Create_Nodes+0x11fc>

	for(i=0;i<22;i++)
 800149c:	2300      	movs	r3, #0
 800149e:	66fb      	str	r3, [r7, #108]	; 0x6c
 80014a0:	e0e6      	b.n	8001670 <Create_Nodes+0x20c>
 80014a2:	bf00      	nop
 80014a4:	2000034c 	.word	0x2000034c
 80014a8:	2000034f 	.word	0x2000034f
 80014ac:	20000350 	.word	0x20000350
 80014b0:	2000034e 	.word	0x2000034e
 80014b4:	2000034d 	.word	0x2000034d
 80014b8:	20000351 	.word	0x20000351
 80014bc:	2000033e 	.word	0x2000033e
	{
		Nodes[i].id=65+i;
 80014c0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80014c2:	b2db      	uxtb	r3, r3
 80014c4:	3341      	adds	r3, #65	; 0x41
 80014c6:	b2d8      	uxtb	r0, r3
 80014c8:	49c4      	ldr	r1, [pc, #784]	; (80017dc <Create_Nodes+0x378>)
 80014ca:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80014cc:	4613      	mov	r3, r2
 80014ce:	009b      	lsls	r3, r3, #2
 80014d0:	4413      	add	r3, r2
 80014d2:	00db      	lsls	r3, r3, #3
 80014d4:	440b      	add	r3, r1
 80014d6:	4602      	mov	r2, r0
 80014d8:	701a      	strb	r2, [r3, #0]
		Nodes[i].worth=0;
 80014da:	49c0      	ldr	r1, [pc, #768]	; (80017dc <Create_Nodes+0x378>)
 80014dc:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80014de:	4613      	mov	r3, r2
 80014e0:	009b      	lsls	r3, r3, #2
 80014e2:	4413      	add	r3, r2
 80014e4:	00db      	lsls	r3, r3, #3
 80014e6:	440b      	add	r3, r1
 80014e8:	3304      	adds	r3, #4
 80014ea:	2200      	movs	r2, #0
 80014ec:	601a      	str	r2, [r3, #0]
		Nodes[i].type=0;
 80014ee:	49bb      	ldr	r1, [pc, #748]	; (80017dc <Create_Nodes+0x378>)
 80014f0:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80014f2:	4613      	mov	r3, r2
 80014f4:	009b      	lsls	r3, r3, #2
 80014f6:	4413      	add	r3, r2
 80014f8:	00db      	lsls	r3, r3, #3
 80014fa:	440b      	add	r3, r1
 80014fc:	3308      	adds	r3, #8
 80014fe:	2200      	movs	r2, #0
 8001500:	601a      	str	r2, [r3, #0]
		VALUE_2(Nodes[i].neighbours,0,0,0,0,0,0);
 8001502:	49b6      	ldr	r1, [pc, #728]	; (80017dc <Create_Nodes+0x378>)
 8001504:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001506:	4613      	mov	r3, r2
 8001508:	009b      	lsls	r3, r3, #2
 800150a:	4413      	add	r3, r2
 800150c:	00db      	lsls	r3, r3, #3
 800150e:	440b      	add	r3, r1
 8001510:	330c      	adds	r3, #12
 8001512:	2200      	movs	r2, #0
 8001514:	701a      	strb	r2, [r3, #0]
 8001516:	49b1      	ldr	r1, [pc, #708]	; (80017dc <Create_Nodes+0x378>)
 8001518:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800151a:	4613      	mov	r3, r2
 800151c:	009b      	lsls	r3, r3, #2
 800151e:	4413      	add	r3, r2
 8001520:	00db      	lsls	r3, r3, #3
 8001522:	440b      	add	r3, r1
 8001524:	330d      	adds	r3, #13
 8001526:	2200      	movs	r2, #0
 8001528:	701a      	strb	r2, [r3, #0]
 800152a:	49ac      	ldr	r1, [pc, #688]	; (80017dc <Create_Nodes+0x378>)
 800152c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800152e:	4613      	mov	r3, r2
 8001530:	009b      	lsls	r3, r3, #2
 8001532:	4413      	add	r3, r2
 8001534:	00db      	lsls	r3, r3, #3
 8001536:	440b      	add	r3, r1
 8001538:	330e      	adds	r3, #14
 800153a:	2200      	movs	r2, #0
 800153c:	701a      	strb	r2, [r3, #0]
 800153e:	49a7      	ldr	r1, [pc, #668]	; (80017dc <Create_Nodes+0x378>)
 8001540:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001542:	4613      	mov	r3, r2
 8001544:	009b      	lsls	r3, r3, #2
 8001546:	4413      	add	r3, r2
 8001548:	00db      	lsls	r3, r3, #3
 800154a:	440b      	add	r3, r1
 800154c:	330f      	adds	r3, #15
 800154e:	2200      	movs	r2, #0
 8001550:	701a      	strb	r2, [r3, #0]
 8001552:	49a2      	ldr	r1, [pc, #648]	; (80017dc <Create_Nodes+0x378>)
 8001554:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001556:	4613      	mov	r3, r2
 8001558:	009b      	lsls	r3, r3, #2
 800155a:	4413      	add	r3, r2
 800155c:	00db      	lsls	r3, r3, #3
 800155e:	440b      	add	r3, r1
 8001560:	3310      	adds	r3, #16
 8001562:	2200      	movs	r2, #0
 8001564:	701a      	strb	r2, [r3, #0]
 8001566:	499d      	ldr	r1, [pc, #628]	; (80017dc <Create_Nodes+0x378>)
 8001568:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800156a:	4613      	mov	r3, r2
 800156c:	009b      	lsls	r3, r3, #2
 800156e:	4413      	add	r3, r2
 8001570:	00db      	lsls	r3, r3, #3
 8001572:	440b      	add	r3, r1
 8001574:	3311      	adds	r3, #17
 8001576:	2200      	movs	r2, #0
 8001578:	701a      	strb	r2, [r3, #0]
		VALUE_2(Nodes[i].directions,0,0,0,0,0,0);
 800157a:	4998      	ldr	r1, [pc, #608]	; (80017dc <Create_Nodes+0x378>)
 800157c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800157e:	4613      	mov	r3, r2
 8001580:	009b      	lsls	r3, r3, #2
 8001582:	4413      	add	r3, r2
 8001584:	00db      	lsls	r3, r3, #3
 8001586:	440b      	add	r3, r1
 8001588:	3312      	adds	r3, #18
 800158a:	2200      	movs	r2, #0
 800158c:	701a      	strb	r2, [r3, #0]
 800158e:	4993      	ldr	r1, [pc, #588]	; (80017dc <Create_Nodes+0x378>)
 8001590:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001592:	4613      	mov	r3, r2
 8001594:	009b      	lsls	r3, r3, #2
 8001596:	4413      	add	r3, r2
 8001598:	00db      	lsls	r3, r3, #3
 800159a:	440b      	add	r3, r1
 800159c:	3313      	adds	r3, #19
 800159e:	2200      	movs	r2, #0
 80015a0:	701a      	strb	r2, [r3, #0]
 80015a2:	498e      	ldr	r1, [pc, #568]	; (80017dc <Create_Nodes+0x378>)
 80015a4:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015a6:	4613      	mov	r3, r2
 80015a8:	009b      	lsls	r3, r3, #2
 80015aa:	4413      	add	r3, r2
 80015ac:	00db      	lsls	r3, r3, #3
 80015ae:	440b      	add	r3, r1
 80015b0:	3314      	adds	r3, #20
 80015b2:	2200      	movs	r2, #0
 80015b4:	701a      	strb	r2, [r3, #0]
 80015b6:	4989      	ldr	r1, [pc, #548]	; (80017dc <Create_Nodes+0x378>)
 80015b8:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015ba:	4613      	mov	r3, r2
 80015bc:	009b      	lsls	r3, r3, #2
 80015be:	4413      	add	r3, r2
 80015c0:	00db      	lsls	r3, r3, #3
 80015c2:	440b      	add	r3, r1
 80015c4:	3315      	adds	r3, #21
 80015c6:	2200      	movs	r2, #0
 80015c8:	701a      	strb	r2, [r3, #0]
 80015ca:	4984      	ldr	r1, [pc, #528]	; (80017dc <Create_Nodes+0x378>)
 80015cc:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015ce:	4613      	mov	r3, r2
 80015d0:	009b      	lsls	r3, r3, #2
 80015d2:	4413      	add	r3, r2
 80015d4:	00db      	lsls	r3, r3, #3
 80015d6:	440b      	add	r3, r1
 80015d8:	3316      	adds	r3, #22
 80015da:	2200      	movs	r2, #0
 80015dc:	701a      	strb	r2, [r3, #0]
 80015de:	497f      	ldr	r1, [pc, #508]	; (80017dc <Create_Nodes+0x378>)
 80015e0:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015e2:	4613      	mov	r3, r2
 80015e4:	009b      	lsls	r3, r3, #2
 80015e6:	4413      	add	r3, r2
 80015e8:	00db      	lsls	r3, r3, #3
 80015ea:	440b      	add	r3, r1
 80015ec:	3317      	adds	r3, #23
 80015ee:	2200      	movs	r2, #0
 80015f0:	701a      	strb	r2, [r3, #0]
		VALUE_2(Nodes[i].distance,0,0,0,0,0,0);
 80015f2:	497a      	ldr	r1, [pc, #488]	; (80017dc <Create_Nodes+0x378>)
 80015f4:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015f6:	4613      	mov	r3, r2
 80015f8:	009b      	lsls	r3, r3, #2
 80015fa:	4413      	add	r3, r2
 80015fc:	00db      	lsls	r3, r3, #3
 80015fe:	440b      	add	r3, r1
 8001600:	3318      	adds	r3, #24
 8001602:	2200      	movs	r2, #0
 8001604:	801a      	strh	r2, [r3, #0]
 8001606:	4975      	ldr	r1, [pc, #468]	; (80017dc <Create_Nodes+0x378>)
 8001608:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800160a:	4613      	mov	r3, r2
 800160c:	009b      	lsls	r3, r3, #2
 800160e:	4413      	add	r3, r2
 8001610:	00db      	lsls	r3, r3, #3
 8001612:	440b      	add	r3, r1
 8001614:	331a      	adds	r3, #26
 8001616:	2200      	movs	r2, #0
 8001618:	801a      	strh	r2, [r3, #0]
 800161a:	4970      	ldr	r1, [pc, #448]	; (80017dc <Create_Nodes+0x378>)
 800161c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800161e:	4613      	mov	r3, r2
 8001620:	009b      	lsls	r3, r3, #2
 8001622:	4413      	add	r3, r2
 8001624:	00db      	lsls	r3, r3, #3
 8001626:	440b      	add	r3, r1
 8001628:	331c      	adds	r3, #28
 800162a:	2200      	movs	r2, #0
 800162c:	801a      	strh	r2, [r3, #0]
 800162e:	496b      	ldr	r1, [pc, #428]	; (80017dc <Create_Nodes+0x378>)
 8001630:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001632:	4613      	mov	r3, r2
 8001634:	009b      	lsls	r3, r3, #2
 8001636:	4413      	add	r3, r2
 8001638:	00db      	lsls	r3, r3, #3
 800163a:	440b      	add	r3, r1
 800163c:	331e      	adds	r3, #30
 800163e:	2200      	movs	r2, #0
 8001640:	801a      	strh	r2, [r3, #0]
 8001642:	4966      	ldr	r1, [pc, #408]	; (80017dc <Create_Nodes+0x378>)
 8001644:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001646:	4613      	mov	r3, r2
 8001648:	009b      	lsls	r3, r3, #2
 800164a:	4413      	add	r3, r2
 800164c:	00db      	lsls	r3, r3, #3
 800164e:	440b      	add	r3, r1
 8001650:	3320      	adds	r3, #32
 8001652:	2200      	movs	r2, #0
 8001654:	801a      	strh	r2, [r3, #0]
 8001656:	4961      	ldr	r1, [pc, #388]	; (80017dc <Create_Nodes+0x378>)
 8001658:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800165a:	4613      	mov	r3, r2
 800165c:	009b      	lsls	r3, r3, #2
 800165e:	4413      	add	r3, r2
 8001660:	00db      	lsls	r3, r3, #3
 8001662:	440b      	add	r3, r1
 8001664:	3322      	adds	r3, #34	; 0x22
 8001666:	2200      	movs	r2, #0
 8001668:	801a      	strh	r2, [r3, #0]
	for(i=0;i<22;i++)
 800166a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800166c:	3301      	adds	r3, #1
 800166e:	66fb      	str	r3, [r7, #108]	; 0x6c
 8001670:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001672:	2b15      	cmp	r3, #21
 8001674:	f77f af24 	ble.w	80014c0 <Create_Nodes+0x5c>
	}
	//A node
	N('A').worth=2;
 8001678:	4b58      	ldr	r3, [pc, #352]	; (80017dc <Create_Nodes+0x378>)
 800167a:	2202      	movs	r2, #2
 800167c:	605a      	str	r2, [r3, #4]
	N('A').type=1;
 800167e:	4b57      	ldr	r3, [pc, #348]	; (80017dc <Create_Nodes+0x378>)
 8001680:	2201      	movs	r2, #1
 8001682:	609a      	str	r2, [r3, #8]
	VALUE_2(N('A').neighbours,'C',0,0,'B',0,'D');
 8001684:	4b55      	ldr	r3, [pc, #340]	; (80017dc <Create_Nodes+0x378>)
 8001686:	2243      	movs	r2, #67	; 0x43
 8001688:	731a      	strb	r2, [r3, #12]
 800168a:	4b54      	ldr	r3, [pc, #336]	; (80017dc <Create_Nodes+0x378>)
 800168c:	2200      	movs	r2, #0
 800168e:	735a      	strb	r2, [r3, #13]
 8001690:	4b52      	ldr	r3, [pc, #328]	; (80017dc <Create_Nodes+0x378>)
 8001692:	2200      	movs	r2, #0
 8001694:	739a      	strb	r2, [r3, #14]
 8001696:	4b51      	ldr	r3, [pc, #324]	; (80017dc <Create_Nodes+0x378>)
 8001698:	2242      	movs	r2, #66	; 0x42
 800169a:	73da      	strb	r2, [r3, #15]
 800169c:	4b4f      	ldr	r3, [pc, #316]	; (80017dc <Create_Nodes+0x378>)
 800169e:	2200      	movs	r2, #0
 80016a0:	741a      	strb	r2, [r3, #16]
 80016a2:	4b4e      	ldr	r3, [pc, #312]	; (80017dc <Create_Nodes+0x378>)
 80016a4:	2244      	movs	r2, #68	; 0x44
 80016a6:	745a      	strb	r2, [r3, #17]
	VALUE_2(N('A').directions,1,0,0,2,0,1);
 80016a8:	4b4c      	ldr	r3, [pc, #304]	; (80017dc <Create_Nodes+0x378>)
 80016aa:	2201      	movs	r2, #1
 80016ac:	749a      	strb	r2, [r3, #18]
 80016ae:	4b4b      	ldr	r3, [pc, #300]	; (80017dc <Create_Nodes+0x378>)
 80016b0:	2200      	movs	r2, #0
 80016b2:	74da      	strb	r2, [r3, #19]
 80016b4:	4b49      	ldr	r3, [pc, #292]	; (80017dc <Create_Nodes+0x378>)
 80016b6:	2200      	movs	r2, #0
 80016b8:	751a      	strb	r2, [r3, #20]
 80016ba:	4b48      	ldr	r3, [pc, #288]	; (80017dc <Create_Nodes+0x378>)
 80016bc:	2202      	movs	r2, #2
 80016be:	755a      	strb	r2, [r3, #21]
 80016c0:	4b46      	ldr	r3, [pc, #280]	; (80017dc <Create_Nodes+0x378>)
 80016c2:	2200      	movs	r2, #0
 80016c4:	759a      	strb	r2, [r3, #22]
 80016c6:	4b45      	ldr	r3, [pc, #276]	; (80017dc <Create_Nodes+0x378>)
 80016c8:	2201      	movs	r2, #1
 80016ca:	75da      	strb	r2, [r3, #23]
	VALUE_2(N('A').distance,199,0,0,241,0,198);
 80016cc:	4b43      	ldr	r3, [pc, #268]	; (80017dc <Create_Nodes+0x378>)
 80016ce:	22c7      	movs	r2, #199	; 0xc7
 80016d0:	831a      	strh	r2, [r3, #24]
 80016d2:	4b42      	ldr	r3, [pc, #264]	; (80017dc <Create_Nodes+0x378>)
 80016d4:	2200      	movs	r2, #0
 80016d6:	835a      	strh	r2, [r3, #26]
 80016d8:	4b40      	ldr	r3, [pc, #256]	; (80017dc <Create_Nodes+0x378>)
 80016da:	2200      	movs	r2, #0
 80016dc:	839a      	strh	r2, [r3, #28]
 80016de:	4b3f      	ldr	r3, [pc, #252]	; (80017dc <Create_Nodes+0x378>)
 80016e0:	22f1      	movs	r2, #241	; 0xf1
 80016e2:	83da      	strh	r2, [r3, #30]
 80016e4:	4b3d      	ldr	r3, [pc, #244]	; (80017dc <Create_Nodes+0x378>)
 80016e6:	2200      	movs	r2, #0
 80016e8:	841a      	strh	r2, [r3, #32]
 80016ea:	4b3c      	ldr	r3, [pc, #240]	; (80017dc <Create_Nodes+0x378>)
 80016ec:	22c6      	movs	r2, #198	; 0xc6
 80016ee:	845a      	strh	r2, [r3, #34]	; 0x22
	N('A').middle=NEIGHBOUR6;
 80016f0:	4b3a      	ldr	r3, [pc, #232]	; (80017dc <Create_Nodes+0x378>)
 80016f2:	2205      	movs	r2, #5
 80016f4:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24

	//B node
	N('B').worth=2;
 80016f8:	4b38      	ldr	r3, [pc, #224]	; (80017dc <Create_Nodes+0x378>)
 80016fa:	2202      	movs	r2, #2
 80016fc:	62da      	str	r2, [r3, #44]	; 0x2c
	N('B').type=1;
 80016fe:	4b37      	ldr	r3, [pc, #220]	; (80017dc <Create_Nodes+0x378>)
 8001700:	2201      	movs	r2, #1
 8001702:	631a      	str	r2, [r3, #48]	; 0x30
	VALUE_2(N('B').neighbours,'D',0,'A',0,0,'E');
 8001704:	4b35      	ldr	r3, [pc, #212]	; (80017dc <Create_Nodes+0x378>)
 8001706:	2244      	movs	r2, #68	; 0x44
 8001708:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800170c:	4b33      	ldr	r3, [pc, #204]	; (80017dc <Create_Nodes+0x378>)
 800170e:	2200      	movs	r2, #0
 8001710:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001714:	4b31      	ldr	r3, [pc, #196]	; (80017dc <Create_Nodes+0x378>)
 8001716:	2241      	movs	r2, #65	; 0x41
 8001718:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 800171c:	4b2f      	ldr	r3, [pc, #188]	; (80017dc <Create_Nodes+0x378>)
 800171e:	2200      	movs	r2, #0
 8001720:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 8001724:	4b2d      	ldr	r3, [pc, #180]	; (80017dc <Create_Nodes+0x378>)
 8001726:	2200      	movs	r2, #0
 8001728:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800172c:	4b2b      	ldr	r3, [pc, #172]	; (80017dc <Create_Nodes+0x378>)
 800172e:	2245      	movs	r2, #69	; 0x45
 8001730:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
	VALUE_2(N('B').directions,1,0,1,0,0,1);
 8001734:	4b29      	ldr	r3, [pc, #164]	; (80017dc <Create_Nodes+0x378>)
 8001736:	2201      	movs	r2, #1
 8001738:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 800173c:	4b27      	ldr	r3, [pc, #156]	; (80017dc <Create_Nodes+0x378>)
 800173e:	2200      	movs	r2, #0
 8001740:	f883 203b 	strb.w	r2, [r3, #59]	; 0x3b
 8001744:	4b25      	ldr	r3, [pc, #148]	; (80017dc <Create_Nodes+0x378>)
 8001746:	2201      	movs	r2, #1
 8001748:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800174c:	4b23      	ldr	r3, [pc, #140]	; (80017dc <Create_Nodes+0x378>)
 800174e:	2200      	movs	r2, #0
 8001750:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001754:	4b21      	ldr	r3, [pc, #132]	; (80017dc <Create_Nodes+0x378>)
 8001756:	2200      	movs	r2, #0
 8001758:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800175c:	4b1f      	ldr	r3, [pc, #124]	; (80017dc <Create_Nodes+0x378>)
 800175e:	2201      	movs	r2, #1
 8001760:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
	VALUE_2(N('B').distance,199,0,241,0,0,198);
 8001764:	4b1d      	ldr	r3, [pc, #116]	; (80017dc <Create_Nodes+0x378>)
 8001766:	22c7      	movs	r2, #199	; 0xc7
 8001768:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 800176c:	4b1b      	ldr	r3, [pc, #108]	; (80017dc <Create_Nodes+0x378>)
 800176e:	2200      	movs	r2, #0
 8001770:	f8a3 2042 	strh.w	r2, [r3, #66]	; 0x42
 8001774:	4b19      	ldr	r3, [pc, #100]	; (80017dc <Create_Nodes+0x378>)
 8001776:	22f1      	movs	r2, #241	; 0xf1
 8001778:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 800177c:	4b17      	ldr	r3, [pc, #92]	; (80017dc <Create_Nodes+0x378>)
 800177e:	2200      	movs	r2, #0
 8001780:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8001784:	4b15      	ldr	r3, [pc, #84]	; (80017dc <Create_Nodes+0x378>)
 8001786:	2200      	movs	r2, #0
 8001788:	f8a3 2048 	strh.w	r2, [r3, #72]	; 0x48
 800178c:	4b13      	ldr	r3, [pc, #76]	; (80017dc <Create_Nodes+0x378>)
 800178e:	22c6      	movs	r2, #198	; 0xc6
 8001790:	f8a3 204a 	strh.w	r2, [r3, #74]	; 0x4a
	N('B').middle=NEIGHBOUR1;
 8001794:	4b11      	ldr	r3, [pc, #68]	; (80017dc <Create_Nodes+0x378>)
 8001796:	2200      	movs	r2, #0
 8001798:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c

	//C node
	N('C').worth=2;
 800179c:	4b0f      	ldr	r3, [pc, #60]	; (80017dc <Create_Nodes+0x378>)
 800179e:	2202      	movs	r2, #2
 80017a0:	655a      	str	r2, [r3, #84]	; 0x54
	N('C').type=2;
 80017a2:	4b0e      	ldr	r3, [pc, #56]	; (80017dc <Create_Nodes+0x378>)
 80017a4:	2202      	movs	r2, #2
 80017a6:	659a      	str	r2, [r3, #88]	; 0x58
	VALUE_2(N('C').neighbours,'F',0,0,0,0,'A');
 80017a8:	4b0c      	ldr	r3, [pc, #48]	; (80017dc <Create_Nodes+0x378>)
 80017aa:	2246      	movs	r2, #70	; 0x46
 80017ac:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 80017b0:	4b0a      	ldr	r3, [pc, #40]	; (80017dc <Create_Nodes+0x378>)
 80017b2:	2200      	movs	r2, #0
 80017b4:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 80017b8:	4b08      	ldr	r3, [pc, #32]	; (80017dc <Create_Nodes+0x378>)
 80017ba:	2200      	movs	r2, #0
 80017bc:	f883 205e 	strb.w	r2, [r3, #94]	; 0x5e
 80017c0:	4b06      	ldr	r3, [pc, #24]	; (80017dc <Create_Nodes+0x378>)
 80017c2:	2200      	movs	r2, #0
 80017c4:	f883 205f 	strb.w	r2, [r3, #95]	; 0x5f
 80017c8:	4b04      	ldr	r3, [pc, #16]	; (80017dc <Create_Nodes+0x378>)
 80017ca:	2200      	movs	r2, #0
 80017cc:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
 80017d0:	4b02      	ldr	r3, [pc, #8]	; (80017dc <Create_Nodes+0x378>)
 80017d2:	2241      	movs	r2, #65	; 0x41
 80017d4:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
 80017d8:	e002      	b.n	80017e0 <Create_Nodes+0x37c>
 80017da:	bf00      	nop
 80017dc:	20000360 	.word	0x20000360
	VALUE_2(N('C').directions,2,0,0,0,0,2);
 80017e0:	4bc9      	ldr	r3, [pc, #804]	; (8001b08 <Create_Nodes+0x6a4>)
 80017e2:	2202      	movs	r2, #2
 80017e4:	f883 2062 	strb.w	r2, [r3, #98]	; 0x62
 80017e8:	4bc7      	ldr	r3, [pc, #796]	; (8001b08 <Create_Nodes+0x6a4>)
 80017ea:	2200      	movs	r2, #0
 80017ec:	f883 2063 	strb.w	r2, [r3, #99]	; 0x63
 80017f0:	4bc5      	ldr	r3, [pc, #788]	; (8001b08 <Create_Nodes+0x6a4>)
 80017f2:	2200      	movs	r2, #0
 80017f4:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
 80017f8:	4bc3      	ldr	r3, [pc, #780]	; (8001b08 <Create_Nodes+0x6a4>)
 80017fa:	2200      	movs	r2, #0
 80017fc:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
 8001800:	4bc1      	ldr	r3, [pc, #772]	; (8001b08 <Create_Nodes+0x6a4>)
 8001802:	2200      	movs	r2, #0
 8001804:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
 8001808:	4bbf      	ldr	r3, [pc, #764]	; (8001b08 <Create_Nodes+0x6a4>)
 800180a:	2202      	movs	r2, #2
 800180c:	f883 2067 	strb.w	r2, [r3, #103]	; 0x67
	VALUE_2(N('C').distance,198,0,0,0,0,199);
 8001810:	4bbd      	ldr	r3, [pc, #756]	; (8001b08 <Create_Nodes+0x6a4>)
 8001812:	22c6      	movs	r2, #198	; 0xc6
 8001814:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 8001818:	4bbb      	ldr	r3, [pc, #748]	; (8001b08 <Create_Nodes+0x6a4>)
 800181a:	2200      	movs	r2, #0
 800181c:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 8001820:	4bb9      	ldr	r3, [pc, #740]	; (8001b08 <Create_Nodes+0x6a4>)
 8001822:	2200      	movs	r2, #0
 8001824:	f8a3 206c 	strh.w	r2, [r3, #108]	; 0x6c
 8001828:	4bb7      	ldr	r3, [pc, #732]	; (8001b08 <Create_Nodes+0x6a4>)
 800182a:	2200      	movs	r2, #0
 800182c:	f8a3 206e 	strh.w	r2, [r3, #110]	; 0x6e
 8001830:	4bb5      	ldr	r3, [pc, #724]	; (8001b08 <Create_Nodes+0x6a4>)
 8001832:	2200      	movs	r2, #0
 8001834:	f8a3 2070 	strh.w	r2, [r3, #112]	; 0x70
 8001838:	4bb3      	ldr	r3, [pc, #716]	; (8001b08 <Create_Nodes+0x6a4>)
 800183a:	22c7      	movs	r2, #199	; 0xc7
 800183c:	f8a3 2072 	strh.w	r2, [r3, #114]	; 0x72
	N('C').middle=NEIGHBOUR1;
 8001840:	4bb1      	ldr	r3, [pc, #708]	; (8001b08 <Create_Nodes+0x6a4>)
 8001842:	2200      	movs	r2, #0
 8001844:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

	//D node
	N('D').worth=2;
 8001848:	4baf      	ldr	r3, [pc, #700]	; (8001b08 <Create_Nodes+0x6a4>)
 800184a:	2202      	movs	r2, #2
 800184c:	67da      	str	r2, [r3, #124]	; 0x7c
	N('D').type=2;
 800184e:	4bae      	ldr	r3, [pc, #696]	; (8001b08 <Create_Nodes+0x6a4>)
 8001850:	2202      	movs	r2, #2
 8001852:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	VALUE_2(N('D').neighbours,'G','I','F','A',0,'B');
 8001856:	4bac      	ldr	r3, [pc, #688]	; (8001b08 <Create_Nodes+0x6a4>)
 8001858:	2247      	movs	r2, #71	; 0x47
 800185a:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 800185e:	4baa      	ldr	r3, [pc, #680]	; (8001b08 <Create_Nodes+0x6a4>)
 8001860:	2249      	movs	r2, #73	; 0x49
 8001862:	f883 2085 	strb.w	r2, [r3, #133]	; 0x85
 8001866:	4ba8      	ldr	r3, [pc, #672]	; (8001b08 <Create_Nodes+0x6a4>)
 8001868:	2246      	movs	r2, #70	; 0x46
 800186a:	f883 2086 	strb.w	r2, [r3, #134]	; 0x86
 800186e:	4ba6      	ldr	r3, [pc, #664]	; (8001b08 <Create_Nodes+0x6a4>)
 8001870:	2241      	movs	r2, #65	; 0x41
 8001872:	f883 2087 	strb.w	r2, [r3, #135]	; 0x87
 8001876:	4ba4      	ldr	r3, [pc, #656]	; (8001b08 <Create_Nodes+0x6a4>)
 8001878:	2200      	movs	r2, #0
 800187a:	f883 2088 	strb.w	r2, [r3, #136]	; 0x88
 800187e:	4ba2      	ldr	r3, [pc, #648]	; (8001b08 <Create_Nodes+0x6a4>)
 8001880:	2242      	movs	r2, #66	; 0x42
 8001882:	f883 2089 	strb.w	r2, [r3, #137]	; 0x89
	VALUE_2(N('D').directions,2,1,1,1,0,2);
 8001886:	4ba0      	ldr	r3, [pc, #640]	; (8001b08 <Create_Nodes+0x6a4>)
 8001888:	2202      	movs	r2, #2
 800188a:	f883 208a 	strb.w	r2, [r3, #138]	; 0x8a
 800188e:	4b9e      	ldr	r3, [pc, #632]	; (8001b08 <Create_Nodes+0x6a4>)
 8001890:	2201      	movs	r2, #1
 8001892:	f883 208b 	strb.w	r2, [r3, #139]	; 0x8b
 8001896:	4b9c      	ldr	r3, [pc, #624]	; (8001b08 <Create_Nodes+0x6a4>)
 8001898:	2201      	movs	r2, #1
 800189a:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
 800189e:	4b9a      	ldr	r3, [pc, #616]	; (8001b08 <Create_Nodes+0x6a4>)
 80018a0:	2201      	movs	r2, #1
 80018a2:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 80018a6:	4b98      	ldr	r3, [pc, #608]	; (8001b08 <Create_Nodes+0x6a4>)
 80018a8:	2200      	movs	r2, #0
 80018aa:	f883 208e 	strb.w	r2, [r3, #142]	; 0x8e
 80018ae:	4b96      	ldr	r3, [pc, #600]	; (8001b08 <Create_Nodes+0x6a4>)
 80018b0:	2202      	movs	r2, #2
 80018b2:	f883 208f 	strb.w	r2, [r3, #143]	; 0x8f
	VALUE_2(N('D').distance,198,241,197,198,0,199);
 80018b6:	4b94      	ldr	r3, [pc, #592]	; (8001b08 <Create_Nodes+0x6a4>)
 80018b8:	22c6      	movs	r2, #198	; 0xc6
 80018ba:	f8a3 2090 	strh.w	r2, [r3, #144]	; 0x90
 80018be:	4b92      	ldr	r3, [pc, #584]	; (8001b08 <Create_Nodes+0x6a4>)
 80018c0:	22f1      	movs	r2, #241	; 0xf1
 80018c2:	f8a3 2092 	strh.w	r2, [r3, #146]	; 0x92
 80018c6:	4b90      	ldr	r3, [pc, #576]	; (8001b08 <Create_Nodes+0x6a4>)
 80018c8:	22c5      	movs	r2, #197	; 0xc5
 80018ca:	f8a3 2094 	strh.w	r2, [r3, #148]	; 0x94
 80018ce:	4b8e      	ldr	r3, [pc, #568]	; (8001b08 <Create_Nodes+0x6a4>)
 80018d0:	22c6      	movs	r2, #198	; 0xc6
 80018d2:	f8a3 2096 	strh.w	r2, [r3, #150]	; 0x96
 80018d6:	4b8c      	ldr	r3, [pc, #560]	; (8001b08 <Create_Nodes+0x6a4>)
 80018d8:	2200      	movs	r2, #0
 80018da:	f8a3 2098 	strh.w	r2, [r3, #152]	; 0x98
 80018de:	4b8a      	ldr	r3, [pc, #552]	; (8001b08 <Create_Nodes+0x6a4>)
 80018e0:	22c7      	movs	r2, #199	; 0xc7
 80018e2:	f8a3 209a 	strh.w	r2, [r3, #154]	; 0x9a
	N('D').middle=NEIGHBOUR2;
 80018e6:	4b88      	ldr	r3, [pc, #544]	; (8001b08 <Create_Nodes+0x6a4>)
 80018e8:	2201      	movs	r2, #1
 80018ea:	f883 209c 	strb.w	r2, [r3, #156]	; 0x9c

	//E node
	N('E').worth=2;
 80018ee:	4b86      	ldr	r3, [pc, #536]	; (8001b08 <Create_Nodes+0x6a4>)
 80018f0:	2202      	movs	r2, #2
 80018f2:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
	N('E').type=2;
 80018f6:	4b84      	ldr	r3, [pc, #528]	; (8001b08 <Create_Nodes+0x6a4>)
 80018f8:	2202      	movs	r2, #2
 80018fa:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
	VALUE_2(N('E').neighbours,'J',0,'G','B',0,0);
 80018fe:	4b82      	ldr	r3, [pc, #520]	; (8001b08 <Create_Nodes+0x6a4>)
 8001900:	224a      	movs	r2, #74	; 0x4a
 8001902:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 8001906:	4b80      	ldr	r3, [pc, #512]	; (8001b08 <Create_Nodes+0x6a4>)
 8001908:	2200      	movs	r2, #0
 800190a:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 800190e:	4b7e      	ldr	r3, [pc, #504]	; (8001b08 <Create_Nodes+0x6a4>)
 8001910:	2247      	movs	r2, #71	; 0x47
 8001912:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8001916:	4b7c      	ldr	r3, [pc, #496]	; (8001b08 <Create_Nodes+0x6a4>)
 8001918:	2242      	movs	r2, #66	; 0x42
 800191a:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 800191e:	4b7a      	ldr	r3, [pc, #488]	; (8001b08 <Create_Nodes+0x6a4>)
 8001920:	2200      	movs	r2, #0
 8001922:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 8001926:	4b78      	ldr	r3, [pc, #480]	; (8001b08 <Create_Nodes+0x6a4>)
 8001928:	2200      	movs	r2, #0
 800192a:	f883 20b1 	strb.w	r2, [r3, #177]	; 0xb1
	VALUE_2(N('E').directions,1,0,1,1,0,0);
 800192e:	4b76      	ldr	r3, [pc, #472]	; (8001b08 <Create_Nodes+0x6a4>)
 8001930:	2201      	movs	r2, #1
 8001932:	f883 20b2 	strb.w	r2, [r3, #178]	; 0xb2
 8001936:	4b74      	ldr	r3, [pc, #464]	; (8001b08 <Create_Nodes+0x6a4>)
 8001938:	2200      	movs	r2, #0
 800193a:	f883 20b3 	strb.w	r2, [r3, #179]	; 0xb3
 800193e:	4b72      	ldr	r3, [pc, #456]	; (8001b08 <Create_Nodes+0x6a4>)
 8001940:	2201      	movs	r2, #1
 8001942:	f883 20b4 	strb.w	r2, [r3, #180]	; 0xb4
 8001946:	4b70      	ldr	r3, [pc, #448]	; (8001b08 <Create_Nodes+0x6a4>)
 8001948:	2201      	movs	r2, #1
 800194a:	f883 20b5 	strb.w	r2, [r3, #181]	; 0xb5
 800194e:	4b6e      	ldr	r3, [pc, #440]	; (8001b08 <Create_Nodes+0x6a4>)
 8001950:	2200      	movs	r2, #0
 8001952:	f883 20b6 	strb.w	r2, [r3, #182]	; 0xb6
 8001956:	4b6c      	ldr	r3, [pc, #432]	; (8001b08 <Create_Nodes+0x6a4>)
 8001958:	2200      	movs	r2, #0
 800195a:	f883 20b7 	strb.w	r2, [r3, #183]	; 0xb7
	VALUE_2(N('E').distance,241,0,197,198,0,0);
 800195e:	4b6a      	ldr	r3, [pc, #424]	; (8001b08 <Create_Nodes+0x6a4>)
 8001960:	22f1      	movs	r2, #241	; 0xf1
 8001962:	f8a3 20b8 	strh.w	r2, [r3, #184]	; 0xb8
 8001966:	4b68      	ldr	r3, [pc, #416]	; (8001b08 <Create_Nodes+0x6a4>)
 8001968:	2200      	movs	r2, #0
 800196a:	f8a3 20ba 	strh.w	r2, [r3, #186]	; 0xba
 800196e:	4b66      	ldr	r3, [pc, #408]	; (8001b08 <Create_Nodes+0x6a4>)
 8001970:	22c5      	movs	r2, #197	; 0xc5
 8001972:	f8a3 20bc 	strh.w	r2, [r3, #188]	; 0xbc
 8001976:	4b64      	ldr	r3, [pc, #400]	; (8001b08 <Create_Nodes+0x6a4>)
 8001978:	22c6      	movs	r2, #198	; 0xc6
 800197a:	f8a3 20be 	strh.w	r2, [r3, #190]	; 0xbe
 800197e:	4b62      	ldr	r3, [pc, #392]	; (8001b08 <Create_Nodes+0x6a4>)
 8001980:	2200      	movs	r2, #0
 8001982:	f8a3 20c0 	strh.w	r2, [r3, #192]	; 0xc0
 8001986:	4b60      	ldr	r3, [pc, #384]	; (8001b08 <Create_Nodes+0x6a4>)
 8001988:	2200      	movs	r2, #0
 800198a:	f8a3 20c2 	strh.w	r2, [r3, #194]	; 0xc2
	N('E').middle=NEIGHBOUR3;
 800198e:	4b5e      	ldr	r3, [pc, #376]	; (8001b08 <Create_Nodes+0x6a4>)
 8001990:	2202      	movs	r2, #2
 8001992:	f883 20c4 	strb.w	r2, [r3, #196]	; 0xc4

	//F node
	N('F').worth=2;
 8001996:	4b5c      	ldr	r3, [pc, #368]	; (8001b08 <Create_Nodes+0x6a4>)
 8001998:	2202      	movs	r2, #2
 800199a:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
	N('F').type=1;
 800199e:	4b5a      	ldr	r3, [pc, #360]	; (8001b08 <Create_Nodes+0x6a4>)
 80019a0:	2201      	movs	r2, #1
 80019a2:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
	VALUE_2(N('F').neighbours,'H',0,'C','D','G','I');
 80019a6:	4b58      	ldr	r3, [pc, #352]	; (8001b08 <Create_Nodes+0x6a4>)
 80019a8:	2248      	movs	r2, #72	; 0x48
 80019aa:	f883 20d4 	strb.w	r2, [r3, #212]	; 0xd4
 80019ae:	4b56      	ldr	r3, [pc, #344]	; (8001b08 <Create_Nodes+0x6a4>)
 80019b0:	2200      	movs	r2, #0
 80019b2:	f883 20d5 	strb.w	r2, [r3, #213]	; 0xd5
 80019b6:	4b54      	ldr	r3, [pc, #336]	; (8001b08 <Create_Nodes+0x6a4>)
 80019b8:	2243      	movs	r2, #67	; 0x43
 80019ba:	f883 20d6 	strb.w	r2, [r3, #214]	; 0xd6
 80019be:	4b52      	ldr	r3, [pc, #328]	; (8001b08 <Create_Nodes+0x6a4>)
 80019c0:	2244      	movs	r2, #68	; 0x44
 80019c2:	f883 20d7 	strb.w	r2, [r3, #215]	; 0xd7
 80019c6:	4b50      	ldr	r3, [pc, #320]	; (8001b08 <Create_Nodes+0x6a4>)
 80019c8:	2247      	movs	r2, #71	; 0x47
 80019ca:	f883 20d8 	strb.w	r2, [r3, #216]	; 0xd8
 80019ce:	4b4e      	ldr	r3, [pc, #312]	; (8001b08 <Create_Nodes+0x6a4>)
 80019d0:	2249      	movs	r2, #73	; 0x49
 80019d2:	f883 20d9 	strb.w	r2, [r3, #217]	; 0xd9
	VALUE_2(N('F').directions,1,0,2,2,2,1);
 80019d6:	4b4c      	ldr	r3, [pc, #304]	; (8001b08 <Create_Nodes+0x6a4>)
 80019d8:	2201      	movs	r2, #1
 80019da:	f883 20da 	strb.w	r2, [r3, #218]	; 0xda
 80019de:	4b4a      	ldr	r3, [pc, #296]	; (8001b08 <Create_Nodes+0x6a4>)
 80019e0:	2200      	movs	r2, #0
 80019e2:	f883 20db 	strb.w	r2, [r3, #219]	; 0xdb
 80019e6:	4b48      	ldr	r3, [pc, #288]	; (8001b08 <Create_Nodes+0x6a4>)
 80019e8:	2202      	movs	r2, #2
 80019ea:	f883 20dc 	strb.w	r2, [r3, #220]	; 0xdc
 80019ee:	4b46      	ldr	r3, [pc, #280]	; (8001b08 <Create_Nodes+0x6a4>)
 80019f0:	2202      	movs	r2, #2
 80019f2:	f883 20dd 	strb.w	r2, [r3, #221]	; 0xdd
 80019f6:	4b44      	ldr	r3, [pc, #272]	; (8001b08 <Create_Nodes+0x6a4>)
 80019f8:	2202      	movs	r2, #2
 80019fa:	f883 20de 	strb.w	r2, [r3, #222]	; 0xde
 80019fe:	4b42      	ldr	r3, [pc, #264]	; (8001b08 <Create_Nodes+0x6a4>)
 8001a00:	2201      	movs	r2, #1
 8001a02:	f883 20df 	strb.w	r2, [r3, #223]	; 0xdf
	VALUE_2(N('F').distance,200,0,198,197,241,198);
 8001a06:	4b40      	ldr	r3, [pc, #256]	; (8001b08 <Create_Nodes+0x6a4>)
 8001a08:	22c8      	movs	r2, #200	; 0xc8
 8001a0a:	f8a3 20e0 	strh.w	r2, [r3, #224]	; 0xe0
 8001a0e:	4b3e      	ldr	r3, [pc, #248]	; (8001b08 <Create_Nodes+0x6a4>)
 8001a10:	2200      	movs	r2, #0
 8001a12:	f8a3 20e2 	strh.w	r2, [r3, #226]	; 0xe2
 8001a16:	4b3c      	ldr	r3, [pc, #240]	; (8001b08 <Create_Nodes+0x6a4>)
 8001a18:	22c6      	movs	r2, #198	; 0xc6
 8001a1a:	f8a3 20e4 	strh.w	r2, [r3, #228]	; 0xe4
 8001a1e:	4b3a      	ldr	r3, [pc, #232]	; (8001b08 <Create_Nodes+0x6a4>)
 8001a20:	22c5      	movs	r2, #197	; 0xc5
 8001a22:	f8a3 20e6 	strh.w	r2, [r3, #230]	; 0xe6
 8001a26:	4b38      	ldr	r3, [pc, #224]	; (8001b08 <Create_Nodes+0x6a4>)
 8001a28:	22f1      	movs	r2, #241	; 0xf1
 8001a2a:	f8a3 20e8 	strh.w	r2, [r3, #232]	; 0xe8
 8001a2e:	4b36      	ldr	r3, [pc, #216]	; (8001b08 <Create_Nodes+0x6a4>)
 8001a30:	22c6      	movs	r2, #198	; 0xc6
 8001a32:	f8a3 20ea 	strh.w	r2, [r3, #234]	; 0xea
	N('F').middle=NEIGHBOUR6;
 8001a36:	4b34      	ldr	r3, [pc, #208]	; (8001b08 <Create_Nodes+0x6a4>)
 8001a38:	2205      	movs	r2, #5
 8001a3a:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec

	//G node
	N('G').worth=2;
 8001a3e:	4b32      	ldr	r3, [pc, #200]	; (8001b08 <Create_Nodes+0x6a4>)
 8001a40:	2202      	movs	r2, #2
 8001a42:	f8c3 20f4 	str.w	r2, [r3, #244]	; 0xf4
	N('G').type=1;
 8001a46:	4b30      	ldr	r3, [pc, #192]	; (8001b08 <Create_Nodes+0x6a4>)
 8001a48:	2201      	movs	r2, #1
 8001a4a:	f8c3 20f8 	str.w	r2, [r3, #248]	; 0xf8
	VALUE_2(N('G').neighbours,'I','F','D','E',0,'J');
 8001a4e:	4b2e      	ldr	r3, [pc, #184]	; (8001b08 <Create_Nodes+0x6a4>)
 8001a50:	2249      	movs	r2, #73	; 0x49
 8001a52:	f883 20fc 	strb.w	r2, [r3, #252]	; 0xfc
 8001a56:	4b2c      	ldr	r3, [pc, #176]	; (8001b08 <Create_Nodes+0x6a4>)
 8001a58:	2246      	movs	r2, #70	; 0x46
 8001a5a:	f883 20fd 	strb.w	r2, [r3, #253]	; 0xfd
 8001a5e:	4b2a      	ldr	r3, [pc, #168]	; (8001b08 <Create_Nodes+0x6a4>)
 8001a60:	2244      	movs	r2, #68	; 0x44
 8001a62:	f883 20fe 	strb.w	r2, [r3, #254]	; 0xfe
 8001a66:	4b28      	ldr	r3, [pc, #160]	; (8001b08 <Create_Nodes+0x6a4>)
 8001a68:	2245      	movs	r2, #69	; 0x45
 8001a6a:	f883 20ff 	strb.w	r2, [r3, #255]	; 0xff
 8001a6e:	4b26      	ldr	r3, [pc, #152]	; (8001b08 <Create_Nodes+0x6a4>)
 8001a70:	2200      	movs	r2, #0
 8001a72:	f883 2100 	strb.w	r2, [r3, #256]	; 0x100
 8001a76:	4b24      	ldr	r3, [pc, #144]	; (8001b08 <Create_Nodes+0x6a4>)
 8001a78:	224a      	movs	r2, #74	; 0x4a
 8001a7a:	f883 2101 	strb.w	r2, [r3, #257]	; 0x101
	VALUE_2(N('G').directions,1,1,2,2,0,1);
 8001a7e:	4b22      	ldr	r3, [pc, #136]	; (8001b08 <Create_Nodes+0x6a4>)
 8001a80:	2201      	movs	r2, #1
 8001a82:	f883 2102 	strb.w	r2, [r3, #258]	; 0x102
 8001a86:	4b20      	ldr	r3, [pc, #128]	; (8001b08 <Create_Nodes+0x6a4>)
 8001a88:	2201      	movs	r2, #1
 8001a8a:	f883 2103 	strb.w	r2, [r3, #259]	; 0x103
 8001a8e:	4b1e      	ldr	r3, [pc, #120]	; (8001b08 <Create_Nodes+0x6a4>)
 8001a90:	2202      	movs	r2, #2
 8001a92:	f883 2104 	strb.w	r2, [r3, #260]	; 0x104
 8001a96:	4b1c      	ldr	r3, [pc, #112]	; (8001b08 <Create_Nodes+0x6a4>)
 8001a98:	2202      	movs	r2, #2
 8001a9a:	f883 2105 	strb.w	r2, [r3, #261]	; 0x105
 8001a9e:	4b1a      	ldr	r3, [pc, #104]	; (8001b08 <Create_Nodes+0x6a4>)
 8001aa0:	2200      	movs	r2, #0
 8001aa2:	f883 2106 	strb.w	r2, [r3, #262]	; 0x106
 8001aa6:	4b18      	ldr	r3, [pc, #96]	; (8001b08 <Create_Nodes+0x6a4>)
 8001aa8:	2201      	movs	r2, #1
 8001aaa:	f883 2107 	strb.w	r2, [r3, #263]	; 0x107
	VALUE_2(N('G').distance,199,241,197,197,0,198);
 8001aae:	4b16      	ldr	r3, [pc, #88]	; (8001b08 <Create_Nodes+0x6a4>)
 8001ab0:	22c7      	movs	r2, #199	; 0xc7
 8001ab2:	f8a3 2108 	strh.w	r2, [r3, #264]	; 0x108
 8001ab6:	4b14      	ldr	r3, [pc, #80]	; (8001b08 <Create_Nodes+0x6a4>)
 8001ab8:	22f1      	movs	r2, #241	; 0xf1
 8001aba:	f8a3 210a 	strh.w	r2, [r3, #266]	; 0x10a
 8001abe:	4b12      	ldr	r3, [pc, #72]	; (8001b08 <Create_Nodes+0x6a4>)
 8001ac0:	22c5      	movs	r2, #197	; 0xc5
 8001ac2:	f8a3 210c 	strh.w	r2, [r3, #268]	; 0x10c
 8001ac6:	4b10      	ldr	r3, [pc, #64]	; (8001b08 <Create_Nodes+0x6a4>)
 8001ac8:	22c5      	movs	r2, #197	; 0xc5
 8001aca:	f8a3 210e 	strh.w	r2, [r3, #270]	; 0x10e
 8001ace:	4b0e      	ldr	r3, [pc, #56]	; (8001b08 <Create_Nodes+0x6a4>)
 8001ad0:	2200      	movs	r2, #0
 8001ad2:	f8a3 2110 	strh.w	r2, [r3, #272]	; 0x110
 8001ad6:	4b0c      	ldr	r3, [pc, #48]	; (8001b08 <Create_Nodes+0x6a4>)
 8001ad8:	22c6      	movs	r2, #198	; 0xc6
 8001ada:	f8a3 2112 	strh.w	r2, [r3, #274]	; 0x112
	N('G').middle=NEIGHBOUR1;
 8001ade:	4b0a      	ldr	r3, [pc, #40]	; (8001b08 <Create_Nodes+0x6a4>)
 8001ae0:	2200      	movs	r2, #0
 8001ae2:	f883 2114 	strb.w	r2, [r3, #276]	; 0x114

	//H node
	N('H').worth=2;
 8001ae6:	4b08      	ldr	r3, [pc, #32]	; (8001b08 <Create_Nodes+0x6a4>)
 8001ae8:	2202      	movs	r2, #2
 8001aea:	f8c3 211c 	str.w	r2, [r3, #284]	; 0x11c
	N('H').type=2;
 8001aee:	4b06      	ldr	r3, [pc, #24]	; (8001b08 <Create_Nodes+0x6a4>)
 8001af0:	2202      	movs	r2, #2
 8001af2:	f8c3 2120 	str.w	r2, [r3, #288]	; 0x120
	VALUE_2(N('H').neighbours,'K',0,'M',0,0,'F');
 8001af6:	4b04      	ldr	r3, [pc, #16]	; (8001b08 <Create_Nodes+0x6a4>)
 8001af8:	224b      	movs	r2, #75	; 0x4b
 8001afa:	f883 2124 	strb.w	r2, [r3, #292]	; 0x124
 8001afe:	4b02      	ldr	r3, [pc, #8]	; (8001b08 <Create_Nodes+0x6a4>)
 8001b00:	2200      	movs	r2, #0
 8001b02:	f883 2125 	strb.w	r2, [r3, #293]	; 0x125
 8001b06:	e001      	b.n	8001b0c <Create_Nodes+0x6a8>
 8001b08:	20000360 	.word	0x20000360
 8001b0c:	4bca      	ldr	r3, [pc, #808]	; (8001e38 <Create_Nodes+0x9d4>)
 8001b0e:	224d      	movs	r2, #77	; 0x4d
 8001b10:	f883 2126 	strb.w	r2, [r3, #294]	; 0x126
 8001b14:	4bc8      	ldr	r3, [pc, #800]	; (8001e38 <Create_Nodes+0x9d4>)
 8001b16:	2200      	movs	r2, #0
 8001b18:	f883 2127 	strb.w	r2, [r3, #295]	; 0x127
 8001b1c:	4bc6      	ldr	r3, [pc, #792]	; (8001e38 <Create_Nodes+0x9d4>)
 8001b1e:	2200      	movs	r2, #0
 8001b20:	f883 2128 	strb.w	r2, [r3, #296]	; 0x128
 8001b24:	4bc4      	ldr	r3, [pc, #784]	; (8001e38 <Create_Nodes+0x9d4>)
 8001b26:	2246      	movs	r2, #70	; 0x46
 8001b28:	f883 2129 	strb.w	r2, [r3, #297]	; 0x129
	VALUE_2(N('H').directions,2,0,1,0,0,2);
 8001b2c:	4bc2      	ldr	r3, [pc, #776]	; (8001e38 <Create_Nodes+0x9d4>)
 8001b2e:	2202      	movs	r2, #2
 8001b30:	f883 212a 	strb.w	r2, [r3, #298]	; 0x12a
 8001b34:	4bc0      	ldr	r3, [pc, #768]	; (8001e38 <Create_Nodes+0x9d4>)
 8001b36:	2200      	movs	r2, #0
 8001b38:	f883 212b 	strb.w	r2, [r3, #299]	; 0x12b
 8001b3c:	4bbe      	ldr	r3, [pc, #760]	; (8001e38 <Create_Nodes+0x9d4>)
 8001b3e:	2201      	movs	r2, #1
 8001b40:	f883 212c 	strb.w	r2, [r3, #300]	; 0x12c
 8001b44:	4bbc      	ldr	r3, [pc, #752]	; (8001e38 <Create_Nodes+0x9d4>)
 8001b46:	2200      	movs	r2, #0
 8001b48:	f883 212d 	strb.w	r2, [r3, #301]	; 0x12d
 8001b4c:	4bba      	ldr	r3, [pc, #744]	; (8001e38 <Create_Nodes+0x9d4>)
 8001b4e:	2200      	movs	r2, #0
 8001b50:	f883 212e 	strb.w	r2, [r3, #302]	; 0x12e
 8001b54:	4bb8      	ldr	r3, [pc, #736]	; (8001e38 <Create_Nodes+0x9d4>)
 8001b56:	2202      	movs	r2, #2
 8001b58:	f883 212f 	strb.w	r2, [r3, #303]	; 0x12f
	VALUE_2(N('H').distance,198,0,241,0,0,200);
 8001b5c:	4bb6      	ldr	r3, [pc, #728]	; (8001e38 <Create_Nodes+0x9d4>)
 8001b5e:	22c6      	movs	r2, #198	; 0xc6
 8001b60:	f8a3 2130 	strh.w	r2, [r3, #304]	; 0x130
 8001b64:	4bb4      	ldr	r3, [pc, #720]	; (8001e38 <Create_Nodes+0x9d4>)
 8001b66:	2200      	movs	r2, #0
 8001b68:	f8a3 2132 	strh.w	r2, [r3, #306]	; 0x132
 8001b6c:	4bb2      	ldr	r3, [pc, #712]	; (8001e38 <Create_Nodes+0x9d4>)
 8001b6e:	22f1      	movs	r2, #241	; 0xf1
 8001b70:	f8a3 2134 	strh.w	r2, [r3, #308]	; 0x134
 8001b74:	4bb0      	ldr	r3, [pc, #704]	; (8001e38 <Create_Nodes+0x9d4>)
 8001b76:	2200      	movs	r2, #0
 8001b78:	f8a3 2136 	strh.w	r2, [r3, #310]	; 0x136
 8001b7c:	4bae      	ldr	r3, [pc, #696]	; (8001e38 <Create_Nodes+0x9d4>)
 8001b7e:	2200      	movs	r2, #0
 8001b80:	f8a3 2138 	strh.w	r2, [r3, #312]	; 0x138
 8001b84:	4bac      	ldr	r3, [pc, #688]	; (8001e38 <Create_Nodes+0x9d4>)
 8001b86:	22c8      	movs	r2, #200	; 0xc8
 8001b88:	f8a3 213a 	strh.w	r2, [r3, #314]	; 0x13a
	N('H').middle=NEIGHBOUR1;
 8001b8c:	4baa      	ldr	r3, [pc, #680]	; (8001e38 <Create_Nodes+0x9d4>)
 8001b8e:	2200      	movs	r2, #0
 8001b90:	f883 213c 	strb.w	r2, [r3, #316]	; 0x13c

	//I node
	N('I').worth=2;
 8001b94:	4ba8      	ldr	r3, [pc, #672]	; (8001e38 <Create_Nodes+0x9d4>)
 8001b96:	2202      	movs	r2, #2
 8001b98:	f8c3 2144 	str.w	r2, [r3, #324]	; 0x144
	N('I').type=2;
 8001b9c:	4ba6      	ldr	r3, [pc, #664]	; (8001e38 <Create_Nodes+0x9d4>)
 8001b9e:	2202      	movs	r2, #2
 8001ba0:	f8c3 2148 	str.w	r2, [r3, #328]	; 0x148
	VALUE_2(N('I').neighbours,'L','N','K','F','D','G');
 8001ba4:	4ba4      	ldr	r3, [pc, #656]	; (8001e38 <Create_Nodes+0x9d4>)
 8001ba6:	224c      	movs	r2, #76	; 0x4c
 8001ba8:	f883 214c 	strb.w	r2, [r3, #332]	; 0x14c
 8001bac:	4ba2      	ldr	r3, [pc, #648]	; (8001e38 <Create_Nodes+0x9d4>)
 8001bae:	224e      	movs	r2, #78	; 0x4e
 8001bb0:	f883 214d 	strb.w	r2, [r3, #333]	; 0x14d
 8001bb4:	4ba0      	ldr	r3, [pc, #640]	; (8001e38 <Create_Nodes+0x9d4>)
 8001bb6:	224b      	movs	r2, #75	; 0x4b
 8001bb8:	f883 214e 	strb.w	r2, [r3, #334]	; 0x14e
 8001bbc:	4b9e      	ldr	r3, [pc, #632]	; (8001e38 <Create_Nodes+0x9d4>)
 8001bbe:	2246      	movs	r2, #70	; 0x46
 8001bc0:	f883 214f 	strb.w	r2, [r3, #335]	; 0x14f
 8001bc4:	4b9c      	ldr	r3, [pc, #624]	; (8001e38 <Create_Nodes+0x9d4>)
 8001bc6:	2244      	movs	r2, #68	; 0x44
 8001bc8:	f883 2150 	strb.w	r2, [r3, #336]	; 0x150
 8001bcc:	4b9a      	ldr	r3, [pc, #616]	; (8001e38 <Create_Nodes+0x9d4>)
 8001bce:	2247      	movs	r2, #71	; 0x47
 8001bd0:	f883 2151 	strb.w	r2, [r3, #337]	; 0x151
	VALUE_2(N('I').directions,2,1,1,1,2,2);
 8001bd4:	4b98      	ldr	r3, [pc, #608]	; (8001e38 <Create_Nodes+0x9d4>)
 8001bd6:	2202      	movs	r2, #2
 8001bd8:	f883 2152 	strb.w	r2, [r3, #338]	; 0x152
 8001bdc:	4b96      	ldr	r3, [pc, #600]	; (8001e38 <Create_Nodes+0x9d4>)
 8001bde:	2201      	movs	r2, #1
 8001be0:	f883 2153 	strb.w	r2, [r3, #339]	; 0x153
 8001be4:	4b94      	ldr	r3, [pc, #592]	; (8001e38 <Create_Nodes+0x9d4>)
 8001be6:	2201      	movs	r2, #1
 8001be8:	f883 2154 	strb.w	r2, [r3, #340]	; 0x154
 8001bec:	4b92      	ldr	r3, [pc, #584]	; (8001e38 <Create_Nodes+0x9d4>)
 8001bee:	2201      	movs	r2, #1
 8001bf0:	f883 2155 	strb.w	r2, [r3, #341]	; 0x155
 8001bf4:	4b90      	ldr	r3, [pc, #576]	; (8001e38 <Create_Nodes+0x9d4>)
 8001bf6:	2202      	movs	r2, #2
 8001bf8:	f883 2156 	strb.w	r2, [r3, #342]	; 0x156
 8001bfc:	4b8e      	ldr	r3, [pc, #568]	; (8001e38 <Create_Nodes+0x9d4>)
 8001bfe:	2202      	movs	r2, #2
 8001c00:	f883 2157 	strb.w	r2, [r3, #343]	; 0x157
	VALUE_2(N('I').distance,198,241,197,198,241,199);
 8001c04:	4b8c      	ldr	r3, [pc, #560]	; (8001e38 <Create_Nodes+0x9d4>)
 8001c06:	22c6      	movs	r2, #198	; 0xc6
 8001c08:	f8a3 2158 	strh.w	r2, [r3, #344]	; 0x158
 8001c0c:	4b8a      	ldr	r3, [pc, #552]	; (8001e38 <Create_Nodes+0x9d4>)
 8001c0e:	22f1      	movs	r2, #241	; 0xf1
 8001c10:	f8a3 215a 	strh.w	r2, [r3, #346]	; 0x15a
 8001c14:	4b88      	ldr	r3, [pc, #544]	; (8001e38 <Create_Nodes+0x9d4>)
 8001c16:	22c5      	movs	r2, #197	; 0xc5
 8001c18:	f8a3 215c 	strh.w	r2, [r3, #348]	; 0x15c
 8001c1c:	4b86      	ldr	r3, [pc, #536]	; (8001e38 <Create_Nodes+0x9d4>)
 8001c1e:	22c6      	movs	r2, #198	; 0xc6
 8001c20:	f8a3 215e 	strh.w	r2, [r3, #350]	; 0x15e
 8001c24:	4b84      	ldr	r3, [pc, #528]	; (8001e38 <Create_Nodes+0x9d4>)
 8001c26:	22f1      	movs	r2, #241	; 0xf1
 8001c28:	f8a3 2160 	strh.w	r2, [r3, #352]	; 0x160
 8001c2c:	4b82      	ldr	r3, [pc, #520]	; (8001e38 <Create_Nodes+0x9d4>)
 8001c2e:	22c7      	movs	r2, #199	; 0xc7
 8001c30:	f8a3 2162 	strh.w	r2, [r3, #354]	; 0x162
	N('I').middle=NEIGHBOUR6;
 8001c34:	4b80      	ldr	r3, [pc, #512]	; (8001e38 <Create_Nodes+0x9d4>)
 8001c36:	2205      	movs	r2, #5
 8001c38:	f883 2164 	strb.w	r2, [r3, #356]	; 0x164

	//J node
	N('J').worth=2;
 8001c3c:	4b7e      	ldr	r3, [pc, #504]	; (8001e38 <Create_Nodes+0x9d4>)
 8001c3e:	2202      	movs	r2, #2
 8001c40:	f8c3 216c 	str.w	r2, [r3, #364]	; 0x16c
	N('J').type=2;
 8001c44:	4b7c      	ldr	r3, [pc, #496]	; (8001e38 <Create_Nodes+0x9d4>)
 8001c46:	2202      	movs	r2, #2
 8001c48:	f8c3 2170 	str.w	r2, [r3, #368]	; 0x170
	VALUE_2(N('J').neighbours,0,0,'L','G',0,'E');
 8001c4c:	4b7a      	ldr	r3, [pc, #488]	; (8001e38 <Create_Nodes+0x9d4>)
 8001c4e:	2200      	movs	r2, #0
 8001c50:	f883 2174 	strb.w	r2, [r3, #372]	; 0x174
 8001c54:	4b78      	ldr	r3, [pc, #480]	; (8001e38 <Create_Nodes+0x9d4>)
 8001c56:	2200      	movs	r2, #0
 8001c58:	f883 2175 	strb.w	r2, [r3, #373]	; 0x175
 8001c5c:	4b76      	ldr	r3, [pc, #472]	; (8001e38 <Create_Nodes+0x9d4>)
 8001c5e:	224c      	movs	r2, #76	; 0x4c
 8001c60:	f883 2176 	strb.w	r2, [r3, #374]	; 0x176
 8001c64:	4b74      	ldr	r3, [pc, #464]	; (8001e38 <Create_Nodes+0x9d4>)
 8001c66:	2247      	movs	r2, #71	; 0x47
 8001c68:	f883 2177 	strb.w	r2, [r3, #375]	; 0x177
 8001c6c:	4b72      	ldr	r3, [pc, #456]	; (8001e38 <Create_Nodes+0x9d4>)
 8001c6e:	2200      	movs	r2, #0
 8001c70:	f883 2178 	strb.w	r2, [r3, #376]	; 0x178
 8001c74:	4b70      	ldr	r3, [pc, #448]	; (8001e38 <Create_Nodes+0x9d4>)
 8001c76:	2245      	movs	r2, #69	; 0x45
 8001c78:	f883 2179 	strb.w	r2, [r3, #377]	; 0x179
	VALUE_2(N('J').directions,0,0,1,1,0,2);
 8001c7c:	4b6e      	ldr	r3, [pc, #440]	; (8001e38 <Create_Nodes+0x9d4>)
 8001c7e:	2200      	movs	r2, #0
 8001c80:	f883 217a 	strb.w	r2, [r3, #378]	; 0x17a
 8001c84:	4b6c      	ldr	r3, [pc, #432]	; (8001e38 <Create_Nodes+0x9d4>)
 8001c86:	2200      	movs	r2, #0
 8001c88:	f883 217b 	strb.w	r2, [r3, #379]	; 0x17b
 8001c8c:	4b6a      	ldr	r3, [pc, #424]	; (8001e38 <Create_Nodes+0x9d4>)
 8001c8e:	2201      	movs	r2, #1
 8001c90:	f883 217c 	strb.w	r2, [r3, #380]	; 0x17c
 8001c94:	4b68      	ldr	r3, [pc, #416]	; (8001e38 <Create_Nodes+0x9d4>)
 8001c96:	2201      	movs	r2, #1
 8001c98:	f883 217d 	strb.w	r2, [r3, #381]	; 0x17d
 8001c9c:	4b66      	ldr	r3, [pc, #408]	; (8001e38 <Create_Nodes+0x9d4>)
 8001c9e:	2200      	movs	r2, #0
 8001ca0:	f883 217e 	strb.w	r2, [r3, #382]	; 0x17e
 8001ca4:	4b64      	ldr	r3, [pc, #400]	; (8001e38 <Create_Nodes+0x9d4>)
 8001ca6:	2202      	movs	r2, #2
 8001ca8:	f883 217f 	strb.w	r2, [r3, #383]	; 0x17f
	VALUE_2(N('J').distance,0,0,197,198,0,241);
 8001cac:	4b62      	ldr	r3, [pc, #392]	; (8001e38 <Create_Nodes+0x9d4>)
 8001cae:	2200      	movs	r2, #0
 8001cb0:	f8a3 2180 	strh.w	r2, [r3, #384]	; 0x180
 8001cb4:	4b60      	ldr	r3, [pc, #384]	; (8001e38 <Create_Nodes+0x9d4>)
 8001cb6:	2200      	movs	r2, #0
 8001cb8:	f8a3 2182 	strh.w	r2, [r3, #386]	; 0x182
 8001cbc:	4b5e      	ldr	r3, [pc, #376]	; (8001e38 <Create_Nodes+0x9d4>)
 8001cbe:	22c5      	movs	r2, #197	; 0xc5
 8001cc0:	f8a3 2184 	strh.w	r2, [r3, #388]	; 0x184
 8001cc4:	4b5c      	ldr	r3, [pc, #368]	; (8001e38 <Create_Nodes+0x9d4>)
 8001cc6:	22c6      	movs	r2, #198	; 0xc6
 8001cc8:	f8a3 2186 	strh.w	r2, [r3, #390]	; 0x186
 8001ccc:	4b5a      	ldr	r3, [pc, #360]	; (8001e38 <Create_Nodes+0x9d4>)
 8001cce:	2200      	movs	r2, #0
 8001cd0:	f8a3 2188 	strh.w	r2, [r3, #392]	; 0x188
 8001cd4:	4b58      	ldr	r3, [pc, #352]	; (8001e38 <Create_Nodes+0x9d4>)
 8001cd6:	22f1      	movs	r2, #241	; 0xf1
 8001cd8:	f8a3 218a 	strh.w	r2, [r3, #394]	; 0x18a
	N('J').middle=NEIGHBOUR4;
 8001cdc:	4b56      	ldr	r3, [pc, #344]	; (8001e38 <Create_Nodes+0x9d4>)
 8001cde:	2203      	movs	r2, #3
 8001ce0:	f883 218c 	strb.w	r2, [r3, #396]	; 0x18c

	//K node
	N('K').worth=2;
 8001ce4:	4b54      	ldr	r3, [pc, #336]	; (8001e38 <Create_Nodes+0x9d4>)
 8001ce6:	2202      	movs	r2, #2
 8001ce8:	f8c3 2194 	str.w	r2, [r3, #404]	; 0x194
	N('K').type=1;
 8001cec:	4b52      	ldr	r3, [pc, #328]	; (8001e38 <Create_Nodes+0x9d4>)
 8001cee:	2201      	movs	r2, #1
 8001cf0:	f8c3 2198 	str.w	r2, [r3, #408]	; 0x198
	VALUE_2(N('K').neighbours,'M',0,'H','I','L','N');
 8001cf4:	4b50      	ldr	r3, [pc, #320]	; (8001e38 <Create_Nodes+0x9d4>)
 8001cf6:	224d      	movs	r2, #77	; 0x4d
 8001cf8:	f883 219c 	strb.w	r2, [r3, #412]	; 0x19c
 8001cfc:	4b4e      	ldr	r3, [pc, #312]	; (8001e38 <Create_Nodes+0x9d4>)
 8001cfe:	2200      	movs	r2, #0
 8001d00:	f883 219d 	strb.w	r2, [r3, #413]	; 0x19d
 8001d04:	4b4c      	ldr	r3, [pc, #304]	; (8001e38 <Create_Nodes+0x9d4>)
 8001d06:	2248      	movs	r2, #72	; 0x48
 8001d08:	f883 219e 	strb.w	r2, [r3, #414]	; 0x19e
 8001d0c:	4b4a      	ldr	r3, [pc, #296]	; (8001e38 <Create_Nodes+0x9d4>)
 8001d0e:	2249      	movs	r2, #73	; 0x49
 8001d10:	f883 219f 	strb.w	r2, [r3, #415]	; 0x19f
 8001d14:	4b48      	ldr	r3, [pc, #288]	; (8001e38 <Create_Nodes+0x9d4>)
 8001d16:	224c      	movs	r2, #76	; 0x4c
 8001d18:	f883 21a0 	strb.w	r2, [r3, #416]	; 0x1a0
 8001d1c:	4b46      	ldr	r3, [pc, #280]	; (8001e38 <Create_Nodes+0x9d4>)
 8001d1e:	224e      	movs	r2, #78	; 0x4e
 8001d20:	f883 21a1 	strb.w	r2, [r3, #417]	; 0x1a1
	VALUE_2(N('K').directions,1,0,2,2,2,1);
 8001d24:	4b44      	ldr	r3, [pc, #272]	; (8001e38 <Create_Nodes+0x9d4>)
 8001d26:	2201      	movs	r2, #1
 8001d28:	f883 21a2 	strb.w	r2, [r3, #418]	; 0x1a2
 8001d2c:	4b42      	ldr	r3, [pc, #264]	; (8001e38 <Create_Nodes+0x9d4>)
 8001d2e:	2200      	movs	r2, #0
 8001d30:	f883 21a3 	strb.w	r2, [r3, #419]	; 0x1a3
 8001d34:	4b40      	ldr	r3, [pc, #256]	; (8001e38 <Create_Nodes+0x9d4>)
 8001d36:	2202      	movs	r2, #2
 8001d38:	f883 21a4 	strb.w	r2, [r3, #420]	; 0x1a4
 8001d3c:	4b3e      	ldr	r3, [pc, #248]	; (8001e38 <Create_Nodes+0x9d4>)
 8001d3e:	2202      	movs	r2, #2
 8001d40:	f883 21a5 	strb.w	r2, [r3, #421]	; 0x1a5
 8001d44:	4b3c      	ldr	r3, [pc, #240]	; (8001e38 <Create_Nodes+0x9d4>)
 8001d46:	2202      	movs	r2, #2
 8001d48:	f883 21a6 	strb.w	r2, [r3, #422]	; 0x1a6
 8001d4c:	4b3a      	ldr	r3, [pc, #232]	; (8001e38 <Create_Nodes+0x9d4>)
 8001d4e:	2201      	movs	r2, #1
 8001d50:	f883 21a7 	strb.w	r2, [r3, #423]	; 0x1a7
	VALUE_2(N('K').distance,200,0,198,197,241,198);
 8001d54:	4b38      	ldr	r3, [pc, #224]	; (8001e38 <Create_Nodes+0x9d4>)
 8001d56:	22c8      	movs	r2, #200	; 0xc8
 8001d58:	f8a3 21a8 	strh.w	r2, [r3, #424]	; 0x1a8
 8001d5c:	4b36      	ldr	r3, [pc, #216]	; (8001e38 <Create_Nodes+0x9d4>)
 8001d5e:	2200      	movs	r2, #0
 8001d60:	f8a3 21aa 	strh.w	r2, [r3, #426]	; 0x1aa
 8001d64:	4b34      	ldr	r3, [pc, #208]	; (8001e38 <Create_Nodes+0x9d4>)
 8001d66:	22c6      	movs	r2, #198	; 0xc6
 8001d68:	f8a3 21ac 	strh.w	r2, [r3, #428]	; 0x1ac
 8001d6c:	4b32      	ldr	r3, [pc, #200]	; (8001e38 <Create_Nodes+0x9d4>)
 8001d6e:	22c5      	movs	r2, #197	; 0xc5
 8001d70:	f8a3 21ae 	strh.w	r2, [r3, #430]	; 0x1ae
 8001d74:	4b30      	ldr	r3, [pc, #192]	; (8001e38 <Create_Nodes+0x9d4>)
 8001d76:	22f1      	movs	r2, #241	; 0xf1
 8001d78:	f8a3 21b0 	strh.w	r2, [r3, #432]	; 0x1b0
 8001d7c:	4b2e      	ldr	r3, [pc, #184]	; (8001e38 <Create_Nodes+0x9d4>)
 8001d7e:	22c6      	movs	r2, #198	; 0xc6
 8001d80:	f8a3 21b2 	strh.w	r2, [r3, #434]	; 0x1b2
	N('K').middle=NEIGHBOUR4;
 8001d84:	4b2c      	ldr	r3, [pc, #176]	; (8001e38 <Create_Nodes+0x9d4>)
 8001d86:	2203      	movs	r2, #3
 8001d88:	f883 21b4 	strb.w	r2, [r3, #436]	; 0x1b4

	//L node
	N('L').worth=2;
 8001d8c:	4b2a      	ldr	r3, [pc, #168]	; (8001e38 <Create_Nodes+0x9d4>)
 8001d8e:	2202      	movs	r2, #2
 8001d90:	f8c3 21bc 	str.w	r2, [r3, #444]	; 0x1bc
	N('L').type=2;
 8001d94:	4b28      	ldr	r3, [pc, #160]	; (8001e38 <Create_Nodes+0x9d4>)
 8001d96:	2202      	movs	r2, #2
 8001d98:	f8c3 21c0 	str.w	r2, [r3, #448]	; 0x1c0
	VALUE_2(N('L').neighbours,'N','K','I','J',0,'O');
 8001d9c:	4b26      	ldr	r3, [pc, #152]	; (8001e38 <Create_Nodes+0x9d4>)
 8001d9e:	224e      	movs	r2, #78	; 0x4e
 8001da0:	f883 21c4 	strb.w	r2, [r3, #452]	; 0x1c4
 8001da4:	4b24      	ldr	r3, [pc, #144]	; (8001e38 <Create_Nodes+0x9d4>)
 8001da6:	224b      	movs	r2, #75	; 0x4b
 8001da8:	f883 21c5 	strb.w	r2, [r3, #453]	; 0x1c5
 8001dac:	4b22      	ldr	r3, [pc, #136]	; (8001e38 <Create_Nodes+0x9d4>)
 8001dae:	2249      	movs	r2, #73	; 0x49
 8001db0:	f883 21c6 	strb.w	r2, [r3, #454]	; 0x1c6
 8001db4:	4b20      	ldr	r3, [pc, #128]	; (8001e38 <Create_Nodes+0x9d4>)
 8001db6:	224a      	movs	r2, #74	; 0x4a
 8001db8:	f883 21c7 	strb.w	r2, [r3, #455]	; 0x1c7
 8001dbc:	4b1e      	ldr	r3, [pc, #120]	; (8001e38 <Create_Nodes+0x9d4>)
 8001dbe:	2200      	movs	r2, #0
 8001dc0:	f883 21c8 	strb.w	r2, [r3, #456]	; 0x1c8
 8001dc4:	4b1c      	ldr	r3, [pc, #112]	; (8001e38 <Create_Nodes+0x9d4>)
 8001dc6:	224f      	movs	r2, #79	; 0x4f
 8001dc8:	f883 21c9 	strb.w	r2, [r3, #457]	; 0x1c9
	VALUE_2(N('L').directions,1,1,2,2,0,1);
 8001dcc:	4b1a      	ldr	r3, [pc, #104]	; (8001e38 <Create_Nodes+0x9d4>)
 8001dce:	2201      	movs	r2, #1
 8001dd0:	f883 21ca 	strb.w	r2, [r3, #458]	; 0x1ca
 8001dd4:	4b18      	ldr	r3, [pc, #96]	; (8001e38 <Create_Nodes+0x9d4>)
 8001dd6:	2201      	movs	r2, #1
 8001dd8:	f883 21cb 	strb.w	r2, [r3, #459]	; 0x1cb
 8001ddc:	4b16      	ldr	r3, [pc, #88]	; (8001e38 <Create_Nodes+0x9d4>)
 8001dde:	2202      	movs	r2, #2
 8001de0:	f883 21cc 	strb.w	r2, [r3, #460]	; 0x1cc
 8001de4:	4b14      	ldr	r3, [pc, #80]	; (8001e38 <Create_Nodes+0x9d4>)
 8001de6:	2202      	movs	r2, #2
 8001de8:	f883 21cd 	strb.w	r2, [r3, #461]	; 0x1cd
 8001dec:	4b12      	ldr	r3, [pc, #72]	; (8001e38 <Create_Nodes+0x9d4>)
 8001dee:	2200      	movs	r2, #0
 8001df0:	f883 21ce 	strb.w	r2, [r3, #462]	; 0x1ce
 8001df4:	4b10      	ldr	r3, [pc, #64]	; (8001e38 <Create_Nodes+0x9d4>)
 8001df6:	2201      	movs	r2, #1
 8001df8:	f883 21cf 	strb.w	r2, [r3, #463]	; 0x1cf
	VALUE_2(N('L').distance,199,241,198,197,0,198);
 8001dfc:	4b0e      	ldr	r3, [pc, #56]	; (8001e38 <Create_Nodes+0x9d4>)
 8001dfe:	22c7      	movs	r2, #199	; 0xc7
 8001e00:	f8a3 21d0 	strh.w	r2, [r3, #464]	; 0x1d0
 8001e04:	4b0c      	ldr	r3, [pc, #48]	; (8001e38 <Create_Nodes+0x9d4>)
 8001e06:	22f1      	movs	r2, #241	; 0xf1
 8001e08:	f8a3 21d2 	strh.w	r2, [r3, #466]	; 0x1d2
 8001e0c:	4b0a      	ldr	r3, [pc, #40]	; (8001e38 <Create_Nodes+0x9d4>)
 8001e0e:	22c6      	movs	r2, #198	; 0xc6
 8001e10:	f8a3 21d4 	strh.w	r2, [r3, #468]	; 0x1d4
 8001e14:	4b08      	ldr	r3, [pc, #32]	; (8001e38 <Create_Nodes+0x9d4>)
 8001e16:	22c5      	movs	r2, #197	; 0xc5
 8001e18:	f8a3 21d6 	strh.w	r2, [r3, #470]	; 0x1d6
 8001e1c:	4b06      	ldr	r3, [pc, #24]	; (8001e38 <Create_Nodes+0x9d4>)
 8001e1e:	2200      	movs	r2, #0
 8001e20:	f8a3 21d8 	strh.w	r2, [r3, #472]	; 0x1d8
 8001e24:	4b04      	ldr	r3, [pc, #16]	; (8001e38 <Create_Nodes+0x9d4>)
 8001e26:	22c6      	movs	r2, #198	; 0xc6
 8001e28:	f8a3 21da 	strh.w	r2, [r3, #474]	; 0x1da
	N('L').middle=NEIGHBOUR3;
 8001e2c:	4b02      	ldr	r3, [pc, #8]	; (8001e38 <Create_Nodes+0x9d4>)
 8001e2e:	2202      	movs	r2, #2
 8001e30:	f883 21dc 	strb.w	r2, [r3, #476]	; 0x1dc
 8001e34:	e002      	b.n	8001e3c <Create_Nodes+0x9d8>
 8001e36:	bf00      	nop
 8001e38:	20000360 	.word	0x20000360

	//M node
	N('M').worth=2;
 8001e3c:	4bcb      	ldr	r3, [pc, #812]	; (800216c <Create_Nodes+0xd08>)
 8001e3e:	2202      	movs	r2, #2
 8001e40:	f8c3 21e4 	str.w	r2, [r3, #484]	; 0x1e4
	N('M').type=2;
 8001e44:	4bc9      	ldr	r3, [pc, #804]	; (800216c <Create_Nodes+0xd08>)
 8001e46:	2202      	movs	r2, #2
 8001e48:	f8c3 21e8 	str.w	r2, [r3, #488]	; 0x1e8
	VALUE_2(N('M').neighbours,'P','U',0,'H',0,'K');
 8001e4c:	4bc7      	ldr	r3, [pc, #796]	; (800216c <Create_Nodes+0xd08>)
 8001e4e:	2250      	movs	r2, #80	; 0x50
 8001e50:	f883 21ec 	strb.w	r2, [r3, #492]	; 0x1ec
 8001e54:	4bc5      	ldr	r3, [pc, #788]	; (800216c <Create_Nodes+0xd08>)
 8001e56:	2255      	movs	r2, #85	; 0x55
 8001e58:	f883 21ed 	strb.w	r2, [r3, #493]	; 0x1ed
 8001e5c:	4bc3      	ldr	r3, [pc, #780]	; (800216c <Create_Nodes+0xd08>)
 8001e5e:	2200      	movs	r2, #0
 8001e60:	f883 21ee 	strb.w	r2, [r3, #494]	; 0x1ee
 8001e64:	4bc1      	ldr	r3, [pc, #772]	; (800216c <Create_Nodes+0xd08>)
 8001e66:	2248      	movs	r2, #72	; 0x48
 8001e68:	f883 21ef 	strb.w	r2, [r3, #495]	; 0x1ef
 8001e6c:	4bbf      	ldr	r3, [pc, #764]	; (800216c <Create_Nodes+0xd08>)
 8001e6e:	2200      	movs	r2, #0
 8001e70:	f883 21f0 	strb.w	r2, [r3, #496]	; 0x1f0
 8001e74:	4bbd      	ldr	r3, [pc, #756]	; (800216c <Create_Nodes+0xd08>)
 8001e76:	224b      	movs	r2, #75	; 0x4b
 8001e78:	f883 21f1 	strb.w	r2, [r3, #497]	; 0x1f1
	VALUE_2(N('M').directions,2,2,0,2,0,2);
 8001e7c:	4bbb      	ldr	r3, [pc, #748]	; (800216c <Create_Nodes+0xd08>)
 8001e7e:	2202      	movs	r2, #2
 8001e80:	f883 21f2 	strb.w	r2, [r3, #498]	; 0x1f2
 8001e84:	4bb9      	ldr	r3, [pc, #740]	; (800216c <Create_Nodes+0xd08>)
 8001e86:	2202      	movs	r2, #2
 8001e88:	f883 21f3 	strb.w	r2, [r3, #499]	; 0x1f3
 8001e8c:	4bb7      	ldr	r3, [pc, #732]	; (800216c <Create_Nodes+0xd08>)
 8001e8e:	2200      	movs	r2, #0
 8001e90:	f883 21f4 	strb.w	r2, [r3, #500]	; 0x1f4
 8001e94:	4bb5      	ldr	r3, [pc, #724]	; (800216c <Create_Nodes+0xd08>)
 8001e96:	2202      	movs	r2, #2
 8001e98:	f883 21f5 	strb.w	r2, [r3, #501]	; 0x1f5
 8001e9c:	4bb3      	ldr	r3, [pc, #716]	; (800216c <Create_Nodes+0xd08>)
 8001e9e:	2200      	movs	r2, #0
 8001ea0:	f883 21f6 	strb.w	r2, [r3, #502]	; 0x1f6
 8001ea4:	4bb1      	ldr	r3, [pc, #708]	; (800216c <Create_Nodes+0xd08>)
 8001ea6:	2202      	movs	r2, #2
 8001ea8:	f883 21f7 	strb.w	r2, [r3, #503]	; 0x1f7
	VALUE_2(N('M').distance,198,319-25,0,241,0,200);
 8001eac:	4baf      	ldr	r3, [pc, #700]	; (800216c <Create_Nodes+0xd08>)
 8001eae:	22c6      	movs	r2, #198	; 0xc6
 8001eb0:	f8a3 21f8 	strh.w	r2, [r3, #504]	; 0x1f8
 8001eb4:	4bad      	ldr	r3, [pc, #692]	; (800216c <Create_Nodes+0xd08>)
 8001eb6:	f44f 7293 	mov.w	r2, #294	; 0x126
 8001eba:	f8a3 21fa 	strh.w	r2, [r3, #506]	; 0x1fa
 8001ebe:	4bab      	ldr	r3, [pc, #684]	; (800216c <Create_Nodes+0xd08>)
 8001ec0:	2200      	movs	r2, #0
 8001ec2:	f8a3 21fc 	strh.w	r2, [r3, #508]	; 0x1fc
 8001ec6:	4ba9      	ldr	r3, [pc, #676]	; (800216c <Create_Nodes+0xd08>)
 8001ec8:	22f1      	movs	r2, #241	; 0xf1
 8001eca:	f8a3 21fe 	strh.w	r2, [r3, #510]	; 0x1fe
 8001ece:	4ba7      	ldr	r3, [pc, #668]	; (800216c <Create_Nodes+0xd08>)
 8001ed0:	2200      	movs	r2, #0
 8001ed2:	f8a3 2200 	strh.w	r2, [r3, #512]	; 0x200
 8001ed6:	4ba5      	ldr	r3, [pc, #660]	; (800216c <Create_Nodes+0xd08>)
 8001ed8:	22c8      	movs	r2, #200	; 0xc8
 8001eda:	f8a3 2202 	strh.w	r2, [r3, #514]	; 0x202
	N('M').middle=NEIGHBOUR6;
 8001ede:	4ba3      	ldr	r3, [pc, #652]	; (800216c <Create_Nodes+0xd08>)
 8001ee0:	2205      	movs	r2, #5
 8001ee2:	f883 2204 	strb.w	r2, [r3, #516]	; 0x204

	//N node
	N('N').worth=2;
 8001ee6:	4ba1      	ldr	r3, [pc, #644]	; (800216c <Create_Nodes+0xd08>)
 8001ee8:	2202      	movs	r2, #2
 8001eea:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
	N('N').type=2;
 8001eee:	4b9f      	ldr	r3, [pc, #636]	; (800216c <Create_Nodes+0xd08>)
 8001ef0:	2202      	movs	r2, #2
 8001ef2:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210
	VALUE_2(N('N').neighbours,'Q','T','P','K','I','L');
 8001ef6:	4b9d      	ldr	r3, [pc, #628]	; (800216c <Create_Nodes+0xd08>)
 8001ef8:	2251      	movs	r2, #81	; 0x51
 8001efa:	f883 2214 	strb.w	r2, [r3, #532]	; 0x214
 8001efe:	4b9b      	ldr	r3, [pc, #620]	; (800216c <Create_Nodes+0xd08>)
 8001f00:	2254      	movs	r2, #84	; 0x54
 8001f02:	f883 2215 	strb.w	r2, [r3, #533]	; 0x215
 8001f06:	4b99      	ldr	r3, [pc, #612]	; (800216c <Create_Nodes+0xd08>)
 8001f08:	2250      	movs	r2, #80	; 0x50
 8001f0a:	f883 2216 	strb.w	r2, [r3, #534]	; 0x216
 8001f0e:	4b97      	ldr	r3, [pc, #604]	; (800216c <Create_Nodes+0xd08>)
 8001f10:	224b      	movs	r2, #75	; 0x4b
 8001f12:	f883 2217 	strb.w	r2, [r3, #535]	; 0x217
 8001f16:	4b95      	ldr	r3, [pc, #596]	; (800216c <Create_Nodes+0xd08>)
 8001f18:	2249      	movs	r2, #73	; 0x49
 8001f1a:	f883 2218 	strb.w	r2, [r3, #536]	; 0x218
 8001f1e:	4b93      	ldr	r3, [pc, #588]	; (800216c <Create_Nodes+0xd08>)
 8001f20:	224c      	movs	r2, #76	; 0x4c
 8001f22:	f883 2219 	strb.w	r2, [r3, #537]	; 0x219
	VALUE_2(N('N').directions,2,1,1,1,2,2);
 8001f26:	4b91      	ldr	r3, [pc, #580]	; (800216c <Create_Nodes+0xd08>)
 8001f28:	2202      	movs	r2, #2
 8001f2a:	f883 221a 	strb.w	r2, [r3, #538]	; 0x21a
 8001f2e:	4b8f      	ldr	r3, [pc, #572]	; (800216c <Create_Nodes+0xd08>)
 8001f30:	2201      	movs	r2, #1
 8001f32:	f883 221b 	strb.w	r2, [r3, #539]	; 0x21b
 8001f36:	4b8d      	ldr	r3, [pc, #564]	; (800216c <Create_Nodes+0xd08>)
 8001f38:	2201      	movs	r2, #1
 8001f3a:	f883 221c 	strb.w	r2, [r3, #540]	; 0x21c
 8001f3e:	4b8b      	ldr	r3, [pc, #556]	; (800216c <Create_Nodes+0xd08>)
 8001f40:	2201      	movs	r2, #1
 8001f42:	f883 221d 	strb.w	r2, [r3, #541]	; 0x21d
 8001f46:	4b89      	ldr	r3, [pc, #548]	; (800216c <Create_Nodes+0xd08>)
 8001f48:	2202      	movs	r2, #2
 8001f4a:	f883 221e 	strb.w	r2, [r3, #542]	; 0x21e
 8001f4e:	4b87      	ldr	r3, [pc, #540]	; (800216c <Create_Nodes+0xd08>)
 8001f50:	2202      	movs	r2, #2
 8001f52:	f883 221f 	strb.w	r2, [r3, #543]	; 0x21f
	VALUE_2(N('N').distance,198,120-25,197,198,241,199);
 8001f56:	4b85      	ldr	r3, [pc, #532]	; (800216c <Create_Nodes+0xd08>)
 8001f58:	22c6      	movs	r2, #198	; 0xc6
 8001f5a:	f8a3 2220 	strh.w	r2, [r3, #544]	; 0x220
 8001f5e:	4b83      	ldr	r3, [pc, #524]	; (800216c <Create_Nodes+0xd08>)
 8001f60:	225f      	movs	r2, #95	; 0x5f
 8001f62:	f8a3 2222 	strh.w	r2, [r3, #546]	; 0x222
 8001f66:	4b81      	ldr	r3, [pc, #516]	; (800216c <Create_Nodes+0xd08>)
 8001f68:	22c5      	movs	r2, #197	; 0xc5
 8001f6a:	f8a3 2224 	strh.w	r2, [r3, #548]	; 0x224
 8001f6e:	4b7f      	ldr	r3, [pc, #508]	; (800216c <Create_Nodes+0xd08>)
 8001f70:	22c6      	movs	r2, #198	; 0xc6
 8001f72:	f8a3 2226 	strh.w	r2, [r3, #550]	; 0x226
 8001f76:	4b7d      	ldr	r3, [pc, #500]	; (800216c <Create_Nodes+0xd08>)
 8001f78:	22f1      	movs	r2, #241	; 0xf1
 8001f7a:	f8a3 2228 	strh.w	r2, [r3, #552]	; 0x228
 8001f7e:	4b7b      	ldr	r3, [pc, #492]	; (800216c <Create_Nodes+0xd08>)
 8001f80:	22c7      	movs	r2, #199	; 0xc7
 8001f82:	f8a3 222a 	strh.w	r2, [r3, #554]	; 0x22a
	N('N').middle=NEIGHBOUR4;
 8001f86:	4b79      	ldr	r3, [pc, #484]	; (800216c <Create_Nodes+0xd08>)
 8001f88:	2203      	movs	r2, #3
 8001f8a:	f883 222c 	strb.w	r2, [r3, #556]	; 0x22c

	//O node
	N('O').worth=2;
 8001f8e:	4b77      	ldr	r3, [pc, #476]	; (800216c <Create_Nodes+0xd08>)
 8001f90:	2202      	movs	r2, #2
 8001f92:	f8c3 2234 	str.w	r2, [r3, #564]	; 0x234
	N('O').type=2;
 8001f96:	4b75      	ldr	r3, [pc, #468]	; (800216c <Create_Nodes+0xd08>)
 8001f98:	2202      	movs	r2, #2
 8001f9a:	f8c3 2238 	str.w	r2, [r3, #568]	; 0x238
	VALUE_2(N('O').neighbours,0,'V','Q','L',0,0);
 8001f9e:	4b73      	ldr	r3, [pc, #460]	; (800216c <Create_Nodes+0xd08>)
 8001fa0:	2200      	movs	r2, #0
 8001fa2:	f883 223c 	strb.w	r2, [r3, #572]	; 0x23c
 8001fa6:	4b71      	ldr	r3, [pc, #452]	; (800216c <Create_Nodes+0xd08>)
 8001fa8:	2256      	movs	r2, #86	; 0x56
 8001faa:	f883 223d 	strb.w	r2, [r3, #573]	; 0x23d
 8001fae:	4b6f      	ldr	r3, [pc, #444]	; (800216c <Create_Nodes+0xd08>)
 8001fb0:	2251      	movs	r2, #81	; 0x51
 8001fb2:	f883 223e 	strb.w	r2, [r3, #574]	; 0x23e
 8001fb6:	4b6d      	ldr	r3, [pc, #436]	; (800216c <Create_Nodes+0xd08>)
 8001fb8:	224c      	movs	r2, #76	; 0x4c
 8001fba:	f883 223f 	strb.w	r2, [r3, #575]	; 0x23f
 8001fbe:	4b6b      	ldr	r3, [pc, #428]	; (800216c <Create_Nodes+0xd08>)
 8001fc0:	2200      	movs	r2, #0
 8001fc2:	f883 2240 	strb.w	r2, [r3, #576]	; 0x240
 8001fc6:	4b69      	ldr	r3, [pc, #420]	; (800216c <Create_Nodes+0xd08>)
 8001fc8:	2200      	movs	r2, #0
 8001fca:	f883 2241 	strb.w	r2, [r3, #577]	; 0x241
	VALUE_2(N('O').directions,0,1,1,1,0,0);
 8001fce:	4b67      	ldr	r3, [pc, #412]	; (800216c <Create_Nodes+0xd08>)
 8001fd0:	2200      	movs	r2, #0
 8001fd2:	f883 2242 	strb.w	r2, [r3, #578]	; 0x242
 8001fd6:	4b65      	ldr	r3, [pc, #404]	; (800216c <Create_Nodes+0xd08>)
 8001fd8:	2201      	movs	r2, #1
 8001fda:	f883 2243 	strb.w	r2, [r3, #579]	; 0x243
 8001fde:	4b63      	ldr	r3, [pc, #396]	; (800216c <Create_Nodes+0xd08>)
 8001fe0:	2201      	movs	r2, #1
 8001fe2:	f883 2244 	strb.w	r2, [r3, #580]	; 0x244
 8001fe6:	4b61      	ldr	r3, [pc, #388]	; (800216c <Create_Nodes+0xd08>)
 8001fe8:	2201      	movs	r2, #1
 8001fea:	f883 2245 	strb.w	r2, [r3, #581]	; 0x245
 8001fee:	4b5f      	ldr	r3, [pc, #380]	; (800216c <Create_Nodes+0xd08>)
 8001ff0:	2200      	movs	r2, #0
 8001ff2:	f883 2246 	strb.w	r2, [r3, #582]	; 0x246
 8001ff6:	4b5d      	ldr	r3, [pc, #372]	; (800216c <Create_Nodes+0xd08>)
 8001ff8:	2200      	movs	r2, #0
 8001ffa:	f883 2247 	strb.w	r2, [r3, #583]	; 0x247
	VALUE_2(N('O').distance,0,318-25,197,198,0,0);
 8001ffe:	4b5b      	ldr	r3, [pc, #364]	; (800216c <Create_Nodes+0xd08>)
 8002000:	2200      	movs	r2, #0
 8002002:	f8a3 2248 	strh.w	r2, [r3, #584]	; 0x248
 8002006:	4b59      	ldr	r3, [pc, #356]	; (800216c <Create_Nodes+0xd08>)
 8002008:	f240 1225 	movw	r2, #293	; 0x125
 800200c:	f8a3 224a 	strh.w	r2, [r3, #586]	; 0x24a
 8002010:	4b56      	ldr	r3, [pc, #344]	; (800216c <Create_Nodes+0xd08>)
 8002012:	22c5      	movs	r2, #197	; 0xc5
 8002014:	f8a3 224c 	strh.w	r2, [r3, #588]	; 0x24c
 8002018:	4b54      	ldr	r3, [pc, #336]	; (800216c <Create_Nodes+0xd08>)
 800201a:	22c6      	movs	r2, #198	; 0xc6
 800201c:	f8a3 224e 	strh.w	r2, [r3, #590]	; 0x24e
 8002020:	4b52      	ldr	r3, [pc, #328]	; (800216c <Create_Nodes+0xd08>)
 8002022:	2200      	movs	r2, #0
 8002024:	f8a3 2250 	strh.w	r2, [r3, #592]	; 0x250
 8002028:	4b50      	ldr	r3, [pc, #320]	; (800216c <Create_Nodes+0xd08>)
 800202a:	2200      	movs	r2, #0
 800202c:	f8a3 2252 	strh.w	r2, [r3, #594]	; 0x252
	N('O').middle=NEIGHBOUR3;
 8002030:	4b4e      	ldr	r3, [pc, #312]	; (800216c <Create_Nodes+0xd08>)
 8002032:	2202      	movs	r2, #2
 8002034:	f883 2254 	strb.w	r2, [r3, #596]	; 0x254

	//P node
	N('P').worth=2;
 8002038:	4b4c      	ldr	r3, [pc, #304]	; (800216c <Create_Nodes+0xd08>)
 800203a:	2202      	movs	r2, #2
 800203c:	f8c3 225c 	str.w	r2, [r3, #604]	; 0x25c
	N('P').type=1;
 8002040:	4b4a      	ldr	r3, [pc, #296]	; (800216c <Create_Nodes+0xd08>)
 8002042:	2201      	movs	r2, #1
 8002044:	f8c3 2260 	str.w	r2, [r3, #608]	; 0x260
	VALUE_2(N('P').neighbours,0,0,'M','N',0,'Q');
 8002048:	4b48      	ldr	r3, [pc, #288]	; (800216c <Create_Nodes+0xd08>)
 800204a:	2200      	movs	r2, #0
 800204c:	f883 2264 	strb.w	r2, [r3, #612]	; 0x264
 8002050:	4b46      	ldr	r3, [pc, #280]	; (800216c <Create_Nodes+0xd08>)
 8002052:	2200      	movs	r2, #0
 8002054:	f883 2265 	strb.w	r2, [r3, #613]	; 0x265
 8002058:	4b44      	ldr	r3, [pc, #272]	; (800216c <Create_Nodes+0xd08>)
 800205a:	224d      	movs	r2, #77	; 0x4d
 800205c:	f883 2266 	strb.w	r2, [r3, #614]	; 0x266
 8002060:	4b42      	ldr	r3, [pc, #264]	; (800216c <Create_Nodes+0xd08>)
 8002062:	224e      	movs	r2, #78	; 0x4e
 8002064:	f883 2267 	strb.w	r2, [r3, #615]	; 0x267
 8002068:	4b40      	ldr	r3, [pc, #256]	; (800216c <Create_Nodes+0xd08>)
 800206a:	2200      	movs	r2, #0
 800206c:	f883 2268 	strb.w	r2, [r3, #616]	; 0x268
 8002070:	4b3e      	ldr	r3, [pc, #248]	; (800216c <Create_Nodes+0xd08>)
 8002072:	2251      	movs	r2, #81	; 0x51
 8002074:	f883 2269 	strb.w	r2, [r3, #617]	; 0x269
	VALUE_2(N('P').directions,0,0,2,2,0,2);
 8002078:	4b3c      	ldr	r3, [pc, #240]	; (800216c <Create_Nodes+0xd08>)
 800207a:	2200      	movs	r2, #0
 800207c:	f883 226a 	strb.w	r2, [r3, #618]	; 0x26a
 8002080:	4b3a      	ldr	r3, [pc, #232]	; (800216c <Create_Nodes+0xd08>)
 8002082:	2200      	movs	r2, #0
 8002084:	f883 226b 	strb.w	r2, [r3, #619]	; 0x26b
 8002088:	4b38      	ldr	r3, [pc, #224]	; (800216c <Create_Nodes+0xd08>)
 800208a:	2202      	movs	r2, #2
 800208c:	f883 226c 	strb.w	r2, [r3, #620]	; 0x26c
 8002090:	4b36      	ldr	r3, [pc, #216]	; (800216c <Create_Nodes+0xd08>)
 8002092:	2202      	movs	r2, #2
 8002094:	f883 226d 	strb.w	r2, [r3, #621]	; 0x26d
 8002098:	4b34      	ldr	r3, [pc, #208]	; (800216c <Create_Nodes+0xd08>)
 800209a:	2200      	movs	r2, #0
 800209c:	f883 226e 	strb.w	r2, [r3, #622]	; 0x26e
 80020a0:	4b32      	ldr	r3, [pc, #200]	; (800216c <Create_Nodes+0xd08>)
 80020a2:	2202      	movs	r2, #2
 80020a4:	f883 226f 	strb.w	r2, [r3, #623]	; 0x26f
	VALUE_2(N('P').distance,0,0,198,197,0,241);
 80020a8:	4b30      	ldr	r3, [pc, #192]	; (800216c <Create_Nodes+0xd08>)
 80020aa:	2200      	movs	r2, #0
 80020ac:	f8a3 2270 	strh.w	r2, [r3, #624]	; 0x270
 80020b0:	4b2e      	ldr	r3, [pc, #184]	; (800216c <Create_Nodes+0xd08>)
 80020b2:	2200      	movs	r2, #0
 80020b4:	f8a3 2272 	strh.w	r2, [r3, #626]	; 0x272
 80020b8:	4b2c      	ldr	r3, [pc, #176]	; (800216c <Create_Nodes+0xd08>)
 80020ba:	22c6      	movs	r2, #198	; 0xc6
 80020bc:	f8a3 2274 	strh.w	r2, [r3, #628]	; 0x274
 80020c0:	4b2a      	ldr	r3, [pc, #168]	; (800216c <Create_Nodes+0xd08>)
 80020c2:	22c5      	movs	r2, #197	; 0xc5
 80020c4:	f8a3 2276 	strh.w	r2, [r3, #630]	; 0x276
 80020c8:	4b28      	ldr	r3, [pc, #160]	; (800216c <Create_Nodes+0xd08>)
 80020ca:	2200      	movs	r2, #0
 80020cc:	f8a3 2278 	strh.w	r2, [r3, #632]	; 0x278
 80020d0:	4b26      	ldr	r3, [pc, #152]	; (800216c <Create_Nodes+0xd08>)
 80020d2:	22f1      	movs	r2, #241	; 0xf1
 80020d4:	f8a3 227a 	strh.w	r2, [r3, #634]	; 0x27a
	N('P').middle=NEIGHBOUR4;
 80020d8:	4b24      	ldr	r3, [pc, #144]	; (800216c <Create_Nodes+0xd08>)
 80020da:	2203      	movs	r2, #3
 80020dc:	f883 227c 	strb.w	r2, [r3, #636]	; 0x27c

	//Q node
	N('Q').worth=2;
 80020e0:	4b22      	ldr	r3, [pc, #136]	; (800216c <Create_Nodes+0xd08>)
 80020e2:	2202      	movs	r2, #2
 80020e4:	f8c3 2284 	str.w	r2, [r3, #644]	; 0x284
	N('Q').type=1;
 80020e8:	4b20      	ldr	r3, [pc, #128]	; (800216c <Create_Nodes+0xd08>)
 80020ea:	2201      	movs	r2, #1
 80020ec:	f8c3 2288 	str.w	r2, [r3, #648]	; 0x288
	VALUE_2(N('Q').neighbours,'P',0,'N','O',0,0);
 80020f0:	4b1e      	ldr	r3, [pc, #120]	; (800216c <Create_Nodes+0xd08>)
 80020f2:	2250      	movs	r2, #80	; 0x50
 80020f4:	f883 228c 	strb.w	r2, [r3, #652]	; 0x28c
 80020f8:	4b1c      	ldr	r3, [pc, #112]	; (800216c <Create_Nodes+0xd08>)
 80020fa:	2200      	movs	r2, #0
 80020fc:	f883 228d 	strb.w	r2, [r3, #653]	; 0x28d
 8002100:	4b1a      	ldr	r3, [pc, #104]	; (800216c <Create_Nodes+0xd08>)
 8002102:	224e      	movs	r2, #78	; 0x4e
 8002104:	f883 228e 	strb.w	r2, [r3, #654]	; 0x28e
 8002108:	4b18      	ldr	r3, [pc, #96]	; (800216c <Create_Nodes+0xd08>)
 800210a:	224f      	movs	r2, #79	; 0x4f
 800210c:	f883 228f 	strb.w	r2, [r3, #655]	; 0x28f
 8002110:	4b16      	ldr	r3, [pc, #88]	; (800216c <Create_Nodes+0xd08>)
 8002112:	2200      	movs	r2, #0
 8002114:	f883 2290 	strb.w	r2, [r3, #656]	; 0x290
 8002118:	4b14      	ldr	r3, [pc, #80]	; (800216c <Create_Nodes+0xd08>)
 800211a:	2200      	movs	r2, #0
 800211c:	f883 2291 	strb.w	r2, [r3, #657]	; 0x291
	VALUE_2(N('Q').directions,1,0,2,2,0,0);
 8002120:	4b12      	ldr	r3, [pc, #72]	; (800216c <Create_Nodes+0xd08>)
 8002122:	2201      	movs	r2, #1
 8002124:	f883 2292 	strb.w	r2, [r3, #658]	; 0x292
 8002128:	4b10      	ldr	r3, [pc, #64]	; (800216c <Create_Nodes+0xd08>)
 800212a:	2200      	movs	r2, #0
 800212c:	f883 2293 	strb.w	r2, [r3, #659]	; 0x293
 8002130:	4b0e      	ldr	r3, [pc, #56]	; (800216c <Create_Nodes+0xd08>)
 8002132:	2202      	movs	r2, #2
 8002134:	f883 2294 	strb.w	r2, [r3, #660]	; 0x294
 8002138:	4b0c      	ldr	r3, [pc, #48]	; (800216c <Create_Nodes+0xd08>)
 800213a:	2202      	movs	r2, #2
 800213c:	f883 2295 	strb.w	r2, [r3, #661]	; 0x295
 8002140:	4b0a      	ldr	r3, [pc, #40]	; (800216c <Create_Nodes+0xd08>)
 8002142:	2200      	movs	r2, #0
 8002144:	f883 2296 	strb.w	r2, [r3, #662]	; 0x296
 8002148:	4b08      	ldr	r3, [pc, #32]	; (800216c <Create_Nodes+0xd08>)
 800214a:	2200      	movs	r2, #0
 800214c:	f883 2297 	strb.w	r2, [r3, #663]	; 0x297
	VALUE_2(N('Q').distance,241,0,198,197,0,0);
 8002150:	4b06      	ldr	r3, [pc, #24]	; (800216c <Create_Nodes+0xd08>)
 8002152:	22f1      	movs	r2, #241	; 0xf1
 8002154:	f8a3 2298 	strh.w	r2, [r3, #664]	; 0x298
 8002158:	4b04      	ldr	r3, [pc, #16]	; (800216c <Create_Nodes+0xd08>)
 800215a:	2200      	movs	r2, #0
 800215c:	f8a3 229a 	strh.w	r2, [r3, #666]	; 0x29a
 8002160:	4b02      	ldr	r3, [pc, #8]	; (800216c <Create_Nodes+0xd08>)
 8002162:	22c6      	movs	r2, #198	; 0xc6
 8002164:	f8a3 229c 	strh.w	r2, [r3, #668]	; 0x29c
 8002168:	e002      	b.n	8002170 <Create_Nodes+0xd0c>
 800216a:	bf00      	nop
 800216c:	20000360 	.word	0x20000360
 8002170:	4bca      	ldr	r3, [pc, #808]	; (800249c <Create_Nodes+0x1038>)
 8002172:	22c5      	movs	r2, #197	; 0xc5
 8002174:	f8a3 229e 	strh.w	r2, [r3, #670]	; 0x29e
 8002178:	4bc8      	ldr	r3, [pc, #800]	; (800249c <Create_Nodes+0x1038>)
 800217a:	2200      	movs	r2, #0
 800217c:	f8a3 22a0 	strh.w	r2, [r3, #672]	; 0x2a0
 8002180:	4bc6      	ldr	r3, [pc, #792]	; (800249c <Create_Nodes+0x1038>)
 8002182:	2200      	movs	r2, #0
 8002184:	f8a3 22a2 	strh.w	r2, [r3, #674]	; 0x2a2
	N('Q').middle=NEIGHBOUR3;
 8002188:	4bc4      	ldr	r3, [pc, #784]	; (800249c <Create_Nodes+0x1038>)
 800218a:	2202      	movs	r2, #2
 800218c:	f883 22a4 	strb.w	r2, [r3, #676]	; 0x2a4

	//R node
	N('R').worth=0;
 8002190:	4bc2      	ldr	r3, [pc, #776]	; (800249c <Create_Nodes+0x1038>)
 8002192:	2200      	movs	r2, #0
 8002194:	f8c3 22ac 	str.w	r2, [r3, #684]	; 0x2ac
	N('R').type=3;
 8002198:	4bc0      	ldr	r3, [pc, #768]	; (800249c <Create_Nodes+0x1038>)
 800219a:	2203      	movs	r2, #3
 800219c:	f8c3 22b0 	str.w	r2, [r3, #688]	; 0x2b0
	VALUE_2(N('R').neighbours,0,0,0,'M',0,'P');
 80021a0:	4bbe      	ldr	r3, [pc, #760]	; (800249c <Create_Nodes+0x1038>)
 80021a2:	2200      	movs	r2, #0
 80021a4:	f883 22b4 	strb.w	r2, [r3, #692]	; 0x2b4
 80021a8:	4bbc      	ldr	r3, [pc, #752]	; (800249c <Create_Nodes+0x1038>)
 80021aa:	2200      	movs	r2, #0
 80021ac:	f883 22b5 	strb.w	r2, [r3, #693]	; 0x2b5
 80021b0:	4bba      	ldr	r3, [pc, #744]	; (800249c <Create_Nodes+0x1038>)
 80021b2:	2200      	movs	r2, #0
 80021b4:	f883 22b6 	strb.w	r2, [r3, #694]	; 0x2b6
 80021b8:	4bb8      	ldr	r3, [pc, #736]	; (800249c <Create_Nodes+0x1038>)
 80021ba:	224d      	movs	r2, #77	; 0x4d
 80021bc:	f883 22b7 	strb.w	r2, [r3, #695]	; 0x2b7
 80021c0:	4bb6      	ldr	r3, [pc, #728]	; (800249c <Create_Nodes+0x1038>)
 80021c2:	2200      	movs	r2, #0
 80021c4:	f883 22b8 	strb.w	r2, [r3, #696]	; 0x2b8
 80021c8:	4bb4      	ldr	r3, [pc, #720]	; (800249c <Create_Nodes+0x1038>)
 80021ca:	2250      	movs	r2, #80	; 0x50
 80021cc:	f883 22b9 	strb.w	r2, [r3, #697]	; 0x2b9
	VALUE_2(N('R').directions,0,0,0,2,0,2);
 80021d0:	4bb2      	ldr	r3, [pc, #712]	; (800249c <Create_Nodes+0x1038>)
 80021d2:	2200      	movs	r2, #0
 80021d4:	f883 22ba 	strb.w	r2, [r3, #698]	; 0x2ba
 80021d8:	4bb0      	ldr	r3, [pc, #704]	; (800249c <Create_Nodes+0x1038>)
 80021da:	2200      	movs	r2, #0
 80021dc:	f883 22bb 	strb.w	r2, [r3, #699]	; 0x2bb
 80021e0:	4bae      	ldr	r3, [pc, #696]	; (800249c <Create_Nodes+0x1038>)
 80021e2:	2200      	movs	r2, #0
 80021e4:	f883 22bc 	strb.w	r2, [r3, #700]	; 0x2bc
 80021e8:	4bac      	ldr	r3, [pc, #688]	; (800249c <Create_Nodes+0x1038>)
 80021ea:	2202      	movs	r2, #2
 80021ec:	f883 22bd 	strb.w	r2, [r3, #701]	; 0x2bd
 80021f0:	4baa      	ldr	r3, [pc, #680]	; (800249c <Create_Nodes+0x1038>)
 80021f2:	2200      	movs	r2, #0
 80021f4:	f883 22be 	strb.w	r2, [r3, #702]	; 0x2be
 80021f8:	4ba8      	ldr	r3, [pc, #672]	; (800249c <Create_Nodes+0x1038>)
 80021fa:	2202      	movs	r2, #2
 80021fc:	f883 22bf 	strb.w	r2, [r3, #703]	; 0x2bf
	VALUE_2(N('R').distance,0,0,0,197,0,241);
 8002200:	4ba6      	ldr	r3, [pc, #664]	; (800249c <Create_Nodes+0x1038>)
 8002202:	2200      	movs	r2, #0
 8002204:	f8a3 22c0 	strh.w	r2, [r3, #704]	; 0x2c0
 8002208:	4ba4      	ldr	r3, [pc, #656]	; (800249c <Create_Nodes+0x1038>)
 800220a:	2200      	movs	r2, #0
 800220c:	f8a3 22c2 	strh.w	r2, [r3, #706]	; 0x2c2
 8002210:	4ba2      	ldr	r3, [pc, #648]	; (800249c <Create_Nodes+0x1038>)
 8002212:	2200      	movs	r2, #0
 8002214:	f8a3 22c4 	strh.w	r2, [r3, #708]	; 0x2c4
 8002218:	4ba0      	ldr	r3, [pc, #640]	; (800249c <Create_Nodes+0x1038>)
 800221a:	22c5      	movs	r2, #197	; 0xc5
 800221c:	f8a3 22c6 	strh.w	r2, [r3, #710]	; 0x2c6
 8002220:	4b9e      	ldr	r3, [pc, #632]	; (800249c <Create_Nodes+0x1038>)
 8002222:	2200      	movs	r2, #0
 8002224:	f8a3 22c8 	strh.w	r2, [r3, #712]	; 0x2c8
 8002228:	4b9c      	ldr	r3, [pc, #624]	; (800249c <Create_Nodes+0x1038>)
 800222a:	22f1      	movs	r2, #241	; 0xf1
 800222c:	f8a3 22ca 	strh.w	r2, [r3, #714]	; 0x2ca
	N('R').middle=NEIGHBOUR6;
 8002230:	4b9a      	ldr	r3, [pc, #616]	; (800249c <Create_Nodes+0x1038>)
 8002232:	2205      	movs	r2, #5
 8002234:	f883 22cc 	strb.w	r2, [r3, #716]	; 0x2cc

	//S node
	N('S').worth=0;
 8002238:	4b98      	ldr	r3, [pc, #608]	; (800249c <Create_Nodes+0x1038>)
 800223a:	2200      	movs	r2, #0
 800223c:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
	N('S').type=3;
 8002240:	4b96      	ldr	r3, [pc, #600]	; (800249c <Create_Nodes+0x1038>)
 8002242:	2203      	movs	r2, #3
 8002244:	f8c3 22d8 	str.w	r2, [r3, #728]	; 0x2d8
	VALUE_2(N('S').neighbours,'Q',0,'O',0,0,0);
 8002248:	4b94      	ldr	r3, [pc, #592]	; (800249c <Create_Nodes+0x1038>)
 800224a:	2251      	movs	r2, #81	; 0x51
 800224c:	f883 22dc 	strb.w	r2, [r3, #732]	; 0x2dc
 8002250:	4b92      	ldr	r3, [pc, #584]	; (800249c <Create_Nodes+0x1038>)
 8002252:	2200      	movs	r2, #0
 8002254:	f883 22dd 	strb.w	r2, [r3, #733]	; 0x2dd
 8002258:	4b90      	ldr	r3, [pc, #576]	; (800249c <Create_Nodes+0x1038>)
 800225a:	224f      	movs	r2, #79	; 0x4f
 800225c:	f883 22de 	strb.w	r2, [r3, #734]	; 0x2de
 8002260:	4b8e      	ldr	r3, [pc, #568]	; (800249c <Create_Nodes+0x1038>)
 8002262:	2200      	movs	r2, #0
 8002264:	f883 22df 	strb.w	r2, [r3, #735]	; 0x2df
 8002268:	4b8c      	ldr	r3, [pc, #560]	; (800249c <Create_Nodes+0x1038>)
 800226a:	2200      	movs	r2, #0
 800226c:	f883 22e0 	strb.w	r2, [r3, #736]	; 0x2e0
 8002270:	4b8a      	ldr	r3, [pc, #552]	; (800249c <Create_Nodes+0x1038>)
 8002272:	2200      	movs	r2, #0
 8002274:	f883 22e1 	strb.w	r2, [r3, #737]	; 0x2e1
	VALUE_2(N('S').directions,1,0,2,0,0,0);
 8002278:	4b88      	ldr	r3, [pc, #544]	; (800249c <Create_Nodes+0x1038>)
 800227a:	2201      	movs	r2, #1
 800227c:	f883 22e2 	strb.w	r2, [r3, #738]	; 0x2e2
 8002280:	4b86      	ldr	r3, [pc, #536]	; (800249c <Create_Nodes+0x1038>)
 8002282:	2200      	movs	r2, #0
 8002284:	f883 22e3 	strb.w	r2, [r3, #739]	; 0x2e3
 8002288:	4b84      	ldr	r3, [pc, #528]	; (800249c <Create_Nodes+0x1038>)
 800228a:	2202      	movs	r2, #2
 800228c:	f883 22e4 	strb.w	r2, [r3, #740]	; 0x2e4
 8002290:	4b82      	ldr	r3, [pc, #520]	; (800249c <Create_Nodes+0x1038>)
 8002292:	2200      	movs	r2, #0
 8002294:	f883 22e5 	strb.w	r2, [r3, #741]	; 0x2e5
 8002298:	4b80      	ldr	r3, [pc, #512]	; (800249c <Create_Nodes+0x1038>)
 800229a:	2200      	movs	r2, #0
 800229c:	f883 22e6 	strb.w	r2, [r3, #742]	; 0x2e6
 80022a0:	4b7e      	ldr	r3, [pc, #504]	; (800249c <Create_Nodes+0x1038>)
 80022a2:	2200      	movs	r2, #0
 80022a4:	f883 22e7 	strb.w	r2, [r3, #743]	; 0x2e7
	VALUE_2(N('S').distance,241,0,198,0,0,0);
 80022a8:	4b7c      	ldr	r3, [pc, #496]	; (800249c <Create_Nodes+0x1038>)
 80022aa:	22f1      	movs	r2, #241	; 0xf1
 80022ac:	f8a3 22e8 	strh.w	r2, [r3, #744]	; 0x2e8
 80022b0:	4b7a      	ldr	r3, [pc, #488]	; (800249c <Create_Nodes+0x1038>)
 80022b2:	2200      	movs	r2, #0
 80022b4:	f8a3 22ea 	strh.w	r2, [r3, #746]	; 0x2ea
 80022b8:	4b78      	ldr	r3, [pc, #480]	; (800249c <Create_Nodes+0x1038>)
 80022ba:	22c6      	movs	r2, #198	; 0xc6
 80022bc:	f8a3 22ec 	strh.w	r2, [r3, #748]	; 0x2ec
 80022c0:	4b76      	ldr	r3, [pc, #472]	; (800249c <Create_Nodes+0x1038>)
 80022c2:	2200      	movs	r2, #0
 80022c4:	f8a3 22ee 	strh.w	r2, [r3, #750]	; 0x2ee
 80022c8:	4b74      	ldr	r3, [pc, #464]	; (800249c <Create_Nodes+0x1038>)
 80022ca:	2200      	movs	r2, #0
 80022cc:	f8a3 22f0 	strh.w	r2, [r3, #752]	; 0x2f0
 80022d0:	4b72      	ldr	r3, [pc, #456]	; (800249c <Create_Nodes+0x1038>)
 80022d2:	2200      	movs	r2, #0
 80022d4:	f8a3 22f2 	strh.w	r2, [r3, #754]	; 0x2f2
	N('S').middle=NEIGHBOUR1;
 80022d8:	4b70      	ldr	r3, [pc, #448]	; (800249c <Create_Nodes+0x1038>)
 80022da:	2200      	movs	r2, #0
 80022dc:	f883 22f4 	strb.w	r2, [r3, #756]	; 0x2f4

	//T node
	N('T').worth=0;
 80022e0:	4b6e      	ldr	r3, [pc, #440]	; (800249c <Create_Nodes+0x1038>)
 80022e2:	2200      	movs	r2, #0
 80022e4:	f8c3 22fc 	str.w	r2, [r3, #764]	; 0x2fc
	N('T').type=4;
 80022e8:	4b6c      	ldr	r3, [pc, #432]	; (800249c <Create_Nodes+0x1038>)
 80022ea:	2204      	movs	r2, #4
 80022ec:	f8c3 2300 	str.w	r2, [r3, #768]	; 0x300
	VALUE_2(N('T').neighbours,'V',0,'U','N',0,0);
 80022f0:	4b6a      	ldr	r3, [pc, #424]	; (800249c <Create_Nodes+0x1038>)
 80022f2:	2256      	movs	r2, #86	; 0x56
 80022f4:	f883 2304 	strb.w	r2, [r3, #772]	; 0x304
 80022f8:	4b68      	ldr	r3, [pc, #416]	; (800249c <Create_Nodes+0x1038>)
 80022fa:	2200      	movs	r2, #0
 80022fc:	f883 2305 	strb.w	r2, [r3, #773]	; 0x305
 8002300:	4b66      	ldr	r3, [pc, #408]	; (800249c <Create_Nodes+0x1038>)
 8002302:	2255      	movs	r2, #85	; 0x55
 8002304:	f883 2306 	strb.w	r2, [r3, #774]	; 0x306
 8002308:	4b64      	ldr	r3, [pc, #400]	; (800249c <Create_Nodes+0x1038>)
 800230a:	224e      	movs	r2, #78	; 0x4e
 800230c:	f883 2307 	strb.w	r2, [r3, #775]	; 0x307
 8002310:	4b62      	ldr	r3, [pc, #392]	; (800249c <Create_Nodes+0x1038>)
 8002312:	2200      	movs	r2, #0
 8002314:	f883 2308 	strb.w	r2, [r3, #776]	; 0x308
 8002318:	4b60      	ldr	r3, [pc, #384]	; (800249c <Create_Nodes+0x1038>)
 800231a:	2200      	movs	r2, #0
 800231c:	f883 2309 	strb.w	r2, [r3, #777]	; 0x309
	VALUE_2(N('T').directions,2,0,1,2,0,0);
 8002320:	4b5e      	ldr	r3, [pc, #376]	; (800249c <Create_Nodes+0x1038>)
 8002322:	2202      	movs	r2, #2
 8002324:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
 8002328:	4b5c      	ldr	r3, [pc, #368]	; (800249c <Create_Nodes+0x1038>)
 800232a:	2200      	movs	r2, #0
 800232c:	f883 230b 	strb.w	r2, [r3, #779]	; 0x30b
 8002330:	4b5a      	ldr	r3, [pc, #360]	; (800249c <Create_Nodes+0x1038>)
 8002332:	2201      	movs	r2, #1
 8002334:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
 8002338:	4b58      	ldr	r3, [pc, #352]	; (800249c <Create_Nodes+0x1038>)
 800233a:	2202      	movs	r2, #2
 800233c:	f883 230d 	strb.w	r2, [r3, #781]	; 0x30d
 8002340:	4b56      	ldr	r3, [pc, #344]	; (800249c <Create_Nodes+0x1038>)
 8002342:	2200      	movs	r2, #0
 8002344:	f883 230e 	strb.w	r2, [r3, #782]	; 0x30e
 8002348:	4b54      	ldr	r3, [pc, #336]	; (800249c <Create_Nodes+0x1038>)
 800234a:	2200      	movs	r2, #0
 800234c:	f883 230f 	strb.w	r2, [r3, #783]	; 0x30f
	VALUE_2(N('T').distance,199,0,198,120-25,0,0);
 8002350:	4b52      	ldr	r3, [pc, #328]	; (800249c <Create_Nodes+0x1038>)
 8002352:	22c7      	movs	r2, #199	; 0xc7
 8002354:	f8a3 2310 	strh.w	r2, [r3, #784]	; 0x310
 8002358:	4b50      	ldr	r3, [pc, #320]	; (800249c <Create_Nodes+0x1038>)
 800235a:	2200      	movs	r2, #0
 800235c:	f8a3 2312 	strh.w	r2, [r3, #786]	; 0x312
 8002360:	4b4e      	ldr	r3, [pc, #312]	; (800249c <Create_Nodes+0x1038>)
 8002362:	22c6      	movs	r2, #198	; 0xc6
 8002364:	f8a3 2314 	strh.w	r2, [r3, #788]	; 0x314
 8002368:	4b4c      	ldr	r3, [pc, #304]	; (800249c <Create_Nodes+0x1038>)
 800236a:	225f      	movs	r2, #95	; 0x5f
 800236c:	f8a3 2316 	strh.w	r2, [r3, #790]	; 0x316
 8002370:	4b4a      	ldr	r3, [pc, #296]	; (800249c <Create_Nodes+0x1038>)
 8002372:	2200      	movs	r2, #0
 8002374:	f8a3 2318 	strh.w	r2, [r3, #792]	; 0x318
 8002378:	4b48      	ldr	r3, [pc, #288]	; (800249c <Create_Nodes+0x1038>)
 800237a:	2200      	movs	r2, #0
 800237c:	f8a3 231a 	strh.w	r2, [r3, #794]	; 0x31a
	N('T').middle=NEIGHBOUR4;
 8002380:	4b46      	ldr	r3, [pc, #280]	; (800249c <Create_Nodes+0x1038>)
 8002382:	2203      	movs	r2, #3
 8002384:	f883 231c 	strb.w	r2, [r3, #796]	; 0x31c

	//U node
	N('U').worth=0;
 8002388:	4b44      	ldr	r3, [pc, #272]	; (800249c <Create_Nodes+0x1038>)
 800238a:	2200      	movs	r2, #0
 800238c:	f8c3 2324 	str.w	r2, [r3, #804]	; 0x324
	N('U').type=3;
 8002390:	4b42      	ldr	r3, [pc, #264]	; (800249c <Create_Nodes+0x1038>)
 8002392:	2203      	movs	r2, #3
 8002394:	f8c3 2328 	str.w	r2, [r3, #808]	; 0x328
	VALUE_2(N('U').neighbours,0,0,'M','T',0,'V');
 8002398:	4b40      	ldr	r3, [pc, #256]	; (800249c <Create_Nodes+0x1038>)
 800239a:	2200      	movs	r2, #0
 800239c:	f883 232c 	strb.w	r2, [r3, #812]	; 0x32c
 80023a0:	4b3e      	ldr	r3, [pc, #248]	; (800249c <Create_Nodes+0x1038>)
 80023a2:	2200      	movs	r2, #0
 80023a4:	f883 232d 	strb.w	r2, [r3, #813]	; 0x32d
 80023a8:	4b3c      	ldr	r3, [pc, #240]	; (800249c <Create_Nodes+0x1038>)
 80023aa:	224d      	movs	r2, #77	; 0x4d
 80023ac:	f883 232e 	strb.w	r2, [r3, #814]	; 0x32e
 80023b0:	4b3a      	ldr	r3, [pc, #232]	; (800249c <Create_Nodes+0x1038>)
 80023b2:	2254      	movs	r2, #84	; 0x54
 80023b4:	f883 232f 	strb.w	r2, [r3, #815]	; 0x32f
 80023b8:	4b38      	ldr	r3, [pc, #224]	; (800249c <Create_Nodes+0x1038>)
 80023ba:	2200      	movs	r2, #0
 80023bc:	f883 2330 	strb.w	r2, [r3, #816]	; 0x330
 80023c0:	4b36      	ldr	r3, [pc, #216]	; (800249c <Create_Nodes+0x1038>)
 80023c2:	2256      	movs	r2, #86	; 0x56
 80023c4:	f883 2331 	strb.w	r2, [r3, #817]	; 0x331
	VALUE_2(N('U').directions,0,0,2,2,0,2);
 80023c8:	4b34      	ldr	r3, [pc, #208]	; (800249c <Create_Nodes+0x1038>)
 80023ca:	2200      	movs	r2, #0
 80023cc:	f883 2332 	strb.w	r2, [r3, #818]	; 0x332
 80023d0:	4b32      	ldr	r3, [pc, #200]	; (800249c <Create_Nodes+0x1038>)
 80023d2:	2200      	movs	r2, #0
 80023d4:	f883 2333 	strb.w	r2, [r3, #819]	; 0x333
 80023d8:	4b30      	ldr	r3, [pc, #192]	; (800249c <Create_Nodes+0x1038>)
 80023da:	2202      	movs	r2, #2
 80023dc:	f883 2334 	strb.w	r2, [r3, #820]	; 0x334
 80023e0:	4b2e      	ldr	r3, [pc, #184]	; (800249c <Create_Nodes+0x1038>)
 80023e2:	2202      	movs	r2, #2
 80023e4:	f883 2335 	strb.w	r2, [r3, #821]	; 0x335
 80023e8:	4b2c      	ldr	r3, [pc, #176]	; (800249c <Create_Nodes+0x1038>)
 80023ea:	2200      	movs	r2, #0
 80023ec:	f883 2336 	strb.w	r2, [r3, #822]	; 0x336
 80023f0:	4b2a      	ldr	r3, [pc, #168]	; (800249c <Create_Nodes+0x1038>)
 80023f2:	2202      	movs	r2, #2
 80023f4:	f883 2337 	strb.w	r2, [r3, #823]	; 0x337
	VALUE_2(N('U').distance,0,0,319-25,198,0,241);
 80023f8:	4b28      	ldr	r3, [pc, #160]	; (800249c <Create_Nodes+0x1038>)
 80023fa:	2200      	movs	r2, #0
 80023fc:	f8a3 2338 	strh.w	r2, [r3, #824]	; 0x338
 8002400:	4b26      	ldr	r3, [pc, #152]	; (800249c <Create_Nodes+0x1038>)
 8002402:	2200      	movs	r2, #0
 8002404:	f8a3 233a 	strh.w	r2, [r3, #826]	; 0x33a
 8002408:	4b24      	ldr	r3, [pc, #144]	; (800249c <Create_Nodes+0x1038>)
 800240a:	f44f 7293 	mov.w	r2, #294	; 0x126
 800240e:	f8a3 233c 	strh.w	r2, [r3, #828]	; 0x33c
 8002412:	4b22      	ldr	r3, [pc, #136]	; (800249c <Create_Nodes+0x1038>)
 8002414:	22c6      	movs	r2, #198	; 0xc6
 8002416:	f8a3 233e 	strh.w	r2, [r3, #830]	; 0x33e
 800241a:	4b20      	ldr	r3, [pc, #128]	; (800249c <Create_Nodes+0x1038>)
 800241c:	2200      	movs	r2, #0
 800241e:	f8a3 2340 	strh.w	r2, [r3, #832]	; 0x340
 8002422:	4b1e      	ldr	r3, [pc, #120]	; (800249c <Create_Nodes+0x1038>)
 8002424:	22f1      	movs	r2, #241	; 0xf1
 8002426:	f8a3 2342 	strh.w	r2, [r3, #834]	; 0x342
	N('U').middle=NEIGHBOUR3;
 800242a:	4b1c      	ldr	r3, [pc, #112]	; (800249c <Create_Nodes+0x1038>)
 800242c:	2202      	movs	r2, #2
 800242e:	f883 2344 	strb.w	r2, [r3, #836]	; 0x344

	//V node
	N('V').worth=0;
 8002432:	4b1a      	ldr	r3, [pc, #104]	; (800249c <Create_Nodes+0x1038>)
 8002434:	2200      	movs	r2, #0
 8002436:	f8c3 234c 	str.w	r2, [r3, #844]	; 0x34c
	N('V').type=3;
 800243a:	4b18      	ldr	r3, [pc, #96]	; (800249c <Create_Nodes+0x1038>)
 800243c:	2203      	movs	r2, #3
 800243e:	f8c3 2350 	str.w	r2, [r3, #848]	; 0x350
	VALUE_2(N('V').neighbours,'U',0,'T','O',0,0);
 8002442:	4b16      	ldr	r3, [pc, #88]	; (800249c <Create_Nodes+0x1038>)
 8002444:	2255      	movs	r2, #85	; 0x55
 8002446:	f883 2354 	strb.w	r2, [r3, #852]	; 0x354
 800244a:	4b14      	ldr	r3, [pc, #80]	; (800249c <Create_Nodes+0x1038>)
 800244c:	2200      	movs	r2, #0
 800244e:	f883 2355 	strb.w	r2, [r3, #853]	; 0x355
 8002452:	4b12      	ldr	r3, [pc, #72]	; (800249c <Create_Nodes+0x1038>)
 8002454:	2254      	movs	r2, #84	; 0x54
 8002456:	f883 2356 	strb.w	r2, [r3, #854]	; 0x356
 800245a:	4b10      	ldr	r3, [pc, #64]	; (800249c <Create_Nodes+0x1038>)
 800245c:	224f      	movs	r2, #79	; 0x4f
 800245e:	f883 2357 	strb.w	r2, [r3, #855]	; 0x357
 8002462:	4b0e      	ldr	r3, [pc, #56]	; (800249c <Create_Nodes+0x1038>)
 8002464:	2200      	movs	r2, #0
 8002466:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
 800246a:	4b0c      	ldr	r3, [pc, #48]	; (800249c <Create_Nodes+0x1038>)
 800246c:	2200      	movs	r2, #0
 800246e:	f883 2359 	strb.w	r2, [r3, #857]	; 0x359
	VALUE_2(N('V').directions,1,0,2,2,0,0);
 8002472:	4b0a      	ldr	r3, [pc, #40]	; (800249c <Create_Nodes+0x1038>)
 8002474:	2201      	movs	r2, #1
 8002476:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 800247a:	4b08      	ldr	r3, [pc, #32]	; (800249c <Create_Nodes+0x1038>)
 800247c:	2200      	movs	r2, #0
 800247e:	f883 235b 	strb.w	r2, [r3, #859]	; 0x35b
 8002482:	4b06      	ldr	r3, [pc, #24]	; (800249c <Create_Nodes+0x1038>)
 8002484:	2202      	movs	r2, #2
 8002486:	f883 235c 	strb.w	r2, [r3, #860]	; 0x35c
 800248a:	4b04      	ldr	r3, [pc, #16]	; (800249c <Create_Nodes+0x1038>)
 800248c:	2202      	movs	r2, #2
 800248e:	f883 235d 	strb.w	r2, [r3, #861]	; 0x35d
 8002492:	4b02      	ldr	r3, [pc, #8]	; (800249c <Create_Nodes+0x1038>)
 8002494:	2200      	movs	r2, #0
 8002496:	f883 235e 	strb.w	r2, [r3, #862]	; 0x35e
 800249a:	e001      	b.n	80024a0 <Create_Nodes+0x103c>
 800249c:	20000360 	.word	0x20000360
 80024a0:	4b72      	ldr	r3, [pc, #456]	; (800266c <Create_Nodes+0x1208>)
 80024a2:	2200      	movs	r2, #0
 80024a4:	f883 235f 	strb.w	r2, [r3, #863]	; 0x35f
	VALUE_2(N('V').distance,241,0,199,318-25,0,0);
 80024a8:	4b70      	ldr	r3, [pc, #448]	; (800266c <Create_Nodes+0x1208>)
 80024aa:	22f1      	movs	r2, #241	; 0xf1
 80024ac:	f8a3 2360 	strh.w	r2, [r3, #864]	; 0x360
 80024b0:	4b6e      	ldr	r3, [pc, #440]	; (800266c <Create_Nodes+0x1208>)
 80024b2:	2200      	movs	r2, #0
 80024b4:	f8a3 2362 	strh.w	r2, [r3, #866]	; 0x362
 80024b8:	4b6c      	ldr	r3, [pc, #432]	; (800266c <Create_Nodes+0x1208>)
 80024ba:	22c7      	movs	r2, #199	; 0xc7
 80024bc:	f8a3 2364 	strh.w	r2, [r3, #868]	; 0x364
 80024c0:	4b6a      	ldr	r3, [pc, #424]	; (800266c <Create_Nodes+0x1208>)
 80024c2:	f240 1225 	movw	r2, #293	; 0x125
 80024c6:	f8a3 2366 	strh.w	r2, [r3, #870]	; 0x366
 80024ca:	4b68      	ldr	r3, [pc, #416]	; (800266c <Create_Nodes+0x1208>)
 80024cc:	2200      	movs	r2, #0
 80024ce:	f8a3 2368 	strh.w	r2, [r3, #872]	; 0x368
 80024d2:	4b66      	ldr	r3, [pc, #408]	; (800266c <Create_Nodes+0x1208>)
 80024d4:	2200      	movs	r2, #0
 80024d6:	f8a3 236a 	strh.w	r2, [r3, #874]	; 0x36a
	N('V').middle=NEIGHBOUR3;
 80024da:	4b64      	ldr	r3, [pc, #400]	; (800266c <Create_Nodes+0x1208>)
 80024dc:	2202      	movs	r2, #2
 80024de:	f883 236c 	strb.w	r2, [r3, #876]	; 0x36c

	//Nodeértékek backup mentésből való visszatöltése
	if(SW2)//ha a kacsapoló2 a megfelelő állapotban van (világít a piros LED)
 80024e2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80024e6:	4862      	ldr	r0, [pc, #392]	; (8002670 <Create_Nodes+0x120c>)
 80024e8:	f006 fe90 	bl	800920c <HAL_GPIO_ReadPin>
 80024ec:	4603      	mov	r3, r0
 80024ee:	2b00      	cmp	r3, #0
 80024f0:	f000 80a0 	beq.w	8002634 <Create_Nodes+0x11d0>
	{
		uint32_t check_flash = *(__IO uint32_t *) FLASH_ADDRESS_NODEWORTH; //tényleg ottvanak  flashbena megfelelő helyen a worth értékek?
 80024f4:	4b5f      	ldr	r3, [pc, #380]	; (8002674 <Create_Nodes+0x1210>)
 80024f6:	681b      	ldr	r3, [r3, #0]
 80024f8:	66bb      	str	r3, [r7, #104]	; 0x68

		if(check_flash==0xffffffff)//nincs semmi a flashben
 80024fa:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80024fc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002500:	d161      	bne.n	80025c6 <Create_Nodes+0x1162>
		{
			char str[]="Default worths because of FLASH ERROR!\n\r";
 8002502:	4b5d      	ldr	r3, [pc, #372]	; (8002678 <Create_Nodes+0x1214>)
 8002504:	f107 040c 	add.w	r4, r7, #12
 8002508:	461d      	mov	r5, r3
 800250a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800250c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800250e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002510:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002512:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002516:	c403      	stmia	r4!, {r0, r1}
 8002518:	7022      	strb	r2, [r4, #0]
			HAL_UART_Transmit(huart_debugg,(uint8_t*) str, strlen(str), 10);
 800251a:	f107 030c 	add.w	r3, r7, #12
 800251e:	4618      	mov	r0, r3
 8002520:	f7fd fe76 	bl	8000210 <strlen>
 8002524:	4603      	mov	r3, r0
 8002526:	b29a      	uxth	r2, r3
 8002528:	f107 010c 	add.w	r1, r7, #12
 800252c:	230a      	movs	r3, #10
 800252e:	6878      	ldr	r0, [r7, #4]
 8002530:	f009 fbd7 	bl	800bce2 <HAL_UART_Transmit>
			HAL_FLASH_Unlock();
 8002534:	f006 fb1c 	bl	8008b70 <HAL_FLASH_Unlock>
			HAL_Delay(50);
 8002538:	2032      	movs	r0, #50	; 0x32
 800253a:	f004 ffe5 	bl	8007508 <HAL_Delay>
			FLASH_Erase_Sector(6, FLASH_VOLTAGE_RANGE_3);
 800253e:	2102      	movs	r1, #2
 8002540:	2006      	movs	r0, #6
 8002542:	f006 fc87 	bl	8008e54 <FLASH_Erase_Sector>
			HAL_Delay(50);
 8002546:	2032      	movs	r0, #50	; 0x32
 8002548:	f004 ffde 	bl	8007508 <HAL_Delay>
			HAL_FLASH_Lock();
 800254c:	f006 fb32 	bl	8008bb4 <HAL_FLASH_Lock>
			HAL_Delay(50);
 8002550:	2032      	movs	r0, #50	; 0x32
 8002552:	f004 ffd9 	bl	8007508 <HAL_Delay>
			HAL_FLASH_Unlock();
 8002556:	f006 fb0b 	bl	8008b70 <HAL_FLASH_Unlock>
			HAL_Delay(50);
 800255a:	2032      	movs	r0, #50	; 0x32
 800255c:	f004 ffd4 	bl	8007508 <HAL_Delay>
			for(i=0;i<22;i++)
 8002560:	2300      	movs	r3, #0
 8002562:	66fb      	str	r3, [r7, #108]	; 0x6c
 8002564:	e01a      	b.n	800259c <Create_Nodes+0x1138>
			{
				HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+i, Nodes[i].worth);
 8002566:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002568:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 800256c:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
 8002570:	4618      	mov	r0, r3
 8002572:	493e      	ldr	r1, [pc, #248]	; (800266c <Create_Nodes+0x1208>)
 8002574:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8002576:	4613      	mov	r3, r2
 8002578:	009b      	lsls	r3, r3, #2
 800257a:	4413      	add	r3, r2
 800257c:	00db      	lsls	r3, r3, #3
 800257e:	440b      	add	r3, r1
 8002580:	3304      	adds	r3, #4
 8002582:	681b      	ldr	r3, [r3, #0]
 8002584:	17da      	asrs	r2, r3, #31
 8002586:	469a      	mov	sl, r3
 8002588:	4693      	mov	fp, r2
 800258a:	4652      	mov	r2, sl
 800258c:	465b      	mov	r3, fp
 800258e:	4601      	mov	r1, r0
 8002590:	2000      	movs	r0, #0
 8002592:	f006 fa99 	bl	8008ac8 <HAL_FLASH_Program>
			for(i=0;i<22;i++)
 8002596:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002598:	3301      	adds	r3, #1
 800259a:	66fb      	str	r3, [r7, #108]	; 0x6c
 800259c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800259e:	2b15      	cmp	r3, #21
 80025a0:	dde1      	ble.n	8002566 <Create_Nodes+0x1102>
			}
			HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+22, collectedPoints);
 80025a2:	4b36      	ldr	r3, [pc, #216]	; (800267c <Create_Nodes+0x1218>)
 80025a4:	781b      	ldrb	r3, [r3, #0]
 80025a6:	b2db      	uxtb	r3, r3
 80025a8:	2200      	movs	r2, #0
 80025aa:	4698      	mov	r8, r3
 80025ac:	4691      	mov	r9, r2
 80025ae:	4642      	mov	r2, r8
 80025b0:	464b      	mov	r3, r9
 80025b2:	4933      	ldr	r1, [pc, #204]	; (8002680 <Create_Nodes+0x121c>)
 80025b4:	2000      	movs	r0, #0
 80025b6:	f006 fa87 	bl	8008ac8 <HAL_FLASH_Program>
			HAL_Delay(50);
 80025ba:	2032      	movs	r0, #50	; 0x32
 80025bc:	f004 ffa4 	bl	8007508 <HAL_Delay>
			HAL_FLASH_Lock();
 80025c0:	f006 faf8 	bl	8008bb4 <HAL_FLASH_Lock>
 80025c4:	e04d      	b.n	8002662 <Create_Nodes+0x11fe>
			return; //ha nem akkor használjuk a default értékeket
		}
		for(i=0;i<22;i++)
 80025c6:	2300      	movs	r3, #0
 80025c8:	66fb      	str	r3, [r7, #108]	; 0x6c
 80025ca:	e013      	b.n	80025f4 <Create_Nodes+0x1190>
		{
			Nodes[i].worth=*(__IO uint8_t *) (FLASH_ADDRESS_NODEWORTH+i); //ha igen akkor töltsük be a backup mentést
 80025cc:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80025ce:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 80025d2:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
 80025d6:	781b      	ldrb	r3, [r3, #0]
 80025d8:	b2db      	uxtb	r3, r3
 80025da:	4618      	mov	r0, r3
 80025dc:	4923      	ldr	r1, [pc, #140]	; (800266c <Create_Nodes+0x1208>)
 80025de:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80025e0:	4613      	mov	r3, r2
 80025e2:	009b      	lsls	r3, r3, #2
 80025e4:	4413      	add	r3, r2
 80025e6:	00db      	lsls	r3, r3, #3
 80025e8:	440b      	add	r3, r1
 80025ea:	3304      	adds	r3, #4
 80025ec:	6018      	str	r0, [r3, #0]
		for(i=0;i<22;i++)
 80025ee:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80025f0:	3301      	adds	r3, #1
 80025f2:	66fb      	str	r3, [r7, #108]	; 0x6c
 80025f4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80025f6:	2b15      	cmp	r3, #21
 80025f8:	dde8      	ble.n	80025cc <Create_Nodes+0x1168>
		}
		collectedPoints=*(__IO uint8_t *) (FLASH_ADDRESS_NODEWORTH+22);
 80025fa:	4b21      	ldr	r3, [pc, #132]	; (8002680 <Create_Nodes+0x121c>)
 80025fc:	781b      	ldrb	r3, [r3, #0]
 80025fe:	b2da      	uxtb	r2, r3
 8002600:	4b1e      	ldr	r3, [pc, #120]	; (800267c <Create_Nodes+0x1218>)
 8002602:	701a      	strb	r2, [r3, #0]
		char str[]="Worths from FLASH backup!\n\r";
 8002604:	4b1f      	ldr	r3, [pc, #124]	; (8002684 <Create_Nodes+0x1220>)
 8002606:	f107 044c 	add.w	r4, r7, #76	; 0x4c
 800260a:	461d      	mov	r5, r3
 800260c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800260e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002610:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002614:	e884 0007 	stmia.w	r4, {r0, r1, r2}
		HAL_UART_Transmit(huart_debugg,(uint8_t*) str, strlen(str), 10);
 8002618:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800261c:	4618      	mov	r0, r3
 800261e:	f7fd fdf7 	bl	8000210 <strlen>
 8002622:	4603      	mov	r3, r0
 8002624:	b29a      	uxth	r2, r3
 8002626:	f107 014c 	add.w	r1, r7, #76	; 0x4c
 800262a:	230a      	movs	r3, #10
 800262c:	6878      	ldr	r0, [r7, #4]
 800262e:	f009 fb58 	bl	800bce2 <HAL_UART_Transmit>
 8002632:	e016      	b.n	8002662 <Create_Nodes+0x11fe>
	}
	else
	{
		char str[]="Default worths!\n\r";
 8002634:	4b14      	ldr	r3, [pc, #80]	; (8002688 <Create_Nodes+0x1224>)
 8002636:	f107 0438 	add.w	r4, r7, #56	; 0x38
 800263a:	461d      	mov	r5, r3
 800263c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800263e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002640:	682b      	ldr	r3, [r5, #0]
 8002642:	8023      	strh	r3, [r4, #0]
		HAL_UART_Transmit(huart_debugg,(uint8_t*) str, strlen(str), 10);
 8002644:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8002648:	4618      	mov	r0, r3
 800264a:	f7fd fde1 	bl	8000210 <strlen>
 800264e:	4603      	mov	r3, r0
 8002650:	b29a      	uxth	r2, r3
 8002652:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8002656:	230a      	movs	r3, #10
 8002658:	6878      	ldr	r0, [r7, #4]
 800265a:	f009 fb42 	bl	800bce2 <HAL_UART_Transmit>
 800265e:	e000      	b.n	8002662 <Create_Nodes+0x11fe>
	if(mode!=SKILL)return;
 8002660:	bf00      	nop
	}
}
 8002662:	3770      	adds	r7, #112	; 0x70
 8002664:	46bd      	mov	sp, r7
 8002666:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800266a:	bf00      	nop
 800266c:	20000360 	.word	0x20000360
 8002670:	40020400 	.word	0x40020400
 8002674:	08040000 	.word	0x08040000
 8002678:	080111ac 	.word	0x080111ac
 800267c:	2000034f 	.word	0x2000034f
 8002680:	08040016 	.word	0x08040016
 8002684:	080111d8 	.word	0x080111d8
 8002688:	080111f4 	.word	0x080111f4
 800268c:	00000000 	.word	0x00000000

08002690 <Control_Task>:


void Control_Task(UART_HandleTypeDef *huart_debugg,TIM_HandleTypeDef *htim_rand,uint32_t tick, uint32_t period)
{
 8002690:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8002694:	b088      	sub	sp, #32
 8002696:	af00      	add	r7, sp, #0
 8002698:	60f8      	str	r0, [r7, #12]
 800269a:	60b9      	str	r1, [r7, #8]
 800269c:	607a      	str	r2, [r7, #4]
 800269e:	603b      	str	r3, [r7, #0]

	static uint32_t control_task_tick = 0;
	static uint8_t control_task_state=NEIGHBOUR1;//5 db állapot ->5.után megint 1.jön
	//szomszéd1,szomszéd2,szomszéd3,szomszéd4,kiértékelés

	uint8_t nID=0;
 80026a0:	2300      	movs	r3, #0
 80026a2:	76fb      	strb	r3, [r7, #27]

	if(control_task_tick>tick)return;
 80026a4:	4b98      	ldr	r3, [pc, #608]	; (8002908 <Control_Task+0x278>)
 80026a6:	681b      	ldr	r3, [r3, #0]
 80026a8:	687a      	ldr	r2, [r7, #4]
 80026aa:	429a      	cmp	r2, r3
 80026ac:	f0c0 83db 	bcc.w	8002e66 <Control_Task+0x7d6>
	control_task_tick=tick+period;
 80026b0:	687a      	ldr	r2, [r7, #4]
 80026b2:	683b      	ldr	r3, [r7, #0]
 80026b4:	4413      	add	r3, r2
 80026b6:	4a94      	ldr	r2, [pc, #592]	; (8002908 <Control_Task+0x278>)
 80026b8:	6013      	str	r3, [r2, #0]
	if(mode!=SKILL)return;
 80026ba:	4b94      	ldr	r3, [pc, #592]	; (800290c <Control_Task+0x27c>)
 80026bc:	781b      	ldrb	r3, [r3, #0]
 80026be:	2b52      	cmp	r3, #82	; 0x52
 80026c0:	f040 83d3 	bne.w	8002e6a <Control_Task+0x7da>
	//if(!readytorace)return;

	//ha kapu nélküli nodeba tartunk éppen, akkor időzítéssel "detektáljuk" a nodot
	if(N(pos[MY]).type>2)
 80026c4:	4b92      	ldr	r3, [pc, #584]	; (8002910 <Control_Task+0x280>)
 80026c6:	781b      	ldrb	r3, [r3, #0]
 80026c8:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80026cc:	4991      	ldr	r1, [pc, #580]	; (8002914 <Control_Task+0x284>)
 80026ce:	4613      	mov	r3, r2
 80026d0:	009b      	lsls	r3, r3, #2
 80026d2:	4413      	add	r3, r2
 80026d4:	00db      	lsls	r3, r3, #3
 80026d6:	440b      	add	r3, r1
 80026d8:	3308      	adds	r3, #8
 80026da:	681b      	ldr	r3, [r3, #0]
 80026dc:	2b02      	cmp	r3, #2
 80026de:	d94c      	bls.n	800277a <Control_Task+0xea>
	{
		s += (float)(tick-tick_prev)*fabs(v)/10000;
 80026e0:	4b8d      	ldr	r3, [pc, #564]	; (8002918 <Control_Task+0x288>)
 80026e2:	681b      	ldr	r3, [r3, #0]
 80026e4:	4618      	mov	r0, r3
 80026e6:	f7fd ff4f 	bl	8000588 <__aeabi_f2d>
 80026ea:	4604      	mov	r4, r0
 80026ec:	460d      	mov	r5, r1
 80026ee:	4b8b      	ldr	r3, [pc, #556]	; (800291c <Control_Task+0x28c>)
 80026f0:	681b      	ldr	r3, [r3, #0]
 80026f2:	687a      	ldr	r2, [r7, #4]
 80026f4:	1ad3      	subs	r3, r2, r3
 80026f6:	ee07 3a90 	vmov	s15, r3
 80026fa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80026fe:	ee17 0a90 	vmov	r0, s15
 8002702:	f7fd ff41 	bl	8000588 <__aeabi_f2d>
 8002706:	4680      	mov	r8, r0
 8002708:	4689      	mov	r9, r1
 800270a:	4b85      	ldr	r3, [pc, #532]	; (8002920 <Control_Task+0x290>)
 800270c:	edd3 7a00 	vldr	s15, [r3]
 8002710:	eef0 7ae7 	vabs.f32	s15, s15
 8002714:	ee17 0a90 	vmov	r0, s15
 8002718:	f7fd ff36 	bl	8000588 <__aeabi_f2d>
 800271c:	4602      	mov	r2, r0
 800271e:	460b      	mov	r3, r1
 8002720:	4640      	mov	r0, r8
 8002722:	4649      	mov	r1, r9
 8002724:	f7fd ff88 	bl	8000638 <__aeabi_dmul>
 8002728:	4602      	mov	r2, r0
 800272a:	460b      	mov	r3, r1
 800272c:	4610      	mov	r0, r2
 800272e:	4619      	mov	r1, r3
 8002730:	a373      	add	r3, pc, #460	; (adr r3, 8002900 <Control_Task+0x270>)
 8002732:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002736:	f7fe f8a9 	bl	800088c <__aeabi_ddiv>
 800273a:	4602      	mov	r2, r0
 800273c:	460b      	mov	r3, r1
 800273e:	4620      	mov	r0, r4
 8002740:	4629      	mov	r1, r5
 8002742:	f7fd fdc3 	bl	80002cc <__adddf3>
 8002746:	4602      	mov	r2, r0
 8002748:	460b      	mov	r3, r1
 800274a:	4610      	mov	r0, r2
 800274c:	4619      	mov	r1, r3
 800274e:	f7fe fa4b 	bl	8000be8 <__aeabi_d2f>
 8002752:	4603      	mov	r3, r0
 8002754:	4a70      	ldr	r2, [pc, #448]	; (8002918 <Control_Task+0x288>)
 8002756:	6013      	str	r3, [r2, #0]
		if(s>sMAX)nodeDetected=1;
 8002758:	4b72      	ldr	r3, [pc, #456]	; (8002924 <Control_Task+0x294>)
 800275a:	681b      	ldr	r3, [r3, #0]
 800275c:	ee07 3a90 	vmov	s15, r3
 8002760:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8002764:	4b6c      	ldr	r3, [pc, #432]	; (8002918 <Control_Task+0x288>)
 8002766:	edd3 7a00 	vldr	s15, [r3]
 800276a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800276e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002772:	d502      	bpl.n	800277a <Control_Task+0xea>
 8002774:	4b6c      	ldr	r3, [pc, #432]	; (8002928 <Control_Task+0x298>)
 8002776:	2201      	movs	r2, #1
 8002778:	701a      	strb	r2, [r3, #0]

	}
	tick_prev=tick;//mostantól mérjük az időt
 800277a:	4a68      	ldr	r2, [pc, #416]	; (800291c <Control_Task+0x28c>)
 800277c:	687b      	ldr	r3, [r7, #4]
 800277e:	6013      	str	r3, [r2, #0]

	//ha odaértünk a myPositionbe, akkor indulhat a mozgás a nextPosition felé
	if(nodeDetected)
 8002780:	4b69      	ldr	r3, [pc, #420]	; (8002928 <Control_Task+0x298>)
 8002782:	781b      	ldrb	r3, [r3, #0]
 8002784:	2b00      	cmp	r3, #0
 8002786:	f000 80eb 	beq.w	8002960 <Control_Task+0x2d0>
	{
		LED_B_TOGGLE;
 800278a:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800278e:	4867      	ldr	r0, [pc, #412]	; (800292c <Control_Task+0x29c>)
 8002790:	f006 fd6d 	bl	800926e <HAL_GPIO_TogglePin>
		if(N(pos[NEXT]).type>2)//ha a kövi node-on nincs kapu
 8002794:	4b5e      	ldr	r3, [pc, #376]	; (8002910 <Control_Task+0x280>)
 8002796:	785b      	ldrb	r3, [r3, #1]
 8002798:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800279c:	495d      	ldr	r1, [pc, #372]	; (8002914 <Control_Task+0x284>)
 800279e:	4613      	mov	r3, r2
 80027a0:	009b      	lsls	r3, r3, #2
 80027a2:	4413      	add	r3, r2
 80027a4:	00db      	lsls	r3, r3, #3
 80027a6:	440b      	add	r3, r1
 80027a8:	3308      	adds	r3, #8
 80027aa:	681b      	ldr	r3, [r3, #0]
 80027ac:	2b02      	cmp	r3, #2
 80027ae:	d917      	bls.n	80027e0 <Control_Task+0x150>
		{
			s=0;
 80027b0:	4b59      	ldr	r3, [pc, #356]	; (8002918 <Control_Task+0x288>)
 80027b2:	f04f 0200 	mov.w	r2, #0
 80027b6:	601a      	str	r2, [r3, #0]
			sMAX=N(pos[MY]).distance[bestNb[NEXT]]+25;
 80027b8:	4b55      	ldr	r3, [pc, #340]	; (8002910 <Control_Task+0x280>)
 80027ba:	781b      	ldrb	r3, [r3, #0]
 80027bc:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80027c0:	4b5b      	ldr	r3, [pc, #364]	; (8002930 <Control_Task+0x2a0>)
 80027c2:	785b      	ldrb	r3, [r3, #1]
 80027c4:	4618      	mov	r0, r3
 80027c6:	4953      	ldr	r1, [pc, #332]	; (8002914 <Control_Task+0x284>)
 80027c8:	4613      	mov	r3, r2
 80027ca:	009b      	lsls	r3, r3, #2
 80027cc:	4413      	add	r3, r2
 80027ce:	009b      	lsls	r3, r3, #2
 80027d0:	4403      	add	r3, r0
 80027d2:	330c      	adds	r3, #12
 80027d4:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80027d8:	3319      	adds	r3, #25
 80027da:	461a      	mov	r2, r3
 80027dc:	4b51      	ldr	r3, [pc, #324]	; (8002924 <Control_Task+0x294>)
 80027de:	601a      	str	r2, [r3, #0]
		}

		//pontok nyugtázása
		if(!laneChange)//ha nem sávváltó üzemmódban vagyunk pontotszámolunk és felszedett kapukat nullázzuk
 80027e0:	4b54      	ldr	r3, [pc, #336]	; (8002934 <Control_Task+0x2a4>)
 80027e2:	781b      	ldrb	r3, [r3, #0]
 80027e4:	2b00      	cmp	r3, #0
 80027e6:	d11f      	bne.n	8002828 <Control_Task+0x198>
		{
			collectedPoints +=N(pos[MY]).worth;//sávváltás módik vizsgáljuk az össezgyűjtött kapuk számát
 80027e8:	4b49      	ldr	r3, [pc, #292]	; (8002910 <Control_Task+0x280>)
 80027ea:	781b      	ldrb	r3, [r3, #0]
 80027ec:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80027f0:	4948      	ldr	r1, [pc, #288]	; (8002914 <Control_Task+0x284>)
 80027f2:	4613      	mov	r3, r2
 80027f4:	009b      	lsls	r3, r3, #2
 80027f6:	4413      	add	r3, r2
 80027f8:	00db      	lsls	r3, r3, #3
 80027fa:	440b      	add	r3, r1
 80027fc:	3304      	adds	r3, #4
 80027fe:	681b      	ldr	r3, [r3, #0]
 8002800:	b2da      	uxtb	r2, r3
 8002802:	4b4d      	ldr	r3, [pc, #308]	; (8002938 <Control_Task+0x2a8>)
 8002804:	781b      	ldrb	r3, [r3, #0]
 8002806:	4413      	add	r3, r2
 8002808:	b2da      	uxtb	r2, r3
 800280a:	4b4b      	ldr	r3, [pc, #300]	; (8002938 <Control_Task+0x2a8>)
 800280c:	701a      	strb	r2, [r3, #0]
			N(pos[MY]).worth=0;//ez a kapu már nem ér pontot
 800280e:	4b40      	ldr	r3, [pc, #256]	; (8002910 <Control_Task+0x280>)
 8002810:	781b      	ldrb	r3, [r3, #0]
 8002812:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002816:	493f      	ldr	r1, [pc, #252]	; (8002914 <Control_Task+0x284>)
 8002818:	4613      	mov	r3, r2
 800281a:	009b      	lsls	r3, r3, #2
 800281c:	4413      	add	r3, r2
 800281e:	00db      	lsls	r3, r3, #3
 8002820:	440b      	add	r3, r1
 8002822:	3304      	adds	r3, #4
 8002824:	2200      	movs	r2, #0
 8002826:	601a      	str	r2, [r3, #0]
		}

		if(collectedPoints >= 34 && !laneChange) //átváltás lane change módba
 8002828:	4b43      	ldr	r3, [pc, #268]	; (8002938 <Control_Task+0x2a8>)
 800282a:	781b      	ldrb	r3, [r3, #0]
 800282c:	2b21      	cmp	r3, #33	; 0x21
 800282e:	d90e      	bls.n	800284e <Control_Task+0x1be>
 8002830:	4b40      	ldr	r3, [pc, #256]	; (8002934 <Control_Task+0x2a4>)
 8002832:	781b      	ldrb	r3, [r3, #0]
 8002834:	2b00      	cmp	r3, #0
 8002836:	d10a      	bne.n	800284e <Control_Task+0x1be>
		{
			laneChange=1; //flag állítás
 8002838:	4b3e      	ldr	r3, [pc, #248]	; (8002934 <Control_Task+0x2a4>)
 800283a:	2201      	movs	r2, #1
 800283c:	701a      	strb	r2, [r3, #0]
			Lane_Change_Init(); //a sávváltóhely felé nőnek a rewardok
 800283e:	f001 f9b3 	bl	8003ba8 <Lane_Change_Init>
			LED_Y(1); //sárga led világít
 8002842:	2200      	movs	r2, #0
 8002844:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8002848:	4838      	ldr	r0, [pc, #224]	; (800292c <Control_Task+0x29c>)
 800284a:	f006 fcf7 	bl	800923c <HAL_GPIO_WritePin>
		}

		if(laneChange==1 && pos[MY]=='V' && pos[NEXT]=='U')//ha a tett színhelyén vagyunk
 800284e:	4b39      	ldr	r3, [pc, #228]	; (8002934 <Control_Task+0x2a4>)
 8002850:	781b      	ldrb	r3, [r3, #0]
 8002852:	2b01      	cmp	r3, #1
 8002854:	d10a      	bne.n	800286c <Control_Task+0x1dc>
 8002856:	4b2e      	ldr	r3, [pc, #184]	; (8002910 <Control_Task+0x280>)
 8002858:	781b      	ldrb	r3, [r3, #0]
 800285a:	2b56      	cmp	r3, #86	; 0x56
 800285c:	d106      	bne.n	800286c <Control_Task+0x1dc>
 800285e:	4b2c      	ldr	r3, [pc, #176]	; (8002910 <Control_Task+0x280>)
 8002860:	785b      	ldrb	r3, [r3, #1]
 8002862:	2b55      	cmp	r3, #85	; 0x55
 8002864:	d102      	bne.n	800286c <Control_Task+0x1dc>
		{
			laneChange=2;
 8002866:	4b33      	ldr	r3, [pc, #204]	; (8002934 <Control_Task+0x2a4>)
 8002868:	2202      	movs	r2, #2
 800286a:	701a      	strb	r2, [r3, #0]
		}

		static char str[15]; //kiiratás
		sprintf(str,"d,d,%2d\n\r",(int)collectedPoints);
 800286c:	4b32      	ldr	r3, [pc, #200]	; (8002938 <Control_Task+0x2a8>)
 800286e:	781b      	ldrb	r3, [r3, #0]
 8002870:	461a      	mov	r2, r3
 8002872:	4932      	ldr	r1, [pc, #200]	; (800293c <Control_Task+0x2ac>)
 8002874:	4832      	ldr	r0, [pc, #200]	; (8002940 <Control_Task+0x2b0>)
 8002876:	f00a ff9d 	bl	800d7b4 <siprintf>
		str[0]=pos[MY];
 800287a:	4b25      	ldr	r3, [pc, #148]	; (8002910 <Control_Task+0x280>)
 800287c:	781a      	ldrb	r2, [r3, #0]
 800287e:	4b30      	ldr	r3, [pc, #192]	; (8002940 <Control_Task+0x2b0>)
 8002880:	701a      	strb	r2, [r3, #0]
		str[2]=pos[NEXT];
 8002882:	4b23      	ldr	r3, [pc, #140]	; (8002910 <Control_Task+0x280>)
 8002884:	785a      	ldrb	r2, [r3, #1]
 8002886:	4b2e      	ldr	r3, [pc, #184]	; (8002940 <Control_Task+0x2b0>)
 8002888:	709a      	strb	r2, [r3, #2]
		HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 2);
 800288a:	482d      	ldr	r0, [pc, #180]	; (8002940 <Control_Task+0x2b0>)
 800288c:	f7fd fcc0 	bl	8000210 <strlen>
 8002890:	4603      	mov	r3, r0
 8002892:	b29a      	uxth	r2, r3
 8002894:	2302      	movs	r3, #2
 8002896:	492a      	ldr	r1, [pc, #168]	; (8002940 <Control_Task+0x2b0>)
 8002898:	68f8      	ldr	r0, [r7, #12]
 800289a:	f009 fa22 	bl	800bce2 <HAL_UART_Transmit>

		if(Cross_Collision(pos[MY], pos[NEXT]))
 800289e:	4b1c      	ldr	r3, [pc, #112]	; (8002910 <Control_Task+0x280>)
 80028a0:	781b      	ldrb	r3, [r3, #0]
 80028a2:	4a1b      	ldr	r2, [pc, #108]	; (8002910 <Control_Task+0x280>)
 80028a4:	7852      	ldrb	r2, [r2, #1]
 80028a6:	4611      	mov	r1, r2
 80028a8:	4618      	mov	r0, r3
 80028aa:	f001 f9e7 	bl	8003c7c <Cross_Collision>
 80028ae:	4603      	mov	r3, r0
 80028b0:	2b00      	cmp	r3, #0
 80028b2:	d00b      	beq.n	80028cc <Control_Task+0x23c>
		{
			control_task_state = WAIT;
 80028b4:	4b23      	ldr	r3, [pc, #140]	; (8002944 <Control_Task+0x2b4>)
 80028b6:	2207      	movs	r2, #7
 80028b8:	701a      	strb	r2, [r3, #0]
			t_stamp=tick;
 80028ba:	4a23      	ldr	r2, [pc, #140]	; (8002948 <Control_Task+0x2b8>)
 80028bc:	687b      	ldr	r3, [r7, #4]
 80028be:	6013      	str	r3, [r2, #0]
			LED_G(1);
 80028c0:	2200      	movs	r2, #0
 80028c2:	2102      	movs	r1, #2
 80028c4:	4819      	ldr	r0, [pc, #100]	; (800292c <Control_Task+0x29c>)
 80028c6:	f006 fcb9 	bl	800923c <HAL_GPIO_WritePin>
 80028ca:	e002      	b.n	80028d2 <Control_Task+0x242>
		}
		else control_task_state = NEIGHBOUR1;
 80028cc:	4b1d      	ldr	r3, [pc, #116]	; (8002944 <Control_Task+0x2b4>)
 80028ce:	2200      	movs	r2, #0
 80028d0:	701a      	strb	r2, [r3, #0]

		pos[MY]=pos[NEXT];
 80028d2:	4b0f      	ldr	r3, [pc, #60]	; (8002910 <Control_Task+0x280>)
 80028d4:	785a      	ldrb	r2, [r3, #1]
 80028d6:	4b0e      	ldr	r3, [pc, #56]	; (8002910 <Control_Task+0x280>)
 80028d8:	701a      	strb	r2, [r3, #0]
		path=nextPath;
 80028da:	4b1c      	ldr	r3, [pc, #112]	; (800294c <Control_Task+0x2bc>)
 80028dc:	781a      	ldrb	r2, [r3, #0]
 80028de:	4b1c      	ldr	r3, [pc, #112]	; (8002950 <Control_Task+0x2c0>)
 80028e0:	701a      	strb	r2, [r3, #0]
		dir[MY]=dir[NEXT];
 80028e2:	4b1c      	ldr	r3, [pc, #112]	; (8002954 <Control_Task+0x2c4>)
 80028e4:	785a      	ldrb	r2, [r3, #1]
 80028e6:	4b1b      	ldr	r3, [pc, #108]	; (8002954 <Control_Task+0x2c4>)
 80028e8:	701a      	strb	r2, [r3, #0]
		orientation=nextOri;//FORWARD
 80028ea:	4b1b      	ldr	r3, [pc, #108]	; (8002958 <Control_Task+0x2c8>)
 80028ec:	781a      	ldrb	r2, [r3, #0]
 80028ee:	4b1b      	ldr	r3, [pc, #108]	; (800295c <Control_Task+0x2cc>)
 80028f0:	701a      	strb	r2, [r3, #0]

		nodeDetected=0;
 80028f2:	4b0d      	ldr	r3, [pc, #52]	; (8002928 <Control_Task+0x298>)
 80028f4:	2200      	movs	r2, #0
 80028f6:	701a      	strb	r2, [r3, #0]
		return;
 80028f8:	e2ba      	b.n	8002e70 <Control_Task+0x7e0>
 80028fa:	bf00      	nop
 80028fc:	f3af 8000 	nop.w
 8002900:	00000000 	.word	0x00000000
 8002904:	40c38800 	.word	0x40c38800
 8002908:	200006d0 	.word	0x200006d0
 800290c:	2000033e 	.word	0x2000033e
 8002910:	20000000 	.word	0x20000000
 8002914:	20000360 	.word	0x20000360
 8002918:	200006d4 	.word	0x200006d4
 800291c:	200006d8 	.word	0x200006d8
 8002920:	20000758 	.word	0x20000758
 8002924:	20000004 	.word	0x20000004
 8002928:	2000034d 	.word	0x2000034d
 800292c:	40020400 	.word	0x40020400
 8002930:	200006dc 	.word	0x200006dc
 8002934:	20000350 	.word	0x20000350
 8002938:	2000034f 	.word	0x2000034f
 800293c:	08011208 	.word	0x08011208
 8002940:	200006e0 	.word	0x200006e0
 8002944:	200006ef 	.word	0x200006ef
 8002948:	200006f0 	.word	0x200006f0
 800294c:	200006f4 	.word	0x200006f4
 8002950:	2000034e 	.word	0x2000034e
 8002954:	20000008 	.word	0x20000008
 8002958:	200006f5 	.word	0x200006f5
 800295c:	2000034c 	.word	0x2000034c
	}

	if(thunderboardFlag)//ha új kalózpozíció jött a TB-től ujrakezdjük a számolást (első szomszéd vizsgálata jön)
 8002960:	4b95      	ldr	r3, [pc, #596]	; (8002bb8 <Control_Task+0x528>)
 8002962:	781b      	ldrb	r3, [r3, #0]
 8002964:	b2db      	uxtb	r3, r3
 8002966:	2b00      	cmp	r3, #0
 8002968:	d05e      	beq.n	8002a28 <Control_Task+0x398>
	{
		if(piratePos_prev[1]!=piratePos[1] && !laneChange && piratePos[0] !='R')//a kalóz átment egy Node-on
 800296a:	4b94      	ldr	r3, [pc, #592]	; (8002bbc <Control_Task+0x52c>)
 800296c:	785a      	ldrb	r2, [r3, #1]
 800296e:	4b94      	ldr	r3, [pc, #592]	; (8002bc0 <Control_Task+0x530>)
 8002970:	785b      	ldrb	r3, [r3, #1]
 8002972:	429a      	cmp	r2, r3
 8002974:	d03e      	beq.n	80029f4 <Control_Task+0x364>
 8002976:	4b93      	ldr	r3, [pc, #588]	; (8002bc4 <Control_Task+0x534>)
 8002978:	781b      	ldrb	r3, [r3, #0]
 800297a:	2b00      	cmp	r3, #0
 800297c:	d13a      	bne.n	80029f4 <Control_Task+0x364>
 800297e:	4b90      	ldr	r3, [pc, #576]	; (8002bc0 <Control_Task+0x530>)
 8002980:	781b      	ldrb	r3, [r3, #0]
 8002982:	2b52      	cmp	r3, #82	; 0x52
 8002984:	d036      	beq.n	80029f4 <Control_Task+0x364>
		{
			if(N(piratePos[0]).worth > 0)
 8002986:	4b8e      	ldr	r3, [pc, #568]	; (8002bc0 <Control_Task+0x530>)
 8002988:	781b      	ldrb	r3, [r3, #0]
 800298a:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800298e:	498e      	ldr	r1, [pc, #568]	; (8002bc8 <Control_Task+0x538>)
 8002990:	4613      	mov	r3, r2
 8002992:	009b      	lsls	r3, r3, #2
 8002994:	4413      	add	r3, r2
 8002996:	00db      	lsls	r3, r3, #3
 8002998:	440b      	add	r3, r1
 800299a:	3304      	adds	r3, #4
 800299c:	681b      	ldr	r3, [r3, #0]
 800299e:	2b00      	cmp	r3, #0
 80029a0:	dd1b      	ble.n	80029da <Control_Task+0x34a>
			{
				N(piratePos[0]).worth--; //az a node már kevesebbet ér
 80029a2:	4b87      	ldr	r3, [pc, #540]	; (8002bc0 <Control_Task+0x530>)
 80029a4:	781b      	ldrb	r3, [r3, #0]
 80029a6:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80029aa:	4987      	ldr	r1, [pc, #540]	; (8002bc8 <Control_Task+0x538>)
 80029ac:	4613      	mov	r3, r2
 80029ae:	009b      	lsls	r3, r3, #2
 80029b0:	4413      	add	r3, r2
 80029b2:	00db      	lsls	r3, r3, #3
 80029b4:	440b      	add	r3, r1
 80029b6:	3304      	adds	r3, #4
 80029b8:	681b      	ldr	r3, [r3, #0]
 80029ba:	1e59      	subs	r1, r3, #1
 80029bc:	4882      	ldr	r0, [pc, #520]	; (8002bc8 <Control_Task+0x538>)
 80029be:	4613      	mov	r3, r2
 80029c0:	009b      	lsls	r3, r3, #2
 80029c2:	4413      	add	r3, r2
 80029c4:	00db      	lsls	r3, r3, #3
 80029c6:	4403      	add	r3, r0
 80029c8:	3304      	adds	r3, #4
 80029ca:	6019      	str	r1, [r3, #0]
				collectedPoints ++;
 80029cc:	4b7f      	ldr	r3, [pc, #508]	; (8002bcc <Control_Task+0x53c>)
 80029ce:	781b      	ldrb	r3, [r3, #0]
 80029d0:	3301      	adds	r3, #1
 80029d2:	b2da      	uxtb	r2, r3
 80029d4:	4b7d      	ldr	r3, [pc, #500]	; (8002bcc <Control_Task+0x53c>)
 80029d6:	701a      	strb	r2, [r3, #0]
 80029d8:	e00c      	b.n	80029f4 <Control_Task+0x364>
			}
			else N(piratePos[0]).worth=0;
 80029da:	4b79      	ldr	r3, [pc, #484]	; (8002bc0 <Control_Task+0x530>)
 80029dc:	781b      	ldrb	r3, [r3, #0]
 80029de:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80029e2:	4979      	ldr	r1, [pc, #484]	; (8002bc8 <Control_Task+0x538>)
 80029e4:	4613      	mov	r3, r2
 80029e6:	009b      	lsls	r3, r3, #2
 80029e8:	4413      	add	r3, r2
 80029ea:	00db      	lsls	r3, r3, #3
 80029ec:	440b      	add	r3, r1
 80029ee:	3304      	adds	r3, #4
 80029f0:	2200      	movs	r2, #0
 80029f2:	601a      	str	r2, [r3, #0]
		}
		if(control_task_state!=WAIT)//wait állapotból nem tud mindekt kibillenteni az új kalózrobot pozíció
 80029f4:	4b76      	ldr	r3, [pc, #472]	; (8002bd0 <Control_Task+0x540>)
 80029f6:	781b      	ldrb	r3, [r3, #0]
 80029f8:	2b07      	cmp	r3, #7
 80029fa:	d002      	beq.n	8002a02 <Control_Task+0x372>
			control_task_state=NEIGHBOUR1;//kezdjük előrröl a fitneszérték számítást az 1. szomszédtól
 80029fc:	4b74      	ldr	r3, [pc, #464]	; (8002bd0 <Control_Task+0x540>)
 80029fe:	2200      	movs	r2, #0
 8002a00:	701a      	strb	r2, [r3, #0]

		piratePos_prev[0]=piratePos[0];//előző kalozpozíció frissítése
 8002a02:	4b6f      	ldr	r3, [pc, #444]	; (8002bc0 <Control_Task+0x530>)
 8002a04:	781a      	ldrb	r2, [r3, #0]
 8002a06:	4b6d      	ldr	r3, [pc, #436]	; (8002bbc <Control_Task+0x52c>)
 8002a08:	701a      	strb	r2, [r3, #0]
		piratePos_prev[1]=piratePos[1];
 8002a0a:	4b6d      	ldr	r3, [pc, #436]	; (8002bc0 <Control_Task+0x530>)
 8002a0c:	785a      	ldrb	r2, [r3, #1]
 8002a0e:	4b6b      	ldr	r3, [pc, #428]	; (8002bbc <Control_Task+0x52c>)
 8002a10:	705a      	strb	r2, [r3, #1]
		piratePos_prev[2]=piratePos[2];
 8002a12:	4b6b      	ldr	r3, [pc, #428]	; (8002bc0 <Control_Task+0x530>)
 8002a14:	789a      	ldrb	r2, [r3, #2]
 8002a16:	4b69      	ldr	r3, [pc, #420]	; (8002bbc <Control_Task+0x52c>)
 8002a18:	709a      	strb	r2, [r3, #2]
		piratePos_prev[3]=piratePos[3];
 8002a1a:	4b69      	ldr	r3, [pc, #420]	; (8002bc0 <Control_Task+0x530>)
 8002a1c:	78da      	ldrb	r2, [r3, #3]
 8002a1e:	4b67      	ldr	r3, [pc, #412]	; (8002bbc <Control_Task+0x52c>)
 8002a20:	70da      	strb	r2, [r3, #3]

		thunderboardFlag=0; //várjuk az újabb kalózrobot pozíciókat a thunderboardtól
 8002a22:	4b65      	ldr	r3, [pc, #404]	; (8002bb8 <Control_Task+0x528>)
 8002a24:	2200      	movs	r2, #0
 8002a26:	701a      	strb	r2, [r3, #0]
	}
	if(!piratePos_prev[0])return;
 8002a28:	4b64      	ldr	r3, [pc, #400]	; (8002bbc <Control_Task+0x52c>)
 8002a2a:	781b      	ldrb	r3, [r3, #0]
 8002a2c:	2b00      	cmp	r3, #0
 8002a2e:	f000 821e 	beq.w	8002e6e <Control_Task+0x7de>


	/******************LEGJOBB SZOMSZÉD KIVÁLASZTÁSA (első 4 állapot)******************/
	if(control_task_state < EVALUATE)//1.szomszéd/2.szomszéd/3.szomszéd/4.szomszéd
 8002a32:	4b67      	ldr	r3, [pc, #412]	; (8002bd0 <Control_Task+0x540>)
 8002a34:	781b      	ldrb	r3, [r3, #0]
 8002a36:	2b05      	cmp	r3, #5
 8002a38:	f200 814c 	bhi.w	8002cd4 <Control_Task+0x644>
	{
		if(control_task_state==NEIGHBOUR1)
 8002a3c:	4b64      	ldr	r3, [pc, #400]	; (8002bd0 <Control_Task+0x540>)
 8002a3e:	781b      	ldrb	r3, [r3, #0]
 8002a40:	2b00      	cmp	r3, #0
 8002a42:	d102      	bne.n	8002a4a <Control_Task+0x3ba>
		{
			bestFitness=-200.0;//az előző számolás legjob fitneszértéke volt még benne
 8002a44:	4b63      	ldr	r3, [pc, #396]	; (8002bd4 <Control_Task+0x544>)
 8002a46:	4a64      	ldr	r2, [pc, #400]	; (8002bd8 <Control_Task+0x548>)
 8002a48:	601a      	str	r2, [r3, #0]
		}
		nID=N(pos[MY]).neighbours[control_task_state]; //a vizsgált 1.rendű szomszéd azonosítója
 8002a4a:	4b64      	ldr	r3, [pc, #400]	; (8002bdc <Control_Task+0x54c>)
 8002a4c:	781b      	ldrb	r3, [r3, #0]
 8002a4e:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002a52:	4b5f      	ldr	r3, [pc, #380]	; (8002bd0 <Control_Task+0x540>)
 8002a54:	781b      	ldrb	r3, [r3, #0]
 8002a56:	4618      	mov	r0, r3
 8002a58:	495b      	ldr	r1, [pc, #364]	; (8002bc8 <Control_Task+0x538>)
 8002a5a:	4613      	mov	r3, r2
 8002a5c:	009b      	lsls	r3, r3, #2
 8002a5e:	4413      	add	r3, r2
 8002a60:	00db      	lsls	r3, r3, #3
 8002a62:	440b      	add	r3, r1
 8002a64:	4403      	add	r3, r0
 8002a66:	330c      	adds	r3, #12
 8002a68:	781b      	ldrb	r3, [r3, #0]
 8002a6a:	76fb      	strb	r3, [r7, #27]
		if(nID) //ha létezik a szomszéd
 8002a6c:	7efb      	ldrb	r3, [r7, #27]
 8002a6e:	2b00      	cmp	r3, #0
 8002a70:	f000 8107 	beq.w	8002c82 <Control_Task+0x5f2>
		{
			fitness[control_task_state]=(float)N(nID).worth; //fitneszérték 1.rendű szomszéd alapján
 8002a74:	7efb      	ldrb	r3, [r7, #27]
 8002a76:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002a7a:	4953      	ldr	r1, [pc, #332]	; (8002bc8 <Control_Task+0x538>)
 8002a7c:	4613      	mov	r3, r2
 8002a7e:	009b      	lsls	r3, r3, #2
 8002a80:	4413      	add	r3, r2
 8002a82:	00db      	lsls	r3, r3, #3
 8002a84:	440b      	add	r3, r1
 8002a86:	3304      	adds	r3, #4
 8002a88:	681a      	ldr	r2, [r3, #0]
 8002a8a:	4b51      	ldr	r3, [pc, #324]	; (8002bd0 <Control_Task+0x540>)
 8002a8c:	781b      	ldrb	r3, [r3, #0]
 8002a8e:	ee07 2a90 	vmov	s15, r2
 8002a92:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002a96:	4a52      	ldr	r2, [pc, #328]	; (8002be0 <Control_Task+0x550>)
 8002a98:	009b      	lsls	r3, r3, #2
 8002a9a:	4413      	add	r3, r2
 8002a9c:	edc3 7a00 	vstr	s15, [r3]
			//kalozrobot hatása az 1.rendű szomszéd esetén
			if(piratePos[1]==nID) fitness[control_task_state] -= 80/*P*/;//ha a kalóz is ebbe az 1.rendű tart éppen akkor kerüljük el az ütközést
 8002aa0:	4b47      	ldr	r3, [pc, #284]	; (8002bc0 <Control_Task+0x530>)
 8002aa2:	785b      	ldrb	r3, [r3, #1]
 8002aa4:	7efa      	ldrb	r2, [r7, #27]
 8002aa6:	429a      	cmp	r2, r3
 8002aa8:	d112      	bne.n	8002ad0 <Control_Task+0x440>
 8002aaa:	4b49      	ldr	r3, [pc, #292]	; (8002bd0 <Control_Task+0x540>)
 8002aac:	781b      	ldrb	r3, [r3, #0]
 8002aae:	4a4c      	ldr	r2, [pc, #304]	; (8002be0 <Control_Task+0x550>)
 8002ab0:	009b      	lsls	r3, r3, #2
 8002ab2:	4413      	add	r3, r2
 8002ab4:	edd3 7a00 	vldr	s15, [r3]
 8002ab8:	4b45      	ldr	r3, [pc, #276]	; (8002bd0 <Control_Task+0x540>)
 8002aba:	781b      	ldrb	r3, [r3, #0]
 8002abc:	ed9f 7a49 	vldr	s14, [pc, #292]	; 8002be4 <Control_Task+0x554>
 8002ac0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002ac4:	4a46      	ldr	r2, [pc, #280]	; (8002be0 <Control_Task+0x550>)
 8002ac6:	009b      	lsls	r3, r3, #2
 8002ac8:	4413      	add	r3, r2
 8002aca:	edc3 7a00 	vstr	s15, [r3]
 8002ace:	e06f      	b.n	8002bb0 <Control_Task+0x520>
			else if(piratePos[2]==nID) fitness[control_task_state] -= 60/*P*/;//ha még csak tervezi, hogy odamegy, akkor is kerüljük a pontot
 8002ad0:	4b3b      	ldr	r3, [pc, #236]	; (8002bc0 <Control_Task+0x530>)
 8002ad2:	789b      	ldrb	r3, [r3, #2]
 8002ad4:	7efa      	ldrb	r2, [r7, #27]
 8002ad6:	429a      	cmp	r2, r3
 8002ad8:	d112      	bne.n	8002b00 <Control_Task+0x470>
 8002ada:	4b3d      	ldr	r3, [pc, #244]	; (8002bd0 <Control_Task+0x540>)
 8002adc:	781b      	ldrb	r3, [r3, #0]
 8002ade:	4a40      	ldr	r2, [pc, #256]	; (8002be0 <Control_Task+0x550>)
 8002ae0:	009b      	lsls	r3, r3, #2
 8002ae2:	4413      	add	r3, r2
 8002ae4:	edd3 7a00 	vldr	s15, [r3]
 8002ae8:	4b39      	ldr	r3, [pc, #228]	; (8002bd0 <Control_Task+0x540>)
 8002aea:	781b      	ldrb	r3, [r3, #0]
 8002aec:	ed9f 7a3e 	vldr	s14, [pc, #248]	; 8002be8 <Control_Task+0x558>
 8002af0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002af4:	4a3a      	ldr	r2, [pc, #232]	; (8002be0 <Control_Task+0x550>)
 8002af6:	009b      	lsls	r3, r3, #2
 8002af8:	4413      	add	r3, r2
 8002afa:	edc3 7a00 	vstr	s15, [r3]
 8002afe:	e057      	b.n	8002bb0 <Control_Task+0x520>
			else if(piratePos[0]==nID)//ha elhaygta azt  apontot akkor 3 szomszédot is büntetünk
 8002b00:	4b2f      	ldr	r3, [pc, #188]	; (8002bc0 <Control_Task+0x530>)
 8002b02:	781b      	ldrb	r3, [r3, #0]
 8002b04:	7efa      	ldrb	r2, [r7, #27]
 8002b06:	429a      	cmp	r2, r3
 8002b08:	d152      	bne.n	8002bb0 <Control_Task+0x520>
			{
				fitness[control_task_state] -= 20;
 8002b0a:	4b31      	ldr	r3, [pc, #196]	; (8002bd0 <Control_Task+0x540>)
 8002b0c:	781b      	ldrb	r3, [r3, #0]
 8002b0e:	4a34      	ldr	r2, [pc, #208]	; (8002be0 <Control_Task+0x550>)
 8002b10:	009b      	lsls	r3, r3, #2
 8002b12:	4413      	add	r3, r2
 8002b14:	edd3 7a00 	vldr	s15, [r3]
 8002b18:	4b2d      	ldr	r3, [pc, #180]	; (8002bd0 <Control_Task+0x540>)
 8002b1a:	781b      	ldrb	r3, [r3, #0]
 8002b1c:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 8002b20:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002b24:	4a2e      	ldr	r2, [pc, #184]	; (8002be0 <Control_Task+0x550>)
 8002b26:	009b      	lsls	r3, r3, #2
 8002b28:	4413      	add	r3, r2
 8002b2a:	edc3 7a00 	vstr	s15, [r3]
				if(control_task_state<=NEIGHBOUR3)
 8002b2e:	4b28      	ldr	r3, [pc, #160]	; (8002bd0 <Control_Task+0x540>)
 8002b30:	781b      	ldrb	r3, [r3, #0]
 8002b32:	2b02      	cmp	r3, #2
 8002b34:	d81e      	bhi.n	8002b74 <Control_Task+0x4e4>
				{
					fitness[NEIGHBOUR1]-=60;
 8002b36:	4b2a      	ldr	r3, [pc, #168]	; (8002be0 <Control_Task+0x550>)
 8002b38:	edd3 7a00 	vldr	s15, [r3]
 8002b3c:	ed9f 7a2a 	vldr	s14, [pc, #168]	; 8002be8 <Control_Task+0x558>
 8002b40:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002b44:	4b26      	ldr	r3, [pc, #152]	; (8002be0 <Control_Task+0x550>)
 8002b46:	edc3 7a00 	vstr	s15, [r3]
					fitness[NEIGHBOUR2]-=60;
 8002b4a:	4b25      	ldr	r3, [pc, #148]	; (8002be0 <Control_Task+0x550>)
 8002b4c:	edd3 7a01 	vldr	s15, [r3, #4]
 8002b50:	ed9f 7a25 	vldr	s14, [pc, #148]	; 8002be8 <Control_Task+0x558>
 8002b54:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002b58:	4b21      	ldr	r3, [pc, #132]	; (8002be0 <Control_Task+0x550>)
 8002b5a:	edc3 7a01 	vstr	s15, [r3, #4]
					fitness[NEIGHBOUR3]-=60;
 8002b5e:	4b20      	ldr	r3, [pc, #128]	; (8002be0 <Control_Task+0x550>)
 8002b60:	edd3 7a02 	vldr	s15, [r3, #8]
 8002b64:	ed9f 7a20 	vldr	s14, [pc, #128]	; 8002be8 <Control_Task+0x558>
 8002b68:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002b6c:	4b1c      	ldr	r3, [pc, #112]	; (8002be0 <Control_Task+0x550>)
 8002b6e:	edc3 7a02 	vstr	s15, [r3, #8]
 8002b72:	e01d      	b.n	8002bb0 <Control_Task+0x520>
				}
				else
				{
					fitness[NEIGHBOUR4]-=60;
 8002b74:	4b1a      	ldr	r3, [pc, #104]	; (8002be0 <Control_Task+0x550>)
 8002b76:	edd3 7a03 	vldr	s15, [r3, #12]
 8002b7a:	ed9f 7a1b 	vldr	s14, [pc, #108]	; 8002be8 <Control_Task+0x558>
 8002b7e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002b82:	4b17      	ldr	r3, [pc, #92]	; (8002be0 <Control_Task+0x550>)
 8002b84:	edc3 7a03 	vstr	s15, [r3, #12]
					fitness[NEIGHBOUR5]-=60;
 8002b88:	4b15      	ldr	r3, [pc, #84]	; (8002be0 <Control_Task+0x550>)
 8002b8a:	edd3 7a04 	vldr	s15, [r3, #16]
 8002b8e:	ed9f 7a16 	vldr	s14, [pc, #88]	; 8002be8 <Control_Task+0x558>
 8002b92:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002b96:	4b12      	ldr	r3, [pc, #72]	; (8002be0 <Control_Task+0x550>)
 8002b98:	edc3 7a04 	vstr	s15, [r3, #16]
					fitness[NEIGHBOUR6]-=60;
 8002b9c:	4b10      	ldr	r3, [pc, #64]	; (8002be0 <Control_Task+0x550>)
 8002b9e:	edd3 7a05 	vldr	s15, [r3, #20]
 8002ba2:	ed9f 7a11 	vldr	s14, [pc, #68]	; 8002be8 <Control_Task+0x558>
 8002ba6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002baa:	4b0d      	ldr	r3, [pc, #52]	; (8002be0 <Control_Task+0x550>)
 8002bac:	edc3 7a05 	vstr	s15, [r3, #20]
				}
			}
			int i;
			uint8_t nnID;
			float nnFit;
			for(i=0;i<6;i++)//2.rednű szomszédok
 8002bb0:	2300      	movs	r3, #0
 8002bb2:	61fb      	str	r3, [r7, #28]
 8002bb4:	e061      	b.n	8002c7a <Control_Task+0x5ea>
 8002bb6:	bf00      	nop
 8002bb8:	20000352 	.word	0x20000352
 8002bbc:	200006f8 	.word	0x200006f8
 8002bc0:	2000035c 	.word	0x2000035c
 8002bc4:	20000350 	.word	0x20000350
 8002bc8:	20000360 	.word	0x20000360
 8002bcc:	2000034f 	.word	0x2000034f
 8002bd0:	200006ef 	.word	0x200006ef
 8002bd4:	2000000c 	.word	0x2000000c
 8002bd8:	c3480000 	.word	0xc3480000
 8002bdc:	20000000 	.word	0x20000000
 8002be0:	200006fc 	.word	0x200006fc
 8002be4:	42a00000 	.word	0x42a00000
 8002be8:	42700000 	.word	0x42700000
			{
				nnFit=0.0;
 8002bec:	f04f 0300 	mov.w	r3, #0
 8002bf0:	617b      	str	r3, [r7, #20]
				nnID=N(nID).neighbours[i]; //2.rednű szomszéd ID-ja
 8002bf2:	7efb      	ldrb	r3, [r7, #27]
 8002bf4:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002bf8:	499f      	ldr	r1, [pc, #636]	; (8002e78 <Control_Task+0x7e8>)
 8002bfa:	4613      	mov	r3, r2
 8002bfc:	009b      	lsls	r3, r3, #2
 8002bfe:	4413      	add	r3, r2
 8002c00:	00db      	lsls	r3, r3, #3
 8002c02:	18ca      	adds	r2, r1, r3
 8002c04:	69fb      	ldr	r3, [r7, #28]
 8002c06:	4413      	add	r3, r2
 8002c08:	330c      	adds	r3, #12
 8002c0a:	781b      	ldrb	r3, [r3, #0]
 8002c0c:	74fb      	strb	r3, [r7, #19]
				if(nnID && nnID!=pos[MY])//ha létezik a 2.rendű szomszéd (és nem a myposition az)
 8002c0e:	7cfb      	ldrb	r3, [r7, #19]
 8002c10:	2b00      	cmp	r3, #0
 8002c12:	d02f      	beq.n	8002c74 <Control_Task+0x5e4>
 8002c14:	4b99      	ldr	r3, [pc, #612]	; (8002e7c <Control_Task+0x7ec>)
 8002c16:	781b      	ldrb	r3, [r3, #0]
 8002c18:	7cfa      	ldrb	r2, [r7, #19]
 8002c1a:	429a      	cmp	r2, r3
 8002c1c:	d02a      	beq.n	8002c74 <Control_Task+0x5e4>
				{
					nnFit += (float)N(nnID).worth;
 8002c1e:	7cfb      	ldrb	r3, [r7, #19]
 8002c20:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002c24:	4994      	ldr	r1, [pc, #592]	; (8002e78 <Control_Task+0x7e8>)
 8002c26:	4613      	mov	r3, r2
 8002c28:	009b      	lsls	r3, r3, #2
 8002c2a:	4413      	add	r3, r2
 8002c2c:	00db      	lsls	r3, r3, #3
 8002c2e:	440b      	add	r3, r1
 8002c30:	3304      	adds	r3, #4
 8002c32:	681b      	ldr	r3, [r3, #0]
 8002c34:	ee07 3a90 	vmov	s15, r3
 8002c38:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002c3c:	ed97 7a05 	vldr	s14, [r7, #20]
 8002c40:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002c44:	edc7 7a05 	vstr	s15, [r7, #20]
					//if(piratePos[1]==nnID) nnFit -= 0.5/*P*/;//ha a kalóz is ebbe a pontba tart éppen akkor kerüljük el az ütközést
					//else if(piratePos[2]==nnID) fitness[control_task_state] -= 0.25/*P*/;//ha még csak tervezi, hogy odamegy, akkor se fogjuk tudni megelőnzi, mert mi 3 nodnyira vagyunk ő pedig csak 2
					//if(!lane_change)nnFit = nnFit * (float)DIST_AVG/N(nID).distance[i];//a 2.rendű szomszédhoz tartozó fitneszérték jobb ha az közelebb van az 1.rendű szomszédjához
					//ha a sávváltó szakaszt keressük akkor viszont nem díjazzuk a közelséget
					fitness[control_task_state] += nnFit/6/*P*/;
 8002c48:	4b8d      	ldr	r3, [pc, #564]	; (8002e80 <Control_Task+0x7f0>)
 8002c4a:	781b      	ldrb	r3, [r3, #0]
 8002c4c:	4a8d      	ldr	r2, [pc, #564]	; (8002e84 <Control_Task+0x7f4>)
 8002c4e:	009b      	lsls	r3, r3, #2
 8002c50:	4413      	add	r3, r2
 8002c52:	ed93 7a00 	vldr	s14, [r3]
 8002c56:	edd7 6a05 	vldr	s13, [r7, #20]
 8002c5a:	eeb1 6a08 	vmov.f32	s12, #24	; 0x40c00000  6.0
 8002c5e:	eec6 7a86 	vdiv.f32	s15, s13, s12
 8002c62:	4b87      	ldr	r3, [pc, #540]	; (8002e80 <Control_Task+0x7f0>)
 8002c64:	781b      	ldrb	r3, [r3, #0]
 8002c66:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002c6a:	4a86      	ldr	r2, [pc, #536]	; (8002e84 <Control_Task+0x7f4>)
 8002c6c:	009b      	lsls	r3, r3, #2
 8002c6e:	4413      	add	r3, r2
 8002c70:	edc3 7a00 	vstr	s15, [r3]
			for(i=0;i<6;i++)//2.rednű szomszédok
 8002c74:	69fb      	ldr	r3, [r7, #28]
 8002c76:	3301      	adds	r3, #1
 8002c78:	61fb      	str	r3, [r7, #28]
 8002c7a:	69fb      	ldr	r3, [r7, #28]
 8002c7c:	2b05      	cmp	r3, #5
 8002c7e:	ddb5      	ble.n	8002bec <Control_Task+0x55c>
 8002c80:	e006      	b.n	8002c90 <Control_Task+0x600>
				}
			}
			//if(!lane_change) fitness[control_task_state] =fitness[control_task_state] * (float)DIST_AVG/N(pos[MY]).distance[control_task_state]; //minél közelebb van a szomszéd annál jobb
			//ha a sávváltó szakaszt keressük akkor viszont nem díjazzuk a közelséget
		}
		else fitness[control_task_state]=-150.0;//ha nem létezik a szomszéd erre tuti ne menjünk
 8002c82:	4b7f      	ldr	r3, [pc, #508]	; (8002e80 <Control_Task+0x7f0>)
 8002c84:	781b      	ldrb	r3, [r3, #0]
 8002c86:	4a7f      	ldr	r2, [pc, #508]	; (8002e84 <Control_Task+0x7f4>)
 8002c88:	009b      	lsls	r3, r3, #2
 8002c8a:	4413      	add	r3, r2
 8002c8c:	4a7e      	ldr	r2, [pc, #504]	; (8002e88 <Control_Task+0x7f8>)
 8002c8e:	601a      	str	r2, [r3, #0]
		//uint16_t tmp= __HAL_TIM_GET_COUNTER(htim_rand)%2;
		if(fitness[control_task_state]>=bestFitness) //ha ez a fitness jobb mint az eddigi legjobb, akkor mostantól ez a legjobb
 8002c90:	4b7b      	ldr	r3, [pc, #492]	; (8002e80 <Control_Task+0x7f0>)
 8002c92:	781b      	ldrb	r3, [r3, #0]
 8002c94:	4a7b      	ldr	r2, [pc, #492]	; (8002e84 <Control_Task+0x7f4>)
 8002c96:	009b      	lsls	r3, r3, #2
 8002c98:	4413      	add	r3, r2
 8002c9a:	ed93 7a00 	vldr	s14, [r3]
 8002c9e:	4b7b      	ldr	r3, [pc, #492]	; (8002e8c <Control_Task+0x7fc>)
 8002ca0:	edd3 7a00 	vldr	s15, [r3]
 8002ca4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002ca8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002cac:	db0b      	blt.n	8002cc6 <Control_Task+0x636>
		{
			bestFitness=fitness[control_task_state];
 8002cae:	4b74      	ldr	r3, [pc, #464]	; (8002e80 <Control_Task+0x7f0>)
 8002cb0:	781b      	ldrb	r3, [r3, #0]
 8002cb2:	4a74      	ldr	r2, [pc, #464]	; (8002e84 <Control_Task+0x7f4>)
 8002cb4:	009b      	lsls	r3, r3, #2
 8002cb6:	4413      	add	r3, r2
 8002cb8:	681b      	ldr	r3, [r3, #0]
 8002cba:	4a74      	ldr	r2, [pc, #464]	; (8002e8c <Control_Task+0x7fc>)
 8002cbc:	6013      	str	r3, [r2, #0]
			bestNb[TMP] = control_task_state;//ez az egy érték amivel a task első 4 (fitnesszámoló) álapota kommunikál a kiértékelő álapottal
 8002cbe:	4b70      	ldr	r3, [pc, #448]	; (8002e80 <Control_Task+0x7f0>)
 8002cc0:	781a      	ldrb	r2, [r3, #0]
 8002cc2:	4b73      	ldr	r3, [pc, #460]	; (8002e90 <Control_Task+0x800>)
 8002cc4:	701a      	strb	r2, [r3, #0]
		}
		control_task_state++;
 8002cc6:	4b6e      	ldr	r3, [pc, #440]	; (8002e80 <Control_Task+0x7f0>)
 8002cc8:	781b      	ldrb	r3, [r3, #0]
 8002cca:	3301      	adds	r3, #1
 8002ccc:	b2da      	uxtb	r2, r3
 8002cce:	4b6c      	ldr	r3, [pc, #432]	; (8002e80 <Control_Task+0x7f0>)
 8002cd0:	701a      	strb	r2, [r3, #0]
		return; //ha csak valamelyik szomszédot vizsgáltuk még akkor eddig tartott ez a task futás, itt kilépünk
 8002cd2:	e0cd      	b.n	8002e70 <Control_Task+0x7e0>
	}
	/**************************************************************************************/
	//ide csak akkor jutunk el ha control_task_state>NEIGHBOUR4

	/**********************KIÉRTÉKELÉS (control_task_state=EVALUATE ->5.állapot)**********************/
	else if(control_task_state==EVALUATE)
 8002cd4:	4b6a      	ldr	r3, [pc, #424]	; (8002e80 <Control_Task+0x7f0>)
 8002cd6:	781b      	ldrb	r3, [r3, #0]
 8002cd8:	2b06      	cmp	r3, #6
 8002cda:	f040 80a6 	bne.w	8002e2a <Control_Task+0x79a>
	{
		if(bestFitness==0 && fitness[N(pos[MY]).middle]==0) bestNb[TMP]=N(pos[MY]).middle;
 8002cde:	4b6b      	ldr	r3, [pc, #428]	; (8002e8c <Control_Task+0x7fc>)
 8002ce0:	edd3 7a00 	vldr	s15, [r3]
 8002ce4:	eef5 7a40 	vcmp.f32	s15, #0.0
 8002ce8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002cec:	d123      	bne.n	8002d36 <Control_Task+0x6a6>
 8002cee:	4b63      	ldr	r3, [pc, #396]	; (8002e7c <Control_Task+0x7ec>)
 8002cf0:	781b      	ldrb	r3, [r3, #0]
 8002cf2:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002cf6:	4960      	ldr	r1, [pc, #384]	; (8002e78 <Control_Task+0x7e8>)
 8002cf8:	4613      	mov	r3, r2
 8002cfa:	009b      	lsls	r3, r3, #2
 8002cfc:	4413      	add	r3, r2
 8002cfe:	00db      	lsls	r3, r3, #3
 8002d00:	440b      	add	r3, r1
 8002d02:	3324      	adds	r3, #36	; 0x24
 8002d04:	781b      	ldrb	r3, [r3, #0]
 8002d06:	4a5f      	ldr	r2, [pc, #380]	; (8002e84 <Control_Task+0x7f4>)
 8002d08:	009b      	lsls	r3, r3, #2
 8002d0a:	4413      	add	r3, r2
 8002d0c:	edd3 7a00 	vldr	s15, [r3]
 8002d10:	eef5 7a40 	vcmp.f32	s15, #0.0
 8002d14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002d18:	d10d      	bne.n	8002d36 <Control_Task+0x6a6>
 8002d1a:	4b58      	ldr	r3, [pc, #352]	; (8002e7c <Control_Task+0x7ec>)
 8002d1c:	781b      	ldrb	r3, [r3, #0]
 8002d1e:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002d22:	4955      	ldr	r1, [pc, #340]	; (8002e78 <Control_Task+0x7e8>)
 8002d24:	4613      	mov	r3, r2
 8002d26:	009b      	lsls	r3, r3, #2
 8002d28:	4413      	add	r3, r2
 8002d2a:	00db      	lsls	r3, r3, #3
 8002d2c:	440b      	add	r3, r1
 8002d2e:	3324      	adds	r3, #36	; 0x24
 8002d30:	781a      	ldrb	r2, [r3, #0]
 8002d32:	4b57      	ldr	r3, [pc, #348]	; (8002e90 <Control_Task+0x800>)
 8002d34:	701a      	strb	r2, [r3, #0]
		bestNb[NEXT]=bestNb[TMP];
 8002d36:	4b56      	ldr	r3, [pc, #344]	; (8002e90 <Control_Task+0x800>)
 8002d38:	781a      	ldrb	r2, [r3, #0]
 8002d3a:	4b55      	ldr	r3, [pc, #340]	; (8002e90 <Control_Task+0x800>)
 8002d3c:	705a      	strb	r2, [r3, #1]
		pos[NEXT]=N(pos[MY]).neighbours[bestNb[NEXT]];//a következő poziciónk a legjobb szomszéd lesz
 8002d3e:	4b4f      	ldr	r3, [pc, #316]	; (8002e7c <Control_Task+0x7ec>)
 8002d40:	781b      	ldrb	r3, [r3, #0]
 8002d42:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002d46:	4b52      	ldr	r3, [pc, #328]	; (8002e90 <Control_Task+0x800>)
 8002d48:	785b      	ldrb	r3, [r3, #1]
 8002d4a:	4618      	mov	r0, r3
 8002d4c:	494a      	ldr	r1, [pc, #296]	; (8002e78 <Control_Task+0x7e8>)
 8002d4e:	4613      	mov	r3, r2
 8002d50:	009b      	lsls	r3, r3, #2
 8002d52:	4413      	add	r3, r2
 8002d54:	00db      	lsls	r3, r3, #3
 8002d56:	440b      	add	r3, r1
 8002d58:	4403      	add	r3, r0
 8002d5a:	330c      	adds	r3, #12
 8002d5c:	781a      	ldrb	r2, [r3, #0]
 8002d5e:	4b47      	ldr	r3, [pc, #284]	; (8002e7c <Control_Task+0x7ec>)
 8002d60:	705a      	strb	r2, [r3, #1]
		dir[NEXT]=N(pos[MY]).directions[bestNb[NEXT]];//már most tudjuk, mi lesz az irányunk, ha odaértünk
 8002d62:	4b46      	ldr	r3, [pc, #280]	; (8002e7c <Control_Task+0x7ec>)
 8002d64:	781b      	ldrb	r3, [r3, #0]
 8002d66:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002d6a:	4b49      	ldr	r3, [pc, #292]	; (8002e90 <Control_Task+0x800>)
 8002d6c:	785b      	ldrb	r3, [r3, #1]
 8002d6e:	4618      	mov	r0, r3
 8002d70:	4941      	ldr	r1, [pc, #260]	; (8002e78 <Control_Task+0x7e8>)
 8002d72:	4613      	mov	r3, r2
 8002d74:	009b      	lsls	r3, r3, #2
 8002d76:	4413      	add	r3, r2
 8002d78:	00db      	lsls	r3, r3, #3
 8002d7a:	440b      	add	r3, r1
 8002d7c:	4403      	add	r3, r0
 8002d7e:	3312      	adds	r3, #18
 8002d80:	781a      	ldrb	r2, [r3, #0]
 8002d82:	4b44      	ldr	r3, [pc, #272]	; (8002e94 <Control_Task+0x804>)
 8002d84:	705a      	strb	r2, [r3, #1]

		//a kocsi az egyik node-ból átmegy egy másikba-> az irányok segítségével meghatározzu az új orientationt
		if(bestNb[NEXT] < NEIGHBOUR4) //ha balra/fel kell majd mennünk a nextPosition -höz
 8002d86:	4b42      	ldr	r3, [pc, #264]	; (8002e90 <Control_Task+0x800>)
 8002d88:	785b      	ldrb	r3, [r3, #1]
 8002d8a:	2b02      	cmp	r3, #2
 8002d8c:	d813      	bhi.n	8002db6 <Control_Task+0x726>
		{
			if(dir[MY]==2)//és eddig jobbra/fel mentünk,
 8002d8e:	4b41      	ldr	r3, [pc, #260]	; (8002e94 <Control_Task+0x804>)
 8002d90:	781b      	ldrb	r3, [r3, #0]
 8002d92:	2b02      	cmp	r3, #2
 8002d94:	d10a      	bne.n	8002dac <Control_Task+0x71c>
				nextOri = !orientation;//akkor most orientációt kell váltanunk
 8002d96:	4b40      	ldr	r3, [pc, #256]	; (8002e98 <Control_Task+0x808>)
 8002d98:	781b      	ldrb	r3, [r3, #0]
 8002d9a:	2b00      	cmp	r3, #0
 8002d9c:	bf0c      	ite	eq
 8002d9e:	2301      	moveq	r3, #1
 8002da0:	2300      	movne	r3, #0
 8002da2:	b2db      	uxtb	r3, r3
 8002da4:	461a      	mov	r2, r3
 8002da6:	4b3d      	ldr	r3, [pc, #244]	; (8002e9c <Control_Task+0x80c>)
 8002da8:	701a      	strb	r2, [r3, #0]
 8002daa:	e017      	b.n	8002ddc <Control_Task+0x74c>
			else nextOri = orientation; //különben nem kell
 8002dac:	4b3a      	ldr	r3, [pc, #232]	; (8002e98 <Control_Task+0x808>)
 8002dae:	781a      	ldrb	r2, [r3, #0]
 8002db0:	4b3a      	ldr	r3, [pc, #232]	; (8002e9c <Control_Task+0x80c>)
 8002db2:	701a      	strb	r2, [r3, #0]
 8002db4:	e012      	b.n	8002ddc <Control_Task+0x74c>
		}
		else //ha jobbra/le kell majd mennünk
		{
			if(dir[MY]==1)//és eddig balra/fel mentünk,
 8002db6:	4b37      	ldr	r3, [pc, #220]	; (8002e94 <Control_Task+0x804>)
 8002db8:	781b      	ldrb	r3, [r3, #0]
 8002dba:	2b01      	cmp	r3, #1
 8002dbc:	d10a      	bne.n	8002dd4 <Control_Task+0x744>
				nextOri =! orientation;//akkor most irányt kell váltanunk
 8002dbe:	4b36      	ldr	r3, [pc, #216]	; (8002e98 <Control_Task+0x808>)
 8002dc0:	781b      	ldrb	r3, [r3, #0]
 8002dc2:	2b00      	cmp	r3, #0
 8002dc4:	bf0c      	ite	eq
 8002dc6:	2301      	moveq	r3, #1
 8002dc8:	2300      	movne	r3, #0
 8002dca:	b2db      	uxtb	r3, r3
 8002dcc:	461a      	mov	r2, r3
 8002dce:	4b33      	ldr	r3, [pc, #204]	; (8002e9c <Control_Task+0x80c>)
 8002dd0:	701a      	strb	r2, [r3, #0]
 8002dd2:	e003      	b.n	8002ddc <Control_Task+0x74c>
			else nextOri = orientation; //különben nem kell
 8002dd4:	4b30      	ldr	r3, [pc, #192]	; (8002e98 <Control_Task+0x808>)
 8002dd6:	781a      	ldrb	r2, [r3, #0]
 8002dd8:	4b30      	ldr	r3, [pc, #192]	; (8002e9c <Control_Task+0x80c>)
 8002dda:	701a      	strb	r2, [r3, #0]
		}

		//path kiválasztás -> az orientációt mostmár tudjuk (tolatás/előre), már csak az ösvény kell kivákasztani, hogy a megfelelő szomszédhoz jussunk

		if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)nextPath=LEFT;
 8002ddc:	4b2c      	ldr	r3, [pc, #176]	; (8002e90 <Control_Task+0x800>)
 8002dde:	785b      	ldrb	r3, [r3, #1]
 8002de0:	2b00      	cmp	r3, #0
 8002de2:	d003      	beq.n	8002dec <Control_Task+0x75c>
 8002de4:	4b2a      	ldr	r3, [pc, #168]	; (8002e90 <Control_Task+0x800>)
 8002de6:	785b      	ldrb	r3, [r3, #1]
 8002de8:	2b03      	cmp	r3, #3
 8002dea:	d103      	bne.n	8002df4 <Control_Task+0x764>
 8002dec:	4b2c      	ldr	r3, [pc, #176]	; (8002ea0 <Control_Task+0x810>)
 8002dee:	2200      	movs	r2, #0
 8002df0:	701a      	strb	r2, [r3, #0]
 8002df2:	e016      	b.n	8002e22 <Control_Task+0x792>
		else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)nextPath=MIDDLE;
 8002df4:	4b26      	ldr	r3, [pc, #152]	; (8002e90 <Control_Task+0x800>)
 8002df6:	785b      	ldrb	r3, [r3, #1]
 8002df8:	2b01      	cmp	r3, #1
 8002dfa:	d003      	beq.n	8002e04 <Control_Task+0x774>
 8002dfc:	4b24      	ldr	r3, [pc, #144]	; (8002e90 <Control_Task+0x800>)
 8002dfe:	785b      	ldrb	r3, [r3, #1]
 8002e00:	2b04      	cmp	r3, #4
 8002e02:	d103      	bne.n	8002e0c <Control_Task+0x77c>
 8002e04:	4b26      	ldr	r3, [pc, #152]	; (8002ea0 <Control_Task+0x810>)
 8002e06:	2201      	movs	r2, #1
 8002e08:	701a      	strb	r2, [r3, #0]
 8002e0a:	e00a      	b.n	8002e22 <Control_Task+0x792>
		else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)nextPath=RIGHT;
 8002e0c:	4b20      	ldr	r3, [pc, #128]	; (8002e90 <Control_Task+0x800>)
 8002e0e:	785b      	ldrb	r3, [r3, #1]
 8002e10:	2b02      	cmp	r3, #2
 8002e12:	d003      	beq.n	8002e1c <Control_Task+0x78c>
 8002e14:	4b1e      	ldr	r3, [pc, #120]	; (8002e90 <Control_Task+0x800>)
 8002e16:	785b      	ldrb	r3, [r3, #1]
 8002e18:	2b05      	cmp	r3, #5
 8002e1a:	d102      	bne.n	8002e22 <Control_Task+0x792>
 8002e1c:	4b20      	ldr	r3, [pc, #128]	; (8002ea0 <Control_Task+0x810>)
 8002e1e:	2202      	movs	r2, #2
 8002e20:	701a      	strb	r2, [r3, #0]

		control_task_state=NEIGHBOUR1;
 8002e22:	4b17      	ldr	r3, [pc, #92]	; (8002e80 <Control_Task+0x7f0>)
 8002e24:	2200      	movs	r2, #0
 8002e26:	701a      	strb	r2, [r3, #0]
		return;
 8002e28:	e022      	b.n	8002e70 <Control_Task+0x7e0>
	}
	/**************************************************************************************/

	/**********ÜTKÖZÉSELKERÜLÉS VÁRAKOZÁSSAL (control_task_state=EVALUATE ->6.állapot)***********/
	else if(control_task_state==WAIT)
 8002e2a:	4b15      	ldr	r3, [pc, #84]	; (8002e80 <Control_Task+0x7f0>)
 8002e2c:	781b      	ldrb	r3, [r3, #0]
 8002e2e:	2b07      	cmp	r3, #7
 8002e30:	d11e      	bne.n	8002e70 <Control_Task+0x7e0>
	{
		if(tick-t_stamp<4000)
 8002e32:	4b1c      	ldr	r3, [pc, #112]	; (8002ea4 <Control_Task+0x814>)
 8002e34:	681b      	ldr	r3, [r3, #0]
 8002e36:	687a      	ldr	r2, [r7, #4]
 8002e38:	1ad3      	subs	r3, r2, r3
 8002e3a:	f5b3 6f7a 	cmp.w	r3, #4000	; 0xfa0
 8002e3e:	d206      	bcs.n	8002e4e <Control_Task+0x7be>
		{
			v_control=STOP;
 8002e40:	4b19      	ldr	r3, [pc, #100]	; (8002ea8 <Control_Task+0x818>)
 8002e42:	2200      	movs	r2, #0
 8002e44:	701a      	strb	r2, [r3, #0]
			control_task_state=WAIT;
 8002e46:	4b0e      	ldr	r3, [pc, #56]	; (8002e80 <Control_Task+0x7f0>)
 8002e48:	2207      	movs	r2, #7
 8002e4a:	701a      	strb	r2, [r3, #0]
 8002e4c:	e010      	b.n	8002e70 <Control_Task+0x7e0>
		}
		else
		{
			LED_G(0);
 8002e4e:	2201      	movs	r2, #1
 8002e50:	2102      	movs	r1, #2
 8002e52:	4816      	ldr	r0, [pc, #88]	; (8002eac <Control_Task+0x81c>)
 8002e54:	f006 f9f2 	bl	800923c <HAL_GPIO_WritePin>
			v_control=NORMAL_VEL;
 8002e58:	4b13      	ldr	r3, [pc, #76]	; (8002ea8 <Control_Task+0x818>)
 8002e5a:	2202      	movs	r2, #2
 8002e5c:	701a      	strb	r2, [r3, #0]
			control_task_state=NEIGHBOUR1;
 8002e5e:	4b08      	ldr	r3, [pc, #32]	; (8002e80 <Control_Task+0x7f0>)
 8002e60:	2200      	movs	r2, #0
 8002e62:	701a      	strb	r2, [r3, #0]
 8002e64:	e004      	b.n	8002e70 <Control_Task+0x7e0>
	if(control_task_tick>tick)return;
 8002e66:	bf00      	nop
 8002e68:	e002      	b.n	8002e70 <Control_Task+0x7e0>
	if(mode!=SKILL)return;
 8002e6a:	bf00      	nop
 8002e6c:	e000      	b.n	8002e70 <Control_Task+0x7e0>
	if(!piratePos_prev[0])return;
 8002e6e:	bf00      	nop
		}
	}
	/**************************************************************************************/
}
 8002e70:	3720      	adds	r7, #32
 8002e72:	46bd      	mov	sp, r7
 8002e74:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8002e78:	20000360 	.word	0x20000360
 8002e7c:	20000000 	.word	0x20000000
 8002e80:	200006ef 	.word	0x200006ef
 8002e84:	200006fc 	.word	0x200006fc
 8002e88:	c3160000 	.word	0xc3160000
 8002e8c:	2000000c 	.word	0x2000000c
 8002e90:	200006dc 	.word	0x200006dc
 8002e94:	20000008 	.word	0x20000008
 8002e98:	2000034c 	.word	0x2000034c
 8002e9c:	200006f5 	.word	0x200006f5
 8002ea0:	200006f4 	.word	0x200006f4
 8002ea4:	200006f0 	.word	0x200006f0
 8002ea8:	20000351 	.word	0x20000351
 8002eac:	40020400 	.word	0x40020400

08002eb0 <Control_Task_2>:

void Control_Task_2(UART_HandleTypeDef *huart_debugg,uint32_t tick, uint32_t period)
{
 8002eb0:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8002eb4:	b084      	sub	sp, #16
 8002eb6:	af00      	add	r7, sp, #0
 8002eb8:	60f8      	str	r0, [r7, #12]
 8002eba:	60b9      	str	r1, [r7, #8]
 8002ebc:	607a      	str	r2, [r7, #4]
	static uint8_t i=0;
	static char str[30];

	static uint32_t control_task_2_tick = 0;

	if(mode!=SKILL || laneChange)return;
 8002ebe:	4ba8      	ldr	r3, [pc, #672]	; (8003160 <Control_Task_2+0x2b0>)
 8002ec0:	781b      	ldrb	r3, [r3, #0]
 8002ec2:	2b52      	cmp	r3, #82	; 0x52
 8002ec4:	f040 848f 	bne.w	80037e6 <Control_Task_2+0x936>
 8002ec8:	4ba6      	ldr	r3, [pc, #664]	; (8003164 <Control_Task_2+0x2b4>)
 8002eca:	781b      	ldrb	r3, [r3, #0]
 8002ecc:	2b00      	cmp	r3, #0
 8002ece:	f040 848a 	bne.w	80037e6 <Control_Task_2+0x936>

	else if(control_task_2_tick>tick)return;
 8002ed2:	4ba5      	ldr	r3, [pc, #660]	; (8003168 <Control_Task_2+0x2b8>)
 8002ed4:	681b      	ldr	r3, [r3, #0]
 8002ed6:	68ba      	ldr	r2, [r7, #8]
 8002ed8:	429a      	cmp	r2, r3
 8002eda:	f0c0 8486 	bcc.w	80037ea <Control_Task_2+0x93a>
	control_task_2_tick=tick+period;
 8002ede:	68ba      	ldr	r2, [r7, #8]
 8002ee0:	687b      	ldr	r3, [r7, #4]
 8002ee2:	4413      	add	r3, r2
 8002ee4:	4aa0      	ldr	r2, [pc, #640]	; (8003168 <Control_Task_2+0x2b8>)
 8002ee6:	6013      	str	r3, [r2, #0]

	//ha kapu nélküli nodeba tartunk éppen, akkor időzítéssel "detektáljuk" a nodot
/**/
	if(N(pos[MY]).type>2 && control_task_2_state==2)
 8002ee8:	4ba0      	ldr	r3, [pc, #640]	; (800316c <Control_Task_2+0x2bc>)
 8002eea:	781b      	ldrb	r3, [r3, #0]
 8002eec:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002ef0:	499f      	ldr	r1, [pc, #636]	; (8003170 <Control_Task_2+0x2c0>)
 8002ef2:	4613      	mov	r3, r2
 8002ef4:	009b      	lsls	r3, r3, #2
 8002ef6:	4413      	add	r3, r2
 8002ef8:	00db      	lsls	r3, r3, #3
 8002efa:	440b      	add	r3, r1
 8002efc:	3308      	adds	r3, #8
 8002efe:	681b      	ldr	r3, [r3, #0]
 8002f00:	2b02      	cmp	r3, #2
 8002f02:	d950      	bls.n	8002fa6 <Control_Task_2+0xf6>
 8002f04:	4b9b      	ldr	r3, [pc, #620]	; (8003174 <Control_Task_2+0x2c4>)
 8002f06:	781b      	ldrb	r3, [r3, #0]
 8002f08:	2b02      	cmp	r3, #2
 8002f0a:	d14c      	bne.n	8002fa6 <Control_Task_2+0xf6>
	{
		s += (float)(tick-tick_prev)*fabs(v)/10000;
 8002f0c:	4b9a      	ldr	r3, [pc, #616]	; (8003178 <Control_Task_2+0x2c8>)
 8002f0e:	681b      	ldr	r3, [r3, #0]
 8002f10:	4618      	mov	r0, r3
 8002f12:	f7fd fb39 	bl	8000588 <__aeabi_f2d>
 8002f16:	4604      	mov	r4, r0
 8002f18:	460d      	mov	r5, r1
 8002f1a:	4b98      	ldr	r3, [pc, #608]	; (800317c <Control_Task_2+0x2cc>)
 8002f1c:	681b      	ldr	r3, [r3, #0]
 8002f1e:	68ba      	ldr	r2, [r7, #8]
 8002f20:	1ad3      	subs	r3, r2, r3
 8002f22:	ee07 3a90 	vmov	s15, r3
 8002f26:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002f2a:	ee17 0a90 	vmov	r0, s15
 8002f2e:	f7fd fb2b 	bl	8000588 <__aeabi_f2d>
 8002f32:	4680      	mov	r8, r0
 8002f34:	4689      	mov	r9, r1
 8002f36:	4b92      	ldr	r3, [pc, #584]	; (8003180 <Control_Task_2+0x2d0>)
 8002f38:	edd3 7a00 	vldr	s15, [r3]
 8002f3c:	eef0 7ae7 	vabs.f32	s15, s15
 8002f40:	ee17 0a90 	vmov	r0, s15
 8002f44:	f7fd fb20 	bl	8000588 <__aeabi_f2d>
 8002f48:	4602      	mov	r2, r0
 8002f4a:	460b      	mov	r3, r1
 8002f4c:	4640      	mov	r0, r8
 8002f4e:	4649      	mov	r1, r9
 8002f50:	f7fd fb72 	bl	8000638 <__aeabi_dmul>
 8002f54:	4602      	mov	r2, r0
 8002f56:	460b      	mov	r3, r1
 8002f58:	4610      	mov	r0, r2
 8002f5a:	4619      	mov	r1, r3
 8002f5c:	a37e      	add	r3, pc, #504	; (adr r3, 8003158 <Control_Task_2+0x2a8>)
 8002f5e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002f62:	f7fd fc93 	bl	800088c <__aeabi_ddiv>
 8002f66:	4602      	mov	r2, r0
 8002f68:	460b      	mov	r3, r1
 8002f6a:	4620      	mov	r0, r4
 8002f6c:	4629      	mov	r1, r5
 8002f6e:	f7fd f9ad 	bl	80002cc <__adddf3>
 8002f72:	4602      	mov	r2, r0
 8002f74:	460b      	mov	r3, r1
 8002f76:	4610      	mov	r0, r2
 8002f78:	4619      	mov	r1, r3
 8002f7a:	f7fd fe35 	bl	8000be8 <__aeabi_d2f>
 8002f7e:	4603      	mov	r3, r0
 8002f80:	4a7d      	ldr	r2, [pc, #500]	; (8003178 <Control_Task_2+0x2c8>)
 8002f82:	6013      	str	r3, [r2, #0]
		if(s>sMAX)nodeDetected=1;
 8002f84:	4b7f      	ldr	r3, [pc, #508]	; (8003184 <Control_Task_2+0x2d4>)
 8002f86:	681b      	ldr	r3, [r3, #0]
 8002f88:	ee07 3a90 	vmov	s15, r3
 8002f8c:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8002f90:	4b79      	ldr	r3, [pc, #484]	; (8003178 <Control_Task_2+0x2c8>)
 8002f92:	edd3 7a00 	vldr	s15, [r3]
 8002f96:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002f9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002f9e:	d502      	bpl.n	8002fa6 <Control_Task_2+0xf6>
 8002fa0:	4b79      	ldr	r3, [pc, #484]	; (8003188 <Control_Task_2+0x2d8>)
 8002fa2:	2201      	movs	r2, #1
 8002fa4:	701a      	strb	r2, [r3, #0]
	}
	tick=tick_prev;
 8002fa6:	4b75      	ldr	r3, [pc, #468]	; (800317c <Control_Task_2+0x2cc>)
 8002fa8:	681b      	ldr	r3, [r3, #0]
 8002faa:	60bb      	str	r3, [r7, #8]

	if(thunderboardFlag==1)		//uj adat erkezik (minden 200ms)
 8002fac:	4b77      	ldr	r3, [pc, #476]	; (800318c <Control_Task_2+0x2dc>)
 8002fae:	781b      	ldrb	r3, [r3, #0]
 8002fb0:	b2db      	uxtb	r3, r3
 8002fb2:	2b01      	cmp	r3, #1
 8002fb4:	d157      	bne.n	8003066 <Control_Task_2+0x1b6>
	{

		piratePos_prev[0]=piratePos[0];//előző kalozpozíció frissítése P
 8002fb6:	4b76      	ldr	r3, [pc, #472]	; (8003190 <Control_Task_2+0x2e0>)
 8002fb8:	781a      	ldrb	r2, [r3, #0]
 8002fba:	4b76      	ldr	r3, [pc, #472]	; (8003194 <Control_Task_2+0x2e4>)
 8002fbc:	701a      	strb	r2, [r3, #0]
		piratePos_prev[1]=piratePos[1];			//M
 8002fbe:	4b74      	ldr	r3, [pc, #464]	; (8003190 <Control_Task_2+0x2e0>)
 8002fc0:	785a      	ldrb	r2, [r3, #1]
 8002fc2:	4b74      	ldr	r3, [pc, #464]	; (8003194 <Control_Task_2+0x2e4>)
 8002fc4:	705a      	strb	r2, [r3, #1]
		piratePos_prev[2]=piratePos[2];			//K
 8002fc6:	4b72      	ldr	r3, [pc, #456]	; (8003190 <Control_Task_2+0x2e0>)
 8002fc8:	789a      	ldrb	r2, [r3, #2]
 8002fca:	4b72      	ldr	r3, [pc, #456]	; (8003194 <Control_Task_2+0x2e4>)
 8002fcc:	709a      	strb	r2, [r3, #2]
		piratePos_prev[3]=piratePos[3];			//65
 8002fce:	4b70      	ldr	r3, [pc, #448]	; (8003190 <Control_Task_2+0x2e0>)
 8002fd0:	78da      	ldrb	r2, [r3, #3]
 8002fd2:	4b70      	ldr	r3, [pc, #448]	; (8003194 <Control_Task_2+0x2e4>)
 8002fd4:	70da      	strb	r2, [r3, #3]

		if(piratePos_prev[1]!=piratePos[1] && !laneChange && piratePos[0] !='R')//a kalóz átment egy Node-on
 8002fd6:	4b6f      	ldr	r3, [pc, #444]	; (8003194 <Control_Task_2+0x2e4>)
 8002fd8:	785a      	ldrb	r2, [r3, #1]
 8002fda:	4b6d      	ldr	r3, [pc, #436]	; (8003190 <Control_Task_2+0x2e0>)
 8002fdc:	785b      	ldrb	r3, [r3, #1]
 8002fde:	429a      	cmp	r2, r3
 8002fe0:	d03e      	beq.n	8003060 <Control_Task_2+0x1b0>
 8002fe2:	4b60      	ldr	r3, [pc, #384]	; (8003164 <Control_Task_2+0x2b4>)
 8002fe4:	781b      	ldrb	r3, [r3, #0]
 8002fe6:	2b00      	cmp	r3, #0
 8002fe8:	d13a      	bne.n	8003060 <Control_Task_2+0x1b0>
 8002fea:	4b69      	ldr	r3, [pc, #420]	; (8003190 <Control_Task_2+0x2e0>)
 8002fec:	781b      	ldrb	r3, [r3, #0]
 8002fee:	2b52      	cmp	r3, #82	; 0x52
 8002ff0:	d036      	beq.n	8003060 <Control_Task_2+0x1b0>
		{
			if(N(piratePos[0]).worth > 0)
 8002ff2:	4b67      	ldr	r3, [pc, #412]	; (8003190 <Control_Task_2+0x2e0>)
 8002ff4:	781b      	ldrb	r3, [r3, #0]
 8002ff6:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002ffa:	495d      	ldr	r1, [pc, #372]	; (8003170 <Control_Task_2+0x2c0>)
 8002ffc:	4613      	mov	r3, r2
 8002ffe:	009b      	lsls	r3, r3, #2
 8003000:	4413      	add	r3, r2
 8003002:	00db      	lsls	r3, r3, #3
 8003004:	440b      	add	r3, r1
 8003006:	3304      	adds	r3, #4
 8003008:	681b      	ldr	r3, [r3, #0]
 800300a:	2b00      	cmp	r3, #0
 800300c:	dd1b      	ble.n	8003046 <Control_Task_2+0x196>
			{
				N(piratePos[0]).worth--; //az a node már kevesebbet ér
 800300e:	4b60      	ldr	r3, [pc, #384]	; (8003190 <Control_Task_2+0x2e0>)
 8003010:	781b      	ldrb	r3, [r3, #0]
 8003012:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003016:	4956      	ldr	r1, [pc, #344]	; (8003170 <Control_Task_2+0x2c0>)
 8003018:	4613      	mov	r3, r2
 800301a:	009b      	lsls	r3, r3, #2
 800301c:	4413      	add	r3, r2
 800301e:	00db      	lsls	r3, r3, #3
 8003020:	440b      	add	r3, r1
 8003022:	3304      	adds	r3, #4
 8003024:	681b      	ldr	r3, [r3, #0]
 8003026:	1e59      	subs	r1, r3, #1
 8003028:	4851      	ldr	r0, [pc, #324]	; (8003170 <Control_Task_2+0x2c0>)
 800302a:	4613      	mov	r3, r2
 800302c:	009b      	lsls	r3, r3, #2
 800302e:	4413      	add	r3, r2
 8003030:	00db      	lsls	r3, r3, #3
 8003032:	4403      	add	r3, r0
 8003034:	3304      	adds	r3, #4
 8003036:	6019      	str	r1, [r3, #0]
				collectedPoints ++;
 8003038:	4b57      	ldr	r3, [pc, #348]	; (8003198 <Control_Task_2+0x2e8>)
 800303a:	781b      	ldrb	r3, [r3, #0]
 800303c:	3301      	adds	r3, #1
 800303e:	b2da      	uxtb	r2, r3
 8003040:	4b55      	ldr	r3, [pc, #340]	; (8003198 <Control_Task_2+0x2e8>)
 8003042:	701a      	strb	r2, [r3, #0]
 8003044:	e00c      	b.n	8003060 <Control_Task_2+0x1b0>
			}
			else N(piratePos[0]).worth=0;
 8003046:	4b52      	ldr	r3, [pc, #328]	; (8003190 <Control_Task_2+0x2e0>)
 8003048:	781b      	ldrb	r3, [r3, #0]
 800304a:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800304e:	4948      	ldr	r1, [pc, #288]	; (8003170 <Control_Task_2+0x2c0>)
 8003050:	4613      	mov	r3, r2
 8003052:	009b      	lsls	r3, r3, #2
 8003054:	4413      	add	r3, r2
 8003056:	00db      	lsls	r3, r3, #3
 8003058:	440b      	add	r3, r1
 800305a:	3304      	adds	r3, #4
 800305c:	2200      	movs	r2, #0
 800305e:	601a      	str	r2, [r3, #0]
		}
		thunderboardFlag=0;
 8003060:	4b4a      	ldr	r3, [pc, #296]	; (800318c <Control_Task_2+0x2dc>)
 8003062:	2200      	movs	r2, #0
 8003064:	701a      	strb	r2, [r3, #0]
	}
	if(piratePos_prev[0]==0)return; //ha nem kaptunk még adatot a TB-tol return
 8003066:	4b4b      	ldr	r3, [pc, #300]	; (8003194 <Control_Task_2+0x2e4>)
 8003068:	781b      	ldrb	r3, [r3, #0]
 800306a:	2b00      	cmp	r3, #0
 800306c:	f000 83bf 	beq.w	80037ee <Control_Task_2+0x93e>


	if(control_task_2_state==0)
 8003070:	4b40      	ldr	r3, [pc, #256]	; (8003174 <Control_Task_2+0x2c4>)
 8003072:	781b      	ldrb	r3, [r3, #0]
 8003074:	2b00      	cmp	r3, #0
 8003076:	f040 81a6 	bne.w	80033c6 <Control_Task_2+0x516>
	{

		if(nodeDetected)
 800307a:	4b43      	ldr	r3, [pc, #268]	; (8003188 <Control_Task_2+0x2d8>)
 800307c:	781b      	ldrb	r3, [r3, #0]
 800307e:	2b00      	cmp	r3, #0
 8003080:	f000 80d7 	beq.w	8003232 <Control_Task_2+0x382>
		{
			LED_B_TOGGLE;
 8003084:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8003088:	4844      	ldr	r0, [pc, #272]	; (800319c <Control_Task_2+0x2ec>)
 800308a:	f006 f8f0 	bl	800926e <HAL_GPIO_TogglePin>
			//pontok nyugtázása
			collectedPoints +=N(pos[MY]).worth;//sávváltás módik vizsgáljuk az össezgyűjtött kapuk számát
 800308e:	4b37      	ldr	r3, [pc, #220]	; (800316c <Control_Task_2+0x2bc>)
 8003090:	781b      	ldrb	r3, [r3, #0]
 8003092:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003096:	4936      	ldr	r1, [pc, #216]	; (8003170 <Control_Task_2+0x2c0>)
 8003098:	4613      	mov	r3, r2
 800309a:	009b      	lsls	r3, r3, #2
 800309c:	4413      	add	r3, r2
 800309e:	00db      	lsls	r3, r3, #3
 80030a0:	440b      	add	r3, r1
 80030a2:	3304      	adds	r3, #4
 80030a4:	681b      	ldr	r3, [r3, #0]
 80030a6:	b2da      	uxtb	r2, r3
 80030a8:	4b3b      	ldr	r3, [pc, #236]	; (8003198 <Control_Task_2+0x2e8>)
 80030aa:	781b      	ldrb	r3, [r3, #0]
 80030ac:	4413      	add	r3, r2
 80030ae:	b2da      	uxtb	r2, r3
 80030b0:	4b39      	ldr	r3, [pc, #228]	; (8003198 <Control_Task_2+0x2e8>)
 80030b2:	701a      	strb	r2, [r3, #0]
			N(pos[MY]).worth=0;//ez a kapu már nem ér pontot
 80030b4:	4b2d      	ldr	r3, [pc, #180]	; (800316c <Control_Task_2+0x2bc>)
 80030b6:	781b      	ldrb	r3, [r3, #0]
 80030b8:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80030bc:	492c      	ldr	r1, [pc, #176]	; (8003170 <Control_Task_2+0x2c0>)
 80030be:	4613      	mov	r3, r2
 80030c0:	009b      	lsls	r3, r3, #2
 80030c2:	4413      	add	r3, r2
 80030c4:	00db      	lsls	r3, r3, #3
 80030c6:	440b      	add	r3, r1
 80030c8:	3304      	adds	r3, #4
 80030ca:	2200      	movs	r2, #0
 80030cc:	601a      	str	r2, [r3, #0]
			if (route[route_index+2]==0)//még nincs kész az eléállás
 80030ce:	4b34      	ldr	r3, [pc, #208]	; (80031a0 <Control_Task_2+0x2f0>)
 80030d0:	781b      	ldrb	r3, [r3, #0]
 80030d2:	3302      	adds	r3, #2
 80030d4:	4a33      	ldr	r2, [pc, #204]	; (80031a4 <Control_Task_2+0x2f4>)
 80030d6:	5cd3      	ldrb	r3, [r2, r3]
 80030d8:	2b00      	cmp	r3, #0
 80030da:	d10b      	bne.n	80030f4 <Control_Task_2+0x244>
			{
				//WAITING
				v_control=STOP;
 80030dc:	4b32      	ldr	r3, [pc, #200]	; (80031a8 <Control_Task_2+0x2f8>)
 80030de:	2200      	movs	r2, #0
 80030e0:	701a      	strb	r2, [r3, #0]
				control_task_2_state=1;
 80030e2:	4b24      	ldr	r3, [pc, #144]	; (8003174 <Control_Task_2+0x2c4>)
 80030e4:	2201      	movs	r2, #1
 80030e6:	701a      	strb	r2, [r3, #0]
				LED_Y(0);
 80030e8:	2201      	movs	r2, #1
 80030ea:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80030ee:	482b      	ldr	r0, [pc, #172]	; (800319c <Control_Task_2+0x2ec>)
 80030f0:	f006 f8a4 	bl	800923c <HAL_GPIO_WritePin>
			}

			pos[MY]=pos[NEXT]; //route 2 eetén a végén még hulyeség kerül ide
 80030f4:	4b1d      	ldr	r3, [pc, #116]	; (800316c <Control_Task_2+0x2bc>)
 80030f6:	785a      	ldrb	r2, [r3, #1]
 80030f8:	4b1c      	ldr	r3, [pc, #112]	; (800316c <Control_Task_2+0x2bc>)
 80030fa:	701a      	strb	r2, [r3, #0]
			pos[NEXT]=route[route_index+1];
 80030fc:	4b28      	ldr	r3, [pc, #160]	; (80031a0 <Control_Task_2+0x2f0>)
 80030fe:	781b      	ldrb	r3, [r3, #0]
 8003100:	3301      	adds	r3, #1
 8003102:	4a28      	ldr	r2, [pc, #160]	; (80031a4 <Control_Task_2+0x2f4>)
 8003104:	5cd2      	ldrb	r2, [r2, r3]
 8003106:	4b19      	ldr	r3, [pc, #100]	; (800316c <Control_Task_2+0x2bc>)
 8003108:	705a      	strb	r2, [r3, #1]
			nodeDetected=0;
 800310a:	4b1f      	ldr	r3, [pc, #124]	; (8003188 <Control_Task_2+0x2d8>)
 800310c:	2200      	movs	r2, #0
 800310e:	701a      	strb	r2, [r3, #0]
			route_index++;
 8003110:	4b23      	ldr	r3, [pc, #140]	; (80031a0 <Control_Task_2+0x2f0>)
 8003112:	781b      	ldrb	r3, [r3, #0]
 8003114:	3301      	adds	r3, #1
 8003116:	b2da      	uxtb	r2, r3
 8003118:	4b21      	ldr	r3, [pc, #132]	; (80031a0 <Control_Task_2+0x2f0>)
 800311a:	701a      	strb	r2, [r3, #0]

			for(i=0; i<6;i++)
 800311c:	4b23      	ldr	r3, [pc, #140]	; (80031ac <Control_Task_2+0x2fc>)
 800311e:	2200      	movs	r2, #0
 8003120:	701a      	strb	r2, [r3, #0]
 8003122:	e04d      	b.n	80031c0 <Control_Task_2+0x310>
			{
				if (N(pos[MY]).neighbours[i]==pos[NEXT])//O=O-2
 8003124:	4b11      	ldr	r3, [pc, #68]	; (800316c <Control_Task_2+0x2bc>)
 8003126:	781b      	ldrb	r3, [r3, #0]
 8003128:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800312c:	4b1f      	ldr	r3, [pc, #124]	; (80031ac <Control_Task_2+0x2fc>)
 800312e:	781b      	ldrb	r3, [r3, #0]
 8003130:	4618      	mov	r0, r3
 8003132:	490f      	ldr	r1, [pc, #60]	; (8003170 <Control_Task_2+0x2c0>)
 8003134:	4613      	mov	r3, r2
 8003136:	009b      	lsls	r3, r3, #2
 8003138:	4413      	add	r3, r2
 800313a:	00db      	lsls	r3, r3, #3
 800313c:	440b      	add	r3, r1
 800313e:	4403      	add	r3, r0
 8003140:	330c      	adds	r3, #12
 8003142:	781a      	ldrb	r2, [r3, #0]
 8003144:	4b09      	ldr	r3, [pc, #36]	; (800316c <Control_Task_2+0x2bc>)
 8003146:	785b      	ldrb	r3, [r3, #1]
 8003148:	429a      	cmp	r2, r3
 800314a:	d133      	bne.n	80031b4 <Control_Task_2+0x304>
				{
					bestNb[NEXT]=i;
 800314c:	4b17      	ldr	r3, [pc, #92]	; (80031ac <Control_Task_2+0x2fc>)
 800314e:	781a      	ldrb	r2, [r3, #0]
 8003150:	4b17      	ldr	r3, [pc, #92]	; (80031b0 <Control_Task_2+0x300>)
 8003152:	705a      	strb	r2, [r3, #1]
					break;// ha megvan akkor breakkel kilépünk a for ciklusból azonnal
 8003154:	e038      	b.n	80031c8 <Control_Task_2+0x318>
 8003156:	bf00      	nop
 8003158:	00000000 	.word	0x00000000
 800315c:	40c38800 	.word	0x40c38800
 8003160:	2000033e 	.word	0x2000033e
 8003164:	20000350 	.word	0x20000350
 8003168:	2000070c 	.word	0x2000070c
 800316c:	20000010 	.word	0x20000010
 8003170:	20000360 	.word	0x20000360
 8003174:	20000710 	.word	0x20000710
 8003178:	20000714 	.word	0x20000714
 800317c:	20000718 	.word	0x20000718
 8003180:	20000758 	.word	0x20000758
 8003184:	20000014 	.word	0x20000014
 8003188:	2000034d 	.word	0x2000034d
 800318c:	20000352 	.word	0x20000352
 8003190:	2000035c 	.word	0x2000035c
 8003194:	2000071c 	.word	0x2000071c
 8003198:	2000034f 	.word	0x2000034f
 800319c:	40020400 	.word	0x40020400
 80031a0:	20000720 	.word	0x20000720
 80031a4:	20000724 	.word	0x20000724
 80031a8:	20000351 	.word	0x20000351
 80031ac:	2000072a 	.word	0x2000072a
 80031b0:	2000072c 	.word	0x2000072c
			for(i=0; i<6;i++)
 80031b4:	4b98      	ldr	r3, [pc, #608]	; (8003418 <Control_Task_2+0x568>)
 80031b6:	781b      	ldrb	r3, [r3, #0]
 80031b8:	3301      	adds	r3, #1
 80031ba:	b2da      	uxtb	r2, r3
 80031bc:	4b96      	ldr	r3, [pc, #600]	; (8003418 <Control_Task_2+0x568>)
 80031be:	701a      	strb	r2, [r3, #0]
 80031c0:	4b95      	ldr	r3, [pc, #596]	; (8003418 <Control_Task_2+0x568>)
 80031c2:	781b      	ldrb	r3, [r3, #0]
 80031c4:	2b05      	cmp	r3, #5
 80031c6:	d9ad      	bls.n	8003124 <Control_Task_2+0x274>
				}
			}
			if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)path=LEFT;
 80031c8:	4b94      	ldr	r3, [pc, #592]	; (800341c <Control_Task_2+0x56c>)
 80031ca:	785b      	ldrb	r3, [r3, #1]
 80031cc:	2b00      	cmp	r3, #0
 80031ce:	d003      	beq.n	80031d8 <Control_Task_2+0x328>
 80031d0:	4b92      	ldr	r3, [pc, #584]	; (800341c <Control_Task_2+0x56c>)
 80031d2:	785b      	ldrb	r3, [r3, #1]
 80031d4:	2b03      	cmp	r3, #3
 80031d6:	d103      	bne.n	80031e0 <Control_Task_2+0x330>
 80031d8:	4b91      	ldr	r3, [pc, #580]	; (8003420 <Control_Task_2+0x570>)
 80031da:	2200      	movs	r2, #0
 80031dc:	701a      	strb	r2, [r3, #0]
 80031de:	e016      	b.n	800320e <Control_Task_2+0x35e>
			else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)path=MIDDLE;
 80031e0:	4b8e      	ldr	r3, [pc, #568]	; (800341c <Control_Task_2+0x56c>)
 80031e2:	785b      	ldrb	r3, [r3, #1]
 80031e4:	2b01      	cmp	r3, #1
 80031e6:	d003      	beq.n	80031f0 <Control_Task_2+0x340>
 80031e8:	4b8c      	ldr	r3, [pc, #560]	; (800341c <Control_Task_2+0x56c>)
 80031ea:	785b      	ldrb	r3, [r3, #1]
 80031ec:	2b04      	cmp	r3, #4
 80031ee:	d103      	bne.n	80031f8 <Control_Task_2+0x348>
 80031f0:	4b8b      	ldr	r3, [pc, #556]	; (8003420 <Control_Task_2+0x570>)
 80031f2:	2201      	movs	r2, #1
 80031f4:	701a      	strb	r2, [r3, #0]
 80031f6:	e00a      	b.n	800320e <Control_Task_2+0x35e>
			else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)path=RIGHT;
 80031f8:	4b88      	ldr	r3, [pc, #544]	; (800341c <Control_Task_2+0x56c>)
 80031fa:	785b      	ldrb	r3, [r3, #1]
 80031fc:	2b02      	cmp	r3, #2
 80031fe:	d003      	beq.n	8003208 <Control_Task_2+0x358>
 8003200:	4b86      	ldr	r3, [pc, #536]	; (800341c <Control_Task_2+0x56c>)
 8003202:	785b      	ldrb	r3, [r3, #1]
 8003204:	2b05      	cmp	r3, #5
 8003206:	d102      	bne.n	800320e <Control_Task_2+0x35e>
 8003208:	4b85      	ldr	r3, [pc, #532]	; (8003420 <Control_Task_2+0x570>)
 800320a:	2202      	movs	r2, #2
 800320c:	701a      	strb	r2, [r3, #0]

#ifdef ADIBUGG
			sprintf(str,"dd\n\r");
 800320e:	4985      	ldr	r1, [pc, #532]	; (8003424 <Control_Task_2+0x574>)
 8003210:	4885      	ldr	r0, [pc, #532]	; (8003428 <Control_Task_2+0x578>)
 8003212:	f00a facf 	bl	800d7b4 <siprintf>
			str[0]='9';
 8003216:	4b84      	ldr	r3, [pc, #528]	; (8003428 <Control_Task_2+0x578>)
 8003218:	2239      	movs	r2, #57	; 0x39
 800321a:	701a      	strb	r2, [r3, #0]
			str[1]=pos[MY];//honnan
 800321c:	4b83      	ldr	r3, [pc, #524]	; (800342c <Control_Task_2+0x57c>)
 800321e:	781a      	ldrb	r2, [r3, #0]
 8003220:	4b81      	ldr	r3, [pc, #516]	; (8003428 <Control_Task_2+0x578>)
 8003222:	705a      	strb	r2, [r3, #1]
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 4, 3);
 8003224:	2303      	movs	r3, #3
 8003226:	2204      	movs	r2, #4
 8003228:	497f      	ldr	r1, [pc, #508]	; (8003428 <Control_Task_2+0x578>)
 800322a:	68f8      	ldr	r0, [r7, #12]
 800322c:	f008 fd59 	bl	800bce2 <HAL_UART_Transmit>
 8003230:	e1ce      	b.n	80035d0 <Control_Task_2+0x720>
#endif
		}
		else if(!stage)
 8003232:	4b7f      	ldr	r3, [pc, #508]	; (8003430 <Control_Task_2+0x580>)
 8003234:	781b      	ldrb	r3, [r3, #0]
 8003236:	2b00      	cmp	r3, #0
 8003238:	f040 81ca 	bne.w	80035d0 <Control_Task_2+0x720>
		{
			LED_Y(1);
 800323c:	2200      	movs	r2, #0
 800323e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8003242:	487c      	ldr	r0, [pc, #496]	; (8003434 <Control_Task_2+0x584>)
 8003244:	f005 fffa 	bl	800923c <HAL_GPIO_WritePin>
			switch(piratePos_prev[2])
 8003248:	4b7b      	ldr	r3, [pc, #492]	; (8003438 <Control_Task_2+0x588>)
 800324a:	789b      	ldrb	r3, [r3, #2]
 800324c:	3b48      	subs	r3, #72	; 0x48
 800324e:	2b09      	cmp	r3, #9
 8003250:	d842      	bhi.n	80032d8 <Control_Task_2+0x428>
 8003252:	a201      	add	r2, pc, #4	; (adr r2, 8003258 <Control_Task_2+0x3a8>)
 8003254:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003258:	080032ad 	.word	0x080032ad
 800325c:	080032d9 	.word	0x080032d9
 8003260:	080032d9 	.word	0x080032d9
 8003264:	08003297 	.word	0x08003297
 8003268:	080032d9 	.word	0x080032d9
 800326c:	080032d9 	.word	0x080032d9
 8003270:	080032c3 	.word	0x080032c3
 8003274:	080032d9 	.word	0x080032d9
 8003278:	080032d9 	.word	0x080032d9
 800327c:	08003281 	.word	0x08003281
			{
			case 'Q':
				memcpy(route, route_1,6);
 8003280:	4b6e      	ldr	r3, [pc, #440]	; (800343c <Control_Task_2+0x58c>)
 8003282:	4a6f      	ldr	r2, [pc, #444]	; (8003440 <Control_Task_2+0x590>)
 8003284:	e892 0003 	ldmia.w	r2, {r0, r1}
 8003288:	6018      	str	r0, [r3, #0]
 800328a:	3304      	adds	r3, #4
 800328c:	8019      	strh	r1, [r3, #0]
				selected_route=1;
 800328e:	4b6d      	ldr	r3, [pc, #436]	; (8003444 <Control_Task_2+0x594>)
 8003290:	2201      	movs	r2, #1
 8003292:	701a      	strb	r2, [r3, #0]
				break;
 8003294:	e020      	b.n	80032d8 <Control_Task_2+0x428>
			case 'K':
				memcpy(route, route_2,6);
 8003296:	4b69      	ldr	r3, [pc, #420]	; (800343c <Control_Task_2+0x58c>)
 8003298:	4a6b      	ldr	r2, [pc, #428]	; (8003448 <Control_Task_2+0x598>)
 800329a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800329e:	6018      	str	r0, [r3, #0]
 80032a0:	3304      	adds	r3, #4
 80032a2:	8019      	strh	r1, [r3, #0]
				selected_route=2;
 80032a4:	4b67      	ldr	r3, [pc, #412]	; (8003444 <Control_Task_2+0x594>)
 80032a6:	2202      	movs	r2, #2
 80032a8:	701a      	strb	r2, [r3, #0]
				break;
 80032aa:	e015      	b.n	80032d8 <Control_Task_2+0x428>
			case 'H':
				memcpy(route, route_3,6);
 80032ac:	4b63      	ldr	r3, [pc, #396]	; (800343c <Control_Task_2+0x58c>)
 80032ae:	4a67      	ldr	r2, [pc, #412]	; (800344c <Control_Task_2+0x59c>)
 80032b0:	e892 0003 	ldmia.w	r2, {r0, r1}
 80032b4:	6018      	str	r0, [r3, #0]
 80032b6:	3304      	adds	r3, #4
 80032b8:	8019      	strh	r1, [r3, #0]
				selected_route=3;
 80032ba:	4b62      	ldr	r3, [pc, #392]	; (8003444 <Control_Task_2+0x594>)
 80032bc:	2203      	movs	r2, #3
 80032be:	701a      	strb	r2, [r3, #0]
				break;
 80032c0:	e00a      	b.n	80032d8 <Control_Task_2+0x428>
			case 'N':
				memcpy(route, route_4,6);
 80032c2:	4b5e      	ldr	r3, [pc, #376]	; (800343c <Control_Task_2+0x58c>)
 80032c4:	4a62      	ldr	r2, [pc, #392]	; (8003450 <Control_Task_2+0x5a0>)
 80032c6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80032ca:	6018      	str	r0, [r3, #0]
 80032cc:	3304      	adds	r3, #4
 80032ce:	8019      	strh	r1, [r3, #0]
				selected_route=4;
 80032d0:	4b5c      	ldr	r3, [pc, #368]	; (8003444 <Control_Task_2+0x594>)
 80032d2:	2204      	movs	r2, #4
 80032d4:	701a      	strb	r2, [r3, #0]
				break;
 80032d6:	bf00      	nop
			}

			pos[MY]=route[route_index];
 80032d8:	4b5e      	ldr	r3, [pc, #376]	; (8003454 <Control_Task_2+0x5a4>)
 80032da:	781b      	ldrb	r3, [r3, #0]
 80032dc:	461a      	mov	r2, r3
 80032de:	4b57      	ldr	r3, [pc, #348]	; (800343c <Control_Task_2+0x58c>)
 80032e0:	5c9a      	ldrb	r2, [r3, r2]
 80032e2:	4b52      	ldr	r3, [pc, #328]	; (800342c <Control_Task_2+0x57c>)
 80032e4:	701a      	strb	r2, [r3, #0]
			pos[NEXT]=route[route_index+1];
 80032e6:	4b5b      	ldr	r3, [pc, #364]	; (8003454 <Control_Task_2+0x5a4>)
 80032e8:	781b      	ldrb	r3, [r3, #0]
 80032ea:	3301      	adds	r3, #1
 80032ec:	4a53      	ldr	r2, [pc, #332]	; (800343c <Control_Task_2+0x58c>)
 80032ee:	5cd2      	ldrb	r2, [r2, r3]
 80032f0:	4b4e      	ldr	r3, [pc, #312]	; (800342c <Control_Task_2+0x57c>)
 80032f2:	705a      	strb	r2, [r3, #1]
			route_index++;
 80032f4:	4b57      	ldr	r3, [pc, #348]	; (8003454 <Control_Task_2+0x5a4>)
 80032f6:	781b      	ldrb	r3, [r3, #0]
 80032f8:	3301      	adds	r3, #1
 80032fa:	b2da      	uxtb	r2, r3
 80032fc:	4b55      	ldr	r3, [pc, #340]	; (8003454 <Control_Task_2+0x5a4>)
 80032fe:	701a      	strb	r2, [r3, #0]
			////////////////////////////////////////////////////////////
			for(i=0; i<6;i++)
 8003300:	4b45      	ldr	r3, [pc, #276]	; (8003418 <Control_Task_2+0x568>)
 8003302:	2200      	movs	r2, #0
 8003304:	701a      	strb	r2, [r3, #0]
 8003306:	e01e      	b.n	8003346 <Control_Task_2+0x496>
			{
				if (N(pos[MY]).neighbours[i]==pos[NEXT])//O=O-2
 8003308:	4b48      	ldr	r3, [pc, #288]	; (800342c <Control_Task_2+0x57c>)
 800330a:	781b      	ldrb	r3, [r3, #0]
 800330c:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003310:	4b41      	ldr	r3, [pc, #260]	; (8003418 <Control_Task_2+0x568>)
 8003312:	781b      	ldrb	r3, [r3, #0]
 8003314:	4618      	mov	r0, r3
 8003316:	4950      	ldr	r1, [pc, #320]	; (8003458 <Control_Task_2+0x5a8>)
 8003318:	4613      	mov	r3, r2
 800331a:	009b      	lsls	r3, r3, #2
 800331c:	4413      	add	r3, r2
 800331e:	00db      	lsls	r3, r3, #3
 8003320:	440b      	add	r3, r1
 8003322:	4403      	add	r3, r0
 8003324:	330c      	adds	r3, #12
 8003326:	781a      	ldrb	r2, [r3, #0]
 8003328:	4b40      	ldr	r3, [pc, #256]	; (800342c <Control_Task_2+0x57c>)
 800332a:	785b      	ldrb	r3, [r3, #1]
 800332c:	429a      	cmp	r2, r3
 800332e:	d104      	bne.n	800333a <Control_Task_2+0x48a>
				{
					bestNb[NEXT]=i;
 8003330:	4b39      	ldr	r3, [pc, #228]	; (8003418 <Control_Task_2+0x568>)
 8003332:	781a      	ldrb	r2, [r3, #0]
 8003334:	4b39      	ldr	r3, [pc, #228]	; (800341c <Control_Task_2+0x56c>)
 8003336:	705a      	strb	r2, [r3, #1]
					break;// ha megvan akkor breakkel kilépünk a for ciklusból azonnal
 8003338:	e009      	b.n	800334e <Control_Task_2+0x49e>
			for(i=0; i<6;i++)
 800333a:	4b37      	ldr	r3, [pc, #220]	; (8003418 <Control_Task_2+0x568>)
 800333c:	781b      	ldrb	r3, [r3, #0]
 800333e:	3301      	adds	r3, #1
 8003340:	b2da      	uxtb	r2, r3
 8003342:	4b35      	ldr	r3, [pc, #212]	; (8003418 <Control_Task_2+0x568>)
 8003344:	701a      	strb	r2, [r3, #0]
 8003346:	4b34      	ldr	r3, [pc, #208]	; (8003418 <Control_Task_2+0x568>)
 8003348:	781b      	ldrb	r3, [r3, #0]
 800334a:	2b05      	cmp	r3, #5
 800334c:	d9dc      	bls.n	8003308 <Control_Task_2+0x458>
				}
			}
			if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)path=LEFT;
 800334e:	4b33      	ldr	r3, [pc, #204]	; (800341c <Control_Task_2+0x56c>)
 8003350:	785b      	ldrb	r3, [r3, #1]
 8003352:	2b00      	cmp	r3, #0
 8003354:	d003      	beq.n	800335e <Control_Task_2+0x4ae>
 8003356:	4b31      	ldr	r3, [pc, #196]	; (800341c <Control_Task_2+0x56c>)
 8003358:	785b      	ldrb	r3, [r3, #1]
 800335a:	2b03      	cmp	r3, #3
 800335c:	d103      	bne.n	8003366 <Control_Task_2+0x4b6>
 800335e:	4b30      	ldr	r3, [pc, #192]	; (8003420 <Control_Task_2+0x570>)
 8003360:	2200      	movs	r2, #0
 8003362:	701a      	strb	r2, [r3, #0]
 8003364:	e016      	b.n	8003394 <Control_Task_2+0x4e4>
			else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)path=MIDDLE;
 8003366:	4b2d      	ldr	r3, [pc, #180]	; (800341c <Control_Task_2+0x56c>)
 8003368:	785b      	ldrb	r3, [r3, #1]
 800336a:	2b01      	cmp	r3, #1
 800336c:	d003      	beq.n	8003376 <Control_Task_2+0x4c6>
 800336e:	4b2b      	ldr	r3, [pc, #172]	; (800341c <Control_Task_2+0x56c>)
 8003370:	785b      	ldrb	r3, [r3, #1]
 8003372:	2b04      	cmp	r3, #4
 8003374:	d103      	bne.n	800337e <Control_Task_2+0x4ce>
 8003376:	4b2a      	ldr	r3, [pc, #168]	; (8003420 <Control_Task_2+0x570>)
 8003378:	2201      	movs	r2, #1
 800337a:	701a      	strb	r2, [r3, #0]
 800337c:	e00a      	b.n	8003394 <Control_Task_2+0x4e4>
			else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)path=RIGHT;
 800337e:	4b27      	ldr	r3, [pc, #156]	; (800341c <Control_Task_2+0x56c>)
 8003380:	785b      	ldrb	r3, [r3, #1]
 8003382:	2b02      	cmp	r3, #2
 8003384:	d003      	beq.n	800338e <Control_Task_2+0x4de>
 8003386:	4b25      	ldr	r3, [pc, #148]	; (800341c <Control_Task_2+0x56c>)
 8003388:	785b      	ldrb	r3, [r3, #1]
 800338a:	2b05      	cmp	r3, #5
 800338c:	d102      	bne.n	8003394 <Control_Task_2+0x4e4>
 800338e:	4b24      	ldr	r3, [pc, #144]	; (8003420 <Control_Task_2+0x570>)
 8003390:	2202      	movs	r2, #2
 8003392:	701a      	strb	r2, [r3, #0]
			stage=1;
 8003394:	4b26      	ldr	r3, [pc, #152]	; (8003430 <Control_Task_2+0x580>)
 8003396:	2201      	movs	r2, #1
 8003398:	701a      	strb	r2, [r3, #0]
			v_control=NORMAL_VEL;
 800339a:	4b30      	ldr	r3, [pc, #192]	; (800345c <Control_Task_2+0x5ac>)
 800339c:	2202      	movs	r2, #2
 800339e:	701a      	strb	r2, [r3, #0]
			//////////////////////////////////////////////////////////////
#ifdef ADIBUGG
			sprintf(str,"dd\n\r");
 80033a0:	4920      	ldr	r1, [pc, #128]	; (8003424 <Control_Task_2+0x574>)
 80033a2:	4821      	ldr	r0, [pc, #132]	; (8003428 <Control_Task_2+0x578>)
 80033a4:	f00a fa06 	bl	800d7b4 <siprintf>
			str[0]=pos[MY];
 80033a8:	4b20      	ldr	r3, [pc, #128]	; (800342c <Control_Task_2+0x57c>)
 80033aa:	781a      	ldrb	r2, [r3, #0]
 80033ac:	4b1e      	ldr	r3, [pc, #120]	; (8003428 <Control_Task_2+0x578>)
 80033ae:	701a      	strb	r2, [r3, #0]
			str[1]=pos[NEXT];//honnan
 80033b0:	4b1e      	ldr	r3, [pc, #120]	; (800342c <Control_Task_2+0x57c>)
 80033b2:	785a      	ldrb	r2, [r3, #1]
 80033b4:	4b1c      	ldr	r3, [pc, #112]	; (8003428 <Control_Task_2+0x578>)
 80033b6:	705a      	strb	r2, [r3, #1]
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 4, 3);
 80033b8:	2303      	movs	r3, #3
 80033ba:	2204      	movs	r2, #4
 80033bc:	491a      	ldr	r1, [pc, #104]	; (8003428 <Control_Task_2+0x578>)
 80033be:	68f8      	ldr	r0, [r7, #12]
 80033c0:	f008 fc8f 	bl	800bce2 <HAL_UART_Transmit>
 80033c4:	e104      	b.n	80035d0 <Control_Task_2+0x720>
#endif
		}
	}

	else if(control_task_2_state==1)
 80033c6:	4b26      	ldr	r3, [pc, #152]	; (8003460 <Control_Task_2+0x5b0>)
 80033c8:	781b      	ldrb	r3, [r3, #0]
 80033ca:	2b01      	cmp	r3, #1
 80033cc:	f040 8100 	bne.w	80035d0 <Control_Task_2+0x720>
	{
		//O-ban várakoz
		if (selected_route==1 && piratePos_prev[1]=='O')
 80033d0:	4b1c      	ldr	r3, [pc, #112]	; (8003444 <Control_Task_2+0x594>)
 80033d2:	781b      	ldrb	r3, [r3, #0]
 80033d4:	2b01      	cmp	r3, #1
 80033d6:	d10b      	bne.n	80033f0 <Control_Task_2+0x540>
 80033d8:	4b17      	ldr	r3, [pc, #92]	; (8003438 <Control_Task_2+0x588>)
 80033da:	785b      	ldrb	r3, [r3, #1]
 80033dc:	2b4f      	cmp	r3, #79	; 0x4f
 80033de:	d107      	bne.n	80033f0 <Control_Task_2+0x540>
		{
			control_task_2_state=2;//pos[MY]=piratePos[2];//amíg a kalózrobot azt célba nem veszi
 80033e0:	4b1f      	ldr	r3, [pc, #124]	; (8003460 <Control_Task_2+0x5b0>)
 80033e2:	2202      	movs	r2, #2
 80033e4:	701a      	strb	r2, [r3, #0]
			pos[MY]=piratePos_prev[2];
 80033e6:	4b14      	ldr	r3, [pc, #80]	; (8003438 <Control_Task_2+0x588>)
 80033e8:	789a      	ldrb	r2, [r3, #2]
 80033ea:	4b10      	ldr	r3, [pc, #64]	; (800342c <Control_Task_2+0x57c>)
 80033ec:	701a      	strb	r2, [r3, #0]
 80033ee:	e08d      	b.n	800350c <Control_Task_2+0x65c>
		}
		else if (selected_route==2) //N-ben várakozunk
 80033f0:	4b14      	ldr	r3, [pc, #80]	; (8003444 <Control_Task_2+0x594>)
 80033f2:	781b      	ldrb	r3, [r3, #0]
 80033f4:	2b02      	cmp	r3, #2
 80033f6:	d144      	bne.n	8003482 <Control_Task_2+0x5d2>
		{
			if(piratePos_prev[1]=='K' && piratePos_prev[2] != 'N')
 80033f8:	4b0f      	ldr	r3, [pc, #60]	; (8003438 <Control_Task_2+0x588>)
 80033fa:	785b      	ldrb	r3, [r3, #1]
 80033fc:	2b4b      	cmp	r3, #75	; 0x4b
 80033fe:	d131      	bne.n	8003464 <Control_Task_2+0x5b4>
 8003400:	4b0d      	ldr	r3, [pc, #52]	; (8003438 <Control_Task_2+0x588>)
 8003402:	789b      	ldrb	r3, [r3, #2]
 8003404:	2b4e      	cmp	r3, #78	; 0x4e
 8003406:	d02d      	beq.n	8003464 <Control_Task_2+0x5b4>
			{
				pos[MY]=piratePos_prev[2];//menjünk oda ahova ő akar, ez akkor jo ha nem felénk jön, felülbíráljuk a pos[my]='I'-t
 8003408:	4b0b      	ldr	r3, [pc, #44]	; (8003438 <Control_Task_2+0x588>)
 800340a:	789a      	ldrb	r2, [r3, #2]
 800340c:	4b07      	ldr	r3, [pc, #28]	; (800342c <Control_Task_2+0x57c>)
 800340e:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 8003410:	4b13      	ldr	r3, [pc, #76]	; (8003460 <Control_Task_2+0x5b0>)
 8003412:	2202      	movs	r2, #2
 8003414:	701a      	strb	r2, [r3, #0]
 8003416:	e079      	b.n	800350c <Control_Task_2+0x65c>
 8003418:	2000072a 	.word	0x2000072a
 800341c:	2000072c 	.word	0x2000072c
 8003420:	2000034e 	.word	0x2000034e
 8003424:	08011214 	.word	0x08011214
 8003428:	20000730 	.word	0x20000730
 800342c:	20000010 	.word	0x20000010
 8003430:	2000074e 	.word	0x2000074e
 8003434:	40020400 	.word	0x40020400
 8003438:	2000071c 	.word	0x2000071c
 800343c:	20000724 	.word	0x20000724
 8003440:	20000018 	.word	0x20000018
 8003444:	2000074f 	.word	0x2000074f
 8003448:	20000020 	.word	0x20000020
 800344c:	20000028 	.word	0x20000028
 8003450:	20000030 	.word	0x20000030
 8003454:	20000720 	.word	0x20000720
 8003458:	20000360 	.word	0x20000360
 800345c:	20000351 	.word	0x20000351
 8003460:	20000710 	.word	0x20000710
			}
			else if(piratePos_prev[1]=='N') //waiting
 8003464:	4b94      	ldr	r3, [pc, #592]	; (80036b8 <Control_Task_2+0x808>)
 8003466:	785b      	ldrb	r3, [r3, #1]
 8003468:	2b4e      	cmp	r3, #78	; 0x4e
 800346a:	d14f      	bne.n	800350c <Control_Task_2+0x65c>
			{
				pos[MY]=piratePos_prev[2];
 800346c:	4b92      	ldr	r3, [pc, #584]	; (80036b8 <Control_Task_2+0x808>)
 800346e:	789a      	ldrb	r2, [r3, #2]
 8003470:	4b92      	ldr	r3, [pc, #584]	; (80036bc <Control_Task_2+0x80c>)
 8003472:	701a      	strb	r2, [r3, #0]
				orientation=REVERSE;
 8003474:	4b92      	ldr	r3, [pc, #584]	; (80036c0 <Control_Task_2+0x810>)
 8003476:	2201      	movs	r2, #1
 8003478:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 800347a:	4b92      	ldr	r3, [pc, #584]	; (80036c4 <Control_Task_2+0x814>)
 800347c:	2202      	movs	r2, #2
 800347e:	701a      	strb	r2, [r3, #0]
 8003480:	e044      	b.n	800350c <Control_Task_2+0x65c>
				sprintf(str,"Wait!\n\r");
				HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);
#endif
			}
		}
		else if(selected_route==3)//I-ben várakozunk
 8003482:	4b91      	ldr	r3, [pc, #580]	; (80036c8 <Control_Task_2+0x818>)
 8003484:	781b      	ldrb	r3, [r3, #0]
 8003486:	2b03      	cmp	r3, #3
 8003488:	d11e      	bne.n	80034c8 <Control_Task_2+0x618>
		{
			if(piratePos_prev[1]=='F' && piratePos_prev[2] != 'I')
 800348a:	4b8b      	ldr	r3, [pc, #556]	; (80036b8 <Control_Task_2+0x808>)
 800348c:	785b      	ldrb	r3, [r3, #1]
 800348e:	2b46      	cmp	r3, #70	; 0x46
 8003490:	d10b      	bne.n	80034aa <Control_Task_2+0x5fa>
 8003492:	4b89      	ldr	r3, [pc, #548]	; (80036b8 <Control_Task_2+0x808>)
 8003494:	789b      	ldrb	r3, [r3, #2]
 8003496:	2b49      	cmp	r3, #73	; 0x49
 8003498:	d007      	beq.n	80034aa <Control_Task_2+0x5fa>
			{
				pos[MY]=piratePos_prev[2];//menjünk oda ahova ő akar, ez akkor jo ha nem felénk jön, felülbíráljuk a pos[my]='D'-t
 800349a:	4b87      	ldr	r3, [pc, #540]	; (80036b8 <Control_Task_2+0x808>)
 800349c:	789a      	ldrb	r2, [r3, #2]
 800349e:	4b87      	ldr	r3, [pc, #540]	; (80036bc <Control_Task_2+0x80c>)
 80034a0:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 80034a2:	4b88      	ldr	r3, [pc, #544]	; (80036c4 <Control_Task_2+0x814>)
 80034a4:	2202      	movs	r2, #2
 80034a6:	701a      	strb	r2, [r3, #0]
 80034a8:	e030      	b.n	800350c <Control_Task_2+0x65c>
			}
			else if(piratePos_prev[1]=='I')
 80034aa:	4b83      	ldr	r3, [pc, #524]	; (80036b8 <Control_Task_2+0x808>)
 80034ac:	785b      	ldrb	r3, [r3, #1]
 80034ae:	2b49      	cmp	r3, #73	; 0x49
 80034b0:	d12c      	bne.n	800350c <Control_Task_2+0x65c>
			{
				//waiting
				pos[MY]=piratePos_prev[2];
 80034b2:	4b81      	ldr	r3, [pc, #516]	; (80036b8 <Control_Task_2+0x808>)
 80034b4:	789a      	ldrb	r2, [r3, #2]
 80034b6:	4b81      	ldr	r3, [pc, #516]	; (80036bc <Control_Task_2+0x80c>)
 80034b8:	701a      	strb	r2, [r3, #0]
				orientation=REVERSE;
 80034ba:	4b81      	ldr	r3, [pc, #516]	; (80036c0 <Control_Task_2+0x810>)
 80034bc:	2201      	movs	r2, #1
 80034be:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 80034c0:	4b80      	ldr	r3, [pc, #512]	; (80036c4 <Control_Task_2+0x814>)
 80034c2:	2202      	movs	r2, #2
 80034c4:	701a      	strb	r2, [r3, #0]
 80034c6:	e021      	b.n	800350c <Control_Task_2+0x65c>
				HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);
#endif
			}
		}

		else if (selected_route==4){//I-ben várakozunk
 80034c8:	4b7f      	ldr	r3, [pc, #508]	; (80036c8 <Control_Task_2+0x818>)
 80034ca:	781b      	ldrb	r3, [r3, #0]
 80034cc:	2b04      	cmp	r3, #4
 80034ce:	d11d      	bne.n	800350c <Control_Task_2+0x65c>

			if(piratePos_prev[1]=='N' && piratePos_prev[2]!='L')
 80034d0:	4b79      	ldr	r3, [pc, #484]	; (80036b8 <Control_Task_2+0x808>)
 80034d2:	785b      	ldrb	r3, [r3, #1]
 80034d4:	2b4e      	cmp	r3, #78	; 0x4e
 80034d6:	d10b      	bne.n	80034f0 <Control_Task_2+0x640>
 80034d8:	4b77      	ldr	r3, [pc, #476]	; (80036b8 <Control_Task_2+0x808>)
 80034da:	789b      	ldrb	r3, [r3, #2]
 80034dc:	2b4c      	cmp	r3, #76	; 0x4c
 80034de:	d007      	beq.n	80034f0 <Control_Task_2+0x640>
			{
				pos[MY]=piratePos_prev[2];//menjünk oda ahova ő akar, ez akkor jo ha nem felénk jön, felülbíráljuk a pos[my]='I'-t
 80034e0:	4b75      	ldr	r3, [pc, #468]	; (80036b8 <Control_Task_2+0x808>)
 80034e2:	789a      	ldrb	r2, [r3, #2]
 80034e4:	4b75      	ldr	r3, [pc, #468]	; (80036bc <Control_Task_2+0x80c>)
 80034e6:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 80034e8:	4b76      	ldr	r3, [pc, #472]	; (80036c4 <Control_Task_2+0x814>)
 80034ea:	2202      	movs	r2, #2
 80034ec:	701a      	strb	r2, [r3, #0]
 80034ee:	e00d      	b.n	800350c <Control_Task_2+0x65c>
			}
			else if(piratePos_prev[1]=='L')//waiting
 80034f0:	4b71      	ldr	r3, [pc, #452]	; (80036b8 <Control_Task_2+0x808>)
 80034f2:	785b      	ldrb	r3, [r3, #1]
 80034f4:	2b4c      	cmp	r3, #76	; 0x4c
 80034f6:	d109      	bne.n	800350c <Control_Task_2+0x65c>
			{
				pos[MY]=piratePos_prev[2];
 80034f8:	4b6f      	ldr	r3, [pc, #444]	; (80036b8 <Control_Task_2+0x808>)
 80034fa:	789a      	ldrb	r2, [r3, #2]
 80034fc:	4b6f      	ldr	r3, [pc, #444]	; (80036bc <Control_Task_2+0x80c>)
 80034fe:	701a      	strb	r2, [r3, #0]
				orientation=REVERSE;
 8003500:	4b6f      	ldr	r3, [pc, #444]	; (80036c0 <Control_Task_2+0x810>)
 8003502:	2201      	movs	r2, #1
 8003504:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 8003506:	4b6f      	ldr	r3, [pc, #444]	; (80036c4 <Control_Task_2+0x814>)
 8003508:	2202      	movs	r2, #2
 800350a:	701a      	strb	r2, [r3, #0]
				sprintf(str,"Wait!\n\r");
				HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);
#endif
			}
		}
		if (control_task_2_state==2)
 800350c:	4b6d      	ldr	r3, [pc, #436]	; (80036c4 <Control_Task_2+0x814>)
 800350e:	781b      	ldrb	r3, [r3, #0]
 8003510:	2b02      	cmp	r3, #2
 8003512:	d15d      	bne.n	80035d0 <Control_Task_2+0x720>
		{
			for(i=0;i<6;i++)
 8003514:	4b6d      	ldr	r3, [pc, #436]	; (80036cc <Control_Task_2+0x81c>)
 8003516:	2200      	movs	r2, #0
 8003518:	701a      	strb	r2, [r3, #0]
 800351a:	e01e      	b.n	800355a <Control_Task_2+0x6aa>
			{
				if (N(piratePos_prev[1]).neighbours[i]==piratePos_prev[2])//O-hanyadik szomszedja L?
 800351c:	4b66      	ldr	r3, [pc, #408]	; (80036b8 <Control_Task_2+0x808>)
 800351e:	785b      	ldrb	r3, [r3, #1]
 8003520:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003524:	4b69      	ldr	r3, [pc, #420]	; (80036cc <Control_Task_2+0x81c>)
 8003526:	781b      	ldrb	r3, [r3, #0]
 8003528:	4618      	mov	r0, r3
 800352a:	4969      	ldr	r1, [pc, #420]	; (80036d0 <Control_Task_2+0x820>)
 800352c:	4613      	mov	r3, r2
 800352e:	009b      	lsls	r3, r3, #2
 8003530:	4413      	add	r3, r2
 8003532:	00db      	lsls	r3, r3, #3
 8003534:	440b      	add	r3, r1
 8003536:	4403      	add	r3, r0
 8003538:	330c      	adds	r3, #12
 800353a:	781a      	ldrb	r2, [r3, #0]
 800353c:	4b5e      	ldr	r3, [pc, #376]	; (80036b8 <Control_Task_2+0x808>)
 800353e:	789b      	ldrb	r3, [r3, #2]
 8003540:	429a      	cmp	r2, r3
 8003542:	d104      	bne.n	800354e <Control_Task_2+0x69e>
				{
					bestNb[NEXT]=i;
 8003544:	4b61      	ldr	r3, [pc, #388]	; (80036cc <Control_Task_2+0x81c>)
 8003546:	781a      	ldrb	r2, [r3, #0]
 8003548:	4b62      	ldr	r3, [pc, #392]	; (80036d4 <Control_Task_2+0x824>)
 800354a:	705a      	strb	r2, [r3, #1]
					break;
 800354c:	e009      	b.n	8003562 <Control_Task_2+0x6b2>
			for(i=0;i<6;i++)
 800354e:	4b5f      	ldr	r3, [pc, #380]	; (80036cc <Control_Task_2+0x81c>)
 8003550:	781b      	ldrb	r3, [r3, #0]
 8003552:	3301      	adds	r3, #1
 8003554:	b2da      	uxtb	r2, r3
 8003556:	4b5d      	ldr	r3, [pc, #372]	; (80036cc <Control_Task_2+0x81c>)
 8003558:	701a      	strb	r2, [r3, #0]
 800355a:	4b5c      	ldr	r3, [pc, #368]	; (80036cc <Control_Task_2+0x81c>)
 800355c:	781b      	ldrb	r3, [r3, #0]
 800355e:	2b05      	cmp	r3, #5
 8003560:	d9dc      	bls.n	800351c <Control_Task_2+0x66c>
				}
			}
			if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)path=LEFT;
 8003562:	4b5c      	ldr	r3, [pc, #368]	; (80036d4 <Control_Task_2+0x824>)
 8003564:	785b      	ldrb	r3, [r3, #1]
 8003566:	2b00      	cmp	r3, #0
 8003568:	d003      	beq.n	8003572 <Control_Task_2+0x6c2>
 800356a:	4b5a      	ldr	r3, [pc, #360]	; (80036d4 <Control_Task_2+0x824>)
 800356c:	785b      	ldrb	r3, [r3, #1]
 800356e:	2b03      	cmp	r3, #3
 8003570:	d103      	bne.n	800357a <Control_Task_2+0x6ca>
 8003572:	4b59      	ldr	r3, [pc, #356]	; (80036d8 <Control_Task_2+0x828>)
 8003574:	2200      	movs	r2, #0
 8003576:	701a      	strb	r2, [r3, #0]
 8003578:	e016      	b.n	80035a8 <Control_Task_2+0x6f8>
			else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)path=MIDDLE;
 800357a:	4b56      	ldr	r3, [pc, #344]	; (80036d4 <Control_Task_2+0x824>)
 800357c:	785b      	ldrb	r3, [r3, #1]
 800357e:	2b01      	cmp	r3, #1
 8003580:	d003      	beq.n	800358a <Control_Task_2+0x6da>
 8003582:	4b54      	ldr	r3, [pc, #336]	; (80036d4 <Control_Task_2+0x824>)
 8003584:	785b      	ldrb	r3, [r3, #1]
 8003586:	2b04      	cmp	r3, #4
 8003588:	d103      	bne.n	8003592 <Control_Task_2+0x6e2>
 800358a:	4b53      	ldr	r3, [pc, #332]	; (80036d8 <Control_Task_2+0x828>)
 800358c:	2201      	movs	r2, #1
 800358e:	701a      	strb	r2, [r3, #0]
 8003590:	e00a      	b.n	80035a8 <Control_Task_2+0x6f8>
			else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)path=RIGHT;
 8003592:	4b50      	ldr	r3, [pc, #320]	; (80036d4 <Control_Task_2+0x824>)
 8003594:	785b      	ldrb	r3, [r3, #1]
 8003596:	2b02      	cmp	r3, #2
 8003598:	d003      	beq.n	80035a2 <Control_Task_2+0x6f2>
 800359a:	4b4e      	ldr	r3, [pc, #312]	; (80036d4 <Control_Task_2+0x824>)
 800359c:	785b      	ldrb	r3, [r3, #1]
 800359e:	2b05      	cmp	r3, #5
 80035a0:	d102      	bne.n	80035a8 <Control_Task_2+0x6f8>
 80035a2:	4b4d      	ldr	r3, [pc, #308]	; (80036d8 <Control_Task_2+0x828>)
 80035a4:	2202      	movs	r2, #2
 80035a6:	701a      	strb	r2, [r3, #0]
			v_control=NORMAL_VEL;
 80035a8:	4b4c      	ldr	r3, [pc, #304]	; (80036dc <Control_Task_2+0x82c>)
 80035aa:	2202      	movs	r2, #2
 80035ac:	701a      	strb	r2, [r3, #0]
			sprintf(str,"d\n\r");
			str[0]=pos[MY];//honnan
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 3, 3);
#endif
#ifdef ADIBUGG
			sprintf(str,"dd\n\r");
 80035ae:	494c      	ldr	r1, [pc, #304]	; (80036e0 <Control_Task_2+0x830>)
 80035b0:	484c      	ldr	r0, [pc, #304]	; (80036e4 <Control_Task_2+0x834>)
 80035b2:	f00a f8ff 	bl	800d7b4 <siprintf>
			str[1]=pos[MY];//honnan
 80035b6:	4b41      	ldr	r3, [pc, #260]	; (80036bc <Control_Task_2+0x80c>)
 80035b8:	781a      	ldrb	r2, [r3, #0]
 80035ba:	4b4a      	ldr	r3, [pc, #296]	; (80036e4 <Control_Task_2+0x834>)
 80035bc:	705a      	strb	r2, [r3, #1]
			str[0]=9;//honnan
 80035be:	4b49      	ldr	r3, [pc, #292]	; (80036e4 <Control_Task_2+0x834>)
 80035c0:	2209      	movs	r2, #9
 80035c2:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 4, 3);
 80035c4:	2303      	movs	r3, #3
 80035c6:	2204      	movs	r2, #4
 80035c8:	4946      	ldr	r1, [pc, #280]	; (80036e4 <Control_Task_2+0x834>)
 80035ca:	68f8      	ldr	r0, [r7, #12]
 80035cc:	f008 fb89 	bl	800bce2 <HAL_UART_Transmit>
#endif
		}
	}

	if (control_task_2_state==2)//elotte mozgas
 80035d0:	4b3c      	ldr	r3, [pc, #240]	; (80036c4 <Control_Task_2+0x814>)
 80035d2:	781b      	ldrb	r3, [r3, #0]
 80035d4:	2b02      	cmp	r3, #2
 80035d6:	f040 810b 	bne.w	80037f0 <Control_Task_2+0x940>
	{
		static uint8_t stopAfterNode=0;

		if(nodeDetected || stopAfterNode)
 80035da:	4b43      	ldr	r3, [pc, #268]	; (80036e8 <Control_Task_2+0x838>)
 80035dc:	781b      	ldrb	r3, [r3, #0]
 80035de:	2b00      	cmp	r3, #0
 80035e0:	d104      	bne.n	80035ec <Control_Task_2+0x73c>
 80035e2:	4b42      	ldr	r3, [pc, #264]	; (80036ec <Control_Task_2+0x83c>)
 80035e4:	781b      	ldrb	r3, [r3, #0]
 80035e6:	2b00      	cmp	r3, #0
 80035e8:	f000 8102 	beq.w	80037f0 <Control_Task_2+0x940>
		{
			LED_B_TOGGLE;
 80035ec:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80035f0:	483f      	ldr	r0, [pc, #252]	; (80036f0 <Control_Task_2+0x840>)
 80035f2:	f005 fe3c 	bl	800926e <HAL_GPIO_TogglePin>
			if(nodeDetected)//ha nem sávváltó üzemmódban vagyunk pontotszámolunk és felszedett kapukat nullázzuk
 80035f6:	4b3c      	ldr	r3, [pc, #240]	; (80036e8 <Control_Task_2+0x838>)
 80035f8:	781b      	ldrb	r3, [r3, #0]
 80035fa:	2b00      	cmp	r3, #0
 80035fc:	d01f      	beq.n	800363e <Control_Task_2+0x78e>
			{
				collectedPoints +=N(pos[MY]).worth;//sávváltás módik vizsgáljuk az össezgyűjtött kapuk számát
 80035fe:	4b2f      	ldr	r3, [pc, #188]	; (80036bc <Control_Task_2+0x80c>)
 8003600:	781b      	ldrb	r3, [r3, #0]
 8003602:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003606:	4932      	ldr	r1, [pc, #200]	; (80036d0 <Control_Task_2+0x820>)
 8003608:	4613      	mov	r3, r2
 800360a:	009b      	lsls	r3, r3, #2
 800360c:	4413      	add	r3, r2
 800360e:	00db      	lsls	r3, r3, #3
 8003610:	440b      	add	r3, r1
 8003612:	3304      	adds	r3, #4
 8003614:	681b      	ldr	r3, [r3, #0]
 8003616:	b2da      	uxtb	r2, r3
 8003618:	4b36      	ldr	r3, [pc, #216]	; (80036f4 <Control_Task_2+0x844>)
 800361a:	781b      	ldrb	r3, [r3, #0]
 800361c:	4413      	add	r3, r2
 800361e:	b2da      	uxtb	r2, r3
 8003620:	4b34      	ldr	r3, [pc, #208]	; (80036f4 <Control_Task_2+0x844>)
 8003622:	701a      	strb	r2, [r3, #0]
				N(pos[MY]).worth=0;//ez a kapu már nem ér pontot
 8003624:	4b25      	ldr	r3, [pc, #148]	; (80036bc <Control_Task_2+0x80c>)
 8003626:	781b      	ldrb	r3, [r3, #0]
 8003628:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800362c:	4928      	ldr	r1, [pc, #160]	; (80036d0 <Control_Task_2+0x820>)
 800362e:	4613      	mov	r3, r2
 8003630:	009b      	lsls	r3, r3, #2
 8003632:	4413      	add	r3, r2
 8003634:	00db      	lsls	r3, r3, #3
 8003636:	440b      	add	r3, r1
 8003638:	3304      	adds	r3, #4
 800363a:	2200      	movs	r2, #0
 800363c:	601a      	str	r2, [r3, #0]
			}

			if(collectedPoints >= 34 && !laneChange)
 800363e:	4b2d      	ldr	r3, [pc, #180]	; (80036f4 <Control_Task_2+0x844>)
 8003640:	781b      	ldrb	r3, [r3, #0]
 8003642:	2b21      	cmp	r3, #33	; 0x21
 8003644:	d90f      	bls.n	8003666 <Control_Task_2+0x7b6>
 8003646:	4b2c      	ldr	r3, [pc, #176]	; (80036f8 <Control_Task_2+0x848>)
 8003648:	781b      	ldrb	r3, [r3, #0]
 800364a:	2b00      	cmp	r3, #0
 800364c:	d10b      	bne.n	8003666 <Control_Task_2+0x7b6>
			{
				laneChange=1; //flag állítás
 800364e:	4b2a      	ldr	r3, [pc, #168]	; (80036f8 <Control_Task_2+0x848>)
 8003650:	2201      	movs	r2, #1
 8003652:	701a      	strb	r2, [r3, #0]
				Lane_Change_Init(); //a sávváltóhely felé nőnek a rewardok
 8003654:	f000 faa8 	bl	8003ba8 <Lane_Change_Init>
				LED_Y(1); //sárga led világít
 8003658:	2200      	movs	r2, #0
 800365a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800365e:	4824      	ldr	r0, [pc, #144]	; (80036f0 <Control_Task_2+0x840>)
 8003660:	f005 fdec 	bl	800923c <HAL_GPIO_WritePin>
				return;
 8003664:	e0c4      	b.n	80037f0 <Control_Task_2+0x940>
			}

			if(piratePos_prev[1]==pos[MY])//ha celja a mi pozink, tudjuk a kovi celt
 8003666:	4b14      	ldr	r3, [pc, #80]	; (80036b8 <Control_Task_2+0x808>)
 8003668:	785a      	ldrb	r2, [r3, #1]
 800366a:	4b14      	ldr	r3, [pc, #80]	; (80036bc <Control_Task_2+0x80c>)
 800366c:	781b      	ldrb	r3, [r3, #0]
 800366e:	429a      	cmp	r2, r3
 8003670:	f040 80af 	bne.w	80037d2 <Control_Task_2+0x922>
			{
				pos[MY]=piratePos_prev[2];
 8003674:	4b10      	ldr	r3, [pc, #64]	; (80036b8 <Control_Task_2+0x808>)
 8003676:	789a      	ldrb	r2, [r3, #2]
 8003678:	4b10      	ldr	r3, [pc, #64]	; (80036bc <Control_Task_2+0x80c>)
 800367a:	701a      	strb	r2, [r3, #0]
				for(i=0; i<6;i++)
 800367c:	4b13      	ldr	r3, [pc, #76]	; (80036cc <Control_Task_2+0x81c>)
 800367e:	2200      	movs	r2, #0
 8003680:	701a      	strb	r2, [r3, #0]
 8003682:	e041      	b.n	8003708 <Control_Task_2+0x858>
				{
					if (N(piratePos_prev[1]).neighbours[i]==piratePos_prev[2])//O-hanyadik szomszedja L?
 8003684:	4b0c      	ldr	r3, [pc, #48]	; (80036b8 <Control_Task_2+0x808>)
 8003686:	785b      	ldrb	r3, [r3, #1]
 8003688:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800368c:	4b0f      	ldr	r3, [pc, #60]	; (80036cc <Control_Task_2+0x81c>)
 800368e:	781b      	ldrb	r3, [r3, #0]
 8003690:	4618      	mov	r0, r3
 8003692:	490f      	ldr	r1, [pc, #60]	; (80036d0 <Control_Task_2+0x820>)
 8003694:	4613      	mov	r3, r2
 8003696:	009b      	lsls	r3, r3, #2
 8003698:	4413      	add	r3, r2
 800369a:	00db      	lsls	r3, r3, #3
 800369c:	440b      	add	r3, r1
 800369e:	4403      	add	r3, r0
 80036a0:	330c      	adds	r3, #12
 80036a2:	781a      	ldrb	r2, [r3, #0]
 80036a4:	4b04      	ldr	r3, [pc, #16]	; (80036b8 <Control_Task_2+0x808>)
 80036a6:	789b      	ldrb	r3, [r3, #2]
 80036a8:	429a      	cmp	r2, r3
 80036aa:	d127      	bne.n	80036fc <Control_Task_2+0x84c>
					{
						bestNb[NEXT]=i;
 80036ac:	4b07      	ldr	r3, [pc, #28]	; (80036cc <Control_Task_2+0x81c>)
 80036ae:	781a      	ldrb	r2, [r3, #0]
 80036b0:	4b08      	ldr	r3, [pc, #32]	; (80036d4 <Control_Task_2+0x824>)
 80036b2:	705a      	strb	r2, [r3, #1]
						break;
 80036b4:	e02c      	b.n	8003710 <Control_Task_2+0x860>
 80036b6:	bf00      	nop
 80036b8:	2000071c 	.word	0x2000071c
 80036bc:	20000010 	.word	0x20000010
 80036c0:	2000034c 	.word	0x2000034c
 80036c4:	20000710 	.word	0x20000710
 80036c8:	2000074f 	.word	0x2000074f
 80036cc:	2000072a 	.word	0x2000072a
 80036d0:	20000360 	.word	0x20000360
 80036d4:	2000072c 	.word	0x2000072c
 80036d8:	2000034e 	.word	0x2000034e
 80036dc:	20000351 	.word	0x20000351
 80036e0:	08011214 	.word	0x08011214
 80036e4:	20000730 	.word	0x20000730
 80036e8:	2000034d 	.word	0x2000034d
 80036ec:	20000750 	.word	0x20000750
 80036f0:	40020400 	.word	0x40020400
 80036f4:	2000034f 	.word	0x2000034f
 80036f8:	20000350 	.word	0x20000350
				for(i=0; i<6;i++)
 80036fc:	4b3e      	ldr	r3, [pc, #248]	; (80037f8 <Control_Task_2+0x948>)
 80036fe:	781b      	ldrb	r3, [r3, #0]
 8003700:	3301      	adds	r3, #1
 8003702:	b2da      	uxtb	r2, r3
 8003704:	4b3c      	ldr	r3, [pc, #240]	; (80037f8 <Control_Task_2+0x948>)
 8003706:	701a      	strb	r2, [r3, #0]
 8003708:	4b3b      	ldr	r3, [pc, #236]	; (80037f8 <Control_Task_2+0x948>)
 800370a:	781b      	ldrb	r3, [r3, #0]
 800370c:	2b05      	cmp	r3, #5
 800370e:	d9b9      	bls.n	8003684 <Control_Task_2+0x7d4>
					}
				}
				if(N(pos[MY]).type>2)//ha a kövi node-on nincs kapu
 8003710:	4b3a      	ldr	r3, [pc, #232]	; (80037fc <Control_Task_2+0x94c>)
 8003712:	781b      	ldrb	r3, [r3, #0]
 8003714:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003718:	4939      	ldr	r1, [pc, #228]	; (8003800 <Control_Task_2+0x950>)
 800371a:	4613      	mov	r3, r2
 800371c:	009b      	lsls	r3, r3, #2
 800371e:	4413      	add	r3, r2
 8003720:	00db      	lsls	r3, r3, #3
 8003722:	440b      	add	r3, r1
 8003724:	3308      	adds	r3, #8
 8003726:	681b      	ldr	r3, [r3, #0]
 8003728:	2b02      	cmp	r3, #2
 800372a:	d917      	bls.n	800375c <Control_Task_2+0x8ac>
				{
					s=0;
 800372c:	4b35      	ldr	r3, [pc, #212]	; (8003804 <Control_Task_2+0x954>)
 800372e:	f04f 0200 	mov.w	r2, #0
 8003732:	601a      	str	r2, [r3, #0]
					sMAX=N(pos[MY]).distance[bestNb[NEXT]]+25;
 8003734:	4b31      	ldr	r3, [pc, #196]	; (80037fc <Control_Task_2+0x94c>)
 8003736:	781b      	ldrb	r3, [r3, #0]
 8003738:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800373c:	4b32      	ldr	r3, [pc, #200]	; (8003808 <Control_Task_2+0x958>)
 800373e:	785b      	ldrb	r3, [r3, #1]
 8003740:	4618      	mov	r0, r3
 8003742:	492f      	ldr	r1, [pc, #188]	; (8003800 <Control_Task_2+0x950>)
 8003744:	4613      	mov	r3, r2
 8003746:	009b      	lsls	r3, r3, #2
 8003748:	4413      	add	r3, r2
 800374a:	009b      	lsls	r3, r3, #2
 800374c:	4403      	add	r3, r0
 800374e:	330c      	adds	r3, #12
 8003750:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8003754:	3319      	adds	r3, #25
 8003756:	461a      	mov	r2, r3
 8003758:	4b2c      	ldr	r3, [pc, #176]	; (800380c <Control_Task_2+0x95c>)
 800375a:	601a      	str	r2, [r3, #0]
				}
				if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)path=LEFT;
 800375c:	4b2a      	ldr	r3, [pc, #168]	; (8003808 <Control_Task_2+0x958>)
 800375e:	785b      	ldrb	r3, [r3, #1]
 8003760:	2b00      	cmp	r3, #0
 8003762:	d003      	beq.n	800376c <Control_Task_2+0x8bc>
 8003764:	4b28      	ldr	r3, [pc, #160]	; (8003808 <Control_Task_2+0x958>)
 8003766:	785b      	ldrb	r3, [r3, #1]
 8003768:	2b03      	cmp	r3, #3
 800376a:	d103      	bne.n	8003774 <Control_Task_2+0x8c4>
 800376c:	4b28      	ldr	r3, [pc, #160]	; (8003810 <Control_Task_2+0x960>)
 800376e:	2200      	movs	r2, #0
 8003770:	701a      	strb	r2, [r3, #0]
 8003772:	e016      	b.n	80037a2 <Control_Task_2+0x8f2>
				else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)path=MIDDLE;
 8003774:	4b24      	ldr	r3, [pc, #144]	; (8003808 <Control_Task_2+0x958>)
 8003776:	785b      	ldrb	r3, [r3, #1]
 8003778:	2b01      	cmp	r3, #1
 800377a:	d003      	beq.n	8003784 <Control_Task_2+0x8d4>
 800377c:	4b22      	ldr	r3, [pc, #136]	; (8003808 <Control_Task_2+0x958>)
 800377e:	785b      	ldrb	r3, [r3, #1]
 8003780:	2b04      	cmp	r3, #4
 8003782:	d103      	bne.n	800378c <Control_Task_2+0x8dc>
 8003784:	4b22      	ldr	r3, [pc, #136]	; (8003810 <Control_Task_2+0x960>)
 8003786:	2201      	movs	r2, #1
 8003788:	701a      	strb	r2, [r3, #0]
 800378a:	e00a      	b.n	80037a2 <Control_Task_2+0x8f2>
				else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)path=RIGHT;
 800378c:	4b1e      	ldr	r3, [pc, #120]	; (8003808 <Control_Task_2+0x958>)
 800378e:	785b      	ldrb	r3, [r3, #1]
 8003790:	2b02      	cmp	r3, #2
 8003792:	d003      	beq.n	800379c <Control_Task_2+0x8ec>
 8003794:	4b1c      	ldr	r3, [pc, #112]	; (8003808 <Control_Task_2+0x958>)
 8003796:	785b      	ldrb	r3, [r3, #1]
 8003798:	2b05      	cmp	r3, #5
 800379a:	d102      	bne.n	80037a2 <Control_Task_2+0x8f2>
 800379c:	4b1c      	ldr	r3, [pc, #112]	; (8003810 <Control_Task_2+0x960>)
 800379e:	2202      	movs	r2, #2
 80037a0:	701a      	strb	r2, [r3, #0]
				v_control=NORMAL_VEL;
 80037a2:	4b1c      	ldr	r3, [pc, #112]	; (8003814 <Control_Task_2+0x964>)
 80037a4:	2202      	movs	r2, #2
 80037a6:	701a      	strb	r2, [r3, #0]
				stopAfterNode=0;
 80037a8:	4b1b      	ldr	r3, [pc, #108]	; (8003818 <Control_Task_2+0x968>)
 80037aa:	2200      	movs	r2, #0
 80037ac:	701a      	strb	r2, [r3, #0]
#ifdef ADIBUGG
			sprintf(str,"dd\n\r");
 80037ae:	491b      	ldr	r1, [pc, #108]	; (800381c <Control_Task_2+0x96c>)
 80037b0:	481b      	ldr	r0, [pc, #108]	; (8003820 <Control_Task_2+0x970>)
 80037b2:	f009 ffff 	bl	800d7b4 <siprintf>
			str[1]=pos[MY];//honnan
 80037b6:	4b11      	ldr	r3, [pc, #68]	; (80037fc <Control_Task_2+0x94c>)
 80037b8:	781a      	ldrb	r2, [r3, #0]
 80037ba:	4b19      	ldr	r3, [pc, #100]	; (8003820 <Control_Task_2+0x970>)
 80037bc:	705a      	strb	r2, [r3, #1]
			str[0]=9;//honnan
 80037be:	4b18      	ldr	r3, [pc, #96]	; (8003820 <Control_Task_2+0x970>)
 80037c0:	2209      	movs	r2, #9
 80037c2:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 4, 3);
 80037c4:	2303      	movs	r3, #3
 80037c6:	2204      	movs	r2, #4
 80037c8:	4915      	ldr	r1, [pc, #84]	; (8003820 <Control_Task_2+0x970>)
 80037ca:	68f8      	ldr	r0, [r7, #12]
 80037cc:	f008 fa89 	bl	800bce2 <HAL_UART_Transmit>
 80037d0:	e005      	b.n	80037de <Control_Task_2+0x92e>
#endif

			}
			else
			{
				v_control=STOP;//wait
 80037d2:	4b10      	ldr	r3, [pc, #64]	; (8003814 <Control_Task_2+0x964>)
 80037d4:	2200      	movs	r2, #0
 80037d6:	701a      	strb	r2, [r3, #0]
				stopAfterNode=1;
 80037d8:	4b0f      	ldr	r3, [pc, #60]	; (8003818 <Control_Task_2+0x968>)
 80037da:	2201      	movs	r2, #1
 80037dc:	701a      	strb	r2, [r3, #0]
			}
			nodeDetected=0;
 80037de:	4b11      	ldr	r3, [pc, #68]	; (8003824 <Control_Task_2+0x974>)
 80037e0:	2200      	movs	r2, #0
 80037e2:	701a      	strb	r2, [r3, #0]
 80037e4:	e004      	b.n	80037f0 <Control_Task_2+0x940>
	if(mode!=SKILL || laneChange)return;
 80037e6:	bf00      	nop
 80037e8:	e002      	b.n	80037f0 <Control_Task_2+0x940>
	else if(control_task_2_tick>tick)return;
 80037ea:	bf00      	nop
 80037ec:	e000      	b.n	80037f0 <Control_Task_2+0x940>
	if(piratePos_prev[0]==0)return; //ha nem kaptunk még adatot a TB-tol return
 80037ee:	bf00      	nop
		}
	}
}
 80037f0:	3710      	adds	r7, #16
 80037f2:	46bd      	mov	sp, r7
 80037f4:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 80037f8:	2000072a 	.word	0x2000072a
 80037fc:	20000010 	.word	0x20000010
 8003800:	20000360 	.word	0x20000360
 8003804:	20000714 	.word	0x20000714
 8003808:	2000072c 	.word	0x2000072c
 800380c:	20000014 	.word	0x20000014
 8003810:	2000034e 	.word	0x2000034e
 8003814:	20000351 	.word	0x20000351
 8003818:	20000750 	.word	0x20000750
 800381c:	08011214 	.word	0x08011214
 8003820:	20000730 	.word	0x20000730
 8003824:	2000034d 	.word	0x2000034d

08003828 <Mode_Selector>:

void Mode_Selector(UART_HandleTypeDef *huart_debugg, UART_HandleTypeDef *huart_stm)
{
 8003828:	b580      	push	{r7, lr}
 800382a:	b08e      	sub	sp, #56	; 0x38
 800382c:	af00      	add	r7, sp, #0
 800382e:	6078      	str	r0, [r7, #4]
 8003830:	6039      	str	r1, [r7, #0]
	//Milyen módban kell működni?
	uint8_t buffer[40];
	uint8_t tmp=*(__IO uint8_t *) FLASH_ADDRESS_MODESELECTOR; //FLASH-ből kiolvassuk, hogy milyen módban vagyunk
 8003832:	4b5f      	ldr	r3, [pc, #380]	; (80039b0 <Mode_Selector+0x188>)
 8003834:	781b      	ldrb	r3, [r3, #0]
 8003836:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37

	if(tmp==SKILL || tmp==FAST) mode = tmp;
 800383a:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 800383e:	2b52      	cmp	r3, #82	; 0x52
 8003840:	d003      	beq.n	800384a <Mode_Selector+0x22>
 8003842:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8003846:	2b3f      	cmp	r3, #63	; 0x3f
 8003848:	d104      	bne.n	8003854 <Mode_Selector+0x2c>
 800384a:	4a5a      	ldr	r2, [pc, #360]	; (80039b4 <Mode_Selector+0x18c>)
 800384c:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8003850:	7013      	strb	r3, [r2, #0]
 8003852:	e022      	b.n	800389a <Mode_Selector+0x72>
	else
	{
		HAL_FLASH_Unlock();
 8003854:	f005 f98c 	bl	8008b70 <HAL_FLASH_Unlock>
		HAL_Delay(50);
 8003858:	2032      	movs	r0, #50	; 0x32
 800385a:	f003 fe55 	bl	8007508 <HAL_Delay>
		FLASH_Erase_Sector(7, FLASH_VOLTAGE_RANGE_3);
 800385e:	2102      	movs	r1, #2
 8003860:	2007      	movs	r0, #7
 8003862:	f005 faf7 	bl	8008e54 <FLASH_Erase_Sector>
		HAL_Delay(50);
 8003866:	2032      	movs	r0, #50	; 0x32
 8003868:	f003 fe4e 	bl	8007508 <HAL_Delay>
		HAL_FLASH_Lock();
 800386c:	f005 f9a2 	bl	8008bb4 <HAL_FLASH_Lock>
		HAL_FLASH_Unlock();
 8003870:	f005 f97e 	bl	8008b70 <HAL_FLASH_Unlock>
		HAL_Delay(50);
 8003874:	2032      	movs	r0, #50	; 0x32
 8003876:	f003 fe47 	bl	8007508 <HAL_Delay>
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_MODESELECTOR, SKILL); //ha eddig skill mód volt akor msot gyors lesz
 800387a:	f04f 0252 	mov.w	r2, #82	; 0x52
 800387e:	f04f 0300 	mov.w	r3, #0
 8003882:	494b      	ldr	r1, [pc, #300]	; (80039b0 <Mode_Selector+0x188>)
 8003884:	2000      	movs	r0, #0
 8003886:	f005 f91f 	bl	8008ac8 <HAL_FLASH_Program>
		HAL_Delay(50);
 800388a:	2032      	movs	r0, #50	; 0x32
 800388c:	f003 fe3c 	bl	8007508 <HAL_Delay>
		HAL_FLASH_Lock();
 8003890:	f005 f990 	bl	8008bb4 <HAL_FLASH_Lock>

		mode=SKILL;
 8003894:	4b47      	ldr	r3, [pc, #284]	; (80039b4 <Mode_Selector+0x18c>)
 8003896:	2252      	movs	r2, #82	; 0x52
 8003898:	701a      	strb	r2, [r3, #0]
	}

	if(mode==SKILL)
 800389a:	4b46      	ldr	r3, [pc, #280]	; (80039b4 <Mode_Selector+0x18c>)
 800389c:	781b      	ldrb	r3, [r3, #0]
 800389e:	2b52      	cmp	r3, #82	; 0x52
 80038a0:	d135      	bne.n	800390e <Mode_Selector+0xe6>
	{
		buffer[0] = CMD_MODE_SKILL; //szólunk a g0-nak, hogy ügyességi módban vagyunk
 80038a2:	2352      	movs	r3, #82	; 0x52
 80038a4:	733b      	strb	r3, [r7, #12]
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 80038a6:	f107 010c 	add.w	r1, r7, #12
 80038aa:	230a      	movs	r3, #10
 80038ac:	2201      	movs	r2, #1
 80038ae:	6838      	ldr	r0, [r7, #0]
 80038b0:	f008 fa17 	bl	800bce2 <HAL_UART_Transmit>
		HAL_Delay(10);
 80038b4:	200a      	movs	r0, #10
 80038b6:	f003 fe27 	bl	8007508 <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);//3 szór is szólunk neki, hogy tuti megkapja a módváltásról az üzenetet
 80038ba:	f107 010c 	add.w	r1, r7, #12
 80038be:	230a      	movs	r3, #10
 80038c0:	2201      	movs	r2, #1
 80038c2:	6838      	ldr	r0, [r7, #0]
 80038c4:	f008 fa0d 	bl	800bce2 <HAL_UART_Transmit>
		HAL_Delay(10);
 80038c8:	200a      	movs	r0, #10
 80038ca:	f003 fe1d 	bl	8007508 <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 80038ce:	f107 010c 	add.w	r1, r7, #12
 80038d2:	230a      	movs	r3, #10
 80038d4:	2201      	movs	r2, #1
 80038d6:	6838      	ldr	r0, [r7, #0]
 80038d8:	f008 fa03 	bl	800bce2 <HAL_UART_Transmit>

		sprintf((char*)buffer,"Skill mode!\n\r"); //Debugg uart-ra is kiküldjük, hogy milyen módban vagyunk
 80038dc:	f107 030c 	add.w	r3, r7, #12
 80038e0:	4935      	ldr	r1, [pc, #212]	; (80039b8 <Mode_Selector+0x190>)
 80038e2:	4618      	mov	r0, r3
 80038e4:	f009 ff66 	bl	800d7b4 <siprintf>
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
 80038e8:	f107 030c 	add.w	r3, r7, #12
 80038ec:	4618      	mov	r0, r3
 80038ee:	f7fc fc8f 	bl	8000210 <strlen>
 80038f2:	4603      	mov	r3, r0
 80038f4:	b29a      	uxth	r2, r3
 80038f6:	f107 010c 	add.w	r1, r7, #12
 80038fa:	2364      	movs	r3, #100	; 0x64
 80038fc:	6878      	ldr	r0, [r7, #4]
 80038fe:	f008 f9f0 	bl	800bce2 <HAL_UART_Transmit>
		LED_NUCLEO(1); //A NUCLEO zöld LED-je világít, ha ügyeségi üzemmódban vagyunk
 8003902:	2201      	movs	r2, #1
 8003904:	2120      	movs	r1, #32
 8003906:	482d      	ldr	r0, [pc, #180]	; (80039bc <Mode_Selector+0x194>)
 8003908:	f005 fc98 	bl	800923c <HAL_GPIO_WritePin>
	else
	{
		sprintf((char*)buffer,"Flash error! Press blue button!\n\r");
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
	}
}
 800390c:	e04c      	b.n	80039a8 <Mode_Selector+0x180>
	else if(mode==FAST)
 800390e:	4b29      	ldr	r3, [pc, #164]	; (80039b4 <Mode_Selector+0x18c>)
 8003910:	781b      	ldrb	r3, [r3, #0]
 8003912:	2b3f      	cmp	r3, #63	; 0x3f
 8003914:	d135      	bne.n	8003982 <Mode_Selector+0x15a>
		buffer[0] = CMD_MODE_FAST;
 8003916:	233f      	movs	r3, #63	; 0x3f
 8003918:	733b      	strb	r3, [r7, #12]
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 800391a:	f107 010c 	add.w	r1, r7, #12
 800391e:	230a      	movs	r3, #10
 8003920:	2201      	movs	r2, #1
 8003922:	6838      	ldr	r0, [r7, #0]
 8003924:	f008 f9dd 	bl	800bce2 <HAL_UART_Transmit>
		HAL_Delay(10);
 8003928:	200a      	movs	r0, #10
 800392a:	f003 fded 	bl	8007508 <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 800392e:	f107 010c 	add.w	r1, r7, #12
 8003932:	230a      	movs	r3, #10
 8003934:	2201      	movs	r2, #1
 8003936:	6838      	ldr	r0, [r7, #0]
 8003938:	f008 f9d3 	bl	800bce2 <HAL_UART_Transmit>
		HAL_Delay(10);
 800393c:	200a      	movs	r0, #10
 800393e:	f003 fde3 	bl	8007508 <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 8003942:	f107 010c 	add.w	r1, r7, #12
 8003946:	230a      	movs	r3, #10
 8003948:	2201      	movs	r2, #1
 800394a:	6838      	ldr	r0, [r7, #0]
 800394c:	f008 f9c9 	bl	800bce2 <HAL_UART_Transmit>
		sprintf((char*)buffer,"Fast mode!\n\r");
 8003950:	f107 030c 	add.w	r3, r7, #12
 8003954:	491a      	ldr	r1, [pc, #104]	; (80039c0 <Mode_Selector+0x198>)
 8003956:	4618      	mov	r0, r3
 8003958:	f009 ff2c 	bl	800d7b4 <siprintf>
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
 800395c:	f107 030c 	add.w	r3, r7, #12
 8003960:	4618      	mov	r0, r3
 8003962:	f7fc fc55 	bl	8000210 <strlen>
 8003966:	4603      	mov	r3, r0
 8003968:	b29a      	uxth	r2, r3
 800396a:	f107 010c 	add.w	r1, r7, #12
 800396e:	2364      	movs	r3, #100	; 0x64
 8003970:	6878      	ldr	r0, [r7, #4]
 8003972:	f008 f9b6 	bl	800bce2 <HAL_UART_Transmit>
		LED_NUCLEO(0);
 8003976:	2200      	movs	r2, #0
 8003978:	2120      	movs	r1, #32
 800397a:	4810      	ldr	r0, [pc, #64]	; (80039bc <Mode_Selector+0x194>)
 800397c:	f005 fc5e 	bl	800923c <HAL_GPIO_WritePin>
}
 8003980:	e012      	b.n	80039a8 <Mode_Selector+0x180>
		sprintf((char*)buffer,"Flash error! Press blue button!\n\r");
 8003982:	f107 030c 	add.w	r3, r7, #12
 8003986:	490f      	ldr	r1, [pc, #60]	; (80039c4 <Mode_Selector+0x19c>)
 8003988:	4618      	mov	r0, r3
 800398a:	f009 ff13 	bl	800d7b4 <siprintf>
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
 800398e:	f107 030c 	add.w	r3, r7, #12
 8003992:	4618      	mov	r0, r3
 8003994:	f7fc fc3c 	bl	8000210 <strlen>
 8003998:	4603      	mov	r3, r0
 800399a:	b29a      	uxth	r2, r3
 800399c:	f107 010c 	add.w	r1, r7, #12
 80039a0:	2364      	movs	r3, #100	; 0x64
 80039a2:	6878      	ldr	r0, [r7, #4]
 80039a4:	f008 f99d 	bl	800bce2 <HAL_UART_Transmit>
}
 80039a8:	bf00      	nop
 80039aa:	3738      	adds	r7, #56	; 0x38
 80039ac:	46bd      	mov	sp, r7
 80039ae:	bd80      	pop	{r7, pc}
 80039b0:	08060000 	.word	0x08060000
 80039b4:	2000033e 	.word	0x2000033e
 80039b8:	0801121c 	.word	0x0801121c
 80039bc:	40020000 	.word	0x40020000
 80039c0:	0801122c 	.word	0x0801122c
 80039c4:	0801123c 	.word	0x0801123c

080039c8 <Wait_For_Start_Sigal>:
	HAL_UART_Transmit(huart_monitoring, data, 11, 4);
}


void Wait_For_Start_Sigal(UART_HandleTypeDef *huart_TB, UART_HandleTypeDef *huart_debugg)
{
 80039c8:	b580      	push	{r7, lr}
 80039ca:	b084      	sub	sp, #16
 80039cc:	af00      	add	r7, sp, #0
 80039ce:	6078      	str	r0, [r7, #4]
 80039d0:	6039      	str	r1, [r7, #0]
	uint8_t rcv[]={0};
 80039d2:	2300      	movs	r3, #0
 80039d4:	723b      	strb	r3, [r7, #8]
	static uint8_t cnt=5;
	if(mode!=SKILL)return;
 80039d6:	4b2f      	ldr	r3, [pc, #188]	; (8003a94 <Wait_For_Start_Sigal+0xcc>)
 80039d8:	781b      	ldrb	r3, [r3, #0]
 80039da:	2b52      	cmp	r3, #82	; 0x52
 80039dc:	d156      	bne.n	8003a8c <Wait_For_Start_Sigal+0xc4>
	while(1)
	{
		//Bluetooth-on érkezika  start jel
		HAL_UART_Receive(huart_TB, rcv, 1, 7000);
 80039de:	f107 0108 	add.w	r1, r7, #8
 80039e2:	f641 3358 	movw	r3, #7000	; 0x1b58
 80039e6:	2201      	movs	r2, #1
 80039e8:	6878      	ldr	r0, [r7, #4]
 80039ea:	f008 fa0c 	bl	800be06 <HAL_UART_Receive>
		if(rcv[0]==cnt+0x30)
 80039ee:	7a3b      	ldrb	r3, [r7, #8]
 80039f0:	461a      	mov	r2, r3
 80039f2:	4b29      	ldr	r3, [pc, #164]	; (8003a98 <Wait_For_Start_Sigal+0xd0>)
 80039f4:	781b      	ldrb	r3, [r3, #0]
 80039f6:	3330      	adds	r3, #48	; 0x30
 80039f8:	429a      	cmp	r2, r3
 80039fa:	d11a      	bne.n	8003a32 <Wait_For_Start_Sigal+0x6a>
		{
			if(cnt<4)
 80039fc:	4b26      	ldr	r3, [pc, #152]	; (8003a98 <Wait_For_Start_Sigal+0xd0>)
 80039fe:	781b      	ldrb	r3, [r3, #0]
 8003a00:	2b03      	cmp	r3, #3
 8003a02:	d80c      	bhi.n	8003a1e <Wait_For_Start_Sigal+0x56>
			{
				HAL_UART_Transmit(huart_debugg, rcv, 1, 2);
 8003a04:	f107 0108 	add.w	r1, r7, #8
 8003a08:	2302      	movs	r3, #2
 8003a0a:	2201      	movs	r2, #1
 8003a0c:	6838      	ldr	r0, [r7, #0]
 8003a0e:	f008 f968 	bl	800bce2 <HAL_UART_Transmit>
				HAL_UART_Transmit(huart_debugg, (uint8_t*)"\n\r", 2, 2);
 8003a12:	2302      	movs	r3, #2
 8003a14:	2202      	movs	r2, #2
 8003a16:	4921      	ldr	r1, [pc, #132]	; (8003a9c <Wait_For_Start_Sigal+0xd4>)
 8003a18:	6838      	ldr	r0, [r7, #0]
 8003a1a:	f008 f962 	bl	800bce2 <HAL_UART_Transmit>
			}
			if(rcv[0]=='0')break;
 8003a1e:	7a3b      	ldrb	r3, [r7, #8]
 8003a20:	2b30      	cmp	r3, #48	; 0x30
 8003a22:	d026      	beq.n	8003a72 <Wait_For_Start_Sigal+0xaa>
			cnt--;
 8003a24:	4b1c      	ldr	r3, [pc, #112]	; (8003a98 <Wait_For_Start_Sigal+0xd0>)
 8003a26:	781b      	ldrb	r3, [r3, #0]
 8003a28:	3b01      	subs	r3, #1
 8003a2a:	b2da      	uxtb	r2, r3
 8003a2c:	4b1a      	ldr	r3, [pc, #104]	; (8003a98 <Wait_For_Start_Sigal+0xd0>)
 8003a2e:	701a      	strb	r2, [r3, #0]
 8003a30:	e002      	b.n	8003a38 <Wait_For_Start_Sigal+0x70>
		}
		else cnt=5;
 8003a32:	4b19      	ldr	r3, [pc, #100]	; (8003a98 <Wait_For_Start_Sigal+0xd0>)
 8003a34:	2205      	movs	r2, #5
 8003a36:	701a      	strb	r2, [r3, #0]

		//Kézi próbaindítás
		if(B2)
 8003a38:	2120      	movs	r1, #32
 8003a3a:	4819      	ldr	r0, [pc, #100]	; (8003aa0 <Wait_For_Start_Sigal+0xd8>)
 8003a3c:	f005 fbe6 	bl	800920c <HAL_GPIO_ReadPin>
 8003a40:	4603      	mov	r3, r0
 8003a42:	2b00      	cmp	r3, #0
 8003a44:	d0cb      	beq.n	80039de <Wait_For_Start_Sigal+0x16>
		{
			int i;
			for(i=0;i<10;i++)
 8003a46:	2300      	movs	r3, #0
 8003a48:	60fb      	str	r3, [r7, #12]
 8003a4a:	e009      	b.n	8003a60 <Wait_For_Start_Sigal+0x98>
			{
				LED_G_TOGGLE;
 8003a4c:	2102      	movs	r1, #2
 8003a4e:	4814      	ldr	r0, [pc, #80]	; (8003aa0 <Wait_For_Start_Sigal+0xd8>)
 8003a50:	f005 fc0d 	bl	800926e <HAL_GPIO_TogglePin>
				Delay(200);
 8003a54:	20c8      	movs	r0, #200	; 0xc8
 8003a56:	f002 ff03 	bl	8006860 <Delay>
			for(i=0;i<10;i++)
 8003a5a:	68fb      	ldr	r3, [r7, #12]
 8003a5c:	3301      	adds	r3, #1
 8003a5e:	60fb      	str	r3, [r7, #12]
 8003a60:	68fb      	ldr	r3, [r7, #12]
 8003a62:	2b09      	cmp	r3, #9
 8003a64:	ddf2      	ble.n	8003a4c <Wait_For_Start_Sigal+0x84>
			}
			LED_G(0);
 8003a66:	2201      	movs	r2, #1
 8003a68:	2102      	movs	r1, #2
 8003a6a:	480d      	ldr	r0, [pc, #52]	; (8003aa0 <Wait_For_Start_Sigal+0xd8>)
 8003a6c:	f005 fbe6 	bl	800923c <HAL_GPIO_WritePin>
			break;//ha megnyomtuka 2-es gombot kiugrunk a while ciklusból
 8003a70:	e000      	b.n	8003a74 <Wait_For_Start_Sigal+0xac>
			if(rcv[0]=='0')break;
 8003a72:	bf00      	nop
		}

	}
	HAL_UART_Receive_IT(huart_TB, tb_msg, 6);
 8003a74:	2206      	movs	r2, #6
 8003a76:	490b      	ldr	r1, [pc, #44]	; (8003aa4 <Wait_For_Start_Sigal+0xdc>)
 8003a78:	6878      	ldr	r0, [r7, #4]
 8003a7a:	f008 fa66 	bl	800bf4a <HAL_UART_Receive_IT>
	HAL_UART_Transmit(huart_debugg, (uint8_t*)"START!\n\r",8, 3);
 8003a7e:	2303      	movs	r3, #3
 8003a80:	2208      	movs	r2, #8
 8003a82:	4909      	ldr	r1, [pc, #36]	; (8003aa8 <Wait_For_Start_Sigal+0xe0>)
 8003a84:	6838      	ldr	r0, [r7, #0]
 8003a86:	f008 f92c 	bl	800bce2 <HAL_UART_Transmit>
 8003a8a:	e000      	b.n	8003a8e <Wait_For_Start_Sigal+0xc6>
	if(mode!=SKILL)return;
 8003a8c:	bf00      	nop
}
 8003a8e:	3710      	adds	r7, #16
 8003a90:	46bd      	mov	sp, r7
 8003a92:	bd80      	pop	{r7, pc}
 8003a94:	2000033e 	.word	0x2000033e
 8003a98:	20000036 	.word	0x20000036
 8003a9c:	08011260 	.word	0x08011260
 8003aa0:	40020400 	.word	0x40020400
 8003aa4:	20000354 	.word	0x20000354
 8003aa8:	08011264 	.word	0x08011264

08003aac <Uart_Receive_Thunderboard_ISR>:
void Uart_Receive_Thunderboard_ISR(UART_HandleTypeDef *huart_TB, UART_HandleTypeDef *huart_debugg)
{
 8003aac:	b580      	push	{r7, lr}
 8003aae:	b082      	sub	sp, #8
 8003ab0:	af00      	add	r7, sp, #0
 8003ab2:	6078      	str	r0, [r7, #4]
 8003ab4:	6039      	str	r1, [r7, #0]
	static uint8_t sp[]={0};//slip protection
	static uint8_t cnt=0;
	if(tb_msg[0]>='A' && tb_msg[0]<='Z' && tb_msg[5]>='0' && tb_msg[5]<='9')
 8003ab6:	4b37      	ldr	r3, [pc, #220]	; (8003b94 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003ab8:	781b      	ldrb	r3, [r3, #0]
 8003aba:	2b40      	cmp	r3, #64	; 0x40
 8003abc:	d93d      	bls.n	8003b3a <Uart_Receive_Thunderboard_ISR+0x8e>
 8003abe:	4b35      	ldr	r3, [pc, #212]	; (8003b94 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003ac0:	781b      	ldrb	r3, [r3, #0]
 8003ac2:	2b5a      	cmp	r3, #90	; 0x5a
 8003ac4:	d839      	bhi.n	8003b3a <Uart_Receive_Thunderboard_ISR+0x8e>
 8003ac6:	4b33      	ldr	r3, [pc, #204]	; (8003b94 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003ac8:	795b      	ldrb	r3, [r3, #5]
 8003aca:	2b2f      	cmp	r3, #47	; 0x2f
 8003acc:	d935      	bls.n	8003b3a <Uart_Receive_Thunderboard_ISR+0x8e>
 8003ace:	4b31      	ldr	r3, [pc, #196]	; (8003b94 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003ad0:	795b      	ldrb	r3, [r3, #5]
 8003ad2:	2b39      	cmp	r3, #57	; 0x39
 8003ad4:	d831      	bhi.n	8003b3a <Uart_Receive_Thunderboard_ISR+0x8e>
	{
		piratePos[0]=tb_msg[0];	piratePos[1]=tb_msg[1];	piratePos[2]=tb_msg[2];
 8003ad6:	4b2f      	ldr	r3, [pc, #188]	; (8003b94 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003ad8:	781a      	ldrb	r2, [r3, #0]
 8003ada:	4b2f      	ldr	r3, [pc, #188]	; (8003b98 <Uart_Receive_Thunderboard_ISR+0xec>)
 8003adc:	701a      	strb	r2, [r3, #0]
 8003ade:	4b2d      	ldr	r3, [pc, #180]	; (8003b94 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003ae0:	785a      	ldrb	r2, [r3, #1]
 8003ae2:	4b2d      	ldr	r3, [pc, #180]	; (8003b98 <Uart_Receive_Thunderboard_ISR+0xec>)
 8003ae4:	705a      	strb	r2, [r3, #1]
 8003ae6:	4b2b      	ldr	r3, [pc, #172]	; (8003b94 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003ae8:	789a      	ldrb	r2, [r3, #2]
 8003aea:	4b2b      	ldr	r3, [pc, #172]	; (8003b98 <Uart_Receive_Thunderboard_ISR+0xec>)
 8003aec:	709a      	strb	r2, [r3, #2]
		piratePos[3]=100*(tb_msg[3]-0x30) + 10*(tb_msg[4]-0x30) + (tb_msg[5]-0x30);
 8003aee:	4b29      	ldr	r3, [pc, #164]	; (8003b94 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003af0:	78db      	ldrb	r3, [r3, #3]
 8003af2:	461a      	mov	r2, r3
 8003af4:	0092      	lsls	r2, r2, #2
 8003af6:	4413      	add	r3, r2
 8003af8:	461a      	mov	r2, r3
 8003afa:	0091      	lsls	r1, r2, #2
 8003afc:	461a      	mov	r2, r3
 8003afe:	460b      	mov	r3, r1
 8003b00:	4413      	add	r3, r2
 8003b02:	009b      	lsls	r3, r3, #2
 8003b04:	b2da      	uxtb	r2, r3
 8003b06:	4b23      	ldr	r3, [pc, #140]	; (8003b94 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003b08:	791b      	ldrb	r3, [r3, #4]
 8003b0a:	4619      	mov	r1, r3
 8003b0c:	0089      	lsls	r1, r1, #2
 8003b0e:	440b      	add	r3, r1
 8003b10:	005b      	lsls	r3, r3, #1
 8003b12:	b2db      	uxtb	r3, r3
 8003b14:	4413      	add	r3, r2
 8003b16:	b2da      	uxtb	r2, r3
 8003b18:	4b1e      	ldr	r3, [pc, #120]	; (8003b94 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003b1a:	795b      	ldrb	r3, [r3, #5]
 8003b1c:	4413      	add	r3, r2
 8003b1e:	b2db      	uxtb	r3, r3
 8003b20:	3330      	adds	r3, #48	; 0x30
 8003b22:	b2da      	uxtb	r2, r3
 8003b24:	4b1c      	ldr	r3, [pc, #112]	; (8003b98 <Uart_Receive_Thunderboard_ISR+0xec>)
 8003b26:	70da      	strb	r2, [r3, #3]
		thunderboardFlag=1;
 8003b28:	4b1c      	ldr	r3, [pc, #112]	; (8003b9c <Uart_Receive_Thunderboard_ISR+0xf0>)
 8003b2a:	2201      	movs	r2, #1
 8003b2c:	701a      	strb	r2, [r3, #0]
		HAL_UART_Receive_IT(huart_TB, tb_msg, 6);
 8003b2e:	2206      	movs	r2, #6
 8003b30:	4918      	ldr	r1, [pc, #96]	; (8003b94 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003b32:	6878      	ldr	r0, [r7, #4]
 8003b34:	f008 fa09 	bl	800bf4a <HAL_UART_Receive_IT>
#ifdef TB_DEBUGG
		HAL_UART_Transmit(huart_debugg, tb_msg, 6, 2);
		HAL_UART_Transmit(huart_debugg, (uint8_t*)"\n\r", 2, 2);
#endif
		return;
 8003b38:	e029      	b.n	8003b8e <Uart_Receive_Thunderboard_ISR+0xe2>
	}
	//SLIP PROTECTION
	if(sp[0]>='0' && sp[0]<='9')cnt++;
 8003b3a:	4b19      	ldr	r3, [pc, #100]	; (8003ba0 <Uart_Receive_Thunderboard_ISR+0xf4>)
 8003b3c:	781b      	ldrb	r3, [r3, #0]
 8003b3e:	2b2f      	cmp	r3, #47	; 0x2f
 8003b40:	d90a      	bls.n	8003b58 <Uart_Receive_Thunderboard_ISR+0xac>
 8003b42:	4b17      	ldr	r3, [pc, #92]	; (8003ba0 <Uart_Receive_Thunderboard_ISR+0xf4>)
 8003b44:	781b      	ldrb	r3, [r3, #0]
 8003b46:	2b39      	cmp	r3, #57	; 0x39
 8003b48:	d806      	bhi.n	8003b58 <Uart_Receive_Thunderboard_ISR+0xac>
 8003b4a:	4b16      	ldr	r3, [pc, #88]	; (8003ba4 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003b4c:	781b      	ldrb	r3, [r3, #0]
 8003b4e:	3301      	adds	r3, #1
 8003b50:	b2da      	uxtb	r2, r3
 8003b52:	4b14      	ldr	r3, [pc, #80]	; (8003ba4 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003b54:	701a      	strb	r2, [r3, #0]
 8003b56:	e002      	b.n	8003b5e <Uart_Receive_Thunderboard_ISR+0xb2>
	else cnt=0;
 8003b58:	4b12      	ldr	r3, [pc, #72]	; (8003ba4 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003b5a:	2200      	movs	r2, #0
 8003b5c:	701a      	strb	r2, [r3, #0]

	if(cnt<3) //3 darab ASCI számnak össze kell gyűlnie egymás után
 8003b5e:	4b11      	ldr	r3, [pc, #68]	; (8003ba4 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003b60:	781b      	ldrb	r3, [r3, #0]
 8003b62:	2b02      	cmp	r3, #2
 8003b64:	d805      	bhi.n	8003b72 <Uart_Receive_Thunderboard_ISR+0xc6>
	{
		HAL_UART_Receive_IT(huart_TB, sp, 1);//amig ez nincs meg addig cask egyesével olvasunk
 8003b66:	2201      	movs	r2, #1
 8003b68:	490d      	ldr	r1, [pc, #52]	; (8003ba0 <Uart_Receive_Thunderboard_ISR+0xf4>)
 8003b6a:	6878      	ldr	r0, [r7, #4]
 8003b6c:	f008 f9ed 	bl	800bf4a <HAL_UART_Receive_IT>
 8003b70:	e00d      	b.n	8003b8e <Uart_Receive_Thunderboard_ISR+0xe2>
	}
	else//ha megvan megint 6-ossával olvasunk
	{
		sp[0]=0;
 8003b72:	4b0b      	ldr	r3, [pc, #44]	; (8003ba0 <Uart_Receive_Thunderboard_ISR+0xf4>)
 8003b74:	2200      	movs	r2, #0
 8003b76:	701a      	strb	r2, [r3, #0]
		cnt=0;
 8003b78:	4b0a      	ldr	r3, [pc, #40]	; (8003ba4 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003b7a:	2200      	movs	r2, #0
 8003b7c:	701a      	strb	r2, [r3, #0]
		HAL_UART_Receive_IT(huart_TB, tb_msg, 6);
 8003b7e:	2206      	movs	r2, #6
 8003b80:	4904      	ldr	r1, [pc, #16]	; (8003b94 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003b82:	6878      	ldr	r0, [r7, #4]
 8003b84:	f008 f9e1 	bl	800bf4a <HAL_UART_Receive_IT>
		thunderboardFlag=1;
 8003b88:	4b04      	ldr	r3, [pc, #16]	; (8003b9c <Uart_Receive_Thunderboard_ISR+0xf0>)
 8003b8a:	2201      	movs	r2, #1
 8003b8c:	701a      	strb	r2, [r3, #0]
	}
}
 8003b8e:	3708      	adds	r7, #8
 8003b90:	46bd      	mov	sp, r7
 8003b92:	bd80      	pop	{r7, pc}
 8003b94:	20000354 	.word	0x20000354
 8003b98:	2000035c 	.word	0x2000035c
 8003b9c:	20000352 	.word	0x20000352
 8003ba0:	20000754 	.word	0x20000754
 8003ba4:	20000755 	.word	0x20000755

08003ba8 <Lane_Change_Init>:


void Lane_Change_Init(void)
{
 8003ba8:	b480      	push	{r7}
 8003baa:	af00      	add	r7, sp, #0
	N('A').worth = N('B').worth = N('C').worth = N('E').worth = 0;
 8003bac:	4b32      	ldr	r3, [pc, #200]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003bae:	2200      	movs	r2, #0
 8003bb0:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 8003bb4:	4b30      	ldr	r3, [pc, #192]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003bb6:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8003bba:	4a2f      	ldr	r2, [pc, #188]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003bbc:	6553      	str	r3, [r2, #84]	; 0x54
 8003bbe:	4b2e      	ldr	r3, [pc, #184]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003bc0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003bc2:	4a2d      	ldr	r2, [pc, #180]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003bc4:	62d3      	str	r3, [r2, #44]	; 0x2c
 8003bc6:	4b2c      	ldr	r3, [pc, #176]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003bc8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003bca:	4a2b      	ldr	r2, [pc, #172]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003bcc:	6053      	str	r3, [r2, #4]
	N('F').worth = N('D').worth = N('G').worth = 1;
 8003bce:	4b2a      	ldr	r3, [pc, #168]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003bd0:	2201      	movs	r2, #1
 8003bd2:	f8c3 20f4 	str.w	r2, [r3, #244]	; 0xf4
 8003bd6:	4b28      	ldr	r3, [pc, #160]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003bd8:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8003bdc:	4a26      	ldr	r2, [pc, #152]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003bde:	67d3      	str	r3, [r2, #124]	; 0x7c
 8003be0:	4b25      	ldr	r3, [pc, #148]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003be2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8003be4:	4a24      	ldr	r2, [pc, #144]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003be6:	f8c2 30cc 	str.w	r3, [r2, #204]	; 0xcc
	N('I').worth = 2;
 8003bea:	4b23      	ldr	r3, [pc, #140]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003bec:	2202      	movs	r2, #2
 8003bee:	f8c3 2144 	str.w	r2, [r3, #324]	; 0x144
	N('H').worth = N('J').worth = N('K').worth = N('L').worth = N('Q').worth = N('P').worth =  4;
 8003bf2:	4b21      	ldr	r3, [pc, #132]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003bf4:	2204      	movs	r2, #4
 8003bf6:	f8c3 225c 	str.w	r2, [r3, #604]	; 0x25c
 8003bfa:	4b1f      	ldr	r3, [pc, #124]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003bfc:	f8d3 325c 	ldr.w	r3, [r3, #604]	; 0x25c
 8003c00:	4a1d      	ldr	r2, [pc, #116]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003c02:	f8c2 3284 	str.w	r3, [r2, #644]	; 0x284
 8003c06:	4b1c      	ldr	r3, [pc, #112]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003c08:	f8d3 3284 	ldr.w	r3, [r3, #644]	; 0x284
 8003c0c:	4a1a      	ldr	r2, [pc, #104]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003c0e:	f8c2 31bc 	str.w	r3, [r2, #444]	; 0x1bc
 8003c12:	4b19      	ldr	r3, [pc, #100]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003c14:	f8d3 31bc 	ldr.w	r3, [r3, #444]	; 0x1bc
 8003c18:	4a17      	ldr	r2, [pc, #92]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003c1a:	f8c2 3194 	str.w	r3, [r2, #404]	; 0x194
 8003c1e:	4b16      	ldr	r3, [pc, #88]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003c20:	f8d3 3194 	ldr.w	r3, [r3, #404]	; 0x194
 8003c24:	4a14      	ldr	r2, [pc, #80]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003c26:	f8c2 316c 	str.w	r3, [r2, #364]	; 0x16c
 8003c2a:	4b13      	ldr	r3, [pc, #76]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003c2c:	f8d3 316c 	ldr.w	r3, [r3, #364]	; 0x16c
 8003c30:	4a11      	ldr	r2, [pc, #68]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003c32:	f8c2 311c 	str.w	r3, [r2, #284]	; 0x11c
	N('N').worth = N('T').worth =8;
 8003c36:	4b10      	ldr	r3, [pc, #64]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003c38:	2208      	movs	r2, #8
 8003c3a:	f8c3 22fc 	str.w	r2, [r3, #764]	; 0x2fc
 8003c3e:	4b0e      	ldr	r3, [pc, #56]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003c40:	f8d3 32fc 	ldr.w	r3, [r3, #764]	; 0x2fc
 8003c44:	4a0c      	ldr	r2, [pc, #48]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003c46:	f8c2 320c 	str.w	r3, [r2, #524]	; 0x20c
	N('O').worth = N('M').worth = 9;
 8003c4a:	4b0b      	ldr	r3, [pc, #44]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003c4c:	2209      	movs	r2, #9
 8003c4e:	f8c3 21e4 	str.w	r2, [r3, #484]	; 0x1e4
 8003c52:	4b09      	ldr	r3, [pc, #36]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003c54:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8003c58:	4a07      	ldr	r2, [pc, #28]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003c5a:	f8c2 3234 	str.w	r3, [r2, #564]	; 0x234
	N('U').worth = 16;
 8003c5e:	4b06      	ldr	r3, [pc, #24]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003c60:	2210      	movs	r2, #16
 8003c62:	f8c3 2324 	str.w	r2, [r3, #804]	; 0x324
	N('V').worth = 32;
 8003c66:	4b04      	ldr	r3, [pc, #16]	; (8003c78 <Lane_Change_Init+0xd0>)
 8003c68:	2220      	movs	r2, #32
 8003c6a:	f8c3 234c 	str.w	r2, [r3, #844]	; 0x34c
}
 8003c6e:	bf00      	nop
 8003c70:	46bd      	mov	sp, r7
 8003c72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c76:	4770      	bx	lr
 8003c78:	20000360 	.word	0x20000360

08003c7c <Cross_Collision>:

uint8_t Cross_Collision(uint8_t myPos, uint8_t nextPos)
{
 8003c7c:	b480      	push	{r7}
 8003c7e:	b083      	sub	sp, #12
 8003c80:	af00      	add	r7, sp, #0
 8003c82:	4603      	mov	r3, r0
 8003c84:	460a      	mov	r2, r1
 8003c86:	71fb      	strb	r3, [r7, #7]
 8003c88:	4613      	mov	r3, r2
 8003c8a:	71bb      	strb	r3, [r7, #6]
	/********************************NI, KL kereszteződés**********************/
	if((myPos=='N' && nextPos=='I') || (myPos=='I' && nextPos=='N'))
 8003c8c:	79fb      	ldrb	r3, [r7, #7]
 8003c8e:	2b4e      	cmp	r3, #78	; 0x4e
 8003c90:	d102      	bne.n	8003c98 <Cross_Collision+0x1c>
 8003c92:	79bb      	ldrb	r3, [r7, #6]
 8003c94:	2b49      	cmp	r3, #73	; 0x49
 8003c96:	d005      	beq.n	8003ca4 <Cross_Collision+0x28>
 8003c98:	79fb      	ldrb	r3, [r7, #7]
 8003c9a:	2b49      	cmp	r3, #73	; 0x49
 8003c9c:	d132      	bne.n	8003d04 <Cross_Collision+0x88>
 8003c9e:	79bb      	ldrb	r3, [r7, #6]
 8003ca0:	2b4e      	cmp	r3, #78	; 0x4e
 8003ca2:	d12f      	bne.n	8003d04 <Cross_Collision+0x88>
	{
		if((piratePos[0]=='K' && piratePos[1]=='L') || (piratePos[0]=='L' && piratePos[1]=='K')){ if(piratePos[3]<60) return 1;}
 8003ca4:	4b83      	ldr	r3, [pc, #524]	; (8003eb4 <Cross_Collision+0x238>)
 8003ca6:	781b      	ldrb	r3, [r3, #0]
 8003ca8:	2b4b      	cmp	r3, #75	; 0x4b
 8003caa:	d103      	bne.n	8003cb4 <Cross_Collision+0x38>
 8003cac:	4b81      	ldr	r3, [pc, #516]	; (8003eb4 <Cross_Collision+0x238>)
 8003cae:	785b      	ldrb	r3, [r3, #1]
 8003cb0:	2b4c      	cmp	r3, #76	; 0x4c
 8003cb2:	d007      	beq.n	8003cc4 <Cross_Collision+0x48>
 8003cb4:	4b7f      	ldr	r3, [pc, #508]	; (8003eb4 <Cross_Collision+0x238>)
 8003cb6:	781b      	ldrb	r3, [r3, #0]
 8003cb8:	2b4c      	cmp	r3, #76	; 0x4c
 8003cba:	d109      	bne.n	8003cd0 <Cross_Collision+0x54>
 8003cbc:	4b7d      	ldr	r3, [pc, #500]	; (8003eb4 <Cross_Collision+0x238>)
 8003cbe:	785b      	ldrb	r3, [r3, #1]
 8003cc0:	2b4b      	cmp	r3, #75	; 0x4b
 8003cc2:	d105      	bne.n	8003cd0 <Cross_Collision+0x54>
 8003cc4:	4b7b      	ldr	r3, [pc, #492]	; (8003eb4 <Cross_Collision+0x238>)
 8003cc6:	78db      	ldrb	r3, [r3, #3]
 8003cc8:	2b3b      	cmp	r3, #59	; 0x3b
 8003cca:	d81a      	bhi.n	8003d02 <Cross_Collision+0x86>
 8003ccc:	2301      	movs	r3, #1
 8003cce:	e12c      	b.n	8003f2a <Cross_Collision+0x2ae>
		else if((piratePos[1]=='K' && piratePos[2]=='L') || (piratePos[1]=='L' && piratePos[2]=='K')){ if(piratePos[3]>50) return 1;}
 8003cd0:	4b78      	ldr	r3, [pc, #480]	; (8003eb4 <Cross_Collision+0x238>)
 8003cd2:	785b      	ldrb	r3, [r3, #1]
 8003cd4:	2b4b      	cmp	r3, #75	; 0x4b
 8003cd6:	d103      	bne.n	8003ce0 <Cross_Collision+0x64>
 8003cd8:	4b76      	ldr	r3, [pc, #472]	; (8003eb4 <Cross_Collision+0x238>)
 8003cda:	789b      	ldrb	r3, [r3, #2]
 8003cdc:	2b4c      	cmp	r3, #76	; 0x4c
 8003cde:	d009      	beq.n	8003cf4 <Cross_Collision+0x78>
 8003ce0:	4b74      	ldr	r3, [pc, #464]	; (8003eb4 <Cross_Collision+0x238>)
 8003ce2:	785b      	ldrb	r3, [r3, #1]
 8003ce4:	2b4c      	cmp	r3, #76	; 0x4c
 8003ce6:	f040 8116 	bne.w	8003f16 <Cross_Collision+0x29a>
 8003cea:	4b72      	ldr	r3, [pc, #456]	; (8003eb4 <Cross_Collision+0x238>)
 8003cec:	789b      	ldrb	r3, [r3, #2]
 8003cee:	2b4b      	cmp	r3, #75	; 0x4b
 8003cf0:	f040 8111 	bne.w	8003f16 <Cross_Collision+0x29a>
 8003cf4:	4b6f      	ldr	r3, [pc, #444]	; (8003eb4 <Cross_Collision+0x238>)
 8003cf6:	78db      	ldrb	r3, [r3, #3]
 8003cf8:	2b32      	cmp	r3, #50	; 0x32
 8003cfa:	f240 810c 	bls.w	8003f16 <Cross_Collision+0x29a>
 8003cfe:	2301      	movs	r3, #1
 8003d00:	e113      	b.n	8003f2a <Cross_Collision+0x2ae>
		if((piratePos[0]=='K' && piratePos[1]=='L') || (piratePos[0]=='L' && piratePos[1]=='K')){ if(piratePos[3]<60) return 1;}
 8003d02:	e108      	b.n	8003f16 <Cross_Collision+0x29a>
	}
	else if((myPos=='K' && nextPos=='L') || (myPos=='L' && nextPos=='K'))
 8003d04:	79fb      	ldrb	r3, [r7, #7]
 8003d06:	2b4b      	cmp	r3, #75	; 0x4b
 8003d08:	d102      	bne.n	8003d10 <Cross_Collision+0x94>
 8003d0a:	79bb      	ldrb	r3, [r7, #6]
 8003d0c:	2b4c      	cmp	r3, #76	; 0x4c
 8003d0e:	d005      	beq.n	8003d1c <Cross_Collision+0xa0>
 8003d10:	79fb      	ldrb	r3, [r7, #7]
 8003d12:	2b4c      	cmp	r3, #76	; 0x4c
 8003d14:	d132      	bne.n	8003d7c <Cross_Collision+0x100>
 8003d16:	79bb      	ldrb	r3, [r7, #6]
 8003d18:	2b4b      	cmp	r3, #75	; 0x4b
 8003d1a:	d12f      	bne.n	8003d7c <Cross_Collision+0x100>
	{
		if((piratePos[0]=='N' && piratePos[1]=='I') || (piratePos[0]=='I' && piratePos[1]=='N')){ if(piratePos[3]<60) return 1;}
 8003d1c:	4b65      	ldr	r3, [pc, #404]	; (8003eb4 <Cross_Collision+0x238>)
 8003d1e:	781b      	ldrb	r3, [r3, #0]
 8003d20:	2b4e      	cmp	r3, #78	; 0x4e
 8003d22:	d103      	bne.n	8003d2c <Cross_Collision+0xb0>
 8003d24:	4b63      	ldr	r3, [pc, #396]	; (8003eb4 <Cross_Collision+0x238>)
 8003d26:	785b      	ldrb	r3, [r3, #1]
 8003d28:	2b49      	cmp	r3, #73	; 0x49
 8003d2a:	d007      	beq.n	8003d3c <Cross_Collision+0xc0>
 8003d2c:	4b61      	ldr	r3, [pc, #388]	; (8003eb4 <Cross_Collision+0x238>)
 8003d2e:	781b      	ldrb	r3, [r3, #0]
 8003d30:	2b49      	cmp	r3, #73	; 0x49
 8003d32:	d109      	bne.n	8003d48 <Cross_Collision+0xcc>
 8003d34:	4b5f      	ldr	r3, [pc, #380]	; (8003eb4 <Cross_Collision+0x238>)
 8003d36:	785b      	ldrb	r3, [r3, #1]
 8003d38:	2b4e      	cmp	r3, #78	; 0x4e
 8003d3a:	d105      	bne.n	8003d48 <Cross_Collision+0xcc>
 8003d3c:	4b5d      	ldr	r3, [pc, #372]	; (8003eb4 <Cross_Collision+0x238>)
 8003d3e:	78db      	ldrb	r3, [r3, #3]
 8003d40:	2b3b      	cmp	r3, #59	; 0x3b
 8003d42:	d81a      	bhi.n	8003d7a <Cross_Collision+0xfe>
 8003d44:	2301      	movs	r3, #1
 8003d46:	e0f0      	b.n	8003f2a <Cross_Collision+0x2ae>
		else if((piratePos[1]=='N' && piratePos[2]=='I') || (piratePos[1]=='I' && piratePos[2]=='N')){ if(piratePos[3]>50) return 1;}
 8003d48:	4b5a      	ldr	r3, [pc, #360]	; (8003eb4 <Cross_Collision+0x238>)
 8003d4a:	785b      	ldrb	r3, [r3, #1]
 8003d4c:	2b4e      	cmp	r3, #78	; 0x4e
 8003d4e:	d103      	bne.n	8003d58 <Cross_Collision+0xdc>
 8003d50:	4b58      	ldr	r3, [pc, #352]	; (8003eb4 <Cross_Collision+0x238>)
 8003d52:	789b      	ldrb	r3, [r3, #2]
 8003d54:	2b49      	cmp	r3, #73	; 0x49
 8003d56:	d009      	beq.n	8003d6c <Cross_Collision+0xf0>
 8003d58:	4b56      	ldr	r3, [pc, #344]	; (8003eb4 <Cross_Collision+0x238>)
 8003d5a:	785b      	ldrb	r3, [r3, #1]
 8003d5c:	2b49      	cmp	r3, #73	; 0x49
 8003d5e:	f040 80dc 	bne.w	8003f1a <Cross_Collision+0x29e>
 8003d62:	4b54      	ldr	r3, [pc, #336]	; (8003eb4 <Cross_Collision+0x238>)
 8003d64:	789b      	ldrb	r3, [r3, #2]
 8003d66:	2b4e      	cmp	r3, #78	; 0x4e
 8003d68:	f040 80d7 	bne.w	8003f1a <Cross_Collision+0x29e>
 8003d6c:	4b51      	ldr	r3, [pc, #324]	; (8003eb4 <Cross_Collision+0x238>)
 8003d6e:	78db      	ldrb	r3, [r3, #3]
 8003d70:	2b32      	cmp	r3, #50	; 0x32
 8003d72:	f240 80d2 	bls.w	8003f1a <Cross_Collision+0x29e>
 8003d76:	2301      	movs	r3, #1
 8003d78:	e0d7      	b.n	8003f2a <Cross_Collision+0x2ae>
		if((piratePos[0]=='N' && piratePos[1]=='I') || (piratePos[0]=='I' && piratePos[1]=='N')){ if(piratePos[3]<60) return 1;}
 8003d7a:	e0ce      	b.n	8003f1a <Cross_Collision+0x29e>
	}
	/**************************************************************************/


	/********************************ID, FG kereszteződés**********************/
	else if((myPos=='I' && nextPos=='D') || (myPos=='D' && nextPos=='I'))
 8003d7c:	79fb      	ldrb	r3, [r7, #7]
 8003d7e:	2b49      	cmp	r3, #73	; 0x49
 8003d80:	d102      	bne.n	8003d88 <Cross_Collision+0x10c>
 8003d82:	79bb      	ldrb	r3, [r7, #6]
 8003d84:	2b44      	cmp	r3, #68	; 0x44
 8003d86:	d005      	beq.n	8003d94 <Cross_Collision+0x118>
 8003d88:	79fb      	ldrb	r3, [r7, #7]
 8003d8a:	2b44      	cmp	r3, #68	; 0x44
 8003d8c:	d132      	bne.n	8003df4 <Cross_Collision+0x178>
 8003d8e:	79bb      	ldrb	r3, [r7, #6]
 8003d90:	2b49      	cmp	r3, #73	; 0x49
 8003d92:	d12f      	bne.n	8003df4 <Cross_Collision+0x178>
	{
		if((piratePos[0]=='F' && piratePos[1]=='G') || (piratePos[0]=='G' && piratePos[1]=='F')){ if(piratePos[3]<60) return 1;}
 8003d94:	4b47      	ldr	r3, [pc, #284]	; (8003eb4 <Cross_Collision+0x238>)
 8003d96:	781b      	ldrb	r3, [r3, #0]
 8003d98:	2b46      	cmp	r3, #70	; 0x46
 8003d9a:	d103      	bne.n	8003da4 <Cross_Collision+0x128>
 8003d9c:	4b45      	ldr	r3, [pc, #276]	; (8003eb4 <Cross_Collision+0x238>)
 8003d9e:	785b      	ldrb	r3, [r3, #1]
 8003da0:	2b47      	cmp	r3, #71	; 0x47
 8003da2:	d007      	beq.n	8003db4 <Cross_Collision+0x138>
 8003da4:	4b43      	ldr	r3, [pc, #268]	; (8003eb4 <Cross_Collision+0x238>)
 8003da6:	781b      	ldrb	r3, [r3, #0]
 8003da8:	2b47      	cmp	r3, #71	; 0x47
 8003daa:	d109      	bne.n	8003dc0 <Cross_Collision+0x144>
 8003dac:	4b41      	ldr	r3, [pc, #260]	; (8003eb4 <Cross_Collision+0x238>)
 8003dae:	785b      	ldrb	r3, [r3, #1]
 8003db0:	2b46      	cmp	r3, #70	; 0x46
 8003db2:	d105      	bne.n	8003dc0 <Cross_Collision+0x144>
 8003db4:	4b3f      	ldr	r3, [pc, #252]	; (8003eb4 <Cross_Collision+0x238>)
 8003db6:	78db      	ldrb	r3, [r3, #3]
 8003db8:	2b3b      	cmp	r3, #59	; 0x3b
 8003dba:	d81a      	bhi.n	8003df2 <Cross_Collision+0x176>
 8003dbc:	2301      	movs	r3, #1
 8003dbe:	e0b4      	b.n	8003f2a <Cross_Collision+0x2ae>
		else if((piratePos[1]=='F' && piratePos[2]=='G') || (piratePos[1]=='G' && piratePos[2]=='F')){ if(piratePos[3]>50) return 1;}
 8003dc0:	4b3c      	ldr	r3, [pc, #240]	; (8003eb4 <Cross_Collision+0x238>)
 8003dc2:	785b      	ldrb	r3, [r3, #1]
 8003dc4:	2b46      	cmp	r3, #70	; 0x46
 8003dc6:	d103      	bne.n	8003dd0 <Cross_Collision+0x154>
 8003dc8:	4b3a      	ldr	r3, [pc, #232]	; (8003eb4 <Cross_Collision+0x238>)
 8003dca:	789b      	ldrb	r3, [r3, #2]
 8003dcc:	2b47      	cmp	r3, #71	; 0x47
 8003dce:	d009      	beq.n	8003de4 <Cross_Collision+0x168>
 8003dd0:	4b38      	ldr	r3, [pc, #224]	; (8003eb4 <Cross_Collision+0x238>)
 8003dd2:	785b      	ldrb	r3, [r3, #1]
 8003dd4:	2b47      	cmp	r3, #71	; 0x47
 8003dd6:	f040 80a2 	bne.w	8003f1e <Cross_Collision+0x2a2>
 8003dda:	4b36      	ldr	r3, [pc, #216]	; (8003eb4 <Cross_Collision+0x238>)
 8003ddc:	789b      	ldrb	r3, [r3, #2]
 8003dde:	2b46      	cmp	r3, #70	; 0x46
 8003de0:	f040 809d 	bne.w	8003f1e <Cross_Collision+0x2a2>
 8003de4:	4b33      	ldr	r3, [pc, #204]	; (8003eb4 <Cross_Collision+0x238>)
 8003de6:	78db      	ldrb	r3, [r3, #3]
 8003de8:	2b32      	cmp	r3, #50	; 0x32
 8003dea:	f240 8098 	bls.w	8003f1e <Cross_Collision+0x2a2>
 8003dee:	2301      	movs	r3, #1
 8003df0:	e09b      	b.n	8003f2a <Cross_Collision+0x2ae>
		if((piratePos[0]=='F' && piratePos[1]=='G') || (piratePos[0]=='G' && piratePos[1]=='F')){ if(piratePos[3]<60) return 1;}
 8003df2:	e094      	b.n	8003f1e <Cross_Collision+0x2a2>
	}
	else if((myPos=='F' && nextPos=='G') || (myPos=='G' && nextPos=='F'))
 8003df4:	79fb      	ldrb	r3, [r7, #7]
 8003df6:	2b46      	cmp	r3, #70	; 0x46
 8003df8:	d102      	bne.n	8003e00 <Cross_Collision+0x184>
 8003dfa:	79bb      	ldrb	r3, [r7, #6]
 8003dfc:	2b47      	cmp	r3, #71	; 0x47
 8003dfe:	d005      	beq.n	8003e0c <Cross_Collision+0x190>
 8003e00:	79fb      	ldrb	r3, [r7, #7]
 8003e02:	2b47      	cmp	r3, #71	; 0x47
 8003e04:	d12f      	bne.n	8003e66 <Cross_Collision+0x1ea>
 8003e06:	79bb      	ldrb	r3, [r7, #6]
 8003e08:	2b46      	cmp	r3, #70	; 0x46
 8003e0a:	d12c      	bne.n	8003e66 <Cross_Collision+0x1ea>
	{
		if((piratePos[0]=='I' && piratePos[1]=='D') || (piratePos[0]=='D' && piratePos[1]=='I')){ if(piratePos[3]<60) return 1;}
 8003e0c:	4b29      	ldr	r3, [pc, #164]	; (8003eb4 <Cross_Collision+0x238>)
 8003e0e:	781b      	ldrb	r3, [r3, #0]
 8003e10:	2b49      	cmp	r3, #73	; 0x49
 8003e12:	d103      	bne.n	8003e1c <Cross_Collision+0x1a0>
 8003e14:	4b27      	ldr	r3, [pc, #156]	; (8003eb4 <Cross_Collision+0x238>)
 8003e16:	785b      	ldrb	r3, [r3, #1]
 8003e18:	2b44      	cmp	r3, #68	; 0x44
 8003e1a:	d007      	beq.n	8003e2c <Cross_Collision+0x1b0>
 8003e1c:	4b25      	ldr	r3, [pc, #148]	; (8003eb4 <Cross_Collision+0x238>)
 8003e1e:	781b      	ldrb	r3, [r3, #0]
 8003e20:	2b44      	cmp	r3, #68	; 0x44
 8003e22:	d109      	bne.n	8003e38 <Cross_Collision+0x1bc>
 8003e24:	4b23      	ldr	r3, [pc, #140]	; (8003eb4 <Cross_Collision+0x238>)
 8003e26:	785b      	ldrb	r3, [r3, #1]
 8003e28:	2b49      	cmp	r3, #73	; 0x49
 8003e2a:	d105      	bne.n	8003e38 <Cross_Collision+0x1bc>
 8003e2c:	4b21      	ldr	r3, [pc, #132]	; (8003eb4 <Cross_Collision+0x238>)
 8003e2e:	78db      	ldrb	r3, [r3, #3]
 8003e30:	2b3b      	cmp	r3, #59	; 0x3b
 8003e32:	d817      	bhi.n	8003e64 <Cross_Collision+0x1e8>
 8003e34:	2301      	movs	r3, #1
 8003e36:	e078      	b.n	8003f2a <Cross_Collision+0x2ae>
		else if((piratePos[1]=='I' && piratePos[2]=='D') || (piratePos[1]=='D' && piratePos[2]=='I')){ if(piratePos[3]>50) return 1;}
 8003e38:	4b1e      	ldr	r3, [pc, #120]	; (8003eb4 <Cross_Collision+0x238>)
 8003e3a:	785b      	ldrb	r3, [r3, #1]
 8003e3c:	2b49      	cmp	r3, #73	; 0x49
 8003e3e:	d103      	bne.n	8003e48 <Cross_Collision+0x1cc>
 8003e40:	4b1c      	ldr	r3, [pc, #112]	; (8003eb4 <Cross_Collision+0x238>)
 8003e42:	789b      	ldrb	r3, [r3, #2]
 8003e44:	2b44      	cmp	r3, #68	; 0x44
 8003e46:	d007      	beq.n	8003e58 <Cross_Collision+0x1dc>
 8003e48:	4b1a      	ldr	r3, [pc, #104]	; (8003eb4 <Cross_Collision+0x238>)
 8003e4a:	785b      	ldrb	r3, [r3, #1]
 8003e4c:	2b44      	cmp	r3, #68	; 0x44
 8003e4e:	d168      	bne.n	8003f22 <Cross_Collision+0x2a6>
 8003e50:	4b18      	ldr	r3, [pc, #96]	; (8003eb4 <Cross_Collision+0x238>)
 8003e52:	789b      	ldrb	r3, [r3, #2]
 8003e54:	2b49      	cmp	r3, #73	; 0x49
 8003e56:	d164      	bne.n	8003f22 <Cross_Collision+0x2a6>
 8003e58:	4b16      	ldr	r3, [pc, #88]	; (8003eb4 <Cross_Collision+0x238>)
 8003e5a:	78db      	ldrb	r3, [r3, #3]
 8003e5c:	2b32      	cmp	r3, #50	; 0x32
 8003e5e:	d960      	bls.n	8003f22 <Cross_Collision+0x2a6>
 8003e60:	2301      	movs	r3, #1
 8003e62:	e062      	b.n	8003f2a <Cross_Collision+0x2ae>
		if((piratePos[0]=='I' && piratePos[1]=='D') || (piratePos[0]=='D' && piratePos[1]=='I')){ if(piratePos[3]<60) return 1;}
 8003e64:	e05d      	b.n	8003f22 <Cross_Collision+0x2a6>
	}
	/**************************************************************************/


	/********************************TN, PQ kereszteződés**********************/
	else if((myPos=='P' && nextPos=='Q') || (myPos=='Q' && nextPos=='P'))
 8003e66:	79fb      	ldrb	r3, [r7, #7]
 8003e68:	2b50      	cmp	r3, #80	; 0x50
 8003e6a:	d102      	bne.n	8003e72 <Cross_Collision+0x1f6>
 8003e6c:	79bb      	ldrb	r3, [r7, #6]
 8003e6e:	2b51      	cmp	r3, #81	; 0x51
 8003e70:	d005      	beq.n	8003e7e <Cross_Collision+0x202>
 8003e72:	79fb      	ldrb	r3, [r7, #7]
 8003e74:	2b51      	cmp	r3, #81	; 0x51
 8003e76:	d11f      	bne.n	8003eb8 <Cross_Collision+0x23c>
 8003e78:	79bb      	ldrb	r3, [r7, #6]
 8003e7a:	2b50      	cmp	r3, #80	; 0x50
 8003e7c:	d11c      	bne.n	8003eb8 <Cross_Collision+0x23c>
	{
		if(piratePos[0]=='T'){ if(piratePos[3]<50) return 1; }
 8003e7e:	4b0d      	ldr	r3, [pc, #52]	; (8003eb4 <Cross_Collision+0x238>)
 8003e80:	781b      	ldrb	r3, [r3, #0]
 8003e82:	2b54      	cmp	r3, #84	; 0x54
 8003e84:	d105      	bne.n	8003e92 <Cross_Collision+0x216>
 8003e86:	4b0b      	ldr	r3, [pc, #44]	; (8003eb4 <Cross_Collision+0x238>)
 8003e88:	78db      	ldrb	r3, [r3, #3]
 8003e8a:	2b31      	cmp	r3, #49	; 0x31
 8003e8c:	d84b      	bhi.n	8003f26 <Cross_Collision+0x2aa>
 8003e8e:	2301      	movs	r3, #1
 8003e90:	e04b      	b.n	8003f2a <Cross_Collision+0x2ae>
		else if(piratePos[1]=='T') return 1;
 8003e92:	4b08      	ldr	r3, [pc, #32]	; (8003eb4 <Cross_Collision+0x238>)
 8003e94:	785b      	ldrb	r3, [r3, #1]
 8003e96:	2b54      	cmp	r3, #84	; 0x54
 8003e98:	d101      	bne.n	8003e9e <Cross_Collision+0x222>
 8003e9a:	2301      	movs	r3, #1
 8003e9c:	e045      	b.n	8003f2a <Cross_Collision+0x2ae>
		else if(piratePos[2]=='T'){ if(piratePos[3]>60) return 1; };
 8003e9e:	4b05      	ldr	r3, [pc, #20]	; (8003eb4 <Cross_Collision+0x238>)
 8003ea0:	789b      	ldrb	r3, [r3, #2]
 8003ea2:	2b54      	cmp	r3, #84	; 0x54
 8003ea4:	d13f      	bne.n	8003f26 <Cross_Collision+0x2aa>
 8003ea6:	4b03      	ldr	r3, [pc, #12]	; (8003eb4 <Cross_Collision+0x238>)
 8003ea8:	78db      	ldrb	r3, [r3, #3]
 8003eaa:	2b3c      	cmp	r3, #60	; 0x3c
 8003eac:	d93b      	bls.n	8003f26 <Cross_Collision+0x2aa>
 8003eae:	2301      	movs	r3, #1
 8003eb0:	e03b      	b.n	8003f2a <Cross_Collision+0x2ae>
 8003eb2:	bf00      	nop
 8003eb4:	2000035c 	.word	0x2000035c
	}
	else if(nextPos=='T')
 8003eb8:	79bb      	ldrb	r3, [r7, #6]
 8003eba:	2b54      	cmp	r3, #84	; 0x54
 8003ebc:	d134      	bne.n	8003f28 <Cross_Collision+0x2ac>
	{
		if((piratePos[0]=='P' && piratePos[1]=='Q') || (piratePos[0]=='Q' && piratePos[1]=='P')){if(piratePos[3]<70)return 1;}
 8003ebe:	4b1e      	ldr	r3, [pc, #120]	; (8003f38 <Cross_Collision+0x2bc>)
 8003ec0:	781b      	ldrb	r3, [r3, #0]
 8003ec2:	2b50      	cmp	r3, #80	; 0x50
 8003ec4:	d103      	bne.n	8003ece <Cross_Collision+0x252>
 8003ec6:	4b1c      	ldr	r3, [pc, #112]	; (8003f38 <Cross_Collision+0x2bc>)
 8003ec8:	785b      	ldrb	r3, [r3, #1]
 8003eca:	2b51      	cmp	r3, #81	; 0x51
 8003ecc:	d007      	beq.n	8003ede <Cross_Collision+0x262>
 8003ece:	4b1a      	ldr	r3, [pc, #104]	; (8003f38 <Cross_Collision+0x2bc>)
 8003ed0:	781b      	ldrb	r3, [r3, #0]
 8003ed2:	2b51      	cmp	r3, #81	; 0x51
 8003ed4:	d109      	bne.n	8003eea <Cross_Collision+0x26e>
 8003ed6:	4b18      	ldr	r3, [pc, #96]	; (8003f38 <Cross_Collision+0x2bc>)
 8003ed8:	785b      	ldrb	r3, [r3, #1]
 8003eda:	2b50      	cmp	r3, #80	; 0x50
 8003edc:	d105      	bne.n	8003eea <Cross_Collision+0x26e>
 8003ede:	4b16      	ldr	r3, [pc, #88]	; (8003f38 <Cross_Collision+0x2bc>)
 8003ee0:	78db      	ldrb	r3, [r3, #3]
 8003ee2:	2b45      	cmp	r3, #69	; 0x45
 8003ee4:	d820      	bhi.n	8003f28 <Cross_Collision+0x2ac>
 8003ee6:	2301      	movs	r3, #1
 8003ee8:	e01f      	b.n	8003f2a <Cross_Collision+0x2ae>
		else if((piratePos[1]=='P' && piratePos[2]=='Q') || (piratePos[1]=='Q' && piratePos[2]=='P')){if(piratePos[3]>50)return 1;}
 8003eea:	4b13      	ldr	r3, [pc, #76]	; (8003f38 <Cross_Collision+0x2bc>)
 8003eec:	785b      	ldrb	r3, [r3, #1]
 8003eee:	2b50      	cmp	r3, #80	; 0x50
 8003ef0:	d103      	bne.n	8003efa <Cross_Collision+0x27e>
 8003ef2:	4b11      	ldr	r3, [pc, #68]	; (8003f38 <Cross_Collision+0x2bc>)
 8003ef4:	789b      	ldrb	r3, [r3, #2]
 8003ef6:	2b51      	cmp	r3, #81	; 0x51
 8003ef8:	d007      	beq.n	8003f0a <Cross_Collision+0x28e>
 8003efa:	4b0f      	ldr	r3, [pc, #60]	; (8003f38 <Cross_Collision+0x2bc>)
 8003efc:	785b      	ldrb	r3, [r3, #1]
 8003efe:	2b51      	cmp	r3, #81	; 0x51
 8003f00:	d112      	bne.n	8003f28 <Cross_Collision+0x2ac>
 8003f02:	4b0d      	ldr	r3, [pc, #52]	; (8003f38 <Cross_Collision+0x2bc>)
 8003f04:	789b      	ldrb	r3, [r3, #2]
 8003f06:	2b50      	cmp	r3, #80	; 0x50
 8003f08:	d10e      	bne.n	8003f28 <Cross_Collision+0x2ac>
 8003f0a:	4b0b      	ldr	r3, [pc, #44]	; (8003f38 <Cross_Collision+0x2bc>)
 8003f0c:	78db      	ldrb	r3, [r3, #3]
 8003f0e:	2b32      	cmp	r3, #50	; 0x32
 8003f10:	d90a      	bls.n	8003f28 <Cross_Collision+0x2ac>
 8003f12:	2301      	movs	r3, #1
 8003f14:	e009      	b.n	8003f2a <Cross_Collision+0x2ae>
		if((piratePos[0]=='K' && piratePos[1]=='L') || (piratePos[0]=='L' && piratePos[1]=='K')){ if(piratePos[3]<60) return 1;}
 8003f16:	bf00      	nop
 8003f18:	e006      	b.n	8003f28 <Cross_Collision+0x2ac>
		if((piratePos[0]=='N' && piratePos[1]=='I') || (piratePos[0]=='I' && piratePos[1]=='N')){ if(piratePos[3]<60) return 1;}
 8003f1a:	bf00      	nop
 8003f1c:	e004      	b.n	8003f28 <Cross_Collision+0x2ac>
		if((piratePos[0]=='F' && piratePos[1]=='G') || (piratePos[0]=='G' && piratePos[1]=='F')){ if(piratePos[3]<60) return 1;}
 8003f1e:	bf00      	nop
 8003f20:	e002      	b.n	8003f28 <Cross_Collision+0x2ac>
		if((piratePos[0]=='I' && piratePos[1]=='D') || (piratePos[0]=='D' && piratePos[1]=='I')){ if(piratePos[3]<60) return 1;}
 8003f22:	bf00      	nop
 8003f24:	e000      	b.n	8003f28 <Cross_Collision+0x2ac>
		if(piratePos[0]=='T'){ if(piratePos[3]<50) return 1; }
 8003f26:	bf00      	nop
	}
	/**************************************************************************/
	return 0;
 8003f28:	2300      	movs	r3, #0
}
 8003f2a:	4618      	mov	r0, r3
 8003f2c:	370c      	adds	r7, #12
 8003f2e:	46bd      	mov	sp, r7
 8003f30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f34:	4770      	bx	lr
 8003f36:	bf00      	nop
 8003f38:	2000035c 	.word	0x2000035c
 8003f3c:	00000000 	.word	0x00000000

08003f40 <Battery_Voltage_Compensate>:
float v=0;
//ha 1000 akkor a motor full csutkán megy előre
//ha -1000 akkor a motor full csutkán megy hátra

void Battery_Voltage_Compensate(ADC_HandleTypeDef *hadc_UNiMh,ADC_HandleTypeDef *hadc_ULiPo,UART_HandleTypeDef *huart_debugg)
{
 8003f40:	b580      	push	{r7, lr}
 8003f42:	b090      	sub	sp, #64	; 0x40
 8003f44:	af00      	add	r7, sp, #0
 8003f46:	60f8      	str	r0, [r7, #12]
 8003f48:	60b9      	str	r1, [r7, #8]
 8003f4a:	607a      	str	r2, [r7, #4]
	char msg[30];
	uint32_t raw=0;
 8003f4c:	2300      	movs	r3, #0
 8003f4e:	63fb      	str	r3, [r7, #60]	; 0x3c
	float bat;
	int i;

	//NiMh akku mérése
	for(i=0;i<20;i++)
 8003f50:	2300      	movs	r3, #0
 8003f52:	63bb      	str	r3, [r7, #56]	; 0x38
 8003f54:	e016      	b.n	8003f84 <Battery_Voltage_Compensate+0x44>
	{
		HAL_ADC_Start(hadc_UNiMh);
 8003f56:	68f8      	ldr	r0, [r7, #12]
 8003f58:	f003 fb3e 	bl	80075d8 <HAL_ADC_Start>
		HAL_Delay(10);
 8003f5c:	200a      	movs	r0, #10
 8003f5e:	f003 fad3 	bl	8007508 <HAL_Delay>
		HAL_ADC_PollForConversion(hadc_UNiMh,20);
 8003f62:	2114      	movs	r1, #20
 8003f64:	68f8      	ldr	r0, [r7, #12]
 8003f66:	f003 fc09 	bl	800777c <HAL_ADC_PollForConversion>
		HAL_Delay(10);
 8003f6a:	200a      	movs	r0, #10
 8003f6c:	f003 facc 	bl	8007508 <HAL_Delay>
		raw += HAL_ADC_GetValue(hadc_UNiMh);
 8003f70:	68f8      	ldr	r0, [r7, #12]
 8003f72:	f003 fc8e 	bl	8007892 <HAL_ADC_GetValue>
 8003f76:	4602      	mov	r2, r0
 8003f78:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003f7a:	4413      	add	r3, r2
 8003f7c:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(i=0;i<20;i++)
 8003f7e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003f80:	3301      	adds	r3, #1
 8003f82:	63bb      	str	r3, [r7, #56]	; 0x38
 8003f84:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003f86:	2b13      	cmp	r3, #19
 8003f88:	dde5      	ble.n	8003f56 <Battery_Voltage_Compensate+0x16>
	}
	bat=(float)raw * 0.00460575 / 20.0;//ez a mi feszültségünk V-ban
 8003f8a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003f8c:	ee07 3a90 	vmov	s15, r3
 8003f90:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003f94:	ee17 0a90 	vmov	r0, s15
 8003f98:	f7fc faf6 	bl	8000588 <__aeabi_f2d>
 8003f9c:	a37b      	add	r3, pc, #492	; (adr r3, 800418c <Battery_Voltage_Compensate+0x24c>)
 8003f9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003fa2:	f7fc fb49 	bl	8000638 <__aeabi_dmul>
 8003fa6:	4602      	mov	r2, r0
 8003fa8:	460b      	mov	r3, r1
 8003faa:	4610      	mov	r0, r2
 8003fac:	4619      	mov	r1, r3
 8003fae:	f04f 0200 	mov.w	r2, #0
 8003fb2:	4b71      	ldr	r3, [pc, #452]	; (8004178 <Battery_Voltage_Compensate+0x238>)
 8003fb4:	f7fc fc6a 	bl	800088c <__aeabi_ddiv>
 8003fb8:	4602      	mov	r2, r0
 8003fba:	460b      	mov	r3, r1
 8003fbc:	4610      	mov	r0, r2
 8003fbe:	4619      	mov	r1, r3
 8003fc0:	f7fc fe12 	bl	8000be8 <__aeabi_d2f>
 8003fc4:	4603      	mov	r3, r0
 8003fc6:	637b      	str	r3, [r7, #52]	; 0x34
	sprintf(msg,"NiMh charge: %2.2f V \r\n", bat);
 8003fc8:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8003fca:	f7fc fadd 	bl	8000588 <__aeabi_f2d>
 8003fce:	4602      	mov	r2, r0
 8003fd0:	460b      	mov	r3, r1
 8003fd2:	f107 0014 	add.w	r0, r7, #20
 8003fd6:	4969      	ldr	r1, [pc, #420]	; (800417c <Battery_Voltage_Compensate+0x23c>)
 8003fd8:	f009 fbec 	bl	800d7b4 <siprintf>
	HAL_UART_Transmit(huart_debugg, (uint8_t*) msg, strlen(msg),10);
 8003fdc:	f107 0314 	add.w	r3, r7, #20
 8003fe0:	4618      	mov	r0, r3
 8003fe2:	f7fc f915 	bl	8000210 <strlen>
 8003fe6:	4603      	mov	r3, r0
 8003fe8:	b29a      	uxth	r2, r3
 8003fea:	f107 0114 	add.w	r1, r7, #20
 8003fee:	230a      	movs	r3, #10
 8003ff0:	6878      	ldr	r0, [r7, #4]
 8003ff2:	f007 fe76 	bl	800bce2 <HAL_UART_Transmit>

	if(bat)compensation=7.75/bat;
 8003ff6:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8003ffa:	eef5 7a40 	vcmp.f32	s15, #0.0
 8003ffe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004002:	d009      	beq.n	8004018 <Battery_Voltage_Compensate+0xd8>
 8004004:	eef1 6a0f 	vmov.f32	s13, #31	; 0x40f80000  7.750
 8004008:	ed97 7a0d 	vldr	s14, [r7, #52]	; 0x34
 800400c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8004010:	4b5b      	ldr	r3, [pc, #364]	; (8004180 <Battery_Voltage_Compensate+0x240>)
 8004012:	edc3 7a00 	vstr	s15, [r3]
 8004016:	e003      	b.n	8004020 <Battery_Voltage_Compensate+0xe0>
	else compensation=1;
 8004018:	4b59      	ldr	r3, [pc, #356]	; (8004180 <Battery_Voltage_Compensate+0x240>)
 800401a:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800401e:	601a      	str	r2, [r3, #0]

	if(bat < 7.2)
 8004020:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8004022:	f7fc fab1 	bl	8000588 <__aeabi_f2d>
 8004026:	a34e      	add	r3, pc, #312	; (adr r3, 8004160 <Battery_Voltage_Compensate+0x220>)
 8004028:	e9d3 2300 	ldrd	r2, r3, [r3]
 800402c:	f7fc fd76 	bl	8000b1c <__aeabi_dcmplt>
 8004030:	4603      	mov	r3, r0
 8004032:	2b00      	cmp	r3, #0
 8004034:	d010      	beq.n	8004058 <Battery_Voltage_Compensate+0x118>
	{
		for(i=0;i<10;i++)
 8004036:	2300      	movs	r3, #0
 8004038:	63bb      	str	r3, [r7, #56]	; 0x38
 800403a:	e00a      	b.n	8004052 <Battery_Voltage_Compensate+0x112>
		{
			LED_Y_TOGGLE;
 800403c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004040:	4850      	ldr	r0, [pc, #320]	; (8004184 <Battery_Voltage_Compensate+0x244>)
 8004042:	f005 f914 	bl	800926e <HAL_GPIO_TogglePin>
			HAL_Delay(200);
 8004046:	20c8      	movs	r0, #200	; 0xc8
 8004048:	f003 fa5e 	bl	8007508 <HAL_Delay>
		for(i=0;i<10;i++)
 800404c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800404e:	3301      	adds	r3, #1
 8004050:	63bb      	str	r3, [r7, #56]	; 0x38
 8004052:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004054:	2b09      	cmp	r3, #9
 8004056:	ddf1      	ble.n	800403c <Battery_Voltage_Compensate+0xfc>
		}
	}

	//LiPo akku mérése
	raw=0;
 8004058:	2300      	movs	r3, #0
 800405a:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(i=0;i<20;i++)
 800405c:	2300      	movs	r3, #0
 800405e:	63bb      	str	r3, [r7, #56]	; 0x38
 8004060:	e016      	b.n	8004090 <Battery_Voltage_Compensate+0x150>
	{
		HAL_ADC_Start(hadc_ULiPo);
 8004062:	68b8      	ldr	r0, [r7, #8]
 8004064:	f003 fab8 	bl	80075d8 <HAL_ADC_Start>
		HAL_Delay(10);
 8004068:	200a      	movs	r0, #10
 800406a:	f003 fa4d 	bl	8007508 <HAL_Delay>
		HAL_ADC_PollForConversion(hadc_ULiPo,20);
 800406e:	2114      	movs	r1, #20
 8004070:	68b8      	ldr	r0, [r7, #8]
 8004072:	f003 fb83 	bl	800777c <HAL_ADC_PollForConversion>
		HAL_Delay(10);
 8004076:	200a      	movs	r0, #10
 8004078:	f003 fa46 	bl	8007508 <HAL_Delay>
		raw += HAL_ADC_GetValue(hadc_ULiPo);
 800407c:	68b8      	ldr	r0, [r7, #8]
 800407e:	f003 fc08 	bl	8007892 <HAL_ADC_GetValue>
 8004082:	4602      	mov	r2, r0
 8004084:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8004086:	4413      	add	r3, r2
 8004088:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(i=0;i<20;i++)
 800408a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800408c:	3301      	adds	r3, #1
 800408e:	63bb      	str	r3, [r7, #56]	; 0x38
 8004090:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004092:	2b13      	cmp	r3, #19
 8004094:	dde5      	ble.n	8004062 <Battery_Voltage_Compensate+0x122>

	}
	bat = (float)raw * 0.003241242 / 20.0 + 0.02;//ez a mi feszültségünk V-ban
 8004096:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8004098:	ee07 3a90 	vmov	s15, r3
 800409c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80040a0:	ee17 0a90 	vmov	r0, s15
 80040a4:	f7fc fa70 	bl	8000588 <__aeabi_f2d>
 80040a8:	a32f      	add	r3, pc, #188	; (adr r3, 8004168 <Battery_Voltage_Compensate+0x228>)
 80040aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80040ae:	f7fc fac3 	bl	8000638 <__aeabi_dmul>
 80040b2:	4602      	mov	r2, r0
 80040b4:	460b      	mov	r3, r1
 80040b6:	4610      	mov	r0, r2
 80040b8:	4619      	mov	r1, r3
 80040ba:	f04f 0200 	mov.w	r2, #0
 80040be:	4b2e      	ldr	r3, [pc, #184]	; (8004178 <Battery_Voltage_Compensate+0x238>)
 80040c0:	f7fc fbe4 	bl	800088c <__aeabi_ddiv>
 80040c4:	4602      	mov	r2, r0
 80040c6:	460b      	mov	r3, r1
 80040c8:	4610      	mov	r0, r2
 80040ca:	4619      	mov	r1, r3
 80040cc:	a328      	add	r3, pc, #160	; (adr r3, 8004170 <Battery_Voltage_Compensate+0x230>)
 80040ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80040d2:	f7fc f8fb 	bl	80002cc <__adddf3>
 80040d6:	4602      	mov	r2, r0
 80040d8:	460b      	mov	r3, r1
 80040da:	4610      	mov	r0, r2
 80040dc:	4619      	mov	r1, r3
 80040de:	f7fc fd83 	bl	8000be8 <__aeabi_d2f>
 80040e2:	4603      	mov	r3, r0
 80040e4:	637b      	str	r3, [r7, #52]	; 0x34
	sprintf(msg,"LiPo charge: %2.2f V \r\n", bat);
 80040e6:	6b78      	ldr	r0, [r7, #52]	; 0x34
 80040e8:	f7fc fa4e 	bl	8000588 <__aeabi_f2d>
 80040ec:	4602      	mov	r2, r0
 80040ee:	460b      	mov	r3, r1
 80040f0:	f107 0014 	add.w	r0, r7, #20
 80040f4:	4924      	ldr	r1, [pc, #144]	; (8004188 <Battery_Voltage_Compensate+0x248>)
 80040f6:	f009 fb5d 	bl	800d7b4 <siprintf>
	HAL_UART_Transmit(huart_debugg, (uint8_t*)msg, strlen(msg),10);
 80040fa:	f107 0314 	add.w	r3, r7, #20
 80040fe:	4618      	mov	r0, r3
 8004100:	f7fc f886 	bl	8000210 <strlen>
 8004104:	4603      	mov	r3, r0
 8004106:	b29a      	uxth	r2, r3
 8004108:	f107 0114 	add.w	r1, r7, #20
 800410c:	230a      	movs	r3, #10
 800410e:	6878      	ldr	r0, [r7, #4]
 8004110:	f007 fde7 	bl	800bce2 <HAL_UART_Transmit>

	/**/
	if(bat < 10)
 8004114:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8004118:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800411c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004120:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004124:	d510      	bpl.n	8004148 <Battery_Voltage_Compensate+0x208>
	{
		for(i=0;i<20;i++)
 8004126:	2300      	movs	r3, #0
 8004128:	63bb      	str	r3, [r7, #56]	; 0x38
 800412a:	e00a      	b.n	8004142 <Battery_Voltage_Compensate+0x202>
		{
			LED_Y_TOGGLE;
 800412c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004130:	4814      	ldr	r0, [pc, #80]	; (8004184 <Battery_Voltage_Compensate+0x244>)
 8004132:	f005 f89c 	bl	800926e <HAL_GPIO_TogglePin>
			HAL_Delay(200);
 8004136:	20c8      	movs	r0, #200	; 0xc8
 8004138:	f003 f9e6 	bl	8007508 <HAL_Delay>
		for(i=0;i<20;i++)
 800413c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800413e:	3301      	adds	r3, #1
 8004140:	63bb      	str	r3, [r7, #56]	; 0x38
 8004142:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004144:	2b13      	cmp	r3, #19
 8004146:	ddf1      	ble.n	800412c <Battery_Voltage_Compensate+0x1ec>
		}
	}

	LED_Y(0);
 8004148:	2201      	movs	r2, #1
 800414a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800414e:	480d      	ldr	r0, [pc, #52]	; (8004184 <Battery_Voltage_Compensate+0x244>)
 8004150:	f005 f874 	bl	800923c <HAL_GPIO_WritePin>

}
 8004154:	bf00      	nop
 8004156:	3740      	adds	r7, #64	; 0x40
 8004158:	46bd      	mov	sp, r7
 800415a:	bd80      	pop	{r7, pc}
 800415c:	f3af 8000 	nop.w
 8004160:	cccccccd 	.word	0xcccccccd
 8004164:	401ccccc 	.word	0x401ccccc
 8004168:	8c6df334 	.word	0x8c6df334
 800416c:	3f6a8d60 	.word	0x3f6a8d60
 8004170:	47ae147b 	.word	0x47ae147b
 8004174:	3f947ae1 	.word	0x3f947ae1
 8004178:	40340000 	.word	0x40340000
 800417c:	08011270 	.word	0x08011270
 8004180:	20000038 	.word	0x20000038
 8004184:	40020400 	.word	0x40020400
 8004188:	08011288 	.word	0x08011288
 800418c:	99fa11a9 	.word	0x99fa11a9
 8004190:	3f72dd7a 	.word	0x3f72dd7a
 8004194:	00000000 	.word	0x00000000

08004198 <Measure_Velocity_Task>:

void Measure_Velocity_Task(TIM_HandleTypeDef *htim_encoder,uint32_t tick, uint32_t period)
{
 8004198:	b5b0      	push	{r4, r5, r7, lr}
 800419a:	b086      	sub	sp, #24
 800419c:	af00      	add	r7, sp, #0
 800419e:	60f8      	str	r0, [r7, #12]
 80041a0:	60b9      	str	r1, [r7, #8]
 80041a2:	607a      	str	r2, [r7, #4]
	static uint32_t tick_prev=0;
	static uint32_t measure_v_task_tick=4;
	static float alpha=0.3;
	static float invalpha=0.7;
	float v_uj=0;
 80041a4:	f04f 0300 	mov.w	r3, #0
 80041a8:	617b      	str	r3, [r7, #20]

	if(measure_v_task_tick>tick) return;
 80041aa:	4b31      	ldr	r3, [pc, #196]	; (8004270 <Measure_Velocity_Task+0xd8>)
 80041ac:	681b      	ldr	r3, [r3, #0]
 80041ae:	68ba      	ldr	r2, [r7, #8]
 80041b0:	429a      	cmp	r2, r3
 80041b2:	d354      	bcc.n	800425e <Measure_Velocity_Task+0xc6>
	measure_v_task_tick= tick + period;
 80041b4:	68ba      	ldr	r2, [r7, #8]
 80041b6:	687b      	ldr	r3, [r7, #4]
 80041b8:	4413      	add	r3, r2
 80041ba:	4a2d      	ldr	r2, [pc, #180]	; (8004270 <Measure_Velocity_Task+0xd8>)
 80041bc:	6013      	str	r3, [r2, #0]
	if(!tick_prev)
 80041be:	4b2d      	ldr	r3, [pc, #180]	; (8004274 <Measure_Velocity_Task+0xdc>)
 80041c0:	681b      	ldr	r3, [r3, #0]
 80041c2:	2b00      	cmp	r3, #0
 80041c4:	d103      	bne.n	80041ce <Measure_Velocity_Task+0x36>
	{
		tick_prev=tick;
 80041c6:	4a2b      	ldr	r2, [pc, #172]	; (8004274 <Measure_Velocity_Task+0xdc>)
 80041c8:	68bb      	ldr	r3, [r7, #8]
 80041ca:	6013      	str	r3, [r2, #0]
		return;
 80041cc:	e048      	b.n	8004260 <Measure_Velocity_Task+0xc8>
	}
	v_uj =((float) 0x8000 - (float) __HAL_TIM_GET_COUNTER(htim_encoder))*7.49/(float)period; //mm/s dimenzió
 80041ce:	68fb      	ldr	r3, [r7, #12]
 80041d0:	681b      	ldr	r3, [r3, #0]
 80041d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80041d4:	ee07 3a90 	vmov	s15, r3
 80041d8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80041dc:	ed9f 7a26 	vldr	s14, [pc, #152]	; 8004278 <Measure_Velocity_Task+0xe0>
 80041e0:	ee77 7a67 	vsub.f32	s15, s14, s15
 80041e4:	ee17 0a90 	vmov	r0, s15
 80041e8:	f7fc f9ce 	bl	8000588 <__aeabi_f2d>
 80041ec:	a31e      	add	r3, pc, #120	; (adr r3, 8004268 <Measure_Velocity_Task+0xd0>)
 80041ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80041f2:	f7fc fa21 	bl	8000638 <__aeabi_dmul>
 80041f6:	4602      	mov	r2, r0
 80041f8:	460b      	mov	r3, r1
 80041fa:	4614      	mov	r4, r2
 80041fc:	461d      	mov	r5, r3
 80041fe:	687b      	ldr	r3, [r7, #4]
 8004200:	ee07 3a90 	vmov	s15, r3
 8004204:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004208:	ee17 0a90 	vmov	r0, s15
 800420c:	f7fc f9bc 	bl	8000588 <__aeabi_f2d>
 8004210:	4602      	mov	r2, r0
 8004212:	460b      	mov	r3, r1
 8004214:	4620      	mov	r0, r4
 8004216:	4629      	mov	r1, r5
 8004218:	f7fc fb38 	bl	800088c <__aeabi_ddiv>
 800421c:	4602      	mov	r2, r0
 800421e:	460b      	mov	r3, r1
 8004220:	4610      	mov	r0, r2
 8004222:	4619      	mov	r1, r3
 8004224:	f7fc fce0 	bl	8000be8 <__aeabi_d2f>
 8004228:	4603      	mov	r3, r0
 800422a:	617b      	str	r3, [r7, #20]
	TIM8->CNT=0x8000;
 800422c:	4b13      	ldr	r3, [pc, #76]	; (800427c <Measure_Velocity_Task+0xe4>)
 800422e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8004232:	625a      	str	r2, [r3, #36]	; 0x24
	//tick_prev=tick;
	//exponenciális szűrés
	v = alpha*(float)v_uj + invalpha*v;
 8004234:	4b12      	ldr	r3, [pc, #72]	; (8004280 <Measure_Velocity_Task+0xe8>)
 8004236:	ed93 7a00 	vldr	s14, [r3]
 800423a:	edd7 7a05 	vldr	s15, [r7, #20]
 800423e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8004242:	4b10      	ldr	r3, [pc, #64]	; (8004284 <Measure_Velocity_Task+0xec>)
 8004244:	edd3 6a00 	vldr	s13, [r3]
 8004248:	4b0f      	ldr	r3, [pc, #60]	; (8004288 <Measure_Velocity_Task+0xf0>)
 800424a:	edd3 7a00 	vldr	s15, [r3]
 800424e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8004252:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004256:	4b0c      	ldr	r3, [pc, #48]	; (8004288 <Measure_Velocity_Task+0xf0>)
 8004258:	edc3 7a00 	vstr	s15, [r3]
 800425c:	e000      	b.n	8004260 <Measure_Velocity_Task+0xc8>
	if(measure_v_task_tick>tick) return;
 800425e:	bf00      	nop
}
 8004260:	3718      	adds	r7, #24
 8004262:	46bd      	mov	sp, r7
 8004264:	bdb0      	pop	{r4, r5, r7, pc}
 8004266:	bf00      	nop
 8004268:	8f5c28f6 	.word	0x8f5c28f6
 800426c:	401df5c2 	.word	0x401df5c2
 8004270:	2000003c 	.word	0x2000003c
 8004274:	2000075c 	.word	0x2000075c
 8004278:	47000000 	.word	0x47000000
 800427c:	40010400 	.word	0x40010400
 8004280:	20000040 	.word	0x20000040
 8004284:	20000044 	.word	0x20000044
 8004288:	20000758 	.word	0x20000758
 800428c:	00000000 	.word	0x00000000

08004290 <Motor_Drive_Task>:

void Motor_Drive_Task(TIM_HandleTypeDef *htim_motor, UART_HandleTypeDef *huart, uint32_t tick, uint32_t period) //DUTY paramtert kiszedtem -> változtassuk a globális változót
{
 8004290:	b5b0      	push	{r4, r5, r7, lr}
 8004292:	b086      	sub	sp, #24
 8004294:	af00      	add	r7, sp, #0
 8004296:	60f8      	str	r0, [r7, #12]
 8004298:	60b9      	str	r1, [r7, #8]
 800429a:	607a      	str	r2, [r7, #4]
 800429c:	603b      	str	r3, [r7, #0]
	static uint32_t motor_drive_task_tick=5;
	static float f,u=0;

	int32_t ccr1;
	int32_t ccr2;
	if(motor_drive_task_tick>tick) return;
 800429e:	4ba4      	ldr	r3, [pc, #656]	; (8004530 <Motor_Drive_Task+0x2a0>)
 80042a0:	681b      	ldr	r3, [r3, #0]
 80042a2:	687a      	ldr	r2, [r7, #4]
 80042a4:	429a      	cmp	r2, r3
 80042a6:	f0c0 8133 	bcc.w	8004510 <Motor_Drive_Task+0x280>
	motor_drive_task_tick= tick + period;
 80042aa:	687a      	ldr	r2, [r7, #4]
 80042ac:	683b      	ldr	r3, [r7, #0]
 80042ae:	4413      	add	r3, r2
 80042b0:	4a9f      	ldr	r2, [pc, #636]	; (8004530 <Motor_Drive_Task+0x2a0>)
 80042b2:	6013      	str	r3, [r2, #0]

	if(motorEnRemote && motorEnLineOk) //ha nem nyomtunk vészstopot és az akkuk is rendben vannak akkor pöröghet a motor
 80042b4:	4b9f      	ldr	r3, [pc, #636]	; (8004534 <Motor_Drive_Task+0x2a4>)
 80042b6:	781b      	ldrb	r3, [r3, #0]
 80042b8:	2b00      	cmp	r3, #0
 80042ba:	f000 80da 	beq.w	8004472 <Motor_Drive_Task+0x1e2>
 80042be:	4b9e      	ldr	r3, [pc, #632]	; (8004538 <Motor_Drive_Task+0x2a8>)
 80042c0:	781b      	ldrb	r3, [r3, #0]
 80042c2:	2b00      	cmp	r3, #0
 80042c4:	f000 80d5 	beq.w	8004472 <Motor_Drive_Task+0x1e2>
	{
		//az u paraméter a bevatkozó jel minusz holtásávot adja meg
		u= KC * (v_ref - v) * compensation + f;
 80042c8:	4b9c      	ldr	r3, [pc, #624]	; (800453c <Motor_Drive_Task+0x2ac>)
 80042ca:	ed93 7a00 	vldr	s14, [r3]
 80042ce:	4b9c      	ldr	r3, [pc, #624]	; (8004540 <Motor_Drive_Task+0x2b0>)
 80042d0:	edd3 7a00 	vldr	s15, [r3]
 80042d4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80042d8:	ee17 0a90 	vmov	r0, s15
 80042dc:	f7fc f954 	bl	8000588 <__aeabi_f2d>
 80042e0:	a38d      	add	r3, pc, #564	; (adr r3, 8004518 <Motor_Drive_Task+0x288>)
 80042e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80042e6:	f7fc f9a7 	bl	8000638 <__aeabi_dmul>
 80042ea:	4602      	mov	r2, r0
 80042ec:	460b      	mov	r3, r1
 80042ee:	4614      	mov	r4, r2
 80042f0:	461d      	mov	r5, r3
 80042f2:	4b94      	ldr	r3, [pc, #592]	; (8004544 <Motor_Drive_Task+0x2b4>)
 80042f4:	681b      	ldr	r3, [r3, #0]
 80042f6:	4618      	mov	r0, r3
 80042f8:	f7fc f946 	bl	8000588 <__aeabi_f2d>
 80042fc:	4602      	mov	r2, r0
 80042fe:	460b      	mov	r3, r1
 8004300:	4620      	mov	r0, r4
 8004302:	4629      	mov	r1, r5
 8004304:	f7fc f998 	bl	8000638 <__aeabi_dmul>
 8004308:	4602      	mov	r2, r0
 800430a:	460b      	mov	r3, r1
 800430c:	4614      	mov	r4, r2
 800430e:	461d      	mov	r5, r3
 8004310:	4b8d      	ldr	r3, [pc, #564]	; (8004548 <Motor_Drive_Task+0x2b8>)
 8004312:	681b      	ldr	r3, [r3, #0]
 8004314:	4618      	mov	r0, r3
 8004316:	f7fc f937 	bl	8000588 <__aeabi_f2d>
 800431a:	4602      	mov	r2, r0
 800431c:	460b      	mov	r3, r1
 800431e:	4620      	mov	r0, r4
 8004320:	4629      	mov	r1, r5
 8004322:	f7fb ffd3 	bl	80002cc <__adddf3>
 8004326:	4602      	mov	r2, r0
 8004328:	460b      	mov	r3, r1
 800432a:	4610      	mov	r0, r2
 800432c:	4619      	mov	r1, r3
 800432e:	f7fc fc5b 	bl	8000be8 <__aeabi_d2f>
 8004332:	4603      	mov	r3, r0
 8004334:	4a85      	ldr	r2, [pc, #532]	; (800454c <Motor_Drive_Task+0x2bc>)
 8004336:	6013      	str	r3, [r2, #0]
		if(u>880) u=880;
 8004338:	4b84      	ldr	r3, [pc, #528]	; (800454c <Motor_Drive_Task+0x2bc>)
 800433a:	edd3 7a00 	vldr	s15, [r3]
 800433e:	ed9f 7a84 	vldr	s14, [pc, #528]	; 8004550 <Motor_Drive_Task+0x2c0>
 8004342:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004346:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800434a:	dd03      	ble.n	8004354 <Motor_Drive_Task+0xc4>
 800434c:	4b7f      	ldr	r3, [pc, #508]	; (800454c <Motor_Drive_Task+0x2bc>)
 800434e:	4a81      	ldr	r2, [pc, #516]	; (8004554 <Motor_Drive_Task+0x2c4>)
 8004350:	601a      	str	r2, [r3, #0]
 8004352:	e00c      	b.n	800436e <Motor_Drive_Task+0xde>
		else if(u<-500)u=-500;
 8004354:	4b7d      	ldr	r3, [pc, #500]	; (800454c <Motor_Drive_Task+0x2bc>)
 8004356:	edd3 7a00 	vldr	s15, [r3]
 800435a:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 8004558 <Motor_Drive_Task+0x2c8>
 800435e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004362:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004366:	d502      	bpl.n	800436e <Motor_Drive_Task+0xde>
 8004368:	4b78      	ldr	r3, [pc, #480]	; (800454c <Motor_Drive_Task+0x2bc>)
 800436a:	4a7c      	ldr	r2, [pc, #496]	; (800455c <Motor_Drive_Task+0x2cc>)
 800436c:	601a      	str	r2, [r3, #0]
		f = ZD*f + (1-ZD)*u;
 800436e:	4b76      	ldr	r3, [pc, #472]	; (8004548 <Motor_Drive_Task+0x2b8>)
 8004370:	681b      	ldr	r3, [r3, #0]
 8004372:	4618      	mov	r0, r3
 8004374:	f7fc f908 	bl	8000588 <__aeabi_f2d>
 8004378:	a369      	add	r3, pc, #420	; (adr r3, 8004520 <Motor_Drive_Task+0x290>)
 800437a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800437e:	f7fc f95b 	bl	8000638 <__aeabi_dmul>
 8004382:	4602      	mov	r2, r0
 8004384:	460b      	mov	r3, r1
 8004386:	4614      	mov	r4, r2
 8004388:	461d      	mov	r5, r3
 800438a:	4b70      	ldr	r3, [pc, #448]	; (800454c <Motor_Drive_Task+0x2bc>)
 800438c:	681b      	ldr	r3, [r3, #0]
 800438e:	4618      	mov	r0, r3
 8004390:	f7fc f8fa 	bl	8000588 <__aeabi_f2d>
 8004394:	a364      	add	r3, pc, #400	; (adr r3, 8004528 <Motor_Drive_Task+0x298>)
 8004396:	e9d3 2300 	ldrd	r2, r3, [r3]
 800439a:	f7fc f94d 	bl	8000638 <__aeabi_dmul>
 800439e:	4602      	mov	r2, r0
 80043a0:	460b      	mov	r3, r1
 80043a2:	4620      	mov	r0, r4
 80043a4:	4629      	mov	r1, r5
 80043a6:	f7fb ff91 	bl	80002cc <__adddf3>
 80043aa:	4602      	mov	r2, r0
 80043ac:	460b      	mov	r3, r1
 80043ae:	4610      	mov	r0, r2
 80043b0:	4619      	mov	r1, r3
 80043b2:	f7fc fc19 	bl	8000be8 <__aeabi_d2f>
 80043b6:	4603      	mov	r3, r0
 80043b8:	4a63      	ldr	r2, [pc, #396]	; (8004548 <Motor_Drive_Task+0x2b8>)
 80043ba:	6013      	str	r3, [r2, #0]
		//ez alapján a kiadandó kitöltési tényező
		if(u>0) motorDuty=(int)u+70;
 80043bc:	4b63      	ldr	r3, [pc, #396]	; (800454c <Motor_Drive_Task+0x2bc>)
 80043be:	edd3 7a00 	vldr	s15, [r3]
 80043c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80043c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80043ca:	dd0a      	ble.n	80043e2 <Motor_Drive_Task+0x152>
 80043cc:	4b5f      	ldr	r3, [pc, #380]	; (800454c <Motor_Drive_Task+0x2bc>)
 80043ce:	edd3 7a00 	vldr	s15, [r3]
 80043d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043d6:	ee17 3a90 	vmov	r3, s15
 80043da:	3346      	adds	r3, #70	; 0x46
 80043dc:	4a60      	ldr	r2, [pc, #384]	; (8004560 <Motor_Drive_Task+0x2d0>)
 80043de:	6013      	str	r3, [r2, #0]
 80043e0:	e01b      	b.n	800441a <Motor_Drive_Task+0x18a>
		else if(u<0) motorDuty=(int)u-70;
 80043e2:	4b5a      	ldr	r3, [pc, #360]	; (800454c <Motor_Drive_Task+0x2bc>)
 80043e4:	edd3 7a00 	vldr	s15, [r3]
 80043e8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80043ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80043f0:	d50a      	bpl.n	8004408 <Motor_Drive_Task+0x178>
 80043f2:	4b56      	ldr	r3, [pc, #344]	; (800454c <Motor_Drive_Task+0x2bc>)
 80043f4:	edd3 7a00 	vldr	s15, [r3]
 80043f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043fc:	ee17 3a90 	vmov	r3, s15
 8004400:	3b46      	subs	r3, #70	; 0x46
 8004402:	4a57      	ldr	r2, [pc, #348]	; (8004560 <Motor_Drive_Task+0x2d0>)
 8004404:	6013      	str	r3, [r2, #0]
 8004406:	e008      	b.n	800441a <Motor_Drive_Task+0x18a>
		else motorDuty=(int)u;
 8004408:	4b50      	ldr	r3, [pc, #320]	; (800454c <Motor_Drive_Task+0x2bc>)
 800440a:	edd3 7a00 	vldr	s15, [r3]
 800440e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004412:	ee17 2a90 	vmov	r2, s15
 8004416:	4b52      	ldr	r3, [pc, #328]	; (8004560 <Motor_Drive_Task+0x2d0>)
 8004418:	601a      	str	r2, [r3, #0]
		if(fabs(v_ref)<70 && fabs(v)<70)
 800441a:	4b48      	ldr	r3, [pc, #288]	; (800453c <Motor_Drive_Task+0x2ac>)
 800441c:	edd3 7a00 	vldr	s15, [r3]
 8004420:	eef0 7ae7 	vabs.f32	s15, s15
 8004424:	ed9f 7a4f 	vldr	s14, [pc, #316]	; 8004564 <Motor_Drive_Task+0x2d4>
 8004428:	eef4 7ac7 	vcmpe.f32	s15, s14
 800442c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004430:	d519      	bpl.n	8004466 <Motor_Drive_Task+0x1d6>
 8004432:	4b43      	ldr	r3, [pc, #268]	; (8004540 <Motor_Drive_Task+0x2b0>)
 8004434:	edd3 7a00 	vldr	s15, [r3]
 8004438:	eef0 7ae7 	vabs.f32	s15, s15
 800443c:	ed9f 7a49 	vldr	s14, [pc, #292]	; 8004564 <Motor_Drive_Task+0x2d4>
 8004440:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004444:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004448:	d50d      	bpl.n	8004466 <Motor_Drive_Task+0x1d6>
		{
			f=u=0;
 800444a:	4b40      	ldr	r3, [pc, #256]	; (800454c <Motor_Drive_Task+0x2bc>)
 800444c:	f04f 0200 	mov.w	r2, #0
 8004450:	601a      	str	r2, [r3, #0]
 8004452:	4b3e      	ldr	r3, [pc, #248]	; (800454c <Motor_Drive_Task+0x2bc>)
 8004454:	681b      	ldr	r3, [r3, #0]
 8004456:	4a3c      	ldr	r2, [pc, #240]	; (8004548 <Motor_Drive_Task+0x2b8>)
 8004458:	6013      	str	r3, [r2, #0]
			MOTOR_EN(0); //amugy stop
 800445a:	2200      	movs	r2, #0
 800445c:	2140      	movs	r1, #64	; 0x40
 800445e:	4842      	ldr	r0, [pc, #264]	; (8004568 <Motor_Drive_Task+0x2d8>)
 8004460:	f004 feec 	bl	800923c <HAL_GPIO_WritePin>
		if(fabs(v_ref)<70 && fabs(v)<70)
 8004464:	e012      	b.n	800448c <Motor_Drive_Task+0x1fc>
		}
		else MOTOR_EN(1);
 8004466:	2201      	movs	r2, #1
 8004468:	2140      	movs	r1, #64	; 0x40
 800446a:	483f      	ldr	r0, [pc, #252]	; (8004568 <Motor_Drive_Task+0x2d8>)
 800446c:	f004 fee6 	bl	800923c <HAL_GPIO_WritePin>
		if(fabs(v_ref)<70 && fabs(v)<70)
 8004470:	e00c      	b.n	800448c <Motor_Drive_Task+0x1fc>
	}
	else
	{	f=u=0;
 8004472:	4b36      	ldr	r3, [pc, #216]	; (800454c <Motor_Drive_Task+0x2bc>)
 8004474:	f04f 0200 	mov.w	r2, #0
 8004478:	601a      	str	r2, [r3, #0]
 800447a:	4b34      	ldr	r3, [pc, #208]	; (800454c <Motor_Drive_Task+0x2bc>)
 800447c:	681b      	ldr	r3, [r3, #0]
 800447e:	4a32      	ldr	r2, [pc, #200]	; (8004548 <Motor_Drive_Task+0x2b8>)
 8004480:	6013      	str	r3, [r2, #0]
		MOTOR_EN(0); //amugy stop
 8004482:	2200      	movs	r2, #0
 8004484:	2140      	movs	r1, #64	; 0x40
 8004486:	4838      	ldr	r0, [pc, #224]	; (8004568 <Motor_Drive_Task+0x2d8>)
 8004488:	f004 fed8 	bl	800923c <HAL_GPIO_WritePin>
	}
	//A két érték amit irogatsz (TIM3->CCR1,CCR2) konkrét timer periféria regiszterek, nem feltétlen jó őket folyamatosan újraírni 10ms enként
	/**/
	if(mode==FAST && rxBuf[1]<1 && !leaveLineEnabled)
 800448c:	4b37      	ldr	r3, [pc, #220]	; (800456c <Motor_Drive_Task+0x2dc>)
 800448e:	781b      	ldrb	r3, [r3, #0]
 8004490:	2b3f      	cmp	r3, #63	; 0x3f
 8004492:	d110      	bne.n	80044b6 <Motor_Drive_Task+0x226>
 8004494:	4b36      	ldr	r3, [pc, #216]	; (8004570 <Motor_Drive_Task+0x2e0>)
 8004496:	785b      	ldrb	r3, [r3, #1]
 8004498:	2b00      	cmp	r3, #0
 800449a:	d10c      	bne.n	80044b6 <Motor_Drive_Task+0x226>
 800449c:	4b35      	ldr	r3, [pc, #212]	; (8004574 <Motor_Drive_Task+0x2e4>)
 800449e:	781b      	ldrb	r3, [r3, #0]
 80044a0:	2b00      	cmp	r3, #0
 80044a2:	d108      	bne.n	80044b6 <Motor_Drive_Task+0x226>
	{
		TIM3->CCR1=499;
 80044a4:	4b34      	ldr	r3, [pc, #208]	; (8004578 <Motor_Drive_Task+0x2e8>)
 80044a6:	f240 12f3 	movw	r2, #499	; 0x1f3
 80044aa:	635a      	str	r2, [r3, #52]	; 0x34
		TIM3->CCR2=499;
 80044ac:	4b32      	ldr	r3, [pc, #200]	; (8004578 <Motor_Drive_Task+0x2e8>)
 80044ae:	f240 12f3 	movw	r2, #499	; 0x1f3
 80044b2:	639a      	str	r2, [r3, #56]	; 0x38
 80044b4:	e027      	b.n	8004506 <Motor_Drive_Task+0x276>
		//LED_Y_TOGGLE;
	}
	else if(motorDuty!=motorDutyPrev)//csak akkor írjuk át őket ha tényleg muszáj (ha változtak az előző taskhívás óta)
 80044b6:	4b2a      	ldr	r3, [pc, #168]	; (8004560 <Motor_Drive_Task+0x2d0>)
 80044b8:	681a      	ldr	r2, [r3, #0]
 80044ba:	4b30      	ldr	r3, [pc, #192]	; (800457c <Motor_Drive_Task+0x2ec>)
 80044bc:	681b      	ldr	r3, [r3, #0]
 80044be:	429a      	cmp	r2, r3
 80044c0:	d021      	beq.n	8004506 <Motor_Drive_Task+0x276>
	{
		ccr2 = (motorDuty + 1000)/2-1;
 80044c2:	4b27      	ldr	r3, [pc, #156]	; (8004560 <Motor_Drive_Task+0x2d0>)
 80044c4:	681b      	ldr	r3, [r3, #0]
 80044c6:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 80044ca:	0fda      	lsrs	r2, r3, #31
 80044cc:	4413      	add	r3, r2
 80044ce:	105b      	asrs	r3, r3, #1
 80044d0:	3b01      	subs	r3, #1
 80044d2:	617b      	str	r3, [r7, #20]
		if(ccr2>950)ccr2=950;
 80044d4:	697b      	ldr	r3, [r7, #20]
 80044d6:	f240 32b6 	movw	r2, #950	; 0x3b6
 80044da:	4293      	cmp	r3, r2
 80044dc:	dd02      	ble.n	80044e4 <Motor_Drive_Task+0x254>
 80044de:	f240 33b6 	movw	r3, #950	; 0x3b6
 80044e2:	617b      	str	r3, [r7, #20]
		if(ccr2<-950)ccr2=-950;
 80044e4:	697b      	ldr	r3, [r7, #20]
 80044e6:	4a26      	ldr	r2, [pc, #152]	; (8004580 <Motor_Drive_Task+0x2f0>)
 80044e8:	4293      	cmp	r3, r2
 80044ea:	da01      	bge.n	80044f0 <Motor_Drive_Task+0x260>
 80044ec:	4b24      	ldr	r3, [pc, #144]	; (8004580 <Motor_Drive_Task+0x2f0>)
 80044ee:	617b      	str	r3, [r7, #20]
		ccr1= 998-ccr2;
 80044f0:	697b      	ldr	r3, [r7, #20]
 80044f2:	f5c3 7379 	rsb	r3, r3, #996	; 0x3e4
 80044f6:	3302      	adds	r3, #2
 80044f8:	613b      	str	r3, [r7, #16]

		//2 Referencia megadása
		//Ezeket a loopba kéne változtatni folyamatosan, pwm-elinditas mashova kell majd

		TIM3->CCR1=ccr1;
 80044fa:	4a1f      	ldr	r2, [pc, #124]	; (8004578 <Motor_Drive_Task+0x2e8>)
 80044fc:	693b      	ldr	r3, [r7, #16]
 80044fe:	6353      	str	r3, [r2, #52]	; 0x34
		TIM3->CCR2=ccr2;
 8004500:	4a1d      	ldr	r2, [pc, #116]	; (8004578 <Motor_Drive_Task+0x2e8>)
 8004502:	697b      	ldr	r3, [r7, #20]
 8004504:	6393      	str	r3, [r2, #56]	; 0x38
	}
	motorDutyPrev=motorDuty;
 8004506:	4b16      	ldr	r3, [pc, #88]	; (8004560 <Motor_Drive_Task+0x2d0>)
 8004508:	681b      	ldr	r3, [r3, #0]
 800450a:	4a1c      	ldr	r2, [pc, #112]	; (800457c <Motor_Drive_Task+0x2ec>)
 800450c:	6013      	str	r3, [r2, #0]
 800450e:	e000      	b.n	8004512 <Motor_Drive_Task+0x282>
	if(motor_drive_task_tick>tick) return;
 8004510:	bf00      	nop
}
 8004512:	3718      	adds	r7, #24
 8004514:	46bd      	mov	sp, r7
 8004516:	bdb0      	pop	{r4, r5, r7, pc}
 8004518:	30be0ded 	.word	0x30be0ded
 800451c:	3fd02a99 	.word	0x3fd02a99
 8004520:	9b3d07c8 	.word	0x9b3d07c8
 8004524:	3fef9f55 	.word	0x3fef9f55
 8004528:	30be0e00 	.word	0x30be0e00
 800452c:	3f882a99 	.word	0x3f882a99
 8004530:	20000048 	.word	0x20000048
 8004534:	20000c3c 	.word	0x20000c3c
 8004538:	20000c3d 	.word	0x20000c3d
 800453c:	20000340 	.word	0x20000340
 8004540:	20000758 	.word	0x20000758
 8004544:	20000038 	.word	0x20000038
 8004548:	20000760 	.word	0x20000760
 800454c:	20000764 	.word	0x20000764
 8004550:	445c0000 	.word	0x445c0000
 8004554:	445c0000 	.word	0x445c0000
 8004558:	c3fa0000 	.word	0xc3fa0000
 800455c:	c3fa0000 	.word	0xc3fa0000
 8004560:	20000768 	.word	0x20000768
 8004564:	428c0000 	.word	0x428c0000
 8004568:	40020400 	.word	0x40020400
 800456c:	2000033e 	.word	0x2000033e
 8004570:	20000770 	.word	0x20000770
 8004574:	20000344 	.word	0x20000344
 8004578:	40000400 	.word	0x40000400
 800457c:	2000076c 	.word	0x2000076c
 8004580:	fffffc4a 	.word	0xfffffc4a

08004584 <G0_Read_Fast>:

uint16_t boostCnt=0;


uint8_t G0_Read_Fast(UART_HandleTypeDef *huart_stm,UART_HandleTypeDef *huart_debugg)
{
 8004584:	b580      	push	{r7, lr}
 8004586:	b084      	sub	sp, #16
 8004588:	af00      	add	r7, sp, #0
 800458a:	6078      	str	r0, [r7, #4]
 800458c:	6039      	str	r1, [r7, #0]

	uint8_t state=0;
 800458e:	2300      	movs	r3, #0
 8004590:	73fb      	strb	r3, [r7, #15]
	txBuf[0]=CMD_READ_FAST;
 8004592:	4b13      	ldr	r3, [pc, #76]	; (80045e0 <G0_Read_Fast+0x5c>)
 8004594:	222a      	movs	r2, #42	; 0x2a
 8004596:	701a      	strb	r2, [r3, #0]
	HAL_UART_Transmit(huart_stm, txBuf,1, 2);
 8004598:	2302      	movs	r3, #2
 800459a:	2201      	movs	r2, #1
 800459c:	4910      	ldr	r1, [pc, #64]	; (80045e0 <G0_Read_Fast+0x5c>)
 800459e:	6878      	ldr	r0, [r7, #4]
 80045a0:	f007 fb9f 	bl	800bce2 <HAL_UART_Transmit>
	state=HAL_UART_Receive(huart_stm, rxBuf, 8, 4);
 80045a4:	2304      	movs	r3, #4
 80045a6:	2208      	movs	r2, #8
 80045a8:	490e      	ldr	r1, [pc, #56]	; (80045e4 <G0_Read_Fast+0x60>)
 80045aa:	6878      	ldr	r0, [r7, #4]
 80045ac:	f007 fc2b 	bl	800be06 <HAL_UART_Receive>
 80045b0:	4603      	mov	r3, r0
 80045b2:	73fb      	strb	r3, [r7, #15]
	motorEnLineOk=1; //ha van akkor mehet a szabályozás
 80045b4:	4b0c      	ldr	r3, [pc, #48]	; (80045e8 <G0_Read_Fast+0x64>)
 80045b6:	2201      	movs	r2, #1
 80045b8:	701a      	strb	r2, [r3, #0]
	if((state==HAL_OK)&&(rxBuf[0]==START_BYTE_FAST) && (rxBuf[7]==STOP_BYTE))//jöt adat a G0 tól és a keret is megfelelő
 80045ba:	7bfb      	ldrb	r3, [r7, #15]
 80045bc:	2b00      	cmp	r3, #0
 80045be:	d109      	bne.n	80045d4 <G0_Read_Fast+0x50>
 80045c0:	4b08      	ldr	r3, [pc, #32]	; (80045e4 <G0_Read_Fast+0x60>)
 80045c2:	781b      	ldrb	r3, [r3, #0]
 80045c4:	2b41      	cmp	r3, #65	; 0x41
 80045c6:	d105      	bne.n	80045d4 <G0_Read_Fast+0x50>
 80045c8:	4b06      	ldr	r3, [pc, #24]	; (80045e4 <G0_Read_Fast+0x60>)
 80045ca:	79db      	ldrb	r3, [r3, #7]
 80045cc:	2b12      	cmp	r3, #18
 80045ce:	d101      	bne.n	80045d4 <G0_Read_Fast+0x50>
	{
		return 0;
 80045d0:	2300      	movs	r3, #0
 80045d2:	e000      	b.n	80045d6 <G0_Read_Fast+0x52>
	}
	else //nem jött szabályos adat a G0-tól
	{
		return 1;
 80045d4:	2301      	movs	r3, #1
	}
}
 80045d6:	4618      	mov	r0, r3
 80045d8:	3710      	adds	r7, #16
 80045da:	46bd      	mov	sp, r7
 80045dc:	bd80      	pop	{r7, pc}
 80045de:	bf00      	nop
 80045e0:	2000004c 	.word	0x2000004c
 80045e4:	20000770 	.word	0x20000770
 80045e8:	20000c3d 	.word	0x20000c3d

080045ec <G0_Read_Skill>:

uint8_t G0_Read_Skill(UART_HandleTypeDef *huart_stm,UART_HandleTypeDef *huart_debugg, uint8_t command)
{
 80045ec:	b580      	push	{r7, lr}
 80045ee:	b086      	sub	sp, #24
 80045f0:	af00      	add	r7, sp, #0
 80045f2:	60f8      	str	r0, [r7, #12]
 80045f4:	60b9      	str	r1, [r7, #8]
 80045f6:	4613      	mov	r3, r2
 80045f8:	71fb      	strb	r3, [r7, #7]
	uint8_t state=0;
 80045fa:	2300      	movs	r3, #0
 80045fc:	75fb      	strb	r3, [r7, #23]
	txBuf[0]=command;
 80045fe:	4a15      	ldr	r2, [pc, #84]	; (8004654 <G0_Read_Skill+0x68>)
 8004600:	79fb      	ldrb	r3, [r7, #7]
 8004602:	7013      	strb	r3, [r2, #0]
	HAL_UART_Transmit(huart_stm, txBuf,1, 2);
 8004604:	2302      	movs	r3, #2
 8004606:	2201      	movs	r2, #1
 8004608:	4912      	ldr	r1, [pc, #72]	; (8004654 <G0_Read_Skill+0x68>)
 800460a:	68f8      	ldr	r0, [r7, #12]
 800460c:	f007 fb69 	bl	800bce2 <HAL_UART_Transmit>
	state = HAL_UART_Receive(huart_stm, rxBuf, 10, 4);
 8004610:	2304      	movs	r3, #4
 8004612:	220a      	movs	r2, #10
 8004614:	4910      	ldr	r1, [pc, #64]	; (8004658 <G0_Read_Skill+0x6c>)
 8004616:	68f8      	ldr	r0, [r7, #12]
 8004618:	f007 fbf5 	bl	800be06 <HAL_UART_Receive>
 800461c:	4603      	mov	r3, r0
 800461e:	75fb      	strb	r3, [r7, #23]
	motorEnLineOk=1; //ha van akkor mehet a szabályozás
 8004620:	4b0e      	ldr	r3, [pc, #56]	; (800465c <G0_Read_Skill+0x70>)
 8004622:	2201      	movs	r2, #1
 8004624:	701a      	strb	r2, [r3, #0]
	if((state==HAL_OK)&&(rxBuf[0]==START_BYTE_SKILL_FORWARD || rxBuf[0]==START_BYTE_SKILL_REVERSE) && (rxBuf[9]==STOP_BYTE))//jöt adat a G0 tól és a keret is megfelelő
 8004626:	7dfb      	ldrb	r3, [r7, #23]
 8004628:	2b00      	cmp	r3, #0
 800462a:	d10d      	bne.n	8004648 <G0_Read_Skill+0x5c>
 800462c:	4b0a      	ldr	r3, [pc, #40]	; (8004658 <G0_Read_Skill+0x6c>)
 800462e:	781b      	ldrb	r3, [r3, #0]
 8004630:	2b50      	cmp	r3, #80	; 0x50
 8004632:	d003      	beq.n	800463c <G0_Read_Skill+0x50>
 8004634:	4b08      	ldr	r3, [pc, #32]	; (8004658 <G0_Read_Skill+0x6c>)
 8004636:	781b      	ldrb	r3, [r3, #0]
 8004638:	2ba8      	cmp	r3, #168	; 0xa8
 800463a:	d105      	bne.n	8004648 <G0_Read_Skill+0x5c>
 800463c:	4b06      	ldr	r3, [pc, #24]	; (8004658 <G0_Read_Skill+0x6c>)
 800463e:	7a5b      	ldrb	r3, [r3, #9]
 8004640:	2b12      	cmp	r3, #18
 8004642:	d101      	bne.n	8004648 <G0_Read_Skill+0x5c>
	{
		return 0;
 8004644:	2300      	movs	r3, #0
 8004646:	e000      	b.n	800464a <G0_Read_Skill+0x5e>
	}
	else //nem jött szabályos adat a G0-tól
	{
		return 1;
 8004648:	2301      	movs	r3, #1
	}
}
 800464a:	4618      	mov	r0, r3
 800464c:	3718      	adds	r7, #24
 800464e:	46bd      	mov	sp, r7
 8004650:	bd80      	pop	{r7, pc}
 8004652:	bf00      	nop
 8004654:	2000004c 	.word	0x2000004c
 8004658:	20000770 	.word	0x20000770
 800465c:	20000c3d 	.word	0x20000c3d

08004660 <Line_Track_Task>:


void Line_Track_Task(UART_HandleTypeDef *huart_stm,UART_HandleTypeDef *huart_debugg, uint32_t tick, uint32_t period)
{
 8004660:	b580      	push	{r7, lr}
 8004662:	b086      	sub	sp, #24
 8004664:	af00      	add	r7, sp, #0
 8004666:	60f8      	str	r0, [r7, #12]
 8004668:	60b9      	str	r1, [r7, #8]
 800466a:	607a      	str	r2, [r7, #4]
 800466c:	603b      	str	r3, [r7, #0]
	static float PHI;
	static float gamma=0;
	static uint32_t ccr_rear_prev=0;
	static uint32_t tick_prev=0;

	if(line_track_task_tick>tick) return;
 800466e:	4b90      	ldr	r3, [pc, #576]	; (80048b0 <Line_Track_Task+0x250>)
 8004670:	681b      	ldr	r3, [r3, #0]
 8004672:	687a      	ldr	r2, [r7, #4]
 8004674:	429a      	cmp	r2, r3
 8004676:	f0c0 83c1 	bcc.w	8004dfc <Line_Track_Task+0x79c>
	line_track_task_tick = tick + period;
 800467a:	687a      	ldr	r2, [r7, #4]
 800467c:	683b      	ldr	r3, [r7, #0]
 800467e:	4413      	add	r3, r2
 8004680:	4a8b      	ldr	r2, [pc, #556]	; (80048b0 <Line_Track_Task+0x250>)
 8004682:	6013      	str	r3, [r2, #0]

	if(mode == SKILL)
 8004684:	4b8b      	ldr	r3, [pc, #556]	; (80048b4 <Line_Track_Task+0x254>)
 8004686:	781b      	ldrb	r3, [r3, #0]
 8004688:	2b52      	cmp	r3, #82	; 0x52
 800468a:	f040 81f9 	bne.w	8004a80 <Line_Track_Task+0x420>
	{
		if(orientation==FORWARD)
 800468e:	4b8a      	ldr	r3, [pc, #552]	; (80048b8 <Line_Track_Task+0x258>)
 8004690:	781b      	ldrb	r3, [r3, #0]
 8004692:	2b00      	cmp	r3, #0
 8004694:	f040 80e0 	bne.w	8004858 <Line_Track_Task+0x1f8>
		{
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_FORWARD))return;
 8004698:	2239      	movs	r2, #57	; 0x39
 800469a:	68b9      	ldr	r1, [r7, #8]
 800469c:	68f8      	ldr	r0, [r7, #12]
 800469e:	f7ff ffa5 	bl	80045ec <G0_Read_Skill>
 80046a2:	4603      	mov	r3, r0
 80046a4:	2b00      	cmp	r3, #0
 80046a6:	f040 83ab 	bne.w	8004e00 <Line_Track_Task+0x7a0>

			uint8_t tmp=Lane_Changer(tick);
 80046aa:	6878      	ldr	r0, [r7, #4]
 80046ac:	f001 f8ee 	bl	800588c <Lane_Changer>
 80046b0:	4603      	mov	r3, r0
 80046b2:	75bb      	strb	r3, [r7, #22]
			if(v_control==NORMAL_VEL)v_ref=1100;
 80046b4:	4b81      	ldr	r3, [pc, #516]	; (80048bc <Line_Track_Task+0x25c>)
 80046b6:	781b      	ldrb	r3, [r3, #0]
 80046b8:	2b02      	cmp	r3, #2
 80046ba:	d103      	bne.n	80046c4 <Line_Track_Task+0x64>
 80046bc:	4b80      	ldr	r3, [pc, #512]	; (80048c0 <Line_Track_Task+0x260>)
 80046be:	4a81      	ldr	r2, [pc, #516]	; (80048c4 <Line_Track_Task+0x264>)
 80046c0:	601a      	str	r2, [r3, #0]
 80046c2:	e00f      	b.n	80046e4 <Line_Track_Task+0x84>
			else if(v_control==SLOW_DOWN)v_ref=600;
 80046c4:	4b7d      	ldr	r3, [pc, #500]	; (80048bc <Line_Track_Task+0x25c>)
 80046c6:	781b      	ldrb	r3, [r3, #0]
 80046c8:	2b01      	cmp	r3, #1
 80046ca:	d103      	bne.n	80046d4 <Line_Track_Task+0x74>
 80046cc:	4b7c      	ldr	r3, [pc, #496]	; (80048c0 <Line_Track_Task+0x260>)
 80046ce:	4a7e      	ldr	r2, [pc, #504]	; (80048c8 <Line_Track_Task+0x268>)
 80046d0:	601a      	str	r2, [r3, #0]
 80046d2:	e007      	b.n	80046e4 <Line_Track_Task+0x84>
			else if(v_control==STOP)v_ref=0;
 80046d4:	4b79      	ldr	r3, [pc, #484]	; (80048bc <Line_Track_Task+0x25c>)
 80046d6:	781b      	ldrb	r3, [r3, #0]
 80046d8:	2b00      	cmp	r3, #0
 80046da:	d103      	bne.n	80046e4 <Line_Track_Task+0x84>
 80046dc:	4b78      	ldr	r3, [pc, #480]	; (80048c0 <Line_Track_Task+0x260>)
 80046de:	f04f 0200 	mov.w	r2, #0
 80046e2:	601a      	str	r2, [r3, #0]
			if(tmp)return;
 80046e4:	7dbb      	ldrb	r3, [r7, #22]
 80046e6:	2b00      	cmp	r3, #0
 80046e8:	f040 838c 	bne.w	8004e04 <Line_Track_Task+0x7a4>

			Detect_Node4(huart_debugg, tick);
 80046ec:	6879      	ldr	r1, [r7, #4]
 80046ee:	68b8      	ldr	r0, [r7, #8]
 80046f0:	f001 f830 	bl	8005754 <Detect_Node4>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 80046f4:	4b75      	ldr	r3, [pc, #468]	; (80048cc <Line_Track_Task+0x26c>)
 80046f6:	785b      	ldrb	r3, [r3, #1]
 80046f8:	2b00      	cmp	r3, #0
 80046fa:	f000 8385 	beq.w	8004e08 <Line_Track_Task+0x7a8>
 80046fe:	4b73      	ldr	r3, [pc, #460]	; (80048cc <Line_Track_Task+0x26c>)
 8004700:	785b      	ldrb	r3, [r3, #1]
 8004702:	2b04      	cmp	r3, #4
 8004704:	f200 8380 	bhi.w	8004e08 <Line_Track_Task+0x7a8>
			gamma = Skill_Mode(huart_debugg, 0.004, 0.004, tick); //kD 4ms -es futáshoz hangolva
 8004708:	6879      	ldr	r1, [r7, #4]
 800470a:	eddf 0a71 	vldr	s1, [pc, #452]	; 80048d0 <Line_Track_Task+0x270>
 800470e:	ed9f 0a70 	vldr	s0, [pc, #448]	; 80048d0 <Line_Track_Task+0x270>
 8004712:	68b8      	ldr	r0, [r7, #8]
 8004714:	f000 fee6 	bl	80054e4 <Skill_Mode>
 8004718:	eef0 7a40 	vmov.f32	s15, s0
 800471c:	4b6d      	ldr	r3, [pc, #436]	; (80048d4 <Line_Track_Task+0x274>)
 800471e:	edc3 7a00 	vstr	s15, [r3]

			//ELSŐSZERVÓ ELŐREMENETBEN
			PHI = atan((L/(L+D_FRONT))*tan(gamma));
 8004722:	4b6c      	ldr	r3, [pc, #432]	; (80048d4 <Line_Track_Task+0x274>)
 8004724:	681b      	ldr	r3, [r3, #0]
 8004726:	4618      	mov	r0, r3
 8004728:	f7fb ff2e 	bl	8000588 <__aeabi_f2d>
 800472c:	4602      	mov	r2, r0
 800472e:	460b      	mov	r3, r1
 8004730:	ec43 2b10 	vmov	d0, r2, r3
 8004734:	f00b fc64 	bl	8010000 <tan>
 8004738:	ec51 0b10 	vmov	r0, r1, d0
 800473c:	a358      	add	r3, pc, #352	; (adr r3, 80048a0 <Line_Track_Task+0x240>)
 800473e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004742:	f7fb ff79 	bl	8000638 <__aeabi_dmul>
 8004746:	4602      	mov	r2, r0
 8004748:	460b      	mov	r3, r1
 800474a:	ec43 2b17 	vmov	d7, r2, r3
 800474e:	eeb0 0a47 	vmov.f32	s0, s14
 8004752:	eef0 0a67 	vmov.f32	s1, s15
 8004756:	f00b faa7 	bl	800fca8 <atan>
 800475a:	ec53 2b10 	vmov	r2, r3, d0
 800475e:	4610      	mov	r0, r2
 8004760:	4619      	mov	r1, r3
 8004762:	f7fc fa41 	bl	8000be8 <__aeabi_d2f>
 8004766:	4603      	mov	r3, r0
 8004768:	4a5b      	ldr	r2, [pc, #364]	; (80048d8 <Line_Track_Task+0x278>)
 800476a:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_FRONT_CCR_MIDDLE);//balra kanyarodás
 800476c:	4b5a      	ldr	r3, [pc, #360]	; (80048d8 <Line_Track_Task+0x278>)
 800476e:	edd3 7a00 	vldr	s15, [r3]
 8004772:	ed9f 7a5a 	vldr	s14, [pc, #360]	; 80048dc <Line_Track_Task+0x27c>
 8004776:	ee67 7a87 	vmul.f32	s15, s15, s14
 800477a:	ed9f 7a59 	vldr	s14, [pc, #356]	; 80048e0 <Line_Track_Task+0x280>
 800477e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004782:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004786:	ee17 3a90 	vmov	r3, s15
 800478a:	b29b      	uxth	r3, r3
 800478c:	461a      	mov	r2, r3
 800478e:	4b55      	ldr	r3, [pc, #340]	; (80048e4 <Line_Track_Task+0x284>)
 8004790:	601a      	str	r2, [r3, #0]
			//ne feszítsük neki a mechanikai határnak a szervót
			FRONT_CCR(ccr);
 8004792:	4b54      	ldr	r3, [pc, #336]	; (80048e4 <Line_Track_Task+0x284>)
 8004794:	681b      	ldr	r3, [r3, #0]
 8004796:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 800479a:	dc07      	bgt.n	80047ac <Line_Track_Task+0x14c>
 800479c:	4b51      	ldr	r3, [pc, #324]	; (80048e4 <Line_Track_Task+0x284>)
 800479e:	681b      	ldr	r3, [r3, #0]
 80047a0:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 80047a4:	bfb8      	it	lt
 80047a6:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 80047aa:	e001      	b.n	80047b0 <Line_Track_Task+0x150>
 80047ac:	f44f 7361 	mov.w	r3, #900	; 0x384
 80047b0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80047b4:	6353      	str	r3, [r2, #52]	; 0x34

			//HÁTSÓSZERVÓ ELŐREMENETBEN
			PHI = atan((L/(L+D_REAR))*tan(gamma))/3;
 80047b6:	4b47      	ldr	r3, [pc, #284]	; (80048d4 <Line_Track_Task+0x274>)
 80047b8:	681b      	ldr	r3, [r3, #0]
 80047ba:	4618      	mov	r0, r3
 80047bc:	f7fb fee4 	bl	8000588 <__aeabi_f2d>
 80047c0:	4602      	mov	r2, r0
 80047c2:	460b      	mov	r3, r1
 80047c4:	ec43 2b10 	vmov	d0, r2, r3
 80047c8:	f00b fc1a 	bl	8010000 <tan>
 80047cc:	ec51 0b10 	vmov	r0, r1, d0
 80047d0:	a335      	add	r3, pc, #212	; (adr r3, 80048a8 <Line_Track_Task+0x248>)
 80047d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80047d6:	f7fb ff2f 	bl	8000638 <__aeabi_dmul>
 80047da:	4602      	mov	r2, r0
 80047dc:	460b      	mov	r3, r1
 80047de:	ec43 2b17 	vmov	d7, r2, r3
 80047e2:	eeb0 0a47 	vmov.f32	s0, s14
 80047e6:	eef0 0a67 	vmov.f32	s1, s15
 80047ea:	f00b fa5d 	bl	800fca8 <atan>
 80047ee:	ec51 0b10 	vmov	r0, r1, d0
 80047f2:	f04f 0200 	mov.w	r2, #0
 80047f6:	4b3c      	ldr	r3, [pc, #240]	; (80048e8 <Line_Track_Task+0x288>)
 80047f8:	f7fc f848 	bl	800088c <__aeabi_ddiv>
 80047fc:	4602      	mov	r2, r0
 80047fe:	460b      	mov	r3, r1
 8004800:	4610      	mov	r0, r2
 8004802:	4619      	mov	r1, r3
 8004804:	f7fc f9f0 	bl	8000be8 <__aeabi_d2f>
 8004808:	4603      	mov	r3, r0
 800480a:	4a33      	ldr	r2, [pc, #204]	; (80048d8 <Line_Track_Task+0x278>)
 800480c:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_REAR_CCR_MIDDLE);//balra kanyarodás
 800480e:	4b32      	ldr	r3, [pc, #200]	; (80048d8 <Line_Track_Task+0x278>)
 8004810:	edd3 7a00 	vldr	s15, [r3]
 8004814:	ed9f 7a31 	vldr	s14, [pc, #196]	; 80048dc <Line_Track_Task+0x27c>
 8004818:	ee67 7a87 	vmul.f32	s15, s15, s14
 800481c:	ed9f 7a33 	vldr	s14, [pc, #204]	; 80048ec <Line_Track_Task+0x28c>
 8004820:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004824:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004828:	ee17 3a90 	vmov	r3, s15
 800482c:	b29b      	uxth	r3, r3
 800482e:	461a      	mov	r2, r3
 8004830:	4b2c      	ldr	r3, [pc, #176]	; (80048e4 <Line_Track_Task+0x284>)
 8004832:	601a      	str	r2, [r3, #0]
			REAR_CCR(ccr);
 8004834:	4b2b      	ldr	r3, [pc, #172]	; (80048e4 <Line_Track_Task+0x284>)
 8004836:	681b      	ldr	r3, [r3, #0]
 8004838:	f5b3 7f52 	cmp.w	r3, #840	; 0x348
 800483c:	dc07      	bgt.n	800484e <Line_Track_Task+0x1ee>
 800483e:	4b29      	ldr	r3, [pc, #164]	; (80048e4 <Line_Track_Task+0x284>)
 8004840:	681b      	ldr	r3, [r3, #0]
 8004842:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 8004846:	bfb8      	it	lt
 8004848:	f44f 7302 	movlt.w	r3, #520	; 0x208
 800484c:	e001      	b.n	8004852 <Line_Track_Task+0x1f2>
 800484e:	f44f 7352 	mov.w	r3, #840	; 0x348
 8004852:	4a27      	ldr	r2, [pc, #156]	; (80048f0 <Line_Track_Task+0x290>)
 8004854:	6413      	str	r3, [r2, #64]	; 0x40
 8004856:	e2cd      	b.n	8004df4 <Line_Track_Task+0x794>
		}
		else if(orientation==REVERSE)//TOLATÁS
 8004858:	4b17      	ldr	r3, [pc, #92]	; (80048b8 <Line_Track_Task+0x258>)
 800485a:	781b      	ldrb	r3, [r3, #0]
 800485c:	2b01      	cmp	r3, #1
 800485e:	f040 82c9 	bne.w	8004df4 <Line_Track_Task+0x794>
		{
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_REVERSE))return;
 8004862:	2291      	movs	r2, #145	; 0x91
 8004864:	68b9      	ldr	r1, [r7, #8]
 8004866:	68f8      	ldr	r0, [r7, #12]
 8004868:	f7ff fec0 	bl	80045ec <G0_Read_Skill>
 800486c:	4603      	mov	r3, r0
 800486e:	2b00      	cmp	r3, #0
 8004870:	f040 82cc 	bne.w	8004e0c <Line_Track_Task+0x7ac>

			uint8_t tmp=Lane_Changer(tick);
 8004874:	6878      	ldr	r0, [r7, #4]
 8004876:	f001 f809 	bl	800588c <Lane_Changer>
 800487a:	4603      	mov	r3, r0
 800487c:	75fb      	strb	r3, [r7, #23]
			if(v_control==NORMAL_VEL)v_ref=-1100;
 800487e:	4b0f      	ldr	r3, [pc, #60]	; (80048bc <Line_Track_Task+0x25c>)
 8004880:	781b      	ldrb	r3, [r3, #0]
 8004882:	2b02      	cmp	r3, #2
 8004884:	d103      	bne.n	800488e <Line_Track_Task+0x22e>
 8004886:	4b0e      	ldr	r3, [pc, #56]	; (80048c0 <Line_Track_Task+0x260>)
 8004888:	4a1a      	ldr	r2, [pc, #104]	; (80048f4 <Line_Track_Task+0x294>)
 800488a:	601a      	str	r2, [r3, #0]
 800488c:	e03e      	b.n	800490c <Line_Track_Task+0x2ac>
			else if(v_control==SLOW_DOWN)v_ref=-600;
 800488e:	4b0b      	ldr	r3, [pc, #44]	; (80048bc <Line_Track_Task+0x25c>)
 8004890:	781b      	ldrb	r3, [r3, #0]
 8004892:	2b01      	cmp	r3, #1
 8004894:	d132      	bne.n	80048fc <Line_Track_Task+0x29c>
 8004896:	4b0a      	ldr	r3, [pc, #40]	; (80048c0 <Line_Track_Task+0x260>)
 8004898:	4a17      	ldr	r2, [pc, #92]	; (80048f8 <Line_Track_Task+0x298>)
 800489a:	601a      	str	r2, [r3, #0]
 800489c:	e036      	b.n	800490c <Line_Track_Task+0x2ac>
 800489e:	bf00      	nop
 80048a0:	c4830201 	.word	0xc4830201
 80048a4:	3fe73a26 	.word	0x3fe73a26
 80048a8:	a3f47e90 	.word	0xa3f47e90
 80048ac:	3fe8fd1f 	.word	0x3fe8fd1f
 80048b0:	20000050 	.word	0x20000050
 80048b4:	2000033e 	.word	0x2000033e
 80048b8:	2000034c 	.word	0x2000034c
 80048bc:	20000351 	.word	0x20000351
 80048c0:	20000340 	.word	0x20000340
 80048c4:	44898000 	.word	0x44898000
 80048c8:	44160000 	.word	0x44160000
 80048cc:	20000770 	.word	0x20000770
 80048d0:	3b83126f 	.word	0x3b83126f
 80048d4:	20000780 	.word	0x20000780
 80048d8:	20000784 	.word	0x20000784
 80048dc:	44af0000 	.word	0x44af0000
 80048e0:	442d0000 	.word	0x442d0000
 80048e4:	20000054 	.word	0x20000054
 80048e8:	40080000 	.word	0x40080000
 80048ec:	442a0000 	.word	0x442a0000
 80048f0:	40010000 	.word	0x40010000
 80048f4:	c4898000 	.word	0xc4898000
 80048f8:	c4160000 	.word	0xc4160000
			else if(v_control==STOP)v_ref=0;
 80048fc:	4bb6      	ldr	r3, [pc, #728]	; (8004bd8 <Line_Track_Task+0x578>)
 80048fe:	781b      	ldrb	r3, [r3, #0]
 8004900:	2b00      	cmp	r3, #0
 8004902:	d103      	bne.n	800490c <Line_Track_Task+0x2ac>
 8004904:	4bb5      	ldr	r3, [pc, #724]	; (8004bdc <Line_Track_Task+0x57c>)
 8004906:	f04f 0200 	mov.w	r2, #0
 800490a:	601a      	str	r2, [r3, #0]
			if(tmp)return;
 800490c:	7dfb      	ldrb	r3, [r7, #23]
 800490e:	2b00      	cmp	r3, #0
 8004910:	f040 827e 	bne.w	8004e10 <Line_Track_Task+0x7b0>

			Detect_Node4(huart_debugg, tick);
 8004914:	6879      	ldr	r1, [r7, #4]
 8004916:	68b8      	ldr	r0, [r7, #8]
 8004918:	f000 ff1c 	bl	8005754 <Detect_Node4>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 800491c:	4bb0      	ldr	r3, [pc, #704]	; (8004be0 <Line_Track_Task+0x580>)
 800491e:	785b      	ldrb	r3, [r3, #1]
 8004920:	2b00      	cmp	r3, #0
 8004922:	f000 8277 	beq.w	8004e14 <Line_Track_Task+0x7b4>
 8004926:	4bae      	ldr	r3, [pc, #696]	; (8004be0 <Line_Track_Task+0x580>)
 8004928:	785b      	ldrb	r3, [r3, #1]
 800492a:	2b04      	cmp	r3, #4
 800492c:	f200 8272 	bhi.w	8004e14 <Line_Track_Task+0x7b4>
			gamma = Skill_Mode(huart_debugg, 0.003, 0.032, tick);
 8004930:	6879      	ldr	r1, [r7, #4]
 8004932:	eddf 0aac 	vldr	s1, [pc, #688]	; 8004be4 <Line_Track_Task+0x584>
 8004936:	ed9f 0aac 	vldr	s0, [pc, #688]	; 8004be8 <Line_Track_Task+0x588>
 800493a:	68b8      	ldr	r0, [r7, #8]
 800493c:	f000 fdd2 	bl	80054e4 <Skill_Mode>
 8004940:	eef0 7a40 	vmov.f32	s15, s0
 8004944:	4ba9      	ldr	r3, [pc, #676]	; (8004bec <Line_Track_Task+0x58c>)
 8004946:	edc3 7a00 	vstr	s15, [r3]

			//HÁTSÓ SZERVÓ HÁTRAMENETBEN
			PHI = atan((L/(L+D_REAR))*tan(gamma));////////////////////kiszámolni kézzel
 800494a:	4ba8      	ldr	r3, [pc, #672]	; (8004bec <Line_Track_Task+0x58c>)
 800494c:	681b      	ldr	r3, [r3, #0]
 800494e:	4618      	mov	r0, r3
 8004950:	f7fb fe1a 	bl	8000588 <__aeabi_f2d>
 8004954:	4602      	mov	r2, r0
 8004956:	460b      	mov	r3, r1
 8004958:	ec43 2b10 	vmov	d0, r2, r3
 800495c:	f00b fb50 	bl	8010000 <tan>
 8004960:	ec51 0b10 	vmov	r0, r1, d0
 8004964:	a398      	add	r3, pc, #608	; (adr r3, 8004bc8 <Line_Track_Task+0x568>)
 8004966:	e9d3 2300 	ldrd	r2, r3, [r3]
 800496a:	f7fb fe65 	bl	8000638 <__aeabi_dmul>
 800496e:	4602      	mov	r2, r0
 8004970:	460b      	mov	r3, r1
 8004972:	ec43 2b17 	vmov	d7, r2, r3
 8004976:	eeb0 0a47 	vmov.f32	s0, s14
 800497a:	eef0 0a67 	vmov.f32	s1, s15
 800497e:	f00b f993 	bl	800fca8 <atan>
 8004982:	ec53 2b10 	vmov	r2, r3, d0
 8004986:	4610      	mov	r0, r2
 8004988:	4619      	mov	r1, r3
 800498a:	f7fc f92d 	bl	8000be8 <__aeabi_d2f>
 800498e:	4603      	mov	r3, r0
 8004990:	4a97      	ldr	r2, [pc, #604]	; (8004bf0 <Line_Track_Task+0x590>)
 8004992:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_REAR_CCR_MIDDLE);
 8004994:	4b96      	ldr	r3, [pc, #600]	; (8004bf0 <Line_Track_Task+0x590>)
 8004996:	edd3 7a00 	vldr	s15, [r3]
 800499a:	ed9f 7a96 	vldr	s14, [pc, #600]	; 8004bf4 <Line_Track_Task+0x594>
 800499e:	ee67 7a87 	vmul.f32	s15, s15, s14
 80049a2:	ed9f 7a95 	vldr	s14, [pc, #596]	; 8004bf8 <Line_Track_Task+0x598>
 80049a6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80049aa:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80049ae:	ee17 3a90 	vmov	r3, s15
 80049b2:	b29b      	uxth	r3, r3
 80049b4:	461a      	mov	r2, r3
 80049b6:	4b91      	ldr	r3, [pc, #580]	; (8004bfc <Line_Track_Task+0x59c>)
 80049b8:	601a      	str	r2, [r3, #0]
			REAR_CCR(ccr);
 80049ba:	4b90      	ldr	r3, [pc, #576]	; (8004bfc <Line_Track_Task+0x59c>)
 80049bc:	681b      	ldr	r3, [r3, #0]
 80049be:	f5b3 7f52 	cmp.w	r3, #840	; 0x348
 80049c2:	dc07      	bgt.n	80049d4 <Line_Track_Task+0x374>
 80049c4:	4b8d      	ldr	r3, [pc, #564]	; (8004bfc <Line_Track_Task+0x59c>)
 80049c6:	681b      	ldr	r3, [r3, #0]
 80049c8:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 80049cc:	bfb8      	it	lt
 80049ce:	f44f 7302 	movlt.w	r3, #520	; 0x208
 80049d2:	e001      	b.n	80049d8 <Line_Track_Task+0x378>
 80049d4:	f44f 7352 	mov.w	r3, #840	; 0x348
 80049d8:	4a89      	ldr	r2, [pc, #548]	; (8004c00 <Line_Track_Task+0x5a0>)
 80049da:	6413      	str	r3, [r2, #64]	; 0x40

			//ELSŐSZERVÓ HÁTRAMENETBEN
			PHI = atan((L/(L+D_FRONT))*tan(gamma))/3;
 80049dc:	4b83      	ldr	r3, [pc, #524]	; (8004bec <Line_Track_Task+0x58c>)
 80049de:	681b      	ldr	r3, [r3, #0]
 80049e0:	4618      	mov	r0, r3
 80049e2:	f7fb fdd1 	bl	8000588 <__aeabi_f2d>
 80049e6:	4602      	mov	r2, r0
 80049e8:	460b      	mov	r3, r1
 80049ea:	ec43 2b10 	vmov	d0, r2, r3
 80049ee:	f00b fb07 	bl	8010000 <tan>
 80049f2:	ec51 0b10 	vmov	r0, r1, d0
 80049f6:	a376      	add	r3, pc, #472	; (adr r3, 8004bd0 <Line_Track_Task+0x570>)
 80049f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80049fc:	f7fb fe1c 	bl	8000638 <__aeabi_dmul>
 8004a00:	4602      	mov	r2, r0
 8004a02:	460b      	mov	r3, r1
 8004a04:	ec43 2b17 	vmov	d7, r2, r3
 8004a08:	eeb0 0a47 	vmov.f32	s0, s14
 8004a0c:	eef0 0a67 	vmov.f32	s1, s15
 8004a10:	f00b f94a 	bl	800fca8 <atan>
 8004a14:	ec51 0b10 	vmov	r0, r1, d0
 8004a18:	f04f 0200 	mov.w	r2, #0
 8004a1c:	4b79      	ldr	r3, [pc, #484]	; (8004c04 <Line_Track_Task+0x5a4>)
 8004a1e:	f7fb ff35 	bl	800088c <__aeabi_ddiv>
 8004a22:	4602      	mov	r2, r0
 8004a24:	460b      	mov	r3, r1
 8004a26:	4610      	mov	r0, r2
 8004a28:	4619      	mov	r1, r3
 8004a2a:	f7fc f8dd 	bl	8000be8 <__aeabi_d2f>
 8004a2e:	4603      	mov	r3, r0
 8004a30:	4a6f      	ldr	r2, [pc, #444]	; (8004bf0 <Line_Track_Task+0x590>)
 8004a32:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_FRONT_CCR_MIDDLE);//balra kanyarodás
 8004a34:	4b6e      	ldr	r3, [pc, #440]	; (8004bf0 <Line_Track_Task+0x590>)
 8004a36:	edd3 7a00 	vldr	s15, [r3]
 8004a3a:	ed9f 7a6e 	vldr	s14, [pc, #440]	; 8004bf4 <Line_Track_Task+0x594>
 8004a3e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004a42:	ed9f 7a71 	vldr	s14, [pc, #452]	; 8004c08 <Line_Track_Task+0x5a8>
 8004a46:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004a4a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004a4e:	ee17 3a90 	vmov	r3, s15
 8004a52:	b29b      	uxth	r3, r3
 8004a54:	461a      	mov	r2, r3
 8004a56:	4b69      	ldr	r3, [pc, #420]	; (8004bfc <Line_Track_Task+0x59c>)
 8004a58:	601a      	str	r2, [r3, #0]
			FRONT_CCR(ccr);
 8004a5a:	4b68      	ldr	r3, [pc, #416]	; (8004bfc <Line_Track_Task+0x59c>)
 8004a5c:	681b      	ldr	r3, [r3, #0]
 8004a5e:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8004a62:	dc07      	bgt.n	8004a74 <Line_Track_Task+0x414>
 8004a64:	4b65      	ldr	r3, [pc, #404]	; (8004bfc <Line_Track_Task+0x59c>)
 8004a66:	681b      	ldr	r3, [r3, #0]
 8004a68:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8004a6c:	bfb8      	it	lt
 8004a6e:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 8004a72:	e001      	b.n	8004a78 <Line_Track_Task+0x418>
 8004a74:	f44f 7361 	mov.w	r3, #900	; 0x384
 8004a78:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004a7c:	6353      	str	r3, [r2, #52]	; 0x34
 8004a7e:	e1b9      	b.n	8004df4 <Line_Track_Task+0x794>
		}
	}
	/*****Gyorsasági pálya üzemmód******/
	else if(mode == FAST)
 8004a80:	4b62      	ldr	r3, [pc, #392]	; (8004c0c <Line_Track_Task+0x5ac>)
 8004a82:	781b      	ldrb	r3, [r3, #0]
 8004a84:	2b3f      	cmp	r3, #63	; 0x3f
 8004a86:	f040 81b5 	bne.w	8004df4 <Line_Track_Task+0x794>
	{
		static uint8_t fast_mode_state=SC_MODE;

		if(G0_Read_Fast(huart_stm, huart_debugg)) return; //ha sikertelen az olvasás a G0 ból akkor nincs értelme az egésznek
 8004a8a:	68b9      	ldr	r1, [r7, #8]
 8004a8c:	68f8      	ldr	r0, [r7, #12]
 8004a8e:	f7ff fd79 	bl	8004584 <G0_Read_Fast>
 8004a92:	4603      	mov	r3, r0
 8004a94:	2b00      	cmp	r3, #0
 8004a96:	f040 81bf 	bne.w	8004e18 <Line_Track_Task+0x7b8>
		if((LINE_CNT<1 || LINE_CNT > 3) && !leaveLineEnabled) return;//ha nincs vonal a kocsi alatt
 8004a9a:	4b51      	ldr	r3, [pc, #324]	; (8004be0 <Line_Track_Task+0x580>)
 8004a9c:	785b      	ldrb	r3, [r3, #1]
 8004a9e:	2b00      	cmp	r3, #0
 8004aa0:	d003      	beq.n	8004aaa <Line_Track_Task+0x44a>
 8004aa2:	4b4f      	ldr	r3, [pc, #316]	; (8004be0 <Line_Track_Task+0x580>)
 8004aa4:	785b      	ldrb	r3, [r3, #1]
 8004aa6:	2b03      	cmp	r3, #3
 8004aa8:	d904      	bls.n	8004ab4 <Line_Track_Task+0x454>
 8004aaa:	4b59      	ldr	r3, [pc, #356]	; (8004c10 <Line_Track_Task+0x5b0>)
 8004aac:	781b      	ldrb	r3, [r3, #0]
 8004aae:	2b00      	cmp	r3, #0
 8004ab0:	f000 81b4 	beq.w	8004e1c <Line_Track_Task+0x7bc>
		gamma = Fast_Mode(huart_debugg, &fast_mode_state, tick);
 8004ab4:	687a      	ldr	r2, [r7, #4]
 8004ab6:	4957      	ldr	r1, [pc, #348]	; (8004c14 <Line_Track_Task+0x5b4>)
 8004ab8:	68b8      	ldr	r0, [r7, #8]
 8004aba:	f000 f9d9 	bl	8004e70 <Fast_Mode>
 8004abe:	eef0 7a40 	vmov.f32	s15, s0
 8004ac2:	4b4a      	ldr	r3, [pc, #296]	; (8004bec <Line_Track_Task+0x58c>)
 8004ac4:	edc3 7a00 	vstr	s15, [r3]
		PHI = atan((L/(L+D_FRONT))*tan(gamma));
 8004ac8:	4b48      	ldr	r3, [pc, #288]	; (8004bec <Line_Track_Task+0x58c>)
 8004aca:	681b      	ldr	r3, [r3, #0]
 8004acc:	4618      	mov	r0, r3
 8004ace:	f7fb fd5b 	bl	8000588 <__aeabi_f2d>
 8004ad2:	4602      	mov	r2, r0
 8004ad4:	460b      	mov	r3, r1
 8004ad6:	ec43 2b10 	vmov	d0, r2, r3
 8004ada:	f00b fa91 	bl	8010000 <tan>
 8004ade:	ec51 0b10 	vmov	r0, r1, d0
 8004ae2:	a33b      	add	r3, pc, #236	; (adr r3, 8004bd0 <Line_Track_Task+0x570>)
 8004ae4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004ae8:	f7fb fda6 	bl	8000638 <__aeabi_dmul>
 8004aec:	4602      	mov	r2, r0
 8004aee:	460b      	mov	r3, r1
 8004af0:	ec43 2b17 	vmov	d7, r2, r3
 8004af4:	eeb0 0a47 	vmov.f32	s0, s14
 8004af8:	eef0 0a67 	vmov.f32	s1, s15
 8004afc:	f00b f8d4 	bl	800fca8 <atan>
 8004b00:	ec53 2b10 	vmov	r2, r3, d0
 8004b04:	4610      	mov	r0, r2
 8004b06:	4619      	mov	r1, r3
 8004b08:	f7fc f86e 	bl	8000be8 <__aeabi_d2f>
 8004b0c:	4603      	mov	r3, r0
 8004b0e:	4a38      	ldr	r2, [pc, #224]	; (8004bf0 <Line_Track_Task+0x590>)
 8004b10:	6013      	str	r3, [r2, #0]

		if(fast_mode_state==FREERUN_MODE)
 8004b12:	4b40      	ldr	r3, [pc, #256]	; (8004c14 <Line_Track_Task+0x5b4>)
 8004b14:	781b      	ldrb	r3, [r3, #0]
 8004b16:	2b01      	cmp	r3, #1
 8004b18:	f040 80ba 	bne.w	8004c90 <Line_Track_Task+0x630>
		{
			if(v>2200)//egyenes
 8004b1c:	4b3e      	ldr	r3, [pc, #248]	; (8004c18 <Line_Track_Task+0x5b8>)
 8004b1e:	edd3 7a00 	vldr	s15, [r3]
 8004b22:	ed9f 7a3e 	vldr	s14, [pc, #248]	; 8004c1c <Line_Track_Task+0x5bc>
 8004b26:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004b2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004b2e:	dd29      	ble.n	8004b84 <Line_Track_Task+0x524>
			{
				ccr = (uint16_t)(-SERVO_M_STRAIGHT * PHI + SERVO_FRONT_CCR_MIDDLE);
 8004b30:	4b2f      	ldr	r3, [pc, #188]	; (8004bf0 <Line_Track_Task+0x590>)
 8004b32:	edd3 7a00 	vldr	s15, [r3]
 8004b36:	ed9f 7a3a 	vldr	s14, [pc, #232]	; 8004c20 <Line_Track_Task+0x5c0>
 8004b3a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004b3e:	ed9f 7a32 	vldr	s14, [pc, #200]	; 8004c08 <Line_Track_Task+0x5a8>
 8004b42:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004b46:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004b4a:	ee17 3a90 	vmov	r3, s15
 8004b4e:	b29b      	uxth	r3, r3
 8004b50:	461a      	mov	r2, r3
 8004b52:	4b2a      	ldr	r3, [pc, #168]	; (8004bfc <Line_Track_Task+0x59c>)
 8004b54:	601a      	str	r2, [r3, #0]
				FRONT_CCR(ccr);
 8004b56:	4b29      	ldr	r3, [pc, #164]	; (8004bfc <Line_Track_Task+0x59c>)
 8004b58:	681b      	ldr	r3, [r3, #0]
 8004b5a:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8004b5e:	dc07      	bgt.n	8004b70 <Line_Track_Task+0x510>
 8004b60:	4b26      	ldr	r3, [pc, #152]	; (8004bfc <Line_Track_Task+0x59c>)
 8004b62:	681b      	ldr	r3, [r3, #0]
 8004b64:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8004b68:	bfb8      	it	lt
 8004b6a:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 8004b6e:	e001      	b.n	8004b74 <Line_Track_Task+0x514>
 8004b70:	f44f 7361 	mov.w	r3, #900	; 0x384
 8004b74:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004b78:	6353      	str	r3, [r2, #52]	; 0x34
				REAR_CCR(SERVO_REAR_CCR_MIDDLE);
 8004b7a:	4b21      	ldr	r3, [pc, #132]	; (8004c00 <Line_Track_Task+0x5a0>)
 8004b7c:	f44f 722a 	mov.w	r2, #680	; 0x2a8
 8004b80:	641a      	str	r2, [r3, #64]	; 0x40
 8004b82:	e137      	b.n	8004df4 <Line_Track_Task+0x794>
			}
			else//kanyar
			{
				//Első szervó
				ccr =(uint16_t)(-SERVO_M_CORNER * PHI + SERVO_FRONT_CCR_MIDDLE);
 8004b84:	4b1a      	ldr	r3, [pc, #104]	; (8004bf0 <Line_Track_Task+0x590>)
 8004b86:	edd3 7a00 	vldr	s15, [r3]
 8004b8a:	ed9f 7a26 	vldr	s14, [pc, #152]	; 8004c24 <Line_Track_Task+0x5c4>
 8004b8e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004b92:	ed9f 7a1d 	vldr	s14, [pc, #116]	; 8004c08 <Line_Track_Task+0x5a8>
 8004b96:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004b9a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004b9e:	ee17 3a90 	vmov	r3, s15
 8004ba2:	b29b      	uxth	r3, r3
 8004ba4:	461a      	mov	r2, r3
 8004ba6:	4b15      	ldr	r3, [pc, #84]	; (8004bfc <Line_Track_Task+0x59c>)
 8004ba8:	601a      	str	r2, [r3, #0]
				FRONT_CCR(ccr);
 8004baa:	4b14      	ldr	r3, [pc, #80]	; (8004bfc <Line_Track_Task+0x59c>)
 8004bac:	681b      	ldr	r3, [r3, #0]
 8004bae:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8004bb2:	dc39      	bgt.n	8004c28 <Line_Track_Task+0x5c8>
 8004bb4:	4b11      	ldr	r3, [pc, #68]	; (8004bfc <Line_Track_Task+0x59c>)
 8004bb6:	681b      	ldr	r3, [r3, #0]
 8004bb8:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8004bbc:	bfb8      	it	lt
 8004bbe:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 8004bc2:	e033      	b.n	8004c2c <Line_Track_Task+0x5cc>
 8004bc4:	f3af 8000 	nop.w
 8004bc8:	a3f47e90 	.word	0xa3f47e90
 8004bcc:	3fe8fd1f 	.word	0x3fe8fd1f
 8004bd0:	c4830201 	.word	0xc4830201
 8004bd4:	3fe73a26 	.word	0x3fe73a26
 8004bd8:	20000351 	.word	0x20000351
 8004bdc:	20000340 	.word	0x20000340
 8004be0:	20000770 	.word	0x20000770
 8004be4:	3d03126f 	.word	0x3d03126f
 8004be8:	3b449ba6 	.word	0x3b449ba6
 8004bec:	20000780 	.word	0x20000780
 8004bf0:	20000784 	.word	0x20000784
 8004bf4:	44af0000 	.word	0x44af0000
 8004bf8:	442a0000 	.word	0x442a0000
 8004bfc:	20000054 	.word	0x20000054
 8004c00:	40010000 	.word	0x40010000
 8004c04:	40080000 	.word	0x40080000
 8004c08:	442d0000 	.word	0x442d0000
 8004c0c:	2000033e 	.word	0x2000033e
 8004c10:	20000344 	.word	0x20000344
 8004c14:	20000788 	.word	0x20000788
 8004c18:	20000758 	.word	0x20000758
 8004c1c:	45098000 	.word	0x45098000
 8004c20:	c4610000 	.word	0xc4610000
 8004c24:	c47a0000 	.word	0xc47a0000
 8004c28:	f44f 7361 	mov.w	r3, #900	; 0x384
 8004c2c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004c30:	6353      	str	r3, [r2, #52]	; 0x34
				//Hátsó szervó
				PHI/= 2;
 8004c32:	4b7c      	ldr	r3, [pc, #496]	; (8004e24 <Line_Track_Task+0x7c4>)
 8004c34:	ed93 7a00 	vldr	s14, [r3]
 8004c38:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 8004c3c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8004c40:	4b78      	ldr	r3, [pc, #480]	; (8004e24 <Line_Track_Task+0x7c4>)
 8004c42:	edc3 7a00 	vstr	s15, [r3]
				ccr = (uint16_t)(-SERVO_M_CORNER * PHI + SERVO_REAR_CCR_MIDDLE);
 8004c46:	4b77      	ldr	r3, [pc, #476]	; (8004e24 <Line_Track_Task+0x7c4>)
 8004c48:	edd3 7a00 	vldr	s15, [r3]
 8004c4c:	ed9f 7a76 	vldr	s14, [pc, #472]	; 8004e28 <Line_Track_Task+0x7c8>
 8004c50:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004c54:	ed9f 7a75 	vldr	s14, [pc, #468]	; 8004e2c <Line_Track_Task+0x7cc>
 8004c58:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004c5c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004c60:	ee17 3a90 	vmov	r3, s15
 8004c64:	b29b      	uxth	r3, r3
 8004c66:	461a      	mov	r2, r3
 8004c68:	4b71      	ldr	r3, [pc, #452]	; (8004e30 <Line_Track_Task+0x7d0>)
 8004c6a:	601a      	str	r2, [r3, #0]
				REAR_CCR(ccr);
 8004c6c:	4b70      	ldr	r3, [pc, #448]	; (8004e30 <Line_Track_Task+0x7d0>)
 8004c6e:	681b      	ldr	r3, [r3, #0]
 8004c70:	f5b3 7f52 	cmp.w	r3, #840	; 0x348
 8004c74:	dc07      	bgt.n	8004c86 <Line_Track_Task+0x626>
 8004c76:	4b6e      	ldr	r3, [pc, #440]	; (8004e30 <Line_Track_Task+0x7d0>)
 8004c78:	681b      	ldr	r3, [r3, #0]
 8004c7a:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 8004c7e:	bfb8      	it	lt
 8004c80:	f44f 7302 	movlt.w	r3, #520	; 0x208
 8004c84:	e001      	b.n	8004c8a <Line_Track_Task+0x62a>
 8004c86:	f44f 7352 	mov.w	r3, #840	; 0x348
 8004c8a:	4a6a      	ldr	r2, [pc, #424]	; (8004e34 <Line_Track_Task+0x7d4>)
 8004c8c:	6413      	str	r3, [r2, #64]	; 0x40
 8004c8e:	e0b1      	b.n	8004df4 <Line_Track_Task+0x794>
			}
		}
		else if(fast_mode_state==SC_MODE)
 8004c90:	4b69      	ldr	r3, [pc, #420]	; (8004e38 <Line_Track_Task+0x7d8>)
 8004c92:	781b      	ldrb	r3, [r3, #0]
 8004c94:	2b00      	cmp	r3, #0
 8004c96:	d153      	bne.n	8004d40 <Line_Track_Task+0x6e0>
		{
			//Első szervó
			ccr = (uint16_t)(-SERVO_M_SC * PHI + SERVO_FRONT_CCR_MIDDLE);
 8004c98:	4b62      	ldr	r3, [pc, #392]	; (8004e24 <Line_Track_Task+0x7c4>)
 8004c9a:	edd3 7a00 	vldr	s15, [r3]
 8004c9e:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8004e3c <Line_Track_Task+0x7dc>
 8004ca2:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004ca6:	ed9f 7a66 	vldr	s14, [pc, #408]	; 8004e40 <Line_Track_Task+0x7e0>
 8004caa:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004cae:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004cb2:	ee17 3a90 	vmov	r3, s15
 8004cb6:	b29b      	uxth	r3, r3
 8004cb8:	461a      	mov	r2, r3
 8004cba:	4b5d      	ldr	r3, [pc, #372]	; (8004e30 <Line_Track_Task+0x7d0>)
 8004cbc:	601a      	str	r2, [r3, #0]
			FRONT_CCR(ccr);
 8004cbe:	4b5c      	ldr	r3, [pc, #368]	; (8004e30 <Line_Track_Task+0x7d0>)
 8004cc0:	681b      	ldr	r3, [r3, #0]
 8004cc2:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8004cc6:	dc07      	bgt.n	8004cd8 <Line_Track_Task+0x678>
 8004cc8:	4b59      	ldr	r3, [pc, #356]	; (8004e30 <Line_Track_Task+0x7d0>)
 8004cca:	681b      	ldr	r3, [r3, #0]
 8004ccc:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8004cd0:	bfb8      	it	lt
 8004cd2:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 8004cd6:	e001      	b.n	8004cdc <Line_Track_Task+0x67c>
 8004cd8:	f44f 7361 	mov.w	r3, #900	; 0x384
 8004cdc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004ce0:	6353      	str	r3, [r2, #52]	; 0x34

			//Hátsó szervó
			PHI/= 3;
 8004ce2:	4b50      	ldr	r3, [pc, #320]	; (8004e24 <Line_Track_Task+0x7c4>)
 8004ce4:	ed93 7a00 	vldr	s14, [r3]
 8004ce8:	eef0 6a08 	vmov.f32	s13, #8	; 0x40400000  3.0
 8004cec:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8004cf0:	4b4c      	ldr	r3, [pc, #304]	; (8004e24 <Line_Track_Task+0x7c4>)
 8004cf2:	edc3 7a00 	vstr	s15, [r3]
			ccr = (uint16_t)(-SERVO_M_SC * PHI + SERVO_REAR_CCR_MIDDLE);
 8004cf6:	4b4b      	ldr	r3, [pc, #300]	; (8004e24 <Line_Track_Task+0x7c4>)
 8004cf8:	edd3 7a00 	vldr	s15, [r3]
 8004cfc:	ed9f 7a4f 	vldr	s14, [pc, #316]	; 8004e3c <Line_Track_Task+0x7dc>
 8004d00:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004d04:	ed9f 7a49 	vldr	s14, [pc, #292]	; 8004e2c <Line_Track_Task+0x7cc>
 8004d08:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004d0c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004d10:	ee17 3a90 	vmov	r3, s15
 8004d14:	b29b      	uxth	r3, r3
 8004d16:	461a      	mov	r2, r3
 8004d18:	4b45      	ldr	r3, [pc, #276]	; (8004e30 <Line_Track_Task+0x7d0>)
 8004d1a:	601a      	str	r2, [r3, #0]
			REAR_CCR(ccr);
 8004d1c:	4b44      	ldr	r3, [pc, #272]	; (8004e30 <Line_Track_Task+0x7d0>)
 8004d1e:	681b      	ldr	r3, [r3, #0]
 8004d20:	f5b3 7f52 	cmp.w	r3, #840	; 0x348
 8004d24:	dc07      	bgt.n	8004d36 <Line_Track_Task+0x6d6>
 8004d26:	4b42      	ldr	r3, [pc, #264]	; (8004e30 <Line_Track_Task+0x7d0>)
 8004d28:	681b      	ldr	r3, [r3, #0]
 8004d2a:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 8004d2e:	bfb8      	it	lt
 8004d30:	f44f 7302 	movlt.w	r3, #520	; 0x208
 8004d34:	e001      	b.n	8004d3a <Line_Track_Task+0x6da>
 8004d36:	f44f 7352 	mov.w	r3, #840	; 0x348
 8004d3a:	4a3e      	ldr	r2, [pc, #248]	; (8004e34 <Line_Track_Task+0x7d4>)
 8004d3c:	6413      	str	r3, [r2, #64]	; 0x40
 8004d3e:	e059      	b.n	8004df4 <Line_Track_Task+0x794>
		}
		else if(fast_mode_state==OVERTAKE_MODE)
 8004d40:	4b3d      	ldr	r3, [pc, #244]	; (8004e38 <Line_Track_Task+0x7d8>)
 8004d42:	781b      	ldrb	r3, [r3, #0]
 8004d44:	2b02      	cmp	r3, #2
 8004d46:	d155      	bne.n	8004df4 <Line_Track_Task+0x794>
		{
			static uint8_t overtake_state=0;
			static uint32_t t_stamp_overtake=0;
			if(overtake_state==0)
 8004d48:	4b3e      	ldr	r3, [pc, #248]	; (8004e44 <Line_Track_Task+0x7e4>)
 8004d4a:	781b      	ldrb	r3, [r3, #0]
 8004d4c:	2b00      	cmp	r3, #0
 8004d4e:	d115      	bne.n	8004d7c <Line_Track_Task+0x71c>
			{
				v_ref=1600;
 8004d50:	4b3d      	ldr	r3, [pc, #244]	; (8004e48 <Line_Track_Task+0x7e8>)
 8004d52:	4a3e      	ldr	r2, [pc, #248]	; (8004e4c <Line_Track_Task+0x7ec>)
 8004d54:	601a      	str	r2, [r3, #0]
				t_stamp_overtake=tick;
 8004d56:	4a3e      	ldr	r2, [pc, #248]	; (8004e50 <Line_Track_Task+0x7f0>)
 8004d58:	687b      	ldr	r3, [r7, #4]
 8004d5a:	6013      	str	r3, [r2, #0]
				leaveLineEnabled=1;
 8004d5c:	4b3d      	ldr	r3, [pc, #244]	; (8004e54 <Line_Track_Task+0x7f4>)
 8004d5e:	2201      	movs	r2, #1
 8004d60:	701a      	strb	r2, [r3, #0]
				FRONT_CCR(SERVO_FRONT_CCR_MIDDLE+160);
 8004d62:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004d66:	f44f 7255 	mov.w	r2, #852	; 0x354
 8004d6a:	635a      	str	r2, [r3, #52]	; 0x34
				REAR_CCR(SERVO_REAR_CCR_MIDDLE-150);
 8004d6c:	4b31      	ldr	r3, [pc, #196]	; (8004e34 <Line_Track_Task+0x7d4>)
 8004d6e:	f240 2212 	movw	r2, #530	; 0x212
 8004d72:	641a      	str	r2, [r3, #64]	; 0x40
				overtake_state=1;
 8004d74:	4b33      	ldr	r3, [pc, #204]	; (8004e44 <Line_Track_Task+0x7e4>)
 8004d76:	2201      	movs	r2, #1
 8004d78:	701a      	strb	r2, [r3, #0]
 8004d7a:	e03b      	b.n	8004df4 <Line_Track_Task+0x794>
			}
			else if(overtake_state==1 && (tick-t_stamp_overtake)>2200)
 8004d7c:	4b31      	ldr	r3, [pc, #196]	; (8004e44 <Line_Track_Task+0x7e4>)
 8004d7e:	781b      	ldrb	r3, [r3, #0]
 8004d80:	2b01      	cmp	r3, #1
 8004d82:	d11d      	bne.n	8004dc0 <Line_Track_Task+0x760>
 8004d84:	4b32      	ldr	r3, [pc, #200]	; (8004e50 <Line_Track_Task+0x7f0>)
 8004d86:	681b      	ldr	r3, [r3, #0]
 8004d88:	687a      	ldr	r2, [r7, #4]
 8004d8a:	1ad3      	subs	r3, r2, r3
 8004d8c:	f640 0298 	movw	r2, #2200	; 0x898
 8004d90:	4293      	cmp	r3, r2
 8004d92:	d915      	bls.n	8004dc0 <Line_Track_Task+0x760>
			{
				v_ref=3000;
 8004d94:	4b2c      	ldr	r3, [pc, #176]	; (8004e48 <Line_Track_Task+0x7e8>)
 8004d96:	4a30      	ldr	r2, [pc, #192]	; (8004e58 <Line_Track_Task+0x7f8>)
 8004d98:	601a      	str	r2, [r3, #0]
				LED_Y(1);
 8004d9a:	2200      	movs	r2, #0
 8004d9c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004da0:	482e      	ldr	r0, [pc, #184]	; (8004e5c <Line_Track_Task+0x7fc>)
 8004da2:	f004 fa4b 	bl	800923c <HAL_GPIO_WritePin>
				//FRONT_CCR(SERVO_FRONT_CCR_MIDDLE-50);
				TIM2->CCR1=SERVO_FRONT_CCR_MIDDLE-70;
 8004da6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004daa:	f240 226e 	movw	r2, #622	; 0x26e
 8004dae:	635a      	str	r2, [r3, #52]	; 0x34
				TIM1->CCR4=SERVO_REAR_CCR_MIDDLE+50;
 8004db0:	4b20      	ldr	r3, [pc, #128]	; (8004e34 <Line_Track_Task+0x7d4>)
 8004db2:	f240 22da 	movw	r2, #730	; 0x2da
 8004db6:	641a      	str	r2, [r3, #64]	; 0x40
				//REAR_CCR(SERVO_REAR_CCR_MIDDLE+50);
				overtake_state=2;
 8004db8:	4b22      	ldr	r3, [pc, #136]	; (8004e44 <Line_Track_Task+0x7e4>)
 8004dba:	2202      	movs	r2, #2
 8004dbc:	701a      	strb	r2, [r3, #0]
 8004dbe:	e019      	b.n	8004df4 <Line_Track_Task+0x794>
			}
			else if(overtake_state==2 && LINE_CNT>0)
 8004dc0:	4b20      	ldr	r3, [pc, #128]	; (8004e44 <Line_Track_Task+0x7e4>)
 8004dc2:	781b      	ldrb	r3, [r3, #0]
 8004dc4:	2b02      	cmp	r3, #2
 8004dc6:	d115      	bne.n	8004df4 <Line_Track_Task+0x794>
 8004dc8:	4b25      	ldr	r3, [pc, #148]	; (8004e60 <Line_Track_Task+0x800>)
 8004dca:	785b      	ldrb	r3, [r3, #1]
 8004dcc:	2b00      	cmp	r3, #0
 8004dce:	d011      	beq.n	8004df4 <Line_Track_Task+0x794>
			{
				v_ref=1200;
 8004dd0:	4b1d      	ldr	r3, [pc, #116]	; (8004e48 <Line_Track_Task+0x7e8>)
 8004dd2:	4a24      	ldr	r2, [pc, #144]	; (8004e64 <Line_Track_Task+0x804>)
 8004dd4:	601a      	str	r2, [r3, #0]
				overtake_state=0;
 8004dd6:	4b1b      	ldr	r3, [pc, #108]	; (8004e44 <Line_Track_Task+0x7e4>)
 8004dd8:	2200      	movs	r2, #0
 8004dda:	701a      	strb	r2, [r3, #0]
				fast_mode_state=FREERUN_MODE;
 8004ddc:	4b16      	ldr	r3, [pc, #88]	; (8004e38 <Line_Track_Task+0x7d8>)
 8004dde:	2201      	movs	r2, #1
 8004de0:	701a      	strb	r2, [r3, #0]
				leaveLineEnabled=0;
 8004de2:	4b1c      	ldr	r3, [pc, #112]	; (8004e54 <Line_Track_Task+0x7f4>)
 8004de4:	2200      	movs	r2, #0
 8004de6:	701a      	strb	r2, [r3, #0]
				LED_Y(0);
 8004de8:	2201      	movs	r2, #1
 8004dea:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004dee:	481b      	ldr	r0, [pc, #108]	; (8004e5c <Line_Track_Task+0x7fc>)
 8004df0:	f004 fa24 	bl	800923c <HAL_GPIO_WritePin>
			}
		}
	}

	tick_prev=tick;
 8004df4:	4a1c      	ldr	r2, [pc, #112]	; (8004e68 <Line_Track_Task+0x808>)
 8004df6:	687b      	ldr	r3, [r7, #4]
 8004df8:	6013      	str	r3, [r2, #0]
 8004dfa:	e010      	b.n	8004e1e <Line_Track_Task+0x7be>
	if(line_track_task_tick>tick) return;
 8004dfc:	bf00      	nop
 8004dfe:	e00e      	b.n	8004e1e <Line_Track_Task+0x7be>
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_FORWARD))return;
 8004e00:	bf00      	nop
 8004e02:	e00c      	b.n	8004e1e <Line_Track_Task+0x7be>
			if(tmp)return;
 8004e04:	bf00      	nop
 8004e06:	e00a      	b.n	8004e1e <Line_Track_Task+0x7be>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 8004e08:	bf00      	nop
 8004e0a:	e008      	b.n	8004e1e <Line_Track_Task+0x7be>
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_REVERSE))return;
 8004e0c:	bf00      	nop
 8004e0e:	e006      	b.n	8004e1e <Line_Track_Task+0x7be>
			if(tmp)return;
 8004e10:	bf00      	nop
 8004e12:	e004      	b.n	8004e1e <Line_Track_Task+0x7be>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 8004e14:	bf00      	nop
 8004e16:	e002      	b.n	8004e1e <Line_Track_Task+0x7be>
		if(G0_Read_Fast(huart_stm, huart_debugg)) return; //ha sikertelen az olvasás a G0 ból akkor nincs értelme az egésznek
 8004e18:	bf00      	nop
 8004e1a:	e000      	b.n	8004e1e <Line_Track_Task+0x7be>
		if((LINE_CNT<1 || LINE_CNT > 3) && !leaveLineEnabled) return;//ha nincs vonal a kocsi alatt
 8004e1c:	bf00      	nop
}
 8004e1e:	3718      	adds	r7, #24
 8004e20:	46bd      	mov	sp, r7
 8004e22:	bd80      	pop	{r7, pc}
 8004e24:	20000784 	.word	0x20000784
 8004e28:	c47a0000 	.word	0xc47a0000
 8004e2c:	442a0000 	.word	0x442a0000
 8004e30:	20000054 	.word	0x20000054
 8004e34:	40010000 	.word	0x40010000
 8004e38:	20000788 	.word	0x20000788
 8004e3c:	c4a28000 	.word	0xc4a28000
 8004e40:	442d0000 	.word	0x442d0000
 8004e44:	20000789 	.word	0x20000789
 8004e48:	20000340 	.word	0x20000340
 8004e4c:	44c80000 	.word	0x44c80000
 8004e50:	2000078c 	.word	0x2000078c
 8004e54:	20000344 	.word	0x20000344
 8004e58:	453b8000 	.word	0x453b8000
 8004e5c:	40020400 	.word	0x40020400
 8004e60:	20000770 	.word	0x20000770
 8004e64:	44960000 	.word	0x44960000
 8004e68:	20000790 	.word	0x20000790
 8004e6c:	00000000 	.word	0x00000000

08004e70 <Fast_Mode>:

float Fast_Mode(UART_HandleTypeDef *huart_debugg,uint8_t* state_pointer, uint32_t t)
{
 8004e70:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8004e74:	b088      	sub	sp, #32
 8004e76:	af00      	add	r7, sp, #0
 8004e78:	60f8      	str	r0, [r7, #12]
 8004e7a:	60b9      	str	r1, [r7, #8]
 8004e7c:	607a      	str	r2, [r7, #4]
	static float x_elso_prev=0;
	static float x_hatso;
	static float delta;
	static float gamma;

	uint8_t state = *state_pointer;
 8004e7e:	68bb      	ldr	r3, [r7, #8]
 8004e80:	781b      	ldrb	r3, [r3, #0]
 8004e82:	77fb      	strb	r3, [r7, #31]

	if(state==OVERTAKE_MODE)return 0;
 8004e84:	7ffb      	ldrb	r3, [r7, #31]
 8004e86:	2b02      	cmp	r3, #2
 8004e88:	d102      	bne.n	8004e90 <Fast_Mode+0x20>
 8004e8a:	f04f 0300 	mov.w	r3, #0
 8004e8e:	e2df      	b.n	8005450 <Fast_Mode+0x5e0>
/**/
	//BOOST detect
	if(LINE_CNT != lineCnt_prev && (LINE_CNT==1 || LINE_CNT==3)) //ha változik az alattunk lévő vonalak száma 1 és 3 közt
 8004e90:	4bad      	ldr	r3, [pc, #692]	; (8005148 <Fast_Mode+0x2d8>)
 8004e92:	785a      	ldrb	r2, [r3, #1]
 8004e94:	4bad      	ldr	r3, [pc, #692]	; (800514c <Fast_Mode+0x2dc>)
 8004e96:	781b      	ldrb	r3, [r3, #0]
 8004e98:	429a      	cmp	r2, r3
 8004e9a:	f000 80cf 	beq.w	800503c <Fast_Mode+0x1cc>
 8004e9e:	4baa      	ldr	r3, [pc, #680]	; (8005148 <Fast_Mode+0x2d8>)
 8004ea0:	785b      	ldrb	r3, [r3, #1]
 8004ea2:	2b01      	cmp	r3, #1
 8004ea4:	d004      	beq.n	8004eb0 <Fast_Mode+0x40>
 8004ea6:	4ba8      	ldr	r3, [pc, #672]	; (8005148 <Fast_Mode+0x2d8>)
 8004ea8:	785b      	ldrb	r3, [r3, #1]
 8004eaa:	2b03      	cmp	r3, #3
 8004eac:	f040 80c6 	bne.w	800503c <Fast_Mode+0x1cc>
	{
		ds[index]=fabs(v)*(t-t_stamp_boost)/1000;
 8004eb0:	4ba7      	ldr	r3, [pc, #668]	; (8005150 <Fast_Mode+0x2e0>)
 8004eb2:	edd3 7a00 	vldr	s15, [r3]
 8004eb6:	eef0 7ae7 	vabs.f32	s15, s15
 8004eba:	ee17 0a90 	vmov	r0, s15
 8004ebe:	f7fb fb63 	bl	8000588 <__aeabi_f2d>
 8004ec2:	4604      	mov	r4, r0
 8004ec4:	460d      	mov	r5, r1
 8004ec6:	4ba3      	ldr	r3, [pc, #652]	; (8005154 <Fast_Mode+0x2e4>)
 8004ec8:	681b      	ldr	r3, [r3, #0]
 8004eca:	687a      	ldr	r2, [r7, #4]
 8004ecc:	1ad3      	subs	r3, r2, r3
 8004ece:	4618      	mov	r0, r3
 8004ed0:	f7fb fb38 	bl	8000544 <__aeabi_ui2d>
 8004ed4:	4602      	mov	r2, r0
 8004ed6:	460b      	mov	r3, r1
 8004ed8:	4620      	mov	r0, r4
 8004eda:	4629      	mov	r1, r5
 8004edc:	f7fb fbac 	bl	8000638 <__aeabi_dmul>
 8004ee0:	4602      	mov	r2, r0
 8004ee2:	460b      	mov	r3, r1
 8004ee4:	4610      	mov	r0, r2
 8004ee6:	4619      	mov	r1, r3
 8004ee8:	f04f 0200 	mov.w	r2, #0
 8004eec:	4b9a      	ldr	r3, [pc, #616]	; (8005158 <Fast_Mode+0x2e8>)
 8004eee:	f7fb fccd 	bl	800088c <__aeabi_ddiv>
 8004ef2:	4602      	mov	r2, r0
 8004ef4:	460b      	mov	r3, r1
 8004ef6:	4999      	ldr	r1, [pc, #612]	; (800515c <Fast_Mode+0x2ec>)
 8004ef8:	7809      	ldrb	r1, [r1, #0]
 8004efa:	460c      	mov	r4, r1
 8004efc:	4610      	mov	r0, r2
 8004efe:	4619      	mov	r1, r3
 8004f00:	f7fb fe72 	bl	8000be8 <__aeabi_d2f>
 8004f04:	4602      	mov	r2, r0
 8004f06:	4996      	ldr	r1, [pc, #600]	; (8005160 <Fast_Mode+0x2f0>)
 8004f08:	00a3      	lsls	r3, r4, #2
 8004f0a:	440b      	add	r3, r1
 8004f0c:	601a      	str	r2, [r3, #0]
		float s_boost = ds[0]+ds[1]+ds[2]+ds[3]+ds[4]+ds[5]+ds[6]+ds[7];
 8004f0e:	4b94      	ldr	r3, [pc, #592]	; (8005160 <Fast_Mode+0x2f0>)
 8004f10:	ed93 7a00 	vldr	s14, [r3]
 8004f14:	4b92      	ldr	r3, [pc, #584]	; (8005160 <Fast_Mode+0x2f0>)
 8004f16:	edd3 7a01 	vldr	s15, [r3, #4]
 8004f1a:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004f1e:	4b90      	ldr	r3, [pc, #576]	; (8005160 <Fast_Mode+0x2f0>)
 8004f20:	edd3 7a02 	vldr	s15, [r3, #8]
 8004f24:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004f28:	4b8d      	ldr	r3, [pc, #564]	; (8005160 <Fast_Mode+0x2f0>)
 8004f2a:	edd3 7a03 	vldr	s15, [r3, #12]
 8004f2e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004f32:	4b8b      	ldr	r3, [pc, #556]	; (8005160 <Fast_Mode+0x2f0>)
 8004f34:	edd3 7a04 	vldr	s15, [r3, #16]
 8004f38:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004f3c:	4b88      	ldr	r3, [pc, #544]	; (8005160 <Fast_Mode+0x2f0>)
 8004f3e:	edd3 7a05 	vldr	s15, [r3, #20]
 8004f42:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004f46:	4b86      	ldr	r3, [pc, #536]	; (8005160 <Fast_Mode+0x2f0>)
 8004f48:	edd3 7a06 	vldr	s15, [r3, #24]
 8004f4c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004f50:	4b83      	ldr	r3, [pc, #524]	; (8005160 <Fast_Mode+0x2f0>)
 8004f52:	edd3 7a07 	vldr	s15, [r3, #28]
 8004f56:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004f5a:	edc7 7a06 	vstr	s15, [r7, #24]
		if(s_boost>250.0 && s_boost<800.0 && boostOrBrake==1) // ha 25 és 80 cm közt bekövetkezik 8 vonalszámváltás
 8004f5e:	edd7 7a06 	vldr	s15, [r7, #24]
 8004f62:	ed9f 7a80 	vldr	s14, [pc, #512]	; 8005164 <Fast_Mode+0x2f4>
 8004f66:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004f6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004f6e:	dd55      	ble.n	800501c <Fast_Mode+0x1ac>
 8004f70:	edd7 7a06 	vldr	s15, [r7, #24]
 8004f74:	ed9f 7a7c 	vldr	s14, [pc, #496]	; 8005168 <Fast_Mode+0x2f8>
 8004f78:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004f7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004f80:	d54c      	bpl.n	800501c <Fast_Mode+0x1ac>
 8004f82:	4b7a      	ldr	r3, [pc, #488]	; (800516c <Fast_Mode+0x2fc>)
 8004f84:	781b      	ldrb	r3, [r3, #0]
 8004f86:	2b01      	cmp	r3, #1
 8004f88:	d148      	bne.n	800501c <Fast_Mode+0x1ac>
		{
			LED_B(1);
 8004f8a:	2200      	movs	r2, #0
 8004f8c:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8004f90:	4877      	ldr	r0, [pc, #476]	; (8005170 <Fast_Mode+0x300>)
 8004f92:	f004 f953 	bl	800923c <HAL_GPIO_WritePin>
			boostOrBrake=2;
 8004f96:	4b75      	ldr	r3, [pc, #468]	; (800516c <Fast_Mode+0x2fc>)
 8004f98:	2202      	movs	r2, #2
 8004f9a:	701a      	strb	r2, [r3, #0]
			if(straightSpeed[boostCnt]==SC_MODE)state=SC_MODE;
 8004f9c:	4b75      	ldr	r3, [pc, #468]	; (8005174 <Fast_Mode+0x304>)
 8004f9e:	881b      	ldrh	r3, [r3, #0]
 8004fa0:	461a      	mov	r2, r3
 8004fa2:	4b75      	ldr	r3, [pc, #468]	; (8005178 <Fast_Mode+0x308>)
 8004fa4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004fa8:	2b00      	cmp	r3, #0
 8004faa:	d102      	bne.n	8004fb2 <Fast_Mode+0x142>
 8004fac:	2300      	movs	r3, #0
 8004fae:	77fb      	strb	r3, [r7, #31]
 8004fb0:	e02e      	b.n	8005010 <Fast_Mode+0x1a0>
			else if(straightSpeed[boostCnt]==OVERTAKE_MODE && !ot_delay)
 8004fb2:	4b70      	ldr	r3, [pc, #448]	; (8005174 <Fast_Mode+0x304>)
 8004fb4:	881b      	ldrh	r3, [r3, #0]
 8004fb6:	461a      	mov	r2, r3
 8004fb8:	4b6f      	ldr	r3, [pc, #444]	; (8005178 <Fast_Mode+0x308>)
 8004fba:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004fbe:	2b02      	cmp	r3, #2
 8004fc0:	d10a      	bne.n	8004fd8 <Fast_Mode+0x168>
 8004fc2:	4b6e      	ldr	r3, [pc, #440]	; (800517c <Fast_Mode+0x30c>)
 8004fc4:	781b      	ldrb	r3, [r3, #0]
 8004fc6:	2b00      	cmp	r3, #0
 8004fc8:	d106      	bne.n	8004fd8 <Fast_Mode+0x168>
			{
				ot_delay=1;
 8004fca:	4b6c      	ldr	r3, [pc, #432]	; (800517c <Fast_Mode+0x30c>)
 8004fcc:	2201      	movs	r2, #1
 8004fce:	701a      	strb	r2, [r3, #0]
				t_overtake=t;
 8004fd0:	4a6b      	ldr	r2, [pc, #428]	; (8005180 <Fast_Mode+0x310>)
 8004fd2:	687b      	ldr	r3, [r7, #4]
 8004fd4:	6013      	str	r3, [r2, #0]
 8004fd6:	e01b      	b.n	8005010 <Fast_Mode+0x1a0>

			}
			else if(straightSpeed[boostCnt]==-1) motorEnLineOk=0;
 8004fd8:	4b66      	ldr	r3, [pc, #408]	; (8005174 <Fast_Mode+0x304>)
 8004fda:	881b      	ldrh	r3, [r3, #0]
 8004fdc:	461a      	mov	r2, r3
 8004fde:	4b66      	ldr	r3, [pc, #408]	; (8005178 <Fast_Mode+0x308>)
 8004fe0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004fe4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004fe8:	d103      	bne.n	8004ff2 <Fast_Mode+0x182>
 8004fea:	4b66      	ldr	r3, [pc, #408]	; (8005184 <Fast_Mode+0x314>)
 8004fec:	2200      	movs	r2, #0
 8004fee:	701a      	strb	r2, [r3, #0]
 8004ff0:	e00e      	b.n	8005010 <Fast_Mode+0x1a0>
			else
			{
				state=FREERUN_MODE;
 8004ff2:	2301      	movs	r3, #1
 8004ff4:	77fb      	strb	r3, [r7, #31]
				v_ref=straightSpeed[boostCnt];
 8004ff6:	4b5f      	ldr	r3, [pc, #380]	; (8005174 <Fast_Mode+0x304>)
 8004ff8:	881b      	ldrh	r3, [r3, #0]
 8004ffa:	461a      	mov	r2, r3
 8004ffc:	4b5e      	ldr	r3, [pc, #376]	; (8005178 <Fast_Mode+0x308>)
 8004ffe:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005002:	ee07 3a90 	vmov	s15, r3
 8005006:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800500a:	4b5f      	ldr	r3, [pc, #380]	; (8005188 <Fast_Mode+0x318>)
 800500c:	edc3 7a00 	vstr	s15, [r3]
			}
			boostCnt++;
 8005010:	4b58      	ldr	r3, [pc, #352]	; (8005174 <Fast_Mode+0x304>)
 8005012:	881b      	ldrh	r3, [r3, #0]
 8005014:	3301      	adds	r3, #1
 8005016:	b29a      	uxth	r2, r3
 8005018:	4b56      	ldr	r3, [pc, #344]	; (8005174 <Fast_Mode+0x304>)
 800501a:	801a      	strh	r2, [r3, #0]
		}
		index++;
 800501c:	4b4f      	ldr	r3, [pc, #316]	; (800515c <Fast_Mode+0x2ec>)
 800501e:	781b      	ldrb	r3, [r3, #0]
 8005020:	3301      	adds	r3, #1
 8005022:	b2da      	uxtb	r2, r3
 8005024:	4b4d      	ldr	r3, [pc, #308]	; (800515c <Fast_Mode+0x2ec>)
 8005026:	701a      	strb	r2, [r3, #0]
		if(index>7) index=0;
 8005028:	4b4c      	ldr	r3, [pc, #304]	; (800515c <Fast_Mode+0x2ec>)
 800502a:	781b      	ldrb	r3, [r3, #0]
 800502c:	2b07      	cmp	r3, #7
 800502e:	d902      	bls.n	8005036 <Fast_Mode+0x1c6>
 8005030:	4b4a      	ldr	r3, [pc, #296]	; (800515c <Fast_Mode+0x2ec>)
 8005032:	2200      	movs	r2, #0
 8005034:	701a      	strb	r2, [r3, #0]
		t_stamp_boost = t;
 8005036:	4a47      	ldr	r2, [pc, #284]	; (8005154 <Fast_Mode+0x2e4>)
 8005038:	687b      	ldr	r3, [r7, #4]
 800503a:	6013      	str	r3, [r2, #0]
	}
	lineCnt_prev = LINE_CNT; //az előző értéket a jelenlegihez hangoljuk
 800503c:	4b42      	ldr	r3, [pc, #264]	; (8005148 <Fast_Mode+0x2d8>)
 800503e:	785a      	ldrb	r2, [r3, #1]
 8005040:	4b42      	ldr	r3, [pc, #264]	; (800514c <Fast_Mode+0x2dc>)
 8005042:	701a      	strb	r2, [r3, #0]
	if(ot_delay && (t-t_overtake)>1000)
 8005044:	4b4d      	ldr	r3, [pc, #308]	; (800517c <Fast_Mode+0x30c>)
 8005046:	781b      	ldrb	r3, [r3, #0]
 8005048:	2b00      	cmp	r3, #0
 800504a:	d00f      	beq.n	800506c <Fast_Mode+0x1fc>
 800504c:	4b4c      	ldr	r3, [pc, #304]	; (8005180 <Fast_Mode+0x310>)
 800504e:	681b      	ldr	r3, [r3, #0]
 8005050:	687a      	ldr	r2, [r7, #4]
 8005052:	1ad3      	subs	r3, r2, r3
 8005054:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005058:	d908      	bls.n	800506c <Fast_Mode+0x1fc>
	{
		*state_pointer=OVERTAKE_MODE;
 800505a:	68bb      	ldr	r3, [r7, #8]
 800505c:	2202      	movs	r2, #2
 800505e:	701a      	strb	r2, [r3, #0]
		ot_delay=0;
 8005060:	4b46      	ldr	r3, [pc, #280]	; (800517c <Fast_Mode+0x30c>)
 8005062:	2200      	movs	r2, #0
 8005064:	701a      	strb	r2, [r3, #0]
		return 0;
 8005066:	f04f 0300 	mov.w	r3, #0
 800506a:	e1f1      	b.n	8005450 <Fast_Mode+0x5e0>
	}

	//BRAKING detect -> erre csak gyors üzemmódban van szükség
	if(LINE_CNT > 1) //ha 3 vonalat érzékelünk
 800506c:	4b36      	ldr	r3, [pc, #216]	; (8005148 <Fast_Mode+0x2d8>)
 800506e:	785b      	ldrb	r3, [r3, #1]
 8005070:	2b01      	cmp	r3, #1
 8005072:	f240 8093 	bls.w	800519c <Fast_Mode+0x32c>
	{
		s_brake += fabs(v)*(t-t_prev)/1000;
 8005076:	4b45      	ldr	r3, [pc, #276]	; (800518c <Fast_Mode+0x31c>)
 8005078:	681b      	ldr	r3, [r3, #0]
 800507a:	4618      	mov	r0, r3
 800507c:	f7fb fa84 	bl	8000588 <__aeabi_f2d>
 8005080:	4604      	mov	r4, r0
 8005082:	460d      	mov	r5, r1
 8005084:	4b32      	ldr	r3, [pc, #200]	; (8005150 <Fast_Mode+0x2e0>)
 8005086:	edd3 7a00 	vldr	s15, [r3]
 800508a:	eef0 7ae7 	vabs.f32	s15, s15
 800508e:	ee17 0a90 	vmov	r0, s15
 8005092:	f7fb fa79 	bl	8000588 <__aeabi_f2d>
 8005096:	4680      	mov	r8, r0
 8005098:	4689      	mov	r9, r1
 800509a:	4b3d      	ldr	r3, [pc, #244]	; (8005190 <Fast_Mode+0x320>)
 800509c:	681b      	ldr	r3, [r3, #0]
 800509e:	687a      	ldr	r2, [r7, #4]
 80050a0:	1ad3      	subs	r3, r2, r3
 80050a2:	4618      	mov	r0, r3
 80050a4:	f7fb fa4e 	bl	8000544 <__aeabi_ui2d>
 80050a8:	4602      	mov	r2, r0
 80050aa:	460b      	mov	r3, r1
 80050ac:	4640      	mov	r0, r8
 80050ae:	4649      	mov	r1, r9
 80050b0:	f7fb fac2 	bl	8000638 <__aeabi_dmul>
 80050b4:	4602      	mov	r2, r0
 80050b6:	460b      	mov	r3, r1
 80050b8:	4610      	mov	r0, r2
 80050ba:	4619      	mov	r1, r3
 80050bc:	f04f 0200 	mov.w	r2, #0
 80050c0:	4b25      	ldr	r3, [pc, #148]	; (8005158 <Fast_Mode+0x2e8>)
 80050c2:	f7fb fbe3 	bl	800088c <__aeabi_ddiv>
 80050c6:	4602      	mov	r2, r0
 80050c8:	460b      	mov	r3, r1
 80050ca:	4620      	mov	r0, r4
 80050cc:	4629      	mov	r1, r5
 80050ce:	f7fb f8fd 	bl	80002cc <__adddf3>
 80050d2:	4602      	mov	r2, r0
 80050d4:	460b      	mov	r3, r1
 80050d6:	4610      	mov	r0, r2
 80050d8:	4619      	mov	r1, r3
 80050da:	f7fb fd85 	bl	8000be8 <__aeabi_d2f>
 80050de:	4603      	mov	r3, r0
 80050e0:	4a2a      	ldr	r2, [pc, #168]	; (800518c <Fast_Mode+0x31c>)
 80050e2:	6013      	str	r3, [r2, #0]
		if(s_brake>300) //ha már legalább 30cm óta folyamatosan 3 vonal van alattunk
 80050e4:	4b29      	ldr	r3, [pc, #164]	; (800518c <Fast_Mode+0x31c>)
 80050e6:	edd3 7a00 	vldr	s15, [r3]
 80050ea:	ed9f 7a2a 	vldr	s14, [pc, #168]	; 8005194 <Fast_Mode+0x324>
 80050ee:	eef4 7ac7 	vcmpe.f32	s15, s14
 80050f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80050f6:	dd55      	ble.n	80051a4 <Fast_Mode+0x334>
		{
			boostOrBrake=1;
 80050f8:	4b1c      	ldr	r3, [pc, #112]	; (800516c <Fast_Mode+0x2fc>)
 80050fa:	2201      	movs	r2, #1
 80050fc:	701a      	strb	r2, [r3, #0]
			if(state == FREERUN_MODE)
 80050fe:	7ffb      	ldrb	r3, [r7, #31]
 8005100:	2b01      	cmp	r3, #1
 8005102:	d14f      	bne.n	80051a4 <Fast_Mode+0x334>
			{
				if(cornerSpeed[boostCnt]==-1)motorEnLineOk=0;
 8005104:	4b1b      	ldr	r3, [pc, #108]	; (8005174 <Fast_Mode+0x304>)
 8005106:	881b      	ldrh	r3, [r3, #0]
 8005108:	461a      	mov	r2, r3
 800510a:	4b23      	ldr	r3, [pc, #140]	; (8005198 <Fast_Mode+0x328>)
 800510c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005110:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005114:	d103      	bne.n	800511e <Fast_Mode+0x2ae>
 8005116:	4b1b      	ldr	r3, [pc, #108]	; (8005184 <Fast_Mode+0x314>)
 8005118:	2200      	movs	r2, #0
 800511a:	701a      	strb	r2, [r3, #0]
 800511c:	e00c      	b.n	8005138 <Fast_Mode+0x2c8>
				else v_ref = cornerSpeed[boostCnt];
 800511e:	4b15      	ldr	r3, [pc, #84]	; (8005174 <Fast_Mode+0x304>)
 8005120:	881b      	ldrh	r3, [r3, #0]
 8005122:	461a      	mov	r2, r3
 8005124:	4b1c      	ldr	r3, [pc, #112]	; (8005198 <Fast_Mode+0x328>)
 8005126:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800512a:	ee07 3a90 	vmov	s15, r3
 800512e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005132:	4b15      	ldr	r3, [pc, #84]	; (8005188 <Fast_Mode+0x318>)
 8005134:	edc3 7a00 	vstr	s15, [r3]
				LED_B(0);
 8005138:	2201      	movs	r2, #1
 800513a:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800513e:	480c      	ldr	r0, [pc, #48]	; (8005170 <Fast_Mode+0x300>)
 8005140:	f004 f87c 	bl	800923c <HAL_GPIO_WritePin>
 8005144:	e02e      	b.n	80051a4 <Fast_Mode+0x334>
 8005146:	bf00      	nop
 8005148:	20000770 	.word	0x20000770
 800514c:	20000058 	.word	0x20000058
 8005150:	20000758 	.word	0x20000758
 8005154:	20000794 	.word	0x20000794
 8005158:	408f4000 	.word	0x408f4000
 800515c:	20000798 	.word	0x20000798
 8005160:	2000005c 	.word	0x2000005c
 8005164:	437a0000 	.word	0x437a0000
 8005168:	44480000 	.word	0x44480000
 800516c:	2000007c 	.word	0x2000007c
 8005170:	40020400 	.word	0x40020400
 8005174:	2000077c 	.word	0x2000077c
 8005178:	20000080 	.word	0x20000080
 800517c:	20000799 	.word	0x20000799
 8005180:	2000079c 	.word	0x2000079c
 8005184:	20000c3d 	.word	0x20000c3d
 8005188:	20000340 	.word	0x20000340
 800518c:	200007a0 	.word	0x200007a0
 8005190:	200007a4 	.word	0x200007a4
 8005194:	43960000 	.word	0x43960000
 8005198:	200000c4 	.word	0x200000c4
			}
		}
	}
	else //ha 1 vonalat érzékelünk
	{
		s_brake=0;
 800519c:	4bb6      	ldr	r3, [pc, #728]	; (8005478 <Fast_Mode+0x608>)
 800519e:	f04f 0200 	mov.w	r2, #0
 80051a2:	601a      	str	r2, [r3, #0]
	}
	t_prev=t;
 80051a4:	4ab5      	ldr	r2, [pc, #724]	; (800547c <Fast_Mode+0x60c>)
 80051a6:	687b      	ldr	r3, [r7, #4]
 80051a8:	6013      	str	r3, [r2, #0]

	/*****SC üzemmód******/
	if(state==SC_MODE)
 80051aa:	7ffb      	ldrb	r3, [r7, #31]
 80051ac:	2b00      	cmp	r3, #0
 80051ae:	d11e      	bne.n	80051ee <Fast_Mode+0x37e>
	{
		uint32_t dist=(((uint16_t)rxBuf[5])<<8) | ((uint16_t)rxBuf[6]);
 80051b0:	4bb3      	ldr	r3, [pc, #716]	; (8005480 <Fast_Mode+0x610>)
 80051b2:	795b      	ldrb	r3, [r3, #5]
 80051b4:	021b      	lsls	r3, r3, #8
 80051b6:	4ab2      	ldr	r2, [pc, #712]	; (8005480 <Fast_Mode+0x610>)
 80051b8:	7992      	ldrb	r2, [r2, #6]
 80051ba:	4313      	orrs	r3, r2
 80051bc:	617b      	str	r3, [r7, #20]
		if(dist>1000 || rxBuf[4]) v_ref=1500; //ha tul messze vana  SC vagy érvénytelen az olvasás
 80051be:	697b      	ldr	r3, [r7, #20]
 80051c0:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80051c4:	d803      	bhi.n	80051ce <Fast_Mode+0x35e>
 80051c6:	4bae      	ldr	r3, [pc, #696]	; (8005480 <Fast_Mode+0x610>)
 80051c8:	791b      	ldrb	r3, [r3, #4]
 80051ca:	2b00      	cmp	r3, #0
 80051cc:	d003      	beq.n	80051d6 <Fast_Mode+0x366>
 80051ce:	4bad      	ldr	r3, [pc, #692]	; (8005484 <Fast_Mode+0x614>)
 80051d0:	4aad      	ldr	r2, [pc, #692]	; (8005488 <Fast_Mode+0x618>)
 80051d2:	601a      	str	r2, [r3, #0]
 80051d4:	e00b      	b.n	80051ee <Fast_Mode+0x37e>
		else v_ref = 2*dist-500;
 80051d6:	697b      	ldr	r3, [r7, #20]
 80051d8:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80051dc:	3bfa      	subs	r3, #250	; 0xfa
 80051de:	005b      	lsls	r3, r3, #1
 80051e0:	ee07 3a90 	vmov	s15, r3
 80051e4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80051e8:	4ba6      	ldr	r3, [pc, #664]	; (8005484 <Fast_Mode+0x614>)
 80051ea:	edc3 7a00 	vstr	s15, [r3]
	}

	x_elso=(float)rxBuf[2]*204/248.0-102;//248
 80051ee:	4ba4      	ldr	r3, [pc, #656]	; (8005480 <Fast_Mode+0x610>)
 80051f0:	789b      	ldrb	r3, [r3, #2]
 80051f2:	ee07 3a90 	vmov	s15, r3
 80051f6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80051fa:	ed9f 7aa4 	vldr	s14, [pc, #656]	; 800548c <Fast_Mode+0x61c>
 80051fe:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005202:	ee17 0a90 	vmov	r0, s15
 8005206:	f7fb f9bf 	bl	8000588 <__aeabi_f2d>
 800520a:	f04f 0200 	mov.w	r2, #0
 800520e:	4ba0      	ldr	r3, [pc, #640]	; (8005490 <Fast_Mode+0x620>)
 8005210:	f7fb fb3c 	bl	800088c <__aeabi_ddiv>
 8005214:	4602      	mov	r2, r0
 8005216:	460b      	mov	r3, r1
 8005218:	4610      	mov	r0, r2
 800521a:	4619      	mov	r1, r3
 800521c:	f04f 0200 	mov.w	r2, #0
 8005220:	4b9c      	ldr	r3, [pc, #624]	; (8005494 <Fast_Mode+0x624>)
 8005222:	f7fb f851 	bl	80002c8 <__aeabi_dsub>
 8005226:	4602      	mov	r2, r0
 8005228:	460b      	mov	r3, r1
 800522a:	4610      	mov	r0, r2
 800522c:	4619      	mov	r1, r3
 800522e:	f7fb fcdb 	bl	8000be8 <__aeabi_d2f>
 8005232:	4603      	mov	r3, r0
 8005234:	4a98      	ldr	r2, [pc, #608]	; (8005498 <Fast_Mode+0x628>)
 8005236:	6013      	str	r3, [r2, #0]
	x_hatso=(float)rxBuf[3]*204/248.0-102; //244
 8005238:	4b91      	ldr	r3, [pc, #580]	; (8005480 <Fast_Mode+0x610>)
 800523a:	78db      	ldrb	r3, [r3, #3]
 800523c:	ee07 3a90 	vmov	s15, r3
 8005240:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8005244:	ed9f 7a91 	vldr	s14, [pc, #580]	; 800548c <Fast_Mode+0x61c>
 8005248:	ee67 7a87 	vmul.f32	s15, s15, s14
 800524c:	ee17 0a90 	vmov	r0, s15
 8005250:	f7fb f99a 	bl	8000588 <__aeabi_f2d>
 8005254:	f04f 0200 	mov.w	r2, #0
 8005258:	4b8d      	ldr	r3, [pc, #564]	; (8005490 <Fast_Mode+0x620>)
 800525a:	f7fb fb17 	bl	800088c <__aeabi_ddiv>
 800525e:	4602      	mov	r2, r0
 8005260:	460b      	mov	r3, r1
 8005262:	4610      	mov	r0, r2
 8005264:	4619      	mov	r1, r3
 8005266:	f04f 0200 	mov.w	r2, #0
 800526a:	4b8a      	ldr	r3, [pc, #552]	; (8005494 <Fast_Mode+0x624>)
 800526c:	f7fb f82c 	bl	80002c8 <__aeabi_dsub>
 8005270:	4602      	mov	r2, r0
 8005272:	460b      	mov	r3, r1
 8005274:	4610      	mov	r0, r2
 8005276:	4619      	mov	r1, r3
 8005278:	f7fb fcb6 	bl	8000be8 <__aeabi_d2f>
 800527c:	4603      	mov	r3, r0
 800527e:	4a87      	ldr	r2, [pc, #540]	; (800549c <Fast_Mode+0x62c>)
 8005280:	6013      	str	r3, [r2, #0]
	delta=atan((x_elso-x_hatso)/L_SENSOR);
 8005282:	4b85      	ldr	r3, [pc, #532]	; (8005498 <Fast_Mode+0x628>)
 8005284:	ed93 7a00 	vldr	s14, [r3]
 8005288:	4b84      	ldr	r3, [pc, #528]	; (800549c <Fast_Mode+0x62c>)
 800528a:	edd3 7a00 	vldr	s15, [r3]
 800528e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005292:	ee17 0a90 	vmov	r0, s15
 8005296:	f7fb f977 	bl	8000588 <__aeabi_f2d>
 800529a:	f04f 0200 	mov.w	r2, #0
 800529e:	4b80      	ldr	r3, [pc, #512]	; (80054a0 <Fast_Mode+0x630>)
 80052a0:	f7fb faf4 	bl	800088c <__aeabi_ddiv>
 80052a4:	4602      	mov	r2, r0
 80052a6:	460b      	mov	r3, r1
 80052a8:	ec43 2b17 	vmov	d7, r2, r3
 80052ac:	eeb0 0a47 	vmov.f32	s0, s14
 80052b0:	eef0 0a67 	vmov.f32	s1, s15
 80052b4:	f00a fcf8 	bl	800fca8 <atan>
 80052b8:	ec53 2b10 	vmov	r2, r3, d0
 80052bc:	4610      	mov	r0, r2
 80052be:	4619      	mov	r1, r3
 80052c0:	f7fb fc92 	bl	8000be8 <__aeabi_d2f>
 80052c4:	4603      	mov	r3, r0
 80052c6:	4a77      	ldr	r2, [pc, #476]	; (80054a4 <Fast_Mode+0x634>)
 80052c8:	6013      	str	r3, [r2, #0]
	/**/
	//szabályozóparaméterek ujraszámolása az aktuális sebesség alapján
	if(state==SC_MODE)
 80052ca:	7ffb      	ldrb	r3, [r7, #31]
 80052cc:	2b00      	cmp	r3, #0
 80052ce:	d10a      	bne.n	80052e6 <Fast_Mode+0x476>
	{
		k_p = -0.004;
 80052d0:	4b75      	ldr	r3, [pc, #468]	; (80054a8 <Fast_Mode+0x638>)
 80052d2:	4a76      	ldr	r2, [pc, #472]	; (80054ac <Fast_Mode+0x63c>)
 80052d4:	601a      	str	r2, [r3, #0]
		kD = -0.004;
 80052d6:	4b76      	ldr	r3, [pc, #472]	; (80054b0 <Fast_Mode+0x640>)
 80052d8:	4a74      	ldr	r2, [pc, #464]	; (80054ac <Fast_Mode+0x63c>)
 80052da:	601a      	str	r2, [r3, #0]
		k_delta = 0;
 80052dc:	4b75      	ldr	r3, [pc, #468]	; (80054b4 <Fast_Mode+0x644>)
 80052de:	f04f 0200 	mov.w	r2, #0
 80052e2:	601a      	str	r2, [r3, #0]
 80052e4:	e085      	b.n	80053f2 <Fast_Mode+0x582>
	}

	else //FREERUN modes
	{
		if(v>150 || v<-150)
 80052e6:	4b74      	ldr	r3, [pc, #464]	; (80054b8 <Fast_Mode+0x648>)
 80052e8:	edd3 7a00 	vldr	s15, [r3]
 80052ec:	ed9f 7a73 	vldr	s14, [pc, #460]	; 80054bc <Fast_Mode+0x64c>
 80052f0:	eef4 7ac7 	vcmpe.f32	s15, s14
 80052f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80052f8:	dc09      	bgt.n	800530e <Fast_Mode+0x49e>
 80052fa:	4b6f      	ldr	r3, [pc, #444]	; (80054b8 <Fast_Mode+0x648>)
 80052fc:	edd3 7a00 	vldr	s15, [r3]
 8005300:	ed9f 7a6f 	vldr	s14, [pc, #444]	; 80054c0 <Fast_Mode+0x650>
 8005304:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005308:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800530c:	d568      	bpl.n	80053e0 <Fast_Mode+0x570>
		{
			if(v<2200) //kanyar
 800530e:	4b6a      	ldr	r3, [pc, #424]	; (80054b8 <Fast_Mode+0x648>)
 8005310:	edd3 7a00 	vldr	s15, [r3]
 8005314:	ed9f 7a6b 	vldr	s14, [pc, #428]	; 80054c4 <Fast_Mode+0x654>
 8005318:	eef4 7ac7 	vcmpe.f32	s15, s14
 800531c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005320:	d50a      	bpl.n	8005338 <Fast_Mode+0x4c8>
			{
				k_p = -0.0026;//-L/(v*v)*S1MULTS2_SLOW;
 8005322:	4b61      	ldr	r3, [pc, #388]	; (80054a8 <Fast_Mode+0x638>)
 8005324:	4a68      	ldr	r2, [pc, #416]	; (80054c8 <Fast_Mode+0x658>)
 8005326:	601a      	str	r2, [r3, #0]
				k_delta = 0;//L/v*(S1ADDS2_SLOW-v*k_p);
 8005328:	4b62      	ldr	r3, [pc, #392]	; (80054b4 <Fast_Mode+0x644>)
 800532a:	f04f 0200 	mov.w	r2, #0
 800532e:	601a      	str	r2, [r3, #0]
				kD=-0.06;//-0.06
 8005330:	4b5f      	ldr	r3, [pc, #380]	; (80054b0 <Fast_Mode+0x640>)
 8005332:	4a66      	ldr	r2, [pc, #408]	; (80054cc <Fast_Mode+0x65c>)
 8005334:	601a      	str	r2, [r3, #0]
			if(v<2200) //kanyar
 8005336:	e05c      	b.n	80053f2 <Fast_Mode+0x582>
			}
			else //egyenes
			{
				k_p = -L*S1MULTS2_FAST/(v*v);
 8005338:	4b5f      	ldr	r3, [pc, #380]	; (80054b8 <Fast_Mode+0x648>)
 800533a:	ed93 7a00 	vldr	s14, [r3]
 800533e:	4b5e      	ldr	r3, [pc, #376]	; (80054b8 <Fast_Mode+0x648>)
 8005340:	edd3 7a00 	vldr	s15, [r3]
 8005344:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005348:	ee17 0a90 	vmov	r0, s15
 800534c:	f7fb f91c 	bl	8000588 <__aeabi_f2d>
 8005350:	4602      	mov	r2, r0
 8005352:	460b      	mov	r3, r1
 8005354:	a142      	add	r1, pc, #264	; (adr r1, 8005460 <Fast_Mode+0x5f0>)
 8005356:	e9d1 0100 	ldrd	r0, r1, [r1]
 800535a:	f7fb fa97 	bl	800088c <__aeabi_ddiv>
 800535e:	4602      	mov	r2, r0
 8005360:	460b      	mov	r3, r1
 8005362:	4610      	mov	r0, r2
 8005364:	4619      	mov	r1, r3
 8005366:	f7fb fc3f 	bl	8000be8 <__aeabi_d2f>
 800536a:	4603      	mov	r3, r0
 800536c:	4a4e      	ldr	r2, [pc, #312]	; (80054a8 <Fast_Mode+0x638>)
 800536e:	6013      	str	r3, [r2, #0]
				k_delta = L*(S1ADDS2_FAST-v*k_p)/v;
 8005370:	4b51      	ldr	r3, [pc, #324]	; (80054b8 <Fast_Mode+0x648>)
 8005372:	ed93 7a00 	vldr	s14, [r3]
 8005376:	4b4c      	ldr	r3, [pc, #304]	; (80054a8 <Fast_Mode+0x638>)
 8005378:	edd3 7a00 	vldr	s15, [r3]
 800537c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005380:	ee17 0a90 	vmov	r0, s15
 8005384:	f7fb f900 	bl	8000588 <__aeabi_f2d>
 8005388:	4602      	mov	r2, r0
 800538a:	460b      	mov	r3, r1
 800538c:	a136      	add	r1, pc, #216	; (adr r1, 8005468 <Fast_Mode+0x5f8>)
 800538e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005392:	f7fa ff99 	bl	80002c8 <__aeabi_dsub>
 8005396:	4602      	mov	r2, r0
 8005398:	460b      	mov	r3, r1
 800539a:	4610      	mov	r0, r2
 800539c:	4619      	mov	r1, r3
 800539e:	a334      	add	r3, pc, #208	; (adr r3, 8005470 <Fast_Mode+0x600>)
 80053a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80053a4:	f7fb f948 	bl	8000638 <__aeabi_dmul>
 80053a8:	4602      	mov	r2, r0
 80053aa:	460b      	mov	r3, r1
 80053ac:	4614      	mov	r4, r2
 80053ae:	461d      	mov	r5, r3
 80053b0:	4b41      	ldr	r3, [pc, #260]	; (80054b8 <Fast_Mode+0x648>)
 80053b2:	681b      	ldr	r3, [r3, #0]
 80053b4:	4618      	mov	r0, r3
 80053b6:	f7fb f8e7 	bl	8000588 <__aeabi_f2d>
 80053ba:	4602      	mov	r2, r0
 80053bc:	460b      	mov	r3, r1
 80053be:	4620      	mov	r0, r4
 80053c0:	4629      	mov	r1, r5
 80053c2:	f7fb fa63 	bl	800088c <__aeabi_ddiv>
 80053c6:	4602      	mov	r2, r0
 80053c8:	460b      	mov	r3, r1
 80053ca:	4610      	mov	r0, r2
 80053cc:	4619      	mov	r1, r3
 80053ce:	f7fb fc0b 	bl	8000be8 <__aeabi_d2f>
 80053d2:	4603      	mov	r3, r0
 80053d4:	4a37      	ldr	r2, [pc, #220]	; (80054b4 <Fast_Mode+0x644>)
 80053d6:	6013      	str	r3, [r2, #0]
				kD=-0.05;
 80053d8:	4b35      	ldr	r3, [pc, #212]	; (80054b0 <Fast_Mode+0x640>)
 80053da:	4a3d      	ldr	r2, [pc, #244]	; (80054d0 <Fast_Mode+0x660>)
 80053dc:	601a      	str	r2, [r3, #0]
			if(v<2200) //kanyar
 80053de:	e008      	b.n	80053f2 <Fast_Mode+0x582>
			}
		}
		else
		{
			k_p=K_P_200;
 80053e0:	4b31      	ldr	r3, [pc, #196]	; (80054a8 <Fast_Mode+0x638>)
 80053e2:	4a3c      	ldr	r2, [pc, #240]	; (80054d4 <Fast_Mode+0x664>)
 80053e4:	601a      	str	r2, [r3, #0]
			k_delta=K_DELTA_200;
 80053e6:	4b33      	ldr	r3, [pc, #204]	; (80054b4 <Fast_Mode+0x644>)
 80053e8:	4a3b      	ldr	r2, [pc, #236]	; (80054d8 <Fast_Mode+0x668>)
 80053ea:	601a      	str	r2, [r3, #0]
			kD=-0.06;
 80053ec:	4b30      	ldr	r3, [pc, #192]	; (80054b0 <Fast_Mode+0x640>)
 80053ee:	4a37      	ldr	r2, [pc, #220]	; (80054cc <Fast_Mode+0x65c>)
 80053f0:	601a      	str	r2, [r3, #0]
		}
	}
	gamma = -k_p * x_elso -k_delta * delta - kD * (x_elso-x_elso_prev);
 80053f2:	4b2d      	ldr	r3, [pc, #180]	; (80054a8 <Fast_Mode+0x638>)
 80053f4:	edd3 7a00 	vldr	s15, [r3]
 80053f8:	eeb1 7a67 	vneg.f32	s14, s15
 80053fc:	4b26      	ldr	r3, [pc, #152]	; (8005498 <Fast_Mode+0x628>)
 80053fe:	edd3 7a00 	vldr	s15, [r3]
 8005402:	ee27 7a27 	vmul.f32	s14, s14, s15
 8005406:	4b2b      	ldr	r3, [pc, #172]	; (80054b4 <Fast_Mode+0x644>)
 8005408:	edd3 6a00 	vldr	s13, [r3]
 800540c:	4b25      	ldr	r3, [pc, #148]	; (80054a4 <Fast_Mode+0x634>)
 800540e:	edd3 7a00 	vldr	s15, [r3]
 8005412:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8005416:	ee37 7a67 	vsub.f32	s14, s14, s15
 800541a:	4b1f      	ldr	r3, [pc, #124]	; (8005498 <Fast_Mode+0x628>)
 800541c:	edd3 6a00 	vldr	s13, [r3]
 8005420:	4b2e      	ldr	r3, [pc, #184]	; (80054dc <Fast_Mode+0x66c>)
 8005422:	edd3 7a00 	vldr	s15, [r3]
 8005426:	ee76 6ae7 	vsub.f32	s13, s13, s15
 800542a:	4b21      	ldr	r3, [pc, #132]	; (80054b0 <Fast_Mode+0x640>)
 800542c:	edd3 7a00 	vldr	s15, [r3]
 8005430:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8005434:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005438:	4b29      	ldr	r3, [pc, #164]	; (80054e0 <Fast_Mode+0x670>)
 800543a:	edc3 7a00 	vstr	s15, [r3]
	x_elso_prev = x_elso;
 800543e:	4b16      	ldr	r3, [pc, #88]	; (8005498 <Fast_Mode+0x628>)
 8005440:	681b      	ldr	r3, [r3, #0]
 8005442:	4a26      	ldr	r2, [pc, #152]	; (80054dc <Fast_Mode+0x66c>)
 8005444:	6013      	str	r3, [r2, #0]

	*state_pointer=state;
 8005446:	68bb      	ldr	r3, [r7, #8]
 8005448:	7ffa      	ldrb	r2, [r7, #31]
 800544a:	701a      	strb	r2, [r3, #0]
	return gamma;
 800544c:	4b24      	ldr	r3, [pc, #144]	; (80054e0 <Fast_Mode+0x670>)
 800544e:	681b      	ldr	r3, [r3, #0]
}
 8005450:	ee07 3a90 	vmov	s15, r3
 8005454:	eeb0 0a67 	vmov.f32	s0, s15
 8005458:	3720      	adds	r7, #32
 800545a:	46bd      	mov	sp, r7
 800545c:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8005460:	b22d0e56 	.word	0xb22d0e56
 8005464:	c0b75f1d 	.word	0xc0b75f1d
 8005468:	8f5c28f6 	.word	0x8f5c28f6
 800546c:	c02275c2 	.word	0xc02275c2
 8005470:	00000000 	.word	0x00000000
 8005474:	40716000 	.word	0x40716000
 8005478:	200007a0 	.word	0x200007a0
 800547c:	200007a4 	.word	0x200007a4
 8005480:	20000770 	.word	0x20000770
 8005484:	20000340 	.word	0x20000340
 8005488:	44bb8000 	.word	0x44bb8000
 800548c:	434c0000 	.word	0x434c0000
 8005490:	406f0000 	.word	0x406f0000
 8005494:	40598000 	.word	0x40598000
 8005498:	200007a8 	.word	0x200007a8
 800549c:	200007ac 	.word	0x200007ac
 80054a0:	407c4000 	.word	0x407c4000
 80054a4:	200007b0 	.word	0x200007b0
 80054a8:	20000108 	.word	0x20000108
 80054ac:	bb83126f 	.word	0xbb83126f
 80054b0:	2000010c 	.word	0x2000010c
 80054b4:	20000110 	.word	0x20000110
 80054b8:	20000758 	.word	0x20000758
 80054bc:	43160000 	.word	0x43160000
 80054c0:	c3160000 	.word	0xc3160000
 80054c4:	45098000 	.word	0x45098000
 80054c8:	bb2a64c3 	.word	0xbb2a64c3
 80054cc:	bd75c28f 	.word	0xbd75c28f
 80054d0:	bd4ccccd 	.word	0xbd4ccccd
 80054d4:	ba30dc42 	.word	0xba30dc42
 80054d8:	bf21eadf 	.word	0xbf21eadf
 80054dc:	200007b4 	.word	0x200007b4
 80054e0:	200007b8 	.word	0x200007b8

080054e4 <Skill_Mode>:

float Skill_Mode(UART_HandleTypeDef *huart_debugg, float kP, float kD, uint32_t t)
{
 80054e4:	b580      	push	{r7, lr}
 80054e6:	b088      	sub	sp, #32
 80054e8:	af00      	add	r7, sp, #0
 80054ea:	60f8      	str	r0, [r7, #12]
 80054ec:	ed87 0a02 	vstr	s0, [r7, #8]
 80054f0:	edc7 0a01 	vstr	s1, [r7, #4]
 80054f4:	6039      	str	r1, [r7, #0]
	static uint32_t t_prev=0;
	int byte=0;
 80054f6:	2300      	movs	r3, #0
 80054f8:	61fb      	str	r3, [r7, #28]
	static int byte_prev=0;
	int delta_byte;
	float p=0;
 80054fa:	f04f 0300 	mov.w	r3, #0
 80054fe:	617b      	str	r3, [r7, #20]
/*	uint8_t str[40];
	sprintf(str,"%d,  %d,  %d,  %d,  %d\n\r",rxBuf[1],rxBuf[2],rxBuf[3],rxBuf[4],rxBuf[5]);
	HAL_UART_Transmit(huart_debugg, str, strlen(str), 10);
*/

	if(LINE_CNT>3 || ignore)//ha éppen node-on vagyunk, akkor az átlagot követjük
 8005500:	4b85      	ldr	r3, [pc, #532]	; (8005718 <Skill_Mode+0x234>)
 8005502:	785b      	ldrb	r3, [r3, #1]
 8005504:	2b03      	cmp	r3, #3
 8005506:	d803      	bhi.n	8005510 <Skill_Mode+0x2c>
 8005508:	4b84      	ldr	r3, [pc, #528]	; (800571c <Skill_Mode+0x238>)
 800550a:	781b      	ldrb	r3, [r3, #0]
 800550c:	2b00      	cmp	r3, #0
 800550e:	d022      	beq.n	8005556 <Skill_Mode+0x72>
	{
		byte=0;
 8005510:	2300      	movs	r3, #0
 8005512:	61fb      	str	r3, [r7, #28]
		for(i=0;i<LINE_CNT;i++)
 8005514:	2300      	movs	r3, #0
 8005516:	61bb      	str	r3, [r7, #24]
 8005518:	e00a      	b.n	8005530 <Skill_Mode+0x4c>
		{
			byte += rxBuf[i+2];
 800551a:	69bb      	ldr	r3, [r7, #24]
 800551c:	3302      	adds	r3, #2
 800551e:	4a7e      	ldr	r2, [pc, #504]	; (8005718 <Skill_Mode+0x234>)
 8005520:	5cd3      	ldrb	r3, [r2, r3]
 8005522:	461a      	mov	r2, r3
 8005524:	69fb      	ldr	r3, [r7, #28]
 8005526:	4413      	add	r3, r2
 8005528:	61fb      	str	r3, [r7, #28]
		for(i=0;i<LINE_CNT;i++)
 800552a:	69bb      	ldr	r3, [r7, #24]
 800552c:	3301      	adds	r3, #1
 800552e:	61bb      	str	r3, [r7, #24]
 8005530:	4b79      	ldr	r3, [pc, #484]	; (8005718 <Skill_Mode+0x234>)
 8005532:	785b      	ldrb	r3, [r3, #1]
 8005534:	461a      	mov	r2, r3
 8005536:	69bb      	ldr	r3, [r7, #24]
 8005538:	4293      	cmp	r3, r2
 800553a:	dbee      	blt.n	800551a <Skill_Mode+0x36>
		}

		if(LINE_CNT) byte /= LINE_CNT;
 800553c:	4b76      	ldr	r3, [pc, #472]	; (8005718 <Skill_Mode+0x234>)
 800553e:	785b      	ldrb	r3, [r3, #1]
 8005540:	2b00      	cmp	r3, #0
 8005542:	f000 8097 	beq.w	8005674 <Skill_Mode+0x190>
 8005546:	4b74      	ldr	r3, [pc, #464]	; (8005718 <Skill_Mode+0x234>)
 8005548:	785b      	ldrb	r3, [r3, #1]
 800554a:	461a      	mov	r2, r3
 800554c:	69fb      	ldr	r3, [r7, #28]
 800554e:	fb93 f3f2 	sdiv	r3, r3, r2
 8005552:	61fb      	str	r3, [r7, #28]
 8005554:	e08e      	b.n	8005674 <Skill_Mode+0x190>
	}
	else if((path==LEFT && orientation==FORWARD) || (path==RIGHT && orientation==REVERSE))
 8005556:	4b72      	ldr	r3, [pc, #456]	; (8005720 <Skill_Mode+0x23c>)
 8005558:	781b      	ldrb	r3, [r3, #0]
 800555a:	2b00      	cmp	r3, #0
 800555c:	d103      	bne.n	8005566 <Skill_Mode+0x82>
 800555e:	4b71      	ldr	r3, [pc, #452]	; (8005724 <Skill_Mode+0x240>)
 8005560:	781b      	ldrb	r3, [r3, #0]
 8005562:	2b00      	cmp	r3, #0
 8005564:	d007      	beq.n	8005576 <Skill_Mode+0x92>
 8005566:	4b6e      	ldr	r3, [pc, #440]	; (8005720 <Skill_Mode+0x23c>)
 8005568:	781b      	ldrb	r3, [r3, #0]
 800556a:	2b02      	cmp	r3, #2
 800556c:	d10f      	bne.n	800558e <Skill_Mode+0xaa>
 800556e:	4b6d      	ldr	r3, [pc, #436]	; (8005724 <Skill_Mode+0x240>)
 8005570:	781b      	ldrb	r3, [r3, #0]
 8005572:	2b01      	cmp	r3, #1
 8005574:	d10b      	bne.n	800558e <Skill_Mode+0xaa>
	{
		byte = LINE1; //az első vonalt kell követni
 8005576:	4b68      	ldr	r3, [pc, #416]	; (8005718 <Skill_Mode+0x234>)
 8005578:	789b      	ldrb	r3, [r3, #2]
 800557a:	61fb      	str	r3, [r7, #28]
		delta_byte=abs((int)byte-byte_prev);
 800557c:	4b6a      	ldr	r3, [pc, #424]	; (8005728 <Skill_Mode+0x244>)
 800557e:	681b      	ldr	r3, [r3, #0]
 8005580:	69fa      	ldr	r2, [r7, #28]
 8005582:	1ad3      	subs	r3, r2, r3
 8005584:	2b00      	cmp	r3, #0
 8005586:	bfb8      	it	lt
 8005588:	425b      	neglt	r3, r3
 800558a:	613b      	str	r3, [r7, #16]
 800558c:	e072      	b.n	8005674 <Skill_Mode+0x190>
			estuary=ESTUARY_MODE_OFF;
			LED_G(0);
		}
*/
	}
	else if((path==RIGHT && orientation==FORWARD) || (path==LEFT && orientation==REVERSE))
 800558e:	4b64      	ldr	r3, [pc, #400]	; (8005720 <Skill_Mode+0x23c>)
 8005590:	781b      	ldrb	r3, [r3, #0]
 8005592:	2b02      	cmp	r3, #2
 8005594:	d103      	bne.n	800559e <Skill_Mode+0xba>
 8005596:	4b63      	ldr	r3, [pc, #396]	; (8005724 <Skill_Mode+0x240>)
 8005598:	781b      	ldrb	r3, [r3, #0]
 800559a:	2b00      	cmp	r3, #0
 800559c:	d007      	beq.n	80055ae <Skill_Mode+0xca>
 800559e:	4b60      	ldr	r3, [pc, #384]	; (8005720 <Skill_Mode+0x23c>)
 80055a0:	781b      	ldrb	r3, [r3, #0]
 80055a2:	2b00      	cmp	r3, #0
 80055a4:	d112      	bne.n	80055cc <Skill_Mode+0xe8>
 80055a6:	4b5f      	ldr	r3, [pc, #380]	; (8005724 <Skill_Mode+0x240>)
 80055a8:	781b      	ldrb	r3, [r3, #0]
 80055aa:	2b01      	cmp	r3, #1
 80055ac:	d10e      	bne.n	80055cc <Skill_Mode+0xe8>
	{
		byte = rxBuf[1+LINE_CNT];//az utolsó vonalat kell követni
 80055ae:	4b5a      	ldr	r3, [pc, #360]	; (8005718 <Skill_Mode+0x234>)
 80055b0:	785b      	ldrb	r3, [r3, #1]
 80055b2:	3301      	adds	r3, #1
 80055b4:	4a58      	ldr	r2, [pc, #352]	; (8005718 <Skill_Mode+0x234>)
 80055b6:	5cd3      	ldrb	r3, [r2, r3]
 80055b8:	61fb      	str	r3, [r7, #28]
		delta_byte=abs((int)byte-byte_prev);
 80055ba:	4b5b      	ldr	r3, [pc, #364]	; (8005728 <Skill_Mode+0x244>)
 80055bc:	681b      	ldr	r3, [r3, #0]
 80055be:	69fa      	ldr	r2, [r7, #28]
 80055c0:	1ad3      	subs	r3, r2, r3
 80055c2:	2b00      	cmp	r3, #0
 80055c4:	bfb8      	it	lt
 80055c6:	425b      	neglt	r3, r3
 80055c8:	613b      	str	r3, [r7, #16]
 80055ca:	e053      	b.n	8005674 <Skill_Mode+0x190>
			estuary=ESTUARY_MODE_OFF;
			LED_G(0);
		}*/
	}

	else if(path==MIDDLE)
 80055cc:	4b54      	ldr	r3, [pc, #336]	; (8005720 <Skill_Mode+0x23c>)
 80055ce:	781b      	ldrb	r3, [r3, #0]
 80055d0:	2b01      	cmp	r3, #1
 80055d2:	d14f      	bne.n	8005674 <Skill_Mode+0x190>
	{
		if(LINE_CNT==1)
 80055d4:	4b50      	ldr	r3, [pc, #320]	; (8005718 <Skill_Mode+0x234>)
 80055d6:	785b      	ldrb	r3, [r3, #1]
 80055d8:	2b01      	cmp	r3, #1
 80055da:	d10b      	bne.n	80055f4 <Skill_Mode+0x110>
		{
			byte = byte_middle = LINE1;//ha csak 1 vonal van, akkor azt követjük
 80055dc:	4b4e      	ldr	r3, [pc, #312]	; (8005718 <Skill_Mode+0x234>)
 80055de:	789b      	ldrb	r3, [r3, #2]
 80055e0:	461a      	mov	r2, r3
 80055e2:	4b52      	ldr	r3, [pc, #328]	; (800572c <Skill_Mode+0x248>)
 80055e4:	601a      	str	r2, [r3, #0]
 80055e6:	4b51      	ldr	r3, [pc, #324]	; (800572c <Skill_Mode+0x248>)
 80055e8:	681b      	ldr	r3, [r3, #0]
 80055ea:	61fb      	str	r3, [r7, #28]
			middleLineState=1;
 80055ec:	4b50      	ldr	r3, [pc, #320]	; (8005730 <Skill_Mode+0x24c>)
 80055ee:	2201      	movs	r2, #1
 80055f0:	701a      	strb	r2, [r3, #0]
 80055f2:	e03f      	b.n	8005674 <Skill_Mode+0x190>
		}
		else if(LINE_CNT==3)//ha 3 vonal van
 80055f4:	4b48      	ldr	r3, [pc, #288]	; (8005718 <Skill_Mode+0x234>)
 80055f6:	785b      	ldrb	r3, [r3, #1]
 80055f8:	2b03      	cmp	r3, #3
 80055fa:	d10b      	bne.n	8005614 <Skill_Mode+0x130>
		{
			byte = byte_middle = LINE2;//a középsőt követjük
 80055fc:	4b46      	ldr	r3, [pc, #280]	; (8005718 <Skill_Mode+0x234>)
 80055fe:	78db      	ldrb	r3, [r3, #3]
 8005600:	461a      	mov	r2, r3
 8005602:	4b4a      	ldr	r3, [pc, #296]	; (800572c <Skill_Mode+0x248>)
 8005604:	601a      	str	r2, [r3, #0]
 8005606:	4b49      	ldr	r3, [pc, #292]	; (800572c <Skill_Mode+0x248>)
 8005608:	681b      	ldr	r3, [r3, #0]
 800560a:	61fb      	str	r3, [r7, #28]
			//folyamatosan nézzük, hogy az 1. és 3.vonal milyen messze van a vonalszenor középontjától
			middleLineState=1;
 800560c:	4b48      	ldr	r3, [pc, #288]	; (8005730 <Skill_Mode+0x24c>)
 800560e:	2201      	movs	r2, #1
 8005610:	701a      	strb	r2, [r3, #0]
 8005612:	e02f      	b.n	8005674 <Skill_Mode+0x190>
		}
		else if(LINE_CNT==2)//ha 2 vonal van, az azt jelenti, hogy az elágazás már annyira szétgáazott, hogy csak 2-t látunk a 3 vonalból
 8005614:	4b40      	ldr	r3, [pc, #256]	; (8005718 <Skill_Mode+0x234>)
 8005616:	785b      	ldrb	r3, [r3, #1]
 8005618:	2b02      	cmp	r3, #2
 800561a:	d12b      	bne.n	8005674 <Skill_Mode+0x190>
		{
			if(middleLineState==1)
 800561c:	4b44      	ldr	r3, [pc, #272]	; (8005730 <Skill_Mode+0x24c>)
 800561e:	781b      	ldrb	r3, [r3, #0]
 8005620:	2b01      	cmp	r3, #1
 8005622:	d116      	bne.n	8005652 <Skill_Mode+0x16e>
			{
				tmp1=abs(byte_middle-LINE1);
 8005624:	4b41      	ldr	r3, [pc, #260]	; (800572c <Skill_Mode+0x248>)
 8005626:	681b      	ldr	r3, [r3, #0]
 8005628:	4a3b      	ldr	r2, [pc, #236]	; (8005718 <Skill_Mode+0x234>)
 800562a:	7892      	ldrb	r2, [r2, #2]
 800562c:	1a9b      	subs	r3, r3, r2
 800562e:	2b00      	cmp	r3, #0
 8005630:	bfb8      	it	lt
 8005632:	425b      	neglt	r3, r3
 8005634:	4a3f      	ldr	r2, [pc, #252]	; (8005734 <Skill_Mode+0x250>)
 8005636:	6013      	str	r3, [r2, #0]
				tmp2=abs(byte_middle-LINE2);
 8005638:	4b3c      	ldr	r3, [pc, #240]	; (800572c <Skill_Mode+0x248>)
 800563a:	681b      	ldr	r3, [r3, #0]
 800563c:	4a36      	ldr	r2, [pc, #216]	; (8005718 <Skill_Mode+0x234>)
 800563e:	78d2      	ldrb	r2, [r2, #3]
 8005640:	1a9b      	subs	r3, r3, r2
 8005642:	2b00      	cmp	r3, #0
 8005644:	bfb8      	it	lt
 8005646:	425b      	neglt	r3, r3
 8005648:	4a3b      	ldr	r2, [pc, #236]	; (8005738 <Skill_Mode+0x254>)
 800564a:	6013      	str	r3, [r2, #0]
				middleLineState=2;
 800564c:	4b38      	ldr	r3, [pc, #224]	; (8005730 <Skill_Mode+0x24c>)
 800564e:	2202      	movs	r2, #2
 8005650:	701a      	strb	r2, [r3, #0]
			}
			if(middleLineState==2)
 8005652:	4b37      	ldr	r3, [pc, #220]	; (8005730 <Skill_Mode+0x24c>)
 8005654:	781b      	ldrb	r3, [r3, #0]
 8005656:	2b02      	cmp	r3, #2
 8005658:	d10c      	bne.n	8005674 <Skill_Mode+0x190>
			{
				if(tmp1<tmp2) byte = LINE1; //ha a jobboldali vonalat veszítettük el
 800565a:	4b36      	ldr	r3, [pc, #216]	; (8005734 <Skill_Mode+0x250>)
 800565c:	681a      	ldr	r2, [r3, #0]
 800565e:	4b36      	ldr	r3, [pc, #216]	; (8005738 <Skill_Mode+0x254>)
 8005660:	681b      	ldr	r3, [r3, #0]
 8005662:	429a      	cmp	r2, r3
 8005664:	da03      	bge.n	800566e <Skill_Mode+0x18a>
 8005666:	4b2c      	ldr	r3, [pc, #176]	; (8005718 <Skill_Mode+0x234>)
 8005668:	789b      	ldrb	r3, [r3, #2]
 800566a:	61fb      	str	r3, [r7, #28]
 800566c:	e002      	b.n	8005674 <Skill_Mode+0x190>
				else byte = LINE2; //ha a baloldali vonalat veszítettük el
 800566e:	4b2a      	ldr	r3, [pc, #168]	; (8005718 <Skill_Mode+0x234>)
 8005670:	78db      	ldrb	r3, [r3, #3]
 8005672:	61fb      	str	r3, [r7, #28]
			}
		}
	}
	if(estuary==ESTUARY_MODE_INIT)estuary=ESTUARY_MODE_OFF;
 8005674:	4b31      	ldr	r3, [pc, #196]	; (800573c <Skill_Mode+0x258>)
 8005676:	781b      	ldrb	r3, [r3, #0]
 8005678:	2b00      	cmp	r3, #0
 800567a:	d102      	bne.n	8005682 <Skill_Mode+0x19e>
 800567c:	4b2f      	ldr	r3, [pc, #188]	; (800573c <Skill_Mode+0x258>)
 800567e:	2201      	movs	r2, #1
 8005680:	701a      	strb	r2, [r3, #0]
	//p = (float)byte * 204/248.0-102;
	p = (float)byte * 204/248.0-102;
 8005682:	69fb      	ldr	r3, [r7, #28]
 8005684:	ee07 3a90 	vmov	s15, r3
 8005688:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800568c:	ed9f 7a2c 	vldr	s14, [pc, #176]	; 8005740 <Skill_Mode+0x25c>
 8005690:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005694:	ee17 0a90 	vmov	r0, s15
 8005698:	f7fa ff76 	bl	8000588 <__aeabi_f2d>
 800569c:	f04f 0200 	mov.w	r2, #0
 80056a0:	4b28      	ldr	r3, [pc, #160]	; (8005744 <Skill_Mode+0x260>)
 80056a2:	f7fb f8f3 	bl	800088c <__aeabi_ddiv>
 80056a6:	4602      	mov	r2, r0
 80056a8:	460b      	mov	r3, r1
 80056aa:	4610      	mov	r0, r2
 80056ac:	4619      	mov	r1, r3
 80056ae:	f04f 0200 	mov.w	r2, #0
 80056b2:	4b25      	ldr	r3, [pc, #148]	; (8005748 <Skill_Mode+0x264>)
 80056b4:	f7fa fe08 	bl	80002c8 <__aeabi_dsub>
 80056b8:	4602      	mov	r2, r0
 80056ba:	460b      	mov	r3, r1
 80056bc:	4610      	mov	r0, r2
 80056be:	4619      	mov	r1, r3
 80056c0:	f7fb fa92 	bl	8000be8 <__aeabi_d2f>
 80056c4:	4603      	mov	r3, r0
 80056c6:	617b      	str	r3, [r7, #20]
	gamma = -kP * p  - kD*(p-p_prev);
 80056c8:	edd7 7a02 	vldr	s15, [r7, #8]
 80056cc:	eeb1 7a67 	vneg.f32	s14, s15
 80056d0:	edd7 7a05 	vldr	s15, [r7, #20]
 80056d4:	ee27 7a27 	vmul.f32	s14, s14, s15
 80056d8:	4b1c      	ldr	r3, [pc, #112]	; (800574c <Skill_Mode+0x268>)
 80056da:	edd3 7a00 	vldr	s15, [r3]
 80056de:	edd7 6a05 	vldr	s13, [r7, #20]
 80056e2:	ee76 6ae7 	vsub.f32	s13, s13, s15
 80056e6:	edd7 7a01 	vldr	s15, [r7, #4]
 80056ea:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80056ee:	ee77 7a67 	vsub.f32	s15, s14, s15
 80056f2:	4b17      	ldr	r3, [pc, #92]	; (8005750 <Skill_Mode+0x26c>)
 80056f4:	edc3 7a00 	vstr	s15, [r3]
	p_prev = p;
 80056f8:	4a14      	ldr	r2, [pc, #80]	; (800574c <Skill_Mode+0x268>)
 80056fa:	697b      	ldr	r3, [r7, #20]
 80056fc:	6013      	str	r3, [r2, #0]
	byte_prev=byte;
 80056fe:	4a0a      	ldr	r2, [pc, #40]	; (8005728 <Skill_Mode+0x244>)
 8005700:	69fb      	ldr	r3, [r7, #28]
 8005702:	6013      	str	r3, [r2, #0]

	return gamma;
 8005704:	4b12      	ldr	r3, [pc, #72]	; (8005750 <Skill_Mode+0x26c>)
 8005706:	681b      	ldr	r3, [r3, #0]
 8005708:	ee07 3a90 	vmov	s15, r3
}
 800570c:	eeb0 0a67 	vmov.f32	s0, s15
 8005710:	3720      	adds	r7, #32
 8005712:	46bd      	mov	sp, r7
 8005714:	bd80      	pop	{r7, pc}
 8005716:	bf00      	nop
 8005718:	20000770 	.word	0x20000770
 800571c:	2000077a 	.word	0x2000077a
 8005720:	2000034e 	.word	0x2000034e
 8005724:	2000034c 	.word	0x2000034c
 8005728:	200007bc 	.word	0x200007bc
 800572c:	200007c0 	.word	0x200007c0
 8005730:	20000114 	.word	0x20000114
 8005734:	200007c4 	.word	0x200007c4
 8005738:	200007c8 	.word	0x200007c8
 800573c:	200007cc 	.word	0x200007cc
 8005740:	434c0000 	.word	0x434c0000
 8005744:	406f0000 	.word	0x406f0000
 8005748:	40598000 	.word	0x40598000
 800574c:	200007d0 	.word	0x200007d0
 8005750:	200007d4 	.word	0x200007d4

08005754 <Detect_Node4>:
		ignore=0;
	}
}

void Detect_Node4(UART_HandleTypeDef *huart_debugg, uint32_t t)
{
 8005754:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8005758:	b082      	sub	sp, #8
 800575a:	af00      	add	r7, sp, #0
 800575c:	6078      	str	r0, [r7, #4]
 800575e:	6039      	str	r1, [r7, #0]
	static uint32_t t_prev=0;
	static uint32_t t_stamp=0;
	static uint8_t detect_node_state=0;
	static float s=0;

	if(LINE_CNT==4 && !detect_node_state)
 8005760:	4b3f      	ldr	r3, [pc, #252]	; (8005860 <Detect_Node4+0x10c>)
 8005762:	785b      	ldrb	r3, [r3, #1]
 8005764:	2b04      	cmp	r3, #4
 8005766:	d111      	bne.n	800578c <Detect_Node4+0x38>
 8005768:	4b3e      	ldr	r3, [pc, #248]	; (8005864 <Detect_Node4+0x110>)
 800576a:	781b      	ldrb	r3, [r3, #0]
 800576c:	2b00      	cmp	r3, #0
 800576e:	d10d      	bne.n	800578c <Detect_Node4+0x38>
	{
		s=0;
 8005770:	4b3d      	ldr	r3, [pc, #244]	; (8005868 <Detect_Node4+0x114>)
 8005772:	f04f 0200 	mov.w	r2, #0
 8005776:	601a      	str	r2, [r3, #0]
		detect_node_state=1;//innentől mérünk
 8005778:	4b3a      	ldr	r3, [pc, #232]	; (8005864 <Detect_Node4+0x110>)
 800577a:	2201      	movs	r2, #1
 800577c:	701a      	strb	r2, [r3, #0]
		ignore=1;
 800577e:	4b3b      	ldr	r3, [pc, #236]	; (800586c <Detect_Node4+0x118>)
 8005780:	2201      	movs	r2, #1
 8005782:	701a      	strb	r2, [r3, #0]
		t_stamp=t;
 8005784:	4a3a      	ldr	r2, [pc, #232]	; (8005870 <Detect_Node4+0x11c>)
 8005786:	683b      	ldr	r3, [r7, #0]
 8005788:	6013      	str	r3, [r2, #0]
 800578a:	e03e      	b.n	800580a <Detect_Node4+0xb6>

	}
	else if(LINE_CNT==4 && detect_node_state)
 800578c:	4b34      	ldr	r3, [pc, #208]	; (8005860 <Detect_Node4+0x10c>)
 800578e:	785b      	ldrb	r3, [r3, #1]
 8005790:	2b04      	cmp	r3, #4
 8005792:	d13a      	bne.n	800580a <Detect_Node4+0xb6>
 8005794:	4b33      	ldr	r3, [pc, #204]	; (8005864 <Detect_Node4+0x110>)
 8005796:	781b      	ldrb	r3, [r3, #0]
 8005798:	2b00      	cmp	r3, #0
 800579a:	d036      	beq.n	800580a <Detect_Node4+0xb6>
	{
		s+=fabs(v)*(t-t_prev)/1000;
 800579c:	4b32      	ldr	r3, [pc, #200]	; (8005868 <Detect_Node4+0x114>)
 800579e:	681b      	ldr	r3, [r3, #0]
 80057a0:	4618      	mov	r0, r3
 80057a2:	f7fa fef1 	bl	8000588 <__aeabi_f2d>
 80057a6:	4604      	mov	r4, r0
 80057a8:	460d      	mov	r5, r1
 80057aa:	4b32      	ldr	r3, [pc, #200]	; (8005874 <Detect_Node4+0x120>)
 80057ac:	edd3 7a00 	vldr	s15, [r3]
 80057b0:	eef0 7ae7 	vabs.f32	s15, s15
 80057b4:	ee17 0a90 	vmov	r0, s15
 80057b8:	f7fa fee6 	bl	8000588 <__aeabi_f2d>
 80057bc:	4680      	mov	r8, r0
 80057be:	4689      	mov	r9, r1
 80057c0:	4b2d      	ldr	r3, [pc, #180]	; (8005878 <Detect_Node4+0x124>)
 80057c2:	681b      	ldr	r3, [r3, #0]
 80057c4:	683a      	ldr	r2, [r7, #0]
 80057c6:	1ad3      	subs	r3, r2, r3
 80057c8:	4618      	mov	r0, r3
 80057ca:	f7fa febb 	bl	8000544 <__aeabi_ui2d>
 80057ce:	4602      	mov	r2, r0
 80057d0:	460b      	mov	r3, r1
 80057d2:	4640      	mov	r0, r8
 80057d4:	4649      	mov	r1, r9
 80057d6:	f7fa ff2f 	bl	8000638 <__aeabi_dmul>
 80057da:	4602      	mov	r2, r0
 80057dc:	460b      	mov	r3, r1
 80057de:	4610      	mov	r0, r2
 80057e0:	4619      	mov	r1, r3
 80057e2:	f04f 0200 	mov.w	r2, #0
 80057e6:	4b25      	ldr	r3, [pc, #148]	; (800587c <Detect_Node4+0x128>)
 80057e8:	f7fb f850 	bl	800088c <__aeabi_ddiv>
 80057ec:	4602      	mov	r2, r0
 80057ee:	460b      	mov	r3, r1
 80057f0:	4620      	mov	r0, r4
 80057f2:	4629      	mov	r1, r5
 80057f4:	f7fa fd6a 	bl	80002cc <__adddf3>
 80057f8:	4602      	mov	r2, r0
 80057fa:	460b      	mov	r3, r1
 80057fc:	4610      	mov	r0, r2
 80057fe:	4619      	mov	r1, r3
 8005800:	f7fb f9f2 	bl	8000be8 <__aeabi_d2f>
 8005804:	4603      	mov	r3, r0
 8005806:	4a18      	ldr	r2, [pc, #96]	; (8005868 <Detect_Node4+0x114>)
 8005808:	6013      	str	r3, [r2, #0]
	}
	if((t-t_stamp)>230 && detect_node_state)
 800580a:	4b19      	ldr	r3, [pc, #100]	; (8005870 <Detect_Node4+0x11c>)
 800580c:	681b      	ldr	r3, [r3, #0]
 800580e:	683a      	ldr	r2, [r7, #0]
 8005810:	1ad3      	subs	r3, r2, r3
 8005812:	2be6      	cmp	r3, #230	; 0xe6
 8005814:	d91b      	bls.n	800584e <Detect_Node4+0xfa>
 8005816:	4b13      	ldr	r3, [pc, #76]	; (8005864 <Detect_Node4+0x110>)
 8005818:	781b      	ldrb	r3, [r3, #0]
 800581a:	2b00      	cmp	r3, #0
 800581c:	d017      	beq.n	800584e <Detect_Node4+0xfa>
	{
		detect_node_state=0;
 800581e:	4b11      	ldr	r3, [pc, #68]	; (8005864 <Detect_Node4+0x110>)
 8005820:	2200      	movs	r2, #0
 8005822:	701a      	strb	r2, [r3, #0]
		ignore=0;
 8005824:	4b11      	ldr	r3, [pc, #68]	; (800586c <Detect_Node4+0x118>)
 8005826:	2200      	movs	r2, #0
 8005828:	701a      	strb	r2, [r3, #0]
		if(s>140)//vertical node
		{
			nodeDetected=1; //horizont node

		}
		else*/ if(s>50)//horizontal node
 800582a:	4b0f      	ldr	r3, [pc, #60]	; (8005868 <Detect_Node4+0x114>)
 800582c:	edd3 7a00 	vldr	s15, [r3]
 8005830:	ed9f 7a13 	vldr	s14, [pc, #76]	; 8005880 <Detect_Node4+0x12c>
 8005834:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005838:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800583c:	dd07      	ble.n	800584e <Detect_Node4+0xfa>
		{
			nodeDetected=1; //horizont node
 800583e:	4b11      	ldr	r3, [pc, #68]	; (8005884 <Detect_Node4+0x130>)
 8005840:	2201      	movs	r2, #1
 8005842:	701a      	strb	r2, [r3, #0]
			LED_B_TOGGLE;
 8005844:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8005848:	480f      	ldr	r0, [pc, #60]	; (8005888 <Detect_Node4+0x134>)
 800584a:	f003 fd10 	bl	800926e <HAL_GPIO_TogglePin>

		}
	}
	t_prev=t;
 800584e:	4a0a      	ldr	r2, [pc, #40]	; (8005878 <Detect_Node4+0x124>)
 8005850:	683b      	ldr	r3, [r7, #0]
 8005852:	6013      	str	r3, [r2, #0]
}
 8005854:	bf00      	nop
 8005856:	3708      	adds	r7, #8
 8005858:	46bd      	mov	sp, r7
 800585a:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 800585e:	bf00      	nop
 8005860:	20000770 	.word	0x20000770
 8005864:	200007d8 	.word	0x200007d8
 8005868:	200007dc 	.word	0x200007dc
 800586c:	2000077a 	.word	0x2000077a
 8005870:	200007e0 	.word	0x200007e0
 8005874:	20000758 	.word	0x20000758
 8005878:	200007e4 	.word	0x200007e4
 800587c:	408f4000 	.word	0x408f4000
 8005880:	42480000 	.word	0x42480000
 8005884:	2000034d 	.word	0x2000034d
 8005888:	40020400 	.word	0x40020400

0800588c <Lane_Changer>:

uint8_t Lane_Changer(uint32_t t)
{
 800588c:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8005890:	b084      	sub	sp, #16
 8005892:	af00      	add	r7, sp, #0
 8005894:	6078      	str	r0, [r7, #4]
	static uint8_t lineCnt_prev=1;
	static float s=0;
	static int i=0;
	static uint32_t dt[5]={1000,1000,1000,1000,1000};

	if(laneChange<2)return 0;
 8005896:	4b79      	ldr	r3, [pc, #484]	; (8005a7c <Lane_Changer+0x1f0>)
 8005898:	781b      	ldrb	r3, [r3, #0]
 800589a:	2b01      	cmp	r3, #1
 800589c:	d801      	bhi.n	80058a2 <Lane_Changer+0x16>
 800589e:	2300      	movs	r3, #0
 80058a0:	e0e6      	b.n	8005a70 <Lane_Changer+0x1e4>
	if(LINE_CNT != lineCnt_prev && (LINE_CNT==1 || LINE_CNT==2) && laneChange==2) //ha változik az alattunk lévő vonalak száma
 80058a2:	4b77      	ldr	r3, [pc, #476]	; (8005a80 <Lane_Changer+0x1f4>)
 80058a4:	785a      	ldrb	r2, [r3, #1]
 80058a6:	4b77      	ldr	r3, [pc, #476]	; (8005a84 <Lane_Changer+0x1f8>)
 80058a8:	781b      	ldrb	r3, [r3, #0]
 80058aa:	429a      	cmp	r2, r3
 80058ac:	d041      	beq.n	8005932 <Lane_Changer+0xa6>
 80058ae:	4b74      	ldr	r3, [pc, #464]	; (8005a80 <Lane_Changer+0x1f4>)
 80058b0:	785b      	ldrb	r3, [r3, #1]
 80058b2:	2b01      	cmp	r3, #1
 80058b4:	d003      	beq.n	80058be <Lane_Changer+0x32>
 80058b6:	4b72      	ldr	r3, [pc, #456]	; (8005a80 <Lane_Changer+0x1f4>)
 80058b8:	785b      	ldrb	r3, [r3, #1]
 80058ba:	2b02      	cmp	r3, #2
 80058bc:	d139      	bne.n	8005932 <Lane_Changer+0xa6>
 80058be:	4b6f      	ldr	r3, [pc, #444]	; (8005a7c <Lane_Changer+0x1f0>)
 80058c0:	781b      	ldrb	r3, [r3, #0]
 80058c2:	2b02      	cmp	r3, #2
 80058c4:	d135      	bne.n	8005932 <Lane_Changer+0xa6>
	{
		dt[i] = t - t_stamp;
 80058c6:	4b70      	ldr	r3, [pc, #448]	; (8005a88 <Lane_Changer+0x1fc>)
 80058c8:	681a      	ldr	r2, [r3, #0]
 80058ca:	4b70      	ldr	r3, [pc, #448]	; (8005a8c <Lane_Changer+0x200>)
 80058cc:	681b      	ldr	r3, [r3, #0]
 80058ce:	6879      	ldr	r1, [r7, #4]
 80058d0:	1a8a      	subs	r2, r1, r2
 80058d2:	496f      	ldr	r1, [pc, #444]	; (8005a90 <Lane_Changer+0x204>)
 80058d4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		uint32_t sum=dt[0] + dt[1] + dt[2] + dt[3]+ dt[4];
 80058d8:	4b6d      	ldr	r3, [pc, #436]	; (8005a90 <Lane_Changer+0x204>)
 80058da:	681a      	ldr	r2, [r3, #0]
 80058dc:	4b6c      	ldr	r3, [pc, #432]	; (8005a90 <Lane_Changer+0x204>)
 80058de:	685b      	ldr	r3, [r3, #4]
 80058e0:	441a      	add	r2, r3
 80058e2:	4b6b      	ldr	r3, [pc, #428]	; (8005a90 <Lane_Changer+0x204>)
 80058e4:	689b      	ldr	r3, [r3, #8]
 80058e6:	441a      	add	r2, r3
 80058e8:	4b69      	ldr	r3, [pc, #420]	; (8005a90 <Lane_Changer+0x204>)
 80058ea:	68db      	ldr	r3, [r3, #12]
 80058ec:	441a      	add	r2, r3
 80058ee:	4b68      	ldr	r3, [pc, #416]	; (8005a90 <Lane_Changer+0x204>)
 80058f0:	691b      	ldr	r3, [r3, #16]
 80058f2:	4413      	add	r3, r2
 80058f4:	60fb      	str	r3, [r7, #12]
		if((sum > 250) && (sum < 1000))//ha másfél másodpercen belül van8 váltás
 80058f6:	68fb      	ldr	r3, [r7, #12]
 80058f8:	2bfa      	cmp	r3, #250	; 0xfa
 80058fa:	d90a      	bls.n	8005912 <Lane_Changer+0x86>
 80058fc:	68fb      	ldr	r3, [r7, #12]
 80058fe:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005902:	d206      	bcs.n	8005912 <Lane_Changer+0x86>
		{
			s=0;
 8005904:	4b63      	ldr	r3, [pc, #396]	; (8005a94 <Lane_Changer+0x208>)
 8005906:	f04f 0200 	mov.w	r2, #0
 800590a:	601a      	str	r2, [r3, #0]
			laneChange=3;
 800590c:	4b5b      	ldr	r3, [pc, #364]	; (8005a7c <Lane_Changer+0x1f0>)
 800590e:	2203      	movs	r2, #3
 8005910:	701a      	strb	r2, [r3, #0]
		}
		i++;
 8005912:	4b5e      	ldr	r3, [pc, #376]	; (8005a8c <Lane_Changer+0x200>)
 8005914:	681b      	ldr	r3, [r3, #0]
 8005916:	3301      	adds	r3, #1
 8005918:	4a5c      	ldr	r2, [pc, #368]	; (8005a8c <Lane_Changer+0x200>)
 800591a:	6013      	str	r3, [r2, #0]
		if(i>4) i=0;
 800591c:	4b5b      	ldr	r3, [pc, #364]	; (8005a8c <Lane_Changer+0x200>)
 800591e:	681b      	ldr	r3, [r3, #0]
 8005920:	2b04      	cmp	r3, #4
 8005922:	dd02      	ble.n	800592a <Lane_Changer+0x9e>
 8005924:	4b59      	ldr	r3, [pc, #356]	; (8005a8c <Lane_Changer+0x200>)
 8005926:	2200      	movs	r2, #0
 8005928:	601a      	str	r2, [r3, #0]
		t_stamp = t;
 800592a:	4a57      	ldr	r2, [pc, #348]	; (8005a88 <Lane_Changer+0x1fc>)
 800592c:	687b      	ldr	r3, [r7, #4]
 800592e:	6013      	str	r3, [r2, #0]
	{
 8005930:	e096      	b.n	8005a60 <Lane_Changer+0x1d4>
	}
	else if(laneChange==3)
 8005932:	4b52      	ldr	r3, [pc, #328]	; (8005a7c <Lane_Changer+0x1f0>)
 8005934:	781b      	ldrb	r3, [r3, #0]
 8005936:	2b03      	cmp	r3, #3
 8005938:	d172      	bne.n	8005a20 <Lane_Changer+0x194>
	{
		s+=fabs(v)*(t-t_prev)/1000;
 800593a:	4b56      	ldr	r3, [pc, #344]	; (8005a94 <Lane_Changer+0x208>)
 800593c:	681b      	ldr	r3, [r3, #0]
 800593e:	4618      	mov	r0, r3
 8005940:	f7fa fe22 	bl	8000588 <__aeabi_f2d>
 8005944:	4604      	mov	r4, r0
 8005946:	460d      	mov	r5, r1
 8005948:	4b53      	ldr	r3, [pc, #332]	; (8005a98 <Lane_Changer+0x20c>)
 800594a:	edd3 7a00 	vldr	s15, [r3]
 800594e:	eef0 7ae7 	vabs.f32	s15, s15
 8005952:	ee17 0a90 	vmov	r0, s15
 8005956:	f7fa fe17 	bl	8000588 <__aeabi_f2d>
 800595a:	4680      	mov	r8, r0
 800595c:	4689      	mov	r9, r1
 800595e:	4b4f      	ldr	r3, [pc, #316]	; (8005a9c <Lane_Changer+0x210>)
 8005960:	681b      	ldr	r3, [r3, #0]
 8005962:	687a      	ldr	r2, [r7, #4]
 8005964:	1ad3      	subs	r3, r2, r3
 8005966:	4618      	mov	r0, r3
 8005968:	f7fa fdec 	bl	8000544 <__aeabi_ui2d>
 800596c:	4602      	mov	r2, r0
 800596e:	460b      	mov	r3, r1
 8005970:	4640      	mov	r0, r8
 8005972:	4649      	mov	r1, r9
 8005974:	f7fa fe60 	bl	8000638 <__aeabi_dmul>
 8005978:	4602      	mov	r2, r0
 800597a:	460b      	mov	r3, r1
 800597c:	4610      	mov	r0, r2
 800597e:	4619      	mov	r1, r3
 8005980:	f04f 0200 	mov.w	r2, #0
 8005984:	4b46      	ldr	r3, [pc, #280]	; (8005aa0 <Lane_Changer+0x214>)
 8005986:	f7fa ff81 	bl	800088c <__aeabi_ddiv>
 800598a:	4602      	mov	r2, r0
 800598c:	460b      	mov	r3, r1
 800598e:	4620      	mov	r0, r4
 8005990:	4629      	mov	r1, r5
 8005992:	f7fa fc9b 	bl	80002cc <__adddf3>
 8005996:	4602      	mov	r2, r0
 8005998:	460b      	mov	r3, r1
 800599a:	4610      	mov	r0, r2
 800599c:	4619      	mov	r1, r3
 800599e:	f7fb f923 	bl	8000be8 <__aeabi_d2f>
 80059a2:	4603      	mov	r3, r0
 80059a4:	4a3b      	ldr	r2, [pc, #236]	; (8005a94 <Lane_Changer+0x208>)
 80059a6:	6013      	str	r3, [r2, #0]
		if(orientation==FORWARD)
 80059a8:	4b3e      	ldr	r3, [pc, #248]	; (8005aa4 <Lane_Changer+0x218>)
 80059aa:	781b      	ldrb	r3, [r3, #0]
 80059ac:	2b00      	cmp	r3, #0
 80059ae:	d114      	bne.n	80059da <Lane_Changer+0x14e>
		{
			TIM2->CCR1=CCR_FRONT_MAX-40;
 80059b0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80059b4:	f44f 7257 	mov.w	r2, #860	; 0x35c
 80059b8:	635a      	str	r2, [r3, #52]	; 0x34
			TIM1->CCR4=CCR_REAR_MIN;
 80059ba:	4b3b      	ldr	r3, [pc, #236]	; (8005aa8 <Lane_Changer+0x21c>)
 80059bc:	f44f 7202 	mov.w	r2, #520	; 0x208
 80059c0:	641a      	str	r2, [r3, #64]	; 0x40
			timeout=1000;
 80059c2:	4b3a      	ldr	r3, [pc, #232]	; (8005aac <Lane_Changer+0x220>)
 80059c4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80059c8:	601a      	str	r2, [r3, #0]
			laneChange=4;
 80059ca:	4b2c      	ldr	r3, [pc, #176]	; (8005a7c <Lane_Changer+0x1f0>)
 80059cc:	2204      	movs	r2, #4
 80059ce:	701a      	strb	r2, [r3, #0]
			t_stamp=t;
 80059d0:	4a2d      	ldr	r2, [pc, #180]	; (8005a88 <Lane_Changer+0x1fc>)
 80059d2:	687b      	ldr	r3, [r7, #4]
 80059d4:	6013      	str	r3, [r2, #0]
			return 1;
 80059d6:	2301      	movs	r3, #1
 80059d8:	e04a      	b.n	8005a70 <Lane_Changer+0x1e4>
		}
		else if(orientation==REVERSE && s>2000)
 80059da:	4b32      	ldr	r3, [pc, #200]	; (8005aa4 <Lane_Changer+0x218>)
 80059dc:	781b      	ldrb	r3, [r3, #0]
 80059de:	2b01      	cmp	r3, #1
 80059e0:	d13e      	bne.n	8005a60 <Lane_Changer+0x1d4>
 80059e2:	4b2c      	ldr	r3, [pc, #176]	; (8005a94 <Lane_Changer+0x208>)
 80059e4:	edd3 7a00 	vldr	s15, [r3]
 80059e8:	ed9f 7a31 	vldr	s14, [pc, #196]	; 8005ab0 <Lane_Changer+0x224>
 80059ec:	eef4 7ac7 	vcmpe.f32	s15, s14
 80059f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80059f4:	dd34      	ble.n	8005a60 <Lane_Changer+0x1d4>
		{
			TIM2->CCR1=CCR_FRONT_MIN;
 80059f6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80059fa:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80059fe:	635a      	str	r2, [r3, #52]	; 0x34
			TIM1->CCR4=CCR_REAR_MIN;
 8005a00:	4b29      	ldr	r3, [pc, #164]	; (8005aa8 <Lane_Changer+0x21c>)
 8005a02:	f44f 7202 	mov.w	r2, #520	; 0x208
 8005a06:	641a      	str	r2, [r3, #64]	; 0x40
			timeout=3000;
 8005a08:	4b28      	ldr	r3, [pc, #160]	; (8005aac <Lane_Changer+0x220>)
 8005a0a:	f640 32b8 	movw	r2, #3000	; 0xbb8
 8005a0e:	601a      	str	r2, [r3, #0]
			laneChange=4;
 8005a10:	4b1a      	ldr	r3, [pc, #104]	; (8005a7c <Lane_Changer+0x1f0>)
 8005a12:	2204      	movs	r2, #4
 8005a14:	701a      	strb	r2, [r3, #0]
			t_stamp=t;
 8005a16:	4a1c      	ldr	r2, [pc, #112]	; (8005a88 <Lane_Changer+0x1fc>)
 8005a18:	687b      	ldr	r3, [r7, #4]
 8005a1a:	6013      	str	r3, [r2, #0]
			return 1;
 8005a1c:	2301      	movs	r3, #1
 8005a1e:	e027      	b.n	8005a70 <Lane_Changer+0x1e4>
		}
	}
	else if(laneChange==4)
 8005a20:	4b16      	ldr	r3, [pc, #88]	; (8005a7c <Lane_Changer+0x1f0>)
 8005a22:	781b      	ldrb	r3, [r3, #0]
 8005a24:	2b04      	cmp	r3, #4
 8005a26:	d11b      	bne.n	8005a60 <Lane_Changer+0x1d4>
	{
		LED_Y(0);
 8005a28:	2201      	movs	r2, #1
 8005a2a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8005a2e:	4821      	ldr	r0, [pc, #132]	; (8005ab4 <Lane_Changer+0x228>)
 8005a30:	f003 fc04 	bl	800923c <HAL_GPIO_WritePin>
		v_control=SLOW_DOWN;
 8005a34:	4b20      	ldr	r3, [pc, #128]	; (8005ab8 <Lane_Changer+0x22c>)
 8005a36:	2201      	movs	r2, #1
 8005a38:	701a      	strb	r2, [r3, #0]
		if((t-t_stamp)>timeout && LINE_CNT>0)
 8005a3a:	4b13      	ldr	r3, [pc, #76]	; (8005a88 <Lane_Changer+0x1fc>)
 8005a3c:	681b      	ldr	r3, [r3, #0]
 8005a3e:	687a      	ldr	r2, [r7, #4]
 8005a40:	1ad2      	subs	r2, r2, r3
 8005a42:	4b1a      	ldr	r3, [pc, #104]	; (8005aac <Lane_Changer+0x220>)
 8005a44:	681b      	ldr	r3, [r3, #0]
 8005a46:	429a      	cmp	r2, r3
 8005a48:	d908      	bls.n	8005a5c <Lane_Changer+0x1d0>
 8005a4a:	4b0d      	ldr	r3, [pc, #52]	; (8005a80 <Lane_Changer+0x1f4>)
 8005a4c:	785b      	ldrb	r3, [r3, #1]
 8005a4e:	2b00      	cmp	r3, #0
 8005a50:	d004      	beq.n	8005a5c <Lane_Changer+0x1d0>
		{
			ignore=1;
 8005a52:	4b1a      	ldr	r3, [pc, #104]	; (8005abc <Lane_Changer+0x230>)
 8005a54:	2201      	movs	r2, #1
 8005a56:	701a      	strb	r2, [r3, #0]
			return 0;
 8005a58:	2300      	movs	r3, #0
 8005a5a:	e009      	b.n	8005a70 <Lane_Changer+0x1e4>
		}
		else return 1;
 8005a5c:	2301      	movs	r3, #1
 8005a5e:	e007      	b.n	8005a70 <Lane_Changer+0x1e4>
	}
	lineCnt_prev=LINE_CNT;
 8005a60:	4b07      	ldr	r3, [pc, #28]	; (8005a80 <Lane_Changer+0x1f4>)
 8005a62:	785a      	ldrb	r2, [r3, #1]
 8005a64:	4b07      	ldr	r3, [pc, #28]	; (8005a84 <Lane_Changer+0x1f8>)
 8005a66:	701a      	strb	r2, [r3, #0]
	t_prev=t;
 8005a68:	4a0c      	ldr	r2, [pc, #48]	; (8005a9c <Lane_Changer+0x210>)
 8005a6a:	687b      	ldr	r3, [r7, #4]
 8005a6c:	6013      	str	r3, [r2, #0]
	return 0;
 8005a6e:	2300      	movs	r3, #0
}
 8005a70:	4618      	mov	r0, r3
 8005a72:	3710      	adds	r7, #16
 8005a74:	46bd      	mov	sp, r7
 8005a76:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8005a7a:	bf00      	nop
 8005a7c:	20000350 	.word	0x20000350
 8005a80:	20000770 	.word	0x20000770
 8005a84:	20000115 	.word	0x20000115
 8005a88:	200007e8 	.word	0x200007e8
 8005a8c:	200007ec 	.word	0x200007ec
 8005a90:	20000118 	.word	0x20000118
 8005a94:	200007f0 	.word	0x200007f0
 8005a98:	20000758 	.word	0x20000758
 8005a9c:	200007f4 	.word	0x200007f4
 8005aa0:	408f4000 	.word	0x408f4000
 8005aa4:	2000034c 	.word	0x2000034c
 8005aa8:	40010000 	.word	0x40010000
 8005aac:	200007f8 	.word	0x200007f8
 8005ab0:	44fa0000 	.word	0x44fa0000
 8005ab4:	40020400 	.word	0x40020400
 8005ab8:	20000351 	.word	0x20000351
 8005abc:	2000077a 	.word	0x2000077a

08005ac0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8005ac0:	b580      	push	{r7, lr}
 8005ac2:	b084      	sub	sp, #16
 8005ac4:	af04      	add	r7, sp, #16
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8005ac6:	f001 fcad 	bl	8007424 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8005aca:	f000 f897 	bl	8005bfc <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8005ace:	f000 fdb5 	bl	800663c <MX_GPIO_Init>
  MX_DMA_Init();
 8005ad2:	f000 fd93 	bl	80065fc <MX_DMA_Init>
  MX_TIM2_Init();
 8005ad6:	f000 fa87 	bl	8005fe8 <MX_TIM2_Init>
  MX_USART1_UART_Init();
 8005ada:	f000 fd11 	bl	8006500 <MX_USART1_UART_Init>
  MX_TIM4_Init();
 8005ade:	f000 fb7b 	bl	80061d8 <MX_TIM4_Init>
  MX_ADC2_Init();
 8005ae2:	f000 f98f 	bl	8005e04 <MX_ADC2_Init>
  MX_TIM3_Init();
 8005ae6:	f000 faf5 	bl	80060d4 <MX_TIM3_Init>
  MX_UART5_Init();
 8005aea:	f000 fcdf 	bl	80064ac <MX_UART5_Init>
  MX_USART2_UART_Init();
 8005aee:	f000 fd31 	bl	8006554 <MX_USART2_UART_Init>
  MX_TIM8_Init();
 8005af2:	f000 fc3b 	bl	800636c <MX_TIM8_Init>
  MX_ADC1_Init();
 8005af6:	f000 f8f3 	bl	8005ce0 <MX_ADC1_Init>
  MX_USART3_UART_Init();
 8005afa:	f000 fd55 	bl	80065a8 <MX_USART3_UART_Init>
  MX_TIM5_Init();
 8005afe:	f000 fbe7 	bl	80062d0 <MX_TIM5_Init>
  MX_TIM1_Init();
 8005b02:	f000 f9d1 	bl	8005ea8 <MX_TIM1_Init>
  MX_TIM14_Init();
 8005b06:	f000 fcad 	bl	8006464 <MX_TIM14_Init>
  MX_TIM13_Init();
 8005b0a:	f000 fc87 	bl	800641c <MX_TIM13_Init>
  /* USER CODE BEGIN 2 */
  F4_Basic_Init(&huart1, &htim5, &htim3, &htim2, &htim1, &htim8,&htim13,&htim14);
 8005b0e:	4b2e      	ldr	r3, [pc, #184]	; (8005bc8 <main+0x108>)
 8005b10:	9303      	str	r3, [sp, #12]
 8005b12:	4b2e      	ldr	r3, [pc, #184]	; (8005bcc <main+0x10c>)
 8005b14:	9302      	str	r3, [sp, #8]
 8005b16:	4b2e      	ldr	r3, [pc, #184]	; (8005bd0 <main+0x110>)
 8005b18:	9301      	str	r3, [sp, #4]
 8005b1a:	4b2e      	ldr	r3, [pc, #184]	; (8005bd4 <main+0x114>)
 8005b1c:	9300      	str	r3, [sp, #0]
 8005b1e:	4b2e      	ldr	r3, [pc, #184]	; (8005bd8 <main+0x118>)
 8005b20:	4a2e      	ldr	r2, [pc, #184]	; (8005bdc <main+0x11c>)
 8005b22:	492f      	ldr	r1, [pc, #188]	; (8005be0 <main+0x120>)
 8005b24:	482f      	ldr	r0, [pc, #188]	; (8005be4 <main+0x124>)
 8005b26:	f7fb fa47 	bl	8000fb8 <F4_Basic_Init>
  Remote_Control_Init(&htim4, TIM_CHANNEL_3);
 8005b2a:	2108      	movs	r1, #8
 8005b2c:	482e      	ldr	r0, [pc, #184]	; (8005be8 <main+0x128>)
 8005b2e:	f000 feb7 	bl	80068a0 <Remote_Control_Init>
  Battery_Voltage_Compensate(&hadc2, &hadc1, &huart1);
 8005b32:	4a2c      	ldr	r2, [pc, #176]	; (8005be4 <main+0x124>)
 8005b34:	492d      	ldr	r1, [pc, #180]	; (8005bec <main+0x12c>)
 8005b36:	482e      	ldr	r0, [pc, #184]	; (8005bf0 <main+0x130>)
 8005b38:	f7fe fa02 	bl	8003f40 <Battery_Voltage_Compensate>

  Mode_Selector(&huart1, &huart5);
 8005b3c:	492d      	ldr	r1, [pc, #180]	; (8005bf4 <main+0x134>)
 8005b3e:	4829      	ldr	r0, [pc, #164]	; (8005be4 <main+0x124>)
 8005b40:	f7fd fe72 	bl	8003828 <Mode_Selector>
  Create_Nodes(&huart1);
 8005b44:	4827      	ldr	r0, [pc, #156]	; (8005be4 <main+0x124>)
 8005b46:	f7fb fc8d 	bl	8001464 <Create_Nodes>
  Wait_For_Start_Sigal(&huart3,&huart1);
 8005b4a:	4926      	ldr	r1, [pc, #152]	; (8005be4 <main+0x124>)
 8005b4c:	482a      	ldr	r0, [pc, #168]	; (8005bf8 <main+0x138>)
 8005b4e:	f7fd ff3b 	bl	80039c8 <Wait_For_Start_Sigal>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {/**/
	  Measure_Velocity_Task(&htim8,TICK, 4);
 8005b52:	4b23      	ldr	r3, [pc, #140]	; (8005be0 <main+0x120>)
 8005b54:	681b      	ldr	r3, [r3, #0]
 8005b56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b58:	2204      	movs	r2, #4
 8005b5a:	4619      	mov	r1, r3
 8005b5c:	481c      	ldr	r0, [pc, #112]	; (8005bd0 <main+0x110>)
 8005b5e:	f7fe fb1b 	bl	8004198 <Measure_Velocity_Task>
	  Motor_Drive_Task(&htim3, &huart1, TICK, 10);
 8005b62:	4b1f      	ldr	r3, [pc, #124]	; (8005be0 <main+0x120>)
 8005b64:	681b      	ldr	r3, [r3, #0]
 8005b66:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005b68:	230a      	movs	r3, #10
 8005b6a:	491e      	ldr	r1, [pc, #120]	; (8005be4 <main+0x124>)
 8005b6c:	481b      	ldr	r0, [pc, #108]	; (8005bdc <main+0x11c>)
 8005b6e:	f7fe fb8f 	bl	8004290 <Motor_Drive_Task>
	  Remote_Control_Task(&htim4, TIM_CHANNEL_3, &huart1, TICK, 43);
 8005b72:	4b1b      	ldr	r3, [pc, #108]	; (8005be0 <main+0x120>)
 8005b74:	681b      	ldr	r3, [r3, #0]
 8005b76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b78:	222b      	movs	r2, #43	; 0x2b
 8005b7a:	9200      	str	r2, [sp, #0]
 8005b7c:	4a19      	ldr	r2, [pc, #100]	; (8005be4 <main+0x124>)
 8005b7e:	2108      	movs	r1, #8
 8005b80:	4819      	ldr	r0, [pc, #100]	; (8005be8 <main+0x128>)
 8005b82:	f000 fea9 	bl	80068d8 <Remote_Control_Task>
	  Control_Task(&huart1,&htim14,TICK, 23);
 8005b86:	4b16      	ldr	r3, [pc, #88]	; (8005be0 <main+0x120>)
 8005b88:	681b      	ldr	r3, [r3, #0]
 8005b8a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005b8c:	2317      	movs	r3, #23
 8005b8e:	490e      	ldr	r1, [pc, #56]	; (8005bc8 <main+0x108>)
 8005b90:	4814      	ldr	r0, [pc, #80]	; (8005be4 <main+0x124>)
 8005b92:	f7fc fd7d 	bl	8002690 <Control_Task>
	  Control_Task_2(&huart1,TICK, 23);
 8005b96:	4b12      	ldr	r3, [pc, #72]	; (8005be0 <main+0x120>)
 8005b98:	681b      	ldr	r3, [r3, #0]
 8005b9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b9c:	2217      	movs	r2, #23
 8005b9e:	4619      	mov	r1, r3
 8005ba0:	4810      	ldr	r0, [pc, #64]	; (8005be4 <main+0x124>)
 8005ba2:	f7fd f985 	bl	8002eb0 <Control_Task_2>
	  Line_Track_Task(&huart5, &huart1, TICK, 4);
 8005ba6:	4b0e      	ldr	r3, [pc, #56]	; (8005be0 <main+0x120>)
 8005ba8:	681b      	ldr	r3, [r3, #0]
 8005baa:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005bac:	2304      	movs	r3, #4
 8005bae:	490d      	ldr	r1, [pc, #52]	; (8005be4 <main+0x124>)
 8005bb0:	4810      	ldr	r0, [pc, #64]	; (8005bf4 <main+0x134>)
 8005bb2:	f7fe fd55 	bl	8004660 <Line_Track_Task>
	  HDI_Read_Task(&huart1,&htim2,TICK, 200);
 8005bb6:	4b0a      	ldr	r3, [pc, #40]	; (8005be0 <main+0x120>)
 8005bb8:	681b      	ldr	r3, [r3, #0]
 8005bba:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005bbc:	23c8      	movs	r3, #200	; 0xc8
 8005bbe:	4906      	ldr	r1, [pc, #24]	; (8005bd8 <main+0x118>)
 8005bc0:	4808      	ldr	r0, [pc, #32]	; (8005be4 <main+0x124>)
 8005bc2:	f7fb fabf 	bl	8001144 <HDI_Read_Task>
	  Measure_Velocity_Task(&htim8,TICK, 4);
 8005bc6:	e7c4      	b.n	8005b52 <main+0x92>
 8005bc8:	20000a84 	.word	0x20000a84
 8005bcc:	20000a3c 	.word	0x20000a3c
 8005bd0:	200009f4 	.word	0x200009f4
 8005bd4:	2000088c 	.word	0x2000088c
 8005bd8:	200008d4 	.word	0x200008d4
 8005bdc:	2000091c 	.word	0x2000091c
 8005be0:	200009ac 	.word	0x200009ac
 8005be4:	20000b70 	.word	0x20000b70
 8005be8:	20000964 	.word	0x20000964
 8005bec:	200007fc 	.word	0x200007fc
 8005bf0:	20000844 	.word	0x20000844
 8005bf4:	20000b2c 	.word	0x20000b2c
 8005bf8:	20000bf8 	.word	0x20000bf8

08005bfc <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8005bfc:	b580      	push	{r7, lr}
 8005bfe:	b094      	sub	sp, #80	; 0x50
 8005c00:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8005c02:	f107 031c 	add.w	r3, r7, #28
 8005c06:	2234      	movs	r2, #52	; 0x34
 8005c08:	2100      	movs	r1, #0
 8005c0a:	4618      	mov	r0, r3
 8005c0c:	f007 f960 	bl	800ced0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8005c10:	f107 0308 	add.w	r3, r7, #8
 8005c14:	2200      	movs	r2, #0
 8005c16:	601a      	str	r2, [r3, #0]
 8005c18:	605a      	str	r2, [r3, #4]
 8005c1a:	609a      	str	r2, [r3, #8]
 8005c1c:	60da      	str	r2, [r3, #12]
 8005c1e:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8005c20:	2300      	movs	r3, #0
 8005c22:	607b      	str	r3, [r7, #4]
 8005c24:	4b2c      	ldr	r3, [pc, #176]	; (8005cd8 <SystemClock_Config+0xdc>)
 8005c26:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005c28:	4a2b      	ldr	r2, [pc, #172]	; (8005cd8 <SystemClock_Config+0xdc>)
 8005c2a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005c2e:	6413      	str	r3, [r2, #64]	; 0x40
 8005c30:	4b29      	ldr	r3, [pc, #164]	; (8005cd8 <SystemClock_Config+0xdc>)
 8005c32:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005c34:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005c38:	607b      	str	r3, [r7, #4]
 8005c3a:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8005c3c:	2300      	movs	r3, #0
 8005c3e:	603b      	str	r3, [r7, #0]
 8005c40:	4b26      	ldr	r3, [pc, #152]	; (8005cdc <SystemClock_Config+0xe0>)
 8005c42:	681b      	ldr	r3, [r3, #0]
 8005c44:	4a25      	ldr	r2, [pc, #148]	; (8005cdc <SystemClock_Config+0xe0>)
 8005c46:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005c4a:	6013      	str	r3, [r2, #0]
 8005c4c:	4b23      	ldr	r3, [pc, #140]	; (8005cdc <SystemClock_Config+0xe0>)
 8005c4e:	681b      	ldr	r3, [r3, #0]
 8005c50:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8005c54:	603b      	str	r3, [r7, #0]
 8005c56:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8005c58:	2301      	movs	r3, #1
 8005c5a:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8005c5c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8005c60:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8005c62:	2302      	movs	r3, #2
 8005c64:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8005c66:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8005c6a:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 4;
 8005c6c:	2304      	movs	r3, #4
 8005c6e:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 180;
 8005c70:	23b4      	movs	r3, #180	; 0xb4
 8005c72:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8005c74:	2302      	movs	r3, #2
 8005c76:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8005c78:	2302      	movs	r3, #2
 8005c7a:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8005c7c:	2302      	movs	r3, #2
 8005c7e:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8005c80:	f107 031c 	add.w	r3, r7, #28
 8005c84:	4618      	mov	r0, r3
 8005c86:	f003 febf 	bl	8009a08 <HAL_RCC_OscConfig>
 8005c8a:	4603      	mov	r3, r0
 8005c8c:	2b00      	cmp	r3, #0
 8005c8e:	d001      	beq.n	8005c94 <SystemClock_Config+0x98>
  {
    Error_Handler();
 8005c90:	f000 fe00 	bl	8006894 <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8005c94:	f003 fb1e 	bl	80092d4 <HAL_PWREx_EnableOverDrive>
 8005c98:	4603      	mov	r3, r0
 8005c9a:	2b00      	cmp	r3, #0
 8005c9c:	d001      	beq.n	8005ca2 <SystemClock_Config+0xa6>
  {
    Error_Handler();
 8005c9e:	f000 fdf9 	bl	8006894 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8005ca2:	230f      	movs	r3, #15
 8005ca4:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8005ca6:	2302      	movs	r3, #2
 8005ca8:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8005caa:	2300      	movs	r3, #0
 8005cac:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 8005cae:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 8005cb2:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8005cb4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005cb8:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8005cba:	f107 0308 	add.w	r3, r7, #8
 8005cbe:	2105      	movs	r1, #5
 8005cc0:	4618      	mov	r0, r3
 8005cc2:	f003 fb57 	bl	8009374 <HAL_RCC_ClockConfig>
 8005cc6:	4603      	mov	r3, r0
 8005cc8:	2b00      	cmp	r3, #0
 8005cca:	d001      	beq.n	8005cd0 <SystemClock_Config+0xd4>
  {
    Error_Handler();
 8005ccc:	f000 fde2 	bl	8006894 <Error_Handler>
  }
}
 8005cd0:	bf00      	nop
 8005cd2:	3750      	adds	r7, #80	; 0x50
 8005cd4:	46bd      	mov	sp, r7
 8005cd6:	bd80      	pop	{r7, pc}
 8005cd8:	40023800 	.word	0x40023800
 8005cdc:	40007000 	.word	0x40007000

08005ce0 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8005ce0:	b580      	push	{r7, lr}
 8005ce2:	b08c      	sub	sp, #48	; 0x30
 8005ce4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8005ce6:	f107 0320 	add.w	r3, r7, #32
 8005cea:	2200      	movs	r2, #0
 8005cec:	601a      	str	r2, [r3, #0]
 8005cee:	605a      	str	r2, [r3, #4]
 8005cf0:	609a      	str	r2, [r3, #8]
 8005cf2:	60da      	str	r2, [r3, #12]
  ADC_InjectionConfTypeDef sConfigInjected = {0};
 8005cf4:	463b      	mov	r3, r7
 8005cf6:	2220      	movs	r2, #32
 8005cf8:	2100      	movs	r1, #0
 8005cfa:	4618      	mov	r0, r3
 8005cfc:	f007 f8e8 	bl	800ced0 <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8005d00:	4b3c      	ldr	r3, [pc, #240]	; (8005df4 <MX_ADC1_Init+0x114>)
 8005d02:	4a3d      	ldr	r2, [pc, #244]	; (8005df8 <MX_ADC1_Init+0x118>)
 8005d04:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV6;
 8005d06:	4b3b      	ldr	r3, [pc, #236]	; (8005df4 <MX_ADC1_Init+0x114>)
 8005d08:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8005d0c:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8005d0e:	4b39      	ldr	r3, [pc, #228]	; (8005df4 <MX_ADC1_Init+0x114>)
 8005d10:	2200      	movs	r2, #0
 8005d12:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ENABLE;
 8005d14:	4b37      	ldr	r3, [pc, #220]	; (8005df4 <MX_ADC1_Init+0x114>)
 8005d16:	2201      	movs	r2, #1
 8005d18:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8005d1a:	4b36      	ldr	r3, [pc, #216]	; (8005df4 <MX_ADC1_Init+0x114>)
 8005d1c:	2200      	movs	r2, #0
 8005d1e:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8005d20:	4b34      	ldr	r3, [pc, #208]	; (8005df4 <MX_ADC1_Init+0x114>)
 8005d22:	2200      	movs	r2, #0
 8005d24:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8005d28:	4b32      	ldr	r3, [pc, #200]	; (8005df4 <MX_ADC1_Init+0x114>)
 8005d2a:	2200      	movs	r2, #0
 8005d2c:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8005d2e:	4b31      	ldr	r3, [pc, #196]	; (8005df4 <MX_ADC1_Init+0x114>)
 8005d30:	4a32      	ldr	r2, [pc, #200]	; (8005dfc <MX_ADC1_Init+0x11c>)
 8005d32:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8005d34:	4b2f      	ldr	r3, [pc, #188]	; (8005df4 <MX_ADC1_Init+0x114>)
 8005d36:	2200      	movs	r2, #0
 8005d38:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 3;
 8005d3a:	4b2e      	ldr	r3, [pc, #184]	; (8005df4 <MX_ADC1_Init+0x114>)
 8005d3c:	2203      	movs	r2, #3
 8005d3e:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8005d40:	4b2c      	ldr	r3, [pc, #176]	; (8005df4 <MX_ADC1_Init+0x114>)
 8005d42:	2200      	movs	r2, #0
 8005d44:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8005d48:	4b2a      	ldr	r3, [pc, #168]	; (8005df4 <MX_ADC1_Init+0x114>)
 8005d4a:	2201      	movs	r2, #1
 8005d4c:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8005d4e:	4829      	ldr	r0, [pc, #164]	; (8005df4 <MX_ADC1_Init+0x114>)
 8005d50:	f001 fbfe 	bl	8007550 <HAL_ADC_Init>
 8005d54:	4603      	mov	r3, r0
 8005d56:	2b00      	cmp	r3, #0
 8005d58:	d001      	beq.n	8005d5e <MX_ADC1_Init+0x7e>
  {
    Error_Handler();
 8005d5a:	f000 fd9b 	bl	8006894 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_8;
 8005d5e:	2308      	movs	r3, #8
 8005d60:	623b      	str	r3, [r7, #32]
  sConfig.Rank = 1;
 8005d62:	2301      	movs	r3, #1
 8005d64:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8005d66:	2307      	movs	r3, #7
 8005d68:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8005d6a:	f107 0320 	add.w	r3, r7, #32
 8005d6e:	4619      	mov	r1, r3
 8005d70:	4820      	ldr	r0, [pc, #128]	; (8005df4 <MX_ADC1_Init+0x114>)
 8005d72:	f001 fd9b 	bl	80078ac <HAL_ADC_ConfigChannel>
 8005d76:	4603      	mov	r3, r0
 8005d78:	2b00      	cmp	r3, #0
 8005d7a:	d001      	beq.n	8005d80 <MX_ADC1_Init+0xa0>
  {
    Error_Handler();
 8005d7c:	f000 fd8a 	bl	8006894 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Rank = 2;
 8005d80:	2302      	movs	r3, #2
 8005d82:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8005d84:	f107 0320 	add.w	r3, r7, #32
 8005d88:	4619      	mov	r1, r3
 8005d8a:	481a      	ldr	r0, [pc, #104]	; (8005df4 <MX_ADC1_Init+0x114>)
 8005d8c:	f001 fd8e 	bl	80078ac <HAL_ADC_ConfigChannel>
 8005d90:	4603      	mov	r3, r0
 8005d92:	2b00      	cmp	r3, #0
 8005d94:	d001      	beq.n	8005d9a <MX_ADC1_Init+0xba>
  {
    Error_Handler();
 8005d96:	f000 fd7d 	bl	8006894 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Rank = 3;
 8005d9a:	2303      	movs	r3, #3
 8005d9c:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8005d9e:	f107 0320 	add.w	r3, r7, #32
 8005da2:	4619      	mov	r1, r3
 8005da4:	4813      	ldr	r0, [pc, #76]	; (8005df4 <MX_ADC1_Init+0x114>)
 8005da6:	f001 fd81 	bl	80078ac <HAL_ADC_ConfigChannel>
 8005daa:	4603      	mov	r3, r0
 8005dac:	2b00      	cmp	r3, #0
 8005dae:	d001      	beq.n	8005db4 <MX_ADC1_Init+0xd4>
  {
    Error_Handler();
 8005db0:	f000 fd70 	bl	8006894 <Error_Handler>
  }

  /** Configures for the selected ADC injected channel its corresponding rank in the sequencer and its sample time
  */
  sConfigInjected.InjectedChannel = ADC_CHANNEL_8;
 8005db4:	2308      	movs	r3, #8
 8005db6:	603b      	str	r3, [r7, #0]
  sConfigInjected.InjectedRank = 1;
 8005db8:	2301      	movs	r3, #1
 8005dba:	607b      	str	r3, [r7, #4]
  sConfigInjected.InjectedNbrOfConversion = 1;
 8005dbc:	2301      	movs	r3, #1
 8005dbe:	613b      	str	r3, [r7, #16]
  sConfigInjected.InjectedSamplingTime = ADC_SAMPLETIME_3CYCLES;
 8005dc0:	2300      	movs	r3, #0
 8005dc2:	60bb      	str	r3, [r7, #8]
  sConfigInjected.ExternalTrigInjecConvEdge = ADC_EXTERNALTRIGINJECCONVEDGE_NONE;
 8005dc4:	2300      	movs	r3, #0
 8005dc6:	61fb      	str	r3, [r7, #28]
  sConfigInjected.ExternalTrigInjecConv = ADC_INJECTED_SOFTWARE_START;
 8005dc8:	4b0d      	ldr	r3, [pc, #52]	; (8005e00 <MX_ADC1_Init+0x120>)
 8005dca:	61bb      	str	r3, [r7, #24]
  sConfigInjected.AutoInjectedConv = DISABLE;
 8005dcc:	2300      	movs	r3, #0
 8005dce:	757b      	strb	r3, [r7, #21]
  sConfigInjected.InjectedDiscontinuousConvMode = DISABLE;
 8005dd0:	2300      	movs	r3, #0
 8005dd2:	753b      	strb	r3, [r7, #20]
  sConfigInjected.InjectedOffset = 0;
 8005dd4:	2300      	movs	r3, #0
 8005dd6:	60fb      	str	r3, [r7, #12]
  if (HAL_ADCEx_InjectedConfigChannel(&hadc1, &sConfigInjected) != HAL_OK)
 8005dd8:	463b      	mov	r3, r7
 8005dda:	4619      	mov	r1, r3
 8005ddc:	4805      	ldr	r0, [pc, #20]	; (8005df4 <MX_ADC1_Init+0x114>)
 8005dde:	f001 ff93 	bl	8007d08 <HAL_ADCEx_InjectedConfigChannel>
 8005de2:	4603      	mov	r3, r0
 8005de4:	2b00      	cmp	r3, #0
 8005de6:	d001      	beq.n	8005dec <MX_ADC1_Init+0x10c>
  {
    Error_Handler();
 8005de8:	f000 fd54 	bl	8006894 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8005dec:	bf00      	nop
 8005dee:	3730      	adds	r7, #48	; 0x30
 8005df0:	46bd      	mov	sp, r7
 8005df2:	bd80      	pop	{r7, pc}
 8005df4:	200007fc 	.word	0x200007fc
 8005df8:	40012000 	.word	0x40012000
 8005dfc:	0f000001 	.word	0x0f000001
 8005e00:	000f0001 	.word	0x000f0001

08005e04 <MX_ADC2_Init>:
  * @brief ADC2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC2_Init(void)
{
 8005e04:	b580      	push	{r7, lr}
 8005e06:	b084      	sub	sp, #16
 8005e08:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8005e0a:	463b      	mov	r3, r7
 8005e0c:	2200      	movs	r2, #0
 8005e0e:	601a      	str	r2, [r3, #0]
 8005e10:	605a      	str	r2, [r3, #4]
 8005e12:	609a      	str	r2, [r3, #8]
 8005e14:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC2_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc2.Instance = ADC2;
 8005e16:	4b21      	ldr	r3, [pc, #132]	; (8005e9c <MX_ADC2_Init+0x98>)
 8005e18:	4a21      	ldr	r2, [pc, #132]	; (8005ea0 <MX_ADC2_Init+0x9c>)
 8005e1a:	601a      	str	r2, [r3, #0]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV6;
 8005e1c:	4b1f      	ldr	r3, [pc, #124]	; (8005e9c <MX_ADC2_Init+0x98>)
 8005e1e:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8005e22:	605a      	str	r2, [r3, #4]
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 8005e24:	4b1d      	ldr	r3, [pc, #116]	; (8005e9c <MX_ADC2_Init+0x98>)
 8005e26:	2200      	movs	r2, #0
 8005e28:	609a      	str	r2, [r3, #8]
  hadc2.Init.ScanConvMode = DISABLE;
 8005e2a:	4b1c      	ldr	r3, [pc, #112]	; (8005e9c <MX_ADC2_Init+0x98>)
 8005e2c:	2200      	movs	r2, #0
 8005e2e:	611a      	str	r2, [r3, #16]
  hadc2.Init.ContinuousConvMode = DISABLE;
 8005e30:	4b1a      	ldr	r3, [pc, #104]	; (8005e9c <MX_ADC2_Init+0x98>)
 8005e32:	2200      	movs	r2, #0
 8005e34:	761a      	strb	r2, [r3, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 8005e36:	4b19      	ldr	r3, [pc, #100]	; (8005e9c <MX_ADC2_Init+0x98>)
 8005e38:	2200      	movs	r2, #0
 8005e3a:	f883 2020 	strb.w	r2, [r3, #32]
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8005e3e:	4b17      	ldr	r3, [pc, #92]	; (8005e9c <MX_ADC2_Init+0x98>)
 8005e40:	2200      	movs	r2, #0
 8005e42:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8005e44:	4b15      	ldr	r3, [pc, #84]	; (8005e9c <MX_ADC2_Init+0x98>)
 8005e46:	4a17      	ldr	r2, [pc, #92]	; (8005ea4 <MX_ADC2_Init+0xa0>)
 8005e48:	629a      	str	r2, [r3, #40]	; 0x28
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8005e4a:	4b14      	ldr	r3, [pc, #80]	; (8005e9c <MX_ADC2_Init+0x98>)
 8005e4c:	2200      	movs	r2, #0
 8005e4e:	60da      	str	r2, [r3, #12]
  hadc2.Init.NbrOfConversion = 1;
 8005e50:	4b12      	ldr	r3, [pc, #72]	; (8005e9c <MX_ADC2_Init+0x98>)
 8005e52:	2201      	movs	r2, #1
 8005e54:	61da      	str	r2, [r3, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 8005e56:	4b11      	ldr	r3, [pc, #68]	; (8005e9c <MX_ADC2_Init+0x98>)
 8005e58:	2200      	movs	r2, #0
 8005e5a:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8005e5e:	4b0f      	ldr	r3, [pc, #60]	; (8005e9c <MX_ADC2_Init+0x98>)
 8005e60:	2201      	movs	r2, #1
 8005e62:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8005e64:	480d      	ldr	r0, [pc, #52]	; (8005e9c <MX_ADC2_Init+0x98>)
 8005e66:	f001 fb73 	bl	8007550 <HAL_ADC_Init>
 8005e6a:	4603      	mov	r3, r0
 8005e6c:	2b00      	cmp	r3, #0
 8005e6e:	d001      	beq.n	8005e74 <MX_ADC2_Init+0x70>
  {
    Error_Handler();
 8005e70:	f000 fd10 	bl	8006894 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_13;
 8005e74:	230d      	movs	r3, #13
 8005e76:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8005e78:	2301      	movs	r3, #1
 8005e7a:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8005e7c:	2307      	movs	r3, #7
 8005e7e:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8005e80:	463b      	mov	r3, r7
 8005e82:	4619      	mov	r1, r3
 8005e84:	4805      	ldr	r0, [pc, #20]	; (8005e9c <MX_ADC2_Init+0x98>)
 8005e86:	f001 fd11 	bl	80078ac <HAL_ADC_ConfigChannel>
 8005e8a:	4603      	mov	r3, r0
 8005e8c:	2b00      	cmp	r3, #0
 8005e8e:	d001      	beq.n	8005e94 <MX_ADC2_Init+0x90>
  {
    Error_Handler();
 8005e90:	f000 fd00 	bl	8006894 <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */

  /* USER CODE END ADC2_Init 2 */

}
 8005e94:	bf00      	nop
 8005e96:	3710      	adds	r7, #16
 8005e98:	46bd      	mov	sp, r7
 8005e9a:	bd80      	pop	{r7, pc}
 8005e9c:	20000844 	.word	0x20000844
 8005ea0:	40012100 	.word	0x40012100
 8005ea4:	0f000001 	.word	0x0f000001

08005ea8 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8005ea8:	b580      	push	{r7, lr}
 8005eaa:	b096      	sub	sp, #88	; 0x58
 8005eac:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8005eae:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8005eb2:	2200      	movs	r2, #0
 8005eb4:	601a      	str	r2, [r3, #0]
 8005eb6:	605a      	str	r2, [r3, #4]
 8005eb8:	609a      	str	r2, [r3, #8]
 8005eba:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005ebc:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8005ec0:	2200      	movs	r2, #0
 8005ec2:	601a      	str	r2, [r3, #0]
 8005ec4:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8005ec6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005eca:	2200      	movs	r2, #0
 8005ecc:	601a      	str	r2, [r3, #0]
 8005ece:	605a      	str	r2, [r3, #4]
 8005ed0:	609a      	str	r2, [r3, #8]
 8005ed2:	60da      	str	r2, [r3, #12]
 8005ed4:	611a      	str	r2, [r3, #16]
 8005ed6:	615a      	str	r2, [r3, #20]
 8005ed8:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8005eda:	1d3b      	adds	r3, r7, #4
 8005edc:	2220      	movs	r2, #32
 8005ede:	2100      	movs	r1, #0
 8005ee0:	4618      	mov	r0, r3
 8005ee2:	f006 fff5 	bl	800ced0 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8005ee6:	4b3e      	ldr	r3, [pc, #248]	; (8005fe0 <MX_TIM1_Init+0x138>)
 8005ee8:	4a3e      	ldr	r2, [pc, #248]	; (8005fe4 <MX_TIM1_Init+0x13c>)
 8005eea:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 360-1;
 8005eec:	4b3c      	ldr	r3, [pc, #240]	; (8005fe0 <MX_TIM1_Init+0x138>)
 8005eee:	f240 1267 	movw	r2, #359	; 0x167
 8005ef2:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8005ef4:	4b3a      	ldr	r3, [pc, #232]	; (8005fe0 <MX_TIM1_Init+0x138>)
 8005ef6:	2200      	movs	r2, #0
 8005ef8:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 10000-1;
 8005efa:	4b39      	ldr	r3, [pc, #228]	; (8005fe0 <MX_TIM1_Init+0x138>)
 8005efc:	f242 720f 	movw	r2, #9999	; 0x270f
 8005f00:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8005f02:	4b37      	ldr	r3, [pc, #220]	; (8005fe0 <MX_TIM1_Init+0x138>)
 8005f04:	2200      	movs	r2, #0
 8005f06:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8005f08:	4b35      	ldr	r3, [pc, #212]	; (8005fe0 <MX_TIM1_Init+0x138>)
 8005f0a:	2200      	movs	r2, #0
 8005f0c:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8005f0e:	4b34      	ldr	r3, [pc, #208]	; (8005fe0 <MX_TIM1_Init+0x138>)
 8005f10:	2280      	movs	r2, #128	; 0x80
 8005f12:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8005f14:	4832      	ldr	r0, [pc, #200]	; (8005fe0 <MX_TIM1_Init+0x138>)
 8005f16:	f004 f815 	bl	8009f44 <HAL_TIM_Base_Init>
 8005f1a:	4603      	mov	r3, r0
 8005f1c:	2b00      	cmp	r3, #0
 8005f1e:	d001      	beq.n	8005f24 <MX_TIM1_Init+0x7c>
  {
    Error_Handler();
 8005f20:	f000 fcb8 	bl	8006894 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8005f24:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005f28:	64bb      	str	r3, [r7, #72]	; 0x48
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8005f2a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8005f2e:	4619      	mov	r1, r3
 8005f30:	482b      	ldr	r0, [pc, #172]	; (8005fe0 <MX_TIM1_Init+0x138>)
 8005f32:	f004 ff7f 	bl	800ae34 <HAL_TIM_ConfigClockSource>
 8005f36:	4603      	mov	r3, r0
 8005f38:	2b00      	cmp	r3, #0
 8005f3a:	d001      	beq.n	8005f40 <MX_TIM1_Init+0x98>
  {
    Error_Handler();
 8005f3c:	f000 fcaa 	bl	8006894 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8005f40:	4827      	ldr	r0, [pc, #156]	; (8005fe0 <MX_TIM1_Init+0x138>)
 8005f42:	f004 f8b7 	bl	800a0b4 <HAL_TIM_PWM_Init>
 8005f46:	4603      	mov	r3, r0
 8005f48:	2b00      	cmp	r3, #0
 8005f4a:	d001      	beq.n	8005f50 <MX_TIM1_Init+0xa8>
  {
    Error_Handler();
 8005f4c:	f000 fca2 	bl	8006894 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8005f50:	2300      	movs	r3, #0
 8005f52:	643b      	str	r3, [r7, #64]	; 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8005f54:	2300      	movs	r3, #0
 8005f56:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8005f58:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8005f5c:	4619      	mov	r1, r3
 8005f5e:	4820      	ldr	r0, [pc, #128]	; (8005fe0 <MX_TIM1_Init+0x138>)
 8005f60:	f005 fd90 	bl	800ba84 <HAL_TIMEx_MasterConfigSynchronization>
 8005f64:	4603      	mov	r3, r0
 8005f66:	2b00      	cmp	r3, #0
 8005f68:	d001      	beq.n	8005f6e <MX_TIM1_Init+0xc6>
  {
    Error_Handler();
 8005f6a:	f000 fc93 	bl	8006894 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8005f6e:	2360      	movs	r3, #96	; 0x60
 8005f70:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigOC.Pulse = 750-1;
 8005f72:	f240 23ed 	movw	r3, #749	; 0x2ed
 8005f76:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8005f78:	2300      	movs	r3, #0
 8005f7a:	62fb      	str	r3, [r7, #44]	; 0x2c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8005f7c:	2300      	movs	r3, #0
 8005f7e:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8005f80:	2300      	movs	r3, #0
 8005f82:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8005f84:	2300      	movs	r3, #0
 8005f86:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8005f88:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005f8c:	220c      	movs	r2, #12
 8005f8e:	4619      	mov	r1, r3
 8005f90:	4813      	ldr	r0, [pc, #76]	; (8005fe0 <MX_TIM1_Init+0x138>)
 8005f92:	f004 fe8d 	bl	800acb0 <HAL_TIM_PWM_ConfigChannel>
 8005f96:	4603      	mov	r3, r0
 8005f98:	2b00      	cmp	r3, #0
 8005f9a:	d001      	beq.n	8005fa0 <MX_TIM1_Init+0xf8>
  {
    Error_Handler();
 8005f9c:	f000 fc7a 	bl	8006894 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8005fa0:	2300      	movs	r3, #0
 8005fa2:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8005fa4:	2300      	movs	r3, #0
 8005fa6:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8005fa8:	2300      	movs	r3, #0
 8005faa:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8005fac:	2300      	movs	r3, #0
 8005fae:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8005fb0:	2300      	movs	r3, #0
 8005fb2:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8005fb4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8005fb8:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8005fba:	2300      	movs	r3, #0
 8005fbc:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8005fbe:	1d3b      	adds	r3, r7, #4
 8005fc0:	4619      	mov	r1, r3
 8005fc2:	4807      	ldr	r0, [pc, #28]	; (8005fe0 <MX_TIM1_Init+0x138>)
 8005fc4:	f005 fdda 	bl	800bb7c <HAL_TIMEx_ConfigBreakDeadTime>
 8005fc8:	4603      	mov	r3, r0
 8005fca:	2b00      	cmp	r3, #0
 8005fcc:	d001      	beq.n	8005fd2 <MX_TIM1_Init+0x12a>
  {
    Error_Handler();
 8005fce:	f000 fc61 	bl	8006894 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8005fd2:	4803      	ldr	r0, [pc, #12]	; (8005fe0 <MX_TIM1_Init+0x138>)
 8005fd4:	f000 ff24 	bl	8006e20 <HAL_TIM_MspPostInit>

}
 8005fd8:	bf00      	nop
 8005fda:	3758      	adds	r7, #88	; 0x58
 8005fdc:	46bd      	mov	sp, r7
 8005fde:	bd80      	pop	{r7, pc}
 8005fe0:	2000088c 	.word	0x2000088c
 8005fe4:	40010000 	.word	0x40010000

08005fe8 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8005fe8:	b580      	push	{r7, lr}
 8005fea:	b08e      	sub	sp, #56	; 0x38
 8005fec:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8005fee:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8005ff2:	2200      	movs	r2, #0
 8005ff4:	601a      	str	r2, [r3, #0]
 8005ff6:	605a      	str	r2, [r3, #4]
 8005ff8:	609a      	str	r2, [r3, #8]
 8005ffa:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005ffc:	f107 0320 	add.w	r3, r7, #32
 8006000:	2200      	movs	r2, #0
 8006002:	601a      	str	r2, [r3, #0]
 8006004:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8006006:	1d3b      	adds	r3, r7, #4
 8006008:	2200      	movs	r2, #0
 800600a:	601a      	str	r2, [r3, #0]
 800600c:	605a      	str	r2, [r3, #4]
 800600e:	609a      	str	r2, [r3, #8]
 8006010:	60da      	str	r2, [r3, #12]
 8006012:	611a      	str	r2, [r3, #16]
 8006014:	615a      	str	r2, [r3, #20]
 8006016:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8006018:	4b2d      	ldr	r3, [pc, #180]	; (80060d0 <MX_TIM2_Init+0xe8>)
 800601a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800601e:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 90-1;
 8006020:	4b2b      	ldr	r3, [pc, #172]	; (80060d0 <MX_TIM2_Init+0xe8>)
 8006022:	2259      	movs	r2, #89	; 0x59
 8006024:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8006026:	4b2a      	ldr	r3, [pc, #168]	; (80060d0 <MX_TIM2_Init+0xe8>)
 8006028:	2200      	movs	r2, #0
 800602a:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 10000-1;
 800602c:	4b28      	ldr	r3, [pc, #160]	; (80060d0 <MX_TIM2_Init+0xe8>)
 800602e:	f242 720f 	movw	r2, #9999	; 0x270f
 8006032:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8006034:	4b26      	ldr	r3, [pc, #152]	; (80060d0 <MX_TIM2_Init+0xe8>)
 8006036:	2200      	movs	r2, #0
 8006038:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800603a:	4b25      	ldr	r3, [pc, #148]	; (80060d0 <MX_TIM2_Init+0xe8>)
 800603c:	2280      	movs	r2, #128	; 0x80
 800603e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8006040:	4823      	ldr	r0, [pc, #140]	; (80060d0 <MX_TIM2_Init+0xe8>)
 8006042:	f003 ff7f 	bl	8009f44 <HAL_TIM_Base_Init>
 8006046:	4603      	mov	r3, r0
 8006048:	2b00      	cmp	r3, #0
 800604a:	d001      	beq.n	8006050 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 800604c:	f000 fc22 	bl	8006894 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8006050:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8006054:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8006056:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800605a:	4619      	mov	r1, r3
 800605c:	481c      	ldr	r0, [pc, #112]	; (80060d0 <MX_TIM2_Init+0xe8>)
 800605e:	f004 fee9 	bl	800ae34 <HAL_TIM_ConfigClockSource>
 8006062:	4603      	mov	r3, r0
 8006064:	2b00      	cmp	r3, #0
 8006066:	d001      	beq.n	800606c <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 8006068:	f000 fc14 	bl	8006894 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 800606c:	4818      	ldr	r0, [pc, #96]	; (80060d0 <MX_TIM2_Init+0xe8>)
 800606e:	f004 f821 	bl	800a0b4 <HAL_TIM_PWM_Init>
 8006072:	4603      	mov	r3, r0
 8006074:	2b00      	cmp	r3, #0
 8006076:	d001      	beq.n	800607c <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 8006078:	f000 fc0c 	bl	8006894 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800607c:	2300      	movs	r3, #0
 800607e:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8006080:	2300      	movs	r3, #0
 8006082:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8006084:	f107 0320 	add.w	r3, r7, #32
 8006088:	4619      	mov	r1, r3
 800608a:	4811      	ldr	r0, [pc, #68]	; (80060d0 <MX_TIM2_Init+0xe8>)
 800608c:	f005 fcfa 	bl	800ba84 <HAL_TIMEx_MasterConfigSynchronization>
 8006090:	4603      	mov	r3, r0
 8006092:	2b00      	cmp	r3, #0
 8006094:	d001      	beq.n	800609a <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 8006096:	f000 fbfd 	bl	8006894 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800609a:	2360      	movs	r3, #96	; 0x60
 800609c:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 750-1;
 800609e:	f240 23ed 	movw	r3, #749	; 0x2ed
 80060a2:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80060a4:	2300      	movs	r3, #0
 80060a6:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80060a8:	2300      	movs	r3, #0
 80060aa:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80060ac:	1d3b      	adds	r3, r7, #4
 80060ae:	2200      	movs	r2, #0
 80060b0:	4619      	mov	r1, r3
 80060b2:	4807      	ldr	r0, [pc, #28]	; (80060d0 <MX_TIM2_Init+0xe8>)
 80060b4:	f004 fdfc 	bl	800acb0 <HAL_TIM_PWM_ConfigChannel>
 80060b8:	4603      	mov	r3, r0
 80060ba:	2b00      	cmp	r3, #0
 80060bc:	d001      	beq.n	80060c2 <MX_TIM2_Init+0xda>
  {
    Error_Handler();
 80060be:	f000 fbe9 	bl	8006894 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 80060c2:	4803      	ldr	r0, [pc, #12]	; (80060d0 <MX_TIM2_Init+0xe8>)
 80060c4:	f000 feac 	bl	8006e20 <HAL_TIM_MspPostInit>

}
 80060c8:	bf00      	nop
 80060ca:	3738      	adds	r7, #56	; 0x38
 80060cc:	46bd      	mov	sp, r7
 80060ce:	bd80      	pop	{r7, pc}
 80060d0:	200008d4 	.word	0x200008d4

080060d4 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 80060d4:	b580      	push	{r7, lr}
 80060d6:	b08e      	sub	sp, #56	; 0x38
 80060d8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80060da:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80060de:	2200      	movs	r2, #0
 80060e0:	601a      	str	r2, [r3, #0]
 80060e2:	605a      	str	r2, [r3, #4]
 80060e4:	609a      	str	r2, [r3, #8]
 80060e6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80060e8:	f107 0320 	add.w	r3, r7, #32
 80060ec:	2200      	movs	r2, #0
 80060ee:	601a      	str	r2, [r3, #0]
 80060f0:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80060f2:	1d3b      	adds	r3, r7, #4
 80060f4:	2200      	movs	r2, #0
 80060f6:	601a      	str	r2, [r3, #0]
 80060f8:	605a      	str	r2, [r3, #4]
 80060fa:	609a      	str	r2, [r3, #8]
 80060fc:	60da      	str	r2, [r3, #12]
 80060fe:	611a      	str	r2, [r3, #16]
 8006100:	615a      	str	r2, [r3, #20]
 8006102:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8006104:	4b32      	ldr	r3, [pc, #200]	; (80061d0 <MX_TIM3_Init+0xfc>)
 8006106:	4a33      	ldr	r2, [pc, #204]	; (80061d4 <MX_TIM3_Init+0x100>)
 8006108:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 2-1;
 800610a:	4b31      	ldr	r3, [pc, #196]	; (80061d0 <MX_TIM3_Init+0xfc>)
 800610c:	2201      	movs	r2, #1
 800610e:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED3;
 8006110:	4b2f      	ldr	r3, [pc, #188]	; (80061d0 <MX_TIM3_Init+0xfc>)
 8006112:	2260      	movs	r2, #96	; 0x60
 8006114:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 1000-1;
 8006116:	4b2e      	ldr	r3, [pc, #184]	; (80061d0 <MX_TIM3_Init+0xfc>)
 8006118:	f240 32e7 	movw	r2, #999	; 0x3e7
 800611c:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800611e:	4b2c      	ldr	r3, [pc, #176]	; (80061d0 <MX_TIM3_Init+0xfc>)
 8006120:	2200      	movs	r2, #0
 8006122:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8006124:	4b2a      	ldr	r3, [pc, #168]	; (80061d0 <MX_TIM3_Init+0xfc>)
 8006126:	2200      	movs	r2, #0
 8006128:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800612a:	4829      	ldr	r0, [pc, #164]	; (80061d0 <MX_TIM3_Init+0xfc>)
 800612c:	f003 ff0a 	bl	8009f44 <HAL_TIM_Base_Init>
 8006130:	4603      	mov	r3, r0
 8006132:	2b00      	cmp	r3, #0
 8006134:	d001      	beq.n	800613a <MX_TIM3_Init+0x66>
  {
    Error_Handler();
 8006136:	f000 fbad 	bl	8006894 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800613a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800613e:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8006140:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8006144:	4619      	mov	r1, r3
 8006146:	4822      	ldr	r0, [pc, #136]	; (80061d0 <MX_TIM3_Init+0xfc>)
 8006148:	f004 fe74 	bl	800ae34 <HAL_TIM_ConfigClockSource>
 800614c:	4603      	mov	r3, r0
 800614e:	2b00      	cmp	r3, #0
 8006150:	d001      	beq.n	8006156 <MX_TIM3_Init+0x82>
  {
    Error_Handler();
 8006152:	f000 fb9f 	bl	8006894 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8006156:	481e      	ldr	r0, [pc, #120]	; (80061d0 <MX_TIM3_Init+0xfc>)
 8006158:	f003 ffac 	bl	800a0b4 <HAL_TIM_PWM_Init>
 800615c:	4603      	mov	r3, r0
 800615e:	2b00      	cmp	r3, #0
 8006160:	d001      	beq.n	8006166 <MX_TIM3_Init+0x92>
  {
    Error_Handler();
 8006162:	f000 fb97 	bl	8006894 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8006166:	2300      	movs	r3, #0
 8006168:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800616a:	2300      	movs	r3, #0
 800616c:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800616e:	f107 0320 	add.w	r3, r7, #32
 8006172:	4619      	mov	r1, r3
 8006174:	4816      	ldr	r0, [pc, #88]	; (80061d0 <MX_TIM3_Init+0xfc>)
 8006176:	f005 fc85 	bl	800ba84 <HAL_TIMEx_MasterConfigSynchronization>
 800617a:	4603      	mov	r3, r0
 800617c:	2b00      	cmp	r3, #0
 800617e:	d001      	beq.n	8006184 <MX_TIM3_Init+0xb0>
  {
    Error_Handler();
 8006180:	f000 fb88 	bl	8006894 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8006184:	2360      	movs	r3, #96	; 0x60
 8006186:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8006188:	2300      	movs	r3, #0
 800618a:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800618c:	2300      	movs	r3, #0
 800618e:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8006190:	2300      	movs	r3, #0
 8006192:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8006194:	1d3b      	adds	r3, r7, #4
 8006196:	2200      	movs	r2, #0
 8006198:	4619      	mov	r1, r3
 800619a:	480d      	ldr	r0, [pc, #52]	; (80061d0 <MX_TIM3_Init+0xfc>)
 800619c:	f004 fd88 	bl	800acb0 <HAL_TIM_PWM_ConfigChannel>
 80061a0:	4603      	mov	r3, r0
 80061a2:	2b00      	cmp	r3, #0
 80061a4:	d001      	beq.n	80061aa <MX_TIM3_Init+0xd6>
  {
    Error_Handler();
 80061a6:	f000 fb75 	bl	8006894 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80061aa:	1d3b      	adds	r3, r7, #4
 80061ac:	2204      	movs	r2, #4
 80061ae:	4619      	mov	r1, r3
 80061b0:	4807      	ldr	r0, [pc, #28]	; (80061d0 <MX_TIM3_Init+0xfc>)
 80061b2:	f004 fd7d 	bl	800acb0 <HAL_TIM_PWM_ConfigChannel>
 80061b6:	4603      	mov	r3, r0
 80061b8:	2b00      	cmp	r3, #0
 80061ba:	d001      	beq.n	80061c0 <MX_TIM3_Init+0xec>
  {
    Error_Handler();
 80061bc:	f000 fb6a 	bl	8006894 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 80061c0:	4803      	ldr	r0, [pc, #12]	; (80061d0 <MX_TIM3_Init+0xfc>)
 80061c2:	f000 fe2d 	bl	8006e20 <HAL_TIM_MspPostInit>

}
 80061c6:	bf00      	nop
 80061c8:	3738      	adds	r7, #56	; 0x38
 80061ca:	46bd      	mov	sp, r7
 80061cc:	bd80      	pop	{r7, pc}
 80061ce:	bf00      	nop
 80061d0:	2000091c 	.word	0x2000091c
 80061d4:	40000400 	.word	0x40000400

080061d8 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 80061d8:	b580      	push	{r7, lr}
 80061da:	b08a      	sub	sp, #40	; 0x28
 80061dc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80061de:	f107 0318 	add.w	r3, r7, #24
 80061e2:	2200      	movs	r2, #0
 80061e4:	601a      	str	r2, [r3, #0]
 80061e6:	605a      	str	r2, [r3, #4]
 80061e8:	609a      	str	r2, [r3, #8]
 80061ea:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80061ec:	f107 0310 	add.w	r3, r7, #16
 80061f0:	2200      	movs	r2, #0
 80061f2:	601a      	str	r2, [r3, #0]
 80061f4:	605a      	str	r2, [r3, #4]
  TIM_IC_InitTypeDef sConfigIC = {0};
 80061f6:	463b      	mov	r3, r7
 80061f8:	2200      	movs	r2, #0
 80061fa:	601a      	str	r2, [r3, #0]
 80061fc:	605a      	str	r2, [r3, #4]
 80061fe:	609a      	str	r2, [r3, #8]
 8006200:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8006202:	4b31      	ldr	r3, [pc, #196]	; (80062c8 <MX_TIM4_Init+0xf0>)
 8006204:	4a31      	ldr	r2, [pc, #196]	; (80062cc <MX_TIM4_Init+0xf4>)
 8006206:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 800-1;
 8006208:	4b2f      	ldr	r3, [pc, #188]	; (80062c8 <MX_TIM4_Init+0xf0>)
 800620a:	f240 321f 	movw	r2, #799	; 0x31f
 800620e:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8006210:	4b2d      	ldr	r3, [pc, #180]	; (80062c8 <MX_TIM4_Init+0xf0>)
 8006212:	2200      	movs	r2, #0
 8006214:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65536-1;
 8006216:	4b2c      	ldr	r3, [pc, #176]	; (80062c8 <MX_TIM4_Init+0xf0>)
 8006218:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800621c:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800621e:	4b2a      	ldr	r3, [pc, #168]	; (80062c8 <MX_TIM4_Init+0xf0>)
 8006220:	2200      	movs	r2, #0
 8006222:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8006224:	4b28      	ldr	r3, [pc, #160]	; (80062c8 <MX_TIM4_Init+0xf0>)
 8006226:	2280      	movs	r2, #128	; 0x80
 8006228:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 800622a:	4827      	ldr	r0, [pc, #156]	; (80062c8 <MX_TIM4_Init+0xf0>)
 800622c:	f003 fe8a 	bl	8009f44 <HAL_TIM_Base_Init>
 8006230:	4603      	mov	r3, r0
 8006232:	2b00      	cmp	r3, #0
 8006234:	d001      	beq.n	800623a <MX_TIM4_Init+0x62>
  {
    Error_Handler();
 8006236:	f000 fb2d 	bl	8006894 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800623a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800623e:	61bb      	str	r3, [r7, #24]
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8006240:	f107 0318 	add.w	r3, r7, #24
 8006244:	4619      	mov	r1, r3
 8006246:	4820      	ldr	r0, [pc, #128]	; (80062c8 <MX_TIM4_Init+0xf0>)
 8006248:	f004 fdf4 	bl	800ae34 <HAL_TIM_ConfigClockSource>
 800624c:	4603      	mov	r3, r0
 800624e:	2b00      	cmp	r3, #0
 8006250:	d001      	beq.n	8006256 <MX_TIM4_Init+0x7e>
  {
    Error_Handler();
 8006252:	f000 fb1f 	bl	8006894 <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim4) != HAL_OK)
 8006256:	481c      	ldr	r0, [pc, #112]	; (80062c8 <MX_TIM4_Init+0xf0>)
 8006258:	f004 f84e 	bl	800a2f8 <HAL_TIM_IC_Init>
 800625c:	4603      	mov	r3, r0
 800625e:	2b00      	cmp	r3, #0
 8006260:	d001      	beq.n	8006266 <MX_TIM4_Init+0x8e>
  {
    Error_Handler();
 8006262:	f000 fb17 	bl	8006894 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8006266:	2300      	movs	r3, #0
 8006268:	613b      	str	r3, [r7, #16]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800626a:	2300      	movs	r3, #0
 800626c:	617b      	str	r3, [r7, #20]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 800626e:	f107 0310 	add.w	r3, r7, #16
 8006272:	4619      	mov	r1, r3
 8006274:	4814      	ldr	r0, [pc, #80]	; (80062c8 <MX_TIM4_Init+0xf0>)
 8006276:	f005 fc05 	bl	800ba84 <HAL_TIMEx_MasterConfigSynchronization>
 800627a:	4603      	mov	r3, r0
 800627c:	2b00      	cmp	r3, #0
 800627e:	d001      	beq.n	8006284 <MX_TIM4_Init+0xac>
  {
    Error_Handler();
 8006280:	f000 fb08 	bl	8006894 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_BOTHEDGE;
 8006284:	230a      	movs	r3, #10
 8006286:	603b      	str	r3, [r7, #0]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 8006288:	2301      	movs	r3, #1
 800628a:	607b      	str	r3, [r7, #4]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 800628c:	2300      	movs	r3, #0
 800628e:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICFilter = 0;
 8006290:	2300      	movs	r3, #0
 8006292:	60fb      	str	r3, [r7, #12]
  if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_3) != HAL_OK)
 8006294:	463b      	mov	r3, r7
 8006296:	2208      	movs	r2, #8
 8006298:	4619      	mov	r1, r3
 800629a:	480b      	ldr	r0, [pc, #44]	; (80062c8 <MX_TIM4_Init+0xf0>)
 800629c:	f004 fc6c 	bl	800ab78 <HAL_TIM_IC_ConfigChannel>
 80062a0:	4603      	mov	r3, r0
 80062a2:	2b00      	cmp	r3, #0
 80062a4:	d001      	beq.n	80062aa <MX_TIM4_Init+0xd2>
  {
    Error_Handler();
 80062a6:	f000 faf5 	bl	8006894 <Error_Handler>
  }
  if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_4) != HAL_OK)
 80062aa:	463b      	mov	r3, r7
 80062ac:	220c      	movs	r2, #12
 80062ae:	4619      	mov	r1, r3
 80062b0:	4805      	ldr	r0, [pc, #20]	; (80062c8 <MX_TIM4_Init+0xf0>)
 80062b2:	f004 fc61 	bl	800ab78 <HAL_TIM_IC_ConfigChannel>
 80062b6:	4603      	mov	r3, r0
 80062b8:	2b00      	cmp	r3, #0
 80062ba:	d001      	beq.n	80062c0 <MX_TIM4_Init+0xe8>
  {
    Error_Handler();
 80062bc:	f000 faea 	bl	8006894 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 80062c0:	bf00      	nop
 80062c2:	3728      	adds	r7, #40	; 0x28
 80062c4:	46bd      	mov	sp, r7
 80062c6:	bd80      	pop	{r7, pc}
 80062c8:	20000964 	.word	0x20000964
 80062cc:	40000800 	.word	0x40000800

080062d0 <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 80062d0:	b580      	push	{r7, lr}
 80062d2:	b086      	sub	sp, #24
 80062d4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80062d6:	f107 0308 	add.w	r3, r7, #8
 80062da:	2200      	movs	r2, #0
 80062dc:	601a      	str	r2, [r3, #0]
 80062de:	605a      	str	r2, [r3, #4]
 80062e0:	609a      	str	r2, [r3, #8]
 80062e2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80062e4:	463b      	mov	r3, r7
 80062e6:	2200      	movs	r2, #0
 80062e8:	601a      	str	r2, [r3, #0]
 80062ea:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 80062ec:	4b1d      	ldr	r3, [pc, #116]	; (8006364 <MX_TIM5_Init+0x94>)
 80062ee:	4a1e      	ldr	r2, [pc, #120]	; (8006368 <MX_TIM5_Init+0x98>)
 80062f0:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 45000-1;
 80062f2:	4b1c      	ldr	r3, [pc, #112]	; (8006364 <MX_TIM5_Init+0x94>)
 80062f4:	f64a 72c7 	movw	r2, #44999	; 0xafc7
 80062f8:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 80062fa:	4b1a      	ldr	r3, [pc, #104]	; (8006364 <MX_TIM5_Init+0x94>)
 80062fc:	2200      	movs	r2, #0
 80062fe:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 8006300:	4b18      	ldr	r3, [pc, #96]	; (8006364 <MX_TIM5_Init+0x94>)
 8006302:	f04f 32ff 	mov.w	r2, #4294967295
 8006306:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8006308:	4b16      	ldr	r3, [pc, #88]	; (8006364 <MX_TIM5_Init+0x94>)
 800630a:	2200      	movs	r2, #0
 800630c:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800630e:	4b15      	ldr	r3, [pc, #84]	; (8006364 <MX_TIM5_Init+0x94>)
 8006310:	2280      	movs	r2, #128	; 0x80
 8006312:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 8006314:	4813      	ldr	r0, [pc, #76]	; (8006364 <MX_TIM5_Init+0x94>)
 8006316:	f003 fe15 	bl	8009f44 <HAL_TIM_Base_Init>
 800631a:	4603      	mov	r3, r0
 800631c:	2b00      	cmp	r3, #0
 800631e:	d001      	beq.n	8006324 <MX_TIM5_Init+0x54>
  {
    Error_Handler();
 8006320:	f000 fab8 	bl	8006894 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8006324:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8006328:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 800632a:	f107 0308 	add.w	r3, r7, #8
 800632e:	4619      	mov	r1, r3
 8006330:	480c      	ldr	r0, [pc, #48]	; (8006364 <MX_TIM5_Init+0x94>)
 8006332:	f004 fd7f 	bl	800ae34 <HAL_TIM_ConfigClockSource>
 8006336:	4603      	mov	r3, r0
 8006338:	2b00      	cmp	r3, #0
 800633a:	d001      	beq.n	8006340 <MX_TIM5_Init+0x70>
  {
    Error_Handler();
 800633c:	f000 faaa 	bl	8006894 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8006340:	2300      	movs	r3, #0
 8006342:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8006344:	2300      	movs	r3, #0
 8006346:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8006348:	463b      	mov	r3, r7
 800634a:	4619      	mov	r1, r3
 800634c:	4805      	ldr	r0, [pc, #20]	; (8006364 <MX_TIM5_Init+0x94>)
 800634e:	f005 fb99 	bl	800ba84 <HAL_TIMEx_MasterConfigSynchronization>
 8006352:	4603      	mov	r3, r0
 8006354:	2b00      	cmp	r3, #0
 8006356:	d001      	beq.n	800635c <MX_TIM5_Init+0x8c>
  {
    Error_Handler();
 8006358:	f000 fa9c 	bl	8006894 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 800635c:	bf00      	nop
 800635e:	3718      	adds	r7, #24
 8006360:	46bd      	mov	sp, r7
 8006362:	bd80      	pop	{r7, pc}
 8006364:	200009ac 	.word	0x200009ac
 8006368:	40000c00 	.word	0x40000c00

0800636c <MX_TIM8_Init>:
  * @brief TIM8 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM8_Init(void)
{
 800636c:	b580      	push	{r7, lr}
 800636e:	b08c      	sub	sp, #48	; 0x30
 8006370:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM8_Init 0 */

  /* USER CODE END TIM8_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8006372:	f107 030c 	add.w	r3, r7, #12
 8006376:	2224      	movs	r2, #36	; 0x24
 8006378:	2100      	movs	r1, #0
 800637a:	4618      	mov	r0, r3
 800637c:	f006 fda8 	bl	800ced0 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8006380:	1d3b      	adds	r3, r7, #4
 8006382:	2200      	movs	r2, #0
 8006384:	601a      	str	r2, [r3, #0]
 8006386:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM8_Init 1 */

  /* USER CODE END TIM8_Init 1 */
  htim8.Instance = TIM8;
 8006388:	4b22      	ldr	r3, [pc, #136]	; (8006414 <MX_TIM8_Init+0xa8>)
 800638a:	4a23      	ldr	r2, [pc, #140]	; (8006418 <MX_TIM8_Init+0xac>)
 800638c:	601a      	str	r2, [r3, #0]
  htim8.Init.Prescaler = 0;
 800638e:	4b21      	ldr	r3, [pc, #132]	; (8006414 <MX_TIM8_Init+0xa8>)
 8006390:	2200      	movs	r2, #0
 8006392:	605a      	str	r2, [r3, #4]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8006394:	4b1f      	ldr	r3, [pc, #124]	; (8006414 <MX_TIM8_Init+0xa8>)
 8006396:	2200      	movs	r2, #0
 8006398:	609a      	str	r2, [r3, #8]
  htim8.Init.Period = 65535;
 800639a:	4b1e      	ldr	r3, [pc, #120]	; (8006414 <MX_TIM8_Init+0xa8>)
 800639c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80063a0:	60da      	str	r2, [r3, #12]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80063a2:	4b1c      	ldr	r3, [pc, #112]	; (8006414 <MX_TIM8_Init+0xa8>)
 80063a4:	2200      	movs	r2, #0
 80063a6:	611a      	str	r2, [r3, #16]
  htim8.Init.RepetitionCounter = 0;
 80063a8:	4b1a      	ldr	r3, [pc, #104]	; (8006414 <MX_TIM8_Init+0xa8>)
 80063aa:	2200      	movs	r2, #0
 80063ac:	615a      	str	r2, [r3, #20]
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80063ae:	4b19      	ldr	r3, [pc, #100]	; (8006414 <MX_TIM8_Init+0xa8>)
 80063b0:	2280      	movs	r2, #128	; 0x80
 80063b2:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 80063b4:	2303      	movs	r3, #3
 80063b6:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 80063b8:	2300      	movs	r3, #0
 80063ba:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 80063bc:	2301      	movs	r3, #1
 80063be:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 80063c0:	2300      	movs	r3, #0
 80063c2:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 12;
 80063c4:	230c      	movs	r3, #12
 80063c6:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 80063c8:	2300      	movs	r3, #0
 80063ca:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 80063cc:	2301      	movs	r3, #1
 80063ce:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 80063d0:	2300      	movs	r3, #0
 80063d2:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 12;
 80063d4:	230c      	movs	r3, #12
 80063d6:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim8, &sConfig) != HAL_OK)
 80063d8:	f107 030c 	add.w	r3, r7, #12
 80063dc:	4619      	mov	r1, r3
 80063de:	480d      	ldr	r0, [pc, #52]	; (8006414 <MX_TIM8_Init+0xa8>)
 80063e0:	f004 f98e 	bl	800a700 <HAL_TIM_Encoder_Init>
 80063e4:	4603      	mov	r3, r0
 80063e6:	2b00      	cmp	r3, #0
 80063e8:	d001      	beq.n	80063ee <MX_TIM8_Init+0x82>
  {
    Error_Handler();
 80063ea:	f000 fa53 	bl	8006894 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80063ee:	2300      	movs	r3, #0
 80063f0:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80063f2:	2300      	movs	r3, #0
 80063f4:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 80063f6:	1d3b      	adds	r3, r7, #4
 80063f8:	4619      	mov	r1, r3
 80063fa:	4806      	ldr	r0, [pc, #24]	; (8006414 <MX_TIM8_Init+0xa8>)
 80063fc:	f005 fb42 	bl	800ba84 <HAL_TIMEx_MasterConfigSynchronization>
 8006400:	4603      	mov	r3, r0
 8006402:	2b00      	cmp	r3, #0
 8006404:	d001      	beq.n	800640a <MX_TIM8_Init+0x9e>
  {
    Error_Handler();
 8006406:	f000 fa45 	bl	8006894 <Error_Handler>
  }
  /* USER CODE BEGIN TIM8_Init 2 */

  /* USER CODE END TIM8_Init 2 */

}
 800640a:	bf00      	nop
 800640c:	3730      	adds	r7, #48	; 0x30
 800640e:	46bd      	mov	sp, r7
 8006410:	bd80      	pop	{r7, pc}
 8006412:	bf00      	nop
 8006414:	200009f4 	.word	0x200009f4
 8006418:	40010400 	.word	0x40010400

0800641c <MX_TIM13_Init>:
  * @brief TIM13 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM13_Init(void)
{
 800641c:	b580      	push	{r7, lr}
 800641e:	af00      	add	r7, sp, #0
  /* USER CODE END TIM13_Init 0 */

  /* USER CODE BEGIN TIM13_Init 1 */

  /* USER CODE END TIM13_Init 1 */
  htim13.Instance = TIM13;
 8006420:	4b0e      	ldr	r3, [pc, #56]	; (800645c <MX_TIM13_Init+0x40>)
 8006422:	4a0f      	ldr	r2, [pc, #60]	; (8006460 <MX_TIM13_Init+0x44>)
 8006424:	601a      	str	r2, [r3, #0]
  htim13.Init.Prescaler = 45000-1;
 8006426:	4b0d      	ldr	r3, [pc, #52]	; (800645c <MX_TIM13_Init+0x40>)
 8006428:	f64a 72c7 	movw	r2, #44999	; 0xafc7
 800642c:	605a      	str	r2, [r3, #4]
  htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 800642e:	4b0b      	ldr	r3, [pc, #44]	; (800645c <MX_TIM13_Init+0x40>)
 8006430:	2200      	movs	r2, #0
 8006432:	609a      	str	r2, [r3, #8]
  htim13.Init.Period = 65535;
 8006434:	4b09      	ldr	r3, [pc, #36]	; (800645c <MX_TIM13_Init+0x40>)
 8006436:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800643a:	60da      	str	r2, [r3, #12]
  htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800643c:	4b07      	ldr	r3, [pc, #28]	; (800645c <MX_TIM13_Init+0x40>)
 800643e:	2200      	movs	r2, #0
 8006440:	611a      	str	r2, [r3, #16]
  htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8006442:	4b06      	ldr	r3, [pc, #24]	; (800645c <MX_TIM13_Init+0x40>)
 8006444:	2280      	movs	r2, #128	; 0x80
 8006446:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 8006448:	4804      	ldr	r0, [pc, #16]	; (800645c <MX_TIM13_Init+0x40>)
 800644a:	f003 fd7b 	bl	8009f44 <HAL_TIM_Base_Init>
 800644e:	4603      	mov	r3, r0
 8006450:	2b00      	cmp	r3, #0
 8006452:	d001      	beq.n	8006458 <MX_TIM13_Init+0x3c>
  {
    Error_Handler();
 8006454:	f000 fa1e 	bl	8006894 <Error_Handler>
  }
  /* USER CODE BEGIN TIM13_Init 2 */

  /* USER CODE END TIM13_Init 2 */

}
 8006458:	bf00      	nop
 800645a:	bd80      	pop	{r7, pc}
 800645c:	20000a3c 	.word	0x20000a3c
 8006460:	40001c00 	.word	0x40001c00

08006464 <MX_TIM14_Init>:
  * @brief TIM14 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM14_Init(void)
{
 8006464:	b580      	push	{r7, lr}
 8006466:	af00      	add	r7, sp, #0
  /* USER CODE END TIM14_Init 0 */

  /* USER CODE BEGIN TIM14_Init 1 */

  /* USER CODE END TIM14_Init 1 */
  htim14.Instance = TIM14;
 8006468:	4b0e      	ldr	r3, [pc, #56]	; (80064a4 <MX_TIM14_Init+0x40>)
 800646a:	4a0f      	ldr	r2, [pc, #60]	; (80064a8 <MX_TIM14_Init+0x44>)
 800646c:	601a      	str	r2, [r3, #0]
  htim14.Init.Prescaler = 0;
 800646e:	4b0d      	ldr	r3, [pc, #52]	; (80064a4 <MX_TIM14_Init+0x40>)
 8006470:	2200      	movs	r2, #0
 8006472:	605a      	str	r2, [r3, #4]
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8006474:	4b0b      	ldr	r3, [pc, #44]	; (80064a4 <MX_TIM14_Init+0x40>)
 8006476:	2200      	movs	r2, #0
 8006478:	609a      	str	r2, [r3, #8]
  htim14.Init.Period = 1000;
 800647a:	4b0a      	ldr	r3, [pc, #40]	; (80064a4 <MX_TIM14_Init+0x40>)
 800647c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8006480:	60da      	str	r2, [r3, #12]
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8006482:	4b08      	ldr	r3, [pc, #32]	; (80064a4 <MX_TIM14_Init+0x40>)
 8006484:	2200      	movs	r2, #0
 8006486:	611a      	str	r2, [r3, #16]
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8006488:	4b06      	ldr	r3, [pc, #24]	; (80064a4 <MX_TIM14_Init+0x40>)
 800648a:	2280      	movs	r2, #128	; 0x80
 800648c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 800648e:	4805      	ldr	r0, [pc, #20]	; (80064a4 <MX_TIM14_Init+0x40>)
 8006490:	f003 fd58 	bl	8009f44 <HAL_TIM_Base_Init>
 8006494:	4603      	mov	r3, r0
 8006496:	2b00      	cmp	r3, #0
 8006498:	d001      	beq.n	800649e <MX_TIM14_Init+0x3a>
  {
    Error_Handler();
 800649a:	f000 f9fb 	bl	8006894 <Error_Handler>
  }
  /* USER CODE BEGIN TIM14_Init 2 */

  /* USER CODE END TIM14_Init 2 */

}
 800649e:	bf00      	nop
 80064a0:	bd80      	pop	{r7, pc}
 80064a2:	bf00      	nop
 80064a4:	20000a84 	.word	0x20000a84
 80064a8:	40002000 	.word	0x40002000

080064ac <MX_UART5_Init>:
  * @brief UART5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART5_Init(void)
{
 80064ac:	b580      	push	{r7, lr}
 80064ae:	af00      	add	r7, sp, #0
  /* USER CODE END UART5_Init 0 */

  /* USER CODE BEGIN UART5_Init 1 */

  /* USER CODE END UART5_Init 1 */
  huart5.Instance = UART5;
 80064b0:	4b11      	ldr	r3, [pc, #68]	; (80064f8 <MX_UART5_Init+0x4c>)
 80064b2:	4a12      	ldr	r2, [pc, #72]	; (80064fc <MX_UART5_Init+0x50>)
 80064b4:	601a      	str	r2, [r3, #0]
  huart5.Init.BaudRate = 460800;
 80064b6:	4b10      	ldr	r3, [pc, #64]	; (80064f8 <MX_UART5_Init+0x4c>)
 80064b8:	f44f 22e1 	mov.w	r2, #460800	; 0x70800
 80064bc:	605a      	str	r2, [r3, #4]
  huart5.Init.WordLength = UART_WORDLENGTH_8B;
 80064be:	4b0e      	ldr	r3, [pc, #56]	; (80064f8 <MX_UART5_Init+0x4c>)
 80064c0:	2200      	movs	r2, #0
 80064c2:	609a      	str	r2, [r3, #8]
  huart5.Init.StopBits = UART_STOPBITS_1;
 80064c4:	4b0c      	ldr	r3, [pc, #48]	; (80064f8 <MX_UART5_Init+0x4c>)
 80064c6:	2200      	movs	r2, #0
 80064c8:	60da      	str	r2, [r3, #12]
  huart5.Init.Parity = UART_PARITY_NONE;
 80064ca:	4b0b      	ldr	r3, [pc, #44]	; (80064f8 <MX_UART5_Init+0x4c>)
 80064cc:	2200      	movs	r2, #0
 80064ce:	611a      	str	r2, [r3, #16]
  huart5.Init.Mode = UART_MODE_TX_RX;
 80064d0:	4b09      	ldr	r3, [pc, #36]	; (80064f8 <MX_UART5_Init+0x4c>)
 80064d2:	220c      	movs	r2, #12
 80064d4:	615a      	str	r2, [r3, #20]
  huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80064d6:	4b08      	ldr	r3, [pc, #32]	; (80064f8 <MX_UART5_Init+0x4c>)
 80064d8:	2200      	movs	r2, #0
 80064da:	619a      	str	r2, [r3, #24]
  huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 80064dc:	4b06      	ldr	r3, [pc, #24]	; (80064f8 <MX_UART5_Init+0x4c>)
 80064de:	2200      	movs	r2, #0
 80064e0:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart5) != HAL_OK)
 80064e2:	4805      	ldr	r0, [pc, #20]	; (80064f8 <MX_UART5_Init+0x4c>)
 80064e4:	f005 fbb0 	bl	800bc48 <HAL_UART_Init>
 80064e8:	4603      	mov	r3, r0
 80064ea:	2b00      	cmp	r3, #0
 80064ec:	d001      	beq.n	80064f2 <MX_UART5_Init+0x46>
  {
    Error_Handler();
 80064ee:	f000 f9d1 	bl	8006894 <Error_Handler>
  }
  /* USER CODE BEGIN UART5_Init 2 */

  /* USER CODE END UART5_Init 2 */

}
 80064f2:	bf00      	nop
 80064f4:	bd80      	pop	{r7, pc}
 80064f6:	bf00      	nop
 80064f8:	20000b2c 	.word	0x20000b2c
 80064fc:	40005000 	.word	0x40005000

08006500 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8006500:	b580      	push	{r7, lr}
 8006502:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8006504:	4b11      	ldr	r3, [pc, #68]	; (800654c <MX_USART1_UART_Init+0x4c>)
 8006506:	4a12      	ldr	r2, [pc, #72]	; (8006550 <MX_USART1_UART_Init+0x50>)
 8006508:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 800650a:	4b10      	ldr	r3, [pc, #64]	; (800654c <MX_USART1_UART_Init+0x4c>)
 800650c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8006510:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8006512:	4b0e      	ldr	r3, [pc, #56]	; (800654c <MX_USART1_UART_Init+0x4c>)
 8006514:	2200      	movs	r2, #0
 8006516:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8006518:	4b0c      	ldr	r3, [pc, #48]	; (800654c <MX_USART1_UART_Init+0x4c>)
 800651a:	2200      	movs	r2, #0
 800651c:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800651e:	4b0b      	ldr	r3, [pc, #44]	; (800654c <MX_USART1_UART_Init+0x4c>)
 8006520:	2200      	movs	r2, #0
 8006522:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8006524:	4b09      	ldr	r3, [pc, #36]	; (800654c <MX_USART1_UART_Init+0x4c>)
 8006526:	220c      	movs	r2, #12
 8006528:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800652a:	4b08      	ldr	r3, [pc, #32]	; (800654c <MX_USART1_UART_Init+0x4c>)
 800652c:	2200      	movs	r2, #0
 800652e:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8006530:	4b06      	ldr	r3, [pc, #24]	; (800654c <MX_USART1_UART_Init+0x4c>)
 8006532:	2200      	movs	r2, #0
 8006534:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8006536:	4805      	ldr	r0, [pc, #20]	; (800654c <MX_USART1_UART_Init+0x4c>)
 8006538:	f005 fb86 	bl	800bc48 <HAL_UART_Init>
 800653c:	4603      	mov	r3, r0
 800653e:	2b00      	cmp	r3, #0
 8006540:	d001      	beq.n	8006546 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8006542:	f000 f9a7 	bl	8006894 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8006546:	bf00      	nop
 8006548:	bd80      	pop	{r7, pc}
 800654a:	bf00      	nop
 800654c:	20000b70 	.word	0x20000b70
 8006550:	40011000 	.word	0x40011000

08006554 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8006554:	b580      	push	{r7, lr}
 8006556:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8006558:	4b11      	ldr	r3, [pc, #68]	; (80065a0 <MX_USART2_UART_Init+0x4c>)
 800655a:	4a12      	ldr	r2, [pc, #72]	; (80065a4 <MX_USART2_UART_Init+0x50>)
 800655c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 800655e:	4b10      	ldr	r3, [pc, #64]	; (80065a0 <MX_USART2_UART_Init+0x4c>)
 8006560:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8006564:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8006566:	4b0e      	ldr	r3, [pc, #56]	; (80065a0 <MX_USART2_UART_Init+0x4c>)
 8006568:	2200      	movs	r2, #0
 800656a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800656c:	4b0c      	ldr	r3, [pc, #48]	; (80065a0 <MX_USART2_UART_Init+0x4c>)
 800656e:	2200      	movs	r2, #0
 8006570:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8006572:	4b0b      	ldr	r3, [pc, #44]	; (80065a0 <MX_USART2_UART_Init+0x4c>)
 8006574:	2200      	movs	r2, #0
 8006576:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8006578:	4b09      	ldr	r3, [pc, #36]	; (80065a0 <MX_USART2_UART_Init+0x4c>)
 800657a:	220c      	movs	r2, #12
 800657c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800657e:	4b08      	ldr	r3, [pc, #32]	; (80065a0 <MX_USART2_UART_Init+0x4c>)
 8006580:	2200      	movs	r2, #0
 8006582:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8006584:	4b06      	ldr	r3, [pc, #24]	; (80065a0 <MX_USART2_UART_Init+0x4c>)
 8006586:	2200      	movs	r2, #0
 8006588:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800658a:	4805      	ldr	r0, [pc, #20]	; (80065a0 <MX_USART2_UART_Init+0x4c>)
 800658c:	f005 fb5c 	bl	800bc48 <HAL_UART_Init>
 8006590:	4603      	mov	r3, r0
 8006592:	2b00      	cmp	r3, #0
 8006594:	d001      	beq.n	800659a <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8006596:	f000 f97d 	bl	8006894 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800659a:	bf00      	nop
 800659c:	bd80      	pop	{r7, pc}
 800659e:	bf00      	nop
 80065a0:	20000bb4 	.word	0x20000bb4
 80065a4:	40004400 	.word	0x40004400

080065a8 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 80065a8:	b580      	push	{r7, lr}
 80065aa:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 80065ac:	4b11      	ldr	r3, [pc, #68]	; (80065f4 <MX_USART3_UART_Init+0x4c>)
 80065ae:	4a12      	ldr	r2, [pc, #72]	; (80065f8 <MX_USART3_UART_Init+0x50>)
 80065b0:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 80065b2:	4b10      	ldr	r3, [pc, #64]	; (80065f4 <MX_USART3_UART_Init+0x4c>)
 80065b4:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80065b8:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 80065ba:	4b0e      	ldr	r3, [pc, #56]	; (80065f4 <MX_USART3_UART_Init+0x4c>)
 80065bc:	2200      	movs	r2, #0
 80065be:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 80065c0:	4b0c      	ldr	r3, [pc, #48]	; (80065f4 <MX_USART3_UART_Init+0x4c>)
 80065c2:	2200      	movs	r2, #0
 80065c4:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 80065c6:	4b0b      	ldr	r3, [pc, #44]	; (80065f4 <MX_USART3_UART_Init+0x4c>)
 80065c8:	2200      	movs	r2, #0
 80065ca:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 80065cc:	4b09      	ldr	r3, [pc, #36]	; (80065f4 <MX_USART3_UART_Init+0x4c>)
 80065ce:	220c      	movs	r2, #12
 80065d0:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80065d2:	4b08      	ldr	r3, [pc, #32]	; (80065f4 <MX_USART3_UART_Init+0x4c>)
 80065d4:	2200      	movs	r2, #0
 80065d6:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 80065d8:	4b06      	ldr	r3, [pc, #24]	; (80065f4 <MX_USART3_UART_Init+0x4c>)
 80065da:	2200      	movs	r2, #0
 80065dc:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 80065de:	4805      	ldr	r0, [pc, #20]	; (80065f4 <MX_USART3_UART_Init+0x4c>)
 80065e0:	f005 fb32 	bl	800bc48 <HAL_UART_Init>
 80065e4:	4603      	mov	r3, r0
 80065e6:	2b00      	cmp	r3, #0
 80065e8:	d001      	beq.n	80065ee <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 80065ea:	f000 f953 	bl	8006894 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 80065ee:	bf00      	nop
 80065f0:	bd80      	pop	{r7, pc}
 80065f2:	bf00      	nop
 80065f4:	20000bf8 	.word	0x20000bf8
 80065f8:	40004800 	.word	0x40004800

080065fc <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80065fc:	b580      	push	{r7, lr}
 80065fe:	b082      	sub	sp, #8
 8006600:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8006602:	2300      	movs	r3, #0
 8006604:	607b      	str	r3, [r7, #4]
 8006606:	4b0c      	ldr	r3, [pc, #48]	; (8006638 <MX_DMA_Init+0x3c>)
 8006608:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800660a:	4a0b      	ldr	r2, [pc, #44]	; (8006638 <MX_DMA_Init+0x3c>)
 800660c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8006610:	6313      	str	r3, [r2, #48]	; 0x30
 8006612:	4b09      	ldr	r3, [pc, #36]	; (8006638 <MX_DMA_Init+0x3c>)
 8006614:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006616:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800661a:	607b      	str	r3, [r7, #4]
 800661c:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream7_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream7_IRQn, 0, 0);
 800661e:	2200      	movs	r2, #0
 8006620:	2100      	movs	r1, #0
 8006622:	202f      	movs	r0, #47	; 0x2f
 8006624:	f001 fe09 	bl	800823a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 8006628:	202f      	movs	r0, #47	; 0x2f
 800662a:	f001 fe22 	bl	8008272 <HAL_NVIC_EnableIRQ>

}
 800662e:	bf00      	nop
 8006630:	3708      	adds	r7, #8
 8006632:	46bd      	mov	sp, r7
 8006634:	bd80      	pop	{r7, pc}
 8006636:	bf00      	nop
 8006638:	40023800 	.word	0x40023800

0800663c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800663c:	b580      	push	{r7, lr}
 800663e:	b08a      	sub	sp, #40	; 0x28
 8006640:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8006642:	f107 0314 	add.w	r3, r7, #20
 8006646:	2200      	movs	r2, #0
 8006648:	601a      	str	r2, [r3, #0]
 800664a:	605a      	str	r2, [r3, #4]
 800664c:	609a      	str	r2, [r3, #8]
 800664e:	60da      	str	r2, [r3, #12]
 8006650:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8006652:	2300      	movs	r3, #0
 8006654:	613b      	str	r3, [r7, #16]
 8006656:	4b64      	ldr	r3, [pc, #400]	; (80067e8 <MX_GPIO_Init+0x1ac>)
 8006658:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800665a:	4a63      	ldr	r2, [pc, #396]	; (80067e8 <MX_GPIO_Init+0x1ac>)
 800665c:	f043 0304 	orr.w	r3, r3, #4
 8006660:	6313      	str	r3, [r2, #48]	; 0x30
 8006662:	4b61      	ldr	r3, [pc, #388]	; (80067e8 <MX_GPIO_Init+0x1ac>)
 8006664:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006666:	f003 0304 	and.w	r3, r3, #4
 800666a:	613b      	str	r3, [r7, #16]
 800666c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800666e:	2300      	movs	r3, #0
 8006670:	60fb      	str	r3, [r7, #12]
 8006672:	4b5d      	ldr	r3, [pc, #372]	; (80067e8 <MX_GPIO_Init+0x1ac>)
 8006674:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006676:	4a5c      	ldr	r2, [pc, #368]	; (80067e8 <MX_GPIO_Init+0x1ac>)
 8006678:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800667c:	6313      	str	r3, [r2, #48]	; 0x30
 800667e:	4b5a      	ldr	r3, [pc, #360]	; (80067e8 <MX_GPIO_Init+0x1ac>)
 8006680:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006682:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006686:	60fb      	str	r3, [r7, #12]
 8006688:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800668a:	2300      	movs	r3, #0
 800668c:	60bb      	str	r3, [r7, #8]
 800668e:	4b56      	ldr	r3, [pc, #344]	; (80067e8 <MX_GPIO_Init+0x1ac>)
 8006690:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006692:	4a55      	ldr	r2, [pc, #340]	; (80067e8 <MX_GPIO_Init+0x1ac>)
 8006694:	f043 0301 	orr.w	r3, r3, #1
 8006698:	6313      	str	r3, [r2, #48]	; 0x30
 800669a:	4b53      	ldr	r3, [pc, #332]	; (80067e8 <MX_GPIO_Init+0x1ac>)
 800669c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800669e:	f003 0301 	and.w	r3, r3, #1
 80066a2:	60bb      	str	r3, [r7, #8]
 80066a4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80066a6:	2300      	movs	r3, #0
 80066a8:	607b      	str	r3, [r7, #4]
 80066aa:	4b4f      	ldr	r3, [pc, #316]	; (80067e8 <MX_GPIO_Init+0x1ac>)
 80066ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80066ae:	4a4e      	ldr	r2, [pc, #312]	; (80067e8 <MX_GPIO_Init+0x1ac>)
 80066b0:	f043 0302 	orr.w	r3, r3, #2
 80066b4:	6313      	str	r3, [r2, #48]	; 0x30
 80066b6:	4b4c      	ldr	r3, [pc, #304]	; (80067e8 <MX_GPIO_Init+0x1ac>)
 80066b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80066ba:	f003 0302 	and.w	r3, r3, #2
 80066be:	607b      	str	r3, [r7, #4]
 80066c0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80066c2:	2300      	movs	r3, #0
 80066c4:	603b      	str	r3, [r7, #0]
 80066c6:	4b48      	ldr	r3, [pc, #288]	; (80067e8 <MX_GPIO_Init+0x1ac>)
 80066c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80066ca:	4a47      	ldr	r2, [pc, #284]	; (80067e8 <MX_GPIO_Init+0x1ac>)
 80066cc:	f043 0308 	orr.w	r3, r3, #8
 80066d0:	6313      	str	r3, [r2, #48]	; 0x30
 80066d2:	4b45      	ldr	r3, [pc, #276]	; (80067e8 <MX_GPIO_Init+0x1ac>)
 80066d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80066d6:	f003 0308 	and.w	r3, r3, #8
 80066da:	603b      	str	r3, [r7, #0]
 80066dc:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TEL_GPIO4_GPIO_Port, TEL_GPIO4_Pin, GPIO_PIN_RESET);
 80066de:	2200      	movs	r2, #0
 80066e0:	2102      	movs	r1, #2
 80066e2:	4842      	ldr	r0, [pc, #264]	; (80067ec <MX_GPIO_Init+0x1b0>)
 80066e4:	f002 fdaa 	bl	800923c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, TEL_GPIO7_Pin|On_Board_LED_Pin, GPIO_PIN_RESET);
 80066e8:	2200      	movs	r2, #0
 80066ea:	2122      	movs	r1, #34	; 0x22
 80066ec:	4840      	ldr	r0, [pc, #256]	; (80067f0 <MX_GPIO_Init+0x1b4>)
 80066ee:	f002 fda5 	bl	800923c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED4_Pin|LED1_Pin|LED2_Pin|LED3_Pin
 80066f2:	2200      	movs	r2, #0
 80066f4:	f24e 0142 	movw	r1, #57410	; 0xe042
 80066f8:	483e      	ldr	r0, [pc, #248]	; (80067f4 <MX_GPIO_Init+0x1b8>)
 80066fa:	f002 fd9f 	bl	800923c <HAL_GPIO_WritePin>
                          |Motor_EN_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin : On_Board_Button_Pin */
  GPIO_InitStruct.Pin = On_Board_Button_Pin;
 80066fe:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8006702:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8006704:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8006708:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800670a:	2300      	movs	r3, #0
 800670c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(On_Board_Button_GPIO_Port, &GPIO_InitStruct);
 800670e:	f107 0314 	add.w	r3, r7, #20
 8006712:	4619      	mov	r1, r3
 8006714:	4835      	ldr	r0, [pc, #212]	; (80067ec <MX_GPIO_Init+0x1b0>)
 8006716:	f002 fbe5 	bl	8008ee4 <HAL_GPIO_Init>

  /*Configure GPIO pin : TEL_GPIO4_Pin */
  GPIO_InitStruct.Pin = TEL_GPIO4_Pin;
 800671a:	2302      	movs	r3, #2
 800671c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800671e:	2301      	movs	r3, #1
 8006720:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006722:	2300      	movs	r3, #0
 8006724:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006726:	2300      	movs	r3, #0
 8006728:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(TEL_GPIO4_GPIO_Port, &GPIO_InitStruct);
 800672a:	f107 0314 	add.w	r3, r7, #20
 800672e:	4619      	mov	r1, r3
 8006730:	482e      	ldr	r0, [pc, #184]	; (80067ec <MX_GPIO_Init+0x1b0>)
 8006732:	f002 fbd7 	bl	8008ee4 <HAL_GPIO_Init>

  /*Configure GPIO pins : TEL_GPIO7_Pin On_Board_LED_Pin */
  GPIO_InitStruct.Pin = TEL_GPIO7_Pin|On_Board_LED_Pin;
 8006736:	2322      	movs	r3, #34	; 0x22
 8006738:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800673a:	2301      	movs	r3, #1
 800673c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800673e:	2300      	movs	r3, #0
 8006740:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006742:	2300      	movs	r3, #0
 8006744:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8006746:	f107 0314 	add.w	r3, r7, #20
 800674a:	4619      	mov	r1, r3
 800674c:	4828      	ldr	r0, [pc, #160]	; (80067f0 <MX_GPIO_Init+0x1b4>)
 800674e:	f002 fbc9 	bl	8008ee4 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED4_Pin LED1_Pin LED2_Pin LED3_Pin
                           Motor_EN_Pin */
  GPIO_InitStruct.Pin = LED4_Pin|LED1_Pin|LED2_Pin|LED3_Pin
 8006752:	f24e 0342 	movw	r3, #57410	; 0xe042
 8006756:	617b      	str	r3, [r7, #20]
                          |Motor_EN_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8006758:	2301      	movs	r3, #1
 800675a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800675c:	2300      	movs	r3, #0
 800675e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006760:	2300      	movs	r3, #0
 8006762:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8006764:	f107 0314 	add.w	r3, r7, #20
 8006768:	4619      	mov	r1, r3
 800676a:	4822      	ldr	r0, [pc, #136]	; (80067f4 <MX_GPIO_Init+0x1b8>)
 800676c:	f002 fbba 	bl	8008ee4 <HAL_GPIO_Init>

  /*Configure GPIO pins : SW2_Pin B2_Pin Motor_Feedback_Pin */
  GPIO_InitStruct.Pin = SW2_Pin|B2_Pin|Motor_Feedback_Pin;
 8006770:	f44f 6394 	mov.w	r3, #1184	; 0x4a0
 8006774:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8006776:	2300      	movs	r3, #0
 8006778:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800677a:	2300      	movs	r3, #0
 800677c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800677e:	f107 0314 	add.w	r3, r7, #20
 8006782:	4619      	mov	r1, r3
 8006784:	481b      	ldr	r0, [pc, #108]	; (80067f4 <MX_GPIO_Init+0x1b8>)
 8006786:	f002 fbad 	bl	8008ee4 <HAL_GPIO_Init>

  /*Configure GPIO pin : SW1_Pin */
  GPIO_InitStruct.Pin = SW1_Pin;
 800678a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800678e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8006790:	2300      	movs	r3, #0
 8006792:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006794:	2300      	movs	r3, #0
 8006796:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(SW1_GPIO_Port, &GPIO_InitStruct);
 8006798:	f107 0314 	add.w	r3, r7, #20
 800679c:	4619      	mov	r1, r3
 800679e:	4814      	ldr	r0, [pc, #80]	; (80067f0 <MX_GPIO_Init+0x1b4>)
 80067a0:	f002 fba0 	bl	8008ee4 <HAL_GPIO_Init>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 80067a4:	2310      	movs	r3, #16
 80067a6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80067a8:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 80067ac:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80067ae:	2300      	movs	r3, #0
 80067b0:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 80067b2:	f107 0314 	add.w	r3, r7, #20
 80067b6:	4619      	mov	r1, r3
 80067b8:	480e      	ldr	r0, [pc, #56]	; (80067f4 <MX_GPIO_Init+0x1b8>)
 80067ba:	f002 fb93 	bl	8008ee4 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI4_IRQn, 0, 0);
 80067be:	2200      	movs	r2, #0
 80067c0:	2100      	movs	r1, #0
 80067c2:	200a      	movs	r0, #10
 80067c4:	f001 fd39 	bl	800823a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 80067c8:	200a      	movs	r0, #10
 80067ca:	f001 fd52 	bl	8008272 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 80067ce:	2200      	movs	r2, #0
 80067d0:	2100      	movs	r1, #0
 80067d2:	2028      	movs	r0, #40	; 0x28
 80067d4:	f001 fd31 	bl	800823a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 80067d8:	2028      	movs	r0, #40	; 0x28
 80067da:	f001 fd4a 	bl	8008272 <HAL_NVIC_EnableIRQ>

}
 80067de:	bf00      	nop
 80067e0:	3728      	adds	r7, #40	; 0x28
 80067e2:	46bd      	mov	sp, r7
 80067e4:	bd80      	pop	{r7, pc}
 80067e6:	bf00      	nop
 80067e8:	40023800 	.word	0x40023800
 80067ec:	40020800 	.word	0x40020800
 80067f0:	40020000 	.word	0x40020000
 80067f4:	40020400 	.word	0x40020400

080067f8 <HAL_GPIO_EXTI_Callback>:

/* USER CODE BEGIN 4 */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 80067f8:	b580      	push	{r7, lr}
 80067fa:	b082      	sub	sp, #8
 80067fc:	af00      	add	r7, sp, #0
 80067fe:	4603      	mov	r3, r0
 8006800:	80fb      	strh	r3, [r7, #6]
	//ha meg lett nyomva a nucleon a kék gomb
	if(GPIO_Pin == On_Board_Button_Pin)B_NUCLEO_ISR(&huart1);
 8006802:	88fb      	ldrh	r3, [r7, #6]
 8006804:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006808:	d102      	bne.n	8006810 <HAL_GPIO_EXTI_Callback+0x18>
 800680a:	4806      	ldr	r0, [pc, #24]	; (8006824 <HAL_GPIO_EXTI_Callback+0x2c>)
 800680c:	f7fa fd98 	bl	8001340 <B_NUCLEO_ISR>
	if(GPIO_Pin == B1_Pin) B1_ISR(&huart1);
 8006810:	88fb      	ldrh	r3, [r7, #6]
 8006812:	2b10      	cmp	r3, #16
 8006814:	d102      	bne.n	800681c <HAL_GPIO_EXTI_Callback+0x24>
 8006816:	4803      	ldr	r0, [pc, #12]	; (8006824 <HAL_GPIO_EXTI_Callback+0x2c>)
 8006818:	f7fa fd1e 	bl	8001258 <B1_ISR>
}
 800681c:	bf00      	nop
 800681e:	3708      	adds	r7, #8
 8006820:	46bd      	mov	sp, r7
 8006822:	bd80      	pop	{r7, pc}
 8006824:	20000b70 	.word	0x20000b70

08006828 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8006828:	b580      	push	{r7, lr}
 800682a:	b082      	sub	sp, #8
 800682c:	af00      	add	r7, sp, #0
 800682e:	6078      	str	r0, [r7, #4]
	if(huart == &huart1)Uart_Receive_From_PC_ISR(&huart1);
 8006830:	687b      	ldr	r3, [r7, #4]
 8006832:	4a09      	ldr	r2, [pc, #36]	; (8006858 <HAL_UART_RxCpltCallback+0x30>)
 8006834:	4293      	cmp	r3, r2
 8006836:	d103      	bne.n	8006840 <HAL_UART_RxCpltCallback+0x18>
 8006838:	4807      	ldr	r0, [pc, #28]	; (8006858 <HAL_UART_RxCpltCallback+0x30>)
 800683a:	f7fa fce9 	bl	8001210 <Uart_Receive_From_PC_ISR>
	else if(huart==&huart3)Uart_Receive_Thunderboard_ISR(&huart3, &huart1);
}
 800683e:	e007      	b.n	8006850 <HAL_UART_RxCpltCallback+0x28>
	else if(huart==&huart3)Uart_Receive_Thunderboard_ISR(&huart3, &huart1);
 8006840:	687b      	ldr	r3, [r7, #4]
 8006842:	4a06      	ldr	r2, [pc, #24]	; (800685c <HAL_UART_RxCpltCallback+0x34>)
 8006844:	4293      	cmp	r3, r2
 8006846:	d103      	bne.n	8006850 <HAL_UART_RxCpltCallback+0x28>
 8006848:	4903      	ldr	r1, [pc, #12]	; (8006858 <HAL_UART_RxCpltCallback+0x30>)
 800684a:	4804      	ldr	r0, [pc, #16]	; (800685c <HAL_UART_RxCpltCallback+0x34>)
 800684c:	f7fd f92e 	bl	8003aac <Uart_Receive_Thunderboard_ISR>
}
 8006850:	bf00      	nop
 8006852:	3708      	adds	r7, #8
 8006854:	46bd      	mov	sp, r7
 8006856:	bd80      	pop	{r7, pc}
 8006858:	20000b70 	.word	0x20000b70
 800685c:	20000bf8 	.word	0x20000bf8

08006860 <Delay>:

void Delay(uint16_t ms)
{
 8006860:	b480      	push	{r7}
 8006862:	b083      	sub	sp, #12
 8006864:	af00      	add	r7, sp, #0
 8006866:	4603      	mov	r3, r0
 8006868:	80fb      	strh	r3, [r7, #6]
	TIM13->CNT=0;
 800686a:	4b08      	ldr	r3, [pc, #32]	; (800688c <Delay+0x2c>)
 800686c:	2200      	movs	r2, #0
 800686e:	625a      	str	r2, [r3, #36]	; 0x24
	while(1)
	{
		if(__HAL_TIM_GET_COUNTER(&htim13)>ms)break;
 8006870:	4b07      	ldr	r3, [pc, #28]	; (8006890 <Delay+0x30>)
 8006872:	681b      	ldr	r3, [r3, #0]
 8006874:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006876:	88fb      	ldrh	r3, [r7, #6]
 8006878:	429a      	cmp	r2, r3
 800687a:	d800      	bhi.n	800687e <Delay+0x1e>
 800687c:	e7f8      	b.n	8006870 <Delay+0x10>
 800687e:	bf00      	nop
	}

}
 8006880:	bf00      	nop
 8006882:	370c      	adds	r7, #12
 8006884:	46bd      	mov	sp, r7
 8006886:	f85d 7b04 	ldr.w	r7, [sp], #4
 800688a:	4770      	bx	lr
 800688c:	40001c00 	.word	0x40001c00
 8006890:	20000a3c 	.word	0x20000a3c

08006894 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8006894:	b480      	push	{r7}
 8006896:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 8006898:	b672      	cpsid	i
}
 800689a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800689c:	e7fe      	b.n	800689c <Error_Handler+0x8>
	...

080068a0 <Remote_Control_Init>:
 80068a0:	b580      	push	{r7, lr}
 80068a2:	b082      	sub	sp, #8
 80068a4:	af00      	add	r7, sp, #0
 80068a6:	6078      	str	r0, [r7, #4]
 80068a8:	6039      	str	r1, [r7, #0]
 80068aa:	4b0a      	ldr	r3, [pc, #40]	; (80068d4 <Remote_Control_Init+0x34>)
 80068ac:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80068b0:	601a      	str	r2, [r3, #0]
 80068b2:	4b08      	ldr	r3, [pc, #32]	; (80068d4 <Remote_Control_Init+0x34>)
 80068b4:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 80068b8:	605a      	str	r2, [r3, #4]
 80068ba:	4b06      	ldr	r3, [pc, #24]	; (80068d4 <Remote_Control_Init+0x34>)
 80068bc:	2200      	movs	r2, #0
 80068be:	609a      	str	r2, [r3, #8]
 80068c0:	2303      	movs	r3, #3
 80068c2:	4a04      	ldr	r2, [pc, #16]	; (80068d4 <Remote_Control_Init+0x34>)
 80068c4:	6839      	ldr	r1, [r7, #0]
 80068c6:	6878      	ldr	r0, [r7, #4]
 80068c8:	f003 fd70 	bl	800a3ac <HAL_TIM_IC_Start_DMA>
 80068cc:	bf00      	nop
 80068ce:	3708      	adds	r7, #8
 80068d0:	46bd      	mov	sp, r7
 80068d2:	bd80      	pop	{r7, pc}
 80068d4:	20000c40 	.word	0x20000c40

080068d8 <Remote_Control_Task>:
 80068d8:	b580      	push	{r7, lr}
 80068da:	b084      	sub	sp, #16
 80068dc:	af00      	add	r7, sp, #0
 80068de:	60f8      	str	r0, [r7, #12]
 80068e0:	60b9      	str	r1, [r7, #8]
 80068e2:	607a      	str	r2, [r7, #4]
 80068e4:	603b      	str	r3, [r7, #0]
 80068e6:	4b50      	ldr	r3, [pc, #320]	; (8006a28 <Remote_Control_Task+0x150>)
 80068e8:	681b      	ldr	r3, [r3, #0]
 80068ea:	683a      	ldr	r2, [r7, #0]
 80068ec:	429a      	cmp	r2, r3
 80068ee:	f0c0 8096 	bcc.w	8006a1e <Remote_Control_Task+0x146>
 80068f2:	683a      	ldr	r2, [r7, #0]
 80068f4:	69bb      	ldr	r3, [r7, #24]
 80068f6:	4413      	add	r3, r2
 80068f8:	4a4b      	ldr	r2, [pc, #300]	; (8006a28 <Remote_Control_Task+0x150>)
 80068fa:	6013      	str	r3, [r2, #0]
 80068fc:	201e      	movs	r0, #30
 80068fe:	f001 fcc6 	bl	800828e <HAL_NVIC_DisableIRQ>
 8006902:	4b4a      	ldr	r3, [pc, #296]	; (8006a2c <Remote_Control_Task+0x154>)
 8006904:	685a      	ldr	r2, [r3, #4]
 8006906:	4b49      	ldr	r3, [pc, #292]	; (8006a2c <Remote_Control_Task+0x154>)
 8006908:	681b      	ldr	r3, [r3, #0]
 800690a:	1ad3      	subs	r3, r2, r3
 800690c:	2b00      	cmp	r3, #0
 800690e:	bfb8      	it	lt
 8006910:	425b      	neglt	r3, r3
 8006912:	4a47      	ldr	r2, [pc, #284]	; (8006a30 <Remote_Control_Task+0x158>)
 8006914:	6013      	str	r3, [r2, #0]
 8006916:	4b45      	ldr	r3, [pc, #276]	; (8006a2c <Remote_Control_Task+0x154>)
 8006918:	689a      	ldr	r2, [r3, #8]
 800691a:	4b44      	ldr	r3, [pc, #272]	; (8006a2c <Remote_Control_Task+0x154>)
 800691c:	685b      	ldr	r3, [r3, #4]
 800691e:	1ad3      	subs	r3, r2, r3
 8006920:	2b00      	cmp	r3, #0
 8006922:	bfb8      	it	lt
 8006924:	425b      	neglt	r3, r3
 8006926:	4a43      	ldr	r2, [pc, #268]	; (8006a34 <Remote_Control_Task+0x15c>)
 8006928:	6013      	str	r3, [r2, #0]
 800692a:	4b40      	ldr	r3, [pc, #256]	; (8006a2c <Remote_Control_Task+0x154>)
 800692c:	681a      	ldr	r2, [r3, #0]
 800692e:	4b3f      	ldr	r3, [pc, #252]	; (8006a2c <Remote_Control_Task+0x154>)
 8006930:	689b      	ldr	r3, [r3, #8]
 8006932:	1ad3      	subs	r3, r2, r3
 8006934:	2b00      	cmp	r3, #0
 8006936:	bfb8      	it	lt
 8006938:	425b      	neglt	r3, r3
 800693a:	4a3f      	ldr	r2, [pc, #252]	; (8006a38 <Remote_Control_Task+0x160>)
 800693c:	6013      	str	r3, [r2, #0]
 800693e:	201e      	movs	r0, #30
 8006940:	f001 fc97 	bl	8008272 <HAL_NVIC_EnableIRQ>
 8006944:	4b3a      	ldr	r3, [pc, #232]	; (8006a30 <Remote_Control_Task+0x158>)
 8006946:	681b      	ldr	r3, [r3, #0]
 8006948:	f241 3288 	movw	r2, #5000	; 0x1388
 800694c:	4293      	cmp	r3, r2
 800694e:	dd06      	ble.n	800695e <Remote_Control_Task+0x86>
 8006950:	4b37      	ldr	r3, [pc, #220]	; (8006a30 <Remote_Control_Task+0x158>)
 8006952:	681b      	ldr	r3, [r3, #0]
 8006954:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 8006958:	33ff      	adds	r3, #255	; 0xff
 800695a:	4a35      	ldr	r2, [pc, #212]	; (8006a30 <Remote_Control_Task+0x158>)
 800695c:	6013      	str	r3, [r2, #0]
 800695e:	4b35      	ldr	r3, [pc, #212]	; (8006a34 <Remote_Control_Task+0x15c>)
 8006960:	681b      	ldr	r3, [r3, #0]
 8006962:	f241 3288 	movw	r2, #5000	; 0x1388
 8006966:	4293      	cmp	r3, r2
 8006968:	dd06      	ble.n	8006978 <Remote_Control_Task+0xa0>
 800696a:	4b32      	ldr	r3, [pc, #200]	; (8006a34 <Remote_Control_Task+0x15c>)
 800696c:	681b      	ldr	r3, [r3, #0]
 800696e:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 8006972:	33ff      	adds	r3, #255	; 0xff
 8006974:	4a2f      	ldr	r2, [pc, #188]	; (8006a34 <Remote_Control_Task+0x15c>)
 8006976:	6013      	str	r3, [r2, #0]
 8006978:	4b2f      	ldr	r3, [pc, #188]	; (8006a38 <Remote_Control_Task+0x160>)
 800697a:	681b      	ldr	r3, [r3, #0]
 800697c:	f241 3288 	movw	r2, #5000	; 0x1388
 8006980:	4293      	cmp	r3, r2
 8006982:	dd06      	ble.n	8006992 <Remote_Control_Task+0xba>
 8006984:	4b2c      	ldr	r3, [pc, #176]	; (8006a38 <Remote_Control_Task+0x160>)
 8006986:	681b      	ldr	r3, [r3, #0]
 8006988:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 800698c:	33ff      	adds	r3, #255	; 0xff
 800698e:	4a2a      	ldr	r2, [pc, #168]	; (8006a38 <Remote_Control_Task+0x160>)
 8006990:	6013      	str	r3, [r2, #0]
 8006992:	4b27      	ldr	r3, [pc, #156]	; (8006a30 <Remote_Control_Task+0x158>)
 8006994:	681a      	ldr	r2, [r3, #0]
 8006996:	4b27      	ldr	r3, [pc, #156]	; (8006a34 <Remote_Control_Task+0x15c>)
 8006998:	681b      	ldr	r3, [r3, #0]
 800699a:	429a      	cmp	r2, r3
 800699c:	da0b      	bge.n	80069b6 <Remote_Control_Task+0xde>
 800699e:	4b24      	ldr	r3, [pc, #144]	; (8006a30 <Remote_Control_Task+0x158>)
 80069a0:	681a      	ldr	r2, [r3, #0]
 80069a2:	4b25      	ldr	r3, [pc, #148]	; (8006a38 <Remote_Control_Task+0x160>)
 80069a4:	681b      	ldr	r3, [r3, #0]
 80069a6:	429a      	cmp	r2, r3
 80069a8:	da05      	bge.n	80069b6 <Remote_Control_Task+0xde>
 80069aa:	4b21      	ldr	r3, [pc, #132]	; (8006a30 <Remote_Control_Task+0x158>)
 80069ac:	681b      	ldr	r3, [r3, #0]
 80069ae:	461a      	mov	r2, r3
 80069b0:	4b22      	ldr	r3, [pc, #136]	; (8006a3c <Remote_Control_Task+0x164>)
 80069b2:	601a      	str	r2, [r3, #0]
 80069b4:	e016      	b.n	80069e4 <Remote_Control_Task+0x10c>
 80069b6:	4b1f      	ldr	r3, [pc, #124]	; (8006a34 <Remote_Control_Task+0x15c>)
 80069b8:	681a      	ldr	r2, [r3, #0]
 80069ba:	4b1d      	ldr	r3, [pc, #116]	; (8006a30 <Remote_Control_Task+0x158>)
 80069bc:	681b      	ldr	r3, [r3, #0]
 80069be:	429a      	cmp	r2, r3
 80069c0:	da0b      	bge.n	80069da <Remote_Control_Task+0x102>
 80069c2:	4b1c      	ldr	r3, [pc, #112]	; (8006a34 <Remote_Control_Task+0x15c>)
 80069c4:	681a      	ldr	r2, [r3, #0]
 80069c6:	4b1c      	ldr	r3, [pc, #112]	; (8006a38 <Remote_Control_Task+0x160>)
 80069c8:	681b      	ldr	r3, [r3, #0]
 80069ca:	429a      	cmp	r2, r3
 80069cc:	da05      	bge.n	80069da <Remote_Control_Task+0x102>
 80069ce:	4b19      	ldr	r3, [pc, #100]	; (8006a34 <Remote_Control_Task+0x15c>)
 80069d0:	681b      	ldr	r3, [r3, #0]
 80069d2:	461a      	mov	r2, r3
 80069d4:	4b19      	ldr	r3, [pc, #100]	; (8006a3c <Remote_Control_Task+0x164>)
 80069d6:	601a      	str	r2, [r3, #0]
 80069d8:	e004      	b.n	80069e4 <Remote_Control_Task+0x10c>
 80069da:	4b17      	ldr	r3, [pc, #92]	; (8006a38 <Remote_Control_Task+0x160>)
 80069dc:	681b      	ldr	r3, [r3, #0]
 80069de:	461a      	mov	r2, r3
 80069e0:	4b16      	ldr	r3, [pc, #88]	; (8006a3c <Remote_Control_Task+0x164>)
 80069e2:	601a      	str	r2, [r3, #0]
 80069e4:	4b15      	ldr	r3, [pc, #84]	; (8006a3c <Remote_Control_Task+0x164>)
 80069e6:	681b      	ldr	r3, [r3, #0]
 80069e8:	2b46      	cmp	r3, #70	; 0x46
 80069ea:	d903      	bls.n	80069f4 <Remote_Control_Task+0x11c>
 80069ec:	4b13      	ldr	r3, [pc, #76]	; (8006a3c <Remote_Control_Task+0x164>)
 80069ee:	681b      	ldr	r3, [r3, #0]
 80069f0:	2b63      	cmp	r3, #99	; 0x63
 80069f2:	d904      	bls.n	80069fe <Remote_Control_Task+0x126>
 80069f4:	4b11      	ldr	r3, [pc, #68]	; (8006a3c <Remote_Control_Task+0x164>)
 80069f6:	681b      	ldr	r3, [r3, #0]
 80069f8:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80069fc:	d103      	bne.n	8006a06 <Remote_Control_Task+0x12e>
 80069fe:	4b10      	ldr	r3, [pc, #64]	; (8006a40 <Remote_Control_Task+0x168>)
 8006a00:	2200      	movs	r2, #0
 8006a02:	701a      	strb	r2, [r3, #0]
 8006a04:	e00c      	b.n	8006a20 <Remote_Control_Task+0x148>
 8006a06:	4b0d      	ldr	r3, [pc, #52]	; (8006a3c <Remote_Control_Task+0x164>)
 8006a08:	681b      	ldr	r3, [r3, #0]
 8006a0a:	2b46      	cmp	r3, #70	; 0x46
 8006a0c:	d803      	bhi.n	8006a16 <Remote_Control_Task+0x13e>
 8006a0e:	4b0c      	ldr	r3, [pc, #48]	; (8006a40 <Remote_Control_Task+0x168>)
 8006a10:	2201      	movs	r2, #1
 8006a12:	701a      	strb	r2, [r3, #0]
 8006a14:	e004      	b.n	8006a20 <Remote_Control_Task+0x148>
 8006a16:	4b0a      	ldr	r3, [pc, #40]	; (8006a40 <Remote_Control_Task+0x168>)
 8006a18:	2202      	movs	r2, #2
 8006a1a:	701a      	strb	r2, [r3, #0]
 8006a1c:	e000      	b.n	8006a20 <Remote_Control_Task+0x148>
 8006a1e:	bf00      	nop
 8006a20:	3710      	adds	r7, #16
 8006a22:	46bd      	mov	sp, r7
 8006a24:	bd80      	pop	{r7, pc}
 8006a26:	bf00      	nop
 8006a28:	20000c4c 	.word	0x20000c4c
 8006a2c:	20000c40 	.word	0x20000c40
 8006a30:	2000012c 	.word	0x2000012c
 8006a34:	20000130 	.word	0x20000130
 8006a38:	20000134 	.word	0x20000134
 8006a3c:	20000138 	.word	0x20000138
 8006a40:	20000c3c 	.word	0x20000c3c

08006a44 <HAL_MspInit>:
 8006a44:	b580      	push	{r7, lr}
 8006a46:	b082      	sub	sp, #8
 8006a48:	af00      	add	r7, sp, #0
 8006a4a:	2300      	movs	r3, #0
 8006a4c:	607b      	str	r3, [r7, #4]
 8006a4e:	4b10      	ldr	r3, [pc, #64]	; (8006a90 <HAL_MspInit+0x4c>)
 8006a50:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006a52:	4a0f      	ldr	r2, [pc, #60]	; (8006a90 <HAL_MspInit+0x4c>)
 8006a54:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8006a58:	6453      	str	r3, [r2, #68]	; 0x44
 8006a5a:	4b0d      	ldr	r3, [pc, #52]	; (8006a90 <HAL_MspInit+0x4c>)
 8006a5c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006a5e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8006a62:	607b      	str	r3, [r7, #4]
 8006a64:	687b      	ldr	r3, [r7, #4]
 8006a66:	2300      	movs	r3, #0
 8006a68:	603b      	str	r3, [r7, #0]
 8006a6a:	4b09      	ldr	r3, [pc, #36]	; (8006a90 <HAL_MspInit+0x4c>)
 8006a6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a6e:	4a08      	ldr	r2, [pc, #32]	; (8006a90 <HAL_MspInit+0x4c>)
 8006a70:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8006a74:	6413      	str	r3, [r2, #64]	; 0x40
 8006a76:	4b06      	ldr	r3, [pc, #24]	; (8006a90 <HAL_MspInit+0x4c>)
 8006a78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a7a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006a7e:	603b      	str	r3, [r7, #0]
 8006a80:	683b      	ldr	r3, [r7, #0]
 8006a82:	2007      	movs	r0, #7
 8006a84:	f001 fbce 	bl	8008224 <HAL_NVIC_SetPriorityGrouping>
 8006a88:	bf00      	nop
 8006a8a:	3708      	adds	r7, #8
 8006a8c:	46bd      	mov	sp, r7
 8006a8e:	bd80      	pop	{r7, pc}
 8006a90:	40023800 	.word	0x40023800

08006a94 <HAL_ADC_MspInit>:
 8006a94:	b580      	push	{r7, lr}
 8006a96:	b08c      	sub	sp, #48	; 0x30
 8006a98:	af00      	add	r7, sp, #0
 8006a9a:	6078      	str	r0, [r7, #4]
 8006a9c:	f107 031c 	add.w	r3, r7, #28
 8006aa0:	2200      	movs	r2, #0
 8006aa2:	601a      	str	r2, [r3, #0]
 8006aa4:	605a      	str	r2, [r3, #4]
 8006aa6:	609a      	str	r2, [r3, #8]
 8006aa8:	60da      	str	r2, [r3, #12]
 8006aaa:	611a      	str	r2, [r3, #16]
 8006aac:	687b      	ldr	r3, [r7, #4]
 8006aae:	681b      	ldr	r3, [r3, #0]
 8006ab0:	4a2e      	ldr	r2, [pc, #184]	; (8006b6c <HAL_ADC_MspInit+0xd8>)
 8006ab2:	4293      	cmp	r3, r2
 8006ab4:	d128      	bne.n	8006b08 <HAL_ADC_MspInit+0x74>
 8006ab6:	2300      	movs	r3, #0
 8006ab8:	61bb      	str	r3, [r7, #24]
 8006aba:	4b2d      	ldr	r3, [pc, #180]	; (8006b70 <HAL_ADC_MspInit+0xdc>)
 8006abc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006abe:	4a2c      	ldr	r2, [pc, #176]	; (8006b70 <HAL_ADC_MspInit+0xdc>)
 8006ac0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006ac4:	6453      	str	r3, [r2, #68]	; 0x44
 8006ac6:	4b2a      	ldr	r3, [pc, #168]	; (8006b70 <HAL_ADC_MspInit+0xdc>)
 8006ac8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006aca:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006ace:	61bb      	str	r3, [r7, #24]
 8006ad0:	69bb      	ldr	r3, [r7, #24]
 8006ad2:	2300      	movs	r3, #0
 8006ad4:	617b      	str	r3, [r7, #20]
 8006ad6:	4b26      	ldr	r3, [pc, #152]	; (8006b70 <HAL_ADC_MspInit+0xdc>)
 8006ad8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006ada:	4a25      	ldr	r2, [pc, #148]	; (8006b70 <HAL_ADC_MspInit+0xdc>)
 8006adc:	f043 0302 	orr.w	r3, r3, #2
 8006ae0:	6313      	str	r3, [r2, #48]	; 0x30
 8006ae2:	4b23      	ldr	r3, [pc, #140]	; (8006b70 <HAL_ADC_MspInit+0xdc>)
 8006ae4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006ae6:	f003 0302 	and.w	r3, r3, #2
 8006aea:	617b      	str	r3, [r7, #20]
 8006aec:	697b      	ldr	r3, [r7, #20]
 8006aee:	2301      	movs	r3, #1
 8006af0:	61fb      	str	r3, [r7, #28]
 8006af2:	2303      	movs	r3, #3
 8006af4:	623b      	str	r3, [r7, #32]
 8006af6:	2300      	movs	r3, #0
 8006af8:	627b      	str	r3, [r7, #36]	; 0x24
 8006afa:	f107 031c 	add.w	r3, r7, #28
 8006afe:	4619      	mov	r1, r3
 8006b00:	481c      	ldr	r0, [pc, #112]	; (8006b74 <HAL_ADC_MspInit+0xe0>)
 8006b02:	f002 f9ef 	bl	8008ee4 <HAL_GPIO_Init>
 8006b06:	e02c      	b.n	8006b62 <HAL_ADC_MspInit+0xce>
 8006b08:	687b      	ldr	r3, [r7, #4]
 8006b0a:	681b      	ldr	r3, [r3, #0]
 8006b0c:	4a1a      	ldr	r2, [pc, #104]	; (8006b78 <HAL_ADC_MspInit+0xe4>)
 8006b0e:	4293      	cmp	r3, r2
 8006b10:	d127      	bne.n	8006b62 <HAL_ADC_MspInit+0xce>
 8006b12:	2300      	movs	r3, #0
 8006b14:	613b      	str	r3, [r7, #16]
 8006b16:	4b16      	ldr	r3, [pc, #88]	; (8006b70 <HAL_ADC_MspInit+0xdc>)
 8006b18:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006b1a:	4a15      	ldr	r2, [pc, #84]	; (8006b70 <HAL_ADC_MspInit+0xdc>)
 8006b1c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006b20:	6453      	str	r3, [r2, #68]	; 0x44
 8006b22:	4b13      	ldr	r3, [pc, #76]	; (8006b70 <HAL_ADC_MspInit+0xdc>)
 8006b24:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006b26:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8006b2a:	613b      	str	r3, [r7, #16]
 8006b2c:	693b      	ldr	r3, [r7, #16]
 8006b2e:	2300      	movs	r3, #0
 8006b30:	60fb      	str	r3, [r7, #12]
 8006b32:	4b0f      	ldr	r3, [pc, #60]	; (8006b70 <HAL_ADC_MspInit+0xdc>)
 8006b34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006b36:	4a0e      	ldr	r2, [pc, #56]	; (8006b70 <HAL_ADC_MspInit+0xdc>)
 8006b38:	f043 0304 	orr.w	r3, r3, #4
 8006b3c:	6313      	str	r3, [r2, #48]	; 0x30
 8006b3e:	4b0c      	ldr	r3, [pc, #48]	; (8006b70 <HAL_ADC_MspInit+0xdc>)
 8006b40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006b42:	f003 0304 	and.w	r3, r3, #4
 8006b46:	60fb      	str	r3, [r7, #12]
 8006b48:	68fb      	ldr	r3, [r7, #12]
 8006b4a:	2308      	movs	r3, #8
 8006b4c:	61fb      	str	r3, [r7, #28]
 8006b4e:	2303      	movs	r3, #3
 8006b50:	623b      	str	r3, [r7, #32]
 8006b52:	2300      	movs	r3, #0
 8006b54:	627b      	str	r3, [r7, #36]	; 0x24
 8006b56:	f107 031c 	add.w	r3, r7, #28
 8006b5a:	4619      	mov	r1, r3
 8006b5c:	4807      	ldr	r0, [pc, #28]	; (8006b7c <HAL_ADC_MspInit+0xe8>)
 8006b5e:	f002 f9c1 	bl	8008ee4 <HAL_GPIO_Init>
 8006b62:	bf00      	nop
 8006b64:	3730      	adds	r7, #48	; 0x30
 8006b66:	46bd      	mov	sp, r7
 8006b68:	bd80      	pop	{r7, pc}
 8006b6a:	bf00      	nop
 8006b6c:	40012000 	.word	0x40012000
 8006b70:	40023800 	.word	0x40023800
 8006b74:	40020400 	.word	0x40020400
 8006b78:	40012100 	.word	0x40012100
 8006b7c:	40020800 	.word	0x40020800

08006b80 <HAL_TIM_Base_MspInit>:
 8006b80:	b580      	push	{r7, lr}
 8006b82:	b090      	sub	sp, #64	; 0x40
 8006b84:	af00      	add	r7, sp, #0
 8006b86:	6078      	str	r0, [r7, #4]
 8006b88:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006b8c:	2200      	movs	r2, #0
 8006b8e:	601a      	str	r2, [r3, #0]
 8006b90:	605a      	str	r2, [r3, #4]
 8006b92:	609a      	str	r2, [r3, #8]
 8006b94:	60da      	str	r2, [r3, #12]
 8006b96:	611a      	str	r2, [r3, #16]
 8006b98:	687b      	ldr	r3, [r7, #4]
 8006b9a:	681b      	ldr	r3, [r3, #0]
 8006b9c:	4a72      	ldr	r2, [pc, #456]	; (8006d68 <HAL_TIM_Base_MspInit+0x1e8>)
 8006b9e:	4293      	cmp	r3, r2
 8006ba0:	d10e      	bne.n	8006bc0 <HAL_TIM_Base_MspInit+0x40>
 8006ba2:	2300      	movs	r3, #0
 8006ba4:	62bb      	str	r3, [r7, #40]	; 0x28
 8006ba6:	4b71      	ldr	r3, [pc, #452]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006ba8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006baa:	4a70      	ldr	r2, [pc, #448]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006bac:	f043 0301 	orr.w	r3, r3, #1
 8006bb0:	6453      	str	r3, [r2, #68]	; 0x44
 8006bb2:	4b6e      	ldr	r3, [pc, #440]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006bb4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006bb6:	f003 0301 	and.w	r3, r3, #1
 8006bba:	62bb      	str	r3, [r7, #40]	; 0x28
 8006bbc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006bbe:	e0cf      	b.n	8006d60 <HAL_TIM_Base_MspInit+0x1e0>
 8006bc0:	687b      	ldr	r3, [r7, #4]
 8006bc2:	681b      	ldr	r3, [r3, #0]
 8006bc4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006bc8:	d116      	bne.n	8006bf8 <HAL_TIM_Base_MspInit+0x78>
 8006bca:	2300      	movs	r3, #0
 8006bcc:	627b      	str	r3, [r7, #36]	; 0x24
 8006bce:	4b67      	ldr	r3, [pc, #412]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006bd0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006bd2:	4a66      	ldr	r2, [pc, #408]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006bd4:	f043 0301 	orr.w	r3, r3, #1
 8006bd8:	6413      	str	r3, [r2, #64]	; 0x40
 8006bda:	4b64      	ldr	r3, [pc, #400]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006bdc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006bde:	f003 0301 	and.w	r3, r3, #1
 8006be2:	627b      	str	r3, [r7, #36]	; 0x24
 8006be4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006be6:	2200      	movs	r2, #0
 8006be8:	2100      	movs	r1, #0
 8006bea:	201c      	movs	r0, #28
 8006bec:	f001 fb25 	bl	800823a <HAL_NVIC_SetPriority>
 8006bf0:	201c      	movs	r0, #28
 8006bf2:	f001 fb3e 	bl	8008272 <HAL_NVIC_EnableIRQ>
 8006bf6:	e0b3      	b.n	8006d60 <HAL_TIM_Base_MspInit+0x1e0>
 8006bf8:	687b      	ldr	r3, [r7, #4]
 8006bfa:	681b      	ldr	r3, [r3, #0]
 8006bfc:	4a5c      	ldr	r2, [pc, #368]	; (8006d70 <HAL_TIM_Base_MspInit+0x1f0>)
 8006bfe:	4293      	cmp	r3, r2
 8006c00:	d10e      	bne.n	8006c20 <HAL_TIM_Base_MspInit+0xa0>
 8006c02:	2300      	movs	r3, #0
 8006c04:	623b      	str	r3, [r7, #32]
 8006c06:	4b59      	ldr	r3, [pc, #356]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006c08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c0a:	4a58      	ldr	r2, [pc, #352]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006c0c:	f043 0302 	orr.w	r3, r3, #2
 8006c10:	6413      	str	r3, [r2, #64]	; 0x40
 8006c12:	4b56      	ldr	r3, [pc, #344]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006c14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c16:	f003 0302 	and.w	r3, r3, #2
 8006c1a:	623b      	str	r3, [r7, #32]
 8006c1c:	6a3b      	ldr	r3, [r7, #32]
 8006c1e:	e09f      	b.n	8006d60 <HAL_TIM_Base_MspInit+0x1e0>
 8006c20:	687b      	ldr	r3, [r7, #4]
 8006c22:	681b      	ldr	r3, [r3, #0]
 8006c24:	4a53      	ldr	r2, [pc, #332]	; (8006d74 <HAL_TIM_Base_MspInit+0x1f4>)
 8006c26:	4293      	cmp	r3, r2
 8006c28:	d15f      	bne.n	8006cea <HAL_TIM_Base_MspInit+0x16a>
 8006c2a:	2300      	movs	r3, #0
 8006c2c:	61fb      	str	r3, [r7, #28]
 8006c2e:	4b4f      	ldr	r3, [pc, #316]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006c30:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c32:	4a4e      	ldr	r2, [pc, #312]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006c34:	f043 0304 	orr.w	r3, r3, #4
 8006c38:	6413      	str	r3, [r2, #64]	; 0x40
 8006c3a:	4b4c      	ldr	r3, [pc, #304]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006c3c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c3e:	f003 0304 	and.w	r3, r3, #4
 8006c42:	61fb      	str	r3, [r7, #28]
 8006c44:	69fb      	ldr	r3, [r7, #28]
 8006c46:	2300      	movs	r3, #0
 8006c48:	61bb      	str	r3, [r7, #24]
 8006c4a:	4b48      	ldr	r3, [pc, #288]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006c4c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006c4e:	4a47      	ldr	r2, [pc, #284]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006c50:	f043 0302 	orr.w	r3, r3, #2
 8006c54:	6313      	str	r3, [r2, #48]	; 0x30
 8006c56:	4b45      	ldr	r3, [pc, #276]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006c58:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006c5a:	f003 0302 	and.w	r3, r3, #2
 8006c5e:	61bb      	str	r3, [r7, #24]
 8006c60:	69bb      	ldr	r3, [r7, #24]
 8006c62:	f44f 7340 	mov.w	r3, #768	; 0x300
 8006c66:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006c68:	2302      	movs	r3, #2
 8006c6a:	633b      	str	r3, [r7, #48]	; 0x30
 8006c6c:	2300      	movs	r3, #0
 8006c6e:	637b      	str	r3, [r7, #52]	; 0x34
 8006c70:	2300      	movs	r3, #0
 8006c72:	63bb      	str	r3, [r7, #56]	; 0x38
 8006c74:	2302      	movs	r3, #2
 8006c76:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006c78:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006c7c:	4619      	mov	r1, r3
 8006c7e:	483e      	ldr	r0, [pc, #248]	; (8006d78 <HAL_TIM_Base_MspInit+0x1f8>)
 8006c80:	f002 f930 	bl	8008ee4 <HAL_GPIO_Init>
 8006c84:	4b3d      	ldr	r3, [pc, #244]	; (8006d7c <HAL_TIM_Base_MspInit+0x1fc>)
 8006c86:	4a3e      	ldr	r2, [pc, #248]	; (8006d80 <HAL_TIM_Base_MspInit+0x200>)
 8006c88:	601a      	str	r2, [r3, #0]
 8006c8a:	4b3c      	ldr	r3, [pc, #240]	; (8006d7c <HAL_TIM_Base_MspInit+0x1fc>)
 8006c8c:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8006c90:	605a      	str	r2, [r3, #4]
 8006c92:	4b3a      	ldr	r3, [pc, #232]	; (8006d7c <HAL_TIM_Base_MspInit+0x1fc>)
 8006c94:	2200      	movs	r2, #0
 8006c96:	609a      	str	r2, [r3, #8]
 8006c98:	4b38      	ldr	r3, [pc, #224]	; (8006d7c <HAL_TIM_Base_MspInit+0x1fc>)
 8006c9a:	2200      	movs	r2, #0
 8006c9c:	60da      	str	r2, [r3, #12]
 8006c9e:	4b37      	ldr	r3, [pc, #220]	; (8006d7c <HAL_TIM_Base_MspInit+0x1fc>)
 8006ca0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8006ca4:	611a      	str	r2, [r3, #16]
 8006ca6:	4b35      	ldr	r3, [pc, #212]	; (8006d7c <HAL_TIM_Base_MspInit+0x1fc>)
 8006ca8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8006cac:	615a      	str	r2, [r3, #20]
 8006cae:	4b33      	ldr	r3, [pc, #204]	; (8006d7c <HAL_TIM_Base_MspInit+0x1fc>)
 8006cb0:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8006cb4:	619a      	str	r2, [r3, #24]
 8006cb6:	4b31      	ldr	r3, [pc, #196]	; (8006d7c <HAL_TIM_Base_MspInit+0x1fc>)
 8006cb8:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006cbc:	61da      	str	r2, [r3, #28]
 8006cbe:	4b2f      	ldr	r3, [pc, #188]	; (8006d7c <HAL_TIM_Base_MspInit+0x1fc>)
 8006cc0:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8006cc4:	621a      	str	r2, [r3, #32]
 8006cc6:	4b2d      	ldr	r3, [pc, #180]	; (8006d7c <HAL_TIM_Base_MspInit+0x1fc>)
 8006cc8:	2200      	movs	r2, #0
 8006cca:	625a      	str	r2, [r3, #36]	; 0x24
 8006ccc:	482b      	ldr	r0, [pc, #172]	; (8006d7c <HAL_TIM_Base_MspInit+0x1fc>)
 8006cce:	f001 faf9 	bl	80082c4 <HAL_DMA_Init>
 8006cd2:	4603      	mov	r3, r0
 8006cd4:	2b00      	cmp	r3, #0
 8006cd6:	d001      	beq.n	8006cdc <HAL_TIM_Base_MspInit+0x15c>
 8006cd8:	f7ff fddc 	bl	8006894 <Error_Handler>
 8006cdc:	687b      	ldr	r3, [r7, #4]
 8006cde:	4a27      	ldr	r2, [pc, #156]	; (8006d7c <HAL_TIM_Base_MspInit+0x1fc>)
 8006ce0:	62da      	str	r2, [r3, #44]	; 0x2c
 8006ce2:	4a26      	ldr	r2, [pc, #152]	; (8006d7c <HAL_TIM_Base_MspInit+0x1fc>)
 8006ce4:	687b      	ldr	r3, [r7, #4]
 8006ce6:	6393      	str	r3, [r2, #56]	; 0x38
 8006ce8:	e03a      	b.n	8006d60 <HAL_TIM_Base_MspInit+0x1e0>
 8006cea:	687b      	ldr	r3, [r7, #4]
 8006cec:	681b      	ldr	r3, [r3, #0]
 8006cee:	4a25      	ldr	r2, [pc, #148]	; (8006d84 <HAL_TIM_Base_MspInit+0x204>)
 8006cf0:	4293      	cmp	r3, r2
 8006cf2:	d10e      	bne.n	8006d12 <HAL_TIM_Base_MspInit+0x192>
 8006cf4:	2300      	movs	r3, #0
 8006cf6:	617b      	str	r3, [r7, #20]
 8006cf8:	4b1c      	ldr	r3, [pc, #112]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006cfa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006cfc:	4a1b      	ldr	r2, [pc, #108]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006cfe:	f043 0308 	orr.w	r3, r3, #8
 8006d02:	6413      	str	r3, [r2, #64]	; 0x40
 8006d04:	4b19      	ldr	r3, [pc, #100]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006d06:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d08:	f003 0308 	and.w	r3, r3, #8
 8006d0c:	617b      	str	r3, [r7, #20]
 8006d0e:	697b      	ldr	r3, [r7, #20]
 8006d10:	e026      	b.n	8006d60 <HAL_TIM_Base_MspInit+0x1e0>
 8006d12:	687b      	ldr	r3, [r7, #4]
 8006d14:	681b      	ldr	r3, [r3, #0]
 8006d16:	4a1c      	ldr	r2, [pc, #112]	; (8006d88 <HAL_TIM_Base_MspInit+0x208>)
 8006d18:	4293      	cmp	r3, r2
 8006d1a:	d10e      	bne.n	8006d3a <HAL_TIM_Base_MspInit+0x1ba>
 8006d1c:	2300      	movs	r3, #0
 8006d1e:	613b      	str	r3, [r7, #16]
 8006d20:	4b12      	ldr	r3, [pc, #72]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006d22:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d24:	4a11      	ldr	r2, [pc, #68]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006d26:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006d2a:	6413      	str	r3, [r2, #64]	; 0x40
 8006d2c:	4b0f      	ldr	r3, [pc, #60]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006d2e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d30:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006d34:	613b      	str	r3, [r7, #16]
 8006d36:	693b      	ldr	r3, [r7, #16]
 8006d38:	e012      	b.n	8006d60 <HAL_TIM_Base_MspInit+0x1e0>
 8006d3a:	687b      	ldr	r3, [r7, #4]
 8006d3c:	681b      	ldr	r3, [r3, #0]
 8006d3e:	4a13      	ldr	r2, [pc, #76]	; (8006d8c <HAL_TIM_Base_MspInit+0x20c>)
 8006d40:	4293      	cmp	r3, r2
 8006d42:	d10d      	bne.n	8006d60 <HAL_TIM_Base_MspInit+0x1e0>
 8006d44:	2300      	movs	r3, #0
 8006d46:	60fb      	str	r3, [r7, #12]
 8006d48:	4b08      	ldr	r3, [pc, #32]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006d4a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d4c:	4a07      	ldr	r2, [pc, #28]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006d4e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006d52:	6413      	str	r3, [r2, #64]	; 0x40
 8006d54:	4b05      	ldr	r3, [pc, #20]	; (8006d6c <HAL_TIM_Base_MspInit+0x1ec>)
 8006d56:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d58:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006d5c:	60fb      	str	r3, [r7, #12]
 8006d5e:	68fb      	ldr	r3, [r7, #12]
 8006d60:	bf00      	nop
 8006d62:	3740      	adds	r7, #64	; 0x40
 8006d64:	46bd      	mov	sp, r7
 8006d66:	bd80      	pop	{r7, pc}
 8006d68:	40010000 	.word	0x40010000
 8006d6c:	40023800 	.word	0x40023800
 8006d70:	40000400 	.word	0x40000400
 8006d74:	40000800 	.word	0x40000800
 8006d78:	40020400 	.word	0x40020400
 8006d7c:	20000acc 	.word	0x20000acc
 8006d80:	400260b8 	.word	0x400260b8
 8006d84:	40000c00 	.word	0x40000c00
 8006d88:	40001c00 	.word	0x40001c00
 8006d8c:	40002000 	.word	0x40002000

08006d90 <HAL_TIM_Encoder_MspInit>:
 8006d90:	b580      	push	{r7, lr}
 8006d92:	b08a      	sub	sp, #40	; 0x28
 8006d94:	af00      	add	r7, sp, #0
 8006d96:	6078      	str	r0, [r7, #4]
 8006d98:	f107 0314 	add.w	r3, r7, #20
 8006d9c:	2200      	movs	r2, #0
 8006d9e:	601a      	str	r2, [r3, #0]
 8006da0:	605a      	str	r2, [r3, #4]
 8006da2:	609a      	str	r2, [r3, #8]
 8006da4:	60da      	str	r2, [r3, #12]
 8006da6:	611a      	str	r2, [r3, #16]
 8006da8:	687b      	ldr	r3, [r7, #4]
 8006daa:	681b      	ldr	r3, [r3, #0]
 8006dac:	4a19      	ldr	r2, [pc, #100]	; (8006e14 <HAL_TIM_Encoder_MspInit+0x84>)
 8006dae:	4293      	cmp	r3, r2
 8006db0:	d12b      	bne.n	8006e0a <HAL_TIM_Encoder_MspInit+0x7a>
 8006db2:	2300      	movs	r3, #0
 8006db4:	613b      	str	r3, [r7, #16]
 8006db6:	4b18      	ldr	r3, [pc, #96]	; (8006e18 <HAL_TIM_Encoder_MspInit+0x88>)
 8006db8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006dba:	4a17      	ldr	r2, [pc, #92]	; (8006e18 <HAL_TIM_Encoder_MspInit+0x88>)
 8006dbc:	f043 0302 	orr.w	r3, r3, #2
 8006dc0:	6453      	str	r3, [r2, #68]	; 0x44
 8006dc2:	4b15      	ldr	r3, [pc, #84]	; (8006e18 <HAL_TIM_Encoder_MspInit+0x88>)
 8006dc4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006dc6:	f003 0302 	and.w	r3, r3, #2
 8006dca:	613b      	str	r3, [r7, #16]
 8006dcc:	693b      	ldr	r3, [r7, #16]
 8006dce:	2300      	movs	r3, #0
 8006dd0:	60fb      	str	r3, [r7, #12]
 8006dd2:	4b11      	ldr	r3, [pc, #68]	; (8006e18 <HAL_TIM_Encoder_MspInit+0x88>)
 8006dd4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006dd6:	4a10      	ldr	r2, [pc, #64]	; (8006e18 <HAL_TIM_Encoder_MspInit+0x88>)
 8006dd8:	f043 0304 	orr.w	r3, r3, #4
 8006ddc:	6313      	str	r3, [r2, #48]	; 0x30
 8006dde:	4b0e      	ldr	r3, [pc, #56]	; (8006e18 <HAL_TIM_Encoder_MspInit+0x88>)
 8006de0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006de2:	f003 0304 	and.w	r3, r3, #4
 8006de6:	60fb      	str	r3, [r7, #12]
 8006de8:	68fb      	ldr	r3, [r7, #12]
 8006dea:	23c0      	movs	r3, #192	; 0xc0
 8006dec:	617b      	str	r3, [r7, #20]
 8006dee:	2302      	movs	r3, #2
 8006df0:	61bb      	str	r3, [r7, #24]
 8006df2:	2300      	movs	r3, #0
 8006df4:	61fb      	str	r3, [r7, #28]
 8006df6:	2300      	movs	r3, #0
 8006df8:	623b      	str	r3, [r7, #32]
 8006dfa:	2303      	movs	r3, #3
 8006dfc:	627b      	str	r3, [r7, #36]	; 0x24
 8006dfe:	f107 0314 	add.w	r3, r7, #20
 8006e02:	4619      	mov	r1, r3
 8006e04:	4805      	ldr	r0, [pc, #20]	; (8006e1c <HAL_TIM_Encoder_MspInit+0x8c>)
 8006e06:	f002 f86d 	bl	8008ee4 <HAL_GPIO_Init>
 8006e0a:	bf00      	nop
 8006e0c:	3728      	adds	r7, #40	; 0x28
 8006e0e:	46bd      	mov	sp, r7
 8006e10:	bd80      	pop	{r7, pc}
 8006e12:	bf00      	nop
 8006e14:	40010400 	.word	0x40010400
 8006e18:	40023800 	.word	0x40023800
 8006e1c:	40020800 	.word	0x40020800

08006e20 <HAL_TIM_MspPostInit>:
 8006e20:	b580      	push	{r7, lr}
 8006e22:	b08a      	sub	sp, #40	; 0x28
 8006e24:	af00      	add	r7, sp, #0
 8006e26:	6078      	str	r0, [r7, #4]
 8006e28:	f107 0314 	add.w	r3, r7, #20
 8006e2c:	2200      	movs	r2, #0
 8006e2e:	601a      	str	r2, [r3, #0]
 8006e30:	605a      	str	r2, [r3, #4]
 8006e32:	609a      	str	r2, [r3, #8]
 8006e34:	60da      	str	r2, [r3, #12]
 8006e36:	611a      	str	r2, [r3, #16]
 8006e38:	687b      	ldr	r3, [r7, #4]
 8006e3a:	681b      	ldr	r3, [r3, #0]
 8006e3c:	4a37      	ldr	r2, [pc, #220]	; (8006f1c <HAL_TIM_MspPostInit+0xfc>)
 8006e3e:	4293      	cmp	r3, r2
 8006e40:	d11f      	bne.n	8006e82 <HAL_TIM_MspPostInit+0x62>
 8006e42:	2300      	movs	r3, #0
 8006e44:	613b      	str	r3, [r7, #16]
 8006e46:	4b36      	ldr	r3, [pc, #216]	; (8006f20 <HAL_TIM_MspPostInit+0x100>)
 8006e48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e4a:	4a35      	ldr	r2, [pc, #212]	; (8006f20 <HAL_TIM_MspPostInit+0x100>)
 8006e4c:	f043 0301 	orr.w	r3, r3, #1
 8006e50:	6313      	str	r3, [r2, #48]	; 0x30
 8006e52:	4b33      	ldr	r3, [pc, #204]	; (8006f20 <HAL_TIM_MspPostInit+0x100>)
 8006e54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e56:	f003 0301 	and.w	r3, r3, #1
 8006e5a:	613b      	str	r3, [r7, #16]
 8006e5c:	693b      	ldr	r3, [r7, #16]
 8006e5e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8006e62:	617b      	str	r3, [r7, #20]
 8006e64:	2302      	movs	r3, #2
 8006e66:	61bb      	str	r3, [r7, #24]
 8006e68:	2300      	movs	r3, #0
 8006e6a:	61fb      	str	r3, [r7, #28]
 8006e6c:	2300      	movs	r3, #0
 8006e6e:	623b      	str	r3, [r7, #32]
 8006e70:	2301      	movs	r3, #1
 8006e72:	627b      	str	r3, [r7, #36]	; 0x24
 8006e74:	f107 0314 	add.w	r3, r7, #20
 8006e78:	4619      	mov	r1, r3
 8006e7a:	482a      	ldr	r0, [pc, #168]	; (8006f24 <HAL_TIM_MspPostInit+0x104>)
 8006e7c:	f002 f832 	bl	8008ee4 <HAL_GPIO_Init>
 8006e80:	e047      	b.n	8006f12 <HAL_TIM_MspPostInit+0xf2>
 8006e82:	687b      	ldr	r3, [r7, #4]
 8006e84:	681b      	ldr	r3, [r3, #0]
 8006e86:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006e8a:	d11f      	bne.n	8006ecc <HAL_TIM_MspPostInit+0xac>
 8006e8c:	2300      	movs	r3, #0
 8006e8e:	60fb      	str	r3, [r7, #12]
 8006e90:	4b23      	ldr	r3, [pc, #140]	; (8006f20 <HAL_TIM_MspPostInit+0x100>)
 8006e92:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e94:	4a22      	ldr	r2, [pc, #136]	; (8006f20 <HAL_TIM_MspPostInit+0x100>)
 8006e96:	f043 0301 	orr.w	r3, r3, #1
 8006e9a:	6313      	str	r3, [r2, #48]	; 0x30
 8006e9c:	4b20      	ldr	r3, [pc, #128]	; (8006f20 <HAL_TIM_MspPostInit+0x100>)
 8006e9e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006ea0:	f003 0301 	and.w	r3, r3, #1
 8006ea4:	60fb      	str	r3, [r7, #12]
 8006ea6:	68fb      	ldr	r3, [r7, #12]
 8006ea8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8006eac:	617b      	str	r3, [r7, #20]
 8006eae:	2302      	movs	r3, #2
 8006eb0:	61bb      	str	r3, [r7, #24]
 8006eb2:	2300      	movs	r3, #0
 8006eb4:	61fb      	str	r3, [r7, #28]
 8006eb6:	2300      	movs	r3, #0
 8006eb8:	623b      	str	r3, [r7, #32]
 8006eba:	2301      	movs	r3, #1
 8006ebc:	627b      	str	r3, [r7, #36]	; 0x24
 8006ebe:	f107 0314 	add.w	r3, r7, #20
 8006ec2:	4619      	mov	r1, r3
 8006ec4:	4817      	ldr	r0, [pc, #92]	; (8006f24 <HAL_TIM_MspPostInit+0x104>)
 8006ec6:	f002 f80d 	bl	8008ee4 <HAL_GPIO_Init>
 8006eca:	e022      	b.n	8006f12 <HAL_TIM_MspPostInit+0xf2>
 8006ecc:	687b      	ldr	r3, [r7, #4]
 8006ece:	681b      	ldr	r3, [r3, #0]
 8006ed0:	4a15      	ldr	r2, [pc, #84]	; (8006f28 <HAL_TIM_MspPostInit+0x108>)
 8006ed2:	4293      	cmp	r3, r2
 8006ed4:	d11d      	bne.n	8006f12 <HAL_TIM_MspPostInit+0xf2>
 8006ed6:	2300      	movs	r3, #0
 8006ed8:	60bb      	str	r3, [r7, #8]
 8006eda:	4b11      	ldr	r3, [pc, #68]	; (8006f20 <HAL_TIM_MspPostInit+0x100>)
 8006edc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006ede:	4a10      	ldr	r2, [pc, #64]	; (8006f20 <HAL_TIM_MspPostInit+0x100>)
 8006ee0:	f043 0301 	orr.w	r3, r3, #1
 8006ee4:	6313      	str	r3, [r2, #48]	; 0x30
 8006ee6:	4b0e      	ldr	r3, [pc, #56]	; (8006f20 <HAL_TIM_MspPostInit+0x100>)
 8006ee8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006eea:	f003 0301 	and.w	r3, r3, #1
 8006eee:	60bb      	str	r3, [r7, #8]
 8006ef0:	68bb      	ldr	r3, [r7, #8]
 8006ef2:	23c0      	movs	r3, #192	; 0xc0
 8006ef4:	617b      	str	r3, [r7, #20]
 8006ef6:	2302      	movs	r3, #2
 8006ef8:	61bb      	str	r3, [r7, #24]
 8006efa:	2300      	movs	r3, #0
 8006efc:	61fb      	str	r3, [r7, #28]
 8006efe:	2300      	movs	r3, #0
 8006f00:	623b      	str	r3, [r7, #32]
 8006f02:	2302      	movs	r3, #2
 8006f04:	627b      	str	r3, [r7, #36]	; 0x24
 8006f06:	f107 0314 	add.w	r3, r7, #20
 8006f0a:	4619      	mov	r1, r3
 8006f0c:	4805      	ldr	r0, [pc, #20]	; (8006f24 <HAL_TIM_MspPostInit+0x104>)
 8006f0e:	f001 ffe9 	bl	8008ee4 <HAL_GPIO_Init>
 8006f12:	bf00      	nop
 8006f14:	3728      	adds	r7, #40	; 0x28
 8006f16:	46bd      	mov	sp, r7
 8006f18:	bd80      	pop	{r7, pc}
 8006f1a:	bf00      	nop
 8006f1c:	40010000 	.word	0x40010000
 8006f20:	40023800 	.word	0x40023800
 8006f24:	40020000 	.word	0x40020000
 8006f28:	40000400 	.word	0x40000400

08006f2c <HAL_UART_MspInit>:
 8006f2c:	b580      	push	{r7, lr}
 8006f2e:	b090      	sub	sp, #64	; 0x40
 8006f30:	af00      	add	r7, sp, #0
 8006f32:	6078      	str	r0, [r7, #4]
 8006f34:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006f38:	2200      	movs	r2, #0
 8006f3a:	601a      	str	r2, [r3, #0]
 8006f3c:	605a      	str	r2, [r3, #4]
 8006f3e:	609a      	str	r2, [r3, #8]
 8006f40:	60da      	str	r2, [r3, #12]
 8006f42:	611a      	str	r2, [r3, #16]
 8006f44:	687b      	ldr	r3, [r7, #4]
 8006f46:	681b      	ldr	r3, [r3, #0]
 8006f48:	4a7c      	ldr	r2, [pc, #496]	; (800713c <HAL_UART_MspInit+0x210>)
 8006f4a:	4293      	cmp	r3, r2
 8006f4c:	d14b      	bne.n	8006fe6 <HAL_UART_MspInit+0xba>
 8006f4e:	2300      	movs	r3, #0
 8006f50:	62bb      	str	r3, [r7, #40]	; 0x28
 8006f52:	4b7b      	ldr	r3, [pc, #492]	; (8007140 <HAL_UART_MspInit+0x214>)
 8006f54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006f56:	4a7a      	ldr	r2, [pc, #488]	; (8007140 <HAL_UART_MspInit+0x214>)
 8006f58:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8006f5c:	6413      	str	r3, [r2, #64]	; 0x40
 8006f5e:	4b78      	ldr	r3, [pc, #480]	; (8007140 <HAL_UART_MspInit+0x214>)
 8006f60:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006f62:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8006f66:	62bb      	str	r3, [r7, #40]	; 0x28
 8006f68:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006f6a:	2300      	movs	r3, #0
 8006f6c:	627b      	str	r3, [r7, #36]	; 0x24
 8006f6e:	4b74      	ldr	r3, [pc, #464]	; (8007140 <HAL_UART_MspInit+0x214>)
 8006f70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006f72:	4a73      	ldr	r2, [pc, #460]	; (8007140 <HAL_UART_MspInit+0x214>)
 8006f74:	f043 0304 	orr.w	r3, r3, #4
 8006f78:	6313      	str	r3, [r2, #48]	; 0x30
 8006f7a:	4b71      	ldr	r3, [pc, #452]	; (8007140 <HAL_UART_MspInit+0x214>)
 8006f7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006f7e:	f003 0304 	and.w	r3, r3, #4
 8006f82:	627b      	str	r3, [r7, #36]	; 0x24
 8006f84:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006f86:	2300      	movs	r3, #0
 8006f88:	623b      	str	r3, [r7, #32]
 8006f8a:	4b6d      	ldr	r3, [pc, #436]	; (8007140 <HAL_UART_MspInit+0x214>)
 8006f8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006f8e:	4a6c      	ldr	r2, [pc, #432]	; (8007140 <HAL_UART_MspInit+0x214>)
 8006f90:	f043 0308 	orr.w	r3, r3, #8
 8006f94:	6313      	str	r3, [r2, #48]	; 0x30
 8006f96:	4b6a      	ldr	r3, [pc, #424]	; (8007140 <HAL_UART_MspInit+0x214>)
 8006f98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006f9a:	f003 0308 	and.w	r3, r3, #8
 8006f9e:	623b      	str	r3, [r7, #32]
 8006fa0:	6a3b      	ldr	r3, [r7, #32]
 8006fa2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8006fa6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006fa8:	2302      	movs	r3, #2
 8006faa:	633b      	str	r3, [r7, #48]	; 0x30
 8006fac:	2300      	movs	r3, #0
 8006fae:	637b      	str	r3, [r7, #52]	; 0x34
 8006fb0:	2303      	movs	r3, #3
 8006fb2:	63bb      	str	r3, [r7, #56]	; 0x38
 8006fb4:	2308      	movs	r3, #8
 8006fb6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006fb8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006fbc:	4619      	mov	r1, r3
 8006fbe:	4861      	ldr	r0, [pc, #388]	; (8007144 <HAL_UART_MspInit+0x218>)
 8006fc0:	f001 ff90 	bl	8008ee4 <HAL_GPIO_Init>
 8006fc4:	2304      	movs	r3, #4
 8006fc6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006fc8:	2302      	movs	r3, #2
 8006fca:	633b      	str	r3, [r7, #48]	; 0x30
 8006fcc:	2300      	movs	r3, #0
 8006fce:	637b      	str	r3, [r7, #52]	; 0x34
 8006fd0:	2303      	movs	r3, #3
 8006fd2:	63bb      	str	r3, [r7, #56]	; 0x38
 8006fd4:	2308      	movs	r3, #8
 8006fd6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006fd8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006fdc:	4619      	mov	r1, r3
 8006fde:	485a      	ldr	r0, [pc, #360]	; (8007148 <HAL_UART_MspInit+0x21c>)
 8006fe0:	f001 ff80 	bl	8008ee4 <HAL_GPIO_Init>
 8006fe4:	e0a6      	b.n	8007134 <HAL_UART_MspInit+0x208>
 8006fe6:	687b      	ldr	r3, [r7, #4]
 8006fe8:	681b      	ldr	r3, [r3, #0]
 8006fea:	4a58      	ldr	r2, [pc, #352]	; (800714c <HAL_UART_MspInit+0x220>)
 8006fec:	4293      	cmp	r3, r2
 8006fee:	d135      	bne.n	800705c <HAL_UART_MspInit+0x130>
 8006ff0:	2300      	movs	r3, #0
 8006ff2:	61fb      	str	r3, [r7, #28]
 8006ff4:	4b52      	ldr	r3, [pc, #328]	; (8007140 <HAL_UART_MspInit+0x214>)
 8006ff6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006ff8:	4a51      	ldr	r2, [pc, #324]	; (8007140 <HAL_UART_MspInit+0x214>)
 8006ffa:	f043 0310 	orr.w	r3, r3, #16
 8006ffe:	6453      	str	r3, [r2, #68]	; 0x44
 8007000:	4b4f      	ldr	r3, [pc, #316]	; (8007140 <HAL_UART_MspInit+0x214>)
 8007002:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007004:	f003 0310 	and.w	r3, r3, #16
 8007008:	61fb      	str	r3, [r7, #28]
 800700a:	69fb      	ldr	r3, [r7, #28]
 800700c:	2300      	movs	r3, #0
 800700e:	61bb      	str	r3, [r7, #24]
 8007010:	4b4b      	ldr	r3, [pc, #300]	; (8007140 <HAL_UART_MspInit+0x214>)
 8007012:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007014:	4a4a      	ldr	r2, [pc, #296]	; (8007140 <HAL_UART_MspInit+0x214>)
 8007016:	f043 0301 	orr.w	r3, r3, #1
 800701a:	6313      	str	r3, [r2, #48]	; 0x30
 800701c:	4b48      	ldr	r3, [pc, #288]	; (8007140 <HAL_UART_MspInit+0x214>)
 800701e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007020:	f003 0301 	and.w	r3, r3, #1
 8007024:	61bb      	str	r3, [r7, #24]
 8007026:	69bb      	ldr	r3, [r7, #24]
 8007028:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800702c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800702e:	2302      	movs	r3, #2
 8007030:	633b      	str	r3, [r7, #48]	; 0x30
 8007032:	2300      	movs	r3, #0
 8007034:	637b      	str	r3, [r7, #52]	; 0x34
 8007036:	2303      	movs	r3, #3
 8007038:	63bb      	str	r3, [r7, #56]	; 0x38
 800703a:	2307      	movs	r3, #7
 800703c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800703e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8007042:	4619      	mov	r1, r3
 8007044:	4842      	ldr	r0, [pc, #264]	; (8007150 <HAL_UART_MspInit+0x224>)
 8007046:	f001 ff4d 	bl	8008ee4 <HAL_GPIO_Init>
 800704a:	2200      	movs	r2, #0
 800704c:	2100      	movs	r1, #0
 800704e:	2025      	movs	r0, #37	; 0x25
 8007050:	f001 f8f3 	bl	800823a <HAL_NVIC_SetPriority>
 8007054:	2025      	movs	r0, #37	; 0x25
 8007056:	f001 f90c 	bl	8008272 <HAL_NVIC_EnableIRQ>
 800705a:	e06b      	b.n	8007134 <HAL_UART_MspInit+0x208>
 800705c:	687b      	ldr	r3, [r7, #4]
 800705e:	681b      	ldr	r3, [r3, #0]
 8007060:	4a3c      	ldr	r2, [pc, #240]	; (8007154 <HAL_UART_MspInit+0x228>)
 8007062:	4293      	cmp	r3, r2
 8007064:	d12c      	bne.n	80070c0 <HAL_UART_MspInit+0x194>
 8007066:	2300      	movs	r3, #0
 8007068:	617b      	str	r3, [r7, #20]
 800706a:	4b35      	ldr	r3, [pc, #212]	; (8007140 <HAL_UART_MspInit+0x214>)
 800706c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800706e:	4a34      	ldr	r2, [pc, #208]	; (8007140 <HAL_UART_MspInit+0x214>)
 8007070:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007074:	6413      	str	r3, [r2, #64]	; 0x40
 8007076:	4b32      	ldr	r3, [pc, #200]	; (8007140 <HAL_UART_MspInit+0x214>)
 8007078:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800707a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800707e:	617b      	str	r3, [r7, #20]
 8007080:	697b      	ldr	r3, [r7, #20]
 8007082:	2300      	movs	r3, #0
 8007084:	613b      	str	r3, [r7, #16]
 8007086:	4b2e      	ldr	r3, [pc, #184]	; (8007140 <HAL_UART_MspInit+0x214>)
 8007088:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800708a:	4a2d      	ldr	r2, [pc, #180]	; (8007140 <HAL_UART_MspInit+0x214>)
 800708c:	f043 0301 	orr.w	r3, r3, #1
 8007090:	6313      	str	r3, [r2, #48]	; 0x30
 8007092:	4b2b      	ldr	r3, [pc, #172]	; (8007140 <HAL_UART_MspInit+0x214>)
 8007094:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007096:	f003 0301 	and.w	r3, r3, #1
 800709a:	613b      	str	r3, [r7, #16]
 800709c:	693b      	ldr	r3, [r7, #16]
 800709e:	230c      	movs	r3, #12
 80070a0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80070a2:	2302      	movs	r3, #2
 80070a4:	633b      	str	r3, [r7, #48]	; 0x30
 80070a6:	2300      	movs	r3, #0
 80070a8:	637b      	str	r3, [r7, #52]	; 0x34
 80070aa:	2303      	movs	r3, #3
 80070ac:	63bb      	str	r3, [r7, #56]	; 0x38
 80070ae:	2307      	movs	r3, #7
 80070b0:	63fb      	str	r3, [r7, #60]	; 0x3c
 80070b2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80070b6:	4619      	mov	r1, r3
 80070b8:	4825      	ldr	r0, [pc, #148]	; (8007150 <HAL_UART_MspInit+0x224>)
 80070ba:	f001 ff13 	bl	8008ee4 <HAL_GPIO_Init>
 80070be:	e039      	b.n	8007134 <HAL_UART_MspInit+0x208>
 80070c0:	687b      	ldr	r3, [r7, #4]
 80070c2:	681b      	ldr	r3, [r3, #0]
 80070c4:	4a24      	ldr	r2, [pc, #144]	; (8007158 <HAL_UART_MspInit+0x22c>)
 80070c6:	4293      	cmp	r3, r2
 80070c8:	d134      	bne.n	8007134 <HAL_UART_MspInit+0x208>
 80070ca:	2300      	movs	r3, #0
 80070cc:	60fb      	str	r3, [r7, #12]
 80070ce:	4b1c      	ldr	r3, [pc, #112]	; (8007140 <HAL_UART_MspInit+0x214>)
 80070d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80070d2:	4a1b      	ldr	r2, [pc, #108]	; (8007140 <HAL_UART_MspInit+0x214>)
 80070d4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80070d8:	6413      	str	r3, [r2, #64]	; 0x40
 80070da:	4b19      	ldr	r3, [pc, #100]	; (8007140 <HAL_UART_MspInit+0x214>)
 80070dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80070de:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80070e2:	60fb      	str	r3, [r7, #12]
 80070e4:	68fb      	ldr	r3, [r7, #12]
 80070e6:	2300      	movs	r3, #0
 80070e8:	60bb      	str	r3, [r7, #8]
 80070ea:	4b15      	ldr	r3, [pc, #84]	; (8007140 <HAL_UART_MspInit+0x214>)
 80070ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80070ee:	4a14      	ldr	r2, [pc, #80]	; (8007140 <HAL_UART_MspInit+0x214>)
 80070f0:	f043 0304 	orr.w	r3, r3, #4
 80070f4:	6313      	str	r3, [r2, #48]	; 0x30
 80070f6:	4b12      	ldr	r3, [pc, #72]	; (8007140 <HAL_UART_MspInit+0x214>)
 80070f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80070fa:	f003 0304 	and.w	r3, r3, #4
 80070fe:	60bb      	str	r3, [r7, #8]
 8007100:	68bb      	ldr	r3, [r7, #8]
 8007102:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8007106:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007108:	2302      	movs	r3, #2
 800710a:	633b      	str	r3, [r7, #48]	; 0x30
 800710c:	2300      	movs	r3, #0
 800710e:	637b      	str	r3, [r7, #52]	; 0x34
 8007110:	2303      	movs	r3, #3
 8007112:	63bb      	str	r3, [r7, #56]	; 0x38
 8007114:	2307      	movs	r3, #7
 8007116:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007118:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800711c:	4619      	mov	r1, r3
 800711e:	4809      	ldr	r0, [pc, #36]	; (8007144 <HAL_UART_MspInit+0x218>)
 8007120:	f001 fee0 	bl	8008ee4 <HAL_GPIO_Init>
 8007124:	2200      	movs	r2, #0
 8007126:	2100      	movs	r1, #0
 8007128:	2027      	movs	r0, #39	; 0x27
 800712a:	f001 f886 	bl	800823a <HAL_NVIC_SetPriority>
 800712e:	2027      	movs	r0, #39	; 0x27
 8007130:	f001 f89f 	bl	8008272 <HAL_NVIC_EnableIRQ>
 8007134:	bf00      	nop
 8007136:	3740      	adds	r7, #64	; 0x40
 8007138:	46bd      	mov	sp, r7
 800713a:	bd80      	pop	{r7, pc}
 800713c:	40005000 	.word	0x40005000
 8007140:	40023800 	.word	0x40023800
 8007144:	40020800 	.word	0x40020800
 8007148:	40020c00 	.word	0x40020c00
 800714c:	40011000 	.word	0x40011000
 8007150:	40020000 	.word	0x40020000
 8007154:	40004400 	.word	0x40004400
 8007158:	40004800 	.word	0x40004800

0800715c <NMI_Handler>:
 800715c:	b480      	push	{r7}
 800715e:	af00      	add	r7, sp, #0
 8007160:	e7fe      	b.n	8007160 <NMI_Handler+0x4>

08007162 <HardFault_Handler>:
 8007162:	b480      	push	{r7}
 8007164:	af00      	add	r7, sp, #0
 8007166:	e7fe      	b.n	8007166 <HardFault_Handler+0x4>

08007168 <MemManage_Handler>:
 8007168:	b480      	push	{r7}
 800716a:	af00      	add	r7, sp, #0
 800716c:	e7fe      	b.n	800716c <MemManage_Handler+0x4>

0800716e <BusFault_Handler>:
 800716e:	b480      	push	{r7}
 8007170:	af00      	add	r7, sp, #0
 8007172:	e7fe      	b.n	8007172 <BusFault_Handler+0x4>

08007174 <UsageFault_Handler>:
 8007174:	b480      	push	{r7}
 8007176:	af00      	add	r7, sp, #0
 8007178:	e7fe      	b.n	8007178 <UsageFault_Handler+0x4>

0800717a <SVC_Handler>:
 800717a:	b480      	push	{r7}
 800717c:	af00      	add	r7, sp, #0
 800717e:	bf00      	nop
 8007180:	46bd      	mov	sp, r7
 8007182:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007186:	4770      	bx	lr

08007188 <DebugMon_Handler>:
 8007188:	b480      	push	{r7}
 800718a:	af00      	add	r7, sp, #0
 800718c:	bf00      	nop
 800718e:	46bd      	mov	sp, r7
 8007190:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007194:	4770      	bx	lr

08007196 <PendSV_Handler>:
 8007196:	b480      	push	{r7}
 8007198:	af00      	add	r7, sp, #0
 800719a:	bf00      	nop
 800719c:	46bd      	mov	sp, r7
 800719e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071a2:	4770      	bx	lr

080071a4 <SysTick_Handler>:
 80071a4:	b580      	push	{r7, lr}
 80071a6:	af00      	add	r7, sp, #0
 80071a8:	f000 f98e 	bl	80074c8 <HAL_IncTick>
 80071ac:	bf00      	nop
 80071ae:	bd80      	pop	{r7, pc}

080071b0 <EXTI4_IRQHandler>:
 80071b0:	b580      	push	{r7, lr}
 80071b2:	af00      	add	r7, sp, #0
 80071b4:	2010      	movs	r0, #16
 80071b6:	f002 f875 	bl	80092a4 <HAL_GPIO_EXTI_IRQHandler>
 80071ba:	bf00      	nop
 80071bc:	bd80      	pop	{r7, pc}
	...

080071c0 <TIM2_IRQHandler>:
 80071c0:	b580      	push	{r7, lr}
 80071c2:	af00      	add	r7, sp, #0
 80071c4:	4802      	ldr	r0, [pc, #8]	; (80071d0 <TIM2_IRQHandler+0x10>)
 80071c6:	f003 fbcf 	bl	800a968 <HAL_TIM_IRQHandler>
 80071ca:	bf00      	nop
 80071cc:	bd80      	pop	{r7, pc}
 80071ce:	bf00      	nop
 80071d0:	200008d4 	.word	0x200008d4

080071d4 <USART1_IRQHandler>:
 80071d4:	b580      	push	{r7, lr}
 80071d6:	af00      	add	r7, sp, #0
 80071d8:	4802      	ldr	r0, [pc, #8]	; (80071e4 <USART1_IRQHandler+0x10>)
 80071da:	f004 fee7 	bl	800bfac <HAL_UART_IRQHandler>
 80071de:	bf00      	nop
 80071e0:	bd80      	pop	{r7, pc}
 80071e2:	bf00      	nop
 80071e4:	20000b70 	.word	0x20000b70

080071e8 <USART3_IRQHandler>:
 80071e8:	b580      	push	{r7, lr}
 80071ea:	af00      	add	r7, sp, #0
 80071ec:	4802      	ldr	r0, [pc, #8]	; (80071f8 <USART3_IRQHandler+0x10>)
 80071ee:	f004 fedd 	bl	800bfac <HAL_UART_IRQHandler>
 80071f2:	bf00      	nop
 80071f4:	bd80      	pop	{r7, pc}
 80071f6:	bf00      	nop
 80071f8:	20000bf8 	.word	0x20000bf8

080071fc <EXTI15_10_IRQHandler>:
 80071fc:	b580      	push	{r7, lr}
 80071fe:	af00      	add	r7, sp, #0
 8007200:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8007204:	f002 f84e 	bl	80092a4 <HAL_GPIO_EXTI_IRQHandler>
 8007208:	bf00      	nop
 800720a:	bd80      	pop	{r7, pc}

0800720c <DMA1_Stream7_IRQHandler>:
 800720c:	b580      	push	{r7, lr}
 800720e:	af00      	add	r7, sp, #0
 8007210:	4802      	ldr	r0, [pc, #8]	; (800721c <DMA1_Stream7_IRQHandler+0x10>)
 8007212:	f001 f9ef 	bl	80085f4 <HAL_DMA_IRQHandler>
 8007216:	bf00      	nop
 8007218:	bd80      	pop	{r7, pc}
 800721a:	bf00      	nop
 800721c:	20000acc 	.word	0x20000acc

08007220 <_getpid>:
 8007220:	b480      	push	{r7}
 8007222:	af00      	add	r7, sp, #0
 8007224:	2301      	movs	r3, #1
 8007226:	4618      	mov	r0, r3
 8007228:	46bd      	mov	sp, r7
 800722a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800722e:	4770      	bx	lr

08007230 <_kill>:
 8007230:	b580      	push	{r7, lr}
 8007232:	b082      	sub	sp, #8
 8007234:	af00      	add	r7, sp, #0
 8007236:	6078      	str	r0, [r7, #4]
 8007238:	6039      	str	r1, [r7, #0]
 800723a:	f005 fe1f 	bl	800ce7c <__errno>
 800723e:	4603      	mov	r3, r0
 8007240:	2216      	movs	r2, #22
 8007242:	601a      	str	r2, [r3, #0]
 8007244:	f04f 33ff 	mov.w	r3, #4294967295
 8007248:	4618      	mov	r0, r3
 800724a:	3708      	adds	r7, #8
 800724c:	46bd      	mov	sp, r7
 800724e:	bd80      	pop	{r7, pc}

08007250 <_exit>:
 8007250:	b580      	push	{r7, lr}
 8007252:	b082      	sub	sp, #8
 8007254:	af00      	add	r7, sp, #0
 8007256:	6078      	str	r0, [r7, #4]
 8007258:	f04f 31ff 	mov.w	r1, #4294967295
 800725c:	6878      	ldr	r0, [r7, #4]
 800725e:	f7ff ffe7 	bl	8007230 <_kill>
 8007262:	e7fe      	b.n	8007262 <_exit+0x12>

08007264 <_read>:
 8007264:	b580      	push	{r7, lr}
 8007266:	b086      	sub	sp, #24
 8007268:	af00      	add	r7, sp, #0
 800726a:	60f8      	str	r0, [r7, #12]
 800726c:	60b9      	str	r1, [r7, #8]
 800726e:	607a      	str	r2, [r7, #4]
 8007270:	2300      	movs	r3, #0
 8007272:	617b      	str	r3, [r7, #20]
 8007274:	e00a      	b.n	800728c <_read+0x28>
 8007276:	f3af 8000 	nop.w
 800727a:	4601      	mov	r1, r0
 800727c:	68bb      	ldr	r3, [r7, #8]
 800727e:	1c5a      	adds	r2, r3, #1
 8007280:	60ba      	str	r2, [r7, #8]
 8007282:	b2ca      	uxtb	r2, r1
 8007284:	701a      	strb	r2, [r3, #0]
 8007286:	697b      	ldr	r3, [r7, #20]
 8007288:	3301      	adds	r3, #1
 800728a:	617b      	str	r3, [r7, #20]
 800728c:	697a      	ldr	r2, [r7, #20]
 800728e:	687b      	ldr	r3, [r7, #4]
 8007290:	429a      	cmp	r2, r3
 8007292:	dbf0      	blt.n	8007276 <_read+0x12>
 8007294:	687b      	ldr	r3, [r7, #4]
 8007296:	4618      	mov	r0, r3
 8007298:	3718      	adds	r7, #24
 800729a:	46bd      	mov	sp, r7
 800729c:	bd80      	pop	{r7, pc}

0800729e <_write>:
 800729e:	b580      	push	{r7, lr}
 80072a0:	b086      	sub	sp, #24
 80072a2:	af00      	add	r7, sp, #0
 80072a4:	60f8      	str	r0, [r7, #12]
 80072a6:	60b9      	str	r1, [r7, #8]
 80072a8:	607a      	str	r2, [r7, #4]
 80072aa:	2300      	movs	r3, #0
 80072ac:	617b      	str	r3, [r7, #20]
 80072ae:	e009      	b.n	80072c4 <_write+0x26>
 80072b0:	68bb      	ldr	r3, [r7, #8]
 80072b2:	1c5a      	adds	r2, r3, #1
 80072b4:	60ba      	str	r2, [r7, #8]
 80072b6:	781b      	ldrb	r3, [r3, #0]
 80072b8:	4618      	mov	r0, r3
 80072ba:	f3af 8000 	nop.w
 80072be:	697b      	ldr	r3, [r7, #20]
 80072c0:	3301      	adds	r3, #1
 80072c2:	617b      	str	r3, [r7, #20]
 80072c4:	697a      	ldr	r2, [r7, #20]
 80072c6:	687b      	ldr	r3, [r7, #4]
 80072c8:	429a      	cmp	r2, r3
 80072ca:	dbf1      	blt.n	80072b0 <_write+0x12>
 80072cc:	687b      	ldr	r3, [r7, #4]
 80072ce:	4618      	mov	r0, r3
 80072d0:	3718      	adds	r7, #24
 80072d2:	46bd      	mov	sp, r7
 80072d4:	bd80      	pop	{r7, pc}

080072d6 <_close>:
 80072d6:	b480      	push	{r7}
 80072d8:	b083      	sub	sp, #12
 80072da:	af00      	add	r7, sp, #0
 80072dc:	6078      	str	r0, [r7, #4]
 80072de:	f04f 33ff 	mov.w	r3, #4294967295
 80072e2:	4618      	mov	r0, r3
 80072e4:	370c      	adds	r7, #12
 80072e6:	46bd      	mov	sp, r7
 80072e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072ec:	4770      	bx	lr

080072ee <_fstat>:
 80072ee:	b480      	push	{r7}
 80072f0:	b083      	sub	sp, #12
 80072f2:	af00      	add	r7, sp, #0
 80072f4:	6078      	str	r0, [r7, #4]
 80072f6:	6039      	str	r1, [r7, #0]
 80072f8:	683b      	ldr	r3, [r7, #0]
 80072fa:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80072fe:	605a      	str	r2, [r3, #4]
 8007300:	2300      	movs	r3, #0
 8007302:	4618      	mov	r0, r3
 8007304:	370c      	adds	r7, #12
 8007306:	46bd      	mov	sp, r7
 8007308:	f85d 7b04 	ldr.w	r7, [sp], #4
 800730c:	4770      	bx	lr

0800730e <_isatty>:
 800730e:	b480      	push	{r7}
 8007310:	b083      	sub	sp, #12
 8007312:	af00      	add	r7, sp, #0
 8007314:	6078      	str	r0, [r7, #4]
 8007316:	2301      	movs	r3, #1
 8007318:	4618      	mov	r0, r3
 800731a:	370c      	adds	r7, #12
 800731c:	46bd      	mov	sp, r7
 800731e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007322:	4770      	bx	lr

08007324 <_lseek>:
 8007324:	b480      	push	{r7}
 8007326:	b085      	sub	sp, #20
 8007328:	af00      	add	r7, sp, #0
 800732a:	60f8      	str	r0, [r7, #12]
 800732c:	60b9      	str	r1, [r7, #8]
 800732e:	607a      	str	r2, [r7, #4]
 8007330:	2300      	movs	r3, #0
 8007332:	4618      	mov	r0, r3
 8007334:	3714      	adds	r7, #20
 8007336:	46bd      	mov	sp, r7
 8007338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800733c:	4770      	bx	lr
	...

08007340 <_sbrk>:
 8007340:	b580      	push	{r7, lr}
 8007342:	b086      	sub	sp, #24
 8007344:	af00      	add	r7, sp, #0
 8007346:	6078      	str	r0, [r7, #4]
 8007348:	4a14      	ldr	r2, [pc, #80]	; (800739c <_sbrk+0x5c>)
 800734a:	4b15      	ldr	r3, [pc, #84]	; (80073a0 <_sbrk+0x60>)
 800734c:	1ad3      	subs	r3, r2, r3
 800734e:	617b      	str	r3, [r7, #20]
 8007350:	697b      	ldr	r3, [r7, #20]
 8007352:	613b      	str	r3, [r7, #16]
 8007354:	4b13      	ldr	r3, [pc, #76]	; (80073a4 <_sbrk+0x64>)
 8007356:	681b      	ldr	r3, [r3, #0]
 8007358:	2b00      	cmp	r3, #0
 800735a:	d102      	bne.n	8007362 <_sbrk+0x22>
 800735c:	4b11      	ldr	r3, [pc, #68]	; (80073a4 <_sbrk+0x64>)
 800735e:	4a12      	ldr	r2, [pc, #72]	; (80073a8 <_sbrk+0x68>)
 8007360:	601a      	str	r2, [r3, #0]
 8007362:	4b10      	ldr	r3, [pc, #64]	; (80073a4 <_sbrk+0x64>)
 8007364:	681a      	ldr	r2, [r3, #0]
 8007366:	687b      	ldr	r3, [r7, #4]
 8007368:	4413      	add	r3, r2
 800736a:	693a      	ldr	r2, [r7, #16]
 800736c:	429a      	cmp	r2, r3
 800736e:	d207      	bcs.n	8007380 <_sbrk+0x40>
 8007370:	f005 fd84 	bl	800ce7c <__errno>
 8007374:	4603      	mov	r3, r0
 8007376:	220c      	movs	r2, #12
 8007378:	601a      	str	r2, [r3, #0]
 800737a:	f04f 33ff 	mov.w	r3, #4294967295
 800737e:	e009      	b.n	8007394 <_sbrk+0x54>
 8007380:	4b08      	ldr	r3, [pc, #32]	; (80073a4 <_sbrk+0x64>)
 8007382:	681b      	ldr	r3, [r3, #0]
 8007384:	60fb      	str	r3, [r7, #12]
 8007386:	4b07      	ldr	r3, [pc, #28]	; (80073a4 <_sbrk+0x64>)
 8007388:	681a      	ldr	r2, [r3, #0]
 800738a:	687b      	ldr	r3, [r7, #4]
 800738c:	4413      	add	r3, r2
 800738e:	4a05      	ldr	r2, [pc, #20]	; (80073a4 <_sbrk+0x64>)
 8007390:	6013      	str	r3, [r2, #0]
 8007392:	68fb      	ldr	r3, [r7, #12]
 8007394:	4618      	mov	r0, r3
 8007396:	3718      	adds	r7, #24
 8007398:	46bd      	mov	sp, r7
 800739a:	bd80      	pop	{r7, pc}
 800739c:	20020000 	.word	0x20020000
 80073a0:	00000400 	.word	0x00000400
 80073a4:	20000c50 	.word	0x20000c50
 80073a8:	20000c88 	.word	0x20000c88

080073ac <SystemInit>:
 80073ac:	b480      	push	{r7}
 80073ae:	af00      	add	r7, sp, #0
 80073b0:	4b06      	ldr	r3, [pc, #24]	; (80073cc <SystemInit+0x20>)
 80073b2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80073b6:	4a05      	ldr	r2, [pc, #20]	; (80073cc <SystemInit+0x20>)
 80073b8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80073bc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80073c0:	bf00      	nop
 80073c2:	46bd      	mov	sp, r7
 80073c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073c8:	4770      	bx	lr
 80073ca:	bf00      	nop
 80073cc:	e000ed00 	.word	0xe000ed00

080073d0 <Reset_Handler>:
 80073d0:	f8df d034 	ldr.w	sp, [pc, #52]	; 8007408 <LoopFillZerobss+0x12>
 80073d4:	480d      	ldr	r0, [pc, #52]	; (800740c <LoopFillZerobss+0x16>)
 80073d6:	490e      	ldr	r1, [pc, #56]	; (8007410 <LoopFillZerobss+0x1a>)
 80073d8:	4a0e      	ldr	r2, [pc, #56]	; (8007414 <LoopFillZerobss+0x1e>)
 80073da:	2300      	movs	r3, #0
 80073dc:	e002      	b.n	80073e4 <LoopCopyDataInit>

080073de <CopyDataInit>:
 80073de:	58d4      	ldr	r4, [r2, r3]
 80073e0:	50c4      	str	r4, [r0, r3]
 80073e2:	3304      	adds	r3, #4

080073e4 <LoopCopyDataInit>:
 80073e4:	18c4      	adds	r4, r0, r3
 80073e6:	428c      	cmp	r4, r1
 80073e8:	d3f9      	bcc.n	80073de <CopyDataInit>
 80073ea:	4a0b      	ldr	r2, [pc, #44]	; (8007418 <LoopFillZerobss+0x22>)
 80073ec:	4c0b      	ldr	r4, [pc, #44]	; (800741c <LoopFillZerobss+0x26>)
 80073ee:	2300      	movs	r3, #0
 80073f0:	e001      	b.n	80073f6 <LoopFillZerobss>

080073f2 <FillZerobss>:
 80073f2:	6013      	str	r3, [r2, #0]
 80073f4:	3204      	adds	r2, #4

080073f6 <LoopFillZerobss>:
 80073f6:	42a2      	cmp	r2, r4
 80073f8:	d3fb      	bcc.n	80073f2 <FillZerobss>
 80073fa:	f7ff ffd7 	bl	80073ac <SystemInit>
 80073fe:	f005 fd43 	bl	800ce88 <__libc_init_array>
 8007402:	f7fe fb5d 	bl	8005ac0 <main>
 8007406:	4770      	bx	lr
 8007408:	20020000 	.word	0x20020000
 800740c:	20000000 	.word	0x20000000
 8007410:	20000318 	.word	0x20000318
 8007414:	080118c8 	.word	0x080118c8
 8007418:	20000318 	.word	0x20000318
 800741c:	20000c88 	.word	0x20000c88

08007420 <ADC_IRQHandler>:
 8007420:	e7fe      	b.n	8007420 <ADC_IRQHandler>
	...

08007424 <HAL_Init>:
 8007424:	b580      	push	{r7, lr}
 8007426:	af00      	add	r7, sp, #0
 8007428:	4b0e      	ldr	r3, [pc, #56]	; (8007464 <HAL_Init+0x40>)
 800742a:	681b      	ldr	r3, [r3, #0]
 800742c:	4a0d      	ldr	r2, [pc, #52]	; (8007464 <HAL_Init+0x40>)
 800742e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8007432:	6013      	str	r3, [r2, #0]
 8007434:	4b0b      	ldr	r3, [pc, #44]	; (8007464 <HAL_Init+0x40>)
 8007436:	681b      	ldr	r3, [r3, #0]
 8007438:	4a0a      	ldr	r2, [pc, #40]	; (8007464 <HAL_Init+0x40>)
 800743a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800743e:	6013      	str	r3, [r2, #0]
 8007440:	4b08      	ldr	r3, [pc, #32]	; (8007464 <HAL_Init+0x40>)
 8007442:	681b      	ldr	r3, [r3, #0]
 8007444:	4a07      	ldr	r2, [pc, #28]	; (8007464 <HAL_Init+0x40>)
 8007446:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800744a:	6013      	str	r3, [r2, #0]
 800744c:	2003      	movs	r0, #3
 800744e:	f000 fee9 	bl	8008224 <HAL_NVIC_SetPriorityGrouping>
 8007452:	2000      	movs	r0, #0
 8007454:	f000 f808 	bl	8007468 <HAL_InitTick>
 8007458:	f7ff faf4 	bl	8006a44 <HAL_MspInit>
 800745c:	2300      	movs	r3, #0
 800745e:	4618      	mov	r0, r3
 8007460:	bd80      	pop	{r7, pc}
 8007462:	bf00      	nop
 8007464:	40023c00 	.word	0x40023c00

08007468 <HAL_InitTick>:
 8007468:	b580      	push	{r7, lr}
 800746a:	b082      	sub	sp, #8
 800746c:	af00      	add	r7, sp, #0
 800746e:	6078      	str	r0, [r7, #4]
 8007470:	4b12      	ldr	r3, [pc, #72]	; (80074bc <HAL_InitTick+0x54>)
 8007472:	681a      	ldr	r2, [r3, #0]
 8007474:	4b12      	ldr	r3, [pc, #72]	; (80074c0 <HAL_InitTick+0x58>)
 8007476:	781b      	ldrb	r3, [r3, #0]
 8007478:	4619      	mov	r1, r3
 800747a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800747e:	fbb3 f3f1 	udiv	r3, r3, r1
 8007482:	fbb2 f3f3 	udiv	r3, r2, r3
 8007486:	4618      	mov	r0, r3
 8007488:	f000 ff0f 	bl	80082aa <HAL_SYSTICK_Config>
 800748c:	4603      	mov	r3, r0
 800748e:	2b00      	cmp	r3, #0
 8007490:	d001      	beq.n	8007496 <HAL_InitTick+0x2e>
 8007492:	2301      	movs	r3, #1
 8007494:	e00e      	b.n	80074b4 <HAL_InitTick+0x4c>
 8007496:	687b      	ldr	r3, [r7, #4]
 8007498:	2b0f      	cmp	r3, #15
 800749a:	d80a      	bhi.n	80074b2 <HAL_InitTick+0x4a>
 800749c:	2200      	movs	r2, #0
 800749e:	6879      	ldr	r1, [r7, #4]
 80074a0:	f04f 30ff 	mov.w	r0, #4294967295
 80074a4:	f000 fec9 	bl	800823a <HAL_NVIC_SetPriority>
 80074a8:	4a06      	ldr	r2, [pc, #24]	; (80074c4 <HAL_InitTick+0x5c>)
 80074aa:	687b      	ldr	r3, [r7, #4]
 80074ac:	6013      	str	r3, [r2, #0]
 80074ae:	2300      	movs	r3, #0
 80074b0:	e000      	b.n	80074b4 <HAL_InitTick+0x4c>
 80074b2:	2301      	movs	r3, #1
 80074b4:	4618      	mov	r0, r3
 80074b6:	3708      	adds	r7, #8
 80074b8:	46bd      	mov	sp, r7
 80074ba:	bd80      	pop	{r7, pc}
 80074bc:	2000013c 	.word	0x2000013c
 80074c0:	20000144 	.word	0x20000144
 80074c4:	20000140 	.word	0x20000140

080074c8 <HAL_IncTick>:
 80074c8:	b480      	push	{r7}
 80074ca:	af00      	add	r7, sp, #0
 80074cc:	4b06      	ldr	r3, [pc, #24]	; (80074e8 <HAL_IncTick+0x20>)
 80074ce:	781b      	ldrb	r3, [r3, #0]
 80074d0:	461a      	mov	r2, r3
 80074d2:	4b06      	ldr	r3, [pc, #24]	; (80074ec <HAL_IncTick+0x24>)
 80074d4:	681b      	ldr	r3, [r3, #0]
 80074d6:	4413      	add	r3, r2
 80074d8:	4a04      	ldr	r2, [pc, #16]	; (80074ec <HAL_IncTick+0x24>)
 80074da:	6013      	str	r3, [r2, #0]
 80074dc:	bf00      	nop
 80074de:	46bd      	mov	sp, r7
 80074e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074e4:	4770      	bx	lr
 80074e6:	bf00      	nop
 80074e8:	20000144 	.word	0x20000144
 80074ec:	20000c54 	.word	0x20000c54

080074f0 <HAL_GetTick>:
 80074f0:	b480      	push	{r7}
 80074f2:	af00      	add	r7, sp, #0
 80074f4:	4b03      	ldr	r3, [pc, #12]	; (8007504 <HAL_GetTick+0x14>)
 80074f6:	681b      	ldr	r3, [r3, #0]
 80074f8:	4618      	mov	r0, r3
 80074fa:	46bd      	mov	sp, r7
 80074fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007500:	4770      	bx	lr
 8007502:	bf00      	nop
 8007504:	20000c54 	.word	0x20000c54

08007508 <HAL_Delay>:
 8007508:	b580      	push	{r7, lr}
 800750a:	b084      	sub	sp, #16
 800750c:	af00      	add	r7, sp, #0
 800750e:	6078      	str	r0, [r7, #4]
 8007510:	f7ff ffee 	bl	80074f0 <HAL_GetTick>
 8007514:	60b8      	str	r0, [r7, #8]
 8007516:	687b      	ldr	r3, [r7, #4]
 8007518:	60fb      	str	r3, [r7, #12]
 800751a:	68fb      	ldr	r3, [r7, #12]
 800751c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007520:	d005      	beq.n	800752e <HAL_Delay+0x26>
 8007522:	4b0a      	ldr	r3, [pc, #40]	; (800754c <HAL_Delay+0x44>)
 8007524:	781b      	ldrb	r3, [r3, #0]
 8007526:	461a      	mov	r2, r3
 8007528:	68fb      	ldr	r3, [r7, #12]
 800752a:	4413      	add	r3, r2
 800752c:	60fb      	str	r3, [r7, #12]
 800752e:	bf00      	nop
 8007530:	f7ff ffde 	bl	80074f0 <HAL_GetTick>
 8007534:	4602      	mov	r2, r0
 8007536:	68bb      	ldr	r3, [r7, #8]
 8007538:	1ad3      	subs	r3, r2, r3
 800753a:	68fa      	ldr	r2, [r7, #12]
 800753c:	429a      	cmp	r2, r3
 800753e:	d8f7      	bhi.n	8007530 <HAL_Delay+0x28>
 8007540:	bf00      	nop
 8007542:	bf00      	nop
 8007544:	3710      	adds	r7, #16
 8007546:	46bd      	mov	sp, r7
 8007548:	bd80      	pop	{r7, pc}
 800754a:	bf00      	nop
 800754c:	20000144 	.word	0x20000144

08007550 <HAL_ADC_Init>:
 8007550:	b580      	push	{r7, lr}
 8007552:	b084      	sub	sp, #16
 8007554:	af00      	add	r7, sp, #0
 8007556:	6078      	str	r0, [r7, #4]
 8007558:	2300      	movs	r3, #0
 800755a:	73fb      	strb	r3, [r7, #15]
 800755c:	687b      	ldr	r3, [r7, #4]
 800755e:	2b00      	cmp	r3, #0
 8007560:	d101      	bne.n	8007566 <HAL_ADC_Init+0x16>
 8007562:	2301      	movs	r3, #1
 8007564:	e033      	b.n	80075ce <HAL_ADC_Init+0x7e>
 8007566:	687b      	ldr	r3, [r7, #4]
 8007568:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800756a:	2b00      	cmp	r3, #0
 800756c:	d109      	bne.n	8007582 <HAL_ADC_Init+0x32>
 800756e:	6878      	ldr	r0, [r7, #4]
 8007570:	f7ff fa90 	bl	8006a94 <HAL_ADC_MspInit>
 8007574:	687b      	ldr	r3, [r7, #4]
 8007576:	2200      	movs	r2, #0
 8007578:	645a      	str	r2, [r3, #68]	; 0x44
 800757a:	687b      	ldr	r3, [r7, #4]
 800757c:	2200      	movs	r2, #0
 800757e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007582:	687b      	ldr	r3, [r7, #4]
 8007584:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007586:	f003 0310 	and.w	r3, r3, #16
 800758a:	2b00      	cmp	r3, #0
 800758c:	d118      	bne.n	80075c0 <HAL_ADC_Init+0x70>
 800758e:	687b      	ldr	r3, [r7, #4]
 8007590:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007592:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8007596:	f023 0302 	bic.w	r3, r3, #2
 800759a:	f043 0202 	orr.w	r2, r3, #2
 800759e:	687b      	ldr	r3, [r7, #4]
 80075a0:	641a      	str	r2, [r3, #64]	; 0x40
 80075a2:	6878      	ldr	r0, [r7, #4]
 80075a4:	f000 fab4 	bl	8007b10 <ADC_Init>
 80075a8:	687b      	ldr	r3, [r7, #4]
 80075aa:	2200      	movs	r2, #0
 80075ac:	645a      	str	r2, [r3, #68]	; 0x44
 80075ae:	687b      	ldr	r3, [r7, #4]
 80075b0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80075b2:	f023 0303 	bic.w	r3, r3, #3
 80075b6:	f043 0201 	orr.w	r2, r3, #1
 80075ba:	687b      	ldr	r3, [r7, #4]
 80075bc:	641a      	str	r2, [r3, #64]	; 0x40
 80075be:	e001      	b.n	80075c4 <HAL_ADC_Init+0x74>
 80075c0:	2301      	movs	r3, #1
 80075c2:	73fb      	strb	r3, [r7, #15]
 80075c4:	687b      	ldr	r3, [r7, #4]
 80075c6:	2200      	movs	r2, #0
 80075c8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80075cc:	7bfb      	ldrb	r3, [r7, #15]
 80075ce:	4618      	mov	r0, r3
 80075d0:	3710      	adds	r7, #16
 80075d2:	46bd      	mov	sp, r7
 80075d4:	bd80      	pop	{r7, pc}
	...

080075d8 <HAL_ADC_Start>:
 80075d8:	b480      	push	{r7}
 80075da:	b085      	sub	sp, #20
 80075dc:	af00      	add	r7, sp, #0
 80075de:	6078      	str	r0, [r7, #4]
 80075e0:	2300      	movs	r3, #0
 80075e2:	60bb      	str	r3, [r7, #8]
 80075e4:	687b      	ldr	r3, [r7, #4]
 80075e6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80075ea:	2b01      	cmp	r3, #1
 80075ec:	d101      	bne.n	80075f2 <HAL_ADC_Start+0x1a>
 80075ee:	2302      	movs	r3, #2
 80075f0:	e0b2      	b.n	8007758 <HAL_ADC_Start+0x180>
 80075f2:	687b      	ldr	r3, [r7, #4]
 80075f4:	2201      	movs	r2, #1
 80075f6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80075fa:	687b      	ldr	r3, [r7, #4]
 80075fc:	681b      	ldr	r3, [r3, #0]
 80075fe:	689b      	ldr	r3, [r3, #8]
 8007600:	f003 0301 	and.w	r3, r3, #1
 8007604:	2b01      	cmp	r3, #1
 8007606:	d018      	beq.n	800763a <HAL_ADC_Start+0x62>
 8007608:	687b      	ldr	r3, [r7, #4]
 800760a:	681b      	ldr	r3, [r3, #0]
 800760c:	689a      	ldr	r2, [r3, #8]
 800760e:	687b      	ldr	r3, [r7, #4]
 8007610:	681b      	ldr	r3, [r3, #0]
 8007612:	f042 0201 	orr.w	r2, r2, #1
 8007616:	609a      	str	r2, [r3, #8]
 8007618:	4b52      	ldr	r3, [pc, #328]	; (8007764 <HAL_ADC_Start+0x18c>)
 800761a:	681b      	ldr	r3, [r3, #0]
 800761c:	4a52      	ldr	r2, [pc, #328]	; (8007768 <HAL_ADC_Start+0x190>)
 800761e:	fba2 2303 	umull	r2, r3, r2, r3
 8007622:	0c9a      	lsrs	r2, r3, #18
 8007624:	4613      	mov	r3, r2
 8007626:	005b      	lsls	r3, r3, #1
 8007628:	4413      	add	r3, r2
 800762a:	60bb      	str	r3, [r7, #8]
 800762c:	e002      	b.n	8007634 <HAL_ADC_Start+0x5c>
 800762e:	68bb      	ldr	r3, [r7, #8]
 8007630:	3b01      	subs	r3, #1
 8007632:	60bb      	str	r3, [r7, #8]
 8007634:	68bb      	ldr	r3, [r7, #8]
 8007636:	2b00      	cmp	r3, #0
 8007638:	d1f9      	bne.n	800762e <HAL_ADC_Start+0x56>
 800763a:	687b      	ldr	r3, [r7, #4]
 800763c:	681b      	ldr	r3, [r3, #0]
 800763e:	689b      	ldr	r3, [r3, #8]
 8007640:	f003 0301 	and.w	r3, r3, #1
 8007644:	2b01      	cmp	r3, #1
 8007646:	d17a      	bne.n	800773e <HAL_ADC_Start+0x166>
 8007648:	687b      	ldr	r3, [r7, #4]
 800764a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800764c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8007650:	f023 0301 	bic.w	r3, r3, #1
 8007654:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8007658:	687b      	ldr	r3, [r7, #4]
 800765a:	641a      	str	r2, [r3, #64]	; 0x40
 800765c:	687b      	ldr	r3, [r7, #4]
 800765e:	681b      	ldr	r3, [r3, #0]
 8007660:	685b      	ldr	r3, [r3, #4]
 8007662:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007666:	2b00      	cmp	r3, #0
 8007668:	d007      	beq.n	800767a <HAL_ADC_Start+0xa2>
 800766a:	687b      	ldr	r3, [r7, #4]
 800766c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800766e:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8007672:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 8007676:	687b      	ldr	r3, [r7, #4]
 8007678:	641a      	str	r2, [r3, #64]	; 0x40
 800767a:	687b      	ldr	r3, [r7, #4]
 800767c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800767e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8007682:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007686:	d106      	bne.n	8007696 <HAL_ADC_Start+0xbe>
 8007688:	687b      	ldr	r3, [r7, #4]
 800768a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800768c:	f023 0206 	bic.w	r2, r3, #6
 8007690:	687b      	ldr	r3, [r7, #4]
 8007692:	645a      	str	r2, [r3, #68]	; 0x44
 8007694:	e002      	b.n	800769c <HAL_ADC_Start+0xc4>
 8007696:	687b      	ldr	r3, [r7, #4]
 8007698:	2200      	movs	r2, #0
 800769a:	645a      	str	r2, [r3, #68]	; 0x44
 800769c:	687b      	ldr	r3, [r7, #4]
 800769e:	2200      	movs	r2, #0
 80076a0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80076a4:	4b31      	ldr	r3, [pc, #196]	; (800776c <HAL_ADC_Start+0x194>)
 80076a6:	60fb      	str	r3, [r7, #12]
 80076a8:	687b      	ldr	r3, [r7, #4]
 80076aa:	681b      	ldr	r3, [r3, #0]
 80076ac:	f06f 0222 	mvn.w	r2, #34	; 0x22
 80076b0:	601a      	str	r2, [r3, #0]
 80076b2:	68fb      	ldr	r3, [r7, #12]
 80076b4:	685b      	ldr	r3, [r3, #4]
 80076b6:	f003 031f 	and.w	r3, r3, #31
 80076ba:	2b00      	cmp	r3, #0
 80076bc:	d12a      	bne.n	8007714 <HAL_ADC_Start+0x13c>
 80076be:	687b      	ldr	r3, [r7, #4]
 80076c0:	681b      	ldr	r3, [r3, #0]
 80076c2:	4a2b      	ldr	r2, [pc, #172]	; (8007770 <HAL_ADC_Start+0x198>)
 80076c4:	4293      	cmp	r3, r2
 80076c6:	d015      	beq.n	80076f4 <HAL_ADC_Start+0x11c>
 80076c8:	687b      	ldr	r3, [r7, #4]
 80076ca:	681b      	ldr	r3, [r3, #0]
 80076cc:	4a29      	ldr	r2, [pc, #164]	; (8007774 <HAL_ADC_Start+0x19c>)
 80076ce:	4293      	cmp	r3, r2
 80076d0:	d105      	bne.n	80076de <HAL_ADC_Start+0x106>
 80076d2:	4b26      	ldr	r3, [pc, #152]	; (800776c <HAL_ADC_Start+0x194>)
 80076d4:	685b      	ldr	r3, [r3, #4]
 80076d6:	f003 031f 	and.w	r3, r3, #31
 80076da:	2b00      	cmp	r3, #0
 80076dc:	d00a      	beq.n	80076f4 <HAL_ADC_Start+0x11c>
 80076de:	687b      	ldr	r3, [r7, #4]
 80076e0:	681b      	ldr	r3, [r3, #0]
 80076e2:	4a25      	ldr	r2, [pc, #148]	; (8007778 <HAL_ADC_Start+0x1a0>)
 80076e4:	4293      	cmp	r3, r2
 80076e6:	d136      	bne.n	8007756 <HAL_ADC_Start+0x17e>
 80076e8:	4b20      	ldr	r3, [pc, #128]	; (800776c <HAL_ADC_Start+0x194>)
 80076ea:	685b      	ldr	r3, [r3, #4]
 80076ec:	f003 0310 	and.w	r3, r3, #16
 80076f0:	2b00      	cmp	r3, #0
 80076f2:	d130      	bne.n	8007756 <HAL_ADC_Start+0x17e>
 80076f4:	687b      	ldr	r3, [r7, #4]
 80076f6:	681b      	ldr	r3, [r3, #0]
 80076f8:	689b      	ldr	r3, [r3, #8]
 80076fa:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80076fe:	2b00      	cmp	r3, #0
 8007700:	d129      	bne.n	8007756 <HAL_ADC_Start+0x17e>
 8007702:	687b      	ldr	r3, [r7, #4]
 8007704:	681b      	ldr	r3, [r3, #0]
 8007706:	689a      	ldr	r2, [r3, #8]
 8007708:	687b      	ldr	r3, [r7, #4]
 800770a:	681b      	ldr	r3, [r3, #0]
 800770c:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8007710:	609a      	str	r2, [r3, #8]
 8007712:	e020      	b.n	8007756 <HAL_ADC_Start+0x17e>
 8007714:	687b      	ldr	r3, [r7, #4]
 8007716:	681b      	ldr	r3, [r3, #0]
 8007718:	4a15      	ldr	r2, [pc, #84]	; (8007770 <HAL_ADC_Start+0x198>)
 800771a:	4293      	cmp	r3, r2
 800771c:	d11b      	bne.n	8007756 <HAL_ADC_Start+0x17e>
 800771e:	687b      	ldr	r3, [r7, #4]
 8007720:	681b      	ldr	r3, [r3, #0]
 8007722:	689b      	ldr	r3, [r3, #8]
 8007724:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8007728:	2b00      	cmp	r3, #0
 800772a:	d114      	bne.n	8007756 <HAL_ADC_Start+0x17e>
 800772c:	687b      	ldr	r3, [r7, #4]
 800772e:	681b      	ldr	r3, [r3, #0]
 8007730:	689a      	ldr	r2, [r3, #8]
 8007732:	687b      	ldr	r3, [r7, #4]
 8007734:	681b      	ldr	r3, [r3, #0]
 8007736:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800773a:	609a      	str	r2, [r3, #8]
 800773c:	e00b      	b.n	8007756 <HAL_ADC_Start+0x17e>
 800773e:	687b      	ldr	r3, [r7, #4]
 8007740:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007742:	f043 0210 	orr.w	r2, r3, #16
 8007746:	687b      	ldr	r3, [r7, #4]
 8007748:	641a      	str	r2, [r3, #64]	; 0x40
 800774a:	687b      	ldr	r3, [r7, #4]
 800774c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800774e:	f043 0201 	orr.w	r2, r3, #1
 8007752:	687b      	ldr	r3, [r7, #4]
 8007754:	645a      	str	r2, [r3, #68]	; 0x44
 8007756:	2300      	movs	r3, #0
 8007758:	4618      	mov	r0, r3
 800775a:	3714      	adds	r7, #20
 800775c:	46bd      	mov	sp, r7
 800775e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007762:	4770      	bx	lr
 8007764:	2000013c 	.word	0x2000013c
 8007768:	431bde83 	.word	0x431bde83
 800776c:	40012300 	.word	0x40012300
 8007770:	40012000 	.word	0x40012000
 8007774:	40012100 	.word	0x40012100
 8007778:	40012200 	.word	0x40012200

0800777c <HAL_ADC_PollForConversion>:
 800777c:	b580      	push	{r7, lr}
 800777e:	b084      	sub	sp, #16
 8007780:	af00      	add	r7, sp, #0
 8007782:	6078      	str	r0, [r7, #4]
 8007784:	6039      	str	r1, [r7, #0]
 8007786:	2300      	movs	r3, #0
 8007788:	60fb      	str	r3, [r7, #12]
 800778a:	687b      	ldr	r3, [r7, #4]
 800778c:	681b      	ldr	r3, [r3, #0]
 800778e:	689b      	ldr	r3, [r3, #8]
 8007790:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007794:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007798:	d113      	bne.n	80077c2 <HAL_ADC_PollForConversion+0x46>
 800779a:	687b      	ldr	r3, [r7, #4]
 800779c:	681b      	ldr	r3, [r3, #0]
 800779e:	689b      	ldr	r3, [r3, #8]
 80077a0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80077a4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80077a8:	d10b      	bne.n	80077c2 <HAL_ADC_PollForConversion+0x46>
 80077aa:	687b      	ldr	r3, [r7, #4]
 80077ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80077ae:	f043 0220 	orr.w	r2, r3, #32
 80077b2:	687b      	ldr	r3, [r7, #4]
 80077b4:	641a      	str	r2, [r3, #64]	; 0x40
 80077b6:	687b      	ldr	r3, [r7, #4]
 80077b8:	2200      	movs	r2, #0
 80077ba:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80077be:	2301      	movs	r3, #1
 80077c0:	e063      	b.n	800788a <HAL_ADC_PollForConversion+0x10e>
 80077c2:	f7ff fe95 	bl	80074f0 <HAL_GetTick>
 80077c6:	60f8      	str	r0, [r7, #12]
 80077c8:	e021      	b.n	800780e <HAL_ADC_PollForConversion+0x92>
 80077ca:	683b      	ldr	r3, [r7, #0]
 80077cc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80077d0:	d01d      	beq.n	800780e <HAL_ADC_PollForConversion+0x92>
 80077d2:	683b      	ldr	r3, [r7, #0]
 80077d4:	2b00      	cmp	r3, #0
 80077d6:	d007      	beq.n	80077e8 <HAL_ADC_PollForConversion+0x6c>
 80077d8:	f7ff fe8a 	bl	80074f0 <HAL_GetTick>
 80077dc:	4602      	mov	r2, r0
 80077de:	68fb      	ldr	r3, [r7, #12]
 80077e0:	1ad3      	subs	r3, r2, r3
 80077e2:	683a      	ldr	r2, [r7, #0]
 80077e4:	429a      	cmp	r2, r3
 80077e6:	d212      	bcs.n	800780e <HAL_ADC_PollForConversion+0x92>
 80077e8:	687b      	ldr	r3, [r7, #4]
 80077ea:	681b      	ldr	r3, [r3, #0]
 80077ec:	681b      	ldr	r3, [r3, #0]
 80077ee:	f003 0302 	and.w	r3, r3, #2
 80077f2:	2b02      	cmp	r3, #2
 80077f4:	d00b      	beq.n	800780e <HAL_ADC_PollForConversion+0x92>
 80077f6:	687b      	ldr	r3, [r7, #4]
 80077f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80077fa:	f043 0204 	orr.w	r2, r3, #4
 80077fe:	687b      	ldr	r3, [r7, #4]
 8007800:	641a      	str	r2, [r3, #64]	; 0x40
 8007802:	687b      	ldr	r3, [r7, #4]
 8007804:	2200      	movs	r2, #0
 8007806:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800780a:	2303      	movs	r3, #3
 800780c:	e03d      	b.n	800788a <HAL_ADC_PollForConversion+0x10e>
 800780e:	687b      	ldr	r3, [r7, #4]
 8007810:	681b      	ldr	r3, [r3, #0]
 8007812:	681b      	ldr	r3, [r3, #0]
 8007814:	f003 0302 	and.w	r3, r3, #2
 8007818:	2b02      	cmp	r3, #2
 800781a:	d1d6      	bne.n	80077ca <HAL_ADC_PollForConversion+0x4e>
 800781c:	687b      	ldr	r3, [r7, #4]
 800781e:	681b      	ldr	r3, [r3, #0]
 8007820:	f06f 0212 	mvn.w	r2, #18
 8007824:	601a      	str	r2, [r3, #0]
 8007826:	687b      	ldr	r3, [r7, #4]
 8007828:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800782a:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 800782e:	687b      	ldr	r3, [r7, #4]
 8007830:	641a      	str	r2, [r3, #64]	; 0x40
 8007832:	687b      	ldr	r3, [r7, #4]
 8007834:	681b      	ldr	r3, [r3, #0]
 8007836:	689b      	ldr	r3, [r3, #8]
 8007838:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800783c:	2b00      	cmp	r3, #0
 800783e:	d123      	bne.n	8007888 <HAL_ADC_PollForConversion+0x10c>
 8007840:	687b      	ldr	r3, [r7, #4]
 8007842:	7e1b      	ldrb	r3, [r3, #24]
 8007844:	2b00      	cmp	r3, #0
 8007846:	d11f      	bne.n	8007888 <HAL_ADC_PollForConversion+0x10c>
 8007848:	687b      	ldr	r3, [r7, #4]
 800784a:	681b      	ldr	r3, [r3, #0]
 800784c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800784e:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 8007852:	2b00      	cmp	r3, #0
 8007854:	d006      	beq.n	8007864 <HAL_ADC_PollForConversion+0xe8>
 8007856:	687b      	ldr	r3, [r7, #4]
 8007858:	681b      	ldr	r3, [r3, #0]
 800785a:	689b      	ldr	r3, [r3, #8]
 800785c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007860:	2b00      	cmp	r3, #0
 8007862:	d111      	bne.n	8007888 <HAL_ADC_PollForConversion+0x10c>
 8007864:	687b      	ldr	r3, [r7, #4]
 8007866:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007868:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800786c:	687b      	ldr	r3, [r7, #4]
 800786e:	641a      	str	r2, [r3, #64]	; 0x40
 8007870:	687b      	ldr	r3, [r7, #4]
 8007872:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007874:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8007878:	2b00      	cmp	r3, #0
 800787a:	d105      	bne.n	8007888 <HAL_ADC_PollForConversion+0x10c>
 800787c:	687b      	ldr	r3, [r7, #4]
 800787e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007880:	f043 0201 	orr.w	r2, r3, #1
 8007884:	687b      	ldr	r3, [r7, #4]
 8007886:	641a      	str	r2, [r3, #64]	; 0x40
 8007888:	2300      	movs	r3, #0
 800788a:	4618      	mov	r0, r3
 800788c:	3710      	adds	r7, #16
 800788e:	46bd      	mov	sp, r7
 8007890:	bd80      	pop	{r7, pc}

08007892 <HAL_ADC_GetValue>:
 8007892:	b480      	push	{r7}
 8007894:	b083      	sub	sp, #12
 8007896:	af00      	add	r7, sp, #0
 8007898:	6078      	str	r0, [r7, #4]
 800789a:	687b      	ldr	r3, [r7, #4]
 800789c:	681b      	ldr	r3, [r3, #0]
 800789e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80078a0:	4618      	mov	r0, r3
 80078a2:	370c      	adds	r7, #12
 80078a4:	46bd      	mov	sp, r7
 80078a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078aa:	4770      	bx	lr

080078ac <HAL_ADC_ConfigChannel>:
 80078ac:	b480      	push	{r7}
 80078ae:	b085      	sub	sp, #20
 80078b0:	af00      	add	r7, sp, #0
 80078b2:	6078      	str	r0, [r7, #4]
 80078b4:	6039      	str	r1, [r7, #0]
 80078b6:	2300      	movs	r3, #0
 80078b8:	60bb      	str	r3, [r7, #8]
 80078ba:	687b      	ldr	r3, [r7, #4]
 80078bc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80078c0:	2b01      	cmp	r3, #1
 80078c2:	d101      	bne.n	80078c8 <HAL_ADC_ConfigChannel+0x1c>
 80078c4:	2302      	movs	r3, #2
 80078c6:	e113      	b.n	8007af0 <HAL_ADC_ConfigChannel+0x244>
 80078c8:	687b      	ldr	r3, [r7, #4]
 80078ca:	2201      	movs	r2, #1
 80078cc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80078d0:	683b      	ldr	r3, [r7, #0]
 80078d2:	681b      	ldr	r3, [r3, #0]
 80078d4:	2b09      	cmp	r3, #9
 80078d6:	d925      	bls.n	8007924 <HAL_ADC_ConfigChannel+0x78>
 80078d8:	687b      	ldr	r3, [r7, #4]
 80078da:	681b      	ldr	r3, [r3, #0]
 80078dc:	68d9      	ldr	r1, [r3, #12]
 80078de:	683b      	ldr	r3, [r7, #0]
 80078e0:	681b      	ldr	r3, [r3, #0]
 80078e2:	b29b      	uxth	r3, r3
 80078e4:	461a      	mov	r2, r3
 80078e6:	4613      	mov	r3, r2
 80078e8:	005b      	lsls	r3, r3, #1
 80078ea:	4413      	add	r3, r2
 80078ec:	3b1e      	subs	r3, #30
 80078ee:	2207      	movs	r2, #7
 80078f0:	fa02 f303 	lsl.w	r3, r2, r3
 80078f4:	43da      	mvns	r2, r3
 80078f6:	687b      	ldr	r3, [r7, #4]
 80078f8:	681b      	ldr	r3, [r3, #0]
 80078fa:	400a      	ands	r2, r1
 80078fc:	60da      	str	r2, [r3, #12]
 80078fe:	687b      	ldr	r3, [r7, #4]
 8007900:	681b      	ldr	r3, [r3, #0]
 8007902:	68d9      	ldr	r1, [r3, #12]
 8007904:	683b      	ldr	r3, [r7, #0]
 8007906:	689a      	ldr	r2, [r3, #8]
 8007908:	683b      	ldr	r3, [r7, #0]
 800790a:	681b      	ldr	r3, [r3, #0]
 800790c:	b29b      	uxth	r3, r3
 800790e:	4618      	mov	r0, r3
 8007910:	4603      	mov	r3, r0
 8007912:	005b      	lsls	r3, r3, #1
 8007914:	4403      	add	r3, r0
 8007916:	3b1e      	subs	r3, #30
 8007918:	409a      	lsls	r2, r3
 800791a:	687b      	ldr	r3, [r7, #4]
 800791c:	681b      	ldr	r3, [r3, #0]
 800791e:	430a      	orrs	r2, r1
 8007920:	60da      	str	r2, [r3, #12]
 8007922:	e022      	b.n	800796a <HAL_ADC_ConfigChannel+0xbe>
 8007924:	687b      	ldr	r3, [r7, #4]
 8007926:	681b      	ldr	r3, [r3, #0]
 8007928:	6919      	ldr	r1, [r3, #16]
 800792a:	683b      	ldr	r3, [r7, #0]
 800792c:	681b      	ldr	r3, [r3, #0]
 800792e:	b29b      	uxth	r3, r3
 8007930:	461a      	mov	r2, r3
 8007932:	4613      	mov	r3, r2
 8007934:	005b      	lsls	r3, r3, #1
 8007936:	4413      	add	r3, r2
 8007938:	2207      	movs	r2, #7
 800793a:	fa02 f303 	lsl.w	r3, r2, r3
 800793e:	43da      	mvns	r2, r3
 8007940:	687b      	ldr	r3, [r7, #4]
 8007942:	681b      	ldr	r3, [r3, #0]
 8007944:	400a      	ands	r2, r1
 8007946:	611a      	str	r2, [r3, #16]
 8007948:	687b      	ldr	r3, [r7, #4]
 800794a:	681b      	ldr	r3, [r3, #0]
 800794c:	6919      	ldr	r1, [r3, #16]
 800794e:	683b      	ldr	r3, [r7, #0]
 8007950:	689a      	ldr	r2, [r3, #8]
 8007952:	683b      	ldr	r3, [r7, #0]
 8007954:	681b      	ldr	r3, [r3, #0]
 8007956:	b29b      	uxth	r3, r3
 8007958:	4618      	mov	r0, r3
 800795a:	4603      	mov	r3, r0
 800795c:	005b      	lsls	r3, r3, #1
 800795e:	4403      	add	r3, r0
 8007960:	409a      	lsls	r2, r3
 8007962:	687b      	ldr	r3, [r7, #4]
 8007964:	681b      	ldr	r3, [r3, #0]
 8007966:	430a      	orrs	r2, r1
 8007968:	611a      	str	r2, [r3, #16]
 800796a:	683b      	ldr	r3, [r7, #0]
 800796c:	685b      	ldr	r3, [r3, #4]
 800796e:	2b06      	cmp	r3, #6
 8007970:	d824      	bhi.n	80079bc <HAL_ADC_ConfigChannel+0x110>
 8007972:	687b      	ldr	r3, [r7, #4]
 8007974:	681b      	ldr	r3, [r3, #0]
 8007976:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8007978:	683b      	ldr	r3, [r7, #0]
 800797a:	685a      	ldr	r2, [r3, #4]
 800797c:	4613      	mov	r3, r2
 800797e:	009b      	lsls	r3, r3, #2
 8007980:	4413      	add	r3, r2
 8007982:	3b05      	subs	r3, #5
 8007984:	221f      	movs	r2, #31
 8007986:	fa02 f303 	lsl.w	r3, r2, r3
 800798a:	43da      	mvns	r2, r3
 800798c:	687b      	ldr	r3, [r7, #4]
 800798e:	681b      	ldr	r3, [r3, #0]
 8007990:	400a      	ands	r2, r1
 8007992:	635a      	str	r2, [r3, #52]	; 0x34
 8007994:	687b      	ldr	r3, [r7, #4]
 8007996:	681b      	ldr	r3, [r3, #0]
 8007998:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800799a:	683b      	ldr	r3, [r7, #0]
 800799c:	681b      	ldr	r3, [r3, #0]
 800799e:	b29b      	uxth	r3, r3
 80079a0:	4618      	mov	r0, r3
 80079a2:	683b      	ldr	r3, [r7, #0]
 80079a4:	685a      	ldr	r2, [r3, #4]
 80079a6:	4613      	mov	r3, r2
 80079a8:	009b      	lsls	r3, r3, #2
 80079aa:	4413      	add	r3, r2
 80079ac:	3b05      	subs	r3, #5
 80079ae:	fa00 f203 	lsl.w	r2, r0, r3
 80079b2:	687b      	ldr	r3, [r7, #4]
 80079b4:	681b      	ldr	r3, [r3, #0]
 80079b6:	430a      	orrs	r2, r1
 80079b8:	635a      	str	r2, [r3, #52]	; 0x34
 80079ba:	e04c      	b.n	8007a56 <HAL_ADC_ConfigChannel+0x1aa>
 80079bc:	683b      	ldr	r3, [r7, #0]
 80079be:	685b      	ldr	r3, [r3, #4]
 80079c0:	2b0c      	cmp	r3, #12
 80079c2:	d824      	bhi.n	8007a0e <HAL_ADC_ConfigChannel+0x162>
 80079c4:	687b      	ldr	r3, [r7, #4]
 80079c6:	681b      	ldr	r3, [r3, #0]
 80079c8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80079ca:	683b      	ldr	r3, [r7, #0]
 80079cc:	685a      	ldr	r2, [r3, #4]
 80079ce:	4613      	mov	r3, r2
 80079d0:	009b      	lsls	r3, r3, #2
 80079d2:	4413      	add	r3, r2
 80079d4:	3b23      	subs	r3, #35	; 0x23
 80079d6:	221f      	movs	r2, #31
 80079d8:	fa02 f303 	lsl.w	r3, r2, r3
 80079dc:	43da      	mvns	r2, r3
 80079de:	687b      	ldr	r3, [r7, #4]
 80079e0:	681b      	ldr	r3, [r3, #0]
 80079e2:	400a      	ands	r2, r1
 80079e4:	631a      	str	r2, [r3, #48]	; 0x30
 80079e6:	687b      	ldr	r3, [r7, #4]
 80079e8:	681b      	ldr	r3, [r3, #0]
 80079ea:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80079ec:	683b      	ldr	r3, [r7, #0]
 80079ee:	681b      	ldr	r3, [r3, #0]
 80079f0:	b29b      	uxth	r3, r3
 80079f2:	4618      	mov	r0, r3
 80079f4:	683b      	ldr	r3, [r7, #0]
 80079f6:	685a      	ldr	r2, [r3, #4]
 80079f8:	4613      	mov	r3, r2
 80079fa:	009b      	lsls	r3, r3, #2
 80079fc:	4413      	add	r3, r2
 80079fe:	3b23      	subs	r3, #35	; 0x23
 8007a00:	fa00 f203 	lsl.w	r2, r0, r3
 8007a04:	687b      	ldr	r3, [r7, #4]
 8007a06:	681b      	ldr	r3, [r3, #0]
 8007a08:	430a      	orrs	r2, r1
 8007a0a:	631a      	str	r2, [r3, #48]	; 0x30
 8007a0c:	e023      	b.n	8007a56 <HAL_ADC_ConfigChannel+0x1aa>
 8007a0e:	687b      	ldr	r3, [r7, #4]
 8007a10:	681b      	ldr	r3, [r3, #0]
 8007a12:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007a14:	683b      	ldr	r3, [r7, #0]
 8007a16:	685a      	ldr	r2, [r3, #4]
 8007a18:	4613      	mov	r3, r2
 8007a1a:	009b      	lsls	r3, r3, #2
 8007a1c:	4413      	add	r3, r2
 8007a1e:	3b41      	subs	r3, #65	; 0x41
 8007a20:	221f      	movs	r2, #31
 8007a22:	fa02 f303 	lsl.w	r3, r2, r3
 8007a26:	43da      	mvns	r2, r3
 8007a28:	687b      	ldr	r3, [r7, #4]
 8007a2a:	681b      	ldr	r3, [r3, #0]
 8007a2c:	400a      	ands	r2, r1
 8007a2e:	62da      	str	r2, [r3, #44]	; 0x2c
 8007a30:	687b      	ldr	r3, [r7, #4]
 8007a32:	681b      	ldr	r3, [r3, #0]
 8007a34:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007a36:	683b      	ldr	r3, [r7, #0]
 8007a38:	681b      	ldr	r3, [r3, #0]
 8007a3a:	b29b      	uxth	r3, r3
 8007a3c:	4618      	mov	r0, r3
 8007a3e:	683b      	ldr	r3, [r7, #0]
 8007a40:	685a      	ldr	r2, [r3, #4]
 8007a42:	4613      	mov	r3, r2
 8007a44:	009b      	lsls	r3, r3, #2
 8007a46:	4413      	add	r3, r2
 8007a48:	3b41      	subs	r3, #65	; 0x41
 8007a4a:	fa00 f203 	lsl.w	r2, r0, r3
 8007a4e:	687b      	ldr	r3, [r7, #4]
 8007a50:	681b      	ldr	r3, [r3, #0]
 8007a52:	430a      	orrs	r2, r1
 8007a54:	62da      	str	r2, [r3, #44]	; 0x2c
 8007a56:	4b29      	ldr	r3, [pc, #164]	; (8007afc <HAL_ADC_ConfigChannel+0x250>)
 8007a58:	60fb      	str	r3, [r7, #12]
 8007a5a:	687b      	ldr	r3, [r7, #4]
 8007a5c:	681b      	ldr	r3, [r3, #0]
 8007a5e:	4a28      	ldr	r2, [pc, #160]	; (8007b00 <HAL_ADC_ConfigChannel+0x254>)
 8007a60:	4293      	cmp	r3, r2
 8007a62:	d10f      	bne.n	8007a84 <HAL_ADC_ConfigChannel+0x1d8>
 8007a64:	683b      	ldr	r3, [r7, #0]
 8007a66:	681b      	ldr	r3, [r3, #0]
 8007a68:	2b12      	cmp	r3, #18
 8007a6a:	d10b      	bne.n	8007a84 <HAL_ADC_ConfigChannel+0x1d8>
 8007a6c:	68fb      	ldr	r3, [r7, #12]
 8007a6e:	685b      	ldr	r3, [r3, #4]
 8007a70:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 8007a74:	68fb      	ldr	r3, [r7, #12]
 8007a76:	605a      	str	r2, [r3, #4]
 8007a78:	68fb      	ldr	r3, [r7, #12]
 8007a7a:	685b      	ldr	r3, [r3, #4]
 8007a7c:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8007a80:	68fb      	ldr	r3, [r7, #12]
 8007a82:	605a      	str	r2, [r3, #4]
 8007a84:	687b      	ldr	r3, [r7, #4]
 8007a86:	681b      	ldr	r3, [r3, #0]
 8007a88:	4a1d      	ldr	r2, [pc, #116]	; (8007b00 <HAL_ADC_ConfigChannel+0x254>)
 8007a8a:	4293      	cmp	r3, r2
 8007a8c:	d12b      	bne.n	8007ae6 <HAL_ADC_ConfigChannel+0x23a>
 8007a8e:	683b      	ldr	r3, [r7, #0]
 8007a90:	681b      	ldr	r3, [r3, #0]
 8007a92:	4a1c      	ldr	r2, [pc, #112]	; (8007b04 <HAL_ADC_ConfigChannel+0x258>)
 8007a94:	4293      	cmp	r3, r2
 8007a96:	d003      	beq.n	8007aa0 <HAL_ADC_ConfigChannel+0x1f4>
 8007a98:	683b      	ldr	r3, [r7, #0]
 8007a9a:	681b      	ldr	r3, [r3, #0]
 8007a9c:	2b11      	cmp	r3, #17
 8007a9e:	d122      	bne.n	8007ae6 <HAL_ADC_ConfigChannel+0x23a>
 8007aa0:	68fb      	ldr	r3, [r7, #12]
 8007aa2:	685b      	ldr	r3, [r3, #4]
 8007aa4:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 8007aa8:	68fb      	ldr	r3, [r7, #12]
 8007aaa:	605a      	str	r2, [r3, #4]
 8007aac:	68fb      	ldr	r3, [r7, #12]
 8007aae:	685b      	ldr	r3, [r3, #4]
 8007ab0:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8007ab4:	68fb      	ldr	r3, [r7, #12]
 8007ab6:	605a      	str	r2, [r3, #4]
 8007ab8:	683b      	ldr	r3, [r7, #0]
 8007aba:	681b      	ldr	r3, [r3, #0]
 8007abc:	4a11      	ldr	r2, [pc, #68]	; (8007b04 <HAL_ADC_ConfigChannel+0x258>)
 8007abe:	4293      	cmp	r3, r2
 8007ac0:	d111      	bne.n	8007ae6 <HAL_ADC_ConfigChannel+0x23a>
 8007ac2:	4b11      	ldr	r3, [pc, #68]	; (8007b08 <HAL_ADC_ConfigChannel+0x25c>)
 8007ac4:	681b      	ldr	r3, [r3, #0]
 8007ac6:	4a11      	ldr	r2, [pc, #68]	; (8007b0c <HAL_ADC_ConfigChannel+0x260>)
 8007ac8:	fba2 2303 	umull	r2, r3, r2, r3
 8007acc:	0c9a      	lsrs	r2, r3, #18
 8007ace:	4613      	mov	r3, r2
 8007ad0:	009b      	lsls	r3, r3, #2
 8007ad2:	4413      	add	r3, r2
 8007ad4:	005b      	lsls	r3, r3, #1
 8007ad6:	60bb      	str	r3, [r7, #8]
 8007ad8:	e002      	b.n	8007ae0 <HAL_ADC_ConfigChannel+0x234>
 8007ada:	68bb      	ldr	r3, [r7, #8]
 8007adc:	3b01      	subs	r3, #1
 8007ade:	60bb      	str	r3, [r7, #8]
 8007ae0:	68bb      	ldr	r3, [r7, #8]
 8007ae2:	2b00      	cmp	r3, #0
 8007ae4:	d1f9      	bne.n	8007ada <HAL_ADC_ConfigChannel+0x22e>
 8007ae6:	687b      	ldr	r3, [r7, #4]
 8007ae8:	2200      	movs	r2, #0
 8007aea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007aee:	2300      	movs	r3, #0
 8007af0:	4618      	mov	r0, r3
 8007af2:	3714      	adds	r7, #20
 8007af4:	46bd      	mov	sp, r7
 8007af6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007afa:	4770      	bx	lr
 8007afc:	40012300 	.word	0x40012300
 8007b00:	40012000 	.word	0x40012000
 8007b04:	10000012 	.word	0x10000012
 8007b08:	2000013c 	.word	0x2000013c
 8007b0c:	431bde83 	.word	0x431bde83

08007b10 <ADC_Init>:
 8007b10:	b480      	push	{r7}
 8007b12:	b085      	sub	sp, #20
 8007b14:	af00      	add	r7, sp, #0
 8007b16:	6078      	str	r0, [r7, #4]
 8007b18:	4b79      	ldr	r3, [pc, #484]	; (8007d00 <ADC_Init+0x1f0>)
 8007b1a:	60fb      	str	r3, [r7, #12]
 8007b1c:	68fb      	ldr	r3, [r7, #12]
 8007b1e:	685b      	ldr	r3, [r3, #4]
 8007b20:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8007b24:	68fb      	ldr	r3, [r7, #12]
 8007b26:	605a      	str	r2, [r3, #4]
 8007b28:	68fb      	ldr	r3, [r7, #12]
 8007b2a:	685a      	ldr	r2, [r3, #4]
 8007b2c:	687b      	ldr	r3, [r7, #4]
 8007b2e:	685b      	ldr	r3, [r3, #4]
 8007b30:	431a      	orrs	r2, r3
 8007b32:	68fb      	ldr	r3, [r7, #12]
 8007b34:	605a      	str	r2, [r3, #4]
 8007b36:	687b      	ldr	r3, [r7, #4]
 8007b38:	681b      	ldr	r3, [r3, #0]
 8007b3a:	685a      	ldr	r2, [r3, #4]
 8007b3c:	687b      	ldr	r3, [r7, #4]
 8007b3e:	681b      	ldr	r3, [r3, #0]
 8007b40:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007b44:	605a      	str	r2, [r3, #4]
 8007b46:	687b      	ldr	r3, [r7, #4]
 8007b48:	681b      	ldr	r3, [r3, #0]
 8007b4a:	6859      	ldr	r1, [r3, #4]
 8007b4c:	687b      	ldr	r3, [r7, #4]
 8007b4e:	691b      	ldr	r3, [r3, #16]
 8007b50:	021a      	lsls	r2, r3, #8
 8007b52:	687b      	ldr	r3, [r7, #4]
 8007b54:	681b      	ldr	r3, [r3, #0]
 8007b56:	430a      	orrs	r2, r1
 8007b58:	605a      	str	r2, [r3, #4]
 8007b5a:	687b      	ldr	r3, [r7, #4]
 8007b5c:	681b      	ldr	r3, [r3, #0]
 8007b5e:	685a      	ldr	r2, [r3, #4]
 8007b60:	687b      	ldr	r3, [r7, #4]
 8007b62:	681b      	ldr	r3, [r3, #0]
 8007b64:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8007b68:	605a      	str	r2, [r3, #4]
 8007b6a:	687b      	ldr	r3, [r7, #4]
 8007b6c:	681b      	ldr	r3, [r3, #0]
 8007b6e:	6859      	ldr	r1, [r3, #4]
 8007b70:	687b      	ldr	r3, [r7, #4]
 8007b72:	689a      	ldr	r2, [r3, #8]
 8007b74:	687b      	ldr	r3, [r7, #4]
 8007b76:	681b      	ldr	r3, [r3, #0]
 8007b78:	430a      	orrs	r2, r1
 8007b7a:	605a      	str	r2, [r3, #4]
 8007b7c:	687b      	ldr	r3, [r7, #4]
 8007b7e:	681b      	ldr	r3, [r3, #0]
 8007b80:	689a      	ldr	r2, [r3, #8]
 8007b82:	687b      	ldr	r3, [r7, #4]
 8007b84:	681b      	ldr	r3, [r3, #0]
 8007b86:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007b8a:	609a      	str	r2, [r3, #8]
 8007b8c:	687b      	ldr	r3, [r7, #4]
 8007b8e:	681b      	ldr	r3, [r3, #0]
 8007b90:	6899      	ldr	r1, [r3, #8]
 8007b92:	687b      	ldr	r3, [r7, #4]
 8007b94:	68da      	ldr	r2, [r3, #12]
 8007b96:	687b      	ldr	r3, [r7, #4]
 8007b98:	681b      	ldr	r3, [r3, #0]
 8007b9a:	430a      	orrs	r2, r1
 8007b9c:	609a      	str	r2, [r3, #8]
 8007b9e:	687b      	ldr	r3, [r7, #4]
 8007ba0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007ba2:	4a58      	ldr	r2, [pc, #352]	; (8007d04 <ADC_Init+0x1f4>)
 8007ba4:	4293      	cmp	r3, r2
 8007ba6:	d022      	beq.n	8007bee <ADC_Init+0xde>
 8007ba8:	687b      	ldr	r3, [r7, #4]
 8007baa:	681b      	ldr	r3, [r3, #0]
 8007bac:	689a      	ldr	r2, [r3, #8]
 8007bae:	687b      	ldr	r3, [r7, #4]
 8007bb0:	681b      	ldr	r3, [r3, #0]
 8007bb2:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8007bb6:	609a      	str	r2, [r3, #8]
 8007bb8:	687b      	ldr	r3, [r7, #4]
 8007bba:	681b      	ldr	r3, [r3, #0]
 8007bbc:	6899      	ldr	r1, [r3, #8]
 8007bbe:	687b      	ldr	r3, [r7, #4]
 8007bc0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8007bc2:	687b      	ldr	r3, [r7, #4]
 8007bc4:	681b      	ldr	r3, [r3, #0]
 8007bc6:	430a      	orrs	r2, r1
 8007bc8:	609a      	str	r2, [r3, #8]
 8007bca:	687b      	ldr	r3, [r7, #4]
 8007bcc:	681b      	ldr	r3, [r3, #0]
 8007bce:	689a      	ldr	r2, [r3, #8]
 8007bd0:	687b      	ldr	r3, [r7, #4]
 8007bd2:	681b      	ldr	r3, [r3, #0]
 8007bd4:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8007bd8:	609a      	str	r2, [r3, #8]
 8007bda:	687b      	ldr	r3, [r7, #4]
 8007bdc:	681b      	ldr	r3, [r3, #0]
 8007bde:	6899      	ldr	r1, [r3, #8]
 8007be0:	687b      	ldr	r3, [r7, #4]
 8007be2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007be4:	687b      	ldr	r3, [r7, #4]
 8007be6:	681b      	ldr	r3, [r3, #0]
 8007be8:	430a      	orrs	r2, r1
 8007bea:	609a      	str	r2, [r3, #8]
 8007bec:	e00f      	b.n	8007c0e <ADC_Init+0xfe>
 8007bee:	687b      	ldr	r3, [r7, #4]
 8007bf0:	681b      	ldr	r3, [r3, #0]
 8007bf2:	689a      	ldr	r2, [r3, #8]
 8007bf4:	687b      	ldr	r3, [r7, #4]
 8007bf6:	681b      	ldr	r3, [r3, #0]
 8007bf8:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8007bfc:	609a      	str	r2, [r3, #8]
 8007bfe:	687b      	ldr	r3, [r7, #4]
 8007c00:	681b      	ldr	r3, [r3, #0]
 8007c02:	689a      	ldr	r2, [r3, #8]
 8007c04:	687b      	ldr	r3, [r7, #4]
 8007c06:	681b      	ldr	r3, [r3, #0]
 8007c08:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8007c0c:	609a      	str	r2, [r3, #8]
 8007c0e:	687b      	ldr	r3, [r7, #4]
 8007c10:	681b      	ldr	r3, [r3, #0]
 8007c12:	689a      	ldr	r2, [r3, #8]
 8007c14:	687b      	ldr	r3, [r7, #4]
 8007c16:	681b      	ldr	r3, [r3, #0]
 8007c18:	f022 0202 	bic.w	r2, r2, #2
 8007c1c:	609a      	str	r2, [r3, #8]
 8007c1e:	687b      	ldr	r3, [r7, #4]
 8007c20:	681b      	ldr	r3, [r3, #0]
 8007c22:	6899      	ldr	r1, [r3, #8]
 8007c24:	687b      	ldr	r3, [r7, #4]
 8007c26:	7e1b      	ldrb	r3, [r3, #24]
 8007c28:	005a      	lsls	r2, r3, #1
 8007c2a:	687b      	ldr	r3, [r7, #4]
 8007c2c:	681b      	ldr	r3, [r3, #0]
 8007c2e:	430a      	orrs	r2, r1
 8007c30:	609a      	str	r2, [r3, #8]
 8007c32:	687b      	ldr	r3, [r7, #4]
 8007c34:	f893 3020 	ldrb.w	r3, [r3, #32]
 8007c38:	2b00      	cmp	r3, #0
 8007c3a:	d01b      	beq.n	8007c74 <ADC_Init+0x164>
 8007c3c:	687b      	ldr	r3, [r7, #4]
 8007c3e:	681b      	ldr	r3, [r3, #0]
 8007c40:	685a      	ldr	r2, [r3, #4]
 8007c42:	687b      	ldr	r3, [r7, #4]
 8007c44:	681b      	ldr	r3, [r3, #0]
 8007c46:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8007c4a:	605a      	str	r2, [r3, #4]
 8007c4c:	687b      	ldr	r3, [r7, #4]
 8007c4e:	681b      	ldr	r3, [r3, #0]
 8007c50:	685a      	ldr	r2, [r3, #4]
 8007c52:	687b      	ldr	r3, [r7, #4]
 8007c54:	681b      	ldr	r3, [r3, #0]
 8007c56:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8007c5a:	605a      	str	r2, [r3, #4]
 8007c5c:	687b      	ldr	r3, [r7, #4]
 8007c5e:	681b      	ldr	r3, [r3, #0]
 8007c60:	6859      	ldr	r1, [r3, #4]
 8007c62:	687b      	ldr	r3, [r7, #4]
 8007c64:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007c66:	3b01      	subs	r3, #1
 8007c68:	035a      	lsls	r2, r3, #13
 8007c6a:	687b      	ldr	r3, [r7, #4]
 8007c6c:	681b      	ldr	r3, [r3, #0]
 8007c6e:	430a      	orrs	r2, r1
 8007c70:	605a      	str	r2, [r3, #4]
 8007c72:	e007      	b.n	8007c84 <ADC_Init+0x174>
 8007c74:	687b      	ldr	r3, [r7, #4]
 8007c76:	681b      	ldr	r3, [r3, #0]
 8007c78:	685a      	ldr	r2, [r3, #4]
 8007c7a:	687b      	ldr	r3, [r7, #4]
 8007c7c:	681b      	ldr	r3, [r3, #0]
 8007c7e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007c82:	605a      	str	r2, [r3, #4]
 8007c84:	687b      	ldr	r3, [r7, #4]
 8007c86:	681b      	ldr	r3, [r3, #0]
 8007c88:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007c8a:	687b      	ldr	r3, [r7, #4]
 8007c8c:	681b      	ldr	r3, [r3, #0]
 8007c8e:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8007c92:	62da      	str	r2, [r3, #44]	; 0x2c
 8007c94:	687b      	ldr	r3, [r7, #4]
 8007c96:	681b      	ldr	r3, [r3, #0]
 8007c98:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007c9a:	687b      	ldr	r3, [r7, #4]
 8007c9c:	69db      	ldr	r3, [r3, #28]
 8007c9e:	3b01      	subs	r3, #1
 8007ca0:	051a      	lsls	r2, r3, #20
 8007ca2:	687b      	ldr	r3, [r7, #4]
 8007ca4:	681b      	ldr	r3, [r3, #0]
 8007ca6:	430a      	orrs	r2, r1
 8007ca8:	62da      	str	r2, [r3, #44]	; 0x2c
 8007caa:	687b      	ldr	r3, [r7, #4]
 8007cac:	681b      	ldr	r3, [r3, #0]
 8007cae:	689a      	ldr	r2, [r3, #8]
 8007cb0:	687b      	ldr	r3, [r7, #4]
 8007cb2:	681b      	ldr	r3, [r3, #0]
 8007cb4:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8007cb8:	609a      	str	r2, [r3, #8]
 8007cba:	687b      	ldr	r3, [r7, #4]
 8007cbc:	681b      	ldr	r3, [r3, #0]
 8007cbe:	6899      	ldr	r1, [r3, #8]
 8007cc0:	687b      	ldr	r3, [r7, #4]
 8007cc2:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8007cc6:	025a      	lsls	r2, r3, #9
 8007cc8:	687b      	ldr	r3, [r7, #4]
 8007cca:	681b      	ldr	r3, [r3, #0]
 8007ccc:	430a      	orrs	r2, r1
 8007cce:	609a      	str	r2, [r3, #8]
 8007cd0:	687b      	ldr	r3, [r7, #4]
 8007cd2:	681b      	ldr	r3, [r3, #0]
 8007cd4:	689a      	ldr	r2, [r3, #8]
 8007cd6:	687b      	ldr	r3, [r7, #4]
 8007cd8:	681b      	ldr	r3, [r3, #0]
 8007cda:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007cde:	609a      	str	r2, [r3, #8]
 8007ce0:	687b      	ldr	r3, [r7, #4]
 8007ce2:	681b      	ldr	r3, [r3, #0]
 8007ce4:	6899      	ldr	r1, [r3, #8]
 8007ce6:	687b      	ldr	r3, [r7, #4]
 8007ce8:	695b      	ldr	r3, [r3, #20]
 8007cea:	029a      	lsls	r2, r3, #10
 8007cec:	687b      	ldr	r3, [r7, #4]
 8007cee:	681b      	ldr	r3, [r3, #0]
 8007cf0:	430a      	orrs	r2, r1
 8007cf2:	609a      	str	r2, [r3, #8]
 8007cf4:	bf00      	nop
 8007cf6:	3714      	adds	r7, #20
 8007cf8:	46bd      	mov	sp, r7
 8007cfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cfe:	4770      	bx	lr
 8007d00:	40012300 	.word	0x40012300
 8007d04:	0f000001 	.word	0x0f000001

08007d08 <HAL_ADCEx_InjectedConfigChannel>:
 8007d08:	b480      	push	{r7}
 8007d0a:	b085      	sub	sp, #20
 8007d0c:	af00      	add	r7, sp, #0
 8007d0e:	6078      	str	r0, [r7, #4]
 8007d10:	6039      	str	r1, [r7, #0]
 8007d12:	687b      	ldr	r3, [r7, #4]
 8007d14:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007d18:	2b01      	cmp	r3, #1
 8007d1a:	d101      	bne.n	8007d20 <HAL_ADCEx_InjectedConfigChannel+0x18>
 8007d1c:	2302      	movs	r3, #2
 8007d1e:	e17e      	b.n	800801e <HAL_ADCEx_InjectedConfigChannel+0x316>
 8007d20:	687b      	ldr	r3, [r7, #4]
 8007d22:	2201      	movs	r2, #1
 8007d24:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007d28:	683b      	ldr	r3, [r7, #0]
 8007d2a:	681b      	ldr	r3, [r3, #0]
 8007d2c:	2b09      	cmp	r3, #9
 8007d2e:	d925      	bls.n	8007d7c <HAL_ADCEx_InjectedConfigChannel+0x74>
 8007d30:	687b      	ldr	r3, [r7, #4]
 8007d32:	681b      	ldr	r3, [r3, #0]
 8007d34:	68d9      	ldr	r1, [r3, #12]
 8007d36:	683b      	ldr	r3, [r7, #0]
 8007d38:	681b      	ldr	r3, [r3, #0]
 8007d3a:	b29b      	uxth	r3, r3
 8007d3c:	461a      	mov	r2, r3
 8007d3e:	4613      	mov	r3, r2
 8007d40:	005b      	lsls	r3, r3, #1
 8007d42:	4413      	add	r3, r2
 8007d44:	3b1e      	subs	r3, #30
 8007d46:	2207      	movs	r2, #7
 8007d48:	fa02 f303 	lsl.w	r3, r2, r3
 8007d4c:	43da      	mvns	r2, r3
 8007d4e:	687b      	ldr	r3, [r7, #4]
 8007d50:	681b      	ldr	r3, [r3, #0]
 8007d52:	400a      	ands	r2, r1
 8007d54:	60da      	str	r2, [r3, #12]
 8007d56:	687b      	ldr	r3, [r7, #4]
 8007d58:	681b      	ldr	r3, [r3, #0]
 8007d5a:	68d9      	ldr	r1, [r3, #12]
 8007d5c:	683b      	ldr	r3, [r7, #0]
 8007d5e:	689a      	ldr	r2, [r3, #8]
 8007d60:	683b      	ldr	r3, [r7, #0]
 8007d62:	681b      	ldr	r3, [r3, #0]
 8007d64:	b29b      	uxth	r3, r3
 8007d66:	4618      	mov	r0, r3
 8007d68:	4603      	mov	r3, r0
 8007d6a:	005b      	lsls	r3, r3, #1
 8007d6c:	4403      	add	r3, r0
 8007d6e:	3b1e      	subs	r3, #30
 8007d70:	409a      	lsls	r2, r3
 8007d72:	687b      	ldr	r3, [r7, #4]
 8007d74:	681b      	ldr	r3, [r3, #0]
 8007d76:	430a      	orrs	r2, r1
 8007d78:	60da      	str	r2, [r3, #12]
 8007d7a:	e022      	b.n	8007dc2 <HAL_ADCEx_InjectedConfigChannel+0xba>
 8007d7c:	687b      	ldr	r3, [r7, #4]
 8007d7e:	681b      	ldr	r3, [r3, #0]
 8007d80:	6919      	ldr	r1, [r3, #16]
 8007d82:	683b      	ldr	r3, [r7, #0]
 8007d84:	681b      	ldr	r3, [r3, #0]
 8007d86:	b29b      	uxth	r3, r3
 8007d88:	461a      	mov	r2, r3
 8007d8a:	4613      	mov	r3, r2
 8007d8c:	005b      	lsls	r3, r3, #1
 8007d8e:	4413      	add	r3, r2
 8007d90:	2207      	movs	r2, #7
 8007d92:	fa02 f303 	lsl.w	r3, r2, r3
 8007d96:	43da      	mvns	r2, r3
 8007d98:	687b      	ldr	r3, [r7, #4]
 8007d9a:	681b      	ldr	r3, [r3, #0]
 8007d9c:	400a      	ands	r2, r1
 8007d9e:	611a      	str	r2, [r3, #16]
 8007da0:	687b      	ldr	r3, [r7, #4]
 8007da2:	681b      	ldr	r3, [r3, #0]
 8007da4:	6919      	ldr	r1, [r3, #16]
 8007da6:	683b      	ldr	r3, [r7, #0]
 8007da8:	689a      	ldr	r2, [r3, #8]
 8007daa:	683b      	ldr	r3, [r7, #0]
 8007dac:	681b      	ldr	r3, [r3, #0]
 8007dae:	b29b      	uxth	r3, r3
 8007db0:	4618      	mov	r0, r3
 8007db2:	4603      	mov	r3, r0
 8007db4:	005b      	lsls	r3, r3, #1
 8007db6:	4403      	add	r3, r0
 8007db8:	409a      	lsls	r2, r3
 8007dba:	687b      	ldr	r3, [r7, #4]
 8007dbc:	681b      	ldr	r3, [r3, #0]
 8007dbe:	430a      	orrs	r2, r1
 8007dc0:	611a      	str	r2, [r3, #16]
 8007dc2:	687b      	ldr	r3, [r7, #4]
 8007dc4:	681b      	ldr	r3, [r3, #0]
 8007dc6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8007dc8:	687b      	ldr	r3, [r7, #4]
 8007dca:	681b      	ldr	r3, [r3, #0]
 8007dcc:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8007dd0:	639a      	str	r2, [r3, #56]	; 0x38
 8007dd2:	687b      	ldr	r3, [r7, #4]
 8007dd4:	681b      	ldr	r3, [r3, #0]
 8007dd6:	6b99      	ldr	r1, [r3, #56]	; 0x38
 8007dd8:	683b      	ldr	r3, [r7, #0]
 8007dda:	691b      	ldr	r3, [r3, #16]
 8007ddc:	3b01      	subs	r3, #1
 8007dde:	051a      	lsls	r2, r3, #20
 8007de0:	687b      	ldr	r3, [r7, #4]
 8007de2:	681b      	ldr	r3, [r3, #0]
 8007de4:	430a      	orrs	r2, r1
 8007de6:	639a      	str	r2, [r3, #56]	; 0x38
 8007de8:	687b      	ldr	r3, [r7, #4]
 8007dea:	681b      	ldr	r3, [r3, #0]
 8007dec:	6b99      	ldr	r1, [r3, #56]	; 0x38
 8007dee:	683b      	ldr	r3, [r7, #0]
 8007df0:	685b      	ldr	r3, [r3, #4]
 8007df2:	b2da      	uxtb	r2, r3
 8007df4:	683b      	ldr	r3, [r7, #0]
 8007df6:	691b      	ldr	r3, [r3, #16]
 8007df8:	b2db      	uxtb	r3, r3
 8007dfa:	1ad3      	subs	r3, r2, r3
 8007dfc:	b2db      	uxtb	r3, r3
 8007dfe:	3303      	adds	r3, #3
 8007e00:	b2db      	uxtb	r3, r3
 8007e02:	461a      	mov	r2, r3
 8007e04:	4613      	mov	r3, r2
 8007e06:	009b      	lsls	r3, r3, #2
 8007e08:	4413      	add	r3, r2
 8007e0a:	221f      	movs	r2, #31
 8007e0c:	fa02 f303 	lsl.w	r3, r2, r3
 8007e10:	43da      	mvns	r2, r3
 8007e12:	687b      	ldr	r3, [r7, #4]
 8007e14:	681b      	ldr	r3, [r3, #0]
 8007e16:	400a      	ands	r2, r1
 8007e18:	639a      	str	r2, [r3, #56]	; 0x38
 8007e1a:	687b      	ldr	r3, [r7, #4]
 8007e1c:	681b      	ldr	r3, [r3, #0]
 8007e1e:	6b99      	ldr	r1, [r3, #56]	; 0x38
 8007e20:	683b      	ldr	r3, [r7, #0]
 8007e22:	681b      	ldr	r3, [r3, #0]
 8007e24:	b29b      	uxth	r3, r3
 8007e26:	4618      	mov	r0, r3
 8007e28:	683b      	ldr	r3, [r7, #0]
 8007e2a:	685b      	ldr	r3, [r3, #4]
 8007e2c:	b2da      	uxtb	r2, r3
 8007e2e:	683b      	ldr	r3, [r7, #0]
 8007e30:	691b      	ldr	r3, [r3, #16]
 8007e32:	b2db      	uxtb	r3, r3
 8007e34:	1ad3      	subs	r3, r2, r3
 8007e36:	b2db      	uxtb	r3, r3
 8007e38:	3303      	adds	r3, #3
 8007e3a:	b2db      	uxtb	r3, r3
 8007e3c:	461a      	mov	r2, r3
 8007e3e:	4613      	mov	r3, r2
 8007e40:	009b      	lsls	r3, r3, #2
 8007e42:	4413      	add	r3, r2
 8007e44:	fa00 f203 	lsl.w	r2, r0, r3
 8007e48:	687b      	ldr	r3, [r7, #4]
 8007e4a:	681b      	ldr	r3, [r3, #0]
 8007e4c:	430a      	orrs	r2, r1
 8007e4e:	639a      	str	r2, [r3, #56]	; 0x38
 8007e50:	683b      	ldr	r3, [r7, #0]
 8007e52:	699b      	ldr	r3, [r3, #24]
 8007e54:	4a75      	ldr	r2, [pc, #468]	; (800802c <HAL_ADCEx_InjectedConfigChannel+0x324>)
 8007e56:	4293      	cmp	r3, r2
 8007e58:	d022      	beq.n	8007ea0 <HAL_ADCEx_InjectedConfigChannel+0x198>
 8007e5a:	687b      	ldr	r3, [r7, #4]
 8007e5c:	681b      	ldr	r3, [r3, #0]
 8007e5e:	689a      	ldr	r2, [r3, #8]
 8007e60:	687b      	ldr	r3, [r7, #4]
 8007e62:	681b      	ldr	r3, [r3, #0]
 8007e64:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8007e68:	609a      	str	r2, [r3, #8]
 8007e6a:	687b      	ldr	r3, [r7, #4]
 8007e6c:	681b      	ldr	r3, [r3, #0]
 8007e6e:	6899      	ldr	r1, [r3, #8]
 8007e70:	683b      	ldr	r3, [r7, #0]
 8007e72:	699a      	ldr	r2, [r3, #24]
 8007e74:	687b      	ldr	r3, [r7, #4]
 8007e76:	681b      	ldr	r3, [r3, #0]
 8007e78:	430a      	orrs	r2, r1
 8007e7a:	609a      	str	r2, [r3, #8]
 8007e7c:	687b      	ldr	r3, [r7, #4]
 8007e7e:	681b      	ldr	r3, [r3, #0]
 8007e80:	689a      	ldr	r2, [r3, #8]
 8007e82:	687b      	ldr	r3, [r7, #4]
 8007e84:	681b      	ldr	r3, [r3, #0]
 8007e86:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8007e8a:	609a      	str	r2, [r3, #8]
 8007e8c:	687b      	ldr	r3, [r7, #4]
 8007e8e:	681b      	ldr	r3, [r3, #0]
 8007e90:	6899      	ldr	r1, [r3, #8]
 8007e92:	683b      	ldr	r3, [r7, #0]
 8007e94:	69da      	ldr	r2, [r3, #28]
 8007e96:	687b      	ldr	r3, [r7, #4]
 8007e98:	681b      	ldr	r3, [r3, #0]
 8007e9a:	430a      	orrs	r2, r1
 8007e9c:	609a      	str	r2, [r3, #8]
 8007e9e:	e00f      	b.n	8007ec0 <HAL_ADCEx_InjectedConfigChannel+0x1b8>
 8007ea0:	687b      	ldr	r3, [r7, #4]
 8007ea2:	681b      	ldr	r3, [r3, #0]
 8007ea4:	689a      	ldr	r2, [r3, #8]
 8007ea6:	687b      	ldr	r3, [r7, #4]
 8007ea8:	681b      	ldr	r3, [r3, #0]
 8007eaa:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8007eae:	609a      	str	r2, [r3, #8]
 8007eb0:	687b      	ldr	r3, [r7, #4]
 8007eb2:	681b      	ldr	r3, [r3, #0]
 8007eb4:	689a      	ldr	r2, [r3, #8]
 8007eb6:	687b      	ldr	r3, [r7, #4]
 8007eb8:	681b      	ldr	r3, [r3, #0]
 8007eba:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8007ebe:	609a      	str	r2, [r3, #8]
 8007ec0:	683b      	ldr	r3, [r7, #0]
 8007ec2:	7d5b      	ldrb	r3, [r3, #21]
 8007ec4:	2b00      	cmp	r3, #0
 8007ec6:	d008      	beq.n	8007eda <HAL_ADCEx_InjectedConfigChannel+0x1d2>
 8007ec8:	687b      	ldr	r3, [r7, #4]
 8007eca:	681b      	ldr	r3, [r3, #0]
 8007ecc:	685a      	ldr	r2, [r3, #4]
 8007ece:	687b      	ldr	r3, [r7, #4]
 8007ed0:	681b      	ldr	r3, [r3, #0]
 8007ed2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007ed6:	605a      	str	r2, [r3, #4]
 8007ed8:	e007      	b.n	8007eea <HAL_ADCEx_InjectedConfigChannel+0x1e2>
 8007eda:	687b      	ldr	r3, [r7, #4]
 8007edc:	681b      	ldr	r3, [r3, #0]
 8007ede:	685a      	ldr	r2, [r3, #4]
 8007ee0:	687b      	ldr	r3, [r7, #4]
 8007ee2:	681b      	ldr	r3, [r3, #0]
 8007ee4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007ee8:	605a      	str	r2, [r3, #4]
 8007eea:	683b      	ldr	r3, [r7, #0]
 8007eec:	7d1b      	ldrb	r3, [r3, #20]
 8007eee:	2b00      	cmp	r3, #0
 8007ef0:	d008      	beq.n	8007f04 <HAL_ADCEx_InjectedConfigChannel+0x1fc>
 8007ef2:	687b      	ldr	r3, [r7, #4]
 8007ef4:	681b      	ldr	r3, [r3, #0]
 8007ef6:	685a      	ldr	r2, [r3, #4]
 8007ef8:	687b      	ldr	r3, [r7, #4]
 8007efa:	681b      	ldr	r3, [r3, #0]
 8007efc:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8007f00:	605a      	str	r2, [r3, #4]
 8007f02:	e007      	b.n	8007f14 <HAL_ADCEx_InjectedConfigChannel+0x20c>
 8007f04:	687b      	ldr	r3, [r7, #4]
 8007f06:	681b      	ldr	r3, [r3, #0]
 8007f08:	685a      	ldr	r2, [r3, #4]
 8007f0a:	687b      	ldr	r3, [r7, #4]
 8007f0c:	681b      	ldr	r3, [r3, #0]
 8007f0e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8007f12:	605a      	str	r2, [r3, #4]
 8007f14:	683b      	ldr	r3, [r7, #0]
 8007f16:	685b      	ldr	r3, [r3, #4]
 8007f18:	2b03      	cmp	r3, #3
 8007f1a:	d02e      	beq.n	8007f7a <HAL_ADCEx_InjectedConfigChannel+0x272>
 8007f1c:	2b03      	cmp	r3, #3
 8007f1e:	d840      	bhi.n	8007fa2 <HAL_ADCEx_InjectedConfigChannel+0x29a>
 8007f20:	2b01      	cmp	r3, #1
 8007f22:	d002      	beq.n	8007f2a <HAL_ADCEx_InjectedConfigChannel+0x222>
 8007f24:	2b02      	cmp	r3, #2
 8007f26:	d014      	beq.n	8007f52 <HAL_ADCEx_InjectedConfigChannel+0x24a>
 8007f28:	e03b      	b.n	8007fa2 <HAL_ADCEx_InjectedConfigChannel+0x29a>
 8007f2a:	687b      	ldr	r3, [r7, #4]
 8007f2c:	681b      	ldr	r3, [r3, #0]
 8007f2e:	695b      	ldr	r3, [r3, #20]
 8007f30:	687a      	ldr	r2, [r7, #4]
 8007f32:	6812      	ldr	r2, [r2, #0]
 8007f34:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8007f38:	f023 030f 	bic.w	r3, r3, #15
 8007f3c:	6153      	str	r3, [r2, #20]
 8007f3e:	687b      	ldr	r3, [r7, #4]
 8007f40:	681b      	ldr	r3, [r3, #0]
 8007f42:	6959      	ldr	r1, [r3, #20]
 8007f44:	683b      	ldr	r3, [r7, #0]
 8007f46:	68da      	ldr	r2, [r3, #12]
 8007f48:	687b      	ldr	r3, [r7, #4]
 8007f4a:	681b      	ldr	r3, [r3, #0]
 8007f4c:	430a      	orrs	r2, r1
 8007f4e:	615a      	str	r2, [r3, #20]
 8007f50:	e03b      	b.n	8007fca <HAL_ADCEx_InjectedConfigChannel+0x2c2>
 8007f52:	687b      	ldr	r3, [r7, #4]
 8007f54:	681b      	ldr	r3, [r3, #0]
 8007f56:	699b      	ldr	r3, [r3, #24]
 8007f58:	687a      	ldr	r2, [r7, #4]
 8007f5a:	6812      	ldr	r2, [r2, #0]
 8007f5c:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8007f60:	f023 030f 	bic.w	r3, r3, #15
 8007f64:	6193      	str	r3, [r2, #24]
 8007f66:	687b      	ldr	r3, [r7, #4]
 8007f68:	681b      	ldr	r3, [r3, #0]
 8007f6a:	6999      	ldr	r1, [r3, #24]
 8007f6c:	683b      	ldr	r3, [r7, #0]
 8007f6e:	68da      	ldr	r2, [r3, #12]
 8007f70:	687b      	ldr	r3, [r7, #4]
 8007f72:	681b      	ldr	r3, [r3, #0]
 8007f74:	430a      	orrs	r2, r1
 8007f76:	619a      	str	r2, [r3, #24]
 8007f78:	e027      	b.n	8007fca <HAL_ADCEx_InjectedConfigChannel+0x2c2>
 8007f7a:	687b      	ldr	r3, [r7, #4]
 8007f7c:	681b      	ldr	r3, [r3, #0]
 8007f7e:	69db      	ldr	r3, [r3, #28]
 8007f80:	687a      	ldr	r2, [r7, #4]
 8007f82:	6812      	ldr	r2, [r2, #0]
 8007f84:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8007f88:	f023 030f 	bic.w	r3, r3, #15
 8007f8c:	61d3      	str	r3, [r2, #28]
 8007f8e:	687b      	ldr	r3, [r7, #4]
 8007f90:	681b      	ldr	r3, [r3, #0]
 8007f92:	69d9      	ldr	r1, [r3, #28]
 8007f94:	683b      	ldr	r3, [r7, #0]
 8007f96:	68da      	ldr	r2, [r3, #12]
 8007f98:	687b      	ldr	r3, [r7, #4]
 8007f9a:	681b      	ldr	r3, [r3, #0]
 8007f9c:	430a      	orrs	r2, r1
 8007f9e:	61da      	str	r2, [r3, #28]
 8007fa0:	e013      	b.n	8007fca <HAL_ADCEx_InjectedConfigChannel+0x2c2>
 8007fa2:	687b      	ldr	r3, [r7, #4]
 8007fa4:	681b      	ldr	r3, [r3, #0]
 8007fa6:	6a1b      	ldr	r3, [r3, #32]
 8007fa8:	687a      	ldr	r2, [r7, #4]
 8007faa:	6812      	ldr	r2, [r2, #0]
 8007fac:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8007fb0:	f023 030f 	bic.w	r3, r3, #15
 8007fb4:	6213      	str	r3, [r2, #32]
 8007fb6:	687b      	ldr	r3, [r7, #4]
 8007fb8:	681b      	ldr	r3, [r3, #0]
 8007fba:	6a19      	ldr	r1, [r3, #32]
 8007fbc:	683b      	ldr	r3, [r7, #0]
 8007fbe:	68da      	ldr	r2, [r3, #12]
 8007fc0:	687b      	ldr	r3, [r7, #4]
 8007fc2:	681b      	ldr	r3, [r3, #0]
 8007fc4:	430a      	orrs	r2, r1
 8007fc6:	621a      	str	r2, [r3, #32]
 8007fc8:	bf00      	nop
 8007fca:	4b19      	ldr	r3, [pc, #100]	; (8008030 <HAL_ADCEx_InjectedConfigChannel+0x328>)
 8007fcc:	60fb      	str	r3, [r7, #12]
 8007fce:	687b      	ldr	r3, [r7, #4]
 8007fd0:	681b      	ldr	r3, [r3, #0]
 8007fd2:	4a18      	ldr	r2, [pc, #96]	; (8008034 <HAL_ADCEx_InjectedConfigChannel+0x32c>)
 8007fd4:	4293      	cmp	r3, r2
 8007fd6:	d109      	bne.n	8007fec <HAL_ADCEx_InjectedConfigChannel+0x2e4>
 8007fd8:	683b      	ldr	r3, [r7, #0]
 8007fda:	681b      	ldr	r3, [r3, #0]
 8007fdc:	2b12      	cmp	r3, #18
 8007fde:	d105      	bne.n	8007fec <HAL_ADCEx_InjectedConfigChannel+0x2e4>
 8007fe0:	68fb      	ldr	r3, [r7, #12]
 8007fe2:	685b      	ldr	r3, [r3, #4]
 8007fe4:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8007fe8:	68fb      	ldr	r3, [r7, #12]
 8007fea:	605a      	str	r2, [r3, #4]
 8007fec:	687b      	ldr	r3, [r7, #4]
 8007fee:	681b      	ldr	r3, [r3, #0]
 8007ff0:	4a10      	ldr	r2, [pc, #64]	; (8008034 <HAL_ADCEx_InjectedConfigChannel+0x32c>)
 8007ff2:	4293      	cmp	r3, r2
 8007ff4:	d10e      	bne.n	8008014 <HAL_ADCEx_InjectedConfigChannel+0x30c>
 8007ff6:	683b      	ldr	r3, [r7, #0]
 8007ff8:	681b      	ldr	r3, [r3, #0]
 8007ffa:	4a0f      	ldr	r2, [pc, #60]	; (8008038 <HAL_ADCEx_InjectedConfigChannel+0x330>)
 8007ffc:	4293      	cmp	r3, r2
 8007ffe:	d003      	beq.n	8008008 <HAL_ADCEx_InjectedConfigChannel+0x300>
 8008000:	683b      	ldr	r3, [r7, #0]
 8008002:	681b      	ldr	r3, [r3, #0]
 8008004:	2b11      	cmp	r3, #17
 8008006:	d105      	bne.n	8008014 <HAL_ADCEx_InjectedConfigChannel+0x30c>
 8008008:	68fb      	ldr	r3, [r7, #12]
 800800a:	685b      	ldr	r3, [r3, #4]
 800800c:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8008010:	68fb      	ldr	r3, [r7, #12]
 8008012:	605a      	str	r2, [r3, #4]
 8008014:	687b      	ldr	r3, [r7, #4]
 8008016:	2200      	movs	r2, #0
 8008018:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800801c:	2300      	movs	r3, #0
 800801e:	4618      	mov	r0, r3
 8008020:	3714      	adds	r7, #20
 8008022:	46bd      	mov	sp, r7
 8008024:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008028:	4770      	bx	lr
 800802a:	bf00      	nop
 800802c:	000f0001 	.word	0x000f0001
 8008030:	40012300 	.word	0x40012300
 8008034:	40012000 	.word	0x40012000
 8008038:	10000012 	.word	0x10000012

0800803c <__NVIC_SetPriorityGrouping>:
 800803c:	b480      	push	{r7}
 800803e:	b085      	sub	sp, #20
 8008040:	af00      	add	r7, sp, #0
 8008042:	6078      	str	r0, [r7, #4]
 8008044:	687b      	ldr	r3, [r7, #4]
 8008046:	f003 0307 	and.w	r3, r3, #7
 800804a:	60fb      	str	r3, [r7, #12]
 800804c:	4b0c      	ldr	r3, [pc, #48]	; (8008080 <__NVIC_SetPriorityGrouping+0x44>)
 800804e:	68db      	ldr	r3, [r3, #12]
 8008050:	60bb      	str	r3, [r7, #8]
 8008052:	68ba      	ldr	r2, [r7, #8]
 8008054:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8008058:	4013      	ands	r3, r2
 800805a:	60bb      	str	r3, [r7, #8]
 800805c:	68fb      	ldr	r3, [r7, #12]
 800805e:	021a      	lsls	r2, r3, #8
 8008060:	68bb      	ldr	r3, [r7, #8]
 8008062:	4313      	orrs	r3, r2
 8008064:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8008068:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800806c:	60bb      	str	r3, [r7, #8]
 800806e:	4a04      	ldr	r2, [pc, #16]	; (8008080 <__NVIC_SetPriorityGrouping+0x44>)
 8008070:	68bb      	ldr	r3, [r7, #8]
 8008072:	60d3      	str	r3, [r2, #12]
 8008074:	bf00      	nop
 8008076:	3714      	adds	r7, #20
 8008078:	46bd      	mov	sp, r7
 800807a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800807e:	4770      	bx	lr
 8008080:	e000ed00 	.word	0xe000ed00

08008084 <__NVIC_GetPriorityGrouping>:
 8008084:	b480      	push	{r7}
 8008086:	af00      	add	r7, sp, #0
 8008088:	4b04      	ldr	r3, [pc, #16]	; (800809c <__NVIC_GetPriorityGrouping+0x18>)
 800808a:	68db      	ldr	r3, [r3, #12]
 800808c:	0a1b      	lsrs	r3, r3, #8
 800808e:	f003 0307 	and.w	r3, r3, #7
 8008092:	4618      	mov	r0, r3
 8008094:	46bd      	mov	sp, r7
 8008096:	f85d 7b04 	ldr.w	r7, [sp], #4
 800809a:	4770      	bx	lr
 800809c:	e000ed00 	.word	0xe000ed00

080080a0 <__NVIC_EnableIRQ>:
 80080a0:	b480      	push	{r7}
 80080a2:	b083      	sub	sp, #12
 80080a4:	af00      	add	r7, sp, #0
 80080a6:	4603      	mov	r3, r0
 80080a8:	71fb      	strb	r3, [r7, #7]
 80080aa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80080ae:	2b00      	cmp	r3, #0
 80080b0:	db0b      	blt.n	80080ca <__NVIC_EnableIRQ+0x2a>
 80080b2:	79fb      	ldrb	r3, [r7, #7]
 80080b4:	f003 021f 	and.w	r2, r3, #31
 80080b8:	4907      	ldr	r1, [pc, #28]	; (80080d8 <__NVIC_EnableIRQ+0x38>)
 80080ba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80080be:	095b      	lsrs	r3, r3, #5
 80080c0:	2001      	movs	r0, #1
 80080c2:	fa00 f202 	lsl.w	r2, r0, r2
 80080c6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80080ca:	bf00      	nop
 80080cc:	370c      	adds	r7, #12
 80080ce:	46bd      	mov	sp, r7
 80080d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080d4:	4770      	bx	lr
 80080d6:	bf00      	nop
 80080d8:	e000e100 	.word	0xe000e100

080080dc <__NVIC_DisableIRQ>:
 80080dc:	b480      	push	{r7}
 80080de:	b083      	sub	sp, #12
 80080e0:	af00      	add	r7, sp, #0
 80080e2:	4603      	mov	r3, r0
 80080e4:	71fb      	strb	r3, [r7, #7]
 80080e6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80080ea:	2b00      	cmp	r3, #0
 80080ec:	db12      	blt.n	8008114 <__NVIC_DisableIRQ+0x38>
 80080ee:	79fb      	ldrb	r3, [r7, #7]
 80080f0:	f003 021f 	and.w	r2, r3, #31
 80080f4:	490a      	ldr	r1, [pc, #40]	; (8008120 <__NVIC_DisableIRQ+0x44>)
 80080f6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80080fa:	095b      	lsrs	r3, r3, #5
 80080fc:	2001      	movs	r0, #1
 80080fe:	fa00 f202 	lsl.w	r2, r0, r2
 8008102:	3320      	adds	r3, #32
 8008104:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8008108:	f3bf 8f4f 	dsb	sy
 800810c:	bf00      	nop
 800810e:	f3bf 8f6f 	isb	sy
 8008112:	bf00      	nop
 8008114:	bf00      	nop
 8008116:	370c      	adds	r7, #12
 8008118:	46bd      	mov	sp, r7
 800811a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800811e:	4770      	bx	lr
 8008120:	e000e100 	.word	0xe000e100

08008124 <__NVIC_SetPriority>:
 8008124:	b480      	push	{r7}
 8008126:	b083      	sub	sp, #12
 8008128:	af00      	add	r7, sp, #0
 800812a:	4603      	mov	r3, r0
 800812c:	6039      	str	r1, [r7, #0]
 800812e:	71fb      	strb	r3, [r7, #7]
 8008130:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008134:	2b00      	cmp	r3, #0
 8008136:	db0a      	blt.n	800814e <__NVIC_SetPriority+0x2a>
 8008138:	683b      	ldr	r3, [r7, #0]
 800813a:	b2da      	uxtb	r2, r3
 800813c:	490c      	ldr	r1, [pc, #48]	; (8008170 <__NVIC_SetPriority+0x4c>)
 800813e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008142:	0112      	lsls	r2, r2, #4
 8008144:	b2d2      	uxtb	r2, r2
 8008146:	440b      	add	r3, r1
 8008148:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 800814c:	e00a      	b.n	8008164 <__NVIC_SetPriority+0x40>
 800814e:	683b      	ldr	r3, [r7, #0]
 8008150:	b2da      	uxtb	r2, r3
 8008152:	4908      	ldr	r1, [pc, #32]	; (8008174 <__NVIC_SetPriority+0x50>)
 8008154:	79fb      	ldrb	r3, [r7, #7]
 8008156:	f003 030f 	and.w	r3, r3, #15
 800815a:	3b04      	subs	r3, #4
 800815c:	0112      	lsls	r2, r2, #4
 800815e:	b2d2      	uxtb	r2, r2
 8008160:	440b      	add	r3, r1
 8008162:	761a      	strb	r2, [r3, #24]
 8008164:	bf00      	nop
 8008166:	370c      	adds	r7, #12
 8008168:	46bd      	mov	sp, r7
 800816a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800816e:	4770      	bx	lr
 8008170:	e000e100 	.word	0xe000e100
 8008174:	e000ed00 	.word	0xe000ed00

08008178 <NVIC_EncodePriority>:
 8008178:	b480      	push	{r7}
 800817a:	b089      	sub	sp, #36	; 0x24
 800817c:	af00      	add	r7, sp, #0
 800817e:	60f8      	str	r0, [r7, #12]
 8008180:	60b9      	str	r1, [r7, #8]
 8008182:	607a      	str	r2, [r7, #4]
 8008184:	68fb      	ldr	r3, [r7, #12]
 8008186:	f003 0307 	and.w	r3, r3, #7
 800818a:	61fb      	str	r3, [r7, #28]
 800818c:	69fb      	ldr	r3, [r7, #28]
 800818e:	f1c3 0307 	rsb	r3, r3, #7
 8008192:	2b04      	cmp	r3, #4
 8008194:	bf28      	it	cs
 8008196:	2304      	movcs	r3, #4
 8008198:	61bb      	str	r3, [r7, #24]
 800819a:	69fb      	ldr	r3, [r7, #28]
 800819c:	3304      	adds	r3, #4
 800819e:	2b06      	cmp	r3, #6
 80081a0:	d902      	bls.n	80081a8 <NVIC_EncodePriority+0x30>
 80081a2:	69fb      	ldr	r3, [r7, #28]
 80081a4:	3b03      	subs	r3, #3
 80081a6:	e000      	b.n	80081aa <NVIC_EncodePriority+0x32>
 80081a8:	2300      	movs	r3, #0
 80081aa:	617b      	str	r3, [r7, #20]
 80081ac:	f04f 32ff 	mov.w	r2, #4294967295
 80081b0:	69bb      	ldr	r3, [r7, #24]
 80081b2:	fa02 f303 	lsl.w	r3, r2, r3
 80081b6:	43da      	mvns	r2, r3
 80081b8:	68bb      	ldr	r3, [r7, #8]
 80081ba:	401a      	ands	r2, r3
 80081bc:	697b      	ldr	r3, [r7, #20]
 80081be:	409a      	lsls	r2, r3
 80081c0:	f04f 31ff 	mov.w	r1, #4294967295
 80081c4:	697b      	ldr	r3, [r7, #20]
 80081c6:	fa01 f303 	lsl.w	r3, r1, r3
 80081ca:	43d9      	mvns	r1, r3
 80081cc:	687b      	ldr	r3, [r7, #4]
 80081ce:	400b      	ands	r3, r1
 80081d0:	4313      	orrs	r3, r2
 80081d2:	4618      	mov	r0, r3
 80081d4:	3724      	adds	r7, #36	; 0x24
 80081d6:	46bd      	mov	sp, r7
 80081d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081dc:	4770      	bx	lr
	...

080081e0 <SysTick_Config>:
 80081e0:	b580      	push	{r7, lr}
 80081e2:	b082      	sub	sp, #8
 80081e4:	af00      	add	r7, sp, #0
 80081e6:	6078      	str	r0, [r7, #4]
 80081e8:	687b      	ldr	r3, [r7, #4]
 80081ea:	3b01      	subs	r3, #1
 80081ec:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80081f0:	d301      	bcc.n	80081f6 <SysTick_Config+0x16>
 80081f2:	2301      	movs	r3, #1
 80081f4:	e00f      	b.n	8008216 <SysTick_Config+0x36>
 80081f6:	4a0a      	ldr	r2, [pc, #40]	; (8008220 <SysTick_Config+0x40>)
 80081f8:	687b      	ldr	r3, [r7, #4]
 80081fa:	3b01      	subs	r3, #1
 80081fc:	6053      	str	r3, [r2, #4]
 80081fe:	210f      	movs	r1, #15
 8008200:	f04f 30ff 	mov.w	r0, #4294967295
 8008204:	f7ff ff8e 	bl	8008124 <__NVIC_SetPriority>
 8008208:	4b05      	ldr	r3, [pc, #20]	; (8008220 <SysTick_Config+0x40>)
 800820a:	2200      	movs	r2, #0
 800820c:	609a      	str	r2, [r3, #8]
 800820e:	4b04      	ldr	r3, [pc, #16]	; (8008220 <SysTick_Config+0x40>)
 8008210:	2207      	movs	r2, #7
 8008212:	601a      	str	r2, [r3, #0]
 8008214:	2300      	movs	r3, #0
 8008216:	4618      	mov	r0, r3
 8008218:	3708      	adds	r7, #8
 800821a:	46bd      	mov	sp, r7
 800821c:	bd80      	pop	{r7, pc}
 800821e:	bf00      	nop
 8008220:	e000e010 	.word	0xe000e010

08008224 <HAL_NVIC_SetPriorityGrouping>:
 8008224:	b580      	push	{r7, lr}
 8008226:	b082      	sub	sp, #8
 8008228:	af00      	add	r7, sp, #0
 800822a:	6078      	str	r0, [r7, #4]
 800822c:	6878      	ldr	r0, [r7, #4]
 800822e:	f7ff ff05 	bl	800803c <__NVIC_SetPriorityGrouping>
 8008232:	bf00      	nop
 8008234:	3708      	adds	r7, #8
 8008236:	46bd      	mov	sp, r7
 8008238:	bd80      	pop	{r7, pc}

0800823a <HAL_NVIC_SetPriority>:
 800823a:	b580      	push	{r7, lr}
 800823c:	b086      	sub	sp, #24
 800823e:	af00      	add	r7, sp, #0
 8008240:	4603      	mov	r3, r0
 8008242:	60b9      	str	r1, [r7, #8]
 8008244:	607a      	str	r2, [r7, #4]
 8008246:	73fb      	strb	r3, [r7, #15]
 8008248:	2300      	movs	r3, #0
 800824a:	617b      	str	r3, [r7, #20]
 800824c:	f7ff ff1a 	bl	8008084 <__NVIC_GetPriorityGrouping>
 8008250:	6178      	str	r0, [r7, #20]
 8008252:	687a      	ldr	r2, [r7, #4]
 8008254:	68b9      	ldr	r1, [r7, #8]
 8008256:	6978      	ldr	r0, [r7, #20]
 8008258:	f7ff ff8e 	bl	8008178 <NVIC_EncodePriority>
 800825c:	4602      	mov	r2, r0
 800825e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8008262:	4611      	mov	r1, r2
 8008264:	4618      	mov	r0, r3
 8008266:	f7ff ff5d 	bl	8008124 <__NVIC_SetPriority>
 800826a:	bf00      	nop
 800826c:	3718      	adds	r7, #24
 800826e:	46bd      	mov	sp, r7
 8008270:	bd80      	pop	{r7, pc}

08008272 <HAL_NVIC_EnableIRQ>:
 8008272:	b580      	push	{r7, lr}
 8008274:	b082      	sub	sp, #8
 8008276:	af00      	add	r7, sp, #0
 8008278:	4603      	mov	r3, r0
 800827a:	71fb      	strb	r3, [r7, #7]
 800827c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008280:	4618      	mov	r0, r3
 8008282:	f7ff ff0d 	bl	80080a0 <__NVIC_EnableIRQ>
 8008286:	bf00      	nop
 8008288:	3708      	adds	r7, #8
 800828a:	46bd      	mov	sp, r7
 800828c:	bd80      	pop	{r7, pc}

0800828e <HAL_NVIC_DisableIRQ>:
 800828e:	b580      	push	{r7, lr}
 8008290:	b082      	sub	sp, #8
 8008292:	af00      	add	r7, sp, #0
 8008294:	4603      	mov	r3, r0
 8008296:	71fb      	strb	r3, [r7, #7]
 8008298:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800829c:	4618      	mov	r0, r3
 800829e:	f7ff ff1d 	bl	80080dc <__NVIC_DisableIRQ>
 80082a2:	bf00      	nop
 80082a4:	3708      	adds	r7, #8
 80082a6:	46bd      	mov	sp, r7
 80082a8:	bd80      	pop	{r7, pc}

080082aa <HAL_SYSTICK_Config>:
 80082aa:	b580      	push	{r7, lr}
 80082ac:	b082      	sub	sp, #8
 80082ae:	af00      	add	r7, sp, #0
 80082b0:	6078      	str	r0, [r7, #4]
 80082b2:	6878      	ldr	r0, [r7, #4]
 80082b4:	f7ff ff94 	bl	80081e0 <SysTick_Config>
 80082b8:	4603      	mov	r3, r0
 80082ba:	4618      	mov	r0, r3
 80082bc:	3708      	adds	r7, #8
 80082be:	46bd      	mov	sp, r7
 80082c0:	bd80      	pop	{r7, pc}
	...

080082c4 <HAL_DMA_Init>:
 80082c4:	b580      	push	{r7, lr}
 80082c6:	b086      	sub	sp, #24
 80082c8:	af00      	add	r7, sp, #0
 80082ca:	6078      	str	r0, [r7, #4]
 80082cc:	2300      	movs	r3, #0
 80082ce:	617b      	str	r3, [r7, #20]
 80082d0:	f7ff f90e 	bl	80074f0 <HAL_GetTick>
 80082d4:	6138      	str	r0, [r7, #16]
 80082d6:	687b      	ldr	r3, [r7, #4]
 80082d8:	2b00      	cmp	r3, #0
 80082da:	d101      	bne.n	80082e0 <HAL_DMA_Init+0x1c>
 80082dc:	2301      	movs	r3, #1
 80082de:	e099      	b.n	8008414 <HAL_DMA_Init+0x150>
 80082e0:	687b      	ldr	r3, [r7, #4]
 80082e2:	2202      	movs	r2, #2
 80082e4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80082e8:	687b      	ldr	r3, [r7, #4]
 80082ea:	2200      	movs	r2, #0
 80082ec:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80082f0:	687b      	ldr	r3, [r7, #4]
 80082f2:	681b      	ldr	r3, [r3, #0]
 80082f4:	681a      	ldr	r2, [r3, #0]
 80082f6:	687b      	ldr	r3, [r7, #4]
 80082f8:	681b      	ldr	r3, [r3, #0]
 80082fa:	f022 0201 	bic.w	r2, r2, #1
 80082fe:	601a      	str	r2, [r3, #0]
 8008300:	e00f      	b.n	8008322 <HAL_DMA_Init+0x5e>
 8008302:	f7ff f8f5 	bl	80074f0 <HAL_GetTick>
 8008306:	4602      	mov	r2, r0
 8008308:	693b      	ldr	r3, [r7, #16]
 800830a:	1ad3      	subs	r3, r2, r3
 800830c:	2b05      	cmp	r3, #5
 800830e:	d908      	bls.n	8008322 <HAL_DMA_Init+0x5e>
 8008310:	687b      	ldr	r3, [r7, #4]
 8008312:	2220      	movs	r2, #32
 8008314:	655a      	str	r2, [r3, #84]	; 0x54
 8008316:	687b      	ldr	r3, [r7, #4]
 8008318:	2203      	movs	r2, #3
 800831a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800831e:	2303      	movs	r3, #3
 8008320:	e078      	b.n	8008414 <HAL_DMA_Init+0x150>
 8008322:	687b      	ldr	r3, [r7, #4]
 8008324:	681b      	ldr	r3, [r3, #0]
 8008326:	681b      	ldr	r3, [r3, #0]
 8008328:	f003 0301 	and.w	r3, r3, #1
 800832c:	2b00      	cmp	r3, #0
 800832e:	d1e8      	bne.n	8008302 <HAL_DMA_Init+0x3e>
 8008330:	687b      	ldr	r3, [r7, #4]
 8008332:	681b      	ldr	r3, [r3, #0]
 8008334:	681b      	ldr	r3, [r3, #0]
 8008336:	617b      	str	r3, [r7, #20]
 8008338:	697a      	ldr	r2, [r7, #20]
 800833a:	4b38      	ldr	r3, [pc, #224]	; (800841c <HAL_DMA_Init+0x158>)
 800833c:	4013      	ands	r3, r2
 800833e:	617b      	str	r3, [r7, #20]
 8008340:	687b      	ldr	r3, [r7, #4]
 8008342:	685a      	ldr	r2, [r3, #4]
 8008344:	687b      	ldr	r3, [r7, #4]
 8008346:	689b      	ldr	r3, [r3, #8]
 8008348:	431a      	orrs	r2, r3
 800834a:	687b      	ldr	r3, [r7, #4]
 800834c:	68db      	ldr	r3, [r3, #12]
 800834e:	431a      	orrs	r2, r3
 8008350:	687b      	ldr	r3, [r7, #4]
 8008352:	691b      	ldr	r3, [r3, #16]
 8008354:	431a      	orrs	r2, r3
 8008356:	687b      	ldr	r3, [r7, #4]
 8008358:	695b      	ldr	r3, [r3, #20]
 800835a:	431a      	orrs	r2, r3
 800835c:	687b      	ldr	r3, [r7, #4]
 800835e:	699b      	ldr	r3, [r3, #24]
 8008360:	431a      	orrs	r2, r3
 8008362:	687b      	ldr	r3, [r7, #4]
 8008364:	69db      	ldr	r3, [r3, #28]
 8008366:	431a      	orrs	r2, r3
 8008368:	687b      	ldr	r3, [r7, #4]
 800836a:	6a1b      	ldr	r3, [r3, #32]
 800836c:	4313      	orrs	r3, r2
 800836e:	697a      	ldr	r2, [r7, #20]
 8008370:	4313      	orrs	r3, r2
 8008372:	617b      	str	r3, [r7, #20]
 8008374:	687b      	ldr	r3, [r7, #4]
 8008376:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008378:	2b04      	cmp	r3, #4
 800837a:	d107      	bne.n	800838c <HAL_DMA_Init+0xc8>
 800837c:	687b      	ldr	r3, [r7, #4]
 800837e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008380:	687b      	ldr	r3, [r7, #4]
 8008382:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008384:	4313      	orrs	r3, r2
 8008386:	697a      	ldr	r2, [r7, #20]
 8008388:	4313      	orrs	r3, r2
 800838a:	617b      	str	r3, [r7, #20]
 800838c:	687b      	ldr	r3, [r7, #4]
 800838e:	681b      	ldr	r3, [r3, #0]
 8008390:	697a      	ldr	r2, [r7, #20]
 8008392:	601a      	str	r2, [r3, #0]
 8008394:	687b      	ldr	r3, [r7, #4]
 8008396:	681b      	ldr	r3, [r3, #0]
 8008398:	695b      	ldr	r3, [r3, #20]
 800839a:	617b      	str	r3, [r7, #20]
 800839c:	697b      	ldr	r3, [r7, #20]
 800839e:	f023 0307 	bic.w	r3, r3, #7
 80083a2:	617b      	str	r3, [r7, #20]
 80083a4:	687b      	ldr	r3, [r7, #4]
 80083a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80083a8:	697a      	ldr	r2, [r7, #20]
 80083aa:	4313      	orrs	r3, r2
 80083ac:	617b      	str	r3, [r7, #20]
 80083ae:	687b      	ldr	r3, [r7, #4]
 80083b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80083b2:	2b04      	cmp	r3, #4
 80083b4:	d117      	bne.n	80083e6 <HAL_DMA_Init+0x122>
 80083b6:	687b      	ldr	r3, [r7, #4]
 80083b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80083ba:	697a      	ldr	r2, [r7, #20]
 80083bc:	4313      	orrs	r3, r2
 80083be:	617b      	str	r3, [r7, #20]
 80083c0:	687b      	ldr	r3, [r7, #4]
 80083c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80083c4:	2b00      	cmp	r3, #0
 80083c6:	d00e      	beq.n	80083e6 <HAL_DMA_Init+0x122>
 80083c8:	6878      	ldr	r0, [r7, #4]
 80083ca:	f000 fb01 	bl	80089d0 <DMA_CheckFifoParam>
 80083ce:	4603      	mov	r3, r0
 80083d0:	2b00      	cmp	r3, #0
 80083d2:	d008      	beq.n	80083e6 <HAL_DMA_Init+0x122>
 80083d4:	687b      	ldr	r3, [r7, #4]
 80083d6:	2240      	movs	r2, #64	; 0x40
 80083d8:	655a      	str	r2, [r3, #84]	; 0x54
 80083da:	687b      	ldr	r3, [r7, #4]
 80083dc:	2201      	movs	r2, #1
 80083de:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80083e2:	2301      	movs	r3, #1
 80083e4:	e016      	b.n	8008414 <HAL_DMA_Init+0x150>
 80083e6:	687b      	ldr	r3, [r7, #4]
 80083e8:	681b      	ldr	r3, [r3, #0]
 80083ea:	697a      	ldr	r2, [r7, #20]
 80083ec:	615a      	str	r2, [r3, #20]
 80083ee:	6878      	ldr	r0, [r7, #4]
 80083f0:	f000 fab8 	bl	8008964 <DMA_CalcBaseAndBitshift>
 80083f4:	4603      	mov	r3, r0
 80083f6:	60fb      	str	r3, [r7, #12]
 80083f8:	687b      	ldr	r3, [r7, #4]
 80083fa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80083fc:	223f      	movs	r2, #63	; 0x3f
 80083fe:	409a      	lsls	r2, r3
 8008400:	68fb      	ldr	r3, [r7, #12]
 8008402:	609a      	str	r2, [r3, #8]
 8008404:	687b      	ldr	r3, [r7, #4]
 8008406:	2200      	movs	r2, #0
 8008408:	655a      	str	r2, [r3, #84]	; 0x54
 800840a:	687b      	ldr	r3, [r7, #4]
 800840c:	2201      	movs	r2, #1
 800840e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008412:	2300      	movs	r3, #0
 8008414:	4618      	mov	r0, r3
 8008416:	3718      	adds	r7, #24
 8008418:	46bd      	mov	sp, r7
 800841a:	bd80      	pop	{r7, pc}
 800841c:	f010803f 	.word	0xf010803f

08008420 <HAL_DMA_Start_IT>:
 8008420:	b580      	push	{r7, lr}
 8008422:	b086      	sub	sp, #24
 8008424:	af00      	add	r7, sp, #0
 8008426:	60f8      	str	r0, [r7, #12]
 8008428:	60b9      	str	r1, [r7, #8]
 800842a:	607a      	str	r2, [r7, #4]
 800842c:	603b      	str	r3, [r7, #0]
 800842e:	2300      	movs	r3, #0
 8008430:	75fb      	strb	r3, [r7, #23]
 8008432:	68fb      	ldr	r3, [r7, #12]
 8008434:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008436:	613b      	str	r3, [r7, #16]
 8008438:	68fb      	ldr	r3, [r7, #12]
 800843a:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800843e:	2b01      	cmp	r3, #1
 8008440:	d101      	bne.n	8008446 <HAL_DMA_Start_IT+0x26>
 8008442:	2302      	movs	r3, #2
 8008444:	e040      	b.n	80084c8 <HAL_DMA_Start_IT+0xa8>
 8008446:	68fb      	ldr	r3, [r7, #12]
 8008448:	2201      	movs	r2, #1
 800844a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800844e:	68fb      	ldr	r3, [r7, #12]
 8008450:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8008454:	b2db      	uxtb	r3, r3
 8008456:	2b01      	cmp	r3, #1
 8008458:	d12f      	bne.n	80084ba <HAL_DMA_Start_IT+0x9a>
 800845a:	68fb      	ldr	r3, [r7, #12]
 800845c:	2202      	movs	r2, #2
 800845e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008462:	68fb      	ldr	r3, [r7, #12]
 8008464:	2200      	movs	r2, #0
 8008466:	655a      	str	r2, [r3, #84]	; 0x54
 8008468:	683b      	ldr	r3, [r7, #0]
 800846a:	687a      	ldr	r2, [r7, #4]
 800846c:	68b9      	ldr	r1, [r7, #8]
 800846e:	68f8      	ldr	r0, [r7, #12]
 8008470:	f000 fa4a 	bl	8008908 <DMA_SetConfig>
 8008474:	68fb      	ldr	r3, [r7, #12]
 8008476:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008478:	223f      	movs	r2, #63	; 0x3f
 800847a:	409a      	lsls	r2, r3
 800847c:	693b      	ldr	r3, [r7, #16]
 800847e:	609a      	str	r2, [r3, #8]
 8008480:	68fb      	ldr	r3, [r7, #12]
 8008482:	681b      	ldr	r3, [r3, #0]
 8008484:	681a      	ldr	r2, [r3, #0]
 8008486:	68fb      	ldr	r3, [r7, #12]
 8008488:	681b      	ldr	r3, [r3, #0]
 800848a:	f042 0216 	orr.w	r2, r2, #22
 800848e:	601a      	str	r2, [r3, #0]
 8008490:	68fb      	ldr	r3, [r7, #12]
 8008492:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008494:	2b00      	cmp	r3, #0
 8008496:	d007      	beq.n	80084a8 <HAL_DMA_Start_IT+0x88>
 8008498:	68fb      	ldr	r3, [r7, #12]
 800849a:	681b      	ldr	r3, [r3, #0]
 800849c:	681a      	ldr	r2, [r3, #0]
 800849e:	68fb      	ldr	r3, [r7, #12]
 80084a0:	681b      	ldr	r3, [r3, #0]
 80084a2:	f042 0208 	orr.w	r2, r2, #8
 80084a6:	601a      	str	r2, [r3, #0]
 80084a8:	68fb      	ldr	r3, [r7, #12]
 80084aa:	681b      	ldr	r3, [r3, #0]
 80084ac:	681a      	ldr	r2, [r3, #0]
 80084ae:	68fb      	ldr	r3, [r7, #12]
 80084b0:	681b      	ldr	r3, [r3, #0]
 80084b2:	f042 0201 	orr.w	r2, r2, #1
 80084b6:	601a      	str	r2, [r3, #0]
 80084b8:	e005      	b.n	80084c6 <HAL_DMA_Start_IT+0xa6>
 80084ba:	68fb      	ldr	r3, [r7, #12]
 80084bc:	2200      	movs	r2, #0
 80084be:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80084c2:	2302      	movs	r3, #2
 80084c4:	75fb      	strb	r3, [r7, #23]
 80084c6:	7dfb      	ldrb	r3, [r7, #23]
 80084c8:	4618      	mov	r0, r3
 80084ca:	3718      	adds	r7, #24
 80084cc:	46bd      	mov	sp, r7
 80084ce:	bd80      	pop	{r7, pc}

080084d0 <HAL_DMA_Abort>:
 80084d0:	b580      	push	{r7, lr}
 80084d2:	b084      	sub	sp, #16
 80084d4:	af00      	add	r7, sp, #0
 80084d6:	6078      	str	r0, [r7, #4]
 80084d8:	687b      	ldr	r3, [r7, #4]
 80084da:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80084dc:	60fb      	str	r3, [r7, #12]
 80084de:	f7ff f807 	bl	80074f0 <HAL_GetTick>
 80084e2:	60b8      	str	r0, [r7, #8]
 80084e4:	687b      	ldr	r3, [r7, #4]
 80084e6:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80084ea:	b2db      	uxtb	r3, r3
 80084ec:	2b02      	cmp	r3, #2
 80084ee:	d008      	beq.n	8008502 <HAL_DMA_Abort+0x32>
 80084f0:	687b      	ldr	r3, [r7, #4]
 80084f2:	2280      	movs	r2, #128	; 0x80
 80084f4:	655a      	str	r2, [r3, #84]	; 0x54
 80084f6:	687b      	ldr	r3, [r7, #4]
 80084f8:	2200      	movs	r2, #0
 80084fa:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80084fe:	2301      	movs	r3, #1
 8008500:	e052      	b.n	80085a8 <HAL_DMA_Abort+0xd8>
 8008502:	687b      	ldr	r3, [r7, #4]
 8008504:	681b      	ldr	r3, [r3, #0]
 8008506:	681a      	ldr	r2, [r3, #0]
 8008508:	687b      	ldr	r3, [r7, #4]
 800850a:	681b      	ldr	r3, [r3, #0]
 800850c:	f022 0216 	bic.w	r2, r2, #22
 8008510:	601a      	str	r2, [r3, #0]
 8008512:	687b      	ldr	r3, [r7, #4]
 8008514:	681b      	ldr	r3, [r3, #0]
 8008516:	695a      	ldr	r2, [r3, #20]
 8008518:	687b      	ldr	r3, [r7, #4]
 800851a:	681b      	ldr	r3, [r3, #0]
 800851c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8008520:	615a      	str	r2, [r3, #20]
 8008522:	687b      	ldr	r3, [r7, #4]
 8008524:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008526:	2b00      	cmp	r3, #0
 8008528:	d103      	bne.n	8008532 <HAL_DMA_Abort+0x62>
 800852a:	687b      	ldr	r3, [r7, #4]
 800852c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800852e:	2b00      	cmp	r3, #0
 8008530:	d007      	beq.n	8008542 <HAL_DMA_Abort+0x72>
 8008532:	687b      	ldr	r3, [r7, #4]
 8008534:	681b      	ldr	r3, [r3, #0]
 8008536:	681a      	ldr	r2, [r3, #0]
 8008538:	687b      	ldr	r3, [r7, #4]
 800853a:	681b      	ldr	r3, [r3, #0]
 800853c:	f022 0208 	bic.w	r2, r2, #8
 8008540:	601a      	str	r2, [r3, #0]
 8008542:	687b      	ldr	r3, [r7, #4]
 8008544:	681b      	ldr	r3, [r3, #0]
 8008546:	681a      	ldr	r2, [r3, #0]
 8008548:	687b      	ldr	r3, [r7, #4]
 800854a:	681b      	ldr	r3, [r3, #0]
 800854c:	f022 0201 	bic.w	r2, r2, #1
 8008550:	601a      	str	r2, [r3, #0]
 8008552:	e013      	b.n	800857c <HAL_DMA_Abort+0xac>
 8008554:	f7fe ffcc 	bl	80074f0 <HAL_GetTick>
 8008558:	4602      	mov	r2, r0
 800855a:	68bb      	ldr	r3, [r7, #8]
 800855c:	1ad3      	subs	r3, r2, r3
 800855e:	2b05      	cmp	r3, #5
 8008560:	d90c      	bls.n	800857c <HAL_DMA_Abort+0xac>
 8008562:	687b      	ldr	r3, [r7, #4]
 8008564:	2220      	movs	r2, #32
 8008566:	655a      	str	r2, [r3, #84]	; 0x54
 8008568:	687b      	ldr	r3, [r7, #4]
 800856a:	2203      	movs	r2, #3
 800856c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008570:	687b      	ldr	r3, [r7, #4]
 8008572:	2200      	movs	r2, #0
 8008574:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008578:	2303      	movs	r3, #3
 800857a:	e015      	b.n	80085a8 <HAL_DMA_Abort+0xd8>
 800857c:	687b      	ldr	r3, [r7, #4]
 800857e:	681b      	ldr	r3, [r3, #0]
 8008580:	681b      	ldr	r3, [r3, #0]
 8008582:	f003 0301 	and.w	r3, r3, #1
 8008586:	2b00      	cmp	r3, #0
 8008588:	d1e4      	bne.n	8008554 <HAL_DMA_Abort+0x84>
 800858a:	687b      	ldr	r3, [r7, #4]
 800858c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800858e:	223f      	movs	r2, #63	; 0x3f
 8008590:	409a      	lsls	r2, r3
 8008592:	68fb      	ldr	r3, [r7, #12]
 8008594:	609a      	str	r2, [r3, #8]
 8008596:	687b      	ldr	r3, [r7, #4]
 8008598:	2201      	movs	r2, #1
 800859a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800859e:	687b      	ldr	r3, [r7, #4]
 80085a0:	2200      	movs	r2, #0
 80085a2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80085a6:	2300      	movs	r3, #0
 80085a8:	4618      	mov	r0, r3
 80085aa:	3710      	adds	r7, #16
 80085ac:	46bd      	mov	sp, r7
 80085ae:	bd80      	pop	{r7, pc}

080085b0 <HAL_DMA_Abort_IT>:
 80085b0:	b480      	push	{r7}
 80085b2:	b083      	sub	sp, #12
 80085b4:	af00      	add	r7, sp, #0
 80085b6:	6078      	str	r0, [r7, #4]
 80085b8:	687b      	ldr	r3, [r7, #4]
 80085ba:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80085be:	b2db      	uxtb	r3, r3
 80085c0:	2b02      	cmp	r3, #2
 80085c2:	d004      	beq.n	80085ce <HAL_DMA_Abort_IT+0x1e>
 80085c4:	687b      	ldr	r3, [r7, #4]
 80085c6:	2280      	movs	r2, #128	; 0x80
 80085c8:	655a      	str	r2, [r3, #84]	; 0x54
 80085ca:	2301      	movs	r3, #1
 80085cc:	e00c      	b.n	80085e8 <HAL_DMA_Abort_IT+0x38>
 80085ce:	687b      	ldr	r3, [r7, #4]
 80085d0:	2205      	movs	r2, #5
 80085d2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80085d6:	687b      	ldr	r3, [r7, #4]
 80085d8:	681b      	ldr	r3, [r3, #0]
 80085da:	681a      	ldr	r2, [r3, #0]
 80085dc:	687b      	ldr	r3, [r7, #4]
 80085de:	681b      	ldr	r3, [r3, #0]
 80085e0:	f022 0201 	bic.w	r2, r2, #1
 80085e4:	601a      	str	r2, [r3, #0]
 80085e6:	2300      	movs	r3, #0
 80085e8:	4618      	mov	r0, r3
 80085ea:	370c      	adds	r7, #12
 80085ec:	46bd      	mov	sp, r7
 80085ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085f2:	4770      	bx	lr

080085f4 <HAL_DMA_IRQHandler>:
 80085f4:	b580      	push	{r7, lr}
 80085f6:	b086      	sub	sp, #24
 80085f8:	af00      	add	r7, sp, #0
 80085fa:	6078      	str	r0, [r7, #4]
 80085fc:	2300      	movs	r3, #0
 80085fe:	60bb      	str	r3, [r7, #8]
 8008600:	4b8e      	ldr	r3, [pc, #568]	; (800883c <HAL_DMA_IRQHandler+0x248>)
 8008602:	681b      	ldr	r3, [r3, #0]
 8008604:	4a8e      	ldr	r2, [pc, #568]	; (8008840 <HAL_DMA_IRQHandler+0x24c>)
 8008606:	fba2 2303 	umull	r2, r3, r2, r3
 800860a:	0a9b      	lsrs	r3, r3, #10
 800860c:	617b      	str	r3, [r7, #20]
 800860e:	687b      	ldr	r3, [r7, #4]
 8008610:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008612:	613b      	str	r3, [r7, #16]
 8008614:	693b      	ldr	r3, [r7, #16]
 8008616:	681b      	ldr	r3, [r3, #0]
 8008618:	60fb      	str	r3, [r7, #12]
 800861a:	687b      	ldr	r3, [r7, #4]
 800861c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800861e:	2208      	movs	r2, #8
 8008620:	409a      	lsls	r2, r3
 8008622:	68fb      	ldr	r3, [r7, #12]
 8008624:	4013      	ands	r3, r2
 8008626:	2b00      	cmp	r3, #0
 8008628:	d01a      	beq.n	8008660 <HAL_DMA_IRQHandler+0x6c>
 800862a:	687b      	ldr	r3, [r7, #4]
 800862c:	681b      	ldr	r3, [r3, #0]
 800862e:	681b      	ldr	r3, [r3, #0]
 8008630:	f003 0304 	and.w	r3, r3, #4
 8008634:	2b00      	cmp	r3, #0
 8008636:	d013      	beq.n	8008660 <HAL_DMA_IRQHandler+0x6c>
 8008638:	687b      	ldr	r3, [r7, #4]
 800863a:	681b      	ldr	r3, [r3, #0]
 800863c:	681a      	ldr	r2, [r3, #0]
 800863e:	687b      	ldr	r3, [r7, #4]
 8008640:	681b      	ldr	r3, [r3, #0]
 8008642:	f022 0204 	bic.w	r2, r2, #4
 8008646:	601a      	str	r2, [r3, #0]
 8008648:	687b      	ldr	r3, [r7, #4]
 800864a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800864c:	2208      	movs	r2, #8
 800864e:	409a      	lsls	r2, r3
 8008650:	693b      	ldr	r3, [r7, #16]
 8008652:	609a      	str	r2, [r3, #8]
 8008654:	687b      	ldr	r3, [r7, #4]
 8008656:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008658:	f043 0201 	orr.w	r2, r3, #1
 800865c:	687b      	ldr	r3, [r7, #4]
 800865e:	655a      	str	r2, [r3, #84]	; 0x54
 8008660:	687b      	ldr	r3, [r7, #4]
 8008662:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008664:	2201      	movs	r2, #1
 8008666:	409a      	lsls	r2, r3
 8008668:	68fb      	ldr	r3, [r7, #12]
 800866a:	4013      	ands	r3, r2
 800866c:	2b00      	cmp	r3, #0
 800866e:	d012      	beq.n	8008696 <HAL_DMA_IRQHandler+0xa2>
 8008670:	687b      	ldr	r3, [r7, #4]
 8008672:	681b      	ldr	r3, [r3, #0]
 8008674:	695b      	ldr	r3, [r3, #20]
 8008676:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800867a:	2b00      	cmp	r3, #0
 800867c:	d00b      	beq.n	8008696 <HAL_DMA_IRQHandler+0xa2>
 800867e:	687b      	ldr	r3, [r7, #4]
 8008680:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008682:	2201      	movs	r2, #1
 8008684:	409a      	lsls	r2, r3
 8008686:	693b      	ldr	r3, [r7, #16]
 8008688:	609a      	str	r2, [r3, #8]
 800868a:	687b      	ldr	r3, [r7, #4]
 800868c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800868e:	f043 0202 	orr.w	r2, r3, #2
 8008692:	687b      	ldr	r3, [r7, #4]
 8008694:	655a      	str	r2, [r3, #84]	; 0x54
 8008696:	687b      	ldr	r3, [r7, #4]
 8008698:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800869a:	2204      	movs	r2, #4
 800869c:	409a      	lsls	r2, r3
 800869e:	68fb      	ldr	r3, [r7, #12]
 80086a0:	4013      	ands	r3, r2
 80086a2:	2b00      	cmp	r3, #0
 80086a4:	d012      	beq.n	80086cc <HAL_DMA_IRQHandler+0xd8>
 80086a6:	687b      	ldr	r3, [r7, #4]
 80086a8:	681b      	ldr	r3, [r3, #0]
 80086aa:	681b      	ldr	r3, [r3, #0]
 80086ac:	f003 0302 	and.w	r3, r3, #2
 80086b0:	2b00      	cmp	r3, #0
 80086b2:	d00b      	beq.n	80086cc <HAL_DMA_IRQHandler+0xd8>
 80086b4:	687b      	ldr	r3, [r7, #4]
 80086b6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80086b8:	2204      	movs	r2, #4
 80086ba:	409a      	lsls	r2, r3
 80086bc:	693b      	ldr	r3, [r7, #16]
 80086be:	609a      	str	r2, [r3, #8]
 80086c0:	687b      	ldr	r3, [r7, #4]
 80086c2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80086c4:	f043 0204 	orr.w	r2, r3, #4
 80086c8:	687b      	ldr	r3, [r7, #4]
 80086ca:	655a      	str	r2, [r3, #84]	; 0x54
 80086cc:	687b      	ldr	r3, [r7, #4]
 80086ce:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80086d0:	2210      	movs	r2, #16
 80086d2:	409a      	lsls	r2, r3
 80086d4:	68fb      	ldr	r3, [r7, #12]
 80086d6:	4013      	ands	r3, r2
 80086d8:	2b00      	cmp	r3, #0
 80086da:	d043      	beq.n	8008764 <HAL_DMA_IRQHandler+0x170>
 80086dc:	687b      	ldr	r3, [r7, #4]
 80086de:	681b      	ldr	r3, [r3, #0]
 80086e0:	681b      	ldr	r3, [r3, #0]
 80086e2:	f003 0308 	and.w	r3, r3, #8
 80086e6:	2b00      	cmp	r3, #0
 80086e8:	d03c      	beq.n	8008764 <HAL_DMA_IRQHandler+0x170>
 80086ea:	687b      	ldr	r3, [r7, #4]
 80086ec:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80086ee:	2210      	movs	r2, #16
 80086f0:	409a      	lsls	r2, r3
 80086f2:	693b      	ldr	r3, [r7, #16]
 80086f4:	609a      	str	r2, [r3, #8]
 80086f6:	687b      	ldr	r3, [r7, #4]
 80086f8:	681b      	ldr	r3, [r3, #0]
 80086fa:	681b      	ldr	r3, [r3, #0]
 80086fc:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8008700:	2b00      	cmp	r3, #0
 8008702:	d018      	beq.n	8008736 <HAL_DMA_IRQHandler+0x142>
 8008704:	687b      	ldr	r3, [r7, #4]
 8008706:	681b      	ldr	r3, [r3, #0]
 8008708:	681b      	ldr	r3, [r3, #0]
 800870a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800870e:	2b00      	cmp	r3, #0
 8008710:	d108      	bne.n	8008724 <HAL_DMA_IRQHandler+0x130>
 8008712:	687b      	ldr	r3, [r7, #4]
 8008714:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008716:	2b00      	cmp	r3, #0
 8008718:	d024      	beq.n	8008764 <HAL_DMA_IRQHandler+0x170>
 800871a:	687b      	ldr	r3, [r7, #4]
 800871c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800871e:	6878      	ldr	r0, [r7, #4]
 8008720:	4798      	blx	r3
 8008722:	e01f      	b.n	8008764 <HAL_DMA_IRQHandler+0x170>
 8008724:	687b      	ldr	r3, [r7, #4]
 8008726:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008728:	2b00      	cmp	r3, #0
 800872a:	d01b      	beq.n	8008764 <HAL_DMA_IRQHandler+0x170>
 800872c:	687b      	ldr	r3, [r7, #4]
 800872e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008730:	6878      	ldr	r0, [r7, #4]
 8008732:	4798      	blx	r3
 8008734:	e016      	b.n	8008764 <HAL_DMA_IRQHandler+0x170>
 8008736:	687b      	ldr	r3, [r7, #4]
 8008738:	681b      	ldr	r3, [r3, #0]
 800873a:	681b      	ldr	r3, [r3, #0]
 800873c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008740:	2b00      	cmp	r3, #0
 8008742:	d107      	bne.n	8008754 <HAL_DMA_IRQHandler+0x160>
 8008744:	687b      	ldr	r3, [r7, #4]
 8008746:	681b      	ldr	r3, [r3, #0]
 8008748:	681a      	ldr	r2, [r3, #0]
 800874a:	687b      	ldr	r3, [r7, #4]
 800874c:	681b      	ldr	r3, [r3, #0]
 800874e:	f022 0208 	bic.w	r2, r2, #8
 8008752:	601a      	str	r2, [r3, #0]
 8008754:	687b      	ldr	r3, [r7, #4]
 8008756:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008758:	2b00      	cmp	r3, #0
 800875a:	d003      	beq.n	8008764 <HAL_DMA_IRQHandler+0x170>
 800875c:	687b      	ldr	r3, [r7, #4]
 800875e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008760:	6878      	ldr	r0, [r7, #4]
 8008762:	4798      	blx	r3
 8008764:	687b      	ldr	r3, [r7, #4]
 8008766:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008768:	2220      	movs	r2, #32
 800876a:	409a      	lsls	r2, r3
 800876c:	68fb      	ldr	r3, [r7, #12]
 800876e:	4013      	ands	r3, r2
 8008770:	2b00      	cmp	r3, #0
 8008772:	f000 808f 	beq.w	8008894 <HAL_DMA_IRQHandler+0x2a0>
 8008776:	687b      	ldr	r3, [r7, #4]
 8008778:	681b      	ldr	r3, [r3, #0]
 800877a:	681b      	ldr	r3, [r3, #0]
 800877c:	f003 0310 	and.w	r3, r3, #16
 8008780:	2b00      	cmp	r3, #0
 8008782:	f000 8087 	beq.w	8008894 <HAL_DMA_IRQHandler+0x2a0>
 8008786:	687b      	ldr	r3, [r7, #4]
 8008788:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800878a:	2220      	movs	r2, #32
 800878c:	409a      	lsls	r2, r3
 800878e:	693b      	ldr	r3, [r7, #16]
 8008790:	609a      	str	r2, [r3, #8]
 8008792:	687b      	ldr	r3, [r7, #4]
 8008794:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8008798:	b2db      	uxtb	r3, r3
 800879a:	2b05      	cmp	r3, #5
 800879c:	d136      	bne.n	800880c <HAL_DMA_IRQHandler+0x218>
 800879e:	687b      	ldr	r3, [r7, #4]
 80087a0:	681b      	ldr	r3, [r3, #0]
 80087a2:	681a      	ldr	r2, [r3, #0]
 80087a4:	687b      	ldr	r3, [r7, #4]
 80087a6:	681b      	ldr	r3, [r3, #0]
 80087a8:	f022 0216 	bic.w	r2, r2, #22
 80087ac:	601a      	str	r2, [r3, #0]
 80087ae:	687b      	ldr	r3, [r7, #4]
 80087b0:	681b      	ldr	r3, [r3, #0]
 80087b2:	695a      	ldr	r2, [r3, #20]
 80087b4:	687b      	ldr	r3, [r7, #4]
 80087b6:	681b      	ldr	r3, [r3, #0]
 80087b8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80087bc:	615a      	str	r2, [r3, #20]
 80087be:	687b      	ldr	r3, [r7, #4]
 80087c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80087c2:	2b00      	cmp	r3, #0
 80087c4:	d103      	bne.n	80087ce <HAL_DMA_IRQHandler+0x1da>
 80087c6:	687b      	ldr	r3, [r7, #4]
 80087c8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80087ca:	2b00      	cmp	r3, #0
 80087cc:	d007      	beq.n	80087de <HAL_DMA_IRQHandler+0x1ea>
 80087ce:	687b      	ldr	r3, [r7, #4]
 80087d0:	681b      	ldr	r3, [r3, #0]
 80087d2:	681a      	ldr	r2, [r3, #0]
 80087d4:	687b      	ldr	r3, [r7, #4]
 80087d6:	681b      	ldr	r3, [r3, #0]
 80087d8:	f022 0208 	bic.w	r2, r2, #8
 80087dc:	601a      	str	r2, [r3, #0]
 80087de:	687b      	ldr	r3, [r7, #4]
 80087e0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80087e2:	223f      	movs	r2, #63	; 0x3f
 80087e4:	409a      	lsls	r2, r3
 80087e6:	693b      	ldr	r3, [r7, #16]
 80087e8:	609a      	str	r2, [r3, #8]
 80087ea:	687b      	ldr	r3, [r7, #4]
 80087ec:	2201      	movs	r2, #1
 80087ee:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80087f2:	687b      	ldr	r3, [r7, #4]
 80087f4:	2200      	movs	r2, #0
 80087f6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80087fa:	687b      	ldr	r3, [r7, #4]
 80087fc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80087fe:	2b00      	cmp	r3, #0
 8008800:	d07e      	beq.n	8008900 <HAL_DMA_IRQHandler+0x30c>
 8008802:	687b      	ldr	r3, [r7, #4]
 8008804:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008806:	6878      	ldr	r0, [r7, #4]
 8008808:	4798      	blx	r3
 800880a:	e079      	b.n	8008900 <HAL_DMA_IRQHandler+0x30c>
 800880c:	687b      	ldr	r3, [r7, #4]
 800880e:	681b      	ldr	r3, [r3, #0]
 8008810:	681b      	ldr	r3, [r3, #0]
 8008812:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8008816:	2b00      	cmp	r3, #0
 8008818:	d01d      	beq.n	8008856 <HAL_DMA_IRQHandler+0x262>
 800881a:	687b      	ldr	r3, [r7, #4]
 800881c:	681b      	ldr	r3, [r3, #0]
 800881e:	681b      	ldr	r3, [r3, #0]
 8008820:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8008824:	2b00      	cmp	r3, #0
 8008826:	d10d      	bne.n	8008844 <HAL_DMA_IRQHandler+0x250>
 8008828:	687b      	ldr	r3, [r7, #4]
 800882a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800882c:	2b00      	cmp	r3, #0
 800882e:	d031      	beq.n	8008894 <HAL_DMA_IRQHandler+0x2a0>
 8008830:	687b      	ldr	r3, [r7, #4]
 8008832:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008834:	6878      	ldr	r0, [r7, #4]
 8008836:	4798      	blx	r3
 8008838:	e02c      	b.n	8008894 <HAL_DMA_IRQHandler+0x2a0>
 800883a:	bf00      	nop
 800883c:	2000013c 	.word	0x2000013c
 8008840:	1b4e81b5 	.word	0x1b4e81b5
 8008844:	687b      	ldr	r3, [r7, #4]
 8008846:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008848:	2b00      	cmp	r3, #0
 800884a:	d023      	beq.n	8008894 <HAL_DMA_IRQHandler+0x2a0>
 800884c:	687b      	ldr	r3, [r7, #4]
 800884e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008850:	6878      	ldr	r0, [r7, #4]
 8008852:	4798      	blx	r3
 8008854:	e01e      	b.n	8008894 <HAL_DMA_IRQHandler+0x2a0>
 8008856:	687b      	ldr	r3, [r7, #4]
 8008858:	681b      	ldr	r3, [r3, #0]
 800885a:	681b      	ldr	r3, [r3, #0]
 800885c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008860:	2b00      	cmp	r3, #0
 8008862:	d10f      	bne.n	8008884 <HAL_DMA_IRQHandler+0x290>
 8008864:	687b      	ldr	r3, [r7, #4]
 8008866:	681b      	ldr	r3, [r3, #0]
 8008868:	681a      	ldr	r2, [r3, #0]
 800886a:	687b      	ldr	r3, [r7, #4]
 800886c:	681b      	ldr	r3, [r3, #0]
 800886e:	f022 0210 	bic.w	r2, r2, #16
 8008872:	601a      	str	r2, [r3, #0]
 8008874:	687b      	ldr	r3, [r7, #4]
 8008876:	2201      	movs	r2, #1
 8008878:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800887c:	687b      	ldr	r3, [r7, #4]
 800887e:	2200      	movs	r2, #0
 8008880:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008884:	687b      	ldr	r3, [r7, #4]
 8008886:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008888:	2b00      	cmp	r3, #0
 800888a:	d003      	beq.n	8008894 <HAL_DMA_IRQHandler+0x2a0>
 800888c:	687b      	ldr	r3, [r7, #4]
 800888e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008890:	6878      	ldr	r0, [r7, #4]
 8008892:	4798      	blx	r3
 8008894:	687b      	ldr	r3, [r7, #4]
 8008896:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008898:	2b00      	cmp	r3, #0
 800889a:	d032      	beq.n	8008902 <HAL_DMA_IRQHandler+0x30e>
 800889c:	687b      	ldr	r3, [r7, #4]
 800889e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80088a0:	f003 0301 	and.w	r3, r3, #1
 80088a4:	2b00      	cmp	r3, #0
 80088a6:	d022      	beq.n	80088ee <HAL_DMA_IRQHandler+0x2fa>
 80088a8:	687b      	ldr	r3, [r7, #4]
 80088aa:	2205      	movs	r2, #5
 80088ac:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80088b0:	687b      	ldr	r3, [r7, #4]
 80088b2:	681b      	ldr	r3, [r3, #0]
 80088b4:	681a      	ldr	r2, [r3, #0]
 80088b6:	687b      	ldr	r3, [r7, #4]
 80088b8:	681b      	ldr	r3, [r3, #0]
 80088ba:	f022 0201 	bic.w	r2, r2, #1
 80088be:	601a      	str	r2, [r3, #0]
 80088c0:	68bb      	ldr	r3, [r7, #8]
 80088c2:	3301      	adds	r3, #1
 80088c4:	60bb      	str	r3, [r7, #8]
 80088c6:	697a      	ldr	r2, [r7, #20]
 80088c8:	429a      	cmp	r2, r3
 80088ca:	d307      	bcc.n	80088dc <HAL_DMA_IRQHandler+0x2e8>
 80088cc:	687b      	ldr	r3, [r7, #4]
 80088ce:	681b      	ldr	r3, [r3, #0]
 80088d0:	681b      	ldr	r3, [r3, #0]
 80088d2:	f003 0301 	and.w	r3, r3, #1
 80088d6:	2b00      	cmp	r3, #0
 80088d8:	d1f2      	bne.n	80088c0 <HAL_DMA_IRQHandler+0x2cc>
 80088da:	e000      	b.n	80088de <HAL_DMA_IRQHandler+0x2ea>
 80088dc:	bf00      	nop
 80088de:	687b      	ldr	r3, [r7, #4]
 80088e0:	2201      	movs	r2, #1
 80088e2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80088e6:	687b      	ldr	r3, [r7, #4]
 80088e8:	2200      	movs	r2, #0
 80088ea:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80088ee:	687b      	ldr	r3, [r7, #4]
 80088f0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80088f2:	2b00      	cmp	r3, #0
 80088f4:	d005      	beq.n	8008902 <HAL_DMA_IRQHandler+0x30e>
 80088f6:	687b      	ldr	r3, [r7, #4]
 80088f8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80088fa:	6878      	ldr	r0, [r7, #4]
 80088fc:	4798      	blx	r3
 80088fe:	e000      	b.n	8008902 <HAL_DMA_IRQHandler+0x30e>
 8008900:	bf00      	nop
 8008902:	3718      	adds	r7, #24
 8008904:	46bd      	mov	sp, r7
 8008906:	bd80      	pop	{r7, pc}

08008908 <DMA_SetConfig>:
 8008908:	b480      	push	{r7}
 800890a:	b085      	sub	sp, #20
 800890c:	af00      	add	r7, sp, #0
 800890e:	60f8      	str	r0, [r7, #12]
 8008910:	60b9      	str	r1, [r7, #8]
 8008912:	607a      	str	r2, [r7, #4]
 8008914:	603b      	str	r3, [r7, #0]
 8008916:	68fb      	ldr	r3, [r7, #12]
 8008918:	681b      	ldr	r3, [r3, #0]
 800891a:	681a      	ldr	r2, [r3, #0]
 800891c:	68fb      	ldr	r3, [r7, #12]
 800891e:	681b      	ldr	r3, [r3, #0]
 8008920:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8008924:	601a      	str	r2, [r3, #0]
 8008926:	68fb      	ldr	r3, [r7, #12]
 8008928:	681b      	ldr	r3, [r3, #0]
 800892a:	683a      	ldr	r2, [r7, #0]
 800892c:	605a      	str	r2, [r3, #4]
 800892e:	68fb      	ldr	r3, [r7, #12]
 8008930:	689b      	ldr	r3, [r3, #8]
 8008932:	2b40      	cmp	r3, #64	; 0x40
 8008934:	d108      	bne.n	8008948 <DMA_SetConfig+0x40>
 8008936:	68fb      	ldr	r3, [r7, #12]
 8008938:	681b      	ldr	r3, [r3, #0]
 800893a:	687a      	ldr	r2, [r7, #4]
 800893c:	609a      	str	r2, [r3, #8]
 800893e:	68fb      	ldr	r3, [r7, #12]
 8008940:	681b      	ldr	r3, [r3, #0]
 8008942:	68ba      	ldr	r2, [r7, #8]
 8008944:	60da      	str	r2, [r3, #12]
 8008946:	e007      	b.n	8008958 <DMA_SetConfig+0x50>
 8008948:	68fb      	ldr	r3, [r7, #12]
 800894a:	681b      	ldr	r3, [r3, #0]
 800894c:	68ba      	ldr	r2, [r7, #8]
 800894e:	609a      	str	r2, [r3, #8]
 8008950:	68fb      	ldr	r3, [r7, #12]
 8008952:	681b      	ldr	r3, [r3, #0]
 8008954:	687a      	ldr	r2, [r7, #4]
 8008956:	60da      	str	r2, [r3, #12]
 8008958:	bf00      	nop
 800895a:	3714      	adds	r7, #20
 800895c:	46bd      	mov	sp, r7
 800895e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008962:	4770      	bx	lr

08008964 <DMA_CalcBaseAndBitshift>:
 8008964:	b480      	push	{r7}
 8008966:	b085      	sub	sp, #20
 8008968:	af00      	add	r7, sp, #0
 800896a:	6078      	str	r0, [r7, #4]
 800896c:	687b      	ldr	r3, [r7, #4]
 800896e:	681b      	ldr	r3, [r3, #0]
 8008970:	b2db      	uxtb	r3, r3
 8008972:	3b10      	subs	r3, #16
 8008974:	4a14      	ldr	r2, [pc, #80]	; (80089c8 <DMA_CalcBaseAndBitshift+0x64>)
 8008976:	fba2 2303 	umull	r2, r3, r2, r3
 800897a:	091b      	lsrs	r3, r3, #4
 800897c:	60fb      	str	r3, [r7, #12]
 800897e:	4a13      	ldr	r2, [pc, #76]	; (80089cc <DMA_CalcBaseAndBitshift+0x68>)
 8008980:	68fb      	ldr	r3, [r7, #12]
 8008982:	4413      	add	r3, r2
 8008984:	781b      	ldrb	r3, [r3, #0]
 8008986:	461a      	mov	r2, r3
 8008988:	687b      	ldr	r3, [r7, #4]
 800898a:	65da      	str	r2, [r3, #92]	; 0x5c
 800898c:	68fb      	ldr	r3, [r7, #12]
 800898e:	2b03      	cmp	r3, #3
 8008990:	d909      	bls.n	80089a6 <DMA_CalcBaseAndBitshift+0x42>
 8008992:	687b      	ldr	r3, [r7, #4]
 8008994:	681b      	ldr	r3, [r3, #0]
 8008996:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 800899a:	f023 0303 	bic.w	r3, r3, #3
 800899e:	1d1a      	adds	r2, r3, #4
 80089a0:	687b      	ldr	r3, [r7, #4]
 80089a2:	659a      	str	r2, [r3, #88]	; 0x58
 80089a4:	e007      	b.n	80089b6 <DMA_CalcBaseAndBitshift+0x52>
 80089a6:	687b      	ldr	r3, [r7, #4]
 80089a8:	681b      	ldr	r3, [r3, #0]
 80089aa:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80089ae:	f023 0303 	bic.w	r3, r3, #3
 80089b2:	687a      	ldr	r2, [r7, #4]
 80089b4:	6593      	str	r3, [r2, #88]	; 0x58
 80089b6:	687b      	ldr	r3, [r7, #4]
 80089b8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80089ba:	4618      	mov	r0, r3
 80089bc:	3714      	adds	r7, #20
 80089be:	46bd      	mov	sp, r7
 80089c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089c4:	4770      	bx	lr
 80089c6:	bf00      	nop
 80089c8:	aaaaaaab 	.word	0xaaaaaaab
 80089cc:	080112b8 	.word	0x080112b8

080089d0 <DMA_CheckFifoParam>:
 80089d0:	b480      	push	{r7}
 80089d2:	b085      	sub	sp, #20
 80089d4:	af00      	add	r7, sp, #0
 80089d6:	6078      	str	r0, [r7, #4]
 80089d8:	2300      	movs	r3, #0
 80089da:	73fb      	strb	r3, [r7, #15]
 80089dc:	687b      	ldr	r3, [r7, #4]
 80089de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80089e0:	60bb      	str	r3, [r7, #8]
 80089e2:	687b      	ldr	r3, [r7, #4]
 80089e4:	699b      	ldr	r3, [r3, #24]
 80089e6:	2b00      	cmp	r3, #0
 80089e8:	d11f      	bne.n	8008a2a <DMA_CheckFifoParam+0x5a>
 80089ea:	68bb      	ldr	r3, [r7, #8]
 80089ec:	2b03      	cmp	r3, #3
 80089ee:	d856      	bhi.n	8008a9e <DMA_CheckFifoParam+0xce>
 80089f0:	a201      	add	r2, pc, #4	; (adr r2, 80089f8 <DMA_CheckFifoParam+0x28>)
 80089f2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80089f6:	bf00      	nop
 80089f8:	08008a09 	.word	0x08008a09
 80089fc:	08008a1b 	.word	0x08008a1b
 8008a00:	08008a09 	.word	0x08008a09
 8008a04:	08008a9f 	.word	0x08008a9f
 8008a08:	687b      	ldr	r3, [r7, #4]
 8008a0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008a0c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8008a10:	2b00      	cmp	r3, #0
 8008a12:	d046      	beq.n	8008aa2 <DMA_CheckFifoParam+0xd2>
 8008a14:	2301      	movs	r3, #1
 8008a16:	73fb      	strb	r3, [r7, #15]
 8008a18:	e043      	b.n	8008aa2 <DMA_CheckFifoParam+0xd2>
 8008a1a:	687b      	ldr	r3, [r7, #4]
 8008a1c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008a1e:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8008a22:	d140      	bne.n	8008aa6 <DMA_CheckFifoParam+0xd6>
 8008a24:	2301      	movs	r3, #1
 8008a26:	73fb      	strb	r3, [r7, #15]
 8008a28:	e03d      	b.n	8008aa6 <DMA_CheckFifoParam+0xd6>
 8008a2a:	687b      	ldr	r3, [r7, #4]
 8008a2c:	699b      	ldr	r3, [r3, #24]
 8008a2e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008a32:	d121      	bne.n	8008a78 <DMA_CheckFifoParam+0xa8>
 8008a34:	68bb      	ldr	r3, [r7, #8]
 8008a36:	2b03      	cmp	r3, #3
 8008a38:	d837      	bhi.n	8008aaa <DMA_CheckFifoParam+0xda>
 8008a3a:	a201      	add	r2, pc, #4	; (adr r2, 8008a40 <DMA_CheckFifoParam+0x70>)
 8008a3c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008a40:	08008a51 	.word	0x08008a51
 8008a44:	08008a57 	.word	0x08008a57
 8008a48:	08008a51 	.word	0x08008a51
 8008a4c:	08008a69 	.word	0x08008a69
 8008a50:	2301      	movs	r3, #1
 8008a52:	73fb      	strb	r3, [r7, #15]
 8008a54:	e030      	b.n	8008ab8 <DMA_CheckFifoParam+0xe8>
 8008a56:	687b      	ldr	r3, [r7, #4]
 8008a58:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008a5a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8008a5e:	2b00      	cmp	r3, #0
 8008a60:	d025      	beq.n	8008aae <DMA_CheckFifoParam+0xde>
 8008a62:	2301      	movs	r3, #1
 8008a64:	73fb      	strb	r3, [r7, #15]
 8008a66:	e022      	b.n	8008aae <DMA_CheckFifoParam+0xde>
 8008a68:	687b      	ldr	r3, [r7, #4]
 8008a6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008a6c:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8008a70:	d11f      	bne.n	8008ab2 <DMA_CheckFifoParam+0xe2>
 8008a72:	2301      	movs	r3, #1
 8008a74:	73fb      	strb	r3, [r7, #15]
 8008a76:	e01c      	b.n	8008ab2 <DMA_CheckFifoParam+0xe2>
 8008a78:	68bb      	ldr	r3, [r7, #8]
 8008a7a:	2b02      	cmp	r3, #2
 8008a7c:	d903      	bls.n	8008a86 <DMA_CheckFifoParam+0xb6>
 8008a7e:	68bb      	ldr	r3, [r7, #8]
 8008a80:	2b03      	cmp	r3, #3
 8008a82:	d003      	beq.n	8008a8c <DMA_CheckFifoParam+0xbc>
 8008a84:	e018      	b.n	8008ab8 <DMA_CheckFifoParam+0xe8>
 8008a86:	2301      	movs	r3, #1
 8008a88:	73fb      	strb	r3, [r7, #15]
 8008a8a:	e015      	b.n	8008ab8 <DMA_CheckFifoParam+0xe8>
 8008a8c:	687b      	ldr	r3, [r7, #4]
 8008a8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008a90:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8008a94:	2b00      	cmp	r3, #0
 8008a96:	d00e      	beq.n	8008ab6 <DMA_CheckFifoParam+0xe6>
 8008a98:	2301      	movs	r3, #1
 8008a9a:	73fb      	strb	r3, [r7, #15]
 8008a9c:	e00b      	b.n	8008ab6 <DMA_CheckFifoParam+0xe6>
 8008a9e:	bf00      	nop
 8008aa0:	e00a      	b.n	8008ab8 <DMA_CheckFifoParam+0xe8>
 8008aa2:	bf00      	nop
 8008aa4:	e008      	b.n	8008ab8 <DMA_CheckFifoParam+0xe8>
 8008aa6:	bf00      	nop
 8008aa8:	e006      	b.n	8008ab8 <DMA_CheckFifoParam+0xe8>
 8008aaa:	bf00      	nop
 8008aac:	e004      	b.n	8008ab8 <DMA_CheckFifoParam+0xe8>
 8008aae:	bf00      	nop
 8008ab0:	e002      	b.n	8008ab8 <DMA_CheckFifoParam+0xe8>
 8008ab2:	bf00      	nop
 8008ab4:	e000      	b.n	8008ab8 <DMA_CheckFifoParam+0xe8>
 8008ab6:	bf00      	nop
 8008ab8:	7bfb      	ldrb	r3, [r7, #15]
 8008aba:	4618      	mov	r0, r3
 8008abc:	3714      	adds	r7, #20
 8008abe:	46bd      	mov	sp, r7
 8008ac0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ac4:	4770      	bx	lr
 8008ac6:	bf00      	nop

08008ac8 <HAL_FLASH_Program>:
 8008ac8:	b580      	push	{r7, lr}
 8008aca:	b086      	sub	sp, #24
 8008acc:	af00      	add	r7, sp, #0
 8008ace:	60f8      	str	r0, [r7, #12]
 8008ad0:	60b9      	str	r1, [r7, #8]
 8008ad2:	e9c7 2300 	strd	r2, r3, [r7]
 8008ad6:	2301      	movs	r3, #1
 8008ad8:	75fb      	strb	r3, [r7, #23]
 8008ada:	4b23      	ldr	r3, [pc, #140]	; (8008b68 <HAL_FLASH_Program+0xa0>)
 8008adc:	7e1b      	ldrb	r3, [r3, #24]
 8008ade:	2b01      	cmp	r3, #1
 8008ae0:	d101      	bne.n	8008ae6 <HAL_FLASH_Program+0x1e>
 8008ae2:	2302      	movs	r3, #2
 8008ae4:	e03b      	b.n	8008b5e <HAL_FLASH_Program+0x96>
 8008ae6:	4b20      	ldr	r3, [pc, #128]	; (8008b68 <HAL_FLASH_Program+0xa0>)
 8008ae8:	2201      	movs	r2, #1
 8008aea:	761a      	strb	r2, [r3, #24]
 8008aec:	f24c 3050 	movw	r0, #50000	; 0xc350
 8008af0:	f000 f870 	bl	8008bd4 <FLASH_WaitForLastOperation>
 8008af4:	4603      	mov	r3, r0
 8008af6:	75fb      	strb	r3, [r7, #23]
 8008af8:	7dfb      	ldrb	r3, [r7, #23]
 8008afa:	2b00      	cmp	r3, #0
 8008afc:	d12b      	bne.n	8008b56 <HAL_FLASH_Program+0x8e>
 8008afe:	68fb      	ldr	r3, [r7, #12]
 8008b00:	2b00      	cmp	r3, #0
 8008b02:	d105      	bne.n	8008b10 <HAL_FLASH_Program+0x48>
 8008b04:	783b      	ldrb	r3, [r7, #0]
 8008b06:	4619      	mov	r1, r3
 8008b08:	68b8      	ldr	r0, [r7, #8]
 8008b0a:	f000 f91b 	bl	8008d44 <FLASH_Program_Byte>
 8008b0e:	e016      	b.n	8008b3e <HAL_FLASH_Program+0x76>
 8008b10:	68fb      	ldr	r3, [r7, #12]
 8008b12:	2b01      	cmp	r3, #1
 8008b14:	d105      	bne.n	8008b22 <HAL_FLASH_Program+0x5a>
 8008b16:	883b      	ldrh	r3, [r7, #0]
 8008b18:	4619      	mov	r1, r3
 8008b1a:	68b8      	ldr	r0, [r7, #8]
 8008b1c:	f000 f8ee 	bl	8008cfc <FLASH_Program_HalfWord>
 8008b20:	e00d      	b.n	8008b3e <HAL_FLASH_Program+0x76>
 8008b22:	68fb      	ldr	r3, [r7, #12]
 8008b24:	2b02      	cmp	r3, #2
 8008b26:	d105      	bne.n	8008b34 <HAL_FLASH_Program+0x6c>
 8008b28:	683b      	ldr	r3, [r7, #0]
 8008b2a:	4619      	mov	r1, r3
 8008b2c:	68b8      	ldr	r0, [r7, #8]
 8008b2e:	f000 f8c3 	bl	8008cb8 <FLASH_Program_Word>
 8008b32:	e004      	b.n	8008b3e <HAL_FLASH_Program+0x76>
 8008b34:	e9d7 2300 	ldrd	r2, r3, [r7]
 8008b38:	68b8      	ldr	r0, [r7, #8]
 8008b3a:	f000 f88b 	bl	8008c54 <FLASH_Program_DoubleWord>
 8008b3e:	f24c 3050 	movw	r0, #50000	; 0xc350
 8008b42:	f000 f847 	bl	8008bd4 <FLASH_WaitForLastOperation>
 8008b46:	4603      	mov	r3, r0
 8008b48:	75fb      	strb	r3, [r7, #23]
 8008b4a:	4b08      	ldr	r3, [pc, #32]	; (8008b6c <HAL_FLASH_Program+0xa4>)
 8008b4c:	691b      	ldr	r3, [r3, #16]
 8008b4e:	4a07      	ldr	r2, [pc, #28]	; (8008b6c <HAL_FLASH_Program+0xa4>)
 8008b50:	f023 0301 	bic.w	r3, r3, #1
 8008b54:	6113      	str	r3, [r2, #16]
 8008b56:	4b04      	ldr	r3, [pc, #16]	; (8008b68 <HAL_FLASH_Program+0xa0>)
 8008b58:	2200      	movs	r2, #0
 8008b5a:	761a      	strb	r2, [r3, #24]
 8008b5c:	7dfb      	ldrb	r3, [r7, #23]
 8008b5e:	4618      	mov	r0, r3
 8008b60:	3718      	adds	r7, #24
 8008b62:	46bd      	mov	sp, r7
 8008b64:	bd80      	pop	{r7, pc}
 8008b66:	bf00      	nop
 8008b68:	20000c58 	.word	0x20000c58
 8008b6c:	40023c00 	.word	0x40023c00

08008b70 <HAL_FLASH_Unlock>:
 8008b70:	b480      	push	{r7}
 8008b72:	b083      	sub	sp, #12
 8008b74:	af00      	add	r7, sp, #0
 8008b76:	2300      	movs	r3, #0
 8008b78:	71fb      	strb	r3, [r7, #7]
 8008b7a:	4b0b      	ldr	r3, [pc, #44]	; (8008ba8 <HAL_FLASH_Unlock+0x38>)
 8008b7c:	691b      	ldr	r3, [r3, #16]
 8008b7e:	2b00      	cmp	r3, #0
 8008b80:	da0b      	bge.n	8008b9a <HAL_FLASH_Unlock+0x2a>
 8008b82:	4b09      	ldr	r3, [pc, #36]	; (8008ba8 <HAL_FLASH_Unlock+0x38>)
 8008b84:	4a09      	ldr	r2, [pc, #36]	; (8008bac <HAL_FLASH_Unlock+0x3c>)
 8008b86:	605a      	str	r2, [r3, #4]
 8008b88:	4b07      	ldr	r3, [pc, #28]	; (8008ba8 <HAL_FLASH_Unlock+0x38>)
 8008b8a:	4a09      	ldr	r2, [pc, #36]	; (8008bb0 <HAL_FLASH_Unlock+0x40>)
 8008b8c:	605a      	str	r2, [r3, #4]
 8008b8e:	4b06      	ldr	r3, [pc, #24]	; (8008ba8 <HAL_FLASH_Unlock+0x38>)
 8008b90:	691b      	ldr	r3, [r3, #16]
 8008b92:	2b00      	cmp	r3, #0
 8008b94:	da01      	bge.n	8008b9a <HAL_FLASH_Unlock+0x2a>
 8008b96:	2301      	movs	r3, #1
 8008b98:	71fb      	strb	r3, [r7, #7]
 8008b9a:	79fb      	ldrb	r3, [r7, #7]
 8008b9c:	4618      	mov	r0, r3
 8008b9e:	370c      	adds	r7, #12
 8008ba0:	46bd      	mov	sp, r7
 8008ba2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ba6:	4770      	bx	lr
 8008ba8:	40023c00 	.word	0x40023c00
 8008bac:	45670123 	.word	0x45670123
 8008bb0:	cdef89ab 	.word	0xcdef89ab

08008bb4 <HAL_FLASH_Lock>:
 8008bb4:	b480      	push	{r7}
 8008bb6:	af00      	add	r7, sp, #0
 8008bb8:	4b05      	ldr	r3, [pc, #20]	; (8008bd0 <HAL_FLASH_Lock+0x1c>)
 8008bba:	691b      	ldr	r3, [r3, #16]
 8008bbc:	4a04      	ldr	r2, [pc, #16]	; (8008bd0 <HAL_FLASH_Lock+0x1c>)
 8008bbe:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8008bc2:	6113      	str	r3, [r2, #16]
 8008bc4:	2300      	movs	r3, #0
 8008bc6:	4618      	mov	r0, r3
 8008bc8:	46bd      	mov	sp, r7
 8008bca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bce:	4770      	bx	lr
 8008bd0:	40023c00 	.word	0x40023c00

08008bd4 <FLASH_WaitForLastOperation>:
 8008bd4:	b580      	push	{r7, lr}
 8008bd6:	b084      	sub	sp, #16
 8008bd8:	af00      	add	r7, sp, #0
 8008bda:	6078      	str	r0, [r7, #4]
 8008bdc:	2300      	movs	r3, #0
 8008bde:	60fb      	str	r3, [r7, #12]
 8008be0:	4b1a      	ldr	r3, [pc, #104]	; (8008c4c <FLASH_WaitForLastOperation+0x78>)
 8008be2:	2200      	movs	r2, #0
 8008be4:	61da      	str	r2, [r3, #28]
 8008be6:	f7fe fc83 	bl	80074f0 <HAL_GetTick>
 8008bea:	60f8      	str	r0, [r7, #12]
 8008bec:	e010      	b.n	8008c10 <FLASH_WaitForLastOperation+0x3c>
 8008bee:	687b      	ldr	r3, [r7, #4]
 8008bf0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008bf4:	d00c      	beq.n	8008c10 <FLASH_WaitForLastOperation+0x3c>
 8008bf6:	687b      	ldr	r3, [r7, #4]
 8008bf8:	2b00      	cmp	r3, #0
 8008bfa:	d007      	beq.n	8008c0c <FLASH_WaitForLastOperation+0x38>
 8008bfc:	f7fe fc78 	bl	80074f0 <HAL_GetTick>
 8008c00:	4602      	mov	r2, r0
 8008c02:	68fb      	ldr	r3, [r7, #12]
 8008c04:	1ad3      	subs	r3, r2, r3
 8008c06:	687a      	ldr	r2, [r7, #4]
 8008c08:	429a      	cmp	r2, r3
 8008c0a:	d201      	bcs.n	8008c10 <FLASH_WaitForLastOperation+0x3c>
 8008c0c:	2303      	movs	r3, #3
 8008c0e:	e019      	b.n	8008c44 <FLASH_WaitForLastOperation+0x70>
 8008c10:	4b0f      	ldr	r3, [pc, #60]	; (8008c50 <FLASH_WaitForLastOperation+0x7c>)
 8008c12:	68db      	ldr	r3, [r3, #12]
 8008c14:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8008c18:	2b00      	cmp	r3, #0
 8008c1a:	d1e8      	bne.n	8008bee <FLASH_WaitForLastOperation+0x1a>
 8008c1c:	4b0c      	ldr	r3, [pc, #48]	; (8008c50 <FLASH_WaitForLastOperation+0x7c>)
 8008c1e:	68db      	ldr	r3, [r3, #12]
 8008c20:	f003 0301 	and.w	r3, r3, #1
 8008c24:	2b00      	cmp	r3, #0
 8008c26:	d002      	beq.n	8008c2e <FLASH_WaitForLastOperation+0x5a>
 8008c28:	4b09      	ldr	r3, [pc, #36]	; (8008c50 <FLASH_WaitForLastOperation+0x7c>)
 8008c2a:	2201      	movs	r2, #1
 8008c2c:	60da      	str	r2, [r3, #12]
 8008c2e:	4b08      	ldr	r3, [pc, #32]	; (8008c50 <FLASH_WaitForLastOperation+0x7c>)
 8008c30:	68db      	ldr	r3, [r3, #12]
 8008c32:	f403 73f9 	and.w	r3, r3, #498	; 0x1f2
 8008c36:	2b00      	cmp	r3, #0
 8008c38:	d003      	beq.n	8008c42 <FLASH_WaitForLastOperation+0x6e>
 8008c3a:	f000 f8a5 	bl	8008d88 <FLASH_SetErrorCode>
 8008c3e:	2301      	movs	r3, #1
 8008c40:	e000      	b.n	8008c44 <FLASH_WaitForLastOperation+0x70>
 8008c42:	2300      	movs	r3, #0
 8008c44:	4618      	mov	r0, r3
 8008c46:	3710      	adds	r7, #16
 8008c48:	46bd      	mov	sp, r7
 8008c4a:	bd80      	pop	{r7, pc}
 8008c4c:	20000c58 	.word	0x20000c58
 8008c50:	40023c00 	.word	0x40023c00

08008c54 <FLASH_Program_DoubleWord>:
 8008c54:	b480      	push	{r7}
 8008c56:	b085      	sub	sp, #20
 8008c58:	af00      	add	r7, sp, #0
 8008c5a:	60f8      	str	r0, [r7, #12]
 8008c5c:	e9c7 2300 	strd	r2, r3, [r7]
 8008c60:	4b14      	ldr	r3, [pc, #80]	; (8008cb4 <FLASH_Program_DoubleWord+0x60>)
 8008c62:	691b      	ldr	r3, [r3, #16]
 8008c64:	4a13      	ldr	r2, [pc, #76]	; (8008cb4 <FLASH_Program_DoubleWord+0x60>)
 8008c66:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008c6a:	6113      	str	r3, [r2, #16]
 8008c6c:	4b11      	ldr	r3, [pc, #68]	; (8008cb4 <FLASH_Program_DoubleWord+0x60>)
 8008c6e:	691b      	ldr	r3, [r3, #16]
 8008c70:	4a10      	ldr	r2, [pc, #64]	; (8008cb4 <FLASH_Program_DoubleWord+0x60>)
 8008c72:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8008c76:	6113      	str	r3, [r2, #16]
 8008c78:	4b0e      	ldr	r3, [pc, #56]	; (8008cb4 <FLASH_Program_DoubleWord+0x60>)
 8008c7a:	691b      	ldr	r3, [r3, #16]
 8008c7c:	4a0d      	ldr	r2, [pc, #52]	; (8008cb4 <FLASH_Program_DoubleWord+0x60>)
 8008c7e:	f043 0301 	orr.w	r3, r3, #1
 8008c82:	6113      	str	r3, [r2, #16]
 8008c84:	68fb      	ldr	r3, [r7, #12]
 8008c86:	683a      	ldr	r2, [r7, #0]
 8008c88:	601a      	str	r2, [r3, #0]
 8008c8a:	f3bf 8f6f 	isb	sy
 8008c8e:	bf00      	nop
 8008c90:	e9d7 0100 	ldrd	r0, r1, [r7]
 8008c94:	f04f 0200 	mov.w	r2, #0
 8008c98:	f04f 0300 	mov.w	r3, #0
 8008c9c:	000a      	movs	r2, r1
 8008c9e:	2300      	movs	r3, #0
 8008ca0:	68f9      	ldr	r1, [r7, #12]
 8008ca2:	3104      	adds	r1, #4
 8008ca4:	4613      	mov	r3, r2
 8008ca6:	600b      	str	r3, [r1, #0]
 8008ca8:	bf00      	nop
 8008caa:	3714      	adds	r7, #20
 8008cac:	46bd      	mov	sp, r7
 8008cae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008cb2:	4770      	bx	lr
 8008cb4:	40023c00 	.word	0x40023c00

08008cb8 <FLASH_Program_Word>:
 8008cb8:	b480      	push	{r7}
 8008cba:	b083      	sub	sp, #12
 8008cbc:	af00      	add	r7, sp, #0
 8008cbe:	6078      	str	r0, [r7, #4]
 8008cc0:	6039      	str	r1, [r7, #0]
 8008cc2:	4b0d      	ldr	r3, [pc, #52]	; (8008cf8 <FLASH_Program_Word+0x40>)
 8008cc4:	691b      	ldr	r3, [r3, #16]
 8008cc6:	4a0c      	ldr	r2, [pc, #48]	; (8008cf8 <FLASH_Program_Word+0x40>)
 8008cc8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008ccc:	6113      	str	r3, [r2, #16]
 8008cce:	4b0a      	ldr	r3, [pc, #40]	; (8008cf8 <FLASH_Program_Word+0x40>)
 8008cd0:	691b      	ldr	r3, [r3, #16]
 8008cd2:	4a09      	ldr	r2, [pc, #36]	; (8008cf8 <FLASH_Program_Word+0x40>)
 8008cd4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8008cd8:	6113      	str	r3, [r2, #16]
 8008cda:	4b07      	ldr	r3, [pc, #28]	; (8008cf8 <FLASH_Program_Word+0x40>)
 8008cdc:	691b      	ldr	r3, [r3, #16]
 8008cde:	4a06      	ldr	r2, [pc, #24]	; (8008cf8 <FLASH_Program_Word+0x40>)
 8008ce0:	f043 0301 	orr.w	r3, r3, #1
 8008ce4:	6113      	str	r3, [r2, #16]
 8008ce6:	687b      	ldr	r3, [r7, #4]
 8008ce8:	683a      	ldr	r2, [r7, #0]
 8008cea:	601a      	str	r2, [r3, #0]
 8008cec:	bf00      	nop
 8008cee:	370c      	adds	r7, #12
 8008cf0:	46bd      	mov	sp, r7
 8008cf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008cf6:	4770      	bx	lr
 8008cf8:	40023c00 	.word	0x40023c00

08008cfc <FLASH_Program_HalfWord>:
 8008cfc:	b480      	push	{r7}
 8008cfe:	b083      	sub	sp, #12
 8008d00:	af00      	add	r7, sp, #0
 8008d02:	6078      	str	r0, [r7, #4]
 8008d04:	460b      	mov	r3, r1
 8008d06:	807b      	strh	r3, [r7, #2]
 8008d08:	4b0d      	ldr	r3, [pc, #52]	; (8008d40 <FLASH_Program_HalfWord+0x44>)
 8008d0a:	691b      	ldr	r3, [r3, #16]
 8008d0c:	4a0c      	ldr	r2, [pc, #48]	; (8008d40 <FLASH_Program_HalfWord+0x44>)
 8008d0e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008d12:	6113      	str	r3, [r2, #16]
 8008d14:	4b0a      	ldr	r3, [pc, #40]	; (8008d40 <FLASH_Program_HalfWord+0x44>)
 8008d16:	691b      	ldr	r3, [r3, #16]
 8008d18:	4a09      	ldr	r2, [pc, #36]	; (8008d40 <FLASH_Program_HalfWord+0x44>)
 8008d1a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008d1e:	6113      	str	r3, [r2, #16]
 8008d20:	4b07      	ldr	r3, [pc, #28]	; (8008d40 <FLASH_Program_HalfWord+0x44>)
 8008d22:	691b      	ldr	r3, [r3, #16]
 8008d24:	4a06      	ldr	r2, [pc, #24]	; (8008d40 <FLASH_Program_HalfWord+0x44>)
 8008d26:	f043 0301 	orr.w	r3, r3, #1
 8008d2a:	6113      	str	r3, [r2, #16]
 8008d2c:	687b      	ldr	r3, [r7, #4]
 8008d2e:	887a      	ldrh	r2, [r7, #2]
 8008d30:	801a      	strh	r2, [r3, #0]
 8008d32:	bf00      	nop
 8008d34:	370c      	adds	r7, #12
 8008d36:	46bd      	mov	sp, r7
 8008d38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d3c:	4770      	bx	lr
 8008d3e:	bf00      	nop
 8008d40:	40023c00 	.word	0x40023c00

08008d44 <FLASH_Program_Byte>:
 8008d44:	b480      	push	{r7}
 8008d46:	b083      	sub	sp, #12
 8008d48:	af00      	add	r7, sp, #0
 8008d4a:	6078      	str	r0, [r7, #4]
 8008d4c:	460b      	mov	r3, r1
 8008d4e:	70fb      	strb	r3, [r7, #3]
 8008d50:	4b0c      	ldr	r3, [pc, #48]	; (8008d84 <FLASH_Program_Byte+0x40>)
 8008d52:	691b      	ldr	r3, [r3, #16]
 8008d54:	4a0b      	ldr	r2, [pc, #44]	; (8008d84 <FLASH_Program_Byte+0x40>)
 8008d56:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008d5a:	6113      	str	r3, [r2, #16]
 8008d5c:	4b09      	ldr	r3, [pc, #36]	; (8008d84 <FLASH_Program_Byte+0x40>)
 8008d5e:	4a09      	ldr	r2, [pc, #36]	; (8008d84 <FLASH_Program_Byte+0x40>)
 8008d60:	691b      	ldr	r3, [r3, #16]
 8008d62:	6113      	str	r3, [r2, #16]
 8008d64:	4b07      	ldr	r3, [pc, #28]	; (8008d84 <FLASH_Program_Byte+0x40>)
 8008d66:	691b      	ldr	r3, [r3, #16]
 8008d68:	4a06      	ldr	r2, [pc, #24]	; (8008d84 <FLASH_Program_Byte+0x40>)
 8008d6a:	f043 0301 	orr.w	r3, r3, #1
 8008d6e:	6113      	str	r3, [r2, #16]
 8008d70:	687b      	ldr	r3, [r7, #4]
 8008d72:	78fa      	ldrb	r2, [r7, #3]
 8008d74:	701a      	strb	r2, [r3, #0]
 8008d76:	bf00      	nop
 8008d78:	370c      	adds	r7, #12
 8008d7a:	46bd      	mov	sp, r7
 8008d7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d80:	4770      	bx	lr
 8008d82:	bf00      	nop
 8008d84:	40023c00 	.word	0x40023c00

08008d88 <FLASH_SetErrorCode>:
 8008d88:	b480      	push	{r7}
 8008d8a:	af00      	add	r7, sp, #0
 8008d8c:	4b2f      	ldr	r3, [pc, #188]	; (8008e4c <FLASH_SetErrorCode+0xc4>)
 8008d8e:	68db      	ldr	r3, [r3, #12]
 8008d90:	f003 0310 	and.w	r3, r3, #16
 8008d94:	2b00      	cmp	r3, #0
 8008d96:	d008      	beq.n	8008daa <FLASH_SetErrorCode+0x22>
 8008d98:	4b2d      	ldr	r3, [pc, #180]	; (8008e50 <FLASH_SetErrorCode+0xc8>)
 8008d9a:	69db      	ldr	r3, [r3, #28]
 8008d9c:	f043 0310 	orr.w	r3, r3, #16
 8008da0:	4a2b      	ldr	r2, [pc, #172]	; (8008e50 <FLASH_SetErrorCode+0xc8>)
 8008da2:	61d3      	str	r3, [r2, #28]
 8008da4:	4b29      	ldr	r3, [pc, #164]	; (8008e4c <FLASH_SetErrorCode+0xc4>)
 8008da6:	2210      	movs	r2, #16
 8008da8:	60da      	str	r2, [r3, #12]
 8008daa:	4b28      	ldr	r3, [pc, #160]	; (8008e4c <FLASH_SetErrorCode+0xc4>)
 8008dac:	68db      	ldr	r3, [r3, #12]
 8008dae:	f003 0320 	and.w	r3, r3, #32
 8008db2:	2b00      	cmp	r3, #0
 8008db4:	d008      	beq.n	8008dc8 <FLASH_SetErrorCode+0x40>
 8008db6:	4b26      	ldr	r3, [pc, #152]	; (8008e50 <FLASH_SetErrorCode+0xc8>)
 8008db8:	69db      	ldr	r3, [r3, #28]
 8008dba:	f043 0308 	orr.w	r3, r3, #8
 8008dbe:	4a24      	ldr	r2, [pc, #144]	; (8008e50 <FLASH_SetErrorCode+0xc8>)
 8008dc0:	61d3      	str	r3, [r2, #28]
 8008dc2:	4b22      	ldr	r3, [pc, #136]	; (8008e4c <FLASH_SetErrorCode+0xc4>)
 8008dc4:	2220      	movs	r2, #32
 8008dc6:	60da      	str	r2, [r3, #12]
 8008dc8:	4b20      	ldr	r3, [pc, #128]	; (8008e4c <FLASH_SetErrorCode+0xc4>)
 8008dca:	68db      	ldr	r3, [r3, #12]
 8008dcc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008dd0:	2b00      	cmp	r3, #0
 8008dd2:	d008      	beq.n	8008de6 <FLASH_SetErrorCode+0x5e>
 8008dd4:	4b1e      	ldr	r3, [pc, #120]	; (8008e50 <FLASH_SetErrorCode+0xc8>)
 8008dd6:	69db      	ldr	r3, [r3, #28]
 8008dd8:	f043 0304 	orr.w	r3, r3, #4
 8008ddc:	4a1c      	ldr	r2, [pc, #112]	; (8008e50 <FLASH_SetErrorCode+0xc8>)
 8008dde:	61d3      	str	r3, [r2, #28]
 8008de0:	4b1a      	ldr	r3, [pc, #104]	; (8008e4c <FLASH_SetErrorCode+0xc4>)
 8008de2:	2240      	movs	r2, #64	; 0x40
 8008de4:	60da      	str	r2, [r3, #12]
 8008de6:	4b19      	ldr	r3, [pc, #100]	; (8008e4c <FLASH_SetErrorCode+0xc4>)
 8008de8:	68db      	ldr	r3, [r3, #12]
 8008dea:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008dee:	2b00      	cmp	r3, #0
 8008df0:	d008      	beq.n	8008e04 <FLASH_SetErrorCode+0x7c>
 8008df2:	4b17      	ldr	r3, [pc, #92]	; (8008e50 <FLASH_SetErrorCode+0xc8>)
 8008df4:	69db      	ldr	r3, [r3, #28]
 8008df6:	f043 0302 	orr.w	r3, r3, #2
 8008dfa:	4a15      	ldr	r2, [pc, #84]	; (8008e50 <FLASH_SetErrorCode+0xc8>)
 8008dfc:	61d3      	str	r3, [r2, #28]
 8008dfe:	4b13      	ldr	r3, [pc, #76]	; (8008e4c <FLASH_SetErrorCode+0xc4>)
 8008e00:	2280      	movs	r2, #128	; 0x80
 8008e02:	60da      	str	r2, [r3, #12]
 8008e04:	4b11      	ldr	r3, [pc, #68]	; (8008e4c <FLASH_SetErrorCode+0xc4>)
 8008e06:	68db      	ldr	r3, [r3, #12]
 8008e08:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008e0c:	2b00      	cmp	r3, #0
 8008e0e:	d009      	beq.n	8008e24 <FLASH_SetErrorCode+0x9c>
 8008e10:	4b0f      	ldr	r3, [pc, #60]	; (8008e50 <FLASH_SetErrorCode+0xc8>)
 8008e12:	69db      	ldr	r3, [r3, #28]
 8008e14:	f043 0301 	orr.w	r3, r3, #1
 8008e18:	4a0d      	ldr	r2, [pc, #52]	; (8008e50 <FLASH_SetErrorCode+0xc8>)
 8008e1a:	61d3      	str	r3, [r2, #28]
 8008e1c:	4b0b      	ldr	r3, [pc, #44]	; (8008e4c <FLASH_SetErrorCode+0xc4>)
 8008e1e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8008e22:	60da      	str	r2, [r3, #12]
 8008e24:	4b09      	ldr	r3, [pc, #36]	; (8008e4c <FLASH_SetErrorCode+0xc4>)
 8008e26:	68db      	ldr	r3, [r3, #12]
 8008e28:	f003 0302 	and.w	r3, r3, #2
 8008e2c:	2b00      	cmp	r3, #0
 8008e2e:	d008      	beq.n	8008e42 <FLASH_SetErrorCode+0xba>
 8008e30:	4b07      	ldr	r3, [pc, #28]	; (8008e50 <FLASH_SetErrorCode+0xc8>)
 8008e32:	69db      	ldr	r3, [r3, #28]
 8008e34:	f043 0320 	orr.w	r3, r3, #32
 8008e38:	4a05      	ldr	r2, [pc, #20]	; (8008e50 <FLASH_SetErrorCode+0xc8>)
 8008e3a:	61d3      	str	r3, [r2, #28]
 8008e3c:	4b03      	ldr	r3, [pc, #12]	; (8008e4c <FLASH_SetErrorCode+0xc4>)
 8008e3e:	2202      	movs	r2, #2
 8008e40:	60da      	str	r2, [r3, #12]
 8008e42:	bf00      	nop
 8008e44:	46bd      	mov	sp, r7
 8008e46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e4a:	4770      	bx	lr
 8008e4c:	40023c00 	.word	0x40023c00
 8008e50:	20000c58 	.word	0x20000c58

08008e54 <FLASH_Erase_Sector>:
 8008e54:	b480      	push	{r7}
 8008e56:	b085      	sub	sp, #20
 8008e58:	af00      	add	r7, sp, #0
 8008e5a:	6078      	str	r0, [r7, #4]
 8008e5c:	460b      	mov	r3, r1
 8008e5e:	70fb      	strb	r3, [r7, #3]
 8008e60:	2300      	movs	r3, #0
 8008e62:	60fb      	str	r3, [r7, #12]
 8008e64:	78fb      	ldrb	r3, [r7, #3]
 8008e66:	2b00      	cmp	r3, #0
 8008e68:	d102      	bne.n	8008e70 <FLASH_Erase_Sector+0x1c>
 8008e6a:	2300      	movs	r3, #0
 8008e6c:	60fb      	str	r3, [r7, #12]
 8008e6e:	e010      	b.n	8008e92 <FLASH_Erase_Sector+0x3e>
 8008e70:	78fb      	ldrb	r3, [r7, #3]
 8008e72:	2b01      	cmp	r3, #1
 8008e74:	d103      	bne.n	8008e7e <FLASH_Erase_Sector+0x2a>
 8008e76:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008e7a:	60fb      	str	r3, [r7, #12]
 8008e7c:	e009      	b.n	8008e92 <FLASH_Erase_Sector+0x3e>
 8008e7e:	78fb      	ldrb	r3, [r7, #3]
 8008e80:	2b02      	cmp	r3, #2
 8008e82:	d103      	bne.n	8008e8c <FLASH_Erase_Sector+0x38>
 8008e84:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008e88:	60fb      	str	r3, [r7, #12]
 8008e8a:	e002      	b.n	8008e92 <FLASH_Erase_Sector+0x3e>
 8008e8c:	f44f 7340 	mov.w	r3, #768	; 0x300
 8008e90:	60fb      	str	r3, [r7, #12]
 8008e92:	4b13      	ldr	r3, [pc, #76]	; (8008ee0 <FLASH_Erase_Sector+0x8c>)
 8008e94:	691b      	ldr	r3, [r3, #16]
 8008e96:	4a12      	ldr	r2, [pc, #72]	; (8008ee0 <FLASH_Erase_Sector+0x8c>)
 8008e98:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008e9c:	6113      	str	r3, [r2, #16]
 8008e9e:	4b10      	ldr	r3, [pc, #64]	; (8008ee0 <FLASH_Erase_Sector+0x8c>)
 8008ea0:	691a      	ldr	r2, [r3, #16]
 8008ea2:	490f      	ldr	r1, [pc, #60]	; (8008ee0 <FLASH_Erase_Sector+0x8c>)
 8008ea4:	68fb      	ldr	r3, [r7, #12]
 8008ea6:	4313      	orrs	r3, r2
 8008ea8:	610b      	str	r3, [r1, #16]
 8008eaa:	4b0d      	ldr	r3, [pc, #52]	; (8008ee0 <FLASH_Erase_Sector+0x8c>)
 8008eac:	691b      	ldr	r3, [r3, #16]
 8008eae:	4a0c      	ldr	r2, [pc, #48]	; (8008ee0 <FLASH_Erase_Sector+0x8c>)
 8008eb0:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8008eb4:	6113      	str	r3, [r2, #16]
 8008eb6:	4b0a      	ldr	r3, [pc, #40]	; (8008ee0 <FLASH_Erase_Sector+0x8c>)
 8008eb8:	691a      	ldr	r2, [r3, #16]
 8008eba:	687b      	ldr	r3, [r7, #4]
 8008ebc:	00db      	lsls	r3, r3, #3
 8008ebe:	4313      	orrs	r3, r2
 8008ec0:	4a07      	ldr	r2, [pc, #28]	; (8008ee0 <FLASH_Erase_Sector+0x8c>)
 8008ec2:	f043 0302 	orr.w	r3, r3, #2
 8008ec6:	6113      	str	r3, [r2, #16]
 8008ec8:	4b05      	ldr	r3, [pc, #20]	; (8008ee0 <FLASH_Erase_Sector+0x8c>)
 8008eca:	691b      	ldr	r3, [r3, #16]
 8008ecc:	4a04      	ldr	r2, [pc, #16]	; (8008ee0 <FLASH_Erase_Sector+0x8c>)
 8008ece:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008ed2:	6113      	str	r3, [r2, #16]
 8008ed4:	bf00      	nop
 8008ed6:	3714      	adds	r7, #20
 8008ed8:	46bd      	mov	sp, r7
 8008eda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ede:	4770      	bx	lr
 8008ee0:	40023c00 	.word	0x40023c00

08008ee4 <HAL_GPIO_Init>:
 8008ee4:	b480      	push	{r7}
 8008ee6:	b089      	sub	sp, #36	; 0x24
 8008ee8:	af00      	add	r7, sp, #0
 8008eea:	6078      	str	r0, [r7, #4]
 8008eec:	6039      	str	r1, [r7, #0]
 8008eee:	2300      	movs	r3, #0
 8008ef0:	617b      	str	r3, [r7, #20]
 8008ef2:	2300      	movs	r3, #0
 8008ef4:	613b      	str	r3, [r7, #16]
 8008ef6:	2300      	movs	r3, #0
 8008ef8:	61bb      	str	r3, [r7, #24]
 8008efa:	2300      	movs	r3, #0
 8008efc:	61fb      	str	r3, [r7, #28]
 8008efe:	e165      	b.n	80091cc <HAL_GPIO_Init+0x2e8>
 8008f00:	2201      	movs	r2, #1
 8008f02:	69fb      	ldr	r3, [r7, #28]
 8008f04:	fa02 f303 	lsl.w	r3, r2, r3
 8008f08:	617b      	str	r3, [r7, #20]
 8008f0a:	683b      	ldr	r3, [r7, #0]
 8008f0c:	681b      	ldr	r3, [r3, #0]
 8008f0e:	697a      	ldr	r2, [r7, #20]
 8008f10:	4013      	ands	r3, r2
 8008f12:	613b      	str	r3, [r7, #16]
 8008f14:	693a      	ldr	r2, [r7, #16]
 8008f16:	697b      	ldr	r3, [r7, #20]
 8008f18:	429a      	cmp	r2, r3
 8008f1a:	f040 8154 	bne.w	80091c6 <HAL_GPIO_Init+0x2e2>
 8008f1e:	683b      	ldr	r3, [r7, #0]
 8008f20:	685b      	ldr	r3, [r3, #4]
 8008f22:	f003 0303 	and.w	r3, r3, #3
 8008f26:	2b01      	cmp	r3, #1
 8008f28:	d005      	beq.n	8008f36 <HAL_GPIO_Init+0x52>
 8008f2a:	683b      	ldr	r3, [r7, #0]
 8008f2c:	685b      	ldr	r3, [r3, #4]
 8008f2e:	f003 0303 	and.w	r3, r3, #3
 8008f32:	2b02      	cmp	r3, #2
 8008f34:	d130      	bne.n	8008f98 <HAL_GPIO_Init+0xb4>
 8008f36:	687b      	ldr	r3, [r7, #4]
 8008f38:	689b      	ldr	r3, [r3, #8]
 8008f3a:	61bb      	str	r3, [r7, #24]
 8008f3c:	69fb      	ldr	r3, [r7, #28]
 8008f3e:	005b      	lsls	r3, r3, #1
 8008f40:	2203      	movs	r2, #3
 8008f42:	fa02 f303 	lsl.w	r3, r2, r3
 8008f46:	43db      	mvns	r3, r3
 8008f48:	69ba      	ldr	r2, [r7, #24]
 8008f4a:	4013      	ands	r3, r2
 8008f4c:	61bb      	str	r3, [r7, #24]
 8008f4e:	683b      	ldr	r3, [r7, #0]
 8008f50:	68da      	ldr	r2, [r3, #12]
 8008f52:	69fb      	ldr	r3, [r7, #28]
 8008f54:	005b      	lsls	r3, r3, #1
 8008f56:	fa02 f303 	lsl.w	r3, r2, r3
 8008f5a:	69ba      	ldr	r2, [r7, #24]
 8008f5c:	4313      	orrs	r3, r2
 8008f5e:	61bb      	str	r3, [r7, #24]
 8008f60:	687b      	ldr	r3, [r7, #4]
 8008f62:	69ba      	ldr	r2, [r7, #24]
 8008f64:	609a      	str	r2, [r3, #8]
 8008f66:	687b      	ldr	r3, [r7, #4]
 8008f68:	685b      	ldr	r3, [r3, #4]
 8008f6a:	61bb      	str	r3, [r7, #24]
 8008f6c:	2201      	movs	r2, #1
 8008f6e:	69fb      	ldr	r3, [r7, #28]
 8008f70:	fa02 f303 	lsl.w	r3, r2, r3
 8008f74:	43db      	mvns	r3, r3
 8008f76:	69ba      	ldr	r2, [r7, #24]
 8008f78:	4013      	ands	r3, r2
 8008f7a:	61bb      	str	r3, [r7, #24]
 8008f7c:	683b      	ldr	r3, [r7, #0]
 8008f7e:	685b      	ldr	r3, [r3, #4]
 8008f80:	091b      	lsrs	r3, r3, #4
 8008f82:	f003 0201 	and.w	r2, r3, #1
 8008f86:	69fb      	ldr	r3, [r7, #28]
 8008f88:	fa02 f303 	lsl.w	r3, r2, r3
 8008f8c:	69ba      	ldr	r2, [r7, #24]
 8008f8e:	4313      	orrs	r3, r2
 8008f90:	61bb      	str	r3, [r7, #24]
 8008f92:	687b      	ldr	r3, [r7, #4]
 8008f94:	69ba      	ldr	r2, [r7, #24]
 8008f96:	605a      	str	r2, [r3, #4]
 8008f98:	683b      	ldr	r3, [r7, #0]
 8008f9a:	685b      	ldr	r3, [r3, #4]
 8008f9c:	f003 0303 	and.w	r3, r3, #3
 8008fa0:	2b03      	cmp	r3, #3
 8008fa2:	d017      	beq.n	8008fd4 <HAL_GPIO_Init+0xf0>
 8008fa4:	687b      	ldr	r3, [r7, #4]
 8008fa6:	68db      	ldr	r3, [r3, #12]
 8008fa8:	61bb      	str	r3, [r7, #24]
 8008faa:	69fb      	ldr	r3, [r7, #28]
 8008fac:	005b      	lsls	r3, r3, #1
 8008fae:	2203      	movs	r2, #3
 8008fb0:	fa02 f303 	lsl.w	r3, r2, r3
 8008fb4:	43db      	mvns	r3, r3
 8008fb6:	69ba      	ldr	r2, [r7, #24]
 8008fb8:	4013      	ands	r3, r2
 8008fba:	61bb      	str	r3, [r7, #24]
 8008fbc:	683b      	ldr	r3, [r7, #0]
 8008fbe:	689a      	ldr	r2, [r3, #8]
 8008fc0:	69fb      	ldr	r3, [r7, #28]
 8008fc2:	005b      	lsls	r3, r3, #1
 8008fc4:	fa02 f303 	lsl.w	r3, r2, r3
 8008fc8:	69ba      	ldr	r2, [r7, #24]
 8008fca:	4313      	orrs	r3, r2
 8008fcc:	61bb      	str	r3, [r7, #24]
 8008fce:	687b      	ldr	r3, [r7, #4]
 8008fd0:	69ba      	ldr	r2, [r7, #24]
 8008fd2:	60da      	str	r2, [r3, #12]
 8008fd4:	683b      	ldr	r3, [r7, #0]
 8008fd6:	685b      	ldr	r3, [r3, #4]
 8008fd8:	f003 0303 	and.w	r3, r3, #3
 8008fdc:	2b02      	cmp	r3, #2
 8008fde:	d123      	bne.n	8009028 <HAL_GPIO_Init+0x144>
 8008fe0:	69fb      	ldr	r3, [r7, #28]
 8008fe2:	08da      	lsrs	r2, r3, #3
 8008fe4:	687b      	ldr	r3, [r7, #4]
 8008fe6:	3208      	adds	r2, #8
 8008fe8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008fec:	61bb      	str	r3, [r7, #24]
 8008fee:	69fb      	ldr	r3, [r7, #28]
 8008ff0:	f003 0307 	and.w	r3, r3, #7
 8008ff4:	009b      	lsls	r3, r3, #2
 8008ff6:	220f      	movs	r2, #15
 8008ff8:	fa02 f303 	lsl.w	r3, r2, r3
 8008ffc:	43db      	mvns	r3, r3
 8008ffe:	69ba      	ldr	r2, [r7, #24]
 8009000:	4013      	ands	r3, r2
 8009002:	61bb      	str	r3, [r7, #24]
 8009004:	683b      	ldr	r3, [r7, #0]
 8009006:	691a      	ldr	r2, [r3, #16]
 8009008:	69fb      	ldr	r3, [r7, #28]
 800900a:	f003 0307 	and.w	r3, r3, #7
 800900e:	009b      	lsls	r3, r3, #2
 8009010:	fa02 f303 	lsl.w	r3, r2, r3
 8009014:	69ba      	ldr	r2, [r7, #24]
 8009016:	4313      	orrs	r3, r2
 8009018:	61bb      	str	r3, [r7, #24]
 800901a:	69fb      	ldr	r3, [r7, #28]
 800901c:	08da      	lsrs	r2, r3, #3
 800901e:	687b      	ldr	r3, [r7, #4]
 8009020:	3208      	adds	r2, #8
 8009022:	69b9      	ldr	r1, [r7, #24]
 8009024:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8009028:	687b      	ldr	r3, [r7, #4]
 800902a:	681b      	ldr	r3, [r3, #0]
 800902c:	61bb      	str	r3, [r7, #24]
 800902e:	69fb      	ldr	r3, [r7, #28]
 8009030:	005b      	lsls	r3, r3, #1
 8009032:	2203      	movs	r2, #3
 8009034:	fa02 f303 	lsl.w	r3, r2, r3
 8009038:	43db      	mvns	r3, r3
 800903a:	69ba      	ldr	r2, [r7, #24]
 800903c:	4013      	ands	r3, r2
 800903e:	61bb      	str	r3, [r7, #24]
 8009040:	683b      	ldr	r3, [r7, #0]
 8009042:	685b      	ldr	r3, [r3, #4]
 8009044:	f003 0203 	and.w	r2, r3, #3
 8009048:	69fb      	ldr	r3, [r7, #28]
 800904a:	005b      	lsls	r3, r3, #1
 800904c:	fa02 f303 	lsl.w	r3, r2, r3
 8009050:	69ba      	ldr	r2, [r7, #24]
 8009052:	4313      	orrs	r3, r2
 8009054:	61bb      	str	r3, [r7, #24]
 8009056:	687b      	ldr	r3, [r7, #4]
 8009058:	69ba      	ldr	r2, [r7, #24]
 800905a:	601a      	str	r2, [r3, #0]
 800905c:	683b      	ldr	r3, [r7, #0]
 800905e:	685b      	ldr	r3, [r3, #4]
 8009060:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8009064:	2b00      	cmp	r3, #0
 8009066:	f000 80ae 	beq.w	80091c6 <HAL_GPIO_Init+0x2e2>
 800906a:	2300      	movs	r3, #0
 800906c:	60fb      	str	r3, [r7, #12]
 800906e:	4b5d      	ldr	r3, [pc, #372]	; (80091e4 <HAL_GPIO_Init+0x300>)
 8009070:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009072:	4a5c      	ldr	r2, [pc, #368]	; (80091e4 <HAL_GPIO_Init+0x300>)
 8009074:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8009078:	6453      	str	r3, [r2, #68]	; 0x44
 800907a:	4b5a      	ldr	r3, [pc, #360]	; (80091e4 <HAL_GPIO_Init+0x300>)
 800907c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800907e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8009082:	60fb      	str	r3, [r7, #12]
 8009084:	68fb      	ldr	r3, [r7, #12]
 8009086:	4a58      	ldr	r2, [pc, #352]	; (80091e8 <HAL_GPIO_Init+0x304>)
 8009088:	69fb      	ldr	r3, [r7, #28]
 800908a:	089b      	lsrs	r3, r3, #2
 800908c:	3302      	adds	r3, #2
 800908e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009092:	61bb      	str	r3, [r7, #24]
 8009094:	69fb      	ldr	r3, [r7, #28]
 8009096:	f003 0303 	and.w	r3, r3, #3
 800909a:	009b      	lsls	r3, r3, #2
 800909c:	220f      	movs	r2, #15
 800909e:	fa02 f303 	lsl.w	r3, r2, r3
 80090a2:	43db      	mvns	r3, r3
 80090a4:	69ba      	ldr	r2, [r7, #24]
 80090a6:	4013      	ands	r3, r2
 80090a8:	61bb      	str	r3, [r7, #24]
 80090aa:	687b      	ldr	r3, [r7, #4]
 80090ac:	4a4f      	ldr	r2, [pc, #316]	; (80091ec <HAL_GPIO_Init+0x308>)
 80090ae:	4293      	cmp	r3, r2
 80090b0:	d025      	beq.n	80090fe <HAL_GPIO_Init+0x21a>
 80090b2:	687b      	ldr	r3, [r7, #4]
 80090b4:	4a4e      	ldr	r2, [pc, #312]	; (80091f0 <HAL_GPIO_Init+0x30c>)
 80090b6:	4293      	cmp	r3, r2
 80090b8:	d01f      	beq.n	80090fa <HAL_GPIO_Init+0x216>
 80090ba:	687b      	ldr	r3, [r7, #4]
 80090bc:	4a4d      	ldr	r2, [pc, #308]	; (80091f4 <HAL_GPIO_Init+0x310>)
 80090be:	4293      	cmp	r3, r2
 80090c0:	d019      	beq.n	80090f6 <HAL_GPIO_Init+0x212>
 80090c2:	687b      	ldr	r3, [r7, #4]
 80090c4:	4a4c      	ldr	r2, [pc, #304]	; (80091f8 <HAL_GPIO_Init+0x314>)
 80090c6:	4293      	cmp	r3, r2
 80090c8:	d013      	beq.n	80090f2 <HAL_GPIO_Init+0x20e>
 80090ca:	687b      	ldr	r3, [r7, #4]
 80090cc:	4a4b      	ldr	r2, [pc, #300]	; (80091fc <HAL_GPIO_Init+0x318>)
 80090ce:	4293      	cmp	r3, r2
 80090d0:	d00d      	beq.n	80090ee <HAL_GPIO_Init+0x20a>
 80090d2:	687b      	ldr	r3, [r7, #4]
 80090d4:	4a4a      	ldr	r2, [pc, #296]	; (8009200 <HAL_GPIO_Init+0x31c>)
 80090d6:	4293      	cmp	r3, r2
 80090d8:	d007      	beq.n	80090ea <HAL_GPIO_Init+0x206>
 80090da:	687b      	ldr	r3, [r7, #4]
 80090dc:	4a49      	ldr	r2, [pc, #292]	; (8009204 <HAL_GPIO_Init+0x320>)
 80090de:	4293      	cmp	r3, r2
 80090e0:	d101      	bne.n	80090e6 <HAL_GPIO_Init+0x202>
 80090e2:	2306      	movs	r3, #6
 80090e4:	e00c      	b.n	8009100 <HAL_GPIO_Init+0x21c>
 80090e6:	2307      	movs	r3, #7
 80090e8:	e00a      	b.n	8009100 <HAL_GPIO_Init+0x21c>
 80090ea:	2305      	movs	r3, #5
 80090ec:	e008      	b.n	8009100 <HAL_GPIO_Init+0x21c>
 80090ee:	2304      	movs	r3, #4
 80090f0:	e006      	b.n	8009100 <HAL_GPIO_Init+0x21c>
 80090f2:	2303      	movs	r3, #3
 80090f4:	e004      	b.n	8009100 <HAL_GPIO_Init+0x21c>
 80090f6:	2302      	movs	r3, #2
 80090f8:	e002      	b.n	8009100 <HAL_GPIO_Init+0x21c>
 80090fa:	2301      	movs	r3, #1
 80090fc:	e000      	b.n	8009100 <HAL_GPIO_Init+0x21c>
 80090fe:	2300      	movs	r3, #0
 8009100:	69fa      	ldr	r2, [r7, #28]
 8009102:	f002 0203 	and.w	r2, r2, #3
 8009106:	0092      	lsls	r2, r2, #2
 8009108:	4093      	lsls	r3, r2
 800910a:	69ba      	ldr	r2, [r7, #24]
 800910c:	4313      	orrs	r3, r2
 800910e:	61bb      	str	r3, [r7, #24]
 8009110:	4935      	ldr	r1, [pc, #212]	; (80091e8 <HAL_GPIO_Init+0x304>)
 8009112:	69fb      	ldr	r3, [r7, #28]
 8009114:	089b      	lsrs	r3, r3, #2
 8009116:	3302      	adds	r3, #2
 8009118:	69ba      	ldr	r2, [r7, #24]
 800911a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800911e:	4b3a      	ldr	r3, [pc, #232]	; (8009208 <HAL_GPIO_Init+0x324>)
 8009120:	689b      	ldr	r3, [r3, #8]
 8009122:	61bb      	str	r3, [r7, #24]
 8009124:	693b      	ldr	r3, [r7, #16]
 8009126:	43db      	mvns	r3, r3
 8009128:	69ba      	ldr	r2, [r7, #24]
 800912a:	4013      	ands	r3, r2
 800912c:	61bb      	str	r3, [r7, #24]
 800912e:	683b      	ldr	r3, [r7, #0]
 8009130:	685b      	ldr	r3, [r3, #4]
 8009132:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8009136:	2b00      	cmp	r3, #0
 8009138:	d003      	beq.n	8009142 <HAL_GPIO_Init+0x25e>
 800913a:	69ba      	ldr	r2, [r7, #24]
 800913c:	693b      	ldr	r3, [r7, #16]
 800913e:	4313      	orrs	r3, r2
 8009140:	61bb      	str	r3, [r7, #24]
 8009142:	4a31      	ldr	r2, [pc, #196]	; (8009208 <HAL_GPIO_Init+0x324>)
 8009144:	69bb      	ldr	r3, [r7, #24]
 8009146:	6093      	str	r3, [r2, #8]
 8009148:	4b2f      	ldr	r3, [pc, #188]	; (8009208 <HAL_GPIO_Init+0x324>)
 800914a:	68db      	ldr	r3, [r3, #12]
 800914c:	61bb      	str	r3, [r7, #24]
 800914e:	693b      	ldr	r3, [r7, #16]
 8009150:	43db      	mvns	r3, r3
 8009152:	69ba      	ldr	r2, [r7, #24]
 8009154:	4013      	ands	r3, r2
 8009156:	61bb      	str	r3, [r7, #24]
 8009158:	683b      	ldr	r3, [r7, #0]
 800915a:	685b      	ldr	r3, [r3, #4]
 800915c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8009160:	2b00      	cmp	r3, #0
 8009162:	d003      	beq.n	800916c <HAL_GPIO_Init+0x288>
 8009164:	69ba      	ldr	r2, [r7, #24]
 8009166:	693b      	ldr	r3, [r7, #16]
 8009168:	4313      	orrs	r3, r2
 800916a:	61bb      	str	r3, [r7, #24]
 800916c:	4a26      	ldr	r2, [pc, #152]	; (8009208 <HAL_GPIO_Init+0x324>)
 800916e:	69bb      	ldr	r3, [r7, #24]
 8009170:	60d3      	str	r3, [r2, #12]
 8009172:	4b25      	ldr	r3, [pc, #148]	; (8009208 <HAL_GPIO_Init+0x324>)
 8009174:	685b      	ldr	r3, [r3, #4]
 8009176:	61bb      	str	r3, [r7, #24]
 8009178:	693b      	ldr	r3, [r7, #16]
 800917a:	43db      	mvns	r3, r3
 800917c:	69ba      	ldr	r2, [r7, #24]
 800917e:	4013      	ands	r3, r2
 8009180:	61bb      	str	r3, [r7, #24]
 8009182:	683b      	ldr	r3, [r7, #0]
 8009184:	685b      	ldr	r3, [r3, #4]
 8009186:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800918a:	2b00      	cmp	r3, #0
 800918c:	d003      	beq.n	8009196 <HAL_GPIO_Init+0x2b2>
 800918e:	69ba      	ldr	r2, [r7, #24]
 8009190:	693b      	ldr	r3, [r7, #16]
 8009192:	4313      	orrs	r3, r2
 8009194:	61bb      	str	r3, [r7, #24]
 8009196:	4a1c      	ldr	r2, [pc, #112]	; (8009208 <HAL_GPIO_Init+0x324>)
 8009198:	69bb      	ldr	r3, [r7, #24]
 800919a:	6053      	str	r3, [r2, #4]
 800919c:	4b1a      	ldr	r3, [pc, #104]	; (8009208 <HAL_GPIO_Init+0x324>)
 800919e:	681b      	ldr	r3, [r3, #0]
 80091a0:	61bb      	str	r3, [r7, #24]
 80091a2:	693b      	ldr	r3, [r7, #16]
 80091a4:	43db      	mvns	r3, r3
 80091a6:	69ba      	ldr	r2, [r7, #24]
 80091a8:	4013      	ands	r3, r2
 80091aa:	61bb      	str	r3, [r7, #24]
 80091ac:	683b      	ldr	r3, [r7, #0]
 80091ae:	685b      	ldr	r3, [r3, #4]
 80091b0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80091b4:	2b00      	cmp	r3, #0
 80091b6:	d003      	beq.n	80091c0 <HAL_GPIO_Init+0x2dc>
 80091b8:	69ba      	ldr	r2, [r7, #24]
 80091ba:	693b      	ldr	r3, [r7, #16]
 80091bc:	4313      	orrs	r3, r2
 80091be:	61bb      	str	r3, [r7, #24]
 80091c0:	4a11      	ldr	r2, [pc, #68]	; (8009208 <HAL_GPIO_Init+0x324>)
 80091c2:	69bb      	ldr	r3, [r7, #24]
 80091c4:	6013      	str	r3, [r2, #0]
 80091c6:	69fb      	ldr	r3, [r7, #28]
 80091c8:	3301      	adds	r3, #1
 80091ca:	61fb      	str	r3, [r7, #28]
 80091cc:	69fb      	ldr	r3, [r7, #28]
 80091ce:	2b0f      	cmp	r3, #15
 80091d0:	f67f ae96 	bls.w	8008f00 <HAL_GPIO_Init+0x1c>
 80091d4:	bf00      	nop
 80091d6:	bf00      	nop
 80091d8:	3724      	adds	r7, #36	; 0x24
 80091da:	46bd      	mov	sp, r7
 80091dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091e0:	4770      	bx	lr
 80091e2:	bf00      	nop
 80091e4:	40023800 	.word	0x40023800
 80091e8:	40013800 	.word	0x40013800
 80091ec:	40020000 	.word	0x40020000
 80091f0:	40020400 	.word	0x40020400
 80091f4:	40020800 	.word	0x40020800
 80091f8:	40020c00 	.word	0x40020c00
 80091fc:	40021000 	.word	0x40021000
 8009200:	40021400 	.word	0x40021400
 8009204:	40021800 	.word	0x40021800
 8009208:	40013c00 	.word	0x40013c00

0800920c <HAL_GPIO_ReadPin>:
 800920c:	b480      	push	{r7}
 800920e:	b085      	sub	sp, #20
 8009210:	af00      	add	r7, sp, #0
 8009212:	6078      	str	r0, [r7, #4]
 8009214:	460b      	mov	r3, r1
 8009216:	807b      	strh	r3, [r7, #2]
 8009218:	687b      	ldr	r3, [r7, #4]
 800921a:	691a      	ldr	r2, [r3, #16]
 800921c:	887b      	ldrh	r3, [r7, #2]
 800921e:	4013      	ands	r3, r2
 8009220:	2b00      	cmp	r3, #0
 8009222:	d002      	beq.n	800922a <HAL_GPIO_ReadPin+0x1e>
 8009224:	2301      	movs	r3, #1
 8009226:	73fb      	strb	r3, [r7, #15]
 8009228:	e001      	b.n	800922e <HAL_GPIO_ReadPin+0x22>
 800922a:	2300      	movs	r3, #0
 800922c:	73fb      	strb	r3, [r7, #15]
 800922e:	7bfb      	ldrb	r3, [r7, #15]
 8009230:	4618      	mov	r0, r3
 8009232:	3714      	adds	r7, #20
 8009234:	46bd      	mov	sp, r7
 8009236:	f85d 7b04 	ldr.w	r7, [sp], #4
 800923a:	4770      	bx	lr

0800923c <HAL_GPIO_WritePin>:
 800923c:	b480      	push	{r7}
 800923e:	b083      	sub	sp, #12
 8009240:	af00      	add	r7, sp, #0
 8009242:	6078      	str	r0, [r7, #4]
 8009244:	460b      	mov	r3, r1
 8009246:	807b      	strh	r3, [r7, #2]
 8009248:	4613      	mov	r3, r2
 800924a:	707b      	strb	r3, [r7, #1]
 800924c:	787b      	ldrb	r3, [r7, #1]
 800924e:	2b00      	cmp	r3, #0
 8009250:	d003      	beq.n	800925a <HAL_GPIO_WritePin+0x1e>
 8009252:	887a      	ldrh	r2, [r7, #2]
 8009254:	687b      	ldr	r3, [r7, #4]
 8009256:	619a      	str	r2, [r3, #24]
 8009258:	e003      	b.n	8009262 <HAL_GPIO_WritePin+0x26>
 800925a:	887b      	ldrh	r3, [r7, #2]
 800925c:	041a      	lsls	r2, r3, #16
 800925e:	687b      	ldr	r3, [r7, #4]
 8009260:	619a      	str	r2, [r3, #24]
 8009262:	bf00      	nop
 8009264:	370c      	adds	r7, #12
 8009266:	46bd      	mov	sp, r7
 8009268:	f85d 7b04 	ldr.w	r7, [sp], #4
 800926c:	4770      	bx	lr

0800926e <HAL_GPIO_TogglePin>:
 800926e:	b480      	push	{r7}
 8009270:	b085      	sub	sp, #20
 8009272:	af00      	add	r7, sp, #0
 8009274:	6078      	str	r0, [r7, #4]
 8009276:	460b      	mov	r3, r1
 8009278:	807b      	strh	r3, [r7, #2]
 800927a:	687b      	ldr	r3, [r7, #4]
 800927c:	695b      	ldr	r3, [r3, #20]
 800927e:	60fb      	str	r3, [r7, #12]
 8009280:	887a      	ldrh	r2, [r7, #2]
 8009282:	68fb      	ldr	r3, [r7, #12]
 8009284:	4013      	ands	r3, r2
 8009286:	041a      	lsls	r2, r3, #16
 8009288:	68fb      	ldr	r3, [r7, #12]
 800928a:	43d9      	mvns	r1, r3
 800928c:	887b      	ldrh	r3, [r7, #2]
 800928e:	400b      	ands	r3, r1
 8009290:	431a      	orrs	r2, r3
 8009292:	687b      	ldr	r3, [r7, #4]
 8009294:	619a      	str	r2, [r3, #24]
 8009296:	bf00      	nop
 8009298:	3714      	adds	r7, #20
 800929a:	46bd      	mov	sp, r7
 800929c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092a0:	4770      	bx	lr
	...

080092a4 <HAL_GPIO_EXTI_IRQHandler>:
 80092a4:	b580      	push	{r7, lr}
 80092a6:	b082      	sub	sp, #8
 80092a8:	af00      	add	r7, sp, #0
 80092aa:	4603      	mov	r3, r0
 80092ac:	80fb      	strh	r3, [r7, #6]
 80092ae:	4b08      	ldr	r3, [pc, #32]	; (80092d0 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80092b0:	695a      	ldr	r2, [r3, #20]
 80092b2:	88fb      	ldrh	r3, [r7, #6]
 80092b4:	4013      	ands	r3, r2
 80092b6:	2b00      	cmp	r3, #0
 80092b8:	d006      	beq.n	80092c8 <HAL_GPIO_EXTI_IRQHandler+0x24>
 80092ba:	4a05      	ldr	r2, [pc, #20]	; (80092d0 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80092bc:	88fb      	ldrh	r3, [r7, #6]
 80092be:	6153      	str	r3, [r2, #20]
 80092c0:	88fb      	ldrh	r3, [r7, #6]
 80092c2:	4618      	mov	r0, r3
 80092c4:	f7fd fa98 	bl	80067f8 <HAL_GPIO_EXTI_Callback>
 80092c8:	bf00      	nop
 80092ca:	3708      	adds	r7, #8
 80092cc:	46bd      	mov	sp, r7
 80092ce:	bd80      	pop	{r7, pc}
 80092d0:	40013c00 	.word	0x40013c00

080092d4 <HAL_PWREx_EnableOverDrive>:
 80092d4:	b580      	push	{r7, lr}
 80092d6:	b082      	sub	sp, #8
 80092d8:	af00      	add	r7, sp, #0
 80092da:	2300      	movs	r3, #0
 80092dc:	607b      	str	r3, [r7, #4]
 80092de:	2300      	movs	r3, #0
 80092e0:	603b      	str	r3, [r7, #0]
 80092e2:	4b20      	ldr	r3, [pc, #128]	; (8009364 <HAL_PWREx_EnableOverDrive+0x90>)
 80092e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80092e6:	4a1f      	ldr	r2, [pc, #124]	; (8009364 <HAL_PWREx_EnableOverDrive+0x90>)
 80092e8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80092ec:	6413      	str	r3, [r2, #64]	; 0x40
 80092ee:	4b1d      	ldr	r3, [pc, #116]	; (8009364 <HAL_PWREx_EnableOverDrive+0x90>)
 80092f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80092f2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80092f6:	603b      	str	r3, [r7, #0]
 80092f8:	683b      	ldr	r3, [r7, #0]
 80092fa:	4b1b      	ldr	r3, [pc, #108]	; (8009368 <HAL_PWREx_EnableOverDrive+0x94>)
 80092fc:	2201      	movs	r2, #1
 80092fe:	601a      	str	r2, [r3, #0]
 8009300:	f7fe f8f6 	bl	80074f0 <HAL_GetTick>
 8009304:	6078      	str	r0, [r7, #4]
 8009306:	e009      	b.n	800931c <HAL_PWREx_EnableOverDrive+0x48>
 8009308:	f7fe f8f2 	bl	80074f0 <HAL_GetTick>
 800930c:	4602      	mov	r2, r0
 800930e:	687b      	ldr	r3, [r7, #4]
 8009310:	1ad3      	subs	r3, r2, r3
 8009312:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8009316:	d901      	bls.n	800931c <HAL_PWREx_EnableOverDrive+0x48>
 8009318:	2303      	movs	r3, #3
 800931a:	e01f      	b.n	800935c <HAL_PWREx_EnableOverDrive+0x88>
 800931c:	4b13      	ldr	r3, [pc, #76]	; (800936c <HAL_PWREx_EnableOverDrive+0x98>)
 800931e:	685b      	ldr	r3, [r3, #4]
 8009320:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8009324:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009328:	d1ee      	bne.n	8009308 <HAL_PWREx_EnableOverDrive+0x34>
 800932a:	4b11      	ldr	r3, [pc, #68]	; (8009370 <HAL_PWREx_EnableOverDrive+0x9c>)
 800932c:	2201      	movs	r2, #1
 800932e:	601a      	str	r2, [r3, #0]
 8009330:	f7fe f8de 	bl	80074f0 <HAL_GetTick>
 8009334:	6078      	str	r0, [r7, #4]
 8009336:	e009      	b.n	800934c <HAL_PWREx_EnableOverDrive+0x78>
 8009338:	f7fe f8da 	bl	80074f0 <HAL_GetTick>
 800933c:	4602      	mov	r2, r0
 800933e:	687b      	ldr	r3, [r7, #4]
 8009340:	1ad3      	subs	r3, r2, r3
 8009342:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8009346:	d901      	bls.n	800934c <HAL_PWREx_EnableOverDrive+0x78>
 8009348:	2303      	movs	r3, #3
 800934a:	e007      	b.n	800935c <HAL_PWREx_EnableOverDrive+0x88>
 800934c:	4b07      	ldr	r3, [pc, #28]	; (800936c <HAL_PWREx_EnableOverDrive+0x98>)
 800934e:	685b      	ldr	r3, [r3, #4]
 8009350:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009354:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009358:	d1ee      	bne.n	8009338 <HAL_PWREx_EnableOverDrive+0x64>
 800935a:	2300      	movs	r3, #0
 800935c:	4618      	mov	r0, r3
 800935e:	3708      	adds	r7, #8
 8009360:	46bd      	mov	sp, r7
 8009362:	bd80      	pop	{r7, pc}
 8009364:	40023800 	.word	0x40023800
 8009368:	420e0040 	.word	0x420e0040
 800936c:	40007000 	.word	0x40007000
 8009370:	420e0044 	.word	0x420e0044

08009374 <HAL_RCC_ClockConfig>:
 8009374:	b580      	push	{r7, lr}
 8009376:	b084      	sub	sp, #16
 8009378:	af00      	add	r7, sp, #0
 800937a:	6078      	str	r0, [r7, #4]
 800937c:	6039      	str	r1, [r7, #0]
 800937e:	687b      	ldr	r3, [r7, #4]
 8009380:	2b00      	cmp	r3, #0
 8009382:	d101      	bne.n	8009388 <HAL_RCC_ClockConfig+0x14>
 8009384:	2301      	movs	r3, #1
 8009386:	e0cc      	b.n	8009522 <HAL_RCC_ClockConfig+0x1ae>
 8009388:	4b68      	ldr	r3, [pc, #416]	; (800952c <HAL_RCC_ClockConfig+0x1b8>)
 800938a:	681b      	ldr	r3, [r3, #0]
 800938c:	f003 030f 	and.w	r3, r3, #15
 8009390:	683a      	ldr	r2, [r7, #0]
 8009392:	429a      	cmp	r2, r3
 8009394:	d90c      	bls.n	80093b0 <HAL_RCC_ClockConfig+0x3c>
 8009396:	4b65      	ldr	r3, [pc, #404]	; (800952c <HAL_RCC_ClockConfig+0x1b8>)
 8009398:	683a      	ldr	r2, [r7, #0]
 800939a:	b2d2      	uxtb	r2, r2
 800939c:	701a      	strb	r2, [r3, #0]
 800939e:	4b63      	ldr	r3, [pc, #396]	; (800952c <HAL_RCC_ClockConfig+0x1b8>)
 80093a0:	681b      	ldr	r3, [r3, #0]
 80093a2:	f003 030f 	and.w	r3, r3, #15
 80093a6:	683a      	ldr	r2, [r7, #0]
 80093a8:	429a      	cmp	r2, r3
 80093aa:	d001      	beq.n	80093b0 <HAL_RCC_ClockConfig+0x3c>
 80093ac:	2301      	movs	r3, #1
 80093ae:	e0b8      	b.n	8009522 <HAL_RCC_ClockConfig+0x1ae>
 80093b0:	687b      	ldr	r3, [r7, #4]
 80093b2:	681b      	ldr	r3, [r3, #0]
 80093b4:	f003 0302 	and.w	r3, r3, #2
 80093b8:	2b00      	cmp	r3, #0
 80093ba:	d020      	beq.n	80093fe <HAL_RCC_ClockConfig+0x8a>
 80093bc:	687b      	ldr	r3, [r7, #4]
 80093be:	681b      	ldr	r3, [r3, #0]
 80093c0:	f003 0304 	and.w	r3, r3, #4
 80093c4:	2b00      	cmp	r3, #0
 80093c6:	d005      	beq.n	80093d4 <HAL_RCC_ClockConfig+0x60>
 80093c8:	4b59      	ldr	r3, [pc, #356]	; (8009530 <HAL_RCC_ClockConfig+0x1bc>)
 80093ca:	689b      	ldr	r3, [r3, #8]
 80093cc:	4a58      	ldr	r2, [pc, #352]	; (8009530 <HAL_RCC_ClockConfig+0x1bc>)
 80093ce:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80093d2:	6093      	str	r3, [r2, #8]
 80093d4:	687b      	ldr	r3, [r7, #4]
 80093d6:	681b      	ldr	r3, [r3, #0]
 80093d8:	f003 0308 	and.w	r3, r3, #8
 80093dc:	2b00      	cmp	r3, #0
 80093de:	d005      	beq.n	80093ec <HAL_RCC_ClockConfig+0x78>
 80093e0:	4b53      	ldr	r3, [pc, #332]	; (8009530 <HAL_RCC_ClockConfig+0x1bc>)
 80093e2:	689b      	ldr	r3, [r3, #8]
 80093e4:	4a52      	ldr	r2, [pc, #328]	; (8009530 <HAL_RCC_ClockConfig+0x1bc>)
 80093e6:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80093ea:	6093      	str	r3, [r2, #8]
 80093ec:	4b50      	ldr	r3, [pc, #320]	; (8009530 <HAL_RCC_ClockConfig+0x1bc>)
 80093ee:	689b      	ldr	r3, [r3, #8]
 80093f0:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80093f4:	687b      	ldr	r3, [r7, #4]
 80093f6:	689b      	ldr	r3, [r3, #8]
 80093f8:	494d      	ldr	r1, [pc, #308]	; (8009530 <HAL_RCC_ClockConfig+0x1bc>)
 80093fa:	4313      	orrs	r3, r2
 80093fc:	608b      	str	r3, [r1, #8]
 80093fe:	687b      	ldr	r3, [r7, #4]
 8009400:	681b      	ldr	r3, [r3, #0]
 8009402:	f003 0301 	and.w	r3, r3, #1
 8009406:	2b00      	cmp	r3, #0
 8009408:	d044      	beq.n	8009494 <HAL_RCC_ClockConfig+0x120>
 800940a:	687b      	ldr	r3, [r7, #4]
 800940c:	685b      	ldr	r3, [r3, #4]
 800940e:	2b01      	cmp	r3, #1
 8009410:	d107      	bne.n	8009422 <HAL_RCC_ClockConfig+0xae>
 8009412:	4b47      	ldr	r3, [pc, #284]	; (8009530 <HAL_RCC_ClockConfig+0x1bc>)
 8009414:	681b      	ldr	r3, [r3, #0]
 8009416:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800941a:	2b00      	cmp	r3, #0
 800941c:	d119      	bne.n	8009452 <HAL_RCC_ClockConfig+0xde>
 800941e:	2301      	movs	r3, #1
 8009420:	e07f      	b.n	8009522 <HAL_RCC_ClockConfig+0x1ae>
 8009422:	687b      	ldr	r3, [r7, #4]
 8009424:	685b      	ldr	r3, [r3, #4]
 8009426:	2b02      	cmp	r3, #2
 8009428:	d003      	beq.n	8009432 <HAL_RCC_ClockConfig+0xbe>
 800942a:	687b      	ldr	r3, [r7, #4]
 800942c:	685b      	ldr	r3, [r3, #4]
 800942e:	2b03      	cmp	r3, #3
 8009430:	d107      	bne.n	8009442 <HAL_RCC_ClockConfig+0xce>
 8009432:	4b3f      	ldr	r3, [pc, #252]	; (8009530 <HAL_RCC_ClockConfig+0x1bc>)
 8009434:	681b      	ldr	r3, [r3, #0]
 8009436:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800943a:	2b00      	cmp	r3, #0
 800943c:	d109      	bne.n	8009452 <HAL_RCC_ClockConfig+0xde>
 800943e:	2301      	movs	r3, #1
 8009440:	e06f      	b.n	8009522 <HAL_RCC_ClockConfig+0x1ae>
 8009442:	4b3b      	ldr	r3, [pc, #236]	; (8009530 <HAL_RCC_ClockConfig+0x1bc>)
 8009444:	681b      	ldr	r3, [r3, #0]
 8009446:	f003 0302 	and.w	r3, r3, #2
 800944a:	2b00      	cmp	r3, #0
 800944c:	d101      	bne.n	8009452 <HAL_RCC_ClockConfig+0xde>
 800944e:	2301      	movs	r3, #1
 8009450:	e067      	b.n	8009522 <HAL_RCC_ClockConfig+0x1ae>
 8009452:	4b37      	ldr	r3, [pc, #220]	; (8009530 <HAL_RCC_ClockConfig+0x1bc>)
 8009454:	689b      	ldr	r3, [r3, #8]
 8009456:	f023 0203 	bic.w	r2, r3, #3
 800945a:	687b      	ldr	r3, [r7, #4]
 800945c:	685b      	ldr	r3, [r3, #4]
 800945e:	4934      	ldr	r1, [pc, #208]	; (8009530 <HAL_RCC_ClockConfig+0x1bc>)
 8009460:	4313      	orrs	r3, r2
 8009462:	608b      	str	r3, [r1, #8]
 8009464:	f7fe f844 	bl	80074f0 <HAL_GetTick>
 8009468:	60f8      	str	r0, [r7, #12]
 800946a:	e00a      	b.n	8009482 <HAL_RCC_ClockConfig+0x10e>
 800946c:	f7fe f840 	bl	80074f0 <HAL_GetTick>
 8009470:	4602      	mov	r2, r0
 8009472:	68fb      	ldr	r3, [r7, #12]
 8009474:	1ad3      	subs	r3, r2, r3
 8009476:	f241 3288 	movw	r2, #5000	; 0x1388
 800947a:	4293      	cmp	r3, r2
 800947c:	d901      	bls.n	8009482 <HAL_RCC_ClockConfig+0x10e>
 800947e:	2303      	movs	r3, #3
 8009480:	e04f      	b.n	8009522 <HAL_RCC_ClockConfig+0x1ae>
 8009482:	4b2b      	ldr	r3, [pc, #172]	; (8009530 <HAL_RCC_ClockConfig+0x1bc>)
 8009484:	689b      	ldr	r3, [r3, #8]
 8009486:	f003 020c 	and.w	r2, r3, #12
 800948a:	687b      	ldr	r3, [r7, #4]
 800948c:	685b      	ldr	r3, [r3, #4]
 800948e:	009b      	lsls	r3, r3, #2
 8009490:	429a      	cmp	r2, r3
 8009492:	d1eb      	bne.n	800946c <HAL_RCC_ClockConfig+0xf8>
 8009494:	4b25      	ldr	r3, [pc, #148]	; (800952c <HAL_RCC_ClockConfig+0x1b8>)
 8009496:	681b      	ldr	r3, [r3, #0]
 8009498:	f003 030f 	and.w	r3, r3, #15
 800949c:	683a      	ldr	r2, [r7, #0]
 800949e:	429a      	cmp	r2, r3
 80094a0:	d20c      	bcs.n	80094bc <HAL_RCC_ClockConfig+0x148>
 80094a2:	4b22      	ldr	r3, [pc, #136]	; (800952c <HAL_RCC_ClockConfig+0x1b8>)
 80094a4:	683a      	ldr	r2, [r7, #0]
 80094a6:	b2d2      	uxtb	r2, r2
 80094a8:	701a      	strb	r2, [r3, #0]
 80094aa:	4b20      	ldr	r3, [pc, #128]	; (800952c <HAL_RCC_ClockConfig+0x1b8>)
 80094ac:	681b      	ldr	r3, [r3, #0]
 80094ae:	f003 030f 	and.w	r3, r3, #15
 80094b2:	683a      	ldr	r2, [r7, #0]
 80094b4:	429a      	cmp	r2, r3
 80094b6:	d001      	beq.n	80094bc <HAL_RCC_ClockConfig+0x148>
 80094b8:	2301      	movs	r3, #1
 80094ba:	e032      	b.n	8009522 <HAL_RCC_ClockConfig+0x1ae>
 80094bc:	687b      	ldr	r3, [r7, #4]
 80094be:	681b      	ldr	r3, [r3, #0]
 80094c0:	f003 0304 	and.w	r3, r3, #4
 80094c4:	2b00      	cmp	r3, #0
 80094c6:	d008      	beq.n	80094da <HAL_RCC_ClockConfig+0x166>
 80094c8:	4b19      	ldr	r3, [pc, #100]	; (8009530 <HAL_RCC_ClockConfig+0x1bc>)
 80094ca:	689b      	ldr	r3, [r3, #8]
 80094cc:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 80094d0:	687b      	ldr	r3, [r7, #4]
 80094d2:	68db      	ldr	r3, [r3, #12]
 80094d4:	4916      	ldr	r1, [pc, #88]	; (8009530 <HAL_RCC_ClockConfig+0x1bc>)
 80094d6:	4313      	orrs	r3, r2
 80094d8:	608b      	str	r3, [r1, #8]
 80094da:	687b      	ldr	r3, [r7, #4]
 80094dc:	681b      	ldr	r3, [r3, #0]
 80094de:	f003 0308 	and.w	r3, r3, #8
 80094e2:	2b00      	cmp	r3, #0
 80094e4:	d009      	beq.n	80094fa <HAL_RCC_ClockConfig+0x186>
 80094e6:	4b12      	ldr	r3, [pc, #72]	; (8009530 <HAL_RCC_ClockConfig+0x1bc>)
 80094e8:	689b      	ldr	r3, [r3, #8]
 80094ea:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80094ee:	687b      	ldr	r3, [r7, #4]
 80094f0:	691b      	ldr	r3, [r3, #16]
 80094f2:	00db      	lsls	r3, r3, #3
 80094f4:	490e      	ldr	r1, [pc, #56]	; (8009530 <HAL_RCC_ClockConfig+0x1bc>)
 80094f6:	4313      	orrs	r3, r2
 80094f8:	608b      	str	r3, [r1, #8]
 80094fa:	f000 f855 	bl	80095a8 <HAL_RCC_GetSysClockFreq>
 80094fe:	4602      	mov	r2, r0
 8009500:	4b0b      	ldr	r3, [pc, #44]	; (8009530 <HAL_RCC_ClockConfig+0x1bc>)
 8009502:	689b      	ldr	r3, [r3, #8]
 8009504:	091b      	lsrs	r3, r3, #4
 8009506:	f003 030f 	and.w	r3, r3, #15
 800950a:	490a      	ldr	r1, [pc, #40]	; (8009534 <HAL_RCC_ClockConfig+0x1c0>)
 800950c:	5ccb      	ldrb	r3, [r1, r3]
 800950e:	fa22 f303 	lsr.w	r3, r2, r3
 8009512:	4a09      	ldr	r2, [pc, #36]	; (8009538 <HAL_RCC_ClockConfig+0x1c4>)
 8009514:	6013      	str	r3, [r2, #0]
 8009516:	4b09      	ldr	r3, [pc, #36]	; (800953c <HAL_RCC_ClockConfig+0x1c8>)
 8009518:	681b      	ldr	r3, [r3, #0]
 800951a:	4618      	mov	r0, r3
 800951c:	f7fd ffa4 	bl	8007468 <HAL_InitTick>
 8009520:	2300      	movs	r3, #0
 8009522:	4618      	mov	r0, r3
 8009524:	3710      	adds	r7, #16
 8009526:	46bd      	mov	sp, r7
 8009528:	bd80      	pop	{r7, pc}
 800952a:	bf00      	nop
 800952c:	40023c00 	.word	0x40023c00
 8009530:	40023800 	.word	0x40023800
 8009534:	080112a0 	.word	0x080112a0
 8009538:	2000013c 	.word	0x2000013c
 800953c:	20000140 	.word	0x20000140

08009540 <HAL_RCC_GetHCLKFreq>:
 8009540:	b480      	push	{r7}
 8009542:	af00      	add	r7, sp, #0
 8009544:	4b03      	ldr	r3, [pc, #12]	; (8009554 <HAL_RCC_GetHCLKFreq+0x14>)
 8009546:	681b      	ldr	r3, [r3, #0]
 8009548:	4618      	mov	r0, r3
 800954a:	46bd      	mov	sp, r7
 800954c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009550:	4770      	bx	lr
 8009552:	bf00      	nop
 8009554:	2000013c 	.word	0x2000013c

08009558 <HAL_RCC_GetPCLK1Freq>:
 8009558:	b580      	push	{r7, lr}
 800955a:	af00      	add	r7, sp, #0
 800955c:	f7ff fff0 	bl	8009540 <HAL_RCC_GetHCLKFreq>
 8009560:	4602      	mov	r2, r0
 8009562:	4b05      	ldr	r3, [pc, #20]	; (8009578 <HAL_RCC_GetPCLK1Freq+0x20>)
 8009564:	689b      	ldr	r3, [r3, #8]
 8009566:	0a9b      	lsrs	r3, r3, #10
 8009568:	f003 0307 	and.w	r3, r3, #7
 800956c:	4903      	ldr	r1, [pc, #12]	; (800957c <HAL_RCC_GetPCLK1Freq+0x24>)
 800956e:	5ccb      	ldrb	r3, [r1, r3]
 8009570:	fa22 f303 	lsr.w	r3, r2, r3
 8009574:	4618      	mov	r0, r3
 8009576:	bd80      	pop	{r7, pc}
 8009578:	40023800 	.word	0x40023800
 800957c:	080112b0 	.word	0x080112b0

08009580 <HAL_RCC_GetPCLK2Freq>:
 8009580:	b580      	push	{r7, lr}
 8009582:	af00      	add	r7, sp, #0
 8009584:	f7ff ffdc 	bl	8009540 <HAL_RCC_GetHCLKFreq>
 8009588:	4602      	mov	r2, r0
 800958a:	4b05      	ldr	r3, [pc, #20]	; (80095a0 <HAL_RCC_GetPCLK2Freq+0x20>)
 800958c:	689b      	ldr	r3, [r3, #8]
 800958e:	0b5b      	lsrs	r3, r3, #13
 8009590:	f003 0307 	and.w	r3, r3, #7
 8009594:	4903      	ldr	r1, [pc, #12]	; (80095a4 <HAL_RCC_GetPCLK2Freq+0x24>)
 8009596:	5ccb      	ldrb	r3, [r1, r3]
 8009598:	fa22 f303 	lsr.w	r3, r2, r3
 800959c:	4618      	mov	r0, r3
 800959e:	bd80      	pop	{r7, pc}
 80095a0:	40023800 	.word	0x40023800
 80095a4:	080112b0 	.word	0x080112b0

080095a8 <HAL_RCC_GetSysClockFreq>:
 80095a8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80095ac:	b0ae      	sub	sp, #184	; 0xb8
 80095ae:	af00      	add	r7, sp, #0
 80095b0:	2300      	movs	r3, #0
 80095b2:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 80095b6:	2300      	movs	r3, #0
 80095b8:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80095bc:	2300      	movs	r3, #0
 80095be:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 80095c2:	2300      	movs	r3, #0
 80095c4:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 80095c8:	2300      	movs	r3, #0
 80095ca:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80095ce:	4bcb      	ldr	r3, [pc, #812]	; (80098fc <HAL_RCC_GetSysClockFreq+0x354>)
 80095d0:	689b      	ldr	r3, [r3, #8]
 80095d2:	f003 030c 	and.w	r3, r3, #12
 80095d6:	2b0c      	cmp	r3, #12
 80095d8:	f200 8206 	bhi.w	80099e8 <HAL_RCC_GetSysClockFreq+0x440>
 80095dc:	a201      	add	r2, pc, #4	; (adr r2, 80095e4 <HAL_RCC_GetSysClockFreq+0x3c>)
 80095de:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80095e2:	bf00      	nop
 80095e4:	08009619 	.word	0x08009619
 80095e8:	080099e9 	.word	0x080099e9
 80095ec:	080099e9 	.word	0x080099e9
 80095f0:	080099e9 	.word	0x080099e9
 80095f4:	08009621 	.word	0x08009621
 80095f8:	080099e9 	.word	0x080099e9
 80095fc:	080099e9 	.word	0x080099e9
 8009600:	080099e9 	.word	0x080099e9
 8009604:	08009629 	.word	0x08009629
 8009608:	080099e9 	.word	0x080099e9
 800960c:	080099e9 	.word	0x080099e9
 8009610:	080099e9 	.word	0x080099e9
 8009614:	08009819 	.word	0x08009819
 8009618:	4bb9      	ldr	r3, [pc, #740]	; (8009900 <HAL_RCC_GetSysClockFreq+0x358>)
 800961a:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800961e:	e1e7      	b.n	80099f0 <HAL_RCC_GetSysClockFreq+0x448>
 8009620:	4bb8      	ldr	r3, [pc, #736]	; (8009904 <HAL_RCC_GetSysClockFreq+0x35c>)
 8009622:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8009626:	e1e3      	b.n	80099f0 <HAL_RCC_GetSysClockFreq+0x448>
 8009628:	4bb4      	ldr	r3, [pc, #720]	; (80098fc <HAL_RCC_GetSysClockFreq+0x354>)
 800962a:	685b      	ldr	r3, [r3, #4]
 800962c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009630:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8009634:	4bb1      	ldr	r3, [pc, #708]	; (80098fc <HAL_RCC_GetSysClockFreq+0x354>)
 8009636:	685b      	ldr	r3, [r3, #4]
 8009638:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800963c:	2b00      	cmp	r3, #0
 800963e:	d071      	beq.n	8009724 <HAL_RCC_GetSysClockFreq+0x17c>
 8009640:	4bae      	ldr	r3, [pc, #696]	; (80098fc <HAL_RCC_GetSysClockFreq+0x354>)
 8009642:	685b      	ldr	r3, [r3, #4]
 8009644:	099b      	lsrs	r3, r3, #6
 8009646:	2200      	movs	r2, #0
 8009648:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800964c:	f8c7 209c 	str.w	r2, [r7, #156]	; 0x9c
 8009650:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8009654:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009658:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800965c:	2300      	movs	r3, #0
 800965e:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8009662:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 8009666:	4622      	mov	r2, r4
 8009668:	462b      	mov	r3, r5
 800966a:	f04f 0000 	mov.w	r0, #0
 800966e:	f04f 0100 	mov.w	r1, #0
 8009672:	0159      	lsls	r1, r3, #5
 8009674:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8009678:	0150      	lsls	r0, r2, #5
 800967a:	4602      	mov	r2, r0
 800967c:	460b      	mov	r3, r1
 800967e:	4621      	mov	r1, r4
 8009680:	1a51      	subs	r1, r2, r1
 8009682:	6439      	str	r1, [r7, #64]	; 0x40
 8009684:	4629      	mov	r1, r5
 8009686:	eb63 0301 	sbc.w	r3, r3, r1
 800968a:	647b      	str	r3, [r7, #68]	; 0x44
 800968c:	f04f 0200 	mov.w	r2, #0
 8009690:	f04f 0300 	mov.w	r3, #0
 8009694:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	; 0x40
 8009698:	4649      	mov	r1, r9
 800969a:	018b      	lsls	r3, r1, #6
 800969c:	4641      	mov	r1, r8
 800969e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80096a2:	4641      	mov	r1, r8
 80096a4:	018a      	lsls	r2, r1, #6
 80096a6:	4641      	mov	r1, r8
 80096a8:	1a51      	subs	r1, r2, r1
 80096aa:	63b9      	str	r1, [r7, #56]	; 0x38
 80096ac:	4649      	mov	r1, r9
 80096ae:	eb63 0301 	sbc.w	r3, r3, r1
 80096b2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80096b4:	f04f 0200 	mov.w	r2, #0
 80096b8:	f04f 0300 	mov.w	r3, #0
 80096bc:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	; 0x38
 80096c0:	4649      	mov	r1, r9
 80096c2:	00cb      	lsls	r3, r1, #3
 80096c4:	4641      	mov	r1, r8
 80096c6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80096ca:	4641      	mov	r1, r8
 80096cc:	00ca      	lsls	r2, r1, #3
 80096ce:	4610      	mov	r0, r2
 80096d0:	4619      	mov	r1, r3
 80096d2:	4603      	mov	r3, r0
 80096d4:	4622      	mov	r2, r4
 80096d6:	189b      	adds	r3, r3, r2
 80096d8:	633b      	str	r3, [r7, #48]	; 0x30
 80096da:	462b      	mov	r3, r5
 80096dc:	460a      	mov	r2, r1
 80096de:	eb42 0303 	adc.w	r3, r2, r3
 80096e2:	637b      	str	r3, [r7, #52]	; 0x34
 80096e4:	f04f 0200 	mov.w	r2, #0
 80096e8:	f04f 0300 	mov.w	r3, #0
 80096ec:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 80096f0:	4629      	mov	r1, r5
 80096f2:	024b      	lsls	r3, r1, #9
 80096f4:	4621      	mov	r1, r4
 80096f6:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80096fa:	4621      	mov	r1, r4
 80096fc:	024a      	lsls	r2, r1, #9
 80096fe:	4610      	mov	r0, r2
 8009700:	4619      	mov	r1, r3
 8009702:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8009706:	2200      	movs	r2, #0
 8009708:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800970c:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8009710:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 8009714:	f7f7 fab8 	bl	8000c88 <__aeabi_uldivmod>
 8009718:	4602      	mov	r2, r0
 800971a:	460b      	mov	r3, r1
 800971c:	4613      	mov	r3, r2
 800971e:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8009722:	e067      	b.n	80097f4 <HAL_RCC_GetSysClockFreq+0x24c>
 8009724:	4b75      	ldr	r3, [pc, #468]	; (80098fc <HAL_RCC_GetSysClockFreq+0x354>)
 8009726:	685b      	ldr	r3, [r3, #4]
 8009728:	099b      	lsrs	r3, r3, #6
 800972a:	2200      	movs	r2, #0
 800972c:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8009730:	f8c7 2084 	str.w	r2, [r7, #132]	; 0x84
 8009734:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8009738:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800973c:	67bb      	str	r3, [r7, #120]	; 0x78
 800973e:	2300      	movs	r3, #0
 8009740:	67fb      	str	r3, [r7, #124]	; 0x7c
 8009742:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	; 0x78
 8009746:	4622      	mov	r2, r4
 8009748:	462b      	mov	r3, r5
 800974a:	f04f 0000 	mov.w	r0, #0
 800974e:	f04f 0100 	mov.w	r1, #0
 8009752:	0159      	lsls	r1, r3, #5
 8009754:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8009758:	0150      	lsls	r0, r2, #5
 800975a:	4602      	mov	r2, r0
 800975c:	460b      	mov	r3, r1
 800975e:	4621      	mov	r1, r4
 8009760:	1a51      	subs	r1, r2, r1
 8009762:	62b9      	str	r1, [r7, #40]	; 0x28
 8009764:	4629      	mov	r1, r5
 8009766:	eb63 0301 	sbc.w	r3, r3, r1
 800976a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800976c:	f04f 0200 	mov.w	r2, #0
 8009770:	f04f 0300 	mov.w	r3, #0
 8009774:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	; 0x28
 8009778:	4649      	mov	r1, r9
 800977a:	018b      	lsls	r3, r1, #6
 800977c:	4641      	mov	r1, r8
 800977e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8009782:	4641      	mov	r1, r8
 8009784:	018a      	lsls	r2, r1, #6
 8009786:	4641      	mov	r1, r8
 8009788:	ebb2 0a01 	subs.w	sl, r2, r1
 800978c:	4649      	mov	r1, r9
 800978e:	eb63 0b01 	sbc.w	fp, r3, r1
 8009792:	f04f 0200 	mov.w	r2, #0
 8009796:	f04f 0300 	mov.w	r3, #0
 800979a:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800979e:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80097a2:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80097a6:	4692      	mov	sl, r2
 80097a8:	469b      	mov	fp, r3
 80097aa:	4623      	mov	r3, r4
 80097ac:	eb1a 0303 	adds.w	r3, sl, r3
 80097b0:	623b      	str	r3, [r7, #32]
 80097b2:	462b      	mov	r3, r5
 80097b4:	eb4b 0303 	adc.w	r3, fp, r3
 80097b8:	627b      	str	r3, [r7, #36]	; 0x24
 80097ba:	f04f 0200 	mov.w	r2, #0
 80097be:	f04f 0300 	mov.w	r3, #0
 80097c2:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 80097c6:	4629      	mov	r1, r5
 80097c8:	028b      	lsls	r3, r1, #10
 80097ca:	4621      	mov	r1, r4
 80097cc:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80097d0:	4621      	mov	r1, r4
 80097d2:	028a      	lsls	r2, r1, #10
 80097d4:	4610      	mov	r0, r2
 80097d6:	4619      	mov	r1, r3
 80097d8:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80097dc:	2200      	movs	r2, #0
 80097de:	673b      	str	r3, [r7, #112]	; 0x70
 80097e0:	677a      	str	r2, [r7, #116]	; 0x74
 80097e2:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 80097e6:	f7f7 fa4f 	bl	8000c88 <__aeabi_uldivmod>
 80097ea:	4602      	mov	r2, r0
 80097ec:	460b      	mov	r3, r1
 80097ee:	4613      	mov	r3, r2
 80097f0:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80097f4:	4b41      	ldr	r3, [pc, #260]	; (80098fc <HAL_RCC_GetSysClockFreq+0x354>)
 80097f6:	685b      	ldr	r3, [r3, #4]
 80097f8:	0c1b      	lsrs	r3, r3, #16
 80097fa:	f003 0303 	and.w	r3, r3, #3
 80097fe:	3301      	adds	r3, #1
 8009800:	005b      	lsls	r3, r3, #1
 8009802:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8009806:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800980a:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 800980e:	fbb2 f3f3 	udiv	r3, r2, r3
 8009812:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8009816:	e0eb      	b.n	80099f0 <HAL_RCC_GetSysClockFreq+0x448>
 8009818:	4b38      	ldr	r3, [pc, #224]	; (80098fc <HAL_RCC_GetSysClockFreq+0x354>)
 800981a:	685b      	ldr	r3, [r3, #4]
 800981c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009820:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8009824:	4b35      	ldr	r3, [pc, #212]	; (80098fc <HAL_RCC_GetSysClockFreq+0x354>)
 8009826:	685b      	ldr	r3, [r3, #4]
 8009828:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800982c:	2b00      	cmp	r3, #0
 800982e:	d06b      	beq.n	8009908 <HAL_RCC_GetSysClockFreq+0x360>
 8009830:	4b32      	ldr	r3, [pc, #200]	; (80098fc <HAL_RCC_GetSysClockFreq+0x354>)
 8009832:	685b      	ldr	r3, [r3, #4]
 8009834:	099b      	lsrs	r3, r3, #6
 8009836:	2200      	movs	r2, #0
 8009838:	66bb      	str	r3, [r7, #104]	; 0x68
 800983a:	66fa      	str	r2, [r7, #108]	; 0x6c
 800983c:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800983e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009842:	663b      	str	r3, [r7, #96]	; 0x60
 8009844:	2300      	movs	r3, #0
 8009846:	667b      	str	r3, [r7, #100]	; 0x64
 8009848:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	; 0x60
 800984c:	4622      	mov	r2, r4
 800984e:	462b      	mov	r3, r5
 8009850:	f04f 0000 	mov.w	r0, #0
 8009854:	f04f 0100 	mov.w	r1, #0
 8009858:	0159      	lsls	r1, r3, #5
 800985a:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800985e:	0150      	lsls	r0, r2, #5
 8009860:	4602      	mov	r2, r0
 8009862:	460b      	mov	r3, r1
 8009864:	4621      	mov	r1, r4
 8009866:	1a51      	subs	r1, r2, r1
 8009868:	61b9      	str	r1, [r7, #24]
 800986a:	4629      	mov	r1, r5
 800986c:	eb63 0301 	sbc.w	r3, r3, r1
 8009870:	61fb      	str	r3, [r7, #28]
 8009872:	f04f 0200 	mov.w	r2, #0
 8009876:	f04f 0300 	mov.w	r3, #0
 800987a:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 800987e:	4659      	mov	r1, fp
 8009880:	018b      	lsls	r3, r1, #6
 8009882:	4651      	mov	r1, sl
 8009884:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8009888:	4651      	mov	r1, sl
 800988a:	018a      	lsls	r2, r1, #6
 800988c:	4651      	mov	r1, sl
 800988e:	ebb2 0801 	subs.w	r8, r2, r1
 8009892:	4659      	mov	r1, fp
 8009894:	eb63 0901 	sbc.w	r9, r3, r1
 8009898:	f04f 0200 	mov.w	r2, #0
 800989c:	f04f 0300 	mov.w	r3, #0
 80098a0:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80098a4:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80098a8:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80098ac:	4690      	mov	r8, r2
 80098ae:	4699      	mov	r9, r3
 80098b0:	4623      	mov	r3, r4
 80098b2:	eb18 0303 	adds.w	r3, r8, r3
 80098b6:	613b      	str	r3, [r7, #16]
 80098b8:	462b      	mov	r3, r5
 80098ba:	eb49 0303 	adc.w	r3, r9, r3
 80098be:	617b      	str	r3, [r7, #20]
 80098c0:	f04f 0200 	mov.w	r2, #0
 80098c4:	f04f 0300 	mov.w	r3, #0
 80098c8:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 80098cc:	4629      	mov	r1, r5
 80098ce:	024b      	lsls	r3, r1, #9
 80098d0:	4621      	mov	r1, r4
 80098d2:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80098d6:	4621      	mov	r1, r4
 80098d8:	024a      	lsls	r2, r1, #9
 80098da:	4610      	mov	r0, r2
 80098dc:	4619      	mov	r1, r3
 80098de:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80098e2:	2200      	movs	r2, #0
 80098e4:	65bb      	str	r3, [r7, #88]	; 0x58
 80098e6:	65fa      	str	r2, [r7, #92]	; 0x5c
 80098e8:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 80098ec:	f7f7 f9cc 	bl	8000c88 <__aeabi_uldivmod>
 80098f0:	4602      	mov	r2, r0
 80098f2:	460b      	mov	r3, r1
 80098f4:	4613      	mov	r3, r2
 80098f6:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80098fa:	e065      	b.n	80099c8 <HAL_RCC_GetSysClockFreq+0x420>
 80098fc:	40023800 	.word	0x40023800
 8009900:	00f42400 	.word	0x00f42400
 8009904:	007a1200 	.word	0x007a1200
 8009908:	4b3d      	ldr	r3, [pc, #244]	; (8009a00 <HAL_RCC_GetSysClockFreq+0x458>)
 800990a:	685b      	ldr	r3, [r3, #4]
 800990c:	099b      	lsrs	r3, r3, #6
 800990e:	2200      	movs	r2, #0
 8009910:	4618      	mov	r0, r3
 8009912:	4611      	mov	r1, r2
 8009914:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8009918:	653b      	str	r3, [r7, #80]	; 0x50
 800991a:	2300      	movs	r3, #0
 800991c:	657b      	str	r3, [r7, #84]	; 0x54
 800991e:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	; 0x50
 8009922:	4642      	mov	r2, r8
 8009924:	464b      	mov	r3, r9
 8009926:	f04f 0000 	mov.w	r0, #0
 800992a:	f04f 0100 	mov.w	r1, #0
 800992e:	0159      	lsls	r1, r3, #5
 8009930:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8009934:	0150      	lsls	r0, r2, #5
 8009936:	4602      	mov	r2, r0
 8009938:	460b      	mov	r3, r1
 800993a:	4641      	mov	r1, r8
 800993c:	1a51      	subs	r1, r2, r1
 800993e:	60b9      	str	r1, [r7, #8]
 8009940:	4649      	mov	r1, r9
 8009942:	eb63 0301 	sbc.w	r3, r3, r1
 8009946:	60fb      	str	r3, [r7, #12]
 8009948:	f04f 0200 	mov.w	r2, #0
 800994c:	f04f 0300 	mov.w	r3, #0
 8009950:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 8009954:	4659      	mov	r1, fp
 8009956:	018b      	lsls	r3, r1, #6
 8009958:	4651      	mov	r1, sl
 800995a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800995e:	4651      	mov	r1, sl
 8009960:	018a      	lsls	r2, r1, #6
 8009962:	4651      	mov	r1, sl
 8009964:	1a54      	subs	r4, r2, r1
 8009966:	4659      	mov	r1, fp
 8009968:	eb63 0501 	sbc.w	r5, r3, r1
 800996c:	f04f 0200 	mov.w	r2, #0
 8009970:	f04f 0300 	mov.w	r3, #0
 8009974:	00eb      	lsls	r3, r5, #3
 8009976:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800997a:	00e2      	lsls	r2, r4, #3
 800997c:	4614      	mov	r4, r2
 800997e:	461d      	mov	r5, r3
 8009980:	4643      	mov	r3, r8
 8009982:	18e3      	adds	r3, r4, r3
 8009984:	603b      	str	r3, [r7, #0]
 8009986:	464b      	mov	r3, r9
 8009988:	eb45 0303 	adc.w	r3, r5, r3
 800998c:	607b      	str	r3, [r7, #4]
 800998e:	f04f 0200 	mov.w	r2, #0
 8009992:	f04f 0300 	mov.w	r3, #0
 8009996:	e9d7 4500 	ldrd	r4, r5, [r7]
 800999a:	4629      	mov	r1, r5
 800999c:	028b      	lsls	r3, r1, #10
 800999e:	4621      	mov	r1, r4
 80099a0:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80099a4:	4621      	mov	r1, r4
 80099a6:	028a      	lsls	r2, r1, #10
 80099a8:	4610      	mov	r0, r2
 80099aa:	4619      	mov	r1, r3
 80099ac:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80099b0:	2200      	movs	r2, #0
 80099b2:	64bb      	str	r3, [r7, #72]	; 0x48
 80099b4:	64fa      	str	r2, [r7, #76]	; 0x4c
 80099b6:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 80099ba:	f7f7 f965 	bl	8000c88 <__aeabi_uldivmod>
 80099be:	4602      	mov	r2, r0
 80099c0:	460b      	mov	r3, r1
 80099c2:	4613      	mov	r3, r2
 80099c4:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80099c8:	4b0d      	ldr	r3, [pc, #52]	; (8009a00 <HAL_RCC_GetSysClockFreq+0x458>)
 80099ca:	685b      	ldr	r3, [r3, #4]
 80099cc:	0f1b      	lsrs	r3, r3, #28
 80099ce:	f003 0307 	and.w	r3, r3, #7
 80099d2:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 80099d6:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 80099da:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 80099de:	fbb2 f3f3 	udiv	r3, r2, r3
 80099e2:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80099e6:	e003      	b.n	80099f0 <HAL_RCC_GetSysClockFreq+0x448>
 80099e8:	4b06      	ldr	r3, [pc, #24]	; (8009a04 <HAL_RCC_GetSysClockFreq+0x45c>)
 80099ea:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80099ee:	bf00      	nop
 80099f0:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 80099f4:	4618      	mov	r0, r3
 80099f6:	37b8      	adds	r7, #184	; 0xb8
 80099f8:	46bd      	mov	sp, r7
 80099fa:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80099fe:	bf00      	nop
 8009a00:	40023800 	.word	0x40023800
 8009a04:	00f42400 	.word	0x00f42400

08009a08 <HAL_RCC_OscConfig>:
 8009a08:	b580      	push	{r7, lr}
 8009a0a:	b086      	sub	sp, #24
 8009a0c:	af00      	add	r7, sp, #0
 8009a0e:	6078      	str	r0, [r7, #4]
 8009a10:	687b      	ldr	r3, [r7, #4]
 8009a12:	2b00      	cmp	r3, #0
 8009a14:	d101      	bne.n	8009a1a <HAL_RCC_OscConfig+0x12>
 8009a16:	2301      	movs	r3, #1
 8009a18:	e28d      	b.n	8009f36 <HAL_RCC_OscConfig+0x52e>
 8009a1a:	687b      	ldr	r3, [r7, #4]
 8009a1c:	681b      	ldr	r3, [r3, #0]
 8009a1e:	f003 0301 	and.w	r3, r3, #1
 8009a22:	2b00      	cmp	r3, #0
 8009a24:	f000 8083 	beq.w	8009b2e <HAL_RCC_OscConfig+0x126>
 8009a28:	4b94      	ldr	r3, [pc, #592]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009a2a:	689b      	ldr	r3, [r3, #8]
 8009a2c:	f003 030c 	and.w	r3, r3, #12
 8009a30:	2b04      	cmp	r3, #4
 8009a32:	d019      	beq.n	8009a68 <HAL_RCC_OscConfig+0x60>
 8009a34:	4b91      	ldr	r3, [pc, #580]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009a36:	689b      	ldr	r3, [r3, #8]
 8009a38:	f003 030c 	and.w	r3, r3, #12
 8009a3c:	2b08      	cmp	r3, #8
 8009a3e:	d106      	bne.n	8009a4e <HAL_RCC_OscConfig+0x46>
 8009a40:	4b8e      	ldr	r3, [pc, #568]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009a42:	685b      	ldr	r3, [r3, #4]
 8009a44:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009a48:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8009a4c:	d00c      	beq.n	8009a68 <HAL_RCC_OscConfig+0x60>
 8009a4e:	4b8b      	ldr	r3, [pc, #556]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009a50:	689b      	ldr	r3, [r3, #8]
 8009a52:	f003 030c 	and.w	r3, r3, #12
 8009a56:	2b0c      	cmp	r3, #12
 8009a58:	d112      	bne.n	8009a80 <HAL_RCC_OscConfig+0x78>
 8009a5a:	4b88      	ldr	r3, [pc, #544]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009a5c:	685b      	ldr	r3, [r3, #4]
 8009a5e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009a62:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8009a66:	d10b      	bne.n	8009a80 <HAL_RCC_OscConfig+0x78>
 8009a68:	4b84      	ldr	r3, [pc, #528]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009a6a:	681b      	ldr	r3, [r3, #0]
 8009a6c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009a70:	2b00      	cmp	r3, #0
 8009a72:	d05b      	beq.n	8009b2c <HAL_RCC_OscConfig+0x124>
 8009a74:	687b      	ldr	r3, [r7, #4]
 8009a76:	685b      	ldr	r3, [r3, #4]
 8009a78:	2b00      	cmp	r3, #0
 8009a7a:	d157      	bne.n	8009b2c <HAL_RCC_OscConfig+0x124>
 8009a7c:	2301      	movs	r3, #1
 8009a7e:	e25a      	b.n	8009f36 <HAL_RCC_OscConfig+0x52e>
 8009a80:	687b      	ldr	r3, [r7, #4]
 8009a82:	685b      	ldr	r3, [r3, #4]
 8009a84:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009a88:	d106      	bne.n	8009a98 <HAL_RCC_OscConfig+0x90>
 8009a8a:	4b7c      	ldr	r3, [pc, #496]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009a8c:	681b      	ldr	r3, [r3, #0]
 8009a8e:	4a7b      	ldr	r2, [pc, #492]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009a90:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009a94:	6013      	str	r3, [r2, #0]
 8009a96:	e01d      	b.n	8009ad4 <HAL_RCC_OscConfig+0xcc>
 8009a98:	687b      	ldr	r3, [r7, #4]
 8009a9a:	685b      	ldr	r3, [r3, #4]
 8009a9c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8009aa0:	d10c      	bne.n	8009abc <HAL_RCC_OscConfig+0xb4>
 8009aa2:	4b76      	ldr	r3, [pc, #472]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009aa4:	681b      	ldr	r3, [r3, #0]
 8009aa6:	4a75      	ldr	r2, [pc, #468]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009aa8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8009aac:	6013      	str	r3, [r2, #0]
 8009aae:	4b73      	ldr	r3, [pc, #460]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009ab0:	681b      	ldr	r3, [r3, #0]
 8009ab2:	4a72      	ldr	r2, [pc, #456]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009ab4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009ab8:	6013      	str	r3, [r2, #0]
 8009aba:	e00b      	b.n	8009ad4 <HAL_RCC_OscConfig+0xcc>
 8009abc:	4b6f      	ldr	r3, [pc, #444]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009abe:	681b      	ldr	r3, [r3, #0]
 8009ac0:	4a6e      	ldr	r2, [pc, #440]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009ac2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8009ac6:	6013      	str	r3, [r2, #0]
 8009ac8:	4b6c      	ldr	r3, [pc, #432]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009aca:	681b      	ldr	r3, [r3, #0]
 8009acc:	4a6b      	ldr	r2, [pc, #428]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009ace:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8009ad2:	6013      	str	r3, [r2, #0]
 8009ad4:	687b      	ldr	r3, [r7, #4]
 8009ad6:	685b      	ldr	r3, [r3, #4]
 8009ad8:	2b00      	cmp	r3, #0
 8009ada:	d013      	beq.n	8009b04 <HAL_RCC_OscConfig+0xfc>
 8009adc:	f7fd fd08 	bl	80074f0 <HAL_GetTick>
 8009ae0:	6138      	str	r0, [r7, #16]
 8009ae2:	e008      	b.n	8009af6 <HAL_RCC_OscConfig+0xee>
 8009ae4:	f7fd fd04 	bl	80074f0 <HAL_GetTick>
 8009ae8:	4602      	mov	r2, r0
 8009aea:	693b      	ldr	r3, [r7, #16]
 8009aec:	1ad3      	subs	r3, r2, r3
 8009aee:	2b64      	cmp	r3, #100	; 0x64
 8009af0:	d901      	bls.n	8009af6 <HAL_RCC_OscConfig+0xee>
 8009af2:	2303      	movs	r3, #3
 8009af4:	e21f      	b.n	8009f36 <HAL_RCC_OscConfig+0x52e>
 8009af6:	4b61      	ldr	r3, [pc, #388]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009af8:	681b      	ldr	r3, [r3, #0]
 8009afa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009afe:	2b00      	cmp	r3, #0
 8009b00:	d0f0      	beq.n	8009ae4 <HAL_RCC_OscConfig+0xdc>
 8009b02:	e014      	b.n	8009b2e <HAL_RCC_OscConfig+0x126>
 8009b04:	f7fd fcf4 	bl	80074f0 <HAL_GetTick>
 8009b08:	6138      	str	r0, [r7, #16]
 8009b0a:	e008      	b.n	8009b1e <HAL_RCC_OscConfig+0x116>
 8009b0c:	f7fd fcf0 	bl	80074f0 <HAL_GetTick>
 8009b10:	4602      	mov	r2, r0
 8009b12:	693b      	ldr	r3, [r7, #16]
 8009b14:	1ad3      	subs	r3, r2, r3
 8009b16:	2b64      	cmp	r3, #100	; 0x64
 8009b18:	d901      	bls.n	8009b1e <HAL_RCC_OscConfig+0x116>
 8009b1a:	2303      	movs	r3, #3
 8009b1c:	e20b      	b.n	8009f36 <HAL_RCC_OscConfig+0x52e>
 8009b1e:	4b57      	ldr	r3, [pc, #348]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009b20:	681b      	ldr	r3, [r3, #0]
 8009b22:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009b26:	2b00      	cmp	r3, #0
 8009b28:	d1f0      	bne.n	8009b0c <HAL_RCC_OscConfig+0x104>
 8009b2a:	e000      	b.n	8009b2e <HAL_RCC_OscConfig+0x126>
 8009b2c:	bf00      	nop
 8009b2e:	687b      	ldr	r3, [r7, #4]
 8009b30:	681b      	ldr	r3, [r3, #0]
 8009b32:	f003 0302 	and.w	r3, r3, #2
 8009b36:	2b00      	cmp	r3, #0
 8009b38:	d06f      	beq.n	8009c1a <HAL_RCC_OscConfig+0x212>
 8009b3a:	4b50      	ldr	r3, [pc, #320]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009b3c:	689b      	ldr	r3, [r3, #8]
 8009b3e:	f003 030c 	and.w	r3, r3, #12
 8009b42:	2b00      	cmp	r3, #0
 8009b44:	d017      	beq.n	8009b76 <HAL_RCC_OscConfig+0x16e>
 8009b46:	4b4d      	ldr	r3, [pc, #308]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009b48:	689b      	ldr	r3, [r3, #8]
 8009b4a:	f003 030c 	and.w	r3, r3, #12
 8009b4e:	2b08      	cmp	r3, #8
 8009b50:	d105      	bne.n	8009b5e <HAL_RCC_OscConfig+0x156>
 8009b52:	4b4a      	ldr	r3, [pc, #296]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009b54:	685b      	ldr	r3, [r3, #4]
 8009b56:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009b5a:	2b00      	cmp	r3, #0
 8009b5c:	d00b      	beq.n	8009b76 <HAL_RCC_OscConfig+0x16e>
 8009b5e:	4b47      	ldr	r3, [pc, #284]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009b60:	689b      	ldr	r3, [r3, #8]
 8009b62:	f003 030c 	and.w	r3, r3, #12
 8009b66:	2b0c      	cmp	r3, #12
 8009b68:	d11c      	bne.n	8009ba4 <HAL_RCC_OscConfig+0x19c>
 8009b6a:	4b44      	ldr	r3, [pc, #272]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009b6c:	685b      	ldr	r3, [r3, #4]
 8009b6e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009b72:	2b00      	cmp	r3, #0
 8009b74:	d116      	bne.n	8009ba4 <HAL_RCC_OscConfig+0x19c>
 8009b76:	4b41      	ldr	r3, [pc, #260]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009b78:	681b      	ldr	r3, [r3, #0]
 8009b7a:	f003 0302 	and.w	r3, r3, #2
 8009b7e:	2b00      	cmp	r3, #0
 8009b80:	d005      	beq.n	8009b8e <HAL_RCC_OscConfig+0x186>
 8009b82:	687b      	ldr	r3, [r7, #4]
 8009b84:	68db      	ldr	r3, [r3, #12]
 8009b86:	2b01      	cmp	r3, #1
 8009b88:	d001      	beq.n	8009b8e <HAL_RCC_OscConfig+0x186>
 8009b8a:	2301      	movs	r3, #1
 8009b8c:	e1d3      	b.n	8009f36 <HAL_RCC_OscConfig+0x52e>
 8009b8e:	4b3b      	ldr	r3, [pc, #236]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009b90:	681b      	ldr	r3, [r3, #0]
 8009b92:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8009b96:	687b      	ldr	r3, [r7, #4]
 8009b98:	691b      	ldr	r3, [r3, #16]
 8009b9a:	00db      	lsls	r3, r3, #3
 8009b9c:	4937      	ldr	r1, [pc, #220]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009b9e:	4313      	orrs	r3, r2
 8009ba0:	600b      	str	r3, [r1, #0]
 8009ba2:	e03a      	b.n	8009c1a <HAL_RCC_OscConfig+0x212>
 8009ba4:	687b      	ldr	r3, [r7, #4]
 8009ba6:	68db      	ldr	r3, [r3, #12]
 8009ba8:	2b00      	cmp	r3, #0
 8009baa:	d020      	beq.n	8009bee <HAL_RCC_OscConfig+0x1e6>
 8009bac:	4b34      	ldr	r3, [pc, #208]	; (8009c80 <HAL_RCC_OscConfig+0x278>)
 8009bae:	2201      	movs	r2, #1
 8009bb0:	601a      	str	r2, [r3, #0]
 8009bb2:	f7fd fc9d 	bl	80074f0 <HAL_GetTick>
 8009bb6:	6138      	str	r0, [r7, #16]
 8009bb8:	e008      	b.n	8009bcc <HAL_RCC_OscConfig+0x1c4>
 8009bba:	f7fd fc99 	bl	80074f0 <HAL_GetTick>
 8009bbe:	4602      	mov	r2, r0
 8009bc0:	693b      	ldr	r3, [r7, #16]
 8009bc2:	1ad3      	subs	r3, r2, r3
 8009bc4:	2b02      	cmp	r3, #2
 8009bc6:	d901      	bls.n	8009bcc <HAL_RCC_OscConfig+0x1c4>
 8009bc8:	2303      	movs	r3, #3
 8009bca:	e1b4      	b.n	8009f36 <HAL_RCC_OscConfig+0x52e>
 8009bcc:	4b2b      	ldr	r3, [pc, #172]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009bce:	681b      	ldr	r3, [r3, #0]
 8009bd0:	f003 0302 	and.w	r3, r3, #2
 8009bd4:	2b00      	cmp	r3, #0
 8009bd6:	d0f0      	beq.n	8009bba <HAL_RCC_OscConfig+0x1b2>
 8009bd8:	4b28      	ldr	r3, [pc, #160]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009bda:	681b      	ldr	r3, [r3, #0]
 8009bdc:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8009be0:	687b      	ldr	r3, [r7, #4]
 8009be2:	691b      	ldr	r3, [r3, #16]
 8009be4:	00db      	lsls	r3, r3, #3
 8009be6:	4925      	ldr	r1, [pc, #148]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009be8:	4313      	orrs	r3, r2
 8009bea:	600b      	str	r3, [r1, #0]
 8009bec:	e015      	b.n	8009c1a <HAL_RCC_OscConfig+0x212>
 8009bee:	4b24      	ldr	r3, [pc, #144]	; (8009c80 <HAL_RCC_OscConfig+0x278>)
 8009bf0:	2200      	movs	r2, #0
 8009bf2:	601a      	str	r2, [r3, #0]
 8009bf4:	f7fd fc7c 	bl	80074f0 <HAL_GetTick>
 8009bf8:	6138      	str	r0, [r7, #16]
 8009bfa:	e008      	b.n	8009c0e <HAL_RCC_OscConfig+0x206>
 8009bfc:	f7fd fc78 	bl	80074f0 <HAL_GetTick>
 8009c00:	4602      	mov	r2, r0
 8009c02:	693b      	ldr	r3, [r7, #16]
 8009c04:	1ad3      	subs	r3, r2, r3
 8009c06:	2b02      	cmp	r3, #2
 8009c08:	d901      	bls.n	8009c0e <HAL_RCC_OscConfig+0x206>
 8009c0a:	2303      	movs	r3, #3
 8009c0c:	e193      	b.n	8009f36 <HAL_RCC_OscConfig+0x52e>
 8009c0e:	4b1b      	ldr	r3, [pc, #108]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009c10:	681b      	ldr	r3, [r3, #0]
 8009c12:	f003 0302 	and.w	r3, r3, #2
 8009c16:	2b00      	cmp	r3, #0
 8009c18:	d1f0      	bne.n	8009bfc <HAL_RCC_OscConfig+0x1f4>
 8009c1a:	687b      	ldr	r3, [r7, #4]
 8009c1c:	681b      	ldr	r3, [r3, #0]
 8009c1e:	f003 0308 	and.w	r3, r3, #8
 8009c22:	2b00      	cmp	r3, #0
 8009c24:	d036      	beq.n	8009c94 <HAL_RCC_OscConfig+0x28c>
 8009c26:	687b      	ldr	r3, [r7, #4]
 8009c28:	695b      	ldr	r3, [r3, #20]
 8009c2a:	2b00      	cmp	r3, #0
 8009c2c:	d016      	beq.n	8009c5c <HAL_RCC_OscConfig+0x254>
 8009c2e:	4b15      	ldr	r3, [pc, #84]	; (8009c84 <HAL_RCC_OscConfig+0x27c>)
 8009c30:	2201      	movs	r2, #1
 8009c32:	601a      	str	r2, [r3, #0]
 8009c34:	f7fd fc5c 	bl	80074f0 <HAL_GetTick>
 8009c38:	6138      	str	r0, [r7, #16]
 8009c3a:	e008      	b.n	8009c4e <HAL_RCC_OscConfig+0x246>
 8009c3c:	f7fd fc58 	bl	80074f0 <HAL_GetTick>
 8009c40:	4602      	mov	r2, r0
 8009c42:	693b      	ldr	r3, [r7, #16]
 8009c44:	1ad3      	subs	r3, r2, r3
 8009c46:	2b02      	cmp	r3, #2
 8009c48:	d901      	bls.n	8009c4e <HAL_RCC_OscConfig+0x246>
 8009c4a:	2303      	movs	r3, #3
 8009c4c:	e173      	b.n	8009f36 <HAL_RCC_OscConfig+0x52e>
 8009c4e:	4b0b      	ldr	r3, [pc, #44]	; (8009c7c <HAL_RCC_OscConfig+0x274>)
 8009c50:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009c52:	f003 0302 	and.w	r3, r3, #2
 8009c56:	2b00      	cmp	r3, #0
 8009c58:	d0f0      	beq.n	8009c3c <HAL_RCC_OscConfig+0x234>
 8009c5a:	e01b      	b.n	8009c94 <HAL_RCC_OscConfig+0x28c>
 8009c5c:	4b09      	ldr	r3, [pc, #36]	; (8009c84 <HAL_RCC_OscConfig+0x27c>)
 8009c5e:	2200      	movs	r2, #0
 8009c60:	601a      	str	r2, [r3, #0]
 8009c62:	f7fd fc45 	bl	80074f0 <HAL_GetTick>
 8009c66:	6138      	str	r0, [r7, #16]
 8009c68:	e00e      	b.n	8009c88 <HAL_RCC_OscConfig+0x280>
 8009c6a:	f7fd fc41 	bl	80074f0 <HAL_GetTick>
 8009c6e:	4602      	mov	r2, r0
 8009c70:	693b      	ldr	r3, [r7, #16]
 8009c72:	1ad3      	subs	r3, r2, r3
 8009c74:	2b02      	cmp	r3, #2
 8009c76:	d907      	bls.n	8009c88 <HAL_RCC_OscConfig+0x280>
 8009c78:	2303      	movs	r3, #3
 8009c7a:	e15c      	b.n	8009f36 <HAL_RCC_OscConfig+0x52e>
 8009c7c:	40023800 	.word	0x40023800
 8009c80:	42470000 	.word	0x42470000
 8009c84:	42470e80 	.word	0x42470e80
 8009c88:	4b8a      	ldr	r3, [pc, #552]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009c8a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009c8c:	f003 0302 	and.w	r3, r3, #2
 8009c90:	2b00      	cmp	r3, #0
 8009c92:	d1ea      	bne.n	8009c6a <HAL_RCC_OscConfig+0x262>
 8009c94:	687b      	ldr	r3, [r7, #4]
 8009c96:	681b      	ldr	r3, [r3, #0]
 8009c98:	f003 0304 	and.w	r3, r3, #4
 8009c9c:	2b00      	cmp	r3, #0
 8009c9e:	f000 8097 	beq.w	8009dd0 <HAL_RCC_OscConfig+0x3c8>
 8009ca2:	2300      	movs	r3, #0
 8009ca4:	75fb      	strb	r3, [r7, #23]
 8009ca6:	4b83      	ldr	r3, [pc, #524]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009ca8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009caa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009cae:	2b00      	cmp	r3, #0
 8009cb0:	d10f      	bne.n	8009cd2 <HAL_RCC_OscConfig+0x2ca>
 8009cb2:	2300      	movs	r3, #0
 8009cb4:	60bb      	str	r3, [r7, #8]
 8009cb6:	4b7f      	ldr	r3, [pc, #508]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009cb8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009cba:	4a7e      	ldr	r2, [pc, #504]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009cbc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8009cc0:	6413      	str	r3, [r2, #64]	; 0x40
 8009cc2:	4b7c      	ldr	r3, [pc, #496]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009cc4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009cc6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009cca:	60bb      	str	r3, [r7, #8]
 8009ccc:	68bb      	ldr	r3, [r7, #8]
 8009cce:	2301      	movs	r3, #1
 8009cd0:	75fb      	strb	r3, [r7, #23]
 8009cd2:	4b79      	ldr	r3, [pc, #484]	; (8009eb8 <HAL_RCC_OscConfig+0x4b0>)
 8009cd4:	681b      	ldr	r3, [r3, #0]
 8009cd6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009cda:	2b00      	cmp	r3, #0
 8009cdc:	d118      	bne.n	8009d10 <HAL_RCC_OscConfig+0x308>
 8009cde:	4b76      	ldr	r3, [pc, #472]	; (8009eb8 <HAL_RCC_OscConfig+0x4b0>)
 8009ce0:	681b      	ldr	r3, [r3, #0]
 8009ce2:	4a75      	ldr	r2, [pc, #468]	; (8009eb8 <HAL_RCC_OscConfig+0x4b0>)
 8009ce4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009ce8:	6013      	str	r3, [r2, #0]
 8009cea:	f7fd fc01 	bl	80074f0 <HAL_GetTick>
 8009cee:	6138      	str	r0, [r7, #16]
 8009cf0:	e008      	b.n	8009d04 <HAL_RCC_OscConfig+0x2fc>
 8009cf2:	f7fd fbfd 	bl	80074f0 <HAL_GetTick>
 8009cf6:	4602      	mov	r2, r0
 8009cf8:	693b      	ldr	r3, [r7, #16]
 8009cfa:	1ad3      	subs	r3, r2, r3
 8009cfc:	2b02      	cmp	r3, #2
 8009cfe:	d901      	bls.n	8009d04 <HAL_RCC_OscConfig+0x2fc>
 8009d00:	2303      	movs	r3, #3
 8009d02:	e118      	b.n	8009f36 <HAL_RCC_OscConfig+0x52e>
 8009d04:	4b6c      	ldr	r3, [pc, #432]	; (8009eb8 <HAL_RCC_OscConfig+0x4b0>)
 8009d06:	681b      	ldr	r3, [r3, #0]
 8009d08:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009d0c:	2b00      	cmp	r3, #0
 8009d0e:	d0f0      	beq.n	8009cf2 <HAL_RCC_OscConfig+0x2ea>
 8009d10:	687b      	ldr	r3, [r7, #4]
 8009d12:	689b      	ldr	r3, [r3, #8]
 8009d14:	2b01      	cmp	r3, #1
 8009d16:	d106      	bne.n	8009d26 <HAL_RCC_OscConfig+0x31e>
 8009d18:	4b66      	ldr	r3, [pc, #408]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009d1a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009d1c:	4a65      	ldr	r2, [pc, #404]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009d1e:	f043 0301 	orr.w	r3, r3, #1
 8009d22:	6713      	str	r3, [r2, #112]	; 0x70
 8009d24:	e01c      	b.n	8009d60 <HAL_RCC_OscConfig+0x358>
 8009d26:	687b      	ldr	r3, [r7, #4]
 8009d28:	689b      	ldr	r3, [r3, #8]
 8009d2a:	2b05      	cmp	r3, #5
 8009d2c:	d10c      	bne.n	8009d48 <HAL_RCC_OscConfig+0x340>
 8009d2e:	4b61      	ldr	r3, [pc, #388]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009d30:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009d32:	4a60      	ldr	r2, [pc, #384]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009d34:	f043 0304 	orr.w	r3, r3, #4
 8009d38:	6713      	str	r3, [r2, #112]	; 0x70
 8009d3a:	4b5e      	ldr	r3, [pc, #376]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009d3c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009d3e:	4a5d      	ldr	r2, [pc, #372]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009d40:	f043 0301 	orr.w	r3, r3, #1
 8009d44:	6713      	str	r3, [r2, #112]	; 0x70
 8009d46:	e00b      	b.n	8009d60 <HAL_RCC_OscConfig+0x358>
 8009d48:	4b5a      	ldr	r3, [pc, #360]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009d4a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009d4c:	4a59      	ldr	r2, [pc, #356]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009d4e:	f023 0301 	bic.w	r3, r3, #1
 8009d52:	6713      	str	r3, [r2, #112]	; 0x70
 8009d54:	4b57      	ldr	r3, [pc, #348]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009d56:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009d58:	4a56      	ldr	r2, [pc, #344]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009d5a:	f023 0304 	bic.w	r3, r3, #4
 8009d5e:	6713      	str	r3, [r2, #112]	; 0x70
 8009d60:	687b      	ldr	r3, [r7, #4]
 8009d62:	689b      	ldr	r3, [r3, #8]
 8009d64:	2b00      	cmp	r3, #0
 8009d66:	d015      	beq.n	8009d94 <HAL_RCC_OscConfig+0x38c>
 8009d68:	f7fd fbc2 	bl	80074f0 <HAL_GetTick>
 8009d6c:	6138      	str	r0, [r7, #16]
 8009d6e:	e00a      	b.n	8009d86 <HAL_RCC_OscConfig+0x37e>
 8009d70:	f7fd fbbe 	bl	80074f0 <HAL_GetTick>
 8009d74:	4602      	mov	r2, r0
 8009d76:	693b      	ldr	r3, [r7, #16]
 8009d78:	1ad3      	subs	r3, r2, r3
 8009d7a:	f241 3288 	movw	r2, #5000	; 0x1388
 8009d7e:	4293      	cmp	r3, r2
 8009d80:	d901      	bls.n	8009d86 <HAL_RCC_OscConfig+0x37e>
 8009d82:	2303      	movs	r3, #3
 8009d84:	e0d7      	b.n	8009f36 <HAL_RCC_OscConfig+0x52e>
 8009d86:	4b4b      	ldr	r3, [pc, #300]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009d88:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009d8a:	f003 0302 	and.w	r3, r3, #2
 8009d8e:	2b00      	cmp	r3, #0
 8009d90:	d0ee      	beq.n	8009d70 <HAL_RCC_OscConfig+0x368>
 8009d92:	e014      	b.n	8009dbe <HAL_RCC_OscConfig+0x3b6>
 8009d94:	f7fd fbac 	bl	80074f0 <HAL_GetTick>
 8009d98:	6138      	str	r0, [r7, #16]
 8009d9a:	e00a      	b.n	8009db2 <HAL_RCC_OscConfig+0x3aa>
 8009d9c:	f7fd fba8 	bl	80074f0 <HAL_GetTick>
 8009da0:	4602      	mov	r2, r0
 8009da2:	693b      	ldr	r3, [r7, #16]
 8009da4:	1ad3      	subs	r3, r2, r3
 8009da6:	f241 3288 	movw	r2, #5000	; 0x1388
 8009daa:	4293      	cmp	r3, r2
 8009dac:	d901      	bls.n	8009db2 <HAL_RCC_OscConfig+0x3aa>
 8009dae:	2303      	movs	r3, #3
 8009db0:	e0c1      	b.n	8009f36 <HAL_RCC_OscConfig+0x52e>
 8009db2:	4b40      	ldr	r3, [pc, #256]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009db4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009db6:	f003 0302 	and.w	r3, r3, #2
 8009dba:	2b00      	cmp	r3, #0
 8009dbc:	d1ee      	bne.n	8009d9c <HAL_RCC_OscConfig+0x394>
 8009dbe:	7dfb      	ldrb	r3, [r7, #23]
 8009dc0:	2b01      	cmp	r3, #1
 8009dc2:	d105      	bne.n	8009dd0 <HAL_RCC_OscConfig+0x3c8>
 8009dc4:	4b3b      	ldr	r3, [pc, #236]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009dc6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009dc8:	4a3a      	ldr	r2, [pc, #232]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009dca:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8009dce:	6413      	str	r3, [r2, #64]	; 0x40
 8009dd0:	687b      	ldr	r3, [r7, #4]
 8009dd2:	699b      	ldr	r3, [r3, #24]
 8009dd4:	2b00      	cmp	r3, #0
 8009dd6:	f000 80ad 	beq.w	8009f34 <HAL_RCC_OscConfig+0x52c>
 8009dda:	4b36      	ldr	r3, [pc, #216]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009ddc:	689b      	ldr	r3, [r3, #8]
 8009dde:	f003 030c 	and.w	r3, r3, #12
 8009de2:	2b08      	cmp	r3, #8
 8009de4:	d060      	beq.n	8009ea8 <HAL_RCC_OscConfig+0x4a0>
 8009de6:	687b      	ldr	r3, [r7, #4]
 8009de8:	699b      	ldr	r3, [r3, #24]
 8009dea:	2b02      	cmp	r3, #2
 8009dec:	d145      	bne.n	8009e7a <HAL_RCC_OscConfig+0x472>
 8009dee:	4b33      	ldr	r3, [pc, #204]	; (8009ebc <HAL_RCC_OscConfig+0x4b4>)
 8009df0:	2200      	movs	r2, #0
 8009df2:	601a      	str	r2, [r3, #0]
 8009df4:	f7fd fb7c 	bl	80074f0 <HAL_GetTick>
 8009df8:	6138      	str	r0, [r7, #16]
 8009dfa:	e008      	b.n	8009e0e <HAL_RCC_OscConfig+0x406>
 8009dfc:	f7fd fb78 	bl	80074f0 <HAL_GetTick>
 8009e00:	4602      	mov	r2, r0
 8009e02:	693b      	ldr	r3, [r7, #16]
 8009e04:	1ad3      	subs	r3, r2, r3
 8009e06:	2b02      	cmp	r3, #2
 8009e08:	d901      	bls.n	8009e0e <HAL_RCC_OscConfig+0x406>
 8009e0a:	2303      	movs	r3, #3
 8009e0c:	e093      	b.n	8009f36 <HAL_RCC_OscConfig+0x52e>
 8009e0e:	4b29      	ldr	r3, [pc, #164]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009e10:	681b      	ldr	r3, [r3, #0]
 8009e12:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009e16:	2b00      	cmp	r3, #0
 8009e18:	d1f0      	bne.n	8009dfc <HAL_RCC_OscConfig+0x3f4>
 8009e1a:	687b      	ldr	r3, [r7, #4]
 8009e1c:	69da      	ldr	r2, [r3, #28]
 8009e1e:	687b      	ldr	r3, [r7, #4]
 8009e20:	6a1b      	ldr	r3, [r3, #32]
 8009e22:	431a      	orrs	r2, r3
 8009e24:	687b      	ldr	r3, [r7, #4]
 8009e26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009e28:	019b      	lsls	r3, r3, #6
 8009e2a:	431a      	orrs	r2, r3
 8009e2c:	687b      	ldr	r3, [r7, #4]
 8009e2e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009e30:	085b      	lsrs	r3, r3, #1
 8009e32:	3b01      	subs	r3, #1
 8009e34:	041b      	lsls	r3, r3, #16
 8009e36:	431a      	orrs	r2, r3
 8009e38:	687b      	ldr	r3, [r7, #4]
 8009e3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009e3c:	061b      	lsls	r3, r3, #24
 8009e3e:	431a      	orrs	r2, r3
 8009e40:	687b      	ldr	r3, [r7, #4]
 8009e42:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009e44:	071b      	lsls	r3, r3, #28
 8009e46:	491b      	ldr	r1, [pc, #108]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009e48:	4313      	orrs	r3, r2
 8009e4a:	604b      	str	r3, [r1, #4]
 8009e4c:	4b1b      	ldr	r3, [pc, #108]	; (8009ebc <HAL_RCC_OscConfig+0x4b4>)
 8009e4e:	2201      	movs	r2, #1
 8009e50:	601a      	str	r2, [r3, #0]
 8009e52:	f7fd fb4d 	bl	80074f0 <HAL_GetTick>
 8009e56:	6138      	str	r0, [r7, #16]
 8009e58:	e008      	b.n	8009e6c <HAL_RCC_OscConfig+0x464>
 8009e5a:	f7fd fb49 	bl	80074f0 <HAL_GetTick>
 8009e5e:	4602      	mov	r2, r0
 8009e60:	693b      	ldr	r3, [r7, #16]
 8009e62:	1ad3      	subs	r3, r2, r3
 8009e64:	2b02      	cmp	r3, #2
 8009e66:	d901      	bls.n	8009e6c <HAL_RCC_OscConfig+0x464>
 8009e68:	2303      	movs	r3, #3
 8009e6a:	e064      	b.n	8009f36 <HAL_RCC_OscConfig+0x52e>
 8009e6c:	4b11      	ldr	r3, [pc, #68]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009e6e:	681b      	ldr	r3, [r3, #0]
 8009e70:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009e74:	2b00      	cmp	r3, #0
 8009e76:	d0f0      	beq.n	8009e5a <HAL_RCC_OscConfig+0x452>
 8009e78:	e05c      	b.n	8009f34 <HAL_RCC_OscConfig+0x52c>
 8009e7a:	4b10      	ldr	r3, [pc, #64]	; (8009ebc <HAL_RCC_OscConfig+0x4b4>)
 8009e7c:	2200      	movs	r2, #0
 8009e7e:	601a      	str	r2, [r3, #0]
 8009e80:	f7fd fb36 	bl	80074f0 <HAL_GetTick>
 8009e84:	6138      	str	r0, [r7, #16]
 8009e86:	e008      	b.n	8009e9a <HAL_RCC_OscConfig+0x492>
 8009e88:	f7fd fb32 	bl	80074f0 <HAL_GetTick>
 8009e8c:	4602      	mov	r2, r0
 8009e8e:	693b      	ldr	r3, [r7, #16]
 8009e90:	1ad3      	subs	r3, r2, r3
 8009e92:	2b02      	cmp	r3, #2
 8009e94:	d901      	bls.n	8009e9a <HAL_RCC_OscConfig+0x492>
 8009e96:	2303      	movs	r3, #3
 8009e98:	e04d      	b.n	8009f36 <HAL_RCC_OscConfig+0x52e>
 8009e9a:	4b06      	ldr	r3, [pc, #24]	; (8009eb4 <HAL_RCC_OscConfig+0x4ac>)
 8009e9c:	681b      	ldr	r3, [r3, #0]
 8009e9e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009ea2:	2b00      	cmp	r3, #0
 8009ea4:	d1f0      	bne.n	8009e88 <HAL_RCC_OscConfig+0x480>
 8009ea6:	e045      	b.n	8009f34 <HAL_RCC_OscConfig+0x52c>
 8009ea8:	687b      	ldr	r3, [r7, #4]
 8009eaa:	699b      	ldr	r3, [r3, #24]
 8009eac:	2b01      	cmp	r3, #1
 8009eae:	d107      	bne.n	8009ec0 <HAL_RCC_OscConfig+0x4b8>
 8009eb0:	2301      	movs	r3, #1
 8009eb2:	e040      	b.n	8009f36 <HAL_RCC_OscConfig+0x52e>
 8009eb4:	40023800 	.word	0x40023800
 8009eb8:	40007000 	.word	0x40007000
 8009ebc:	42470060 	.word	0x42470060
 8009ec0:	4b1f      	ldr	r3, [pc, #124]	; (8009f40 <HAL_RCC_OscConfig+0x538>)
 8009ec2:	685b      	ldr	r3, [r3, #4]
 8009ec4:	60fb      	str	r3, [r7, #12]
 8009ec6:	687b      	ldr	r3, [r7, #4]
 8009ec8:	699b      	ldr	r3, [r3, #24]
 8009eca:	2b01      	cmp	r3, #1
 8009ecc:	d030      	beq.n	8009f30 <HAL_RCC_OscConfig+0x528>
 8009ece:	68fb      	ldr	r3, [r7, #12]
 8009ed0:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8009ed4:	687b      	ldr	r3, [r7, #4]
 8009ed6:	69db      	ldr	r3, [r3, #28]
 8009ed8:	429a      	cmp	r2, r3
 8009eda:	d129      	bne.n	8009f30 <HAL_RCC_OscConfig+0x528>
 8009edc:	68fb      	ldr	r3, [r7, #12]
 8009ede:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8009ee2:	687b      	ldr	r3, [r7, #4]
 8009ee4:	6a1b      	ldr	r3, [r3, #32]
 8009ee6:	429a      	cmp	r2, r3
 8009ee8:	d122      	bne.n	8009f30 <HAL_RCC_OscConfig+0x528>
 8009eea:	68fa      	ldr	r2, [r7, #12]
 8009eec:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8009ef0:	4013      	ands	r3, r2
 8009ef2:	687a      	ldr	r2, [r7, #4]
 8009ef4:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8009ef6:	0192      	lsls	r2, r2, #6
 8009ef8:	4293      	cmp	r3, r2
 8009efa:	d119      	bne.n	8009f30 <HAL_RCC_OscConfig+0x528>
 8009efc:	68fb      	ldr	r3, [r7, #12]
 8009efe:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8009f02:	687b      	ldr	r3, [r7, #4]
 8009f04:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009f06:	085b      	lsrs	r3, r3, #1
 8009f08:	3b01      	subs	r3, #1
 8009f0a:	041b      	lsls	r3, r3, #16
 8009f0c:	429a      	cmp	r2, r3
 8009f0e:	d10f      	bne.n	8009f30 <HAL_RCC_OscConfig+0x528>
 8009f10:	68fb      	ldr	r3, [r7, #12]
 8009f12:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8009f16:	687b      	ldr	r3, [r7, #4]
 8009f18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009f1a:	061b      	lsls	r3, r3, #24
 8009f1c:	429a      	cmp	r2, r3
 8009f1e:	d107      	bne.n	8009f30 <HAL_RCC_OscConfig+0x528>
 8009f20:	68fb      	ldr	r3, [r7, #12]
 8009f22:	f003 42e0 	and.w	r2, r3, #1879048192	; 0x70000000
 8009f26:	687b      	ldr	r3, [r7, #4]
 8009f28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009f2a:	071b      	lsls	r3, r3, #28
 8009f2c:	429a      	cmp	r2, r3
 8009f2e:	d001      	beq.n	8009f34 <HAL_RCC_OscConfig+0x52c>
 8009f30:	2301      	movs	r3, #1
 8009f32:	e000      	b.n	8009f36 <HAL_RCC_OscConfig+0x52e>
 8009f34:	2300      	movs	r3, #0
 8009f36:	4618      	mov	r0, r3
 8009f38:	3718      	adds	r7, #24
 8009f3a:	46bd      	mov	sp, r7
 8009f3c:	bd80      	pop	{r7, pc}
 8009f3e:	bf00      	nop
 8009f40:	40023800 	.word	0x40023800

08009f44 <HAL_TIM_Base_Init>:
 8009f44:	b580      	push	{r7, lr}
 8009f46:	b082      	sub	sp, #8
 8009f48:	af00      	add	r7, sp, #0
 8009f4a:	6078      	str	r0, [r7, #4]
 8009f4c:	687b      	ldr	r3, [r7, #4]
 8009f4e:	2b00      	cmp	r3, #0
 8009f50:	d101      	bne.n	8009f56 <HAL_TIM_Base_Init+0x12>
 8009f52:	2301      	movs	r3, #1
 8009f54:	e041      	b.n	8009fda <HAL_TIM_Base_Init+0x96>
 8009f56:	687b      	ldr	r3, [r7, #4]
 8009f58:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8009f5c:	b2db      	uxtb	r3, r3
 8009f5e:	2b00      	cmp	r3, #0
 8009f60:	d106      	bne.n	8009f70 <HAL_TIM_Base_Init+0x2c>
 8009f62:	687b      	ldr	r3, [r7, #4]
 8009f64:	2200      	movs	r2, #0
 8009f66:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009f6a:	6878      	ldr	r0, [r7, #4]
 8009f6c:	f7fc fe08 	bl	8006b80 <HAL_TIM_Base_MspInit>
 8009f70:	687b      	ldr	r3, [r7, #4]
 8009f72:	2202      	movs	r2, #2
 8009f74:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009f78:	687b      	ldr	r3, [r7, #4]
 8009f7a:	681a      	ldr	r2, [r3, #0]
 8009f7c:	687b      	ldr	r3, [r7, #4]
 8009f7e:	3304      	adds	r3, #4
 8009f80:	4619      	mov	r1, r3
 8009f82:	4610      	mov	r0, r2
 8009f84:	f001 f944 	bl	800b210 <TIM_Base_SetConfig>
 8009f88:	687b      	ldr	r3, [r7, #4]
 8009f8a:	2201      	movs	r2, #1
 8009f8c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8009f90:	687b      	ldr	r3, [r7, #4]
 8009f92:	2201      	movs	r2, #1
 8009f94:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009f98:	687b      	ldr	r3, [r7, #4]
 8009f9a:	2201      	movs	r2, #1
 8009f9c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8009fa0:	687b      	ldr	r3, [r7, #4]
 8009fa2:	2201      	movs	r2, #1
 8009fa4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009fa8:	687b      	ldr	r3, [r7, #4]
 8009faa:	2201      	movs	r2, #1
 8009fac:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8009fb0:	687b      	ldr	r3, [r7, #4]
 8009fb2:	2201      	movs	r2, #1
 8009fb4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009fb8:	687b      	ldr	r3, [r7, #4]
 8009fba:	2201      	movs	r2, #1
 8009fbc:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8009fc0:	687b      	ldr	r3, [r7, #4]
 8009fc2:	2201      	movs	r2, #1
 8009fc4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8009fc8:	687b      	ldr	r3, [r7, #4]
 8009fca:	2201      	movs	r2, #1
 8009fcc:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8009fd0:	687b      	ldr	r3, [r7, #4]
 8009fd2:	2201      	movs	r2, #1
 8009fd4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009fd8:	2300      	movs	r3, #0
 8009fda:	4618      	mov	r0, r3
 8009fdc:	3708      	adds	r7, #8
 8009fde:	46bd      	mov	sp, r7
 8009fe0:	bd80      	pop	{r7, pc}
	...

08009fe4 <HAL_TIM_Base_Start>:
 8009fe4:	b480      	push	{r7}
 8009fe6:	b085      	sub	sp, #20
 8009fe8:	af00      	add	r7, sp, #0
 8009fea:	6078      	str	r0, [r7, #4]
 8009fec:	687b      	ldr	r3, [r7, #4]
 8009fee:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8009ff2:	b2db      	uxtb	r3, r3
 8009ff4:	2b01      	cmp	r3, #1
 8009ff6:	d001      	beq.n	8009ffc <HAL_TIM_Base_Start+0x18>
 8009ff8:	2301      	movs	r3, #1
 8009ffa:	e046      	b.n	800a08a <HAL_TIM_Base_Start+0xa6>
 8009ffc:	687b      	ldr	r3, [r7, #4]
 8009ffe:	2202      	movs	r2, #2
 800a000:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a004:	687b      	ldr	r3, [r7, #4]
 800a006:	681b      	ldr	r3, [r3, #0]
 800a008:	4a23      	ldr	r2, [pc, #140]	; (800a098 <HAL_TIM_Base_Start+0xb4>)
 800a00a:	4293      	cmp	r3, r2
 800a00c:	d022      	beq.n	800a054 <HAL_TIM_Base_Start+0x70>
 800a00e:	687b      	ldr	r3, [r7, #4]
 800a010:	681b      	ldr	r3, [r3, #0]
 800a012:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a016:	d01d      	beq.n	800a054 <HAL_TIM_Base_Start+0x70>
 800a018:	687b      	ldr	r3, [r7, #4]
 800a01a:	681b      	ldr	r3, [r3, #0]
 800a01c:	4a1f      	ldr	r2, [pc, #124]	; (800a09c <HAL_TIM_Base_Start+0xb8>)
 800a01e:	4293      	cmp	r3, r2
 800a020:	d018      	beq.n	800a054 <HAL_TIM_Base_Start+0x70>
 800a022:	687b      	ldr	r3, [r7, #4]
 800a024:	681b      	ldr	r3, [r3, #0]
 800a026:	4a1e      	ldr	r2, [pc, #120]	; (800a0a0 <HAL_TIM_Base_Start+0xbc>)
 800a028:	4293      	cmp	r3, r2
 800a02a:	d013      	beq.n	800a054 <HAL_TIM_Base_Start+0x70>
 800a02c:	687b      	ldr	r3, [r7, #4]
 800a02e:	681b      	ldr	r3, [r3, #0]
 800a030:	4a1c      	ldr	r2, [pc, #112]	; (800a0a4 <HAL_TIM_Base_Start+0xc0>)
 800a032:	4293      	cmp	r3, r2
 800a034:	d00e      	beq.n	800a054 <HAL_TIM_Base_Start+0x70>
 800a036:	687b      	ldr	r3, [r7, #4]
 800a038:	681b      	ldr	r3, [r3, #0]
 800a03a:	4a1b      	ldr	r2, [pc, #108]	; (800a0a8 <HAL_TIM_Base_Start+0xc4>)
 800a03c:	4293      	cmp	r3, r2
 800a03e:	d009      	beq.n	800a054 <HAL_TIM_Base_Start+0x70>
 800a040:	687b      	ldr	r3, [r7, #4]
 800a042:	681b      	ldr	r3, [r3, #0]
 800a044:	4a19      	ldr	r2, [pc, #100]	; (800a0ac <HAL_TIM_Base_Start+0xc8>)
 800a046:	4293      	cmp	r3, r2
 800a048:	d004      	beq.n	800a054 <HAL_TIM_Base_Start+0x70>
 800a04a:	687b      	ldr	r3, [r7, #4]
 800a04c:	681b      	ldr	r3, [r3, #0]
 800a04e:	4a18      	ldr	r2, [pc, #96]	; (800a0b0 <HAL_TIM_Base_Start+0xcc>)
 800a050:	4293      	cmp	r3, r2
 800a052:	d111      	bne.n	800a078 <HAL_TIM_Base_Start+0x94>
 800a054:	687b      	ldr	r3, [r7, #4]
 800a056:	681b      	ldr	r3, [r3, #0]
 800a058:	689b      	ldr	r3, [r3, #8]
 800a05a:	f003 0307 	and.w	r3, r3, #7
 800a05e:	60fb      	str	r3, [r7, #12]
 800a060:	68fb      	ldr	r3, [r7, #12]
 800a062:	2b06      	cmp	r3, #6
 800a064:	d010      	beq.n	800a088 <HAL_TIM_Base_Start+0xa4>
 800a066:	687b      	ldr	r3, [r7, #4]
 800a068:	681b      	ldr	r3, [r3, #0]
 800a06a:	681a      	ldr	r2, [r3, #0]
 800a06c:	687b      	ldr	r3, [r7, #4]
 800a06e:	681b      	ldr	r3, [r3, #0]
 800a070:	f042 0201 	orr.w	r2, r2, #1
 800a074:	601a      	str	r2, [r3, #0]
 800a076:	e007      	b.n	800a088 <HAL_TIM_Base_Start+0xa4>
 800a078:	687b      	ldr	r3, [r7, #4]
 800a07a:	681b      	ldr	r3, [r3, #0]
 800a07c:	681a      	ldr	r2, [r3, #0]
 800a07e:	687b      	ldr	r3, [r7, #4]
 800a080:	681b      	ldr	r3, [r3, #0]
 800a082:	f042 0201 	orr.w	r2, r2, #1
 800a086:	601a      	str	r2, [r3, #0]
 800a088:	2300      	movs	r3, #0
 800a08a:	4618      	mov	r0, r3
 800a08c:	3714      	adds	r7, #20
 800a08e:	46bd      	mov	sp, r7
 800a090:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a094:	4770      	bx	lr
 800a096:	bf00      	nop
 800a098:	40010000 	.word	0x40010000
 800a09c:	40000400 	.word	0x40000400
 800a0a0:	40000800 	.word	0x40000800
 800a0a4:	40000c00 	.word	0x40000c00
 800a0a8:	40010400 	.word	0x40010400
 800a0ac:	40014000 	.word	0x40014000
 800a0b0:	40001800 	.word	0x40001800

0800a0b4 <HAL_TIM_PWM_Init>:
 800a0b4:	b580      	push	{r7, lr}
 800a0b6:	b082      	sub	sp, #8
 800a0b8:	af00      	add	r7, sp, #0
 800a0ba:	6078      	str	r0, [r7, #4]
 800a0bc:	687b      	ldr	r3, [r7, #4]
 800a0be:	2b00      	cmp	r3, #0
 800a0c0:	d101      	bne.n	800a0c6 <HAL_TIM_PWM_Init+0x12>
 800a0c2:	2301      	movs	r3, #1
 800a0c4:	e041      	b.n	800a14a <HAL_TIM_PWM_Init+0x96>
 800a0c6:	687b      	ldr	r3, [r7, #4]
 800a0c8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a0cc:	b2db      	uxtb	r3, r3
 800a0ce:	2b00      	cmp	r3, #0
 800a0d0:	d106      	bne.n	800a0e0 <HAL_TIM_PWM_Init+0x2c>
 800a0d2:	687b      	ldr	r3, [r7, #4]
 800a0d4:	2200      	movs	r2, #0
 800a0d6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a0da:	6878      	ldr	r0, [r7, #4]
 800a0dc:	f000 f839 	bl	800a152 <HAL_TIM_PWM_MspInit>
 800a0e0:	687b      	ldr	r3, [r7, #4]
 800a0e2:	2202      	movs	r2, #2
 800a0e4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a0e8:	687b      	ldr	r3, [r7, #4]
 800a0ea:	681a      	ldr	r2, [r3, #0]
 800a0ec:	687b      	ldr	r3, [r7, #4]
 800a0ee:	3304      	adds	r3, #4
 800a0f0:	4619      	mov	r1, r3
 800a0f2:	4610      	mov	r0, r2
 800a0f4:	f001 f88c 	bl	800b210 <TIM_Base_SetConfig>
 800a0f8:	687b      	ldr	r3, [r7, #4]
 800a0fa:	2201      	movs	r2, #1
 800a0fc:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800a100:	687b      	ldr	r3, [r7, #4]
 800a102:	2201      	movs	r2, #1
 800a104:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a108:	687b      	ldr	r3, [r7, #4]
 800a10a:	2201      	movs	r2, #1
 800a10c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a110:	687b      	ldr	r3, [r7, #4]
 800a112:	2201      	movs	r2, #1
 800a114:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a118:	687b      	ldr	r3, [r7, #4]
 800a11a:	2201      	movs	r2, #1
 800a11c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a120:	687b      	ldr	r3, [r7, #4]
 800a122:	2201      	movs	r2, #1
 800a124:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a128:	687b      	ldr	r3, [r7, #4]
 800a12a:	2201      	movs	r2, #1
 800a12c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a130:	687b      	ldr	r3, [r7, #4]
 800a132:	2201      	movs	r2, #1
 800a134:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a138:	687b      	ldr	r3, [r7, #4]
 800a13a:	2201      	movs	r2, #1
 800a13c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a140:	687b      	ldr	r3, [r7, #4]
 800a142:	2201      	movs	r2, #1
 800a144:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a148:	2300      	movs	r3, #0
 800a14a:	4618      	mov	r0, r3
 800a14c:	3708      	adds	r7, #8
 800a14e:	46bd      	mov	sp, r7
 800a150:	bd80      	pop	{r7, pc}

0800a152 <HAL_TIM_PWM_MspInit>:
 800a152:	b480      	push	{r7}
 800a154:	b083      	sub	sp, #12
 800a156:	af00      	add	r7, sp, #0
 800a158:	6078      	str	r0, [r7, #4]
 800a15a:	bf00      	nop
 800a15c:	370c      	adds	r7, #12
 800a15e:	46bd      	mov	sp, r7
 800a160:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a164:	4770      	bx	lr
	...

0800a168 <HAL_TIM_PWM_Start>:
 800a168:	b580      	push	{r7, lr}
 800a16a:	b084      	sub	sp, #16
 800a16c:	af00      	add	r7, sp, #0
 800a16e:	6078      	str	r0, [r7, #4]
 800a170:	6039      	str	r1, [r7, #0]
 800a172:	683b      	ldr	r3, [r7, #0]
 800a174:	2b00      	cmp	r3, #0
 800a176:	d109      	bne.n	800a18c <HAL_TIM_PWM_Start+0x24>
 800a178:	687b      	ldr	r3, [r7, #4]
 800a17a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a17e:	b2db      	uxtb	r3, r3
 800a180:	2b01      	cmp	r3, #1
 800a182:	bf14      	ite	ne
 800a184:	2301      	movne	r3, #1
 800a186:	2300      	moveq	r3, #0
 800a188:	b2db      	uxtb	r3, r3
 800a18a:	e022      	b.n	800a1d2 <HAL_TIM_PWM_Start+0x6a>
 800a18c:	683b      	ldr	r3, [r7, #0]
 800a18e:	2b04      	cmp	r3, #4
 800a190:	d109      	bne.n	800a1a6 <HAL_TIM_PWM_Start+0x3e>
 800a192:	687b      	ldr	r3, [r7, #4]
 800a194:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800a198:	b2db      	uxtb	r3, r3
 800a19a:	2b01      	cmp	r3, #1
 800a19c:	bf14      	ite	ne
 800a19e:	2301      	movne	r3, #1
 800a1a0:	2300      	moveq	r3, #0
 800a1a2:	b2db      	uxtb	r3, r3
 800a1a4:	e015      	b.n	800a1d2 <HAL_TIM_PWM_Start+0x6a>
 800a1a6:	683b      	ldr	r3, [r7, #0]
 800a1a8:	2b08      	cmp	r3, #8
 800a1aa:	d109      	bne.n	800a1c0 <HAL_TIM_PWM_Start+0x58>
 800a1ac:	687b      	ldr	r3, [r7, #4]
 800a1ae:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800a1b2:	b2db      	uxtb	r3, r3
 800a1b4:	2b01      	cmp	r3, #1
 800a1b6:	bf14      	ite	ne
 800a1b8:	2301      	movne	r3, #1
 800a1ba:	2300      	moveq	r3, #0
 800a1bc:	b2db      	uxtb	r3, r3
 800a1be:	e008      	b.n	800a1d2 <HAL_TIM_PWM_Start+0x6a>
 800a1c0:	687b      	ldr	r3, [r7, #4]
 800a1c2:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a1c6:	b2db      	uxtb	r3, r3
 800a1c8:	2b01      	cmp	r3, #1
 800a1ca:	bf14      	ite	ne
 800a1cc:	2301      	movne	r3, #1
 800a1ce:	2300      	moveq	r3, #0
 800a1d0:	b2db      	uxtb	r3, r3
 800a1d2:	2b00      	cmp	r3, #0
 800a1d4:	d001      	beq.n	800a1da <HAL_TIM_PWM_Start+0x72>
 800a1d6:	2301      	movs	r3, #1
 800a1d8:	e07c      	b.n	800a2d4 <HAL_TIM_PWM_Start+0x16c>
 800a1da:	683b      	ldr	r3, [r7, #0]
 800a1dc:	2b00      	cmp	r3, #0
 800a1de:	d104      	bne.n	800a1ea <HAL_TIM_PWM_Start+0x82>
 800a1e0:	687b      	ldr	r3, [r7, #4]
 800a1e2:	2202      	movs	r2, #2
 800a1e4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a1e8:	e013      	b.n	800a212 <HAL_TIM_PWM_Start+0xaa>
 800a1ea:	683b      	ldr	r3, [r7, #0]
 800a1ec:	2b04      	cmp	r3, #4
 800a1ee:	d104      	bne.n	800a1fa <HAL_TIM_PWM_Start+0x92>
 800a1f0:	687b      	ldr	r3, [r7, #4]
 800a1f2:	2202      	movs	r2, #2
 800a1f4:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a1f8:	e00b      	b.n	800a212 <HAL_TIM_PWM_Start+0xaa>
 800a1fa:	683b      	ldr	r3, [r7, #0]
 800a1fc:	2b08      	cmp	r3, #8
 800a1fe:	d104      	bne.n	800a20a <HAL_TIM_PWM_Start+0xa2>
 800a200:	687b      	ldr	r3, [r7, #4]
 800a202:	2202      	movs	r2, #2
 800a204:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a208:	e003      	b.n	800a212 <HAL_TIM_PWM_Start+0xaa>
 800a20a:	687b      	ldr	r3, [r7, #4]
 800a20c:	2202      	movs	r2, #2
 800a20e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a212:	687b      	ldr	r3, [r7, #4]
 800a214:	681b      	ldr	r3, [r3, #0]
 800a216:	2201      	movs	r2, #1
 800a218:	6839      	ldr	r1, [r7, #0]
 800a21a:	4618      	mov	r0, r3
 800a21c:	f001 fc0c 	bl	800ba38 <TIM_CCxChannelCmd>
 800a220:	687b      	ldr	r3, [r7, #4]
 800a222:	681b      	ldr	r3, [r3, #0]
 800a224:	4a2d      	ldr	r2, [pc, #180]	; (800a2dc <HAL_TIM_PWM_Start+0x174>)
 800a226:	4293      	cmp	r3, r2
 800a228:	d004      	beq.n	800a234 <HAL_TIM_PWM_Start+0xcc>
 800a22a:	687b      	ldr	r3, [r7, #4]
 800a22c:	681b      	ldr	r3, [r3, #0]
 800a22e:	4a2c      	ldr	r2, [pc, #176]	; (800a2e0 <HAL_TIM_PWM_Start+0x178>)
 800a230:	4293      	cmp	r3, r2
 800a232:	d101      	bne.n	800a238 <HAL_TIM_PWM_Start+0xd0>
 800a234:	2301      	movs	r3, #1
 800a236:	e000      	b.n	800a23a <HAL_TIM_PWM_Start+0xd2>
 800a238:	2300      	movs	r3, #0
 800a23a:	2b00      	cmp	r3, #0
 800a23c:	d007      	beq.n	800a24e <HAL_TIM_PWM_Start+0xe6>
 800a23e:	687b      	ldr	r3, [r7, #4]
 800a240:	681b      	ldr	r3, [r3, #0]
 800a242:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800a244:	687b      	ldr	r3, [r7, #4]
 800a246:	681b      	ldr	r3, [r3, #0]
 800a248:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800a24c:	645a      	str	r2, [r3, #68]	; 0x44
 800a24e:	687b      	ldr	r3, [r7, #4]
 800a250:	681b      	ldr	r3, [r3, #0]
 800a252:	4a22      	ldr	r2, [pc, #136]	; (800a2dc <HAL_TIM_PWM_Start+0x174>)
 800a254:	4293      	cmp	r3, r2
 800a256:	d022      	beq.n	800a29e <HAL_TIM_PWM_Start+0x136>
 800a258:	687b      	ldr	r3, [r7, #4]
 800a25a:	681b      	ldr	r3, [r3, #0]
 800a25c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a260:	d01d      	beq.n	800a29e <HAL_TIM_PWM_Start+0x136>
 800a262:	687b      	ldr	r3, [r7, #4]
 800a264:	681b      	ldr	r3, [r3, #0]
 800a266:	4a1f      	ldr	r2, [pc, #124]	; (800a2e4 <HAL_TIM_PWM_Start+0x17c>)
 800a268:	4293      	cmp	r3, r2
 800a26a:	d018      	beq.n	800a29e <HAL_TIM_PWM_Start+0x136>
 800a26c:	687b      	ldr	r3, [r7, #4]
 800a26e:	681b      	ldr	r3, [r3, #0]
 800a270:	4a1d      	ldr	r2, [pc, #116]	; (800a2e8 <HAL_TIM_PWM_Start+0x180>)
 800a272:	4293      	cmp	r3, r2
 800a274:	d013      	beq.n	800a29e <HAL_TIM_PWM_Start+0x136>
 800a276:	687b      	ldr	r3, [r7, #4]
 800a278:	681b      	ldr	r3, [r3, #0]
 800a27a:	4a1c      	ldr	r2, [pc, #112]	; (800a2ec <HAL_TIM_PWM_Start+0x184>)
 800a27c:	4293      	cmp	r3, r2
 800a27e:	d00e      	beq.n	800a29e <HAL_TIM_PWM_Start+0x136>
 800a280:	687b      	ldr	r3, [r7, #4]
 800a282:	681b      	ldr	r3, [r3, #0]
 800a284:	4a16      	ldr	r2, [pc, #88]	; (800a2e0 <HAL_TIM_PWM_Start+0x178>)
 800a286:	4293      	cmp	r3, r2
 800a288:	d009      	beq.n	800a29e <HAL_TIM_PWM_Start+0x136>
 800a28a:	687b      	ldr	r3, [r7, #4]
 800a28c:	681b      	ldr	r3, [r3, #0]
 800a28e:	4a18      	ldr	r2, [pc, #96]	; (800a2f0 <HAL_TIM_PWM_Start+0x188>)
 800a290:	4293      	cmp	r3, r2
 800a292:	d004      	beq.n	800a29e <HAL_TIM_PWM_Start+0x136>
 800a294:	687b      	ldr	r3, [r7, #4]
 800a296:	681b      	ldr	r3, [r3, #0]
 800a298:	4a16      	ldr	r2, [pc, #88]	; (800a2f4 <HAL_TIM_PWM_Start+0x18c>)
 800a29a:	4293      	cmp	r3, r2
 800a29c:	d111      	bne.n	800a2c2 <HAL_TIM_PWM_Start+0x15a>
 800a29e:	687b      	ldr	r3, [r7, #4]
 800a2a0:	681b      	ldr	r3, [r3, #0]
 800a2a2:	689b      	ldr	r3, [r3, #8]
 800a2a4:	f003 0307 	and.w	r3, r3, #7
 800a2a8:	60fb      	str	r3, [r7, #12]
 800a2aa:	68fb      	ldr	r3, [r7, #12]
 800a2ac:	2b06      	cmp	r3, #6
 800a2ae:	d010      	beq.n	800a2d2 <HAL_TIM_PWM_Start+0x16a>
 800a2b0:	687b      	ldr	r3, [r7, #4]
 800a2b2:	681b      	ldr	r3, [r3, #0]
 800a2b4:	681a      	ldr	r2, [r3, #0]
 800a2b6:	687b      	ldr	r3, [r7, #4]
 800a2b8:	681b      	ldr	r3, [r3, #0]
 800a2ba:	f042 0201 	orr.w	r2, r2, #1
 800a2be:	601a      	str	r2, [r3, #0]
 800a2c0:	e007      	b.n	800a2d2 <HAL_TIM_PWM_Start+0x16a>
 800a2c2:	687b      	ldr	r3, [r7, #4]
 800a2c4:	681b      	ldr	r3, [r3, #0]
 800a2c6:	681a      	ldr	r2, [r3, #0]
 800a2c8:	687b      	ldr	r3, [r7, #4]
 800a2ca:	681b      	ldr	r3, [r3, #0]
 800a2cc:	f042 0201 	orr.w	r2, r2, #1
 800a2d0:	601a      	str	r2, [r3, #0]
 800a2d2:	2300      	movs	r3, #0
 800a2d4:	4618      	mov	r0, r3
 800a2d6:	3710      	adds	r7, #16
 800a2d8:	46bd      	mov	sp, r7
 800a2da:	bd80      	pop	{r7, pc}
 800a2dc:	40010000 	.word	0x40010000
 800a2e0:	40010400 	.word	0x40010400
 800a2e4:	40000400 	.word	0x40000400
 800a2e8:	40000800 	.word	0x40000800
 800a2ec:	40000c00 	.word	0x40000c00
 800a2f0:	40014000 	.word	0x40014000
 800a2f4:	40001800 	.word	0x40001800

0800a2f8 <HAL_TIM_IC_Init>:
 800a2f8:	b580      	push	{r7, lr}
 800a2fa:	b082      	sub	sp, #8
 800a2fc:	af00      	add	r7, sp, #0
 800a2fe:	6078      	str	r0, [r7, #4]
 800a300:	687b      	ldr	r3, [r7, #4]
 800a302:	2b00      	cmp	r3, #0
 800a304:	d101      	bne.n	800a30a <HAL_TIM_IC_Init+0x12>
 800a306:	2301      	movs	r3, #1
 800a308:	e041      	b.n	800a38e <HAL_TIM_IC_Init+0x96>
 800a30a:	687b      	ldr	r3, [r7, #4]
 800a30c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a310:	b2db      	uxtb	r3, r3
 800a312:	2b00      	cmp	r3, #0
 800a314:	d106      	bne.n	800a324 <HAL_TIM_IC_Init+0x2c>
 800a316:	687b      	ldr	r3, [r7, #4]
 800a318:	2200      	movs	r2, #0
 800a31a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a31e:	6878      	ldr	r0, [r7, #4]
 800a320:	f000 f839 	bl	800a396 <HAL_TIM_IC_MspInit>
 800a324:	687b      	ldr	r3, [r7, #4]
 800a326:	2202      	movs	r2, #2
 800a328:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a32c:	687b      	ldr	r3, [r7, #4]
 800a32e:	681a      	ldr	r2, [r3, #0]
 800a330:	687b      	ldr	r3, [r7, #4]
 800a332:	3304      	adds	r3, #4
 800a334:	4619      	mov	r1, r3
 800a336:	4610      	mov	r0, r2
 800a338:	f000 ff6a 	bl	800b210 <TIM_Base_SetConfig>
 800a33c:	687b      	ldr	r3, [r7, #4]
 800a33e:	2201      	movs	r2, #1
 800a340:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800a344:	687b      	ldr	r3, [r7, #4]
 800a346:	2201      	movs	r2, #1
 800a348:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a34c:	687b      	ldr	r3, [r7, #4]
 800a34e:	2201      	movs	r2, #1
 800a350:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a354:	687b      	ldr	r3, [r7, #4]
 800a356:	2201      	movs	r2, #1
 800a358:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a35c:	687b      	ldr	r3, [r7, #4]
 800a35e:	2201      	movs	r2, #1
 800a360:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a364:	687b      	ldr	r3, [r7, #4]
 800a366:	2201      	movs	r2, #1
 800a368:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a36c:	687b      	ldr	r3, [r7, #4]
 800a36e:	2201      	movs	r2, #1
 800a370:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a374:	687b      	ldr	r3, [r7, #4]
 800a376:	2201      	movs	r2, #1
 800a378:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a37c:	687b      	ldr	r3, [r7, #4]
 800a37e:	2201      	movs	r2, #1
 800a380:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a384:	687b      	ldr	r3, [r7, #4]
 800a386:	2201      	movs	r2, #1
 800a388:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a38c:	2300      	movs	r3, #0
 800a38e:	4618      	mov	r0, r3
 800a390:	3708      	adds	r7, #8
 800a392:	46bd      	mov	sp, r7
 800a394:	bd80      	pop	{r7, pc}

0800a396 <HAL_TIM_IC_MspInit>:
 800a396:	b480      	push	{r7}
 800a398:	b083      	sub	sp, #12
 800a39a:	af00      	add	r7, sp, #0
 800a39c:	6078      	str	r0, [r7, #4]
 800a39e:	bf00      	nop
 800a3a0:	370c      	adds	r7, #12
 800a3a2:	46bd      	mov	sp, r7
 800a3a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3a8:	4770      	bx	lr
	...

0800a3ac <HAL_TIM_IC_Start_DMA>:
 800a3ac:	b580      	push	{r7, lr}
 800a3ae:	b086      	sub	sp, #24
 800a3b0:	af00      	add	r7, sp, #0
 800a3b2:	60f8      	str	r0, [r7, #12]
 800a3b4:	60b9      	str	r1, [r7, #8]
 800a3b6:	607a      	str	r2, [r7, #4]
 800a3b8:	807b      	strh	r3, [r7, #2]
 800a3ba:	2300      	movs	r3, #0
 800a3bc:	75fb      	strb	r3, [r7, #23]
 800a3be:	68bb      	ldr	r3, [r7, #8]
 800a3c0:	2b00      	cmp	r3, #0
 800a3c2:	d104      	bne.n	800a3ce <HAL_TIM_IC_Start_DMA+0x22>
 800a3c4:	68fb      	ldr	r3, [r7, #12]
 800a3c6:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a3ca:	b2db      	uxtb	r3, r3
 800a3cc:	e013      	b.n	800a3f6 <HAL_TIM_IC_Start_DMA+0x4a>
 800a3ce:	68bb      	ldr	r3, [r7, #8]
 800a3d0:	2b04      	cmp	r3, #4
 800a3d2:	d104      	bne.n	800a3de <HAL_TIM_IC_Start_DMA+0x32>
 800a3d4:	68fb      	ldr	r3, [r7, #12]
 800a3d6:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800a3da:	b2db      	uxtb	r3, r3
 800a3dc:	e00b      	b.n	800a3f6 <HAL_TIM_IC_Start_DMA+0x4a>
 800a3de:	68bb      	ldr	r3, [r7, #8]
 800a3e0:	2b08      	cmp	r3, #8
 800a3e2:	d104      	bne.n	800a3ee <HAL_TIM_IC_Start_DMA+0x42>
 800a3e4:	68fb      	ldr	r3, [r7, #12]
 800a3e6:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800a3ea:	b2db      	uxtb	r3, r3
 800a3ec:	e003      	b.n	800a3f6 <HAL_TIM_IC_Start_DMA+0x4a>
 800a3ee:	68fb      	ldr	r3, [r7, #12]
 800a3f0:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a3f4:	b2db      	uxtb	r3, r3
 800a3f6:	75bb      	strb	r3, [r7, #22]
 800a3f8:	68bb      	ldr	r3, [r7, #8]
 800a3fa:	2b00      	cmp	r3, #0
 800a3fc:	d104      	bne.n	800a408 <HAL_TIM_IC_Start_DMA+0x5c>
 800a3fe:	68fb      	ldr	r3, [r7, #12]
 800a400:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800a404:	b2db      	uxtb	r3, r3
 800a406:	e013      	b.n	800a430 <HAL_TIM_IC_Start_DMA+0x84>
 800a408:	68bb      	ldr	r3, [r7, #8]
 800a40a:	2b04      	cmp	r3, #4
 800a40c:	d104      	bne.n	800a418 <HAL_TIM_IC_Start_DMA+0x6c>
 800a40e:	68fb      	ldr	r3, [r7, #12]
 800a410:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 800a414:	b2db      	uxtb	r3, r3
 800a416:	e00b      	b.n	800a430 <HAL_TIM_IC_Start_DMA+0x84>
 800a418:	68bb      	ldr	r3, [r7, #8]
 800a41a:	2b08      	cmp	r3, #8
 800a41c:	d104      	bne.n	800a428 <HAL_TIM_IC_Start_DMA+0x7c>
 800a41e:	68fb      	ldr	r3, [r7, #12]
 800a420:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800a424:	b2db      	uxtb	r3, r3
 800a426:	e003      	b.n	800a430 <HAL_TIM_IC_Start_DMA+0x84>
 800a428:	68fb      	ldr	r3, [r7, #12]
 800a42a:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800a42e:	b2db      	uxtb	r3, r3
 800a430:	757b      	strb	r3, [r7, #21]
 800a432:	7dbb      	ldrb	r3, [r7, #22]
 800a434:	2b02      	cmp	r3, #2
 800a436:	d002      	beq.n	800a43e <HAL_TIM_IC_Start_DMA+0x92>
 800a438:	7d7b      	ldrb	r3, [r7, #21]
 800a43a:	2b02      	cmp	r3, #2
 800a43c:	d101      	bne.n	800a442 <HAL_TIM_IC_Start_DMA+0x96>
 800a43e:	2302      	movs	r3, #2
 800a440:	e146      	b.n	800a6d0 <HAL_TIM_IC_Start_DMA+0x324>
 800a442:	7dbb      	ldrb	r3, [r7, #22]
 800a444:	2b01      	cmp	r3, #1
 800a446:	d143      	bne.n	800a4d0 <HAL_TIM_IC_Start_DMA+0x124>
 800a448:	7d7b      	ldrb	r3, [r7, #21]
 800a44a:	2b01      	cmp	r3, #1
 800a44c:	d140      	bne.n	800a4d0 <HAL_TIM_IC_Start_DMA+0x124>
 800a44e:	687b      	ldr	r3, [r7, #4]
 800a450:	2b00      	cmp	r3, #0
 800a452:	d104      	bne.n	800a45e <HAL_TIM_IC_Start_DMA+0xb2>
 800a454:	887b      	ldrh	r3, [r7, #2]
 800a456:	2b00      	cmp	r3, #0
 800a458:	d001      	beq.n	800a45e <HAL_TIM_IC_Start_DMA+0xb2>
 800a45a:	2301      	movs	r3, #1
 800a45c:	e138      	b.n	800a6d0 <HAL_TIM_IC_Start_DMA+0x324>
 800a45e:	68bb      	ldr	r3, [r7, #8]
 800a460:	2b00      	cmp	r3, #0
 800a462:	d104      	bne.n	800a46e <HAL_TIM_IC_Start_DMA+0xc2>
 800a464:	68fb      	ldr	r3, [r7, #12]
 800a466:	2202      	movs	r2, #2
 800a468:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a46c:	e013      	b.n	800a496 <HAL_TIM_IC_Start_DMA+0xea>
 800a46e:	68bb      	ldr	r3, [r7, #8]
 800a470:	2b04      	cmp	r3, #4
 800a472:	d104      	bne.n	800a47e <HAL_TIM_IC_Start_DMA+0xd2>
 800a474:	68fb      	ldr	r3, [r7, #12]
 800a476:	2202      	movs	r2, #2
 800a478:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a47c:	e00b      	b.n	800a496 <HAL_TIM_IC_Start_DMA+0xea>
 800a47e:	68bb      	ldr	r3, [r7, #8]
 800a480:	2b08      	cmp	r3, #8
 800a482:	d104      	bne.n	800a48e <HAL_TIM_IC_Start_DMA+0xe2>
 800a484:	68fb      	ldr	r3, [r7, #12]
 800a486:	2202      	movs	r2, #2
 800a488:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a48c:	e003      	b.n	800a496 <HAL_TIM_IC_Start_DMA+0xea>
 800a48e:	68fb      	ldr	r3, [r7, #12]
 800a490:	2202      	movs	r2, #2
 800a492:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a496:	68bb      	ldr	r3, [r7, #8]
 800a498:	2b00      	cmp	r3, #0
 800a49a:	d104      	bne.n	800a4a6 <HAL_TIM_IC_Start_DMA+0xfa>
 800a49c:	68fb      	ldr	r3, [r7, #12]
 800a49e:	2202      	movs	r2, #2
 800a4a0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a4a4:	e016      	b.n	800a4d4 <HAL_TIM_IC_Start_DMA+0x128>
 800a4a6:	68bb      	ldr	r3, [r7, #8]
 800a4a8:	2b04      	cmp	r3, #4
 800a4aa:	d104      	bne.n	800a4b6 <HAL_TIM_IC_Start_DMA+0x10a>
 800a4ac:	68fb      	ldr	r3, [r7, #12]
 800a4ae:	2202      	movs	r2, #2
 800a4b0:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a4b4:	e00e      	b.n	800a4d4 <HAL_TIM_IC_Start_DMA+0x128>
 800a4b6:	68bb      	ldr	r3, [r7, #8]
 800a4b8:	2b08      	cmp	r3, #8
 800a4ba:	d104      	bne.n	800a4c6 <HAL_TIM_IC_Start_DMA+0x11a>
 800a4bc:	68fb      	ldr	r3, [r7, #12]
 800a4be:	2202      	movs	r2, #2
 800a4c0:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a4c4:	e006      	b.n	800a4d4 <HAL_TIM_IC_Start_DMA+0x128>
 800a4c6:	68fb      	ldr	r3, [r7, #12]
 800a4c8:	2202      	movs	r2, #2
 800a4ca:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a4ce:	e001      	b.n	800a4d4 <HAL_TIM_IC_Start_DMA+0x128>
 800a4d0:	2301      	movs	r3, #1
 800a4d2:	e0fd      	b.n	800a6d0 <HAL_TIM_IC_Start_DMA+0x324>
 800a4d4:	68fb      	ldr	r3, [r7, #12]
 800a4d6:	681b      	ldr	r3, [r3, #0]
 800a4d8:	2201      	movs	r2, #1
 800a4da:	68b9      	ldr	r1, [r7, #8]
 800a4dc:	4618      	mov	r0, r3
 800a4de:	f001 faab 	bl	800ba38 <TIM_CCxChannelCmd>
 800a4e2:	68bb      	ldr	r3, [r7, #8]
 800a4e4:	2b0c      	cmp	r3, #12
 800a4e6:	f200 80ad 	bhi.w	800a644 <HAL_TIM_IC_Start_DMA+0x298>
 800a4ea:	a201      	add	r2, pc, #4	; (adr r2, 800a4f0 <HAL_TIM_IC_Start_DMA+0x144>)
 800a4ec:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a4f0:	0800a525 	.word	0x0800a525
 800a4f4:	0800a645 	.word	0x0800a645
 800a4f8:	0800a645 	.word	0x0800a645
 800a4fc:	0800a645 	.word	0x0800a645
 800a500:	0800a56d 	.word	0x0800a56d
 800a504:	0800a645 	.word	0x0800a645
 800a508:	0800a645 	.word	0x0800a645
 800a50c:	0800a645 	.word	0x0800a645
 800a510:	0800a5b5 	.word	0x0800a5b5
 800a514:	0800a645 	.word	0x0800a645
 800a518:	0800a645 	.word	0x0800a645
 800a51c:	0800a645 	.word	0x0800a645
 800a520:	0800a5fd 	.word	0x0800a5fd
 800a524:	68fb      	ldr	r3, [r7, #12]
 800a526:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a528:	4a6b      	ldr	r2, [pc, #428]	; (800a6d8 <HAL_TIM_IC_Start_DMA+0x32c>)
 800a52a:	63da      	str	r2, [r3, #60]	; 0x3c
 800a52c:	68fb      	ldr	r3, [r7, #12]
 800a52e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a530:	4a6a      	ldr	r2, [pc, #424]	; (800a6dc <HAL_TIM_IC_Start_DMA+0x330>)
 800a532:	641a      	str	r2, [r3, #64]	; 0x40
 800a534:	68fb      	ldr	r3, [r7, #12]
 800a536:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a538:	4a69      	ldr	r2, [pc, #420]	; (800a6e0 <HAL_TIM_IC_Start_DMA+0x334>)
 800a53a:	64da      	str	r2, [r3, #76]	; 0x4c
 800a53c:	68fb      	ldr	r3, [r7, #12]
 800a53e:	6a58      	ldr	r0, [r3, #36]	; 0x24
 800a540:	68fb      	ldr	r3, [r7, #12]
 800a542:	681b      	ldr	r3, [r3, #0]
 800a544:	3334      	adds	r3, #52	; 0x34
 800a546:	4619      	mov	r1, r3
 800a548:	687a      	ldr	r2, [r7, #4]
 800a54a:	887b      	ldrh	r3, [r7, #2]
 800a54c:	f7fd ff68 	bl	8008420 <HAL_DMA_Start_IT>
 800a550:	4603      	mov	r3, r0
 800a552:	2b00      	cmp	r3, #0
 800a554:	d001      	beq.n	800a55a <HAL_TIM_IC_Start_DMA+0x1ae>
 800a556:	2301      	movs	r3, #1
 800a558:	e0ba      	b.n	800a6d0 <HAL_TIM_IC_Start_DMA+0x324>
 800a55a:	68fb      	ldr	r3, [r7, #12]
 800a55c:	681b      	ldr	r3, [r3, #0]
 800a55e:	68da      	ldr	r2, [r3, #12]
 800a560:	68fb      	ldr	r3, [r7, #12]
 800a562:	681b      	ldr	r3, [r3, #0]
 800a564:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a568:	60da      	str	r2, [r3, #12]
 800a56a:	e06e      	b.n	800a64a <HAL_TIM_IC_Start_DMA+0x29e>
 800a56c:	68fb      	ldr	r3, [r7, #12]
 800a56e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a570:	4a59      	ldr	r2, [pc, #356]	; (800a6d8 <HAL_TIM_IC_Start_DMA+0x32c>)
 800a572:	63da      	str	r2, [r3, #60]	; 0x3c
 800a574:	68fb      	ldr	r3, [r7, #12]
 800a576:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a578:	4a58      	ldr	r2, [pc, #352]	; (800a6dc <HAL_TIM_IC_Start_DMA+0x330>)
 800a57a:	641a      	str	r2, [r3, #64]	; 0x40
 800a57c:	68fb      	ldr	r3, [r7, #12]
 800a57e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a580:	4a57      	ldr	r2, [pc, #348]	; (800a6e0 <HAL_TIM_IC_Start_DMA+0x334>)
 800a582:	64da      	str	r2, [r3, #76]	; 0x4c
 800a584:	68fb      	ldr	r3, [r7, #12]
 800a586:	6a98      	ldr	r0, [r3, #40]	; 0x28
 800a588:	68fb      	ldr	r3, [r7, #12]
 800a58a:	681b      	ldr	r3, [r3, #0]
 800a58c:	3338      	adds	r3, #56	; 0x38
 800a58e:	4619      	mov	r1, r3
 800a590:	687a      	ldr	r2, [r7, #4]
 800a592:	887b      	ldrh	r3, [r7, #2]
 800a594:	f7fd ff44 	bl	8008420 <HAL_DMA_Start_IT>
 800a598:	4603      	mov	r3, r0
 800a59a:	2b00      	cmp	r3, #0
 800a59c:	d001      	beq.n	800a5a2 <HAL_TIM_IC_Start_DMA+0x1f6>
 800a59e:	2301      	movs	r3, #1
 800a5a0:	e096      	b.n	800a6d0 <HAL_TIM_IC_Start_DMA+0x324>
 800a5a2:	68fb      	ldr	r3, [r7, #12]
 800a5a4:	681b      	ldr	r3, [r3, #0]
 800a5a6:	68da      	ldr	r2, [r3, #12]
 800a5a8:	68fb      	ldr	r3, [r7, #12]
 800a5aa:	681b      	ldr	r3, [r3, #0]
 800a5ac:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a5b0:	60da      	str	r2, [r3, #12]
 800a5b2:	e04a      	b.n	800a64a <HAL_TIM_IC_Start_DMA+0x29e>
 800a5b4:	68fb      	ldr	r3, [r7, #12]
 800a5b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a5b8:	4a47      	ldr	r2, [pc, #284]	; (800a6d8 <HAL_TIM_IC_Start_DMA+0x32c>)
 800a5ba:	63da      	str	r2, [r3, #60]	; 0x3c
 800a5bc:	68fb      	ldr	r3, [r7, #12]
 800a5be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a5c0:	4a46      	ldr	r2, [pc, #280]	; (800a6dc <HAL_TIM_IC_Start_DMA+0x330>)
 800a5c2:	641a      	str	r2, [r3, #64]	; 0x40
 800a5c4:	68fb      	ldr	r3, [r7, #12]
 800a5c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a5c8:	4a45      	ldr	r2, [pc, #276]	; (800a6e0 <HAL_TIM_IC_Start_DMA+0x334>)
 800a5ca:	64da      	str	r2, [r3, #76]	; 0x4c
 800a5cc:	68fb      	ldr	r3, [r7, #12]
 800a5ce:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 800a5d0:	68fb      	ldr	r3, [r7, #12]
 800a5d2:	681b      	ldr	r3, [r3, #0]
 800a5d4:	333c      	adds	r3, #60	; 0x3c
 800a5d6:	4619      	mov	r1, r3
 800a5d8:	687a      	ldr	r2, [r7, #4]
 800a5da:	887b      	ldrh	r3, [r7, #2]
 800a5dc:	f7fd ff20 	bl	8008420 <HAL_DMA_Start_IT>
 800a5e0:	4603      	mov	r3, r0
 800a5e2:	2b00      	cmp	r3, #0
 800a5e4:	d001      	beq.n	800a5ea <HAL_TIM_IC_Start_DMA+0x23e>
 800a5e6:	2301      	movs	r3, #1
 800a5e8:	e072      	b.n	800a6d0 <HAL_TIM_IC_Start_DMA+0x324>
 800a5ea:	68fb      	ldr	r3, [r7, #12]
 800a5ec:	681b      	ldr	r3, [r3, #0]
 800a5ee:	68da      	ldr	r2, [r3, #12]
 800a5f0:	68fb      	ldr	r3, [r7, #12]
 800a5f2:	681b      	ldr	r3, [r3, #0]
 800a5f4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a5f8:	60da      	str	r2, [r3, #12]
 800a5fa:	e026      	b.n	800a64a <HAL_TIM_IC_Start_DMA+0x29e>
 800a5fc:	68fb      	ldr	r3, [r7, #12]
 800a5fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a600:	4a35      	ldr	r2, [pc, #212]	; (800a6d8 <HAL_TIM_IC_Start_DMA+0x32c>)
 800a602:	63da      	str	r2, [r3, #60]	; 0x3c
 800a604:	68fb      	ldr	r3, [r7, #12]
 800a606:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a608:	4a34      	ldr	r2, [pc, #208]	; (800a6dc <HAL_TIM_IC_Start_DMA+0x330>)
 800a60a:	641a      	str	r2, [r3, #64]	; 0x40
 800a60c:	68fb      	ldr	r3, [r7, #12]
 800a60e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a610:	4a33      	ldr	r2, [pc, #204]	; (800a6e0 <HAL_TIM_IC_Start_DMA+0x334>)
 800a612:	64da      	str	r2, [r3, #76]	; 0x4c
 800a614:	68fb      	ldr	r3, [r7, #12]
 800a616:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800a618:	68fb      	ldr	r3, [r7, #12]
 800a61a:	681b      	ldr	r3, [r3, #0]
 800a61c:	3340      	adds	r3, #64	; 0x40
 800a61e:	4619      	mov	r1, r3
 800a620:	687a      	ldr	r2, [r7, #4]
 800a622:	887b      	ldrh	r3, [r7, #2]
 800a624:	f7fd fefc 	bl	8008420 <HAL_DMA_Start_IT>
 800a628:	4603      	mov	r3, r0
 800a62a:	2b00      	cmp	r3, #0
 800a62c:	d001      	beq.n	800a632 <HAL_TIM_IC_Start_DMA+0x286>
 800a62e:	2301      	movs	r3, #1
 800a630:	e04e      	b.n	800a6d0 <HAL_TIM_IC_Start_DMA+0x324>
 800a632:	68fb      	ldr	r3, [r7, #12]
 800a634:	681b      	ldr	r3, [r3, #0]
 800a636:	68da      	ldr	r2, [r3, #12]
 800a638:	68fb      	ldr	r3, [r7, #12]
 800a63a:	681b      	ldr	r3, [r3, #0]
 800a63c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800a640:	60da      	str	r2, [r3, #12]
 800a642:	e002      	b.n	800a64a <HAL_TIM_IC_Start_DMA+0x29e>
 800a644:	2301      	movs	r3, #1
 800a646:	75fb      	strb	r3, [r7, #23]
 800a648:	bf00      	nop
 800a64a:	68fb      	ldr	r3, [r7, #12]
 800a64c:	681b      	ldr	r3, [r3, #0]
 800a64e:	4a25      	ldr	r2, [pc, #148]	; (800a6e4 <HAL_TIM_IC_Start_DMA+0x338>)
 800a650:	4293      	cmp	r3, r2
 800a652:	d022      	beq.n	800a69a <HAL_TIM_IC_Start_DMA+0x2ee>
 800a654:	68fb      	ldr	r3, [r7, #12]
 800a656:	681b      	ldr	r3, [r3, #0]
 800a658:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a65c:	d01d      	beq.n	800a69a <HAL_TIM_IC_Start_DMA+0x2ee>
 800a65e:	68fb      	ldr	r3, [r7, #12]
 800a660:	681b      	ldr	r3, [r3, #0]
 800a662:	4a21      	ldr	r2, [pc, #132]	; (800a6e8 <HAL_TIM_IC_Start_DMA+0x33c>)
 800a664:	4293      	cmp	r3, r2
 800a666:	d018      	beq.n	800a69a <HAL_TIM_IC_Start_DMA+0x2ee>
 800a668:	68fb      	ldr	r3, [r7, #12]
 800a66a:	681b      	ldr	r3, [r3, #0]
 800a66c:	4a1f      	ldr	r2, [pc, #124]	; (800a6ec <HAL_TIM_IC_Start_DMA+0x340>)
 800a66e:	4293      	cmp	r3, r2
 800a670:	d013      	beq.n	800a69a <HAL_TIM_IC_Start_DMA+0x2ee>
 800a672:	68fb      	ldr	r3, [r7, #12]
 800a674:	681b      	ldr	r3, [r3, #0]
 800a676:	4a1e      	ldr	r2, [pc, #120]	; (800a6f0 <HAL_TIM_IC_Start_DMA+0x344>)
 800a678:	4293      	cmp	r3, r2
 800a67a:	d00e      	beq.n	800a69a <HAL_TIM_IC_Start_DMA+0x2ee>
 800a67c:	68fb      	ldr	r3, [r7, #12]
 800a67e:	681b      	ldr	r3, [r3, #0]
 800a680:	4a1c      	ldr	r2, [pc, #112]	; (800a6f4 <HAL_TIM_IC_Start_DMA+0x348>)
 800a682:	4293      	cmp	r3, r2
 800a684:	d009      	beq.n	800a69a <HAL_TIM_IC_Start_DMA+0x2ee>
 800a686:	68fb      	ldr	r3, [r7, #12]
 800a688:	681b      	ldr	r3, [r3, #0]
 800a68a:	4a1b      	ldr	r2, [pc, #108]	; (800a6f8 <HAL_TIM_IC_Start_DMA+0x34c>)
 800a68c:	4293      	cmp	r3, r2
 800a68e:	d004      	beq.n	800a69a <HAL_TIM_IC_Start_DMA+0x2ee>
 800a690:	68fb      	ldr	r3, [r7, #12]
 800a692:	681b      	ldr	r3, [r3, #0]
 800a694:	4a19      	ldr	r2, [pc, #100]	; (800a6fc <HAL_TIM_IC_Start_DMA+0x350>)
 800a696:	4293      	cmp	r3, r2
 800a698:	d111      	bne.n	800a6be <HAL_TIM_IC_Start_DMA+0x312>
 800a69a:	68fb      	ldr	r3, [r7, #12]
 800a69c:	681b      	ldr	r3, [r3, #0]
 800a69e:	689b      	ldr	r3, [r3, #8]
 800a6a0:	f003 0307 	and.w	r3, r3, #7
 800a6a4:	613b      	str	r3, [r7, #16]
 800a6a6:	693b      	ldr	r3, [r7, #16]
 800a6a8:	2b06      	cmp	r3, #6
 800a6aa:	d010      	beq.n	800a6ce <HAL_TIM_IC_Start_DMA+0x322>
 800a6ac:	68fb      	ldr	r3, [r7, #12]
 800a6ae:	681b      	ldr	r3, [r3, #0]
 800a6b0:	681a      	ldr	r2, [r3, #0]
 800a6b2:	68fb      	ldr	r3, [r7, #12]
 800a6b4:	681b      	ldr	r3, [r3, #0]
 800a6b6:	f042 0201 	orr.w	r2, r2, #1
 800a6ba:	601a      	str	r2, [r3, #0]
 800a6bc:	e007      	b.n	800a6ce <HAL_TIM_IC_Start_DMA+0x322>
 800a6be:	68fb      	ldr	r3, [r7, #12]
 800a6c0:	681b      	ldr	r3, [r3, #0]
 800a6c2:	681a      	ldr	r2, [r3, #0]
 800a6c4:	68fb      	ldr	r3, [r7, #12]
 800a6c6:	681b      	ldr	r3, [r3, #0]
 800a6c8:	f042 0201 	orr.w	r2, r2, #1
 800a6cc:	601a      	str	r2, [r3, #0]
 800a6ce:	7dfb      	ldrb	r3, [r7, #23]
 800a6d0:	4618      	mov	r0, r3
 800a6d2:	3718      	adds	r7, #24
 800a6d4:	46bd      	mov	sp, r7
 800a6d6:	bd80      	pop	{r7, pc}
 800a6d8:	0800b0e1 	.word	0x0800b0e1
 800a6dc:	0800b1a9 	.word	0x0800b1a9
 800a6e0:	0800b04f 	.word	0x0800b04f
 800a6e4:	40010000 	.word	0x40010000
 800a6e8:	40000400 	.word	0x40000400
 800a6ec:	40000800 	.word	0x40000800
 800a6f0:	40000c00 	.word	0x40000c00
 800a6f4:	40010400 	.word	0x40010400
 800a6f8:	40014000 	.word	0x40014000
 800a6fc:	40001800 	.word	0x40001800

0800a700 <HAL_TIM_Encoder_Init>:
 800a700:	b580      	push	{r7, lr}
 800a702:	b086      	sub	sp, #24
 800a704:	af00      	add	r7, sp, #0
 800a706:	6078      	str	r0, [r7, #4]
 800a708:	6039      	str	r1, [r7, #0]
 800a70a:	687b      	ldr	r3, [r7, #4]
 800a70c:	2b00      	cmp	r3, #0
 800a70e:	d101      	bne.n	800a714 <HAL_TIM_Encoder_Init+0x14>
 800a710:	2301      	movs	r3, #1
 800a712:	e097      	b.n	800a844 <HAL_TIM_Encoder_Init+0x144>
 800a714:	687b      	ldr	r3, [r7, #4]
 800a716:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a71a:	b2db      	uxtb	r3, r3
 800a71c:	2b00      	cmp	r3, #0
 800a71e:	d106      	bne.n	800a72e <HAL_TIM_Encoder_Init+0x2e>
 800a720:	687b      	ldr	r3, [r7, #4]
 800a722:	2200      	movs	r2, #0
 800a724:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a728:	6878      	ldr	r0, [r7, #4]
 800a72a:	f7fc fb31 	bl	8006d90 <HAL_TIM_Encoder_MspInit>
 800a72e:	687b      	ldr	r3, [r7, #4]
 800a730:	2202      	movs	r2, #2
 800a732:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a736:	687b      	ldr	r3, [r7, #4]
 800a738:	681b      	ldr	r3, [r3, #0]
 800a73a:	689b      	ldr	r3, [r3, #8]
 800a73c:	687a      	ldr	r2, [r7, #4]
 800a73e:	6812      	ldr	r2, [r2, #0]
 800a740:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800a744:	f023 0307 	bic.w	r3, r3, #7
 800a748:	6093      	str	r3, [r2, #8]
 800a74a:	687b      	ldr	r3, [r7, #4]
 800a74c:	681a      	ldr	r2, [r3, #0]
 800a74e:	687b      	ldr	r3, [r7, #4]
 800a750:	3304      	adds	r3, #4
 800a752:	4619      	mov	r1, r3
 800a754:	4610      	mov	r0, r2
 800a756:	f000 fd5b 	bl	800b210 <TIM_Base_SetConfig>
 800a75a:	687b      	ldr	r3, [r7, #4]
 800a75c:	681b      	ldr	r3, [r3, #0]
 800a75e:	689b      	ldr	r3, [r3, #8]
 800a760:	617b      	str	r3, [r7, #20]
 800a762:	687b      	ldr	r3, [r7, #4]
 800a764:	681b      	ldr	r3, [r3, #0]
 800a766:	699b      	ldr	r3, [r3, #24]
 800a768:	613b      	str	r3, [r7, #16]
 800a76a:	687b      	ldr	r3, [r7, #4]
 800a76c:	681b      	ldr	r3, [r3, #0]
 800a76e:	6a1b      	ldr	r3, [r3, #32]
 800a770:	60fb      	str	r3, [r7, #12]
 800a772:	683b      	ldr	r3, [r7, #0]
 800a774:	681b      	ldr	r3, [r3, #0]
 800a776:	697a      	ldr	r2, [r7, #20]
 800a778:	4313      	orrs	r3, r2
 800a77a:	617b      	str	r3, [r7, #20]
 800a77c:	693b      	ldr	r3, [r7, #16]
 800a77e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800a782:	f023 0303 	bic.w	r3, r3, #3
 800a786:	613b      	str	r3, [r7, #16]
 800a788:	683b      	ldr	r3, [r7, #0]
 800a78a:	689a      	ldr	r2, [r3, #8]
 800a78c:	683b      	ldr	r3, [r7, #0]
 800a78e:	699b      	ldr	r3, [r3, #24]
 800a790:	021b      	lsls	r3, r3, #8
 800a792:	4313      	orrs	r3, r2
 800a794:	693a      	ldr	r2, [r7, #16]
 800a796:	4313      	orrs	r3, r2
 800a798:	613b      	str	r3, [r7, #16]
 800a79a:	693b      	ldr	r3, [r7, #16]
 800a79c:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 800a7a0:	f023 030c 	bic.w	r3, r3, #12
 800a7a4:	613b      	str	r3, [r7, #16]
 800a7a6:	693b      	ldr	r3, [r7, #16]
 800a7a8:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800a7ac:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800a7b0:	613b      	str	r3, [r7, #16]
 800a7b2:	683b      	ldr	r3, [r7, #0]
 800a7b4:	68da      	ldr	r2, [r3, #12]
 800a7b6:	683b      	ldr	r3, [r7, #0]
 800a7b8:	69db      	ldr	r3, [r3, #28]
 800a7ba:	021b      	lsls	r3, r3, #8
 800a7bc:	4313      	orrs	r3, r2
 800a7be:	693a      	ldr	r2, [r7, #16]
 800a7c0:	4313      	orrs	r3, r2
 800a7c2:	613b      	str	r3, [r7, #16]
 800a7c4:	683b      	ldr	r3, [r7, #0]
 800a7c6:	691b      	ldr	r3, [r3, #16]
 800a7c8:	011a      	lsls	r2, r3, #4
 800a7ca:	683b      	ldr	r3, [r7, #0]
 800a7cc:	6a1b      	ldr	r3, [r3, #32]
 800a7ce:	031b      	lsls	r3, r3, #12
 800a7d0:	4313      	orrs	r3, r2
 800a7d2:	693a      	ldr	r2, [r7, #16]
 800a7d4:	4313      	orrs	r3, r2
 800a7d6:	613b      	str	r3, [r7, #16]
 800a7d8:	68fb      	ldr	r3, [r7, #12]
 800a7da:	f023 0322 	bic.w	r3, r3, #34	; 0x22
 800a7de:	60fb      	str	r3, [r7, #12]
 800a7e0:	68fb      	ldr	r3, [r7, #12]
 800a7e2:	f023 0388 	bic.w	r3, r3, #136	; 0x88
 800a7e6:	60fb      	str	r3, [r7, #12]
 800a7e8:	683b      	ldr	r3, [r7, #0]
 800a7ea:	685a      	ldr	r2, [r3, #4]
 800a7ec:	683b      	ldr	r3, [r7, #0]
 800a7ee:	695b      	ldr	r3, [r3, #20]
 800a7f0:	011b      	lsls	r3, r3, #4
 800a7f2:	4313      	orrs	r3, r2
 800a7f4:	68fa      	ldr	r2, [r7, #12]
 800a7f6:	4313      	orrs	r3, r2
 800a7f8:	60fb      	str	r3, [r7, #12]
 800a7fa:	687b      	ldr	r3, [r7, #4]
 800a7fc:	681b      	ldr	r3, [r3, #0]
 800a7fe:	697a      	ldr	r2, [r7, #20]
 800a800:	609a      	str	r2, [r3, #8]
 800a802:	687b      	ldr	r3, [r7, #4]
 800a804:	681b      	ldr	r3, [r3, #0]
 800a806:	693a      	ldr	r2, [r7, #16]
 800a808:	619a      	str	r2, [r3, #24]
 800a80a:	687b      	ldr	r3, [r7, #4]
 800a80c:	681b      	ldr	r3, [r3, #0]
 800a80e:	68fa      	ldr	r2, [r7, #12]
 800a810:	621a      	str	r2, [r3, #32]
 800a812:	687b      	ldr	r3, [r7, #4]
 800a814:	2201      	movs	r2, #1
 800a816:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800a81a:	687b      	ldr	r3, [r7, #4]
 800a81c:	2201      	movs	r2, #1
 800a81e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a822:	687b      	ldr	r3, [r7, #4]
 800a824:	2201      	movs	r2, #1
 800a826:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a82a:	687b      	ldr	r3, [r7, #4]
 800a82c:	2201      	movs	r2, #1
 800a82e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a832:	687b      	ldr	r3, [r7, #4]
 800a834:	2201      	movs	r2, #1
 800a836:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a83a:	687b      	ldr	r3, [r7, #4]
 800a83c:	2201      	movs	r2, #1
 800a83e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a842:	2300      	movs	r3, #0
 800a844:	4618      	mov	r0, r3
 800a846:	3718      	adds	r7, #24
 800a848:	46bd      	mov	sp, r7
 800a84a:	bd80      	pop	{r7, pc}

0800a84c <HAL_TIM_Encoder_Start>:
 800a84c:	b580      	push	{r7, lr}
 800a84e:	b084      	sub	sp, #16
 800a850:	af00      	add	r7, sp, #0
 800a852:	6078      	str	r0, [r7, #4]
 800a854:	6039      	str	r1, [r7, #0]
 800a856:	687b      	ldr	r3, [r7, #4]
 800a858:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a85c:	73fb      	strb	r3, [r7, #15]
 800a85e:	687b      	ldr	r3, [r7, #4]
 800a860:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800a864:	73bb      	strb	r3, [r7, #14]
 800a866:	687b      	ldr	r3, [r7, #4]
 800a868:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800a86c:	737b      	strb	r3, [r7, #13]
 800a86e:	687b      	ldr	r3, [r7, #4]
 800a870:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 800a874:	733b      	strb	r3, [r7, #12]
 800a876:	683b      	ldr	r3, [r7, #0]
 800a878:	2b00      	cmp	r3, #0
 800a87a:	d110      	bne.n	800a89e <HAL_TIM_Encoder_Start+0x52>
 800a87c:	7bfb      	ldrb	r3, [r7, #15]
 800a87e:	2b01      	cmp	r3, #1
 800a880:	d102      	bne.n	800a888 <HAL_TIM_Encoder_Start+0x3c>
 800a882:	7b7b      	ldrb	r3, [r7, #13]
 800a884:	2b01      	cmp	r3, #1
 800a886:	d001      	beq.n	800a88c <HAL_TIM_Encoder_Start+0x40>
 800a888:	2301      	movs	r3, #1
 800a88a:	e069      	b.n	800a960 <HAL_TIM_Encoder_Start+0x114>
 800a88c:	687b      	ldr	r3, [r7, #4]
 800a88e:	2202      	movs	r2, #2
 800a890:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a894:	687b      	ldr	r3, [r7, #4]
 800a896:	2202      	movs	r2, #2
 800a898:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a89c:	e031      	b.n	800a902 <HAL_TIM_Encoder_Start+0xb6>
 800a89e:	683b      	ldr	r3, [r7, #0]
 800a8a0:	2b04      	cmp	r3, #4
 800a8a2:	d110      	bne.n	800a8c6 <HAL_TIM_Encoder_Start+0x7a>
 800a8a4:	7bbb      	ldrb	r3, [r7, #14]
 800a8a6:	2b01      	cmp	r3, #1
 800a8a8:	d102      	bne.n	800a8b0 <HAL_TIM_Encoder_Start+0x64>
 800a8aa:	7b3b      	ldrb	r3, [r7, #12]
 800a8ac:	2b01      	cmp	r3, #1
 800a8ae:	d001      	beq.n	800a8b4 <HAL_TIM_Encoder_Start+0x68>
 800a8b0:	2301      	movs	r3, #1
 800a8b2:	e055      	b.n	800a960 <HAL_TIM_Encoder_Start+0x114>
 800a8b4:	687b      	ldr	r3, [r7, #4]
 800a8b6:	2202      	movs	r2, #2
 800a8b8:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a8bc:	687b      	ldr	r3, [r7, #4]
 800a8be:	2202      	movs	r2, #2
 800a8c0:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a8c4:	e01d      	b.n	800a902 <HAL_TIM_Encoder_Start+0xb6>
 800a8c6:	7bfb      	ldrb	r3, [r7, #15]
 800a8c8:	2b01      	cmp	r3, #1
 800a8ca:	d108      	bne.n	800a8de <HAL_TIM_Encoder_Start+0x92>
 800a8cc:	7bbb      	ldrb	r3, [r7, #14]
 800a8ce:	2b01      	cmp	r3, #1
 800a8d0:	d105      	bne.n	800a8de <HAL_TIM_Encoder_Start+0x92>
 800a8d2:	7b7b      	ldrb	r3, [r7, #13]
 800a8d4:	2b01      	cmp	r3, #1
 800a8d6:	d102      	bne.n	800a8de <HAL_TIM_Encoder_Start+0x92>
 800a8d8:	7b3b      	ldrb	r3, [r7, #12]
 800a8da:	2b01      	cmp	r3, #1
 800a8dc:	d001      	beq.n	800a8e2 <HAL_TIM_Encoder_Start+0x96>
 800a8de:	2301      	movs	r3, #1
 800a8e0:	e03e      	b.n	800a960 <HAL_TIM_Encoder_Start+0x114>
 800a8e2:	687b      	ldr	r3, [r7, #4]
 800a8e4:	2202      	movs	r2, #2
 800a8e6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a8ea:	687b      	ldr	r3, [r7, #4]
 800a8ec:	2202      	movs	r2, #2
 800a8ee:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a8f2:	687b      	ldr	r3, [r7, #4]
 800a8f4:	2202      	movs	r2, #2
 800a8f6:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a8fa:	687b      	ldr	r3, [r7, #4]
 800a8fc:	2202      	movs	r2, #2
 800a8fe:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a902:	683b      	ldr	r3, [r7, #0]
 800a904:	2b00      	cmp	r3, #0
 800a906:	d003      	beq.n	800a910 <HAL_TIM_Encoder_Start+0xc4>
 800a908:	683b      	ldr	r3, [r7, #0]
 800a90a:	2b04      	cmp	r3, #4
 800a90c:	d008      	beq.n	800a920 <HAL_TIM_Encoder_Start+0xd4>
 800a90e:	e00f      	b.n	800a930 <HAL_TIM_Encoder_Start+0xe4>
 800a910:	687b      	ldr	r3, [r7, #4]
 800a912:	681b      	ldr	r3, [r3, #0]
 800a914:	2201      	movs	r2, #1
 800a916:	2100      	movs	r1, #0
 800a918:	4618      	mov	r0, r3
 800a91a:	f001 f88d 	bl	800ba38 <TIM_CCxChannelCmd>
 800a91e:	e016      	b.n	800a94e <HAL_TIM_Encoder_Start+0x102>
 800a920:	687b      	ldr	r3, [r7, #4]
 800a922:	681b      	ldr	r3, [r3, #0]
 800a924:	2201      	movs	r2, #1
 800a926:	2104      	movs	r1, #4
 800a928:	4618      	mov	r0, r3
 800a92a:	f001 f885 	bl	800ba38 <TIM_CCxChannelCmd>
 800a92e:	e00e      	b.n	800a94e <HAL_TIM_Encoder_Start+0x102>
 800a930:	687b      	ldr	r3, [r7, #4]
 800a932:	681b      	ldr	r3, [r3, #0]
 800a934:	2201      	movs	r2, #1
 800a936:	2100      	movs	r1, #0
 800a938:	4618      	mov	r0, r3
 800a93a:	f001 f87d 	bl	800ba38 <TIM_CCxChannelCmd>
 800a93e:	687b      	ldr	r3, [r7, #4]
 800a940:	681b      	ldr	r3, [r3, #0]
 800a942:	2201      	movs	r2, #1
 800a944:	2104      	movs	r1, #4
 800a946:	4618      	mov	r0, r3
 800a948:	f001 f876 	bl	800ba38 <TIM_CCxChannelCmd>
 800a94c:	bf00      	nop
 800a94e:	687b      	ldr	r3, [r7, #4]
 800a950:	681b      	ldr	r3, [r3, #0]
 800a952:	681a      	ldr	r2, [r3, #0]
 800a954:	687b      	ldr	r3, [r7, #4]
 800a956:	681b      	ldr	r3, [r3, #0]
 800a958:	f042 0201 	orr.w	r2, r2, #1
 800a95c:	601a      	str	r2, [r3, #0]
 800a95e:	2300      	movs	r3, #0
 800a960:	4618      	mov	r0, r3
 800a962:	3710      	adds	r7, #16
 800a964:	46bd      	mov	sp, r7
 800a966:	bd80      	pop	{r7, pc}

0800a968 <HAL_TIM_IRQHandler>:
 800a968:	b580      	push	{r7, lr}
 800a96a:	b082      	sub	sp, #8
 800a96c:	af00      	add	r7, sp, #0
 800a96e:	6078      	str	r0, [r7, #4]
 800a970:	687b      	ldr	r3, [r7, #4]
 800a972:	681b      	ldr	r3, [r3, #0]
 800a974:	691b      	ldr	r3, [r3, #16]
 800a976:	f003 0302 	and.w	r3, r3, #2
 800a97a:	2b02      	cmp	r3, #2
 800a97c:	d122      	bne.n	800a9c4 <HAL_TIM_IRQHandler+0x5c>
 800a97e:	687b      	ldr	r3, [r7, #4]
 800a980:	681b      	ldr	r3, [r3, #0]
 800a982:	68db      	ldr	r3, [r3, #12]
 800a984:	f003 0302 	and.w	r3, r3, #2
 800a988:	2b02      	cmp	r3, #2
 800a98a:	d11b      	bne.n	800a9c4 <HAL_TIM_IRQHandler+0x5c>
 800a98c:	687b      	ldr	r3, [r7, #4]
 800a98e:	681b      	ldr	r3, [r3, #0]
 800a990:	f06f 0202 	mvn.w	r2, #2
 800a994:	611a      	str	r2, [r3, #16]
 800a996:	687b      	ldr	r3, [r7, #4]
 800a998:	2201      	movs	r2, #1
 800a99a:	771a      	strb	r2, [r3, #28]
 800a99c:	687b      	ldr	r3, [r7, #4]
 800a99e:	681b      	ldr	r3, [r3, #0]
 800a9a0:	699b      	ldr	r3, [r3, #24]
 800a9a2:	f003 0303 	and.w	r3, r3, #3
 800a9a6:	2b00      	cmp	r3, #0
 800a9a8:	d003      	beq.n	800a9b2 <HAL_TIM_IRQHandler+0x4a>
 800a9aa:	6878      	ldr	r0, [r7, #4]
 800a9ac:	f000 fb1d 	bl	800afea <HAL_TIM_IC_CaptureCallback>
 800a9b0:	e005      	b.n	800a9be <HAL_TIM_IRQHandler+0x56>
 800a9b2:	6878      	ldr	r0, [r7, #4]
 800a9b4:	f000 fb0f 	bl	800afd6 <HAL_TIM_OC_DelayElapsedCallback>
 800a9b8:	6878      	ldr	r0, [r7, #4]
 800a9ba:	f000 fb2a 	bl	800b012 <HAL_TIM_PWM_PulseFinishedCallback>
 800a9be:	687b      	ldr	r3, [r7, #4]
 800a9c0:	2200      	movs	r2, #0
 800a9c2:	771a      	strb	r2, [r3, #28]
 800a9c4:	687b      	ldr	r3, [r7, #4]
 800a9c6:	681b      	ldr	r3, [r3, #0]
 800a9c8:	691b      	ldr	r3, [r3, #16]
 800a9ca:	f003 0304 	and.w	r3, r3, #4
 800a9ce:	2b04      	cmp	r3, #4
 800a9d0:	d122      	bne.n	800aa18 <HAL_TIM_IRQHandler+0xb0>
 800a9d2:	687b      	ldr	r3, [r7, #4]
 800a9d4:	681b      	ldr	r3, [r3, #0]
 800a9d6:	68db      	ldr	r3, [r3, #12]
 800a9d8:	f003 0304 	and.w	r3, r3, #4
 800a9dc:	2b04      	cmp	r3, #4
 800a9de:	d11b      	bne.n	800aa18 <HAL_TIM_IRQHandler+0xb0>
 800a9e0:	687b      	ldr	r3, [r7, #4]
 800a9e2:	681b      	ldr	r3, [r3, #0]
 800a9e4:	f06f 0204 	mvn.w	r2, #4
 800a9e8:	611a      	str	r2, [r3, #16]
 800a9ea:	687b      	ldr	r3, [r7, #4]
 800a9ec:	2202      	movs	r2, #2
 800a9ee:	771a      	strb	r2, [r3, #28]
 800a9f0:	687b      	ldr	r3, [r7, #4]
 800a9f2:	681b      	ldr	r3, [r3, #0]
 800a9f4:	699b      	ldr	r3, [r3, #24]
 800a9f6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800a9fa:	2b00      	cmp	r3, #0
 800a9fc:	d003      	beq.n	800aa06 <HAL_TIM_IRQHandler+0x9e>
 800a9fe:	6878      	ldr	r0, [r7, #4]
 800aa00:	f000 faf3 	bl	800afea <HAL_TIM_IC_CaptureCallback>
 800aa04:	e005      	b.n	800aa12 <HAL_TIM_IRQHandler+0xaa>
 800aa06:	6878      	ldr	r0, [r7, #4]
 800aa08:	f000 fae5 	bl	800afd6 <HAL_TIM_OC_DelayElapsedCallback>
 800aa0c:	6878      	ldr	r0, [r7, #4]
 800aa0e:	f000 fb00 	bl	800b012 <HAL_TIM_PWM_PulseFinishedCallback>
 800aa12:	687b      	ldr	r3, [r7, #4]
 800aa14:	2200      	movs	r2, #0
 800aa16:	771a      	strb	r2, [r3, #28]
 800aa18:	687b      	ldr	r3, [r7, #4]
 800aa1a:	681b      	ldr	r3, [r3, #0]
 800aa1c:	691b      	ldr	r3, [r3, #16]
 800aa1e:	f003 0308 	and.w	r3, r3, #8
 800aa22:	2b08      	cmp	r3, #8
 800aa24:	d122      	bne.n	800aa6c <HAL_TIM_IRQHandler+0x104>
 800aa26:	687b      	ldr	r3, [r7, #4]
 800aa28:	681b      	ldr	r3, [r3, #0]
 800aa2a:	68db      	ldr	r3, [r3, #12]
 800aa2c:	f003 0308 	and.w	r3, r3, #8
 800aa30:	2b08      	cmp	r3, #8
 800aa32:	d11b      	bne.n	800aa6c <HAL_TIM_IRQHandler+0x104>
 800aa34:	687b      	ldr	r3, [r7, #4]
 800aa36:	681b      	ldr	r3, [r3, #0]
 800aa38:	f06f 0208 	mvn.w	r2, #8
 800aa3c:	611a      	str	r2, [r3, #16]
 800aa3e:	687b      	ldr	r3, [r7, #4]
 800aa40:	2204      	movs	r2, #4
 800aa42:	771a      	strb	r2, [r3, #28]
 800aa44:	687b      	ldr	r3, [r7, #4]
 800aa46:	681b      	ldr	r3, [r3, #0]
 800aa48:	69db      	ldr	r3, [r3, #28]
 800aa4a:	f003 0303 	and.w	r3, r3, #3
 800aa4e:	2b00      	cmp	r3, #0
 800aa50:	d003      	beq.n	800aa5a <HAL_TIM_IRQHandler+0xf2>
 800aa52:	6878      	ldr	r0, [r7, #4]
 800aa54:	f000 fac9 	bl	800afea <HAL_TIM_IC_CaptureCallback>
 800aa58:	e005      	b.n	800aa66 <HAL_TIM_IRQHandler+0xfe>
 800aa5a:	6878      	ldr	r0, [r7, #4]
 800aa5c:	f000 fabb 	bl	800afd6 <HAL_TIM_OC_DelayElapsedCallback>
 800aa60:	6878      	ldr	r0, [r7, #4]
 800aa62:	f000 fad6 	bl	800b012 <HAL_TIM_PWM_PulseFinishedCallback>
 800aa66:	687b      	ldr	r3, [r7, #4]
 800aa68:	2200      	movs	r2, #0
 800aa6a:	771a      	strb	r2, [r3, #28]
 800aa6c:	687b      	ldr	r3, [r7, #4]
 800aa6e:	681b      	ldr	r3, [r3, #0]
 800aa70:	691b      	ldr	r3, [r3, #16]
 800aa72:	f003 0310 	and.w	r3, r3, #16
 800aa76:	2b10      	cmp	r3, #16
 800aa78:	d122      	bne.n	800aac0 <HAL_TIM_IRQHandler+0x158>
 800aa7a:	687b      	ldr	r3, [r7, #4]
 800aa7c:	681b      	ldr	r3, [r3, #0]
 800aa7e:	68db      	ldr	r3, [r3, #12]
 800aa80:	f003 0310 	and.w	r3, r3, #16
 800aa84:	2b10      	cmp	r3, #16
 800aa86:	d11b      	bne.n	800aac0 <HAL_TIM_IRQHandler+0x158>
 800aa88:	687b      	ldr	r3, [r7, #4]
 800aa8a:	681b      	ldr	r3, [r3, #0]
 800aa8c:	f06f 0210 	mvn.w	r2, #16
 800aa90:	611a      	str	r2, [r3, #16]
 800aa92:	687b      	ldr	r3, [r7, #4]
 800aa94:	2208      	movs	r2, #8
 800aa96:	771a      	strb	r2, [r3, #28]
 800aa98:	687b      	ldr	r3, [r7, #4]
 800aa9a:	681b      	ldr	r3, [r3, #0]
 800aa9c:	69db      	ldr	r3, [r3, #28]
 800aa9e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800aaa2:	2b00      	cmp	r3, #0
 800aaa4:	d003      	beq.n	800aaae <HAL_TIM_IRQHandler+0x146>
 800aaa6:	6878      	ldr	r0, [r7, #4]
 800aaa8:	f000 fa9f 	bl	800afea <HAL_TIM_IC_CaptureCallback>
 800aaac:	e005      	b.n	800aaba <HAL_TIM_IRQHandler+0x152>
 800aaae:	6878      	ldr	r0, [r7, #4]
 800aab0:	f000 fa91 	bl	800afd6 <HAL_TIM_OC_DelayElapsedCallback>
 800aab4:	6878      	ldr	r0, [r7, #4]
 800aab6:	f000 faac 	bl	800b012 <HAL_TIM_PWM_PulseFinishedCallback>
 800aaba:	687b      	ldr	r3, [r7, #4]
 800aabc:	2200      	movs	r2, #0
 800aabe:	771a      	strb	r2, [r3, #28]
 800aac0:	687b      	ldr	r3, [r7, #4]
 800aac2:	681b      	ldr	r3, [r3, #0]
 800aac4:	691b      	ldr	r3, [r3, #16]
 800aac6:	f003 0301 	and.w	r3, r3, #1
 800aaca:	2b01      	cmp	r3, #1
 800aacc:	d10e      	bne.n	800aaec <HAL_TIM_IRQHandler+0x184>
 800aace:	687b      	ldr	r3, [r7, #4]
 800aad0:	681b      	ldr	r3, [r3, #0]
 800aad2:	68db      	ldr	r3, [r3, #12]
 800aad4:	f003 0301 	and.w	r3, r3, #1
 800aad8:	2b01      	cmp	r3, #1
 800aada:	d107      	bne.n	800aaec <HAL_TIM_IRQHandler+0x184>
 800aadc:	687b      	ldr	r3, [r7, #4]
 800aade:	681b      	ldr	r3, [r3, #0]
 800aae0:	f06f 0201 	mvn.w	r2, #1
 800aae4:	611a      	str	r2, [r3, #16]
 800aae6:	6878      	ldr	r0, [r7, #4]
 800aae8:	f000 fa6b 	bl	800afc2 <HAL_TIM_PeriodElapsedCallback>
 800aaec:	687b      	ldr	r3, [r7, #4]
 800aaee:	681b      	ldr	r3, [r3, #0]
 800aaf0:	691b      	ldr	r3, [r3, #16]
 800aaf2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800aaf6:	2b80      	cmp	r3, #128	; 0x80
 800aaf8:	d10e      	bne.n	800ab18 <HAL_TIM_IRQHandler+0x1b0>
 800aafa:	687b      	ldr	r3, [r7, #4]
 800aafc:	681b      	ldr	r3, [r3, #0]
 800aafe:	68db      	ldr	r3, [r3, #12]
 800ab00:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ab04:	2b80      	cmp	r3, #128	; 0x80
 800ab06:	d107      	bne.n	800ab18 <HAL_TIM_IRQHandler+0x1b0>
 800ab08:	687b      	ldr	r3, [r7, #4]
 800ab0a:	681b      	ldr	r3, [r3, #0]
 800ab0c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800ab10:	611a      	str	r2, [r3, #16]
 800ab12:	6878      	ldr	r0, [r7, #4]
 800ab14:	f001 f88e 	bl	800bc34 <HAL_TIMEx_BreakCallback>
 800ab18:	687b      	ldr	r3, [r7, #4]
 800ab1a:	681b      	ldr	r3, [r3, #0]
 800ab1c:	691b      	ldr	r3, [r3, #16]
 800ab1e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ab22:	2b40      	cmp	r3, #64	; 0x40
 800ab24:	d10e      	bne.n	800ab44 <HAL_TIM_IRQHandler+0x1dc>
 800ab26:	687b      	ldr	r3, [r7, #4]
 800ab28:	681b      	ldr	r3, [r3, #0]
 800ab2a:	68db      	ldr	r3, [r3, #12]
 800ab2c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ab30:	2b40      	cmp	r3, #64	; 0x40
 800ab32:	d107      	bne.n	800ab44 <HAL_TIM_IRQHandler+0x1dc>
 800ab34:	687b      	ldr	r3, [r7, #4]
 800ab36:	681b      	ldr	r3, [r3, #0]
 800ab38:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800ab3c:	611a      	str	r2, [r3, #16]
 800ab3e:	6878      	ldr	r0, [r7, #4]
 800ab40:	f000 fa71 	bl	800b026 <HAL_TIM_TriggerCallback>
 800ab44:	687b      	ldr	r3, [r7, #4]
 800ab46:	681b      	ldr	r3, [r3, #0]
 800ab48:	691b      	ldr	r3, [r3, #16]
 800ab4a:	f003 0320 	and.w	r3, r3, #32
 800ab4e:	2b20      	cmp	r3, #32
 800ab50:	d10e      	bne.n	800ab70 <HAL_TIM_IRQHandler+0x208>
 800ab52:	687b      	ldr	r3, [r7, #4]
 800ab54:	681b      	ldr	r3, [r3, #0]
 800ab56:	68db      	ldr	r3, [r3, #12]
 800ab58:	f003 0320 	and.w	r3, r3, #32
 800ab5c:	2b20      	cmp	r3, #32
 800ab5e:	d107      	bne.n	800ab70 <HAL_TIM_IRQHandler+0x208>
 800ab60:	687b      	ldr	r3, [r7, #4]
 800ab62:	681b      	ldr	r3, [r3, #0]
 800ab64:	f06f 0220 	mvn.w	r2, #32
 800ab68:	611a      	str	r2, [r3, #16]
 800ab6a:	6878      	ldr	r0, [r7, #4]
 800ab6c:	f001 f858 	bl	800bc20 <HAL_TIMEx_CommutCallback>
 800ab70:	bf00      	nop
 800ab72:	3708      	adds	r7, #8
 800ab74:	46bd      	mov	sp, r7
 800ab76:	bd80      	pop	{r7, pc}

0800ab78 <HAL_TIM_IC_ConfigChannel>:
 800ab78:	b580      	push	{r7, lr}
 800ab7a:	b086      	sub	sp, #24
 800ab7c:	af00      	add	r7, sp, #0
 800ab7e:	60f8      	str	r0, [r7, #12]
 800ab80:	60b9      	str	r1, [r7, #8]
 800ab82:	607a      	str	r2, [r7, #4]
 800ab84:	2300      	movs	r3, #0
 800ab86:	75fb      	strb	r3, [r7, #23]
 800ab88:	68fb      	ldr	r3, [r7, #12]
 800ab8a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800ab8e:	2b01      	cmp	r3, #1
 800ab90:	d101      	bne.n	800ab96 <HAL_TIM_IC_ConfigChannel+0x1e>
 800ab92:	2302      	movs	r3, #2
 800ab94:	e088      	b.n	800aca8 <HAL_TIM_IC_ConfigChannel+0x130>
 800ab96:	68fb      	ldr	r3, [r7, #12]
 800ab98:	2201      	movs	r2, #1
 800ab9a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ab9e:	687b      	ldr	r3, [r7, #4]
 800aba0:	2b00      	cmp	r3, #0
 800aba2:	d11b      	bne.n	800abdc <HAL_TIM_IC_ConfigChannel+0x64>
 800aba4:	68fb      	ldr	r3, [r7, #12]
 800aba6:	6818      	ldr	r0, [r3, #0]
 800aba8:	68bb      	ldr	r3, [r7, #8]
 800abaa:	6819      	ldr	r1, [r3, #0]
 800abac:	68bb      	ldr	r3, [r7, #8]
 800abae:	685a      	ldr	r2, [r3, #4]
 800abb0:	68bb      	ldr	r3, [r7, #8]
 800abb2:	68db      	ldr	r3, [r3, #12]
 800abb4:	f000 fd7c 	bl	800b6b0 <TIM_TI1_SetConfig>
 800abb8:	68fb      	ldr	r3, [r7, #12]
 800abba:	681b      	ldr	r3, [r3, #0]
 800abbc:	699a      	ldr	r2, [r3, #24]
 800abbe:	68fb      	ldr	r3, [r7, #12]
 800abc0:	681b      	ldr	r3, [r3, #0]
 800abc2:	f022 020c 	bic.w	r2, r2, #12
 800abc6:	619a      	str	r2, [r3, #24]
 800abc8:	68fb      	ldr	r3, [r7, #12]
 800abca:	681b      	ldr	r3, [r3, #0]
 800abcc:	6999      	ldr	r1, [r3, #24]
 800abce:	68bb      	ldr	r3, [r7, #8]
 800abd0:	689a      	ldr	r2, [r3, #8]
 800abd2:	68fb      	ldr	r3, [r7, #12]
 800abd4:	681b      	ldr	r3, [r3, #0]
 800abd6:	430a      	orrs	r2, r1
 800abd8:	619a      	str	r2, [r3, #24]
 800abda:	e060      	b.n	800ac9e <HAL_TIM_IC_ConfigChannel+0x126>
 800abdc:	687b      	ldr	r3, [r7, #4]
 800abde:	2b04      	cmp	r3, #4
 800abe0:	d11c      	bne.n	800ac1c <HAL_TIM_IC_ConfigChannel+0xa4>
 800abe2:	68fb      	ldr	r3, [r7, #12]
 800abe4:	6818      	ldr	r0, [r3, #0]
 800abe6:	68bb      	ldr	r3, [r7, #8]
 800abe8:	6819      	ldr	r1, [r3, #0]
 800abea:	68bb      	ldr	r3, [r7, #8]
 800abec:	685a      	ldr	r2, [r3, #4]
 800abee:	68bb      	ldr	r3, [r7, #8]
 800abf0:	68db      	ldr	r3, [r3, #12]
 800abf2:	f000 fe00 	bl	800b7f6 <TIM_TI2_SetConfig>
 800abf6:	68fb      	ldr	r3, [r7, #12]
 800abf8:	681b      	ldr	r3, [r3, #0]
 800abfa:	699a      	ldr	r2, [r3, #24]
 800abfc:	68fb      	ldr	r3, [r7, #12]
 800abfe:	681b      	ldr	r3, [r3, #0]
 800ac00:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 800ac04:	619a      	str	r2, [r3, #24]
 800ac06:	68fb      	ldr	r3, [r7, #12]
 800ac08:	681b      	ldr	r3, [r3, #0]
 800ac0a:	6999      	ldr	r1, [r3, #24]
 800ac0c:	68bb      	ldr	r3, [r7, #8]
 800ac0e:	689b      	ldr	r3, [r3, #8]
 800ac10:	021a      	lsls	r2, r3, #8
 800ac12:	68fb      	ldr	r3, [r7, #12]
 800ac14:	681b      	ldr	r3, [r3, #0]
 800ac16:	430a      	orrs	r2, r1
 800ac18:	619a      	str	r2, [r3, #24]
 800ac1a:	e040      	b.n	800ac9e <HAL_TIM_IC_ConfigChannel+0x126>
 800ac1c:	687b      	ldr	r3, [r7, #4]
 800ac1e:	2b08      	cmp	r3, #8
 800ac20:	d11b      	bne.n	800ac5a <HAL_TIM_IC_ConfigChannel+0xe2>
 800ac22:	68fb      	ldr	r3, [r7, #12]
 800ac24:	6818      	ldr	r0, [r3, #0]
 800ac26:	68bb      	ldr	r3, [r7, #8]
 800ac28:	6819      	ldr	r1, [r3, #0]
 800ac2a:	68bb      	ldr	r3, [r7, #8]
 800ac2c:	685a      	ldr	r2, [r3, #4]
 800ac2e:	68bb      	ldr	r3, [r7, #8]
 800ac30:	68db      	ldr	r3, [r3, #12]
 800ac32:	f000 fe4d 	bl	800b8d0 <TIM_TI3_SetConfig>
 800ac36:	68fb      	ldr	r3, [r7, #12]
 800ac38:	681b      	ldr	r3, [r3, #0]
 800ac3a:	69da      	ldr	r2, [r3, #28]
 800ac3c:	68fb      	ldr	r3, [r7, #12]
 800ac3e:	681b      	ldr	r3, [r3, #0]
 800ac40:	f022 020c 	bic.w	r2, r2, #12
 800ac44:	61da      	str	r2, [r3, #28]
 800ac46:	68fb      	ldr	r3, [r7, #12]
 800ac48:	681b      	ldr	r3, [r3, #0]
 800ac4a:	69d9      	ldr	r1, [r3, #28]
 800ac4c:	68bb      	ldr	r3, [r7, #8]
 800ac4e:	689a      	ldr	r2, [r3, #8]
 800ac50:	68fb      	ldr	r3, [r7, #12]
 800ac52:	681b      	ldr	r3, [r3, #0]
 800ac54:	430a      	orrs	r2, r1
 800ac56:	61da      	str	r2, [r3, #28]
 800ac58:	e021      	b.n	800ac9e <HAL_TIM_IC_ConfigChannel+0x126>
 800ac5a:	687b      	ldr	r3, [r7, #4]
 800ac5c:	2b0c      	cmp	r3, #12
 800ac5e:	d11c      	bne.n	800ac9a <HAL_TIM_IC_ConfigChannel+0x122>
 800ac60:	68fb      	ldr	r3, [r7, #12]
 800ac62:	6818      	ldr	r0, [r3, #0]
 800ac64:	68bb      	ldr	r3, [r7, #8]
 800ac66:	6819      	ldr	r1, [r3, #0]
 800ac68:	68bb      	ldr	r3, [r7, #8]
 800ac6a:	685a      	ldr	r2, [r3, #4]
 800ac6c:	68bb      	ldr	r3, [r7, #8]
 800ac6e:	68db      	ldr	r3, [r3, #12]
 800ac70:	f000 fe6a 	bl	800b948 <TIM_TI4_SetConfig>
 800ac74:	68fb      	ldr	r3, [r7, #12]
 800ac76:	681b      	ldr	r3, [r3, #0]
 800ac78:	69da      	ldr	r2, [r3, #28]
 800ac7a:	68fb      	ldr	r3, [r7, #12]
 800ac7c:	681b      	ldr	r3, [r3, #0]
 800ac7e:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 800ac82:	61da      	str	r2, [r3, #28]
 800ac84:	68fb      	ldr	r3, [r7, #12]
 800ac86:	681b      	ldr	r3, [r3, #0]
 800ac88:	69d9      	ldr	r1, [r3, #28]
 800ac8a:	68bb      	ldr	r3, [r7, #8]
 800ac8c:	689b      	ldr	r3, [r3, #8]
 800ac8e:	021a      	lsls	r2, r3, #8
 800ac90:	68fb      	ldr	r3, [r7, #12]
 800ac92:	681b      	ldr	r3, [r3, #0]
 800ac94:	430a      	orrs	r2, r1
 800ac96:	61da      	str	r2, [r3, #28]
 800ac98:	e001      	b.n	800ac9e <HAL_TIM_IC_ConfigChannel+0x126>
 800ac9a:	2301      	movs	r3, #1
 800ac9c:	75fb      	strb	r3, [r7, #23]
 800ac9e:	68fb      	ldr	r3, [r7, #12]
 800aca0:	2200      	movs	r2, #0
 800aca2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800aca6:	7dfb      	ldrb	r3, [r7, #23]
 800aca8:	4618      	mov	r0, r3
 800acaa:	3718      	adds	r7, #24
 800acac:	46bd      	mov	sp, r7
 800acae:	bd80      	pop	{r7, pc}

0800acb0 <HAL_TIM_PWM_ConfigChannel>:
 800acb0:	b580      	push	{r7, lr}
 800acb2:	b086      	sub	sp, #24
 800acb4:	af00      	add	r7, sp, #0
 800acb6:	60f8      	str	r0, [r7, #12]
 800acb8:	60b9      	str	r1, [r7, #8]
 800acba:	607a      	str	r2, [r7, #4]
 800acbc:	2300      	movs	r3, #0
 800acbe:	75fb      	strb	r3, [r7, #23]
 800acc0:	68fb      	ldr	r3, [r7, #12]
 800acc2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800acc6:	2b01      	cmp	r3, #1
 800acc8:	d101      	bne.n	800acce <HAL_TIM_PWM_ConfigChannel+0x1e>
 800acca:	2302      	movs	r3, #2
 800accc:	e0ae      	b.n	800ae2c <HAL_TIM_PWM_ConfigChannel+0x17c>
 800acce:	68fb      	ldr	r3, [r7, #12]
 800acd0:	2201      	movs	r2, #1
 800acd2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800acd6:	687b      	ldr	r3, [r7, #4]
 800acd8:	2b0c      	cmp	r3, #12
 800acda:	f200 809f 	bhi.w	800ae1c <HAL_TIM_PWM_ConfigChannel+0x16c>
 800acde:	a201      	add	r2, pc, #4	; (adr r2, 800ace4 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800ace0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ace4:	0800ad19 	.word	0x0800ad19
 800ace8:	0800ae1d 	.word	0x0800ae1d
 800acec:	0800ae1d 	.word	0x0800ae1d
 800acf0:	0800ae1d 	.word	0x0800ae1d
 800acf4:	0800ad59 	.word	0x0800ad59
 800acf8:	0800ae1d 	.word	0x0800ae1d
 800acfc:	0800ae1d 	.word	0x0800ae1d
 800ad00:	0800ae1d 	.word	0x0800ae1d
 800ad04:	0800ad9b 	.word	0x0800ad9b
 800ad08:	0800ae1d 	.word	0x0800ae1d
 800ad0c:	0800ae1d 	.word	0x0800ae1d
 800ad10:	0800ae1d 	.word	0x0800ae1d
 800ad14:	0800addb 	.word	0x0800addb
 800ad18:	68fb      	ldr	r3, [r7, #12]
 800ad1a:	681b      	ldr	r3, [r3, #0]
 800ad1c:	68b9      	ldr	r1, [r7, #8]
 800ad1e:	4618      	mov	r0, r3
 800ad20:	f000 fb16 	bl	800b350 <TIM_OC1_SetConfig>
 800ad24:	68fb      	ldr	r3, [r7, #12]
 800ad26:	681b      	ldr	r3, [r3, #0]
 800ad28:	699a      	ldr	r2, [r3, #24]
 800ad2a:	68fb      	ldr	r3, [r7, #12]
 800ad2c:	681b      	ldr	r3, [r3, #0]
 800ad2e:	f042 0208 	orr.w	r2, r2, #8
 800ad32:	619a      	str	r2, [r3, #24]
 800ad34:	68fb      	ldr	r3, [r7, #12]
 800ad36:	681b      	ldr	r3, [r3, #0]
 800ad38:	699a      	ldr	r2, [r3, #24]
 800ad3a:	68fb      	ldr	r3, [r7, #12]
 800ad3c:	681b      	ldr	r3, [r3, #0]
 800ad3e:	f022 0204 	bic.w	r2, r2, #4
 800ad42:	619a      	str	r2, [r3, #24]
 800ad44:	68fb      	ldr	r3, [r7, #12]
 800ad46:	681b      	ldr	r3, [r3, #0]
 800ad48:	6999      	ldr	r1, [r3, #24]
 800ad4a:	68bb      	ldr	r3, [r7, #8]
 800ad4c:	691a      	ldr	r2, [r3, #16]
 800ad4e:	68fb      	ldr	r3, [r7, #12]
 800ad50:	681b      	ldr	r3, [r3, #0]
 800ad52:	430a      	orrs	r2, r1
 800ad54:	619a      	str	r2, [r3, #24]
 800ad56:	e064      	b.n	800ae22 <HAL_TIM_PWM_ConfigChannel+0x172>
 800ad58:	68fb      	ldr	r3, [r7, #12]
 800ad5a:	681b      	ldr	r3, [r3, #0]
 800ad5c:	68b9      	ldr	r1, [r7, #8]
 800ad5e:	4618      	mov	r0, r3
 800ad60:	f000 fb66 	bl	800b430 <TIM_OC2_SetConfig>
 800ad64:	68fb      	ldr	r3, [r7, #12]
 800ad66:	681b      	ldr	r3, [r3, #0]
 800ad68:	699a      	ldr	r2, [r3, #24]
 800ad6a:	68fb      	ldr	r3, [r7, #12]
 800ad6c:	681b      	ldr	r3, [r3, #0]
 800ad6e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800ad72:	619a      	str	r2, [r3, #24]
 800ad74:	68fb      	ldr	r3, [r7, #12]
 800ad76:	681b      	ldr	r3, [r3, #0]
 800ad78:	699a      	ldr	r2, [r3, #24]
 800ad7a:	68fb      	ldr	r3, [r7, #12]
 800ad7c:	681b      	ldr	r3, [r3, #0]
 800ad7e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ad82:	619a      	str	r2, [r3, #24]
 800ad84:	68fb      	ldr	r3, [r7, #12]
 800ad86:	681b      	ldr	r3, [r3, #0]
 800ad88:	6999      	ldr	r1, [r3, #24]
 800ad8a:	68bb      	ldr	r3, [r7, #8]
 800ad8c:	691b      	ldr	r3, [r3, #16]
 800ad8e:	021a      	lsls	r2, r3, #8
 800ad90:	68fb      	ldr	r3, [r7, #12]
 800ad92:	681b      	ldr	r3, [r3, #0]
 800ad94:	430a      	orrs	r2, r1
 800ad96:	619a      	str	r2, [r3, #24]
 800ad98:	e043      	b.n	800ae22 <HAL_TIM_PWM_ConfigChannel+0x172>
 800ad9a:	68fb      	ldr	r3, [r7, #12]
 800ad9c:	681b      	ldr	r3, [r3, #0]
 800ad9e:	68b9      	ldr	r1, [r7, #8]
 800ada0:	4618      	mov	r0, r3
 800ada2:	f000 fbbb 	bl	800b51c <TIM_OC3_SetConfig>
 800ada6:	68fb      	ldr	r3, [r7, #12]
 800ada8:	681b      	ldr	r3, [r3, #0]
 800adaa:	69da      	ldr	r2, [r3, #28]
 800adac:	68fb      	ldr	r3, [r7, #12]
 800adae:	681b      	ldr	r3, [r3, #0]
 800adb0:	f042 0208 	orr.w	r2, r2, #8
 800adb4:	61da      	str	r2, [r3, #28]
 800adb6:	68fb      	ldr	r3, [r7, #12]
 800adb8:	681b      	ldr	r3, [r3, #0]
 800adba:	69da      	ldr	r2, [r3, #28]
 800adbc:	68fb      	ldr	r3, [r7, #12]
 800adbe:	681b      	ldr	r3, [r3, #0]
 800adc0:	f022 0204 	bic.w	r2, r2, #4
 800adc4:	61da      	str	r2, [r3, #28]
 800adc6:	68fb      	ldr	r3, [r7, #12]
 800adc8:	681b      	ldr	r3, [r3, #0]
 800adca:	69d9      	ldr	r1, [r3, #28]
 800adcc:	68bb      	ldr	r3, [r7, #8]
 800adce:	691a      	ldr	r2, [r3, #16]
 800add0:	68fb      	ldr	r3, [r7, #12]
 800add2:	681b      	ldr	r3, [r3, #0]
 800add4:	430a      	orrs	r2, r1
 800add6:	61da      	str	r2, [r3, #28]
 800add8:	e023      	b.n	800ae22 <HAL_TIM_PWM_ConfigChannel+0x172>
 800adda:	68fb      	ldr	r3, [r7, #12]
 800addc:	681b      	ldr	r3, [r3, #0]
 800adde:	68b9      	ldr	r1, [r7, #8]
 800ade0:	4618      	mov	r0, r3
 800ade2:	f000 fc0f 	bl	800b604 <TIM_OC4_SetConfig>
 800ade6:	68fb      	ldr	r3, [r7, #12]
 800ade8:	681b      	ldr	r3, [r3, #0]
 800adea:	69da      	ldr	r2, [r3, #28]
 800adec:	68fb      	ldr	r3, [r7, #12]
 800adee:	681b      	ldr	r3, [r3, #0]
 800adf0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800adf4:	61da      	str	r2, [r3, #28]
 800adf6:	68fb      	ldr	r3, [r7, #12]
 800adf8:	681b      	ldr	r3, [r3, #0]
 800adfa:	69da      	ldr	r2, [r3, #28]
 800adfc:	68fb      	ldr	r3, [r7, #12]
 800adfe:	681b      	ldr	r3, [r3, #0]
 800ae00:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ae04:	61da      	str	r2, [r3, #28]
 800ae06:	68fb      	ldr	r3, [r7, #12]
 800ae08:	681b      	ldr	r3, [r3, #0]
 800ae0a:	69d9      	ldr	r1, [r3, #28]
 800ae0c:	68bb      	ldr	r3, [r7, #8]
 800ae0e:	691b      	ldr	r3, [r3, #16]
 800ae10:	021a      	lsls	r2, r3, #8
 800ae12:	68fb      	ldr	r3, [r7, #12]
 800ae14:	681b      	ldr	r3, [r3, #0]
 800ae16:	430a      	orrs	r2, r1
 800ae18:	61da      	str	r2, [r3, #28]
 800ae1a:	e002      	b.n	800ae22 <HAL_TIM_PWM_ConfigChannel+0x172>
 800ae1c:	2301      	movs	r3, #1
 800ae1e:	75fb      	strb	r3, [r7, #23]
 800ae20:	bf00      	nop
 800ae22:	68fb      	ldr	r3, [r7, #12]
 800ae24:	2200      	movs	r2, #0
 800ae26:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ae2a:	7dfb      	ldrb	r3, [r7, #23]
 800ae2c:	4618      	mov	r0, r3
 800ae2e:	3718      	adds	r7, #24
 800ae30:	46bd      	mov	sp, r7
 800ae32:	bd80      	pop	{r7, pc}

0800ae34 <HAL_TIM_ConfigClockSource>:
 800ae34:	b580      	push	{r7, lr}
 800ae36:	b084      	sub	sp, #16
 800ae38:	af00      	add	r7, sp, #0
 800ae3a:	6078      	str	r0, [r7, #4]
 800ae3c:	6039      	str	r1, [r7, #0]
 800ae3e:	2300      	movs	r3, #0
 800ae40:	73fb      	strb	r3, [r7, #15]
 800ae42:	687b      	ldr	r3, [r7, #4]
 800ae44:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800ae48:	2b01      	cmp	r3, #1
 800ae4a:	d101      	bne.n	800ae50 <HAL_TIM_ConfigClockSource+0x1c>
 800ae4c:	2302      	movs	r3, #2
 800ae4e:	e0b4      	b.n	800afba <HAL_TIM_ConfigClockSource+0x186>
 800ae50:	687b      	ldr	r3, [r7, #4]
 800ae52:	2201      	movs	r2, #1
 800ae54:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ae58:	687b      	ldr	r3, [r7, #4]
 800ae5a:	2202      	movs	r2, #2
 800ae5c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800ae60:	687b      	ldr	r3, [r7, #4]
 800ae62:	681b      	ldr	r3, [r3, #0]
 800ae64:	689b      	ldr	r3, [r3, #8]
 800ae66:	60bb      	str	r3, [r7, #8]
 800ae68:	68bb      	ldr	r3, [r7, #8]
 800ae6a:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800ae6e:	60bb      	str	r3, [r7, #8]
 800ae70:	68bb      	ldr	r3, [r7, #8]
 800ae72:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800ae76:	60bb      	str	r3, [r7, #8]
 800ae78:	687b      	ldr	r3, [r7, #4]
 800ae7a:	681b      	ldr	r3, [r3, #0]
 800ae7c:	68ba      	ldr	r2, [r7, #8]
 800ae7e:	609a      	str	r2, [r3, #8]
 800ae80:	683b      	ldr	r3, [r7, #0]
 800ae82:	681b      	ldr	r3, [r3, #0]
 800ae84:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800ae88:	d03e      	beq.n	800af08 <HAL_TIM_ConfigClockSource+0xd4>
 800ae8a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800ae8e:	f200 8087 	bhi.w	800afa0 <HAL_TIM_ConfigClockSource+0x16c>
 800ae92:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800ae96:	f000 8086 	beq.w	800afa6 <HAL_TIM_ConfigClockSource+0x172>
 800ae9a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800ae9e:	d87f      	bhi.n	800afa0 <HAL_TIM_ConfigClockSource+0x16c>
 800aea0:	2b70      	cmp	r3, #112	; 0x70
 800aea2:	d01a      	beq.n	800aeda <HAL_TIM_ConfigClockSource+0xa6>
 800aea4:	2b70      	cmp	r3, #112	; 0x70
 800aea6:	d87b      	bhi.n	800afa0 <HAL_TIM_ConfigClockSource+0x16c>
 800aea8:	2b60      	cmp	r3, #96	; 0x60
 800aeaa:	d050      	beq.n	800af4e <HAL_TIM_ConfigClockSource+0x11a>
 800aeac:	2b60      	cmp	r3, #96	; 0x60
 800aeae:	d877      	bhi.n	800afa0 <HAL_TIM_ConfigClockSource+0x16c>
 800aeb0:	2b50      	cmp	r3, #80	; 0x50
 800aeb2:	d03c      	beq.n	800af2e <HAL_TIM_ConfigClockSource+0xfa>
 800aeb4:	2b50      	cmp	r3, #80	; 0x50
 800aeb6:	d873      	bhi.n	800afa0 <HAL_TIM_ConfigClockSource+0x16c>
 800aeb8:	2b40      	cmp	r3, #64	; 0x40
 800aeba:	d058      	beq.n	800af6e <HAL_TIM_ConfigClockSource+0x13a>
 800aebc:	2b40      	cmp	r3, #64	; 0x40
 800aebe:	d86f      	bhi.n	800afa0 <HAL_TIM_ConfigClockSource+0x16c>
 800aec0:	2b30      	cmp	r3, #48	; 0x30
 800aec2:	d064      	beq.n	800af8e <HAL_TIM_ConfigClockSource+0x15a>
 800aec4:	2b30      	cmp	r3, #48	; 0x30
 800aec6:	d86b      	bhi.n	800afa0 <HAL_TIM_ConfigClockSource+0x16c>
 800aec8:	2b20      	cmp	r3, #32
 800aeca:	d060      	beq.n	800af8e <HAL_TIM_ConfigClockSource+0x15a>
 800aecc:	2b20      	cmp	r3, #32
 800aece:	d867      	bhi.n	800afa0 <HAL_TIM_ConfigClockSource+0x16c>
 800aed0:	2b00      	cmp	r3, #0
 800aed2:	d05c      	beq.n	800af8e <HAL_TIM_ConfigClockSource+0x15a>
 800aed4:	2b10      	cmp	r3, #16
 800aed6:	d05a      	beq.n	800af8e <HAL_TIM_ConfigClockSource+0x15a>
 800aed8:	e062      	b.n	800afa0 <HAL_TIM_ConfigClockSource+0x16c>
 800aeda:	687b      	ldr	r3, [r7, #4]
 800aedc:	6818      	ldr	r0, [r3, #0]
 800aede:	683b      	ldr	r3, [r7, #0]
 800aee0:	6899      	ldr	r1, [r3, #8]
 800aee2:	683b      	ldr	r3, [r7, #0]
 800aee4:	685a      	ldr	r2, [r3, #4]
 800aee6:	683b      	ldr	r3, [r7, #0]
 800aee8:	68db      	ldr	r3, [r3, #12]
 800aeea:	f000 fd85 	bl	800b9f8 <TIM_ETR_SetConfig>
 800aeee:	687b      	ldr	r3, [r7, #4]
 800aef0:	681b      	ldr	r3, [r3, #0]
 800aef2:	689b      	ldr	r3, [r3, #8]
 800aef4:	60bb      	str	r3, [r7, #8]
 800aef6:	68bb      	ldr	r3, [r7, #8]
 800aef8:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800aefc:	60bb      	str	r3, [r7, #8]
 800aefe:	687b      	ldr	r3, [r7, #4]
 800af00:	681b      	ldr	r3, [r3, #0]
 800af02:	68ba      	ldr	r2, [r7, #8]
 800af04:	609a      	str	r2, [r3, #8]
 800af06:	e04f      	b.n	800afa8 <HAL_TIM_ConfigClockSource+0x174>
 800af08:	687b      	ldr	r3, [r7, #4]
 800af0a:	6818      	ldr	r0, [r3, #0]
 800af0c:	683b      	ldr	r3, [r7, #0]
 800af0e:	6899      	ldr	r1, [r3, #8]
 800af10:	683b      	ldr	r3, [r7, #0]
 800af12:	685a      	ldr	r2, [r3, #4]
 800af14:	683b      	ldr	r3, [r7, #0]
 800af16:	68db      	ldr	r3, [r3, #12]
 800af18:	f000 fd6e 	bl	800b9f8 <TIM_ETR_SetConfig>
 800af1c:	687b      	ldr	r3, [r7, #4]
 800af1e:	681b      	ldr	r3, [r3, #0]
 800af20:	689a      	ldr	r2, [r3, #8]
 800af22:	687b      	ldr	r3, [r7, #4]
 800af24:	681b      	ldr	r3, [r3, #0]
 800af26:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800af2a:	609a      	str	r2, [r3, #8]
 800af2c:	e03c      	b.n	800afa8 <HAL_TIM_ConfigClockSource+0x174>
 800af2e:	687b      	ldr	r3, [r7, #4]
 800af30:	6818      	ldr	r0, [r3, #0]
 800af32:	683b      	ldr	r3, [r7, #0]
 800af34:	6859      	ldr	r1, [r3, #4]
 800af36:	683b      	ldr	r3, [r7, #0]
 800af38:	68db      	ldr	r3, [r3, #12]
 800af3a:	461a      	mov	r2, r3
 800af3c:	f000 fc2c 	bl	800b798 <TIM_TI1_ConfigInputStage>
 800af40:	687b      	ldr	r3, [r7, #4]
 800af42:	681b      	ldr	r3, [r3, #0]
 800af44:	2150      	movs	r1, #80	; 0x50
 800af46:	4618      	mov	r0, r3
 800af48:	f000 fd3b 	bl	800b9c2 <TIM_ITRx_SetConfig>
 800af4c:	e02c      	b.n	800afa8 <HAL_TIM_ConfigClockSource+0x174>
 800af4e:	687b      	ldr	r3, [r7, #4]
 800af50:	6818      	ldr	r0, [r3, #0]
 800af52:	683b      	ldr	r3, [r7, #0]
 800af54:	6859      	ldr	r1, [r3, #4]
 800af56:	683b      	ldr	r3, [r7, #0]
 800af58:	68db      	ldr	r3, [r3, #12]
 800af5a:	461a      	mov	r2, r3
 800af5c:	f000 fc88 	bl	800b870 <TIM_TI2_ConfigInputStage>
 800af60:	687b      	ldr	r3, [r7, #4]
 800af62:	681b      	ldr	r3, [r3, #0]
 800af64:	2160      	movs	r1, #96	; 0x60
 800af66:	4618      	mov	r0, r3
 800af68:	f000 fd2b 	bl	800b9c2 <TIM_ITRx_SetConfig>
 800af6c:	e01c      	b.n	800afa8 <HAL_TIM_ConfigClockSource+0x174>
 800af6e:	687b      	ldr	r3, [r7, #4]
 800af70:	6818      	ldr	r0, [r3, #0]
 800af72:	683b      	ldr	r3, [r7, #0]
 800af74:	6859      	ldr	r1, [r3, #4]
 800af76:	683b      	ldr	r3, [r7, #0]
 800af78:	68db      	ldr	r3, [r3, #12]
 800af7a:	461a      	mov	r2, r3
 800af7c:	f000 fc0c 	bl	800b798 <TIM_TI1_ConfigInputStage>
 800af80:	687b      	ldr	r3, [r7, #4]
 800af82:	681b      	ldr	r3, [r3, #0]
 800af84:	2140      	movs	r1, #64	; 0x40
 800af86:	4618      	mov	r0, r3
 800af88:	f000 fd1b 	bl	800b9c2 <TIM_ITRx_SetConfig>
 800af8c:	e00c      	b.n	800afa8 <HAL_TIM_ConfigClockSource+0x174>
 800af8e:	687b      	ldr	r3, [r7, #4]
 800af90:	681a      	ldr	r2, [r3, #0]
 800af92:	683b      	ldr	r3, [r7, #0]
 800af94:	681b      	ldr	r3, [r3, #0]
 800af96:	4619      	mov	r1, r3
 800af98:	4610      	mov	r0, r2
 800af9a:	f000 fd12 	bl	800b9c2 <TIM_ITRx_SetConfig>
 800af9e:	e003      	b.n	800afa8 <HAL_TIM_ConfigClockSource+0x174>
 800afa0:	2301      	movs	r3, #1
 800afa2:	73fb      	strb	r3, [r7, #15]
 800afa4:	e000      	b.n	800afa8 <HAL_TIM_ConfigClockSource+0x174>
 800afa6:	bf00      	nop
 800afa8:	687b      	ldr	r3, [r7, #4]
 800afaa:	2201      	movs	r2, #1
 800afac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800afb0:	687b      	ldr	r3, [r7, #4]
 800afb2:	2200      	movs	r2, #0
 800afb4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800afb8:	7bfb      	ldrb	r3, [r7, #15]
 800afba:	4618      	mov	r0, r3
 800afbc:	3710      	adds	r7, #16
 800afbe:	46bd      	mov	sp, r7
 800afc0:	bd80      	pop	{r7, pc}

0800afc2 <HAL_TIM_PeriodElapsedCallback>:
 800afc2:	b480      	push	{r7}
 800afc4:	b083      	sub	sp, #12
 800afc6:	af00      	add	r7, sp, #0
 800afc8:	6078      	str	r0, [r7, #4]
 800afca:	bf00      	nop
 800afcc:	370c      	adds	r7, #12
 800afce:	46bd      	mov	sp, r7
 800afd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afd4:	4770      	bx	lr

0800afd6 <HAL_TIM_OC_DelayElapsedCallback>:
 800afd6:	b480      	push	{r7}
 800afd8:	b083      	sub	sp, #12
 800afda:	af00      	add	r7, sp, #0
 800afdc:	6078      	str	r0, [r7, #4]
 800afde:	bf00      	nop
 800afe0:	370c      	adds	r7, #12
 800afe2:	46bd      	mov	sp, r7
 800afe4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afe8:	4770      	bx	lr

0800afea <HAL_TIM_IC_CaptureCallback>:
 800afea:	b480      	push	{r7}
 800afec:	b083      	sub	sp, #12
 800afee:	af00      	add	r7, sp, #0
 800aff0:	6078      	str	r0, [r7, #4]
 800aff2:	bf00      	nop
 800aff4:	370c      	adds	r7, #12
 800aff6:	46bd      	mov	sp, r7
 800aff8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800affc:	4770      	bx	lr

0800affe <HAL_TIM_IC_CaptureHalfCpltCallback>:
 800affe:	b480      	push	{r7}
 800b000:	b083      	sub	sp, #12
 800b002:	af00      	add	r7, sp, #0
 800b004:	6078      	str	r0, [r7, #4]
 800b006:	bf00      	nop
 800b008:	370c      	adds	r7, #12
 800b00a:	46bd      	mov	sp, r7
 800b00c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b010:	4770      	bx	lr

0800b012 <HAL_TIM_PWM_PulseFinishedCallback>:
 800b012:	b480      	push	{r7}
 800b014:	b083      	sub	sp, #12
 800b016:	af00      	add	r7, sp, #0
 800b018:	6078      	str	r0, [r7, #4]
 800b01a:	bf00      	nop
 800b01c:	370c      	adds	r7, #12
 800b01e:	46bd      	mov	sp, r7
 800b020:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b024:	4770      	bx	lr

0800b026 <HAL_TIM_TriggerCallback>:
 800b026:	b480      	push	{r7}
 800b028:	b083      	sub	sp, #12
 800b02a:	af00      	add	r7, sp, #0
 800b02c:	6078      	str	r0, [r7, #4]
 800b02e:	bf00      	nop
 800b030:	370c      	adds	r7, #12
 800b032:	46bd      	mov	sp, r7
 800b034:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b038:	4770      	bx	lr

0800b03a <HAL_TIM_ErrorCallback>:
 800b03a:	b480      	push	{r7}
 800b03c:	b083      	sub	sp, #12
 800b03e:	af00      	add	r7, sp, #0
 800b040:	6078      	str	r0, [r7, #4]
 800b042:	bf00      	nop
 800b044:	370c      	adds	r7, #12
 800b046:	46bd      	mov	sp, r7
 800b048:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b04c:	4770      	bx	lr

0800b04e <TIM_DMAError>:
 800b04e:	b580      	push	{r7, lr}
 800b050:	b084      	sub	sp, #16
 800b052:	af00      	add	r7, sp, #0
 800b054:	6078      	str	r0, [r7, #4]
 800b056:	687b      	ldr	r3, [r7, #4]
 800b058:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b05a:	60fb      	str	r3, [r7, #12]
 800b05c:	68fb      	ldr	r3, [r7, #12]
 800b05e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b060:	687a      	ldr	r2, [r7, #4]
 800b062:	429a      	cmp	r2, r3
 800b064:	d107      	bne.n	800b076 <TIM_DMAError+0x28>
 800b066:	68fb      	ldr	r3, [r7, #12]
 800b068:	2201      	movs	r2, #1
 800b06a:	771a      	strb	r2, [r3, #28]
 800b06c:	68fb      	ldr	r3, [r7, #12]
 800b06e:	2201      	movs	r2, #1
 800b070:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b074:	e02a      	b.n	800b0cc <TIM_DMAError+0x7e>
 800b076:	68fb      	ldr	r3, [r7, #12]
 800b078:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b07a:	687a      	ldr	r2, [r7, #4]
 800b07c:	429a      	cmp	r2, r3
 800b07e:	d107      	bne.n	800b090 <TIM_DMAError+0x42>
 800b080:	68fb      	ldr	r3, [r7, #12]
 800b082:	2202      	movs	r2, #2
 800b084:	771a      	strb	r2, [r3, #28]
 800b086:	68fb      	ldr	r3, [r7, #12]
 800b088:	2201      	movs	r2, #1
 800b08a:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800b08e:	e01d      	b.n	800b0cc <TIM_DMAError+0x7e>
 800b090:	68fb      	ldr	r3, [r7, #12]
 800b092:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b094:	687a      	ldr	r2, [r7, #4]
 800b096:	429a      	cmp	r2, r3
 800b098:	d107      	bne.n	800b0aa <TIM_DMAError+0x5c>
 800b09a:	68fb      	ldr	r3, [r7, #12]
 800b09c:	2204      	movs	r2, #4
 800b09e:	771a      	strb	r2, [r3, #28]
 800b0a0:	68fb      	ldr	r3, [r7, #12]
 800b0a2:	2201      	movs	r2, #1
 800b0a4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b0a8:	e010      	b.n	800b0cc <TIM_DMAError+0x7e>
 800b0aa:	68fb      	ldr	r3, [r7, #12]
 800b0ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b0ae:	687a      	ldr	r2, [r7, #4]
 800b0b0:	429a      	cmp	r2, r3
 800b0b2:	d107      	bne.n	800b0c4 <TIM_DMAError+0x76>
 800b0b4:	68fb      	ldr	r3, [r7, #12]
 800b0b6:	2208      	movs	r2, #8
 800b0b8:	771a      	strb	r2, [r3, #28]
 800b0ba:	68fb      	ldr	r3, [r7, #12]
 800b0bc:	2201      	movs	r2, #1
 800b0be:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b0c2:	e003      	b.n	800b0cc <TIM_DMAError+0x7e>
 800b0c4:	68fb      	ldr	r3, [r7, #12]
 800b0c6:	2201      	movs	r2, #1
 800b0c8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b0cc:	68f8      	ldr	r0, [r7, #12]
 800b0ce:	f7ff ffb4 	bl	800b03a <HAL_TIM_ErrorCallback>
 800b0d2:	68fb      	ldr	r3, [r7, #12]
 800b0d4:	2200      	movs	r2, #0
 800b0d6:	771a      	strb	r2, [r3, #28]
 800b0d8:	bf00      	nop
 800b0da:	3710      	adds	r7, #16
 800b0dc:	46bd      	mov	sp, r7
 800b0de:	bd80      	pop	{r7, pc}

0800b0e0 <TIM_DMACaptureCplt>:
 800b0e0:	b580      	push	{r7, lr}
 800b0e2:	b084      	sub	sp, #16
 800b0e4:	af00      	add	r7, sp, #0
 800b0e6:	6078      	str	r0, [r7, #4]
 800b0e8:	687b      	ldr	r3, [r7, #4]
 800b0ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b0ec:	60fb      	str	r3, [r7, #12]
 800b0ee:	68fb      	ldr	r3, [r7, #12]
 800b0f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b0f2:	687a      	ldr	r2, [r7, #4]
 800b0f4:	429a      	cmp	r2, r3
 800b0f6:	d10f      	bne.n	800b118 <TIM_DMACaptureCplt+0x38>
 800b0f8:	68fb      	ldr	r3, [r7, #12]
 800b0fa:	2201      	movs	r2, #1
 800b0fc:	771a      	strb	r2, [r3, #28]
 800b0fe:	687b      	ldr	r3, [r7, #4]
 800b100:	69db      	ldr	r3, [r3, #28]
 800b102:	2b00      	cmp	r3, #0
 800b104:	d146      	bne.n	800b194 <TIM_DMACaptureCplt+0xb4>
 800b106:	68fb      	ldr	r3, [r7, #12]
 800b108:	2201      	movs	r2, #1
 800b10a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b10e:	68fb      	ldr	r3, [r7, #12]
 800b110:	2201      	movs	r2, #1
 800b112:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800b116:	e03d      	b.n	800b194 <TIM_DMACaptureCplt+0xb4>
 800b118:	68fb      	ldr	r3, [r7, #12]
 800b11a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b11c:	687a      	ldr	r2, [r7, #4]
 800b11e:	429a      	cmp	r2, r3
 800b120:	d10f      	bne.n	800b142 <TIM_DMACaptureCplt+0x62>
 800b122:	68fb      	ldr	r3, [r7, #12]
 800b124:	2202      	movs	r2, #2
 800b126:	771a      	strb	r2, [r3, #28]
 800b128:	687b      	ldr	r3, [r7, #4]
 800b12a:	69db      	ldr	r3, [r3, #28]
 800b12c:	2b00      	cmp	r3, #0
 800b12e:	d131      	bne.n	800b194 <TIM_DMACaptureCplt+0xb4>
 800b130:	68fb      	ldr	r3, [r7, #12]
 800b132:	2201      	movs	r2, #1
 800b134:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800b138:	68fb      	ldr	r3, [r7, #12]
 800b13a:	2201      	movs	r2, #1
 800b13c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800b140:	e028      	b.n	800b194 <TIM_DMACaptureCplt+0xb4>
 800b142:	68fb      	ldr	r3, [r7, #12]
 800b144:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b146:	687a      	ldr	r2, [r7, #4]
 800b148:	429a      	cmp	r2, r3
 800b14a:	d10f      	bne.n	800b16c <TIM_DMACaptureCplt+0x8c>
 800b14c:	68fb      	ldr	r3, [r7, #12]
 800b14e:	2204      	movs	r2, #4
 800b150:	771a      	strb	r2, [r3, #28]
 800b152:	687b      	ldr	r3, [r7, #4]
 800b154:	69db      	ldr	r3, [r3, #28]
 800b156:	2b00      	cmp	r3, #0
 800b158:	d11c      	bne.n	800b194 <TIM_DMACaptureCplt+0xb4>
 800b15a:	68fb      	ldr	r3, [r7, #12]
 800b15c:	2201      	movs	r2, #1
 800b15e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b162:	68fb      	ldr	r3, [r7, #12]
 800b164:	2201      	movs	r2, #1
 800b166:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800b16a:	e013      	b.n	800b194 <TIM_DMACaptureCplt+0xb4>
 800b16c:	68fb      	ldr	r3, [r7, #12]
 800b16e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b170:	687a      	ldr	r2, [r7, #4]
 800b172:	429a      	cmp	r2, r3
 800b174:	d10e      	bne.n	800b194 <TIM_DMACaptureCplt+0xb4>
 800b176:	68fb      	ldr	r3, [r7, #12]
 800b178:	2208      	movs	r2, #8
 800b17a:	771a      	strb	r2, [r3, #28]
 800b17c:	687b      	ldr	r3, [r7, #4]
 800b17e:	69db      	ldr	r3, [r3, #28]
 800b180:	2b00      	cmp	r3, #0
 800b182:	d107      	bne.n	800b194 <TIM_DMACaptureCplt+0xb4>
 800b184:	68fb      	ldr	r3, [r7, #12]
 800b186:	2201      	movs	r2, #1
 800b188:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b18c:	68fb      	ldr	r3, [r7, #12]
 800b18e:	2201      	movs	r2, #1
 800b190:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800b194:	68f8      	ldr	r0, [r7, #12]
 800b196:	f7ff ff28 	bl	800afea <HAL_TIM_IC_CaptureCallback>
 800b19a:	68fb      	ldr	r3, [r7, #12]
 800b19c:	2200      	movs	r2, #0
 800b19e:	771a      	strb	r2, [r3, #28]
 800b1a0:	bf00      	nop
 800b1a2:	3710      	adds	r7, #16
 800b1a4:	46bd      	mov	sp, r7
 800b1a6:	bd80      	pop	{r7, pc}

0800b1a8 <TIM_DMACaptureHalfCplt>:
 800b1a8:	b580      	push	{r7, lr}
 800b1aa:	b084      	sub	sp, #16
 800b1ac:	af00      	add	r7, sp, #0
 800b1ae:	6078      	str	r0, [r7, #4]
 800b1b0:	687b      	ldr	r3, [r7, #4]
 800b1b2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b1b4:	60fb      	str	r3, [r7, #12]
 800b1b6:	68fb      	ldr	r3, [r7, #12]
 800b1b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b1ba:	687a      	ldr	r2, [r7, #4]
 800b1bc:	429a      	cmp	r2, r3
 800b1be:	d103      	bne.n	800b1c8 <TIM_DMACaptureHalfCplt+0x20>
 800b1c0:	68fb      	ldr	r3, [r7, #12]
 800b1c2:	2201      	movs	r2, #1
 800b1c4:	771a      	strb	r2, [r3, #28]
 800b1c6:	e019      	b.n	800b1fc <TIM_DMACaptureHalfCplt+0x54>
 800b1c8:	68fb      	ldr	r3, [r7, #12]
 800b1ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b1cc:	687a      	ldr	r2, [r7, #4]
 800b1ce:	429a      	cmp	r2, r3
 800b1d0:	d103      	bne.n	800b1da <TIM_DMACaptureHalfCplt+0x32>
 800b1d2:	68fb      	ldr	r3, [r7, #12]
 800b1d4:	2202      	movs	r2, #2
 800b1d6:	771a      	strb	r2, [r3, #28]
 800b1d8:	e010      	b.n	800b1fc <TIM_DMACaptureHalfCplt+0x54>
 800b1da:	68fb      	ldr	r3, [r7, #12]
 800b1dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b1de:	687a      	ldr	r2, [r7, #4]
 800b1e0:	429a      	cmp	r2, r3
 800b1e2:	d103      	bne.n	800b1ec <TIM_DMACaptureHalfCplt+0x44>
 800b1e4:	68fb      	ldr	r3, [r7, #12]
 800b1e6:	2204      	movs	r2, #4
 800b1e8:	771a      	strb	r2, [r3, #28]
 800b1ea:	e007      	b.n	800b1fc <TIM_DMACaptureHalfCplt+0x54>
 800b1ec:	68fb      	ldr	r3, [r7, #12]
 800b1ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b1f0:	687a      	ldr	r2, [r7, #4]
 800b1f2:	429a      	cmp	r2, r3
 800b1f4:	d102      	bne.n	800b1fc <TIM_DMACaptureHalfCplt+0x54>
 800b1f6:	68fb      	ldr	r3, [r7, #12]
 800b1f8:	2208      	movs	r2, #8
 800b1fa:	771a      	strb	r2, [r3, #28]
 800b1fc:	68f8      	ldr	r0, [r7, #12]
 800b1fe:	f7ff fefe 	bl	800affe <HAL_TIM_IC_CaptureHalfCpltCallback>
 800b202:	68fb      	ldr	r3, [r7, #12]
 800b204:	2200      	movs	r2, #0
 800b206:	771a      	strb	r2, [r3, #28]
 800b208:	bf00      	nop
 800b20a:	3710      	adds	r7, #16
 800b20c:	46bd      	mov	sp, r7
 800b20e:	bd80      	pop	{r7, pc}

0800b210 <TIM_Base_SetConfig>:
 800b210:	b480      	push	{r7}
 800b212:	b085      	sub	sp, #20
 800b214:	af00      	add	r7, sp, #0
 800b216:	6078      	str	r0, [r7, #4]
 800b218:	6039      	str	r1, [r7, #0]
 800b21a:	687b      	ldr	r3, [r7, #4]
 800b21c:	681b      	ldr	r3, [r3, #0]
 800b21e:	60fb      	str	r3, [r7, #12]
 800b220:	687b      	ldr	r3, [r7, #4]
 800b222:	4a40      	ldr	r2, [pc, #256]	; (800b324 <TIM_Base_SetConfig+0x114>)
 800b224:	4293      	cmp	r3, r2
 800b226:	d013      	beq.n	800b250 <TIM_Base_SetConfig+0x40>
 800b228:	687b      	ldr	r3, [r7, #4]
 800b22a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b22e:	d00f      	beq.n	800b250 <TIM_Base_SetConfig+0x40>
 800b230:	687b      	ldr	r3, [r7, #4]
 800b232:	4a3d      	ldr	r2, [pc, #244]	; (800b328 <TIM_Base_SetConfig+0x118>)
 800b234:	4293      	cmp	r3, r2
 800b236:	d00b      	beq.n	800b250 <TIM_Base_SetConfig+0x40>
 800b238:	687b      	ldr	r3, [r7, #4]
 800b23a:	4a3c      	ldr	r2, [pc, #240]	; (800b32c <TIM_Base_SetConfig+0x11c>)
 800b23c:	4293      	cmp	r3, r2
 800b23e:	d007      	beq.n	800b250 <TIM_Base_SetConfig+0x40>
 800b240:	687b      	ldr	r3, [r7, #4]
 800b242:	4a3b      	ldr	r2, [pc, #236]	; (800b330 <TIM_Base_SetConfig+0x120>)
 800b244:	4293      	cmp	r3, r2
 800b246:	d003      	beq.n	800b250 <TIM_Base_SetConfig+0x40>
 800b248:	687b      	ldr	r3, [r7, #4]
 800b24a:	4a3a      	ldr	r2, [pc, #232]	; (800b334 <TIM_Base_SetConfig+0x124>)
 800b24c:	4293      	cmp	r3, r2
 800b24e:	d108      	bne.n	800b262 <TIM_Base_SetConfig+0x52>
 800b250:	68fb      	ldr	r3, [r7, #12]
 800b252:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b256:	60fb      	str	r3, [r7, #12]
 800b258:	683b      	ldr	r3, [r7, #0]
 800b25a:	685b      	ldr	r3, [r3, #4]
 800b25c:	68fa      	ldr	r2, [r7, #12]
 800b25e:	4313      	orrs	r3, r2
 800b260:	60fb      	str	r3, [r7, #12]
 800b262:	687b      	ldr	r3, [r7, #4]
 800b264:	4a2f      	ldr	r2, [pc, #188]	; (800b324 <TIM_Base_SetConfig+0x114>)
 800b266:	4293      	cmp	r3, r2
 800b268:	d02b      	beq.n	800b2c2 <TIM_Base_SetConfig+0xb2>
 800b26a:	687b      	ldr	r3, [r7, #4]
 800b26c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b270:	d027      	beq.n	800b2c2 <TIM_Base_SetConfig+0xb2>
 800b272:	687b      	ldr	r3, [r7, #4]
 800b274:	4a2c      	ldr	r2, [pc, #176]	; (800b328 <TIM_Base_SetConfig+0x118>)
 800b276:	4293      	cmp	r3, r2
 800b278:	d023      	beq.n	800b2c2 <TIM_Base_SetConfig+0xb2>
 800b27a:	687b      	ldr	r3, [r7, #4]
 800b27c:	4a2b      	ldr	r2, [pc, #172]	; (800b32c <TIM_Base_SetConfig+0x11c>)
 800b27e:	4293      	cmp	r3, r2
 800b280:	d01f      	beq.n	800b2c2 <TIM_Base_SetConfig+0xb2>
 800b282:	687b      	ldr	r3, [r7, #4]
 800b284:	4a2a      	ldr	r2, [pc, #168]	; (800b330 <TIM_Base_SetConfig+0x120>)
 800b286:	4293      	cmp	r3, r2
 800b288:	d01b      	beq.n	800b2c2 <TIM_Base_SetConfig+0xb2>
 800b28a:	687b      	ldr	r3, [r7, #4]
 800b28c:	4a29      	ldr	r2, [pc, #164]	; (800b334 <TIM_Base_SetConfig+0x124>)
 800b28e:	4293      	cmp	r3, r2
 800b290:	d017      	beq.n	800b2c2 <TIM_Base_SetConfig+0xb2>
 800b292:	687b      	ldr	r3, [r7, #4]
 800b294:	4a28      	ldr	r2, [pc, #160]	; (800b338 <TIM_Base_SetConfig+0x128>)
 800b296:	4293      	cmp	r3, r2
 800b298:	d013      	beq.n	800b2c2 <TIM_Base_SetConfig+0xb2>
 800b29a:	687b      	ldr	r3, [r7, #4]
 800b29c:	4a27      	ldr	r2, [pc, #156]	; (800b33c <TIM_Base_SetConfig+0x12c>)
 800b29e:	4293      	cmp	r3, r2
 800b2a0:	d00f      	beq.n	800b2c2 <TIM_Base_SetConfig+0xb2>
 800b2a2:	687b      	ldr	r3, [r7, #4]
 800b2a4:	4a26      	ldr	r2, [pc, #152]	; (800b340 <TIM_Base_SetConfig+0x130>)
 800b2a6:	4293      	cmp	r3, r2
 800b2a8:	d00b      	beq.n	800b2c2 <TIM_Base_SetConfig+0xb2>
 800b2aa:	687b      	ldr	r3, [r7, #4]
 800b2ac:	4a25      	ldr	r2, [pc, #148]	; (800b344 <TIM_Base_SetConfig+0x134>)
 800b2ae:	4293      	cmp	r3, r2
 800b2b0:	d007      	beq.n	800b2c2 <TIM_Base_SetConfig+0xb2>
 800b2b2:	687b      	ldr	r3, [r7, #4]
 800b2b4:	4a24      	ldr	r2, [pc, #144]	; (800b348 <TIM_Base_SetConfig+0x138>)
 800b2b6:	4293      	cmp	r3, r2
 800b2b8:	d003      	beq.n	800b2c2 <TIM_Base_SetConfig+0xb2>
 800b2ba:	687b      	ldr	r3, [r7, #4]
 800b2bc:	4a23      	ldr	r2, [pc, #140]	; (800b34c <TIM_Base_SetConfig+0x13c>)
 800b2be:	4293      	cmp	r3, r2
 800b2c0:	d108      	bne.n	800b2d4 <TIM_Base_SetConfig+0xc4>
 800b2c2:	68fb      	ldr	r3, [r7, #12]
 800b2c4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b2c8:	60fb      	str	r3, [r7, #12]
 800b2ca:	683b      	ldr	r3, [r7, #0]
 800b2cc:	68db      	ldr	r3, [r3, #12]
 800b2ce:	68fa      	ldr	r2, [r7, #12]
 800b2d0:	4313      	orrs	r3, r2
 800b2d2:	60fb      	str	r3, [r7, #12]
 800b2d4:	68fb      	ldr	r3, [r7, #12]
 800b2d6:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800b2da:	683b      	ldr	r3, [r7, #0]
 800b2dc:	695b      	ldr	r3, [r3, #20]
 800b2de:	4313      	orrs	r3, r2
 800b2e0:	60fb      	str	r3, [r7, #12]
 800b2e2:	687b      	ldr	r3, [r7, #4]
 800b2e4:	68fa      	ldr	r2, [r7, #12]
 800b2e6:	601a      	str	r2, [r3, #0]
 800b2e8:	683b      	ldr	r3, [r7, #0]
 800b2ea:	689a      	ldr	r2, [r3, #8]
 800b2ec:	687b      	ldr	r3, [r7, #4]
 800b2ee:	62da      	str	r2, [r3, #44]	; 0x2c
 800b2f0:	683b      	ldr	r3, [r7, #0]
 800b2f2:	681a      	ldr	r2, [r3, #0]
 800b2f4:	687b      	ldr	r3, [r7, #4]
 800b2f6:	629a      	str	r2, [r3, #40]	; 0x28
 800b2f8:	687b      	ldr	r3, [r7, #4]
 800b2fa:	4a0a      	ldr	r2, [pc, #40]	; (800b324 <TIM_Base_SetConfig+0x114>)
 800b2fc:	4293      	cmp	r3, r2
 800b2fe:	d003      	beq.n	800b308 <TIM_Base_SetConfig+0xf8>
 800b300:	687b      	ldr	r3, [r7, #4]
 800b302:	4a0c      	ldr	r2, [pc, #48]	; (800b334 <TIM_Base_SetConfig+0x124>)
 800b304:	4293      	cmp	r3, r2
 800b306:	d103      	bne.n	800b310 <TIM_Base_SetConfig+0x100>
 800b308:	683b      	ldr	r3, [r7, #0]
 800b30a:	691a      	ldr	r2, [r3, #16]
 800b30c:	687b      	ldr	r3, [r7, #4]
 800b30e:	631a      	str	r2, [r3, #48]	; 0x30
 800b310:	687b      	ldr	r3, [r7, #4]
 800b312:	2201      	movs	r2, #1
 800b314:	615a      	str	r2, [r3, #20]
 800b316:	bf00      	nop
 800b318:	3714      	adds	r7, #20
 800b31a:	46bd      	mov	sp, r7
 800b31c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b320:	4770      	bx	lr
 800b322:	bf00      	nop
 800b324:	40010000 	.word	0x40010000
 800b328:	40000400 	.word	0x40000400
 800b32c:	40000800 	.word	0x40000800
 800b330:	40000c00 	.word	0x40000c00
 800b334:	40010400 	.word	0x40010400
 800b338:	40014000 	.word	0x40014000
 800b33c:	40014400 	.word	0x40014400
 800b340:	40014800 	.word	0x40014800
 800b344:	40001800 	.word	0x40001800
 800b348:	40001c00 	.word	0x40001c00
 800b34c:	40002000 	.word	0x40002000

0800b350 <TIM_OC1_SetConfig>:
 800b350:	b480      	push	{r7}
 800b352:	b087      	sub	sp, #28
 800b354:	af00      	add	r7, sp, #0
 800b356:	6078      	str	r0, [r7, #4]
 800b358:	6039      	str	r1, [r7, #0]
 800b35a:	687b      	ldr	r3, [r7, #4]
 800b35c:	6a1b      	ldr	r3, [r3, #32]
 800b35e:	f023 0201 	bic.w	r2, r3, #1
 800b362:	687b      	ldr	r3, [r7, #4]
 800b364:	621a      	str	r2, [r3, #32]
 800b366:	687b      	ldr	r3, [r7, #4]
 800b368:	6a1b      	ldr	r3, [r3, #32]
 800b36a:	617b      	str	r3, [r7, #20]
 800b36c:	687b      	ldr	r3, [r7, #4]
 800b36e:	685b      	ldr	r3, [r3, #4]
 800b370:	613b      	str	r3, [r7, #16]
 800b372:	687b      	ldr	r3, [r7, #4]
 800b374:	699b      	ldr	r3, [r3, #24]
 800b376:	60fb      	str	r3, [r7, #12]
 800b378:	68fb      	ldr	r3, [r7, #12]
 800b37a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b37e:	60fb      	str	r3, [r7, #12]
 800b380:	68fb      	ldr	r3, [r7, #12]
 800b382:	f023 0303 	bic.w	r3, r3, #3
 800b386:	60fb      	str	r3, [r7, #12]
 800b388:	683b      	ldr	r3, [r7, #0]
 800b38a:	681b      	ldr	r3, [r3, #0]
 800b38c:	68fa      	ldr	r2, [r7, #12]
 800b38e:	4313      	orrs	r3, r2
 800b390:	60fb      	str	r3, [r7, #12]
 800b392:	697b      	ldr	r3, [r7, #20]
 800b394:	f023 0302 	bic.w	r3, r3, #2
 800b398:	617b      	str	r3, [r7, #20]
 800b39a:	683b      	ldr	r3, [r7, #0]
 800b39c:	689b      	ldr	r3, [r3, #8]
 800b39e:	697a      	ldr	r2, [r7, #20]
 800b3a0:	4313      	orrs	r3, r2
 800b3a2:	617b      	str	r3, [r7, #20]
 800b3a4:	687b      	ldr	r3, [r7, #4]
 800b3a6:	4a20      	ldr	r2, [pc, #128]	; (800b428 <TIM_OC1_SetConfig+0xd8>)
 800b3a8:	4293      	cmp	r3, r2
 800b3aa:	d003      	beq.n	800b3b4 <TIM_OC1_SetConfig+0x64>
 800b3ac:	687b      	ldr	r3, [r7, #4]
 800b3ae:	4a1f      	ldr	r2, [pc, #124]	; (800b42c <TIM_OC1_SetConfig+0xdc>)
 800b3b0:	4293      	cmp	r3, r2
 800b3b2:	d10c      	bne.n	800b3ce <TIM_OC1_SetConfig+0x7e>
 800b3b4:	697b      	ldr	r3, [r7, #20]
 800b3b6:	f023 0308 	bic.w	r3, r3, #8
 800b3ba:	617b      	str	r3, [r7, #20]
 800b3bc:	683b      	ldr	r3, [r7, #0]
 800b3be:	68db      	ldr	r3, [r3, #12]
 800b3c0:	697a      	ldr	r2, [r7, #20]
 800b3c2:	4313      	orrs	r3, r2
 800b3c4:	617b      	str	r3, [r7, #20]
 800b3c6:	697b      	ldr	r3, [r7, #20]
 800b3c8:	f023 0304 	bic.w	r3, r3, #4
 800b3cc:	617b      	str	r3, [r7, #20]
 800b3ce:	687b      	ldr	r3, [r7, #4]
 800b3d0:	4a15      	ldr	r2, [pc, #84]	; (800b428 <TIM_OC1_SetConfig+0xd8>)
 800b3d2:	4293      	cmp	r3, r2
 800b3d4:	d003      	beq.n	800b3de <TIM_OC1_SetConfig+0x8e>
 800b3d6:	687b      	ldr	r3, [r7, #4]
 800b3d8:	4a14      	ldr	r2, [pc, #80]	; (800b42c <TIM_OC1_SetConfig+0xdc>)
 800b3da:	4293      	cmp	r3, r2
 800b3dc:	d111      	bne.n	800b402 <TIM_OC1_SetConfig+0xb2>
 800b3de:	693b      	ldr	r3, [r7, #16]
 800b3e0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800b3e4:	613b      	str	r3, [r7, #16]
 800b3e6:	693b      	ldr	r3, [r7, #16]
 800b3e8:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800b3ec:	613b      	str	r3, [r7, #16]
 800b3ee:	683b      	ldr	r3, [r7, #0]
 800b3f0:	695b      	ldr	r3, [r3, #20]
 800b3f2:	693a      	ldr	r2, [r7, #16]
 800b3f4:	4313      	orrs	r3, r2
 800b3f6:	613b      	str	r3, [r7, #16]
 800b3f8:	683b      	ldr	r3, [r7, #0]
 800b3fa:	699b      	ldr	r3, [r3, #24]
 800b3fc:	693a      	ldr	r2, [r7, #16]
 800b3fe:	4313      	orrs	r3, r2
 800b400:	613b      	str	r3, [r7, #16]
 800b402:	687b      	ldr	r3, [r7, #4]
 800b404:	693a      	ldr	r2, [r7, #16]
 800b406:	605a      	str	r2, [r3, #4]
 800b408:	687b      	ldr	r3, [r7, #4]
 800b40a:	68fa      	ldr	r2, [r7, #12]
 800b40c:	619a      	str	r2, [r3, #24]
 800b40e:	683b      	ldr	r3, [r7, #0]
 800b410:	685a      	ldr	r2, [r3, #4]
 800b412:	687b      	ldr	r3, [r7, #4]
 800b414:	635a      	str	r2, [r3, #52]	; 0x34
 800b416:	687b      	ldr	r3, [r7, #4]
 800b418:	697a      	ldr	r2, [r7, #20]
 800b41a:	621a      	str	r2, [r3, #32]
 800b41c:	bf00      	nop
 800b41e:	371c      	adds	r7, #28
 800b420:	46bd      	mov	sp, r7
 800b422:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b426:	4770      	bx	lr
 800b428:	40010000 	.word	0x40010000
 800b42c:	40010400 	.word	0x40010400

0800b430 <TIM_OC2_SetConfig>:
 800b430:	b480      	push	{r7}
 800b432:	b087      	sub	sp, #28
 800b434:	af00      	add	r7, sp, #0
 800b436:	6078      	str	r0, [r7, #4]
 800b438:	6039      	str	r1, [r7, #0]
 800b43a:	687b      	ldr	r3, [r7, #4]
 800b43c:	6a1b      	ldr	r3, [r3, #32]
 800b43e:	f023 0210 	bic.w	r2, r3, #16
 800b442:	687b      	ldr	r3, [r7, #4]
 800b444:	621a      	str	r2, [r3, #32]
 800b446:	687b      	ldr	r3, [r7, #4]
 800b448:	6a1b      	ldr	r3, [r3, #32]
 800b44a:	617b      	str	r3, [r7, #20]
 800b44c:	687b      	ldr	r3, [r7, #4]
 800b44e:	685b      	ldr	r3, [r3, #4]
 800b450:	613b      	str	r3, [r7, #16]
 800b452:	687b      	ldr	r3, [r7, #4]
 800b454:	699b      	ldr	r3, [r3, #24]
 800b456:	60fb      	str	r3, [r7, #12]
 800b458:	68fb      	ldr	r3, [r7, #12]
 800b45a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800b45e:	60fb      	str	r3, [r7, #12]
 800b460:	68fb      	ldr	r3, [r7, #12]
 800b462:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b466:	60fb      	str	r3, [r7, #12]
 800b468:	683b      	ldr	r3, [r7, #0]
 800b46a:	681b      	ldr	r3, [r3, #0]
 800b46c:	021b      	lsls	r3, r3, #8
 800b46e:	68fa      	ldr	r2, [r7, #12]
 800b470:	4313      	orrs	r3, r2
 800b472:	60fb      	str	r3, [r7, #12]
 800b474:	697b      	ldr	r3, [r7, #20]
 800b476:	f023 0320 	bic.w	r3, r3, #32
 800b47a:	617b      	str	r3, [r7, #20]
 800b47c:	683b      	ldr	r3, [r7, #0]
 800b47e:	689b      	ldr	r3, [r3, #8]
 800b480:	011b      	lsls	r3, r3, #4
 800b482:	697a      	ldr	r2, [r7, #20]
 800b484:	4313      	orrs	r3, r2
 800b486:	617b      	str	r3, [r7, #20]
 800b488:	687b      	ldr	r3, [r7, #4]
 800b48a:	4a22      	ldr	r2, [pc, #136]	; (800b514 <TIM_OC2_SetConfig+0xe4>)
 800b48c:	4293      	cmp	r3, r2
 800b48e:	d003      	beq.n	800b498 <TIM_OC2_SetConfig+0x68>
 800b490:	687b      	ldr	r3, [r7, #4]
 800b492:	4a21      	ldr	r2, [pc, #132]	; (800b518 <TIM_OC2_SetConfig+0xe8>)
 800b494:	4293      	cmp	r3, r2
 800b496:	d10d      	bne.n	800b4b4 <TIM_OC2_SetConfig+0x84>
 800b498:	697b      	ldr	r3, [r7, #20]
 800b49a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800b49e:	617b      	str	r3, [r7, #20]
 800b4a0:	683b      	ldr	r3, [r7, #0]
 800b4a2:	68db      	ldr	r3, [r3, #12]
 800b4a4:	011b      	lsls	r3, r3, #4
 800b4a6:	697a      	ldr	r2, [r7, #20]
 800b4a8:	4313      	orrs	r3, r2
 800b4aa:	617b      	str	r3, [r7, #20]
 800b4ac:	697b      	ldr	r3, [r7, #20]
 800b4ae:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b4b2:	617b      	str	r3, [r7, #20]
 800b4b4:	687b      	ldr	r3, [r7, #4]
 800b4b6:	4a17      	ldr	r2, [pc, #92]	; (800b514 <TIM_OC2_SetConfig+0xe4>)
 800b4b8:	4293      	cmp	r3, r2
 800b4ba:	d003      	beq.n	800b4c4 <TIM_OC2_SetConfig+0x94>
 800b4bc:	687b      	ldr	r3, [r7, #4]
 800b4be:	4a16      	ldr	r2, [pc, #88]	; (800b518 <TIM_OC2_SetConfig+0xe8>)
 800b4c0:	4293      	cmp	r3, r2
 800b4c2:	d113      	bne.n	800b4ec <TIM_OC2_SetConfig+0xbc>
 800b4c4:	693b      	ldr	r3, [r7, #16]
 800b4c6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b4ca:	613b      	str	r3, [r7, #16]
 800b4cc:	693b      	ldr	r3, [r7, #16]
 800b4ce:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b4d2:	613b      	str	r3, [r7, #16]
 800b4d4:	683b      	ldr	r3, [r7, #0]
 800b4d6:	695b      	ldr	r3, [r3, #20]
 800b4d8:	009b      	lsls	r3, r3, #2
 800b4da:	693a      	ldr	r2, [r7, #16]
 800b4dc:	4313      	orrs	r3, r2
 800b4de:	613b      	str	r3, [r7, #16]
 800b4e0:	683b      	ldr	r3, [r7, #0]
 800b4e2:	699b      	ldr	r3, [r3, #24]
 800b4e4:	009b      	lsls	r3, r3, #2
 800b4e6:	693a      	ldr	r2, [r7, #16]
 800b4e8:	4313      	orrs	r3, r2
 800b4ea:	613b      	str	r3, [r7, #16]
 800b4ec:	687b      	ldr	r3, [r7, #4]
 800b4ee:	693a      	ldr	r2, [r7, #16]
 800b4f0:	605a      	str	r2, [r3, #4]
 800b4f2:	687b      	ldr	r3, [r7, #4]
 800b4f4:	68fa      	ldr	r2, [r7, #12]
 800b4f6:	619a      	str	r2, [r3, #24]
 800b4f8:	683b      	ldr	r3, [r7, #0]
 800b4fa:	685a      	ldr	r2, [r3, #4]
 800b4fc:	687b      	ldr	r3, [r7, #4]
 800b4fe:	639a      	str	r2, [r3, #56]	; 0x38
 800b500:	687b      	ldr	r3, [r7, #4]
 800b502:	697a      	ldr	r2, [r7, #20]
 800b504:	621a      	str	r2, [r3, #32]
 800b506:	bf00      	nop
 800b508:	371c      	adds	r7, #28
 800b50a:	46bd      	mov	sp, r7
 800b50c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b510:	4770      	bx	lr
 800b512:	bf00      	nop
 800b514:	40010000 	.word	0x40010000
 800b518:	40010400 	.word	0x40010400

0800b51c <TIM_OC3_SetConfig>:
 800b51c:	b480      	push	{r7}
 800b51e:	b087      	sub	sp, #28
 800b520:	af00      	add	r7, sp, #0
 800b522:	6078      	str	r0, [r7, #4]
 800b524:	6039      	str	r1, [r7, #0]
 800b526:	687b      	ldr	r3, [r7, #4]
 800b528:	6a1b      	ldr	r3, [r3, #32]
 800b52a:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800b52e:	687b      	ldr	r3, [r7, #4]
 800b530:	621a      	str	r2, [r3, #32]
 800b532:	687b      	ldr	r3, [r7, #4]
 800b534:	6a1b      	ldr	r3, [r3, #32]
 800b536:	617b      	str	r3, [r7, #20]
 800b538:	687b      	ldr	r3, [r7, #4]
 800b53a:	685b      	ldr	r3, [r3, #4]
 800b53c:	613b      	str	r3, [r7, #16]
 800b53e:	687b      	ldr	r3, [r7, #4]
 800b540:	69db      	ldr	r3, [r3, #28]
 800b542:	60fb      	str	r3, [r7, #12]
 800b544:	68fb      	ldr	r3, [r7, #12]
 800b546:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b54a:	60fb      	str	r3, [r7, #12]
 800b54c:	68fb      	ldr	r3, [r7, #12]
 800b54e:	f023 0303 	bic.w	r3, r3, #3
 800b552:	60fb      	str	r3, [r7, #12]
 800b554:	683b      	ldr	r3, [r7, #0]
 800b556:	681b      	ldr	r3, [r3, #0]
 800b558:	68fa      	ldr	r2, [r7, #12]
 800b55a:	4313      	orrs	r3, r2
 800b55c:	60fb      	str	r3, [r7, #12]
 800b55e:	697b      	ldr	r3, [r7, #20]
 800b560:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800b564:	617b      	str	r3, [r7, #20]
 800b566:	683b      	ldr	r3, [r7, #0]
 800b568:	689b      	ldr	r3, [r3, #8]
 800b56a:	021b      	lsls	r3, r3, #8
 800b56c:	697a      	ldr	r2, [r7, #20]
 800b56e:	4313      	orrs	r3, r2
 800b570:	617b      	str	r3, [r7, #20]
 800b572:	687b      	ldr	r3, [r7, #4]
 800b574:	4a21      	ldr	r2, [pc, #132]	; (800b5fc <TIM_OC3_SetConfig+0xe0>)
 800b576:	4293      	cmp	r3, r2
 800b578:	d003      	beq.n	800b582 <TIM_OC3_SetConfig+0x66>
 800b57a:	687b      	ldr	r3, [r7, #4]
 800b57c:	4a20      	ldr	r2, [pc, #128]	; (800b600 <TIM_OC3_SetConfig+0xe4>)
 800b57e:	4293      	cmp	r3, r2
 800b580:	d10d      	bne.n	800b59e <TIM_OC3_SetConfig+0x82>
 800b582:	697b      	ldr	r3, [r7, #20]
 800b584:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b588:	617b      	str	r3, [r7, #20]
 800b58a:	683b      	ldr	r3, [r7, #0]
 800b58c:	68db      	ldr	r3, [r3, #12]
 800b58e:	021b      	lsls	r3, r3, #8
 800b590:	697a      	ldr	r2, [r7, #20]
 800b592:	4313      	orrs	r3, r2
 800b594:	617b      	str	r3, [r7, #20]
 800b596:	697b      	ldr	r3, [r7, #20]
 800b598:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b59c:	617b      	str	r3, [r7, #20]
 800b59e:	687b      	ldr	r3, [r7, #4]
 800b5a0:	4a16      	ldr	r2, [pc, #88]	; (800b5fc <TIM_OC3_SetConfig+0xe0>)
 800b5a2:	4293      	cmp	r3, r2
 800b5a4:	d003      	beq.n	800b5ae <TIM_OC3_SetConfig+0x92>
 800b5a6:	687b      	ldr	r3, [r7, #4]
 800b5a8:	4a15      	ldr	r2, [pc, #84]	; (800b600 <TIM_OC3_SetConfig+0xe4>)
 800b5aa:	4293      	cmp	r3, r2
 800b5ac:	d113      	bne.n	800b5d6 <TIM_OC3_SetConfig+0xba>
 800b5ae:	693b      	ldr	r3, [r7, #16]
 800b5b0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800b5b4:	613b      	str	r3, [r7, #16]
 800b5b6:	693b      	ldr	r3, [r7, #16]
 800b5b8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b5bc:	613b      	str	r3, [r7, #16]
 800b5be:	683b      	ldr	r3, [r7, #0]
 800b5c0:	695b      	ldr	r3, [r3, #20]
 800b5c2:	011b      	lsls	r3, r3, #4
 800b5c4:	693a      	ldr	r2, [r7, #16]
 800b5c6:	4313      	orrs	r3, r2
 800b5c8:	613b      	str	r3, [r7, #16]
 800b5ca:	683b      	ldr	r3, [r7, #0]
 800b5cc:	699b      	ldr	r3, [r3, #24]
 800b5ce:	011b      	lsls	r3, r3, #4
 800b5d0:	693a      	ldr	r2, [r7, #16]
 800b5d2:	4313      	orrs	r3, r2
 800b5d4:	613b      	str	r3, [r7, #16]
 800b5d6:	687b      	ldr	r3, [r7, #4]
 800b5d8:	693a      	ldr	r2, [r7, #16]
 800b5da:	605a      	str	r2, [r3, #4]
 800b5dc:	687b      	ldr	r3, [r7, #4]
 800b5de:	68fa      	ldr	r2, [r7, #12]
 800b5e0:	61da      	str	r2, [r3, #28]
 800b5e2:	683b      	ldr	r3, [r7, #0]
 800b5e4:	685a      	ldr	r2, [r3, #4]
 800b5e6:	687b      	ldr	r3, [r7, #4]
 800b5e8:	63da      	str	r2, [r3, #60]	; 0x3c
 800b5ea:	687b      	ldr	r3, [r7, #4]
 800b5ec:	697a      	ldr	r2, [r7, #20]
 800b5ee:	621a      	str	r2, [r3, #32]
 800b5f0:	bf00      	nop
 800b5f2:	371c      	adds	r7, #28
 800b5f4:	46bd      	mov	sp, r7
 800b5f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5fa:	4770      	bx	lr
 800b5fc:	40010000 	.word	0x40010000
 800b600:	40010400 	.word	0x40010400

0800b604 <TIM_OC4_SetConfig>:
 800b604:	b480      	push	{r7}
 800b606:	b087      	sub	sp, #28
 800b608:	af00      	add	r7, sp, #0
 800b60a:	6078      	str	r0, [r7, #4]
 800b60c:	6039      	str	r1, [r7, #0]
 800b60e:	687b      	ldr	r3, [r7, #4]
 800b610:	6a1b      	ldr	r3, [r3, #32]
 800b612:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800b616:	687b      	ldr	r3, [r7, #4]
 800b618:	621a      	str	r2, [r3, #32]
 800b61a:	687b      	ldr	r3, [r7, #4]
 800b61c:	6a1b      	ldr	r3, [r3, #32]
 800b61e:	613b      	str	r3, [r7, #16]
 800b620:	687b      	ldr	r3, [r7, #4]
 800b622:	685b      	ldr	r3, [r3, #4]
 800b624:	617b      	str	r3, [r7, #20]
 800b626:	687b      	ldr	r3, [r7, #4]
 800b628:	69db      	ldr	r3, [r3, #28]
 800b62a:	60fb      	str	r3, [r7, #12]
 800b62c:	68fb      	ldr	r3, [r7, #12]
 800b62e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800b632:	60fb      	str	r3, [r7, #12]
 800b634:	68fb      	ldr	r3, [r7, #12]
 800b636:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b63a:	60fb      	str	r3, [r7, #12]
 800b63c:	683b      	ldr	r3, [r7, #0]
 800b63e:	681b      	ldr	r3, [r3, #0]
 800b640:	021b      	lsls	r3, r3, #8
 800b642:	68fa      	ldr	r2, [r7, #12]
 800b644:	4313      	orrs	r3, r2
 800b646:	60fb      	str	r3, [r7, #12]
 800b648:	693b      	ldr	r3, [r7, #16]
 800b64a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b64e:	613b      	str	r3, [r7, #16]
 800b650:	683b      	ldr	r3, [r7, #0]
 800b652:	689b      	ldr	r3, [r3, #8]
 800b654:	031b      	lsls	r3, r3, #12
 800b656:	693a      	ldr	r2, [r7, #16]
 800b658:	4313      	orrs	r3, r2
 800b65a:	613b      	str	r3, [r7, #16]
 800b65c:	687b      	ldr	r3, [r7, #4]
 800b65e:	4a12      	ldr	r2, [pc, #72]	; (800b6a8 <TIM_OC4_SetConfig+0xa4>)
 800b660:	4293      	cmp	r3, r2
 800b662:	d003      	beq.n	800b66c <TIM_OC4_SetConfig+0x68>
 800b664:	687b      	ldr	r3, [r7, #4]
 800b666:	4a11      	ldr	r2, [pc, #68]	; (800b6ac <TIM_OC4_SetConfig+0xa8>)
 800b668:	4293      	cmp	r3, r2
 800b66a:	d109      	bne.n	800b680 <TIM_OC4_SetConfig+0x7c>
 800b66c:	697b      	ldr	r3, [r7, #20]
 800b66e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800b672:	617b      	str	r3, [r7, #20]
 800b674:	683b      	ldr	r3, [r7, #0]
 800b676:	695b      	ldr	r3, [r3, #20]
 800b678:	019b      	lsls	r3, r3, #6
 800b67a:	697a      	ldr	r2, [r7, #20]
 800b67c:	4313      	orrs	r3, r2
 800b67e:	617b      	str	r3, [r7, #20]
 800b680:	687b      	ldr	r3, [r7, #4]
 800b682:	697a      	ldr	r2, [r7, #20]
 800b684:	605a      	str	r2, [r3, #4]
 800b686:	687b      	ldr	r3, [r7, #4]
 800b688:	68fa      	ldr	r2, [r7, #12]
 800b68a:	61da      	str	r2, [r3, #28]
 800b68c:	683b      	ldr	r3, [r7, #0]
 800b68e:	685a      	ldr	r2, [r3, #4]
 800b690:	687b      	ldr	r3, [r7, #4]
 800b692:	641a      	str	r2, [r3, #64]	; 0x40
 800b694:	687b      	ldr	r3, [r7, #4]
 800b696:	693a      	ldr	r2, [r7, #16]
 800b698:	621a      	str	r2, [r3, #32]
 800b69a:	bf00      	nop
 800b69c:	371c      	adds	r7, #28
 800b69e:	46bd      	mov	sp, r7
 800b6a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6a4:	4770      	bx	lr
 800b6a6:	bf00      	nop
 800b6a8:	40010000 	.word	0x40010000
 800b6ac:	40010400 	.word	0x40010400

0800b6b0 <TIM_TI1_SetConfig>:
 800b6b0:	b480      	push	{r7}
 800b6b2:	b087      	sub	sp, #28
 800b6b4:	af00      	add	r7, sp, #0
 800b6b6:	60f8      	str	r0, [r7, #12]
 800b6b8:	60b9      	str	r1, [r7, #8]
 800b6ba:	607a      	str	r2, [r7, #4]
 800b6bc:	603b      	str	r3, [r7, #0]
 800b6be:	68fb      	ldr	r3, [r7, #12]
 800b6c0:	6a1b      	ldr	r3, [r3, #32]
 800b6c2:	f023 0201 	bic.w	r2, r3, #1
 800b6c6:	68fb      	ldr	r3, [r7, #12]
 800b6c8:	621a      	str	r2, [r3, #32]
 800b6ca:	68fb      	ldr	r3, [r7, #12]
 800b6cc:	699b      	ldr	r3, [r3, #24]
 800b6ce:	617b      	str	r3, [r7, #20]
 800b6d0:	68fb      	ldr	r3, [r7, #12]
 800b6d2:	6a1b      	ldr	r3, [r3, #32]
 800b6d4:	613b      	str	r3, [r7, #16]
 800b6d6:	68fb      	ldr	r3, [r7, #12]
 800b6d8:	4a28      	ldr	r2, [pc, #160]	; (800b77c <TIM_TI1_SetConfig+0xcc>)
 800b6da:	4293      	cmp	r3, r2
 800b6dc:	d01b      	beq.n	800b716 <TIM_TI1_SetConfig+0x66>
 800b6de:	68fb      	ldr	r3, [r7, #12]
 800b6e0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b6e4:	d017      	beq.n	800b716 <TIM_TI1_SetConfig+0x66>
 800b6e6:	68fb      	ldr	r3, [r7, #12]
 800b6e8:	4a25      	ldr	r2, [pc, #148]	; (800b780 <TIM_TI1_SetConfig+0xd0>)
 800b6ea:	4293      	cmp	r3, r2
 800b6ec:	d013      	beq.n	800b716 <TIM_TI1_SetConfig+0x66>
 800b6ee:	68fb      	ldr	r3, [r7, #12]
 800b6f0:	4a24      	ldr	r2, [pc, #144]	; (800b784 <TIM_TI1_SetConfig+0xd4>)
 800b6f2:	4293      	cmp	r3, r2
 800b6f4:	d00f      	beq.n	800b716 <TIM_TI1_SetConfig+0x66>
 800b6f6:	68fb      	ldr	r3, [r7, #12]
 800b6f8:	4a23      	ldr	r2, [pc, #140]	; (800b788 <TIM_TI1_SetConfig+0xd8>)
 800b6fa:	4293      	cmp	r3, r2
 800b6fc:	d00b      	beq.n	800b716 <TIM_TI1_SetConfig+0x66>
 800b6fe:	68fb      	ldr	r3, [r7, #12]
 800b700:	4a22      	ldr	r2, [pc, #136]	; (800b78c <TIM_TI1_SetConfig+0xdc>)
 800b702:	4293      	cmp	r3, r2
 800b704:	d007      	beq.n	800b716 <TIM_TI1_SetConfig+0x66>
 800b706:	68fb      	ldr	r3, [r7, #12]
 800b708:	4a21      	ldr	r2, [pc, #132]	; (800b790 <TIM_TI1_SetConfig+0xe0>)
 800b70a:	4293      	cmp	r3, r2
 800b70c:	d003      	beq.n	800b716 <TIM_TI1_SetConfig+0x66>
 800b70e:	68fb      	ldr	r3, [r7, #12]
 800b710:	4a20      	ldr	r2, [pc, #128]	; (800b794 <TIM_TI1_SetConfig+0xe4>)
 800b712:	4293      	cmp	r3, r2
 800b714:	d101      	bne.n	800b71a <TIM_TI1_SetConfig+0x6a>
 800b716:	2301      	movs	r3, #1
 800b718:	e000      	b.n	800b71c <TIM_TI1_SetConfig+0x6c>
 800b71a:	2300      	movs	r3, #0
 800b71c:	2b00      	cmp	r3, #0
 800b71e:	d008      	beq.n	800b732 <TIM_TI1_SetConfig+0x82>
 800b720:	697b      	ldr	r3, [r7, #20]
 800b722:	f023 0303 	bic.w	r3, r3, #3
 800b726:	617b      	str	r3, [r7, #20]
 800b728:	697a      	ldr	r2, [r7, #20]
 800b72a:	687b      	ldr	r3, [r7, #4]
 800b72c:	4313      	orrs	r3, r2
 800b72e:	617b      	str	r3, [r7, #20]
 800b730:	e003      	b.n	800b73a <TIM_TI1_SetConfig+0x8a>
 800b732:	697b      	ldr	r3, [r7, #20]
 800b734:	f043 0301 	orr.w	r3, r3, #1
 800b738:	617b      	str	r3, [r7, #20]
 800b73a:	697b      	ldr	r3, [r7, #20]
 800b73c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800b740:	617b      	str	r3, [r7, #20]
 800b742:	683b      	ldr	r3, [r7, #0]
 800b744:	011b      	lsls	r3, r3, #4
 800b746:	b2db      	uxtb	r3, r3
 800b748:	697a      	ldr	r2, [r7, #20]
 800b74a:	4313      	orrs	r3, r2
 800b74c:	617b      	str	r3, [r7, #20]
 800b74e:	693b      	ldr	r3, [r7, #16]
 800b750:	f023 030a 	bic.w	r3, r3, #10
 800b754:	613b      	str	r3, [r7, #16]
 800b756:	68bb      	ldr	r3, [r7, #8]
 800b758:	f003 030a 	and.w	r3, r3, #10
 800b75c:	693a      	ldr	r2, [r7, #16]
 800b75e:	4313      	orrs	r3, r2
 800b760:	613b      	str	r3, [r7, #16]
 800b762:	68fb      	ldr	r3, [r7, #12]
 800b764:	697a      	ldr	r2, [r7, #20]
 800b766:	619a      	str	r2, [r3, #24]
 800b768:	68fb      	ldr	r3, [r7, #12]
 800b76a:	693a      	ldr	r2, [r7, #16]
 800b76c:	621a      	str	r2, [r3, #32]
 800b76e:	bf00      	nop
 800b770:	371c      	adds	r7, #28
 800b772:	46bd      	mov	sp, r7
 800b774:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b778:	4770      	bx	lr
 800b77a:	bf00      	nop
 800b77c:	40010000 	.word	0x40010000
 800b780:	40000400 	.word	0x40000400
 800b784:	40000800 	.word	0x40000800
 800b788:	40000c00 	.word	0x40000c00
 800b78c:	40010400 	.word	0x40010400
 800b790:	40014000 	.word	0x40014000
 800b794:	40001800 	.word	0x40001800

0800b798 <TIM_TI1_ConfigInputStage>:
 800b798:	b480      	push	{r7}
 800b79a:	b087      	sub	sp, #28
 800b79c:	af00      	add	r7, sp, #0
 800b79e:	60f8      	str	r0, [r7, #12]
 800b7a0:	60b9      	str	r1, [r7, #8]
 800b7a2:	607a      	str	r2, [r7, #4]
 800b7a4:	68fb      	ldr	r3, [r7, #12]
 800b7a6:	6a1b      	ldr	r3, [r3, #32]
 800b7a8:	617b      	str	r3, [r7, #20]
 800b7aa:	68fb      	ldr	r3, [r7, #12]
 800b7ac:	6a1b      	ldr	r3, [r3, #32]
 800b7ae:	f023 0201 	bic.w	r2, r3, #1
 800b7b2:	68fb      	ldr	r3, [r7, #12]
 800b7b4:	621a      	str	r2, [r3, #32]
 800b7b6:	68fb      	ldr	r3, [r7, #12]
 800b7b8:	699b      	ldr	r3, [r3, #24]
 800b7ba:	613b      	str	r3, [r7, #16]
 800b7bc:	693b      	ldr	r3, [r7, #16]
 800b7be:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800b7c2:	613b      	str	r3, [r7, #16]
 800b7c4:	687b      	ldr	r3, [r7, #4]
 800b7c6:	011b      	lsls	r3, r3, #4
 800b7c8:	693a      	ldr	r2, [r7, #16]
 800b7ca:	4313      	orrs	r3, r2
 800b7cc:	613b      	str	r3, [r7, #16]
 800b7ce:	697b      	ldr	r3, [r7, #20]
 800b7d0:	f023 030a 	bic.w	r3, r3, #10
 800b7d4:	617b      	str	r3, [r7, #20]
 800b7d6:	697a      	ldr	r2, [r7, #20]
 800b7d8:	68bb      	ldr	r3, [r7, #8]
 800b7da:	4313      	orrs	r3, r2
 800b7dc:	617b      	str	r3, [r7, #20]
 800b7de:	68fb      	ldr	r3, [r7, #12]
 800b7e0:	693a      	ldr	r2, [r7, #16]
 800b7e2:	619a      	str	r2, [r3, #24]
 800b7e4:	68fb      	ldr	r3, [r7, #12]
 800b7e6:	697a      	ldr	r2, [r7, #20]
 800b7e8:	621a      	str	r2, [r3, #32]
 800b7ea:	bf00      	nop
 800b7ec:	371c      	adds	r7, #28
 800b7ee:	46bd      	mov	sp, r7
 800b7f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7f4:	4770      	bx	lr

0800b7f6 <TIM_TI2_SetConfig>:
 800b7f6:	b480      	push	{r7}
 800b7f8:	b087      	sub	sp, #28
 800b7fa:	af00      	add	r7, sp, #0
 800b7fc:	60f8      	str	r0, [r7, #12]
 800b7fe:	60b9      	str	r1, [r7, #8]
 800b800:	607a      	str	r2, [r7, #4]
 800b802:	603b      	str	r3, [r7, #0]
 800b804:	68fb      	ldr	r3, [r7, #12]
 800b806:	6a1b      	ldr	r3, [r3, #32]
 800b808:	f023 0210 	bic.w	r2, r3, #16
 800b80c:	68fb      	ldr	r3, [r7, #12]
 800b80e:	621a      	str	r2, [r3, #32]
 800b810:	68fb      	ldr	r3, [r7, #12]
 800b812:	699b      	ldr	r3, [r3, #24]
 800b814:	617b      	str	r3, [r7, #20]
 800b816:	68fb      	ldr	r3, [r7, #12]
 800b818:	6a1b      	ldr	r3, [r3, #32]
 800b81a:	613b      	str	r3, [r7, #16]
 800b81c:	697b      	ldr	r3, [r7, #20]
 800b81e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b822:	617b      	str	r3, [r7, #20]
 800b824:	687b      	ldr	r3, [r7, #4]
 800b826:	021b      	lsls	r3, r3, #8
 800b828:	697a      	ldr	r2, [r7, #20]
 800b82a:	4313      	orrs	r3, r2
 800b82c:	617b      	str	r3, [r7, #20]
 800b82e:	697b      	ldr	r3, [r7, #20]
 800b830:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800b834:	617b      	str	r3, [r7, #20]
 800b836:	683b      	ldr	r3, [r7, #0]
 800b838:	031b      	lsls	r3, r3, #12
 800b83a:	b29b      	uxth	r3, r3
 800b83c:	697a      	ldr	r2, [r7, #20]
 800b83e:	4313      	orrs	r3, r2
 800b840:	617b      	str	r3, [r7, #20]
 800b842:	693b      	ldr	r3, [r7, #16]
 800b844:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800b848:	613b      	str	r3, [r7, #16]
 800b84a:	68bb      	ldr	r3, [r7, #8]
 800b84c:	011b      	lsls	r3, r3, #4
 800b84e:	f003 03a0 	and.w	r3, r3, #160	; 0xa0
 800b852:	693a      	ldr	r2, [r7, #16]
 800b854:	4313      	orrs	r3, r2
 800b856:	613b      	str	r3, [r7, #16]
 800b858:	68fb      	ldr	r3, [r7, #12]
 800b85a:	697a      	ldr	r2, [r7, #20]
 800b85c:	619a      	str	r2, [r3, #24]
 800b85e:	68fb      	ldr	r3, [r7, #12]
 800b860:	693a      	ldr	r2, [r7, #16]
 800b862:	621a      	str	r2, [r3, #32]
 800b864:	bf00      	nop
 800b866:	371c      	adds	r7, #28
 800b868:	46bd      	mov	sp, r7
 800b86a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b86e:	4770      	bx	lr

0800b870 <TIM_TI2_ConfigInputStage>:
 800b870:	b480      	push	{r7}
 800b872:	b087      	sub	sp, #28
 800b874:	af00      	add	r7, sp, #0
 800b876:	60f8      	str	r0, [r7, #12]
 800b878:	60b9      	str	r1, [r7, #8]
 800b87a:	607a      	str	r2, [r7, #4]
 800b87c:	68fb      	ldr	r3, [r7, #12]
 800b87e:	6a1b      	ldr	r3, [r3, #32]
 800b880:	f023 0210 	bic.w	r2, r3, #16
 800b884:	68fb      	ldr	r3, [r7, #12]
 800b886:	621a      	str	r2, [r3, #32]
 800b888:	68fb      	ldr	r3, [r7, #12]
 800b88a:	699b      	ldr	r3, [r3, #24]
 800b88c:	617b      	str	r3, [r7, #20]
 800b88e:	68fb      	ldr	r3, [r7, #12]
 800b890:	6a1b      	ldr	r3, [r3, #32]
 800b892:	613b      	str	r3, [r7, #16]
 800b894:	697b      	ldr	r3, [r7, #20]
 800b896:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800b89a:	617b      	str	r3, [r7, #20]
 800b89c:	687b      	ldr	r3, [r7, #4]
 800b89e:	031b      	lsls	r3, r3, #12
 800b8a0:	697a      	ldr	r2, [r7, #20]
 800b8a2:	4313      	orrs	r3, r2
 800b8a4:	617b      	str	r3, [r7, #20]
 800b8a6:	693b      	ldr	r3, [r7, #16]
 800b8a8:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800b8ac:	613b      	str	r3, [r7, #16]
 800b8ae:	68bb      	ldr	r3, [r7, #8]
 800b8b0:	011b      	lsls	r3, r3, #4
 800b8b2:	693a      	ldr	r2, [r7, #16]
 800b8b4:	4313      	orrs	r3, r2
 800b8b6:	613b      	str	r3, [r7, #16]
 800b8b8:	68fb      	ldr	r3, [r7, #12]
 800b8ba:	697a      	ldr	r2, [r7, #20]
 800b8bc:	619a      	str	r2, [r3, #24]
 800b8be:	68fb      	ldr	r3, [r7, #12]
 800b8c0:	693a      	ldr	r2, [r7, #16]
 800b8c2:	621a      	str	r2, [r3, #32]
 800b8c4:	bf00      	nop
 800b8c6:	371c      	adds	r7, #28
 800b8c8:	46bd      	mov	sp, r7
 800b8ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8ce:	4770      	bx	lr

0800b8d0 <TIM_TI3_SetConfig>:
 800b8d0:	b480      	push	{r7}
 800b8d2:	b087      	sub	sp, #28
 800b8d4:	af00      	add	r7, sp, #0
 800b8d6:	60f8      	str	r0, [r7, #12]
 800b8d8:	60b9      	str	r1, [r7, #8]
 800b8da:	607a      	str	r2, [r7, #4]
 800b8dc:	603b      	str	r3, [r7, #0]
 800b8de:	68fb      	ldr	r3, [r7, #12]
 800b8e0:	6a1b      	ldr	r3, [r3, #32]
 800b8e2:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800b8e6:	68fb      	ldr	r3, [r7, #12]
 800b8e8:	621a      	str	r2, [r3, #32]
 800b8ea:	68fb      	ldr	r3, [r7, #12]
 800b8ec:	69db      	ldr	r3, [r3, #28]
 800b8ee:	617b      	str	r3, [r7, #20]
 800b8f0:	68fb      	ldr	r3, [r7, #12]
 800b8f2:	6a1b      	ldr	r3, [r3, #32]
 800b8f4:	613b      	str	r3, [r7, #16]
 800b8f6:	697b      	ldr	r3, [r7, #20]
 800b8f8:	f023 0303 	bic.w	r3, r3, #3
 800b8fc:	617b      	str	r3, [r7, #20]
 800b8fe:	697a      	ldr	r2, [r7, #20]
 800b900:	687b      	ldr	r3, [r7, #4]
 800b902:	4313      	orrs	r3, r2
 800b904:	617b      	str	r3, [r7, #20]
 800b906:	697b      	ldr	r3, [r7, #20]
 800b908:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800b90c:	617b      	str	r3, [r7, #20]
 800b90e:	683b      	ldr	r3, [r7, #0]
 800b910:	011b      	lsls	r3, r3, #4
 800b912:	b2db      	uxtb	r3, r3
 800b914:	697a      	ldr	r2, [r7, #20]
 800b916:	4313      	orrs	r3, r2
 800b918:	617b      	str	r3, [r7, #20]
 800b91a:	693b      	ldr	r3, [r7, #16]
 800b91c:	f423 6320 	bic.w	r3, r3, #2560	; 0xa00
 800b920:	613b      	str	r3, [r7, #16]
 800b922:	68bb      	ldr	r3, [r7, #8]
 800b924:	021b      	lsls	r3, r3, #8
 800b926:	f403 6320 	and.w	r3, r3, #2560	; 0xa00
 800b92a:	693a      	ldr	r2, [r7, #16]
 800b92c:	4313      	orrs	r3, r2
 800b92e:	613b      	str	r3, [r7, #16]
 800b930:	68fb      	ldr	r3, [r7, #12]
 800b932:	697a      	ldr	r2, [r7, #20]
 800b934:	61da      	str	r2, [r3, #28]
 800b936:	68fb      	ldr	r3, [r7, #12]
 800b938:	693a      	ldr	r2, [r7, #16]
 800b93a:	621a      	str	r2, [r3, #32]
 800b93c:	bf00      	nop
 800b93e:	371c      	adds	r7, #28
 800b940:	46bd      	mov	sp, r7
 800b942:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b946:	4770      	bx	lr

0800b948 <TIM_TI4_SetConfig>:
 800b948:	b480      	push	{r7}
 800b94a:	b087      	sub	sp, #28
 800b94c:	af00      	add	r7, sp, #0
 800b94e:	60f8      	str	r0, [r7, #12]
 800b950:	60b9      	str	r1, [r7, #8]
 800b952:	607a      	str	r2, [r7, #4]
 800b954:	603b      	str	r3, [r7, #0]
 800b956:	68fb      	ldr	r3, [r7, #12]
 800b958:	6a1b      	ldr	r3, [r3, #32]
 800b95a:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800b95e:	68fb      	ldr	r3, [r7, #12]
 800b960:	621a      	str	r2, [r3, #32]
 800b962:	68fb      	ldr	r3, [r7, #12]
 800b964:	69db      	ldr	r3, [r3, #28]
 800b966:	617b      	str	r3, [r7, #20]
 800b968:	68fb      	ldr	r3, [r7, #12]
 800b96a:	6a1b      	ldr	r3, [r3, #32]
 800b96c:	613b      	str	r3, [r7, #16]
 800b96e:	697b      	ldr	r3, [r7, #20]
 800b970:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b974:	617b      	str	r3, [r7, #20]
 800b976:	687b      	ldr	r3, [r7, #4]
 800b978:	021b      	lsls	r3, r3, #8
 800b97a:	697a      	ldr	r2, [r7, #20]
 800b97c:	4313      	orrs	r3, r2
 800b97e:	617b      	str	r3, [r7, #20]
 800b980:	697b      	ldr	r3, [r7, #20]
 800b982:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800b986:	617b      	str	r3, [r7, #20]
 800b988:	683b      	ldr	r3, [r7, #0]
 800b98a:	031b      	lsls	r3, r3, #12
 800b98c:	b29b      	uxth	r3, r3
 800b98e:	697a      	ldr	r2, [r7, #20]
 800b990:	4313      	orrs	r3, r2
 800b992:	617b      	str	r3, [r7, #20]
 800b994:	693b      	ldr	r3, [r7, #16]
 800b996:	f423 4320 	bic.w	r3, r3, #40960	; 0xa000
 800b99a:	613b      	str	r3, [r7, #16]
 800b99c:	68bb      	ldr	r3, [r7, #8]
 800b99e:	031b      	lsls	r3, r3, #12
 800b9a0:	f403 4320 	and.w	r3, r3, #40960	; 0xa000
 800b9a4:	693a      	ldr	r2, [r7, #16]
 800b9a6:	4313      	orrs	r3, r2
 800b9a8:	613b      	str	r3, [r7, #16]
 800b9aa:	68fb      	ldr	r3, [r7, #12]
 800b9ac:	697a      	ldr	r2, [r7, #20]
 800b9ae:	61da      	str	r2, [r3, #28]
 800b9b0:	68fb      	ldr	r3, [r7, #12]
 800b9b2:	693a      	ldr	r2, [r7, #16]
 800b9b4:	621a      	str	r2, [r3, #32]
 800b9b6:	bf00      	nop
 800b9b8:	371c      	adds	r7, #28
 800b9ba:	46bd      	mov	sp, r7
 800b9bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9c0:	4770      	bx	lr

0800b9c2 <TIM_ITRx_SetConfig>:
 800b9c2:	b480      	push	{r7}
 800b9c4:	b085      	sub	sp, #20
 800b9c6:	af00      	add	r7, sp, #0
 800b9c8:	6078      	str	r0, [r7, #4]
 800b9ca:	6039      	str	r1, [r7, #0]
 800b9cc:	687b      	ldr	r3, [r7, #4]
 800b9ce:	689b      	ldr	r3, [r3, #8]
 800b9d0:	60fb      	str	r3, [r7, #12]
 800b9d2:	68fb      	ldr	r3, [r7, #12]
 800b9d4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b9d8:	60fb      	str	r3, [r7, #12]
 800b9da:	683a      	ldr	r2, [r7, #0]
 800b9dc:	68fb      	ldr	r3, [r7, #12]
 800b9de:	4313      	orrs	r3, r2
 800b9e0:	f043 0307 	orr.w	r3, r3, #7
 800b9e4:	60fb      	str	r3, [r7, #12]
 800b9e6:	687b      	ldr	r3, [r7, #4]
 800b9e8:	68fa      	ldr	r2, [r7, #12]
 800b9ea:	609a      	str	r2, [r3, #8]
 800b9ec:	bf00      	nop
 800b9ee:	3714      	adds	r7, #20
 800b9f0:	46bd      	mov	sp, r7
 800b9f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9f6:	4770      	bx	lr

0800b9f8 <TIM_ETR_SetConfig>:
 800b9f8:	b480      	push	{r7}
 800b9fa:	b087      	sub	sp, #28
 800b9fc:	af00      	add	r7, sp, #0
 800b9fe:	60f8      	str	r0, [r7, #12]
 800ba00:	60b9      	str	r1, [r7, #8]
 800ba02:	607a      	str	r2, [r7, #4]
 800ba04:	603b      	str	r3, [r7, #0]
 800ba06:	68fb      	ldr	r3, [r7, #12]
 800ba08:	689b      	ldr	r3, [r3, #8]
 800ba0a:	617b      	str	r3, [r7, #20]
 800ba0c:	697b      	ldr	r3, [r7, #20]
 800ba0e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800ba12:	617b      	str	r3, [r7, #20]
 800ba14:	683b      	ldr	r3, [r7, #0]
 800ba16:	021a      	lsls	r2, r3, #8
 800ba18:	687b      	ldr	r3, [r7, #4]
 800ba1a:	431a      	orrs	r2, r3
 800ba1c:	68bb      	ldr	r3, [r7, #8]
 800ba1e:	4313      	orrs	r3, r2
 800ba20:	697a      	ldr	r2, [r7, #20]
 800ba22:	4313      	orrs	r3, r2
 800ba24:	617b      	str	r3, [r7, #20]
 800ba26:	68fb      	ldr	r3, [r7, #12]
 800ba28:	697a      	ldr	r2, [r7, #20]
 800ba2a:	609a      	str	r2, [r3, #8]
 800ba2c:	bf00      	nop
 800ba2e:	371c      	adds	r7, #28
 800ba30:	46bd      	mov	sp, r7
 800ba32:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba36:	4770      	bx	lr

0800ba38 <TIM_CCxChannelCmd>:
 800ba38:	b480      	push	{r7}
 800ba3a:	b087      	sub	sp, #28
 800ba3c:	af00      	add	r7, sp, #0
 800ba3e:	60f8      	str	r0, [r7, #12]
 800ba40:	60b9      	str	r1, [r7, #8]
 800ba42:	607a      	str	r2, [r7, #4]
 800ba44:	68bb      	ldr	r3, [r7, #8]
 800ba46:	f003 031f 	and.w	r3, r3, #31
 800ba4a:	2201      	movs	r2, #1
 800ba4c:	fa02 f303 	lsl.w	r3, r2, r3
 800ba50:	617b      	str	r3, [r7, #20]
 800ba52:	68fb      	ldr	r3, [r7, #12]
 800ba54:	6a1a      	ldr	r2, [r3, #32]
 800ba56:	697b      	ldr	r3, [r7, #20]
 800ba58:	43db      	mvns	r3, r3
 800ba5a:	401a      	ands	r2, r3
 800ba5c:	68fb      	ldr	r3, [r7, #12]
 800ba5e:	621a      	str	r2, [r3, #32]
 800ba60:	68fb      	ldr	r3, [r7, #12]
 800ba62:	6a1a      	ldr	r2, [r3, #32]
 800ba64:	68bb      	ldr	r3, [r7, #8]
 800ba66:	f003 031f 	and.w	r3, r3, #31
 800ba6a:	6879      	ldr	r1, [r7, #4]
 800ba6c:	fa01 f303 	lsl.w	r3, r1, r3
 800ba70:	431a      	orrs	r2, r3
 800ba72:	68fb      	ldr	r3, [r7, #12]
 800ba74:	621a      	str	r2, [r3, #32]
 800ba76:	bf00      	nop
 800ba78:	371c      	adds	r7, #28
 800ba7a:	46bd      	mov	sp, r7
 800ba7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba80:	4770      	bx	lr
	...

0800ba84 <HAL_TIMEx_MasterConfigSynchronization>:
 800ba84:	b480      	push	{r7}
 800ba86:	b085      	sub	sp, #20
 800ba88:	af00      	add	r7, sp, #0
 800ba8a:	6078      	str	r0, [r7, #4]
 800ba8c:	6039      	str	r1, [r7, #0]
 800ba8e:	687b      	ldr	r3, [r7, #4]
 800ba90:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800ba94:	2b01      	cmp	r3, #1
 800ba96:	d101      	bne.n	800ba9c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800ba98:	2302      	movs	r3, #2
 800ba9a:	e05a      	b.n	800bb52 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 800ba9c:	687b      	ldr	r3, [r7, #4]
 800ba9e:	2201      	movs	r2, #1
 800baa0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800baa4:	687b      	ldr	r3, [r7, #4]
 800baa6:	2202      	movs	r2, #2
 800baa8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800baac:	687b      	ldr	r3, [r7, #4]
 800baae:	681b      	ldr	r3, [r3, #0]
 800bab0:	685b      	ldr	r3, [r3, #4]
 800bab2:	60fb      	str	r3, [r7, #12]
 800bab4:	687b      	ldr	r3, [r7, #4]
 800bab6:	681b      	ldr	r3, [r3, #0]
 800bab8:	689b      	ldr	r3, [r3, #8]
 800baba:	60bb      	str	r3, [r7, #8]
 800babc:	68fb      	ldr	r3, [r7, #12]
 800babe:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800bac2:	60fb      	str	r3, [r7, #12]
 800bac4:	683b      	ldr	r3, [r7, #0]
 800bac6:	681b      	ldr	r3, [r3, #0]
 800bac8:	68fa      	ldr	r2, [r7, #12]
 800baca:	4313      	orrs	r3, r2
 800bacc:	60fb      	str	r3, [r7, #12]
 800bace:	687b      	ldr	r3, [r7, #4]
 800bad0:	681b      	ldr	r3, [r3, #0]
 800bad2:	68fa      	ldr	r2, [r7, #12]
 800bad4:	605a      	str	r2, [r3, #4]
 800bad6:	687b      	ldr	r3, [r7, #4]
 800bad8:	681b      	ldr	r3, [r3, #0]
 800bada:	4a21      	ldr	r2, [pc, #132]	; (800bb60 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 800badc:	4293      	cmp	r3, r2
 800bade:	d022      	beq.n	800bb26 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bae0:	687b      	ldr	r3, [r7, #4]
 800bae2:	681b      	ldr	r3, [r3, #0]
 800bae4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800bae8:	d01d      	beq.n	800bb26 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800baea:	687b      	ldr	r3, [r7, #4]
 800baec:	681b      	ldr	r3, [r3, #0]
 800baee:	4a1d      	ldr	r2, [pc, #116]	; (800bb64 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 800baf0:	4293      	cmp	r3, r2
 800baf2:	d018      	beq.n	800bb26 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800baf4:	687b      	ldr	r3, [r7, #4]
 800baf6:	681b      	ldr	r3, [r3, #0]
 800baf8:	4a1b      	ldr	r2, [pc, #108]	; (800bb68 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800bafa:	4293      	cmp	r3, r2
 800bafc:	d013      	beq.n	800bb26 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bafe:	687b      	ldr	r3, [r7, #4]
 800bb00:	681b      	ldr	r3, [r3, #0]
 800bb02:	4a1a      	ldr	r2, [pc, #104]	; (800bb6c <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 800bb04:	4293      	cmp	r3, r2
 800bb06:	d00e      	beq.n	800bb26 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bb08:	687b      	ldr	r3, [r7, #4]
 800bb0a:	681b      	ldr	r3, [r3, #0]
 800bb0c:	4a18      	ldr	r2, [pc, #96]	; (800bb70 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 800bb0e:	4293      	cmp	r3, r2
 800bb10:	d009      	beq.n	800bb26 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bb12:	687b      	ldr	r3, [r7, #4]
 800bb14:	681b      	ldr	r3, [r3, #0]
 800bb16:	4a17      	ldr	r2, [pc, #92]	; (800bb74 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 800bb18:	4293      	cmp	r3, r2
 800bb1a:	d004      	beq.n	800bb26 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bb1c:	687b      	ldr	r3, [r7, #4]
 800bb1e:	681b      	ldr	r3, [r3, #0]
 800bb20:	4a15      	ldr	r2, [pc, #84]	; (800bb78 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800bb22:	4293      	cmp	r3, r2
 800bb24:	d10c      	bne.n	800bb40 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 800bb26:	68bb      	ldr	r3, [r7, #8]
 800bb28:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800bb2c:	60bb      	str	r3, [r7, #8]
 800bb2e:	683b      	ldr	r3, [r7, #0]
 800bb30:	685b      	ldr	r3, [r3, #4]
 800bb32:	68ba      	ldr	r2, [r7, #8]
 800bb34:	4313      	orrs	r3, r2
 800bb36:	60bb      	str	r3, [r7, #8]
 800bb38:	687b      	ldr	r3, [r7, #4]
 800bb3a:	681b      	ldr	r3, [r3, #0]
 800bb3c:	68ba      	ldr	r2, [r7, #8]
 800bb3e:	609a      	str	r2, [r3, #8]
 800bb40:	687b      	ldr	r3, [r7, #4]
 800bb42:	2201      	movs	r2, #1
 800bb44:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bb48:	687b      	ldr	r3, [r7, #4]
 800bb4a:	2200      	movs	r2, #0
 800bb4c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bb50:	2300      	movs	r3, #0
 800bb52:	4618      	mov	r0, r3
 800bb54:	3714      	adds	r7, #20
 800bb56:	46bd      	mov	sp, r7
 800bb58:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb5c:	4770      	bx	lr
 800bb5e:	bf00      	nop
 800bb60:	40010000 	.word	0x40010000
 800bb64:	40000400 	.word	0x40000400
 800bb68:	40000800 	.word	0x40000800
 800bb6c:	40000c00 	.word	0x40000c00
 800bb70:	40010400 	.word	0x40010400
 800bb74:	40014000 	.word	0x40014000
 800bb78:	40001800 	.word	0x40001800

0800bb7c <HAL_TIMEx_ConfigBreakDeadTime>:
 800bb7c:	b480      	push	{r7}
 800bb7e:	b085      	sub	sp, #20
 800bb80:	af00      	add	r7, sp, #0
 800bb82:	6078      	str	r0, [r7, #4]
 800bb84:	6039      	str	r1, [r7, #0]
 800bb86:	2300      	movs	r3, #0
 800bb88:	60fb      	str	r3, [r7, #12]
 800bb8a:	687b      	ldr	r3, [r7, #4]
 800bb8c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800bb90:	2b01      	cmp	r3, #1
 800bb92:	d101      	bne.n	800bb98 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 800bb94:	2302      	movs	r3, #2
 800bb96:	e03d      	b.n	800bc14 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 800bb98:	687b      	ldr	r3, [r7, #4]
 800bb9a:	2201      	movs	r2, #1
 800bb9c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bba0:	68fb      	ldr	r3, [r7, #12]
 800bba2:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 800bba6:	683b      	ldr	r3, [r7, #0]
 800bba8:	68db      	ldr	r3, [r3, #12]
 800bbaa:	4313      	orrs	r3, r2
 800bbac:	60fb      	str	r3, [r7, #12]
 800bbae:	68fb      	ldr	r3, [r7, #12]
 800bbb0:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800bbb4:	683b      	ldr	r3, [r7, #0]
 800bbb6:	689b      	ldr	r3, [r3, #8]
 800bbb8:	4313      	orrs	r3, r2
 800bbba:	60fb      	str	r3, [r7, #12]
 800bbbc:	68fb      	ldr	r3, [r7, #12]
 800bbbe:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 800bbc2:	683b      	ldr	r3, [r7, #0]
 800bbc4:	685b      	ldr	r3, [r3, #4]
 800bbc6:	4313      	orrs	r3, r2
 800bbc8:	60fb      	str	r3, [r7, #12]
 800bbca:	68fb      	ldr	r3, [r7, #12]
 800bbcc:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 800bbd0:	683b      	ldr	r3, [r7, #0]
 800bbd2:	681b      	ldr	r3, [r3, #0]
 800bbd4:	4313      	orrs	r3, r2
 800bbd6:	60fb      	str	r3, [r7, #12]
 800bbd8:	68fb      	ldr	r3, [r7, #12]
 800bbda:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800bbde:	683b      	ldr	r3, [r7, #0]
 800bbe0:	691b      	ldr	r3, [r3, #16]
 800bbe2:	4313      	orrs	r3, r2
 800bbe4:	60fb      	str	r3, [r7, #12]
 800bbe6:	68fb      	ldr	r3, [r7, #12]
 800bbe8:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 800bbec:	683b      	ldr	r3, [r7, #0]
 800bbee:	695b      	ldr	r3, [r3, #20]
 800bbf0:	4313      	orrs	r3, r2
 800bbf2:	60fb      	str	r3, [r7, #12]
 800bbf4:	68fb      	ldr	r3, [r7, #12]
 800bbf6:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 800bbfa:	683b      	ldr	r3, [r7, #0]
 800bbfc:	69db      	ldr	r3, [r3, #28]
 800bbfe:	4313      	orrs	r3, r2
 800bc00:	60fb      	str	r3, [r7, #12]
 800bc02:	687b      	ldr	r3, [r7, #4]
 800bc04:	681b      	ldr	r3, [r3, #0]
 800bc06:	68fa      	ldr	r2, [r7, #12]
 800bc08:	645a      	str	r2, [r3, #68]	; 0x44
 800bc0a:	687b      	ldr	r3, [r7, #4]
 800bc0c:	2200      	movs	r2, #0
 800bc0e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bc12:	2300      	movs	r3, #0
 800bc14:	4618      	mov	r0, r3
 800bc16:	3714      	adds	r7, #20
 800bc18:	46bd      	mov	sp, r7
 800bc1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc1e:	4770      	bx	lr

0800bc20 <HAL_TIMEx_CommutCallback>:
 800bc20:	b480      	push	{r7}
 800bc22:	b083      	sub	sp, #12
 800bc24:	af00      	add	r7, sp, #0
 800bc26:	6078      	str	r0, [r7, #4]
 800bc28:	bf00      	nop
 800bc2a:	370c      	adds	r7, #12
 800bc2c:	46bd      	mov	sp, r7
 800bc2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc32:	4770      	bx	lr

0800bc34 <HAL_TIMEx_BreakCallback>:
 800bc34:	b480      	push	{r7}
 800bc36:	b083      	sub	sp, #12
 800bc38:	af00      	add	r7, sp, #0
 800bc3a:	6078      	str	r0, [r7, #4]
 800bc3c:	bf00      	nop
 800bc3e:	370c      	adds	r7, #12
 800bc40:	46bd      	mov	sp, r7
 800bc42:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc46:	4770      	bx	lr

0800bc48 <HAL_UART_Init>:
 800bc48:	b580      	push	{r7, lr}
 800bc4a:	b082      	sub	sp, #8
 800bc4c:	af00      	add	r7, sp, #0
 800bc4e:	6078      	str	r0, [r7, #4]
 800bc50:	687b      	ldr	r3, [r7, #4]
 800bc52:	2b00      	cmp	r3, #0
 800bc54:	d101      	bne.n	800bc5a <HAL_UART_Init+0x12>
 800bc56:	2301      	movs	r3, #1
 800bc58:	e03f      	b.n	800bcda <HAL_UART_Init+0x92>
 800bc5a:	687b      	ldr	r3, [r7, #4]
 800bc5c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800bc60:	b2db      	uxtb	r3, r3
 800bc62:	2b00      	cmp	r3, #0
 800bc64:	d106      	bne.n	800bc74 <HAL_UART_Init+0x2c>
 800bc66:	687b      	ldr	r3, [r7, #4]
 800bc68:	2200      	movs	r2, #0
 800bc6a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bc6e:	6878      	ldr	r0, [r7, #4]
 800bc70:	f7fb f95c 	bl	8006f2c <HAL_UART_MspInit>
 800bc74:	687b      	ldr	r3, [r7, #4]
 800bc76:	2224      	movs	r2, #36	; 0x24
 800bc78:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bc7c:	687b      	ldr	r3, [r7, #4]
 800bc7e:	681b      	ldr	r3, [r3, #0]
 800bc80:	68da      	ldr	r2, [r3, #12]
 800bc82:	687b      	ldr	r3, [r7, #4]
 800bc84:	681b      	ldr	r3, [r3, #0]
 800bc86:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800bc8a:	60da      	str	r2, [r3, #12]
 800bc8c:	6878      	ldr	r0, [r7, #4]
 800bc8e:	f000 fe81 	bl	800c994 <UART_SetConfig>
 800bc92:	687b      	ldr	r3, [r7, #4]
 800bc94:	681b      	ldr	r3, [r3, #0]
 800bc96:	691a      	ldr	r2, [r3, #16]
 800bc98:	687b      	ldr	r3, [r7, #4]
 800bc9a:	681b      	ldr	r3, [r3, #0]
 800bc9c:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800bca0:	611a      	str	r2, [r3, #16]
 800bca2:	687b      	ldr	r3, [r7, #4]
 800bca4:	681b      	ldr	r3, [r3, #0]
 800bca6:	695a      	ldr	r2, [r3, #20]
 800bca8:	687b      	ldr	r3, [r7, #4]
 800bcaa:	681b      	ldr	r3, [r3, #0]
 800bcac:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800bcb0:	615a      	str	r2, [r3, #20]
 800bcb2:	687b      	ldr	r3, [r7, #4]
 800bcb4:	681b      	ldr	r3, [r3, #0]
 800bcb6:	68da      	ldr	r2, [r3, #12]
 800bcb8:	687b      	ldr	r3, [r7, #4]
 800bcba:	681b      	ldr	r3, [r3, #0]
 800bcbc:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800bcc0:	60da      	str	r2, [r3, #12]
 800bcc2:	687b      	ldr	r3, [r7, #4]
 800bcc4:	2200      	movs	r2, #0
 800bcc6:	641a      	str	r2, [r3, #64]	; 0x40
 800bcc8:	687b      	ldr	r3, [r7, #4]
 800bcca:	2220      	movs	r2, #32
 800bccc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bcd0:	687b      	ldr	r3, [r7, #4]
 800bcd2:	2220      	movs	r2, #32
 800bcd4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800bcd8:	2300      	movs	r3, #0
 800bcda:	4618      	mov	r0, r3
 800bcdc:	3708      	adds	r7, #8
 800bcde:	46bd      	mov	sp, r7
 800bce0:	bd80      	pop	{r7, pc}

0800bce2 <HAL_UART_Transmit>:
 800bce2:	b580      	push	{r7, lr}
 800bce4:	b08a      	sub	sp, #40	; 0x28
 800bce6:	af02      	add	r7, sp, #8
 800bce8:	60f8      	str	r0, [r7, #12]
 800bcea:	60b9      	str	r1, [r7, #8]
 800bcec:	603b      	str	r3, [r7, #0]
 800bcee:	4613      	mov	r3, r2
 800bcf0:	80fb      	strh	r3, [r7, #6]
 800bcf2:	2300      	movs	r3, #0
 800bcf4:	617b      	str	r3, [r7, #20]
 800bcf6:	68fb      	ldr	r3, [r7, #12]
 800bcf8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800bcfc:	b2db      	uxtb	r3, r3
 800bcfe:	2b20      	cmp	r3, #32
 800bd00:	d17c      	bne.n	800bdfc <HAL_UART_Transmit+0x11a>
 800bd02:	68bb      	ldr	r3, [r7, #8]
 800bd04:	2b00      	cmp	r3, #0
 800bd06:	d002      	beq.n	800bd0e <HAL_UART_Transmit+0x2c>
 800bd08:	88fb      	ldrh	r3, [r7, #6]
 800bd0a:	2b00      	cmp	r3, #0
 800bd0c:	d101      	bne.n	800bd12 <HAL_UART_Transmit+0x30>
 800bd0e:	2301      	movs	r3, #1
 800bd10:	e075      	b.n	800bdfe <HAL_UART_Transmit+0x11c>
 800bd12:	68fb      	ldr	r3, [r7, #12]
 800bd14:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800bd18:	2b01      	cmp	r3, #1
 800bd1a:	d101      	bne.n	800bd20 <HAL_UART_Transmit+0x3e>
 800bd1c:	2302      	movs	r3, #2
 800bd1e:	e06e      	b.n	800bdfe <HAL_UART_Transmit+0x11c>
 800bd20:	68fb      	ldr	r3, [r7, #12]
 800bd22:	2201      	movs	r2, #1
 800bd24:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bd28:	68fb      	ldr	r3, [r7, #12]
 800bd2a:	2200      	movs	r2, #0
 800bd2c:	641a      	str	r2, [r3, #64]	; 0x40
 800bd2e:	68fb      	ldr	r3, [r7, #12]
 800bd30:	2221      	movs	r2, #33	; 0x21
 800bd32:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bd36:	f7fb fbdb 	bl	80074f0 <HAL_GetTick>
 800bd3a:	6178      	str	r0, [r7, #20]
 800bd3c:	68fb      	ldr	r3, [r7, #12]
 800bd3e:	88fa      	ldrh	r2, [r7, #6]
 800bd40:	849a      	strh	r2, [r3, #36]	; 0x24
 800bd42:	68fb      	ldr	r3, [r7, #12]
 800bd44:	88fa      	ldrh	r2, [r7, #6]
 800bd46:	84da      	strh	r2, [r3, #38]	; 0x26
 800bd48:	68fb      	ldr	r3, [r7, #12]
 800bd4a:	689b      	ldr	r3, [r3, #8]
 800bd4c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800bd50:	d108      	bne.n	800bd64 <HAL_UART_Transmit+0x82>
 800bd52:	68fb      	ldr	r3, [r7, #12]
 800bd54:	691b      	ldr	r3, [r3, #16]
 800bd56:	2b00      	cmp	r3, #0
 800bd58:	d104      	bne.n	800bd64 <HAL_UART_Transmit+0x82>
 800bd5a:	2300      	movs	r3, #0
 800bd5c:	61fb      	str	r3, [r7, #28]
 800bd5e:	68bb      	ldr	r3, [r7, #8]
 800bd60:	61bb      	str	r3, [r7, #24]
 800bd62:	e003      	b.n	800bd6c <HAL_UART_Transmit+0x8a>
 800bd64:	68bb      	ldr	r3, [r7, #8]
 800bd66:	61fb      	str	r3, [r7, #28]
 800bd68:	2300      	movs	r3, #0
 800bd6a:	61bb      	str	r3, [r7, #24]
 800bd6c:	68fb      	ldr	r3, [r7, #12]
 800bd6e:	2200      	movs	r2, #0
 800bd70:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bd74:	e02a      	b.n	800bdcc <HAL_UART_Transmit+0xea>
 800bd76:	683b      	ldr	r3, [r7, #0]
 800bd78:	9300      	str	r3, [sp, #0]
 800bd7a:	697b      	ldr	r3, [r7, #20]
 800bd7c:	2200      	movs	r2, #0
 800bd7e:	2180      	movs	r1, #128	; 0x80
 800bd80:	68f8      	ldr	r0, [r7, #12]
 800bd82:	f000 fbc1 	bl	800c508 <UART_WaitOnFlagUntilTimeout>
 800bd86:	4603      	mov	r3, r0
 800bd88:	2b00      	cmp	r3, #0
 800bd8a:	d001      	beq.n	800bd90 <HAL_UART_Transmit+0xae>
 800bd8c:	2303      	movs	r3, #3
 800bd8e:	e036      	b.n	800bdfe <HAL_UART_Transmit+0x11c>
 800bd90:	69fb      	ldr	r3, [r7, #28]
 800bd92:	2b00      	cmp	r3, #0
 800bd94:	d10b      	bne.n	800bdae <HAL_UART_Transmit+0xcc>
 800bd96:	69bb      	ldr	r3, [r7, #24]
 800bd98:	881b      	ldrh	r3, [r3, #0]
 800bd9a:	461a      	mov	r2, r3
 800bd9c:	68fb      	ldr	r3, [r7, #12]
 800bd9e:	681b      	ldr	r3, [r3, #0]
 800bda0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800bda4:	605a      	str	r2, [r3, #4]
 800bda6:	69bb      	ldr	r3, [r7, #24]
 800bda8:	3302      	adds	r3, #2
 800bdaa:	61bb      	str	r3, [r7, #24]
 800bdac:	e007      	b.n	800bdbe <HAL_UART_Transmit+0xdc>
 800bdae:	69fb      	ldr	r3, [r7, #28]
 800bdb0:	781a      	ldrb	r2, [r3, #0]
 800bdb2:	68fb      	ldr	r3, [r7, #12]
 800bdb4:	681b      	ldr	r3, [r3, #0]
 800bdb6:	605a      	str	r2, [r3, #4]
 800bdb8:	69fb      	ldr	r3, [r7, #28]
 800bdba:	3301      	adds	r3, #1
 800bdbc:	61fb      	str	r3, [r7, #28]
 800bdbe:	68fb      	ldr	r3, [r7, #12]
 800bdc0:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800bdc2:	b29b      	uxth	r3, r3
 800bdc4:	3b01      	subs	r3, #1
 800bdc6:	b29a      	uxth	r2, r3
 800bdc8:	68fb      	ldr	r3, [r7, #12]
 800bdca:	84da      	strh	r2, [r3, #38]	; 0x26
 800bdcc:	68fb      	ldr	r3, [r7, #12]
 800bdce:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800bdd0:	b29b      	uxth	r3, r3
 800bdd2:	2b00      	cmp	r3, #0
 800bdd4:	d1cf      	bne.n	800bd76 <HAL_UART_Transmit+0x94>
 800bdd6:	683b      	ldr	r3, [r7, #0]
 800bdd8:	9300      	str	r3, [sp, #0]
 800bdda:	697b      	ldr	r3, [r7, #20]
 800bddc:	2200      	movs	r2, #0
 800bdde:	2140      	movs	r1, #64	; 0x40
 800bde0:	68f8      	ldr	r0, [r7, #12]
 800bde2:	f000 fb91 	bl	800c508 <UART_WaitOnFlagUntilTimeout>
 800bde6:	4603      	mov	r3, r0
 800bde8:	2b00      	cmp	r3, #0
 800bdea:	d001      	beq.n	800bdf0 <HAL_UART_Transmit+0x10e>
 800bdec:	2303      	movs	r3, #3
 800bdee:	e006      	b.n	800bdfe <HAL_UART_Transmit+0x11c>
 800bdf0:	68fb      	ldr	r3, [r7, #12]
 800bdf2:	2220      	movs	r2, #32
 800bdf4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bdf8:	2300      	movs	r3, #0
 800bdfa:	e000      	b.n	800bdfe <HAL_UART_Transmit+0x11c>
 800bdfc:	2302      	movs	r3, #2
 800bdfe:	4618      	mov	r0, r3
 800be00:	3720      	adds	r7, #32
 800be02:	46bd      	mov	sp, r7
 800be04:	bd80      	pop	{r7, pc}

0800be06 <HAL_UART_Receive>:
 800be06:	b580      	push	{r7, lr}
 800be08:	b08a      	sub	sp, #40	; 0x28
 800be0a:	af02      	add	r7, sp, #8
 800be0c:	60f8      	str	r0, [r7, #12]
 800be0e:	60b9      	str	r1, [r7, #8]
 800be10:	603b      	str	r3, [r7, #0]
 800be12:	4613      	mov	r3, r2
 800be14:	80fb      	strh	r3, [r7, #6]
 800be16:	2300      	movs	r3, #0
 800be18:	617b      	str	r3, [r7, #20]
 800be1a:	68fb      	ldr	r3, [r7, #12]
 800be1c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800be20:	b2db      	uxtb	r3, r3
 800be22:	2b20      	cmp	r3, #32
 800be24:	f040 808c 	bne.w	800bf40 <HAL_UART_Receive+0x13a>
 800be28:	68bb      	ldr	r3, [r7, #8]
 800be2a:	2b00      	cmp	r3, #0
 800be2c:	d002      	beq.n	800be34 <HAL_UART_Receive+0x2e>
 800be2e:	88fb      	ldrh	r3, [r7, #6]
 800be30:	2b00      	cmp	r3, #0
 800be32:	d101      	bne.n	800be38 <HAL_UART_Receive+0x32>
 800be34:	2301      	movs	r3, #1
 800be36:	e084      	b.n	800bf42 <HAL_UART_Receive+0x13c>
 800be38:	68fb      	ldr	r3, [r7, #12]
 800be3a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800be3e:	2b01      	cmp	r3, #1
 800be40:	d101      	bne.n	800be46 <HAL_UART_Receive+0x40>
 800be42:	2302      	movs	r3, #2
 800be44:	e07d      	b.n	800bf42 <HAL_UART_Receive+0x13c>
 800be46:	68fb      	ldr	r3, [r7, #12]
 800be48:	2201      	movs	r2, #1
 800be4a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800be4e:	68fb      	ldr	r3, [r7, #12]
 800be50:	2200      	movs	r2, #0
 800be52:	641a      	str	r2, [r3, #64]	; 0x40
 800be54:	68fb      	ldr	r3, [r7, #12]
 800be56:	2222      	movs	r2, #34	; 0x22
 800be58:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800be5c:	68fb      	ldr	r3, [r7, #12]
 800be5e:	2200      	movs	r2, #0
 800be60:	631a      	str	r2, [r3, #48]	; 0x30
 800be62:	f7fb fb45 	bl	80074f0 <HAL_GetTick>
 800be66:	6178      	str	r0, [r7, #20]
 800be68:	68fb      	ldr	r3, [r7, #12]
 800be6a:	88fa      	ldrh	r2, [r7, #6]
 800be6c:	859a      	strh	r2, [r3, #44]	; 0x2c
 800be6e:	68fb      	ldr	r3, [r7, #12]
 800be70:	88fa      	ldrh	r2, [r7, #6]
 800be72:	85da      	strh	r2, [r3, #46]	; 0x2e
 800be74:	68fb      	ldr	r3, [r7, #12]
 800be76:	689b      	ldr	r3, [r3, #8]
 800be78:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800be7c:	d108      	bne.n	800be90 <HAL_UART_Receive+0x8a>
 800be7e:	68fb      	ldr	r3, [r7, #12]
 800be80:	691b      	ldr	r3, [r3, #16]
 800be82:	2b00      	cmp	r3, #0
 800be84:	d104      	bne.n	800be90 <HAL_UART_Receive+0x8a>
 800be86:	2300      	movs	r3, #0
 800be88:	61fb      	str	r3, [r7, #28]
 800be8a:	68bb      	ldr	r3, [r7, #8]
 800be8c:	61bb      	str	r3, [r7, #24]
 800be8e:	e003      	b.n	800be98 <HAL_UART_Receive+0x92>
 800be90:	68bb      	ldr	r3, [r7, #8]
 800be92:	61fb      	str	r3, [r7, #28]
 800be94:	2300      	movs	r3, #0
 800be96:	61bb      	str	r3, [r7, #24]
 800be98:	68fb      	ldr	r3, [r7, #12]
 800be9a:	2200      	movs	r2, #0
 800be9c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bea0:	e043      	b.n	800bf2a <HAL_UART_Receive+0x124>
 800bea2:	683b      	ldr	r3, [r7, #0]
 800bea4:	9300      	str	r3, [sp, #0]
 800bea6:	697b      	ldr	r3, [r7, #20]
 800bea8:	2200      	movs	r2, #0
 800beaa:	2120      	movs	r1, #32
 800beac:	68f8      	ldr	r0, [r7, #12]
 800beae:	f000 fb2b 	bl	800c508 <UART_WaitOnFlagUntilTimeout>
 800beb2:	4603      	mov	r3, r0
 800beb4:	2b00      	cmp	r3, #0
 800beb6:	d001      	beq.n	800bebc <HAL_UART_Receive+0xb6>
 800beb8:	2303      	movs	r3, #3
 800beba:	e042      	b.n	800bf42 <HAL_UART_Receive+0x13c>
 800bebc:	69fb      	ldr	r3, [r7, #28]
 800bebe:	2b00      	cmp	r3, #0
 800bec0:	d10c      	bne.n	800bedc <HAL_UART_Receive+0xd6>
 800bec2:	68fb      	ldr	r3, [r7, #12]
 800bec4:	681b      	ldr	r3, [r3, #0]
 800bec6:	685b      	ldr	r3, [r3, #4]
 800bec8:	b29b      	uxth	r3, r3
 800beca:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800bece:	b29a      	uxth	r2, r3
 800bed0:	69bb      	ldr	r3, [r7, #24]
 800bed2:	801a      	strh	r2, [r3, #0]
 800bed4:	69bb      	ldr	r3, [r7, #24]
 800bed6:	3302      	adds	r3, #2
 800bed8:	61bb      	str	r3, [r7, #24]
 800beda:	e01f      	b.n	800bf1c <HAL_UART_Receive+0x116>
 800bedc:	68fb      	ldr	r3, [r7, #12]
 800bede:	689b      	ldr	r3, [r3, #8]
 800bee0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800bee4:	d007      	beq.n	800bef6 <HAL_UART_Receive+0xf0>
 800bee6:	68fb      	ldr	r3, [r7, #12]
 800bee8:	689b      	ldr	r3, [r3, #8]
 800beea:	2b00      	cmp	r3, #0
 800beec:	d10a      	bne.n	800bf04 <HAL_UART_Receive+0xfe>
 800beee:	68fb      	ldr	r3, [r7, #12]
 800bef0:	691b      	ldr	r3, [r3, #16]
 800bef2:	2b00      	cmp	r3, #0
 800bef4:	d106      	bne.n	800bf04 <HAL_UART_Receive+0xfe>
 800bef6:	68fb      	ldr	r3, [r7, #12]
 800bef8:	681b      	ldr	r3, [r3, #0]
 800befa:	685b      	ldr	r3, [r3, #4]
 800befc:	b2da      	uxtb	r2, r3
 800befe:	69fb      	ldr	r3, [r7, #28]
 800bf00:	701a      	strb	r2, [r3, #0]
 800bf02:	e008      	b.n	800bf16 <HAL_UART_Receive+0x110>
 800bf04:	68fb      	ldr	r3, [r7, #12]
 800bf06:	681b      	ldr	r3, [r3, #0]
 800bf08:	685b      	ldr	r3, [r3, #4]
 800bf0a:	b2db      	uxtb	r3, r3
 800bf0c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800bf10:	b2da      	uxtb	r2, r3
 800bf12:	69fb      	ldr	r3, [r7, #28]
 800bf14:	701a      	strb	r2, [r3, #0]
 800bf16:	69fb      	ldr	r3, [r7, #28]
 800bf18:	3301      	adds	r3, #1
 800bf1a:	61fb      	str	r3, [r7, #28]
 800bf1c:	68fb      	ldr	r3, [r7, #12]
 800bf1e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800bf20:	b29b      	uxth	r3, r3
 800bf22:	3b01      	subs	r3, #1
 800bf24:	b29a      	uxth	r2, r3
 800bf26:	68fb      	ldr	r3, [r7, #12]
 800bf28:	85da      	strh	r2, [r3, #46]	; 0x2e
 800bf2a:	68fb      	ldr	r3, [r7, #12]
 800bf2c:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800bf2e:	b29b      	uxth	r3, r3
 800bf30:	2b00      	cmp	r3, #0
 800bf32:	d1b6      	bne.n	800bea2 <HAL_UART_Receive+0x9c>
 800bf34:	68fb      	ldr	r3, [r7, #12]
 800bf36:	2220      	movs	r2, #32
 800bf38:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800bf3c:	2300      	movs	r3, #0
 800bf3e:	e000      	b.n	800bf42 <HAL_UART_Receive+0x13c>
 800bf40:	2302      	movs	r3, #2
 800bf42:	4618      	mov	r0, r3
 800bf44:	3720      	adds	r7, #32
 800bf46:	46bd      	mov	sp, r7
 800bf48:	bd80      	pop	{r7, pc}

0800bf4a <HAL_UART_Receive_IT>:
 800bf4a:	b580      	push	{r7, lr}
 800bf4c:	b084      	sub	sp, #16
 800bf4e:	af00      	add	r7, sp, #0
 800bf50:	60f8      	str	r0, [r7, #12]
 800bf52:	60b9      	str	r1, [r7, #8]
 800bf54:	4613      	mov	r3, r2
 800bf56:	80fb      	strh	r3, [r7, #6]
 800bf58:	68fb      	ldr	r3, [r7, #12]
 800bf5a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800bf5e:	b2db      	uxtb	r3, r3
 800bf60:	2b20      	cmp	r3, #32
 800bf62:	d11d      	bne.n	800bfa0 <HAL_UART_Receive_IT+0x56>
 800bf64:	68bb      	ldr	r3, [r7, #8]
 800bf66:	2b00      	cmp	r3, #0
 800bf68:	d002      	beq.n	800bf70 <HAL_UART_Receive_IT+0x26>
 800bf6a:	88fb      	ldrh	r3, [r7, #6]
 800bf6c:	2b00      	cmp	r3, #0
 800bf6e:	d101      	bne.n	800bf74 <HAL_UART_Receive_IT+0x2a>
 800bf70:	2301      	movs	r3, #1
 800bf72:	e016      	b.n	800bfa2 <HAL_UART_Receive_IT+0x58>
 800bf74:	68fb      	ldr	r3, [r7, #12]
 800bf76:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800bf7a:	2b01      	cmp	r3, #1
 800bf7c:	d101      	bne.n	800bf82 <HAL_UART_Receive_IT+0x38>
 800bf7e:	2302      	movs	r3, #2
 800bf80:	e00f      	b.n	800bfa2 <HAL_UART_Receive_IT+0x58>
 800bf82:	68fb      	ldr	r3, [r7, #12]
 800bf84:	2201      	movs	r2, #1
 800bf86:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bf8a:	68fb      	ldr	r3, [r7, #12]
 800bf8c:	2200      	movs	r2, #0
 800bf8e:	631a      	str	r2, [r3, #48]	; 0x30
 800bf90:	88fb      	ldrh	r3, [r7, #6]
 800bf92:	461a      	mov	r2, r3
 800bf94:	68b9      	ldr	r1, [r7, #8]
 800bf96:	68f8      	ldr	r0, [r7, #12]
 800bf98:	f000 fb24 	bl	800c5e4 <UART_Start_Receive_IT>
 800bf9c:	4603      	mov	r3, r0
 800bf9e:	e000      	b.n	800bfa2 <HAL_UART_Receive_IT+0x58>
 800bfa0:	2302      	movs	r3, #2
 800bfa2:	4618      	mov	r0, r3
 800bfa4:	3710      	adds	r7, #16
 800bfa6:	46bd      	mov	sp, r7
 800bfa8:	bd80      	pop	{r7, pc}
	...

0800bfac <HAL_UART_IRQHandler>:
 800bfac:	b580      	push	{r7, lr}
 800bfae:	b0ba      	sub	sp, #232	; 0xe8
 800bfb0:	af00      	add	r7, sp, #0
 800bfb2:	6078      	str	r0, [r7, #4]
 800bfb4:	687b      	ldr	r3, [r7, #4]
 800bfb6:	681b      	ldr	r3, [r3, #0]
 800bfb8:	681b      	ldr	r3, [r3, #0]
 800bfba:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800bfbe:	687b      	ldr	r3, [r7, #4]
 800bfc0:	681b      	ldr	r3, [r3, #0]
 800bfc2:	68db      	ldr	r3, [r3, #12]
 800bfc4:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800bfc8:	687b      	ldr	r3, [r7, #4]
 800bfca:	681b      	ldr	r3, [r3, #0]
 800bfcc:	695b      	ldr	r3, [r3, #20]
 800bfce:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800bfd2:	2300      	movs	r3, #0
 800bfd4:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800bfd8:	2300      	movs	r3, #0
 800bfda:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800bfde:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800bfe2:	f003 030f 	and.w	r3, r3, #15
 800bfe6:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800bfea:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800bfee:	2b00      	cmp	r3, #0
 800bff0:	d10f      	bne.n	800c012 <HAL_UART_IRQHandler+0x66>
 800bff2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800bff6:	f003 0320 	and.w	r3, r3, #32
 800bffa:	2b00      	cmp	r3, #0
 800bffc:	d009      	beq.n	800c012 <HAL_UART_IRQHandler+0x66>
 800bffe:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c002:	f003 0320 	and.w	r3, r3, #32
 800c006:	2b00      	cmp	r3, #0
 800c008:	d003      	beq.n	800c012 <HAL_UART_IRQHandler+0x66>
 800c00a:	6878      	ldr	r0, [r7, #4]
 800c00c:	f000 fc07 	bl	800c81e <UART_Receive_IT>
 800c010:	e256      	b.n	800c4c0 <HAL_UART_IRQHandler+0x514>
 800c012:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800c016:	2b00      	cmp	r3, #0
 800c018:	f000 80de 	beq.w	800c1d8 <HAL_UART_IRQHandler+0x22c>
 800c01c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c020:	f003 0301 	and.w	r3, r3, #1
 800c024:	2b00      	cmp	r3, #0
 800c026:	d106      	bne.n	800c036 <HAL_UART_IRQHandler+0x8a>
 800c028:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c02c:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800c030:	2b00      	cmp	r3, #0
 800c032:	f000 80d1 	beq.w	800c1d8 <HAL_UART_IRQHandler+0x22c>
 800c036:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c03a:	f003 0301 	and.w	r3, r3, #1
 800c03e:	2b00      	cmp	r3, #0
 800c040:	d00b      	beq.n	800c05a <HAL_UART_IRQHandler+0xae>
 800c042:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c046:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c04a:	2b00      	cmp	r3, #0
 800c04c:	d005      	beq.n	800c05a <HAL_UART_IRQHandler+0xae>
 800c04e:	687b      	ldr	r3, [r7, #4]
 800c050:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c052:	f043 0201 	orr.w	r2, r3, #1
 800c056:	687b      	ldr	r3, [r7, #4]
 800c058:	641a      	str	r2, [r3, #64]	; 0x40
 800c05a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c05e:	f003 0304 	and.w	r3, r3, #4
 800c062:	2b00      	cmp	r3, #0
 800c064:	d00b      	beq.n	800c07e <HAL_UART_IRQHandler+0xd2>
 800c066:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c06a:	f003 0301 	and.w	r3, r3, #1
 800c06e:	2b00      	cmp	r3, #0
 800c070:	d005      	beq.n	800c07e <HAL_UART_IRQHandler+0xd2>
 800c072:	687b      	ldr	r3, [r7, #4]
 800c074:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c076:	f043 0202 	orr.w	r2, r3, #2
 800c07a:	687b      	ldr	r3, [r7, #4]
 800c07c:	641a      	str	r2, [r3, #64]	; 0x40
 800c07e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c082:	f003 0302 	and.w	r3, r3, #2
 800c086:	2b00      	cmp	r3, #0
 800c088:	d00b      	beq.n	800c0a2 <HAL_UART_IRQHandler+0xf6>
 800c08a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c08e:	f003 0301 	and.w	r3, r3, #1
 800c092:	2b00      	cmp	r3, #0
 800c094:	d005      	beq.n	800c0a2 <HAL_UART_IRQHandler+0xf6>
 800c096:	687b      	ldr	r3, [r7, #4]
 800c098:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c09a:	f043 0204 	orr.w	r2, r3, #4
 800c09e:	687b      	ldr	r3, [r7, #4]
 800c0a0:	641a      	str	r2, [r3, #64]	; 0x40
 800c0a2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c0a6:	f003 0308 	and.w	r3, r3, #8
 800c0aa:	2b00      	cmp	r3, #0
 800c0ac:	d011      	beq.n	800c0d2 <HAL_UART_IRQHandler+0x126>
 800c0ae:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c0b2:	f003 0320 	and.w	r3, r3, #32
 800c0b6:	2b00      	cmp	r3, #0
 800c0b8:	d105      	bne.n	800c0c6 <HAL_UART_IRQHandler+0x11a>
 800c0ba:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c0be:	f003 0301 	and.w	r3, r3, #1
 800c0c2:	2b00      	cmp	r3, #0
 800c0c4:	d005      	beq.n	800c0d2 <HAL_UART_IRQHandler+0x126>
 800c0c6:	687b      	ldr	r3, [r7, #4]
 800c0c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c0ca:	f043 0208 	orr.w	r2, r3, #8
 800c0ce:	687b      	ldr	r3, [r7, #4]
 800c0d0:	641a      	str	r2, [r3, #64]	; 0x40
 800c0d2:	687b      	ldr	r3, [r7, #4]
 800c0d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c0d6:	2b00      	cmp	r3, #0
 800c0d8:	f000 81ed 	beq.w	800c4b6 <HAL_UART_IRQHandler+0x50a>
 800c0dc:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c0e0:	f003 0320 	and.w	r3, r3, #32
 800c0e4:	2b00      	cmp	r3, #0
 800c0e6:	d008      	beq.n	800c0fa <HAL_UART_IRQHandler+0x14e>
 800c0e8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c0ec:	f003 0320 	and.w	r3, r3, #32
 800c0f0:	2b00      	cmp	r3, #0
 800c0f2:	d002      	beq.n	800c0fa <HAL_UART_IRQHandler+0x14e>
 800c0f4:	6878      	ldr	r0, [r7, #4]
 800c0f6:	f000 fb92 	bl	800c81e <UART_Receive_IT>
 800c0fa:	687b      	ldr	r3, [r7, #4]
 800c0fc:	681b      	ldr	r3, [r3, #0]
 800c0fe:	695b      	ldr	r3, [r3, #20]
 800c100:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c104:	2b40      	cmp	r3, #64	; 0x40
 800c106:	bf0c      	ite	eq
 800c108:	2301      	moveq	r3, #1
 800c10a:	2300      	movne	r3, #0
 800c10c:	b2db      	uxtb	r3, r3
 800c10e:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800c112:	687b      	ldr	r3, [r7, #4]
 800c114:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c116:	f003 0308 	and.w	r3, r3, #8
 800c11a:	2b00      	cmp	r3, #0
 800c11c:	d103      	bne.n	800c126 <HAL_UART_IRQHandler+0x17a>
 800c11e:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c122:	2b00      	cmp	r3, #0
 800c124:	d04f      	beq.n	800c1c6 <HAL_UART_IRQHandler+0x21a>
 800c126:	6878      	ldr	r0, [r7, #4]
 800c128:	f000 fa9a 	bl	800c660 <UART_EndRxTransfer>
 800c12c:	687b      	ldr	r3, [r7, #4]
 800c12e:	681b      	ldr	r3, [r3, #0]
 800c130:	695b      	ldr	r3, [r3, #20]
 800c132:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c136:	2b40      	cmp	r3, #64	; 0x40
 800c138:	d141      	bne.n	800c1be <HAL_UART_IRQHandler+0x212>
 800c13a:	687b      	ldr	r3, [r7, #4]
 800c13c:	681b      	ldr	r3, [r3, #0]
 800c13e:	3314      	adds	r3, #20
 800c140:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800c144:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800c148:	e853 3f00 	ldrex	r3, [r3]
 800c14c:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800c150:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800c154:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c158:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800c15c:	687b      	ldr	r3, [r7, #4]
 800c15e:	681b      	ldr	r3, [r3, #0]
 800c160:	3314      	adds	r3, #20
 800c162:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 800c166:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800c16a:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800c16e:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 800c172:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 800c176:	e841 2300 	strex	r3, r2, [r1]
 800c17a:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800c17e:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800c182:	2b00      	cmp	r3, #0
 800c184:	d1d9      	bne.n	800c13a <HAL_UART_IRQHandler+0x18e>
 800c186:	687b      	ldr	r3, [r7, #4]
 800c188:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c18a:	2b00      	cmp	r3, #0
 800c18c:	d013      	beq.n	800c1b6 <HAL_UART_IRQHandler+0x20a>
 800c18e:	687b      	ldr	r3, [r7, #4]
 800c190:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c192:	4a7d      	ldr	r2, [pc, #500]	; (800c388 <HAL_UART_IRQHandler+0x3dc>)
 800c194:	651a      	str	r2, [r3, #80]	; 0x50
 800c196:	687b      	ldr	r3, [r7, #4]
 800c198:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c19a:	4618      	mov	r0, r3
 800c19c:	f7fc fa08 	bl	80085b0 <HAL_DMA_Abort_IT>
 800c1a0:	4603      	mov	r3, r0
 800c1a2:	2b00      	cmp	r3, #0
 800c1a4:	d016      	beq.n	800c1d4 <HAL_UART_IRQHandler+0x228>
 800c1a6:	687b      	ldr	r3, [r7, #4]
 800c1a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c1aa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c1ac:	687a      	ldr	r2, [r7, #4]
 800c1ae:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800c1b0:	4610      	mov	r0, r2
 800c1b2:	4798      	blx	r3
 800c1b4:	e00e      	b.n	800c1d4 <HAL_UART_IRQHandler+0x228>
 800c1b6:	6878      	ldr	r0, [r7, #4]
 800c1b8:	f000 f990 	bl	800c4dc <HAL_UART_ErrorCallback>
 800c1bc:	e00a      	b.n	800c1d4 <HAL_UART_IRQHandler+0x228>
 800c1be:	6878      	ldr	r0, [r7, #4]
 800c1c0:	f000 f98c 	bl	800c4dc <HAL_UART_ErrorCallback>
 800c1c4:	e006      	b.n	800c1d4 <HAL_UART_IRQHandler+0x228>
 800c1c6:	6878      	ldr	r0, [r7, #4]
 800c1c8:	f000 f988 	bl	800c4dc <HAL_UART_ErrorCallback>
 800c1cc:	687b      	ldr	r3, [r7, #4]
 800c1ce:	2200      	movs	r2, #0
 800c1d0:	641a      	str	r2, [r3, #64]	; 0x40
 800c1d2:	e170      	b.n	800c4b6 <HAL_UART_IRQHandler+0x50a>
 800c1d4:	bf00      	nop
 800c1d6:	e16e      	b.n	800c4b6 <HAL_UART_IRQHandler+0x50a>
 800c1d8:	687b      	ldr	r3, [r7, #4]
 800c1da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c1dc:	2b01      	cmp	r3, #1
 800c1de:	f040 814a 	bne.w	800c476 <HAL_UART_IRQHandler+0x4ca>
 800c1e2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c1e6:	f003 0310 	and.w	r3, r3, #16
 800c1ea:	2b00      	cmp	r3, #0
 800c1ec:	f000 8143 	beq.w	800c476 <HAL_UART_IRQHandler+0x4ca>
 800c1f0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c1f4:	f003 0310 	and.w	r3, r3, #16
 800c1f8:	2b00      	cmp	r3, #0
 800c1fa:	f000 813c 	beq.w	800c476 <HAL_UART_IRQHandler+0x4ca>
 800c1fe:	2300      	movs	r3, #0
 800c200:	60bb      	str	r3, [r7, #8]
 800c202:	687b      	ldr	r3, [r7, #4]
 800c204:	681b      	ldr	r3, [r3, #0]
 800c206:	681b      	ldr	r3, [r3, #0]
 800c208:	60bb      	str	r3, [r7, #8]
 800c20a:	687b      	ldr	r3, [r7, #4]
 800c20c:	681b      	ldr	r3, [r3, #0]
 800c20e:	685b      	ldr	r3, [r3, #4]
 800c210:	60bb      	str	r3, [r7, #8]
 800c212:	68bb      	ldr	r3, [r7, #8]
 800c214:	687b      	ldr	r3, [r7, #4]
 800c216:	681b      	ldr	r3, [r3, #0]
 800c218:	695b      	ldr	r3, [r3, #20]
 800c21a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c21e:	2b40      	cmp	r3, #64	; 0x40
 800c220:	f040 80b4 	bne.w	800c38c <HAL_UART_IRQHandler+0x3e0>
 800c224:	687b      	ldr	r3, [r7, #4]
 800c226:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c228:	681b      	ldr	r3, [r3, #0]
 800c22a:	685b      	ldr	r3, [r3, #4]
 800c22c:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 800c230:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 800c234:	2b00      	cmp	r3, #0
 800c236:	f000 8140 	beq.w	800c4ba <HAL_UART_IRQHandler+0x50e>
 800c23a:	687b      	ldr	r3, [r7, #4]
 800c23c:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800c23e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800c242:	429a      	cmp	r2, r3
 800c244:	f080 8139 	bcs.w	800c4ba <HAL_UART_IRQHandler+0x50e>
 800c248:	687b      	ldr	r3, [r7, #4]
 800c24a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800c24e:	85da      	strh	r2, [r3, #46]	; 0x2e
 800c250:	687b      	ldr	r3, [r7, #4]
 800c252:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c254:	69db      	ldr	r3, [r3, #28]
 800c256:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800c25a:	f000 8088 	beq.w	800c36e <HAL_UART_IRQHandler+0x3c2>
 800c25e:	687b      	ldr	r3, [r7, #4]
 800c260:	681b      	ldr	r3, [r3, #0]
 800c262:	330c      	adds	r3, #12
 800c264:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800c268:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800c26c:	e853 3f00 	ldrex	r3, [r3]
 800c270:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800c274:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800c278:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800c27c:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800c280:	687b      	ldr	r3, [r7, #4]
 800c282:	681b      	ldr	r3, [r3, #0]
 800c284:	330c      	adds	r3, #12
 800c286:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 800c28a:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800c28e:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800c292:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800c296:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800c29a:	e841 2300 	strex	r3, r2, [r1]
 800c29e:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800c2a2:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800c2a6:	2b00      	cmp	r3, #0
 800c2a8:	d1d9      	bne.n	800c25e <HAL_UART_IRQHandler+0x2b2>
 800c2aa:	687b      	ldr	r3, [r7, #4]
 800c2ac:	681b      	ldr	r3, [r3, #0]
 800c2ae:	3314      	adds	r3, #20
 800c2b0:	677b      	str	r3, [r7, #116]	; 0x74
 800c2b2:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800c2b4:	e853 3f00 	ldrex	r3, [r3]
 800c2b8:	673b      	str	r3, [r7, #112]	; 0x70
 800c2ba:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800c2bc:	f023 0301 	bic.w	r3, r3, #1
 800c2c0:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800c2c4:	687b      	ldr	r3, [r7, #4]
 800c2c6:	681b      	ldr	r3, [r3, #0]
 800c2c8:	3314      	adds	r3, #20
 800c2ca:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800c2ce:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 800c2d2:	67fb      	str	r3, [r7, #124]	; 0x7c
 800c2d4:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800c2d6:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800c2da:	e841 2300 	strex	r3, r2, [r1]
 800c2de:	67bb      	str	r3, [r7, #120]	; 0x78
 800c2e0:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800c2e2:	2b00      	cmp	r3, #0
 800c2e4:	d1e1      	bne.n	800c2aa <HAL_UART_IRQHandler+0x2fe>
 800c2e6:	687b      	ldr	r3, [r7, #4]
 800c2e8:	681b      	ldr	r3, [r3, #0]
 800c2ea:	3314      	adds	r3, #20
 800c2ec:	663b      	str	r3, [r7, #96]	; 0x60
 800c2ee:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800c2f0:	e853 3f00 	ldrex	r3, [r3]
 800c2f4:	65fb      	str	r3, [r7, #92]	; 0x5c
 800c2f6:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800c2f8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c2fc:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800c300:	687b      	ldr	r3, [r7, #4]
 800c302:	681b      	ldr	r3, [r3, #0]
 800c304:	3314      	adds	r3, #20
 800c306:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800c30a:	66fa      	str	r2, [r7, #108]	; 0x6c
 800c30c:	66bb      	str	r3, [r7, #104]	; 0x68
 800c30e:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800c310:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800c312:	e841 2300 	strex	r3, r2, [r1]
 800c316:	667b      	str	r3, [r7, #100]	; 0x64
 800c318:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800c31a:	2b00      	cmp	r3, #0
 800c31c:	d1e3      	bne.n	800c2e6 <HAL_UART_IRQHandler+0x33a>
 800c31e:	687b      	ldr	r3, [r7, #4]
 800c320:	2220      	movs	r2, #32
 800c322:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c326:	687b      	ldr	r3, [r7, #4]
 800c328:	2200      	movs	r2, #0
 800c32a:	631a      	str	r2, [r3, #48]	; 0x30
 800c32c:	687b      	ldr	r3, [r7, #4]
 800c32e:	681b      	ldr	r3, [r3, #0]
 800c330:	330c      	adds	r3, #12
 800c332:	64fb      	str	r3, [r7, #76]	; 0x4c
 800c334:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800c336:	e853 3f00 	ldrex	r3, [r3]
 800c33a:	64bb      	str	r3, [r7, #72]	; 0x48
 800c33c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800c33e:	f023 0310 	bic.w	r3, r3, #16
 800c342:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800c346:	687b      	ldr	r3, [r7, #4]
 800c348:	681b      	ldr	r3, [r3, #0]
 800c34a:	330c      	adds	r3, #12
 800c34c:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 800c350:	65ba      	str	r2, [r7, #88]	; 0x58
 800c352:	657b      	str	r3, [r7, #84]	; 0x54
 800c354:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800c356:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800c358:	e841 2300 	strex	r3, r2, [r1]
 800c35c:	653b      	str	r3, [r7, #80]	; 0x50
 800c35e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c360:	2b00      	cmp	r3, #0
 800c362:	d1e3      	bne.n	800c32c <HAL_UART_IRQHandler+0x380>
 800c364:	687b      	ldr	r3, [r7, #4]
 800c366:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c368:	4618      	mov	r0, r3
 800c36a:	f7fc f8b1 	bl	80084d0 <HAL_DMA_Abort>
 800c36e:	687b      	ldr	r3, [r7, #4]
 800c370:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800c372:	687b      	ldr	r3, [r7, #4]
 800c374:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c376:	b29b      	uxth	r3, r3
 800c378:	1ad3      	subs	r3, r2, r3
 800c37a:	b29b      	uxth	r3, r3
 800c37c:	4619      	mov	r1, r3
 800c37e:	6878      	ldr	r0, [r7, #4]
 800c380:	f000 f8b6 	bl	800c4f0 <HAL_UARTEx_RxEventCallback>
 800c384:	e099      	b.n	800c4ba <HAL_UART_IRQHandler+0x50e>
 800c386:	bf00      	nop
 800c388:	0800c727 	.word	0x0800c727
 800c38c:	687b      	ldr	r3, [r7, #4]
 800c38e:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800c390:	687b      	ldr	r3, [r7, #4]
 800c392:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c394:	b29b      	uxth	r3, r3
 800c396:	1ad3      	subs	r3, r2, r3
 800c398:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 800c39c:	687b      	ldr	r3, [r7, #4]
 800c39e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c3a0:	b29b      	uxth	r3, r3
 800c3a2:	2b00      	cmp	r3, #0
 800c3a4:	f000 808b 	beq.w	800c4be <HAL_UART_IRQHandler+0x512>
 800c3a8:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800c3ac:	2b00      	cmp	r3, #0
 800c3ae:	f000 8086 	beq.w	800c4be <HAL_UART_IRQHandler+0x512>
 800c3b2:	687b      	ldr	r3, [r7, #4]
 800c3b4:	681b      	ldr	r3, [r3, #0]
 800c3b6:	330c      	adds	r3, #12
 800c3b8:	63bb      	str	r3, [r7, #56]	; 0x38
 800c3ba:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c3bc:	e853 3f00 	ldrex	r3, [r3]
 800c3c0:	637b      	str	r3, [r7, #52]	; 0x34
 800c3c2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c3c4:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800c3c8:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800c3cc:	687b      	ldr	r3, [r7, #4]
 800c3ce:	681b      	ldr	r3, [r3, #0]
 800c3d0:	330c      	adds	r3, #12
 800c3d2:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 800c3d6:	647a      	str	r2, [r7, #68]	; 0x44
 800c3d8:	643b      	str	r3, [r7, #64]	; 0x40
 800c3da:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800c3dc:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800c3de:	e841 2300 	strex	r3, r2, [r1]
 800c3e2:	63fb      	str	r3, [r7, #60]	; 0x3c
 800c3e4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800c3e6:	2b00      	cmp	r3, #0
 800c3e8:	d1e3      	bne.n	800c3b2 <HAL_UART_IRQHandler+0x406>
 800c3ea:	687b      	ldr	r3, [r7, #4]
 800c3ec:	681b      	ldr	r3, [r3, #0]
 800c3ee:	3314      	adds	r3, #20
 800c3f0:	627b      	str	r3, [r7, #36]	; 0x24
 800c3f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c3f4:	e853 3f00 	ldrex	r3, [r3]
 800c3f8:	623b      	str	r3, [r7, #32]
 800c3fa:	6a3b      	ldr	r3, [r7, #32]
 800c3fc:	f023 0301 	bic.w	r3, r3, #1
 800c400:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800c404:	687b      	ldr	r3, [r7, #4]
 800c406:	681b      	ldr	r3, [r3, #0]
 800c408:	3314      	adds	r3, #20
 800c40a:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800c40e:	633a      	str	r2, [r7, #48]	; 0x30
 800c410:	62fb      	str	r3, [r7, #44]	; 0x2c
 800c412:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800c414:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800c416:	e841 2300 	strex	r3, r2, [r1]
 800c41a:	62bb      	str	r3, [r7, #40]	; 0x28
 800c41c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c41e:	2b00      	cmp	r3, #0
 800c420:	d1e3      	bne.n	800c3ea <HAL_UART_IRQHandler+0x43e>
 800c422:	687b      	ldr	r3, [r7, #4]
 800c424:	2220      	movs	r2, #32
 800c426:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c42a:	687b      	ldr	r3, [r7, #4]
 800c42c:	2200      	movs	r2, #0
 800c42e:	631a      	str	r2, [r3, #48]	; 0x30
 800c430:	687b      	ldr	r3, [r7, #4]
 800c432:	681b      	ldr	r3, [r3, #0]
 800c434:	330c      	adds	r3, #12
 800c436:	613b      	str	r3, [r7, #16]
 800c438:	693b      	ldr	r3, [r7, #16]
 800c43a:	e853 3f00 	ldrex	r3, [r3]
 800c43e:	60fb      	str	r3, [r7, #12]
 800c440:	68fb      	ldr	r3, [r7, #12]
 800c442:	f023 0310 	bic.w	r3, r3, #16
 800c446:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800c44a:	687b      	ldr	r3, [r7, #4]
 800c44c:	681b      	ldr	r3, [r3, #0]
 800c44e:	330c      	adds	r3, #12
 800c450:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 800c454:	61fa      	str	r2, [r7, #28]
 800c456:	61bb      	str	r3, [r7, #24]
 800c458:	69b9      	ldr	r1, [r7, #24]
 800c45a:	69fa      	ldr	r2, [r7, #28]
 800c45c:	e841 2300 	strex	r3, r2, [r1]
 800c460:	617b      	str	r3, [r7, #20]
 800c462:	697b      	ldr	r3, [r7, #20]
 800c464:	2b00      	cmp	r3, #0
 800c466:	d1e3      	bne.n	800c430 <HAL_UART_IRQHandler+0x484>
 800c468:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800c46c:	4619      	mov	r1, r3
 800c46e:	6878      	ldr	r0, [r7, #4]
 800c470:	f000 f83e 	bl	800c4f0 <HAL_UARTEx_RxEventCallback>
 800c474:	e023      	b.n	800c4be <HAL_UART_IRQHandler+0x512>
 800c476:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c47a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800c47e:	2b00      	cmp	r3, #0
 800c480:	d009      	beq.n	800c496 <HAL_UART_IRQHandler+0x4ea>
 800c482:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c486:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800c48a:	2b00      	cmp	r3, #0
 800c48c:	d003      	beq.n	800c496 <HAL_UART_IRQHandler+0x4ea>
 800c48e:	6878      	ldr	r0, [r7, #4]
 800c490:	f000 f95d 	bl	800c74e <UART_Transmit_IT>
 800c494:	e014      	b.n	800c4c0 <HAL_UART_IRQHandler+0x514>
 800c496:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c49a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c49e:	2b00      	cmp	r3, #0
 800c4a0:	d00e      	beq.n	800c4c0 <HAL_UART_IRQHandler+0x514>
 800c4a2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c4a6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c4aa:	2b00      	cmp	r3, #0
 800c4ac:	d008      	beq.n	800c4c0 <HAL_UART_IRQHandler+0x514>
 800c4ae:	6878      	ldr	r0, [r7, #4]
 800c4b0:	f000 f99d 	bl	800c7ee <UART_EndTransmit_IT>
 800c4b4:	e004      	b.n	800c4c0 <HAL_UART_IRQHandler+0x514>
 800c4b6:	bf00      	nop
 800c4b8:	e002      	b.n	800c4c0 <HAL_UART_IRQHandler+0x514>
 800c4ba:	bf00      	nop
 800c4bc:	e000      	b.n	800c4c0 <HAL_UART_IRQHandler+0x514>
 800c4be:	bf00      	nop
 800c4c0:	37e8      	adds	r7, #232	; 0xe8
 800c4c2:	46bd      	mov	sp, r7
 800c4c4:	bd80      	pop	{r7, pc}
 800c4c6:	bf00      	nop

0800c4c8 <HAL_UART_TxCpltCallback>:
 800c4c8:	b480      	push	{r7}
 800c4ca:	b083      	sub	sp, #12
 800c4cc:	af00      	add	r7, sp, #0
 800c4ce:	6078      	str	r0, [r7, #4]
 800c4d0:	bf00      	nop
 800c4d2:	370c      	adds	r7, #12
 800c4d4:	46bd      	mov	sp, r7
 800c4d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c4da:	4770      	bx	lr

0800c4dc <HAL_UART_ErrorCallback>:
 800c4dc:	b480      	push	{r7}
 800c4de:	b083      	sub	sp, #12
 800c4e0:	af00      	add	r7, sp, #0
 800c4e2:	6078      	str	r0, [r7, #4]
 800c4e4:	bf00      	nop
 800c4e6:	370c      	adds	r7, #12
 800c4e8:	46bd      	mov	sp, r7
 800c4ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c4ee:	4770      	bx	lr

0800c4f0 <HAL_UARTEx_RxEventCallback>:
 800c4f0:	b480      	push	{r7}
 800c4f2:	b083      	sub	sp, #12
 800c4f4:	af00      	add	r7, sp, #0
 800c4f6:	6078      	str	r0, [r7, #4]
 800c4f8:	460b      	mov	r3, r1
 800c4fa:	807b      	strh	r3, [r7, #2]
 800c4fc:	bf00      	nop
 800c4fe:	370c      	adds	r7, #12
 800c500:	46bd      	mov	sp, r7
 800c502:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c506:	4770      	bx	lr

0800c508 <UART_WaitOnFlagUntilTimeout>:
 800c508:	b580      	push	{r7, lr}
 800c50a:	b090      	sub	sp, #64	; 0x40
 800c50c:	af00      	add	r7, sp, #0
 800c50e:	60f8      	str	r0, [r7, #12]
 800c510:	60b9      	str	r1, [r7, #8]
 800c512:	603b      	str	r3, [r7, #0]
 800c514:	4613      	mov	r3, r2
 800c516:	71fb      	strb	r3, [r7, #7]
 800c518:	e050      	b.n	800c5bc <UART_WaitOnFlagUntilTimeout+0xb4>
 800c51a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800c51c:	f1b3 3fff 	cmp.w	r3, #4294967295
 800c520:	d04c      	beq.n	800c5bc <UART_WaitOnFlagUntilTimeout+0xb4>
 800c522:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800c524:	2b00      	cmp	r3, #0
 800c526:	d007      	beq.n	800c538 <UART_WaitOnFlagUntilTimeout+0x30>
 800c528:	f7fa ffe2 	bl	80074f0 <HAL_GetTick>
 800c52c:	4602      	mov	r2, r0
 800c52e:	683b      	ldr	r3, [r7, #0]
 800c530:	1ad3      	subs	r3, r2, r3
 800c532:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800c534:	429a      	cmp	r2, r3
 800c536:	d241      	bcs.n	800c5bc <UART_WaitOnFlagUntilTimeout+0xb4>
 800c538:	68fb      	ldr	r3, [r7, #12]
 800c53a:	681b      	ldr	r3, [r3, #0]
 800c53c:	330c      	adds	r3, #12
 800c53e:	62bb      	str	r3, [r7, #40]	; 0x28
 800c540:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c542:	e853 3f00 	ldrex	r3, [r3]
 800c546:	627b      	str	r3, [r7, #36]	; 0x24
 800c548:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c54a:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800c54e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800c550:	68fb      	ldr	r3, [r7, #12]
 800c552:	681b      	ldr	r3, [r3, #0]
 800c554:	330c      	adds	r3, #12
 800c556:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800c558:	637a      	str	r2, [r7, #52]	; 0x34
 800c55a:	633b      	str	r3, [r7, #48]	; 0x30
 800c55c:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800c55e:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800c560:	e841 2300 	strex	r3, r2, [r1]
 800c564:	62fb      	str	r3, [r7, #44]	; 0x2c
 800c566:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c568:	2b00      	cmp	r3, #0
 800c56a:	d1e5      	bne.n	800c538 <UART_WaitOnFlagUntilTimeout+0x30>
 800c56c:	68fb      	ldr	r3, [r7, #12]
 800c56e:	681b      	ldr	r3, [r3, #0]
 800c570:	3314      	adds	r3, #20
 800c572:	617b      	str	r3, [r7, #20]
 800c574:	697b      	ldr	r3, [r7, #20]
 800c576:	e853 3f00 	ldrex	r3, [r3]
 800c57a:	613b      	str	r3, [r7, #16]
 800c57c:	693b      	ldr	r3, [r7, #16]
 800c57e:	f023 0301 	bic.w	r3, r3, #1
 800c582:	63bb      	str	r3, [r7, #56]	; 0x38
 800c584:	68fb      	ldr	r3, [r7, #12]
 800c586:	681b      	ldr	r3, [r3, #0]
 800c588:	3314      	adds	r3, #20
 800c58a:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800c58c:	623a      	str	r2, [r7, #32]
 800c58e:	61fb      	str	r3, [r7, #28]
 800c590:	69f9      	ldr	r1, [r7, #28]
 800c592:	6a3a      	ldr	r2, [r7, #32]
 800c594:	e841 2300 	strex	r3, r2, [r1]
 800c598:	61bb      	str	r3, [r7, #24]
 800c59a:	69bb      	ldr	r3, [r7, #24]
 800c59c:	2b00      	cmp	r3, #0
 800c59e:	d1e5      	bne.n	800c56c <UART_WaitOnFlagUntilTimeout+0x64>
 800c5a0:	68fb      	ldr	r3, [r7, #12]
 800c5a2:	2220      	movs	r2, #32
 800c5a4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c5a8:	68fb      	ldr	r3, [r7, #12]
 800c5aa:	2220      	movs	r2, #32
 800c5ac:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c5b0:	68fb      	ldr	r3, [r7, #12]
 800c5b2:	2200      	movs	r2, #0
 800c5b4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c5b8:	2303      	movs	r3, #3
 800c5ba:	e00f      	b.n	800c5dc <UART_WaitOnFlagUntilTimeout+0xd4>
 800c5bc:	68fb      	ldr	r3, [r7, #12]
 800c5be:	681b      	ldr	r3, [r3, #0]
 800c5c0:	681a      	ldr	r2, [r3, #0]
 800c5c2:	68bb      	ldr	r3, [r7, #8]
 800c5c4:	4013      	ands	r3, r2
 800c5c6:	68ba      	ldr	r2, [r7, #8]
 800c5c8:	429a      	cmp	r2, r3
 800c5ca:	bf0c      	ite	eq
 800c5cc:	2301      	moveq	r3, #1
 800c5ce:	2300      	movne	r3, #0
 800c5d0:	b2db      	uxtb	r3, r3
 800c5d2:	461a      	mov	r2, r3
 800c5d4:	79fb      	ldrb	r3, [r7, #7]
 800c5d6:	429a      	cmp	r2, r3
 800c5d8:	d09f      	beq.n	800c51a <UART_WaitOnFlagUntilTimeout+0x12>
 800c5da:	2300      	movs	r3, #0
 800c5dc:	4618      	mov	r0, r3
 800c5de:	3740      	adds	r7, #64	; 0x40
 800c5e0:	46bd      	mov	sp, r7
 800c5e2:	bd80      	pop	{r7, pc}

0800c5e4 <UART_Start_Receive_IT>:
 800c5e4:	b480      	push	{r7}
 800c5e6:	b085      	sub	sp, #20
 800c5e8:	af00      	add	r7, sp, #0
 800c5ea:	60f8      	str	r0, [r7, #12]
 800c5ec:	60b9      	str	r1, [r7, #8]
 800c5ee:	4613      	mov	r3, r2
 800c5f0:	80fb      	strh	r3, [r7, #6]
 800c5f2:	68fb      	ldr	r3, [r7, #12]
 800c5f4:	68ba      	ldr	r2, [r7, #8]
 800c5f6:	629a      	str	r2, [r3, #40]	; 0x28
 800c5f8:	68fb      	ldr	r3, [r7, #12]
 800c5fa:	88fa      	ldrh	r2, [r7, #6]
 800c5fc:	859a      	strh	r2, [r3, #44]	; 0x2c
 800c5fe:	68fb      	ldr	r3, [r7, #12]
 800c600:	88fa      	ldrh	r2, [r7, #6]
 800c602:	85da      	strh	r2, [r3, #46]	; 0x2e
 800c604:	68fb      	ldr	r3, [r7, #12]
 800c606:	2200      	movs	r2, #0
 800c608:	641a      	str	r2, [r3, #64]	; 0x40
 800c60a:	68fb      	ldr	r3, [r7, #12]
 800c60c:	2222      	movs	r2, #34	; 0x22
 800c60e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c612:	68fb      	ldr	r3, [r7, #12]
 800c614:	2200      	movs	r2, #0
 800c616:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c61a:	68fb      	ldr	r3, [r7, #12]
 800c61c:	691b      	ldr	r3, [r3, #16]
 800c61e:	2b00      	cmp	r3, #0
 800c620:	d007      	beq.n	800c632 <UART_Start_Receive_IT+0x4e>
 800c622:	68fb      	ldr	r3, [r7, #12]
 800c624:	681b      	ldr	r3, [r3, #0]
 800c626:	68da      	ldr	r2, [r3, #12]
 800c628:	68fb      	ldr	r3, [r7, #12]
 800c62a:	681b      	ldr	r3, [r3, #0]
 800c62c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800c630:	60da      	str	r2, [r3, #12]
 800c632:	68fb      	ldr	r3, [r7, #12]
 800c634:	681b      	ldr	r3, [r3, #0]
 800c636:	695a      	ldr	r2, [r3, #20]
 800c638:	68fb      	ldr	r3, [r7, #12]
 800c63a:	681b      	ldr	r3, [r3, #0]
 800c63c:	f042 0201 	orr.w	r2, r2, #1
 800c640:	615a      	str	r2, [r3, #20]
 800c642:	68fb      	ldr	r3, [r7, #12]
 800c644:	681b      	ldr	r3, [r3, #0]
 800c646:	68da      	ldr	r2, [r3, #12]
 800c648:	68fb      	ldr	r3, [r7, #12]
 800c64a:	681b      	ldr	r3, [r3, #0]
 800c64c:	f042 0220 	orr.w	r2, r2, #32
 800c650:	60da      	str	r2, [r3, #12]
 800c652:	2300      	movs	r3, #0
 800c654:	4618      	mov	r0, r3
 800c656:	3714      	adds	r7, #20
 800c658:	46bd      	mov	sp, r7
 800c65a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c65e:	4770      	bx	lr

0800c660 <UART_EndRxTransfer>:
 800c660:	b480      	push	{r7}
 800c662:	b095      	sub	sp, #84	; 0x54
 800c664:	af00      	add	r7, sp, #0
 800c666:	6078      	str	r0, [r7, #4]
 800c668:	687b      	ldr	r3, [r7, #4]
 800c66a:	681b      	ldr	r3, [r3, #0]
 800c66c:	330c      	adds	r3, #12
 800c66e:	637b      	str	r3, [r7, #52]	; 0x34
 800c670:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c672:	e853 3f00 	ldrex	r3, [r3]
 800c676:	633b      	str	r3, [r7, #48]	; 0x30
 800c678:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800c67a:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800c67e:	64fb      	str	r3, [r7, #76]	; 0x4c
 800c680:	687b      	ldr	r3, [r7, #4]
 800c682:	681b      	ldr	r3, [r3, #0]
 800c684:	330c      	adds	r3, #12
 800c686:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800c688:	643a      	str	r2, [r7, #64]	; 0x40
 800c68a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800c68c:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800c68e:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800c690:	e841 2300 	strex	r3, r2, [r1]
 800c694:	63bb      	str	r3, [r7, #56]	; 0x38
 800c696:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c698:	2b00      	cmp	r3, #0
 800c69a:	d1e5      	bne.n	800c668 <UART_EndRxTransfer+0x8>
 800c69c:	687b      	ldr	r3, [r7, #4]
 800c69e:	681b      	ldr	r3, [r3, #0]
 800c6a0:	3314      	adds	r3, #20
 800c6a2:	623b      	str	r3, [r7, #32]
 800c6a4:	6a3b      	ldr	r3, [r7, #32]
 800c6a6:	e853 3f00 	ldrex	r3, [r3]
 800c6aa:	61fb      	str	r3, [r7, #28]
 800c6ac:	69fb      	ldr	r3, [r7, #28]
 800c6ae:	f023 0301 	bic.w	r3, r3, #1
 800c6b2:	64bb      	str	r3, [r7, #72]	; 0x48
 800c6b4:	687b      	ldr	r3, [r7, #4]
 800c6b6:	681b      	ldr	r3, [r3, #0]
 800c6b8:	3314      	adds	r3, #20
 800c6ba:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800c6bc:	62fa      	str	r2, [r7, #44]	; 0x2c
 800c6be:	62bb      	str	r3, [r7, #40]	; 0x28
 800c6c0:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800c6c2:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800c6c4:	e841 2300 	strex	r3, r2, [r1]
 800c6c8:	627b      	str	r3, [r7, #36]	; 0x24
 800c6ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c6cc:	2b00      	cmp	r3, #0
 800c6ce:	d1e5      	bne.n	800c69c <UART_EndRxTransfer+0x3c>
 800c6d0:	687b      	ldr	r3, [r7, #4]
 800c6d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c6d4:	2b01      	cmp	r3, #1
 800c6d6:	d119      	bne.n	800c70c <UART_EndRxTransfer+0xac>
 800c6d8:	687b      	ldr	r3, [r7, #4]
 800c6da:	681b      	ldr	r3, [r3, #0]
 800c6dc:	330c      	adds	r3, #12
 800c6de:	60fb      	str	r3, [r7, #12]
 800c6e0:	68fb      	ldr	r3, [r7, #12]
 800c6e2:	e853 3f00 	ldrex	r3, [r3]
 800c6e6:	60bb      	str	r3, [r7, #8]
 800c6e8:	68bb      	ldr	r3, [r7, #8]
 800c6ea:	f023 0310 	bic.w	r3, r3, #16
 800c6ee:	647b      	str	r3, [r7, #68]	; 0x44
 800c6f0:	687b      	ldr	r3, [r7, #4]
 800c6f2:	681b      	ldr	r3, [r3, #0]
 800c6f4:	330c      	adds	r3, #12
 800c6f6:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800c6f8:	61ba      	str	r2, [r7, #24]
 800c6fa:	617b      	str	r3, [r7, #20]
 800c6fc:	6979      	ldr	r1, [r7, #20]
 800c6fe:	69ba      	ldr	r2, [r7, #24]
 800c700:	e841 2300 	strex	r3, r2, [r1]
 800c704:	613b      	str	r3, [r7, #16]
 800c706:	693b      	ldr	r3, [r7, #16]
 800c708:	2b00      	cmp	r3, #0
 800c70a:	d1e5      	bne.n	800c6d8 <UART_EndRxTransfer+0x78>
 800c70c:	687b      	ldr	r3, [r7, #4]
 800c70e:	2220      	movs	r2, #32
 800c710:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c714:	687b      	ldr	r3, [r7, #4]
 800c716:	2200      	movs	r2, #0
 800c718:	631a      	str	r2, [r3, #48]	; 0x30
 800c71a:	bf00      	nop
 800c71c:	3754      	adds	r7, #84	; 0x54
 800c71e:	46bd      	mov	sp, r7
 800c720:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c724:	4770      	bx	lr

0800c726 <UART_DMAAbortOnError>:
 800c726:	b580      	push	{r7, lr}
 800c728:	b084      	sub	sp, #16
 800c72a:	af00      	add	r7, sp, #0
 800c72c:	6078      	str	r0, [r7, #4]
 800c72e:	687b      	ldr	r3, [r7, #4]
 800c730:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c732:	60fb      	str	r3, [r7, #12]
 800c734:	68fb      	ldr	r3, [r7, #12]
 800c736:	2200      	movs	r2, #0
 800c738:	85da      	strh	r2, [r3, #46]	; 0x2e
 800c73a:	68fb      	ldr	r3, [r7, #12]
 800c73c:	2200      	movs	r2, #0
 800c73e:	84da      	strh	r2, [r3, #38]	; 0x26
 800c740:	68f8      	ldr	r0, [r7, #12]
 800c742:	f7ff fecb 	bl	800c4dc <HAL_UART_ErrorCallback>
 800c746:	bf00      	nop
 800c748:	3710      	adds	r7, #16
 800c74a:	46bd      	mov	sp, r7
 800c74c:	bd80      	pop	{r7, pc}

0800c74e <UART_Transmit_IT>:
 800c74e:	b480      	push	{r7}
 800c750:	b085      	sub	sp, #20
 800c752:	af00      	add	r7, sp, #0
 800c754:	6078      	str	r0, [r7, #4]
 800c756:	687b      	ldr	r3, [r7, #4]
 800c758:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800c75c:	b2db      	uxtb	r3, r3
 800c75e:	2b21      	cmp	r3, #33	; 0x21
 800c760:	d13e      	bne.n	800c7e0 <UART_Transmit_IT+0x92>
 800c762:	687b      	ldr	r3, [r7, #4]
 800c764:	689b      	ldr	r3, [r3, #8]
 800c766:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c76a:	d114      	bne.n	800c796 <UART_Transmit_IT+0x48>
 800c76c:	687b      	ldr	r3, [r7, #4]
 800c76e:	691b      	ldr	r3, [r3, #16]
 800c770:	2b00      	cmp	r3, #0
 800c772:	d110      	bne.n	800c796 <UART_Transmit_IT+0x48>
 800c774:	687b      	ldr	r3, [r7, #4]
 800c776:	6a1b      	ldr	r3, [r3, #32]
 800c778:	60fb      	str	r3, [r7, #12]
 800c77a:	68fb      	ldr	r3, [r7, #12]
 800c77c:	881b      	ldrh	r3, [r3, #0]
 800c77e:	461a      	mov	r2, r3
 800c780:	687b      	ldr	r3, [r7, #4]
 800c782:	681b      	ldr	r3, [r3, #0]
 800c784:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800c788:	605a      	str	r2, [r3, #4]
 800c78a:	687b      	ldr	r3, [r7, #4]
 800c78c:	6a1b      	ldr	r3, [r3, #32]
 800c78e:	1c9a      	adds	r2, r3, #2
 800c790:	687b      	ldr	r3, [r7, #4]
 800c792:	621a      	str	r2, [r3, #32]
 800c794:	e008      	b.n	800c7a8 <UART_Transmit_IT+0x5a>
 800c796:	687b      	ldr	r3, [r7, #4]
 800c798:	6a1b      	ldr	r3, [r3, #32]
 800c79a:	1c59      	adds	r1, r3, #1
 800c79c:	687a      	ldr	r2, [r7, #4]
 800c79e:	6211      	str	r1, [r2, #32]
 800c7a0:	781a      	ldrb	r2, [r3, #0]
 800c7a2:	687b      	ldr	r3, [r7, #4]
 800c7a4:	681b      	ldr	r3, [r3, #0]
 800c7a6:	605a      	str	r2, [r3, #4]
 800c7a8:	687b      	ldr	r3, [r7, #4]
 800c7aa:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800c7ac:	b29b      	uxth	r3, r3
 800c7ae:	3b01      	subs	r3, #1
 800c7b0:	b29b      	uxth	r3, r3
 800c7b2:	687a      	ldr	r2, [r7, #4]
 800c7b4:	4619      	mov	r1, r3
 800c7b6:	84d1      	strh	r1, [r2, #38]	; 0x26
 800c7b8:	2b00      	cmp	r3, #0
 800c7ba:	d10f      	bne.n	800c7dc <UART_Transmit_IT+0x8e>
 800c7bc:	687b      	ldr	r3, [r7, #4]
 800c7be:	681b      	ldr	r3, [r3, #0]
 800c7c0:	68da      	ldr	r2, [r3, #12]
 800c7c2:	687b      	ldr	r3, [r7, #4]
 800c7c4:	681b      	ldr	r3, [r3, #0]
 800c7c6:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800c7ca:	60da      	str	r2, [r3, #12]
 800c7cc:	687b      	ldr	r3, [r7, #4]
 800c7ce:	681b      	ldr	r3, [r3, #0]
 800c7d0:	68da      	ldr	r2, [r3, #12]
 800c7d2:	687b      	ldr	r3, [r7, #4]
 800c7d4:	681b      	ldr	r3, [r3, #0]
 800c7d6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800c7da:	60da      	str	r2, [r3, #12]
 800c7dc:	2300      	movs	r3, #0
 800c7de:	e000      	b.n	800c7e2 <UART_Transmit_IT+0x94>
 800c7e0:	2302      	movs	r3, #2
 800c7e2:	4618      	mov	r0, r3
 800c7e4:	3714      	adds	r7, #20
 800c7e6:	46bd      	mov	sp, r7
 800c7e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7ec:	4770      	bx	lr

0800c7ee <UART_EndTransmit_IT>:
 800c7ee:	b580      	push	{r7, lr}
 800c7f0:	b082      	sub	sp, #8
 800c7f2:	af00      	add	r7, sp, #0
 800c7f4:	6078      	str	r0, [r7, #4]
 800c7f6:	687b      	ldr	r3, [r7, #4]
 800c7f8:	681b      	ldr	r3, [r3, #0]
 800c7fa:	68da      	ldr	r2, [r3, #12]
 800c7fc:	687b      	ldr	r3, [r7, #4]
 800c7fe:	681b      	ldr	r3, [r3, #0]
 800c800:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c804:	60da      	str	r2, [r3, #12]
 800c806:	687b      	ldr	r3, [r7, #4]
 800c808:	2220      	movs	r2, #32
 800c80a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c80e:	6878      	ldr	r0, [r7, #4]
 800c810:	f7ff fe5a 	bl	800c4c8 <HAL_UART_TxCpltCallback>
 800c814:	2300      	movs	r3, #0
 800c816:	4618      	mov	r0, r3
 800c818:	3708      	adds	r7, #8
 800c81a:	46bd      	mov	sp, r7
 800c81c:	bd80      	pop	{r7, pc}

0800c81e <UART_Receive_IT>:
 800c81e:	b580      	push	{r7, lr}
 800c820:	b08c      	sub	sp, #48	; 0x30
 800c822:	af00      	add	r7, sp, #0
 800c824:	6078      	str	r0, [r7, #4]
 800c826:	687b      	ldr	r3, [r7, #4]
 800c828:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800c82c:	b2db      	uxtb	r3, r3
 800c82e:	2b22      	cmp	r3, #34	; 0x22
 800c830:	f040 80ab 	bne.w	800c98a <UART_Receive_IT+0x16c>
 800c834:	687b      	ldr	r3, [r7, #4]
 800c836:	689b      	ldr	r3, [r3, #8]
 800c838:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c83c:	d117      	bne.n	800c86e <UART_Receive_IT+0x50>
 800c83e:	687b      	ldr	r3, [r7, #4]
 800c840:	691b      	ldr	r3, [r3, #16]
 800c842:	2b00      	cmp	r3, #0
 800c844:	d113      	bne.n	800c86e <UART_Receive_IT+0x50>
 800c846:	2300      	movs	r3, #0
 800c848:	62fb      	str	r3, [r7, #44]	; 0x2c
 800c84a:	687b      	ldr	r3, [r7, #4]
 800c84c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c84e:	62bb      	str	r3, [r7, #40]	; 0x28
 800c850:	687b      	ldr	r3, [r7, #4]
 800c852:	681b      	ldr	r3, [r3, #0]
 800c854:	685b      	ldr	r3, [r3, #4]
 800c856:	b29b      	uxth	r3, r3
 800c858:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800c85c:	b29a      	uxth	r2, r3
 800c85e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c860:	801a      	strh	r2, [r3, #0]
 800c862:	687b      	ldr	r3, [r7, #4]
 800c864:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c866:	1c9a      	adds	r2, r3, #2
 800c868:	687b      	ldr	r3, [r7, #4]
 800c86a:	629a      	str	r2, [r3, #40]	; 0x28
 800c86c:	e026      	b.n	800c8bc <UART_Receive_IT+0x9e>
 800c86e:	687b      	ldr	r3, [r7, #4]
 800c870:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c872:	62fb      	str	r3, [r7, #44]	; 0x2c
 800c874:	2300      	movs	r3, #0
 800c876:	62bb      	str	r3, [r7, #40]	; 0x28
 800c878:	687b      	ldr	r3, [r7, #4]
 800c87a:	689b      	ldr	r3, [r3, #8]
 800c87c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c880:	d007      	beq.n	800c892 <UART_Receive_IT+0x74>
 800c882:	687b      	ldr	r3, [r7, #4]
 800c884:	689b      	ldr	r3, [r3, #8]
 800c886:	2b00      	cmp	r3, #0
 800c888:	d10a      	bne.n	800c8a0 <UART_Receive_IT+0x82>
 800c88a:	687b      	ldr	r3, [r7, #4]
 800c88c:	691b      	ldr	r3, [r3, #16]
 800c88e:	2b00      	cmp	r3, #0
 800c890:	d106      	bne.n	800c8a0 <UART_Receive_IT+0x82>
 800c892:	687b      	ldr	r3, [r7, #4]
 800c894:	681b      	ldr	r3, [r3, #0]
 800c896:	685b      	ldr	r3, [r3, #4]
 800c898:	b2da      	uxtb	r2, r3
 800c89a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c89c:	701a      	strb	r2, [r3, #0]
 800c89e:	e008      	b.n	800c8b2 <UART_Receive_IT+0x94>
 800c8a0:	687b      	ldr	r3, [r7, #4]
 800c8a2:	681b      	ldr	r3, [r3, #0]
 800c8a4:	685b      	ldr	r3, [r3, #4]
 800c8a6:	b2db      	uxtb	r3, r3
 800c8a8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800c8ac:	b2da      	uxtb	r2, r3
 800c8ae:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c8b0:	701a      	strb	r2, [r3, #0]
 800c8b2:	687b      	ldr	r3, [r7, #4]
 800c8b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c8b6:	1c5a      	adds	r2, r3, #1
 800c8b8:	687b      	ldr	r3, [r7, #4]
 800c8ba:	629a      	str	r2, [r3, #40]	; 0x28
 800c8bc:	687b      	ldr	r3, [r7, #4]
 800c8be:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c8c0:	b29b      	uxth	r3, r3
 800c8c2:	3b01      	subs	r3, #1
 800c8c4:	b29b      	uxth	r3, r3
 800c8c6:	687a      	ldr	r2, [r7, #4]
 800c8c8:	4619      	mov	r1, r3
 800c8ca:	85d1      	strh	r1, [r2, #46]	; 0x2e
 800c8cc:	2b00      	cmp	r3, #0
 800c8ce:	d15a      	bne.n	800c986 <UART_Receive_IT+0x168>
 800c8d0:	687b      	ldr	r3, [r7, #4]
 800c8d2:	681b      	ldr	r3, [r3, #0]
 800c8d4:	68da      	ldr	r2, [r3, #12]
 800c8d6:	687b      	ldr	r3, [r7, #4]
 800c8d8:	681b      	ldr	r3, [r3, #0]
 800c8da:	f022 0220 	bic.w	r2, r2, #32
 800c8de:	60da      	str	r2, [r3, #12]
 800c8e0:	687b      	ldr	r3, [r7, #4]
 800c8e2:	681b      	ldr	r3, [r3, #0]
 800c8e4:	68da      	ldr	r2, [r3, #12]
 800c8e6:	687b      	ldr	r3, [r7, #4]
 800c8e8:	681b      	ldr	r3, [r3, #0]
 800c8ea:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800c8ee:	60da      	str	r2, [r3, #12]
 800c8f0:	687b      	ldr	r3, [r7, #4]
 800c8f2:	681b      	ldr	r3, [r3, #0]
 800c8f4:	695a      	ldr	r2, [r3, #20]
 800c8f6:	687b      	ldr	r3, [r7, #4]
 800c8f8:	681b      	ldr	r3, [r3, #0]
 800c8fa:	f022 0201 	bic.w	r2, r2, #1
 800c8fe:	615a      	str	r2, [r3, #20]
 800c900:	687b      	ldr	r3, [r7, #4]
 800c902:	2220      	movs	r2, #32
 800c904:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c908:	687b      	ldr	r3, [r7, #4]
 800c90a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c90c:	2b01      	cmp	r3, #1
 800c90e:	d135      	bne.n	800c97c <UART_Receive_IT+0x15e>
 800c910:	687b      	ldr	r3, [r7, #4]
 800c912:	2200      	movs	r2, #0
 800c914:	631a      	str	r2, [r3, #48]	; 0x30
 800c916:	687b      	ldr	r3, [r7, #4]
 800c918:	681b      	ldr	r3, [r3, #0]
 800c91a:	330c      	adds	r3, #12
 800c91c:	617b      	str	r3, [r7, #20]
 800c91e:	697b      	ldr	r3, [r7, #20]
 800c920:	e853 3f00 	ldrex	r3, [r3]
 800c924:	613b      	str	r3, [r7, #16]
 800c926:	693b      	ldr	r3, [r7, #16]
 800c928:	f023 0310 	bic.w	r3, r3, #16
 800c92c:	627b      	str	r3, [r7, #36]	; 0x24
 800c92e:	687b      	ldr	r3, [r7, #4]
 800c930:	681b      	ldr	r3, [r3, #0]
 800c932:	330c      	adds	r3, #12
 800c934:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800c936:	623a      	str	r2, [r7, #32]
 800c938:	61fb      	str	r3, [r7, #28]
 800c93a:	69f9      	ldr	r1, [r7, #28]
 800c93c:	6a3a      	ldr	r2, [r7, #32]
 800c93e:	e841 2300 	strex	r3, r2, [r1]
 800c942:	61bb      	str	r3, [r7, #24]
 800c944:	69bb      	ldr	r3, [r7, #24]
 800c946:	2b00      	cmp	r3, #0
 800c948:	d1e5      	bne.n	800c916 <UART_Receive_IT+0xf8>
 800c94a:	687b      	ldr	r3, [r7, #4]
 800c94c:	681b      	ldr	r3, [r3, #0]
 800c94e:	681b      	ldr	r3, [r3, #0]
 800c950:	f003 0310 	and.w	r3, r3, #16
 800c954:	2b10      	cmp	r3, #16
 800c956:	d10a      	bne.n	800c96e <UART_Receive_IT+0x150>
 800c958:	2300      	movs	r3, #0
 800c95a:	60fb      	str	r3, [r7, #12]
 800c95c:	687b      	ldr	r3, [r7, #4]
 800c95e:	681b      	ldr	r3, [r3, #0]
 800c960:	681b      	ldr	r3, [r3, #0]
 800c962:	60fb      	str	r3, [r7, #12]
 800c964:	687b      	ldr	r3, [r7, #4]
 800c966:	681b      	ldr	r3, [r3, #0]
 800c968:	685b      	ldr	r3, [r3, #4]
 800c96a:	60fb      	str	r3, [r7, #12]
 800c96c:	68fb      	ldr	r3, [r7, #12]
 800c96e:	687b      	ldr	r3, [r7, #4]
 800c970:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800c972:	4619      	mov	r1, r3
 800c974:	6878      	ldr	r0, [r7, #4]
 800c976:	f7ff fdbb 	bl	800c4f0 <HAL_UARTEx_RxEventCallback>
 800c97a:	e002      	b.n	800c982 <UART_Receive_IT+0x164>
 800c97c:	6878      	ldr	r0, [r7, #4]
 800c97e:	f7f9 ff53 	bl	8006828 <HAL_UART_RxCpltCallback>
 800c982:	2300      	movs	r3, #0
 800c984:	e002      	b.n	800c98c <UART_Receive_IT+0x16e>
 800c986:	2300      	movs	r3, #0
 800c988:	e000      	b.n	800c98c <UART_Receive_IT+0x16e>
 800c98a:	2302      	movs	r3, #2
 800c98c:	4618      	mov	r0, r3
 800c98e:	3730      	adds	r7, #48	; 0x30
 800c990:	46bd      	mov	sp, r7
 800c992:	bd80      	pop	{r7, pc}

0800c994 <UART_SetConfig>:
 800c994:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800c998:	b0c0      	sub	sp, #256	; 0x100
 800c99a:	af00      	add	r7, sp, #0
 800c99c:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 800c9a0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800c9a4:	681b      	ldr	r3, [r3, #0]
 800c9a6:	691b      	ldr	r3, [r3, #16]
 800c9a8:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 800c9ac:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800c9b0:	68d9      	ldr	r1, [r3, #12]
 800c9b2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800c9b6:	681a      	ldr	r2, [r3, #0]
 800c9b8:	ea40 0301 	orr.w	r3, r0, r1
 800c9bc:	6113      	str	r3, [r2, #16]
 800c9be:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800c9c2:	689a      	ldr	r2, [r3, #8]
 800c9c4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800c9c8:	691b      	ldr	r3, [r3, #16]
 800c9ca:	431a      	orrs	r2, r3
 800c9cc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800c9d0:	695b      	ldr	r3, [r3, #20]
 800c9d2:	431a      	orrs	r2, r3
 800c9d4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800c9d8:	69db      	ldr	r3, [r3, #28]
 800c9da:	4313      	orrs	r3, r2
 800c9dc:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 800c9e0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800c9e4:	681b      	ldr	r3, [r3, #0]
 800c9e6:	68db      	ldr	r3, [r3, #12]
 800c9e8:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 800c9ec:	f021 010c 	bic.w	r1, r1, #12
 800c9f0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800c9f4:	681a      	ldr	r2, [r3, #0]
 800c9f6:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 800c9fa:	430b      	orrs	r3, r1
 800c9fc:	60d3      	str	r3, [r2, #12]
 800c9fe:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ca02:	681b      	ldr	r3, [r3, #0]
 800ca04:	695b      	ldr	r3, [r3, #20]
 800ca06:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 800ca0a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ca0e:	6999      	ldr	r1, [r3, #24]
 800ca10:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ca14:	681a      	ldr	r2, [r3, #0]
 800ca16:	ea40 0301 	orr.w	r3, r0, r1
 800ca1a:	6153      	str	r3, [r2, #20]
 800ca1c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ca20:	681a      	ldr	r2, [r3, #0]
 800ca22:	4b8f      	ldr	r3, [pc, #572]	; (800cc60 <UART_SetConfig+0x2cc>)
 800ca24:	429a      	cmp	r2, r3
 800ca26:	d005      	beq.n	800ca34 <UART_SetConfig+0xa0>
 800ca28:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ca2c:	681a      	ldr	r2, [r3, #0]
 800ca2e:	4b8d      	ldr	r3, [pc, #564]	; (800cc64 <UART_SetConfig+0x2d0>)
 800ca30:	429a      	cmp	r2, r3
 800ca32:	d104      	bne.n	800ca3e <UART_SetConfig+0xaa>
 800ca34:	f7fc fda4 	bl	8009580 <HAL_RCC_GetPCLK2Freq>
 800ca38:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800ca3c:	e003      	b.n	800ca46 <UART_SetConfig+0xb2>
 800ca3e:	f7fc fd8b 	bl	8009558 <HAL_RCC_GetPCLK1Freq>
 800ca42:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800ca46:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ca4a:	69db      	ldr	r3, [r3, #28]
 800ca4c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800ca50:	f040 810c 	bne.w	800cc6c <UART_SetConfig+0x2d8>
 800ca54:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800ca58:	2200      	movs	r2, #0
 800ca5a:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800ca5e:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 800ca62:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 800ca66:	4622      	mov	r2, r4
 800ca68:	462b      	mov	r3, r5
 800ca6a:	1891      	adds	r1, r2, r2
 800ca6c:	65b9      	str	r1, [r7, #88]	; 0x58
 800ca6e:	415b      	adcs	r3, r3
 800ca70:	65fb      	str	r3, [r7, #92]	; 0x5c
 800ca72:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800ca76:	4621      	mov	r1, r4
 800ca78:	eb12 0801 	adds.w	r8, r2, r1
 800ca7c:	4629      	mov	r1, r5
 800ca7e:	eb43 0901 	adc.w	r9, r3, r1
 800ca82:	f04f 0200 	mov.w	r2, #0
 800ca86:	f04f 0300 	mov.w	r3, #0
 800ca8a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800ca8e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800ca92:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800ca96:	4690      	mov	r8, r2
 800ca98:	4699      	mov	r9, r3
 800ca9a:	4623      	mov	r3, r4
 800ca9c:	eb18 0303 	adds.w	r3, r8, r3
 800caa0:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800caa4:	462b      	mov	r3, r5
 800caa6:	eb49 0303 	adc.w	r3, r9, r3
 800caaa:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800caae:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cab2:	685b      	ldr	r3, [r3, #4]
 800cab4:	2200      	movs	r2, #0
 800cab6:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800caba:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 800cabe:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 800cac2:	460b      	mov	r3, r1
 800cac4:	18db      	adds	r3, r3, r3
 800cac6:	653b      	str	r3, [r7, #80]	; 0x50
 800cac8:	4613      	mov	r3, r2
 800caca:	eb42 0303 	adc.w	r3, r2, r3
 800cace:	657b      	str	r3, [r7, #84]	; 0x54
 800cad0:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800cad4:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800cad8:	f7f4 f8d6 	bl	8000c88 <__aeabi_uldivmod>
 800cadc:	4602      	mov	r2, r0
 800cade:	460b      	mov	r3, r1
 800cae0:	4b61      	ldr	r3, [pc, #388]	; (800cc68 <UART_SetConfig+0x2d4>)
 800cae2:	fba3 2302 	umull	r2, r3, r3, r2
 800cae6:	095b      	lsrs	r3, r3, #5
 800cae8:	011c      	lsls	r4, r3, #4
 800caea:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800caee:	2200      	movs	r2, #0
 800caf0:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800caf4:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 800caf8:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 800cafc:	4642      	mov	r2, r8
 800cafe:	464b      	mov	r3, r9
 800cb00:	1891      	adds	r1, r2, r2
 800cb02:	64b9      	str	r1, [r7, #72]	; 0x48
 800cb04:	415b      	adcs	r3, r3
 800cb06:	64fb      	str	r3, [r7, #76]	; 0x4c
 800cb08:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 800cb0c:	4641      	mov	r1, r8
 800cb0e:	eb12 0a01 	adds.w	sl, r2, r1
 800cb12:	4649      	mov	r1, r9
 800cb14:	eb43 0b01 	adc.w	fp, r3, r1
 800cb18:	f04f 0200 	mov.w	r2, #0
 800cb1c:	f04f 0300 	mov.w	r3, #0
 800cb20:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800cb24:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800cb28:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800cb2c:	4692      	mov	sl, r2
 800cb2e:	469b      	mov	fp, r3
 800cb30:	4643      	mov	r3, r8
 800cb32:	eb1a 0303 	adds.w	r3, sl, r3
 800cb36:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800cb3a:	464b      	mov	r3, r9
 800cb3c:	eb4b 0303 	adc.w	r3, fp, r3
 800cb40:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 800cb44:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cb48:	685b      	ldr	r3, [r3, #4]
 800cb4a:	2200      	movs	r2, #0
 800cb4c:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800cb50:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 800cb54:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 800cb58:	460b      	mov	r3, r1
 800cb5a:	18db      	adds	r3, r3, r3
 800cb5c:	643b      	str	r3, [r7, #64]	; 0x40
 800cb5e:	4613      	mov	r3, r2
 800cb60:	eb42 0303 	adc.w	r3, r2, r3
 800cb64:	647b      	str	r3, [r7, #68]	; 0x44
 800cb66:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800cb6a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 800cb6e:	f7f4 f88b 	bl	8000c88 <__aeabi_uldivmod>
 800cb72:	4602      	mov	r2, r0
 800cb74:	460b      	mov	r3, r1
 800cb76:	4611      	mov	r1, r2
 800cb78:	4b3b      	ldr	r3, [pc, #236]	; (800cc68 <UART_SetConfig+0x2d4>)
 800cb7a:	fba3 2301 	umull	r2, r3, r3, r1
 800cb7e:	095b      	lsrs	r3, r3, #5
 800cb80:	2264      	movs	r2, #100	; 0x64
 800cb82:	fb02 f303 	mul.w	r3, r2, r3
 800cb86:	1acb      	subs	r3, r1, r3
 800cb88:	00db      	lsls	r3, r3, #3
 800cb8a:	f103 0232 	add.w	r2, r3, #50	; 0x32
 800cb8e:	4b36      	ldr	r3, [pc, #216]	; (800cc68 <UART_SetConfig+0x2d4>)
 800cb90:	fba3 2302 	umull	r2, r3, r3, r2
 800cb94:	095b      	lsrs	r3, r3, #5
 800cb96:	005b      	lsls	r3, r3, #1
 800cb98:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800cb9c:	441c      	add	r4, r3
 800cb9e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800cba2:	2200      	movs	r2, #0
 800cba4:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800cba8:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 800cbac:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 800cbb0:	4642      	mov	r2, r8
 800cbb2:	464b      	mov	r3, r9
 800cbb4:	1891      	adds	r1, r2, r2
 800cbb6:	63b9      	str	r1, [r7, #56]	; 0x38
 800cbb8:	415b      	adcs	r3, r3
 800cbba:	63fb      	str	r3, [r7, #60]	; 0x3c
 800cbbc:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800cbc0:	4641      	mov	r1, r8
 800cbc2:	1851      	adds	r1, r2, r1
 800cbc4:	6339      	str	r1, [r7, #48]	; 0x30
 800cbc6:	4649      	mov	r1, r9
 800cbc8:	414b      	adcs	r3, r1
 800cbca:	637b      	str	r3, [r7, #52]	; 0x34
 800cbcc:	f04f 0200 	mov.w	r2, #0
 800cbd0:	f04f 0300 	mov.w	r3, #0
 800cbd4:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 800cbd8:	4659      	mov	r1, fp
 800cbda:	00cb      	lsls	r3, r1, #3
 800cbdc:	4651      	mov	r1, sl
 800cbde:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800cbe2:	4651      	mov	r1, sl
 800cbe4:	00ca      	lsls	r2, r1, #3
 800cbe6:	4610      	mov	r0, r2
 800cbe8:	4619      	mov	r1, r3
 800cbea:	4603      	mov	r3, r0
 800cbec:	4642      	mov	r2, r8
 800cbee:	189b      	adds	r3, r3, r2
 800cbf0:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800cbf4:	464b      	mov	r3, r9
 800cbf6:	460a      	mov	r2, r1
 800cbf8:	eb42 0303 	adc.w	r3, r2, r3
 800cbfc:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800cc00:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cc04:	685b      	ldr	r3, [r3, #4]
 800cc06:	2200      	movs	r2, #0
 800cc08:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800cc0c:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 800cc10:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 800cc14:	460b      	mov	r3, r1
 800cc16:	18db      	adds	r3, r3, r3
 800cc18:	62bb      	str	r3, [r7, #40]	; 0x28
 800cc1a:	4613      	mov	r3, r2
 800cc1c:	eb42 0303 	adc.w	r3, r2, r3
 800cc20:	62fb      	str	r3, [r7, #44]	; 0x2c
 800cc22:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800cc26:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 800cc2a:	f7f4 f82d 	bl	8000c88 <__aeabi_uldivmod>
 800cc2e:	4602      	mov	r2, r0
 800cc30:	460b      	mov	r3, r1
 800cc32:	4b0d      	ldr	r3, [pc, #52]	; (800cc68 <UART_SetConfig+0x2d4>)
 800cc34:	fba3 1302 	umull	r1, r3, r3, r2
 800cc38:	095b      	lsrs	r3, r3, #5
 800cc3a:	2164      	movs	r1, #100	; 0x64
 800cc3c:	fb01 f303 	mul.w	r3, r1, r3
 800cc40:	1ad3      	subs	r3, r2, r3
 800cc42:	00db      	lsls	r3, r3, #3
 800cc44:	3332      	adds	r3, #50	; 0x32
 800cc46:	4a08      	ldr	r2, [pc, #32]	; (800cc68 <UART_SetConfig+0x2d4>)
 800cc48:	fba2 2303 	umull	r2, r3, r2, r3
 800cc4c:	095b      	lsrs	r3, r3, #5
 800cc4e:	f003 0207 	and.w	r2, r3, #7
 800cc52:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cc56:	681b      	ldr	r3, [r3, #0]
 800cc58:	4422      	add	r2, r4
 800cc5a:	609a      	str	r2, [r3, #8]
 800cc5c:	e105      	b.n	800ce6a <UART_SetConfig+0x4d6>
 800cc5e:	bf00      	nop
 800cc60:	40011000 	.word	0x40011000
 800cc64:	40011400 	.word	0x40011400
 800cc68:	51eb851f 	.word	0x51eb851f
 800cc6c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800cc70:	2200      	movs	r2, #0
 800cc72:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800cc76:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800cc7a:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 800cc7e:	4642      	mov	r2, r8
 800cc80:	464b      	mov	r3, r9
 800cc82:	1891      	adds	r1, r2, r2
 800cc84:	6239      	str	r1, [r7, #32]
 800cc86:	415b      	adcs	r3, r3
 800cc88:	627b      	str	r3, [r7, #36]	; 0x24
 800cc8a:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800cc8e:	4641      	mov	r1, r8
 800cc90:	1854      	adds	r4, r2, r1
 800cc92:	4649      	mov	r1, r9
 800cc94:	eb43 0501 	adc.w	r5, r3, r1
 800cc98:	f04f 0200 	mov.w	r2, #0
 800cc9c:	f04f 0300 	mov.w	r3, #0
 800cca0:	00eb      	lsls	r3, r5, #3
 800cca2:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800cca6:	00e2      	lsls	r2, r4, #3
 800cca8:	4614      	mov	r4, r2
 800ccaa:	461d      	mov	r5, r3
 800ccac:	4643      	mov	r3, r8
 800ccae:	18e3      	adds	r3, r4, r3
 800ccb0:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800ccb4:	464b      	mov	r3, r9
 800ccb6:	eb45 0303 	adc.w	r3, r5, r3
 800ccba:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800ccbe:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ccc2:	685b      	ldr	r3, [r3, #4]
 800ccc4:	2200      	movs	r2, #0
 800ccc6:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800ccca:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800ccce:	f04f 0200 	mov.w	r2, #0
 800ccd2:	f04f 0300 	mov.w	r3, #0
 800ccd6:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 800ccda:	4629      	mov	r1, r5
 800ccdc:	008b      	lsls	r3, r1, #2
 800ccde:	4621      	mov	r1, r4
 800cce0:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800cce4:	4621      	mov	r1, r4
 800cce6:	008a      	lsls	r2, r1, #2
 800cce8:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 800ccec:	f7f3 ffcc 	bl	8000c88 <__aeabi_uldivmod>
 800ccf0:	4602      	mov	r2, r0
 800ccf2:	460b      	mov	r3, r1
 800ccf4:	4b60      	ldr	r3, [pc, #384]	; (800ce78 <UART_SetConfig+0x4e4>)
 800ccf6:	fba3 2302 	umull	r2, r3, r3, r2
 800ccfa:	095b      	lsrs	r3, r3, #5
 800ccfc:	011c      	lsls	r4, r3, #4
 800ccfe:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800cd02:	2200      	movs	r2, #0
 800cd04:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800cd08:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800cd0c:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 800cd10:	4642      	mov	r2, r8
 800cd12:	464b      	mov	r3, r9
 800cd14:	1891      	adds	r1, r2, r2
 800cd16:	61b9      	str	r1, [r7, #24]
 800cd18:	415b      	adcs	r3, r3
 800cd1a:	61fb      	str	r3, [r7, #28]
 800cd1c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800cd20:	4641      	mov	r1, r8
 800cd22:	1851      	adds	r1, r2, r1
 800cd24:	6139      	str	r1, [r7, #16]
 800cd26:	4649      	mov	r1, r9
 800cd28:	414b      	adcs	r3, r1
 800cd2a:	617b      	str	r3, [r7, #20]
 800cd2c:	f04f 0200 	mov.w	r2, #0
 800cd30:	f04f 0300 	mov.w	r3, #0
 800cd34:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800cd38:	4659      	mov	r1, fp
 800cd3a:	00cb      	lsls	r3, r1, #3
 800cd3c:	4651      	mov	r1, sl
 800cd3e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800cd42:	4651      	mov	r1, sl
 800cd44:	00ca      	lsls	r2, r1, #3
 800cd46:	4610      	mov	r0, r2
 800cd48:	4619      	mov	r1, r3
 800cd4a:	4603      	mov	r3, r0
 800cd4c:	4642      	mov	r2, r8
 800cd4e:	189b      	adds	r3, r3, r2
 800cd50:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800cd54:	464b      	mov	r3, r9
 800cd56:	460a      	mov	r2, r1
 800cd58:	eb42 0303 	adc.w	r3, r2, r3
 800cd5c:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800cd60:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cd64:	685b      	ldr	r3, [r3, #4]
 800cd66:	2200      	movs	r2, #0
 800cd68:	67bb      	str	r3, [r7, #120]	; 0x78
 800cd6a:	67fa      	str	r2, [r7, #124]	; 0x7c
 800cd6c:	f04f 0200 	mov.w	r2, #0
 800cd70:	f04f 0300 	mov.w	r3, #0
 800cd74:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 800cd78:	4649      	mov	r1, r9
 800cd7a:	008b      	lsls	r3, r1, #2
 800cd7c:	4641      	mov	r1, r8
 800cd7e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800cd82:	4641      	mov	r1, r8
 800cd84:	008a      	lsls	r2, r1, #2
 800cd86:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800cd8a:	f7f3 ff7d 	bl	8000c88 <__aeabi_uldivmod>
 800cd8e:	4602      	mov	r2, r0
 800cd90:	460b      	mov	r3, r1
 800cd92:	4b39      	ldr	r3, [pc, #228]	; (800ce78 <UART_SetConfig+0x4e4>)
 800cd94:	fba3 1302 	umull	r1, r3, r3, r2
 800cd98:	095b      	lsrs	r3, r3, #5
 800cd9a:	2164      	movs	r1, #100	; 0x64
 800cd9c:	fb01 f303 	mul.w	r3, r1, r3
 800cda0:	1ad3      	subs	r3, r2, r3
 800cda2:	011b      	lsls	r3, r3, #4
 800cda4:	3332      	adds	r3, #50	; 0x32
 800cda6:	4a34      	ldr	r2, [pc, #208]	; (800ce78 <UART_SetConfig+0x4e4>)
 800cda8:	fba2 2303 	umull	r2, r3, r2, r3
 800cdac:	095b      	lsrs	r3, r3, #5
 800cdae:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800cdb2:	441c      	add	r4, r3
 800cdb4:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800cdb8:	2200      	movs	r2, #0
 800cdba:	673b      	str	r3, [r7, #112]	; 0x70
 800cdbc:	677a      	str	r2, [r7, #116]	; 0x74
 800cdbe:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 800cdc2:	4642      	mov	r2, r8
 800cdc4:	464b      	mov	r3, r9
 800cdc6:	1891      	adds	r1, r2, r2
 800cdc8:	60b9      	str	r1, [r7, #8]
 800cdca:	415b      	adcs	r3, r3
 800cdcc:	60fb      	str	r3, [r7, #12]
 800cdce:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800cdd2:	4641      	mov	r1, r8
 800cdd4:	1851      	adds	r1, r2, r1
 800cdd6:	6039      	str	r1, [r7, #0]
 800cdd8:	4649      	mov	r1, r9
 800cdda:	414b      	adcs	r3, r1
 800cddc:	607b      	str	r3, [r7, #4]
 800cdde:	f04f 0200 	mov.w	r2, #0
 800cde2:	f04f 0300 	mov.w	r3, #0
 800cde6:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800cdea:	4659      	mov	r1, fp
 800cdec:	00cb      	lsls	r3, r1, #3
 800cdee:	4651      	mov	r1, sl
 800cdf0:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800cdf4:	4651      	mov	r1, sl
 800cdf6:	00ca      	lsls	r2, r1, #3
 800cdf8:	4610      	mov	r0, r2
 800cdfa:	4619      	mov	r1, r3
 800cdfc:	4603      	mov	r3, r0
 800cdfe:	4642      	mov	r2, r8
 800ce00:	189b      	adds	r3, r3, r2
 800ce02:	66bb      	str	r3, [r7, #104]	; 0x68
 800ce04:	464b      	mov	r3, r9
 800ce06:	460a      	mov	r2, r1
 800ce08:	eb42 0303 	adc.w	r3, r2, r3
 800ce0c:	66fb      	str	r3, [r7, #108]	; 0x6c
 800ce0e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ce12:	685b      	ldr	r3, [r3, #4]
 800ce14:	2200      	movs	r2, #0
 800ce16:	663b      	str	r3, [r7, #96]	; 0x60
 800ce18:	667a      	str	r2, [r7, #100]	; 0x64
 800ce1a:	f04f 0200 	mov.w	r2, #0
 800ce1e:	f04f 0300 	mov.w	r3, #0
 800ce22:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 800ce26:	4649      	mov	r1, r9
 800ce28:	008b      	lsls	r3, r1, #2
 800ce2a:	4641      	mov	r1, r8
 800ce2c:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800ce30:	4641      	mov	r1, r8
 800ce32:	008a      	lsls	r2, r1, #2
 800ce34:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800ce38:	f7f3 ff26 	bl	8000c88 <__aeabi_uldivmod>
 800ce3c:	4602      	mov	r2, r0
 800ce3e:	460b      	mov	r3, r1
 800ce40:	4b0d      	ldr	r3, [pc, #52]	; (800ce78 <UART_SetConfig+0x4e4>)
 800ce42:	fba3 1302 	umull	r1, r3, r3, r2
 800ce46:	095b      	lsrs	r3, r3, #5
 800ce48:	2164      	movs	r1, #100	; 0x64
 800ce4a:	fb01 f303 	mul.w	r3, r1, r3
 800ce4e:	1ad3      	subs	r3, r2, r3
 800ce50:	011b      	lsls	r3, r3, #4
 800ce52:	3332      	adds	r3, #50	; 0x32
 800ce54:	4a08      	ldr	r2, [pc, #32]	; (800ce78 <UART_SetConfig+0x4e4>)
 800ce56:	fba2 2303 	umull	r2, r3, r2, r3
 800ce5a:	095b      	lsrs	r3, r3, #5
 800ce5c:	f003 020f 	and.w	r2, r3, #15
 800ce60:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ce64:	681b      	ldr	r3, [r3, #0]
 800ce66:	4422      	add	r2, r4
 800ce68:	609a      	str	r2, [r3, #8]
 800ce6a:	bf00      	nop
 800ce6c:	f507 7780 	add.w	r7, r7, #256	; 0x100
 800ce70:	46bd      	mov	sp, r7
 800ce72:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800ce76:	bf00      	nop
 800ce78:	51eb851f 	.word	0x51eb851f

0800ce7c <__errno>:
 800ce7c:	4b01      	ldr	r3, [pc, #4]	; (800ce84 <__errno+0x8>)
 800ce7e:	6818      	ldr	r0, [r3, #0]
 800ce80:	4770      	bx	lr
 800ce82:	bf00      	nop
 800ce84:	20000148 	.word	0x20000148

0800ce88 <__libc_init_array>:
 800ce88:	b570      	push	{r4, r5, r6, lr}
 800ce8a:	4d0d      	ldr	r5, [pc, #52]	; (800cec0 <__libc_init_array+0x38>)
 800ce8c:	4c0d      	ldr	r4, [pc, #52]	; (800cec4 <__libc_init_array+0x3c>)
 800ce8e:	1b64      	subs	r4, r4, r5
 800ce90:	10a4      	asrs	r4, r4, #2
 800ce92:	2600      	movs	r6, #0
 800ce94:	42a6      	cmp	r6, r4
 800ce96:	d109      	bne.n	800ceac <__libc_init_array+0x24>
 800ce98:	4d0b      	ldr	r5, [pc, #44]	; (800cec8 <__libc_init_array+0x40>)
 800ce9a:	4c0c      	ldr	r4, [pc, #48]	; (800cecc <__libc_init_array+0x44>)
 800ce9c:	f004 f952 	bl	8011144 <_init>
 800cea0:	1b64      	subs	r4, r4, r5
 800cea2:	10a4      	asrs	r4, r4, #2
 800cea4:	2600      	movs	r6, #0
 800cea6:	42a6      	cmp	r6, r4
 800cea8:	d105      	bne.n	800ceb6 <__libc_init_array+0x2e>
 800ceaa:	bd70      	pop	{r4, r5, r6, pc}
 800ceac:	f855 3b04 	ldr.w	r3, [r5], #4
 800ceb0:	4798      	blx	r3
 800ceb2:	3601      	adds	r6, #1
 800ceb4:	e7ee      	b.n	800ce94 <__libc_init_array+0xc>
 800ceb6:	f855 3b04 	ldr.w	r3, [r5], #4
 800ceba:	4798      	blx	r3
 800cebc:	3601      	adds	r6, #1
 800cebe:	e7f2      	b.n	800cea6 <__libc_init_array+0x1e>
 800cec0:	080118c0 	.word	0x080118c0
 800cec4:	080118c0 	.word	0x080118c0
 800cec8:	080118c0 	.word	0x080118c0
 800cecc:	080118c4 	.word	0x080118c4

0800ced0 <memset>:
 800ced0:	4402      	add	r2, r0
 800ced2:	4603      	mov	r3, r0
 800ced4:	4293      	cmp	r3, r2
 800ced6:	d100      	bne.n	800ceda <memset+0xa>
 800ced8:	4770      	bx	lr
 800ceda:	f803 1b01 	strb.w	r1, [r3], #1
 800cede:	e7f9      	b.n	800ced4 <memset+0x4>

0800cee0 <__cvt>:
 800cee0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800cee4:	ec55 4b10 	vmov	r4, r5, d0
 800cee8:	2d00      	cmp	r5, #0
 800ceea:	460e      	mov	r6, r1
 800ceec:	4619      	mov	r1, r3
 800ceee:	462b      	mov	r3, r5
 800cef0:	bfbb      	ittet	lt
 800cef2:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 800cef6:	461d      	movlt	r5, r3
 800cef8:	2300      	movge	r3, #0
 800cefa:	232d      	movlt	r3, #45	; 0x2d
 800cefc:	700b      	strb	r3, [r1, #0]
 800cefe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cf00:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800cf04:	4691      	mov	r9, r2
 800cf06:	f023 0820 	bic.w	r8, r3, #32
 800cf0a:	bfbc      	itt	lt
 800cf0c:	4622      	movlt	r2, r4
 800cf0e:	4614      	movlt	r4, r2
 800cf10:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800cf14:	d005      	beq.n	800cf22 <__cvt+0x42>
 800cf16:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800cf1a:	d100      	bne.n	800cf1e <__cvt+0x3e>
 800cf1c:	3601      	adds	r6, #1
 800cf1e:	2102      	movs	r1, #2
 800cf20:	e000      	b.n	800cf24 <__cvt+0x44>
 800cf22:	2103      	movs	r1, #3
 800cf24:	ab03      	add	r3, sp, #12
 800cf26:	9301      	str	r3, [sp, #4]
 800cf28:	ab02      	add	r3, sp, #8
 800cf2a:	9300      	str	r3, [sp, #0]
 800cf2c:	ec45 4b10 	vmov	d0, r4, r5
 800cf30:	4653      	mov	r3, sl
 800cf32:	4632      	mov	r2, r6
 800cf34:	f000 fcec 	bl	800d910 <_dtoa_r>
 800cf38:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800cf3c:	4607      	mov	r7, r0
 800cf3e:	d102      	bne.n	800cf46 <__cvt+0x66>
 800cf40:	f019 0f01 	tst.w	r9, #1
 800cf44:	d022      	beq.n	800cf8c <__cvt+0xac>
 800cf46:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800cf4a:	eb07 0906 	add.w	r9, r7, r6
 800cf4e:	d110      	bne.n	800cf72 <__cvt+0x92>
 800cf50:	783b      	ldrb	r3, [r7, #0]
 800cf52:	2b30      	cmp	r3, #48	; 0x30
 800cf54:	d10a      	bne.n	800cf6c <__cvt+0x8c>
 800cf56:	2200      	movs	r2, #0
 800cf58:	2300      	movs	r3, #0
 800cf5a:	4620      	mov	r0, r4
 800cf5c:	4629      	mov	r1, r5
 800cf5e:	f7f3 fdd3 	bl	8000b08 <__aeabi_dcmpeq>
 800cf62:	b918      	cbnz	r0, 800cf6c <__cvt+0x8c>
 800cf64:	f1c6 0601 	rsb	r6, r6, #1
 800cf68:	f8ca 6000 	str.w	r6, [sl]
 800cf6c:	f8da 3000 	ldr.w	r3, [sl]
 800cf70:	4499      	add	r9, r3
 800cf72:	2200      	movs	r2, #0
 800cf74:	2300      	movs	r3, #0
 800cf76:	4620      	mov	r0, r4
 800cf78:	4629      	mov	r1, r5
 800cf7a:	f7f3 fdc5 	bl	8000b08 <__aeabi_dcmpeq>
 800cf7e:	b108      	cbz	r0, 800cf84 <__cvt+0xa4>
 800cf80:	f8cd 900c 	str.w	r9, [sp, #12]
 800cf84:	2230      	movs	r2, #48	; 0x30
 800cf86:	9b03      	ldr	r3, [sp, #12]
 800cf88:	454b      	cmp	r3, r9
 800cf8a:	d307      	bcc.n	800cf9c <__cvt+0xbc>
 800cf8c:	9b03      	ldr	r3, [sp, #12]
 800cf8e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800cf90:	1bdb      	subs	r3, r3, r7
 800cf92:	4638      	mov	r0, r7
 800cf94:	6013      	str	r3, [r2, #0]
 800cf96:	b004      	add	sp, #16
 800cf98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cf9c:	1c59      	adds	r1, r3, #1
 800cf9e:	9103      	str	r1, [sp, #12]
 800cfa0:	701a      	strb	r2, [r3, #0]
 800cfa2:	e7f0      	b.n	800cf86 <__cvt+0xa6>

0800cfa4 <__exponent>:
 800cfa4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cfa6:	4603      	mov	r3, r0
 800cfa8:	2900      	cmp	r1, #0
 800cfaa:	bfb8      	it	lt
 800cfac:	4249      	neglt	r1, r1
 800cfae:	f803 2b02 	strb.w	r2, [r3], #2
 800cfb2:	bfb4      	ite	lt
 800cfb4:	222d      	movlt	r2, #45	; 0x2d
 800cfb6:	222b      	movge	r2, #43	; 0x2b
 800cfb8:	2909      	cmp	r1, #9
 800cfba:	7042      	strb	r2, [r0, #1]
 800cfbc:	dd2a      	ble.n	800d014 <__exponent+0x70>
 800cfbe:	f10d 0407 	add.w	r4, sp, #7
 800cfc2:	46a4      	mov	ip, r4
 800cfc4:	270a      	movs	r7, #10
 800cfc6:	46a6      	mov	lr, r4
 800cfc8:	460a      	mov	r2, r1
 800cfca:	fb91 f6f7 	sdiv	r6, r1, r7
 800cfce:	fb07 1516 	mls	r5, r7, r6, r1
 800cfd2:	3530      	adds	r5, #48	; 0x30
 800cfd4:	2a63      	cmp	r2, #99	; 0x63
 800cfd6:	f104 34ff 	add.w	r4, r4, #4294967295
 800cfda:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800cfde:	4631      	mov	r1, r6
 800cfe0:	dcf1      	bgt.n	800cfc6 <__exponent+0x22>
 800cfe2:	3130      	adds	r1, #48	; 0x30
 800cfe4:	f1ae 0502 	sub.w	r5, lr, #2
 800cfe8:	f804 1c01 	strb.w	r1, [r4, #-1]
 800cfec:	1c44      	adds	r4, r0, #1
 800cfee:	4629      	mov	r1, r5
 800cff0:	4561      	cmp	r1, ip
 800cff2:	d30a      	bcc.n	800d00a <__exponent+0x66>
 800cff4:	f10d 0209 	add.w	r2, sp, #9
 800cff8:	eba2 020e 	sub.w	r2, r2, lr
 800cffc:	4565      	cmp	r5, ip
 800cffe:	bf88      	it	hi
 800d000:	2200      	movhi	r2, #0
 800d002:	4413      	add	r3, r2
 800d004:	1a18      	subs	r0, r3, r0
 800d006:	b003      	add	sp, #12
 800d008:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d00a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d00e:	f804 2f01 	strb.w	r2, [r4, #1]!
 800d012:	e7ed      	b.n	800cff0 <__exponent+0x4c>
 800d014:	2330      	movs	r3, #48	; 0x30
 800d016:	3130      	adds	r1, #48	; 0x30
 800d018:	7083      	strb	r3, [r0, #2]
 800d01a:	70c1      	strb	r1, [r0, #3]
 800d01c:	1d03      	adds	r3, r0, #4
 800d01e:	e7f1      	b.n	800d004 <__exponent+0x60>

0800d020 <_printf_float>:
 800d020:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d024:	ed2d 8b02 	vpush	{d8}
 800d028:	b08d      	sub	sp, #52	; 0x34
 800d02a:	460c      	mov	r4, r1
 800d02c:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 800d030:	4616      	mov	r6, r2
 800d032:	461f      	mov	r7, r3
 800d034:	4605      	mov	r5, r0
 800d036:	f001 fa59 	bl	800e4ec <_localeconv_r>
 800d03a:	f8d0 a000 	ldr.w	sl, [r0]
 800d03e:	4650      	mov	r0, sl
 800d040:	f7f3 f8e6 	bl	8000210 <strlen>
 800d044:	2300      	movs	r3, #0
 800d046:	930a      	str	r3, [sp, #40]	; 0x28
 800d048:	6823      	ldr	r3, [r4, #0]
 800d04a:	9305      	str	r3, [sp, #20]
 800d04c:	f8d8 3000 	ldr.w	r3, [r8]
 800d050:	f894 b018 	ldrb.w	fp, [r4, #24]
 800d054:	3307      	adds	r3, #7
 800d056:	f023 0307 	bic.w	r3, r3, #7
 800d05a:	f103 0208 	add.w	r2, r3, #8
 800d05e:	f8c8 2000 	str.w	r2, [r8]
 800d062:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d066:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800d06a:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 800d06e:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800d072:	9307      	str	r3, [sp, #28]
 800d074:	f8cd 8018 	str.w	r8, [sp, #24]
 800d078:	ee08 0a10 	vmov	s16, r0
 800d07c:	4b9f      	ldr	r3, [pc, #636]	; (800d2fc <_printf_float+0x2dc>)
 800d07e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800d082:	f04f 32ff 	mov.w	r2, #4294967295
 800d086:	f7f3 fd71 	bl	8000b6c <__aeabi_dcmpun>
 800d08a:	bb88      	cbnz	r0, 800d0f0 <_printf_float+0xd0>
 800d08c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800d090:	4b9a      	ldr	r3, [pc, #616]	; (800d2fc <_printf_float+0x2dc>)
 800d092:	f04f 32ff 	mov.w	r2, #4294967295
 800d096:	f7f3 fd4b 	bl	8000b30 <__aeabi_dcmple>
 800d09a:	bb48      	cbnz	r0, 800d0f0 <_printf_float+0xd0>
 800d09c:	2200      	movs	r2, #0
 800d09e:	2300      	movs	r3, #0
 800d0a0:	4640      	mov	r0, r8
 800d0a2:	4649      	mov	r1, r9
 800d0a4:	f7f3 fd3a 	bl	8000b1c <__aeabi_dcmplt>
 800d0a8:	b110      	cbz	r0, 800d0b0 <_printf_float+0x90>
 800d0aa:	232d      	movs	r3, #45	; 0x2d
 800d0ac:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d0b0:	4b93      	ldr	r3, [pc, #588]	; (800d300 <_printf_float+0x2e0>)
 800d0b2:	4894      	ldr	r0, [pc, #592]	; (800d304 <_printf_float+0x2e4>)
 800d0b4:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 800d0b8:	bf94      	ite	ls
 800d0ba:	4698      	movls	r8, r3
 800d0bc:	4680      	movhi	r8, r0
 800d0be:	2303      	movs	r3, #3
 800d0c0:	6123      	str	r3, [r4, #16]
 800d0c2:	9b05      	ldr	r3, [sp, #20]
 800d0c4:	f023 0204 	bic.w	r2, r3, #4
 800d0c8:	6022      	str	r2, [r4, #0]
 800d0ca:	f04f 0900 	mov.w	r9, #0
 800d0ce:	9700      	str	r7, [sp, #0]
 800d0d0:	4633      	mov	r3, r6
 800d0d2:	aa0b      	add	r2, sp, #44	; 0x2c
 800d0d4:	4621      	mov	r1, r4
 800d0d6:	4628      	mov	r0, r5
 800d0d8:	f000 f9d8 	bl	800d48c <_printf_common>
 800d0dc:	3001      	adds	r0, #1
 800d0de:	f040 8090 	bne.w	800d202 <_printf_float+0x1e2>
 800d0e2:	f04f 30ff 	mov.w	r0, #4294967295
 800d0e6:	b00d      	add	sp, #52	; 0x34
 800d0e8:	ecbd 8b02 	vpop	{d8}
 800d0ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d0f0:	4642      	mov	r2, r8
 800d0f2:	464b      	mov	r3, r9
 800d0f4:	4640      	mov	r0, r8
 800d0f6:	4649      	mov	r1, r9
 800d0f8:	f7f3 fd38 	bl	8000b6c <__aeabi_dcmpun>
 800d0fc:	b140      	cbz	r0, 800d110 <_printf_float+0xf0>
 800d0fe:	464b      	mov	r3, r9
 800d100:	2b00      	cmp	r3, #0
 800d102:	bfbc      	itt	lt
 800d104:	232d      	movlt	r3, #45	; 0x2d
 800d106:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800d10a:	487f      	ldr	r0, [pc, #508]	; (800d308 <_printf_float+0x2e8>)
 800d10c:	4b7f      	ldr	r3, [pc, #508]	; (800d30c <_printf_float+0x2ec>)
 800d10e:	e7d1      	b.n	800d0b4 <_printf_float+0x94>
 800d110:	6863      	ldr	r3, [r4, #4]
 800d112:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 800d116:	9206      	str	r2, [sp, #24]
 800d118:	1c5a      	adds	r2, r3, #1
 800d11a:	d13f      	bne.n	800d19c <_printf_float+0x17c>
 800d11c:	2306      	movs	r3, #6
 800d11e:	6063      	str	r3, [r4, #4]
 800d120:	9b05      	ldr	r3, [sp, #20]
 800d122:	6861      	ldr	r1, [r4, #4]
 800d124:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 800d128:	2300      	movs	r3, #0
 800d12a:	9303      	str	r3, [sp, #12]
 800d12c:	ab0a      	add	r3, sp, #40	; 0x28
 800d12e:	e9cd b301 	strd	fp, r3, [sp, #4]
 800d132:	ab09      	add	r3, sp, #36	; 0x24
 800d134:	ec49 8b10 	vmov	d0, r8, r9
 800d138:	9300      	str	r3, [sp, #0]
 800d13a:	6022      	str	r2, [r4, #0]
 800d13c:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 800d140:	4628      	mov	r0, r5
 800d142:	f7ff fecd 	bl	800cee0 <__cvt>
 800d146:	9b06      	ldr	r3, [sp, #24]
 800d148:	9909      	ldr	r1, [sp, #36]	; 0x24
 800d14a:	2b47      	cmp	r3, #71	; 0x47
 800d14c:	4680      	mov	r8, r0
 800d14e:	d108      	bne.n	800d162 <_printf_float+0x142>
 800d150:	1cc8      	adds	r0, r1, #3
 800d152:	db02      	blt.n	800d15a <_printf_float+0x13a>
 800d154:	6863      	ldr	r3, [r4, #4]
 800d156:	4299      	cmp	r1, r3
 800d158:	dd41      	ble.n	800d1de <_printf_float+0x1be>
 800d15a:	f1ab 0b02 	sub.w	fp, fp, #2
 800d15e:	fa5f fb8b 	uxtb.w	fp, fp
 800d162:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800d166:	d820      	bhi.n	800d1aa <_printf_float+0x18a>
 800d168:	3901      	subs	r1, #1
 800d16a:	465a      	mov	r2, fp
 800d16c:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800d170:	9109      	str	r1, [sp, #36]	; 0x24
 800d172:	f7ff ff17 	bl	800cfa4 <__exponent>
 800d176:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d178:	1813      	adds	r3, r2, r0
 800d17a:	2a01      	cmp	r2, #1
 800d17c:	4681      	mov	r9, r0
 800d17e:	6123      	str	r3, [r4, #16]
 800d180:	dc02      	bgt.n	800d188 <_printf_float+0x168>
 800d182:	6822      	ldr	r2, [r4, #0]
 800d184:	07d2      	lsls	r2, r2, #31
 800d186:	d501      	bpl.n	800d18c <_printf_float+0x16c>
 800d188:	3301      	adds	r3, #1
 800d18a:	6123      	str	r3, [r4, #16]
 800d18c:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 800d190:	2b00      	cmp	r3, #0
 800d192:	d09c      	beq.n	800d0ce <_printf_float+0xae>
 800d194:	232d      	movs	r3, #45	; 0x2d
 800d196:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d19a:	e798      	b.n	800d0ce <_printf_float+0xae>
 800d19c:	9a06      	ldr	r2, [sp, #24]
 800d19e:	2a47      	cmp	r2, #71	; 0x47
 800d1a0:	d1be      	bne.n	800d120 <_printf_float+0x100>
 800d1a2:	2b00      	cmp	r3, #0
 800d1a4:	d1bc      	bne.n	800d120 <_printf_float+0x100>
 800d1a6:	2301      	movs	r3, #1
 800d1a8:	e7b9      	b.n	800d11e <_printf_float+0xfe>
 800d1aa:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 800d1ae:	d118      	bne.n	800d1e2 <_printf_float+0x1c2>
 800d1b0:	2900      	cmp	r1, #0
 800d1b2:	6863      	ldr	r3, [r4, #4]
 800d1b4:	dd0b      	ble.n	800d1ce <_printf_float+0x1ae>
 800d1b6:	6121      	str	r1, [r4, #16]
 800d1b8:	b913      	cbnz	r3, 800d1c0 <_printf_float+0x1a0>
 800d1ba:	6822      	ldr	r2, [r4, #0]
 800d1bc:	07d0      	lsls	r0, r2, #31
 800d1be:	d502      	bpl.n	800d1c6 <_printf_float+0x1a6>
 800d1c0:	3301      	adds	r3, #1
 800d1c2:	440b      	add	r3, r1
 800d1c4:	6123      	str	r3, [r4, #16]
 800d1c6:	65a1      	str	r1, [r4, #88]	; 0x58
 800d1c8:	f04f 0900 	mov.w	r9, #0
 800d1cc:	e7de      	b.n	800d18c <_printf_float+0x16c>
 800d1ce:	b913      	cbnz	r3, 800d1d6 <_printf_float+0x1b6>
 800d1d0:	6822      	ldr	r2, [r4, #0]
 800d1d2:	07d2      	lsls	r2, r2, #31
 800d1d4:	d501      	bpl.n	800d1da <_printf_float+0x1ba>
 800d1d6:	3302      	adds	r3, #2
 800d1d8:	e7f4      	b.n	800d1c4 <_printf_float+0x1a4>
 800d1da:	2301      	movs	r3, #1
 800d1dc:	e7f2      	b.n	800d1c4 <_printf_float+0x1a4>
 800d1de:	f04f 0b67 	mov.w	fp, #103	; 0x67
 800d1e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d1e4:	4299      	cmp	r1, r3
 800d1e6:	db05      	blt.n	800d1f4 <_printf_float+0x1d4>
 800d1e8:	6823      	ldr	r3, [r4, #0]
 800d1ea:	6121      	str	r1, [r4, #16]
 800d1ec:	07d8      	lsls	r0, r3, #31
 800d1ee:	d5ea      	bpl.n	800d1c6 <_printf_float+0x1a6>
 800d1f0:	1c4b      	adds	r3, r1, #1
 800d1f2:	e7e7      	b.n	800d1c4 <_printf_float+0x1a4>
 800d1f4:	2900      	cmp	r1, #0
 800d1f6:	bfd4      	ite	le
 800d1f8:	f1c1 0202 	rsble	r2, r1, #2
 800d1fc:	2201      	movgt	r2, #1
 800d1fe:	4413      	add	r3, r2
 800d200:	e7e0      	b.n	800d1c4 <_printf_float+0x1a4>
 800d202:	6823      	ldr	r3, [r4, #0]
 800d204:	055a      	lsls	r2, r3, #21
 800d206:	d407      	bmi.n	800d218 <_printf_float+0x1f8>
 800d208:	6923      	ldr	r3, [r4, #16]
 800d20a:	4642      	mov	r2, r8
 800d20c:	4631      	mov	r1, r6
 800d20e:	4628      	mov	r0, r5
 800d210:	47b8      	blx	r7
 800d212:	3001      	adds	r0, #1
 800d214:	d12c      	bne.n	800d270 <_printf_float+0x250>
 800d216:	e764      	b.n	800d0e2 <_printf_float+0xc2>
 800d218:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800d21c:	f240 80e0 	bls.w	800d3e0 <_printf_float+0x3c0>
 800d220:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800d224:	2200      	movs	r2, #0
 800d226:	2300      	movs	r3, #0
 800d228:	f7f3 fc6e 	bl	8000b08 <__aeabi_dcmpeq>
 800d22c:	2800      	cmp	r0, #0
 800d22e:	d034      	beq.n	800d29a <_printf_float+0x27a>
 800d230:	4a37      	ldr	r2, [pc, #220]	; (800d310 <_printf_float+0x2f0>)
 800d232:	2301      	movs	r3, #1
 800d234:	4631      	mov	r1, r6
 800d236:	4628      	mov	r0, r5
 800d238:	47b8      	blx	r7
 800d23a:	3001      	adds	r0, #1
 800d23c:	f43f af51 	beq.w	800d0e2 <_printf_float+0xc2>
 800d240:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800d244:	429a      	cmp	r2, r3
 800d246:	db02      	blt.n	800d24e <_printf_float+0x22e>
 800d248:	6823      	ldr	r3, [r4, #0]
 800d24a:	07d8      	lsls	r0, r3, #31
 800d24c:	d510      	bpl.n	800d270 <_printf_float+0x250>
 800d24e:	ee18 3a10 	vmov	r3, s16
 800d252:	4652      	mov	r2, sl
 800d254:	4631      	mov	r1, r6
 800d256:	4628      	mov	r0, r5
 800d258:	47b8      	blx	r7
 800d25a:	3001      	adds	r0, #1
 800d25c:	f43f af41 	beq.w	800d0e2 <_printf_float+0xc2>
 800d260:	f04f 0800 	mov.w	r8, #0
 800d264:	f104 091a 	add.w	r9, r4, #26
 800d268:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d26a:	3b01      	subs	r3, #1
 800d26c:	4543      	cmp	r3, r8
 800d26e:	dc09      	bgt.n	800d284 <_printf_float+0x264>
 800d270:	6823      	ldr	r3, [r4, #0]
 800d272:	079b      	lsls	r3, r3, #30
 800d274:	f100 8105 	bmi.w	800d482 <_printf_float+0x462>
 800d278:	68e0      	ldr	r0, [r4, #12]
 800d27a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d27c:	4298      	cmp	r0, r3
 800d27e:	bfb8      	it	lt
 800d280:	4618      	movlt	r0, r3
 800d282:	e730      	b.n	800d0e6 <_printf_float+0xc6>
 800d284:	2301      	movs	r3, #1
 800d286:	464a      	mov	r2, r9
 800d288:	4631      	mov	r1, r6
 800d28a:	4628      	mov	r0, r5
 800d28c:	47b8      	blx	r7
 800d28e:	3001      	adds	r0, #1
 800d290:	f43f af27 	beq.w	800d0e2 <_printf_float+0xc2>
 800d294:	f108 0801 	add.w	r8, r8, #1
 800d298:	e7e6      	b.n	800d268 <_printf_float+0x248>
 800d29a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d29c:	2b00      	cmp	r3, #0
 800d29e:	dc39      	bgt.n	800d314 <_printf_float+0x2f4>
 800d2a0:	4a1b      	ldr	r2, [pc, #108]	; (800d310 <_printf_float+0x2f0>)
 800d2a2:	2301      	movs	r3, #1
 800d2a4:	4631      	mov	r1, r6
 800d2a6:	4628      	mov	r0, r5
 800d2a8:	47b8      	blx	r7
 800d2aa:	3001      	adds	r0, #1
 800d2ac:	f43f af19 	beq.w	800d0e2 <_printf_float+0xc2>
 800d2b0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800d2b4:	4313      	orrs	r3, r2
 800d2b6:	d102      	bne.n	800d2be <_printf_float+0x29e>
 800d2b8:	6823      	ldr	r3, [r4, #0]
 800d2ba:	07d9      	lsls	r1, r3, #31
 800d2bc:	d5d8      	bpl.n	800d270 <_printf_float+0x250>
 800d2be:	ee18 3a10 	vmov	r3, s16
 800d2c2:	4652      	mov	r2, sl
 800d2c4:	4631      	mov	r1, r6
 800d2c6:	4628      	mov	r0, r5
 800d2c8:	47b8      	blx	r7
 800d2ca:	3001      	adds	r0, #1
 800d2cc:	f43f af09 	beq.w	800d0e2 <_printf_float+0xc2>
 800d2d0:	f04f 0900 	mov.w	r9, #0
 800d2d4:	f104 0a1a 	add.w	sl, r4, #26
 800d2d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d2da:	425b      	negs	r3, r3
 800d2dc:	454b      	cmp	r3, r9
 800d2de:	dc01      	bgt.n	800d2e4 <_printf_float+0x2c4>
 800d2e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d2e2:	e792      	b.n	800d20a <_printf_float+0x1ea>
 800d2e4:	2301      	movs	r3, #1
 800d2e6:	4652      	mov	r2, sl
 800d2e8:	4631      	mov	r1, r6
 800d2ea:	4628      	mov	r0, r5
 800d2ec:	47b8      	blx	r7
 800d2ee:	3001      	adds	r0, #1
 800d2f0:	f43f aef7 	beq.w	800d0e2 <_printf_float+0xc2>
 800d2f4:	f109 0901 	add.w	r9, r9, #1
 800d2f8:	e7ee      	b.n	800d2d8 <_printf_float+0x2b8>
 800d2fa:	bf00      	nop
 800d2fc:	7fefffff 	.word	0x7fefffff
 800d300:	080112c4 	.word	0x080112c4
 800d304:	080112c8 	.word	0x080112c8
 800d308:	080112d0 	.word	0x080112d0
 800d30c:	080112cc 	.word	0x080112cc
 800d310:	080112d4 	.word	0x080112d4
 800d314:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d316:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800d318:	429a      	cmp	r2, r3
 800d31a:	bfa8      	it	ge
 800d31c:	461a      	movge	r2, r3
 800d31e:	2a00      	cmp	r2, #0
 800d320:	4691      	mov	r9, r2
 800d322:	dc37      	bgt.n	800d394 <_printf_float+0x374>
 800d324:	f04f 0b00 	mov.w	fp, #0
 800d328:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800d32c:	f104 021a 	add.w	r2, r4, #26
 800d330:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800d332:	9305      	str	r3, [sp, #20]
 800d334:	eba3 0309 	sub.w	r3, r3, r9
 800d338:	455b      	cmp	r3, fp
 800d33a:	dc33      	bgt.n	800d3a4 <_printf_float+0x384>
 800d33c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800d340:	429a      	cmp	r2, r3
 800d342:	db3b      	blt.n	800d3bc <_printf_float+0x39c>
 800d344:	6823      	ldr	r3, [r4, #0]
 800d346:	07da      	lsls	r2, r3, #31
 800d348:	d438      	bmi.n	800d3bc <_printf_float+0x39c>
 800d34a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d34c:	9a05      	ldr	r2, [sp, #20]
 800d34e:	9909      	ldr	r1, [sp, #36]	; 0x24
 800d350:	1a9a      	subs	r2, r3, r2
 800d352:	eba3 0901 	sub.w	r9, r3, r1
 800d356:	4591      	cmp	r9, r2
 800d358:	bfa8      	it	ge
 800d35a:	4691      	movge	r9, r2
 800d35c:	f1b9 0f00 	cmp.w	r9, #0
 800d360:	dc35      	bgt.n	800d3ce <_printf_float+0x3ae>
 800d362:	f04f 0800 	mov.w	r8, #0
 800d366:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800d36a:	f104 0a1a 	add.w	sl, r4, #26
 800d36e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800d372:	1a9b      	subs	r3, r3, r2
 800d374:	eba3 0309 	sub.w	r3, r3, r9
 800d378:	4543      	cmp	r3, r8
 800d37a:	f77f af79 	ble.w	800d270 <_printf_float+0x250>
 800d37e:	2301      	movs	r3, #1
 800d380:	4652      	mov	r2, sl
 800d382:	4631      	mov	r1, r6
 800d384:	4628      	mov	r0, r5
 800d386:	47b8      	blx	r7
 800d388:	3001      	adds	r0, #1
 800d38a:	f43f aeaa 	beq.w	800d0e2 <_printf_float+0xc2>
 800d38e:	f108 0801 	add.w	r8, r8, #1
 800d392:	e7ec      	b.n	800d36e <_printf_float+0x34e>
 800d394:	4613      	mov	r3, r2
 800d396:	4631      	mov	r1, r6
 800d398:	4642      	mov	r2, r8
 800d39a:	4628      	mov	r0, r5
 800d39c:	47b8      	blx	r7
 800d39e:	3001      	adds	r0, #1
 800d3a0:	d1c0      	bne.n	800d324 <_printf_float+0x304>
 800d3a2:	e69e      	b.n	800d0e2 <_printf_float+0xc2>
 800d3a4:	2301      	movs	r3, #1
 800d3a6:	4631      	mov	r1, r6
 800d3a8:	4628      	mov	r0, r5
 800d3aa:	9205      	str	r2, [sp, #20]
 800d3ac:	47b8      	blx	r7
 800d3ae:	3001      	adds	r0, #1
 800d3b0:	f43f ae97 	beq.w	800d0e2 <_printf_float+0xc2>
 800d3b4:	9a05      	ldr	r2, [sp, #20]
 800d3b6:	f10b 0b01 	add.w	fp, fp, #1
 800d3ba:	e7b9      	b.n	800d330 <_printf_float+0x310>
 800d3bc:	ee18 3a10 	vmov	r3, s16
 800d3c0:	4652      	mov	r2, sl
 800d3c2:	4631      	mov	r1, r6
 800d3c4:	4628      	mov	r0, r5
 800d3c6:	47b8      	blx	r7
 800d3c8:	3001      	adds	r0, #1
 800d3ca:	d1be      	bne.n	800d34a <_printf_float+0x32a>
 800d3cc:	e689      	b.n	800d0e2 <_printf_float+0xc2>
 800d3ce:	9a05      	ldr	r2, [sp, #20]
 800d3d0:	464b      	mov	r3, r9
 800d3d2:	4442      	add	r2, r8
 800d3d4:	4631      	mov	r1, r6
 800d3d6:	4628      	mov	r0, r5
 800d3d8:	47b8      	blx	r7
 800d3da:	3001      	adds	r0, #1
 800d3dc:	d1c1      	bne.n	800d362 <_printf_float+0x342>
 800d3de:	e680      	b.n	800d0e2 <_printf_float+0xc2>
 800d3e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d3e2:	2a01      	cmp	r2, #1
 800d3e4:	dc01      	bgt.n	800d3ea <_printf_float+0x3ca>
 800d3e6:	07db      	lsls	r3, r3, #31
 800d3e8:	d538      	bpl.n	800d45c <_printf_float+0x43c>
 800d3ea:	2301      	movs	r3, #1
 800d3ec:	4642      	mov	r2, r8
 800d3ee:	4631      	mov	r1, r6
 800d3f0:	4628      	mov	r0, r5
 800d3f2:	47b8      	blx	r7
 800d3f4:	3001      	adds	r0, #1
 800d3f6:	f43f ae74 	beq.w	800d0e2 <_printf_float+0xc2>
 800d3fa:	ee18 3a10 	vmov	r3, s16
 800d3fe:	4652      	mov	r2, sl
 800d400:	4631      	mov	r1, r6
 800d402:	4628      	mov	r0, r5
 800d404:	47b8      	blx	r7
 800d406:	3001      	adds	r0, #1
 800d408:	f43f ae6b 	beq.w	800d0e2 <_printf_float+0xc2>
 800d40c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800d410:	2200      	movs	r2, #0
 800d412:	2300      	movs	r3, #0
 800d414:	f7f3 fb78 	bl	8000b08 <__aeabi_dcmpeq>
 800d418:	b9d8      	cbnz	r0, 800d452 <_printf_float+0x432>
 800d41a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d41c:	f108 0201 	add.w	r2, r8, #1
 800d420:	3b01      	subs	r3, #1
 800d422:	4631      	mov	r1, r6
 800d424:	4628      	mov	r0, r5
 800d426:	47b8      	blx	r7
 800d428:	3001      	adds	r0, #1
 800d42a:	d10e      	bne.n	800d44a <_printf_float+0x42a>
 800d42c:	e659      	b.n	800d0e2 <_printf_float+0xc2>
 800d42e:	2301      	movs	r3, #1
 800d430:	4652      	mov	r2, sl
 800d432:	4631      	mov	r1, r6
 800d434:	4628      	mov	r0, r5
 800d436:	47b8      	blx	r7
 800d438:	3001      	adds	r0, #1
 800d43a:	f43f ae52 	beq.w	800d0e2 <_printf_float+0xc2>
 800d43e:	f108 0801 	add.w	r8, r8, #1
 800d442:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d444:	3b01      	subs	r3, #1
 800d446:	4543      	cmp	r3, r8
 800d448:	dcf1      	bgt.n	800d42e <_printf_float+0x40e>
 800d44a:	464b      	mov	r3, r9
 800d44c:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800d450:	e6dc      	b.n	800d20c <_printf_float+0x1ec>
 800d452:	f04f 0800 	mov.w	r8, #0
 800d456:	f104 0a1a 	add.w	sl, r4, #26
 800d45a:	e7f2      	b.n	800d442 <_printf_float+0x422>
 800d45c:	2301      	movs	r3, #1
 800d45e:	4642      	mov	r2, r8
 800d460:	e7df      	b.n	800d422 <_printf_float+0x402>
 800d462:	2301      	movs	r3, #1
 800d464:	464a      	mov	r2, r9
 800d466:	4631      	mov	r1, r6
 800d468:	4628      	mov	r0, r5
 800d46a:	47b8      	blx	r7
 800d46c:	3001      	adds	r0, #1
 800d46e:	f43f ae38 	beq.w	800d0e2 <_printf_float+0xc2>
 800d472:	f108 0801 	add.w	r8, r8, #1
 800d476:	68e3      	ldr	r3, [r4, #12]
 800d478:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800d47a:	1a5b      	subs	r3, r3, r1
 800d47c:	4543      	cmp	r3, r8
 800d47e:	dcf0      	bgt.n	800d462 <_printf_float+0x442>
 800d480:	e6fa      	b.n	800d278 <_printf_float+0x258>
 800d482:	f04f 0800 	mov.w	r8, #0
 800d486:	f104 0919 	add.w	r9, r4, #25
 800d48a:	e7f4      	b.n	800d476 <_printf_float+0x456>

0800d48c <_printf_common>:
 800d48c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d490:	4616      	mov	r6, r2
 800d492:	4699      	mov	r9, r3
 800d494:	688a      	ldr	r2, [r1, #8]
 800d496:	690b      	ldr	r3, [r1, #16]
 800d498:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800d49c:	4293      	cmp	r3, r2
 800d49e:	bfb8      	it	lt
 800d4a0:	4613      	movlt	r3, r2
 800d4a2:	6033      	str	r3, [r6, #0]
 800d4a4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800d4a8:	4607      	mov	r7, r0
 800d4aa:	460c      	mov	r4, r1
 800d4ac:	b10a      	cbz	r2, 800d4b2 <_printf_common+0x26>
 800d4ae:	3301      	adds	r3, #1
 800d4b0:	6033      	str	r3, [r6, #0]
 800d4b2:	6823      	ldr	r3, [r4, #0]
 800d4b4:	0699      	lsls	r1, r3, #26
 800d4b6:	bf42      	ittt	mi
 800d4b8:	6833      	ldrmi	r3, [r6, #0]
 800d4ba:	3302      	addmi	r3, #2
 800d4bc:	6033      	strmi	r3, [r6, #0]
 800d4be:	6825      	ldr	r5, [r4, #0]
 800d4c0:	f015 0506 	ands.w	r5, r5, #6
 800d4c4:	d106      	bne.n	800d4d4 <_printf_common+0x48>
 800d4c6:	f104 0a19 	add.w	sl, r4, #25
 800d4ca:	68e3      	ldr	r3, [r4, #12]
 800d4cc:	6832      	ldr	r2, [r6, #0]
 800d4ce:	1a9b      	subs	r3, r3, r2
 800d4d0:	42ab      	cmp	r3, r5
 800d4d2:	dc26      	bgt.n	800d522 <_printf_common+0x96>
 800d4d4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800d4d8:	1e13      	subs	r3, r2, #0
 800d4da:	6822      	ldr	r2, [r4, #0]
 800d4dc:	bf18      	it	ne
 800d4de:	2301      	movne	r3, #1
 800d4e0:	0692      	lsls	r2, r2, #26
 800d4e2:	d42b      	bmi.n	800d53c <_printf_common+0xb0>
 800d4e4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800d4e8:	4649      	mov	r1, r9
 800d4ea:	4638      	mov	r0, r7
 800d4ec:	47c0      	blx	r8
 800d4ee:	3001      	adds	r0, #1
 800d4f0:	d01e      	beq.n	800d530 <_printf_common+0xa4>
 800d4f2:	6823      	ldr	r3, [r4, #0]
 800d4f4:	68e5      	ldr	r5, [r4, #12]
 800d4f6:	6832      	ldr	r2, [r6, #0]
 800d4f8:	f003 0306 	and.w	r3, r3, #6
 800d4fc:	2b04      	cmp	r3, #4
 800d4fe:	bf08      	it	eq
 800d500:	1aad      	subeq	r5, r5, r2
 800d502:	68a3      	ldr	r3, [r4, #8]
 800d504:	6922      	ldr	r2, [r4, #16]
 800d506:	bf0c      	ite	eq
 800d508:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800d50c:	2500      	movne	r5, #0
 800d50e:	4293      	cmp	r3, r2
 800d510:	bfc4      	itt	gt
 800d512:	1a9b      	subgt	r3, r3, r2
 800d514:	18ed      	addgt	r5, r5, r3
 800d516:	2600      	movs	r6, #0
 800d518:	341a      	adds	r4, #26
 800d51a:	42b5      	cmp	r5, r6
 800d51c:	d11a      	bne.n	800d554 <_printf_common+0xc8>
 800d51e:	2000      	movs	r0, #0
 800d520:	e008      	b.n	800d534 <_printf_common+0xa8>
 800d522:	2301      	movs	r3, #1
 800d524:	4652      	mov	r2, sl
 800d526:	4649      	mov	r1, r9
 800d528:	4638      	mov	r0, r7
 800d52a:	47c0      	blx	r8
 800d52c:	3001      	adds	r0, #1
 800d52e:	d103      	bne.n	800d538 <_printf_common+0xac>
 800d530:	f04f 30ff 	mov.w	r0, #4294967295
 800d534:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d538:	3501      	adds	r5, #1
 800d53a:	e7c6      	b.n	800d4ca <_printf_common+0x3e>
 800d53c:	18e1      	adds	r1, r4, r3
 800d53e:	1c5a      	adds	r2, r3, #1
 800d540:	2030      	movs	r0, #48	; 0x30
 800d542:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800d546:	4422      	add	r2, r4
 800d548:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800d54c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800d550:	3302      	adds	r3, #2
 800d552:	e7c7      	b.n	800d4e4 <_printf_common+0x58>
 800d554:	2301      	movs	r3, #1
 800d556:	4622      	mov	r2, r4
 800d558:	4649      	mov	r1, r9
 800d55a:	4638      	mov	r0, r7
 800d55c:	47c0      	blx	r8
 800d55e:	3001      	adds	r0, #1
 800d560:	d0e6      	beq.n	800d530 <_printf_common+0xa4>
 800d562:	3601      	adds	r6, #1
 800d564:	e7d9      	b.n	800d51a <_printf_common+0x8e>
	...

0800d568 <_printf_i>:
 800d568:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800d56c:	7e0f      	ldrb	r7, [r1, #24]
 800d56e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800d570:	2f78      	cmp	r7, #120	; 0x78
 800d572:	4691      	mov	r9, r2
 800d574:	4680      	mov	r8, r0
 800d576:	460c      	mov	r4, r1
 800d578:	469a      	mov	sl, r3
 800d57a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800d57e:	d807      	bhi.n	800d590 <_printf_i+0x28>
 800d580:	2f62      	cmp	r7, #98	; 0x62
 800d582:	d80a      	bhi.n	800d59a <_printf_i+0x32>
 800d584:	2f00      	cmp	r7, #0
 800d586:	f000 80d8 	beq.w	800d73a <_printf_i+0x1d2>
 800d58a:	2f58      	cmp	r7, #88	; 0x58
 800d58c:	f000 80a3 	beq.w	800d6d6 <_printf_i+0x16e>
 800d590:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800d594:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800d598:	e03a      	b.n	800d610 <_printf_i+0xa8>
 800d59a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800d59e:	2b15      	cmp	r3, #21
 800d5a0:	d8f6      	bhi.n	800d590 <_printf_i+0x28>
 800d5a2:	a101      	add	r1, pc, #4	; (adr r1, 800d5a8 <_printf_i+0x40>)
 800d5a4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800d5a8:	0800d601 	.word	0x0800d601
 800d5ac:	0800d615 	.word	0x0800d615
 800d5b0:	0800d591 	.word	0x0800d591
 800d5b4:	0800d591 	.word	0x0800d591
 800d5b8:	0800d591 	.word	0x0800d591
 800d5bc:	0800d591 	.word	0x0800d591
 800d5c0:	0800d615 	.word	0x0800d615
 800d5c4:	0800d591 	.word	0x0800d591
 800d5c8:	0800d591 	.word	0x0800d591
 800d5cc:	0800d591 	.word	0x0800d591
 800d5d0:	0800d591 	.word	0x0800d591
 800d5d4:	0800d721 	.word	0x0800d721
 800d5d8:	0800d645 	.word	0x0800d645
 800d5dc:	0800d703 	.word	0x0800d703
 800d5e0:	0800d591 	.word	0x0800d591
 800d5e4:	0800d591 	.word	0x0800d591
 800d5e8:	0800d743 	.word	0x0800d743
 800d5ec:	0800d591 	.word	0x0800d591
 800d5f0:	0800d645 	.word	0x0800d645
 800d5f4:	0800d591 	.word	0x0800d591
 800d5f8:	0800d591 	.word	0x0800d591
 800d5fc:	0800d70b 	.word	0x0800d70b
 800d600:	682b      	ldr	r3, [r5, #0]
 800d602:	1d1a      	adds	r2, r3, #4
 800d604:	681b      	ldr	r3, [r3, #0]
 800d606:	602a      	str	r2, [r5, #0]
 800d608:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800d60c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800d610:	2301      	movs	r3, #1
 800d612:	e0a3      	b.n	800d75c <_printf_i+0x1f4>
 800d614:	6820      	ldr	r0, [r4, #0]
 800d616:	6829      	ldr	r1, [r5, #0]
 800d618:	0606      	lsls	r6, r0, #24
 800d61a:	f101 0304 	add.w	r3, r1, #4
 800d61e:	d50a      	bpl.n	800d636 <_printf_i+0xce>
 800d620:	680e      	ldr	r6, [r1, #0]
 800d622:	602b      	str	r3, [r5, #0]
 800d624:	2e00      	cmp	r6, #0
 800d626:	da03      	bge.n	800d630 <_printf_i+0xc8>
 800d628:	232d      	movs	r3, #45	; 0x2d
 800d62a:	4276      	negs	r6, r6
 800d62c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d630:	485e      	ldr	r0, [pc, #376]	; (800d7ac <_printf_i+0x244>)
 800d632:	230a      	movs	r3, #10
 800d634:	e019      	b.n	800d66a <_printf_i+0x102>
 800d636:	680e      	ldr	r6, [r1, #0]
 800d638:	602b      	str	r3, [r5, #0]
 800d63a:	f010 0f40 	tst.w	r0, #64	; 0x40
 800d63e:	bf18      	it	ne
 800d640:	b236      	sxthne	r6, r6
 800d642:	e7ef      	b.n	800d624 <_printf_i+0xbc>
 800d644:	682b      	ldr	r3, [r5, #0]
 800d646:	6820      	ldr	r0, [r4, #0]
 800d648:	1d19      	adds	r1, r3, #4
 800d64a:	6029      	str	r1, [r5, #0]
 800d64c:	0601      	lsls	r1, r0, #24
 800d64e:	d501      	bpl.n	800d654 <_printf_i+0xec>
 800d650:	681e      	ldr	r6, [r3, #0]
 800d652:	e002      	b.n	800d65a <_printf_i+0xf2>
 800d654:	0646      	lsls	r6, r0, #25
 800d656:	d5fb      	bpl.n	800d650 <_printf_i+0xe8>
 800d658:	881e      	ldrh	r6, [r3, #0]
 800d65a:	4854      	ldr	r0, [pc, #336]	; (800d7ac <_printf_i+0x244>)
 800d65c:	2f6f      	cmp	r7, #111	; 0x6f
 800d65e:	bf0c      	ite	eq
 800d660:	2308      	moveq	r3, #8
 800d662:	230a      	movne	r3, #10
 800d664:	2100      	movs	r1, #0
 800d666:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800d66a:	6865      	ldr	r5, [r4, #4]
 800d66c:	60a5      	str	r5, [r4, #8]
 800d66e:	2d00      	cmp	r5, #0
 800d670:	bfa2      	ittt	ge
 800d672:	6821      	ldrge	r1, [r4, #0]
 800d674:	f021 0104 	bicge.w	r1, r1, #4
 800d678:	6021      	strge	r1, [r4, #0]
 800d67a:	b90e      	cbnz	r6, 800d680 <_printf_i+0x118>
 800d67c:	2d00      	cmp	r5, #0
 800d67e:	d04d      	beq.n	800d71c <_printf_i+0x1b4>
 800d680:	4615      	mov	r5, r2
 800d682:	fbb6 f1f3 	udiv	r1, r6, r3
 800d686:	fb03 6711 	mls	r7, r3, r1, r6
 800d68a:	5dc7      	ldrb	r7, [r0, r7]
 800d68c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800d690:	4637      	mov	r7, r6
 800d692:	42bb      	cmp	r3, r7
 800d694:	460e      	mov	r6, r1
 800d696:	d9f4      	bls.n	800d682 <_printf_i+0x11a>
 800d698:	2b08      	cmp	r3, #8
 800d69a:	d10b      	bne.n	800d6b4 <_printf_i+0x14c>
 800d69c:	6823      	ldr	r3, [r4, #0]
 800d69e:	07de      	lsls	r6, r3, #31
 800d6a0:	d508      	bpl.n	800d6b4 <_printf_i+0x14c>
 800d6a2:	6923      	ldr	r3, [r4, #16]
 800d6a4:	6861      	ldr	r1, [r4, #4]
 800d6a6:	4299      	cmp	r1, r3
 800d6a8:	bfde      	ittt	le
 800d6aa:	2330      	movle	r3, #48	; 0x30
 800d6ac:	f805 3c01 	strble.w	r3, [r5, #-1]
 800d6b0:	f105 35ff 	addle.w	r5, r5, #4294967295
 800d6b4:	1b52      	subs	r2, r2, r5
 800d6b6:	6122      	str	r2, [r4, #16]
 800d6b8:	f8cd a000 	str.w	sl, [sp]
 800d6bc:	464b      	mov	r3, r9
 800d6be:	aa03      	add	r2, sp, #12
 800d6c0:	4621      	mov	r1, r4
 800d6c2:	4640      	mov	r0, r8
 800d6c4:	f7ff fee2 	bl	800d48c <_printf_common>
 800d6c8:	3001      	adds	r0, #1
 800d6ca:	d14c      	bne.n	800d766 <_printf_i+0x1fe>
 800d6cc:	f04f 30ff 	mov.w	r0, #4294967295
 800d6d0:	b004      	add	sp, #16
 800d6d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d6d6:	4835      	ldr	r0, [pc, #212]	; (800d7ac <_printf_i+0x244>)
 800d6d8:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800d6dc:	6829      	ldr	r1, [r5, #0]
 800d6de:	6823      	ldr	r3, [r4, #0]
 800d6e0:	f851 6b04 	ldr.w	r6, [r1], #4
 800d6e4:	6029      	str	r1, [r5, #0]
 800d6e6:	061d      	lsls	r5, r3, #24
 800d6e8:	d514      	bpl.n	800d714 <_printf_i+0x1ac>
 800d6ea:	07df      	lsls	r7, r3, #31
 800d6ec:	bf44      	itt	mi
 800d6ee:	f043 0320 	orrmi.w	r3, r3, #32
 800d6f2:	6023      	strmi	r3, [r4, #0]
 800d6f4:	b91e      	cbnz	r6, 800d6fe <_printf_i+0x196>
 800d6f6:	6823      	ldr	r3, [r4, #0]
 800d6f8:	f023 0320 	bic.w	r3, r3, #32
 800d6fc:	6023      	str	r3, [r4, #0]
 800d6fe:	2310      	movs	r3, #16
 800d700:	e7b0      	b.n	800d664 <_printf_i+0xfc>
 800d702:	6823      	ldr	r3, [r4, #0]
 800d704:	f043 0320 	orr.w	r3, r3, #32
 800d708:	6023      	str	r3, [r4, #0]
 800d70a:	2378      	movs	r3, #120	; 0x78
 800d70c:	4828      	ldr	r0, [pc, #160]	; (800d7b0 <_printf_i+0x248>)
 800d70e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800d712:	e7e3      	b.n	800d6dc <_printf_i+0x174>
 800d714:	0659      	lsls	r1, r3, #25
 800d716:	bf48      	it	mi
 800d718:	b2b6      	uxthmi	r6, r6
 800d71a:	e7e6      	b.n	800d6ea <_printf_i+0x182>
 800d71c:	4615      	mov	r5, r2
 800d71e:	e7bb      	b.n	800d698 <_printf_i+0x130>
 800d720:	682b      	ldr	r3, [r5, #0]
 800d722:	6826      	ldr	r6, [r4, #0]
 800d724:	6961      	ldr	r1, [r4, #20]
 800d726:	1d18      	adds	r0, r3, #4
 800d728:	6028      	str	r0, [r5, #0]
 800d72a:	0635      	lsls	r5, r6, #24
 800d72c:	681b      	ldr	r3, [r3, #0]
 800d72e:	d501      	bpl.n	800d734 <_printf_i+0x1cc>
 800d730:	6019      	str	r1, [r3, #0]
 800d732:	e002      	b.n	800d73a <_printf_i+0x1d2>
 800d734:	0670      	lsls	r0, r6, #25
 800d736:	d5fb      	bpl.n	800d730 <_printf_i+0x1c8>
 800d738:	8019      	strh	r1, [r3, #0]
 800d73a:	2300      	movs	r3, #0
 800d73c:	6123      	str	r3, [r4, #16]
 800d73e:	4615      	mov	r5, r2
 800d740:	e7ba      	b.n	800d6b8 <_printf_i+0x150>
 800d742:	682b      	ldr	r3, [r5, #0]
 800d744:	1d1a      	adds	r2, r3, #4
 800d746:	602a      	str	r2, [r5, #0]
 800d748:	681d      	ldr	r5, [r3, #0]
 800d74a:	6862      	ldr	r2, [r4, #4]
 800d74c:	2100      	movs	r1, #0
 800d74e:	4628      	mov	r0, r5
 800d750:	f7f2 fd66 	bl	8000220 <memchr>
 800d754:	b108      	cbz	r0, 800d75a <_printf_i+0x1f2>
 800d756:	1b40      	subs	r0, r0, r5
 800d758:	6060      	str	r0, [r4, #4]
 800d75a:	6863      	ldr	r3, [r4, #4]
 800d75c:	6123      	str	r3, [r4, #16]
 800d75e:	2300      	movs	r3, #0
 800d760:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d764:	e7a8      	b.n	800d6b8 <_printf_i+0x150>
 800d766:	6923      	ldr	r3, [r4, #16]
 800d768:	462a      	mov	r2, r5
 800d76a:	4649      	mov	r1, r9
 800d76c:	4640      	mov	r0, r8
 800d76e:	47d0      	blx	sl
 800d770:	3001      	adds	r0, #1
 800d772:	d0ab      	beq.n	800d6cc <_printf_i+0x164>
 800d774:	6823      	ldr	r3, [r4, #0]
 800d776:	079b      	lsls	r3, r3, #30
 800d778:	d413      	bmi.n	800d7a2 <_printf_i+0x23a>
 800d77a:	68e0      	ldr	r0, [r4, #12]
 800d77c:	9b03      	ldr	r3, [sp, #12]
 800d77e:	4298      	cmp	r0, r3
 800d780:	bfb8      	it	lt
 800d782:	4618      	movlt	r0, r3
 800d784:	e7a4      	b.n	800d6d0 <_printf_i+0x168>
 800d786:	2301      	movs	r3, #1
 800d788:	4632      	mov	r2, r6
 800d78a:	4649      	mov	r1, r9
 800d78c:	4640      	mov	r0, r8
 800d78e:	47d0      	blx	sl
 800d790:	3001      	adds	r0, #1
 800d792:	d09b      	beq.n	800d6cc <_printf_i+0x164>
 800d794:	3501      	adds	r5, #1
 800d796:	68e3      	ldr	r3, [r4, #12]
 800d798:	9903      	ldr	r1, [sp, #12]
 800d79a:	1a5b      	subs	r3, r3, r1
 800d79c:	42ab      	cmp	r3, r5
 800d79e:	dcf2      	bgt.n	800d786 <_printf_i+0x21e>
 800d7a0:	e7eb      	b.n	800d77a <_printf_i+0x212>
 800d7a2:	2500      	movs	r5, #0
 800d7a4:	f104 0619 	add.w	r6, r4, #25
 800d7a8:	e7f5      	b.n	800d796 <_printf_i+0x22e>
 800d7aa:	bf00      	nop
 800d7ac:	080112d6 	.word	0x080112d6
 800d7b0:	080112e7 	.word	0x080112e7

0800d7b4 <siprintf>:
 800d7b4:	b40e      	push	{r1, r2, r3}
 800d7b6:	b500      	push	{lr}
 800d7b8:	b09c      	sub	sp, #112	; 0x70
 800d7ba:	ab1d      	add	r3, sp, #116	; 0x74
 800d7bc:	9002      	str	r0, [sp, #8]
 800d7be:	9006      	str	r0, [sp, #24]
 800d7c0:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800d7c4:	4809      	ldr	r0, [pc, #36]	; (800d7ec <siprintf+0x38>)
 800d7c6:	9107      	str	r1, [sp, #28]
 800d7c8:	9104      	str	r1, [sp, #16]
 800d7ca:	4909      	ldr	r1, [pc, #36]	; (800d7f0 <siprintf+0x3c>)
 800d7cc:	f853 2b04 	ldr.w	r2, [r3], #4
 800d7d0:	9105      	str	r1, [sp, #20]
 800d7d2:	6800      	ldr	r0, [r0, #0]
 800d7d4:	9301      	str	r3, [sp, #4]
 800d7d6:	a902      	add	r1, sp, #8
 800d7d8:	f001 fb78 	bl	800eecc <_svfiprintf_r>
 800d7dc:	9b02      	ldr	r3, [sp, #8]
 800d7de:	2200      	movs	r2, #0
 800d7e0:	701a      	strb	r2, [r3, #0]
 800d7e2:	b01c      	add	sp, #112	; 0x70
 800d7e4:	f85d eb04 	ldr.w	lr, [sp], #4
 800d7e8:	b003      	add	sp, #12
 800d7ea:	4770      	bx	lr
 800d7ec:	20000148 	.word	0x20000148
 800d7f0:	ffff0208 	.word	0xffff0208

0800d7f4 <quorem>:
 800d7f4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d7f8:	6903      	ldr	r3, [r0, #16]
 800d7fa:	690c      	ldr	r4, [r1, #16]
 800d7fc:	42a3      	cmp	r3, r4
 800d7fe:	4607      	mov	r7, r0
 800d800:	f2c0 8081 	blt.w	800d906 <quorem+0x112>
 800d804:	3c01      	subs	r4, #1
 800d806:	f101 0814 	add.w	r8, r1, #20
 800d80a:	f100 0514 	add.w	r5, r0, #20
 800d80e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800d812:	9301      	str	r3, [sp, #4]
 800d814:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800d818:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800d81c:	3301      	adds	r3, #1
 800d81e:	429a      	cmp	r2, r3
 800d820:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800d824:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800d828:	fbb2 f6f3 	udiv	r6, r2, r3
 800d82c:	d331      	bcc.n	800d892 <quorem+0x9e>
 800d82e:	f04f 0e00 	mov.w	lr, #0
 800d832:	4640      	mov	r0, r8
 800d834:	46ac      	mov	ip, r5
 800d836:	46f2      	mov	sl, lr
 800d838:	f850 2b04 	ldr.w	r2, [r0], #4
 800d83c:	b293      	uxth	r3, r2
 800d83e:	fb06 e303 	mla	r3, r6, r3, lr
 800d842:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800d846:	b29b      	uxth	r3, r3
 800d848:	ebaa 0303 	sub.w	r3, sl, r3
 800d84c:	f8dc a000 	ldr.w	sl, [ip]
 800d850:	0c12      	lsrs	r2, r2, #16
 800d852:	fa13 f38a 	uxtah	r3, r3, sl
 800d856:	fb06 e202 	mla	r2, r6, r2, lr
 800d85a:	9300      	str	r3, [sp, #0]
 800d85c:	9b00      	ldr	r3, [sp, #0]
 800d85e:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800d862:	b292      	uxth	r2, r2
 800d864:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800d868:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800d86c:	f8bd 3000 	ldrh.w	r3, [sp]
 800d870:	4581      	cmp	r9, r0
 800d872:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800d876:	f84c 3b04 	str.w	r3, [ip], #4
 800d87a:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800d87e:	d2db      	bcs.n	800d838 <quorem+0x44>
 800d880:	f855 300b 	ldr.w	r3, [r5, fp]
 800d884:	b92b      	cbnz	r3, 800d892 <quorem+0x9e>
 800d886:	9b01      	ldr	r3, [sp, #4]
 800d888:	3b04      	subs	r3, #4
 800d88a:	429d      	cmp	r5, r3
 800d88c:	461a      	mov	r2, r3
 800d88e:	d32e      	bcc.n	800d8ee <quorem+0xfa>
 800d890:	613c      	str	r4, [r7, #16]
 800d892:	4638      	mov	r0, r7
 800d894:	f001 f8c6 	bl	800ea24 <__mcmp>
 800d898:	2800      	cmp	r0, #0
 800d89a:	db24      	blt.n	800d8e6 <quorem+0xf2>
 800d89c:	3601      	adds	r6, #1
 800d89e:	4628      	mov	r0, r5
 800d8a0:	f04f 0c00 	mov.w	ip, #0
 800d8a4:	f858 2b04 	ldr.w	r2, [r8], #4
 800d8a8:	f8d0 e000 	ldr.w	lr, [r0]
 800d8ac:	b293      	uxth	r3, r2
 800d8ae:	ebac 0303 	sub.w	r3, ip, r3
 800d8b2:	0c12      	lsrs	r2, r2, #16
 800d8b4:	fa13 f38e 	uxtah	r3, r3, lr
 800d8b8:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800d8bc:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800d8c0:	b29b      	uxth	r3, r3
 800d8c2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800d8c6:	45c1      	cmp	r9, r8
 800d8c8:	f840 3b04 	str.w	r3, [r0], #4
 800d8cc:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800d8d0:	d2e8      	bcs.n	800d8a4 <quorem+0xb0>
 800d8d2:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800d8d6:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800d8da:	b922      	cbnz	r2, 800d8e6 <quorem+0xf2>
 800d8dc:	3b04      	subs	r3, #4
 800d8de:	429d      	cmp	r5, r3
 800d8e0:	461a      	mov	r2, r3
 800d8e2:	d30a      	bcc.n	800d8fa <quorem+0x106>
 800d8e4:	613c      	str	r4, [r7, #16]
 800d8e6:	4630      	mov	r0, r6
 800d8e8:	b003      	add	sp, #12
 800d8ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d8ee:	6812      	ldr	r2, [r2, #0]
 800d8f0:	3b04      	subs	r3, #4
 800d8f2:	2a00      	cmp	r2, #0
 800d8f4:	d1cc      	bne.n	800d890 <quorem+0x9c>
 800d8f6:	3c01      	subs	r4, #1
 800d8f8:	e7c7      	b.n	800d88a <quorem+0x96>
 800d8fa:	6812      	ldr	r2, [r2, #0]
 800d8fc:	3b04      	subs	r3, #4
 800d8fe:	2a00      	cmp	r2, #0
 800d900:	d1f0      	bne.n	800d8e4 <quorem+0xf0>
 800d902:	3c01      	subs	r4, #1
 800d904:	e7eb      	b.n	800d8de <quorem+0xea>
 800d906:	2000      	movs	r0, #0
 800d908:	e7ee      	b.n	800d8e8 <quorem+0xf4>
 800d90a:	0000      	movs	r0, r0
 800d90c:	0000      	movs	r0, r0
	...

0800d910 <_dtoa_r>:
 800d910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d914:	ed2d 8b04 	vpush	{d8-d9}
 800d918:	ec57 6b10 	vmov	r6, r7, d0
 800d91c:	b093      	sub	sp, #76	; 0x4c
 800d91e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800d920:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 800d924:	9106      	str	r1, [sp, #24]
 800d926:	ee10 aa10 	vmov	sl, s0
 800d92a:	4604      	mov	r4, r0
 800d92c:	9209      	str	r2, [sp, #36]	; 0x24
 800d92e:	930c      	str	r3, [sp, #48]	; 0x30
 800d930:	46bb      	mov	fp, r7
 800d932:	b975      	cbnz	r5, 800d952 <_dtoa_r+0x42>
 800d934:	2010      	movs	r0, #16
 800d936:	f000 fddd 	bl	800e4f4 <malloc>
 800d93a:	4602      	mov	r2, r0
 800d93c:	6260      	str	r0, [r4, #36]	; 0x24
 800d93e:	b920      	cbnz	r0, 800d94a <_dtoa_r+0x3a>
 800d940:	4ba7      	ldr	r3, [pc, #668]	; (800dbe0 <_dtoa_r+0x2d0>)
 800d942:	21ea      	movs	r1, #234	; 0xea
 800d944:	48a7      	ldr	r0, [pc, #668]	; (800dbe4 <_dtoa_r+0x2d4>)
 800d946:	f001 fbd1 	bl	800f0ec <__assert_func>
 800d94a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800d94e:	6005      	str	r5, [r0, #0]
 800d950:	60c5      	str	r5, [r0, #12]
 800d952:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d954:	6819      	ldr	r1, [r3, #0]
 800d956:	b151      	cbz	r1, 800d96e <_dtoa_r+0x5e>
 800d958:	685a      	ldr	r2, [r3, #4]
 800d95a:	604a      	str	r2, [r1, #4]
 800d95c:	2301      	movs	r3, #1
 800d95e:	4093      	lsls	r3, r2
 800d960:	608b      	str	r3, [r1, #8]
 800d962:	4620      	mov	r0, r4
 800d964:	f000 fe1c 	bl	800e5a0 <_Bfree>
 800d968:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d96a:	2200      	movs	r2, #0
 800d96c:	601a      	str	r2, [r3, #0]
 800d96e:	1e3b      	subs	r3, r7, #0
 800d970:	bfaa      	itet	ge
 800d972:	2300      	movge	r3, #0
 800d974:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 800d978:	f8c8 3000 	strge.w	r3, [r8]
 800d97c:	4b9a      	ldr	r3, [pc, #616]	; (800dbe8 <_dtoa_r+0x2d8>)
 800d97e:	bfbc      	itt	lt
 800d980:	2201      	movlt	r2, #1
 800d982:	f8c8 2000 	strlt.w	r2, [r8]
 800d986:	ea33 030b 	bics.w	r3, r3, fp
 800d98a:	d11b      	bne.n	800d9c4 <_dtoa_r+0xb4>
 800d98c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800d98e:	f242 730f 	movw	r3, #9999	; 0x270f
 800d992:	6013      	str	r3, [r2, #0]
 800d994:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800d998:	4333      	orrs	r3, r6
 800d99a:	f000 8592 	beq.w	800e4c2 <_dtoa_r+0xbb2>
 800d99e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800d9a0:	b963      	cbnz	r3, 800d9bc <_dtoa_r+0xac>
 800d9a2:	4b92      	ldr	r3, [pc, #584]	; (800dbec <_dtoa_r+0x2dc>)
 800d9a4:	e022      	b.n	800d9ec <_dtoa_r+0xdc>
 800d9a6:	4b92      	ldr	r3, [pc, #584]	; (800dbf0 <_dtoa_r+0x2e0>)
 800d9a8:	9301      	str	r3, [sp, #4]
 800d9aa:	3308      	adds	r3, #8
 800d9ac:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800d9ae:	6013      	str	r3, [r2, #0]
 800d9b0:	9801      	ldr	r0, [sp, #4]
 800d9b2:	b013      	add	sp, #76	; 0x4c
 800d9b4:	ecbd 8b04 	vpop	{d8-d9}
 800d9b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d9bc:	4b8b      	ldr	r3, [pc, #556]	; (800dbec <_dtoa_r+0x2dc>)
 800d9be:	9301      	str	r3, [sp, #4]
 800d9c0:	3303      	adds	r3, #3
 800d9c2:	e7f3      	b.n	800d9ac <_dtoa_r+0x9c>
 800d9c4:	2200      	movs	r2, #0
 800d9c6:	2300      	movs	r3, #0
 800d9c8:	4650      	mov	r0, sl
 800d9ca:	4659      	mov	r1, fp
 800d9cc:	f7f3 f89c 	bl	8000b08 <__aeabi_dcmpeq>
 800d9d0:	ec4b ab19 	vmov	d9, sl, fp
 800d9d4:	4680      	mov	r8, r0
 800d9d6:	b158      	cbz	r0, 800d9f0 <_dtoa_r+0xe0>
 800d9d8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800d9da:	2301      	movs	r3, #1
 800d9dc:	6013      	str	r3, [r2, #0]
 800d9de:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800d9e0:	2b00      	cmp	r3, #0
 800d9e2:	f000 856b 	beq.w	800e4bc <_dtoa_r+0xbac>
 800d9e6:	4883      	ldr	r0, [pc, #524]	; (800dbf4 <_dtoa_r+0x2e4>)
 800d9e8:	6018      	str	r0, [r3, #0]
 800d9ea:	1e43      	subs	r3, r0, #1
 800d9ec:	9301      	str	r3, [sp, #4]
 800d9ee:	e7df      	b.n	800d9b0 <_dtoa_r+0xa0>
 800d9f0:	ec4b ab10 	vmov	d0, sl, fp
 800d9f4:	aa10      	add	r2, sp, #64	; 0x40
 800d9f6:	a911      	add	r1, sp, #68	; 0x44
 800d9f8:	4620      	mov	r0, r4
 800d9fa:	f001 f8b9 	bl	800eb70 <__d2b>
 800d9fe:	f3cb 550a 	ubfx	r5, fp, #20, #11
 800da02:	ee08 0a10 	vmov	s16, r0
 800da06:	2d00      	cmp	r5, #0
 800da08:	f000 8084 	beq.w	800db14 <_dtoa_r+0x204>
 800da0c:	ee19 3a90 	vmov	r3, s19
 800da10:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800da14:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 800da18:	4656      	mov	r6, sl
 800da1a:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 800da1e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800da22:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 800da26:	4b74      	ldr	r3, [pc, #464]	; (800dbf8 <_dtoa_r+0x2e8>)
 800da28:	2200      	movs	r2, #0
 800da2a:	4630      	mov	r0, r6
 800da2c:	4639      	mov	r1, r7
 800da2e:	f7f2 fc4b 	bl	80002c8 <__aeabi_dsub>
 800da32:	a365      	add	r3, pc, #404	; (adr r3, 800dbc8 <_dtoa_r+0x2b8>)
 800da34:	e9d3 2300 	ldrd	r2, r3, [r3]
 800da38:	f7f2 fdfe 	bl	8000638 <__aeabi_dmul>
 800da3c:	a364      	add	r3, pc, #400	; (adr r3, 800dbd0 <_dtoa_r+0x2c0>)
 800da3e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800da42:	f7f2 fc43 	bl	80002cc <__adddf3>
 800da46:	4606      	mov	r6, r0
 800da48:	4628      	mov	r0, r5
 800da4a:	460f      	mov	r7, r1
 800da4c:	f7f2 fd8a 	bl	8000564 <__aeabi_i2d>
 800da50:	a361      	add	r3, pc, #388	; (adr r3, 800dbd8 <_dtoa_r+0x2c8>)
 800da52:	e9d3 2300 	ldrd	r2, r3, [r3]
 800da56:	f7f2 fdef 	bl	8000638 <__aeabi_dmul>
 800da5a:	4602      	mov	r2, r0
 800da5c:	460b      	mov	r3, r1
 800da5e:	4630      	mov	r0, r6
 800da60:	4639      	mov	r1, r7
 800da62:	f7f2 fc33 	bl	80002cc <__adddf3>
 800da66:	4606      	mov	r6, r0
 800da68:	460f      	mov	r7, r1
 800da6a:	f7f3 f895 	bl	8000b98 <__aeabi_d2iz>
 800da6e:	2200      	movs	r2, #0
 800da70:	9000      	str	r0, [sp, #0]
 800da72:	2300      	movs	r3, #0
 800da74:	4630      	mov	r0, r6
 800da76:	4639      	mov	r1, r7
 800da78:	f7f3 f850 	bl	8000b1c <__aeabi_dcmplt>
 800da7c:	b150      	cbz	r0, 800da94 <_dtoa_r+0x184>
 800da7e:	9800      	ldr	r0, [sp, #0]
 800da80:	f7f2 fd70 	bl	8000564 <__aeabi_i2d>
 800da84:	4632      	mov	r2, r6
 800da86:	463b      	mov	r3, r7
 800da88:	f7f3 f83e 	bl	8000b08 <__aeabi_dcmpeq>
 800da8c:	b910      	cbnz	r0, 800da94 <_dtoa_r+0x184>
 800da8e:	9b00      	ldr	r3, [sp, #0]
 800da90:	3b01      	subs	r3, #1
 800da92:	9300      	str	r3, [sp, #0]
 800da94:	9b00      	ldr	r3, [sp, #0]
 800da96:	2b16      	cmp	r3, #22
 800da98:	d85a      	bhi.n	800db50 <_dtoa_r+0x240>
 800da9a:	9a00      	ldr	r2, [sp, #0]
 800da9c:	4b57      	ldr	r3, [pc, #348]	; (800dbfc <_dtoa_r+0x2ec>)
 800da9e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800daa2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800daa6:	ec51 0b19 	vmov	r0, r1, d9
 800daaa:	f7f3 f837 	bl	8000b1c <__aeabi_dcmplt>
 800daae:	2800      	cmp	r0, #0
 800dab0:	d050      	beq.n	800db54 <_dtoa_r+0x244>
 800dab2:	9b00      	ldr	r3, [sp, #0]
 800dab4:	3b01      	subs	r3, #1
 800dab6:	9300      	str	r3, [sp, #0]
 800dab8:	2300      	movs	r3, #0
 800daba:	930b      	str	r3, [sp, #44]	; 0x2c
 800dabc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800dabe:	1b5d      	subs	r5, r3, r5
 800dac0:	1e6b      	subs	r3, r5, #1
 800dac2:	9305      	str	r3, [sp, #20]
 800dac4:	bf45      	ittet	mi
 800dac6:	f1c5 0301 	rsbmi	r3, r5, #1
 800daca:	9304      	strmi	r3, [sp, #16]
 800dacc:	2300      	movpl	r3, #0
 800dace:	2300      	movmi	r3, #0
 800dad0:	bf4c      	ite	mi
 800dad2:	9305      	strmi	r3, [sp, #20]
 800dad4:	9304      	strpl	r3, [sp, #16]
 800dad6:	9b00      	ldr	r3, [sp, #0]
 800dad8:	2b00      	cmp	r3, #0
 800dada:	db3d      	blt.n	800db58 <_dtoa_r+0x248>
 800dadc:	9b05      	ldr	r3, [sp, #20]
 800dade:	9a00      	ldr	r2, [sp, #0]
 800dae0:	920a      	str	r2, [sp, #40]	; 0x28
 800dae2:	4413      	add	r3, r2
 800dae4:	9305      	str	r3, [sp, #20]
 800dae6:	2300      	movs	r3, #0
 800dae8:	9307      	str	r3, [sp, #28]
 800daea:	9b06      	ldr	r3, [sp, #24]
 800daec:	2b09      	cmp	r3, #9
 800daee:	f200 8089 	bhi.w	800dc04 <_dtoa_r+0x2f4>
 800daf2:	2b05      	cmp	r3, #5
 800daf4:	bfc4      	itt	gt
 800daf6:	3b04      	subgt	r3, #4
 800daf8:	9306      	strgt	r3, [sp, #24]
 800dafa:	9b06      	ldr	r3, [sp, #24]
 800dafc:	f1a3 0302 	sub.w	r3, r3, #2
 800db00:	bfcc      	ite	gt
 800db02:	2500      	movgt	r5, #0
 800db04:	2501      	movle	r5, #1
 800db06:	2b03      	cmp	r3, #3
 800db08:	f200 8087 	bhi.w	800dc1a <_dtoa_r+0x30a>
 800db0c:	e8df f003 	tbb	[pc, r3]
 800db10:	59383a2d 	.word	0x59383a2d
 800db14:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 800db18:	441d      	add	r5, r3
 800db1a:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800db1e:	2b20      	cmp	r3, #32
 800db20:	bfc1      	itttt	gt
 800db22:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800db26:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 800db2a:	fa0b f303 	lslgt.w	r3, fp, r3
 800db2e:	fa26 f000 	lsrgt.w	r0, r6, r0
 800db32:	bfda      	itte	le
 800db34:	f1c3 0320 	rsble	r3, r3, #32
 800db38:	fa06 f003 	lslle.w	r0, r6, r3
 800db3c:	4318      	orrgt	r0, r3
 800db3e:	f7f2 fd01 	bl	8000544 <__aeabi_ui2d>
 800db42:	2301      	movs	r3, #1
 800db44:	4606      	mov	r6, r0
 800db46:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 800db4a:	3d01      	subs	r5, #1
 800db4c:	930e      	str	r3, [sp, #56]	; 0x38
 800db4e:	e76a      	b.n	800da26 <_dtoa_r+0x116>
 800db50:	2301      	movs	r3, #1
 800db52:	e7b2      	b.n	800daba <_dtoa_r+0x1aa>
 800db54:	900b      	str	r0, [sp, #44]	; 0x2c
 800db56:	e7b1      	b.n	800dabc <_dtoa_r+0x1ac>
 800db58:	9b04      	ldr	r3, [sp, #16]
 800db5a:	9a00      	ldr	r2, [sp, #0]
 800db5c:	1a9b      	subs	r3, r3, r2
 800db5e:	9304      	str	r3, [sp, #16]
 800db60:	4253      	negs	r3, r2
 800db62:	9307      	str	r3, [sp, #28]
 800db64:	2300      	movs	r3, #0
 800db66:	930a      	str	r3, [sp, #40]	; 0x28
 800db68:	e7bf      	b.n	800daea <_dtoa_r+0x1da>
 800db6a:	2300      	movs	r3, #0
 800db6c:	9308      	str	r3, [sp, #32]
 800db6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800db70:	2b00      	cmp	r3, #0
 800db72:	dc55      	bgt.n	800dc20 <_dtoa_r+0x310>
 800db74:	2301      	movs	r3, #1
 800db76:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800db7a:	461a      	mov	r2, r3
 800db7c:	9209      	str	r2, [sp, #36]	; 0x24
 800db7e:	e00c      	b.n	800db9a <_dtoa_r+0x28a>
 800db80:	2301      	movs	r3, #1
 800db82:	e7f3      	b.n	800db6c <_dtoa_r+0x25c>
 800db84:	2300      	movs	r3, #0
 800db86:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800db88:	9308      	str	r3, [sp, #32]
 800db8a:	9b00      	ldr	r3, [sp, #0]
 800db8c:	4413      	add	r3, r2
 800db8e:	9302      	str	r3, [sp, #8]
 800db90:	3301      	adds	r3, #1
 800db92:	2b01      	cmp	r3, #1
 800db94:	9303      	str	r3, [sp, #12]
 800db96:	bfb8      	it	lt
 800db98:	2301      	movlt	r3, #1
 800db9a:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800db9c:	2200      	movs	r2, #0
 800db9e:	6042      	str	r2, [r0, #4]
 800dba0:	2204      	movs	r2, #4
 800dba2:	f102 0614 	add.w	r6, r2, #20
 800dba6:	429e      	cmp	r6, r3
 800dba8:	6841      	ldr	r1, [r0, #4]
 800dbaa:	d93d      	bls.n	800dc28 <_dtoa_r+0x318>
 800dbac:	4620      	mov	r0, r4
 800dbae:	f000 fcb7 	bl	800e520 <_Balloc>
 800dbb2:	9001      	str	r0, [sp, #4]
 800dbb4:	2800      	cmp	r0, #0
 800dbb6:	d13b      	bne.n	800dc30 <_dtoa_r+0x320>
 800dbb8:	4b11      	ldr	r3, [pc, #68]	; (800dc00 <_dtoa_r+0x2f0>)
 800dbba:	4602      	mov	r2, r0
 800dbbc:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800dbc0:	e6c0      	b.n	800d944 <_dtoa_r+0x34>
 800dbc2:	2301      	movs	r3, #1
 800dbc4:	e7df      	b.n	800db86 <_dtoa_r+0x276>
 800dbc6:	bf00      	nop
 800dbc8:	636f4361 	.word	0x636f4361
 800dbcc:	3fd287a7 	.word	0x3fd287a7
 800dbd0:	8b60c8b3 	.word	0x8b60c8b3
 800dbd4:	3fc68a28 	.word	0x3fc68a28
 800dbd8:	509f79fb 	.word	0x509f79fb
 800dbdc:	3fd34413 	.word	0x3fd34413
 800dbe0:	08011305 	.word	0x08011305
 800dbe4:	0801131c 	.word	0x0801131c
 800dbe8:	7ff00000 	.word	0x7ff00000
 800dbec:	08011301 	.word	0x08011301
 800dbf0:	080112f8 	.word	0x080112f8
 800dbf4:	080112d5 	.word	0x080112d5
 800dbf8:	3ff80000 	.word	0x3ff80000
 800dbfc:	08011410 	.word	0x08011410
 800dc00:	08011377 	.word	0x08011377
 800dc04:	2501      	movs	r5, #1
 800dc06:	2300      	movs	r3, #0
 800dc08:	9306      	str	r3, [sp, #24]
 800dc0a:	9508      	str	r5, [sp, #32]
 800dc0c:	f04f 33ff 	mov.w	r3, #4294967295
 800dc10:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800dc14:	2200      	movs	r2, #0
 800dc16:	2312      	movs	r3, #18
 800dc18:	e7b0      	b.n	800db7c <_dtoa_r+0x26c>
 800dc1a:	2301      	movs	r3, #1
 800dc1c:	9308      	str	r3, [sp, #32]
 800dc1e:	e7f5      	b.n	800dc0c <_dtoa_r+0x2fc>
 800dc20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dc22:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800dc26:	e7b8      	b.n	800db9a <_dtoa_r+0x28a>
 800dc28:	3101      	adds	r1, #1
 800dc2a:	6041      	str	r1, [r0, #4]
 800dc2c:	0052      	lsls	r2, r2, #1
 800dc2e:	e7b8      	b.n	800dba2 <_dtoa_r+0x292>
 800dc30:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dc32:	9a01      	ldr	r2, [sp, #4]
 800dc34:	601a      	str	r2, [r3, #0]
 800dc36:	9b03      	ldr	r3, [sp, #12]
 800dc38:	2b0e      	cmp	r3, #14
 800dc3a:	f200 809d 	bhi.w	800dd78 <_dtoa_r+0x468>
 800dc3e:	2d00      	cmp	r5, #0
 800dc40:	f000 809a 	beq.w	800dd78 <_dtoa_r+0x468>
 800dc44:	9b00      	ldr	r3, [sp, #0]
 800dc46:	2b00      	cmp	r3, #0
 800dc48:	dd32      	ble.n	800dcb0 <_dtoa_r+0x3a0>
 800dc4a:	4ab7      	ldr	r2, [pc, #732]	; (800df28 <_dtoa_r+0x618>)
 800dc4c:	f003 030f 	and.w	r3, r3, #15
 800dc50:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800dc54:	e9d3 8900 	ldrd	r8, r9, [r3]
 800dc58:	9b00      	ldr	r3, [sp, #0]
 800dc5a:	05d8      	lsls	r0, r3, #23
 800dc5c:	ea4f 1723 	mov.w	r7, r3, asr #4
 800dc60:	d516      	bpl.n	800dc90 <_dtoa_r+0x380>
 800dc62:	4bb2      	ldr	r3, [pc, #712]	; (800df2c <_dtoa_r+0x61c>)
 800dc64:	ec51 0b19 	vmov	r0, r1, d9
 800dc68:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800dc6c:	f7f2 fe0e 	bl	800088c <__aeabi_ddiv>
 800dc70:	f007 070f 	and.w	r7, r7, #15
 800dc74:	4682      	mov	sl, r0
 800dc76:	468b      	mov	fp, r1
 800dc78:	2503      	movs	r5, #3
 800dc7a:	4eac      	ldr	r6, [pc, #688]	; (800df2c <_dtoa_r+0x61c>)
 800dc7c:	b957      	cbnz	r7, 800dc94 <_dtoa_r+0x384>
 800dc7e:	4642      	mov	r2, r8
 800dc80:	464b      	mov	r3, r9
 800dc82:	4650      	mov	r0, sl
 800dc84:	4659      	mov	r1, fp
 800dc86:	f7f2 fe01 	bl	800088c <__aeabi_ddiv>
 800dc8a:	4682      	mov	sl, r0
 800dc8c:	468b      	mov	fp, r1
 800dc8e:	e028      	b.n	800dce2 <_dtoa_r+0x3d2>
 800dc90:	2502      	movs	r5, #2
 800dc92:	e7f2      	b.n	800dc7a <_dtoa_r+0x36a>
 800dc94:	07f9      	lsls	r1, r7, #31
 800dc96:	d508      	bpl.n	800dcaa <_dtoa_r+0x39a>
 800dc98:	4640      	mov	r0, r8
 800dc9a:	4649      	mov	r1, r9
 800dc9c:	e9d6 2300 	ldrd	r2, r3, [r6]
 800dca0:	f7f2 fcca 	bl	8000638 <__aeabi_dmul>
 800dca4:	3501      	adds	r5, #1
 800dca6:	4680      	mov	r8, r0
 800dca8:	4689      	mov	r9, r1
 800dcaa:	107f      	asrs	r7, r7, #1
 800dcac:	3608      	adds	r6, #8
 800dcae:	e7e5      	b.n	800dc7c <_dtoa_r+0x36c>
 800dcb0:	f000 809b 	beq.w	800ddea <_dtoa_r+0x4da>
 800dcb4:	9b00      	ldr	r3, [sp, #0]
 800dcb6:	4f9d      	ldr	r7, [pc, #628]	; (800df2c <_dtoa_r+0x61c>)
 800dcb8:	425e      	negs	r6, r3
 800dcba:	4b9b      	ldr	r3, [pc, #620]	; (800df28 <_dtoa_r+0x618>)
 800dcbc:	f006 020f 	and.w	r2, r6, #15
 800dcc0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800dcc4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dcc8:	ec51 0b19 	vmov	r0, r1, d9
 800dccc:	f7f2 fcb4 	bl	8000638 <__aeabi_dmul>
 800dcd0:	1136      	asrs	r6, r6, #4
 800dcd2:	4682      	mov	sl, r0
 800dcd4:	468b      	mov	fp, r1
 800dcd6:	2300      	movs	r3, #0
 800dcd8:	2502      	movs	r5, #2
 800dcda:	2e00      	cmp	r6, #0
 800dcdc:	d17a      	bne.n	800ddd4 <_dtoa_r+0x4c4>
 800dcde:	2b00      	cmp	r3, #0
 800dce0:	d1d3      	bne.n	800dc8a <_dtoa_r+0x37a>
 800dce2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800dce4:	2b00      	cmp	r3, #0
 800dce6:	f000 8082 	beq.w	800ddee <_dtoa_r+0x4de>
 800dcea:	4b91      	ldr	r3, [pc, #580]	; (800df30 <_dtoa_r+0x620>)
 800dcec:	2200      	movs	r2, #0
 800dcee:	4650      	mov	r0, sl
 800dcf0:	4659      	mov	r1, fp
 800dcf2:	f7f2 ff13 	bl	8000b1c <__aeabi_dcmplt>
 800dcf6:	2800      	cmp	r0, #0
 800dcf8:	d079      	beq.n	800ddee <_dtoa_r+0x4de>
 800dcfa:	9b03      	ldr	r3, [sp, #12]
 800dcfc:	2b00      	cmp	r3, #0
 800dcfe:	d076      	beq.n	800ddee <_dtoa_r+0x4de>
 800dd00:	9b02      	ldr	r3, [sp, #8]
 800dd02:	2b00      	cmp	r3, #0
 800dd04:	dd36      	ble.n	800dd74 <_dtoa_r+0x464>
 800dd06:	9b00      	ldr	r3, [sp, #0]
 800dd08:	4650      	mov	r0, sl
 800dd0a:	4659      	mov	r1, fp
 800dd0c:	1e5f      	subs	r7, r3, #1
 800dd0e:	2200      	movs	r2, #0
 800dd10:	4b88      	ldr	r3, [pc, #544]	; (800df34 <_dtoa_r+0x624>)
 800dd12:	f7f2 fc91 	bl	8000638 <__aeabi_dmul>
 800dd16:	9e02      	ldr	r6, [sp, #8]
 800dd18:	4682      	mov	sl, r0
 800dd1a:	468b      	mov	fp, r1
 800dd1c:	3501      	adds	r5, #1
 800dd1e:	4628      	mov	r0, r5
 800dd20:	f7f2 fc20 	bl	8000564 <__aeabi_i2d>
 800dd24:	4652      	mov	r2, sl
 800dd26:	465b      	mov	r3, fp
 800dd28:	f7f2 fc86 	bl	8000638 <__aeabi_dmul>
 800dd2c:	4b82      	ldr	r3, [pc, #520]	; (800df38 <_dtoa_r+0x628>)
 800dd2e:	2200      	movs	r2, #0
 800dd30:	f7f2 facc 	bl	80002cc <__adddf3>
 800dd34:	46d0      	mov	r8, sl
 800dd36:	46d9      	mov	r9, fp
 800dd38:	4682      	mov	sl, r0
 800dd3a:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 800dd3e:	2e00      	cmp	r6, #0
 800dd40:	d158      	bne.n	800ddf4 <_dtoa_r+0x4e4>
 800dd42:	4b7e      	ldr	r3, [pc, #504]	; (800df3c <_dtoa_r+0x62c>)
 800dd44:	2200      	movs	r2, #0
 800dd46:	4640      	mov	r0, r8
 800dd48:	4649      	mov	r1, r9
 800dd4a:	f7f2 fabd 	bl	80002c8 <__aeabi_dsub>
 800dd4e:	4652      	mov	r2, sl
 800dd50:	465b      	mov	r3, fp
 800dd52:	4680      	mov	r8, r0
 800dd54:	4689      	mov	r9, r1
 800dd56:	f7f2 feff 	bl	8000b58 <__aeabi_dcmpgt>
 800dd5a:	2800      	cmp	r0, #0
 800dd5c:	f040 8295 	bne.w	800e28a <_dtoa_r+0x97a>
 800dd60:	4652      	mov	r2, sl
 800dd62:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800dd66:	4640      	mov	r0, r8
 800dd68:	4649      	mov	r1, r9
 800dd6a:	f7f2 fed7 	bl	8000b1c <__aeabi_dcmplt>
 800dd6e:	2800      	cmp	r0, #0
 800dd70:	f040 8289 	bne.w	800e286 <_dtoa_r+0x976>
 800dd74:	ec5b ab19 	vmov	sl, fp, d9
 800dd78:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800dd7a:	2b00      	cmp	r3, #0
 800dd7c:	f2c0 8148 	blt.w	800e010 <_dtoa_r+0x700>
 800dd80:	9a00      	ldr	r2, [sp, #0]
 800dd82:	2a0e      	cmp	r2, #14
 800dd84:	f300 8144 	bgt.w	800e010 <_dtoa_r+0x700>
 800dd88:	4b67      	ldr	r3, [pc, #412]	; (800df28 <_dtoa_r+0x618>)
 800dd8a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800dd8e:	e9d3 8900 	ldrd	r8, r9, [r3]
 800dd92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dd94:	2b00      	cmp	r3, #0
 800dd96:	f280 80d5 	bge.w	800df44 <_dtoa_r+0x634>
 800dd9a:	9b03      	ldr	r3, [sp, #12]
 800dd9c:	2b00      	cmp	r3, #0
 800dd9e:	f300 80d1 	bgt.w	800df44 <_dtoa_r+0x634>
 800dda2:	f040 826f 	bne.w	800e284 <_dtoa_r+0x974>
 800dda6:	4b65      	ldr	r3, [pc, #404]	; (800df3c <_dtoa_r+0x62c>)
 800dda8:	2200      	movs	r2, #0
 800ddaa:	4640      	mov	r0, r8
 800ddac:	4649      	mov	r1, r9
 800ddae:	f7f2 fc43 	bl	8000638 <__aeabi_dmul>
 800ddb2:	4652      	mov	r2, sl
 800ddb4:	465b      	mov	r3, fp
 800ddb6:	f7f2 fec5 	bl	8000b44 <__aeabi_dcmpge>
 800ddba:	9e03      	ldr	r6, [sp, #12]
 800ddbc:	4637      	mov	r7, r6
 800ddbe:	2800      	cmp	r0, #0
 800ddc0:	f040 8245 	bne.w	800e24e <_dtoa_r+0x93e>
 800ddc4:	9d01      	ldr	r5, [sp, #4]
 800ddc6:	2331      	movs	r3, #49	; 0x31
 800ddc8:	f805 3b01 	strb.w	r3, [r5], #1
 800ddcc:	9b00      	ldr	r3, [sp, #0]
 800ddce:	3301      	adds	r3, #1
 800ddd0:	9300      	str	r3, [sp, #0]
 800ddd2:	e240      	b.n	800e256 <_dtoa_r+0x946>
 800ddd4:	07f2      	lsls	r2, r6, #31
 800ddd6:	d505      	bpl.n	800dde4 <_dtoa_r+0x4d4>
 800ddd8:	e9d7 2300 	ldrd	r2, r3, [r7]
 800dddc:	f7f2 fc2c 	bl	8000638 <__aeabi_dmul>
 800dde0:	3501      	adds	r5, #1
 800dde2:	2301      	movs	r3, #1
 800dde4:	1076      	asrs	r6, r6, #1
 800dde6:	3708      	adds	r7, #8
 800dde8:	e777      	b.n	800dcda <_dtoa_r+0x3ca>
 800ddea:	2502      	movs	r5, #2
 800ddec:	e779      	b.n	800dce2 <_dtoa_r+0x3d2>
 800ddee:	9f00      	ldr	r7, [sp, #0]
 800ddf0:	9e03      	ldr	r6, [sp, #12]
 800ddf2:	e794      	b.n	800dd1e <_dtoa_r+0x40e>
 800ddf4:	9901      	ldr	r1, [sp, #4]
 800ddf6:	4b4c      	ldr	r3, [pc, #304]	; (800df28 <_dtoa_r+0x618>)
 800ddf8:	4431      	add	r1, r6
 800ddfa:	910d      	str	r1, [sp, #52]	; 0x34
 800ddfc:	9908      	ldr	r1, [sp, #32]
 800ddfe:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800de02:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800de06:	2900      	cmp	r1, #0
 800de08:	d043      	beq.n	800de92 <_dtoa_r+0x582>
 800de0a:	494d      	ldr	r1, [pc, #308]	; (800df40 <_dtoa_r+0x630>)
 800de0c:	2000      	movs	r0, #0
 800de0e:	f7f2 fd3d 	bl	800088c <__aeabi_ddiv>
 800de12:	4652      	mov	r2, sl
 800de14:	465b      	mov	r3, fp
 800de16:	f7f2 fa57 	bl	80002c8 <__aeabi_dsub>
 800de1a:	9d01      	ldr	r5, [sp, #4]
 800de1c:	4682      	mov	sl, r0
 800de1e:	468b      	mov	fp, r1
 800de20:	4649      	mov	r1, r9
 800de22:	4640      	mov	r0, r8
 800de24:	f7f2 feb8 	bl	8000b98 <__aeabi_d2iz>
 800de28:	4606      	mov	r6, r0
 800de2a:	f7f2 fb9b 	bl	8000564 <__aeabi_i2d>
 800de2e:	4602      	mov	r2, r0
 800de30:	460b      	mov	r3, r1
 800de32:	4640      	mov	r0, r8
 800de34:	4649      	mov	r1, r9
 800de36:	f7f2 fa47 	bl	80002c8 <__aeabi_dsub>
 800de3a:	3630      	adds	r6, #48	; 0x30
 800de3c:	f805 6b01 	strb.w	r6, [r5], #1
 800de40:	4652      	mov	r2, sl
 800de42:	465b      	mov	r3, fp
 800de44:	4680      	mov	r8, r0
 800de46:	4689      	mov	r9, r1
 800de48:	f7f2 fe68 	bl	8000b1c <__aeabi_dcmplt>
 800de4c:	2800      	cmp	r0, #0
 800de4e:	d163      	bne.n	800df18 <_dtoa_r+0x608>
 800de50:	4642      	mov	r2, r8
 800de52:	464b      	mov	r3, r9
 800de54:	4936      	ldr	r1, [pc, #216]	; (800df30 <_dtoa_r+0x620>)
 800de56:	2000      	movs	r0, #0
 800de58:	f7f2 fa36 	bl	80002c8 <__aeabi_dsub>
 800de5c:	4652      	mov	r2, sl
 800de5e:	465b      	mov	r3, fp
 800de60:	f7f2 fe5c 	bl	8000b1c <__aeabi_dcmplt>
 800de64:	2800      	cmp	r0, #0
 800de66:	f040 80b5 	bne.w	800dfd4 <_dtoa_r+0x6c4>
 800de6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800de6c:	429d      	cmp	r5, r3
 800de6e:	d081      	beq.n	800dd74 <_dtoa_r+0x464>
 800de70:	4b30      	ldr	r3, [pc, #192]	; (800df34 <_dtoa_r+0x624>)
 800de72:	2200      	movs	r2, #0
 800de74:	4650      	mov	r0, sl
 800de76:	4659      	mov	r1, fp
 800de78:	f7f2 fbde 	bl	8000638 <__aeabi_dmul>
 800de7c:	4b2d      	ldr	r3, [pc, #180]	; (800df34 <_dtoa_r+0x624>)
 800de7e:	4682      	mov	sl, r0
 800de80:	468b      	mov	fp, r1
 800de82:	4640      	mov	r0, r8
 800de84:	4649      	mov	r1, r9
 800de86:	2200      	movs	r2, #0
 800de88:	f7f2 fbd6 	bl	8000638 <__aeabi_dmul>
 800de8c:	4680      	mov	r8, r0
 800de8e:	4689      	mov	r9, r1
 800de90:	e7c6      	b.n	800de20 <_dtoa_r+0x510>
 800de92:	4650      	mov	r0, sl
 800de94:	4659      	mov	r1, fp
 800de96:	f7f2 fbcf 	bl	8000638 <__aeabi_dmul>
 800de9a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800de9c:	9d01      	ldr	r5, [sp, #4]
 800de9e:	930f      	str	r3, [sp, #60]	; 0x3c
 800dea0:	4682      	mov	sl, r0
 800dea2:	468b      	mov	fp, r1
 800dea4:	4649      	mov	r1, r9
 800dea6:	4640      	mov	r0, r8
 800dea8:	f7f2 fe76 	bl	8000b98 <__aeabi_d2iz>
 800deac:	4606      	mov	r6, r0
 800deae:	f7f2 fb59 	bl	8000564 <__aeabi_i2d>
 800deb2:	3630      	adds	r6, #48	; 0x30
 800deb4:	4602      	mov	r2, r0
 800deb6:	460b      	mov	r3, r1
 800deb8:	4640      	mov	r0, r8
 800deba:	4649      	mov	r1, r9
 800debc:	f7f2 fa04 	bl	80002c8 <__aeabi_dsub>
 800dec0:	f805 6b01 	strb.w	r6, [r5], #1
 800dec4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800dec6:	429d      	cmp	r5, r3
 800dec8:	4680      	mov	r8, r0
 800deca:	4689      	mov	r9, r1
 800decc:	f04f 0200 	mov.w	r2, #0
 800ded0:	d124      	bne.n	800df1c <_dtoa_r+0x60c>
 800ded2:	4b1b      	ldr	r3, [pc, #108]	; (800df40 <_dtoa_r+0x630>)
 800ded4:	4650      	mov	r0, sl
 800ded6:	4659      	mov	r1, fp
 800ded8:	f7f2 f9f8 	bl	80002cc <__adddf3>
 800dedc:	4602      	mov	r2, r0
 800dede:	460b      	mov	r3, r1
 800dee0:	4640      	mov	r0, r8
 800dee2:	4649      	mov	r1, r9
 800dee4:	f7f2 fe38 	bl	8000b58 <__aeabi_dcmpgt>
 800dee8:	2800      	cmp	r0, #0
 800deea:	d173      	bne.n	800dfd4 <_dtoa_r+0x6c4>
 800deec:	4652      	mov	r2, sl
 800deee:	465b      	mov	r3, fp
 800def0:	4913      	ldr	r1, [pc, #76]	; (800df40 <_dtoa_r+0x630>)
 800def2:	2000      	movs	r0, #0
 800def4:	f7f2 f9e8 	bl	80002c8 <__aeabi_dsub>
 800def8:	4602      	mov	r2, r0
 800defa:	460b      	mov	r3, r1
 800defc:	4640      	mov	r0, r8
 800defe:	4649      	mov	r1, r9
 800df00:	f7f2 fe0c 	bl	8000b1c <__aeabi_dcmplt>
 800df04:	2800      	cmp	r0, #0
 800df06:	f43f af35 	beq.w	800dd74 <_dtoa_r+0x464>
 800df0a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800df0c:	1e6b      	subs	r3, r5, #1
 800df0e:	930f      	str	r3, [sp, #60]	; 0x3c
 800df10:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800df14:	2b30      	cmp	r3, #48	; 0x30
 800df16:	d0f8      	beq.n	800df0a <_dtoa_r+0x5fa>
 800df18:	9700      	str	r7, [sp, #0]
 800df1a:	e049      	b.n	800dfb0 <_dtoa_r+0x6a0>
 800df1c:	4b05      	ldr	r3, [pc, #20]	; (800df34 <_dtoa_r+0x624>)
 800df1e:	f7f2 fb8b 	bl	8000638 <__aeabi_dmul>
 800df22:	4680      	mov	r8, r0
 800df24:	4689      	mov	r9, r1
 800df26:	e7bd      	b.n	800dea4 <_dtoa_r+0x594>
 800df28:	08011410 	.word	0x08011410
 800df2c:	080113e8 	.word	0x080113e8
 800df30:	3ff00000 	.word	0x3ff00000
 800df34:	40240000 	.word	0x40240000
 800df38:	401c0000 	.word	0x401c0000
 800df3c:	40140000 	.word	0x40140000
 800df40:	3fe00000 	.word	0x3fe00000
 800df44:	9d01      	ldr	r5, [sp, #4]
 800df46:	4656      	mov	r6, sl
 800df48:	465f      	mov	r7, fp
 800df4a:	4642      	mov	r2, r8
 800df4c:	464b      	mov	r3, r9
 800df4e:	4630      	mov	r0, r6
 800df50:	4639      	mov	r1, r7
 800df52:	f7f2 fc9b 	bl	800088c <__aeabi_ddiv>
 800df56:	f7f2 fe1f 	bl	8000b98 <__aeabi_d2iz>
 800df5a:	4682      	mov	sl, r0
 800df5c:	f7f2 fb02 	bl	8000564 <__aeabi_i2d>
 800df60:	4642      	mov	r2, r8
 800df62:	464b      	mov	r3, r9
 800df64:	f7f2 fb68 	bl	8000638 <__aeabi_dmul>
 800df68:	4602      	mov	r2, r0
 800df6a:	460b      	mov	r3, r1
 800df6c:	4630      	mov	r0, r6
 800df6e:	4639      	mov	r1, r7
 800df70:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 800df74:	f7f2 f9a8 	bl	80002c8 <__aeabi_dsub>
 800df78:	f805 6b01 	strb.w	r6, [r5], #1
 800df7c:	9e01      	ldr	r6, [sp, #4]
 800df7e:	9f03      	ldr	r7, [sp, #12]
 800df80:	1bae      	subs	r6, r5, r6
 800df82:	42b7      	cmp	r7, r6
 800df84:	4602      	mov	r2, r0
 800df86:	460b      	mov	r3, r1
 800df88:	d135      	bne.n	800dff6 <_dtoa_r+0x6e6>
 800df8a:	f7f2 f99f 	bl	80002cc <__adddf3>
 800df8e:	4642      	mov	r2, r8
 800df90:	464b      	mov	r3, r9
 800df92:	4606      	mov	r6, r0
 800df94:	460f      	mov	r7, r1
 800df96:	f7f2 fddf 	bl	8000b58 <__aeabi_dcmpgt>
 800df9a:	b9d0      	cbnz	r0, 800dfd2 <_dtoa_r+0x6c2>
 800df9c:	4642      	mov	r2, r8
 800df9e:	464b      	mov	r3, r9
 800dfa0:	4630      	mov	r0, r6
 800dfa2:	4639      	mov	r1, r7
 800dfa4:	f7f2 fdb0 	bl	8000b08 <__aeabi_dcmpeq>
 800dfa8:	b110      	cbz	r0, 800dfb0 <_dtoa_r+0x6a0>
 800dfaa:	f01a 0f01 	tst.w	sl, #1
 800dfae:	d110      	bne.n	800dfd2 <_dtoa_r+0x6c2>
 800dfb0:	4620      	mov	r0, r4
 800dfb2:	ee18 1a10 	vmov	r1, s16
 800dfb6:	f000 faf3 	bl	800e5a0 <_Bfree>
 800dfba:	2300      	movs	r3, #0
 800dfbc:	9800      	ldr	r0, [sp, #0]
 800dfbe:	702b      	strb	r3, [r5, #0]
 800dfc0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800dfc2:	3001      	adds	r0, #1
 800dfc4:	6018      	str	r0, [r3, #0]
 800dfc6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800dfc8:	2b00      	cmp	r3, #0
 800dfca:	f43f acf1 	beq.w	800d9b0 <_dtoa_r+0xa0>
 800dfce:	601d      	str	r5, [r3, #0]
 800dfd0:	e4ee      	b.n	800d9b0 <_dtoa_r+0xa0>
 800dfd2:	9f00      	ldr	r7, [sp, #0]
 800dfd4:	462b      	mov	r3, r5
 800dfd6:	461d      	mov	r5, r3
 800dfd8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800dfdc:	2a39      	cmp	r2, #57	; 0x39
 800dfde:	d106      	bne.n	800dfee <_dtoa_r+0x6de>
 800dfe0:	9a01      	ldr	r2, [sp, #4]
 800dfe2:	429a      	cmp	r2, r3
 800dfe4:	d1f7      	bne.n	800dfd6 <_dtoa_r+0x6c6>
 800dfe6:	9901      	ldr	r1, [sp, #4]
 800dfe8:	2230      	movs	r2, #48	; 0x30
 800dfea:	3701      	adds	r7, #1
 800dfec:	700a      	strb	r2, [r1, #0]
 800dfee:	781a      	ldrb	r2, [r3, #0]
 800dff0:	3201      	adds	r2, #1
 800dff2:	701a      	strb	r2, [r3, #0]
 800dff4:	e790      	b.n	800df18 <_dtoa_r+0x608>
 800dff6:	4ba6      	ldr	r3, [pc, #664]	; (800e290 <_dtoa_r+0x980>)
 800dff8:	2200      	movs	r2, #0
 800dffa:	f7f2 fb1d 	bl	8000638 <__aeabi_dmul>
 800dffe:	2200      	movs	r2, #0
 800e000:	2300      	movs	r3, #0
 800e002:	4606      	mov	r6, r0
 800e004:	460f      	mov	r7, r1
 800e006:	f7f2 fd7f 	bl	8000b08 <__aeabi_dcmpeq>
 800e00a:	2800      	cmp	r0, #0
 800e00c:	d09d      	beq.n	800df4a <_dtoa_r+0x63a>
 800e00e:	e7cf      	b.n	800dfb0 <_dtoa_r+0x6a0>
 800e010:	9a08      	ldr	r2, [sp, #32]
 800e012:	2a00      	cmp	r2, #0
 800e014:	f000 80d7 	beq.w	800e1c6 <_dtoa_r+0x8b6>
 800e018:	9a06      	ldr	r2, [sp, #24]
 800e01a:	2a01      	cmp	r2, #1
 800e01c:	f300 80ba 	bgt.w	800e194 <_dtoa_r+0x884>
 800e020:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800e022:	2a00      	cmp	r2, #0
 800e024:	f000 80b2 	beq.w	800e18c <_dtoa_r+0x87c>
 800e028:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800e02c:	9e07      	ldr	r6, [sp, #28]
 800e02e:	9d04      	ldr	r5, [sp, #16]
 800e030:	9a04      	ldr	r2, [sp, #16]
 800e032:	441a      	add	r2, r3
 800e034:	9204      	str	r2, [sp, #16]
 800e036:	9a05      	ldr	r2, [sp, #20]
 800e038:	2101      	movs	r1, #1
 800e03a:	441a      	add	r2, r3
 800e03c:	4620      	mov	r0, r4
 800e03e:	9205      	str	r2, [sp, #20]
 800e040:	f000 fb66 	bl	800e710 <__i2b>
 800e044:	4607      	mov	r7, r0
 800e046:	2d00      	cmp	r5, #0
 800e048:	dd0c      	ble.n	800e064 <_dtoa_r+0x754>
 800e04a:	9b05      	ldr	r3, [sp, #20]
 800e04c:	2b00      	cmp	r3, #0
 800e04e:	dd09      	ble.n	800e064 <_dtoa_r+0x754>
 800e050:	42ab      	cmp	r3, r5
 800e052:	9a04      	ldr	r2, [sp, #16]
 800e054:	bfa8      	it	ge
 800e056:	462b      	movge	r3, r5
 800e058:	1ad2      	subs	r2, r2, r3
 800e05a:	9204      	str	r2, [sp, #16]
 800e05c:	9a05      	ldr	r2, [sp, #20]
 800e05e:	1aed      	subs	r5, r5, r3
 800e060:	1ad3      	subs	r3, r2, r3
 800e062:	9305      	str	r3, [sp, #20]
 800e064:	9b07      	ldr	r3, [sp, #28]
 800e066:	b31b      	cbz	r3, 800e0b0 <_dtoa_r+0x7a0>
 800e068:	9b08      	ldr	r3, [sp, #32]
 800e06a:	2b00      	cmp	r3, #0
 800e06c:	f000 80af 	beq.w	800e1ce <_dtoa_r+0x8be>
 800e070:	2e00      	cmp	r6, #0
 800e072:	dd13      	ble.n	800e09c <_dtoa_r+0x78c>
 800e074:	4639      	mov	r1, r7
 800e076:	4632      	mov	r2, r6
 800e078:	4620      	mov	r0, r4
 800e07a:	f000 fc09 	bl	800e890 <__pow5mult>
 800e07e:	ee18 2a10 	vmov	r2, s16
 800e082:	4601      	mov	r1, r0
 800e084:	4607      	mov	r7, r0
 800e086:	4620      	mov	r0, r4
 800e088:	f000 fb58 	bl	800e73c <__multiply>
 800e08c:	ee18 1a10 	vmov	r1, s16
 800e090:	4680      	mov	r8, r0
 800e092:	4620      	mov	r0, r4
 800e094:	f000 fa84 	bl	800e5a0 <_Bfree>
 800e098:	ee08 8a10 	vmov	s16, r8
 800e09c:	9b07      	ldr	r3, [sp, #28]
 800e09e:	1b9a      	subs	r2, r3, r6
 800e0a0:	d006      	beq.n	800e0b0 <_dtoa_r+0x7a0>
 800e0a2:	ee18 1a10 	vmov	r1, s16
 800e0a6:	4620      	mov	r0, r4
 800e0a8:	f000 fbf2 	bl	800e890 <__pow5mult>
 800e0ac:	ee08 0a10 	vmov	s16, r0
 800e0b0:	2101      	movs	r1, #1
 800e0b2:	4620      	mov	r0, r4
 800e0b4:	f000 fb2c 	bl	800e710 <__i2b>
 800e0b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e0ba:	2b00      	cmp	r3, #0
 800e0bc:	4606      	mov	r6, r0
 800e0be:	f340 8088 	ble.w	800e1d2 <_dtoa_r+0x8c2>
 800e0c2:	461a      	mov	r2, r3
 800e0c4:	4601      	mov	r1, r0
 800e0c6:	4620      	mov	r0, r4
 800e0c8:	f000 fbe2 	bl	800e890 <__pow5mult>
 800e0cc:	9b06      	ldr	r3, [sp, #24]
 800e0ce:	2b01      	cmp	r3, #1
 800e0d0:	4606      	mov	r6, r0
 800e0d2:	f340 8081 	ble.w	800e1d8 <_dtoa_r+0x8c8>
 800e0d6:	f04f 0800 	mov.w	r8, #0
 800e0da:	6933      	ldr	r3, [r6, #16]
 800e0dc:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800e0e0:	6918      	ldr	r0, [r3, #16]
 800e0e2:	f000 fac5 	bl	800e670 <__hi0bits>
 800e0e6:	f1c0 0020 	rsb	r0, r0, #32
 800e0ea:	9b05      	ldr	r3, [sp, #20]
 800e0ec:	4418      	add	r0, r3
 800e0ee:	f010 001f 	ands.w	r0, r0, #31
 800e0f2:	f000 8092 	beq.w	800e21a <_dtoa_r+0x90a>
 800e0f6:	f1c0 0320 	rsb	r3, r0, #32
 800e0fa:	2b04      	cmp	r3, #4
 800e0fc:	f340 808a 	ble.w	800e214 <_dtoa_r+0x904>
 800e100:	f1c0 001c 	rsb	r0, r0, #28
 800e104:	9b04      	ldr	r3, [sp, #16]
 800e106:	4403      	add	r3, r0
 800e108:	9304      	str	r3, [sp, #16]
 800e10a:	9b05      	ldr	r3, [sp, #20]
 800e10c:	4403      	add	r3, r0
 800e10e:	4405      	add	r5, r0
 800e110:	9305      	str	r3, [sp, #20]
 800e112:	9b04      	ldr	r3, [sp, #16]
 800e114:	2b00      	cmp	r3, #0
 800e116:	dd07      	ble.n	800e128 <_dtoa_r+0x818>
 800e118:	ee18 1a10 	vmov	r1, s16
 800e11c:	461a      	mov	r2, r3
 800e11e:	4620      	mov	r0, r4
 800e120:	f000 fc10 	bl	800e944 <__lshift>
 800e124:	ee08 0a10 	vmov	s16, r0
 800e128:	9b05      	ldr	r3, [sp, #20]
 800e12a:	2b00      	cmp	r3, #0
 800e12c:	dd05      	ble.n	800e13a <_dtoa_r+0x82a>
 800e12e:	4631      	mov	r1, r6
 800e130:	461a      	mov	r2, r3
 800e132:	4620      	mov	r0, r4
 800e134:	f000 fc06 	bl	800e944 <__lshift>
 800e138:	4606      	mov	r6, r0
 800e13a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e13c:	2b00      	cmp	r3, #0
 800e13e:	d06e      	beq.n	800e21e <_dtoa_r+0x90e>
 800e140:	ee18 0a10 	vmov	r0, s16
 800e144:	4631      	mov	r1, r6
 800e146:	f000 fc6d 	bl	800ea24 <__mcmp>
 800e14a:	2800      	cmp	r0, #0
 800e14c:	da67      	bge.n	800e21e <_dtoa_r+0x90e>
 800e14e:	9b00      	ldr	r3, [sp, #0]
 800e150:	3b01      	subs	r3, #1
 800e152:	ee18 1a10 	vmov	r1, s16
 800e156:	9300      	str	r3, [sp, #0]
 800e158:	220a      	movs	r2, #10
 800e15a:	2300      	movs	r3, #0
 800e15c:	4620      	mov	r0, r4
 800e15e:	f000 fa41 	bl	800e5e4 <__multadd>
 800e162:	9b08      	ldr	r3, [sp, #32]
 800e164:	ee08 0a10 	vmov	s16, r0
 800e168:	2b00      	cmp	r3, #0
 800e16a:	f000 81b1 	beq.w	800e4d0 <_dtoa_r+0xbc0>
 800e16e:	2300      	movs	r3, #0
 800e170:	4639      	mov	r1, r7
 800e172:	220a      	movs	r2, #10
 800e174:	4620      	mov	r0, r4
 800e176:	f000 fa35 	bl	800e5e4 <__multadd>
 800e17a:	9b02      	ldr	r3, [sp, #8]
 800e17c:	2b00      	cmp	r3, #0
 800e17e:	4607      	mov	r7, r0
 800e180:	f300 808e 	bgt.w	800e2a0 <_dtoa_r+0x990>
 800e184:	9b06      	ldr	r3, [sp, #24]
 800e186:	2b02      	cmp	r3, #2
 800e188:	dc51      	bgt.n	800e22e <_dtoa_r+0x91e>
 800e18a:	e089      	b.n	800e2a0 <_dtoa_r+0x990>
 800e18c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e18e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800e192:	e74b      	b.n	800e02c <_dtoa_r+0x71c>
 800e194:	9b03      	ldr	r3, [sp, #12]
 800e196:	1e5e      	subs	r6, r3, #1
 800e198:	9b07      	ldr	r3, [sp, #28]
 800e19a:	42b3      	cmp	r3, r6
 800e19c:	bfbf      	itttt	lt
 800e19e:	9b07      	ldrlt	r3, [sp, #28]
 800e1a0:	9607      	strlt	r6, [sp, #28]
 800e1a2:	1af2      	sublt	r2, r6, r3
 800e1a4:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800e1a6:	bfb6      	itet	lt
 800e1a8:	189b      	addlt	r3, r3, r2
 800e1aa:	1b9e      	subge	r6, r3, r6
 800e1ac:	930a      	strlt	r3, [sp, #40]	; 0x28
 800e1ae:	9b03      	ldr	r3, [sp, #12]
 800e1b0:	bfb8      	it	lt
 800e1b2:	2600      	movlt	r6, #0
 800e1b4:	2b00      	cmp	r3, #0
 800e1b6:	bfb7      	itett	lt
 800e1b8:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 800e1bc:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 800e1c0:	1a9d      	sublt	r5, r3, r2
 800e1c2:	2300      	movlt	r3, #0
 800e1c4:	e734      	b.n	800e030 <_dtoa_r+0x720>
 800e1c6:	9e07      	ldr	r6, [sp, #28]
 800e1c8:	9d04      	ldr	r5, [sp, #16]
 800e1ca:	9f08      	ldr	r7, [sp, #32]
 800e1cc:	e73b      	b.n	800e046 <_dtoa_r+0x736>
 800e1ce:	9a07      	ldr	r2, [sp, #28]
 800e1d0:	e767      	b.n	800e0a2 <_dtoa_r+0x792>
 800e1d2:	9b06      	ldr	r3, [sp, #24]
 800e1d4:	2b01      	cmp	r3, #1
 800e1d6:	dc18      	bgt.n	800e20a <_dtoa_r+0x8fa>
 800e1d8:	f1ba 0f00 	cmp.w	sl, #0
 800e1dc:	d115      	bne.n	800e20a <_dtoa_r+0x8fa>
 800e1de:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800e1e2:	b993      	cbnz	r3, 800e20a <_dtoa_r+0x8fa>
 800e1e4:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800e1e8:	0d1b      	lsrs	r3, r3, #20
 800e1ea:	051b      	lsls	r3, r3, #20
 800e1ec:	b183      	cbz	r3, 800e210 <_dtoa_r+0x900>
 800e1ee:	9b04      	ldr	r3, [sp, #16]
 800e1f0:	3301      	adds	r3, #1
 800e1f2:	9304      	str	r3, [sp, #16]
 800e1f4:	9b05      	ldr	r3, [sp, #20]
 800e1f6:	3301      	adds	r3, #1
 800e1f8:	9305      	str	r3, [sp, #20]
 800e1fa:	f04f 0801 	mov.w	r8, #1
 800e1fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e200:	2b00      	cmp	r3, #0
 800e202:	f47f af6a 	bne.w	800e0da <_dtoa_r+0x7ca>
 800e206:	2001      	movs	r0, #1
 800e208:	e76f      	b.n	800e0ea <_dtoa_r+0x7da>
 800e20a:	f04f 0800 	mov.w	r8, #0
 800e20e:	e7f6      	b.n	800e1fe <_dtoa_r+0x8ee>
 800e210:	4698      	mov	r8, r3
 800e212:	e7f4      	b.n	800e1fe <_dtoa_r+0x8ee>
 800e214:	f43f af7d 	beq.w	800e112 <_dtoa_r+0x802>
 800e218:	4618      	mov	r0, r3
 800e21a:	301c      	adds	r0, #28
 800e21c:	e772      	b.n	800e104 <_dtoa_r+0x7f4>
 800e21e:	9b03      	ldr	r3, [sp, #12]
 800e220:	2b00      	cmp	r3, #0
 800e222:	dc37      	bgt.n	800e294 <_dtoa_r+0x984>
 800e224:	9b06      	ldr	r3, [sp, #24]
 800e226:	2b02      	cmp	r3, #2
 800e228:	dd34      	ble.n	800e294 <_dtoa_r+0x984>
 800e22a:	9b03      	ldr	r3, [sp, #12]
 800e22c:	9302      	str	r3, [sp, #8]
 800e22e:	9b02      	ldr	r3, [sp, #8]
 800e230:	b96b      	cbnz	r3, 800e24e <_dtoa_r+0x93e>
 800e232:	4631      	mov	r1, r6
 800e234:	2205      	movs	r2, #5
 800e236:	4620      	mov	r0, r4
 800e238:	f000 f9d4 	bl	800e5e4 <__multadd>
 800e23c:	4601      	mov	r1, r0
 800e23e:	4606      	mov	r6, r0
 800e240:	ee18 0a10 	vmov	r0, s16
 800e244:	f000 fbee 	bl	800ea24 <__mcmp>
 800e248:	2800      	cmp	r0, #0
 800e24a:	f73f adbb 	bgt.w	800ddc4 <_dtoa_r+0x4b4>
 800e24e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e250:	9d01      	ldr	r5, [sp, #4]
 800e252:	43db      	mvns	r3, r3
 800e254:	9300      	str	r3, [sp, #0]
 800e256:	f04f 0800 	mov.w	r8, #0
 800e25a:	4631      	mov	r1, r6
 800e25c:	4620      	mov	r0, r4
 800e25e:	f000 f99f 	bl	800e5a0 <_Bfree>
 800e262:	2f00      	cmp	r7, #0
 800e264:	f43f aea4 	beq.w	800dfb0 <_dtoa_r+0x6a0>
 800e268:	f1b8 0f00 	cmp.w	r8, #0
 800e26c:	d005      	beq.n	800e27a <_dtoa_r+0x96a>
 800e26e:	45b8      	cmp	r8, r7
 800e270:	d003      	beq.n	800e27a <_dtoa_r+0x96a>
 800e272:	4641      	mov	r1, r8
 800e274:	4620      	mov	r0, r4
 800e276:	f000 f993 	bl	800e5a0 <_Bfree>
 800e27a:	4639      	mov	r1, r7
 800e27c:	4620      	mov	r0, r4
 800e27e:	f000 f98f 	bl	800e5a0 <_Bfree>
 800e282:	e695      	b.n	800dfb0 <_dtoa_r+0x6a0>
 800e284:	2600      	movs	r6, #0
 800e286:	4637      	mov	r7, r6
 800e288:	e7e1      	b.n	800e24e <_dtoa_r+0x93e>
 800e28a:	9700      	str	r7, [sp, #0]
 800e28c:	4637      	mov	r7, r6
 800e28e:	e599      	b.n	800ddc4 <_dtoa_r+0x4b4>
 800e290:	40240000 	.word	0x40240000
 800e294:	9b08      	ldr	r3, [sp, #32]
 800e296:	2b00      	cmp	r3, #0
 800e298:	f000 80ca 	beq.w	800e430 <_dtoa_r+0xb20>
 800e29c:	9b03      	ldr	r3, [sp, #12]
 800e29e:	9302      	str	r3, [sp, #8]
 800e2a0:	2d00      	cmp	r5, #0
 800e2a2:	dd05      	ble.n	800e2b0 <_dtoa_r+0x9a0>
 800e2a4:	4639      	mov	r1, r7
 800e2a6:	462a      	mov	r2, r5
 800e2a8:	4620      	mov	r0, r4
 800e2aa:	f000 fb4b 	bl	800e944 <__lshift>
 800e2ae:	4607      	mov	r7, r0
 800e2b0:	f1b8 0f00 	cmp.w	r8, #0
 800e2b4:	d05b      	beq.n	800e36e <_dtoa_r+0xa5e>
 800e2b6:	6879      	ldr	r1, [r7, #4]
 800e2b8:	4620      	mov	r0, r4
 800e2ba:	f000 f931 	bl	800e520 <_Balloc>
 800e2be:	4605      	mov	r5, r0
 800e2c0:	b928      	cbnz	r0, 800e2ce <_dtoa_r+0x9be>
 800e2c2:	4b87      	ldr	r3, [pc, #540]	; (800e4e0 <_dtoa_r+0xbd0>)
 800e2c4:	4602      	mov	r2, r0
 800e2c6:	f240 21ea 	movw	r1, #746	; 0x2ea
 800e2ca:	f7ff bb3b 	b.w	800d944 <_dtoa_r+0x34>
 800e2ce:	693a      	ldr	r2, [r7, #16]
 800e2d0:	3202      	adds	r2, #2
 800e2d2:	0092      	lsls	r2, r2, #2
 800e2d4:	f107 010c 	add.w	r1, r7, #12
 800e2d8:	300c      	adds	r0, #12
 800e2da:	f000 f913 	bl	800e504 <memcpy>
 800e2de:	2201      	movs	r2, #1
 800e2e0:	4629      	mov	r1, r5
 800e2e2:	4620      	mov	r0, r4
 800e2e4:	f000 fb2e 	bl	800e944 <__lshift>
 800e2e8:	9b01      	ldr	r3, [sp, #4]
 800e2ea:	f103 0901 	add.w	r9, r3, #1
 800e2ee:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800e2f2:	4413      	add	r3, r2
 800e2f4:	9305      	str	r3, [sp, #20]
 800e2f6:	f00a 0301 	and.w	r3, sl, #1
 800e2fa:	46b8      	mov	r8, r7
 800e2fc:	9304      	str	r3, [sp, #16]
 800e2fe:	4607      	mov	r7, r0
 800e300:	4631      	mov	r1, r6
 800e302:	ee18 0a10 	vmov	r0, s16
 800e306:	f7ff fa75 	bl	800d7f4 <quorem>
 800e30a:	4641      	mov	r1, r8
 800e30c:	9002      	str	r0, [sp, #8]
 800e30e:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800e312:	ee18 0a10 	vmov	r0, s16
 800e316:	f000 fb85 	bl	800ea24 <__mcmp>
 800e31a:	463a      	mov	r2, r7
 800e31c:	9003      	str	r0, [sp, #12]
 800e31e:	4631      	mov	r1, r6
 800e320:	4620      	mov	r0, r4
 800e322:	f000 fb9b 	bl	800ea5c <__mdiff>
 800e326:	68c2      	ldr	r2, [r0, #12]
 800e328:	f109 3bff 	add.w	fp, r9, #4294967295
 800e32c:	4605      	mov	r5, r0
 800e32e:	bb02      	cbnz	r2, 800e372 <_dtoa_r+0xa62>
 800e330:	4601      	mov	r1, r0
 800e332:	ee18 0a10 	vmov	r0, s16
 800e336:	f000 fb75 	bl	800ea24 <__mcmp>
 800e33a:	4602      	mov	r2, r0
 800e33c:	4629      	mov	r1, r5
 800e33e:	4620      	mov	r0, r4
 800e340:	9207      	str	r2, [sp, #28]
 800e342:	f000 f92d 	bl	800e5a0 <_Bfree>
 800e346:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800e34a:	ea43 0102 	orr.w	r1, r3, r2
 800e34e:	9b04      	ldr	r3, [sp, #16]
 800e350:	430b      	orrs	r3, r1
 800e352:	464d      	mov	r5, r9
 800e354:	d10f      	bne.n	800e376 <_dtoa_r+0xa66>
 800e356:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800e35a:	d02a      	beq.n	800e3b2 <_dtoa_r+0xaa2>
 800e35c:	9b03      	ldr	r3, [sp, #12]
 800e35e:	2b00      	cmp	r3, #0
 800e360:	dd02      	ble.n	800e368 <_dtoa_r+0xa58>
 800e362:	9b02      	ldr	r3, [sp, #8]
 800e364:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 800e368:	f88b a000 	strb.w	sl, [fp]
 800e36c:	e775      	b.n	800e25a <_dtoa_r+0x94a>
 800e36e:	4638      	mov	r0, r7
 800e370:	e7ba      	b.n	800e2e8 <_dtoa_r+0x9d8>
 800e372:	2201      	movs	r2, #1
 800e374:	e7e2      	b.n	800e33c <_dtoa_r+0xa2c>
 800e376:	9b03      	ldr	r3, [sp, #12]
 800e378:	2b00      	cmp	r3, #0
 800e37a:	db04      	blt.n	800e386 <_dtoa_r+0xa76>
 800e37c:	9906      	ldr	r1, [sp, #24]
 800e37e:	430b      	orrs	r3, r1
 800e380:	9904      	ldr	r1, [sp, #16]
 800e382:	430b      	orrs	r3, r1
 800e384:	d122      	bne.n	800e3cc <_dtoa_r+0xabc>
 800e386:	2a00      	cmp	r2, #0
 800e388:	ddee      	ble.n	800e368 <_dtoa_r+0xa58>
 800e38a:	ee18 1a10 	vmov	r1, s16
 800e38e:	2201      	movs	r2, #1
 800e390:	4620      	mov	r0, r4
 800e392:	f000 fad7 	bl	800e944 <__lshift>
 800e396:	4631      	mov	r1, r6
 800e398:	ee08 0a10 	vmov	s16, r0
 800e39c:	f000 fb42 	bl	800ea24 <__mcmp>
 800e3a0:	2800      	cmp	r0, #0
 800e3a2:	dc03      	bgt.n	800e3ac <_dtoa_r+0xa9c>
 800e3a4:	d1e0      	bne.n	800e368 <_dtoa_r+0xa58>
 800e3a6:	f01a 0f01 	tst.w	sl, #1
 800e3aa:	d0dd      	beq.n	800e368 <_dtoa_r+0xa58>
 800e3ac:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800e3b0:	d1d7      	bne.n	800e362 <_dtoa_r+0xa52>
 800e3b2:	2339      	movs	r3, #57	; 0x39
 800e3b4:	f88b 3000 	strb.w	r3, [fp]
 800e3b8:	462b      	mov	r3, r5
 800e3ba:	461d      	mov	r5, r3
 800e3bc:	3b01      	subs	r3, #1
 800e3be:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800e3c2:	2a39      	cmp	r2, #57	; 0x39
 800e3c4:	d071      	beq.n	800e4aa <_dtoa_r+0xb9a>
 800e3c6:	3201      	adds	r2, #1
 800e3c8:	701a      	strb	r2, [r3, #0]
 800e3ca:	e746      	b.n	800e25a <_dtoa_r+0x94a>
 800e3cc:	2a00      	cmp	r2, #0
 800e3ce:	dd07      	ble.n	800e3e0 <_dtoa_r+0xad0>
 800e3d0:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800e3d4:	d0ed      	beq.n	800e3b2 <_dtoa_r+0xaa2>
 800e3d6:	f10a 0301 	add.w	r3, sl, #1
 800e3da:	f88b 3000 	strb.w	r3, [fp]
 800e3de:	e73c      	b.n	800e25a <_dtoa_r+0x94a>
 800e3e0:	9b05      	ldr	r3, [sp, #20]
 800e3e2:	f809 ac01 	strb.w	sl, [r9, #-1]
 800e3e6:	4599      	cmp	r9, r3
 800e3e8:	d047      	beq.n	800e47a <_dtoa_r+0xb6a>
 800e3ea:	ee18 1a10 	vmov	r1, s16
 800e3ee:	2300      	movs	r3, #0
 800e3f0:	220a      	movs	r2, #10
 800e3f2:	4620      	mov	r0, r4
 800e3f4:	f000 f8f6 	bl	800e5e4 <__multadd>
 800e3f8:	45b8      	cmp	r8, r7
 800e3fa:	ee08 0a10 	vmov	s16, r0
 800e3fe:	f04f 0300 	mov.w	r3, #0
 800e402:	f04f 020a 	mov.w	r2, #10
 800e406:	4641      	mov	r1, r8
 800e408:	4620      	mov	r0, r4
 800e40a:	d106      	bne.n	800e41a <_dtoa_r+0xb0a>
 800e40c:	f000 f8ea 	bl	800e5e4 <__multadd>
 800e410:	4680      	mov	r8, r0
 800e412:	4607      	mov	r7, r0
 800e414:	f109 0901 	add.w	r9, r9, #1
 800e418:	e772      	b.n	800e300 <_dtoa_r+0x9f0>
 800e41a:	f000 f8e3 	bl	800e5e4 <__multadd>
 800e41e:	4639      	mov	r1, r7
 800e420:	4680      	mov	r8, r0
 800e422:	2300      	movs	r3, #0
 800e424:	220a      	movs	r2, #10
 800e426:	4620      	mov	r0, r4
 800e428:	f000 f8dc 	bl	800e5e4 <__multadd>
 800e42c:	4607      	mov	r7, r0
 800e42e:	e7f1      	b.n	800e414 <_dtoa_r+0xb04>
 800e430:	9b03      	ldr	r3, [sp, #12]
 800e432:	9302      	str	r3, [sp, #8]
 800e434:	9d01      	ldr	r5, [sp, #4]
 800e436:	ee18 0a10 	vmov	r0, s16
 800e43a:	4631      	mov	r1, r6
 800e43c:	f7ff f9da 	bl	800d7f4 <quorem>
 800e440:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800e444:	9b01      	ldr	r3, [sp, #4]
 800e446:	f805 ab01 	strb.w	sl, [r5], #1
 800e44a:	1aea      	subs	r2, r5, r3
 800e44c:	9b02      	ldr	r3, [sp, #8]
 800e44e:	4293      	cmp	r3, r2
 800e450:	dd09      	ble.n	800e466 <_dtoa_r+0xb56>
 800e452:	ee18 1a10 	vmov	r1, s16
 800e456:	2300      	movs	r3, #0
 800e458:	220a      	movs	r2, #10
 800e45a:	4620      	mov	r0, r4
 800e45c:	f000 f8c2 	bl	800e5e4 <__multadd>
 800e460:	ee08 0a10 	vmov	s16, r0
 800e464:	e7e7      	b.n	800e436 <_dtoa_r+0xb26>
 800e466:	9b02      	ldr	r3, [sp, #8]
 800e468:	2b00      	cmp	r3, #0
 800e46a:	bfc8      	it	gt
 800e46c:	461d      	movgt	r5, r3
 800e46e:	9b01      	ldr	r3, [sp, #4]
 800e470:	bfd8      	it	le
 800e472:	2501      	movle	r5, #1
 800e474:	441d      	add	r5, r3
 800e476:	f04f 0800 	mov.w	r8, #0
 800e47a:	ee18 1a10 	vmov	r1, s16
 800e47e:	2201      	movs	r2, #1
 800e480:	4620      	mov	r0, r4
 800e482:	f000 fa5f 	bl	800e944 <__lshift>
 800e486:	4631      	mov	r1, r6
 800e488:	ee08 0a10 	vmov	s16, r0
 800e48c:	f000 faca 	bl	800ea24 <__mcmp>
 800e490:	2800      	cmp	r0, #0
 800e492:	dc91      	bgt.n	800e3b8 <_dtoa_r+0xaa8>
 800e494:	d102      	bne.n	800e49c <_dtoa_r+0xb8c>
 800e496:	f01a 0f01 	tst.w	sl, #1
 800e49a:	d18d      	bne.n	800e3b8 <_dtoa_r+0xaa8>
 800e49c:	462b      	mov	r3, r5
 800e49e:	461d      	mov	r5, r3
 800e4a0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800e4a4:	2a30      	cmp	r2, #48	; 0x30
 800e4a6:	d0fa      	beq.n	800e49e <_dtoa_r+0xb8e>
 800e4a8:	e6d7      	b.n	800e25a <_dtoa_r+0x94a>
 800e4aa:	9a01      	ldr	r2, [sp, #4]
 800e4ac:	429a      	cmp	r2, r3
 800e4ae:	d184      	bne.n	800e3ba <_dtoa_r+0xaaa>
 800e4b0:	9b00      	ldr	r3, [sp, #0]
 800e4b2:	3301      	adds	r3, #1
 800e4b4:	9300      	str	r3, [sp, #0]
 800e4b6:	2331      	movs	r3, #49	; 0x31
 800e4b8:	7013      	strb	r3, [r2, #0]
 800e4ba:	e6ce      	b.n	800e25a <_dtoa_r+0x94a>
 800e4bc:	4b09      	ldr	r3, [pc, #36]	; (800e4e4 <_dtoa_r+0xbd4>)
 800e4be:	f7ff ba95 	b.w	800d9ec <_dtoa_r+0xdc>
 800e4c2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e4c4:	2b00      	cmp	r3, #0
 800e4c6:	f47f aa6e 	bne.w	800d9a6 <_dtoa_r+0x96>
 800e4ca:	4b07      	ldr	r3, [pc, #28]	; (800e4e8 <_dtoa_r+0xbd8>)
 800e4cc:	f7ff ba8e 	b.w	800d9ec <_dtoa_r+0xdc>
 800e4d0:	9b02      	ldr	r3, [sp, #8]
 800e4d2:	2b00      	cmp	r3, #0
 800e4d4:	dcae      	bgt.n	800e434 <_dtoa_r+0xb24>
 800e4d6:	9b06      	ldr	r3, [sp, #24]
 800e4d8:	2b02      	cmp	r3, #2
 800e4da:	f73f aea8 	bgt.w	800e22e <_dtoa_r+0x91e>
 800e4de:	e7a9      	b.n	800e434 <_dtoa_r+0xb24>
 800e4e0:	08011377 	.word	0x08011377
 800e4e4:	080112d4 	.word	0x080112d4
 800e4e8:	080112f8 	.word	0x080112f8

0800e4ec <_localeconv_r>:
 800e4ec:	4800      	ldr	r0, [pc, #0]	; (800e4f0 <_localeconv_r+0x4>)
 800e4ee:	4770      	bx	lr
 800e4f0:	2000029c 	.word	0x2000029c

0800e4f4 <malloc>:
 800e4f4:	4b02      	ldr	r3, [pc, #8]	; (800e500 <malloc+0xc>)
 800e4f6:	4601      	mov	r1, r0
 800e4f8:	6818      	ldr	r0, [r3, #0]
 800e4fa:	f000 bc17 	b.w	800ed2c <_malloc_r>
 800e4fe:	bf00      	nop
 800e500:	20000148 	.word	0x20000148

0800e504 <memcpy>:
 800e504:	440a      	add	r2, r1
 800e506:	4291      	cmp	r1, r2
 800e508:	f100 33ff 	add.w	r3, r0, #4294967295
 800e50c:	d100      	bne.n	800e510 <memcpy+0xc>
 800e50e:	4770      	bx	lr
 800e510:	b510      	push	{r4, lr}
 800e512:	f811 4b01 	ldrb.w	r4, [r1], #1
 800e516:	f803 4f01 	strb.w	r4, [r3, #1]!
 800e51a:	4291      	cmp	r1, r2
 800e51c:	d1f9      	bne.n	800e512 <memcpy+0xe>
 800e51e:	bd10      	pop	{r4, pc}

0800e520 <_Balloc>:
 800e520:	b570      	push	{r4, r5, r6, lr}
 800e522:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800e524:	4604      	mov	r4, r0
 800e526:	460d      	mov	r5, r1
 800e528:	b976      	cbnz	r6, 800e548 <_Balloc+0x28>
 800e52a:	2010      	movs	r0, #16
 800e52c:	f7ff ffe2 	bl	800e4f4 <malloc>
 800e530:	4602      	mov	r2, r0
 800e532:	6260      	str	r0, [r4, #36]	; 0x24
 800e534:	b920      	cbnz	r0, 800e540 <_Balloc+0x20>
 800e536:	4b18      	ldr	r3, [pc, #96]	; (800e598 <_Balloc+0x78>)
 800e538:	4818      	ldr	r0, [pc, #96]	; (800e59c <_Balloc+0x7c>)
 800e53a:	2166      	movs	r1, #102	; 0x66
 800e53c:	f000 fdd6 	bl	800f0ec <__assert_func>
 800e540:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800e544:	6006      	str	r6, [r0, #0]
 800e546:	60c6      	str	r6, [r0, #12]
 800e548:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800e54a:	68f3      	ldr	r3, [r6, #12]
 800e54c:	b183      	cbz	r3, 800e570 <_Balloc+0x50>
 800e54e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e550:	68db      	ldr	r3, [r3, #12]
 800e552:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800e556:	b9b8      	cbnz	r0, 800e588 <_Balloc+0x68>
 800e558:	2101      	movs	r1, #1
 800e55a:	fa01 f605 	lsl.w	r6, r1, r5
 800e55e:	1d72      	adds	r2, r6, #5
 800e560:	0092      	lsls	r2, r2, #2
 800e562:	4620      	mov	r0, r4
 800e564:	f000 fb60 	bl	800ec28 <_calloc_r>
 800e568:	b160      	cbz	r0, 800e584 <_Balloc+0x64>
 800e56a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800e56e:	e00e      	b.n	800e58e <_Balloc+0x6e>
 800e570:	2221      	movs	r2, #33	; 0x21
 800e572:	2104      	movs	r1, #4
 800e574:	4620      	mov	r0, r4
 800e576:	f000 fb57 	bl	800ec28 <_calloc_r>
 800e57a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e57c:	60f0      	str	r0, [r6, #12]
 800e57e:	68db      	ldr	r3, [r3, #12]
 800e580:	2b00      	cmp	r3, #0
 800e582:	d1e4      	bne.n	800e54e <_Balloc+0x2e>
 800e584:	2000      	movs	r0, #0
 800e586:	bd70      	pop	{r4, r5, r6, pc}
 800e588:	6802      	ldr	r2, [r0, #0]
 800e58a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800e58e:	2300      	movs	r3, #0
 800e590:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800e594:	e7f7      	b.n	800e586 <_Balloc+0x66>
 800e596:	bf00      	nop
 800e598:	08011305 	.word	0x08011305
 800e59c:	08011388 	.word	0x08011388

0800e5a0 <_Bfree>:
 800e5a0:	b570      	push	{r4, r5, r6, lr}
 800e5a2:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800e5a4:	4605      	mov	r5, r0
 800e5a6:	460c      	mov	r4, r1
 800e5a8:	b976      	cbnz	r6, 800e5c8 <_Bfree+0x28>
 800e5aa:	2010      	movs	r0, #16
 800e5ac:	f7ff ffa2 	bl	800e4f4 <malloc>
 800e5b0:	4602      	mov	r2, r0
 800e5b2:	6268      	str	r0, [r5, #36]	; 0x24
 800e5b4:	b920      	cbnz	r0, 800e5c0 <_Bfree+0x20>
 800e5b6:	4b09      	ldr	r3, [pc, #36]	; (800e5dc <_Bfree+0x3c>)
 800e5b8:	4809      	ldr	r0, [pc, #36]	; (800e5e0 <_Bfree+0x40>)
 800e5ba:	218a      	movs	r1, #138	; 0x8a
 800e5bc:	f000 fd96 	bl	800f0ec <__assert_func>
 800e5c0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800e5c4:	6006      	str	r6, [r0, #0]
 800e5c6:	60c6      	str	r6, [r0, #12]
 800e5c8:	b13c      	cbz	r4, 800e5da <_Bfree+0x3a>
 800e5ca:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800e5cc:	6862      	ldr	r2, [r4, #4]
 800e5ce:	68db      	ldr	r3, [r3, #12]
 800e5d0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800e5d4:	6021      	str	r1, [r4, #0]
 800e5d6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800e5da:	bd70      	pop	{r4, r5, r6, pc}
 800e5dc:	08011305 	.word	0x08011305
 800e5e0:	08011388 	.word	0x08011388

0800e5e4 <__multadd>:
 800e5e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e5e8:	690d      	ldr	r5, [r1, #16]
 800e5ea:	4607      	mov	r7, r0
 800e5ec:	460c      	mov	r4, r1
 800e5ee:	461e      	mov	r6, r3
 800e5f0:	f101 0c14 	add.w	ip, r1, #20
 800e5f4:	2000      	movs	r0, #0
 800e5f6:	f8dc 3000 	ldr.w	r3, [ip]
 800e5fa:	b299      	uxth	r1, r3
 800e5fc:	fb02 6101 	mla	r1, r2, r1, r6
 800e600:	0c1e      	lsrs	r6, r3, #16
 800e602:	0c0b      	lsrs	r3, r1, #16
 800e604:	fb02 3306 	mla	r3, r2, r6, r3
 800e608:	b289      	uxth	r1, r1
 800e60a:	3001      	adds	r0, #1
 800e60c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800e610:	4285      	cmp	r5, r0
 800e612:	f84c 1b04 	str.w	r1, [ip], #4
 800e616:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800e61a:	dcec      	bgt.n	800e5f6 <__multadd+0x12>
 800e61c:	b30e      	cbz	r6, 800e662 <__multadd+0x7e>
 800e61e:	68a3      	ldr	r3, [r4, #8]
 800e620:	42ab      	cmp	r3, r5
 800e622:	dc19      	bgt.n	800e658 <__multadd+0x74>
 800e624:	6861      	ldr	r1, [r4, #4]
 800e626:	4638      	mov	r0, r7
 800e628:	3101      	adds	r1, #1
 800e62a:	f7ff ff79 	bl	800e520 <_Balloc>
 800e62e:	4680      	mov	r8, r0
 800e630:	b928      	cbnz	r0, 800e63e <__multadd+0x5a>
 800e632:	4602      	mov	r2, r0
 800e634:	4b0c      	ldr	r3, [pc, #48]	; (800e668 <__multadd+0x84>)
 800e636:	480d      	ldr	r0, [pc, #52]	; (800e66c <__multadd+0x88>)
 800e638:	21b5      	movs	r1, #181	; 0xb5
 800e63a:	f000 fd57 	bl	800f0ec <__assert_func>
 800e63e:	6922      	ldr	r2, [r4, #16]
 800e640:	3202      	adds	r2, #2
 800e642:	f104 010c 	add.w	r1, r4, #12
 800e646:	0092      	lsls	r2, r2, #2
 800e648:	300c      	adds	r0, #12
 800e64a:	f7ff ff5b 	bl	800e504 <memcpy>
 800e64e:	4621      	mov	r1, r4
 800e650:	4638      	mov	r0, r7
 800e652:	f7ff ffa5 	bl	800e5a0 <_Bfree>
 800e656:	4644      	mov	r4, r8
 800e658:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800e65c:	3501      	adds	r5, #1
 800e65e:	615e      	str	r6, [r3, #20]
 800e660:	6125      	str	r5, [r4, #16]
 800e662:	4620      	mov	r0, r4
 800e664:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e668:	08011377 	.word	0x08011377
 800e66c:	08011388 	.word	0x08011388

0800e670 <__hi0bits>:
 800e670:	0c03      	lsrs	r3, r0, #16
 800e672:	041b      	lsls	r3, r3, #16
 800e674:	b9d3      	cbnz	r3, 800e6ac <__hi0bits+0x3c>
 800e676:	0400      	lsls	r0, r0, #16
 800e678:	2310      	movs	r3, #16
 800e67a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800e67e:	bf04      	itt	eq
 800e680:	0200      	lsleq	r0, r0, #8
 800e682:	3308      	addeq	r3, #8
 800e684:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800e688:	bf04      	itt	eq
 800e68a:	0100      	lsleq	r0, r0, #4
 800e68c:	3304      	addeq	r3, #4
 800e68e:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800e692:	bf04      	itt	eq
 800e694:	0080      	lsleq	r0, r0, #2
 800e696:	3302      	addeq	r3, #2
 800e698:	2800      	cmp	r0, #0
 800e69a:	db05      	blt.n	800e6a8 <__hi0bits+0x38>
 800e69c:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800e6a0:	f103 0301 	add.w	r3, r3, #1
 800e6a4:	bf08      	it	eq
 800e6a6:	2320      	moveq	r3, #32
 800e6a8:	4618      	mov	r0, r3
 800e6aa:	4770      	bx	lr
 800e6ac:	2300      	movs	r3, #0
 800e6ae:	e7e4      	b.n	800e67a <__hi0bits+0xa>

0800e6b0 <__lo0bits>:
 800e6b0:	6803      	ldr	r3, [r0, #0]
 800e6b2:	f013 0207 	ands.w	r2, r3, #7
 800e6b6:	4601      	mov	r1, r0
 800e6b8:	d00b      	beq.n	800e6d2 <__lo0bits+0x22>
 800e6ba:	07da      	lsls	r2, r3, #31
 800e6bc:	d423      	bmi.n	800e706 <__lo0bits+0x56>
 800e6be:	0798      	lsls	r0, r3, #30
 800e6c0:	bf49      	itett	mi
 800e6c2:	085b      	lsrmi	r3, r3, #1
 800e6c4:	089b      	lsrpl	r3, r3, #2
 800e6c6:	2001      	movmi	r0, #1
 800e6c8:	600b      	strmi	r3, [r1, #0]
 800e6ca:	bf5c      	itt	pl
 800e6cc:	600b      	strpl	r3, [r1, #0]
 800e6ce:	2002      	movpl	r0, #2
 800e6d0:	4770      	bx	lr
 800e6d2:	b298      	uxth	r0, r3
 800e6d4:	b9a8      	cbnz	r0, 800e702 <__lo0bits+0x52>
 800e6d6:	0c1b      	lsrs	r3, r3, #16
 800e6d8:	2010      	movs	r0, #16
 800e6da:	b2da      	uxtb	r2, r3
 800e6dc:	b90a      	cbnz	r2, 800e6e2 <__lo0bits+0x32>
 800e6de:	3008      	adds	r0, #8
 800e6e0:	0a1b      	lsrs	r3, r3, #8
 800e6e2:	071a      	lsls	r2, r3, #28
 800e6e4:	bf04      	itt	eq
 800e6e6:	091b      	lsreq	r3, r3, #4
 800e6e8:	3004      	addeq	r0, #4
 800e6ea:	079a      	lsls	r2, r3, #30
 800e6ec:	bf04      	itt	eq
 800e6ee:	089b      	lsreq	r3, r3, #2
 800e6f0:	3002      	addeq	r0, #2
 800e6f2:	07da      	lsls	r2, r3, #31
 800e6f4:	d403      	bmi.n	800e6fe <__lo0bits+0x4e>
 800e6f6:	085b      	lsrs	r3, r3, #1
 800e6f8:	f100 0001 	add.w	r0, r0, #1
 800e6fc:	d005      	beq.n	800e70a <__lo0bits+0x5a>
 800e6fe:	600b      	str	r3, [r1, #0]
 800e700:	4770      	bx	lr
 800e702:	4610      	mov	r0, r2
 800e704:	e7e9      	b.n	800e6da <__lo0bits+0x2a>
 800e706:	2000      	movs	r0, #0
 800e708:	4770      	bx	lr
 800e70a:	2020      	movs	r0, #32
 800e70c:	4770      	bx	lr
	...

0800e710 <__i2b>:
 800e710:	b510      	push	{r4, lr}
 800e712:	460c      	mov	r4, r1
 800e714:	2101      	movs	r1, #1
 800e716:	f7ff ff03 	bl	800e520 <_Balloc>
 800e71a:	4602      	mov	r2, r0
 800e71c:	b928      	cbnz	r0, 800e72a <__i2b+0x1a>
 800e71e:	4b05      	ldr	r3, [pc, #20]	; (800e734 <__i2b+0x24>)
 800e720:	4805      	ldr	r0, [pc, #20]	; (800e738 <__i2b+0x28>)
 800e722:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800e726:	f000 fce1 	bl	800f0ec <__assert_func>
 800e72a:	2301      	movs	r3, #1
 800e72c:	6144      	str	r4, [r0, #20]
 800e72e:	6103      	str	r3, [r0, #16]
 800e730:	bd10      	pop	{r4, pc}
 800e732:	bf00      	nop
 800e734:	08011377 	.word	0x08011377
 800e738:	08011388 	.word	0x08011388

0800e73c <__multiply>:
 800e73c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e740:	4691      	mov	r9, r2
 800e742:	690a      	ldr	r2, [r1, #16]
 800e744:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800e748:	429a      	cmp	r2, r3
 800e74a:	bfb8      	it	lt
 800e74c:	460b      	movlt	r3, r1
 800e74e:	460c      	mov	r4, r1
 800e750:	bfbc      	itt	lt
 800e752:	464c      	movlt	r4, r9
 800e754:	4699      	movlt	r9, r3
 800e756:	6927      	ldr	r7, [r4, #16]
 800e758:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800e75c:	68a3      	ldr	r3, [r4, #8]
 800e75e:	6861      	ldr	r1, [r4, #4]
 800e760:	eb07 060a 	add.w	r6, r7, sl
 800e764:	42b3      	cmp	r3, r6
 800e766:	b085      	sub	sp, #20
 800e768:	bfb8      	it	lt
 800e76a:	3101      	addlt	r1, #1
 800e76c:	f7ff fed8 	bl	800e520 <_Balloc>
 800e770:	b930      	cbnz	r0, 800e780 <__multiply+0x44>
 800e772:	4602      	mov	r2, r0
 800e774:	4b44      	ldr	r3, [pc, #272]	; (800e888 <__multiply+0x14c>)
 800e776:	4845      	ldr	r0, [pc, #276]	; (800e88c <__multiply+0x150>)
 800e778:	f240 115d 	movw	r1, #349	; 0x15d
 800e77c:	f000 fcb6 	bl	800f0ec <__assert_func>
 800e780:	f100 0514 	add.w	r5, r0, #20
 800e784:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800e788:	462b      	mov	r3, r5
 800e78a:	2200      	movs	r2, #0
 800e78c:	4543      	cmp	r3, r8
 800e78e:	d321      	bcc.n	800e7d4 <__multiply+0x98>
 800e790:	f104 0314 	add.w	r3, r4, #20
 800e794:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800e798:	f109 0314 	add.w	r3, r9, #20
 800e79c:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800e7a0:	9202      	str	r2, [sp, #8]
 800e7a2:	1b3a      	subs	r2, r7, r4
 800e7a4:	3a15      	subs	r2, #21
 800e7a6:	f022 0203 	bic.w	r2, r2, #3
 800e7aa:	3204      	adds	r2, #4
 800e7ac:	f104 0115 	add.w	r1, r4, #21
 800e7b0:	428f      	cmp	r7, r1
 800e7b2:	bf38      	it	cc
 800e7b4:	2204      	movcc	r2, #4
 800e7b6:	9201      	str	r2, [sp, #4]
 800e7b8:	9a02      	ldr	r2, [sp, #8]
 800e7ba:	9303      	str	r3, [sp, #12]
 800e7bc:	429a      	cmp	r2, r3
 800e7be:	d80c      	bhi.n	800e7da <__multiply+0x9e>
 800e7c0:	2e00      	cmp	r6, #0
 800e7c2:	dd03      	ble.n	800e7cc <__multiply+0x90>
 800e7c4:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800e7c8:	2b00      	cmp	r3, #0
 800e7ca:	d05a      	beq.n	800e882 <__multiply+0x146>
 800e7cc:	6106      	str	r6, [r0, #16]
 800e7ce:	b005      	add	sp, #20
 800e7d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e7d4:	f843 2b04 	str.w	r2, [r3], #4
 800e7d8:	e7d8      	b.n	800e78c <__multiply+0x50>
 800e7da:	f8b3 a000 	ldrh.w	sl, [r3]
 800e7de:	f1ba 0f00 	cmp.w	sl, #0
 800e7e2:	d024      	beq.n	800e82e <__multiply+0xf2>
 800e7e4:	f104 0e14 	add.w	lr, r4, #20
 800e7e8:	46a9      	mov	r9, r5
 800e7ea:	f04f 0c00 	mov.w	ip, #0
 800e7ee:	f85e 2b04 	ldr.w	r2, [lr], #4
 800e7f2:	f8d9 1000 	ldr.w	r1, [r9]
 800e7f6:	fa1f fb82 	uxth.w	fp, r2
 800e7fa:	b289      	uxth	r1, r1
 800e7fc:	fb0a 110b 	mla	r1, sl, fp, r1
 800e800:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800e804:	f8d9 2000 	ldr.w	r2, [r9]
 800e808:	4461      	add	r1, ip
 800e80a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800e80e:	fb0a c20b 	mla	r2, sl, fp, ip
 800e812:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800e816:	b289      	uxth	r1, r1
 800e818:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800e81c:	4577      	cmp	r7, lr
 800e81e:	f849 1b04 	str.w	r1, [r9], #4
 800e822:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800e826:	d8e2      	bhi.n	800e7ee <__multiply+0xb2>
 800e828:	9a01      	ldr	r2, [sp, #4]
 800e82a:	f845 c002 	str.w	ip, [r5, r2]
 800e82e:	9a03      	ldr	r2, [sp, #12]
 800e830:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800e834:	3304      	adds	r3, #4
 800e836:	f1b9 0f00 	cmp.w	r9, #0
 800e83a:	d020      	beq.n	800e87e <__multiply+0x142>
 800e83c:	6829      	ldr	r1, [r5, #0]
 800e83e:	f104 0c14 	add.w	ip, r4, #20
 800e842:	46ae      	mov	lr, r5
 800e844:	f04f 0a00 	mov.w	sl, #0
 800e848:	f8bc b000 	ldrh.w	fp, [ip]
 800e84c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800e850:	fb09 220b 	mla	r2, r9, fp, r2
 800e854:	4492      	add	sl, r2
 800e856:	b289      	uxth	r1, r1
 800e858:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800e85c:	f84e 1b04 	str.w	r1, [lr], #4
 800e860:	f85c 2b04 	ldr.w	r2, [ip], #4
 800e864:	f8be 1000 	ldrh.w	r1, [lr]
 800e868:	0c12      	lsrs	r2, r2, #16
 800e86a:	fb09 1102 	mla	r1, r9, r2, r1
 800e86e:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800e872:	4567      	cmp	r7, ip
 800e874:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800e878:	d8e6      	bhi.n	800e848 <__multiply+0x10c>
 800e87a:	9a01      	ldr	r2, [sp, #4]
 800e87c:	50a9      	str	r1, [r5, r2]
 800e87e:	3504      	adds	r5, #4
 800e880:	e79a      	b.n	800e7b8 <__multiply+0x7c>
 800e882:	3e01      	subs	r6, #1
 800e884:	e79c      	b.n	800e7c0 <__multiply+0x84>
 800e886:	bf00      	nop
 800e888:	08011377 	.word	0x08011377
 800e88c:	08011388 	.word	0x08011388

0800e890 <__pow5mult>:
 800e890:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e894:	4615      	mov	r5, r2
 800e896:	f012 0203 	ands.w	r2, r2, #3
 800e89a:	4606      	mov	r6, r0
 800e89c:	460f      	mov	r7, r1
 800e89e:	d007      	beq.n	800e8b0 <__pow5mult+0x20>
 800e8a0:	4c25      	ldr	r4, [pc, #148]	; (800e938 <__pow5mult+0xa8>)
 800e8a2:	3a01      	subs	r2, #1
 800e8a4:	2300      	movs	r3, #0
 800e8a6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800e8aa:	f7ff fe9b 	bl	800e5e4 <__multadd>
 800e8ae:	4607      	mov	r7, r0
 800e8b0:	10ad      	asrs	r5, r5, #2
 800e8b2:	d03d      	beq.n	800e930 <__pow5mult+0xa0>
 800e8b4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800e8b6:	b97c      	cbnz	r4, 800e8d8 <__pow5mult+0x48>
 800e8b8:	2010      	movs	r0, #16
 800e8ba:	f7ff fe1b 	bl	800e4f4 <malloc>
 800e8be:	4602      	mov	r2, r0
 800e8c0:	6270      	str	r0, [r6, #36]	; 0x24
 800e8c2:	b928      	cbnz	r0, 800e8d0 <__pow5mult+0x40>
 800e8c4:	4b1d      	ldr	r3, [pc, #116]	; (800e93c <__pow5mult+0xac>)
 800e8c6:	481e      	ldr	r0, [pc, #120]	; (800e940 <__pow5mult+0xb0>)
 800e8c8:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800e8cc:	f000 fc0e 	bl	800f0ec <__assert_func>
 800e8d0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800e8d4:	6004      	str	r4, [r0, #0]
 800e8d6:	60c4      	str	r4, [r0, #12]
 800e8d8:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800e8dc:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800e8e0:	b94c      	cbnz	r4, 800e8f6 <__pow5mult+0x66>
 800e8e2:	f240 2171 	movw	r1, #625	; 0x271
 800e8e6:	4630      	mov	r0, r6
 800e8e8:	f7ff ff12 	bl	800e710 <__i2b>
 800e8ec:	2300      	movs	r3, #0
 800e8ee:	f8c8 0008 	str.w	r0, [r8, #8]
 800e8f2:	4604      	mov	r4, r0
 800e8f4:	6003      	str	r3, [r0, #0]
 800e8f6:	f04f 0900 	mov.w	r9, #0
 800e8fa:	07eb      	lsls	r3, r5, #31
 800e8fc:	d50a      	bpl.n	800e914 <__pow5mult+0x84>
 800e8fe:	4639      	mov	r1, r7
 800e900:	4622      	mov	r2, r4
 800e902:	4630      	mov	r0, r6
 800e904:	f7ff ff1a 	bl	800e73c <__multiply>
 800e908:	4639      	mov	r1, r7
 800e90a:	4680      	mov	r8, r0
 800e90c:	4630      	mov	r0, r6
 800e90e:	f7ff fe47 	bl	800e5a0 <_Bfree>
 800e912:	4647      	mov	r7, r8
 800e914:	106d      	asrs	r5, r5, #1
 800e916:	d00b      	beq.n	800e930 <__pow5mult+0xa0>
 800e918:	6820      	ldr	r0, [r4, #0]
 800e91a:	b938      	cbnz	r0, 800e92c <__pow5mult+0x9c>
 800e91c:	4622      	mov	r2, r4
 800e91e:	4621      	mov	r1, r4
 800e920:	4630      	mov	r0, r6
 800e922:	f7ff ff0b 	bl	800e73c <__multiply>
 800e926:	6020      	str	r0, [r4, #0]
 800e928:	f8c0 9000 	str.w	r9, [r0]
 800e92c:	4604      	mov	r4, r0
 800e92e:	e7e4      	b.n	800e8fa <__pow5mult+0x6a>
 800e930:	4638      	mov	r0, r7
 800e932:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e936:	bf00      	nop
 800e938:	080114d8 	.word	0x080114d8
 800e93c:	08011305 	.word	0x08011305
 800e940:	08011388 	.word	0x08011388

0800e944 <__lshift>:
 800e944:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e948:	460c      	mov	r4, r1
 800e94a:	6849      	ldr	r1, [r1, #4]
 800e94c:	6923      	ldr	r3, [r4, #16]
 800e94e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800e952:	68a3      	ldr	r3, [r4, #8]
 800e954:	4607      	mov	r7, r0
 800e956:	4691      	mov	r9, r2
 800e958:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800e95c:	f108 0601 	add.w	r6, r8, #1
 800e960:	42b3      	cmp	r3, r6
 800e962:	db0b      	blt.n	800e97c <__lshift+0x38>
 800e964:	4638      	mov	r0, r7
 800e966:	f7ff fddb 	bl	800e520 <_Balloc>
 800e96a:	4605      	mov	r5, r0
 800e96c:	b948      	cbnz	r0, 800e982 <__lshift+0x3e>
 800e96e:	4602      	mov	r2, r0
 800e970:	4b2a      	ldr	r3, [pc, #168]	; (800ea1c <__lshift+0xd8>)
 800e972:	482b      	ldr	r0, [pc, #172]	; (800ea20 <__lshift+0xdc>)
 800e974:	f240 11d9 	movw	r1, #473	; 0x1d9
 800e978:	f000 fbb8 	bl	800f0ec <__assert_func>
 800e97c:	3101      	adds	r1, #1
 800e97e:	005b      	lsls	r3, r3, #1
 800e980:	e7ee      	b.n	800e960 <__lshift+0x1c>
 800e982:	2300      	movs	r3, #0
 800e984:	f100 0114 	add.w	r1, r0, #20
 800e988:	f100 0210 	add.w	r2, r0, #16
 800e98c:	4618      	mov	r0, r3
 800e98e:	4553      	cmp	r3, sl
 800e990:	db37      	blt.n	800ea02 <__lshift+0xbe>
 800e992:	6920      	ldr	r0, [r4, #16]
 800e994:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800e998:	f104 0314 	add.w	r3, r4, #20
 800e99c:	f019 091f 	ands.w	r9, r9, #31
 800e9a0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800e9a4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800e9a8:	d02f      	beq.n	800ea0a <__lshift+0xc6>
 800e9aa:	f1c9 0e20 	rsb	lr, r9, #32
 800e9ae:	468a      	mov	sl, r1
 800e9b0:	f04f 0c00 	mov.w	ip, #0
 800e9b4:	681a      	ldr	r2, [r3, #0]
 800e9b6:	fa02 f209 	lsl.w	r2, r2, r9
 800e9ba:	ea42 020c 	orr.w	r2, r2, ip
 800e9be:	f84a 2b04 	str.w	r2, [sl], #4
 800e9c2:	f853 2b04 	ldr.w	r2, [r3], #4
 800e9c6:	4298      	cmp	r0, r3
 800e9c8:	fa22 fc0e 	lsr.w	ip, r2, lr
 800e9cc:	d8f2      	bhi.n	800e9b4 <__lshift+0x70>
 800e9ce:	1b03      	subs	r3, r0, r4
 800e9d0:	3b15      	subs	r3, #21
 800e9d2:	f023 0303 	bic.w	r3, r3, #3
 800e9d6:	3304      	adds	r3, #4
 800e9d8:	f104 0215 	add.w	r2, r4, #21
 800e9dc:	4290      	cmp	r0, r2
 800e9de:	bf38      	it	cc
 800e9e0:	2304      	movcc	r3, #4
 800e9e2:	f841 c003 	str.w	ip, [r1, r3]
 800e9e6:	f1bc 0f00 	cmp.w	ip, #0
 800e9ea:	d001      	beq.n	800e9f0 <__lshift+0xac>
 800e9ec:	f108 0602 	add.w	r6, r8, #2
 800e9f0:	3e01      	subs	r6, #1
 800e9f2:	4638      	mov	r0, r7
 800e9f4:	612e      	str	r6, [r5, #16]
 800e9f6:	4621      	mov	r1, r4
 800e9f8:	f7ff fdd2 	bl	800e5a0 <_Bfree>
 800e9fc:	4628      	mov	r0, r5
 800e9fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ea02:	f842 0f04 	str.w	r0, [r2, #4]!
 800ea06:	3301      	adds	r3, #1
 800ea08:	e7c1      	b.n	800e98e <__lshift+0x4a>
 800ea0a:	3904      	subs	r1, #4
 800ea0c:	f853 2b04 	ldr.w	r2, [r3], #4
 800ea10:	f841 2f04 	str.w	r2, [r1, #4]!
 800ea14:	4298      	cmp	r0, r3
 800ea16:	d8f9      	bhi.n	800ea0c <__lshift+0xc8>
 800ea18:	e7ea      	b.n	800e9f0 <__lshift+0xac>
 800ea1a:	bf00      	nop
 800ea1c:	08011377 	.word	0x08011377
 800ea20:	08011388 	.word	0x08011388

0800ea24 <__mcmp>:
 800ea24:	b530      	push	{r4, r5, lr}
 800ea26:	6902      	ldr	r2, [r0, #16]
 800ea28:	690c      	ldr	r4, [r1, #16]
 800ea2a:	1b12      	subs	r2, r2, r4
 800ea2c:	d10e      	bne.n	800ea4c <__mcmp+0x28>
 800ea2e:	f100 0314 	add.w	r3, r0, #20
 800ea32:	3114      	adds	r1, #20
 800ea34:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800ea38:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800ea3c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800ea40:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800ea44:	42a5      	cmp	r5, r4
 800ea46:	d003      	beq.n	800ea50 <__mcmp+0x2c>
 800ea48:	d305      	bcc.n	800ea56 <__mcmp+0x32>
 800ea4a:	2201      	movs	r2, #1
 800ea4c:	4610      	mov	r0, r2
 800ea4e:	bd30      	pop	{r4, r5, pc}
 800ea50:	4283      	cmp	r3, r0
 800ea52:	d3f3      	bcc.n	800ea3c <__mcmp+0x18>
 800ea54:	e7fa      	b.n	800ea4c <__mcmp+0x28>
 800ea56:	f04f 32ff 	mov.w	r2, #4294967295
 800ea5a:	e7f7      	b.n	800ea4c <__mcmp+0x28>

0800ea5c <__mdiff>:
 800ea5c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ea60:	460c      	mov	r4, r1
 800ea62:	4606      	mov	r6, r0
 800ea64:	4611      	mov	r1, r2
 800ea66:	4620      	mov	r0, r4
 800ea68:	4690      	mov	r8, r2
 800ea6a:	f7ff ffdb 	bl	800ea24 <__mcmp>
 800ea6e:	1e05      	subs	r5, r0, #0
 800ea70:	d110      	bne.n	800ea94 <__mdiff+0x38>
 800ea72:	4629      	mov	r1, r5
 800ea74:	4630      	mov	r0, r6
 800ea76:	f7ff fd53 	bl	800e520 <_Balloc>
 800ea7a:	b930      	cbnz	r0, 800ea8a <__mdiff+0x2e>
 800ea7c:	4b3a      	ldr	r3, [pc, #232]	; (800eb68 <__mdiff+0x10c>)
 800ea7e:	4602      	mov	r2, r0
 800ea80:	f240 2132 	movw	r1, #562	; 0x232
 800ea84:	4839      	ldr	r0, [pc, #228]	; (800eb6c <__mdiff+0x110>)
 800ea86:	f000 fb31 	bl	800f0ec <__assert_func>
 800ea8a:	2301      	movs	r3, #1
 800ea8c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800ea90:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ea94:	bfa4      	itt	ge
 800ea96:	4643      	movge	r3, r8
 800ea98:	46a0      	movge	r8, r4
 800ea9a:	4630      	mov	r0, r6
 800ea9c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800eaa0:	bfa6      	itte	ge
 800eaa2:	461c      	movge	r4, r3
 800eaa4:	2500      	movge	r5, #0
 800eaa6:	2501      	movlt	r5, #1
 800eaa8:	f7ff fd3a 	bl	800e520 <_Balloc>
 800eaac:	b920      	cbnz	r0, 800eab8 <__mdiff+0x5c>
 800eaae:	4b2e      	ldr	r3, [pc, #184]	; (800eb68 <__mdiff+0x10c>)
 800eab0:	4602      	mov	r2, r0
 800eab2:	f44f 7110 	mov.w	r1, #576	; 0x240
 800eab6:	e7e5      	b.n	800ea84 <__mdiff+0x28>
 800eab8:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800eabc:	6926      	ldr	r6, [r4, #16]
 800eabe:	60c5      	str	r5, [r0, #12]
 800eac0:	f104 0914 	add.w	r9, r4, #20
 800eac4:	f108 0514 	add.w	r5, r8, #20
 800eac8:	f100 0e14 	add.w	lr, r0, #20
 800eacc:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800ead0:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800ead4:	f108 0210 	add.w	r2, r8, #16
 800ead8:	46f2      	mov	sl, lr
 800eada:	2100      	movs	r1, #0
 800eadc:	f859 3b04 	ldr.w	r3, [r9], #4
 800eae0:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800eae4:	fa1f f883 	uxth.w	r8, r3
 800eae8:	fa11 f18b 	uxtah	r1, r1, fp
 800eaec:	0c1b      	lsrs	r3, r3, #16
 800eaee:	eba1 0808 	sub.w	r8, r1, r8
 800eaf2:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800eaf6:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800eafa:	fa1f f888 	uxth.w	r8, r8
 800eafe:	1419      	asrs	r1, r3, #16
 800eb00:	454e      	cmp	r6, r9
 800eb02:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800eb06:	f84a 3b04 	str.w	r3, [sl], #4
 800eb0a:	d8e7      	bhi.n	800eadc <__mdiff+0x80>
 800eb0c:	1b33      	subs	r3, r6, r4
 800eb0e:	3b15      	subs	r3, #21
 800eb10:	f023 0303 	bic.w	r3, r3, #3
 800eb14:	3304      	adds	r3, #4
 800eb16:	3415      	adds	r4, #21
 800eb18:	42a6      	cmp	r6, r4
 800eb1a:	bf38      	it	cc
 800eb1c:	2304      	movcc	r3, #4
 800eb1e:	441d      	add	r5, r3
 800eb20:	4473      	add	r3, lr
 800eb22:	469e      	mov	lr, r3
 800eb24:	462e      	mov	r6, r5
 800eb26:	4566      	cmp	r6, ip
 800eb28:	d30e      	bcc.n	800eb48 <__mdiff+0xec>
 800eb2a:	f10c 0203 	add.w	r2, ip, #3
 800eb2e:	1b52      	subs	r2, r2, r5
 800eb30:	f022 0203 	bic.w	r2, r2, #3
 800eb34:	3d03      	subs	r5, #3
 800eb36:	45ac      	cmp	ip, r5
 800eb38:	bf38      	it	cc
 800eb3a:	2200      	movcc	r2, #0
 800eb3c:	441a      	add	r2, r3
 800eb3e:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800eb42:	b17b      	cbz	r3, 800eb64 <__mdiff+0x108>
 800eb44:	6107      	str	r7, [r0, #16]
 800eb46:	e7a3      	b.n	800ea90 <__mdiff+0x34>
 800eb48:	f856 8b04 	ldr.w	r8, [r6], #4
 800eb4c:	fa11 f288 	uxtah	r2, r1, r8
 800eb50:	1414      	asrs	r4, r2, #16
 800eb52:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800eb56:	b292      	uxth	r2, r2
 800eb58:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800eb5c:	f84e 2b04 	str.w	r2, [lr], #4
 800eb60:	1421      	asrs	r1, r4, #16
 800eb62:	e7e0      	b.n	800eb26 <__mdiff+0xca>
 800eb64:	3f01      	subs	r7, #1
 800eb66:	e7ea      	b.n	800eb3e <__mdiff+0xe2>
 800eb68:	08011377 	.word	0x08011377
 800eb6c:	08011388 	.word	0x08011388

0800eb70 <__d2b>:
 800eb70:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800eb74:	4689      	mov	r9, r1
 800eb76:	2101      	movs	r1, #1
 800eb78:	ec57 6b10 	vmov	r6, r7, d0
 800eb7c:	4690      	mov	r8, r2
 800eb7e:	f7ff fccf 	bl	800e520 <_Balloc>
 800eb82:	4604      	mov	r4, r0
 800eb84:	b930      	cbnz	r0, 800eb94 <__d2b+0x24>
 800eb86:	4602      	mov	r2, r0
 800eb88:	4b25      	ldr	r3, [pc, #148]	; (800ec20 <__d2b+0xb0>)
 800eb8a:	4826      	ldr	r0, [pc, #152]	; (800ec24 <__d2b+0xb4>)
 800eb8c:	f240 310a 	movw	r1, #778	; 0x30a
 800eb90:	f000 faac 	bl	800f0ec <__assert_func>
 800eb94:	f3c7 550a 	ubfx	r5, r7, #20, #11
 800eb98:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800eb9c:	bb35      	cbnz	r5, 800ebec <__d2b+0x7c>
 800eb9e:	2e00      	cmp	r6, #0
 800eba0:	9301      	str	r3, [sp, #4]
 800eba2:	d028      	beq.n	800ebf6 <__d2b+0x86>
 800eba4:	4668      	mov	r0, sp
 800eba6:	9600      	str	r6, [sp, #0]
 800eba8:	f7ff fd82 	bl	800e6b0 <__lo0bits>
 800ebac:	9900      	ldr	r1, [sp, #0]
 800ebae:	b300      	cbz	r0, 800ebf2 <__d2b+0x82>
 800ebb0:	9a01      	ldr	r2, [sp, #4]
 800ebb2:	f1c0 0320 	rsb	r3, r0, #32
 800ebb6:	fa02 f303 	lsl.w	r3, r2, r3
 800ebba:	430b      	orrs	r3, r1
 800ebbc:	40c2      	lsrs	r2, r0
 800ebbe:	6163      	str	r3, [r4, #20]
 800ebc0:	9201      	str	r2, [sp, #4]
 800ebc2:	9b01      	ldr	r3, [sp, #4]
 800ebc4:	61a3      	str	r3, [r4, #24]
 800ebc6:	2b00      	cmp	r3, #0
 800ebc8:	bf14      	ite	ne
 800ebca:	2202      	movne	r2, #2
 800ebcc:	2201      	moveq	r2, #1
 800ebce:	6122      	str	r2, [r4, #16]
 800ebd0:	b1d5      	cbz	r5, 800ec08 <__d2b+0x98>
 800ebd2:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800ebd6:	4405      	add	r5, r0
 800ebd8:	f8c9 5000 	str.w	r5, [r9]
 800ebdc:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800ebe0:	f8c8 0000 	str.w	r0, [r8]
 800ebe4:	4620      	mov	r0, r4
 800ebe6:	b003      	add	sp, #12
 800ebe8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ebec:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800ebf0:	e7d5      	b.n	800eb9e <__d2b+0x2e>
 800ebf2:	6161      	str	r1, [r4, #20]
 800ebf4:	e7e5      	b.n	800ebc2 <__d2b+0x52>
 800ebf6:	a801      	add	r0, sp, #4
 800ebf8:	f7ff fd5a 	bl	800e6b0 <__lo0bits>
 800ebfc:	9b01      	ldr	r3, [sp, #4]
 800ebfe:	6163      	str	r3, [r4, #20]
 800ec00:	2201      	movs	r2, #1
 800ec02:	6122      	str	r2, [r4, #16]
 800ec04:	3020      	adds	r0, #32
 800ec06:	e7e3      	b.n	800ebd0 <__d2b+0x60>
 800ec08:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800ec0c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800ec10:	f8c9 0000 	str.w	r0, [r9]
 800ec14:	6918      	ldr	r0, [r3, #16]
 800ec16:	f7ff fd2b 	bl	800e670 <__hi0bits>
 800ec1a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800ec1e:	e7df      	b.n	800ebe0 <__d2b+0x70>
 800ec20:	08011377 	.word	0x08011377
 800ec24:	08011388 	.word	0x08011388

0800ec28 <_calloc_r>:
 800ec28:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ec2a:	fba1 2402 	umull	r2, r4, r1, r2
 800ec2e:	b94c      	cbnz	r4, 800ec44 <_calloc_r+0x1c>
 800ec30:	4611      	mov	r1, r2
 800ec32:	9201      	str	r2, [sp, #4]
 800ec34:	f000 f87a 	bl	800ed2c <_malloc_r>
 800ec38:	9a01      	ldr	r2, [sp, #4]
 800ec3a:	4605      	mov	r5, r0
 800ec3c:	b930      	cbnz	r0, 800ec4c <_calloc_r+0x24>
 800ec3e:	4628      	mov	r0, r5
 800ec40:	b003      	add	sp, #12
 800ec42:	bd30      	pop	{r4, r5, pc}
 800ec44:	220c      	movs	r2, #12
 800ec46:	6002      	str	r2, [r0, #0]
 800ec48:	2500      	movs	r5, #0
 800ec4a:	e7f8      	b.n	800ec3e <_calloc_r+0x16>
 800ec4c:	4621      	mov	r1, r4
 800ec4e:	f7fe f93f 	bl	800ced0 <memset>
 800ec52:	e7f4      	b.n	800ec3e <_calloc_r+0x16>

0800ec54 <_free_r>:
 800ec54:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ec56:	2900      	cmp	r1, #0
 800ec58:	d044      	beq.n	800ece4 <_free_r+0x90>
 800ec5a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800ec5e:	9001      	str	r0, [sp, #4]
 800ec60:	2b00      	cmp	r3, #0
 800ec62:	f1a1 0404 	sub.w	r4, r1, #4
 800ec66:	bfb8      	it	lt
 800ec68:	18e4      	addlt	r4, r4, r3
 800ec6a:	f000 fa9b 	bl	800f1a4 <__malloc_lock>
 800ec6e:	4a1e      	ldr	r2, [pc, #120]	; (800ece8 <_free_r+0x94>)
 800ec70:	9801      	ldr	r0, [sp, #4]
 800ec72:	6813      	ldr	r3, [r2, #0]
 800ec74:	b933      	cbnz	r3, 800ec84 <_free_r+0x30>
 800ec76:	6063      	str	r3, [r4, #4]
 800ec78:	6014      	str	r4, [r2, #0]
 800ec7a:	b003      	add	sp, #12
 800ec7c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800ec80:	f000 ba96 	b.w	800f1b0 <__malloc_unlock>
 800ec84:	42a3      	cmp	r3, r4
 800ec86:	d908      	bls.n	800ec9a <_free_r+0x46>
 800ec88:	6825      	ldr	r5, [r4, #0]
 800ec8a:	1961      	adds	r1, r4, r5
 800ec8c:	428b      	cmp	r3, r1
 800ec8e:	bf01      	itttt	eq
 800ec90:	6819      	ldreq	r1, [r3, #0]
 800ec92:	685b      	ldreq	r3, [r3, #4]
 800ec94:	1949      	addeq	r1, r1, r5
 800ec96:	6021      	streq	r1, [r4, #0]
 800ec98:	e7ed      	b.n	800ec76 <_free_r+0x22>
 800ec9a:	461a      	mov	r2, r3
 800ec9c:	685b      	ldr	r3, [r3, #4]
 800ec9e:	b10b      	cbz	r3, 800eca4 <_free_r+0x50>
 800eca0:	42a3      	cmp	r3, r4
 800eca2:	d9fa      	bls.n	800ec9a <_free_r+0x46>
 800eca4:	6811      	ldr	r1, [r2, #0]
 800eca6:	1855      	adds	r5, r2, r1
 800eca8:	42a5      	cmp	r5, r4
 800ecaa:	d10b      	bne.n	800ecc4 <_free_r+0x70>
 800ecac:	6824      	ldr	r4, [r4, #0]
 800ecae:	4421      	add	r1, r4
 800ecb0:	1854      	adds	r4, r2, r1
 800ecb2:	42a3      	cmp	r3, r4
 800ecb4:	6011      	str	r1, [r2, #0]
 800ecb6:	d1e0      	bne.n	800ec7a <_free_r+0x26>
 800ecb8:	681c      	ldr	r4, [r3, #0]
 800ecba:	685b      	ldr	r3, [r3, #4]
 800ecbc:	6053      	str	r3, [r2, #4]
 800ecbe:	4421      	add	r1, r4
 800ecc0:	6011      	str	r1, [r2, #0]
 800ecc2:	e7da      	b.n	800ec7a <_free_r+0x26>
 800ecc4:	d902      	bls.n	800eccc <_free_r+0x78>
 800ecc6:	230c      	movs	r3, #12
 800ecc8:	6003      	str	r3, [r0, #0]
 800ecca:	e7d6      	b.n	800ec7a <_free_r+0x26>
 800eccc:	6825      	ldr	r5, [r4, #0]
 800ecce:	1961      	adds	r1, r4, r5
 800ecd0:	428b      	cmp	r3, r1
 800ecd2:	bf04      	itt	eq
 800ecd4:	6819      	ldreq	r1, [r3, #0]
 800ecd6:	685b      	ldreq	r3, [r3, #4]
 800ecd8:	6063      	str	r3, [r4, #4]
 800ecda:	bf04      	itt	eq
 800ecdc:	1949      	addeq	r1, r1, r5
 800ecde:	6021      	streq	r1, [r4, #0]
 800ece0:	6054      	str	r4, [r2, #4]
 800ece2:	e7ca      	b.n	800ec7a <_free_r+0x26>
 800ece4:	b003      	add	sp, #12
 800ece6:	bd30      	pop	{r4, r5, pc}
 800ece8:	20000c78 	.word	0x20000c78

0800ecec <sbrk_aligned>:
 800ecec:	b570      	push	{r4, r5, r6, lr}
 800ecee:	4e0e      	ldr	r6, [pc, #56]	; (800ed28 <sbrk_aligned+0x3c>)
 800ecf0:	460c      	mov	r4, r1
 800ecf2:	6831      	ldr	r1, [r6, #0]
 800ecf4:	4605      	mov	r5, r0
 800ecf6:	b911      	cbnz	r1, 800ecfe <sbrk_aligned+0x12>
 800ecf8:	f000 f9e8 	bl	800f0cc <_sbrk_r>
 800ecfc:	6030      	str	r0, [r6, #0]
 800ecfe:	4621      	mov	r1, r4
 800ed00:	4628      	mov	r0, r5
 800ed02:	f000 f9e3 	bl	800f0cc <_sbrk_r>
 800ed06:	1c43      	adds	r3, r0, #1
 800ed08:	d00a      	beq.n	800ed20 <sbrk_aligned+0x34>
 800ed0a:	1cc4      	adds	r4, r0, #3
 800ed0c:	f024 0403 	bic.w	r4, r4, #3
 800ed10:	42a0      	cmp	r0, r4
 800ed12:	d007      	beq.n	800ed24 <sbrk_aligned+0x38>
 800ed14:	1a21      	subs	r1, r4, r0
 800ed16:	4628      	mov	r0, r5
 800ed18:	f000 f9d8 	bl	800f0cc <_sbrk_r>
 800ed1c:	3001      	adds	r0, #1
 800ed1e:	d101      	bne.n	800ed24 <sbrk_aligned+0x38>
 800ed20:	f04f 34ff 	mov.w	r4, #4294967295
 800ed24:	4620      	mov	r0, r4
 800ed26:	bd70      	pop	{r4, r5, r6, pc}
 800ed28:	20000c7c 	.word	0x20000c7c

0800ed2c <_malloc_r>:
 800ed2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ed30:	1ccd      	adds	r5, r1, #3
 800ed32:	f025 0503 	bic.w	r5, r5, #3
 800ed36:	3508      	adds	r5, #8
 800ed38:	2d0c      	cmp	r5, #12
 800ed3a:	bf38      	it	cc
 800ed3c:	250c      	movcc	r5, #12
 800ed3e:	2d00      	cmp	r5, #0
 800ed40:	4607      	mov	r7, r0
 800ed42:	db01      	blt.n	800ed48 <_malloc_r+0x1c>
 800ed44:	42a9      	cmp	r1, r5
 800ed46:	d905      	bls.n	800ed54 <_malloc_r+0x28>
 800ed48:	230c      	movs	r3, #12
 800ed4a:	603b      	str	r3, [r7, #0]
 800ed4c:	2600      	movs	r6, #0
 800ed4e:	4630      	mov	r0, r6
 800ed50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ed54:	4e2e      	ldr	r6, [pc, #184]	; (800ee10 <_malloc_r+0xe4>)
 800ed56:	f000 fa25 	bl	800f1a4 <__malloc_lock>
 800ed5a:	6833      	ldr	r3, [r6, #0]
 800ed5c:	461c      	mov	r4, r3
 800ed5e:	bb34      	cbnz	r4, 800edae <_malloc_r+0x82>
 800ed60:	4629      	mov	r1, r5
 800ed62:	4638      	mov	r0, r7
 800ed64:	f7ff ffc2 	bl	800ecec <sbrk_aligned>
 800ed68:	1c43      	adds	r3, r0, #1
 800ed6a:	4604      	mov	r4, r0
 800ed6c:	d14d      	bne.n	800ee0a <_malloc_r+0xde>
 800ed6e:	6834      	ldr	r4, [r6, #0]
 800ed70:	4626      	mov	r6, r4
 800ed72:	2e00      	cmp	r6, #0
 800ed74:	d140      	bne.n	800edf8 <_malloc_r+0xcc>
 800ed76:	6823      	ldr	r3, [r4, #0]
 800ed78:	4631      	mov	r1, r6
 800ed7a:	4638      	mov	r0, r7
 800ed7c:	eb04 0803 	add.w	r8, r4, r3
 800ed80:	f000 f9a4 	bl	800f0cc <_sbrk_r>
 800ed84:	4580      	cmp	r8, r0
 800ed86:	d13a      	bne.n	800edfe <_malloc_r+0xd2>
 800ed88:	6821      	ldr	r1, [r4, #0]
 800ed8a:	3503      	adds	r5, #3
 800ed8c:	1a6d      	subs	r5, r5, r1
 800ed8e:	f025 0503 	bic.w	r5, r5, #3
 800ed92:	3508      	adds	r5, #8
 800ed94:	2d0c      	cmp	r5, #12
 800ed96:	bf38      	it	cc
 800ed98:	250c      	movcc	r5, #12
 800ed9a:	4629      	mov	r1, r5
 800ed9c:	4638      	mov	r0, r7
 800ed9e:	f7ff ffa5 	bl	800ecec <sbrk_aligned>
 800eda2:	3001      	adds	r0, #1
 800eda4:	d02b      	beq.n	800edfe <_malloc_r+0xd2>
 800eda6:	6823      	ldr	r3, [r4, #0]
 800eda8:	442b      	add	r3, r5
 800edaa:	6023      	str	r3, [r4, #0]
 800edac:	e00e      	b.n	800edcc <_malloc_r+0xa0>
 800edae:	6822      	ldr	r2, [r4, #0]
 800edb0:	1b52      	subs	r2, r2, r5
 800edb2:	d41e      	bmi.n	800edf2 <_malloc_r+0xc6>
 800edb4:	2a0b      	cmp	r2, #11
 800edb6:	d916      	bls.n	800ede6 <_malloc_r+0xba>
 800edb8:	1961      	adds	r1, r4, r5
 800edba:	42a3      	cmp	r3, r4
 800edbc:	6025      	str	r5, [r4, #0]
 800edbe:	bf18      	it	ne
 800edc0:	6059      	strne	r1, [r3, #4]
 800edc2:	6863      	ldr	r3, [r4, #4]
 800edc4:	bf08      	it	eq
 800edc6:	6031      	streq	r1, [r6, #0]
 800edc8:	5162      	str	r2, [r4, r5]
 800edca:	604b      	str	r3, [r1, #4]
 800edcc:	4638      	mov	r0, r7
 800edce:	f104 060b 	add.w	r6, r4, #11
 800edd2:	f000 f9ed 	bl	800f1b0 <__malloc_unlock>
 800edd6:	f026 0607 	bic.w	r6, r6, #7
 800edda:	1d23      	adds	r3, r4, #4
 800eddc:	1af2      	subs	r2, r6, r3
 800edde:	d0b6      	beq.n	800ed4e <_malloc_r+0x22>
 800ede0:	1b9b      	subs	r3, r3, r6
 800ede2:	50a3      	str	r3, [r4, r2]
 800ede4:	e7b3      	b.n	800ed4e <_malloc_r+0x22>
 800ede6:	6862      	ldr	r2, [r4, #4]
 800ede8:	42a3      	cmp	r3, r4
 800edea:	bf0c      	ite	eq
 800edec:	6032      	streq	r2, [r6, #0]
 800edee:	605a      	strne	r2, [r3, #4]
 800edf0:	e7ec      	b.n	800edcc <_malloc_r+0xa0>
 800edf2:	4623      	mov	r3, r4
 800edf4:	6864      	ldr	r4, [r4, #4]
 800edf6:	e7b2      	b.n	800ed5e <_malloc_r+0x32>
 800edf8:	4634      	mov	r4, r6
 800edfa:	6876      	ldr	r6, [r6, #4]
 800edfc:	e7b9      	b.n	800ed72 <_malloc_r+0x46>
 800edfe:	230c      	movs	r3, #12
 800ee00:	603b      	str	r3, [r7, #0]
 800ee02:	4638      	mov	r0, r7
 800ee04:	f000 f9d4 	bl	800f1b0 <__malloc_unlock>
 800ee08:	e7a1      	b.n	800ed4e <_malloc_r+0x22>
 800ee0a:	6025      	str	r5, [r4, #0]
 800ee0c:	e7de      	b.n	800edcc <_malloc_r+0xa0>
 800ee0e:	bf00      	nop
 800ee10:	20000c78 	.word	0x20000c78

0800ee14 <__ssputs_r>:
 800ee14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ee18:	688e      	ldr	r6, [r1, #8]
 800ee1a:	429e      	cmp	r6, r3
 800ee1c:	4682      	mov	sl, r0
 800ee1e:	460c      	mov	r4, r1
 800ee20:	4690      	mov	r8, r2
 800ee22:	461f      	mov	r7, r3
 800ee24:	d838      	bhi.n	800ee98 <__ssputs_r+0x84>
 800ee26:	898a      	ldrh	r2, [r1, #12]
 800ee28:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800ee2c:	d032      	beq.n	800ee94 <__ssputs_r+0x80>
 800ee2e:	6825      	ldr	r5, [r4, #0]
 800ee30:	6909      	ldr	r1, [r1, #16]
 800ee32:	eba5 0901 	sub.w	r9, r5, r1
 800ee36:	6965      	ldr	r5, [r4, #20]
 800ee38:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800ee3c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800ee40:	3301      	adds	r3, #1
 800ee42:	444b      	add	r3, r9
 800ee44:	106d      	asrs	r5, r5, #1
 800ee46:	429d      	cmp	r5, r3
 800ee48:	bf38      	it	cc
 800ee4a:	461d      	movcc	r5, r3
 800ee4c:	0553      	lsls	r3, r2, #21
 800ee4e:	d531      	bpl.n	800eeb4 <__ssputs_r+0xa0>
 800ee50:	4629      	mov	r1, r5
 800ee52:	f7ff ff6b 	bl	800ed2c <_malloc_r>
 800ee56:	4606      	mov	r6, r0
 800ee58:	b950      	cbnz	r0, 800ee70 <__ssputs_r+0x5c>
 800ee5a:	230c      	movs	r3, #12
 800ee5c:	f8ca 3000 	str.w	r3, [sl]
 800ee60:	89a3      	ldrh	r3, [r4, #12]
 800ee62:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ee66:	81a3      	strh	r3, [r4, #12]
 800ee68:	f04f 30ff 	mov.w	r0, #4294967295
 800ee6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ee70:	6921      	ldr	r1, [r4, #16]
 800ee72:	464a      	mov	r2, r9
 800ee74:	f7ff fb46 	bl	800e504 <memcpy>
 800ee78:	89a3      	ldrh	r3, [r4, #12]
 800ee7a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800ee7e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800ee82:	81a3      	strh	r3, [r4, #12]
 800ee84:	6126      	str	r6, [r4, #16]
 800ee86:	6165      	str	r5, [r4, #20]
 800ee88:	444e      	add	r6, r9
 800ee8a:	eba5 0509 	sub.w	r5, r5, r9
 800ee8e:	6026      	str	r6, [r4, #0]
 800ee90:	60a5      	str	r5, [r4, #8]
 800ee92:	463e      	mov	r6, r7
 800ee94:	42be      	cmp	r6, r7
 800ee96:	d900      	bls.n	800ee9a <__ssputs_r+0x86>
 800ee98:	463e      	mov	r6, r7
 800ee9a:	6820      	ldr	r0, [r4, #0]
 800ee9c:	4632      	mov	r2, r6
 800ee9e:	4641      	mov	r1, r8
 800eea0:	f000 f966 	bl	800f170 <memmove>
 800eea4:	68a3      	ldr	r3, [r4, #8]
 800eea6:	1b9b      	subs	r3, r3, r6
 800eea8:	60a3      	str	r3, [r4, #8]
 800eeaa:	6823      	ldr	r3, [r4, #0]
 800eeac:	4433      	add	r3, r6
 800eeae:	6023      	str	r3, [r4, #0]
 800eeb0:	2000      	movs	r0, #0
 800eeb2:	e7db      	b.n	800ee6c <__ssputs_r+0x58>
 800eeb4:	462a      	mov	r2, r5
 800eeb6:	f000 f981 	bl	800f1bc <_realloc_r>
 800eeba:	4606      	mov	r6, r0
 800eebc:	2800      	cmp	r0, #0
 800eebe:	d1e1      	bne.n	800ee84 <__ssputs_r+0x70>
 800eec0:	6921      	ldr	r1, [r4, #16]
 800eec2:	4650      	mov	r0, sl
 800eec4:	f7ff fec6 	bl	800ec54 <_free_r>
 800eec8:	e7c7      	b.n	800ee5a <__ssputs_r+0x46>
	...

0800eecc <_svfiprintf_r>:
 800eecc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eed0:	4698      	mov	r8, r3
 800eed2:	898b      	ldrh	r3, [r1, #12]
 800eed4:	061b      	lsls	r3, r3, #24
 800eed6:	b09d      	sub	sp, #116	; 0x74
 800eed8:	4607      	mov	r7, r0
 800eeda:	460d      	mov	r5, r1
 800eedc:	4614      	mov	r4, r2
 800eede:	d50e      	bpl.n	800eefe <_svfiprintf_r+0x32>
 800eee0:	690b      	ldr	r3, [r1, #16]
 800eee2:	b963      	cbnz	r3, 800eefe <_svfiprintf_r+0x32>
 800eee4:	2140      	movs	r1, #64	; 0x40
 800eee6:	f7ff ff21 	bl	800ed2c <_malloc_r>
 800eeea:	6028      	str	r0, [r5, #0]
 800eeec:	6128      	str	r0, [r5, #16]
 800eeee:	b920      	cbnz	r0, 800eefa <_svfiprintf_r+0x2e>
 800eef0:	230c      	movs	r3, #12
 800eef2:	603b      	str	r3, [r7, #0]
 800eef4:	f04f 30ff 	mov.w	r0, #4294967295
 800eef8:	e0d1      	b.n	800f09e <_svfiprintf_r+0x1d2>
 800eefa:	2340      	movs	r3, #64	; 0x40
 800eefc:	616b      	str	r3, [r5, #20]
 800eefe:	2300      	movs	r3, #0
 800ef00:	9309      	str	r3, [sp, #36]	; 0x24
 800ef02:	2320      	movs	r3, #32
 800ef04:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800ef08:	f8cd 800c 	str.w	r8, [sp, #12]
 800ef0c:	2330      	movs	r3, #48	; 0x30
 800ef0e:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 800f0b8 <_svfiprintf_r+0x1ec>
 800ef12:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800ef16:	f04f 0901 	mov.w	r9, #1
 800ef1a:	4623      	mov	r3, r4
 800ef1c:	469a      	mov	sl, r3
 800ef1e:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ef22:	b10a      	cbz	r2, 800ef28 <_svfiprintf_r+0x5c>
 800ef24:	2a25      	cmp	r2, #37	; 0x25
 800ef26:	d1f9      	bne.n	800ef1c <_svfiprintf_r+0x50>
 800ef28:	ebba 0b04 	subs.w	fp, sl, r4
 800ef2c:	d00b      	beq.n	800ef46 <_svfiprintf_r+0x7a>
 800ef2e:	465b      	mov	r3, fp
 800ef30:	4622      	mov	r2, r4
 800ef32:	4629      	mov	r1, r5
 800ef34:	4638      	mov	r0, r7
 800ef36:	f7ff ff6d 	bl	800ee14 <__ssputs_r>
 800ef3a:	3001      	adds	r0, #1
 800ef3c:	f000 80aa 	beq.w	800f094 <_svfiprintf_r+0x1c8>
 800ef40:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ef42:	445a      	add	r2, fp
 800ef44:	9209      	str	r2, [sp, #36]	; 0x24
 800ef46:	f89a 3000 	ldrb.w	r3, [sl]
 800ef4a:	2b00      	cmp	r3, #0
 800ef4c:	f000 80a2 	beq.w	800f094 <_svfiprintf_r+0x1c8>
 800ef50:	2300      	movs	r3, #0
 800ef52:	f04f 32ff 	mov.w	r2, #4294967295
 800ef56:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800ef5a:	f10a 0a01 	add.w	sl, sl, #1
 800ef5e:	9304      	str	r3, [sp, #16]
 800ef60:	9307      	str	r3, [sp, #28]
 800ef62:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800ef66:	931a      	str	r3, [sp, #104]	; 0x68
 800ef68:	4654      	mov	r4, sl
 800ef6a:	2205      	movs	r2, #5
 800ef6c:	f814 1b01 	ldrb.w	r1, [r4], #1
 800ef70:	4851      	ldr	r0, [pc, #324]	; (800f0b8 <_svfiprintf_r+0x1ec>)
 800ef72:	f7f1 f955 	bl	8000220 <memchr>
 800ef76:	9a04      	ldr	r2, [sp, #16]
 800ef78:	b9d8      	cbnz	r0, 800efb2 <_svfiprintf_r+0xe6>
 800ef7a:	06d0      	lsls	r0, r2, #27
 800ef7c:	bf44      	itt	mi
 800ef7e:	2320      	movmi	r3, #32
 800ef80:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800ef84:	0711      	lsls	r1, r2, #28
 800ef86:	bf44      	itt	mi
 800ef88:	232b      	movmi	r3, #43	; 0x2b
 800ef8a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800ef8e:	f89a 3000 	ldrb.w	r3, [sl]
 800ef92:	2b2a      	cmp	r3, #42	; 0x2a
 800ef94:	d015      	beq.n	800efc2 <_svfiprintf_r+0xf6>
 800ef96:	9a07      	ldr	r2, [sp, #28]
 800ef98:	4654      	mov	r4, sl
 800ef9a:	2000      	movs	r0, #0
 800ef9c:	f04f 0c0a 	mov.w	ip, #10
 800efa0:	4621      	mov	r1, r4
 800efa2:	f811 3b01 	ldrb.w	r3, [r1], #1
 800efa6:	3b30      	subs	r3, #48	; 0x30
 800efa8:	2b09      	cmp	r3, #9
 800efaa:	d94e      	bls.n	800f04a <_svfiprintf_r+0x17e>
 800efac:	b1b0      	cbz	r0, 800efdc <_svfiprintf_r+0x110>
 800efae:	9207      	str	r2, [sp, #28]
 800efb0:	e014      	b.n	800efdc <_svfiprintf_r+0x110>
 800efb2:	eba0 0308 	sub.w	r3, r0, r8
 800efb6:	fa09 f303 	lsl.w	r3, r9, r3
 800efba:	4313      	orrs	r3, r2
 800efbc:	9304      	str	r3, [sp, #16]
 800efbe:	46a2      	mov	sl, r4
 800efc0:	e7d2      	b.n	800ef68 <_svfiprintf_r+0x9c>
 800efc2:	9b03      	ldr	r3, [sp, #12]
 800efc4:	1d19      	adds	r1, r3, #4
 800efc6:	681b      	ldr	r3, [r3, #0]
 800efc8:	9103      	str	r1, [sp, #12]
 800efca:	2b00      	cmp	r3, #0
 800efcc:	bfbb      	ittet	lt
 800efce:	425b      	neglt	r3, r3
 800efd0:	f042 0202 	orrlt.w	r2, r2, #2
 800efd4:	9307      	strge	r3, [sp, #28]
 800efd6:	9307      	strlt	r3, [sp, #28]
 800efd8:	bfb8      	it	lt
 800efda:	9204      	strlt	r2, [sp, #16]
 800efdc:	7823      	ldrb	r3, [r4, #0]
 800efde:	2b2e      	cmp	r3, #46	; 0x2e
 800efe0:	d10c      	bne.n	800effc <_svfiprintf_r+0x130>
 800efe2:	7863      	ldrb	r3, [r4, #1]
 800efe4:	2b2a      	cmp	r3, #42	; 0x2a
 800efe6:	d135      	bne.n	800f054 <_svfiprintf_r+0x188>
 800efe8:	9b03      	ldr	r3, [sp, #12]
 800efea:	1d1a      	adds	r2, r3, #4
 800efec:	681b      	ldr	r3, [r3, #0]
 800efee:	9203      	str	r2, [sp, #12]
 800eff0:	2b00      	cmp	r3, #0
 800eff2:	bfb8      	it	lt
 800eff4:	f04f 33ff 	movlt.w	r3, #4294967295
 800eff8:	3402      	adds	r4, #2
 800effa:	9305      	str	r3, [sp, #20]
 800effc:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800f0c8 <_svfiprintf_r+0x1fc>
 800f000:	7821      	ldrb	r1, [r4, #0]
 800f002:	2203      	movs	r2, #3
 800f004:	4650      	mov	r0, sl
 800f006:	f7f1 f90b 	bl	8000220 <memchr>
 800f00a:	b140      	cbz	r0, 800f01e <_svfiprintf_r+0x152>
 800f00c:	2340      	movs	r3, #64	; 0x40
 800f00e:	eba0 000a 	sub.w	r0, r0, sl
 800f012:	fa03 f000 	lsl.w	r0, r3, r0
 800f016:	9b04      	ldr	r3, [sp, #16]
 800f018:	4303      	orrs	r3, r0
 800f01a:	3401      	adds	r4, #1
 800f01c:	9304      	str	r3, [sp, #16]
 800f01e:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f022:	4826      	ldr	r0, [pc, #152]	; (800f0bc <_svfiprintf_r+0x1f0>)
 800f024:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800f028:	2206      	movs	r2, #6
 800f02a:	f7f1 f8f9 	bl	8000220 <memchr>
 800f02e:	2800      	cmp	r0, #0
 800f030:	d038      	beq.n	800f0a4 <_svfiprintf_r+0x1d8>
 800f032:	4b23      	ldr	r3, [pc, #140]	; (800f0c0 <_svfiprintf_r+0x1f4>)
 800f034:	bb1b      	cbnz	r3, 800f07e <_svfiprintf_r+0x1b2>
 800f036:	9b03      	ldr	r3, [sp, #12]
 800f038:	3307      	adds	r3, #7
 800f03a:	f023 0307 	bic.w	r3, r3, #7
 800f03e:	3308      	adds	r3, #8
 800f040:	9303      	str	r3, [sp, #12]
 800f042:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f044:	4433      	add	r3, r6
 800f046:	9309      	str	r3, [sp, #36]	; 0x24
 800f048:	e767      	b.n	800ef1a <_svfiprintf_r+0x4e>
 800f04a:	fb0c 3202 	mla	r2, ip, r2, r3
 800f04e:	460c      	mov	r4, r1
 800f050:	2001      	movs	r0, #1
 800f052:	e7a5      	b.n	800efa0 <_svfiprintf_r+0xd4>
 800f054:	2300      	movs	r3, #0
 800f056:	3401      	adds	r4, #1
 800f058:	9305      	str	r3, [sp, #20]
 800f05a:	4619      	mov	r1, r3
 800f05c:	f04f 0c0a 	mov.w	ip, #10
 800f060:	4620      	mov	r0, r4
 800f062:	f810 2b01 	ldrb.w	r2, [r0], #1
 800f066:	3a30      	subs	r2, #48	; 0x30
 800f068:	2a09      	cmp	r2, #9
 800f06a:	d903      	bls.n	800f074 <_svfiprintf_r+0x1a8>
 800f06c:	2b00      	cmp	r3, #0
 800f06e:	d0c5      	beq.n	800effc <_svfiprintf_r+0x130>
 800f070:	9105      	str	r1, [sp, #20]
 800f072:	e7c3      	b.n	800effc <_svfiprintf_r+0x130>
 800f074:	fb0c 2101 	mla	r1, ip, r1, r2
 800f078:	4604      	mov	r4, r0
 800f07a:	2301      	movs	r3, #1
 800f07c:	e7f0      	b.n	800f060 <_svfiprintf_r+0x194>
 800f07e:	ab03      	add	r3, sp, #12
 800f080:	9300      	str	r3, [sp, #0]
 800f082:	462a      	mov	r2, r5
 800f084:	4b0f      	ldr	r3, [pc, #60]	; (800f0c4 <_svfiprintf_r+0x1f8>)
 800f086:	a904      	add	r1, sp, #16
 800f088:	4638      	mov	r0, r7
 800f08a:	f7fd ffc9 	bl	800d020 <_printf_float>
 800f08e:	1c42      	adds	r2, r0, #1
 800f090:	4606      	mov	r6, r0
 800f092:	d1d6      	bne.n	800f042 <_svfiprintf_r+0x176>
 800f094:	89ab      	ldrh	r3, [r5, #12]
 800f096:	065b      	lsls	r3, r3, #25
 800f098:	f53f af2c 	bmi.w	800eef4 <_svfiprintf_r+0x28>
 800f09c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f09e:	b01d      	add	sp, #116	; 0x74
 800f0a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f0a4:	ab03      	add	r3, sp, #12
 800f0a6:	9300      	str	r3, [sp, #0]
 800f0a8:	462a      	mov	r2, r5
 800f0aa:	4b06      	ldr	r3, [pc, #24]	; (800f0c4 <_svfiprintf_r+0x1f8>)
 800f0ac:	a904      	add	r1, sp, #16
 800f0ae:	4638      	mov	r0, r7
 800f0b0:	f7fe fa5a 	bl	800d568 <_printf_i>
 800f0b4:	e7eb      	b.n	800f08e <_svfiprintf_r+0x1c2>
 800f0b6:	bf00      	nop
 800f0b8:	080114e4 	.word	0x080114e4
 800f0bc:	080114ee 	.word	0x080114ee
 800f0c0:	0800d021 	.word	0x0800d021
 800f0c4:	0800ee15 	.word	0x0800ee15
 800f0c8:	080114ea 	.word	0x080114ea

0800f0cc <_sbrk_r>:
 800f0cc:	b538      	push	{r3, r4, r5, lr}
 800f0ce:	4d06      	ldr	r5, [pc, #24]	; (800f0e8 <_sbrk_r+0x1c>)
 800f0d0:	2300      	movs	r3, #0
 800f0d2:	4604      	mov	r4, r0
 800f0d4:	4608      	mov	r0, r1
 800f0d6:	602b      	str	r3, [r5, #0]
 800f0d8:	f7f8 f932 	bl	8007340 <_sbrk>
 800f0dc:	1c43      	adds	r3, r0, #1
 800f0de:	d102      	bne.n	800f0e6 <_sbrk_r+0x1a>
 800f0e0:	682b      	ldr	r3, [r5, #0]
 800f0e2:	b103      	cbz	r3, 800f0e6 <_sbrk_r+0x1a>
 800f0e4:	6023      	str	r3, [r4, #0]
 800f0e6:	bd38      	pop	{r3, r4, r5, pc}
 800f0e8:	20000c80 	.word	0x20000c80

0800f0ec <__assert_func>:
 800f0ec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f0ee:	4614      	mov	r4, r2
 800f0f0:	461a      	mov	r2, r3
 800f0f2:	4b09      	ldr	r3, [pc, #36]	; (800f118 <__assert_func+0x2c>)
 800f0f4:	681b      	ldr	r3, [r3, #0]
 800f0f6:	4605      	mov	r5, r0
 800f0f8:	68d8      	ldr	r0, [r3, #12]
 800f0fa:	b14c      	cbz	r4, 800f110 <__assert_func+0x24>
 800f0fc:	4b07      	ldr	r3, [pc, #28]	; (800f11c <__assert_func+0x30>)
 800f0fe:	9100      	str	r1, [sp, #0]
 800f100:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f104:	4906      	ldr	r1, [pc, #24]	; (800f120 <__assert_func+0x34>)
 800f106:	462b      	mov	r3, r5
 800f108:	f000 f80e 	bl	800f128 <fiprintf>
 800f10c:	f000 faac 	bl	800f668 <abort>
 800f110:	4b04      	ldr	r3, [pc, #16]	; (800f124 <__assert_func+0x38>)
 800f112:	461c      	mov	r4, r3
 800f114:	e7f3      	b.n	800f0fe <__assert_func+0x12>
 800f116:	bf00      	nop
 800f118:	20000148 	.word	0x20000148
 800f11c:	080114f5 	.word	0x080114f5
 800f120:	08011502 	.word	0x08011502
 800f124:	08011530 	.word	0x08011530

0800f128 <fiprintf>:
 800f128:	b40e      	push	{r1, r2, r3}
 800f12a:	b503      	push	{r0, r1, lr}
 800f12c:	4601      	mov	r1, r0
 800f12e:	ab03      	add	r3, sp, #12
 800f130:	4805      	ldr	r0, [pc, #20]	; (800f148 <fiprintf+0x20>)
 800f132:	f853 2b04 	ldr.w	r2, [r3], #4
 800f136:	6800      	ldr	r0, [r0, #0]
 800f138:	9301      	str	r3, [sp, #4]
 800f13a:	f000 f897 	bl	800f26c <_vfiprintf_r>
 800f13e:	b002      	add	sp, #8
 800f140:	f85d eb04 	ldr.w	lr, [sp], #4
 800f144:	b003      	add	sp, #12
 800f146:	4770      	bx	lr
 800f148:	20000148 	.word	0x20000148

0800f14c <__ascii_mbtowc>:
 800f14c:	b082      	sub	sp, #8
 800f14e:	b901      	cbnz	r1, 800f152 <__ascii_mbtowc+0x6>
 800f150:	a901      	add	r1, sp, #4
 800f152:	b142      	cbz	r2, 800f166 <__ascii_mbtowc+0x1a>
 800f154:	b14b      	cbz	r3, 800f16a <__ascii_mbtowc+0x1e>
 800f156:	7813      	ldrb	r3, [r2, #0]
 800f158:	600b      	str	r3, [r1, #0]
 800f15a:	7812      	ldrb	r2, [r2, #0]
 800f15c:	1e10      	subs	r0, r2, #0
 800f15e:	bf18      	it	ne
 800f160:	2001      	movne	r0, #1
 800f162:	b002      	add	sp, #8
 800f164:	4770      	bx	lr
 800f166:	4610      	mov	r0, r2
 800f168:	e7fb      	b.n	800f162 <__ascii_mbtowc+0x16>
 800f16a:	f06f 0001 	mvn.w	r0, #1
 800f16e:	e7f8      	b.n	800f162 <__ascii_mbtowc+0x16>

0800f170 <memmove>:
 800f170:	4288      	cmp	r0, r1
 800f172:	b510      	push	{r4, lr}
 800f174:	eb01 0402 	add.w	r4, r1, r2
 800f178:	d902      	bls.n	800f180 <memmove+0x10>
 800f17a:	4284      	cmp	r4, r0
 800f17c:	4623      	mov	r3, r4
 800f17e:	d807      	bhi.n	800f190 <memmove+0x20>
 800f180:	1e43      	subs	r3, r0, #1
 800f182:	42a1      	cmp	r1, r4
 800f184:	d008      	beq.n	800f198 <memmove+0x28>
 800f186:	f811 2b01 	ldrb.w	r2, [r1], #1
 800f18a:	f803 2f01 	strb.w	r2, [r3, #1]!
 800f18e:	e7f8      	b.n	800f182 <memmove+0x12>
 800f190:	4402      	add	r2, r0
 800f192:	4601      	mov	r1, r0
 800f194:	428a      	cmp	r2, r1
 800f196:	d100      	bne.n	800f19a <memmove+0x2a>
 800f198:	bd10      	pop	{r4, pc}
 800f19a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800f19e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800f1a2:	e7f7      	b.n	800f194 <memmove+0x24>

0800f1a4 <__malloc_lock>:
 800f1a4:	4801      	ldr	r0, [pc, #4]	; (800f1ac <__malloc_lock+0x8>)
 800f1a6:	f000 bc1f 	b.w	800f9e8 <__retarget_lock_acquire_recursive>
 800f1aa:	bf00      	nop
 800f1ac:	20000c84 	.word	0x20000c84

0800f1b0 <__malloc_unlock>:
 800f1b0:	4801      	ldr	r0, [pc, #4]	; (800f1b8 <__malloc_unlock+0x8>)
 800f1b2:	f000 bc1a 	b.w	800f9ea <__retarget_lock_release_recursive>
 800f1b6:	bf00      	nop
 800f1b8:	20000c84 	.word	0x20000c84

0800f1bc <_realloc_r>:
 800f1bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f1c0:	4680      	mov	r8, r0
 800f1c2:	4614      	mov	r4, r2
 800f1c4:	460e      	mov	r6, r1
 800f1c6:	b921      	cbnz	r1, 800f1d2 <_realloc_r+0x16>
 800f1c8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f1cc:	4611      	mov	r1, r2
 800f1ce:	f7ff bdad 	b.w	800ed2c <_malloc_r>
 800f1d2:	b92a      	cbnz	r2, 800f1e0 <_realloc_r+0x24>
 800f1d4:	f7ff fd3e 	bl	800ec54 <_free_r>
 800f1d8:	4625      	mov	r5, r4
 800f1da:	4628      	mov	r0, r5
 800f1dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f1e0:	f000 fc6a 	bl	800fab8 <_malloc_usable_size_r>
 800f1e4:	4284      	cmp	r4, r0
 800f1e6:	4607      	mov	r7, r0
 800f1e8:	d802      	bhi.n	800f1f0 <_realloc_r+0x34>
 800f1ea:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800f1ee:	d812      	bhi.n	800f216 <_realloc_r+0x5a>
 800f1f0:	4621      	mov	r1, r4
 800f1f2:	4640      	mov	r0, r8
 800f1f4:	f7ff fd9a 	bl	800ed2c <_malloc_r>
 800f1f8:	4605      	mov	r5, r0
 800f1fa:	2800      	cmp	r0, #0
 800f1fc:	d0ed      	beq.n	800f1da <_realloc_r+0x1e>
 800f1fe:	42bc      	cmp	r4, r7
 800f200:	4622      	mov	r2, r4
 800f202:	4631      	mov	r1, r6
 800f204:	bf28      	it	cs
 800f206:	463a      	movcs	r2, r7
 800f208:	f7ff f97c 	bl	800e504 <memcpy>
 800f20c:	4631      	mov	r1, r6
 800f20e:	4640      	mov	r0, r8
 800f210:	f7ff fd20 	bl	800ec54 <_free_r>
 800f214:	e7e1      	b.n	800f1da <_realloc_r+0x1e>
 800f216:	4635      	mov	r5, r6
 800f218:	e7df      	b.n	800f1da <_realloc_r+0x1e>

0800f21a <__sfputc_r>:
 800f21a:	6893      	ldr	r3, [r2, #8]
 800f21c:	3b01      	subs	r3, #1
 800f21e:	2b00      	cmp	r3, #0
 800f220:	b410      	push	{r4}
 800f222:	6093      	str	r3, [r2, #8]
 800f224:	da08      	bge.n	800f238 <__sfputc_r+0x1e>
 800f226:	6994      	ldr	r4, [r2, #24]
 800f228:	42a3      	cmp	r3, r4
 800f22a:	db01      	blt.n	800f230 <__sfputc_r+0x16>
 800f22c:	290a      	cmp	r1, #10
 800f22e:	d103      	bne.n	800f238 <__sfputc_r+0x1e>
 800f230:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f234:	f000 b94a 	b.w	800f4cc <__swbuf_r>
 800f238:	6813      	ldr	r3, [r2, #0]
 800f23a:	1c58      	adds	r0, r3, #1
 800f23c:	6010      	str	r0, [r2, #0]
 800f23e:	7019      	strb	r1, [r3, #0]
 800f240:	4608      	mov	r0, r1
 800f242:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f246:	4770      	bx	lr

0800f248 <__sfputs_r>:
 800f248:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f24a:	4606      	mov	r6, r0
 800f24c:	460f      	mov	r7, r1
 800f24e:	4614      	mov	r4, r2
 800f250:	18d5      	adds	r5, r2, r3
 800f252:	42ac      	cmp	r4, r5
 800f254:	d101      	bne.n	800f25a <__sfputs_r+0x12>
 800f256:	2000      	movs	r0, #0
 800f258:	e007      	b.n	800f26a <__sfputs_r+0x22>
 800f25a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f25e:	463a      	mov	r2, r7
 800f260:	4630      	mov	r0, r6
 800f262:	f7ff ffda 	bl	800f21a <__sfputc_r>
 800f266:	1c43      	adds	r3, r0, #1
 800f268:	d1f3      	bne.n	800f252 <__sfputs_r+0xa>
 800f26a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f26c <_vfiprintf_r>:
 800f26c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f270:	460d      	mov	r5, r1
 800f272:	b09d      	sub	sp, #116	; 0x74
 800f274:	4614      	mov	r4, r2
 800f276:	4698      	mov	r8, r3
 800f278:	4606      	mov	r6, r0
 800f27a:	b118      	cbz	r0, 800f284 <_vfiprintf_r+0x18>
 800f27c:	6983      	ldr	r3, [r0, #24]
 800f27e:	b90b      	cbnz	r3, 800f284 <_vfiprintf_r+0x18>
 800f280:	f000 fb14 	bl	800f8ac <__sinit>
 800f284:	4b89      	ldr	r3, [pc, #548]	; (800f4ac <_vfiprintf_r+0x240>)
 800f286:	429d      	cmp	r5, r3
 800f288:	d11b      	bne.n	800f2c2 <_vfiprintf_r+0x56>
 800f28a:	6875      	ldr	r5, [r6, #4]
 800f28c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800f28e:	07d9      	lsls	r1, r3, #31
 800f290:	d405      	bmi.n	800f29e <_vfiprintf_r+0x32>
 800f292:	89ab      	ldrh	r3, [r5, #12]
 800f294:	059a      	lsls	r2, r3, #22
 800f296:	d402      	bmi.n	800f29e <_vfiprintf_r+0x32>
 800f298:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800f29a:	f000 fba5 	bl	800f9e8 <__retarget_lock_acquire_recursive>
 800f29e:	89ab      	ldrh	r3, [r5, #12]
 800f2a0:	071b      	lsls	r3, r3, #28
 800f2a2:	d501      	bpl.n	800f2a8 <_vfiprintf_r+0x3c>
 800f2a4:	692b      	ldr	r3, [r5, #16]
 800f2a6:	b9eb      	cbnz	r3, 800f2e4 <_vfiprintf_r+0x78>
 800f2a8:	4629      	mov	r1, r5
 800f2aa:	4630      	mov	r0, r6
 800f2ac:	f000 f96e 	bl	800f58c <__swsetup_r>
 800f2b0:	b1c0      	cbz	r0, 800f2e4 <_vfiprintf_r+0x78>
 800f2b2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800f2b4:	07dc      	lsls	r4, r3, #31
 800f2b6:	d50e      	bpl.n	800f2d6 <_vfiprintf_r+0x6a>
 800f2b8:	f04f 30ff 	mov.w	r0, #4294967295
 800f2bc:	b01d      	add	sp, #116	; 0x74
 800f2be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f2c2:	4b7b      	ldr	r3, [pc, #492]	; (800f4b0 <_vfiprintf_r+0x244>)
 800f2c4:	429d      	cmp	r5, r3
 800f2c6:	d101      	bne.n	800f2cc <_vfiprintf_r+0x60>
 800f2c8:	68b5      	ldr	r5, [r6, #8]
 800f2ca:	e7df      	b.n	800f28c <_vfiprintf_r+0x20>
 800f2cc:	4b79      	ldr	r3, [pc, #484]	; (800f4b4 <_vfiprintf_r+0x248>)
 800f2ce:	429d      	cmp	r5, r3
 800f2d0:	bf08      	it	eq
 800f2d2:	68f5      	ldreq	r5, [r6, #12]
 800f2d4:	e7da      	b.n	800f28c <_vfiprintf_r+0x20>
 800f2d6:	89ab      	ldrh	r3, [r5, #12]
 800f2d8:	0598      	lsls	r0, r3, #22
 800f2da:	d4ed      	bmi.n	800f2b8 <_vfiprintf_r+0x4c>
 800f2dc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800f2de:	f000 fb84 	bl	800f9ea <__retarget_lock_release_recursive>
 800f2e2:	e7e9      	b.n	800f2b8 <_vfiprintf_r+0x4c>
 800f2e4:	2300      	movs	r3, #0
 800f2e6:	9309      	str	r3, [sp, #36]	; 0x24
 800f2e8:	2320      	movs	r3, #32
 800f2ea:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800f2ee:	f8cd 800c 	str.w	r8, [sp, #12]
 800f2f2:	2330      	movs	r3, #48	; 0x30
 800f2f4:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800f4b8 <_vfiprintf_r+0x24c>
 800f2f8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800f2fc:	f04f 0901 	mov.w	r9, #1
 800f300:	4623      	mov	r3, r4
 800f302:	469a      	mov	sl, r3
 800f304:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f308:	b10a      	cbz	r2, 800f30e <_vfiprintf_r+0xa2>
 800f30a:	2a25      	cmp	r2, #37	; 0x25
 800f30c:	d1f9      	bne.n	800f302 <_vfiprintf_r+0x96>
 800f30e:	ebba 0b04 	subs.w	fp, sl, r4
 800f312:	d00b      	beq.n	800f32c <_vfiprintf_r+0xc0>
 800f314:	465b      	mov	r3, fp
 800f316:	4622      	mov	r2, r4
 800f318:	4629      	mov	r1, r5
 800f31a:	4630      	mov	r0, r6
 800f31c:	f7ff ff94 	bl	800f248 <__sfputs_r>
 800f320:	3001      	adds	r0, #1
 800f322:	f000 80aa 	beq.w	800f47a <_vfiprintf_r+0x20e>
 800f326:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f328:	445a      	add	r2, fp
 800f32a:	9209      	str	r2, [sp, #36]	; 0x24
 800f32c:	f89a 3000 	ldrb.w	r3, [sl]
 800f330:	2b00      	cmp	r3, #0
 800f332:	f000 80a2 	beq.w	800f47a <_vfiprintf_r+0x20e>
 800f336:	2300      	movs	r3, #0
 800f338:	f04f 32ff 	mov.w	r2, #4294967295
 800f33c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800f340:	f10a 0a01 	add.w	sl, sl, #1
 800f344:	9304      	str	r3, [sp, #16]
 800f346:	9307      	str	r3, [sp, #28]
 800f348:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800f34c:	931a      	str	r3, [sp, #104]	; 0x68
 800f34e:	4654      	mov	r4, sl
 800f350:	2205      	movs	r2, #5
 800f352:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f356:	4858      	ldr	r0, [pc, #352]	; (800f4b8 <_vfiprintf_r+0x24c>)
 800f358:	f7f0 ff62 	bl	8000220 <memchr>
 800f35c:	9a04      	ldr	r2, [sp, #16]
 800f35e:	b9d8      	cbnz	r0, 800f398 <_vfiprintf_r+0x12c>
 800f360:	06d1      	lsls	r1, r2, #27
 800f362:	bf44      	itt	mi
 800f364:	2320      	movmi	r3, #32
 800f366:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800f36a:	0713      	lsls	r3, r2, #28
 800f36c:	bf44      	itt	mi
 800f36e:	232b      	movmi	r3, #43	; 0x2b
 800f370:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800f374:	f89a 3000 	ldrb.w	r3, [sl]
 800f378:	2b2a      	cmp	r3, #42	; 0x2a
 800f37a:	d015      	beq.n	800f3a8 <_vfiprintf_r+0x13c>
 800f37c:	9a07      	ldr	r2, [sp, #28]
 800f37e:	4654      	mov	r4, sl
 800f380:	2000      	movs	r0, #0
 800f382:	f04f 0c0a 	mov.w	ip, #10
 800f386:	4621      	mov	r1, r4
 800f388:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f38c:	3b30      	subs	r3, #48	; 0x30
 800f38e:	2b09      	cmp	r3, #9
 800f390:	d94e      	bls.n	800f430 <_vfiprintf_r+0x1c4>
 800f392:	b1b0      	cbz	r0, 800f3c2 <_vfiprintf_r+0x156>
 800f394:	9207      	str	r2, [sp, #28]
 800f396:	e014      	b.n	800f3c2 <_vfiprintf_r+0x156>
 800f398:	eba0 0308 	sub.w	r3, r0, r8
 800f39c:	fa09 f303 	lsl.w	r3, r9, r3
 800f3a0:	4313      	orrs	r3, r2
 800f3a2:	9304      	str	r3, [sp, #16]
 800f3a4:	46a2      	mov	sl, r4
 800f3a6:	e7d2      	b.n	800f34e <_vfiprintf_r+0xe2>
 800f3a8:	9b03      	ldr	r3, [sp, #12]
 800f3aa:	1d19      	adds	r1, r3, #4
 800f3ac:	681b      	ldr	r3, [r3, #0]
 800f3ae:	9103      	str	r1, [sp, #12]
 800f3b0:	2b00      	cmp	r3, #0
 800f3b2:	bfbb      	ittet	lt
 800f3b4:	425b      	neglt	r3, r3
 800f3b6:	f042 0202 	orrlt.w	r2, r2, #2
 800f3ba:	9307      	strge	r3, [sp, #28]
 800f3bc:	9307      	strlt	r3, [sp, #28]
 800f3be:	bfb8      	it	lt
 800f3c0:	9204      	strlt	r2, [sp, #16]
 800f3c2:	7823      	ldrb	r3, [r4, #0]
 800f3c4:	2b2e      	cmp	r3, #46	; 0x2e
 800f3c6:	d10c      	bne.n	800f3e2 <_vfiprintf_r+0x176>
 800f3c8:	7863      	ldrb	r3, [r4, #1]
 800f3ca:	2b2a      	cmp	r3, #42	; 0x2a
 800f3cc:	d135      	bne.n	800f43a <_vfiprintf_r+0x1ce>
 800f3ce:	9b03      	ldr	r3, [sp, #12]
 800f3d0:	1d1a      	adds	r2, r3, #4
 800f3d2:	681b      	ldr	r3, [r3, #0]
 800f3d4:	9203      	str	r2, [sp, #12]
 800f3d6:	2b00      	cmp	r3, #0
 800f3d8:	bfb8      	it	lt
 800f3da:	f04f 33ff 	movlt.w	r3, #4294967295
 800f3de:	3402      	adds	r4, #2
 800f3e0:	9305      	str	r3, [sp, #20]
 800f3e2:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800f4c8 <_vfiprintf_r+0x25c>
 800f3e6:	7821      	ldrb	r1, [r4, #0]
 800f3e8:	2203      	movs	r2, #3
 800f3ea:	4650      	mov	r0, sl
 800f3ec:	f7f0 ff18 	bl	8000220 <memchr>
 800f3f0:	b140      	cbz	r0, 800f404 <_vfiprintf_r+0x198>
 800f3f2:	2340      	movs	r3, #64	; 0x40
 800f3f4:	eba0 000a 	sub.w	r0, r0, sl
 800f3f8:	fa03 f000 	lsl.w	r0, r3, r0
 800f3fc:	9b04      	ldr	r3, [sp, #16]
 800f3fe:	4303      	orrs	r3, r0
 800f400:	3401      	adds	r4, #1
 800f402:	9304      	str	r3, [sp, #16]
 800f404:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f408:	482c      	ldr	r0, [pc, #176]	; (800f4bc <_vfiprintf_r+0x250>)
 800f40a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800f40e:	2206      	movs	r2, #6
 800f410:	f7f0 ff06 	bl	8000220 <memchr>
 800f414:	2800      	cmp	r0, #0
 800f416:	d03f      	beq.n	800f498 <_vfiprintf_r+0x22c>
 800f418:	4b29      	ldr	r3, [pc, #164]	; (800f4c0 <_vfiprintf_r+0x254>)
 800f41a:	bb1b      	cbnz	r3, 800f464 <_vfiprintf_r+0x1f8>
 800f41c:	9b03      	ldr	r3, [sp, #12]
 800f41e:	3307      	adds	r3, #7
 800f420:	f023 0307 	bic.w	r3, r3, #7
 800f424:	3308      	adds	r3, #8
 800f426:	9303      	str	r3, [sp, #12]
 800f428:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f42a:	443b      	add	r3, r7
 800f42c:	9309      	str	r3, [sp, #36]	; 0x24
 800f42e:	e767      	b.n	800f300 <_vfiprintf_r+0x94>
 800f430:	fb0c 3202 	mla	r2, ip, r2, r3
 800f434:	460c      	mov	r4, r1
 800f436:	2001      	movs	r0, #1
 800f438:	e7a5      	b.n	800f386 <_vfiprintf_r+0x11a>
 800f43a:	2300      	movs	r3, #0
 800f43c:	3401      	adds	r4, #1
 800f43e:	9305      	str	r3, [sp, #20]
 800f440:	4619      	mov	r1, r3
 800f442:	f04f 0c0a 	mov.w	ip, #10
 800f446:	4620      	mov	r0, r4
 800f448:	f810 2b01 	ldrb.w	r2, [r0], #1
 800f44c:	3a30      	subs	r2, #48	; 0x30
 800f44e:	2a09      	cmp	r2, #9
 800f450:	d903      	bls.n	800f45a <_vfiprintf_r+0x1ee>
 800f452:	2b00      	cmp	r3, #0
 800f454:	d0c5      	beq.n	800f3e2 <_vfiprintf_r+0x176>
 800f456:	9105      	str	r1, [sp, #20]
 800f458:	e7c3      	b.n	800f3e2 <_vfiprintf_r+0x176>
 800f45a:	fb0c 2101 	mla	r1, ip, r1, r2
 800f45e:	4604      	mov	r4, r0
 800f460:	2301      	movs	r3, #1
 800f462:	e7f0      	b.n	800f446 <_vfiprintf_r+0x1da>
 800f464:	ab03      	add	r3, sp, #12
 800f466:	9300      	str	r3, [sp, #0]
 800f468:	462a      	mov	r2, r5
 800f46a:	4b16      	ldr	r3, [pc, #88]	; (800f4c4 <_vfiprintf_r+0x258>)
 800f46c:	a904      	add	r1, sp, #16
 800f46e:	4630      	mov	r0, r6
 800f470:	f7fd fdd6 	bl	800d020 <_printf_float>
 800f474:	4607      	mov	r7, r0
 800f476:	1c78      	adds	r0, r7, #1
 800f478:	d1d6      	bne.n	800f428 <_vfiprintf_r+0x1bc>
 800f47a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800f47c:	07d9      	lsls	r1, r3, #31
 800f47e:	d405      	bmi.n	800f48c <_vfiprintf_r+0x220>
 800f480:	89ab      	ldrh	r3, [r5, #12]
 800f482:	059a      	lsls	r2, r3, #22
 800f484:	d402      	bmi.n	800f48c <_vfiprintf_r+0x220>
 800f486:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800f488:	f000 faaf 	bl	800f9ea <__retarget_lock_release_recursive>
 800f48c:	89ab      	ldrh	r3, [r5, #12]
 800f48e:	065b      	lsls	r3, r3, #25
 800f490:	f53f af12 	bmi.w	800f2b8 <_vfiprintf_r+0x4c>
 800f494:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f496:	e711      	b.n	800f2bc <_vfiprintf_r+0x50>
 800f498:	ab03      	add	r3, sp, #12
 800f49a:	9300      	str	r3, [sp, #0]
 800f49c:	462a      	mov	r2, r5
 800f49e:	4b09      	ldr	r3, [pc, #36]	; (800f4c4 <_vfiprintf_r+0x258>)
 800f4a0:	a904      	add	r1, sp, #16
 800f4a2:	4630      	mov	r0, r6
 800f4a4:	f7fe f860 	bl	800d568 <_printf_i>
 800f4a8:	e7e4      	b.n	800f474 <_vfiprintf_r+0x208>
 800f4aa:	bf00      	nop
 800f4ac:	0801165c 	.word	0x0801165c
 800f4b0:	0801167c 	.word	0x0801167c
 800f4b4:	0801163c 	.word	0x0801163c
 800f4b8:	080114e4 	.word	0x080114e4
 800f4bc:	080114ee 	.word	0x080114ee
 800f4c0:	0800d021 	.word	0x0800d021
 800f4c4:	0800f249 	.word	0x0800f249
 800f4c8:	080114ea 	.word	0x080114ea

0800f4cc <__swbuf_r>:
 800f4cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f4ce:	460e      	mov	r6, r1
 800f4d0:	4614      	mov	r4, r2
 800f4d2:	4605      	mov	r5, r0
 800f4d4:	b118      	cbz	r0, 800f4de <__swbuf_r+0x12>
 800f4d6:	6983      	ldr	r3, [r0, #24]
 800f4d8:	b90b      	cbnz	r3, 800f4de <__swbuf_r+0x12>
 800f4da:	f000 f9e7 	bl	800f8ac <__sinit>
 800f4de:	4b21      	ldr	r3, [pc, #132]	; (800f564 <__swbuf_r+0x98>)
 800f4e0:	429c      	cmp	r4, r3
 800f4e2:	d12b      	bne.n	800f53c <__swbuf_r+0x70>
 800f4e4:	686c      	ldr	r4, [r5, #4]
 800f4e6:	69a3      	ldr	r3, [r4, #24]
 800f4e8:	60a3      	str	r3, [r4, #8]
 800f4ea:	89a3      	ldrh	r3, [r4, #12]
 800f4ec:	071a      	lsls	r2, r3, #28
 800f4ee:	d52f      	bpl.n	800f550 <__swbuf_r+0x84>
 800f4f0:	6923      	ldr	r3, [r4, #16]
 800f4f2:	b36b      	cbz	r3, 800f550 <__swbuf_r+0x84>
 800f4f4:	6923      	ldr	r3, [r4, #16]
 800f4f6:	6820      	ldr	r0, [r4, #0]
 800f4f8:	1ac0      	subs	r0, r0, r3
 800f4fa:	6963      	ldr	r3, [r4, #20]
 800f4fc:	b2f6      	uxtb	r6, r6
 800f4fe:	4283      	cmp	r3, r0
 800f500:	4637      	mov	r7, r6
 800f502:	dc04      	bgt.n	800f50e <__swbuf_r+0x42>
 800f504:	4621      	mov	r1, r4
 800f506:	4628      	mov	r0, r5
 800f508:	f000 f93c 	bl	800f784 <_fflush_r>
 800f50c:	bb30      	cbnz	r0, 800f55c <__swbuf_r+0x90>
 800f50e:	68a3      	ldr	r3, [r4, #8]
 800f510:	3b01      	subs	r3, #1
 800f512:	60a3      	str	r3, [r4, #8]
 800f514:	6823      	ldr	r3, [r4, #0]
 800f516:	1c5a      	adds	r2, r3, #1
 800f518:	6022      	str	r2, [r4, #0]
 800f51a:	701e      	strb	r6, [r3, #0]
 800f51c:	6963      	ldr	r3, [r4, #20]
 800f51e:	3001      	adds	r0, #1
 800f520:	4283      	cmp	r3, r0
 800f522:	d004      	beq.n	800f52e <__swbuf_r+0x62>
 800f524:	89a3      	ldrh	r3, [r4, #12]
 800f526:	07db      	lsls	r3, r3, #31
 800f528:	d506      	bpl.n	800f538 <__swbuf_r+0x6c>
 800f52a:	2e0a      	cmp	r6, #10
 800f52c:	d104      	bne.n	800f538 <__swbuf_r+0x6c>
 800f52e:	4621      	mov	r1, r4
 800f530:	4628      	mov	r0, r5
 800f532:	f000 f927 	bl	800f784 <_fflush_r>
 800f536:	b988      	cbnz	r0, 800f55c <__swbuf_r+0x90>
 800f538:	4638      	mov	r0, r7
 800f53a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f53c:	4b0a      	ldr	r3, [pc, #40]	; (800f568 <__swbuf_r+0x9c>)
 800f53e:	429c      	cmp	r4, r3
 800f540:	d101      	bne.n	800f546 <__swbuf_r+0x7a>
 800f542:	68ac      	ldr	r4, [r5, #8]
 800f544:	e7cf      	b.n	800f4e6 <__swbuf_r+0x1a>
 800f546:	4b09      	ldr	r3, [pc, #36]	; (800f56c <__swbuf_r+0xa0>)
 800f548:	429c      	cmp	r4, r3
 800f54a:	bf08      	it	eq
 800f54c:	68ec      	ldreq	r4, [r5, #12]
 800f54e:	e7ca      	b.n	800f4e6 <__swbuf_r+0x1a>
 800f550:	4621      	mov	r1, r4
 800f552:	4628      	mov	r0, r5
 800f554:	f000 f81a 	bl	800f58c <__swsetup_r>
 800f558:	2800      	cmp	r0, #0
 800f55a:	d0cb      	beq.n	800f4f4 <__swbuf_r+0x28>
 800f55c:	f04f 37ff 	mov.w	r7, #4294967295
 800f560:	e7ea      	b.n	800f538 <__swbuf_r+0x6c>
 800f562:	bf00      	nop
 800f564:	0801165c 	.word	0x0801165c
 800f568:	0801167c 	.word	0x0801167c
 800f56c:	0801163c 	.word	0x0801163c

0800f570 <__ascii_wctomb>:
 800f570:	b149      	cbz	r1, 800f586 <__ascii_wctomb+0x16>
 800f572:	2aff      	cmp	r2, #255	; 0xff
 800f574:	bf85      	ittet	hi
 800f576:	238a      	movhi	r3, #138	; 0x8a
 800f578:	6003      	strhi	r3, [r0, #0]
 800f57a:	700a      	strbls	r2, [r1, #0]
 800f57c:	f04f 30ff 	movhi.w	r0, #4294967295
 800f580:	bf98      	it	ls
 800f582:	2001      	movls	r0, #1
 800f584:	4770      	bx	lr
 800f586:	4608      	mov	r0, r1
 800f588:	4770      	bx	lr
	...

0800f58c <__swsetup_r>:
 800f58c:	4b32      	ldr	r3, [pc, #200]	; (800f658 <__swsetup_r+0xcc>)
 800f58e:	b570      	push	{r4, r5, r6, lr}
 800f590:	681d      	ldr	r5, [r3, #0]
 800f592:	4606      	mov	r6, r0
 800f594:	460c      	mov	r4, r1
 800f596:	b125      	cbz	r5, 800f5a2 <__swsetup_r+0x16>
 800f598:	69ab      	ldr	r3, [r5, #24]
 800f59a:	b913      	cbnz	r3, 800f5a2 <__swsetup_r+0x16>
 800f59c:	4628      	mov	r0, r5
 800f59e:	f000 f985 	bl	800f8ac <__sinit>
 800f5a2:	4b2e      	ldr	r3, [pc, #184]	; (800f65c <__swsetup_r+0xd0>)
 800f5a4:	429c      	cmp	r4, r3
 800f5a6:	d10f      	bne.n	800f5c8 <__swsetup_r+0x3c>
 800f5a8:	686c      	ldr	r4, [r5, #4]
 800f5aa:	89a3      	ldrh	r3, [r4, #12]
 800f5ac:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800f5b0:	0719      	lsls	r1, r3, #28
 800f5b2:	d42c      	bmi.n	800f60e <__swsetup_r+0x82>
 800f5b4:	06dd      	lsls	r5, r3, #27
 800f5b6:	d411      	bmi.n	800f5dc <__swsetup_r+0x50>
 800f5b8:	2309      	movs	r3, #9
 800f5ba:	6033      	str	r3, [r6, #0]
 800f5bc:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800f5c0:	81a3      	strh	r3, [r4, #12]
 800f5c2:	f04f 30ff 	mov.w	r0, #4294967295
 800f5c6:	e03e      	b.n	800f646 <__swsetup_r+0xba>
 800f5c8:	4b25      	ldr	r3, [pc, #148]	; (800f660 <__swsetup_r+0xd4>)
 800f5ca:	429c      	cmp	r4, r3
 800f5cc:	d101      	bne.n	800f5d2 <__swsetup_r+0x46>
 800f5ce:	68ac      	ldr	r4, [r5, #8]
 800f5d0:	e7eb      	b.n	800f5aa <__swsetup_r+0x1e>
 800f5d2:	4b24      	ldr	r3, [pc, #144]	; (800f664 <__swsetup_r+0xd8>)
 800f5d4:	429c      	cmp	r4, r3
 800f5d6:	bf08      	it	eq
 800f5d8:	68ec      	ldreq	r4, [r5, #12]
 800f5da:	e7e6      	b.n	800f5aa <__swsetup_r+0x1e>
 800f5dc:	0758      	lsls	r0, r3, #29
 800f5de:	d512      	bpl.n	800f606 <__swsetup_r+0x7a>
 800f5e0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800f5e2:	b141      	cbz	r1, 800f5f6 <__swsetup_r+0x6a>
 800f5e4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800f5e8:	4299      	cmp	r1, r3
 800f5ea:	d002      	beq.n	800f5f2 <__swsetup_r+0x66>
 800f5ec:	4630      	mov	r0, r6
 800f5ee:	f7ff fb31 	bl	800ec54 <_free_r>
 800f5f2:	2300      	movs	r3, #0
 800f5f4:	6363      	str	r3, [r4, #52]	; 0x34
 800f5f6:	89a3      	ldrh	r3, [r4, #12]
 800f5f8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800f5fc:	81a3      	strh	r3, [r4, #12]
 800f5fe:	2300      	movs	r3, #0
 800f600:	6063      	str	r3, [r4, #4]
 800f602:	6923      	ldr	r3, [r4, #16]
 800f604:	6023      	str	r3, [r4, #0]
 800f606:	89a3      	ldrh	r3, [r4, #12]
 800f608:	f043 0308 	orr.w	r3, r3, #8
 800f60c:	81a3      	strh	r3, [r4, #12]
 800f60e:	6923      	ldr	r3, [r4, #16]
 800f610:	b94b      	cbnz	r3, 800f626 <__swsetup_r+0x9a>
 800f612:	89a3      	ldrh	r3, [r4, #12]
 800f614:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800f618:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800f61c:	d003      	beq.n	800f626 <__swsetup_r+0x9a>
 800f61e:	4621      	mov	r1, r4
 800f620:	4630      	mov	r0, r6
 800f622:	f000 fa09 	bl	800fa38 <__smakebuf_r>
 800f626:	89a0      	ldrh	r0, [r4, #12]
 800f628:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800f62c:	f010 0301 	ands.w	r3, r0, #1
 800f630:	d00a      	beq.n	800f648 <__swsetup_r+0xbc>
 800f632:	2300      	movs	r3, #0
 800f634:	60a3      	str	r3, [r4, #8]
 800f636:	6963      	ldr	r3, [r4, #20]
 800f638:	425b      	negs	r3, r3
 800f63a:	61a3      	str	r3, [r4, #24]
 800f63c:	6923      	ldr	r3, [r4, #16]
 800f63e:	b943      	cbnz	r3, 800f652 <__swsetup_r+0xc6>
 800f640:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800f644:	d1ba      	bne.n	800f5bc <__swsetup_r+0x30>
 800f646:	bd70      	pop	{r4, r5, r6, pc}
 800f648:	0781      	lsls	r1, r0, #30
 800f64a:	bf58      	it	pl
 800f64c:	6963      	ldrpl	r3, [r4, #20]
 800f64e:	60a3      	str	r3, [r4, #8]
 800f650:	e7f4      	b.n	800f63c <__swsetup_r+0xb0>
 800f652:	2000      	movs	r0, #0
 800f654:	e7f7      	b.n	800f646 <__swsetup_r+0xba>
 800f656:	bf00      	nop
 800f658:	20000148 	.word	0x20000148
 800f65c:	0801165c 	.word	0x0801165c
 800f660:	0801167c 	.word	0x0801167c
 800f664:	0801163c 	.word	0x0801163c

0800f668 <abort>:
 800f668:	b508      	push	{r3, lr}
 800f66a:	2006      	movs	r0, #6
 800f66c:	f000 fa54 	bl	800fb18 <raise>
 800f670:	2001      	movs	r0, #1
 800f672:	f7f7 fded 	bl	8007250 <_exit>
	...

0800f678 <__sflush_r>:
 800f678:	898a      	ldrh	r2, [r1, #12]
 800f67a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f67e:	4605      	mov	r5, r0
 800f680:	0710      	lsls	r0, r2, #28
 800f682:	460c      	mov	r4, r1
 800f684:	d458      	bmi.n	800f738 <__sflush_r+0xc0>
 800f686:	684b      	ldr	r3, [r1, #4]
 800f688:	2b00      	cmp	r3, #0
 800f68a:	dc05      	bgt.n	800f698 <__sflush_r+0x20>
 800f68c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800f68e:	2b00      	cmp	r3, #0
 800f690:	dc02      	bgt.n	800f698 <__sflush_r+0x20>
 800f692:	2000      	movs	r0, #0
 800f694:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f698:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800f69a:	2e00      	cmp	r6, #0
 800f69c:	d0f9      	beq.n	800f692 <__sflush_r+0x1a>
 800f69e:	2300      	movs	r3, #0
 800f6a0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800f6a4:	682f      	ldr	r7, [r5, #0]
 800f6a6:	602b      	str	r3, [r5, #0]
 800f6a8:	d032      	beq.n	800f710 <__sflush_r+0x98>
 800f6aa:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800f6ac:	89a3      	ldrh	r3, [r4, #12]
 800f6ae:	075a      	lsls	r2, r3, #29
 800f6b0:	d505      	bpl.n	800f6be <__sflush_r+0x46>
 800f6b2:	6863      	ldr	r3, [r4, #4]
 800f6b4:	1ac0      	subs	r0, r0, r3
 800f6b6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f6b8:	b10b      	cbz	r3, 800f6be <__sflush_r+0x46>
 800f6ba:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800f6bc:	1ac0      	subs	r0, r0, r3
 800f6be:	2300      	movs	r3, #0
 800f6c0:	4602      	mov	r2, r0
 800f6c2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800f6c4:	6a21      	ldr	r1, [r4, #32]
 800f6c6:	4628      	mov	r0, r5
 800f6c8:	47b0      	blx	r6
 800f6ca:	1c43      	adds	r3, r0, #1
 800f6cc:	89a3      	ldrh	r3, [r4, #12]
 800f6ce:	d106      	bne.n	800f6de <__sflush_r+0x66>
 800f6d0:	6829      	ldr	r1, [r5, #0]
 800f6d2:	291d      	cmp	r1, #29
 800f6d4:	d82c      	bhi.n	800f730 <__sflush_r+0xb8>
 800f6d6:	4a2a      	ldr	r2, [pc, #168]	; (800f780 <__sflush_r+0x108>)
 800f6d8:	40ca      	lsrs	r2, r1
 800f6da:	07d6      	lsls	r6, r2, #31
 800f6dc:	d528      	bpl.n	800f730 <__sflush_r+0xb8>
 800f6de:	2200      	movs	r2, #0
 800f6e0:	6062      	str	r2, [r4, #4]
 800f6e2:	04d9      	lsls	r1, r3, #19
 800f6e4:	6922      	ldr	r2, [r4, #16]
 800f6e6:	6022      	str	r2, [r4, #0]
 800f6e8:	d504      	bpl.n	800f6f4 <__sflush_r+0x7c>
 800f6ea:	1c42      	adds	r2, r0, #1
 800f6ec:	d101      	bne.n	800f6f2 <__sflush_r+0x7a>
 800f6ee:	682b      	ldr	r3, [r5, #0]
 800f6f0:	b903      	cbnz	r3, 800f6f4 <__sflush_r+0x7c>
 800f6f2:	6560      	str	r0, [r4, #84]	; 0x54
 800f6f4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800f6f6:	602f      	str	r7, [r5, #0]
 800f6f8:	2900      	cmp	r1, #0
 800f6fa:	d0ca      	beq.n	800f692 <__sflush_r+0x1a>
 800f6fc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800f700:	4299      	cmp	r1, r3
 800f702:	d002      	beq.n	800f70a <__sflush_r+0x92>
 800f704:	4628      	mov	r0, r5
 800f706:	f7ff faa5 	bl	800ec54 <_free_r>
 800f70a:	2000      	movs	r0, #0
 800f70c:	6360      	str	r0, [r4, #52]	; 0x34
 800f70e:	e7c1      	b.n	800f694 <__sflush_r+0x1c>
 800f710:	6a21      	ldr	r1, [r4, #32]
 800f712:	2301      	movs	r3, #1
 800f714:	4628      	mov	r0, r5
 800f716:	47b0      	blx	r6
 800f718:	1c41      	adds	r1, r0, #1
 800f71a:	d1c7      	bne.n	800f6ac <__sflush_r+0x34>
 800f71c:	682b      	ldr	r3, [r5, #0]
 800f71e:	2b00      	cmp	r3, #0
 800f720:	d0c4      	beq.n	800f6ac <__sflush_r+0x34>
 800f722:	2b1d      	cmp	r3, #29
 800f724:	d001      	beq.n	800f72a <__sflush_r+0xb2>
 800f726:	2b16      	cmp	r3, #22
 800f728:	d101      	bne.n	800f72e <__sflush_r+0xb6>
 800f72a:	602f      	str	r7, [r5, #0]
 800f72c:	e7b1      	b.n	800f692 <__sflush_r+0x1a>
 800f72e:	89a3      	ldrh	r3, [r4, #12]
 800f730:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f734:	81a3      	strh	r3, [r4, #12]
 800f736:	e7ad      	b.n	800f694 <__sflush_r+0x1c>
 800f738:	690f      	ldr	r7, [r1, #16]
 800f73a:	2f00      	cmp	r7, #0
 800f73c:	d0a9      	beq.n	800f692 <__sflush_r+0x1a>
 800f73e:	0793      	lsls	r3, r2, #30
 800f740:	680e      	ldr	r6, [r1, #0]
 800f742:	bf08      	it	eq
 800f744:	694b      	ldreq	r3, [r1, #20]
 800f746:	600f      	str	r7, [r1, #0]
 800f748:	bf18      	it	ne
 800f74a:	2300      	movne	r3, #0
 800f74c:	eba6 0807 	sub.w	r8, r6, r7
 800f750:	608b      	str	r3, [r1, #8]
 800f752:	f1b8 0f00 	cmp.w	r8, #0
 800f756:	dd9c      	ble.n	800f692 <__sflush_r+0x1a>
 800f758:	6a21      	ldr	r1, [r4, #32]
 800f75a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800f75c:	4643      	mov	r3, r8
 800f75e:	463a      	mov	r2, r7
 800f760:	4628      	mov	r0, r5
 800f762:	47b0      	blx	r6
 800f764:	2800      	cmp	r0, #0
 800f766:	dc06      	bgt.n	800f776 <__sflush_r+0xfe>
 800f768:	89a3      	ldrh	r3, [r4, #12]
 800f76a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f76e:	81a3      	strh	r3, [r4, #12]
 800f770:	f04f 30ff 	mov.w	r0, #4294967295
 800f774:	e78e      	b.n	800f694 <__sflush_r+0x1c>
 800f776:	4407      	add	r7, r0
 800f778:	eba8 0800 	sub.w	r8, r8, r0
 800f77c:	e7e9      	b.n	800f752 <__sflush_r+0xda>
 800f77e:	bf00      	nop
 800f780:	20400001 	.word	0x20400001

0800f784 <_fflush_r>:
 800f784:	b538      	push	{r3, r4, r5, lr}
 800f786:	690b      	ldr	r3, [r1, #16]
 800f788:	4605      	mov	r5, r0
 800f78a:	460c      	mov	r4, r1
 800f78c:	b913      	cbnz	r3, 800f794 <_fflush_r+0x10>
 800f78e:	2500      	movs	r5, #0
 800f790:	4628      	mov	r0, r5
 800f792:	bd38      	pop	{r3, r4, r5, pc}
 800f794:	b118      	cbz	r0, 800f79e <_fflush_r+0x1a>
 800f796:	6983      	ldr	r3, [r0, #24]
 800f798:	b90b      	cbnz	r3, 800f79e <_fflush_r+0x1a>
 800f79a:	f000 f887 	bl	800f8ac <__sinit>
 800f79e:	4b14      	ldr	r3, [pc, #80]	; (800f7f0 <_fflush_r+0x6c>)
 800f7a0:	429c      	cmp	r4, r3
 800f7a2:	d11b      	bne.n	800f7dc <_fflush_r+0x58>
 800f7a4:	686c      	ldr	r4, [r5, #4]
 800f7a6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f7aa:	2b00      	cmp	r3, #0
 800f7ac:	d0ef      	beq.n	800f78e <_fflush_r+0xa>
 800f7ae:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800f7b0:	07d0      	lsls	r0, r2, #31
 800f7b2:	d404      	bmi.n	800f7be <_fflush_r+0x3a>
 800f7b4:	0599      	lsls	r1, r3, #22
 800f7b6:	d402      	bmi.n	800f7be <_fflush_r+0x3a>
 800f7b8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800f7ba:	f000 f915 	bl	800f9e8 <__retarget_lock_acquire_recursive>
 800f7be:	4628      	mov	r0, r5
 800f7c0:	4621      	mov	r1, r4
 800f7c2:	f7ff ff59 	bl	800f678 <__sflush_r>
 800f7c6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800f7c8:	07da      	lsls	r2, r3, #31
 800f7ca:	4605      	mov	r5, r0
 800f7cc:	d4e0      	bmi.n	800f790 <_fflush_r+0xc>
 800f7ce:	89a3      	ldrh	r3, [r4, #12]
 800f7d0:	059b      	lsls	r3, r3, #22
 800f7d2:	d4dd      	bmi.n	800f790 <_fflush_r+0xc>
 800f7d4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800f7d6:	f000 f908 	bl	800f9ea <__retarget_lock_release_recursive>
 800f7da:	e7d9      	b.n	800f790 <_fflush_r+0xc>
 800f7dc:	4b05      	ldr	r3, [pc, #20]	; (800f7f4 <_fflush_r+0x70>)
 800f7de:	429c      	cmp	r4, r3
 800f7e0:	d101      	bne.n	800f7e6 <_fflush_r+0x62>
 800f7e2:	68ac      	ldr	r4, [r5, #8]
 800f7e4:	e7df      	b.n	800f7a6 <_fflush_r+0x22>
 800f7e6:	4b04      	ldr	r3, [pc, #16]	; (800f7f8 <_fflush_r+0x74>)
 800f7e8:	429c      	cmp	r4, r3
 800f7ea:	bf08      	it	eq
 800f7ec:	68ec      	ldreq	r4, [r5, #12]
 800f7ee:	e7da      	b.n	800f7a6 <_fflush_r+0x22>
 800f7f0:	0801165c 	.word	0x0801165c
 800f7f4:	0801167c 	.word	0x0801167c
 800f7f8:	0801163c 	.word	0x0801163c

0800f7fc <std>:
 800f7fc:	2300      	movs	r3, #0
 800f7fe:	b510      	push	{r4, lr}
 800f800:	4604      	mov	r4, r0
 800f802:	e9c0 3300 	strd	r3, r3, [r0]
 800f806:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800f80a:	6083      	str	r3, [r0, #8]
 800f80c:	8181      	strh	r1, [r0, #12]
 800f80e:	6643      	str	r3, [r0, #100]	; 0x64
 800f810:	81c2      	strh	r2, [r0, #14]
 800f812:	6183      	str	r3, [r0, #24]
 800f814:	4619      	mov	r1, r3
 800f816:	2208      	movs	r2, #8
 800f818:	305c      	adds	r0, #92	; 0x5c
 800f81a:	f7fd fb59 	bl	800ced0 <memset>
 800f81e:	4b05      	ldr	r3, [pc, #20]	; (800f834 <std+0x38>)
 800f820:	6263      	str	r3, [r4, #36]	; 0x24
 800f822:	4b05      	ldr	r3, [pc, #20]	; (800f838 <std+0x3c>)
 800f824:	62a3      	str	r3, [r4, #40]	; 0x28
 800f826:	4b05      	ldr	r3, [pc, #20]	; (800f83c <std+0x40>)
 800f828:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f82a:	4b05      	ldr	r3, [pc, #20]	; (800f840 <std+0x44>)
 800f82c:	6224      	str	r4, [r4, #32]
 800f82e:	6323      	str	r3, [r4, #48]	; 0x30
 800f830:	bd10      	pop	{r4, pc}
 800f832:	bf00      	nop
 800f834:	0800fb51 	.word	0x0800fb51
 800f838:	0800fb73 	.word	0x0800fb73
 800f83c:	0800fbab 	.word	0x0800fbab
 800f840:	0800fbcf 	.word	0x0800fbcf

0800f844 <_cleanup_r>:
 800f844:	4901      	ldr	r1, [pc, #4]	; (800f84c <_cleanup_r+0x8>)
 800f846:	f000 b8af 	b.w	800f9a8 <_fwalk_reent>
 800f84a:	bf00      	nop
 800f84c:	0800f785 	.word	0x0800f785

0800f850 <__sfmoreglue>:
 800f850:	b570      	push	{r4, r5, r6, lr}
 800f852:	2268      	movs	r2, #104	; 0x68
 800f854:	1e4d      	subs	r5, r1, #1
 800f856:	4355      	muls	r5, r2
 800f858:	460e      	mov	r6, r1
 800f85a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800f85e:	f7ff fa65 	bl	800ed2c <_malloc_r>
 800f862:	4604      	mov	r4, r0
 800f864:	b140      	cbz	r0, 800f878 <__sfmoreglue+0x28>
 800f866:	2100      	movs	r1, #0
 800f868:	e9c0 1600 	strd	r1, r6, [r0]
 800f86c:	300c      	adds	r0, #12
 800f86e:	60a0      	str	r0, [r4, #8]
 800f870:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800f874:	f7fd fb2c 	bl	800ced0 <memset>
 800f878:	4620      	mov	r0, r4
 800f87a:	bd70      	pop	{r4, r5, r6, pc}

0800f87c <__sfp_lock_acquire>:
 800f87c:	4801      	ldr	r0, [pc, #4]	; (800f884 <__sfp_lock_acquire+0x8>)
 800f87e:	f000 b8b3 	b.w	800f9e8 <__retarget_lock_acquire_recursive>
 800f882:	bf00      	nop
 800f884:	20000c85 	.word	0x20000c85

0800f888 <__sfp_lock_release>:
 800f888:	4801      	ldr	r0, [pc, #4]	; (800f890 <__sfp_lock_release+0x8>)
 800f88a:	f000 b8ae 	b.w	800f9ea <__retarget_lock_release_recursive>
 800f88e:	bf00      	nop
 800f890:	20000c85 	.word	0x20000c85

0800f894 <__sinit_lock_acquire>:
 800f894:	4801      	ldr	r0, [pc, #4]	; (800f89c <__sinit_lock_acquire+0x8>)
 800f896:	f000 b8a7 	b.w	800f9e8 <__retarget_lock_acquire_recursive>
 800f89a:	bf00      	nop
 800f89c:	20000c86 	.word	0x20000c86

0800f8a0 <__sinit_lock_release>:
 800f8a0:	4801      	ldr	r0, [pc, #4]	; (800f8a8 <__sinit_lock_release+0x8>)
 800f8a2:	f000 b8a2 	b.w	800f9ea <__retarget_lock_release_recursive>
 800f8a6:	bf00      	nop
 800f8a8:	20000c86 	.word	0x20000c86

0800f8ac <__sinit>:
 800f8ac:	b510      	push	{r4, lr}
 800f8ae:	4604      	mov	r4, r0
 800f8b0:	f7ff fff0 	bl	800f894 <__sinit_lock_acquire>
 800f8b4:	69a3      	ldr	r3, [r4, #24]
 800f8b6:	b11b      	cbz	r3, 800f8c0 <__sinit+0x14>
 800f8b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f8bc:	f7ff bff0 	b.w	800f8a0 <__sinit_lock_release>
 800f8c0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800f8c4:	6523      	str	r3, [r4, #80]	; 0x50
 800f8c6:	4b13      	ldr	r3, [pc, #76]	; (800f914 <__sinit+0x68>)
 800f8c8:	4a13      	ldr	r2, [pc, #76]	; (800f918 <__sinit+0x6c>)
 800f8ca:	681b      	ldr	r3, [r3, #0]
 800f8cc:	62a2      	str	r2, [r4, #40]	; 0x28
 800f8ce:	42a3      	cmp	r3, r4
 800f8d0:	bf04      	itt	eq
 800f8d2:	2301      	moveq	r3, #1
 800f8d4:	61a3      	streq	r3, [r4, #24]
 800f8d6:	4620      	mov	r0, r4
 800f8d8:	f000 f820 	bl	800f91c <__sfp>
 800f8dc:	6060      	str	r0, [r4, #4]
 800f8de:	4620      	mov	r0, r4
 800f8e0:	f000 f81c 	bl	800f91c <__sfp>
 800f8e4:	60a0      	str	r0, [r4, #8]
 800f8e6:	4620      	mov	r0, r4
 800f8e8:	f000 f818 	bl	800f91c <__sfp>
 800f8ec:	2200      	movs	r2, #0
 800f8ee:	60e0      	str	r0, [r4, #12]
 800f8f0:	2104      	movs	r1, #4
 800f8f2:	6860      	ldr	r0, [r4, #4]
 800f8f4:	f7ff ff82 	bl	800f7fc <std>
 800f8f8:	68a0      	ldr	r0, [r4, #8]
 800f8fa:	2201      	movs	r2, #1
 800f8fc:	2109      	movs	r1, #9
 800f8fe:	f7ff ff7d 	bl	800f7fc <std>
 800f902:	68e0      	ldr	r0, [r4, #12]
 800f904:	2202      	movs	r2, #2
 800f906:	2112      	movs	r1, #18
 800f908:	f7ff ff78 	bl	800f7fc <std>
 800f90c:	2301      	movs	r3, #1
 800f90e:	61a3      	str	r3, [r4, #24]
 800f910:	e7d2      	b.n	800f8b8 <__sinit+0xc>
 800f912:	bf00      	nop
 800f914:	080112c0 	.word	0x080112c0
 800f918:	0800f845 	.word	0x0800f845

0800f91c <__sfp>:
 800f91c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f91e:	4607      	mov	r7, r0
 800f920:	f7ff ffac 	bl	800f87c <__sfp_lock_acquire>
 800f924:	4b1e      	ldr	r3, [pc, #120]	; (800f9a0 <__sfp+0x84>)
 800f926:	681e      	ldr	r6, [r3, #0]
 800f928:	69b3      	ldr	r3, [r6, #24]
 800f92a:	b913      	cbnz	r3, 800f932 <__sfp+0x16>
 800f92c:	4630      	mov	r0, r6
 800f92e:	f7ff ffbd 	bl	800f8ac <__sinit>
 800f932:	3648      	adds	r6, #72	; 0x48
 800f934:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800f938:	3b01      	subs	r3, #1
 800f93a:	d503      	bpl.n	800f944 <__sfp+0x28>
 800f93c:	6833      	ldr	r3, [r6, #0]
 800f93e:	b30b      	cbz	r3, 800f984 <__sfp+0x68>
 800f940:	6836      	ldr	r6, [r6, #0]
 800f942:	e7f7      	b.n	800f934 <__sfp+0x18>
 800f944:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800f948:	b9d5      	cbnz	r5, 800f980 <__sfp+0x64>
 800f94a:	4b16      	ldr	r3, [pc, #88]	; (800f9a4 <__sfp+0x88>)
 800f94c:	60e3      	str	r3, [r4, #12]
 800f94e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f952:	6665      	str	r5, [r4, #100]	; 0x64
 800f954:	f000 f847 	bl	800f9e6 <__retarget_lock_init_recursive>
 800f958:	f7ff ff96 	bl	800f888 <__sfp_lock_release>
 800f95c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800f960:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800f964:	6025      	str	r5, [r4, #0]
 800f966:	61a5      	str	r5, [r4, #24]
 800f968:	2208      	movs	r2, #8
 800f96a:	4629      	mov	r1, r5
 800f96c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800f970:	f7fd faae 	bl	800ced0 <memset>
 800f974:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800f978:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800f97c:	4620      	mov	r0, r4
 800f97e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f980:	3468      	adds	r4, #104	; 0x68
 800f982:	e7d9      	b.n	800f938 <__sfp+0x1c>
 800f984:	2104      	movs	r1, #4
 800f986:	4638      	mov	r0, r7
 800f988:	f7ff ff62 	bl	800f850 <__sfmoreglue>
 800f98c:	4604      	mov	r4, r0
 800f98e:	6030      	str	r0, [r6, #0]
 800f990:	2800      	cmp	r0, #0
 800f992:	d1d5      	bne.n	800f940 <__sfp+0x24>
 800f994:	f7ff ff78 	bl	800f888 <__sfp_lock_release>
 800f998:	230c      	movs	r3, #12
 800f99a:	603b      	str	r3, [r7, #0]
 800f99c:	e7ee      	b.n	800f97c <__sfp+0x60>
 800f99e:	bf00      	nop
 800f9a0:	080112c0 	.word	0x080112c0
 800f9a4:	ffff0001 	.word	0xffff0001

0800f9a8 <_fwalk_reent>:
 800f9a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f9ac:	4606      	mov	r6, r0
 800f9ae:	4688      	mov	r8, r1
 800f9b0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800f9b4:	2700      	movs	r7, #0
 800f9b6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800f9ba:	f1b9 0901 	subs.w	r9, r9, #1
 800f9be:	d505      	bpl.n	800f9cc <_fwalk_reent+0x24>
 800f9c0:	6824      	ldr	r4, [r4, #0]
 800f9c2:	2c00      	cmp	r4, #0
 800f9c4:	d1f7      	bne.n	800f9b6 <_fwalk_reent+0xe>
 800f9c6:	4638      	mov	r0, r7
 800f9c8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f9cc:	89ab      	ldrh	r3, [r5, #12]
 800f9ce:	2b01      	cmp	r3, #1
 800f9d0:	d907      	bls.n	800f9e2 <_fwalk_reent+0x3a>
 800f9d2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800f9d6:	3301      	adds	r3, #1
 800f9d8:	d003      	beq.n	800f9e2 <_fwalk_reent+0x3a>
 800f9da:	4629      	mov	r1, r5
 800f9dc:	4630      	mov	r0, r6
 800f9de:	47c0      	blx	r8
 800f9e0:	4307      	orrs	r7, r0
 800f9e2:	3568      	adds	r5, #104	; 0x68
 800f9e4:	e7e9      	b.n	800f9ba <_fwalk_reent+0x12>

0800f9e6 <__retarget_lock_init_recursive>:
 800f9e6:	4770      	bx	lr

0800f9e8 <__retarget_lock_acquire_recursive>:
 800f9e8:	4770      	bx	lr

0800f9ea <__retarget_lock_release_recursive>:
 800f9ea:	4770      	bx	lr

0800f9ec <__swhatbuf_r>:
 800f9ec:	b570      	push	{r4, r5, r6, lr}
 800f9ee:	460e      	mov	r6, r1
 800f9f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800f9f4:	2900      	cmp	r1, #0
 800f9f6:	b096      	sub	sp, #88	; 0x58
 800f9f8:	4614      	mov	r4, r2
 800f9fa:	461d      	mov	r5, r3
 800f9fc:	da08      	bge.n	800fa10 <__swhatbuf_r+0x24>
 800f9fe:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800fa02:	2200      	movs	r2, #0
 800fa04:	602a      	str	r2, [r5, #0]
 800fa06:	061a      	lsls	r2, r3, #24
 800fa08:	d410      	bmi.n	800fa2c <__swhatbuf_r+0x40>
 800fa0a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800fa0e:	e00e      	b.n	800fa2e <__swhatbuf_r+0x42>
 800fa10:	466a      	mov	r2, sp
 800fa12:	f000 f903 	bl	800fc1c <_fstat_r>
 800fa16:	2800      	cmp	r0, #0
 800fa18:	dbf1      	blt.n	800f9fe <__swhatbuf_r+0x12>
 800fa1a:	9a01      	ldr	r2, [sp, #4]
 800fa1c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800fa20:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800fa24:	425a      	negs	r2, r3
 800fa26:	415a      	adcs	r2, r3
 800fa28:	602a      	str	r2, [r5, #0]
 800fa2a:	e7ee      	b.n	800fa0a <__swhatbuf_r+0x1e>
 800fa2c:	2340      	movs	r3, #64	; 0x40
 800fa2e:	2000      	movs	r0, #0
 800fa30:	6023      	str	r3, [r4, #0]
 800fa32:	b016      	add	sp, #88	; 0x58
 800fa34:	bd70      	pop	{r4, r5, r6, pc}
	...

0800fa38 <__smakebuf_r>:
 800fa38:	898b      	ldrh	r3, [r1, #12]
 800fa3a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fa3c:	079d      	lsls	r5, r3, #30
 800fa3e:	4606      	mov	r6, r0
 800fa40:	460c      	mov	r4, r1
 800fa42:	d507      	bpl.n	800fa54 <__smakebuf_r+0x1c>
 800fa44:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800fa48:	6023      	str	r3, [r4, #0]
 800fa4a:	6123      	str	r3, [r4, #16]
 800fa4c:	2301      	movs	r3, #1
 800fa4e:	6163      	str	r3, [r4, #20]
 800fa50:	b002      	add	sp, #8
 800fa52:	bd70      	pop	{r4, r5, r6, pc}
 800fa54:	ab01      	add	r3, sp, #4
 800fa56:	466a      	mov	r2, sp
 800fa58:	f7ff ffc8 	bl	800f9ec <__swhatbuf_r>
 800fa5c:	9900      	ldr	r1, [sp, #0]
 800fa5e:	4605      	mov	r5, r0
 800fa60:	4630      	mov	r0, r6
 800fa62:	f7ff f963 	bl	800ed2c <_malloc_r>
 800fa66:	b948      	cbnz	r0, 800fa7c <__smakebuf_r+0x44>
 800fa68:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800fa6c:	059a      	lsls	r2, r3, #22
 800fa6e:	d4ef      	bmi.n	800fa50 <__smakebuf_r+0x18>
 800fa70:	f023 0303 	bic.w	r3, r3, #3
 800fa74:	f043 0302 	orr.w	r3, r3, #2
 800fa78:	81a3      	strh	r3, [r4, #12]
 800fa7a:	e7e3      	b.n	800fa44 <__smakebuf_r+0xc>
 800fa7c:	4b0d      	ldr	r3, [pc, #52]	; (800fab4 <__smakebuf_r+0x7c>)
 800fa7e:	62b3      	str	r3, [r6, #40]	; 0x28
 800fa80:	89a3      	ldrh	r3, [r4, #12]
 800fa82:	6020      	str	r0, [r4, #0]
 800fa84:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800fa88:	81a3      	strh	r3, [r4, #12]
 800fa8a:	9b00      	ldr	r3, [sp, #0]
 800fa8c:	6163      	str	r3, [r4, #20]
 800fa8e:	9b01      	ldr	r3, [sp, #4]
 800fa90:	6120      	str	r0, [r4, #16]
 800fa92:	b15b      	cbz	r3, 800faac <__smakebuf_r+0x74>
 800fa94:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800fa98:	4630      	mov	r0, r6
 800fa9a:	f000 f8d1 	bl	800fc40 <_isatty_r>
 800fa9e:	b128      	cbz	r0, 800faac <__smakebuf_r+0x74>
 800faa0:	89a3      	ldrh	r3, [r4, #12]
 800faa2:	f023 0303 	bic.w	r3, r3, #3
 800faa6:	f043 0301 	orr.w	r3, r3, #1
 800faaa:	81a3      	strh	r3, [r4, #12]
 800faac:	89a0      	ldrh	r0, [r4, #12]
 800faae:	4305      	orrs	r5, r0
 800fab0:	81a5      	strh	r5, [r4, #12]
 800fab2:	e7cd      	b.n	800fa50 <__smakebuf_r+0x18>
 800fab4:	0800f845 	.word	0x0800f845

0800fab8 <_malloc_usable_size_r>:
 800fab8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800fabc:	1f18      	subs	r0, r3, #4
 800fabe:	2b00      	cmp	r3, #0
 800fac0:	bfbc      	itt	lt
 800fac2:	580b      	ldrlt	r3, [r1, r0]
 800fac4:	18c0      	addlt	r0, r0, r3
 800fac6:	4770      	bx	lr

0800fac8 <_raise_r>:
 800fac8:	291f      	cmp	r1, #31
 800faca:	b538      	push	{r3, r4, r5, lr}
 800facc:	4604      	mov	r4, r0
 800face:	460d      	mov	r5, r1
 800fad0:	d904      	bls.n	800fadc <_raise_r+0x14>
 800fad2:	2316      	movs	r3, #22
 800fad4:	6003      	str	r3, [r0, #0]
 800fad6:	f04f 30ff 	mov.w	r0, #4294967295
 800fada:	bd38      	pop	{r3, r4, r5, pc}
 800fadc:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800fade:	b112      	cbz	r2, 800fae6 <_raise_r+0x1e>
 800fae0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800fae4:	b94b      	cbnz	r3, 800fafa <_raise_r+0x32>
 800fae6:	4620      	mov	r0, r4
 800fae8:	f000 f830 	bl	800fb4c <_getpid_r>
 800faec:	462a      	mov	r2, r5
 800faee:	4601      	mov	r1, r0
 800faf0:	4620      	mov	r0, r4
 800faf2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800faf6:	f000 b817 	b.w	800fb28 <_kill_r>
 800fafa:	2b01      	cmp	r3, #1
 800fafc:	d00a      	beq.n	800fb14 <_raise_r+0x4c>
 800fafe:	1c59      	adds	r1, r3, #1
 800fb00:	d103      	bne.n	800fb0a <_raise_r+0x42>
 800fb02:	2316      	movs	r3, #22
 800fb04:	6003      	str	r3, [r0, #0]
 800fb06:	2001      	movs	r0, #1
 800fb08:	e7e7      	b.n	800fada <_raise_r+0x12>
 800fb0a:	2400      	movs	r4, #0
 800fb0c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800fb10:	4628      	mov	r0, r5
 800fb12:	4798      	blx	r3
 800fb14:	2000      	movs	r0, #0
 800fb16:	e7e0      	b.n	800fada <_raise_r+0x12>

0800fb18 <raise>:
 800fb18:	4b02      	ldr	r3, [pc, #8]	; (800fb24 <raise+0xc>)
 800fb1a:	4601      	mov	r1, r0
 800fb1c:	6818      	ldr	r0, [r3, #0]
 800fb1e:	f7ff bfd3 	b.w	800fac8 <_raise_r>
 800fb22:	bf00      	nop
 800fb24:	20000148 	.word	0x20000148

0800fb28 <_kill_r>:
 800fb28:	b538      	push	{r3, r4, r5, lr}
 800fb2a:	4d07      	ldr	r5, [pc, #28]	; (800fb48 <_kill_r+0x20>)
 800fb2c:	2300      	movs	r3, #0
 800fb2e:	4604      	mov	r4, r0
 800fb30:	4608      	mov	r0, r1
 800fb32:	4611      	mov	r1, r2
 800fb34:	602b      	str	r3, [r5, #0]
 800fb36:	f7f7 fb7b 	bl	8007230 <_kill>
 800fb3a:	1c43      	adds	r3, r0, #1
 800fb3c:	d102      	bne.n	800fb44 <_kill_r+0x1c>
 800fb3e:	682b      	ldr	r3, [r5, #0]
 800fb40:	b103      	cbz	r3, 800fb44 <_kill_r+0x1c>
 800fb42:	6023      	str	r3, [r4, #0]
 800fb44:	bd38      	pop	{r3, r4, r5, pc}
 800fb46:	bf00      	nop
 800fb48:	20000c80 	.word	0x20000c80

0800fb4c <_getpid_r>:
 800fb4c:	f7f7 bb68 	b.w	8007220 <_getpid>

0800fb50 <__sread>:
 800fb50:	b510      	push	{r4, lr}
 800fb52:	460c      	mov	r4, r1
 800fb54:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800fb58:	f000 f894 	bl	800fc84 <_read_r>
 800fb5c:	2800      	cmp	r0, #0
 800fb5e:	bfab      	itete	ge
 800fb60:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800fb62:	89a3      	ldrhlt	r3, [r4, #12]
 800fb64:	181b      	addge	r3, r3, r0
 800fb66:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800fb6a:	bfac      	ite	ge
 800fb6c:	6563      	strge	r3, [r4, #84]	; 0x54
 800fb6e:	81a3      	strhlt	r3, [r4, #12]
 800fb70:	bd10      	pop	{r4, pc}

0800fb72 <__swrite>:
 800fb72:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fb76:	461f      	mov	r7, r3
 800fb78:	898b      	ldrh	r3, [r1, #12]
 800fb7a:	05db      	lsls	r3, r3, #23
 800fb7c:	4605      	mov	r5, r0
 800fb7e:	460c      	mov	r4, r1
 800fb80:	4616      	mov	r6, r2
 800fb82:	d505      	bpl.n	800fb90 <__swrite+0x1e>
 800fb84:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800fb88:	2302      	movs	r3, #2
 800fb8a:	2200      	movs	r2, #0
 800fb8c:	f000 f868 	bl	800fc60 <_lseek_r>
 800fb90:	89a3      	ldrh	r3, [r4, #12]
 800fb92:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800fb96:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800fb9a:	81a3      	strh	r3, [r4, #12]
 800fb9c:	4632      	mov	r2, r6
 800fb9e:	463b      	mov	r3, r7
 800fba0:	4628      	mov	r0, r5
 800fba2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800fba6:	f000 b817 	b.w	800fbd8 <_write_r>

0800fbaa <__sseek>:
 800fbaa:	b510      	push	{r4, lr}
 800fbac:	460c      	mov	r4, r1
 800fbae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800fbb2:	f000 f855 	bl	800fc60 <_lseek_r>
 800fbb6:	1c43      	adds	r3, r0, #1
 800fbb8:	89a3      	ldrh	r3, [r4, #12]
 800fbba:	bf15      	itete	ne
 800fbbc:	6560      	strne	r0, [r4, #84]	; 0x54
 800fbbe:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800fbc2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800fbc6:	81a3      	strheq	r3, [r4, #12]
 800fbc8:	bf18      	it	ne
 800fbca:	81a3      	strhne	r3, [r4, #12]
 800fbcc:	bd10      	pop	{r4, pc}

0800fbce <__sclose>:
 800fbce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800fbd2:	f000 b813 	b.w	800fbfc <_close_r>
	...

0800fbd8 <_write_r>:
 800fbd8:	b538      	push	{r3, r4, r5, lr}
 800fbda:	4d07      	ldr	r5, [pc, #28]	; (800fbf8 <_write_r+0x20>)
 800fbdc:	4604      	mov	r4, r0
 800fbde:	4608      	mov	r0, r1
 800fbe0:	4611      	mov	r1, r2
 800fbe2:	2200      	movs	r2, #0
 800fbe4:	602a      	str	r2, [r5, #0]
 800fbe6:	461a      	mov	r2, r3
 800fbe8:	f7f7 fb59 	bl	800729e <_write>
 800fbec:	1c43      	adds	r3, r0, #1
 800fbee:	d102      	bne.n	800fbf6 <_write_r+0x1e>
 800fbf0:	682b      	ldr	r3, [r5, #0]
 800fbf2:	b103      	cbz	r3, 800fbf6 <_write_r+0x1e>
 800fbf4:	6023      	str	r3, [r4, #0]
 800fbf6:	bd38      	pop	{r3, r4, r5, pc}
 800fbf8:	20000c80 	.word	0x20000c80

0800fbfc <_close_r>:
 800fbfc:	b538      	push	{r3, r4, r5, lr}
 800fbfe:	4d06      	ldr	r5, [pc, #24]	; (800fc18 <_close_r+0x1c>)
 800fc00:	2300      	movs	r3, #0
 800fc02:	4604      	mov	r4, r0
 800fc04:	4608      	mov	r0, r1
 800fc06:	602b      	str	r3, [r5, #0]
 800fc08:	f7f7 fb65 	bl	80072d6 <_close>
 800fc0c:	1c43      	adds	r3, r0, #1
 800fc0e:	d102      	bne.n	800fc16 <_close_r+0x1a>
 800fc10:	682b      	ldr	r3, [r5, #0]
 800fc12:	b103      	cbz	r3, 800fc16 <_close_r+0x1a>
 800fc14:	6023      	str	r3, [r4, #0]
 800fc16:	bd38      	pop	{r3, r4, r5, pc}
 800fc18:	20000c80 	.word	0x20000c80

0800fc1c <_fstat_r>:
 800fc1c:	b538      	push	{r3, r4, r5, lr}
 800fc1e:	4d07      	ldr	r5, [pc, #28]	; (800fc3c <_fstat_r+0x20>)
 800fc20:	2300      	movs	r3, #0
 800fc22:	4604      	mov	r4, r0
 800fc24:	4608      	mov	r0, r1
 800fc26:	4611      	mov	r1, r2
 800fc28:	602b      	str	r3, [r5, #0]
 800fc2a:	f7f7 fb60 	bl	80072ee <_fstat>
 800fc2e:	1c43      	adds	r3, r0, #1
 800fc30:	d102      	bne.n	800fc38 <_fstat_r+0x1c>
 800fc32:	682b      	ldr	r3, [r5, #0]
 800fc34:	b103      	cbz	r3, 800fc38 <_fstat_r+0x1c>
 800fc36:	6023      	str	r3, [r4, #0]
 800fc38:	bd38      	pop	{r3, r4, r5, pc}
 800fc3a:	bf00      	nop
 800fc3c:	20000c80 	.word	0x20000c80

0800fc40 <_isatty_r>:
 800fc40:	b538      	push	{r3, r4, r5, lr}
 800fc42:	4d06      	ldr	r5, [pc, #24]	; (800fc5c <_isatty_r+0x1c>)
 800fc44:	2300      	movs	r3, #0
 800fc46:	4604      	mov	r4, r0
 800fc48:	4608      	mov	r0, r1
 800fc4a:	602b      	str	r3, [r5, #0]
 800fc4c:	f7f7 fb5f 	bl	800730e <_isatty>
 800fc50:	1c43      	adds	r3, r0, #1
 800fc52:	d102      	bne.n	800fc5a <_isatty_r+0x1a>
 800fc54:	682b      	ldr	r3, [r5, #0]
 800fc56:	b103      	cbz	r3, 800fc5a <_isatty_r+0x1a>
 800fc58:	6023      	str	r3, [r4, #0]
 800fc5a:	bd38      	pop	{r3, r4, r5, pc}
 800fc5c:	20000c80 	.word	0x20000c80

0800fc60 <_lseek_r>:
 800fc60:	b538      	push	{r3, r4, r5, lr}
 800fc62:	4d07      	ldr	r5, [pc, #28]	; (800fc80 <_lseek_r+0x20>)
 800fc64:	4604      	mov	r4, r0
 800fc66:	4608      	mov	r0, r1
 800fc68:	4611      	mov	r1, r2
 800fc6a:	2200      	movs	r2, #0
 800fc6c:	602a      	str	r2, [r5, #0]
 800fc6e:	461a      	mov	r2, r3
 800fc70:	f7f7 fb58 	bl	8007324 <_lseek>
 800fc74:	1c43      	adds	r3, r0, #1
 800fc76:	d102      	bne.n	800fc7e <_lseek_r+0x1e>
 800fc78:	682b      	ldr	r3, [r5, #0]
 800fc7a:	b103      	cbz	r3, 800fc7e <_lseek_r+0x1e>
 800fc7c:	6023      	str	r3, [r4, #0]
 800fc7e:	bd38      	pop	{r3, r4, r5, pc}
 800fc80:	20000c80 	.word	0x20000c80

0800fc84 <_read_r>:
 800fc84:	b538      	push	{r3, r4, r5, lr}
 800fc86:	4d07      	ldr	r5, [pc, #28]	; (800fca4 <_read_r+0x20>)
 800fc88:	4604      	mov	r4, r0
 800fc8a:	4608      	mov	r0, r1
 800fc8c:	4611      	mov	r1, r2
 800fc8e:	2200      	movs	r2, #0
 800fc90:	602a      	str	r2, [r5, #0]
 800fc92:	461a      	mov	r2, r3
 800fc94:	f7f7 fae6 	bl	8007264 <_read>
 800fc98:	1c43      	adds	r3, r0, #1
 800fc9a:	d102      	bne.n	800fca2 <_read_r+0x1e>
 800fc9c:	682b      	ldr	r3, [r5, #0]
 800fc9e:	b103      	cbz	r3, 800fca2 <_read_r+0x1e>
 800fca0:	6023      	str	r3, [r4, #0]
 800fca2:	bd38      	pop	{r3, r4, r5, pc}
 800fca4:	20000c80 	.word	0x20000c80

0800fca8 <atan>:
 800fca8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fcac:	ec55 4b10 	vmov	r4, r5, d0
 800fcb0:	4bc3      	ldr	r3, [pc, #780]	; (800ffc0 <atan+0x318>)
 800fcb2:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 800fcb6:	429e      	cmp	r6, r3
 800fcb8:	46ab      	mov	fp, r5
 800fcba:	dd18      	ble.n	800fcee <atan+0x46>
 800fcbc:	4bc1      	ldr	r3, [pc, #772]	; (800ffc4 <atan+0x31c>)
 800fcbe:	429e      	cmp	r6, r3
 800fcc0:	dc01      	bgt.n	800fcc6 <atan+0x1e>
 800fcc2:	d109      	bne.n	800fcd8 <atan+0x30>
 800fcc4:	b144      	cbz	r4, 800fcd8 <atan+0x30>
 800fcc6:	4622      	mov	r2, r4
 800fcc8:	462b      	mov	r3, r5
 800fcca:	4620      	mov	r0, r4
 800fccc:	4629      	mov	r1, r5
 800fcce:	f7f0 fafd 	bl	80002cc <__adddf3>
 800fcd2:	4604      	mov	r4, r0
 800fcd4:	460d      	mov	r5, r1
 800fcd6:	e006      	b.n	800fce6 <atan+0x3e>
 800fcd8:	f1bb 0f00 	cmp.w	fp, #0
 800fcdc:	f300 8131 	bgt.w	800ff42 <atan+0x29a>
 800fce0:	a59b      	add	r5, pc, #620	; (adr r5, 800ff50 <atan+0x2a8>)
 800fce2:	e9d5 4500 	ldrd	r4, r5, [r5]
 800fce6:	ec45 4b10 	vmov	d0, r4, r5
 800fcea:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fcee:	4bb6      	ldr	r3, [pc, #728]	; (800ffc8 <atan+0x320>)
 800fcf0:	429e      	cmp	r6, r3
 800fcf2:	dc14      	bgt.n	800fd1e <atan+0x76>
 800fcf4:	f1a3 73de 	sub.w	r3, r3, #29097984	; 0x1bc0000
 800fcf8:	429e      	cmp	r6, r3
 800fcfa:	dc0d      	bgt.n	800fd18 <atan+0x70>
 800fcfc:	a396      	add	r3, pc, #600	; (adr r3, 800ff58 <atan+0x2b0>)
 800fcfe:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fd02:	ee10 0a10 	vmov	r0, s0
 800fd06:	4629      	mov	r1, r5
 800fd08:	f7f0 fae0 	bl	80002cc <__adddf3>
 800fd0c:	4baf      	ldr	r3, [pc, #700]	; (800ffcc <atan+0x324>)
 800fd0e:	2200      	movs	r2, #0
 800fd10:	f7f0 ff22 	bl	8000b58 <__aeabi_dcmpgt>
 800fd14:	2800      	cmp	r0, #0
 800fd16:	d1e6      	bne.n	800fce6 <atan+0x3e>
 800fd18:	f04f 3aff 	mov.w	sl, #4294967295
 800fd1c:	e02b      	b.n	800fd76 <atan+0xce>
 800fd1e:	f000 f963 	bl	800ffe8 <fabs>
 800fd22:	4bab      	ldr	r3, [pc, #684]	; (800ffd0 <atan+0x328>)
 800fd24:	429e      	cmp	r6, r3
 800fd26:	ec55 4b10 	vmov	r4, r5, d0
 800fd2a:	f300 80bf 	bgt.w	800feac <atan+0x204>
 800fd2e:	f5a3 2350 	sub.w	r3, r3, #851968	; 0xd0000
 800fd32:	429e      	cmp	r6, r3
 800fd34:	f300 80a0 	bgt.w	800fe78 <atan+0x1d0>
 800fd38:	ee10 2a10 	vmov	r2, s0
 800fd3c:	ee10 0a10 	vmov	r0, s0
 800fd40:	462b      	mov	r3, r5
 800fd42:	4629      	mov	r1, r5
 800fd44:	f7f0 fac2 	bl	80002cc <__adddf3>
 800fd48:	4ba0      	ldr	r3, [pc, #640]	; (800ffcc <atan+0x324>)
 800fd4a:	2200      	movs	r2, #0
 800fd4c:	f7f0 fabc 	bl	80002c8 <__aeabi_dsub>
 800fd50:	2200      	movs	r2, #0
 800fd52:	4606      	mov	r6, r0
 800fd54:	460f      	mov	r7, r1
 800fd56:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800fd5a:	4620      	mov	r0, r4
 800fd5c:	4629      	mov	r1, r5
 800fd5e:	f7f0 fab5 	bl	80002cc <__adddf3>
 800fd62:	4602      	mov	r2, r0
 800fd64:	460b      	mov	r3, r1
 800fd66:	4630      	mov	r0, r6
 800fd68:	4639      	mov	r1, r7
 800fd6a:	f7f0 fd8f 	bl	800088c <__aeabi_ddiv>
 800fd6e:	f04f 0a00 	mov.w	sl, #0
 800fd72:	4604      	mov	r4, r0
 800fd74:	460d      	mov	r5, r1
 800fd76:	4622      	mov	r2, r4
 800fd78:	462b      	mov	r3, r5
 800fd7a:	4620      	mov	r0, r4
 800fd7c:	4629      	mov	r1, r5
 800fd7e:	f7f0 fc5b 	bl	8000638 <__aeabi_dmul>
 800fd82:	4602      	mov	r2, r0
 800fd84:	460b      	mov	r3, r1
 800fd86:	4680      	mov	r8, r0
 800fd88:	4689      	mov	r9, r1
 800fd8a:	f7f0 fc55 	bl	8000638 <__aeabi_dmul>
 800fd8e:	a374      	add	r3, pc, #464	; (adr r3, 800ff60 <atan+0x2b8>)
 800fd90:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fd94:	4606      	mov	r6, r0
 800fd96:	460f      	mov	r7, r1
 800fd98:	f7f0 fc4e 	bl	8000638 <__aeabi_dmul>
 800fd9c:	a372      	add	r3, pc, #456	; (adr r3, 800ff68 <atan+0x2c0>)
 800fd9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fda2:	f7f0 fa93 	bl	80002cc <__adddf3>
 800fda6:	4632      	mov	r2, r6
 800fda8:	463b      	mov	r3, r7
 800fdaa:	f7f0 fc45 	bl	8000638 <__aeabi_dmul>
 800fdae:	a370      	add	r3, pc, #448	; (adr r3, 800ff70 <atan+0x2c8>)
 800fdb0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fdb4:	f7f0 fa8a 	bl	80002cc <__adddf3>
 800fdb8:	4632      	mov	r2, r6
 800fdba:	463b      	mov	r3, r7
 800fdbc:	f7f0 fc3c 	bl	8000638 <__aeabi_dmul>
 800fdc0:	a36d      	add	r3, pc, #436	; (adr r3, 800ff78 <atan+0x2d0>)
 800fdc2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fdc6:	f7f0 fa81 	bl	80002cc <__adddf3>
 800fdca:	4632      	mov	r2, r6
 800fdcc:	463b      	mov	r3, r7
 800fdce:	f7f0 fc33 	bl	8000638 <__aeabi_dmul>
 800fdd2:	a36b      	add	r3, pc, #428	; (adr r3, 800ff80 <atan+0x2d8>)
 800fdd4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fdd8:	f7f0 fa78 	bl	80002cc <__adddf3>
 800fddc:	4632      	mov	r2, r6
 800fdde:	463b      	mov	r3, r7
 800fde0:	f7f0 fc2a 	bl	8000638 <__aeabi_dmul>
 800fde4:	a368      	add	r3, pc, #416	; (adr r3, 800ff88 <atan+0x2e0>)
 800fde6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fdea:	f7f0 fa6f 	bl	80002cc <__adddf3>
 800fdee:	4642      	mov	r2, r8
 800fdf0:	464b      	mov	r3, r9
 800fdf2:	f7f0 fc21 	bl	8000638 <__aeabi_dmul>
 800fdf6:	a366      	add	r3, pc, #408	; (adr r3, 800ff90 <atan+0x2e8>)
 800fdf8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fdfc:	4680      	mov	r8, r0
 800fdfe:	4689      	mov	r9, r1
 800fe00:	4630      	mov	r0, r6
 800fe02:	4639      	mov	r1, r7
 800fe04:	f7f0 fc18 	bl	8000638 <__aeabi_dmul>
 800fe08:	a363      	add	r3, pc, #396	; (adr r3, 800ff98 <atan+0x2f0>)
 800fe0a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fe0e:	f7f0 fa5b 	bl	80002c8 <__aeabi_dsub>
 800fe12:	4632      	mov	r2, r6
 800fe14:	463b      	mov	r3, r7
 800fe16:	f7f0 fc0f 	bl	8000638 <__aeabi_dmul>
 800fe1a:	a361      	add	r3, pc, #388	; (adr r3, 800ffa0 <atan+0x2f8>)
 800fe1c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fe20:	f7f0 fa52 	bl	80002c8 <__aeabi_dsub>
 800fe24:	4632      	mov	r2, r6
 800fe26:	463b      	mov	r3, r7
 800fe28:	f7f0 fc06 	bl	8000638 <__aeabi_dmul>
 800fe2c:	a35e      	add	r3, pc, #376	; (adr r3, 800ffa8 <atan+0x300>)
 800fe2e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fe32:	f7f0 fa49 	bl	80002c8 <__aeabi_dsub>
 800fe36:	4632      	mov	r2, r6
 800fe38:	463b      	mov	r3, r7
 800fe3a:	f7f0 fbfd 	bl	8000638 <__aeabi_dmul>
 800fe3e:	a35c      	add	r3, pc, #368	; (adr r3, 800ffb0 <atan+0x308>)
 800fe40:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fe44:	f7f0 fa40 	bl	80002c8 <__aeabi_dsub>
 800fe48:	4632      	mov	r2, r6
 800fe4a:	463b      	mov	r3, r7
 800fe4c:	f7f0 fbf4 	bl	8000638 <__aeabi_dmul>
 800fe50:	4602      	mov	r2, r0
 800fe52:	460b      	mov	r3, r1
 800fe54:	4640      	mov	r0, r8
 800fe56:	4649      	mov	r1, r9
 800fe58:	f7f0 fa38 	bl	80002cc <__adddf3>
 800fe5c:	4622      	mov	r2, r4
 800fe5e:	462b      	mov	r3, r5
 800fe60:	f7f0 fbea 	bl	8000638 <__aeabi_dmul>
 800fe64:	f1ba 3fff 	cmp.w	sl, #4294967295
 800fe68:	4602      	mov	r2, r0
 800fe6a:	460b      	mov	r3, r1
 800fe6c:	d14b      	bne.n	800ff06 <atan+0x25e>
 800fe6e:	4620      	mov	r0, r4
 800fe70:	4629      	mov	r1, r5
 800fe72:	f7f0 fa29 	bl	80002c8 <__aeabi_dsub>
 800fe76:	e72c      	b.n	800fcd2 <atan+0x2a>
 800fe78:	ee10 0a10 	vmov	r0, s0
 800fe7c:	4b53      	ldr	r3, [pc, #332]	; (800ffcc <atan+0x324>)
 800fe7e:	2200      	movs	r2, #0
 800fe80:	4629      	mov	r1, r5
 800fe82:	f7f0 fa21 	bl	80002c8 <__aeabi_dsub>
 800fe86:	4b51      	ldr	r3, [pc, #324]	; (800ffcc <atan+0x324>)
 800fe88:	4606      	mov	r6, r0
 800fe8a:	460f      	mov	r7, r1
 800fe8c:	2200      	movs	r2, #0
 800fe8e:	4620      	mov	r0, r4
 800fe90:	4629      	mov	r1, r5
 800fe92:	f7f0 fa1b 	bl	80002cc <__adddf3>
 800fe96:	4602      	mov	r2, r0
 800fe98:	460b      	mov	r3, r1
 800fe9a:	4630      	mov	r0, r6
 800fe9c:	4639      	mov	r1, r7
 800fe9e:	f7f0 fcf5 	bl	800088c <__aeabi_ddiv>
 800fea2:	f04f 0a01 	mov.w	sl, #1
 800fea6:	4604      	mov	r4, r0
 800fea8:	460d      	mov	r5, r1
 800feaa:	e764      	b.n	800fd76 <atan+0xce>
 800feac:	4b49      	ldr	r3, [pc, #292]	; (800ffd4 <atan+0x32c>)
 800feae:	429e      	cmp	r6, r3
 800feb0:	da1d      	bge.n	800feee <atan+0x246>
 800feb2:	ee10 0a10 	vmov	r0, s0
 800feb6:	4b48      	ldr	r3, [pc, #288]	; (800ffd8 <atan+0x330>)
 800feb8:	2200      	movs	r2, #0
 800feba:	4629      	mov	r1, r5
 800febc:	f7f0 fa04 	bl	80002c8 <__aeabi_dsub>
 800fec0:	4b45      	ldr	r3, [pc, #276]	; (800ffd8 <atan+0x330>)
 800fec2:	4606      	mov	r6, r0
 800fec4:	460f      	mov	r7, r1
 800fec6:	2200      	movs	r2, #0
 800fec8:	4620      	mov	r0, r4
 800feca:	4629      	mov	r1, r5
 800fecc:	f7f0 fbb4 	bl	8000638 <__aeabi_dmul>
 800fed0:	4b3e      	ldr	r3, [pc, #248]	; (800ffcc <atan+0x324>)
 800fed2:	2200      	movs	r2, #0
 800fed4:	f7f0 f9fa 	bl	80002cc <__adddf3>
 800fed8:	4602      	mov	r2, r0
 800feda:	460b      	mov	r3, r1
 800fedc:	4630      	mov	r0, r6
 800fede:	4639      	mov	r1, r7
 800fee0:	f7f0 fcd4 	bl	800088c <__aeabi_ddiv>
 800fee4:	f04f 0a02 	mov.w	sl, #2
 800fee8:	4604      	mov	r4, r0
 800feea:	460d      	mov	r5, r1
 800feec:	e743      	b.n	800fd76 <atan+0xce>
 800feee:	462b      	mov	r3, r5
 800fef0:	ee10 2a10 	vmov	r2, s0
 800fef4:	4939      	ldr	r1, [pc, #228]	; (800ffdc <atan+0x334>)
 800fef6:	2000      	movs	r0, #0
 800fef8:	f7f0 fcc8 	bl	800088c <__aeabi_ddiv>
 800fefc:	f04f 0a03 	mov.w	sl, #3
 800ff00:	4604      	mov	r4, r0
 800ff02:	460d      	mov	r5, r1
 800ff04:	e737      	b.n	800fd76 <atan+0xce>
 800ff06:	4b36      	ldr	r3, [pc, #216]	; (800ffe0 <atan+0x338>)
 800ff08:	4e36      	ldr	r6, [pc, #216]	; (800ffe4 <atan+0x33c>)
 800ff0a:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 800ff0e:	eb03 0aca 	add.w	sl, r3, sl, lsl #3
 800ff12:	e9da 2300 	ldrd	r2, r3, [sl]
 800ff16:	f7f0 f9d7 	bl	80002c8 <__aeabi_dsub>
 800ff1a:	4622      	mov	r2, r4
 800ff1c:	462b      	mov	r3, r5
 800ff1e:	f7f0 f9d3 	bl	80002c8 <__aeabi_dsub>
 800ff22:	4602      	mov	r2, r0
 800ff24:	460b      	mov	r3, r1
 800ff26:	e9d6 0100 	ldrd	r0, r1, [r6]
 800ff2a:	f7f0 f9cd 	bl	80002c8 <__aeabi_dsub>
 800ff2e:	f1bb 0f00 	cmp.w	fp, #0
 800ff32:	4604      	mov	r4, r0
 800ff34:	460d      	mov	r5, r1
 800ff36:	f6bf aed6 	bge.w	800fce6 <atan+0x3e>
 800ff3a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800ff3e:	461d      	mov	r5, r3
 800ff40:	e6d1      	b.n	800fce6 <atan+0x3e>
 800ff42:	a51d      	add	r5, pc, #116	; (adr r5, 800ffb8 <atan+0x310>)
 800ff44:	e9d5 4500 	ldrd	r4, r5, [r5]
 800ff48:	e6cd      	b.n	800fce6 <atan+0x3e>
 800ff4a:	bf00      	nop
 800ff4c:	f3af 8000 	nop.w
 800ff50:	54442d18 	.word	0x54442d18
 800ff54:	bff921fb 	.word	0xbff921fb
 800ff58:	8800759c 	.word	0x8800759c
 800ff5c:	7e37e43c 	.word	0x7e37e43c
 800ff60:	e322da11 	.word	0xe322da11
 800ff64:	3f90ad3a 	.word	0x3f90ad3a
 800ff68:	24760deb 	.word	0x24760deb
 800ff6c:	3fa97b4b 	.word	0x3fa97b4b
 800ff70:	a0d03d51 	.word	0xa0d03d51
 800ff74:	3fb10d66 	.word	0x3fb10d66
 800ff78:	c54c206e 	.word	0xc54c206e
 800ff7c:	3fb745cd 	.word	0x3fb745cd
 800ff80:	920083ff 	.word	0x920083ff
 800ff84:	3fc24924 	.word	0x3fc24924
 800ff88:	5555550d 	.word	0x5555550d
 800ff8c:	3fd55555 	.word	0x3fd55555
 800ff90:	2c6a6c2f 	.word	0x2c6a6c2f
 800ff94:	bfa2b444 	.word	0xbfa2b444
 800ff98:	52defd9a 	.word	0x52defd9a
 800ff9c:	3fadde2d 	.word	0x3fadde2d
 800ffa0:	af749a6d 	.word	0xaf749a6d
 800ffa4:	3fb3b0f2 	.word	0x3fb3b0f2
 800ffa8:	fe231671 	.word	0xfe231671
 800ffac:	3fbc71c6 	.word	0x3fbc71c6
 800ffb0:	9998ebc4 	.word	0x9998ebc4
 800ffb4:	3fc99999 	.word	0x3fc99999
 800ffb8:	54442d18 	.word	0x54442d18
 800ffbc:	3ff921fb 	.word	0x3ff921fb
 800ffc0:	440fffff 	.word	0x440fffff
 800ffc4:	7ff00000 	.word	0x7ff00000
 800ffc8:	3fdbffff 	.word	0x3fdbffff
 800ffcc:	3ff00000 	.word	0x3ff00000
 800ffd0:	3ff2ffff 	.word	0x3ff2ffff
 800ffd4:	40038000 	.word	0x40038000
 800ffd8:	3ff80000 	.word	0x3ff80000
 800ffdc:	bff00000 	.word	0xbff00000
 800ffe0:	080116c0 	.word	0x080116c0
 800ffe4:	080116a0 	.word	0x080116a0

0800ffe8 <fabs>:
 800ffe8:	ec51 0b10 	vmov	r0, r1, d0
 800ffec:	ee10 2a10 	vmov	r2, s0
 800fff0:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 800fff4:	ec43 2b10 	vmov	d0, r2, r3
 800fff8:	4770      	bx	lr
 800fffa:	0000      	movs	r0, r0
 800fffc:	0000      	movs	r0, r0
	...

08010000 <tan>:
 8010000:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010002:	ec53 2b10 	vmov	r2, r3, d0
 8010006:	4816      	ldr	r0, [pc, #88]	; (8010060 <tan+0x60>)
 8010008:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 801000c:	4281      	cmp	r1, r0
 801000e:	dc07      	bgt.n	8010020 <tan+0x20>
 8010010:	ed9f 1b11 	vldr	d1, [pc, #68]	; 8010058 <tan+0x58>
 8010014:	2001      	movs	r0, #1
 8010016:	b005      	add	sp, #20
 8010018:	f85d eb04 	ldr.w	lr, [sp], #4
 801001c:	f000 bd80 	b.w	8010b20 <__kernel_tan>
 8010020:	4810      	ldr	r0, [pc, #64]	; (8010064 <tan+0x64>)
 8010022:	4281      	cmp	r1, r0
 8010024:	dd09      	ble.n	801003a <tan+0x3a>
 8010026:	ee10 0a10 	vmov	r0, s0
 801002a:	4619      	mov	r1, r3
 801002c:	f7f0 f94c 	bl	80002c8 <__aeabi_dsub>
 8010030:	ec41 0b10 	vmov	d0, r0, r1
 8010034:	b005      	add	sp, #20
 8010036:	f85d fb04 	ldr.w	pc, [sp], #4
 801003a:	4668      	mov	r0, sp
 801003c:	f000 f814 	bl	8010068 <__ieee754_rem_pio2>
 8010040:	0040      	lsls	r0, r0, #1
 8010042:	f000 0002 	and.w	r0, r0, #2
 8010046:	ed9d 1b02 	vldr	d1, [sp, #8]
 801004a:	ed9d 0b00 	vldr	d0, [sp]
 801004e:	f1c0 0001 	rsb	r0, r0, #1
 8010052:	f000 fd65 	bl	8010b20 <__kernel_tan>
 8010056:	e7ed      	b.n	8010034 <tan+0x34>
	...
 8010060:	3fe921fb 	.word	0x3fe921fb
 8010064:	7fefffff 	.word	0x7fefffff

08010068 <__ieee754_rem_pio2>:
 8010068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801006c:	ed2d 8b02 	vpush	{d8}
 8010070:	ec55 4b10 	vmov	r4, r5, d0
 8010074:	4bca      	ldr	r3, [pc, #808]	; (80103a0 <__ieee754_rem_pio2+0x338>)
 8010076:	b08b      	sub	sp, #44	; 0x2c
 8010078:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 801007c:	4598      	cmp	r8, r3
 801007e:	4682      	mov	sl, r0
 8010080:	9502      	str	r5, [sp, #8]
 8010082:	dc08      	bgt.n	8010096 <__ieee754_rem_pio2+0x2e>
 8010084:	2200      	movs	r2, #0
 8010086:	2300      	movs	r3, #0
 8010088:	ed80 0b00 	vstr	d0, [r0]
 801008c:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8010090:	f04f 0b00 	mov.w	fp, #0
 8010094:	e028      	b.n	80100e8 <__ieee754_rem_pio2+0x80>
 8010096:	4bc3      	ldr	r3, [pc, #780]	; (80103a4 <__ieee754_rem_pio2+0x33c>)
 8010098:	4598      	cmp	r8, r3
 801009a:	dc78      	bgt.n	801018e <__ieee754_rem_pio2+0x126>
 801009c:	9b02      	ldr	r3, [sp, #8]
 801009e:	4ec2      	ldr	r6, [pc, #776]	; (80103a8 <__ieee754_rem_pio2+0x340>)
 80100a0:	2b00      	cmp	r3, #0
 80100a2:	ee10 0a10 	vmov	r0, s0
 80100a6:	a3b0      	add	r3, pc, #704	; (adr r3, 8010368 <__ieee754_rem_pio2+0x300>)
 80100a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100ac:	4629      	mov	r1, r5
 80100ae:	dd39      	ble.n	8010124 <__ieee754_rem_pio2+0xbc>
 80100b0:	f7f0 f90a 	bl	80002c8 <__aeabi_dsub>
 80100b4:	45b0      	cmp	r8, r6
 80100b6:	4604      	mov	r4, r0
 80100b8:	460d      	mov	r5, r1
 80100ba:	d01b      	beq.n	80100f4 <__ieee754_rem_pio2+0x8c>
 80100bc:	a3ac      	add	r3, pc, #688	; (adr r3, 8010370 <__ieee754_rem_pio2+0x308>)
 80100be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100c2:	f7f0 f901 	bl	80002c8 <__aeabi_dsub>
 80100c6:	4602      	mov	r2, r0
 80100c8:	460b      	mov	r3, r1
 80100ca:	e9ca 2300 	strd	r2, r3, [sl]
 80100ce:	4620      	mov	r0, r4
 80100d0:	4629      	mov	r1, r5
 80100d2:	f7f0 f8f9 	bl	80002c8 <__aeabi_dsub>
 80100d6:	a3a6      	add	r3, pc, #664	; (adr r3, 8010370 <__ieee754_rem_pio2+0x308>)
 80100d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100dc:	f7f0 f8f4 	bl	80002c8 <__aeabi_dsub>
 80100e0:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80100e4:	f04f 0b01 	mov.w	fp, #1
 80100e8:	4658      	mov	r0, fp
 80100ea:	b00b      	add	sp, #44	; 0x2c
 80100ec:	ecbd 8b02 	vpop	{d8}
 80100f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80100f4:	a3a0      	add	r3, pc, #640	; (adr r3, 8010378 <__ieee754_rem_pio2+0x310>)
 80100f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100fa:	f7f0 f8e5 	bl	80002c8 <__aeabi_dsub>
 80100fe:	a3a0      	add	r3, pc, #640	; (adr r3, 8010380 <__ieee754_rem_pio2+0x318>)
 8010100:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010104:	4604      	mov	r4, r0
 8010106:	460d      	mov	r5, r1
 8010108:	f7f0 f8de 	bl	80002c8 <__aeabi_dsub>
 801010c:	4602      	mov	r2, r0
 801010e:	460b      	mov	r3, r1
 8010110:	e9ca 2300 	strd	r2, r3, [sl]
 8010114:	4620      	mov	r0, r4
 8010116:	4629      	mov	r1, r5
 8010118:	f7f0 f8d6 	bl	80002c8 <__aeabi_dsub>
 801011c:	a398      	add	r3, pc, #608	; (adr r3, 8010380 <__ieee754_rem_pio2+0x318>)
 801011e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010122:	e7db      	b.n	80100dc <__ieee754_rem_pio2+0x74>
 8010124:	f7f0 f8d2 	bl	80002cc <__adddf3>
 8010128:	45b0      	cmp	r8, r6
 801012a:	4604      	mov	r4, r0
 801012c:	460d      	mov	r5, r1
 801012e:	d016      	beq.n	801015e <__ieee754_rem_pio2+0xf6>
 8010130:	a38f      	add	r3, pc, #572	; (adr r3, 8010370 <__ieee754_rem_pio2+0x308>)
 8010132:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010136:	f7f0 f8c9 	bl	80002cc <__adddf3>
 801013a:	4602      	mov	r2, r0
 801013c:	460b      	mov	r3, r1
 801013e:	e9ca 2300 	strd	r2, r3, [sl]
 8010142:	4620      	mov	r0, r4
 8010144:	4629      	mov	r1, r5
 8010146:	f7f0 f8bf 	bl	80002c8 <__aeabi_dsub>
 801014a:	a389      	add	r3, pc, #548	; (adr r3, 8010370 <__ieee754_rem_pio2+0x308>)
 801014c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010150:	f7f0 f8bc 	bl	80002cc <__adddf3>
 8010154:	f04f 3bff 	mov.w	fp, #4294967295
 8010158:	e9ca 0102 	strd	r0, r1, [sl, #8]
 801015c:	e7c4      	b.n	80100e8 <__ieee754_rem_pio2+0x80>
 801015e:	a386      	add	r3, pc, #536	; (adr r3, 8010378 <__ieee754_rem_pio2+0x310>)
 8010160:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010164:	f7f0 f8b2 	bl	80002cc <__adddf3>
 8010168:	a385      	add	r3, pc, #532	; (adr r3, 8010380 <__ieee754_rem_pio2+0x318>)
 801016a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801016e:	4604      	mov	r4, r0
 8010170:	460d      	mov	r5, r1
 8010172:	f7f0 f8ab 	bl	80002cc <__adddf3>
 8010176:	4602      	mov	r2, r0
 8010178:	460b      	mov	r3, r1
 801017a:	e9ca 2300 	strd	r2, r3, [sl]
 801017e:	4620      	mov	r0, r4
 8010180:	4629      	mov	r1, r5
 8010182:	f7f0 f8a1 	bl	80002c8 <__aeabi_dsub>
 8010186:	a37e      	add	r3, pc, #504	; (adr r3, 8010380 <__ieee754_rem_pio2+0x318>)
 8010188:	e9d3 2300 	ldrd	r2, r3, [r3]
 801018c:	e7e0      	b.n	8010150 <__ieee754_rem_pio2+0xe8>
 801018e:	4b87      	ldr	r3, [pc, #540]	; (80103ac <__ieee754_rem_pio2+0x344>)
 8010190:	4598      	cmp	r8, r3
 8010192:	f300 80d9 	bgt.w	8010348 <__ieee754_rem_pio2+0x2e0>
 8010196:	f7ff ff27 	bl	800ffe8 <fabs>
 801019a:	ec55 4b10 	vmov	r4, r5, d0
 801019e:	ee10 0a10 	vmov	r0, s0
 80101a2:	a379      	add	r3, pc, #484	; (adr r3, 8010388 <__ieee754_rem_pio2+0x320>)
 80101a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80101a8:	4629      	mov	r1, r5
 80101aa:	f7f0 fa45 	bl	8000638 <__aeabi_dmul>
 80101ae:	4b80      	ldr	r3, [pc, #512]	; (80103b0 <__ieee754_rem_pio2+0x348>)
 80101b0:	2200      	movs	r2, #0
 80101b2:	f7f0 f88b 	bl	80002cc <__adddf3>
 80101b6:	f7f0 fcef 	bl	8000b98 <__aeabi_d2iz>
 80101ba:	4683      	mov	fp, r0
 80101bc:	f7f0 f9d2 	bl	8000564 <__aeabi_i2d>
 80101c0:	4602      	mov	r2, r0
 80101c2:	460b      	mov	r3, r1
 80101c4:	ec43 2b18 	vmov	d8, r2, r3
 80101c8:	a367      	add	r3, pc, #412	; (adr r3, 8010368 <__ieee754_rem_pio2+0x300>)
 80101ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80101ce:	f7f0 fa33 	bl	8000638 <__aeabi_dmul>
 80101d2:	4602      	mov	r2, r0
 80101d4:	460b      	mov	r3, r1
 80101d6:	4620      	mov	r0, r4
 80101d8:	4629      	mov	r1, r5
 80101da:	f7f0 f875 	bl	80002c8 <__aeabi_dsub>
 80101de:	a364      	add	r3, pc, #400	; (adr r3, 8010370 <__ieee754_rem_pio2+0x308>)
 80101e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80101e4:	4606      	mov	r6, r0
 80101e6:	460f      	mov	r7, r1
 80101e8:	ec51 0b18 	vmov	r0, r1, d8
 80101ec:	f7f0 fa24 	bl	8000638 <__aeabi_dmul>
 80101f0:	f1bb 0f1f 	cmp.w	fp, #31
 80101f4:	4604      	mov	r4, r0
 80101f6:	460d      	mov	r5, r1
 80101f8:	dc0d      	bgt.n	8010216 <__ieee754_rem_pio2+0x1ae>
 80101fa:	4b6e      	ldr	r3, [pc, #440]	; (80103b4 <__ieee754_rem_pio2+0x34c>)
 80101fc:	f10b 32ff 	add.w	r2, fp, #4294967295
 8010200:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8010204:	4543      	cmp	r3, r8
 8010206:	d006      	beq.n	8010216 <__ieee754_rem_pio2+0x1ae>
 8010208:	4622      	mov	r2, r4
 801020a:	462b      	mov	r3, r5
 801020c:	4630      	mov	r0, r6
 801020e:	4639      	mov	r1, r7
 8010210:	f7f0 f85a 	bl	80002c8 <__aeabi_dsub>
 8010214:	e00f      	b.n	8010236 <__ieee754_rem_pio2+0x1ce>
 8010216:	462b      	mov	r3, r5
 8010218:	4622      	mov	r2, r4
 801021a:	4630      	mov	r0, r6
 801021c:	4639      	mov	r1, r7
 801021e:	f7f0 f853 	bl	80002c8 <__aeabi_dsub>
 8010222:	ea4f 5328 	mov.w	r3, r8, asr #20
 8010226:	9303      	str	r3, [sp, #12]
 8010228:	f3c1 530a 	ubfx	r3, r1, #20, #11
 801022c:	ebc3 5818 	rsb	r8, r3, r8, lsr #20
 8010230:	f1b8 0f10 	cmp.w	r8, #16
 8010234:	dc02      	bgt.n	801023c <__ieee754_rem_pio2+0x1d4>
 8010236:	e9ca 0100 	strd	r0, r1, [sl]
 801023a:	e039      	b.n	80102b0 <__ieee754_rem_pio2+0x248>
 801023c:	a34e      	add	r3, pc, #312	; (adr r3, 8010378 <__ieee754_rem_pio2+0x310>)
 801023e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010242:	ec51 0b18 	vmov	r0, r1, d8
 8010246:	f7f0 f9f7 	bl	8000638 <__aeabi_dmul>
 801024a:	4604      	mov	r4, r0
 801024c:	460d      	mov	r5, r1
 801024e:	4602      	mov	r2, r0
 8010250:	460b      	mov	r3, r1
 8010252:	4630      	mov	r0, r6
 8010254:	4639      	mov	r1, r7
 8010256:	f7f0 f837 	bl	80002c8 <__aeabi_dsub>
 801025a:	4602      	mov	r2, r0
 801025c:	460b      	mov	r3, r1
 801025e:	4680      	mov	r8, r0
 8010260:	4689      	mov	r9, r1
 8010262:	4630      	mov	r0, r6
 8010264:	4639      	mov	r1, r7
 8010266:	f7f0 f82f 	bl	80002c8 <__aeabi_dsub>
 801026a:	4622      	mov	r2, r4
 801026c:	462b      	mov	r3, r5
 801026e:	f7f0 f82b 	bl	80002c8 <__aeabi_dsub>
 8010272:	a343      	add	r3, pc, #268	; (adr r3, 8010380 <__ieee754_rem_pio2+0x318>)
 8010274:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010278:	4604      	mov	r4, r0
 801027a:	460d      	mov	r5, r1
 801027c:	ec51 0b18 	vmov	r0, r1, d8
 8010280:	f7f0 f9da 	bl	8000638 <__aeabi_dmul>
 8010284:	4622      	mov	r2, r4
 8010286:	462b      	mov	r3, r5
 8010288:	f7f0 f81e 	bl	80002c8 <__aeabi_dsub>
 801028c:	4602      	mov	r2, r0
 801028e:	460b      	mov	r3, r1
 8010290:	4604      	mov	r4, r0
 8010292:	460d      	mov	r5, r1
 8010294:	4640      	mov	r0, r8
 8010296:	4649      	mov	r1, r9
 8010298:	f7f0 f816 	bl	80002c8 <__aeabi_dsub>
 801029c:	9a03      	ldr	r2, [sp, #12]
 801029e:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80102a2:	1ad3      	subs	r3, r2, r3
 80102a4:	2b31      	cmp	r3, #49	; 0x31
 80102a6:	dc24      	bgt.n	80102f2 <__ieee754_rem_pio2+0x28a>
 80102a8:	e9ca 0100 	strd	r0, r1, [sl]
 80102ac:	4646      	mov	r6, r8
 80102ae:	464f      	mov	r7, r9
 80102b0:	e9da 8900 	ldrd	r8, r9, [sl]
 80102b4:	4630      	mov	r0, r6
 80102b6:	4642      	mov	r2, r8
 80102b8:	464b      	mov	r3, r9
 80102ba:	4639      	mov	r1, r7
 80102bc:	f7f0 f804 	bl	80002c8 <__aeabi_dsub>
 80102c0:	462b      	mov	r3, r5
 80102c2:	4622      	mov	r2, r4
 80102c4:	f7f0 f800 	bl	80002c8 <__aeabi_dsub>
 80102c8:	9b02      	ldr	r3, [sp, #8]
 80102ca:	2b00      	cmp	r3, #0
 80102cc:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80102d0:	f6bf af0a 	bge.w	80100e8 <__ieee754_rem_pio2+0x80>
 80102d4:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 80102d8:	f8ca 3004 	str.w	r3, [sl, #4]
 80102dc:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80102e0:	f8ca 8000 	str.w	r8, [sl]
 80102e4:	f8ca 0008 	str.w	r0, [sl, #8]
 80102e8:	f8ca 300c 	str.w	r3, [sl, #12]
 80102ec:	f1cb 0b00 	rsb	fp, fp, #0
 80102f0:	e6fa      	b.n	80100e8 <__ieee754_rem_pio2+0x80>
 80102f2:	a327      	add	r3, pc, #156	; (adr r3, 8010390 <__ieee754_rem_pio2+0x328>)
 80102f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80102f8:	ec51 0b18 	vmov	r0, r1, d8
 80102fc:	f7f0 f99c 	bl	8000638 <__aeabi_dmul>
 8010300:	4604      	mov	r4, r0
 8010302:	460d      	mov	r5, r1
 8010304:	4602      	mov	r2, r0
 8010306:	460b      	mov	r3, r1
 8010308:	4640      	mov	r0, r8
 801030a:	4649      	mov	r1, r9
 801030c:	f7ef ffdc 	bl	80002c8 <__aeabi_dsub>
 8010310:	4602      	mov	r2, r0
 8010312:	460b      	mov	r3, r1
 8010314:	4606      	mov	r6, r0
 8010316:	460f      	mov	r7, r1
 8010318:	4640      	mov	r0, r8
 801031a:	4649      	mov	r1, r9
 801031c:	f7ef ffd4 	bl	80002c8 <__aeabi_dsub>
 8010320:	4622      	mov	r2, r4
 8010322:	462b      	mov	r3, r5
 8010324:	f7ef ffd0 	bl	80002c8 <__aeabi_dsub>
 8010328:	a31b      	add	r3, pc, #108	; (adr r3, 8010398 <__ieee754_rem_pio2+0x330>)
 801032a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801032e:	4604      	mov	r4, r0
 8010330:	460d      	mov	r5, r1
 8010332:	ec51 0b18 	vmov	r0, r1, d8
 8010336:	f7f0 f97f 	bl	8000638 <__aeabi_dmul>
 801033a:	4622      	mov	r2, r4
 801033c:	462b      	mov	r3, r5
 801033e:	f7ef ffc3 	bl	80002c8 <__aeabi_dsub>
 8010342:	4604      	mov	r4, r0
 8010344:	460d      	mov	r5, r1
 8010346:	e75f      	b.n	8010208 <__ieee754_rem_pio2+0x1a0>
 8010348:	4b1b      	ldr	r3, [pc, #108]	; (80103b8 <__ieee754_rem_pio2+0x350>)
 801034a:	4598      	cmp	r8, r3
 801034c:	dd36      	ble.n	80103bc <__ieee754_rem_pio2+0x354>
 801034e:	ee10 2a10 	vmov	r2, s0
 8010352:	462b      	mov	r3, r5
 8010354:	4620      	mov	r0, r4
 8010356:	4629      	mov	r1, r5
 8010358:	f7ef ffb6 	bl	80002c8 <__aeabi_dsub>
 801035c:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8010360:	e9ca 0100 	strd	r0, r1, [sl]
 8010364:	e694      	b.n	8010090 <__ieee754_rem_pio2+0x28>
 8010366:	bf00      	nop
 8010368:	54400000 	.word	0x54400000
 801036c:	3ff921fb 	.word	0x3ff921fb
 8010370:	1a626331 	.word	0x1a626331
 8010374:	3dd0b461 	.word	0x3dd0b461
 8010378:	1a600000 	.word	0x1a600000
 801037c:	3dd0b461 	.word	0x3dd0b461
 8010380:	2e037073 	.word	0x2e037073
 8010384:	3ba3198a 	.word	0x3ba3198a
 8010388:	6dc9c883 	.word	0x6dc9c883
 801038c:	3fe45f30 	.word	0x3fe45f30
 8010390:	2e000000 	.word	0x2e000000
 8010394:	3ba3198a 	.word	0x3ba3198a
 8010398:	252049c1 	.word	0x252049c1
 801039c:	397b839a 	.word	0x397b839a
 80103a0:	3fe921fb 	.word	0x3fe921fb
 80103a4:	4002d97b 	.word	0x4002d97b
 80103a8:	3ff921fb 	.word	0x3ff921fb
 80103ac:	413921fb 	.word	0x413921fb
 80103b0:	3fe00000 	.word	0x3fe00000
 80103b4:	080116e0 	.word	0x080116e0
 80103b8:	7fefffff 	.word	0x7fefffff
 80103bc:	ea4f 5428 	mov.w	r4, r8, asr #20
 80103c0:	f2a4 4416 	subw	r4, r4, #1046	; 0x416
 80103c4:	ee10 0a10 	vmov	r0, s0
 80103c8:	eba8 5104 	sub.w	r1, r8, r4, lsl #20
 80103cc:	ee10 6a10 	vmov	r6, s0
 80103d0:	460f      	mov	r7, r1
 80103d2:	f7f0 fbe1 	bl	8000b98 <__aeabi_d2iz>
 80103d6:	f7f0 f8c5 	bl	8000564 <__aeabi_i2d>
 80103da:	4602      	mov	r2, r0
 80103dc:	460b      	mov	r3, r1
 80103de:	4630      	mov	r0, r6
 80103e0:	4639      	mov	r1, r7
 80103e2:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80103e6:	f7ef ff6f 	bl	80002c8 <__aeabi_dsub>
 80103ea:	4b23      	ldr	r3, [pc, #140]	; (8010478 <__ieee754_rem_pio2+0x410>)
 80103ec:	2200      	movs	r2, #0
 80103ee:	f7f0 f923 	bl	8000638 <__aeabi_dmul>
 80103f2:	460f      	mov	r7, r1
 80103f4:	4606      	mov	r6, r0
 80103f6:	f7f0 fbcf 	bl	8000b98 <__aeabi_d2iz>
 80103fa:	f7f0 f8b3 	bl	8000564 <__aeabi_i2d>
 80103fe:	4602      	mov	r2, r0
 8010400:	460b      	mov	r3, r1
 8010402:	4630      	mov	r0, r6
 8010404:	4639      	mov	r1, r7
 8010406:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801040a:	f7ef ff5d 	bl	80002c8 <__aeabi_dsub>
 801040e:	4b1a      	ldr	r3, [pc, #104]	; (8010478 <__ieee754_rem_pio2+0x410>)
 8010410:	2200      	movs	r2, #0
 8010412:	f7f0 f911 	bl	8000638 <__aeabi_dmul>
 8010416:	e9cd 0108 	strd	r0, r1, [sp, #32]
 801041a:	ad04      	add	r5, sp, #16
 801041c:	f04f 0803 	mov.w	r8, #3
 8010420:	46a9      	mov	r9, r5
 8010422:	2600      	movs	r6, #0
 8010424:	2700      	movs	r7, #0
 8010426:	4632      	mov	r2, r6
 8010428:	463b      	mov	r3, r7
 801042a:	e9d5 0104 	ldrd	r0, r1, [r5, #16]
 801042e:	46c3      	mov	fp, r8
 8010430:	3d08      	subs	r5, #8
 8010432:	f108 38ff 	add.w	r8, r8, #4294967295
 8010436:	f7f0 fb67 	bl	8000b08 <__aeabi_dcmpeq>
 801043a:	2800      	cmp	r0, #0
 801043c:	d1f3      	bne.n	8010426 <__ieee754_rem_pio2+0x3be>
 801043e:	4b0f      	ldr	r3, [pc, #60]	; (801047c <__ieee754_rem_pio2+0x414>)
 8010440:	9301      	str	r3, [sp, #4]
 8010442:	2302      	movs	r3, #2
 8010444:	9300      	str	r3, [sp, #0]
 8010446:	4622      	mov	r2, r4
 8010448:	465b      	mov	r3, fp
 801044a:	4651      	mov	r1, sl
 801044c:	4648      	mov	r0, r9
 801044e:	f000 f817 	bl	8010480 <__kernel_rem_pio2>
 8010452:	9b02      	ldr	r3, [sp, #8]
 8010454:	2b00      	cmp	r3, #0
 8010456:	4683      	mov	fp, r0
 8010458:	f6bf ae46 	bge.w	80100e8 <__ieee754_rem_pio2+0x80>
 801045c:	e9da 2100 	ldrd	r2, r1, [sl]
 8010460:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010464:	e9ca 2300 	strd	r2, r3, [sl]
 8010468:	e9da 2102 	ldrd	r2, r1, [sl, #8]
 801046c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010470:	e9ca 2302 	strd	r2, r3, [sl, #8]
 8010474:	e73a      	b.n	80102ec <__ieee754_rem_pio2+0x284>
 8010476:	bf00      	nop
 8010478:	41700000 	.word	0x41700000
 801047c:	08011760 	.word	0x08011760

08010480 <__kernel_rem_pio2>:
 8010480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010484:	ed2d 8b02 	vpush	{d8}
 8010488:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
 801048c:	f112 0f14 	cmn.w	r2, #20
 8010490:	9308      	str	r3, [sp, #32]
 8010492:	9101      	str	r1, [sp, #4]
 8010494:	4bc4      	ldr	r3, [pc, #784]	; (80107a8 <__kernel_rem_pio2+0x328>)
 8010496:	99a6      	ldr	r1, [sp, #664]	; 0x298
 8010498:	900b      	str	r0, [sp, #44]	; 0x2c
 801049a:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 801049e:	9302      	str	r3, [sp, #8]
 80104a0:	9b08      	ldr	r3, [sp, #32]
 80104a2:	f103 33ff 	add.w	r3, r3, #4294967295
 80104a6:	bfa8      	it	ge
 80104a8:	1ed4      	subge	r4, r2, #3
 80104aa:	9306      	str	r3, [sp, #24]
 80104ac:	bfb2      	itee	lt
 80104ae:	2400      	movlt	r4, #0
 80104b0:	2318      	movge	r3, #24
 80104b2:	fb94 f4f3 	sdivge	r4, r4, r3
 80104b6:	f06f 0317 	mvn.w	r3, #23
 80104ba:	fb04 3303 	mla	r3, r4, r3, r3
 80104be:	eb03 0a02 	add.w	sl, r3, r2
 80104c2:	9b02      	ldr	r3, [sp, #8]
 80104c4:	9a06      	ldr	r2, [sp, #24]
 80104c6:	ed9f 8bb4 	vldr	d8, [pc, #720]	; 8010798 <__kernel_rem_pio2+0x318>
 80104ca:	eb03 0802 	add.w	r8, r3, r2
 80104ce:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 80104d0:	1aa7      	subs	r7, r4, r2
 80104d2:	ae22      	add	r6, sp, #136	; 0x88
 80104d4:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 80104d8:	2500      	movs	r5, #0
 80104da:	4545      	cmp	r5, r8
 80104dc:	dd13      	ble.n	8010506 <__kernel_rem_pio2+0x86>
 80104de:	9b08      	ldr	r3, [sp, #32]
 80104e0:	ed9f 8bad 	vldr	d8, [pc, #692]	; 8010798 <__kernel_rem_pio2+0x318>
 80104e4:	aa22      	add	r2, sp, #136	; 0x88
 80104e6:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 80104ea:	f50d 7be4 	add.w	fp, sp, #456	; 0x1c8
 80104ee:	f04f 0800 	mov.w	r8, #0
 80104f2:	9b02      	ldr	r3, [sp, #8]
 80104f4:	4598      	cmp	r8, r3
 80104f6:	dc2f      	bgt.n	8010558 <__kernel_rem_pio2+0xd8>
 80104f8:	ed8d 8b04 	vstr	d8, [sp, #16]
 80104fc:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 8010500:	462f      	mov	r7, r5
 8010502:	2600      	movs	r6, #0
 8010504:	e01b      	b.n	801053e <__kernel_rem_pio2+0xbe>
 8010506:	42ef      	cmn	r7, r5
 8010508:	d407      	bmi.n	801051a <__kernel_rem_pio2+0x9a>
 801050a:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 801050e:	f7f0 f829 	bl	8000564 <__aeabi_i2d>
 8010512:	e8e6 0102 	strd	r0, r1, [r6], #8
 8010516:	3501      	adds	r5, #1
 8010518:	e7df      	b.n	80104da <__kernel_rem_pio2+0x5a>
 801051a:	ec51 0b18 	vmov	r0, r1, d8
 801051e:	e7f8      	b.n	8010512 <__kernel_rem_pio2+0x92>
 8010520:	e9d7 2300 	ldrd	r2, r3, [r7]
 8010524:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8010528:	f7f0 f886 	bl	8000638 <__aeabi_dmul>
 801052c:	4602      	mov	r2, r0
 801052e:	460b      	mov	r3, r1
 8010530:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010534:	f7ef feca 	bl	80002cc <__adddf3>
 8010538:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801053c:	3601      	adds	r6, #1
 801053e:	9b06      	ldr	r3, [sp, #24]
 8010540:	429e      	cmp	r6, r3
 8010542:	f1a7 0708 	sub.w	r7, r7, #8
 8010546:	ddeb      	ble.n	8010520 <__kernel_rem_pio2+0xa0>
 8010548:	ed9d 7b04 	vldr	d7, [sp, #16]
 801054c:	f108 0801 	add.w	r8, r8, #1
 8010550:	ecab 7b02 	vstmia	fp!, {d7}
 8010554:	3508      	adds	r5, #8
 8010556:	e7cc      	b.n	80104f2 <__kernel_rem_pio2+0x72>
 8010558:	9b02      	ldr	r3, [sp, #8]
 801055a:	aa0e      	add	r2, sp, #56	; 0x38
 801055c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8010560:	930d      	str	r3, [sp, #52]	; 0x34
 8010562:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8010564:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8010568:	9c02      	ldr	r4, [sp, #8]
 801056a:	930c      	str	r3, [sp, #48]	; 0x30
 801056c:	00e3      	lsls	r3, r4, #3
 801056e:	930a      	str	r3, [sp, #40]	; 0x28
 8010570:	ab9a      	add	r3, sp, #616	; 0x268
 8010572:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8010576:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 801057a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 801057e:	ab72      	add	r3, sp, #456	; 0x1c8
 8010580:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 8010584:	46c3      	mov	fp, r8
 8010586:	46a1      	mov	r9, r4
 8010588:	f1b9 0f00 	cmp.w	r9, #0
 801058c:	f1a5 0508 	sub.w	r5, r5, #8
 8010590:	dc77      	bgt.n	8010682 <__kernel_rem_pio2+0x202>
 8010592:	ec47 6b10 	vmov	d0, r6, r7
 8010596:	4650      	mov	r0, sl
 8010598:	f000 fd4e 	bl	8011038 <scalbn>
 801059c:	ec57 6b10 	vmov	r6, r7, d0
 80105a0:	2200      	movs	r2, #0
 80105a2:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 80105a6:	ee10 0a10 	vmov	r0, s0
 80105aa:	4639      	mov	r1, r7
 80105ac:	f7f0 f844 	bl	8000638 <__aeabi_dmul>
 80105b0:	ec41 0b10 	vmov	d0, r0, r1
 80105b4:	f000 fcc0 	bl	8010f38 <floor>
 80105b8:	4b7c      	ldr	r3, [pc, #496]	; (80107ac <__kernel_rem_pio2+0x32c>)
 80105ba:	ec51 0b10 	vmov	r0, r1, d0
 80105be:	2200      	movs	r2, #0
 80105c0:	f7f0 f83a 	bl	8000638 <__aeabi_dmul>
 80105c4:	4602      	mov	r2, r0
 80105c6:	460b      	mov	r3, r1
 80105c8:	4630      	mov	r0, r6
 80105ca:	4639      	mov	r1, r7
 80105cc:	f7ef fe7c 	bl	80002c8 <__aeabi_dsub>
 80105d0:	460f      	mov	r7, r1
 80105d2:	4606      	mov	r6, r0
 80105d4:	f7f0 fae0 	bl	8000b98 <__aeabi_d2iz>
 80105d8:	9004      	str	r0, [sp, #16]
 80105da:	f7ef ffc3 	bl	8000564 <__aeabi_i2d>
 80105de:	4602      	mov	r2, r0
 80105e0:	460b      	mov	r3, r1
 80105e2:	4630      	mov	r0, r6
 80105e4:	4639      	mov	r1, r7
 80105e6:	f7ef fe6f 	bl	80002c8 <__aeabi_dsub>
 80105ea:	f1ba 0f00 	cmp.w	sl, #0
 80105ee:	4606      	mov	r6, r0
 80105f0:	460f      	mov	r7, r1
 80105f2:	dd6d      	ble.n	80106d0 <__kernel_rem_pio2+0x250>
 80105f4:	1e62      	subs	r2, r4, #1
 80105f6:	ab0e      	add	r3, sp, #56	; 0x38
 80105f8:	9d04      	ldr	r5, [sp, #16]
 80105fa:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80105fe:	f1ca 0118 	rsb	r1, sl, #24
 8010602:	fa40 f301 	asr.w	r3, r0, r1
 8010606:	441d      	add	r5, r3
 8010608:	408b      	lsls	r3, r1
 801060a:	1ac0      	subs	r0, r0, r3
 801060c:	ab0e      	add	r3, sp, #56	; 0x38
 801060e:	9504      	str	r5, [sp, #16]
 8010610:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 8010614:	f1ca 0317 	rsb	r3, sl, #23
 8010618:	fa40 fb03 	asr.w	fp, r0, r3
 801061c:	f1bb 0f00 	cmp.w	fp, #0
 8010620:	dd65      	ble.n	80106ee <__kernel_rem_pio2+0x26e>
 8010622:	9b04      	ldr	r3, [sp, #16]
 8010624:	2200      	movs	r2, #0
 8010626:	3301      	adds	r3, #1
 8010628:	9304      	str	r3, [sp, #16]
 801062a:	4615      	mov	r5, r2
 801062c:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 8010630:	4294      	cmp	r4, r2
 8010632:	f300 809c 	bgt.w	801076e <__kernel_rem_pio2+0x2ee>
 8010636:	f1ba 0f00 	cmp.w	sl, #0
 801063a:	dd07      	ble.n	801064c <__kernel_rem_pio2+0x1cc>
 801063c:	f1ba 0f01 	cmp.w	sl, #1
 8010640:	f000 80c0 	beq.w	80107c4 <__kernel_rem_pio2+0x344>
 8010644:	f1ba 0f02 	cmp.w	sl, #2
 8010648:	f000 80c6 	beq.w	80107d8 <__kernel_rem_pio2+0x358>
 801064c:	f1bb 0f02 	cmp.w	fp, #2
 8010650:	d14d      	bne.n	80106ee <__kernel_rem_pio2+0x26e>
 8010652:	4632      	mov	r2, r6
 8010654:	463b      	mov	r3, r7
 8010656:	4956      	ldr	r1, [pc, #344]	; (80107b0 <__kernel_rem_pio2+0x330>)
 8010658:	2000      	movs	r0, #0
 801065a:	f7ef fe35 	bl	80002c8 <__aeabi_dsub>
 801065e:	4606      	mov	r6, r0
 8010660:	460f      	mov	r7, r1
 8010662:	2d00      	cmp	r5, #0
 8010664:	d043      	beq.n	80106ee <__kernel_rem_pio2+0x26e>
 8010666:	4650      	mov	r0, sl
 8010668:	ed9f 0b4d 	vldr	d0, [pc, #308]	; 80107a0 <__kernel_rem_pio2+0x320>
 801066c:	f000 fce4 	bl	8011038 <scalbn>
 8010670:	4630      	mov	r0, r6
 8010672:	4639      	mov	r1, r7
 8010674:	ec53 2b10 	vmov	r2, r3, d0
 8010678:	f7ef fe26 	bl	80002c8 <__aeabi_dsub>
 801067c:	4606      	mov	r6, r0
 801067e:	460f      	mov	r7, r1
 8010680:	e035      	b.n	80106ee <__kernel_rem_pio2+0x26e>
 8010682:	4b4c      	ldr	r3, [pc, #304]	; (80107b4 <__kernel_rem_pio2+0x334>)
 8010684:	2200      	movs	r2, #0
 8010686:	4630      	mov	r0, r6
 8010688:	4639      	mov	r1, r7
 801068a:	f7ef ffd5 	bl	8000638 <__aeabi_dmul>
 801068e:	f7f0 fa83 	bl	8000b98 <__aeabi_d2iz>
 8010692:	f7ef ff67 	bl	8000564 <__aeabi_i2d>
 8010696:	4602      	mov	r2, r0
 8010698:	460b      	mov	r3, r1
 801069a:	ec43 2b18 	vmov	d8, r2, r3
 801069e:	4b46      	ldr	r3, [pc, #280]	; (80107b8 <__kernel_rem_pio2+0x338>)
 80106a0:	2200      	movs	r2, #0
 80106a2:	f7ef ffc9 	bl	8000638 <__aeabi_dmul>
 80106a6:	4602      	mov	r2, r0
 80106a8:	460b      	mov	r3, r1
 80106aa:	4630      	mov	r0, r6
 80106ac:	4639      	mov	r1, r7
 80106ae:	f7ef fe0b 	bl	80002c8 <__aeabi_dsub>
 80106b2:	f7f0 fa71 	bl	8000b98 <__aeabi_d2iz>
 80106b6:	e9d5 2300 	ldrd	r2, r3, [r5]
 80106ba:	f84b 0b04 	str.w	r0, [fp], #4
 80106be:	ec51 0b18 	vmov	r0, r1, d8
 80106c2:	f7ef fe03 	bl	80002cc <__adddf3>
 80106c6:	f109 39ff 	add.w	r9, r9, #4294967295
 80106ca:	4606      	mov	r6, r0
 80106cc:	460f      	mov	r7, r1
 80106ce:	e75b      	b.n	8010588 <__kernel_rem_pio2+0x108>
 80106d0:	d106      	bne.n	80106e0 <__kernel_rem_pio2+0x260>
 80106d2:	1e63      	subs	r3, r4, #1
 80106d4:	aa0e      	add	r2, sp, #56	; 0x38
 80106d6:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80106da:	ea4f 5be0 	mov.w	fp, r0, asr #23
 80106de:	e79d      	b.n	801061c <__kernel_rem_pio2+0x19c>
 80106e0:	4b36      	ldr	r3, [pc, #216]	; (80107bc <__kernel_rem_pio2+0x33c>)
 80106e2:	2200      	movs	r2, #0
 80106e4:	f7f0 fa2e 	bl	8000b44 <__aeabi_dcmpge>
 80106e8:	2800      	cmp	r0, #0
 80106ea:	d13d      	bne.n	8010768 <__kernel_rem_pio2+0x2e8>
 80106ec:	4683      	mov	fp, r0
 80106ee:	2200      	movs	r2, #0
 80106f0:	2300      	movs	r3, #0
 80106f2:	4630      	mov	r0, r6
 80106f4:	4639      	mov	r1, r7
 80106f6:	f7f0 fa07 	bl	8000b08 <__aeabi_dcmpeq>
 80106fa:	2800      	cmp	r0, #0
 80106fc:	f000 80c0 	beq.w	8010880 <__kernel_rem_pio2+0x400>
 8010700:	1e65      	subs	r5, r4, #1
 8010702:	462b      	mov	r3, r5
 8010704:	2200      	movs	r2, #0
 8010706:	9902      	ldr	r1, [sp, #8]
 8010708:	428b      	cmp	r3, r1
 801070a:	da6c      	bge.n	80107e6 <__kernel_rem_pio2+0x366>
 801070c:	2a00      	cmp	r2, #0
 801070e:	f000 8089 	beq.w	8010824 <__kernel_rem_pio2+0x3a4>
 8010712:	ab0e      	add	r3, sp, #56	; 0x38
 8010714:	f1aa 0a18 	sub.w	sl, sl, #24
 8010718:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 801071c:	2b00      	cmp	r3, #0
 801071e:	f000 80ad 	beq.w	801087c <__kernel_rem_pio2+0x3fc>
 8010722:	4650      	mov	r0, sl
 8010724:	ed9f 0b1e 	vldr	d0, [pc, #120]	; 80107a0 <__kernel_rem_pio2+0x320>
 8010728:	f000 fc86 	bl	8011038 <scalbn>
 801072c:	ab9a      	add	r3, sp, #616	; 0x268
 801072e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010732:	ec57 6b10 	vmov	r6, r7, d0
 8010736:	00ec      	lsls	r4, r5, #3
 8010738:	f1a3 0898 	sub.w	r8, r3, #152	; 0x98
 801073c:	46aa      	mov	sl, r5
 801073e:	f1ba 0f00 	cmp.w	sl, #0
 8010742:	f280 80d6 	bge.w	80108f2 <__kernel_rem_pio2+0x472>
 8010746:	ed9f 8b14 	vldr	d8, [pc, #80]	; 8010798 <__kernel_rem_pio2+0x318>
 801074a:	462e      	mov	r6, r5
 801074c:	2e00      	cmp	r6, #0
 801074e:	f2c0 8104 	blt.w	801095a <__kernel_rem_pio2+0x4da>
 8010752:	ab72      	add	r3, sp, #456	; 0x1c8
 8010754:	ed8d 8b06 	vstr	d8, [sp, #24]
 8010758:	f8df a064 	ldr.w	sl, [pc, #100]	; 80107c0 <__kernel_rem_pio2+0x340>
 801075c:	eb03 09c6 	add.w	r9, r3, r6, lsl #3
 8010760:	f04f 0800 	mov.w	r8, #0
 8010764:	1baf      	subs	r7, r5, r6
 8010766:	e0ea      	b.n	801093e <__kernel_rem_pio2+0x4be>
 8010768:	f04f 0b02 	mov.w	fp, #2
 801076c:	e759      	b.n	8010622 <__kernel_rem_pio2+0x1a2>
 801076e:	f8d8 3000 	ldr.w	r3, [r8]
 8010772:	b955      	cbnz	r5, 801078a <__kernel_rem_pio2+0x30a>
 8010774:	b123      	cbz	r3, 8010780 <__kernel_rem_pio2+0x300>
 8010776:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 801077a:	f8c8 3000 	str.w	r3, [r8]
 801077e:	2301      	movs	r3, #1
 8010780:	3201      	adds	r2, #1
 8010782:	f108 0804 	add.w	r8, r8, #4
 8010786:	461d      	mov	r5, r3
 8010788:	e752      	b.n	8010630 <__kernel_rem_pio2+0x1b0>
 801078a:	1acb      	subs	r3, r1, r3
 801078c:	f8c8 3000 	str.w	r3, [r8]
 8010790:	462b      	mov	r3, r5
 8010792:	e7f5      	b.n	8010780 <__kernel_rem_pio2+0x300>
 8010794:	f3af 8000 	nop.w
	...
 80107a4:	3ff00000 	.word	0x3ff00000
 80107a8:	080118a8 	.word	0x080118a8
 80107ac:	40200000 	.word	0x40200000
 80107b0:	3ff00000 	.word	0x3ff00000
 80107b4:	3e700000 	.word	0x3e700000
 80107b8:	41700000 	.word	0x41700000
 80107bc:	3fe00000 	.word	0x3fe00000
 80107c0:	08011868 	.word	0x08011868
 80107c4:	1e62      	subs	r2, r4, #1
 80107c6:	ab0e      	add	r3, sp, #56	; 0x38
 80107c8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80107cc:	f3c3 0316 	ubfx	r3, r3, #0, #23
 80107d0:	a90e      	add	r1, sp, #56	; 0x38
 80107d2:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 80107d6:	e739      	b.n	801064c <__kernel_rem_pio2+0x1cc>
 80107d8:	1e62      	subs	r2, r4, #1
 80107da:	ab0e      	add	r3, sp, #56	; 0x38
 80107dc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80107e0:	f3c3 0315 	ubfx	r3, r3, #0, #22
 80107e4:	e7f4      	b.n	80107d0 <__kernel_rem_pio2+0x350>
 80107e6:	a90e      	add	r1, sp, #56	; 0x38
 80107e8:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 80107ec:	3b01      	subs	r3, #1
 80107ee:	430a      	orrs	r2, r1
 80107f0:	e789      	b.n	8010706 <__kernel_rem_pio2+0x286>
 80107f2:	3301      	adds	r3, #1
 80107f4:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 80107f8:	2900      	cmp	r1, #0
 80107fa:	d0fa      	beq.n	80107f2 <__kernel_rem_pio2+0x372>
 80107fc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80107fe:	f502 721a 	add.w	r2, r2, #616	; 0x268
 8010802:	446a      	add	r2, sp
 8010804:	3a98      	subs	r2, #152	; 0x98
 8010806:	920a      	str	r2, [sp, #40]	; 0x28
 8010808:	9a08      	ldr	r2, [sp, #32]
 801080a:	18e3      	adds	r3, r4, r3
 801080c:	18a5      	adds	r5, r4, r2
 801080e:	aa22      	add	r2, sp, #136	; 0x88
 8010810:	f104 0801 	add.w	r8, r4, #1
 8010814:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 8010818:	9304      	str	r3, [sp, #16]
 801081a:	9b04      	ldr	r3, [sp, #16]
 801081c:	4543      	cmp	r3, r8
 801081e:	da04      	bge.n	801082a <__kernel_rem_pio2+0x3aa>
 8010820:	461c      	mov	r4, r3
 8010822:	e6a3      	b.n	801056c <__kernel_rem_pio2+0xec>
 8010824:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010826:	2301      	movs	r3, #1
 8010828:	e7e4      	b.n	80107f4 <__kernel_rem_pio2+0x374>
 801082a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801082c:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 8010830:	f7ef fe98 	bl	8000564 <__aeabi_i2d>
 8010834:	e8e5 0102 	strd	r0, r1, [r5], #8
 8010838:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801083a:	46ab      	mov	fp, r5
 801083c:	461c      	mov	r4, r3
 801083e:	f04f 0900 	mov.w	r9, #0
 8010842:	2600      	movs	r6, #0
 8010844:	2700      	movs	r7, #0
 8010846:	9b06      	ldr	r3, [sp, #24]
 8010848:	4599      	cmp	r9, r3
 801084a:	dd06      	ble.n	801085a <__kernel_rem_pio2+0x3da>
 801084c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801084e:	e8e3 6702 	strd	r6, r7, [r3], #8
 8010852:	f108 0801 	add.w	r8, r8, #1
 8010856:	930a      	str	r3, [sp, #40]	; 0x28
 8010858:	e7df      	b.n	801081a <__kernel_rem_pio2+0x39a>
 801085a:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 801085e:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 8010862:	f7ef fee9 	bl	8000638 <__aeabi_dmul>
 8010866:	4602      	mov	r2, r0
 8010868:	460b      	mov	r3, r1
 801086a:	4630      	mov	r0, r6
 801086c:	4639      	mov	r1, r7
 801086e:	f7ef fd2d 	bl	80002cc <__adddf3>
 8010872:	f109 0901 	add.w	r9, r9, #1
 8010876:	4606      	mov	r6, r0
 8010878:	460f      	mov	r7, r1
 801087a:	e7e4      	b.n	8010846 <__kernel_rem_pio2+0x3c6>
 801087c:	3d01      	subs	r5, #1
 801087e:	e748      	b.n	8010712 <__kernel_rem_pio2+0x292>
 8010880:	ec47 6b10 	vmov	d0, r6, r7
 8010884:	f1ca 0000 	rsb	r0, sl, #0
 8010888:	f000 fbd6 	bl	8011038 <scalbn>
 801088c:	ec57 6b10 	vmov	r6, r7, d0
 8010890:	4ba0      	ldr	r3, [pc, #640]	; (8010b14 <__kernel_rem_pio2+0x694>)
 8010892:	ee10 0a10 	vmov	r0, s0
 8010896:	2200      	movs	r2, #0
 8010898:	4639      	mov	r1, r7
 801089a:	f7f0 f953 	bl	8000b44 <__aeabi_dcmpge>
 801089e:	b1f8      	cbz	r0, 80108e0 <__kernel_rem_pio2+0x460>
 80108a0:	4b9d      	ldr	r3, [pc, #628]	; (8010b18 <__kernel_rem_pio2+0x698>)
 80108a2:	2200      	movs	r2, #0
 80108a4:	4630      	mov	r0, r6
 80108a6:	4639      	mov	r1, r7
 80108a8:	f7ef fec6 	bl	8000638 <__aeabi_dmul>
 80108ac:	f7f0 f974 	bl	8000b98 <__aeabi_d2iz>
 80108b0:	4680      	mov	r8, r0
 80108b2:	f7ef fe57 	bl	8000564 <__aeabi_i2d>
 80108b6:	4b97      	ldr	r3, [pc, #604]	; (8010b14 <__kernel_rem_pio2+0x694>)
 80108b8:	2200      	movs	r2, #0
 80108ba:	f7ef febd 	bl	8000638 <__aeabi_dmul>
 80108be:	460b      	mov	r3, r1
 80108c0:	4602      	mov	r2, r0
 80108c2:	4639      	mov	r1, r7
 80108c4:	4630      	mov	r0, r6
 80108c6:	f7ef fcff 	bl	80002c8 <__aeabi_dsub>
 80108ca:	f7f0 f965 	bl	8000b98 <__aeabi_d2iz>
 80108ce:	1c65      	adds	r5, r4, #1
 80108d0:	ab0e      	add	r3, sp, #56	; 0x38
 80108d2:	f10a 0a18 	add.w	sl, sl, #24
 80108d6:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 80108da:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 80108de:	e720      	b.n	8010722 <__kernel_rem_pio2+0x2a2>
 80108e0:	4630      	mov	r0, r6
 80108e2:	4639      	mov	r1, r7
 80108e4:	f7f0 f958 	bl	8000b98 <__aeabi_d2iz>
 80108e8:	ab0e      	add	r3, sp, #56	; 0x38
 80108ea:	4625      	mov	r5, r4
 80108ec:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 80108f0:	e717      	b.n	8010722 <__kernel_rem_pio2+0x2a2>
 80108f2:	ab0e      	add	r3, sp, #56	; 0x38
 80108f4:	f853 002a 	ldr.w	r0, [r3, sl, lsl #2]
 80108f8:	f7ef fe34 	bl	8000564 <__aeabi_i2d>
 80108fc:	4632      	mov	r2, r6
 80108fe:	463b      	mov	r3, r7
 8010900:	f7ef fe9a 	bl	8000638 <__aeabi_dmul>
 8010904:	4b84      	ldr	r3, [pc, #528]	; (8010b18 <__kernel_rem_pio2+0x698>)
 8010906:	e968 0102 	strd	r0, r1, [r8, #-8]!
 801090a:	2200      	movs	r2, #0
 801090c:	4630      	mov	r0, r6
 801090e:	4639      	mov	r1, r7
 8010910:	f7ef fe92 	bl	8000638 <__aeabi_dmul>
 8010914:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010918:	4606      	mov	r6, r0
 801091a:	460f      	mov	r7, r1
 801091c:	e70f      	b.n	801073e <__kernel_rem_pio2+0x2be>
 801091e:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 8010922:	e8fa 0102 	ldrd	r0, r1, [sl], #8
 8010926:	f7ef fe87 	bl	8000638 <__aeabi_dmul>
 801092a:	4602      	mov	r2, r0
 801092c:	460b      	mov	r3, r1
 801092e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8010932:	f7ef fccb 	bl	80002cc <__adddf3>
 8010936:	e9cd 0106 	strd	r0, r1, [sp, #24]
 801093a:	f108 0801 	add.w	r8, r8, #1
 801093e:	9b02      	ldr	r3, [sp, #8]
 8010940:	4598      	cmp	r8, r3
 8010942:	dc01      	bgt.n	8010948 <__kernel_rem_pio2+0x4c8>
 8010944:	45b8      	cmp	r8, r7
 8010946:	ddea      	ble.n	801091e <__kernel_rem_pio2+0x49e>
 8010948:	ed9d 7b06 	vldr	d7, [sp, #24]
 801094c:	ab4a      	add	r3, sp, #296	; 0x128
 801094e:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 8010952:	ed87 7b00 	vstr	d7, [r7]
 8010956:	3e01      	subs	r6, #1
 8010958:	e6f8      	b.n	801074c <__kernel_rem_pio2+0x2cc>
 801095a:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 801095c:	2b02      	cmp	r3, #2
 801095e:	dc0b      	bgt.n	8010978 <__kernel_rem_pio2+0x4f8>
 8010960:	2b00      	cmp	r3, #0
 8010962:	dc35      	bgt.n	80109d0 <__kernel_rem_pio2+0x550>
 8010964:	d059      	beq.n	8010a1a <__kernel_rem_pio2+0x59a>
 8010966:	9b04      	ldr	r3, [sp, #16]
 8010968:	f003 0007 	and.w	r0, r3, #7
 801096c:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
 8010970:	ecbd 8b02 	vpop	{d8}
 8010974:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010978:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 801097a:	2b03      	cmp	r3, #3
 801097c:	d1f3      	bne.n	8010966 <__kernel_rem_pio2+0x4e6>
 801097e:	ab4a      	add	r3, sp, #296	; 0x128
 8010980:	4423      	add	r3, r4
 8010982:	9306      	str	r3, [sp, #24]
 8010984:	461c      	mov	r4, r3
 8010986:	469a      	mov	sl, r3
 8010988:	9502      	str	r5, [sp, #8]
 801098a:	9b02      	ldr	r3, [sp, #8]
 801098c:	2b00      	cmp	r3, #0
 801098e:	f1aa 0a08 	sub.w	sl, sl, #8
 8010992:	dc6b      	bgt.n	8010a6c <__kernel_rem_pio2+0x5ec>
 8010994:	46aa      	mov	sl, r5
 8010996:	f1ba 0f01 	cmp.w	sl, #1
 801099a:	f1a4 0408 	sub.w	r4, r4, #8
 801099e:	f300 8085 	bgt.w	8010aac <__kernel_rem_pio2+0x62c>
 80109a2:	9c06      	ldr	r4, [sp, #24]
 80109a4:	2000      	movs	r0, #0
 80109a6:	3408      	adds	r4, #8
 80109a8:	2100      	movs	r1, #0
 80109aa:	2d01      	cmp	r5, #1
 80109ac:	f300 809d 	bgt.w	8010aea <__kernel_rem_pio2+0x66a>
 80109b0:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	; 0x128
 80109b4:	e9dd 784c 	ldrd	r7, r8, [sp, #304]	; 0x130
 80109b8:	f1bb 0f00 	cmp.w	fp, #0
 80109bc:	f040 809b 	bne.w	8010af6 <__kernel_rem_pio2+0x676>
 80109c0:	9b01      	ldr	r3, [sp, #4]
 80109c2:	e9c3 5600 	strd	r5, r6, [r3]
 80109c6:	e9c3 7802 	strd	r7, r8, [r3, #8]
 80109ca:	e9c3 0104 	strd	r0, r1, [r3, #16]
 80109ce:	e7ca      	b.n	8010966 <__kernel_rem_pio2+0x4e6>
 80109d0:	3408      	adds	r4, #8
 80109d2:	ab4a      	add	r3, sp, #296	; 0x128
 80109d4:	441c      	add	r4, r3
 80109d6:	462e      	mov	r6, r5
 80109d8:	2000      	movs	r0, #0
 80109da:	2100      	movs	r1, #0
 80109dc:	2e00      	cmp	r6, #0
 80109de:	da36      	bge.n	8010a4e <__kernel_rem_pio2+0x5ce>
 80109e0:	f1bb 0f00 	cmp.w	fp, #0
 80109e4:	d039      	beq.n	8010a5a <__kernel_rem_pio2+0x5da>
 80109e6:	4602      	mov	r2, r0
 80109e8:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80109ec:	9c01      	ldr	r4, [sp, #4]
 80109ee:	e9c4 2300 	strd	r2, r3, [r4]
 80109f2:	4602      	mov	r2, r0
 80109f4:	460b      	mov	r3, r1
 80109f6:	e9dd 014a 	ldrd	r0, r1, [sp, #296]	; 0x128
 80109fa:	f7ef fc65 	bl	80002c8 <__aeabi_dsub>
 80109fe:	ae4c      	add	r6, sp, #304	; 0x130
 8010a00:	2401      	movs	r4, #1
 8010a02:	42a5      	cmp	r5, r4
 8010a04:	da2c      	bge.n	8010a60 <__kernel_rem_pio2+0x5e0>
 8010a06:	f1bb 0f00 	cmp.w	fp, #0
 8010a0a:	d002      	beq.n	8010a12 <__kernel_rem_pio2+0x592>
 8010a0c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010a10:	4619      	mov	r1, r3
 8010a12:	9b01      	ldr	r3, [sp, #4]
 8010a14:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8010a18:	e7a5      	b.n	8010966 <__kernel_rem_pio2+0x4e6>
 8010a1a:	f504 731a 	add.w	r3, r4, #616	; 0x268
 8010a1e:	eb0d 0403 	add.w	r4, sp, r3
 8010a22:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
 8010a26:	2000      	movs	r0, #0
 8010a28:	2100      	movs	r1, #0
 8010a2a:	2d00      	cmp	r5, #0
 8010a2c:	da09      	bge.n	8010a42 <__kernel_rem_pio2+0x5c2>
 8010a2e:	f1bb 0f00 	cmp.w	fp, #0
 8010a32:	d002      	beq.n	8010a3a <__kernel_rem_pio2+0x5ba>
 8010a34:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010a38:	4619      	mov	r1, r3
 8010a3a:	9b01      	ldr	r3, [sp, #4]
 8010a3c:	e9c3 0100 	strd	r0, r1, [r3]
 8010a40:	e791      	b.n	8010966 <__kernel_rem_pio2+0x4e6>
 8010a42:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8010a46:	f7ef fc41 	bl	80002cc <__adddf3>
 8010a4a:	3d01      	subs	r5, #1
 8010a4c:	e7ed      	b.n	8010a2a <__kernel_rem_pio2+0x5aa>
 8010a4e:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8010a52:	f7ef fc3b 	bl	80002cc <__adddf3>
 8010a56:	3e01      	subs	r6, #1
 8010a58:	e7c0      	b.n	80109dc <__kernel_rem_pio2+0x55c>
 8010a5a:	4602      	mov	r2, r0
 8010a5c:	460b      	mov	r3, r1
 8010a5e:	e7c5      	b.n	80109ec <__kernel_rem_pio2+0x56c>
 8010a60:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 8010a64:	f7ef fc32 	bl	80002cc <__adddf3>
 8010a68:	3401      	adds	r4, #1
 8010a6a:	e7ca      	b.n	8010a02 <__kernel_rem_pio2+0x582>
 8010a6c:	e9da 8900 	ldrd	r8, r9, [sl]
 8010a70:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 8010a74:	9b02      	ldr	r3, [sp, #8]
 8010a76:	3b01      	subs	r3, #1
 8010a78:	9302      	str	r3, [sp, #8]
 8010a7a:	4632      	mov	r2, r6
 8010a7c:	463b      	mov	r3, r7
 8010a7e:	4640      	mov	r0, r8
 8010a80:	4649      	mov	r1, r9
 8010a82:	f7ef fc23 	bl	80002cc <__adddf3>
 8010a86:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8010a8a:	4602      	mov	r2, r0
 8010a8c:	460b      	mov	r3, r1
 8010a8e:	4640      	mov	r0, r8
 8010a90:	4649      	mov	r1, r9
 8010a92:	f7ef fc19 	bl	80002c8 <__aeabi_dsub>
 8010a96:	4632      	mov	r2, r6
 8010a98:	463b      	mov	r3, r7
 8010a9a:	f7ef fc17 	bl	80002cc <__adddf3>
 8010a9e:	ed9d 7b08 	vldr	d7, [sp, #32]
 8010aa2:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8010aa6:	ed8a 7b00 	vstr	d7, [sl]
 8010aaa:	e76e      	b.n	801098a <__kernel_rem_pio2+0x50a>
 8010aac:	e9d4 8900 	ldrd	r8, r9, [r4]
 8010ab0:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
 8010ab4:	4640      	mov	r0, r8
 8010ab6:	4632      	mov	r2, r6
 8010ab8:	463b      	mov	r3, r7
 8010aba:	4649      	mov	r1, r9
 8010abc:	f7ef fc06 	bl	80002cc <__adddf3>
 8010ac0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8010ac4:	4602      	mov	r2, r0
 8010ac6:	460b      	mov	r3, r1
 8010ac8:	4640      	mov	r0, r8
 8010aca:	4649      	mov	r1, r9
 8010acc:	f7ef fbfc 	bl	80002c8 <__aeabi_dsub>
 8010ad0:	4632      	mov	r2, r6
 8010ad2:	463b      	mov	r3, r7
 8010ad4:	f7ef fbfa 	bl	80002cc <__adddf3>
 8010ad8:	ed9d 7b02 	vldr	d7, [sp, #8]
 8010adc:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8010ae0:	ed84 7b00 	vstr	d7, [r4]
 8010ae4:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010ae8:	e755      	b.n	8010996 <__kernel_rem_pio2+0x516>
 8010aea:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8010aee:	f7ef fbed 	bl	80002cc <__adddf3>
 8010af2:	3d01      	subs	r5, #1
 8010af4:	e759      	b.n	80109aa <__kernel_rem_pio2+0x52a>
 8010af6:	9b01      	ldr	r3, [sp, #4]
 8010af8:	9a01      	ldr	r2, [sp, #4]
 8010afa:	601d      	str	r5, [r3, #0]
 8010afc:	f106 4400 	add.w	r4, r6, #2147483648	; 0x80000000
 8010b00:	605c      	str	r4, [r3, #4]
 8010b02:	609f      	str	r7, [r3, #8]
 8010b04:	f108 4300 	add.w	r3, r8, #2147483648	; 0x80000000
 8010b08:	60d3      	str	r3, [r2, #12]
 8010b0a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010b0e:	6110      	str	r0, [r2, #16]
 8010b10:	6153      	str	r3, [r2, #20]
 8010b12:	e728      	b.n	8010966 <__kernel_rem_pio2+0x4e6>
 8010b14:	41700000 	.word	0x41700000
 8010b18:	3e700000 	.word	0x3e700000
 8010b1c:	00000000 	.word	0x00000000

08010b20 <__kernel_tan>:
 8010b20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b24:	ed2d 8b06 	vpush	{d8-d10}
 8010b28:	ec5b ab10 	vmov	sl, fp, d0
 8010b2c:	4be0      	ldr	r3, [pc, #896]	; (8010eb0 <__kernel_tan+0x390>)
 8010b2e:	b083      	sub	sp, #12
 8010b30:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
 8010b34:	429f      	cmp	r7, r3
 8010b36:	ec59 8b11 	vmov	r8, r9, d1
 8010b3a:	4606      	mov	r6, r0
 8010b3c:	f8cd b000 	str.w	fp, [sp]
 8010b40:	dc61      	bgt.n	8010c06 <__kernel_tan+0xe6>
 8010b42:	ee10 0a10 	vmov	r0, s0
 8010b46:	4659      	mov	r1, fp
 8010b48:	f7f0 f826 	bl	8000b98 <__aeabi_d2iz>
 8010b4c:	4605      	mov	r5, r0
 8010b4e:	2800      	cmp	r0, #0
 8010b50:	f040 8083 	bne.w	8010c5a <__kernel_tan+0x13a>
 8010b54:	1c73      	adds	r3, r6, #1
 8010b56:	4652      	mov	r2, sl
 8010b58:	4313      	orrs	r3, r2
 8010b5a:	433b      	orrs	r3, r7
 8010b5c:	d112      	bne.n	8010b84 <__kernel_tan+0x64>
 8010b5e:	ec4b ab10 	vmov	d0, sl, fp
 8010b62:	f7ff fa41 	bl	800ffe8 <fabs>
 8010b66:	49d3      	ldr	r1, [pc, #844]	; (8010eb4 <__kernel_tan+0x394>)
 8010b68:	ec53 2b10 	vmov	r2, r3, d0
 8010b6c:	2000      	movs	r0, #0
 8010b6e:	f7ef fe8d 	bl	800088c <__aeabi_ddiv>
 8010b72:	4682      	mov	sl, r0
 8010b74:	468b      	mov	fp, r1
 8010b76:	ec4b ab10 	vmov	d0, sl, fp
 8010b7a:	b003      	add	sp, #12
 8010b7c:	ecbd 8b06 	vpop	{d8-d10}
 8010b80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b84:	2e01      	cmp	r6, #1
 8010b86:	d0f6      	beq.n	8010b76 <__kernel_tan+0x56>
 8010b88:	4642      	mov	r2, r8
 8010b8a:	464b      	mov	r3, r9
 8010b8c:	4650      	mov	r0, sl
 8010b8e:	4659      	mov	r1, fp
 8010b90:	f7ef fb9c 	bl	80002cc <__adddf3>
 8010b94:	4602      	mov	r2, r0
 8010b96:	460b      	mov	r3, r1
 8010b98:	460f      	mov	r7, r1
 8010b9a:	2000      	movs	r0, #0
 8010b9c:	49c6      	ldr	r1, [pc, #792]	; (8010eb8 <__kernel_tan+0x398>)
 8010b9e:	f7ef fe75 	bl	800088c <__aeabi_ddiv>
 8010ba2:	e9cd 0100 	strd	r0, r1, [sp]
 8010ba6:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010baa:	462e      	mov	r6, r5
 8010bac:	4652      	mov	r2, sl
 8010bae:	462c      	mov	r4, r5
 8010bb0:	4630      	mov	r0, r6
 8010bb2:	461d      	mov	r5, r3
 8010bb4:	4639      	mov	r1, r7
 8010bb6:	465b      	mov	r3, fp
 8010bb8:	f7ef fb86 	bl	80002c8 <__aeabi_dsub>
 8010bbc:	4602      	mov	r2, r0
 8010bbe:	460b      	mov	r3, r1
 8010bc0:	4640      	mov	r0, r8
 8010bc2:	4649      	mov	r1, r9
 8010bc4:	f7ef fb80 	bl	80002c8 <__aeabi_dsub>
 8010bc8:	4632      	mov	r2, r6
 8010bca:	462b      	mov	r3, r5
 8010bcc:	f7ef fd34 	bl	8000638 <__aeabi_dmul>
 8010bd0:	4632      	mov	r2, r6
 8010bd2:	4680      	mov	r8, r0
 8010bd4:	4689      	mov	r9, r1
 8010bd6:	462b      	mov	r3, r5
 8010bd8:	4630      	mov	r0, r6
 8010bda:	4639      	mov	r1, r7
 8010bdc:	f7ef fd2c 	bl	8000638 <__aeabi_dmul>
 8010be0:	4bb4      	ldr	r3, [pc, #720]	; (8010eb4 <__kernel_tan+0x394>)
 8010be2:	2200      	movs	r2, #0
 8010be4:	f7ef fb72 	bl	80002cc <__adddf3>
 8010be8:	4602      	mov	r2, r0
 8010bea:	460b      	mov	r3, r1
 8010bec:	4640      	mov	r0, r8
 8010bee:	4649      	mov	r1, r9
 8010bf0:	f7ef fb6c 	bl	80002cc <__adddf3>
 8010bf4:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010bf8:	f7ef fd1e 	bl	8000638 <__aeabi_dmul>
 8010bfc:	4622      	mov	r2, r4
 8010bfe:	462b      	mov	r3, r5
 8010c00:	f7ef fb64 	bl	80002cc <__adddf3>
 8010c04:	e7b5      	b.n	8010b72 <__kernel_tan+0x52>
 8010c06:	4bad      	ldr	r3, [pc, #692]	; (8010ebc <__kernel_tan+0x39c>)
 8010c08:	429f      	cmp	r7, r3
 8010c0a:	dd26      	ble.n	8010c5a <__kernel_tan+0x13a>
 8010c0c:	9b00      	ldr	r3, [sp, #0]
 8010c0e:	2b00      	cmp	r3, #0
 8010c10:	da09      	bge.n	8010c26 <__kernel_tan+0x106>
 8010c12:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 8010c16:	469b      	mov	fp, r3
 8010c18:	ee10 aa10 	vmov	sl, s0
 8010c1c:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8010c20:	ee11 8a10 	vmov	r8, s2
 8010c24:	4699      	mov	r9, r3
 8010c26:	4652      	mov	r2, sl
 8010c28:	465b      	mov	r3, fp
 8010c2a:	a183      	add	r1, pc, #524	; (adr r1, 8010e38 <__kernel_tan+0x318>)
 8010c2c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8010c30:	f7ef fb4a 	bl	80002c8 <__aeabi_dsub>
 8010c34:	4642      	mov	r2, r8
 8010c36:	464b      	mov	r3, r9
 8010c38:	4604      	mov	r4, r0
 8010c3a:	460d      	mov	r5, r1
 8010c3c:	a180      	add	r1, pc, #512	; (adr r1, 8010e40 <__kernel_tan+0x320>)
 8010c3e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8010c42:	f7ef fb41 	bl	80002c8 <__aeabi_dsub>
 8010c46:	4622      	mov	r2, r4
 8010c48:	462b      	mov	r3, r5
 8010c4a:	f7ef fb3f 	bl	80002cc <__adddf3>
 8010c4e:	f04f 0800 	mov.w	r8, #0
 8010c52:	4682      	mov	sl, r0
 8010c54:	468b      	mov	fp, r1
 8010c56:	f04f 0900 	mov.w	r9, #0
 8010c5a:	4652      	mov	r2, sl
 8010c5c:	465b      	mov	r3, fp
 8010c5e:	4650      	mov	r0, sl
 8010c60:	4659      	mov	r1, fp
 8010c62:	f7ef fce9 	bl	8000638 <__aeabi_dmul>
 8010c66:	4602      	mov	r2, r0
 8010c68:	460b      	mov	r3, r1
 8010c6a:	ec43 2b18 	vmov	d8, r2, r3
 8010c6e:	f7ef fce3 	bl	8000638 <__aeabi_dmul>
 8010c72:	ec53 2b18 	vmov	r2, r3, d8
 8010c76:	4604      	mov	r4, r0
 8010c78:	460d      	mov	r5, r1
 8010c7a:	4650      	mov	r0, sl
 8010c7c:	4659      	mov	r1, fp
 8010c7e:	f7ef fcdb 	bl	8000638 <__aeabi_dmul>
 8010c82:	a371      	add	r3, pc, #452	; (adr r3, 8010e48 <__kernel_tan+0x328>)
 8010c84:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010c88:	ec41 0b19 	vmov	d9, r0, r1
 8010c8c:	4620      	mov	r0, r4
 8010c8e:	4629      	mov	r1, r5
 8010c90:	f7ef fcd2 	bl	8000638 <__aeabi_dmul>
 8010c94:	a36e      	add	r3, pc, #440	; (adr r3, 8010e50 <__kernel_tan+0x330>)
 8010c96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010c9a:	f7ef fb17 	bl	80002cc <__adddf3>
 8010c9e:	4622      	mov	r2, r4
 8010ca0:	462b      	mov	r3, r5
 8010ca2:	f7ef fcc9 	bl	8000638 <__aeabi_dmul>
 8010ca6:	a36c      	add	r3, pc, #432	; (adr r3, 8010e58 <__kernel_tan+0x338>)
 8010ca8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010cac:	f7ef fb0e 	bl	80002cc <__adddf3>
 8010cb0:	4622      	mov	r2, r4
 8010cb2:	462b      	mov	r3, r5
 8010cb4:	f7ef fcc0 	bl	8000638 <__aeabi_dmul>
 8010cb8:	a369      	add	r3, pc, #420	; (adr r3, 8010e60 <__kernel_tan+0x340>)
 8010cba:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010cbe:	f7ef fb05 	bl	80002cc <__adddf3>
 8010cc2:	4622      	mov	r2, r4
 8010cc4:	462b      	mov	r3, r5
 8010cc6:	f7ef fcb7 	bl	8000638 <__aeabi_dmul>
 8010cca:	a367      	add	r3, pc, #412	; (adr r3, 8010e68 <__kernel_tan+0x348>)
 8010ccc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010cd0:	f7ef fafc 	bl	80002cc <__adddf3>
 8010cd4:	4622      	mov	r2, r4
 8010cd6:	462b      	mov	r3, r5
 8010cd8:	f7ef fcae 	bl	8000638 <__aeabi_dmul>
 8010cdc:	a364      	add	r3, pc, #400	; (adr r3, 8010e70 <__kernel_tan+0x350>)
 8010cde:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010ce2:	f7ef faf3 	bl	80002cc <__adddf3>
 8010ce6:	ec53 2b18 	vmov	r2, r3, d8
 8010cea:	f7ef fca5 	bl	8000638 <__aeabi_dmul>
 8010cee:	a362      	add	r3, pc, #392	; (adr r3, 8010e78 <__kernel_tan+0x358>)
 8010cf0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010cf4:	ec41 0b1a 	vmov	d10, r0, r1
 8010cf8:	4620      	mov	r0, r4
 8010cfa:	4629      	mov	r1, r5
 8010cfc:	f7ef fc9c 	bl	8000638 <__aeabi_dmul>
 8010d00:	a35f      	add	r3, pc, #380	; (adr r3, 8010e80 <__kernel_tan+0x360>)
 8010d02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010d06:	f7ef fae1 	bl	80002cc <__adddf3>
 8010d0a:	4622      	mov	r2, r4
 8010d0c:	462b      	mov	r3, r5
 8010d0e:	f7ef fc93 	bl	8000638 <__aeabi_dmul>
 8010d12:	a35d      	add	r3, pc, #372	; (adr r3, 8010e88 <__kernel_tan+0x368>)
 8010d14:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010d18:	f7ef fad8 	bl	80002cc <__adddf3>
 8010d1c:	4622      	mov	r2, r4
 8010d1e:	462b      	mov	r3, r5
 8010d20:	f7ef fc8a 	bl	8000638 <__aeabi_dmul>
 8010d24:	a35a      	add	r3, pc, #360	; (adr r3, 8010e90 <__kernel_tan+0x370>)
 8010d26:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010d2a:	f7ef facf 	bl	80002cc <__adddf3>
 8010d2e:	4622      	mov	r2, r4
 8010d30:	462b      	mov	r3, r5
 8010d32:	f7ef fc81 	bl	8000638 <__aeabi_dmul>
 8010d36:	a358      	add	r3, pc, #352	; (adr r3, 8010e98 <__kernel_tan+0x378>)
 8010d38:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010d3c:	f7ef fac6 	bl	80002cc <__adddf3>
 8010d40:	4622      	mov	r2, r4
 8010d42:	462b      	mov	r3, r5
 8010d44:	f7ef fc78 	bl	8000638 <__aeabi_dmul>
 8010d48:	a355      	add	r3, pc, #340	; (adr r3, 8010ea0 <__kernel_tan+0x380>)
 8010d4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010d4e:	f7ef fabd 	bl	80002cc <__adddf3>
 8010d52:	4602      	mov	r2, r0
 8010d54:	460b      	mov	r3, r1
 8010d56:	ec51 0b1a 	vmov	r0, r1, d10
 8010d5a:	f7ef fab7 	bl	80002cc <__adddf3>
 8010d5e:	ec53 2b19 	vmov	r2, r3, d9
 8010d62:	f7ef fc69 	bl	8000638 <__aeabi_dmul>
 8010d66:	4642      	mov	r2, r8
 8010d68:	464b      	mov	r3, r9
 8010d6a:	f7ef faaf 	bl	80002cc <__adddf3>
 8010d6e:	ec53 2b18 	vmov	r2, r3, d8
 8010d72:	f7ef fc61 	bl	8000638 <__aeabi_dmul>
 8010d76:	4642      	mov	r2, r8
 8010d78:	464b      	mov	r3, r9
 8010d7a:	f7ef faa7 	bl	80002cc <__adddf3>
 8010d7e:	a34a      	add	r3, pc, #296	; (adr r3, 8010ea8 <__kernel_tan+0x388>)
 8010d80:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010d84:	4604      	mov	r4, r0
 8010d86:	460d      	mov	r5, r1
 8010d88:	ec51 0b19 	vmov	r0, r1, d9
 8010d8c:	f7ef fc54 	bl	8000638 <__aeabi_dmul>
 8010d90:	4622      	mov	r2, r4
 8010d92:	462b      	mov	r3, r5
 8010d94:	f7ef fa9a 	bl	80002cc <__adddf3>
 8010d98:	460b      	mov	r3, r1
 8010d9a:	ec41 0b18 	vmov	d8, r0, r1
 8010d9e:	4602      	mov	r2, r0
 8010da0:	4659      	mov	r1, fp
 8010da2:	4650      	mov	r0, sl
 8010da4:	f7ef fa92 	bl	80002cc <__adddf3>
 8010da8:	4b44      	ldr	r3, [pc, #272]	; (8010ebc <__kernel_tan+0x39c>)
 8010daa:	429f      	cmp	r7, r3
 8010dac:	4604      	mov	r4, r0
 8010dae:	460d      	mov	r5, r1
 8010db0:	f340 8086 	ble.w	8010ec0 <__kernel_tan+0x3a0>
 8010db4:	4630      	mov	r0, r6
 8010db6:	f7ef fbd5 	bl	8000564 <__aeabi_i2d>
 8010dba:	4622      	mov	r2, r4
 8010dbc:	4680      	mov	r8, r0
 8010dbe:	4689      	mov	r9, r1
 8010dc0:	462b      	mov	r3, r5
 8010dc2:	4620      	mov	r0, r4
 8010dc4:	4629      	mov	r1, r5
 8010dc6:	f7ef fc37 	bl	8000638 <__aeabi_dmul>
 8010dca:	4642      	mov	r2, r8
 8010dcc:	4606      	mov	r6, r0
 8010dce:	460f      	mov	r7, r1
 8010dd0:	464b      	mov	r3, r9
 8010dd2:	4620      	mov	r0, r4
 8010dd4:	4629      	mov	r1, r5
 8010dd6:	f7ef fa79 	bl	80002cc <__adddf3>
 8010dda:	4602      	mov	r2, r0
 8010ddc:	460b      	mov	r3, r1
 8010dde:	4630      	mov	r0, r6
 8010de0:	4639      	mov	r1, r7
 8010de2:	f7ef fd53 	bl	800088c <__aeabi_ddiv>
 8010de6:	ec53 2b18 	vmov	r2, r3, d8
 8010dea:	f7ef fa6d 	bl	80002c8 <__aeabi_dsub>
 8010dee:	4602      	mov	r2, r0
 8010df0:	460b      	mov	r3, r1
 8010df2:	4650      	mov	r0, sl
 8010df4:	4659      	mov	r1, fp
 8010df6:	f7ef fa67 	bl	80002c8 <__aeabi_dsub>
 8010dfa:	4602      	mov	r2, r0
 8010dfc:	460b      	mov	r3, r1
 8010dfe:	f7ef fa65 	bl	80002cc <__adddf3>
 8010e02:	4602      	mov	r2, r0
 8010e04:	460b      	mov	r3, r1
 8010e06:	4640      	mov	r0, r8
 8010e08:	4649      	mov	r1, r9
 8010e0a:	f7ef fa5d 	bl	80002c8 <__aeabi_dsub>
 8010e0e:	9b00      	ldr	r3, [sp, #0]
 8010e10:	ea4f 7aa3 	mov.w	sl, r3, asr #30
 8010e14:	f00a 0a02 	and.w	sl, sl, #2
 8010e18:	4604      	mov	r4, r0
 8010e1a:	f1ca 0001 	rsb	r0, sl, #1
 8010e1e:	460d      	mov	r5, r1
 8010e20:	f7ef fba0 	bl	8000564 <__aeabi_i2d>
 8010e24:	4602      	mov	r2, r0
 8010e26:	460b      	mov	r3, r1
 8010e28:	4620      	mov	r0, r4
 8010e2a:	4629      	mov	r1, r5
 8010e2c:	f7ef fc04 	bl	8000638 <__aeabi_dmul>
 8010e30:	e69f      	b.n	8010b72 <__kernel_tan+0x52>
 8010e32:	bf00      	nop
 8010e34:	f3af 8000 	nop.w
 8010e38:	54442d18 	.word	0x54442d18
 8010e3c:	3fe921fb 	.word	0x3fe921fb
 8010e40:	33145c07 	.word	0x33145c07
 8010e44:	3c81a626 	.word	0x3c81a626
 8010e48:	74bf7ad4 	.word	0x74bf7ad4
 8010e4c:	3efb2a70 	.word	0x3efb2a70
 8010e50:	32f0a7e9 	.word	0x32f0a7e9
 8010e54:	3f12b80f 	.word	0x3f12b80f
 8010e58:	1a8d1068 	.word	0x1a8d1068
 8010e5c:	3f3026f7 	.word	0x3f3026f7
 8010e60:	fee08315 	.word	0xfee08315
 8010e64:	3f57dbc8 	.word	0x3f57dbc8
 8010e68:	e96e8493 	.word	0xe96e8493
 8010e6c:	3f8226e3 	.word	0x3f8226e3
 8010e70:	1bb341fe 	.word	0x1bb341fe
 8010e74:	3faba1ba 	.word	0x3faba1ba
 8010e78:	db605373 	.word	0xdb605373
 8010e7c:	bef375cb 	.word	0xbef375cb
 8010e80:	a03792a6 	.word	0xa03792a6
 8010e84:	3f147e88 	.word	0x3f147e88
 8010e88:	f2f26501 	.word	0xf2f26501
 8010e8c:	3f4344d8 	.word	0x3f4344d8
 8010e90:	c9560328 	.word	0xc9560328
 8010e94:	3f6d6d22 	.word	0x3f6d6d22
 8010e98:	8406d637 	.word	0x8406d637
 8010e9c:	3f9664f4 	.word	0x3f9664f4
 8010ea0:	1110fe7a 	.word	0x1110fe7a
 8010ea4:	3fc11111 	.word	0x3fc11111
 8010ea8:	55555563 	.word	0x55555563
 8010eac:	3fd55555 	.word	0x3fd55555
 8010eb0:	3e2fffff 	.word	0x3e2fffff
 8010eb4:	3ff00000 	.word	0x3ff00000
 8010eb8:	bff00000 	.word	0xbff00000
 8010ebc:	3fe59427 	.word	0x3fe59427
 8010ec0:	2e01      	cmp	r6, #1
 8010ec2:	d02f      	beq.n	8010f24 <__kernel_tan+0x404>
 8010ec4:	460f      	mov	r7, r1
 8010ec6:	4602      	mov	r2, r0
 8010ec8:	460b      	mov	r3, r1
 8010eca:	4689      	mov	r9, r1
 8010ecc:	2000      	movs	r0, #0
 8010ece:	4917      	ldr	r1, [pc, #92]	; (8010f2c <__kernel_tan+0x40c>)
 8010ed0:	f7ef fcdc 	bl	800088c <__aeabi_ddiv>
 8010ed4:	2600      	movs	r6, #0
 8010ed6:	e9cd 0100 	strd	r0, r1, [sp]
 8010eda:	4652      	mov	r2, sl
 8010edc:	465b      	mov	r3, fp
 8010ede:	4630      	mov	r0, r6
 8010ee0:	4639      	mov	r1, r7
 8010ee2:	f7ef f9f1 	bl	80002c8 <__aeabi_dsub>
 8010ee6:	e9dd 4500 	ldrd	r4, r5, [sp]
 8010eea:	4602      	mov	r2, r0
 8010eec:	460b      	mov	r3, r1
 8010eee:	ec51 0b18 	vmov	r0, r1, d8
 8010ef2:	f7ef f9e9 	bl	80002c8 <__aeabi_dsub>
 8010ef6:	4632      	mov	r2, r6
 8010ef8:	462b      	mov	r3, r5
 8010efa:	f7ef fb9d 	bl	8000638 <__aeabi_dmul>
 8010efe:	46b0      	mov	r8, r6
 8010f00:	460f      	mov	r7, r1
 8010f02:	4642      	mov	r2, r8
 8010f04:	462b      	mov	r3, r5
 8010f06:	4634      	mov	r4, r6
 8010f08:	4649      	mov	r1, r9
 8010f0a:	4606      	mov	r6, r0
 8010f0c:	4640      	mov	r0, r8
 8010f0e:	f7ef fb93 	bl	8000638 <__aeabi_dmul>
 8010f12:	4b07      	ldr	r3, [pc, #28]	; (8010f30 <__kernel_tan+0x410>)
 8010f14:	2200      	movs	r2, #0
 8010f16:	f7ef f9d9 	bl	80002cc <__adddf3>
 8010f1a:	4602      	mov	r2, r0
 8010f1c:	460b      	mov	r3, r1
 8010f1e:	4630      	mov	r0, r6
 8010f20:	4639      	mov	r1, r7
 8010f22:	e665      	b.n	8010bf0 <__kernel_tan+0xd0>
 8010f24:	4682      	mov	sl, r0
 8010f26:	468b      	mov	fp, r1
 8010f28:	e625      	b.n	8010b76 <__kernel_tan+0x56>
 8010f2a:	bf00      	nop
 8010f2c:	bff00000 	.word	0xbff00000
 8010f30:	3ff00000 	.word	0x3ff00000
 8010f34:	00000000 	.word	0x00000000

08010f38 <floor>:
 8010f38:	ec51 0b10 	vmov	r0, r1, d0
 8010f3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010f40:	f3c1 570a 	ubfx	r7, r1, #20, #11
 8010f44:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 8010f48:	2e13      	cmp	r6, #19
 8010f4a:	ee10 5a10 	vmov	r5, s0
 8010f4e:	ee10 8a10 	vmov	r8, s0
 8010f52:	460c      	mov	r4, r1
 8010f54:	dc32      	bgt.n	8010fbc <floor+0x84>
 8010f56:	2e00      	cmp	r6, #0
 8010f58:	da14      	bge.n	8010f84 <floor+0x4c>
 8010f5a:	a333      	add	r3, pc, #204	; (adr r3, 8011028 <floor+0xf0>)
 8010f5c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010f60:	f7ef f9b4 	bl	80002cc <__adddf3>
 8010f64:	2200      	movs	r2, #0
 8010f66:	2300      	movs	r3, #0
 8010f68:	f7ef fdf6 	bl	8000b58 <__aeabi_dcmpgt>
 8010f6c:	b138      	cbz	r0, 8010f7e <floor+0x46>
 8010f6e:	2c00      	cmp	r4, #0
 8010f70:	da57      	bge.n	8011022 <floor+0xea>
 8010f72:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 8010f76:	431d      	orrs	r5, r3
 8010f78:	d001      	beq.n	8010f7e <floor+0x46>
 8010f7a:	4c2d      	ldr	r4, [pc, #180]	; (8011030 <floor+0xf8>)
 8010f7c:	2500      	movs	r5, #0
 8010f7e:	4621      	mov	r1, r4
 8010f80:	4628      	mov	r0, r5
 8010f82:	e025      	b.n	8010fd0 <floor+0x98>
 8010f84:	4f2b      	ldr	r7, [pc, #172]	; (8011034 <floor+0xfc>)
 8010f86:	4137      	asrs	r7, r6
 8010f88:	ea01 0307 	and.w	r3, r1, r7
 8010f8c:	4303      	orrs	r3, r0
 8010f8e:	d01f      	beq.n	8010fd0 <floor+0x98>
 8010f90:	a325      	add	r3, pc, #148	; (adr r3, 8011028 <floor+0xf0>)
 8010f92:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010f96:	f7ef f999 	bl	80002cc <__adddf3>
 8010f9a:	2200      	movs	r2, #0
 8010f9c:	2300      	movs	r3, #0
 8010f9e:	f7ef fddb 	bl	8000b58 <__aeabi_dcmpgt>
 8010fa2:	2800      	cmp	r0, #0
 8010fa4:	d0eb      	beq.n	8010f7e <floor+0x46>
 8010fa6:	2c00      	cmp	r4, #0
 8010fa8:	bfbe      	ittt	lt
 8010faa:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8010fae:	fa43 f606 	asrlt.w	r6, r3, r6
 8010fb2:	19a4      	addlt	r4, r4, r6
 8010fb4:	ea24 0407 	bic.w	r4, r4, r7
 8010fb8:	2500      	movs	r5, #0
 8010fba:	e7e0      	b.n	8010f7e <floor+0x46>
 8010fbc:	2e33      	cmp	r6, #51	; 0x33
 8010fbe:	dd0b      	ble.n	8010fd8 <floor+0xa0>
 8010fc0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8010fc4:	d104      	bne.n	8010fd0 <floor+0x98>
 8010fc6:	ee10 2a10 	vmov	r2, s0
 8010fca:	460b      	mov	r3, r1
 8010fcc:	f7ef f97e 	bl	80002cc <__adddf3>
 8010fd0:	ec41 0b10 	vmov	d0, r0, r1
 8010fd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010fd8:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 8010fdc:	f04f 33ff 	mov.w	r3, #4294967295
 8010fe0:	fa23 f707 	lsr.w	r7, r3, r7
 8010fe4:	4207      	tst	r7, r0
 8010fe6:	d0f3      	beq.n	8010fd0 <floor+0x98>
 8010fe8:	a30f      	add	r3, pc, #60	; (adr r3, 8011028 <floor+0xf0>)
 8010fea:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010fee:	f7ef f96d 	bl	80002cc <__adddf3>
 8010ff2:	2200      	movs	r2, #0
 8010ff4:	2300      	movs	r3, #0
 8010ff6:	f7ef fdaf 	bl	8000b58 <__aeabi_dcmpgt>
 8010ffa:	2800      	cmp	r0, #0
 8010ffc:	d0bf      	beq.n	8010f7e <floor+0x46>
 8010ffe:	2c00      	cmp	r4, #0
 8011000:	da02      	bge.n	8011008 <floor+0xd0>
 8011002:	2e14      	cmp	r6, #20
 8011004:	d103      	bne.n	801100e <floor+0xd6>
 8011006:	3401      	adds	r4, #1
 8011008:	ea25 0507 	bic.w	r5, r5, r7
 801100c:	e7b7      	b.n	8010f7e <floor+0x46>
 801100e:	2301      	movs	r3, #1
 8011010:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 8011014:	fa03 f606 	lsl.w	r6, r3, r6
 8011018:	4435      	add	r5, r6
 801101a:	4545      	cmp	r5, r8
 801101c:	bf38      	it	cc
 801101e:	18e4      	addcc	r4, r4, r3
 8011020:	e7f2      	b.n	8011008 <floor+0xd0>
 8011022:	2500      	movs	r5, #0
 8011024:	462c      	mov	r4, r5
 8011026:	e7aa      	b.n	8010f7e <floor+0x46>
 8011028:	8800759c 	.word	0x8800759c
 801102c:	7e37e43c 	.word	0x7e37e43c
 8011030:	bff00000 	.word	0xbff00000
 8011034:	000fffff 	.word	0x000fffff

08011038 <scalbn>:
 8011038:	b570      	push	{r4, r5, r6, lr}
 801103a:	ec55 4b10 	vmov	r4, r5, d0
 801103e:	f3c5 520a 	ubfx	r2, r5, #20, #11
 8011042:	4606      	mov	r6, r0
 8011044:	462b      	mov	r3, r5
 8011046:	b99a      	cbnz	r2, 8011070 <scalbn+0x38>
 8011048:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 801104c:	4323      	orrs	r3, r4
 801104e:	d036      	beq.n	80110be <scalbn+0x86>
 8011050:	4b39      	ldr	r3, [pc, #228]	; (8011138 <scalbn+0x100>)
 8011052:	4629      	mov	r1, r5
 8011054:	ee10 0a10 	vmov	r0, s0
 8011058:	2200      	movs	r2, #0
 801105a:	f7ef faed 	bl	8000638 <__aeabi_dmul>
 801105e:	4b37      	ldr	r3, [pc, #220]	; (801113c <scalbn+0x104>)
 8011060:	429e      	cmp	r6, r3
 8011062:	4604      	mov	r4, r0
 8011064:	460d      	mov	r5, r1
 8011066:	da10      	bge.n	801108a <scalbn+0x52>
 8011068:	a32b      	add	r3, pc, #172	; (adr r3, 8011118 <scalbn+0xe0>)
 801106a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801106e:	e03a      	b.n	80110e6 <scalbn+0xae>
 8011070:	f240 71ff 	movw	r1, #2047	; 0x7ff
 8011074:	428a      	cmp	r2, r1
 8011076:	d10c      	bne.n	8011092 <scalbn+0x5a>
 8011078:	ee10 2a10 	vmov	r2, s0
 801107c:	4620      	mov	r0, r4
 801107e:	4629      	mov	r1, r5
 8011080:	f7ef f924 	bl	80002cc <__adddf3>
 8011084:	4604      	mov	r4, r0
 8011086:	460d      	mov	r5, r1
 8011088:	e019      	b.n	80110be <scalbn+0x86>
 801108a:	f3c1 520a 	ubfx	r2, r1, #20, #11
 801108e:	460b      	mov	r3, r1
 8011090:	3a36      	subs	r2, #54	; 0x36
 8011092:	4432      	add	r2, r6
 8011094:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8011098:	428a      	cmp	r2, r1
 801109a:	dd08      	ble.n	80110ae <scalbn+0x76>
 801109c:	2d00      	cmp	r5, #0
 801109e:	a120      	add	r1, pc, #128	; (adr r1, 8011120 <scalbn+0xe8>)
 80110a0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80110a4:	da1c      	bge.n	80110e0 <scalbn+0xa8>
 80110a6:	a120      	add	r1, pc, #128	; (adr r1, 8011128 <scalbn+0xf0>)
 80110a8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80110ac:	e018      	b.n	80110e0 <scalbn+0xa8>
 80110ae:	2a00      	cmp	r2, #0
 80110b0:	dd08      	ble.n	80110c4 <scalbn+0x8c>
 80110b2:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80110b6:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 80110ba:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 80110be:	ec45 4b10 	vmov	d0, r4, r5
 80110c2:	bd70      	pop	{r4, r5, r6, pc}
 80110c4:	f112 0f35 	cmn.w	r2, #53	; 0x35
 80110c8:	da19      	bge.n	80110fe <scalbn+0xc6>
 80110ca:	f24c 3350 	movw	r3, #50000	; 0xc350
 80110ce:	429e      	cmp	r6, r3
 80110d0:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 80110d4:	dd0a      	ble.n	80110ec <scalbn+0xb4>
 80110d6:	a112      	add	r1, pc, #72	; (adr r1, 8011120 <scalbn+0xe8>)
 80110d8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80110dc:	2b00      	cmp	r3, #0
 80110de:	d1e2      	bne.n	80110a6 <scalbn+0x6e>
 80110e0:	a30f      	add	r3, pc, #60	; (adr r3, 8011120 <scalbn+0xe8>)
 80110e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80110e6:	f7ef faa7 	bl	8000638 <__aeabi_dmul>
 80110ea:	e7cb      	b.n	8011084 <scalbn+0x4c>
 80110ec:	a10a      	add	r1, pc, #40	; (adr r1, 8011118 <scalbn+0xe0>)
 80110ee:	e9d1 0100 	ldrd	r0, r1, [r1]
 80110f2:	2b00      	cmp	r3, #0
 80110f4:	d0b8      	beq.n	8011068 <scalbn+0x30>
 80110f6:	a10e      	add	r1, pc, #56	; (adr r1, 8011130 <scalbn+0xf8>)
 80110f8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80110fc:	e7b4      	b.n	8011068 <scalbn+0x30>
 80110fe:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8011102:	3236      	adds	r2, #54	; 0x36
 8011104:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8011108:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 801110c:	4620      	mov	r0, r4
 801110e:	4b0c      	ldr	r3, [pc, #48]	; (8011140 <scalbn+0x108>)
 8011110:	2200      	movs	r2, #0
 8011112:	e7e8      	b.n	80110e6 <scalbn+0xae>
 8011114:	f3af 8000 	nop.w
 8011118:	c2f8f359 	.word	0xc2f8f359
 801111c:	01a56e1f 	.word	0x01a56e1f
 8011120:	8800759c 	.word	0x8800759c
 8011124:	7e37e43c 	.word	0x7e37e43c
 8011128:	8800759c 	.word	0x8800759c
 801112c:	fe37e43c 	.word	0xfe37e43c
 8011130:	c2f8f359 	.word	0xc2f8f359
 8011134:	81a56e1f 	.word	0x81a56e1f
 8011138:	43500000 	.word	0x43500000
 801113c:	ffff3cb0 	.word	0xffff3cb0
 8011140:	3c900000 	.word	0x3c900000

08011144 <_init>:
 8011144:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011146:	bf00      	nop
 8011148:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801114a:	bc08      	pop	{r3}
 801114c:	469e      	mov	lr, r3
 801114e:	4770      	bx	lr

08011150 <_fini>:
 8011150:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011152:	bf00      	nop
 8011154:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8011156:	bc08      	pop	{r3}
 8011158:	469e      	mov	lr, r3
 801115a:	4770      	bx	lr
