
RobonAUT-control.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000113dc  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000760  080115b0  080115b0  000215b0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08011d10  08011d10  0003030c  2**0
                  CONTENTS
  4 .ARM          00000008  08011d10  08011d10  00021d10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08011d18  08011d18  0003030c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08011d18  08011d18  00021d18  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08011d1c  08011d1c  00021d1c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000030c  20000000  08011d20  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000994  20000310  0801202c  00030310  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  20000ca4  0801202c  00030ca4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0003030c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000183b4  00000000  00000000  0003033c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003827  00000000  00000000  000486f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000012b0  00000000  00000000  0004bf18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001190  00000000  00000000  0004d1c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00026433  00000000  00000000  0004e358  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00019a1b  00000000  00000000  0007478b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000e1741  00000000  00000000  0008e1a6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0016f8e7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000060f0  00000000  00000000  0016f938  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000310 	.word	0x20000310
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08011594 	.word	0x08011594

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000314 	.word	0x20000314
 800020c:	08011594 	.word	0x08011594

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295
 8000c9c:	f000 b974 	b.w	8000f88 <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f806 	bl	8000cb8 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__udivmoddi4>:
 8000cb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cbc:	9d08      	ldr	r5, [sp, #32]
 8000cbe:	4604      	mov	r4, r0
 8000cc0:	468e      	mov	lr, r1
 8000cc2:	2b00      	cmp	r3, #0
 8000cc4:	d14d      	bne.n	8000d62 <__udivmoddi4+0xaa>
 8000cc6:	428a      	cmp	r2, r1
 8000cc8:	4694      	mov	ip, r2
 8000cca:	d969      	bls.n	8000da0 <__udivmoddi4+0xe8>
 8000ccc:	fab2 f282 	clz	r2, r2
 8000cd0:	b152      	cbz	r2, 8000ce8 <__udivmoddi4+0x30>
 8000cd2:	fa01 f302 	lsl.w	r3, r1, r2
 8000cd6:	f1c2 0120 	rsb	r1, r2, #32
 8000cda:	fa20 f101 	lsr.w	r1, r0, r1
 8000cde:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ce2:	ea41 0e03 	orr.w	lr, r1, r3
 8000ce6:	4094      	lsls	r4, r2
 8000ce8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000cec:	0c21      	lsrs	r1, r4, #16
 8000cee:	fbbe f6f8 	udiv	r6, lr, r8
 8000cf2:	fa1f f78c 	uxth.w	r7, ip
 8000cf6:	fb08 e316 	mls	r3, r8, r6, lr
 8000cfa:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000cfe:	fb06 f107 	mul.w	r1, r6, r7
 8000d02:	4299      	cmp	r1, r3
 8000d04:	d90a      	bls.n	8000d1c <__udivmoddi4+0x64>
 8000d06:	eb1c 0303 	adds.w	r3, ip, r3
 8000d0a:	f106 30ff 	add.w	r0, r6, #4294967295
 8000d0e:	f080 811f 	bcs.w	8000f50 <__udivmoddi4+0x298>
 8000d12:	4299      	cmp	r1, r3
 8000d14:	f240 811c 	bls.w	8000f50 <__udivmoddi4+0x298>
 8000d18:	3e02      	subs	r6, #2
 8000d1a:	4463      	add	r3, ip
 8000d1c:	1a5b      	subs	r3, r3, r1
 8000d1e:	b2a4      	uxth	r4, r4
 8000d20:	fbb3 f0f8 	udiv	r0, r3, r8
 8000d24:	fb08 3310 	mls	r3, r8, r0, r3
 8000d28:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000d2c:	fb00 f707 	mul.w	r7, r0, r7
 8000d30:	42a7      	cmp	r7, r4
 8000d32:	d90a      	bls.n	8000d4a <__udivmoddi4+0x92>
 8000d34:	eb1c 0404 	adds.w	r4, ip, r4
 8000d38:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d3c:	f080 810a 	bcs.w	8000f54 <__udivmoddi4+0x29c>
 8000d40:	42a7      	cmp	r7, r4
 8000d42:	f240 8107 	bls.w	8000f54 <__udivmoddi4+0x29c>
 8000d46:	4464      	add	r4, ip
 8000d48:	3802      	subs	r0, #2
 8000d4a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d4e:	1be4      	subs	r4, r4, r7
 8000d50:	2600      	movs	r6, #0
 8000d52:	b11d      	cbz	r5, 8000d5c <__udivmoddi4+0xa4>
 8000d54:	40d4      	lsrs	r4, r2
 8000d56:	2300      	movs	r3, #0
 8000d58:	e9c5 4300 	strd	r4, r3, [r5]
 8000d5c:	4631      	mov	r1, r6
 8000d5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d62:	428b      	cmp	r3, r1
 8000d64:	d909      	bls.n	8000d7a <__udivmoddi4+0xc2>
 8000d66:	2d00      	cmp	r5, #0
 8000d68:	f000 80ef 	beq.w	8000f4a <__udivmoddi4+0x292>
 8000d6c:	2600      	movs	r6, #0
 8000d6e:	e9c5 0100 	strd	r0, r1, [r5]
 8000d72:	4630      	mov	r0, r6
 8000d74:	4631      	mov	r1, r6
 8000d76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d7a:	fab3 f683 	clz	r6, r3
 8000d7e:	2e00      	cmp	r6, #0
 8000d80:	d14a      	bne.n	8000e18 <__udivmoddi4+0x160>
 8000d82:	428b      	cmp	r3, r1
 8000d84:	d302      	bcc.n	8000d8c <__udivmoddi4+0xd4>
 8000d86:	4282      	cmp	r2, r0
 8000d88:	f200 80f9 	bhi.w	8000f7e <__udivmoddi4+0x2c6>
 8000d8c:	1a84      	subs	r4, r0, r2
 8000d8e:	eb61 0303 	sbc.w	r3, r1, r3
 8000d92:	2001      	movs	r0, #1
 8000d94:	469e      	mov	lr, r3
 8000d96:	2d00      	cmp	r5, #0
 8000d98:	d0e0      	beq.n	8000d5c <__udivmoddi4+0xa4>
 8000d9a:	e9c5 4e00 	strd	r4, lr, [r5]
 8000d9e:	e7dd      	b.n	8000d5c <__udivmoddi4+0xa4>
 8000da0:	b902      	cbnz	r2, 8000da4 <__udivmoddi4+0xec>
 8000da2:	deff      	udf	#255	; 0xff
 8000da4:	fab2 f282 	clz	r2, r2
 8000da8:	2a00      	cmp	r2, #0
 8000daa:	f040 8092 	bne.w	8000ed2 <__udivmoddi4+0x21a>
 8000dae:	eba1 010c 	sub.w	r1, r1, ip
 8000db2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000db6:	fa1f fe8c 	uxth.w	lr, ip
 8000dba:	2601      	movs	r6, #1
 8000dbc:	0c20      	lsrs	r0, r4, #16
 8000dbe:	fbb1 f3f7 	udiv	r3, r1, r7
 8000dc2:	fb07 1113 	mls	r1, r7, r3, r1
 8000dc6:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000dca:	fb0e f003 	mul.w	r0, lr, r3
 8000dce:	4288      	cmp	r0, r1
 8000dd0:	d908      	bls.n	8000de4 <__udivmoddi4+0x12c>
 8000dd2:	eb1c 0101 	adds.w	r1, ip, r1
 8000dd6:	f103 38ff 	add.w	r8, r3, #4294967295
 8000dda:	d202      	bcs.n	8000de2 <__udivmoddi4+0x12a>
 8000ddc:	4288      	cmp	r0, r1
 8000dde:	f200 80cb 	bhi.w	8000f78 <__udivmoddi4+0x2c0>
 8000de2:	4643      	mov	r3, r8
 8000de4:	1a09      	subs	r1, r1, r0
 8000de6:	b2a4      	uxth	r4, r4
 8000de8:	fbb1 f0f7 	udiv	r0, r1, r7
 8000dec:	fb07 1110 	mls	r1, r7, r0, r1
 8000df0:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000df4:	fb0e fe00 	mul.w	lr, lr, r0
 8000df8:	45a6      	cmp	lr, r4
 8000dfa:	d908      	bls.n	8000e0e <__udivmoddi4+0x156>
 8000dfc:	eb1c 0404 	adds.w	r4, ip, r4
 8000e00:	f100 31ff 	add.w	r1, r0, #4294967295
 8000e04:	d202      	bcs.n	8000e0c <__udivmoddi4+0x154>
 8000e06:	45a6      	cmp	lr, r4
 8000e08:	f200 80bb 	bhi.w	8000f82 <__udivmoddi4+0x2ca>
 8000e0c:	4608      	mov	r0, r1
 8000e0e:	eba4 040e 	sub.w	r4, r4, lr
 8000e12:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000e16:	e79c      	b.n	8000d52 <__udivmoddi4+0x9a>
 8000e18:	f1c6 0720 	rsb	r7, r6, #32
 8000e1c:	40b3      	lsls	r3, r6
 8000e1e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000e22:	ea4c 0c03 	orr.w	ip, ip, r3
 8000e26:	fa20 f407 	lsr.w	r4, r0, r7
 8000e2a:	fa01 f306 	lsl.w	r3, r1, r6
 8000e2e:	431c      	orrs	r4, r3
 8000e30:	40f9      	lsrs	r1, r7
 8000e32:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000e36:	fa00 f306 	lsl.w	r3, r0, r6
 8000e3a:	fbb1 f8f9 	udiv	r8, r1, r9
 8000e3e:	0c20      	lsrs	r0, r4, #16
 8000e40:	fa1f fe8c 	uxth.w	lr, ip
 8000e44:	fb09 1118 	mls	r1, r9, r8, r1
 8000e48:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e4c:	fb08 f00e 	mul.w	r0, r8, lr
 8000e50:	4288      	cmp	r0, r1
 8000e52:	fa02 f206 	lsl.w	r2, r2, r6
 8000e56:	d90b      	bls.n	8000e70 <__udivmoddi4+0x1b8>
 8000e58:	eb1c 0101 	adds.w	r1, ip, r1
 8000e5c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000e60:	f080 8088 	bcs.w	8000f74 <__udivmoddi4+0x2bc>
 8000e64:	4288      	cmp	r0, r1
 8000e66:	f240 8085 	bls.w	8000f74 <__udivmoddi4+0x2bc>
 8000e6a:	f1a8 0802 	sub.w	r8, r8, #2
 8000e6e:	4461      	add	r1, ip
 8000e70:	1a09      	subs	r1, r1, r0
 8000e72:	b2a4      	uxth	r4, r4
 8000e74:	fbb1 f0f9 	udiv	r0, r1, r9
 8000e78:	fb09 1110 	mls	r1, r9, r0, r1
 8000e7c:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000e80:	fb00 fe0e 	mul.w	lr, r0, lr
 8000e84:	458e      	cmp	lr, r1
 8000e86:	d908      	bls.n	8000e9a <__udivmoddi4+0x1e2>
 8000e88:	eb1c 0101 	adds.w	r1, ip, r1
 8000e8c:	f100 34ff 	add.w	r4, r0, #4294967295
 8000e90:	d26c      	bcs.n	8000f6c <__udivmoddi4+0x2b4>
 8000e92:	458e      	cmp	lr, r1
 8000e94:	d96a      	bls.n	8000f6c <__udivmoddi4+0x2b4>
 8000e96:	3802      	subs	r0, #2
 8000e98:	4461      	add	r1, ip
 8000e9a:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000e9e:	fba0 9402 	umull	r9, r4, r0, r2
 8000ea2:	eba1 010e 	sub.w	r1, r1, lr
 8000ea6:	42a1      	cmp	r1, r4
 8000ea8:	46c8      	mov	r8, r9
 8000eaa:	46a6      	mov	lr, r4
 8000eac:	d356      	bcc.n	8000f5c <__udivmoddi4+0x2a4>
 8000eae:	d053      	beq.n	8000f58 <__udivmoddi4+0x2a0>
 8000eb0:	b15d      	cbz	r5, 8000eca <__udivmoddi4+0x212>
 8000eb2:	ebb3 0208 	subs.w	r2, r3, r8
 8000eb6:	eb61 010e 	sbc.w	r1, r1, lr
 8000eba:	fa01 f707 	lsl.w	r7, r1, r7
 8000ebe:	fa22 f306 	lsr.w	r3, r2, r6
 8000ec2:	40f1      	lsrs	r1, r6
 8000ec4:	431f      	orrs	r7, r3
 8000ec6:	e9c5 7100 	strd	r7, r1, [r5]
 8000eca:	2600      	movs	r6, #0
 8000ecc:	4631      	mov	r1, r6
 8000ece:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ed2:	f1c2 0320 	rsb	r3, r2, #32
 8000ed6:	40d8      	lsrs	r0, r3
 8000ed8:	fa0c fc02 	lsl.w	ip, ip, r2
 8000edc:	fa21 f303 	lsr.w	r3, r1, r3
 8000ee0:	4091      	lsls	r1, r2
 8000ee2:	4301      	orrs	r1, r0
 8000ee4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ee8:	fa1f fe8c 	uxth.w	lr, ip
 8000eec:	fbb3 f0f7 	udiv	r0, r3, r7
 8000ef0:	fb07 3610 	mls	r6, r7, r0, r3
 8000ef4:	0c0b      	lsrs	r3, r1, #16
 8000ef6:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000efa:	fb00 f60e 	mul.w	r6, r0, lr
 8000efe:	429e      	cmp	r6, r3
 8000f00:	fa04 f402 	lsl.w	r4, r4, r2
 8000f04:	d908      	bls.n	8000f18 <__udivmoddi4+0x260>
 8000f06:	eb1c 0303 	adds.w	r3, ip, r3
 8000f0a:	f100 38ff 	add.w	r8, r0, #4294967295
 8000f0e:	d22f      	bcs.n	8000f70 <__udivmoddi4+0x2b8>
 8000f10:	429e      	cmp	r6, r3
 8000f12:	d92d      	bls.n	8000f70 <__udivmoddi4+0x2b8>
 8000f14:	3802      	subs	r0, #2
 8000f16:	4463      	add	r3, ip
 8000f18:	1b9b      	subs	r3, r3, r6
 8000f1a:	b289      	uxth	r1, r1
 8000f1c:	fbb3 f6f7 	udiv	r6, r3, r7
 8000f20:	fb07 3316 	mls	r3, r7, r6, r3
 8000f24:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f28:	fb06 f30e 	mul.w	r3, r6, lr
 8000f2c:	428b      	cmp	r3, r1
 8000f2e:	d908      	bls.n	8000f42 <__udivmoddi4+0x28a>
 8000f30:	eb1c 0101 	adds.w	r1, ip, r1
 8000f34:	f106 38ff 	add.w	r8, r6, #4294967295
 8000f38:	d216      	bcs.n	8000f68 <__udivmoddi4+0x2b0>
 8000f3a:	428b      	cmp	r3, r1
 8000f3c:	d914      	bls.n	8000f68 <__udivmoddi4+0x2b0>
 8000f3e:	3e02      	subs	r6, #2
 8000f40:	4461      	add	r1, ip
 8000f42:	1ac9      	subs	r1, r1, r3
 8000f44:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000f48:	e738      	b.n	8000dbc <__udivmoddi4+0x104>
 8000f4a:	462e      	mov	r6, r5
 8000f4c:	4628      	mov	r0, r5
 8000f4e:	e705      	b.n	8000d5c <__udivmoddi4+0xa4>
 8000f50:	4606      	mov	r6, r0
 8000f52:	e6e3      	b.n	8000d1c <__udivmoddi4+0x64>
 8000f54:	4618      	mov	r0, r3
 8000f56:	e6f8      	b.n	8000d4a <__udivmoddi4+0x92>
 8000f58:	454b      	cmp	r3, r9
 8000f5a:	d2a9      	bcs.n	8000eb0 <__udivmoddi4+0x1f8>
 8000f5c:	ebb9 0802 	subs.w	r8, r9, r2
 8000f60:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000f64:	3801      	subs	r0, #1
 8000f66:	e7a3      	b.n	8000eb0 <__udivmoddi4+0x1f8>
 8000f68:	4646      	mov	r6, r8
 8000f6a:	e7ea      	b.n	8000f42 <__udivmoddi4+0x28a>
 8000f6c:	4620      	mov	r0, r4
 8000f6e:	e794      	b.n	8000e9a <__udivmoddi4+0x1e2>
 8000f70:	4640      	mov	r0, r8
 8000f72:	e7d1      	b.n	8000f18 <__udivmoddi4+0x260>
 8000f74:	46d0      	mov	r8, sl
 8000f76:	e77b      	b.n	8000e70 <__udivmoddi4+0x1b8>
 8000f78:	3b02      	subs	r3, #2
 8000f7a:	4461      	add	r1, ip
 8000f7c:	e732      	b.n	8000de4 <__udivmoddi4+0x12c>
 8000f7e:	4630      	mov	r0, r6
 8000f80:	e709      	b.n	8000d96 <__udivmoddi4+0xde>
 8000f82:	4464      	add	r4, ip
 8000f84:	3802      	subs	r0, #2
 8000f86:	e742      	b.n	8000e0e <__udivmoddi4+0x156>

08000f88 <__aeabi_idiv0>:
 8000f88:	4770      	bx	lr
 8000f8a:	bf00      	nop

08000f8c <__NVIC_SystemReset>:
/**
  \brief   System Reset
  \details Initiates a system reset request to reset the MCU.
 */
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
 8000f8c:	b480      	push	{r7}
 8000f8e:	af00      	add	r7, sp, #0
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000f90:	f3bf 8f4f 	dsb	sy
}
 8000f94:	bf00      	nop
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 8000f96:	4b06      	ldr	r3, [pc, #24]	; (8000fb0 <__NVIC_SystemReset+0x24>)
 8000f98:	68db      	ldr	r3, [r3, #12]
 8000f9a:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 8000f9e:	4904      	ldr	r1, [pc, #16]	; (8000fb0 <__NVIC_SystemReset+0x24>)
 8000fa0:	4b04      	ldr	r3, [pc, #16]	; (8000fb4 <__NVIC_SystemReset+0x28>)
 8000fa2:	4313      	orrs	r3, r2
 8000fa4:	60cb      	str	r3, [r1, #12]
  __ASM volatile ("dsb 0xF":::"memory");
 8000fa6:	f3bf 8f4f 	dsb	sy
}
 8000faa:	bf00      	nop
                            SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchanged */
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
 8000fac:	bf00      	nop
 8000fae:	e7fd      	b.n	8000fac <__NVIC_SystemReset+0x20>
 8000fb0:	e000ed00 	.word	0xe000ed00
 8000fb4:	05fa0004 	.word	0x05fa0004

08000fb8 <F4_Basic_Init>:
uint8_t mode;
float v_ref; //mm/s
uint8_t leaveLineEnabled;

void F4_Basic_Init(UART_HandleTypeDef *huart_debugg,TIM_HandleTypeDef *htim_scheduler,TIM_HandleTypeDef *htim_motor,TIM_HandleTypeDef *htim_servo1,TIM_HandleTypeDef *htim_servo2, TIM_HandleTypeDef *htim_encoder,TIM_HandleTypeDef *htim_delay,TIM_HandleTypeDef *htim_rand)
{
 8000fb8:	b580      	push	{r7, lr}
 8000fba:	b08e      	sub	sp, #56	; 0x38
 8000fbc:	af00      	add	r7, sp, #0
 8000fbe:	60f8      	str	r0, [r7, #12]
 8000fc0:	60b9      	str	r1, [r7, #8]
 8000fc2:	607a      	str	r2, [r7, #4]
 8000fc4:	603b      	str	r3, [r7, #0]
	char buf[40];
	LED_R(0);
 8000fc6:	2201      	movs	r2, #1
 8000fc8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000fcc:	484f      	ldr	r0, [pc, #316]	; (800110c <F4_Basic_Init+0x154>)
 8000fce:	f008 fb5d 	bl	800968c <HAL_GPIO_WritePin>
	LED_B(0);
 8000fd2:	2201      	movs	r2, #1
 8000fd4:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000fd8:	484c      	ldr	r0, [pc, #304]	; (800110c <F4_Basic_Init+0x154>)
 8000fda:	f008 fb57 	bl	800968c <HAL_GPIO_WritePin>
	LED_G(0);
 8000fde:	2201      	movs	r2, #1
 8000fe0:	2102      	movs	r1, #2
 8000fe2:	484a      	ldr	r0, [pc, #296]	; (800110c <F4_Basic_Init+0x154>)
 8000fe4:	f008 fb52 	bl	800968c <HAL_GPIO_WritePin>
	LED_Y(0);
 8000fe8:	2201      	movs	r2, #1
 8000fea:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000fee:	4847      	ldr	r0, [pc, #284]	; (800110c <F4_Basic_Init+0x154>)
 8000ff0:	f008 fb4c 	bl	800968c <HAL_GPIO_WritePin>
	LED_NUCLEO(0);
 8000ff4:	2200      	movs	r2, #0
 8000ff6:	2120      	movs	r1, #32
 8000ff8:	4845      	ldr	r0, [pc, #276]	; (8001110 <F4_Basic_Init+0x158>)
 8000ffa:	f008 fb47 	bl	800968c <HAL_GPIO_WritePin>
	sprintf(buf,"\r\nRobonAUT 2023 Bit Bangers F4\r\n");// a buff tömb-be beleírom (stringprint) a string-emet. 1 karakter = 1 byte = 1 tömbelem
 8000ffe:	f107 0310 	add.w	r3, r7, #16
 8001002:	4944      	ldr	r1, [pc, #272]	; (8001114 <F4_Basic_Init+0x15c>)
 8001004:	4618      	mov	r0, r3
 8001006:	f00c fdfd 	bl	800dc04 <siprintf>
	HAL_UART_Transmit(huart_debugg,(uint8_t*) buf, strlen(buf), 100);// A UART2-őn (ide van kötve a programozó) kiküldöm a buf karaktertömböt (string) és maximum 10-ms -ot várok hogy ezt elvégezze a periféria
 800100a:	f107 0310 	add.w	r3, r7, #16
 800100e:	4618      	mov	r0, r3
 8001010:	f7ff f8fe 	bl	8000210 <strlen>
 8001014:	4603      	mov	r3, r0
 8001016:	b29a      	uxth	r2, r3
 8001018:	f107 0110 	add.w	r1, r7, #16
 800101c:	2364      	movs	r3, #100	; 0x64
 800101e:	68f8      	ldr	r0, [r7, #12]
 8001020:	f00b f887 	bl	800c132 <HAL_UART_Transmit>

	//MotorEnable engedélyezése
	motorEnRemote=0;//csak akkor ha megnyomtuk a ravaszt
 8001024:	4b3c      	ldr	r3, [pc, #240]	; (8001118 <F4_Basic_Init+0x160>)
 8001026:	2200      	movs	r2, #0
 8001028:	701a      	strb	r2, [r3, #0]
	motorEnLineOk=1;
 800102a:	4b3c      	ldr	r3, [pc, #240]	; (800111c <F4_Basic_Init+0x164>)
 800102c:	2201      	movs	r2, #1
 800102e:	701a      	strb	r2, [r3, #0]
	leaveLineEnabled=0;
 8001030:	4b3b      	ldr	r3, [pc, #236]	; (8001120 <F4_Basic_Init+0x168>)
 8001032:	2200      	movs	r2, #0
 8001034:	701a      	strb	r2, [r3, #0]

	swState[0] = SW1;
 8001036:	f44f 7180 	mov.w	r1, #256	; 0x100
 800103a:	4835      	ldr	r0, [pc, #212]	; (8001110 <F4_Basic_Init+0x158>)
 800103c:	f008 fb0e 	bl	800965c <HAL_GPIO_ReadPin>
 8001040:	4603      	mov	r3, r0
 8001042:	461a      	mov	r2, r3
 8001044:	4b37      	ldr	r3, [pc, #220]	; (8001124 <F4_Basic_Init+0x16c>)
 8001046:	701a      	strb	r2, [r3, #0]
	swState[1] = SW2;
 8001048:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800104c:	482f      	ldr	r0, [pc, #188]	; (800110c <F4_Basic_Init+0x154>)
 800104e:	f008 fb05 	bl	800965c <HAL_GPIO_ReadPin>
 8001052:	4603      	mov	r3, r0
 8001054:	461a      	mov	r2, r3
 8001056:	4b33      	ldr	r3, [pc, #204]	; (8001124 <F4_Basic_Init+0x16c>)
 8001058:	705a      	strb	r2, [r3, #1]
	if(SW2)LED_R(1);
 800105a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800105e:	482b      	ldr	r0, [pc, #172]	; (800110c <F4_Basic_Init+0x154>)
 8001060:	f008 fafc 	bl	800965c <HAL_GPIO_ReadPin>
 8001064:	4603      	mov	r3, r0
 8001066:	2b00      	cmp	r3, #0
 8001068:	d006      	beq.n	8001078 <F4_Basic_Init+0xc0>
 800106a:	2200      	movs	r2, #0
 800106c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001070:	4826      	ldr	r0, [pc, #152]	; (800110c <F4_Basic_Init+0x154>)
 8001072:	f008 fb0b 	bl	800968c <HAL_GPIO_WritePin>
 8001076:	e005      	b.n	8001084 <F4_Basic_Init+0xcc>
	else LED_R(0);
 8001078:	2201      	movs	r2, #1
 800107a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800107e:	4823      	ldr	r0, [pc, #140]	; (800110c <F4_Basic_Init+0x154>)
 8001080:	f008 fb04 	bl	800968c <HAL_GPIO_WritePin>

	bFlag[0] = bFlag[1] = bFlag[2] = 0;
 8001084:	2200      	movs	r2, #0
 8001086:	4b28      	ldr	r3, [pc, #160]	; (8001128 <F4_Basic_Init+0x170>)
 8001088:	4611      	mov	r1, r2
 800108a:	7099      	strb	r1, [r3, #2]
 800108c:	4b26      	ldr	r3, [pc, #152]	; (8001128 <F4_Basic_Init+0x170>)
 800108e:	4611      	mov	r1, r2
 8001090:	7059      	strb	r1, [r3, #1]
 8001092:	4b25      	ldr	r3, [pc, #148]	; (8001128 <F4_Basic_Init+0x170>)
 8001094:	701a      	strb	r2, [r3, #0]
	fromPC[0]=150;
 8001096:	4b25      	ldr	r3, [pc, #148]	; (800112c <F4_Basic_Init+0x174>)
 8001098:	2296      	movs	r2, #150	; 0x96
 800109a:	701a      	strb	r2, [r3, #0]
	fromPC[1]=150;
 800109c:	4b23      	ldr	r3, [pc, #140]	; (800112c <F4_Basic_Init+0x174>)
 800109e:	2296      	movs	r2, #150	; 0x96
 80010a0:	705a      	strb	r2, [r3, #1]
	mode=SKILL;
 80010a2:	4b23      	ldr	r3, [pc, #140]	; (8001130 <F4_Basic_Init+0x178>)
 80010a4:	2252      	movs	r2, #82	; 0x52
 80010a6:	701a      	strb	r2, [r3, #0]
	v_ref = 1000;
 80010a8:	4b22      	ldr	r3, [pc, #136]	; (8001134 <F4_Basic_Init+0x17c>)
 80010aa:	4a23      	ldr	r2, [pc, #140]	; (8001138 <F4_Basic_Init+0x180>)
 80010ac:	601a      	str	r2, [r3, #0]
	v=0;
 80010ae:	4b23      	ldr	r3, [pc, #140]	; (800113c <F4_Basic_Init+0x184>)
 80010b0:	f04f 0200 	mov.w	r2, #0
 80010b4:	601a      	str	r2, [r3, #0]

	//timerek elindítása
	TIM1->CCR4=SERVO_REAR_CCR_MIDDLE;
 80010b6:	4b22      	ldr	r3, [pc, #136]	; (8001140 <F4_Basic_Init+0x188>)
 80010b8:	f44f 722a 	mov.w	r2, #680	; 0x2a8
 80010bc:	641a      	str	r2, [r3, #64]	; 0x40
	TIM2->CCR1=SERVO_FRONT_CCR_MIDDLE;
 80010be:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80010c2:	f44f 722d 	mov.w	r2, #692	; 0x2b4
 80010c6:	635a      	str	r2, [r3, #52]	; 0x34
	//TIM2->CCR1=684; //servot középre
	//TIM3->CCR1=499; //0 kitöltési tényező a motorra
	//TIM3->CCR2=499;
	HAL_TIM_Base_Start(htim_scheduler);//heart beat timer tick start
 80010c8:	68b8      	ldr	r0, [r7, #8]
 80010ca:	f009 f9b3 	bl	800a434 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(htim_delay);//heart beat timer tick start
 80010ce:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 80010d0:	f009 f9b0 	bl	800a434 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(htim_rand);//heart beat timer tick start
 80010d4:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 80010d6:	f009 f9ad 	bl	800a434 <HAL_TIM_Base_Start>
	HAL_TIM_PWM_Start(htim_motor, TIM_CHANNEL_1);//motor PWM-ek elindítása
 80010da:	2100      	movs	r1, #0
 80010dc:	6878      	ldr	r0, [r7, #4]
 80010de:	f009 fa6b 	bl	800a5b8 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim_motor, TIM_CHANNEL_2);
 80010e2:	2104      	movs	r1, #4
 80010e4:	6878      	ldr	r0, [r7, #4]
 80010e6:	f009 fa67 	bl	800a5b8 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim_servo1, TIM_CHANNEL_1); //servo RC pwm elindítása
 80010ea:	2100      	movs	r1, #0
 80010ec:	6838      	ldr	r0, [r7, #0]
 80010ee:	f009 fa63 	bl	800a5b8 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim_servo2, TIM_CHANNEL_4); //servo RC pwm elindítása
 80010f2:	210c      	movs	r1, #12
 80010f4:	6c38      	ldr	r0, [r7, #64]	; 0x40
 80010f6:	f009 fa5f 	bl	800a5b8 <HAL_TIM_PWM_Start>
	HAL_TIM_Encoder_Start(htim_encoder,TIM_CHANNEL_ALL);
 80010fa:	213c      	movs	r1, #60	; 0x3c
 80010fc:	6c78      	ldr	r0, [r7, #68]	; 0x44
 80010fe:	f009 fdcd 	bl	800ac9c <HAL_TIM_Encoder_Start>

	//Ha a PC-ről küldünk vmit azt fogadjuk
	//HAL_UART_Receive_IT(huart_debugg, fromPC, 2);
}
 8001102:	bf00      	nop
 8001104:	3738      	adds	r7, #56	; 0x38
 8001106:	46bd      	mov	sp, r7
 8001108:	bd80      	pop	{r7, pc}
 800110a:	bf00      	nop
 800110c:	40020400 	.word	0x40020400
 8001110:	40020000 	.word	0x40020000
 8001114:	080115b0 	.word	0x080115b0
 8001118:	20000c58 	.word	0x20000c58
 800111c:	20000c59 	.word	0x20000c59
 8001120:	2000033c 	.word	0x2000033c
 8001124:	2000032c 	.word	0x2000032c
 8001128:	20000330 	.word	0x20000330
 800112c:	20000334 	.word	0x20000334
 8001130:	20000336 	.word	0x20000336
 8001134:	20000338 	.word	0x20000338
 8001138:	447a0000 	.word	0x447a0000
 800113c:	20000754 	.word	0x20000754
 8001140:	40010000 	.word	0x40010000

08001144 <HDI_Read_Task>:


void HDI_Read_Task(UART_HandleTypeDef *huart_debugg,TIM_HandleTypeDef *htim_servo,uint32_t tick, uint32_t period)
{
 8001144:	b580      	push	{r7, lr}
 8001146:	b084      	sub	sp, #16
 8001148:	af00      	add	r7, sp, #0
 800114a:	60f8      	str	r0, [r7, #12]
 800114c:	60b9      	str	r1, [r7, #8]
 800114e:	607a      	str	r2, [r7, #4]
 8001150:	603b      	str	r3, [r7, #0]
	static uint32_t hdi_read_task_tick=0;

	if(hdi_read_task_tick>tick) return;
 8001152:	4b29      	ldr	r3, [pc, #164]	; (80011f8 <HDI_Read_Task+0xb4>)
 8001154:	681b      	ldr	r3, [r3, #0]
 8001156:	687a      	ldr	r2, [r7, #4]
 8001158:	429a      	cmp	r2, r3
 800115a:	d349      	bcc.n	80011f0 <HDI_Read_Task+0xac>
	hdi_read_task_tick = tick + period;
 800115c:	687a      	ldr	r2, [r7, #4]
 800115e:	683b      	ldr	r3, [r7, #0]
 8001160:	4413      	add	r3, r2
 8001162:	4a25      	ldr	r2, [pc, #148]	; (80011f8 <HDI_Read_Task+0xb4>)
 8001164:	6013      	str	r3, [r2, #0]

	swState[0]=SW1;
 8001166:	f44f 7180 	mov.w	r1, #256	; 0x100
 800116a:	4824      	ldr	r0, [pc, #144]	; (80011fc <HDI_Read_Task+0xb8>)
 800116c:	f008 fa76 	bl	800965c <HAL_GPIO_ReadPin>
 8001170:	4603      	mov	r3, r0
 8001172:	461a      	mov	r2, r3
 8001174:	4b22      	ldr	r3, [pc, #136]	; (8001200 <HDI_Read_Task+0xbc>)
 8001176:	701a      	strb	r2, [r3, #0]
	swState[1]=SW2;
 8001178:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800117c:	4821      	ldr	r0, [pc, #132]	; (8001204 <HDI_Read_Task+0xc0>)
 800117e:	f008 fa6d 	bl	800965c <HAL_GPIO_ReadPin>
 8001182:	4603      	mov	r3, r0
 8001184:	461a      	mov	r2, r3
 8001186:	4b1e      	ldr	r3, [pc, #120]	; (8001200 <HDI_Read_Task+0xbc>)
 8001188:	705a      	strb	r2, [r3, #1]

	if(swState[0] && mode==FAST) LED_G(1);
 800118a:	4b1d      	ldr	r3, [pc, #116]	; (8001200 <HDI_Read_Task+0xbc>)
 800118c:	781b      	ldrb	r3, [r3, #0]
 800118e:	2b00      	cmp	r3, #0
 8001190:	d008      	beq.n	80011a4 <HDI_Read_Task+0x60>
 8001192:	4b1d      	ldr	r3, [pc, #116]	; (8001208 <HDI_Read_Task+0xc4>)
 8001194:	781b      	ldrb	r3, [r3, #0]
 8001196:	2b3f      	cmp	r3, #63	; 0x3f
 8001198:	d104      	bne.n	80011a4 <HDI_Read_Task+0x60>
 800119a:	2200      	movs	r2, #0
 800119c:	2102      	movs	r1, #2
 800119e:	4819      	ldr	r0, [pc, #100]	; (8001204 <HDI_Read_Task+0xc0>)
 80011a0:	f008 fa74 	bl	800968c <HAL_GPIO_WritePin>
	if(!swState[0] && mode==FAST) LED_G(0);
 80011a4:	4b16      	ldr	r3, [pc, #88]	; (8001200 <HDI_Read_Task+0xbc>)
 80011a6:	781b      	ldrb	r3, [r3, #0]
 80011a8:	2b00      	cmp	r3, #0
 80011aa:	d108      	bne.n	80011be <HDI_Read_Task+0x7a>
 80011ac:	4b16      	ldr	r3, [pc, #88]	; (8001208 <HDI_Read_Task+0xc4>)
 80011ae:	781b      	ldrb	r3, [r3, #0]
 80011b0:	2b3f      	cmp	r3, #63	; 0x3f
 80011b2:	d104      	bne.n	80011be <HDI_Read_Task+0x7a>
 80011b4:	2201      	movs	r2, #1
 80011b6:	2102      	movs	r1, #2
 80011b8:	4812      	ldr	r0, [pc, #72]	; (8001204 <HDI_Read_Task+0xc0>)
 80011ba:	f008 fa67 	bl	800968c <HAL_GPIO_WritePin>
	if(swState[1]) LED_R(1);
 80011be:	4b10      	ldr	r3, [pc, #64]	; (8001200 <HDI_Read_Task+0xbc>)
 80011c0:	785b      	ldrb	r3, [r3, #1]
 80011c2:	2b00      	cmp	r3, #0
 80011c4:	d005      	beq.n	80011d2 <HDI_Read_Task+0x8e>
 80011c6:	2200      	movs	r2, #0
 80011c8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011cc:	480d      	ldr	r0, [pc, #52]	; (8001204 <HDI_Read_Task+0xc0>)
 80011ce:	f008 fa5d 	bl	800968c <HAL_GPIO_WritePin>
	if(!swState[1]) LED_R(0);
 80011d2:	4b0b      	ldr	r3, [pc, #44]	; (8001200 <HDI_Read_Task+0xbc>)
 80011d4:	785b      	ldrb	r3, [r3, #1]
 80011d6:	2b00      	cmp	r3, #0
 80011d8:	d105      	bne.n	80011e6 <HDI_Read_Task+0xa2>
 80011da:	2201      	movs	r2, #1
 80011dc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011e0:	4808      	ldr	r0, [pc, #32]	; (8001204 <HDI_Read_Task+0xc0>)
 80011e2:	f008 fa53 	bl	800968c <HAL_GPIO_WritePin>

	if(bFlag[0]);
 80011e6:	4b09      	ldr	r3, [pc, #36]	; (800120c <HDI_Read_Task+0xc8>)
 80011e8:	781b      	ldrb	r3, [r3, #0]
	if(bFlag[1]);
 80011ea:	4b08      	ldr	r3, [pc, #32]	; (800120c <HDI_Read_Task+0xc8>)
 80011ec:	785b      	ldrb	r3, [r3, #1]
 80011ee:	e000      	b.n	80011f2 <HDI_Read_Task+0xae>
	if(hdi_read_task_tick>tick) return;
 80011f0:	bf00      	nop

}
 80011f2:	3710      	adds	r7, #16
 80011f4:	46bd      	mov	sp, r7
 80011f6:	bd80      	pop	{r7, pc}
 80011f8:	20000340 	.word	0x20000340
 80011fc:	40020000 	.word	0x40020000
 8001200:	2000032c 	.word	0x2000032c
 8001204:	40020400 	.word	0x40020400
 8001208:	20000336 	.word	0x20000336
 800120c:	20000330 	.word	0x20000330

08001210 <Uart_Receive_From_PC_ISR>:

void Uart_Receive_From_PC_ISR(UART_HandleTypeDef *huart)
{
 8001210:	b580      	push	{r7, lr}
 8001212:	b082      	sub	sp, #8
 8001214:	af00      	add	r7, sp, #0
 8001216:	6078      	str	r0, [r7, #4]
	LED_Y_TOGGLE;
 8001218:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800121c:	480b      	ldr	r0, [pc, #44]	; (800124c <Uart_Receive_From_PC_ISR+0x3c>)
 800121e:	f008 fa4e 	bl	80096be <HAL_GPIO_TogglePin>
	HAL_UART_Receive_IT(huart, (uint8_t*)fromPC, 2);
 8001222:	2202      	movs	r2, #2
 8001224:	490a      	ldr	r1, [pc, #40]	; (8001250 <Uart_Receive_From_PC_ISR+0x40>)
 8001226:	6878      	ldr	r0, [r7, #4]
 8001228:	f00b f8b7 	bl	800c39a <HAL_UART_Receive_IT>
	TIM2->CCR1 = 4*fromPC[0];
 800122c:	4b08      	ldr	r3, [pc, #32]	; (8001250 <Uart_Receive_From_PC_ISR+0x40>)
 800122e:	781b      	ldrb	r3, [r3, #0]
 8001230:	009a      	lsls	r2, r3, #2
 8001232:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001236:	635a      	str	r2, [r3, #52]	; 0x34
	TIM1->CCR4 = 4*fromPC[1];
 8001238:	4b05      	ldr	r3, [pc, #20]	; (8001250 <Uart_Receive_From_PC_ISR+0x40>)
 800123a:	785b      	ldrb	r3, [r3, #1]
 800123c:	009a      	lsls	r2, r3, #2
 800123e:	4b05      	ldr	r3, [pc, #20]	; (8001254 <Uart_Receive_From_PC_ISR+0x44>)
 8001240:	641a      	str	r2, [r3, #64]	; 0x40
}
 8001242:	bf00      	nop
 8001244:	3708      	adds	r7, #8
 8001246:	46bd      	mov	sp, r7
 8001248:	bd80      	pop	{r7, pc}
 800124a:	bf00      	nop
 800124c:	40020400 	.word	0x40020400
 8001250:	20000334 	.word	0x20000334
 8001254:	40010000 	.word	0x40010000

08001258 <B1_ISR>:

void B1_ISR(UART_HandleTypeDef *huart_debugg)
{
 8001258:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 800125c:	b084      	sub	sp, #16
 800125e:	af00      	add	r7, sp, #0
 8001260:	6078      	str	r0, [r7, #4]
		HAL_FLASH_Unlock();
 8001262:	f007 fead 	bl	8008fc0 <HAL_FLASH_Unlock>
		Delay(50);
 8001266:	2032      	movs	r0, #50	; 0x32
 8001268:	f005 fcdc 	bl	8006c24 <Delay>
		FLASH_Erase_Sector(6, FLASH_VOLTAGE_RANGE_3);
 800126c:	2102      	movs	r1, #2
 800126e:	2006      	movs	r0, #6
 8001270:	f008 f818 	bl	80092a4 <FLASH_Erase_Sector>
		Delay(50);
 8001274:	2032      	movs	r0, #50	; 0x32
 8001276:	f005 fcd5 	bl	8006c24 <Delay>
		HAL_FLASH_Lock();
 800127a:	f007 fec3 	bl	8009004 <HAL_FLASH_Lock>

		int i;
		for(i=0;i<8;i++)
 800127e:	2300      	movs	r3, #0
 8001280:	60fb      	str	r3, [r7, #12]
 8001282:	e00a      	b.n	800129a <B1_ISR+0x42>
		{
			LED_R_TOGGLE;
 8001284:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001288:	4828      	ldr	r0, [pc, #160]	; (800132c <B1_ISR+0xd4>)
 800128a:	f008 fa18 	bl	80096be <HAL_GPIO_TogglePin>
			Delay(150);
 800128e:	2096      	movs	r0, #150	; 0x96
 8001290:	f005 fcc8 	bl	8006c24 <Delay>
		for(i=0;i<8;i++)
 8001294:	68fb      	ldr	r3, [r7, #12]
 8001296:	3301      	adds	r3, #1
 8001298:	60fb      	str	r3, [r7, #12]
 800129a:	68fb      	ldr	r3, [r7, #12]
 800129c:	2b07      	cmp	r3, #7
 800129e:	ddf1      	ble.n	8001284 <B1_ISR+0x2c>
		}
		LED_R(0);
 80012a0:	2201      	movs	r2, #1
 80012a2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80012a6:	4821      	ldr	r0, [pc, #132]	; (800132c <B1_ISR+0xd4>)
 80012a8:	f008 f9f0 	bl	800968c <HAL_GPIO_WritePin>

		HAL_FLASH_Unlock();
 80012ac:	f007 fe88 	bl	8008fc0 <HAL_FLASH_Unlock>
		Delay(50);
 80012b0:	2032      	movs	r0, #50	; 0x32
 80012b2:	f005 fcb7 	bl	8006c24 <Delay>
		for(i=0;i<22;i++)
 80012b6:	2300      	movs	r3, #0
 80012b8:	60fb      	str	r3, [r7, #12]
 80012ba:	e01a      	b.n	80012f2 <B1_ISR+0x9a>
		{
			HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+i, Nodes[i].worth);
 80012bc:	68fb      	ldr	r3, [r7, #12]
 80012be:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 80012c2:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
 80012c6:	4618      	mov	r0, r3
 80012c8:	4919      	ldr	r1, [pc, #100]	; (8001330 <B1_ISR+0xd8>)
 80012ca:	68fa      	ldr	r2, [r7, #12]
 80012cc:	4613      	mov	r3, r2
 80012ce:	009b      	lsls	r3, r3, #2
 80012d0:	4413      	add	r3, r2
 80012d2:	00db      	lsls	r3, r3, #3
 80012d4:	440b      	add	r3, r1
 80012d6:	3304      	adds	r3, #4
 80012d8:	681b      	ldr	r3, [r3, #0]
 80012da:	17da      	asrs	r2, r3, #31
 80012dc:	4698      	mov	r8, r3
 80012de:	4691      	mov	r9, r2
 80012e0:	4642      	mov	r2, r8
 80012e2:	464b      	mov	r3, r9
 80012e4:	4601      	mov	r1, r0
 80012e6:	2000      	movs	r0, #0
 80012e8:	f007 fe16 	bl	8008f18 <HAL_FLASH_Program>
		for(i=0;i<22;i++)
 80012ec:	68fb      	ldr	r3, [r7, #12]
 80012ee:	3301      	adds	r3, #1
 80012f0:	60fb      	str	r3, [r7, #12]
 80012f2:	68fb      	ldr	r3, [r7, #12]
 80012f4:	2b15      	cmp	r3, #21
 80012f6:	dde1      	ble.n	80012bc <B1_ISR+0x64>
		}
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+22, collectedPoints);
 80012f8:	4b0e      	ldr	r3, [pc, #56]	; (8001334 <B1_ISR+0xdc>)
 80012fa:	781b      	ldrb	r3, [r3, #0]
 80012fc:	b2db      	uxtb	r3, r3
 80012fe:	2200      	movs	r2, #0
 8001300:	461c      	mov	r4, r3
 8001302:	4615      	mov	r5, r2
 8001304:	4622      	mov	r2, r4
 8001306:	462b      	mov	r3, r5
 8001308:	490b      	ldr	r1, [pc, #44]	; (8001338 <B1_ISR+0xe0>)
 800130a:	2000      	movs	r0, #0
 800130c:	f007 fe04 	bl	8008f18 <HAL_FLASH_Program>
		Delay(50);
 8001310:	2032      	movs	r0, #50	; 0x32
 8001312:	f005 fc87 	bl	8006c24 <Delay>
		HAL_FLASH_Lock();
 8001316:	f007 fe75 	bl	8009004 <HAL_FLASH_Lock>
		HAL_UART_Transmit(huart_debugg,(uint8_t*) "\n\rBackup save!\n\r", 16, 10);
 800131a:	230a      	movs	r3, #10
 800131c:	2210      	movs	r2, #16
 800131e:	4907      	ldr	r1, [pc, #28]	; (800133c <B1_ISR+0xe4>)
 8001320:	6878      	ldr	r0, [r7, #4]
 8001322:	f00a ff06 	bl	800c132 <HAL_UART_Transmit>
		NVIC_SystemReset(); //SW reseteljük a mikorvezérlőt
 8001326:	f7ff fe31 	bl	8000f8c <__NVIC_SystemReset>
 800132a:	bf00      	nop
 800132c:	40020400 	.word	0x40020400
 8001330:	20000360 	.word	0x20000360
 8001334:	20000347 	.word	0x20000347
 8001338:	08040016 	.word	0x08040016
 800133c:	080115d4 	.word	0x080115d4

08001340 <B_NUCLEO_ISR>:
}

void B_NUCLEO_ISR(UART_HandleTypeDef *huart_debugg)
{
 8001340:	b580      	push	{r7, lr}
 8001342:	b084      	sub	sp, #16
 8001344:	af00      	add	r7, sp, #0
 8001346:	6078      	str	r0, [r7, #4]
	//Milyen módban voltunk eddig?
	uint8_t tmp= *(__IO uint8_t *) FLASH_ADDRESS_MODESELECTOR;
 8001348:	4b41      	ldr	r3, [pc, #260]	; (8001450 <B_NUCLEO_ISR+0x110>)
 800134a:	781b      	ldrb	r3, [r3, #0]
 800134c:	72fb      	strb	r3, [r7, #11]
	if(tmp==SKILL || tmp==FAST)mode=tmp;
 800134e:	7afb      	ldrb	r3, [r7, #11]
 8001350:	2b52      	cmp	r3, #82	; 0x52
 8001352:	d002      	beq.n	800135a <B_NUCLEO_ISR+0x1a>
 8001354:	7afb      	ldrb	r3, [r7, #11]
 8001356:	2b3f      	cmp	r3, #63	; 0x3f
 8001358:	d103      	bne.n	8001362 <B_NUCLEO_ISR+0x22>
 800135a:	4a3e      	ldr	r2, [pc, #248]	; (8001454 <B_NUCLEO_ISR+0x114>)
 800135c:	7afb      	ldrb	r3, [r7, #11]
 800135e:	7013      	strb	r3, [r2, #0]
 8001360:	e002      	b.n	8001368 <B_NUCLEO_ISR+0x28>
	else mode=SKILL;
 8001362:	4b3c      	ldr	r3, [pc, #240]	; (8001454 <B_NUCLEO_ISR+0x114>)
 8001364:	2252      	movs	r2, #82	; 0x52
 8001366:	701a      	strb	r2, [r3, #0]

	//section 7 törlése, hogy újraírhassuk a módot jelző bytot
	HAL_FLASH_Unlock();
 8001368:	f007 fe2a 	bl	8008fc0 <HAL_FLASH_Unlock>
	Delay(50);
 800136c:	2032      	movs	r0, #50	; 0x32
 800136e:	f005 fc59 	bl	8006c24 <Delay>
	FLASH_Erase_Sector(7, FLASH_VOLTAGE_RANGE_3);
 8001372:	2102      	movs	r1, #2
 8001374:	2007      	movs	r0, #7
 8001376:	f007 ff95 	bl	80092a4 <FLASH_Erase_Sector>
	Delay(50);
 800137a:	2032      	movs	r0, #50	; 0x32
 800137c:	f005 fc52 	bl	8006c24 <Delay>
	HAL_FLASH_Lock();
 8001380:	f007 fe40 	bl	8009004 <HAL_FLASH_Lock>

	LED_NUCLEO(0);
 8001384:	2200      	movs	r2, #0
 8001386:	2120      	movs	r1, #32
 8001388:	4833      	ldr	r0, [pc, #204]	; (8001458 <B_NUCLEO_ISR+0x118>)
 800138a:	f008 f97f 	bl	800968c <HAL_GPIO_WritePin>
	LED_Y(0);
 800138e:	2201      	movs	r2, #1
 8001390:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001394:	4831      	ldr	r0, [pc, #196]	; (800145c <B_NUCLEO_ISR+0x11c>)
 8001396:	f008 f979 	bl	800968c <HAL_GPIO_WritePin>
	LED_G(0);
 800139a:	2201      	movs	r2, #1
 800139c:	2102      	movs	r1, #2
 800139e:	482f      	ldr	r0, [pc, #188]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013a0:	f008 f974 	bl	800968c <HAL_GPIO_WritePin>
	LED_B(0);
 80013a4:	2201      	movs	r2, #1
 80013a6:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80013aa:	482c      	ldr	r0, [pc, #176]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013ac:	f008 f96e 	bl	800968c <HAL_GPIO_WritePin>
	LED_R(0);
 80013b0:	2201      	movs	r2, #1
 80013b2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013b6:	4829      	ldr	r0, [pc, #164]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013b8:	f008 f968 	bl	800968c <HAL_GPIO_WritePin>
	int i;
	for(i=0;i<8;i++)
 80013bc:	2300      	movs	r3, #0
 80013be:	60fb      	str	r3, [r7, #12]
 80013c0:	e01c      	b.n	80013fc <B_NUCLEO_ISR+0xbc>
	{
		LED_NUCLEO_TOGGLE;
 80013c2:	2120      	movs	r1, #32
 80013c4:	4824      	ldr	r0, [pc, #144]	; (8001458 <B_NUCLEO_ISR+0x118>)
 80013c6:	f008 f97a 	bl	80096be <HAL_GPIO_TogglePin>
		LED_Y_TOGGLE;
 80013ca:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80013ce:	4823      	ldr	r0, [pc, #140]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013d0:	f008 f975 	bl	80096be <HAL_GPIO_TogglePin>
		LED_G_TOGGLE;
 80013d4:	2102      	movs	r1, #2
 80013d6:	4821      	ldr	r0, [pc, #132]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013d8:	f008 f971 	bl	80096be <HAL_GPIO_TogglePin>
		LED_B_TOGGLE;
 80013dc:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80013e0:	481e      	ldr	r0, [pc, #120]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013e2:	f008 f96c 	bl	80096be <HAL_GPIO_TogglePin>
		LED_R_TOGGLE;
 80013e6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013ea:	481c      	ldr	r0, [pc, #112]	; (800145c <B_NUCLEO_ISR+0x11c>)
 80013ec:	f008 f967 	bl	80096be <HAL_GPIO_TogglePin>
		Delay(150);
 80013f0:	2096      	movs	r0, #150	; 0x96
 80013f2:	f005 fc17 	bl	8006c24 <Delay>
	for(i=0;i<8;i++)
 80013f6:	68fb      	ldr	r3, [r7, #12]
 80013f8:	3301      	adds	r3, #1
 80013fa:	60fb      	str	r3, [r7, #12]
 80013fc:	68fb      	ldr	r3, [r7, #12]
 80013fe:	2b07      	cmp	r3, #7
 8001400:	dddf      	ble.n	80013c2 <B_NUCLEO_ISR+0x82>
	}

	//Állítsuk át a módot
	HAL_FLASH_Unlock();
 8001402:	f007 fddd 	bl	8008fc0 <HAL_FLASH_Unlock>
	Delay(50);
 8001406:	2032      	movs	r0, #50	; 0x32
 8001408:	f005 fc0c 	bl	8006c24 <Delay>
	if(mode==SKILL) HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_MODESELECTOR, FAST); //ha eddig skill mód volt akor msot gyors lesz
 800140c:	4b11      	ldr	r3, [pc, #68]	; (8001454 <B_NUCLEO_ISR+0x114>)
 800140e:	781b      	ldrb	r3, [r3, #0]
 8001410:	2b52      	cmp	r3, #82	; 0x52
 8001412:	d108      	bne.n	8001426 <B_NUCLEO_ISR+0xe6>
 8001414:	f04f 023f 	mov.w	r2, #63	; 0x3f
 8001418:	f04f 0300 	mov.w	r3, #0
 800141c:	490c      	ldr	r1, [pc, #48]	; (8001450 <B_NUCLEO_ISR+0x110>)
 800141e:	2000      	movs	r0, #0
 8001420:	f007 fd7a 	bl	8008f18 <HAL_FLASH_Program>
 8001424:	e007      	b.n	8001436 <B_NUCLEO_ISR+0xf6>
	else HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_MODESELECTOR, SKILL); //ha eddig gyors mód vagy memóriaszemét volt akkor msot skil lesz
 8001426:	f04f 0252 	mov.w	r2, #82	; 0x52
 800142a:	f04f 0300 	mov.w	r3, #0
 800142e:	4908      	ldr	r1, [pc, #32]	; (8001450 <B_NUCLEO_ISR+0x110>)
 8001430:	2000      	movs	r0, #0
 8001432:	f007 fd71 	bl	8008f18 <HAL_FLASH_Program>
	Delay(50);
 8001436:	2032      	movs	r0, #50	; 0x32
 8001438:	f005 fbf4 	bl	8006c24 <Delay>
	HAL_FLASH_Lock();
 800143c:	f007 fde2 	bl	8009004 <HAL_FLASH_Lock>
	HAL_UART_Transmit(huart_debugg, (uint8_t*)"\n\rMode change!\n\r", 16, 10);
 8001440:	230a      	movs	r3, #10
 8001442:	2210      	movs	r2, #16
 8001444:	4906      	ldr	r1, [pc, #24]	; (8001460 <B_NUCLEO_ISR+0x120>)
 8001446:	6878      	ldr	r0, [r7, #4]
 8001448:	f00a fe73 	bl	800c132 <HAL_UART_Transmit>
	NVIC_SystemReset(); //SW reseteljük a mikorvezérlőt
 800144c:	f7ff fd9e 	bl	8000f8c <__NVIC_SystemReset>
 8001450:	08060000 	.word	0x08060000
 8001454:	20000336 	.word	0x20000336
 8001458:	40020000 	.word	0x40020000
 800145c:	40020400 	.word	0x40020400
 8001460:	080115e8 	.word	0x080115e8

08001464 <Create_Nodes>:
uint8_t dir[2];

node Nodes[22];

void Create_Nodes(UART_HandleTypeDef *huart_debugg)
{
 8001464:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8001468:	b09c      	sub	sp, #112	; 0x70
 800146a:	af00      	add	r7, sp, #0
 800146c:	6078      	str	r0, [r7, #4]
	int i;
	orientation=FORWARD;
 800146e:	4b10      	ldr	r3, [pc, #64]	; (80014b0 <Create_Nodes+0x4c>)
 8001470:	2200      	movs	r2, #0
 8001472:	701a      	strb	r2, [r3, #0]
	collectedPoints=25;
 8001474:	4b0f      	ldr	r3, [pc, #60]	; (80014b4 <Create_Nodes+0x50>)
 8001476:	2219      	movs	r2, #25
 8001478:	701a      	strb	r2, [r3, #0]
	laneChange=0;
 800147a:	4b0f      	ldr	r3, [pc, #60]	; (80014b8 <Create_Nodes+0x54>)
 800147c:	2200      	movs	r2, #0
 800147e:	701a      	strb	r2, [r3, #0]
	path=LEFT;
 8001480:	4b0e      	ldr	r3, [pc, #56]	; (80014bc <Create_Nodes+0x58>)
 8001482:	2200      	movs	r2, #0
 8001484:	701a      	strb	r2, [r3, #0]

	nodeDetected=0;
 8001486:	4b0e      	ldr	r3, [pc, #56]	; (80014c0 <Create_Nodes+0x5c>)
 8001488:	2200      	movs	r2, #0
 800148a:	701a      	strb	r2, [r3, #0]
	v_control=SLEEP;
 800148c:	4b0d      	ldr	r3, [pc, #52]	; (80014c4 <Create_Nodes+0x60>)
 800148e:	2204      	movs	r2, #4
 8001490:	701a      	strb	r2, [r3, #0]
	pos[MY]	='S';
 8001492:	4b0d      	ldr	r3, [pc, #52]	; (80014c8 <Create_Nodes+0x64>)
 8001494:	2253      	movs	r2, #83	; 0x53
 8001496:	701a      	strb	r2, [r3, #0]
	pos[NEXT]='Q'; 				//my, next,
 8001498:	4b0b      	ldr	r3, [pc, #44]	; (80014c8 <Create_Nodes+0x64>)
 800149a:	2251      	movs	r2, #81	; 0x51
 800149c:	705a      	strb	r2, [r3, #1]

	if(mode!=SKILL)return;
 800149e:	4b0b      	ldr	r3, [pc, #44]	; (80014cc <Create_Nodes+0x68>)
 80014a0:	781b      	ldrb	r3, [r3, #0]
 80014a2:	2b52      	cmp	r3, #82	; 0x52
 80014a4:	f041 80e4 	bne.w	8002670 <Create_Nodes+0x120c>

	for(i=0;i<22;i++)
 80014a8:	2300      	movs	r3, #0
 80014aa:	66fb      	str	r3, [r7, #108]	; 0x6c
 80014ac:	e0e8      	b.n	8001680 <Create_Nodes+0x21c>
 80014ae:	bf00      	nop
 80014b0:	20000344 	.word	0x20000344
 80014b4:	20000347 	.word	0x20000347
 80014b8:	20000348 	.word	0x20000348
 80014bc:	20000346 	.word	0x20000346
 80014c0:	20000345 	.word	0x20000345
 80014c4:	20000349 	.word	0x20000349
 80014c8:	20000358 	.word	0x20000358
 80014cc:	20000336 	.word	0x20000336
	{
		Nodes[i].id=65+i;
 80014d0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80014d2:	b2db      	uxtb	r3, r3
 80014d4:	3341      	adds	r3, #65	; 0x41
 80014d6:	b2d8      	uxtb	r0, r3
 80014d8:	49c4      	ldr	r1, [pc, #784]	; (80017ec <Create_Nodes+0x388>)
 80014da:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80014dc:	4613      	mov	r3, r2
 80014de:	009b      	lsls	r3, r3, #2
 80014e0:	4413      	add	r3, r2
 80014e2:	00db      	lsls	r3, r3, #3
 80014e4:	440b      	add	r3, r1
 80014e6:	4602      	mov	r2, r0
 80014e8:	701a      	strb	r2, [r3, #0]
		Nodes[i].worth=0;
 80014ea:	49c0      	ldr	r1, [pc, #768]	; (80017ec <Create_Nodes+0x388>)
 80014ec:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80014ee:	4613      	mov	r3, r2
 80014f0:	009b      	lsls	r3, r3, #2
 80014f2:	4413      	add	r3, r2
 80014f4:	00db      	lsls	r3, r3, #3
 80014f6:	440b      	add	r3, r1
 80014f8:	3304      	adds	r3, #4
 80014fa:	2200      	movs	r2, #0
 80014fc:	601a      	str	r2, [r3, #0]
		Nodes[i].type=0;
 80014fe:	49bb      	ldr	r1, [pc, #748]	; (80017ec <Create_Nodes+0x388>)
 8001500:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001502:	4613      	mov	r3, r2
 8001504:	009b      	lsls	r3, r3, #2
 8001506:	4413      	add	r3, r2
 8001508:	00db      	lsls	r3, r3, #3
 800150a:	440b      	add	r3, r1
 800150c:	3308      	adds	r3, #8
 800150e:	2200      	movs	r2, #0
 8001510:	601a      	str	r2, [r3, #0]
		VALUE_2(Nodes[i].neighbours,0,0,0,0,0,0);
 8001512:	49b6      	ldr	r1, [pc, #728]	; (80017ec <Create_Nodes+0x388>)
 8001514:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001516:	4613      	mov	r3, r2
 8001518:	009b      	lsls	r3, r3, #2
 800151a:	4413      	add	r3, r2
 800151c:	00db      	lsls	r3, r3, #3
 800151e:	440b      	add	r3, r1
 8001520:	330c      	adds	r3, #12
 8001522:	2200      	movs	r2, #0
 8001524:	701a      	strb	r2, [r3, #0]
 8001526:	49b1      	ldr	r1, [pc, #708]	; (80017ec <Create_Nodes+0x388>)
 8001528:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800152a:	4613      	mov	r3, r2
 800152c:	009b      	lsls	r3, r3, #2
 800152e:	4413      	add	r3, r2
 8001530:	00db      	lsls	r3, r3, #3
 8001532:	440b      	add	r3, r1
 8001534:	330d      	adds	r3, #13
 8001536:	2200      	movs	r2, #0
 8001538:	701a      	strb	r2, [r3, #0]
 800153a:	49ac      	ldr	r1, [pc, #688]	; (80017ec <Create_Nodes+0x388>)
 800153c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800153e:	4613      	mov	r3, r2
 8001540:	009b      	lsls	r3, r3, #2
 8001542:	4413      	add	r3, r2
 8001544:	00db      	lsls	r3, r3, #3
 8001546:	440b      	add	r3, r1
 8001548:	330e      	adds	r3, #14
 800154a:	2200      	movs	r2, #0
 800154c:	701a      	strb	r2, [r3, #0]
 800154e:	49a7      	ldr	r1, [pc, #668]	; (80017ec <Create_Nodes+0x388>)
 8001550:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001552:	4613      	mov	r3, r2
 8001554:	009b      	lsls	r3, r3, #2
 8001556:	4413      	add	r3, r2
 8001558:	00db      	lsls	r3, r3, #3
 800155a:	440b      	add	r3, r1
 800155c:	330f      	adds	r3, #15
 800155e:	2200      	movs	r2, #0
 8001560:	701a      	strb	r2, [r3, #0]
 8001562:	49a2      	ldr	r1, [pc, #648]	; (80017ec <Create_Nodes+0x388>)
 8001564:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001566:	4613      	mov	r3, r2
 8001568:	009b      	lsls	r3, r3, #2
 800156a:	4413      	add	r3, r2
 800156c:	00db      	lsls	r3, r3, #3
 800156e:	440b      	add	r3, r1
 8001570:	3310      	adds	r3, #16
 8001572:	2200      	movs	r2, #0
 8001574:	701a      	strb	r2, [r3, #0]
 8001576:	499d      	ldr	r1, [pc, #628]	; (80017ec <Create_Nodes+0x388>)
 8001578:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800157a:	4613      	mov	r3, r2
 800157c:	009b      	lsls	r3, r3, #2
 800157e:	4413      	add	r3, r2
 8001580:	00db      	lsls	r3, r3, #3
 8001582:	440b      	add	r3, r1
 8001584:	3311      	adds	r3, #17
 8001586:	2200      	movs	r2, #0
 8001588:	701a      	strb	r2, [r3, #0]
		VALUE_2(Nodes[i].directions,0,0,0,0,0,0);
 800158a:	4998      	ldr	r1, [pc, #608]	; (80017ec <Create_Nodes+0x388>)
 800158c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800158e:	4613      	mov	r3, r2
 8001590:	009b      	lsls	r3, r3, #2
 8001592:	4413      	add	r3, r2
 8001594:	00db      	lsls	r3, r3, #3
 8001596:	440b      	add	r3, r1
 8001598:	3312      	adds	r3, #18
 800159a:	2200      	movs	r2, #0
 800159c:	701a      	strb	r2, [r3, #0]
 800159e:	4993      	ldr	r1, [pc, #588]	; (80017ec <Create_Nodes+0x388>)
 80015a0:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015a2:	4613      	mov	r3, r2
 80015a4:	009b      	lsls	r3, r3, #2
 80015a6:	4413      	add	r3, r2
 80015a8:	00db      	lsls	r3, r3, #3
 80015aa:	440b      	add	r3, r1
 80015ac:	3313      	adds	r3, #19
 80015ae:	2200      	movs	r2, #0
 80015b0:	701a      	strb	r2, [r3, #0]
 80015b2:	498e      	ldr	r1, [pc, #568]	; (80017ec <Create_Nodes+0x388>)
 80015b4:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015b6:	4613      	mov	r3, r2
 80015b8:	009b      	lsls	r3, r3, #2
 80015ba:	4413      	add	r3, r2
 80015bc:	00db      	lsls	r3, r3, #3
 80015be:	440b      	add	r3, r1
 80015c0:	3314      	adds	r3, #20
 80015c2:	2200      	movs	r2, #0
 80015c4:	701a      	strb	r2, [r3, #0]
 80015c6:	4989      	ldr	r1, [pc, #548]	; (80017ec <Create_Nodes+0x388>)
 80015c8:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015ca:	4613      	mov	r3, r2
 80015cc:	009b      	lsls	r3, r3, #2
 80015ce:	4413      	add	r3, r2
 80015d0:	00db      	lsls	r3, r3, #3
 80015d2:	440b      	add	r3, r1
 80015d4:	3315      	adds	r3, #21
 80015d6:	2200      	movs	r2, #0
 80015d8:	701a      	strb	r2, [r3, #0]
 80015da:	4984      	ldr	r1, [pc, #528]	; (80017ec <Create_Nodes+0x388>)
 80015dc:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015de:	4613      	mov	r3, r2
 80015e0:	009b      	lsls	r3, r3, #2
 80015e2:	4413      	add	r3, r2
 80015e4:	00db      	lsls	r3, r3, #3
 80015e6:	440b      	add	r3, r1
 80015e8:	3316      	adds	r3, #22
 80015ea:	2200      	movs	r2, #0
 80015ec:	701a      	strb	r2, [r3, #0]
 80015ee:	497f      	ldr	r1, [pc, #508]	; (80017ec <Create_Nodes+0x388>)
 80015f0:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80015f2:	4613      	mov	r3, r2
 80015f4:	009b      	lsls	r3, r3, #2
 80015f6:	4413      	add	r3, r2
 80015f8:	00db      	lsls	r3, r3, #3
 80015fa:	440b      	add	r3, r1
 80015fc:	3317      	adds	r3, #23
 80015fe:	2200      	movs	r2, #0
 8001600:	701a      	strb	r2, [r3, #0]
		VALUE_2(Nodes[i].distance,0,0,0,0,0,0);
 8001602:	497a      	ldr	r1, [pc, #488]	; (80017ec <Create_Nodes+0x388>)
 8001604:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001606:	4613      	mov	r3, r2
 8001608:	009b      	lsls	r3, r3, #2
 800160a:	4413      	add	r3, r2
 800160c:	00db      	lsls	r3, r3, #3
 800160e:	440b      	add	r3, r1
 8001610:	3318      	adds	r3, #24
 8001612:	2200      	movs	r2, #0
 8001614:	801a      	strh	r2, [r3, #0]
 8001616:	4975      	ldr	r1, [pc, #468]	; (80017ec <Create_Nodes+0x388>)
 8001618:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800161a:	4613      	mov	r3, r2
 800161c:	009b      	lsls	r3, r3, #2
 800161e:	4413      	add	r3, r2
 8001620:	00db      	lsls	r3, r3, #3
 8001622:	440b      	add	r3, r1
 8001624:	331a      	adds	r3, #26
 8001626:	2200      	movs	r2, #0
 8001628:	801a      	strh	r2, [r3, #0]
 800162a:	4970      	ldr	r1, [pc, #448]	; (80017ec <Create_Nodes+0x388>)
 800162c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800162e:	4613      	mov	r3, r2
 8001630:	009b      	lsls	r3, r3, #2
 8001632:	4413      	add	r3, r2
 8001634:	00db      	lsls	r3, r3, #3
 8001636:	440b      	add	r3, r1
 8001638:	331c      	adds	r3, #28
 800163a:	2200      	movs	r2, #0
 800163c:	801a      	strh	r2, [r3, #0]
 800163e:	496b      	ldr	r1, [pc, #428]	; (80017ec <Create_Nodes+0x388>)
 8001640:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001642:	4613      	mov	r3, r2
 8001644:	009b      	lsls	r3, r3, #2
 8001646:	4413      	add	r3, r2
 8001648:	00db      	lsls	r3, r3, #3
 800164a:	440b      	add	r3, r1
 800164c:	331e      	adds	r3, #30
 800164e:	2200      	movs	r2, #0
 8001650:	801a      	strh	r2, [r3, #0]
 8001652:	4966      	ldr	r1, [pc, #408]	; (80017ec <Create_Nodes+0x388>)
 8001654:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001656:	4613      	mov	r3, r2
 8001658:	009b      	lsls	r3, r3, #2
 800165a:	4413      	add	r3, r2
 800165c:	00db      	lsls	r3, r3, #3
 800165e:	440b      	add	r3, r1
 8001660:	3320      	adds	r3, #32
 8001662:	2200      	movs	r2, #0
 8001664:	801a      	strh	r2, [r3, #0]
 8001666:	4961      	ldr	r1, [pc, #388]	; (80017ec <Create_Nodes+0x388>)
 8001668:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800166a:	4613      	mov	r3, r2
 800166c:	009b      	lsls	r3, r3, #2
 800166e:	4413      	add	r3, r2
 8001670:	00db      	lsls	r3, r3, #3
 8001672:	440b      	add	r3, r1
 8001674:	3322      	adds	r3, #34	; 0x22
 8001676:	2200      	movs	r2, #0
 8001678:	801a      	strh	r2, [r3, #0]
	for(i=0;i<22;i++)
 800167a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800167c:	3301      	adds	r3, #1
 800167e:	66fb      	str	r3, [r7, #108]	; 0x6c
 8001680:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001682:	2b15      	cmp	r3, #21
 8001684:	f77f af24 	ble.w	80014d0 <Create_Nodes+0x6c>
	}
	//A node
	N('A').worth=2;
 8001688:	4b58      	ldr	r3, [pc, #352]	; (80017ec <Create_Nodes+0x388>)
 800168a:	2202      	movs	r2, #2
 800168c:	605a      	str	r2, [r3, #4]
	N('A').type=1;
 800168e:	4b57      	ldr	r3, [pc, #348]	; (80017ec <Create_Nodes+0x388>)
 8001690:	2201      	movs	r2, #1
 8001692:	609a      	str	r2, [r3, #8]
	VALUE_2(N('A').neighbours,'C',0,0,'B',0,'D');
 8001694:	4b55      	ldr	r3, [pc, #340]	; (80017ec <Create_Nodes+0x388>)
 8001696:	2243      	movs	r2, #67	; 0x43
 8001698:	731a      	strb	r2, [r3, #12]
 800169a:	4b54      	ldr	r3, [pc, #336]	; (80017ec <Create_Nodes+0x388>)
 800169c:	2200      	movs	r2, #0
 800169e:	735a      	strb	r2, [r3, #13]
 80016a0:	4b52      	ldr	r3, [pc, #328]	; (80017ec <Create_Nodes+0x388>)
 80016a2:	2200      	movs	r2, #0
 80016a4:	739a      	strb	r2, [r3, #14]
 80016a6:	4b51      	ldr	r3, [pc, #324]	; (80017ec <Create_Nodes+0x388>)
 80016a8:	2242      	movs	r2, #66	; 0x42
 80016aa:	73da      	strb	r2, [r3, #15]
 80016ac:	4b4f      	ldr	r3, [pc, #316]	; (80017ec <Create_Nodes+0x388>)
 80016ae:	2200      	movs	r2, #0
 80016b0:	741a      	strb	r2, [r3, #16]
 80016b2:	4b4e      	ldr	r3, [pc, #312]	; (80017ec <Create_Nodes+0x388>)
 80016b4:	2244      	movs	r2, #68	; 0x44
 80016b6:	745a      	strb	r2, [r3, #17]
	VALUE_2(N('A').directions,1,0,0,2,0,1);
 80016b8:	4b4c      	ldr	r3, [pc, #304]	; (80017ec <Create_Nodes+0x388>)
 80016ba:	2201      	movs	r2, #1
 80016bc:	749a      	strb	r2, [r3, #18]
 80016be:	4b4b      	ldr	r3, [pc, #300]	; (80017ec <Create_Nodes+0x388>)
 80016c0:	2200      	movs	r2, #0
 80016c2:	74da      	strb	r2, [r3, #19]
 80016c4:	4b49      	ldr	r3, [pc, #292]	; (80017ec <Create_Nodes+0x388>)
 80016c6:	2200      	movs	r2, #0
 80016c8:	751a      	strb	r2, [r3, #20]
 80016ca:	4b48      	ldr	r3, [pc, #288]	; (80017ec <Create_Nodes+0x388>)
 80016cc:	2202      	movs	r2, #2
 80016ce:	755a      	strb	r2, [r3, #21]
 80016d0:	4b46      	ldr	r3, [pc, #280]	; (80017ec <Create_Nodes+0x388>)
 80016d2:	2200      	movs	r2, #0
 80016d4:	759a      	strb	r2, [r3, #22]
 80016d6:	4b45      	ldr	r3, [pc, #276]	; (80017ec <Create_Nodes+0x388>)
 80016d8:	2201      	movs	r2, #1
 80016da:	75da      	strb	r2, [r3, #23]
	VALUE_2(N('A').distance,199,0,0,241,0,198);
 80016dc:	4b43      	ldr	r3, [pc, #268]	; (80017ec <Create_Nodes+0x388>)
 80016de:	22c7      	movs	r2, #199	; 0xc7
 80016e0:	831a      	strh	r2, [r3, #24]
 80016e2:	4b42      	ldr	r3, [pc, #264]	; (80017ec <Create_Nodes+0x388>)
 80016e4:	2200      	movs	r2, #0
 80016e6:	835a      	strh	r2, [r3, #26]
 80016e8:	4b40      	ldr	r3, [pc, #256]	; (80017ec <Create_Nodes+0x388>)
 80016ea:	2200      	movs	r2, #0
 80016ec:	839a      	strh	r2, [r3, #28]
 80016ee:	4b3f      	ldr	r3, [pc, #252]	; (80017ec <Create_Nodes+0x388>)
 80016f0:	22f1      	movs	r2, #241	; 0xf1
 80016f2:	83da      	strh	r2, [r3, #30]
 80016f4:	4b3d      	ldr	r3, [pc, #244]	; (80017ec <Create_Nodes+0x388>)
 80016f6:	2200      	movs	r2, #0
 80016f8:	841a      	strh	r2, [r3, #32]
 80016fa:	4b3c      	ldr	r3, [pc, #240]	; (80017ec <Create_Nodes+0x388>)
 80016fc:	22c6      	movs	r2, #198	; 0xc6
 80016fe:	845a      	strh	r2, [r3, #34]	; 0x22
	N('A').middle=NEIGHBOUR6;
 8001700:	4b3a      	ldr	r3, [pc, #232]	; (80017ec <Create_Nodes+0x388>)
 8001702:	2205      	movs	r2, #5
 8001704:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24

	//B node
	N('B').worth=2;
 8001708:	4b38      	ldr	r3, [pc, #224]	; (80017ec <Create_Nodes+0x388>)
 800170a:	2202      	movs	r2, #2
 800170c:	62da      	str	r2, [r3, #44]	; 0x2c
	N('B').type=1;
 800170e:	4b37      	ldr	r3, [pc, #220]	; (80017ec <Create_Nodes+0x388>)
 8001710:	2201      	movs	r2, #1
 8001712:	631a      	str	r2, [r3, #48]	; 0x30
	VALUE_2(N('B').neighbours,'D',0,'A',0,0,'E');
 8001714:	4b35      	ldr	r3, [pc, #212]	; (80017ec <Create_Nodes+0x388>)
 8001716:	2244      	movs	r2, #68	; 0x44
 8001718:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800171c:	4b33      	ldr	r3, [pc, #204]	; (80017ec <Create_Nodes+0x388>)
 800171e:	2200      	movs	r2, #0
 8001720:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001724:	4b31      	ldr	r3, [pc, #196]	; (80017ec <Create_Nodes+0x388>)
 8001726:	2241      	movs	r2, #65	; 0x41
 8001728:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 800172c:	4b2f      	ldr	r3, [pc, #188]	; (80017ec <Create_Nodes+0x388>)
 800172e:	2200      	movs	r2, #0
 8001730:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 8001734:	4b2d      	ldr	r3, [pc, #180]	; (80017ec <Create_Nodes+0x388>)
 8001736:	2200      	movs	r2, #0
 8001738:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800173c:	4b2b      	ldr	r3, [pc, #172]	; (80017ec <Create_Nodes+0x388>)
 800173e:	2245      	movs	r2, #69	; 0x45
 8001740:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
	VALUE_2(N('B').directions,1,0,1,0,0,1);
 8001744:	4b29      	ldr	r3, [pc, #164]	; (80017ec <Create_Nodes+0x388>)
 8001746:	2201      	movs	r2, #1
 8001748:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 800174c:	4b27      	ldr	r3, [pc, #156]	; (80017ec <Create_Nodes+0x388>)
 800174e:	2200      	movs	r2, #0
 8001750:	f883 203b 	strb.w	r2, [r3, #59]	; 0x3b
 8001754:	4b25      	ldr	r3, [pc, #148]	; (80017ec <Create_Nodes+0x388>)
 8001756:	2201      	movs	r2, #1
 8001758:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800175c:	4b23      	ldr	r3, [pc, #140]	; (80017ec <Create_Nodes+0x388>)
 800175e:	2200      	movs	r2, #0
 8001760:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001764:	4b21      	ldr	r3, [pc, #132]	; (80017ec <Create_Nodes+0x388>)
 8001766:	2200      	movs	r2, #0
 8001768:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800176c:	4b1f      	ldr	r3, [pc, #124]	; (80017ec <Create_Nodes+0x388>)
 800176e:	2201      	movs	r2, #1
 8001770:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
	VALUE_2(N('B').distance,199,0,241,0,0,198);
 8001774:	4b1d      	ldr	r3, [pc, #116]	; (80017ec <Create_Nodes+0x388>)
 8001776:	22c7      	movs	r2, #199	; 0xc7
 8001778:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 800177c:	4b1b      	ldr	r3, [pc, #108]	; (80017ec <Create_Nodes+0x388>)
 800177e:	2200      	movs	r2, #0
 8001780:	f8a3 2042 	strh.w	r2, [r3, #66]	; 0x42
 8001784:	4b19      	ldr	r3, [pc, #100]	; (80017ec <Create_Nodes+0x388>)
 8001786:	22f1      	movs	r2, #241	; 0xf1
 8001788:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 800178c:	4b17      	ldr	r3, [pc, #92]	; (80017ec <Create_Nodes+0x388>)
 800178e:	2200      	movs	r2, #0
 8001790:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 8001794:	4b15      	ldr	r3, [pc, #84]	; (80017ec <Create_Nodes+0x388>)
 8001796:	2200      	movs	r2, #0
 8001798:	f8a3 2048 	strh.w	r2, [r3, #72]	; 0x48
 800179c:	4b13      	ldr	r3, [pc, #76]	; (80017ec <Create_Nodes+0x388>)
 800179e:	22c6      	movs	r2, #198	; 0xc6
 80017a0:	f8a3 204a 	strh.w	r2, [r3, #74]	; 0x4a
	N('B').middle=NEIGHBOUR1;
 80017a4:	4b11      	ldr	r3, [pc, #68]	; (80017ec <Create_Nodes+0x388>)
 80017a6:	2200      	movs	r2, #0
 80017a8:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c

	//C node
	N('C').worth=2;
 80017ac:	4b0f      	ldr	r3, [pc, #60]	; (80017ec <Create_Nodes+0x388>)
 80017ae:	2202      	movs	r2, #2
 80017b0:	655a      	str	r2, [r3, #84]	; 0x54
	N('C').type=2;
 80017b2:	4b0e      	ldr	r3, [pc, #56]	; (80017ec <Create_Nodes+0x388>)
 80017b4:	2202      	movs	r2, #2
 80017b6:	659a      	str	r2, [r3, #88]	; 0x58
	VALUE_2(N('C').neighbours,'F',0,0,0,0,'A');
 80017b8:	4b0c      	ldr	r3, [pc, #48]	; (80017ec <Create_Nodes+0x388>)
 80017ba:	2246      	movs	r2, #70	; 0x46
 80017bc:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 80017c0:	4b0a      	ldr	r3, [pc, #40]	; (80017ec <Create_Nodes+0x388>)
 80017c2:	2200      	movs	r2, #0
 80017c4:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 80017c8:	4b08      	ldr	r3, [pc, #32]	; (80017ec <Create_Nodes+0x388>)
 80017ca:	2200      	movs	r2, #0
 80017cc:	f883 205e 	strb.w	r2, [r3, #94]	; 0x5e
 80017d0:	4b06      	ldr	r3, [pc, #24]	; (80017ec <Create_Nodes+0x388>)
 80017d2:	2200      	movs	r2, #0
 80017d4:	f883 205f 	strb.w	r2, [r3, #95]	; 0x5f
 80017d8:	4b04      	ldr	r3, [pc, #16]	; (80017ec <Create_Nodes+0x388>)
 80017da:	2200      	movs	r2, #0
 80017dc:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
 80017e0:	4b02      	ldr	r3, [pc, #8]	; (80017ec <Create_Nodes+0x388>)
 80017e2:	2241      	movs	r2, #65	; 0x41
 80017e4:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
 80017e8:	e002      	b.n	80017f0 <Create_Nodes+0x38c>
 80017ea:	bf00      	nop
 80017ec:	20000360 	.word	0x20000360
	VALUE_2(N('C').directions,2,0,0,0,0,2);
 80017f0:	4bc9      	ldr	r3, [pc, #804]	; (8001b18 <Create_Nodes+0x6b4>)
 80017f2:	2202      	movs	r2, #2
 80017f4:	f883 2062 	strb.w	r2, [r3, #98]	; 0x62
 80017f8:	4bc7      	ldr	r3, [pc, #796]	; (8001b18 <Create_Nodes+0x6b4>)
 80017fa:	2200      	movs	r2, #0
 80017fc:	f883 2063 	strb.w	r2, [r3, #99]	; 0x63
 8001800:	4bc5      	ldr	r3, [pc, #788]	; (8001b18 <Create_Nodes+0x6b4>)
 8001802:	2200      	movs	r2, #0
 8001804:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
 8001808:	4bc3      	ldr	r3, [pc, #780]	; (8001b18 <Create_Nodes+0x6b4>)
 800180a:	2200      	movs	r2, #0
 800180c:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
 8001810:	4bc1      	ldr	r3, [pc, #772]	; (8001b18 <Create_Nodes+0x6b4>)
 8001812:	2200      	movs	r2, #0
 8001814:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
 8001818:	4bbf      	ldr	r3, [pc, #764]	; (8001b18 <Create_Nodes+0x6b4>)
 800181a:	2202      	movs	r2, #2
 800181c:	f883 2067 	strb.w	r2, [r3, #103]	; 0x67
	VALUE_2(N('C').distance,198,0,0,0,0,199);
 8001820:	4bbd      	ldr	r3, [pc, #756]	; (8001b18 <Create_Nodes+0x6b4>)
 8001822:	22c6      	movs	r2, #198	; 0xc6
 8001824:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 8001828:	4bbb      	ldr	r3, [pc, #748]	; (8001b18 <Create_Nodes+0x6b4>)
 800182a:	2200      	movs	r2, #0
 800182c:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 8001830:	4bb9      	ldr	r3, [pc, #740]	; (8001b18 <Create_Nodes+0x6b4>)
 8001832:	2200      	movs	r2, #0
 8001834:	f8a3 206c 	strh.w	r2, [r3, #108]	; 0x6c
 8001838:	4bb7      	ldr	r3, [pc, #732]	; (8001b18 <Create_Nodes+0x6b4>)
 800183a:	2200      	movs	r2, #0
 800183c:	f8a3 206e 	strh.w	r2, [r3, #110]	; 0x6e
 8001840:	4bb5      	ldr	r3, [pc, #724]	; (8001b18 <Create_Nodes+0x6b4>)
 8001842:	2200      	movs	r2, #0
 8001844:	f8a3 2070 	strh.w	r2, [r3, #112]	; 0x70
 8001848:	4bb3      	ldr	r3, [pc, #716]	; (8001b18 <Create_Nodes+0x6b4>)
 800184a:	22c7      	movs	r2, #199	; 0xc7
 800184c:	f8a3 2072 	strh.w	r2, [r3, #114]	; 0x72
	N('C').middle=NEIGHBOUR1;
 8001850:	4bb1      	ldr	r3, [pc, #708]	; (8001b18 <Create_Nodes+0x6b4>)
 8001852:	2200      	movs	r2, #0
 8001854:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

	//D node
	N('D').worth=2;
 8001858:	4baf      	ldr	r3, [pc, #700]	; (8001b18 <Create_Nodes+0x6b4>)
 800185a:	2202      	movs	r2, #2
 800185c:	67da      	str	r2, [r3, #124]	; 0x7c
	N('D').type=2;
 800185e:	4bae      	ldr	r3, [pc, #696]	; (8001b18 <Create_Nodes+0x6b4>)
 8001860:	2202      	movs	r2, #2
 8001862:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	VALUE_2(N('D').neighbours,'G','I','F','A',0,'B');
 8001866:	4bac      	ldr	r3, [pc, #688]	; (8001b18 <Create_Nodes+0x6b4>)
 8001868:	2247      	movs	r2, #71	; 0x47
 800186a:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 800186e:	4baa      	ldr	r3, [pc, #680]	; (8001b18 <Create_Nodes+0x6b4>)
 8001870:	2249      	movs	r2, #73	; 0x49
 8001872:	f883 2085 	strb.w	r2, [r3, #133]	; 0x85
 8001876:	4ba8      	ldr	r3, [pc, #672]	; (8001b18 <Create_Nodes+0x6b4>)
 8001878:	2246      	movs	r2, #70	; 0x46
 800187a:	f883 2086 	strb.w	r2, [r3, #134]	; 0x86
 800187e:	4ba6      	ldr	r3, [pc, #664]	; (8001b18 <Create_Nodes+0x6b4>)
 8001880:	2241      	movs	r2, #65	; 0x41
 8001882:	f883 2087 	strb.w	r2, [r3, #135]	; 0x87
 8001886:	4ba4      	ldr	r3, [pc, #656]	; (8001b18 <Create_Nodes+0x6b4>)
 8001888:	2200      	movs	r2, #0
 800188a:	f883 2088 	strb.w	r2, [r3, #136]	; 0x88
 800188e:	4ba2      	ldr	r3, [pc, #648]	; (8001b18 <Create_Nodes+0x6b4>)
 8001890:	2242      	movs	r2, #66	; 0x42
 8001892:	f883 2089 	strb.w	r2, [r3, #137]	; 0x89
	VALUE_2(N('D').directions,2,1,1,1,0,2);
 8001896:	4ba0      	ldr	r3, [pc, #640]	; (8001b18 <Create_Nodes+0x6b4>)
 8001898:	2202      	movs	r2, #2
 800189a:	f883 208a 	strb.w	r2, [r3, #138]	; 0x8a
 800189e:	4b9e      	ldr	r3, [pc, #632]	; (8001b18 <Create_Nodes+0x6b4>)
 80018a0:	2201      	movs	r2, #1
 80018a2:	f883 208b 	strb.w	r2, [r3, #139]	; 0x8b
 80018a6:	4b9c      	ldr	r3, [pc, #624]	; (8001b18 <Create_Nodes+0x6b4>)
 80018a8:	2201      	movs	r2, #1
 80018aa:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
 80018ae:	4b9a      	ldr	r3, [pc, #616]	; (8001b18 <Create_Nodes+0x6b4>)
 80018b0:	2201      	movs	r2, #1
 80018b2:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 80018b6:	4b98      	ldr	r3, [pc, #608]	; (8001b18 <Create_Nodes+0x6b4>)
 80018b8:	2200      	movs	r2, #0
 80018ba:	f883 208e 	strb.w	r2, [r3, #142]	; 0x8e
 80018be:	4b96      	ldr	r3, [pc, #600]	; (8001b18 <Create_Nodes+0x6b4>)
 80018c0:	2202      	movs	r2, #2
 80018c2:	f883 208f 	strb.w	r2, [r3, #143]	; 0x8f
	VALUE_2(N('D').distance,198,241,197,198,0,199);
 80018c6:	4b94      	ldr	r3, [pc, #592]	; (8001b18 <Create_Nodes+0x6b4>)
 80018c8:	22c6      	movs	r2, #198	; 0xc6
 80018ca:	f8a3 2090 	strh.w	r2, [r3, #144]	; 0x90
 80018ce:	4b92      	ldr	r3, [pc, #584]	; (8001b18 <Create_Nodes+0x6b4>)
 80018d0:	22f1      	movs	r2, #241	; 0xf1
 80018d2:	f8a3 2092 	strh.w	r2, [r3, #146]	; 0x92
 80018d6:	4b90      	ldr	r3, [pc, #576]	; (8001b18 <Create_Nodes+0x6b4>)
 80018d8:	22c5      	movs	r2, #197	; 0xc5
 80018da:	f8a3 2094 	strh.w	r2, [r3, #148]	; 0x94
 80018de:	4b8e      	ldr	r3, [pc, #568]	; (8001b18 <Create_Nodes+0x6b4>)
 80018e0:	22c6      	movs	r2, #198	; 0xc6
 80018e2:	f8a3 2096 	strh.w	r2, [r3, #150]	; 0x96
 80018e6:	4b8c      	ldr	r3, [pc, #560]	; (8001b18 <Create_Nodes+0x6b4>)
 80018e8:	2200      	movs	r2, #0
 80018ea:	f8a3 2098 	strh.w	r2, [r3, #152]	; 0x98
 80018ee:	4b8a      	ldr	r3, [pc, #552]	; (8001b18 <Create_Nodes+0x6b4>)
 80018f0:	22c7      	movs	r2, #199	; 0xc7
 80018f2:	f8a3 209a 	strh.w	r2, [r3, #154]	; 0x9a
	N('D').middle=NEIGHBOUR2;
 80018f6:	4b88      	ldr	r3, [pc, #544]	; (8001b18 <Create_Nodes+0x6b4>)
 80018f8:	2201      	movs	r2, #1
 80018fa:	f883 209c 	strb.w	r2, [r3, #156]	; 0x9c

	//E node
	N('E').worth=2;
 80018fe:	4b86      	ldr	r3, [pc, #536]	; (8001b18 <Create_Nodes+0x6b4>)
 8001900:	2202      	movs	r2, #2
 8001902:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
	N('E').type=2;
 8001906:	4b84      	ldr	r3, [pc, #528]	; (8001b18 <Create_Nodes+0x6b4>)
 8001908:	2202      	movs	r2, #2
 800190a:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
	VALUE_2(N('E').neighbours,'J',0,'G','B',0,0);
 800190e:	4b82      	ldr	r3, [pc, #520]	; (8001b18 <Create_Nodes+0x6b4>)
 8001910:	224a      	movs	r2, #74	; 0x4a
 8001912:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 8001916:	4b80      	ldr	r3, [pc, #512]	; (8001b18 <Create_Nodes+0x6b4>)
 8001918:	2200      	movs	r2, #0
 800191a:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 800191e:	4b7e      	ldr	r3, [pc, #504]	; (8001b18 <Create_Nodes+0x6b4>)
 8001920:	2247      	movs	r2, #71	; 0x47
 8001922:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 8001926:	4b7c      	ldr	r3, [pc, #496]	; (8001b18 <Create_Nodes+0x6b4>)
 8001928:	2242      	movs	r2, #66	; 0x42
 800192a:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
 800192e:	4b7a      	ldr	r3, [pc, #488]	; (8001b18 <Create_Nodes+0x6b4>)
 8001930:	2200      	movs	r2, #0
 8001932:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 8001936:	4b78      	ldr	r3, [pc, #480]	; (8001b18 <Create_Nodes+0x6b4>)
 8001938:	2200      	movs	r2, #0
 800193a:	f883 20b1 	strb.w	r2, [r3, #177]	; 0xb1
	VALUE_2(N('E').directions,1,0,1,1,0,0);
 800193e:	4b76      	ldr	r3, [pc, #472]	; (8001b18 <Create_Nodes+0x6b4>)
 8001940:	2201      	movs	r2, #1
 8001942:	f883 20b2 	strb.w	r2, [r3, #178]	; 0xb2
 8001946:	4b74      	ldr	r3, [pc, #464]	; (8001b18 <Create_Nodes+0x6b4>)
 8001948:	2200      	movs	r2, #0
 800194a:	f883 20b3 	strb.w	r2, [r3, #179]	; 0xb3
 800194e:	4b72      	ldr	r3, [pc, #456]	; (8001b18 <Create_Nodes+0x6b4>)
 8001950:	2201      	movs	r2, #1
 8001952:	f883 20b4 	strb.w	r2, [r3, #180]	; 0xb4
 8001956:	4b70      	ldr	r3, [pc, #448]	; (8001b18 <Create_Nodes+0x6b4>)
 8001958:	2201      	movs	r2, #1
 800195a:	f883 20b5 	strb.w	r2, [r3, #181]	; 0xb5
 800195e:	4b6e      	ldr	r3, [pc, #440]	; (8001b18 <Create_Nodes+0x6b4>)
 8001960:	2200      	movs	r2, #0
 8001962:	f883 20b6 	strb.w	r2, [r3, #182]	; 0xb6
 8001966:	4b6c      	ldr	r3, [pc, #432]	; (8001b18 <Create_Nodes+0x6b4>)
 8001968:	2200      	movs	r2, #0
 800196a:	f883 20b7 	strb.w	r2, [r3, #183]	; 0xb7
	VALUE_2(N('E').distance,241,0,197,198,0,0);
 800196e:	4b6a      	ldr	r3, [pc, #424]	; (8001b18 <Create_Nodes+0x6b4>)
 8001970:	22f1      	movs	r2, #241	; 0xf1
 8001972:	f8a3 20b8 	strh.w	r2, [r3, #184]	; 0xb8
 8001976:	4b68      	ldr	r3, [pc, #416]	; (8001b18 <Create_Nodes+0x6b4>)
 8001978:	2200      	movs	r2, #0
 800197a:	f8a3 20ba 	strh.w	r2, [r3, #186]	; 0xba
 800197e:	4b66      	ldr	r3, [pc, #408]	; (8001b18 <Create_Nodes+0x6b4>)
 8001980:	22c5      	movs	r2, #197	; 0xc5
 8001982:	f8a3 20bc 	strh.w	r2, [r3, #188]	; 0xbc
 8001986:	4b64      	ldr	r3, [pc, #400]	; (8001b18 <Create_Nodes+0x6b4>)
 8001988:	22c6      	movs	r2, #198	; 0xc6
 800198a:	f8a3 20be 	strh.w	r2, [r3, #190]	; 0xbe
 800198e:	4b62      	ldr	r3, [pc, #392]	; (8001b18 <Create_Nodes+0x6b4>)
 8001990:	2200      	movs	r2, #0
 8001992:	f8a3 20c0 	strh.w	r2, [r3, #192]	; 0xc0
 8001996:	4b60      	ldr	r3, [pc, #384]	; (8001b18 <Create_Nodes+0x6b4>)
 8001998:	2200      	movs	r2, #0
 800199a:	f8a3 20c2 	strh.w	r2, [r3, #194]	; 0xc2
	N('E').middle=NEIGHBOUR3;
 800199e:	4b5e      	ldr	r3, [pc, #376]	; (8001b18 <Create_Nodes+0x6b4>)
 80019a0:	2202      	movs	r2, #2
 80019a2:	f883 20c4 	strb.w	r2, [r3, #196]	; 0xc4

	//F node
	N('F').worth=2;
 80019a6:	4b5c      	ldr	r3, [pc, #368]	; (8001b18 <Create_Nodes+0x6b4>)
 80019a8:	2202      	movs	r2, #2
 80019aa:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
	N('F').type=1;
 80019ae:	4b5a      	ldr	r3, [pc, #360]	; (8001b18 <Create_Nodes+0x6b4>)
 80019b0:	2201      	movs	r2, #1
 80019b2:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
	VALUE_2(N('F').neighbours,'H',0,'C','D','G','I');
 80019b6:	4b58      	ldr	r3, [pc, #352]	; (8001b18 <Create_Nodes+0x6b4>)
 80019b8:	2248      	movs	r2, #72	; 0x48
 80019ba:	f883 20d4 	strb.w	r2, [r3, #212]	; 0xd4
 80019be:	4b56      	ldr	r3, [pc, #344]	; (8001b18 <Create_Nodes+0x6b4>)
 80019c0:	2200      	movs	r2, #0
 80019c2:	f883 20d5 	strb.w	r2, [r3, #213]	; 0xd5
 80019c6:	4b54      	ldr	r3, [pc, #336]	; (8001b18 <Create_Nodes+0x6b4>)
 80019c8:	2243      	movs	r2, #67	; 0x43
 80019ca:	f883 20d6 	strb.w	r2, [r3, #214]	; 0xd6
 80019ce:	4b52      	ldr	r3, [pc, #328]	; (8001b18 <Create_Nodes+0x6b4>)
 80019d0:	2244      	movs	r2, #68	; 0x44
 80019d2:	f883 20d7 	strb.w	r2, [r3, #215]	; 0xd7
 80019d6:	4b50      	ldr	r3, [pc, #320]	; (8001b18 <Create_Nodes+0x6b4>)
 80019d8:	2247      	movs	r2, #71	; 0x47
 80019da:	f883 20d8 	strb.w	r2, [r3, #216]	; 0xd8
 80019de:	4b4e      	ldr	r3, [pc, #312]	; (8001b18 <Create_Nodes+0x6b4>)
 80019e0:	2249      	movs	r2, #73	; 0x49
 80019e2:	f883 20d9 	strb.w	r2, [r3, #217]	; 0xd9
	VALUE_2(N('F').directions,1,0,2,2,2,1);
 80019e6:	4b4c      	ldr	r3, [pc, #304]	; (8001b18 <Create_Nodes+0x6b4>)
 80019e8:	2201      	movs	r2, #1
 80019ea:	f883 20da 	strb.w	r2, [r3, #218]	; 0xda
 80019ee:	4b4a      	ldr	r3, [pc, #296]	; (8001b18 <Create_Nodes+0x6b4>)
 80019f0:	2200      	movs	r2, #0
 80019f2:	f883 20db 	strb.w	r2, [r3, #219]	; 0xdb
 80019f6:	4b48      	ldr	r3, [pc, #288]	; (8001b18 <Create_Nodes+0x6b4>)
 80019f8:	2202      	movs	r2, #2
 80019fa:	f883 20dc 	strb.w	r2, [r3, #220]	; 0xdc
 80019fe:	4b46      	ldr	r3, [pc, #280]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a00:	2202      	movs	r2, #2
 8001a02:	f883 20dd 	strb.w	r2, [r3, #221]	; 0xdd
 8001a06:	4b44      	ldr	r3, [pc, #272]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a08:	2202      	movs	r2, #2
 8001a0a:	f883 20de 	strb.w	r2, [r3, #222]	; 0xde
 8001a0e:	4b42      	ldr	r3, [pc, #264]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a10:	2201      	movs	r2, #1
 8001a12:	f883 20df 	strb.w	r2, [r3, #223]	; 0xdf
	VALUE_2(N('F').distance,200,0,198,197,241,198);
 8001a16:	4b40      	ldr	r3, [pc, #256]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a18:	22c8      	movs	r2, #200	; 0xc8
 8001a1a:	f8a3 20e0 	strh.w	r2, [r3, #224]	; 0xe0
 8001a1e:	4b3e      	ldr	r3, [pc, #248]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a20:	2200      	movs	r2, #0
 8001a22:	f8a3 20e2 	strh.w	r2, [r3, #226]	; 0xe2
 8001a26:	4b3c      	ldr	r3, [pc, #240]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a28:	22c6      	movs	r2, #198	; 0xc6
 8001a2a:	f8a3 20e4 	strh.w	r2, [r3, #228]	; 0xe4
 8001a2e:	4b3a      	ldr	r3, [pc, #232]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a30:	22c5      	movs	r2, #197	; 0xc5
 8001a32:	f8a3 20e6 	strh.w	r2, [r3, #230]	; 0xe6
 8001a36:	4b38      	ldr	r3, [pc, #224]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a38:	22f1      	movs	r2, #241	; 0xf1
 8001a3a:	f8a3 20e8 	strh.w	r2, [r3, #232]	; 0xe8
 8001a3e:	4b36      	ldr	r3, [pc, #216]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a40:	22c6      	movs	r2, #198	; 0xc6
 8001a42:	f8a3 20ea 	strh.w	r2, [r3, #234]	; 0xea
	N('F').middle=NEIGHBOUR6;
 8001a46:	4b34      	ldr	r3, [pc, #208]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a48:	2205      	movs	r2, #5
 8001a4a:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec

	//G node
	N('G').worth=2;
 8001a4e:	4b32      	ldr	r3, [pc, #200]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a50:	2202      	movs	r2, #2
 8001a52:	f8c3 20f4 	str.w	r2, [r3, #244]	; 0xf4
	N('G').type=1;
 8001a56:	4b30      	ldr	r3, [pc, #192]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a58:	2201      	movs	r2, #1
 8001a5a:	f8c3 20f8 	str.w	r2, [r3, #248]	; 0xf8
	VALUE_2(N('G').neighbours,'I','F','D','E',0,'J');
 8001a5e:	4b2e      	ldr	r3, [pc, #184]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a60:	2249      	movs	r2, #73	; 0x49
 8001a62:	f883 20fc 	strb.w	r2, [r3, #252]	; 0xfc
 8001a66:	4b2c      	ldr	r3, [pc, #176]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a68:	2246      	movs	r2, #70	; 0x46
 8001a6a:	f883 20fd 	strb.w	r2, [r3, #253]	; 0xfd
 8001a6e:	4b2a      	ldr	r3, [pc, #168]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a70:	2244      	movs	r2, #68	; 0x44
 8001a72:	f883 20fe 	strb.w	r2, [r3, #254]	; 0xfe
 8001a76:	4b28      	ldr	r3, [pc, #160]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a78:	2245      	movs	r2, #69	; 0x45
 8001a7a:	f883 20ff 	strb.w	r2, [r3, #255]	; 0xff
 8001a7e:	4b26      	ldr	r3, [pc, #152]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a80:	2200      	movs	r2, #0
 8001a82:	f883 2100 	strb.w	r2, [r3, #256]	; 0x100
 8001a86:	4b24      	ldr	r3, [pc, #144]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a88:	224a      	movs	r2, #74	; 0x4a
 8001a8a:	f883 2101 	strb.w	r2, [r3, #257]	; 0x101
	VALUE_2(N('G').directions,1,1,2,2,0,1);
 8001a8e:	4b22      	ldr	r3, [pc, #136]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a90:	2201      	movs	r2, #1
 8001a92:	f883 2102 	strb.w	r2, [r3, #258]	; 0x102
 8001a96:	4b20      	ldr	r3, [pc, #128]	; (8001b18 <Create_Nodes+0x6b4>)
 8001a98:	2201      	movs	r2, #1
 8001a9a:	f883 2103 	strb.w	r2, [r3, #259]	; 0x103
 8001a9e:	4b1e      	ldr	r3, [pc, #120]	; (8001b18 <Create_Nodes+0x6b4>)
 8001aa0:	2202      	movs	r2, #2
 8001aa2:	f883 2104 	strb.w	r2, [r3, #260]	; 0x104
 8001aa6:	4b1c      	ldr	r3, [pc, #112]	; (8001b18 <Create_Nodes+0x6b4>)
 8001aa8:	2202      	movs	r2, #2
 8001aaa:	f883 2105 	strb.w	r2, [r3, #261]	; 0x105
 8001aae:	4b1a      	ldr	r3, [pc, #104]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ab0:	2200      	movs	r2, #0
 8001ab2:	f883 2106 	strb.w	r2, [r3, #262]	; 0x106
 8001ab6:	4b18      	ldr	r3, [pc, #96]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ab8:	2201      	movs	r2, #1
 8001aba:	f883 2107 	strb.w	r2, [r3, #263]	; 0x107
	VALUE_2(N('G').distance,199,241,197,197,0,198);
 8001abe:	4b16      	ldr	r3, [pc, #88]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ac0:	22c7      	movs	r2, #199	; 0xc7
 8001ac2:	f8a3 2108 	strh.w	r2, [r3, #264]	; 0x108
 8001ac6:	4b14      	ldr	r3, [pc, #80]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ac8:	22f1      	movs	r2, #241	; 0xf1
 8001aca:	f8a3 210a 	strh.w	r2, [r3, #266]	; 0x10a
 8001ace:	4b12      	ldr	r3, [pc, #72]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ad0:	22c5      	movs	r2, #197	; 0xc5
 8001ad2:	f8a3 210c 	strh.w	r2, [r3, #268]	; 0x10c
 8001ad6:	4b10      	ldr	r3, [pc, #64]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ad8:	22c5      	movs	r2, #197	; 0xc5
 8001ada:	f8a3 210e 	strh.w	r2, [r3, #270]	; 0x10e
 8001ade:	4b0e      	ldr	r3, [pc, #56]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ae0:	2200      	movs	r2, #0
 8001ae2:	f8a3 2110 	strh.w	r2, [r3, #272]	; 0x110
 8001ae6:	4b0c      	ldr	r3, [pc, #48]	; (8001b18 <Create_Nodes+0x6b4>)
 8001ae8:	22c6      	movs	r2, #198	; 0xc6
 8001aea:	f8a3 2112 	strh.w	r2, [r3, #274]	; 0x112
	N('G').middle=NEIGHBOUR1;
 8001aee:	4b0a      	ldr	r3, [pc, #40]	; (8001b18 <Create_Nodes+0x6b4>)
 8001af0:	2200      	movs	r2, #0
 8001af2:	f883 2114 	strb.w	r2, [r3, #276]	; 0x114

	//H node
	N('H').worth=2;
 8001af6:	4b08      	ldr	r3, [pc, #32]	; (8001b18 <Create_Nodes+0x6b4>)
 8001af8:	2202      	movs	r2, #2
 8001afa:	f8c3 211c 	str.w	r2, [r3, #284]	; 0x11c
	N('H').type=2;
 8001afe:	4b06      	ldr	r3, [pc, #24]	; (8001b18 <Create_Nodes+0x6b4>)
 8001b00:	2202      	movs	r2, #2
 8001b02:	f8c3 2120 	str.w	r2, [r3, #288]	; 0x120
	VALUE_2(N('H').neighbours,'K',0,'M',0,0,'F');
 8001b06:	4b04      	ldr	r3, [pc, #16]	; (8001b18 <Create_Nodes+0x6b4>)
 8001b08:	224b      	movs	r2, #75	; 0x4b
 8001b0a:	f883 2124 	strb.w	r2, [r3, #292]	; 0x124
 8001b0e:	4b02      	ldr	r3, [pc, #8]	; (8001b18 <Create_Nodes+0x6b4>)
 8001b10:	2200      	movs	r2, #0
 8001b12:	f883 2125 	strb.w	r2, [r3, #293]	; 0x125
 8001b16:	e001      	b.n	8001b1c <Create_Nodes+0x6b8>
 8001b18:	20000360 	.word	0x20000360
 8001b1c:	4bca      	ldr	r3, [pc, #808]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b1e:	224d      	movs	r2, #77	; 0x4d
 8001b20:	f883 2126 	strb.w	r2, [r3, #294]	; 0x126
 8001b24:	4bc8      	ldr	r3, [pc, #800]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b26:	2200      	movs	r2, #0
 8001b28:	f883 2127 	strb.w	r2, [r3, #295]	; 0x127
 8001b2c:	4bc6      	ldr	r3, [pc, #792]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b2e:	2200      	movs	r2, #0
 8001b30:	f883 2128 	strb.w	r2, [r3, #296]	; 0x128
 8001b34:	4bc4      	ldr	r3, [pc, #784]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b36:	2246      	movs	r2, #70	; 0x46
 8001b38:	f883 2129 	strb.w	r2, [r3, #297]	; 0x129
	VALUE_2(N('H').directions,2,0,1,0,0,2);
 8001b3c:	4bc2      	ldr	r3, [pc, #776]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b3e:	2202      	movs	r2, #2
 8001b40:	f883 212a 	strb.w	r2, [r3, #298]	; 0x12a
 8001b44:	4bc0      	ldr	r3, [pc, #768]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b46:	2200      	movs	r2, #0
 8001b48:	f883 212b 	strb.w	r2, [r3, #299]	; 0x12b
 8001b4c:	4bbe      	ldr	r3, [pc, #760]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b4e:	2201      	movs	r2, #1
 8001b50:	f883 212c 	strb.w	r2, [r3, #300]	; 0x12c
 8001b54:	4bbc      	ldr	r3, [pc, #752]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b56:	2200      	movs	r2, #0
 8001b58:	f883 212d 	strb.w	r2, [r3, #301]	; 0x12d
 8001b5c:	4bba      	ldr	r3, [pc, #744]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b5e:	2200      	movs	r2, #0
 8001b60:	f883 212e 	strb.w	r2, [r3, #302]	; 0x12e
 8001b64:	4bb8      	ldr	r3, [pc, #736]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b66:	2202      	movs	r2, #2
 8001b68:	f883 212f 	strb.w	r2, [r3, #303]	; 0x12f
	VALUE_2(N('H').distance,198,0,241,0,0,200);
 8001b6c:	4bb6      	ldr	r3, [pc, #728]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b6e:	22c6      	movs	r2, #198	; 0xc6
 8001b70:	f8a3 2130 	strh.w	r2, [r3, #304]	; 0x130
 8001b74:	4bb4      	ldr	r3, [pc, #720]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b76:	2200      	movs	r2, #0
 8001b78:	f8a3 2132 	strh.w	r2, [r3, #306]	; 0x132
 8001b7c:	4bb2      	ldr	r3, [pc, #712]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b7e:	22f1      	movs	r2, #241	; 0xf1
 8001b80:	f8a3 2134 	strh.w	r2, [r3, #308]	; 0x134
 8001b84:	4bb0      	ldr	r3, [pc, #704]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b86:	2200      	movs	r2, #0
 8001b88:	f8a3 2136 	strh.w	r2, [r3, #310]	; 0x136
 8001b8c:	4bae      	ldr	r3, [pc, #696]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b8e:	2200      	movs	r2, #0
 8001b90:	f8a3 2138 	strh.w	r2, [r3, #312]	; 0x138
 8001b94:	4bac      	ldr	r3, [pc, #688]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b96:	22c8      	movs	r2, #200	; 0xc8
 8001b98:	f8a3 213a 	strh.w	r2, [r3, #314]	; 0x13a
	N('H').middle=NEIGHBOUR1;
 8001b9c:	4baa      	ldr	r3, [pc, #680]	; (8001e48 <Create_Nodes+0x9e4>)
 8001b9e:	2200      	movs	r2, #0
 8001ba0:	f883 213c 	strb.w	r2, [r3, #316]	; 0x13c

	//I node
	N('I').worth=2;
 8001ba4:	4ba8      	ldr	r3, [pc, #672]	; (8001e48 <Create_Nodes+0x9e4>)
 8001ba6:	2202      	movs	r2, #2
 8001ba8:	f8c3 2144 	str.w	r2, [r3, #324]	; 0x144
	N('I').type=2;
 8001bac:	4ba6      	ldr	r3, [pc, #664]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bae:	2202      	movs	r2, #2
 8001bb0:	f8c3 2148 	str.w	r2, [r3, #328]	; 0x148
	VALUE_2(N('I').neighbours,'L','N','K','F','D','G');
 8001bb4:	4ba4      	ldr	r3, [pc, #656]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bb6:	224c      	movs	r2, #76	; 0x4c
 8001bb8:	f883 214c 	strb.w	r2, [r3, #332]	; 0x14c
 8001bbc:	4ba2      	ldr	r3, [pc, #648]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bbe:	224e      	movs	r2, #78	; 0x4e
 8001bc0:	f883 214d 	strb.w	r2, [r3, #333]	; 0x14d
 8001bc4:	4ba0      	ldr	r3, [pc, #640]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bc6:	224b      	movs	r2, #75	; 0x4b
 8001bc8:	f883 214e 	strb.w	r2, [r3, #334]	; 0x14e
 8001bcc:	4b9e      	ldr	r3, [pc, #632]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bce:	2246      	movs	r2, #70	; 0x46
 8001bd0:	f883 214f 	strb.w	r2, [r3, #335]	; 0x14f
 8001bd4:	4b9c      	ldr	r3, [pc, #624]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bd6:	2244      	movs	r2, #68	; 0x44
 8001bd8:	f883 2150 	strb.w	r2, [r3, #336]	; 0x150
 8001bdc:	4b9a      	ldr	r3, [pc, #616]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bde:	2247      	movs	r2, #71	; 0x47
 8001be0:	f883 2151 	strb.w	r2, [r3, #337]	; 0x151
	VALUE_2(N('I').directions,2,1,1,1,2,2);
 8001be4:	4b98      	ldr	r3, [pc, #608]	; (8001e48 <Create_Nodes+0x9e4>)
 8001be6:	2202      	movs	r2, #2
 8001be8:	f883 2152 	strb.w	r2, [r3, #338]	; 0x152
 8001bec:	4b96      	ldr	r3, [pc, #600]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bee:	2201      	movs	r2, #1
 8001bf0:	f883 2153 	strb.w	r2, [r3, #339]	; 0x153
 8001bf4:	4b94      	ldr	r3, [pc, #592]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bf6:	2201      	movs	r2, #1
 8001bf8:	f883 2154 	strb.w	r2, [r3, #340]	; 0x154
 8001bfc:	4b92      	ldr	r3, [pc, #584]	; (8001e48 <Create_Nodes+0x9e4>)
 8001bfe:	2201      	movs	r2, #1
 8001c00:	f883 2155 	strb.w	r2, [r3, #341]	; 0x155
 8001c04:	4b90      	ldr	r3, [pc, #576]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c06:	2202      	movs	r2, #2
 8001c08:	f883 2156 	strb.w	r2, [r3, #342]	; 0x156
 8001c0c:	4b8e      	ldr	r3, [pc, #568]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c0e:	2202      	movs	r2, #2
 8001c10:	f883 2157 	strb.w	r2, [r3, #343]	; 0x157
	VALUE_2(N('I').distance,198,241,197,198,241,199);
 8001c14:	4b8c      	ldr	r3, [pc, #560]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c16:	22c6      	movs	r2, #198	; 0xc6
 8001c18:	f8a3 2158 	strh.w	r2, [r3, #344]	; 0x158
 8001c1c:	4b8a      	ldr	r3, [pc, #552]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c1e:	22f1      	movs	r2, #241	; 0xf1
 8001c20:	f8a3 215a 	strh.w	r2, [r3, #346]	; 0x15a
 8001c24:	4b88      	ldr	r3, [pc, #544]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c26:	22c5      	movs	r2, #197	; 0xc5
 8001c28:	f8a3 215c 	strh.w	r2, [r3, #348]	; 0x15c
 8001c2c:	4b86      	ldr	r3, [pc, #536]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c2e:	22c6      	movs	r2, #198	; 0xc6
 8001c30:	f8a3 215e 	strh.w	r2, [r3, #350]	; 0x15e
 8001c34:	4b84      	ldr	r3, [pc, #528]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c36:	22f1      	movs	r2, #241	; 0xf1
 8001c38:	f8a3 2160 	strh.w	r2, [r3, #352]	; 0x160
 8001c3c:	4b82      	ldr	r3, [pc, #520]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c3e:	22c7      	movs	r2, #199	; 0xc7
 8001c40:	f8a3 2162 	strh.w	r2, [r3, #354]	; 0x162
	N('I').middle=NEIGHBOUR6;
 8001c44:	4b80      	ldr	r3, [pc, #512]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c46:	2205      	movs	r2, #5
 8001c48:	f883 2164 	strb.w	r2, [r3, #356]	; 0x164

	//J node
	N('J').worth=2;
 8001c4c:	4b7e      	ldr	r3, [pc, #504]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c4e:	2202      	movs	r2, #2
 8001c50:	f8c3 216c 	str.w	r2, [r3, #364]	; 0x16c
	N('J').type=2;
 8001c54:	4b7c      	ldr	r3, [pc, #496]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c56:	2202      	movs	r2, #2
 8001c58:	f8c3 2170 	str.w	r2, [r3, #368]	; 0x170
	VALUE_2(N('J').neighbours,0,0,'L','G',0,'E');
 8001c5c:	4b7a      	ldr	r3, [pc, #488]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c5e:	2200      	movs	r2, #0
 8001c60:	f883 2174 	strb.w	r2, [r3, #372]	; 0x174
 8001c64:	4b78      	ldr	r3, [pc, #480]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c66:	2200      	movs	r2, #0
 8001c68:	f883 2175 	strb.w	r2, [r3, #373]	; 0x175
 8001c6c:	4b76      	ldr	r3, [pc, #472]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c6e:	224c      	movs	r2, #76	; 0x4c
 8001c70:	f883 2176 	strb.w	r2, [r3, #374]	; 0x176
 8001c74:	4b74      	ldr	r3, [pc, #464]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c76:	2247      	movs	r2, #71	; 0x47
 8001c78:	f883 2177 	strb.w	r2, [r3, #375]	; 0x177
 8001c7c:	4b72      	ldr	r3, [pc, #456]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c7e:	2200      	movs	r2, #0
 8001c80:	f883 2178 	strb.w	r2, [r3, #376]	; 0x178
 8001c84:	4b70      	ldr	r3, [pc, #448]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c86:	2245      	movs	r2, #69	; 0x45
 8001c88:	f883 2179 	strb.w	r2, [r3, #377]	; 0x179
	VALUE_2(N('J').directions,0,0,1,1,0,2);
 8001c8c:	4b6e      	ldr	r3, [pc, #440]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c8e:	2200      	movs	r2, #0
 8001c90:	f883 217a 	strb.w	r2, [r3, #378]	; 0x17a
 8001c94:	4b6c      	ldr	r3, [pc, #432]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c96:	2200      	movs	r2, #0
 8001c98:	f883 217b 	strb.w	r2, [r3, #379]	; 0x17b
 8001c9c:	4b6a      	ldr	r3, [pc, #424]	; (8001e48 <Create_Nodes+0x9e4>)
 8001c9e:	2201      	movs	r2, #1
 8001ca0:	f883 217c 	strb.w	r2, [r3, #380]	; 0x17c
 8001ca4:	4b68      	ldr	r3, [pc, #416]	; (8001e48 <Create_Nodes+0x9e4>)
 8001ca6:	2201      	movs	r2, #1
 8001ca8:	f883 217d 	strb.w	r2, [r3, #381]	; 0x17d
 8001cac:	4b66      	ldr	r3, [pc, #408]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cae:	2200      	movs	r2, #0
 8001cb0:	f883 217e 	strb.w	r2, [r3, #382]	; 0x17e
 8001cb4:	4b64      	ldr	r3, [pc, #400]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cb6:	2202      	movs	r2, #2
 8001cb8:	f883 217f 	strb.w	r2, [r3, #383]	; 0x17f
	VALUE_2(N('J').distance,0,0,197,198,0,241);
 8001cbc:	4b62      	ldr	r3, [pc, #392]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cbe:	2200      	movs	r2, #0
 8001cc0:	f8a3 2180 	strh.w	r2, [r3, #384]	; 0x180
 8001cc4:	4b60      	ldr	r3, [pc, #384]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cc6:	2200      	movs	r2, #0
 8001cc8:	f8a3 2182 	strh.w	r2, [r3, #386]	; 0x182
 8001ccc:	4b5e      	ldr	r3, [pc, #376]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cce:	22c5      	movs	r2, #197	; 0xc5
 8001cd0:	f8a3 2184 	strh.w	r2, [r3, #388]	; 0x184
 8001cd4:	4b5c      	ldr	r3, [pc, #368]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cd6:	22c6      	movs	r2, #198	; 0xc6
 8001cd8:	f8a3 2186 	strh.w	r2, [r3, #390]	; 0x186
 8001cdc:	4b5a      	ldr	r3, [pc, #360]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cde:	2200      	movs	r2, #0
 8001ce0:	f8a3 2188 	strh.w	r2, [r3, #392]	; 0x188
 8001ce4:	4b58      	ldr	r3, [pc, #352]	; (8001e48 <Create_Nodes+0x9e4>)
 8001ce6:	22f1      	movs	r2, #241	; 0xf1
 8001ce8:	f8a3 218a 	strh.w	r2, [r3, #394]	; 0x18a
	N('J').middle=NEIGHBOUR4;
 8001cec:	4b56      	ldr	r3, [pc, #344]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cee:	2203      	movs	r2, #3
 8001cf0:	f883 218c 	strb.w	r2, [r3, #396]	; 0x18c

	//K node
	N('K').worth=2;
 8001cf4:	4b54      	ldr	r3, [pc, #336]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cf6:	2202      	movs	r2, #2
 8001cf8:	f8c3 2194 	str.w	r2, [r3, #404]	; 0x194
	N('K').type=1;
 8001cfc:	4b52      	ldr	r3, [pc, #328]	; (8001e48 <Create_Nodes+0x9e4>)
 8001cfe:	2201      	movs	r2, #1
 8001d00:	f8c3 2198 	str.w	r2, [r3, #408]	; 0x198
	VALUE_2(N('K').neighbours,'M',0,'H','I','L','N');
 8001d04:	4b50      	ldr	r3, [pc, #320]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d06:	224d      	movs	r2, #77	; 0x4d
 8001d08:	f883 219c 	strb.w	r2, [r3, #412]	; 0x19c
 8001d0c:	4b4e      	ldr	r3, [pc, #312]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d0e:	2200      	movs	r2, #0
 8001d10:	f883 219d 	strb.w	r2, [r3, #413]	; 0x19d
 8001d14:	4b4c      	ldr	r3, [pc, #304]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d16:	2248      	movs	r2, #72	; 0x48
 8001d18:	f883 219e 	strb.w	r2, [r3, #414]	; 0x19e
 8001d1c:	4b4a      	ldr	r3, [pc, #296]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d1e:	2249      	movs	r2, #73	; 0x49
 8001d20:	f883 219f 	strb.w	r2, [r3, #415]	; 0x19f
 8001d24:	4b48      	ldr	r3, [pc, #288]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d26:	224c      	movs	r2, #76	; 0x4c
 8001d28:	f883 21a0 	strb.w	r2, [r3, #416]	; 0x1a0
 8001d2c:	4b46      	ldr	r3, [pc, #280]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d2e:	224e      	movs	r2, #78	; 0x4e
 8001d30:	f883 21a1 	strb.w	r2, [r3, #417]	; 0x1a1
	VALUE_2(N('K').directions,1,0,2,2,2,1);
 8001d34:	4b44      	ldr	r3, [pc, #272]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d36:	2201      	movs	r2, #1
 8001d38:	f883 21a2 	strb.w	r2, [r3, #418]	; 0x1a2
 8001d3c:	4b42      	ldr	r3, [pc, #264]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d3e:	2200      	movs	r2, #0
 8001d40:	f883 21a3 	strb.w	r2, [r3, #419]	; 0x1a3
 8001d44:	4b40      	ldr	r3, [pc, #256]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d46:	2202      	movs	r2, #2
 8001d48:	f883 21a4 	strb.w	r2, [r3, #420]	; 0x1a4
 8001d4c:	4b3e      	ldr	r3, [pc, #248]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d4e:	2202      	movs	r2, #2
 8001d50:	f883 21a5 	strb.w	r2, [r3, #421]	; 0x1a5
 8001d54:	4b3c      	ldr	r3, [pc, #240]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d56:	2202      	movs	r2, #2
 8001d58:	f883 21a6 	strb.w	r2, [r3, #422]	; 0x1a6
 8001d5c:	4b3a      	ldr	r3, [pc, #232]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d5e:	2201      	movs	r2, #1
 8001d60:	f883 21a7 	strb.w	r2, [r3, #423]	; 0x1a7
	VALUE_2(N('K').distance,200,0,198,197,241,198);
 8001d64:	4b38      	ldr	r3, [pc, #224]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d66:	22c8      	movs	r2, #200	; 0xc8
 8001d68:	f8a3 21a8 	strh.w	r2, [r3, #424]	; 0x1a8
 8001d6c:	4b36      	ldr	r3, [pc, #216]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d6e:	2200      	movs	r2, #0
 8001d70:	f8a3 21aa 	strh.w	r2, [r3, #426]	; 0x1aa
 8001d74:	4b34      	ldr	r3, [pc, #208]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d76:	22c6      	movs	r2, #198	; 0xc6
 8001d78:	f8a3 21ac 	strh.w	r2, [r3, #428]	; 0x1ac
 8001d7c:	4b32      	ldr	r3, [pc, #200]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d7e:	22c5      	movs	r2, #197	; 0xc5
 8001d80:	f8a3 21ae 	strh.w	r2, [r3, #430]	; 0x1ae
 8001d84:	4b30      	ldr	r3, [pc, #192]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d86:	22f1      	movs	r2, #241	; 0xf1
 8001d88:	f8a3 21b0 	strh.w	r2, [r3, #432]	; 0x1b0
 8001d8c:	4b2e      	ldr	r3, [pc, #184]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d8e:	22c6      	movs	r2, #198	; 0xc6
 8001d90:	f8a3 21b2 	strh.w	r2, [r3, #434]	; 0x1b2
	N('K').middle=NEIGHBOUR4;
 8001d94:	4b2c      	ldr	r3, [pc, #176]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d96:	2203      	movs	r2, #3
 8001d98:	f883 21b4 	strb.w	r2, [r3, #436]	; 0x1b4

	//L node
	N('L').worth=2;
 8001d9c:	4b2a      	ldr	r3, [pc, #168]	; (8001e48 <Create_Nodes+0x9e4>)
 8001d9e:	2202      	movs	r2, #2
 8001da0:	f8c3 21bc 	str.w	r2, [r3, #444]	; 0x1bc
	N('L').type=2;
 8001da4:	4b28      	ldr	r3, [pc, #160]	; (8001e48 <Create_Nodes+0x9e4>)
 8001da6:	2202      	movs	r2, #2
 8001da8:	f8c3 21c0 	str.w	r2, [r3, #448]	; 0x1c0
	VALUE_2(N('L').neighbours,'N','K','I','J',0,'O');
 8001dac:	4b26      	ldr	r3, [pc, #152]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dae:	224e      	movs	r2, #78	; 0x4e
 8001db0:	f883 21c4 	strb.w	r2, [r3, #452]	; 0x1c4
 8001db4:	4b24      	ldr	r3, [pc, #144]	; (8001e48 <Create_Nodes+0x9e4>)
 8001db6:	224b      	movs	r2, #75	; 0x4b
 8001db8:	f883 21c5 	strb.w	r2, [r3, #453]	; 0x1c5
 8001dbc:	4b22      	ldr	r3, [pc, #136]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dbe:	2249      	movs	r2, #73	; 0x49
 8001dc0:	f883 21c6 	strb.w	r2, [r3, #454]	; 0x1c6
 8001dc4:	4b20      	ldr	r3, [pc, #128]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dc6:	224a      	movs	r2, #74	; 0x4a
 8001dc8:	f883 21c7 	strb.w	r2, [r3, #455]	; 0x1c7
 8001dcc:	4b1e      	ldr	r3, [pc, #120]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dce:	2200      	movs	r2, #0
 8001dd0:	f883 21c8 	strb.w	r2, [r3, #456]	; 0x1c8
 8001dd4:	4b1c      	ldr	r3, [pc, #112]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dd6:	224f      	movs	r2, #79	; 0x4f
 8001dd8:	f883 21c9 	strb.w	r2, [r3, #457]	; 0x1c9
	VALUE_2(N('L').directions,1,1,2,2,0,1);
 8001ddc:	4b1a      	ldr	r3, [pc, #104]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dde:	2201      	movs	r2, #1
 8001de0:	f883 21ca 	strb.w	r2, [r3, #458]	; 0x1ca
 8001de4:	4b18      	ldr	r3, [pc, #96]	; (8001e48 <Create_Nodes+0x9e4>)
 8001de6:	2201      	movs	r2, #1
 8001de8:	f883 21cb 	strb.w	r2, [r3, #459]	; 0x1cb
 8001dec:	4b16      	ldr	r3, [pc, #88]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dee:	2202      	movs	r2, #2
 8001df0:	f883 21cc 	strb.w	r2, [r3, #460]	; 0x1cc
 8001df4:	4b14      	ldr	r3, [pc, #80]	; (8001e48 <Create_Nodes+0x9e4>)
 8001df6:	2202      	movs	r2, #2
 8001df8:	f883 21cd 	strb.w	r2, [r3, #461]	; 0x1cd
 8001dfc:	4b12      	ldr	r3, [pc, #72]	; (8001e48 <Create_Nodes+0x9e4>)
 8001dfe:	2200      	movs	r2, #0
 8001e00:	f883 21ce 	strb.w	r2, [r3, #462]	; 0x1ce
 8001e04:	4b10      	ldr	r3, [pc, #64]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e06:	2201      	movs	r2, #1
 8001e08:	f883 21cf 	strb.w	r2, [r3, #463]	; 0x1cf
	VALUE_2(N('L').distance,199,241,198,197,0,198);
 8001e0c:	4b0e      	ldr	r3, [pc, #56]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e0e:	22c7      	movs	r2, #199	; 0xc7
 8001e10:	f8a3 21d0 	strh.w	r2, [r3, #464]	; 0x1d0
 8001e14:	4b0c      	ldr	r3, [pc, #48]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e16:	22f1      	movs	r2, #241	; 0xf1
 8001e18:	f8a3 21d2 	strh.w	r2, [r3, #466]	; 0x1d2
 8001e1c:	4b0a      	ldr	r3, [pc, #40]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e1e:	22c6      	movs	r2, #198	; 0xc6
 8001e20:	f8a3 21d4 	strh.w	r2, [r3, #468]	; 0x1d4
 8001e24:	4b08      	ldr	r3, [pc, #32]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e26:	22c5      	movs	r2, #197	; 0xc5
 8001e28:	f8a3 21d6 	strh.w	r2, [r3, #470]	; 0x1d6
 8001e2c:	4b06      	ldr	r3, [pc, #24]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e2e:	2200      	movs	r2, #0
 8001e30:	f8a3 21d8 	strh.w	r2, [r3, #472]	; 0x1d8
 8001e34:	4b04      	ldr	r3, [pc, #16]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e36:	22c6      	movs	r2, #198	; 0xc6
 8001e38:	f8a3 21da 	strh.w	r2, [r3, #474]	; 0x1da
	N('L').middle=NEIGHBOUR3;
 8001e3c:	4b02      	ldr	r3, [pc, #8]	; (8001e48 <Create_Nodes+0x9e4>)
 8001e3e:	2202      	movs	r2, #2
 8001e40:	f883 21dc 	strb.w	r2, [r3, #476]	; 0x1dc
 8001e44:	e002      	b.n	8001e4c <Create_Nodes+0x9e8>
 8001e46:	bf00      	nop
 8001e48:	20000360 	.word	0x20000360

	//M node
	N('M').worth=2;
 8001e4c:	4bcb      	ldr	r3, [pc, #812]	; (800217c <Create_Nodes+0xd18>)
 8001e4e:	2202      	movs	r2, #2
 8001e50:	f8c3 21e4 	str.w	r2, [r3, #484]	; 0x1e4
	N('M').type=2;
 8001e54:	4bc9      	ldr	r3, [pc, #804]	; (800217c <Create_Nodes+0xd18>)
 8001e56:	2202      	movs	r2, #2
 8001e58:	f8c3 21e8 	str.w	r2, [r3, #488]	; 0x1e8
	VALUE_2(N('M').neighbours,'P','U',0,'H',0,'K');
 8001e5c:	4bc7      	ldr	r3, [pc, #796]	; (800217c <Create_Nodes+0xd18>)
 8001e5e:	2250      	movs	r2, #80	; 0x50
 8001e60:	f883 21ec 	strb.w	r2, [r3, #492]	; 0x1ec
 8001e64:	4bc5      	ldr	r3, [pc, #788]	; (800217c <Create_Nodes+0xd18>)
 8001e66:	2255      	movs	r2, #85	; 0x55
 8001e68:	f883 21ed 	strb.w	r2, [r3, #493]	; 0x1ed
 8001e6c:	4bc3      	ldr	r3, [pc, #780]	; (800217c <Create_Nodes+0xd18>)
 8001e6e:	2200      	movs	r2, #0
 8001e70:	f883 21ee 	strb.w	r2, [r3, #494]	; 0x1ee
 8001e74:	4bc1      	ldr	r3, [pc, #772]	; (800217c <Create_Nodes+0xd18>)
 8001e76:	2248      	movs	r2, #72	; 0x48
 8001e78:	f883 21ef 	strb.w	r2, [r3, #495]	; 0x1ef
 8001e7c:	4bbf      	ldr	r3, [pc, #764]	; (800217c <Create_Nodes+0xd18>)
 8001e7e:	2200      	movs	r2, #0
 8001e80:	f883 21f0 	strb.w	r2, [r3, #496]	; 0x1f0
 8001e84:	4bbd      	ldr	r3, [pc, #756]	; (800217c <Create_Nodes+0xd18>)
 8001e86:	224b      	movs	r2, #75	; 0x4b
 8001e88:	f883 21f1 	strb.w	r2, [r3, #497]	; 0x1f1
	VALUE_2(N('M').directions,2,2,0,2,0,2);
 8001e8c:	4bbb      	ldr	r3, [pc, #748]	; (800217c <Create_Nodes+0xd18>)
 8001e8e:	2202      	movs	r2, #2
 8001e90:	f883 21f2 	strb.w	r2, [r3, #498]	; 0x1f2
 8001e94:	4bb9      	ldr	r3, [pc, #740]	; (800217c <Create_Nodes+0xd18>)
 8001e96:	2202      	movs	r2, #2
 8001e98:	f883 21f3 	strb.w	r2, [r3, #499]	; 0x1f3
 8001e9c:	4bb7      	ldr	r3, [pc, #732]	; (800217c <Create_Nodes+0xd18>)
 8001e9e:	2200      	movs	r2, #0
 8001ea0:	f883 21f4 	strb.w	r2, [r3, #500]	; 0x1f4
 8001ea4:	4bb5      	ldr	r3, [pc, #724]	; (800217c <Create_Nodes+0xd18>)
 8001ea6:	2202      	movs	r2, #2
 8001ea8:	f883 21f5 	strb.w	r2, [r3, #501]	; 0x1f5
 8001eac:	4bb3      	ldr	r3, [pc, #716]	; (800217c <Create_Nodes+0xd18>)
 8001eae:	2200      	movs	r2, #0
 8001eb0:	f883 21f6 	strb.w	r2, [r3, #502]	; 0x1f6
 8001eb4:	4bb1      	ldr	r3, [pc, #708]	; (800217c <Create_Nodes+0xd18>)
 8001eb6:	2202      	movs	r2, #2
 8001eb8:	f883 21f7 	strb.w	r2, [r3, #503]	; 0x1f7
	VALUE_2(N('M').distance,198,319-25,0,241,0,200);
 8001ebc:	4baf      	ldr	r3, [pc, #700]	; (800217c <Create_Nodes+0xd18>)
 8001ebe:	22c6      	movs	r2, #198	; 0xc6
 8001ec0:	f8a3 21f8 	strh.w	r2, [r3, #504]	; 0x1f8
 8001ec4:	4bad      	ldr	r3, [pc, #692]	; (800217c <Create_Nodes+0xd18>)
 8001ec6:	f44f 7293 	mov.w	r2, #294	; 0x126
 8001eca:	f8a3 21fa 	strh.w	r2, [r3, #506]	; 0x1fa
 8001ece:	4bab      	ldr	r3, [pc, #684]	; (800217c <Create_Nodes+0xd18>)
 8001ed0:	2200      	movs	r2, #0
 8001ed2:	f8a3 21fc 	strh.w	r2, [r3, #508]	; 0x1fc
 8001ed6:	4ba9      	ldr	r3, [pc, #676]	; (800217c <Create_Nodes+0xd18>)
 8001ed8:	22f1      	movs	r2, #241	; 0xf1
 8001eda:	f8a3 21fe 	strh.w	r2, [r3, #510]	; 0x1fe
 8001ede:	4ba7      	ldr	r3, [pc, #668]	; (800217c <Create_Nodes+0xd18>)
 8001ee0:	2200      	movs	r2, #0
 8001ee2:	f8a3 2200 	strh.w	r2, [r3, #512]	; 0x200
 8001ee6:	4ba5      	ldr	r3, [pc, #660]	; (800217c <Create_Nodes+0xd18>)
 8001ee8:	22c8      	movs	r2, #200	; 0xc8
 8001eea:	f8a3 2202 	strh.w	r2, [r3, #514]	; 0x202
	N('M').middle=NEIGHBOUR6;
 8001eee:	4ba3      	ldr	r3, [pc, #652]	; (800217c <Create_Nodes+0xd18>)
 8001ef0:	2205      	movs	r2, #5
 8001ef2:	f883 2204 	strb.w	r2, [r3, #516]	; 0x204

	//N node
	N('N').worth=2;
 8001ef6:	4ba1      	ldr	r3, [pc, #644]	; (800217c <Create_Nodes+0xd18>)
 8001ef8:	2202      	movs	r2, #2
 8001efa:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
	N('N').type=2;
 8001efe:	4b9f      	ldr	r3, [pc, #636]	; (800217c <Create_Nodes+0xd18>)
 8001f00:	2202      	movs	r2, #2
 8001f02:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210
	VALUE_2(N('N').neighbours,'Q','T','P','K','I','L');
 8001f06:	4b9d      	ldr	r3, [pc, #628]	; (800217c <Create_Nodes+0xd18>)
 8001f08:	2251      	movs	r2, #81	; 0x51
 8001f0a:	f883 2214 	strb.w	r2, [r3, #532]	; 0x214
 8001f0e:	4b9b      	ldr	r3, [pc, #620]	; (800217c <Create_Nodes+0xd18>)
 8001f10:	2254      	movs	r2, #84	; 0x54
 8001f12:	f883 2215 	strb.w	r2, [r3, #533]	; 0x215
 8001f16:	4b99      	ldr	r3, [pc, #612]	; (800217c <Create_Nodes+0xd18>)
 8001f18:	2250      	movs	r2, #80	; 0x50
 8001f1a:	f883 2216 	strb.w	r2, [r3, #534]	; 0x216
 8001f1e:	4b97      	ldr	r3, [pc, #604]	; (800217c <Create_Nodes+0xd18>)
 8001f20:	224b      	movs	r2, #75	; 0x4b
 8001f22:	f883 2217 	strb.w	r2, [r3, #535]	; 0x217
 8001f26:	4b95      	ldr	r3, [pc, #596]	; (800217c <Create_Nodes+0xd18>)
 8001f28:	2249      	movs	r2, #73	; 0x49
 8001f2a:	f883 2218 	strb.w	r2, [r3, #536]	; 0x218
 8001f2e:	4b93      	ldr	r3, [pc, #588]	; (800217c <Create_Nodes+0xd18>)
 8001f30:	224c      	movs	r2, #76	; 0x4c
 8001f32:	f883 2219 	strb.w	r2, [r3, #537]	; 0x219
	VALUE_2(N('N').directions,2,1,1,1,2,2);
 8001f36:	4b91      	ldr	r3, [pc, #580]	; (800217c <Create_Nodes+0xd18>)
 8001f38:	2202      	movs	r2, #2
 8001f3a:	f883 221a 	strb.w	r2, [r3, #538]	; 0x21a
 8001f3e:	4b8f      	ldr	r3, [pc, #572]	; (800217c <Create_Nodes+0xd18>)
 8001f40:	2201      	movs	r2, #1
 8001f42:	f883 221b 	strb.w	r2, [r3, #539]	; 0x21b
 8001f46:	4b8d      	ldr	r3, [pc, #564]	; (800217c <Create_Nodes+0xd18>)
 8001f48:	2201      	movs	r2, #1
 8001f4a:	f883 221c 	strb.w	r2, [r3, #540]	; 0x21c
 8001f4e:	4b8b      	ldr	r3, [pc, #556]	; (800217c <Create_Nodes+0xd18>)
 8001f50:	2201      	movs	r2, #1
 8001f52:	f883 221d 	strb.w	r2, [r3, #541]	; 0x21d
 8001f56:	4b89      	ldr	r3, [pc, #548]	; (800217c <Create_Nodes+0xd18>)
 8001f58:	2202      	movs	r2, #2
 8001f5a:	f883 221e 	strb.w	r2, [r3, #542]	; 0x21e
 8001f5e:	4b87      	ldr	r3, [pc, #540]	; (800217c <Create_Nodes+0xd18>)
 8001f60:	2202      	movs	r2, #2
 8001f62:	f883 221f 	strb.w	r2, [r3, #543]	; 0x21f
	VALUE_2(N('N').distance,198,120-25,197,198,241,199);
 8001f66:	4b85      	ldr	r3, [pc, #532]	; (800217c <Create_Nodes+0xd18>)
 8001f68:	22c6      	movs	r2, #198	; 0xc6
 8001f6a:	f8a3 2220 	strh.w	r2, [r3, #544]	; 0x220
 8001f6e:	4b83      	ldr	r3, [pc, #524]	; (800217c <Create_Nodes+0xd18>)
 8001f70:	225f      	movs	r2, #95	; 0x5f
 8001f72:	f8a3 2222 	strh.w	r2, [r3, #546]	; 0x222
 8001f76:	4b81      	ldr	r3, [pc, #516]	; (800217c <Create_Nodes+0xd18>)
 8001f78:	22c5      	movs	r2, #197	; 0xc5
 8001f7a:	f8a3 2224 	strh.w	r2, [r3, #548]	; 0x224
 8001f7e:	4b7f      	ldr	r3, [pc, #508]	; (800217c <Create_Nodes+0xd18>)
 8001f80:	22c6      	movs	r2, #198	; 0xc6
 8001f82:	f8a3 2226 	strh.w	r2, [r3, #550]	; 0x226
 8001f86:	4b7d      	ldr	r3, [pc, #500]	; (800217c <Create_Nodes+0xd18>)
 8001f88:	22f1      	movs	r2, #241	; 0xf1
 8001f8a:	f8a3 2228 	strh.w	r2, [r3, #552]	; 0x228
 8001f8e:	4b7b      	ldr	r3, [pc, #492]	; (800217c <Create_Nodes+0xd18>)
 8001f90:	22c7      	movs	r2, #199	; 0xc7
 8001f92:	f8a3 222a 	strh.w	r2, [r3, #554]	; 0x22a
	N('N').middle=NEIGHBOUR4;
 8001f96:	4b79      	ldr	r3, [pc, #484]	; (800217c <Create_Nodes+0xd18>)
 8001f98:	2203      	movs	r2, #3
 8001f9a:	f883 222c 	strb.w	r2, [r3, #556]	; 0x22c

	//O node
	N('O').worth=2;
 8001f9e:	4b77      	ldr	r3, [pc, #476]	; (800217c <Create_Nodes+0xd18>)
 8001fa0:	2202      	movs	r2, #2
 8001fa2:	f8c3 2234 	str.w	r2, [r3, #564]	; 0x234
	N('O').type=2;
 8001fa6:	4b75      	ldr	r3, [pc, #468]	; (800217c <Create_Nodes+0xd18>)
 8001fa8:	2202      	movs	r2, #2
 8001faa:	f8c3 2238 	str.w	r2, [r3, #568]	; 0x238
	VALUE_2(N('O').neighbours,0,'V','Q','L',0,0);
 8001fae:	4b73      	ldr	r3, [pc, #460]	; (800217c <Create_Nodes+0xd18>)
 8001fb0:	2200      	movs	r2, #0
 8001fb2:	f883 223c 	strb.w	r2, [r3, #572]	; 0x23c
 8001fb6:	4b71      	ldr	r3, [pc, #452]	; (800217c <Create_Nodes+0xd18>)
 8001fb8:	2256      	movs	r2, #86	; 0x56
 8001fba:	f883 223d 	strb.w	r2, [r3, #573]	; 0x23d
 8001fbe:	4b6f      	ldr	r3, [pc, #444]	; (800217c <Create_Nodes+0xd18>)
 8001fc0:	2251      	movs	r2, #81	; 0x51
 8001fc2:	f883 223e 	strb.w	r2, [r3, #574]	; 0x23e
 8001fc6:	4b6d      	ldr	r3, [pc, #436]	; (800217c <Create_Nodes+0xd18>)
 8001fc8:	224c      	movs	r2, #76	; 0x4c
 8001fca:	f883 223f 	strb.w	r2, [r3, #575]	; 0x23f
 8001fce:	4b6b      	ldr	r3, [pc, #428]	; (800217c <Create_Nodes+0xd18>)
 8001fd0:	2200      	movs	r2, #0
 8001fd2:	f883 2240 	strb.w	r2, [r3, #576]	; 0x240
 8001fd6:	4b69      	ldr	r3, [pc, #420]	; (800217c <Create_Nodes+0xd18>)
 8001fd8:	2200      	movs	r2, #0
 8001fda:	f883 2241 	strb.w	r2, [r3, #577]	; 0x241
	VALUE_2(N('O').directions,0,1,1,1,0,0);
 8001fde:	4b67      	ldr	r3, [pc, #412]	; (800217c <Create_Nodes+0xd18>)
 8001fe0:	2200      	movs	r2, #0
 8001fe2:	f883 2242 	strb.w	r2, [r3, #578]	; 0x242
 8001fe6:	4b65      	ldr	r3, [pc, #404]	; (800217c <Create_Nodes+0xd18>)
 8001fe8:	2201      	movs	r2, #1
 8001fea:	f883 2243 	strb.w	r2, [r3, #579]	; 0x243
 8001fee:	4b63      	ldr	r3, [pc, #396]	; (800217c <Create_Nodes+0xd18>)
 8001ff0:	2201      	movs	r2, #1
 8001ff2:	f883 2244 	strb.w	r2, [r3, #580]	; 0x244
 8001ff6:	4b61      	ldr	r3, [pc, #388]	; (800217c <Create_Nodes+0xd18>)
 8001ff8:	2201      	movs	r2, #1
 8001ffa:	f883 2245 	strb.w	r2, [r3, #581]	; 0x245
 8001ffe:	4b5f      	ldr	r3, [pc, #380]	; (800217c <Create_Nodes+0xd18>)
 8002000:	2200      	movs	r2, #0
 8002002:	f883 2246 	strb.w	r2, [r3, #582]	; 0x246
 8002006:	4b5d      	ldr	r3, [pc, #372]	; (800217c <Create_Nodes+0xd18>)
 8002008:	2200      	movs	r2, #0
 800200a:	f883 2247 	strb.w	r2, [r3, #583]	; 0x247
	VALUE_2(N('O').distance,0,318-25,197,198,0,0);
 800200e:	4b5b      	ldr	r3, [pc, #364]	; (800217c <Create_Nodes+0xd18>)
 8002010:	2200      	movs	r2, #0
 8002012:	f8a3 2248 	strh.w	r2, [r3, #584]	; 0x248
 8002016:	4b59      	ldr	r3, [pc, #356]	; (800217c <Create_Nodes+0xd18>)
 8002018:	f240 1225 	movw	r2, #293	; 0x125
 800201c:	f8a3 224a 	strh.w	r2, [r3, #586]	; 0x24a
 8002020:	4b56      	ldr	r3, [pc, #344]	; (800217c <Create_Nodes+0xd18>)
 8002022:	22c5      	movs	r2, #197	; 0xc5
 8002024:	f8a3 224c 	strh.w	r2, [r3, #588]	; 0x24c
 8002028:	4b54      	ldr	r3, [pc, #336]	; (800217c <Create_Nodes+0xd18>)
 800202a:	22c6      	movs	r2, #198	; 0xc6
 800202c:	f8a3 224e 	strh.w	r2, [r3, #590]	; 0x24e
 8002030:	4b52      	ldr	r3, [pc, #328]	; (800217c <Create_Nodes+0xd18>)
 8002032:	2200      	movs	r2, #0
 8002034:	f8a3 2250 	strh.w	r2, [r3, #592]	; 0x250
 8002038:	4b50      	ldr	r3, [pc, #320]	; (800217c <Create_Nodes+0xd18>)
 800203a:	2200      	movs	r2, #0
 800203c:	f8a3 2252 	strh.w	r2, [r3, #594]	; 0x252
	N('O').middle=NEIGHBOUR3;
 8002040:	4b4e      	ldr	r3, [pc, #312]	; (800217c <Create_Nodes+0xd18>)
 8002042:	2202      	movs	r2, #2
 8002044:	f883 2254 	strb.w	r2, [r3, #596]	; 0x254

	//P node
	N('P').worth=2;
 8002048:	4b4c      	ldr	r3, [pc, #304]	; (800217c <Create_Nodes+0xd18>)
 800204a:	2202      	movs	r2, #2
 800204c:	f8c3 225c 	str.w	r2, [r3, #604]	; 0x25c
	N('P').type=1;
 8002050:	4b4a      	ldr	r3, [pc, #296]	; (800217c <Create_Nodes+0xd18>)
 8002052:	2201      	movs	r2, #1
 8002054:	f8c3 2260 	str.w	r2, [r3, #608]	; 0x260
	VALUE_2(N('P').neighbours,0,0,'M','N',0,'Q');
 8002058:	4b48      	ldr	r3, [pc, #288]	; (800217c <Create_Nodes+0xd18>)
 800205a:	2200      	movs	r2, #0
 800205c:	f883 2264 	strb.w	r2, [r3, #612]	; 0x264
 8002060:	4b46      	ldr	r3, [pc, #280]	; (800217c <Create_Nodes+0xd18>)
 8002062:	2200      	movs	r2, #0
 8002064:	f883 2265 	strb.w	r2, [r3, #613]	; 0x265
 8002068:	4b44      	ldr	r3, [pc, #272]	; (800217c <Create_Nodes+0xd18>)
 800206a:	224d      	movs	r2, #77	; 0x4d
 800206c:	f883 2266 	strb.w	r2, [r3, #614]	; 0x266
 8002070:	4b42      	ldr	r3, [pc, #264]	; (800217c <Create_Nodes+0xd18>)
 8002072:	224e      	movs	r2, #78	; 0x4e
 8002074:	f883 2267 	strb.w	r2, [r3, #615]	; 0x267
 8002078:	4b40      	ldr	r3, [pc, #256]	; (800217c <Create_Nodes+0xd18>)
 800207a:	2200      	movs	r2, #0
 800207c:	f883 2268 	strb.w	r2, [r3, #616]	; 0x268
 8002080:	4b3e      	ldr	r3, [pc, #248]	; (800217c <Create_Nodes+0xd18>)
 8002082:	2251      	movs	r2, #81	; 0x51
 8002084:	f883 2269 	strb.w	r2, [r3, #617]	; 0x269
	VALUE_2(N('P').directions,0,0,2,2,0,2);
 8002088:	4b3c      	ldr	r3, [pc, #240]	; (800217c <Create_Nodes+0xd18>)
 800208a:	2200      	movs	r2, #0
 800208c:	f883 226a 	strb.w	r2, [r3, #618]	; 0x26a
 8002090:	4b3a      	ldr	r3, [pc, #232]	; (800217c <Create_Nodes+0xd18>)
 8002092:	2200      	movs	r2, #0
 8002094:	f883 226b 	strb.w	r2, [r3, #619]	; 0x26b
 8002098:	4b38      	ldr	r3, [pc, #224]	; (800217c <Create_Nodes+0xd18>)
 800209a:	2202      	movs	r2, #2
 800209c:	f883 226c 	strb.w	r2, [r3, #620]	; 0x26c
 80020a0:	4b36      	ldr	r3, [pc, #216]	; (800217c <Create_Nodes+0xd18>)
 80020a2:	2202      	movs	r2, #2
 80020a4:	f883 226d 	strb.w	r2, [r3, #621]	; 0x26d
 80020a8:	4b34      	ldr	r3, [pc, #208]	; (800217c <Create_Nodes+0xd18>)
 80020aa:	2200      	movs	r2, #0
 80020ac:	f883 226e 	strb.w	r2, [r3, #622]	; 0x26e
 80020b0:	4b32      	ldr	r3, [pc, #200]	; (800217c <Create_Nodes+0xd18>)
 80020b2:	2202      	movs	r2, #2
 80020b4:	f883 226f 	strb.w	r2, [r3, #623]	; 0x26f
	VALUE_2(N('P').distance,0,0,198,197,0,241);
 80020b8:	4b30      	ldr	r3, [pc, #192]	; (800217c <Create_Nodes+0xd18>)
 80020ba:	2200      	movs	r2, #0
 80020bc:	f8a3 2270 	strh.w	r2, [r3, #624]	; 0x270
 80020c0:	4b2e      	ldr	r3, [pc, #184]	; (800217c <Create_Nodes+0xd18>)
 80020c2:	2200      	movs	r2, #0
 80020c4:	f8a3 2272 	strh.w	r2, [r3, #626]	; 0x272
 80020c8:	4b2c      	ldr	r3, [pc, #176]	; (800217c <Create_Nodes+0xd18>)
 80020ca:	22c6      	movs	r2, #198	; 0xc6
 80020cc:	f8a3 2274 	strh.w	r2, [r3, #628]	; 0x274
 80020d0:	4b2a      	ldr	r3, [pc, #168]	; (800217c <Create_Nodes+0xd18>)
 80020d2:	22c5      	movs	r2, #197	; 0xc5
 80020d4:	f8a3 2276 	strh.w	r2, [r3, #630]	; 0x276
 80020d8:	4b28      	ldr	r3, [pc, #160]	; (800217c <Create_Nodes+0xd18>)
 80020da:	2200      	movs	r2, #0
 80020dc:	f8a3 2278 	strh.w	r2, [r3, #632]	; 0x278
 80020e0:	4b26      	ldr	r3, [pc, #152]	; (800217c <Create_Nodes+0xd18>)
 80020e2:	22f1      	movs	r2, #241	; 0xf1
 80020e4:	f8a3 227a 	strh.w	r2, [r3, #634]	; 0x27a
	N('P').middle=NEIGHBOUR4;
 80020e8:	4b24      	ldr	r3, [pc, #144]	; (800217c <Create_Nodes+0xd18>)
 80020ea:	2203      	movs	r2, #3
 80020ec:	f883 227c 	strb.w	r2, [r3, #636]	; 0x27c

	//Q node
	N('Q').worth=2;
 80020f0:	4b22      	ldr	r3, [pc, #136]	; (800217c <Create_Nodes+0xd18>)
 80020f2:	2202      	movs	r2, #2
 80020f4:	f8c3 2284 	str.w	r2, [r3, #644]	; 0x284
	N('Q').type=1;
 80020f8:	4b20      	ldr	r3, [pc, #128]	; (800217c <Create_Nodes+0xd18>)
 80020fa:	2201      	movs	r2, #1
 80020fc:	f8c3 2288 	str.w	r2, [r3, #648]	; 0x288
	VALUE_2(N('Q').neighbours,'P',0,'N','O',0,0);
 8002100:	4b1e      	ldr	r3, [pc, #120]	; (800217c <Create_Nodes+0xd18>)
 8002102:	2250      	movs	r2, #80	; 0x50
 8002104:	f883 228c 	strb.w	r2, [r3, #652]	; 0x28c
 8002108:	4b1c      	ldr	r3, [pc, #112]	; (800217c <Create_Nodes+0xd18>)
 800210a:	2200      	movs	r2, #0
 800210c:	f883 228d 	strb.w	r2, [r3, #653]	; 0x28d
 8002110:	4b1a      	ldr	r3, [pc, #104]	; (800217c <Create_Nodes+0xd18>)
 8002112:	224e      	movs	r2, #78	; 0x4e
 8002114:	f883 228e 	strb.w	r2, [r3, #654]	; 0x28e
 8002118:	4b18      	ldr	r3, [pc, #96]	; (800217c <Create_Nodes+0xd18>)
 800211a:	224f      	movs	r2, #79	; 0x4f
 800211c:	f883 228f 	strb.w	r2, [r3, #655]	; 0x28f
 8002120:	4b16      	ldr	r3, [pc, #88]	; (800217c <Create_Nodes+0xd18>)
 8002122:	2200      	movs	r2, #0
 8002124:	f883 2290 	strb.w	r2, [r3, #656]	; 0x290
 8002128:	4b14      	ldr	r3, [pc, #80]	; (800217c <Create_Nodes+0xd18>)
 800212a:	2200      	movs	r2, #0
 800212c:	f883 2291 	strb.w	r2, [r3, #657]	; 0x291
	VALUE_2(N('Q').directions,1,0,2,2,0,0);
 8002130:	4b12      	ldr	r3, [pc, #72]	; (800217c <Create_Nodes+0xd18>)
 8002132:	2201      	movs	r2, #1
 8002134:	f883 2292 	strb.w	r2, [r3, #658]	; 0x292
 8002138:	4b10      	ldr	r3, [pc, #64]	; (800217c <Create_Nodes+0xd18>)
 800213a:	2200      	movs	r2, #0
 800213c:	f883 2293 	strb.w	r2, [r3, #659]	; 0x293
 8002140:	4b0e      	ldr	r3, [pc, #56]	; (800217c <Create_Nodes+0xd18>)
 8002142:	2202      	movs	r2, #2
 8002144:	f883 2294 	strb.w	r2, [r3, #660]	; 0x294
 8002148:	4b0c      	ldr	r3, [pc, #48]	; (800217c <Create_Nodes+0xd18>)
 800214a:	2202      	movs	r2, #2
 800214c:	f883 2295 	strb.w	r2, [r3, #661]	; 0x295
 8002150:	4b0a      	ldr	r3, [pc, #40]	; (800217c <Create_Nodes+0xd18>)
 8002152:	2200      	movs	r2, #0
 8002154:	f883 2296 	strb.w	r2, [r3, #662]	; 0x296
 8002158:	4b08      	ldr	r3, [pc, #32]	; (800217c <Create_Nodes+0xd18>)
 800215a:	2200      	movs	r2, #0
 800215c:	f883 2297 	strb.w	r2, [r3, #663]	; 0x297
	VALUE_2(N('Q').distance,241,0,198,197,0,0);
 8002160:	4b06      	ldr	r3, [pc, #24]	; (800217c <Create_Nodes+0xd18>)
 8002162:	22f1      	movs	r2, #241	; 0xf1
 8002164:	f8a3 2298 	strh.w	r2, [r3, #664]	; 0x298
 8002168:	4b04      	ldr	r3, [pc, #16]	; (800217c <Create_Nodes+0xd18>)
 800216a:	2200      	movs	r2, #0
 800216c:	f8a3 229a 	strh.w	r2, [r3, #666]	; 0x29a
 8002170:	4b02      	ldr	r3, [pc, #8]	; (800217c <Create_Nodes+0xd18>)
 8002172:	22c6      	movs	r2, #198	; 0xc6
 8002174:	f8a3 229c 	strh.w	r2, [r3, #668]	; 0x29c
 8002178:	e002      	b.n	8002180 <Create_Nodes+0xd1c>
 800217a:	bf00      	nop
 800217c:	20000360 	.word	0x20000360
 8002180:	4bca      	ldr	r3, [pc, #808]	; (80024ac <Create_Nodes+0x1048>)
 8002182:	22c5      	movs	r2, #197	; 0xc5
 8002184:	f8a3 229e 	strh.w	r2, [r3, #670]	; 0x29e
 8002188:	4bc8      	ldr	r3, [pc, #800]	; (80024ac <Create_Nodes+0x1048>)
 800218a:	2200      	movs	r2, #0
 800218c:	f8a3 22a0 	strh.w	r2, [r3, #672]	; 0x2a0
 8002190:	4bc6      	ldr	r3, [pc, #792]	; (80024ac <Create_Nodes+0x1048>)
 8002192:	2200      	movs	r2, #0
 8002194:	f8a3 22a2 	strh.w	r2, [r3, #674]	; 0x2a2
	N('Q').middle=NEIGHBOUR3;
 8002198:	4bc4      	ldr	r3, [pc, #784]	; (80024ac <Create_Nodes+0x1048>)
 800219a:	2202      	movs	r2, #2
 800219c:	f883 22a4 	strb.w	r2, [r3, #676]	; 0x2a4

	//R node
	N('R').worth=0;
 80021a0:	4bc2      	ldr	r3, [pc, #776]	; (80024ac <Create_Nodes+0x1048>)
 80021a2:	2200      	movs	r2, #0
 80021a4:	f8c3 22ac 	str.w	r2, [r3, #684]	; 0x2ac
	N('R').type=3;
 80021a8:	4bc0      	ldr	r3, [pc, #768]	; (80024ac <Create_Nodes+0x1048>)
 80021aa:	2203      	movs	r2, #3
 80021ac:	f8c3 22b0 	str.w	r2, [r3, #688]	; 0x2b0
	VALUE_2(N('R').neighbours,0,0,0,'M',0,'P');
 80021b0:	4bbe      	ldr	r3, [pc, #760]	; (80024ac <Create_Nodes+0x1048>)
 80021b2:	2200      	movs	r2, #0
 80021b4:	f883 22b4 	strb.w	r2, [r3, #692]	; 0x2b4
 80021b8:	4bbc      	ldr	r3, [pc, #752]	; (80024ac <Create_Nodes+0x1048>)
 80021ba:	2200      	movs	r2, #0
 80021bc:	f883 22b5 	strb.w	r2, [r3, #693]	; 0x2b5
 80021c0:	4bba      	ldr	r3, [pc, #744]	; (80024ac <Create_Nodes+0x1048>)
 80021c2:	2200      	movs	r2, #0
 80021c4:	f883 22b6 	strb.w	r2, [r3, #694]	; 0x2b6
 80021c8:	4bb8      	ldr	r3, [pc, #736]	; (80024ac <Create_Nodes+0x1048>)
 80021ca:	224d      	movs	r2, #77	; 0x4d
 80021cc:	f883 22b7 	strb.w	r2, [r3, #695]	; 0x2b7
 80021d0:	4bb6      	ldr	r3, [pc, #728]	; (80024ac <Create_Nodes+0x1048>)
 80021d2:	2200      	movs	r2, #0
 80021d4:	f883 22b8 	strb.w	r2, [r3, #696]	; 0x2b8
 80021d8:	4bb4      	ldr	r3, [pc, #720]	; (80024ac <Create_Nodes+0x1048>)
 80021da:	2250      	movs	r2, #80	; 0x50
 80021dc:	f883 22b9 	strb.w	r2, [r3, #697]	; 0x2b9
	VALUE_2(N('R').directions,0,0,0,2,0,2);
 80021e0:	4bb2      	ldr	r3, [pc, #712]	; (80024ac <Create_Nodes+0x1048>)
 80021e2:	2200      	movs	r2, #0
 80021e4:	f883 22ba 	strb.w	r2, [r3, #698]	; 0x2ba
 80021e8:	4bb0      	ldr	r3, [pc, #704]	; (80024ac <Create_Nodes+0x1048>)
 80021ea:	2200      	movs	r2, #0
 80021ec:	f883 22bb 	strb.w	r2, [r3, #699]	; 0x2bb
 80021f0:	4bae      	ldr	r3, [pc, #696]	; (80024ac <Create_Nodes+0x1048>)
 80021f2:	2200      	movs	r2, #0
 80021f4:	f883 22bc 	strb.w	r2, [r3, #700]	; 0x2bc
 80021f8:	4bac      	ldr	r3, [pc, #688]	; (80024ac <Create_Nodes+0x1048>)
 80021fa:	2202      	movs	r2, #2
 80021fc:	f883 22bd 	strb.w	r2, [r3, #701]	; 0x2bd
 8002200:	4baa      	ldr	r3, [pc, #680]	; (80024ac <Create_Nodes+0x1048>)
 8002202:	2200      	movs	r2, #0
 8002204:	f883 22be 	strb.w	r2, [r3, #702]	; 0x2be
 8002208:	4ba8      	ldr	r3, [pc, #672]	; (80024ac <Create_Nodes+0x1048>)
 800220a:	2202      	movs	r2, #2
 800220c:	f883 22bf 	strb.w	r2, [r3, #703]	; 0x2bf
	VALUE_2(N('R').distance,0,0,0,197,0,241);
 8002210:	4ba6      	ldr	r3, [pc, #664]	; (80024ac <Create_Nodes+0x1048>)
 8002212:	2200      	movs	r2, #0
 8002214:	f8a3 22c0 	strh.w	r2, [r3, #704]	; 0x2c0
 8002218:	4ba4      	ldr	r3, [pc, #656]	; (80024ac <Create_Nodes+0x1048>)
 800221a:	2200      	movs	r2, #0
 800221c:	f8a3 22c2 	strh.w	r2, [r3, #706]	; 0x2c2
 8002220:	4ba2      	ldr	r3, [pc, #648]	; (80024ac <Create_Nodes+0x1048>)
 8002222:	2200      	movs	r2, #0
 8002224:	f8a3 22c4 	strh.w	r2, [r3, #708]	; 0x2c4
 8002228:	4ba0      	ldr	r3, [pc, #640]	; (80024ac <Create_Nodes+0x1048>)
 800222a:	22c5      	movs	r2, #197	; 0xc5
 800222c:	f8a3 22c6 	strh.w	r2, [r3, #710]	; 0x2c6
 8002230:	4b9e      	ldr	r3, [pc, #632]	; (80024ac <Create_Nodes+0x1048>)
 8002232:	2200      	movs	r2, #0
 8002234:	f8a3 22c8 	strh.w	r2, [r3, #712]	; 0x2c8
 8002238:	4b9c      	ldr	r3, [pc, #624]	; (80024ac <Create_Nodes+0x1048>)
 800223a:	22f1      	movs	r2, #241	; 0xf1
 800223c:	f8a3 22ca 	strh.w	r2, [r3, #714]	; 0x2ca
	N('R').middle=NEIGHBOUR6;
 8002240:	4b9a      	ldr	r3, [pc, #616]	; (80024ac <Create_Nodes+0x1048>)
 8002242:	2205      	movs	r2, #5
 8002244:	f883 22cc 	strb.w	r2, [r3, #716]	; 0x2cc

	//S node
	N('S').worth=0;
 8002248:	4b98      	ldr	r3, [pc, #608]	; (80024ac <Create_Nodes+0x1048>)
 800224a:	2200      	movs	r2, #0
 800224c:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
	N('S').type=3;
 8002250:	4b96      	ldr	r3, [pc, #600]	; (80024ac <Create_Nodes+0x1048>)
 8002252:	2203      	movs	r2, #3
 8002254:	f8c3 22d8 	str.w	r2, [r3, #728]	; 0x2d8
	VALUE_2(N('S').neighbours,'Q',0,'O',0,0,0);
 8002258:	4b94      	ldr	r3, [pc, #592]	; (80024ac <Create_Nodes+0x1048>)
 800225a:	2251      	movs	r2, #81	; 0x51
 800225c:	f883 22dc 	strb.w	r2, [r3, #732]	; 0x2dc
 8002260:	4b92      	ldr	r3, [pc, #584]	; (80024ac <Create_Nodes+0x1048>)
 8002262:	2200      	movs	r2, #0
 8002264:	f883 22dd 	strb.w	r2, [r3, #733]	; 0x2dd
 8002268:	4b90      	ldr	r3, [pc, #576]	; (80024ac <Create_Nodes+0x1048>)
 800226a:	224f      	movs	r2, #79	; 0x4f
 800226c:	f883 22de 	strb.w	r2, [r3, #734]	; 0x2de
 8002270:	4b8e      	ldr	r3, [pc, #568]	; (80024ac <Create_Nodes+0x1048>)
 8002272:	2200      	movs	r2, #0
 8002274:	f883 22df 	strb.w	r2, [r3, #735]	; 0x2df
 8002278:	4b8c      	ldr	r3, [pc, #560]	; (80024ac <Create_Nodes+0x1048>)
 800227a:	2200      	movs	r2, #0
 800227c:	f883 22e0 	strb.w	r2, [r3, #736]	; 0x2e0
 8002280:	4b8a      	ldr	r3, [pc, #552]	; (80024ac <Create_Nodes+0x1048>)
 8002282:	2200      	movs	r2, #0
 8002284:	f883 22e1 	strb.w	r2, [r3, #737]	; 0x2e1
	VALUE_2(N('S').directions,1,0,2,0,0,0);
 8002288:	4b88      	ldr	r3, [pc, #544]	; (80024ac <Create_Nodes+0x1048>)
 800228a:	2201      	movs	r2, #1
 800228c:	f883 22e2 	strb.w	r2, [r3, #738]	; 0x2e2
 8002290:	4b86      	ldr	r3, [pc, #536]	; (80024ac <Create_Nodes+0x1048>)
 8002292:	2200      	movs	r2, #0
 8002294:	f883 22e3 	strb.w	r2, [r3, #739]	; 0x2e3
 8002298:	4b84      	ldr	r3, [pc, #528]	; (80024ac <Create_Nodes+0x1048>)
 800229a:	2202      	movs	r2, #2
 800229c:	f883 22e4 	strb.w	r2, [r3, #740]	; 0x2e4
 80022a0:	4b82      	ldr	r3, [pc, #520]	; (80024ac <Create_Nodes+0x1048>)
 80022a2:	2200      	movs	r2, #0
 80022a4:	f883 22e5 	strb.w	r2, [r3, #741]	; 0x2e5
 80022a8:	4b80      	ldr	r3, [pc, #512]	; (80024ac <Create_Nodes+0x1048>)
 80022aa:	2200      	movs	r2, #0
 80022ac:	f883 22e6 	strb.w	r2, [r3, #742]	; 0x2e6
 80022b0:	4b7e      	ldr	r3, [pc, #504]	; (80024ac <Create_Nodes+0x1048>)
 80022b2:	2200      	movs	r2, #0
 80022b4:	f883 22e7 	strb.w	r2, [r3, #743]	; 0x2e7
	VALUE_2(N('S').distance,241,0,198,0,0,0);
 80022b8:	4b7c      	ldr	r3, [pc, #496]	; (80024ac <Create_Nodes+0x1048>)
 80022ba:	22f1      	movs	r2, #241	; 0xf1
 80022bc:	f8a3 22e8 	strh.w	r2, [r3, #744]	; 0x2e8
 80022c0:	4b7a      	ldr	r3, [pc, #488]	; (80024ac <Create_Nodes+0x1048>)
 80022c2:	2200      	movs	r2, #0
 80022c4:	f8a3 22ea 	strh.w	r2, [r3, #746]	; 0x2ea
 80022c8:	4b78      	ldr	r3, [pc, #480]	; (80024ac <Create_Nodes+0x1048>)
 80022ca:	22c6      	movs	r2, #198	; 0xc6
 80022cc:	f8a3 22ec 	strh.w	r2, [r3, #748]	; 0x2ec
 80022d0:	4b76      	ldr	r3, [pc, #472]	; (80024ac <Create_Nodes+0x1048>)
 80022d2:	2200      	movs	r2, #0
 80022d4:	f8a3 22ee 	strh.w	r2, [r3, #750]	; 0x2ee
 80022d8:	4b74      	ldr	r3, [pc, #464]	; (80024ac <Create_Nodes+0x1048>)
 80022da:	2200      	movs	r2, #0
 80022dc:	f8a3 22f0 	strh.w	r2, [r3, #752]	; 0x2f0
 80022e0:	4b72      	ldr	r3, [pc, #456]	; (80024ac <Create_Nodes+0x1048>)
 80022e2:	2200      	movs	r2, #0
 80022e4:	f8a3 22f2 	strh.w	r2, [r3, #754]	; 0x2f2
	N('S').middle=NEIGHBOUR1;
 80022e8:	4b70      	ldr	r3, [pc, #448]	; (80024ac <Create_Nodes+0x1048>)
 80022ea:	2200      	movs	r2, #0
 80022ec:	f883 22f4 	strb.w	r2, [r3, #756]	; 0x2f4

	//T node
	N('T').worth=0;
 80022f0:	4b6e      	ldr	r3, [pc, #440]	; (80024ac <Create_Nodes+0x1048>)
 80022f2:	2200      	movs	r2, #0
 80022f4:	f8c3 22fc 	str.w	r2, [r3, #764]	; 0x2fc
	N('T').type=4;
 80022f8:	4b6c      	ldr	r3, [pc, #432]	; (80024ac <Create_Nodes+0x1048>)
 80022fa:	2204      	movs	r2, #4
 80022fc:	f8c3 2300 	str.w	r2, [r3, #768]	; 0x300
	VALUE_2(N('T').neighbours,'V',0,'U','N',0,0);
 8002300:	4b6a      	ldr	r3, [pc, #424]	; (80024ac <Create_Nodes+0x1048>)
 8002302:	2256      	movs	r2, #86	; 0x56
 8002304:	f883 2304 	strb.w	r2, [r3, #772]	; 0x304
 8002308:	4b68      	ldr	r3, [pc, #416]	; (80024ac <Create_Nodes+0x1048>)
 800230a:	2200      	movs	r2, #0
 800230c:	f883 2305 	strb.w	r2, [r3, #773]	; 0x305
 8002310:	4b66      	ldr	r3, [pc, #408]	; (80024ac <Create_Nodes+0x1048>)
 8002312:	2255      	movs	r2, #85	; 0x55
 8002314:	f883 2306 	strb.w	r2, [r3, #774]	; 0x306
 8002318:	4b64      	ldr	r3, [pc, #400]	; (80024ac <Create_Nodes+0x1048>)
 800231a:	224e      	movs	r2, #78	; 0x4e
 800231c:	f883 2307 	strb.w	r2, [r3, #775]	; 0x307
 8002320:	4b62      	ldr	r3, [pc, #392]	; (80024ac <Create_Nodes+0x1048>)
 8002322:	2200      	movs	r2, #0
 8002324:	f883 2308 	strb.w	r2, [r3, #776]	; 0x308
 8002328:	4b60      	ldr	r3, [pc, #384]	; (80024ac <Create_Nodes+0x1048>)
 800232a:	2200      	movs	r2, #0
 800232c:	f883 2309 	strb.w	r2, [r3, #777]	; 0x309
	VALUE_2(N('T').directions,2,0,1,2,0,0);
 8002330:	4b5e      	ldr	r3, [pc, #376]	; (80024ac <Create_Nodes+0x1048>)
 8002332:	2202      	movs	r2, #2
 8002334:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
 8002338:	4b5c      	ldr	r3, [pc, #368]	; (80024ac <Create_Nodes+0x1048>)
 800233a:	2200      	movs	r2, #0
 800233c:	f883 230b 	strb.w	r2, [r3, #779]	; 0x30b
 8002340:	4b5a      	ldr	r3, [pc, #360]	; (80024ac <Create_Nodes+0x1048>)
 8002342:	2201      	movs	r2, #1
 8002344:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
 8002348:	4b58      	ldr	r3, [pc, #352]	; (80024ac <Create_Nodes+0x1048>)
 800234a:	2202      	movs	r2, #2
 800234c:	f883 230d 	strb.w	r2, [r3, #781]	; 0x30d
 8002350:	4b56      	ldr	r3, [pc, #344]	; (80024ac <Create_Nodes+0x1048>)
 8002352:	2200      	movs	r2, #0
 8002354:	f883 230e 	strb.w	r2, [r3, #782]	; 0x30e
 8002358:	4b54      	ldr	r3, [pc, #336]	; (80024ac <Create_Nodes+0x1048>)
 800235a:	2200      	movs	r2, #0
 800235c:	f883 230f 	strb.w	r2, [r3, #783]	; 0x30f
	VALUE_2(N('T').distance,199-40,0,198-40,120-25,0,0);
 8002360:	4b52      	ldr	r3, [pc, #328]	; (80024ac <Create_Nodes+0x1048>)
 8002362:	229f      	movs	r2, #159	; 0x9f
 8002364:	f8a3 2310 	strh.w	r2, [r3, #784]	; 0x310
 8002368:	4b50      	ldr	r3, [pc, #320]	; (80024ac <Create_Nodes+0x1048>)
 800236a:	2200      	movs	r2, #0
 800236c:	f8a3 2312 	strh.w	r2, [r3, #786]	; 0x312
 8002370:	4b4e      	ldr	r3, [pc, #312]	; (80024ac <Create_Nodes+0x1048>)
 8002372:	229e      	movs	r2, #158	; 0x9e
 8002374:	f8a3 2314 	strh.w	r2, [r3, #788]	; 0x314
 8002378:	4b4c      	ldr	r3, [pc, #304]	; (80024ac <Create_Nodes+0x1048>)
 800237a:	225f      	movs	r2, #95	; 0x5f
 800237c:	f8a3 2316 	strh.w	r2, [r3, #790]	; 0x316
 8002380:	4b4a      	ldr	r3, [pc, #296]	; (80024ac <Create_Nodes+0x1048>)
 8002382:	2200      	movs	r2, #0
 8002384:	f8a3 2318 	strh.w	r2, [r3, #792]	; 0x318
 8002388:	4b48      	ldr	r3, [pc, #288]	; (80024ac <Create_Nodes+0x1048>)
 800238a:	2200      	movs	r2, #0
 800238c:	f8a3 231a 	strh.w	r2, [r3, #794]	; 0x31a
	N('T').middle=NEIGHBOUR4;
 8002390:	4b46      	ldr	r3, [pc, #280]	; (80024ac <Create_Nodes+0x1048>)
 8002392:	2203      	movs	r2, #3
 8002394:	f883 231c 	strb.w	r2, [r3, #796]	; 0x31c

	//U node
	N('U').worth=0;
 8002398:	4b44      	ldr	r3, [pc, #272]	; (80024ac <Create_Nodes+0x1048>)
 800239a:	2200      	movs	r2, #0
 800239c:	f8c3 2324 	str.w	r2, [r3, #804]	; 0x324
	N('U').type=3;
 80023a0:	4b42      	ldr	r3, [pc, #264]	; (80024ac <Create_Nodes+0x1048>)
 80023a2:	2203      	movs	r2, #3
 80023a4:	f8c3 2328 	str.w	r2, [r3, #808]	; 0x328
	VALUE_2(N('U').neighbours,0,'M',0,'T',0,'V');
 80023a8:	4b40      	ldr	r3, [pc, #256]	; (80024ac <Create_Nodes+0x1048>)
 80023aa:	2200      	movs	r2, #0
 80023ac:	f883 232c 	strb.w	r2, [r3, #812]	; 0x32c
 80023b0:	4b3e      	ldr	r3, [pc, #248]	; (80024ac <Create_Nodes+0x1048>)
 80023b2:	224d      	movs	r2, #77	; 0x4d
 80023b4:	f883 232d 	strb.w	r2, [r3, #813]	; 0x32d
 80023b8:	4b3c      	ldr	r3, [pc, #240]	; (80024ac <Create_Nodes+0x1048>)
 80023ba:	2200      	movs	r2, #0
 80023bc:	f883 232e 	strb.w	r2, [r3, #814]	; 0x32e
 80023c0:	4b3a      	ldr	r3, [pc, #232]	; (80024ac <Create_Nodes+0x1048>)
 80023c2:	2254      	movs	r2, #84	; 0x54
 80023c4:	f883 232f 	strb.w	r2, [r3, #815]	; 0x32f
 80023c8:	4b38      	ldr	r3, [pc, #224]	; (80024ac <Create_Nodes+0x1048>)
 80023ca:	2200      	movs	r2, #0
 80023cc:	f883 2330 	strb.w	r2, [r3, #816]	; 0x330
 80023d0:	4b36      	ldr	r3, [pc, #216]	; (80024ac <Create_Nodes+0x1048>)
 80023d2:	2256      	movs	r2, #86	; 0x56
 80023d4:	f883 2331 	strb.w	r2, [r3, #817]	; 0x331
	VALUE_2(N('U').directions,0,2,0,2,0,2);
 80023d8:	4b34      	ldr	r3, [pc, #208]	; (80024ac <Create_Nodes+0x1048>)
 80023da:	2200      	movs	r2, #0
 80023dc:	f883 2332 	strb.w	r2, [r3, #818]	; 0x332
 80023e0:	4b32      	ldr	r3, [pc, #200]	; (80024ac <Create_Nodes+0x1048>)
 80023e2:	2202      	movs	r2, #2
 80023e4:	f883 2333 	strb.w	r2, [r3, #819]	; 0x333
 80023e8:	4b30      	ldr	r3, [pc, #192]	; (80024ac <Create_Nodes+0x1048>)
 80023ea:	2200      	movs	r2, #0
 80023ec:	f883 2334 	strb.w	r2, [r3, #820]	; 0x334
 80023f0:	4b2e      	ldr	r3, [pc, #184]	; (80024ac <Create_Nodes+0x1048>)
 80023f2:	2202      	movs	r2, #2
 80023f4:	f883 2335 	strb.w	r2, [r3, #821]	; 0x335
 80023f8:	4b2c      	ldr	r3, [pc, #176]	; (80024ac <Create_Nodes+0x1048>)
 80023fa:	2200      	movs	r2, #0
 80023fc:	f883 2336 	strb.w	r2, [r3, #822]	; 0x336
 8002400:	4b2a      	ldr	r3, [pc, #168]	; (80024ac <Create_Nodes+0x1048>)
 8002402:	2202      	movs	r2, #2
 8002404:	f883 2337 	strb.w	r2, [r3, #823]	; 0x337
	VALUE_2(N('U').distance,0,319-25,0,198,0,241-25);
 8002408:	4b28      	ldr	r3, [pc, #160]	; (80024ac <Create_Nodes+0x1048>)
 800240a:	2200      	movs	r2, #0
 800240c:	f8a3 2338 	strh.w	r2, [r3, #824]	; 0x338
 8002410:	4b26      	ldr	r3, [pc, #152]	; (80024ac <Create_Nodes+0x1048>)
 8002412:	f44f 7293 	mov.w	r2, #294	; 0x126
 8002416:	f8a3 233a 	strh.w	r2, [r3, #826]	; 0x33a
 800241a:	4b24      	ldr	r3, [pc, #144]	; (80024ac <Create_Nodes+0x1048>)
 800241c:	2200      	movs	r2, #0
 800241e:	f8a3 233c 	strh.w	r2, [r3, #828]	; 0x33c
 8002422:	4b22      	ldr	r3, [pc, #136]	; (80024ac <Create_Nodes+0x1048>)
 8002424:	22c6      	movs	r2, #198	; 0xc6
 8002426:	f8a3 233e 	strh.w	r2, [r3, #830]	; 0x33e
 800242a:	4b20      	ldr	r3, [pc, #128]	; (80024ac <Create_Nodes+0x1048>)
 800242c:	2200      	movs	r2, #0
 800242e:	f8a3 2340 	strh.w	r2, [r3, #832]	; 0x340
 8002432:	4b1e      	ldr	r3, [pc, #120]	; (80024ac <Create_Nodes+0x1048>)
 8002434:	22d8      	movs	r2, #216	; 0xd8
 8002436:	f8a3 2342 	strh.w	r2, [r3, #834]	; 0x342
	N('U').middle=NEIGHBOUR3;
 800243a:	4b1c      	ldr	r3, [pc, #112]	; (80024ac <Create_Nodes+0x1048>)
 800243c:	2202      	movs	r2, #2
 800243e:	f883 2344 	strb.w	r2, [r3, #836]	; 0x344

	//V node
	N('V').worth=0;
 8002442:	4b1a      	ldr	r3, [pc, #104]	; (80024ac <Create_Nodes+0x1048>)
 8002444:	2200      	movs	r2, #0
 8002446:	f8c3 234c 	str.w	r2, [r3, #844]	; 0x34c
	N('V').type=3;
 800244a:	4b18      	ldr	r3, [pc, #96]	; (80024ac <Create_Nodes+0x1048>)
 800244c:	2203      	movs	r2, #3
 800244e:	f8c3 2350 	str.w	r2, [r3, #848]	; 0x350
	VALUE_2(N('V').neighbours,'U',0,'T','O',0,0);
 8002452:	4b16      	ldr	r3, [pc, #88]	; (80024ac <Create_Nodes+0x1048>)
 8002454:	2255      	movs	r2, #85	; 0x55
 8002456:	f883 2354 	strb.w	r2, [r3, #852]	; 0x354
 800245a:	4b14      	ldr	r3, [pc, #80]	; (80024ac <Create_Nodes+0x1048>)
 800245c:	2200      	movs	r2, #0
 800245e:	f883 2355 	strb.w	r2, [r3, #853]	; 0x355
 8002462:	4b12      	ldr	r3, [pc, #72]	; (80024ac <Create_Nodes+0x1048>)
 8002464:	2254      	movs	r2, #84	; 0x54
 8002466:	f883 2356 	strb.w	r2, [r3, #854]	; 0x356
 800246a:	4b10      	ldr	r3, [pc, #64]	; (80024ac <Create_Nodes+0x1048>)
 800246c:	224f      	movs	r2, #79	; 0x4f
 800246e:	f883 2357 	strb.w	r2, [r3, #855]	; 0x357
 8002472:	4b0e      	ldr	r3, [pc, #56]	; (80024ac <Create_Nodes+0x1048>)
 8002474:	2200      	movs	r2, #0
 8002476:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
 800247a:	4b0c      	ldr	r3, [pc, #48]	; (80024ac <Create_Nodes+0x1048>)
 800247c:	2200      	movs	r2, #0
 800247e:	f883 2359 	strb.w	r2, [r3, #857]	; 0x359
	VALUE_2(N('V').directions,1,0,2,2,0,0);
 8002482:	4b0a      	ldr	r3, [pc, #40]	; (80024ac <Create_Nodes+0x1048>)
 8002484:	2201      	movs	r2, #1
 8002486:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 800248a:	4b08      	ldr	r3, [pc, #32]	; (80024ac <Create_Nodes+0x1048>)
 800248c:	2200      	movs	r2, #0
 800248e:	f883 235b 	strb.w	r2, [r3, #859]	; 0x35b
 8002492:	4b06      	ldr	r3, [pc, #24]	; (80024ac <Create_Nodes+0x1048>)
 8002494:	2202      	movs	r2, #2
 8002496:	f883 235c 	strb.w	r2, [r3, #860]	; 0x35c
 800249a:	4b04      	ldr	r3, [pc, #16]	; (80024ac <Create_Nodes+0x1048>)
 800249c:	2202      	movs	r2, #2
 800249e:	f883 235d 	strb.w	r2, [r3, #861]	; 0x35d
 80024a2:	4b02      	ldr	r3, [pc, #8]	; (80024ac <Create_Nodes+0x1048>)
 80024a4:	2200      	movs	r2, #0
 80024a6:	f883 235e 	strb.w	r2, [r3, #862]	; 0x35e
 80024aa:	e001      	b.n	80024b0 <Create_Nodes+0x104c>
 80024ac:	20000360 	.word	0x20000360
 80024b0:	4b72      	ldr	r3, [pc, #456]	; (800267c <Create_Nodes+0x1218>)
 80024b2:	2200      	movs	r2, #0
 80024b4:	f883 235f 	strb.w	r2, [r3, #863]	; 0x35f
	VALUE_2(N('V').distance,241-25,0,199,318-25,0,0);
 80024b8:	4b70      	ldr	r3, [pc, #448]	; (800267c <Create_Nodes+0x1218>)
 80024ba:	22d8      	movs	r2, #216	; 0xd8
 80024bc:	f8a3 2360 	strh.w	r2, [r3, #864]	; 0x360
 80024c0:	4b6e      	ldr	r3, [pc, #440]	; (800267c <Create_Nodes+0x1218>)
 80024c2:	2200      	movs	r2, #0
 80024c4:	f8a3 2362 	strh.w	r2, [r3, #866]	; 0x362
 80024c8:	4b6c      	ldr	r3, [pc, #432]	; (800267c <Create_Nodes+0x1218>)
 80024ca:	22c7      	movs	r2, #199	; 0xc7
 80024cc:	f8a3 2364 	strh.w	r2, [r3, #868]	; 0x364
 80024d0:	4b6a      	ldr	r3, [pc, #424]	; (800267c <Create_Nodes+0x1218>)
 80024d2:	f240 1225 	movw	r2, #293	; 0x125
 80024d6:	f8a3 2366 	strh.w	r2, [r3, #870]	; 0x366
 80024da:	4b68      	ldr	r3, [pc, #416]	; (800267c <Create_Nodes+0x1218>)
 80024dc:	2200      	movs	r2, #0
 80024de:	f8a3 2368 	strh.w	r2, [r3, #872]	; 0x368
 80024e2:	4b66      	ldr	r3, [pc, #408]	; (800267c <Create_Nodes+0x1218>)
 80024e4:	2200      	movs	r2, #0
 80024e6:	f8a3 236a 	strh.w	r2, [r3, #874]	; 0x36a
	N('V').middle=NEIGHBOUR3;
 80024ea:	4b64      	ldr	r3, [pc, #400]	; (800267c <Create_Nodes+0x1218>)
 80024ec:	2202      	movs	r2, #2
 80024ee:	f883 236c 	strb.w	r2, [r3, #876]	; 0x36c

	//Nodeértékek backup mentésből való visszatöltése
	if(SW2)//ha a kacsapoló2 a megfelelő állapotban van (világít a piros LED)
 80024f2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80024f6:	4862      	ldr	r0, [pc, #392]	; (8002680 <Create_Nodes+0x121c>)
 80024f8:	f007 f8b0 	bl	800965c <HAL_GPIO_ReadPin>
 80024fc:	4603      	mov	r3, r0
 80024fe:	2b00      	cmp	r3, #0
 8002500:	f000 80a0 	beq.w	8002644 <Create_Nodes+0x11e0>
	{
		uint32_t check_flash = *(__IO uint32_t *) FLASH_ADDRESS_NODEWORTH; //tényleg ottvanak  flashbena megfelelő helyen a worth értékek?
 8002504:	4b5f      	ldr	r3, [pc, #380]	; (8002684 <Create_Nodes+0x1220>)
 8002506:	681b      	ldr	r3, [r3, #0]
 8002508:	66bb      	str	r3, [r7, #104]	; 0x68

		if(check_flash==0xffffffff)//nincs semmi a flashben
 800250a:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800250c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002510:	d161      	bne.n	80025d6 <Create_Nodes+0x1172>
		{
			char str[]="Default worths because of FLASH ERROR!\n\r";
 8002512:	4b5d      	ldr	r3, [pc, #372]	; (8002688 <Create_Nodes+0x1224>)
 8002514:	f107 040c 	add.w	r4, r7, #12
 8002518:	461d      	mov	r5, r3
 800251a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800251c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800251e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002520:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002522:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002526:	c403      	stmia	r4!, {r0, r1}
 8002528:	7022      	strb	r2, [r4, #0]
			HAL_UART_Transmit(huart_debugg,(uint8_t*) str, strlen(str), 10);
 800252a:	f107 030c 	add.w	r3, r7, #12
 800252e:	4618      	mov	r0, r3
 8002530:	f7fd fe6e 	bl	8000210 <strlen>
 8002534:	4603      	mov	r3, r0
 8002536:	b29a      	uxth	r2, r3
 8002538:	f107 010c 	add.w	r1, r7, #12
 800253c:	230a      	movs	r3, #10
 800253e:	6878      	ldr	r0, [r7, #4]
 8002540:	f009 fdf7 	bl	800c132 <HAL_UART_Transmit>
			HAL_FLASH_Unlock();
 8002544:	f006 fd3c 	bl	8008fc0 <HAL_FLASH_Unlock>
			HAL_Delay(50);
 8002548:	2032      	movs	r0, #50	; 0x32
 800254a:	f005 fa05 	bl	8007958 <HAL_Delay>
			FLASH_Erase_Sector(6, FLASH_VOLTAGE_RANGE_3);
 800254e:	2102      	movs	r1, #2
 8002550:	2006      	movs	r0, #6
 8002552:	f006 fea7 	bl	80092a4 <FLASH_Erase_Sector>
			HAL_Delay(50);
 8002556:	2032      	movs	r0, #50	; 0x32
 8002558:	f005 f9fe 	bl	8007958 <HAL_Delay>
			HAL_FLASH_Lock();
 800255c:	f006 fd52 	bl	8009004 <HAL_FLASH_Lock>
			HAL_Delay(50);
 8002560:	2032      	movs	r0, #50	; 0x32
 8002562:	f005 f9f9 	bl	8007958 <HAL_Delay>
			HAL_FLASH_Unlock();
 8002566:	f006 fd2b 	bl	8008fc0 <HAL_FLASH_Unlock>
			HAL_Delay(50);
 800256a:	2032      	movs	r0, #50	; 0x32
 800256c:	f005 f9f4 	bl	8007958 <HAL_Delay>
			for(i=0;i<22;i++)
 8002570:	2300      	movs	r3, #0
 8002572:	66fb      	str	r3, [r7, #108]	; 0x6c
 8002574:	e01a      	b.n	80025ac <Create_Nodes+0x1148>
			{
				HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+i, Nodes[i].worth);
 8002576:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002578:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 800257c:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
 8002580:	4618      	mov	r0, r3
 8002582:	493e      	ldr	r1, [pc, #248]	; (800267c <Create_Nodes+0x1218>)
 8002584:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8002586:	4613      	mov	r3, r2
 8002588:	009b      	lsls	r3, r3, #2
 800258a:	4413      	add	r3, r2
 800258c:	00db      	lsls	r3, r3, #3
 800258e:	440b      	add	r3, r1
 8002590:	3304      	adds	r3, #4
 8002592:	681b      	ldr	r3, [r3, #0]
 8002594:	17da      	asrs	r2, r3, #31
 8002596:	469a      	mov	sl, r3
 8002598:	4693      	mov	fp, r2
 800259a:	4652      	mov	r2, sl
 800259c:	465b      	mov	r3, fp
 800259e:	4601      	mov	r1, r0
 80025a0:	2000      	movs	r0, #0
 80025a2:	f006 fcb9 	bl	8008f18 <HAL_FLASH_Program>
			for(i=0;i<22;i++)
 80025a6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80025a8:	3301      	adds	r3, #1
 80025aa:	66fb      	str	r3, [r7, #108]	; 0x6c
 80025ac:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80025ae:	2b15      	cmp	r3, #21
 80025b0:	dde1      	ble.n	8002576 <Create_Nodes+0x1112>
			}
			HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+22, collectedPoints);
 80025b2:	4b36      	ldr	r3, [pc, #216]	; (800268c <Create_Nodes+0x1228>)
 80025b4:	781b      	ldrb	r3, [r3, #0]
 80025b6:	b2db      	uxtb	r3, r3
 80025b8:	2200      	movs	r2, #0
 80025ba:	4698      	mov	r8, r3
 80025bc:	4691      	mov	r9, r2
 80025be:	4642      	mov	r2, r8
 80025c0:	464b      	mov	r3, r9
 80025c2:	4933      	ldr	r1, [pc, #204]	; (8002690 <Create_Nodes+0x122c>)
 80025c4:	2000      	movs	r0, #0
 80025c6:	f006 fca7 	bl	8008f18 <HAL_FLASH_Program>
			HAL_Delay(50);
 80025ca:	2032      	movs	r0, #50	; 0x32
 80025cc:	f005 f9c4 	bl	8007958 <HAL_Delay>
			HAL_FLASH_Lock();
 80025d0:	f006 fd18 	bl	8009004 <HAL_FLASH_Lock>
 80025d4:	e04d      	b.n	8002672 <Create_Nodes+0x120e>
			return; //ha nem akkor használjuk a default értékeket
		}
		for(i=0;i<22;i++)
 80025d6:	2300      	movs	r3, #0
 80025d8:	66fb      	str	r3, [r7, #108]	; 0x6c
 80025da:	e013      	b.n	8002604 <Create_Nodes+0x11a0>
		{
			Nodes[i].worth=*(__IO uint8_t *) (FLASH_ADDRESS_NODEWORTH+i); //ha igen akkor töltsük be a backup mentést
 80025dc:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80025de:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 80025e2:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
 80025e6:	781b      	ldrb	r3, [r3, #0]
 80025e8:	b2db      	uxtb	r3, r3
 80025ea:	4618      	mov	r0, r3
 80025ec:	4923      	ldr	r1, [pc, #140]	; (800267c <Create_Nodes+0x1218>)
 80025ee:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80025f0:	4613      	mov	r3, r2
 80025f2:	009b      	lsls	r3, r3, #2
 80025f4:	4413      	add	r3, r2
 80025f6:	00db      	lsls	r3, r3, #3
 80025f8:	440b      	add	r3, r1
 80025fa:	3304      	adds	r3, #4
 80025fc:	6018      	str	r0, [r3, #0]
		for(i=0;i<22;i++)
 80025fe:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002600:	3301      	adds	r3, #1
 8002602:	66fb      	str	r3, [r7, #108]	; 0x6c
 8002604:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002606:	2b15      	cmp	r3, #21
 8002608:	dde8      	ble.n	80025dc <Create_Nodes+0x1178>
		}
		collectedPoints=*(__IO uint8_t *) (FLASH_ADDRESS_NODEWORTH+22);
 800260a:	4b21      	ldr	r3, [pc, #132]	; (8002690 <Create_Nodes+0x122c>)
 800260c:	781b      	ldrb	r3, [r3, #0]
 800260e:	b2da      	uxtb	r2, r3
 8002610:	4b1e      	ldr	r3, [pc, #120]	; (800268c <Create_Nodes+0x1228>)
 8002612:	701a      	strb	r2, [r3, #0]
		char str[]="Worths from FLASH backup!\n\r";
 8002614:	4b1f      	ldr	r3, [pc, #124]	; (8002694 <Create_Nodes+0x1230>)
 8002616:	f107 044c 	add.w	r4, r7, #76	; 0x4c
 800261a:	461d      	mov	r5, r3
 800261c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800261e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002620:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002624:	e884 0007 	stmia.w	r4, {r0, r1, r2}
		HAL_UART_Transmit(huart_debugg,(uint8_t*) str, strlen(str), 10);
 8002628:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800262c:	4618      	mov	r0, r3
 800262e:	f7fd fdef 	bl	8000210 <strlen>
 8002632:	4603      	mov	r3, r0
 8002634:	b29a      	uxth	r2, r3
 8002636:	f107 014c 	add.w	r1, r7, #76	; 0x4c
 800263a:	230a      	movs	r3, #10
 800263c:	6878      	ldr	r0, [r7, #4]
 800263e:	f009 fd78 	bl	800c132 <HAL_UART_Transmit>
 8002642:	e016      	b.n	8002672 <Create_Nodes+0x120e>
	}
	else
	{
		char str[]="Default worths!\n\r";
 8002644:	4b14      	ldr	r3, [pc, #80]	; (8002698 <Create_Nodes+0x1234>)
 8002646:	f107 0438 	add.w	r4, r7, #56	; 0x38
 800264a:	461d      	mov	r5, r3
 800264c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800264e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002650:	682b      	ldr	r3, [r5, #0]
 8002652:	8023      	strh	r3, [r4, #0]
		HAL_UART_Transmit(huart_debugg,(uint8_t*) str, strlen(str), 10);
 8002654:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8002658:	4618      	mov	r0, r3
 800265a:	f7fd fdd9 	bl	8000210 <strlen>
 800265e:	4603      	mov	r3, r0
 8002660:	b29a      	uxth	r2, r3
 8002662:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8002666:	230a      	movs	r3, #10
 8002668:	6878      	ldr	r0, [r7, #4]
 800266a:	f009 fd62 	bl	800c132 <HAL_UART_Transmit>
 800266e:	e000      	b.n	8002672 <Create_Nodes+0x120e>
	if(mode!=SKILL)return;
 8002670:	bf00      	nop
	}
}
 8002672:	3770      	adds	r7, #112	; 0x70
 8002674:	46bd      	mov	sp, r7
 8002676:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800267a:	bf00      	nop
 800267c:	20000360 	.word	0x20000360
 8002680:	40020400 	.word	0x40020400
 8002684:	08040000 	.word	0x08040000
 8002688:	080115fc 	.word	0x080115fc
 800268c:	20000347 	.word	0x20000347
 8002690:	08040016 	.word	0x08040016
 8002694:	08011628 	.word	0x08011628
 8002698:	08011644 	.word	0x08011644
 800269c:	00000000 	.word	0x00000000

080026a0 <Control_Task>:


void Control_Task(UART_HandleTypeDef *huart_debugg,TIM_HandleTypeDef *htim_rand,uint32_t tick, uint32_t period)
{
 80026a0:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 80026a4:	b088      	sub	sp, #32
 80026a6:	af00      	add	r7, sp, #0
 80026a8:	60f8      	str	r0, [r7, #12]
 80026aa:	60b9      	str	r1, [r7, #8]
 80026ac:	607a      	str	r2, [r7, #4]
 80026ae:	603b      	str	r3, [r7, #0]

	static uint32_t control_task_tick = 0;
	static uint8_t control_task_state=NEIGHBOUR1;//5 db állapot ->5.után megint 1.jön
	//szomszéd1,szomszéd2,szomszéd3,szomszéd4,kiértékelés

	uint8_t nID=0;
 80026b0:	2300      	movs	r3, #0
 80026b2:	76fb      	strb	r3, [r7, #27]

	if(control_task_tick>tick)return;
 80026b4:	4b7c      	ldr	r3, [pc, #496]	; (80028a8 <Control_Task+0x208>)
 80026b6:	681b      	ldr	r3, [r3, #0]
 80026b8:	687a      	ldr	r2, [r7, #4]
 80026ba:	429a      	cmp	r2, r3
 80026bc:	f0c0 837e 	bcc.w	8002dbc <Control_Task+0x71c>
	control_task_tick=tick+period;
 80026c0:	687a      	ldr	r2, [r7, #4]
 80026c2:	683b      	ldr	r3, [r7, #0]
 80026c4:	4413      	add	r3, r2
 80026c6:	4a78      	ldr	r2, [pc, #480]	; (80028a8 <Control_Task+0x208>)
 80026c8:	6013      	str	r3, [r2, #0]
	if(mode!=SKILL || laneChange!=1)return;
 80026ca:	4b78      	ldr	r3, [pc, #480]	; (80028ac <Control_Task+0x20c>)
 80026cc:	781b      	ldrb	r3, [r3, #0]
 80026ce:	2b52      	cmp	r3, #82	; 0x52
 80026d0:	f040 8376 	bne.w	8002dc0 <Control_Task+0x720>
 80026d4:	4b76      	ldr	r3, [pc, #472]	; (80028b0 <Control_Task+0x210>)
 80026d6:	781b      	ldrb	r3, [r3, #0]
 80026d8:	2b01      	cmp	r3, #1
 80026da:	f040 8371 	bne.w	8002dc0 <Control_Task+0x720>
	//if(!readytorace)return;

	//ha kapu nélküli nodeba tartunk éppen, akkor időzítéssel "detektáljuk" a nodot
	if(N(pos[MY]).type>2)
 80026de:	4b75      	ldr	r3, [pc, #468]	; (80028b4 <Control_Task+0x214>)
 80026e0:	781b      	ldrb	r3, [r3, #0]
 80026e2:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80026e6:	4974      	ldr	r1, [pc, #464]	; (80028b8 <Control_Task+0x218>)
 80026e8:	4613      	mov	r3, r2
 80026ea:	009b      	lsls	r3, r3, #2
 80026ec:	4413      	add	r3, r2
 80026ee:	00db      	lsls	r3, r3, #3
 80026f0:	440b      	add	r3, r1
 80026f2:	3308      	adds	r3, #8
 80026f4:	681b      	ldr	r3, [r3, #0]
 80026f6:	2b02      	cmp	r3, #2
 80026f8:	d94c      	bls.n	8002794 <Control_Task+0xf4>
	{
		s += (float)(tick-tick_prev)*fabs(v)/10000;
 80026fa:	4b70      	ldr	r3, [pc, #448]	; (80028bc <Control_Task+0x21c>)
 80026fc:	681b      	ldr	r3, [r3, #0]
 80026fe:	4618      	mov	r0, r3
 8002700:	f7fd ff42 	bl	8000588 <__aeabi_f2d>
 8002704:	4604      	mov	r4, r0
 8002706:	460d      	mov	r5, r1
 8002708:	4b6d      	ldr	r3, [pc, #436]	; (80028c0 <Control_Task+0x220>)
 800270a:	681b      	ldr	r3, [r3, #0]
 800270c:	687a      	ldr	r2, [r7, #4]
 800270e:	1ad3      	subs	r3, r2, r3
 8002710:	ee07 3a90 	vmov	s15, r3
 8002714:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002718:	ee17 0a90 	vmov	r0, s15
 800271c:	f7fd ff34 	bl	8000588 <__aeabi_f2d>
 8002720:	4680      	mov	r8, r0
 8002722:	4689      	mov	r9, r1
 8002724:	4b67      	ldr	r3, [pc, #412]	; (80028c4 <Control_Task+0x224>)
 8002726:	edd3 7a00 	vldr	s15, [r3]
 800272a:	eef0 7ae7 	vabs.f32	s15, s15
 800272e:	ee17 0a90 	vmov	r0, s15
 8002732:	f7fd ff29 	bl	8000588 <__aeabi_f2d>
 8002736:	4602      	mov	r2, r0
 8002738:	460b      	mov	r3, r1
 800273a:	4640      	mov	r0, r8
 800273c:	4649      	mov	r1, r9
 800273e:	f7fd ff7b 	bl	8000638 <__aeabi_dmul>
 8002742:	4602      	mov	r2, r0
 8002744:	460b      	mov	r3, r1
 8002746:	4610      	mov	r0, r2
 8002748:	4619      	mov	r1, r3
 800274a:	a355      	add	r3, pc, #340	; (adr r3, 80028a0 <Control_Task+0x200>)
 800274c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002750:	f7fe f89c 	bl	800088c <__aeabi_ddiv>
 8002754:	4602      	mov	r2, r0
 8002756:	460b      	mov	r3, r1
 8002758:	4620      	mov	r0, r4
 800275a:	4629      	mov	r1, r5
 800275c:	f7fd fdb6 	bl	80002cc <__adddf3>
 8002760:	4602      	mov	r2, r0
 8002762:	460b      	mov	r3, r1
 8002764:	4610      	mov	r0, r2
 8002766:	4619      	mov	r1, r3
 8002768:	f7fe fa3e 	bl	8000be8 <__aeabi_d2f>
 800276c:	4603      	mov	r3, r0
 800276e:	4a53      	ldr	r2, [pc, #332]	; (80028bc <Control_Task+0x21c>)
 8002770:	6013      	str	r3, [r2, #0]
		if(s>sMAX)nodeDetected=1;
 8002772:	4b55      	ldr	r3, [pc, #340]	; (80028c8 <Control_Task+0x228>)
 8002774:	681b      	ldr	r3, [r3, #0]
 8002776:	ee07 3a90 	vmov	s15, r3
 800277a:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800277e:	4b4f      	ldr	r3, [pc, #316]	; (80028bc <Control_Task+0x21c>)
 8002780:	edd3 7a00 	vldr	s15, [r3]
 8002784:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002788:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800278c:	d502      	bpl.n	8002794 <Control_Task+0xf4>
 800278e:	4b4f      	ldr	r3, [pc, #316]	; (80028cc <Control_Task+0x22c>)
 8002790:	2201      	movs	r2, #1
 8002792:	701a      	strb	r2, [r3, #0]

	}
	tick_prev=tick;//mostantól mérjük az időt
 8002794:	4a4a      	ldr	r2, [pc, #296]	; (80028c0 <Control_Task+0x220>)
 8002796:	687b      	ldr	r3, [r7, #4]
 8002798:	6013      	str	r3, [r2, #0]

	//ha odaértünk a myPositionbe, akkor indulhat a mozgás a nextPosition felé
	if(nodeDetected)
 800279a:	4b4c      	ldr	r3, [pc, #304]	; (80028cc <Control_Task+0x22c>)
 800279c:	781b      	ldrb	r3, [r3, #0]
 800279e:	2b00      	cmp	r3, #0
 80027a0:	f000 80ae 	beq.w	8002900 <Control_Task+0x260>
	{
		LED_B_TOGGLE;
 80027a4:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80027a8:	4849      	ldr	r0, [pc, #292]	; (80028d0 <Control_Task+0x230>)
 80027aa:	f006 ff88 	bl	80096be <HAL_GPIO_TogglePin>
		if(N(pos[NEXT]).type>2)//ha a kövi node-on nincs kapu
 80027ae:	4b41      	ldr	r3, [pc, #260]	; (80028b4 <Control_Task+0x214>)
 80027b0:	785b      	ldrb	r3, [r3, #1]
 80027b2:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80027b6:	4940      	ldr	r1, [pc, #256]	; (80028b8 <Control_Task+0x218>)
 80027b8:	4613      	mov	r3, r2
 80027ba:	009b      	lsls	r3, r3, #2
 80027bc:	4413      	add	r3, r2
 80027be:	00db      	lsls	r3, r3, #3
 80027c0:	440b      	add	r3, r1
 80027c2:	3308      	adds	r3, #8
 80027c4:	681b      	ldr	r3, [r3, #0]
 80027c6:	2b02      	cmp	r3, #2
 80027c8:	d917      	bls.n	80027fa <Control_Task+0x15a>
		{
			s=0;
 80027ca:	4b3c      	ldr	r3, [pc, #240]	; (80028bc <Control_Task+0x21c>)
 80027cc:	f04f 0200 	mov.w	r2, #0
 80027d0:	601a      	str	r2, [r3, #0]
			sMAX=N(pos[MY]).distance[bestNb[NEXT]]+25;
 80027d2:	4b38      	ldr	r3, [pc, #224]	; (80028b4 <Control_Task+0x214>)
 80027d4:	781b      	ldrb	r3, [r3, #0]
 80027d6:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80027da:	4b3e      	ldr	r3, [pc, #248]	; (80028d4 <Control_Task+0x234>)
 80027dc:	785b      	ldrb	r3, [r3, #1]
 80027de:	4618      	mov	r0, r3
 80027e0:	4935      	ldr	r1, [pc, #212]	; (80028b8 <Control_Task+0x218>)
 80027e2:	4613      	mov	r3, r2
 80027e4:	009b      	lsls	r3, r3, #2
 80027e6:	4413      	add	r3, r2
 80027e8:	009b      	lsls	r3, r3, #2
 80027ea:	4403      	add	r3, r0
 80027ec:	330c      	adds	r3, #12
 80027ee:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80027f2:	3319      	adds	r3, #25
 80027f4:	461a      	mov	r2, r3
 80027f6:	4b34      	ldr	r3, [pc, #208]	; (80028c8 <Control_Task+0x228>)
 80027f8:	601a      	str	r2, [r3, #0]
		}
		//pontok nyugtázása
		if(laneChange==1 && pos[MY]=='V' && pos[NEXT]=='U')//ha a tett színhelyén vagyunk
 80027fa:	4b2d      	ldr	r3, [pc, #180]	; (80028b0 <Control_Task+0x210>)
 80027fc:	781b      	ldrb	r3, [r3, #0]
 80027fe:	2b01      	cmp	r3, #1
 8002800:	d10a      	bne.n	8002818 <Control_Task+0x178>
 8002802:	4b2c      	ldr	r3, [pc, #176]	; (80028b4 <Control_Task+0x214>)
 8002804:	781b      	ldrb	r3, [r3, #0]
 8002806:	2b56      	cmp	r3, #86	; 0x56
 8002808:	d106      	bne.n	8002818 <Control_Task+0x178>
 800280a:	4b2a      	ldr	r3, [pc, #168]	; (80028b4 <Control_Task+0x214>)
 800280c:	785b      	ldrb	r3, [r3, #1]
 800280e:	2b55      	cmp	r3, #85	; 0x55
 8002810:	d102      	bne.n	8002818 <Control_Task+0x178>
		{
			laneChange=2;
 8002812:	4b27      	ldr	r3, [pc, #156]	; (80028b0 <Control_Task+0x210>)
 8002814:	2202      	movs	r2, #2
 8002816:	701a      	strb	r2, [r3, #0]
		}
		static char str[15]; //kiiratás
		sprintf(str,"d,d\n\r");
 8002818:	492f      	ldr	r1, [pc, #188]	; (80028d8 <Control_Task+0x238>)
 800281a:	4830      	ldr	r0, [pc, #192]	; (80028dc <Control_Task+0x23c>)
 800281c:	f00b f9f2 	bl	800dc04 <siprintf>
		str[0]=pos[MY];
 8002820:	4b24      	ldr	r3, [pc, #144]	; (80028b4 <Control_Task+0x214>)
 8002822:	781a      	ldrb	r2, [r3, #0]
 8002824:	4b2d      	ldr	r3, [pc, #180]	; (80028dc <Control_Task+0x23c>)
 8002826:	701a      	strb	r2, [r3, #0]
		str[2]=pos[NEXT];
 8002828:	4b22      	ldr	r3, [pc, #136]	; (80028b4 <Control_Task+0x214>)
 800282a:	785a      	ldrb	r2, [r3, #1]
 800282c:	4b2b      	ldr	r3, [pc, #172]	; (80028dc <Control_Task+0x23c>)
 800282e:	709a      	strb	r2, [r3, #2]
		HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 2);
 8002830:	482a      	ldr	r0, [pc, #168]	; (80028dc <Control_Task+0x23c>)
 8002832:	f7fd fced 	bl	8000210 <strlen>
 8002836:	4603      	mov	r3, r0
 8002838:	b29a      	uxth	r2, r3
 800283a:	2302      	movs	r3, #2
 800283c:	4927      	ldr	r1, [pc, #156]	; (80028dc <Control_Task+0x23c>)
 800283e:	68f8      	ldr	r0, [r7, #12]
 8002840:	f009 fc77 	bl	800c132 <HAL_UART_Transmit>

		if(Cross_Collision(pos[MY], pos[NEXT]))
 8002844:	4b1b      	ldr	r3, [pc, #108]	; (80028b4 <Control_Task+0x214>)
 8002846:	781b      	ldrb	r3, [r3, #0]
 8002848:	4a1a      	ldr	r2, [pc, #104]	; (80028b4 <Control_Task+0x214>)
 800284a:	7852      	ldrb	r2, [r2, #1]
 800284c:	4611      	mov	r1, r2
 800284e:	4618      	mov	r0, r3
 8002850:	f001 fa06 	bl	8003c60 <Cross_Collision>
 8002854:	4603      	mov	r3, r0
 8002856:	2b00      	cmp	r3, #0
 8002858:	d006      	beq.n	8002868 <Control_Task+0x1c8>
		{
			control_task_state = WAIT;
 800285a:	4b21      	ldr	r3, [pc, #132]	; (80028e0 <Control_Task+0x240>)
 800285c:	2207      	movs	r2, #7
 800285e:	701a      	strb	r2, [r3, #0]
			t_stamp=tick;
 8002860:	4a20      	ldr	r2, [pc, #128]	; (80028e4 <Control_Task+0x244>)
 8002862:	687b      	ldr	r3, [r7, #4]
 8002864:	6013      	str	r3, [r2, #0]
 8002866:	e002      	b.n	800286e <Control_Task+0x1ce>
		}
		else control_task_state = NEIGHBOUR1;
 8002868:	4b1d      	ldr	r3, [pc, #116]	; (80028e0 <Control_Task+0x240>)
 800286a:	2200      	movs	r2, #0
 800286c:	701a      	strb	r2, [r3, #0]

		pos[MY]=pos[NEXT];
 800286e:	4b11      	ldr	r3, [pc, #68]	; (80028b4 <Control_Task+0x214>)
 8002870:	785a      	ldrb	r2, [r3, #1]
 8002872:	4b10      	ldr	r3, [pc, #64]	; (80028b4 <Control_Task+0x214>)
 8002874:	701a      	strb	r2, [r3, #0]
		path=nextPath;
 8002876:	4b1c      	ldr	r3, [pc, #112]	; (80028e8 <Control_Task+0x248>)
 8002878:	781a      	ldrb	r2, [r3, #0]
 800287a:	4b1c      	ldr	r3, [pc, #112]	; (80028ec <Control_Task+0x24c>)
 800287c:	701a      	strb	r2, [r3, #0]
		dir[MY]=dir[NEXT];
 800287e:	4b1c      	ldr	r3, [pc, #112]	; (80028f0 <Control_Task+0x250>)
 8002880:	785a      	ldrb	r2, [r3, #1]
 8002882:	4b1b      	ldr	r3, [pc, #108]	; (80028f0 <Control_Task+0x250>)
 8002884:	701a      	strb	r2, [r3, #0]
		orientation=nextOri;//FORWARD
 8002886:	4b1b      	ldr	r3, [pc, #108]	; (80028f4 <Control_Task+0x254>)
 8002888:	781a      	ldrb	r2, [r3, #0]
 800288a:	4b1b      	ldr	r3, [pc, #108]	; (80028f8 <Control_Task+0x258>)
 800288c:	701a      	strb	r2, [r3, #0]

		dontGoBack=0;
 800288e:	4b1b      	ldr	r3, [pc, #108]	; (80028fc <Control_Task+0x25c>)
 8002890:	2200      	movs	r2, #0
 8002892:	701a      	strb	r2, [r3, #0]
		nodeDetected=0;
 8002894:	4b0d      	ldr	r3, [pc, #52]	; (80028cc <Control_Task+0x22c>)
 8002896:	2200      	movs	r2, #0
 8002898:	701a      	strb	r2, [r3, #0]
		return;
 800289a:	e292      	b.n	8002dc2 <Control_Task+0x722>
 800289c:	f3af 8000 	nop.w
 80028a0:	00000000 	.word	0x00000000
 80028a4:	40c38800 	.word	0x40c38800
 80028a8:	200006d0 	.word	0x200006d0
 80028ac:	20000336 	.word	0x20000336
 80028b0:	20000348 	.word	0x20000348
 80028b4:	20000358 	.word	0x20000358
 80028b8:	20000360 	.word	0x20000360
 80028bc:	200006d4 	.word	0x200006d4
 80028c0:	200006d8 	.word	0x200006d8
 80028c4:	20000754 	.word	0x20000754
 80028c8:	20000000 	.word	0x20000000
 80028cc:	20000345 	.word	0x20000345
 80028d0:	40020400 	.word	0x40020400
 80028d4:	200006dc 	.word	0x200006dc
 80028d8:	08011658 	.word	0x08011658
 80028dc:	200006e0 	.word	0x200006e0
 80028e0:	200006ef 	.word	0x200006ef
 80028e4:	200006f0 	.word	0x200006f0
 80028e8:	200006f4 	.word	0x200006f4
 80028ec:	20000346 	.word	0x20000346
 80028f0:	2000035c 	.word	0x2000035c
 80028f4:	200006f5 	.word	0x200006f5
 80028f8:	20000344 	.word	0x20000344
 80028fc:	20000004 	.word	0x20000004
	}

	if(thunderboardFlag)//ha új kalózpozíció jött a TB-től ujrakezdjük a számolást (első szomszéd vizsgálata jön)
 8002900:	4ba7      	ldr	r3, [pc, #668]	; (8002ba0 <Control_Task+0x500>)
 8002902:	781b      	ldrb	r3, [r3, #0]
 8002904:	b2db      	uxtb	r3, r3
 8002906:	2b00      	cmp	r3, #0
 8002908:	d019      	beq.n	800293e <Control_Task+0x29e>
	{
		if(control_task_state!=WAIT)//wait állapotból nem tud mindekt kibillenteni az új kalózrobot pozíció
 800290a:	4ba6      	ldr	r3, [pc, #664]	; (8002ba4 <Control_Task+0x504>)
 800290c:	781b      	ldrb	r3, [r3, #0]
 800290e:	2b07      	cmp	r3, #7
 8002910:	d002      	beq.n	8002918 <Control_Task+0x278>
			control_task_state=NEIGHBOUR1;//kezdjük előrröl a fitneszérték számítást az 1. szomszédtól
 8002912:	4ba4      	ldr	r3, [pc, #656]	; (8002ba4 <Control_Task+0x504>)
 8002914:	2200      	movs	r2, #0
 8002916:	701a      	strb	r2, [r3, #0]

		piratePos_prev[0]=piratePos[0];//előző kalozpozíció frissítése
 8002918:	4ba3      	ldr	r3, [pc, #652]	; (8002ba8 <Control_Task+0x508>)
 800291a:	781a      	ldrb	r2, [r3, #0]
 800291c:	4ba3      	ldr	r3, [pc, #652]	; (8002bac <Control_Task+0x50c>)
 800291e:	701a      	strb	r2, [r3, #0]
		piratePos_prev[1]=piratePos[1];
 8002920:	4ba1      	ldr	r3, [pc, #644]	; (8002ba8 <Control_Task+0x508>)
 8002922:	785a      	ldrb	r2, [r3, #1]
 8002924:	4ba1      	ldr	r3, [pc, #644]	; (8002bac <Control_Task+0x50c>)
 8002926:	705a      	strb	r2, [r3, #1]
		piratePos_prev[2]=piratePos[2];
 8002928:	4b9f      	ldr	r3, [pc, #636]	; (8002ba8 <Control_Task+0x508>)
 800292a:	789a      	ldrb	r2, [r3, #2]
 800292c:	4b9f      	ldr	r3, [pc, #636]	; (8002bac <Control_Task+0x50c>)
 800292e:	709a      	strb	r2, [r3, #2]
		piratePos_prev[3]=piratePos[3];
 8002930:	4b9d      	ldr	r3, [pc, #628]	; (8002ba8 <Control_Task+0x508>)
 8002932:	78da      	ldrb	r2, [r3, #3]
 8002934:	4b9d      	ldr	r3, [pc, #628]	; (8002bac <Control_Task+0x50c>)
 8002936:	70da      	strb	r2, [r3, #3]

		thunderboardFlag=0; //várjuk az újabb kalózrobot pozíciókat a thunderboardtól
 8002938:	4b99      	ldr	r3, [pc, #612]	; (8002ba0 <Control_Task+0x500>)
 800293a:	2200      	movs	r2, #0
 800293c:	701a      	strb	r2, [r3, #0]
	}

	/******************LEGJOBB SZOMSZÉD KIVÁLASZTÁSA (első 4 állapot)******************/
	if(control_task_state < EVALUATE)//1.szomszéd/2.szomszéd/3.szomszéd/4.szomszéd
 800293e:	4b99      	ldr	r3, [pc, #612]	; (8002ba4 <Control_Task+0x504>)
 8002940:	781b      	ldrb	r3, [r3, #0]
 8002942:	2b05      	cmp	r3, #5
 8002944:	f200 8171 	bhi.w	8002c2a <Control_Task+0x58a>
	{
		if(control_task_state==NEIGHBOUR1)
 8002948:	4b96      	ldr	r3, [pc, #600]	; (8002ba4 <Control_Task+0x504>)
 800294a:	781b      	ldrb	r3, [r3, #0]
 800294c:	2b00      	cmp	r3, #0
 800294e:	d102      	bne.n	8002956 <Control_Task+0x2b6>
		{
			bestFitness=-200.0;//az előző számolás legjob fitneszértéke volt még benne
 8002950:	4b97      	ldr	r3, [pc, #604]	; (8002bb0 <Control_Task+0x510>)
 8002952:	4a98      	ldr	r2, [pc, #608]	; (8002bb4 <Control_Task+0x514>)
 8002954:	601a      	str	r2, [r3, #0]
		}
		nID=N(pos[MY]).neighbours[control_task_state]; //a vizsgált 1.rendű szomszéd azonosítója
 8002956:	4b98      	ldr	r3, [pc, #608]	; (8002bb8 <Control_Task+0x518>)
 8002958:	781b      	ldrb	r3, [r3, #0]
 800295a:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800295e:	4b91      	ldr	r3, [pc, #580]	; (8002ba4 <Control_Task+0x504>)
 8002960:	781b      	ldrb	r3, [r3, #0]
 8002962:	4618      	mov	r0, r3
 8002964:	4995      	ldr	r1, [pc, #596]	; (8002bbc <Control_Task+0x51c>)
 8002966:	4613      	mov	r3, r2
 8002968:	009b      	lsls	r3, r3, #2
 800296a:	4413      	add	r3, r2
 800296c:	00db      	lsls	r3, r3, #3
 800296e:	440b      	add	r3, r1
 8002970:	4403      	add	r3, r0
 8002972:	330c      	adds	r3, #12
 8002974:	781b      	ldrb	r3, [r3, #0]
 8002976:	76fb      	strb	r3, [r7, #27]
		if(nID) //ha létezik a szomszéd
 8002978:	7efb      	ldrb	r3, [r7, #27]
 800297a:	2b00      	cmp	r3, #0
 800297c:	f000 812c 	beq.w	8002bd8 <Control_Task+0x538>
		{
			fitness[control_task_state]=(float)N(nID).worth; //fitneszérték 1.rendű szomszéd alapján
 8002980:	7efb      	ldrb	r3, [r7, #27]
 8002982:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002986:	498d      	ldr	r1, [pc, #564]	; (8002bbc <Control_Task+0x51c>)
 8002988:	4613      	mov	r3, r2
 800298a:	009b      	lsls	r3, r3, #2
 800298c:	4413      	add	r3, r2
 800298e:	00db      	lsls	r3, r3, #3
 8002990:	440b      	add	r3, r1
 8002992:	3304      	adds	r3, #4
 8002994:	681a      	ldr	r2, [r3, #0]
 8002996:	4b83      	ldr	r3, [pc, #524]	; (8002ba4 <Control_Task+0x504>)
 8002998:	781b      	ldrb	r3, [r3, #0]
 800299a:	ee07 2a90 	vmov	s15, r2
 800299e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80029a2:	4a87      	ldr	r2, [pc, #540]	; (8002bc0 <Control_Task+0x520>)
 80029a4:	009b      	lsls	r3, r3, #2
 80029a6:	4413      	add	r3, r2
 80029a8:	edc3 7a00 	vstr	s15, [r3]
			//kalozrobot hatása az 1.rendű szomszéd esetén
			if(piratePos[1]==nID) fitness[control_task_state] -= 80/*P*/;//ha a kalóz is ebbe az 1.rendű tart éppen akkor kerüljük el az ütközést
 80029ac:	4b7e      	ldr	r3, [pc, #504]	; (8002ba8 <Control_Task+0x508>)
 80029ae:	785b      	ldrb	r3, [r3, #1]
 80029b0:	7efa      	ldrb	r2, [r7, #27]
 80029b2:	429a      	cmp	r2, r3
 80029b4:	d112      	bne.n	80029dc <Control_Task+0x33c>
 80029b6:	4b7b      	ldr	r3, [pc, #492]	; (8002ba4 <Control_Task+0x504>)
 80029b8:	781b      	ldrb	r3, [r3, #0]
 80029ba:	4a81      	ldr	r2, [pc, #516]	; (8002bc0 <Control_Task+0x520>)
 80029bc:	009b      	lsls	r3, r3, #2
 80029be:	4413      	add	r3, r2
 80029c0:	edd3 7a00 	vldr	s15, [r3]
 80029c4:	4b77      	ldr	r3, [pc, #476]	; (8002ba4 <Control_Task+0x504>)
 80029c6:	781b      	ldrb	r3, [r3, #0]
 80029c8:	ed9f 7a7e 	vldr	s14, [pc, #504]	; 8002bc4 <Control_Task+0x524>
 80029cc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80029d0:	4a7b      	ldr	r2, [pc, #492]	; (8002bc0 <Control_Task+0x520>)
 80029d2:	009b      	lsls	r3, r3, #2
 80029d4:	4413      	add	r3, r2
 80029d6:	edc3 7a00 	vstr	s15, [r3]
 80029da:	e06f      	b.n	8002abc <Control_Task+0x41c>

			else if(piratePos[2]==nID) fitness[control_task_state] -= 60/*P*/;//ha még csak tervezi, hogy odamegy, akkor is kerüljük a pontot
 80029dc:	4b72      	ldr	r3, [pc, #456]	; (8002ba8 <Control_Task+0x508>)
 80029de:	789b      	ldrb	r3, [r3, #2]
 80029e0:	7efa      	ldrb	r2, [r7, #27]
 80029e2:	429a      	cmp	r2, r3
 80029e4:	d112      	bne.n	8002a0c <Control_Task+0x36c>
 80029e6:	4b6f      	ldr	r3, [pc, #444]	; (8002ba4 <Control_Task+0x504>)
 80029e8:	781b      	ldrb	r3, [r3, #0]
 80029ea:	4a75      	ldr	r2, [pc, #468]	; (8002bc0 <Control_Task+0x520>)
 80029ec:	009b      	lsls	r3, r3, #2
 80029ee:	4413      	add	r3, r2
 80029f0:	edd3 7a00 	vldr	s15, [r3]
 80029f4:	4b6b      	ldr	r3, [pc, #428]	; (8002ba4 <Control_Task+0x504>)
 80029f6:	781b      	ldrb	r3, [r3, #0]
 80029f8:	ed9f 7a73 	vldr	s14, [pc, #460]	; 8002bc8 <Control_Task+0x528>
 80029fc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002a00:	4a6f      	ldr	r2, [pc, #444]	; (8002bc0 <Control_Task+0x520>)
 8002a02:	009b      	lsls	r3, r3, #2
 8002a04:	4413      	add	r3, r2
 8002a06:	edc3 7a00 	vstr	s15, [r3]
 8002a0a:	e057      	b.n	8002abc <Control_Task+0x41c>
			/**/
			else if(piratePos[0]==nID)//ha elhaygta azt  apontot akkor 3 szomszédot is büntetünk
 8002a0c:	4b66      	ldr	r3, [pc, #408]	; (8002ba8 <Control_Task+0x508>)
 8002a0e:	781b      	ldrb	r3, [r3, #0]
 8002a10:	7efa      	ldrb	r2, [r7, #27]
 8002a12:	429a      	cmp	r2, r3
 8002a14:	d152      	bne.n	8002abc <Control_Task+0x41c>
			{
				fitness[control_task_state] -= 20;
 8002a16:	4b63      	ldr	r3, [pc, #396]	; (8002ba4 <Control_Task+0x504>)
 8002a18:	781b      	ldrb	r3, [r3, #0]
 8002a1a:	4a69      	ldr	r2, [pc, #420]	; (8002bc0 <Control_Task+0x520>)
 8002a1c:	009b      	lsls	r3, r3, #2
 8002a1e:	4413      	add	r3, r2
 8002a20:	edd3 7a00 	vldr	s15, [r3]
 8002a24:	4b5f      	ldr	r3, [pc, #380]	; (8002ba4 <Control_Task+0x504>)
 8002a26:	781b      	ldrb	r3, [r3, #0]
 8002a28:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 8002a2c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002a30:	4a63      	ldr	r2, [pc, #396]	; (8002bc0 <Control_Task+0x520>)
 8002a32:	009b      	lsls	r3, r3, #2
 8002a34:	4413      	add	r3, r2
 8002a36:	edc3 7a00 	vstr	s15, [r3]
				if(control_task_state<=NEIGHBOUR3)
 8002a3a:	4b5a      	ldr	r3, [pc, #360]	; (8002ba4 <Control_Task+0x504>)
 8002a3c:	781b      	ldrb	r3, [r3, #0]
 8002a3e:	2b02      	cmp	r3, #2
 8002a40:	d81e      	bhi.n	8002a80 <Control_Task+0x3e0>
				{
					fitness[NEIGHBOUR1]-=60;
 8002a42:	4b5f      	ldr	r3, [pc, #380]	; (8002bc0 <Control_Task+0x520>)
 8002a44:	edd3 7a00 	vldr	s15, [r3]
 8002a48:	ed9f 7a5f 	vldr	s14, [pc, #380]	; 8002bc8 <Control_Task+0x528>
 8002a4c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002a50:	4b5b      	ldr	r3, [pc, #364]	; (8002bc0 <Control_Task+0x520>)
 8002a52:	edc3 7a00 	vstr	s15, [r3]
					fitness[NEIGHBOUR2]-=60;
 8002a56:	4b5a      	ldr	r3, [pc, #360]	; (8002bc0 <Control_Task+0x520>)
 8002a58:	edd3 7a01 	vldr	s15, [r3, #4]
 8002a5c:	ed9f 7a5a 	vldr	s14, [pc, #360]	; 8002bc8 <Control_Task+0x528>
 8002a60:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002a64:	4b56      	ldr	r3, [pc, #344]	; (8002bc0 <Control_Task+0x520>)
 8002a66:	edc3 7a01 	vstr	s15, [r3, #4]
					fitness[NEIGHBOUR3]-=60;
 8002a6a:	4b55      	ldr	r3, [pc, #340]	; (8002bc0 <Control_Task+0x520>)
 8002a6c:	edd3 7a02 	vldr	s15, [r3, #8]
 8002a70:	ed9f 7a55 	vldr	s14, [pc, #340]	; 8002bc8 <Control_Task+0x528>
 8002a74:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002a78:	4b51      	ldr	r3, [pc, #324]	; (8002bc0 <Control_Task+0x520>)
 8002a7a:	edc3 7a02 	vstr	s15, [r3, #8]
 8002a7e:	e01d      	b.n	8002abc <Control_Task+0x41c>
				}
				else
				{
					fitness[NEIGHBOUR4]-=60;
 8002a80:	4b4f      	ldr	r3, [pc, #316]	; (8002bc0 <Control_Task+0x520>)
 8002a82:	edd3 7a03 	vldr	s15, [r3, #12]
 8002a86:	ed9f 7a50 	vldr	s14, [pc, #320]	; 8002bc8 <Control_Task+0x528>
 8002a8a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002a8e:	4b4c      	ldr	r3, [pc, #304]	; (8002bc0 <Control_Task+0x520>)
 8002a90:	edc3 7a03 	vstr	s15, [r3, #12]
					fitness[NEIGHBOUR5]-=60;
 8002a94:	4b4a      	ldr	r3, [pc, #296]	; (8002bc0 <Control_Task+0x520>)
 8002a96:	edd3 7a04 	vldr	s15, [r3, #16]
 8002a9a:	ed9f 7a4b 	vldr	s14, [pc, #300]	; 8002bc8 <Control_Task+0x528>
 8002a9e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002aa2:	4b47      	ldr	r3, [pc, #284]	; (8002bc0 <Control_Task+0x520>)
 8002aa4:	edc3 7a04 	vstr	s15, [r3, #16]
					fitness[NEIGHBOUR6]-=60;
 8002aa8:	4b45      	ldr	r3, [pc, #276]	; (8002bc0 <Control_Task+0x520>)
 8002aaa:	edd3 7a05 	vldr	s15, [r3, #20]
 8002aae:	ed9f 7a46 	vldr	s14, [pc, #280]	; 8002bc8 <Control_Task+0x528>
 8002ab2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002ab6:	4b42      	ldr	r3, [pc, #264]	; (8002bc0 <Control_Task+0x520>)
 8002ab8:	edc3 7a05 	vstr	s15, [r3, #20]
			}

			int i;
			uint8_t nnID;
			float nnFit;
			for(i=0;i<6;i++)//2.rednű szomszédok
 8002abc:	2300      	movs	r3, #0
 8002abe:	61fb      	str	r3, [r7, #28]
 8002ac0:	e046      	b.n	8002b50 <Control_Task+0x4b0>
			{
				nnFit=0.0;
 8002ac2:	f04f 0300 	mov.w	r3, #0
 8002ac6:	617b      	str	r3, [r7, #20]
				nnID=N(nID).neighbours[i]; //2.rednű szomszéd ID-ja
 8002ac8:	7efb      	ldrb	r3, [r7, #27]
 8002aca:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002ace:	493b      	ldr	r1, [pc, #236]	; (8002bbc <Control_Task+0x51c>)
 8002ad0:	4613      	mov	r3, r2
 8002ad2:	009b      	lsls	r3, r3, #2
 8002ad4:	4413      	add	r3, r2
 8002ad6:	00db      	lsls	r3, r3, #3
 8002ad8:	18ca      	adds	r2, r1, r3
 8002ada:	69fb      	ldr	r3, [r7, #28]
 8002adc:	4413      	add	r3, r2
 8002ade:	330c      	adds	r3, #12
 8002ae0:	781b      	ldrb	r3, [r3, #0]
 8002ae2:	74fb      	strb	r3, [r7, #19]
				if(nnID && nnID!=pos[MY])//ha létezik a 2.rendű szomszéd (és nem a myposition az)
 8002ae4:	7cfb      	ldrb	r3, [r7, #19]
 8002ae6:	2b00      	cmp	r3, #0
 8002ae8:	d02f      	beq.n	8002b4a <Control_Task+0x4aa>
 8002aea:	4b33      	ldr	r3, [pc, #204]	; (8002bb8 <Control_Task+0x518>)
 8002aec:	781b      	ldrb	r3, [r3, #0]
 8002aee:	7cfa      	ldrb	r2, [r7, #19]
 8002af0:	429a      	cmp	r2, r3
 8002af2:	d02a      	beq.n	8002b4a <Control_Task+0x4aa>
				{
					nnFit += (float)N(nnID).worth;
 8002af4:	7cfb      	ldrb	r3, [r7, #19]
 8002af6:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002afa:	4930      	ldr	r1, [pc, #192]	; (8002bbc <Control_Task+0x51c>)
 8002afc:	4613      	mov	r3, r2
 8002afe:	009b      	lsls	r3, r3, #2
 8002b00:	4413      	add	r3, r2
 8002b02:	00db      	lsls	r3, r3, #3
 8002b04:	440b      	add	r3, r1
 8002b06:	3304      	adds	r3, #4
 8002b08:	681b      	ldr	r3, [r3, #0]
 8002b0a:	ee07 3a90 	vmov	s15, r3
 8002b0e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002b12:	ed97 7a05 	vldr	s14, [r7, #20]
 8002b16:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002b1a:	edc7 7a05 	vstr	s15, [r7, #20]
					//if(piratePos[1]==nnID) nnFit -= 0.5/*P*/;//ha a kalóz is ebbe a pontba tart éppen akkor kerüljük el az ütközést
					//else if(piratePos[2]==nnID) fitness[control_task_state] -= 0.25/*P*/;//ha még csak tervezi, hogy odamegy, akkor se fogjuk tudni megelőnzi, mert mi 3 nodnyira vagyunk ő pedig csak 2
					//if(!lane_change)nnFit = nnFit * (float)DIST_AVG/N(nID).distance[i];//a 2.rendű szomszédhoz tartozó fitneszérték jobb ha az közelebb van az 1.rendű szomszédjához
					//ha a sávváltó szakaszt keressük akkor viszont nem díjazzuk a közelséget
					fitness[control_task_state] += nnFit/6/*P*/;
 8002b1e:	4b21      	ldr	r3, [pc, #132]	; (8002ba4 <Control_Task+0x504>)
 8002b20:	781b      	ldrb	r3, [r3, #0]
 8002b22:	4a27      	ldr	r2, [pc, #156]	; (8002bc0 <Control_Task+0x520>)
 8002b24:	009b      	lsls	r3, r3, #2
 8002b26:	4413      	add	r3, r2
 8002b28:	ed93 7a00 	vldr	s14, [r3]
 8002b2c:	edd7 6a05 	vldr	s13, [r7, #20]
 8002b30:	eeb1 6a08 	vmov.f32	s12, #24	; 0x40c00000  6.0
 8002b34:	eec6 7a86 	vdiv.f32	s15, s13, s12
 8002b38:	4b1a      	ldr	r3, [pc, #104]	; (8002ba4 <Control_Task+0x504>)
 8002b3a:	781b      	ldrb	r3, [r3, #0]
 8002b3c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002b40:	4a1f      	ldr	r2, [pc, #124]	; (8002bc0 <Control_Task+0x520>)
 8002b42:	009b      	lsls	r3, r3, #2
 8002b44:	4413      	add	r3, r2
 8002b46:	edc3 7a00 	vstr	s15, [r3]
			for(i=0;i<6;i++)//2.rednű szomszédok
 8002b4a:	69fb      	ldr	r3, [r7, #28]
 8002b4c:	3301      	adds	r3, #1
 8002b4e:	61fb      	str	r3, [r7, #28]
 8002b50:	69fb      	ldr	r3, [r7, #28]
 8002b52:	2b05      	cmp	r3, #5
 8002b54:	ddb5      	ble.n	8002ac2 <Control_Task+0x422>
				}
			}
			//if(!lane_change) fitness[control_task_state] =fitness[control_task_state] * (float)DIST_AVG/N(pos[MY]).distance[control_task_state]; //minél közelebb van a szomszéd annál jobb
			//ha a sávváltó szakaszt keressük akkor viszont nem díjazzuk a közelséget
			if(dontGoBack)
 8002b56:	4b1d      	ldr	r3, [pc, #116]	; (8002bcc <Control_Task+0x52c>)
 8002b58:	781b      	ldrb	r3, [r3, #0]
 8002b5a:	2b00      	cmp	r3, #0
 8002b5c:	d043      	beq.n	8002be6 <Control_Task+0x546>
			{
				if(control_task_state<=NEIGHBOUR3 && dir[MY]==2)
 8002b5e:	4b11      	ldr	r3, [pc, #68]	; (8002ba4 <Control_Task+0x504>)
 8002b60:	781b      	ldrb	r3, [r3, #0]
 8002b62:	2b02      	cmp	r3, #2
 8002b64:	d80b      	bhi.n	8002b7e <Control_Task+0x4de>
 8002b66:	4b1a      	ldr	r3, [pc, #104]	; (8002bd0 <Control_Task+0x530>)
 8002b68:	781b      	ldrb	r3, [r3, #0]
 8002b6a:	2b02      	cmp	r3, #2
 8002b6c:	d107      	bne.n	8002b7e <Control_Task+0x4de>
				{
					fitness[control_task_state]=-160;
 8002b6e:	4b0d      	ldr	r3, [pc, #52]	; (8002ba4 <Control_Task+0x504>)
 8002b70:	781b      	ldrb	r3, [r3, #0]
 8002b72:	4a13      	ldr	r2, [pc, #76]	; (8002bc0 <Control_Task+0x520>)
 8002b74:	009b      	lsls	r3, r3, #2
 8002b76:	4413      	add	r3, r2
 8002b78:	4a16      	ldr	r2, [pc, #88]	; (8002bd4 <Control_Task+0x534>)
 8002b7a:	601a      	str	r2, [r3, #0]
 8002b7c:	e033      	b.n	8002be6 <Control_Task+0x546>
				}
				else if(control_task_state >= NEIGHBOUR4 && dir[MY]==1)
 8002b7e:	4b09      	ldr	r3, [pc, #36]	; (8002ba4 <Control_Task+0x504>)
 8002b80:	781b      	ldrb	r3, [r3, #0]
 8002b82:	2b02      	cmp	r3, #2
 8002b84:	d92f      	bls.n	8002be6 <Control_Task+0x546>
 8002b86:	4b12      	ldr	r3, [pc, #72]	; (8002bd0 <Control_Task+0x530>)
 8002b88:	781b      	ldrb	r3, [r3, #0]
 8002b8a:	2b01      	cmp	r3, #1
 8002b8c:	d12b      	bne.n	8002be6 <Control_Task+0x546>
				{
					fitness[control_task_state]=-160;
 8002b8e:	4b05      	ldr	r3, [pc, #20]	; (8002ba4 <Control_Task+0x504>)
 8002b90:	781b      	ldrb	r3, [r3, #0]
 8002b92:	4a0b      	ldr	r2, [pc, #44]	; (8002bc0 <Control_Task+0x520>)
 8002b94:	009b      	lsls	r3, r3, #2
 8002b96:	4413      	add	r3, r2
 8002b98:	4a0e      	ldr	r2, [pc, #56]	; (8002bd4 <Control_Task+0x534>)
 8002b9a:	601a      	str	r2, [r3, #0]
 8002b9c:	e023      	b.n	8002be6 <Control_Task+0x546>
 8002b9e:	bf00      	nop
 8002ba0:	2000034a 	.word	0x2000034a
 8002ba4:	200006ef 	.word	0x200006ef
 8002ba8:	20000354 	.word	0x20000354
 8002bac:	200006f8 	.word	0x200006f8
 8002bb0:	20000008 	.word	0x20000008
 8002bb4:	c3480000 	.word	0xc3480000
 8002bb8:	20000358 	.word	0x20000358
 8002bbc:	20000360 	.word	0x20000360
 8002bc0:	200006fc 	.word	0x200006fc
 8002bc4:	42a00000 	.word	0x42a00000
 8002bc8:	42700000 	.word	0x42700000
 8002bcc:	20000004 	.word	0x20000004
 8002bd0:	2000035c 	.word	0x2000035c
 8002bd4:	c3200000 	.word	0xc3200000
				}
			}
		}
		else fitness[control_task_state]=-150.0;//ha nem létezik a szomszéd erre tuti ne menjünk
 8002bd8:	4b7c      	ldr	r3, [pc, #496]	; (8002dcc <Control_Task+0x72c>)
 8002bda:	781b      	ldrb	r3, [r3, #0]
 8002bdc:	4a7c      	ldr	r2, [pc, #496]	; (8002dd0 <Control_Task+0x730>)
 8002bde:	009b      	lsls	r3, r3, #2
 8002be0:	4413      	add	r3, r2
 8002be2:	4a7c      	ldr	r2, [pc, #496]	; (8002dd4 <Control_Task+0x734>)
 8002be4:	601a      	str	r2, [r3, #0]
		//uint16_t tmp= __HAL_TIM_GET_COUNTER(htim_rand)%2;
		if(fitness[control_task_state]>=bestFitness) //ha ez a fitness jobb mint az eddigi legjobb, akkor mostantól ez a legjobb
 8002be6:	4b79      	ldr	r3, [pc, #484]	; (8002dcc <Control_Task+0x72c>)
 8002be8:	781b      	ldrb	r3, [r3, #0]
 8002bea:	4a79      	ldr	r2, [pc, #484]	; (8002dd0 <Control_Task+0x730>)
 8002bec:	009b      	lsls	r3, r3, #2
 8002bee:	4413      	add	r3, r2
 8002bf0:	ed93 7a00 	vldr	s14, [r3]
 8002bf4:	4b78      	ldr	r3, [pc, #480]	; (8002dd8 <Control_Task+0x738>)
 8002bf6:	edd3 7a00 	vldr	s15, [r3]
 8002bfa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002bfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002c02:	db0b      	blt.n	8002c1c <Control_Task+0x57c>
		{
			bestFitness=fitness[control_task_state];
 8002c04:	4b71      	ldr	r3, [pc, #452]	; (8002dcc <Control_Task+0x72c>)
 8002c06:	781b      	ldrb	r3, [r3, #0]
 8002c08:	4a71      	ldr	r2, [pc, #452]	; (8002dd0 <Control_Task+0x730>)
 8002c0a:	009b      	lsls	r3, r3, #2
 8002c0c:	4413      	add	r3, r2
 8002c0e:	681b      	ldr	r3, [r3, #0]
 8002c10:	4a71      	ldr	r2, [pc, #452]	; (8002dd8 <Control_Task+0x738>)
 8002c12:	6013      	str	r3, [r2, #0]
			bestNb[TMP] = control_task_state;//ez az egy érték amivel a task első 4 (fitnesszámoló) álapota kommunikál a kiértékelő álapottal
 8002c14:	4b6d      	ldr	r3, [pc, #436]	; (8002dcc <Control_Task+0x72c>)
 8002c16:	781a      	ldrb	r2, [r3, #0]
 8002c18:	4b70      	ldr	r3, [pc, #448]	; (8002ddc <Control_Task+0x73c>)
 8002c1a:	701a      	strb	r2, [r3, #0]
		}
		control_task_state++;
 8002c1c:	4b6b      	ldr	r3, [pc, #428]	; (8002dcc <Control_Task+0x72c>)
 8002c1e:	781b      	ldrb	r3, [r3, #0]
 8002c20:	3301      	adds	r3, #1
 8002c22:	b2da      	uxtb	r2, r3
 8002c24:	4b69      	ldr	r3, [pc, #420]	; (8002dcc <Control_Task+0x72c>)
 8002c26:	701a      	strb	r2, [r3, #0]
		return; //ha csak valamelyik szomszédot vizsgáltuk még akkor eddig tartott ez a task futás, itt kilépünk
 8002c28:	e0cb      	b.n	8002dc2 <Control_Task+0x722>
	}
	/**************************************************************************************/
	//ide csak akkor jutunk el ha control_task_state>NEIGHBOUR4

	/**********************KIÉRTÉKELÉS (control_task_state=EVALUATE ->5.állapot)**********************/
	else if(control_task_state==EVALUATE)
 8002c2a:	4b68      	ldr	r3, [pc, #416]	; (8002dcc <Control_Task+0x72c>)
 8002c2c:	781b      	ldrb	r3, [r3, #0]
 8002c2e:	2b06      	cmp	r3, #6
 8002c30:	f040 80a6 	bne.w	8002d80 <Control_Task+0x6e0>
	{
		if(bestFitness==0 && fitness[N(pos[MY]).middle]==0) bestNb[TMP]=N(pos[MY]).middle;
 8002c34:	4b68      	ldr	r3, [pc, #416]	; (8002dd8 <Control_Task+0x738>)
 8002c36:	edd3 7a00 	vldr	s15, [r3]
 8002c3a:	eef5 7a40 	vcmp.f32	s15, #0.0
 8002c3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002c42:	d123      	bne.n	8002c8c <Control_Task+0x5ec>
 8002c44:	4b66      	ldr	r3, [pc, #408]	; (8002de0 <Control_Task+0x740>)
 8002c46:	781b      	ldrb	r3, [r3, #0]
 8002c48:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002c4c:	4965      	ldr	r1, [pc, #404]	; (8002de4 <Control_Task+0x744>)
 8002c4e:	4613      	mov	r3, r2
 8002c50:	009b      	lsls	r3, r3, #2
 8002c52:	4413      	add	r3, r2
 8002c54:	00db      	lsls	r3, r3, #3
 8002c56:	440b      	add	r3, r1
 8002c58:	3324      	adds	r3, #36	; 0x24
 8002c5a:	781b      	ldrb	r3, [r3, #0]
 8002c5c:	4a5c      	ldr	r2, [pc, #368]	; (8002dd0 <Control_Task+0x730>)
 8002c5e:	009b      	lsls	r3, r3, #2
 8002c60:	4413      	add	r3, r2
 8002c62:	edd3 7a00 	vldr	s15, [r3]
 8002c66:	eef5 7a40 	vcmp.f32	s15, #0.0
 8002c6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002c6e:	d10d      	bne.n	8002c8c <Control_Task+0x5ec>
 8002c70:	4b5b      	ldr	r3, [pc, #364]	; (8002de0 <Control_Task+0x740>)
 8002c72:	781b      	ldrb	r3, [r3, #0]
 8002c74:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002c78:	495a      	ldr	r1, [pc, #360]	; (8002de4 <Control_Task+0x744>)
 8002c7a:	4613      	mov	r3, r2
 8002c7c:	009b      	lsls	r3, r3, #2
 8002c7e:	4413      	add	r3, r2
 8002c80:	00db      	lsls	r3, r3, #3
 8002c82:	440b      	add	r3, r1
 8002c84:	3324      	adds	r3, #36	; 0x24
 8002c86:	781a      	ldrb	r2, [r3, #0]
 8002c88:	4b54      	ldr	r3, [pc, #336]	; (8002ddc <Control_Task+0x73c>)
 8002c8a:	701a      	strb	r2, [r3, #0]
		bestNb[NEXT]=bestNb[TMP];
 8002c8c:	4b53      	ldr	r3, [pc, #332]	; (8002ddc <Control_Task+0x73c>)
 8002c8e:	781a      	ldrb	r2, [r3, #0]
 8002c90:	4b52      	ldr	r3, [pc, #328]	; (8002ddc <Control_Task+0x73c>)
 8002c92:	705a      	strb	r2, [r3, #1]
		pos[NEXT]=N(pos[MY]).neighbours[bestNb[NEXT]];//a következő poziciónk a legjobb szomszéd lesz
 8002c94:	4b52      	ldr	r3, [pc, #328]	; (8002de0 <Control_Task+0x740>)
 8002c96:	781b      	ldrb	r3, [r3, #0]
 8002c98:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002c9c:	4b4f      	ldr	r3, [pc, #316]	; (8002ddc <Control_Task+0x73c>)
 8002c9e:	785b      	ldrb	r3, [r3, #1]
 8002ca0:	4618      	mov	r0, r3
 8002ca2:	4950      	ldr	r1, [pc, #320]	; (8002de4 <Control_Task+0x744>)
 8002ca4:	4613      	mov	r3, r2
 8002ca6:	009b      	lsls	r3, r3, #2
 8002ca8:	4413      	add	r3, r2
 8002caa:	00db      	lsls	r3, r3, #3
 8002cac:	440b      	add	r3, r1
 8002cae:	4403      	add	r3, r0
 8002cb0:	330c      	adds	r3, #12
 8002cb2:	781a      	ldrb	r2, [r3, #0]
 8002cb4:	4b4a      	ldr	r3, [pc, #296]	; (8002de0 <Control_Task+0x740>)
 8002cb6:	705a      	strb	r2, [r3, #1]
		dir[NEXT]=N(pos[MY]).directions[bestNb[NEXT]];//már most tudjuk, mi lesz az irányunk, ha odaértünk
 8002cb8:	4b49      	ldr	r3, [pc, #292]	; (8002de0 <Control_Task+0x740>)
 8002cba:	781b      	ldrb	r3, [r3, #0]
 8002cbc:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002cc0:	4b46      	ldr	r3, [pc, #280]	; (8002ddc <Control_Task+0x73c>)
 8002cc2:	785b      	ldrb	r3, [r3, #1]
 8002cc4:	4618      	mov	r0, r3
 8002cc6:	4947      	ldr	r1, [pc, #284]	; (8002de4 <Control_Task+0x744>)
 8002cc8:	4613      	mov	r3, r2
 8002cca:	009b      	lsls	r3, r3, #2
 8002ccc:	4413      	add	r3, r2
 8002cce:	00db      	lsls	r3, r3, #3
 8002cd0:	440b      	add	r3, r1
 8002cd2:	4403      	add	r3, r0
 8002cd4:	3312      	adds	r3, #18
 8002cd6:	781a      	ldrb	r2, [r3, #0]
 8002cd8:	4b43      	ldr	r3, [pc, #268]	; (8002de8 <Control_Task+0x748>)
 8002cda:	705a      	strb	r2, [r3, #1]

		//a kocsi az egyik node-ból átmegy egy másikba-> az irányok segítségével meghatározzu az új orientationt
		if(bestNb[NEXT] < NEIGHBOUR4) //ha balra/fel kell majd mennünk a nextPosition -höz
 8002cdc:	4b3f      	ldr	r3, [pc, #252]	; (8002ddc <Control_Task+0x73c>)
 8002cde:	785b      	ldrb	r3, [r3, #1]
 8002ce0:	2b02      	cmp	r3, #2
 8002ce2:	d813      	bhi.n	8002d0c <Control_Task+0x66c>
		{
			if(dir[MY]==2)//és eddig jobbra/fel mentünk,
 8002ce4:	4b40      	ldr	r3, [pc, #256]	; (8002de8 <Control_Task+0x748>)
 8002ce6:	781b      	ldrb	r3, [r3, #0]
 8002ce8:	2b02      	cmp	r3, #2
 8002cea:	d10a      	bne.n	8002d02 <Control_Task+0x662>
				nextOri = !orientation;//akkor most orientációt kell váltanunk
 8002cec:	4b3f      	ldr	r3, [pc, #252]	; (8002dec <Control_Task+0x74c>)
 8002cee:	781b      	ldrb	r3, [r3, #0]
 8002cf0:	2b00      	cmp	r3, #0
 8002cf2:	bf0c      	ite	eq
 8002cf4:	2301      	moveq	r3, #1
 8002cf6:	2300      	movne	r3, #0
 8002cf8:	b2db      	uxtb	r3, r3
 8002cfa:	461a      	mov	r2, r3
 8002cfc:	4b3c      	ldr	r3, [pc, #240]	; (8002df0 <Control_Task+0x750>)
 8002cfe:	701a      	strb	r2, [r3, #0]
 8002d00:	e017      	b.n	8002d32 <Control_Task+0x692>
			else nextOri = orientation; //különben nem kell
 8002d02:	4b3a      	ldr	r3, [pc, #232]	; (8002dec <Control_Task+0x74c>)
 8002d04:	781a      	ldrb	r2, [r3, #0]
 8002d06:	4b3a      	ldr	r3, [pc, #232]	; (8002df0 <Control_Task+0x750>)
 8002d08:	701a      	strb	r2, [r3, #0]
 8002d0a:	e012      	b.n	8002d32 <Control_Task+0x692>
		}
		else //ha jobbra/le kell majd mennünk
		{
			if(dir[MY]==1)//és eddig balra/fel mentünk,
 8002d0c:	4b36      	ldr	r3, [pc, #216]	; (8002de8 <Control_Task+0x748>)
 8002d0e:	781b      	ldrb	r3, [r3, #0]
 8002d10:	2b01      	cmp	r3, #1
 8002d12:	d10a      	bne.n	8002d2a <Control_Task+0x68a>
				nextOri =! orientation;//akkor most irányt kell váltanunk
 8002d14:	4b35      	ldr	r3, [pc, #212]	; (8002dec <Control_Task+0x74c>)
 8002d16:	781b      	ldrb	r3, [r3, #0]
 8002d18:	2b00      	cmp	r3, #0
 8002d1a:	bf0c      	ite	eq
 8002d1c:	2301      	moveq	r3, #1
 8002d1e:	2300      	movne	r3, #0
 8002d20:	b2db      	uxtb	r3, r3
 8002d22:	461a      	mov	r2, r3
 8002d24:	4b32      	ldr	r3, [pc, #200]	; (8002df0 <Control_Task+0x750>)
 8002d26:	701a      	strb	r2, [r3, #0]
 8002d28:	e003      	b.n	8002d32 <Control_Task+0x692>
			else nextOri = orientation; //különben nem kell
 8002d2a:	4b30      	ldr	r3, [pc, #192]	; (8002dec <Control_Task+0x74c>)
 8002d2c:	781a      	ldrb	r2, [r3, #0]
 8002d2e:	4b30      	ldr	r3, [pc, #192]	; (8002df0 <Control_Task+0x750>)
 8002d30:	701a      	strb	r2, [r3, #0]
		}

		//path kiválasztás -> az orientációt mostmár tudjuk (tolatás/előre), már csak az ösvény kell kivákasztani, hogy a megfelelő szomszédhoz jussunk

		if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)nextPath=LEFT;
 8002d32:	4b2a      	ldr	r3, [pc, #168]	; (8002ddc <Control_Task+0x73c>)
 8002d34:	785b      	ldrb	r3, [r3, #1]
 8002d36:	2b00      	cmp	r3, #0
 8002d38:	d003      	beq.n	8002d42 <Control_Task+0x6a2>
 8002d3a:	4b28      	ldr	r3, [pc, #160]	; (8002ddc <Control_Task+0x73c>)
 8002d3c:	785b      	ldrb	r3, [r3, #1]
 8002d3e:	2b03      	cmp	r3, #3
 8002d40:	d103      	bne.n	8002d4a <Control_Task+0x6aa>
 8002d42:	4b2c      	ldr	r3, [pc, #176]	; (8002df4 <Control_Task+0x754>)
 8002d44:	2200      	movs	r2, #0
 8002d46:	701a      	strb	r2, [r3, #0]
 8002d48:	e016      	b.n	8002d78 <Control_Task+0x6d8>
		else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)nextPath=MIDDLE;
 8002d4a:	4b24      	ldr	r3, [pc, #144]	; (8002ddc <Control_Task+0x73c>)
 8002d4c:	785b      	ldrb	r3, [r3, #1]
 8002d4e:	2b01      	cmp	r3, #1
 8002d50:	d003      	beq.n	8002d5a <Control_Task+0x6ba>
 8002d52:	4b22      	ldr	r3, [pc, #136]	; (8002ddc <Control_Task+0x73c>)
 8002d54:	785b      	ldrb	r3, [r3, #1]
 8002d56:	2b04      	cmp	r3, #4
 8002d58:	d103      	bne.n	8002d62 <Control_Task+0x6c2>
 8002d5a:	4b26      	ldr	r3, [pc, #152]	; (8002df4 <Control_Task+0x754>)
 8002d5c:	2201      	movs	r2, #1
 8002d5e:	701a      	strb	r2, [r3, #0]
 8002d60:	e00a      	b.n	8002d78 <Control_Task+0x6d8>
		else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)nextPath=RIGHT;
 8002d62:	4b1e      	ldr	r3, [pc, #120]	; (8002ddc <Control_Task+0x73c>)
 8002d64:	785b      	ldrb	r3, [r3, #1]
 8002d66:	2b02      	cmp	r3, #2
 8002d68:	d003      	beq.n	8002d72 <Control_Task+0x6d2>
 8002d6a:	4b1c      	ldr	r3, [pc, #112]	; (8002ddc <Control_Task+0x73c>)
 8002d6c:	785b      	ldrb	r3, [r3, #1]
 8002d6e:	2b05      	cmp	r3, #5
 8002d70:	d102      	bne.n	8002d78 <Control_Task+0x6d8>
 8002d72:	4b20      	ldr	r3, [pc, #128]	; (8002df4 <Control_Task+0x754>)
 8002d74:	2202      	movs	r2, #2
 8002d76:	701a      	strb	r2, [r3, #0]

		control_task_state=NEIGHBOUR1;
 8002d78:	4b14      	ldr	r3, [pc, #80]	; (8002dcc <Control_Task+0x72c>)
 8002d7a:	2200      	movs	r2, #0
 8002d7c:	701a      	strb	r2, [r3, #0]
		return;
 8002d7e:	e020      	b.n	8002dc2 <Control_Task+0x722>
	}
	/**************************************************************************************/

	/**********ÜTKÖZÉSELKERÜLÉS VÁRAKOZÁSSAL (control_task_state=EVALUATE ->6.állapot)***********/
	else if(control_task_state==WAIT)
 8002d80:	4b12      	ldr	r3, [pc, #72]	; (8002dcc <Control_Task+0x72c>)
 8002d82:	781b      	ldrb	r3, [r3, #0]
 8002d84:	2b07      	cmp	r3, #7
 8002d86:	d11c      	bne.n	8002dc2 <Control_Task+0x722>
	{
		if(tick-t_stamp<4000)
 8002d88:	4b1b      	ldr	r3, [pc, #108]	; (8002df8 <Control_Task+0x758>)
 8002d8a:	681b      	ldr	r3, [r3, #0]
 8002d8c:	687a      	ldr	r2, [r7, #4]
 8002d8e:	1ad3      	subs	r3, r2, r3
 8002d90:	f5b3 6f7a 	cmp.w	r3, #4000	; 0xfa0
 8002d94:	d206      	bcs.n	8002da4 <Control_Task+0x704>
		{
			v_control=STOP;
 8002d96:	4b19      	ldr	r3, [pc, #100]	; (8002dfc <Control_Task+0x75c>)
 8002d98:	2200      	movs	r2, #0
 8002d9a:	701a      	strb	r2, [r3, #0]
			control_task_state=WAIT;
 8002d9c:	4b0b      	ldr	r3, [pc, #44]	; (8002dcc <Control_Task+0x72c>)
 8002d9e:	2207      	movs	r2, #7
 8002da0:	701a      	strb	r2, [r3, #0]
 8002da2:	e00e      	b.n	8002dc2 <Control_Task+0x722>
		}
		else
		{
			LED_G(0);
 8002da4:	2201      	movs	r2, #1
 8002da6:	2102      	movs	r1, #2
 8002da8:	4815      	ldr	r0, [pc, #84]	; (8002e00 <Control_Task+0x760>)
 8002daa:	f006 fc6f 	bl	800968c <HAL_GPIO_WritePin>
			v_control=NORMAL_VEL;
 8002dae:	4b13      	ldr	r3, [pc, #76]	; (8002dfc <Control_Task+0x75c>)
 8002db0:	2202      	movs	r2, #2
 8002db2:	701a      	strb	r2, [r3, #0]
			control_task_state=NEIGHBOUR1;
 8002db4:	4b05      	ldr	r3, [pc, #20]	; (8002dcc <Control_Task+0x72c>)
 8002db6:	2200      	movs	r2, #0
 8002db8:	701a      	strb	r2, [r3, #0]
 8002dba:	e002      	b.n	8002dc2 <Control_Task+0x722>
	if(control_task_tick>tick)return;
 8002dbc:	bf00      	nop
 8002dbe:	e000      	b.n	8002dc2 <Control_Task+0x722>
	if(mode!=SKILL || laneChange!=1)return;
 8002dc0:	bf00      	nop
		}
	}
	/**************************************************************************************/
}
 8002dc2:	3720      	adds	r7, #32
 8002dc4:	46bd      	mov	sp, r7
 8002dc6:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8002dca:	bf00      	nop
 8002dcc:	200006ef 	.word	0x200006ef
 8002dd0:	200006fc 	.word	0x200006fc
 8002dd4:	c3160000 	.word	0xc3160000
 8002dd8:	20000008 	.word	0x20000008
 8002ddc:	200006dc 	.word	0x200006dc
 8002de0:	20000358 	.word	0x20000358
 8002de4:	20000360 	.word	0x20000360
 8002de8:	2000035c 	.word	0x2000035c
 8002dec:	20000344 	.word	0x20000344
 8002df0:	200006f5 	.word	0x200006f5
 8002df4:	200006f4 	.word	0x200006f4
 8002df8:	200006f0 	.word	0x200006f0
 8002dfc:	20000349 	.word	0x20000349
 8002e00:	40020400 	.word	0x40020400
 8002e04:	00000000 	.word	0x00000000

08002e08 <Control_Task_2>:

void Control_Task_2(UART_HandleTypeDef *huart_debugg,uint32_t tick, uint32_t period)
{
 8002e08:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8002e0c:	b084      	sub	sp, #16
 8002e0e:	af00      	add	r7, sp, #0
 8002e10:	60f8      	str	r0, [r7, #12]
 8002e12:	60b9      	str	r1, [r7, #8]
 8002e14:	607a      	str	r2, [r7, #4]
	static uint8_t i=0;
	static char str[30];

	static uint32_t control_task_2_tick = 0;

	if(mode!=SKILL || laneChange)return;
 8002e16:	4baa      	ldr	r3, [pc, #680]	; (80030c0 <Control_Task_2+0x2b8>)
 8002e18:	781b      	ldrb	r3, [r3, #0]
 8002e1a:	2b52      	cmp	r3, #82	; 0x52
 8002e1c:	f040 84ca 	bne.w	80037b4 <Control_Task_2+0x9ac>
 8002e20:	4ba8      	ldr	r3, [pc, #672]	; (80030c4 <Control_Task_2+0x2bc>)
 8002e22:	781b      	ldrb	r3, [r3, #0]
 8002e24:	2b00      	cmp	r3, #0
 8002e26:	f040 84c5 	bne.w	80037b4 <Control_Task_2+0x9ac>

	else if(control_task_2_tick>tick)return;
 8002e2a:	4ba7      	ldr	r3, [pc, #668]	; (80030c8 <Control_Task_2+0x2c0>)
 8002e2c:	681b      	ldr	r3, [r3, #0]
 8002e2e:	68ba      	ldr	r2, [r7, #8]
 8002e30:	429a      	cmp	r2, r3
 8002e32:	f0c0 84c1 	bcc.w	80037b8 <Control_Task_2+0x9b0>
	control_task_2_tick=tick+period;
 8002e36:	68ba      	ldr	r2, [r7, #8]
 8002e38:	687b      	ldr	r3, [r7, #4]
 8002e3a:	4413      	add	r3, r2
 8002e3c:	4aa2      	ldr	r2, [pc, #648]	; (80030c8 <Control_Task_2+0x2c0>)
 8002e3e:	6013      	str	r3, [r2, #0]

	//ha kapu nélküli nodeba tartunk éppen, akkor időzítéssel "detektáljuk" a nodot
/**/
	if(N(pos[MY]).type>2 && control_task_2_state==2)
 8002e40:	4ba2      	ldr	r3, [pc, #648]	; (80030cc <Control_Task_2+0x2c4>)
 8002e42:	781b      	ldrb	r3, [r3, #0]
 8002e44:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002e48:	49a1      	ldr	r1, [pc, #644]	; (80030d0 <Control_Task_2+0x2c8>)
 8002e4a:	4613      	mov	r3, r2
 8002e4c:	009b      	lsls	r3, r3, #2
 8002e4e:	4413      	add	r3, r2
 8002e50:	00db      	lsls	r3, r3, #3
 8002e52:	440b      	add	r3, r1
 8002e54:	3308      	adds	r3, #8
 8002e56:	681b      	ldr	r3, [r3, #0]
 8002e58:	2b02      	cmp	r3, #2
 8002e5a:	d950      	bls.n	8002efe <Control_Task_2+0xf6>
 8002e5c:	4b9d      	ldr	r3, [pc, #628]	; (80030d4 <Control_Task_2+0x2cc>)
 8002e5e:	781b      	ldrb	r3, [r3, #0]
 8002e60:	2b02      	cmp	r3, #2
 8002e62:	d14c      	bne.n	8002efe <Control_Task_2+0xf6>
	{
		s += (float)(tick-tick_prev)*fabs(v)/10000;
 8002e64:	4b9c      	ldr	r3, [pc, #624]	; (80030d8 <Control_Task_2+0x2d0>)
 8002e66:	681b      	ldr	r3, [r3, #0]
 8002e68:	4618      	mov	r0, r3
 8002e6a:	f7fd fb8d 	bl	8000588 <__aeabi_f2d>
 8002e6e:	4604      	mov	r4, r0
 8002e70:	460d      	mov	r5, r1
 8002e72:	4b9a      	ldr	r3, [pc, #616]	; (80030dc <Control_Task_2+0x2d4>)
 8002e74:	681b      	ldr	r3, [r3, #0]
 8002e76:	68ba      	ldr	r2, [r7, #8]
 8002e78:	1ad3      	subs	r3, r2, r3
 8002e7a:	ee07 3a90 	vmov	s15, r3
 8002e7e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002e82:	ee17 0a90 	vmov	r0, s15
 8002e86:	f7fd fb7f 	bl	8000588 <__aeabi_f2d>
 8002e8a:	4680      	mov	r8, r0
 8002e8c:	4689      	mov	r9, r1
 8002e8e:	4b94      	ldr	r3, [pc, #592]	; (80030e0 <Control_Task_2+0x2d8>)
 8002e90:	edd3 7a00 	vldr	s15, [r3]
 8002e94:	eef0 7ae7 	vabs.f32	s15, s15
 8002e98:	ee17 0a90 	vmov	r0, s15
 8002e9c:	f7fd fb74 	bl	8000588 <__aeabi_f2d>
 8002ea0:	4602      	mov	r2, r0
 8002ea2:	460b      	mov	r3, r1
 8002ea4:	4640      	mov	r0, r8
 8002ea6:	4649      	mov	r1, r9
 8002ea8:	f7fd fbc6 	bl	8000638 <__aeabi_dmul>
 8002eac:	4602      	mov	r2, r0
 8002eae:	460b      	mov	r3, r1
 8002eb0:	4610      	mov	r0, r2
 8002eb2:	4619      	mov	r1, r3
 8002eb4:	a380      	add	r3, pc, #512	; (adr r3, 80030b8 <Control_Task_2+0x2b0>)
 8002eb6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002eba:	f7fd fce7 	bl	800088c <__aeabi_ddiv>
 8002ebe:	4602      	mov	r2, r0
 8002ec0:	460b      	mov	r3, r1
 8002ec2:	4620      	mov	r0, r4
 8002ec4:	4629      	mov	r1, r5
 8002ec6:	f7fd fa01 	bl	80002cc <__adddf3>
 8002eca:	4602      	mov	r2, r0
 8002ecc:	460b      	mov	r3, r1
 8002ece:	4610      	mov	r0, r2
 8002ed0:	4619      	mov	r1, r3
 8002ed2:	f7fd fe89 	bl	8000be8 <__aeabi_d2f>
 8002ed6:	4603      	mov	r3, r0
 8002ed8:	4a7f      	ldr	r2, [pc, #508]	; (80030d8 <Control_Task_2+0x2d0>)
 8002eda:	6013      	str	r3, [r2, #0]
		/*sprintf(str,"%4.0f\n\r",s);
		HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);*/
		if(s>sMAX)
 8002edc:	4b7e      	ldr	r3, [pc, #504]	; (80030d8 <Control_Task_2+0x2d0>)
 8002ede:	ed93 7a00 	vldr	s14, [r3]
 8002ee2:	4b80      	ldr	r3, [pc, #512]	; (80030e4 <Control_Task_2+0x2dc>)
 8002ee4:	edd3 7a00 	vldr	s15, [r3]
 8002ee8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002eec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002ef0:	dd05      	ble.n	8002efe <Control_Task_2+0xf6>
		{
			/*sprintf(str,"hehe %3.2f\n\r",sMAX);
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);*/
			nodeDetected=1;
 8002ef2:	4b7d      	ldr	r3, [pc, #500]	; (80030e8 <Control_Task_2+0x2e0>)
 8002ef4:	2201      	movs	r2, #1
 8002ef6:	701a      	strb	r2, [r3, #0]
			sMAX=30000;
 8002ef8:	4b7a      	ldr	r3, [pc, #488]	; (80030e4 <Control_Task_2+0x2dc>)
 8002efa:	4a7c      	ldr	r2, [pc, #496]	; (80030ec <Control_Task_2+0x2e4>)
 8002efc:	601a      	str	r2, [r3, #0]
		}
	}
	tick_prev=tick;
 8002efe:	4a77      	ldr	r2, [pc, #476]	; (80030dc <Control_Task_2+0x2d4>)
 8002f00:	68bb      	ldr	r3, [r7, #8]
 8002f02:	6013      	str	r3, [r2, #0]

	if(thunderboardFlag==1)		//uj adat erkezik (minden 200ms)
 8002f04:	4b7a      	ldr	r3, [pc, #488]	; (80030f0 <Control_Task_2+0x2e8>)
 8002f06:	781b      	ldrb	r3, [r3, #0]
 8002f08:	b2db      	uxtb	r3, r3
 8002f0a:	2b01      	cmp	r3, #1
 8002f0c:	d14f      	bne.n	8002fae <Control_Task_2+0x1a6>
	{
		if(piratePos_prev[1]!=piratePos[1])//a kalóz átment egy Node-on
 8002f0e:	4b79      	ldr	r3, [pc, #484]	; (80030f4 <Control_Task_2+0x2ec>)
 8002f10:	785a      	ldrb	r2, [r3, #1]
 8002f12:	4b79      	ldr	r3, [pc, #484]	; (80030f8 <Control_Task_2+0x2f0>)
 8002f14:	785b      	ldrb	r3, [r3, #1]
 8002f16:	429a      	cmp	r2, r3
 8002f18:	d036      	beq.n	8002f88 <Control_Task_2+0x180>
		{
			if(N(piratePos[0]).worth > 0)
 8002f1a:	4b77      	ldr	r3, [pc, #476]	; (80030f8 <Control_Task_2+0x2f0>)
 8002f1c:	781b      	ldrb	r3, [r3, #0]
 8002f1e:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002f22:	496b      	ldr	r1, [pc, #428]	; (80030d0 <Control_Task_2+0x2c8>)
 8002f24:	4613      	mov	r3, r2
 8002f26:	009b      	lsls	r3, r3, #2
 8002f28:	4413      	add	r3, r2
 8002f2a:	00db      	lsls	r3, r3, #3
 8002f2c:	440b      	add	r3, r1
 8002f2e:	3304      	adds	r3, #4
 8002f30:	681b      	ldr	r3, [r3, #0]
 8002f32:	2b00      	cmp	r3, #0
 8002f34:	dd1b      	ble.n	8002f6e <Control_Task_2+0x166>
			{
				N(piratePos[0]).worth--; //az a node már kevesebbet ér
 8002f36:	4b70      	ldr	r3, [pc, #448]	; (80030f8 <Control_Task_2+0x2f0>)
 8002f38:	781b      	ldrb	r3, [r3, #0]
 8002f3a:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002f3e:	4964      	ldr	r1, [pc, #400]	; (80030d0 <Control_Task_2+0x2c8>)
 8002f40:	4613      	mov	r3, r2
 8002f42:	009b      	lsls	r3, r3, #2
 8002f44:	4413      	add	r3, r2
 8002f46:	00db      	lsls	r3, r3, #3
 8002f48:	440b      	add	r3, r1
 8002f4a:	3304      	adds	r3, #4
 8002f4c:	681b      	ldr	r3, [r3, #0]
 8002f4e:	1e59      	subs	r1, r3, #1
 8002f50:	485f      	ldr	r0, [pc, #380]	; (80030d0 <Control_Task_2+0x2c8>)
 8002f52:	4613      	mov	r3, r2
 8002f54:	009b      	lsls	r3, r3, #2
 8002f56:	4413      	add	r3, r2
 8002f58:	00db      	lsls	r3, r3, #3
 8002f5a:	4403      	add	r3, r0
 8002f5c:	3304      	adds	r3, #4
 8002f5e:	6019      	str	r1, [r3, #0]
				collectedPoints ++;
 8002f60:	4b66      	ldr	r3, [pc, #408]	; (80030fc <Control_Task_2+0x2f4>)
 8002f62:	781b      	ldrb	r3, [r3, #0]
 8002f64:	3301      	adds	r3, #1
 8002f66:	b2da      	uxtb	r2, r3
 8002f68:	4b64      	ldr	r3, [pc, #400]	; (80030fc <Control_Task_2+0x2f4>)
 8002f6a:	701a      	strb	r2, [r3, #0]
 8002f6c:	e00c      	b.n	8002f88 <Control_Task_2+0x180>
			}
			else N(piratePos[0]).worth=0;
 8002f6e:	4b62      	ldr	r3, [pc, #392]	; (80030f8 <Control_Task_2+0x2f0>)
 8002f70:	781b      	ldrb	r3, [r3, #0]
 8002f72:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002f76:	4956      	ldr	r1, [pc, #344]	; (80030d0 <Control_Task_2+0x2c8>)
 8002f78:	4613      	mov	r3, r2
 8002f7a:	009b      	lsls	r3, r3, #2
 8002f7c:	4413      	add	r3, r2
 8002f7e:	00db      	lsls	r3, r3, #3
 8002f80:	440b      	add	r3, r1
 8002f82:	3304      	adds	r3, #4
 8002f84:	2200      	movs	r2, #0
 8002f86:	601a      	str	r2, [r3, #0]
		}
		piratePos_prev[0]=piratePos[0];//előző kalozpozíció frissítése P
 8002f88:	4b5b      	ldr	r3, [pc, #364]	; (80030f8 <Control_Task_2+0x2f0>)
 8002f8a:	781a      	ldrb	r2, [r3, #0]
 8002f8c:	4b59      	ldr	r3, [pc, #356]	; (80030f4 <Control_Task_2+0x2ec>)
 8002f8e:	701a      	strb	r2, [r3, #0]
		piratePos_prev[1]=piratePos[1];			//M
 8002f90:	4b59      	ldr	r3, [pc, #356]	; (80030f8 <Control_Task_2+0x2f0>)
 8002f92:	785a      	ldrb	r2, [r3, #1]
 8002f94:	4b57      	ldr	r3, [pc, #348]	; (80030f4 <Control_Task_2+0x2ec>)
 8002f96:	705a      	strb	r2, [r3, #1]
		piratePos_prev[2]=piratePos[2];			//K
 8002f98:	4b57      	ldr	r3, [pc, #348]	; (80030f8 <Control_Task_2+0x2f0>)
 8002f9a:	789a      	ldrb	r2, [r3, #2]
 8002f9c:	4b55      	ldr	r3, [pc, #340]	; (80030f4 <Control_Task_2+0x2ec>)
 8002f9e:	709a      	strb	r2, [r3, #2]
		piratePos_prev[3]=piratePos[3];			//65
 8002fa0:	4b55      	ldr	r3, [pc, #340]	; (80030f8 <Control_Task_2+0x2f0>)
 8002fa2:	78da      	ldrb	r2, [r3, #3]
 8002fa4:	4b53      	ldr	r3, [pc, #332]	; (80030f4 <Control_Task_2+0x2ec>)
 8002fa6:	70da      	strb	r2, [r3, #3]


		thunderboardFlag=0;
 8002fa8:	4b51      	ldr	r3, [pc, #324]	; (80030f0 <Control_Task_2+0x2e8>)
 8002faa:	2200      	movs	r2, #0
 8002fac:	701a      	strb	r2, [r3, #0]
	}
	if(piratePos_prev[0]==0)return; //ha nem kaptunk még adatot a TB-tol return
 8002fae:	4b51      	ldr	r3, [pc, #324]	; (80030f4 <Control_Task_2+0x2ec>)
 8002fb0:	781b      	ldrb	r3, [r3, #0]
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	f000 8402 	beq.w	80037bc <Control_Task_2+0x9b4>


	if(control_task_2_state==0)
 8002fb8:	4b46      	ldr	r3, [pc, #280]	; (80030d4 <Control_Task_2+0x2cc>)
 8002fba:	781b      	ldrb	r3, [r3, #0]
 8002fbc:	2b00      	cmp	r3, #0
 8002fbe:	f040 81b8 	bne.w	8003332 <Control_Task_2+0x52a>
	{

		if(nodeDetected)
 8002fc2:	4b49      	ldr	r3, [pc, #292]	; (80030e8 <Control_Task_2+0x2e0>)
 8002fc4:	781b      	ldrb	r3, [r3, #0]
 8002fc6:	2b00      	cmp	r3, #0
 8002fc8:	f000 80e6 	beq.w	8003198 <Control_Task_2+0x390>
		{
			LED_B_TOGGLE;
 8002fcc:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8002fd0:	484b      	ldr	r0, [pc, #300]	; (8003100 <Control_Task_2+0x2f8>)
 8002fd2:	f006 fb74 	bl	80096be <HAL_GPIO_TogglePin>
			//pontok nyugtázása
			collectedPoints +=N(pos[MY]).worth;//sávváltás módik vizsgáljuk az össezgyűjtött kapuk számát
 8002fd6:	4b3d      	ldr	r3, [pc, #244]	; (80030cc <Control_Task_2+0x2c4>)
 8002fd8:	781b      	ldrb	r3, [r3, #0]
 8002fda:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002fde:	493c      	ldr	r1, [pc, #240]	; (80030d0 <Control_Task_2+0x2c8>)
 8002fe0:	4613      	mov	r3, r2
 8002fe2:	009b      	lsls	r3, r3, #2
 8002fe4:	4413      	add	r3, r2
 8002fe6:	00db      	lsls	r3, r3, #3
 8002fe8:	440b      	add	r3, r1
 8002fea:	3304      	adds	r3, #4
 8002fec:	681b      	ldr	r3, [r3, #0]
 8002fee:	b2da      	uxtb	r2, r3
 8002ff0:	4b42      	ldr	r3, [pc, #264]	; (80030fc <Control_Task_2+0x2f4>)
 8002ff2:	781b      	ldrb	r3, [r3, #0]
 8002ff4:	4413      	add	r3, r2
 8002ff6:	b2da      	uxtb	r2, r3
 8002ff8:	4b40      	ldr	r3, [pc, #256]	; (80030fc <Control_Task_2+0x2f4>)
 8002ffa:	701a      	strb	r2, [r3, #0]
			N(pos[MY]).worth=0;//ez a kapu már nem ér pontot
 8002ffc:	4b33      	ldr	r3, [pc, #204]	; (80030cc <Control_Task_2+0x2c4>)
 8002ffe:	781b      	ldrb	r3, [r3, #0]
 8003000:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003004:	4932      	ldr	r1, [pc, #200]	; (80030d0 <Control_Task_2+0x2c8>)
 8003006:	4613      	mov	r3, r2
 8003008:	009b      	lsls	r3, r3, #2
 800300a:	4413      	add	r3, r2
 800300c:	00db      	lsls	r3, r3, #3
 800300e:	440b      	add	r3, r1
 8003010:	3304      	adds	r3, #4
 8003012:	2200      	movs	r2, #0
 8003014:	601a      	str	r2, [r3, #0]

			sprintf(str,"%d\n\r",collectedPoints);
 8003016:	4b39      	ldr	r3, [pc, #228]	; (80030fc <Control_Task_2+0x2f4>)
 8003018:	781b      	ldrb	r3, [r3, #0]
 800301a:	461a      	mov	r2, r3
 800301c:	4939      	ldr	r1, [pc, #228]	; (8003104 <Control_Task_2+0x2fc>)
 800301e:	483a      	ldr	r0, [pc, #232]	; (8003108 <Control_Task_2+0x300>)
 8003020:	f00a fdf0 	bl	800dc04 <siprintf>
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);
 8003024:	4838      	ldr	r0, [pc, #224]	; (8003108 <Control_Task_2+0x300>)
 8003026:	f7fd f8f3 	bl	8000210 <strlen>
 800302a:	4603      	mov	r3, r0
 800302c:	b29a      	uxth	r2, r3
 800302e:	2303      	movs	r3, #3
 8003030:	4935      	ldr	r1, [pc, #212]	; (8003108 <Control_Task_2+0x300>)
 8003032:	68f8      	ldr	r0, [r7, #12]
 8003034:	f009 f87d 	bl	800c132 <HAL_UART_Transmit>

			if (route[route_index+2]==0)//még nincs kész az eléállás
 8003038:	4b34      	ldr	r3, [pc, #208]	; (800310c <Control_Task_2+0x304>)
 800303a:	781b      	ldrb	r3, [r3, #0]
 800303c:	3302      	adds	r3, #2
 800303e:	4a34      	ldr	r2, [pc, #208]	; (8003110 <Control_Task_2+0x308>)
 8003040:	5cd3      	ldrb	r3, [r2, r3]
 8003042:	2b00      	cmp	r3, #0
 8003044:	d105      	bne.n	8003052 <Control_Task_2+0x24a>
			{
				//WAITING
				v_control=STOP;
 8003046:	4b33      	ldr	r3, [pc, #204]	; (8003114 <Control_Task_2+0x30c>)
 8003048:	2200      	movs	r2, #0
 800304a:	701a      	strb	r2, [r3, #0]
				control_task_2_state=1;
 800304c:	4b21      	ldr	r3, [pc, #132]	; (80030d4 <Control_Task_2+0x2cc>)
 800304e:	2201      	movs	r2, #1
 8003050:	701a      	strb	r2, [r3, #0]

			}

			pos[MY]=pos[NEXT]; //route 2 eetén a végén még hulyeség kerül ide
 8003052:	4b1e      	ldr	r3, [pc, #120]	; (80030cc <Control_Task_2+0x2c4>)
 8003054:	785a      	ldrb	r2, [r3, #1]
 8003056:	4b1d      	ldr	r3, [pc, #116]	; (80030cc <Control_Task_2+0x2c4>)
 8003058:	701a      	strb	r2, [r3, #0]
			pos[NEXT]=route[route_index+1];
 800305a:	4b2c      	ldr	r3, [pc, #176]	; (800310c <Control_Task_2+0x304>)
 800305c:	781b      	ldrb	r3, [r3, #0]
 800305e:	3301      	adds	r3, #1
 8003060:	4a2b      	ldr	r2, [pc, #172]	; (8003110 <Control_Task_2+0x308>)
 8003062:	5cd2      	ldrb	r2, [r2, r3]
 8003064:	4b19      	ldr	r3, [pc, #100]	; (80030cc <Control_Task_2+0x2c4>)
 8003066:	705a      	strb	r2, [r3, #1]
			nodeDetected=0;
 8003068:	4b1f      	ldr	r3, [pc, #124]	; (80030e8 <Control_Task_2+0x2e0>)
 800306a:	2200      	movs	r2, #0
 800306c:	701a      	strb	r2, [r3, #0]
			route_index++;
 800306e:	4b27      	ldr	r3, [pc, #156]	; (800310c <Control_Task_2+0x304>)
 8003070:	781b      	ldrb	r3, [r3, #0]
 8003072:	3301      	adds	r3, #1
 8003074:	b2da      	uxtb	r2, r3
 8003076:	4b25      	ldr	r3, [pc, #148]	; (800310c <Control_Task_2+0x304>)
 8003078:	701a      	strb	r2, [r3, #0]

			for(i=0; i<6;i++)
 800307a:	4b27      	ldr	r3, [pc, #156]	; (8003118 <Control_Task_2+0x310>)
 800307c:	2200      	movs	r2, #0
 800307e:	701a      	strb	r2, [r3, #0]
 8003080:	e054      	b.n	800312c <Control_Task_2+0x324>
			{
				if (N(pos[MY]).neighbours[i]==pos[NEXT])//O=O-2
 8003082:	4b12      	ldr	r3, [pc, #72]	; (80030cc <Control_Task_2+0x2c4>)
 8003084:	781b      	ldrb	r3, [r3, #0]
 8003086:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800308a:	4b23      	ldr	r3, [pc, #140]	; (8003118 <Control_Task_2+0x310>)
 800308c:	781b      	ldrb	r3, [r3, #0]
 800308e:	4618      	mov	r0, r3
 8003090:	490f      	ldr	r1, [pc, #60]	; (80030d0 <Control_Task_2+0x2c8>)
 8003092:	4613      	mov	r3, r2
 8003094:	009b      	lsls	r3, r3, #2
 8003096:	4413      	add	r3, r2
 8003098:	00db      	lsls	r3, r3, #3
 800309a:	440b      	add	r3, r1
 800309c:	4403      	add	r3, r0
 800309e:	330c      	adds	r3, #12
 80030a0:	781a      	ldrb	r2, [r3, #0]
 80030a2:	4b0a      	ldr	r3, [pc, #40]	; (80030cc <Control_Task_2+0x2c4>)
 80030a4:	785b      	ldrb	r3, [r3, #1]
 80030a6:	429a      	cmp	r2, r3
 80030a8:	d13a      	bne.n	8003120 <Control_Task_2+0x318>
				{
					bestNb[NEXT]=i;
 80030aa:	4b1b      	ldr	r3, [pc, #108]	; (8003118 <Control_Task_2+0x310>)
 80030ac:	781a      	ldrb	r2, [r3, #0]
 80030ae:	4b1b      	ldr	r3, [pc, #108]	; (800311c <Control_Task_2+0x314>)
 80030b0:	705a      	strb	r2, [r3, #1]
					break;// ha megvan akkor breakkel kilépünk a for ciklusból azonnal
 80030b2:	e03f      	b.n	8003134 <Control_Task_2+0x32c>
 80030b4:	f3af 8000 	nop.w
 80030b8:	00000000 	.word	0x00000000
 80030bc:	40c38800 	.word	0x40c38800
 80030c0:	20000336 	.word	0x20000336
 80030c4:	20000348 	.word	0x20000348
 80030c8:	2000070c 	.word	0x2000070c
 80030cc:	20000358 	.word	0x20000358
 80030d0:	20000360 	.word	0x20000360
 80030d4:	20000710 	.word	0x20000710
 80030d8:	20000714 	.word	0x20000714
 80030dc:	20000718 	.word	0x20000718
 80030e0:	20000754 	.word	0x20000754
 80030e4:	2000000c 	.word	0x2000000c
 80030e8:	20000345 	.word	0x20000345
 80030ec:	46ea6000 	.word	0x46ea6000
 80030f0:	2000034a 	.word	0x2000034a
 80030f4:	2000071c 	.word	0x2000071c
 80030f8:	20000354 	.word	0x20000354
 80030fc:	20000347 	.word	0x20000347
 8003100:	40020400 	.word	0x40020400
 8003104:	08011660 	.word	0x08011660
 8003108:	20000720 	.word	0x20000720
 800310c:	2000073e 	.word	0x2000073e
 8003110:	20000740 	.word	0x20000740
 8003114:	20000349 	.word	0x20000349
 8003118:	20000746 	.word	0x20000746
 800311c:	20000748 	.word	0x20000748
			for(i=0; i<6;i++)
 8003120:	4b98      	ldr	r3, [pc, #608]	; (8003384 <Control_Task_2+0x57c>)
 8003122:	781b      	ldrb	r3, [r3, #0]
 8003124:	3301      	adds	r3, #1
 8003126:	b2da      	uxtb	r2, r3
 8003128:	4b96      	ldr	r3, [pc, #600]	; (8003384 <Control_Task_2+0x57c>)
 800312a:	701a      	strb	r2, [r3, #0]
 800312c:	4b95      	ldr	r3, [pc, #596]	; (8003384 <Control_Task_2+0x57c>)
 800312e:	781b      	ldrb	r3, [r3, #0]
 8003130:	2b05      	cmp	r3, #5
 8003132:	d9a6      	bls.n	8003082 <Control_Task_2+0x27a>
				}
			}
			if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)path=LEFT;
 8003134:	4b94      	ldr	r3, [pc, #592]	; (8003388 <Control_Task_2+0x580>)
 8003136:	785b      	ldrb	r3, [r3, #1]
 8003138:	2b00      	cmp	r3, #0
 800313a:	d003      	beq.n	8003144 <Control_Task_2+0x33c>
 800313c:	4b92      	ldr	r3, [pc, #584]	; (8003388 <Control_Task_2+0x580>)
 800313e:	785b      	ldrb	r3, [r3, #1]
 8003140:	2b03      	cmp	r3, #3
 8003142:	d103      	bne.n	800314c <Control_Task_2+0x344>
 8003144:	4b91      	ldr	r3, [pc, #580]	; (800338c <Control_Task_2+0x584>)
 8003146:	2200      	movs	r2, #0
 8003148:	701a      	strb	r2, [r3, #0]
 800314a:	e016      	b.n	800317a <Control_Task_2+0x372>
			else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)path=MIDDLE;
 800314c:	4b8e      	ldr	r3, [pc, #568]	; (8003388 <Control_Task_2+0x580>)
 800314e:	785b      	ldrb	r3, [r3, #1]
 8003150:	2b01      	cmp	r3, #1
 8003152:	d003      	beq.n	800315c <Control_Task_2+0x354>
 8003154:	4b8c      	ldr	r3, [pc, #560]	; (8003388 <Control_Task_2+0x580>)
 8003156:	785b      	ldrb	r3, [r3, #1]
 8003158:	2b04      	cmp	r3, #4
 800315a:	d103      	bne.n	8003164 <Control_Task_2+0x35c>
 800315c:	4b8b      	ldr	r3, [pc, #556]	; (800338c <Control_Task_2+0x584>)
 800315e:	2201      	movs	r2, #1
 8003160:	701a      	strb	r2, [r3, #0]
 8003162:	e00a      	b.n	800317a <Control_Task_2+0x372>
			else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)path=RIGHT;
 8003164:	4b88      	ldr	r3, [pc, #544]	; (8003388 <Control_Task_2+0x580>)
 8003166:	785b      	ldrb	r3, [r3, #1]
 8003168:	2b02      	cmp	r3, #2
 800316a:	d003      	beq.n	8003174 <Control_Task_2+0x36c>
 800316c:	4b86      	ldr	r3, [pc, #536]	; (8003388 <Control_Task_2+0x580>)
 800316e:	785b      	ldrb	r3, [r3, #1]
 8003170:	2b05      	cmp	r3, #5
 8003172:	d102      	bne.n	800317a <Control_Task_2+0x372>
 8003174:	4b85      	ldr	r3, [pc, #532]	; (800338c <Control_Task_2+0x584>)
 8003176:	2202      	movs	r2, #2
 8003178:	701a      	strb	r2, [r3, #0]

#ifdef ADIBUGG
			sprintf(str,"d;\n\r");
 800317a:	4985      	ldr	r1, [pc, #532]	; (8003390 <Control_Task_2+0x588>)
 800317c:	4885      	ldr	r0, [pc, #532]	; (8003394 <Control_Task_2+0x58c>)
 800317e:	f00a fd41 	bl	800dc04 <siprintf>

			str[0]=pos[MY];//honnan
 8003182:	4b85      	ldr	r3, [pc, #532]	; (8003398 <Control_Task_2+0x590>)
 8003184:	781a      	ldrb	r2, [r3, #0]
 8003186:	4b83      	ldr	r3, [pc, #524]	; (8003394 <Control_Task_2+0x58c>)
 8003188:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 4, 3);
 800318a:	2303      	movs	r3, #3
 800318c:	2204      	movs	r2, #4
 800318e:	4981      	ldr	r1, [pc, #516]	; (8003394 <Control_Task_2+0x58c>)
 8003190:	68f8      	ldr	r0, [r7, #12]
 8003192:	f008 ffce 	bl	800c132 <HAL_UART_Transmit>
 8003196:	e1d1      	b.n	800353c <Control_Task_2+0x734>
#endif
		}
		else if(!stage)
 8003198:	4b80      	ldr	r3, [pc, #512]	; (800339c <Control_Task_2+0x594>)
 800319a:	781b      	ldrb	r3, [r3, #0]
 800319c:	2b00      	cmp	r3, #0
 800319e:	f040 81cd 	bne.w	800353c <Control_Task_2+0x734>
		{
			LED_B_TOGGLE;
 80031a2:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80031a6:	487e      	ldr	r0, [pc, #504]	; (80033a0 <Control_Task_2+0x598>)
 80031a8:	f006 fa89 	bl	80096be <HAL_GPIO_TogglePin>
			switch(piratePos_prev[2])
 80031ac:	4b7d      	ldr	r3, [pc, #500]	; (80033a4 <Control_Task_2+0x59c>)
 80031ae:	789b      	ldrb	r3, [r3, #2]
 80031b0:	3b48      	subs	r3, #72	; 0x48
 80031b2:	2b09      	cmp	r3, #9
 80031b4:	d842      	bhi.n	800323c <Control_Task_2+0x434>
 80031b6:	a201      	add	r2, pc, #4	; (adr r2, 80031bc <Control_Task_2+0x3b4>)
 80031b8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80031bc:	08003211 	.word	0x08003211
 80031c0:	0800323d 	.word	0x0800323d
 80031c4:	0800323d 	.word	0x0800323d
 80031c8:	080031fb 	.word	0x080031fb
 80031cc:	0800323d 	.word	0x0800323d
 80031d0:	0800323d 	.word	0x0800323d
 80031d4:	08003227 	.word	0x08003227
 80031d8:	0800323d 	.word	0x0800323d
 80031dc:	0800323d 	.word	0x0800323d
 80031e0:	080031e5 	.word	0x080031e5
			{
			case 'Q':
				memcpy(route, route_1,6);
 80031e4:	4b70      	ldr	r3, [pc, #448]	; (80033a8 <Control_Task_2+0x5a0>)
 80031e6:	4a71      	ldr	r2, [pc, #452]	; (80033ac <Control_Task_2+0x5a4>)
 80031e8:	e892 0003 	ldmia.w	r2, {r0, r1}
 80031ec:	6018      	str	r0, [r3, #0]
 80031ee:	3304      	adds	r3, #4
 80031f0:	8019      	strh	r1, [r3, #0]
				selected_route=1;
 80031f2:	4b6f      	ldr	r3, [pc, #444]	; (80033b0 <Control_Task_2+0x5a8>)
 80031f4:	2201      	movs	r2, #1
 80031f6:	701a      	strb	r2, [r3, #0]
				break;
 80031f8:	e020      	b.n	800323c <Control_Task_2+0x434>
			case 'K':
				memcpy(route, route_2,6);
 80031fa:	4b6b      	ldr	r3, [pc, #428]	; (80033a8 <Control_Task_2+0x5a0>)
 80031fc:	4a6d      	ldr	r2, [pc, #436]	; (80033b4 <Control_Task_2+0x5ac>)
 80031fe:	e892 0003 	ldmia.w	r2, {r0, r1}
 8003202:	6018      	str	r0, [r3, #0]
 8003204:	3304      	adds	r3, #4
 8003206:	8019      	strh	r1, [r3, #0]
				selected_route=2;
 8003208:	4b69      	ldr	r3, [pc, #420]	; (80033b0 <Control_Task_2+0x5a8>)
 800320a:	2202      	movs	r2, #2
 800320c:	701a      	strb	r2, [r3, #0]
				break;
 800320e:	e015      	b.n	800323c <Control_Task_2+0x434>
			case 'H':
				memcpy(route, route_3,6);
 8003210:	4b65      	ldr	r3, [pc, #404]	; (80033a8 <Control_Task_2+0x5a0>)
 8003212:	4a69      	ldr	r2, [pc, #420]	; (80033b8 <Control_Task_2+0x5b0>)
 8003214:	e892 0003 	ldmia.w	r2, {r0, r1}
 8003218:	6018      	str	r0, [r3, #0]
 800321a:	3304      	adds	r3, #4
 800321c:	8019      	strh	r1, [r3, #0]
				selected_route=3;
 800321e:	4b64      	ldr	r3, [pc, #400]	; (80033b0 <Control_Task_2+0x5a8>)
 8003220:	2203      	movs	r2, #3
 8003222:	701a      	strb	r2, [r3, #0]
				break;
 8003224:	e00a      	b.n	800323c <Control_Task_2+0x434>
			case 'N':
				memcpy(route, route_4,6);
 8003226:	4b60      	ldr	r3, [pc, #384]	; (80033a8 <Control_Task_2+0x5a0>)
 8003228:	4a64      	ldr	r2, [pc, #400]	; (80033bc <Control_Task_2+0x5b4>)
 800322a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800322e:	6018      	str	r0, [r3, #0]
 8003230:	3304      	adds	r3, #4
 8003232:	8019      	strh	r1, [r3, #0]
				selected_route=4;
 8003234:	4b5e      	ldr	r3, [pc, #376]	; (80033b0 <Control_Task_2+0x5a8>)
 8003236:	2204      	movs	r2, #4
 8003238:	701a      	strb	r2, [r3, #0]
				break;
 800323a:	bf00      	nop
			}

			pos[MY]=route[route_index];
 800323c:	4b60      	ldr	r3, [pc, #384]	; (80033c0 <Control_Task_2+0x5b8>)
 800323e:	781b      	ldrb	r3, [r3, #0]
 8003240:	461a      	mov	r2, r3
 8003242:	4b59      	ldr	r3, [pc, #356]	; (80033a8 <Control_Task_2+0x5a0>)
 8003244:	5c9a      	ldrb	r2, [r3, r2]
 8003246:	4b54      	ldr	r3, [pc, #336]	; (8003398 <Control_Task_2+0x590>)
 8003248:	701a      	strb	r2, [r3, #0]
			pos[NEXT]=route[route_index+1];
 800324a:	4b5d      	ldr	r3, [pc, #372]	; (80033c0 <Control_Task_2+0x5b8>)
 800324c:	781b      	ldrb	r3, [r3, #0]
 800324e:	3301      	adds	r3, #1
 8003250:	4a55      	ldr	r2, [pc, #340]	; (80033a8 <Control_Task_2+0x5a0>)
 8003252:	5cd2      	ldrb	r2, [r2, r3]
 8003254:	4b50      	ldr	r3, [pc, #320]	; (8003398 <Control_Task_2+0x590>)
 8003256:	705a      	strb	r2, [r3, #1]
			route_index++;
 8003258:	4b59      	ldr	r3, [pc, #356]	; (80033c0 <Control_Task_2+0x5b8>)
 800325a:	781b      	ldrb	r3, [r3, #0]
 800325c:	3301      	adds	r3, #1
 800325e:	b2da      	uxtb	r2, r3
 8003260:	4b57      	ldr	r3, [pc, #348]	; (80033c0 <Control_Task_2+0x5b8>)
 8003262:	701a      	strb	r2, [r3, #0]
			////////////////////////////////////////////////////////////
			for(i=0; i<6;i++)
 8003264:	4b47      	ldr	r3, [pc, #284]	; (8003384 <Control_Task_2+0x57c>)
 8003266:	2200      	movs	r2, #0
 8003268:	701a      	strb	r2, [r3, #0]
 800326a:	e01e      	b.n	80032aa <Control_Task_2+0x4a2>
			{
				if (N(pos[MY]).neighbours[i]==pos[NEXT])//O=O-2
 800326c:	4b4a      	ldr	r3, [pc, #296]	; (8003398 <Control_Task_2+0x590>)
 800326e:	781b      	ldrb	r3, [r3, #0]
 8003270:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003274:	4b43      	ldr	r3, [pc, #268]	; (8003384 <Control_Task_2+0x57c>)
 8003276:	781b      	ldrb	r3, [r3, #0]
 8003278:	4618      	mov	r0, r3
 800327a:	4952      	ldr	r1, [pc, #328]	; (80033c4 <Control_Task_2+0x5bc>)
 800327c:	4613      	mov	r3, r2
 800327e:	009b      	lsls	r3, r3, #2
 8003280:	4413      	add	r3, r2
 8003282:	00db      	lsls	r3, r3, #3
 8003284:	440b      	add	r3, r1
 8003286:	4403      	add	r3, r0
 8003288:	330c      	adds	r3, #12
 800328a:	781a      	ldrb	r2, [r3, #0]
 800328c:	4b42      	ldr	r3, [pc, #264]	; (8003398 <Control_Task_2+0x590>)
 800328e:	785b      	ldrb	r3, [r3, #1]
 8003290:	429a      	cmp	r2, r3
 8003292:	d104      	bne.n	800329e <Control_Task_2+0x496>
				{
					bestNb[NEXT]=i;
 8003294:	4b3b      	ldr	r3, [pc, #236]	; (8003384 <Control_Task_2+0x57c>)
 8003296:	781a      	ldrb	r2, [r3, #0]
 8003298:	4b3b      	ldr	r3, [pc, #236]	; (8003388 <Control_Task_2+0x580>)
 800329a:	705a      	strb	r2, [r3, #1]
					break;// ha megvan akkor breakkel kilépünk a for ciklusból azonnal
 800329c:	e009      	b.n	80032b2 <Control_Task_2+0x4aa>
			for(i=0; i<6;i++)
 800329e:	4b39      	ldr	r3, [pc, #228]	; (8003384 <Control_Task_2+0x57c>)
 80032a0:	781b      	ldrb	r3, [r3, #0]
 80032a2:	3301      	adds	r3, #1
 80032a4:	b2da      	uxtb	r2, r3
 80032a6:	4b37      	ldr	r3, [pc, #220]	; (8003384 <Control_Task_2+0x57c>)
 80032a8:	701a      	strb	r2, [r3, #0]
 80032aa:	4b36      	ldr	r3, [pc, #216]	; (8003384 <Control_Task_2+0x57c>)
 80032ac:	781b      	ldrb	r3, [r3, #0]
 80032ae:	2b05      	cmp	r3, #5
 80032b0:	d9dc      	bls.n	800326c <Control_Task_2+0x464>
				}
			}
			if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)path=LEFT;
 80032b2:	4b35      	ldr	r3, [pc, #212]	; (8003388 <Control_Task_2+0x580>)
 80032b4:	785b      	ldrb	r3, [r3, #1]
 80032b6:	2b00      	cmp	r3, #0
 80032b8:	d003      	beq.n	80032c2 <Control_Task_2+0x4ba>
 80032ba:	4b33      	ldr	r3, [pc, #204]	; (8003388 <Control_Task_2+0x580>)
 80032bc:	785b      	ldrb	r3, [r3, #1]
 80032be:	2b03      	cmp	r3, #3
 80032c0:	d103      	bne.n	80032ca <Control_Task_2+0x4c2>
 80032c2:	4b32      	ldr	r3, [pc, #200]	; (800338c <Control_Task_2+0x584>)
 80032c4:	2200      	movs	r2, #0
 80032c6:	701a      	strb	r2, [r3, #0]
 80032c8:	e016      	b.n	80032f8 <Control_Task_2+0x4f0>
			else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)path=MIDDLE;
 80032ca:	4b2f      	ldr	r3, [pc, #188]	; (8003388 <Control_Task_2+0x580>)
 80032cc:	785b      	ldrb	r3, [r3, #1]
 80032ce:	2b01      	cmp	r3, #1
 80032d0:	d003      	beq.n	80032da <Control_Task_2+0x4d2>
 80032d2:	4b2d      	ldr	r3, [pc, #180]	; (8003388 <Control_Task_2+0x580>)
 80032d4:	785b      	ldrb	r3, [r3, #1]
 80032d6:	2b04      	cmp	r3, #4
 80032d8:	d103      	bne.n	80032e2 <Control_Task_2+0x4da>
 80032da:	4b2c      	ldr	r3, [pc, #176]	; (800338c <Control_Task_2+0x584>)
 80032dc:	2201      	movs	r2, #1
 80032de:	701a      	strb	r2, [r3, #0]
 80032e0:	e00a      	b.n	80032f8 <Control_Task_2+0x4f0>
			else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)path=RIGHT;
 80032e2:	4b29      	ldr	r3, [pc, #164]	; (8003388 <Control_Task_2+0x580>)
 80032e4:	785b      	ldrb	r3, [r3, #1]
 80032e6:	2b02      	cmp	r3, #2
 80032e8:	d003      	beq.n	80032f2 <Control_Task_2+0x4ea>
 80032ea:	4b27      	ldr	r3, [pc, #156]	; (8003388 <Control_Task_2+0x580>)
 80032ec:	785b      	ldrb	r3, [r3, #1]
 80032ee:	2b05      	cmp	r3, #5
 80032f0:	d102      	bne.n	80032f8 <Control_Task_2+0x4f0>
 80032f2:	4b26      	ldr	r3, [pc, #152]	; (800338c <Control_Task_2+0x584>)
 80032f4:	2202      	movs	r2, #2
 80032f6:	701a      	strb	r2, [r3, #0]
			stage=1;
 80032f8:	4b28      	ldr	r3, [pc, #160]	; (800339c <Control_Task_2+0x594>)
 80032fa:	2201      	movs	r2, #1
 80032fc:	701a      	strb	r2, [r3, #0]
			if(selected_route!=1)
 80032fe:	4b2c      	ldr	r3, [pc, #176]	; (80033b0 <Control_Task_2+0x5a8>)
 8003300:	781b      	ldrb	r3, [r3, #0]
 8003302:	2b01      	cmp	r3, #1
 8003304:	d003      	beq.n	800330e <Control_Task_2+0x506>
			{
				v_control=SPEED_UP;
 8003306:	4b30      	ldr	r3, [pc, #192]	; (80033c8 <Control_Task_2+0x5c0>)
 8003308:	2203      	movs	r2, #3
 800330a:	701a      	strb	r2, [r3, #0]
 800330c:	e002      	b.n	8003314 <Control_Task_2+0x50c>
			}
			else v_control=NORMAL_VEL;
 800330e:	4b2e      	ldr	r3, [pc, #184]	; (80033c8 <Control_Task_2+0x5c0>)
 8003310:	2202      	movs	r2, #2
 8003312:	701a      	strb	r2, [r3, #0]
			//////////////////////////////////////////////////////////////
#ifdef ADIBUGG
			sprintf(str,"d;\n\r");
 8003314:	491e      	ldr	r1, [pc, #120]	; (8003390 <Control_Task_2+0x588>)
 8003316:	481f      	ldr	r0, [pc, #124]	; (8003394 <Control_Task_2+0x58c>)
 8003318:	f00a fc74 	bl	800dc04 <siprintf>
			str[0]=pos[MY];
 800331c:	4b1e      	ldr	r3, [pc, #120]	; (8003398 <Control_Task_2+0x590>)
 800331e:	781a      	ldrb	r2, [r3, #0]
 8003320:	4b1c      	ldr	r3, [pc, #112]	; (8003394 <Control_Task_2+0x58c>)
 8003322:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 4, 3);
 8003324:	2303      	movs	r3, #3
 8003326:	2204      	movs	r2, #4
 8003328:	491a      	ldr	r1, [pc, #104]	; (8003394 <Control_Task_2+0x58c>)
 800332a:	68f8      	ldr	r0, [r7, #12]
 800332c:	f008 ff01 	bl	800c132 <HAL_UART_Transmit>
 8003330:	e104      	b.n	800353c <Control_Task_2+0x734>
#endif
		}
	}

	else if(control_task_2_state==1)
 8003332:	4b26      	ldr	r3, [pc, #152]	; (80033cc <Control_Task_2+0x5c4>)
 8003334:	781b      	ldrb	r3, [r3, #0]
 8003336:	2b01      	cmp	r3, #1
 8003338:	f040 8100 	bne.w	800353c <Control_Task_2+0x734>
	{
		//O-ban várakoz
		if (selected_route==1 && piratePos_prev[1]=='O')
 800333c:	4b1c      	ldr	r3, [pc, #112]	; (80033b0 <Control_Task_2+0x5a8>)
 800333e:	781b      	ldrb	r3, [r3, #0]
 8003340:	2b01      	cmp	r3, #1
 8003342:	d10b      	bne.n	800335c <Control_Task_2+0x554>
 8003344:	4b17      	ldr	r3, [pc, #92]	; (80033a4 <Control_Task_2+0x59c>)
 8003346:	785b      	ldrb	r3, [r3, #1]
 8003348:	2b4f      	cmp	r3, #79	; 0x4f
 800334a:	d107      	bne.n	800335c <Control_Task_2+0x554>
		{
			control_task_2_state=2;//pos[MY]=piratePos[2];//amíg a kalózrobot azt célba nem veszi
 800334c:	4b1f      	ldr	r3, [pc, #124]	; (80033cc <Control_Task_2+0x5c4>)
 800334e:	2202      	movs	r2, #2
 8003350:	701a      	strb	r2, [r3, #0]
			pos[MY]=piratePos_prev[2];
 8003352:	4b14      	ldr	r3, [pc, #80]	; (80033a4 <Control_Task_2+0x59c>)
 8003354:	789a      	ldrb	r2, [r3, #2]
 8003356:	4b10      	ldr	r3, [pc, #64]	; (8003398 <Control_Task_2+0x590>)
 8003358:	701a      	strb	r2, [r3, #0]
 800335a:	e08d      	b.n	8003478 <Control_Task_2+0x670>
		}
		else if (selected_route==2) //L-ben várakozunk
 800335c:	4b14      	ldr	r3, [pc, #80]	; (80033b0 <Control_Task_2+0x5a8>)
 800335e:	781b      	ldrb	r3, [r3, #0]
 8003360:	2b02      	cmp	r3, #2
 8003362:	d144      	bne.n	80033ee <Control_Task_2+0x5e6>
		{
			if(piratePos_prev[1]=='K' && piratePos_prev[2] != 'L')
 8003364:	4b0f      	ldr	r3, [pc, #60]	; (80033a4 <Control_Task_2+0x59c>)
 8003366:	785b      	ldrb	r3, [r3, #1]
 8003368:	2b4b      	cmp	r3, #75	; 0x4b
 800336a:	d131      	bne.n	80033d0 <Control_Task_2+0x5c8>
 800336c:	4b0d      	ldr	r3, [pc, #52]	; (80033a4 <Control_Task_2+0x59c>)
 800336e:	789b      	ldrb	r3, [r3, #2]
 8003370:	2b4c      	cmp	r3, #76	; 0x4c
 8003372:	d02d      	beq.n	80033d0 <Control_Task_2+0x5c8>
			{
				pos[MY]=piratePos_prev[2];//menjünk oda ahova ő akar, ez akkor jo ha nem felénk jön, felülbíráljuk a pos[my]='I'-t
 8003374:	4b0b      	ldr	r3, [pc, #44]	; (80033a4 <Control_Task_2+0x59c>)
 8003376:	789a      	ldrb	r2, [r3, #2]
 8003378:	4b07      	ldr	r3, [pc, #28]	; (8003398 <Control_Task_2+0x590>)
 800337a:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 800337c:	4b13      	ldr	r3, [pc, #76]	; (80033cc <Control_Task_2+0x5c4>)
 800337e:	2202      	movs	r2, #2
 8003380:	701a      	strb	r2, [r3, #0]
 8003382:	e079      	b.n	8003478 <Control_Task_2+0x670>
 8003384:	20000746 	.word	0x20000746
 8003388:	20000748 	.word	0x20000748
 800338c:	20000346 	.word	0x20000346
 8003390:	08011668 	.word	0x08011668
 8003394:	20000720 	.word	0x20000720
 8003398:	20000358 	.word	0x20000358
 800339c:	2000074a 	.word	0x2000074a
 80033a0:	40020400 	.word	0x40020400
 80033a4:	2000071c 	.word	0x2000071c
 80033a8:	20000740 	.word	0x20000740
 80033ac:	20000010 	.word	0x20000010
 80033b0:	2000074b 	.word	0x2000074b
 80033b4:	20000018 	.word	0x20000018
 80033b8:	20000020 	.word	0x20000020
 80033bc:	20000028 	.word	0x20000028
 80033c0:	2000073e 	.word	0x2000073e
 80033c4:	20000360 	.word	0x20000360
 80033c8:	20000349 	.word	0x20000349
 80033cc:	20000710 	.word	0x20000710
			}
			else if(piratePos_prev[1]=='L') //waiting
 80033d0:	4b86      	ldr	r3, [pc, #536]	; (80035ec <Control_Task_2+0x7e4>)
 80033d2:	785b      	ldrb	r3, [r3, #1]
 80033d4:	2b4c      	cmp	r3, #76	; 0x4c
 80033d6:	d14f      	bne.n	8003478 <Control_Task_2+0x670>
			{
				pos[MY]=piratePos_prev[2];
 80033d8:	4b84      	ldr	r3, [pc, #528]	; (80035ec <Control_Task_2+0x7e4>)
 80033da:	789a      	ldrb	r2, [r3, #2]
 80033dc:	4b84      	ldr	r3, [pc, #528]	; (80035f0 <Control_Task_2+0x7e8>)
 80033de:	701a      	strb	r2, [r3, #0]
				orientation=REVERSE;
 80033e0:	4b84      	ldr	r3, [pc, #528]	; (80035f4 <Control_Task_2+0x7ec>)
 80033e2:	2201      	movs	r2, #1
 80033e4:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 80033e6:	4b84      	ldr	r3, [pc, #528]	; (80035f8 <Control_Task_2+0x7f0>)
 80033e8:	2202      	movs	r2, #2
 80033ea:	701a      	strb	r2, [r3, #0]
 80033ec:	e044      	b.n	8003478 <Control_Task_2+0x670>
				sprintf(str,"Wait!\n\r");
				HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);
#endif
			}
		}
		else if(selected_route==3)//I-ben várakozunk
 80033ee:	4b83      	ldr	r3, [pc, #524]	; (80035fc <Control_Task_2+0x7f4>)
 80033f0:	781b      	ldrb	r3, [r3, #0]
 80033f2:	2b03      	cmp	r3, #3
 80033f4:	d11e      	bne.n	8003434 <Control_Task_2+0x62c>
		{
			if(piratePos_prev[1]=='F' && piratePos_prev[2] != 'I')
 80033f6:	4b7d      	ldr	r3, [pc, #500]	; (80035ec <Control_Task_2+0x7e4>)
 80033f8:	785b      	ldrb	r3, [r3, #1]
 80033fa:	2b46      	cmp	r3, #70	; 0x46
 80033fc:	d10b      	bne.n	8003416 <Control_Task_2+0x60e>
 80033fe:	4b7b      	ldr	r3, [pc, #492]	; (80035ec <Control_Task_2+0x7e4>)
 8003400:	789b      	ldrb	r3, [r3, #2]
 8003402:	2b49      	cmp	r3, #73	; 0x49
 8003404:	d007      	beq.n	8003416 <Control_Task_2+0x60e>
			{
				pos[MY]=piratePos_prev[2];//menjünk oda ahova ő akar, ez akkor jo ha nem felénk jön, felülbíráljuk a pos[my]='D'-t
 8003406:	4b79      	ldr	r3, [pc, #484]	; (80035ec <Control_Task_2+0x7e4>)
 8003408:	789a      	ldrb	r2, [r3, #2]
 800340a:	4b79      	ldr	r3, [pc, #484]	; (80035f0 <Control_Task_2+0x7e8>)
 800340c:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 800340e:	4b7a      	ldr	r3, [pc, #488]	; (80035f8 <Control_Task_2+0x7f0>)
 8003410:	2202      	movs	r2, #2
 8003412:	701a      	strb	r2, [r3, #0]
 8003414:	e030      	b.n	8003478 <Control_Task_2+0x670>
			}
			else if(piratePos_prev[1]=='I')
 8003416:	4b75      	ldr	r3, [pc, #468]	; (80035ec <Control_Task_2+0x7e4>)
 8003418:	785b      	ldrb	r3, [r3, #1]
 800341a:	2b49      	cmp	r3, #73	; 0x49
 800341c:	d12c      	bne.n	8003478 <Control_Task_2+0x670>
			{
				//waiting
				pos[MY]=piratePos_prev[2];
 800341e:	4b73      	ldr	r3, [pc, #460]	; (80035ec <Control_Task_2+0x7e4>)
 8003420:	789a      	ldrb	r2, [r3, #2]
 8003422:	4b73      	ldr	r3, [pc, #460]	; (80035f0 <Control_Task_2+0x7e8>)
 8003424:	701a      	strb	r2, [r3, #0]
				orientation=REVERSE;
 8003426:	4b73      	ldr	r3, [pc, #460]	; (80035f4 <Control_Task_2+0x7ec>)
 8003428:	2201      	movs	r2, #1
 800342a:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 800342c:	4b72      	ldr	r3, [pc, #456]	; (80035f8 <Control_Task_2+0x7f0>)
 800342e:	2202      	movs	r2, #2
 8003430:	701a      	strb	r2, [r3, #0]
 8003432:	e021      	b.n	8003478 <Control_Task_2+0x670>
				HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);
#endif
			}
		}

		else if (selected_route==4){//I-ben várakozunk
 8003434:	4b71      	ldr	r3, [pc, #452]	; (80035fc <Control_Task_2+0x7f4>)
 8003436:	781b      	ldrb	r3, [r3, #0]
 8003438:	2b04      	cmp	r3, #4
 800343a:	d11d      	bne.n	8003478 <Control_Task_2+0x670>

			if(piratePos_prev[1]=='N' && piratePos_prev[2]!='L')
 800343c:	4b6b      	ldr	r3, [pc, #428]	; (80035ec <Control_Task_2+0x7e4>)
 800343e:	785b      	ldrb	r3, [r3, #1]
 8003440:	2b4e      	cmp	r3, #78	; 0x4e
 8003442:	d10b      	bne.n	800345c <Control_Task_2+0x654>
 8003444:	4b69      	ldr	r3, [pc, #420]	; (80035ec <Control_Task_2+0x7e4>)
 8003446:	789b      	ldrb	r3, [r3, #2]
 8003448:	2b4c      	cmp	r3, #76	; 0x4c
 800344a:	d007      	beq.n	800345c <Control_Task_2+0x654>
			{
				pos[MY]=piratePos_prev[2];//menjünk oda ahova ő akar, ez akkor jo ha nem felénk jön, felülbíráljuk a pos[my]='I'-t
 800344c:	4b67      	ldr	r3, [pc, #412]	; (80035ec <Control_Task_2+0x7e4>)
 800344e:	789a      	ldrb	r2, [r3, #2]
 8003450:	4b67      	ldr	r3, [pc, #412]	; (80035f0 <Control_Task_2+0x7e8>)
 8003452:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 8003454:	4b68      	ldr	r3, [pc, #416]	; (80035f8 <Control_Task_2+0x7f0>)
 8003456:	2202      	movs	r2, #2
 8003458:	701a      	strb	r2, [r3, #0]
 800345a:	e00d      	b.n	8003478 <Control_Task_2+0x670>
			}
			else if(piratePos_prev[1]=='L')//waiting
 800345c:	4b63      	ldr	r3, [pc, #396]	; (80035ec <Control_Task_2+0x7e4>)
 800345e:	785b      	ldrb	r3, [r3, #1]
 8003460:	2b4c      	cmp	r3, #76	; 0x4c
 8003462:	d109      	bne.n	8003478 <Control_Task_2+0x670>
			{
				pos[MY]=piratePos_prev[2];
 8003464:	4b61      	ldr	r3, [pc, #388]	; (80035ec <Control_Task_2+0x7e4>)
 8003466:	789a      	ldrb	r2, [r3, #2]
 8003468:	4b61      	ldr	r3, [pc, #388]	; (80035f0 <Control_Task_2+0x7e8>)
 800346a:	701a      	strb	r2, [r3, #0]
				orientation=REVERSE;
 800346c:	4b61      	ldr	r3, [pc, #388]	; (80035f4 <Control_Task_2+0x7ec>)
 800346e:	2201      	movs	r2, #1
 8003470:	701a      	strb	r2, [r3, #0]
				control_task_2_state=2;
 8003472:	4b61      	ldr	r3, [pc, #388]	; (80035f8 <Control_Task_2+0x7f0>)
 8003474:	2202      	movs	r2, #2
 8003476:	701a      	strb	r2, [r3, #0]
				sprintf(str,"Wait!\n\r");
				HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);
#endif
			}
		}
		if (control_task_2_state==2)
 8003478:	4b5f      	ldr	r3, [pc, #380]	; (80035f8 <Control_Task_2+0x7f0>)
 800347a:	781b      	ldrb	r3, [r3, #0]
 800347c:	2b02      	cmp	r3, #2
 800347e:	d15d      	bne.n	800353c <Control_Task_2+0x734>
		{
			for(i=0;i<6;i++)
 8003480:	4b5f      	ldr	r3, [pc, #380]	; (8003600 <Control_Task_2+0x7f8>)
 8003482:	2200      	movs	r2, #0
 8003484:	701a      	strb	r2, [r3, #0]
 8003486:	e021      	b.n	80034cc <Control_Task_2+0x6c4>
			{
				if (N(route[route_index-1]).neighbours[i]==piratePos_prev[2])//O-hanyadik szomszedja L?
 8003488:	4b5e      	ldr	r3, [pc, #376]	; (8003604 <Control_Task_2+0x7fc>)
 800348a:	781b      	ldrb	r3, [r3, #0]
 800348c:	3b01      	subs	r3, #1
 800348e:	4a5e      	ldr	r2, [pc, #376]	; (8003608 <Control_Task_2+0x800>)
 8003490:	5cd3      	ldrb	r3, [r2, r3]
 8003492:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003496:	4b5a      	ldr	r3, [pc, #360]	; (8003600 <Control_Task_2+0x7f8>)
 8003498:	781b      	ldrb	r3, [r3, #0]
 800349a:	4618      	mov	r0, r3
 800349c:	495b      	ldr	r1, [pc, #364]	; (800360c <Control_Task_2+0x804>)
 800349e:	4613      	mov	r3, r2
 80034a0:	009b      	lsls	r3, r3, #2
 80034a2:	4413      	add	r3, r2
 80034a4:	00db      	lsls	r3, r3, #3
 80034a6:	440b      	add	r3, r1
 80034a8:	4403      	add	r3, r0
 80034aa:	330c      	adds	r3, #12
 80034ac:	781a      	ldrb	r2, [r3, #0]
 80034ae:	4b4f      	ldr	r3, [pc, #316]	; (80035ec <Control_Task_2+0x7e4>)
 80034b0:	789b      	ldrb	r3, [r3, #2]
 80034b2:	429a      	cmp	r2, r3
 80034b4:	d104      	bne.n	80034c0 <Control_Task_2+0x6b8>
				{
					bestNb[NEXT]=i;
 80034b6:	4b52      	ldr	r3, [pc, #328]	; (8003600 <Control_Task_2+0x7f8>)
 80034b8:	781a      	ldrb	r2, [r3, #0]
 80034ba:	4b55      	ldr	r3, [pc, #340]	; (8003610 <Control_Task_2+0x808>)
 80034bc:	705a      	strb	r2, [r3, #1]
					break;
 80034be:	e009      	b.n	80034d4 <Control_Task_2+0x6cc>
			for(i=0;i<6;i++)
 80034c0:	4b4f      	ldr	r3, [pc, #316]	; (8003600 <Control_Task_2+0x7f8>)
 80034c2:	781b      	ldrb	r3, [r3, #0]
 80034c4:	3301      	adds	r3, #1
 80034c6:	b2da      	uxtb	r2, r3
 80034c8:	4b4d      	ldr	r3, [pc, #308]	; (8003600 <Control_Task_2+0x7f8>)
 80034ca:	701a      	strb	r2, [r3, #0]
 80034cc:	4b4c      	ldr	r3, [pc, #304]	; (8003600 <Control_Task_2+0x7f8>)
 80034ce:	781b      	ldrb	r3, [r3, #0]
 80034d0:	2b05      	cmp	r3, #5
 80034d2:	d9d9      	bls.n	8003488 <Control_Task_2+0x680>
				}
			}
			if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)path=LEFT;
 80034d4:	4b4e      	ldr	r3, [pc, #312]	; (8003610 <Control_Task_2+0x808>)
 80034d6:	785b      	ldrb	r3, [r3, #1]
 80034d8:	2b00      	cmp	r3, #0
 80034da:	d003      	beq.n	80034e4 <Control_Task_2+0x6dc>
 80034dc:	4b4c      	ldr	r3, [pc, #304]	; (8003610 <Control_Task_2+0x808>)
 80034de:	785b      	ldrb	r3, [r3, #1]
 80034e0:	2b03      	cmp	r3, #3
 80034e2:	d103      	bne.n	80034ec <Control_Task_2+0x6e4>
 80034e4:	4b4b      	ldr	r3, [pc, #300]	; (8003614 <Control_Task_2+0x80c>)
 80034e6:	2200      	movs	r2, #0
 80034e8:	701a      	strb	r2, [r3, #0]
 80034ea:	e016      	b.n	800351a <Control_Task_2+0x712>
			else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)path=MIDDLE;
 80034ec:	4b48      	ldr	r3, [pc, #288]	; (8003610 <Control_Task_2+0x808>)
 80034ee:	785b      	ldrb	r3, [r3, #1]
 80034f0:	2b01      	cmp	r3, #1
 80034f2:	d003      	beq.n	80034fc <Control_Task_2+0x6f4>
 80034f4:	4b46      	ldr	r3, [pc, #280]	; (8003610 <Control_Task_2+0x808>)
 80034f6:	785b      	ldrb	r3, [r3, #1]
 80034f8:	2b04      	cmp	r3, #4
 80034fa:	d103      	bne.n	8003504 <Control_Task_2+0x6fc>
 80034fc:	4b45      	ldr	r3, [pc, #276]	; (8003614 <Control_Task_2+0x80c>)
 80034fe:	2201      	movs	r2, #1
 8003500:	701a      	strb	r2, [r3, #0]
 8003502:	e00a      	b.n	800351a <Control_Task_2+0x712>
			else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)path=RIGHT;
 8003504:	4b42      	ldr	r3, [pc, #264]	; (8003610 <Control_Task_2+0x808>)
 8003506:	785b      	ldrb	r3, [r3, #1]
 8003508:	2b02      	cmp	r3, #2
 800350a:	d003      	beq.n	8003514 <Control_Task_2+0x70c>
 800350c:	4b40      	ldr	r3, [pc, #256]	; (8003610 <Control_Task_2+0x808>)
 800350e:	785b      	ldrb	r3, [r3, #1]
 8003510:	2b05      	cmp	r3, #5
 8003512:	d102      	bne.n	800351a <Control_Task_2+0x712>
 8003514:	4b3f      	ldr	r3, [pc, #252]	; (8003614 <Control_Task_2+0x80c>)
 8003516:	2202      	movs	r2, #2
 8003518:	701a      	strb	r2, [r3, #0]
			v_control=NORMAL_VEL;
 800351a:	4b3f      	ldr	r3, [pc, #252]	; (8003618 <Control_Task_2+0x810>)
 800351c:	2202      	movs	r2, #2
 800351e:	701a      	strb	r2, [r3, #0]
			sprintf(str,"d\n\r");
			str[0]=pos[MY];//honnan
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 3, 3);
#endif
#ifdef ADIBUGG
			sprintf(str,"d;\n\r");
 8003520:	493e      	ldr	r1, [pc, #248]	; (800361c <Control_Task_2+0x814>)
 8003522:	483f      	ldr	r0, [pc, #252]	; (8003620 <Control_Task_2+0x818>)
 8003524:	f00a fb6e 	bl	800dc04 <siprintf>
			str[0]=pos[MY];//honnan
 8003528:	4b31      	ldr	r3, [pc, #196]	; (80035f0 <Control_Task_2+0x7e8>)
 800352a:	781a      	ldrb	r2, [r3, #0]
 800352c:	4b3c      	ldr	r3, [pc, #240]	; (8003620 <Control_Task_2+0x818>)
 800352e:	701a      	strb	r2, [r3, #0]

			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 4, 3);
 8003530:	2303      	movs	r3, #3
 8003532:	2204      	movs	r2, #4
 8003534:	493a      	ldr	r1, [pc, #232]	; (8003620 <Control_Task_2+0x818>)
 8003536:	68f8      	ldr	r0, [r7, #12]
 8003538:	f008 fdfb 	bl	800c132 <HAL_UART_Transmit>
#endif
		}
	}

	if (control_task_2_state==2)//elotte mozgas
 800353c:	4b2e      	ldr	r3, [pc, #184]	; (80035f8 <Control_Task_2+0x7f0>)
 800353e:	781b      	ldrb	r3, [r3, #0]
 8003540:	2b02      	cmp	r3, #2
 8003542:	f040 813c 	bne.w	80037be <Control_Task_2+0x9b6>
	{
		static uint8_t stopAfterNode=0;

		if(nodeDetected || stopAfterNode)
 8003546:	4b37      	ldr	r3, [pc, #220]	; (8003624 <Control_Task_2+0x81c>)
 8003548:	781b      	ldrb	r3, [r3, #0]
 800354a:	2b00      	cmp	r3, #0
 800354c:	d104      	bne.n	8003558 <Control_Task_2+0x750>
 800354e:	4b36      	ldr	r3, [pc, #216]	; (8003628 <Control_Task_2+0x820>)
 8003550:	781b      	ldrb	r3, [r3, #0]
 8003552:	2b00      	cmp	r3, #0
 8003554:	f000 8133 	beq.w	80037be <Control_Task_2+0x9b6>
		{

			if(nodeDetected)//ha nem sávváltó üzemmódban vagyunk pontotszámolunk és felszedett kapukat nullázzuk
 8003558:	4b32      	ldr	r3, [pc, #200]	; (8003624 <Control_Task_2+0x81c>)
 800355a:	781b      	ldrb	r3, [r3, #0]
 800355c:	2b00      	cmp	r3, #0
 800355e:	d035      	beq.n	80035cc <Control_Task_2+0x7c4>
			{



				LED_B_TOGGLE;
 8003560:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8003564:	4831      	ldr	r0, [pc, #196]	; (800362c <Control_Task_2+0x824>)
 8003566:	f006 f8aa 	bl	80096be <HAL_GPIO_TogglePin>
				collectedPoints +=N(pos[MY]).worth;//sávváltás módik vizsgáljuk az össezgyűjtött kapuk számát
 800356a:	4b21      	ldr	r3, [pc, #132]	; (80035f0 <Control_Task_2+0x7e8>)
 800356c:	781b      	ldrb	r3, [r3, #0]
 800356e:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003572:	4926      	ldr	r1, [pc, #152]	; (800360c <Control_Task_2+0x804>)
 8003574:	4613      	mov	r3, r2
 8003576:	009b      	lsls	r3, r3, #2
 8003578:	4413      	add	r3, r2
 800357a:	00db      	lsls	r3, r3, #3
 800357c:	440b      	add	r3, r1
 800357e:	3304      	adds	r3, #4
 8003580:	681b      	ldr	r3, [r3, #0]
 8003582:	b2da      	uxtb	r2, r3
 8003584:	4b2a      	ldr	r3, [pc, #168]	; (8003630 <Control_Task_2+0x828>)
 8003586:	781b      	ldrb	r3, [r3, #0]
 8003588:	4413      	add	r3, r2
 800358a:	b2da      	uxtb	r2, r3
 800358c:	4b28      	ldr	r3, [pc, #160]	; (8003630 <Control_Task_2+0x828>)
 800358e:	701a      	strb	r2, [r3, #0]
				N(pos[MY]).worth=0;//ez a kapu már nem ér pontot
 8003590:	4b17      	ldr	r3, [pc, #92]	; (80035f0 <Control_Task_2+0x7e8>)
 8003592:	781b      	ldrb	r3, [r3, #0]
 8003594:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003598:	491c      	ldr	r1, [pc, #112]	; (800360c <Control_Task_2+0x804>)
 800359a:	4613      	mov	r3, r2
 800359c:	009b      	lsls	r3, r3, #2
 800359e:	4413      	add	r3, r2
 80035a0:	00db      	lsls	r3, r3, #3
 80035a2:	440b      	add	r3, r1
 80035a4:	3304      	adds	r3, #4
 80035a6:	2200      	movs	r2, #0
 80035a8:	601a      	str	r2, [r3, #0]

				sprintf(str,"%d\n\r",collectedPoints);
 80035aa:	4b21      	ldr	r3, [pc, #132]	; (8003630 <Control_Task_2+0x828>)
 80035ac:	781b      	ldrb	r3, [r3, #0]
 80035ae:	461a      	mov	r2, r3
 80035b0:	4920      	ldr	r1, [pc, #128]	; (8003634 <Control_Task_2+0x82c>)
 80035b2:	481b      	ldr	r0, [pc, #108]	; (8003620 <Control_Task_2+0x818>)
 80035b4:	f00a fb26 	bl	800dc04 <siprintf>
				HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 3);
 80035b8:	4819      	ldr	r0, [pc, #100]	; (8003620 <Control_Task_2+0x818>)
 80035ba:	f7fc fe29 	bl	8000210 <strlen>
 80035be:	4603      	mov	r3, r0
 80035c0:	b29a      	uxth	r2, r3
 80035c2:	2303      	movs	r3, #3
 80035c4:	4916      	ldr	r1, [pc, #88]	; (8003620 <Control_Task_2+0x818>)
 80035c6:	68f8      	ldr	r0, [r7, #12]
 80035c8:	f008 fdb3 	bl	800c132 <HAL_UART_Transmit>
			}

			if(piratePos_prev[1]==pos[MY])//ha celja a mi pozink, tudjuk a kovi celt
 80035cc:	4b07      	ldr	r3, [pc, #28]	; (80035ec <Control_Task_2+0x7e4>)
 80035ce:	785a      	ldrb	r2, [r3, #1]
 80035d0:	4b07      	ldr	r3, [pc, #28]	; (80035f0 <Control_Task_2+0x7e8>)
 80035d2:	781b      	ldrb	r3, [r3, #0]
 80035d4:	429a      	cmp	r2, r3
 80035d6:	f040 80e3 	bne.w	80037a0 <Control_Task_2+0x998>
			{
				pos[MY]=piratePos_prev[2];
 80035da:	4b04      	ldr	r3, [pc, #16]	; (80035ec <Control_Task_2+0x7e4>)
 80035dc:	789a      	ldrb	r2, [r3, #2]
 80035de:	4b04      	ldr	r3, [pc, #16]	; (80035f0 <Control_Task_2+0x7e8>)
 80035e0:	701a      	strb	r2, [r3, #0]
				for(i=0; i<6;i++)
 80035e2:	4b07      	ldr	r3, [pc, #28]	; (8003600 <Control_Task_2+0x7f8>)
 80035e4:	2200      	movs	r2, #0
 80035e6:	701a      	strb	r2, [r3, #0]
 80035e8:	e057      	b.n	800369a <Control_Task_2+0x892>
 80035ea:	bf00      	nop
 80035ec:	2000071c 	.word	0x2000071c
 80035f0:	20000358 	.word	0x20000358
 80035f4:	20000344 	.word	0x20000344
 80035f8:	20000710 	.word	0x20000710
 80035fc:	2000074b 	.word	0x2000074b
 8003600:	20000746 	.word	0x20000746
 8003604:	2000073e 	.word	0x2000073e
 8003608:	20000740 	.word	0x20000740
 800360c:	20000360 	.word	0x20000360
 8003610:	20000748 	.word	0x20000748
 8003614:	20000346 	.word	0x20000346
 8003618:	20000349 	.word	0x20000349
 800361c:	08011668 	.word	0x08011668
 8003620:	20000720 	.word	0x20000720
 8003624:	20000345 	.word	0x20000345
 8003628:	2000074c 	.word	0x2000074c
 800362c:	40020400 	.word	0x40020400
 8003630:	20000347 	.word	0x20000347
 8003634:	08011660 	.word	0x08011660
				{
					if (N(piratePos_prev[1]).neighbours[i]==piratePos_prev[2])//O-hanyadik szomszedja L?
 8003638:	4b63      	ldr	r3, [pc, #396]	; (80037c8 <Control_Task_2+0x9c0>)
 800363a:	785b      	ldrb	r3, [r3, #1]
 800363c:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003640:	4b62      	ldr	r3, [pc, #392]	; (80037cc <Control_Task_2+0x9c4>)
 8003642:	781b      	ldrb	r3, [r3, #0]
 8003644:	4618      	mov	r0, r3
 8003646:	4962      	ldr	r1, [pc, #392]	; (80037d0 <Control_Task_2+0x9c8>)
 8003648:	4613      	mov	r3, r2
 800364a:	009b      	lsls	r3, r3, #2
 800364c:	4413      	add	r3, r2
 800364e:	00db      	lsls	r3, r3, #3
 8003650:	440b      	add	r3, r1
 8003652:	4403      	add	r3, r0
 8003654:	330c      	adds	r3, #12
 8003656:	781a      	ldrb	r2, [r3, #0]
 8003658:	4b5b      	ldr	r3, [pc, #364]	; (80037c8 <Control_Task_2+0x9c0>)
 800365a:	789b      	ldrb	r3, [r3, #2]
 800365c:	429a      	cmp	r2, r3
 800365e:	d116      	bne.n	800368e <Control_Task_2+0x886>
					{
						bestNb[NEXT]=i;
 8003660:	4b5a      	ldr	r3, [pc, #360]	; (80037cc <Control_Task_2+0x9c4>)
 8003662:	781a      	ldrb	r2, [r3, #0]
 8003664:	4b5b      	ldr	r3, [pc, #364]	; (80037d4 <Control_Task_2+0x9cc>)
 8003666:	705a      	strb	r2, [r3, #1]
						dir[MY]=N(piratePos_prev[1]).directions[i];
 8003668:	4b57      	ldr	r3, [pc, #348]	; (80037c8 <Control_Task_2+0x9c0>)
 800366a:	785b      	ldrb	r3, [r3, #1]
 800366c:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003670:	4b56      	ldr	r3, [pc, #344]	; (80037cc <Control_Task_2+0x9c4>)
 8003672:	781b      	ldrb	r3, [r3, #0]
 8003674:	4618      	mov	r0, r3
 8003676:	4956      	ldr	r1, [pc, #344]	; (80037d0 <Control_Task_2+0x9c8>)
 8003678:	4613      	mov	r3, r2
 800367a:	009b      	lsls	r3, r3, #2
 800367c:	4413      	add	r3, r2
 800367e:	00db      	lsls	r3, r3, #3
 8003680:	440b      	add	r3, r1
 8003682:	4403      	add	r3, r0
 8003684:	3312      	adds	r3, #18
 8003686:	781a      	ldrb	r2, [r3, #0]
 8003688:	4b53      	ldr	r3, [pc, #332]	; (80037d8 <Control_Task_2+0x9d0>)
 800368a:	701a      	strb	r2, [r3, #0]
						break;
 800368c:	e009      	b.n	80036a2 <Control_Task_2+0x89a>
				for(i=0; i<6;i++)
 800368e:	4b4f      	ldr	r3, [pc, #316]	; (80037cc <Control_Task_2+0x9c4>)
 8003690:	781b      	ldrb	r3, [r3, #0]
 8003692:	3301      	adds	r3, #1
 8003694:	b2da      	uxtb	r2, r3
 8003696:	4b4d      	ldr	r3, [pc, #308]	; (80037cc <Control_Task_2+0x9c4>)
 8003698:	701a      	strb	r2, [r3, #0]
 800369a:	4b4c      	ldr	r3, [pc, #304]	; (80037cc <Control_Task_2+0x9c4>)
 800369c:	781b      	ldrb	r3, [r3, #0]
 800369e:	2b05      	cmp	r3, #5
 80036a0:	d9ca      	bls.n	8003638 <Control_Task_2+0x830>
					}
				}
				if(N(pos[MY]).type>2)//ha a kövi node-on nincs kapu
 80036a2:	4b4e      	ldr	r3, [pc, #312]	; (80037dc <Control_Task_2+0x9d4>)
 80036a4:	781b      	ldrb	r3, [r3, #0]
 80036a6:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80036aa:	4949      	ldr	r1, [pc, #292]	; (80037d0 <Control_Task_2+0x9c8>)
 80036ac:	4613      	mov	r3, r2
 80036ae:	009b      	lsls	r3, r3, #2
 80036b0:	4413      	add	r3, r2
 80036b2:	00db      	lsls	r3, r3, #3
 80036b4:	440b      	add	r3, r1
 80036b6:	3308      	adds	r3, #8
 80036b8:	681b      	ldr	r3, [r3, #0]
 80036ba:	2b02      	cmp	r3, #2
 80036bc:	d91b      	bls.n	80036f6 <Control_Task_2+0x8ee>
				{
					s=0;
 80036be:	4b48      	ldr	r3, [pc, #288]	; (80037e0 <Control_Task_2+0x9d8>)
 80036c0:	f04f 0200 	mov.w	r2, #0
 80036c4:	601a      	str	r2, [r3, #0]
					sMAX=N(piratePos_prev[1]).distance[bestNb[NEXT]]+25;
 80036c6:	4b40      	ldr	r3, [pc, #256]	; (80037c8 <Control_Task_2+0x9c0>)
 80036c8:	785b      	ldrb	r3, [r3, #1]
 80036ca:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80036ce:	4b41      	ldr	r3, [pc, #260]	; (80037d4 <Control_Task_2+0x9cc>)
 80036d0:	785b      	ldrb	r3, [r3, #1]
 80036d2:	4618      	mov	r0, r3
 80036d4:	493e      	ldr	r1, [pc, #248]	; (80037d0 <Control_Task_2+0x9c8>)
 80036d6:	4613      	mov	r3, r2
 80036d8:	009b      	lsls	r3, r3, #2
 80036da:	4413      	add	r3, r2
 80036dc:	009b      	lsls	r3, r3, #2
 80036de:	4403      	add	r3, r0
 80036e0:	330c      	adds	r3, #12
 80036e2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80036e6:	3319      	adds	r3, #25
 80036e8:	ee07 3a90 	vmov	s15, r3
 80036ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80036f0:	4b3c      	ldr	r3, [pc, #240]	; (80037e4 <Control_Task_2+0x9dc>)
 80036f2:	edc3 7a00 	vstr	s15, [r3]
				}
				if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR4)path=LEFT;
 80036f6:	4b37      	ldr	r3, [pc, #220]	; (80037d4 <Control_Task_2+0x9cc>)
 80036f8:	785b      	ldrb	r3, [r3, #1]
 80036fa:	2b00      	cmp	r3, #0
 80036fc:	d003      	beq.n	8003706 <Control_Task_2+0x8fe>
 80036fe:	4b35      	ldr	r3, [pc, #212]	; (80037d4 <Control_Task_2+0x9cc>)
 8003700:	785b      	ldrb	r3, [r3, #1]
 8003702:	2b03      	cmp	r3, #3
 8003704:	d103      	bne.n	800370e <Control_Task_2+0x906>
 8003706:	4b38      	ldr	r3, [pc, #224]	; (80037e8 <Control_Task_2+0x9e0>)
 8003708:	2200      	movs	r2, #0
 800370a:	701a      	strb	r2, [r3, #0]
 800370c:	e016      	b.n	800373c <Control_Task_2+0x934>
				else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR5)path=MIDDLE;
 800370e:	4b31      	ldr	r3, [pc, #196]	; (80037d4 <Control_Task_2+0x9cc>)
 8003710:	785b      	ldrb	r3, [r3, #1]
 8003712:	2b01      	cmp	r3, #1
 8003714:	d003      	beq.n	800371e <Control_Task_2+0x916>
 8003716:	4b2f      	ldr	r3, [pc, #188]	; (80037d4 <Control_Task_2+0x9cc>)
 8003718:	785b      	ldrb	r3, [r3, #1]
 800371a:	2b04      	cmp	r3, #4
 800371c:	d103      	bne.n	8003726 <Control_Task_2+0x91e>
 800371e:	4b32      	ldr	r3, [pc, #200]	; (80037e8 <Control_Task_2+0x9e0>)
 8003720:	2201      	movs	r2, #1
 8003722:	701a      	strb	r2, [r3, #0]
 8003724:	e00a      	b.n	800373c <Control_Task_2+0x934>
				else if(bestNb[NEXT]==NEIGHBOUR3 || bestNb[NEXT]==NEIGHBOUR6)path=RIGHT;
 8003726:	4b2b      	ldr	r3, [pc, #172]	; (80037d4 <Control_Task_2+0x9cc>)
 8003728:	785b      	ldrb	r3, [r3, #1]
 800372a:	2b02      	cmp	r3, #2
 800372c:	d003      	beq.n	8003736 <Control_Task_2+0x92e>
 800372e:	4b29      	ldr	r3, [pc, #164]	; (80037d4 <Control_Task_2+0x9cc>)
 8003730:	785b      	ldrb	r3, [r3, #1]
 8003732:	2b05      	cmp	r3, #5
 8003734:	d102      	bne.n	800373c <Control_Task_2+0x934>
 8003736:	4b2c      	ldr	r3, [pc, #176]	; (80037e8 <Control_Task_2+0x9e0>)
 8003738:	2202      	movs	r2, #2
 800373a:	701a      	strb	r2, [r3, #0]
				v_control=NORMAL_VEL;
 800373c:	4b2b      	ldr	r3, [pc, #172]	; (80037ec <Control_Task_2+0x9e4>)
 800373e:	2202      	movs	r2, #2
 8003740:	701a      	strb	r2, [r3, #0]
				stopAfterNode=0;
 8003742:	4b2b      	ldr	r3, [pc, #172]	; (80037f0 <Control_Task_2+0x9e8>)
 8003744:	2200      	movs	r2, #0
 8003746:	701a      	strb	r2, [r3, #0]
				if(collectedPoints >= 34 && N(pos[MY]).type<3)
 8003748:	4b2a      	ldr	r3, [pc, #168]	; (80037f4 <Control_Task_2+0x9ec>)
 800374a:	781b      	ldrb	r3, [r3, #0]
 800374c:	2b21      	cmp	r3, #33	; 0x21
 800374e:	d918      	bls.n	8003782 <Control_Task_2+0x97a>
 8003750:	4b22      	ldr	r3, [pc, #136]	; (80037dc <Control_Task_2+0x9d4>)
 8003752:	781b      	ldrb	r3, [r3, #0]
 8003754:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8003758:	491d      	ldr	r1, [pc, #116]	; (80037d0 <Control_Task_2+0x9c8>)
 800375a:	4613      	mov	r3, r2
 800375c:	009b      	lsls	r3, r3, #2
 800375e:	4413      	add	r3, r2
 8003760:	00db      	lsls	r3, r3, #3
 8003762:	440b      	add	r3, r1
 8003764:	3308      	adds	r3, #8
 8003766:	681b      	ldr	r3, [r3, #0]
 8003768:	2b02      	cmp	r3, #2
 800376a:	d80a      	bhi.n	8003782 <Control_Task_2+0x97a>
				{
					laneChange=1; //flag állítás
 800376c:	4b22      	ldr	r3, [pc, #136]	; (80037f8 <Control_Task_2+0x9f0>)
 800376e:	2201      	movs	r2, #1
 8003770:	701a      	strb	r2, [r3, #0]
					Lane_Change_Init(); //a sávváltóhely felé nőnek a rewardok
 8003772:	f000 fa0b 	bl	8003b8c <Lane_Change_Init>
					LED_Y(1); //sárga led világít
 8003776:	2200      	movs	r2, #0
 8003778:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800377c:	481f      	ldr	r0, [pc, #124]	; (80037fc <Control_Task_2+0x9f4>)
 800377e:	f005 ff85 	bl	800968c <HAL_GPIO_WritePin>
				}
#ifdef ADIBUGG
			sprintf(str,"d;\n\r");
 8003782:	491f      	ldr	r1, [pc, #124]	; (8003800 <Control_Task_2+0x9f8>)
 8003784:	481f      	ldr	r0, [pc, #124]	; (8003804 <Control_Task_2+0x9fc>)
 8003786:	f00a fa3d 	bl	800dc04 <siprintf>
			str[0]=pos[MY];//honnan
 800378a:	4b14      	ldr	r3, [pc, #80]	; (80037dc <Control_Task_2+0x9d4>)
 800378c:	781a      	ldrb	r2, [r3, #0]
 800378e:	4b1d      	ldr	r3, [pc, #116]	; (8003804 <Control_Task_2+0x9fc>)
 8003790:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 4, 3);
 8003792:	2303      	movs	r3, #3
 8003794:	2204      	movs	r2, #4
 8003796:	491b      	ldr	r1, [pc, #108]	; (8003804 <Control_Task_2+0x9fc>)
 8003798:	68f8      	ldr	r0, [r7, #12]
 800379a:	f008 fcca 	bl	800c132 <HAL_UART_Transmit>
 800379e:	e005      	b.n	80037ac <Control_Task_2+0x9a4>
			HAL_UART_Transmit(huart_debugg, (uint8_t*)str, 3, 3);
#endif
			}
			else
			{
				v_control=STOP;//wait
 80037a0:	4b12      	ldr	r3, [pc, #72]	; (80037ec <Control_Task_2+0x9e4>)
 80037a2:	2200      	movs	r2, #0
 80037a4:	701a      	strb	r2, [r3, #0]
				stopAfterNode=1;
 80037a6:	4b12      	ldr	r3, [pc, #72]	; (80037f0 <Control_Task_2+0x9e8>)
 80037a8:	2201      	movs	r2, #1
 80037aa:	701a      	strb	r2, [r3, #0]
			}
			nodeDetected=0;
 80037ac:	4b16      	ldr	r3, [pc, #88]	; (8003808 <Control_Task_2+0xa00>)
 80037ae:	2200      	movs	r2, #0
 80037b0:	701a      	strb	r2, [r3, #0]
 80037b2:	e004      	b.n	80037be <Control_Task_2+0x9b6>
	if(mode!=SKILL || laneChange)return;
 80037b4:	bf00      	nop
 80037b6:	e002      	b.n	80037be <Control_Task_2+0x9b6>
	else if(control_task_2_tick>tick)return;
 80037b8:	bf00      	nop
 80037ba:	e000      	b.n	80037be <Control_Task_2+0x9b6>
	if(piratePos_prev[0]==0)return; //ha nem kaptunk még adatot a TB-tol return
 80037bc:	bf00      	nop
		}
	}
}
 80037be:	3710      	adds	r7, #16
 80037c0:	46bd      	mov	sp, r7
 80037c2:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 80037c6:	bf00      	nop
 80037c8:	2000071c 	.word	0x2000071c
 80037cc:	20000746 	.word	0x20000746
 80037d0:	20000360 	.word	0x20000360
 80037d4:	20000748 	.word	0x20000748
 80037d8:	2000035c 	.word	0x2000035c
 80037dc:	20000358 	.word	0x20000358
 80037e0:	20000714 	.word	0x20000714
 80037e4:	2000000c 	.word	0x2000000c
 80037e8:	20000346 	.word	0x20000346
 80037ec:	20000349 	.word	0x20000349
 80037f0:	2000074c 	.word	0x2000074c
 80037f4:	20000347 	.word	0x20000347
 80037f8:	20000348 	.word	0x20000348
 80037fc:	40020400 	.word	0x40020400
 8003800:	08011668 	.word	0x08011668
 8003804:	20000720 	.word	0x20000720
 8003808:	20000345 	.word	0x20000345

0800380c <Mode_Selector>:

void Mode_Selector(UART_HandleTypeDef *huart_debugg, UART_HandleTypeDef *huart_stm)
{
 800380c:	b580      	push	{r7, lr}
 800380e:	b08e      	sub	sp, #56	; 0x38
 8003810:	af00      	add	r7, sp, #0
 8003812:	6078      	str	r0, [r7, #4]
 8003814:	6039      	str	r1, [r7, #0]
	//Milyen módban kell működni?
	uint8_t buffer[40];
	uint8_t tmp=*(__IO uint8_t *) FLASH_ADDRESS_MODESELECTOR; //FLASH-ből kiolvassuk, hogy milyen módban vagyunk
 8003816:	4b5f      	ldr	r3, [pc, #380]	; (8003994 <Mode_Selector+0x188>)
 8003818:	781b      	ldrb	r3, [r3, #0]
 800381a:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37

	if(tmp==SKILL || tmp==FAST) mode = tmp;
 800381e:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8003822:	2b52      	cmp	r3, #82	; 0x52
 8003824:	d003      	beq.n	800382e <Mode_Selector+0x22>
 8003826:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 800382a:	2b3f      	cmp	r3, #63	; 0x3f
 800382c:	d104      	bne.n	8003838 <Mode_Selector+0x2c>
 800382e:	4a5a      	ldr	r2, [pc, #360]	; (8003998 <Mode_Selector+0x18c>)
 8003830:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8003834:	7013      	strb	r3, [r2, #0]
 8003836:	e022      	b.n	800387e <Mode_Selector+0x72>
	else
	{
		HAL_FLASH_Unlock();
 8003838:	f005 fbc2 	bl	8008fc0 <HAL_FLASH_Unlock>
		HAL_Delay(50);
 800383c:	2032      	movs	r0, #50	; 0x32
 800383e:	f004 f88b 	bl	8007958 <HAL_Delay>
		FLASH_Erase_Sector(7, FLASH_VOLTAGE_RANGE_3);
 8003842:	2102      	movs	r1, #2
 8003844:	2007      	movs	r0, #7
 8003846:	f005 fd2d 	bl	80092a4 <FLASH_Erase_Sector>
		HAL_Delay(50);
 800384a:	2032      	movs	r0, #50	; 0x32
 800384c:	f004 f884 	bl	8007958 <HAL_Delay>
		HAL_FLASH_Lock();
 8003850:	f005 fbd8 	bl	8009004 <HAL_FLASH_Lock>
		HAL_FLASH_Unlock();
 8003854:	f005 fbb4 	bl	8008fc0 <HAL_FLASH_Unlock>
		HAL_Delay(50);
 8003858:	2032      	movs	r0, #50	; 0x32
 800385a:	f004 f87d 	bl	8007958 <HAL_Delay>
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_MODESELECTOR, SKILL); //ha eddig skill mód volt akor msot gyors lesz
 800385e:	f04f 0252 	mov.w	r2, #82	; 0x52
 8003862:	f04f 0300 	mov.w	r3, #0
 8003866:	494b      	ldr	r1, [pc, #300]	; (8003994 <Mode_Selector+0x188>)
 8003868:	2000      	movs	r0, #0
 800386a:	f005 fb55 	bl	8008f18 <HAL_FLASH_Program>
		HAL_Delay(50);
 800386e:	2032      	movs	r0, #50	; 0x32
 8003870:	f004 f872 	bl	8007958 <HAL_Delay>
		HAL_FLASH_Lock();
 8003874:	f005 fbc6 	bl	8009004 <HAL_FLASH_Lock>

		mode=SKILL;
 8003878:	4b47      	ldr	r3, [pc, #284]	; (8003998 <Mode_Selector+0x18c>)
 800387a:	2252      	movs	r2, #82	; 0x52
 800387c:	701a      	strb	r2, [r3, #0]
	}

	if(mode==SKILL)
 800387e:	4b46      	ldr	r3, [pc, #280]	; (8003998 <Mode_Selector+0x18c>)
 8003880:	781b      	ldrb	r3, [r3, #0]
 8003882:	2b52      	cmp	r3, #82	; 0x52
 8003884:	d135      	bne.n	80038f2 <Mode_Selector+0xe6>
	{
		buffer[0] = CMD_MODE_SKILL; //szólunk a g0-nak, hogy ügyességi módban vagyunk
 8003886:	2352      	movs	r3, #82	; 0x52
 8003888:	733b      	strb	r3, [r7, #12]
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 800388a:	f107 010c 	add.w	r1, r7, #12
 800388e:	230a      	movs	r3, #10
 8003890:	2201      	movs	r2, #1
 8003892:	6838      	ldr	r0, [r7, #0]
 8003894:	f008 fc4d 	bl	800c132 <HAL_UART_Transmit>
		HAL_Delay(10);
 8003898:	200a      	movs	r0, #10
 800389a:	f004 f85d 	bl	8007958 <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);//3 szór is szólunk neki, hogy tuti megkapja a módváltásról az üzenetet
 800389e:	f107 010c 	add.w	r1, r7, #12
 80038a2:	230a      	movs	r3, #10
 80038a4:	2201      	movs	r2, #1
 80038a6:	6838      	ldr	r0, [r7, #0]
 80038a8:	f008 fc43 	bl	800c132 <HAL_UART_Transmit>
		HAL_Delay(10);
 80038ac:	200a      	movs	r0, #10
 80038ae:	f004 f853 	bl	8007958 <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 80038b2:	f107 010c 	add.w	r1, r7, #12
 80038b6:	230a      	movs	r3, #10
 80038b8:	2201      	movs	r2, #1
 80038ba:	6838      	ldr	r0, [r7, #0]
 80038bc:	f008 fc39 	bl	800c132 <HAL_UART_Transmit>

		sprintf((char*)buffer,"Skill mode!\n\r"); //Debugg uart-ra is kiküldjük, hogy milyen módban vagyunk
 80038c0:	f107 030c 	add.w	r3, r7, #12
 80038c4:	4935      	ldr	r1, [pc, #212]	; (800399c <Mode_Selector+0x190>)
 80038c6:	4618      	mov	r0, r3
 80038c8:	f00a f99c 	bl	800dc04 <siprintf>
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
 80038cc:	f107 030c 	add.w	r3, r7, #12
 80038d0:	4618      	mov	r0, r3
 80038d2:	f7fc fc9d 	bl	8000210 <strlen>
 80038d6:	4603      	mov	r3, r0
 80038d8:	b29a      	uxth	r2, r3
 80038da:	f107 010c 	add.w	r1, r7, #12
 80038de:	2364      	movs	r3, #100	; 0x64
 80038e0:	6878      	ldr	r0, [r7, #4]
 80038e2:	f008 fc26 	bl	800c132 <HAL_UART_Transmit>
		LED_NUCLEO(1); //A NUCLEO zöld LED-je világít, ha ügyeségi üzemmódban vagyunk
 80038e6:	2201      	movs	r2, #1
 80038e8:	2120      	movs	r1, #32
 80038ea:	482d      	ldr	r0, [pc, #180]	; (80039a0 <Mode_Selector+0x194>)
 80038ec:	f005 fece 	bl	800968c <HAL_GPIO_WritePin>
	else
	{
		sprintf((char*)buffer,"Flash error! Press blue button!\n\r");
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
	}
}
 80038f0:	e04c      	b.n	800398c <Mode_Selector+0x180>
	else if(mode==FAST)
 80038f2:	4b29      	ldr	r3, [pc, #164]	; (8003998 <Mode_Selector+0x18c>)
 80038f4:	781b      	ldrb	r3, [r3, #0]
 80038f6:	2b3f      	cmp	r3, #63	; 0x3f
 80038f8:	d135      	bne.n	8003966 <Mode_Selector+0x15a>
		buffer[0] = CMD_MODE_FAST;
 80038fa:	233f      	movs	r3, #63	; 0x3f
 80038fc:	733b      	strb	r3, [r7, #12]
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 80038fe:	f107 010c 	add.w	r1, r7, #12
 8003902:	230a      	movs	r3, #10
 8003904:	2201      	movs	r2, #1
 8003906:	6838      	ldr	r0, [r7, #0]
 8003908:	f008 fc13 	bl	800c132 <HAL_UART_Transmit>
		HAL_Delay(10);
 800390c:	200a      	movs	r0, #10
 800390e:	f004 f823 	bl	8007958 <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 8003912:	f107 010c 	add.w	r1, r7, #12
 8003916:	230a      	movs	r3, #10
 8003918:	2201      	movs	r2, #1
 800391a:	6838      	ldr	r0, [r7, #0]
 800391c:	f008 fc09 	bl	800c132 <HAL_UART_Transmit>
		HAL_Delay(10);
 8003920:	200a      	movs	r0, #10
 8003922:	f004 f819 	bl	8007958 <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 8003926:	f107 010c 	add.w	r1, r7, #12
 800392a:	230a      	movs	r3, #10
 800392c:	2201      	movs	r2, #1
 800392e:	6838      	ldr	r0, [r7, #0]
 8003930:	f008 fbff 	bl	800c132 <HAL_UART_Transmit>
		sprintf((char*)buffer,"Fast mode!\n\r");
 8003934:	f107 030c 	add.w	r3, r7, #12
 8003938:	491a      	ldr	r1, [pc, #104]	; (80039a4 <Mode_Selector+0x198>)
 800393a:	4618      	mov	r0, r3
 800393c:	f00a f962 	bl	800dc04 <siprintf>
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
 8003940:	f107 030c 	add.w	r3, r7, #12
 8003944:	4618      	mov	r0, r3
 8003946:	f7fc fc63 	bl	8000210 <strlen>
 800394a:	4603      	mov	r3, r0
 800394c:	b29a      	uxth	r2, r3
 800394e:	f107 010c 	add.w	r1, r7, #12
 8003952:	2364      	movs	r3, #100	; 0x64
 8003954:	6878      	ldr	r0, [r7, #4]
 8003956:	f008 fbec 	bl	800c132 <HAL_UART_Transmit>
		LED_NUCLEO(0);
 800395a:	2200      	movs	r2, #0
 800395c:	2120      	movs	r1, #32
 800395e:	4810      	ldr	r0, [pc, #64]	; (80039a0 <Mode_Selector+0x194>)
 8003960:	f005 fe94 	bl	800968c <HAL_GPIO_WritePin>
}
 8003964:	e012      	b.n	800398c <Mode_Selector+0x180>
		sprintf((char*)buffer,"Flash error! Press blue button!\n\r");
 8003966:	f107 030c 	add.w	r3, r7, #12
 800396a:	490f      	ldr	r1, [pc, #60]	; (80039a8 <Mode_Selector+0x19c>)
 800396c:	4618      	mov	r0, r3
 800396e:	f00a f949 	bl	800dc04 <siprintf>
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
 8003972:	f107 030c 	add.w	r3, r7, #12
 8003976:	4618      	mov	r0, r3
 8003978:	f7fc fc4a 	bl	8000210 <strlen>
 800397c:	4603      	mov	r3, r0
 800397e:	b29a      	uxth	r2, r3
 8003980:	f107 010c 	add.w	r1, r7, #12
 8003984:	2364      	movs	r3, #100	; 0x64
 8003986:	6878      	ldr	r0, [r7, #4]
 8003988:	f008 fbd3 	bl	800c132 <HAL_UART_Transmit>
}
 800398c:	bf00      	nop
 800398e:	3738      	adds	r7, #56	; 0x38
 8003990:	46bd      	mov	sp, r7
 8003992:	bd80      	pop	{r7, pc}
 8003994:	08060000 	.word	0x08060000
 8003998:	20000336 	.word	0x20000336
 800399c:	08011670 	.word	0x08011670
 80039a0:	40020000 	.word	0x40020000
 80039a4:	08011680 	.word	0x08011680
 80039a8:	08011690 	.word	0x08011690

080039ac <Wait_For_Start_Sigal>:
	HAL_UART_Transmit(huart_monitoring, data, 11, 4);
}


void Wait_For_Start_Sigal(UART_HandleTypeDef *huart_TB, UART_HandleTypeDef *huart_debugg)
{
 80039ac:	b580      	push	{r7, lr}
 80039ae:	b084      	sub	sp, #16
 80039b0:	af00      	add	r7, sp, #0
 80039b2:	6078      	str	r0, [r7, #4]
 80039b4:	6039      	str	r1, [r7, #0]
	uint8_t rcv[]={0};
 80039b6:	2300      	movs	r3, #0
 80039b8:	723b      	strb	r3, [r7, #8]
	static uint8_t cnt=5;
	if(mode!=SKILL)return;
 80039ba:	4b2f      	ldr	r3, [pc, #188]	; (8003a78 <Wait_For_Start_Sigal+0xcc>)
 80039bc:	781b      	ldrb	r3, [r3, #0]
 80039be:	2b52      	cmp	r3, #82	; 0x52
 80039c0:	d156      	bne.n	8003a70 <Wait_For_Start_Sigal+0xc4>
	while(1)
	{
		//Bluetooth-on érkezika  start jel
		HAL_UART_Receive(huart_TB, rcv, 1, 7000);
 80039c2:	f107 0108 	add.w	r1, r7, #8
 80039c6:	f641 3358 	movw	r3, #7000	; 0x1b58
 80039ca:	2201      	movs	r2, #1
 80039cc:	6878      	ldr	r0, [r7, #4]
 80039ce:	f008 fc42 	bl	800c256 <HAL_UART_Receive>
		if(rcv[0]==cnt+0x30)
 80039d2:	7a3b      	ldrb	r3, [r7, #8]
 80039d4:	461a      	mov	r2, r3
 80039d6:	4b29      	ldr	r3, [pc, #164]	; (8003a7c <Wait_For_Start_Sigal+0xd0>)
 80039d8:	781b      	ldrb	r3, [r3, #0]
 80039da:	3330      	adds	r3, #48	; 0x30
 80039dc:	429a      	cmp	r2, r3
 80039de:	d11a      	bne.n	8003a16 <Wait_For_Start_Sigal+0x6a>
		{
			if(cnt<4)
 80039e0:	4b26      	ldr	r3, [pc, #152]	; (8003a7c <Wait_For_Start_Sigal+0xd0>)
 80039e2:	781b      	ldrb	r3, [r3, #0]
 80039e4:	2b03      	cmp	r3, #3
 80039e6:	d80c      	bhi.n	8003a02 <Wait_For_Start_Sigal+0x56>
			{
				HAL_UART_Transmit(huart_debugg, rcv, 1, 2);
 80039e8:	f107 0108 	add.w	r1, r7, #8
 80039ec:	2302      	movs	r3, #2
 80039ee:	2201      	movs	r2, #1
 80039f0:	6838      	ldr	r0, [r7, #0]
 80039f2:	f008 fb9e 	bl	800c132 <HAL_UART_Transmit>
				HAL_UART_Transmit(huart_debugg, (uint8_t*)"\n\r", 2, 2);
 80039f6:	2302      	movs	r3, #2
 80039f8:	2202      	movs	r2, #2
 80039fa:	4921      	ldr	r1, [pc, #132]	; (8003a80 <Wait_For_Start_Sigal+0xd4>)
 80039fc:	6838      	ldr	r0, [r7, #0]
 80039fe:	f008 fb98 	bl	800c132 <HAL_UART_Transmit>
			}
			if(rcv[0]=='0')break;
 8003a02:	7a3b      	ldrb	r3, [r7, #8]
 8003a04:	2b30      	cmp	r3, #48	; 0x30
 8003a06:	d026      	beq.n	8003a56 <Wait_For_Start_Sigal+0xaa>
			cnt--;
 8003a08:	4b1c      	ldr	r3, [pc, #112]	; (8003a7c <Wait_For_Start_Sigal+0xd0>)
 8003a0a:	781b      	ldrb	r3, [r3, #0]
 8003a0c:	3b01      	subs	r3, #1
 8003a0e:	b2da      	uxtb	r2, r3
 8003a10:	4b1a      	ldr	r3, [pc, #104]	; (8003a7c <Wait_For_Start_Sigal+0xd0>)
 8003a12:	701a      	strb	r2, [r3, #0]
 8003a14:	e002      	b.n	8003a1c <Wait_For_Start_Sigal+0x70>
		}
		else cnt=5;
 8003a16:	4b19      	ldr	r3, [pc, #100]	; (8003a7c <Wait_For_Start_Sigal+0xd0>)
 8003a18:	2205      	movs	r2, #5
 8003a1a:	701a      	strb	r2, [r3, #0]

		//Kézi próbaindítás
		if(B2)
 8003a1c:	2120      	movs	r1, #32
 8003a1e:	4819      	ldr	r0, [pc, #100]	; (8003a84 <Wait_For_Start_Sigal+0xd8>)
 8003a20:	f005 fe1c 	bl	800965c <HAL_GPIO_ReadPin>
 8003a24:	4603      	mov	r3, r0
 8003a26:	2b00      	cmp	r3, #0
 8003a28:	d0cb      	beq.n	80039c2 <Wait_For_Start_Sigal+0x16>
		{
			int i;
			for(i=0;i<10;i++)
 8003a2a:	2300      	movs	r3, #0
 8003a2c:	60fb      	str	r3, [r7, #12]
 8003a2e:	e009      	b.n	8003a44 <Wait_For_Start_Sigal+0x98>
			{
				LED_G_TOGGLE;
 8003a30:	2102      	movs	r1, #2
 8003a32:	4814      	ldr	r0, [pc, #80]	; (8003a84 <Wait_For_Start_Sigal+0xd8>)
 8003a34:	f005 fe43 	bl	80096be <HAL_GPIO_TogglePin>
				Delay(200);
 8003a38:	20c8      	movs	r0, #200	; 0xc8
 8003a3a:	f003 f8f3 	bl	8006c24 <Delay>
			for(i=0;i<10;i++)
 8003a3e:	68fb      	ldr	r3, [r7, #12]
 8003a40:	3301      	adds	r3, #1
 8003a42:	60fb      	str	r3, [r7, #12]
 8003a44:	68fb      	ldr	r3, [r7, #12]
 8003a46:	2b09      	cmp	r3, #9
 8003a48:	ddf2      	ble.n	8003a30 <Wait_For_Start_Sigal+0x84>
			}
			LED_G(0);
 8003a4a:	2201      	movs	r2, #1
 8003a4c:	2102      	movs	r1, #2
 8003a4e:	480d      	ldr	r0, [pc, #52]	; (8003a84 <Wait_For_Start_Sigal+0xd8>)
 8003a50:	f005 fe1c 	bl	800968c <HAL_GPIO_WritePin>
			break;//ha megnyomtuka 2-es gombot kiugrunk a while ciklusból
 8003a54:	e000      	b.n	8003a58 <Wait_For_Start_Sigal+0xac>
			if(rcv[0]=='0')break;
 8003a56:	bf00      	nop
		}

	}
	HAL_UART_Receive_IT(huart_TB, tb_msg, 6);
 8003a58:	2206      	movs	r2, #6
 8003a5a:	490b      	ldr	r1, [pc, #44]	; (8003a88 <Wait_For_Start_Sigal+0xdc>)
 8003a5c:	6878      	ldr	r0, [r7, #4]
 8003a5e:	f008 fc9c 	bl	800c39a <HAL_UART_Receive_IT>
	HAL_UART_Transmit(huart_debugg, (uint8_t*)"START!\n\r",8, 3);
 8003a62:	2303      	movs	r3, #3
 8003a64:	2208      	movs	r2, #8
 8003a66:	4909      	ldr	r1, [pc, #36]	; (8003a8c <Wait_For_Start_Sigal+0xe0>)
 8003a68:	6838      	ldr	r0, [r7, #0]
 8003a6a:	f008 fb62 	bl	800c132 <HAL_UART_Transmit>
 8003a6e:	e000      	b.n	8003a72 <Wait_For_Start_Sigal+0xc6>
	if(mode!=SKILL)return;
 8003a70:	bf00      	nop
}
 8003a72:	3710      	adds	r7, #16
 8003a74:	46bd      	mov	sp, r7
 8003a76:	bd80      	pop	{r7, pc}
 8003a78:	20000336 	.word	0x20000336
 8003a7c:	2000002e 	.word	0x2000002e
 8003a80:	080116b4 	.word	0x080116b4
 8003a84:	40020400 	.word	0x40020400
 8003a88:	2000034c 	.word	0x2000034c
 8003a8c:	080116b8 	.word	0x080116b8

08003a90 <Uart_Receive_Thunderboard_ISR>:
void Uart_Receive_Thunderboard_ISR(UART_HandleTypeDef *huart_TB, UART_HandleTypeDef *huart_debugg)
{
 8003a90:	b580      	push	{r7, lr}
 8003a92:	b082      	sub	sp, #8
 8003a94:	af00      	add	r7, sp, #0
 8003a96:	6078      	str	r0, [r7, #4]
 8003a98:	6039      	str	r1, [r7, #0]
	static uint8_t sp[]={0};//slip protection
	static uint8_t cnt=0;
	if(tb_msg[0]>='A' && tb_msg[0]<='Z' && tb_msg[5]>='0' && tb_msg[5]<='9')
 8003a9a:	4b37      	ldr	r3, [pc, #220]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003a9c:	781b      	ldrb	r3, [r3, #0]
 8003a9e:	2b40      	cmp	r3, #64	; 0x40
 8003aa0:	d93d      	bls.n	8003b1e <Uart_Receive_Thunderboard_ISR+0x8e>
 8003aa2:	4b35      	ldr	r3, [pc, #212]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003aa4:	781b      	ldrb	r3, [r3, #0]
 8003aa6:	2b5a      	cmp	r3, #90	; 0x5a
 8003aa8:	d839      	bhi.n	8003b1e <Uart_Receive_Thunderboard_ISR+0x8e>
 8003aaa:	4b33      	ldr	r3, [pc, #204]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003aac:	795b      	ldrb	r3, [r3, #5]
 8003aae:	2b2f      	cmp	r3, #47	; 0x2f
 8003ab0:	d935      	bls.n	8003b1e <Uart_Receive_Thunderboard_ISR+0x8e>
 8003ab2:	4b31      	ldr	r3, [pc, #196]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003ab4:	795b      	ldrb	r3, [r3, #5]
 8003ab6:	2b39      	cmp	r3, #57	; 0x39
 8003ab8:	d831      	bhi.n	8003b1e <Uart_Receive_Thunderboard_ISR+0x8e>
	{
		piratePos[0]=tb_msg[0];	piratePos[1]=tb_msg[1];	piratePos[2]=tb_msg[2];
 8003aba:	4b2f      	ldr	r3, [pc, #188]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003abc:	781a      	ldrb	r2, [r3, #0]
 8003abe:	4b2f      	ldr	r3, [pc, #188]	; (8003b7c <Uart_Receive_Thunderboard_ISR+0xec>)
 8003ac0:	701a      	strb	r2, [r3, #0]
 8003ac2:	4b2d      	ldr	r3, [pc, #180]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003ac4:	785a      	ldrb	r2, [r3, #1]
 8003ac6:	4b2d      	ldr	r3, [pc, #180]	; (8003b7c <Uart_Receive_Thunderboard_ISR+0xec>)
 8003ac8:	705a      	strb	r2, [r3, #1]
 8003aca:	4b2b      	ldr	r3, [pc, #172]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003acc:	789a      	ldrb	r2, [r3, #2]
 8003ace:	4b2b      	ldr	r3, [pc, #172]	; (8003b7c <Uart_Receive_Thunderboard_ISR+0xec>)
 8003ad0:	709a      	strb	r2, [r3, #2]
		piratePos[3]=100*(tb_msg[3]-0x30) + 10*(tb_msg[4]-0x30) + (tb_msg[5]-0x30);
 8003ad2:	4b29      	ldr	r3, [pc, #164]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003ad4:	78db      	ldrb	r3, [r3, #3]
 8003ad6:	461a      	mov	r2, r3
 8003ad8:	0092      	lsls	r2, r2, #2
 8003ada:	4413      	add	r3, r2
 8003adc:	461a      	mov	r2, r3
 8003ade:	0091      	lsls	r1, r2, #2
 8003ae0:	461a      	mov	r2, r3
 8003ae2:	460b      	mov	r3, r1
 8003ae4:	4413      	add	r3, r2
 8003ae6:	009b      	lsls	r3, r3, #2
 8003ae8:	b2da      	uxtb	r2, r3
 8003aea:	4b23      	ldr	r3, [pc, #140]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003aec:	791b      	ldrb	r3, [r3, #4]
 8003aee:	4619      	mov	r1, r3
 8003af0:	0089      	lsls	r1, r1, #2
 8003af2:	440b      	add	r3, r1
 8003af4:	005b      	lsls	r3, r3, #1
 8003af6:	b2db      	uxtb	r3, r3
 8003af8:	4413      	add	r3, r2
 8003afa:	b2da      	uxtb	r2, r3
 8003afc:	4b1e      	ldr	r3, [pc, #120]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003afe:	795b      	ldrb	r3, [r3, #5]
 8003b00:	4413      	add	r3, r2
 8003b02:	b2db      	uxtb	r3, r3
 8003b04:	3330      	adds	r3, #48	; 0x30
 8003b06:	b2da      	uxtb	r2, r3
 8003b08:	4b1c      	ldr	r3, [pc, #112]	; (8003b7c <Uart_Receive_Thunderboard_ISR+0xec>)
 8003b0a:	70da      	strb	r2, [r3, #3]
		thunderboardFlag=1;
 8003b0c:	4b1c      	ldr	r3, [pc, #112]	; (8003b80 <Uart_Receive_Thunderboard_ISR+0xf0>)
 8003b0e:	2201      	movs	r2, #1
 8003b10:	701a      	strb	r2, [r3, #0]
		HAL_UART_Receive_IT(huart_TB, tb_msg, 6);
 8003b12:	2206      	movs	r2, #6
 8003b14:	4918      	ldr	r1, [pc, #96]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003b16:	6878      	ldr	r0, [r7, #4]
 8003b18:	f008 fc3f 	bl	800c39a <HAL_UART_Receive_IT>
#ifdef TB_DEBUGG
		HAL_UART_Transmit(huart_debugg, tb_msg, 6, 2);
		HAL_UART_Transmit(huart_debugg, (uint8_t*)"\n\r", 2, 2);
#endif
		return;
 8003b1c:	e029      	b.n	8003b72 <Uart_Receive_Thunderboard_ISR+0xe2>
	}
	//SLIP PROTECTION
	if(sp[0]>='0' && sp[0]<='9')cnt++;
 8003b1e:	4b19      	ldr	r3, [pc, #100]	; (8003b84 <Uart_Receive_Thunderboard_ISR+0xf4>)
 8003b20:	781b      	ldrb	r3, [r3, #0]
 8003b22:	2b2f      	cmp	r3, #47	; 0x2f
 8003b24:	d90a      	bls.n	8003b3c <Uart_Receive_Thunderboard_ISR+0xac>
 8003b26:	4b17      	ldr	r3, [pc, #92]	; (8003b84 <Uart_Receive_Thunderboard_ISR+0xf4>)
 8003b28:	781b      	ldrb	r3, [r3, #0]
 8003b2a:	2b39      	cmp	r3, #57	; 0x39
 8003b2c:	d806      	bhi.n	8003b3c <Uart_Receive_Thunderboard_ISR+0xac>
 8003b2e:	4b16      	ldr	r3, [pc, #88]	; (8003b88 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003b30:	781b      	ldrb	r3, [r3, #0]
 8003b32:	3301      	adds	r3, #1
 8003b34:	b2da      	uxtb	r2, r3
 8003b36:	4b14      	ldr	r3, [pc, #80]	; (8003b88 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003b38:	701a      	strb	r2, [r3, #0]
 8003b3a:	e002      	b.n	8003b42 <Uart_Receive_Thunderboard_ISR+0xb2>
	else cnt=0;
 8003b3c:	4b12      	ldr	r3, [pc, #72]	; (8003b88 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003b3e:	2200      	movs	r2, #0
 8003b40:	701a      	strb	r2, [r3, #0]

	if(cnt<3) //3 darab ASCI számnak össze kell gyűlnie egymás után
 8003b42:	4b11      	ldr	r3, [pc, #68]	; (8003b88 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003b44:	781b      	ldrb	r3, [r3, #0]
 8003b46:	2b02      	cmp	r3, #2
 8003b48:	d805      	bhi.n	8003b56 <Uart_Receive_Thunderboard_ISR+0xc6>
	{
		HAL_UART_Receive_IT(huart_TB, sp, 1);//amig ez nincs meg addig cask egyesével olvasunk
 8003b4a:	2201      	movs	r2, #1
 8003b4c:	490d      	ldr	r1, [pc, #52]	; (8003b84 <Uart_Receive_Thunderboard_ISR+0xf4>)
 8003b4e:	6878      	ldr	r0, [r7, #4]
 8003b50:	f008 fc23 	bl	800c39a <HAL_UART_Receive_IT>
 8003b54:	e00d      	b.n	8003b72 <Uart_Receive_Thunderboard_ISR+0xe2>
	}
	else//ha megvan megint 6-ossával olvasunk
	{
		sp[0]=0;
 8003b56:	4b0b      	ldr	r3, [pc, #44]	; (8003b84 <Uart_Receive_Thunderboard_ISR+0xf4>)
 8003b58:	2200      	movs	r2, #0
 8003b5a:	701a      	strb	r2, [r3, #0]
		cnt=0;
 8003b5c:	4b0a      	ldr	r3, [pc, #40]	; (8003b88 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8003b5e:	2200      	movs	r2, #0
 8003b60:	701a      	strb	r2, [r3, #0]
		HAL_UART_Receive_IT(huart_TB, tb_msg, 6);
 8003b62:	2206      	movs	r2, #6
 8003b64:	4904      	ldr	r1, [pc, #16]	; (8003b78 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8003b66:	6878      	ldr	r0, [r7, #4]
 8003b68:	f008 fc17 	bl	800c39a <HAL_UART_Receive_IT>
		thunderboardFlag=1;
 8003b6c:	4b04      	ldr	r3, [pc, #16]	; (8003b80 <Uart_Receive_Thunderboard_ISR+0xf0>)
 8003b6e:	2201      	movs	r2, #1
 8003b70:	701a      	strb	r2, [r3, #0]
	}
}
 8003b72:	3708      	adds	r7, #8
 8003b74:	46bd      	mov	sp, r7
 8003b76:	bd80      	pop	{r7, pc}
 8003b78:	2000034c 	.word	0x2000034c
 8003b7c:	20000354 	.word	0x20000354
 8003b80:	2000034a 	.word	0x2000034a
 8003b84:	20000750 	.word	0x20000750
 8003b88:	20000751 	.word	0x20000751

08003b8c <Lane_Change_Init>:


void Lane_Change_Init(void)
{
 8003b8c:	b480      	push	{r7}
 8003b8e:	af00      	add	r7, sp, #0
	N('A').worth = N('B').worth = N('C').worth = N('E').worth = 0;
 8003b90:	4b32      	ldr	r3, [pc, #200]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003b92:	2200      	movs	r2, #0
 8003b94:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 8003b98:	4b30      	ldr	r3, [pc, #192]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003b9a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8003b9e:	4a2f      	ldr	r2, [pc, #188]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003ba0:	6553      	str	r3, [r2, #84]	; 0x54
 8003ba2:	4b2e      	ldr	r3, [pc, #184]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003ba4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003ba6:	4a2d      	ldr	r2, [pc, #180]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003ba8:	62d3      	str	r3, [r2, #44]	; 0x2c
 8003baa:	4b2c      	ldr	r3, [pc, #176]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003bae:	4a2b      	ldr	r2, [pc, #172]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bb0:	6053      	str	r3, [r2, #4]
	N('F').worth = N('D').worth = N('G').worth = 1;
 8003bb2:	4b2a      	ldr	r3, [pc, #168]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bb4:	2201      	movs	r2, #1
 8003bb6:	f8c3 20f4 	str.w	r2, [r3, #244]	; 0xf4
 8003bba:	4b28      	ldr	r3, [pc, #160]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bbc:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8003bc0:	4a26      	ldr	r2, [pc, #152]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bc2:	67d3      	str	r3, [r2, #124]	; 0x7c
 8003bc4:	4b25      	ldr	r3, [pc, #148]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bc6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8003bc8:	4a24      	ldr	r2, [pc, #144]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bca:	f8c2 30cc 	str.w	r3, [r2, #204]	; 0xcc
	N('I').worth = 2;
 8003bce:	4b23      	ldr	r3, [pc, #140]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bd0:	2202      	movs	r2, #2
 8003bd2:	f8c3 2144 	str.w	r2, [r3, #324]	; 0x144
	N('H').worth = N('J').worth = N('K').worth = N('L').worth = N('Q').worth = N('P').worth =  4;
 8003bd6:	4b21      	ldr	r3, [pc, #132]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bd8:	2204      	movs	r2, #4
 8003bda:	f8c3 225c 	str.w	r2, [r3, #604]	; 0x25c
 8003bde:	4b1f      	ldr	r3, [pc, #124]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003be0:	f8d3 325c 	ldr.w	r3, [r3, #604]	; 0x25c
 8003be4:	4a1d      	ldr	r2, [pc, #116]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003be6:	f8c2 3284 	str.w	r3, [r2, #644]	; 0x284
 8003bea:	4b1c      	ldr	r3, [pc, #112]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bec:	f8d3 3284 	ldr.w	r3, [r3, #644]	; 0x284
 8003bf0:	4a1a      	ldr	r2, [pc, #104]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bf2:	f8c2 31bc 	str.w	r3, [r2, #444]	; 0x1bc
 8003bf6:	4b19      	ldr	r3, [pc, #100]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bf8:	f8d3 31bc 	ldr.w	r3, [r3, #444]	; 0x1bc
 8003bfc:	4a17      	ldr	r2, [pc, #92]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003bfe:	f8c2 3194 	str.w	r3, [r2, #404]	; 0x194
 8003c02:	4b16      	ldr	r3, [pc, #88]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c04:	f8d3 3194 	ldr.w	r3, [r3, #404]	; 0x194
 8003c08:	4a14      	ldr	r2, [pc, #80]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c0a:	f8c2 316c 	str.w	r3, [r2, #364]	; 0x16c
 8003c0e:	4b13      	ldr	r3, [pc, #76]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c10:	f8d3 316c 	ldr.w	r3, [r3, #364]	; 0x16c
 8003c14:	4a11      	ldr	r2, [pc, #68]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c16:	f8c2 311c 	str.w	r3, [r2, #284]	; 0x11c
	N('N').worth = N('T').worth =8;
 8003c1a:	4b10      	ldr	r3, [pc, #64]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c1c:	2208      	movs	r2, #8
 8003c1e:	f8c3 22fc 	str.w	r2, [r3, #764]	; 0x2fc
 8003c22:	4b0e      	ldr	r3, [pc, #56]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c24:	f8d3 32fc 	ldr.w	r3, [r3, #764]	; 0x2fc
 8003c28:	4a0c      	ldr	r2, [pc, #48]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c2a:	f8c2 320c 	str.w	r3, [r2, #524]	; 0x20c
	N('O').worth = N('M').worth = 9;
 8003c2e:	4b0b      	ldr	r3, [pc, #44]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c30:	2209      	movs	r2, #9
 8003c32:	f8c3 21e4 	str.w	r2, [r3, #484]	; 0x1e4
 8003c36:	4b09      	ldr	r3, [pc, #36]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c38:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8003c3c:	4a07      	ldr	r2, [pc, #28]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c3e:	f8c2 3234 	str.w	r3, [r2, #564]	; 0x234
	N('U').worth = 16;
 8003c42:	4b06      	ldr	r3, [pc, #24]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c44:	2210      	movs	r2, #16
 8003c46:	f8c3 2324 	str.w	r2, [r3, #804]	; 0x324
	N('V').worth = 32;
 8003c4a:	4b04      	ldr	r3, [pc, #16]	; (8003c5c <Lane_Change_Init+0xd0>)
 8003c4c:	2220      	movs	r2, #32
 8003c4e:	f8c3 234c 	str.w	r2, [r3, #844]	; 0x34c
}
 8003c52:	bf00      	nop
 8003c54:	46bd      	mov	sp, r7
 8003c56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c5a:	4770      	bx	lr
 8003c5c:	20000360 	.word	0x20000360

08003c60 <Cross_Collision>:

uint8_t Cross_Collision(uint8_t myPos, uint8_t nextPos)
{
 8003c60:	b480      	push	{r7}
 8003c62:	b083      	sub	sp, #12
 8003c64:	af00      	add	r7, sp, #0
 8003c66:	4603      	mov	r3, r0
 8003c68:	460a      	mov	r2, r1
 8003c6a:	71fb      	strb	r3, [r7, #7]
 8003c6c:	4613      	mov	r3, r2
 8003c6e:	71bb      	strb	r3, [r7, #6]
	/********************************NI, KL kereszteződés**********************/
	if((myPos=='N' && nextPos=='I') || (myPos=='I' && nextPos=='N'))
 8003c70:	79fb      	ldrb	r3, [r7, #7]
 8003c72:	2b4e      	cmp	r3, #78	; 0x4e
 8003c74:	d102      	bne.n	8003c7c <Cross_Collision+0x1c>
 8003c76:	79bb      	ldrb	r3, [r7, #6]
 8003c78:	2b49      	cmp	r3, #73	; 0x49
 8003c7a:	d005      	beq.n	8003c88 <Cross_Collision+0x28>
 8003c7c:	79fb      	ldrb	r3, [r7, #7]
 8003c7e:	2b49      	cmp	r3, #73	; 0x49
 8003c80:	d132      	bne.n	8003ce8 <Cross_Collision+0x88>
 8003c82:	79bb      	ldrb	r3, [r7, #6]
 8003c84:	2b4e      	cmp	r3, #78	; 0x4e
 8003c86:	d12f      	bne.n	8003ce8 <Cross_Collision+0x88>
	{
		if((piratePos[0]=='K' && piratePos[1]=='L') || (piratePos[0]=='L' && piratePos[1]=='K')){ if(piratePos[3]<60) return 1;}
 8003c88:	4b83      	ldr	r3, [pc, #524]	; (8003e98 <Cross_Collision+0x238>)
 8003c8a:	781b      	ldrb	r3, [r3, #0]
 8003c8c:	2b4b      	cmp	r3, #75	; 0x4b
 8003c8e:	d103      	bne.n	8003c98 <Cross_Collision+0x38>
 8003c90:	4b81      	ldr	r3, [pc, #516]	; (8003e98 <Cross_Collision+0x238>)
 8003c92:	785b      	ldrb	r3, [r3, #1]
 8003c94:	2b4c      	cmp	r3, #76	; 0x4c
 8003c96:	d007      	beq.n	8003ca8 <Cross_Collision+0x48>
 8003c98:	4b7f      	ldr	r3, [pc, #508]	; (8003e98 <Cross_Collision+0x238>)
 8003c9a:	781b      	ldrb	r3, [r3, #0]
 8003c9c:	2b4c      	cmp	r3, #76	; 0x4c
 8003c9e:	d109      	bne.n	8003cb4 <Cross_Collision+0x54>
 8003ca0:	4b7d      	ldr	r3, [pc, #500]	; (8003e98 <Cross_Collision+0x238>)
 8003ca2:	785b      	ldrb	r3, [r3, #1]
 8003ca4:	2b4b      	cmp	r3, #75	; 0x4b
 8003ca6:	d105      	bne.n	8003cb4 <Cross_Collision+0x54>
 8003ca8:	4b7b      	ldr	r3, [pc, #492]	; (8003e98 <Cross_Collision+0x238>)
 8003caa:	78db      	ldrb	r3, [r3, #3]
 8003cac:	2b3b      	cmp	r3, #59	; 0x3b
 8003cae:	d81a      	bhi.n	8003ce6 <Cross_Collision+0x86>
 8003cb0:	2301      	movs	r3, #1
 8003cb2:	e12c      	b.n	8003f0e <Cross_Collision+0x2ae>
		else if((piratePos[1]=='K' && piratePos[2]=='L') || (piratePos[1]=='L' && piratePos[2]=='K')){ if(piratePos[3]>50) return 1;}
 8003cb4:	4b78      	ldr	r3, [pc, #480]	; (8003e98 <Cross_Collision+0x238>)
 8003cb6:	785b      	ldrb	r3, [r3, #1]
 8003cb8:	2b4b      	cmp	r3, #75	; 0x4b
 8003cba:	d103      	bne.n	8003cc4 <Cross_Collision+0x64>
 8003cbc:	4b76      	ldr	r3, [pc, #472]	; (8003e98 <Cross_Collision+0x238>)
 8003cbe:	789b      	ldrb	r3, [r3, #2]
 8003cc0:	2b4c      	cmp	r3, #76	; 0x4c
 8003cc2:	d009      	beq.n	8003cd8 <Cross_Collision+0x78>
 8003cc4:	4b74      	ldr	r3, [pc, #464]	; (8003e98 <Cross_Collision+0x238>)
 8003cc6:	785b      	ldrb	r3, [r3, #1]
 8003cc8:	2b4c      	cmp	r3, #76	; 0x4c
 8003cca:	f040 8116 	bne.w	8003efa <Cross_Collision+0x29a>
 8003cce:	4b72      	ldr	r3, [pc, #456]	; (8003e98 <Cross_Collision+0x238>)
 8003cd0:	789b      	ldrb	r3, [r3, #2]
 8003cd2:	2b4b      	cmp	r3, #75	; 0x4b
 8003cd4:	f040 8111 	bne.w	8003efa <Cross_Collision+0x29a>
 8003cd8:	4b6f      	ldr	r3, [pc, #444]	; (8003e98 <Cross_Collision+0x238>)
 8003cda:	78db      	ldrb	r3, [r3, #3]
 8003cdc:	2b32      	cmp	r3, #50	; 0x32
 8003cde:	f240 810c 	bls.w	8003efa <Cross_Collision+0x29a>
 8003ce2:	2301      	movs	r3, #1
 8003ce4:	e113      	b.n	8003f0e <Cross_Collision+0x2ae>
		if((piratePos[0]=='K' && piratePos[1]=='L') || (piratePos[0]=='L' && piratePos[1]=='K')){ if(piratePos[3]<60) return 1;}
 8003ce6:	e108      	b.n	8003efa <Cross_Collision+0x29a>
	}
	else if((myPos=='K' && nextPos=='L') || (myPos=='L' && nextPos=='K'))
 8003ce8:	79fb      	ldrb	r3, [r7, #7]
 8003cea:	2b4b      	cmp	r3, #75	; 0x4b
 8003cec:	d102      	bne.n	8003cf4 <Cross_Collision+0x94>
 8003cee:	79bb      	ldrb	r3, [r7, #6]
 8003cf0:	2b4c      	cmp	r3, #76	; 0x4c
 8003cf2:	d005      	beq.n	8003d00 <Cross_Collision+0xa0>
 8003cf4:	79fb      	ldrb	r3, [r7, #7]
 8003cf6:	2b4c      	cmp	r3, #76	; 0x4c
 8003cf8:	d132      	bne.n	8003d60 <Cross_Collision+0x100>
 8003cfa:	79bb      	ldrb	r3, [r7, #6]
 8003cfc:	2b4b      	cmp	r3, #75	; 0x4b
 8003cfe:	d12f      	bne.n	8003d60 <Cross_Collision+0x100>
	{
		if((piratePos[0]=='N' && piratePos[1]=='I') || (piratePos[0]=='I' && piratePos[1]=='N')){ if(piratePos[3]<60) return 1;}
 8003d00:	4b65      	ldr	r3, [pc, #404]	; (8003e98 <Cross_Collision+0x238>)
 8003d02:	781b      	ldrb	r3, [r3, #0]
 8003d04:	2b4e      	cmp	r3, #78	; 0x4e
 8003d06:	d103      	bne.n	8003d10 <Cross_Collision+0xb0>
 8003d08:	4b63      	ldr	r3, [pc, #396]	; (8003e98 <Cross_Collision+0x238>)
 8003d0a:	785b      	ldrb	r3, [r3, #1]
 8003d0c:	2b49      	cmp	r3, #73	; 0x49
 8003d0e:	d007      	beq.n	8003d20 <Cross_Collision+0xc0>
 8003d10:	4b61      	ldr	r3, [pc, #388]	; (8003e98 <Cross_Collision+0x238>)
 8003d12:	781b      	ldrb	r3, [r3, #0]
 8003d14:	2b49      	cmp	r3, #73	; 0x49
 8003d16:	d109      	bne.n	8003d2c <Cross_Collision+0xcc>
 8003d18:	4b5f      	ldr	r3, [pc, #380]	; (8003e98 <Cross_Collision+0x238>)
 8003d1a:	785b      	ldrb	r3, [r3, #1]
 8003d1c:	2b4e      	cmp	r3, #78	; 0x4e
 8003d1e:	d105      	bne.n	8003d2c <Cross_Collision+0xcc>
 8003d20:	4b5d      	ldr	r3, [pc, #372]	; (8003e98 <Cross_Collision+0x238>)
 8003d22:	78db      	ldrb	r3, [r3, #3]
 8003d24:	2b3b      	cmp	r3, #59	; 0x3b
 8003d26:	d81a      	bhi.n	8003d5e <Cross_Collision+0xfe>
 8003d28:	2301      	movs	r3, #1
 8003d2a:	e0f0      	b.n	8003f0e <Cross_Collision+0x2ae>
		else if((piratePos[1]=='N' && piratePos[2]=='I') || (piratePos[1]=='I' && piratePos[2]=='N')){ if(piratePos[3]>50) return 1;}
 8003d2c:	4b5a      	ldr	r3, [pc, #360]	; (8003e98 <Cross_Collision+0x238>)
 8003d2e:	785b      	ldrb	r3, [r3, #1]
 8003d30:	2b4e      	cmp	r3, #78	; 0x4e
 8003d32:	d103      	bne.n	8003d3c <Cross_Collision+0xdc>
 8003d34:	4b58      	ldr	r3, [pc, #352]	; (8003e98 <Cross_Collision+0x238>)
 8003d36:	789b      	ldrb	r3, [r3, #2]
 8003d38:	2b49      	cmp	r3, #73	; 0x49
 8003d3a:	d009      	beq.n	8003d50 <Cross_Collision+0xf0>
 8003d3c:	4b56      	ldr	r3, [pc, #344]	; (8003e98 <Cross_Collision+0x238>)
 8003d3e:	785b      	ldrb	r3, [r3, #1]
 8003d40:	2b49      	cmp	r3, #73	; 0x49
 8003d42:	f040 80dc 	bne.w	8003efe <Cross_Collision+0x29e>
 8003d46:	4b54      	ldr	r3, [pc, #336]	; (8003e98 <Cross_Collision+0x238>)
 8003d48:	789b      	ldrb	r3, [r3, #2]
 8003d4a:	2b4e      	cmp	r3, #78	; 0x4e
 8003d4c:	f040 80d7 	bne.w	8003efe <Cross_Collision+0x29e>
 8003d50:	4b51      	ldr	r3, [pc, #324]	; (8003e98 <Cross_Collision+0x238>)
 8003d52:	78db      	ldrb	r3, [r3, #3]
 8003d54:	2b32      	cmp	r3, #50	; 0x32
 8003d56:	f240 80d2 	bls.w	8003efe <Cross_Collision+0x29e>
 8003d5a:	2301      	movs	r3, #1
 8003d5c:	e0d7      	b.n	8003f0e <Cross_Collision+0x2ae>
		if((piratePos[0]=='N' && piratePos[1]=='I') || (piratePos[0]=='I' && piratePos[1]=='N')){ if(piratePos[3]<60) return 1;}
 8003d5e:	e0ce      	b.n	8003efe <Cross_Collision+0x29e>
	}
	/**************************************************************************/


	/********************************ID, FG kereszteződés**********************/
	else if((myPos=='I' && nextPos=='D') || (myPos=='D' && nextPos=='I'))
 8003d60:	79fb      	ldrb	r3, [r7, #7]
 8003d62:	2b49      	cmp	r3, #73	; 0x49
 8003d64:	d102      	bne.n	8003d6c <Cross_Collision+0x10c>
 8003d66:	79bb      	ldrb	r3, [r7, #6]
 8003d68:	2b44      	cmp	r3, #68	; 0x44
 8003d6a:	d005      	beq.n	8003d78 <Cross_Collision+0x118>
 8003d6c:	79fb      	ldrb	r3, [r7, #7]
 8003d6e:	2b44      	cmp	r3, #68	; 0x44
 8003d70:	d132      	bne.n	8003dd8 <Cross_Collision+0x178>
 8003d72:	79bb      	ldrb	r3, [r7, #6]
 8003d74:	2b49      	cmp	r3, #73	; 0x49
 8003d76:	d12f      	bne.n	8003dd8 <Cross_Collision+0x178>
	{
		if((piratePos[0]=='F' && piratePos[1]=='G') || (piratePos[0]=='G' && piratePos[1]=='F')){ if(piratePos[3]<60) return 1;}
 8003d78:	4b47      	ldr	r3, [pc, #284]	; (8003e98 <Cross_Collision+0x238>)
 8003d7a:	781b      	ldrb	r3, [r3, #0]
 8003d7c:	2b46      	cmp	r3, #70	; 0x46
 8003d7e:	d103      	bne.n	8003d88 <Cross_Collision+0x128>
 8003d80:	4b45      	ldr	r3, [pc, #276]	; (8003e98 <Cross_Collision+0x238>)
 8003d82:	785b      	ldrb	r3, [r3, #1]
 8003d84:	2b47      	cmp	r3, #71	; 0x47
 8003d86:	d007      	beq.n	8003d98 <Cross_Collision+0x138>
 8003d88:	4b43      	ldr	r3, [pc, #268]	; (8003e98 <Cross_Collision+0x238>)
 8003d8a:	781b      	ldrb	r3, [r3, #0]
 8003d8c:	2b47      	cmp	r3, #71	; 0x47
 8003d8e:	d109      	bne.n	8003da4 <Cross_Collision+0x144>
 8003d90:	4b41      	ldr	r3, [pc, #260]	; (8003e98 <Cross_Collision+0x238>)
 8003d92:	785b      	ldrb	r3, [r3, #1]
 8003d94:	2b46      	cmp	r3, #70	; 0x46
 8003d96:	d105      	bne.n	8003da4 <Cross_Collision+0x144>
 8003d98:	4b3f      	ldr	r3, [pc, #252]	; (8003e98 <Cross_Collision+0x238>)
 8003d9a:	78db      	ldrb	r3, [r3, #3]
 8003d9c:	2b3b      	cmp	r3, #59	; 0x3b
 8003d9e:	d81a      	bhi.n	8003dd6 <Cross_Collision+0x176>
 8003da0:	2301      	movs	r3, #1
 8003da2:	e0b4      	b.n	8003f0e <Cross_Collision+0x2ae>
		else if((piratePos[1]=='F' && piratePos[2]=='G') || (piratePos[1]=='G' && piratePos[2]=='F')){ if(piratePos[3]>50) return 1;}
 8003da4:	4b3c      	ldr	r3, [pc, #240]	; (8003e98 <Cross_Collision+0x238>)
 8003da6:	785b      	ldrb	r3, [r3, #1]
 8003da8:	2b46      	cmp	r3, #70	; 0x46
 8003daa:	d103      	bne.n	8003db4 <Cross_Collision+0x154>
 8003dac:	4b3a      	ldr	r3, [pc, #232]	; (8003e98 <Cross_Collision+0x238>)
 8003dae:	789b      	ldrb	r3, [r3, #2]
 8003db0:	2b47      	cmp	r3, #71	; 0x47
 8003db2:	d009      	beq.n	8003dc8 <Cross_Collision+0x168>
 8003db4:	4b38      	ldr	r3, [pc, #224]	; (8003e98 <Cross_Collision+0x238>)
 8003db6:	785b      	ldrb	r3, [r3, #1]
 8003db8:	2b47      	cmp	r3, #71	; 0x47
 8003dba:	f040 80a2 	bne.w	8003f02 <Cross_Collision+0x2a2>
 8003dbe:	4b36      	ldr	r3, [pc, #216]	; (8003e98 <Cross_Collision+0x238>)
 8003dc0:	789b      	ldrb	r3, [r3, #2]
 8003dc2:	2b46      	cmp	r3, #70	; 0x46
 8003dc4:	f040 809d 	bne.w	8003f02 <Cross_Collision+0x2a2>
 8003dc8:	4b33      	ldr	r3, [pc, #204]	; (8003e98 <Cross_Collision+0x238>)
 8003dca:	78db      	ldrb	r3, [r3, #3]
 8003dcc:	2b32      	cmp	r3, #50	; 0x32
 8003dce:	f240 8098 	bls.w	8003f02 <Cross_Collision+0x2a2>
 8003dd2:	2301      	movs	r3, #1
 8003dd4:	e09b      	b.n	8003f0e <Cross_Collision+0x2ae>
		if((piratePos[0]=='F' && piratePos[1]=='G') || (piratePos[0]=='G' && piratePos[1]=='F')){ if(piratePos[3]<60) return 1;}
 8003dd6:	e094      	b.n	8003f02 <Cross_Collision+0x2a2>
	}
	else if((myPos=='F' && nextPos=='G') || (myPos=='G' && nextPos=='F'))
 8003dd8:	79fb      	ldrb	r3, [r7, #7]
 8003dda:	2b46      	cmp	r3, #70	; 0x46
 8003ddc:	d102      	bne.n	8003de4 <Cross_Collision+0x184>
 8003dde:	79bb      	ldrb	r3, [r7, #6]
 8003de0:	2b47      	cmp	r3, #71	; 0x47
 8003de2:	d005      	beq.n	8003df0 <Cross_Collision+0x190>
 8003de4:	79fb      	ldrb	r3, [r7, #7]
 8003de6:	2b47      	cmp	r3, #71	; 0x47
 8003de8:	d12f      	bne.n	8003e4a <Cross_Collision+0x1ea>
 8003dea:	79bb      	ldrb	r3, [r7, #6]
 8003dec:	2b46      	cmp	r3, #70	; 0x46
 8003dee:	d12c      	bne.n	8003e4a <Cross_Collision+0x1ea>
	{
		if((piratePos[0]=='I' && piratePos[1]=='D') || (piratePos[0]=='D' && piratePos[1]=='I')){ if(piratePos[3]<60) return 1;}
 8003df0:	4b29      	ldr	r3, [pc, #164]	; (8003e98 <Cross_Collision+0x238>)
 8003df2:	781b      	ldrb	r3, [r3, #0]
 8003df4:	2b49      	cmp	r3, #73	; 0x49
 8003df6:	d103      	bne.n	8003e00 <Cross_Collision+0x1a0>
 8003df8:	4b27      	ldr	r3, [pc, #156]	; (8003e98 <Cross_Collision+0x238>)
 8003dfa:	785b      	ldrb	r3, [r3, #1]
 8003dfc:	2b44      	cmp	r3, #68	; 0x44
 8003dfe:	d007      	beq.n	8003e10 <Cross_Collision+0x1b0>
 8003e00:	4b25      	ldr	r3, [pc, #148]	; (8003e98 <Cross_Collision+0x238>)
 8003e02:	781b      	ldrb	r3, [r3, #0]
 8003e04:	2b44      	cmp	r3, #68	; 0x44
 8003e06:	d109      	bne.n	8003e1c <Cross_Collision+0x1bc>
 8003e08:	4b23      	ldr	r3, [pc, #140]	; (8003e98 <Cross_Collision+0x238>)
 8003e0a:	785b      	ldrb	r3, [r3, #1]
 8003e0c:	2b49      	cmp	r3, #73	; 0x49
 8003e0e:	d105      	bne.n	8003e1c <Cross_Collision+0x1bc>
 8003e10:	4b21      	ldr	r3, [pc, #132]	; (8003e98 <Cross_Collision+0x238>)
 8003e12:	78db      	ldrb	r3, [r3, #3]
 8003e14:	2b3b      	cmp	r3, #59	; 0x3b
 8003e16:	d817      	bhi.n	8003e48 <Cross_Collision+0x1e8>
 8003e18:	2301      	movs	r3, #1
 8003e1a:	e078      	b.n	8003f0e <Cross_Collision+0x2ae>
		else if((piratePos[1]=='I' && piratePos[2]=='D') || (piratePos[1]=='D' && piratePos[2]=='I')){ if(piratePos[3]>50) return 1;}
 8003e1c:	4b1e      	ldr	r3, [pc, #120]	; (8003e98 <Cross_Collision+0x238>)
 8003e1e:	785b      	ldrb	r3, [r3, #1]
 8003e20:	2b49      	cmp	r3, #73	; 0x49
 8003e22:	d103      	bne.n	8003e2c <Cross_Collision+0x1cc>
 8003e24:	4b1c      	ldr	r3, [pc, #112]	; (8003e98 <Cross_Collision+0x238>)
 8003e26:	789b      	ldrb	r3, [r3, #2]
 8003e28:	2b44      	cmp	r3, #68	; 0x44
 8003e2a:	d007      	beq.n	8003e3c <Cross_Collision+0x1dc>
 8003e2c:	4b1a      	ldr	r3, [pc, #104]	; (8003e98 <Cross_Collision+0x238>)
 8003e2e:	785b      	ldrb	r3, [r3, #1]
 8003e30:	2b44      	cmp	r3, #68	; 0x44
 8003e32:	d168      	bne.n	8003f06 <Cross_Collision+0x2a6>
 8003e34:	4b18      	ldr	r3, [pc, #96]	; (8003e98 <Cross_Collision+0x238>)
 8003e36:	789b      	ldrb	r3, [r3, #2]
 8003e38:	2b49      	cmp	r3, #73	; 0x49
 8003e3a:	d164      	bne.n	8003f06 <Cross_Collision+0x2a6>
 8003e3c:	4b16      	ldr	r3, [pc, #88]	; (8003e98 <Cross_Collision+0x238>)
 8003e3e:	78db      	ldrb	r3, [r3, #3]
 8003e40:	2b32      	cmp	r3, #50	; 0x32
 8003e42:	d960      	bls.n	8003f06 <Cross_Collision+0x2a6>
 8003e44:	2301      	movs	r3, #1
 8003e46:	e062      	b.n	8003f0e <Cross_Collision+0x2ae>
		if((piratePos[0]=='I' && piratePos[1]=='D') || (piratePos[0]=='D' && piratePos[1]=='I')){ if(piratePos[3]<60) return 1;}
 8003e48:	e05d      	b.n	8003f06 <Cross_Collision+0x2a6>
	}
	/**************************************************************************/


	/********************************TN, PQ kereszteződés**********************/
	else if((myPos=='P' && nextPos=='Q') || (myPos=='Q' && nextPos=='P'))
 8003e4a:	79fb      	ldrb	r3, [r7, #7]
 8003e4c:	2b50      	cmp	r3, #80	; 0x50
 8003e4e:	d102      	bne.n	8003e56 <Cross_Collision+0x1f6>
 8003e50:	79bb      	ldrb	r3, [r7, #6]
 8003e52:	2b51      	cmp	r3, #81	; 0x51
 8003e54:	d005      	beq.n	8003e62 <Cross_Collision+0x202>
 8003e56:	79fb      	ldrb	r3, [r7, #7]
 8003e58:	2b51      	cmp	r3, #81	; 0x51
 8003e5a:	d11f      	bne.n	8003e9c <Cross_Collision+0x23c>
 8003e5c:	79bb      	ldrb	r3, [r7, #6]
 8003e5e:	2b50      	cmp	r3, #80	; 0x50
 8003e60:	d11c      	bne.n	8003e9c <Cross_Collision+0x23c>
	{
		if(piratePos[0]=='T'){ if(piratePos[3]<50) return 1; }
 8003e62:	4b0d      	ldr	r3, [pc, #52]	; (8003e98 <Cross_Collision+0x238>)
 8003e64:	781b      	ldrb	r3, [r3, #0]
 8003e66:	2b54      	cmp	r3, #84	; 0x54
 8003e68:	d105      	bne.n	8003e76 <Cross_Collision+0x216>
 8003e6a:	4b0b      	ldr	r3, [pc, #44]	; (8003e98 <Cross_Collision+0x238>)
 8003e6c:	78db      	ldrb	r3, [r3, #3]
 8003e6e:	2b31      	cmp	r3, #49	; 0x31
 8003e70:	d84b      	bhi.n	8003f0a <Cross_Collision+0x2aa>
 8003e72:	2301      	movs	r3, #1
 8003e74:	e04b      	b.n	8003f0e <Cross_Collision+0x2ae>
		else if(piratePos[1]=='T') return 1;
 8003e76:	4b08      	ldr	r3, [pc, #32]	; (8003e98 <Cross_Collision+0x238>)
 8003e78:	785b      	ldrb	r3, [r3, #1]
 8003e7a:	2b54      	cmp	r3, #84	; 0x54
 8003e7c:	d101      	bne.n	8003e82 <Cross_Collision+0x222>
 8003e7e:	2301      	movs	r3, #1
 8003e80:	e045      	b.n	8003f0e <Cross_Collision+0x2ae>
		else if(piratePos[2]=='T'){ if(piratePos[3]>60) return 1; };
 8003e82:	4b05      	ldr	r3, [pc, #20]	; (8003e98 <Cross_Collision+0x238>)
 8003e84:	789b      	ldrb	r3, [r3, #2]
 8003e86:	2b54      	cmp	r3, #84	; 0x54
 8003e88:	d13f      	bne.n	8003f0a <Cross_Collision+0x2aa>
 8003e8a:	4b03      	ldr	r3, [pc, #12]	; (8003e98 <Cross_Collision+0x238>)
 8003e8c:	78db      	ldrb	r3, [r3, #3]
 8003e8e:	2b3c      	cmp	r3, #60	; 0x3c
 8003e90:	d93b      	bls.n	8003f0a <Cross_Collision+0x2aa>
 8003e92:	2301      	movs	r3, #1
 8003e94:	e03b      	b.n	8003f0e <Cross_Collision+0x2ae>
 8003e96:	bf00      	nop
 8003e98:	20000354 	.word	0x20000354
	}
	else if(nextPos=='T')
 8003e9c:	79bb      	ldrb	r3, [r7, #6]
 8003e9e:	2b54      	cmp	r3, #84	; 0x54
 8003ea0:	d134      	bne.n	8003f0c <Cross_Collision+0x2ac>
	{
		if((piratePos[0]=='P' && piratePos[1]=='Q') || (piratePos[0]=='Q' && piratePos[1]=='P')){if(piratePos[3]<70)return 1;}
 8003ea2:	4b1e      	ldr	r3, [pc, #120]	; (8003f1c <Cross_Collision+0x2bc>)
 8003ea4:	781b      	ldrb	r3, [r3, #0]
 8003ea6:	2b50      	cmp	r3, #80	; 0x50
 8003ea8:	d103      	bne.n	8003eb2 <Cross_Collision+0x252>
 8003eaa:	4b1c      	ldr	r3, [pc, #112]	; (8003f1c <Cross_Collision+0x2bc>)
 8003eac:	785b      	ldrb	r3, [r3, #1]
 8003eae:	2b51      	cmp	r3, #81	; 0x51
 8003eb0:	d007      	beq.n	8003ec2 <Cross_Collision+0x262>
 8003eb2:	4b1a      	ldr	r3, [pc, #104]	; (8003f1c <Cross_Collision+0x2bc>)
 8003eb4:	781b      	ldrb	r3, [r3, #0]
 8003eb6:	2b51      	cmp	r3, #81	; 0x51
 8003eb8:	d109      	bne.n	8003ece <Cross_Collision+0x26e>
 8003eba:	4b18      	ldr	r3, [pc, #96]	; (8003f1c <Cross_Collision+0x2bc>)
 8003ebc:	785b      	ldrb	r3, [r3, #1]
 8003ebe:	2b50      	cmp	r3, #80	; 0x50
 8003ec0:	d105      	bne.n	8003ece <Cross_Collision+0x26e>
 8003ec2:	4b16      	ldr	r3, [pc, #88]	; (8003f1c <Cross_Collision+0x2bc>)
 8003ec4:	78db      	ldrb	r3, [r3, #3]
 8003ec6:	2b45      	cmp	r3, #69	; 0x45
 8003ec8:	d820      	bhi.n	8003f0c <Cross_Collision+0x2ac>
 8003eca:	2301      	movs	r3, #1
 8003ecc:	e01f      	b.n	8003f0e <Cross_Collision+0x2ae>
		else if((piratePos[1]=='P' && piratePos[2]=='Q') || (piratePos[1]=='Q' && piratePos[2]=='P')){if(piratePos[3]>50)return 1;}
 8003ece:	4b13      	ldr	r3, [pc, #76]	; (8003f1c <Cross_Collision+0x2bc>)
 8003ed0:	785b      	ldrb	r3, [r3, #1]
 8003ed2:	2b50      	cmp	r3, #80	; 0x50
 8003ed4:	d103      	bne.n	8003ede <Cross_Collision+0x27e>
 8003ed6:	4b11      	ldr	r3, [pc, #68]	; (8003f1c <Cross_Collision+0x2bc>)
 8003ed8:	789b      	ldrb	r3, [r3, #2]
 8003eda:	2b51      	cmp	r3, #81	; 0x51
 8003edc:	d007      	beq.n	8003eee <Cross_Collision+0x28e>
 8003ede:	4b0f      	ldr	r3, [pc, #60]	; (8003f1c <Cross_Collision+0x2bc>)
 8003ee0:	785b      	ldrb	r3, [r3, #1]
 8003ee2:	2b51      	cmp	r3, #81	; 0x51
 8003ee4:	d112      	bne.n	8003f0c <Cross_Collision+0x2ac>
 8003ee6:	4b0d      	ldr	r3, [pc, #52]	; (8003f1c <Cross_Collision+0x2bc>)
 8003ee8:	789b      	ldrb	r3, [r3, #2]
 8003eea:	2b50      	cmp	r3, #80	; 0x50
 8003eec:	d10e      	bne.n	8003f0c <Cross_Collision+0x2ac>
 8003eee:	4b0b      	ldr	r3, [pc, #44]	; (8003f1c <Cross_Collision+0x2bc>)
 8003ef0:	78db      	ldrb	r3, [r3, #3]
 8003ef2:	2b32      	cmp	r3, #50	; 0x32
 8003ef4:	d90a      	bls.n	8003f0c <Cross_Collision+0x2ac>
 8003ef6:	2301      	movs	r3, #1
 8003ef8:	e009      	b.n	8003f0e <Cross_Collision+0x2ae>
		if((piratePos[0]=='K' && piratePos[1]=='L') || (piratePos[0]=='L' && piratePos[1]=='K')){ if(piratePos[3]<60) return 1;}
 8003efa:	bf00      	nop
 8003efc:	e006      	b.n	8003f0c <Cross_Collision+0x2ac>
		if((piratePos[0]=='N' && piratePos[1]=='I') || (piratePos[0]=='I' && piratePos[1]=='N')){ if(piratePos[3]<60) return 1;}
 8003efe:	bf00      	nop
 8003f00:	e004      	b.n	8003f0c <Cross_Collision+0x2ac>
		if((piratePos[0]=='F' && piratePos[1]=='G') || (piratePos[0]=='G' && piratePos[1]=='F')){ if(piratePos[3]<60) return 1;}
 8003f02:	bf00      	nop
 8003f04:	e002      	b.n	8003f0c <Cross_Collision+0x2ac>
		if((piratePos[0]=='I' && piratePos[1]=='D') || (piratePos[0]=='D' && piratePos[1]=='I')){ if(piratePos[3]<60) return 1;}
 8003f06:	bf00      	nop
 8003f08:	e000      	b.n	8003f0c <Cross_Collision+0x2ac>
		if(piratePos[0]=='T'){ if(piratePos[3]<50) return 1; }
 8003f0a:	bf00      	nop
	}
	/**************************************************************************/
	return 0;
 8003f0c:	2300      	movs	r3, #0
}
 8003f0e:	4618      	mov	r0, r3
 8003f10:	370c      	adds	r7, #12
 8003f12:	46bd      	mov	sp, r7
 8003f14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f18:	4770      	bx	lr
 8003f1a:	bf00      	nop
 8003f1c:	20000354 	.word	0x20000354

08003f20 <Battery_Voltage_Compensate>:
float v=0;
//ha 1000 akkor a motor full csutkán megy előre
//ha -1000 akkor a motor full csutkán megy hátra

void Battery_Voltage_Compensate(ADC_HandleTypeDef *hadc_UNiMh,ADC_HandleTypeDef *hadc_ULiPo,UART_HandleTypeDef *huart_debugg)
{
 8003f20:	b580      	push	{r7, lr}
 8003f22:	b090      	sub	sp, #64	; 0x40
 8003f24:	af00      	add	r7, sp, #0
 8003f26:	60f8      	str	r0, [r7, #12]
 8003f28:	60b9      	str	r1, [r7, #8]
 8003f2a:	607a      	str	r2, [r7, #4]
	char msg[30];
	uint32_t raw=0;
 8003f2c:	2300      	movs	r3, #0
 8003f2e:	63fb      	str	r3, [r7, #60]	; 0x3c
	float bat;
	int i;

	//NiMh akku mérése
	for(i=0;i<20;i++)
 8003f30:	2300      	movs	r3, #0
 8003f32:	63bb      	str	r3, [r7, #56]	; 0x38
 8003f34:	e016      	b.n	8003f64 <Battery_Voltage_Compensate+0x44>
	{
		HAL_ADC_Start(hadc_UNiMh);
 8003f36:	68f8      	ldr	r0, [r7, #12]
 8003f38:	f003 fd76 	bl	8007a28 <HAL_ADC_Start>
		HAL_Delay(10);
 8003f3c:	200a      	movs	r0, #10
 8003f3e:	f003 fd0b 	bl	8007958 <HAL_Delay>
		HAL_ADC_PollForConversion(hadc_UNiMh,20);
 8003f42:	2114      	movs	r1, #20
 8003f44:	68f8      	ldr	r0, [r7, #12]
 8003f46:	f003 fe41 	bl	8007bcc <HAL_ADC_PollForConversion>
		HAL_Delay(10);
 8003f4a:	200a      	movs	r0, #10
 8003f4c:	f003 fd04 	bl	8007958 <HAL_Delay>
		raw += HAL_ADC_GetValue(hadc_UNiMh);
 8003f50:	68f8      	ldr	r0, [r7, #12]
 8003f52:	f003 fec6 	bl	8007ce2 <HAL_ADC_GetValue>
 8003f56:	4602      	mov	r2, r0
 8003f58:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003f5a:	4413      	add	r3, r2
 8003f5c:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(i=0;i<20;i++)
 8003f5e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003f60:	3301      	adds	r3, #1
 8003f62:	63bb      	str	r3, [r7, #56]	; 0x38
 8003f64:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003f66:	2b13      	cmp	r3, #19
 8003f68:	dde5      	ble.n	8003f36 <Battery_Voltage_Compensate+0x16>
	}
	bat=(float)raw * 0.00460575 / 20.0;//ez a mi feszültségünk V-ban
 8003f6a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003f6c:	ee07 3a90 	vmov	s15, r3
 8003f70:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003f74:	ee17 0a90 	vmov	r0, s15
 8003f78:	f7fc fb06 	bl	8000588 <__aeabi_f2d>
 8003f7c:	a37b      	add	r3, pc, #492	; (adr r3, 800416c <Battery_Voltage_Compensate+0x24c>)
 8003f7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003f82:	f7fc fb59 	bl	8000638 <__aeabi_dmul>
 8003f86:	4602      	mov	r2, r0
 8003f88:	460b      	mov	r3, r1
 8003f8a:	4610      	mov	r0, r2
 8003f8c:	4619      	mov	r1, r3
 8003f8e:	f04f 0200 	mov.w	r2, #0
 8003f92:	4b71      	ldr	r3, [pc, #452]	; (8004158 <Battery_Voltage_Compensate+0x238>)
 8003f94:	f7fc fc7a 	bl	800088c <__aeabi_ddiv>
 8003f98:	4602      	mov	r2, r0
 8003f9a:	460b      	mov	r3, r1
 8003f9c:	4610      	mov	r0, r2
 8003f9e:	4619      	mov	r1, r3
 8003fa0:	f7fc fe22 	bl	8000be8 <__aeabi_d2f>
 8003fa4:	4603      	mov	r3, r0
 8003fa6:	637b      	str	r3, [r7, #52]	; 0x34
	sprintf(msg,"NiMh charge: %2.2f V \r\n", bat);
 8003fa8:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8003faa:	f7fc faed 	bl	8000588 <__aeabi_f2d>
 8003fae:	4602      	mov	r2, r0
 8003fb0:	460b      	mov	r3, r1
 8003fb2:	f107 0014 	add.w	r0, r7, #20
 8003fb6:	4969      	ldr	r1, [pc, #420]	; (800415c <Battery_Voltage_Compensate+0x23c>)
 8003fb8:	f009 fe24 	bl	800dc04 <siprintf>
	HAL_UART_Transmit(huart_debugg, (uint8_t*) msg, strlen(msg),10);
 8003fbc:	f107 0314 	add.w	r3, r7, #20
 8003fc0:	4618      	mov	r0, r3
 8003fc2:	f7fc f925 	bl	8000210 <strlen>
 8003fc6:	4603      	mov	r3, r0
 8003fc8:	b29a      	uxth	r2, r3
 8003fca:	f107 0114 	add.w	r1, r7, #20
 8003fce:	230a      	movs	r3, #10
 8003fd0:	6878      	ldr	r0, [r7, #4]
 8003fd2:	f008 f8ae 	bl	800c132 <HAL_UART_Transmit>

	if(bat)compensation=7.75/bat;
 8003fd6:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8003fda:	eef5 7a40 	vcmp.f32	s15, #0.0
 8003fde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003fe2:	d009      	beq.n	8003ff8 <Battery_Voltage_Compensate+0xd8>
 8003fe4:	eef1 6a0f 	vmov.f32	s13, #31	; 0x40f80000  7.750
 8003fe8:	ed97 7a0d 	vldr	s14, [r7, #52]	; 0x34
 8003fec:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003ff0:	4b5b      	ldr	r3, [pc, #364]	; (8004160 <Battery_Voltage_Compensate+0x240>)
 8003ff2:	edc3 7a00 	vstr	s15, [r3]
 8003ff6:	e003      	b.n	8004000 <Battery_Voltage_Compensate+0xe0>
	else compensation=1;
 8003ff8:	4b59      	ldr	r3, [pc, #356]	; (8004160 <Battery_Voltage_Compensate+0x240>)
 8003ffa:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8003ffe:	601a      	str	r2, [r3, #0]

	if(bat < 7.2)
 8004000:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8004002:	f7fc fac1 	bl	8000588 <__aeabi_f2d>
 8004006:	a34e      	add	r3, pc, #312	; (adr r3, 8004140 <Battery_Voltage_Compensate+0x220>)
 8004008:	e9d3 2300 	ldrd	r2, r3, [r3]
 800400c:	f7fc fd86 	bl	8000b1c <__aeabi_dcmplt>
 8004010:	4603      	mov	r3, r0
 8004012:	2b00      	cmp	r3, #0
 8004014:	d010      	beq.n	8004038 <Battery_Voltage_Compensate+0x118>
	{
		for(i=0;i<10;i++)
 8004016:	2300      	movs	r3, #0
 8004018:	63bb      	str	r3, [r7, #56]	; 0x38
 800401a:	e00a      	b.n	8004032 <Battery_Voltage_Compensate+0x112>
		{
			LED_Y_TOGGLE;
 800401c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004020:	4850      	ldr	r0, [pc, #320]	; (8004164 <Battery_Voltage_Compensate+0x244>)
 8004022:	f005 fb4c 	bl	80096be <HAL_GPIO_TogglePin>
			HAL_Delay(200);
 8004026:	20c8      	movs	r0, #200	; 0xc8
 8004028:	f003 fc96 	bl	8007958 <HAL_Delay>
		for(i=0;i<10;i++)
 800402c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800402e:	3301      	adds	r3, #1
 8004030:	63bb      	str	r3, [r7, #56]	; 0x38
 8004032:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004034:	2b09      	cmp	r3, #9
 8004036:	ddf1      	ble.n	800401c <Battery_Voltage_Compensate+0xfc>
		}
	}

	//LiPo akku mérése
	raw=0;
 8004038:	2300      	movs	r3, #0
 800403a:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(i=0;i<20;i++)
 800403c:	2300      	movs	r3, #0
 800403e:	63bb      	str	r3, [r7, #56]	; 0x38
 8004040:	e016      	b.n	8004070 <Battery_Voltage_Compensate+0x150>
	{
		HAL_ADC_Start(hadc_ULiPo);
 8004042:	68b8      	ldr	r0, [r7, #8]
 8004044:	f003 fcf0 	bl	8007a28 <HAL_ADC_Start>
		HAL_Delay(10);
 8004048:	200a      	movs	r0, #10
 800404a:	f003 fc85 	bl	8007958 <HAL_Delay>
		HAL_ADC_PollForConversion(hadc_ULiPo,20);
 800404e:	2114      	movs	r1, #20
 8004050:	68b8      	ldr	r0, [r7, #8]
 8004052:	f003 fdbb 	bl	8007bcc <HAL_ADC_PollForConversion>
		HAL_Delay(10);
 8004056:	200a      	movs	r0, #10
 8004058:	f003 fc7e 	bl	8007958 <HAL_Delay>
		raw += HAL_ADC_GetValue(hadc_ULiPo);
 800405c:	68b8      	ldr	r0, [r7, #8]
 800405e:	f003 fe40 	bl	8007ce2 <HAL_ADC_GetValue>
 8004062:	4602      	mov	r2, r0
 8004064:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8004066:	4413      	add	r3, r2
 8004068:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(i=0;i<20;i++)
 800406a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800406c:	3301      	adds	r3, #1
 800406e:	63bb      	str	r3, [r7, #56]	; 0x38
 8004070:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004072:	2b13      	cmp	r3, #19
 8004074:	dde5      	ble.n	8004042 <Battery_Voltage_Compensate+0x122>

	}
	bat = (float)raw * 0.003241242 / 20.0 + 0.02;//ez a mi feszültségünk V-ban
 8004076:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8004078:	ee07 3a90 	vmov	s15, r3
 800407c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004080:	ee17 0a90 	vmov	r0, s15
 8004084:	f7fc fa80 	bl	8000588 <__aeabi_f2d>
 8004088:	a32f      	add	r3, pc, #188	; (adr r3, 8004148 <Battery_Voltage_Compensate+0x228>)
 800408a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800408e:	f7fc fad3 	bl	8000638 <__aeabi_dmul>
 8004092:	4602      	mov	r2, r0
 8004094:	460b      	mov	r3, r1
 8004096:	4610      	mov	r0, r2
 8004098:	4619      	mov	r1, r3
 800409a:	f04f 0200 	mov.w	r2, #0
 800409e:	4b2e      	ldr	r3, [pc, #184]	; (8004158 <Battery_Voltage_Compensate+0x238>)
 80040a0:	f7fc fbf4 	bl	800088c <__aeabi_ddiv>
 80040a4:	4602      	mov	r2, r0
 80040a6:	460b      	mov	r3, r1
 80040a8:	4610      	mov	r0, r2
 80040aa:	4619      	mov	r1, r3
 80040ac:	a328      	add	r3, pc, #160	; (adr r3, 8004150 <Battery_Voltage_Compensate+0x230>)
 80040ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80040b2:	f7fc f90b 	bl	80002cc <__adddf3>
 80040b6:	4602      	mov	r2, r0
 80040b8:	460b      	mov	r3, r1
 80040ba:	4610      	mov	r0, r2
 80040bc:	4619      	mov	r1, r3
 80040be:	f7fc fd93 	bl	8000be8 <__aeabi_d2f>
 80040c2:	4603      	mov	r3, r0
 80040c4:	637b      	str	r3, [r7, #52]	; 0x34
	sprintf(msg,"LiPo charge: %2.2f V \r\n", bat);
 80040c6:	6b78      	ldr	r0, [r7, #52]	; 0x34
 80040c8:	f7fc fa5e 	bl	8000588 <__aeabi_f2d>
 80040cc:	4602      	mov	r2, r0
 80040ce:	460b      	mov	r3, r1
 80040d0:	f107 0014 	add.w	r0, r7, #20
 80040d4:	4924      	ldr	r1, [pc, #144]	; (8004168 <Battery_Voltage_Compensate+0x248>)
 80040d6:	f009 fd95 	bl	800dc04 <siprintf>
	HAL_UART_Transmit(huart_debugg, (uint8_t*)msg, strlen(msg),10);
 80040da:	f107 0314 	add.w	r3, r7, #20
 80040de:	4618      	mov	r0, r3
 80040e0:	f7fc f896 	bl	8000210 <strlen>
 80040e4:	4603      	mov	r3, r0
 80040e6:	b29a      	uxth	r2, r3
 80040e8:	f107 0114 	add.w	r1, r7, #20
 80040ec:	230a      	movs	r3, #10
 80040ee:	6878      	ldr	r0, [r7, #4]
 80040f0:	f008 f81f 	bl	800c132 <HAL_UART_Transmit>

	/**/
	if(bat < 10)
 80040f4:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 80040f8:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80040fc:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004100:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004104:	d510      	bpl.n	8004128 <Battery_Voltage_Compensate+0x208>
	{
		for(i=0;i<20;i++)
 8004106:	2300      	movs	r3, #0
 8004108:	63bb      	str	r3, [r7, #56]	; 0x38
 800410a:	e00a      	b.n	8004122 <Battery_Voltage_Compensate+0x202>
		{
			LED_Y_TOGGLE;
 800410c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004110:	4814      	ldr	r0, [pc, #80]	; (8004164 <Battery_Voltage_Compensate+0x244>)
 8004112:	f005 fad4 	bl	80096be <HAL_GPIO_TogglePin>
			HAL_Delay(200);
 8004116:	20c8      	movs	r0, #200	; 0xc8
 8004118:	f003 fc1e 	bl	8007958 <HAL_Delay>
		for(i=0;i<20;i++)
 800411c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800411e:	3301      	adds	r3, #1
 8004120:	63bb      	str	r3, [r7, #56]	; 0x38
 8004122:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004124:	2b13      	cmp	r3, #19
 8004126:	ddf1      	ble.n	800410c <Battery_Voltage_Compensate+0x1ec>
		}
	}

	LED_Y(0);
 8004128:	2201      	movs	r2, #1
 800412a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800412e:	480d      	ldr	r0, [pc, #52]	; (8004164 <Battery_Voltage_Compensate+0x244>)
 8004130:	f005 faac 	bl	800968c <HAL_GPIO_WritePin>

}
 8004134:	bf00      	nop
 8004136:	3740      	adds	r7, #64	; 0x40
 8004138:	46bd      	mov	sp, r7
 800413a:	bd80      	pop	{r7, pc}
 800413c:	f3af 8000 	nop.w
 8004140:	cccccccd 	.word	0xcccccccd
 8004144:	401ccccc 	.word	0x401ccccc
 8004148:	8c6df334 	.word	0x8c6df334
 800414c:	3f6a8d60 	.word	0x3f6a8d60
 8004150:	47ae147b 	.word	0x47ae147b
 8004154:	3f947ae1 	.word	0x3f947ae1
 8004158:	40340000 	.word	0x40340000
 800415c:	080116c4 	.word	0x080116c4
 8004160:	20000030 	.word	0x20000030
 8004164:	40020400 	.word	0x40020400
 8004168:	080116dc 	.word	0x080116dc
 800416c:	99fa11a9 	.word	0x99fa11a9
 8004170:	3f72dd7a 	.word	0x3f72dd7a
 8004174:	00000000 	.word	0x00000000

08004178 <Measure_Velocity_Task>:

void Measure_Velocity_Task(TIM_HandleTypeDef *htim_encoder,uint32_t tick, uint32_t period)
{
 8004178:	b5b0      	push	{r4, r5, r7, lr}
 800417a:	b086      	sub	sp, #24
 800417c:	af00      	add	r7, sp, #0
 800417e:	60f8      	str	r0, [r7, #12]
 8004180:	60b9      	str	r1, [r7, #8]
 8004182:	607a      	str	r2, [r7, #4]
	static uint32_t tick_prev=0;
	static uint32_t measure_v_task_tick=4;
	static float alpha=0.4;
	static float invalpha=0.6;
	float v_uj=0;
 8004184:	f04f 0300 	mov.w	r3, #0
 8004188:	617b      	str	r3, [r7, #20]

	if(measure_v_task_tick>tick) return;
 800418a:	4b31      	ldr	r3, [pc, #196]	; (8004250 <Measure_Velocity_Task+0xd8>)
 800418c:	681b      	ldr	r3, [r3, #0]
 800418e:	68ba      	ldr	r2, [r7, #8]
 8004190:	429a      	cmp	r2, r3
 8004192:	d354      	bcc.n	800423e <Measure_Velocity_Task+0xc6>
	measure_v_task_tick= tick + period;
 8004194:	68ba      	ldr	r2, [r7, #8]
 8004196:	687b      	ldr	r3, [r7, #4]
 8004198:	4413      	add	r3, r2
 800419a:	4a2d      	ldr	r2, [pc, #180]	; (8004250 <Measure_Velocity_Task+0xd8>)
 800419c:	6013      	str	r3, [r2, #0]
	if(!tick_prev)
 800419e:	4b2d      	ldr	r3, [pc, #180]	; (8004254 <Measure_Velocity_Task+0xdc>)
 80041a0:	681b      	ldr	r3, [r3, #0]
 80041a2:	2b00      	cmp	r3, #0
 80041a4:	d103      	bne.n	80041ae <Measure_Velocity_Task+0x36>
	{
		tick_prev=tick;
 80041a6:	4a2b      	ldr	r2, [pc, #172]	; (8004254 <Measure_Velocity_Task+0xdc>)
 80041a8:	68bb      	ldr	r3, [r7, #8]
 80041aa:	6013      	str	r3, [r2, #0]
		return;
 80041ac:	e048      	b.n	8004240 <Measure_Velocity_Task+0xc8>
	}
	v_uj =((float) 0x8000 - (float) __HAL_TIM_GET_COUNTER(htim_encoder))*7.49/(float)period; //mm/s dimenzió
 80041ae:	68fb      	ldr	r3, [r7, #12]
 80041b0:	681b      	ldr	r3, [r3, #0]
 80041b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80041b4:	ee07 3a90 	vmov	s15, r3
 80041b8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80041bc:	ed9f 7a26 	vldr	s14, [pc, #152]	; 8004258 <Measure_Velocity_Task+0xe0>
 80041c0:	ee77 7a67 	vsub.f32	s15, s14, s15
 80041c4:	ee17 0a90 	vmov	r0, s15
 80041c8:	f7fc f9de 	bl	8000588 <__aeabi_f2d>
 80041cc:	a31e      	add	r3, pc, #120	; (adr r3, 8004248 <Measure_Velocity_Task+0xd0>)
 80041ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80041d2:	f7fc fa31 	bl	8000638 <__aeabi_dmul>
 80041d6:	4602      	mov	r2, r0
 80041d8:	460b      	mov	r3, r1
 80041da:	4614      	mov	r4, r2
 80041dc:	461d      	mov	r5, r3
 80041de:	687b      	ldr	r3, [r7, #4]
 80041e0:	ee07 3a90 	vmov	s15, r3
 80041e4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80041e8:	ee17 0a90 	vmov	r0, s15
 80041ec:	f7fc f9cc 	bl	8000588 <__aeabi_f2d>
 80041f0:	4602      	mov	r2, r0
 80041f2:	460b      	mov	r3, r1
 80041f4:	4620      	mov	r0, r4
 80041f6:	4629      	mov	r1, r5
 80041f8:	f7fc fb48 	bl	800088c <__aeabi_ddiv>
 80041fc:	4602      	mov	r2, r0
 80041fe:	460b      	mov	r3, r1
 8004200:	4610      	mov	r0, r2
 8004202:	4619      	mov	r1, r3
 8004204:	f7fc fcf0 	bl	8000be8 <__aeabi_d2f>
 8004208:	4603      	mov	r3, r0
 800420a:	617b      	str	r3, [r7, #20]
	TIM8->CNT=0x8000;
 800420c:	4b13      	ldr	r3, [pc, #76]	; (800425c <Measure_Velocity_Task+0xe4>)
 800420e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8004212:	625a      	str	r2, [r3, #36]	; 0x24
	//tick_prev=tick;
	//exponenciális szűrés
	v = alpha*(float)v_uj + invalpha*v;
 8004214:	4b12      	ldr	r3, [pc, #72]	; (8004260 <Measure_Velocity_Task+0xe8>)
 8004216:	ed93 7a00 	vldr	s14, [r3]
 800421a:	edd7 7a05 	vldr	s15, [r7, #20]
 800421e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8004222:	4b10      	ldr	r3, [pc, #64]	; (8004264 <Measure_Velocity_Task+0xec>)
 8004224:	edd3 6a00 	vldr	s13, [r3]
 8004228:	4b0f      	ldr	r3, [pc, #60]	; (8004268 <Measure_Velocity_Task+0xf0>)
 800422a:	edd3 7a00 	vldr	s15, [r3]
 800422e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8004232:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004236:	4b0c      	ldr	r3, [pc, #48]	; (8004268 <Measure_Velocity_Task+0xf0>)
 8004238:	edc3 7a00 	vstr	s15, [r3]
 800423c:	e000      	b.n	8004240 <Measure_Velocity_Task+0xc8>
	if(measure_v_task_tick>tick) return;
 800423e:	bf00      	nop
}
 8004240:	3718      	adds	r7, #24
 8004242:	46bd      	mov	sp, r7
 8004244:	bdb0      	pop	{r4, r5, r7, pc}
 8004246:	bf00      	nop
 8004248:	8f5c28f6 	.word	0x8f5c28f6
 800424c:	401df5c2 	.word	0x401df5c2
 8004250:	20000034 	.word	0x20000034
 8004254:	20000758 	.word	0x20000758
 8004258:	47000000 	.word	0x47000000
 800425c:	40010400 	.word	0x40010400
 8004260:	20000038 	.word	0x20000038
 8004264:	2000003c 	.word	0x2000003c
 8004268:	20000754 	.word	0x20000754
 800426c:	00000000 	.word	0x00000000

08004270 <Motor_Drive_Task>:

void Motor_Drive_Task(TIM_HandleTypeDef *htim_motor, UART_HandleTypeDef *huart, uint32_t tick, uint32_t period) //DUTY paramtert kiszedtem -> változtassuk a globális változót
{
 8004270:	b5b0      	push	{r4, r5, r7, lr}
 8004272:	b086      	sub	sp, #24
 8004274:	af00      	add	r7, sp, #0
 8004276:	60f8      	str	r0, [r7, #12]
 8004278:	60b9      	str	r1, [r7, #8]
 800427a:	607a      	str	r2, [r7, #4]
 800427c:	603b      	str	r3, [r7, #0]
	static uint32_t motor_drive_task_tick=5;
	static float v_prev,f,u=0;

	int32_t ccr1;
	int32_t ccr2;
	if(motor_drive_task_tick>tick) return;
 800427e:	4bb2      	ldr	r3, [pc, #712]	; (8004548 <Motor_Drive_Task+0x2d8>)
 8004280:	681b      	ldr	r3, [r3, #0]
 8004282:	687a      	ldr	r2, [r7, #4]
 8004284:	429a      	cmp	r2, r3
 8004286:	f0c0 81da 	bcc.w	800463e <Motor_Drive_Task+0x3ce>
	motor_drive_task_tick= tick + period;
 800428a:	687a      	ldr	r2, [r7, #4]
 800428c:	683b      	ldr	r3, [r7, #0]
 800428e:	4413      	add	r3, r2
 8004290:	4aad      	ldr	r2, [pc, #692]	; (8004548 <Motor_Drive_Task+0x2d8>)
 8004292:	6013      	str	r3, [r2, #0]

	if(motorEnRemote && motorEnLineOk) //ha nem nyomtunk vészstopot és az akkuk is rendben vannak akkor pöröghet a motor
 8004294:	4bad      	ldr	r3, [pc, #692]	; (800454c <Motor_Drive_Task+0x2dc>)
 8004296:	781b      	ldrb	r3, [r3, #0]
 8004298:	2b00      	cmp	r3, #0
 800429a:	f000 817b 	beq.w	8004594 <Motor_Drive_Task+0x324>
 800429e:	4bac      	ldr	r3, [pc, #688]	; (8004550 <Motor_Drive_Task+0x2e0>)
 80042a0:	781b      	ldrb	r3, [r3, #0]
 80042a2:	2b00      	cmp	r3, #0
 80042a4:	f000 8176 	beq.w	8004594 <Motor_Drive_Task+0x324>
	{
		//az u paraméter a bevatkozó jel minusz holtásávot adja meg
		u= KC * (v_ref - v) * compensation + f;
 80042a8:	4baa      	ldr	r3, [pc, #680]	; (8004554 <Motor_Drive_Task+0x2e4>)
 80042aa:	ed93 7a00 	vldr	s14, [r3]
 80042ae:	4baa      	ldr	r3, [pc, #680]	; (8004558 <Motor_Drive_Task+0x2e8>)
 80042b0:	edd3 7a00 	vldr	s15, [r3]
 80042b4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80042b8:	ee17 0a90 	vmov	r0, s15
 80042bc:	f7fc f964 	bl	8000588 <__aeabi_f2d>
 80042c0:	a39b      	add	r3, pc, #620	; (adr r3, 8004530 <Motor_Drive_Task+0x2c0>)
 80042c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80042c6:	f7fc f9b7 	bl	8000638 <__aeabi_dmul>
 80042ca:	4602      	mov	r2, r0
 80042cc:	460b      	mov	r3, r1
 80042ce:	4614      	mov	r4, r2
 80042d0:	461d      	mov	r5, r3
 80042d2:	4ba2      	ldr	r3, [pc, #648]	; (800455c <Motor_Drive_Task+0x2ec>)
 80042d4:	681b      	ldr	r3, [r3, #0]
 80042d6:	4618      	mov	r0, r3
 80042d8:	f7fc f956 	bl	8000588 <__aeabi_f2d>
 80042dc:	4602      	mov	r2, r0
 80042de:	460b      	mov	r3, r1
 80042e0:	4620      	mov	r0, r4
 80042e2:	4629      	mov	r1, r5
 80042e4:	f7fc f9a8 	bl	8000638 <__aeabi_dmul>
 80042e8:	4602      	mov	r2, r0
 80042ea:	460b      	mov	r3, r1
 80042ec:	4614      	mov	r4, r2
 80042ee:	461d      	mov	r5, r3
 80042f0:	4b9b      	ldr	r3, [pc, #620]	; (8004560 <Motor_Drive_Task+0x2f0>)
 80042f2:	681b      	ldr	r3, [r3, #0]
 80042f4:	4618      	mov	r0, r3
 80042f6:	f7fc f947 	bl	8000588 <__aeabi_f2d>
 80042fa:	4602      	mov	r2, r0
 80042fc:	460b      	mov	r3, r1
 80042fe:	4620      	mov	r0, r4
 8004300:	4629      	mov	r1, r5
 8004302:	f7fb ffe3 	bl	80002cc <__adddf3>
 8004306:	4602      	mov	r2, r0
 8004308:	460b      	mov	r3, r1
 800430a:	4610      	mov	r0, r2
 800430c:	4619      	mov	r1, r3
 800430e:	f7fc fc6b 	bl	8000be8 <__aeabi_d2f>
 8004312:	4603      	mov	r3, r0
 8004314:	4a93      	ldr	r2, [pc, #588]	; (8004564 <Motor_Drive_Task+0x2f4>)
 8004316:	6013      	str	r3, [r2, #0]
		if(u>880) u=880;
 8004318:	4b92      	ldr	r3, [pc, #584]	; (8004564 <Motor_Drive_Task+0x2f4>)
 800431a:	edd3 7a00 	vldr	s15, [r3]
 800431e:	ed9f 7a92 	vldr	s14, [pc, #584]	; 8004568 <Motor_Drive_Task+0x2f8>
 8004322:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004326:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800432a:	dd03      	ble.n	8004334 <Motor_Drive_Task+0xc4>
 800432c:	4b8d      	ldr	r3, [pc, #564]	; (8004564 <Motor_Drive_Task+0x2f4>)
 800432e:	4a8f      	ldr	r2, [pc, #572]	; (800456c <Motor_Drive_Task+0x2fc>)
 8004330:	601a      	str	r2, [r3, #0]
 8004332:	e00c      	b.n	800434e <Motor_Drive_Task+0xde>
		else if(u<-500)u=-500;
 8004334:	4b8b      	ldr	r3, [pc, #556]	; (8004564 <Motor_Drive_Task+0x2f4>)
 8004336:	edd3 7a00 	vldr	s15, [r3]
 800433a:	ed9f 7a8d 	vldr	s14, [pc, #564]	; 8004570 <Motor_Drive_Task+0x300>
 800433e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004342:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004346:	d502      	bpl.n	800434e <Motor_Drive_Task+0xde>
 8004348:	4b86      	ldr	r3, [pc, #536]	; (8004564 <Motor_Drive_Task+0x2f4>)
 800434a:	4a8a      	ldr	r2, [pc, #552]	; (8004574 <Motor_Drive_Task+0x304>)
 800434c:	601a      	str	r2, [r3, #0]
		f = ZD*f + (1-ZD)*u;
 800434e:	4b84      	ldr	r3, [pc, #528]	; (8004560 <Motor_Drive_Task+0x2f0>)
 8004350:	681b      	ldr	r3, [r3, #0]
 8004352:	4618      	mov	r0, r3
 8004354:	f7fc f918 	bl	8000588 <__aeabi_f2d>
 8004358:	a377      	add	r3, pc, #476	; (adr r3, 8004538 <Motor_Drive_Task+0x2c8>)
 800435a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800435e:	f7fc f96b 	bl	8000638 <__aeabi_dmul>
 8004362:	4602      	mov	r2, r0
 8004364:	460b      	mov	r3, r1
 8004366:	4614      	mov	r4, r2
 8004368:	461d      	mov	r5, r3
 800436a:	4b7e      	ldr	r3, [pc, #504]	; (8004564 <Motor_Drive_Task+0x2f4>)
 800436c:	681b      	ldr	r3, [r3, #0]
 800436e:	4618      	mov	r0, r3
 8004370:	f7fc f90a 	bl	8000588 <__aeabi_f2d>
 8004374:	a372      	add	r3, pc, #456	; (adr r3, 8004540 <Motor_Drive_Task+0x2d0>)
 8004376:	e9d3 2300 	ldrd	r2, r3, [r3]
 800437a:	f7fc f95d 	bl	8000638 <__aeabi_dmul>
 800437e:	4602      	mov	r2, r0
 8004380:	460b      	mov	r3, r1
 8004382:	4620      	mov	r0, r4
 8004384:	4629      	mov	r1, r5
 8004386:	f7fb ffa1 	bl	80002cc <__adddf3>
 800438a:	4602      	mov	r2, r0
 800438c:	460b      	mov	r3, r1
 800438e:	4610      	mov	r0, r2
 8004390:	4619      	mov	r1, r3
 8004392:	f7fc fc29 	bl	8000be8 <__aeabi_d2f>
 8004396:	4603      	mov	r3, r0
 8004398:	4a71      	ldr	r2, [pc, #452]	; (8004560 <Motor_Drive_Task+0x2f0>)
 800439a:	6013      	str	r3, [r2, #0]
		//ez alapján a kiadandó kitöltési tényező
		if(u>0) motorDuty=(int)u+70;
 800439c:	4b71      	ldr	r3, [pc, #452]	; (8004564 <Motor_Drive_Task+0x2f4>)
 800439e:	edd3 7a00 	vldr	s15, [r3]
 80043a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80043a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80043aa:	dd0a      	ble.n	80043c2 <Motor_Drive_Task+0x152>
 80043ac:	4b6d      	ldr	r3, [pc, #436]	; (8004564 <Motor_Drive_Task+0x2f4>)
 80043ae:	edd3 7a00 	vldr	s15, [r3]
 80043b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043b6:	ee17 3a90 	vmov	r3, s15
 80043ba:	3346      	adds	r3, #70	; 0x46
 80043bc:	4a6e      	ldr	r2, [pc, #440]	; (8004578 <Motor_Drive_Task+0x308>)
 80043be:	6013      	str	r3, [r2, #0]
 80043c0:	e01b      	b.n	80043fa <Motor_Drive_Task+0x18a>
		else if(u<0) motorDuty=(int)u-70;
 80043c2:	4b68      	ldr	r3, [pc, #416]	; (8004564 <Motor_Drive_Task+0x2f4>)
 80043c4:	edd3 7a00 	vldr	s15, [r3]
 80043c8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80043cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80043d0:	d50a      	bpl.n	80043e8 <Motor_Drive_Task+0x178>
 80043d2:	4b64      	ldr	r3, [pc, #400]	; (8004564 <Motor_Drive_Task+0x2f4>)
 80043d4:	edd3 7a00 	vldr	s15, [r3]
 80043d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043dc:	ee17 3a90 	vmov	r3, s15
 80043e0:	3b46      	subs	r3, #70	; 0x46
 80043e2:	4a65      	ldr	r2, [pc, #404]	; (8004578 <Motor_Drive_Task+0x308>)
 80043e4:	6013      	str	r3, [r2, #0]
 80043e6:	e008      	b.n	80043fa <Motor_Drive_Task+0x18a>
		else motorDuty=(int)u;
 80043e8:	4b5e      	ldr	r3, [pc, #376]	; (8004564 <Motor_Drive_Task+0x2f4>)
 80043ea:	edd3 7a00 	vldr	s15, [r3]
 80043ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043f2:	ee17 2a90 	vmov	r2, s15
 80043f6:	4b60      	ldr	r3, [pc, #384]	; (8004578 <Motor_Drive_Task+0x308>)
 80043f8:	601a      	str	r2, [r3, #0]
		if(mode==SKILL)
 80043fa:	4b60      	ldr	r3, [pc, #384]	; (800457c <Motor_Drive_Task+0x30c>)
 80043fc:	781b      	ldrb	r3, [r3, #0]
 80043fe:	2b52      	cmp	r3, #82	; 0x52
 8004400:	d148      	bne.n	8004494 <Motor_Drive_Task+0x224>
		{
			if(fabs(v_ref)<200 && v*v_prev<=0)stop=1;
 8004402:	4b54      	ldr	r3, [pc, #336]	; (8004554 <Motor_Drive_Task+0x2e4>)
 8004404:	edd3 7a00 	vldr	s15, [r3]
 8004408:	eef0 7ae7 	vabs.f32	s15, s15
 800440c:	ed9f 7a5c 	vldr	s14, [pc, #368]	; 8004580 <Motor_Drive_Task+0x310>
 8004410:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004414:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004418:	d50f      	bpl.n	800443a <Motor_Drive_Task+0x1ca>
 800441a:	4b4f      	ldr	r3, [pc, #316]	; (8004558 <Motor_Drive_Task+0x2e8>)
 800441c:	ed93 7a00 	vldr	s14, [r3]
 8004420:	4b58      	ldr	r3, [pc, #352]	; (8004584 <Motor_Drive_Task+0x314>)
 8004422:	edd3 7a00 	vldr	s15, [r3]
 8004426:	ee67 7a27 	vmul.f32	s15, s14, s15
 800442a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800442e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004432:	d802      	bhi.n	800443a <Motor_Drive_Task+0x1ca>
 8004434:	4b54      	ldr	r3, [pc, #336]	; (8004588 <Motor_Drive_Task+0x318>)
 8004436:	2201      	movs	r2, #1
 8004438:	701a      	strb	r2, [r3, #0]
			if(stop)
 800443a:	4b53      	ldr	r3, [pc, #332]	; (8004588 <Motor_Drive_Task+0x318>)
 800443c:	781b      	ldrb	r3, [r3, #0]
 800443e:	2b00      	cmp	r3, #0
 8004440:	d022      	beq.n	8004488 <Motor_Drive_Task+0x218>
			{
				if(fabs(v_ref)>200)
 8004442:	4b44      	ldr	r3, [pc, #272]	; (8004554 <Motor_Drive_Task+0x2e4>)
 8004444:	edd3 7a00 	vldr	s15, [r3]
 8004448:	eef0 7ae7 	vabs.f32	s15, s15
 800444c:	ed9f 7a4c 	vldr	s14, [pc, #304]	; 8004580 <Motor_Drive_Task+0x310>
 8004450:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004454:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004458:	dd08      	ble.n	800446c <Motor_Drive_Task+0x1fc>
				{
					stop=0;
 800445a:	4b4b      	ldr	r3, [pc, #300]	; (8004588 <Motor_Drive_Task+0x318>)
 800445c:	2200      	movs	r2, #0
 800445e:	701a      	strb	r2, [r3, #0]
					MOTOR_EN(1);
 8004460:	2201      	movs	r2, #1
 8004462:	2140      	movs	r1, #64	; 0x40
 8004464:	4849      	ldr	r0, [pc, #292]	; (800458c <Motor_Drive_Task+0x31c>)
 8004466:	f005 f911 	bl	800968c <HAL_GPIO_WritePin>
		if(mode==SKILL)
 800446a:	e0a1      	b.n	80045b0 <Motor_Drive_Task+0x340>
				}
				else
				{
					f=u=0;
 800446c:	4b3d      	ldr	r3, [pc, #244]	; (8004564 <Motor_Drive_Task+0x2f4>)
 800446e:	f04f 0200 	mov.w	r2, #0
 8004472:	601a      	str	r2, [r3, #0]
 8004474:	4b3b      	ldr	r3, [pc, #236]	; (8004564 <Motor_Drive_Task+0x2f4>)
 8004476:	681b      	ldr	r3, [r3, #0]
 8004478:	4a39      	ldr	r2, [pc, #228]	; (8004560 <Motor_Drive_Task+0x2f0>)
 800447a:	6013      	str	r3, [r2, #0]
					MOTOR_EN(0); //amugy stop
 800447c:	2200      	movs	r2, #0
 800447e:	2140      	movs	r1, #64	; 0x40
 8004480:	4842      	ldr	r0, [pc, #264]	; (800458c <Motor_Drive_Task+0x31c>)
 8004482:	f005 f903 	bl	800968c <HAL_GPIO_WritePin>
		if(mode==SKILL)
 8004486:	e093      	b.n	80045b0 <Motor_Drive_Task+0x340>
				}
			}
			else MOTOR_EN(1);
 8004488:	2201      	movs	r2, #1
 800448a:	2140      	movs	r1, #64	; 0x40
 800448c:	483f      	ldr	r0, [pc, #252]	; (800458c <Motor_Drive_Task+0x31c>)
 800448e:	f005 f8fd 	bl	800968c <HAL_GPIO_WritePin>
		if(mode==SKILL)
 8004492:	e08d      	b.n	80045b0 <Motor_Drive_Task+0x340>
		}
		else if(mode==FAST)
 8004494:	4b39      	ldr	r3, [pc, #228]	; (800457c <Motor_Drive_Task+0x30c>)
 8004496:	781b      	ldrb	r3, [r3, #0]
 8004498:	2b3f      	cmp	r3, #63	; 0x3f
 800449a:	f040 8089 	bne.w	80045b0 <Motor_Drive_Task+0x340>
		{
			if(fabs(v_ref)<100 && v*v_prev<=0)stop=1;
 800449e:	4b2d      	ldr	r3, [pc, #180]	; (8004554 <Motor_Drive_Task+0x2e4>)
 80044a0:	edd3 7a00 	vldr	s15, [r3]
 80044a4:	eef0 7ae7 	vabs.f32	s15, s15
 80044a8:	ed9f 7a39 	vldr	s14, [pc, #228]	; 8004590 <Motor_Drive_Task+0x320>
 80044ac:	eef4 7ac7 	vcmpe.f32	s15, s14
 80044b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80044b4:	d50f      	bpl.n	80044d6 <Motor_Drive_Task+0x266>
 80044b6:	4b28      	ldr	r3, [pc, #160]	; (8004558 <Motor_Drive_Task+0x2e8>)
 80044b8:	ed93 7a00 	vldr	s14, [r3]
 80044bc:	4b31      	ldr	r3, [pc, #196]	; (8004584 <Motor_Drive_Task+0x314>)
 80044be:	edd3 7a00 	vldr	s15, [r3]
 80044c2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80044c6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80044ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80044ce:	d802      	bhi.n	80044d6 <Motor_Drive_Task+0x266>
 80044d0:	4b2d      	ldr	r3, [pc, #180]	; (8004588 <Motor_Drive_Task+0x318>)
 80044d2:	2201      	movs	r2, #1
 80044d4:	701a      	strb	r2, [r3, #0]
			if(stop)
 80044d6:	4b2c      	ldr	r3, [pc, #176]	; (8004588 <Motor_Drive_Task+0x318>)
 80044d8:	781b      	ldrb	r3, [r3, #0]
 80044da:	2b00      	cmp	r3, #0
 80044dc:	d022      	beq.n	8004524 <Motor_Drive_Task+0x2b4>
			{
				if(fabs(v_ref)>100)
 80044de:	4b1d      	ldr	r3, [pc, #116]	; (8004554 <Motor_Drive_Task+0x2e4>)
 80044e0:	edd3 7a00 	vldr	s15, [r3]
 80044e4:	eef0 7ae7 	vabs.f32	s15, s15
 80044e8:	ed9f 7a29 	vldr	s14, [pc, #164]	; 8004590 <Motor_Drive_Task+0x320>
 80044ec:	eef4 7ac7 	vcmpe.f32	s15, s14
 80044f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80044f4:	dd08      	ble.n	8004508 <Motor_Drive_Task+0x298>
				{
					stop=0;
 80044f6:	4b24      	ldr	r3, [pc, #144]	; (8004588 <Motor_Drive_Task+0x318>)
 80044f8:	2200      	movs	r2, #0
 80044fa:	701a      	strb	r2, [r3, #0]
					MOTOR_EN(1);
 80044fc:	2201      	movs	r2, #1
 80044fe:	2140      	movs	r1, #64	; 0x40
 8004500:	4822      	ldr	r0, [pc, #136]	; (800458c <Motor_Drive_Task+0x31c>)
 8004502:	f005 f8c3 	bl	800968c <HAL_GPIO_WritePin>
		if(mode==SKILL)
 8004506:	e053      	b.n	80045b0 <Motor_Drive_Task+0x340>
				}
				else
				{
					f=u=0;
 8004508:	4b16      	ldr	r3, [pc, #88]	; (8004564 <Motor_Drive_Task+0x2f4>)
 800450a:	f04f 0200 	mov.w	r2, #0
 800450e:	601a      	str	r2, [r3, #0]
 8004510:	4b14      	ldr	r3, [pc, #80]	; (8004564 <Motor_Drive_Task+0x2f4>)
 8004512:	681b      	ldr	r3, [r3, #0]
 8004514:	4a12      	ldr	r2, [pc, #72]	; (8004560 <Motor_Drive_Task+0x2f0>)
 8004516:	6013      	str	r3, [r2, #0]
					MOTOR_EN(0); //amugy stop
 8004518:	2200      	movs	r2, #0
 800451a:	2140      	movs	r1, #64	; 0x40
 800451c:	481b      	ldr	r0, [pc, #108]	; (800458c <Motor_Drive_Task+0x31c>)
 800451e:	f005 f8b5 	bl	800968c <HAL_GPIO_WritePin>
		if(mode==SKILL)
 8004522:	e045      	b.n	80045b0 <Motor_Drive_Task+0x340>
				}
			}
			else MOTOR_EN(1);
 8004524:	2201      	movs	r2, #1
 8004526:	2140      	movs	r1, #64	; 0x40
 8004528:	4818      	ldr	r0, [pc, #96]	; (800458c <Motor_Drive_Task+0x31c>)
 800452a:	f005 f8af 	bl	800968c <HAL_GPIO_WritePin>
		if(mode==SKILL)
 800452e:	e03f      	b.n	80045b0 <Motor_Drive_Task+0x340>
 8004530:	30be0ded 	.word	0x30be0ded
 8004534:	3fd02a99 	.word	0x3fd02a99
 8004538:	9b3d07c8 	.word	0x9b3d07c8
 800453c:	3fef9f55 	.word	0x3fef9f55
 8004540:	30be0e00 	.word	0x30be0e00
 8004544:	3f882a99 	.word	0x3f882a99
 8004548:	20000040 	.word	0x20000040
 800454c:	20000c58 	.word	0x20000c58
 8004550:	20000c59 	.word	0x20000c59
 8004554:	20000338 	.word	0x20000338
 8004558:	20000754 	.word	0x20000754
 800455c:	20000030 	.word	0x20000030
 8004560:	2000075c 	.word	0x2000075c
 8004564:	20000760 	.word	0x20000760
 8004568:	445c0000 	.word	0x445c0000
 800456c:	445c0000 	.word	0x445c0000
 8004570:	c3fa0000 	.word	0xc3fa0000
 8004574:	c3fa0000 	.word	0xc3fa0000
 8004578:	20000764 	.word	0x20000764
 800457c:	20000336 	.word	0x20000336
 8004580:	43480000 	.word	0x43480000
 8004584:	20000768 	.word	0x20000768
 8004588:	2000076c 	.word	0x2000076c
 800458c:	40020400 	.word	0x40020400
 8004590:	42c80000 	.word	0x42c80000
		}

	}
	else
	{	f=u=0;
 8004594:	4b2c      	ldr	r3, [pc, #176]	; (8004648 <Motor_Drive_Task+0x3d8>)
 8004596:	f04f 0200 	mov.w	r2, #0
 800459a:	601a      	str	r2, [r3, #0]
 800459c:	4b2a      	ldr	r3, [pc, #168]	; (8004648 <Motor_Drive_Task+0x3d8>)
 800459e:	681b      	ldr	r3, [r3, #0]
 80045a0:	4a2a      	ldr	r2, [pc, #168]	; (800464c <Motor_Drive_Task+0x3dc>)
 80045a2:	6013      	str	r3, [r2, #0]
		MOTOR_EN(0); //amugy stop
 80045a4:	2200      	movs	r2, #0
 80045a6:	2140      	movs	r1, #64	; 0x40
 80045a8:	4829      	ldr	r0, [pc, #164]	; (8004650 <Motor_Drive_Task+0x3e0>)
 80045aa:	f005 f86f 	bl	800968c <HAL_GPIO_WritePin>
 80045ae:	e000      	b.n	80045b2 <Motor_Drive_Task+0x342>
		if(mode==SKILL)
 80045b0:	bf00      	nop
	}
	//A két érték amit irogatsz (TIM3->CCR1,CCR2) konkrét timer periféria regiszterek, nem feltétlen jó őket folyamatosan újraírni 10ms enként
	/**/
	if(mode==FAST && rxBuf[1]<1 && !leaveLineEnabled)
 80045b2:	4b28      	ldr	r3, [pc, #160]	; (8004654 <Motor_Drive_Task+0x3e4>)
 80045b4:	781b      	ldrb	r3, [r3, #0]
 80045b6:	2b3f      	cmp	r3, #63	; 0x3f
 80045b8:	d110      	bne.n	80045dc <Motor_Drive_Task+0x36c>
 80045ba:	4b27      	ldr	r3, [pc, #156]	; (8004658 <Motor_Drive_Task+0x3e8>)
 80045bc:	785b      	ldrb	r3, [r3, #1]
 80045be:	2b00      	cmp	r3, #0
 80045c0:	d10c      	bne.n	80045dc <Motor_Drive_Task+0x36c>
 80045c2:	4b26      	ldr	r3, [pc, #152]	; (800465c <Motor_Drive_Task+0x3ec>)
 80045c4:	781b      	ldrb	r3, [r3, #0]
 80045c6:	2b00      	cmp	r3, #0
 80045c8:	d108      	bne.n	80045dc <Motor_Drive_Task+0x36c>
	{
		TIM3->CCR1=499;
 80045ca:	4b25      	ldr	r3, [pc, #148]	; (8004660 <Motor_Drive_Task+0x3f0>)
 80045cc:	f240 12f3 	movw	r2, #499	; 0x1f3
 80045d0:	635a      	str	r2, [r3, #52]	; 0x34
		TIM3->CCR2=499;
 80045d2:	4b23      	ldr	r3, [pc, #140]	; (8004660 <Motor_Drive_Task+0x3f0>)
 80045d4:	f240 12f3 	movw	r2, #499	; 0x1f3
 80045d8:	639a      	str	r2, [r3, #56]	; 0x38
 80045da:	e027      	b.n	800462c <Motor_Drive_Task+0x3bc>
		//LED_Y_TOGGLE;
	}
	else if(motorDuty!=motorDutyPrev)//csak akkor írjuk át őket ha tényleg muszáj (ha változtak az előző taskhívás óta)
 80045dc:	4b21      	ldr	r3, [pc, #132]	; (8004664 <Motor_Drive_Task+0x3f4>)
 80045de:	681a      	ldr	r2, [r3, #0]
 80045e0:	4b21      	ldr	r3, [pc, #132]	; (8004668 <Motor_Drive_Task+0x3f8>)
 80045e2:	681b      	ldr	r3, [r3, #0]
 80045e4:	429a      	cmp	r2, r3
 80045e6:	d021      	beq.n	800462c <Motor_Drive_Task+0x3bc>
	{
		ccr2 = (motorDuty + 1000)/2-1;
 80045e8:	4b1e      	ldr	r3, [pc, #120]	; (8004664 <Motor_Drive_Task+0x3f4>)
 80045ea:	681b      	ldr	r3, [r3, #0]
 80045ec:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 80045f0:	0fda      	lsrs	r2, r3, #31
 80045f2:	4413      	add	r3, r2
 80045f4:	105b      	asrs	r3, r3, #1
 80045f6:	3b01      	subs	r3, #1
 80045f8:	617b      	str	r3, [r7, #20]
		if(ccr2>950)ccr2=950;
 80045fa:	697b      	ldr	r3, [r7, #20]
 80045fc:	f240 32b6 	movw	r2, #950	; 0x3b6
 8004600:	4293      	cmp	r3, r2
 8004602:	dd02      	ble.n	800460a <Motor_Drive_Task+0x39a>
 8004604:	f240 33b6 	movw	r3, #950	; 0x3b6
 8004608:	617b      	str	r3, [r7, #20]
		if(ccr2<-950)ccr2=-950;
 800460a:	697b      	ldr	r3, [r7, #20]
 800460c:	4a17      	ldr	r2, [pc, #92]	; (800466c <Motor_Drive_Task+0x3fc>)
 800460e:	4293      	cmp	r3, r2
 8004610:	da01      	bge.n	8004616 <Motor_Drive_Task+0x3a6>
 8004612:	4b16      	ldr	r3, [pc, #88]	; (800466c <Motor_Drive_Task+0x3fc>)
 8004614:	617b      	str	r3, [r7, #20]
		ccr1= 998-ccr2;
 8004616:	697b      	ldr	r3, [r7, #20]
 8004618:	f5c3 7379 	rsb	r3, r3, #996	; 0x3e4
 800461c:	3302      	adds	r3, #2
 800461e:	613b      	str	r3, [r7, #16]

		//2 Referencia megadása
		//Ezeket a loopba kéne változtatni folyamatosan, pwm-elinditas mashova kell majd

		TIM3->CCR1=ccr1;
 8004620:	4a0f      	ldr	r2, [pc, #60]	; (8004660 <Motor_Drive_Task+0x3f0>)
 8004622:	693b      	ldr	r3, [r7, #16]
 8004624:	6353      	str	r3, [r2, #52]	; 0x34
		TIM3->CCR2=ccr2;
 8004626:	4a0e      	ldr	r2, [pc, #56]	; (8004660 <Motor_Drive_Task+0x3f0>)
 8004628:	697b      	ldr	r3, [r7, #20]
 800462a:	6393      	str	r3, [r2, #56]	; 0x38
	}
	motorDutyPrev=motorDuty;
 800462c:	4b0d      	ldr	r3, [pc, #52]	; (8004664 <Motor_Drive_Task+0x3f4>)
 800462e:	681b      	ldr	r3, [r3, #0]
 8004630:	4a0d      	ldr	r2, [pc, #52]	; (8004668 <Motor_Drive_Task+0x3f8>)
 8004632:	6013      	str	r3, [r2, #0]
	v_prev=v;
 8004634:	4b0e      	ldr	r3, [pc, #56]	; (8004670 <Motor_Drive_Task+0x400>)
 8004636:	681b      	ldr	r3, [r3, #0]
 8004638:	4a0e      	ldr	r2, [pc, #56]	; (8004674 <Motor_Drive_Task+0x404>)
 800463a:	6013      	str	r3, [r2, #0]
 800463c:	e000      	b.n	8004640 <Motor_Drive_Task+0x3d0>
	if(motor_drive_task_tick>tick) return;
 800463e:	bf00      	nop
}
 8004640:	3718      	adds	r7, #24
 8004642:	46bd      	mov	sp, r7
 8004644:	bdb0      	pop	{r4, r5, r7, pc}
 8004646:	bf00      	nop
 8004648:	20000760 	.word	0x20000760
 800464c:	2000075c 	.word	0x2000075c
 8004650:	40020400 	.word	0x40020400
 8004654:	20000336 	.word	0x20000336
 8004658:	20000774 	.word	0x20000774
 800465c:	2000033c 	.word	0x2000033c
 8004660:	40000400 	.word	0x40000400
 8004664:	20000764 	.word	0x20000764
 8004668:	20000770 	.word	0x20000770
 800466c:	fffffc4a 	.word	0xfffffc4a
 8004670:	20000754 	.word	0x20000754
 8004674:	20000768 	.word	0x20000768

08004678 <G0_Read_Fast>:

uint16_t boostCnt=1;


uint8_t G0_Read_Fast(UART_HandleTypeDef *huart_stm,UART_HandleTypeDef *huart_debugg)
{
 8004678:	b580      	push	{r7, lr}
 800467a:	b084      	sub	sp, #16
 800467c:	af00      	add	r7, sp, #0
 800467e:	6078      	str	r0, [r7, #4]
 8004680:	6039      	str	r1, [r7, #0]

	uint8_t state=0;
 8004682:	2300      	movs	r3, #0
 8004684:	73fb      	strb	r3, [r7, #15]
	txBuf[0]=CMD_READ_FAST;
 8004686:	4b13      	ldr	r3, [pc, #76]	; (80046d4 <G0_Read_Fast+0x5c>)
 8004688:	222a      	movs	r2, #42	; 0x2a
 800468a:	701a      	strb	r2, [r3, #0]
	HAL_UART_Transmit(huart_stm, txBuf,1, 2);
 800468c:	2302      	movs	r3, #2
 800468e:	2201      	movs	r2, #1
 8004690:	4910      	ldr	r1, [pc, #64]	; (80046d4 <G0_Read_Fast+0x5c>)
 8004692:	6878      	ldr	r0, [r7, #4]
 8004694:	f007 fd4d 	bl	800c132 <HAL_UART_Transmit>
	state=HAL_UART_Receive(huart_stm, rxBuf, 8, 4);
 8004698:	2304      	movs	r3, #4
 800469a:	2208      	movs	r2, #8
 800469c:	490e      	ldr	r1, [pc, #56]	; (80046d8 <G0_Read_Fast+0x60>)
 800469e:	6878      	ldr	r0, [r7, #4]
 80046a0:	f007 fdd9 	bl	800c256 <HAL_UART_Receive>
 80046a4:	4603      	mov	r3, r0
 80046a6:	73fb      	strb	r3, [r7, #15]
	motorEnLineOk=1; //ha van akkor mehet a szabályozás
 80046a8:	4b0c      	ldr	r3, [pc, #48]	; (80046dc <G0_Read_Fast+0x64>)
 80046aa:	2201      	movs	r2, #1
 80046ac:	701a      	strb	r2, [r3, #0]
	if((state==HAL_OK)&&(rxBuf[0]==START_BYTE_FAST) && (rxBuf[7]==STOP_BYTE))//jöt adat a G0 tól és a keret is megfelelő
 80046ae:	7bfb      	ldrb	r3, [r7, #15]
 80046b0:	2b00      	cmp	r3, #0
 80046b2:	d109      	bne.n	80046c8 <G0_Read_Fast+0x50>
 80046b4:	4b08      	ldr	r3, [pc, #32]	; (80046d8 <G0_Read_Fast+0x60>)
 80046b6:	781b      	ldrb	r3, [r3, #0]
 80046b8:	2b41      	cmp	r3, #65	; 0x41
 80046ba:	d105      	bne.n	80046c8 <G0_Read_Fast+0x50>
 80046bc:	4b06      	ldr	r3, [pc, #24]	; (80046d8 <G0_Read_Fast+0x60>)
 80046be:	79db      	ldrb	r3, [r3, #7]
 80046c0:	2b12      	cmp	r3, #18
 80046c2:	d101      	bne.n	80046c8 <G0_Read_Fast+0x50>
	{
		return 0;
 80046c4:	2300      	movs	r3, #0
 80046c6:	e000      	b.n	80046ca <G0_Read_Fast+0x52>
	}
	else //nem jött szabályos adat a G0-tól
	{
		return 1;
 80046c8:	2301      	movs	r3, #1
	}
}
 80046ca:	4618      	mov	r0, r3
 80046cc:	3710      	adds	r7, #16
 80046ce:	46bd      	mov	sp, r7
 80046d0:	bd80      	pop	{r7, pc}
 80046d2:	bf00      	nop
 80046d4:	20000044 	.word	0x20000044
 80046d8:	20000774 	.word	0x20000774
 80046dc:	20000c59 	.word	0x20000c59

080046e0 <G0_Read_Skill>:

uint8_t G0_Read_Skill(UART_HandleTypeDef *huart_stm,UART_HandleTypeDef *huart_debugg, uint8_t command)
{
 80046e0:	b580      	push	{r7, lr}
 80046e2:	b086      	sub	sp, #24
 80046e4:	af00      	add	r7, sp, #0
 80046e6:	60f8      	str	r0, [r7, #12]
 80046e8:	60b9      	str	r1, [r7, #8]
 80046ea:	4613      	mov	r3, r2
 80046ec:	71fb      	strb	r3, [r7, #7]
	uint8_t state=0;
 80046ee:	2300      	movs	r3, #0
 80046f0:	75fb      	strb	r3, [r7, #23]
	txBuf[0]=command;
 80046f2:	4a15      	ldr	r2, [pc, #84]	; (8004748 <G0_Read_Skill+0x68>)
 80046f4:	79fb      	ldrb	r3, [r7, #7]
 80046f6:	7013      	strb	r3, [r2, #0]
	HAL_UART_Transmit(huart_stm, txBuf,1, 2);
 80046f8:	2302      	movs	r3, #2
 80046fa:	2201      	movs	r2, #1
 80046fc:	4912      	ldr	r1, [pc, #72]	; (8004748 <G0_Read_Skill+0x68>)
 80046fe:	68f8      	ldr	r0, [r7, #12]
 8004700:	f007 fd17 	bl	800c132 <HAL_UART_Transmit>
	state = HAL_UART_Receive(huart_stm, rxBuf, 10, 4);
 8004704:	2304      	movs	r3, #4
 8004706:	220a      	movs	r2, #10
 8004708:	4910      	ldr	r1, [pc, #64]	; (800474c <G0_Read_Skill+0x6c>)
 800470a:	68f8      	ldr	r0, [r7, #12]
 800470c:	f007 fda3 	bl	800c256 <HAL_UART_Receive>
 8004710:	4603      	mov	r3, r0
 8004712:	75fb      	strb	r3, [r7, #23]
	motorEnLineOk=1; //ha van akkor mehet a szabályozás
 8004714:	4b0e      	ldr	r3, [pc, #56]	; (8004750 <G0_Read_Skill+0x70>)
 8004716:	2201      	movs	r2, #1
 8004718:	701a      	strb	r2, [r3, #0]
	if((state==HAL_OK)&&(rxBuf[0]==START_BYTE_SKILL_FORWARD || rxBuf[0]==START_BYTE_SKILL_REVERSE) && (rxBuf[9]==STOP_BYTE))//jöt adat a G0 tól és a keret is megfelelő
 800471a:	7dfb      	ldrb	r3, [r7, #23]
 800471c:	2b00      	cmp	r3, #0
 800471e:	d10d      	bne.n	800473c <G0_Read_Skill+0x5c>
 8004720:	4b0a      	ldr	r3, [pc, #40]	; (800474c <G0_Read_Skill+0x6c>)
 8004722:	781b      	ldrb	r3, [r3, #0]
 8004724:	2b50      	cmp	r3, #80	; 0x50
 8004726:	d003      	beq.n	8004730 <G0_Read_Skill+0x50>
 8004728:	4b08      	ldr	r3, [pc, #32]	; (800474c <G0_Read_Skill+0x6c>)
 800472a:	781b      	ldrb	r3, [r3, #0]
 800472c:	2ba8      	cmp	r3, #168	; 0xa8
 800472e:	d105      	bne.n	800473c <G0_Read_Skill+0x5c>
 8004730:	4b06      	ldr	r3, [pc, #24]	; (800474c <G0_Read_Skill+0x6c>)
 8004732:	7a5b      	ldrb	r3, [r3, #9]
 8004734:	2b12      	cmp	r3, #18
 8004736:	d101      	bne.n	800473c <G0_Read_Skill+0x5c>
	{
		return 0;
 8004738:	2300      	movs	r3, #0
 800473a:	e000      	b.n	800473e <G0_Read_Skill+0x5e>
	}
	else //nem jött szabályos adat a G0-tól
	{
		return 1;
 800473c:	2301      	movs	r3, #1
	}
}
 800473e:	4618      	mov	r0, r3
 8004740:	3718      	adds	r7, #24
 8004742:	46bd      	mov	sp, r7
 8004744:	bd80      	pop	{r7, pc}
 8004746:	bf00      	nop
 8004748:	20000044 	.word	0x20000044
 800474c:	20000774 	.word	0x20000774
 8004750:	20000c59 	.word	0x20000c59
 8004754:	00000000 	.word	0x00000000

08004758 <Line_Track_Task>:


void Line_Track_Task(UART_HandleTypeDef *huart_stm,UART_HandleTypeDef *huart_debugg, uint32_t tick, uint32_t period)
{
 8004758:	b580      	push	{r7, lr}
 800475a:	b086      	sub	sp, #24
 800475c:	af00      	add	r7, sp, #0
 800475e:	60f8      	str	r0, [r7, #12]
 8004760:	60b9      	str	r1, [r7, #8]
 8004762:	607a      	str	r2, [r7, #4]
 8004764:	603b      	str	r3, [r7, #0]
	static float PHI;
	static float gamma=0;
	static uint32_t ccr_rear_prev=0;
	static uint32_t tick_prev=0;

	if(line_track_task_tick>tick) return;
 8004766:	4ba6      	ldr	r3, [pc, #664]	; (8004a00 <Line_Track_Task+0x2a8>)
 8004768:	681b      	ldr	r3, [r3, #0]
 800476a:	687a      	ldr	r2, [r7, #4]
 800476c:	429a      	cmp	r2, r3
 800476e:	f0c0 83fd 	bcc.w	8004f6c <Line_Track_Task+0x814>
	line_track_task_tick = tick + period;
 8004772:	687a      	ldr	r2, [r7, #4]
 8004774:	683b      	ldr	r3, [r7, #0]
 8004776:	4413      	add	r3, r2
 8004778:	4aa1      	ldr	r2, [pc, #644]	; (8004a00 <Line_Track_Task+0x2a8>)
 800477a:	6013      	str	r3, [r2, #0]

	if(mode == SKILL)
 800477c:	4ba1      	ldr	r3, [pc, #644]	; (8004a04 <Line_Track_Task+0x2ac>)
 800477e:	781b      	ldrb	r3, [r3, #0]
 8004780:	2b52      	cmp	r3, #82	; 0x52
 8004782:	f040 8236 	bne.w	8004bf2 <Line_Track_Task+0x49a>
	{
		if(orientation==FORWARD)
 8004786:	4ba0      	ldr	r3, [pc, #640]	; (8004a08 <Line_Track_Task+0x2b0>)
 8004788:	781b      	ldrb	r3, [r3, #0]
 800478a:	2b00      	cmp	r3, #0
 800478c:	f040 80fa 	bne.w	8004984 <Line_Track_Task+0x22c>
		{
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_FORWARD))return;
 8004790:	2239      	movs	r2, #57	; 0x39
 8004792:	68b9      	ldr	r1, [r7, #8]
 8004794:	68f8      	ldr	r0, [r7, #12]
 8004796:	f7ff ffa3 	bl	80046e0 <G0_Read_Skill>
 800479a:	4603      	mov	r3, r0
 800479c:	2b00      	cmp	r3, #0
 800479e:	f040 83e7 	bne.w	8004f70 <Line_Track_Task+0x818>

			uint8_t tmp=Lane_Changer(huart_debugg,tick);
 80047a2:	6879      	ldr	r1, [r7, #4]
 80047a4:	68b8      	ldr	r0, [r7, #8]
 80047a6:	f001 fa2f 	bl	8005c08 <Lane_Changer>
 80047aa:	4603      	mov	r3, r0
 80047ac:	75bb      	strb	r3, [r7, #22]
			if(v_control==NORMAL_VEL)v_ref=1100;
 80047ae:	4b97      	ldr	r3, [pc, #604]	; (8004a0c <Line_Track_Task+0x2b4>)
 80047b0:	781b      	ldrb	r3, [r3, #0]
 80047b2:	2b02      	cmp	r3, #2
 80047b4:	d103      	bne.n	80047be <Line_Track_Task+0x66>
 80047b6:	4b96      	ldr	r3, [pc, #600]	; (8004a10 <Line_Track_Task+0x2b8>)
 80047b8:	4a96      	ldr	r2, [pc, #600]	; (8004a14 <Line_Track_Task+0x2bc>)
 80047ba:	601a      	str	r2, [r3, #0]
 80047bc:	e01f      	b.n	80047fe <Line_Track_Task+0xa6>
			else if(v_control==SLOW_DOWN)v_ref=600;
 80047be:	4b93      	ldr	r3, [pc, #588]	; (8004a0c <Line_Track_Task+0x2b4>)
 80047c0:	781b      	ldrb	r3, [r3, #0]
 80047c2:	2b01      	cmp	r3, #1
 80047c4:	d103      	bne.n	80047ce <Line_Track_Task+0x76>
 80047c6:	4b92      	ldr	r3, [pc, #584]	; (8004a10 <Line_Track_Task+0x2b8>)
 80047c8:	4a93      	ldr	r2, [pc, #588]	; (8004a18 <Line_Track_Task+0x2c0>)
 80047ca:	601a      	str	r2, [r3, #0]
 80047cc:	e017      	b.n	80047fe <Line_Track_Task+0xa6>
			else if(v_control==STOP)v_ref=-199;
 80047ce:	4b8f      	ldr	r3, [pc, #572]	; (8004a0c <Line_Track_Task+0x2b4>)
 80047d0:	781b      	ldrb	r3, [r3, #0]
 80047d2:	2b00      	cmp	r3, #0
 80047d4:	d103      	bne.n	80047de <Line_Track_Task+0x86>
 80047d6:	4b8e      	ldr	r3, [pc, #568]	; (8004a10 <Line_Track_Task+0x2b8>)
 80047d8:	4a90      	ldr	r2, [pc, #576]	; (8004a1c <Line_Track_Task+0x2c4>)
 80047da:	601a      	str	r2, [r3, #0]
 80047dc:	e00f      	b.n	80047fe <Line_Track_Task+0xa6>
			else if(v_control==SPEED_UP)v_ref=1200;
 80047de:	4b8b      	ldr	r3, [pc, #556]	; (8004a0c <Line_Track_Task+0x2b4>)
 80047e0:	781b      	ldrb	r3, [r3, #0]
 80047e2:	2b03      	cmp	r3, #3
 80047e4:	d103      	bne.n	80047ee <Line_Track_Task+0x96>
 80047e6:	4b8a      	ldr	r3, [pc, #552]	; (8004a10 <Line_Track_Task+0x2b8>)
 80047e8:	4a8d      	ldr	r2, [pc, #564]	; (8004a20 <Line_Track_Task+0x2c8>)
 80047ea:	601a      	str	r2, [r3, #0]
 80047ec:	e007      	b.n	80047fe <Line_Track_Task+0xa6>
			else if(v_control==SLEEP)v_ref=0;
 80047ee:	4b87      	ldr	r3, [pc, #540]	; (8004a0c <Line_Track_Task+0x2b4>)
 80047f0:	781b      	ldrb	r3, [r3, #0]
 80047f2:	2b04      	cmp	r3, #4
 80047f4:	d103      	bne.n	80047fe <Line_Track_Task+0xa6>
 80047f6:	4b86      	ldr	r3, [pc, #536]	; (8004a10 <Line_Track_Task+0x2b8>)
 80047f8:	f04f 0200 	mov.w	r2, #0
 80047fc:	601a      	str	r2, [r3, #0]
			if(tmp)return;
 80047fe:	7dbb      	ldrb	r3, [r7, #22]
 8004800:	2b00      	cmp	r3, #0
 8004802:	f040 83b7 	bne.w	8004f74 <Line_Track_Task+0x81c>

			if(v_control==SPEED_UP)Detect_Node5(huart_debugg, tick);
 8004806:	4b81      	ldr	r3, [pc, #516]	; (8004a0c <Line_Track_Task+0x2b4>)
 8004808:	781b      	ldrb	r3, [r3, #0]
 800480a:	2b03      	cmp	r3, #3
 800480c:	d104      	bne.n	8004818 <Line_Track_Task+0xc0>
 800480e:	6879      	ldr	r1, [r7, #4]
 8004810:	68b8      	ldr	r0, [r7, #8]
 8004812:	f001 f965 	bl	8005ae0 <Detect_Node5>
 8004816:	e003      	b.n	8004820 <Line_Track_Task+0xc8>
			else Detect_Node4(huart_debugg, tick);
 8004818:	6879      	ldr	r1, [r7, #4]
 800481a:	68b8      	ldr	r0, [r7, #8]
 800481c:	f001 f8cc 	bl	80059b8 <Detect_Node4>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 8004820:	4b80      	ldr	r3, [pc, #512]	; (8004a24 <Line_Track_Task+0x2cc>)
 8004822:	785b      	ldrb	r3, [r3, #1]
 8004824:	2b00      	cmp	r3, #0
 8004826:	f000 83a7 	beq.w	8004f78 <Line_Track_Task+0x820>
 800482a:	4b7e      	ldr	r3, [pc, #504]	; (8004a24 <Line_Track_Task+0x2cc>)
 800482c:	785b      	ldrb	r3, [r3, #1]
 800482e:	2b04      	cmp	r3, #4
 8004830:	f200 83a2 	bhi.w	8004f78 <Line_Track_Task+0x820>
			gamma = Skill_Mode(huart_debugg, 0.004, 0.004, tick); //kD 4ms -es futáshoz hangolva
 8004834:	6879      	ldr	r1, [r7, #4]
 8004836:	eddf 0a7c 	vldr	s1, [pc, #496]	; 8004a28 <Line_Track_Task+0x2d0>
 800483a:	ed9f 0a7b 	vldr	s0, [pc, #492]	; 8004a28 <Line_Track_Task+0x2d0>
 800483e:	68b8      	ldr	r0, [r7, #8]
 8004840:	f000 ff82 	bl	8005748 <Skill_Mode>
 8004844:	eef0 7a40 	vmov.f32	s15, s0
 8004848:	4b78      	ldr	r3, [pc, #480]	; (8004a2c <Line_Track_Task+0x2d4>)
 800484a:	edc3 7a00 	vstr	s15, [r3]

			//ELSŐSZERVÓ ELŐREMENETBEN
			PHI = atan((L/(L+D_FRONT))*tan(gamma));
 800484e:	4b77      	ldr	r3, [pc, #476]	; (8004a2c <Line_Track_Task+0x2d4>)
 8004850:	681b      	ldr	r3, [r3, #0]
 8004852:	4618      	mov	r0, r3
 8004854:	f7fb fe98 	bl	8000588 <__aeabi_f2d>
 8004858:	4602      	mov	r2, r0
 800485a:	460b      	mov	r3, r1
 800485c:	ec43 2b10 	vmov	d0, r2, r3
 8004860:	f00b fdf6 	bl	8010450 <tan>
 8004864:	ec51 0b10 	vmov	r0, r1, d0
 8004868:	a361      	add	r3, pc, #388	; (adr r3, 80049f0 <Line_Track_Task+0x298>)
 800486a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800486e:	f7fb fee3 	bl	8000638 <__aeabi_dmul>
 8004872:	4602      	mov	r2, r0
 8004874:	460b      	mov	r3, r1
 8004876:	ec43 2b17 	vmov	d7, r2, r3
 800487a:	eeb0 0a47 	vmov.f32	s0, s14
 800487e:	eef0 0a67 	vmov.f32	s1, s15
 8004882:	f00b fc39 	bl	80100f8 <atan>
 8004886:	ec53 2b10 	vmov	r2, r3, d0
 800488a:	4610      	mov	r0, r2
 800488c:	4619      	mov	r1, r3
 800488e:	f7fc f9ab 	bl	8000be8 <__aeabi_d2f>
 8004892:	4603      	mov	r3, r0
 8004894:	4a66      	ldr	r2, [pc, #408]	; (8004a30 <Line_Track_Task+0x2d8>)
 8004896:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_FRONT_CCR_MIDDLE);//balra kanyarodás
 8004898:	4b65      	ldr	r3, [pc, #404]	; (8004a30 <Line_Track_Task+0x2d8>)
 800489a:	edd3 7a00 	vldr	s15, [r3]
 800489e:	ed9f 7a65 	vldr	s14, [pc, #404]	; 8004a34 <Line_Track_Task+0x2dc>
 80048a2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80048a6:	ed9f 7a64 	vldr	s14, [pc, #400]	; 8004a38 <Line_Track_Task+0x2e0>
 80048aa:	ee77 7a87 	vadd.f32	s15, s15, s14
 80048ae:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80048b2:	ee17 3a90 	vmov	r3, s15
 80048b6:	b29b      	uxth	r3, r3
 80048b8:	461a      	mov	r2, r3
 80048ba:	4b60      	ldr	r3, [pc, #384]	; (8004a3c <Line_Track_Task+0x2e4>)
 80048bc:	601a      	str	r2, [r3, #0]
			//ne feszítsük neki a mechanikai határnak a szervót
			FRONT_CCR(ccr);
 80048be:	4b5f      	ldr	r3, [pc, #380]	; (8004a3c <Line_Track_Task+0x2e4>)
 80048c0:	681b      	ldr	r3, [r3, #0]
 80048c2:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 80048c6:	dc07      	bgt.n	80048d8 <Line_Track_Task+0x180>
 80048c8:	4b5c      	ldr	r3, [pc, #368]	; (8004a3c <Line_Track_Task+0x2e4>)
 80048ca:	681b      	ldr	r3, [r3, #0]
 80048cc:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 80048d0:	bfb8      	it	lt
 80048d2:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 80048d6:	e001      	b.n	80048dc <Line_Track_Task+0x184>
 80048d8:	f44f 7361 	mov.w	r3, #900	; 0x384
 80048dc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80048e0:	6353      	str	r3, [r2, #52]	; 0x34

			//HÁTSÓSZERVÓ ELŐREMENETBEN
			PHI = atan((L/(L+D_REAR))*tan(gamma))/3;
 80048e2:	4b52      	ldr	r3, [pc, #328]	; (8004a2c <Line_Track_Task+0x2d4>)
 80048e4:	681b      	ldr	r3, [r3, #0]
 80048e6:	4618      	mov	r0, r3
 80048e8:	f7fb fe4e 	bl	8000588 <__aeabi_f2d>
 80048ec:	4602      	mov	r2, r0
 80048ee:	460b      	mov	r3, r1
 80048f0:	ec43 2b10 	vmov	d0, r2, r3
 80048f4:	f00b fdac 	bl	8010450 <tan>
 80048f8:	ec51 0b10 	vmov	r0, r1, d0
 80048fc:	a33e      	add	r3, pc, #248	; (adr r3, 80049f8 <Line_Track_Task+0x2a0>)
 80048fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004902:	f7fb fe99 	bl	8000638 <__aeabi_dmul>
 8004906:	4602      	mov	r2, r0
 8004908:	460b      	mov	r3, r1
 800490a:	ec43 2b17 	vmov	d7, r2, r3
 800490e:	eeb0 0a47 	vmov.f32	s0, s14
 8004912:	eef0 0a67 	vmov.f32	s1, s15
 8004916:	f00b fbef 	bl	80100f8 <atan>
 800491a:	ec51 0b10 	vmov	r0, r1, d0
 800491e:	f04f 0200 	mov.w	r2, #0
 8004922:	4b47      	ldr	r3, [pc, #284]	; (8004a40 <Line_Track_Task+0x2e8>)
 8004924:	f7fb ffb2 	bl	800088c <__aeabi_ddiv>
 8004928:	4602      	mov	r2, r0
 800492a:	460b      	mov	r3, r1
 800492c:	4610      	mov	r0, r2
 800492e:	4619      	mov	r1, r3
 8004930:	f7fc f95a 	bl	8000be8 <__aeabi_d2f>
 8004934:	4603      	mov	r3, r0
 8004936:	4a3e      	ldr	r2, [pc, #248]	; (8004a30 <Line_Track_Task+0x2d8>)
 8004938:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_REAR_CCR_MIDDLE);//balra kanyarodás
 800493a:	4b3d      	ldr	r3, [pc, #244]	; (8004a30 <Line_Track_Task+0x2d8>)
 800493c:	edd3 7a00 	vldr	s15, [r3]
 8004940:	ed9f 7a3c 	vldr	s14, [pc, #240]	; 8004a34 <Line_Track_Task+0x2dc>
 8004944:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004948:	ed9f 7a3e 	vldr	s14, [pc, #248]	; 8004a44 <Line_Track_Task+0x2ec>
 800494c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004950:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004954:	ee17 3a90 	vmov	r3, s15
 8004958:	b29b      	uxth	r3, r3
 800495a:	461a      	mov	r2, r3
 800495c:	4b37      	ldr	r3, [pc, #220]	; (8004a3c <Line_Track_Task+0x2e4>)
 800495e:	601a      	str	r2, [r3, #0]
			REAR_CCR(ccr);
 8004960:	4b36      	ldr	r3, [pc, #216]	; (8004a3c <Line_Track_Task+0x2e4>)
 8004962:	681b      	ldr	r3, [r3, #0]
 8004964:	f5b3 7f52 	cmp.w	r3, #840	; 0x348
 8004968:	dc07      	bgt.n	800497a <Line_Track_Task+0x222>
 800496a:	4b34      	ldr	r3, [pc, #208]	; (8004a3c <Line_Track_Task+0x2e4>)
 800496c:	681b      	ldr	r3, [r3, #0]
 800496e:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 8004972:	bfb8      	it	lt
 8004974:	f44f 7302 	movlt.w	r3, #520	; 0x208
 8004978:	e001      	b.n	800497e <Line_Track_Task+0x226>
 800497a:	f44f 7352 	mov.w	r3, #840	; 0x348
 800497e:	4a32      	ldr	r2, [pc, #200]	; (8004a48 <Line_Track_Task+0x2f0>)
 8004980:	6413      	str	r3, [r2, #64]	; 0x40
 8004982:	e2ef      	b.n	8004f64 <Line_Track_Task+0x80c>
		}
		else if(orientation==REVERSE)//TOLATÁS
 8004984:	4b20      	ldr	r3, [pc, #128]	; (8004a08 <Line_Track_Task+0x2b0>)
 8004986:	781b      	ldrb	r3, [r3, #0]
 8004988:	2b01      	cmp	r3, #1
 800498a:	f040 82eb 	bne.w	8004f64 <Line_Track_Task+0x80c>
		{
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_REVERSE))return;
 800498e:	2291      	movs	r2, #145	; 0x91
 8004990:	68b9      	ldr	r1, [r7, #8]
 8004992:	68f8      	ldr	r0, [r7, #12]
 8004994:	f7ff fea4 	bl	80046e0 <G0_Read_Skill>
 8004998:	4603      	mov	r3, r0
 800499a:	2b00      	cmp	r3, #0
 800499c:	f040 82ee 	bne.w	8004f7c <Line_Track_Task+0x824>

			uint8_t tmp=Lane_Changer(huart_debugg,tick);
 80049a0:	6879      	ldr	r1, [r7, #4]
 80049a2:	68b8      	ldr	r0, [r7, #8]
 80049a4:	f001 f930 	bl	8005c08 <Lane_Changer>
 80049a8:	4603      	mov	r3, r0
 80049aa:	75fb      	strb	r3, [r7, #23]
			if(v_control==NORMAL_VEL)v_ref=-1100;
 80049ac:	4b17      	ldr	r3, [pc, #92]	; (8004a0c <Line_Track_Task+0x2b4>)
 80049ae:	781b      	ldrb	r3, [r3, #0]
 80049b0:	2b02      	cmp	r3, #2
 80049b2:	d103      	bne.n	80049bc <Line_Track_Task+0x264>
 80049b4:	4b16      	ldr	r3, [pc, #88]	; (8004a10 <Line_Track_Task+0x2b8>)
 80049b6:	4a25      	ldr	r2, [pc, #148]	; (8004a4c <Line_Track_Task+0x2f4>)
 80049b8:	601a      	str	r2, [r3, #0]
 80049ba:	e057      	b.n	8004a6c <Line_Track_Task+0x314>
			else if(v_control==SLOW_DOWN)v_ref=-600;
 80049bc:	4b13      	ldr	r3, [pc, #76]	; (8004a0c <Line_Track_Task+0x2b4>)
 80049be:	781b      	ldrb	r3, [r3, #0]
 80049c0:	2b01      	cmp	r3, #1
 80049c2:	d103      	bne.n	80049cc <Line_Track_Task+0x274>
 80049c4:	4b12      	ldr	r3, [pc, #72]	; (8004a10 <Line_Track_Task+0x2b8>)
 80049c6:	4a22      	ldr	r2, [pc, #136]	; (8004a50 <Line_Track_Task+0x2f8>)
 80049c8:	601a      	str	r2, [r3, #0]
 80049ca:	e04f      	b.n	8004a6c <Line_Track_Task+0x314>
			else if(v_control==STOP)v_ref=199;
 80049cc:	4b0f      	ldr	r3, [pc, #60]	; (8004a0c <Line_Track_Task+0x2b4>)
 80049ce:	781b      	ldrb	r3, [r3, #0]
 80049d0:	2b00      	cmp	r3, #0
 80049d2:	d103      	bne.n	80049dc <Line_Track_Task+0x284>
 80049d4:	4b0e      	ldr	r3, [pc, #56]	; (8004a10 <Line_Track_Task+0x2b8>)
 80049d6:	4a1f      	ldr	r2, [pc, #124]	; (8004a54 <Line_Track_Task+0x2fc>)
 80049d8:	601a      	str	r2, [r3, #0]
 80049da:	e047      	b.n	8004a6c <Line_Track_Task+0x314>
			else if(v_control==SPEED_UP)v_ref=-1200;
 80049dc:	4b0b      	ldr	r3, [pc, #44]	; (8004a0c <Line_Track_Task+0x2b4>)
 80049de:	781b      	ldrb	r3, [r3, #0]
 80049e0:	2b03      	cmp	r3, #3
 80049e2:	d13b      	bne.n	8004a5c <Line_Track_Task+0x304>
 80049e4:	4b0a      	ldr	r3, [pc, #40]	; (8004a10 <Line_Track_Task+0x2b8>)
 80049e6:	4a1c      	ldr	r2, [pc, #112]	; (8004a58 <Line_Track_Task+0x300>)
 80049e8:	601a      	str	r2, [r3, #0]
 80049ea:	e03f      	b.n	8004a6c <Line_Track_Task+0x314>
 80049ec:	f3af 8000 	nop.w
 80049f0:	c4830201 	.word	0xc4830201
 80049f4:	3fe73a26 	.word	0x3fe73a26
 80049f8:	a3f47e90 	.word	0xa3f47e90
 80049fc:	3fe8fd1f 	.word	0x3fe8fd1f
 8004a00:	20000048 	.word	0x20000048
 8004a04:	20000336 	.word	0x20000336
 8004a08:	20000344 	.word	0x20000344
 8004a0c:	20000349 	.word	0x20000349
 8004a10:	20000338 	.word	0x20000338
 8004a14:	44898000 	.word	0x44898000
 8004a18:	44160000 	.word	0x44160000
 8004a1c:	c3470000 	.word	0xc3470000
 8004a20:	44960000 	.word	0x44960000
 8004a24:	20000774 	.word	0x20000774
 8004a28:	3b83126f 	.word	0x3b83126f
 8004a2c:	20000780 	.word	0x20000780
 8004a30:	20000784 	.word	0x20000784
 8004a34:	44af0000 	.word	0x44af0000
 8004a38:	442d0000 	.word	0x442d0000
 8004a3c:	2000004c 	.word	0x2000004c
 8004a40:	40080000 	.word	0x40080000
 8004a44:	442a0000 	.word	0x442a0000
 8004a48:	40010000 	.word	0x40010000
 8004a4c:	c4898000 	.word	0xc4898000
 8004a50:	c4160000 	.word	0xc4160000
 8004a54:	43470000 	.word	0x43470000
 8004a58:	c4960000 	.word	0xc4960000
			else if(v_control==SLEEP)v_ref=0;
 8004a5c:	4bba      	ldr	r3, [pc, #744]	; (8004d48 <Line_Track_Task+0x5f0>)
 8004a5e:	781b      	ldrb	r3, [r3, #0]
 8004a60:	2b04      	cmp	r3, #4
 8004a62:	d103      	bne.n	8004a6c <Line_Track_Task+0x314>
 8004a64:	4bb9      	ldr	r3, [pc, #740]	; (8004d4c <Line_Track_Task+0x5f4>)
 8004a66:	f04f 0200 	mov.w	r2, #0
 8004a6a:	601a      	str	r2, [r3, #0]
			if(tmp)return;
 8004a6c:	7dfb      	ldrb	r3, [r7, #23]
 8004a6e:	2b00      	cmp	r3, #0
 8004a70:	f040 8286 	bne.w	8004f80 <Line_Track_Task+0x828>
			if(v_control==SPEED_UP)Detect_Node5(huart_debugg, tick);
 8004a74:	4bb4      	ldr	r3, [pc, #720]	; (8004d48 <Line_Track_Task+0x5f0>)
 8004a76:	781b      	ldrb	r3, [r3, #0]
 8004a78:	2b03      	cmp	r3, #3
 8004a7a:	d104      	bne.n	8004a86 <Line_Track_Task+0x32e>
 8004a7c:	6879      	ldr	r1, [r7, #4]
 8004a7e:	68b8      	ldr	r0, [r7, #8]
 8004a80:	f001 f82e 	bl	8005ae0 <Detect_Node5>
 8004a84:	e003      	b.n	8004a8e <Line_Track_Task+0x336>
			else Detect_Node4(huart_debugg, tick);
 8004a86:	6879      	ldr	r1, [r7, #4]
 8004a88:	68b8      	ldr	r0, [r7, #8]
 8004a8a:	f000 ff95 	bl	80059b8 <Detect_Node4>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 8004a8e:	4bb0      	ldr	r3, [pc, #704]	; (8004d50 <Line_Track_Task+0x5f8>)
 8004a90:	785b      	ldrb	r3, [r3, #1]
 8004a92:	2b00      	cmp	r3, #0
 8004a94:	f000 8276 	beq.w	8004f84 <Line_Track_Task+0x82c>
 8004a98:	4bad      	ldr	r3, [pc, #692]	; (8004d50 <Line_Track_Task+0x5f8>)
 8004a9a:	785b      	ldrb	r3, [r3, #1]
 8004a9c:	2b04      	cmp	r3, #4
 8004a9e:	f200 8271 	bhi.w	8004f84 <Line_Track_Task+0x82c>
			gamma = Skill_Mode(huart_debugg, 0.003, 0.032, tick);
 8004aa2:	6879      	ldr	r1, [r7, #4]
 8004aa4:	eddf 0aab 	vldr	s1, [pc, #684]	; 8004d54 <Line_Track_Task+0x5fc>
 8004aa8:	ed9f 0aab 	vldr	s0, [pc, #684]	; 8004d58 <Line_Track_Task+0x600>
 8004aac:	68b8      	ldr	r0, [r7, #8]
 8004aae:	f000 fe4b 	bl	8005748 <Skill_Mode>
 8004ab2:	eef0 7a40 	vmov.f32	s15, s0
 8004ab6:	4ba9      	ldr	r3, [pc, #676]	; (8004d5c <Line_Track_Task+0x604>)
 8004ab8:	edc3 7a00 	vstr	s15, [r3]

			//HÁTSÓ SZERVÓ HÁTRAMENETBEN
			PHI = atan((L/(L+D_REAR))*tan(gamma));////////////////////kiszámolni kézzel
 8004abc:	4ba7      	ldr	r3, [pc, #668]	; (8004d5c <Line_Track_Task+0x604>)
 8004abe:	681b      	ldr	r3, [r3, #0]
 8004ac0:	4618      	mov	r0, r3
 8004ac2:	f7fb fd61 	bl	8000588 <__aeabi_f2d>
 8004ac6:	4602      	mov	r2, r0
 8004ac8:	460b      	mov	r3, r1
 8004aca:	ec43 2b10 	vmov	d0, r2, r3
 8004ace:	f00b fcbf 	bl	8010450 <tan>
 8004ad2:	ec51 0b10 	vmov	r0, r1, d0
 8004ad6:	a398      	add	r3, pc, #608	; (adr r3, 8004d38 <Line_Track_Task+0x5e0>)
 8004ad8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004adc:	f7fb fdac 	bl	8000638 <__aeabi_dmul>
 8004ae0:	4602      	mov	r2, r0
 8004ae2:	460b      	mov	r3, r1
 8004ae4:	ec43 2b17 	vmov	d7, r2, r3
 8004ae8:	eeb0 0a47 	vmov.f32	s0, s14
 8004aec:	eef0 0a67 	vmov.f32	s1, s15
 8004af0:	f00b fb02 	bl	80100f8 <atan>
 8004af4:	ec53 2b10 	vmov	r2, r3, d0
 8004af8:	4610      	mov	r0, r2
 8004afa:	4619      	mov	r1, r3
 8004afc:	f7fc f874 	bl	8000be8 <__aeabi_d2f>
 8004b00:	4603      	mov	r3, r0
 8004b02:	4a97      	ldr	r2, [pc, #604]	; (8004d60 <Line_Track_Task+0x608>)
 8004b04:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_REAR_CCR_MIDDLE);
 8004b06:	4b96      	ldr	r3, [pc, #600]	; (8004d60 <Line_Track_Task+0x608>)
 8004b08:	edd3 7a00 	vldr	s15, [r3]
 8004b0c:	ed9f 7a95 	vldr	s14, [pc, #596]	; 8004d64 <Line_Track_Task+0x60c>
 8004b10:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004b14:	ed9f 7a94 	vldr	s14, [pc, #592]	; 8004d68 <Line_Track_Task+0x610>
 8004b18:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004b1c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004b20:	ee17 3a90 	vmov	r3, s15
 8004b24:	b29b      	uxth	r3, r3
 8004b26:	461a      	mov	r2, r3
 8004b28:	4b90      	ldr	r3, [pc, #576]	; (8004d6c <Line_Track_Task+0x614>)
 8004b2a:	601a      	str	r2, [r3, #0]
			REAR_CCR(ccr);
 8004b2c:	4b8f      	ldr	r3, [pc, #572]	; (8004d6c <Line_Track_Task+0x614>)
 8004b2e:	681b      	ldr	r3, [r3, #0]
 8004b30:	f5b3 7f52 	cmp.w	r3, #840	; 0x348
 8004b34:	dc07      	bgt.n	8004b46 <Line_Track_Task+0x3ee>
 8004b36:	4b8d      	ldr	r3, [pc, #564]	; (8004d6c <Line_Track_Task+0x614>)
 8004b38:	681b      	ldr	r3, [r3, #0]
 8004b3a:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 8004b3e:	bfb8      	it	lt
 8004b40:	f44f 7302 	movlt.w	r3, #520	; 0x208
 8004b44:	e001      	b.n	8004b4a <Line_Track_Task+0x3f2>
 8004b46:	f44f 7352 	mov.w	r3, #840	; 0x348
 8004b4a:	4a89      	ldr	r2, [pc, #548]	; (8004d70 <Line_Track_Task+0x618>)
 8004b4c:	6413      	str	r3, [r2, #64]	; 0x40

			//ELSŐSZERVÓ HÁTRAMENETBEN
			PHI = atan((L/(L+D_FRONT))*tan(gamma))/3;
 8004b4e:	4b83      	ldr	r3, [pc, #524]	; (8004d5c <Line_Track_Task+0x604>)
 8004b50:	681b      	ldr	r3, [r3, #0]
 8004b52:	4618      	mov	r0, r3
 8004b54:	f7fb fd18 	bl	8000588 <__aeabi_f2d>
 8004b58:	4602      	mov	r2, r0
 8004b5a:	460b      	mov	r3, r1
 8004b5c:	ec43 2b10 	vmov	d0, r2, r3
 8004b60:	f00b fc76 	bl	8010450 <tan>
 8004b64:	ec51 0b10 	vmov	r0, r1, d0
 8004b68:	a375      	add	r3, pc, #468	; (adr r3, 8004d40 <Line_Track_Task+0x5e8>)
 8004b6a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004b6e:	f7fb fd63 	bl	8000638 <__aeabi_dmul>
 8004b72:	4602      	mov	r2, r0
 8004b74:	460b      	mov	r3, r1
 8004b76:	ec43 2b17 	vmov	d7, r2, r3
 8004b7a:	eeb0 0a47 	vmov.f32	s0, s14
 8004b7e:	eef0 0a67 	vmov.f32	s1, s15
 8004b82:	f00b fab9 	bl	80100f8 <atan>
 8004b86:	ec51 0b10 	vmov	r0, r1, d0
 8004b8a:	f04f 0200 	mov.w	r2, #0
 8004b8e:	4b79      	ldr	r3, [pc, #484]	; (8004d74 <Line_Track_Task+0x61c>)
 8004b90:	f7fb fe7c 	bl	800088c <__aeabi_ddiv>
 8004b94:	4602      	mov	r2, r0
 8004b96:	460b      	mov	r3, r1
 8004b98:	4610      	mov	r0, r2
 8004b9a:	4619      	mov	r1, r3
 8004b9c:	f7fc f824 	bl	8000be8 <__aeabi_d2f>
 8004ba0:	4603      	mov	r3, r0
 8004ba2:	4a6f      	ldr	r2, [pc, #444]	; (8004d60 <Line_Track_Task+0x608>)
 8004ba4:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_FRONT_CCR_MIDDLE);//balra kanyarodás
 8004ba6:	4b6e      	ldr	r3, [pc, #440]	; (8004d60 <Line_Track_Task+0x608>)
 8004ba8:	edd3 7a00 	vldr	s15, [r3]
 8004bac:	ed9f 7a6d 	vldr	s14, [pc, #436]	; 8004d64 <Line_Track_Task+0x60c>
 8004bb0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004bb4:	ed9f 7a70 	vldr	s14, [pc, #448]	; 8004d78 <Line_Track_Task+0x620>
 8004bb8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004bbc:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004bc0:	ee17 3a90 	vmov	r3, s15
 8004bc4:	b29b      	uxth	r3, r3
 8004bc6:	461a      	mov	r2, r3
 8004bc8:	4b68      	ldr	r3, [pc, #416]	; (8004d6c <Line_Track_Task+0x614>)
 8004bca:	601a      	str	r2, [r3, #0]
			FRONT_CCR(ccr);
 8004bcc:	4b67      	ldr	r3, [pc, #412]	; (8004d6c <Line_Track_Task+0x614>)
 8004bce:	681b      	ldr	r3, [r3, #0]
 8004bd0:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8004bd4:	dc07      	bgt.n	8004be6 <Line_Track_Task+0x48e>
 8004bd6:	4b65      	ldr	r3, [pc, #404]	; (8004d6c <Line_Track_Task+0x614>)
 8004bd8:	681b      	ldr	r3, [r3, #0]
 8004bda:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8004bde:	bfb8      	it	lt
 8004be0:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 8004be4:	e001      	b.n	8004bea <Line_Track_Task+0x492>
 8004be6:	f44f 7361 	mov.w	r3, #900	; 0x384
 8004bea:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004bee:	6353      	str	r3, [r2, #52]	; 0x34
 8004bf0:	e1b8      	b.n	8004f64 <Line_Track_Task+0x80c>
		}
	}
	/*****Gyorsasági pálya üzemmód******/
	else if(mode == FAST)
 8004bf2:	4b62      	ldr	r3, [pc, #392]	; (8004d7c <Line_Track_Task+0x624>)
 8004bf4:	781b      	ldrb	r3, [r3, #0]
 8004bf6:	2b3f      	cmp	r3, #63	; 0x3f
 8004bf8:	f040 81b4 	bne.w	8004f64 <Line_Track_Task+0x80c>
	{
		static uint8_t fast_mode_state=SC_MODE;

		if(G0_Read_Fast(huart_stm, huart_debugg)) return; //ha sikertelen az olvasás a G0 ból akkor nincs értelme az egésznek
 8004bfc:	68b9      	ldr	r1, [r7, #8]
 8004bfe:	68f8      	ldr	r0, [r7, #12]
 8004c00:	f7ff fd3a 	bl	8004678 <G0_Read_Fast>
 8004c04:	4603      	mov	r3, r0
 8004c06:	2b00      	cmp	r3, #0
 8004c08:	f040 81be 	bne.w	8004f88 <Line_Track_Task+0x830>
		if((LINE_CNT<1 || LINE_CNT > 3) && !leaveLineEnabled) return;//ha nincs vonal a kocsi alatt
 8004c0c:	4b50      	ldr	r3, [pc, #320]	; (8004d50 <Line_Track_Task+0x5f8>)
 8004c0e:	785b      	ldrb	r3, [r3, #1]
 8004c10:	2b00      	cmp	r3, #0
 8004c12:	d003      	beq.n	8004c1c <Line_Track_Task+0x4c4>
 8004c14:	4b4e      	ldr	r3, [pc, #312]	; (8004d50 <Line_Track_Task+0x5f8>)
 8004c16:	785b      	ldrb	r3, [r3, #1]
 8004c18:	2b03      	cmp	r3, #3
 8004c1a:	d904      	bls.n	8004c26 <Line_Track_Task+0x4ce>
 8004c1c:	4b58      	ldr	r3, [pc, #352]	; (8004d80 <Line_Track_Task+0x628>)
 8004c1e:	781b      	ldrb	r3, [r3, #0]
 8004c20:	2b00      	cmp	r3, #0
 8004c22:	f000 81b3 	beq.w	8004f8c <Line_Track_Task+0x834>
		gamma = Fast_Mode(huart_debugg, &fast_mode_state, tick);
 8004c26:	687a      	ldr	r2, [r7, #4]
 8004c28:	4956      	ldr	r1, [pc, #344]	; (8004d84 <Line_Track_Task+0x62c>)
 8004c2a:	68b8      	ldr	r0, [r7, #8]
 8004c2c:	f000 f9d8 	bl	8004fe0 <Fast_Mode>
 8004c30:	eef0 7a40 	vmov.f32	s15, s0
 8004c34:	4b49      	ldr	r3, [pc, #292]	; (8004d5c <Line_Track_Task+0x604>)
 8004c36:	edc3 7a00 	vstr	s15, [r3]
		PHI = atan((L/(L+D_FRONT))*tan(gamma));
 8004c3a:	4b48      	ldr	r3, [pc, #288]	; (8004d5c <Line_Track_Task+0x604>)
 8004c3c:	681b      	ldr	r3, [r3, #0]
 8004c3e:	4618      	mov	r0, r3
 8004c40:	f7fb fca2 	bl	8000588 <__aeabi_f2d>
 8004c44:	4602      	mov	r2, r0
 8004c46:	460b      	mov	r3, r1
 8004c48:	ec43 2b10 	vmov	d0, r2, r3
 8004c4c:	f00b fc00 	bl	8010450 <tan>
 8004c50:	ec51 0b10 	vmov	r0, r1, d0
 8004c54:	a33a      	add	r3, pc, #232	; (adr r3, 8004d40 <Line_Track_Task+0x5e8>)
 8004c56:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c5a:	f7fb fced 	bl	8000638 <__aeabi_dmul>
 8004c5e:	4602      	mov	r2, r0
 8004c60:	460b      	mov	r3, r1
 8004c62:	ec43 2b17 	vmov	d7, r2, r3
 8004c66:	eeb0 0a47 	vmov.f32	s0, s14
 8004c6a:	eef0 0a67 	vmov.f32	s1, s15
 8004c6e:	f00b fa43 	bl	80100f8 <atan>
 8004c72:	ec53 2b10 	vmov	r2, r3, d0
 8004c76:	4610      	mov	r0, r2
 8004c78:	4619      	mov	r1, r3
 8004c7a:	f7fb ffb5 	bl	8000be8 <__aeabi_d2f>
 8004c7e:	4603      	mov	r3, r0
 8004c80:	4a37      	ldr	r2, [pc, #220]	; (8004d60 <Line_Track_Task+0x608>)
 8004c82:	6013      	str	r3, [r2, #0]

		if(fast_mode_state==FREERUN_MODE)
 8004c84:	4b3f      	ldr	r3, [pc, #252]	; (8004d84 <Line_Track_Task+0x62c>)
 8004c86:	781b      	ldrb	r3, [r3, #0]
 8004c88:	2b01      	cmp	r3, #1
 8004c8a:	f040 80b9 	bne.w	8004e00 <Line_Track_Task+0x6a8>
		{
			if(v>2200)//egyenes
 8004c8e:	4b3e      	ldr	r3, [pc, #248]	; (8004d88 <Line_Track_Task+0x630>)
 8004c90:	edd3 7a00 	vldr	s15, [r3]
 8004c94:	ed9f 7a3d 	vldr	s14, [pc, #244]	; 8004d8c <Line_Track_Task+0x634>
 8004c98:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004c9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004ca0:	dd29      	ble.n	8004cf6 <Line_Track_Task+0x59e>
			{
				ccr = (uint16_t)(-SERVO_M_STRAIGHT * PHI + SERVO_FRONT_CCR_MIDDLE);
 8004ca2:	4b2f      	ldr	r3, [pc, #188]	; (8004d60 <Line_Track_Task+0x608>)
 8004ca4:	edd3 7a00 	vldr	s15, [r3]
 8004ca8:	ed9f 7a39 	vldr	s14, [pc, #228]	; 8004d90 <Line_Track_Task+0x638>
 8004cac:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004cb0:	ed9f 7a31 	vldr	s14, [pc, #196]	; 8004d78 <Line_Track_Task+0x620>
 8004cb4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004cb8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004cbc:	ee17 3a90 	vmov	r3, s15
 8004cc0:	b29b      	uxth	r3, r3
 8004cc2:	461a      	mov	r2, r3
 8004cc4:	4b29      	ldr	r3, [pc, #164]	; (8004d6c <Line_Track_Task+0x614>)
 8004cc6:	601a      	str	r2, [r3, #0]
				FRONT_CCR(ccr);
 8004cc8:	4b28      	ldr	r3, [pc, #160]	; (8004d6c <Line_Track_Task+0x614>)
 8004cca:	681b      	ldr	r3, [r3, #0]
 8004ccc:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8004cd0:	dc07      	bgt.n	8004ce2 <Line_Track_Task+0x58a>
 8004cd2:	4b26      	ldr	r3, [pc, #152]	; (8004d6c <Line_Track_Task+0x614>)
 8004cd4:	681b      	ldr	r3, [r3, #0]
 8004cd6:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8004cda:	bfb8      	it	lt
 8004cdc:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 8004ce0:	e001      	b.n	8004ce6 <Line_Track_Task+0x58e>
 8004ce2:	f44f 7361 	mov.w	r3, #900	; 0x384
 8004ce6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004cea:	6353      	str	r3, [r2, #52]	; 0x34
				REAR_CCR(SERVO_REAR_CCR_MIDDLE);
 8004cec:	4b20      	ldr	r3, [pc, #128]	; (8004d70 <Line_Track_Task+0x618>)
 8004cee:	f44f 722a 	mov.w	r2, #680	; 0x2a8
 8004cf2:	641a      	str	r2, [r3, #64]	; 0x40
 8004cf4:	e136      	b.n	8004f64 <Line_Track_Task+0x80c>
			}
			else//kanyar
			{
				//Első szervó
				ccr =(uint16_t)(-SERVO_M_CORNER * PHI + SERVO_FRONT_CCR_MIDDLE);
 8004cf6:	4b1a      	ldr	r3, [pc, #104]	; (8004d60 <Line_Track_Task+0x608>)
 8004cf8:	edd3 7a00 	vldr	s15, [r3]
 8004cfc:	ed9f 7a25 	vldr	s14, [pc, #148]	; 8004d94 <Line_Track_Task+0x63c>
 8004d00:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004d04:	ed9f 7a1c 	vldr	s14, [pc, #112]	; 8004d78 <Line_Track_Task+0x620>
 8004d08:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004d0c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004d10:	ee17 3a90 	vmov	r3, s15
 8004d14:	b29b      	uxth	r3, r3
 8004d16:	461a      	mov	r2, r3
 8004d18:	4b14      	ldr	r3, [pc, #80]	; (8004d6c <Line_Track_Task+0x614>)
 8004d1a:	601a      	str	r2, [r3, #0]
				FRONT_CCR(ccr);
 8004d1c:	4b13      	ldr	r3, [pc, #76]	; (8004d6c <Line_Track_Task+0x614>)
 8004d1e:	681b      	ldr	r3, [r3, #0]
 8004d20:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8004d24:	dc38      	bgt.n	8004d98 <Line_Track_Task+0x640>
 8004d26:	4b11      	ldr	r3, [pc, #68]	; (8004d6c <Line_Track_Task+0x614>)
 8004d28:	681b      	ldr	r3, [r3, #0]
 8004d2a:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8004d2e:	bfb8      	it	lt
 8004d30:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 8004d34:	e032      	b.n	8004d9c <Line_Track_Task+0x644>
 8004d36:	bf00      	nop
 8004d38:	a3f47e90 	.word	0xa3f47e90
 8004d3c:	3fe8fd1f 	.word	0x3fe8fd1f
 8004d40:	c4830201 	.word	0xc4830201
 8004d44:	3fe73a26 	.word	0x3fe73a26
 8004d48:	20000349 	.word	0x20000349
 8004d4c:	20000338 	.word	0x20000338
 8004d50:	20000774 	.word	0x20000774
 8004d54:	3d03126f 	.word	0x3d03126f
 8004d58:	3b449ba6 	.word	0x3b449ba6
 8004d5c:	20000780 	.word	0x20000780
 8004d60:	20000784 	.word	0x20000784
 8004d64:	44af0000 	.word	0x44af0000
 8004d68:	442a0000 	.word	0x442a0000
 8004d6c:	2000004c 	.word	0x2000004c
 8004d70:	40010000 	.word	0x40010000
 8004d74:	40080000 	.word	0x40080000
 8004d78:	442d0000 	.word	0x442d0000
 8004d7c:	20000336 	.word	0x20000336
 8004d80:	2000033c 	.word	0x2000033c
 8004d84:	20000788 	.word	0x20000788
 8004d88:	20000754 	.word	0x20000754
 8004d8c:	45098000 	.word	0x45098000
 8004d90:	c4610000 	.word	0xc4610000
 8004d94:	c47a0000 	.word	0xc47a0000
 8004d98:	f44f 7361 	mov.w	r3, #900	; 0x384
 8004d9c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004da0:	6353      	str	r3, [r2, #52]	; 0x34
				//Hátsó szervó
				PHI/= 2;
 8004da2:	4b7c      	ldr	r3, [pc, #496]	; (8004f94 <Line_Track_Task+0x83c>)
 8004da4:	ed93 7a00 	vldr	s14, [r3]
 8004da8:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 8004dac:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8004db0:	4b78      	ldr	r3, [pc, #480]	; (8004f94 <Line_Track_Task+0x83c>)
 8004db2:	edc3 7a00 	vstr	s15, [r3]
				ccr = (uint16_t)(-SERVO_M_CORNER * PHI + SERVO_REAR_CCR_MIDDLE);
 8004db6:	4b77      	ldr	r3, [pc, #476]	; (8004f94 <Line_Track_Task+0x83c>)
 8004db8:	edd3 7a00 	vldr	s15, [r3]
 8004dbc:	ed9f 7a76 	vldr	s14, [pc, #472]	; 8004f98 <Line_Track_Task+0x840>
 8004dc0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004dc4:	ed9f 7a75 	vldr	s14, [pc, #468]	; 8004f9c <Line_Track_Task+0x844>
 8004dc8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004dcc:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004dd0:	ee17 3a90 	vmov	r3, s15
 8004dd4:	b29b      	uxth	r3, r3
 8004dd6:	461a      	mov	r2, r3
 8004dd8:	4b71      	ldr	r3, [pc, #452]	; (8004fa0 <Line_Track_Task+0x848>)
 8004dda:	601a      	str	r2, [r3, #0]
				REAR_CCR(ccr);
 8004ddc:	4b70      	ldr	r3, [pc, #448]	; (8004fa0 <Line_Track_Task+0x848>)
 8004dde:	681b      	ldr	r3, [r3, #0]
 8004de0:	f5b3 7f52 	cmp.w	r3, #840	; 0x348
 8004de4:	dc07      	bgt.n	8004df6 <Line_Track_Task+0x69e>
 8004de6:	4b6e      	ldr	r3, [pc, #440]	; (8004fa0 <Line_Track_Task+0x848>)
 8004de8:	681b      	ldr	r3, [r3, #0]
 8004dea:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 8004dee:	bfb8      	it	lt
 8004df0:	f44f 7302 	movlt.w	r3, #520	; 0x208
 8004df4:	e001      	b.n	8004dfa <Line_Track_Task+0x6a2>
 8004df6:	f44f 7352 	mov.w	r3, #840	; 0x348
 8004dfa:	4a6a      	ldr	r2, [pc, #424]	; (8004fa4 <Line_Track_Task+0x84c>)
 8004dfc:	6413      	str	r3, [r2, #64]	; 0x40
 8004dfe:	e0b1      	b.n	8004f64 <Line_Track_Task+0x80c>
			}
		}
		else if(fast_mode_state==SC_MODE)
 8004e00:	4b69      	ldr	r3, [pc, #420]	; (8004fa8 <Line_Track_Task+0x850>)
 8004e02:	781b      	ldrb	r3, [r3, #0]
 8004e04:	2b00      	cmp	r3, #0
 8004e06:	d153      	bne.n	8004eb0 <Line_Track_Task+0x758>
		{
			//Első szervó
			ccr = (uint16_t)(-SERVO_M_SC * PHI + SERVO_FRONT_CCR_MIDDLE);
 8004e08:	4b62      	ldr	r3, [pc, #392]	; (8004f94 <Line_Track_Task+0x83c>)
 8004e0a:	edd3 7a00 	vldr	s15, [r3]
 8004e0e:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8004fac <Line_Track_Task+0x854>
 8004e12:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004e16:	ed9f 7a66 	vldr	s14, [pc, #408]	; 8004fb0 <Line_Track_Task+0x858>
 8004e1a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004e1e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004e22:	ee17 3a90 	vmov	r3, s15
 8004e26:	b29b      	uxth	r3, r3
 8004e28:	461a      	mov	r2, r3
 8004e2a:	4b5d      	ldr	r3, [pc, #372]	; (8004fa0 <Line_Track_Task+0x848>)
 8004e2c:	601a      	str	r2, [r3, #0]
			FRONT_CCR(ccr);
 8004e2e:	4b5c      	ldr	r3, [pc, #368]	; (8004fa0 <Line_Track_Task+0x848>)
 8004e30:	681b      	ldr	r3, [r3, #0]
 8004e32:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8004e36:	dc07      	bgt.n	8004e48 <Line_Track_Task+0x6f0>
 8004e38:	4b59      	ldr	r3, [pc, #356]	; (8004fa0 <Line_Track_Task+0x848>)
 8004e3a:	681b      	ldr	r3, [r3, #0]
 8004e3c:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8004e40:	bfb8      	it	lt
 8004e42:	f44f 73f0 	movlt.w	r3, #480	; 0x1e0
 8004e46:	e001      	b.n	8004e4c <Line_Track_Task+0x6f4>
 8004e48:	f44f 7361 	mov.w	r3, #900	; 0x384
 8004e4c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004e50:	6353      	str	r3, [r2, #52]	; 0x34

			//Hátsó szervó
			PHI/= 3;
 8004e52:	4b50      	ldr	r3, [pc, #320]	; (8004f94 <Line_Track_Task+0x83c>)
 8004e54:	ed93 7a00 	vldr	s14, [r3]
 8004e58:	eef0 6a08 	vmov.f32	s13, #8	; 0x40400000  3.0
 8004e5c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8004e60:	4b4c      	ldr	r3, [pc, #304]	; (8004f94 <Line_Track_Task+0x83c>)
 8004e62:	edc3 7a00 	vstr	s15, [r3]
			ccr = (uint16_t)(-SERVO_M_SC * PHI + SERVO_REAR_CCR_MIDDLE);
 8004e66:	4b4b      	ldr	r3, [pc, #300]	; (8004f94 <Line_Track_Task+0x83c>)
 8004e68:	edd3 7a00 	vldr	s15, [r3]
 8004e6c:	ed9f 7a4f 	vldr	s14, [pc, #316]	; 8004fac <Line_Track_Task+0x854>
 8004e70:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004e74:	ed9f 7a49 	vldr	s14, [pc, #292]	; 8004f9c <Line_Track_Task+0x844>
 8004e78:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004e7c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004e80:	ee17 3a90 	vmov	r3, s15
 8004e84:	b29b      	uxth	r3, r3
 8004e86:	461a      	mov	r2, r3
 8004e88:	4b45      	ldr	r3, [pc, #276]	; (8004fa0 <Line_Track_Task+0x848>)
 8004e8a:	601a      	str	r2, [r3, #0]
			REAR_CCR(ccr);
 8004e8c:	4b44      	ldr	r3, [pc, #272]	; (8004fa0 <Line_Track_Task+0x848>)
 8004e8e:	681b      	ldr	r3, [r3, #0]
 8004e90:	f5b3 7f52 	cmp.w	r3, #840	; 0x348
 8004e94:	dc07      	bgt.n	8004ea6 <Line_Track_Task+0x74e>
 8004e96:	4b42      	ldr	r3, [pc, #264]	; (8004fa0 <Line_Track_Task+0x848>)
 8004e98:	681b      	ldr	r3, [r3, #0]
 8004e9a:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 8004e9e:	bfb8      	it	lt
 8004ea0:	f44f 7302 	movlt.w	r3, #520	; 0x208
 8004ea4:	e001      	b.n	8004eaa <Line_Track_Task+0x752>
 8004ea6:	f44f 7352 	mov.w	r3, #840	; 0x348
 8004eaa:	4a3e      	ldr	r2, [pc, #248]	; (8004fa4 <Line_Track_Task+0x84c>)
 8004eac:	6413      	str	r3, [r2, #64]	; 0x40
 8004eae:	e059      	b.n	8004f64 <Line_Track_Task+0x80c>
		}
		else if(fast_mode_state==OVERTAKE_MODE)
 8004eb0:	4b3d      	ldr	r3, [pc, #244]	; (8004fa8 <Line_Track_Task+0x850>)
 8004eb2:	781b      	ldrb	r3, [r3, #0]
 8004eb4:	2b02      	cmp	r3, #2
 8004eb6:	d155      	bne.n	8004f64 <Line_Track_Task+0x80c>
		{
			static uint8_t overtake_state=0;
			static uint32_t t_stamp_overtake=0;
			if(overtake_state==0)
 8004eb8:	4b3e      	ldr	r3, [pc, #248]	; (8004fb4 <Line_Track_Task+0x85c>)
 8004eba:	781b      	ldrb	r3, [r3, #0]
 8004ebc:	2b00      	cmp	r3, #0
 8004ebe:	d115      	bne.n	8004eec <Line_Track_Task+0x794>
			{
				v_ref=1600;
 8004ec0:	4b3d      	ldr	r3, [pc, #244]	; (8004fb8 <Line_Track_Task+0x860>)
 8004ec2:	4a3e      	ldr	r2, [pc, #248]	; (8004fbc <Line_Track_Task+0x864>)
 8004ec4:	601a      	str	r2, [r3, #0]
				t_stamp_overtake=tick;
 8004ec6:	4a3e      	ldr	r2, [pc, #248]	; (8004fc0 <Line_Track_Task+0x868>)
 8004ec8:	687b      	ldr	r3, [r7, #4]
 8004eca:	6013      	str	r3, [r2, #0]
				leaveLineEnabled=1;
 8004ecc:	4b3d      	ldr	r3, [pc, #244]	; (8004fc4 <Line_Track_Task+0x86c>)
 8004ece:	2201      	movs	r2, #1
 8004ed0:	701a      	strb	r2, [r3, #0]
				TIM2->CCR1=SERVO_FRONT_CCR_MIDDLE+170;
 8004ed2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004ed6:	f240 325e 	movw	r2, #862	; 0x35e
 8004eda:	635a      	str	r2, [r3, #52]	; 0x34
				TIM1->CCR4=SERVO_REAR_CCR_MIDDLE-180;
 8004edc:	4b31      	ldr	r3, [pc, #196]	; (8004fa4 <Line_Track_Task+0x84c>)
 8004ede:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8004ee2:	641a      	str	r2, [r3, #64]	; 0x40
				overtake_state=1;
 8004ee4:	4b33      	ldr	r3, [pc, #204]	; (8004fb4 <Line_Track_Task+0x85c>)
 8004ee6:	2201      	movs	r2, #1
 8004ee8:	701a      	strb	r2, [r3, #0]
 8004eea:	e03b      	b.n	8004f64 <Line_Track_Task+0x80c>
			}
			else if(overtake_state==1 && (tick-t_stamp_overtake)>2200)
 8004eec:	4b31      	ldr	r3, [pc, #196]	; (8004fb4 <Line_Track_Task+0x85c>)
 8004eee:	781b      	ldrb	r3, [r3, #0]
 8004ef0:	2b01      	cmp	r3, #1
 8004ef2:	d11d      	bne.n	8004f30 <Line_Track_Task+0x7d8>
 8004ef4:	4b32      	ldr	r3, [pc, #200]	; (8004fc0 <Line_Track_Task+0x868>)
 8004ef6:	681b      	ldr	r3, [r3, #0]
 8004ef8:	687a      	ldr	r2, [r7, #4]
 8004efa:	1ad3      	subs	r3, r2, r3
 8004efc:	f640 0298 	movw	r2, #2200	; 0x898
 8004f00:	4293      	cmp	r3, r2
 8004f02:	d915      	bls.n	8004f30 <Line_Track_Task+0x7d8>
			{
				v_ref=3000;
 8004f04:	4b2c      	ldr	r3, [pc, #176]	; (8004fb8 <Line_Track_Task+0x860>)
 8004f06:	4a30      	ldr	r2, [pc, #192]	; (8004fc8 <Line_Track_Task+0x870>)
 8004f08:	601a      	str	r2, [r3, #0]
				LED_Y(1);
 8004f0a:	2200      	movs	r2, #0
 8004f0c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004f10:	482e      	ldr	r0, [pc, #184]	; (8004fcc <Line_Track_Task+0x874>)
 8004f12:	f004 fbbb 	bl	800968c <HAL_GPIO_WritePin>
				//FRONT_CCR(SERVO_FRONT_CCR_MIDDLE-50);
				TIM2->CCR1=SERVO_FRONT_CCR_MIDDLE-50;
 8004f16:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004f1a:	f240 2282 	movw	r2, #642	; 0x282
 8004f1e:	635a      	str	r2, [r3, #52]	; 0x34
				TIM1->CCR4=SERVO_REAR_CCR_MIDDLE+30;
 8004f20:	4b20      	ldr	r3, [pc, #128]	; (8004fa4 <Line_Track_Task+0x84c>)
 8004f22:	f240 22c6 	movw	r2, #710	; 0x2c6
 8004f26:	641a      	str	r2, [r3, #64]	; 0x40
				//REAR_CCR(SERVO_REAR_CCR_MIDDLE+50);
				overtake_state=2;
 8004f28:	4b22      	ldr	r3, [pc, #136]	; (8004fb4 <Line_Track_Task+0x85c>)
 8004f2a:	2202      	movs	r2, #2
 8004f2c:	701a      	strb	r2, [r3, #0]
 8004f2e:	e019      	b.n	8004f64 <Line_Track_Task+0x80c>
			}
			else if(overtake_state==2 && LINE_CNT>0)
 8004f30:	4b20      	ldr	r3, [pc, #128]	; (8004fb4 <Line_Track_Task+0x85c>)
 8004f32:	781b      	ldrb	r3, [r3, #0]
 8004f34:	2b02      	cmp	r3, #2
 8004f36:	d115      	bne.n	8004f64 <Line_Track_Task+0x80c>
 8004f38:	4b25      	ldr	r3, [pc, #148]	; (8004fd0 <Line_Track_Task+0x878>)
 8004f3a:	785b      	ldrb	r3, [r3, #1]
 8004f3c:	2b00      	cmp	r3, #0
 8004f3e:	d011      	beq.n	8004f64 <Line_Track_Task+0x80c>
			{
				v_ref=1200;
 8004f40:	4b1d      	ldr	r3, [pc, #116]	; (8004fb8 <Line_Track_Task+0x860>)
 8004f42:	4a24      	ldr	r2, [pc, #144]	; (8004fd4 <Line_Track_Task+0x87c>)
 8004f44:	601a      	str	r2, [r3, #0]
				overtake_state=0;
 8004f46:	4b1b      	ldr	r3, [pc, #108]	; (8004fb4 <Line_Track_Task+0x85c>)
 8004f48:	2200      	movs	r2, #0
 8004f4a:	701a      	strb	r2, [r3, #0]
				fast_mode_state=FREERUN_MODE;
 8004f4c:	4b16      	ldr	r3, [pc, #88]	; (8004fa8 <Line_Track_Task+0x850>)
 8004f4e:	2201      	movs	r2, #1
 8004f50:	701a      	strb	r2, [r3, #0]
				leaveLineEnabled=0;
 8004f52:	4b1c      	ldr	r3, [pc, #112]	; (8004fc4 <Line_Track_Task+0x86c>)
 8004f54:	2200      	movs	r2, #0
 8004f56:	701a      	strb	r2, [r3, #0]
				LED_Y(0);
 8004f58:	2201      	movs	r2, #1
 8004f5a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004f5e:	481b      	ldr	r0, [pc, #108]	; (8004fcc <Line_Track_Task+0x874>)
 8004f60:	f004 fb94 	bl	800968c <HAL_GPIO_WritePin>
			}
		}
	}

	tick_prev=tick;
 8004f64:	4a1c      	ldr	r2, [pc, #112]	; (8004fd8 <Line_Track_Task+0x880>)
 8004f66:	687b      	ldr	r3, [r7, #4]
 8004f68:	6013      	str	r3, [r2, #0]
 8004f6a:	e010      	b.n	8004f8e <Line_Track_Task+0x836>
	if(line_track_task_tick>tick) return;
 8004f6c:	bf00      	nop
 8004f6e:	e00e      	b.n	8004f8e <Line_Track_Task+0x836>
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_FORWARD))return;
 8004f70:	bf00      	nop
 8004f72:	e00c      	b.n	8004f8e <Line_Track_Task+0x836>
			if(tmp)return;
 8004f74:	bf00      	nop
 8004f76:	e00a      	b.n	8004f8e <Line_Track_Task+0x836>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 8004f78:	bf00      	nop
 8004f7a:	e008      	b.n	8004f8e <Line_Track_Task+0x836>
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_REVERSE))return;
 8004f7c:	bf00      	nop
 8004f7e:	e006      	b.n	8004f8e <Line_Track_Task+0x836>
			if(tmp)return;
 8004f80:	bf00      	nop
 8004f82:	e004      	b.n	8004f8e <Line_Track_Task+0x836>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 8004f84:	bf00      	nop
 8004f86:	e002      	b.n	8004f8e <Line_Track_Task+0x836>
		if(G0_Read_Fast(huart_stm, huart_debugg)) return; //ha sikertelen az olvasás a G0 ból akkor nincs értelme az egésznek
 8004f88:	bf00      	nop
 8004f8a:	e000      	b.n	8004f8e <Line_Track_Task+0x836>
		if((LINE_CNT<1 || LINE_CNT > 3) && !leaveLineEnabled) return;//ha nincs vonal a kocsi alatt
 8004f8c:	bf00      	nop
}
 8004f8e:	3718      	adds	r7, #24
 8004f90:	46bd      	mov	sp, r7
 8004f92:	bd80      	pop	{r7, pc}
 8004f94:	20000784 	.word	0x20000784
 8004f98:	c47a0000 	.word	0xc47a0000
 8004f9c:	442a0000 	.word	0x442a0000
 8004fa0:	2000004c 	.word	0x2000004c
 8004fa4:	40010000 	.word	0x40010000
 8004fa8:	20000788 	.word	0x20000788
 8004fac:	c4a28000 	.word	0xc4a28000
 8004fb0:	442d0000 	.word	0x442d0000
 8004fb4:	20000789 	.word	0x20000789
 8004fb8:	20000338 	.word	0x20000338
 8004fbc:	44c80000 	.word	0x44c80000
 8004fc0:	2000078c 	.word	0x2000078c
 8004fc4:	2000033c 	.word	0x2000033c
 8004fc8:	453b8000 	.word	0x453b8000
 8004fcc:	40020400 	.word	0x40020400
 8004fd0:	20000774 	.word	0x20000774
 8004fd4:	44960000 	.word	0x44960000
 8004fd8:	20000790 	.word	0x20000790
 8004fdc:	00000000 	.word	0x00000000

08004fe0 <Fast_Mode>:

float Fast_Mode(UART_HandleTypeDef *huart_debugg,uint8_t* state_pointer, uint32_t t)
{
 8004fe0:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8004fe4:	b08a      	sub	sp, #40	; 0x28
 8004fe6:	af00      	add	r7, sp, #0
 8004fe8:	60f8      	str	r0, [r7, #12]
 8004fea:	60b9      	str	r1, [r7, #8]
 8004fec:	607a      	str	r2, [r7, #4]
	static float x_elso_prev=0;
	static float x_hatso;
	static double delta;
	static float gamma;

	uint8_t state = *state_pointer;
 8004fee:	68bb      	ldr	r3, [r7, #8]
 8004ff0:	781b      	ldrb	r3, [r3, #0]
 8004ff2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27

	if(state==OVERTAKE_MODE)return 0;
 8004ff6:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8004ffa:	2b02      	cmp	r3, #2
 8004ffc:	d102      	bne.n	8005004 <Fast_Mode+0x24>
 8004ffe:	f04f 0300 	mov.w	r3, #0
 8005002:	e384      	b.n	800570e <Fast_Mode+0x72e>
/**/
	//BOOST detect
	if(LINE_CNT != lineCnt_prev && (LINE_CNT==1 || LINE_CNT==3)  && boostOrBrake==1) //ha változik az alattunk lévő vonalak száma 1 és 3 közt
 8005004:	4bb0      	ldr	r3, [pc, #704]	; (80052c8 <Fast_Mode+0x2e8>)
 8005006:	785a      	ldrb	r2, [r3, #1]
 8005008:	4bb0      	ldr	r3, [pc, #704]	; (80052cc <Fast_Mode+0x2ec>)
 800500a:	781b      	ldrb	r3, [r3, #0]
 800500c:	429a      	cmp	r2, r3
 800500e:	f000 80d2 	beq.w	80051b6 <Fast_Mode+0x1d6>
 8005012:	4bad      	ldr	r3, [pc, #692]	; (80052c8 <Fast_Mode+0x2e8>)
 8005014:	785b      	ldrb	r3, [r3, #1]
 8005016:	2b01      	cmp	r3, #1
 8005018:	d004      	beq.n	8005024 <Fast_Mode+0x44>
 800501a:	4bab      	ldr	r3, [pc, #684]	; (80052c8 <Fast_Mode+0x2e8>)
 800501c:	785b      	ldrb	r3, [r3, #1]
 800501e:	2b03      	cmp	r3, #3
 8005020:	f040 80c9 	bne.w	80051b6 <Fast_Mode+0x1d6>
 8005024:	4baa      	ldr	r3, [pc, #680]	; (80052d0 <Fast_Mode+0x2f0>)
 8005026:	781b      	ldrb	r3, [r3, #0]
 8005028:	2b01      	cmp	r3, #1
 800502a:	f040 80c4 	bne.w	80051b6 <Fast_Mode+0x1d6>
	{
		ds[index]=fabs(v)*(t-t_stamp_boost)/1000;
 800502e:	4ba9      	ldr	r3, [pc, #676]	; (80052d4 <Fast_Mode+0x2f4>)
 8005030:	edd3 7a00 	vldr	s15, [r3]
 8005034:	eef0 7ae7 	vabs.f32	s15, s15
 8005038:	ee17 0a90 	vmov	r0, s15
 800503c:	f7fb faa4 	bl	8000588 <__aeabi_f2d>
 8005040:	4604      	mov	r4, r0
 8005042:	460d      	mov	r5, r1
 8005044:	4ba4      	ldr	r3, [pc, #656]	; (80052d8 <Fast_Mode+0x2f8>)
 8005046:	681b      	ldr	r3, [r3, #0]
 8005048:	687a      	ldr	r2, [r7, #4]
 800504a:	1ad3      	subs	r3, r2, r3
 800504c:	4618      	mov	r0, r3
 800504e:	f7fb fa79 	bl	8000544 <__aeabi_ui2d>
 8005052:	4602      	mov	r2, r0
 8005054:	460b      	mov	r3, r1
 8005056:	4620      	mov	r0, r4
 8005058:	4629      	mov	r1, r5
 800505a:	f7fb faed 	bl	8000638 <__aeabi_dmul>
 800505e:	4602      	mov	r2, r0
 8005060:	460b      	mov	r3, r1
 8005062:	4610      	mov	r0, r2
 8005064:	4619      	mov	r1, r3
 8005066:	f04f 0200 	mov.w	r2, #0
 800506a:	4b9c      	ldr	r3, [pc, #624]	; (80052dc <Fast_Mode+0x2fc>)
 800506c:	f7fb fc0e 	bl	800088c <__aeabi_ddiv>
 8005070:	4602      	mov	r2, r0
 8005072:	460b      	mov	r3, r1
 8005074:	499a      	ldr	r1, [pc, #616]	; (80052e0 <Fast_Mode+0x300>)
 8005076:	7809      	ldrb	r1, [r1, #0]
 8005078:	460c      	mov	r4, r1
 800507a:	4610      	mov	r0, r2
 800507c:	4619      	mov	r1, r3
 800507e:	f7fb fdb3 	bl	8000be8 <__aeabi_d2f>
 8005082:	4602      	mov	r2, r0
 8005084:	4997      	ldr	r1, [pc, #604]	; (80052e4 <Fast_Mode+0x304>)
 8005086:	00a3      	lsls	r3, r4, #2
 8005088:	440b      	add	r3, r1
 800508a:	601a      	str	r2, [r3, #0]
		float s_boost = ds[0]+ds[1]+ds[2]+ds[3]+ds[4]+ds[5]+ds[6]+ds[7];
 800508c:	4b95      	ldr	r3, [pc, #596]	; (80052e4 <Fast_Mode+0x304>)
 800508e:	ed93 7a00 	vldr	s14, [r3]
 8005092:	4b94      	ldr	r3, [pc, #592]	; (80052e4 <Fast_Mode+0x304>)
 8005094:	edd3 7a01 	vldr	s15, [r3, #4]
 8005098:	ee37 7a27 	vadd.f32	s14, s14, s15
 800509c:	4b91      	ldr	r3, [pc, #580]	; (80052e4 <Fast_Mode+0x304>)
 800509e:	edd3 7a02 	vldr	s15, [r3, #8]
 80050a2:	ee37 7a27 	vadd.f32	s14, s14, s15
 80050a6:	4b8f      	ldr	r3, [pc, #572]	; (80052e4 <Fast_Mode+0x304>)
 80050a8:	edd3 7a03 	vldr	s15, [r3, #12]
 80050ac:	ee37 7a27 	vadd.f32	s14, s14, s15
 80050b0:	4b8c      	ldr	r3, [pc, #560]	; (80052e4 <Fast_Mode+0x304>)
 80050b2:	edd3 7a04 	vldr	s15, [r3, #16]
 80050b6:	ee37 7a27 	vadd.f32	s14, s14, s15
 80050ba:	4b8a      	ldr	r3, [pc, #552]	; (80052e4 <Fast_Mode+0x304>)
 80050bc:	edd3 7a05 	vldr	s15, [r3, #20]
 80050c0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80050c4:	4b87      	ldr	r3, [pc, #540]	; (80052e4 <Fast_Mode+0x304>)
 80050c6:	edd3 7a06 	vldr	s15, [r3, #24]
 80050ca:	ee37 7a27 	vadd.f32	s14, s14, s15
 80050ce:	4b85      	ldr	r3, [pc, #532]	; (80052e4 <Fast_Mode+0x304>)
 80050d0:	edd3 7a07 	vldr	s15, [r3, #28]
 80050d4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80050d8:	edc7 7a08 	vstr	s15, [r7, #32]
		if(s_boost>250.0 && s_boost<800.0) // ha 25 és 80 cm közt bekövetkezik 8 vonalszámváltás
 80050dc:	edd7 7a08 	vldr	s15, [r7, #32]
 80050e0:	ed9f 7a81 	vldr	s14, [pc, #516]	; 80052e8 <Fast_Mode+0x308>
 80050e4:	eef4 7ac7 	vcmpe.f32	s15, s14
 80050e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80050ec:	dd53      	ble.n	8005196 <Fast_Mode+0x1b6>
 80050ee:	edd7 7a08 	vldr	s15, [r7, #32]
 80050f2:	ed9f 7a7e 	vldr	s14, [pc, #504]	; 80052ec <Fast_Mode+0x30c>
 80050f6:	eef4 7ac7 	vcmpe.f32	s15, s14
 80050fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80050fe:	d54a      	bpl.n	8005196 <Fast_Mode+0x1b6>
		{
			LED_B(1);
 8005100:	2200      	movs	r2, #0
 8005102:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8005106:	487a      	ldr	r0, [pc, #488]	; (80052f0 <Fast_Mode+0x310>)
 8005108:	f004 fac0 	bl	800968c <HAL_GPIO_WritePin>
			boostOrBrake=2;
 800510c:	4b70      	ldr	r3, [pc, #448]	; (80052d0 <Fast_Mode+0x2f0>)
 800510e:	2202      	movs	r2, #2
 8005110:	701a      	strb	r2, [r3, #0]
			if(straightSpeed[boostCnt]==SC_MODE)state=SC_MODE;
 8005112:	4b78      	ldr	r3, [pc, #480]	; (80052f4 <Fast_Mode+0x314>)
 8005114:	881b      	ldrh	r3, [r3, #0]
 8005116:	461a      	mov	r2, r3
 8005118:	4b77      	ldr	r3, [pc, #476]	; (80052f8 <Fast_Mode+0x318>)
 800511a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800511e:	2b00      	cmp	r3, #0
 8005120:	d103      	bne.n	800512a <Fast_Mode+0x14a>
 8005122:	2300      	movs	r3, #0
 8005124:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8005128:	e02f      	b.n	800518a <Fast_Mode+0x1aa>
			else if(straightSpeed[boostCnt]==OVERTAKE_MODE && !ot_delay)
 800512a:	4b72      	ldr	r3, [pc, #456]	; (80052f4 <Fast_Mode+0x314>)
 800512c:	881b      	ldrh	r3, [r3, #0]
 800512e:	461a      	mov	r2, r3
 8005130:	4b71      	ldr	r3, [pc, #452]	; (80052f8 <Fast_Mode+0x318>)
 8005132:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005136:	2b02      	cmp	r3, #2
 8005138:	d10a      	bne.n	8005150 <Fast_Mode+0x170>
 800513a:	4b70      	ldr	r3, [pc, #448]	; (80052fc <Fast_Mode+0x31c>)
 800513c:	781b      	ldrb	r3, [r3, #0]
 800513e:	2b00      	cmp	r3, #0
 8005140:	d106      	bne.n	8005150 <Fast_Mode+0x170>
			{
				ot_delay=1;
 8005142:	4b6e      	ldr	r3, [pc, #440]	; (80052fc <Fast_Mode+0x31c>)
 8005144:	2201      	movs	r2, #1
 8005146:	701a      	strb	r2, [r3, #0]
				t_overtake=t;
 8005148:	4a6d      	ldr	r2, [pc, #436]	; (8005300 <Fast_Mode+0x320>)
 800514a:	687b      	ldr	r3, [r7, #4]
 800514c:	6013      	str	r3, [r2, #0]
 800514e:	e01c      	b.n	800518a <Fast_Mode+0x1aa>

			}
			else if(straightSpeed[boostCnt]==-1) motorEnLineOk=0;
 8005150:	4b68      	ldr	r3, [pc, #416]	; (80052f4 <Fast_Mode+0x314>)
 8005152:	881b      	ldrh	r3, [r3, #0]
 8005154:	461a      	mov	r2, r3
 8005156:	4b68      	ldr	r3, [pc, #416]	; (80052f8 <Fast_Mode+0x318>)
 8005158:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800515c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005160:	d103      	bne.n	800516a <Fast_Mode+0x18a>
 8005162:	4b68      	ldr	r3, [pc, #416]	; (8005304 <Fast_Mode+0x324>)
 8005164:	2200      	movs	r2, #0
 8005166:	701a      	strb	r2, [r3, #0]
 8005168:	e00f      	b.n	800518a <Fast_Mode+0x1aa>
			else
			{
				state=FREERUN_MODE;
 800516a:	2301      	movs	r3, #1
 800516c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
				v_ref=straightSpeed[boostCnt];
 8005170:	4b60      	ldr	r3, [pc, #384]	; (80052f4 <Fast_Mode+0x314>)
 8005172:	881b      	ldrh	r3, [r3, #0]
 8005174:	461a      	mov	r2, r3
 8005176:	4b60      	ldr	r3, [pc, #384]	; (80052f8 <Fast_Mode+0x318>)
 8005178:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800517c:	ee07 3a90 	vmov	s15, r3
 8005180:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005184:	4b60      	ldr	r3, [pc, #384]	; (8005308 <Fast_Mode+0x328>)
 8005186:	edc3 7a00 	vstr	s15, [r3]
			}
			boostCnt++;
 800518a:	4b5a      	ldr	r3, [pc, #360]	; (80052f4 <Fast_Mode+0x314>)
 800518c:	881b      	ldrh	r3, [r3, #0]
 800518e:	3301      	adds	r3, #1
 8005190:	b29a      	uxth	r2, r3
 8005192:	4b58      	ldr	r3, [pc, #352]	; (80052f4 <Fast_Mode+0x314>)
 8005194:	801a      	strh	r2, [r3, #0]
		}
		index++;
 8005196:	4b52      	ldr	r3, [pc, #328]	; (80052e0 <Fast_Mode+0x300>)
 8005198:	781b      	ldrb	r3, [r3, #0]
 800519a:	3301      	adds	r3, #1
 800519c:	b2da      	uxtb	r2, r3
 800519e:	4b50      	ldr	r3, [pc, #320]	; (80052e0 <Fast_Mode+0x300>)
 80051a0:	701a      	strb	r2, [r3, #0]
		if(index>7) index=0;
 80051a2:	4b4f      	ldr	r3, [pc, #316]	; (80052e0 <Fast_Mode+0x300>)
 80051a4:	781b      	ldrb	r3, [r3, #0]
 80051a6:	2b07      	cmp	r3, #7
 80051a8:	d902      	bls.n	80051b0 <Fast_Mode+0x1d0>
 80051aa:	4b4d      	ldr	r3, [pc, #308]	; (80052e0 <Fast_Mode+0x300>)
 80051ac:	2200      	movs	r2, #0
 80051ae:	701a      	strb	r2, [r3, #0]
		t_stamp_boost = t;
 80051b0:	4a49      	ldr	r2, [pc, #292]	; (80052d8 <Fast_Mode+0x2f8>)
 80051b2:	687b      	ldr	r3, [r7, #4]
 80051b4:	6013      	str	r3, [r2, #0]
	}
	lineCnt_prev = LINE_CNT; //az előző értéket a jelenlegihez hangoljuk
 80051b6:	4b44      	ldr	r3, [pc, #272]	; (80052c8 <Fast_Mode+0x2e8>)
 80051b8:	785a      	ldrb	r2, [r3, #1]
 80051ba:	4b44      	ldr	r3, [pc, #272]	; (80052cc <Fast_Mode+0x2ec>)
 80051bc:	701a      	strb	r2, [r3, #0]
	if(ot_delay && (t-t_overtake)>1000)
 80051be:	4b4f      	ldr	r3, [pc, #316]	; (80052fc <Fast_Mode+0x31c>)
 80051c0:	781b      	ldrb	r3, [r3, #0]
 80051c2:	2b00      	cmp	r3, #0
 80051c4:	d00f      	beq.n	80051e6 <Fast_Mode+0x206>
 80051c6:	4b4e      	ldr	r3, [pc, #312]	; (8005300 <Fast_Mode+0x320>)
 80051c8:	681b      	ldr	r3, [r3, #0]
 80051ca:	687a      	ldr	r2, [r7, #4]
 80051cc:	1ad3      	subs	r3, r2, r3
 80051ce:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80051d2:	d908      	bls.n	80051e6 <Fast_Mode+0x206>
	{
		*state_pointer=OVERTAKE_MODE;
 80051d4:	68bb      	ldr	r3, [r7, #8]
 80051d6:	2202      	movs	r2, #2
 80051d8:	701a      	strb	r2, [r3, #0]
		ot_delay=0;
 80051da:	4b48      	ldr	r3, [pc, #288]	; (80052fc <Fast_Mode+0x31c>)
 80051dc:	2200      	movs	r2, #0
 80051de:	701a      	strb	r2, [r3, #0]
		return 0;
 80051e0:	f04f 0300 	mov.w	r3, #0
 80051e4:	e293      	b.n	800570e <Fast_Mode+0x72e>
	}

	//BRAKING detect -> erre csak gyors üzemmódban van szükség
	if(LINE_CNT > 1) //ha 3 vonalat érzékelünk
 80051e6:	4b38      	ldr	r3, [pc, #224]	; (80052c8 <Fast_Mode+0x2e8>)
 80051e8:	785b      	ldrb	r3, [r3, #1]
 80051ea:	2b01      	cmp	r3, #1
 80051ec:	f240 8098 	bls.w	8005320 <Fast_Mode+0x340>
	{
		s_brake += fabs(v)*(t-t_prev)/1000;
 80051f0:	4b46      	ldr	r3, [pc, #280]	; (800530c <Fast_Mode+0x32c>)
 80051f2:	681b      	ldr	r3, [r3, #0]
 80051f4:	4618      	mov	r0, r3
 80051f6:	f7fb f9c7 	bl	8000588 <__aeabi_f2d>
 80051fa:	4604      	mov	r4, r0
 80051fc:	460d      	mov	r5, r1
 80051fe:	4b35      	ldr	r3, [pc, #212]	; (80052d4 <Fast_Mode+0x2f4>)
 8005200:	edd3 7a00 	vldr	s15, [r3]
 8005204:	eef0 7ae7 	vabs.f32	s15, s15
 8005208:	ee17 0a90 	vmov	r0, s15
 800520c:	f7fb f9bc 	bl	8000588 <__aeabi_f2d>
 8005210:	4680      	mov	r8, r0
 8005212:	4689      	mov	r9, r1
 8005214:	4b3e      	ldr	r3, [pc, #248]	; (8005310 <Fast_Mode+0x330>)
 8005216:	681b      	ldr	r3, [r3, #0]
 8005218:	687a      	ldr	r2, [r7, #4]
 800521a:	1ad3      	subs	r3, r2, r3
 800521c:	4618      	mov	r0, r3
 800521e:	f7fb f991 	bl	8000544 <__aeabi_ui2d>
 8005222:	4602      	mov	r2, r0
 8005224:	460b      	mov	r3, r1
 8005226:	4640      	mov	r0, r8
 8005228:	4649      	mov	r1, r9
 800522a:	f7fb fa05 	bl	8000638 <__aeabi_dmul>
 800522e:	4602      	mov	r2, r0
 8005230:	460b      	mov	r3, r1
 8005232:	4610      	mov	r0, r2
 8005234:	4619      	mov	r1, r3
 8005236:	f04f 0200 	mov.w	r2, #0
 800523a:	4b28      	ldr	r3, [pc, #160]	; (80052dc <Fast_Mode+0x2fc>)
 800523c:	f7fb fb26 	bl	800088c <__aeabi_ddiv>
 8005240:	4602      	mov	r2, r0
 8005242:	460b      	mov	r3, r1
 8005244:	4620      	mov	r0, r4
 8005246:	4629      	mov	r1, r5
 8005248:	f7fb f840 	bl	80002cc <__adddf3>
 800524c:	4602      	mov	r2, r0
 800524e:	460b      	mov	r3, r1
 8005250:	4610      	mov	r0, r2
 8005252:	4619      	mov	r1, r3
 8005254:	f7fb fcc8 	bl	8000be8 <__aeabi_d2f>
 8005258:	4603      	mov	r3, r0
 800525a:	4a2c      	ldr	r2, [pc, #176]	; (800530c <Fast_Mode+0x32c>)
 800525c:	6013      	str	r3, [r2, #0]
		if(s_brake>300) //ha már legalább 30cm óta folyamatosan 3 vonal van alattunk
 800525e:	4b2b      	ldr	r3, [pc, #172]	; (800530c <Fast_Mode+0x32c>)
 8005260:	edd3 7a00 	vldr	s15, [r3]
 8005264:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 8005314 <Fast_Mode+0x334>
 8005268:	eef4 7ac7 	vcmpe.f32	s15, s14
 800526c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005270:	dd5a      	ble.n	8005328 <Fast_Mode+0x348>
		{
			if(state == FREERUN_MODE)
 8005272:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8005276:	2b01      	cmp	r3, #1
 8005278:	d11f      	bne.n	80052ba <Fast_Mode+0x2da>
			{
				if(cornerSpeed[boostCnt]==-1)motorEnLineOk=0;
 800527a:	4b1e      	ldr	r3, [pc, #120]	; (80052f4 <Fast_Mode+0x314>)
 800527c:	881b      	ldrh	r3, [r3, #0]
 800527e:	461a      	mov	r2, r3
 8005280:	4b25      	ldr	r3, [pc, #148]	; (8005318 <Fast_Mode+0x338>)
 8005282:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005286:	f1b3 3fff 	cmp.w	r3, #4294967295
 800528a:	d103      	bne.n	8005294 <Fast_Mode+0x2b4>
 800528c:	4b1d      	ldr	r3, [pc, #116]	; (8005304 <Fast_Mode+0x324>)
 800528e:	2200      	movs	r2, #0
 8005290:	701a      	strb	r2, [r3, #0]
 8005292:	e00c      	b.n	80052ae <Fast_Mode+0x2ce>
				else v_ref = cornerSpeed[boostCnt];
 8005294:	4b17      	ldr	r3, [pc, #92]	; (80052f4 <Fast_Mode+0x314>)
 8005296:	881b      	ldrh	r3, [r3, #0]
 8005298:	461a      	mov	r2, r3
 800529a:	4b1f      	ldr	r3, [pc, #124]	; (8005318 <Fast_Mode+0x338>)
 800529c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80052a0:	ee07 3a90 	vmov	s15, r3
 80052a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80052a8:	4b17      	ldr	r3, [pc, #92]	; (8005308 <Fast_Mode+0x328>)
 80052aa:	edc3 7a00 	vstr	s15, [r3]
				LED_B(0);
 80052ae:	2201      	movs	r2, #1
 80052b0:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80052b4:	480e      	ldr	r0, [pc, #56]	; (80052f0 <Fast_Mode+0x310>)
 80052b6:	f004 f9e9 	bl	800968c <HAL_GPIO_WritePin>
			}
			t_stamp_brake_end=t;
 80052ba:	4a18      	ldr	r2, [pc, #96]	; (800531c <Fast_Mode+0x33c>)
 80052bc:	687b      	ldr	r3, [r7, #4]
 80052be:	6013      	str	r3, [r2, #0]
			boostOrBrake=3;
 80052c0:	4b03      	ldr	r3, [pc, #12]	; (80052d0 <Fast_Mode+0x2f0>)
 80052c2:	2203      	movs	r2, #3
 80052c4:	701a      	strb	r2, [r3, #0]
 80052c6:	e02f      	b.n	8005328 <Fast_Mode+0x348>
 80052c8:	20000774 	.word	0x20000774
 80052cc:	20000050 	.word	0x20000050
 80052d0:	20000051 	.word	0x20000051
 80052d4:	20000754 	.word	0x20000754
 80052d8:	20000794 	.word	0x20000794
 80052dc:	408f4000 	.word	0x408f4000
 80052e0:	20000798 	.word	0x20000798
 80052e4:	20000054 	.word	0x20000054
 80052e8:	437a0000 	.word	0x437a0000
 80052ec:	44480000 	.word	0x44480000
 80052f0:	40020400 	.word	0x40020400
 80052f4:	20000046 	.word	0x20000046
 80052f8:	20000074 	.word	0x20000074
 80052fc:	20000799 	.word	0x20000799
 8005300:	2000079c 	.word	0x2000079c
 8005304:	20000c59 	.word	0x20000c59
 8005308:	20000338 	.word	0x20000338
 800530c:	200007a0 	.word	0x200007a0
 8005310:	200007a4 	.word	0x200007a4
 8005314:	43960000 	.word	0x43960000
 8005318:	200000b8 	.word	0x200000b8
 800531c:	200007a8 	.word	0x200007a8
		}
	}
	else //ha 1 vonalat érzékelünk
	{
		s_brake=0;
 8005320:	4bb3      	ldr	r3, [pc, #716]	; (80055f0 <Fast_Mode+0x610>)
 8005322:	f04f 0200 	mov.w	r2, #0
 8005326:	601a      	str	r2, [r3, #0]
	}
	t_prev=t;
 8005328:	4ab2      	ldr	r2, [pc, #712]	; (80055f4 <Fast_Mode+0x614>)
 800532a:	687b      	ldr	r3, [r7, #4]
 800532c:	6013      	str	r3, [r2, #0]

	if(boostOrBrake==3 && (t-t_stamp_brake_end)>1000)
 800532e:	4bb2      	ldr	r3, [pc, #712]	; (80055f8 <Fast_Mode+0x618>)
 8005330:	781b      	ldrb	r3, [r3, #0]
 8005332:	2b03      	cmp	r3, #3
 8005334:	d109      	bne.n	800534a <Fast_Mode+0x36a>
 8005336:	4bb1      	ldr	r3, [pc, #708]	; (80055fc <Fast_Mode+0x61c>)
 8005338:	681b      	ldr	r3, [r3, #0]
 800533a:	687a      	ldr	r2, [r7, #4]
 800533c:	1ad3      	subs	r3, r2, r3
 800533e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005342:	d902      	bls.n	800534a <Fast_Mode+0x36a>
	{
		boostOrBrake=1;
 8005344:	4bac      	ldr	r3, [pc, #688]	; (80055f8 <Fast_Mode+0x618>)
 8005346:	2201      	movs	r2, #1
 8005348:	701a      	strb	r2, [r3, #0]
	}

	/*****SC üzemmód******/
	if(state==SC_MODE)
 800534a:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800534e:	2b00      	cmp	r3, #0
 8005350:	d120      	bne.n	8005394 <Fast_Mode+0x3b4>
	{
		uint16_t dist=(((uint16_t)rxBuf[5])<<8) | ((uint16_t)rxBuf[6]);
 8005352:	4bab      	ldr	r3, [pc, #684]	; (8005600 <Fast_Mode+0x620>)
 8005354:	795b      	ldrb	r3, [r3, #5]
 8005356:	021b      	lsls	r3, r3, #8
 8005358:	b21a      	sxth	r2, r3
 800535a:	4ba9      	ldr	r3, [pc, #676]	; (8005600 <Fast_Mode+0x620>)
 800535c:	799b      	ldrb	r3, [r3, #6]
 800535e:	b21b      	sxth	r3, r3
 8005360:	4313      	orrs	r3, r2
 8005362:	b21b      	sxth	r3, r3
 8005364:	83fb      	strh	r3, [r7, #30]
		if(dist>1000 || rxBuf[4])
 8005366:	8bfb      	ldrh	r3, [r7, #30]
 8005368:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800536c:	d803      	bhi.n	8005376 <Fast_Mode+0x396>
 800536e:	4ba4      	ldr	r3, [pc, #656]	; (8005600 <Fast_Mode+0x620>)
 8005370:	791b      	ldrb	r3, [r3, #4]
 8005372:	2b00      	cmp	r3, #0
 8005374:	d003      	beq.n	800537e <Fast_Mode+0x39e>
		{
			v_ref=1800; //ha tul messze vana  SC vagy érvénytelen az olvasás
 8005376:	4ba3      	ldr	r3, [pc, #652]	; (8005604 <Fast_Mode+0x624>)
 8005378:	4aa3      	ldr	r2, [pc, #652]	; (8005608 <Fast_Mode+0x628>)
 800537a:	601a      	str	r2, [r3, #0]
 800537c:	e010      	b.n	80053a0 <Fast_Mode+0x3c0>
			char str[10];
			sprintf(str,"%d\n\r",dist);
			HAL_UART_Transmit(huart_debugg, str, strlen(str), 3);
			*/
		}
		else v_ref = 2*(dist-250);
 800537e:	8bfb      	ldrh	r3, [r7, #30]
 8005380:	3bfa      	subs	r3, #250	; 0xfa
 8005382:	005b      	lsls	r3, r3, #1
 8005384:	ee07 3a90 	vmov	s15, r3
 8005388:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800538c:	4b9d      	ldr	r3, [pc, #628]	; (8005604 <Fast_Mode+0x624>)
 800538e:	edc3 7a00 	vstr	s15, [r3]
 8005392:	e005      	b.n	80053a0 <Fast_Mode+0x3c0>
	}
	else LED_Y(1);
 8005394:	2200      	movs	r2, #0
 8005396:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800539a:	489c      	ldr	r0, [pc, #624]	; (800560c <Fast_Mode+0x62c>)
 800539c:	f004 f976 	bl	800968c <HAL_GPIO_WritePin>

	x_elso=(float)rxBuf[2]*204/248.0-102;//248
 80053a0:	4b97      	ldr	r3, [pc, #604]	; (8005600 <Fast_Mode+0x620>)
 80053a2:	789b      	ldrb	r3, [r3, #2]
 80053a4:	ee07 3a90 	vmov	s15, r3
 80053a8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80053ac:	ed9f 7a98 	vldr	s14, [pc, #608]	; 8005610 <Fast_Mode+0x630>
 80053b0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80053b4:	ee17 0a90 	vmov	r0, s15
 80053b8:	f7fb f8e6 	bl	8000588 <__aeabi_f2d>
 80053bc:	f04f 0200 	mov.w	r2, #0
 80053c0:	4b94      	ldr	r3, [pc, #592]	; (8005614 <Fast_Mode+0x634>)
 80053c2:	f7fb fa63 	bl	800088c <__aeabi_ddiv>
 80053c6:	4602      	mov	r2, r0
 80053c8:	460b      	mov	r3, r1
 80053ca:	4610      	mov	r0, r2
 80053cc:	4619      	mov	r1, r3
 80053ce:	f04f 0200 	mov.w	r2, #0
 80053d2:	4b91      	ldr	r3, [pc, #580]	; (8005618 <Fast_Mode+0x638>)
 80053d4:	f7fa ff78 	bl	80002c8 <__aeabi_dsub>
 80053d8:	4602      	mov	r2, r0
 80053da:	460b      	mov	r3, r1
 80053dc:	4610      	mov	r0, r2
 80053de:	4619      	mov	r1, r3
 80053e0:	f7fb fc02 	bl	8000be8 <__aeabi_d2f>
 80053e4:	4603      	mov	r3, r0
 80053e6:	4a8d      	ldr	r2, [pc, #564]	; (800561c <Fast_Mode+0x63c>)
 80053e8:	6013      	str	r3, [r2, #0]
	x_hatso=(float)rxBuf[3]*204/248.0-102; //244
 80053ea:	4b85      	ldr	r3, [pc, #532]	; (8005600 <Fast_Mode+0x620>)
 80053ec:	78db      	ldrb	r3, [r3, #3]
 80053ee:	ee07 3a90 	vmov	s15, r3
 80053f2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80053f6:	ed9f 7a86 	vldr	s14, [pc, #536]	; 8005610 <Fast_Mode+0x630>
 80053fa:	ee67 7a87 	vmul.f32	s15, s15, s14
 80053fe:	ee17 0a90 	vmov	r0, s15
 8005402:	f7fb f8c1 	bl	8000588 <__aeabi_f2d>
 8005406:	f04f 0200 	mov.w	r2, #0
 800540a:	4b82      	ldr	r3, [pc, #520]	; (8005614 <Fast_Mode+0x634>)
 800540c:	f7fb fa3e 	bl	800088c <__aeabi_ddiv>
 8005410:	4602      	mov	r2, r0
 8005412:	460b      	mov	r3, r1
 8005414:	4610      	mov	r0, r2
 8005416:	4619      	mov	r1, r3
 8005418:	f04f 0200 	mov.w	r2, #0
 800541c:	4b7e      	ldr	r3, [pc, #504]	; (8005618 <Fast_Mode+0x638>)
 800541e:	f7fa ff53 	bl	80002c8 <__aeabi_dsub>
 8005422:	4602      	mov	r2, r0
 8005424:	460b      	mov	r3, r1
 8005426:	4610      	mov	r0, r2
 8005428:	4619      	mov	r1, r3
 800542a:	f7fb fbdd 	bl	8000be8 <__aeabi_d2f>
 800542e:	4603      	mov	r3, r0
 8005430:	4a7b      	ldr	r2, [pc, #492]	; (8005620 <Fast_Mode+0x640>)
 8005432:	6013      	str	r3, [r2, #0]
	delta=atan((double)(x_elso-x_hatso)/L_SENSOR);
 8005434:	4b79      	ldr	r3, [pc, #484]	; (800561c <Fast_Mode+0x63c>)
 8005436:	ed93 7a00 	vldr	s14, [r3]
 800543a:	4b79      	ldr	r3, [pc, #484]	; (8005620 <Fast_Mode+0x640>)
 800543c:	edd3 7a00 	vldr	s15, [r3]
 8005440:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005444:	ee17 0a90 	vmov	r0, s15
 8005448:	f7fb f89e 	bl	8000588 <__aeabi_f2d>
 800544c:	f04f 0200 	mov.w	r2, #0
 8005450:	4b74      	ldr	r3, [pc, #464]	; (8005624 <Fast_Mode+0x644>)
 8005452:	f7fb fa1b 	bl	800088c <__aeabi_ddiv>
 8005456:	4602      	mov	r2, r0
 8005458:	460b      	mov	r3, r1
 800545a:	ec43 2b17 	vmov	d7, r2, r3
 800545e:	eeb0 0a47 	vmov.f32	s0, s14
 8005462:	eef0 0a67 	vmov.f32	s1, s15
 8005466:	f00a fe47 	bl	80100f8 <atan>
 800546a:	eeb0 7a40 	vmov.f32	s14, s0
 800546e:	eef0 7a60 	vmov.f32	s15, s1
 8005472:	4b6d      	ldr	r3, [pc, #436]	; (8005628 <Fast_Mode+0x648>)
 8005474:	ed83 7b00 	vstr	d7, [r3]
	///////////////////////////////////////////////////////////////////
	char str[10];
	sprintf(str,"%f\n\r",delta*1000);
 8005478:	4b6b      	ldr	r3, [pc, #428]	; (8005628 <Fast_Mode+0x648>)
 800547a:	e9d3 0100 	ldrd	r0, r1, [r3]
 800547e:	f04f 0200 	mov.w	r2, #0
 8005482:	4b6a      	ldr	r3, [pc, #424]	; (800562c <Fast_Mode+0x64c>)
 8005484:	f7fb f8d8 	bl	8000638 <__aeabi_dmul>
 8005488:	4602      	mov	r2, r0
 800548a:	460b      	mov	r3, r1
 800548c:	f107 0014 	add.w	r0, r7, #20
 8005490:	4967      	ldr	r1, [pc, #412]	; (8005630 <Fast_Mode+0x650>)
 8005492:	f008 fbb7 	bl	800dc04 <siprintf>
	HAL_UART_Transmit(huart_debugg,str, strlen(str), 10);
 8005496:	f107 0314 	add.w	r3, r7, #20
 800549a:	4618      	mov	r0, r3
 800549c:	f7fa feb8 	bl	8000210 <strlen>
 80054a0:	4603      	mov	r3, r0
 80054a2:	b29a      	uxth	r2, r3
 80054a4:	f107 0114 	add.w	r1, r7, #20
 80054a8:	230a      	movs	r3, #10
 80054aa:	68f8      	ldr	r0, [r7, #12]
 80054ac:	f006 fe41 	bl	800c132 <HAL_UART_Transmit>
	HAL_Delay(500);
 80054b0:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80054b4:	f002 fa50 	bl	8007958 <HAL_Delay>
	////////////////////////////////////////////////////////////////////
	/**/
	//szabályozóparaméterek ujraszámolása az aktuális sebesség alapján
	if(state==SC_MODE)
 80054b8:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80054bc:	2b00      	cmp	r3, #0
 80054be:	d10a      	bne.n	80054d6 <Fast_Mode+0x4f6>
	{
		k_p = -0.004;
 80054c0:	4b5c      	ldr	r3, [pc, #368]	; (8005634 <Fast_Mode+0x654>)
 80054c2:	4a5d      	ldr	r2, [pc, #372]	; (8005638 <Fast_Mode+0x658>)
 80054c4:	601a      	str	r2, [r3, #0]
		kD = -0.004;
 80054c6:	4b5d      	ldr	r3, [pc, #372]	; (800563c <Fast_Mode+0x65c>)
 80054c8:	4a5b      	ldr	r2, [pc, #364]	; (8005638 <Fast_Mode+0x658>)
 80054ca:	601a      	str	r2, [r3, #0]
		k_delta = 0;
 80054cc:	4b5c      	ldr	r3, [pc, #368]	; (8005640 <Fast_Mode+0x660>)
 80054ce:	f04f 0200 	mov.w	r2, #0
 80054d2:	601a      	str	r2, [r3, #0]
 80054d4:	e0cd      	b.n	8005672 <Fast_Mode+0x692>
	}

	else //FREERUN modes
	{
		if(v>150 || v<-150)
 80054d6:	4b5b      	ldr	r3, [pc, #364]	; (8005644 <Fast_Mode+0x664>)
 80054d8:	edd3 7a00 	vldr	s15, [r3]
 80054dc:	ed9f 7a5a 	vldr	s14, [pc, #360]	; 8005648 <Fast_Mode+0x668>
 80054e0:	eef4 7ac7 	vcmpe.f32	s15, s14
 80054e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80054e8:	dc0a      	bgt.n	8005500 <Fast_Mode+0x520>
 80054ea:	4b56      	ldr	r3, [pc, #344]	; (8005644 <Fast_Mode+0x664>)
 80054ec:	edd3 7a00 	vldr	s15, [r3]
 80054f0:	ed9f 7a56 	vldr	s14, [pc, #344]	; 800564c <Fast_Mode+0x66c>
 80054f4:	eef4 7ac7 	vcmpe.f32	s15, s14
 80054f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80054fc:	f140 80b0 	bpl.w	8005660 <Fast_Mode+0x680>
		{
			if(v<2200) //kanyar
 8005500:	4b50      	ldr	r3, [pc, #320]	; (8005644 <Fast_Mode+0x664>)
 8005502:	edd3 7a00 	vldr	s15, [r3]
 8005506:	ed9f 7a52 	vldr	s14, [pc, #328]	; 8005650 <Fast_Mode+0x670>
 800550a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800550e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005512:	d50a      	bpl.n	800552a <Fast_Mode+0x54a>
			{
				k_p = -0.0026;//-L/(v*v)*S1MULTS2_SLOW;
 8005514:	4b47      	ldr	r3, [pc, #284]	; (8005634 <Fast_Mode+0x654>)
 8005516:	4a4f      	ldr	r2, [pc, #316]	; (8005654 <Fast_Mode+0x674>)
 8005518:	601a      	str	r2, [r3, #0]
				k_delta = 0;//L/v*(S1ADDS2_SLOW-v*k_p);
 800551a:	4b49      	ldr	r3, [pc, #292]	; (8005640 <Fast_Mode+0x660>)
 800551c:	f04f 0200 	mov.w	r2, #0
 8005520:	601a      	str	r2, [r3, #0]
				kD=-0.06;//-0.06
 8005522:	4b46      	ldr	r3, [pc, #280]	; (800563c <Fast_Mode+0x65c>)
 8005524:	4a4c      	ldr	r2, [pc, #304]	; (8005658 <Fast_Mode+0x678>)
 8005526:	601a      	str	r2, [r3, #0]
			if(v<2200) //kanyar
 8005528:	e0a3      	b.n	8005672 <Fast_Mode+0x692>
			}
			else //egyenes
			{
				k_p = -L*S1MULTS2_FAST/(v*v);
 800552a:	4b46      	ldr	r3, [pc, #280]	; (8005644 <Fast_Mode+0x664>)
 800552c:	ed93 7a00 	vldr	s14, [r3]
 8005530:	4b44      	ldr	r3, [pc, #272]	; (8005644 <Fast_Mode+0x664>)
 8005532:	edd3 7a00 	vldr	s15, [r3]
 8005536:	ee67 7a27 	vmul.f32	s15, s14, s15
 800553a:	ee17 0a90 	vmov	r0, s15
 800553e:	f7fb f823 	bl	8000588 <__aeabi_f2d>
 8005542:	4602      	mov	r2, r0
 8005544:	460b      	mov	r3, r1
 8005546:	a124      	add	r1, pc, #144	; (adr r1, 80055d8 <Fast_Mode+0x5f8>)
 8005548:	e9d1 0100 	ldrd	r0, r1, [r1]
 800554c:	f7fb f99e 	bl	800088c <__aeabi_ddiv>
 8005550:	4602      	mov	r2, r0
 8005552:	460b      	mov	r3, r1
 8005554:	4610      	mov	r0, r2
 8005556:	4619      	mov	r1, r3
 8005558:	f7fb fb46 	bl	8000be8 <__aeabi_d2f>
 800555c:	4603      	mov	r3, r0
 800555e:	4a35      	ldr	r2, [pc, #212]	; (8005634 <Fast_Mode+0x654>)
 8005560:	6013      	str	r3, [r2, #0]
				k_delta = L*(S1ADDS2_FAST-v*k_p)/v;
 8005562:	4b38      	ldr	r3, [pc, #224]	; (8005644 <Fast_Mode+0x664>)
 8005564:	ed93 7a00 	vldr	s14, [r3]
 8005568:	4b32      	ldr	r3, [pc, #200]	; (8005634 <Fast_Mode+0x654>)
 800556a:	edd3 7a00 	vldr	s15, [r3]
 800556e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005572:	ee17 0a90 	vmov	r0, s15
 8005576:	f7fb f807 	bl	8000588 <__aeabi_f2d>
 800557a:	4602      	mov	r2, r0
 800557c:	460b      	mov	r3, r1
 800557e:	a118      	add	r1, pc, #96	; (adr r1, 80055e0 <Fast_Mode+0x600>)
 8005580:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005584:	f7fa fea0 	bl	80002c8 <__aeabi_dsub>
 8005588:	4602      	mov	r2, r0
 800558a:	460b      	mov	r3, r1
 800558c:	4610      	mov	r0, r2
 800558e:	4619      	mov	r1, r3
 8005590:	a315      	add	r3, pc, #84	; (adr r3, 80055e8 <Fast_Mode+0x608>)
 8005592:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005596:	f7fb f84f 	bl	8000638 <__aeabi_dmul>
 800559a:	4602      	mov	r2, r0
 800559c:	460b      	mov	r3, r1
 800559e:	4614      	mov	r4, r2
 80055a0:	461d      	mov	r5, r3
 80055a2:	4b28      	ldr	r3, [pc, #160]	; (8005644 <Fast_Mode+0x664>)
 80055a4:	681b      	ldr	r3, [r3, #0]
 80055a6:	4618      	mov	r0, r3
 80055a8:	f7fa ffee 	bl	8000588 <__aeabi_f2d>
 80055ac:	4602      	mov	r2, r0
 80055ae:	460b      	mov	r3, r1
 80055b0:	4620      	mov	r0, r4
 80055b2:	4629      	mov	r1, r5
 80055b4:	f7fb f96a 	bl	800088c <__aeabi_ddiv>
 80055b8:	4602      	mov	r2, r0
 80055ba:	460b      	mov	r3, r1
 80055bc:	4610      	mov	r0, r2
 80055be:	4619      	mov	r1, r3
 80055c0:	f7fb fb12 	bl	8000be8 <__aeabi_d2f>
 80055c4:	4603      	mov	r3, r0
 80055c6:	4a1e      	ldr	r2, [pc, #120]	; (8005640 <Fast_Mode+0x660>)
 80055c8:	6013      	str	r3, [r2, #0]
				kD=-0.05;
 80055ca:	4b1c      	ldr	r3, [pc, #112]	; (800563c <Fast_Mode+0x65c>)
 80055cc:	4a23      	ldr	r2, [pc, #140]	; (800565c <Fast_Mode+0x67c>)
 80055ce:	601a      	str	r2, [r3, #0]
			if(v<2200) //kanyar
 80055d0:	e04f      	b.n	8005672 <Fast_Mode+0x692>
 80055d2:	bf00      	nop
 80055d4:	f3af 8000 	nop.w
 80055d8:	b22d0e56 	.word	0xb22d0e56
 80055dc:	c0b75f1d 	.word	0xc0b75f1d
 80055e0:	8f5c28f6 	.word	0x8f5c28f6
 80055e4:	c02275c2 	.word	0xc02275c2
 80055e8:	00000000 	.word	0x00000000
 80055ec:	40716000 	.word	0x40716000
 80055f0:	200007a0 	.word	0x200007a0
 80055f4:	200007a4 	.word	0x200007a4
 80055f8:	20000051 	.word	0x20000051
 80055fc:	200007a8 	.word	0x200007a8
 8005600:	20000774 	.word	0x20000774
 8005604:	20000338 	.word	0x20000338
 8005608:	44e10000 	.word	0x44e10000
 800560c:	40020400 	.word	0x40020400
 8005610:	434c0000 	.word	0x434c0000
 8005614:	406f0000 	.word	0x406f0000
 8005618:	40598000 	.word	0x40598000
 800561c:	200007ac 	.word	0x200007ac
 8005620:	200007b0 	.word	0x200007b0
 8005624:	407c4000 	.word	0x407c4000
 8005628:	200007b8 	.word	0x200007b8
 800562c:	408f4000 	.word	0x408f4000
 8005630:	080116f4 	.word	0x080116f4
 8005634:	200000fc 	.word	0x200000fc
 8005638:	bb83126f 	.word	0xbb83126f
 800563c:	20000100 	.word	0x20000100
 8005640:	20000104 	.word	0x20000104
 8005644:	20000754 	.word	0x20000754
 8005648:	43160000 	.word	0x43160000
 800564c:	c3160000 	.word	0xc3160000
 8005650:	45098000 	.word	0x45098000
 8005654:	bb2a64c3 	.word	0xbb2a64c3
 8005658:	bd75c28f 	.word	0xbd75c28f
 800565c:	bd4ccccd 	.word	0xbd4ccccd
			}
		}
		else
		{
			k_p=K_P_200;
 8005660:	4b2f      	ldr	r3, [pc, #188]	; (8005720 <Fast_Mode+0x740>)
 8005662:	4a30      	ldr	r2, [pc, #192]	; (8005724 <Fast_Mode+0x744>)
 8005664:	601a      	str	r2, [r3, #0]
			k_delta=K_DELTA_200;
 8005666:	4b30      	ldr	r3, [pc, #192]	; (8005728 <Fast_Mode+0x748>)
 8005668:	4a30      	ldr	r2, [pc, #192]	; (800572c <Fast_Mode+0x74c>)
 800566a:	601a      	str	r2, [r3, #0]
			kD=-0.06;
 800566c:	4b30      	ldr	r3, [pc, #192]	; (8005730 <Fast_Mode+0x750>)
 800566e:	4a31      	ldr	r2, [pc, #196]	; (8005734 <Fast_Mode+0x754>)
 8005670:	601a      	str	r2, [r3, #0]
		}
	}
	gamma = -k_p * x_elso -k_delta * delta - kD * (x_elso-x_elso_prev);
 8005672:	4b2b      	ldr	r3, [pc, #172]	; (8005720 <Fast_Mode+0x740>)
 8005674:	edd3 7a00 	vldr	s15, [r3]
 8005678:	eeb1 7a67 	vneg.f32	s14, s15
 800567c:	4b2e      	ldr	r3, [pc, #184]	; (8005738 <Fast_Mode+0x758>)
 800567e:	edd3 7a00 	vldr	s15, [r3]
 8005682:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005686:	ee17 0a90 	vmov	r0, s15
 800568a:	f7fa ff7d 	bl	8000588 <__aeabi_f2d>
 800568e:	4604      	mov	r4, r0
 8005690:	460d      	mov	r5, r1
 8005692:	4b25      	ldr	r3, [pc, #148]	; (8005728 <Fast_Mode+0x748>)
 8005694:	681b      	ldr	r3, [r3, #0]
 8005696:	4618      	mov	r0, r3
 8005698:	f7fa ff76 	bl	8000588 <__aeabi_f2d>
 800569c:	4b27      	ldr	r3, [pc, #156]	; (800573c <Fast_Mode+0x75c>)
 800569e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80056a2:	f7fa ffc9 	bl	8000638 <__aeabi_dmul>
 80056a6:	4602      	mov	r2, r0
 80056a8:	460b      	mov	r3, r1
 80056aa:	4620      	mov	r0, r4
 80056ac:	4629      	mov	r1, r5
 80056ae:	f7fa fe0b 	bl	80002c8 <__aeabi_dsub>
 80056b2:	4602      	mov	r2, r0
 80056b4:	460b      	mov	r3, r1
 80056b6:	4614      	mov	r4, r2
 80056b8:	461d      	mov	r5, r3
 80056ba:	4b1f      	ldr	r3, [pc, #124]	; (8005738 <Fast_Mode+0x758>)
 80056bc:	ed93 7a00 	vldr	s14, [r3]
 80056c0:	4b1f      	ldr	r3, [pc, #124]	; (8005740 <Fast_Mode+0x760>)
 80056c2:	edd3 7a00 	vldr	s15, [r3]
 80056c6:	ee37 7a67 	vsub.f32	s14, s14, s15
 80056ca:	4b19      	ldr	r3, [pc, #100]	; (8005730 <Fast_Mode+0x750>)
 80056cc:	edd3 7a00 	vldr	s15, [r3]
 80056d0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80056d4:	ee17 0a90 	vmov	r0, s15
 80056d8:	f7fa ff56 	bl	8000588 <__aeabi_f2d>
 80056dc:	4602      	mov	r2, r0
 80056de:	460b      	mov	r3, r1
 80056e0:	4620      	mov	r0, r4
 80056e2:	4629      	mov	r1, r5
 80056e4:	f7fa fdf0 	bl	80002c8 <__aeabi_dsub>
 80056e8:	4602      	mov	r2, r0
 80056ea:	460b      	mov	r3, r1
 80056ec:	4610      	mov	r0, r2
 80056ee:	4619      	mov	r1, r3
 80056f0:	f7fb fa7a 	bl	8000be8 <__aeabi_d2f>
 80056f4:	4603      	mov	r3, r0
 80056f6:	4a13      	ldr	r2, [pc, #76]	; (8005744 <Fast_Mode+0x764>)
 80056f8:	6013      	str	r3, [r2, #0]
	x_elso_prev = x_elso;
 80056fa:	4b0f      	ldr	r3, [pc, #60]	; (8005738 <Fast_Mode+0x758>)
 80056fc:	681b      	ldr	r3, [r3, #0]
 80056fe:	4a10      	ldr	r2, [pc, #64]	; (8005740 <Fast_Mode+0x760>)
 8005700:	6013      	str	r3, [r2, #0]

	*state_pointer=state;
 8005702:	68bb      	ldr	r3, [r7, #8]
 8005704:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 8005708:	701a      	strb	r2, [r3, #0]
	return gamma;
 800570a:	4b0e      	ldr	r3, [pc, #56]	; (8005744 <Fast_Mode+0x764>)
 800570c:	681b      	ldr	r3, [r3, #0]
}
 800570e:	ee07 3a90 	vmov	s15, r3
 8005712:	eeb0 0a67 	vmov.f32	s0, s15
 8005716:	3728      	adds	r7, #40	; 0x28
 8005718:	46bd      	mov	sp, r7
 800571a:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 800571e:	bf00      	nop
 8005720:	200000fc 	.word	0x200000fc
 8005724:	ba30dc42 	.word	0xba30dc42
 8005728:	20000104 	.word	0x20000104
 800572c:	bf21eadf 	.word	0xbf21eadf
 8005730:	20000100 	.word	0x20000100
 8005734:	bd75c28f 	.word	0xbd75c28f
 8005738:	200007ac 	.word	0x200007ac
 800573c:	200007b8 	.word	0x200007b8
 8005740:	200007c0 	.word	0x200007c0
 8005744:	200007c4 	.word	0x200007c4

08005748 <Skill_Mode>:

float Skill_Mode(UART_HandleTypeDef *huart_debugg, float kP, float kD, uint32_t t)
{
 8005748:	b580      	push	{r7, lr}
 800574a:	b088      	sub	sp, #32
 800574c:	af00      	add	r7, sp, #0
 800574e:	60f8      	str	r0, [r7, #12]
 8005750:	ed87 0a02 	vstr	s0, [r7, #8]
 8005754:	edc7 0a01 	vstr	s1, [r7, #4]
 8005758:	6039      	str	r1, [r7, #0]
	static uint32_t t_prev=0;
	int byte=0;
 800575a:	2300      	movs	r3, #0
 800575c:	61fb      	str	r3, [r7, #28]
	static int byte_prev=0;
	int delta_byte;
	float p=0;
 800575e:	f04f 0300 	mov.w	r3, #0
 8005762:	617b      	str	r3, [r7, #20]
/*	uint8_t str[40];
	sprintf(str,"%d,  %d,  %d,  %d,  %d\n\r",rxBuf[1],rxBuf[2],rxBuf[3],rxBuf[4],rxBuf[5]);
	HAL_UART_Transmit(huart_debugg, str, strlen(str), 10);
*/

	if(LINE_CNT>3 || ignore)//ha éppen node-on vagyunk, akkor az átlagot követjük
 8005764:	4b85      	ldr	r3, [pc, #532]	; (800597c <Skill_Mode+0x234>)
 8005766:	785b      	ldrb	r3, [r3, #1]
 8005768:	2b03      	cmp	r3, #3
 800576a:	d803      	bhi.n	8005774 <Skill_Mode+0x2c>
 800576c:	4b84      	ldr	r3, [pc, #528]	; (8005980 <Skill_Mode+0x238>)
 800576e:	781b      	ldrb	r3, [r3, #0]
 8005770:	2b00      	cmp	r3, #0
 8005772:	d022      	beq.n	80057ba <Skill_Mode+0x72>
	{
		byte=0;
 8005774:	2300      	movs	r3, #0
 8005776:	61fb      	str	r3, [r7, #28]
		for(i=0;i<LINE_CNT;i++)
 8005778:	2300      	movs	r3, #0
 800577a:	61bb      	str	r3, [r7, #24]
 800577c:	e00a      	b.n	8005794 <Skill_Mode+0x4c>
		{
			byte += rxBuf[i+2];
 800577e:	69bb      	ldr	r3, [r7, #24]
 8005780:	3302      	adds	r3, #2
 8005782:	4a7e      	ldr	r2, [pc, #504]	; (800597c <Skill_Mode+0x234>)
 8005784:	5cd3      	ldrb	r3, [r2, r3]
 8005786:	461a      	mov	r2, r3
 8005788:	69fb      	ldr	r3, [r7, #28]
 800578a:	4413      	add	r3, r2
 800578c:	61fb      	str	r3, [r7, #28]
		for(i=0;i<LINE_CNT;i++)
 800578e:	69bb      	ldr	r3, [r7, #24]
 8005790:	3301      	adds	r3, #1
 8005792:	61bb      	str	r3, [r7, #24]
 8005794:	4b79      	ldr	r3, [pc, #484]	; (800597c <Skill_Mode+0x234>)
 8005796:	785b      	ldrb	r3, [r3, #1]
 8005798:	461a      	mov	r2, r3
 800579a:	69bb      	ldr	r3, [r7, #24]
 800579c:	4293      	cmp	r3, r2
 800579e:	dbee      	blt.n	800577e <Skill_Mode+0x36>
		}

		if(LINE_CNT) byte /= LINE_CNT;
 80057a0:	4b76      	ldr	r3, [pc, #472]	; (800597c <Skill_Mode+0x234>)
 80057a2:	785b      	ldrb	r3, [r3, #1]
 80057a4:	2b00      	cmp	r3, #0
 80057a6:	f000 8097 	beq.w	80058d8 <Skill_Mode+0x190>
 80057aa:	4b74      	ldr	r3, [pc, #464]	; (800597c <Skill_Mode+0x234>)
 80057ac:	785b      	ldrb	r3, [r3, #1]
 80057ae:	461a      	mov	r2, r3
 80057b0:	69fb      	ldr	r3, [r7, #28]
 80057b2:	fb93 f3f2 	sdiv	r3, r3, r2
 80057b6:	61fb      	str	r3, [r7, #28]
 80057b8:	e08e      	b.n	80058d8 <Skill_Mode+0x190>
	}
	else if((path==LEFT && orientation==FORWARD) || (path==RIGHT && orientation==REVERSE))
 80057ba:	4b72      	ldr	r3, [pc, #456]	; (8005984 <Skill_Mode+0x23c>)
 80057bc:	781b      	ldrb	r3, [r3, #0]
 80057be:	2b00      	cmp	r3, #0
 80057c0:	d103      	bne.n	80057ca <Skill_Mode+0x82>
 80057c2:	4b71      	ldr	r3, [pc, #452]	; (8005988 <Skill_Mode+0x240>)
 80057c4:	781b      	ldrb	r3, [r3, #0]
 80057c6:	2b00      	cmp	r3, #0
 80057c8:	d007      	beq.n	80057da <Skill_Mode+0x92>
 80057ca:	4b6e      	ldr	r3, [pc, #440]	; (8005984 <Skill_Mode+0x23c>)
 80057cc:	781b      	ldrb	r3, [r3, #0]
 80057ce:	2b02      	cmp	r3, #2
 80057d0:	d10f      	bne.n	80057f2 <Skill_Mode+0xaa>
 80057d2:	4b6d      	ldr	r3, [pc, #436]	; (8005988 <Skill_Mode+0x240>)
 80057d4:	781b      	ldrb	r3, [r3, #0]
 80057d6:	2b01      	cmp	r3, #1
 80057d8:	d10b      	bne.n	80057f2 <Skill_Mode+0xaa>
	{
		byte = LINE1; //az első vonalt kell követni
 80057da:	4b68      	ldr	r3, [pc, #416]	; (800597c <Skill_Mode+0x234>)
 80057dc:	789b      	ldrb	r3, [r3, #2]
 80057de:	61fb      	str	r3, [r7, #28]
		delta_byte=abs((int)byte-byte_prev);
 80057e0:	4b6a      	ldr	r3, [pc, #424]	; (800598c <Skill_Mode+0x244>)
 80057e2:	681b      	ldr	r3, [r3, #0]
 80057e4:	69fa      	ldr	r2, [r7, #28]
 80057e6:	1ad3      	subs	r3, r2, r3
 80057e8:	2b00      	cmp	r3, #0
 80057ea:	bfb8      	it	lt
 80057ec:	425b      	neglt	r3, r3
 80057ee:	613b      	str	r3, [r7, #16]
 80057f0:	e072      	b.n	80058d8 <Skill_Mode+0x190>
			estuary=ESTUARY_MODE_OFF;
			LED_G(0);
		}
*/
	}
	else if((path==RIGHT && orientation==FORWARD) || (path==LEFT && orientation==REVERSE))
 80057f2:	4b64      	ldr	r3, [pc, #400]	; (8005984 <Skill_Mode+0x23c>)
 80057f4:	781b      	ldrb	r3, [r3, #0]
 80057f6:	2b02      	cmp	r3, #2
 80057f8:	d103      	bne.n	8005802 <Skill_Mode+0xba>
 80057fa:	4b63      	ldr	r3, [pc, #396]	; (8005988 <Skill_Mode+0x240>)
 80057fc:	781b      	ldrb	r3, [r3, #0]
 80057fe:	2b00      	cmp	r3, #0
 8005800:	d007      	beq.n	8005812 <Skill_Mode+0xca>
 8005802:	4b60      	ldr	r3, [pc, #384]	; (8005984 <Skill_Mode+0x23c>)
 8005804:	781b      	ldrb	r3, [r3, #0]
 8005806:	2b00      	cmp	r3, #0
 8005808:	d112      	bne.n	8005830 <Skill_Mode+0xe8>
 800580a:	4b5f      	ldr	r3, [pc, #380]	; (8005988 <Skill_Mode+0x240>)
 800580c:	781b      	ldrb	r3, [r3, #0]
 800580e:	2b01      	cmp	r3, #1
 8005810:	d10e      	bne.n	8005830 <Skill_Mode+0xe8>
	{
		byte = rxBuf[1+LINE_CNT];//az utolsó vonalat kell követni
 8005812:	4b5a      	ldr	r3, [pc, #360]	; (800597c <Skill_Mode+0x234>)
 8005814:	785b      	ldrb	r3, [r3, #1]
 8005816:	3301      	adds	r3, #1
 8005818:	4a58      	ldr	r2, [pc, #352]	; (800597c <Skill_Mode+0x234>)
 800581a:	5cd3      	ldrb	r3, [r2, r3]
 800581c:	61fb      	str	r3, [r7, #28]
		delta_byte=abs((int)byte-byte_prev);
 800581e:	4b5b      	ldr	r3, [pc, #364]	; (800598c <Skill_Mode+0x244>)
 8005820:	681b      	ldr	r3, [r3, #0]
 8005822:	69fa      	ldr	r2, [r7, #28]
 8005824:	1ad3      	subs	r3, r2, r3
 8005826:	2b00      	cmp	r3, #0
 8005828:	bfb8      	it	lt
 800582a:	425b      	neglt	r3, r3
 800582c:	613b      	str	r3, [r7, #16]
 800582e:	e053      	b.n	80058d8 <Skill_Mode+0x190>
			estuary=ESTUARY_MODE_OFF;
			LED_G(0);
		}*/
	}

	else if(path==MIDDLE)
 8005830:	4b54      	ldr	r3, [pc, #336]	; (8005984 <Skill_Mode+0x23c>)
 8005832:	781b      	ldrb	r3, [r3, #0]
 8005834:	2b01      	cmp	r3, #1
 8005836:	d14f      	bne.n	80058d8 <Skill_Mode+0x190>
	{
		if(LINE_CNT==1)
 8005838:	4b50      	ldr	r3, [pc, #320]	; (800597c <Skill_Mode+0x234>)
 800583a:	785b      	ldrb	r3, [r3, #1]
 800583c:	2b01      	cmp	r3, #1
 800583e:	d10b      	bne.n	8005858 <Skill_Mode+0x110>
		{
			byte = byte_middle = LINE1;//ha csak 1 vonal van, akkor azt követjük
 8005840:	4b4e      	ldr	r3, [pc, #312]	; (800597c <Skill_Mode+0x234>)
 8005842:	789b      	ldrb	r3, [r3, #2]
 8005844:	461a      	mov	r2, r3
 8005846:	4b52      	ldr	r3, [pc, #328]	; (8005990 <Skill_Mode+0x248>)
 8005848:	601a      	str	r2, [r3, #0]
 800584a:	4b51      	ldr	r3, [pc, #324]	; (8005990 <Skill_Mode+0x248>)
 800584c:	681b      	ldr	r3, [r3, #0]
 800584e:	61fb      	str	r3, [r7, #28]
			middleLineState=1;
 8005850:	4b50      	ldr	r3, [pc, #320]	; (8005994 <Skill_Mode+0x24c>)
 8005852:	2201      	movs	r2, #1
 8005854:	701a      	strb	r2, [r3, #0]
 8005856:	e03f      	b.n	80058d8 <Skill_Mode+0x190>
		}
		else if(LINE_CNT==3)//ha 3 vonal van
 8005858:	4b48      	ldr	r3, [pc, #288]	; (800597c <Skill_Mode+0x234>)
 800585a:	785b      	ldrb	r3, [r3, #1]
 800585c:	2b03      	cmp	r3, #3
 800585e:	d10b      	bne.n	8005878 <Skill_Mode+0x130>
		{
			byte = byte_middle = LINE2;//a középsőt követjük
 8005860:	4b46      	ldr	r3, [pc, #280]	; (800597c <Skill_Mode+0x234>)
 8005862:	78db      	ldrb	r3, [r3, #3]
 8005864:	461a      	mov	r2, r3
 8005866:	4b4a      	ldr	r3, [pc, #296]	; (8005990 <Skill_Mode+0x248>)
 8005868:	601a      	str	r2, [r3, #0]
 800586a:	4b49      	ldr	r3, [pc, #292]	; (8005990 <Skill_Mode+0x248>)
 800586c:	681b      	ldr	r3, [r3, #0]
 800586e:	61fb      	str	r3, [r7, #28]
			//folyamatosan nézzük, hogy az 1. és 3.vonal milyen messze van a vonalszenor középontjától
			middleLineState=1;
 8005870:	4b48      	ldr	r3, [pc, #288]	; (8005994 <Skill_Mode+0x24c>)
 8005872:	2201      	movs	r2, #1
 8005874:	701a      	strb	r2, [r3, #0]
 8005876:	e02f      	b.n	80058d8 <Skill_Mode+0x190>
		}
		else if(LINE_CNT==2)//ha 2 vonal van, az azt jelenti, hogy az elágazás már annyira szétgáazott, hogy csak 2-t látunk a 3 vonalból
 8005878:	4b40      	ldr	r3, [pc, #256]	; (800597c <Skill_Mode+0x234>)
 800587a:	785b      	ldrb	r3, [r3, #1]
 800587c:	2b02      	cmp	r3, #2
 800587e:	d12b      	bne.n	80058d8 <Skill_Mode+0x190>
		{
			if(middleLineState==1)
 8005880:	4b44      	ldr	r3, [pc, #272]	; (8005994 <Skill_Mode+0x24c>)
 8005882:	781b      	ldrb	r3, [r3, #0]
 8005884:	2b01      	cmp	r3, #1
 8005886:	d116      	bne.n	80058b6 <Skill_Mode+0x16e>
			{
				tmp1=abs(byte_middle-LINE1);
 8005888:	4b41      	ldr	r3, [pc, #260]	; (8005990 <Skill_Mode+0x248>)
 800588a:	681b      	ldr	r3, [r3, #0]
 800588c:	4a3b      	ldr	r2, [pc, #236]	; (800597c <Skill_Mode+0x234>)
 800588e:	7892      	ldrb	r2, [r2, #2]
 8005890:	1a9b      	subs	r3, r3, r2
 8005892:	2b00      	cmp	r3, #0
 8005894:	bfb8      	it	lt
 8005896:	425b      	neglt	r3, r3
 8005898:	4a3f      	ldr	r2, [pc, #252]	; (8005998 <Skill_Mode+0x250>)
 800589a:	6013      	str	r3, [r2, #0]
				tmp2=abs(byte_middle-LINE2);
 800589c:	4b3c      	ldr	r3, [pc, #240]	; (8005990 <Skill_Mode+0x248>)
 800589e:	681b      	ldr	r3, [r3, #0]
 80058a0:	4a36      	ldr	r2, [pc, #216]	; (800597c <Skill_Mode+0x234>)
 80058a2:	78d2      	ldrb	r2, [r2, #3]
 80058a4:	1a9b      	subs	r3, r3, r2
 80058a6:	2b00      	cmp	r3, #0
 80058a8:	bfb8      	it	lt
 80058aa:	425b      	neglt	r3, r3
 80058ac:	4a3b      	ldr	r2, [pc, #236]	; (800599c <Skill_Mode+0x254>)
 80058ae:	6013      	str	r3, [r2, #0]
				middleLineState=2;
 80058b0:	4b38      	ldr	r3, [pc, #224]	; (8005994 <Skill_Mode+0x24c>)
 80058b2:	2202      	movs	r2, #2
 80058b4:	701a      	strb	r2, [r3, #0]
			}
			if(middleLineState==2)
 80058b6:	4b37      	ldr	r3, [pc, #220]	; (8005994 <Skill_Mode+0x24c>)
 80058b8:	781b      	ldrb	r3, [r3, #0]
 80058ba:	2b02      	cmp	r3, #2
 80058bc:	d10c      	bne.n	80058d8 <Skill_Mode+0x190>
			{
				if(tmp1<tmp2) byte = LINE1; //ha a jobboldali vonalat veszítettük el
 80058be:	4b36      	ldr	r3, [pc, #216]	; (8005998 <Skill_Mode+0x250>)
 80058c0:	681a      	ldr	r2, [r3, #0]
 80058c2:	4b36      	ldr	r3, [pc, #216]	; (800599c <Skill_Mode+0x254>)
 80058c4:	681b      	ldr	r3, [r3, #0]
 80058c6:	429a      	cmp	r2, r3
 80058c8:	da03      	bge.n	80058d2 <Skill_Mode+0x18a>
 80058ca:	4b2c      	ldr	r3, [pc, #176]	; (800597c <Skill_Mode+0x234>)
 80058cc:	789b      	ldrb	r3, [r3, #2]
 80058ce:	61fb      	str	r3, [r7, #28]
 80058d0:	e002      	b.n	80058d8 <Skill_Mode+0x190>
				else byte = LINE2; //ha a baloldali vonalat veszítettük el
 80058d2:	4b2a      	ldr	r3, [pc, #168]	; (800597c <Skill_Mode+0x234>)
 80058d4:	78db      	ldrb	r3, [r3, #3]
 80058d6:	61fb      	str	r3, [r7, #28]
			}
		}
	}
	if(estuary==ESTUARY_MODE_INIT)estuary=ESTUARY_MODE_OFF;
 80058d8:	4b31      	ldr	r3, [pc, #196]	; (80059a0 <Skill_Mode+0x258>)
 80058da:	781b      	ldrb	r3, [r3, #0]
 80058dc:	2b00      	cmp	r3, #0
 80058de:	d102      	bne.n	80058e6 <Skill_Mode+0x19e>
 80058e0:	4b2f      	ldr	r3, [pc, #188]	; (80059a0 <Skill_Mode+0x258>)
 80058e2:	2201      	movs	r2, #1
 80058e4:	701a      	strb	r2, [r3, #0]
	//p = (float)byte * 204/248.0-102;
	p = (float)byte * 204/248.0-102;
 80058e6:	69fb      	ldr	r3, [r7, #28]
 80058e8:	ee07 3a90 	vmov	s15, r3
 80058ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80058f0:	ed9f 7a2c 	vldr	s14, [pc, #176]	; 80059a4 <Skill_Mode+0x25c>
 80058f4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80058f8:	ee17 0a90 	vmov	r0, s15
 80058fc:	f7fa fe44 	bl	8000588 <__aeabi_f2d>
 8005900:	f04f 0200 	mov.w	r2, #0
 8005904:	4b28      	ldr	r3, [pc, #160]	; (80059a8 <Skill_Mode+0x260>)
 8005906:	f7fa ffc1 	bl	800088c <__aeabi_ddiv>
 800590a:	4602      	mov	r2, r0
 800590c:	460b      	mov	r3, r1
 800590e:	4610      	mov	r0, r2
 8005910:	4619      	mov	r1, r3
 8005912:	f04f 0200 	mov.w	r2, #0
 8005916:	4b25      	ldr	r3, [pc, #148]	; (80059ac <Skill_Mode+0x264>)
 8005918:	f7fa fcd6 	bl	80002c8 <__aeabi_dsub>
 800591c:	4602      	mov	r2, r0
 800591e:	460b      	mov	r3, r1
 8005920:	4610      	mov	r0, r2
 8005922:	4619      	mov	r1, r3
 8005924:	f7fb f960 	bl	8000be8 <__aeabi_d2f>
 8005928:	4603      	mov	r3, r0
 800592a:	617b      	str	r3, [r7, #20]
	gamma = -kP * p  - kD*(p-p_prev);
 800592c:	edd7 7a02 	vldr	s15, [r7, #8]
 8005930:	eeb1 7a67 	vneg.f32	s14, s15
 8005934:	edd7 7a05 	vldr	s15, [r7, #20]
 8005938:	ee27 7a27 	vmul.f32	s14, s14, s15
 800593c:	4b1c      	ldr	r3, [pc, #112]	; (80059b0 <Skill_Mode+0x268>)
 800593e:	edd3 7a00 	vldr	s15, [r3]
 8005942:	edd7 6a05 	vldr	s13, [r7, #20]
 8005946:	ee76 6ae7 	vsub.f32	s13, s13, s15
 800594a:	edd7 7a01 	vldr	s15, [r7, #4]
 800594e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8005952:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005956:	4b17      	ldr	r3, [pc, #92]	; (80059b4 <Skill_Mode+0x26c>)
 8005958:	edc3 7a00 	vstr	s15, [r3]
	p_prev = p;
 800595c:	4a14      	ldr	r2, [pc, #80]	; (80059b0 <Skill_Mode+0x268>)
 800595e:	697b      	ldr	r3, [r7, #20]
 8005960:	6013      	str	r3, [r2, #0]
	byte_prev=byte;
 8005962:	4a0a      	ldr	r2, [pc, #40]	; (800598c <Skill_Mode+0x244>)
 8005964:	69fb      	ldr	r3, [r7, #28]
 8005966:	6013      	str	r3, [r2, #0]

	return gamma;
 8005968:	4b12      	ldr	r3, [pc, #72]	; (80059b4 <Skill_Mode+0x26c>)
 800596a:	681b      	ldr	r3, [r3, #0]
 800596c:	ee07 3a90 	vmov	s15, r3
}
 8005970:	eeb0 0a67 	vmov.f32	s0, s15
 8005974:	3720      	adds	r7, #32
 8005976:	46bd      	mov	sp, r7
 8005978:	bd80      	pop	{r7, pc}
 800597a:	bf00      	nop
 800597c:	20000774 	.word	0x20000774
 8005980:	2000077e 	.word	0x2000077e
 8005984:	20000346 	.word	0x20000346
 8005988:	20000344 	.word	0x20000344
 800598c:	200007c8 	.word	0x200007c8
 8005990:	200007cc 	.word	0x200007cc
 8005994:	20000108 	.word	0x20000108
 8005998:	200007d0 	.word	0x200007d0
 800599c:	200007d4 	.word	0x200007d4
 80059a0:	200007d8 	.word	0x200007d8
 80059a4:	434c0000 	.word	0x434c0000
 80059a8:	406f0000 	.word	0x406f0000
 80059ac:	40598000 	.word	0x40598000
 80059b0:	200007dc 	.word	0x200007dc
 80059b4:	200007e0 	.word	0x200007e0

080059b8 <Detect_Node4>:
		ignore=0;
	}
}

void Detect_Node4(UART_HandleTypeDef *huart_debugg, uint32_t t)
{
 80059b8:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 80059bc:	b082      	sub	sp, #8
 80059be:	af00      	add	r7, sp, #0
 80059c0:	6078      	str	r0, [r7, #4]
 80059c2:	6039      	str	r1, [r7, #0]
	static uint32_t t_prev=0;
	static uint32_t t_stamp=0;
	static uint8_t detect_node_state=0;
	static float s=0;

	if(LINE_CNT==4 && !detect_node_state)
 80059c4:	4b3c      	ldr	r3, [pc, #240]	; (8005ab8 <Detect_Node4+0x100>)
 80059c6:	785b      	ldrb	r3, [r3, #1]
 80059c8:	2b04      	cmp	r3, #4
 80059ca:	d111      	bne.n	80059f0 <Detect_Node4+0x38>
 80059cc:	4b3b      	ldr	r3, [pc, #236]	; (8005abc <Detect_Node4+0x104>)
 80059ce:	781b      	ldrb	r3, [r3, #0]
 80059d0:	2b00      	cmp	r3, #0
 80059d2:	d10d      	bne.n	80059f0 <Detect_Node4+0x38>
	{
		s=0;
 80059d4:	4b3a      	ldr	r3, [pc, #232]	; (8005ac0 <Detect_Node4+0x108>)
 80059d6:	f04f 0200 	mov.w	r2, #0
 80059da:	601a      	str	r2, [r3, #0]
		detect_node_state=1;//innentől mérünk
 80059dc:	4b37      	ldr	r3, [pc, #220]	; (8005abc <Detect_Node4+0x104>)
 80059de:	2201      	movs	r2, #1
 80059e0:	701a      	strb	r2, [r3, #0]
		ignore=1;
 80059e2:	4b38      	ldr	r3, [pc, #224]	; (8005ac4 <Detect_Node4+0x10c>)
 80059e4:	2201      	movs	r2, #1
 80059e6:	701a      	strb	r2, [r3, #0]
		t_stamp=t;
 80059e8:	4a37      	ldr	r2, [pc, #220]	; (8005ac8 <Detect_Node4+0x110>)
 80059ea:	683b      	ldr	r3, [r7, #0]
 80059ec:	6013      	str	r3, [r2, #0]
 80059ee:	e03e      	b.n	8005a6e <Detect_Node4+0xb6>

	}
	else if(LINE_CNT==4 && detect_node_state)
 80059f0:	4b31      	ldr	r3, [pc, #196]	; (8005ab8 <Detect_Node4+0x100>)
 80059f2:	785b      	ldrb	r3, [r3, #1]
 80059f4:	2b04      	cmp	r3, #4
 80059f6:	d13a      	bne.n	8005a6e <Detect_Node4+0xb6>
 80059f8:	4b30      	ldr	r3, [pc, #192]	; (8005abc <Detect_Node4+0x104>)
 80059fa:	781b      	ldrb	r3, [r3, #0]
 80059fc:	2b00      	cmp	r3, #0
 80059fe:	d036      	beq.n	8005a6e <Detect_Node4+0xb6>
	{
		s+=fabs(v)*(t-t_prev)/1000;
 8005a00:	4b2f      	ldr	r3, [pc, #188]	; (8005ac0 <Detect_Node4+0x108>)
 8005a02:	681b      	ldr	r3, [r3, #0]
 8005a04:	4618      	mov	r0, r3
 8005a06:	f7fa fdbf 	bl	8000588 <__aeabi_f2d>
 8005a0a:	4604      	mov	r4, r0
 8005a0c:	460d      	mov	r5, r1
 8005a0e:	4b2f      	ldr	r3, [pc, #188]	; (8005acc <Detect_Node4+0x114>)
 8005a10:	edd3 7a00 	vldr	s15, [r3]
 8005a14:	eef0 7ae7 	vabs.f32	s15, s15
 8005a18:	ee17 0a90 	vmov	r0, s15
 8005a1c:	f7fa fdb4 	bl	8000588 <__aeabi_f2d>
 8005a20:	4680      	mov	r8, r0
 8005a22:	4689      	mov	r9, r1
 8005a24:	4b2a      	ldr	r3, [pc, #168]	; (8005ad0 <Detect_Node4+0x118>)
 8005a26:	681b      	ldr	r3, [r3, #0]
 8005a28:	683a      	ldr	r2, [r7, #0]
 8005a2a:	1ad3      	subs	r3, r2, r3
 8005a2c:	4618      	mov	r0, r3
 8005a2e:	f7fa fd89 	bl	8000544 <__aeabi_ui2d>
 8005a32:	4602      	mov	r2, r0
 8005a34:	460b      	mov	r3, r1
 8005a36:	4640      	mov	r0, r8
 8005a38:	4649      	mov	r1, r9
 8005a3a:	f7fa fdfd 	bl	8000638 <__aeabi_dmul>
 8005a3e:	4602      	mov	r2, r0
 8005a40:	460b      	mov	r3, r1
 8005a42:	4610      	mov	r0, r2
 8005a44:	4619      	mov	r1, r3
 8005a46:	f04f 0200 	mov.w	r2, #0
 8005a4a:	4b22      	ldr	r3, [pc, #136]	; (8005ad4 <Detect_Node4+0x11c>)
 8005a4c:	f7fa ff1e 	bl	800088c <__aeabi_ddiv>
 8005a50:	4602      	mov	r2, r0
 8005a52:	460b      	mov	r3, r1
 8005a54:	4620      	mov	r0, r4
 8005a56:	4629      	mov	r1, r5
 8005a58:	f7fa fc38 	bl	80002cc <__adddf3>
 8005a5c:	4602      	mov	r2, r0
 8005a5e:	460b      	mov	r3, r1
 8005a60:	4610      	mov	r0, r2
 8005a62:	4619      	mov	r1, r3
 8005a64:	f7fb f8c0 	bl	8000be8 <__aeabi_d2f>
 8005a68:	4603      	mov	r3, r0
 8005a6a:	4a15      	ldr	r2, [pc, #84]	; (8005ac0 <Detect_Node4+0x108>)
 8005a6c:	6013      	str	r3, [r2, #0]
	}
	if((t-t_stamp)>160 && detect_node_state)
 8005a6e:	4b16      	ldr	r3, [pc, #88]	; (8005ac8 <Detect_Node4+0x110>)
 8005a70:	681b      	ldr	r3, [r3, #0]
 8005a72:	683a      	ldr	r2, [r7, #0]
 8005a74:	1ad3      	subs	r3, r2, r3
 8005a76:	2ba0      	cmp	r3, #160	; 0xa0
 8005a78:	d916      	bls.n	8005aa8 <Detect_Node4+0xf0>
 8005a7a:	4b10      	ldr	r3, [pc, #64]	; (8005abc <Detect_Node4+0x104>)
 8005a7c:	781b      	ldrb	r3, [r3, #0]
 8005a7e:	2b00      	cmp	r3, #0
 8005a80:	d012      	beq.n	8005aa8 <Detect_Node4+0xf0>
	{
		detect_node_state=0;
 8005a82:	4b0e      	ldr	r3, [pc, #56]	; (8005abc <Detect_Node4+0x104>)
 8005a84:	2200      	movs	r2, #0
 8005a86:	701a      	strb	r2, [r3, #0]
		ignore=0;
 8005a88:	4b0e      	ldr	r3, [pc, #56]	; (8005ac4 <Detect_Node4+0x10c>)
 8005a8a:	2200      	movs	r2, #0
 8005a8c:	701a      	strb	r2, [r3, #0]
		if(s>50)//horizontal node
 8005a8e:	4b0c      	ldr	r3, [pc, #48]	; (8005ac0 <Detect_Node4+0x108>)
 8005a90:	edd3 7a00 	vldr	s15, [r3]
 8005a94:	ed9f 7a10 	vldr	s14, [pc, #64]	; 8005ad8 <Detect_Node4+0x120>
 8005a98:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005a9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005aa0:	dd02      	ble.n	8005aa8 <Detect_Node4+0xf0>
		{
			nodeDetected=1; //horizont node
 8005aa2:	4b0e      	ldr	r3, [pc, #56]	; (8005adc <Detect_Node4+0x124>)
 8005aa4:	2201      	movs	r2, #1
 8005aa6:	701a      	strb	r2, [r3, #0]
			//LED_B_TOGGLE;
		}
	}
	t_prev=t;
 8005aa8:	4a09      	ldr	r2, [pc, #36]	; (8005ad0 <Detect_Node4+0x118>)
 8005aaa:	683b      	ldr	r3, [r7, #0]
 8005aac:	6013      	str	r3, [r2, #0]
}
 8005aae:	bf00      	nop
 8005ab0:	3708      	adds	r7, #8
 8005ab2:	46bd      	mov	sp, r7
 8005ab4:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8005ab8:	20000774 	.word	0x20000774
 8005abc:	200007e4 	.word	0x200007e4
 8005ac0:	200007e8 	.word	0x200007e8
 8005ac4:	2000077e 	.word	0x2000077e
 8005ac8:	200007ec 	.word	0x200007ec
 8005acc:	20000754 	.word	0x20000754
 8005ad0:	200007f0 	.word	0x200007f0
 8005ad4:	408f4000 	.word	0x408f4000
 8005ad8:	42480000 	.word	0x42480000
 8005adc:	20000345 	.word	0x20000345

08005ae0 <Detect_Node5>:

void Detect_Node5(UART_HandleTypeDef *huart_debugg, uint32_t t)
{
 8005ae0:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8005ae4:	b082      	sub	sp, #8
 8005ae6:	af00      	add	r7, sp, #0
 8005ae8:	6078      	str	r0, [r7, #4]
 8005aea:	6039      	str	r1, [r7, #0]
	static uint32_t t_prev=0;
	static uint32_t t_stamp=0;
	static uint8_t detect_node_state=0;
	static float s=0;

	if(LINE_CNT==4 && !detect_node_state)
 8005aec:	4b3c      	ldr	r3, [pc, #240]	; (8005be0 <Detect_Node5+0x100>)
 8005aee:	785b      	ldrb	r3, [r3, #1]
 8005af0:	2b04      	cmp	r3, #4
 8005af2:	d111      	bne.n	8005b18 <Detect_Node5+0x38>
 8005af4:	4b3b      	ldr	r3, [pc, #236]	; (8005be4 <Detect_Node5+0x104>)
 8005af6:	781b      	ldrb	r3, [r3, #0]
 8005af8:	2b00      	cmp	r3, #0
 8005afa:	d10d      	bne.n	8005b18 <Detect_Node5+0x38>
	{
		s=0;
 8005afc:	4b3a      	ldr	r3, [pc, #232]	; (8005be8 <Detect_Node5+0x108>)
 8005afe:	f04f 0200 	mov.w	r2, #0
 8005b02:	601a      	str	r2, [r3, #0]
		detect_node_state=1;//innentől mérünk
 8005b04:	4b37      	ldr	r3, [pc, #220]	; (8005be4 <Detect_Node5+0x104>)
 8005b06:	2201      	movs	r2, #1
 8005b08:	701a      	strb	r2, [r3, #0]
		ignore=1;
 8005b0a:	4b38      	ldr	r3, [pc, #224]	; (8005bec <Detect_Node5+0x10c>)
 8005b0c:	2201      	movs	r2, #1
 8005b0e:	701a      	strb	r2, [r3, #0]
		t_stamp=t;
 8005b10:	4a37      	ldr	r2, [pc, #220]	; (8005bf0 <Detect_Node5+0x110>)
 8005b12:	683b      	ldr	r3, [r7, #0]
 8005b14:	6013      	str	r3, [r2, #0]
 8005b16:	e03e      	b.n	8005b96 <Detect_Node5+0xb6>

	}
	else if(LINE_CNT==4 && detect_node_state)
 8005b18:	4b31      	ldr	r3, [pc, #196]	; (8005be0 <Detect_Node5+0x100>)
 8005b1a:	785b      	ldrb	r3, [r3, #1]
 8005b1c:	2b04      	cmp	r3, #4
 8005b1e:	d13a      	bne.n	8005b96 <Detect_Node5+0xb6>
 8005b20:	4b30      	ldr	r3, [pc, #192]	; (8005be4 <Detect_Node5+0x104>)
 8005b22:	781b      	ldrb	r3, [r3, #0]
 8005b24:	2b00      	cmp	r3, #0
 8005b26:	d036      	beq.n	8005b96 <Detect_Node5+0xb6>
	{
		s+=fabs(v)*(t-t_prev)/1000;
 8005b28:	4b2f      	ldr	r3, [pc, #188]	; (8005be8 <Detect_Node5+0x108>)
 8005b2a:	681b      	ldr	r3, [r3, #0]
 8005b2c:	4618      	mov	r0, r3
 8005b2e:	f7fa fd2b 	bl	8000588 <__aeabi_f2d>
 8005b32:	4604      	mov	r4, r0
 8005b34:	460d      	mov	r5, r1
 8005b36:	4b2f      	ldr	r3, [pc, #188]	; (8005bf4 <Detect_Node5+0x114>)
 8005b38:	edd3 7a00 	vldr	s15, [r3]
 8005b3c:	eef0 7ae7 	vabs.f32	s15, s15
 8005b40:	ee17 0a90 	vmov	r0, s15
 8005b44:	f7fa fd20 	bl	8000588 <__aeabi_f2d>
 8005b48:	4680      	mov	r8, r0
 8005b4a:	4689      	mov	r9, r1
 8005b4c:	4b2a      	ldr	r3, [pc, #168]	; (8005bf8 <Detect_Node5+0x118>)
 8005b4e:	681b      	ldr	r3, [r3, #0]
 8005b50:	683a      	ldr	r2, [r7, #0]
 8005b52:	1ad3      	subs	r3, r2, r3
 8005b54:	4618      	mov	r0, r3
 8005b56:	f7fa fcf5 	bl	8000544 <__aeabi_ui2d>
 8005b5a:	4602      	mov	r2, r0
 8005b5c:	460b      	mov	r3, r1
 8005b5e:	4640      	mov	r0, r8
 8005b60:	4649      	mov	r1, r9
 8005b62:	f7fa fd69 	bl	8000638 <__aeabi_dmul>
 8005b66:	4602      	mov	r2, r0
 8005b68:	460b      	mov	r3, r1
 8005b6a:	4610      	mov	r0, r2
 8005b6c:	4619      	mov	r1, r3
 8005b6e:	f04f 0200 	mov.w	r2, #0
 8005b72:	4b22      	ldr	r3, [pc, #136]	; (8005bfc <Detect_Node5+0x11c>)
 8005b74:	f7fa fe8a 	bl	800088c <__aeabi_ddiv>
 8005b78:	4602      	mov	r2, r0
 8005b7a:	460b      	mov	r3, r1
 8005b7c:	4620      	mov	r0, r4
 8005b7e:	4629      	mov	r1, r5
 8005b80:	f7fa fba4 	bl	80002cc <__adddf3>
 8005b84:	4602      	mov	r2, r0
 8005b86:	460b      	mov	r3, r1
 8005b88:	4610      	mov	r0, r2
 8005b8a:	4619      	mov	r1, r3
 8005b8c:	f7fb f82c 	bl	8000be8 <__aeabi_d2f>
 8005b90:	4603      	mov	r3, r0
 8005b92:	4a15      	ldr	r2, [pc, #84]	; (8005be8 <Detect_Node5+0x108>)
 8005b94:	6013      	str	r3, [r2, #0]
	}
	if((t-t_stamp)>130 && detect_node_state)
 8005b96:	4b16      	ldr	r3, [pc, #88]	; (8005bf0 <Detect_Node5+0x110>)
 8005b98:	681b      	ldr	r3, [r3, #0]
 8005b9a:	683a      	ldr	r2, [r7, #0]
 8005b9c:	1ad3      	subs	r3, r2, r3
 8005b9e:	2b82      	cmp	r3, #130	; 0x82
 8005ba0:	d916      	bls.n	8005bd0 <Detect_Node5+0xf0>
 8005ba2:	4b10      	ldr	r3, [pc, #64]	; (8005be4 <Detect_Node5+0x104>)
 8005ba4:	781b      	ldrb	r3, [r3, #0]
 8005ba6:	2b00      	cmp	r3, #0
 8005ba8:	d012      	beq.n	8005bd0 <Detect_Node5+0xf0>
	{
		detect_node_state=0;
 8005baa:	4b0e      	ldr	r3, [pc, #56]	; (8005be4 <Detect_Node5+0x104>)
 8005bac:	2200      	movs	r2, #0
 8005bae:	701a      	strb	r2, [r3, #0]
		ignore=0;
 8005bb0:	4b0e      	ldr	r3, [pc, #56]	; (8005bec <Detect_Node5+0x10c>)
 8005bb2:	2200      	movs	r2, #0
 8005bb4:	701a      	strb	r2, [r3, #0]
		if(s>50)//horizontal node
 8005bb6:	4b0c      	ldr	r3, [pc, #48]	; (8005be8 <Detect_Node5+0x108>)
 8005bb8:	edd3 7a00 	vldr	s15, [r3]
 8005bbc:	ed9f 7a10 	vldr	s14, [pc, #64]	; 8005c00 <Detect_Node5+0x120>
 8005bc0:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005bc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005bc8:	dd02      	ble.n	8005bd0 <Detect_Node5+0xf0>
		{
			nodeDetected=1; //horizont node
 8005bca:	4b0e      	ldr	r3, [pc, #56]	; (8005c04 <Detect_Node5+0x124>)
 8005bcc:	2201      	movs	r2, #1
 8005bce:	701a      	strb	r2, [r3, #0]
			//LED_B_TOGGLE;
		}
	}
	t_prev=t;
 8005bd0:	4a09      	ldr	r2, [pc, #36]	; (8005bf8 <Detect_Node5+0x118>)
 8005bd2:	683b      	ldr	r3, [r7, #0]
 8005bd4:	6013      	str	r3, [r2, #0]
}
 8005bd6:	bf00      	nop
 8005bd8:	3708      	adds	r7, #8
 8005bda:	46bd      	mov	sp, r7
 8005bdc:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8005be0:	20000774 	.word	0x20000774
 8005be4:	200007f4 	.word	0x200007f4
 8005be8:	200007f8 	.word	0x200007f8
 8005bec:	2000077e 	.word	0x2000077e
 8005bf0:	200007fc 	.word	0x200007fc
 8005bf4:	20000754 	.word	0x20000754
 8005bf8:	20000800 	.word	0x20000800
 8005bfc:	408f4000 	.word	0x408f4000
 8005c00:	42480000 	.word	0x42480000
 8005c04:	20000345 	.word	0x20000345

08005c08 <Lane_Changer>:

uint8_t Lane_Changer(UART_HandleTypeDef *huart_debugg,uint32_t t)
{
 8005c08:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8005c0c:	b084      	sub	sp, #16
 8005c0e:	af00      	add	r7, sp, #0
 8005c10:	6078      	str	r0, [r7, #4]
 8005c12:	6039      	str	r1, [r7, #0]
	static uint8_t lineCnt_prev=1;
	static float s=0;
	static int i=0;
	static uint32_t dt[5]={1000,1000,1000,1000,1000};

	if(laneChange<2)return 0;
 8005c14:	4b89      	ldr	r3, [pc, #548]	; (8005e3c <Lane_Changer+0x234>)
 8005c16:	781b      	ldrb	r3, [r3, #0]
 8005c18:	2b01      	cmp	r3, #1
 8005c1a:	d801      	bhi.n	8005c20 <Lane_Changer+0x18>
 8005c1c:	2300      	movs	r3, #0
 8005c1e:	e108      	b.n	8005e32 <Lane_Changer+0x22a>
	if(LINE_CNT != lineCnt_prev && (LINE_CNT==1 || LINE_CNT==2) && laneChange==2) //ha változik az alattunk lévő vonalak száma
 8005c20:	4b87      	ldr	r3, [pc, #540]	; (8005e40 <Lane_Changer+0x238>)
 8005c22:	785a      	ldrb	r2, [r3, #1]
 8005c24:	4b87      	ldr	r3, [pc, #540]	; (8005e44 <Lane_Changer+0x23c>)
 8005c26:	781b      	ldrb	r3, [r3, #0]
 8005c28:	429a      	cmp	r2, r3
 8005c2a:	d041      	beq.n	8005cb0 <Lane_Changer+0xa8>
 8005c2c:	4b84      	ldr	r3, [pc, #528]	; (8005e40 <Lane_Changer+0x238>)
 8005c2e:	785b      	ldrb	r3, [r3, #1]
 8005c30:	2b01      	cmp	r3, #1
 8005c32:	d003      	beq.n	8005c3c <Lane_Changer+0x34>
 8005c34:	4b82      	ldr	r3, [pc, #520]	; (8005e40 <Lane_Changer+0x238>)
 8005c36:	785b      	ldrb	r3, [r3, #1]
 8005c38:	2b02      	cmp	r3, #2
 8005c3a:	d139      	bne.n	8005cb0 <Lane_Changer+0xa8>
 8005c3c:	4b7f      	ldr	r3, [pc, #508]	; (8005e3c <Lane_Changer+0x234>)
 8005c3e:	781b      	ldrb	r3, [r3, #0]
 8005c40:	2b02      	cmp	r3, #2
 8005c42:	d135      	bne.n	8005cb0 <Lane_Changer+0xa8>
	{
		dt[i] = t - t_stamp;
 8005c44:	4b80      	ldr	r3, [pc, #512]	; (8005e48 <Lane_Changer+0x240>)
 8005c46:	681a      	ldr	r2, [r3, #0]
 8005c48:	4b80      	ldr	r3, [pc, #512]	; (8005e4c <Lane_Changer+0x244>)
 8005c4a:	681b      	ldr	r3, [r3, #0]
 8005c4c:	6839      	ldr	r1, [r7, #0]
 8005c4e:	1a8a      	subs	r2, r1, r2
 8005c50:	497f      	ldr	r1, [pc, #508]	; (8005e50 <Lane_Changer+0x248>)
 8005c52:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		uint32_t sum=dt[0] + dt[1] + dt[2] + dt[3]+ dt[4];
 8005c56:	4b7e      	ldr	r3, [pc, #504]	; (8005e50 <Lane_Changer+0x248>)
 8005c58:	681a      	ldr	r2, [r3, #0]
 8005c5a:	4b7d      	ldr	r3, [pc, #500]	; (8005e50 <Lane_Changer+0x248>)
 8005c5c:	685b      	ldr	r3, [r3, #4]
 8005c5e:	441a      	add	r2, r3
 8005c60:	4b7b      	ldr	r3, [pc, #492]	; (8005e50 <Lane_Changer+0x248>)
 8005c62:	689b      	ldr	r3, [r3, #8]
 8005c64:	441a      	add	r2, r3
 8005c66:	4b7a      	ldr	r3, [pc, #488]	; (8005e50 <Lane_Changer+0x248>)
 8005c68:	68db      	ldr	r3, [r3, #12]
 8005c6a:	441a      	add	r2, r3
 8005c6c:	4b78      	ldr	r3, [pc, #480]	; (8005e50 <Lane_Changer+0x248>)
 8005c6e:	691b      	ldr	r3, [r3, #16]
 8005c70:	4413      	add	r3, r2
 8005c72:	60fb      	str	r3, [r7, #12]
		if((sum > 250) && (sum < 1000))//ha másfél másodpercen belül van8 váltás
 8005c74:	68fb      	ldr	r3, [r7, #12]
 8005c76:	2bfa      	cmp	r3, #250	; 0xfa
 8005c78:	d90a      	bls.n	8005c90 <Lane_Changer+0x88>
 8005c7a:	68fb      	ldr	r3, [r7, #12]
 8005c7c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005c80:	d206      	bcs.n	8005c90 <Lane_Changer+0x88>
		{
			s=0;
 8005c82:	4b74      	ldr	r3, [pc, #464]	; (8005e54 <Lane_Changer+0x24c>)
 8005c84:	f04f 0200 	mov.w	r2, #0
 8005c88:	601a      	str	r2, [r3, #0]
			laneChange=3;
 8005c8a:	4b6c      	ldr	r3, [pc, #432]	; (8005e3c <Lane_Changer+0x234>)
 8005c8c:	2203      	movs	r2, #3
 8005c8e:	701a      	strb	r2, [r3, #0]
		}
		i++;
 8005c90:	4b6e      	ldr	r3, [pc, #440]	; (8005e4c <Lane_Changer+0x244>)
 8005c92:	681b      	ldr	r3, [r3, #0]
 8005c94:	3301      	adds	r3, #1
 8005c96:	4a6d      	ldr	r2, [pc, #436]	; (8005e4c <Lane_Changer+0x244>)
 8005c98:	6013      	str	r3, [r2, #0]
		if(i>4) i=0;
 8005c9a:	4b6c      	ldr	r3, [pc, #432]	; (8005e4c <Lane_Changer+0x244>)
 8005c9c:	681b      	ldr	r3, [r3, #0]
 8005c9e:	2b04      	cmp	r3, #4
 8005ca0:	dd02      	ble.n	8005ca8 <Lane_Changer+0xa0>
 8005ca2:	4b6a      	ldr	r3, [pc, #424]	; (8005e4c <Lane_Changer+0x244>)
 8005ca4:	2200      	movs	r2, #0
 8005ca6:	601a      	str	r2, [r3, #0]
		t_stamp = t;
 8005ca8:	4a67      	ldr	r2, [pc, #412]	; (8005e48 <Lane_Changer+0x240>)
 8005caa:	683b      	ldr	r3, [r7, #0]
 8005cac:	6013      	str	r3, [r2, #0]
	{
 8005cae:	e07c      	b.n	8005daa <Lane_Changer+0x1a2>
	}
	else if(laneChange==3)
 8005cb0:	4b62      	ldr	r3, [pc, #392]	; (8005e3c <Lane_Changer+0x234>)
 8005cb2:	781b      	ldrb	r3, [r3, #0]
 8005cb4:	2b03      	cmp	r3, #3
 8005cb6:	d178      	bne.n	8005daa <Lane_Changer+0x1a2>
	{
		s+=fabs(v)*(t-t_prev)/1000;
 8005cb8:	4b66      	ldr	r3, [pc, #408]	; (8005e54 <Lane_Changer+0x24c>)
 8005cba:	681b      	ldr	r3, [r3, #0]
 8005cbc:	4618      	mov	r0, r3
 8005cbe:	f7fa fc63 	bl	8000588 <__aeabi_f2d>
 8005cc2:	4604      	mov	r4, r0
 8005cc4:	460d      	mov	r5, r1
 8005cc6:	4b64      	ldr	r3, [pc, #400]	; (8005e58 <Lane_Changer+0x250>)
 8005cc8:	edd3 7a00 	vldr	s15, [r3]
 8005ccc:	eef0 7ae7 	vabs.f32	s15, s15
 8005cd0:	ee17 0a90 	vmov	r0, s15
 8005cd4:	f7fa fc58 	bl	8000588 <__aeabi_f2d>
 8005cd8:	4680      	mov	r8, r0
 8005cda:	4689      	mov	r9, r1
 8005cdc:	4b5f      	ldr	r3, [pc, #380]	; (8005e5c <Lane_Changer+0x254>)
 8005cde:	681b      	ldr	r3, [r3, #0]
 8005ce0:	683a      	ldr	r2, [r7, #0]
 8005ce2:	1ad3      	subs	r3, r2, r3
 8005ce4:	4618      	mov	r0, r3
 8005ce6:	f7fa fc2d 	bl	8000544 <__aeabi_ui2d>
 8005cea:	4602      	mov	r2, r0
 8005cec:	460b      	mov	r3, r1
 8005cee:	4640      	mov	r0, r8
 8005cf0:	4649      	mov	r1, r9
 8005cf2:	f7fa fca1 	bl	8000638 <__aeabi_dmul>
 8005cf6:	4602      	mov	r2, r0
 8005cf8:	460b      	mov	r3, r1
 8005cfa:	4610      	mov	r0, r2
 8005cfc:	4619      	mov	r1, r3
 8005cfe:	f04f 0200 	mov.w	r2, #0
 8005d02:	4b57      	ldr	r3, [pc, #348]	; (8005e60 <Lane_Changer+0x258>)
 8005d04:	f7fa fdc2 	bl	800088c <__aeabi_ddiv>
 8005d08:	4602      	mov	r2, r0
 8005d0a:	460b      	mov	r3, r1
 8005d0c:	4620      	mov	r0, r4
 8005d0e:	4629      	mov	r1, r5
 8005d10:	f7fa fadc 	bl	80002cc <__adddf3>
 8005d14:	4602      	mov	r2, r0
 8005d16:	460b      	mov	r3, r1
 8005d18:	4610      	mov	r0, r2
 8005d1a:	4619      	mov	r1, r3
 8005d1c:	f7fa ff64 	bl	8000be8 <__aeabi_d2f>
 8005d20:	4603      	mov	r3, r0
 8005d22:	4a4c      	ldr	r2, [pc, #304]	; (8005e54 <Lane_Changer+0x24c>)
 8005d24:	6013      	str	r3, [r2, #0]
		if(orientation==REVERSE)
 8005d26:	4b4f      	ldr	r3, [pc, #316]	; (8005e64 <Lane_Changer+0x25c>)
 8005d28:	781b      	ldrb	r3, [r3, #0]
 8005d2a:	2b01      	cmp	r3, #1
 8005d2c:	d117      	bne.n	8005d5e <Lane_Changer+0x156>
		{
			v_control=SLOW_DOWN;
 8005d2e:	4b4e      	ldr	r3, [pc, #312]	; (8005e68 <Lane_Changer+0x260>)
 8005d30:	2201      	movs	r2, #1
 8005d32:	701a      	strb	r2, [r3, #0]
			FRONT_CCR(SERVO_FRONT_CCR_MIDDLE+140);
 8005d34:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8005d38:	f44f 7250 	mov.w	r2, #832	; 0x340
 8005d3c:	635a      	str	r2, [r3, #52]	; 0x34
			REAR_CCR(SERVO_REAR_CCR_MIDDLE-160);
 8005d3e:	4b4b      	ldr	r3, [pc, #300]	; (8005e6c <Lane_Changer+0x264>)
 8005d40:	f44f 7202 	mov.w	r2, #520	; 0x208
 8005d44:	641a      	str	r2, [r3, #64]	; 0x40
			timeout=1500;
 8005d46:	4b4a      	ldr	r3, [pc, #296]	; (8005e70 <Lane_Changer+0x268>)
 8005d48:	f240 52dc 	movw	r2, #1500	; 0x5dc
 8005d4c:	601a      	str	r2, [r3, #0]
			laneChange=4;
 8005d4e:	4b3b      	ldr	r3, [pc, #236]	; (8005e3c <Lane_Changer+0x234>)
 8005d50:	2204      	movs	r2, #4
 8005d52:	701a      	strb	r2, [r3, #0]
			t_stamp=t;
 8005d54:	4a3c      	ldr	r2, [pc, #240]	; (8005e48 <Lane_Changer+0x240>)
 8005d56:	683b      	ldr	r3, [r7, #0]
 8005d58:	6013      	str	r3, [r2, #0]
			return 1;
 8005d5a:	2301      	movs	r3, #1
 8005d5c:	e069      	b.n	8005e32 <Lane_Changer+0x22a>
		}
		else if(orientation==FORWARD && s>1200)
 8005d5e:	4b41      	ldr	r3, [pc, #260]	; (8005e64 <Lane_Changer+0x25c>)
 8005d60:	781b      	ldrb	r3, [r3, #0]
 8005d62:	2b00      	cmp	r3, #0
 8005d64:	d121      	bne.n	8005daa <Lane_Changer+0x1a2>
 8005d66:	4b3b      	ldr	r3, [pc, #236]	; (8005e54 <Lane_Changer+0x24c>)
 8005d68:	edd3 7a00 	vldr	s15, [r3]
 8005d6c:	ed9f 7a41 	vldr	s14, [pc, #260]	; 8005e74 <Lane_Changer+0x26c>
 8005d70:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005d74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005d78:	dd17      	ble.n	8005daa <Lane_Changer+0x1a2>
		{
			v_control=SLOW_DOWN;
 8005d7a:	4b3b      	ldr	r3, [pc, #236]	; (8005e68 <Lane_Changer+0x260>)
 8005d7c:	2201      	movs	r2, #1
 8005d7e:	701a      	strb	r2, [r3, #0]
			FRONT_CCR(CCR_FRONT_MAX);
 8005d80:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8005d84:	f44f 7261 	mov.w	r2, #900	; 0x384
 8005d88:	635a      	str	r2, [r3, #52]	; 0x34
			REAR_CCR(CCR_REAR_MAX);
 8005d8a:	4b38      	ldr	r3, [pc, #224]	; (8005e6c <Lane_Changer+0x264>)
 8005d8c:	f44f 7252 	mov.w	r2, #840	; 0x348
 8005d90:	641a      	str	r2, [r3, #64]	; 0x40
			timeout=3000;
 8005d92:	4b37      	ldr	r3, [pc, #220]	; (8005e70 <Lane_Changer+0x268>)
 8005d94:	f640 32b8 	movw	r2, #3000	; 0xbb8
 8005d98:	601a      	str	r2, [r3, #0]
			laneChange=4;
 8005d9a:	4b28      	ldr	r3, [pc, #160]	; (8005e3c <Lane_Changer+0x234>)
 8005d9c:	2204      	movs	r2, #4
 8005d9e:	701a      	strb	r2, [r3, #0]
			t_stamp=t;
 8005da0:	4a29      	ldr	r2, [pc, #164]	; (8005e48 <Lane_Changer+0x240>)
 8005da2:	683b      	ldr	r3, [r7, #0]
 8005da4:	6013      	str	r3, [r2, #0]
			return 1;
 8005da6:	2301      	movs	r3, #1
 8005da8:	e043      	b.n	8005e32 <Lane_Changer+0x22a>
		}
	}
	if(laneChange==4)
 8005daa:	4b24      	ldr	r3, [pc, #144]	; (8005e3c <Lane_Changer+0x234>)
 8005dac:	781b      	ldrb	r3, [r3, #0]
 8005dae:	2b04      	cmp	r3, #4
 8005db0:	d121      	bne.n	8005df6 <Lane_Changer+0x1ee>
	{
		LED_Y(0);
 8005db2:	2201      	movs	r2, #1
 8005db4:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8005db8:	482f      	ldr	r0, [pc, #188]	; (8005e78 <Lane_Changer+0x270>)
 8005dba:	f003 fc67 	bl	800968c <HAL_GPIO_WritePin>
		v_control=SLOW_DOWN;
 8005dbe:	4b2a      	ldr	r3, [pc, #168]	; (8005e68 <Lane_Changer+0x260>)
 8005dc0:	2201      	movs	r2, #1
 8005dc2:	701a      	strb	r2, [r3, #0]
		if((t-t_stamp)>timeout && LINE_CNT>0)
 8005dc4:	4b20      	ldr	r3, [pc, #128]	; (8005e48 <Lane_Changer+0x240>)
 8005dc6:	681b      	ldr	r3, [r3, #0]
 8005dc8:	683a      	ldr	r2, [r7, #0]
 8005dca:	1ad2      	subs	r2, r2, r3
 8005dcc:	4b28      	ldr	r3, [pc, #160]	; (8005e70 <Lane_Changer+0x268>)
 8005dce:	681b      	ldr	r3, [r3, #0]
 8005dd0:	429a      	cmp	r2, r3
 8005dd2:	d90e      	bls.n	8005df2 <Lane_Changer+0x1ea>
 8005dd4:	4b1a      	ldr	r3, [pc, #104]	; (8005e40 <Lane_Changer+0x238>)
 8005dd6:	785b      	ldrb	r3, [r3, #1]
 8005dd8:	2b00      	cmp	r3, #0
 8005dda:	d00a      	beq.n	8005df2 <Lane_Changer+0x1ea>
		{
			ignore=1;
 8005ddc:	4b27      	ldr	r3, [pc, #156]	; (8005e7c <Lane_Changer+0x274>)
 8005dde:	2201      	movs	r2, #1
 8005de0:	701a      	strb	r2, [r3, #0]
			laneChange=5;
 8005de2:	4b16      	ldr	r3, [pc, #88]	; (8005e3c <Lane_Changer+0x234>)
 8005de4:	2205      	movs	r2, #5
 8005de6:	701a      	strb	r2, [r3, #0]
			t_stamp=t;
 8005de8:	4a17      	ldr	r2, [pc, #92]	; (8005e48 <Lane_Changer+0x240>)
 8005dea:	683b      	ldr	r3, [r7, #0]
 8005dec:	6013      	str	r3, [r2, #0]
			return 0;
 8005dee:	2300      	movs	r3, #0
 8005df0:	e01f      	b.n	8005e32 <Lane_Changer+0x22a>
		}
		else return 1;
 8005df2:	2301      	movs	r3, #1
 8005df4:	e01d      	b.n	8005e32 <Lane_Changer+0x22a>
	}
	if(laneChange==5 && (t-t_stamp)>2000)
 8005df6:	4b11      	ldr	r3, [pc, #68]	; (8005e3c <Lane_Changer+0x234>)
 8005df8:	781b      	ldrb	r3, [r3, #0]
 8005dfa:	2b05      	cmp	r3, #5
 8005dfc:	d111      	bne.n	8005e22 <Lane_Changer+0x21a>
 8005dfe:	4b12      	ldr	r3, [pc, #72]	; (8005e48 <Lane_Changer+0x240>)
 8005e00:	681b      	ldr	r3, [r3, #0]
 8005e02:	683a      	ldr	r2, [r7, #0]
 8005e04:	1ad3      	subs	r3, r2, r3
 8005e06:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8005e0a:	d90a      	bls.n	8005e22 <Lane_Changer+0x21a>
	{

		TIM3->CCR1=474;
 8005e0c:	4b1c      	ldr	r3, [pc, #112]	; (8005e80 <Lane_Changer+0x278>)
 8005e0e:	f44f 72ed 	mov.w	r2, #474	; 0x1da
 8005e12:	635a      	str	r2, [r3, #52]	; 0x34
		TIM3->CCR2=524;
 8005e14:	4b1a      	ldr	r3, [pc, #104]	; (8005e80 <Lane_Changer+0x278>)
 8005e16:	f44f 7203 	mov.w	r2, #524	; 0x20c
 8005e1a:	639a      	str	r2, [r3, #56]	; 0x38
		B_NUCLEO_ISR(huart_debugg);
 8005e1c:	6878      	ldr	r0, [r7, #4]
 8005e1e:	f7fb fa8f 	bl	8001340 <B_NUCLEO_ISR>
	}
	lineCnt_prev=LINE_CNT;
 8005e22:	4b07      	ldr	r3, [pc, #28]	; (8005e40 <Lane_Changer+0x238>)
 8005e24:	785a      	ldrb	r2, [r3, #1]
 8005e26:	4b07      	ldr	r3, [pc, #28]	; (8005e44 <Lane_Changer+0x23c>)
 8005e28:	701a      	strb	r2, [r3, #0]
	t_prev=t;
 8005e2a:	4a0c      	ldr	r2, [pc, #48]	; (8005e5c <Lane_Changer+0x254>)
 8005e2c:	683b      	ldr	r3, [r7, #0]
 8005e2e:	6013      	str	r3, [r2, #0]
	return 0;
 8005e30:	2300      	movs	r3, #0
}
 8005e32:	4618      	mov	r0, r3
 8005e34:	3710      	adds	r7, #16
 8005e36:	46bd      	mov	sp, r7
 8005e38:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8005e3c:	20000348 	.word	0x20000348
 8005e40:	20000774 	.word	0x20000774
 8005e44:	20000109 	.word	0x20000109
 8005e48:	20000804 	.word	0x20000804
 8005e4c:	20000808 	.word	0x20000808
 8005e50:	2000010c 	.word	0x2000010c
 8005e54:	2000080c 	.word	0x2000080c
 8005e58:	20000754 	.word	0x20000754
 8005e5c:	20000810 	.word	0x20000810
 8005e60:	408f4000 	.word	0x408f4000
 8005e64:	20000344 	.word	0x20000344
 8005e68:	20000349 	.word	0x20000349
 8005e6c:	40010000 	.word	0x40010000
 8005e70:	20000814 	.word	0x20000814
 8005e74:	44960000 	.word	0x44960000
 8005e78:	40020400 	.word	0x40020400
 8005e7c:	2000077e 	.word	0x2000077e
 8005e80:	40000400 	.word	0x40000400

08005e84 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8005e84:	b580      	push	{r7, lr}
 8005e86:	b084      	sub	sp, #16
 8005e88:	af04      	add	r7, sp, #16
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8005e8a:	f001 fcf3 	bl	8007874 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8005e8e:	f000 f897 	bl	8005fc0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8005e92:	f000 fdb5 	bl	8006a00 <MX_GPIO_Init>
  MX_DMA_Init();
 8005e96:	f000 fd93 	bl	80069c0 <MX_DMA_Init>
  MX_TIM2_Init();
 8005e9a:	f000 fa87 	bl	80063ac <MX_TIM2_Init>
  MX_USART1_UART_Init();
 8005e9e:	f000 fd11 	bl	80068c4 <MX_USART1_UART_Init>
  MX_TIM4_Init();
 8005ea2:	f000 fb7b 	bl	800659c <MX_TIM4_Init>
  MX_ADC2_Init();
 8005ea6:	f000 f98f 	bl	80061c8 <MX_ADC2_Init>
  MX_TIM3_Init();
 8005eaa:	f000 faf5 	bl	8006498 <MX_TIM3_Init>
  MX_UART5_Init();
 8005eae:	f000 fcdf 	bl	8006870 <MX_UART5_Init>
  MX_USART2_UART_Init();
 8005eb2:	f000 fd31 	bl	8006918 <MX_USART2_UART_Init>
  MX_TIM8_Init();
 8005eb6:	f000 fc3b 	bl	8006730 <MX_TIM8_Init>
  MX_ADC1_Init();
 8005eba:	f000 f8f3 	bl	80060a4 <MX_ADC1_Init>
  MX_USART3_UART_Init();
 8005ebe:	f000 fd55 	bl	800696c <MX_USART3_UART_Init>
  MX_TIM5_Init();
 8005ec2:	f000 fbe7 	bl	8006694 <MX_TIM5_Init>
  MX_TIM1_Init();
 8005ec6:	f000 f9d1 	bl	800626c <MX_TIM1_Init>
  MX_TIM14_Init();
 8005eca:	f000 fcad 	bl	8006828 <MX_TIM14_Init>
  MX_TIM13_Init();
 8005ece:	f000 fc87 	bl	80067e0 <MX_TIM13_Init>
  /* USER CODE BEGIN 2 */
  F4_Basic_Init(&huart1, &htim5, &htim3, &htim2, &htim1, &htim8,&htim13,&htim14);
 8005ed2:	4b2e      	ldr	r3, [pc, #184]	; (8005f8c <main+0x108>)
 8005ed4:	9303      	str	r3, [sp, #12]
 8005ed6:	4b2e      	ldr	r3, [pc, #184]	; (8005f90 <main+0x10c>)
 8005ed8:	9302      	str	r3, [sp, #8]
 8005eda:	4b2e      	ldr	r3, [pc, #184]	; (8005f94 <main+0x110>)
 8005edc:	9301      	str	r3, [sp, #4]
 8005ede:	4b2e      	ldr	r3, [pc, #184]	; (8005f98 <main+0x114>)
 8005ee0:	9300      	str	r3, [sp, #0]
 8005ee2:	4b2e      	ldr	r3, [pc, #184]	; (8005f9c <main+0x118>)
 8005ee4:	4a2e      	ldr	r2, [pc, #184]	; (8005fa0 <main+0x11c>)
 8005ee6:	492f      	ldr	r1, [pc, #188]	; (8005fa4 <main+0x120>)
 8005ee8:	482f      	ldr	r0, [pc, #188]	; (8005fa8 <main+0x124>)
 8005eea:	f7fb f865 	bl	8000fb8 <F4_Basic_Init>
  Remote_Control_Init(&htim4, TIM_CHANNEL_3);
 8005eee:	2108      	movs	r1, #8
 8005ef0:	482e      	ldr	r0, [pc, #184]	; (8005fac <main+0x128>)
 8005ef2:	f000 fed9 	bl	8006ca8 <Remote_Control_Init>
  Battery_Voltage_Compensate(&hadc2, &hadc1, &huart1);
 8005ef6:	4a2c      	ldr	r2, [pc, #176]	; (8005fa8 <main+0x124>)
 8005ef8:	492d      	ldr	r1, [pc, #180]	; (8005fb0 <main+0x12c>)
 8005efa:	482e      	ldr	r0, [pc, #184]	; (8005fb4 <main+0x130>)
 8005efc:	f7fe f810 	bl	8003f20 <Battery_Voltage_Compensate>

  Mode_Selector(&huart1, &huart5);
 8005f00:	492d      	ldr	r1, [pc, #180]	; (8005fb8 <main+0x134>)
 8005f02:	4829      	ldr	r0, [pc, #164]	; (8005fa8 <main+0x124>)
 8005f04:	f7fd fc82 	bl	800380c <Mode_Selector>
  Create_Nodes(&huart1);
 8005f08:	4827      	ldr	r0, [pc, #156]	; (8005fa8 <main+0x124>)
 8005f0a:	f7fb faab 	bl	8001464 <Create_Nodes>
  Wait_For_Start_Sigal(&huart3,&huart1);
 8005f0e:	4926      	ldr	r1, [pc, #152]	; (8005fa8 <main+0x124>)
 8005f10:	482a      	ldr	r0, [pc, #168]	; (8005fbc <main+0x138>)
 8005f12:	f7fd fd4b 	bl	80039ac <Wait_For_Start_Sigal>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {/**/
	  Measure_Velocity_Task(&htim8,TICK, 4);
 8005f16:	4b23      	ldr	r3, [pc, #140]	; (8005fa4 <main+0x120>)
 8005f18:	681b      	ldr	r3, [r3, #0]
 8005f1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f1c:	2204      	movs	r2, #4
 8005f1e:	4619      	mov	r1, r3
 8005f20:	481c      	ldr	r0, [pc, #112]	; (8005f94 <main+0x110>)
 8005f22:	f7fe f929 	bl	8004178 <Measure_Velocity_Task>
	  Motor_Drive_Task(&htim3, &huart1, TICK, 10);
 8005f26:	4b1f      	ldr	r3, [pc, #124]	; (8005fa4 <main+0x120>)
 8005f28:	681b      	ldr	r3, [r3, #0]
 8005f2a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005f2c:	230a      	movs	r3, #10
 8005f2e:	491e      	ldr	r1, [pc, #120]	; (8005fa8 <main+0x124>)
 8005f30:	481b      	ldr	r0, [pc, #108]	; (8005fa0 <main+0x11c>)
 8005f32:	f7fe f99d 	bl	8004270 <Motor_Drive_Task>
	  Remote_Control_Task(&htim4, TIM_CHANNEL_3, &huart1, TICK, 43);
 8005f36:	4b1b      	ldr	r3, [pc, #108]	; (8005fa4 <main+0x120>)
 8005f38:	681b      	ldr	r3, [r3, #0]
 8005f3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f3c:	222b      	movs	r2, #43	; 0x2b
 8005f3e:	9200      	str	r2, [sp, #0]
 8005f40:	4a19      	ldr	r2, [pc, #100]	; (8005fa8 <main+0x124>)
 8005f42:	2108      	movs	r1, #8
 8005f44:	4819      	ldr	r0, [pc, #100]	; (8005fac <main+0x128>)
 8005f46:	f000 fecb 	bl	8006ce0 <Remote_Control_Task>
	  Control_Task(&huart1,&htim14,TICK, 23);
 8005f4a:	4b16      	ldr	r3, [pc, #88]	; (8005fa4 <main+0x120>)
 8005f4c:	681b      	ldr	r3, [r3, #0]
 8005f4e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005f50:	2317      	movs	r3, #23
 8005f52:	490e      	ldr	r1, [pc, #56]	; (8005f8c <main+0x108>)
 8005f54:	4814      	ldr	r0, [pc, #80]	; (8005fa8 <main+0x124>)
 8005f56:	f7fc fba3 	bl	80026a0 <Control_Task>
	  Control_Task_2(&huart1,TICK, 23);
 8005f5a:	4b12      	ldr	r3, [pc, #72]	; (8005fa4 <main+0x120>)
 8005f5c:	681b      	ldr	r3, [r3, #0]
 8005f5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f60:	2217      	movs	r2, #23
 8005f62:	4619      	mov	r1, r3
 8005f64:	4810      	ldr	r0, [pc, #64]	; (8005fa8 <main+0x124>)
 8005f66:	f7fc ff4f 	bl	8002e08 <Control_Task_2>
	  Line_Track_Task(&huart5, &huart1, TICK, 4);
 8005f6a:	4b0e      	ldr	r3, [pc, #56]	; (8005fa4 <main+0x120>)
 8005f6c:	681b      	ldr	r3, [r3, #0]
 8005f6e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005f70:	2304      	movs	r3, #4
 8005f72:	490d      	ldr	r1, [pc, #52]	; (8005fa8 <main+0x124>)
 8005f74:	4810      	ldr	r0, [pc, #64]	; (8005fb8 <main+0x134>)
 8005f76:	f7fe fbef 	bl	8004758 <Line_Track_Task>
	  HDI_Read_Task(&huart1,&htim2,TICK, 200);
 8005f7a:	4b0a      	ldr	r3, [pc, #40]	; (8005fa4 <main+0x120>)
 8005f7c:	681b      	ldr	r3, [r3, #0]
 8005f7e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005f80:	23c8      	movs	r3, #200	; 0xc8
 8005f82:	4906      	ldr	r1, [pc, #24]	; (8005f9c <main+0x118>)
 8005f84:	4808      	ldr	r0, [pc, #32]	; (8005fa8 <main+0x124>)
 8005f86:	f7fb f8dd 	bl	8001144 <HDI_Read_Task>
	  Measure_Velocity_Task(&htim8,TICK, 4);
 8005f8a:	e7c4      	b.n	8005f16 <main+0x92>
 8005f8c:	20000aa0 	.word	0x20000aa0
 8005f90:	20000a58 	.word	0x20000a58
 8005f94:	20000a10 	.word	0x20000a10
 8005f98:	200008a8 	.word	0x200008a8
 8005f9c:	200008f0 	.word	0x200008f0
 8005fa0:	20000938 	.word	0x20000938
 8005fa4:	200009c8 	.word	0x200009c8
 8005fa8:	20000b8c 	.word	0x20000b8c
 8005fac:	20000980 	.word	0x20000980
 8005fb0:	20000818 	.word	0x20000818
 8005fb4:	20000860 	.word	0x20000860
 8005fb8:	20000b48 	.word	0x20000b48
 8005fbc:	20000c14 	.word	0x20000c14

08005fc0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8005fc0:	b580      	push	{r7, lr}
 8005fc2:	b094      	sub	sp, #80	; 0x50
 8005fc4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8005fc6:	f107 031c 	add.w	r3, r7, #28
 8005fca:	2234      	movs	r2, #52	; 0x34
 8005fcc:	2100      	movs	r1, #0
 8005fce:	4618      	mov	r0, r3
 8005fd0:	f007 f9a6 	bl	800d320 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8005fd4:	f107 0308 	add.w	r3, r7, #8
 8005fd8:	2200      	movs	r2, #0
 8005fda:	601a      	str	r2, [r3, #0]
 8005fdc:	605a      	str	r2, [r3, #4]
 8005fde:	609a      	str	r2, [r3, #8]
 8005fe0:	60da      	str	r2, [r3, #12]
 8005fe2:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8005fe4:	2300      	movs	r3, #0
 8005fe6:	607b      	str	r3, [r7, #4]
 8005fe8:	4b2c      	ldr	r3, [pc, #176]	; (800609c <SystemClock_Config+0xdc>)
 8005fea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005fec:	4a2b      	ldr	r2, [pc, #172]	; (800609c <SystemClock_Config+0xdc>)
 8005fee:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005ff2:	6413      	str	r3, [r2, #64]	; 0x40
 8005ff4:	4b29      	ldr	r3, [pc, #164]	; (800609c <SystemClock_Config+0xdc>)
 8005ff6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005ff8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005ffc:	607b      	str	r3, [r7, #4]
 8005ffe:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8006000:	2300      	movs	r3, #0
 8006002:	603b      	str	r3, [r7, #0]
 8006004:	4b26      	ldr	r3, [pc, #152]	; (80060a0 <SystemClock_Config+0xe0>)
 8006006:	681b      	ldr	r3, [r3, #0]
 8006008:	4a25      	ldr	r2, [pc, #148]	; (80060a0 <SystemClock_Config+0xe0>)
 800600a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800600e:	6013      	str	r3, [r2, #0]
 8006010:	4b23      	ldr	r3, [pc, #140]	; (80060a0 <SystemClock_Config+0xe0>)
 8006012:	681b      	ldr	r3, [r3, #0]
 8006014:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8006018:	603b      	str	r3, [r7, #0]
 800601a:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800601c:	2301      	movs	r3, #1
 800601e:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8006020:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8006024:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8006026:	2302      	movs	r3, #2
 8006028:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800602a:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800602e:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 4;
 8006030:	2304      	movs	r3, #4
 8006032:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 180;
 8006034:	23b4      	movs	r3, #180	; 0xb4
 8006036:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8006038:	2302      	movs	r3, #2
 800603a:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 800603c:	2302      	movs	r3, #2
 800603e:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8006040:	2302      	movs	r3, #2
 8006042:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8006044:	f107 031c 	add.w	r3, r7, #28
 8006048:	4618      	mov	r0, r3
 800604a:	f003 ff05 	bl	8009e58 <HAL_RCC_OscConfig>
 800604e:	4603      	mov	r3, r0
 8006050:	2b00      	cmp	r3, #0
 8006052:	d001      	beq.n	8006058 <SystemClock_Config+0x98>
  {
    Error_Handler();
 8006054:	f000 fe00 	bl	8006c58 <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8006058:	f003 fb64 	bl	8009724 <HAL_PWREx_EnableOverDrive>
 800605c:	4603      	mov	r3, r0
 800605e:	2b00      	cmp	r3, #0
 8006060:	d001      	beq.n	8006066 <SystemClock_Config+0xa6>
  {
    Error_Handler();
 8006062:	f000 fdf9 	bl	8006c58 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8006066:	230f      	movs	r3, #15
 8006068:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800606a:	2302      	movs	r3, #2
 800606c:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800606e:	2300      	movs	r3, #0
 8006070:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 8006072:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 8006076:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8006078:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800607c:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800607e:	f107 0308 	add.w	r3, r7, #8
 8006082:	2105      	movs	r1, #5
 8006084:	4618      	mov	r0, r3
 8006086:	f003 fb9d 	bl	80097c4 <HAL_RCC_ClockConfig>
 800608a:	4603      	mov	r3, r0
 800608c:	2b00      	cmp	r3, #0
 800608e:	d001      	beq.n	8006094 <SystemClock_Config+0xd4>
  {
    Error_Handler();
 8006090:	f000 fde2 	bl	8006c58 <Error_Handler>
  }
}
 8006094:	bf00      	nop
 8006096:	3750      	adds	r7, #80	; 0x50
 8006098:	46bd      	mov	sp, r7
 800609a:	bd80      	pop	{r7, pc}
 800609c:	40023800 	.word	0x40023800
 80060a0:	40007000 	.word	0x40007000

080060a4 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 80060a4:	b580      	push	{r7, lr}
 80060a6:	b08c      	sub	sp, #48	; 0x30
 80060a8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80060aa:	f107 0320 	add.w	r3, r7, #32
 80060ae:	2200      	movs	r2, #0
 80060b0:	601a      	str	r2, [r3, #0]
 80060b2:	605a      	str	r2, [r3, #4]
 80060b4:	609a      	str	r2, [r3, #8]
 80060b6:	60da      	str	r2, [r3, #12]
  ADC_InjectionConfTypeDef sConfigInjected = {0};
 80060b8:	463b      	mov	r3, r7
 80060ba:	2220      	movs	r2, #32
 80060bc:	2100      	movs	r1, #0
 80060be:	4618      	mov	r0, r3
 80060c0:	f007 f92e 	bl	800d320 <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 80060c4:	4b3c      	ldr	r3, [pc, #240]	; (80061b8 <MX_ADC1_Init+0x114>)
 80060c6:	4a3d      	ldr	r2, [pc, #244]	; (80061bc <MX_ADC1_Init+0x118>)
 80060c8:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV6;
 80060ca:	4b3b      	ldr	r3, [pc, #236]	; (80061b8 <MX_ADC1_Init+0x114>)
 80060cc:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 80060d0:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80060d2:	4b39      	ldr	r3, [pc, #228]	; (80061b8 <MX_ADC1_Init+0x114>)
 80060d4:	2200      	movs	r2, #0
 80060d6:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ENABLE;
 80060d8:	4b37      	ldr	r3, [pc, #220]	; (80061b8 <MX_ADC1_Init+0x114>)
 80060da:	2201      	movs	r2, #1
 80060dc:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 80060de:	4b36      	ldr	r3, [pc, #216]	; (80061b8 <MX_ADC1_Init+0x114>)
 80060e0:	2200      	movs	r2, #0
 80060e2:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80060e4:	4b34      	ldr	r3, [pc, #208]	; (80061b8 <MX_ADC1_Init+0x114>)
 80060e6:	2200      	movs	r2, #0
 80060e8:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80060ec:	4b32      	ldr	r3, [pc, #200]	; (80061b8 <MX_ADC1_Init+0x114>)
 80060ee:	2200      	movs	r2, #0
 80060f0:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80060f2:	4b31      	ldr	r3, [pc, #196]	; (80061b8 <MX_ADC1_Init+0x114>)
 80060f4:	4a32      	ldr	r2, [pc, #200]	; (80061c0 <MX_ADC1_Init+0x11c>)
 80060f6:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80060f8:	4b2f      	ldr	r3, [pc, #188]	; (80061b8 <MX_ADC1_Init+0x114>)
 80060fa:	2200      	movs	r2, #0
 80060fc:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 3;
 80060fe:	4b2e      	ldr	r3, [pc, #184]	; (80061b8 <MX_ADC1_Init+0x114>)
 8006100:	2203      	movs	r2, #3
 8006102:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8006104:	4b2c      	ldr	r3, [pc, #176]	; (80061b8 <MX_ADC1_Init+0x114>)
 8006106:	2200      	movs	r2, #0
 8006108:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800610c:	4b2a      	ldr	r3, [pc, #168]	; (80061b8 <MX_ADC1_Init+0x114>)
 800610e:	2201      	movs	r2, #1
 8006110:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8006112:	4829      	ldr	r0, [pc, #164]	; (80061b8 <MX_ADC1_Init+0x114>)
 8006114:	f001 fc44 	bl	80079a0 <HAL_ADC_Init>
 8006118:	4603      	mov	r3, r0
 800611a:	2b00      	cmp	r3, #0
 800611c:	d001      	beq.n	8006122 <MX_ADC1_Init+0x7e>
  {
    Error_Handler();
 800611e:	f000 fd9b 	bl	8006c58 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_8;
 8006122:	2308      	movs	r3, #8
 8006124:	623b      	str	r3, [r7, #32]
  sConfig.Rank = 1;
 8006126:	2301      	movs	r3, #1
 8006128:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 800612a:	2307      	movs	r3, #7
 800612c:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800612e:	f107 0320 	add.w	r3, r7, #32
 8006132:	4619      	mov	r1, r3
 8006134:	4820      	ldr	r0, [pc, #128]	; (80061b8 <MX_ADC1_Init+0x114>)
 8006136:	f001 fde1 	bl	8007cfc <HAL_ADC_ConfigChannel>
 800613a:	4603      	mov	r3, r0
 800613c:	2b00      	cmp	r3, #0
 800613e:	d001      	beq.n	8006144 <MX_ADC1_Init+0xa0>
  {
    Error_Handler();
 8006140:	f000 fd8a 	bl	8006c58 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Rank = 2;
 8006144:	2302      	movs	r3, #2
 8006146:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8006148:	f107 0320 	add.w	r3, r7, #32
 800614c:	4619      	mov	r1, r3
 800614e:	481a      	ldr	r0, [pc, #104]	; (80061b8 <MX_ADC1_Init+0x114>)
 8006150:	f001 fdd4 	bl	8007cfc <HAL_ADC_ConfigChannel>
 8006154:	4603      	mov	r3, r0
 8006156:	2b00      	cmp	r3, #0
 8006158:	d001      	beq.n	800615e <MX_ADC1_Init+0xba>
  {
    Error_Handler();
 800615a:	f000 fd7d 	bl	8006c58 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Rank = 3;
 800615e:	2303      	movs	r3, #3
 8006160:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8006162:	f107 0320 	add.w	r3, r7, #32
 8006166:	4619      	mov	r1, r3
 8006168:	4813      	ldr	r0, [pc, #76]	; (80061b8 <MX_ADC1_Init+0x114>)
 800616a:	f001 fdc7 	bl	8007cfc <HAL_ADC_ConfigChannel>
 800616e:	4603      	mov	r3, r0
 8006170:	2b00      	cmp	r3, #0
 8006172:	d001      	beq.n	8006178 <MX_ADC1_Init+0xd4>
  {
    Error_Handler();
 8006174:	f000 fd70 	bl	8006c58 <Error_Handler>
  }

  /** Configures for the selected ADC injected channel its corresponding rank in the sequencer and its sample time
  */
  sConfigInjected.InjectedChannel = ADC_CHANNEL_8;
 8006178:	2308      	movs	r3, #8
 800617a:	603b      	str	r3, [r7, #0]
  sConfigInjected.InjectedRank = 1;
 800617c:	2301      	movs	r3, #1
 800617e:	607b      	str	r3, [r7, #4]
  sConfigInjected.InjectedNbrOfConversion = 1;
 8006180:	2301      	movs	r3, #1
 8006182:	613b      	str	r3, [r7, #16]
  sConfigInjected.InjectedSamplingTime = ADC_SAMPLETIME_3CYCLES;
 8006184:	2300      	movs	r3, #0
 8006186:	60bb      	str	r3, [r7, #8]
  sConfigInjected.ExternalTrigInjecConvEdge = ADC_EXTERNALTRIGINJECCONVEDGE_NONE;
 8006188:	2300      	movs	r3, #0
 800618a:	61fb      	str	r3, [r7, #28]
  sConfigInjected.ExternalTrigInjecConv = ADC_INJECTED_SOFTWARE_START;
 800618c:	4b0d      	ldr	r3, [pc, #52]	; (80061c4 <MX_ADC1_Init+0x120>)
 800618e:	61bb      	str	r3, [r7, #24]
  sConfigInjected.AutoInjectedConv = DISABLE;
 8006190:	2300      	movs	r3, #0
 8006192:	757b      	strb	r3, [r7, #21]
  sConfigInjected.InjectedDiscontinuousConvMode = DISABLE;
 8006194:	2300      	movs	r3, #0
 8006196:	753b      	strb	r3, [r7, #20]
  sConfigInjected.InjectedOffset = 0;
 8006198:	2300      	movs	r3, #0
 800619a:	60fb      	str	r3, [r7, #12]
  if (HAL_ADCEx_InjectedConfigChannel(&hadc1, &sConfigInjected) != HAL_OK)
 800619c:	463b      	mov	r3, r7
 800619e:	4619      	mov	r1, r3
 80061a0:	4805      	ldr	r0, [pc, #20]	; (80061b8 <MX_ADC1_Init+0x114>)
 80061a2:	f001 ffd9 	bl	8008158 <HAL_ADCEx_InjectedConfigChannel>
 80061a6:	4603      	mov	r3, r0
 80061a8:	2b00      	cmp	r3, #0
 80061aa:	d001      	beq.n	80061b0 <MX_ADC1_Init+0x10c>
  {
    Error_Handler();
 80061ac:	f000 fd54 	bl	8006c58 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 80061b0:	bf00      	nop
 80061b2:	3730      	adds	r7, #48	; 0x30
 80061b4:	46bd      	mov	sp, r7
 80061b6:	bd80      	pop	{r7, pc}
 80061b8:	20000818 	.word	0x20000818
 80061bc:	40012000 	.word	0x40012000
 80061c0:	0f000001 	.word	0x0f000001
 80061c4:	000f0001 	.word	0x000f0001

080061c8 <MX_ADC2_Init>:
  * @brief ADC2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC2_Init(void)
{
 80061c8:	b580      	push	{r7, lr}
 80061ca:	b084      	sub	sp, #16
 80061cc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80061ce:	463b      	mov	r3, r7
 80061d0:	2200      	movs	r2, #0
 80061d2:	601a      	str	r2, [r3, #0]
 80061d4:	605a      	str	r2, [r3, #4]
 80061d6:	609a      	str	r2, [r3, #8]
 80061d8:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC2_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc2.Instance = ADC2;
 80061da:	4b21      	ldr	r3, [pc, #132]	; (8006260 <MX_ADC2_Init+0x98>)
 80061dc:	4a21      	ldr	r2, [pc, #132]	; (8006264 <MX_ADC2_Init+0x9c>)
 80061de:	601a      	str	r2, [r3, #0]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV6;
 80061e0:	4b1f      	ldr	r3, [pc, #124]	; (8006260 <MX_ADC2_Init+0x98>)
 80061e2:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 80061e6:	605a      	str	r2, [r3, #4]
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 80061e8:	4b1d      	ldr	r3, [pc, #116]	; (8006260 <MX_ADC2_Init+0x98>)
 80061ea:	2200      	movs	r2, #0
 80061ec:	609a      	str	r2, [r3, #8]
  hadc2.Init.ScanConvMode = DISABLE;
 80061ee:	4b1c      	ldr	r3, [pc, #112]	; (8006260 <MX_ADC2_Init+0x98>)
 80061f0:	2200      	movs	r2, #0
 80061f2:	611a      	str	r2, [r3, #16]
  hadc2.Init.ContinuousConvMode = DISABLE;
 80061f4:	4b1a      	ldr	r3, [pc, #104]	; (8006260 <MX_ADC2_Init+0x98>)
 80061f6:	2200      	movs	r2, #0
 80061f8:	761a      	strb	r2, [r3, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 80061fa:	4b19      	ldr	r3, [pc, #100]	; (8006260 <MX_ADC2_Init+0x98>)
 80061fc:	2200      	movs	r2, #0
 80061fe:	f883 2020 	strb.w	r2, [r3, #32]
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8006202:	4b17      	ldr	r3, [pc, #92]	; (8006260 <MX_ADC2_Init+0x98>)
 8006204:	2200      	movs	r2, #0
 8006206:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8006208:	4b15      	ldr	r3, [pc, #84]	; (8006260 <MX_ADC2_Init+0x98>)
 800620a:	4a17      	ldr	r2, [pc, #92]	; (8006268 <MX_ADC2_Init+0xa0>)
 800620c:	629a      	str	r2, [r3, #40]	; 0x28
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800620e:	4b14      	ldr	r3, [pc, #80]	; (8006260 <MX_ADC2_Init+0x98>)
 8006210:	2200      	movs	r2, #0
 8006212:	60da      	str	r2, [r3, #12]
  hadc2.Init.NbrOfConversion = 1;
 8006214:	4b12      	ldr	r3, [pc, #72]	; (8006260 <MX_ADC2_Init+0x98>)
 8006216:	2201      	movs	r2, #1
 8006218:	61da      	str	r2, [r3, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 800621a:	4b11      	ldr	r3, [pc, #68]	; (8006260 <MX_ADC2_Init+0x98>)
 800621c:	2200      	movs	r2, #0
 800621e:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8006222:	4b0f      	ldr	r3, [pc, #60]	; (8006260 <MX_ADC2_Init+0x98>)
 8006224:	2201      	movs	r2, #1
 8006226:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8006228:	480d      	ldr	r0, [pc, #52]	; (8006260 <MX_ADC2_Init+0x98>)
 800622a:	f001 fbb9 	bl	80079a0 <HAL_ADC_Init>
 800622e:	4603      	mov	r3, r0
 8006230:	2b00      	cmp	r3, #0
 8006232:	d001      	beq.n	8006238 <MX_ADC2_Init+0x70>
  {
    Error_Handler();
 8006234:	f000 fd10 	bl	8006c58 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_13;
 8006238:	230d      	movs	r3, #13
 800623a:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 800623c:	2301      	movs	r3, #1
 800623e:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8006240:	2307      	movs	r3, #7
 8006242:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8006244:	463b      	mov	r3, r7
 8006246:	4619      	mov	r1, r3
 8006248:	4805      	ldr	r0, [pc, #20]	; (8006260 <MX_ADC2_Init+0x98>)
 800624a:	f001 fd57 	bl	8007cfc <HAL_ADC_ConfigChannel>
 800624e:	4603      	mov	r3, r0
 8006250:	2b00      	cmp	r3, #0
 8006252:	d001      	beq.n	8006258 <MX_ADC2_Init+0x90>
  {
    Error_Handler();
 8006254:	f000 fd00 	bl	8006c58 <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */

  /* USER CODE END ADC2_Init 2 */

}
 8006258:	bf00      	nop
 800625a:	3710      	adds	r7, #16
 800625c:	46bd      	mov	sp, r7
 800625e:	bd80      	pop	{r7, pc}
 8006260:	20000860 	.word	0x20000860
 8006264:	40012100 	.word	0x40012100
 8006268:	0f000001 	.word	0x0f000001

0800626c <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 800626c:	b580      	push	{r7, lr}
 800626e:	b096      	sub	sp, #88	; 0x58
 8006270:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8006272:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8006276:	2200      	movs	r2, #0
 8006278:	601a      	str	r2, [r3, #0]
 800627a:	605a      	str	r2, [r3, #4]
 800627c:	609a      	str	r2, [r3, #8]
 800627e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8006280:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8006284:	2200      	movs	r2, #0
 8006286:	601a      	str	r2, [r3, #0]
 8006288:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800628a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800628e:	2200      	movs	r2, #0
 8006290:	601a      	str	r2, [r3, #0]
 8006292:	605a      	str	r2, [r3, #4]
 8006294:	609a      	str	r2, [r3, #8]
 8006296:	60da      	str	r2, [r3, #12]
 8006298:	611a      	str	r2, [r3, #16]
 800629a:	615a      	str	r2, [r3, #20]
 800629c:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 800629e:	1d3b      	adds	r3, r7, #4
 80062a0:	2220      	movs	r2, #32
 80062a2:	2100      	movs	r1, #0
 80062a4:	4618      	mov	r0, r3
 80062a6:	f007 f83b 	bl	800d320 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 80062aa:	4b3e      	ldr	r3, [pc, #248]	; (80063a4 <MX_TIM1_Init+0x138>)
 80062ac:	4a3e      	ldr	r2, [pc, #248]	; (80063a8 <MX_TIM1_Init+0x13c>)
 80062ae:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 360-1;
 80062b0:	4b3c      	ldr	r3, [pc, #240]	; (80063a4 <MX_TIM1_Init+0x138>)
 80062b2:	f240 1267 	movw	r2, #359	; 0x167
 80062b6:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80062b8:	4b3a      	ldr	r3, [pc, #232]	; (80063a4 <MX_TIM1_Init+0x138>)
 80062ba:	2200      	movs	r2, #0
 80062bc:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 10000-1;
 80062be:	4b39      	ldr	r3, [pc, #228]	; (80063a4 <MX_TIM1_Init+0x138>)
 80062c0:	f242 720f 	movw	r2, #9999	; 0x270f
 80062c4:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80062c6:	4b37      	ldr	r3, [pc, #220]	; (80063a4 <MX_TIM1_Init+0x138>)
 80062c8:	2200      	movs	r2, #0
 80062ca:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 80062cc:	4b35      	ldr	r3, [pc, #212]	; (80063a4 <MX_TIM1_Init+0x138>)
 80062ce:	2200      	movs	r2, #0
 80062d0:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80062d2:	4b34      	ldr	r3, [pc, #208]	; (80063a4 <MX_TIM1_Init+0x138>)
 80062d4:	2280      	movs	r2, #128	; 0x80
 80062d6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 80062d8:	4832      	ldr	r0, [pc, #200]	; (80063a4 <MX_TIM1_Init+0x138>)
 80062da:	f004 f85b 	bl	800a394 <HAL_TIM_Base_Init>
 80062de:	4603      	mov	r3, r0
 80062e0:	2b00      	cmp	r3, #0
 80062e2:	d001      	beq.n	80062e8 <MX_TIM1_Init+0x7c>
  {
    Error_Handler();
 80062e4:	f000 fcb8 	bl	8006c58 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80062e8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80062ec:	64bb      	str	r3, [r7, #72]	; 0x48
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 80062ee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80062f2:	4619      	mov	r1, r3
 80062f4:	482b      	ldr	r0, [pc, #172]	; (80063a4 <MX_TIM1_Init+0x138>)
 80062f6:	f004 ffc5 	bl	800b284 <HAL_TIM_ConfigClockSource>
 80062fa:	4603      	mov	r3, r0
 80062fc:	2b00      	cmp	r3, #0
 80062fe:	d001      	beq.n	8006304 <MX_TIM1_Init+0x98>
  {
    Error_Handler();
 8006300:	f000 fcaa 	bl	8006c58 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8006304:	4827      	ldr	r0, [pc, #156]	; (80063a4 <MX_TIM1_Init+0x138>)
 8006306:	f004 f8fd 	bl	800a504 <HAL_TIM_PWM_Init>
 800630a:	4603      	mov	r3, r0
 800630c:	2b00      	cmp	r3, #0
 800630e:	d001      	beq.n	8006314 <MX_TIM1_Init+0xa8>
  {
    Error_Handler();
 8006310:	f000 fca2 	bl	8006c58 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8006314:	2300      	movs	r3, #0
 8006316:	643b      	str	r3, [r7, #64]	; 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8006318:	2300      	movs	r3, #0
 800631a:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800631c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8006320:	4619      	mov	r1, r3
 8006322:	4820      	ldr	r0, [pc, #128]	; (80063a4 <MX_TIM1_Init+0x138>)
 8006324:	f005 fdd6 	bl	800bed4 <HAL_TIMEx_MasterConfigSynchronization>
 8006328:	4603      	mov	r3, r0
 800632a:	2b00      	cmp	r3, #0
 800632c:	d001      	beq.n	8006332 <MX_TIM1_Init+0xc6>
  {
    Error_Handler();
 800632e:	f000 fc93 	bl	8006c58 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8006332:	2360      	movs	r3, #96	; 0x60
 8006334:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigOC.Pulse = 750-1;
 8006336:	f240 23ed 	movw	r3, #749	; 0x2ed
 800633a:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800633c:	2300      	movs	r3, #0
 800633e:	62fb      	str	r3, [r7, #44]	; 0x2c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8006340:	2300      	movs	r3, #0
 8006342:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8006344:	2300      	movs	r3, #0
 8006346:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8006348:	2300      	movs	r3, #0
 800634a:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 800634c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8006350:	220c      	movs	r2, #12
 8006352:	4619      	mov	r1, r3
 8006354:	4813      	ldr	r0, [pc, #76]	; (80063a4 <MX_TIM1_Init+0x138>)
 8006356:	f004 fed3 	bl	800b100 <HAL_TIM_PWM_ConfigChannel>
 800635a:	4603      	mov	r3, r0
 800635c:	2b00      	cmp	r3, #0
 800635e:	d001      	beq.n	8006364 <MX_TIM1_Init+0xf8>
  {
    Error_Handler();
 8006360:	f000 fc7a 	bl	8006c58 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8006364:	2300      	movs	r3, #0
 8006366:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8006368:	2300      	movs	r3, #0
 800636a:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 800636c:	2300      	movs	r3, #0
 800636e:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8006370:	2300      	movs	r3, #0
 8006372:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8006374:	2300      	movs	r3, #0
 8006376:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8006378:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800637c:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 800637e:	2300      	movs	r3, #0
 8006380:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8006382:	1d3b      	adds	r3, r7, #4
 8006384:	4619      	mov	r1, r3
 8006386:	4807      	ldr	r0, [pc, #28]	; (80063a4 <MX_TIM1_Init+0x138>)
 8006388:	f005 fe20 	bl	800bfcc <HAL_TIMEx_ConfigBreakDeadTime>
 800638c:	4603      	mov	r3, r0
 800638e:	2b00      	cmp	r3, #0
 8006390:	d001      	beq.n	8006396 <MX_TIM1_Init+0x12a>
  {
    Error_Handler();
 8006392:	f000 fc61 	bl	8006c58 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8006396:	4803      	ldr	r0, [pc, #12]	; (80063a4 <MX_TIM1_Init+0x138>)
 8006398:	f000 ff46 	bl	8007228 <HAL_TIM_MspPostInit>

}
 800639c:	bf00      	nop
 800639e:	3758      	adds	r7, #88	; 0x58
 80063a0:	46bd      	mov	sp, r7
 80063a2:	bd80      	pop	{r7, pc}
 80063a4:	200008a8 	.word	0x200008a8
 80063a8:	40010000 	.word	0x40010000

080063ac <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80063ac:	b580      	push	{r7, lr}
 80063ae:	b08e      	sub	sp, #56	; 0x38
 80063b0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80063b2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80063b6:	2200      	movs	r2, #0
 80063b8:	601a      	str	r2, [r3, #0]
 80063ba:	605a      	str	r2, [r3, #4]
 80063bc:	609a      	str	r2, [r3, #8]
 80063be:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80063c0:	f107 0320 	add.w	r3, r7, #32
 80063c4:	2200      	movs	r2, #0
 80063c6:	601a      	str	r2, [r3, #0]
 80063c8:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80063ca:	1d3b      	adds	r3, r7, #4
 80063cc:	2200      	movs	r2, #0
 80063ce:	601a      	str	r2, [r3, #0]
 80063d0:	605a      	str	r2, [r3, #4]
 80063d2:	609a      	str	r2, [r3, #8]
 80063d4:	60da      	str	r2, [r3, #12]
 80063d6:	611a      	str	r2, [r3, #16]
 80063d8:	615a      	str	r2, [r3, #20]
 80063da:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80063dc:	4b2d      	ldr	r3, [pc, #180]	; (8006494 <MX_TIM2_Init+0xe8>)
 80063de:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80063e2:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 90-1;
 80063e4:	4b2b      	ldr	r3, [pc, #172]	; (8006494 <MX_TIM2_Init+0xe8>)
 80063e6:	2259      	movs	r2, #89	; 0x59
 80063e8:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80063ea:	4b2a      	ldr	r3, [pc, #168]	; (8006494 <MX_TIM2_Init+0xe8>)
 80063ec:	2200      	movs	r2, #0
 80063ee:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 10000-1;
 80063f0:	4b28      	ldr	r3, [pc, #160]	; (8006494 <MX_TIM2_Init+0xe8>)
 80063f2:	f242 720f 	movw	r2, #9999	; 0x270f
 80063f6:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80063f8:	4b26      	ldr	r3, [pc, #152]	; (8006494 <MX_TIM2_Init+0xe8>)
 80063fa:	2200      	movs	r2, #0
 80063fc:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80063fe:	4b25      	ldr	r3, [pc, #148]	; (8006494 <MX_TIM2_Init+0xe8>)
 8006400:	2280      	movs	r2, #128	; 0x80
 8006402:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8006404:	4823      	ldr	r0, [pc, #140]	; (8006494 <MX_TIM2_Init+0xe8>)
 8006406:	f003 ffc5 	bl	800a394 <HAL_TIM_Base_Init>
 800640a:	4603      	mov	r3, r0
 800640c:	2b00      	cmp	r3, #0
 800640e:	d001      	beq.n	8006414 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 8006410:	f000 fc22 	bl	8006c58 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8006414:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8006418:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800641a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800641e:	4619      	mov	r1, r3
 8006420:	481c      	ldr	r0, [pc, #112]	; (8006494 <MX_TIM2_Init+0xe8>)
 8006422:	f004 ff2f 	bl	800b284 <HAL_TIM_ConfigClockSource>
 8006426:	4603      	mov	r3, r0
 8006428:	2b00      	cmp	r3, #0
 800642a:	d001      	beq.n	8006430 <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 800642c:	f000 fc14 	bl	8006c58 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8006430:	4818      	ldr	r0, [pc, #96]	; (8006494 <MX_TIM2_Init+0xe8>)
 8006432:	f004 f867 	bl	800a504 <HAL_TIM_PWM_Init>
 8006436:	4603      	mov	r3, r0
 8006438:	2b00      	cmp	r3, #0
 800643a:	d001      	beq.n	8006440 <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 800643c:	f000 fc0c 	bl	8006c58 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8006440:	2300      	movs	r3, #0
 8006442:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8006444:	2300      	movs	r3, #0
 8006446:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8006448:	f107 0320 	add.w	r3, r7, #32
 800644c:	4619      	mov	r1, r3
 800644e:	4811      	ldr	r0, [pc, #68]	; (8006494 <MX_TIM2_Init+0xe8>)
 8006450:	f005 fd40 	bl	800bed4 <HAL_TIMEx_MasterConfigSynchronization>
 8006454:	4603      	mov	r3, r0
 8006456:	2b00      	cmp	r3, #0
 8006458:	d001      	beq.n	800645e <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 800645a:	f000 fbfd 	bl	8006c58 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800645e:	2360      	movs	r3, #96	; 0x60
 8006460:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 750-1;
 8006462:	f240 23ed 	movw	r3, #749	; 0x2ed
 8006466:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8006468:	2300      	movs	r3, #0
 800646a:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800646c:	2300      	movs	r3, #0
 800646e:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8006470:	1d3b      	adds	r3, r7, #4
 8006472:	2200      	movs	r2, #0
 8006474:	4619      	mov	r1, r3
 8006476:	4807      	ldr	r0, [pc, #28]	; (8006494 <MX_TIM2_Init+0xe8>)
 8006478:	f004 fe42 	bl	800b100 <HAL_TIM_PWM_ConfigChannel>
 800647c:	4603      	mov	r3, r0
 800647e:	2b00      	cmp	r3, #0
 8006480:	d001      	beq.n	8006486 <MX_TIM2_Init+0xda>
  {
    Error_Handler();
 8006482:	f000 fbe9 	bl	8006c58 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8006486:	4803      	ldr	r0, [pc, #12]	; (8006494 <MX_TIM2_Init+0xe8>)
 8006488:	f000 fece 	bl	8007228 <HAL_TIM_MspPostInit>

}
 800648c:	bf00      	nop
 800648e:	3738      	adds	r7, #56	; 0x38
 8006490:	46bd      	mov	sp, r7
 8006492:	bd80      	pop	{r7, pc}
 8006494:	200008f0 	.word	0x200008f0

08006498 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8006498:	b580      	push	{r7, lr}
 800649a:	b08e      	sub	sp, #56	; 0x38
 800649c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800649e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80064a2:	2200      	movs	r2, #0
 80064a4:	601a      	str	r2, [r3, #0]
 80064a6:	605a      	str	r2, [r3, #4]
 80064a8:	609a      	str	r2, [r3, #8]
 80064aa:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80064ac:	f107 0320 	add.w	r3, r7, #32
 80064b0:	2200      	movs	r2, #0
 80064b2:	601a      	str	r2, [r3, #0]
 80064b4:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80064b6:	1d3b      	adds	r3, r7, #4
 80064b8:	2200      	movs	r2, #0
 80064ba:	601a      	str	r2, [r3, #0]
 80064bc:	605a      	str	r2, [r3, #4]
 80064be:	609a      	str	r2, [r3, #8]
 80064c0:	60da      	str	r2, [r3, #12]
 80064c2:	611a      	str	r2, [r3, #16]
 80064c4:	615a      	str	r2, [r3, #20]
 80064c6:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80064c8:	4b32      	ldr	r3, [pc, #200]	; (8006594 <MX_TIM3_Init+0xfc>)
 80064ca:	4a33      	ldr	r2, [pc, #204]	; (8006598 <MX_TIM3_Init+0x100>)
 80064cc:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 2-1;
 80064ce:	4b31      	ldr	r3, [pc, #196]	; (8006594 <MX_TIM3_Init+0xfc>)
 80064d0:	2201      	movs	r2, #1
 80064d2:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED3;
 80064d4:	4b2f      	ldr	r3, [pc, #188]	; (8006594 <MX_TIM3_Init+0xfc>)
 80064d6:	2260      	movs	r2, #96	; 0x60
 80064d8:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 1000-1;
 80064da:	4b2e      	ldr	r3, [pc, #184]	; (8006594 <MX_TIM3_Init+0xfc>)
 80064dc:	f240 32e7 	movw	r2, #999	; 0x3e7
 80064e0:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80064e2:	4b2c      	ldr	r3, [pc, #176]	; (8006594 <MX_TIM3_Init+0xfc>)
 80064e4:	2200      	movs	r2, #0
 80064e6:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80064e8:	4b2a      	ldr	r3, [pc, #168]	; (8006594 <MX_TIM3_Init+0xfc>)
 80064ea:	2200      	movs	r2, #0
 80064ec:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80064ee:	4829      	ldr	r0, [pc, #164]	; (8006594 <MX_TIM3_Init+0xfc>)
 80064f0:	f003 ff50 	bl	800a394 <HAL_TIM_Base_Init>
 80064f4:	4603      	mov	r3, r0
 80064f6:	2b00      	cmp	r3, #0
 80064f8:	d001      	beq.n	80064fe <MX_TIM3_Init+0x66>
  {
    Error_Handler();
 80064fa:	f000 fbad 	bl	8006c58 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80064fe:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8006502:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8006504:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8006508:	4619      	mov	r1, r3
 800650a:	4822      	ldr	r0, [pc, #136]	; (8006594 <MX_TIM3_Init+0xfc>)
 800650c:	f004 feba 	bl	800b284 <HAL_TIM_ConfigClockSource>
 8006510:	4603      	mov	r3, r0
 8006512:	2b00      	cmp	r3, #0
 8006514:	d001      	beq.n	800651a <MX_TIM3_Init+0x82>
  {
    Error_Handler();
 8006516:	f000 fb9f 	bl	8006c58 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 800651a:	481e      	ldr	r0, [pc, #120]	; (8006594 <MX_TIM3_Init+0xfc>)
 800651c:	f003 fff2 	bl	800a504 <HAL_TIM_PWM_Init>
 8006520:	4603      	mov	r3, r0
 8006522:	2b00      	cmp	r3, #0
 8006524:	d001      	beq.n	800652a <MX_TIM3_Init+0x92>
  {
    Error_Handler();
 8006526:	f000 fb97 	bl	8006c58 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800652a:	2300      	movs	r3, #0
 800652c:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800652e:	2300      	movs	r3, #0
 8006530:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8006532:	f107 0320 	add.w	r3, r7, #32
 8006536:	4619      	mov	r1, r3
 8006538:	4816      	ldr	r0, [pc, #88]	; (8006594 <MX_TIM3_Init+0xfc>)
 800653a:	f005 fccb 	bl	800bed4 <HAL_TIMEx_MasterConfigSynchronization>
 800653e:	4603      	mov	r3, r0
 8006540:	2b00      	cmp	r3, #0
 8006542:	d001      	beq.n	8006548 <MX_TIM3_Init+0xb0>
  {
    Error_Handler();
 8006544:	f000 fb88 	bl	8006c58 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8006548:	2360      	movs	r3, #96	; 0x60
 800654a:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 800654c:	2300      	movs	r3, #0
 800654e:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8006550:	2300      	movs	r3, #0
 8006552:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8006554:	2300      	movs	r3, #0
 8006556:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8006558:	1d3b      	adds	r3, r7, #4
 800655a:	2200      	movs	r2, #0
 800655c:	4619      	mov	r1, r3
 800655e:	480d      	ldr	r0, [pc, #52]	; (8006594 <MX_TIM3_Init+0xfc>)
 8006560:	f004 fdce 	bl	800b100 <HAL_TIM_PWM_ConfigChannel>
 8006564:	4603      	mov	r3, r0
 8006566:	2b00      	cmp	r3, #0
 8006568:	d001      	beq.n	800656e <MX_TIM3_Init+0xd6>
  {
    Error_Handler();
 800656a:	f000 fb75 	bl	8006c58 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 800656e:	1d3b      	adds	r3, r7, #4
 8006570:	2204      	movs	r2, #4
 8006572:	4619      	mov	r1, r3
 8006574:	4807      	ldr	r0, [pc, #28]	; (8006594 <MX_TIM3_Init+0xfc>)
 8006576:	f004 fdc3 	bl	800b100 <HAL_TIM_PWM_ConfigChannel>
 800657a:	4603      	mov	r3, r0
 800657c:	2b00      	cmp	r3, #0
 800657e:	d001      	beq.n	8006584 <MX_TIM3_Init+0xec>
  {
    Error_Handler();
 8006580:	f000 fb6a 	bl	8006c58 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8006584:	4803      	ldr	r0, [pc, #12]	; (8006594 <MX_TIM3_Init+0xfc>)
 8006586:	f000 fe4f 	bl	8007228 <HAL_TIM_MspPostInit>

}
 800658a:	bf00      	nop
 800658c:	3738      	adds	r7, #56	; 0x38
 800658e:	46bd      	mov	sp, r7
 8006590:	bd80      	pop	{r7, pc}
 8006592:	bf00      	nop
 8006594:	20000938 	.word	0x20000938
 8006598:	40000400 	.word	0x40000400

0800659c <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 800659c:	b580      	push	{r7, lr}
 800659e:	b08a      	sub	sp, #40	; 0x28
 80065a0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80065a2:	f107 0318 	add.w	r3, r7, #24
 80065a6:	2200      	movs	r2, #0
 80065a8:	601a      	str	r2, [r3, #0]
 80065aa:	605a      	str	r2, [r3, #4]
 80065ac:	609a      	str	r2, [r3, #8]
 80065ae:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80065b0:	f107 0310 	add.w	r3, r7, #16
 80065b4:	2200      	movs	r2, #0
 80065b6:	601a      	str	r2, [r3, #0]
 80065b8:	605a      	str	r2, [r3, #4]
  TIM_IC_InitTypeDef sConfigIC = {0};
 80065ba:	463b      	mov	r3, r7
 80065bc:	2200      	movs	r2, #0
 80065be:	601a      	str	r2, [r3, #0]
 80065c0:	605a      	str	r2, [r3, #4]
 80065c2:	609a      	str	r2, [r3, #8]
 80065c4:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 80065c6:	4b31      	ldr	r3, [pc, #196]	; (800668c <MX_TIM4_Init+0xf0>)
 80065c8:	4a31      	ldr	r2, [pc, #196]	; (8006690 <MX_TIM4_Init+0xf4>)
 80065ca:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 800-1;
 80065cc:	4b2f      	ldr	r3, [pc, #188]	; (800668c <MX_TIM4_Init+0xf0>)
 80065ce:	f240 321f 	movw	r2, #799	; 0x31f
 80065d2:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 80065d4:	4b2d      	ldr	r3, [pc, #180]	; (800668c <MX_TIM4_Init+0xf0>)
 80065d6:	2200      	movs	r2, #0
 80065d8:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65536-1;
 80065da:	4b2c      	ldr	r3, [pc, #176]	; (800668c <MX_TIM4_Init+0xf0>)
 80065dc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80065e0:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80065e2:	4b2a      	ldr	r3, [pc, #168]	; (800668c <MX_TIM4_Init+0xf0>)
 80065e4:	2200      	movs	r2, #0
 80065e6:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80065e8:	4b28      	ldr	r3, [pc, #160]	; (800668c <MX_TIM4_Init+0xf0>)
 80065ea:	2280      	movs	r2, #128	; 0x80
 80065ec:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 80065ee:	4827      	ldr	r0, [pc, #156]	; (800668c <MX_TIM4_Init+0xf0>)
 80065f0:	f003 fed0 	bl	800a394 <HAL_TIM_Base_Init>
 80065f4:	4603      	mov	r3, r0
 80065f6:	2b00      	cmp	r3, #0
 80065f8:	d001      	beq.n	80065fe <MX_TIM4_Init+0x62>
  {
    Error_Handler();
 80065fa:	f000 fb2d 	bl	8006c58 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80065fe:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8006602:	61bb      	str	r3, [r7, #24]
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8006604:	f107 0318 	add.w	r3, r7, #24
 8006608:	4619      	mov	r1, r3
 800660a:	4820      	ldr	r0, [pc, #128]	; (800668c <MX_TIM4_Init+0xf0>)
 800660c:	f004 fe3a 	bl	800b284 <HAL_TIM_ConfigClockSource>
 8006610:	4603      	mov	r3, r0
 8006612:	2b00      	cmp	r3, #0
 8006614:	d001      	beq.n	800661a <MX_TIM4_Init+0x7e>
  {
    Error_Handler();
 8006616:	f000 fb1f 	bl	8006c58 <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim4) != HAL_OK)
 800661a:	481c      	ldr	r0, [pc, #112]	; (800668c <MX_TIM4_Init+0xf0>)
 800661c:	f004 f894 	bl	800a748 <HAL_TIM_IC_Init>
 8006620:	4603      	mov	r3, r0
 8006622:	2b00      	cmp	r3, #0
 8006624:	d001      	beq.n	800662a <MX_TIM4_Init+0x8e>
  {
    Error_Handler();
 8006626:	f000 fb17 	bl	8006c58 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800662a:	2300      	movs	r3, #0
 800662c:	613b      	str	r3, [r7, #16]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800662e:	2300      	movs	r3, #0
 8006630:	617b      	str	r3, [r7, #20]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8006632:	f107 0310 	add.w	r3, r7, #16
 8006636:	4619      	mov	r1, r3
 8006638:	4814      	ldr	r0, [pc, #80]	; (800668c <MX_TIM4_Init+0xf0>)
 800663a:	f005 fc4b 	bl	800bed4 <HAL_TIMEx_MasterConfigSynchronization>
 800663e:	4603      	mov	r3, r0
 8006640:	2b00      	cmp	r3, #0
 8006642:	d001      	beq.n	8006648 <MX_TIM4_Init+0xac>
  {
    Error_Handler();
 8006644:	f000 fb08 	bl	8006c58 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_BOTHEDGE;
 8006648:	230a      	movs	r3, #10
 800664a:	603b      	str	r3, [r7, #0]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 800664c:	2301      	movs	r3, #1
 800664e:	607b      	str	r3, [r7, #4]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 8006650:	2300      	movs	r3, #0
 8006652:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICFilter = 0;
 8006654:	2300      	movs	r3, #0
 8006656:	60fb      	str	r3, [r7, #12]
  if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_3) != HAL_OK)
 8006658:	463b      	mov	r3, r7
 800665a:	2208      	movs	r2, #8
 800665c:	4619      	mov	r1, r3
 800665e:	480b      	ldr	r0, [pc, #44]	; (800668c <MX_TIM4_Init+0xf0>)
 8006660:	f004 fcb2 	bl	800afc8 <HAL_TIM_IC_ConfigChannel>
 8006664:	4603      	mov	r3, r0
 8006666:	2b00      	cmp	r3, #0
 8006668:	d001      	beq.n	800666e <MX_TIM4_Init+0xd2>
  {
    Error_Handler();
 800666a:	f000 faf5 	bl	8006c58 <Error_Handler>
  }
  if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_4) != HAL_OK)
 800666e:	463b      	mov	r3, r7
 8006670:	220c      	movs	r2, #12
 8006672:	4619      	mov	r1, r3
 8006674:	4805      	ldr	r0, [pc, #20]	; (800668c <MX_TIM4_Init+0xf0>)
 8006676:	f004 fca7 	bl	800afc8 <HAL_TIM_IC_ConfigChannel>
 800667a:	4603      	mov	r3, r0
 800667c:	2b00      	cmp	r3, #0
 800667e:	d001      	beq.n	8006684 <MX_TIM4_Init+0xe8>
  {
    Error_Handler();
 8006680:	f000 faea 	bl	8006c58 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 8006684:	bf00      	nop
 8006686:	3728      	adds	r7, #40	; 0x28
 8006688:	46bd      	mov	sp, r7
 800668a:	bd80      	pop	{r7, pc}
 800668c:	20000980 	.word	0x20000980
 8006690:	40000800 	.word	0x40000800

08006694 <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 8006694:	b580      	push	{r7, lr}
 8006696:	b086      	sub	sp, #24
 8006698:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800669a:	f107 0308 	add.w	r3, r7, #8
 800669e:	2200      	movs	r2, #0
 80066a0:	601a      	str	r2, [r3, #0]
 80066a2:	605a      	str	r2, [r3, #4]
 80066a4:	609a      	str	r2, [r3, #8]
 80066a6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80066a8:	463b      	mov	r3, r7
 80066aa:	2200      	movs	r2, #0
 80066ac:	601a      	str	r2, [r3, #0]
 80066ae:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 80066b0:	4b1d      	ldr	r3, [pc, #116]	; (8006728 <MX_TIM5_Init+0x94>)
 80066b2:	4a1e      	ldr	r2, [pc, #120]	; (800672c <MX_TIM5_Init+0x98>)
 80066b4:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 45000-1;
 80066b6:	4b1c      	ldr	r3, [pc, #112]	; (8006728 <MX_TIM5_Init+0x94>)
 80066b8:	f64a 72c7 	movw	r2, #44999	; 0xafc7
 80066bc:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 80066be:	4b1a      	ldr	r3, [pc, #104]	; (8006728 <MX_TIM5_Init+0x94>)
 80066c0:	2200      	movs	r2, #0
 80066c2:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 80066c4:	4b18      	ldr	r3, [pc, #96]	; (8006728 <MX_TIM5_Init+0x94>)
 80066c6:	f04f 32ff 	mov.w	r2, #4294967295
 80066ca:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80066cc:	4b16      	ldr	r3, [pc, #88]	; (8006728 <MX_TIM5_Init+0x94>)
 80066ce:	2200      	movs	r2, #0
 80066d0:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80066d2:	4b15      	ldr	r3, [pc, #84]	; (8006728 <MX_TIM5_Init+0x94>)
 80066d4:	2280      	movs	r2, #128	; 0x80
 80066d6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 80066d8:	4813      	ldr	r0, [pc, #76]	; (8006728 <MX_TIM5_Init+0x94>)
 80066da:	f003 fe5b 	bl	800a394 <HAL_TIM_Base_Init>
 80066de:	4603      	mov	r3, r0
 80066e0:	2b00      	cmp	r3, #0
 80066e2:	d001      	beq.n	80066e8 <MX_TIM5_Init+0x54>
  {
    Error_Handler();
 80066e4:	f000 fab8 	bl	8006c58 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80066e8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80066ec:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 80066ee:	f107 0308 	add.w	r3, r7, #8
 80066f2:	4619      	mov	r1, r3
 80066f4:	480c      	ldr	r0, [pc, #48]	; (8006728 <MX_TIM5_Init+0x94>)
 80066f6:	f004 fdc5 	bl	800b284 <HAL_TIM_ConfigClockSource>
 80066fa:	4603      	mov	r3, r0
 80066fc:	2b00      	cmp	r3, #0
 80066fe:	d001      	beq.n	8006704 <MX_TIM5_Init+0x70>
  {
    Error_Handler();
 8006700:	f000 faaa 	bl	8006c58 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8006704:	2300      	movs	r3, #0
 8006706:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8006708:	2300      	movs	r3, #0
 800670a:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 800670c:	463b      	mov	r3, r7
 800670e:	4619      	mov	r1, r3
 8006710:	4805      	ldr	r0, [pc, #20]	; (8006728 <MX_TIM5_Init+0x94>)
 8006712:	f005 fbdf 	bl	800bed4 <HAL_TIMEx_MasterConfigSynchronization>
 8006716:	4603      	mov	r3, r0
 8006718:	2b00      	cmp	r3, #0
 800671a:	d001      	beq.n	8006720 <MX_TIM5_Init+0x8c>
  {
    Error_Handler();
 800671c:	f000 fa9c 	bl	8006c58 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 8006720:	bf00      	nop
 8006722:	3718      	adds	r7, #24
 8006724:	46bd      	mov	sp, r7
 8006726:	bd80      	pop	{r7, pc}
 8006728:	200009c8 	.word	0x200009c8
 800672c:	40000c00 	.word	0x40000c00

08006730 <MX_TIM8_Init>:
  * @brief TIM8 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM8_Init(void)
{
 8006730:	b580      	push	{r7, lr}
 8006732:	b08c      	sub	sp, #48	; 0x30
 8006734:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM8_Init 0 */

  /* USER CODE END TIM8_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8006736:	f107 030c 	add.w	r3, r7, #12
 800673a:	2224      	movs	r2, #36	; 0x24
 800673c:	2100      	movs	r1, #0
 800673e:	4618      	mov	r0, r3
 8006740:	f006 fdee 	bl	800d320 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8006744:	1d3b      	adds	r3, r7, #4
 8006746:	2200      	movs	r2, #0
 8006748:	601a      	str	r2, [r3, #0]
 800674a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM8_Init 1 */

  /* USER CODE END TIM8_Init 1 */
  htim8.Instance = TIM8;
 800674c:	4b22      	ldr	r3, [pc, #136]	; (80067d8 <MX_TIM8_Init+0xa8>)
 800674e:	4a23      	ldr	r2, [pc, #140]	; (80067dc <MX_TIM8_Init+0xac>)
 8006750:	601a      	str	r2, [r3, #0]
  htim8.Init.Prescaler = 0;
 8006752:	4b21      	ldr	r3, [pc, #132]	; (80067d8 <MX_TIM8_Init+0xa8>)
 8006754:	2200      	movs	r2, #0
 8006756:	605a      	str	r2, [r3, #4]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8006758:	4b1f      	ldr	r3, [pc, #124]	; (80067d8 <MX_TIM8_Init+0xa8>)
 800675a:	2200      	movs	r2, #0
 800675c:	609a      	str	r2, [r3, #8]
  htim8.Init.Period = 65535;
 800675e:	4b1e      	ldr	r3, [pc, #120]	; (80067d8 <MX_TIM8_Init+0xa8>)
 8006760:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8006764:	60da      	str	r2, [r3, #12]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8006766:	4b1c      	ldr	r3, [pc, #112]	; (80067d8 <MX_TIM8_Init+0xa8>)
 8006768:	2200      	movs	r2, #0
 800676a:	611a      	str	r2, [r3, #16]
  htim8.Init.RepetitionCounter = 0;
 800676c:	4b1a      	ldr	r3, [pc, #104]	; (80067d8 <MX_TIM8_Init+0xa8>)
 800676e:	2200      	movs	r2, #0
 8006770:	615a      	str	r2, [r3, #20]
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8006772:	4b19      	ldr	r3, [pc, #100]	; (80067d8 <MX_TIM8_Init+0xa8>)
 8006774:	2280      	movs	r2, #128	; 0x80
 8006776:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 8006778:	2303      	movs	r3, #3
 800677a:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 800677c:	2300      	movs	r3, #0
 800677e:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8006780:	2301      	movs	r3, #1
 8006782:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8006784:	2300      	movs	r3, #0
 8006786:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 12;
 8006788:	230c      	movs	r3, #12
 800678a:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 800678c:	2300      	movs	r3, #0
 800678e:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8006790:	2301      	movs	r3, #1
 8006792:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8006794:	2300      	movs	r3, #0
 8006796:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 12;
 8006798:	230c      	movs	r3, #12
 800679a:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim8, &sConfig) != HAL_OK)
 800679c:	f107 030c 	add.w	r3, r7, #12
 80067a0:	4619      	mov	r1, r3
 80067a2:	480d      	ldr	r0, [pc, #52]	; (80067d8 <MX_TIM8_Init+0xa8>)
 80067a4:	f004 f9d4 	bl	800ab50 <HAL_TIM_Encoder_Init>
 80067a8:	4603      	mov	r3, r0
 80067aa:	2b00      	cmp	r3, #0
 80067ac:	d001      	beq.n	80067b2 <MX_TIM8_Init+0x82>
  {
    Error_Handler();
 80067ae:	f000 fa53 	bl	8006c58 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80067b2:	2300      	movs	r3, #0
 80067b4:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80067b6:	2300      	movs	r3, #0
 80067b8:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 80067ba:	1d3b      	adds	r3, r7, #4
 80067bc:	4619      	mov	r1, r3
 80067be:	4806      	ldr	r0, [pc, #24]	; (80067d8 <MX_TIM8_Init+0xa8>)
 80067c0:	f005 fb88 	bl	800bed4 <HAL_TIMEx_MasterConfigSynchronization>
 80067c4:	4603      	mov	r3, r0
 80067c6:	2b00      	cmp	r3, #0
 80067c8:	d001      	beq.n	80067ce <MX_TIM8_Init+0x9e>
  {
    Error_Handler();
 80067ca:	f000 fa45 	bl	8006c58 <Error_Handler>
  }
  /* USER CODE BEGIN TIM8_Init 2 */

  /* USER CODE END TIM8_Init 2 */

}
 80067ce:	bf00      	nop
 80067d0:	3730      	adds	r7, #48	; 0x30
 80067d2:	46bd      	mov	sp, r7
 80067d4:	bd80      	pop	{r7, pc}
 80067d6:	bf00      	nop
 80067d8:	20000a10 	.word	0x20000a10
 80067dc:	40010400 	.word	0x40010400

080067e0 <MX_TIM13_Init>:
  * @brief TIM13 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM13_Init(void)
{
 80067e0:	b580      	push	{r7, lr}
 80067e2:	af00      	add	r7, sp, #0
  /* USER CODE END TIM13_Init 0 */

  /* USER CODE BEGIN TIM13_Init 1 */

  /* USER CODE END TIM13_Init 1 */
  htim13.Instance = TIM13;
 80067e4:	4b0e      	ldr	r3, [pc, #56]	; (8006820 <MX_TIM13_Init+0x40>)
 80067e6:	4a0f      	ldr	r2, [pc, #60]	; (8006824 <MX_TIM13_Init+0x44>)
 80067e8:	601a      	str	r2, [r3, #0]
  htim13.Init.Prescaler = 45000-1;
 80067ea:	4b0d      	ldr	r3, [pc, #52]	; (8006820 <MX_TIM13_Init+0x40>)
 80067ec:	f64a 72c7 	movw	r2, #44999	; 0xafc7
 80067f0:	605a      	str	r2, [r3, #4]
  htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 80067f2:	4b0b      	ldr	r3, [pc, #44]	; (8006820 <MX_TIM13_Init+0x40>)
 80067f4:	2200      	movs	r2, #0
 80067f6:	609a      	str	r2, [r3, #8]
  htim13.Init.Period = 65535;
 80067f8:	4b09      	ldr	r3, [pc, #36]	; (8006820 <MX_TIM13_Init+0x40>)
 80067fa:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80067fe:	60da      	str	r2, [r3, #12]
  htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8006800:	4b07      	ldr	r3, [pc, #28]	; (8006820 <MX_TIM13_Init+0x40>)
 8006802:	2200      	movs	r2, #0
 8006804:	611a      	str	r2, [r3, #16]
  htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8006806:	4b06      	ldr	r3, [pc, #24]	; (8006820 <MX_TIM13_Init+0x40>)
 8006808:	2280      	movs	r2, #128	; 0x80
 800680a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 800680c:	4804      	ldr	r0, [pc, #16]	; (8006820 <MX_TIM13_Init+0x40>)
 800680e:	f003 fdc1 	bl	800a394 <HAL_TIM_Base_Init>
 8006812:	4603      	mov	r3, r0
 8006814:	2b00      	cmp	r3, #0
 8006816:	d001      	beq.n	800681c <MX_TIM13_Init+0x3c>
  {
    Error_Handler();
 8006818:	f000 fa1e 	bl	8006c58 <Error_Handler>
  }
  /* USER CODE BEGIN TIM13_Init 2 */

  /* USER CODE END TIM13_Init 2 */

}
 800681c:	bf00      	nop
 800681e:	bd80      	pop	{r7, pc}
 8006820:	20000a58 	.word	0x20000a58
 8006824:	40001c00 	.word	0x40001c00

08006828 <MX_TIM14_Init>:
  * @brief TIM14 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM14_Init(void)
{
 8006828:	b580      	push	{r7, lr}
 800682a:	af00      	add	r7, sp, #0
  /* USER CODE END TIM14_Init 0 */

  /* USER CODE BEGIN TIM14_Init 1 */

  /* USER CODE END TIM14_Init 1 */
  htim14.Instance = TIM14;
 800682c:	4b0e      	ldr	r3, [pc, #56]	; (8006868 <MX_TIM14_Init+0x40>)
 800682e:	4a0f      	ldr	r2, [pc, #60]	; (800686c <MX_TIM14_Init+0x44>)
 8006830:	601a      	str	r2, [r3, #0]
  htim14.Init.Prescaler = 0;
 8006832:	4b0d      	ldr	r3, [pc, #52]	; (8006868 <MX_TIM14_Init+0x40>)
 8006834:	2200      	movs	r2, #0
 8006836:	605a      	str	r2, [r3, #4]
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8006838:	4b0b      	ldr	r3, [pc, #44]	; (8006868 <MX_TIM14_Init+0x40>)
 800683a:	2200      	movs	r2, #0
 800683c:	609a      	str	r2, [r3, #8]
  htim14.Init.Period = 1000;
 800683e:	4b0a      	ldr	r3, [pc, #40]	; (8006868 <MX_TIM14_Init+0x40>)
 8006840:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8006844:	60da      	str	r2, [r3, #12]
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8006846:	4b08      	ldr	r3, [pc, #32]	; (8006868 <MX_TIM14_Init+0x40>)
 8006848:	2200      	movs	r2, #0
 800684a:	611a      	str	r2, [r3, #16]
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800684c:	4b06      	ldr	r3, [pc, #24]	; (8006868 <MX_TIM14_Init+0x40>)
 800684e:	2280      	movs	r2, #128	; 0x80
 8006850:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8006852:	4805      	ldr	r0, [pc, #20]	; (8006868 <MX_TIM14_Init+0x40>)
 8006854:	f003 fd9e 	bl	800a394 <HAL_TIM_Base_Init>
 8006858:	4603      	mov	r3, r0
 800685a:	2b00      	cmp	r3, #0
 800685c:	d001      	beq.n	8006862 <MX_TIM14_Init+0x3a>
  {
    Error_Handler();
 800685e:	f000 f9fb 	bl	8006c58 <Error_Handler>
  }
  /* USER CODE BEGIN TIM14_Init 2 */

  /* USER CODE END TIM14_Init 2 */

}
 8006862:	bf00      	nop
 8006864:	bd80      	pop	{r7, pc}
 8006866:	bf00      	nop
 8006868:	20000aa0 	.word	0x20000aa0
 800686c:	40002000 	.word	0x40002000

08006870 <MX_UART5_Init>:
  * @brief UART5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART5_Init(void)
{
 8006870:	b580      	push	{r7, lr}
 8006872:	af00      	add	r7, sp, #0
  /* USER CODE END UART5_Init 0 */

  /* USER CODE BEGIN UART5_Init 1 */

  /* USER CODE END UART5_Init 1 */
  huart5.Instance = UART5;
 8006874:	4b11      	ldr	r3, [pc, #68]	; (80068bc <MX_UART5_Init+0x4c>)
 8006876:	4a12      	ldr	r2, [pc, #72]	; (80068c0 <MX_UART5_Init+0x50>)
 8006878:	601a      	str	r2, [r3, #0]
  huart5.Init.BaudRate = 460800;
 800687a:	4b10      	ldr	r3, [pc, #64]	; (80068bc <MX_UART5_Init+0x4c>)
 800687c:	f44f 22e1 	mov.w	r2, #460800	; 0x70800
 8006880:	605a      	str	r2, [r3, #4]
  huart5.Init.WordLength = UART_WORDLENGTH_8B;
 8006882:	4b0e      	ldr	r3, [pc, #56]	; (80068bc <MX_UART5_Init+0x4c>)
 8006884:	2200      	movs	r2, #0
 8006886:	609a      	str	r2, [r3, #8]
  huart5.Init.StopBits = UART_STOPBITS_1;
 8006888:	4b0c      	ldr	r3, [pc, #48]	; (80068bc <MX_UART5_Init+0x4c>)
 800688a:	2200      	movs	r2, #0
 800688c:	60da      	str	r2, [r3, #12]
  huart5.Init.Parity = UART_PARITY_NONE;
 800688e:	4b0b      	ldr	r3, [pc, #44]	; (80068bc <MX_UART5_Init+0x4c>)
 8006890:	2200      	movs	r2, #0
 8006892:	611a      	str	r2, [r3, #16]
  huart5.Init.Mode = UART_MODE_TX_RX;
 8006894:	4b09      	ldr	r3, [pc, #36]	; (80068bc <MX_UART5_Init+0x4c>)
 8006896:	220c      	movs	r2, #12
 8006898:	615a      	str	r2, [r3, #20]
  huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800689a:	4b08      	ldr	r3, [pc, #32]	; (80068bc <MX_UART5_Init+0x4c>)
 800689c:	2200      	movs	r2, #0
 800689e:	619a      	str	r2, [r3, #24]
  huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 80068a0:	4b06      	ldr	r3, [pc, #24]	; (80068bc <MX_UART5_Init+0x4c>)
 80068a2:	2200      	movs	r2, #0
 80068a4:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart5) != HAL_OK)
 80068a6:	4805      	ldr	r0, [pc, #20]	; (80068bc <MX_UART5_Init+0x4c>)
 80068a8:	f005 fbf6 	bl	800c098 <HAL_UART_Init>
 80068ac:	4603      	mov	r3, r0
 80068ae:	2b00      	cmp	r3, #0
 80068b0:	d001      	beq.n	80068b6 <MX_UART5_Init+0x46>
  {
    Error_Handler();
 80068b2:	f000 f9d1 	bl	8006c58 <Error_Handler>
  }
  /* USER CODE BEGIN UART5_Init 2 */

  /* USER CODE END UART5_Init 2 */

}
 80068b6:	bf00      	nop
 80068b8:	bd80      	pop	{r7, pc}
 80068ba:	bf00      	nop
 80068bc:	20000b48 	.word	0x20000b48
 80068c0:	40005000 	.word	0x40005000

080068c4 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80068c4:	b580      	push	{r7, lr}
 80068c6:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80068c8:	4b11      	ldr	r3, [pc, #68]	; (8006910 <MX_USART1_UART_Init+0x4c>)
 80068ca:	4a12      	ldr	r2, [pc, #72]	; (8006914 <MX_USART1_UART_Init+0x50>)
 80068cc:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 80068ce:	4b10      	ldr	r3, [pc, #64]	; (8006910 <MX_USART1_UART_Init+0x4c>)
 80068d0:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80068d4:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80068d6:	4b0e      	ldr	r3, [pc, #56]	; (8006910 <MX_USART1_UART_Init+0x4c>)
 80068d8:	2200      	movs	r2, #0
 80068da:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80068dc:	4b0c      	ldr	r3, [pc, #48]	; (8006910 <MX_USART1_UART_Init+0x4c>)
 80068de:	2200      	movs	r2, #0
 80068e0:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80068e2:	4b0b      	ldr	r3, [pc, #44]	; (8006910 <MX_USART1_UART_Init+0x4c>)
 80068e4:	2200      	movs	r2, #0
 80068e6:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80068e8:	4b09      	ldr	r3, [pc, #36]	; (8006910 <MX_USART1_UART_Init+0x4c>)
 80068ea:	220c      	movs	r2, #12
 80068ec:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80068ee:	4b08      	ldr	r3, [pc, #32]	; (8006910 <MX_USART1_UART_Init+0x4c>)
 80068f0:	2200      	movs	r2, #0
 80068f2:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80068f4:	4b06      	ldr	r3, [pc, #24]	; (8006910 <MX_USART1_UART_Init+0x4c>)
 80068f6:	2200      	movs	r2, #0
 80068f8:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80068fa:	4805      	ldr	r0, [pc, #20]	; (8006910 <MX_USART1_UART_Init+0x4c>)
 80068fc:	f005 fbcc 	bl	800c098 <HAL_UART_Init>
 8006900:	4603      	mov	r3, r0
 8006902:	2b00      	cmp	r3, #0
 8006904:	d001      	beq.n	800690a <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8006906:	f000 f9a7 	bl	8006c58 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800690a:	bf00      	nop
 800690c:	bd80      	pop	{r7, pc}
 800690e:	bf00      	nop
 8006910:	20000b8c 	.word	0x20000b8c
 8006914:	40011000 	.word	0x40011000

08006918 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8006918:	b580      	push	{r7, lr}
 800691a:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 800691c:	4b11      	ldr	r3, [pc, #68]	; (8006964 <MX_USART2_UART_Init+0x4c>)
 800691e:	4a12      	ldr	r2, [pc, #72]	; (8006968 <MX_USART2_UART_Init+0x50>)
 8006920:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8006922:	4b10      	ldr	r3, [pc, #64]	; (8006964 <MX_USART2_UART_Init+0x4c>)
 8006924:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8006928:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800692a:	4b0e      	ldr	r3, [pc, #56]	; (8006964 <MX_USART2_UART_Init+0x4c>)
 800692c:	2200      	movs	r2, #0
 800692e:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8006930:	4b0c      	ldr	r3, [pc, #48]	; (8006964 <MX_USART2_UART_Init+0x4c>)
 8006932:	2200      	movs	r2, #0
 8006934:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8006936:	4b0b      	ldr	r3, [pc, #44]	; (8006964 <MX_USART2_UART_Init+0x4c>)
 8006938:	2200      	movs	r2, #0
 800693a:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 800693c:	4b09      	ldr	r3, [pc, #36]	; (8006964 <MX_USART2_UART_Init+0x4c>)
 800693e:	220c      	movs	r2, #12
 8006940:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8006942:	4b08      	ldr	r3, [pc, #32]	; (8006964 <MX_USART2_UART_Init+0x4c>)
 8006944:	2200      	movs	r2, #0
 8006946:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8006948:	4b06      	ldr	r3, [pc, #24]	; (8006964 <MX_USART2_UART_Init+0x4c>)
 800694a:	2200      	movs	r2, #0
 800694c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800694e:	4805      	ldr	r0, [pc, #20]	; (8006964 <MX_USART2_UART_Init+0x4c>)
 8006950:	f005 fba2 	bl	800c098 <HAL_UART_Init>
 8006954:	4603      	mov	r3, r0
 8006956:	2b00      	cmp	r3, #0
 8006958:	d001      	beq.n	800695e <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 800695a:	f000 f97d 	bl	8006c58 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800695e:	bf00      	nop
 8006960:	bd80      	pop	{r7, pc}
 8006962:	bf00      	nop
 8006964:	20000bd0 	.word	0x20000bd0
 8006968:	40004400 	.word	0x40004400

0800696c <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 800696c:	b580      	push	{r7, lr}
 800696e:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8006970:	4b11      	ldr	r3, [pc, #68]	; (80069b8 <MX_USART3_UART_Init+0x4c>)
 8006972:	4a12      	ldr	r2, [pc, #72]	; (80069bc <MX_USART3_UART_Init+0x50>)
 8006974:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 8006976:	4b10      	ldr	r3, [pc, #64]	; (80069b8 <MX_USART3_UART_Init+0x4c>)
 8006978:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 800697c:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 800697e:	4b0e      	ldr	r3, [pc, #56]	; (80069b8 <MX_USART3_UART_Init+0x4c>)
 8006980:	2200      	movs	r2, #0
 8006982:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8006984:	4b0c      	ldr	r3, [pc, #48]	; (80069b8 <MX_USART3_UART_Init+0x4c>)
 8006986:	2200      	movs	r2, #0
 8006988:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 800698a:	4b0b      	ldr	r3, [pc, #44]	; (80069b8 <MX_USART3_UART_Init+0x4c>)
 800698c:	2200      	movs	r2, #0
 800698e:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8006990:	4b09      	ldr	r3, [pc, #36]	; (80069b8 <MX_USART3_UART_Init+0x4c>)
 8006992:	220c      	movs	r2, #12
 8006994:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8006996:	4b08      	ldr	r3, [pc, #32]	; (80069b8 <MX_USART3_UART_Init+0x4c>)
 8006998:	2200      	movs	r2, #0
 800699a:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 800699c:	4b06      	ldr	r3, [pc, #24]	; (80069b8 <MX_USART3_UART_Init+0x4c>)
 800699e:	2200      	movs	r2, #0
 80069a0:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 80069a2:	4805      	ldr	r0, [pc, #20]	; (80069b8 <MX_USART3_UART_Init+0x4c>)
 80069a4:	f005 fb78 	bl	800c098 <HAL_UART_Init>
 80069a8:	4603      	mov	r3, r0
 80069aa:	2b00      	cmp	r3, #0
 80069ac:	d001      	beq.n	80069b2 <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 80069ae:	f000 f953 	bl	8006c58 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 80069b2:	bf00      	nop
 80069b4:	bd80      	pop	{r7, pc}
 80069b6:	bf00      	nop
 80069b8:	20000c14 	.word	0x20000c14
 80069bc:	40004800 	.word	0x40004800

080069c0 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80069c0:	b580      	push	{r7, lr}
 80069c2:	b082      	sub	sp, #8
 80069c4:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80069c6:	2300      	movs	r3, #0
 80069c8:	607b      	str	r3, [r7, #4]
 80069ca:	4b0c      	ldr	r3, [pc, #48]	; (80069fc <MX_DMA_Init+0x3c>)
 80069cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80069ce:	4a0b      	ldr	r2, [pc, #44]	; (80069fc <MX_DMA_Init+0x3c>)
 80069d0:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80069d4:	6313      	str	r3, [r2, #48]	; 0x30
 80069d6:	4b09      	ldr	r3, [pc, #36]	; (80069fc <MX_DMA_Init+0x3c>)
 80069d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80069da:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80069de:	607b      	str	r3, [r7, #4]
 80069e0:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream7_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream7_IRQn, 0, 0);
 80069e2:	2200      	movs	r2, #0
 80069e4:	2100      	movs	r1, #0
 80069e6:	202f      	movs	r0, #47	; 0x2f
 80069e8:	f001 fe4f 	bl	800868a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 80069ec:	202f      	movs	r0, #47	; 0x2f
 80069ee:	f001 fe68 	bl	80086c2 <HAL_NVIC_EnableIRQ>

}
 80069f2:	bf00      	nop
 80069f4:	3708      	adds	r7, #8
 80069f6:	46bd      	mov	sp, r7
 80069f8:	bd80      	pop	{r7, pc}
 80069fa:	bf00      	nop
 80069fc:	40023800 	.word	0x40023800

08006a00 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8006a00:	b580      	push	{r7, lr}
 8006a02:	b08a      	sub	sp, #40	; 0x28
 8006a04:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8006a06:	f107 0314 	add.w	r3, r7, #20
 8006a0a:	2200      	movs	r2, #0
 8006a0c:	601a      	str	r2, [r3, #0]
 8006a0e:	605a      	str	r2, [r3, #4]
 8006a10:	609a      	str	r2, [r3, #8]
 8006a12:	60da      	str	r2, [r3, #12]
 8006a14:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8006a16:	2300      	movs	r3, #0
 8006a18:	613b      	str	r3, [r7, #16]
 8006a1a:	4b64      	ldr	r3, [pc, #400]	; (8006bac <MX_GPIO_Init+0x1ac>)
 8006a1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006a1e:	4a63      	ldr	r2, [pc, #396]	; (8006bac <MX_GPIO_Init+0x1ac>)
 8006a20:	f043 0304 	orr.w	r3, r3, #4
 8006a24:	6313      	str	r3, [r2, #48]	; 0x30
 8006a26:	4b61      	ldr	r3, [pc, #388]	; (8006bac <MX_GPIO_Init+0x1ac>)
 8006a28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006a2a:	f003 0304 	and.w	r3, r3, #4
 8006a2e:	613b      	str	r3, [r7, #16]
 8006a30:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8006a32:	2300      	movs	r3, #0
 8006a34:	60fb      	str	r3, [r7, #12]
 8006a36:	4b5d      	ldr	r3, [pc, #372]	; (8006bac <MX_GPIO_Init+0x1ac>)
 8006a38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006a3a:	4a5c      	ldr	r2, [pc, #368]	; (8006bac <MX_GPIO_Init+0x1ac>)
 8006a3c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006a40:	6313      	str	r3, [r2, #48]	; 0x30
 8006a42:	4b5a      	ldr	r3, [pc, #360]	; (8006bac <MX_GPIO_Init+0x1ac>)
 8006a44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006a46:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006a4a:	60fb      	str	r3, [r7, #12]
 8006a4c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8006a4e:	2300      	movs	r3, #0
 8006a50:	60bb      	str	r3, [r7, #8]
 8006a52:	4b56      	ldr	r3, [pc, #344]	; (8006bac <MX_GPIO_Init+0x1ac>)
 8006a54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006a56:	4a55      	ldr	r2, [pc, #340]	; (8006bac <MX_GPIO_Init+0x1ac>)
 8006a58:	f043 0301 	orr.w	r3, r3, #1
 8006a5c:	6313      	str	r3, [r2, #48]	; 0x30
 8006a5e:	4b53      	ldr	r3, [pc, #332]	; (8006bac <MX_GPIO_Init+0x1ac>)
 8006a60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006a62:	f003 0301 	and.w	r3, r3, #1
 8006a66:	60bb      	str	r3, [r7, #8]
 8006a68:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8006a6a:	2300      	movs	r3, #0
 8006a6c:	607b      	str	r3, [r7, #4]
 8006a6e:	4b4f      	ldr	r3, [pc, #316]	; (8006bac <MX_GPIO_Init+0x1ac>)
 8006a70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006a72:	4a4e      	ldr	r2, [pc, #312]	; (8006bac <MX_GPIO_Init+0x1ac>)
 8006a74:	f043 0302 	orr.w	r3, r3, #2
 8006a78:	6313      	str	r3, [r2, #48]	; 0x30
 8006a7a:	4b4c      	ldr	r3, [pc, #304]	; (8006bac <MX_GPIO_Init+0x1ac>)
 8006a7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006a7e:	f003 0302 	and.w	r3, r3, #2
 8006a82:	607b      	str	r3, [r7, #4]
 8006a84:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8006a86:	2300      	movs	r3, #0
 8006a88:	603b      	str	r3, [r7, #0]
 8006a8a:	4b48      	ldr	r3, [pc, #288]	; (8006bac <MX_GPIO_Init+0x1ac>)
 8006a8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006a8e:	4a47      	ldr	r2, [pc, #284]	; (8006bac <MX_GPIO_Init+0x1ac>)
 8006a90:	f043 0308 	orr.w	r3, r3, #8
 8006a94:	6313      	str	r3, [r2, #48]	; 0x30
 8006a96:	4b45      	ldr	r3, [pc, #276]	; (8006bac <MX_GPIO_Init+0x1ac>)
 8006a98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006a9a:	f003 0308 	and.w	r3, r3, #8
 8006a9e:	603b      	str	r3, [r7, #0]
 8006aa0:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TEL_GPIO4_GPIO_Port, TEL_GPIO4_Pin, GPIO_PIN_RESET);
 8006aa2:	2200      	movs	r2, #0
 8006aa4:	2102      	movs	r1, #2
 8006aa6:	4842      	ldr	r0, [pc, #264]	; (8006bb0 <MX_GPIO_Init+0x1b0>)
 8006aa8:	f002 fdf0 	bl	800968c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, TEL_GPIO7_Pin|On_Board_LED_Pin, GPIO_PIN_RESET);
 8006aac:	2200      	movs	r2, #0
 8006aae:	2122      	movs	r1, #34	; 0x22
 8006ab0:	4840      	ldr	r0, [pc, #256]	; (8006bb4 <MX_GPIO_Init+0x1b4>)
 8006ab2:	f002 fdeb 	bl	800968c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED4_Pin|LED1_Pin|LED2_Pin|LED3_Pin
 8006ab6:	2200      	movs	r2, #0
 8006ab8:	f24e 0142 	movw	r1, #57410	; 0xe042
 8006abc:	483e      	ldr	r0, [pc, #248]	; (8006bb8 <MX_GPIO_Init+0x1b8>)
 8006abe:	f002 fde5 	bl	800968c <HAL_GPIO_WritePin>
                          |Motor_EN_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin : On_Board_Button_Pin */
  GPIO_InitStruct.Pin = On_Board_Button_Pin;
 8006ac2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8006ac6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8006ac8:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8006acc:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006ace:	2300      	movs	r3, #0
 8006ad0:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(On_Board_Button_GPIO_Port, &GPIO_InitStruct);
 8006ad2:	f107 0314 	add.w	r3, r7, #20
 8006ad6:	4619      	mov	r1, r3
 8006ad8:	4835      	ldr	r0, [pc, #212]	; (8006bb0 <MX_GPIO_Init+0x1b0>)
 8006ada:	f002 fc2b 	bl	8009334 <HAL_GPIO_Init>

  /*Configure GPIO pin : TEL_GPIO4_Pin */
  GPIO_InitStruct.Pin = TEL_GPIO4_Pin;
 8006ade:	2302      	movs	r3, #2
 8006ae0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8006ae2:	2301      	movs	r3, #1
 8006ae4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006ae6:	2300      	movs	r3, #0
 8006ae8:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006aea:	2300      	movs	r3, #0
 8006aec:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(TEL_GPIO4_GPIO_Port, &GPIO_InitStruct);
 8006aee:	f107 0314 	add.w	r3, r7, #20
 8006af2:	4619      	mov	r1, r3
 8006af4:	482e      	ldr	r0, [pc, #184]	; (8006bb0 <MX_GPIO_Init+0x1b0>)
 8006af6:	f002 fc1d 	bl	8009334 <HAL_GPIO_Init>

  /*Configure GPIO pins : TEL_GPIO7_Pin On_Board_LED_Pin */
  GPIO_InitStruct.Pin = TEL_GPIO7_Pin|On_Board_LED_Pin;
 8006afa:	2322      	movs	r3, #34	; 0x22
 8006afc:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8006afe:	2301      	movs	r3, #1
 8006b00:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006b02:	2300      	movs	r3, #0
 8006b04:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006b06:	2300      	movs	r3, #0
 8006b08:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8006b0a:	f107 0314 	add.w	r3, r7, #20
 8006b0e:	4619      	mov	r1, r3
 8006b10:	4828      	ldr	r0, [pc, #160]	; (8006bb4 <MX_GPIO_Init+0x1b4>)
 8006b12:	f002 fc0f 	bl	8009334 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED4_Pin LED1_Pin LED2_Pin LED3_Pin
                           Motor_EN_Pin */
  GPIO_InitStruct.Pin = LED4_Pin|LED1_Pin|LED2_Pin|LED3_Pin
 8006b16:	f24e 0342 	movw	r3, #57410	; 0xe042
 8006b1a:	617b      	str	r3, [r7, #20]
                          |Motor_EN_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8006b1c:	2301      	movs	r3, #1
 8006b1e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006b20:	2300      	movs	r3, #0
 8006b22:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006b24:	2300      	movs	r3, #0
 8006b26:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8006b28:	f107 0314 	add.w	r3, r7, #20
 8006b2c:	4619      	mov	r1, r3
 8006b2e:	4822      	ldr	r0, [pc, #136]	; (8006bb8 <MX_GPIO_Init+0x1b8>)
 8006b30:	f002 fc00 	bl	8009334 <HAL_GPIO_Init>

  /*Configure GPIO pins : SW2_Pin B2_Pin Motor_Feedback_Pin */
  GPIO_InitStruct.Pin = SW2_Pin|B2_Pin|Motor_Feedback_Pin;
 8006b34:	f44f 6394 	mov.w	r3, #1184	; 0x4a0
 8006b38:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8006b3a:	2300      	movs	r3, #0
 8006b3c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006b3e:	2300      	movs	r3, #0
 8006b40:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8006b42:	f107 0314 	add.w	r3, r7, #20
 8006b46:	4619      	mov	r1, r3
 8006b48:	481b      	ldr	r0, [pc, #108]	; (8006bb8 <MX_GPIO_Init+0x1b8>)
 8006b4a:	f002 fbf3 	bl	8009334 <HAL_GPIO_Init>

  /*Configure GPIO pin : SW1_Pin */
  GPIO_InitStruct.Pin = SW1_Pin;
 8006b4e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8006b52:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8006b54:	2300      	movs	r3, #0
 8006b56:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006b58:	2300      	movs	r3, #0
 8006b5a:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(SW1_GPIO_Port, &GPIO_InitStruct);
 8006b5c:	f107 0314 	add.w	r3, r7, #20
 8006b60:	4619      	mov	r1, r3
 8006b62:	4814      	ldr	r0, [pc, #80]	; (8006bb4 <MX_GPIO_Init+0x1b4>)
 8006b64:	f002 fbe6 	bl	8009334 <HAL_GPIO_Init>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8006b68:	2310      	movs	r3, #16
 8006b6a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8006b6c:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8006b70:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006b72:	2300      	movs	r3, #0
 8006b74:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8006b76:	f107 0314 	add.w	r3, r7, #20
 8006b7a:	4619      	mov	r1, r3
 8006b7c:	480e      	ldr	r0, [pc, #56]	; (8006bb8 <MX_GPIO_Init+0x1b8>)
 8006b7e:	f002 fbd9 	bl	8009334 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI4_IRQn, 0, 0);
 8006b82:	2200      	movs	r2, #0
 8006b84:	2100      	movs	r1, #0
 8006b86:	200a      	movs	r0, #10
 8006b88:	f001 fd7f 	bl	800868a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 8006b8c:	200a      	movs	r0, #10
 8006b8e:	f001 fd98 	bl	80086c2 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8006b92:	2200      	movs	r2, #0
 8006b94:	2100      	movs	r1, #0
 8006b96:	2028      	movs	r0, #40	; 0x28
 8006b98:	f001 fd77 	bl	800868a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8006b9c:	2028      	movs	r0, #40	; 0x28
 8006b9e:	f001 fd90 	bl	80086c2 <HAL_NVIC_EnableIRQ>

}
 8006ba2:	bf00      	nop
 8006ba4:	3728      	adds	r7, #40	; 0x28
 8006ba6:	46bd      	mov	sp, r7
 8006ba8:	bd80      	pop	{r7, pc}
 8006baa:	bf00      	nop
 8006bac:	40023800 	.word	0x40023800
 8006bb0:	40020800 	.word	0x40020800
 8006bb4:	40020000 	.word	0x40020000
 8006bb8:	40020400 	.word	0x40020400

08006bbc <HAL_GPIO_EXTI_Callback>:

/* USER CODE BEGIN 4 */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8006bbc:	b580      	push	{r7, lr}
 8006bbe:	b082      	sub	sp, #8
 8006bc0:	af00      	add	r7, sp, #0
 8006bc2:	4603      	mov	r3, r0
 8006bc4:	80fb      	strh	r3, [r7, #6]
	//ha meg lett nyomva a nucleon a kék gomb
	if(GPIO_Pin == On_Board_Button_Pin)B_NUCLEO_ISR(&huart1);
 8006bc6:	88fb      	ldrh	r3, [r7, #6]
 8006bc8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006bcc:	d102      	bne.n	8006bd4 <HAL_GPIO_EXTI_Callback+0x18>
 8006bce:	4806      	ldr	r0, [pc, #24]	; (8006be8 <HAL_GPIO_EXTI_Callback+0x2c>)
 8006bd0:	f7fa fbb6 	bl	8001340 <B_NUCLEO_ISR>
	if(GPIO_Pin == B1_Pin) B1_ISR(&huart1);
 8006bd4:	88fb      	ldrh	r3, [r7, #6]
 8006bd6:	2b10      	cmp	r3, #16
 8006bd8:	d102      	bne.n	8006be0 <HAL_GPIO_EXTI_Callback+0x24>
 8006bda:	4803      	ldr	r0, [pc, #12]	; (8006be8 <HAL_GPIO_EXTI_Callback+0x2c>)
 8006bdc:	f7fa fb3c 	bl	8001258 <B1_ISR>
}
 8006be0:	bf00      	nop
 8006be2:	3708      	adds	r7, #8
 8006be4:	46bd      	mov	sp, r7
 8006be6:	bd80      	pop	{r7, pc}
 8006be8:	20000b8c 	.word	0x20000b8c

08006bec <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8006bec:	b580      	push	{r7, lr}
 8006bee:	b082      	sub	sp, #8
 8006bf0:	af00      	add	r7, sp, #0
 8006bf2:	6078      	str	r0, [r7, #4]
	if(huart == &huart1)Uart_Receive_From_PC_ISR(&huart1);
 8006bf4:	687b      	ldr	r3, [r7, #4]
 8006bf6:	4a09      	ldr	r2, [pc, #36]	; (8006c1c <HAL_UART_RxCpltCallback+0x30>)
 8006bf8:	4293      	cmp	r3, r2
 8006bfa:	d103      	bne.n	8006c04 <HAL_UART_RxCpltCallback+0x18>
 8006bfc:	4807      	ldr	r0, [pc, #28]	; (8006c1c <HAL_UART_RxCpltCallback+0x30>)
 8006bfe:	f7fa fb07 	bl	8001210 <Uart_Receive_From_PC_ISR>
	else if(huart==&huart3)Uart_Receive_Thunderboard_ISR(&huart3, &huart1);
}
 8006c02:	e007      	b.n	8006c14 <HAL_UART_RxCpltCallback+0x28>
	else if(huart==&huart3)Uart_Receive_Thunderboard_ISR(&huart3, &huart1);
 8006c04:	687b      	ldr	r3, [r7, #4]
 8006c06:	4a06      	ldr	r2, [pc, #24]	; (8006c20 <HAL_UART_RxCpltCallback+0x34>)
 8006c08:	4293      	cmp	r3, r2
 8006c0a:	d103      	bne.n	8006c14 <HAL_UART_RxCpltCallback+0x28>
 8006c0c:	4903      	ldr	r1, [pc, #12]	; (8006c1c <HAL_UART_RxCpltCallback+0x30>)
 8006c0e:	4804      	ldr	r0, [pc, #16]	; (8006c20 <HAL_UART_RxCpltCallback+0x34>)
 8006c10:	f7fc ff3e 	bl	8003a90 <Uart_Receive_Thunderboard_ISR>
}
 8006c14:	bf00      	nop
 8006c16:	3708      	adds	r7, #8
 8006c18:	46bd      	mov	sp, r7
 8006c1a:	bd80      	pop	{r7, pc}
 8006c1c:	20000b8c 	.word	0x20000b8c
 8006c20:	20000c14 	.word	0x20000c14

08006c24 <Delay>:

void Delay(uint16_t ms)
{
 8006c24:	b480      	push	{r7}
 8006c26:	b083      	sub	sp, #12
 8006c28:	af00      	add	r7, sp, #0
 8006c2a:	4603      	mov	r3, r0
 8006c2c:	80fb      	strh	r3, [r7, #6]
	TIM13->CNT=0;
 8006c2e:	4b08      	ldr	r3, [pc, #32]	; (8006c50 <Delay+0x2c>)
 8006c30:	2200      	movs	r2, #0
 8006c32:	625a      	str	r2, [r3, #36]	; 0x24
	while(1)
	{
		if(__HAL_TIM_GET_COUNTER(&htim13)>ms)break;
 8006c34:	4b07      	ldr	r3, [pc, #28]	; (8006c54 <Delay+0x30>)
 8006c36:	681b      	ldr	r3, [r3, #0]
 8006c38:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006c3a:	88fb      	ldrh	r3, [r7, #6]
 8006c3c:	429a      	cmp	r2, r3
 8006c3e:	d800      	bhi.n	8006c42 <Delay+0x1e>
 8006c40:	e7f8      	b.n	8006c34 <Delay+0x10>
 8006c42:	bf00      	nop
	}

}
 8006c44:	bf00      	nop
 8006c46:	370c      	adds	r7, #12
 8006c48:	46bd      	mov	sp, r7
 8006c4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c4e:	4770      	bx	lr
 8006c50:	40001c00 	.word	0x40001c00
 8006c54:	20000a58 	.word	0x20000a58

08006c58 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8006c58:	b580      	push	{r7, lr}
 8006c5a:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 8006c5c:	b672      	cpsid	i
}
 8006c5e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  TIM3->CCR1=499;
 8006c60:	4b0f      	ldr	r3, [pc, #60]	; (8006ca0 <Error_Handler+0x48>)
 8006c62:	f240 12f3 	movw	r2, #499	; 0x1f3
 8006c66:	635a      	str	r2, [r3, #52]	; 0x34
  TIM3->CCR2=499;
 8006c68:	4b0d      	ldr	r3, [pc, #52]	; (8006ca0 <Error_Handler+0x48>)
 8006c6a:	f240 12f3 	movw	r2, #499	; 0x1f3
 8006c6e:	639a      	str	r2, [r3, #56]	; 0x38
  LED_B(1);
 8006c70:	2200      	movs	r2, #0
 8006c72:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8006c76:	480b      	ldr	r0, [pc, #44]	; (8006ca4 <Error_Handler+0x4c>)
 8006c78:	f002 fd08 	bl	800968c <HAL_GPIO_WritePin>
  LED_G(1);
 8006c7c:	2200      	movs	r2, #0
 8006c7e:	2102      	movs	r1, #2
 8006c80:	4808      	ldr	r0, [pc, #32]	; (8006ca4 <Error_Handler+0x4c>)
 8006c82:	f002 fd03 	bl	800968c <HAL_GPIO_WritePin>
  LED_R(1);
 8006c86:	2200      	movs	r2, #0
 8006c88:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8006c8c:	4805      	ldr	r0, [pc, #20]	; (8006ca4 <Error_Handler+0x4c>)
 8006c8e:	f002 fcfd 	bl	800968c <HAL_GPIO_WritePin>
  LED_Y(1);
 8006c92:	2200      	movs	r2, #0
 8006c94:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8006c98:	4802      	ldr	r0, [pc, #8]	; (8006ca4 <Error_Handler+0x4c>)
 8006c9a:	f002 fcf7 	bl	800968c <HAL_GPIO_WritePin>
  while (1)
 8006c9e:	e7fe      	b.n	8006c9e <Error_Handler+0x46>
 8006ca0:	40000400 	.word	0x40000400
 8006ca4:	40020400 	.word	0x40020400

08006ca8 <Remote_Control_Init>:
 8006ca8:	b580      	push	{r7, lr}
 8006caa:	b082      	sub	sp, #8
 8006cac:	af00      	add	r7, sp, #0
 8006cae:	6078      	str	r0, [r7, #4]
 8006cb0:	6039      	str	r1, [r7, #0]
 8006cb2:	4b0a      	ldr	r3, [pc, #40]	; (8006cdc <Remote_Control_Init+0x34>)
 8006cb4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8006cb8:	601a      	str	r2, [r3, #0]
 8006cba:	4b08      	ldr	r3, [pc, #32]	; (8006cdc <Remote_Control_Init+0x34>)
 8006cbc:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8006cc0:	605a      	str	r2, [r3, #4]
 8006cc2:	4b06      	ldr	r3, [pc, #24]	; (8006cdc <Remote_Control_Init+0x34>)
 8006cc4:	2200      	movs	r2, #0
 8006cc6:	609a      	str	r2, [r3, #8]
 8006cc8:	2303      	movs	r3, #3
 8006cca:	4a04      	ldr	r2, [pc, #16]	; (8006cdc <Remote_Control_Init+0x34>)
 8006ccc:	6839      	ldr	r1, [r7, #0]
 8006cce:	6878      	ldr	r0, [r7, #4]
 8006cd0:	f003 fd94 	bl	800a7fc <HAL_TIM_IC_Start_DMA>
 8006cd4:	bf00      	nop
 8006cd6:	3708      	adds	r7, #8
 8006cd8:	46bd      	mov	sp, r7
 8006cda:	bd80      	pop	{r7, pc}
 8006cdc:	20000c5c 	.word	0x20000c5c

08006ce0 <Remote_Control_Task>:
 8006ce0:	b580      	push	{r7, lr}
 8006ce2:	b084      	sub	sp, #16
 8006ce4:	af00      	add	r7, sp, #0
 8006ce6:	60f8      	str	r0, [r7, #12]
 8006ce8:	60b9      	str	r1, [r7, #8]
 8006cea:	607a      	str	r2, [r7, #4]
 8006cec:	603b      	str	r3, [r7, #0]
 8006cee:	4b50      	ldr	r3, [pc, #320]	; (8006e30 <Remote_Control_Task+0x150>)
 8006cf0:	681b      	ldr	r3, [r3, #0]
 8006cf2:	683a      	ldr	r2, [r7, #0]
 8006cf4:	429a      	cmp	r2, r3
 8006cf6:	f0c0 8096 	bcc.w	8006e26 <Remote_Control_Task+0x146>
 8006cfa:	683a      	ldr	r2, [r7, #0]
 8006cfc:	69bb      	ldr	r3, [r7, #24]
 8006cfe:	4413      	add	r3, r2
 8006d00:	4a4b      	ldr	r2, [pc, #300]	; (8006e30 <Remote_Control_Task+0x150>)
 8006d02:	6013      	str	r3, [r2, #0]
 8006d04:	201e      	movs	r0, #30
 8006d06:	f001 fcea 	bl	80086de <HAL_NVIC_DisableIRQ>
 8006d0a:	4b4a      	ldr	r3, [pc, #296]	; (8006e34 <Remote_Control_Task+0x154>)
 8006d0c:	685a      	ldr	r2, [r3, #4]
 8006d0e:	4b49      	ldr	r3, [pc, #292]	; (8006e34 <Remote_Control_Task+0x154>)
 8006d10:	681b      	ldr	r3, [r3, #0]
 8006d12:	1ad3      	subs	r3, r2, r3
 8006d14:	2b00      	cmp	r3, #0
 8006d16:	bfb8      	it	lt
 8006d18:	425b      	neglt	r3, r3
 8006d1a:	4a47      	ldr	r2, [pc, #284]	; (8006e38 <Remote_Control_Task+0x158>)
 8006d1c:	6013      	str	r3, [r2, #0]
 8006d1e:	4b45      	ldr	r3, [pc, #276]	; (8006e34 <Remote_Control_Task+0x154>)
 8006d20:	689a      	ldr	r2, [r3, #8]
 8006d22:	4b44      	ldr	r3, [pc, #272]	; (8006e34 <Remote_Control_Task+0x154>)
 8006d24:	685b      	ldr	r3, [r3, #4]
 8006d26:	1ad3      	subs	r3, r2, r3
 8006d28:	2b00      	cmp	r3, #0
 8006d2a:	bfb8      	it	lt
 8006d2c:	425b      	neglt	r3, r3
 8006d2e:	4a43      	ldr	r2, [pc, #268]	; (8006e3c <Remote_Control_Task+0x15c>)
 8006d30:	6013      	str	r3, [r2, #0]
 8006d32:	4b40      	ldr	r3, [pc, #256]	; (8006e34 <Remote_Control_Task+0x154>)
 8006d34:	681a      	ldr	r2, [r3, #0]
 8006d36:	4b3f      	ldr	r3, [pc, #252]	; (8006e34 <Remote_Control_Task+0x154>)
 8006d38:	689b      	ldr	r3, [r3, #8]
 8006d3a:	1ad3      	subs	r3, r2, r3
 8006d3c:	2b00      	cmp	r3, #0
 8006d3e:	bfb8      	it	lt
 8006d40:	425b      	neglt	r3, r3
 8006d42:	4a3f      	ldr	r2, [pc, #252]	; (8006e40 <Remote_Control_Task+0x160>)
 8006d44:	6013      	str	r3, [r2, #0]
 8006d46:	201e      	movs	r0, #30
 8006d48:	f001 fcbb 	bl	80086c2 <HAL_NVIC_EnableIRQ>
 8006d4c:	4b3a      	ldr	r3, [pc, #232]	; (8006e38 <Remote_Control_Task+0x158>)
 8006d4e:	681b      	ldr	r3, [r3, #0]
 8006d50:	f241 3288 	movw	r2, #5000	; 0x1388
 8006d54:	4293      	cmp	r3, r2
 8006d56:	dd06      	ble.n	8006d66 <Remote_Control_Task+0x86>
 8006d58:	4b37      	ldr	r3, [pc, #220]	; (8006e38 <Remote_Control_Task+0x158>)
 8006d5a:	681b      	ldr	r3, [r3, #0]
 8006d5c:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 8006d60:	33ff      	adds	r3, #255	; 0xff
 8006d62:	4a35      	ldr	r2, [pc, #212]	; (8006e38 <Remote_Control_Task+0x158>)
 8006d64:	6013      	str	r3, [r2, #0]
 8006d66:	4b35      	ldr	r3, [pc, #212]	; (8006e3c <Remote_Control_Task+0x15c>)
 8006d68:	681b      	ldr	r3, [r3, #0]
 8006d6a:	f241 3288 	movw	r2, #5000	; 0x1388
 8006d6e:	4293      	cmp	r3, r2
 8006d70:	dd06      	ble.n	8006d80 <Remote_Control_Task+0xa0>
 8006d72:	4b32      	ldr	r3, [pc, #200]	; (8006e3c <Remote_Control_Task+0x15c>)
 8006d74:	681b      	ldr	r3, [r3, #0]
 8006d76:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 8006d7a:	33ff      	adds	r3, #255	; 0xff
 8006d7c:	4a2f      	ldr	r2, [pc, #188]	; (8006e3c <Remote_Control_Task+0x15c>)
 8006d7e:	6013      	str	r3, [r2, #0]
 8006d80:	4b2f      	ldr	r3, [pc, #188]	; (8006e40 <Remote_Control_Task+0x160>)
 8006d82:	681b      	ldr	r3, [r3, #0]
 8006d84:	f241 3288 	movw	r2, #5000	; 0x1388
 8006d88:	4293      	cmp	r3, r2
 8006d8a:	dd06      	ble.n	8006d9a <Remote_Control_Task+0xba>
 8006d8c:	4b2c      	ldr	r3, [pc, #176]	; (8006e40 <Remote_Control_Task+0x160>)
 8006d8e:	681b      	ldr	r3, [r3, #0]
 8006d90:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 8006d94:	33ff      	adds	r3, #255	; 0xff
 8006d96:	4a2a      	ldr	r2, [pc, #168]	; (8006e40 <Remote_Control_Task+0x160>)
 8006d98:	6013      	str	r3, [r2, #0]
 8006d9a:	4b27      	ldr	r3, [pc, #156]	; (8006e38 <Remote_Control_Task+0x158>)
 8006d9c:	681a      	ldr	r2, [r3, #0]
 8006d9e:	4b27      	ldr	r3, [pc, #156]	; (8006e3c <Remote_Control_Task+0x15c>)
 8006da0:	681b      	ldr	r3, [r3, #0]
 8006da2:	429a      	cmp	r2, r3
 8006da4:	da0b      	bge.n	8006dbe <Remote_Control_Task+0xde>
 8006da6:	4b24      	ldr	r3, [pc, #144]	; (8006e38 <Remote_Control_Task+0x158>)
 8006da8:	681a      	ldr	r2, [r3, #0]
 8006daa:	4b25      	ldr	r3, [pc, #148]	; (8006e40 <Remote_Control_Task+0x160>)
 8006dac:	681b      	ldr	r3, [r3, #0]
 8006dae:	429a      	cmp	r2, r3
 8006db0:	da05      	bge.n	8006dbe <Remote_Control_Task+0xde>
 8006db2:	4b21      	ldr	r3, [pc, #132]	; (8006e38 <Remote_Control_Task+0x158>)
 8006db4:	681b      	ldr	r3, [r3, #0]
 8006db6:	461a      	mov	r2, r3
 8006db8:	4b22      	ldr	r3, [pc, #136]	; (8006e44 <Remote_Control_Task+0x164>)
 8006dba:	601a      	str	r2, [r3, #0]
 8006dbc:	e016      	b.n	8006dec <Remote_Control_Task+0x10c>
 8006dbe:	4b1f      	ldr	r3, [pc, #124]	; (8006e3c <Remote_Control_Task+0x15c>)
 8006dc0:	681a      	ldr	r2, [r3, #0]
 8006dc2:	4b1d      	ldr	r3, [pc, #116]	; (8006e38 <Remote_Control_Task+0x158>)
 8006dc4:	681b      	ldr	r3, [r3, #0]
 8006dc6:	429a      	cmp	r2, r3
 8006dc8:	da0b      	bge.n	8006de2 <Remote_Control_Task+0x102>
 8006dca:	4b1c      	ldr	r3, [pc, #112]	; (8006e3c <Remote_Control_Task+0x15c>)
 8006dcc:	681a      	ldr	r2, [r3, #0]
 8006dce:	4b1c      	ldr	r3, [pc, #112]	; (8006e40 <Remote_Control_Task+0x160>)
 8006dd0:	681b      	ldr	r3, [r3, #0]
 8006dd2:	429a      	cmp	r2, r3
 8006dd4:	da05      	bge.n	8006de2 <Remote_Control_Task+0x102>
 8006dd6:	4b19      	ldr	r3, [pc, #100]	; (8006e3c <Remote_Control_Task+0x15c>)
 8006dd8:	681b      	ldr	r3, [r3, #0]
 8006dda:	461a      	mov	r2, r3
 8006ddc:	4b19      	ldr	r3, [pc, #100]	; (8006e44 <Remote_Control_Task+0x164>)
 8006dde:	601a      	str	r2, [r3, #0]
 8006de0:	e004      	b.n	8006dec <Remote_Control_Task+0x10c>
 8006de2:	4b17      	ldr	r3, [pc, #92]	; (8006e40 <Remote_Control_Task+0x160>)
 8006de4:	681b      	ldr	r3, [r3, #0]
 8006de6:	461a      	mov	r2, r3
 8006de8:	4b16      	ldr	r3, [pc, #88]	; (8006e44 <Remote_Control_Task+0x164>)
 8006dea:	601a      	str	r2, [r3, #0]
 8006dec:	4b15      	ldr	r3, [pc, #84]	; (8006e44 <Remote_Control_Task+0x164>)
 8006dee:	681b      	ldr	r3, [r3, #0]
 8006df0:	2b46      	cmp	r3, #70	; 0x46
 8006df2:	d903      	bls.n	8006dfc <Remote_Control_Task+0x11c>
 8006df4:	4b13      	ldr	r3, [pc, #76]	; (8006e44 <Remote_Control_Task+0x164>)
 8006df6:	681b      	ldr	r3, [r3, #0]
 8006df8:	2b63      	cmp	r3, #99	; 0x63
 8006dfa:	d904      	bls.n	8006e06 <Remote_Control_Task+0x126>
 8006dfc:	4b11      	ldr	r3, [pc, #68]	; (8006e44 <Remote_Control_Task+0x164>)
 8006dfe:	681b      	ldr	r3, [r3, #0]
 8006e00:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8006e04:	d103      	bne.n	8006e0e <Remote_Control_Task+0x12e>
 8006e06:	4b10      	ldr	r3, [pc, #64]	; (8006e48 <Remote_Control_Task+0x168>)
 8006e08:	2200      	movs	r2, #0
 8006e0a:	701a      	strb	r2, [r3, #0]
 8006e0c:	e00c      	b.n	8006e28 <Remote_Control_Task+0x148>
 8006e0e:	4b0d      	ldr	r3, [pc, #52]	; (8006e44 <Remote_Control_Task+0x164>)
 8006e10:	681b      	ldr	r3, [r3, #0]
 8006e12:	2b46      	cmp	r3, #70	; 0x46
 8006e14:	d803      	bhi.n	8006e1e <Remote_Control_Task+0x13e>
 8006e16:	4b0c      	ldr	r3, [pc, #48]	; (8006e48 <Remote_Control_Task+0x168>)
 8006e18:	2201      	movs	r2, #1
 8006e1a:	701a      	strb	r2, [r3, #0]
 8006e1c:	e004      	b.n	8006e28 <Remote_Control_Task+0x148>
 8006e1e:	4b0a      	ldr	r3, [pc, #40]	; (8006e48 <Remote_Control_Task+0x168>)
 8006e20:	2202      	movs	r2, #2
 8006e22:	701a      	strb	r2, [r3, #0]
 8006e24:	e000      	b.n	8006e28 <Remote_Control_Task+0x148>
 8006e26:	bf00      	nop
 8006e28:	3710      	adds	r7, #16
 8006e2a:	46bd      	mov	sp, r7
 8006e2c:	bd80      	pop	{r7, pc}
 8006e2e:	bf00      	nop
 8006e30:	20000c68 	.word	0x20000c68
 8006e34:	20000c5c 	.word	0x20000c5c
 8006e38:	20000120 	.word	0x20000120
 8006e3c:	20000124 	.word	0x20000124
 8006e40:	20000128 	.word	0x20000128
 8006e44:	2000012c 	.word	0x2000012c
 8006e48:	20000c58 	.word	0x20000c58

08006e4c <HAL_MspInit>:
 8006e4c:	b580      	push	{r7, lr}
 8006e4e:	b082      	sub	sp, #8
 8006e50:	af00      	add	r7, sp, #0
 8006e52:	2300      	movs	r3, #0
 8006e54:	607b      	str	r3, [r7, #4]
 8006e56:	4b10      	ldr	r3, [pc, #64]	; (8006e98 <HAL_MspInit+0x4c>)
 8006e58:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006e5a:	4a0f      	ldr	r2, [pc, #60]	; (8006e98 <HAL_MspInit+0x4c>)
 8006e5c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8006e60:	6453      	str	r3, [r2, #68]	; 0x44
 8006e62:	4b0d      	ldr	r3, [pc, #52]	; (8006e98 <HAL_MspInit+0x4c>)
 8006e64:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006e66:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8006e6a:	607b      	str	r3, [r7, #4]
 8006e6c:	687b      	ldr	r3, [r7, #4]
 8006e6e:	2300      	movs	r3, #0
 8006e70:	603b      	str	r3, [r7, #0]
 8006e72:	4b09      	ldr	r3, [pc, #36]	; (8006e98 <HAL_MspInit+0x4c>)
 8006e74:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006e76:	4a08      	ldr	r2, [pc, #32]	; (8006e98 <HAL_MspInit+0x4c>)
 8006e78:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8006e7c:	6413      	str	r3, [r2, #64]	; 0x40
 8006e7e:	4b06      	ldr	r3, [pc, #24]	; (8006e98 <HAL_MspInit+0x4c>)
 8006e80:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006e82:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006e86:	603b      	str	r3, [r7, #0]
 8006e88:	683b      	ldr	r3, [r7, #0]
 8006e8a:	2007      	movs	r0, #7
 8006e8c:	f001 fbf2 	bl	8008674 <HAL_NVIC_SetPriorityGrouping>
 8006e90:	bf00      	nop
 8006e92:	3708      	adds	r7, #8
 8006e94:	46bd      	mov	sp, r7
 8006e96:	bd80      	pop	{r7, pc}
 8006e98:	40023800 	.word	0x40023800

08006e9c <HAL_ADC_MspInit>:
 8006e9c:	b580      	push	{r7, lr}
 8006e9e:	b08c      	sub	sp, #48	; 0x30
 8006ea0:	af00      	add	r7, sp, #0
 8006ea2:	6078      	str	r0, [r7, #4]
 8006ea4:	f107 031c 	add.w	r3, r7, #28
 8006ea8:	2200      	movs	r2, #0
 8006eaa:	601a      	str	r2, [r3, #0]
 8006eac:	605a      	str	r2, [r3, #4]
 8006eae:	609a      	str	r2, [r3, #8]
 8006eb0:	60da      	str	r2, [r3, #12]
 8006eb2:	611a      	str	r2, [r3, #16]
 8006eb4:	687b      	ldr	r3, [r7, #4]
 8006eb6:	681b      	ldr	r3, [r3, #0]
 8006eb8:	4a2e      	ldr	r2, [pc, #184]	; (8006f74 <HAL_ADC_MspInit+0xd8>)
 8006eba:	4293      	cmp	r3, r2
 8006ebc:	d128      	bne.n	8006f10 <HAL_ADC_MspInit+0x74>
 8006ebe:	2300      	movs	r3, #0
 8006ec0:	61bb      	str	r3, [r7, #24]
 8006ec2:	4b2d      	ldr	r3, [pc, #180]	; (8006f78 <HAL_ADC_MspInit+0xdc>)
 8006ec4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006ec6:	4a2c      	ldr	r2, [pc, #176]	; (8006f78 <HAL_ADC_MspInit+0xdc>)
 8006ec8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006ecc:	6453      	str	r3, [r2, #68]	; 0x44
 8006ece:	4b2a      	ldr	r3, [pc, #168]	; (8006f78 <HAL_ADC_MspInit+0xdc>)
 8006ed0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006ed2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006ed6:	61bb      	str	r3, [r7, #24]
 8006ed8:	69bb      	ldr	r3, [r7, #24]
 8006eda:	2300      	movs	r3, #0
 8006edc:	617b      	str	r3, [r7, #20]
 8006ede:	4b26      	ldr	r3, [pc, #152]	; (8006f78 <HAL_ADC_MspInit+0xdc>)
 8006ee0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006ee2:	4a25      	ldr	r2, [pc, #148]	; (8006f78 <HAL_ADC_MspInit+0xdc>)
 8006ee4:	f043 0302 	orr.w	r3, r3, #2
 8006ee8:	6313      	str	r3, [r2, #48]	; 0x30
 8006eea:	4b23      	ldr	r3, [pc, #140]	; (8006f78 <HAL_ADC_MspInit+0xdc>)
 8006eec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006eee:	f003 0302 	and.w	r3, r3, #2
 8006ef2:	617b      	str	r3, [r7, #20]
 8006ef4:	697b      	ldr	r3, [r7, #20]
 8006ef6:	2301      	movs	r3, #1
 8006ef8:	61fb      	str	r3, [r7, #28]
 8006efa:	2303      	movs	r3, #3
 8006efc:	623b      	str	r3, [r7, #32]
 8006efe:	2300      	movs	r3, #0
 8006f00:	627b      	str	r3, [r7, #36]	; 0x24
 8006f02:	f107 031c 	add.w	r3, r7, #28
 8006f06:	4619      	mov	r1, r3
 8006f08:	481c      	ldr	r0, [pc, #112]	; (8006f7c <HAL_ADC_MspInit+0xe0>)
 8006f0a:	f002 fa13 	bl	8009334 <HAL_GPIO_Init>
 8006f0e:	e02c      	b.n	8006f6a <HAL_ADC_MspInit+0xce>
 8006f10:	687b      	ldr	r3, [r7, #4]
 8006f12:	681b      	ldr	r3, [r3, #0]
 8006f14:	4a1a      	ldr	r2, [pc, #104]	; (8006f80 <HAL_ADC_MspInit+0xe4>)
 8006f16:	4293      	cmp	r3, r2
 8006f18:	d127      	bne.n	8006f6a <HAL_ADC_MspInit+0xce>
 8006f1a:	2300      	movs	r3, #0
 8006f1c:	613b      	str	r3, [r7, #16]
 8006f1e:	4b16      	ldr	r3, [pc, #88]	; (8006f78 <HAL_ADC_MspInit+0xdc>)
 8006f20:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006f22:	4a15      	ldr	r2, [pc, #84]	; (8006f78 <HAL_ADC_MspInit+0xdc>)
 8006f24:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006f28:	6453      	str	r3, [r2, #68]	; 0x44
 8006f2a:	4b13      	ldr	r3, [pc, #76]	; (8006f78 <HAL_ADC_MspInit+0xdc>)
 8006f2c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006f2e:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8006f32:	613b      	str	r3, [r7, #16]
 8006f34:	693b      	ldr	r3, [r7, #16]
 8006f36:	2300      	movs	r3, #0
 8006f38:	60fb      	str	r3, [r7, #12]
 8006f3a:	4b0f      	ldr	r3, [pc, #60]	; (8006f78 <HAL_ADC_MspInit+0xdc>)
 8006f3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006f3e:	4a0e      	ldr	r2, [pc, #56]	; (8006f78 <HAL_ADC_MspInit+0xdc>)
 8006f40:	f043 0304 	orr.w	r3, r3, #4
 8006f44:	6313      	str	r3, [r2, #48]	; 0x30
 8006f46:	4b0c      	ldr	r3, [pc, #48]	; (8006f78 <HAL_ADC_MspInit+0xdc>)
 8006f48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006f4a:	f003 0304 	and.w	r3, r3, #4
 8006f4e:	60fb      	str	r3, [r7, #12]
 8006f50:	68fb      	ldr	r3, [r7, #12]
 8006f52:	2308      	movs	r3, #8
 8006f54:	61fb      	str	r3, [r7, #28]
 8006f56:	2303      	movs	r3, #3
 8006f58:	623b      	str	r3, [r7, #32]
 8006f5a:	2300      	movs	r3, #0
 8006f5c:	627b      	str	r3, [r7, #36]	; 0x24
 8006f5e:	f107 031c 	add.w	r3, r7, #28
 8006f62:	4619      	mov	r1, r3
 8006f64:	4807      	ldr	r0, [pc, #28]	; (8006f84 <HAL_ADC_MspInit+0xe8>)
 8006f66:	f002 f9e5 	bl	8009334 <HAL_GPIO_Init>
 8006f6a:	bf00      	nop
 8006f6c:	3730      	adds	r7, #48	; 0x30
 8006f6e:	46bd      	mov	sp, r7
 8006f70:	bd80      	pop	{r7, pc}
 8006f72:	bf00      	nop
 8006f74:	40012000 	.word	0x40012000
 8006f78:	40023800 	.word	0x40023800
 8006f7c:	40020400 	.word	0x40020400
 8006f80:	40012100 	.word	0x40012100
 8006f84:	40020800 	.word	0x40020800

08006f88 <HAL_TIM_Base_MspInit>:
 8006f88:	b580      	push	{r7, lr}
 8006f8a:	b090      	sub	sp, #64	; 0x40
 8006f8c:	af00      	add	r7, sp, #0
 8006f8e:	6078      	str	r0, [r7, #4]
 8006f90:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006f94:	2200      	movs	r2, #0
 8006f96:	601a      	str	r2, [r3, #0]
 8006f98:	605a      	str	r2, [r3, #4]
 8006f9a:	609a      	str	r2, [r3, #8]
 8006f9c:	60da      	str	r2, [r3, #12]
 8006f9e:	611a      	str	r2, [r3, #16]
 8006fa0:	687b      	ldr	r3, [r7, #4]
 8006fa2:	681b      	ldr	r3, [r3, #0]
 8006fa4:	4a72      	ldr	r2, [pc, #456]	; (8007170 <HAL_TIM_Base_MspInit+0x1e8>)
 8006fa6:	4293      	cmp	r3, r2
 8006fa8:	d10e      	bne.n	8006fc8 <HAL_TIM_Base_MspInit+0x40>
 8006faa:	2300      	movs	r3, #0
 8006fac:	62bb      	str	r3, [r7, #40]	; 0x28
 8006fae:	4b71      	ldr	r3, [pc, #452]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 8006fb0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006fb2:	4a70      	ldr	r2, [pc, #448]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 8006fb4:	f043 0301 	orr.w	r3, r3, #1
 8006fb8:	6453      	str	r3, [r2, #68]	; 0x44
 8006fba:	4b6e      	ldr	r3, [pc, #440]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 8006fbc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006fbe:	f003 0301 	and.w	r3, r3, #1
 8006fc2:	62bb      	str	r3, [r7, #40]	; 0x28
 8006fc4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006fc6:	e0cf      	b.n	8007168 <HAL_TIM_Base_MspInit+0x1e0>
 8006fc8:	687b      	ldr	r3, [r7, #4]
 8006fca:	681b      	ldr	r3, [r3, #0]
 8006fcc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006fd0:	d116      	bne.n	8007000 <HAL_TIM_Base_MspInit+0x78>
 8006fd2:	2300      	movs	r3, #0
 8006fd4:	627b      	str	r3, [r7, #36]	; 0x24
 8006fd6:	4b67      	ldr	r3, [pc, #412]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 8006fd8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006fda:	4a66      	ldr	r2, [pc, #408]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 8006fdc:	f043 0301 	orr.w	r3, r3, #1
 8006fe0:	6413      	str	r3, [r2, #64]	; 0x40
 8006fe2:	4b64      	ldr	r3, [pc, #400]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 8006fe4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006fe6:	f003 0301 	and.w	r3, r3, #1
 8006fea:	627b      	str	r3, [r7, #36]	; 0x24
 8006fec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006fee:	2200      	movs	r2, #0
 8006ff0:	2100      	movs	r1, #0
 8006ff2:	201c      	movs	r0, #28
 8006ff4:	f001 fb49 	bl	800868a <HAL_NVIC_SetPriority>
 8006ff8:	201c      	movs	r0, #28
 8006ffa:	f001 fb62 	bl	80086c2 <HAL_NVIC_EnableIRQ>
 8006ffe:	e0b3      	b.n	8007168 <HAL_TIM_Base_MspInit+0x1e0>
 8007000:	687b      	ldr	r3, [r7, #4]
 8007002:	681b      	ldr	r3, [r3, #0]
 8007004:	4a5c      	ldr	r2, [pc, #368]	; (8007178 <HAL_TIM_Base_MspInit+0x1f0>)
 8007006:	4293      	cmp	r3, r2
 8007008:	d10e      	bne.n	8007028 <HAL_TIM_Base_MspInit+0xa0>
 800700a:	2300      	movs	r3, #0
 800700c:	623b      	str	r3, [r7, #32]
 800700e:	4b59      	ldr	r3, [pc, #356]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 8007010:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007012:	4a58      	ldr	r2, [pc, #352]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 8007014:	f043 0302 	orr.w	r3, r3, #2
 8007018:	6413      	str	r3, [r2, #64]	; 0x40
 800701a:	4b56      	ldr	r3, [pc, #344]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 800701c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800701e:	f003 0302 	and.w	r3, r3, #2
 8007022:	623b      	str	r3, [r7, #32]
 8007024:	6a3b      	ldr	r3, [r7, #32]
 8007026:	e09f      	b.n	8007168 <HAL_TIM_Base_MspInit+0x1e0>
 8007028:	687b      	ldr	r3, [r7, #4]
 800702a:	681b      	ldr	r3, [r3, #0]
 800702c:	4a53      	ldr	r2, [pc, #332]	; (800717c <HAL_TIM_Base_MspInit+0x1f4>)
 800702e:	4293      	cmp	r3, r2
 8007030:	d15f      	bne.n	80070f2 <HAL_TIM_Base_MspInit+0x16a>
 8007032:	2300      	movs	r3, #0
 8007034:	61fb      	str	r3, [r7, #28]
 8007036:	4b4f      	ldr	r3, [pc, #316]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 8007038:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800703a:	4a4e      	ldr	r2, [pc, #312]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 800703c:	f043 0304 	orr.w	r3, r3, #4
 8007040:	6413      	str	r3, [r2, #64]	; 0x40
 8007042:	4b4c      	ldr	r3, [pc, #304]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 8007044:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007046:	f003 0304 	and.w	r3, r3, #4
 800704a:	61fb      	str	r3, [r7, #28]
 800704c:	69fb      	ldr	r3, [r7, #28]
 800704e:	2300      	movs	r3, #0
 8007050:	61bb      	str	r3, [r7, #24]
 8007052:	4b48      	ldr	r3, [pc, #288]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 8007054:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007056:	4a47      	ldr	r2, [pc, #284]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 8007058:	f043 0302 	orr.w	r3, r3, #2
 800705c:	6313      	str	r3, [r2, #48]	; 0x30
 800705e:	4b45      	ldr	r3, [pc, #276]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 8007060:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007062:	f003 0302 	and.w	r3, r3, #2
 8007066:	61bb      	str	r3, [r7, #24]
 8007068:	69bb      	ldr	r3, [r7, #24]
 800706a:	f44f 7340 	mov.w	r3, #768	; 0x300
 800706e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007070:	2302      	movs	r3, #2
 8007072:	633b      	str	r3, [r7, #48]	; 0x30
 8007074:	2300      	movs	r3, #0
 8007076:	637b      	str	r3, [r7, #52]	; 0x34
 8007078:	2300      	movs	r3, #0
 800707a:	63bb      	str	r3, [r7, #56]	; 0x38
 800707c:	2302      	movs	r3, #2
 800707e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007080:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8007084:	4619      	mov	r1, r3
 8007086:	483e      	ldr	r0, [pc, #248]	; (8007180 <HAL_TIM_Base_MspInit+0x1f8>)
 8007088:	f002 f954 	bl	8009334 <HAL_GPIO_Init>
 800708c:	4b3d      	ldr	r3, [pc, #244]	; (8007184 <HAL_TIM_Base_MspInit+0x1fc>)
 800708e:	4a3e      	ldr	r2, [pc, #248]	; (8007188 <HAL_TIM_Base_MspInit+0x200>)
 8007090:	601a      	str	r2, [r3, #0]
 8007092:	4b3c      	ldr	r3, [pc, #240]	; (8007184 <HAL_TIM_Base_MspInit+0x1fc>)
 8007094:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8007098:	605a      	str	r2, [r3, #4]
 800709a:	4b3a      	ldr	r3, [pc, #232]	; (8007184 <HAL_TIM_Base_MspInit+0x1fc>)
 800709c:	2200      	movs	r2, #0
 800709e:	609a      	str	r2, [r3, #8]
 80070a0:	4b38      	ldr	r3, [pc, #224]	; (8007184 <HAL_TIM_Base_MspInit+0x1fc>)
 80070a2:	2200      	movs	r2, #0
 80070a4:	60da      	str	r2, [r3, #12]
 80070a6:	4b37      	ldr	r3, [pc, #220]	; (8007184 <HAL_TIM_Base_MspInit+0x1fc>)
 80070a8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80070ac:	611a      	str	r2, [r3, #16]
 80070ae:	4b35      	ldr	r3, [pc, #212]	; (8007184 <HAL_TIM_Base_MspInit+0x1fc>)
 80070b0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80070b4:	615a      	str	r2, [r3, #20]
 80070b6:	4b33      	ldr	r3, [pc, #204]	; (8007184 <HAL_TIM_Base_MspInit+0x1fc>)
 80070b8:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80070bc:	619a      	str	r2, [r3, #24]
 80070be:	4b31      	ldr	r3, [pc, #196]	; (8007184 <HAL_TIM_Base_MspInit+0x1fc>)
 80070c0:	f44f 7280 	mov.w	r2, #256	; 0x100
 80070c4:	61da      	str	r2, [r3, #28]
 80070c6:	4b2f      	ldr	r3, [pc, #188]	; (8007184 <HAL_TIM_Base_MspInit+0x1fc>)
 80070c8:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 80070cc:	621a      	str	r2, [r3, #32]
 80070ce:	4b2d      	ldr	r3, [pc, #180]	; (8007184 <HAL_TIM_Base_MspInit+0x1fc>)
 80070d0:	2200      	movs	r2, #0
 80070d2:	625a      	str	r2, [r3, #36]	; 0x24
 80070d4:	482b      	ldr	r0, [pc, #172]	; (8007184 <HAL_TIM_Base_MspInit+0x1fc>)
 80070d6:	f001 fb1d 	bl	8008714 <HAL_DMA_Init>
 80070da:	4603      	mov	r3, r0
 80070dc:	2b00      	cmp	r3, #0
 80070de:	d001      	beq.n	80070e4 <HAL_TIM_Base_MspInit+0x15c>
 80070e0:	f7ff fdba 	bl	8006c58 <Error_Handler>
 80070e4:	687b      	ldr	r3, [r7, #4]
 80070e6:	4a27      	ldr	r2, [pc, #156]	; (8007184 <HAL_TIM_Base_MspInit+0x1fc>)
 80070e8:	62da      	str	r2, [r3, #44]	; 0x2c
 80070ea:	4a26      	ldr	r2, [pc, #152]	; (8007184 <HAL_TIM_Base_MspInit+0x1fc>)
 80070ec:	687b      	ldr	r3, [r7, #4]
 80070ee:	6393      	str	r3, [r2, #56]	; 0x38
 80070f0:	e03a      	b.n	8007168 <HAL_TIM_Base_MspInit+0x1e0>
 80070f2:	687b      	ldr	r3, [r7, #4]
 80070f4:	681b      	ldr	r3, [r3, #0]
 80070f6:	4a25      	ldr	r2, [pc, #148]	; (800718c <HAL_TIM_Base_MspInit+0x204>)
 80070f8:	4293      	cmp	r3, r2
 80070fa:	d10e      	bne.n	800711a <HAL_TIM_Base_MspInit+0x192>
 80070fc:	2300      	movs	r3, #0
 80070fe:	617b      	str	r3, [r7, #20]
 8007100:	4b1c      	ldr	r3, [pc, #112]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 8007102:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007104:	4a1b      	ldr	r2, [pc, #108]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 8007106:	f043 0308 	orr.w	r3, r3, #8
 800710a:	6413      	str	r3, [r2, #64]	; 0x40
 800710c:	4b19      	ldr	r3, [pc, #100]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 800710e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007110:	f003 0308 	and.w	r3, r3, #8
 8007114:	617b      	str	r3, [r7, #20]
 8007116:	697b      	ldr	r3, [r7, #20]
 8007118:	e026      	b.n	8007168 <HAL_TIM_Base_MspInit+0x1e0>
 800711a:	687b      	ldr	r3, [r7, #4]
 800711c:	681b      	ldr	r3, [r3, #0]
 800711e:	4a1c      	ldr	r2, [pc, #112]	; (8007190 <HAL_TIM_Base_MspInit+0x208>)
 8007120:	4293      	cmp	r3, r2
 8007122:	d10e      	bne.n	8007142 <HAL_TIM_Base_MspInit+0x1ba>
 8007124:	2300      	movs	r3, #0
 8007126:	613b      	str	r3, [r7, #16]
 8007128:	4b12      	ldr	r3, [pc, #72]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 800712a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800712c:	4a11      	ldr	r2, [pc, #68]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 800712e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007132:	6413      	str	r3, [r2, #64]	; 0x40
 8007134:	4b0f      	ldr	r3, [pc, #60]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 8007136:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007138:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800713c:	613b      	str	r3, [r7, #16]
 800713e:	693b      	ldr	r3, [r7, #16]
 8007140:	e012      	b.n	8007168 <HAL_TIM_Base_MspInit+0x1e0>
 8007142:	687b      	ldr	r3, [r7, #4]
 8007144:	681b      	ldr	r3, [r3, #0]
 8007146:	4a13      	ldr	r2, [pc, #76]	; (8007194 <HAL_TIM_Base_MspInit+0x20c>)
 8007148:	4293      	cmp	r3, r2
 800714a:	d10d      	bne.n	8007168 <HAL_TIM_Base_MspInit+0x1e0>
 800714c:	2300      	movs	r3, #0
 800714e:	60fb      	str	r3, [r7, #12]
 8007150:	4b08      	ldr	r3, [pc, #32]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 8007152:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007154:	4a07      	ldr	r2, [pc, #28]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 8007156:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800715a:	6413      	str	r3, [r2, #64]	; 0x40
 800715c:	4b05      	ldr	r3, [pc, #20]	; (8007174 <HAL_TIM_Base_MspInit+0x1ec>)
 800715e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007160:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007164:	60fb      	str	r3, [r7, #12]
 8007166:	68fb      	ldr	r3, [r7, #12]
 8007168:	bf00      	nop
 800716a:	3740      	adds	r7, #64	; 0x40
 800716c:	46bd      	mov	sp, r7
 800716e:	bd80      	pop	{r7, pc}
 8007170:	40010000 	.word	0x40010000
 8007174:	40023800 	.word	0x40023800
 8007178:	40000400 	.word	0x40000400
 800717c:	40000800 	.word	0x40000800
 8007180:	40020400 	.word	0x40020400
 8007184:	20000ae8 	.word	0x20000ae8
 8007188:	400260b8 	.word	0x400260b8
 800718c:	40000c00 	.word	0x40000c00
 8007190:	40001c00 	.word	0x40001c00
 8007194:	40002000 	.word	0x40002000

08007198 <HAL_TIM_Encoder_MspInit>:
 8007198:	b580      	push	{r7, lr}
 800719a:	b08a      	sub	sp, #40	; 0x28
 800719c:	af00      	add	r7, sp, #0
 800719e:	6078      	str	r0, [r7, #4]
 80071a0:	f107 0314 	add.w	r3, r7, #20
 80071a4:	2200      	movs	r2, #0
 80071a6:	601a      	str	r2, [r3, #0]
 80071a8:	605a      	str	r2, [r3, #4]
 80071aa:	609a      	str	r2, [r3, #8]
 80071ac:	60da      	str	r2, [r3, #12]
 80071ae:	611a      	str	r2, [r3, #16]
 80071b0:	687b      	ldr	r3, [r7, #4]
 80071b2:	681b      	ldr	r3, [r3, #0]
 80071b4:	4a19      	ldr	r2, [pc, #100]	; (800721c <HAL_TIM_Encoder_MspInit+0x84>)
 80071b6:	4293      	cmp	r3, r2
 80071b8:	d12b      	bne.n	8007212 <HAL_TIM_Encoder_MspInit+0x7a>
 80071ba:	2300      	movs	r3, #0
 80071bc:	613b      	str	r3, [r7, #16]
 80071be:	4b18      	ldr	r3, [pc, #96]	; (8007220 <HAL_TIM_Encoder_MspInit+0x88>)
 80071c0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80071c2:	4a17      	ldr	r2, [pc, #92]	; (8007220 <HAL_TIM_Encoder_MspInit+0x88>)
 80071c4:	f043 0302 	orr.w	r3, r3, #2
 80071c8:	6453      	str	r3, [r2, #68]	; 0x44
 80071ca:	4b15      	ldr	r3, [pc, #84]	; (8007220 <HAL_TIM_Encoder_MspInit+0x88>)
 80071cc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80071ce:	f003 0302 	and.w	r3, r3, #2
 80071d2:	613b      	str	r3, [r7, #16]
 80071d4:	693b      	ldr	r3, [r7, #16]
 80071d6:	2300      	movs	r3, #0
 80071d8:	60fb      	str	r3, [r7, #12]
 80071da:	4b11      	ldr	r3, [pc, #68]	; (8007220 <HAL_TIM_Encoder_MspInit+0x88>)
 80071dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80071de:	4a10      	ldr	r2, [pc, #64]	; (8007220 <HAL_TIM_Encoder_MspInit+0x88>)
 80071e0:	f043 0304 	orr.w	r3, r3, #4
 80071e4:	6313      	str	r3, [r2, #48]	; 0x30
 80071e6:	4b0e      	ldr	r3, [pc, #56]	; (8007220 <HAL_TIM_Encoder_MspInit+0x88>)
 80071e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80071ea:	f003 0304 	and.w	r3, r3, #4
 80071ee:	60fb      	str	r3, [r7, #12]
 80071f0:	68fb      	ldr	r3, [r7, #12]
 80071f2:	23c0      	movs	r3, #192	; 0xc0
 80071f4:	617b      	str	r3, [r7, #20]
 80071f6:	2302      	movs	r3, #2
 80071f8:	61bb      	str	r3, [r7, #24]
 80071fa:	2300      	movs	r3, #0
 80071fc:	61fb      	str	r3, [r7, #28]
 80071fe:	2300      	movs	r3, #0
 8007200:	623b      	str	r3, [r7, #32]
 8007202:	2303      	movs	r3, #3
 8007204:	627b      	str	r3, [r7, #36]	; 0x24
 8007206:	f107 0314 	add.w	r3, r7, #20
 800720a:	4619      	mov	r1, r3
 800720c:	4805      	ldr	r0, [pc, #20]	; (8007224 <HAL_TIM_Encoder_MspInit+0x8c>)
 800720e:	f002 f891 	bl	8009334 <HAL_GPIO_Init>
 8007212:	bf00      	nop
 8007214:	3728      	adds	r7, #40	; 0x28
 8007216:	46bd      	mov	sp, r7
 8007218:	bd80      	pop	{r7, pc}
 800721a:	bf00      	nop
 800721c:	40010400 	.word	0x40010400
 8007220:	40023800 	.word	0x40023800
 8007224:	40020800 	.word	0x40020800

08007228 <HAL_TIM_MspPostInit>:
 8007228:	b580      	push	{r7, lr}
 800722a:	b08a      	sub	sp, #40	; 0x28
 800722c:	af00      	add	r7, sp, #0
 800722e:	6078      	str	r0, [r7, #4]
 8007230:	f107 0314 	add.w	r3, r7, #20
 8007234:	2200      	movs	r2, #0
 8007236:	601a      	str	r2, [r3, #0]
 8007238:	605a      	str	r2, [r3, #4]
 800723a:	609a      	str	r2, [r3, #8]
 800723c:	60da      	str	r2, [r3, #12]
 800723e:	611a      	str	r2, [r3, #16]
 8007240:	687b      	ldr	r3, [r7, #4]
 8007242:	681b      	ldr	r3, [r3, #0]
 8007244:	4a37      	ldr	r2, [pc, #220]	; (8007324 <HAL_TIM_MspPostInit+0xfc>)
 8007246:	4293      	cmp	r3, r2
 8007248:	d11f      	bne.n	800728a <HAL_TIM_MspPostInit+0x62>
 800724a:	2300      	movs	r3, #0
 800724c:	613b      	str	r3, [r7, #16]
 800724e:	4b36      	ldr	r3, [pc, #216]	; (8007328 <HAL_TIM_MspPostInit+0x100>)
 8007250:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007252:	4a35      	ldr	r2, [pc, #212]	; (8007328 <HAL_TIM_MspPostInit+0x100>)
 8007254:	f043 0301 	orr.w	r3, r3, #1
 8007258:	6313      	str	r3, [r2, #48]	; 0x30
 800725a:	4b33      	ldr	r3, [pc, #204]	; (8007328 <HAL_TIM_MspPostInit+0x100>)
 800725c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800725e:	f003 0301 	and.w	r3, r3, #1
 8007262:	613b      	str	r3, [r7, #16]
 8007264:	693b      	ldr	r3, [r7, #16]
 8007266:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800726a:	617b      	str	r3, [r7, #20]
 800726c:	2302      	movs	r3, #2
 800726e:	61bb      	str	r3, [r7, #24]
 8007270:	2300      	movs	r3, #0
 8007272:	61fb      	str	r3, [r7, #28]
 8007274:	2300      	movs	r3, #0
 8007276:	623b      	str	r3, [r7, #32]
 8007278:	2301      	movs	r3, #1
 800727a:	627b      	str	r3, [r7, #36]	; 0x24
 800727c:	f107 0314 	add.w	r3, r7, #20
 8007280:	4619      	mov	r1, r3
 8007282:	482a      	ldr	r0, [pc, #168]	; (800732c <HAL_TIM_MspPostInit+0x104>)
 8007284:	f002 f856 	bl	8009334 <HAL_GPIO_Init>
 8007288:	e047      	b.n	800731a <HAL_TIM_MspPostInit+0xf2>
 800728a:	687b      	ldr	r3, [r7, #4]
 800728c:	681b      	ldr	r3, [r3, #0]
 800728e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007292:	d11f      	bne.n	80072d4 <HAL_TIM_MspPostInit+0xac>
 8007294:	2300      	movs	r3, #0
 8007296:	60fb      	str	r3, [r7, #12]
 8007298:	4b23      	ldr	r3, [pc, #140]	; (8007328 <HAL_TIM_MspPostInit+0x100>)
 800729a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800729c:	4a22      	ldr	r2, [pc, #136]	; (8007328 <HAL_TIM_MspPostInit+0x100>)
 800729e:	f043 0301 	orr.w	r3, r3, #1
 80072a2:	6313      	str	r3, [r2, #48]	; 0x30
 80072a4:	4b20      	ldr	r3, [pc, #128]	; (8007328 <HAL_TIM_MspPostInit+0x100>)
 80072a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80072a8:	f003 0301 	and.w	r3, r3, #1
 80072ac:	60fb      	str	r3, [r7, #12]
 80072ae:	68fb      	ldr	r3, [r7, #12]
 80072b0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80072b4:	617b      	str	r3, [r7, #20]
 80072b6:	2302      	movs	r3, #2
 80072b8:	61bb      	str	r3, [r7, #24]
 80072ba:	2300      	movs	r3, #0
 80072bc:	61fb      	str	r3, [r7, #28]
 80072be:	2300      	movs	r3, #0
 80072c0:	623b      	str	r3, [r7, #32]
 80072c2:	2301      	movs	r3, #1
 80072c4:	627b      	str	r3, [r7, #36]	; 0x24
 80072c6:	f107 0314 	add.w	r3, r7, #20
 80072ca:	4619      	mov	r1, r3
 80072cc:	4817      	ldr	r0, [pc, #92]	; (800732c <HAL_TIM_MspPostInit+0x104>)
 80072ce:	f002 f831 	bl	8009334 <HAL_GPIO_Init>
 80072d2:	e022      	b.n	800731a <HAL_TIM_MspPostInit+0xf2>
 80072d4:	687b      	ldr	r3, [r7, #4]
 80072d6:	681b      	ldr	r3, [r3, #0]
 80072d8:	4a15      	ldr	r2, [pc, #84]	; (8007330 <HAL_TIM_MspPostInit+0x108>)
 80072da:	4293      	cmp	r3, r2
 80072dc:	d11d      	bne.n	800731a <HAL_TIM_MspPostInit+0xf2>
 80072de:	2300      	movs	r3, #0
 80072e0:	60bb      	str	r3, [r7, #8]
 80072e2:	4b11      	ldr	r3, [pc, #68]	; (8007328 <HAL_TIM_MspPostInit+0x100>)
 80072e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80072e6:	4a10      	ldr	r2, [pc, #64]	; (8007328 <HAL_TIM_MspPostInit+0x100>)
 80072e8:	f043 0301 	orr.w	r3, r3, #1
 80072ec:	6313      	str	r3, [r2, #48]	; 0x30
 80072ee:	4b0e      	ldr	r3, [pc, #56]	; (8007328 <HAL_TIM_MspPostInit+0x100>)
 80072f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80072f2:	f003 0301 	and.w	r3, r3, #1
 80072f6:	60bb      	str	r3, [r7, #8]
 80072f8:	68bb      	ldr	r3, [r7, #8]
 80072fa:	23c0      	movs	r3, #192	; 0xc0
 80072fc:	617b      	str	r3, [r7, #20]
 80072fe:	2302      	movs	r3, #2
 8007300:	61bb      	str	r3, [r7, #24]
 8007302:	2300      	movs	r3, #0
 8007304:	61fb      	str	r3, [r7, #28]
 8007306:	2300      	movs	r3, #0
 8007308:	623b      	str	r3, [r7, #32]
 800730a:	2302      	movs	r3, #2
 800730c:	627b      	str	r3, [r7, #36]	; 0x24
 800730e:	f107 0314 	add.w	r3, r7, #20
 8007312:	4619      	mov	r1, r3
 8007314:	4805      	ldr	r0, [pc, #20]	; (800732c <HAL_TIM_MspPostInit+0x104>)
 8007316:	f002 f80d 	bl	8009334 <HAL_GPIO_Init>
 800731a:	bf00      	nop
 800731c:	3728      	adds	r7, #40	; 0x28
 800731e:	46bd      	mov	sp, r7
 8007320:	bd80      	pop	{r7, pc}
 8007322:	bf00      	nop
 8007324:	40010000 	.word	0x40010000
 8007328:	40023800 	.word	0x40023800
 800732c:	40020000 	.word	0x40020000
 8007330:	40000400 	.word	0x40000400

08007334 <HAL_UART_MspInit>:
 8007334:	b580      	push	{r7, lr}
 8007336:	b090      	sub	sp, #64	; 0x40
 8007338:	af00      	add	r7, sp, #0
 800733a:	6078      	str	r0, [r7, #4]
 800733c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8007340:	2200      	movs	r2, #0
 8007342:	601a      	str	r2, [r3, #0]
 8007344:	605a      	str	r2, [r3, #4]
 8007346:	609a      	str	r2, [r3, #8]
 8007348:	60da      	str	r2, [r3, #12]
 800734a:	611a      	str	r2, [r3, #16]
 800734c:	687b      	ldr	r3, [r7, #4]
 800734e:	681b      	ldr	r3, [r3, #0]
 8007350:	4a7c      	ldr	r2, [pc, #496]	; (8007544 <HAL_UART_MspInit+0x210>)
 8007352:	4293      	cmp	r3, r2
 8007354:	d14b      	bne.n	80073ee <HAL_UART_MspInit+0xba>
 8007356:	2300      	movs	r3, #0
 8007358:	62bb      	str	r3, [r7, #40]	; 0x28
 800735a:	4b7b      	ldr	r3, [pc, #492]	; (8007548 <HAL_UART_MspInit+0x214>)
 800735c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800735e:	4a7a      	ldr	r2, [pc, #488]	; (8007548 <HAL_UART_MspInit+0x214>)
 8007360:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8007364:	6413      	str	r3, [r2, #64]	; 0x40
 8007366:	4b78      	ldr	r3, [pc, #480]	; (8007548 <HAL_UART_MspInit+0x214>)
 8007368:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800736a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800736e:	62bb      	str	r3, [r7, #40]	; 0x28
 8007370:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007372:	2300      	movs	r3, #0
 8007374:	627b      	str	r3, [r7, #36]	; 0x24
 8007376:	4b74      	ldr	r3, [pc, #464]	; (8007548 <HAL_UART_MspInit+0x214>)
 8007378:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800737a:	4a73      	ldr	r2, [pc, #460]	; (8007548 <HAL_UART_MspInit+0x214>)
 800737c:	f043 0304 	orr.w	r3, r3, #4
 8007380:	6313      	str	r3, [r2, #48]	; 0x30
 8007382:	4b71      	ldr	r3, [pc, #452]	; (8007548 <HAL_UART_MspInit+0x214>)
 8007384:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007386:	f003 0304 	and.w	r3, r3, #4
 800738a:	627b      	str	r3, [r7, #36]	; 0x24
 800738c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800738e:	2300      	movs	r3, #0
 8007390:	623b      	str	r3, [r7, #32]
 8007392:	4b6d      	ldr	r3, [pc, #436]	; (8007548 <HAL_UART_MspInit+0x214>)
 8007394:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007396:	4a6c      	ldr	r2, [pc, #432]	; (8007548 <HAL_UART_MspInit+0x214>)
 8007398:	f043 0308 	orr.w	r3, r3, #8
 800739c:	6313      	str	r3, [r2, #48]	; 0x30
 800739e:	4b6a      	ldr	r3, [pc, #424]	; (8007548 <HAL_UART_MspInit+0x214>)
 80073a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80073a2:	f003 0308 	and.w	r3, r3, #8
 80073a6:	623b      	str	r3, [r7, #32]
 80073a8:	6a3b      	ldr	r3, [r7, #32]
 80073aa:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80073ae:	62fb      	str	r3, [r7, #44]	; 0x2c
 80073b0:	2302      	movs	r3, #2
 80073b2:	633b      	str	r3, [r7, #48]	; 0x30
 80073b4:	2300      	movs	r3, #0
 80073b6:	637b      	str	r3, [r7, #52]	; 0x34
 80073b8:	2303      	movs	r3, #3
 80073ba:	63bb      	str	r3, [r7, #56]	; 0x38
 80073bc:	2308      	movs	r3, #8
 80073be:	63fb      	str	r3, [r7, #60]	; 0x3c
 80073c0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80073c4:	4619      	mov	r1, r3
 80073c6:	4861      	ldr	r0, [pc, #388]	; (800754c <HAL_UART_MspInit+0x218>)
 80073c8:	f001 ffb4 	bl	8009334 <HAL_GPIO_Init>
 80073cc:	2304      	movs	r3, #4
 80073ce:	62fb      	str	r3, [r7, #44]	; 0x2c
 80073d0:	2302      	movs	r3, #2
 80073d2:	633b      	str	r3, [r7, #48]	; 0x30
 80073d4:	2300      	movs	r3, #0
 80073d6:	637b      	str	r3, [r7, #52]	; 0x34
 80073d8:	2303      	movs	r3, #3
 80073da:	63bb      	str	r3, [r7, #56]	; 0x38
 80073dc:	2308      	movs	r3, #8
 80073de:	63fb      	str	r3, [r7, #60]	; 0x3c
 80073e0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80073e4:	4619      	mov	r1, r3
 80073e6:	485a      	ldr	r0, [pc, #360]	; (8007550 <HAL_UART_MspInit+0x21c>)
 80073e8:	f001 ffa4 	bl	8009334 <HAL_GPIO_Init>
 80073ec:	e0a6      	b.n	800753c <HAL_UART_MspInit+0x208>
 80073ee:	687b      	ldr	r3, [r7, #4]
 80073f0:	681b      	ldr	r3, [r3, #0]
 80073f2:	4a58      	ldr	r2, [pc, #352]	; (8007554 <HAL_UART_MspInit+0x220>)
 80073f4:	4293      	cmp	r3, r2
 80073f6:	d135      	bne.n	8007464 <HAL_UART_MspInit+0x130>
 80073f8:	2300      	movs	r3, #0
 80073fa:	61fb      	str	r3, [r7, #28]
 80073fc:	4b52      	ldr	r3, [pc, #328]	; (8007548 <HAL_UART_MspInit+0x214>)
 80073fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007400:	4a51      	ldr	r2, [pc, #324]	; (8007548 <HAL_UART_MspInit+0x214>)
 8007402:	f043 0310 	orr.w	r3, r3, #16
 8007406:	6453      	str	r3, [r2, #68]	; 0x44
 8007408:	4b4f      	ldr	r3, [pc, #316]	; (8007548 <HAL_UART_MspInit+0x214>)
 800740a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800740c:	f003 0310 	and.w	r3, r3, #16
 8007410:	61fb      	str	r3, [r7, #28]
 8007412:	69fb      	ldr	r3, [r7, #28]
 8007414:	2300      	movs	r3, #0
 8007416:	61bb      	str	r3, [r7, #24]
 8007418:	4b4b      	ldr	r3, [pc, #300]	; (8007548 <HAL_UART_MspInit+0x214>)
 800741a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800741c:	4a4a      	ldr	r2, [pc, #296]	; (8007548 <HAL_UART_MspInit+0x214>)
 800741e:	f043 0301 	orr.w	r3, r3, #1
 8007422:	6313      	str	r3, [r2, #48]	; 0x30
 8007424:	4b48      	ldr	r3, [pc, #288]	; (8007548 <HAL_UART_MspInit+0x214>)
 8007426:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007428:	f003 0301 	and.w	r3, r3, #1
 800742c:	61bb      	str	r3, [r7, #24]
 800742e:	69bb      	ldr	r3, [r7, #24]
 8007430:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8007434:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007436:	2302      	movs	r3, #2
 8007438:	633b      	str	r3, [r7, #48]	; 0x30
 800743a:	2300      	movs	r3, #0
 800743c:	637b      	str	r3, [r7, #52]	; 0x34
 800743e:	2303      	movs	r3, #3
 8007440:	63bb      	str	r3, [r7, #56]	; 0x38
 8007442:	2307      	movs	r3, #7
 8007444:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007446:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800744a:	4619      	mov	r1, r3
 800744c:	4842      	ldr	r0, [pc, #264]	; (8007558 <HAL_UART_MspInit+0x224>)
 800744e:	f001 ff71 	bl	8009334 <HAL_GPIO_Init>
 8007452:	2200      	movs	r2, #0
 8007454:	2100      	movs	r1, #0
 8007456:	2025      	movs	r0, #37	; 0x25
 8007458:	f001 f917 	bl	800868a <HAL_NVIC_SetPriority>
 800745c:	2025      	movs	r0, #37	; 0x25
 800745e:	f001 f930 	bl	80086c2 <HAL_NVIC_EnableIRQ>
 8007462:	e06b      	b.n	800753c <HAL_UART_MspInit+0x208>
 8007464:	687b      	ldr	r3, [r7, #4]
 8007466:	681b      	ldr	r3, [r3, #0]
 8007468:	4a3c      	ldr	r2, [pc, #240]	; (800755c <HAL_UART_MspInit+0x228>)
 800746a:	4293      	cmp	r3, r2
 800746c:	d12c      	bne.n	80074c8 <HAL_UART_MspInit+0x194>
 800746e:	2300      	movs	r3, #0
 8007470:	617b      	str	r3, [r7, #20]
 8007472:	4b35      	ldr	r3, [pc, #212]	; (8007548 <HAL_UART_MspInit+0x214>)
 8007474:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007476:	4a34      	ldr	r2, [pc, #208]	; (8007548 <HAL_UART_MspInit+0x214>)
 8007478:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800747c:	6413      	str	r3, [r2, #64]	; 0x40
 800747e:	4b32      	ldr	r3, [pc, #200]	; (8007548 <HAL_UART_MspInit+0x214>)
 8007480:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007482:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007486:	617b      	str	r3, [r7, #20]
 8007488:	697b      	ldr	r3, [r7, #20]
 800748a:	2300      	movs	r3, #0
 800748c:	613b      	str	r3, [r7, #16]
 800748e:	4b2e      	ldr	r3, [pc, #184]	; (8007548 <HAL_UART_MspInit+0x214>)
 8007490:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007492:	4a2d      	ldr	r2, [pc, #180]	; (8007548 <HAL_UART_MspInit+0x214>)
 8007494:	f043 0301 	orr.w	r3, r3, #1
 8007498:	6313      	str	r3, [r2, #48]	; 0x30
 800749a:	4b2b      	ldr	r3, [pc, #172]	; (8007548 <HAL_UART_MspInit+0x214>)
 800749c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800749e:	f003 0301 	and.w	r3, r3, #1
 80074a2:	613b      	str	r3, [r7, #16]
 80074a4:	693b      	ldr	r3, [r7, #16]
 80074a6:	230c      	movs	r3, #12
 80074a8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80074aa:	2302      	movs	r3, #2
 80074ac:	633b      	str	r3, [r7, #48]	; 0x30
 80074ae:	2300      	movs	r3, #0
 80074b0:	637b      	str	r3, [r7, #52]	; 0x34
 80074b2:	2303      	movs	r3, #3
 80074b4:	63bb      	str	r3, [r7, #56]	; 0x38
 80074b6:	2307      	movs	r3, #7
 80074b8:	63fb      	str	r3, [r7, #60]	; 0x3c
 80074ba:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80074be:	4619      	mov	r1, r3
 80074c0:	4825      	ldr	r0, [pc, #148]	; (8007558 <HAL_UART_MspInit+0x224>)
 80074c2:	f001 ff37 	bl	8009334 <HAL_GPIO_Init>
 80074c6:	e039      	b.n	800753c <HAL_UART_MspInit+0x208>
 80074c8:	687b      	ldr	r3, [r7, #4]
 80074ca:	681b      	ldr	r3, [r3, #0]
 80074cc:	4a24      	ldr	r2, [pc, #144]	; (8007560 <HAL_UART_MspInit+0x22c>)
 80074ce:	4293      	cmp	r3, r2
 80074d0:	d134      	bne.n	800753c <HAL_UART_MspInit+0x208>
 80074d2:	2300      	movs	r3, #0
 80074d4:	60fb      	str	r3, [r7, #12]
 80074d6:	4b1c      	ldr	r3, [pc, #112]	; (8007548 <HAL_UART_MspInit+0x214>)
 80074d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80074da:	4a1b      	ldr	r2, [pc, #108]	; (8007548 <HAL_UART_MspInit+0x214>)
 80074dc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80074e0:	6413      	str	r3, [r2, #64]	; 0x40
 80074e2:	4b19      	ldr	r3, [pc, #100]	; (8007548 <HAL_UART_MspInit+0x214>)
 80074e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80074e6:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80074ea:	60fb      	str	r3, [r7, #12]
 80074ec:	68fb      	ldr	r3, [r7, #12]
 80074ee:	2300      	movs	r3, #0
 80074f0:	60bb      	str	r3, [r7, #8]
 80074f2:	4b15      	ldr	r3, [pc, #84]	; (8007548 <HAL_UART_MspInit+0x214>)
 80074f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80074f6:	4a14      	ldr	r2, [pc, #80]	; (8007548 <HAL_UART_MspInit+0x214>)
 80074f8:	f043 0304 	orr.w	r3, r3, #4
 80074fc:	6313      	str	r3, [r2, #48]	; 0x30
 80074fe:	4b12      	ldr	r3, [pc, #72]	; (8007548 <HAL_UART_MspInit+0x214>)
 8007500:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007502:	f003 0304 	and.w	r3, r3, #4
 8007506:	60bb      	str	r3, [r7, #8]
 8007508:	68bb      	ldr	r3, [r7, #8]
 800750a:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 800750e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007510:	2302      	movs	r3, #2
 8007512:	633b      	str	r3, [r7, #48]	; 0x30
 8007514:	2300      	movs	r3, #0
 8007516:	637b      	str	r3, [r7, #52]	; 0x34
 8007518:	2303      	movs	r3, #3
 800751a:	63bb      	str	r3, [r7, #56]	; 0x38
 800751c:	2307      	movs	r3, #7
 800751e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007520:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8007524:	4619      	mov	r1, r3
 8007526:	4809      	ldr	r0, [pc, #36]	; (800754c <HAL_UART_MspInit+0x218>)
 8007528:	f001 ff04 	bl	8009334 <HAL_GPIO_Init>
 800752c:	2200      	movs	r2, #0
 800752e:	2100      	movs	r1, #0
 8007530:	2027      	movs	r0, #39	; 0x27
 8007532:	f001 f8aa 	bl	800868a <HAL_NVIC_SetPriority>
 8007536:	2027      	movs	r0, #39	; 0x27
 8007538:	f001 f8c3 	bl	80086c2 <HAL_NVIC_EnableIRQ>
 800753c:	bf00      	nop
 800753e:	3740      	adds	r7, #64	; 0x40
 8007540:	46bd      	mov	sp, r7
 8007542:	bd80      	pop	{r7, pc}
 8007544:	40005000 	.word	0x40005000
 8007548:	40023800 	.word	0x40023800
 800754c:	40020800 	.word	0x40020800
 8007550:	40020c00 	.word	0x40020c00
 8007554:	40011000 	.word	0x40011000
 8007558:	40020000 	.word	0x40020000
 800755c:	40004400 	.word	0x40004400
 8007560:	40004800 	.word	0x40004800

08007564 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8007564:	b480      	push	{r7}
 8007566:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8007568:	e7fe      	b.n	8007568 <NMI_Handler+0x4>
	...

0800756c <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800756c:	b580      	push	{r7, lr}
 800756e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

TIM3->CCR1=499;
 8007570:	4b0f      	ldr	r3, [pc, #60]	; (80075b0 <HardFault_Handler+0x44>)
 8007572:	f240 12f3 	movw	r2, #499	; 0x1f3
 8007576:	635a      	str	r2, [r3, #52]	; 0x34
  TIM3->CCR2=499;
 8007578:	4b0d      	ldr	r3, [pc, #52]	; (80075b0 <HardFault_Handler+0x44>)
 800757a:	f240 12f3 	movw	r2, #499	; 0x1f3
 800757e:	639a      	str	r2, [r3, #56]	; 0x38
  LED_B(1);
 8007580:	2200      	movs	r2, #0
 8007582:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8007586:	480b      	ldr	r0, [pc, #44]	; (80075b4 <HardFault_Handler+0x48>)
 8007588:	f002 f880 	bl	800968c <HAL_GPIO_WritePin>
  LED_G(1);
 800758c:	2200      	movs	r2, #0
 800758e:	2102      	movs	r1, #2
 8007590:	4808      	ldr	r0, [pc, #32]	; (80075b4 <HardFault_Handler+0x48>)
 8007592:	f002 f87b 	bl	800968c <HAL_GPIO_WritePin>
  LED_R(1);
 8007596:	2200      	movs	r2, #0
 8007598:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800759c:	4805      	ldr	r0, [pc, #20]	; (80075b4 <HardFault_Handler+0x48>)
 800759e:	f002 f875 	bl	800968c <HAL_GPIO_WritePin>
  LED_Y(1);
 80075a2:	2200      	movs	r2, #0
 80075a4:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80075a8:	4802      	ldr	r0, [pc, #8]	; (80075b4 <HardFault_Handler+0x48>)
 80075aa:	f002 f86f 	bl	800968c <HAL_GPIO_WritePin>
  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80075ae:	e7fe      	b.n	80075ae <HardFault_Handler+0x42>
 80075b0:	40000400 	.word	0x40000400
 80075b4:	40020400 	.word	0x40020400

080075b8 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80075b8:	b480      	push	{r7}
 80075ba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80075bc:	e7fe      	b.n	80075bc <MemManage_Handler+0x4>

080075be <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80075be:	b480      	push	{r7}
 80075c0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80075c2:	e7fe      	b.n	80075c2 <BusFault_Handler+0x4>

080075c4 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80075c4:	b480      	push	{r7}
 80075c6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80075c8:	e7fe      	b.n	80075c8 <UsageFault_Handler+0x4>

080075ca <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80075ca:	b480      	push	{r7}
 80075cc:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80075ce:	bf00      	nop
 80075d0:	46bd      	mov	sp, r7
 80075d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075d6:	4770      	bx	lr

080075d8 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80075d8:	b480      	push	{r7}
 80075da:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80075dc:	bf00      	nop
 80075de:	46bd      	mov	sp, r7
 80075e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075e4:	4770      	bx	lr

080075e6 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80075e6:	b480      	push	{r7}
 80075e8:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80075ea:	bf00      	nop
 80075ec:	46bd      	mov	sp, r7
 80075ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075f2:	4770      	bx	lr

080075f4 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80075f4:	b580      	push	{r7, lr}
 80075f6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80075f8:	f000 f98e 	bl	8007918 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80075fc:	bf00      	nop
 80075fe:	bd80      	pop	{r7, pc}

08007600 <EXTI4_IRQHandler>:

/**
  * @brief This function handles EXTI line 4 interrupt.
  */
void EXTI4_IRQHandler(void)
{
 8007600:	b580      	push	{r7, lr}
 8007602:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI4_IRQn 0 */

  /* USER CODE END EXTI4_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(B1_Pin);
 8007604:	2010      	movs	r0, #16
 8007606:	f002 f875 	bl	80096f4 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI4_IRQn 1 */

  /* USER CODE END EXTI4_IRQn 1 */
}
 800760a:	bf00      	nop
 800760c:	bd80      	pop	{r7, pc}
	...

08007610 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8007610:	b580      	push	{r7, lr}
 8007612:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8007614:	4802      	ldr	r0, [pc, #8]	; (8007620 <TIM2_IRQHandler+0x10>)
 8007616:	f003 fbcf 	bl	800adb8 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 800761a:	bf00      	nop
 800761c:	bd80      	pop	{r7, pc}
 800761e:	bf00      	nop
 8007620:	200008f0 	.word	0x200008f0

08007624 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 8007624:	b580      	push	{r7, lr}
 8007626:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8007628:	4802      	ldr	r0, [pc, #8]	; (8007634 <USART1_IRQHandler+0x10>)
 800762a:	f004 fee7 	bl	800c3fc <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 800762e:	bf00      	nop
 8007630:	bd80      	pop	{r7, pc}
 8007632:	bf00      	nop
 8007634:	20000b8c 	.word	0x20000b8c

08007638 <USART3_IRQHandler>:

/**
  * @brief This function handles USART3 global interrupt.
  */
void USART3_IRQHandler(void)
{
 8007638:	b580      	push	{r7, lr}
 800763a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART3_IRQn 0 */

  /* USER CODE END USART3_IRQn 0 */
  HAL_UART_IRQHandler(&huart3);
 800763c:	4802      	ldr	r0, [pc, #8]	; (8007648 <USART3_IRQHandler+0x10>)
 800763e:	f004 fedd 	bl	800c3fc <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART3_IRQn 1 */

  /* USER CODE END USART3_IRQn 1 */
}
 8007642:	bf00      	nop
 8007644:	bd80      	pop	{r7, pc}
 8007646:	bf00      	nop
 8007648:	20000c14 	.word	0x20000c14

0800764c <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 800764c:	b580      	push	{r7, lr}
 800764e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(On_Board_Button_Pin);
 8007650:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8007654:	f002 f84e 	bl	80096f4 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8007658:	bf00      	nop
 800765a:	bd80      	pop	{r7, pc}

0800765c <DMA1_Stream7_IRQHandler>:

/**
  * @brief This function handles DMA1 stream7 global interrupt.
  */
void DMA1_Stream7_IRQHandler(void)
{
 800765c:	b580      	push	{r7, lr}
 800765e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream7_IRQn 0 */

  /* USER CODE END DMA1_Stream7_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_tim4_ch3);
 8007660:	4802      	ldr	r0, [pc, #8]	; (800766c <DMA1_Stream7_IRQHandler+0x10>)
 8007662:	f001 f9ef 	bl	8008a44 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream7_IRQn 1 */

  /* USER CODE END DMA1_Stream7_IRQn 1 */
}
 8007666:	bf00      	nop
 8007668:	bd80      	pop	{r7, pc}
 800766a:	bf00      	nop
 800766c:	20000ae8 	.word	0x20000ae8

08007670 <_getpid>:
 8007670:	b480      	push	{r7}
 8007672:	af00      	add	r7, sp, #0
 8007674:	2301      	movs	r3, #1
 8007676:	4618      	mov	r0, r3
 8007678:	46bd      	mov	sp, r7
 800767a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800767e:	4770      	bx	lr

08007680 <_kill>:
 8007680:	b580      	push	{r7, lr}
 8007682:	b082      	sub	sp, #8
 8007684:	af00      	add	r7, sp, #0
 8007686:	6078      	str	r0, [r7, #4]
 8007688:	6039      	str	r1, [r7, #0]
 800768a:	f005 fe1f 	bl	800d2cc <__errno>
 800768e:	4603      	mov	r3, r0
 8007690:	2216      	movs	r2, #22
 8007692:	601a      	str	r2, [r3, #0]
 8007694:	f04f 33ff 	mov.w	r3, #4294967295
 8007698:	4618      	mov	r0, r3
 800769a:	3708      	adds	r7, #8
 800769c:	46bd      	mov	sp, r7
 800769e:	bd80      	pop	{r7, pc}

080076a0 <_exit>:
 80076a0:	b580      	push	{r7, lr}
 80076a2:	b082      	sub	sp, #8
 80076a4:	af00      	add	r7, sp, #0
 80076a6:	6078      	str	r0, [r7, #4]
 80076a8:	f04f 31ff 	mov.w	r1, #4294967295
 80076ac:	6878      	ldr	r0, [r7, #4]
 80076ae:	f7ff ffe7 	bl	8007680 <_kill>
 80076b2:	e7fe      	b.n	80076b2 <_exit+0x12>

080076b4 <_read>:
 80076b4:	b580      	push	{r7, lr}
 80076b6:	b086      	sub	sp, #24
 80076b8:	af00      	add	r7, sp, #0
 80076ba:	60f8      	str	r0, [r7, #12]
 80076bc:	60b9      	str	r1, [r7, #8]
 80076be:	607a      	str	r2, [r7, #4]
 80076c0:	2300      	movs	r3, #0
 80076c2:	617b      	str	r3, [r7, #20]
 80076c4:	e00a      	b.n	80076dc <_read+0x28>
 80076c6:	f3af 8000 	nop.w
 80076ca:	4601      	mov	r1, r0
 80076cc:	68bb      	ldr	r3, [r7, #8]
 80076ce:	1c5a      	adds	r2, r3, #1
 80076d0:	60ba      	str	r2, [r7, #8]
 80076d2:	b2ca      	uxtb	r2, r1
 80076d4:	701a      	strb	r2, [r3, #0]
 80076d6:	697b      	ldr	r3, [r7, #20]
 80076d8:	3301      	adds	r3, #1
 80076da:	617b      	str	r3, [r7, #20]
 80076dc:	697a      	ldr	r2, [r7, #20]
 80076de:	687b      	ldr	r3, [r7, #4]
 80076e0:	429a      	cmp	r2, r3
 80076e2:	dbf0      	blt.n	80076c6 <_read+0x12>
 80076e4:	687b      	ldr	r3, [r7, #4]
 80076e6:	4618      	mov	r0, r3
 80076e8:	3718      	adds	r7, #24
 80076ea:	46bd      	mov	sp, r7
 80076ec:	bd80      	pop	{r7, pc}

080076ee <_write>:
 80076ee:	b580      	push	{r7, lr}
 80076f0:	b086      	sub	sp, #24
 80076f2:	af00      	add	r7, sp, #0
 80076f4:	60f8      	str	r0, [r7, #12]
 80076f6:	60b9      	str	r1, [r7, #8]
 80076f8:	607a      	str	r2, [r7, #4]
 80076fa:	2300      	movs	r3, #0
 80076fc:	617b      	str	r3, [r7, #20]
 80076fe:	e009      	b.n	8007714 <_write+0x26>
 8007700:	68bb      	ldr	r3, [r7, #8]
 8007702:	1c5a      	adds	r2, r3, #1
 8007704:	60ba      	str	r2, [r7, #8]
 8007706:	781b      	ldrb	r3, [r3, #0]
 8007708:	4618      	mov	r0, r3
 800770a:	f3af 8000 	nop.w
 800770e:	697b      	ldr	r3, [r7, #20]
 8007710:	3301      	adds	r3, #1
 8007712:	617b      	str	r3, [r7, #20]
 8007714:	697a      	ldr	r2, [r7, #20]
 8007716:	687b      	ldr	r3, [r7, #4]
 8007718:	429a      	cmp	r2, r3
 800771a:	dbf1      	blt.n	8007700 <_write+0x12>
 800771c:	687b      	ldr	r3, [r7, #4]
 800771e:	4618      	mov	r0, r3
 8007720:	3718      	adds	r7, #24
 8007722:	46bd      	mov	sp, r7
 8007724:	bd80      	pop	{r7, pc}

08007726 <_close>:
 8007726:	b480      	push	{r7}
 8007728:	b083      	sub	sp, #12
 800772a:	af00      	add	r7, sp, #0
 800772c:	6078      	str	r0, [r7, #4]
 800772e:	f04f 33ff 	mov.w	r3, #4294967295
 8007732:	4618      	mov	r0, r3
 8007734:	370c      	adds	r7, #12
 8007736:	46bd      	mov	sp, r7
 8007738:	f85d 7b04 	ldr.w	r7, [sp], #4
 800773c:	4770      	bx	lr

0800773e <_fstat>:
 800773e:	b480      	push	{r7}
 8007740:	b083      	sub	sp, #12
 8007742:	af00      	add	r7, sp, #0
 8007744:	6078      	str	r0, [r7, #4]
 8007746:	6039      	str	r1, [r7, #0]
 8007748:	683b      	ldr	r3, [r7, #0]
 800774a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800774e:	605a      	str	r2, [r3, #4]
 8007750:	2300      	movs	r3, #0
 8007752:	4618      	mov	r0, r3
 8007754:	370c      	adds	r7, #12
 8007756:	46bd      	mov	sp, r7
 8007758:	f85d 7b04 	ldr.w	r7, [sp], #4
 800775c:	4770      	bx	lr

0800775e <_isatty>:
 800775e:	b480      	push	{r7}
 8007760:	b083      	sub	sp, #12
 8007762:	af00      	add	r7, sp, #0
 8007764:	6078      	str	r0, [r7, #4]
 8007766:	2301      	movs	r3, #1
 8007768:	4618      	mov	r0, r3
 800776a:	370c      	adds	r7, #12
 800776c:	46bd      	mov	sp, r7
 800776e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007772:	4770      	bx	lr

08007774 <_lseek>:
 8007774:	b480      	push	{r7}
 8007776:	b085      	sub	sp, #20
 8007778:	af00      	add	r7, sp, #0
 800777a:	60f8      	str	r0, [r7, #12]
 800777c:	60b9      	str	r1, [r7, #8]
 800777e:	607a      	str	r2, [r7, #4]
 8007780:	2300      	movs	r3, #0
 8007782:	4618      	mov	r0, r3
 8007784:	3714      	adds	r7, #20
 8007786:	46bd      	mov	sp, r7
 8007788:	f85d 7b04 	ldr.w	r7, [sp], #4
 800778c:	4770      	bx	lr
	...

08007790 <_sbrk>:
 8007790:	b580      	push	{r7, lr}
 8007792:	b086      	sub	sp, #24
 8007794:	af00      	add	r7, sp, #0
 8007796:	6078      	str	r0, [r7, #4]
 8007798:	4a14      	ldr	r2, [pc, #80]	; (80077ec <_sbrk+0x5c>)
 800779a:	4b15      	ldr	r3, [pc, #84]	; (80077f0 <_sbrk+0x60>)
 800779c:	1ad3      	subs	r3, r2, r3
 800779e:	617b      	str	r3, [r7, #20]
 80077a0:	697b      	ldr	r3, [r7, #20]
 80077a2:	613b      	str	r3, [r7, #16]
 80077a4:	4b13      	ldr	r3, [pc, #76]	; (80077f4 <_sbrk+0x64>)
 80077a6:	681b      	ldr	r3, [r3, #0]
 80077a8:	2b00      	cmp	r3, #0
 80077aa:	d102      	bne.n	80077b2 <_sbrk+0x22>
 80077ac:	4b11      	ldr	r3, [pc, #68]	; (80077f4 <_sbrk+0x64>)
 80077ae:	4a12      	ldr	r2, [pc, #72]	; (80077f8 <_sbrk+0x68>)
 80077b0:	601a      	str	r2, [r3, #0]
 80077b2:	4b10      	ldr	r3, [pc, #64]	; (80077f4 <_sbrk+0x64>)
 80077b4:	681a      	ldr	r2, [r3, #0]
 80077b6:	687b      	ldr	r3, [r7, #4]
 80077b8:	4413      	add	r3, r2
 80077ba:	693a      	ldr	r2, [r7, #16]
 80077bc:	429a      	cmp	r2, r3
 80077be:	d207      	bcs.n	80077d0 <_sbrk+0x40>
 80077c0:	f005 fd84 	bl	800d2cc <__errno>
 80077c4:	4603      	mov	r3, r0
 80077c6:	220c      	movs	r2, #12
 80077c8:	601a      	str	r2, [r3, #0]
 80077ca:	f04f 33ff 	mov.w	r3, #4294967295
 80077ce:	e009      	b.n	80077e4 <_sbrk+0x54>
 80077d0:	4b08      	ldr	r3, [pc, #32]	; (80077f4 <_sbrk+0x64>)
 80077d2:	681b      	ldr	r3, [r3, #0]
 80077d4:	60fb      	str	r3, [r7, #12]
 80077d6:	4b07      	ldr	r3, [pc, #28]	; (80077f4 <_sbrk+0x64>)
 80077d8:	681a      	ldr	r2, [r3, #0]
 80077da:	687b      	ldr	r3, [r7, #4]
 80077dc:	4413      	add	r3, r2
 80077de:	4a05      	ldr	r2, [pc, #20]	; (80077f4 <_sbrk+0x64>)
 80077e0:	6013      	str	r3, [r2, #0]
 80077e2:	68fb      	ldr	r3, [r7, #12]
 80077e4:	4618      	mov	r0, r3
 80077e6:	3718      	adds	r7, #24
 80077e8:	46bd      	mov	sp, r7
 80077ea:	bd80      	pop	{r7, pc}
 80077ec:	20020000 	.word	0x20020000
 80077f0:	00000400 	.word	0x00000400
 80077f4:	20000c6c 	.word	0x20000c6c
 80077f8:	20000ca8 	.word	0x20000ca8

080077fc <SystemInit>:
 80077fc:	b480      	push	{r7}
 80077fe:	af00      	add	r7, sp, #0
 8007800:	4b06      	ldr	r3, [pc, #24]	; (800781c <SystemInit+0x20>)
 8007802:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8007806:	4a05      	ldr	r2, [pc, #20]	; (800781c <SystemInit+0x20>)
 8007808:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800780c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8007810:	bf00      	nop
 8007812:	46bd      	mov	sp, r7
 8007814:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007818:	4770      	bx	lr
 800781a:	bf00      	nop
 800781c:	e000ed00 	.word	0xe000ed00

08007820 <Reset_Handler>:
 8007820:	f8df d034 	ldr.w	sp, [pc, #52]	; 8007858 <LoopFillZerobss+0x12>
 8007824:	480d      	ldr	r0, [pc, #52]	; (800785c <LoopFillZerobss+0x16>)
 8007826:	490e      	ldr	r1, [pc, #56]	; (8007860 <LoopFillZerobss+0x1a>)
 8007828:	4a0e      	ldr	r2, [pc, #56]	; (8007864 <LoopFillZerobss+0x1e>)
 800782a:	2300      	movs	r3, #0
 800782c:	e002      	b.n	8007834 <LoopCopyDataInit>

0800782e <CopyDataInit>:
 800782e:	58d4      	ldr	r4, [r2, r3]
 8007830:	50c4      	str	r4, [r0, r3]
 8007832:	3304      	adds	r3, #4

08007834 <LoopCopyDataInit>:
 8007834:	18c4      	adds	r4, r0, r3
 8007836:	428c      	cmp	r4, r1
 8007838:	d3f9      	bcc.n	800782e <CopyDataInit>
 800783a:	4a0b      	ldr	r2, [pc, #44]	; (8007868 <LoopFillZerobss+0x22>)
 800783c:	4c0b      	ldr	r4, [pc, #44]	; (800786c <LoopFillZerobss+0x26>)
 800783e:	2300      	movs	r3, #0
 8007840:	e001      	b.n	8007846 <LoopFillZerobss>

08007842 <FillZerobss>:
 8007842:	6013      	str	r3, [r2, #0]
 8007844:	3204      	adds	r2, #4

08007846 <LoopFillZerobss>:
 8007846:	42a2      	cmp	r2, r4
 8007848:	d3fb      	bcc.n	8007842 <FillZerobss>
 800784a:	f7ff ffd7 	bl	80077fc <SystemInit>
 800784e:	f005 fd43 	bl	800d2d8 <__libc_init_array>
 8007852:	f7fe fb17 	bl	8005e84 <main>
 8007856:	4770      	bx	lr
 8007858:	20020000 	.word	0x20020000
 800785c:	20000000 	.word	0x20000000
 8007860:	2000030c 	.word	0x2000030c
 8007864:	08011d20 	.word	0x08011d20
 8007868:	20000310 	.word	0x20000310
 800786c:	20000ca4 	.word	0x20000ca4

08007870 <ADC_IRQHandler>:
 8007870:	e7fe      	b.n	8007870 <ADC_IRQHandler>
	...

08007874 <HAL_Init>:
 8007874:	b580      	push	{r7, lr}
 8007876:	af00      	add	r7, sp, #0
 8007878:	4b0e      	ldr	r3, [pc, #56]	; (80078b4 <HAL_Init+0x40>)
 800787a:	681b      	ldr	r3, [r3, #0]
 800787c:	4a0d      	ldr	r2, [pc, #52]	; (80078b4 <HAL_Init+0x40>)
 800787e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8007882:	6013      	str	r3, [r2, #0]
 8007884:	4b0b      	ldr	r3, [pc, #44]	; (80078b4 <HAL_Init+0x40>)
 8007886:	681b      	ldr	r3, [r3, #0]
 8007888:	4a0a      	ldr	r2, [pc, #40]	; (80078b4 <HAL_Init+0x40>)
 800788a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800788e:	6013      	str	r3, [r2, #0]
 8007890:	4b08      	ldr	r3, [pc, #32]	; (80078b4 <HAL_Init+0x40>)
 8007892:	681b      	ldr	r3, [r3, #0]
 8007894:	4a07      	ldr	r2, [pc, #28]	; (80078b4 <HAL_Init+0x40>)
 8007896:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800789a:	6013      	str	r3, [r2, #0]
 800789c:	2003      	movs	r0, #3
 800789e:	f000 fee9 	bl	8008674 <HAL_NVIC_SetPriorityGrouping>
 80078a2:	2000      	movs	r0, #0
 80078a4:	f000 f808 	bl	80078b8 <HAL_InitTick>
 80078a8:	f7ff fad0 	bl	8006e4c <HAL_MspInit>
 80078ac:	2300      	movs	r3, #0
 80078ae:	4618      	mov	r0, r3
 80078b0:	bd80      	pop	{r7, pc}
 80078b2:	bf00      	nop
 80078b4:	40023c00 	.word	0x40023c00

080078b8 <HAL_InitTick>:
 80078b8:	b580      	push	{r7, lr}
 80078ba:	b082      	sub	sp, #8
 80078bc:	af00      	add	r7, sp, #0
 80078be:	6078      	str	r0, [r7, #4]
 80078c0:	4b12      	ldr	r3, [pc, #72]	; (800790c <HAL_InitTick+0x54>)
 80078c2:	681a      	ldr	r2, [r3, #0]
 80078c4:	4b12      	ldr	r3, [pc, #72]	; (8007910 <HAL_InitTick+0x58>)
 80078c6:	781b      	ldrb	r3, [r3, #0]
 80078c8:	4619      	mov	r1, r3
 80078ca:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80078ce:	fbb3 f3f1 	udiv	r3, r3, r1
 80078d2:	fbb2 f3f3 	udiv	r3, r2, r3
 80078d6:	4618      	mov	r0, r3
 80078d8:	f000 ff0f 	bl	80086fa <HAL_SYSTICK_Config>
 80078dc:	4603      	mov	r3, r0
 80078de:	2b00      	cmp	r3, #0
 80078e0:	d001      	beq.n	80078e6 <HAL_InitTick+0x2e>
 80078e2:	2301      	movs	r3, #1
 80078e4:	e00e      	b.n	8007904 <HAL_InitTick+0x4c>
 80078e6:	687b      	ldr	r3, [r7, #4]
 80078e8:	2b0f      	cmp	r3, #15
 80078ea:	d80a      	bhi.n	8007902 <HAL_InitTick+0x4a>
 80078ec:	2200      	movs	r2, #0
 80078ee:	6879      	ldr	r1, [r7, #4]
 80078f0:	f04f 30ff 	mov.w	r0, #4294967295
 80078f4:	f000 fec9 	bl	800868a <HAL_NVIC_SetPriority>
 80078f8:	4a06      	ldr	r2, [pc, #24]	; (8007914 <HAL_InitTick+0x5c>)
 80078fa:	687b      	ldr	r3, [r7, #4]
 80078fc:	6013      	str	r3, [r2, #0]
 80078fe:	2300      	movs	r3, #0
 8007900:	e000      	b.n	8007904 <HAL_InitTick+0x4c>
 8007902:	2301      	movs	r3, #1
 8007904:	4618      	mov	r0, r3
 8007906:	3708      	adds	r7, #8
 8007908:	46bd      	mov	sp, r7
 800790a:	bd80      	pop	{r7, pc}
 800790c:	20000130 	.word	0x20000130
 8007910:	20000138 	.word	0x20000138
 8007914:	20000134 	.word	0x20000134

08007918 <HAL_IncTick>:
 8007918:	b480      	push	{r7}
 800791a:	af00      	add	r7, sp, #0
 800791c:	4b06      	ldr	r3, [pc, #24]	; (8007938 <HAL_IncTick+0x20>)
 800791e:	781b      	ldrb	r3, [r3, #0]
 8007920:	461a      	mov	r2, r3
 8007922:	4b06      	ldr	r3, [pc, #24]	; (800793c <HAL_IncTick+0x24>)
 8007924:	681b      	ldr	r3, [r3, #0]
 8007926:	4413      	add	r3, r2
 8007928:	4a04      	ldr	r2, [pc, #16]	; (800793c <HAL_IncTick+0x24>)
 800792a:	6013      	str	r3, [r2, #0]
 800792c:	bf00      	nop
 800792e:	46bd      	mov	sp, r7
 8007930:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007934:	4770      	bx	lr
 8007936:	bf00      	nop
 8007938:	20000138 	.word	0x20000138
 800793c:	20000c70 	.word	0x20000c70

08007940 <HAL_GetTick>:
 8007940:	b480      	push	{r7}
 8007942:	af00      	add	r7, sp, #0
 8007944:	4b03      	ldr	r3, [pc, #12]	; (8007954 <HAL_GetTick+0x14>)
 8007946:	681b      	ldr	r3, [r3, #0]
 8007948:	4618      	mov	r0, r3
 800794a:	46bd      	mov	sp, r7
 800794c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007950:	4770      	bx	lr
 8007952:	bf00      	nop
 8007954:	20000c70 	.word	0x20000c70

08007958 <HAL_Delay>:
 8007958:	b580      	push	{r7, lr}
 800795a:	b084      	sub	sp, #16
 800795c:	af00      	add	r7, sp, #0
 800795e:	6078      	str	r0, [r7, #4]
 8007960:	f7ff ffee 	bl	8007940 <HAL_GetTick>
 8007964:	60b8      	str	r0, [r7, #8]
 8007966:	687b      	ldr	r3, [r7, #4]
 8007968:	60fb      	str	r3, [r7, #12]
 800796a:	68fb      	ldr	r3, [r7, #12]
 800796c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007970:	d005      	beq.n	800797e <HAL_Delay+0x26>
 8007972:	4b0a      	ldr	r3, [pc, #40]	; (800799c <HAL_Delay+0x44>)
 8007974:	781b      	ldrb	r3, [r3, #0]
 8007976:	461a      	mov	r2, r3
 8007978:	68fb      	ldr	r3, [r7, #12]
 800797a:	4413      	add	r3, r2
 800797c:	60fb      	str	r3, [r7, #12]
 800797e:	bf00      	nop
 8007980:	f7ff ffde 	bl	8007940 <HAL_GetTick>
 8007984:	4602      	mov	r2, r0
 8007986:	68bb      	ldr	r3, [r7, #8]
 8007988:	1ad3      	subs	r3, r2, r3
 800798a:	68fa      	ldr	r2, [r7, #12]
 800798c:	429a      	cmp	r2, r3
 800798e:	d8f7      	bhi.n	8007980 <HAL_Delay+0x28>
 8007990:	bf00      	nop
 8007992:	bf00      	nop
 8007994:	3710      	adds	r7, #16
 8007996:	46bd      	mov	sp, r7
 8007998:	bd80      	pop	{r7, pc}
 800799a:	bf00      	nop
 800799c:	20000138 	.word	0x20000138

080079a0 <HAL_ADC_Init>:
 80079a0:	b580      	push	{r7, lr}
 80079a2:	b084      	sub	sp, #16
 80079a4:	af00      	add	r7, sp, #0
 80079a6:	6078      	str	r0, [r7, #4]
 80079a8:	2300      	movs	r3, #0
 80079aa:	73fb      	strb	r3, [r7, #15]
 80079ac:	687b      	ldr	r3, [r7, #4]
 80079ae:	2b00      	cmp	r3, #0
 80079b0:	d101      	bne.n	80079b6 <HAL_ADC_Init+0x16>
 80079b2:	2301      	movs	r3, #1
 80079b4:	e033      	b.n	8007a1e <HAL_ADC_Init+0x7e>
 80079b6:	687b      	ldr	r3, [r7, #4]
 80079b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80079ba:	2b00      	cmp	r3, #0
 80079bc:	d109      	bne.n	80079d2 <HAL_ADC_Init+0x32>
 80079be:	6878      	ldr	r0, [r7, #4]
 80079c0:	f7ff fa6c 	bl	8006e9c <HAL_ADC_MspInit>
 80079c4:	687b      	ldr	r3, [r7, #4]
 80079c6:	2200      	movs	r2, #0
 80079c8:	645a      	str	r2, [r3, #68]	; 0x44
 80079ca:	687b      	ldr	r3, [r7, #4]
 80079cc:	2200      	movs	r2, #0
 80079ce:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80079d2:	687b      	ldr	r3, [r7, #4]
 80079d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80079d6:	f003 0310 	and.w	r3, r3, #16
 80079da:	2b00      	cmp	r3, #0
 80079dc:	d118      	bne.n	8007a10 <HAL_ADC_Init+0x70>
 80079de:	687b      	ldr	r3, [r7, #4]
 80079e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80079e2:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 80079e6:	f023 0302 	bic.w	r3, r3, #2
 80079ea:	f043 0202 	orr.w	r2, r3, #2
 80079ee:	687b      	ldr	r3, [r7, #4]
 80079f0:	641a      	str	r2, [r3, #64]	; 0x40
 80079f2:	6878      	ldr	r0, [r7, #4]
 80079f4:	f000 fab4 	bl	8007f60 <ADC_Init>
 80079f8:	687b      	ldr	r3, [r7, #4]
 80079fa:	2200      	movs	r2, #0
 80079fc:	645a      	str	r2, [r3, #68]	; 0x44
 80079fe:	687b      	ldr	r3, [r7, #4]
 8007a00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007a02:	f023 0303 	bic.w	r3, r3, #3
 8007a06:	f043 0201 	orr.w	r2, r3, #1
 8007a0a:	687b      	ldr	r3, [r7, #4]
 8007a0c:	641a      	str	r2, [r3, #64]	; 0x40
 8007a0e:	e001      	b.n	8007a14 <HAL_ADC_Init+0x74>
 8007a10:	2301      	movs	r3, #1
 8007a12:	73fb      	strb	r3, [r7, #15]
 8007a14:	687b      	ldr	r3, [r7, #4]
 8007a16:	2200      	movs	r2, #0
 8007a18:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007a1c:	7bfb      	ldrb	r3, [r7, #15]
 8007a1e:	4618      	mov	r0, r3
 8007a20:	3710      	adds	r7, #16
 8007a22:	46bd      	mov	sp, r7
 8007a24:	bd80      	pop	{r7, pc}
	...

08007a28 <HAL_ADC_Start>:
 8007a28:	b480      	push	{r7}
 8007a2a:	b085      	sub	sp, #20
 8007a2c:	af00      	add	r7, sp, #0
 8007a2e:	6078      	str	r0, [r7, #4]
 8007a30:	2300      	movs	r3, #0
 8007a32:	60bb      	str	r3, [r7, #8]
 8007a34:	687b      	ldr	r3, [r7, #4]
 8007a36:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007a3a:	2b01      	cmp	r3, #1
 8007a3c:	d101      	bne.n	8007a42 <HAL_ADC_Start+0x1a>
 8007a3e:	2302      	movs	r3, #2
 8007a40:	e0b2      	b.n	8007ba8 <HAL_ADC_Start+0x180>
 8007a42:	687b      	ldr	r3, [r7, #4]
 8007a44:	2201      	movs	r2, #1
 8007a46:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007a4a:	687b      	ldr	r3, [r7, #4]
 8007a4c:	681b      	ldr	r3, [r3, #0]
 8007a4e:	689b      	ldr	r3, [r3, #8]
 8007a50:	f003 0301 	and.w	r3, r3, #1
 8007a54:	2b01      	cmp	r3, #1
 8007a56:	d018      	beq.n	8007a8a <HAL_ADC_Start+0x62>
 8007a58:	687b      	ldr	r3, [r7, #4]
 8007a5a:	681b      	ldr	r3, [r3, #0]
 8007a5c:	689a      	ldr	r2, [r3, #8]
 8007a5e:	687b      	ldr	r3, [r7, #4]
 8007a60:	681b      	ldr	r3, [r3, #0]
 8007a62:	f042 0201 	orr.w	r2, r2, #1
 8007a66:	609a      	str	r2, [r3, #8]
 8007a68:	4b52      	ldr	r3, [pc, #328]	; (8007bb4 <HAL_ADC_Start+0x18c>)
 8007a6a:	681b      	ldr	r3, [r3, #0]
 8007a6c:	4a52      	ldr	r2, [pc, #328]	; (8007bb8 <HAL_ADC_Start+0x190>)
 8007a6e:	fba2 2303 	umull	r2, r3, r2, r3
 8007a72:	0c9a      	lsrs	r2, r3, #18
 8007a74:	4613      	mov	r3, r2
 8007a76:	005b      	lsls	r3, r3, #1
 8007a78:	4413      	add	r3, r2
 8007a7a:	60bb      	str	r3, [r7, #8]
 8007a7c:	e002      	b.n	8007a84 <HAL_ADC_Start+0x5c>
 8007a7e:	68bb      	ldr	r3, [r7, #8]
 8007a80:	3b01      	subs	r3, #1
 8007a82:	60bb      	str	r3, [r7, #8]
 8007a84:	68bb      	ldr	r3, [r7, #8]
 8007a86:	2b00      	cmp	r3, #0
 8007a88:	d1f9      	bne.n	8007a7e <HAL_ADC_Start+0x56>
 8007a8a:	687b      	ldr	r3, [r7, #4]
 8007a8c:	681b      	ldr	r3, [r3, #0]
 8007a8e:	689b      	ldr	r3, [r3, #8]
 8007a90:	f003 0301 	and.w	r3, r3, #1
 8007a94:	2b01      	cmp	r3, #1
 8007a96:	d17a      	bne.n	8007b8e <HAL_ADC_Start+0x166>
 8007a98:	687b      	ldr	r3, [r7, #4]
 8007a9a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007a9c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8007aa0:	f023 0301 	bic.w	r3, r3, #1
 8007aa4:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8007aa8:	687b      	ldr	r3, [r7, #4]
 8007aaa:	641a      	str	r2, [r3, #64]	; 0x40
 8007aac:	687b      	ldr	r3, [r7, #4]
 8007aae:	681b      	ldr	r3, [r3, #0]
 8007ab0:	685b      	ldr	r3, [r3, #4]
 8007ab2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007ab6:	2b00      	cmp	r3, #0
 8007ab8:	d007      	beq.n	8007aca <HAL_ADC_Start+0xa2>
 8007aba:	687b      	ldr	r3, [r7, #4]
 8007abc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007abe:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8007ac2:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 8007ac6:	687b      	ldr	r3, [r7, #4]
 8007ac8:	641a      	str	r2, [r3, #64]	; 0x40
 8007aca:	687b      	ldr	r3, [r7, #4]
 8007acc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007ace:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8007ad2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007ad6:	d106      	bne.n	8007ae6 <HAL_ADC_Start+0xbe>
 8007ad8:	687b      	ldr	r3, [r7, #4]
 8007ada:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007adc:	f023 0206 	bic.w	r2, r3, #6
 8007ae0:	687b      	ldr	r3, [r7, #4]
 8007ae2:	645a      	str	r2, [r3, #68]	; 0x44
 8007ae4:	e002      	b.n	8007aec <HAL_ADC_Start+0xc4>
 8007ae6:	687b      	ldr	r3, [r7, #4]
 8007ae8:	2200      	movs	r2, #0
 8007aea:	645a      	str	r2, [r3, #68]	; 0x44
 8007aec:	687b      	ldr	r3, [r7, #4]
 8007aee:	2200      	movs	r2, #0
 8007af0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007af4:	4b31      	ldr	r3, [pc, #196]	; (8007bbc <HAL_ADC_Start+0x194>)
 8007af6:	60fb      	str	r3, [r7, #12]
 8007af8:	687b      	ldr	r3, [r7, #4]
 8007afa:	681b      	ldr	r3, [r3, #0]
 8007afc:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8007b00:	601a      	str	r2, [r3, #0]
 8007b02:	68fb      	ldr	r3, [r7, #12]
 8007b04:	685b      	ldr	r3, [r3, #4]
 8007b06:	f003 031f 	and.w	r3, r3, #31
 8007b0a:	2b00      	cmp	r3, #0
 8007b0c:	d12a      	bne.n	8007b64 <HAL_ADC_Start+0x13c>
 8007b0e:	687b      	ldr	r3, [r7, #4]
 8007b10:	681b      	ldr	r3, [r3, #0]
 8007b12:	4a2b      	ldr	r2, [pc, #172]	; (8007bc0 <HAL_ADC_Start+0x198>)
 8007b14:	4293      	cmp	r3, r2
 8007b16:	d015      	beq.n	8007b44 <HAL_ADC_Start+0x11c>
 8007b18:	687b      	ldr	r3, [r7, #4]
 8007b1a:	681b      	ldr	r3, [r3, #0]
 8007b1c:	4a29      	ldr	r2, [pc, #164]	; (8007bc4 <HAL_ADC_Start+0x19c>)
 8007b1e:	4293      	cmp	r3, r2
 8007b20:	d105      	bne.n	8007b2e <HAL_ADC_Start+0x106>
 8007b22:	4b26      	ldr	r3, [pc, #152]	; (8007bbc <HAL_ADC_Start+0x194>)
 8007b24:	685b      	ldr	r3, [r3, #4]
 8007b26:	f003 031f 	and.w	r3, r3, #31
 8007b2a:	2b00      	cmp	r3, #0
 8007b2c:	d00a      	beq.n	8007b44 <HAL_ADC_Start+0x11c>
 8007b2e:	687b      	ldr	r3, [r7, #4]
 8007b30:	681b      	ldr	r3, [r3, #0]
 8007b32:	4a25      	ldr	r2, [pc, #148]	; (8007bc8 <HAL_ADC_Start+0x1a0>)
 8007b34:	4293      	cmp	r3, r2
 8007b36:	d136      	bne.n	8007ba6 <HAL_ADC_Start+0x17e>
 8007b38:	4b20      	ldr	r3, [pc, #128]	; (8007bbc <HAL_ADC_Start+0x194>)
 8007b3a:	685b      	ldr	r3, [r3, #4]
 8007b3c:	f003 0310 	and.w	r3, r3, #16
 8007b40:	2b00      	cmp	r3, #0
 8007b42:	d130      	bne.n	8007ba6 <HAL_ADC_Start+0x17e>
 8007b44:	687b      	ldr	r3, [r7, #4]
 8007b46:	681b      	ldr	r3, [r3, #0]
 8007b48:	689b      	ldr	r3, [r3, #8]
 8007b4a:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8007b4e:	2b00      	cmp	r3, #0
 8007b50:	d129      	bne.n	8007ba6 <HAL_ADC_Start+0x17e>
 8007b52:	687b      	ldr	r3, [r7, #4]
 8007b54:	681b      	ldr	r3, [r3, #0]
 8007b56:	689a      	ldr	r2, [r3, #8]
 8007b58:	687b      	ldr	r3, [r7, #4]
 8007b5a:	681b      	ldr	r3, [r3, #0]
 8007b5c:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8007b60:	609a      	str	r2, [r3, #8]
 8007b62:	e020      	b.n	8007ba6 <HAL_ADC_Start+0x17e>
 8007b64:	687b      	ldr	r3, [r7, #4]
 8007b66:	681b      	ldr	r3, [r3, #0]
 8007b68:	4a15      	ldr	r2, [pc, #84]	; (8007bc0 <HAL_ADC_Start+0x198>)
 8007b6a:	4293      	cmp	r3, r2
 8007b6c:	d11b      	bne.n	8007ba6 <HAL_ADC_Start+0x17e>
 8007b6e:	687b      	ldr	r3, [r7, #4]
 8007b70:	681b      	ldr	r3, [r3, #0]
 8007b72:	689b      	ldr	r3, [r3, #8]
 8007b74:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8007b78:	2b00      	cmp	r3, #0
 8007b7a:	d114      	bne.n	8007ba6 <HAL_ADC_Start+0x17e>
 8007b7c:	687b      	ldr	r3, [r7, #4]
 8007b7e:	681b      	ldr	r3, [r3, #0]
 8007b80:	689a      	ldr	r2, [r3, #8]
 8007b82:	687b      	ldr	r3, [r7, #4]
 8007b84:	681b      	ldr	r3, [r3, #0]
 8007b86:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8007b8a:	609a      	str	r2, [r3, #8]
 8007b8c:	e00b      	b.n	8007ba6 <HAL_ADC_Start+0x17e>
 8007b8e:	687b      	ldr	r3, [r7, #4]
 8007b90:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007b92:	f043 0210 	orr.w	r2, r3, #16
 8007b96:	687b      	ldr	r3, [r7, #4]
 8007b98:	641a      	str	r2, [r3, #64]	; 0x40
 8007b9a:	687b      	ldr	r3, [r7, #4]
 8007b9c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007b9e:	f043 0201 	orr.w	r2, r3, #1
 8007ba2:	687b      	ldr	r3, [r7, #4]
 8007ba4:	645a      	str	r2, [r3, #68]	; 0x44
 8007ba6:	2300      	movs	r3, #0
 8007ba8:	4618      	mov	r0, r3
 8007baa:	3714      	adds	r7, #20
 8007bac:	46bd      	mov	sp, r7
 8007bae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bb2:	4770      	bx	lr
 8007bb4:	20000130 	.word	0x20000130
 8007bb8:	431bde83 	.word	0x431bde83
 8007bbc:	40012300 	.word	0x40012300
 8007bc0:	40012000 	.word	0x40012000
 8007bc4:	40012100 	.word	0x40012100
 8007bc8:	40012200 	.word	0x40012200

08007bcc <HAL_ADC_PollForConversion>:
 8007bcc:	b580      	push	{r7, lr}
 8007bce:	b084      	sub	sp, #16
 8007bd0:	af00      	add	r7, sp, #0
 8007bd2:	6078      	str	r0, [r7, #4]
 8007bd4:	6039      	str	r1, [r7, #0]
 8007bd6:	2300      	movs	r3, #0
 8007bd8:	60fb      	str	r3, [r7, #12]
 8007bda:	687b      	ldr	r3, [r7, #4]
 8007bdc:	681b      	ldr	r3, [r3, #0]
 8007bde:	689b      	ldr	r3, [r3, #8]
 8007be0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007be4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007be8:	d113      	bne.n	8007c12 <HAL_ADC_PollForConversion+0x46>
 8007bea:	687b      	ldr	r3, [r7, #4]
 8007bec:	681b      	ldr	r3, [r3, #0]
 8007bee:	689b      	ldr	r3, [r3, #8]
 8007bf0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007bf4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007bf8:	d10b      	bne.n	8007c12 <HAL_ADC_PollForConversion+0x46>
 8007bfa:	687b      	ldr	r3, [r7, #4]
 8007bfc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007bfe:	f043 0220 	orr.w	r2, r3, #32
 8007c02:	687b      	ldr	r3, [r7, #4]
 8007c04:	641a      	str	r2, [r3, #64]	; 0x40
 8007c06:	687b      	ldr	r3, [r7, #4]
 8007c08:	2200      	movs	r2, #0
 8007c0a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007c0e:	2301      	movs	r3, #1
 8007c10:	e063      	b.n	8007cda <HAL_ADC_PollForConversion+0x10e>
 8007c12:	f7ff fe95 	bl	8007940 <HAL_GetTick>
 8007c16:	60f8      	str	r0, [r7, #12]
 8007c18:	e021      	b.n	8007c5e <HAL_ADC_PollForConversion+0x92>
 8007c1a:	683b      	ldr	r3, [r7, #0]
 8007c1c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007c20:	d01d      	beq.n	8007c5e <HAL_ADC_PollForConversion+0x92>
 8007c22:	683b      	ldr	r3, [r7, #0]
 8007c24:	2b00      	cmp	r3, #0
 8007c26:	d007      	beq.n	8007c38 <HAL_ADC_PollForConversion+0x6c>
 8007c28:	f7ff fe8a 	bl	8007940 <HAL_GetTick>
 8007c2c:	4602      	mov	r2, r0
 8007c2e:	68fb      	ldr	r3, [r7, #12]
 8007c30:	1ad3      	subs	r3, r2, r3
 8007c32:	683a      	ldr	r2, [r7, #0]
 8007c34:	429a      	cmp	r2, r3
 8007c36:	d212      	bcs.n	8007c5e <HAL_ADC_PollForConversion+0x92>
 8007c38:	687b      	ldr	r3, [r7, #4]
 8007c3a:	681b      	ldr	r3, [r3, #0]
 8007c3c:	681b      	ldr	r3, [r3, #0]
 8007c3e:	f003 0302 	and.w	r3, r3, #2
 8007c42:	2b02      	cmp	r3, #2
 8007c44:	d00b      	beq.n	8007c5e <HAL_ADC_PollForConversion+0x92>
 8007c46:	687b      	ldr	r3, [r7, #4]
 8007c48:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007c4a:	f043 0204 	orr.w	r2, r3, #4
 8007c4e:	687b      	ldr	r3, [r7, #4]
 8007c50:	641a      	str	r2, [r3, #64]	; 0x40
 8007c52:	687b      	ldr	r3, [r7, #4]
 8007c54:	2200      	movs	r2, #0
 8007c56:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007c5a:	2303      	movs	r3, #3
 8007c5c:	e03d      	b.n	8007cda <HAL_ADC_PollForConversion+0x10e>
 8007c5e:	687b      	ldr	r3, [r7, #4]
 8007c60:	681b      	ldr	r3, [r3, #0]
 8007c62:	681b      	ldr	r3, [r3, #0]
 8007c64:	f003 0302 	and.w	r3, r3, #2
 8007c68:	2b02      	cmp	r3, #2
 8007c6a:	d1d6      	bne.n	8007c1a <HAL_ADC_PollForConversion+0x4e>
 8007c6c:	687b      	ldr	r3, [r7, #4]
 8007c6e:	681b      	ldr	r3, [r3, #0]
 8007c70:	f06f 0212 	mvn.w	r2, #18
 8007c74:	601a      	str	r2, [r3, #0]
 8007c76:	687b      	ldr	r3, [r7, #4]
 8007c78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007c7a:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8007c7e:	687b      	ldr	r3, [r7, #4]
 8007c80:	641a      	str	r2, [r3, #64]	; 0x40
 8007c82:	687b      	ldr	r3, [r7, #4]
 8007c84:	681b      	ldr	r3, [r3, #0]
 8007c86:	689b      	ldr	r3, [r3, #8]
 8007c88:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8007c8c:	2b00      	cmp	r3, #0
 8007c8e:	d123      	bne.n	8007cd8 <HAL_ADC_PollForConversion+0x10c>
 8007c90:	687b      	ldr	r3, [r7, #4]
 8007c92:	7e1b      	ldrb	r3, [r3, #24]
 8007c94:	2b00      	cmp	r3, #0
 8007c96:	d11f      	bne.n	8007cd8 <HAL_ADC_PollForConversion+0x10c>
 8007c98:	687b      	ldr	r3, [r7, #4]
 8007c9a:	681b      	ldr	r3, [r3, #0]
 8007c9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007c9e:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 8007ca2:	2b00      	cmp	r3, #0
 8007ca4:	d006      	beq.n	8007cb4 <HAL_ADC_PollForConversion+0xe8>
 8007ca6:	687b      	ldr	r3, [r7, #4]
 8007ca8:	681b      	ldr	r3, [r3, #0]
 8007caa:	689b      	ldr	r3, [r3, #8]
 8007cac:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007cb0:	2b00      	cmp	r3, #0
 8007cb2:	d111      	bne.n	8007cd8 <HAL_ADC_PollForConversion+0x10c>
 8007cb4:	687b      	ldr	r3, [r7, #4]
 8007cb6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007cb8:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8007cbc:	687b      	ldr	r3, [r7, #4]
 8007cbe:	641a      	str	r2, [r3, #64]	; 0x40
 8007cc0:	687b      	ldr	r3, [r7, #4]
 8007cc2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007cc4:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8007cc8:	2b00      	cmp	r3, #0
 8007cca:	d105      	bne.n	8007cd8 <HAL_ADC_PollForConversion+0x10c>
 8007ccc:	687b      	ldr	r3, [r7, #4]
 8007cce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007cd0:	f043 0201 	orr.w	r2, r3, #1
 8007cd4:	687b      	ldr	r3, [r7, #4]
 8007cd6:	641a      	str	r2, [r3, #64]	; 0x40
 8007cd8:	2300      	movs	r3, #0
 8007cda:	4618      	mov	r0, r3
 8007cdc:	3710      	adds	r7, #16
 8007cde:	46bd      	mov	sp, r7
 8007ce0:	bd80      	pop	{r7, pc}

08007ce2 <HAL_ADC_GetValue>:
 8007ce2:	b480      	push	{r7}
 8007ce4:	b083      	sub	sp, #12
 8007ce6:	af00      	add	r7, sp, #0
 8007ce8:	6078      	str	r0, [r7, #4]
 8007cea:	687b      	ldr	r3, [r7, #4]
 8007cec:	681b      	ldr	r3, [r3, #0]
 8007cee:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007cf0:	4618      	mov	r0, r3
 8007cf2:	370c      	adds	r7, #12
 8007cf4:	46bd      	mov	sp, r7
 8007cf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cfa:	4770      	bx	lr

08007cfc <HAL_ADC_ConfigChannel>:
 8007cfc:	b480      	push	{r7}
 8007cfe:	b085      	sub	sp, #20
 8007d00:	af00      	add	r7, sp, #0
 8007d02:	6078      	str	r0, [r7, #4]
 8007d04:	6039      	str	r1, [r7, #0]
 8007d06:	2300      	movs	r3, #0
 8007d08:	60bb      	str	r3, [r7, #8]
 8007d0a:	687b      	ldr	r3, [r7, #4]
 8007d0c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007d10:	2b01      	cmp	r3, #1
 8007d12:	d101      	bne.n	8007d18 <HAL_ADC_ConfigChannel+0x1c>
 8007d14:	2302      	movs	r3, #2
 8007d16:	e113      	b.n	8007f40 <HAL_ADC_ConfigChannel+0x244>
 8007d18:	687b      	ldr	r3, [r7, #4]
 8007d1a:	2201      	movs	r2, #1
 8007d1c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007d20:	683b      	ldr	r3, [r7, #0]
 8007d22:	681b      	ldr	r3, [r3, #0]
 8007d24:	2b09      	cmp	r3, #9
 8007d26:	d925      	bls.n	8007d74 <HAL_ADC_ConfigChannel+0x78>
 8007d28:	687b      	ldr	r3, [r7, #4]
 8007d2a:	681b      	ldr	r3, [r3, #0]
 8007d2c:	68d9      	ldr	r1, [r3, #12]
 8007d2e:	683b      	ldr	r3, [r7, #0]
 8007d30:	681b      	ldr	r3, [r3, #0]
 8007d32:	b29b      	uxth	r3, r3
 8007d34:	461a      	mov	r2, r3
 8007d36:	4613      	mov	r3, r2
 8007d38:	005b      	lsls	r3, r3, #1
 8007d3a:	4413      	add	r3, r2
 8007d3c:	3b1e      	subs	r3, #30
 8007d3e:	2207      	movs	r2, #7
 8007d40:	fa02 f303 	lsl.w	r3, r2, r3
 8007d44:	43da      	mvns	r2, r3
 8007d46:	687b      	ldr	r3, [r7, #4]
 8007d48:	681b      	ldr	r3, [r3, #0]
 8007d4a:	400a      	ands	r2, r1
 8007d4c:	60da      	str	r2, [r3, #12]
 8007d4e:	687b      	ldr	r3, [r7, #4]
 8007d50:	681b      	ldr	r3, [r3, #0]
 8007d52:	68d9      	ldr	r1, [r3, #12]
 8007d54:	683b      	ldr	r3, [r7, #0]
 8007d56:	689a      	ldr	r2, [r3, #8]
 8007d58:	683b      	ldr	r3, [r7, #0]
 8007d5a:	681b      	ldr	r3, [r3, #0]
 8007d5c:	b29b      	uxth	r3, r3
 8007d5e:	4618      	mov	r0, r3
 8007d60:	4603      	mov	r3, r0
 8007d62:	005b      	lsls	r3, r3, #1
 8007d64:	4403      	add	r3, r0
 8007d66:	3b1e      	subs	r3, #30
 8007d68:	409a      	lsls	r2, r3
 8007d6a:	687b      	ldr	r3, [r7, #4]
 8007d6c:	681b      	ldr	r3, [r3, #0]
 8007d6e:	430a      	orrs	r2, r1
 8007d70:	60da      	str	r2, [r3, #12]
 8007d72:	e022      	b.n	8007dba <HAL_ADC_ConfigChannel+0xbe>
 8007d74:	687b      	ldr	r3, [r7, #4]
 8007d76:	681b      	ldr	r3, [r3, #0]
 8007d78:	6919      	ldr	r1, [r3, #16]
 8007d7a:	683b      	ldr	r3, [r7, #0]
 8007d7c:	681b      	ldr	r3, [r3, #0]
 8007d7e:	b29b      	uxth	r3, r3
 8007d80:	461a      	mov	r2, r3
 8007d82:	4613      	mov	r3, r2
 8007d84:	005b      	lsls	r3, r3, #1
 8007d86:	4413      	add	r3, r2
 8007d88:	2207      	movs	r2, #7
 8007d8a:	fa02 f303 	lsl.w	r3, r2, r3
 8007d8e:	43da      	mvns	r2, r3
 8007d90:	687b      	ldr	r3, [r7, #4]
 8007d92:	681b      	ldr	r3, [r3, #0]
 8007d94:	400a      	ands	r2, r1
 8007d96:	611a      	str	r2, [r3, #16]
 8007d98:	687b      	ldr	r3, [r7, #4]
 8007d9a:	681b      	ldr	r3, [r3, #0]
 8007d9c:	6919      	ldr	r1, [r3, #16]
 8007d9e:	683b      	ldr	r3, [r7, #0]
 8007da0:	689a      	ldr	r2, [r3, #8]
 8007da2:	683b      	ldr	r3, [r7, #0]
 8007da4:	681b      	ldr	r3, [r3, #0]
 8007da6:	b29b      	uxth	r3, r3
 8007da8:	4618      	mov	r0, r3
 8007daa:	4603      	mov	r3, r0
 8007dac:	005b      	lsls	r3, r3, #1
 8007dae:	4403      	add	r3, r0
 8007db0:	409a      	lsls	r2, r3
 8007db2:	687b      	ldr	r3, [r7, #4]
 8007db4:	681b      	ldr	r3, [r3, #0]
 8007db6:	430a      	orrs	r2, r1
 8007db8:	611a      	str	r2, [r3, #16]
 8007dba:	683b      	ldr	r3, [r7, #0]
 8007dbc:	685b      	ldr	r3, [r3, #4]
 8007dbe:	2b06      	cmp	r3, #6
 8007dc0:	d824      	bhi.n	8007e0c <HAL_ADC_ConfigChannel+0x110>
 8007dc2:	687b      	ldr	r3, [r7, #4]
 8007dc4:	681b      	ldr	r3, [r3, #0]
 8007dc6:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8007dc8:	683b      	ldr	r3, [r7, #0]
 8007dca:	685a      	ldr	r2, [r3, #4]
 8007dcc:	4613      	mov	r3, r2
 8007dce:	009b      	lsls	r3, r3, #2
 8007dd0:	4413      	add	r3, r2
 8007dd2:	3b05      	subs	r3, #5
 8007dd4:	221f      	movs	r2, #31
 8007dd6:	fa02 f303 	lsl.w	r3, r2, r3
 8007dda:	43da      	mvns	r2, r3
 8007ddc:	687b      	ldr	r3, [r7, #4]
 8007dde:	681b      	ldr	r3, [r3, #0]
 8007de0:	400a      	ands	r2, r1
 8007de2:	635a      	str	r2, [r3, #52]	; 0x34
 8007de4:	687b      	ldr	r3, [r7, #4]
 8007de6:	681b      	ldr	r3, [r3, #0]
 8007de8:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8007dea:	683b      	ldr	r3, [r7, #0]
 8007dec:	681b      	ldr	r3, [r3, #0]
 8007dee:	b29b      	uxth	r3, r3
 8007df0:	4618      	mov	r0, r3
 8007df2:	683b      	ldr	r3, [r7, #0]
 8007df4:	685a      	ldr	r2, [r3, #4]
 8007df6:	4613      	mov	r3, r2
 8007df8:	009b      	lsls	r3, r3, #2
 8007dfa:	4413      	add	r3, r2
 8007dfc:	3b05      	subs	r3, #5
 8007dfe:	fa00 f203 	lsl.w	r2, r0, r3
 8007e02:	687b      	ldr	r3, [r7, #4]
 8007e04:	681b      	ldr	r3, [r3, #0]
 8007e06:	430a      	orrs	r2, r1
 8007e08:	635a      	str	r2, [r3, #52]	; 0x34
 8007e0a:	e04c      	b.n	8007ea6 <HAL_ADC_ConfigChannel+0x1aa>
 8007e0c:	683b      	ldr	r3, [r7, #0]
 8007e0e:	685b      	ldr	r3, [r3, #4]
 8007e10:	2b0c      	cmp	r3, #12
 8007e12:	d824      	bhi.n	8007e5e <HAL_ADC_ConfigChannel+0x162>
 8007e14:	687b      	ldr	r3, [r7, #4]
 8007e16:	681b      	ldr	r3, [r3, #0]
 8007e18:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8007e1a:	683b      	ldr	r3, [r7, #0]
 8007e1c:	685a      	ldr	r2, [r3, #4]
 8007e1e:	4613      	mov	r3, r2
 8007e20:	009b      	lsls	r3, r3, #2
 8007e22:	4413      	add	r3, r2
 8007e24:	3b23      	subs	r3, #35	; 0x23
 8007e26:	221f      	movs	r2, #31
 8007e28:	fa02 f303 	lsl.w	r3, r2, r3
 8007e2c:	43da      	mvns	r2, r3
 8007e2e:	687b      	ldr	r3, [r7, #4]
 8007e30:	681b      	ldr	r3, [r3, #0]
 8007e32:	400a      	ands	r2, r1
 8007e34:	631a      	str	r2, [r3, #48]	; 0x30
 8007e36:	687b      	ldr	r3, [r7, #4]
 8007e38:	681b      	ldr	r3, [r3, #0]
 8007e3a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8007e3c:	683b      	ldr	r3, [r7, #0]
 8007e3e:	681b      	ldr	r3, [r3, #0]
 8007e40:	b29b      	uxth	r3, r3
 8007e42:	4618      	mov	r0, r3
 8007e44:	683b      	ldr	r3, [r7, #0]
 8007e46:	685a      	ldr	r2, [r3, #4]
 8007e48:	4613      	mov	r3, r2
 8007e4a:	009b      	lsls	r3, r3, #2
 8007e4c:	4413      	add	r3, r2
 8007e4e:	3b23      	subs	r3, #35	; 0x23
 8007e50:	fa00 f203 	lsl.w	r2, r0, r3
 8007e54:	687b      	ldr	r3, [r7, #4]
 8007e56:	681b      	ldr	r3, [r3, #0]
 8007e58:	430a      	orrs	r2, r1
 8007e5a:	631a      	str	r2, [r3, #48]	; 0x30
 8007e5c:	e023      	b.n	8007ea6 <HAL_ADC_ConfigChannel+0x1aa>
 8007e5e:	687b      	ldr	r3, [r7, #4]
 8007e60:	681b      	ldr	r3, [r3, #0]
 8007e62:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007e64:	683b      	ldr	r3, [r7, #0]
 8007e66:	685a      	ldr	r2, [r3, #4]
 8007e68:	4613      	mov	r3, r2
 8007e6a:	009b      	lsls	r3, r3, #2
 8007e6c:	4413      	add	r3, r2
 8007e6e:	3b41      	subs	r3, #65	; 0x41
 8007e70:	221f      	movs	r2, #31
 8007e72:	fa02 f303 	lsl.w	r3, r2, r3
 8007e76:	43da      	mvns	r2, r3
 8007e78:	687b      	ldr	r3, [r7, #4]
 8007e7a:	681b      	ldr	r3, [r3, #0]
 8007e7c:	400a      	ands	r2, r1
 8007e7e:	62da      	str	r2, [r3, #44]	; 0x2c
 8007e80:	687b      	ldr	r3, [r7, #4]
 8007e82:	681b      	ldr	r3, [r3, #0]
 8007e84:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007e86:	683b      	ldr	r3, [r7, #0]
 8007e88:	681b      	ldr	r3, [r3, #0]
 8007e8a:	b29b      	uxth	r3, r3
 8007e8c:	4618      	mov	r0, r3
 8007e8e:	683b      	ldr	r3, [r7, #0]
 8007e90:	685a      	ldr	r2, [r3, #4]
 8007e92:	4613      	mov	r3, r2
 8007e94:	009b      	lsls	r3, r3, #2
 8007e96:	4413      	add	r3, r2
 8007e98:	3b41      	subs	r3, #65	; 0x41
 8007e9a:	fa00 f203 	lsl.w	r2, r0, r3
 8007e9e:	687b      	ldr	r3, [r7, #4]
 8007ea0:	681b      	ldr	r3, [r3, #0]
 8007ea2:	430a      	orrs	r2, r1
 8007ea4:	62da      	str	r2, [r3, #44]	; 0x2c
 8007ea6:	4b29      	ldr	r3, [pc, #164]	; (8007f4c <HAL_ADC_ConfigChannel+0x250>)
 8007ea8:	60fb      	str	r3, [r7, #12]
 8007eaa:	687b      	ldr	r3, [r7, #4]
 8007eac:	681b      	ldr	r3, [r3, #0]
 8007eae:	4a28      	ldr	r2, [pc, #160]	; (8007f50 <HAL_ADC_ConfigChannel+0x254>)
 8007eb0:	4293      	cmp	r3, r2
 8007eb2:	d10f      	bne.n	8007ed4 <HAL_ADC_ConfigChannel+0x1d8>
 8007eb4:	683b      	ldr	r3, [r7, #0]
 8007eb6:	681b      	ldr	r3, [r3, #0]
 8007eb8:	2b12      	cmp	r3, #18
 8007eba:	d10b      	bne.n	8007ed4 <HAL_ADC_ConfigChannel+0x1d8>
 8007ebc:	68fb      	ldr	r3, [r7, #12]
 8007ebe:	685b      	ldr	r3, [r3, #4]
 8007ec0:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 8007ec4:	68fb      	ldr	r3, [r7, #12]
 8007ec6:	605a      	str	r2, [r3, #4]
 8007ec8:	68fb      	ldr	r3, [r7, #12]
 8007eca:	685b      	ldr	r3, [r3, #4]
 8007ecc:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8007ed0:	68fb      	ldr	r3, [r7, #12]
 8007ed2:	605a      	str	r2, [r3, #4]
 8007ed4:	687b      	ldr	r3, [r7, #4]
 8007ed6:	681b      	ldr	r3, [r3, #0]
 8007ed8:	4a1d      	ldr	r2, [pc, #116]	; (8007f50 <HAL_ADC_ConfigChannel+0x254>)
 8007eda:	4293      	cmp	r3, r2
 8007edc:	d12b      	bne.n	8007f36 <HAL_ADC_ConfigChannel+0x23a>
 8007ede:	683b      	ldr	r3, [r7, #0]
 8007ee0:	681b      	ldr	r3, [r3, #0]
 8007ee2:	4a1c      	ldr	r2, [pc, #112]	; (8007f54 <HAL_ADC_ConfigChannel+0x258>)
 8007ee4:	4293      	cmp	r3, r2
 8007ee6:	d003      	beq.n	8007ef0 <HAL_ADC_ConfigChannel+0x1f4>
 8007ee8:	683b      	ldr	r3, [r7, #0]
 8007eea:	681b      	ldr	r3, [r3, #0]
 8007eec:	2b11      	cmp	r3, #17
 8007eee:	d122      	bne.n	8007f36 <HAL_ADC_ConfigChannel+0x23a>
 8007ef0:	68fb      	ldr	r3, [r7, #12]
 8007ef2:	685b      	ldr	r3, [r3, #4]
 8007ef4:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 8007ef8:	68fb      	ldr	r3, [r7, #12]
 8007efa:	605a      	str	r2, [r3, #4]
 8007efc:	68fb      	ldr	r3, [r7, #12]
 8007efe:	685b      	ldr	r3, [r3, #4]
 8007f00:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8007f04:	68fb      	ldr	r3, [r7, #12]
 8007f06:	605a      	str	r2, [r3, #4]
 8007f08:	683b      	ldr	r3, [r7, #0]
 8007f0a:	681b      	ldr	r3, [r3, #0]
 8007f0c:	4a11      	ldr	r2, [pc, #68]	; (8007f54 <HAL_ADC_ConfigChannel+0x258>)
 8007f0e:	4293      	cmp	r3, r2
 8007f10:	d111      	bne.n	8007f36 <HAL_ADC_ConfigChannel+0x23a>
 8007f12:	4b11      	ldr	r3, [pc, #68]	; (8007f58 <HAL_ADC_ConfigChannel+0x25c>)
 8007f14:	681b      	ldr	r3, [r3, #0]
 8007f16:	4a11      	ldr	r2, [pc, #68]	; (8007f5c <HAL_ADC_ConfigChannel+0x260>)
 8007f18:	fba2 2303 	umull	r2, r3, r2, r3
 8007f1c:	0c9a      	lsrs	r2, r3, #18
 8007f1e:	4613      	mov	r3, r2
 8007f20:	009b      	lsls	r3, r3, #2
 8007f22:	4413      	add	r3, r2
 8007f24:	005b      	lsls	r3, r3, #1
 8007f26:	60bb      	str	r3, [r7, #8]
 8007f28:	e002      	b.n	8007f30 <HAL_ADC_ConfigChannel+0x234>
 8007f2a:	68bb      	ldr	r3, [r7, #8]
 8007f2c:	3b01      	subs	r3, #1
 8007f2e:	60bb      	str	r3, [r7, #8]
 8007f30:	68bb      	ldr	r3, [r7, #8]
 8007f32:	2b00      	cmp	r3, #0
 8007f34:	d1f9      	bne.n	8007f2a <HAL_ADC_ConfigChannel+0x22e>
 8007f36:	687b      	ldr	r3, [r7, #4]
 8007f38:	2200      	movs	r2, #0
 8007f3a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007f3e:	2300      	movs	r3, #0
 8007f40:	4618      	mov	r0, r3
 8007f42:	3714      	adds	r7, #20
 8007f44:	46bd      	mov	sp, r7
 8007f46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f4a:	4770      	bx	lr
 8007f4c:	40012300 	.word	0x40012300
 8007f50:	40012000 	.word	0x40012000
 8007f54:	10000012 	.word	0x10000012
 8007f58:	20000130 	.word	0x20000130
 8007f5c:	431bde83 	.word	0x431bde83

08007f60 <ADC_Init>:
 8007f60:	b480      	push	{r7}
 8007f62:	b085      	sub	sp, #20
 8007f64:	af00      	add	r7, sp, #0
 8007f66:	6078      	str	r0, [r7, #4]
 8007f68:	4b79      	ldr	r3, [pc, #484]	; (8008150 <ADC_Init+0x1f0>)
 8007f6a:	60fb      	str	r3, [r7, #12]
 8007f6c:	68fb      	ldr	r3, [r7, #12]
 8007f6e:	685b      	ldr	r3, [r3, #4]
 8007f70:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8007f74:	68fb      	ldr	r3, [r7, #12]
 8007f76:	605a      	str	r2, [r3, #4]
 8007f78:	68fb      	ldr	r3, [r7, #12]
 8007f7a:	685a      	ldr	r2, [r3, #4]
 8007f7c:	687b      	ldr	r3, [r7, #4]
 8007f7e:	685b      	ldr	r3, [r3, #4]
 8007f80:	431a      	orrs	r2, r3
 8007f82:	68fb      	ldr	r3, [r7, #12]
 8007f84:	605a      	str	r2, [r3, #4]
 8007f86:	687b      	ldr	r3, [r7, #4]
 8007f88:	681b      	ldr	r3, [r3, #0]
 8007f8a:	685a      	ldr	r2, [r3, #4]
 8007f8c:	687b      	ldr	r3, [r7, #4]
 8007f8e:	681b      	ldr	r3, [r3, #0]
 8007f90:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007f94:	605a      	str	r2, [r3, #4]
 8007f96:	687b      	ldr	r3, [r7, #4]
 8007f98:	681b      	ldr	r3, [r3, #0]
 8007f9a:	6859      	ldr	r1, [r3, #4]
 8007f9c:	687b      	ldr	r3, [r7, #4]
 8007f9e:	691b      	ldr	r3, [r3, #16]
 8007fa0:	021a      	lsls	r2, r3, #8
 8007fa2:	687b      	ldr	r3, [r7, #4]
 8007fa4:	681b      	ldr	r3, [r3, #0]
 8007fa6:	430a      	orrs	r2, r1
 8007fa8:	605a      	str	r2, [r3, #4]
 8007faa:	687b      	ldr	r3, [r7, #4]
 8007fac:	681b      	ldr	r3, [r3, #0]
 8007fae:	685a      	ldr	r2, [r3, #4]
 8007fb0:	687b      	ldr	r3, [r7, #4]
 8007fb2:	681b      	ldr	r3, [r3, #0]
 8007fb4:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8007fb8:	605a      	str	r2, [r3, #4]
 8007fba:	687b      	ldr	r3, [r7, #4]
 8007fbc:	681b      	ldr	r3, [r3, #0]
 8007fbe:	6859      	ldr	r1, [r3, #4]
 8007fc0:	687b      	ldr	r3, [r7, #4]
 8007fc2:	689a      	ldr	r2, [r3, #8]
 8007fc4:	687b      	ldr	r3, [r7, #4]
 8007fc6:	681b      	ldr	r3, [r3, #0]
 8007fc8:	430a      	orrs	r2, r1
 8007fca:	605a      	str	r2, [r3, #4]
 8007fcc:	687b      	ldr	r3, [r7, #4]
 8007fce:	681b      	ldr	r3, [r3, #0]
 8007fd0:	689a      	ldr	r2, [r3, #8]
 8007fd2:	687b      	ldr	r3, [r7, #4]
 8007fd4:	681b      	ldr	r3, [r3, #0]
 8007fd6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007fda:	609a      	str	r2, [r3, #8]
 8007fdc:	687b      	ldr	r3, [r7, #4]
 8007fde:	681b      	ldr	r3, [r3, #0]
 8007fe0:	6899      	ldr	r1, [r3, #8]
 8007fe2:	687b      	ldr	r3, [r7, #4]
 8007fe4:	68da      	ldr	r2, [r3, #12]
 8007fe6:	687b      	ldr	r3, [r7, #4]
 8007fe8:	681b      	ldr	r3, [r3, #0]
 8007fea:	430a      	orrs	r2, r1
 8007fec:	609a      	str	r2, [r3, #8]
 8007fee:	687b      	ldr	r3, [r7, #4]
 8007ff0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007ff2:	4a58      	ldr	r2, [pc, #352]	; (8008154 <ADC_Init+0x1f4>)
 8007ff4:	4293      	cmp	r3, r2
 8007ff6:	d022      	beq.n	800803e <ADC_Init+0xde>
 8007ff8:	687b      	ldr	r3, [r7, #4]
 8007ffa:	681b      	ldr	r3, [r3, #0]
 8007ffc:	689a      	ldr	r2, [r3, #8]
 8007ffe:	687b      	ldr	r3, [r7, #4]
 8008000:	681b      	ldr	r3, [r3, #0]
 8008002:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8008006:	609a      	str	r2, [r3, #8]
 8008008:	687b      	ldr	r3, [r7, #4]
 800800a:	681b      	ldr	r3, [r3, #0]
 800800c:	6899      	ldr	r1, [r3, #8]
 800800e:	687b      	ldr	r3, [r7, #4]
 8008010:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8008012:	687b      	ldr	r3, [r7, #4]
 8008014:	681b      	ldr	r3, [r3, #0]
 8008016:	430a      	orrs	r2, r1
 8008018:	609a      	str	r2, [r3, #8]
 800801a:	687b      	ldr	r3, [r7, #4]
 800801c:	681b      	ldr	r3, [r3, #0]
 800801e:	689a      	ldr	r2, [r3, #8]
 8008020:	687b      	ldr	r3, [r7, #4]
 8008022:	681b      	ldr	r3, [r3, #0]
 8008024:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8008028:	609a      	str	r2, [r3, #8]
 800802a:	687b      	ldr	r3, [r7, #4]
 800802c:	681b      	ldr	r3, [r3, #0]
 800802e:	6899      	ldr	r1, [r3, #8]
 8008030:	687b      	ldr	r3, [r7, #4]
 8008032:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008034:	687b      	ldr	r3, [r7, #4]
 8008036:	681b      	ldr	r3, [r3, #0]
 8008038:	430a      	orrs	r2, r1
 800803a:	609a      	str	r2, [r3, #8]
 800803c:	e00f      	b.n	800805e <ADC_Init+0xfe>
 800803e:	687b      	ldr	r3, [r7, #4]
 8008040:	681b      	ldr	r3, [r3, #0]
 8008042:	689a      	ldr	r2, [r3, #8]
 8008044:	687b      	ldr	r3, [r7, #4]
 8008046:	681b      	ldr	r3, [r3, #0]
 8008048:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800804c:	609a      	str	r2, [r3, #8]
 800804e:	687b      	ldr	r3, [r7, #4]
 8008050:	681b      	ldr	r3, [r3, #0]
 8008052:	689a      	ldr	r2, [r3, #8]
 8008054:	687b      	ldr	r3, [r7, #4]
 8008056:	681b      	ldr	r3, [r3, #0]
 8008058:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800805c:	609a      	str	r2, [r3, #8]
 800805e:	687b      	ldr	r3, [r7, #4]
 8008060:	681b      	ldr	r3, [r3, #0]
 8008062:	689a      	ldr	r2, [r3, #8]
 8008064:	687b      	ldr	r3, [r7, #4]
 8008066:	681b      	ldr	r3, [r3, #0]
 8008068:	f022 0202 	bic.w	r2, r2, #2
 800806c:	609a      	str	r2, [r3, #8]
 800806e:	687b      	ldr	r3, [r7, #4]
 8008070:	681b      	ldr	r3, [r3, #0]
 8008072:	6899      	ldr	r1, [r3, #8]
 8008074:	687b      	ldr	r3, [r7, #4]
 8008076:	7e1b      	ldrb	r3, [r3, #24]
 8008078:	005a      	lsls	r2, r3, #1
 800807a:	687b      	ldr	r3, [r7, #4]
 800807c:	681b      	ldr	r3, [r3, #0]
 800807e:	430a      	orrs	r2, r1
 8008080:	609a      	str	r2, [r3, #8]
 8008082:	687b      	ldr	r3, [r7, #4]
 8008084:	f893 3020 	ldrb.w	r3, [r3, #32]
 8008088:	2b00      	cmp	r3, #0
 800808a:	d01b      	beq.n	80080c4 <ADC_Init+0x164>
 800808c:	687b      	ldr	r3, [r7, #4]
 800808e:	681b      	ldr	r3, [r3, #0]
 8008090:	685a      	ldr	r2, [r3, #4]
 8008092:	687b      	ldr	r3, [r7, #4]
 8008094:	681b      	ldr	r3, [r3, #0]
 8008096:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800809a:	605a      	str	r2, [r3, #4]
 800809c:	687b      	ldr	r3, [r7, #4]
 800809e:	681b      	ldr	r3, [r3, #0]
 80080a0:	685a      	ldr	r2, [r3, #4]
 80080a2:	687b      	ldr	r3, [r7, #4]
 80080a4:	681b      	ldr	r3, [r3, #0]
 80080a6:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 80080aa:	605a      	str	r2, [r3, #4]
 80080ac:	687b      	ldr	r3, [r7, #4]
 80080ae:	681b      	ldr	r3, [r3, #0]
 80080b0:	6859      	ldr	r1, [r3, #4]
 80080b2:	687b      	ldr	r3, [r7, #4]
 80080b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80080b6:	3b01      	subs	r3, #1
 80080b8:	035a      	lsls	r2, r3, #13
 80080ba:	687b      	ldr	r3, [r7, #4]
 80080bc:	681b      	ldr	r3, [r3, #0]
 80080be:	430a      	orrs	r2, r1
 80080c0:	605a      	str	r2, [r3, #4]
 80080c2:	e007      	b.n	80080d4 <ADC_Init+0x174>
 80080c4:	687b      	ldr	r3, [r7, #4]
 80080c6:	681b      	ldr	r3, [r3, #0]
 80080c8:	685a      	ldr	r2, [r3, #4]
 80080ca:	687b      	ldr	r3, [r7, #4]
 80080cc:	681b      	ldr	r3, [r3, #0]
 80080ce:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80080d2:	605a      	str	r2, [r3, #4]
 80080d4:	687b      	ldr	r3, [r7, #4]
 80080d6:	681b      	ldr	r3, [r3, #0]
 80080d8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80080da:	687b      	ldr	r3, [r7, #4]
 80080dc:	681b      	ldr	r3, [r3, #0]
 80080de:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 80080e2:	62da      	str	r2, [r3, #44]	; 0x2c
 80080e4:	687b      	ldr	r3, [r7, #4]
 80080e6:	681b      	ldr	r3, [r3, #0]
 80080e8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80080ea:	687b      	ldr	r3, [r7, #4]
 80080ec:	69db      	ldr	r3, [r3, #28]
 80080ee:	3b01      	subs	r3, #1
 80080f0:	051a      	lsls	r2, r3, #20
 80080f2:	687b      	ldr	r3, [r7, #4]
 80080f4:	681b      	ldr	r3, [r3, #0]
 80080f6:	430a      	orrs	r2, r1
 80080f8:	62da      	str	r2, [r3, #44]	; 0x2c
 80080fa:	687b      	ldr	r3, [r7, #4]
 80080fc:	681b      	ldr	r3, [r3, #0]
 80080fe:	689a      	ldr	r2, [r3, #8]
 8008100:	687b      	ldr	r3, [r7, #4]
 8008102:	681b      	ldr	r3, [r3, #0]
 8008104:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8008108:	609a      	str	r2, [r3, #8]
 800810a:	687b      	ldr	r3, [r7, #4]
 800810c:	681b      	ldr	r3, [r3, #0]
 800810e:	6899      	ldr	r1, [r3, #8]
 8008110:	687b      	ldr	r3, [r7, #4]
 8008112:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8008116:	025a      	lsls	r2, r3, #9
 8008118:	687b      	ldr	r3, [r7, #4]
 800811a:	681b      	ldr	r3, [r3, #0]
 800811c:	430a      	orrs	r2, r1
 800811e:	609a      	str	r2, [r3, #8]
 8008120:	687b      	ldr	r3, [r7, #4]
 8008122:	681b      	ldr	r3, [r3, #0]
 8008124:	689a      	ldr	r2, [r3, #8]
 8008126:	687b      	ldr	r3, [r7, #4]
 8008128:	681b      	ldr	r3, [r3, #0]
 800812a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800812e:	609a      	str	r2, [r3, #8]
 8008130:	687b      	ldr	r3, [r7, #4]
 8008132:	681b      	ldr	r3, [r3, #0]
 8008134:	6899      	ldr	r1, [r3, #8]
 8008136:	687b      	ldr	r3, [r7, #4]
 8008138:	695b      	ldr	r3, [r3, #20]
 800813a:	029a      	lsls	r2, r3, #10
 800813c:	687b      	ldr	r3, [r7, #4]
 800813e:	681b      	ldr	r3, [r3, #0]
 8008140:	430a      	orrs	r2, r1
 8008142:	609a      	str	r2, [r3, #8]
 8008144:	bf00      	nop
 8008146:	3714      	adds	r7, #20
 8008148:	46bd      	mov	sp, r7
 800814a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800814e:	4770      	bx	lr
 8008150:	40012300 	.word	0x40012300
 8008154:	0f000001 	.word	0x0f000001

08008158 <HAL_ADCEx_InjectedConfigChannel>:
 8008158:	b480      	push	{r7}
 800815a:	b085      	sub	sp, #20
 800815c:	af00      	add	r7, sp, #0
 800815e:	6078      	str	r0, [r7, #4]
 8008160:	6039      	str	r1, [r7, #0]
 8008162:	687b      	ldr	r3, [r7, #4]
 8008164:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8008168:	2b01      	cmp	r3, #1
 800816a:	d101      	bne.n	8008170 <HAL_ADCEx_InjectedConfigChannel+0x18>
 800816c:	2302      	movs	r3, #2
 800816e:	e17e      	b.n	800846e <HAL_ADCEx_InjectedConfigChannel+0x316>
 8008170:	687b      	ldr	r3, [r7, #4]
 8008172:	2201      	movs	r2, #1
 8008174:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008178:	683b      	ldr	r3, [r7, #0]
 800817a:	681b      	ldr	r3, [r3, #0]
 800817c:	2b09      	cmp	r3, #9
 800817e:	d925      	bls.n	80081cc <HAL_ADCEx_InjectedConfigChannel+0x74>
 8008180:	687b      	ldr	r3, [r7, #4]
 8008182:	681b      	ldr	r3, [r3, #0]
 8008184:	68d9      	ldr	r1, [r3, #12]
 8008186:	683b      	ldr	r3, [r7, #0]
 8008188:	681b      	ldr	r3, [r3, #0]
 800818a:	b29b      	uxth	r3, r3
 800818c:	461a      	mov	r2, r3
 800818e:	4613      	mov	r3, r2
 8008190:	005b      	lsls	r3, r3, #1
 8008192:	4413      	add	r3, r2
 8008194:	3b1e      	subs	r3, #30
 8008196:	2207      	movs	r2, #7
 8008198:	fa02 f303 	lsl.w	r3, r2, r3
 800819c:	43da      	mvns	r2, r3
 800819e:	687b      	ldr	r3, [r7, #4]
 80081a0:	681b      	ldr	r3, [r3, #0]
 80081a2:	400a      	ands	r2, r1
 80081a4:	60da      	str	r2, [r3, #12]
 80081a6:	687b      	ldr	r3, [r7, #4]
 80081a8:	681b      	ldr	r3, [r3, #0]
 80081aa:	68d9      	ldr	r1, [r3, #12]
 80081ac:	683b      	ldr	r3, [r7, #0]
 80081ae:	689a      	ldr	r2, [r3, #8]
 80081b0:	683b      	ldr	r3, [r7, #0]
 80081b2:	681b      	ldr	r3, [r3, #0]
 80081b4:	b29b      	uxth	r3, r3
 80081b6:	4618      	mov	r0, r3
 80081b8:	4603      	mov	r3, r0
 80081ba:	005b      	lsls	r3, r3, #1
 80081bc:	4403      	add	r3, r0
 80081be:	3b1e      	subs	r3, #30
 80081c0:	409a      	lsls	r2, r3
 80081c2:	687b      	ldr	r3, [r7, #4]
 80081c4:	681b      	ldr	r3, [r3, #0]
 80081c6:	430a      	orrs	r2, r1
 80081c8:	60da      	str	r2, [r3, #12]
 80081ca:	e022      	b.n	8008212 <HAL_ADCEx_InjectedConfigChannel+0xba>
 80081cc:	687b      	ldr	r3, [r7, #4]
 80081ce:	681b      	ldr	r3, [r3, #0]
 80081d0:	6919      	ldr	r1, [r3, #16]
 80081d2:	683b      	ldr	r3, [r7, #0]
 80081d4:	681b      	ldr	r3, [r3, #0]
 80081d6:	b29b      	uxth	r3, r3
 80081d8:	461a      	mov	r2, r3
 80081da:	4613      	mov	r3, r2
 80081dc:	005b      	lsls	r3, r3, #1
 80081de:	4413      	add	r3, r2
 80081e0:	2207      	movs	r2, #7
 80081e2:	fa02 f303 	lsl.w	r3, r2, r3
 80081e6:	43da      	mvns	r2, r3
 80081e8:	687b      	ldr	r3, [r7, #4]
 80081ea:	681b      	ldr	r3, [r3, #0]
 80081ec:	400a      	ands	r2, r1
 80081ee:	611a      	str	r2, [r3, #16]
 80081f0:	687b      	ldr	r3, [r7, #4]
 80081f2:	681b      	ldr	r3, [r3, #0]
 80081f4:	6919      	ldr	r1, [r3, #16]
 80081f6:	683b      	ldr	r3, [r7, #0]
 80081f8:	689a      	ldr	r2, [r3, #8]
 80081fa:	683b      	ldr	r3, [r7, #0]
 80081fc:	681b      	ldr	r3, [r3, #0]
 80081fe:	b29b      	uxth	r3, r3
 8008200:	4618      	mov	r0, r3
 8008202:	4603      	mov	r3, r0
 8008204:	005b      	lsls	r3, r3, #1
 8008206:	4403      	add	r3, r0
 8008208:	409a      	lsls	r2, r3
 800820a:	687b      	ldr	r3, [r7, #4]
 800820c:	681b      	ldr	r3, [r3, #0]
 800820e:	430a      	orrs	r2, r1
 8008210:	611a      	str	r2, [r3, #16]
 8008212:	687b      	ldr	r3, [r7, #4]
 8008214:	681b      	ldr	r3, [r3, #0]
 8008216:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8008218:	687b      	ldr	r3, [r7, #4]
 800821a:	681b      	ldr	r3, [r3, #0]
 800821c:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8008220:	639a      	str	r2, [r3, #56]	; 0x38
 8008222:	687b      	ldr	r3, [r7, #4]
 8008224:	681b      	ldr	r3, [r3, #0]
 8008226:	6b99      	ldr	r1, [r3, #56]	; 0x38
 8008228:	683b      	ldr	r3, [r7, #0]
 800822a:	691b      	ldr	r3, [r3, #16]
 800822c:	3b01      	subs	r3, #1
 800822e:	051a      	lsls	r2, r3, #20
 8008230:	687b      	ldr	r3, [r7, #4]
 8008232:	681b      	ldr	r3, [r3, #0]
 8008234:	430a      	orrs	r2, r1
 8008236:	639a      	str	r2, [r3, #56]	; 0x38
 8008238:	687b      	ldr	r3, [r7, #4]
 800823a:	681b      	ldr	r3, [r3, #0]
 800823c:	6b99      	ldr	r1, [r3, #56]	; 0x38
 800823e:	683b      	ldr	r3, [r7, #0]
 8008240:	685b      	ldr	r3, [r3, #4]
 8008242:	b2da      	uxtb	r2, r3
 8008244:	683b      	ldr	r3, [r7, #0]
 8008246:	691b      	ldr	r3, [r3, #16]
 8008248:	b2db      	uxtb	r3, r3
 800824a:	1ad3      	subs	r3, r2, r3
 800824c:	b2db      	uxtb	r3, r3
 800824e:	3303      	adds	r3, #3
 8008250:	b2db      	uxtb	r3, r3
 8008252:	461a      	mov	r2, r3
 8008254:	4613      	mov	r3, r2
 8008256:	009b      	lsls	r3, r3, #2
 8008258:	4413      	add	r3, r2
 800825a:	221f      	movs	r2, #31
 800825c:	fa02 f303 	lsl.w	r3, r2, r3
 8008260:	43da      	mvns	r2, r3
 8008262:	687b      	ldr	r3, [r7, #4]
 8008264:	681b      	ldr	r3, [r3, #0]
 8008266:	400a      	ands	r2, r1
 8008268:	639a      	str	r2, [r3, #56]	; 0x38
 800826a:	687b      	ldr	r3, [r7, #4]
 800826c:	681b      	ldr	r3, [r3, #0]
 800826e:	6b99      	ldr	r1, [r3, #56]	; 0x38
 8008270:	683b      	ldr	r3, [r7, #0]
 8008272:	681b      	ldr	r3, [r3, #0]
 8008274:	b29b      	uxth	r3, r3
 8008276:	4618      	mov	r0, r3
 8008278:	683b      	ldr	r3, [r7, #0]
 800827a:	685b      	ldr	r3, [r3, #4]
 800827c:	b2da      	uxtb	r2, r3
 800827e:	683b      	ldr	r3, [r7, #0]
 8008280:	691b      	ldr	r3, [r3, #16]
 8008282:	b2db      	uxtb	r3, r3
 8008284:	1ad3      	subs	r3, r2, r3
 8008286:	b2db      	uxtb	r3, r3
 8008288:	3303      	adds	r3, #3
 800828a:	b2db      	uxtb	r3, r3
 800828c:	461a      	mov	r2, r3
 800828e:	4613      	mov	r3, r2
 8008290:	009b      	lsls	r3, r3, #2
 8008292:	4413      	add	r3, r2
 8008294:	fa00 f203 	lsl.w	r2, r0, r3
 8008298:	687b      	ldr	r3, [r7, #4]
 800829a:	681b      	ldr	r3, [r3, #0]
 800829c:	430a      	orrs	r2, r1
 800829e:	639a      	str	r2, [r3, #56]	; 0x38
 80082a0:	683b      	ldr	r3, [r7, #0]
 80082a2:	699b      	ldr	r3, [r3, #24]
 80082a4:	4a75      	ldr	r2, [pc, #468]	; (800847c <HAL_ADCEx_InjectedConfigChannel+0x324>)
 80082a6:	4293      	cmp	r3, r2
 80082a8:	d022      	beq.n	80082f0 <HAL_ADCEx_InjectedConfigChannel+0x198>
 80082aa:	687b      	ldr	r3, [r7, #4]
 80082ac:	681b      	ldr	r3, [r3, #0]
 80082ae:	689a      	ldr	r2, [r3, #8]
 80082b0:	687b      	ldr	r3, [r7, #4]
 80082b2:	681b      	ldr	r3, [r3, #0]
 80082b4:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 80082b8:	609a      	str	r2, [r3, #8]
 80082ba:	687b      	ldr	r3, [r7, #4]
 80082bc:	681b      	ldr	r3, [r3, #0]
 80082be:	6899      	ldr	r1, [r3, #8]
 80082c0:	683b      	ldr	r3, [r7, #0]
 80082c2:	699a      	ldr	r2, [r3, #24]
 80082c4:	687b      	ldr	r3, [r7, #4]
 80082c6:	681b      	ldr	r3, [r3, #0]
 80082c8:	430a      	orrs	r2, r1
 80082ca:	609a      	str	r2, [r3, #8]
 80082cc:	687b      	ldr	r3, [r7, #4]
 80082ce:	681b      	ldr	r3, [r3, #0]
 80082d0:	689a      	ldr	r2, [r3, #8]
 80082d2:	687b      	ldr	r3, [r7, #4]
 80082d4:	681b      	ldr	r3, [r3, #0]
 80082d6:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 80082da:	609a      	str	r2, [r3, #8]
 80082dc:	687b      	ldr	r3, [r7, #4]
 80082de:	681b      	ldr	r3, [r3, #0]
 80082e0:	6899      	ldr	r1, [r3, #8]
 80082e2:	683b      	ldr	r3, [r7, #0]
 80082e4:	69da      	ldr	r2, [r3, #28]
 80082e6:	687b      	ldr	r3, [r7, #4]
 80082e8:	681b      	ldr	r3, [r3, #0]
 80082ea:	430a      	orrs	r2, r1
 80082ec:	609a      	str	r2, [r3, #8]
 80082ee:	e00f      	b.n	8008310 <HAL_ADCEx_InjectedConfigChannel+0x1b8>
 80082f0:	687b      	ldr	r3, [r7, #4]
 80082f2:	681b      	ldr	r3, [r3, #0]
 80082f4:	689a      	ldr	r2, [r3, #8]
 80082f6:	687b      	ldr	r3, [r7, #4]
 80082f8:	681b      	ldr	r3, [r3, #0]
 80082fa:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 80082fe:	609a      	str	r2, [r3, #8]
 8008300:	687b      	ldr	r3, [r7, #4]
 8008302:	681b      	ldr	r3, [r3, #0]
 8008304:	689a      	ldr	r2, [r3, #8]
 8008306:	687b      	ldr	r3, [r7, #4]
 8008308:	681b      	ldr	r3, [r3, #0]
 800830a:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 800830e:	609a      	str	r2, [r3, #8]
 8008310:	683b      	ldr	r3, [r7, #0]
 8008312:	7d5b      	ldrb	r3, [r3, #21]
 8008314:	2b00      	cmp	r3, #0
 8008316:	d008      	beq.n	800832a <HAL_ADCEx_InjectedConfigChannel+0x1d2>
 8008318:	687b      	ldr	r3, [r7, #4]
 800831a:	681b      	ldr	r3, [r3, #0]
 800831c:	685a      	ldr	r2, [r3, #4]
 800831e:	687b      	ldr	r3, [r7, #4]
 8008320:	681b      	ldr	r3, [r3, #0]
 8008322:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8008326:	605a      	str	r2, [r3, #4]
 8008328:	e007      	b.n	800833a <HAL_ADCEx_InjectedConfigChannel+0x1e2>
 800832a:	687b      	ldr	r3, [r7, #4]
 800832c:	681b      	ldr	r3, [r3, #0]
 800832e:	685a      	ldr	r2, [r3, #4]
 8008330:	687b      	ldr	r3, [r7, #4]
 8008332:	681b      	ldr	r3, [r3, #0]
 8008334:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8008338:	605a      	str	r2, [r3, #4]
 800833a:	683b      	ldr	r3, [r7, #0]
 800833c:	7d1b      	ldrb	r3, [r3, #20]
 800833e:	2b00      	cmp	r3, #0
 8008340:	d008      	beq.n	8008354 <HAL_ADCEx_InjectedConfigChannel+0x1fc>
 8008342:	687b      	ldr	r3, [r7, #4]
 8008344:	681b      	ldr	r3, [r3, #0]
 8008346:	685a      	ldr	r2, [r3, #4]
 8008348:	687b      	ldr	r3, [r7, #4]
 800834a:	681b      	ldr	r3, [r3, #0]
 800834c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8008350:	605a      	str	r2, [r3, #4]
 8008352:	e007      	b.n	8008364 <HAL_ADCEx_InjectedConfigChannel+0x20c>
 8008354:	687b      	ldr	r3, [r7, #4]
 8008356:	681b      	ldr	r3, [r3, #0]
 8008358:	685a      	ldr	r2, [r3, #4]
 800835a:	687b      	ldr	r3, [r7, #4]
 800835c:	681b      	ldr	r3, [r3, #0]
 800835e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8008362:	605a      	str	r2, [r3, #4]
 8008364:	683b      	ldr	r3, [r7, #0]
 8008366:	685b      	ldr	r3, [r3, #4]
 8008368:	2b03      	cmp	r3, #3
 800836a:	d02e      	beq.n	80083ca <HAL_ADCEx_InjectedConfigChannel+0x272>
 800836c:	2b03      	cmp	r3, #3
 800836e:	d840      	bhi.n	80083f2 <HAL_ADCEx_InjectedConfigChannel+0x29a>
 8008370:	2b01      	cmp	r3, #1
 8008372:	d002      	beq.n	800837a <HAL_ADCEx_InjectedConfigChannel+0x222>
 8008374:	2b02      	cmp	r3, #2
 8008376:	d014      	beq.n	80083a2 <HAL_ADCEx_InjectedConfigChannel+0x24a>
 8008378:	e03b      	b.n	80083f2 <HAL_ADCEx_InjectedConfigChannel+0x29a>
 800837a:	687b      	ldr	r3, [r7, #4]
 800837c:	681b      	ldr	r3, [r3, #0]
 800837e:	695b      	ldr	r3, [r3, #20]
 8008380:	687a      	ldr	r2, [r7, #4]
 8008382:	6812      	ldr	r2, [r2, #0]
 8008384:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8008388:	f023 030f 	bic.w	r3, r3, #15
 800838c:	6153      	str	r3, [r2, #20]
 800838e:	687b      	ldr	r3, [r7, #4]
 8008390:	681b      	ldr	r3, [r3, #0]
 8008392:	6959      	ldr	r1, [r3, #20]
 8008394:	683b      	ldr	r3, [r7, #0]
 8008396:	68da      	ldr	r2, [r3, #12]
 8008398:	687b      	ldr	r3, [r7, #4]
 800839a:	681b      	ldr	r3, [r3, #0]
 800839c:	430a      	orrs	r2, r1
 800839e:	615a      	str	r2, [r3, #20]
 80083a0:	e03b      	b.n	800841a <HAL_ADCEx_InjectedConfigChannel+0x2c2>
 80083a2:	687b      	ldr	r3, [r7, #4]
 80083a4:	681b      	ldr	r3, [r3, #0]
 80083a6:	699b      	ldr	r3, [r3, #24]
 80083a8:	687a      	ldr	r2, [r7, #4]
 80083aa:	6812      	ldr	r2, [r2, #0]
 80083ac:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 80083b0:	f023 030f 	bic.w	r3, r3, #15
 80083b4:	6193      	str	r3, [r2, #24]
 80083b6:	687b      	ldr	r3, [r7, #4]
 80083b8:	681b      	ldr	r3, [r3, #0]
 80083ba:	6999      	ldr	r1, [r3, #24]
 80083bc:	683b      	ldr	r3, [r7, #0]
 80083be:	68da      	ldr	r2, [r3, #12]
 80083c0:	687b      	ldr	r3, [r7, #4]
 80083c2:	681b      	ldr	r3, [r3, #0]
 80083c4:	430a      	orrs	r2, r1
 80083c6:	619a      	str	r2, [r3, #24]
 80083c8:	e027      	b.n	800841a <HAL_ADCEx_InjectedConfigChannel+0x2c2>
 80083ca:	687b      	ldr	r3, [r7, #4]
 80083cc:	681b      	ldr	r3, [r3, #0]
 80083ce:	69db      	ldr	r3, [r3, #28]
 80083d0:	687a      	ldr	r2, [r7, #4]
 80083d2:	6812      	ldr	r2, [r2, #0]
 80083d4:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 80083d8:	f023 030f 	bic.w	r3, r3, #15
 80083dc:	61d3      	str	r3, [r2, #28]
 80083de:	687b      	ldr	r3, [r7, #4]
 80083e0:	681b      	ldr	r3, [r3, #0]
 80083e2:	69d9      	ldr	r1, [r3, #28]
 80083e4:	683b      	ldr	r3, [r7, #0]
 80083e6:	68da      	ldr	r2, [r3, #12]
 80083e8:	687b      	ldr	r3, [r7, #4]
 80083ea:	681b      	ldr	r3, [r3, #0]
 80083ec:	430a      	orrs	r2, r1
 80083ee:	61da      	str	r2, [r3, #28]
 80083f0:	e013      	b.n	800841a <HAL_ADCEx_InjectedConfigChannel+0x2c2>
 80083f2:	687b      	ldr	r3, [r7, #4]
 80083f4:	681b      	ldr	r3, [r3, #0]
 80083f6:	6a1b      	ldr	r3, [r3, #32]
 80083f8:	687a      	ldr	r2, [r7, #4]
 80083fa:	6812      	ldr	r2, [r2, #0]
 80083fc:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8008400:	f023 030f 	bic.w	r3, r3, #15
 8008404:	6213      	str	r3, [r2, #32]
 8008406:	687b      	ldr	r3, [r7, #4]
 8008408:	681b      	ldr	r3, [r3, #0]
 800840a:	6a19      	ldr	r1, [r3, #32]
 800840c:	683b      	ldr	r3, [r7, #0]
 800840e:	68da      	ldr	r2, [r3, #12]
 8008410:	687b      	ldr	r3, [r7, #4]
 8008412:	681b      	ldr	r3, [r3, #0]
 8008414:	430a      	orrs	r2, r1
 8008416:	621a      	str	r2, [r3, #32]
 8008418:	bf00      	nop
 800841a:	4b19      	ldr	r3, [pc, #100]	; (8008480 <HAL_ADCEx_InjectedConfigChannel+0x328>)
 800841c:	60fb      	str	r3, [r7, #12]
 800841e:	687b      	ldr	r3, [r7, #4]
 8008420:	681b      	ldr	r3, [r3, #0]
 8008422:	4a18      	ldr	r2, [pc, #96]	; (8008484 <HAL_ADCEx_InjectedConfigChannel+0x32c>)
 8008424:	4293      	cmp	r3, r2
 8008426:	d109      	bne.n	800843c <HAL_ADCEx_InjectedConfigChannel+0x2e4>
 8008428:	683b      	ldr	r3, [r7, #0]
 800842a:	681b      	ldr	r3, [r3, #0]
 800842c:	2b12      	cmp	r3, #18
 800842e:	d105      	bne.n	800843c <HAL_ADCEx_InjectedConfigChannel+0x2e4>
 8008430:	68fb      	ldr	r3, [r7, #12]
 8008432:	685b      	ldr	r3, [r3, #4]
 8008434:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8008438:	68fb      	ldr	r3, [r7, #12]
 800843a:	605a      	str	r2, [r3, #4]
 800843c:	687b      	ldr	r3, [r7, #4]
 800843e:	681b      	ldr	r3, [r3, #0]
 8008440:	4a10      	ldr	r2, [pc, #64]	; (8008484 <HAL_ADCEx_InjectedConfigChannel+0x32c>)
 8008442:	4293      	cmp	r3, r2
 8008444:	d10e      	bne.n	8008464 <HAL_ADCEx_InjectedConfigChannel+0x30c>
 8008446:	683b      	ldr	r3, [r7, #0]
 8008448:	681b      	ldr	r3, [r3, #0]
 800844a:	4a0f      	ldr	r2, [pc, #60]	; (8008488 <HAL_ADCEx_InjectedConfigChannel+0x330>)
 800844c:	4293      	cmp	r3, r2
 800844e:	d003      	beq.n	8008458 <HAL_ADCEx_InjectedConfigChannel+0x300>
 8008450:	683b      	ldr	r3, [r7, #0]
 8008452:	681b      	ldr	r3, [r3, #0]
 8008454:	2b11      	cmp	r3, #17
 8008456:	d105      	bne.n	8008464 <HAL_ADCEx_InjectedConfigChannel+0x30c>
 8008458:	68fb      	ldr	r3, [r7, #12]
 800845a:	685b      	ldr	r3, [r3, #4]
 800845c:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8008460:	68fb      	ldr	r3, [r7, #12]
 8008462:	605a      	str	r2, [r3, #4]
 8008464:	687b      	ldr	r3, [r7, #4]
 8008466:	2200      	movs	r2, #0
 8008468:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800846c:	2300      	movs	r3, #0
 800846e:	4618      	mov	r0, r3
 8008470:	3714      	adds	r7, #20
 8008472:	46bd      	mov	sp, r7
 8008474:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008478:	4770      	bx	lr
 800847a:	bf00      	nop
 800847c:	000f0001 	.word	0x000f0001
 8008480:	40012300 	.word	0x40012300
 8008484:	40012000 	.word	0x40012000
 8008488:	10000012 	.word	0x10000012

0800848c <__NVIC_SetPriorityGrouping>:
 800848c:	b480      	push	{r7}
 800848e:	b085      	sub	sp, #20
 8008490:	af00      	add	r7, sp, #0
 8008492:	6078      	str	r0, [r7, #4]
 8008494:	687b      	ldr	r3, [r7, #4]
 8008496:	f003 0307 	and.w	r3, r3, #7
 800849a:	60fb      	str	r3, [r7, #12]
 800849c:	4b0c      	ldr	r3, [pc, #48]	; (80084d0 <__NVIC_SetPriorityGrouping+0x44>)
 800849e:	68db      	ldr	r3, [r3, #12]
 80084a0:	60bb      	str	r3, [r7, #8]
 80084a2:	68ba      	ldr	r2, [r7, #8]
 80084a4:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80084a8:	4013      	ands	r3, r2
 80084aa:	60bb      	str	r3, [r7, #8]
 80084ac:	68fb      	ldr	r3, [r7, #12]
 80084ae:	021a      	lsls	r2, r3, #8
 80084b0:	68bb      	ldr	r3, [r7, #8]
 80084b2:	4313      	orrs	r3, r2
 80084b4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80084b8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80084bc:	60bb      	str	r3, [r7, #8]
 80084be:	4a04      	ldr	r2, [pc, #16]	; (80084d0 <__NVIC_SetPriorityGrouping+0x44>)
 80084c0:	68bb      	ldr	r3, [r7, #8]
 80084c2:	60d3      	str	r3, [r2, #12]
 80084c4:	bf00      	nop
 80084c6:	3714      	adds	r7, #20
 80084c8:	46bd      	mov	sp, r7
 80084ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084ce:	4770      	bx	lr
 80084d0:	e000ed00 	.word	0xe000ed00

080084d4 <__NVIC_GetPriorityGrouping>:
 80084d4:	b480      	push	{r7}
 80084d6:	af00      	add	r7, sp, #0
 80084d8:	4b04      	ldr	r3, [pc, #16]	; (80084ec <__NVIC_GetPriorityGrouping+0x18>)
 80084da:	68db      	ldr	r3, [r3, #12]
 80084dc:	0a1b      	lsrs	r3, r3, #8
 80084de:	f003 0307 	and.w	r3, r3, #7
 80084e2:	4618      	mov	r0, r3
 80084e4:	46bd      	mov	sp, r7
 80084e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084ea:	4770      	bx	lr
 80084ec:	e000ed00 	.word	0xe000ed00

080084f0 <__NVIC_EnableIRQ>:
 80084f0:	b480      	push	{r7}
 80084f2:	b083      	sub	sp, #12
 80084f4:	af00      	add	r7, sp, #0
 80084f6:	4603      	mov	r3, r0
 80084f8:	71fb      	strb	r3, [r7, #7]
 80084fa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80084fe:	2b00      	cmp	r3, #0
 8008500:	db0b      	blt.n	800851a <__NVIC_EnableIRQ+0x2a>
 8008502:	79fb      	ldrb	r3, [r7, #7]
 8008504:	f003 021f 	and.w	r2, r3, #31
 8008508:	4907      	ldr	r1, [pc, #28]	; (8008528 <__NVIC_EnableIRQ+0x38>)
 800850a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800850e:	095b      	lsrs	r3, r3, #5
 8008510:	2001      	movs	r0, #1
 8008512:	fa00 f202 	lsl.w	r2, r0, r2
 8008516:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800851a:	bf00      	nop
 800851c:	370c      	adds	r7, #12
 800851e:	46bd      	mov	sp, r7
 8008520:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008524:	4770      	bx	lr
 8008526:	bf00      	nop
 8008528:	e000e100 	.word	0xe000e100

0800852c <__NVIC_DisableIRQ>:
 800852c:	b480      	push	{r7}
 800852e:	b083      	sub	sp, #12
 8008530:	af00      	add	r7, sp, #0
 8008532:	4603      	mov	r3, r0
 8008534:	71fb      	strb	r3, [r7, #7]
 8008536:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800853a:	2b00      	cmp	r3, #0
 800853c:	db12      	blt.n	8008564 <__NVIC_DisableIRQ+0x38>
 800853e:	79fb      	ldrb	r3, [r7, #7]
 8008540:	f003 021f 	and.w	r2, r3, #31
 8008544:	490a      	ldr	r1, [pc, #40]	; (8008570 <__NVIC_DisableIRQ+0x44>)
 8008546:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800854a:	095b      	lsrs	r3, r3, #5
 800854c:	2001      	movs	r0, #1
 800854e:	fa00 f202 	lsl.w	r2, r0, r2
 8008552:	3320      	adds	r3, #32
 8008554:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8008558:	f3bf 8f4f 	dsb	sy
 800855c:	bf00      	nop
 800855e:	f3bf 8f6f 	isb	sy
 8008562:	bf00      	nop
 8008564:	bf00      	nop
 8008566:	370c      	adds	r7, #12
 8008568:	46bd      	mov	sp, r7
 800856a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800856e:	4770      	bx	lr
 8008570:	e000e100 	.word	0xe000e100

08008574 <__NVIC_SetPriority>:
 8008574:	b480      	push	{r7}
 8008576:	b083      	sub	sp, #12
 8008578:	af00      	add	r7, sp, #0
 800857a:	4603      	mov	r3, r0
 800857c:	6039      	str	r1, [r7, #0]
 800857e:	71fb      	strb	r3, [r7, #7]
 8008580:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008584:	2b00      	cmp	r3, #0
 8008586:	db0a      	blt.n	800859e <__NVIC_SetPriority+0x2a>
 8008588:	683b      	ldr	r3, [r7, #0]
 800858a:	b2da      	uxtb	r2, r3
 800858c:	490c      	ldr	r1, [pc, #48]	; (80085c0 <__NVIC_SetPriority+0x4c>)
 800858e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008592:	0112      	lsls	r2, r2, #4
 8008594:	b2d2      	uxtb	r2, r2
 8008596:	440b      	add	r3, r1
 8008598:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 800859c:	e00a      	b.n	80085b4 <__NVIC_SetPriority+0x40>
 800859e:	683b      	ldr	r3, [r7, #0]
 80085a0:	b2da      	uxtb	r2, r3
 80085a2:	4908      	ldr	r1, [pc, #32]	; (80085c4 <__NVIC_SetPriority+0x50>)
 80085a4:	79fb      	ldrb	r3, [r7, #7]
 80085a6:	f003 030f 	and.w	r3, r3, #15
 80085aa:	3b04      	subs	r3, #4
 80085ac:	0112      	lsls	r2, r2, #4
 80085ae:	b2d2      	uxtb	r2, r2
 80085b0:	440b      	add	r3, r1
 80085b2:	761a      	strb	r2, [r3, #24]
 80085b4:	bf00      	nop
 80085b6:	370c      	adds	r7, #12
 80085b8:	46bd      	mov	sp, r7
 80085ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085be:	4770      	bx	lr
 80085c0:	e000e100 	.word	0xe000e100
 80085c4:	e000ed00 	.word	0xe000ed00

080085c8 <NVIC_EncodePriority>:
 80085c8:	b480      	push	{r7}
 80085ca:	b089      	sub	sp, #36	; 0x24
 80085cc:	af00      	add	r7, sp, #0
 80085ce:	60f8      	str	r0, [r7, #12]
 80085d0:	60b9      	str	r1, [r7, #8]
 80085d2:	607a      	str	r2, [r7, #4]
 80085d4:	68fb      	ldr	r3, [r7, #12]
 80085d6:	f003 0307 	and.w	r3, r3, #7
 80085da:	61fb      	str	r3, [r7, #28]
 80085dc:	69fb      	ldr	r3, [r7, #28]
 80085de:	f1c3 0307 	rsb	r3, r3, #7
 80085e2:	2b04      	cmp	r3, #4
 80085e4:	bf28      	it	cs
 80085e6:	2304      	movcs	r3, #4
 80085e8:	61bb      	str	r3, [r7, #24]
 80085ea:	69fb      	ldr	r3, [r7, #28]
 80085ec:	3304      	adds	r3, #4
 80085ee:	2b06      	cmp	r3, #6
 80085f0:	d902      	bls.n	80085f8 <NVIC_EncodePriority+0x30>
 80085f2:	69fb      	ldr	r3, [r7, #28]
 80085f4:	3b03      	subs	r3, #3
 80085f6:	e000      	b.n	80085fa <NVIC_EncodePriority+0x32>
 80085f8:	2300      	movs	r3, #0
 80085fa:	617b      	str	r3, [r7, #20]
 80085fc:	f04f 32ff 	mov.w	r2, #4294967295
 8008600:	69bb      	ldr	r3, [r7, #24]
 8008602:	fa02 f303 	lsl.w	r3, r2, r3
 8008606:	43da      	mvns	r2, r3
 8008608:	68bb      	ldr	r3, [r7, #8]
 800860a:	401a      	ands	r2, r3
 800860c:	697b      	ldr	r3, [r7, #20]
 800860e:	409a      	lsls	r2, r3
 8008610:	f04f 31ff 	mov.w	r1, #4294967295
 8008614:	697b      	ldr	r3, [r7, #20]
 8008616:	fa01 f303 	lsl.w	r3, r1, r3
 800861a:	43d9      	mvns	r1, r3
 800861c:	687b      	ldr	r3, [r7, #4]
 800861e:	400b      	ands	r3, r1
 8008620:	4313      	orrs	r3, r2
 8008622:	4618      	mov	r0, r3
 8008624:	3724      	adds	r7, #36	; 0x24
 8008626:	46bd      	mov	sp, r7
 8008628:	f85d 7b04 	ldr.w	r7, [sp], #4
 800862c:	4770      	bx	lr
	...

08008630 <SysTick_Config>:
 8008630:	b580      	push	{r7, lr}
 8008632:	b082      	sub	sp, #8
 8008634:	af00      	add	r7, sp, #0
 8008636:	6078      	str	r0, [r7, #4]
 8008638:	687b      	ldr	r3, [r7, #4]
 800863a:	3b01      	subs	r3, #1
 800863c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8008640:	d301      	bcc.n	8008646 <SysTick_Config+0x16>
 8008642:	2301      	movs	r3, #1
 8008644:	e00f      	b.n	8008666 <SysTick_Config+0x36>
 8008646:	4a0a      	ldr	r2, [pc, #40]	; (8008670 <SysTick_Config+0x40>)
 8008648:	687b      	ldr	r3, [r7, #4]
 800864a:	3b01      	subs	r3, #1
 800864c:	6053      	str	r3, [r2, #4]
 800864e:	210f      	movs	r1, #15
 8008650:	f04f 30ff 	mov.w	r0, #4294967295
 8008654:	f7ff ff8e 	bl	8008574 <__NVIC_SetPriority>
 8008658:	4b05      	ldr	r3, [pc, #20]	; (8008670 <SysTick_Config+0x40>)
 800865a:	2200      	movs	r2, #0
 800865c:	609a      	str	r2, [r3, #8]
 800865e:	4b04      	ldr	r3, [pc, #16]	; (8008670 <SysTick_Config+0x40>)
 8008660:	2207      	movs	r2, #7
 8008662:	601a      	str	r2, [r3, #0]
 8008664:	2300      	movs	r3, #0
 8008666:	4618      	mov	r0, r3
 8008668:	3708      	adds	r7, #8
 800866a:	46bd      	mov	sp, r7
 800866c:	bd80      	pop	{r7, pc}
 800866e:	bf00      	nop
 8008670:	e000e010 	.word	0xe000e010

08008674 <HAL_NVIC_SetPriorityGrouping>:
 8008674:	b580      	push	{r7, lr}
 8008676:	b082      	sub	sp, #8
 8008678:	af00      	add	r7, sp, #0
 800867a:	6078      	str	r0, [r7, #4]
 800867c:	6878      	ldr	r0, [r7, #4]
 800867e:	f7ff ff05 	bl	800848c <__NVIC_SetPriorityGrouping>
 8008682:	bf00      	nop
 8008684:	3708      	adds	r7, #8
 8008686:	46bd      	mov	sp, r7
 8008688:	bd80      	pop	{r7, pc}

0800868a <HAL_NVIC_SetPriority>:
 800868a:	b580      	push	{r7, lr}
 800868c:	b086      	sub	sp, #24
 800868e:	af00      	add	r7, sp, #0
 8008690:	4603      	mov	r3, r0
 8008692:	60b9      	str	r1, [r7, #8]
 8008694:	607a      	str	r2, [r7, #4]
 8008696:	73fb      	strb	r3, [r7, #15]
 8008698:	2300      	movs	r3, #0
 800869a:	617b      	str	r3, [r7, #20]
 800869c:	f7ff ff1a 	bl	80084d4 <__NVIC_GetPriorityGrouping>
 80086a0:	6178      	str	r0, [r7, #20]
 80086a2:	687a      	ldr	r2, [r7, #4]
 80086a4:	68b9      	ldr	r1, [r7, #8]
 80086a6:	6978      	ldr	r0, [r7, #20]
 80086a8:	f7ff ff8e 	bl	80085c8 <NVIC_EncodePriority>
 80086ac:	4602      	mov	r2, r0
 80086ae:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80086b2:	4611      	mov	r1, r2
 80086b4:	4618      	mov	r0, r3
 80086b6:	f7ff ff5d 	bl	8008574 <__NVIC_SetPriority>
 80086ba:	bf00      	nop
 80086bc:	3718      	adds	r7, #24
 80086be:	46bd      	mov	sp, r7
 80086c0:	bd80      	pop	{r7, pc}

080086c2 <HAL_NVIC_EnableIRQ>:
 80086c2:	b580      	push	{r7, lr}
 80086c4:	b082      	sub	sp, #8
 80086c6:	af00      	add	r7, sp, #0
 80086c8:	4603      	mov	r3, r0
 80086ca:	71fb      	strb	r3, [r7, #7]
 80086cc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80086d0:	4618      	mov	r0, r3
 80086d2:	f7ff ff0d 	bl	80084f0 <__NVIC_EnableIRQ>
 80086d6:	bf00      	nop
 80086d8:	3708      	adds	r7, #8
 80086da:	46bd      	mov	sp, r7
 80086dc:	bd80      	pop	{r7, pc}

080086de <HAL_NVIC_DisableIRQ>:
 80086de:	b580      	push	{r7, lr}
 80086e0:	b082      	sub	sp, #8
 80086e2:	af00      	add	r7, sp, #0
 80086e4:	4603      	mov	r3, r0
 80086e6:	71fb      	strb	r3, [r7, #7]
 80086e8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80086ec:	4618      	mov	r0, r3
 80086ee:	f7ff ff1d 	bl	800852c <__NVIC_DisableIRQ>
 80086f2:	bf00      	nop
 80086f4:	3708      	adds	r7, #8
 80086f6:	46bd      	mov	sp, r7
 80086f8:	bd80      	pop	{r7, pc}

080086fa <HAL_SYSTICK_Config>:
 80086fa:	b580      	push	{r7, lr}
 80086fc:	b082      	sub	sp, #8
 80086fe:	af00      	add	r7, sp, #0
 8008700:	6078      	str	r0, [r7, #4]
 8008702:	6878      	ldr	r0, [r7, #4]
 8008704:	f7ff ff94 	bl	8008630 <SysTick_Config>
 8008708:	4603      	mov	r3, r0
 800870a:	4618      	mov	r0, r3
 800870c:	3708      	adds	r7, #8
 800870e:	46bd      	mov	sp, r7
 8008710:	bd80      	pop	{r7, pc}
	...

08008714 <HAL_DMA_Init>:
 8008714:	b580      	push	{r7, lr}
 8008716:	b086      	sub	sp, #24
 8008718:	af00      	add	r7, sp, #0
 800871a:	6078      	str	r0, [r7, #4]
 800871c:	2300      	movs	r3, #0
 800871e:	617b      	str	r3, [r7, #20]
 8008720:	f7ff f90e 	bl	8007940 <HAL_GetTick>
 8008724:	6138      	str	r0, [r7, #16]
 8008726:	687b      	ldr	r3, [r7, #4]
 8008728:	2b00      	cmp	r3, #0
 800872a:	d101      	bne.n	8008730 <HAL_DMA_Init+0x1c>
 800872c:	2301      	movs	r3, #1
 800872e:	e099      	b.n	8008864 <HAL_DMA_Init+0x150>
 8008730:	687b      	ldr	r3, [r7, #4]
 8008732:	2202      	movs	r2, #2
 8008734:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008738:	687b      	ldr	r3, [r7, #4]
 800873a:	2200      	movs	r2, #0
 800873c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008740:	687b      	ldr	r3, [r7, #4]
 8008742:	681b      	ldr	r3, [r3, #0]
 8008744:	681a      	ldr	r2, [r3, #0]
 8008746:	687b      	ldr	r3, [r7, #4]
 8008748:	681b      	ldr	r3, [r3, #0]
 800874a:	f022 0201 	bic.w	r2, r2, #1
 800874e:	601a      	str	r2, [r3, #0]
 8008750:	e00f      	b.n	8008772 <HAL_DMA_Init+0x5e>
 8008752:	f7ff f8f5 	bl	8007940 <HAL_GetTick>
 8008756:	4602      	mov	r2, r0
 8008758:	693b      	ldr	r3, [r7, #16]
 800875a:	1ad3      	subs	r3, r2, r3
 800875c:	2b05      	cmp	r3, #5
 800875e:	d908      	bls.n	8008772 <HAL_DMA_Init+0x5e>
 8008760:	687b      	ldr	r3, [r7, #4]
 8008762:	2220      	movs	r2, #32
 8008764:	655a      	str	r2, [r3, #84]	; 0x54
 8008766:	687b      	ldr	r3, [r7, #4]
 8008768:	2203      	movs	r2, #3
 800876a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800876e:	2303      	movs	r3, #3
 8008770:	e078      	b.n	8008864 <HAL_DMA_Init+0x150>
 8008772:	687b      	ldr	r3, [r7, #4]
 8008774:	681b      	ldr	r3, [r3, #0]
 8008776:	681b      	ldr	r3, [r3, #0]
 8008778:	f003 0301 	and.w	r3, r3, #1
 800877c:	2b00      	cmp	r3, #0
 800877e:	d1e8      	bne.n	8008752 <HAL_DMA_Init+0x3e>
 8008780:	687b      	ldr	r3, [r7, #4]
 8008782:	681b      	ldr	r3, [r3, #0]
 8008784:	681b      	ldr	r3, [r3, #0]
 8008786:	617b      	str	r3, [r7, #20]
 8008788:	697a      	ldr	r2, [r7, #20]
 800878a:	4b38      	ldr	r3, [pc, #224]	; (800886c <HAL_DMA_Init+0x158>)
 800878c:	4013      	ands	r3, r2
 800878e:	617b      	str	r3, [r7, #20]
 8008790:	687b      	ldr	r3, [r7, #4]
 8008792:	685a      	ldr	r2, [r3, #4]
 8008794:	687b      	ldr	r3, [r7, #4]
 8008796:	689b      	ldr	r3, [r3, #8]
 8008798:	431a      	orrs	r2, r3
 800879a:	687b      	ldr	r3, [r7, #4]
 800879c:	68db      	ldr	r3, [r3, #12]
 800879e:	431a      	orrs	r2, r3
 80087a0:	687b      	ldr	r3, [r7, #4]
 80087a2:	691b      	ldr	r3, [r3, #16]
 80087a4:	431a      	orrs	r2, r3
 80087a6:	687b      	ldr	r3, [r7, #4]
 80087a8:	695b      	ldr	r3, [r3, #20]
 80087aa:	431a      	orrs	r2, r3
 80087ac:	687b      	ldr	r3, [r7, #4]
 80087ae:	699b      	ldr	r3, [r3, #24]
 80087b0:	431a      	orrs	r2, r3
 80087b2:	687b      	ldr	r3, [r7, #4]
 80087b4:	69db      	ldr	r3, [r3, #28]
 80087b6:	431a      	orrs	r2, r3
 80087b8:	687b      	ldr	r3, [r7, #4]
 80087ba:	6a1b      	ldr	r3, [r3, #32]
 80087bc:	4313      	orrs	r3, r2
 80087be:	697a      	ldr	r2, [r7, #20]
 80087c0:	4313      	orrs	r3, r2
 80087c2:	617b      	str	r3, [r7, #20]
 80087c4:	687b      	ldr	r3, [r7, #4]
 80087c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80087c8:	2b04      	cmp	r3, #4
 80087ca:	d107      	bne.n	80087dc <HAL_DMA_Init+0xc8>
 80087cc:	687b      	ldr	r3, [r7, #4]
 80087ce:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80087d0:	687b      	ldr	r3, [r7, #4]
 80087d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80087d4:	4313      	orrs	r3, r2
 80087d6:	697a      	ldr	r2, [r7, #20]
 80087d8:	4313      	orrs	r3, r2
 80087da:	617b      	str	r3, [r7, #20]
 80087dc:	687b      	ldr	r3, [r7, #4]
 80087de:	681b      	ldr	r3, [r3, #0]
 80087e0:	697a      	ldr	r2, [r7, #20]
 80087e2:	601a      	str	r2, [r3, #0]
 80087e4:	687b      	ldr	r3, [r7, #4]
 80087e6:	681b      	ldr	r3, [r3, #0]
 80087e8:	695b      	ldr	r3, [r3, #20]
 80087ea:	617b      	str	r3, [r7, #20]
 80087ec:	697b      	ldr	r3, [r7, #20]
 80087ee:	f023 0307 	bic.w	r3, r3, #7
 80087f2:	617b      	str	r3, [r7, #20]
 80087f4:	687b      	ldr	r3, [r7, #4]
 80087f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80087f8:	697a      	ldr	r2, [r7, #20]
 80087fa:	4313      	orrs	r3, r2
 80087fc:	617b      	str	r3, [r7, #20]
 80087fe:	687b      	ldr	r3, [r7, #4]
 8008800:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008802:	2b04      	cmp	r3, #4
 8008804:	d117      	bne.n	8008836 <HAL_DMA_Init+0x122>
 8008806:	687b      	ldr	r3, [r7, #4]
 8008808:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800880a:	697a      	ldr	r2, [r7, #20]
 800880c:	4313      	orrs	r3, r2
 800880e:	617b      	str	r3, [r7, #20]
 8008810:	687b      	ldr	r3, [r7, #4]
 8008812:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008814:	2b00      	cmp	r3, #0
 8008816:	d00e      	beq.n	8008836 <HAL_DMA_Init+0x122>
 8008818:	6878      	ldr	r0, [r7, #4]
 800881a:	f000 fb01 	bl	8008e20 <DMA_CheckFifoParam>
 800881e:	4603      	mov	r3, r0
 8008820:	2b00      	cmp	r3, #0
 8008822:	d008      	beq.n	8008836 <HAL_DMA_Init+0x122>
 8008824:	687b      	ldr	r3, [r7, #4]
 8008826:	2240      	movs	r2, #64	; 0x40
 8008828:	655a      	str	r2, [r3, #84]	; 0x54
 800882a:	687b      	ldr	r3, [r7, #4]
 800882c:	2201      	movs	r2, #1
 800882e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008832:	2301      	movs	r3, #1
 8008834:	e016      	b.n	8008864 <HAL_DMA_Init+0x150>
 8008836:	687b      	ldr	r3, [r7, #4]
 8008838:	681b      	ldr	r3, [r3, #0]
 800883a:	697a      	ldr	r2, [r7, #20]
 800883c:	615a      	str	r2, [r3, #20]
 800883e:	6878      	ldr	r0, [r7, #4]
 8008840:	f000 fab8 	bl	8008db4 <DMA_CalcBaseAndBitshift>
 8008844:	4603      	mov	r3, r0
 8008846:	60fb      	str	r3, [r7, #12]
 8008848:	687b      	ldr	r3, [r7, #4]
 800884a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800884c:	223f      	movs	r2, #63	; 0x3f
 800884e:	409a      	lsls	r2, r3
 8008850:	68fb      	ldr	r3, [r7, #12]
 8008852:	609a      	str	r2, [r3, #8]
 8008854:	687b      	ldr	r3, [r7, #4]
 8008856:	2200      	movs	r2, #0
 8008858:	655a      	str	r2, [r3, #84]	; 0x54
 800885a:	687b      	ldr	r3, [r7, #4]
 800885c:	2201      	movs	r2, #1
 800885e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008862:	2300      	movs	r3, #0
 8008864:	4618      	mov	r0, r3
 8008866:	3718      	adds	r7, #24
 8008868:	46bd      	mov	sp, r7
 800886a:	bd80      	pop	{r7, pc}
 800886c:	f010803f 	.word	0xf010803f

08008870 <HAL_DMA_Start_IT>:
 8008870:	b580      	push	{r7, lr}
 8008872:	b086      	sub	sp, #24
 8008874:	af00      	add	r7, sp, #0
 8008876:	60f8      	str	r0, [r7, #12]
 8008878:	60b9      	str	r1, [r7, #8]
 800887a:	607a      	str	r2, [r7, #4]
 800887c:	603b      	str	r3, [r7, #0]
 800887e:	2300      	movs	r3, #0
 8008880:	75fb      	strb	r3, [r7, #23]
 8008882:	68fb      	ldr	r3, [r7, #12]
 8008884:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008886:	613b      	str	r3, [r7, #16]
 8008888:	68fb      	ldr	r3, [r7, #12]
 800888a:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800888e:	2b01      	cmp	r3, #1
 8008890:	d101      	bne.n	8008896 <HAL_DMA_Start_IT+0x26>
 8008892:	2302      	movs	r3, #2
 8008894:	e040      	b.n	8008918 <HAL_DMA_Start_IT+0xa8>
 8008896:	68fb      	ldr	r3, [r7, #12]
 8008898:	2201      	movs	r2, #1
 800889a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800889e:	68fb      	ldr	r3, [r7, #12]
 80088a0:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80088a4:	b2db      	uxtb	r3, r3
 80088a6:	2b01      	cmp	r3, #1
 80088a8:	d12f      	bne.n	800890a <HAL_DMA_Start_IT+0x9a>
 80088aa:	68fb      	ldr	r3, [r7, #12]
 80088ac:	2202      	movs	r2, #2
 80088ae:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80088b2:	68fb      	ldr	r3, [r7, #12]
 80088b4:	2200      	movs	r2, #0
 80088b6:	655a      	str	r2, [r3, #84]	; 0x54
 80088b8:	683b      	ldr	r3, [r7, #0]
 80088ba:	687a      	ldr	r2, [r7, #4]
 80088bc:	68b9      	ldr	r1, [r7, #8]
 80088be:	68f8      	ldr	r0, [r7, #12]
 80088c0:	f000 fa4a 	bl	8008d58 <DMA_SetConfig>
 80088c4:	68fb      	ldr	r3, [r7, #12]
 80088c6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80088c8:	223f      	movs	r2, #63	; 0x3f
 80088ca:	409a      	lsls	r2, r3
 80088cc:	693b      	ldr	r3, [r7, #16]
 80088ce:	609a      	str	r2, [r3, #8]
 80088d0:	68fb      	ldr	r3, [r7, #12]
 80088d2:	681b      	ldr	r3, [r3, #0]
 80088d4:	681a      	ldr	r2, [r3, #0]
 80088d6:	68fb      	ldr	r3, [r7, #12]
 80088d8:	681b      	ldr	r3, [r3, #0]
 80088da:	f042 0216 	orr.w	r2, r2, #22
 80088de:	601a      	str	r2, [r3, #0]
 80088e0:	68fb      	ldr	r3, [r7, #12]
 80088e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80088e4:	2b00      	cmp	r3, #0
 80088e6:	d007      	beq.n	80088f8 <HAL_DMA_Start_IT+0x88>
 80088e8:	68fb      	ldr	r3, [r7, #12]
 80088ea:	681b      	ldr	r3, [r3, #0]
 80088ec:	681a      	ldr	r2, [r3, #0]
 80088ee:	68fb      	ldr	r3, [r7, #12]
 80088f0:	681b      	ldr	r3, [r3, #0]
 80088f2:	f042 0208 	orr.w	r2, r2, #8
 80088f6:	601a      	str	r2, [r3, #0]
 80088f8:	68fb      	ldr	r3, [r7, #12]
 80088fa:	681b      	ldr	r3, [r3, #0]
 80088fc:	681a      	ldr	r2, [r3, #0]
 80088fe:	68fb      	ldr	r3, [r7, #12]
 8008900:	681b      	ldr	r3, [r3, #0]
 8008902:	f042 0201 	orr.w	r2, r2, #1
 8008906:	601a      	str	r2, [r3, #0]
 8008908:	e005      	b.n	8008916 <HAL_DMA_Start_IT+0xa6>
 800890a:	68fb      	ldr	r3, [r7, #12]
 800890c:	2200      	movs	r2, #0
 800890e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008912:	2302      	movs	r3, #2
 8008914:	75fb      	strb	r3, [r7, #23]
 8008916:	7dfb      	ldrb	r3, [r7, #23]
 8008918:	4618      	mov	r0, r3
 800891a:	3718      	adds	r7, #24
 800891c:	46bd      	mov	sp, r7
 800891e:	bd80      	pop	{r7, pc}

08008920 <HAL_DMA_Abort>:
 8008920:	b580      	push	{r7, lr}
 8008922:	b084      	sub	sp, #16
 8008924:	af00      	add	r7, sp, #0
 8008926:	6078      	str	r0, [r7, #4]
 8008928:	687b      	ldr	r3, [r7, #4]
 800892a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800892c:	60fb      	str	r3, [r7, #12]
 800892e:	f7ff f807 	bl	8007940 <HAL_GetTick>
 8008932:	60b8      	str	r0, [r7, #8]
 8008934:	687b      	ldr	r3, [r7, #4]
 8008936:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800893a:	b2db      	uxtb	r3, r3
 800893c:	2b02      	cmp	r3, #2
 800893e:	d008      	beq.n	8008952 <HAL_DMA_Abort+0x32>
 8008940:	687b      	ldr	r3, [r7, #4]
 8008942:	2280      	movs	r2, #128	; 0x80
 8008944:	655a      	str	r2, [r3, #84]	; 0x54
 8008946:	687b      	ldr	r3, [r7, #4]
 8008948:	2200      	movs	r2, #0
 800894a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800894e:	2301      	movs	r3, #1
 8008950:	e052      	b.n	80089f8 <HAL_DMA_Abort+0xd8>
 8008952:	687b      	ldr	r3, [r7, #4]
 8008954:	681b      	ldr	r3, [r3, #0]
 8008956:	681a      	ldr	r2, [r3, #0]
 8008958:	687b      	ldr	r3, [r7, #4]
 800895a:	681b      	ldr	r3, [r3, #0]
 800895c:	f022 0216 	bic.w	r2, r2, #22
 8008960:	601a      	str	r2, [r3, #0]
 8008962:	687b      	ldr	r3, [r7, #4]
 8008964:	681b      	ldr	r3, [r3, #0]
 8008966:	695a      	ldr	r2, [r3, #20]
 8008968:	687b      	ldr	r3, [r7, #4]
 800896a:	681b      	ldr	r3, [r3, #0]
 800896c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8008970:	615a      	str	r2, [r3, #20]
 8008972:	687b      	ldr	r3, [r7, #4]
 8008974:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008976:	2b00      	cmp	r3, #0
 8008978:	d103      	bne.n	8008982 <HAL_DMA_Abort+0x62>
 800897a:	687b      	ldr	r3, [r7, #4]
 800897c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800897e:	2b00      	cmp	r3, #0
 8008980:	d007      	beq.n	8008992 <HAL_DMA_Abort+0x72>
 8008982:	687b      	ldr	r3, [r7, #4]
 8008984:	681b      	ldr	r3, [r3, #0]
 8008986:	681a      	ldr	r2, [r3, #0]
 8008988:	687b      	ldr	r3, [r7, #4]
 800898a:	681b      	ldr	r3, [r3, #0]
 800898c:	f022 0208 	bic.w	r2, r2, #8
 8008990:	601a      	str	r2, [r3, #0]
 8008992:	687b      	ldr	r3, [r7, #4]
 8008994:	681b      	ldr	r3, [r3, #0]
 8008996:	681a      	ldr	r2, [r3, #0]
 8008998:	687b      	ldr	r3, [r7, #4]
 800899a:	681b      	ldr	r3, [r3, #0]
 800899c:	f022 0201 	bic.w	r2, r2, #1
 80089a0:	601a      	str	r2, [r3, #0]
 80089a2:	e013      	b.n	80089cc <HAL_DMA_Abort+0xac>
 80089a4:	f7fe ffcc 	bl	8007940 <HAL_GetTick>
 80089a8:	4602      	mov	r2, r0
 80089aa:	68bb      	ldr	r3, [r7, #8]
 80089ac:	1ad3      	subs	r3, r2, r3
 80089ae:	2b05      	cmp	r3, #5
 80089b0:	d90c      	bls.n	80089cc <HAL_DMA_Abort+0xac>
 80089b2:	687b      	ldr	r3, [r7, #4]
 80089b4:	2220      	movs	r2, #32
 80089b6:	655a      	str	r2, [r3, #84]	; 0x54
 80089b8:	687b      	ldr	r3, [r7, #4]
 80089ba:	2203      	movs	r2, #3
 80089bc:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80089c0:	687b      	ldr	r3, [r7, #4]
 80089c2:	2200      	movs	r2, #0
 80089c4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80089c8:	2303      	movs	r3, #3
 80089ca:	e015      	b.n	80089f8 <HAL_DMA_Abort+0xd8>
 80089cc:	687b      	ldr	r3, [r7, #4]
 80089ce:	681b      	ldr	r3, [r3, #0]
 80089d0:	681b      	ldr	r3, [r3, #0]
 80089d2:	f003 0301 	and.w	r3, r3, #1
 80089d6:	2b00      	cmp	r3, #0
 80089d8:	d1e4      	bne.n	80089a4 <HAL_DMA_Abort+0x84>
 80089da:	687b      	ldr	r3, [r7, #4]
 80089dc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80089de:	223f      	movs	r2, #63	; 0x3f
 80089e0:	409a      	lsls	r2, r3
 80089e2:	68fb      	ldr	r3, [r7, #12]
 80089e4:	609a      	str	r2, [r3, #8]
 80089e6:	687b      	ldr	r3, [r7, #4]
 80089e8:	2201      	movs	r2, #1
 80089ea:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80089ee:	687b      	ldr	r3, [r7, #4]
 80089f0:	2200      	movs	r2, #0
 80089f2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80089f6:	2300      	movs	r3, #0
 80089f8:	4618      	mov	r0, r3
 80089fa:	3710      	adds	r7, #16
 80089fc:	46bd      	mov	sp, r7
 80089fe:	bd80      	pop	{r7, pc}

08008a00 <HAL_DMA_Abort_IT>:
 8008a00:	b480      	push	{r7}
 8008a02:	b083      	sub	sp, #12
 8008a04:	af00      	add	r7, sp, #0
 8008a06:	6078      	str	r0, [r7, #4]
 8008a08:	687b      	ldr	r3, [r7, #4]
 8008a0a:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8008a0e:	b2db      	uxtb	r3, r3
 8008a10:	2b02      	cmp	r3, #2
 8008a12:	d004      	beq.n	8008a1e <HAL_DMA_Abort_IT+0x1e>
 8008a14:	687b      	ldr	r3, [r7, #4]
 8008a16:	2280      	movs	r2, #128	; 0x80
 8008a18:	655a      	str	r2, [r3, #84]	; 0x54
 8008a1a:	2301      	movs	r3, #1
 8008a1c:	e00c      	b.n	8008a38 <HAL_DMA_Abort_IT+0x38>
 8008a1e:	687b      	ldr	r3, [r7, #4]
 8008a20:	2205      	movs	r2, #5
 8008a22:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008a26:	687b      	ldr	r3, [r7, #4]
 8008a28:	681b      	ldr	r3, [r3, #0]
 8008a2a:	681a      	ldr	r2, [r3, #0]
 8008a2c:	687b      	ldr	r3, [r7, #4]
 8008a2e:	681b      	ldr	r3, [r3, #0]
 8008a30:	f022 0201 	bic.w	r2, r2, #1
 8008a34:	601a      	str	r2, [r3, #0]
 8008a36:	2300      	movs	r3, #0
 8008a38:	4618      	mov	r0, r3
 8008a3a:	370c      	adds	r7, #12
 8008a3c:	46bd      	mov	sp, r7
 8008a3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a42:	4770      	bx	lr

08008a44 <HAL_DMA_IRQHandler>:
 8008a44:	b580      	push	{r7, lr}
 8008a46:	b086      	sub	sp, #24
 8008a48:	af00      	add	r7, sp, #0
 8008a4a:	6078      	str	r0, [r7, #4]
 8008a4c:	2300      	movs	r3, #0
 8008a4e:	60bb      	str	r3, [r7, #8]
 8008a50:	4b8e      	ldr	r3, [pc, #568]	; (8008c8c <HAL_DMA_IRQHandler+0x248>)
 8008a52:	681b      	ldr	r3, [r3, #0]
 8008a54:	4a8e      	ldr	r2, [pc, #568]	; (8008c90 <HAL_DMA_IRQHandler+0x24c>)
 8008a56:	fba2 2303 	umull	r2, r3, r2, r3
 8008a5a:	0a9b      	lsrs	r3, r3, #10
 8008a5c:	617b      	str	r3, [r7, #20]
 8008a5e:	687b      	ldr	r3, [r7, #4]
 8008a60:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008a62:	613b      	str	r3, [r7, #16]
 8008a64:	693b      	ldr	r3, [r7, #16]
 8008a66:	681b      	ldr	r3, [r3, #0]
 8008a68:	60fb      	str	r3, [r7, #12]
 8008a6a:	687b      	ldr	r3, [r7, #4]
 8008a6c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008a6e:	2208      	movs	r2, #8
 8008a70:	409a      	lsls	r2, r3
 8008a72:	68fb      	ldr	r3, [r7, #12]
 8008a74:	4013      	ands	r3, r2
 8008a76:	2b00      	cmp	r3, #0
 8008a78:	d01a      	beq.n	8008ab0 <HAL_DMA_IRQHandler+0x6c>
 8008a7a:	687b      	ldr	r3, [r7, #4]
 8008a7c:	681b      	ldr	r3, [r3, #0]
 8008a7e:	681b      	ldr	r3, [r3, #0]
 8008a80:	f003 0304 	and.w	r3, r3, #4
 8008a84:	2b00      	cmp	r3, #0
 8008a86:	d013      	beq.n	8008ab0 <HAL_DMA_IRQHandler+0x6c>
 8008a88:	687b      	ldr	r3, [r7, #4]
 8008a8a:	681b      	ldr	r3, [r3, #0]
 8008a8c:	681a      	ldr	r2, [r3, #0]
 8008a8e:	687b      	ldr	r3, [r7, #4]
 8008a90:	681b      	ldr	r3, [r3, #0]
 8008a92:	f022 0204 	bic.w	r2, r2, #4
 8008a96:	601a      	str	r2, [r3, #0]
 8008a98:	687b      	ldr	r3, [r7, #4]
 8008a9a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008a9c:	2208      	movs	r2, #8
 8008a9e:	409a      	lsls	r2, r3
 8008aa0:	693b      	ldr	r3, [r7, #16]
 8008aa2:	609a      	str	r2, [r3, #8]
 8008aa4:	687b      	ldr	r3, [r7, #4]
 8008aa6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008aa8:	f043 0201 	orr.w	r2, r3, #1
 8008aac:	687b      	ldr	r3, [r7, #4]
 8008aae:	655a      	str	r2, [r3, #84]	; 0x54
 8008ab0:	687b      	ldr	r3, [r7, #4]
 8008ab2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008ab4:	2201      	movs	r2, #1
 8008ab6:	409a      	lsls	r2, r3
 8008ab8:	68fb      	ldr	r3, [r7, #12]
 8008aba:	4013      	ands	r3, r2
 8008abc:	2b00      	cmp	r3, #0
 8008abe:	d012      	beq.n	8008ae6 <HAL_DMA_IRQHandler+0xa2>
 8008ac0:	687b      	ldr	r3, [r7, #4]
 8008ac2:	681b      	ldr	r3, [r3, #0]
 8008ac4:	695b      	ldr	r3, [r3, #20]
 8008ac6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008aca:	2b00      	cmp	r3, #0
 8008acc:	d00b      	beq.n	8008ae6 <HAL_DMA_IRQHandler+0xa2>
 8008ace:	687b      	ldr	r3, [r7, #4]
 8008ad0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008ad2:	2201      	movs	r2, #1
 8008ad4:	409a      	lsls	r2, r3
 8008ad6:	693b      	ldr	r3, [r7, #16]
 8008ad8:	609a      	str	r2, [r3, #8]
 8008ada:	687b      	ldr	r3, [r7, #4]
 8008adc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008ade:	f043 0202 	orr.w	r2, r3, #2
 8008ae2:	687b      	ldr	r3, [r7, #4]
 8008ae4:	655a      	str	r2, [r3, #84]	; 0x54
 8008ae6:	687b      	ldr	r3, [r7, #4]
 8008ae8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008aea:	2204      	movs	r2, #4
 8008aec:	409a      	lsls	r2, r3
 8008aee:	68fb      	ldr	r3, [r7, #12]
 8008af0:	4013      	ands	r3, r2
 8008af2:	2b00      	cmp	r3, #0
 8008af4:	d012      	beq.n	8008b1c <HAL_DMA_IRQHandler+0xd8>
 8008af6:	687b      	ldr	r3, [r7, #4]
 8008af8:	681b      	ldr	r3, [r3, #0]
 8008afa:	681b      	ldr	r3, [r3, #0]
 8008afc:	f003 0302 	and.w	r3, r3, #2
 8008b00:	2b00      	cmp	r3, #0
 8008b02:	d00b      	beq.n	8008b1c <HAL_DMA_IRQHandler+0xd8>
 8008b04:	687b      	ldr	r3, [r7, #4]
 8008b06:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008b08:	2204      	movs	r2, #4
 8008b0a:	409a      	lsls	r2, r3
 8008b0c:	693b      	ldr	r3, [r7, #16]
 8008b0e:	609a      	str	r2, [r3, #8]
 8008b10:	687b      	ldr	r3, [r7, #4]
 8008b12:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008b14:	f043 0204 	orr.w	r2, r3, #4
 8008b18:	687b      	ldr	r3, [r7, #4]
 8008b1a:	655a      	str	r2, [r3, #84]	; 0x54
 8008b1c:	687b      	ldr	r3, [r7, #4]
 8008b1e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008b20:	2210      	movs	r2, #16
 8008b22:	409a      	lsls	r2, r3
 8008b24:	68fb      	ldr	r3, [r7, #12]
 8008b26:	4013      	ands	r3, r2
 8008b28:	2b00      	cmp	r3, #0
 8008b2a:	d043      	beq.n	8008bb4 <HAL_DMA_IRQHandler+0x170>
 8008b2c:	687b      	ldr	r3, [r7, #4]
 8008b2e:	681b      	ldr	r3, [r3, #0]
 8008b30:	681b      	ldr	r3, [r3, #0]
 8008b32:	f003 0308 	and.w	r3, r3, #8
 8008b36:	2b00      	cmp	r3, #0
 8008b38:	d03c      	beq.n	8008bb4 <HAL_DMA_IRQHandler+0x170>
 8008b3a:	687b      	ldr	r3, [r7, #4]
 8008b3c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008b3e:	2210      	movs	r2, #16
 8008b40:	409a      	lsls	r2, r3
 8008b42:	693b      	ldr	r3, [r7, #16]
 8008b44:	609a      	str	r2, [r3, #8]
 8008b46:	687b      	ldr	r3, [r7, #4]
 8008b48:	681b      	ldr	r3, [r3, #0]
 8008b4a:	681b      	ldr	r3, [r3, #0]
 8008b4c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8008b50:	2b00      	cmp	r3, #0
 8008b52:	d018      	beq.n	8008b86 <HAL_DMA_IRQHandler+0x142>
 8008b54:	687b      	ldr	r3, [r7, #4]
 8008b56:	681b      	ldr	r3, [r3, #0]
 8008b58:	681b      	ldr	r3, [r3, #0]
 8008b5a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8008b5e:	2b00      	cmp	r3, #0
 8008b60:	d108      	bne.n	8008b74 <HAL_DMA_IRQHandler+0x130>
 8008b62:	687b      	ldr	r3, [r7, #4]
 8008b64:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008b66:	2b00      	cmp	r3, #0
 8008b68:	d024      	beq.n	8008bb4 <HAL_DMA_IRQHandler+0x170>
 8008b6a:	687b      	ldr	r3, [r7, #4]
 8008b6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008b6e:	6878      	ldr	r0, [r7, #4]
 8008b70:	4798      	blx	r3
 8008b72:	e01f      	b.n	8008bb4 <HAL_DMA_IRQHandler+0x170>
 8008b74:	687b      	ldr	r3, [r7, #4]
 8008b76:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008b78:	2b00      	cmp	r3, #0
 8008b7a:	d01b      	beq.n	8008bb4 <HAL_DMA_IRQHandler+0x170>
 8008b7c:	687b      	ldr	r3, [r7, #4]
 8008b7e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008b80:	6878      	ldr	r0, [r7, #4]
 8008b82:	4798      	blx	r3
 8008b84:	e016      	b.n	8008bb4 <HAL_DMA_IRQHandler+0x170>
 8008b86:	687b      	ldr	r3, [r7, #4]
 8008b88:	681b      	ldr	r3, [r3, #0]
 8008b8a:	681b      	ldr	r3, [r3, #0]
 8008b8c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008b90:	2b00      	cmp	r3, #0
 8008b92:	d107      	bne.n	8008ba4 <HAL_DMA_IRQHandler+0x160>
 8008b94:	687b      	ldr	r3, [r7, #4]
 8008b96:	681b      	ldr	r3, [r3, #0]
 8008b98:	681a      	ldr	r2, [r3, #0]
 8008b9a:	687b      	ldr	r3, [r7, #4]
 8008b9c:	681b      	ldr	r3, [r3, #0]
 8008b9e:	f022 0208 	bic.w	r2, r2, #8
 8008ba2:	601a      	str	r2, [r3, #0]
 8008ba4:	687b      	ldr	r3, [r7, #4]
 8008ba6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008ba8:	2b00      	cmp	r3, #0
 8008baa:	d003      	beq.n	8008bb4 <HAL_DMA_IRQHandler+0x170>
 8008bac:	687b      	ldr	r3, [r7, #4]
 8008bae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008bb0:	6878      	ldr	r0, [r7, #4]
 8008bb2:	4798      	blx	r3
 8008bb4:	687b      	ldr	r3, [r7, #4]
 8008bb6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008bb8:	2220      	movs	r2, #32
 8008bba:	409a      	lsls	r2, r3
 8008bbc:	68fb      	ldr	r3, [r7, #12]
 8008bbe:	4013      	ands	r3, r2
 8008bc0:	2b00      	cmp	r3, #0
 8008bc2:	f000 808f 	beq.w	8008ce4 <HAL_DMA_IRQHandler+0x2a0>
 8008bc6:	687b      	ldr	r3, [r7, #4]
 8008bc8:	681b      	ldr	r3, [r3, #0]
 8008bca:	681b      	ldr	r3, [r3, #0]
 8008bcc:	f003 0310 	and.w	r3, r3, #16
 8008bd0:	2b00      	cmp	r3, #0
 8008bd2:	f000 8087 	beq.w	8008ce4 <HAL_DMA_IRQHandler+0x2a0>
 8008bd6:	687b      	ldr	r3, [r7, #4]
 8008bd8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008bda:	2220      	movs	r2, #32
 8008bdc:	409a      	lsls	r2, r3
 8008bde:	693b      	ldr	r3, [r7, #16]
 8008be0:	609a      	str	r2, [r3, #8]
 8008be2:	687b      	ldr	r3, [r7, #4]
 8008be4:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8008be8:	b2db      	uxtb	r3, r3
 8008bea:	2b05      	cmp	r3, #5
 8008bec:	d136      	bne.n	8008c5c <HAL_DMA_IRQHandler+0x218>
 8008bee:	687b      	ldr	r3, [r7, #4]
 8008bf0:	681b      	ldr	r3, [r3, #0]
 8008bf2:	681a      	ldr	r2, [r3, #0]
 8008bf4:	687b      	ldr	r3, [r7, #4]
 8008bf6:	681b      	ldr	r3, [r3, #0]
 8008bf8:	f022 0216 	bic.w	r2, r2, #22
 8008bfc:	601a      	str	r2, [r3, #0]
 8008bfe:	687b      	ldr	r3, [r7, #4]
 8008c00:	681b      	ldr	r3, [r3, #0]
 8008c02:	695a      	ldr	r2, [r3, #20]
 8008c04:	687b      	ldr	r3, [r7, #4]
 8008c06:	681b      	ldr	r3, [r3, #0]
 8008c08:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8008c0c:	615a      	str	r2, [r3, #20]
 8008c0e:	687b      	ldr	r3, [r7, #4]
 8008c10:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008c12:	2b00      	cmp	r3, #0
 8008c14:	d103      	bne.n	8008c1e <HAL_DMA_IRQHandler+0x1da>
 8008c16:	687b      	ldr	r3, [r7, #4]
 8008c18:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008c1a:	2b00      	cmp	r3, #0
 8008c1c:	d007      	beq.n	8008c2e <HAL_DMA_IRQHandler+0x1ea>
 8008c1e:	687b      	ldr	r3, [r7, #4]
 8008c20:	681b      	ldr	r3, [r3, #0]
 8008c22:	681a      	ldr	r2, [r3, #0]
 8008c24:	687b      	ldr	r3, [r7, #4]
 8008c26:	681b      	ldr	r3, [r3, #0]
 8008c28:	f022 0208 	bic.w	r2, r2, #8
 8008c2c:	601a      	str	r2, [r3, #0]
 8008c2e:	687b      	ldr	r3, [r7, #4]
 8008c30:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008c32:	223f      	movs	r2, #63	; 0x3f
 8008c34:	409a      	lsls	r2, r3
 8008c36:	693b      	ldr	r3, [r7, #16]
 8008c38:	609a      	str	r2, [r3, #8]
 8008c3a:	687b      	ldr	r3, [r7, #4]
 8008c3c:	2201      	movs	r2, #1
 8008c3e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008c42:	687b      	ldr	r3, [r7, #4]
 8008c44:	2200      	movs	r2, #0
 8008c46:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008c4a:	687b      	ldr	r3, [r7, #4]
 8008c4c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008c4e:	2b00      	cmp	r3, #0
 8008c50:	d07e      	beq.n	8008d50 <HAL_DMA_IRQHandler+0x30c>
 8008c52:	687b      	ldr	r3, [r7, #4]
 8008c54:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008c56:	6878      	ldr	r0, [r7, #4]
 8008c58:	4798      	blx	r3
 8008c5a:	e079      	b.n	8008d50 <HAL_DMA_IRQHandler+0x30c>
 8008c5c:	687b      	ldr	r3, [r7, #4]
 8008c5e:	681b      	ldr	r3, [r3, #0]
 8008c60:	681b      	ldr	r3, [r3, #0]
 8008c62:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8008c66:	2b00      	cmp	r3, #0
 8008c68:	d01d      	beq.n	8008ca6 <HAL_DMA_IRQHandler+0x262>
 8008c6a:	687b      	ldr	r3, [r7, #4]
 8008c6c:	681b      	ldr	r3, [r3, #0]
 8008c6e:	681b      	ldr	r3, [r3, #0]
 8008c70:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8008c74:	2b00      	cmp	r3, #0
 8008c76:	d10d      	bne.n	8008c94 <HAL_DMA_IRQHandler+0x250>
 8008c78:	687b      	ldr	r3, [r7, #4]
 8008c7a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008c7c:	2b00      	cmp	r3, #0
 8008c7e:	d031      	beq.n	8008ce4 <HAL_DMA_IRQHandler+0x2a0>
 8008c80:	687b      	ldr	r3, [r7, #4]
 8008c82:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008c84:	6878      	ldr	r0, [r7, #4]
 8008c86:	4798      	blx	r3
 8008c88:	e02c      	b.n	8008ce4 <HAL_DMA_IRQHandler+0x2a0>
 8008c8a:	bf00      	nop
 8008c8c:	20000130 	.word	0x20000130
 8008c90:	1b4e81b5 	.word	0x1b4e81b5
 8008c94:	687b      	ldr	r3, [r7, #4]
 8008c96:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008c98:	2b00      	cmp	r3, #0
 8008c9a:	d023      	beq.n	8008ce4 <HAL_DMA_IRQHandler+0x2a0>
 8008c9c:	687b      	ldr	r3, [r7, #4]
 8008c9e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008ca0:	6878      	ldr	r0, [r7, #4]
 8008ca2:	4798      	blx	r3
 8008ca4:	e01e      	b.n	8008ce4 <HAL_DMA_IRQHandler+0x2a0>
 8008ca6:	687b      	ldr	r3, [r7, #4]
 8008ca8:	681b      	ldr	r3, [r3, #0]
 8008caa:	681b      	ldr	r3, [r3, #0]
 8008cac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008cb0:	2b00      	cmp	r3, #0
 8008cb2:	d10f      	bne.n	8008cd4 <HAL_DMA_IRQHandler+0x290>
 8008cb4:	687b      	ldr	r3, [r7, #4]
 8008cb6:	681b      	ldr	r3, [r3, #0]
 8008cb8:	681a      	ldr	r2, [r3, #0]
 8008cba:	687b      	ldr	r3, [r7, #4]
 8008cbc:	681b      	ldr	r3, [r3, #0]
 8008cbe:	f022 0210 	bic.w	r2, r2, #16
 8008cc2:	601a      	str	r2, [r3, #0]
 8008cc4:	687b      	ldr	r3, [r7, #4]
 8008cc6:	2201      	movs	r2, #1
 8008cc8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008ccc:	687b      	ldr	r3, [r7, #4]
 8008cce:	2200      	movs	r2, #0
 8008cd0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008cd4:	687b      	ldr	r3, [r7, #4]
 8008cd6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008cd8:	2b00      	cmp	r3, #0
 8008cda:	d003      	beq.n	8008ce4 <HAL_DMA_IRQHandler+0x2a0>
 8008cdc:	687b      	ldr	r3, [r7, #4]
 8008cde:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008ce0:	6878      	ldr	r0, [r7, #4]
 8008ce2:	4798      	blx	r3
 8008ce4:	687b      	ldr	r3, [r7, #4]
 8008ce6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008ce8:	2b00      	cmp	r3, #0
 8008cea:	d032      	beq.n	8008d52 <HAL_DMA_IRQHandler+0x30e>
 8008cec:	687b      	ldr	r3, [r7, #4]
 8008cee:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008cf0:	f003 0301 	and.w	r3, r3, #1
 8008cf4:	2b00      	cmp	r3, #0
 8008cf6:	d022      	beq.n	8008d3e <HAL_DMA_IRQHandler+0x2fa>
 8008cf8:	687b      	ldr	r3, [r7, #4]
 8008cfa:	2205      	movs	r2, #5
 8008cfc:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008d00:	687b      	ldr	r3, [r7, #4]
 8008d02:	681b      	ldr	r3, [r3, #0]
 8008d04:	681a      	ldr	r2, [r3, #0]
 8008d06:	687b      	ldr	r3, [r7, #4]
 8008d08:	681b      	ldr	r3, [r3, #0]
 8008d0a:	f022 0201 	bic.w	r2, r2, #1
 8008d0e:	601a      	str	r2, [r3, #0]
 8008d10:	68bb      	ldr	r3, [r7, #8]
 8008d12:	3301      	adds	r3, #1
 8008d14:	60bb      	str	r3, [r7, #8]
 8008d16:	697a      	ldr	r2, [r7, #20]
 8008d18:	429a      	cmp	r2, r3
 8008d1a:	d307      	bcc.n	8008d2c <HAL_DMA_IRQHandler+0x2e8>
 8008d1c:	687b      	ldr	r3, [r7, #4]
 8008d1e:	681b      	ldr	r3, [r3, #0]
 8008d20:	681b      	ldr	r3, [r3, #0]
 8008d22:	f003 0301 	and.w	r3, r3, #1
 8008d26:	2b00      	cmp	r3, #0
 8008d28:	d1f2      	bne.n	8008d10 <HAL_DMA_IRQHandler+0x2cc>
 8008d2a:	e000      	b.n	8008d2e <HAL_DMA_IRQHandler+0x2ea>
 8008d2c:	bf00      	nop
 8008d2e:	687b      	ldr	r3, [r7, #4]
 8008d30:	2201      	movs	r2, #1
 8008d32:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008d36:	687b      	ldr	r3, [r7, #4]
 8008d38:	2200      	movs	r2, #0
 8008d3a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008d3e:	687b      	ldr	r3, [r7, #4]
 8008d40:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008d42:	2b00      	cmp	r3, #0
 8008d44:	d005      	beq.n	8008d52 <HAL_DMA_IRQHandler+0x30e>
 8008d46:	687b      	ldr	r3, [r7, #4]
 8008d48:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008d4a:	6878      	ldr	r0, [r7, #4]
 8008d4c:	4798      	blx	r3
 8008d4e:	e000      	b.n	8008d52 <HAL_DMA_IRQHandler+0x30e>
 8008d50:	bf00      	nop
 8008d52:	3718      	adds	r7, #24
 8008d54:	46bd      	mov	sp, r7
 8008d56:	bd80      	pop	{r7, pc}

08008d58 <DMA_SetConfig>:
 8008d58:	b480      	push	{r7}
 8008d5a:	b085      	sub	sp, #20
 8008d5c:	af00      	add	r7, sp, #0
 8008d5e:	60f8      	str	r0, [r7, #12]
 8008d60:	60b9      	str	r1, [r7, #8]
 8008d62:	607a      	str	r2, [r7, #4]
 8008d64:	603b      	str	r3, [r7, #0]
 8008d66:	68fb      	ldr	r3, [r7, #12]
 8008d68:	681b      	ldr	r3, [r3, #0]
 8008d6a:	681a      	ldr	r2, [r3, #0]
 8008d6c:	68fb      	ldr	r3, [r7, #12]
 8008d6e:	681b      	ldr	r3, [r3, #0]
 8008d70:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8008d74:	601a      	str	r2, [r3, #0]
 8008d76:	68fb      	ldr	r3, [r7, #12]
 8008d78:	681b      	ldr	r3, [r3, #0]
 8008d7a:	683a      	ldr	r2, [r7, #0]
 8008d7c:	605a      	str	r2, [r3, #4]
 8008d7e:	68fb      	ldr	r3, [r7, #12]
 8008d80:	689b      	ldr	r3, [r3, #8]
 8008d82:	2b40      	cmp	r3, #64	; 0x40
 8008d84:	d108      	bne.n	8008d98 <DMA_SetConfig+0x40>
 8008d86:	68fb      	ldr	r3, [r7, #12]
 8008d88:	681b      	ldr	r3, [r3, #0]
 8008d8a:	687a      	ldr	r2, [r7, #4]
 8008d8c:	609a      	str	r2, [r3, #8]
 8008d8e:	68fb      	ldr	r3, [r7, #12]
 8008d90:	681b      	ldr	r3, [r3, #0]
 8008d92:	68ba      	ldr	r2, [r7, #8]
 8008d94:	60da      	str	r2, [r3, #12]
 8008d96:	e007      	b.n	8008da8 <DMA_SetConfig+0x50>
 8008d98:	68fb      	ldr	r3, [r7, #12]
 8008d9a:	681b      	ldr	r3, [r3, #0]
 8008d9c:	68ba      	ldr	r2, [r7, #8]
 8008d9e:	609a      	str	r2, [r3, #8]
 8008da0:	68fb      	ldr	r3, [r7, #12]
 8008da2:	681b      	ldr	r3, [r3, #0]
 8008da4:	687a      	ldr	r2, [r7, #4]
 8008da6:	60da      	str	r2, [r3, #12]
 8008da8:	bf00      	nop
 8008daa:	3714      	adds	r7, #20
 8008dac:	46bd      	mov	sp, r7
 8008dae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008db2:	4770      	bx	lr

08008db4 <DMA_CalcBaseAndBitshift>:
 8008db4:	b480      	push	{r7}
 8008db6:	b085      	sub	sp, #20
 8008db8:	af00      	add	r7, sp, #0
 8008dba:	6078      	str	r0, [r7, #4]
 8008dbc:	687b      	ldr	r3, [r7, #4]
 8008dbe:	681b      	ldr	r3, [r3, #0]
 8008dc0:	b2db      	uxtb	r3, r3
 8008dc2:	3b10      	subs	r3, #16
 8008dc4:	4a14      	ldr	r2, [pc, #80]	; (8008e18 <DMA_CalcBaseAndBitshift+0x64>)
 8008dc6:	fba2 2303 	umull	r2, r3, r2, r3
 8008dca:	091b      	lsrs	r3, r3, #4
 8008dcc:	60fb      	str	r3, [r7, #12]
 8008dce:	4a13      	ldr	r2, [pc, #76]	; (8008e1c <DMA_CalcBaseAndBitshift+0x68>)
 8008dd0:	68fb      	ldr	r3, [r7, #12]
 8008dd2:	4413      	add	r3, r2
 8008dd4:	781b      	ldrb	r3, [r3, #0]
 8008dd6:	461a      	mov	r2, r3
 8008dd8:	687b      	ldr	r3, [r7, #4]
 8008dda:	65da      	str	r2, [r3, #92]	; 0x5c
 8008ddc:	68fb      	ldr	r3, [r7, #12]
 8008dde:	2b03      	cmp	r3, #3
 8008de0:	d909      	bls.n	8008df6 <DMA_CalcBaseAndBitshift+0x42>
 8008de2:	687b      	ldr	r3, [r7, #4]
 8008de4:	681b      	ldr	r3, [r3, #0]
 8008de6:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8008dea:	f023 0303 	bic.w	r3, r3, #3
 8008dee:	1d1a      	adds	r2, r3, #4
 8008df0:	687b      	ldr	r3, [r7, #4]
 8008df2:	659a      	str	r2, [r3, #88]	; 0x58
 8008df4:	e007      	b.n	8008e06 <DMA_CalcBaseAndBitshift+0x52>
 8008df6:	687b      	ldr	r3, [r7, #4]
 8008df8:	681b      	ldr	r3, [r3, #0]
 8008dfa:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8008dfe:	f023 0303 	bic.w	r3, r3, #3
 8008e02:	687a      	ldr	r2, [r7, #4]
 8008e04:	6593      	str	r3, [r2, #88]	; 0x58
 8008e06:	687b      	ldr	r3, [r7, #4]
 8008e08:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008e0a:	4618      	mov	r0, r3
 8008e0c:	3714      	adds	r7, #20
 8008e0e:	46bd      	mov	sp, r7
 8008e10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e14:	4770      	bx	lr
 8008e16:	bf00      	nop
 8008e18:	aaaaaaab 	.word	0xaaaaaaab
 8008e1c:	08011714 	.word	0x08011714

08008e20 <DMA_CheckFifoParam>:
 8008e20:	b480      	push	{r7}
 8008e22:	b085      	sub	sp, #20
 8008e24:	af00      	add	r7, sp, #0
 8008e26:	6078      	str	r0, [r7, #4]
 8008e28:	2300      	movs	r3, #0
 8008e2a:	73fb      	strb	r3, [r7, #15]
 8008e2c:	687b      	ldr	r3, [r7, #4]
 8008e2e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008e30:	60bb      	str	r3, [r7, #8]
 8008e32:	687b      	ldr	r3, [r7, #4]
 8008e34:	699b      	ldr	r3, [r3, #24]
 8008e36:	2b00      	cmp	r3, #0
 8008e38:	d11f      	bne.n	8008e7a <DMA_CheckFifoParam+0x5a>
 8008e3a:	68bb      	ldr	r3, [r7, #8]
 8008e3c:	2b03      	cmp	r3, #3
 8008e3e:	d856      	bhi.n	8008eee <DMA_CheckFifoParam+0xce>
 8008e40:	a201      	add	r2, pc, #4	; (adr r2, 8008e48 <DMA_CheckFifoParam+0x28>)
 8008e42:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008e46:	bf00      	nop
 8008e48:	08008e59 	.word	0x08008e59
 8008e4c:	08008e6b 	.word	0x08008e6b
 8008e50:	08008e59 	.word	0x08008e59
 8008e54:	08008eef 	.word	0x08008eef
 8008e58:	687b      	ldr	r3, [r7, #4]
 8008e5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e5c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8008e60:	2b00      	cmp	r3, #0
 8008e62:	d046      	beq.n	8008ef2 <DMA_CheckFifoParam+0xd2>
 8008e64:	2301      	movs	r3, #1
 8008e66:	73fb      	strb	r3, [r7, #15]
 8008e68:	e043      	b.n	8008ef2 <DMA_CheckFifoParam+0xd2>
 8008e6a:	687b      	ldr	r3, [r7, #4]
 8008e6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e6e:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8008e72:	d140      	bne.n	8008ef6 <DMA_CheckFifoParam+0xd6>
 8008e74:	2301      	movs	r3, #1
 8008e76:	73fb      	strb	r3, [r7, #15]
 8008e78:	e03d      	b.n	8008ef6 <DMA_CheckFifoParam+0xd6>
 8008e7a:	687b      	ldr	r3, [r7, #4]
 8008e7c:	699b      	ldr	r3, [r3, #24]
 8008e7e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008e82:	d121      	bne.n	8008ec8 <DMA_CheckFifoParam+0xa8>
 8008e84:	68bb      	ldr	r3, [r7, #8]
 8008e86:	2b03      	cmp	r3, #3
 8008e88:	d837      	bhi.n	8008efa <DMA_CheckFifoParam+0xda>
 8008e8a:	a201      	add	r2, pc, #4	; (adr r2, 8008e90 <DMA_CheckFifoParam+0x70>)
 8008e8c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008e90:	08008ea1 	.word	0x08008ea1
 8008e94:	08008ea7 	.word	0x08008ea7
 8008e98:	08008ea1 	.word	0x08008ea1
 8008e9c:	08008eb9 	.word	0x08008eb9
 8008ea0:	2301      	movs	r3, #1
 8008ea2:	73fb      	strb	r3, [r7, #15]
 8008ea4:	e030      	b.n	8008f08 <DMA_CheckFifoParam+0xe8>
 8008ea6:	687b      	ldr	r3, [r7, #4]
 8008ea8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008eaa:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8008eae:	2b00      	cmp	r3, #0
 8008eb0:	d025      	beq.n	8008efe <DMA_CheckFifoParam+0xde>
 8008eb2:	2301      	movs	r3, #1
 8008eb4:	73fb      	strb	r3, [r7, #15]
 8008eb6:	e022      	b.n	8008efe <DMA_CheckFifoParam+0xde>
 8008eb8:	687b      	ldr	r3, [r7, #4]
 8008eba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008ebc:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8008ec0:	d11f      	bne.n	8008f02 <DMA_CheckFifoParam+0xe2>
 8008ec2:	2301      	movs	r3, #1
 8008ec4:	73fb      	strb	r3, [r7, #15]
 8008ec6:	e01c      	b.n	8008f02 <DMA_CheckFifoParam+0xe2>
 8008ec8:	68bb      	ldr	r3, [r7, #8]
 8008eca:	2b02      	cmp	r3, #2
 8008ecc:	d903      	bls.n	8008ed6 <DMA_CheckFifoParam+0xb6>
 8008ece:	68bb      	ldr	r3, [r7, #8]
 8008ed0:	2b03      	cmp	r3, #3
 8008ed2:	d003      	beq.n	8008edc <DMA_CheckFifoParam+0xbc>
 8008ed4:	e018      	b.n	8008f08 <DMA_CheckFifoParam+0xe8>
 8008ed6:	2301      	movs	r3, #1
 8008ed8:	73fb      	strb	r3, [r7, #15]
 8008eda:	e015      	b.n	8008f08 <DMA_CheckFifoParam+0xe8>
 8008edc:	687b      	ldr	r3, [r7, #4]
 8008ede:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008ee0:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8008ee4:	2b00      	cmp	r3, #0
 8008ee6:	d00e      	beq.n	8008f06 <DMA_CheckFifoParam+0xe6>
 8008ee8:	2301      	movs	r3, #1
 8008eea:	73fb      	strb	r3, [r7, #15]
 8008eec:	e00b      	b.n	8008f06 <DMA_CheckFifoParam+0xe6>
 8008eee:	bf00      	nop
 8008ef0:	e00a      	b.n	8008f08 <DMA_CheckFifoParam+0xe8>
 8008ef2:	bf00      	nop
 8008ef4:	e008      	b.n	8008f08 <DMA_CheckFifoParam+0xe8>
 8008ef6:	bf00      	nop
 8008ef8:	e006      	b.n	8008f08 <DMA_CheckFifoParam+0xe8>
 8008efa:	bf00      	nop
 8008efc:	e004      	b.n	8008f08 <DMA_CheckFifoParam+0xe8>
 8008efe:	bf00      	nop
 8008f00:	e002      	b.n	8008f08 <DMA_CheckFifoParam+0xe8>
 8008f02:	bf00      	nop
 8008f04:	e000      	b.n	8008f08 <DMA_CheckFifoParam+0xe8>
 8008f06:	bf00      	nop
 8008f08:	7bfb      	ldrb	r3, [r7, #15]
 8008f0a:	4618      	mov	r0, r3
 8008f0c:	3714      	adds	r7, #20
 8008f0e:	46bd      	mov	sp, r7
 8008f10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f14:	4770      	bx	lr
 8008f16:	bf00      	nop

08008f18 <HAL_FLASH_Program>:
 8008f18:	b580      	push	{r7, lr}
 8008f1a:	b086      	sub	sp, #24
 8008f1c:	af00      	add	r7, sp, #0
 8008f1e:	60f8      	str	r0, [r7, #12]
 8008f20:	60b9      	str	r1, [r7, #8]
 8008f22:	e9c7 2300 	strd	r2, r3, [r7]
 8008f26:	2301      	movs	r3, #1
 8008f28:	75fb      	strb	r3, [r7, #23]
 8008f2a:	4b23      	ldr	r3, [pc, #140]	; (8008fb8 <HAL_FLASH_Program+0xa0>)
 8008f2c:	7e1b      	ldrb	r3, [r3, #24]
 8008f2e:	2b01      	cmp	r3, #1
 8008f30:	d101      	bne.n	8008f36 <HAL_FLASH_Program+0x1e>
 8008f32:	2302      	movs	r3, #2
 8008f34:	e03b      	b.n	8008fae <HAL_FLASH_Program+0x96>
 8008f36:	4b20      	ldr	r3, [pc, #128]	; (8008fb8 <HAL_FLASH_Program+0xa0>)
 8008f38:	2201      	movs	r2, #1
 8008f3a:	761a      	strb	r2, [r3, #24]
 8008f3c:	f24c 3050 	movw	r0, #50000	; 0xc350
 8008f40:	f000 f870 	bl	8009024 <FLASH_WaitForLastOperation>
 8008f44:	4603      	mov	r3, r0
 8008f46:	75fb      	strb	r3, [r7, #23]
 8008f48:	7dfb      	ldrb	r3, [r7, #23]
 8008f4a:	2b00      	cmp	r3, #0
 8008f4c:	d12b      	bne.n	8008fa6 <HAL_FLASH_Program+0x8e>
 8008f4e:	68fb      	ldr	r3, [r7, #12]
 8008f50:	2b00      	cmp	r3, #0
 8008f52:	d105      	bne.n	8008f60 <HAL_FLASH_Program+0x48>
 8008f54:	783b      	ldrb	r3, [r7, #0]
 8008f56:	4619      	mov	r1, r3
 8008f58:	68b8      	ldr	r0, [r7, #8]
 8008f5a:	f000 f91b 	bl	8009194 <FLASH_Program_Byte>
 8008f5e:	e016      	b.n	8008f8e <HAL_FLASH_Program+0x76>
 8008f60:	68fb      	ldr	r3, [r7, #12]
 8008f62:	2b01      	cmp	r3, #1
 8008f64:	d105      	bne.n	8008f72 <HAL_FLASH_Program+0x5a>
 8008f66:	883b      	ldrh	r3, [r7, #0]
 8008f68:	4619      	mov	r1, r3
 8008f6a:	68b8      	ldr	r0, [r7, #8]
 8008f6c:	f000 f8ee 	bl	800914c <FLASH_Program_HalfWord>
 8008f70:	e00d      	b.n	8008f8e <HAL_FLASH_Program+0x76>
 8008f72:	68fb      	ldr	r3, [r7, #12]
 8008f74:	2b02      	cmp	r3, #2
 8008f76:	d105      	bne.n	8008f84 <HAL_FLASH_Program+0x6c>
 8008f78:	683b      	ldr	r3, [r7, #0]
 8008f7a:	4619      	mov	r1, r3
 8008f7c:	68b8      	ldr	r0, [r7, #8]
 8008f7e:	f000 f8c3 	bl	8009108 <FLASH_Program_Word>
 8008f82:	e004      	b.n	8008f8e <HAL_FLASH_Program+0x76>
 8008f84:	e9d7 2300 	ldrd	r2, r3, [r7]
 8008f88:	68b8      	ldr	r0, [r7, #8]
 8008f8a:	f000 f88b 	bl	80090a4 <FLASH_Program_DoubleWord>
 8008f8e:	f24c 3050 	movw	r0, #50000	; 0xc350
 8008f92:	f000 f847 	bl	8009024 <FLASH_WaitForLastOperation>
 8008f96:	4603      	mov	r3, r0
 8008f98:	75fb      	strb	r3, [r7, #23]
 8008f9a:	4b08      	ldr	r3, [pc, #32]	; (8008fbc <HAL_FLASH_Program+0xa4>)
 8008f9c:	691b      	ldr	r3, [r3, #16]
 8008f9e:	4a07      	ldr	r2, [pc, #28]	; (8008fbc <HAL_FLASH_Program+0xa4>)
 8008fa0:	f023 0301 	bic.w	r3, r3, #1
 8008fa4:	6113      	str	r3, [r2, #16]
 8008fa6:	4b04      	ldr	r3, [pc, #16]	; (8008fb8 <HAL_FLASH_Program+0xa0>)
 8008fa8:	2200      	movs	r2, #0
 8008faa:	761a      	strb	r2, [r3, #24]
 8008fac:	7dfb      	ldrb	r3, [r7, #23]
 8008fae:	4618      	mov	r0, r3
 8008fb0:	3718      	adds	r7, #24
 8008fb2:	46bd      	mov	sp, r7
 8008fb4:	bd80      	pop	{r7, pc}
 8008fb6:	bf00      	nop
 8008fb8:	20000c74 	.word	0x20000c74
 8008fbc:	40023c00 	.word	0x40023c00

08008fc0 <HAL_FLASH_Unlock>:
 8008fc0:	b480      	push	{r7}
 8008fc2:	b083      	sub	sp, #12
 8008fc4:	af00      	add	r7, sp, #0
 8008fc6:	2300      	movs	r3, #0
 8008fc8:	71fb      	strb	r3, [r7, #7]
 8008fca:	4b0b      	ldr	r3, [pc, #44]	; (8008ff8 <HAL_FLASH_Unlock+0x38>)
 8008fcc:	691b      	ldr	r3, [r3, #16]
 8008fce:	2b00      	cmp	r3, #0
 8008fd0:	da0b      	bge.n	8008fea <HAL_FLASH_Unlock+0x2a>
 8008fd2:	4b09      	ldr	r3, [pc, #36]	; (8008ff8 <HAL_FLASH_Unlock+0x38>)
 8008fd4:	4a09      	ldr	r2, [pc, #36]	; (8008ffc <HAL_FLASH_Unlock+0x3c>)
 8008fd6:	605a      	str	r2, [r3, #4]
 8008fd8:	4b07      	ldr	r3, [pc, #28]	; (8008ff8 <HAL_FLASH_Unlock+0x38>)
 8008fda:	4a09      	ldr	r2, [pc, #36]	; (8009000 <HAL_FLASH_Unlock+0x40>)
 8008fdc:	605a      	str	r2, [r3, #4]
 8008fde:	4b06      	ldr	r3, [pc, #24]	; (8008ff8 <HAL_FLASH_Unlock+0x38>)
 8008fe0:	691b      	ldr	r3, [r3, #16]
 8008fe2:	2b00      	cmp	r3, #0
 8008fe4:	da01      	bge.n	8008fea <HAL_FLASH_Unlock+0x2a>
 8008fe6:	2301      	movs	r3, #1
 8008fe8:	71fb      	strb	r3, [r7, #7]
 8008fea:	79fb      	ldrb	r3, [r7, #7]
 8008fec:	4618      	mov	r0, r3
 8008fee:	370c      	adds	r7, #12
 8008ff0:	46bd      	mov	sp, r7
 8008ff2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ff6:	4770      	bx	lr
 8008ff8:	40023c00 	.word	0x40023c00
 8008ffc:	45670123 	.word	0x45670123
 8009000:	cdef89ab 	.word	0xcdef89ab

08009004 <HAL_FLASH_Lock>:
 8009004:	b480      	push	{r7}
 8009006:	af00      	add	r7, sp, #0
 8009008:	4b05      	ldr	r3, [pc, #20]	; (8009020 <HAL_FLASH_Lock+0x1c>)
 800900a:	691b      	ldr	r3, [r3, #16]
 800900c:	4a04      	ldr	r2, [pc, #16]	; (8009020 <HAL_FLASH_Lock+0x1c>)
 800900e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8009012:	6113      	str	r3, [r2, #16]
 8009014:	2300      	movs	r3, #0
 8009016:	4618      	mov	r0, r3
 8009018:	46bd      	mov	sp, r7
 800901a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800901e:	4770      	bx	lr
 8009020:	40023c00 	.word	0x40023c00

08009024 <FLASH_WaitForLastOperation>:
 8009024:	b580      	push	{r7, lr}
 8009026:	b084      	sub	sp, #16
 8009028:	af00      	add	r7, sp, #0
 800902a:	6078      	str	r0, [r7, #4]
 800902c:	2300      	movs	r3, #0
 800902e:	60fb      	str	r3, [r7, #12]
 8009030:	4b1a      	ldr	r3, [pc, #104]	; (800909c <FLASH_WaitForLastOperation+0x78>)
 8009032:	2200      	movs	r2, #0
 8009034:	61da      	str	r2, [r3, #28]
 8009036:	f7fe fc83 	bl	8007940 <HAL_GetTick>
 800903a:	60f8      	str	r0, [r7, #12]
 800903c:	e010      	b.n	8009060 <FLASH_WaitForLastOperation+0x3c>
 800903e:	687b      	ldr	r3, [r7, #4]
 8009040:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009044:	d00c      	beq.n	8009060 <FLASH_WaitForLastOperation+0x3c>
 8009046:	687b      	ldr	r3, [r7, #4]
 8009048:	2b00      	cmp	r3, #0
 800904a:	d007      	beq.n	800905c <FLASH_WaitForLastOperation+0x38>
 800904c:	f7fe fc78 	bl	8007940 <HAL_GetTick>
 8009050:	4602      	mov	r2, r0
 8009052:	68fb      	ldr	r3, [r7, #12]
 8009054:	1ad3      	subs	r3, r2, r3
 8009056:	687a      	ldr	r2, [r7, #4]
 8009058:	429a      	cmp	r2, r3
 800905a:	d201      	bcs.n	8009060 <FLASH_WaitForLastOperation+0x3c>
 800905c:	2303      	movs	r3, #3
 800905e:	e019      	b.n	8009094 <FLASH_WaitForLastOperation+0x70>
 8009060:	4b0f      	ldr	r3, [pc, #60]	; (80090a0 <FLASH_WaitForLastOperation+0x7c>)
 8009062:	68db      	ldr	r3, [r3, #12]
 8009064:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8009068:	2b00      	cmp	r3, #0
 800906a:	d1e8      	bne.n	800903e <FLASH_WaitForLastOperation+0x1a>
 800906c:	4b0c      	ldr	r3, [pc, #48]	; (80090a0 <FLASH_WaitForLastOperation+0x7c>)
 800906e:	68db      	ldr	r3, [r3, #12]
 8009070:	f003 0301 	and.w	r3, r3, #1
 8009074:	2b00      	cmp	r3, #0
 8009076:	d002      	beq.n	800907e <FLASH_WaitForLastOperation+0x5a>
 8009078:	4b09      	ldr	r3, [pc, #36]	; (80090a0 <FLASH_WaitForLastOperation+0x7c>)
 800907a:	2201      	movs	r2, #1
 800907c:	60da      	str	r2, [r3, #12]
 800907e:	4b08      	ldr	r3, [pc, #32]	; (80090a0 <FLASH_WaitForLastOperation+0x7c>)
 8009080:	68db      	ldr	r3, [r3, #12]
 8009082:	f403 73f9 	and.w	r3, r3, #498	; 0x1f2
 8009086:	2b00      	cmp	r3, #0
 8009088:	d003      	beq.n	8009092 <FLASH_WaitForLastOperation+0x6e>
 800908a:	f000 f8a5 	bl	80091d8 <FLASH_SetErrorCode>
 800908e:	2301      	movs	r3, #1
 8009090:	e000      	b.n	8009094 <FLASH_WaitForLastOperation+0x70>
 8009092:	2300      	movs	r3, #0
 8009094:	4618      	mov	r0, r3
 8009096:	3710      	adds	r7, #16
 8009098:	46bd      	mov	sp, r7
 800909a:	bd80      	pop	{r7, pc}
 800909c:	20000c74 	.word	0x20000c74
 80090a0:	40023c00 	.word	0x40023c00

080090a4 <FLASH_Program_DoubleWord>:
 80090a4:	b480      	push	{r7}
 80090a6:	b085      	sub	sp, #20
 80090a8:	af00      	add	r7, sp, #0
 80090aa:	60f8      	str	r0, [r7, #12]
 80090ac:	e9c7 2300 	strd	r2, r3, [r7]
 80090b0:	4b14      	ldr	r3, [pc, #80]	; (8009104 <FLASH_Program_DoubleWord+0x60>)
 80090b2:	691b      	ldr	r3, [r3, #16]
 80090b4:	4a13      	ldr	r2, [pc, #76]	; (8009104 <FLASH_Program_DoubleWord+0x60>)
 80090b6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80090ba:	6113      	str	r3, [r2, #16]
 80090bc:	4b11      	ldr	r3, [pc, #68]	; (8009104 <FLASH_Program_DoubleWord+0x60>)
 80090be:	691b      	ldr	r3, [r3, #16]
 80090c0:	4a10      	ldr	r2, [pc, #64]	; (8009104 <FLASH_Program_DoubleWord+0x60>)
 80090c2:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 80090c6:	6113      	str	r3, [r2, #16]
 80090c8:	4b0e      	ldr	r3, [pc, #56]	; (8009104 <FLASH_Program_DoubleWord+0x60>)
 80090ca:	691b      	ldr	r3, [r3, #16]
 80090cc:	4a0d      	ldr	r2, [pc, #52]	; (8009104 <FLASH_Program_DoubleWord+0x60>)
 80090ce:	f043 0301 	orr.w	r3, r3, #1
 80090d2:	6113      	str	r3, [r2, #16]
 80090d4:	68fb      	ldr	r3, [r7, #12]
 80090d6:	683a      	ldr	r2, [r7, #0]
 80090d8:	601a      	str	r2, [r3, #0]
 80090da:	f3bf 8f6f 	isb	sy
 80090de:	bf00      	nop
 80090e0:	e9d7 0100 	ldrd	r0, r1, [r7]
 80090e4:	f04f 0200 	mov.w	r2, #0
 80090e8:	f04f 0300 	mov.w	r3, #0
 80090ec:	000a      	movs	r2, r1
 80090ee:	2300      	movs	r3, #0
 80090f0:	68f9      	ldr	r1, [r7, #12]
 80090f2:	3104      	adds	r1, #4
 80090f4:	4613      	mov	r3, r2
 80090f6:	600b      	str	r3, [r1, #0]
 80090f8:	bf00      	nop
 80090fa:	3714      	adds	r7, #20
 80090fc:	46bd      	mov	sp, r7
 80090fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009102:	4770      	bx	lr
 8009104:	40023c00 	.word	0x40023c00

08009108 <FLASH_Program_Word>:
 8009108:	b480      	push	{r7}
 800910a:	b083      	sub	sp, #12
 800910c:	af00      	add	r7, sp, #0
 800910e:	6078      	str	r0, [r7, #4]
 8009110:	6039      	str	r1, [r7, #0]
 8009112:	4b0d      	ldr	r3, [pc, #52]	; (8009148 <FLASH_Program_Word+0x40>)
 8009114:	691b      	ldr	r3, [r3, #16]
 8009116:	4a0c      	ldr	r2, [pc, #48]	; (8009148 <FLASH_Program_Word+0x40>)
 8009118:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800911c:	6113      	str	r3, [r2, #16]
 800911e:	4b0a      	ldr	r3, [pc, #40]	; (8009148 <FLASH_Program_Word+0x40>)
 8009120:	691b      	ldr	r3, [r3, #16]
 8009122:	4a09      	ldr	r2, [pc, #36]	; (8009148 <FLASH_Program_Word+0x40>)
 8009124:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009128:	6113      	str	r3, [r2, #16]
 800912a:	4b07      	ldr	r3, [pc, #28]	; (8009148 <FLASH_Program_Word+0x40>)
 800912c:	691b      	ldr	r3, [r3, #16]
 800912e:	4a06      	ldr	r2, [pc, #24]	; (8009148 <FLASH_Program_Word+0x40>)
 8009130:	f043 0301 	orr.w	r3, r3, #1
 8009134:	6113      	str	r3, [r2, #16]
 8009136:	687b      	ldr	r3, [r7, #4]
 8009138:	683a      	ldr	r2, [r7, #0]
 800913a:	601a      	str	r2, [r3, #0]
 800913c:	bf00      	nop
 800913e:	370c      	adds	r7, #12
 8009140:	46bd      	mov	sp, r7
 8009142:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009146:	4770      	bx	lr
 8009148:	40023c00 	.word	0x40023c00

0800914c <FLASH_Program_HalfWord>:
 800914c:	b480      	push	{r7}
 800914e:	b083      	sub	sp, #12
 8009150:	af00      	add	r7, sp, #0
 8009152:	6078      	str	r0, [r7, #4]
 8009154:	460b      	mov	r3, r1
 8009156:	807b      	strh	r3, [r7, #2]
 8009158:	4b0d      	ldr	r3, [pc, #52]	; (8009190 <FLASH_Program_HalfWord+0x44>)
 800915a:	691b      	ldr	r3, [r3, #16]
 800915c:	4a0c      	ldr	r2, [pc, #48]	; (8009190 <FLASH_Program_HalfWord+0x44>)
 800915e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009162:	6113      	str	r3, [r2, #16]
 8009164:	4b0a      	ldr	r3, [pc, #40]	; (8009190 <FLASH_Program_HalfWord+0x44>)
 8009166:	691b      	ldr	r3, [r3, #16]
 8009168:	4a09      	ldr	r2, [pc, #36]	; (8009190 <FLASH_Program_HalfWord+0x44>)
 800916a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800916e:	6113      	str	r3, [r2, #16]
 8009170:	4b07      	ldr	r3, [pc, #28]	; (8009190 <FLASH_Program_HalfWord+0x44>)
 8009172:	691b      	ldr	r3, [r3, #16]
 8009174:	4a06      	ldr	r2, [pc, #24]	; (8009190 <FLASH_Program_HalfWord+0x44>)
 8009176:	f043 0301 	orr.w	r3, r3, #1
 800917a:	6113      	str	r3, [r2, #16]
 800917c:	687b      	ldr	r3, [r7, #4]
 800917e:	887a      	ldrh	r2, [r7, #2]
 8009180:	801a      	strh	r2, [r3, #0]
 8009182:	bf00      	nop
 8009184:	370c      	adds	r7, #12
 8009186:	46bd      	mov	sp, r7
 8009188:	f85d 7b04 	ldr.w	r7, [sp], #4
 800918c:	4770      	bx	lr
 800918e:	bf00      	nop
 8009190:	40023c00 	.word	0x40023c00

08009194 <FLASH_Program_Byte>:
 8009194:	b480      	push	{r7}
 8009196:	b083      	sub	sp, #12
 8009198:	af00      	add	r7, sp, #0
 800919a:	6078      	str	r0, [r7, #4]
 800919c:	460b      	mov	r3, r1
 800919e:	70fb      	strb	r3, [r7, #3]
 80091a0:	4b0c      	ldr	r3, [pc, #48]	; (80091d4 <FLASH_Program_Byte+0x40>)
 80091a2:	691b      	ldr	r3, [r3, #16]
 80091a4:	4a0b      	ldr	r2, [pc, #44]	; (80091d4 <FLASH_Program_Byte+0x40>)
 80091a6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80091aa:	6113      	str	r3, [r2, #16]
 80091ac:	4b09      	ldr	r3, [pc, #36]	; (80091d4 <FLASH_Program_Byte+0x40>)
 80091ae:	4a09      	ldr	r2, [pc, #36]	; (80091d4 <FLASH_Program_Byte+0x40>)
 80091b0:	691b      	ldr	r3, [r3, #16]
 80091b2:	6113      	str	r3, [r2, #16]
 80091b4:	4b07      	ldr	r3, [pc, #28]	; (80091d4 <FLASH_Program_Byte+0x40>)
 80091b6:	691b      	ldr	r3, [r3, #16]
 80091b8:	4a06      	ldr	r2, [pc, #24]	; (80091d4 <FLASH_Program_Byte+0x40>)
 80091ba:	f043 0301 	orr.w	r3, r3, #1
 80091be:	6113      	str	r3, [r2, #16]
 80091c0:	687b      	ldr	r3, [r7, #4]
 80091c2:	78fa      	ldrb	r2, [r7, #3]
 80091c4:	701a      	strb	r2, [r3, #0]
 80091c6:	bf00      	nop
 80091c8:	370c      	adds	r7, #12
 80091ca:	46bd      	mov	sp, r7
 80091cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091d0:	4770      	bx	lr
 80091d2:	bf00      	nop
 80091d4:	40023c00 	.word	0x40023c00

080091d8 <FLASH_SetErrorCode>:
 80091d8:	b480      	push	{r7}
 80091da:	af00      	add	r7, sp, #0
 80091dc:	4b2f      	ldr	r3, [pc, #188]	; (800929c <FLASH_SetErrorCode+0xc4>)
 80091de:	68db      	ldr	r3, [r3, #12]
 80091e0:	f003 0310 	and.w	r3, r3, #16
 80091e4:	2b00      	cmp	r3, #0
 80091e6:	d008      	beq.n	80091fa <FLASH_SetErrorCode+0x22>
 80091e8:	4b2d      	ldr	r3, [pc, #180]	; (80092a0 <FLASH_SetErrorCode+0xc8>)
 80091ea:	69db      	ldr	r3, [r3, #28]
 80091ec:	f043 0310 	orr.w	r3, r3, #16
 80091f0:	4a2b      	ldr	r2, [pc, #172]	; (80092a0 <FLASH_SetErrorCode+0xc8>)
 80091f2:	61d3      	str	r3, [r2, #28]
 80091f4:	4b29      	ldr	r3, [pc, #164]	; (800929c <FLASH_SetErrorCode+0xc4>)
 80091f6:	2210      	movs	r2, #16
 80091f8:	60da      	str	r2, [r3, #12]
 80091fa:	4b28      	ldr	r3, [pc, #160]	; (800929c <FLASH_SetErrorCode+0xc4>)
 80091fc:	68db      	ldr	r3, [r3, #12]
 80091fe:	f003 0320 	and.w	r3, r3, #32
 8009202:	2b00      	cmp	r3, #0
 8009204:	d008      	beq.n	8009218 <FLASH_SetErrorCode+0x40>
 8009206:	4b26      	ldr	r3, [pc, #152]	; (80092a0 <FLASH_SetErrorCode+0xc8>)
 8009208:	69db      	ldr	r3, [r3, #28]
 800920a:	f043 0308 	orr.w	r3, r3, #8
 800920e:	4a24      	ldr	r2, [pc, #144]	; (80092a0 <FLASH_SetErrorCode+0xc8>)
 8009210:	61d3      	str	r3, [r2, #28]
 8009212:	4b22      	ldr	r3, [pc, #136]	; (800929c <FLASH_SetErrorCode+0xc4>)
 8009214:	2220      	movs	r2, #32
 8009216:	60da      	str	r2, [r3, #12]
 8009218:	4b20      	ldr	r3, [pc, #128]	; (800929c <FLASH_SetErrorCode+0xc4>)
 800921a:	68db      	ldr	r3, [r3, #12]
 800921c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009220:	2b00      	cmp	r3, #0
 8009222:	d008      	beq.n	8009236 <FLASH_SetErrorCode+0x5e>
 8009224:	4b1e      	ldr	r3, [pc, #120]	; (80092a0 <FLASH_SetErrorCode+0xc8>)
 8009226:	69db      	ldr	r3, [r3, #28]
 8009228:	f043 0304 	orr.w	r3, r3, #4
 800922c:	4a1c      	ldr	r2, [pc, #112]	; (80092a0 <FLASH_SetErrorCode+0xc8>)
 800922e:	61d3      	str	r3, [r2, #28]
 8009230:	4b1a      	ldr	r3, [pc, #104]	; (800929c <FLASH_SetErrorCode+0xc4>)
 8009232:	2240      	movs	r2, #64	; 0x40
 8009234:	60da      	str	r2, [r3, #12]
 8009236:	4b19      	ldr	r3, [pc, #100]	; (800929c <FLASH_SetErrorCode+0xc4>)
 8009238:	68db      	ldr	r3, [r3, #12]
 800923a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800923e:	2b00      	cmp	r3, #0
 8009240:	d008      	beq.n	8009254 <FLASH_SetErrorCode+0x7c>
 8009242:	4b17      	ldr	r3, [pc, #92]	; (80092a0 <FLASH_SetErrorCode+0xc8>)
 8009244:	69db      	ldr	r3, [r3, #28]
 8009246:	f043 0302 	orr.w	r3, r3, #2
 800924a:	4a15      	ldr	r2, [pc, #84]	; (80092a0 <FLASH_SetErrorCode+0xc8>)
 800924c:	61d3      	str	r3, [r2, #28]
 800924e:	4b13      	ldr	r3, [pc, #76]	; (800929c <FLASH_SetErrorCode+0xc4>)
 8009250:	2280      	movs	r2, #128	; 0x80
 8009252:	60da      	str	r2, [r3, #12]
 8009254:	4b11      	ldr	r3, [pc, #68]	; (800929c <FLASH_SetErrorCode+0xc4>)
 8009256:	68db      	ldr	r3, [r3, #12]
 8009258:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800925c:	2b00      	cmp	r3, #0
 800925e:	d009      	beq.n	8009274 <FLASH_SetErrorCode+0x9c>
 8009260:	4b0f      	ldr	r3, [pc, #60]	; (80092a0 <FLASH_SetErrorCode+0xc8>)
 8009262:	69db      	ldr	r3, [r3, #28]
 8009264:	f043 0301 	orr.w	r3, r3, #1
 8009268:	4a0d      	ldr	r2, [pc, #52]	; (80092a0 <FLASH_SetErrorCode+0xc8>)
 800926a:	61d3      	str	r3, [r2, #28]
 800926c:	4b0b      	ldr	r3, [pc, #44]	; (800929c <FLASH_SetErrorCode+0xc4>)
 800926e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8009272:	60da      	str	r2, [r3, #12]
 8009274:	4b09      	ldr	r3, [pc, #36]	; (800929c <FLASH_SetErrorCode+0xc4>)
 8009276:	68db      	ldr	r3, [r3, #12]
 8009278:	f003 0302 	and.w	r3, r3, #2
 800927c:	2b00      	cmp	r3, #0
 800927e:	d008      	beq.n	8009292 <FLASH_SetErrorCode+0xba>
 8009280:	4b07      	ldr	r3, [pc, #28]	; (80092a0 <FLASH_SetErrorCode+0xc8>)
 8009282:	69db      	ldr	r3, [r3, #28]
 8009284:	f043 0320 	orr.w	r3, r3, #32
 8009288:	4a05      	ldr	r2, [pc, #20]	; (80092a0 <FLASH_SetErrorCode+0xc8>)
 800928a:	61d3      	str	r3, [r2, #28]
 800928c:	4b03      	ldr	r3, [pc, #12]	; (800929c <FLASH_SetErrorCode+0xc4>)
 800928e:	2202      	movs	r2, #2
 8009290:	60da      	str	r2, [r3, #12]
 8009292:	bf00      	nop
 8009294:	46bd      	mov	sp, r7
 8009296:	f85d 7b04 	ldr.w	r7, [sp], #4
 800929a:	4770      	bx	lr
 800929c:	40023c00 	.word	0x40023c00
 80092a0:	20000c74 	.word	0x20000c74

080092a4 <FLASH_Erase_Sector>:
 80092a4:	b480      	push	{r7}
 80092a6:	b085      	sub	sp, #20
 80092a8:	af00      	add	r7, sp, #0
 80092aa:	6078      	str	r0, [r7, #4]
 80092ac:	460b      	mov	r3, r1
 80092ae:	70fb      	strb	r3, [r7, #3]
 80092b0:	2300      	movs	r3, #0
 80092b2:	60fb      	str	r3, [r7, #12]
 80092b4:	78fb      	ldrb	r3, [r7, #3]
 80092b6:	2b00      	cmp	r3, #0
 80092b8:	d102      	bne.n	80092c0 <FLASH_Erase_Sector+0x1c>
 80092ba:	2300      	movs	r3, #0
 80092bc:	60fb      	str	r3, [r7, #12]
 80092be:	e010      	b.n	80092e2 <FLASH_Erase_Sector+0x3e>
 80092c0:	78fb      	ldrb	r3, [r7, #3]
 80092c2:	2b01      	cmp	r3, #1
 80092c4:	d103      	bne.n	80092ce <FLASH_Erase_Sector+0x2a>
 80092c6:	f44f 7380 	mov.w	r3, #256	; 0x100
 80092ca:	60fb      	str	r3, [r7, #12]
 80092cc:	e009      	b.n	80092e2 <FLASH_Erase_Sector+0x3e>
 80092ce:	78fb      	ldrb	r3, [r7, #3]
 80092d0:	2b02      	cmp	r3, #2
 80092d2:	d103      	bne.n	80092dc <FLASH_Erase_Sector+0x38>
 80092d4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80092d8:	60fb      	str	r3, [r7, #12]
 80092da:	e002      	b.n	80092e2 <FLASH_Erase_Sector+0x3e>
 80092dc:	f44f 7340 	mov.w	r3, #768	; 0x300
 80092e0:	60fb      	str	r3, [r7, #12]
 80092e2:	4b13      	ldr	r3, [pc, #76]	; (8009330 <FLASH_Erase_Sector+0x8c>)
 80092e4:	691b      	ldr	r3, [r3, #16]
 80092e6:	4a12      	ldr	r2, [pc, #72]	; (8009330 <FLASH_Erase_Sector+0x8c>)
 80092e8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80092ec:	6113      	str	r3, [r2, #16]
 80092ee:	4b10      	ldr	r3, [pc, #64]	; (8009330 <FLASH_Erase_Sector+0x8c>)
 80092f0:	691a      	ldr	r2, [r3, #16]
 80092f2:	490f      	ldr	r1, [pc, #60]	; (8009330 <FLASH_Erase_Sector+0x8c>)
 80092f4:	68fb      	ldr	r3, [r7, #12]
 80092f6:	4313      	orrs	r3, r2
 80092f8:	610b      	str	r3, [r1, #16]
 80092fa:	4b0d      	ldr	r3, [pc, #52]	; (8009330 <FLASH_Erase_Sector+0x8c>)
 80092fc:	691b      	ldr	r3, [r3, #16]
 80092fe:	4a0c      	ldr	r2, [pc, #48]	; (8009330 <FLASH_Erase_Sector+0x8c>)
 8009300:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8009304:	6113      	str	r3, [r2, #16]
 8009306:	4b0a      	ldr	r3, [pc, #40]	; (8009330 <FLASH_Erase_Sector+0x8c>)
 8009308:	691a      	ldr	r2, [r3, #16]
 800930a:	687b      	ldr	r3, [r7, #4]
 800930c:	00db      	lsls	r3, r3, #3
 800930e:	4313      	orrs	r3, r2
 8009310:	4a07      	ldr	r2, [pc, #28]	; (8009330 <FLASH_Erase_Sector+0x8c>)
 8009312:	f043 0302 	orr.w	r3, r3, #2
 8009316:	6113      	str	r3, [r2, #16]
 8009318:	4b05      	ldr	r3, [pc, #20]	; (8009330 <FLASH_Erase_Sector+0x8c>)
 800931a:	691b      	ldr	r3, [r3, #16]
 800931c:	4a04      	ldr	r2, [pc, #16]	; (8009330 <FLASH_Erase_Sector+0x8c>)
 800931e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009322:	6113      	str	r3, [r2, #16]
 8009324:	bf00      	nop
 8009326:	3714      	adds	r7, #20
 8009328:	46bd      	mov	sp, r7
 800932a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800932e:	4770      	bx	lr
 8009330:	40023c00 	.word	0x40023c00

08009334 <HAL_GPIO_Init>:
 8009334:	b480      	push	{r7}
 8009336:	b089      	sub	sp, #36	; 0x24
 8009338:	af00      	add	r7, sp, #0
 800933a:	6078      	str	r0, [r7, #4]
 800933c:	6039      	str	r1, [r7, #0]
 800933e:	2300      	movs	r3, #0
 8009340:	617b      	str	r3, [r7, #20]
 8009342:	2300      	movs	r3, #0
 8009344:	613b      	str	r3, [r7, #16]
 8009346:	2300      	movs	r3, #0
 8009348:	61bb      	str	r3, [r7, #24]
 800934a:	2300      	movs	r3, #0
 800934c:	61fb      	str	r3, [r7, #28]
 800934e:	e165      	b.n	800961c <HAL_GPIO_Init+0x2e8>
 8009350:	2201      	movs	r2, #1
 8009352:	69fb      	ldr	r3, [r7, #28]
 8009354:	fa02 f303 	lsl.w	r3, r2, r3
 8009358:	617b      	str	r3, [r7, #20]
 800935a:	683b      	ldr	r3, [r7, #0]
 800935c:	681b      	ldr	r3, [r3, #0]
 800935e:	697a      	ldr	r2, [r7, #20]
 8009360:	4013      	ands	r3, r2
 8009362:	613b      	str	r3, [r7, #16]
 8009364:	693a      	ldr	r2, [r7, #16]
 8009366:	697b      	ldr	r3, [r7, #20]
 8009368:	429a      	cmp	r2, r3
 800936a:	f040 8154 	bne.w	8009616 <HAL_GPIO_Init+0x2e2>
 800936e:	683b      	ldr	r3, [r7, #0]
 8009370:	685b      	ldr	r3, [r3, #4]
 8009372:	f003 0303 	and.w	r3, r3, #3
 8009376:	2b01      	cmp	r3, #1
 8009378:	d005      	beq.n	8009386 <HAL_GPIO_Init+0x52>
 800937a:	683b      	ldr	r3, [r7, #0]
 800937c:	685b      	ldr	r3, [r3, #4]
 800937e:	f003 0303 	and.w	r3, r3, #3
 8009382:	2b02      	cmp	r3, #2
 8009384:	d130      	bne.n	80093e8 <HAL_GPIO_Init+0xb4>
 8009386:	687b      	ldr	r3, [r7, #4]
 8009388:	689b      	ldr	r3, [r3, #8]
 800938a:	61bb      	str	r3, [r7, #24]
 800938c:	69fb      	ldr	r3, [r7, #28]
 800938e:	005b      	lsls	r3, r3, #1
 8009390:	2203      	movs	r2, #3
 8009392:	fa02 f303 	lsl.w	r3, r2, r3
 8009396:	43db      	mvns	r3, r3
 8009398:	69ba      	ldr	r2, [r7, #24]
 800939a:	4013      	ands	r3, r2
 800939c:	61bb      	str	r3, [r7, #24]
 800939e:	683b      	ldr	r3, [r7, #0]
 80093a0:	68da      	ldr	r2, [r3, #12]
 80093a2:	69fb      	ldr	r3, [r7, #28]
 80093a4:	005b      	lsls	r3, r3, #1
 80093a6:	fa02 f303 	lsl.w	r3, r2, r3
 80093aa:	69ba      	ldr	r2, [r7, #24]
 80093ac:	4313      	orrs	r3, r2
 80093ae:	61bb      	str	r3, [r7, #24]
 80093b0:	687b      	ldr	r3, [r7, #4]
 80093b2:	69ba      	ldr	r2, [r7, #24]
 80093b4:	609a      	str	r2, [r3, #8]
 80093b6:	687b      	ldr	r3, [r7, #4]
 80093b8:	685b      	ldr	r3, [r3, #4]
 80093ba:	61bb      	str	r3, [r7, #24]
 80093bc:	2201      	movs	r2, #1
 80093be:	69fb      	ldr	r3, [r7, #28]
 80093c0:	fa02 f303 	lsl.w	r3, r2, r3
 80093c4:	43db      	mvns	r3, r3
 80093c6:	69ba      	ldr	r2, [r7, #24]
 80093c8:	4013      	ands	r3, r2
 80093ca:	61bb      	str	r3, [r7, #24]
 80093cc:	683b      	ldr	r3, [r7, #0]
 80093ce:	685b      	ldr	r3, [r3, #4]
 80093d0:	091b      	lsrs	r3, r3, #4
 80093d2:	f003 0201 	and.w	r2, r3, #1
 80093d6:	69fb      	ldr	r3, [r7, #28]
 80093d8:	fa02 f303 	lsl.w	r3, r2, r3
 80093dc:	69ba      	ldr	r2, [r7, #24]
 80093de:	4313      	orrs	r3, r2
 80093e0:	61bb      	str	r3, [r7, #24]
 80093e2:	687b      	ldr	r3, [r7, #4]
 80093e4:	69ba      	ldr	r2, [r7, #24]
 80093e6:	605a      	str	r2, [r3, #4]
 80093e8:	683b      	ldr	r3, [r7, #0]
 80093ea:	685b      	ldr	r3, [r3, #4]
 80093ec:	f003 0303 	and.w	r3, r3, #3
 80093f0:	2b03      	cmp	r3, #3
 80093f2:	d017      	beq.n	8009424 <HAL_GPIO_Init+0xf0>
 80093f4:	687b      	ldr	r3, [r7, #4]
 80093f6:	68db      	ldr	r3, [r3, #12]
 80093f8:	61bb      	str	r3, [r7, #24]
 80093fa:	69fb      	ldr	r3, [r7, #28]
 80093fc:	005b      	lsls	r3, r3, #1
 80093fe:	2203      	movs	r2, #3
 8009400:	fa02 f303 	lsl.w	r3, r2, r3
 8009404:	43db      	mvns	r3, r3
 8009406:	69ba      	ldr	r2, [r7, #24]
 8009408:	4013      	ands	r3, r2
 800940a:	61bb      	str	r3, [r7, #24]
 800940c:	683b      	ldr	r3, [r7, #0]
 800940e:	689a      	ldr	r2, [r3, #8]
 8009410:	69fb      	ldr	r3, [r7, #28]
 8009412:	005b      	lsls	r3, r3, #1
 8009414:	fa02 f303 	lsl.w	r3, r2, r3
 8009418:	69ba      	ldr	r2, [r7, #24]
 800941a:	4313      	orrs	r3, r2
 800941c:	61bb      	str	r3, [r7, #24]
 800941e:	687b      	ldr	r3, [r7, #4]
 8009420:	69ba      	ldr	r2, [r7, #24]
 8009422:	60da      	str	r2, [r3, #12]
 8009424:	683b      	ldr	r3, [r7, #0]
 8009426:	685b      	ldr	r3, [r3, #4]
 8009428:	f003 0303 	and.w	r3, r3, #3
 800942c:	2b02      	cmp	r3, #2
 800942e:	d123      	bne.n	8009478 <HAL_GPIO_Init+0x144>
 8009430:	69fb      	ldr	r3, [r7, #28]
 8009432:	08da      	lsrs	r2, r3, #3
 8009434:	687b      	ldr	r3, [r7, #4]
 8009436:	3208      	adds	r2, #8
 8009438:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800943c:	61bb      	str	r3, [r7, #24]
 800943e:	69fb      	ldr	r3, [r7, #28]
 8009440:	f003 0307 	and.w	r3, r3, #7
 8009444:	009b      	lsls	r3, r3, #2
 8009446:	220f      	movs	r2, #15
 8009448:	fa02 f303 	lsl.w	r3, r2, r3
 800944c:	43db      	mvns	r3, r3
 800944e:	69ba      	ldr	r2, [r7, #24]
 8009450:	4013      	ands	r3, r2
 8009452:	61bb      	str	r3, [r7, #24]
 8009454:	683b      	ldr	r3, [r7, #0]
 8009456:	691a      	ldr	r2, [r3, #16]
 8009458:	69fb      	ldr	r3, [r7, #28]
 800945a:	f003 0307 	and.w	r3, r3, #7
 800945e:	009b      	lsls	r3, r3, #2
 8009460:	fa02 f303 	lsl.w	r3, r2, r3
 8009464:	69ba      	ldr	r2, [r7, #24]
 8009466:	4313      	orrs	r3, r2
 8009468:	61bb      	str	r3, [r7, #24]
 800946a:	69fb      	ldr	r3, [r7, #28]
 800946c:	08da      	lsrs	r2, r3, #3
 800946e:	687b      	ldr	r3, [r7, #4]
 8009470:	3208      	adds	r2, #8
 8009472:	69b9      	ldr	r1, [r7, #24]
 8009474:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8009478:	687b      	ldr	r3, [r7, #4]
 800947a:	681b      	ldr	r3, [r3, #0]
 800947c:	61bb      	str	r3, [r7, #24]
 800947e:	69fb      	ldr	r3, [r7, #28]
 8009480:	005b      	lsls	r3, r3, #1
 8009482:	2203      	movs	r2, #3
 8009484:	fa02 f303 	lsl.w	r3, r2, r3
 8009488:	43db      	mvns	r3, r3
 800948a:	69ba      	ldr	r2, [r7, #24]
 800948c:	4013      	ands	r3, r2
 800948e:	61bb      	str	r3, [r7, #24]
 8009490:	683b      	ldr	r3, [r7, #0]
 8009492:	685b      	ldr	r3, [r3, #4]
 8009494:	f003 0203 	and.w	r2, r3, #3
 8009498:	69fb      	ldr	r3, [r7, #28]
 800949a:	005b      	lsls	r3, r3, #1
 800949c:	fa02 f303 	lsl.w	r3, r2, r3
 80094a0:	69ba      	ldr	r2, [r7, #24]
 80094a2:	4313      	orrs	r3, r2
 80094a4:	61bb      	str	r3, [r7, #24]
 80094a6:	687b      	ldr	r3, [r7, #4]
 80094a8:	69ba      	ldr	r2, [r7, #24]
 80094aa:	601a      	str	r2, [r3, #0]
 80094ac:	683b      	ldr	r3, [r7, #0]
 80094ae:	685b      	ldr	r3, [r3, #4]
 80094b0:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80094b4:	2b00      	cmp	r3, #0
 80094b6:	f000 80ae 	beq.w	8009616 <HAL_GPIO_Init+0x2e2>
 80094ba:	2300      	movs	r3, #0
 80094bc:	60fb      	str	r3, [r7, #12]
 80094be:	4b5d      	ldr	r3, [pc, #372]	; (8009634 <HAL_GPIO_Init+0x300>)
 80094c0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80094c2:	4a5c      	ldr	r2, [pc, #368]	; (8009634 <HAL_GPIO_Init+0x300>)
 80094c4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80094c8:	6453      	str	r3, [r2, #68]	; 0x44
 80094ca:	4b5a      	ldr	r3, [pc, #360]	; (8009634 <HAL_GPIO_Init+0x300>)
 80094cc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80094ce:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80094d2:	60fb      	str	r3, [r7, #12]
 80094d4:	68fb      	ldr	r3, [r7, #12]
 80094d6:	4a58      	ldr	r2, [pc, #352]	; (8009638 <HAL_GPIO_Init+0x304>)
 80094d8:	69fb      	ldr	r3, [r7, #28]
 80094da:	089b      	lsrs	r3, r3, #2
 80094dc:	3302      	adds	r3, #2
 80094de:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80094e2:	61bb      	str	r3, [r7, #24]
 80094e4:	69fb      	ldr	r3, [r7, #28]
 80094e6:	f003 0303 	and.w	r3, r3, #3
 80094ea:	009b      	lsls	r3, r3, #2
 80094ec:	220f      	movs	r2, #15
 80094ee:	fa02 f303 	lsl.w	r3, r2, r3
 80094f2:	43db      	mvns	r3, r3
 80094f4:	69ba      	ldr	r2, [r7, #24]
 80094f6:	4013      	ands	r3, r2
 80094f8:	61bb      	str	r3, [r7, #24]
 80094fa:	687b      	ldr	r3, [r7, #4]
 80094fc:	4a4f      	ldr	r2, [pc, #316]	; (800963c <HAL_GPIO_Init+0x308>)
 80094fe:	4293      	cmp	r3, r2
 8009500:	d025      	beq.n	800954e <HAL_GPIO_Init+0x21a>
 8009502:	687b      	ldr	r3, [r7, #4]
 8009504:	4a4e      	ldr	r2, [pc, #312]	; (8009640 <HAL_GPIO_Init+0x30c>)
 8009506:	4293      	cmp	r3, r2
 8009508:	d01f      	beq.n	800954a <HAL_GPIO_Init+0x216>
 800950a:	687b      	ldr	r3, [r7, #4]
 800950c:	4a4d      	ldr	r2, [pc, #308]	; (8009644 <HAL_GPIO_Init+0x310>)
 800950e:	4293      	cmp	r3, r2
 8009510:	d019      	beq.n	8009546 <HAL_GPIO_Init+0x212>
 8009512:	687b      	ldr	r3, [r7, #4]
 8009514:	4a4c      	ldr	r2, [pc, #304]	; (8009648 <HAL_GPIO_Init+0x314>)
 8009516:	4293      	cmp	r3, r2
 8009518:	d013      	beq.n	8009542 <HAL_GPIO_Init+0x20e>
 800951a:	687b      	ldr	r3, [r7, #4]
 800951c:	4a4b      	ldr	r2, [pc, #300]	; (800964c <HAL_GPIO_Init+0x318>)
 800951e:	4293      	cmp	r3, r2
 8009520:	d00d      	beq.n	800953e <HAL_GPIO_Init+0x20a>
 8009522:	687b      	ldr	r3, [r7, #4]
 8009524:	4a4a      	ldr	r2, [pc, #296]	; (8009650 <HAL_GPIO_Init+0x31c>)
 8009526:	4293      	cmp	r3, r2
 8009528:	d007      	beq.n	800953a <HAL_GPIO_Init+0x206>
 800952a:	687b      	ldr	r3, [r7, #4]
 800952c:	4a49      	ldr	r2, [pc, #292]	; (8009654 <HAL_GPIO_Init+0x320>)
 800952e:	4293      	cmp	r3, r2
 8009530:	d101      	bne.n	8009536 <HAL_GPIO_Init+0x202>
 8009532:	2306      	movs	r3, #6
 8009534:	e00c      	b.n	8009550 <HAL_GPIO_Init+0x21c>
 8009536:	2307      	movs	r3, #7
 8009538:	e00a      	b.n	8009550 <HAL_GPIO_Init+0x21c>
 800953a:	2305      	movs	r3, #5
 800953c:	e008      	b.n	8009550 <HAL_GPIO_Init+0x21c>
 800953e:	2304      	movs	r3, #4
 8009540:	e006      	b.n	8009550 <HAL_GPIO_Init+0x21c>
 8009542:	2303      	movs	r3, #3
 8009544:	e004      	b.n	8009550 <HAL_GPIO_Init+0x21c>
 8009546:	2302      	movs	r3, #2
 8009548:	e002      	b.n	8009550 <HAL_GPIO_Init+0x21c>
 800954a:	2301      	movs	r3, #1
 800954c:	e000      	b.n	8009550 <HAL_GPIO_Init+0x21c>
 800954e:	2300      	movs	r3, #0
 8009550:	69fa      	ldr	r2, [r7, #28]
 8009552:	f002 0203 	and.w	r2, r2, #3
 8009556:	0092      	lsls	r2, r2, #2
 8009558:	4093      	lsls	r3, r2
 800955a:	69ba      	ldr	r2, [r7, #24]
 800955c:	4313      	orrs	r3, r2
 800955e:	61bb      	str	r3, [r7, #24]
 8009560:	4935      	ldr	r1, [pc, #212]	; (8009638 <HAL_GPIO_Init+0x304>)
 8009562:	69fb      	ldr	r3, [r7, #28]
 8009564:	089b      	lsrs	r3, r3, #2
 8009566:	3302      	adds	r3, #2
 8009568:	69ba      	ldr	r2, [r7, #24]
 800956a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800956e:	4b3a      	ldr	r3, [pc, #232]	; (8009658 <HAL_GPIO_Init+0x324>)
 8009570:	689b      	ldr	r3, [r3, #8]
 8009572:	61bb      	str	r3, [r7, #24]
 8009574:	693b      	ldr	r3, [r7, #16]
 8009576:	43db      	mvns	r3, r3
 8009578:	69ba      	ldr	r2, [r7, #24]
 800957a:	4013      	ands	r3, r2
 800957c:	61bb      	str	r3, [r7, #24]
 800957e:	683b      	ldr	r3, [r7, #0]
 8009580:	685b      	ldr	r3, [r3, #4]
 8009582:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8009586:	2b00      	cmp	r3, #0
 8009588:	d003      	beq.n	8009592 <HAL_GPIO_Init+0x25e>
 800958a:	69ba      	ldr	r2, [r7, #24]
 800958c:	693b      	ldr	r3, [r7, #16]
 800958e:	4313      	orrs	r3, r2
 8009590:	61bb      	str	r3, [r7, #24]
 8009592:	4a31      	ldr	r2, [pc, #196]	; (8009658 <HAL_GPIO_Init+0x324>)
 8009594:	69bb      	ldr	r3, [r7, #24]
 8009596:	6093      	str	r3, [r2, #8]
 8009598:	4b2f      	ldr	r3, [pc, #188]	; (8009658 <HAL_GPIO_Init+0x324>)
 800959a:	68db      	ldr	r3, [r3, #12]
 800959c:	61bb      	str	r3, [r7, #24]
 800959e:	693b      	ldr	r3, [r7, #16]
 80095a0:	43db      	mvns	r3, r3
 80095a2:	69ba      	ldr	r2, [r7, #24]
 80095a4:	4013      	ands	r3, r2
 80095a6:	61bb      	str	r3, [r7, #24]
 80095a8:	683b      	ldr	r3, [r7, #0]
 80095aa:	685b      	ldr	r3, [r3, #4]
 80095ac:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80095b0:	2b00      	cmp	r3, #0
 80095b2:	d003      	beq.n	80095bc <HAL_GPIO_Init+0x288>
 80095b4:	69ba      	ldr	r2, [r7, #24]
 80095b6:	693b      	ldr	r3, [r7, #16]
 80095b8:	4313      	orrs	r3, r2
 80095ba:	61bb      	str	r3, [r7, #24]
 80095bc:	4a26      	ldr	r2, [pc, #152]	; (8009658 <HAL_GPIO_Init+0x324>)
 80095be:	69bb      	ldr	r3, [r7, #24]
 80095c0:	60d3      	str	r3, [r2, #12]
 80095c2:	4b25      	ldr	r3, [pc, #148]	; (8009658 <HAL_GPIO_Init+0x324>)
 80095c4:	685b      	ldr	r3, [r3, #4]
 80095c6:	61bb      	str	r3, [r7, #24]
 80095c8:	693b      	ldr	r3, [r7, #16]
 80095ca:	43db      	mvns	r3, r3
 80095cc:	69ba      	ldr	r2, [r7, #24]
 80095ce:	4013      	ands	r3, r2
 80095d0:	61bb      	str	r3, [r7, #24]
 80095d2:	683b      	ldr	r3, [r7, #0]
 80095d4:	685b      	ldr	r3, [r3, #4]
 80095d6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80095da:	2b00      	cmp	r3, #0
 80095dc:	d003      	beq.n	80095e6 <HAL_GPIO_Init+0x2b2>
 80095de:	69ba      	ldr	r2, [r7, #24]
 80095e0:	693b      	ldr	r3, [r7, #16]
 80095e2:	4313      	orrs	r3, r2
 80095e4:	61bb      	str	r3, [r7, #24]
 80095e6:	4a1c      	ldr	r2, [pc, #112]	; (8009658 <HAL_GPIO_Init+0x324>)
 80095e8:	69bb      	ldr	r3, [r7, #24]
 80095ea:	6053      	str	r3, [r2, #4]
 80095ec:	4b1a      	ldr	r3, [pc, #104]	; (8009658 <HAL_GPIO_Init+0x324>)
 80095ee:	681b      	ldr	r3, [r3, #0]
 80095f0:	61bb      	str	r3, [r7, #24]
 80095f2:	693b      	ldr	r3, [r7, #16]
 80095f4:	43db      	mvns	r3, r3
 80095f6:	69ba      	ldr	r2, [r7, #24]
 80095f8:	4013      	ands	r3, r2
 80095fa:	61bb      	str	r3, [r7, #24]
 80095fc:	683b      	ldr	r3, [r7, #0]
 80095fe:	685b      	ldr	r3, [r3, #4]
 8009600:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8009604:	2b00      	cmp	r3, #0
 8009606:	d003      	beq.n	8009610 <HAL_GPIO_Init+0x2dc>
 8009608:	69ba      	ldr	r2, [r7, #24]
 800960a:	693b      	ldr	r3, [r7, #16]
 800960c:	4313      	orrs	r3, r2
 800960e:	61bb      	str	r3, [r7, #24]
 8009610:	4a11      	ldr	r2, [pc, #68]	; (8009658 <HAL_GPIO_Init+0x324>)
 8009612:	69bb      	ldr	r3, [r7, #24]
 8009614:	6013      	str	r3, [r2, #0]
 8009616:	69fb      	ldr	r3, [r7, #28]
 8009618:	3301      	adds	r3, #1
 800961a:	61fb      	str	r3, [r7, #28]
 800961c:	69fb      	ldr	r3, [r7, #28]
 800961e:	2b0f      	cmp	r3, #15
 8009620:	f67f ae96 	bls.w	8009350 <HAL_GPIO_Init+0x1c>
 8009624:	bf00      	nop
 8009626:	bf00      	nop
 8009628:	3724      	adds	r7, #36	; 0x24
 800962a:	46bd      	mov	sp, r7
 800962c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009630:	4770      	bx	lr
 8009632:	bf00      	nop
 8009634:	40023800 	.word	0x40023800
 8009638:	40013800 	.word	0x40013800
 800963c:	40020000 	.word	0x40020000
 8009640:	40020400 	.word	0x40020400
 8009644:	40020800 	.word	0x40020800
 8009648:	40020c00 	.word	0x40020c00
 800964c:	40021000 	.word	0x40021000
 8009650:	40021400 	.word	0x40021400
 8009654:	40021800 	.word	0x40021800
 8009658:	40013c00 	.word	0x40013c00

0800965c <HAL_GPIO_ReadPin>:
 800965c:	b480      	push	{r7}
 800965e:	b085      	sub	sp, #20
 8009660:	af00      	add	r7, sp, #0
 8009662:	6078      	str	r0, [r7, #4]
 8009664:	460b      	mov	r3, r1
 8009666:	807b      	strh	r3, [r7, #2]
 8009668:	687b      	ldr	r3, [r7, #4]
 800966a:	691a      	ldr	r2, [r3, #16]
 800966c:	887b      	ldrh	r3, [r7, #2]
 800966e:	4013      	ands	r3, r2
 8009670:	2b00      	cmp	r3, #0
 8009672:	d002      	beq.n	800967a <HAL_GPIO_ReadPin+0x1e>
 8009674:	2301      	movs	r3, #1
 8009676:	73fb      	strb	r3, [r7, #15]
 8009678:	e001      	b.n	800967e <HAL_GPIO_ReadPin+0x22>
 800967a:	2300      	movs	r3, #0
 800967c:	73fb      	strb	r3, [r7, #15]
 800967e:	7bfb      	ldrb	r3, [r7, #15]
 8009680:	4618      	mov	r0, r3
 8009682:	3714      	adds	r7, #20
 8009684:	46bd      	mov	sp, r7
 8009686:	f85d 7b04 	ldr.w	r7, [sp], #4
 800968a:	4770      	bx	lr

0800968c <HAL_GPIO_WritePin>:
 800968c:	b480      	push	{r7}
 800968e:	b083      	sub	sp, #12
 8009690:	af00      	add	r7, sp, #0
 8009692:	6078      	str	r0, [r7, #4]
 8009694:	460b      	mov	r3, r1
 8009696:	807b      	strh	r3, [r7, #2]
 8009698:	4613      	mov	r3, r2
 800969a:	707b      	strb	r3, [r7, #1]
 800969c:	787b      	ldrb	r3, [r7, #1]
 800969e:	2b00      	cmp	r3, #0
 80096a0:	d003      	beq.n	80096aa <HAL_GPIO_WritePin+0x1e>
 80096a2:	887a      	ldrh	r2, [r7, #2]
 80096a4:	687b      	ldr	r3, [r7, #4]
 80096a6:	619a      	str	r2, [r3, #24]
 80096a8:	e003      	b.n	80096b2 <HAL_GPIO_WritePin+0x26>
 80096aa:	887b      	ldrh	r3, [r7, #2]
 80096ac:	041a      	lsls	r2, r3, #16
 80096ae:	687b      	ldr	r3, [r7, #4]
 80096b0:	619a      	str	r2, [r3, #24]
 80096b2:	bf00      	nop
 80096b4:	370c      	adds	r7, #12
 80096b6:	46bd      	mov	sp, r7
 80096b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096bc:	4770      	bx	lr

080096be <HAL_GPIO_TogglePin>:
 80096be:	b480      	push	{r7}
 80096c0:	b085      	sub	sp, #20
 80096c2:	af00      	add	r7, sp, #0
 80096c4:	6078      	str	r0, [r7, #4]
 80096c6:	460b      	mov	r3, r1
 80096c8:	807b      	strh	r3, [r7, #2]
 80096ca:	687b      	ldr	r3, [r7, #4]
 80096cc:	695b      	ldr	r3, [r3, #20]
 80096ce:	60fb      	str	r3, [r7, #12]
 80096d0:	887a      	ldrh	r2, [r7, #2]
 80096d2:	68fb      	ldr	r3, [r7, #12]
 80096d4:	4013      	ands	r3, r2
 80096d6:	041a      	lsls	r2, r3, #16
 80096d8:	68fb      	ldr	r3, [r7, #12]
 80096da:	43d9      	mvns	r1, r3
 80096dc:	887b      	ldrh	r3, [r7, #2]
 80096de:	400b      	ands	r3, r1
 80096e0:	431a      	orrs	r2, r3
 80096e2:	687b      	ldr	r3, [r7, #4]
 80096e4:	619a      	str	r2, [r3, #24]
 80096e6:	bf00      	nop
 80096e8:	3714      	adds	r7, #20
 80096ea:	46bd      	mov	sp, r7
 80096ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096f0:	4770      	bx	lr
	...

080096f4 <HAL_GPIO_EXTI_IRQHandler>:
 80096f4:	b580      	push	{r7, lr}
 80096f6:	b082      	sub	sp, #8
 80096f8:	af00      	add	r7, sp, #0
 80096fa:	4603      	mov	r3, r0
 80096fc:	80fb      	strh	r3, [r7, #6]
 80096fe:	4b08      	ldr	r3, [pc, #32]	; (8009720 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8009700:	695a      	ldr	r2, [r3, #20]
 8009702:	88fb      	ldrh	r3, [r7, #6]
 8009704:	4013      	ands	r3, r2
 8009706:	2b00      	cmp	r3, #0
 8009708:	d006      	beq.n	8009718 <HAL_GPIO_EXTI_IRQHandler+0x24>
 800970a:	4a05      	ldr	r2, [pc, #20]	; (8009720 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800970c:	88fb      	ldrh	r3, [r7, #6]
 800970e:	6153      	str	r3, [r2, #20]
 8009710:	88fb      	ldrh	r3, [r7, #6]
 8009712:	4618      	mov	r0, r3
 8009714:	f7fd fa52 	bl	8006bbc <HAL_GPIO_EXTI_Callback>
 8009718:	bf00      	nop
 800971a:	3708      	adds	r7, #8
 800971c:	46bd      	mov	sp, r7
 800971e:	bd80      	pop	{r7, pc}
 8009720:	40013c00 	.word	0x40013c00

08009724 <HAL_PWREx_EnableOverDrive>:
 8009724:	b580      	push	{r7, lr}
 8009726:	b082      	sub	sp, #8
 8009728:	af00      	add	r7, sp, #0
 800972a:	2300      	movs	r3, #0
 800972c:	607b      	str	r3, [r7, #4]
 800972e:	2300      	movs	r3, #0
 8009730:	603b      	str	r3, [r7, #0]
 8009732:	4b20      	ldr	r3, [pc, #128]	; (80097b4 <HAL_PWREx_EnableOverDrive+0x90>)
 8009734:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009736:	4a1f      	ldr	r2, [pc, #124]	; (80097b4 <HAL_PWREx_EnableOverDrive+0x90>)
 8009738:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800973c:	6413      	str	r3, [r2, #64]	; 0x40
 800973e:	4b1d      	ldr	r3, [pc, #116]	; (80097b4 <HAL_PWREx_EnableOverDrive+0x90>)
 8009740:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009742:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009746:	603b      	str	r3, [r7, #0]
 8009748:	683b      	ldr	r3, [r7, #0]
 800974a:	4b1b      	ldr	r3, [pc, #108]	; (80097b8 <HAL_PWREx_EnableOverDrive+0x94>)
 800974c:	2201      	movs	r2, #1
 800974e:	601a      	str	r2, [r3, #0]
 8009750:	f7fe f8f6 	bl	8007940 <HAL_GetTick>
 8009754:	6078      	str	r0, [r7, #4]
 8009756:	e009      	b.n	800976c <HAL_PWREx_EnableOverDrive+0x48>
 8009758:	f7fe f8f2 	bl	8007940 <HAL_GetTick>
 800975c:	4602      	mov	r2, r0
 800975e:	687b      	ldr	r3, [r7, #4]
 8009760:	1ad3      	subs	r3, r2, r3
 8009762:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8009766:	d901      	bls.n	800976c <HAL_PWREx_EnableOverDrive+0x48>
 8009768:	2303      	movs	r3, #3
 800976a:	e01f      	b.n	80097ac <HAL_PWREx_EnableOverDrive+0x88>
 800976c:	4b13      	ldr	r3, [pc, #76]	; (80097bc <HAL_PWREx_EnableOverDrive+0x98>)
 800976e:	685b      	ldr	r3, [r3, #4]
 8009770:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8009774:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009778:	d1ee      	bne.n	8009758 <HAL_PWREx_EnableOverDrive+0x34>
 800977a:	4b11      	ldr	r3, [pc, #68]	; (80097c0 <HAL_PWREx_EnableOverDrive+0x9c>)
 800977c:	2201      	movs	r2, #1
 800977e:	601a      	str	r2, [r3, #0]
 8009780:	f7fe f8de 	bl	8007940 <HAL_GetTick>
 8009784:	6078      	str	r0, [r7, #4]
 8009786:	e009      	b.n	800979c <HAL_PWREx_EnableOverDrive+0x78>
 8009788:	f7fe f8da 	bl	8007940 <HAL_GetTick>
 800978c:	4602      	mov	r2, r0
 800978e:	687b      	ldr	r3, [r7, #4]
 8009790:	1ad3      	subs	r3, r2, r3
 8009792:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8009796:	d901      	bls.n	800979c <HAL_PWREx_EnableOverDrive+0x78>
 8009798:	2303      	movs	r3, #3
 800979a:	e007      	b.n	80097ac <HAL_PWREx_EnableOverDrive+0x88>
 800979c:	4b07      	ldr	r3, [pc, #28]	; (80097bc <HAL_PWREx_EnableOverDrive+0x98>)
 800979e:	685b      	ldr	r3, [r3, #4]
 80097a0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80097a4:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80097a8:	d1ee      	bne.n	8009788 <HAL_PWREx_EnableOverDrive+0x64>
 80097aa:	2300      	movs	r3, #0
 80097ac:	4618      	mov	r0, r3
 80097ae:	3708      	adds	r7, #8
 80097b0:	46bd      	mov	sp, r7
 80097b2:	bd80      	pop	{r7, pc}
 80097b4:	40023800 	.word	0x40023800
 80097b8:	420e0040 	.word	0x420e0040
 80097bc:	40007000 	.word	0x40007000
 80097c0:	420e0044 	.word	0x420e0044

080097c4 <HAL_RCC_ClockConfig>:
 80097c4:	b580      	push	{r7, lr}
 80097c6:	b084      	sub	sp, #16
 80097c8:	af00      	add	r7, sp, #0
 80097ca:	6078      	str	r0, [r7, #4]
 80097cc:	6039      	str	r1, [r7, #0]
 80097ce:	687b      	ldr	r3, [r7, #4]
 80097d0:	2b00      	cmp	r3, #0
 80097d2:	d101      	bne.n	80097d8 <HAL_RCC_ClockConfig+0x14>
 80097d4:	2301      	movs	r3, #1
 80097d6:	e0cc      	b.n	8009972 <HAL_RCC_ClockConfig+0x1ae>
 80097d8:	4b68      	ldr	r3, [pc, #416]	; (800997c <HAL_RCC_ClockConfig+0x1b8>)
 80097da:	681b      	ldr	r3, [r3, #0]
 80097dc:	f003 030f 	and.w	r3, r3, #15
 80097e0:	683a      	ldr	r2, [r7, #0]
 80097e2:	429a      	cmp	r2, r3
 80097e4:	d90c      	bls.n	8009800 <HAL_RCC_ClockConfig+0x3c>
 80097e6:	4b65      	ldr	r3, [pc, #404]	; (800997c <HAL_RCC_ClockConfig+0x1b8>)
 80097e8:	683a      	ldr	r2, [r7, #0]
 80097ea:	b2d2      	uxtb	r2, r2
 80097ec:	701a      	strb	r2, [r3, #0]
 80097ee:	4b63      	ldr	r3, [pc, #396]	; (800997c <HAL_RCC_ClockConfig+0x1b8>)
 80097f0:	681b      	ldr	r3, [r3, #0]
 80097f2:	f003 030f 	and.w	r3, r3, #15
 80097f6:	683a      	ldr	r2, [r7, #0]
 80097f8:	429a      	cmp	r2, r3
 80097fa:	d001      	beq.n	8009800 <HAL_RCC_ClockConfig+0x3c>
 80097fc:	2301      	movs	r3, #1
 80097fe:	e0b8      	b.n	8009972 <HAL_RCC_ClockConfig+0x1ae>
 8009800:	687b      	ldr	r3, [r7, #4]
 8009802:	681b      	ldr	r3, [r3, #0]
 8009804:	f003 0302 	and.w	r3, r3, #2
 8009808:	2b00      	cmp	r3, #0
 800980a:	d020      	beq.n	800984e <HAL_RCC_ClockConfig+0x8a>
 800980c:	687b      	ldr	r3, [r7, #4]
 800980e:	681b      	ldr	r3, [r3, #0]
 8009810:	f003 0304 	and.w	r3, r3, #4
 8009814:	2b00      	cmp	r3, #0
 8009816:	d005      	beq.n	8009824 <HAL_RCC_ClockConfig+0x60>
 8009818:	4b59      	ldr	r3, [pc, #356]	; (8009980 <HAL_RCC_ClockConfig+0x1bc>)
 800981a:	689b      	ldr	r3, [r3, #8]
 800981c:	4a58      	ldr	r2, [pc, #352]	; (8009980 <HAL_RCC_ClockConfig+0x1bc>)
 800981e:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8009822:	6093      	str	r3, [r2, #8]
 8009824:	687b      	ldr	r3, [r7, #4]
 8009826:	681b      	ldr	r3, [r3, #0]
 8009828:	f003 0308 	and.w	r3, r3, #8
 800982c:	2b00      	cmp	r3, #0
 800982e:	d005      	beq.n	800983c <HAL_RCC_ClockConfig+0x78>
 8009830:	4b53      	ldr	r3, [pc, #332]	; (8009980 <HAL_RCC_ClockConfig+0x1bc>)
 8009832:	689b      	ldr	r3, [r3, #8]
 8009834:	4a52      	ldr	r2, [pc, #328]	; (8009980 <HAL_RCC_ClockConfig+0x1bc>)
 8009836:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 800983a:	6093      	str	r3, [r2, #8]
 800983c:	4b50      	ldr	r3, [pc, #320]	; (8009980 <HAL_RCC_ClockConfig+0x1bc>)
 800983e:	689b      	ldr	r3, [r3, #8]
 8009840:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8009844:	687b      	ldr	r3, [r7, #4]
 8009846:	689b      	ldr	r3, [r3, #8]
 8009848:	494d      	ldr	r1, [pc, #308]	; (8009980 <HAL_RCC_ClockConfig+0x1bc>)
 800984a:	4313      	orrs	r3, r2
 800984c:	608b      	str	r3, [r1, #8]
 800984e:	687b      	ldr	r3, [r7, #4]
 8009850:	681b      	ldr	r3, [r3, #0]
 8009852:	f003 0301 	and.w	r3, r3, #1
 8009856:	2b00      	cmp	r3, #0
 8009858:	d044      	beq.n	80098e4 <HAL_RCC_ClockConfig+0x120>
 800985a:	687b      	ldr	r3, [r7, #4]
 800985c:	685b      	ldr	r3, [r3, #4]
 800985e:	2b01      	cmp	r3, #1
 8009860:	d107      	bne.n	8009872 <HAL_RCC_ClockConfig+0xae>
 8009862:	4b47      	ldr	r3, [pc, #284]	; (8009980 <HAL_RCC_ClockConfig+0x1bc>)
 8009864:	681b      	ldr	r3, [r3, #0]
 8009866:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800986a:	2b00      	cmp	r3, #0
 800986c:	d119      	bne.n	80098a2 <HAL_RCC_ClockConfig+0xde>
 800986e:	2301      	movs	r3, #1
 8009870:	e07f      	b.n	8009972 <HAL_RCC_ClockConfig+0x1ae>
 8009872:	687b      	ldr	r3, [r7, #4]
 8009874:	685b      	ldr	r3, [r3, #4]
 8009876:	2b02      	cmp	r3, #2
 8009878:	d003      	beq.n	8009882 <HAL_RCC_ClockConfig+0xbe>
 800987a:	687b      	ldr	r3, [r7, #4]
 800987c:	685b      	ldr	r3, [r3, #4]
 800987e:	2b03      	cmp	r3, #3
 8009880:	d107      	bne.n	8009892 <HAL_RCC_ClockConfig+0xce>
 8009882:	4b3f      	ldr	r3, [pc, #252]	; (8009980 <HAL_RCC_ClockConfig+0x1bc>)
 8009884:	681b      	ldr	r3, [r3, #0]
 8009886:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800988a:	2b00      	cmp	r3, #0
 800988c:	d109      	bne.n	80098a2 <HAL_RCC_ClockConfig+0xde>
 800988e:	2301      	movs	r3, #1
 8009890:	e06f      	b.n	8009972 <HAL_RCC_ClockConfig+0x1ae>
 8009892:	4b3b      	ldr	r3, [pc, #236]	; (8009980 <HAL_RCC_ClockConfig+0x1bc>)
 8009894:	681b      	ldr	r3, [r3, #0]
 8009896:	f003 0302 	and.w	r3, r3, #2
 800989a:	2b00      	cmp	r3, #0
 800989c:	d101      	bne.n	80098a2 <HAL_RCC_ClockConfig+0xde>
 800989e:	2301      	movs	r3, #1
 80098a0:	e067      	b.n	8009972 <HAL_RCC_ClockConfig+0x1ae>
 80098a2:	4b37      	ldr	r3, [pc, #220]	; (8009980 <HAL_RCC_ClockConfig+0x1bc>)
 80098a4:	689b      	ldr	r3, [r3, #8]
 80098a6:	f023 0203 	bic.w	r2, r3, #3
 80098aa:	687b      	ldr	r3, [r7, #4]
 80098ac:	685b      	ldr	r3, [r3, #4]
 80098ae:	4934      	ldr	r1, [pc, #208]	; (8009980 <HAL_RCC_ClockConfig+0x1bc>)
 80098b0:	4313      	orrs	r3, r2
 80098b2:	608b      	str	r3, [r1, #8]
 80098b4:	f7fe f844 	bl	8007940 <HAL_GetTick>
 80098b8:	60f8      	str	r0, [r7, #12]
 80098ba:	e00a      	b.n	80098d2 <HAL_RCC_ClockConfig+0x10e>
 80098bc:	f7fe f840 	bl	8007940 <HAL_GetTick>
 80098c0:	4602      	mov	r2, r0
 80098c2:	68fb      	ldr	r3, [r7, #12]
 80098c4:	1ad3      	subs	r3, r2, r3
 80098c6:	f241 3288 	movw	r2, #5000	; 0x1388
 80098ca:	4293      	cmp	r3, r2
 80098cc:	d901      	bls.n	80098d2 <HAL_RCC_ClockConfig+0x10e>
 80098ce:	2303      	movs	r3, #3
 80098d0:	e04f      	b.n	8009972 <HAL_RCC_ClockConfig+0x1ae>
 80098d2:	4b2b      	ldr	r3, [pc, #172]	; (8009980 <HAL_RCC_ClockConfig+0x1bc>)
 80098d4:	689b      	ldr	r3, [r3, #8]
 80098d6:	f003 020c 	and.w	r2, r3, #12
 80098da:	687b      	ldr	r3, [r7, #4]
 80098dc:	685b      	ldr	r3, [r3, #4]
 80098de:	009b      	lsls	r3, r3, #2
 80098e0:	429a      	cmp	r2, r3
 80098e2:	d1eb      	bne.n	80098bc <HAL_RCC_ClockConfig+0xf8>
 80098e4:	4b25      	ldr	r3, [pc, #148]	; (800997c <HAL_RCC_ClockConfig+0x1b8>)
 80098e6:	681b      	ldr	r3, [r3, #0]
 80098e8:	f003 030f 	and.w	r3, r3, #15
 80098ec:	683a      	ldr	r2, [r7, #0]
 80098ee:	429a      	cmp	r2, r3
 80098f0:	d20c      	bcs.n	800990c <HAL_RCC_ClockConfig+0x148>
 80098f2:	4b22      	ldr	r3, [pc, #136]	; (800997c <HAL_RCC_ClockConfig+0x1b8>)
 80098f4:	683a      	ldr	r2, [r7, #0]
 80098f6:	b2d2      	uxtb	r2, r2
 80098f8:	701a      	strb	r2, [r3, #0]
 80098fa:	4b20      	ldr	r3, [pc, #128]	; (800997c <HAL_RCC_ClockConfig+0x1b8>)
 80098fc:	681b      	ldr	r3, [r3, #0]
 80098fe:	f003 030f 	and.w	r3, r3, #15
 8009902:	683a      	ldr	r2, [r7, #0]
 8009904:	429a      	cmp	r2, r3
 8009906:	d001      	beq.n	800990c <HAL_RCC_ClockConfig+0x148>
 8009908:	2301      	movs	r3, #1
 800990a:	e032      	b.n	8009972 <HAL_RCC_ClockConfig+0x1ae>
 800990c:	687b      	ldr	r3, [r7, #4]
 800990e:	681b      	ldr	r3, [r3, #0]
 8009910:	f003 0304 	and.w	r3, r3, #4
 8009914:	2b00      	cmp	r3, #0
 8009916:	d008      	beq.n	800992a <HAL_RCC_ClockConfig+0x166>
 8009918:	4b19      	ldr	r3, [pc, #100]	; (8009980 <HAL_RCC_ClockConfig+0x1bc>)
 800991a:	689b      	ldr	r3, [r3, #8]
 800991c:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8009920:	687b      	ldr	r3, [r7, #4]
 8009922:	68db      	ldr	r3, [r3, #12]
 8009924:	4916      	ldr	r1, [pc, #88]	; (8009980 <HAL_RCC_ClockConfig+0x1bc>)
 8009926:	4313      	orrs	r3, r2
 8009928:	608b      	str	r3, [r1, #8]
 800992a:	687b      	ldr	r3, [r7, #4]
 800992c:	681b      	ldr	r3, [r3, #0]
 800992e:	f003 0308 	and.w	r3, r3, #8
 8009932:	2b00      	cmp	r3, #0
 8009934:	d009      	beq.n	800994a <HAL_RCC_ClockConfig+0x186>
 8009936:	4b12      	ldr	r3, [pc, #72]	; (8009980 <HAL_RCC_ClockConfig+0x1bc>)
 8009938:	689b      	ldr	r3, [r3, #8]
 800993a:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 800993e:	687b      	ldr	r3, [r7, #4]
 8009940:	691b      	ldr	r3, [r3, #16]
 8009942:	00db      	lsls	r3, r3, #3
 8009944:	490e      	ldr	r1, [pc, #56]	; (8009980 <HAL_RCC_ClockConfig+0x1bc>)
 8009946:	4313      	orrs	r3, r2
 8009948:	608b      	str	r3, [r1, #8]
 800994a:	f000 f855 	bl	80099f8 <HAL_RCC_GetSysClockFreq>
 800994e:	4602      	mov	r2, r0
 8009950:	4b0b      	ldr	r3, [pc, #44]	; (8009980 <HAL_RCC_ClockConfig+0x1bc>)
 8009952:	689b      	ldr	r3, [r3, #8]
 8009954:	091b      	lsrs	r3, r3, #4
 8009956:	f003 030f 	and.w	r3, r3, #15
 800995a:	490a      	ldr	r1, [pc, #40]	; (8009984 <HAL_RCC_ClockConfig+0x1c0>)
 800995c:	5ccb      	ldrb	r3, [r1, r3]
 800995e:	fa22 f303 	lsr.w	r3, r2, r3
 8009962:	4a09      	ldr	r2, [pc, #36]	; (8009988 <HAL_RCC_ClockConfig+0x1c4>)
 8009964:	6013      	str	r3, [r2, #0]
 8009966:	4b09      	ldr	r3, [pc, #36]	; (800998c <HAL_RCC_ClockConfig+0x1c8>)
 8009968:	681b      	ldr	r3, [r3, #0]
 800996a:	4618      	mov	r0, r3
 800996c:	f7fd ffa4 	bl	80078b8 <HAL_InitTick>
 8009970:	2300      	movs	r3, #0
 8009972:	4618      	mov	r0, r3
 8009974:	3710      	adds	r7, #16
 8009976:	46bd      	mov	sp, r7
 8009978:	bd80      	pop	{r7, pc}
 800997a:	bf00      	nop
 800997c:	40023c00 	.word	0x40023c00
 8009980:	40023800 	.word	0x40023800
 8009984:	080116fc 	.word	0x080116fc
 8009988:	20000130 	.word	0x20000130
 800998c:	20000134 	.word	0x20000134

08009990 <HAL_RCC_GetHCLKFreq>:
 8009990:	b480      	push	{r7}
 8009992:	af00      	add	r7, sp, #0
 8009994:	4b03      	ldr	r3, [pc, #12]	; (80099a4 <HAL_RCC_GetHCLKFreq+0x14>)
 8009996:	681b      	ldr	r3, [r3, #0]
 8009998:	4618      	mov	r0, r3
 800999a:	46bd      	mov	sp, r7
 800999c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099a0:	4770      	bx	lr
 80099a2:	bf00      	nop
 80099a4:	20000130 	.word	0x20000130

080099a8 <HAL_RCC_GetPCLK1Freq>:
 80099a8:	b580      	push	{r7, lr}
 80099aa:	af00      	add	r7, sp, #0
 80099ac:	f7ff fff0 	bl	8009990 <HAL_RCC_GetHCLKFreq>
 80099b0:	4602      	mov	r2, r0
 80099b2:	4b05      	ldr	r3, [pc, #20]	; (80099c8 <HAL_RCC_GetPCLK1Freq+0x20>)
 80099b4:	689b      	ldr	r3, [r3, #8]
 80099b6:	0a9b      	lsrs	r3, r3, #10
 80099b8:	f003 0307 	and.w	r3, r3, #7
 80099bc:	4903      	ldr	r1, [pc, #12]	; (80099cc <HAL_RCC_GetPCLK1Freq+0x24>)
 80099be:	5ccb      	ldrb	r3, [r1, r3]
 80099c0:	fa22 f303 	lsr.w	r3, r2, r3
 80099c4:	4618      	mov	r0, r3
 80099c6:	bd80      	pop	{r7, pc}
 80099c8:	40023800 	.word	0x40023800
 80099cc:	0801170c 	.word	0x0801170c

080099d0 <HAL_RCC_GetPCLK2Freq>:
 80099d0:	b580      	push	{r7, lr}
 80099d2:	af00      	add	r7, sp, #0
 80099d4:	f7ff ffdc 	bl	8009990 <HAL_RCC_GetHCLKFreq>
 80099d8:	4602      	mov	r2, r0
 80099da:	4b05      	ldr	r3, [pc, #20]	; (80099f0 <HAL_RCC_GetPCLK2Freq+0x20>)
 80099dc:	689b      	ldr	r3, [r3, #8]
 80099de:	0b5b      	lsrs	r3, r3, #13
 80099e0:	f003 0307 	and.w	r3, r3, #7
 80099e4:	4903      	ldr	r1, [pc, #12]	; (80099f4 <HAL_RCC_GetPCLK2Freq+0x24>)
 80099e6:	5ccb      	ldrb	r3, [r1, r3]
 80099e8:	fa22 f303 	lsr.w	r3, r2, r3
 80099ec:	4618      	mov	r0, r3
 80099ee:	bd80      	pop	{r7, pc}
 80099f0:	40023800 	.word	0x40023800
 80099f4:	0801170c 	.word	0x0801170c

080099f8 <HAL_RCC_GetSysClockFreq>:
 80099f8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80099fc:	b0ae      	sub	sp, #184	; 0xb8
 80099fe:	af00      	add	r7, sp, #0
 8009a00:	2300      	movs	r3, #0
 8009a02:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8009a06:	2300      	movs	r3, #0
 8009a08:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8009a0c:	2300      	movs	r3, #0
 8009a0e:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8009a12:	2300      	movs	r3, #0
 8009a14:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8009a18:	2300      	movs	r3, #0
 8009a1a:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8009a1e:	4bcb      	ldr	r3, [pc, #812]	; (8009d4c <HAL_RCC_GetSysClockFreq+0x354>)
 8009a20:	689b      	ldr	r3, [r3, #8]
 8009a22:	f003 030c 	and.w	r3, r3, #12
 8009a26:	2b0c      	cmp	r3, #12
 8009a28:	f200 8206 	bhi.w	8009e38 <HAL_RCC_GetSysClockFreq+0x440>
 8009a2c:	a201      	add	r2, pc, #4	; (adr r2, 8009a34 <HAL_RCC_GetSysClockFreq+0x3c>)
 8009a2e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009a32:	bf00      	nop
 8009a34:	08009a69 	.word	0x08009a69
 8009a38:	08009e39 	.word	0x08009e39
 8009a3c:	08009e39 	.word	0x08009e39
 8009a40:	08009e39 	.word	0x08009e39
 8009a44:	08009a71 	.word	0x08009a71
 8009a48:	08009e39 	.word	0x08009e39
 8009a4c:	08009e39 	.word	0x08009e39
 8009a50:	08009e39 	.word	0x08009e39
 8009a54:	08009a79 	.word	0x08009a79
 8009a58:	08009e39 	.word	0x08009e39
 8009a5c:	08009e39 	.word	0x08009e39
 8009a60:	08009e39 	.word	0x08009e39
 8009a64:	08009c69 	.word	0x08009c69
 8009a68:	4bb9      	ldr	r3, [pc, #740]	; (8009d50 <HAL_RCC_GetSysClockFreq+0x358>)
 8009a6a:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8009a6e:	e1e7      	b.n	8009e40 <HAL_RCC_GetSysClockFreq+0x448>
 8009a70:	4bb8      	ldr	r3, [pc, #736]	; (8009d54 <HAL_RCC_GetSysClockFreq+0x35c>)
 8009a72:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8009a76:	e1e3      	b.n	8009e40 <HAL_RCC_GetSysClockFreq+0x448>
 8009a78:	4bb4      	ldr	r3, [pc, #720]	; (8009d4c <HAL_RCC_GetSysClockFreq+0x354>)
 8009a7a:	685b      	ldr	r3, [r3, #4]
 8009a7c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009a80:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8009a84:	4bb1      	ldr	r3, [pc, #708]	; (8009d4c <HAL_RCC_GetSysClockFreq+0x354>)
 8009a86:	685b      	ldr	r3, [r3, #4]
 8009a88:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009a8c:	2b00      	cmp	r3, #0
 8009a8e:	d071      	beq.n	8009b74 <HAL_RCC_GetSysClockFreq+0x17c>
 8009a90:	4bae      	ldr	r3, [pc, #696]	; (8009d4c <HAL_RCC_GetSysClockFreq+0x354>)
 8009a92:	685b      	ldr	r3, [r3, #4]
 8009a94:	099b      	lsrs	r3, r3, #6
 8009a96:	2200      	movs	r2, #0
 8009a98:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8009a9c:	f8c7 209c 	str.w	r2, [r7, #156]	; 0x9c
 8009aa0:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8009aa4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009aa8:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8009aac:	2300      	movs	r3, #0
 8009aae:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8009ab2:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 8009ab6:	4622      	mov	r2, r4
 8009ab8:	462b      	mov	r3, r5
 8009aba:	f04f 0000 	mov.w	r0, #0
 8009abe:	f04f 0100 	mov.w	r1, #0
 8009ac2:	0159      	lsls	r1, r3, #5
 8009ac4:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8009ac8:	0150      	lsls	r0, r2, #5
 8009aca:	4602      	mov	r2, r0
 8009acc:	460b      	mov	r3, r1
 8009ace:	4621      	mov	r1, r4
 8009ad0:	1a51      	subs	r1, r2, r1
 8009ad2:	6439      	str	r1, [r7, #64]	; 0x40
 8009ad4:	4629      	mov	r1, r5
 8009ad6:	eb63 0301 	sbc.w	r3, r3, r1
 8009ada:	647b      	str	r3, [r7, #68]	; 0x44
 8009adc:	f04f 0200 	mov.w	r2, #0
 8009ae0:	f04f 0300 	mov.w	r3, #0
 8009ae4:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	; 0x40
 8009ae8:	4649      	mov	r1, r9
 8009aea:	018b      	lsls	r3, r1, #6
 8009aec:	4641      	mov	r1, r8
 8009aee:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8009af2:	4641      	mov	r1, r8
 8009af4:	018a      	lsls	r2, r1, #6
 8009af6:	4641      	mov	r1, r8
 8009af8:	1a51      	subs	r1, r2, r1
 8009afa:	63b9      	str	r1, [r7, #56]	; 0x38
 8009afc:	4649      	mov	r1, r9
 8009afe:	eb63 0301 	sbc.w	r3, r3, r1
 8009b02:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009b04:	f04f 0200 	mov.w	r2, #0
 8009b08:	f04f 0300 	mov.w	r3, #0
 8009b0c:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	; 0x38
 8009b10:	4649      	mov	r1, r9
 8009b12:	00cb      	lsls	r3, r1, #3
 8009b14:	4641      	mov	r1, r8
 8009b16:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8009b1a:	4641      	mov	r1, r8
 8009b1c:	00ca      	lsls	r2, r1, #3
 8009b1e:	4610      	mov	r0, r2
 8009b20:	4619      	mov	r1, r3
 8009b22:	4603      	mov	r3, r0
 8009b24:	4622      	mov	r2, r4
 8009b26:	189b      	adds	r3, r3, r2
 8009b28:	633b      	str	r3, [r7, #48]	; 0x30
 8009b2a:	462b      	mov	r3, r5
 8009b2c:	460a      	mov	r2, r1
 8009b2e:	eb42 0303 	adc.w	r3, r2, r3
 8009b32:	637b      	str	r3, [r7, #52]	; 0x34
 8009b34:	f04f 0200 	mov.w	r2, #0
 8009b38:	f04f 0300 	mov.w	r3, #0
 8009b3c:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8009b40:	4629      	mov	r1, r5
 8009b42:	024b      	lsls	r3, r1, #9
 8009b44:	4621      	mov	r1, r4
 8009b46:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8009b4a:	4621      	mov	r1, r4
 8009b4c:	024a      	lsls	r2, r1, #9
 8009b4e:	4610      	mov	r0, r2
 8009b50:	4619      	mov	r1, r3
 8009b52:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8009b56:	2200      	movs	r2, #0
 8009b58:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8009b5c:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8009b60:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 8009b64:	f7f7 f890 	bl	8000c88 <__aeabi_uldivmod>
 8009b68:	4602      	mov	r2, r0
 8009b6a:	460b      	mov	r3, r1
 8009b6c:	4613      	mov	r3, r2
 8009b6e:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8009b72:	e067      	b.n	8009c44 <HAL_RCC_GetSysClockFreq+0x24c>
 8009b74:	4b75      	ldr	r3, [pc, #468]	; (8009d4c <HAL_RCC_GetSysClockFreq+0x354>)
 8009b76:	685b      	ldr	r3, [r3, #4]
 8009b78:	099b      	lsrs	r3, r3, #6
 8009b7a:	2200      	movs	r2, #0
 8009b7c:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8009b80:	f8c7 2084 	str.w	r2, [r7, #132]	; 0x84
 8009b84:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8009b88:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009b8c:	67bb      	str	r3, [r7, #120]	; 0x78
 8009b8e:	2300      	movs	r3, #0
 8009b90:	67fb      	str	r3, [r7, #124]	; 0x7c
 8009b92:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	; 0x78
 8009b96:	4622      	mov	r2, r4
 8009b98:	462b      	mov	r3, r5
 8009b9a:	f04f 0000 	mov.w	r0, #0
 8009b9e:	f04f 0100 	mov.w	r1, #0
 8009ba2:	0159      	lsls	r1, r3, #5
 8009ba4:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8009ba8:	0150      	lsls	r0, r2, #5
 8009baa:	4602      	mov	r2, r0
 8009bac:	460b      	mov	r3, r1
 8009bae:	4621      	mov	r1, r4
 8009bb0:	1a51      	subs	r1, r2, r1
 8009bb2:	62b9      	str	r1, [r7, #40]	; 0x28
 8009bb4:	4629      	mov	r1, r5
 8009bb6:	eb63 0301 	sbc.w	r3, r3, r1
 8009bba:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009bbc:	f04f 0200 	mov.w	r2, #0
 8009bc0:	f04f 0300 	mov.w	r3, #0
 8009bc4:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	; 0x28
 8009bc8:	4649      	mov	r1, r9
 8009bca:	018b      	lsls	r3, r1, #6
 8009bcc:	4641      	mov	r1, r8
 8009bce:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8009bd2:	4641      	mov	r1, r8
 8009bd4:	018a      	lsls	r2, r1, #6
 8009bd6:	4641      	mov	r1, r8
 8009bd8:	ebb2 0a01 	subs.w	sl, r2, r1
 8009bdc:	4649      	mov	r1, r9
 8009bde:	eb63 0b01 	sbc.w	fp, r3, r1
 8009be2:	f04f 0200 	mov.w	r2, #0
 8009be6:	f04f 0300 	mov.w	r3, #0
 8009bea:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8009bee:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8009bf2:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8009bf6:	4692      	mov	sl, r2
 8009bf8:	469b      	mov	fp, r3
 8009bfa:	4623      	mov	r3, r4
 8009bfc:	eb1a 0303 	adds.w	r3, sl, r3
 8009c00:	623b      	str	r3, [r7, #32]
 8009c02:	462b      	mov	r3, r5
 8009c04:	eb4b 0303 	adc.w	r3, fp, r3
 8009c08:	627b      	str	r3, [r7, #36]	; 0x24
 8009c0a:	f04f 0200 	mov.w	r2, #0
 8009c0e:	f04f 0300 	mov.w	r3, #0
 8009c12:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 8009c16:	4629      	mov	r1, r5
 8009c18:	028b      	lsls	r3, r1, #10
 8009c1a:	4621      	mov	r1, r4
 8009c1c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8009c20:	4621      	mov	r1, r4
 8009c22:	028a      	lsls	r2, r1, #10
 8009c24:	4610      	mov	r0, r2
 8009c26:	4619      	mov	r1, r3
 8009c28:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8009c2c:	2200      	movs	r2, #0
 8009c2e:	673b      	str	r3, [r7, #112]	; 0x70
 8009c30:	677a      	str	r2, [r7, #116]	; 0x74
 8009c32:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 8009c36:	f7f7 f827 	bl	8000c88 <__aeabi_uldivmod>
 8009c3a:	4602      	mov	r2, r0
 8009c3c:	460b      	mov	r3, r1
 8009c3e:	4613      	mov	r3, r2
 8009c40:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8009c44:	4b41      	ldr	r3, [pc, #260]	; (8009d4c <HAL_RCC_GetSysClockFreq+0x354>)
 8009c46:	685b      	ldr	r3, [r3, #4]
 8009c48:	0c1b      	lsrs	r3, r3, #16
 8009c4a:	f003 0303 	and.w	r3, r3, #3
 8009c4e:	3301      	adds	r3, #1
 8009c50:	005b      	lsls	r3, r3, #1
 8009c52:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8009c56:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8009c5a:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8009c5e:	fbb2 f3f3 	udiv	r3, r2, r3
 8009c62:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8009c66:	e0eb      	b.n	8009e40 <HAL_RCC_GetSysClockFreq+0x448>
 8009c68:	4b38      	ldr	r3, [pc, #224]	; (8009d4c <HAL_RCC_GetSysClockFreq+0x354>)
 8009c6a:	685b      	ldr	r3, [r3, #4]
 8009c6c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009c70:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8009c74:	4b35      	ldr	r3, [pc, #212]	; (8009d4c <HAL_RCC_GetSysClockFreq+0x354>)
 8009c76:	685b      	ldr	r3, [r3, #4]
 8009c78:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009c7c:	2b00      	cmp	r3, #0
 8009c7e:	d06b      	beq.n	8009d58 <HAL_RCC_GetSysClockFreq+0x360>
 8009c80:	4b32      	ldr	r3, [pc, #200]	; (8009d4c <HAL_RCC_GetSysClockFreq+0x354>)
 8009c82:	685b      	ldr	r3, [r3, #4]
 8009c84:	099b      	lsrs	r3, r3, #6
 8009c86:	2200      	movs	r2, #0
 8009c88:	66bb      	str	r3, [r7, #104]	; 0x68
 8009c8a:	66fa      	str	r2, [r7, #108]	; 0x6c
 8009c8c:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8009c8e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009c92:	663b      	str	r3, [r7, #96]	; 0x60
 8009c94:	2300      	movs	r3, #0
 8009c96:	667b      	str	r3, [r7, #100]	; 0x64
 8009c98:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	; 0x60
 8009c9c:	4622      	mov	r2, r4
 8009c9e:	462b      	mov	r3, r5
 8009ca0:	f04f 0000 	mov.w	r0, #0
 8009ca4:	f04f 0100 	mov.w	r1, #0
 8009ca8:	0159      	lsls	r1, r3, #5
 8009caa:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8009cae:	0150      	lsls	r0, r2, #5
 8009cb0:	4602      	mov	r2, r0
 8009cb2:	460b      	mov	r3, r1
 8009cb4:	4621      	mov	r1, r4
 8009cb6:	1a51      	subs	r1, r2, r1
 8009cb8:	61b9      	str	r1, [r7, #24]
 8009cba:	4629      	mov	r1, r5
 8009cbc:	eb63 0301 	sbc.w	r3, r3, r1
 8009cc0:	61fb      	str	r3, [r7, #28]
 8009cc2:	f04f 0200 	mov.w	r2, #0
 8009cc6:	f04f 0300 	mov.w	r3, #0
 8009cca:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 8009cce:	4659      	mov	r1, fp
 8009cd0:	018b      	lsls	r3, r1, #6
 8009cd2:	4651      	mov	r1, sl
 8009cd4:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8009cd8:	4651      	mov	r1, sl
 8009cda:	018a      	lsls	r2, r1, #6
 8009cdc:	4651      	mov	r1, sl
 8009cde:	ebb2 0801 	subs.w	r8, r2, r1
 8009ce2:	4659      	mov	r1, fp
 8009ce4:	eb63 0901 	sbc.w	r9, r3, r1
 8009ce8:	f04f 0200 	mov.w	r2, #0
 8009cec:	f04f 0300 	mov.w	r3, #0
 8009cf0:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8009cf4:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8009cf8:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8009cfc:	4690      	mov	r8, r2
 8009cfe:	4699      	mov	r9, r3
 8009d00:	4623      	mov	r3, r4
 8009d02:	eb18 0303 	adds.w	r3, r8, r3
 8009d06:	613b      	str	r3, [r7, #16]
 8009d08:	462b      	mov	r3, r5
 8009d0a:	eb49 0303 	adc.w	r3, r9, r3
 8009d0e:	617b      	str	r3, [r7, #20]
 8009d10:	f04f 0200 	mov.w	r2, #0
 8009d14:	f04f 0300 	mov.w	r3, #0
 8009d18:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8009d1c:	4629      	mov	r1, r5
 8009d1e:	024b      	lsls	r3, r1, #9
 8009d20:	4621      	mov	r1, r4
 8009d22:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8009d26:	4621      	mov	r1, r4
 8009d28:	024a      	lsls	r2, r1, #9
 8009d2a:	4610      	mov	r0, r2
 8009d2c:	4619      	mov	r1, r3
 8009d2e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8009d32:	2200      	movs	r2, #0
 8009d34:	65bb      	str	r3, [r7, #88]	; 0x58
 8009d36:	65fa      	str	r2, [r7, #92]	; 0x5c
 8009d38:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8009d3c:	f7f6 ffa4 	bl	8000c88 <__aeabi_uldivmod>
 8009d40:	4602      	mov	r2, r0
 8009d42:	460b      	mov	r3, r1
 8009d44:	4613      	mov	r3, r2
 8009d46:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8009d4a:	e065      	b.n	8009e18 <HAL_RCC_GetSysClockFreq+0x420>
 8009d4c:	40023800 	.word	0x40023800
 8009d50:	00f42400 	.word	0x00f42400
 8009d54:	007a1200 	.word	0x007a1200
 8009d58:	4b3d      	ldr	r3, [pc, #244]	; (8009e50 <HAL_RCC_GetSysClockFreq+0x458>)
 8009d5a:	685b      	ldr	r3, [r3, #4]
 8009d5c:	099b      	lsrs	r3, r3, #6
 8009d5e:	2200      	movs	r2, #0
 8009d60:	4618      	mov	r0, r3
 8009d62:	4611      	mov	r1, r2
 8009d64:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8009d68:	653b      	str	r3, [r7, #80]	; 0x50
 8009d6a:	2300      	movs	r3, #0
 8009d6c:	657b      	str	r3, [r7, #84]	; 0x54
 8009d6e:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	; 0x50
 8009d72:	4642      	mov	r2, r8
 8009d74:	464b      	mov	r3, r9
 8009d76:	f04f 0000 	mov.w	r0, #0
 8009d7a:	f04f 0100 	mov.w	r1, #0
 8009d7e:	0159      	lsls	r1, r3, #5
 8009d80:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8009d84:	0150      	lsls	r0, r2, #5
 8009d86:	4602      	mov	r2, r0
 8009d88:	460b      	mov	r3, r1
 8009d8a:	4641      	mov	r1, r8
 8009d8c:	1a51      	subs	r1, r2, r1
 8009d8e:	60b9      	str	r1, [r7, #8]
 8009d90:	4649      	mov	r1, r9
 8009d92:	eb63 0301 	sbc.w	r3, r3, r1
 8009d96:	60fb      	str	r3, [r7, #12]
 8009d98:	f04f 0200 	mov.w	r2, #0
 8009d9c:	f04f 0300 	mov.w	r3, #0
 8009da0:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 8009da4:	4659      	mov	r1, fp
 8009da6:	018b      	lsls	r3, r1, #6
 8009da8:	4651      	mov	r1, sl
 8009daa:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8009dae:	4651      	mov	r1, sl
 8009db0:	018a      	lsls	r2, r1, #6
 8009db2:	4651      	mov	r1, sl
 8009db4:	1a54      	subs	r4, r2, r1
 8009db6:	4659      	mov	r1, fp
 8009db8:	eb63 0501 	sbc.w	r5, r3, r1
 8009dbc:	f04f 0200 	mov.w	r2, #0
 8009dc0:	f04f 0300 	mov.w	r3, #0
 8009dc4:	00eb      	lsls	r3, r5, #3
 8009dc6:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8009dca:	00e2      	lsls	r2, r4, #3
 8009dcc:	4614      	mov	r4, r2
 8009dce:	461d      	mov	r5, r3
 8009dd0:	4643      	mov	r3, r8
 8009dd2:	18e3      	adds	r3, r4, r3
 8009dd4:	603b      	str	r3, [r7, #0]
 8009dd6:	464b      	mov	r3, r9
 8009dd8:	eb45 0303 	adc.w	r3, r5, r3
 8009ddc:	607b      	str	r3, [r7, #4]
 8009dde:	f04f 0200 	mov.w	r2, #0
 8009de2:	f04f 0300 	mov.w	r3, #0
 8009de6:	e9d7 4500 	ldrd	r4, r5, [r7]
 8009dea:	4629      	mov	r1, r5
 8009dec:	028b      	lsls	r3, r1, #10
 8009dee:	4621      	mov	r1, r4
 8009df0:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8009df4:	4621      	mov	r1, r4
 8009df6:	028a      	lsls	r2, r1, #10
 8009df8:	4610      	mov	r0, r2
 8009dfa:	4619      	mov	r1, r3
 8009dfc:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8009e00:	2200      	movs	r2, #0
 8009e02:	64bb      	str	r3, [r7, #72]	; 0x48
 8009e04:	64fa      	str	r2, [r7, #76]	; 0x4c
 8009e06:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8009e0a:	f7f6 ff3d 	bl	8000c88 <__aeabi_uldivmod>
 8009e0e:	4602      	mov	r2, r0
 8009e10:	460b      	mov	r3, r1
 8009e12:	4613      	mov	r3, r2
 8009e14:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8009e18:	4b0d      	ldr	r3, [pc, #52]	; (8009e50 <HAL_RCC_GetSysClockFreq+0x458>)
 8009e1a:	685b      	ldr	r3, [r3, #4]
 8009e1c:	0f1b      	lsrs	r3, r3, #28
 8009e1e:	f003 0307 	and.w	r3, r3, #7
 8009e22:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8009e26:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8009e2a:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 8009e2e:	fbb2 f3f3 	udiv	r3, r2, r3
 8009e32:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8009e36:	e003      	b.n	8009e40 <HAL_RCC_GetSysClockFreq+0x448>
 8009e38:	4b06      	ldr	r3, [pc, #24]	; (8009e54 <HAL_RCC_GetSysClockFreq+0x45c>)
 8009e3a:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8009e3e:	bf00      	nop
 8009e40:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 8009e44:	4618      	mov	r0, r3
 8009e46:	37b8      	adds	r7, #184	; 0xb8
 8009e48:	46bd      	mov	sp, r7
 8009e4a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8009e4e:	bf00      	nop
 8009e50:	40023800 	.word	0x40023800
 8009e54:	00f42400 	.word	0x00f42400

08009e58 <HAL_RCC_OscConfig>:
 8009e58:	b580      	push	{r7, lr}
 8009e5a:	b086      	sub	sp, #24
 8009e5c:	af00      	add	r7, sp, #0
 8009e5e:	6078      	str	r0, [r7, #4]
 8009e60:	687b      	ldr	r3, [r7, #4]
 8009e62:	2b00      	cmp	r3, #0
 8009e64:	d101      	bne.n	8009e6a <HAL_RCC_OscConfig+0x12>
 8009e66:	2301      	movs	r3, #1
 8009e68:	e28d      	b.n	800a386 <HAL_RCC_OscConfig+0x52e>
 8009e6a:	687b      	ldr	r3, [r7, #4]
 8009e6c:	681b      	ldr	r3, [r3, #0]
 8009e6e:	f003 0301 	and.w	r3, r3, #1
 8009e72:	2b00      	cmp	r3, #0
 8009e74:	f000 8083 	beq.w	8009f7e <HAL_RCC_OscConfig+0x126>
 8009e78:	4b94      	ldr	r3, [pc, #592]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009e7a:	689b      	ldr	r3, [r3, #8]
 8009e7c:	f003 030c 	and.w	r3, r3, #12
 8009e80:	2b04      	cmp	r3, #4
 8009e82:	d019      	beq.n	8009eb8 <HAL_RCC_OscConfig+0x60>
 8009e84:	4b91      	ldr	r3, [pc, #580]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009e86:	689b      	ldr	r3, [r3, #8]
 8009e88:	f003 030c 	and.w	r3, r3, #12
 8009e8c:	2b08      	cmp	r3, #8
 8009e8e:	d106      	bne.n	8009e9e <HAL_RCC_OscConfig+0x46>
 8009e90:	4b8e      	ldr	r3, [pc, #568]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009e92:	685b      	ldr	r3, [r3, #4]
 8009e94:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009e98:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8009e9c:	d00c      	beq.n	8009eb8 <HAL_RCC_OscConfig+0x60>
 8009e9e:	4b8b      	ldr	r3, [pc, #556]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009ea0:	689b      	ldr	r3, [r3, #8]
 8009ea2:	f003 030c 	and.w	r3, r3, #12
 8009ea6:	2b0c      	cmp	r3, #12
 8009ea8:	d112      	bne.n	8009ed0 <HAL_RCC_OscConfig+0x78>
 8009eaa:	4b88      	ldr	r3, [pc, #544]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009eac:	685b      	ldr	r3, [r3, #4]
 8009eae:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009eb2:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8009eb6:	d10b      	bne.n	8009ed0 <HAL_RCC_OscConfig+0x78>
 8009eb8:	4b84      	ldr	r3, [pc, #528]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009eba:	681b      	ldr	r3, [r3, #0]
 8009ebc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009ec0:	2b00      	cmp	r3, #0
 8009ec2:	d05b      	beq.n	8009f7c <HAL_RCC_OscConfig+0x124>
 8009ec4:	687b      	ldr	r3, [r7, #4]
 8009ec6:	685b      	ldr	r3, [r3, #4]
 8009ec8:	2b00      	cmp	r3, #0
 8009eca:	d157      	bne.n	8009f7c <HAL_RCC_OscConfig+0x124>
 8009ecc:	2301      	movs	r3, #1
 8009ece:	e25a      	b.n	800a386 <HAL_RCC_OscConfig+0x52e>
 8009ed0:	687b      	ldr	r3, [r7, #4]
 8009ed2:	685b      	ldr	r3, [r3, #4]
 8009ed4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009ed8:	d106      	bne.n	8009ee8 <HAL_RCC_OscConfig+0x90>
 8009eda:	4b7c      	ldr	r3, [pc, #496]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009edc:	681b      	ldr	r3, [r3, #0]
 8009ede:	4a7b      	ldr	r2, [pc, #492]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009ee0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009ee4:	6013      	str	r3, [r2, #0]
 8009ee6:	e01d      	b.n	8009f24 <HAL_RCC_OscConfig+0xcc>
 8009ee8:	687b      	ldr	r3, [r7, #4]
 8009eea:	685b      	ldr	r3, [r3, #4]
 8009eec:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8009ef0:	d10c      	bne.n	8009f0c <HAL_RCC_OscConfig+0xb4>
 8009ef2:	4b76      	ldr	r3, [pc, #472]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009ef4:	681b      	ldr	r3, [r3, #0]
 8009ef6:	4a75      	ldr	r2, [pc, #468]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009ef8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8009efc:	6013      	str	r3, [r2, #0]
 8009efe:	4b73      	ldr	r3, [pc, #460]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009f00:	681b      	ldr	r3, [r3, #0]
 8009f02:	4a72      	ldr	r2, [pc, #456]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009f04:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009f08:	6013      	str	r3, [r2, #0]
 8009f0a:	e00b      	b.n	8009f24 <HAL_RCC_OscConfig+0xcc>
 8009f0c:	4b6f      	ldr	r3, [pc, #444]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009f0e:	681b      	ldr	r3, [r3, #0]
 8009f10:	4a6e      	ldr	r2, [pc, #440]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009f12:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8009f16:	6013      	str	r3, [r2, #0]
 8009f18:	4b6c      	ldr	r3, [pc, #432]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009f1a:	681b      	ldr	r3, [r3, #0]
 8009f1c:	4a6b      	ldr	r2, [pc, #428]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009f1e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8009f22:	6013      	str	r3, [r2, #0]
 8009f24:	687b      	ldr	r3, [r7, #4]
 8009f26:	685b      	ldr	r3, [r3, #4]
 8009f28:	2b00      	cmp	r3, #0
 8009f2a:	d013      	beq.n	8009f54 <HAL_RCC_OscConfig+0xfc>
 8009f2c:	f7fd fd08 	bl	8007940 <HAL_GetTick>
 8009f30:	6138      	str	r0, [r7, #16]
 8009f32:	e008      	b.n	8009f46 <HAL_RCC_OscConfig+0xee>
 8009f34:	f7fd fd04 	bl	8007940 <HAL_GetTick>
 8009f38:	4602      	mov	r2, r0
 8009f3a:	693b      	ldr	r3, [r7, #16]
 8009f3c:	1ad3      	subs	r3, r2, r3
 8009f3e:	2b64      	cmp	r3, #100	; 0x64
 8009f40:	d901      	bls.n	8009f46 <HAL_RCC_OscConfig+0xee>
 8009f42:	2303      	movs	r3, #3
 8009f44:	e21f      	b.n	800a386 <HAL_RCC_OscConfig+0x52e>
 8009f46:	4b61      	ldr	r3, [pc, #388]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009f48:	681b      	ldr	r3, [r3, #0]
 8009f4a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009f4e:	2b00      	cmp	r3, #0
 8009f50:	d0f0      	beq.n	8009f34 <HAL_RCC_OscConfig+0xdc>
 8009f52:	e014      	b.n	8009f7e <HAL_RCC_OscConfig+0x126>
 8009f54:	f7fd fcf4 	bl	8007940 <HAL_GetTick>
 8009f58:	6138      	str	r0, [r7, #16]
 8009f5a:	e008      	b.n	8009f6e <HAL_RCC_OscConfig+0x116>
 8009f5c:	f7fd fcf0 	bl	8007940 <HAL_GetTick>
 8009f60:	4602      	mov	r2, r0
 8009f62:	693b      	ldr	r3, [r7, #16]
 8009f64:	1ad3      	subs	r3, r2, r3
 8009f66:	2b64      	cmp	r3, #100	; 0x64
 8009f68:	d901      	bls.n	8009f6e <HAL_RCC_OscConfig+0x116>
 8009f6a:	2303      	movs	r3, #3
 8009f6c:	e20b      	b.n	800a386 <HAL_RCC_OscConfig+0x52e>
 8009f6e:	4b57      	ldr	r3, [pc, #348]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009f70:	681b      	ldr	r3, [r3, #0]
 8009f72:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009f76:	2b00      	cmp	r3, #0
 8009f78:	d1f0      	bne.n	8009f5c <HAL_RCC_OscConfig+0x104>
 8009f7a:	e000      	b.n	8009f7e <HAL_RCC_OscConfig+0x126>
 8009f7c:	bf00      	nop
 8009f7e:	687b      	ldr	r3, [r7, #4]
 8009f80:	681b      	ldr	r3, [r3, #0]
 8009f82:	f003 0302 	and.w	r3, r3, #2
 8009f86:	2b00      	cmp	r3, #0
 8009f88:	d06f      	beq.n	800a06a <HAL_RCC_OscConfig+0x212>
 8009f8a:	4b50      	ldr	r3, [pc, #320]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009f8c:	689b      	ldr	r3, [r3, #8]
 8009f8e:	f003 030c 	and.w	r3, r3, #12
 8009f92:	2b00      	cmp	r3, #0
 8009f94:	d017      	beq.n	8009fc6 <HAL_RCC_OscConfig+0x16e>
 8009f96:	4b4d      	ldr	r3, [pc, #308]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009f98:	689b      	ldr	r3, [r3, #8]
 8009f9a:	f003 030c 	and.w	r3, r3, #12
 8009f9e:	2b08      	cmp	r3, #8
 8009fa0:	d105      	bne.n	8009fae <HAL_RCC_OscConfig+0x156>
 8009fa2:	4b4a      	ldr	r3, [pc, #296]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009fa4:	685b      	ldr	r3, [r3, #4]
 8009fa6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009faa:	2b00      	cmp	r3, #0
 8009fac:	d00b      	beq.n	8009fc6 <HAL_RCC_OscConfig+0x16e>
 8009fae:	4b47      	ldr	r3, [pc, #284]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009fb0:	689b      	ldr	r3, [r3, #8]
 8009fb2:	f003 030c 	and.w	r3, r3, #12
 8009fb6:	2b0c      	cmp	r3, #12
 8009fb8:	d11c      	bne.n	8009ff4 <HAL_RCC_OscConfig+0x19c>
 8009fba:	4b44      	ldr	r3, [pc, #272]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009fbc:	685b      	ldr	r3, [r3, #4]
 8009fbe:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009fc2:	2b00      	cmp	r3, #0
 8009fc4:	d116      	bne.n	8009ff4 <HAL_RCC_OscConfig+0x19c>
 8009fc6:	4b41      	ldr	r3, [pc, #260]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009fc8:	681b      	ldr	r3, [r3, #0]
 8009fca:	f003 0302 	and.w	r3, r3, #2
 8009fce:	2b00      	cmp	r3, #0
 8009fd0:	d005      	beq.n	8009fde <HAL_RCC_OscConfig+0x186>
 8009fd2:	687b      	ldr	r3, [r7, #4]
 8009fd4:	68db      	ldr	r3, [r3, #12]
 8009fd6:	2b01      	cmp	r3, #1
 8009fd8:	d001      	beq.n	8009fde <HAL_RCC_OscConfig+0x186>
 8009fda:	2301      	movs	r3, #1
 8009fdc:	e1d3      	b.n	800a386 <HAL_RCC_OscConfig+0x52e>
 8009fde:	4b3b      	ldr	r3, [pc, #236]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009fe0:	681b      	ldr	r3, [r3, #0]
 8009fe2:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8009fe6:	687b      	ldr	r3, [r7, #4]
 8009fe8:	691b      	ldr	r3, [r3, #16]
 8009fea:	00db      	lsls	r3, r3, #3
 8009fec:	4937      	ldr	r1, [pc, #220]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 8009fee:	4313      	orrs	r3, r2
 8009ff0:	600b      	str	r3, [r1, #0]
 8009ff2:	e03a      	b.n	800a06a <HAL_RCC_OscConfig+0x212>
 8009ff4:	687b      	ldr	r3, [r7, #4]
 8009ff6:	68db      	ldr	r3, [r3, #12]
 8009ff8:	2b00      	cmp	r3, #0
 8009ffa:	d020      	beq.n	800a03e <HAL_RCC_OscConfig+0x1e6>
 8009ffc:	4b34      	ldr	r3, [pc, #208]	; (800a0d0 <HAL_RCC_OscConfig+0x278>)
 8009ffe:	2201      	movs	r2, #1
 800a000:	601a      	str	r2, [r3, #0]
 800a002:	f7fd fc9d 	bl	8007940 <HAL_GetTick>
 800a006:	6138      	str	r0, [r7, #16]
 800a008:	e008      	b.n	800a01c <HAL_RCC_OscConfig+0x1c4>
 800a00a:	f7fd fc99 	bl	8007940 <HAL_GetTick>
 800a00e:	4602      	mov	r2, r0
 800a010:	693b      	ldr	r3, [r7, #16]
 800a012:	1ad3      	subs	r3, r2, r3
 800a014:	2b02      	cmp	r3, #2
 800a016:	d901      	bls.n	800a01c <HAL_RCC_OscConfig+0x1c4>
 800a018:	2303      	movs	r3, #3
 800a01a:	e1b4      	b.n	800a386 <HAL_RCC_OscConfig+0x52e>
 800a01c:	4b2b      	ldr	r3, [pc, #172]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 800a01e:	681b      	ldr	r3, [r3, #0]
 800a020:	f003 0302 	and.w	r3, r3, #2
 800a024:	2b00      	cmp	r3, #0
 800a026:	d0f0      	beq.n	800a00a <HAL_RCC_OscConfig+0x1b2>
 800a028:	4b28      	ldr	r3, [pc, #160]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 800a02a:	681b      	ldr	r3, [r3, #0]
 800a02c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800a030:	687b      	ldr	r3, [r7, #4]
 800a032:	691b      	ldr	r3, [r3, #16]
 800a034:	00db      	lsls	r3, r3, #3
 800a036:	4925      	ldr	r1, [pc, #148]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 800a038:	4313      	orrs	r3, r2
 800a03a:	600b      	str	r3, [r1, #0]
 800a03c:	e015      	b.n	800a06a <HAL_RCC_OscConfig+0x212>
 800a03e:	4b24      	ldr	r3, [pc, #144]	; (800a0d0 <HAL_RCC_OscConfig+0x278>)
 800a040:	2200      	movs	r2, #0
 800a042:	601a      	str	r2, [r3, #0]
 800a044:	f7fd fc7c 	bl	8007940 <HAL_GetTick>
 800a048:	6138      	str	r0, [r7, #16]
 800a04a:	e008      	b.n	800a05e <HAL_RCC_OscConfig+0x206>
 800a04c:	f7fd fc78 	bl	8007940 <HAL_GetTick>
 800a050:	4602      	mov	r2, r0
 800a052:	693b      	ldr	r3, [r7, #16]
 800a054:	1ad3      	subs	r3, r2, r3
 800a056:	2b02      	cmp	r3, #2
 800a058:	d901      	bls.n	800a05e <HAL_RCC_OscConfig+0x206>
 800a05a:	2303      	movs	r3, #3
 800a05c:	e193      	b.n	800a386 <HAL_RCC_OscConfig+0x52e>
 800a05e:	4b1b      	ldr	r3, [pc, #108]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 800a060:	681b      	ldr	r3, [r3, #0]
 800a062:	f003 0302 	and.w	r3, r3, #2
 800a066:	2b00      	cmp	r3, #0
 800a068:	d1f0      	bne.n	800a04c <HAL_RCC_OscConfig+0x1f4>
 800a06a:	687b      	ldr	r3, [r7, #4]
 800a06c:	681b      	ldr	r3, [r3, #0]
 800a06e:	f003 0308 	and.w	r3, r3, #8
 800a072:	2b00      	cmp	r3, #0
 800a074:	d036      	beq.n	800a0e4 <HAL_RCC_OscConfig+0x28c>
 800a076:	687b      	ldr	r3, [r7, #4]
 800a078:	695b      	ldr	r3, [r3, #20]
 800a07a:	2b00      	cmp	r3, #0
 800a07c:	d016      	beq.n	800a0ac <HAL_RCC_OscConfig+0x254>
 800a07e:	4b15      	ldr	r3, [pc, #84]	; (800a0d4 <HAL_RCC_OscConfig+0x27c>)
 800a080:	2201      	movs	r2, #1
 800a082:	601a      	str	r2, [r3, #0]
 800a084:	f7fd fc5c 	bl	8007940 <HAL_GetTick>
 800a088:	6138      	str	r0, [r7, #16]
 800a08a:	e008      	b.n	800a09e <HAL_RCC_OscConfig+0x246>
 800a08c:	f7fd fc58 	bl	8007940 <HAL_GetTick>
 800a090:	4602      	mov	r2, r0
 800a092:	693b      	ldr	r3, [r7, #16]
 800a094:	1ad3      	subs	r3, r2, r3
 800a096:	2b02      	cmp	r3, #2
 800a098:	d901      	bls.n	800a09e <HAL_RCC_OscConfig+0x246>
 800a09a:	2303      	movs	r3, #3
 800a09c:	e173      	b.n	800a386 <HAL_RCC_OscConfig+0x52e>
 800a09e:	4b0b      	ldr	r3, [pc, #44]	; (800a0cc <HAL_RCC_OscConfig+0x274>)
 800a0a0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800a0a2:	f003 0302 	and.w	r3, r3, #2
 800a0a6:	2b00      	cmp	r3, #0
 800a0a8:	d0f0      	beq.n	800a08c <HAL_RCC_OscConfig+0x234>
 800a0aa:	e01b      	b.n	800a0e4 <HAL_RCC_OscConfig+0x28c>
 800a0ac:	4b09      	ldr	r3, [pc, #36]	; (800a0d4 <HAL_RCC_OscConfig+0x27c>)
 800a0ae:	2200      	movs	r2, #0
 800a0b0:	601a      	str	r2, [r3, #0]
 800a0b2:	f7fd fc45 	bl	8007940 <HAL_GetTick>
 800a0b6:	6138      	str	r0, [r7, #16]
 800a0b8:	e00e      	b.n	800a0d8 <HAL_RCC_OscConfig+0x280>
 800a0ba:	f7fd fc41 	bl	8007940 <HAL_GetTick>
 800a0be:	4602      	mov	r2, r0
 800a0c0:	693b      	ldr	r3, [r7, #16]
 800a0c2:	1ad3      	subs	r3, r2, r3
 800a0c4:	2b02      	cmp	r3, #2
 800a0c6:	d907      	bls.n	800a0d8 <HAL_RCC_OscConfig+0x280>
 800a0c8:	2303      	movs	r3, #3
 800a0ca:	e15c      	b.n	800a386 <HAL_RCC_OscConfig+0x52e>
 800a0cc:	40023800 	.word	0x40023800
 800a0d0:	42470000 	.word	0x42470000
 800a0d4:	42470e80 	.word	0x42470e80
 800a0d8:	4b8a      	ldr	r3, [pc, #552]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a0da:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800a0dc:	f003 0302 	and.w	r3, r3, #2
 800a0e0:	2b00      	cmp	r3, #0
 800a0e2:	d1ea      	bne.n	800a0ba <HAL_RCC_OscConfig+0x262>
 800a0e4:	687b      	ldr	r3, [r7, #4]
 800a0e6:	681b      	ldr	r3, [r3, #0]
 800a0e8:	f003 0304 	and.w	r3, r3, #4
 800a0ec:	2b00      	cmp	r3, #0
 800a0ee:	f000 8097 	beq.w	800a220 <HAL_RCC_OscConfig+0x3c8>
 800a0f2:	2300      	movs	r3, #0
 800a0f4:	75fb      	strb	r3, [r7, #23]
 800a0f6:	4b83      	ldr	r3, [pc, #524]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a0f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a0fa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800a0fe:	2b00      	cmp	r3, #0
 800a100:	d10f      	bne.n	800a122 <HAL_RCC_OscConfig+0x2ca>
 800a102:	2300      	movs	r3, #0
 800a104:	60bb      	str	r3, [r7, #8]
 800a106:	4b7f      	ldr	r3, [pc, #508]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a108:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a10a:	4a7e      	ldr	r2, [pc, #504]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a10c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800a110:	6413      	str	r3, [r2, #64]	; 0x40
 800a112:	4b7c      	ldr	r3, [pc, #496]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a114:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a116:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800a11a:	60bb      	str	r3, [r7, #8]
 800a11c:	68bb      	ldr	r3, [r7, #8]
 800a11e:	2301      	movs	r3, #1
 800a120:	75fb      	strb	r3, [r7, #23]
 800a122:	4b79      	ldr	r3, [pc, #484]	; (800a308 <HAL_RCC_OscConfig+0x4b0>)
 800a124:	681b      	ldr	r3, [r3, #0]
 800a126:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a12a:	2b00      	cmp	r3, #0
 800a12c:	d118      	bne.n	800a160 <HAL_RCC_OscConfig+0x308>
 800a12e:	4b76      	ldr	r3, [pc, #472]	; (800a308 <HAL_RCC_OscConfig+0x4b0>)
 800a130:	681b      	ldr	r3, [r3, #0]
 800a132:	4a75      	ldr	r2, [pc, #468]	; (800a308 <HAL_RCC_OscConfig+0x4b0>)
 800a134:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a138:	6013      	str	r3, [r2, #0]
 800a13a:	f7fd fc01 	bl	8007940 <HAL_GetTick>
 800a13e:	6138      	str	r0, [r7, #16]
 800a140:	e008      	b.n	800a154 <HAL_RCC_OscConfig+0x2fc>
 800a142:	f7fd fbfd 	bl	8007940 <HAL_GetTick>
 800a146:	4602      	mov	r2, r0
 800a148:	693b      	ldr	r3, [r7, #16]
 800a14a:	1ad3      	subs	r3, r2, r3
 800a14c:	2b02      	cmp	r3, #2
 800a14e:	d901      	bls.n	800a154 <HAL_RCC_OscConfig+0x2fc>
 800a150:	2303      	movs	r3, #3
 800a152:	e118      	b.n	800a386 <HAL_RCC_OscConfig+0x52e>
 800a154:	4b6c      	ldr	r3, [pc, #432]	; (800a308 <HAL_RCC_OscConfig+0x4b0>)
 800a156:	681b      	ldr	r3, [r3, #0]
 800a158:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a15c:	2b00      	cmp	r3, #0
 800a15e:	d0f0      	beq.n	800a142 <HAL_RCC_OscConfig+0x2ea>
 800a160:	687b      	ldr	r3, [r7, #4]
 800a162:	689b      	ldr	r3, [r3, #8]
 800a164:	2b01      	cmp	r3, #1
 800a166:	d106      	bne.n	800a176 <HAL_RCC_OscConfig+0x31e>
 800a168:	4b66      	ldr	r3, [pc, #408]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a16a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a16c:	4a65      	ldr	r2, [pc, #404]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a16e:	f043 0301 	orr.w	r3, r3, #1
 800a172:	6713      	str	r3, [r2, #112]	; 0x70
 800a174:	e01c      	b.n	800a1b0 <HAL_RCC_OscConfig+0x358>
 800a176:	687b      	ldr	r3, [r7, #4]
 800a178:	689b      	ldr	r3, [r3, #8]
 800a17a:	2b05      	cmp	r3, #5
 800a17c:	d10c      	bne.n	800a198 <HAL_RCC_OscConfig+0x340>
 800a17e:	4b61      	ldr	r3, [pc, #388]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a180:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a182:	4a60      	ldr	r2, [pc, #384]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a184:	f043 0304 	orr.w	r3, r3, #4
 800a188:	6713      	str	r3, [r2, #112]	; 0x70
 800a18a:	4b5e      	ldr	r3, [pc, #376]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a18c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a18e:	4a5d      	ldr	r2, [pc, #372]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a190:	f043 0301 	orr.w	r3, r3, #1
 800a194:	6713      	str	r3, [r2, #112]	; 0x70
 800a196:	e00b      	b.n	800a1b0 <HAL_RCC_OscConfig+0x358>
 800a198:	4b5a      	ldr	r3, [pc, #360]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a19a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a19c:	4a59      	ldr	r2, [pc, #356]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a19e:	f023 0301 	bic.w	r3, r3, #1
 800a1a2:	6713      	str	r3, [r2, #112]	; 0x70
 800a1a4:	4b57      	ldr	r3, [pc, #348]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a1a6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a1a8:	4a56      	ldr	r2, [pc, #344]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a1aa:	f023 0304 	bic.w	r3, r3, #4
 800a1ae:	6713      	str	r3, [r2, #112]	; 0x70
 800a1b0:	687b      	ldr	r3, [r7, #4]
 800a1b2:	689b      	ldr	r3, [r3, #8]
 800a1b4:	2b00      	cmp	r3, #0
 800a1b6:	d015      	beq.n	800a1e4 <HAL_RCC_OscConfig+0x38c>
 800a1b8:	f7fd fbc2 	bl	8007940 <HAL_GetTick>
 800a1bc:	6138      	str	r0, [r7, #16]
 800a1be:	e00a      	b.n	800a1d6 <HAL_RCC_OscConfig+0x37e>
 800a1c0:	f7fd fbbe 	bl	8007940 <HAL_GetTick>
 800a1c4:	4602      	mov	r2, r0
 800a1c6:	693b      	ldr	r3, [r7, #16]
 800a1c8:	1ad3      	subs	r3, r2, r3
 800a1ca:	f241 3288 	movw	r2, #5000	; 0x1388
 800a1ce:	4293      	cmp	r3, r2
 800a1d0:	d901      	bls.n	800a1d6 <HAL_RCC_OscConfig+0x37e>
 800a1d2:	2303      	movs	r3, #3
 800a1d4:	e0d7      	b.n	800a386 <HAL_RCC_OscConfig+0x52e>
 800a1d6:	4b4b      	ldr	r3, [pc, #300]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a1d8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a1da:	f003 0302 	and.w	r3, r3, #2
 800a1de:	2b00      	cmp	r3, #0
 800a1e0:	d0ee      	beq.n	800a1c0 <HAL_RCC_OscConfig+0x368>
 800a1e2:	e014      	b.n	800a20e <HAL_RCC_OscConfig+0x3b6>
 800a1e4:	f7fd fbac 	bl	8007940 <HAL_GetTick>
 800a1e8:	6138      	str	r0, [r7, #16]
 800a1ea:	e00a      	b.n	800a202 <HAL_RCC_OscConfig+0x3aa>
 800a1ec:	f7fd fba8 	bl	8007940 <HAL_GetTick>
 800a1f0:	4602      	mov	r2, r0
 800a1f2:	693b      	ldr	r3, [r7, #16]
 800a1f4:	1ad3      	subs	r3, r2, r3
 800a1f6:	f241 3288 	movw	r2, #5000	; 0x1388
 800a1fa:	4293      	cmp	r3, r2
 800a1fc:	d901      	bls.n	800a202 <HAL_RCC_OscConfig+0x3aa>
 800a1fe:	2303      	movs	r3, #3
 800a200:	e0c1      	b.n	800a386 <HAL_RCC_OscConfig+0x52e>
 800a202:	4b40      	ldr	r3, [pc, #256]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a204:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a206:	f003 0302 	and.w	r3, r3, #2
 800a20a:	2b00      	cmp	r3, #0
 800a20c:	d1ee      	bne.n	800a1ec <HAL_RCC_OscConfig+0x394>
 800a20e:	7dfb      	ldrb	r3, [r7, #23]
 800a210:	2b01      	cmp	r3, #1
 800a212:	d105      	bne.n	800a220 <HAL_RCC_OscConfig+0x3c8>
 800a214:	4b3b      	ldr	r3, [pc, #236]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a216:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a218:	4a3a      	ldr	r2, [pc, #232]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a21a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800a21e:	6413      	str	r3, [r2, #64]	; 0x40
 800a220:	687b      	ldr	r3, [r7, #4]
 800a222:	699b      	ldr	r3, [r3, #24]
 800a224:	2b00      	cmp	r3, #0
 800a226:	f000 80ad 	beq.w	800a384 <HAL_RCC_OscConfig+0x52c>
 800a22a:	4b36      	ldr	r3, [pc, #216]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a22c:	689b      	ldr	r3, [r3, #8]
 800a22e:	f003 030c 	and.w	r3, r3, #12
 800a232:	2b08      	cmp	r3, #8
 800a234:	d060      	beq.n	800a2f8 <HAL_RCC_OscConfig+0x4a0>
 800a236:	687b      	ldr	r3, [r7, #4]
 800a238:	699b      	ldr	r3, [r3, #24]
 800a23a:	2b02      	cmp	r3, #2
 800a23c:	d145      	bne.n	800a2ca <HAL_RCC_OscConfig+0x472>
 800a23e:	4b33      	ldr	r3, [pc, #204]	; (800a30c <HAL_RCC_OscConfig+0x4b4>)
 800a240:	2200      	movs	r2, #0
 800a242:	601a      	str	r2, [r3, #0]
 800a244:	f7fd fb7c 	bl	8007940 <HAL_GetTick>
 800a248:	6138      	str	r0, [r7, #16]
 800a24a:	e008      	b.n	800a25e <HAL_RCC_OscConfig+0x406>
 800a24c:	f7fd fb78 	bl	8007940 <HAL_GetTick>
 800a250:	4602      	mov	r2, r0
 800a252:	693b      	ldr	r3, [r7, #16]
 800a254:	1ad3      	subs	r3, r2, r3
 800a256:	2b02      	cmp	r3, #2
 800a258:	d901      	bls.n	800a25e <HAL_RCC_OscConfig+0x406>
 800a25a:	2303      	movs	r3, #3
 800a25c:	e093      	b.n	800a386 <HAL_RCC_OscConfig+0x52e>
 800a25e:	4b29      	ldr	r3, [pc, #164]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a260:	681b      	ldr	r3, [r3, #0]
 800a262:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800a266:	2b00      	cmp	r3, #0
 800a268:	d1f0      	bne.n	800a24c <HAL_RCC_OscConfig+0x3f4>
 800a26a:	687b      	ldr	r3, [r7, #4]
 800a26c:	69da      	ldr	r2, [r3, #28]
 800a26e:	687b      	ldr	r3, [r7, #4]
 800a270:	6a1b      	ldr	r3, [r3, #32]
 800a272:	431a      	orrs	r2, r3
 800a274:	687b      	ldr	r3, [r7, #4]
 800a276:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a278:	019b      	lsls	r3, r3, #6
 800a27a:	431a      	orrs	r2, r3
 800a27c:	687b      	ldr	r3, [r7, #4]
 800a27e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a280:	085b      	lsrs	r3, r3, #1
 800a282:	3b01      	subs	r3, #1
 800a284:	041b      	lsls	r3, r3, #16
 800a286:	431a      	orrs	r2, r3
 800a288:	687b      	ldr	r3, [r7, #4]
 800a28a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a28c:	061b      	lsls	r3, r3, #24
 800a28e:	431a      	orrs	r2, r3
 800a290:	687b      	ldr	r3, [r7, #4]
 800a292:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a294:	071b      	lsls	r3, r3, #28
 800a296:	491b      	ldr	r1, [pc, #108]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a298:	4313      	orrs	r3, r2
 800a29a:	604b      	str	r3, [r1, #4]
 800a29c:	4b1b      	ldr	r3, [pc, #108]	; (800a30c <HAL_RCC_OscConfig+0x4b4>)
 800a29e:	2201      	movs	r2, #1
 800a2a0:	601a      	str	r2, [r3, #0]
 800a2a2:	f7fd fb4d 	bl	8007940 <HAL_GetTick>
 800a2a6:	6138      	str	r0, [r7, #16]
 800a2a8:	e008      	b.n	800a2bc <HAL_RCC_OscConfig+0x464>
 800a2aa:	f7fd fb49 	bl	8007940 <HAL_GetTick>
 800a2ae:	4602      	mov	r2, r0
 800a2b0:	693b      	ldr	r3, [r7, #16]
 800a2b2:	1ad3      	subs	r3, r2, r3
 800a2b4:	2b02      	cmp	r3, #2
 800a2b6:	d901      	bls.n	800a2bc <HAL_RCC_OscConfig+0x464>
 800a2b8:	2303      	movs	r3, #3
 800a2ba:	e064      	b.n	800a386 <HAL_RCC_OscConfig+0x52e>
 800a2bc:	4b11      	ldr	r3, [pc, #68]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a2be:	681b      	ldr	r3, [r3, #0]
 800a2c0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800a2c4:	2b00      	cmp	r3, #0
 800a2c6:	d0f0      	beq.n	800a2aa <HAL_RCC_OscConfig+0x452>
 800a2c8:	e05c      	b.n	800a384 <HAL_RCC_OscConfig+0x52c>
 800a2ca:	4b10      	ldr	r3, [pc, #64]	; (800a30c <HAL_RCC_OscConfig+0x4b4>)
 800a2cc:	2200      	movs	r2, #0
 800a2ce:	601a      	str	r2, [r3, #0]
 800a2d0:	f7fd fb36 	bl	8007940 <HAL_GetTick>
 800a2d4:	6138      	str	r0, [r7, #16]
 800a2d6:	e008      	b.n	800a2ea <HAL_RCC_OscConfig+0x492>
 800a2d8:	f7fd fb32 	bl	8007940 <HAL_GetTick>
 800a2dc:	4602      	mov	r2, r0
 800a2de:	693b      	ldr	r3, [r7, #16]
 800a2e0:	1ad3      	subs	r3, r2, r3
 800a2e2:	2b02      	cmp	r3, #2
 800a2e4:	d901      	bls.n	800a2ea <HAL_RCC_OscConfig+0x492>
 800a2e6:	2303      	movs	r3, #3
 800a2e8:	e04d      	b.n	800a386 <HAL_RCC_OscConfig+0x52e>
 800a2ea:	4b06      	ldr	r3, [pc, #24]	; (800a304 <HAL_RCC_OscConfig+0x4ac>)
 800a2ec:	681b      	ldr	r3, [r3, #0]
 800a2ee:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800a2f2:	2b00      	cmp	r3, #0
 800a2f4:	d1f0      	bne.n	800a2d8 <HAL_RCC_OscConfig+0x480>
 800a2f6:	e045      	b.n	800a384 <HAL_RCC_OscConfig+0x52c>
 800a2f8:	687b      	ldr	r3, [r7, #4]
 800a2fa:	699b      	ldr	r3, [r3, #24]
 800a2fc:	2b01      	cmp	r3, #1
 800a2fe:	d107      	bne.n	800a310 <HAL_RCC_OscConfig+0x4b8>
 800a300:	2301      	movs	r3, #1
 800a302:	e040      	b.n	800a386 <HAL_RCC_OscConfig+0x52e>
 800a304:	40023800 	.word	0x40023800
 800a308:	40007000 	.word	0x40007000
 800a30c:	42470060 	.word	0x42470060
 800a310:	4b1f      	ldr	r3, [pc, #124]	; (800a390 <HAL_RCC_OscConfig+0x538>)
 800a312:	685b      	ldr	r3, [r3, #4]
 800a314:	60fb      	str	r3, [r7, #12]
 800a316:	687b      	ldr	r3, [r7, #4]
 800a318:	699b      	ldr	r3, [r3, #24]
 800a31a:	2b01      	cmp	r3, #1
 800a31c:	d030      	beq.n	800a380 <HAL_RCC_OscConfig+0x528>
 800a31e:	68fb      	ldr	r3, [r7, #12]
 800a320:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 800a324:	687b      	ldr	r3, [r7, #4]
 800a326:	69db      	ldr	r3, [r3, #28]
 800a328:	429a      	cmp	r2, r3
 800a32a:	d129      	bne.n	800a380 <HAL_RCC_OscConfig+0x528>
 800a32c:	68fb      	ldr	r3, [r7, #12]
 800a32e:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800a332:	687b      	ldr	r3, [r7, #4]
 800a334:	6a1b      	ldr	r3, [r3, #32]
 800a336:	429a      	cmp	r2, r3
 800a338:	d122      	bne.n	800a380 <HAL_RCC_OscConfig+0x528>
 800a33a:	68fa      	ldr	r2, [r7, #12]
 800a33c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 800a340:	4013      	ands	r3, r2
 800a342:	687a      	ldr	r2, [r7, #4]
 800a344:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800a346:	0192      	lsls	r2, r2, #6
 800a348:	4293      	cmp	r3, r2
 800a34a:	d119      	bne.n	800a380 <HAL_RCC_OscConfig+0x528>
 800a34c:	68fb      	ldr	r3, [r7, #12]
 800a34e:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 800a352:	687b      	ldr	r3, [r7, #4]
 800a354:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a356:	085b      	lsrs	r3, r3, #1
 800a358:	3b01      	subs	r3, #1
 800a35a:	041b      	lsls	r3, r3, #16
 800a35c:	429a      	cmp	r2, r3
 800a35e:	d10f      	bne.n	800a380 <HAL_RCC_OscConfig+0x528>
 800a360:	68fb      	ldr	r3, [r7, #12]
 800a362:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 800a366:	687b      	ldr	r3, [r7, #4]
 800a368:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a36a:	061b      	lsls	r3, r3, #24
 800a36c:	429a      	cmp	r2, r3
 800a36e:	d107      	bne.n	800a380 <HAL_RCC_OscConfig+0x528>
 800a370:	68fb      	ldr	r3, [r7, #12]
 800a372:	f003 42e0 	and.w	r2, r3, #1879048192	; 0x70000000
 800a376:	687b      	ldr	r3, [r7, #4]
 800a378:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a37a:	071b      	lsls	r3, r3, #28
 800a37c:	429a      	cmp	r2, r3
 800a37e:	d001      	beq.n	800a384 <HAL_RCC_OscConfig+0x52c>
 800a380:	2301      	movs	r3, #1
 800a382:	e000      	b.n	800a386 <HAL_RCC_OscConfig+0x52e>
 800a384:	2300      	movs	r3, #0
 800a386:	4618      	mov	r0, r3
 800a388:	3718      	adds	r7, #24
 800a38a:	46bd      	mov	sp, r7
 800a38c:	bd80      	pop	{r7, pc}
 800a38e:	bf00      	nop
 800a390:	40023800 	.word	0x40023800

0800a394 <HAL_TIM_Base_Init>:
 800a394:	b580      	push	{r7, lr}
 800a396:	b082      	sub	sp, #8
 800a398:	af00      	add	r7, sp, #0
 800a39a:	6078      	str	r0, [r7, #4]
 800a39c:	687b      	ldr	r3, [r7, #4]
 800a39e:	2b00      	cmp	r3, #0
 800a3a0:	d101      	bne.n	800a3a6 <HAL_TIM_Base_Init+0x12>
 800a3a2:	2301      	movs	r3, #1
 800a3a4:	e041      	b.n	800a42a <HAL_TIM_Base_Init+0x96>
 800a3a6:	687b      	ldr	r3, [r7, #4]
 800a3a8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a3ac:	b2db      	uxtb	r3, r3
 800a3ae:	2b00      	cmp	r3, #0
 800a3b0:	d106      	bne.n	800a3c0 <HAL_TIM_Base_Init+0x2c>
 800a3b2:	687b      	ldr	r3, [r7, #4]
 800a3b4:	2200      	movs	r2, #0
 800a3b6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a3ba:	6878      	ldr	r0, [r7, #4]
 800a3bc:	f7fc fde4 	bl	8006f88 <HAL_TIM_Base_MspInit>
 800a3c0:	687b      	ldr	r3, [r7, #4]
 800a3c2:	2202      	movs	r2, #2
 800a3c4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a3c8:	687b      	ldr	r3, [r7, #4]
 800a3ca:	681a      	ldr	r2, [r3, #0]
 800a3cc:	687b      	ldr	r3, [r7, #4]
 800a3ce:	3304      	adds	r3, #4
 800a3d0:	4619      	mov	r1, r3
 800a3d2:	4610      	mov	r0, r2
 800a3d4:	f001 f944 	bl	800b660 <TIM_Base_SetConfig>
 800a3d8:	687b      	ldr	r3, [r7, #4]
 800a3da:	2201      	movs	r2, #1
 800a3dc:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800a3e0:	687b      	ldr	r3, [r7, #4]
 800a3e2:	2201      	movs	r2, #1
 800a3e4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a3e8:	687b      	ldr	r3, [r7, #4]
 800a3ea:	2201      	movs	r2, #1
 800a3ec:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a3f0:	687b      	ldr	r3, [r7, #4]
 800a3f2:	2201      	movs	r2, #1
 800a3f4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a3f8:	687b      	ldr	r3, [r7, #4]
 800a3fa:	2201      	movs	r2, #1
 800a3fc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a400:	687b      	ldr	r3, [r7, #4]
 800a402:	2201      	movs	r2, #1
 800a404:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a408:	687b      	ldr	r3, [r7, #4]
 800a40a:	2201      	movs	r2, #1
 800a40c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a410:	687b      	ldr	r3, [r7, #4]
 800a412:	2201      	movs	r2, #1
 800a414:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a418:	687b      	ldr	r3, [r7, #4]
 800a41a:	2201      	movs	r2, #1
 800a41c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a420:	687b      	ldr	r3, [r7, #4]
 800a422:	2201      	movs	r2, #1
 800a424:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a428:	2300      	movs	r3, #0
 800a42a:	4618      	mov	r0, r3
 800a42c:	3708      	adds	r7, #8
 800a42e:	46bd      	mov	sp, r7
 800a430:	bd80      	pop	{r7, pc}
	...

0800a434 <HAL_TIM_Base_Start>:
 800a434:	b480      	push	{r7}
 800a436:	b085      	sub	sp, #20
 800a438:	af00      	add	r7, sp, #0
 800a43a:	6078      	str	r0, [r7, #4]
 800a43c:	687b      	ldr	r3, [r7, #4]
 800a43e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a442:	b2db      	uxtb	r3, r3
 800a444:	2b01      	cmp	r3, #1
 800a446:	d001      	beq.n	800a44c <HAL_TIM_Base_Start+0x18>
 800a448:	2301      	movs	r3, #1
 800a44a:	e046      	b.n	800a4da <HAL_TIM_Base_Start+0xa6>
 800a44c:	687b      	ldr	r3, [r7, #4]
 800a44e:	2202      	movs	r2, #2
 800a450:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a454:	687b      	ldr	r3, [r7, #4]
 800a456:	681b      	ldr	r3, [r3, #0]
 800a458:	4a23      	ldr	r2, [pc, #140]	; (800a4e8 <HAL_TIM_Base_Start+0xb4>)
 800a45a:	4293      	cmp	r3, r2
 800a45c:	d022      	beq.n	800a4a4 <HAL_TIM_Base_Start+0x70>
 800a45e:	687b      	ldr	r3, [r7, #4]
 800a460:	681b      	ldr	r3, [r3, #0]
 800a462:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a466:	d01d      	beq.n	800a4a4 <HAL_TIM_Base_Start+0x70>
 800a468:	687b      	ldr	r3, [r7, #4]
 800a46a:	681b      	ldr	r3, [r3, #0]
 800a46c:	4a1f      	ldr	r2, [pc, #124]	; (800a4ec <HAL_TIM_Base_Start+0xb8>)
 800a46e:	4293      	cmp	r3, r2
 800a470:	d018      	beq.n	800a4a4 <HAL_TIM_Base_Start+0x70>
 800a472:	687b      	ldr	r3, [r7, #4]
 800a474:	681b      	ldr	r3, [r3, #0]
 800a476:	4a1e      	ldr	r2, [pc, #120]	; (800a4f0 <HAL_TIM_Base_Start+0xbc>)
 800a478:	4293      	cmp	r3, r2
 800a47a:	d013      	beq.n	800a4a4 <HAL_TIM_Base_Start+0x70>
 800a47c:	687b      	ldr	r3, [r7, #4]
 800a47e:	681b      	ldr	r3, [r3, #0]
 800a480:	4a1c      	ldr	r2, [pc, #112]	; (800a4f4 <HAL_TIM_Base_Start+0xc0>)
 800a482:	4293      	cmp	r3, r2
 800a484:	d00e      	beq.n	800a4a4 <HAL_TIM_Base_Start+0x70>
 800a486:	687b      	ldr	r3, [r7, #4]
 800a488:	681b      	ldr	r3, [r3, #0]
 800a48a:	4a1b      	ldr	r2, [pc, #108]	; (800a4f8 <HAL_TIM_Base_Start+0xc4>)
 800a48c:	4293      	cmp	r3, r2
 800a48e:	d009      	beq.n	800a4a4 <HAL_TIM_Base_Start+0x70>
 800a490:	687b      	ldr	r3, [r7, #4]
 800a492:	681b      	ldr	r3, [r3, #0]
 800a494:	4a19      	ldr	r2, [pc, #100]	; (800a4fc <HAL_TIM_Base_Start+0xc8>)
 800a496:	4293      	cmp	r3, r2
 800a498:	d004      	beq.n	800a4a4 <HAL_TIM_Base_Start+0x70>
 800a49a:	687b      	ldr	r3, [r7, #4]
 800a49c:	681b      	ldr	r3, [r3, #0]
 800a49e:	4a18      	ldr	r2, [pc, #96]	; (800a500 <HAL_TIM_Base_Start+0xcc>)
 800a4a0:	4293      	cmp	r3, r2
 800a4a2:	d111      	bne.n	800a4c8 <HAL_TIM_Base_Start+0x94>
 800a4a4:	687b      	ldr	r3, [r7, #4]
 800a4a6:	681b      	ldr	r3, [r3, #0]
 800a4a8:	689b      	ldr	r3, [r3, #8]
 800a4aa:	f003 0307 	and.w	r3, r3, #7
 800a4ae:	60fb      	str	r3, [r7, #12]
 800a4b0:	68fb      	ldr	r3, [r7, #12]
 800a4b2:	2b06      	cmp	r3, #6
 800a4b4:	d010      	beq.n	800a4d8 <HAL_TIM_Base_Start+0xa4>
 800a4b6:	687b      	ldr	r3, [r7, #4]
 800a4b8:	681b      	ldr	r3, [r3, #0]
 800a4ba:	681a      	ldr	r2, [r3, #0]
 800a4bc:	687b      	ldr	r3, [r7, #4]
 800a4be:	681b      	ldr	r3, [r3, #0]
 800a4c0:	f042 0201 	orr.w	r2, r2, #1
 800a4c4:	601a      	str	r2, [r3, #0]
 800a4c6:	e007      	b.n	800a4d8 <HAL_TIM_Base_Start+0xa4>
 800a4c8:	687b      	ldr	r3, [r7, #4]
 800a4ca:	681b      	ldr	r3, [r3, #0]
 800a4cc:	681a      	ldr	r2, [r3, #0]
 800a4ce:	687b      	ldr	r3, [r7, #4]
 800a4d0:	681b      	ldr	r3, [r3, #0]
 800a4d2:	f042 0201 	orr.w	r2, r2, #1
 800a4d6:	601a      	str	r2, [r3, #0]
 800a4d8:	2300      	movs	r3, #0
 800a4da:	4618      	mov	r0, r3
 800a4dc:	3714      	adds	r7, #20
 800a4de:	46bd      	mov	sp, r7
 800a4e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4e4:	4770      	bx	lr
 800a4e6:	bf00      	nop
 800a4e8:	40010000 	.word	0x40010000
 800a4ec:	40000400 	.word	0x40000400
 800a4f0:	40000800 	.word	0x40000800
 800a4f4:	40000c00 	.word	0x40000c00
 800a4f8:	40010400 	.word	0x40010400
 800a4fc:	40014000 	.word	0x40014000
 800a500:	40001800 	.word	0x40001800

0800a504 <HAL_TIM_PWM_Init>:
 800a504:	b580      	push	{r7, lr}
 800a506:	b082      	sub	sp, #8
 800a508:	af00      	add	r7, sp, #0
 800a50a:	6078      	str	r0, [r7, #4]
 800a50c:	687b      	ldr	r3, [r7, #4]
 800a50e:	2b00      	cmp	r3, #0
 800a510:	d101      	bne.n	800a516 <HAL_TIM_PWM_Init+0x12>
 800a512:	2301      	movs	r3, #1
 800a514:	e041      	b.n	800a59a <HAL_TIM_PWM_Init+0x96>
 800a516:	687b      	ldr	r3, [r7, #4]
 800a518:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a51c:	b2db      	uxtb	r3, r3
 800a51e:	2b00      	cmp	r3, #0
 800a520:	d106      	bne.n	800a530 <HAL_TIM_PWM_Init+0x2c>
 800a522:	687b      	ldr	r3, [r7, #4]
 800a524:	2200      	movs	r2, #0
 800a526:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a52a:	6878      	ldr	r0, [r7, #4]
 800a52c:	f000 f839 	bl	800a5a2 <HAL_TIM_PWM_MspInit>
 800a530:	687b      	ldr	r3, [r7, #4]
 800a532:	2202      	movs	r2, #2
 800a534:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a538:	687b      	ldr	r3, [r7, #4]
 800a53a:	681a      	ldr	r2, [r3, #0]
 800a53c:	687b      	ldr	r3, [r7, #4]
 800a53e:	3304      	adds	r3, #4
 800a540:	4619      	mov	r1, r3
 800a542:	4610      	mov	r0, r2
 800a544:	f001 f88c 	bl	800b660 <TIM_Base_SetConfig>
 800a548:	687b      	ldr	r3, [r7, #4]
 800a54a:	2201      	movs	r2, #1
 800a54c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800a550:	687b      	ldr	r3, [r7, #4]
 800a552:	2201      	movs	r2, #1
 800a554:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a558:	687b      	ldr	r3, [r7, #4]
 800a55a:	2201      	movs	r2, #1
 800a55c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a560:	687b      	ldr	r3, [r7, #4]
 800a562:	2201      	movs	r2, #1
 800a564:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a568:	687b      	ldr	r3, [r7, #4]
 800a56a:	2201      	movs	r2, #1
 800a56c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a570:	687b      	ldr	r3, [r7, #4]
 800a572:	2201      	movs	r2, #1
 800a574:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a578:	687b      	ldr	r3, [r7, #4]
 800a57a:	2201      	movs	r2, #1
 800a57c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a580:	687b      	ldr	r3, [r7, #4]
 800a582:	2201      	movs	r2, #1
 800a584:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a588:	687b      	ldr	r3, [r7, #4]
 800a58a:	2201      	movs	r2, #1
 800a58c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a590:	687b      	ldr	r3, [r7, #4]
 800a592:	2201      	movs	r2, #1
 800a594:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a598:	2300      	movs	r3, #0
 800a59a:	4618      	mov	r0, r3
 800a59c:	3708      	adds	r7, #8
 800a59e:	46bd      	mov	sp, r7
 800a5a0:	bd80      	pop	{r7, pc}

0800a5a2 <HAL_TIM_PWM_MspInit>:
 800a5a2:	b480      	push	{r7}
 800a5a4:	b083      	sub	sp, #12
 800a5a6:	af00      	add	r7, sp, #0
 800a5a8:	6078      	str	r0, [r7, #4]
 800a5aa:	bf00      	nop
 800a5ac:	370c      	adds	r7, #12
 800a5ae:	46bd      	mov	sp, r7
 800a5b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5b4:	4770      	bx	lr
	...

0800a5b8 <HAL_TIM_PWM_Start>:
 800a5b8:	b580      	push	{r7, lr}
 800a5ba:	b084      	sub	sp, #16
 800a5bc:	af00      	add	r7, sp, #0
 800a5be:	6078      	str	r0, [r7, #4]
 800a5c0:	6039      	str	r1, [r7, #0]
 800a5c2:	683b      	ldr	r3, [r7, #0]
 800a5c4:	2b00      	cmp	r3, #0
 800a5c6:	d109      	bne.n	800a5dc <HAL_TIM_PWM_Start+0x24>
 800a5c8:	687b      	ldr	r3, [r7, #4]
 800a5ca:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a5ce:	b2db      	uxtb	r3, r3
 800a5d0:	2b01      	cmp	r3, #1
 800a5d2:	bf14      	ite	ne
 800a5d4:	2301      	movne	r3, #1
 800a5d6:	2300      	moveq	r3, #0
 800a5d8:	b2db      	uxtb	r3, r3
 800a5da:	e022      	b.n	800a622 <HAL_TIM_PWM_Start+0x6a>
 800a5dc:	683b      	ldr	r3, [r7, #0]
 800a5de:	2b04      	cmp	r3, #4
 800a5e0:	d109      	bne.n	800a5f6 <HAL_TIM_PWM_Start+0x3e>
 800a5e2:	687b      	ldr	r3, [r7, #4]
 800a5e4:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800a5e8:	b2db      	uxtb	r3, r3
 800a5ea:	2b01      	cmp	r3, #1
 800a5ec:	bf14      	ite	ne
 800a5ee:	2301      	movne	r3, #1
 800a5f0:	2300      	moveq	r3, #0
 800a5f2:	b2db      	uxtb	r3, r3
 800a5f4:	e015      	b.n	800a622 <HAL_TIM_PWM_Start+0x6a>
 800a5f6:	683b      	ldr	r3, [r7, #0]
 800a5f8:	2b08      	cmp	r3, #8
 800a5fa:	d109      	bne.n	800a610 <HAL_TIM_PWM_Start+0x58>
 800a5fc:	687b      	ldr	r3, [r7, #4]
 800a5fe:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800a602:	b2db      	uxtb	r3, r3
 800a604:	2b01      	cmp	r3, #1
 800a606:	bf14      	ite	ne
 800a608:	2301      	movne	r3, #1
 800a60a:	2300      	moveq	r3, #0
 800a60c:	b2db      	uxtb	r3, r3
 800a60e:	e008      	b.n	800a622 <HAL_TIM_PWM_Start+0x6a>
 800a610:	687b      	ldr	r3, [r7, #4]
 800a612:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a616:	b2db      	uxtb	r3, r3
 800a618:	2b01      	cmp	r3, #1
 800a61a:	bf14      	ite	ne
 800a61c:	2301      	movne	r3, #1
 800a61e:	2300      	moveq	r3, #0
 800a620:	b2db      	uxtb	r3, r3
 800a622:	2b00      	cmp	r3, #0
 800a624:	d001      	beq.n	800a62a <HAL_TIM_PWM_Start+0x72>
 800a626:	2301      	movs	r3, #1
 800a628:	e07c      	b.n	800a724 <HAL_TIM_PWM_Start+0x16c>
 800a62a:	683b      	ldr	r3, [r7, #0]
 800a62c:	2b00      	cmp	r3, #0
 800a62e:	d104      	bne.n	800a63a <HAL_TIM_PWM_Start+0x82>
 800a630:	687b      	ldr	r3, [r7, #4]
 800a632:	2202      	movs	r2, #2
 800a634:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a638:	e013      	b.n	800a662 <HAL_TIM_PWM_Start+0xaa>
 800a63a:	683b      	ldr	r3, [r7, #0]
 800a63c:	2b04      	cmp	r3, #4
 800a63e:	d104      	bne.n	800a64a <HAL_TIM_PWM_Start+0x92>
 800a640:	687b      	ldr	r3, [r7, #4]
 800a642:	2202      	movs	r2, #2
 800a644:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a648:	e00b      	b.n	800a662 <HAL_TIM_PWM_Start+0xaa>
 800a64a:	683b      	ldr	r3, [r7, #0]
 800a64c:	2b08      	cmp	r3, #8
 800a64e:	d104      	bne.n	800a65a <HAL_TIM_PWM_Start+0xa2>
 800a650:	687b      	ldr	r3, [r7, #4]
 800a652:	2202      	movs	r2, #2
 800a654:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a658:	e003      	b.n	800a662 <HAL_TIM_PWM_Start+0xaa>
 800a65a:	687b      	ldr	r3, [r7, #4]
 800a65c:	2202      	movs	r2, #2
 800a65e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a662:	687b      	ldr	r3, [r7, #4]
 800a664:	681b      	ldr	r3, [r3, #0]
 800a666:	2201      	movs	r2, #1
 800a668:	6839      	ldr	r1, [r7, #0]
 800a66a:	4618      	mov	r0, r3
 800a66c:	f001 fc0c 	bl	800be88 <TIM_CCxChannelCmd>
 800a670:	687b      	ldr	r3, [r7, #4]
 800a672:	681b      	ldr	r3, [r3, #0]
 800a674:	4a2d      	ldr	r2, [pc, #180]	; (800a72c <HAL_TIM_PWM_Start+0x174>)
 800a676:	4293      	cmp	r3, r2
 800a678:	d004      	beq.n	800a684 <HAL_TIM_PWM_Start+0xcc>
 800a67a:	687b      	ldr	r3, [r7, #4]
 800a67c:	681b      	ldr	r3, [r3, #0]
 800a67e:	4a2c      	ldr	r2, [pc, #176]	; (800a730 <HAL_TIM_PWM_Start+0x178>)
 800a680:	4293      	cmp	r3, r2
 800a682:	d101      	bne.n	800a688 <HAL_TIM_PWM_Start+0xd0>
 800a684:	2301      	movs	r3, #1
 800a686:	e000      	b.n	800a68a <HAL_TIM_PWM_Start+0xd2>
 800a688:	2300      	movs	r3, #0
 800a68a:	2b00      	cmp	r3, #0
 800a68c:	d007      	beq.n	800a69e <HAL_TIM_PWM_Start+0xe6>
 800a68e:	687b      	ldr	r3, [r7, #4]
 800a690:	681b      	ldr	r3, [r3, #0]
 800a692:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800a694:	687b      	ldr	r3, [r7, #4]
 800a696:	681b      	ldr	r3, [r3, #0]
 800a698:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800a69c:	645a      	str	r2, [r3, #68]	; 0x44
 800a69e:	687b      	ldr	r3, [r7, #4]
 800a6a0:	681b      	ldr	r3, [r3, #0]
 800a6a2:	4a22      	ldr	r2, [pc, #136]	; (800a72c <HAL_TIM_PWM_Start+0x174>)
 800a6a4:	4293      	cmp	r3, r2
 800a6a6:	d022      	beq.n	800a6ee <HAL_TIM_PWM_Start+0x136>
 800a6a8:	687b      	ldr	r3, [r7, #4]
 800a6aa:	681b      	ldr	r3, [r3, #0]
 800a6ac:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a6b0:	d01d      	beq.n	800a6ee <HAL_TIM_PWM_Start+0x136>
 800a6b2:	687b      	ldr	r3, [r7, #4]
 800a6b4:	681b      	ldr	r3, [r3, #0]
 800a6b6:	4a1f      	ldr	r2, [pc, #124]	; (800a734 <HAL_TIM_PWM_Start+0x17c>)
 800a6b8:	4293      	cmp	r3, r2
 800a6ba:	d018      	beq.n	800a6ee <HAL_TIM_PWM_Start+0x136>
 800a6bc:	687b      	ldr	r3, [r7, #4]
 800a6be:	681b      	ldr	r3, [r3, #0]
 800a6c0:	4a1d      	ldr	r2, [pc, #116]	; (800a738 <HAL_TIM_PWM_Start+0x180>)
 800a6c2:	4293      	cmp	r3, r2
 800a6c4:	d013      	beq.n	800a6ee <HAL_TIM_PWM_Start+0x136>
 800a6c6:	687b      	ldr	r3, [r7, #4]
 800a6c8:	681b      	ldr	r3, [r3, #0]
 800a6ca:	4a1c      	ldr	r2, [pc, #112]	; (800a73c <HAL_TIM_PWM_Start+0x184>)
 800a6cc:	4293      	cmp	r3, r2
 800a6ce:	d00e      	beq.n	800a6ee <HAL_TIM_PWM_Start+0x136>
 800a6d0:	687b      	ldr	r3, [r7, #4]
 800a6d2:	681b      	ldr	r3, [r3, #0]
 800a6d4:	4a16      	ldr	r2, [pc, #88]	; (800a730 <HAL_TIM_PWM_Start+0x178>)
 800a6d6:	4293      	cmp	r3, r2
 800a6d8:	d009      	beq.n	800a6ee <HAL_TIM_PWM_Start+0x136>
 800a6da:	687b      	ldr	r3, [r7, #4]
 800a6dc:	681b      	ldr	r3, [r3, #0]
 800a6de:	4a18      	ldr	r2, [pc, #96]	; (800a740 <HAL_TIM_PWM_Start+0x188>)
 800a6e0:	4293      	cmp	r3, r2
 800a6e2:	d004      	beq.n	800a6ee <HAL_TIM_PWM_Start+0x136>
 800a6e4:	687b      	ldr	r3, [r7, #4]
 800a6e6:	681b      	ldr	r3, [r3, #0]
 800a6e8:	4a16      	ldr	r2, [pc, #88]	; (800a744 <HAL_TIM_PWM_Start+0x18c>)
 800a6ea:	4293      	cmp	r3, r2
 800a6ec:	d111      	bne.n	800a712 <HAL_TIM_PWM_Start+0x15a>
 800a6ee:	687b      	ldr	r3, [r7, #4]
 800a6f0:	681b      	ldr	r3, [r3, #0]
 800a6f2:	689b      	ldr	r3, [r3, #8]
 800a6f4:	f003 0307 	and.w	r3, r3, #7
 800a6f8:	60fb      	str	r3, [r7, #12]
 800a6fa:	68fb      	ldr	r3, [r7, #12]
 800a6fc:	2b06      	cmp	r3, #6
 800a6fe:	d010      	beq.n	800a722 <HAL_TIM_PWM_Start+0x16a>
 800a700:	687b      	ldr	r3, [r7, #4]
 800a702:	681b      	ldr	r3, [r3, #0]
 800a704:	681a      	ldr	r2, [r3, #0]
 800a706:	687b      	ldr	r3, [r7, #4]
 800a708:	681b      	ldr	r3, [r3, #0]
 800a70a:	f042 0201 	orr.w	r2, r2, #1
 800a70e:	601a      	str	r2, [r3, #0]
 800a710:	e007      	b.n	800a722 <HAL_TIM_PWM_Start+0x16a>
 800a712:	687b      	ldr	r3, [r7, #4]
 800a714:	681b      	ldr	r3, [r3, #0]
 800a716:	681a      	ldr	r2, [r3, #0]
 800a718:	687b      	ldr	r3, [r7, #4]
 800a71a:	681b      	ldr	r3, [r3, #0]
 800a71c:	f042 0201 	orr.w	r2, r2, #1
 800a720:	601a      	str	r2, [r3, #0]
 800a722:	2300      	movs	r3, #0
 800a724:	4618      	mov	r0, r3
 800a726:	3710      	adds	r7, #16
 800a728:	46bd      	mov	sp, r7
 800a72a:	bd80      	pop	{r7, pc}
 800a72c:	40010000 	.word	0x40010000
 800a730:	40010400 	.word	0x40010400
 800a734:	40000400 	.word	0x40000400
 800a738:	40000800 	.word	0x40000800
 800a73c:	40000c00 	.word	0x40000c00
 800a740:	40014000 	.word	0x40014000
 800a744:	40001800 	.word	0x40001800

0800a748 <HAL_TIM_IC_Init>:
 800a748:	b580      	push	{r7, lr}
 800a74a:	b082      	sub	sp, #8
 800a74c:	af00      	add	r7, sp, #0
 800a74e:	6078      	str	r0, [r7, #4]
 800a750:	687b      	ldr	r3, [r7, #4]
 800a752:	2b00      	cmp	r3, #0
 800a754:	d101      	bne.n	800a75a <HAL_TIM_IC_Init+0x12>
 800a756:	2301      	movs	r3, #1
 800a758:	e041      	b.n	800a7de <HAL_TIM_IC_Init+0x96>
 800a75a:	687b      	ldr	r3, [r7, #4]
 800a75c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a760:	b2db      	uxtb	r3, r3
 800a762:	2b00      	cmp	r3, #0
 800a764:	d106      	bne.n	800a774 <HAL_TIM_IC_Init+0x2c>
 800a766:	687b      	ldr	r3, [r7, #4]
 800a768:	2200      	movs	r2, #0
 800a76a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a76e:	6878      	ldr	r0, [r7, #4]
 800a770:	f000 f839 	bl	800a7e6 <HAL_TIM_IC_MspInit>
 800a774:	687b      	ldr	r3, [r7, #4]
 800a776:	2202      	movs	r2, #2
 800a778:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a77c:	687b      	ldr	r3, [r7, #4]
 800a77e:	681a      	ldr	r2, [r3, #0]
 800a780:	687b      	ldr	r3, [r7, #4]
 800a782:	3304      	adds	r3, #4
 800a784:	4619      	mov	r1, r3
 800a786:	4610      	mov	r0, r2
 800a788:	f000 ff6a 	bl	800b660 <TIM_Base_SetConfig>
 800a78c:	687b      	ldr	r3, [r7, #4]
 800a78e:	2201      	movs	r2, #1
 800a790:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800a794:	687b      	ldr	r3, [r7, #4]
 800a796:	2201      	movs	r2, #1
 800a798:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a79c:	687b      	ldr	r3, [r7, #4]
 800a79e:	2201      	movs	r2, #1
 800a7a0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a7a4:	687b      	ldr	r3, [r7, #4]
 800a7a6:	2201      	movs	r2, #1
 800a7a8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a7ac:	687b      	ldr	r3, [r7, #4]
 800a7ae:	2201      	movs	r2, #1
 800a7b0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a7b4:	687b      	ldr	r3, [r7, #4]
 800a7b6:	2201      	movs	r2, #1
 800a7b8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a7bc:	687b      	ldr	r3, [r7, #4]
 800a7be:	2201      	movs	r2, #1
 800a7c0:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a7c4:	687b      	ldr	r3, [r7, #4]
 800a7c6:	2201      	movs	r2, #1
 800a7c8:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a7cc:	687b      	ldr	r3, [r7, #4]
 800a7ce:	2201      	movs	r2, #1
 800a7d0:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a7d4:	687b      	ldr	r3, [r7, #4]
 800a7d6:	2201      	movs	r2, #1
 800a7d8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a7dc:	2300      	movs	r3, #0
 800a7de:	4618      	mov	r0, r3
 800a7e0:	3708      	adds	r7, #8
 800a7e2:	46bd      	mov	sp, r7
 800a7e4:	bd80      	pop	{r7, pc}

0800a7e6 <HAL_TIM_IC_MspInit>:
 800a7e6:	b480      	push	{r7}
 800a7e8:	b083      	sub	sp, #12
 800a7ea:	af00      	add	r7, sp, #0
 800a7ec:	6078      	str	r0, [r7, #4]
 800a7ee:	bf00      	nop
 800a7f0:	370c      	adds	r7, #12
 800a7f2:	46bd      	mov	sp, r7
 800a7f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7f8:	4770      	bx	lr
	...

0800a7fc <HAL_TIM_IC_Start_DMA>:
 800a7fc:	b580      	push	{r7, lr}
 800a7fe:	b086      	sub	sp, #24
 800a800:	af00      	add	r7, sp, #0
 800a802:	60f8      	str	r0, [r7, #12]
 800a804:	60b9      	str	r1, [r7, #8]
 800a806:	607a      	str	r2, [r7, #4]
 800a808:	807b      	strh	r3, [r7, #2]
 800a80a:	2300      	movs	r3, #0
 800a80c:	75fb      	strb	r3, [r7, #23]
 800a80e:	68bb      	ldr	r3, [r7, #8]
 800a810:	2b00      	cmp	r3, #0
 800a812:	d104      	bne.n	800a81e <HAL_TIM_IC_Start_DMA+0x22>
 800a814:	68fb      	ldr	r3, [r7, #12]
 800a816:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a81a:	b2db      	uxtb	r3, r3
 800a81c:	e013      	b.n	800a846 <HAL_TIM_IC_Start_DMA+0x4a>
 800a81e:	68bb      	ldr	r3, [r7, #8]
 800a820:	2b04      	cmp	r3, #4
 800a822:	d104      	bne.n	800a82e <HAL_TIM_IC_Start_DMA+0x32>
 800a824:	68fb      	ldr	r3, [r7, #12]
 800a826:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800a82a:	b2db      	uxtb	r3, r3
 800a82c:	e00b      	b.n	800a846 <HAL_TIM_IC_Start_DMA+0x4a>
 800a82e:	68bb      	ldr	r3, [r7, #8]
 800a830:	2b08      	cmp	r3, #8
 800a832:	d104      	bne.n	800a83e <HAL_TIM_IC_Start_DMA+0x42>
 800a834:	68fb      	ldr	r3, [r7, #12]
 800a836:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800a83a:	b2db      	uxtb	r3, r3
 800a83c:	e003      	b.n	800a846 <HAL_TIM_IC_Start_DMA+0x4a>
 800a83e:	68fb      	ldr	r3, [r7, #12]
 800a840:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a844:	b2db      	uxtb	r3, r3
 800a846:	75bb      	strb	r3, [r7, #22]
 800a848:	68bb      	ldr	r3, [r7, #8]
 800a84a:	2b00      	cmp	r3, #0
 800a84c:	d104      	bne.n	800a858 <HAL_TIM_IC_Start_DMA+0x5c>
 800a84e:	68fb      	ldr	r3, [r7, #12]
 800a850:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800a854:	b2db      	uxtb	r3, r3
 800a856:	e013      	b.n	800a880 <HAL_TIM_IC_Start_DMA+0x84>
 800a858:	68bb      	ldr	r3, [r7, #8]
 800a85a:	2b04      	cmp	r3, #4
 800a85c:	d104      	bne.n	800a868 <HAL_TIM_IC_Start_DMA+0x6c>
 800a85e:	68fb      	ldr	r3, [r7, #12]
 800a860:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 800a864:	b2db      	uxtb	r3, r3
 800a866:	e00b      	b.n	800a880 <HAL_TIM_IC_Start_DMA+0x84>
 800a868:	68bb      	ldr	r3, [r7, #8]
 800a86a:	2b08      	cmp	r3, #8
 800a86c:	d104      	bne.n	800a878 <HAL_TIM_IC_Start_DMA+0x7c>
 800a86e:	68fb      	ldr	r3, [r7, #12]
 800a870:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800a874:	b2db      	uxtb	r3, r3
 800a876:	e003      	b.n	800a880 <HAL_TIM_IC_Start_DMA+0x84>
 800a878:	68fb      	ldr	r3, [r7, #12]
 800a87a:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800a87e:	b2db      	uxtb	r3, r3
 800a880:	757b      	strb	r3, [r7, #21]
 800a882:	7dbb      	ldrb	r3, [r7, #22]
 800a884:	2b02      	cmp	r3, #2
 800a886:	d002      	beq.n	800a88e <HAL_TIM_IC_Start_DMA+0x92>
 800a888:	7d7b      	ldrb	r3, [r7, #21]
 800a88a:	2b02      	cmp	r3, #2
 800a88c:	d101      	bne.n	800a892 <HAL_TIM_IC_Start_DMA+0x96>
 800a88e:	2302      	movs	r3, #2
 800a890:	e146      	b.n	800ab20 <HAL_TIM_IC_Start_DMA+0x324>
 800a892:	7dbb      	ldrb	r3, [r7, #22]
 800a894:	2b01      	cmp	r3, #1
 800a896:	d143      	bne.n	800a920 <HAL_TIM_IC_Start_DMA+0x124>
 800a898:	7d7b      	ldrb	r3, [r7, #21]
 800a89a:	2b01      	cmp	r3, #1
 800a89c:	d140      	bne.n	800a920 <HAL_TIM_IC_Start_DMA+0x124>
 800a89e:	687b      	ldr	r3, [r7, #4]
 800a8a0:	2b00      	cmp	r3, #0
 800a8a2:	d104      	bne.n	800a8ae <HAL_TIM_IC_Start_DMA+0xb2>
 800a8a4:	887b      	ldrh	r3, [r7, #2]
 800a8a6:	2b00      	cmp	r3, #0
 800a8a8:	d001      	beq.n	800a8ae <HAL_TIM_IC_Start_DMA+0xb2>
 800a8aa:	2301      	movs	r3, #1
 800a8ac:	e138      	b.n	800ab20 <HAL_TIM_IC_Start_DMA+0x324>
 800a8ae:	68bb      	ldr	r3, [r7, #8]
 800a8b0:	2b00      	cmp	r3, #0
 800a8b2:	d104      	bne.n	800a8be <HAL_TIM_IC_Start_DMA+0xc2>
 800a8b4:	68fb      	ldr	r3, [r7, #12]
 800a8b6:	2202      	movs	r2, #2
 800a8b8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a8bc:	e013      	b.n	800a8e6 <HAL_TIM_IC_Start_DMA+0xea>
 800a8be:	68bb      	ldr	r3, [r7, #8]
 800a8c0:	2b04      	cmp	r3, #4
 800a8c2:	d104      	bne.n	800a8ce <HAL_TIM_IC_Start_DMA+0xd2>
 800a8c4:	68fb      	ldr	r3, [r7, #12]
 800a8c6:	2202      	movs	r2, #2
 800a8c8:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a8cc:	e00b      	b.n	800a8e6 <HAL_TIM_IC_Start_DMA+0xea>
 800a8ce:	68bb      	ldr	r3, [r7, #8]
 800a8d0:	2b08      	cmp	r3, #8
 800a8d2:	d104      	bne.n	800a8de <HAL_TIM_IC_Start_DMA+0xe2>
 800a8d4:	68fb      	ldr	r3, [r7, #12]
 800a8d6:	2202      	movs	r2, #2
 800a8d8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a8dc:	e003      	b.n	800a8e6 <HAL_TIM_IC_Start_DMA+0xea>
 800a8de:	68fb      	ldr	r3, [r7, #12]
 800a8e0:	2202      	movs	r2, #2
 800a8e2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a8e6:	68bb      	ldr	r3, [r7, #8]
 800a8e8:	2b00      	cmp	r3, #0
 800a8ea:	d104      	bne.n	800a8f6 <HAL_TIM_IC_Start_DMA+0xfa>
 800a8ec:	68fb      	ldr	r3, [r7, #12]
 800a8ee:	2202      	movs	r2, #2
 800a8f0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a8f4:	e016      	b.n	800a924 <HAL_TIM_IC_Start_DMA+0x128>
 800a8f6:	68bb      	ldr	r3, [r7, #8]
 800a8f8:	2b04      	cmp	r3, #4
 800a8fa:	d104      	bne.n	800a906 <HAL_TIM_IC_Start_DMA+0x10a>
 800a8fc:	68fb      	ldr	r3, [r7, #12]
 800a8fe:	2202      	movs	r2, #2
 800a900:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a904:	e00e      	b.n	800a924 <HAL_TIM_IC_Start_DMA+0x128>
 800a906:	68bb      	ldr	r3, [r7, #8]
 800a908:	2b08      	cmp	r3, #8
 800a90a:	d104      	bne.n	800a916 <HAL_TIM_IC_Start_DMA+0x11a>
 800a90c:	68fb      	ldr	r3, [r7, #12]
 800a90e:	2202      	movs	r2, #2
 800a910:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a914:	e006      	b.n	800a924 <HAL_TIM_IC_Start_DMA+0x128>
 800a916:	68fb      	ldr	r3, [r7, #12]
 800a918:	2202      	movs	r2, #2
 800a91a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a91e:	e001      	b.n	800a924 <HAL_TIM_IC_Start_DMA+0x128>
 800a920:	2301      	movs	r3, #1
 800a922:	e0fd      	b.n	800ab20 <HAL_TIM_IC_Start_DMA+0x324>
 800a924:	68fb      	ldr	r3, [r7, #12]
 800a926:	681b      	ldr	r3, [r3, #0]
 800a928:	2201      	movs	r2, #1
 800a92a:	68b9      	ldr	r1, [r7, #8]
 800a92c:	4618      	mov	r0, r3
 800a92e:	f001 faab 	bl	800be88 <TIM_CCxChannelCmd>
 800a932:	68bb      	ldr	r3, [r7, #8]
 800a934:	2b0c      	cmp	r3, #12
 800a936:	f200 80ad 	bhi.w	800aa94 <HAL_TIM_IC_Start_DMA+0x298>
 800a93a:	a201      	add	r2, pc, #4	; (adr r2, 800a940 <HAL_TIM_IC_Start_DMA+0x144>)
 800a93c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a940:	0800a975 	.word	0x0800a975
 800a944:	0800aa95 	.word	0x0800aa95
 800a948:	0800aa95 	.word	0x0800aa95
 800a94c:	0800aa95 	.word	0x0800aa95
 800a950:	0800a9bd 	.word	0x0800a9bd
 800a954:	0800aa95 	.word	0x0800aa95
 800a958:	0800aa95 	.word	0x0800aa95
 800a95c:	0800aa95 	.word	0x0800aa95
 800a960:	0800aa05 	.word	0x0800aa05
 800a964:	0800aa95 	.word	0x0800aa95
 800a968:	0800aa95 	.word	0x0800aa95
 800a96c:	0800aa95 	.word	0x0800aa95
 800a970:	0800aa4d 	.word	0x0800aa4d
 800a974:	68fb      	ldr	r3, [r7, #12]
 800a976:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a978:	4a6b      	ldr	r2, [pc, #428]	; (800ab28 <HAL_TIM_IC_Start_DMA+0x32c>)
 800a97a:	63da      	str	r2, [r3, #60]	; 0x3c
 800a97c:	68fb      	ldr	r3, [r7, #12]
 800a97e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a980:	4a6a      	ldr	r2, [pc, #424]	; (800ab2c <HAL_TIM_IC_Start_DMA+0x330>)
 800a982:	641a      	str	r2, [r3, #64]	; 0x40
 800a984:	68fb      	ldr	r3, [r7, #12]
 800a986:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a988:	4a69      	ldr	r2, [pc, #420]	; (800ab30 <HAL_TIM_IC_Start_DMA+0x334>)
 800a98a:	64da      	str	r2, [r3, #76]	; 0x4c
 800a98c:	68fb      	ldr	r3, [r7, #12]
 800a98e:	6a58      	ldr	r0, [r3, #36]	; 0x24
 800a990:	68fb      	ldr	r3, [r7, #12]
 800a992:	681b      	ldr	r3, [r3, #0]
 800a994:	3334      	adds	r3, #52	; 0x34
 800a996:	4619      	mov	r1, r3
 800a998:	687a      	ldr	r2, [r7, #4]
 800a99a:	887b      	ldrh	r3, [r7, #2]
 800a99c:	f7fd ff68 	bl	8008870 <HAL_DMA_Start_IT>
 800a9a0:	4603      	mov	r3, r0
 800a9a2:	2b00      	cmp	r3, #0
 800a9a4:	d001      	beq.n	800a9aa <HAL_TIM_IC_Start_DMA+0x1ae>
 800a9a6:	2301      	movs	r3, #1
 800a9a8:	e0ba      	b.n	800ab20 <HAL_TIM_IC_Start_DMA+0x324>
 800a9aa:	68fb      	ldr	r3, [r7, #12]
 800a9ac:	681b      	ldr	r3, [r3, #0]
 800a9ae:	68da      	ldr	r2, [r3, #12]
 800a9b0:	68fb      	ldr	r3, [r7, #12]
 800a9b2:	681b      	ldr	r3, [r3, #0]
 800a9b4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a9b8:	60da      	str	r2, [r3, #12]
 800a9ba:	e06e      	b.n	800aa9a <HAL_TIM_IC_Start_DMA+0x29e>
 800a9bc:	68fb      	ldr	r3, [r7, #12]
 800a9be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a9c0:	4a59      	ldr	r2, [pc, #356]	; (800ab28 <HAL_TIM_IC_Start_DMA+0x32c>)
 800a9c2:	63da      	str	r2, [r3, #60]	; 0x3c
 800a9c4:	68fb      	ldr	r3, [r7, #12]
 800a9c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a9c8:	4a58      	ldr	r2, [pc, #352]	; (800ab2c <HAL_TIM_IC_Start_DMA+0x330>)
 800a9ca:	641a      	str	r2, [r3, #64]	; 0x40
 800a9cc:	68fb      	ldr	r3, [r7, #12]
 800a9ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a9d0:	4a57      	ldr	r2, [pc, #348]	; (800ab30 <HAL_TIM_IC_Start_DMA+0x334>)
 800a9d2:	64da      	str	r2, [r3, #76]	; 0x4c
 800a9d4:	68fb      	ldr	r3, [r7, #12]
 800a9d6:	6a98      	ldr	r0, [r3, #40]	; 0x28
 800a9d8:	68fb      	ldr	r3, [r7, #12]
 800a9da:	681b      	ldr	r3, [r3, #0]
 800a9dc:	3338      	adds	r3, #56	; 0x38
 800a9de:	4619      	mov	r1, r3
 800a9e0:	687a      	ldr	r2, [r7, #4]
 800a9e2:	887b      	ldrh	r3, [r7, #2]
 800a9e4:	f7fd ff44 	bl	8008870 <HAL_DMA_Start_IT>
 800a9e8:	4603      	mov	r3, r0
 800a9ea:	2b00      	cmp	r3, #0
 800a9ec:	d001      	beq.n	800a9f2 <HAL_TIM_IC_Start_DMA+0x1f6>
 800a9ee:	2301      	movs	r3, #1
 800a9f0:	e096      	b.n	800ab20 <HAL_TIM_IC_Start_DMA+0x324>
 800a9f2:	68fb      	ldr	r3, [r7, #12]
 800a9f4:	681b      	ldr	r3, [r3, #0]
 800a9f6:	68da      	ldr	r2, [r3, #12]
 800a9f8:	68fb      	ldr	r3, [r7, #12]
 800a9fa:	681b      	ldr	r3, [r3, #0]
 800a9fc:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800aa00:	60da      	str	r2, [r3, #12]
 800aa02:	e04a      	b.n	800aa9a <HAL_TIM_IC_Start_DMA+0x29e>
 800aa04:	68fb      	ldr	r3, [r7, #12]
 800aa06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aa08:	4a47      	ldr	r2, [pc, #284]	; (800ab28 <HAL_TIM_IC_Start_DMA+0x32c>)
 800aa0a:	63da      	str	r2, [r3, #60]	; 0x3c
 800aa0c:	68fb      	ldr	r3, [r7, #12]
 800aa0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aa10:	4a46      	ldr	r2, [pc, #280]	; (800ab2c <HAL_TIM_IC_Start_DMA+0x330>)
 800aa12:	641a      	str	r2, [r3, #64]	; 0x40
 800aa14:	68fb      	ldr	r3, [r7, #12]
 800aa16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aa18:	4a45      	ldr	r2, [pc, #276]	; (800ab30 <HAL_TIM_IC_Start_DMA+0x334>)
 800aa1a:	64da      	str	r2, [r3, #76]	; 0x4c
 800aa1c:	68fb      	ldr	r3, [r7, #12]
 800aa1e:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 800aa20:	68fb      	ldr	r3, [r7, #12]
 800aa22:	681b      	ldr	r3, [r3, #0]
 800aa24:	333c      	adds	r3, #60	; 0x3c
 800aa26:	4619      	mov	r1, r3
 800aa28:	687a      	ldr	r2, [r7, #4]
 800aa2a:	887b      	ldrh	r3, [r7, #2]
 800aa2c:	f7fd ff20 	bl	8008870 <HAL_DMA_Start_IT>
 800aa30:	4603      	mov	r3, r0
 800aa32:	2b00      	cmp	r3, #0
 800aa34:	d001      	beq.n	800aa3a <HAL_TIM_IC_Start_DMA+0x23e>
 800aa36:	2301      	movs	r3, #1
 800aa38:	e072      	b.n	800ab20 <HAL_TIM_IC_Start_DMA+0x324>
 800aa3a:	68fb      	ldr	r3, [r7, #12]
 800aa3c:	681b      	ldr	r3, [r3, #0]
 800aa3e:	68da      	ldr	r2, [r3, #12]
 800aa40:	68fb      	ldr	r3, [r7, #12]
 800aa42:	681b      	ldr	r3, [r3, #0]
 800aa44:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800aa48:	60da      	str	r2, [r3, #12]
 800aa4a:	e026      	b.n	800aa9a <HAL_TIM_IC_Start_DMA+0x29e>
 800aa4c:	68fb      	ldr	r3, [r7, #12]
 800aa4e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800aa50:	4a35      	ldr	r2, [pc, #212]	; (800ab28 <HAL_TIM_IC_Start_DMA+0x32c>)
 800aa52:	63da      	str	r2, [r3, #60]	; 0x3c
 800aa54:	68fb      	ldr	r3, [r7, #12]
 800aa56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800aa58:	4a34      	ldr	r2, [pc, #208]	; (800ab2c <HAL_TIM_IC_Start_DMA+0x330>)
 800aa5a:	641a      	str	r2, [r3, #64]	; 0x40
 800aa5c:	68fb      	ldr	r3, [r7, #12]
 800aa5e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800aa60:	4a33      	ldr	r2, [pc, #204]	; (800ab30 <HAL_TIM_IC_Start_DMA+0x334>)
 800aa62:	64da      	str	r2, [r3, #76]	; 0x4c
 800aa64:	68fb      	ldr	r3, [r7, #12]
 800aa66:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800aa68:	68fb      	ldr	r3, [r7, #12]
 800aa6a:	681b      	ldr	r3, [r3, #0]
 800aa6c:	3340      	adds	r3, #64	; 0x40
 800aa6e:	4619      	mov	r1, r3
 800aa70:	687a      	ldr	r2, [r7, #4]
 800aa72:	887b      	ldrh	r3, [r7, #2]
 800aa74:	f7fd fefc 	bl	8008870 <HAL_DMA_Start_IT>
 800aa78:	4603      	mov	r3, r0
 800aa7a:	2b00      	cmp	r3, #0
 800aa7c:	d001      	beq.n	800aa82 <HAL_TIM_IC_Start_DMA+0x286>
 800aa7e:	2301      	movs	r3, #1
 800aa80:	e04e      	b.n	800ab20 <HAL_TIM_IC_Start_DMA+0x324>
 800aa82:	68fb      	ldr	r3, [r7, #12]
 800aa84:	681b      	ldr	r3, [r3, #0]
 800aa86:	68da      	ldr	r2, [r3, #12]
 800aa88:	68fb      	ldr	r3, [r7, #12]
 800aa8a:	681b      	ldr	r3, [r3, #0]
 800aa8c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800aa90:	60da      	str	r2, [r3, #12]
 800aa92:	e002      	b.n	800aa9a <HAL_TIM_IC_Start_DMA+0x29e>
 800aa94:	2301      	movs	r3, #1
 800aa96:	75fb      	strb	r3, [r7, #23]
 800aa98:	bf00      	nop
 800aa9a:	68fb      	ldr	r3, [r7, #12]
 800aa9c:	681b      	ldr	r3, [r3, #0]
 800aa9e:	4a25      	ldr	r2, [pc, #148]	; (800ab34 <HAL_TIM_IC_Start_DMA+0x338>)
 800aaa0:	4293      	cmp	r3, r2
 800aaa2:	d022      	beq.n	800aaea <HAL_TIM_IC_Start_DMA+0x2ee>
 800aaa4:	68fb      	ldr	r3, [r7, #12]
 800aaa6:	681b      	ldr	r3, [r3, #0]
 800aaa8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800aaac:	d01d      	beq.n	800aaea <HAL_TIM_IC_Start_DMA+0x2ee>
 800aaae:	68fb      	ldr	r3, [r7, #12]
 800aab0:	681b      	ldr	r3, [r3, #0]
 800aab2:	4a21      	ldr	r2, [pc, #132]	; (800ab38 <HAL_TIM_IC_Start_DMA+0x33c>)
 800aab4:	4293      	cmp	r3, r2
 800aab6:	d018      	beq.n	800aaea <HAL_TIM_IC_Start_DMA+0x2ee>
 800aab8:	68fb      	ldr	r3, [r7, #12]
 800aaba:	681b      	ldr	r3, [r3, #0]
 800aabc:	4a1f      	ldr	r2, [pc, #124]	; (800ab3c <HAL_TIM_IC_Start_DMA+0x340>)
 800aabe:	4293      	cmp	r3, r2
 800aac0:	d013      	beq.n	800aaea <HAL_TIM_IC_Start_DMA+0x2ee>
 800aac2:	68fb      	ldr	r3, [r7, #12]
 800aac4:	681b      	ldr	r3, [r3, #0]
 800aac6:	4a1e      	ldr	r2, [pc, #120]	; (800ab40 <HAL_TIM_IC_Start_DMA+0x344>)
 800aac8:	4293      	cmp	r3, r2
 800aaca:	d00e      	beq.n	800aaea <HAL_TIM_IC_Start_DMA+0x2ee>
 800aacc:	68fb      	ldr	r3, [r7, #12]
 800aace:	681b      	ldr	r3, [r3, #0]
 800aad0:	4a1c      	ldr	r2, [pc, #112]	; (800ab44 <HAL_TIM_IC_Start_DMA+0x348>)
 800aad2:	4293      	cmp	r3, r2
 800aad4:	d009      	beq.n	800aaea <HAL_TIM_IC_Start_DMA+0x2ee>
 800aad6:	68fb      	ldr	r3, [r7, #12]
 800aad8:	681b      	ldr	r3, [r3, #0]
 800aada:	4a1b      	ldr	r2, [pc, #108]	; (800ab48 <HAL_TIM_IC_Start_DMA+0x34c>)
 800aadc:	4293      	cmp	r3, r2
 800aade:	d004      	beq.n	800aaea <HAL_TIM_IC_Start_DMA+0x2ee>
 800aae0:	68fb      	ldr	r3, [r7, #12]
 800aae2:	681b      	ldr	r3, [r3, #0]
 800aae4:	4a19      	ldr	r2, [pc, #100]	; (800ab4c <HAL_TIM_IC_Start_DMA+0x350>)
 800aae6:	4293      	cmp	r3, r2
 800aae8:	d111      	bne.n	800ab0e <HAL_TIM_IC_Start_DMA+0x312>
 800aaea:	68fb      	ldr	r3, [r7, #12]
 800aaec:	681b      	ldr	r3, [r3, #0]
 800aaee:	689b      	ldr	r3, [r3, #8]
 800aaf0:	f003 0307 	and.w	r3, r3, #7
 800aaf4:	613b      	str	r3, [r7, #16]
 800aaf6:	693b      	ldr	r3, [r7, #16]
 800aaf8:	2b06      	cmp	r3, #6
 800aafa:	d010      	beq.n	800ab1e <HAL_TIM_IC_Start_DMA+0x322>
 800aafc:	68fb      	ldr	r3, [r7, #12]
 800aafe:	681b      	ldr	r3, [r3, #0]
 800ab00:	681a      	ldr	r2, [r3, #0]
 800ab02:	68fb      	ldr	r3, [r7, #12]
 800ab04:	681b      	ldr	r3, [r3, #0]
 800ab06:	f042 0201 	orr.w	r2, r2, #1
 800ab0a:	601a      	str	r2, [r3, #0]
 800ab0c:	e007      	b.n	800ab1e <HAL_TIM_IC_Start_DMA+0x322>
 800ab0e:	68fb      	ldr	r3, [r7, #12]
 800ab10:	681b      	ldr	r3, [r3, #0]
 800ab12:	681a      	ldr	r2, [r3, #0]
 800ab14:	68fb      	ldr	r3, [r7, #12]
 800ab16:	681b      	ldr	r3, [r3, #0]
 800ab18:	f042 0201 	orr.w	r2, r2, #1
 800ab1c:	601a      	str	r2, [r3, #0]
 800ab1e:	7dfb      	ldrb	r3, [r7, #23]
 800ab20:	4618      	mov	r0, r3
 800ab22:	3718      	adds	r7, #24
 800ab24:	46bd      	mov	sp, r7
 800ab26:	bd80      	pop	{r7, pc}
 800ab28:	0800b531 	.word	0x0800b531
 800ab2c:	0800b5f9 	.word	0x0800b5f9
 800ab30:	0800b49f 	.word	0x0800b49f
 800ab34:	40010000 	.word	0x40010000
 800ab38:	40000400 	.word	0x40000400
 800ab3c:	40000800 	.word	0x40000800
 800ab40:	40000c00 	.word	0x40000c00
 800ab44:	40010400 	.word	0x40010400
 800ab48:	40014000 	.word	0x40014000
 800ab4c:	40001800 	.word	0x40001800

0800ab50 <HAL_TIM_Encoder_Init>:
 800ab50:	b580      	push	{r7, lr}
 800ab52:	b086      	sub	sp, #24
 800ab54:	af00      	add	r7, sp, #0
 800ab56:	6078      	str	r0, [r7, #4]
 800ab58:	6039      	str	r1, [r7, #0]
 800ab5a:	687b      	ldr	r3, [r7, #4]
 800ab5c:	2b00      	cmp	r3, #0
 800ab5e:	d101      	bne.n	800ab64 <HAL_TIM_Encoder_Init+0x14>
 800ab60:	2301      	movs	r3, #1
 800ab62:	e097      	b.n	800ac94 <HAL_TIM_Encoder_Init+0x144>
 800ab64:	687b      	ldr	r3, [r7, #4]
 800ab66:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800ab6a:	b2db      	uxtb	r3, r3
 800ab6c:	2b00      	cmp	r3, #0
 800ab6e:	d106      	bne.n	800ab7e <HAL_TIM_Encoder_Init+0x2e>
 800ab70:	687b      	ldr	r3, [r7, #4]
 800ab72:	2200      	movs	r2, #0
 800ab74:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ab78:	6878      	ldr	r0, [r7, #4]
 800ab7a:	f7fc fb0d 	bl	8007198 <HAL_TIM_Encoder_MspInit>
 800ab7e:	687b      	ldr	r3, [r7, #4]
 800ab80:	2202      	movs	r2, #2
 800ab82:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800ab86:	687b      	ldr	r3, [r7, #4]
 800ab88:	681b      	ldr	r3, [r3, #0]
 800ab8a:	689b      	ldr	r3, [r3, #8]
 800ab8c:	687a      	ldr	r2, [r7, #4]
 800ab8e:	6812      	ldr	r2, [r2, #0]
 800ab90:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800ab94:	f023 0307 	bic.w	r3, r3, #7
 800ab98:	6093      	str	r3, [r2, #8]
 800ab9a:	687b      	ldr	r3, [r7, #4]
 800ab9c:	681a      	ldr	r2, [r3, #0]
 800ab9e:	687b      	ldr	r3, [r7, #4]
 800aba0:	3304      	adds	r3, #4
 800aba2:	4619      	mov	r1, r3
 800aba4:	4610      	mov	r0, r2
 800aba6:	f000 fd5b 	bl	800b660 <TIM_Base_SetConfig>
 800abaa:	687b      	ldr	r3, [r7, #4]
 800abac:	681b      	ldr	r3, [r3, #0]
 800abae:	689b      	ldr	r3, [r3, #8]
 800abb0:	617b      	str	r3, [r7, #20]
 800abb2:	687b      	ldr	r3, [r7, #4]
 800abb4:	681b      	ldr	r3, [r3, #0]
 800abb6:	699b      	ldr	r3, [r3, #24]
 800abb8:	613b      	str	r3, [r7, #16]
 800abba:	687b      	ldr	r3, [r7, #4]
 800abbc:	681b      	ldr	r3, [r3, #0]
 800abbe:	6a1b      	ldr	r3, [r3, #32]
 800abc0:	60fb      	str	r3, [r7, #12]
 800abc2:	683b      	ldr	r3, [r7, #0]
 800abc4:	681b      	ldr	r3, [r3, #0]
 800abc6:	697a      	ldr	r2, [r7, #20]
 800abc8:	4313      	orrs	r3, r2
 800abca:	617b      	str	r3, [r7, #20]
 800abcc:	693b      	ldr	r3, [r7, #16]
 800abce:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800abd2:	f023 0303 	bic.w	r3, r3, #3
 800abd6:	613b      	str	r3, [r7, #16]
 800abd8:	683b      	ldr	r3, [r7, #0]
 800abda:	689a      	ldr	r2, [r3, #8]
 800abdc:	683b      	ldr	r3, [r7, #0]
 800abde:	699b      	ldr	r3, [r3, #24]
 800abe0:	021b      	lsls	r3, r3, #8
 800abe2:	4313      	orrs	r3, r2
 800abe4:	693a      	ldr	r2, [r7, #16]
 800abe6:	4313      	orrs	r3, r2
 800abe8:	613b      	str	r3, [r7, #16]
 800abea:	693b      	ldr	r3, [r7, #16]
 800abec:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 800abf0:	f023 030c 	bic.w	r3, r3, #12
 800abf4:	613b      	str	r3, [r7, #16]
 800abf6:	693b      	ldr	r3, [r7, #16]
 800abf8:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800abfc:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800ac00:	613b      	str	r3, [r7, #16]
 800ac02:	683b      	ldr	r3, [r7, #0]
 800ac04:	68da      	ldr	r2, [r3, #12]
 800ac06:	683b      	ldr	r3, [r7, #0]
 800ac08:	69db      	ldr	r3, [r3, #28]
 800ac0a:	021b      	lsls	r3, r3, #8
 800ac0c:	4313      	orrs	r3, r2
 800ac0e:	693a      	ldr	r2, [r7, #16]
 800ac10:	4313      	orrs	r3, r2
 800ac12:	613b      	str	r3, [r7, #16]
 800ac14:	683b      	ldr	r3, [r7, #0]
 800ac16:	691b      	ldr	r3, [r3, #16]
 800ac18:	011a      	lsls	r2, r3, #4
 800ac1a:	683b      	ldr	r3, [r7, #0]
 800ac1c:	6a1b      	ldr	r3, [r3, #32]
 800ac1e:	031b      	lsls	r3, r3, #12
 800ac20:	4313      	orrs	r3, r2
 800ac22:	693a      	ldr	r2, [r7, #16]
 800ac24:	4313      	orrs	r3, r2
 800ac26:	613b      	str	r3, [r7, #16]
 800ac28:	68fb      	ldr	r3, [r7, #12]
 800ac2a:	f023 0322 	bic.w	r3, r3, #34	; 0x22
 800ac2e:	60fb      	str	r3, [r7, #12]
 800ac30:	68fb      	ldr	r3, [r7, #12]
 800ac32:	f023 0388 	bic.w	r3, r3, #136	; 0x88
 800ac36:	60fb      	str	r3, [r7, #12]
 800ac38:	683b      	ldr	r3, [r7, #0]
 800ac3a:	685a      	ldr	r2, [r3, #4]
 800ac3c:	683b      	ldr	r3, [r7, #0]
 800ac3e:	695b      	ldr	r3, [r3, #20]
 800ac40:	011b      	lsls	r3, r3, #4
 800ac42:	4313      	orrs	r3, r2
 800ac44:	68fa      	ldr	r2, [r7, #12]
 800ac46:	4313      	orrs	r3, r2
 800ac48:	60fb      	str	r3, [r7, #12]
 800ac4a:	687b      	ldr	r3, [r7, #4]
 800ac4c:	681b      	ldr	r3, [r3, #0]
 800ac4e:	697a      	ldr	r2, [r7, #20]
 800ac50:	609a      	str	r2, [r3, #8]
 800ac52:	687b      	ldr	r3, [r7, #4]
 800ac54:	681b      	ldr	r3, [r3, #0]
 800ac56:	693a      	ldr	r2, [r7, #16]
 800ac58:	619a      	str	r2, [r3, #24]
 800ac5a:	687b      	ldr	r3, [r7, #4]
 800ac5c:	681b      	ldr	r3, [r3, #0]
 800ac5e:	68fa      	ldr	r2, [r7, #12]
 800ac60:	621a      	str	r2, [r3, #32]
 800ac62:	687b      	ldr	r3, [r7, #4]
 800ac64:	2201      	movs	r2, #1
 800ac66:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800ac6a:	687b      	ldr	r3, [r7, #4]
 800ac6c:	2201      	movs	r2, #1
 800ac6e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800ac72:	687b      	ldr	r3, [r7, #4]
 800ac74:	2201      	movs	r2, #1
 800ac76:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800ac7a:	687b      	ldr	r3, [r7, #4]
 800ac7c:	2201      	movs	r2, #1
 800ac7e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800ac82:	687b      	ldr	r3, [r7, #4]
 800ac84:	2201      	movs	r2, #1
 800ac86:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800ac8a:	687b      	ldr	r3, [r7, #4]
 800ac8c:	2201      	movs	r2, #1
 800ac8e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800ac92:	2300      	movs	r3, #0
 800ac94:	4618      	mov	r0, r3
 800ac96:	3718      	adds	r7, #24
 800ac98:	46bd      	mov	sp, r7
 800ac9a:	bd80      	pop	{r7, pc}

0800ac9c <HAL_TIM_Encoder_Start>:
 800ac9c:	b580      	push	{r7, lr}
 800ac9e:	b084      	sub	sp, #16
 800aca0:	af00      	add	r7, sp, #0
 800aca2:	6078      	str	r0, [r7, #4]
 800aca4:	6039      	str	r1, [r7, #0]
 800aca6:	687b      	ldr	r3, [r7, #4]
 800aca8:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800acac:	73fb      	strb	r3, [r7, #15]
 800acae:	687b      	ldr	r3, [r7, #4]
 800acb0:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800acb4:	73bb      	strb	r3, [r7, #14]
 800acb6:	687b      	ldr	r3, [r7, #4]
 800acb8:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800acbc:	737b      	strb	r3, [r7, #13]
 800acbe:	687b      	ldr	r3, [r7, #4]
 800acc0:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 800acc4:	733b      	strb	r3, [r7, #12]
 800acc6:	683b      	ldr	r3, [r7, #0]
 800acc8:	2b00      	cmp	r3, #0
 800acca:	d110      	bne.n	800acee <HAL_TIM_Encoder_Start+0x52>
 800accc:	7bfb      	ldrb	r3, [r7, #15]
 800acce:	2b01      	cmp	r3, #1
 800acd0:	d102      	bne.n	800acd8 <HAL_TIM_Encoder_Start+0x3c>
 800acd2:	7b7b      	ldrb	r3, [r7, #13]
 800acd4:	2b01      	cmp	r3, #1
 800acd6:	d001      	beq.n	800acdc <HAL_TIM_Encoder_Start+0x40>
 800acd8:	2301      	movs	r3, #1
 800acda:	e069      	b.n	800adb0 <HAL_TIM_Encoder_Start+0x114>
 800acdc:	687b      	ldr	r3, [r7, #4]
 800acde:	2202      	movs	r2, #2
 800ace0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800ace4:	687b      	ldr	r3, [r7, #4]
 800ace6:	2202      	movs	r2, #2
 800ace8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800acec:	e031      	b.n	800ad52 <HAL_TIM_Encoder_Start+0xb6>
 800acee:	683b      	ldr	r3, [r7, #0]
 800acf0:	2b04      	cmp	r3, #4
 800acf2:	d110      	bne.n	800ad16 <HAL_TIM_Encoder_Start+0x7a>
 800acf4:	7bbb      	ldrb	r3, [r7, #14]
 800acf6:	2b01      	cmp	r3, #1
 800acf8:	d102      	bne.n	800ad00 <HAL_TIM_Encoder_Start+0x64>
 800acfa:	7b3b      	ldrb	r3, [r7, #12]
 800acfc:	2b01      	cmp	r3, #1
 800acfe:	d001      	beq.n	800ad04 <HAL_TIM_Encoder_Start+0x68>
 800ad00:	2301      	movs	r3, #1
 800ad02:	e055      	b.n	800adb0 <HAL_TIM_Encoder_Start+0x114>
 800ad04:	687b      	ldr	r3, [r7, #4]
 800ad06:	2202      	movs	r2, #2
 800ad08:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800ad0c:	687b      	ldr	r3, [r7, #4]
 800ad0e:	2202      	movs	r2, #2
 800ad10:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800ad14:	e01d      	b.n	800ad52 <HAL_TIM_Encoder_Start+0xb6>
 800ad16:	7bfb      	ldrb	r3, [r7, #15]
 800ad18:	2b01      	cmp	r3, #1
 800ad1a:	d108      	bne.n	800ad2e <HAL_TIM_Encoder_Start+0x92>
 800ad1c:	7bbb      	ldrb	r3, [r7, #14]
 800ad1e:	2b01      	cmp	r3, #1
 800ad20:	d105      	bne.n	800ad2e <HAL_TIM_Encoder_Start+0x92>
 800ad22:	7b7b      	ldrb	r3, [r7, #13]
 800ad24:	2b01      	cmp	r3, #1
 800ad26:	d102      	bne.n	800ad2e <HAL_TIM_Encoder_Start+0x92>
 800ad28:	7b3b      	ldrb	r3, [r7, #12]
 800ad2a:	2b01      	cmp	r3, #1
 800ad2c:	d001      	beq.n	800ad32 <HAL_TIM_Encoder_Start+0x96>
 800ad2e:	2301      	movs	r3, #1
 800ad30:	e03e      	b.n	800adb0 <HAL_TIM_Encoder_Start+0x114>
 800ad32:	687b      	ldr	r3, [r7, #4]
 800ad34:	2202      	movs	r2, #2
 800ad36:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800ad3a:	687b      	ldr	r3, [r7, #4]
 800ad3c:	2202      	movs	r2, #2
 800ad3e:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800ad42:	687b      	ldr	r3, [r7, #4]
 800ad44:	2202      	movs	r2, #2
 800ad46:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800ad4a:	687b      	ldr	r3, [r7, #4]
 800ad4c:	2202      	movs	r2, #2
 800ad4e:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800ad52:	683b      	ldr	r3, [r7, #0]
 800ad54:	2b00      	cmp	r3, #0
 800ad56:	d003      	beq.n	800ad60 <HAL_TIM_Encoder_Start+0xc4>
 800ad58:	683b      	ldr	r3, [r7, #0]
 800ad5a:	2b04      	cmp	r3, #4
 800ad5c:	d008      	beq.n	800ad70 <HAL_TIM_Encoder_Start+0xd4>
 800ad5e:	e00f      	b.n	800ad80 <HAL_TIM_Encoder_Start+0xe4>
 800ad60:	687b      	ldr	r3, [r7, #4]
 800ad62:	681b      	ldr	r3, [r3, #0]
 800ad64:	2201      	movs	r2, #1
 800ad66:	2100      	movs	r1, #0
 800ad68:	4618      	mov	r0, r3
 800ad6a:	f001 f88d 	bl	800be88 <TIM_CCxChannelCmd>
 800ad6e:	e016      	b.n	800ad9e <HAL_TIM_Encoder_Start+0x102>
 800ad70:	687b      	ldr	r3, [r7, #4]
 800ad72:	681b      	ldr	r3, [r3, #0]
 800ad74:	2201      	movs	r2, #1
 800ad76:	2104      	movs	r1, #4
 800ad78:	4618      	mov	r0, r3
 800ad7a:	f001 f885 	bl	800be88 <TIM_CCxChannelCmd>
 800ad7e:	e00e      	b.n	800ad9e <HAL_TIM_Encoder_Start+0x102>
 800ad80:	687b      	ldr	r3, [r7, #4]
 800ad82:	681b      	ldr	r3, [r3, #0]
 800ad84:	2201      	movs	r2, #1
 800ad86:	2100      	movs	r1, #0
 800ad88:	4618      	mov	r0, r3
 800ad8a:	f001 f87d 	bl	800be88 <TIM_CCxChannelCmd>
 800ad8e:	687b      	ldr	r3, [r7, #4]
 800ad90:	681b      	ldr	r3, [r3, #0]
 800ad92:	2201      	movs	r2, #1
 800ad94:	2104      	movs	r1, #4
 800ad96:	4618      	mov	r0, r3
 800ad98:	f001 f876 	bl	800be88 <TIM_CCxChannelCmd>
 800ad9c:	bf00      	nop
 800ad9e:	687b      	ldr	r3, [r7, #4]
 800ada0:	681b      	ldr	r3, [r3, #0]
 800ada2:	681a      	ldr	r2, [r3, #0]
 800ada4:	687b      	ldr	r3, [r7, #4]
 800ada6:	681b      	ldr	r3, [r3, #0]
 800ada8:	f042 0201 	orr.w	r2, r2, #1
 800adac:	601a      	str	r2, [r3, #0]
 800adae:	2300      	movs	r3, #0
 800adb0:	4618      	mov	r0, r3
 800adb2:	3710      	adds	r7, #16
 800adb4:	46bd      	mov	sp, r7
 800adb6:	bd80      	pop	{r7, pc}

0800adb8 <HAL_TIM_IRQHandler>:
 800adb8:	b580      	push	{r7, lr}
 800adba:	b082      	sub	sp, #8
 800adbc:	af00      	add	r7, sp, #0
 800adbe:	6078      	str	r0, [r7, #4]
 800adc0:	687b      	ldr	r3, [r7, #4]
 800adc2:	681b      	ldr	r3, [r3, #0]
 800adc4:	691b      	ldr	r3, [r3, #16]
 800adc6:	f003 0302 	and.w	r3, r3, #2
 800adca:	2b02      	cmp	r3, #2
 800adcc:	d122      	bne.n	800ae14 <HAL_TIM_IRQHandler+0x5c>
 800adce:	687b      	ldr	r3, [r7, #4]
 800add0:	681b      	ldr	r3, [r3, #0]
 800add2:	68db      	ldr	r3, [r3, #12]
 800add4:	f003 0302 	and.w	r3, r3, #2
 800add8:	2b02      	cmp	r3, #2
 800adda:	d11b      	bne.n	800ae14 <HAL_TIM_IRQHandler+0x5c>
 800addc:	687b      	ldr	r3, [r7, #4]
 800adde:	681b      	ldr	r3, [r3, #0]
 800ade0:	f06f 0202 	mvn.w	r2, #2
 800ade4:	611a      	str	r2, [r3, #16]
 800ade6:	687b      	ldr	r3, [r7, #4]
 800ade8:	2201      	movs	r2, #1
 800adea:	771a      	strb	r2, [r3, #28]
 800adec:	687b      	ldr	r3, [r7, #4]
 800adee:	681b      	ldr	r3, [r3, #0]
 800adf0:	699b      	ldr	r3, [r3, #24]
 800adf2:	f003 0303 	and.w	r3, r3, #3
 800adf6:	2b00      	cmp	r3, #0
 800adf8:	d003      	beq.n	800ae02 <HAL_TIM_IRQHandler+0x4a>
 800adfa:	6878      	ldr	r0, [r7, #4]
 800adfc:	f000 fb1d 	bl	800b43a <HAL_TIM_IC_CaptureCallback>
 800ae00:	e005      	b.n	800ae0e <HAL_TIM_IRQHandler+0x56>
 800ae02:	6878      	ldr	r0, [r7, #4]
 800ae04:	f000 fb0f 	bl	800b426 <HAL_TIM_OC_DelayElapsedCallback>
 800ae08:	6878      	ldr	r0, [r7, #4]
 800ae0a:	f000 fb2a 	bl	800b462 <HAL_TIM_PWM_PulseFinishedCallback>
 800ae0e:	687b      	ldr	r3, [r7, #4]
 800ae10:	2200      	movs	r2, #0
 800ae12:	771a      	strb	r2, [r3, #28]
 800ae14:	687b      	ldr	r3, [r7, #4]
 800ae16:	681b      	ldr	r3, [r3, #0]
 800ae18:	691b      	ldr	r3, [r3, #16]
 800ae1a:	f003 0304 	and.w	r3, r3, #4
 800ae1e:	2b04      	cmp	r3, #4
 800ae20:	d122      	bne.n	800ae68 <HAL_TIM_IRQHandler+0xb0>
 800ae22:	687b      	ldr	r3, [r7, #4]
 800ae24:	681b      	ldr	r3, [r3, #0]
 800ae26:	68db      	ldr	r3, [r3, #12]
 800ae28:	f003 0304 	and.w	r3, r3, #4
 800ae2c:	2b04      	cmp	r3, #4
 800ae2e:	d11b      	bne.n	800ae68 <HAL_TIM_IRQHandler+0xb0>
 800ae30:	687b      	ldr	r3, [r7, #4]
 800ae32:	681b      	ldr	r3, [r3, #0]
 800ae34:	f06f 0204 	mvn.w	r2, #4
 800ae38:	611a      	str	r2, [r3, #16]
 800ae3a:	687b      	ldr	r3, [r7, #4]
 800ae3c:	2202      	movs	r2, #2
 800ae3e:	771a      	strb	r2, [r3, #28]
 800ae40:	687b      	ldr	r3, [r7, #4]
 800ae42:	681b      	ldr	r3, [r3, #0]
 800ae44:	699b      	ldr	r3, [r3, #24]
 800ae46:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800ae4a:	2b00      	cmp	r3, #0
 800ae4c:	d003      	beq.n	800ae56 <HAL_TIM_IRQHandler+0x9e>
 800ae4e:	6878      	ldr	r0, [r7, #4]
 800ae50:	f000 faf3 	bl	800b43a <HAL_TIM_IC_CaptureCallback>
 800ae54:	e005      	b.n	800ae62 <HAL_TIM_IRQHandler+0xaa>
 800ae56:	6878      	ldr	r0, [r7, #4]
 800ae58:	f000 fae5 	bl	800b426 <HAL_TIM_OC_DelayElapsedCallback>
 800ae5c:	6878      	ldr	r0, [r7, #4]
 800ae5e:	f000 fb00 	bl	800b462 <HAL_TIM_PWM_PulseFinishedCallback>
 800ae62:	687b      	ldr	r3, [r7, #4]
 800ae64:	2200      	movs	r2, #0
 800ae66:	771a      	strb	r2, [r3, #28]
 800ae68:	687b      	ldr	r3, [r7, #4]
 800ae6a:	681b      	ldr	r3, [r3, #0]
 800ae6c:	691b      	ldr	r3, [r3, #16]
 800ae6e:	f003 0308 	and.w	r3, r3, #8
 800ae72:	2b08      	cmp	r3, #8
 800ae74:	d122      	bne.n	800aebc <HAL_TIM_IRQHandler+0x104>
 800ae76:	687b      	ldr	r3, [r7, #4]
 800ae78:	681b      	ldr	r3, [r3, #0]
 800ae7a:	68db      	ldr	r3, [r3, #12]
 800ae7c:	f003 0308 	and.w	r3, r3, #8
 800ae80:	2b08      	cmp	r3, #8
 800ae82:	d11b      	bne.n	800aebc <HAL_TIM_IRQHandler+0x104>
 800ae84:	687b      	ldr	r3, [r7, #4]
 800ae86:	681b      	ldr	r3, [r3, #0]
 800ae88:	f06f 0208 	mvn.w	r2, #8
 800ae8c:	611a      	str	r2, [r3, #16]
 800ae8e:	687b      	ldr	r3, [r7, #4]
 800ae90:	2204      	movs	r2, #4
 800ae92:	771a      	strb	r2, [r3, #28]
 800ae94:	687b      	ldr	r3, [r7, #4]
 800ae96:	681b      	ldr	r3, [r3, #0]
 800ae98:	69db      	ldr	r3, [r3, #28]
 800ae9a:	f003 0303 	and.w	r3, r3, #3
 800ae9e:	2b00      	cmp	r3, #0
 800aea0:	d003      	beq.n	800aeaa <HAL_TIM_IRQHandler+0xf2>
 800aea2:	6878      	ldr	r0, [r7, #4]
 800aea4:	f000 fac9 	bl	800b43a <HAL_TIM_IC_CaptureCallback>
 800aea8:	e005      	b.n	800aeb6 <HAL_TIM_IRQHandler+0xfe>
 800aeaa:	6878      	ldr	r0, [r7, #4]
 800aeac:	f000 fabb 	bl	800b426 <HAL_TIM_OC_DelayElapsedCallback>
 800aeb0:	6878      	ldr	r0, [r7, #4]
 800aeb2:	f000 fad6 	bl	800b462 <HAL_TIM_PWM_PulseFinishedCallback>
 800aeb6:	687b      	ldr	r3, [r7, #4]
 800aeb8:	2200      	movs	r2, #0
 800aeba:	771a      	strb	r2, [r3, #28]
 800aebc:	687b      	ldr	r3, [r7, #4]
 800aebe:	681b      	ldr	r3, [r3, #0]
 800aec0:	691b      	ldr	r3, [r3, #16]
 800aec2:	f003 0310 	and.w	r3, r3, #16
 800aec6:	2b10      	cmp	r3, #16
 800aec8:	d122      	bne.n	800af10 <HAL_TIM_IRQHandler+0x158>
 800aeca:	687b      	ldr	r3, [r7, #4]
 800aecc:	681b      	ldr	r3, [r3, #0]
 800aece:	68db      	ldr	r3, [r3, #12]
 800aed0:	f003 0310 	and.w	r3, r3, #16
 800aed4:	2b10      	cmp	r3, #16
 800aed6:	d11b      	bne.n	800af10 <HAL_TIM_IRQHandler+0x158>
 800aed8:	687b      	ldr	r3, [r7, #4]
 800aeda:	681b      	ldr	r3, [r3, #0]
 800aedc:	f06f 0210 	mvn.w	r2, #16
 800aee0:	611a      	str	r2, [r3, #16]
 800aee2:	687b      	ldr	r3, [r7, #4]
 800aee4:	2208      	movs	r2, #8
 800aee6:	771a      	strb	r2, [r3, #28]
 800aee8:	687b      	ldr	r3, [r7, #4]
 800aeea:	681b      	ldr	r3, [r3, #0]
 800aeec:	69db      	ldr	r3, [r3, #28]
 800aeee:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800aef2:	2b00      	cmp	r3, #0
 800aef4:	d003      	beq.n	800aefe <HAL_TIM_IRQHandler+0x146>
 800aef6:	6878      	ldr	r0, [r7, #4]
 800aef8:	f000 fa9f 	bl	800b43a <HAL_TIM_IC_CaptureCallback>
 800aefc:	e005      	b.n	800af0a <HAL_TIM_IRQHandler+0x152>
 800aefe:	6878      	ldr	r0, [r7, #4]
 800af00:	f000 fa91 	bl	800b426 <HAL_TIM_OC_DelayElapsedCallback>
 800af04:	6878      	ldr	r0, [r7, #4]
 800af06:	f000 faac 	bl	800b462 <HAL_TIM_PWM_PulseFinishedCallback>
 800af0a:	687b      	ldr	r3, [r7, #4]
 800af0c:	2200      	movs	r2, #0
 800af0e:	771a      	strb	r2, [r3, #28]
 800af10:	687b      	ldr	r3, [r7, #4]
 800af12:	681b      	ldr	r3, [r3, #0]
 800af14:	691b      	ldr	r3, [r3, #16]
 800af16:	f003 0301 	and.w	r3, r3, #1
 800af1a:	2b01      	cmp	r3, #1
 800af1c:	d10e      	bne.n	800af3c <HAL_TIM_IRQHandler+0x184>
 800af1e:	687b      	ldr	r3, [r7, #4]
 800af20:	681b      	ldr	r3, [r3, #0]
 800af22:	68db      	ldr	r3, [r3, #12]
 800af24:	f003 0301 	and.w	r3, r3, #1
 800af28:	2b01      	cmp	r3, #1
 800af2a:	d107      	bne.n	800af3c <HAL_TIM_IRQHandler+0x184>
 800af2c:	687b      	ldr	r3, [r7, #4]
 800af2e:	681b      	ldr	r3, [r3, #0]
 800af30:	f06f 0201 	mvn.w	r2, #1
 800af34:	611a      	str	r2, [r3, #16]
 800af36:	6878      	ldr	r0, [r7, #4]
 800af38:	f000 fa6b 	bl	800b412 <HAL_TIM_PeriodElapsedCallback>
 800af3c:	687b      	ldr	r3, [r7, #4]
 800af3e:	681b      	ldr	r3, [r3, #0]
 800af40:	691b      	ldr	r3, [r3, #16]
 800af42:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800af46:	2b80      	cmp	r3, #128	; 0x80
 800af48:	d10e      	bne.n	800af68 <HAL_TIM_IRQHandler+0x1b0>
 800af4a:	687b      	ldr	r3, [r7, #4]
 800af4c:	681b      	ldr	r3, [r3, #0]
 800af4e:	68db      	ldr	r3, [r3, #12]
 800af50:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800af54:	2b80      	cmp	r3, #128	; 0x80
 800af56:	d107      	bne.n	800af68 <HAL_TIM_IRQHandler+0x1b0>
 800af58:	687b      	ldr	r3, [r7, #4]
 800af5a:	681b      	ldr	r3, [r3, #0]
 800af5c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800af60:	611a      	str	r2, [r3, #16]
 800af62:	6878      	ldr	r0, [r7, #4]
 800af64:	f001 f88e 	bl	800c084 <HAL_TIMEx_BreakCallback>
 800af68:	687b      	ldr	r3, [r7, #4]
 800af6a:	681b      	ldr	r3, [r3, #0]
 800af6c:	691b      	ldr	r3, [r3, #16]
 800af6e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800af72:	2b40      	cmp	r3, #64	; 0x40
 800af74:	d10e      	bne.n	800af94 <HAL_TIM_IRQHandler+0x1dc>
 800af76:	687b      	ldr	r3, [r7, #4]
 800af78:	681b      	ldr	r3, [r3, #0]
 800af7a:	68db      	ldr	r3, [r3, #12]
 800af7c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800af80:	2b40      	cmp	r3, #64	; 0x40
 800af82:	d107      	bne.n	800af94 <HAL_TIM_IRQHandler+0x1dc>
 800af84:	687b      	ldr	r3, [r7, #4]
 800af86:	681b      	ldr	r3, [r3, #0]
 800af88:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800af8c:	611a      	str	r2, [r3, #16]
 800af8e:	6878      	ldr	r0, [r7, #4]
 800af90:	f000 fa71 	bl	800b476 <HAL_TIM_TriggerCallback>
 800af94:	687b      	ldr	r3, [r7, #4]
 800af96:	681b      	ldr	r3, [r3, #0]
 800af98:	691b      	ldr	r3, [r3, #16]
 800af9a:	f003 0320 	and.w	r3, r3, #32
 800af9e:	2b20      	cmp	r3, #32
 800afa0:	d10e      	bne.n	800afc0 <HAL_TIM_IRQHandler+0x208>
 800afa2:	687b      	ldr	r3, [r7, #4]
 800afa4:	681b      	ldr	r3, [r3, #0]
 800afa6:	68db      	ldr	r3, [r3, #12]
 800afa8:	f003 0320 	and.w	r3, r3, #32
 800afac:	2b20      	cmp	r3, #32
 800afae:	d107      	bne.n	800afc0 <HAL_TIM_IRQHandler+0x208>
 800afb0:	687b      	ldr	r3, [r7, #4]
 800afb2:	681b      	ldr	r3, [r3, #0]
 800afb4:	f06f 0220 	mvn.w	r2, #32
 800afb8:	611a      	str	r2, [r3, #16]
 800afba:	6878      	ldr	r0, [r7, #4]
 800afbc:	f001 f858 	bl	800c070 <HAL_TIMEx_CommutCallback>
 800afc0:	bf00      	nop
 800afc2:	3708      	adds	r7, #8
 800afc4:	46bd      	mov	sp, r7
 800afc6:	bd80      	pop	{r7, pc}

0800afc8 <HAL_TIM_IC_ConfigChannel>:
 800afc8:	b580      	push	{r7, lr}
 800afca:	b086      	sub	sp, #24
 800afcc:	af00      	add	r7, sp, #0
 800afce:	60f8      	str	r0, [r7, #12]
 800afd0:	60b9      	str	r1, [r7, #8]
 800afd2:	607a      	str	r2, [r7, #4]
 800afd4:	2300      	movs	r3, #0
 800afd6:	75fb      	strb	r3, [r7, #23]
 800afd8:	68fb      	ldr	r3, [r7, #12]
 800afda:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800afde:	2b01      	cmp	r3, #1
 800afe0:	d101      	bne.n	800afe6 <HAL_TIM_IC_ConfigChannel+0x1e>
 800afe2:	2302      	movs	r3, #2
 800afe4:	e088      	b.n	800b0f8 <HAL_TIM_IC_ConfigChannel+0x130>
 800afe6:	68fb      	ldr	r3, [r7, #12]
 800afe8:	2201      	movs	r2, #1
 800afea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800afee:	687b      	ldr	r3, [r7, #4]
 800aff0:	2b00      	cmp	r3, #0
 800aff2:	d11b      	bne.n	800b02c <HAL_TIM_IC_ConfigChannel+0x64>
 800aff4:	68fb      	ldr	r3, [r7, #12]
 800aff6:	6818      	ldr	r0, [r3, #0]
 800aff8:	68bb      	ldr	r3, [r7, #8]
 800affa:	6819      	ldr	r1, [r3, #0]
 800affc:	68bb      	ldr	r3, [r7, #8]
 800affe:	685a      	ldr	r2, [r3, #4]
 800b000:	68bb      	ldr	r3, [r7, #8]
 800b002:	68db      	ldr	r3, [r3, #12]
 800b004:	f000 fd7c 	bl	800bb00 <TIM_TI1_SetConfig>
 800b008:	68fb      	ldr	r3, [r7, #12]
 800b00a:	681b      	ldr	r3, [r3, #0]
 800b00c:	699a      	ldr	r2, [r3, #24]
 800b00e:	68fb      	ldr	r3, [r7, #12]
 800b010:	681b      	ldr	r3, [r3, #0]
 800b012:	f022 020c 	bic.w	r2, r2, #12
 800b016:	619a      	str	r2, [r3, #24]
 800b018:	68fb      	ldr	r3, [r7, #12]
 800b01a:	681b      	ldr	r3, [r3, #0]
 800b01c:	6999      	ldr	r1, [r3, #24]
 800b01e:	68bb      	ldr	r3, [r7, #8]
 800b020:	689a      	ldr	r2, [r3, #8]
 800b022:	68fb      	ldr	r3, [r7, #12]
 800b024:	681b      	ldr	r3, [r3, #0]
 800b026:	430a      	orrs	r2, r1
 800b028:	619a      	str	r2, [r3, #24]
 800b02a:	e060      	b.n	800b0ee <HAL_TIM_IC_ConfigChannel+0x126>
 800b02c:	687b      	ldr	r3, [r7, #4]
 800b02e:	2b04      	cmp	r3, #4
 800b030:	d11c      	bne.n	800b06c <HAL_TIM_IC_ConfigChannel+0xa4>
 800b032:	68fb      	ldr	r3, [r7, #12]
 800b034:	6818      	ldr	r0, [r3, #0]
 800b036:	68bb      	ldr	r3, [r7, #8]
 800b038:	6819      	ldr	r1, [r3, #0]
 800b03a:	68bb      	ldr	r3, [r7, #8]
 800b03c:	685a      	ldr	r2, [r3, #4]
 800b03e:	68bb      	ldr	r3, [r7, #8]
 800b040:	68db      	ldr	r3, [r3, #12]
 800b042:	f000 fe00 	bl	800bc46 <TIM_TI2_SetConfig>
 800b046:	68fb      	ldr	r3, [r7, #12]
 800b048:	681b      	ldr	r3, [r3, #0]
 800b04a:	699a      	ldr	r2, [r3, #24]
 800b04c:	68fb      	ldr	r3, [r7, #12]
 800b04e:	681b      	ldr	r3, [r3, #0]
 800b050:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 800b054:	619a      	str	r2, [r3, #24]
 800b056:	68fb      	ldr	r3, [r7, #12]
 800b058:	681b      	ldr	r3, [r3, #0]
 800b05a:	6999      	ldr	r1, [r3, #24]
 800b05c:	68bb      	ldr	r3, [r7, #8]
 800b05e:	689b      	ldr	r3, [r3, #8]
 800b060:	021a      	lsls	r2, r3, #8
 800b062:	68fb      	ldr	r3, [r7, #12]
 800b064:	681b      	ldr	r3, [r3, #0]
 800b066:	430a      	orrs	r2, r1
 800b068:	619a      	str	r2, [r3, #24]
 800b06a:	e040      	b.n	800b0ee <HAL_TIM_IC_ConfigChannel+0x126>
 800b06c:	687b      	ldr	r3, [r7, #4]
 800b06e:	2b08      	cmp	r3, #8
 800b070:	d11b      	bne.n	800b0aa <HAL_TIM_IC_ConfigChannel+0xe2>
 800b072:	68fb      	ldr	r3, [r7, #12]
 800b074:	6818      	ldr	r0, [r3, #0]
 800b076:	68bb      	ldr	r3, [r7, #8]
 800b078:	6819      	ldr	r1, [r3, #0]
 800b07a:	68bb      	ldr	r3, [r7, #8]
 800b07c:	685a      	ldr	r2, [r3, #4]
 800b07e:	68bb      	ldr	r3, [r7, #8]
 800b080:	68db      	ldr	r3, [r3, #12]
 800b082:	f000 fe4d 	bl	800bd20 <TIM_TI3_SetConfig>
 800b086:	68fb      	ldr	r3, [r7, #12]
 800b088:	681b      	ldr	r3, [r3, #0]
 800b08a:	69da      	ldr	r2, [r3, #28]
 800b08c:	68fb      	ldr	r3, [r7, #12]
 800b08e:	681b      	ldr	r3, [r3, #0]
 800b090:	f022 020c 	bic.w	r2, r2, #12
 800b094:	61da      	str	r2, [r3, #28]
 800b096:	68fb      	ldr	r3, [r7, #12]
 800b098:	681b      	ldr	r3, [r3, #0]
 800b09a:	69d9      	ldr	r1, [r3, #28]
 800b09c:	68bb      	ldr	r3, [r7, #8]
 800b09e:	689a      	ldr	r2, [r3, #8]
 800b0a0:	68fb      	ldr	r3, [r7, #12]
 800b0a2:	681b      	ldr	r3, [r3, #0]
 800b0a4:	430a      	orrs	r2, r1
 800b0a6:	61da      	str	r2, [r3, #28]
 800b0a8:	e021      	b.n	800b0ee <HAL_TIM_IC_ConfigChannel+0x126>
 800b0aa:	687b      	ldr	r3, [r7, #4]
 800b0ac:	2b0c      	cmp	r3, #12
 800b0ae:	d11c      	bne.n	800b0ea <HAL_TIM_IC_ConfigChannel+0x122>
 800b0b0:	68fb      	ldr	r3, [r7, #12]
 800b0b2:	6818      	ldr	r0, [r3, #0]
 800b0b4:	68bb      	ldr	r3, [r7, #8]
 800b0b6:	6819      	ldr	r1, [r3, #0]
 800b0b8:	68bb      	ldr	r3, [r7, #8]
 800b0ba:	685a      	ldr	r2, [r3, #4]
 800b0bc:	68bb      	ldr	r3, [r7, #8]
 800b0be:	68db      	ldr	r3, [r3, #12]
 800b0c0:	f000 fe6a 	bl	800bd98 <TIM_TI4_SetConfig>
 800b0c4:	68fb      	ldr	r3, [r7, #12]
 800b0c6:	681b      	ldr	r3, [r3, #0]
 800b0c8:	69da      	ldr	r2, [r3, #28]
 800b0ca:	68fb      	ldr	r3, [r7, #12]
 800b0cc:	681b      	ldr	r3, [r3, #0]
 800b0ce:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 800b0d2:	61da      	str	r2, [r3, #28]
 800b0d4:	68fb      	ldr	r3, [r7, #12]
 800b0d6:	681b      	ldr	r3, [r3, #0]
 800b0d8:	69d9      	ldr	r1, [r3, #28]
 800b0da:	68bb      	ldr	r3, [r7, #8]
 800b0dc:	689b      	ldr	r3, [r3, #8]
 800b0de:	021a      	lsls	r2, r3, #8
 800b0e0:	68fb      	ldr	r3, [r7, #12]
 800b0e2:	681b      	ldr	r3, [r3, #0]
 800b0e4:	430a      	orrs	r2, r1
 800b0e6:	61da      	str	r2, [r3, #28]
 800b0e8:	e001      	b.n	800b0ee <HAL_TIM_IC_ConfigChannel+0x126>
 800b0ea:	2301      	movs	r3, #1
 800b0ec:	75fb      	strb	r3, [r7, #23]
 800b0ee:	68fb      	ldr	r3, [r7, #12]
 800b0f0:	2200      	movs	r2, #0
 800b0f2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b0f6:	7dfb      	ldrb	r3, [r7, #23]
 800b0f8:	4618      	mov	r0, r3
 800b0fa:	3718      	adds	r7, #24
 800b0fc:	46bd      	mov	sp, r7
 800b0fe:	bd80      	pop	{r7, pc}

0800b100 <HAL_TIM_PWM_ConfigChannel>:
 800b100:	b580      	push	{r7, lr}
 800b102:	b086      	sub	sp, #24
 800b104:	af00      	add	r7, sp, #0
 800b106:	60f8      	str	r0, [r7, #12]
 800b108:	60b9      	str	r1, [r7, #8]
 800b10a:	607a      	str	r2, [r7, #4]
 800b10c:	2300      	movs	r3, #0
 800b10e:	75fb      	strb	r3, [r7, #23]
 800b110:	68fb      	ldr	r3, [r7, #12]
 800b112:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b116:	2b01      	cmp	r3, #1
 800b118:	d101      	bne.n	800b11e <HAL_TIM_PWM_ConfigChannel+0x1e>
 800b11a:	2302      	movs	r3, #2
 800b11c:	e0ae      	b.n	800b27c <HAL_TIM_PWM_ConfigChannel+0x17c>
 800b11e:	68fb      	ldr	r3, [r7, #12]
 800b120:	2201      	movs	r2, #1
 800b122:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b126:	687b      	ldr	r3, [r7, #4]
 800b128:	2b0c      	cmp	r3, #12
 800b12a:	f200 809f 	bhi.w	800b26c <HAL_TIM_PWM_ConfigChannel+0x16c>
 800b12e:	a201      	add	r2, pc, #4	; (adr r2, 800b134 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800b130:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b134:	0800b169 	.word	0x0800b169
 800b138:	0800b26d 	.word	0x0800b26d
 800b13c:	0800b26d 	.word	0x0800b26d
 800b140:	0800b26d 	.word	0x0800b26d
 800b144:	0800b1a9 	.word	0x0800b1a9
 800b148:	0800b26d 	.word	0x0800b26d
 800b14c:	0800b26d 	.word	0x0800b26d
 800b150:	0800b26d 	.word	0x0800b26d
 800b154:	0800b1eb 	.word	0x0800b1eb
 800b158:	0800b26d 	.word	0x0800b26d
 800b15c:	0800b26d 	.word	0x0800b26d
 800b160:	0800b26d 	.word	0x0800b26d
 800b164:	0800b22b 	.word	0x0800b22b
 800b168:	68fb      	ldr	r3, [r7, #12]
 800b16a:	681b      	ldr	r3, [r3, #0]
 800b16c:	68b9      	ldr	r1, [r7, #8]
 800b16e:	4618      	mov	r0, r3
 800b170:	f000 fb16 	bl	800b7a0 <TIM_OC1_SetConfig>
 800b174:	68fb      	ldr	r3, [r7, #12]
 800b176:	681b      	ldr	r3, [r3, #0]
 800b178:	699a      	ldr	r2, [r3, #24]
 800b17a:	68fb      	ldr	r3, [r7, #12]
 800b17c:	681b      	ldr	r3, [r3, #0]
 800b17e:	f042 0208 	orr.w	r2, r2, #8
 800b182:	619a      	str	r2, [r3, #24]
 800b184:	68fb      	ldr	r3, [r7, #12]
 800b186:	681b      	ldr	r3, [r3, #0]
 800b188:	699a      	ldr	r2, [r3, #24]
 800b18a:	68fb      	ldr	r3, [r7, #12]
 800b18c:	681b      	ldr	r3, [r3, #0]
 800b18e:	f022 0204 	bic.w	r2, r2, #4
 800b192:	619a      	str	r2, [r3, #24]
 800b194:	68fb      	ldr	r3, [r7, #12]
 800b196:	681b      	ldr	r3, [r3, #0]
 800b198:	6999      	ldr	r1, [r3, #24]
 800b19a:	68bb      	ldr	r3, [r7, #8]
 800b19c:	691a      	ldr	r2, [r3, #16]
 800b19e:	68fb      	ldr	r3, [r7, #12]
 800b1a0:	681b      	ldr	r3, [r3, #0]
 800b1a2:	430a      	orrs	r2, r1
 800b1a4:	619a      	str	r2, [r3, #24]
 800b1a6:	e064      	b.n	800b272 <HAL_TIM_PWM_ConfigChannel+0x172>
 800b1a8:	68fb      	ldr	r3, [r7, #12]
 800b1aa:	681b      	ldr	r3, [r3, #0]
 800b1ac:	68b9      	ldr	r1, [r7, #8]
 800b1ae:	4618      	mov	r0, r3
 800b1b0:	f000 fb66 	bl	800b880 <TIM_OC2_SetConfig>
 800b1b4:	68fb      	ldr	r3, [r7, #12]
 800b1b6:	681b      	ldr	r3, [r3, #0]
 800b1b8:	699a      	ldr	r2, [r3, #24]
 800b1ba:	68fb      	ldr	r3, [r7, #12]
 800b1bc:	681b      	ldr	r3, [r3, #0]
 800b1be:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b1c2:	619a      	str	r2, [r3, #24]
 800b1c4:	68fb      	ldr	r3, [r7, #12]
 800b1c6:	681b      	ldr	r3, [r3, #0]
 800b1c8:	699a      	ldr	r2, [r3, #24]
 800b1ca:	68fb      	ldr	r3, [r7, #12]
 800b1cc:	681b      	ldr	r3, [r3, #0]
 800b1ce:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b1d2:	619a      	str	r2, [r3, #24]
 800b1d4:	68fb      	ldr	r3, [r7, #12]
 800b1d6:	681b      	ldr	r3, [r3, #0]
 800b1d8:	6999      	ldr	r1, [r3, #24]
 800b1da:	68bb      	ldr	r3, [r7, #8]
 800b1dc:	691b      	ldr	r3, [r3, #16]
 800b1de:	021a      	lsls	r2, r3, #8
 800b1e0:	68fb      	ldr	r3, [r7, #12]
 800b1e2:	681b      	ldr	r3, [r3, #0]
 800b1e4:	430a      	orrs	r2, r1
 800b1e6:	619a      	str	r2, [r3, #24]
 800b1e8:	e043      	b.n	800b272 <HAL_TIM_PWM_ConfigChannel+0x172>
 800b1ea:	68fb      	ldr	r3, [r7, #12]
 800b1ec:	681b      	ldr	r3, [r3, #0]
 800b1ee:	68b9      	ldr	r1, [r7, #8]
 800b1f0:	4618      	mov	r0, r3
 800b1f2:	f000 fbbb 	bl	800b96c <TIM_OC3_SetConfig>
 800b1f6:	68fb      	ldr	r3, [r7, #12]
 800b1f8:	681b      	ldr	r3, [r3, #0]
 800b1fa:	69da      	ldr	r2, [r3, #28]
 800b1fc:	68fb      	ldr	r3, [r7, #12]
 800b1fe:	681b      	ldr	r3, [r3, #0]
 800b200:	f042 0208 	orr.w	r2, r2, #8
 800b204:	61da      	str	r2, [r3, #28]
 800b206:	68fb      	ldr	r3, [r7, #12]
 800b208:	681b      	ldr	r3, [r3, #0]
 800b20a:	69da      	ldr	r2, [r3, #28]
 800b20c:	68fb      	ldr	r3, [r7, #12]
 800b20e:	681b      	ldr	r3, [r3, #0]
 800b210:	f022 0204 	bic.w	r2, r2, #4
 800b214:	61da      	str	r2, [r3, #28]
 800b216:	68fb      	ldr	r3, [r7, #12]
 800b218:	681b      	ldr	r3, [r3, #0]
 800b21a:	69d9      	ldr	r1, [r3, #28]
 800b21c:	68bb      	ldr	r3, [r7, #8]
 800b21e:	691a      	ldr	r2, [r3, #16]
 800b220:	68fb      	ldr	r3, [r7, #12]
 800b222:	681b      	ldr	r3, [r3, #0]
 800b224:	430a      	orrs	r2, r1
 800b226:	61da      	str	r2, [r3, #28]
 800b228:	e023      	b.n	800b272 <HAL_TIM_PWM_ConfigChannel+0x172>
 800b22a:	68fb      	ldr	r3, [r7, #12]
 800b22c:	681b      	ldr	r3, [r3, #0]
 800b22e:	68b9      	ldr	r1, [r7, #8]
 800b230:	4618      	mov	r0, r3
 800b232:	f000 fc0f 	bl	800ba54 <TIM_OC4_SetConfig>
 800b236:	68fb      	ldr	r3, [r7, #12]
 800b238:	681b      	ldr	r3, [r3, #0]
 800b23a:	69da      	ldr	r2, [r3, #28]
 800b23c:	68fb      	ldr	r3, [r7, #12]
 800b23e:	681b      	ldr	r3, [r3, #0]
 800b240:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b244:	61da      	str	r2, [r3, #28]
 800b246:	68fb      	ldr	r3, [r7, #12]
 800b248:	681b      	ldr	r3, [r3, #0]
 800b24a:	69da      	ldr	r2, [r3, #28]
 800b24c:	68fb      	ldr	r3, [r7, #12]
 800b24e:	681b      	ldr	r3, [r3, #0]
 800b250:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b254:	61da      	str	r2, [r3, #28]
 800b256:	68fb      	ldr	r3, [r7, #12]
 800b258:	681b      	ldr	r3, [r3, #0]
 800b25a:	69d9      	ldr	r1, [r3, #28]
 800b25c:	68bb      	ldr	r3, [r7, #8]
 800b25e:	691b      	ldr	r3, [r3, #16]
 800b260:	021a      	lsls	r2, r3, #8
 800b262:	68fb      	ldr	r3, [r7, #12]
 800b264:	681b      	ldr	r3, [r3, #0]
 800b266:	430a      	orrs	r2, r1
 800b268:	61da      	str	r2, [r3, #28]
 800b26a:	e002      	b.n	800b272 <HAL_TIM_PWM_ConfigChannel+0x172>
 800b26c:	2301      	movs	r3, #1
 800b26e:	75fb      	strb	r3, [r7, #23]
 800b270:	bf00      	nop
 800b272:	68fb      	ldr	r3, [r7, #12]
 800b274:	2200      	movs	r2, #0
 800b276:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b27a:	7dfb      	ldrb	r3, [r7, #23]
 800b27c:	4618      	mov	r0, r3
 800b27e:	3718      	adds	r7, #24
 800b280:	46bd      	mov	sp, r7
 800b282:	bd80      	pop	{r7, pc}

0800b284 <HAL_TIM_ConfigClockSource>:
 800b284:	b580      	push	{r7, lr}
 800b286:	b084      	sub	sp, #16
 800b288:	af00      	add	r7, sp, #0
 800b28a:	6078      	str	r0, [r7, #4]
 800b28c:	6039      	str	r1, [r7, #0]
 800b28e:	2300      	movs	r3, #0
 800b290:	73fb      	strb	r3, [r7, #15]
 800b292:	687b      	ldr	r3, [r7, #4]
 800b294:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b298:	2b01      	cmp	r3, #1
 800b29a:	d101      	bne.n	800b2a0 <HAL_TIM_ConfigClockSource+0x1c>
 800b29c:	2302      	movs	r3, #2
 800b29e:	e0b4      	b.n	800b40a <HAL_TIM_ConfigClockSource+0x186>
 800b2a0:	687b      	ldr	r3, [r7, #4]
 800b2a2:	2201      	movs	r2, #1
 800b2a4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b2a8:	687b      	ldr	r3, [r7, #4]
 800b2aa:	2202      	movs	r2, #2
 800b2ac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b2b0:	687b      	ldr	r3, [r7, #4]
 800b2b2:	681b      	ldr	r3, [r3, #0]
 800b2b4:	689b      	ldr	r3, [r3, #8]
 800b2b6:	60bb      	str	r3, [r7, #8]
 800b2b8:	68bb      	ldr	r3, [r7, #8]
 800b2ba:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800b2be:	60bb      	str	r3, [r7, #8]
 800b2c0:	68bb      	ldr	r3, [r7, #8]
 800b2c2:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800b2c6:	60bb      	str	r3, [r7, #8]
 800b2c8:	687b      	ldr	r3, [r7, #4]
 800b2ca:	681b      	ldr	r3, [r3, #0]
 800b2cc:	68ba      	ldr	r2, [r7, #8]
 800b2ce:	609a      	str	r2, [r3, #8]
 800b2d0:	683b      	ldr	r3, [r7, #0]
 800b2d2:	681b      	ldr	r3, [r3, #0]
 800b2d4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800b2d8:	d03e      	beq.n	800b358 <HAL_TIM_ConfigClockSource+0xd4>
 800b2da:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800b2de:	f200 8087 	bhi.w	800b3f0 <HAL_TIM_ConfigClockSource+0x16c>
 800b2e2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b2e6:	f000 8086 	beq.w	800b3f6 <HAL_TIM_ConfigClockSource+0x172>
 800b2ea:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b2ee:	d87f      	bhi.n	800b3f0 <HAL_TIM_ConfigClockSource+0x16c>
 800b2f0:	2b70      	cmp	r3, #112	; 0x70
 800b2f2:	d01a      	beq.n	800b32a <HAL_TIM_ConfigClockSource+0xa6>
 800b2f4:	2b70      	cmp	r3, #112	; 0x70
 800b2f6:	d87b      	bhi.n	800b3f0 <HAL_TIM_ConfigClockSource+0x16c>
 800b2f8:	2b60      	cmp	r3, #96	; 0x60
 800b2fa:	d050      	beq.n	800b39e <HAL_TIM_ConfigClockSource+0x11a>
 800b2fc:	2b60      	cmp	r3, #96	; 0x60
 800b2fe:	d877      	bhi.n	800b3f0 <HAL_TIM_ConfigClockSource+0x16c>
 800b300:	2b50      	cmp	r3, #80	; 0x50
 800b302:	d03c      	beq.n	800b37e <HAL_TIM_ConfigClockSource+0xfa>
 800b304:	2b50      	cmp	r3, #80	; 0x50
 800b306:	d873      	bhi.n	800b3f0 <HAL_TIM_ConfigClockSource+0x16c>
 800b308:	2b40      	cmp	r3, #64	; 0x40
 800b30a:	d058      	beq.n	800b3be <HAL_TIM_ConfigClockSource+0x13a>
 800b30c:	2b40      	cmp	r3, #64	; 0x40
 800b30e:	d86f      	bhi.n	800b3f0 <HAL_TIM_ConfigClockSource+0x16c>
 800b310:	2b30      	cmp	r3, #48	; 0x30
 800b312:	d064      	beq.n	800b3de <HAL_TIM_ConfigClockSource+0x15a>
 800b314:	2b30      	cmp	r3, #48	; 0x30
 800b316:	d86b      	bhi.n	800b3f0 <HAL_TIM_ConfigClockSource+0x16c>
 800b318:	2b20      	cmp	r3, #32
 800b31a:	d060      	beq.n	800b3de <HAL_TIM_ConfigClockSource+0x15a>
 800b31c:	2b20      	cmp	r3, #32
 800b31e:	d867      	bhi.n	800b3f0 <HAL_TIM_ConfigClockSource+0x16c>
 800b320:	2b00      	cmp	r3, #0
 800b322:	d05c      	beq.n	800b3de <HAL_TIM_ConfigClockSource+0x15a>
 800b324:	2b10      	cmp	r3, #16
 800b326:	d05a      	beq.n	800b3de <HAL_TIM_ConfigClockSource+0x15a>
 800b328:	e062      	b.n	800b3f0 <HAL_TIM_ConfigClockSource+0x16c>
 800b32a:	687b      	ldr	r3, [r7, #4]
 800b32c:	6818      	ldr	r0, [r3, #0]
 800b32e:	683b      	ldr	r3, [r7, #0]
 800b330:	6899      	ldr	r1, [r3, #8]
 800b332:	683b      	ldr	r3, [r7, #0]
 800b334:	685a      	ldr	r2, [r3, #4]
 800b336:	683b      	ldr	r3, [r7, #0]
 800b338:	68db      	ldr	r3, [r3, #12]
 800b33a:	f000 fd85 	bl	800be48 <TIM_ETR_SetConfig>
 800b33e:	687b      	ldr	r3, [r7, #4]
 800b340:	681b      	ldr	r3, [r3, #0]
 800b342:	689b      	ldr	r3, [r3, #8]
 800b344:	60bb      	str	r3, [r7, #8]
 800b346:	68bb      	ldr	r3, [r7, #8]
 800b348:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800b34c:	60bb      	str	r3, [r7, #8]
 800b34e:	687b      	ldr	r3, [r7, #4]
 800b350:	681b      	ldr	r3, [r3, #0]
 800b352:	68ba      	ldr	r2, [r7, #8]
 800b354:	609a      	str	r2, [r3, #8]
 800b356:	e04f      	b.n	800b3f8 <HAL_TIM_ConfigClockSource+0x174>
 800b358:	687b      	ldr	r3, [r7, #4]
 800b35a:	6818      	ldr	r0, [r3, #0]
 800b35c:	683b      	ldr	r3, [r7, #0]
 800b35e:	6899      	ldr	r1, [r3, #8]
 800b360:	683b      	ldr	r3, [r7, #0]
 800b362:	685a      	ldr	r2, [r3, #4]
 800b364:	683b      	ldr	r3, [r7, #0]
 800b366:	68db      	ldr	r3, [r3, #12]
 800b368:	f000 fd6e 	bl	800be48 <TIM_ETR_SetConfig>
 800b36c:	687b      	ldr	r3, [r7, #4]
 800b36e:	681b      	ldr	r3, [r3, #0]
 800b370:	689a      	ldr	r2, [r3, #8]
 800b372:	687b      	ldr	r3, [r7, #4]
 800b374:	681b      	ldr	r3, [r3, #0]
 800b376:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800b37a:	609a      	str	r2, [r3, #8]
 800b37c:	e03c      	b.n	800b3f8 <HAL_TIM_ConfigClockSource+0x174>
 800b37e:	687b      	ldr	r3, [r7, #4]
 800b380:	6818      	ldr	r0, [r3, #0]
 800b382:	683b      	ldr	r3, [r7, #0]
 800b384:	6859      	ldr	r1, [r3, #4]
 800b386:	683b      	ldr	r3, [r7, #0]
 800b388:	68db      	ldr	r3, [r3, #12]
 800b38a:	461a      	mov	r2, r3
 800b38c:	f000 fc2c 	bl	800bbe8 <TIM_TI1_ConfigInputStage>
 800b390:	687b      	ldr	r3, [r7, #4]
 800b392:	681b      	ldr	r3, [r3, #0]
 800b394:	2150      	movs	r1, #80	; 0x50
 800b396:	4618      	mov	r0, r3
 800b398:	f000 fd3b 	bl	800be12 <TIM_ITRx_SetConfig>
 800b39c:	e02c      	b.n	800b3f8 <HAL_TIM_ConfigClockSource+0x174>
 800b39e:	687b      	ldr	r3, [r7, #4]
 800b3a0:	6818      	ldr	r0, [r3, #0]
 800b3a2:	683b      	ldr	r3, [r7, #0]
 800b3a4:	6859      	ldr	r1, [r3, #4]
 800b3a6:	683b      	ldr	r3, [r7, #0]
 800b3a8:	68db      	ldr	r3, [r3, #12]
 800b3aa:	461a      	mov	r2, r3
 800b3ac:	f000 fc88 	bl	800bcc0 <TIM_TI2_ConfigInputStage>
 800b3b0:	687b      	ldr	r3, [r7, #4]
 800b3b2:	681b      	ldr	r3, [r3, #0]
 800b3b4:	2160      	movs	r1, #96	; 0x60
 800b3b6:	4618      	mov	r0, r3
 800b3b8:	f000 fd2b 	bl	800be12 <TIM_ITRx_SetConfig>
 800b3bc:	e01c      	b.n	800b3f8 <HAL_TIM_ConfigClockSource+0x174>
 800b3be:	687b      	ldr	r3, [r7, #4]
 800b3c0:	6818      	ldr	r0, [r3, #0]
 800b3c2:	683b      	ldr	r3, [r7, #0]
 800b3c4:	6859      	ldr	r1, [r3, #4]
 800b3c6:	683b      	ldr	r3, [r7, #0]
 800b3c8:	68db      	ldr	r3, [r3, #12]
 800b3ca:	461a      	mov	r2, r3
 800b3cc:	f000 fc0c 	bl	800bbe8 <TIM_TI1_ConfigInputStage>
 800b3d0:	687b      	ldr	r3, [r7, #4]
 800b3d2:	681b      	ldr	r3, [r3, #0]
 800b3d4:	2140      	movs	r1, #64	; 0x40
 800b3d6:	4618      	mov	r0, r3
 800b3d8:	f000 fd1b 	bl	800be12 <TIM_ITRx_SetConfig>
 800b3dc:	e00c      	b.n	800b3f8 <HAL_TIM_ConfigClockSource+0x174>
 800b3de:	687b      	ldr	r3, [r7, #4]
 800b3e0:	681a      	ldr	r2, [r3, #0]
 800b3e2:	683b      	ldr	r3, [r7, #0]
 800b3e4:	681b      	ldr	r3, [r3, #0]
 800b3e6:	4619      	mov	r1, r3
 800b3e8:	4610      	mov	r0, r2
 800b3ea:	f000 fd12 	bl	800be12 <TIM_ITRx_SetConfig>
 800b3ee:	e003      	b.n	800b3f8 <HAL_TIM_ConfigClockSource+0x174>
 800b3f0:	2301      	movs	r3, #1
 800b3f2:	73fb      	strb	r3, [r7, #15]
 800b3f4:	e000      	b.n	800b3f8 <HAL_TIM_ConfigClockSource+0x174>
 800b3f6:	bf00      	nop
 800b3f8:	687b      	ldr	r3, [r7, #4]
 800b3fa:	2201      	movs	r2, #1
 800b3fc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b400:	687b      	ldr	r3, [r7, #4]
 800b402:	2200      	movs	r2, #0
 800b404:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b408:	7bfb      	ldrb	r3, [r7, #15]
 800b40a:	4618      	mov	r0, r3
 800b40c:	3710      	adds	r7, #16
 800b40e:	46bd      	mov	sp, r7
 800b410:	bd80      	pop	{r7, pc}

0800b412 <HAL_TIM_PeriodElapsedCallback>:
 800b412:	b480      	push	{r7}
 800b414:	b083      	sub	sp, #12
 800b416:	af00      	add	r7, sp, #0
 800b418:	6078      	str	r0, [r7, #4]
 800b41a:	bf00      	nop
 800b41c:	370c      	adds	r7, #12
 800b41e:	46bd      	mov	sp, r7
 800b420:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b424:	4770      	bx	lr

0800b426 <HAL_TIM_OC_DelayElapsedCallback>:
 800b426:	b480      	push	{r7}
 800b428:	b083      	sub	sp, #12
 800b42a:	af00      	add	r7, sp, #0
 800b42c:	6078      	str	r0, [r7, #4]
 800b42e:	bf00      	nop
 800b430:	370c      	adds	r7, #12
 800b432:	46bd      	mov	sp, r7
 800b434:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b438:	4770      	bx	lr

0800b43a <HAL_TIM_IC_CaptureCallback>:
 800b43a:	b480      	push	{r7}
 800b43c:	b083      	sub	sp, #12
 800b43e:	af00      	add	r7, sp, #0
 800b440:	6078      	str	r0, [r7, #4]
 800b442:	bf00      	nop
 800b444:	370c      	adds	r7, #12
 800b446:	46bd      	mov	sp, r7
 800b448:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b44c:	4770      	bx	lr

0800b44e <HAL_TIM_IC_CaptureHalfCpltCallback>:
 800b44e:	b480      	push	{r7}
 800b450:	b083      	sub	sp, #12
 800b452:	af00      	add	r7, sp, #0
 800b454:	6078      	str	r0, [r7, #4]
 800b456:	bf00      	nop
 800b458:	370c      	adds	r7, #12
 800b45a:	46bd      	mov	sp, r7
 800b45c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b460:	4770      	bx	lr

0800b462 <HAL_TIM_PWM_PulseFinishedCallback>:
 800b462:	b480      	push	{r7}
 800b464:	b083      	sub	sp, #12
 800b466:	af00      	add	r7, sp, #0
 800b468:	6078      	str	r0, [r7, #4]
 800b46a:	bf00      	nop
 800b46c:	370c      	adds	r7, #12
 800b46e:	46bd      	mov	sp, r7
 800b470:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b474:	4770      	bx	lr

0800b476 <HAL_TIM_TriggerCallback>:
 800b476:	b480      	push	{r7}
 800b478:	b083      	sub	sp, #12
 800b47a:	af00      	add	r7, sp, #0
 800b47c:	6078      	str	r0, [r7, #4]
 800b47e:	bf00      	nop
 800b480:	370c      	adds	r7, #12
 800b482:	46bd      	mov	sp, r7
 800b484:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b488:	4770      	bx	lr

0800b48a <HAL_TIM_ErrorCallback>:
 800b48a:	b480      	push	{r7}
 800b48c:	b083      	sub	sp, #12
 800b48e:	af00      	add	r7, sp, #0
 800b490:	6078      	str	r0, [r7, #4]
 800b492:	bf00      	nop
 800b494:	370c      	adds	r7, #12
 800b496:	46bd      	mov	sp, r7
 800b498:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b49c:	4770      	bx	lr

0800b49e <TIM_DMAError>:
 800b49e:	b580      	push	{r7, lr}
 800b4a0:	b084      	sub	sp, #16
 800b4a2:	af00      	add	r7, sp, #0
 800b4a4:	6078      	str	r0, [r7, #4]
 800b4a6:	687b      	ldr	r3, [r7, #4]
 800b4a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b4aa:	60fb      	str	r3, [r7, #12]
 800b4ac:	68fb      	ldr	r3, [r7, #12]
 800b4ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b4b0:	687a      	ldr	r2, [r7, #4]
 800b4b2:	429a      	cmp	r2, r3
 800b4b4:	d107      	bne.n	800b4c6 <TIM_DMAError+0x28>
 800b4b6:	68fb      	ldr	r3, [r7, #12]
 800b4b8:	2201      	movs	r2, #1
 800b4ba:	771a      	strb	r2, [r3, #28]
 800b4bc:	68fb      	ldr	r3, [r7, #12]
 800b4be:	2201      	movs	r2, #1
 800b4c0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b4c4:	e02a      	b.n	800b51c <TIM_DMAError+0x7e>
 800b4c6:	68fb      	ldr	r3, [r7, #12]
 800b4c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b4ca:	687a      	ldr	r2, [r7, #4]
 800b4cc:	429a      	cmp	r2, r3
 800b4ce:	d107      	bne.n	800b4e0 <TIM_DMAError+0x42>
 800b4d0:	68fb      	ldr	r3, [r7, #12]
 800b4d2:	2202      	movs	r2, #2
 800b4d4:	771a      	strb	r2, [r3, #28]
 800b4d6:	68fb      	ldr	r3, [r7, #12]
 800b4d8:	2201      	movs	r2, #1
 800b4da:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800b4de:	e01d      	b.n	800b51c <TIM_DMAError+0x7e>
 800b4e0:	68fb      	ldr	r3, [r7, #12]
 800b4e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b4e4:	687a      	ldr	r2, [r7, #4]
 800b4e6:	429a      	cmp	r2, r3
 800b4e8:	d107      	bne.n	800b4fa <TIM_DMAError+0x5c>
 800b4ea:	68fb      	ldr	r3, [r7, #12]
 800b4ec:	2204      	movs	r2, #4
 800b4ee:	771a      	strb	r2, [r3, #28]
 800b4f0:	68fb      	ldr	r3, [r7, #12]
 800b4f2:	2201      	movs	r2, #1
 800b4f4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b4f8:	e010      	b.n	800b51c <TIM_DMAError+0x7e>
 800b4fa:	68fb      	ldr	r3, [r7, #12]
 800b4fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b4fe:	687a      	ldr	r2, [r7, #4]
 800b500:	429a      	cmp	r2, r3
 800b502:	d107      	bne.n	800b514 <TIM_DMAError+0x76>
 800b504:	68fb      	ldr	r3, [r7, #12]
 800b506:	2208      	movs	r2, #8
 800b508:	771a      	strb	r2, [r3, #28]
 800b50a:	68fb      	ldr	r3, [r7, #12]
 800b50c:	2201      	movs	r2, #1
 800b50e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b512:	e003      	b.n	800b51c <TIM_DMAError+0x7e>
 800b514:	68fb      	ldr	r3, [r7, #12]
 800b516:	2201      	movs	r2, #1
 800b518:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b51c:	68f8      	ldr	r0, [r7, #12]
 800b51e:	f7ff ffb4 	bl	800b48a <HAL_TIM_ErrorCallback>
 800b522:	68fb      	ldr	r3, [r7, #12]
 800b524:	2200      	movs	r2, #0
 800b526:	771a      	strb	r2, [r3, #28]
 800b528:	bf00      	nop
 800b52a:	3710      	adds	r7, #16
 800b52c:	46bd      	mov	sp, r7
 800b52e:	bd80      	pop	{r7, pc}

0800b530 <TIM_DMACaptureCplt>:
 800b530:	b580      	push	{r7, lr}
 800b532:	b084      	sub	sp, #16
 800b534:	af00      	add	r7, sp, #0
 800b536:	6078      	str	r0, [r7, #4]
 800b538:	687b      	ldr	r3, [r7, #4]
 800b53a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b53c:	60fb      	str	r3, [r7, #12]
 800b53e:	68fb      	ldr	r3, [r7, #12]
 800b540:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b542:	687a      	ldr	r2, [r7, #4]
 800b544:	429a      	cmp	r2, r3
 800b546:	d10f      	bne.n	800b568 <TIM_DMACaptureCplt+0x38>
 800b548:	68fb      	ldr	r3, [r7, #12]
 800b54a:	2201      	movs	r2, #1
 800b54c:	771a      	strb	r2, [r3, #28]
 800b54e:	687b      	ldr	r3, [r7, #4]
 800b550:	69db      	ldr	r3, [r3, #28]
 800b552:	2b00      	cmp	r3, #0
 800b554:	d146      	bne.n	800b5e4 <TIM_DMACaptureCplt+0xb4>
 800b556:	68fb      	ldr	r3, [r7, #12]
 800b558:	2201      	movs	r2, #1
 800b55a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b55e:	68fb      	ldr	r3, [r7, #12]
 800b560:	2201      	movs	r2, #1
 800b562:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800b566:	e03d      	b.n	800b5e4 <TIM_DMACaptureCplt+0xb4>
 800b568:	68fb      	ldr	r3, [r7, #12]
 800b56a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b56c:	687a      	ldr	r2, [r7, #4]
 800b56e:	429a      	cmp	r2, r3
 800b570:	d10f      	bne.n	800b592 <TIM_DMACaptureCplt+0x62>
 800b572:	68fb      	ldr	r3, [r7, #12]
 800b574:	2202      	movs	r2, #2
 800b576:	771a      	strb	r2, [r3, #28]
 800b578:	687b      	ldr	r3, [r7, #4]
 800b57a:	69db      	ldr	r3, [r3, #28]
 800b57c:	2b00      	cmp	r3, #0
 800b57e:	d131      	bne.n	800b5e4 <TIM_DMACaptureCplt+0xb4>
 800b580:	68fb      	ldr	r3, [r7, #12]
 800b582:	2201      	movs	r2, #1
 800b584:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800b588:	68fb      	ldr	r3, [r7, #12]
 800b58a:	2201      	movs	r2, #1
 800b58c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800b590:	e028      	b.n	800b5e4 <TIM_DMACaptureCplt+0xb4>
 800b592:	68fb      	ldr	r3, [r7, #12]
 800b594:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b596:	687a      	ldr	r2, [r7, #4]
 800b598:	429a      	cmp	r2, r3
 800b59a:	d10f      	bne.n	800b5bc <TIM_DMACaptureCplt+0x8c>
 800b59c:	68fb      	ldr	r3, [r7, #12]
 800b59e:	2204      	movs	r2, #4
 800b5a0:	771a      	strb	r2, [r3, #28]
 800b5a2:	687b      	ldr	r3, [r7, #4]
 800b5a4:	69db      	ldr	r3, [r3, #28]
 800b5a6:	2b00      	cmp	r3, #0
 800b5a8:	d11c      	bne.n	800b5e4 <TIM_DMACaptureCplt+0xb4>
 800b5aa:	68fb      	ldr	r3, [r7, #12]
 800b5ac:	2201      	movs	r2, #1
 800b5ae:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b5b2:	68fb      	ldr	r3, [r7, #12]
 800b5b4:	2201      	movs	r2, #1
 800b5b6:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800b5ba:	e013      	b.n	800b5e4 <TIM_DMACaptureCplt+0xb4>
 800b5bc:	68fb      	ldr	r3, [r7, #12]
 800b5be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b5c0:	687a      	ldr	r2, [r7, #4]
 800b5c2:	429a      	cmp	r2, r3
 800b5c4:	d10e      	bne.n	800b5e4 <TIM_DMACaptureCplt+0xb4>
 800b5c6:	68fb      	ldr	r3, [r7, #12]
 800b5c8:	2208      	movs	r2, #8
 800b5ca:	771a      	strb	r2, [r3, #28]
 800b5cc:	687b      	ldr	r3, [r7, #4]
 800b5ce:	69db      	ldr	r3, [r3, #28]
 800b5d0:	2b00      	cmp	r3, #0
 800b5d2:	d107      	bne.n	800b5e4 <TIM_DMACaptureCplt+0xb4>
 800b5d4:	68fb      	ldr	r3, [r7, #12]
 800b5d6:	2201      	movs	r2, #1
 800b5d8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b5dc:	68fb      	ldr	r3, [r7, #12]
 800b5de:	2201      	movs	r2, #1
 800b5e0:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800b5e4:	68f8      	ldr	r0, [r7, #12]
 800b5e6:	f7ff ff28 	bl	800b43a <HAL_TIM_IC_CaptureCallback>
 800b5ea:	68fb      	ldr	r3, [r7, #12]
 800b5ec:	2200      	movs	r2, #0
 800b5ee:	771a      	strb	r2, [r3, #28]
 800b5f0:	bf00      	nop
 800b5f2:	3710      	adds	r7, #16
 800b5f4:	46bd      	mov	sp, r7
 800b5f6:	bd80      	pop	{r7, pc}

0800b5f8 <TIM_DMACaptureHalfCplt>:
 800b5f8:	b580      	push	{r7, lr}
 800b5fa:	b084      	sub	sp, #16
 800b5fc:	af00      	add	r7, sp, #0
 800b5fe:	6078      	str	r0, [r7, #4]
 800b600:	687b      	ldr	r3, [r7, #4]
 800b602:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b604:	60fb      	str	r3, [r7, #12]
 800b606:	68fb      	ldr	r3, [r7, #12]
 800b608:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b60a:	687a      	ldr	r2, [r7, #4]
 800b60c:	429a      	cmp	r2, r3
 800b60e:	d103      	bne.n	800b618 <TIM_DMACaptureHalfCplt+0x20>
 800b610:	68fb      	ldr	r3, [r7, #12]
 800b612:	2201      	movs	r2, #1
 800b614:	771a      	strb	r2, [r3, #28]
 800b616:	e019      	b.n	800b64c <TIM_DMACaptureHalfCplt+0x54>
 800b618:	68fb      	ldr	r3, [r7, #12]
 800b61a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b61c:	687a      	ldr	r2, [r7, #4]
 800b61e:	429a      	cmp	r2, r3
 800b620:	d103      	bne.n	800b62a <TIM_DMACaptureHalfCplt+0x32>
 800b622:	68fb      	ldr	r3, [r7, #12]
 800b624:	2202      	movs	r2, #2
 800b626:	771a      	strb	r2, [r3, #28]
 800b628:	e010      	b.n	800b64c <TIM_DMACaptureHalfCplt+0x54>
 800b62a:	68fb      	ldr	r3, [r7, #12]
 800b62c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b62e:	687a      	ldr	r2, [r7, #4]
 800b630:	429a      	cmp	r2, r3
 800b632:	d103      	bne.n	800b63c <TIM_DMACaptureHalfCplt+0x44>
 800b634:	68fb      	ldr	r3, [r7, #12]
 800b636:	2204      	movs	r2, #4
 800b638:	771a      	strb	r2, [r3, #28]
 800b63a:	e007      	b.n	800b64c <TIM_DMACaptureHalfCplt+0x54>
 800b63c:	68fb      	ldr	r3, [r7, #12]
 800b63e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b640:	687a      	ldr	r2, [r7, #4]
 800b642:	429a      	cmp	r2, r3
 800b644:	d102      	bne.n	800b64c <TIM_DMACaptureHalfCplt+0x54>
 800b646:	68fb      	ldr	r3, [r7, #12]
 800b648:	2208      	movs	r2, #8
 800b64a:	771a      	strb	r2, [r3, #28]
 800b64c:	68f8      	ldr	r0, [r7, #12]
 800b64e:	f7ff fefe 	bl	800b44e <HAL_TIM_IC_CaptureHalfCpltCallback>
 800b652:	68fb      	ldr	r3, [r7, #12]
 800b654:	2200      	movs	r2, #0
 800b656:	771a      	strb	r2, [r3, #28]
 800b658:	bf00      	nop
 800b65a:	3710      	adds	r7, #16
 800b65c:	46bd      	mov	sp, r7
 800b65e:	bd80      	pop	{r7, pc}

0800b660 <TIM_Base_SetConfig>:
 800b660:	b480      	push	{r7}
 800b662:	b085      	sub	sp, #20
 800b664:	af00      	add	r7, sp, #0
 800b666:	6078      	str	r0, [r7, #4]
 800b668:	6039      	str	r1, [r7, #0]
 800b66a:	687b      	ldr	r3, [r7, #4]
 800b66c:	681b      	ldr	r3, [r3, #0]
 800b66e:	60fb      	str	r3, [r7, #12]
 800b670:	687b      	ldr	r3, [r7, #4]
 800b672:	4a40      	ldr	r2, [pc, #256]	; (800b774 <TIM_Base_SetConfig+0x114>)
 800b674:	4293      	cmp	r3, r2
 800b676:	d013      	beq.n	800b6a0 <TIM_Base_SetConfig+0x40>
 800b678:	687b      	ldr	r3, [r7, #4]
 800b67a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b67e:	d00f      	beq.n	800b6a0 <TIM_Base_SetConfig+0x40>
 800b680:	687b      	ldr	r3, [r7, #4]
 800b682:	4a3d      	ldr	r2, [pc, #244]	; (800b778 <TIM_Base_SetConfig+0x118>)
 800b684:	4293      	cmp	r3, r2
 800b686:	d00b      	beq.n	800b6a0 <TIM_Base_SetConfig+0x40>
 800b688:	687b      	ldr	r3, [r7, #4]
 800b68a:	4a3c      	ldr	r2, [pc, #240]	; (800b77c <TIM_Base_SetConfig+0x11c>)
 800b68c:	4293      	cmp	r3, r2
 800b68e:	d007      	beq.n	800b6a0 <TIM_Base_SetConfig+0x40>
 800b690:	687b      	ldr	r3, [r7, #4]
 800b692:	4a3b      	ldr	r2, [pc, #236]	; (800b780 <TIM_Base_SetConfig+0x120>)
 800b694:	4293      	cmp	r3, r2
 800b696:	d003      	beq.n	800b6a0 <TIM_Base_SetConfig+0x40>
 800b698:	687b      	ldr	r3, [r7, #4]
 800b69a:	4a3a      	ldr	r2, [pc, #232]	; (800b784 <TIM_Base_SetConfig+0x124>)
 800b69c:	4293      	cmp	r3, r2
 800b69e:	d108      	bne.n	800b6b2 <TIM_Base_SetConfig+0x52>
 800b6a0:	68fb      	ldr	r3, [r7, #12]
 800b6a2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b6a6:	60fb      	str	r3, [r7, #12]
 800b6a8:	683b      	ldr	r3, [r7, #0]
 800b6aa:	685b      	ldr	r3, [r3, #4]
 800b6ac:	68fa      	ldr	r2, [r7, #12]
 800b6ae:	4313      	orrs	r3, r2
 800b6b0:	60fb      	str	r3, [r7, #12]
 800b6b2:	687b      	ldr	r3, [r7, #4]
 800b6b4:	4a2f      	ldr	r2, [pc, #188]	; (800b774 <TIM_Base_SetConfig+0x114>)
 800b6b6:	4293      	cmp	r3, r2
 800b6b8:	d02b      	beq.n	800b712 <TIM_Base_SetConfig+0xb2>
 800b6ba:	687b      	ldr	r3, [r7, #4]
 800b6bc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b6c0:	d027      	beq.n	800b712 <TIM_Base_SetConfig+0xb2>
 800b6c2:	687b      	ldr	r3, [r7, #4]
 800b6c4:	4a2c      	ldr	r2, [pc, #176]	; (800b778 <TIM_Base_SetConfig+0x118>)
 800b6c6:	4293      	cmp	r3, r2
 800b6c8:	d023      	beq.n	800b712 <TIM_Base_SetConfig+0xb2>
 800b6ca:	687b      	ldr	r3, [r7, #4]
 800b6cc:	4a2b      	ldr	r2, [pc, #172]	; (800b77c <TIM_Base_SetConfig+0x11c>)
 800b6ce:	4293      	cmp	r3, r2
 800b6d0:	d01f      	beq.n	800b712 <TIM_Base_SetConfig+0xb2>
 800b6d2:	687b      	ldr	r3, [r7, #4]
 800b6d4:	4a2a      	ldr	r2, [pc, #168]	; (800b780 <TIM_Base_SetConfig+0x120>)
 800b6d6:	4293      	cmp	r3, r2
 800b6d8:	d01b      	beq.n	800b712 <TIM_Base_SetConfig+0xb2>
 800b6da:	687b      	ldr	r3, [r7, #4]
 800b6dc:	4a29      	ldr	r2, [pc, #164]	; (800b784 <TIM_Base_SetConfig+0x124>)
 800b6de:	4293      	cmp	r3, r2
 800b6e0:	d017      	beq.n	800b712 <TIM_Base_SetConfig+0xb2>
 800b6e2:	687b      	ldr	r3, [r7, #4]
 800b6e4:	4a28      	ldr	r2, [pc, #160]	; (800b788 <TIM_Base_SetConfig+0x128>)
 800b6e6:	4293      	cmp	r3, r2
 800b6e8:	d013      	beq.n	800b712 <TIM_Base_SetConfig+0xb2>
 800b6ea:	687b      	ldr	r3, [r7, #4]
 800b6ec:	4a27      	ldr	r2, [pc, #156]	; (800b78c <TIM_Base_SetConfig+0x12c>)
 800b6ee:	4293      	cmp	r3, r2
 800b6f0:	d00f      	beq.n	800b712 <TIM_Base_SetConfig+0xb2>
 800b6f2:	687b      	ldr	r3, [r7, #4]
 800b6f4:	4a26      	ldr	r2, [pc, #152]	; (800b790 <TIM_Base_SetConfig+0x130>)
 800b6f6:	4293      	cmp	r3, r2
 800b6f8:	d00b      	beq.n	800b712 <TIM_Base_SetConfig+0xb2>
 800b6fa:	687b      	ldr	r3, [r7, #4]
 800b6fc:	4a25      	ldr	r2, [pc, #148]	; (800b794 <TIM_Base_SetConfig+0x134>)
 800b6fe:	4293      	cmp	r3, r2
 800b700:	d007      	beq.n	800b712 <TIM_Base_SetConfig+0xb2>
 800b702:	687b      	ldr	r3, [r7, #4]
 800b704:	4a24      	ldr	r2, [pc, #144]	; (800b798 <TIM_Base_SetConfig+0x138>)
 800b706:	4293      	cmp	r3, r2
 800b708:	d003      	beq.n	800b712 <TIM_Base_SetConfig+0xb2>
 800b70a:	687b      	ldr	r3, [r7, #4]
 800b70c:	4a23      	ldr	r2, [pc, #140]	; (800b79c <TIM_Base_SetConfig+0x13c>)
 800b70e:	4293      	cmp	r3, r2
 800b710:	d108      	bne.n	800b724 <TIM_Base_SetConfig+0xc4>
 800b712:	68fb      	ldr	r3, [r7, #12]
 800b714:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b718:	60fb      	str	r3, [r7, #12]
 800b71a:	683b      	ldr	r3, [r7, #0]
 800b71c:	68db      	ldr	r3, [r3, #12]
 800b71e:	68fa      	ldr	r2, [r7, #12]
 800b720:	4313      	orrs	r3, r2
 800b722:	60fb      	str	r3, [r7, #12]
 800b724:	68fb      	ldr	r3, [r7, #12]
 800b726:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800b72a:	683b      	ldr	r3, [r7, #0]
 800b72c:	695b      	ldr	r3, [r3, #20]
 800b72e:	4313      	orrs	r3, r2
 800b730:	60fb      	str	r3, [r7, #12]
 800b732:	687b      	ldr	r3, [r7, #4]
 800b734:	68fa      	ldr	r2, [r7, #12]
 800b736:	601a      	str	r2, [r3, #0]
 800b738:	683b      	ldr	r3, [r7, #0]
 800b73a:	689a      	ldr	r2, [r3, #8]
 800b73c:	687b      	ldr	r3, [r7, #4]
 800b73e:	62da      	str	r2, [r3, #44]	; 0x2c
 800b740:	683b      	ldr	r3, [r7, #0]
 800b742:	681a      	ldr	r2, [r3, #0]
 800b744:	687b      	ldr	r3, [r7, #4]
 800b746:	629a      	str	r2, [r3, #40]	; 0x28
 800b748:	687b      	ldr	r3, [r7, #4]
 800b74a:	4a0a      	ldr	r2, [pc, #40]	; (800b774 <TIM_Base_SetConfig+0x114>)
 800b74c:	4293      	cmp	r3, r2
 800b74e:	d003      	beq.n	800b758 <TIM_Base_SetConfig+0xf8>
 800b750:	687b      	ldr	r3, [r7, #4]
 800b752:	4a0c      	ldr	r2, [pc, #48]	; (800b784 <TIM_Base_SetConfig+0x124>)
 800b754:	4293      	cmp	r3, r2
 800b756:	d103      	bne.n	800b760 <TIM_Base_SetConfig+0x100>
 800b758:	683b      	ldr	r3, [r7, #0]
 800b75a:	691a      	ldr	r2, [r3, #16]
 800b75c:	687b      	ldr	r3, [r7, #4]
 800b75e:	631a      	str	r2, [r3, #48]	; 0x30
 800b760:	687b      	ldr	r3, [r7, #4]
 800b762:	2201      	movs	r2, #1
 800b764:	615a      	str	r2, [r3, #20]
 800b766:	bf00      	nop
 800b768:	3714      	adds	r7, #20
 800b76a:	46bd      	mov	sp, r7
 800b76c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b770:	4770      	bx	lr
 800b772:	bf00      	nop
 800b774:	40010000 	.word	0x40010000
 800b778:	40000400 	.word	0x40000400
 800b77c:	40000800 	.word	0x40000800
 800b780:	40000c00 	.word	0x40000c00
 800b784:	40010400 	.word	0x40010400
 800b788:	40014000 	.word	0x40014000
 800b78c:	40014400 	.word	0x40014400
 800b790:	40014800 	.word	0x40014800
 800b794:	40001800 	.word	0x40001800
 800b798:	40001c00 	.word	0x40001c00
 800b79c:	40002000 	.word	0x40002000

0800b7a0 <TIM_OC1_SetConfig>:
 800b7a0:	b480      	push	{r7}
 800b7a2:	b087      	sub	sp, #28
 800b7a4:	af00      	add	r7, sp, #0
 800b7a6:	6078      	str	r0, [r7, #4]
 800b7a8:	6039      	str	r1, [r7, #0]
 800b7aa:	687b      	ldr	r3, [r7, #4]
 800b7ac:	6a1b      	ldr	r3, [r3, #32]
 800b7ae:	f023 0201 	bic.w	r2, r3, #1
 800b7b2:	687b      	ldr	r3, [r7, #4]
 800b7b4:	621a      	str	r2, [r3, #32]
 800b7b6:	687b      	ldr	r3, [r7, #4]
 800b7b8:	6a1b      	ldr	r3, [r3, #32]
 800b7ba:	617b      	str	r3, [r7, #20]
 800b7bc:	687b      	ldr	r3, [r7, #4]
 800b7be:	685b      	ldr	r3, [r3, #4]
 800b7c0:	613b      	str	r3, [r7, #16]
 800b7c2:	687b      	ldr	r3, [r7, #4]
 800b7c4:	699b      	ldr	r3, [r3, #24]
 800b7c6:	60fb      	str	r3, [r7, #12]
 800b7c8:	68fb      	ldr	r3, [r7, #12]
 800b7ca:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b7ce:	60fb      	str	r3, [r7, #12]
 800b7d0:	68fb      	ldr	r3, [r7, #12]
 800b7d2:	f023 0303 	bic.w	r3, r3, #3
 800b7d6:	60fb      	str	r3, [r7, #12]
 800b7d8:	683b      	ldr	r3, [r7, #0]
 800b7da:	681b      	ldr	r3, [r3, #0]
 800b7dc:	68fa      	ldr	r2, [r7, #12]
 800b7de:	4313      	orrs	r3, r2
 800b7e0:	60fb      	str	r3, [r7, #12]
 800b7e2:	697b      	ldr	r3, [r7, #20]
 800b7e4:	f023 0302 	bic.w	r3, r3, #2
 800b7e8:	617b      	str	r3, [r7, #20]
 800b7ea:	683b      	ldr	r3, [r7, #0]
 800b7ec:	689b      	ldr	r3, [r3, #8]
 800b7ee:	697a      	ldr	r2, [r7, #20]
 800b7f0:	4313      	orrs	r3, r2
 800b7f2:	617b      	str	r3, [r7, #20]
 800b7f4:	687b      	ldr	r3, [r7, #4]
 800b7f6:	4a20      	ldr	r2, [pc, #128]	; (800b878 <TIM_OC1_SetConfig+0xd8>)
 800b7f8:	4293      	cmp	r3, r2
 800b7fa:	d003      	beq.n	800b804 <TIM_OC1_SetConfig+0x64>
 800b7fc:	687b      	ldr	r3, [r7, #4]
 800b7fe:	4a1f      	ldr	r2, [pc, #124]	; (800b87c <TIM_OC1_SetConfig+0xdc>)
 800b800:	4293      	cmp	r3, r2
 800b802:	d10c      	bne.n	800b81e <TIM_OC1_SetConfig+0x7e>
 800b804:	697b      	ldr	r3, [r7, #20]
 800b806:	f023 0308 	bic.w	r3, r3, #8
 800b80a:	617b      	str	r3, [r7, #20]
 800b80c:	683b      	ldr	r3, [r7, #0]
 800b80e:	68db      	ldr	r3, [r3, #12]
 800b810:	697a      	ldr	r2, [r7, #20]
 800b812:	4313      	orrs	r3, r2
 800b814:	617b      	str	r3, [r7, #20]
 800b816:	697b      	ldr	r3, [r7, #20]
 800b818:	f023 0304 	bic.w	r3, r3, #4
 800b81c:	617b      	str	r3, [r7, #20]
 800b81e:	687b      	ldr	r3, [r7, #4]
 800b820:	4a15      	ldr	r2, [pc, #84]	; (800b878 <TIM_OC1_SetConfig+0xd8>)
 800b822:	4293      	cmp	r3, r2
 800b824:	d003      	beq.n	800b82e <TIM_OC1_SetConfig+0x8e>
 800b826:	687b      	ldr	r3, [r7, #4]
 800b828:	4a14      	ldr	r2, [pc, #80]	; (800b87c <TIM_OC1_SetConfig+0xdc>)
 800b82a:	4293      	cmp	r3, r2
 800b82c:	d111      	bne.n	800b852 <TIM_OC1_SetConfig+0xb2>
 800b82e:	693b      	ldr	r3, [r7, #16]
 800b830:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800b834:	613b      	str	r3, [r7, #16]
 800b836:	693b      	ldr	r3, [r7, #16]
 800b838:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800b83c:	613b      	str	r3, [r7, #16]
 800b83e:	683b      	ldr	r3, [r7, #0]
 800b840:	695b      	ldr	r3, [r3, #20]
 800b842:	693a      	ldr	r2, [r7, #16]
 800b844:	4313      	orrs	r3, r2
 800b846:	613b      	str	r3, [r7, #16]
 800b848:	683b      	ldr	r3, [r7, #0]
 800b84a:	699b      	ldr	r3, [r3, #24]
 800b84c:	693a      	ldr	r2, [r7, #16]
 800b84e:	4313      	orrs	r3, r2
 800b850:	613b      	str	r3, [r7, #16]
 800b852:	687b      	ldr	r3, [r7, #4]
 800b854:	693a      	ldr	r2, [r7, #16]
 800b856:	605a      	str	r2, [r3, #4]
 800b858:	687b      	ldr	r3, [r7, #4]
 800b85a:	68fa      	ldr	r2, [r7, #12]
 800b85c:	619a      	str	r2, [r3, #24]
 800b85e:	683b      	ldr	r3, [r7, #0]
 800b860:	685a      	ldr	r2, [r3, #4]
 800b862:	687b      	ldr	r3, [r7, #4]
 800b864:	635a      	str	r2, [r3, #52]	; 0x34
 800b866:	687b      	ldr	r3, [r7, #4]
 800b868:	697a      	ldr	r2, [r7, #20]
 800b86a:	621a      	str	r2, [r3, #32]
 800b86c:	bf00      	nop
 800b86e:	371c      	adds	r7, #28
 800b870:	46bd      	mov	sp, r7
 800b872:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b876:	4770      	bx	lr
 800b878:	40010000 	.word	0x40010000
 800b87c:	40010400 	.word	0x40010400

0800b880 <TIM_OC2_SetConfig>:
 800b880:	b480      	push	{r7}
 800b882:	b087      	sub	sp, #28
 800b884:	af00      	add	r7, sp, #0
 800b886:	6078      	str	r0, [r7, #4]
 800b888:	6039      	str	r1, [r7, #0]
 800b88a:	687b      	ldr	r3, [r7, #4]
 800b88c:	6a1b      	ldr	r3, [r3, #32]
 800b88e:	f023 0210 	bic.w	r2, r3, #16
 800b892:	687b      	ldr	r3, [r7, #4]
 800b894:	621a      	str	r2, [r3, #32]
 800b896:	687b      	ldr	r3, [r7, #4]
 800b898:	6a1b      	ldr	r3, [r3, #32]
 800b89a:	617b      	str	r3, [r7, #20]
 800b89c:	687b      	ldr	r3, [r7, #4]
 800b89e:	685b      	ldr	r3, [r3, #4]
 800b8a0:	613b      	str	r3, [r7, #16]
 800b8a2:	687b      	ldr	r3, [r7, #4]
 800b8a4:	699b      	ldr	r3, [r3, #24]
 800b8a6:	60fb      	str	r3, [r7, #12]
 800b8a8:	68fb      	ldr	r3, [r7, #12]
 800b8aa:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800b8ae:	60fb      	str	r3, [r7, #12]
 800b8b0:	68fb      	ldr	r3, [r7, #12]
 800b8b2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b8b6:	60fb      	str	r3, [r7, #12]
 800b8b8:	683b      	ldr	r3, [r7, #0]
 800b8ba:	681b      	ldr	r3, [r3, #0]
 800b8bc:	021b      	lsls	r3, r3, #8
 800b8be:	68fa      	ldr	r2, [r7, #12]
 800b8c0:	4313      	orrs	r3, r2
 800b8c2:	60fb      	str	r3, [r7, #12]
 800b8c4:	697b      	ldr	r3, [r7, #20]
 800b8c6:	f023 0320 	bic.w	r3, r3, #32
 800b8ca:	617b      	str	r3, [r7, #20]
 800b8cc:	683b      	ldr	r3, [r7, #0]
 800b8ce:	689b      	ldr	r3, [r3, #8]
 800b8d0:	011b      	lsls	r3, r3, #4
 800b8d2:	697a      	ldr	r2, [r7, #20]
 800b8d4:	4313      	orrs	r3, r2
 800b8d6:	617b      	str	r3, [r7, #20]
 800b8d8:	687b      	ldr	r3, [r7, #4]
 800b8da:	4a22      	ldr	r2, [pc, #136]	; (800b964 <TIM_OC2_SetConfig+0xe4>)
 800b8dc:	4293      	cmp	r3, r2
 800b8de:	d003      	beq.n	800b8e8 <TIM_OC2_SetConfig+0x68>
 800b8e0:	687b      	ldr	r3, [r7, #4]
 800b8e2:	4a21      	ldr	r2, [pc, #132]	; (800b968 <TIM_OC2_SetConfig+0xe8>)
 800b8e4:	4293      	cmp	r3, r2
 800b8e6:	d10d      	bne.n	800b904 <TIM_OC2_SetConfig+0x84>
 800b8e8:	697b      	ldr	r3, [r7, #20]
 800b8ea:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800b8ee:	617b      	str	r3, [r7, #20]
 800b8f0:	683b      	ldr	r3, [r7, #0]
 800b8f2:	68db      	ldr	r3, [r3, #12]
 800b8f4:	011b      	lsls	r3, r3, #4
 800b8f6:	697a      	ldr	r2, [r7, #20]
 800b8f8:	4313      	orrs	r3, r2
 800b8fa:	617b      	str	r3, [r7, #20]
 800b8fc:	697b      	ldr	r3, [r7, #20]
 800b8fe:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b902:	617b      	str	r3, [r7, #20]
 800b904:	687b      	ldr	r3, [r7, #4]
 800b906:	4a17      	ldr	r2, [pc, #92]	; (800b964 <TIM_OC2_SetConfig+0xe4>)
 800b908:	4293      	cmp	r3, r2
 800b90a:	d003      	beq.n	800b914 <TIM_OC2_SetConfig+0x94>
 800b90c:	687b      	ldr	r3, [r7, #4]
 800b90e:	4a16      	ldr	r2, [pc, #88]	; (800b968 <TIM_OC2_SetConfig+0xe8>)
 800b910:	4293      	cmp	r3, r2
 800b912:	d113      	bne.n	800b93c <TIM_OC2_SetConfig+0xbc>
 800b914:	693b      	ldr	r3, [r7, #16]
 800b916:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b91a:	613b      	str	r3, [r7, #16]
 800b91c:	693b      	ldr	r3, [r7, #16]
 800b91e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b922:	613b      	str	r3, [r7, #16]
 800b924:	683b      	ldr	r3, [r7, #0]
 800b926:	695b      	ldr	r3, [r3, #20]
 800b928:	009b      	lsls	r3, r3, #2
 800b92a:	693a      	ldr	r2, [r7, #16]
 800b92c:	4313      	orrs	r3, r2
 800b92e:	613b      	str	r3, [r7, #16]
 800b930:	683b      	ldr	r3, [r7, #0]
 800b932:	699b      	ldr	r3, [r3, #24]
 800b934:	009b      	lsls	r3, r3, #2
 800b936:	693a      	ldr	r2, [r7, #16]
 800b938:	4313      	orrs	r3, r2
 800b93a:	613b      	str	r3, [r7, #16]
 800b93c:	687b      	ldr	r3, [r7, #4]
 800b93e:	693a      	ldr	r2, [r7, #16]
 800b940:	605a      	str	r2, [r3, #4]
 800b942:	687b      	ldr	r3, [r7, #4]
 800b944:	68fa      	ldr	r2, [r7, #12]
 800b946:	619a      	str	r2, [r3, #24]
 800b948:	683b      	ldr	r3, [r7, #0]
 800b94a:	685a      	ldr	r2, [r3, #4]
 800b94c:	687b      	ldr	r3, [r7, #4]
 800b94e:	639a      	str	r2, [r3, #56]	; 0x38
 800b950:	687b      	ldr	r3, [r7, #4]
 800b952:	697a      	ldr	r2, [r7, #20]
 800b954:	621a      	str	r2, [r3, #32]
 800b956:	bf00      	nop
 800b958:	371c      	adds	r7, #28
 800b95a:	46bd      	mov	sp, r7
 800b95c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b960:	4770      	bx	lr
 800b962:	bf00      	nop
 800b964:	40010000 	.word	0x40010000
 800b968:	40010400 	.word	0x40010400

0800b96c <TIM_OC3_SetConfig>:
 800b96c:	b480      	push	{r7}
 800b96e:	b087      	sub	sp, #28
 800b970:	af00      	add	r7, sp, #0
 800b972:	6078      	str	r0, [r7, #4]
 800b974:	6039      	str	r1, [r7, #0]
 800b976:	687b      	ldr	r3, [r7, #4]
 800b978:	6a1b      	ldr	r3, [r3, #32]
 800b97a:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800b97e:	687b      	ldr	r3, [r7, #4]
 800b980:	621a      	str	r2, [r3, #32]
 800b982:	687b      	ldr	r3, [r7, #4]
 800b984:	6a1b      	ldr	r3, [r3, #32]
 800b986:	617b      	str	r3, [r7, #20]
 800b988:	687b      	ldr	r3, [r7, #4]
 800b98a:	685b      	ldr	r3, [r3, #4]
 800b98c:	613b      	str	r3, [r7, #16]
 800b98e:	687b      	ldr	r3, [r7, #4]
 800b990:	69db      	ldr	r3, [r3, #28]
 800b992:	60fb      	str	r3, [r7, #12]
 800b994:	68fb      	ldr	r3, [r7, #12]
 800b996:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b99a:	60fb      	str	r3, [r7, #12]
 800b99c:	68fb      	ldr	r3, [r7, #12]
 800b99e:	f023 0303 	bic.w	r3, r3, #3
 800b9a2:	60fb      	str	r3, [r7, #12]
 800b9a4:	683b      	ldr	r3, [r7, #0]
 800b9a6:	681b      	ldr	r3, [r3, #0]
 800b9a8:	68fa      	ldr	r2, [r7, #12]
 800b9aa:	4313      	orrs	r3, r2
 800b9ac:	60fb      	str	r3, [r7, #12]
 800b9ae:	697b      	ldr	r3, [r7, #20]
 800b9b0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800b9b4:	617b      	str	r3, [r7, #20]
 800b9b6:	683b      	ldr	r3, [r7, #0]
 800b9b8:	689b      	ldr	r3, [r3, #8]
 800b9ba:	021b      	lsls	r3, r3, #8
 800b9bc:	697a      	ldr	r2, [r7, #20]
 800b9be:	4313      	orrs	r3, r2
 800b9c0:	617b      	str	r3, [r7, #20]
 800b9c2:	687b      	ldr	r3, [r7, #4]
 800b9c4:	4a21      	ldr	r2, [pc, #132]	; (800ba4c <TIM_OC3_SetConfig+0xe0>)
 800b9c6:	4293      	cmp	r3, r2
 800b9c8:	d003      	beq.n	800b9d2 <TIM_OC3_SetConfig+0x66>
 800b9ca:	687b      	ldr	r3, [r7, #4]
 800b9cc:	4a20      	ldr	r2, [pc, #128]	; (800ba50 <TIM_OC3_SetConfig+0xe4>)
 800b9ce:	4293      	cmp	r3, r2
 800b9d0:	d10d      	bne.n	800b9ee <TIM_OC3_SetConfig+0x82>
 800b9d2:	697b      	ldr	r3, [r7, #20]
 800b9d4:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b9d8:	617b      	str	r3, [r7, #20]
 800b9da:	683b      	ldr	r3, [r7, #0]
 800b9dc:	68db      	ldr	r3, [r3, #12]
 800b9de:	021b      	lsls	r3, r3, #8
 800b9e0:	697a      	ldr	r2, [r7, #20]
 800b9e2:	4313      	orrs	r3, r2
 800b9e4:	617b      	str	r3, [r7, #20]
 800b9e6:	697b      	ldr	r3, [r7, #20]
 800b9e8:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b9ec:	617b      	str	r3, [r7, #20]
 800b9ee:	687b      	ldr	r3, [r7, #4]
 800b9f0:	4a16      	ldr	r2, [pc, #88]	; (800ba4c <TIM_OC3_SetConfig+0xe0>)
 800b9f2:	4293      	cmp	r3, r2
 800b9f4:	d003      	beq.n	800b9fe <TIM_OC3_SetConfig+0x92>
 800b9f6:	687b      	ldr	r3, [r7, #4]
 800b9f8:	4a15      	ldr	r2, [pc, #84]	; (800ba50 <TIM_OC3_SetConfig+0xe4>)
 800b9fa:	4293      	cmp	r3, r2
 800b9fc:	d113      	bne.n	800ba26 <TIM_OC3_SetConfig+0xba>
 800b9fe:	693b      	ldr	r3, [r7, #16]
 800ba00:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800ba04:	613b      	str	r3, [r7, #16]
 800ba06:	693b      	ldr	r3, [r7, #16]
 800ba08:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800ba0c:	613b      	str	r3, [r7, #16]
 800ba0e:	683b      	ldr	r3, [r7, #0]
 800ba10:	695b      	ldr	r3, [r3, #20]
 800ba12:	011b      	lsls	r3, r3, #4
 800ba14:	693a      	ldr	r2, [r7, #16]
 800ba16:	4313      	orrs	r3, r2
 800ba18:	613b      	str	r3, [r7, #16]
 800ba1a:	683b      	ldr	r3, [r7, #0]
 800ba1c:	699b      	ldr	r3, [r3, #24]
 800ba1e:	011b      	lsls	r3, r3, #4
 800ba20:	693a      	ldr	r2, [r7, #16]
 800ba22:	4313      	orrs	r3, r2
 800ba24:	613b      	str	r3, [r7, #16]
 800ba26:	687b      	ldr	r3, [r7, #4]
 800ba28:	693a      	ldr	r2, [r7, #16]
 800ba2a:	605a      	str	r2, [r3, #4]
 800ba2c:	687b      	ldr	r3, [r7, #4]
 800ba2e:	68fa      	ldr	r2, [r7, #12]
 800ba30:	61da      	str	r2, [r3, #28]
 800ba32:	683b      	ldr	r3, [r7, #0]
 800ba34:	685a      	ldr	r2, [r3, #4]
 800ba36:	687b      	ldr	r3, [r7, #4]
 800ba38:	63da      	str	r2, [r3, #60]	; 0x3c
 800ba3a:	687b      	ldr	r3, [r7, #4]
 800ba3c:	697a      	ldr	r2, [r7, #20]
 800ba3e:	621a      	str	r2, [r3, #32]
 800ba40:	bf00      	nop
 800ba42:	371c      	adds	r7, #28
 800ba44:	46bd      	mov	sp, r7
 800ba46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba4a:	4770      	bx	lr
 800ba4c:	40010000 	.word	0x40010000
 800ba50:	40010400 	.word	0x40010400

0800ba54 <TIM_OC4_SetConfig>:
 800ba54:	b480      	push	{r7}
 800ba56:	b087      	sub	sp, #28
 800ba58:	af00      	add	r7, sp, #0
 800ba5a:	6078      	str	r0, [r7, #4]
 800ba5c:	6039      	str	r1, [r7, #0]
 800ba5e:	687b      	ldr	r3, [r7, #4]
 800ba60:	6a1b      	ldr	r3, [r3, #32]
 800ba62:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800ba66:	687b      	ldr	r3, [r7, #4]
 800ba68:	621a      	str	r2, [r3, #32]
 800ba6a:	687b      	ldr	r3, [r7, #4]
 800ba6c:	6a1b      	ldr	r3, [r3, #32]
 800ba6e:	613b      	str	r3, [r7, #16]
 800ba70:	687b      	ldr	r3, [r7, #4]
 800ba72:	685b      	ldr	r3, [r3, #4]
 800ba74:	617b      	str	r3, [r7, #20]
 800ba76:	687b      	ldr	r3, [r7, #4]
 800ba78:	69db      	ldr	r3, [r3, #28]
 800ba7a:	60fb      	str	r3, [r7, #12]
 800ba7c:	68fb      	ldr	r3, [r7, #12]
 800ba7e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800ba82:	60fb      	str	r3, [r7, #12]
 800ba84:	68fb      	ldr	r3, [r7, #12]
 800ba86:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800ba8a:	60fb      	str	r3, [r7, #12]
 800ba8c:	683b      	ldr	r3, [r7, #0]
 800ba8e:	681b      	ldr	r3, [r3, #0]
 800ba90:	021b      	lsls	r3, r3, #8
 800ba92:	68fa      	ldr	r2, [r7, #12]
 800ba94:	4313      	orrs	r3, r2
 800ba96:	60fb      	str	r3, [r7, #12]
 800ba98:	693b      	ldr	r3, [r7, #16]
 800ba9a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800ba9e:	613b      	str	r3, [r7, #16]
 800baa0:	683b      	ldr	r3, [r7, #0]
 800baa2:	689b      	ldr	r3, [r3, #8]
 800baa4:	031b      	lsls	r3, r3, #12
 800baa6:	693a      	ldr	r2, [r7, #16]
 800baa8:	4313      	orrs	r3, r2
 800baaa:	613b      	str	r3, [r7, #16]
 800baac:	687b      	ldr	r3, [r7, #4]
 800baae:	4a12      	ldr	r2, [pc, #72]	; (800baf8 <TIM_OC4_SetConfig+0xa4>)
 800bab0:	4293      	cmp	r3, r2
 800bab2:	d003      	beq.n	800babc <TIM_OC4_SetConfig+0x68>
 800bab4:	687b      	ldr	r3, [r7, #4]
 800bab6:	4a11      	ldr	r2, [pc, #68]	; (800bafc <TIM_OC4_SetConfig+0xa8>)
 800bab8:	4293      	cmp	r3, r2
 800baba:	d109      	bne.n	800bad0 <TIM_OC4_SetConfig+0x7c>
 800babc:	697b      	ldr	r3, [r7, #20]
 800babe:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800bac2:	617b      	str	r3, [r7, #20]
 800bac4:	683b      	ldr	r3, [r7, #0]
 800bac6:	695b      	ldr	r3, [r3, #20]
 800bac8:	019b      	lsls	r3, r3, #6
 800baca:	697a      	ldr	r2, [r7, #20]
 800bacc:	4313      	orrs	r3, r2
 800bace:	617b      	str	r3, [r7, #20]
 800bad0:	687b      	ldr	r3, [r7, #4]
 800bad2:	697a      	ldr	r2, [r7, #20]
 800bad4:	605a      	str	r2, [r3, #4]
 800bad6:	687b      	ldr	r3, [r7, #4]
 800bad8:	68fa      	ldr	r2, [r7, #12]
 800bada:	61da      	str	r2, [r3, #28]
 800badc:	683b      	ldr	r3, [r7, #0]
 800bade:	685a      	ldr	r2, [r3, #4]
 800bae0:	687b      	ldr	r3, [r7, #4]
 800bae2:	641a      	str	r2, [r3, #64]	; 0x40
 800bae4:	687b      	ldr	r3, [r7, #4]
 800bae6:	693a      	ldr	r2, [r7, #16]
 800bae8:	621a      	str	r2, [r3, #32]
 800baea:	bf00      	nop
 800baec:	371c      	adds	r7, #28
 800baee:	46bd      	mov	sp, r7
 800baf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800baf4:	4770      	bx	lr
 800baf6:	bf00      	nop
 800baf8:	40010000 	.word	0x40010000
 800bafc:	40010400 	.word	0x40010400

0800bb00 <TIM_TI1_SetConfig>:
 800bb00:	b480      	push	{r7}
 800bb02:	b087      	sub	sp, #28
 800bb04:	af00      	add	r7, sp, #0
 800bb06:	60f8      	str	r0, [r7, #12]
 800bb08:	60b9      	str	r1, [r7, #8]
 800bb0a:	607a      	str	r2, [r7, #4]
 800bb0c:	603b      	str	r3, [r7, #0]
 800bb0e:	68fb      	ldr	r3, [r7, #12]
 800bb10:	6a1b      	ldr	r3, [r3, #32]
 800bb12:	f023 0201 	bic.w	r2, r3, #1
 800bb16:	68fb      	ldr	r3, [r7, #12]
 800bb18:	621a      	str	r2, [r3, #32]
 800bb1a:	68fb      	ldr	r3, [r7, #12]
 800bb1c:	699b      	ldr	r3, [r3, #24]
 800bb1e:	617b      	str	r3, [r7, #20]
 800bb20:	68fb      	ldr	r3, [r7, #12]
 800bb22:	6a1b      	ldr	r3, [r3, #32]
 800bb24:	613b      	str	r3, [r7, #16]
 800bb26:	68fb      	ldr	r3, [r7, #12]
 800bb28:	4a28      	ldr	r2, [pc, #160]	; (800bbcc <TIM_TI1_SetConfig+0xcc>)
 800bb2a:	4293      	cmp	r3, r2
 800bb2c:	d01b      	beq.n	800bb66 <TIM_TI1_SetConfig+0x66>
 800bb2e:	68fb      	ldr	r3, [r7, #12]
 800bb30:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800bb34:	d017      	beq.n	800bb66 <TIM_TI1_SetConfig+0x66>
 800bb36:	68fb      	ldr	r3, [r7, #12]
 800bb38:	4a25      	ldr	r2, [pc, #148]	; (800bbd0 <TIM_TI1_SetConfig+0xd0>)
 800bb3a:	4293      	cmp	r3, r2
 800bb3c:	d013      	beq.n	800bb66 <TIM_TI1_SetConfig+0x66>
 800bb3e:	68fb      	ldr	r3, [r7, #12]
 800bb40:	4a24      	ldr	r2, [pc, #144]	; (800bbd4 <TIM_TI1_SetConfig+0xd4>)
 800bb42:	4293      	cmp	r3, r2
 800bb44:	d00f      	beq.n	800bb66 <TIM_TI1_SetConfig+0x66>
 800bb46:	68fb      	ldr	r3, [r7, #12]
 800bb48:	4a23      	ldr	r2, [pc, #140]	; (800bbd8 <TIM_TI1_SetConfig+0xd8>)
 800bb4a:	4293      	cmp	r3, r2
 800bb4c:	d00b      	beq.n	800bb66 <TIM_TI1_SetConfig+0x66>
 800bb4e:	68fb      	ldr	r3, [r7, #12]
 800bb50:	4a22      	ldr	r2, [pc, #136]	; (800bbdc <TIM_TI1_SetConfig+0xdc>)
 800bb52:	4293      	cmp	r3, r2
 800bb54:	d007      	beq.n	800bb66 <TIM_TI1_SetConfig+0x66>
 800bb56:	68fb      	ldr	r3, [r7, #12]
 800bb58:	4a21      	ldr	r2, [pc, #132]	; (800bbe0 <TIM_TI1_SetConfig+0xe0>)
 800bb5a:	4293      	cmp	r3, r2
 800bb5c:	d003      	beq.n	800bb66 <TIM_TI1_SetConfig+0x66>
 800bb5e:	68fb      	ldr	r3, [r7, #12]
 800bb60:	4a20      	ldr	r2, [pc, #128]	; (800bbe4 <TIM_TI1_SetConfig+0xe4>)
 800bb62:	4293      	cmp	r3, r2
 800bb64:	d101      	bne.n	800bb6a <TIM_TI1_SetConfig+0x6a>
 800bb66:	2301      	movs	r3, #1
 800bb68:	e000      	b.n	800bb6c <TIM_TI1_SetConfig+0x6c>
 800bb6a:	2300      	movs	r3, #0
 800bb6c:	2b00      	cmp	r3, #0
 800bb6e:	d008      	beq.n	800bb82 <TIM_TI1_SetConfig+0x82>
 800bb70:	697b      	ldr	r3, [r7, #20]
 800bb72:	f023 0303 	bic.w	r3, r3, #3
 800bb76:	617b      	str	r3, [r7, #20]
 800bb78:	697a      	ldr	r2, [r7, #20]
 800bb7a:	687b      	ldr	r3, [r7, #4]
 800bb7c:	4313      	orrs	r3, r2
 800bb7e:	617b      	str	r3, [r7, #20]
 800bb80:	e003      	b.n	800bb8a <TIM_TI1_SetConfig+0x8a>
 800bb82:	697b      	ldr	r3, [r7, #20]
 800bb84:	f043 0301 	orr.w	r3, r3, #1
 800bb88:	617b      	str	r3, [r7, #20]
 800bb8a:	697b      	ldr	r3, [r7, #20]
 800bb8c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800bb90:	617b      	str	r3, [r7, #20]
 800bb92:	683b      	ldr	r3, [r7, #0]
 800bb94:	011b      	lsls	r3, r3, #4
 800bb96:	b2db      	uxtb	r3, r3
 800bb98:	697a      	ldr	r2, [r7, #20]
 800bb9a:	4313      	orrs	r3, r2
 800bb9c:	617b      	str	r3, [r7, #20]
 800bb9e:	693b      	ldr	r3, [r7, #16]
 800bba0:	f023 030a 	bic.w	r3, r3, #10
 800bba4:	613b      	str	r3, [r7, #16]
 800bba6:	68bb      	ldr	r3, [r7, #8]
 800bba8:	f003 030a 	and.w	r3, r3, #10
 800bbac:	693a      	ldr	r2, [r7, #16]
 800bbae:	4313      	orrs	r3, r2
 800bbb0:	613b      	str	r3, [r7, #16]
 800bbb2:	68fb      	ldr	r3, [r7, #12]
 800bbb4:	697a      	ldr	r2, [r7, #20]
 800bbb6:	619a      	str	r2, [r3, #24]
 800bbb8:	68fb      	ldr	r3, [r7, #12]
 800bbba:	693a      	ldr	r2, [r7, #16]
 800bbbc:	621a      	str	r2, [r3, #32]
 800bbbe:	bf00      	nop
 800bbc0:	371c      	adds	r7, #28
 800bbc2:	46bd      	mov	sp, r7
 800bbc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bbc8:	4770      	bx	lr
 800bbca:	bf00      	nop
 800bbcc:	40010000 	.word	0x40010000
 800bbd0:	40000400 	.word	0x40000400
 800bbd4:	40000800 	.word	0x40000800
 800bbd8:	40000c00 	.word	0x40000c00
 800bbdc:	40010400 	.word	0x40010400
 800bbe0:	40014000 	.word	0x40014000
 800bbe4:	40001800 	.word	0x40001800

0800bbe8 <TIM_TI1_ConfigInputStage>:
 800bbe8:	b480      	push	{r7}
 800bbea:	b087      	sub	sp, #28
 800bbec:	af00      	add	r7, sp, #0
 800bbee:	60f8      	str	r0, [r7, #12]
 800bbf0:	60b9      	str	r1, [r7, #8]
 800bbf2:	607a      	str	r2, [r7, #4]
 800bbf4:	68fb      	ldr	r3, [r7, #12]
 800bbf6:	6a1b      	ldr	r3, [r3, #32]
 800bbf8:	617b      	str	r3, [r7, #20]
 800bbfa:	68fb      	ldr	r3, [r7, #12]
 800bbfc:	6a1b      	ldr	r3, [r3, #32]
 800bbfe:	f023 0201 	bic.w	r2, r3, #1
 800bc02:	68fb      	ldr	r3, [r7, #12]
 800bc04:	621a      	str	r2, [r3, #32]
 800bc06:	68fb      	ldr	r3, [r7, #12]
 800bc08:	699b      	ldr	r3, [r3, #24]
 800bc0a:	613b      	str	r3, [r7, #16]
 800bc0c:	693b      	ldr	r3, [r7, #16]
 800bc0e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800bc12:	613b      	str	r3, [r7, #16]
 800bc14:	687b      	ldr	r3, [r7, #4]
 800bc16:	011b      	lsls	r3, r3, #4
 800bc18:	693a      	ldr	r2, [r7, #16]
 800bc1a:	4313      	orrs	r3, r2
 800bc1c:	613b      	str	r3, [r7, #16]
 800bc1e:	697b      	ldr	r3, [r7, #20]
 800bc20:	f023 030a 	bic.w	r3, r3, #10
 800bc24:	617b      	str	r3, [r7, #20]
 800bc26:	697a      	ldr	r2, [r7, #20]
 800bc28:	68bb      	ldr	r3, [r7, #8]
 800bc2a:	4313      	orrs	r3, r2
 800bc2c:	617b      	str	r3, [r7, #20]
 800bc2e:	68fb      	ldr	r3, [r7, #12]
 800bc30:	693a      	ldr	r2, [r7, #16]
 800bc32:	619a      	str	r2, [r3, #24]
 800bc34:	68fb      	ldr	r3, [r7, #12]
 800bc36:	697a      	ldr	r2, [r7, #20]
 800bc38:	621a      	str	r2, [r3, #32]
 800bc3a:	bf00      	nop
 800bc3c:	371c      	adds	r7, #28
 800bc3e:	46bd      	mov	sp, r7
 800bc40:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc44:	4770      	bx	lr

0800bc46 <TIM_TI2_SetConfig>:
 800bc46:	b480      	push	{r7}
 800bc48:	b087      	sub	sp, #28
 800bc4a:	af00      	add	r7, sp, #0
 800bc4c:	60f8      	str	r0, [r7, #12]
 800bc4e:	60b9      	str	r1, [r7, #8]
 800bc50:	607a      	str	r2, [r7, #4]
 800bc52:	603b      	str	r3, [r7, #0]
 800bc54:	68fb      	ldr	r3, [r7, #12]
 800bc56:	6a1b      	ldr	r3, [r3, #32]
 800bc58:	f023 0210 	bic.w	r2, r3, #16
 800bc5c:	68fb      	ldr	r3, [r7, #12]
 800bc5e:	621a      	str	r2, [r3, #32]
 800bc60:	68fb      	ldr	r3, [r7, #12]
 800bc62:	699b      	ldr	r3, [r3, #24]
 800bc64:	617b      	str	r3, [r7, #20]
 800bc66:	68fb      	ldr	r3, [r7, #12]
 800bc68:	6a1b      	ldr	r3, [r3, #32]
 800bc6a:	613b      	str	r3, [r7, #16]
 800bc6c:	697b      	ldr	r3, [r7, #20]
 800bc6e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800bc72:	617b      	str	r3, [r7, #20]
 800bc74:	687b      	ldr	r3, [r7, #4]
 800bc76:	021b      	lsls	r3, r3, #8
 800bc78:	697a      	ldr	r2, [r7, #20]
 800bc7a:	4313      	orrs	r3, r2
 800bc7c:	617b      	str	r3, [r7, #20]
 800bc7e:	697b      	ldr	r3, [r7, #20]
 800bc80:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800bc84:	617b      	str	r3, [r7, #20]
 800bc86:	683b      	ldr	r3, [r7, #0]
 800bc88:	031b      	lsls	r3, r3, #12
 800bc8a:	b29b      	uxth	r3, r3
 800bc8c:	697a      	ldr	r2, [r7, #20]
 800bc8e:	4313      	orrs	r3, r2
 800bc90:	617b      	str	r3, [r7, #20]
 800bc92:	693b      	ldr	r3, [r7, #16]
 800bc94:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800bc98:	613b      	str	r3, [r7, #16]
 800bc9a:	68bb      	ldr	r3, [r7, #8]
 800bc9c:	011b      	lsls	r3, r3, #4
 800bc9e:	f003 03a0 	and.w	r3, r3, #160	; 0xa0
 800bca2:	693a      	ldr	r2, [r7, #16]
 800bca4:	4313      	orrs	r3, r2
 800bca6:	613b      	str	r3, [r7, #16]
 800bca8:	68fb      	ldr	r3, [r7, #12]
 800bcaa:	697a      	ldr	r2, [r7, #20]
 800bcac:	619a      	str	r2, [r3, #24]
 800bcae:	68fb      	ldr	r3, [r7, #12]
 800bcb0:	693a      	ldr	r2, [r7, #16]
 800bcb2:	621a      	str	r2, [r3, #32]
 800bcb4:	bf00      	nop
 800bcb6:	371c      	adds	r7, #28
 800bcb8:	46bd      	mov	sp, r7
 800bcba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcbe:	4770      	bx	lr

0800bcc0 <TIM_TI2_ConfigInputStage>:
 800bcc0:	b480      	push	{r7}
 800bcc2:	b087      	sub	sp, #28
 800bcc4:	af00      	add	r7, sp, #0
 800bcc6:	60f8      	str	r0, [r7, #12]
 800bcc8:	60b9      	str	r1, [r7, #8]
 800bcca:	607a      	str	r2, [r7, #4]
 800bccc:	68fb      	ldr	r3, [r7, #12]
 800bcce:	6a1b      	ldr	r3, [r3, #32]
 800bcd0:	f023 0210 	bic.w	r2, r3, #16
 800bcd4:	68fb      	ldr	r3, [r7, #12]
 800bcd6:	621a      	str	r2, [r3, #32]
 800bcd8:	68fb      	ldr	r3, [r7, #12]
 800bcda:	699b      	ldr	r3, [r3, #24]
 800bcdc:	617b      	str	r3, [r7, #20]
 800bcde:	68fb      	ldr	r3, [r7, #12]
 800bce0:	6a1b      	ldr	r3, [r3, #32]
 800bce2:	613b      	str	r3, [r7, #16]
 800bce4:	697b      	ldr	r3, [r7, #20]
 800bce6:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800bcea:	617b      	str	r3, [r7, #20]
 800bcec:	687b      	ldr	r3, [r7, #4]
 800bcee:	031b      	lsls	r3, r3, #12
 800bcf0:	697a      	ldr	r2, [r7, #20]
 800bcf2:	4313      	orrs	r3, r2
 800bcf4:	617b      	str	r3, [r7, #20]
 800bcf6:	693b      	ldr	r3, [r7, #16]
 800bcf8:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800bcfc:	613b      	str	r3, [r7, #16]
 800bcfe:	68bb      	ldr	r3, [r7, #8]
 800bd00:	011b      	lsls	r3, r3, #4
 800bd02:	693a      	ldr	r2, [r7, #16]
 800bd04:	4313      	orrs	r3, r2
 800bd06:	613b      	str	r3, [r7, #16]
 800bd08:	68fb      	ldr	r3, [r7, #12]
 800bd0a:	697a      	ldr	r2, [r7, #20]
 800bd0c:	619a      	str	r2, [r3, #24]
 800bd0e:	68fb      	ldr	r3, [r7, #12]
 800bd10:	693a      	ldr	r2, [r7, #16]
 800bd12:	621a      	str	r2, [r3, #32]
 800bd14:	bf00      	nop
 800bd16:	371c      	adds	r7, #28
 800bd18:	46bd      	mov	sp, r7
 800bd1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd1e:	4770      	bx	lr

0800bd20 <TIM_TI3_SetConfig>:
 800bd20:	b480      	push	{r7}
 800bd22:	b087      	sub	sp, #28
 800bd24:	af00      	add	r7, sp, #0
 800bd26:	60f8      	str	r0, [r7, #12]
 800bd28:	60b9      	str	r1, [r7, #8]
 800bd2a:	607a      	str	r2, [r7, #4]
 800bd2c:	603b      	str	r3, [r7, #0]
 800bd2e:	68fb      	ldr	r3, [r7, #12]
 800bd30:	6a1b      	ldr	r3, [r3, #32]
 800bd32:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800bd36:	68fb      	ldr	r3, [r7, #12]
 800bd38:	621a      	str	r2, [r3, #32]
 800bd3a:	68fb      	ldr	r3, [r7, #12]
 800bd3c:	69db      	ldr	r3, [r3, #28]
 800bd3e:	617b      	str	r3, [r7, #20]
 800bd40:	68fb      	ldr	r3, [r7, #12]
 800bd42:	6a1b      	ldr	r3, [r3, #32]
 800bd44:	613b      	str	r3, [r7, #16]
 800bd46:	697b      	ldr	r3, [r7, #20]
 800bd48:	f023 0303 	bic.w	r3, r3, #3
 800bd4c:	617b      	str	r3, [r7, #20]
 800bd4e:	697a      	ldr	r2, [r7, #20]
 800bd50:	687b      	ldr	r3, [r7, #4]
 800bd52:	4313      	orrs	r3, r2
 800bd54:	617b      	str	r3, [r7, #20]
 800bd56:	697b      	ldr	r3, [r7, #20]
 800bd58:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800bd5c:	617b      	str	r3, [r7, #20]
 800bd5e:	683b      	ldr	r3, [r7, #0]
 800bd60:	011b      	lsls	r3, r3, #4
 800bd62:	b2db      	uxtb	r3, r3
 800bd64:	697a      	ldr	r2, [r7, #20]
 800bd66:	4313      	orrs	r3, r2
 800bd68:	617b      	str	r3, [r7, #20]
 800bd6a:	693b      	ldr	r3, [r7, #16]
 800bd6c:	f423 6320 	bic.w	r3, r3, #2560	; 0xa00
 800bd70:	613b      	str	r3, [r7, #16]
 800bd72:	68bb      	ldr	r3, [r7, #8]
 800bd74:	021b      	lsls	r3, r3, #8
 800bd76:	f403 6320 	and.w	r3, r3, #2560	; 0xa00
 800bd7a:	693a      	ldr	r2, [r7, #16]
 800bd7c:	4313      	orrs	r3, r2
 800bd7e:	613b      	str	r3, [r7, #16]
 800bd80:	68fb      	ldr	r3, [r7, #12]
 800bd82:	697a      	ldr	r2, [r7, #20]
 800bd84:	61da      	str	r2, [r3, #28]
 800bd86:	68fb      	ldr	r3, [r7, #12]
 800bd88:	693a      	ldr	r2, [r7, #16]
 800bd8a:	621a      	str	r2, [r3, #32]
 800bd8c:	bf00      	nop
 800bd8e:	371c      	adds	r7, #28
 800bd90:	46bd      	mov	sp, r7
 800bd92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd96:	4770      	bx	lr

0800bd98 <TIM_TI4_SetConfig>:
 800bd98:	b480      	push	{r7}
 800bd9a:	b087      	sub	sp, #28
 800bd9c:	af00      	add	r7, sp, #0
 800bd9e:	60f8      	str	r0, [r7, #12]
 800bda0:	60b9      	str	r1, [r7, #8]
 800bda2:	607a      	str	r2, [r7, #4]
 800bda4:	603b      	str	r3, [r7, #0]
 800bda6:	68fb      	ldr	r3, [r7, #12]
 800bda8:	6a1b      	ldr	r3, [r3, #32]
 800bdaa:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800bdae:	68fb      	ldr	r3, [r7, #12]
 800bdb0:	621a      	str	r2, [r3, #32]
 800bdb2:	68fb      	ldr	r3, [r7, #12]
 800bdb4:	69db      	ldr	r3, [r3, #28]
 800bdb6:	617b      	str	r3, [r7, #20]
 800bdb8:	68fb      	ldr	r3, [r7, #12]
 800bdba:	6a1b      	ldr	r3, [r3, #32]
 800bdbc:	613b      	str	r3, [r7, #16]
 800bdbe:	697b      	ldr	r3, [r7, #20]
 800bdc0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800bdc4:	617b      	str	r3, [r7, #20]
 800bdc6:	687b      	ldr	r3, [r7, #4]
 800bdc8:	021b      	lsls	r3, r3, #8
 800bdca:	697a      	ldr	r2, [r7, #20]
 800bdcc:	4313      	orrs	r3, r2
 800bdce:	617b      	str	r3, [r7, #20]
 800bdd0:	697b      	ldr	r3, [r7, #20]
 800bdd2:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800bdd6:	617b      	str	r3, [r7, #20]
 800bdd8:	683b      	ldr	r3, [r7, #0]
 800bdda:	031b      	lsls	r3, r3, #12
 800bddc:	b29b      	uxth	r3, r3
 800bdde:	697a      	ldr	r2, [r7, #20]
 800bde0:	4313      	orrs	r3, r2
 800bde2:	617b      	str	r3, [r7, #20]
 800bde4:	693b      	ldr	r3, [r7, #16]
 800bde6:	f423 4320 	bic.w	r3, r3, #40960	; 0xa000
 800bdea:	613b      	str	r3, [r7, #16]
 800bdec:	68bb      	ldr	r3, [r7, #8]
 800bdee:	031b      	lsls	r3, r3, #12
 800bdf0:	f403 4320 	and.w	r3, r3, #40960	; 0xa000
 800bdf4:	693a      	ldr	r2, [r7, #16]
 800bdf6:	4313      	orrs	r3, r2
 800bdf8:	613b      	str	r3, [r7, #16]
 800bdfa:	68fb      	ldr	r3, [r7, #12]
 800bdfc:	697a      	ldr	r2, [r7, #20]
 800bdfe:	61da      	str	r2, [r3, #28]
 800be00:	68fb      	ldr	r3, [r7, #12]
 800be02:	693a      	ldr	r2, [r7, #16]
 800be04:	621a      	str	r2, [r3, #32]
 800be06:	bf00      	nop
 800be08:	371c      	adds	r7, #28
 800be0a:	46bd      	mov	sp, r7
 800be0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be10:	4770      	bx	lr

0800be12 <TIM_ITRx_SetConfig>:
 800be12:	b480      	push	{r7}
 800be14:	b085      	sub	sp, #20
 800be16:	af00      	add	r7, sp, #0
 800be18:	6078      	str	r0, [r7, #4]
 800be1a:	6039      	str	r1, [r7, #0]
 800be1c:	687b      	ldr	r3, [r7, #4]
 800be1e:	689b      	ldr	r3, [r3, #8]
 800be20:	60fb      	str	r3, [r7, #12]
 800be22:	68fb      	ldr	r3, [r7, #12]
 800be24:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800be28:	60fb      	str	r3, [r7, #12]
 800be2a:	683a      	ldr	r2, [r7, #0]
 800be2c:	68fb      	ldr	r3, [r7, #12]
 800be2e:	4313      	orrs	r3, r2
 800be30:	f043 0307 	orr.w	r3, r3, #7
 800be34:	60fb      	str	r3, [r7, #12]
 800be36:	687b      	ldr	r3, [r7, #4]
 800be38:	68fa      	ldr	r2, [r7, #12]
 800be3a:	609a      	str	r2, [r3, #8]
 800be3c:	bf00      	nop
 800be3e:	3714      	adds	r7, #20
 800be40:	46bd      	mov	sp, r7
 800be42:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be46:	4770      	bx	lr

0800be48 <TIM_ETR_SetConfig>:
 800be48:	b480      	push	{r7}
 800be4a:	b087      	sub	sp, #28
 800be4c:	af00      	add	r7, sp, #0
 800be4e:	60f8      	str	r0, [r7, #12]
 800be50:	60b9      	str	r1, [r7, #8]
 800be52:	607a      	str	r2, [r7, #4]
 800be54:	603b      	str	r3, [r7, #0]
 800be56:	68fb      	ldr	r3, [r7, #12]
 800be58:	689b      	ldr	r3, [r3, #8]
 800be5a:	617b      	str	r3, [r7, #20]
 800be5c:	697b      	ldr	r3, [r7, #20]
 800be5e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800be62:	617b      	str	r3, [r7, #20]
 800be64:	683b      	ldr	r3, [r7, #0]
 800be66:	021a      	lsls	r2, r3, #8
 800be68:	687b      	ldr	r3, [r7, #4]
 800be6a:	431a      	orrs	r2, r3
 800be6c:	68bb      	ldr	r3, [r7, #8]
 800be6e:	4313      	orrs	r3, r2
 800be70:	697a      	ldr	r2, [r7, #20]
 800be72:	4313      	orrs	r3, r2
 800be74:	617b      	str	r3, [r7, #20]
 800be76:	68fb      	ldr	r3, [r7, #12]
 800be78:	697a      	ldr	r2, [r7, #20]
 800be7a:	609a      	str	r2, [r3, #8]
 800be7c:	bf00      	nop
 800be7e:	371c      	adds	r7, #28
 800be80:	46bd      	mov	sp, r7
 800be82:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be86:	4770      	bx	lr

0800be88 <TIM_CCxChannelCmd>:
 800be88:	b480      	push	{r7}
 800be8a:	b087      	sub	sp, #28
 800be8c:	af00      	add	r7, sp, #0
 800be8e:	60f8      	str	r0, [r7, #12]
 800be90:	60b9      	str	r1, [r7, #8]
 800be92:	607a      	str	r2, [r7, #4]
 800be94:	68bb      	ldr	r3, [r7, #8]
 800be96:	f003 031f 	and.w	r3, r3, #31
 800be9a:	2201      	movs	r2, #1
 800be9c:	fa02 f303 	lsl.w	r3, r2, r3
 800bea0:	617b      	str	r3, [r7, #20]
 800bea2:	68fb      	ldr	r3, [r7, #12]
 800bea4:	6a1a      	ldr	r2, [r3, #32]
 800bea6:	697b      	ldr	r3, [r7, #20]
 800bea8:	43db      	mvns	r3, r3
 800beaa:	401a      	ands	r2, r3
 800beac:	68fb      	ldr	r3, [r7, #12]
 800beae:	621a      	str	r2, [r3, #32]
 800beb0:	68fb      	ldr	r3, [r7, #12]
 800beb2:	6a1a      	ldr	r2, [r3, #32]
 800beb4:	68bb      	ldr	r3, [r7, #8]
 800beb6:	f003 031f 	and.w	r3, r3, #31
 800beba:	6879      	ldr	r1, [r7, #4]
 800bebc:	fa01 f303 	lsl.w	r3, r1, r3
 800bec0:	431a      	orrs	r2, r3
 800bec2:	68fb      	ldr	r3, [r7, #12]
 800bec4:	621a      	str	r2, [r3, #32]
 800bec6:	bf00      	nop
 800bec8:	371c      	adds	r7, #28
 800beca:	46bd      	mov	sp, r7
 800becc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bed0:	4770      	bx	lr
	...

0800bed4 <HAL_TIMEx_MasterConfigSynchronization>:
 800bed4:	b480      	push	{r7}
 800bed6:	b085      	sub	sp, #20
 800bed8:	af00      	add	r7, sp, #0
 800beda:	6078      	str	r0, [r7, #4]
 800bedc:	6039      	str	r1, [r7, #0]
 800bede:	687b      	ldr	r3, [r7, #4]
 800bee0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800bee4:	2b01      	cmp	r3, #1
 800bee6:	d101      	bne.n	800beec <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800bee8:	2302      	movs	r3, #2
 800beea:	e05a      	b.n	800bfa2 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 800beec:	687b      	ldr	r3, [r7, #4]
 800beee:	2201      	movs	r2, #1
 800bef0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bef4:	687b      	ldr	r3, [r7, #4]
 800bef6:	2202      	movs	r2, #2
 800bef8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800befc:	687b      	ldr	r3, [r7, #4]
 800befe:	681b      	ldr	r3, [r3, #0]
 800bf00:	685b      	ldr	r3, [r3, #4]
 800bf02:	60fb      	str	r3, [r7, #12]
 800bf04:	687b      	ldr	r3, [r7, #4]
 800bf06:	681b      	ldr	r3, [r3, #0]
 800bf08:	689b      	ldr	r3, [r3, #8]
 800bf0a:	60bb      	str	r3, [r7, #8]
 800bf0c:	68fb      	ldr	r3, [r7, #12]
 800bf0e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800bf12:	60fb      	str	r3, [r7, #12]
 800bf14:	683b      	ldr	r3, [r7, #0]
 800bf16:	681b      	ldr	r3, [r3, #0]
 800bf18:	68fa      	ldr	r2, [r7, #12]
 800bf1a:	4313      	orrs	r3, r2
 800bf1c:	60fb      	str	r3, [r7, #12]
 800bf1e:	687b      	ldr	r3, [r7, #4]
 800bf20:	681b      	ldr	r3, [r3, #0]
 800bf22:	68fa      	ldr	r2, [r7, #12]
 800bf24:	605a      	str	r2, [r3, #4]
 800bf26:	687b      	ldr	r3, [r7, #4]
 800bf28:	681b      	ldr	r3, [r3, #0]
 800bf2a:	4a21      	ldr	r2, [pc, #132]	; (800bfb0 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 800bf2c:	4293      	cmp	r3, r2
 800bf2e:	d022      	beq.n	800bf76 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bf30:	687b      	ldr	r3, [r7, #4]
 800bf32:	681b      	ldr	r3, [r3, #0]
 800bf34:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800bf38:	d01d      	beq.n	800bf76 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bf3a:	687b      	ldr	r3, [r7, #4]
 800bf3c:	681b      	ldr	r3, [r3, #0]
 800bf3e:	4a1d      	ldr	r2, [pc, #116]	; (800bfb4 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 800bf40:	4293      	cmp	r3, r2
 800bf42:	d018      	beq.n	800bf76 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bf44:	687b      	ldr	r3, [r7, #4]
 800bf46:	681b      	ldr	r3, [r3, #0]
 800bf48:	4a1b      	ldr	r2, [pc, #108]	; (800bfb8 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800bf4a:	4293      	cmp	r3, r2
 800bf4c:	d013      	beq.n	800bf76 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bf4e:	687b      	ldr	r3, [r7, #4]
 800bf50:	681b      	ldr	r3, [r3, #0]
 800bf52:	4a1a      	ldr	r2, [pc, #104]	; (800bfbc <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 800bf54:	4293      	cmp	r3, r2
 800bf56:	d00e      	beq.n	800bf76 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bf58:	687b      	ldr	r3, [r7, #4]
 800bf5a:	681b      	ldr	r3, [r3, #0]
 800bf5c:	4a18      	ldr	r2, [pc, #96]	; (800bfc0 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 800bf5e:	4293      	cmp	r3, r2
 800bf60:	d009      	beq.n	800bf76 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bf62:	687b      	ldr	r3, [r7, #4]
 800bf64:	681b      	ldr	r3, [r3, #0]
 800bf66:	4a17      	ldr	r2, [pc, #92]	; (800bfc4 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 800bf68:	4293      	cmp	r3, r2
 800bf6a:	d004      	beq.n	800bf76 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800bf6c:	687b      	ldr	r3, [r7, #4]
 800bf6e:	681b      	ldr	r3, [r3, #0]
 800bf70:	4a15      	ldr	r2, [pc, #84]	; (800bfc8 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800bf72:	4293      	cmp	r3, r2
 800bf74:	d10c      	bne.n	800bf90 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 800bf76:	68bb      	ldr	r3, [r7, #8]
 800bf78:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800bf7c:	60bb      	str	r3, [r7, #8]
 800bf7e:	683b      	ldr	r3, [r7, #0]
 800bf80:	685b      	ldr	r3, [r3, #4]
 800bf82:	68ba      	ldr	r2, [r7, #8]
 800bf84:	4313      	orrs	r3, r2
 800bf86:	60bb      	str	r3, [r7, #8]
 800bf88:	687b      	ldr	r3, [r7, #4]
 800bf8a:	681b      	ldr	r3, [r3, #0]
 800bf8c:	68ba      	ldr	r2, [r7, #8]
 800bf8e:	609a      	str	r2, [r3, #8]
 800bf90:	687b      	ldr	r3, [r7, #4]
 800bf92:	2201      	movs	r2, #1
 800bf94:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bf98:	687b      	ldr	r3, [r7, #4]
 800bf9a:	2200      	movs	r2, #0
 800bf9c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bfa0:	2300      	movs	r3, #0
 800bfa2:	4618      	mov	r0, r3
 800bfa4:	3714      	adds	r7, #20
 800bfa6:	46bd      	mov	sp, r7
 800bfa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bfac:	4770      	bx	lr
 800bfae:	bf00      	nop
 800bfb0:	40010000 	.word	0x40010000
 800bfb4:	40000400 	.word	0x40000400
 800bfb8:	40000800 	.word	0x40000800
 800bfbc:	40000c00 	.word	0x40000c00
 800bfc0:	40010400 	.word	0x40010400
 800bfc4:	40014000 	.word	0x40014000
 800bfc8:	40001800 	.word	0x40001800

0800bfcc <HAL_TIMEx_ConfigBreakDeadTime>:
 800bfcc:	b480      	push	{r7}
 800bfce:	b085      	sub	sp, #20
 800bfd0:	af00      	add	r7, sp, #0
 800bfd2:	6078      	str	r0, [r7, #4]
 800bfd4:	6039      	str	r1, [r7, #0]
 800bfd6:	2300      	movs	r3, #0
 800bfd8:	60fb      	str	r3, [r7, #12]
 800bfda:	687b      	ldr	r3, [r7, #4]
 800bfdc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800bfe0:	2b01      	cmp	r3, #1
 800bfe2:	d101      	bne.n	800bfe8 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 800bfe4:	2302      	movs	r3, #2
 800bfe6:	e03d      	b.n	800c064 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 800bfe8:	687b      	ldr	r3, [r7, #4]
 800bfea:	2201      	movs	r2, #1
 800bfec:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bff0:	68fb      	ldr	r3, [r7, #12]
 800bff2:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 800bff6:	683b      	ldr	r3, [r7, #0]
 800bff8:	68db      	ldr	r3, [r3, #12]
 800bffa:	4313      	orrs	r3, r2
 800bffc:	60fb      	str	r3, [r7, #12]
 800bffe:	68fb      	ldr	r3, [r7, #12]
 800c000:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800c004:	683b      	ldr	r3, [r7, #0]
 800c006:	689b      	ldr	r3, [r3, #8]
 800c008:	4313      	orrs	r3, r2
 800c00a:	60fb      	str	r3, [r7, #12]
 800c00c:	68fb      	ldr	r3, [r7, #12]
 800c00e:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 800c012:	683b      	ldr	r3, [r7, #0]
 800c014:	685b      	ldr	r3, [r3, #4]
 800c016:	4313      	orrs	r3, r2
 800c018:	60fb      	str	r3, [r7, #12]
 800c01a:	68fb      	ldr	r3, [r7, #12]
 800c01c:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 800c020:	683b      	ldr	r3, [r7, #0]
 800c022:	681b      	ldr	r3, [r3, #0]
 800c024:	4313      	orrs	r3, r2
 800c026:	60fb      	str	r3, [r7, #12]
 800c028:	68fb      	ldr	r3, [r7, #12]
 800c02a:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800c02e:	683b      	ldr	r3, [r7, #0]
 800c030:	691b      	ldr	r3, [r3, #16]
 800c032:	4313      	orrs	r3, r2
 800c034:	60fb      	str	r3, [r7, #12]
 800c036:	68fb      	ldr	r3, [r7, #12]
 800c038:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 800c03c:	683b      	ldr	r3, [r7, #0]
 800c03e:	695b      	ldr	r3, [r3, #20]
 800c040:	4313      	orrs	r3, r2
 800c042:	60fb      	str	r3, [r7, #12]
 800c044:	68fb      	ldr	r3, [r7, #12]
 800c046:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 800c04a:	683b      	ldr	r3, [r7, #0]
 800c04c:	69db      	ldr	r3, [r3, #28]
 800c04e:	4313      	orrs	r3, r2
 800c050:	60fb      	str	r3, [r7, #12]
 800c052:	687b      	ldr	r3, [r7, #4]
 800c054:	681b      	ldr	r3, [r3, #0]
 800c056:	68fa      	ldr	r2, [r7, #12]
 800c058:	645a      	str	r2, [r3, #68]	; 0x44
 800c05a:	687b      	ldr	r3, [r7, #4]
 800c05c:	2200      	movs	r2, #0
 800c05e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c062:	2300      	movs	r3, #0
 800c064:	4618      	mov	r0, r3
 800c066:	3714      	adds	r7, #20
 800c068:	46bd      	mov	sp, r7
 800c06a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c06e:	4770      	bx	lr

0800c070 <HAL_TIMEx_CommutCallback>:
 800c070:	b480      	push	{r7}
 800c072:	b083      	sub	sp, #12
 800c074:	af00      	add	r7, sp, #0
 800c076:	6078      	str	r0, [r7, #4]
 800c078:	bf00      	nop
 800c07a:	370c      	adds	r7, #12
 800c07c:	46bd      	mov	sp, r7
 800c07e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c082:	4770      	bx	lr

0800c084 <HAL_TIMEx_BreakCallback>:
 800c084:	b480      	push	{r7}
 800c086:	b083      	sub	sp, #12
 800c088:	af00      	add	r7, sp, #0
 800c08a:	6078      	str	r0, [r7, #4]
 800c08c:	bf00      	nop
 800c08e:	370c      	adds	r7, #12
 800c090:	46bd      	mov	sp, r7
 800c092:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c096:	4770      	bx	lr

0800c098 <HAL_UART_Init>:
 800c098:	b580      	push	{r7, lr}
 800c09a:	b082      	sub	sp, #8
 800c09c:	af00      	add	r7, sp, #0
 800c09e:	6078      	str	r0, [r7, #4]
 800c0a0:	687b      	ldr	r3, [r7, #4]
 800c0a2:	2b00      	cmp	r3, #0
 800c0a4:	d101      	bne.n	800c0aa <HAL_UART_Init+0x12>
 800c0a6:	2301      	movs	r3, #1
 800c0a8:	e03f      	b.n	800c12a <HAL_UART_Init+0x92>
 800c0aa:	687b      	ldr	r3, [r7, #4]
 800c0ac:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800c0b0:	b2db      	uxtb	r3, r3
 800c0b2:	2b00      	cmp	r3, #0
 800c0b4:	d106      	bne.n	800c0c4 <HAL_UART_Init+0x2c>
 800c0b6:	687b      	ldr	r3, [r7, #4]
 800c0b8:	2200      	movs	r2, #0
 800c0ba:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c0be:	6878      	ldr	r0, [r7, #4]
 800c0c0:	f7fb f938 	bl	8007334 <HAL_UART_MspInit>
 800c0c4:	687b      	ldr	r3, [r7, #4]
 800c0c6:	2224      	movs	r2, #36	; 0x24
 800c0c8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c0cc:	687b      	ldr	r3, [r7, #4]
 800c0ce:	681b      	ldr	r3, [r3, #0]
 800c0d0:	68da      	ldr	r2, [r3, #12]
 800c0d2:	687b      	ldr	r3, [r7, #4]
 800c0d4:	681b      	ldr	r3, [r3, #0]
 800c0d6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800c0da:	60da      	str	r2, [r3, #12]
 800c0dc:	6878      	ldr	r0, [r7, #4]
 800c0de:	f000 fe81 	bl	800cde4 <UART_SetConfig>
 800c0e2:	687b      	ldr	r3, [r7, #4]
 800c0e4:	681b      	ldr	r3, [r3, #0]
 800c0e6:	691a      	ldr	r2, [r3, #16]
 800c0e8:	687b      	ldr	r3, [r7, #4]
 800c0ea:	681b      	ldr	r3, [r3, #0]
 800c0ec:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800c0f0:	611a      	str	r2, [r3, #16]
 800c0f2:	687b      	ldr	r3, [r7, #4]
 800c0f4:	681b      	ldr	r3, [r3, #0]
 800c0f6:	695a      	ldr	r2, [r3, #20]
 800c0f8:	687b      	ldr	r3, [r7, #4]
 800c0fa:	681b      	ldr	r3, [r3, #0]
 800c0fc:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800c100:	615a      	str	r2, [r3, #20]
 800c102:	687b      	ldr	r3, [r7, #4]
 800c104:	681b      	ldr	r3, [r3, #0]
 800c106:	68da      	ldr	r2, [r3, #12]
 800c108:	687b      	ldr	r3, [r7, #4]
 800c10a:	681b      	ldr	r3, [r3, #0]
 800c10c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800c110:	60da      	str	r2, [r3, #12]
 800c112:	687b      	ldr	r3, [r7, #4]
 800c114:	2200      	movs	r2, #0
 800c116:	641a      	str	r2, [r3, #64]	; 0x40
 800c118:	687b      	ldr	r3, [r7, #4]
 800c11a:	2220      	movs	r2, #32
 800c11c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c120:	687b      	ldr	r3, [r7, #4]
 800c122:	2220      	movs	r2, #32
 800c124:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c128:	2300      	movs	r3, #0
 800c12a:	4618      	mov	r0, r3
 800c12c:	3708      	adds	r7, #8
 800c12e:	46bd      	mov	sp, r7
 800c130:	bd80      	pop	{r7, pc}

0800c132 <HAL_UART_Transmit>:
 800c132:	b580      	push	{r7, lr}
 800c134:	b08a      	sub	sp, #40	; 0x28
 800c136:	af02      	add	r7, sp, #8
 800c138:	60f8      	str	r0, [r7, #12]
 800c13a:	60b9      	str	r1, [r7, #8]
 800c13c:	603b      	str	r3, [r7, #0]
 800c13e:	4613      	mov	r3, r2
 800c140:	80fb      	strh	r3, [r7, #6]
 800c142:	2300      	movs	r3, #0
 800c144:	617b      	str	r3, [r7, #20]
 800c146:	68fb      	ldr	r3, [r7, #12]
 800c148:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800c14c:	b2db      	uxtb	r3, r3
 800c14e:	2b20      	cmp	r3, #32
 800c150:	d17c      	bne.n	800c24c <HAL_UART_Transmit+0x11a>
 800c152:	68bb      	ldr	r3, [r7, #8]
 800c154:	2b00      	cmp	r3, #0
 800c156:	d002      	beq.n	800c15e <HAL_UART_Transmit+0x2c>
 800c158:	88fb      	ldrh	r3, [r7, #6]
 800c15a:	2b00      	cmp	r3, #0
 800c15c:	d101      	bne.n	800c162 <HAL_UART_Transmit+0x30>
 800c15e:	2301      	movs	r3, #1
 800c160:	e075      	b.n	800c24e <HAL_UART_Transmit+0x11c>
 800c162:	68fb      	ldr	r3, [r7, #12]
 800c164:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800c168:	2b01      	cmp	r3, #1
 800c16a:	d101      	bne.n	800c170 <HAL_UART_Transmit+0x3e>
 800c16c:	2302      	movs	r3, #2
 800c16e:	e06e      	b.n	800c24e <HAL_UART_Transmit+0x11c>
 800c170:	68fb      	ldr	r3, [r7, #12]
 800c172:	2201      	movs	r2, #1
 800c174:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c178:	68fb      	ldr	r3, [r7, #12]
 800c17a:	2200      	movs	r2, #0
 800c17c:	641a      	str	r2, [r3, #64]	; 0x40
 800c17e:	68fb      	ldr	r3, [r7, #12]
 800c180:	2221      	movs	r2, #33	; 0x21
 800c182:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c186:	f7fb fbdb 	bl	8007940 <HAL_GetTick>
 800c18a:	6178      	str	r0, [r7, #20]
 800c18c:	68fb      	ldr	r3, [r7, #12]
 800c18e:	88fa      	ldrh	r2, [r7, #6]
 800c190:	849a      	strh	r2, [r3, #36]	; 0x24
 800c192:	68fb      	ldr	r3, [r7, #12]
 800c194:	88fa      	ldrh	r2, [r7, #6]
 800c196:	84da      	strh	r2, [r3, #38]	; 0x26
 800c198:	68fb      	ldr	r3, [r7, #12]
 800c19a:	689b      	ldr	r3, [r3, #8]
 800c19c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c1a0:	d108      	bne.n	800c1b4 <HAL_UART_Transmit+0x82>
 800c1a2:	68fb      	ldr	r3, [r7, #12]
 800c1a4:	691b      	ldr	r3, [r3, #16]
 800c1a6:	2b00      	cmp	r3, #0
 800c1a8:	d104      	bne.n	800c1b4 <HAL_UART_Transmit+0x82>
 800c1aa:	2300      	movs	r3, #0
 800c1ac:	61fb      	str	r3, [r7, #28]
 800c1ae:	68bb      	ldr	r3, [r7, #8]
 800c1b0:	61bb      	str	r3, [r7, #24]
 800c1b2:	e003      	b.n	800c1bc <HAL_UART_Transmit+0x8a>
 800c1b4:	68bb      	ldr	r3, [r7, #8]
 800c1b6:	61fb      	str	r3, [r7, #28]
 800c1b8:	2300      	movs	r3, #0
 800c1ba:	61bb      	str	r3, [r7, #24]
 800c1bc:	68fb      	ldr	r3, [r7, #12]
 800c1be:	2200      	movs	r2, #0
 800c1c0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c1c4:	e02a      	b.n	800c21c <HAL_UART_Transmit+0xea>
 800c1c6:	683b      	ldr	r3, [r7, #0]
 800c1c8:	9300      	str	r3, [sp, #0]
 800c1ca:	697b      	ldr	r3, [r7, #20]
 800c1cc:	2200      	movs	r2, #0
 800c1ce:	2180      	movs	r1, #128	; 0x80
 800c1d0:	68f8      	ldr	r0, [r7, #12]
 800c1d2:	f000 fbc1 	bl	800c958 <UART_WaitOnFlagUntilTimeout>
 800c1d6:	4603      	mov	r3, r0
 800c1d8:	2b00      	cmp	r3, #0
 800c1da:	d001      	beq.n	800c1e0 <HAL_UART_Transmit+0xae>
 800c1dc:	2303      	movs	r3, #3
 800c1de:	e036      	b.n	800c24e <HAL_UART_Transmit+0x11c>
 800c1e0:	69fb      	ldr	r3, [r7, #28]
 800c1e2:	2b00      	cmp	r3, #0
 800c1e4:	d10b      	bne.n	800c1fe <HAL_UART_Transmit+0xcc>
 800c1e6:	69bb      	ldr	r3, [r7, #24]
 800c1e8:	881b      	ldrh	r3, [r3, #0]
 800c1ea:	461a      	mov	r2, r3
 800c1ec:	68fb      	ldr	r3, [r7, #12]
 800c1ee:	681b      	ldr	r3, [r3, #0]
 800c1f0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800c1f4:	605a      	str	r2, [r3, #4]
 800c1f6:	69bb      	ldr	r3, [r7, #24]
 800c1f8:	3302      	adds	r3, #2
 800c1fa:	61bb      	str	r3, [r7, #24]
 800c1fc:	e007      	b.n	800c20e <HAL_UART_Transmit+0xdc>
 800c1fe:	69fb      	ldr	r3, [r7, #28]
 800c200:	781a      	ldrb	r2, [r3, #0]
 800c202:	68fb      	ldr	r3, [r7, #12]
 800c204:	681b      	ldr	r3, [r3, #0]
 800c206:	605a      	str	r2, [r3, #4]
 800c208:	69fb      	ldr	r3, [r7, #28]
 800c20a:	3301      	adds	r3, #1
 800c20c:	61fb      	str	r3, [r7, #28]
 800c20e:	68fb      	ldr	r3, [r7, #12]
 800c210:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800c212:	b29b      	uxth	r3, r3
 800c214:	3b01      	subs	r3, #1
 800c216:	b29a      	uxth	r2, r3
 800c218:	68fb      	ldr	r3, [r7, #12]
 800c21a:	84da      	strh	r2, [r3, #38]	; 0x26
 800c21c:	68fb      	ldr	r3, [r7, #12]
 800c21e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800c220:	b29b      	uxth	r3, r3
 800c222:	2b00      	cmp	r3, #0
 800c224:	d1cf      	bne.n	800c1c6 <HAL_UART_Transmit+0x94>
 800c226:	683b      	ldr	r3, [r7, #0]
 800c228:	9300      	str	r3, [sp, #0]
 800c22a:	697b      	ldr	r3, [r7, #20]
 800c22c:	2200      	movs	r2, #0
 800c22e:	2140      	movs	r1, #64	; 0x40
 800c230:	68f8      	ldr	r0, [r7, #12]
 800c232:	f000 fb91 	bl	800c958 <UART_WaitOnFlagUntilTimeout>
 800c236:	4603      	mov	r3, r0
 800c238:	2b00      	cmp	r3, #0
 800c23a:	d001      	beq.n	800c240 <HAL_UART_Transmit+0x10e>
 800c23c:	2303      	movs	r3, #3
 800c23e:	e006      	b.n	800c24e <HAL_UART_Transmit+0x11c>
 800c240:	68fb      	ldr	r3, [r7, #12]
 800c242:	2220      	movs	r2, #32
 800c244:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c248:	2300      	movs	r3, #0
 800c24a:	e000      	b.n	800c24e <HAL_UART_Transmit+0x11c>
 800c24c:	2302      	movs	r3, #2
 800c24e:	4618      	mov	r0, r3
 800c250:	3720      	adds	r7, #32
 800c252:	46bd      	mov	sp, r7
 800c254:	bd80      	pop	{r7, pc}

0800c256 <HAL_UART_Receive>:
 800c256:	b580      	push	{r7, lr}
 800c258:	b08a      	sub	sp, #40	; 0x28
 800c25a:	af02      	add	r7, sp, #8
 800c25c:	60f8      	str	r0, [r7, #12]
 800c25e:	60b9      	str	r1, [r7, #8]
 800c260:	603b      	str	r3, [r7, #0]
 800c262:	4613      	mov	r3, r2
 800c264:	80fb      	strh	r3, [r7, #6]
 800c266:	2300      	movs	r3, #0
 800c268:	617b      	str	r3, [r7, #20]
 800c26a:	68fb      	ldr	r3, [r7, #12]
 800c26c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800c270:	b2db      	uxtb	r3, r3
 800c272:	2b20      	cmp	r3, #32
 800c274:	f040 808c 	bne.w	800c390 <HAL_UART_Receive+0x13a>
 800c278:	68bb      	ldr	r3, [r7, #8]
 800c27a:	2b00      	cmp	r3, #0
 800c27c:	d002      	beq.n	800c284 <HAL_UART_Receive+0x2e>
 800c27e:	88fb      	ldrh	r3, [r7, #6]
 800c280:	2b00      	cmp	r3, #0
 800c282:	d101      	bne.n	800c288 <HAL_UART_Receive+0x32>
 800c284:	2301      	movs	r3, #1
 800c286:	e084      	b.n	800c392 <HAL_UART_Receive+0x13c>
 800c288:	68fb      	ldr	r3, [r7, #12]
 800c28a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800c28e:	2b01      	cmp	r3, #1
 800c290:	d101      	bne.n	800c296 <HAL_UART_Receive+0x40>
 800c292:	2302      	movs	r3, #2
 800c294:	e07d      	b.n	800c392 <HAL_UART_Receive+0x13c>
 800c296:	68fb      	ldr	r3, [r7, #12]
 800c298:	2201      	movs	r2, #1
 800c29a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c29e:	68fb      	ldr	r3, [r7, #12]
 800c2a0:	2200      	movs	r2, #0
 800c2a2:	641a      	str	r2, [r3, #64]	; 0x40
 800c2a4:	68fb      	ldr	r3, [r7, #12]
 800c2a6:	2222      	movs	r2, #34	; 0x22
 800c2a8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c2ac:	68fb      	ldr	r3, [r7, #12]
 800c2ae:	2200      	movs	r2, #0
 800c2b0:	631a      	str	r2, [r3, #48]	; 0x30
 800c2b2:	f7fb fb45 	bl	8007940 <HAL_GetTick>
 800c2b6:	6178      	str	r0, [r7, #20]
 800c2b8:	68fb      	ldr	r3, [r7, #12]
 800c2ba:	88fa      	ldrh	r2, [r7, #6]
 800c2bc:	859a      	strh	r2, [r3, #44]	; 0x2c
 800c2be:	68fb      	ldr	r3, [r7, #12]
 800c2c0:	88fa      	ldrh	r2, [r7, #6]
 800c2c2:	85da      	strh	r2, [r3, #46]	; 0x2e
 800c2c4:	68fb      	ldr	r3, [r7, #12]
 800c2c6:	689b      	ldr	r3, [r3, #8]
 800c2c8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c2cc:	d108      	bne.n	800c2e0 <HAL_UART_Receive+0x8a>
 800c2ce:	68fb      	ldr	r3, [r7, #12]
 800c2d0:	691b      	ldr	r3, [r3, #16]
 800c2d2:	2b00      	cmp	r3, #0
 800c2d4:	d104      	bne.n	800c2e0 <HAL_UART_Receive+0x8a>
 800c2d6:	2300      	movs	r3, #0
 800c2d8:	61fb      	str	r3, [r7, #28]
 800c2da:	68bb      	ldr	r3, [r7, #8]
 800c2dc:	61bb      	str	r3, [r7, #24]
 800c2de:	e003      	b.n	800c2e8 <HAL_UART_Receive+0x92>
 800c2e0:	68bb      	ldr	r3, [r7, #8]
 800c2e2:	61fb      	str	r3, [r7, #28]
 800c2e4:	2300      	movs	r3, #0
 800c2e6:	61bb      	str	r3, [r7, #24]
 800c2e8:	68fb      	ldr	r3, [r7, #12]
 800c2ea:	2200      	movs	r2, #0
 800c2ec:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c2f0:	e043      	b.n	800c37a <HAL_UART_Receive+0x124>
 800c2f2:	683b      	ldr	r3, [r7, #0]
 800c2f4:	9300      	str	r3, [sp, #0]
 800c2f6:	697b      	ldr	r3, [r7, #20]
 800c2f8:	2200      	movs	r2, #0
 800c2fa:	2120      	movs	r1, #32
 800c2fc:	68f8      	ldr	r0, [r7, #12]
 800c2fe:	f000 fb2b 	bl	800c958 <UART_WaitOnFlagUntilTimeout>
 800c302:	4603      	mov	r3, r0
 800c304:	2b00      	cmp	r3, #0
 800c306:	d001      	beq.n	800c30c <HAL_UART_Receive+0xb6>
 800c308:	2303      	movs	r3, #3
 800c30a:	e042      	b.n	800c392 <HAL_UART_Receive+0x13c>
 800c30c:	69fb      	ldr	r3, [r7, #28]
 800c30e:	2b00      	cmp	r3, #0
 800c310:	d10c      	bne.n	800c32c <HAL_UART_Receive+0xd6>
 800c312:	68fb      	ldr	r3, [r7, #12]
 800c314:	681b      	ldr	r3, [r3, #0]
 800c316:	685b      	ldr	r3, [r3, #4]
 800c318:	b29b      	uxth	r3, r3
 800c31a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800c31e:	b29a      	uxth	r2, r3
 800c320:	69bb      	ldr	r3, [r7, #24]
 800c322:	801a      	strh	r2, [r3, #0]
 800c324:	69bb      	ldr	r3, [r7, #24]
 800c326:	3302      	adds	r3, #2
 800c328:	61bb      	str	r3, [r7, #24]
 800c32a:	e01f      	b.n	800c36c <HAL_UART_Receive+0x116>
 800c32c:	68fb      	ldr	r3, [r7, #12]
 800c32e:	689b      	ldr	r3, [r3, #8]
 800c330:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c334:	d007      	beq.n	800c346 <HAL_UART_Receive+0xf0>
 800c336:	68fb      	ldr	r3, [r7, #12]
 800c338:	689b      	ldr	r3, [r3, #8]
 800c33a:	2b00      	cmp	r3, #0
 800c33c:	d10a      	bne.n	800c354 <HAL_UART_Receive+0xfe>
 800c33e:	68fb      	ldr	r3, [r7, #12]
 800c340:	691b      	ldr	r3, [r3, #16]
 800c342:	2b00      	cmp	r3, #0
 800c344:	d106      	bne.n	800c354 <HAL_UART_Receive+0xfe>
 800c346:	68fb      	ldr	r3, [r7, #12]
 800c348:	681b      	ldr	r3, [r3, #0]
 800c34a:	685b      	ldr	r3, [r3, #4]
 800c34c:	b2da      	uxtb	r2, r3
 800c34e:	69fb      	ldr	r3, [r7, #28]
 800c350:	701a      	strb	r2, [r3, #0]
 800c352:	e008      	b.n	800c366 <HAL_UART_Receive+0x110>
 800c354:	68fb      	ldr	r3, [r7, #12]
 800c356:	681b      	ldr	r3, [r3, #0]
 800c358:	685b      	ldr	r3, [r3, #4]
 800c35a:	b2db      	uxtb	r3, r3
 800c35c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800c360:	b2da      	uxtb	r2, r3
 800c362:	69fb      	ldr	r3, [r7, #28]
 800c364:	701a      	strb	r2, [r3, #0]
 800c366:	69fb      	ldr	r3, [r7, #28]
 800c368:	3301      	adds	r3, #1
 800c36a:	61fb      	str	r3, [r7, #28]
 800c36c:	68fb      	ldr	r3, [r7, #12]
 800c36e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c370:	b29b      	uxth	r3, r3
 800c372:	3b01      	subs	r3, #1
 800c374:	b29a      	uxth	r2, r3
 800c376:	68fb      	ldr	r3, [r7, #12]
 800c378:	85da      	strh	r2, [r3, #46]	; 0x2e
 800c37a:	68fb      	ldr	r3, [r7, #12]
 800c37c:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c37e:	b29b      	uxth	r3, r3
 800c380:	2b00      	cmp	r3, #0
 800c382:	d1b6      	bne.n	800c2f2 <HAL_UART_Receive+0x9c>
 800c384:	68fb      	ldr	r3, [r7, #12]
 800c386:	2220      	movs	r2, #32
 800c388:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c38c:	2300      	movs	r3, #0
 800c38e:	e000      	b.n	800c392 <HAL_UART_Receive+0x13c>
 800c390:	2302      	movs	r3, #2
 800c392:	4618      	mov	r0, r3
 800c394:	3720      	adds	r7, #32
 800c396:	46bd      	mov	sp, r7
 800c398:	bd80      	pop	{r7, pc}

0800c39a <HAL_UART_Receive_IT>:
 800c39a:	b580      	push	{r7, lr}
 800c39c:	b084      	sub	sp, #16
 800c39e:	af00      	add	r7, sp, #0
 800c3a0:	60f8      	str	r0, [r7, #12]
 800c3a2:	60b9      	str	r1, [r7, #8]
 800c3a4:	4613      	mov	r3, r2
 800c3a6:	80fb      	strh	r3, [r7, #6]
 800c3a8:	68fb      	ldr	r3, [r7, #12]
 800c3aa:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800c3ae:	b2db      	uxtb	r3, r3
 800c3b0:	2b20      	cmp	r3, #32
 800c3b2:	d11d      	bne.n	800c3f0 <HAL_UART_Receive_IT+0x56>
 800c3b4:	68bb      	ldr	r3, [r7, #8]
 800c3b6:	2b00      	cmp	r3, #0
 800c3b8:	d002      	beq.n	800c3c0 <HAL_UART_Receive_IT+0x26>
 800c3ba:	88fb      	ldrh	r3, [r7, #6]
 800c3bc:	2b00      	cmp	r3, #0
 800c3be:	d101      	bne.n	800c3c4 <HAL_UART_Receive_IT+0x2a>
 800c3c0:	2301      	movs	r3, #1
 800c3c2:	e016      	b.n	800c3f2 <HAL_UART_Receive_IT+0x58>
 800c3c4:	68fb      	ldr	r3, [r7, #12]
 800c3c6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800c3ca:	2b01      	cmp	r3, #1
 800c3cc:	d101      	bne.n	800c3d2 <HAL_UART_Receive_IT+0x38>
 800c3ce:	2302      	movs	r3, #2
 800c3d0:	e00f      	b.n	800c3f2 <HAL_UART_Receive_IT+0x58>
 800c3d2:	68fb      	ldr	r3, [r7, #12]
 800c3d4:	2201      	movs	r2, #1
 800c3d6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c3da:	68fb      	ldr	r3, [r7, #12]
 800c3dc:	2200      	movs	r2, #0
 800c3de:	631a      	str	r2, [r3, #48]	; 0x30
 800c3e0:	88fb      	ldrh	r3, [r7, #6]
 800c3e2:	461a      	mov	r2, r3
 800c3e4:	68b9      	ldr	r1, [r7, #8]
 800c3e6:	68f8      	ldr	r0, [r7, #12]
 800c3e8:	f000 fb24 	bl	800ca34 <UART_Start_Receive_IT>
 800c3ec:	4603      	mov	r3, r0
 800c3ee:	e000      	b.n	800c3f2 <HAL_UART_Receive_IT+0x58>
 800c3f0:	2302      	movs	r3, #2
 800c3f2:	4618      	mov	r0, r3
 800c3f4:	3710      	adds	r7, #16
 800c3f6:	46bd      	mov	sp, r7
 800c3f8:	bd80      	pop	{r7, pc}
	...

0800c3fc <HAL_UART_IRQHandler>:
 800c3fc:	b580      	push	{r7, lr}
 800c3fe:	b0ba      	sub	sp, #232	; 0xe8
 800c400:	af00      	add	r7, sp, #0
 800c402:	6078      	str	r0, [r7, #4]
 800c404:	687b      	ldr	r3, [r7, #4]
 800c406:	681b      	ldr	r3, [r3, #0]
 800c408:	681b      	ldr	r3, [r3, #0]
 800c40a:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800c40e:	687b      	ldr	r3, [r7, #4]
 800c410:	681b      	ldr	r3, [r3, #0]
 800c412:	68db      	ldr	r3, [r3, #12]
 800c414:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800c418:	687b      	ldr	r3, [r7, #4]
 800c41a:	681b      	ldr	r3, [r3, #0]
 800c41c:	695b      	ldr	r3, [r3, #20]
 800c41e:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800c422:	2300      	movs	r3, #0
 800c424:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800c428:	2300      	movs	r3, #0
 800c42a:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800c42e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c432:	f003 030f 	and.w	r3, r3, #15
 800c436:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800c43a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800c43e:	2b00      	cmp	r3, #0
 800c440:	d10f      	bne.n	800c462 <HAL_UART_IRQHandler+0x66>
 800c442:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c446:	f003 0320 	and.w	r3, r3, #32
 800c44a:	2b00      	cmp	r3, #0
 800c44c:	d009      	beq.n	800c462 <HAL_UART_IRQHandler+0x66>
 800c44e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c452:	f003 0320 	and.w	r3, r3, #32
 800c456:	2b00      	cmp	r3, #0
 800c458:	d003      	beq.n	800c462 <HAL_UART_IRQHandler+0x66>
 800c45a:	6878      	ldr	r0, [r7, #4]
 800c45c:	f000 fc07 	bl	800cc6e <UART_Receive_IT>
 800c460:	e256      	b.n	800c910 <HAL_UART_IRQHandler+0x514>
 800c462:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800c466:	2b00      	cmp	r3, #0
 800c468:	f000 80de 	beq.w	800c628 <HAL_UART_IRQHandler+0x22c>
 800c46c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c470:	f003 0301 	and.w	r3, r3, #1
 800c474:	2b00      	cmp	r3, #0
 800c476:	d106      	bne.n	800c486 <HAL_UART_IRQHandler+0x8a>
 800c478:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c47c:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800c480:	2b00      	cmp	r3, #0
 800c482:	f000 80d1 	beq.w	800c628 <HAL_UART_IRQHandler+0x22c>
 800c486:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c48a:	f003 0301 	and.w	r3, r3, #1
 800c48e:	2b00      	cmp	r3, #0
 800c490:	d00b      	beq.n	800c4aa <HAL_UART_IRQHandler+0xae>
 800c492:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c496:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c49a:	2b00      	cmp	r3, #0
 800c49c:	d005      	beq.n	800c4aa <HAL_UART_IRQHandler+0xae>
 800c49e:	687b      	ldr	r3, [r7, #4]
 800c4a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c4a2:	f043 0201 	orr.w	r2, r3, #1
 800c4a6:	687b      	ldr	r3, [r7, #4]
 800c4a8:	641a      	str	r2, [r3, #64]	; 0x40
 800c4aa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c4ae:	f003 0304 	and.w	r3, r3, #4
 800c4b2:	2b00      	cmp	r3, #0
 800c4b4:	d00b      	beq.n	800c4ce <HAL_UART_IRQHandler+0xd2>
 800c4b6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c4ba:	f003 0301 	and.w	r3, r3, #1
 800c4be:	2b00      	cmp	r3, #0
 800c4c0:	d005      	beq.n	800c4ce <HAL_UART_IRQHandler+0xd2>
 800c4c2:	687b      	ldr	r3, [r7, #4]
 800c4c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c4c6:	f043 0202 	orr.w	r2, r3, #2
 800c4ca:	687b      	ldr	r3, [r7, #4]
 800c4cc:	641a      	str	r2, [r3, #64]	; 0x40
 800c4ce:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c4d2:	f003 0302 	and.w	r3, r3, #2
 800c4d6:	2b00      	cmp	r3, #0
 800c4d8:	d00b      	beq.n	800c4f2 <HAL_UART_IRQHandler+0xf6>
 800c4da:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c4de:	f003 0301 	and.w	r3, r3, #1
 800c4e2:	2b00      	cmp	r3, #0
 800c4e4:	d005      	beq.n	800c4f2 <HAL_UART_IRQHandler+0xf6>
 800c4e6:	687b      	ldr	r3, [r7, #4]
 800c4e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c4ea:	f043 0204 	orr.w	r2, r3, #4
 800c4ee:	687b      	ldr	r3, [r7, #4]
 800c4f0:	641a      	str	r2, [r3, #64]	; 0x40
 800c4f2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c4f6:	f003 0308 	and.w	r3, r3, #8
 800c4fa:	2b00      	cmp	r3, #0
 800c4fc:	d011      	beq.n	800c522 <HAL_UART_IRQHandler+0x126>
 800c4fe:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c502:	f003 0320 	and.w	r3, r3, #32
 800c506:	2b00      	cmp	r3, #0
 800c508:	d105      	bne.n	800c516 <HAL_UART_IRQHandler+0x11a>
 800c50a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c50e:	f003 0301 	and.w	r3, r3, #1
 800c512:	2b00      	cmp	r3, #0
 800c514:	d005      	beq.n	800c522 <HAL_UART_IRQHandler+0x126>
 800c516:	687b      	ldr	r3, [r7, #4]
 800c518:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c51a:	f043 0208 	orr.w	r2, r3, #8
 800c51e:	687b      	ldr	r3, [r7, #4]
 800c520:	641a      	str	r2, [r3, #64]	; 0x40
 800c522:	687b      	ldr	r3, [r7, #4]
 800c524:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c526:	2b00      	cmp	r3, #0
 800c528:	f000 81ed 	beq.w	800c906 <HAL_UART_IRQHandler+0x50a>
 800c52c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c530:	f003 0320 	and.w	r3, r3, #32
 800c534:	2b00      	cmp	r3, #0
 800c536:	d008      	beq.n	800c54a <HAL_UART_IRQHandler+0x14e>
 800c538:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c53c:	f003 0320 	and.w	r3, r3, #32
 800c540:	2b00      	cmp	r3, #0
 800c542:	d002      	beq.n	800c54a <HAL_UART_IRQHandler+0x14e>
 800c544:	6878      	ldr	r0, [r7, #4]
 800c546:	f000 fb92 	bl	800cc6e <UART_Receive_IT>
 800c54a:	687b      	ldr	r3, [r7, #4]
 800c54c:	681b      	ldr	r3, [r3, #0]
 800c54e:	695b      	ldr	r3, [r3, #20]
 800c550:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c554:	2b40      	cmp	r3, #64	; 0x40
 800c556:	bf0c      	ite	eq
 800c558:	2301      	moveq	r3, #1
 800c55a:	2300      	movne	r3, #0
 800c55c:	b2db      	uxtb	r3, r3
 800c55e:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800c562:	687b      	ldr	r3, [r7, #4]
 800c564:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c566:	f003 0308 	and.w	r3, r3, #8
 800c56a:	2b00      	cmp	r3, #0
 800c56c:	d103      	bne.n	800c576 <HAL_UART_IRQHandler+0x17a>
 800c56e:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c572:	2b00      	cmp	r3, #0
 800c574:	d04f      	beq.n	800c616 <HAL_UART_IRQHandler+0x21a>
 800c576:	6878      	ldr	r0, [r7, #4]
 800c578:	f000 fa9a 	bl	800cab0 <UART_EndRxTransfer>
 800c57c:	687b      	ldr	r3, [r7, #4]
 800c57e:	681b      	ldr	r3, [r3, #0]
 800c580:	695b      	ldr	r3, [r3, #20]
 800c582:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c586:	2b40      	cmp	r3, #64	; 0x40
 800c588:	d141      	bne.n	800c60e <HAL_UART_IRQHandler+0x212>
 800c58a:	687b      	ldr	r3, [r7, #4]
 800c58c:	681b      	ldr	r3, [r3, #0]
 800c58e:	3314      	adds	r3, #20
 800c590:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800c594:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800c598:	e853 3f00 	ldrex	r3, [r3]
 800c59c:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800c5a0:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800c5a4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c5a8:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800c5ac:	687b      	ldr	r3, [r7, #4]
 800c5ae:	681b      	ldr	r3, [r3, #0]
 800c5b0:	3314      	adds	r3, #20
 800c5b2:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 800c5b6:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800c5ba:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800c5be:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 800c5c2:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 800c5c6:	e841 2300 	strex	r3, r2, [r1]
 800c5ca:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800c5ce:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800c5d2:	2b00      	cmp	r3, #0
 800c5d4:	d1d9      	bne.n	800c58a <HAL_UART_IRQHandler+0x18e>
 800c5d6:	687b      	ldr	r3, [r7, #4]
 800c5d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c5da:	2b00      	cmp	r3, #0
 800c5dc:	d013      	beq.n	800c606 <HAL_UART_IRQHandler+0x20a>
 800c5de:	687b      	ldr	r3, [r7, #4]
 800c5e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c5e2:	4a7d      	ldr	r2, [pc, #500]	; (800c7d8 <HAL_UART_IRQHandler+0x3dc>)
 800c5e4:	651a      	str	r2, [r3, #80]	; 0x50
 800c5e6:	687b      	ldr	r3, [r7, #4]
 800c5e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c5ea:	4618      	mov	r0, r3
 800c5ec:	f7fc fa08 	bl	8008a00 <HAL_DMA_Abort_IT>
 800c5f0:	4603      	mov	r3, r0
 800c5f2:	2b00      	cmp	r3, #0
 800c5f4:	d016      	beq.n	800c624 <HAL_UART_IRQHandler+0x228>
 800c5f6:	687b      	ldr	r3, [r7, #4]
 800c5f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c5fa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c5fc:	687a      	ldr	r2, [r7, #4]
 800c5fe:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800c600:	4610      	mov	r0, r2
 800c602:	4798      	blx	r3
 800c604:	e00e      	b.n	800c624 <HAL_UART_IRQHandler+0x228>
 800c606:	6878      	ldr	r0, [r7, #4]
 800c608:	f000 f990 	bl	800c92c <HAL_UART_ErrorCallback>
 800c60c:	e00a      	b.n	800c624 <HAL_UART_IRQHandler+0x228>
 800c60e:	6878      	ldr	r0, [r7, #4]
 800c610:	f000 f98c 	bl	800c92c <HAL_UART_ErrorCallback>
 800c614:	e006      	b.n	800c624 <HAL_UART_IRQHandler+0x228>
 800c616:	6878      	ldr	r0, [r7, #4]
 800c618:	f000 f988 	bl	800c92c <HAL_UART_ErrorCallback>
 800c61c:	687b      	ldr	r3, [r7, #4]
 800c61e:	2200      	movs	r2, #0
 800c620:	641a      	str	r2, [r3, #64]	; 0x40
 800c622:	e170      	b.n	800c906 <HAL_UART_IRQHandler+0x50a>
 800c624:	bf00      	nop
 800c626:	e16e      	b.n	800c906 <HAL_UART_IRQHandler+0x50a>
 800c628:	687b      	ldr	r3, [r7, #4]
 800c62a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c62c:	2b01      	cmp	r3, #1
 800c62e:	f040 814a 	bne.w	800c8c6 <HAL_UART_IRQHandler+0x4ca>
 800c632:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c636:	f003 0310 	and.w	r3, r3, #16
 800c63a:	2b00      	cmp	r3, #0
 800c63c:	f000 8143 	beq.w	800c8c6 <HAL_UART_IRQHandler+0x4ca>
 800c640:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c644:	f003 0310 	and.w	r3, r3, #16
 800c648:	2b00      	cmp	r3, #0
 800c64a:	f000 813c 	beq.w	800c8c6 <HAL_UART_IRQHandler+0x4ca>
 800c64e:	2300      	movs	r3, #0
 800c650:	60bb      	str	r3, [r7, #8]
 800c652:	687b      	ldr	r3, [r7, #4]
 800c654:	681b      	ldr	r3, [r3, #0]
 800c656:	681b      	ldr	r3, [r3, #0]
 800c658:	60bb      	str	r3, [r7, #8]
 800c65a:	687b      	ldr	r3, [r7, #4]
 800c65c:	681b      	ldr	r3, [r3, #0]
 800c65e:	685b      	ldr	r3, [r3, #4]
 800c660:	60bb      	str	r3, [r7, #8]
 800c662:	68bb      	ldr	r3, [r7, #8]
 800c664:	687b      	ldr	r3, [r7, #4]
 800c666:	681b      	ldr	r3, [r3, #0]
 800c668:	695b      	ldr	r3, [r3, #20]
 800c66a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c66e:	2b40      	cmp	r3, #64	; 0x40
 800c670:	f040 80b4 	bne.w	800c7dc <HAL_UART_IRQHandler+0x3e0>
 800c674:	687b      	ldr	r3, [r7, #4]
 800c676:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c678:	681b      	ldr	r3, [r3, #0]
 800c67a:	685b      	ldr	r3, [r3, #4]
 800c67c:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 800c680:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 800c684:	2b00      	cmp	r3, #0
 800c686:	f000 8140 	beq.w	800c90a <HAL_UART_IRQHandler+0x50e>
 800c68a:	687b      	ldr	r3, [r7, #4]
 800c68c:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800c68e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800c692:	429a      	cmp	r2, r3
 800c694:	f080 8139 	bcs.w	800c90a <HAL_UART_IRQHandler+0x50e>
 800c698:	687b      	ldr	r3, [r7, #4]
 800c69a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800c69e:	85da      	strh	r2, [r3, #46]	; 0x2e
 800c6a0:	687b      	ldr	r3, [r7, #4]
 800c6a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c6a4:	69db      	ldr	r3, [r3, #28]
 800c6a6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800c6aa:	f000 8088 	beq.w	800c7be <HAL_UART_IRQHandler+0x3c2>
 800c6ae:	687b      	ldr	r3, [r7, #4]
 800c6b0:	681b      	ldr	r3, [r3, #0]
 800c6b2:	330c      	adds	r3, #12
 800c6b4:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800c6b8:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800c6bc:	e853 3f00 	ldrex	r3, [r3]
 800c6c0:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800c6c4:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800c6c8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800c6cc:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800c6d0:	687b      	ldr	r3, [r7, #4]
 800c6d2:	681b      	ldr	r3, [r3, #0]
 800c6d4:	330c      	adds	r3, #12
 800c6d6:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 800c6da:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800c6de:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800c6e2:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800c6e6:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800c6ea:	e841 2300 	strex	r3, r2, [r1]
 800c6ee:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800c6f2:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800c6f6:	2b00      	cmp	r3, #0
 800c6f8:	d1d9      	bne.n	800c6ae <HAL_UART_IRQHandler+0x2b2>
 800c6fa:	687b      	ldr	r3, [r7, #4]
 800c6fc:	681b      	ldr	r3, [r3, #0]
 800c6fe:	3314      	adds	r3, #20
 800c700:	677b      	str	r3, [r7, #116]	; 0x74
 800c702:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800c704:	e853 3f00 	ldrex	r3, [r3]
 800c708:	673b      	str	r3, [r7, #112]	; 0x70
 800c70a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800c70c:	f023 0301 	bic.w	r3, r3, #1
 800c710:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800c714:	687b      	ldr	r3, [r7, #4]
 800c716:	681b      	ldr	r3, [r3, #0]
 800c718:	3314      	adds	r3, #20
 800c71a:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800c71e:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 800c722:	67fb      	str	r3, [r7, #124]	; 0x7c
 800c724:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800c726:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800c72a:	e841 2300 	strex	r3, r2, [r1]
 800c72e:	67bb      	str	r3, [r7, #120]	; 0x78
 800c730:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800c732:	2b00      	cmp	r3, #0
 800c734:	d1e1      	bne.n	800c6fa <HAL_UART_IRQHandler+0x2fe>
 800c736:	687b      	ldr	r3, [r7, #4]
 800c738:	681b      	ldr	r3, [r3, #0]
 800c73a:	3314      	adds	r3, #20
 800c73c:	663b      	str	r3, [r7, #96]	; 0x60
 800c73e:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800c740:	e853 3f00 	ldrex	r3, [r3]
 800c744:	65fb      	str	r3, [r7, #92]	; 0x5c
 800c746:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800c748:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c74c:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800c750:	687b      	ldr	r3, [r7, #4]
 800c752:	681b      	ldr	r3, [r3, #0]
 800c754:	3314      	adds	r3, #20
 800c756:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800c75a:	66fa      	str	r2, [r7, #108]	; 0x6c
 800c75c:	66bb      	str	r3, [r7, #104]	; 0x68
 800c75e:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800c760:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800c762:	e841 2300 	strex	r3, r2, [r1]
 800c766:	667b      	str	r3, [r7, #100]	; 0x64
 800c768:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800c76a:	2b00      	cmp	r3, #0
 800c76c:	d1e3      	bne.n	800c736 <HAL_UART_IRQHandler+0x33a>
 800c76e:	687b      	ldr	r3, [r7, #4]
 800c770:	2220      	movs	r2, #32
 800c772:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c776:	687b      	ldr	r3, [r7, #4]
 800c778:	2200      	movs	r2, #0
 800c77a:	631a      	str	r2, [r3, #48]	; 0x30
 800c77c:	687b      	ldr	r3, [r7, #4]
 800c77e:	681b      	ldr	r3, [r3, #0]
 800c780:	330c      	adds	r3, #12
 800c782:	64fb      	str	r3, [r7, #76]	; 0x4c
 800c784:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800c786:	e853 3f00 	ldrex	r3, [r3]
 800c78a:	64bb      	str	r3, [r7, #72]	; 0x48
 800c78c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800c78e:	f023 0310 	bic.w	r3, r3, #16
 800c792:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800c796:	687b      	ldr	r3, [r7, #4]
 800c798:	681b      	ldr	r3, [r3, #0]
 800c79a:	330c      	adds	r3, #12
 800c79c:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 800c7a0:	65ba      	str	r2, [r7, #88]	; 0x58
 800c7a2:	657b      	str	r3, [r7, #84]	; 0x54
 800c7a4:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800c7a6:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800c7a8:	e841 2300 	strex	r3, r2, [r1]
 800c7ac:	653b      	str	r3, [r7, #80]	; 0x50
 800c7ae:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800c7b0:	2b00      	cmp	r3, #0
 800c7b2:	d1e3      	bne.n	800c77c <HAL_UART_IRQHandler+0x380>
 800c7b4:	687b      	ldr	r3, [r7, #4]
 800c7b6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c7b8:	4618      	mov	r0, r3
 800c7ba:	f7fc f8b1 	bl	8008920 <HAL_DMA_Abort>
 800c7be:	687b      	ldr	r3, [r7, #4]
 800c7c0:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800c7c2:	687b      	ldr	r3, [r7, #4]
 800c7c4:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c7c6:	b29b      	uxth	r3, r3
 800c7c8:	1ad3      	subs	r3, r2, r3
 800c7ca:	b29b      	uxth	r3, r3
 800c7cc:	4619      	mov	r1, r3
 800c7ce:	6878      	ldr	r0, [r7, #4]
 800c7d0:	f000 f8b6 	bl	800c940 <HAL_UARTEx_RxEventCallback>
 800c7d4:	e099      	b.n	800c90a <HAL_UART_IRQHandler+0x50e>
 800c7d6:	bf00      	nop
 800c7d8:	0800cb77 	.word	0x0800cb77
 800c7dc:	687b      	ldr	r3, [r7, #4]
 800c7de:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800c7e0:	687b      	ldr	r3, [r7, #4]
 800c7e2:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c7e4:	b29b      	uxth	r3, r3
 800c7e6:	1ad3      	subs	r3, r2, r3
 800c7e8:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 800c7ec:	687b      	ldr	r3, [r7, #4]
 800c7ee:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800c7f0:	b29b      	uxth	r3, r3
 800c7f2:	2b00      	cmp	r3, #0
 800c7f4:	f000 808b 	beq.w	800c90e <HAL_UART_IRQHandler+0x512>
 800c7f8:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800c7fc:	2b00      	cmp	r3, #0
 800c7fe:	f000 8086 	beq.w	800c90e <HAL_UART_IRQHandler+0x512>
 800c802:	687b      	ldr	r3, [r7, #4]
 800c804:	681b      	ldr	r3, [r3, #0]
 800c806:	330c      	adds	r3, #12
 800c808:	63bb      	str	r3, [r7, #56]	; 0x38
 800c80a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c80c:	e853 3f00 	ldrex	r3, [r3]
 800c810:	637b      	str	r3, [r7, #52]	; 0x34
 800c812:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800c814:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800c818:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800c81c:	687b      	ldr	r3, [r7, #4]
 800c81e:	681b      	ldr	r3, [r3, #0]
 800c820:	330c      	adds	r3, #12
 800c822:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 800c826:	647a      	str	r2, [r7, #68]	; 0x44
 800c828:	643b      	str	r3, [r7, #64]	; 0x40
 800c82a:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800c82c:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800c82e:	e841 2300 	strex	r3, r2, [r1]
 800c832:	63fb      	str	r3, [r7, #60]	; 0x3c
 800c834:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800c836:	2b00      	cmp	r3, #0
 800c838:	d1e3      	bne.n	800c802 <HAL_UART_IRQHandler+0x406>
 800c83a:	687b      	ldr	r3, [r7, #4]
 800c83c:	681b      	ldr	r3, [r3, #0]
 800c83e:	3314      	adds	r3, #20
 800c840:	627b      	str	r3, [r7, #36]	; 0x24
 800c842:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c844:	e853 3f00 	ldrex	r3, [r3]
 800c848:	623b      	str	r3, [r7, #32]
 800c84a:	6a3b      	ldr	r3, [r7, #32]
 800c84c:	f023 0301 	bic.w	r3, r3, #1
 800c850:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800c854:	687b      	ldr	r3, [r7, #4]
 800c856:	681b      	ldr	r3, [r3, #0]
 800c858:	3314      	adds	r3, #20
 800c85a:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800c85e:	633a      	str	r2, [r7, #48]	; 0x30
 800c860:	62fb      	str	r3, [r7, #44]	; 0x2c
 800c862:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800c864:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800c866:	e841 2300 	strex	r3, r2, [r1]
 800c86a:	62bb      	str	r3, [r7, #40]	; 0x28
 800c86c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c86e:	2b00      	cmp	r3, #0
 800c870:	d1e3      	bne.n	800c83a <HAL_UART_IRQHandler+0x43e>
 800c872:	687b      	ldr	r3, [r7, #4]
 800c874:	2220      	movs	r2, #32
 800c876:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800c87a:	687b      	ldr	r3, [r7, #4]
 800c87c:	2200      	movs	r2, #0
 800c87e:	631a      	str	r2, [r3, #48]	; 0x30
 800c880:	687b      	ldr	r3, [r7, #4]
 800c882:	681b      	ldr	r3, [r3, #0]
 800c884:	330c      	adds	r3, #12
 800c886:	613b      	str	r3, [r7, #16]
 800c888:	693b      	ldr	r3, [r7, #16]
 800c88a:	e853 3f00 	ldrex	r3, [r3]
 800c88e:	60fb      	str	r3, [r7, #12]
 800c890:	68fb      	ldr	r3, [r7, #12]
 800c892:	f023 0310 	bic.w	r3, r3, #16
 800c896:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800c89a:	687b      	ldr	r3, [r7, #4]
 800c89c:	681b      	ldr	r3, [r3, #0]
 800c89e:	330c      	adds	r3, #12
 800c8a0:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 800c8a4:	61fa      	str	r2, [r7, #28]
 800c8a6:	61bb      	str	r3, [r7, #24]
 800c8a8:	69b9      	ldr	r1, [r7, #24]
 800c8aa:	69fa      	ldr	r2, [r7, #28]
 800c8ac:	e841 2300 	strex	r3, r2, [r1]
 800c8b0:	617b      	str	r3, [r7, #20]
 800c8b2:	697b      	ldr	r3, [r7, #20]
 800c8b4:	2b00      	cmp	r3, #0
 800c8b6:	d1e3      	bne.n	800c880 <HAL_UART_IRQHandler+0x484>
 800c8b8:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800c8bc:	4619      	mov	r1, r3
 800c8be:	6878      	ldr	r0, [r7, #4]
 800c8c0:	f000 f83e 	bl	800c940 <HAL_UARTEx_RxEventCallback>
 800c8c4:	e023      	b.n	800c90e <HAL_UART_IRQHandler+0x512>
 800c8c6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c8ca:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800c8ce:	2b00      	cmp	r3, #0
 800c8d0:	d009      	beq.n	800c8e6 <HAL_UART_IRQHandler+0x4ea>
 800c8d2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c8d6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800c8da:	2b00      	cmp	r3, #0
 800c8dc:	d003      	beq.n	800c8e6 <HAL_UART_IRQHandler+0x4ea>
 800c8de:	6878      	ldr	r0, [r7, #4]
 800c8e0:	f000 f95d 	bl	800cb9e <UART_Transmit_IT>
 800c8e4:	e014      	b.n	800c910 <HAL_UART_IRQHandler+0x514>
 800c8e6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c8ea:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c8ee:	2b00      	cmp	r3, #0
 800c8f0:	d00e      	beq.n	800c910 <HAL_UART_IRQHandler+0x514>
 800c8f2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c8f6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c8fa:	2b00      	cmp	r3, #0
 800c8fc:	d008      	beq.n	800c910 <HAL_UART_IRQHandler+0x514>
 800c8fe:	6878      	ldr	r0, [r7, #4]
 800c900:	f000 f99d 	bl	800cc3e <UART_EndTransmit_IT>
 800c904:	e004      	b.n	800c910 <HAL_UART_IRQHandler+0x514>
 800c906:	bf00      	nop
 800c908:	e002      	b.n	800c910 <HAL_UART_IRQHandler+0x514>
 800c90a:	bf00      	nop
 800c90c:	e000      	b.n	800c910 <HAL_UART_IRQHandler+0x514>
 800c90e:	bf00      	nop
 800c910:	37e8      	adds	r7, #232	; 0xe8
 800c912:	46bd      	mov	sp, r7
 800c914:	bd80      	pop	{r7, pc}
 800c916:	bf00      	nop

0800c918 <HAL_UART_TxCpltCallback>:
 800c918:	b480      	push	{r7}
 800c91a:	b083      	sub	sp, #12
 800c91c:	af00      	add	r7, sp, #0
 800c91e:	6078      	str	r0, [r7, #4]
 800c920:	bf00      	nop
 800c922:	370c      	adds	r7, #12
 800c924:	46bd      	mov	sp, r7
 800c926:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c92a:	4770      	bx	lr

0800c92c <HAL_UART_ErrorCallback>:
 800c92c:	b480      	push	{r7}
 800c92e:	b083      	sub	sp, #12
 800c930:	af00      	add	r7, sp, #0
 800c932:	6078      	str	r0, [r7, #4]
 800c934:	bf00      	nop
 800c936:	370c      	adds	r7, #12
 800c938:	46bd      	mov	sp, r7
 800c93a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c93e:	4770      	bx	lr

0800c940 <HAL_UARTEx_RxEventCallback>:
 800c940:	b480      	push	{r7}
 800c942:	b083      	sub	sp, #12
 800c944:	af00      	add	r7, sp, #0
 800c946:	6078      	str	r0, [r7, #4]
 800c948:	460b      	mov	r3, r1
 800c94a:	807b      	strh	r3, [r7, #2]
 800c94c:	bf00      	nop
 800c94e:	370c      	adds	r7, #12
 800c950:	46bd      	mov	sp, r7
 800c952:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c956:	4770      	bx	lr

0800c958 <UART_WaitOnFlagUntilTimeout>:
 800c958:	b580      	push	{r7, lr}
 800c95a:	b090      	sub	sp, #64	; 0x40
 800c95c:	af00      	add	r7, sp, #0
 800c95e:	60f8      	str	r0, [r7, #12]
 800c960:	60b9      	str	r1, [r7, #8]
 800c962:	603b      	str	r3, [r7, #0]
 800c964:	4613      	mov	r3, r2
 800c966:	71fb      	strb	r3, [r7, #7]
 800c968:	e050      	b.n	800ca0c <UART_WaitOnFlagUntilTimeout+0xb4>
 800c96a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800c96c:	f1b3 3fff 	cmp.w	r3, #4294967295
 800c970:	d04c      	beq.n	800ca0c <UART_WaitOnFlagUntilTimeout+0xb4>
 800c972:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800c974:	2b00      	cmp	r3, #0
 800c976:	d007      	beq.n	800c988 <UART_WaitOnFlagUntilTimeout+0x30>
 800c978:	f7fa ffe2 	bl	8007940 <HAL_GetTick>
 800c97c:	4602      	mov	r2, r0
 800c97e:	683b      	ldr	r3, [r7, #0]
 800c980:	1ad3      	subs	r3, r2, r3
 800c982:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800c984:	429a      	cmp	r2, r3
 800c986:	d241      	bcs.n	800ca0c <UART_WaitOnFlagUntilTimeout+0xb4>
 800c988:	68fb      	ldr	r3, [r7, #12]
 800c98a:	681b      	ldr	r3, [r3, #0]
 800c98c:	330c      	adds	r3, #12
 800c98e:	62bb      	str	r3, [r7, #40]	; 0x28
 800c990:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c992:	e853 3f00 	ldrex	r3, [r3]
 800c996:	627b      	str	r3, [r7, #36]	; 0x24
 800c998:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c99a:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800c99e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800c9a0:	68fb      	ldr	r3, [r7, #12]
 800c9a2:	681b      	ldr	r3, [r3, #0]
 800c9a4:	330c      	adds	r3, #12
 800c9a6:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800c9a8:	637a      	str	r2, [r7, #52]	; 0x34
 800c9aa:	633b      	str	r3, [r7, #48]	; 0x30
 800c9ac:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800c9ae:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800c9b0:	e841 2300 	strex	r3, r2, [r1]
 800c9b4:	62fb      	str	r3, [r7, #44]	; 0x2c
 800c9b6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800c9b8:	2b00      	cmp	r3, #0
 800c9ba:	d1e5      	bne.n	800c988 <UART_WaitOnFlagUntilTimeout+0x30>
 800c9bc:	68fb      	ldr	r3, [r7, #12]
 800c9be:	681b      	ldr	r3, [r3, #0]
 800c9c0:	3314      	adds	r3, #20
 800c9c2:	617b      	str	r3, [r7, #20]
 800c9c4:	697b      	ldr	r3, [r7, #20]
 800c9c6:	e853 3f00 	ldrex	r3, [r3]
 800c9ca:	613b      	str	r3, [r7, #16]
 800c9cc:	693b      	ldr	r3, [r7, #16]
 800c9ce:	f023 0301 	bic.w	r3, r3, #1
 800c9d2:	63bb      	str	r3, [r7, #56]	; 0x38
 800c9d4:	68fb      	ldr	r3, [r7, #12]
 800c9d6:	681b      	ldr	r3, [r3, #0]
 800c9d8:	3314      	adds	r3, #20
 800c9da:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800c9dc:	623a      	str	r2, [r7, #32]
 800c9de:	61fb      	str	r3, [r7, #28]
 800c9e0:	69f9      	ldr	r1, [r7, #28]
 800c9e2:	6a3a      	ldr	r2, [r7, #32]
 800c9e4:	e841 2300 	strex	r3, r2, [r1]
 800c9e8:	61bb      	str	r3, [r7, #24]
 800c9ea:	69bb      	ldr	r3, [r7, #24]
 800c9ec:	2b00      	cmp	r3, #0
 800c9ee:	d1e5      	bne.n	800c9bc <UART_WaitOnFlagUntilTimeout+0x64>
 800c9f0:	68fb      	ldr	r3, [r7, #12]
 800c9f2:	2220      	movs	r2, #32
 800c9f4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c9f8:	68fb      	ldr	r3, [r7, #12]
 800c9fa:	2220      	movs	r2, #32
 800c9fc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800ca00:	68fb      	ldr	r3, [r7, #12]
 800ca02:	2200      	movs	r2, #0
 800ca04:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ca08:	2303      	movs	r3, #3
 800ca0a:	e00f      	b.n	800ca2c <UART_WaitOnFlagUntilTimeout+0xd4>
 800ca0c:	68fb      	ldr	r3, [r7, #12]
 800ca0e:	681b      	ldr	r3, [r3, #0]
 800ca10:	681a      	ldr	r2, [r3, #0]
 800ca12:	68bb      	ldr	r3, [r7, #8]
 800ca14:	4013      	ands	r3, r2
 800ca16:	68ba      	ldr	r2, [r7, #8]
 800ca18:	429a      	cmp	r2, r3
 800ca1a:	bf0c      	ite	eq
 800ca1c:	2301      	moveq	r3, #1
 800ca1e:	2300      	movne	r3, #0
 800ca20:	b2db      	uxtb	r3, r3
 800ca22:	461a      	mov	r2, r3
 800ca24:	79fb      	ldrb	r3, [r7, #7]
 800ca26:	429a      	cmp	r2, r3
 800ca28:	d09f      	beq.n	800c96a <UART_WaitOnFlagUntilTimeout+0x12>
 800ca2a:	2300      	movs	r3, #0
 800ca2c:	4618      	mov	r0, r3
 800ca2e:	3740      	adds	r7, #64	; 0x40
 800ca30:	46bd      	mov	sp, r7
 800ca32:	bd80      	pop	{r7, pc}

0800ca34 <UART_Start_Receive_IT>:
 800ca34:	b480      	push	{r7}
 800ca36:	b085      	sub	sp, #20
 800ca38:	af00      	add	r7, sp, #0
 800ca3a:	60f8      	str	r0, [r7, #12]
 800ca3c:	60b9      	str	r1, [r7, #8]
 800ca3e:	4613      	mov	r3, r2
 800ca40:	80fb      	strh	r3, [r7, #6]
 800ca42:	68fb      	ldr	r3, [r7, #12]
 800ca44:	68ba      	ldr	r2, [r7, #8]
 800ca46:	629a      	str	r2, [r3, #40]	; 0x28
 800ca48:	68fb      	ldr	r3, [r7, #12]
 800ca4a:	88fa      	ldrh	r2, [r7, #6]
 800ca4c:	859a      	strh	r2, [r3, #44]	; 0x2c
 800ca4e:	68fb      	ldr	r3, [r7, #12]
 800ca50:	88fa      	ldrh	r2, [r7, #6]
 800ca52:	85da      	strh	r2, [r3, #46]	; 0x2e
 800ca54:	68fb      	ldr	r3, [r7, #12]
 800ca56:	2200      	movs	r2, #0
 800ca58:	641a      	str	r2, [r3, #64]	; 0x40
 800ca5a:	68fb      	ldr	r3, [r7, #12]
 800ca5c:	2222      	movs	r2, #34	; 0x22
 800ca5e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800ca62:	68fb      	ldr	r3, [r7, #12]
 800ca64:	2200      	movs	r2, #0
 800ca66:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ca6a:	68fb      	ldr	r3, [r7, #12]
 800ca6c:	691b      	ldr	r3, [r3, #16]
 800ca6e:	2b00      	cmp	r3, #0
 800ca70:	d007      	beq.n	800ca82 <UART_Start_Receive_IT+0x4e>
 800ca72:	68fb      	ldr	r3, [r7, #12]
 800ca74:	681b      	ldr	r3, [r3, #0]
 800ca76:	68da      	ldr	r2, [r3, #12]
 800ca78:	68fb      	ldr	r3, [r7, #12]
 800ca7a:	681b      	ldr	r3, [r3, #0]
 800ca7c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800ca80:	60da      	str	r2, [r3, #12]
 800ca82:	68fb      	ldr	r3, [r7, #12]
 800ca84:	681b      	ldr	r3, [r3, #0]
 800ca86:	695a      	ldr	r2, [r3, #20]
 800ca88:	68fb      	ldr	r3, [r7, #12]
 800ca8a:	681b      	ldr	r3, [r3, #0]
 800ca8c:	f042 0201 	orr.w	r2, r2, #1
 800ca90:	615a      	str	r2, [r3, #20]
 800ca92:	68fb      	ldr	r3, [r7, #12]
 800ca94:	681b      	ldr	r3, [r3, #0]
 800ca96:	68da      	ldr	r2, [r3, #12]
 800ca98:	68fb      	ldr	r3, [r7, #12]
 800ca9a:	681b      	ldr	r3, [r3, #0]
 800ca9c:	f042 0220 	orr.w	r2, r2, #32
 800caa0:	60da      	str	r2, [r3, #12]
 800caa2:	2300      	movs	r3, #0
 800caa4:	4618      	mov	r0, r3
 800caa6:	3714      	adds	r7, #20
 800caa8:	46bd      	mov	sp, r7
 800caaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800caae:	4770      	bx	lr

0800cab0 <UART_EndRxTransfer>:
 800cab0:	b480      	push	{r7}
 800cab2:	b095      	sub	sp, #84	; 0x54
 800cab4:	af00      	add	r7, sp, #0
 800cab6:	6078      	str	r0, [r7, #4]
 800cab8:	687b      	ldr	r3, [r7, #4]
 800caba:	681b      	ldr	r3, [r3, #0]
 800cabc:	330c      	adds	r3, #12
 800cabe:	637b      	str	r3, [r7, #52]	; 0x34
 800cac0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800cac2:	e853 3f00 	ldrex	r3, [r3]
 800cac6:	633b      	str	r3, [r7, #48]	; 0x30
 800cac8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800caca:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800cace:	64fb      	str	r3, [r7, #76]	; 0x4c
 800cad0:	687b      	ldr	r3, [r7, #4]
 800cad2:	681b      	ldr	r3, [r3, #0]
 800cad4:	330c      	adds	r3, #12
 800cad6:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800cad8:	643a      	str	r2, [r7, #64]	; 0x40
 800cada:	63fb      	str	r3, [r7, #60]	; 0x3c
 800cadc:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800cade:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800cae0:	e841 2300 	strex	r3, r2, [r1]
 800cae4:	63bb      	str	r3, [r7, #56]	; 0x38
 800cae6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800cae8:	2b00      	cmp	r3, #0
 800caea:	d1e5      	bne.n	800cab8 <UART_EndRxTransfer+0x8>
 800caec:	687b      	ldr	r3, [r7, #4]
 800caee:	681b      	ldr	r3, [r3, #0]
 800caf0:	3314      	adds	r3, #20
 800caf2:	623b      	str	r3, [r7, #32]
 800caf4:	6a3b      	ldr	r3, [r7, #32]
 800caf6:	e853 3f00 	ldrex	r3, [r3]
 800cafa:	61fb      	str	r3, [r7, #28]
 800cafc:	69fb      	ldr	r3, [r7, #28]
 800cafe:	f023 0301 	bic.w	r3, r3, #1
 800cb02:	64bb      	str	r3, [r7, #72]	; 0x48
 800cb04:	687b      	ldr	r3, [r7, #4]
 800cb06:	681b      	ldr	r3, [r3, #0]
 800cb08:	3314      	adds	r3, #20
 800cb0a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800cb0c:	62fa      	str	r2, [r7, #44]	; 0x2c
 800cb0e:	62bb      	str	r3, [r7, #40]	; 0x28
 800cb10:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800cb12:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800cb14:	e841 2300 	strex	r3, r2, [r1]
 800cb18:	627b      	str	r3, [r7, #36]	; 0x24
 800cb1a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cb1c:	2b00      	cmp	r3, #0
 800cb1e:	d1e5      	bne.n	800caec <UART_EndRxTransfer+0x3c>
 800cb20:	687b      	ldr	r3, [r7, #4]
 800cb22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cb24:	2b01      	cmp	r3, #1
 800cb26:	d119      	bne.n	800cb5c <UART_EndRxTransfer+0xac>
 800cb28:	687b      	ldr	r3, [r7, #4]
 800cb2a:	681b      	ldr	r3, [r3, #0]
 800cb2c:	330c      	adds	r3, #12
 800cb2e:	60fb      	str	r3, [r7, #12]
 800cb30:	68fb      	ldr	r3, [r7, #12]
 800cb32:	e853 3f00 	ldrex	r3, [r3]
 800cb36:	60bb      	str	r3, [r7, #8]
 800cb38:	68bb      	ldr	r3, [r7, #8]
 800cb3a:	f023 0310 	bic.w	r3, r3, #16
 800cb3e:	647b      	str	r3, [r7, #68]	; 0x44
 800cb40:	687b      	ldr	r3, [r7, #4]
 800cb42:	681b      	ldr	r3, [r3, #0]
 800cb44:	330c      	adds	r3, #12
 800cb46:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800cb48:	61ba      	str	r2, [r7, #24]
 800cb4a:	617b      	str	r3, [r7, #20]
 800cb4c:	6979      	ldr	r1, [r7, #20]
 800cb4e:	69ba      	ldr	r2, [r7, #24]
 800cb50:	e841 2300 	strex	r3, r2, [r1]
 800cb54:	613b      	str	r3, [r7, #16]
 800cb56:	693b      	ldr	r3, [r7, #16]
 800cb58:	2b00      	cmp	r3, #0
 800cb5a:	d1e5      	bne.n	800cb28 <UART_EndRxTransfer+0x78>
 800cb5c:	687b      	ldr	r3, [r7, #4]
 800cb5e:	2220      	movs	r2, #32
 800cb60:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800cb64:	687b      	ldr	r3, [r7, #4]
 800cb66:	2200      	movs	r2, #0
 800cb68:	631a      	str	r2, [r3, #48]	; 0x30
 800cb6a:	bf00      	nop
 800cb6c:	3754      	adds	r7, #84	; 0x54
 800cb6e:	46bd      	mov	sp, r7
 800cb70:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb74:	4770      	bx	lr

0800cb76 <UART_DMAAbortOnError>:
 800cb76:	b580      	push	{r7, lr}
 800cb78:	b084      	sub	sp, #16
 800cb7a:	af00      	add	r7, sp, #0
 800cb7c:	6078      	str	r0, [r7, #4]
 800cb7e:	687b      	ldr	r3, [r7, #4]
 800cb80:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cb82:	60fb      	str	r3, [r7, #12]
 800cb84:	68fb      	ldr	r3, [r7, #12]
 800cb86:	2200      	movs	r2, #0
 800cb88:	85da      	strh	r2, [r3, #46]	; 0x2e
 800cb8a:	68fb      	ldr	r3, [r7, #12]
 800cb8c:	2200      	movs	r2, #0
 800cb8e:	84da      	strh	r2, [r3, #38]	; 0x26
 800cb90:	68f8      	ldr	r0, [r7, #12]
 800cb92:	f7ff fecb 	bl	800c92c <HAL_UART_ErrorCallback>
 800cb96:	bf00      	nop
 800cb98:	3710      	adds	r7, #16
 800cb9a:	46bd      	mov	sp, r7
 800cb9c:	bd80      	pop	{r7, pc}

0800cb9e <UART_Transmit_IT>:
 800cb9e:	b480      	push	{r7}
 800cba0:	b085      	sub	sp, #20
 800cba2:	af00      	add	r7, sp, #0
 800cba4:	6078      	str	r0, [r7, #4]
 800cba6:	687b      	ldr	r3, [r7, #4]
 800cba8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800cbac:	b2db      	uxtb	r3, r3
 800cbae:	2b21      	cmp	r3, #33	; 0x21
 800cbb0:	d13e      	bne.n	800cc30 <UART_Transmit_IT+0x92>
 800cbb2:	687b      	ldr	r3, [r7, #4]
 800cbb4:	689b      	ldr	r3, [r3, #8]
 800cbb6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800cbba:	d114      	bne.n	800cbe6 <UART_Transmit_IT+0x48>
 800cbbc:	687b      	ldr	r3, [r7, #4]
 800cbbe:	691b      	ldr	r3, [r3, #16]
 800cbc0:	2b00      	cmp	r3, #0
 800cbc2:	d110      	bne.n	800cbe6 <UART_Transmit_IT+0x48>
 800cbc4:	687b      	ldr	r3, [r7, #4]
 800cbc6:	6a1b      	ldr	r3, [r3, #32]
 800cbc8:	60fb      	str	r3, [r7, #12]
 800cbca:	68fb      	ldr	r3, [r7, #12]
 800cbcc:	881b      	ldrh	r3, [r3, #0]
 800cbce:	461a      	mov	r2, r3
 800cbd0:	687b      	ldr	r3, [r7, #4]
 800cbd2:	681b      	ldr	r3, [r3, #0]
 800cbd4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800cbd8:	605a      	str	r2, [r3, #4]
 800cbda:	687b      	ldr	r3, [r7, #4]
 800cbdc:	6a1b      	ldr	r3, [r3, #32]
 800cbde:	1c9a      	adds	r2, r3, #2
 800cbe0:	687b      	ldr	r3, [r7, #4]
 800cbe2:	621a      	str	r2, [r3, #32]
 800cbe4:	e008      	b.n	800cbf8 <UART_Transmit_IT+0x5a>
 800cbe6:	687b      	ldr	r3, [r7, #4]
 800cbe8:	6a1b      	ldr	r3, [r3, #32]
 800cbea:	1c59      	adds	r1, r3, #1
 800cbec:	687a      	ldr	r2, [r7, #4]
 800cbee:	6211      	str	r1, [r2, #32]
 800cbf0:	781a      	ldrb	r2, [r3, #0]
 800cbf2:	687b      	ldr	r3, [r7, #4]
 800cbf4:	681b      	ldr	r3, [r3, #0]
 800cbf6:	605a      	str	r2, [r3, #4]
 800cbf8:	687b      	ldr	r3, [r7, #4]
 800cbfa:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800cbfc:	b29b      	uxth	r3, r3
 800cbfe:	3b01      	subs	r3, #1
 800cc00:	b29b      	uxth	r3, r3
 800cc02:	687a      	ldr	r2, [r7, #4]
 800cc04:	4619      	mov	r1, r3
 800cc06:	84d1      	strh	r1, [r2, #38]	; 0x26
 800cc08:	2b00      	cmp	r3, #0
 800cc0a:	d10f      	bne.n	800cc2c <UART_Transmit_IT+0x8e>
 800cc0c:	687b      	ldr	r3, [r7, #4]
 800cc0e:	681b      	ldr	r3, [r3, #0]
 800cc10:	68da      	ldr	r2, [r3, #12]
 800cc12:	687b      	ldr	r3, [r7, #4]
 800cc14:	681b      	ldr	r3, [r3, #0]
 800cc16:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800cc1a:	60da      	str	r2, [r3, #12]
 800cc1c:	687b      	ldr	r3, [r7, #4]
 800cc1e:	681b      	ldr	r3, [r3, #0]
 800cc20:	68da      	ldr	r2, [r3, #12]
 800cc22:	687b      	ldr	r3, [r7, #4]
 800cc24:	681b      	ldr	r3, [r3, #0]
 800cc26:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800cc2a:	60da      	str	r2, [r3, #12]
 800cc2c:	2300      	movs	r3, #0
 800cc2e:	e000      	b.n	800cc32 <UART_Transmit_IT+0x94>
 800cc30:	2302      	movs	r3, #2
 800cc32:	4618      	mov	r0, r3
 800cc34:	3714      	adds	r7, #20
 800cc36:	46bd      	mov	sp, r7
 800cc38:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc3c:	4770      	bx	lr

0800cc3e <UART_EndTransmit_IT>:
 800cc3e:	b580      	push	{r7, lr}
 800cc40:	b082      	sub	sp, #8
 800cc42:	af00      	add	r7, sp, #0
 800cc44:	6078      	str	r0, [r7, #4]
 800cc46:	687b      	ldr	r3, [r7, #4]
 800cc48:	681b      	ldr	r3, [r3, #0]
 800cc4a:	68da      	ldr	r2, [r3, #12]
 800cc4c:	687b      	ldr	r3, [r7, #4]
 800cc4e:	681b      	ldr	r3, [r3, #0]
 800cc50:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800cc54:	60da      	str	r2, [r3, #12]
 800cc56:	687b      	ldr	r3, [r7, #4]
 800cc58:	2220      	movs	r2, #32
 800cc5a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800cc5e:	6878      	ldr	r0, [r7, #4]
 800cc60:	f7ff fe5a 	bl	800c918 <HAL_UART_TxCpltCallback>
 800cc64:	2300      	movs	r3, #0
 800cc66:	4618      	mov	r0, r3
 800cc68:	3708      	adds	r7, #8
 800cc6a:	46bd      	mov	sp, r7
 800cc6c:	bd80      	pop	{r7, pc}

0800cc6e <UART_Receive_IT>:
 800cc6e:	b580      	push	{r7, lr}
 800cc70:	b08c      	sub	sp, #48	; 0x30
 800cc72:	af00      	add	r7, sp, #0
 800cc74:	6078      	str	r0, [r7, #4]
 800cc76:	687b      	ldr	r3, [r7, #4]
 800cc78:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800cc7c:	b2db      	uxtb	r3, r3
 800cc7e:	2b22      	cmp	r3, #34	; 0x22
 800cc80:	f040 80ab 	bne.w	800cdda <UART_Receive_IT+0x16c>
 800cc84:	687b      	ldr	r3, [r7, #4]
 800cc86:	689b      	ldr	r3, [r3, #8]
 800cc88:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800cc8c:	d117      	bne.n	800ccbe <UART_Receive_IT+0x50>
 800cc8e:	687b      	ldr	r3, [r7, #4]
 800cc90:	691b      	ldr	r3, [r3, #16]
 800cc92:	2b00      	cmp	r3, #0
 800cc94:	d113      	bne.n	800ccbe <UART_Receive_IT+0x50>
 800cc96:	2300      	movs	r3, #0
 800cc98:	62fb      	str	r3, [r7, #44]	; 0x2c
 800cc9a:	687b      	ldr	r3, [r7, #4]
 800cc9c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cc9e:	62bb      	str	r3, [r7, #40]	; 0x28
 800cca0:	687b      	ldr	r3, [r7, #4]
 800cca2:	681b      	ldr	r3, [r3, #0]
 800cca4:	685b      	ldr	r3, [r3, #4]
 800cca6:	b29b      	uxth	r3, r3
 800cca8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800ccac:	b29a      	uxth	r2, r3
 800ccae:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ccb0:	801a      	strh	r2, [r3, #0]
 800ccb2:	687b      	ldr	r3, [r7, #4]
 800ccb4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ccb6:	1c9a      	adds	r2, r3, #2
 800ccb8:	687b      	ldr	r3, [r7, #4]
 800ccba:	629a      	str	r2, [r3, #40]	; 0x28
 800ccbc:	e026      	b.n	800cd0c <UART_Receive_IT+0x9e>
 800ccbe:	687b      	ldr	r3, [r7, #4]
 800ccc0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ccc2:	62fb      	str	r3, [r7, #44]	; 0x2c
 800ccc4:	2300      	movs	r3, #0
 800ccc6:	62bb      	str	r3, [r7, #40]	; 0x28
 800ccc8:	687b      	ldr	r3, [r7, #4]
 800ccca:	689b      	ldr	r3, [r3, #8]
 800cccc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800ccd0:	d007      	beq.n	800cce2 <UART_Receive_IT+0x74>
 800ccd2:	687b      	ldr	r3, [r7, #4]
 800ccd4:	689b      	ldr	r3, [r3, #8]
 800ccd6:	2b00      	cmp	r3, #0
 800ccd8:	d10a      	bne.n	800ccf0 <UART_Receive_IT+0x82>
 800ccda:	687b      	ldr	r3, [r7, #4]
 800ccdc:	691b      	ldr	r3, [r3, #16]
 800ccde:	2b00      	cmp	r3, #0
 800cce0:	d106      	bne.n	800ccf0 <UART_Receive_IT+0x82>
 800cce2:	687b      	ldr	r3, [r7, #4]
 800cce4:	681b      	ldr	r3, [r3, #0]
 800cce6:	685b      	ldr	r3, [r3, #4]
 800cce8:	b2da      	uxtb	r2, r3
 800ccea:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800ccec:	701a      	strb	r2, [r3, #0]
 800ccee:	e008      	b.n	800cd02 <UART_Receive_IT+0x94>
 800ccf0:	687b      	ldr	r3, [r7, #4]
 800ccf2:	681b      	ldr	r3, [r3, #0]
 800ccf4:	685b      	ldr	r3, [r3, #4]
 800ccf6:	b2db      	uxtb	r3, r3
 800ccf8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800ccfc:	b2da      	uxtb	r2, r3
 800ccfe:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800cd00:	701a      	strb	r2, [r3, #0]
 800cd02:	687b      	ldr	r3, [r7, #4]
 800cd04:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cd06:	1c5a      	adds	r2, r3, #1
 800cd08:	687b      	ldr	r3, [r7, #4]
 800cd0a:	629a      	str	r2, [r3, #40]	; 0x28
 800cd0c:	687b      	ldr	r3, [r7, #4]
 800cd0e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800cd10:	b29b      	uxth	r3, r3
 800cd12:	3b01      	subs	r3, #1
 800cd14:	b29b      	uxth	r3, r3
 800cd16:	687a      	ldr	r2, [r7, #4]
 800cd18:	4619      	mov	r1, r3
 800cd1a:	85d1      	strh	r1, [r2, #46]	; 0x2e
 800cd1c:	2b00      	cmp	r3, #0
 800cd1e:	d15a      	bne.n	800cdd6 <UART_Receive_IT+0x168>
 800cd20:	687b      	ldr	r3, [r7, #4]
 800cd22:	681b      	ldr	r3, [r3, #0]
 800cd24:	68da      	ldr	r2, [r3, #12]
 800cd26:	687b      	ldr	r3, [r7, #4]
 800cd28:	681b      	ldr	r3, [r3, #0]
 800cd2a:	f022 0220 	bic.w	r2, r2, #32
 800cd2e:	60da      	str	r2, [r3, #12]
 800cd30:	687b      	ldr	r3, [r7, #4]
 800cd32:	681b      	ldr	r3, [r3, #0]
 800cd34:	68da      	ldr	r2, [r3, #12]
 800cd36:	687b      	ldr	r3, [r7, #4]
 800cd38:	681b      	ldr	r3, [r3, #0]
 800cd3a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800cd3e:	60da      	str	r2, [r3, #12]
 800cd40:	687b      	ldr	r3, [r7, #4]
 800cd42:	681b      	ldr	r3, [r3, #0]
 800cd44:	695a      	ldr	r2, [r3, #20]
 800cd46:	687b      	ldr	r3, [r7, #4]
 800cd48:	681b      	ldr	r3, [r3, #0]
 800cd4a:	f022 0201 	bic.w	r2, r2, #1
 800cd4e:	615a      	str	r2, [r3, #20]
 800cd50:	687b      	ldr	r3, [r7, #4]
 800cd52:	2220      	movs	r2, #32
 800cd54:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800cd58:	687b      	ldr	r3, [r7, #4]
 800cd5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cd5c:	2b01      	cmp	r3, #1
 800cd5e:	d135      	bne.n	800cdcc <UART_Receive_IT+0x15e>
 800cd60:	687b      	ldr	r3, [r7, #4]
 800cd62:	2200      	movs	r2, #0
 800cd64:	631a      	str	r2, [r3, #48]	; 0x30
 800cd66:	687b      	ldr	r3, [r7, #4]
 800cd68:	681b      	ldr	r3, [r3, #0]
 800cd6a:	330c      	adds	r3, #12
 800cd6c:	617b      	str	r3, [r7, #20]
 800cd6e:	697b      	ldr	r3, [r7, #20]
 800cd70:	e853 3f00 	ldrex	r3, [r3]
 800cd74:	613b      	str	r3, [r7, #16]
 800cd76:	693b      	ldr	r3, [r7, #16]
 800cd78:	f023 0310 	bic.w	r3, r3, #16
 800cd7c:	627b      	str	r3, [r7, #36]	; 0x24
 800cd7e:	687b      	ldr	r3, [r7, #4]
 800cd80:	681b      	ldr	r3, [r3, #0]
 800cd82:	330c      	adds	r3, #12
 800cd84:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800cd86:	623a      	str	r2, [r7, #32]
 800cd88:	61fb      	str	r3, [r7, #28]
 800cd8a:	69f9      	ldr	r1, [r7, #28]
 800cd8c:	6a3a      	ldr	r2, [r7, #32]
 800cd8e:	e841 2300 	strex	r3, r2, [r1]
 800cd92:	61bb      	str	r3, [r7, #24]
 800cd94:	69bb      	ldr	r3, [r7, #24]
 800cd96:	2b00      	cmp	r3, #0
 800cd98:	d1e5      	bne.n	800cd66 <UART_Receive_IT+0xf8>
 800cd9a:	687b      	ldr	r3, [r7, #4]
 800cd9c:	681b      	ldr	r3, [r3, #0]
 800cd9e:	681b      	ldr	r3, [r3, #0]
 800cda0:	f003 0310 	and.w	r3, r3, #16
 800cda4:	2b10      	cmp	r3, #16
 800cda6:	d10a      	bne.n	800cdbe <UART_Receive_IT+0x150>
 800cda8:	2300      	movs	r3, #0
 800cdaa:	60fb      	str	r3, [r7, #12]
 800cdac:	687b      	ldr	r3, [r7, #4]
 800cdae:	681b      	ldr	r3, [r3, #0]
 800cdb0:	681b      	ldr	r3, [r3, #0]
 800cdb2:	60fb      	str	r3, [r7, #12]
 800cdb4:	687b      	ldr	r3, [r7, #4]
 800cdb6:	681b      	ldr	r3, [r3, #0]
 800cdb8:	685b      	ldr	r3, [r3, #4]
 800cdba:	60fb      	str	r3, [r7, #12]
 800cdbc:	68fb      	ldr	r3, [r7, #12]
 800cdbe:	687b      	ldr	r3, [r7, #4]
 800cdc0:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800cdc2:	4619      	mov	r1, r3
 800cdc4:	6878      	ldr	r0, [r7, #4]
 800cdc6:	f7ff fdbb 	bl	800c940 <HAL_UARTEx_RxEventCallback>
 800cdca:	e002      	b.n	800cdd2 <UART_Receive_IT+0x164>
 800cdcc:	6878      	ldr	r0, [r7, #4]
 800cdce:	f7f9 ff0d 	bl	8006bec <HAL_UART_RxCpltCallback>
 800cdd2:	2300      	movs	r3, #0
 800cdd4:	e002      	b.n	800cddc <UART_Receive_IT+0x16e>
 800cdd6:	2300      	movs	r3, #0
 800cdd8:	e000      	b.n	800cddc <UART_Receive_IT+0x16e>
 800cdda:	2302      	movs	r3, #2
 800cddc:	4618      	mov	r0, r3
 800cdde:	3730      	adds	r7, #48	; 0x30
 800cde0:	46bd      	mov	sp, r7
 800cde2:	bd80      	pop	{r7, pc}

0800cde4 <UART_SetConfig>:
 800cde4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800cde8:	b0c0      	sub	sp, #256	; 0x100
 800cdea:	af00      	add	r7, sp, #0
 800cdec:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 800cdf0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cdf4:	681b      	ldr	r3, [r3, #0]
 800cdf6:	691b      	ldr	r3, [r3, #16]
 800cdf8:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 800cdfc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ce00:	68d9      	ldr	r1, [r3, #12]
 800ce02:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ce06:	681a      	ldr	r2, [r3, #0]
 800ce08:	ea40 0301 	orr.w	r3, r0, r1
 800ce0c:	6113      	str	r3, [r2, #16]
 800ce0e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ce12:	689a      	ldr	r2, [r3, #8]
 800ce14:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ce18:	691b      	ldr	r3, [r3, #16]
 800ce1a:	431a      	orrs	r2, r3
 800ce1c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ce20:	695b      	ldr	r3, [r3, #20]
 800ce22:	431a      	orrs	r2, r3
 800ce24:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ce28:	69db      	ldr	r3, [r3, #28]
 800ce2a:	4313      	orrs	r3, r2
 800ce2c:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 800ce30:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ce34:	681b      	ldr	r3, [r3, #0]
 800ce36:	68db      	ldr	r3, [r3, #12]
 800ce38:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 800ce3c:	f021 010c 	bic.w	r1, r1, #12
 800ce40:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ce44:	681a      	ldr	r2, [r3, #0]
 800ce46:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 800ce4a:	430b      	orrs	r3, r1
 800ce4c:	60d3      	str	r3, [r2, #12]
 800ce4e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ce52:	681b      	ldr	r3, [r3, #0]
 800ce54:	695b      	ldr	r3, [r3, #20]
 800ce56:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 800ce5a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ce5e:	6999      	ldr	r1, [r3, #24]
 800ce60:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ce64:	681a      	ldr	r2, [r3, #0]
 800ce66:	ea40 0301 	orr.w	r3, r0, r1
 800ce6a:	6153      	str	r3, [r2, #20]
 800ce6c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ce70:	681a      	ldr	r2, [r3, #0]
 800ce72:	4b8f      	ldr	r3, [pc, #572]	; (800d0b0 <UART_SetConfig+0x2cc>)
 800ce74:	429a      	cmp	r2, r3
 800ce76:	d005      	beq.n	800ce84 <UART_SetConfig+0xa0>
 800ce78:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ce7c:	681a      	ldr	r2, [r3, #0]
 800ce7e:	4b8d      	ldr	r3, [pc, #564]	; (800d0b4 <UART_SetConfig+0x2d0>)
 800ce80:	429a      	cmp	r2, r3
 800ce82:	d104      	bne.n	800ce8e <UART_SetConfig+0xaa>
 800ce84:	f7fc fda4 	bl	80099d0 <HAL_RCC_GetPCLK2Freq>
 800ce88:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800ce8c:	e003      	b.n	800ce96 <UART_SetConfig+0xb2>
 800ce8e:	f7fc fd8b 	bl	80099a8 <HAL_RCC_GetPCLK1Freq>
 800ce92:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800ce96:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ce9a:	69db      	ldr	r3, [r3, #28]
 800ce9c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800cea0:	f040 810c 	bne.w	800d0bc <UART_SetConfig+0x2d8>
 800cea4:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800cea8:	2200      	movs	r2, #0
 800ceaa:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800ceae:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 800ceb2:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 800ceb6:	4622      	mov	r2, r4
 800ceb8:	462b      	mov	r3, r5
 800ceba:	1891      	adds	r1, r2, r2
 800cebc:	65b9      	str	r1, [r7, #88]	; 0x58
 800cebe:	415b      	adcs	r3, r3
 800cec0:	65fb      	str	r3, [r7, #92]	; 0x5c
 800cec2:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800cec6:	4621      	mov	r1, r4
 800cec8:	eb12 0801 	adds.w	r8, r2, r1
 800cecc:	4629      	mov	r1, r5
 800cece:	eb43 0901 	adc.w	r9, r3, r1
 800ced2:	f04f 0200 	mov.w	r2, #0
 800ced6:	f04f 0300 	mov.w	r3, #0
 800ceda:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800cede:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800cee2:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800cee6:	4690      	mov	r8, r2
 800cee8:	4699      	mov	r9, r3
 800ceea:	4623      	mov	r3, r4
 800ceec:	eb18 0303 	adds.w	r3, r8, r3
 800cef0:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800cef4:	462b      	mov	r3, r5
 800cef6:	eb49 0303 	adc.w	r3, r9, r3
 800cefa:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800cefe:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cf02:	685b      	ldr	r3, [r3, #4]
 800cf04:	2200      	movs	r2, #0
 800cf06:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800cf0a:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 800cf0e:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 800cf12:	460b      	mov	r3, r1
 800cf14:	18db      	adds	r3, r3, r3
 800cf16:	653b      	str	r3, [r7, #80]	; 0x50
 800cf18:	4613      	mov	r3, r2
 800cf1a:	eb42 0303 	adc.w	r3, r2, r3
 800cf1e:	657b      	str	r3, [r7, #84]	; 0x54
 800cf20:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800cf24:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800cf28:	f7f3 feae 	bl	8000c88 <__aeabi_uldivmod>
 800cf2c:	4602      	mov	r2, r0
 800cf2e:	460b      	mov	r3, r1
 800cf30:	4b61      	ldr	r3, [pc, #388]	; (800d0b8 <UART_SetConfig+0x2d4>)
 800cf32:	fba3 2302 	umull	r2, r3, r3, r2
 800cf36:	095b      	lsrs	r3, r3, #5
 800cf38:	011c      	lsls	r4, r3, #4
 800cf3a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800cf3e:	2200      	movs	r2, #0
 800cf40:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800cf44:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 800cf48:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 800cf4c:	4642      	mov	r2, r8
 800cf4e:	464b      	mov	r3, r9
 800cf50:	1891      	adds	r1, r2, r2
 800cf52:	64b9      	str	r1, [r7, #72]	; 0x48
 800cf54:	415b      	adcs	r3, r3
 800cf56:	64fb      	str	r3, [r7, #76]	; 0x4c
 800cf58:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 800cf5c:	4641      	mov	r1, r8
 800cf5e:	eb12 0a01 	adds.w	sl, r2, r1
 800cf62:	4649      	mov	r1, r9
 800cf64:	eb43 0b01 	adc.w	fp, r3, r1
 800cf68:	f04f 0200 	mov.w	r2, #0
 800cf6c:	f04f 0300 	mov.w	r3, #0
 800cf70:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800cf74:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800cf78:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800cf7c:	4692      	mov	sl, r2
 800cf7e:	469b      	mov	fp, r3
 800cf80:	4643      	mov	r3, r8
 800cf82:	eb1a 0303 	adds.w	r3, sl, r3
 800cf86:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800cf8a:	464b      	mov	r3, r9
 800cf8c:	eb4b 0303 	adc.w	r3, fp, r3
 800cf90:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 800cf94:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800cf98:	685b      	ldr	r3, [r3, #4]
 800cf9a:	2200      	movs	r2, #0
 800cf9c:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800cfa0:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 800cfa4:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 800cfa8:	460b      	mov	r3, r1
 800cfaa:	18db      	adds	r3, r3, r3
 800cfac:	643b      	str	r3, [r7, #64]	; 0x40
 800cfae:	4613      	mov	r3, r2
 800cfb0:	eb42 0303 	adc.w	r3, r2, r3
 800cfb4:	647b      	str	r3, [r7, #68]	; 0x44
 800cfb6:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800cfba:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 800cfbe:	f7f3 fe63 	bl	8000c88 <__aeabi_uldivmod>
 800cfc2:	4602      	mov	r2, r0
 800cfc4:	460b      	mov	r3, r1
 800cfc6:	4611      	mov	r1, r2
 800cfc8:	4b3b      	ldr	r3, [pc, #236]	; (800d0b8 <UART_SetConfig+0x2d4>)
 800cfca:	fba3 2301 	umull	r2, r3, r3, r1
 800cfce:	095b      	lsrs	r3, r3, #5
 800cfd0:	2264      	movs	r2, #100	; 0x64
 800cfd2:	fb02 f303 	mul.w	r3, r2, r3
 800cfd6:	1acb      	subs	r3, r1, r3
 800cfd8:	00db      	lsls	r3, r3, #3
 800cfda:	f103 0232 	add.w	r2, r3, #50	; 0x32
 800cfde:	4b36      	ldr	r3, [pc, #216]	; (800d0b8 <UART_SetConfig+0x2d4>)
 800cfe0:	fba3 2302 	umull	r2, r3, r3, r2
 800cfe4:	095b      	lsrs	r3, r3, #5
 800cfe6:	005b      	lsls	r3, r3, #1
 800cfe8:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800cfec:	441c      	add	r4, r3
 800cfee:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800cff2:	2200      	movs	r2, #0
 800cff4:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800cff8:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 800cffc:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 800d000:	4642      	mov	r2, r8
 800d002:	464b      	mov	r3, r9
 800d004:	1891      	adds	r1, r2, r2
 800d006:	63b9      	str	r1, [r7, #56]	; 0x38
 800d008:	415b      	adcs	r3, r3
 800d00a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d00c:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800d010:	4641      	mov	r1, r8
 800d012:	1851      	adds	r1, r2, r1
 800d014:	6339      	str	r1, [r7, #48]	; 0x30
 800d016:	4649      	mov	r1, r9
 800d018:	414b      	adcs	r3, r1
 800d01a:	637b      	str	r3, [r7, #52]	; 0x34
 800d01c:	f04f 0200 	mov.w	r2, #0
 800d020:	f04f 0300 	mov.w	r3, #0
 800d024:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 800d028:	4659      	mov	r1, fp
 800d02a:	00cb      	lsls	r3, r1, #3
 800d02c:	4651      	mov	r1, sl
 800d02e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800d032:	4651      	mov	r1, sl
 800d034:	00ca      	lsls	r2, r1, #3
 800d036:	4610      	mov	r0, r2
 800d038:	4619      	mov	r1, r3
 800d03a:	4603      	mov	r3, r0
 800d03c:	4642      	mov	r2, r8
 800d03e:	189b      	adds	r3, r3, r2
 800d040:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800d044:	464b      	mov	r3, r9
 800d046:	460a      	mov	r2, r1
 800d048:	eb42 0303 	adc.w	r3, r2, r3
 800d04c:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800d050:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d054:	685b      	ldr	r3, [r3, #4]
 800d056:	2200      	movs	r2, #0
 800d058:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800d05c:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 800d060:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 800d064:	460b      	mov	r3, r1
 800d066:	18db      	adds	r3, r3, r3
 800d068:	62bb      	str	r3, [r7, #40]	; 0x28
 800d06a:	4613      	mov	r3, r2
 800d06c:	eb42 0303 	adc.w	r3, r2, r3
 800d070:	62fb      	str	r3, [r7, #44]	; 0x2c
 800d072:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800d076:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 800d07a:	f7f3 fe05 	bl	8000c88 <__aeabi_uldivmod>
 800d07e:	4602      	mov	r2, r0
 800d080:	460b      	mov	r3, r1
 800d082:	4b0d      	ldr	r3, [pc, #52]	; (800d0b8 <UART_SetConfig+0x2d4>)
 800d084:	fba3 1302 	umull	r1, r3, r3, r2
 800d088:	095b      	lsrs	r3, r3, #5
 800d08a:	2164      	movs	r1, #100	; 0x64
 800d08c:	fb01 f303 	mul.w	r3, r1, r3
 800d090:	1ad3      	subs	r3, r2, r3
 800d092:	00db      	lsls	r3, r3, #3
 800d094:	3332      	adds	r3, #50	; 0x32
 800d096:	4a08      	ldr	r2, [pc, #32]	; (800d0b8 <UART_SetConfig+0x2d4>)
 800d098:	fba2 2303 	umull	r2, r3, r2, r3
 800d09c:	095b      	lsrs	r3, r3, #5
 800d09e:	f003 0207 	and.w	r2, r3, #7
 800d0a2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d0a6:	681b      	ldr	r3, [r3, #0]
 800d0a8:	4422      	add	r2, r4
 800d0aa:	609a      	str	r2, [r3, #8]
 800d0ac:	e105      	b.n	800d2ba <UART_SetConfig+0x4d6>
 800d0ae:	bf00      	nop
 800d0b0:	40011000 	.word	0x40011000
 800d0b4:	40011400 	.word	0x40011400
 800d0b8:	51eb851f 	.word	0x51eb851f
 800d0bc:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800d0c0:	2200      	movs	r2, #0
 800d0c2:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800d0c6:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800d0ca:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 800d0ce:	4642      	mov	r2, r8
 800d0d0:	464b      	mov	r3, r9
 800d0d2:	1891      	adds	r1, r2, r2
 800d0d4:	6239      	str	r1, [r7, #32]
 800d0d6:	415b      	adcs	r3, r3
 800d0d8:	627b      	str	r3, [r7, #36]	; 0x24
 800d0da:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800d0de:	4641      	mov	r1, r8
 800d0e0:	1854      	adds	r4, r2, r1
 800d0e2:	4649      	mov	r1, r9
 800d0e4:	eb43 0501 	adc.w	r5, r3, r1
 800d0e8:	f04f 0200 	mov.w	r2, #0
 800d0ec:	f04f 0300 	mov.w	r3, #0
 800d0f0:	00eb      	lsls	r3, r5, #3
 800d0f2:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800d0f6:	00e2      	lsls	r2, r4, #3
 800d0f8:	4614      	mov	r4, r2
 800d0fa:	461d      	mov	r5, r3
 800d0fc:	4643      	mov	r3, r8
 800d0fe:	18e3      	adds	r3, r4, r3
 800d100:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800d104:	464b      	mov	r3, r9
 800d106:	eb45 0303 	adc.w	r3, r5, r3
 800d10a:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800d10e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d112:	685b      	ldr	r3, [r3, #4]
 800d114:	2200      	movs	r2, #0
 800d116:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800d11a:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800d11e:	f04f 0200 	mov.w	r2, #0
 800d122:	f04f 0300 	mov.w	r3, #0
 800d126:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 800d12a:	4629      	mov	r1, r5
 800d12c:	008b      	lsls	r3, r1, #2
 800d12e:	4621      	mov	r1, r4
 800d130:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800d134:	4621      	mov	r1, r4
 800d136:	008a      	lsls	r2, r1, #2
 800d138:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 800d13c:	f7f3 fda4 	bl	8000c88 <__aeabi_uldivmod>
 800d140:	4602      	mov	r2, r0
 800d142:	460b      	mov	r3, r1
 800d144:	4b60      	ldr	r3, [pc, #384]	; (800d2c8 <UART_SetConfig+0x4e4>)
 800d146:	fba3 2302 	umull	r2, r3, r3, r2
 800d14a:	095b      	lsrs	r3, r3, #5
 800d14c:	011c      	lsls	r4, r3, #4
 800d14e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800d152:	2200      	movs	r2, #0
 800d154:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800d158:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800d15c:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 800d160:	4642      	mov	r2, r8
 800d162:	464b      	mov	r3, r9
 800d164:	1891      	adds	r1, r2, r2
 800d166:	61b9      	str	r1, [r7, #24]
 800d168:	415b      	adcs	r3, r3
 800d16a:	61fb      	str	r3, [r7, #28]
 800d16c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800d170:	4641      	mov	r1, r8
 800d172:	1851      	adds	r1, r2, r1
 800d174:	6139      	str	r1, [r7, #16]
 800d176:	4649      	mov	r1, r9
 800d178:	414b      	adcs	r3, r1
 800d17a:	617b      	str	r3, [r7, #20]
 800d17c:	f04f 0200 	mov.w	r2, #0
 800d180:	f04f 0300 	mov.w	r3, #0
 800d184:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800d188:	4659      	mov	r1, fp
 800d18a:	00cb      	lsls	r3, r1, #3
 800d18c:	4651      	mov	r1, sl
 800d18e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800d192:	4651      	mov	r1, sl
 800d194:	00ca      	lsls	r2, r1, #3
 800d196:	4610      	mov	r0, r2
 800d198:	4619      	mov	r1, r3
 800d19a:	4603      	mov	r3, r0
 800d19c:	4642      	mov	r2, r8
 800d19e:	189b      	adds	r3, r3, r2
 800d1a0:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800d1a4:	464b      	mov	r3, r9
 800d1a6:	460a      	mov	r2, r1
 800d1a8:	eb42 0303 	adc.w	r3, r2, r3
 800d1ac:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800d1b0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d1b4:	685b      	ldr	r3, [r3, #4]
 800d1b6:	2200      	movs	r2, #0
 800d1b8:	67bb      	str	r3, [r7, #120]	; 0x78
 800d1ba:	67fa      	str	r2, [r7, #124]	; 0x7c
 800d1bc:	f04f 0200 	mov.w	r2, #0
 800d1c0:	f04f 0300 	mov.w	r3, #0
 800d1c4:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 800d1c8:	4649      	mov	r1, r9
 800d1ca:	008b      	lsls	r3, r1, #2
 800d1cc:	4641      	mov	r1, r8
 800d1ce:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800d1d2:	4641      	mov	r1, r8
 800d1d4:	008a      	lsls	r2, r1, #2
 800d1d6:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800d1da:	f7f3 fd55 	bl	8000c88 <__aeabi_uldivmod>
 800d1de:	4602      	mov	r2, r0
 800d1e0:	460b      	mov	r3, r1
 800d1e2:	4b39      	ldr	r3, [pc, #228]	; (800d2c8 <UART_SetConfig+0x4e4>)
 800d1e4:	fba3 1302 	umull	r1, r3, r3, r2
 800d1e8:	095b      	lsrs	r3, r3, #5
 800d1ea:	2164      	movs	r1, #100	; 0x64
 800d1ec:	fb01 f303 	mul.w	r3, r1, r3
 800d1f0:	1ad3      	subs	r3, r2, r3
 800d1f2:	011b      	lsls	r3, r3, #4
 800d1f4:	3332      	adds	r3, #50	; 0x32
 800d1f6:	4a34      	ldr	r2, [pc, #208]	; (800d2c8 <UART_SetConfig+0x4e4>)
 800d1f8:	fba2 2303 	umull	r2, r3, r2, r3
 800d1fc:	095b      	lsrs	r3, r3, #5
 800d1fe:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800d202:	441c      	add	r4, r3
 800d204:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800d208:	2200      	movs	r2, #0
 800d20a:	673b      	str	r3, [r7, #112]	; 0x70
 800d20c:	677a      	str	r2, [r7, #116]	; 0x74
 800d20e:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 800d212:	4642      	mov	r2, r8
 800d214:	464b      	mov	r3, r9
 800d216:	1891      	adds	r1, r2, r2
 800d218:	60b9      	str	r1, [r7, #8]
 800d21a:	415b      	adcs	r3, r3
 800d21c:	60fb      	str	r3, [r7, #12]
 800d21e:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800d222:	4641      	mov	r1, r8
 800d224:	1851      	adds	r1, r2, r1
 800d226:	6039      	str	r1, [r7, #0]
 800d228:	4649      	mov	r1, r9
 800d22a:	414b      	adcs	r3, r1
 800d22c:	607b      	str	r3, [r7, #4]
 800d22e:	f04f 0200 	mov.w	r2, #0
 800d232:	f04f 0300 	mov.w	r3, #0
 800d236:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800d23a:	4659      	mov	r1, fp
 800d23c:	00cb      	lsls	r3, r1, #3
 800d23e:	4651      	mov	r1, sl
 800d240:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800d244:	4651      	mov	r1, sl
 800d246:	00ca      	lsls	r2, r1, #3
 800d248:	4610      	mov	r0, r2
 800d24a:	4619      	mov	r1, r3
 800d24c:	4603      	mov	r3, r0
 800d24e:	4642      	mov	r2, r8
 800d250:	189b      	adds	r3, r3, r2
 800d252:	66bb      	str	r3, [r7, #104]	; 0x68
 800d254:	464b      	mov	r3, r9
 800d256:	460a      	mov	r2, r1
 800d258:	eb42 0303 	adc.w	r3, r2, r3
 800d25c:	66fb      	str	r3, [r7, #108]	; 0x6c
 800d25e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d262:	685b      	ldr	r3, [r3, #4]
 800d264:	2200      	movs	r2, #0
 800d266:	663b      	str	r3, [r7, #96]	; 0x60
 800d268:	667a      	str	r2, [r7, #100]	; 0x64
 800d26a:	f04f 0200 	mov.w	r2, #0
 800d26e:	f04f 0300 	mov.w	r3, #0
 800d272:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 800d276:	4649      	mov	r1, r9
 800d278:	008b      	lsls	r3, r1, #2
 800d27a:	4641      	mov	r1, r8
 800d27c:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800d280:	4641      	mov	r1, r8
 800d282:	008a      	lsls	r2, r1, #2
 800d284:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800d288:	f7f3 fcfe 	bl	8000c88 <__aeabi_uldivmod>
 800d28c:	4602      	mov	r2, r0
 800d28e:	460b      	mov	r3, r1
 800d290:	4b0d      	ldr	r3, [pc, #52]	; (800d2c8 <UART_SetConfig+0x4e4>)
 800d292:	fba3 1302 	umull	r1, r3, r3, r2
 800d296:	095b      	lsrs	r3, r3, #5
 800d298:	2164      	movs	r1, #100	; 0x64
 800d29a:	fb01 f303 	mul.w	r3, r1, r3
 800d29e:	1ad3      	subs	r3, r2, r3
 800d2a0:	011b      	lsls	r3, r3, #4
 800d2a2:	3332      	adds	r3, #50	; 0x32
 800d2a4:	4a08      	ldr	r2, [pc, #32]	; (800d2c8 <UART_SetConfig+0x4e4>)
 800d2a6:	fba2 2303 	umull	r2, r3, r2, r3
 800d2aa:	095b      	lsrs	r3, r3, #5
 800d2ac:	f003 020f 	and.w	r2, r3, #15
 800d2b0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800d2b4:	681b      	ldr	r3, [r3, #0]
 800d2b6:	4422      	add	r2, r4
 800d2b8:	609a      	str	r2, [r3, #8]
 800d2ba:	bf00      	nop
 800d2bc:	f507 7780 	add.w	r7, r7, #256	; 0x100
 800d2c0:	46bd      	mov	sp, r7
 800d2c2:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800d2c6:	bf00      	nop
 800d2c8:	51eb851f 	.word	0x51eb851f

0800d2cc <__errno>:
 800d2cc:	4b01      	ldr	r3, [pc, #4]	; (800d2d4 <__errno+0x8>)
 800d2ce:	6818      	ldr	r0, [r3, #0]
 800d2d0:	4770      	bx	lr
 800d2d2:	bf00      	nop
 800d2d4:	2000013c 	.word	0x2000013c

0800d2d8 <__libc_init_array>:
 800d2d8:	b570      	push	{r4, r5, r6, lr}
 800d2da:	4d0d      	ldr	r5, [pc, #52]	; (800d310 <__libc_init_array+0x38>)
 800d2dc:	4c0d      	ldr	r4, [pc, #52]	; (800d314 <__libc_init_array+0x3c>)
 800d2de:	1b64      	subs	r4, r4, r5
 800d2e0:	10a4      	asrs	r4, r4, #2
 800d2e2:	2600      	movs	r6, #0
 800d2e4:	42a6      	cmp	r6, r4
 800d2e6:	d109      	bne.n	800d2fc <__libc_init_array+0x24>
 800d2e8:	4d0b      	ldr	r5, [pc, #44]	; (800d318 <__libc_init_array+0x40>)
 800d2ea:	4c0c      	ldr	r4, [pc, #48]	; (800d31c <__libc_init_array+0x44>)
 800d2ec:	f004 f952 	bl	8011594 <_init>
 800d2f0:	1b64      	subs	r4, r4, r5
 800d2f2:	10a4      	asrs	r4, r4, #2
 800d2f4:	2600      	movs	r6, #0
 800d2f6:	42a6      	cmp	r6, r4
 800d2f8:	d105      	bne.n	800d306 <__libc_init_array+0x2e>
 800d2fa:	bd70      	pop	{r4, r5, r6, pc}
 800d2fc:	f855 3b04 	ldr.w	r3, [r5], #4
 800d300:	4798      	blx	r3
 800d302:	3601      	adds	r6, #1
 800d304:	e7ee      	b.n	800d2e4 <__libc_init_array+0xc>
 800d306:	f855 3b04 	ldr.w	r3, [r5], #4
 800d30a:	4798      	blx	r3
 800d30c:	3601      	adds	r6, #1
 800d30e:	e7f2      	b.n	800d2f6 <__libc_init_array+0x1e>
 800d310:	08011d18 	.word	0x08011d18
 800d314:	08011d18 	.word	0x08011d18
 800d318:	08011d18 	.word	0x08011d18
 800d31c:	08011d1c 	.word	0x08011d1c

0800d320 <memset>:
 800d320:	4402      	add	r2, r0
 800d322:	4603      	mov	r3, r0
 800d324:	4293      	cmp	r3, r2
 800d326:	d100      	bne.n	800d32a <memset+0xa>
 800d328:	4770      	bx	lr
 800d32a:	f803 1b01 	strb.w	r1, [r3], #1
 800d32e:	e7f9      	b.n	800d324 <memset+0x4>

0800d330 <__cvt>:
 800d330:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800d334:	ec55 4b10 	vmov	r4, r5, d0
 800d338:	2d00      	cmp	r5, #0
 800d33a:	460e      	mov	r6, r1
 800d33c:	4619      	mov	r1, r3
 800d33e:	462b      	mov	r3, r5
 800d340:	bfbb      	ittet	lt
 800d342:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 800d346:	461d      	movlt	r5, r3
 800d348:	2300      	movge	r3, #0
 800d34a:	232d      	movlt	r3, #45	; 0x2d
 800d34c:	700b      	strb	r3, [r1, #0]
 800d34e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d350:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800d354:	4691      	mov	r9, r2
 800d356:	f023 0820 	bic.w	r8, r3, #32
 800d35a:	bfbc      	itt	lt
 800d35c:	4622      	movlt	r2, r4
 800d35e:	4614      	movlt	r4, r2
 800d360:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800d364:	d005      	beq.n	800d372 <__cvt+0x42>
 800d366:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800d36a:	d100      	bne.n	800d36e <__cvt+0x3e>
 800d36c:	3601      	adds	r6, #1
 800d36e:	2102      	movs	r1, #2
 800d370:	e000      	b.n	800d374 <__cvt+0x44>
 800d372:	2103      	movs	r1, #3
 800d374:	ab03      	add	r3, sp, #12
 800d376:	9301      	str	r3, [sp, #4]
 800d378:	ab02      	add	r3, sp, #8
 800d37a:	9300      	str	r3, [sp, #0]
 800d37c:	ec45 4b10 	vmov	d0, r4, r5
 800d380:	4653      	mov	r3, sl
 800d382:	4632      	mov	r2, r6
 800d384:	f000 fcec 	bl	800dd60 <_dtoa_r>
 800d388:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800d38c:	4607      	mov	r7, r0
 800d38e:	d102      	bne.n	800d396 <__cvt+0x66>
 800d390:	f019 0f01 	tst.w	r9, #1
 800d394:	d022      	beq.n	800d3dc <__cvt+0xac>
 800d396:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800d39a:	eb07 0906 	add.w	r9, r7, r6
 800d39e:	d110      	bne.n	800d3c2 <__cvt+0x92>
 800d3a0:	783b      	ldrb	r3, [r7, #0]
 800d3a2:	2b30      	cmp	r3, #48	; 0x30
 800d3a4:	d10a      	bne.n	800d3bc <__cvt+0x8c>
 800d3a6:	2200      	movs	r2, #0
 800d3a8:	2300      	movs	r3, #0
 800d3aa:	4620      	mov	r0, r4
 800d3ac:	4629      	mov	r1, r5
 800d3ae:	f7f3 fbab 	bl	8000b08 <__aeabi_dcmpeq>
 800d3b2:	b918      	cbnz	r0, 800d3bc <__cvt+0x8c>
 800d3b4:	f1c6 0601 	rsb	r6, r6, #1
 800d3b8:	f8ca 6000 	str.w	r6, [sl]
 800d3bc:	f8da 3000 	ldr.w	r3, [sl]
 800d3c0:	4499      	add	r9, r3
 800d3c2:	2200      	movs	r2, #0
 800d3c4:	2300      	movs	r3, #0
 800d3c6:	4620      	mov	r0, r4
 800d3c8:	4629      	mov	r1, r5
 800d3ca:	f7f3 fb9d 	bl	8000b08 <__aeabi_dcmpeq>
 800d3ce:	b108      	cbz	r0, 800d3d4 <__cvt+0xa4>
 800d3d0:	f8cd 900c 	str.w	r9, [sp, #12]
 800d3d4:	2230      	movs	r2, #48	; 0x30
 800d3d6:	9b03      	ldr	r3, [sp, #12]
 800d3d8:	454b      	cmp	r3, r9
 800d3da:	d307      	bcc.n	800d3ec <__cvt+0xbc>
 800d3dc:	9b03      	ldr	r3, [sp, #12]
 800d3de:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d3e0:	1bdb      	subs	r3, r3, r7
 800d3e2:	4638      	mov	r0, r7
 800d3e4:	6013      	str	r3, [r2, #0]
 800d3e6:	b004      	add	sp, #16
 800d3e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d3ec:	1c59      	adds	r1, r3, #1
 800d3ee:	9103      	str	r1, [sp, #12]
 800d3f0:	701a      	strb	r2, [r3, #0]
 800d3f2:	e7f0      	b.n	800d3d6 <__cvt+0xa6>

0800d3f4 <__exponent>:
 800d3f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d3f6:	4603      	mov	r3, r0
 800d3f8:	2900      	cmp	r1, #0
 800d3fa:	bfb8      	it	lt
 800d3fc:	4249      	neglt	r1, r1
 800d3fe:	f803 2b02 	strb.w	r2, [r3], #2
 800d402:	bfb4      	ite	lt
 800d404:	222d      	movlt	r2, #45	; 0x2d
 800d406:	222b      	movge	r2, #43	; 0x2b
 800d408:	2909      	cmp	r1, #9
 800d40a:	7042      	strb	r2, [r0, #1]
 800d40c:	dd2a      	ble.n	800d464 <__exponent+0x70>
 800d40e:	f10d 0407 	add.w	r4, sp, #7
 800d412:	46a4      	mov	ip, r4
 800d414:	270a      	movs	r7, #10
 800d416:	46a6      	mov	lr, r4
 800d418:	460a      	mov	r2, r1
 800d41a:	fb91 f6f7 	sdiv	r6, r1, r7
 800d41e:	fb07 1516 	mls	r5, r7, r6, r1
 800d422:	3530      	adds	r5, #48	; 0x30
 800d424:	2a63      	cmp	r2, #99	; 0x63
 800d426:	f104 34ff 	add.w	r4, r4, #4294967295
 800d42a:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800d42e:	4631      	mov	r1, r6
 800d430:	dcf1      	bgt.n	800d416 <__exponent+0x22>
 800d432:	3130      	adds	r1, #48	; 0x30
 800d434:	f1ae 0502 	sub.w	r5, lr, #2
 800d438:	f804 1c01 	strb.w	r1, [r4, #-1]
 800d43c:	1c44      	adds	r4, r0, #1
 800d43e:	4629      	mov	r1, r5
 800d440:	4561      	cmp	r1, ip
 800d442:	d30a      	bcc.n	800d45a <__exponent+0x66>
 800d444:	f10d 0209 	add.w	r2, sp, #9
 800d448:	eba2 020e 	sub.w	r2, r2, lr
 800d44c:	4565      	cmp	r5, ip
 800d44e:	bf88      	it	hi
 800d450:	2200      	movhi	r2, #0
 800d452:	4413      	add	r3, r2
 800d454:	1a18      	subs	r0, r3, r0
 800d456:	b003      	add	sp, #12
 800d458:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d45a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d45e:	f804 2f01 	strb.w	r2, [r4, #1]!
 800d462:	e7ed      	b.n	800d440 <__exponent+0x4c>
 800d464:	2330      	movs	r3, #48	; 0x30
 800d466:	3130      	adds	r1, #48	; 0x30
 800d468:	7083      	strb	r3, [r0, #2]
 800d46a:	70c1      	strb	r1, [r0, #3]
 800d46c:	1d03      	adds	r3, r0, #4
 800d46e:	e7f1      	b.n	800d454 <__exponent+0x60>

0800d470 <_printf_float>:
 800d470:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d474:	ed2d 8b02 	vpush	{d8}
 800d478:	b08d      	sub	sp, #52	; 0x34
 800d47a:	460c      	mov	r4, r1
 800d47c:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 800d480:	4616      	mov	r6, r2
 800d482:	461f      	mov	r7, r3
 800d484:	4605      	mov	r5, r0
 800d486:	f001 fa59 	bl	800e93c <_localeconv_r>
 800d48a:	f8d0 a000 	ldr.w	sl, [r0]
 800d48e:	4650      	mov	r0, sl
 800d490:	f7f2 febe 	bl	8000210 <strlen>
 800d494:	2300      	movs	r3, #0
 800d496:	930a      	str	r3, [sp, #40]	; 0x28
 800d498:	6823      	ldr	r3, [r4, #0]
 800d49a:	9305      	str	r3, [sp, #20]
 800d49c:	f8d8 3000 	ldr.w	r3, [r8]
 800d4a0:	f894 b018 	ldrb.w	fp, [r4, #24]
 800d4a4:	3307      	adds	r3, #7
 800d4a6:	f023 0307 	bic.w	r3, r3, #7
 800d4aa:	f103 0208 	add.w	r2, r3, #8
 800d4ae:	f8c8 2000 	str.w	r2, [r8]
 800d4b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d4b6:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800d4ba:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 800d4be:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800d4c2:	9307      	str	r3, [sp, #28]
 800d4c4:	f8cd 8018 	str.w	r8, [sp, #24]
 800d4c8:	ee08 0a10 	vmov	s16, r0
 800d4cc:	4b9f      	ldr	r3, [pc, #636]	; (800d74c <_printf_float+0x2dc>)
 800d4ce:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800d4d2:	f04f 32ff 	mov.w	r2, #4294967295
 800d4d6:	f7f3 fb49 	bl	8000b6c <__aeabi_dcmpun>
 800d4da:	bb88      	cbnz	r0, 800d540 <_printf_float+0xd0>
 800d4dc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800d4e0:	4b9a      	ldr	r3, [pc, #616]	; (800d74c <_printf_float+0x2dc>)
 800d4e2:	f04f 32ff 	mov.w	r2, #4294967295
 800d4e6:	f7f3 fb23 	bl	8000b30 <__aeabi_dcmple>
 800d4ea:	bb48      	cbnz	r0, 800d540 <_printf_float+0xd0>
 800d4ec:	2200      	movs	r2, #0
 800d4ee:	2300      	movs	r3, #0
 800d4f0:	4640      	mov	r0, r8
 800d4f2:	4649      	mov	r1, r9
 800d4f4:	f7f3 fb12 	bl	8000b1c <__aeabi_dcmplt>
 800d4f8:	b110      	cbz	r0, 800d500 <_printf_float+0x90>
 800d4fa:	232d      	movs	r3, #45	; 0x2d
 800d4fc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d500:	4b93      	ldr	r3, [pc, #588]	; (800d750 <_printf_float+0x2e0>)
 800d502:	4894      	ldr	r0, [pc, #592]	; (800d754 <_printf_float+0x2e4>)
 800d504:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 800d508:	bf94      	ite	ls
 800d50a:	4698      	movls	r8, r3
 800d50c:	4680      	movhi	r8, r0
 800d50e:	2303      	movs	r3, #3
 800d510:	6123      	str	r3, [r4, #16]
 800d512:	9b05      	ldr	r3, [sp, #20]
 800d514:	f023 0204 	bic.w	r2, r3, #4
 800d518:	6022      	str	r2, [r4, #0]
 800d51a:	f04f 0900 	mov.w	r9, #0
 800d51e:	9700      	str	r7, [sp, #0]
 800d520:	4633      	mov	r3, r6
 800d522:	aa0b      	add	r2, sp, #44	; 0x2c
 800d524:	4621      	mov	r1, r4
 800d526:	4628      	mov	r0, r5
 800d528:	f000 f9d8 	bl	800d8dc <_printf_common>
 800d52c:	3001      	adds	r0, #1
 800d52e:	f040 8090 	bne.w	800d652 <_printf_float+0x1e2>
 800d532:	f04f 30ff 	mov.w	r0, #4294967295
 800d536:	b00d      	add	sp, #52	; 0x34
 800d538:	ecbd 8b02 	vpop	{d8}
 800d53c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d540:	4642      	mov	r2, r8
 800d542:	464b      	mov	r3, r9
 800d544:	4640      	mov	r0, r8
 800d546:	4649      	mov	r1, r9
 800d548:	f7f3 fb10 	bl	8000b6c <__aeabi_dcmpun>
 800d54c:	b140      	cbz	r0, 800d560 <_printf_float+0xf0>
 800d54e:	464b      	mov	r3, r9
 800d550:	2b00      	cmp	r3, #0
 800d552:	bfbc      	itt	lt
 800d554:	232d      	movlt	r3, #45	; 0x2d
 800d556:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800d55a:	487f      	ldr	r0, [pc, #508]	; (800d758 <_printf_float+0x2e8>)
 800d55c:	4b7f      	ldr	r3, [pc, #508]	; (800d75c <_printf_float+0x2ec>)
 800d55e:	e7d1      	b.n	800d504 <_printf_float+0x94>
 800d560:	6863      	ldr	r3, [r4, #4]
 800d562:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 800d566:	9206      	str	r2, [sp, #24]
 800d568:	1c5a      	adds	r2, r3, #1
 800d56a:	d13f      	bne.n	800d5ec <_printf_float+0x17c>
 800d56c:	2306      	movs	r3, #6
 800d56e:	6063      	str	r3, [r4, #4]
 800d570:	9b05      	ldr	r3, [sp, #20]
 800d572:	6861      	ldr	r1, [r4, #4]
 800d574:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 800d578:	2300      	movs	r3, #0
 800d57a:	9303      	str	r3, [sp, #12]
 800d57c:	ab0a      	add	r3, sp, #40	; 0x28
 800d57e:	e9cd b301 	strd	fp, r3, [sp, #4]
 800d582:	ab09      	add	r3, sp, #36	; 0x24
 800d584:	ec49 8b10 	vmov	d0, r8, r9
 800d588:	9300      	str	r3, [sp, #0]
 800d58a:	6022      	str	r2, [r4, #0]
 800d58c:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 800d590:	4628      	mov	r0, r5
 800d592:	f7ff fecd 	bl	800d330 <__cvt>
 800d596:	9b06      	ldr	r3, [sp, #24]
 800d598:	9909      	ldr	r1, [sp, #36]	; 0x24
 800d59a:	2b47      	cmp	r3, #71	; 0x47
 800d59c:	4680      	mov	r8, r0
 800d59e:	d108      	bne.n	800d5b2 <_printf_float+0x142>
 800d5a0:	1cc8      	adds	r0, r1, #3
 800d5a2:	db02      	blt.n	800d5aa <_printf_float+0x13a>
 800d5a4:	6863      	ldr	r3, [r4, #4]
 800d5a6:	4299      	cmp	r1, r3
 800d5a8:	dd41      	ble.n	800d62e <_printf_float+0x1be>
 800d5aa:	f1ab 0b02 	sub.w	fp, fp, #2
 800d5ae:	fa5f fb8b 	uxtb.w	fp, fp
 800d5b2:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800d5b6:	d820      	bhi.n	800d5fa <_printf_float+0x18a>
 800d5b8:	3901      	subs	r1, #1
 800d5ba:	465a      	mov	r2, fp
 800d5bc:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800d5c0:	9109      	str	r1, [sp, #36]	; 0x24
 800d5c2:	f7ff ff17 	bl	800d3f4 <__exponent>
 800d5c6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d5c8:	1813      	adds	r3, r2, r0
 800d5ca:	2a01      	cmp	r2, #1
 800d5cc:	4681      	mov	r9, r0
 800d5ce:	6123      	str	r3, [r4, #16]
 800d5d0:	dc02      	bgt.n	800d5d8 <_printf_float+0x168>
 800d5d2:	6822      	ldr	r2, [r4, #0]
 800d5d4:	07d2      	lsls	r2, r2, #31
 800d5d6:	d501      	bpl.n	800d5dc <_printf_float+0x16c>
 800d5d8:	3301      	adds	r3, #1
 800d5da:	6123      	str	r3, [r4, #16]
 800d5dc:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 800d5e0:	2b00      	cmp	r3, #0
 800d5e2:	d09c      	beq.n	800d51e <_printf_float+0xae>
 800d5e4:	232d      	movs	r3, #45	; 0x2d
 800d5e6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d5ea:	e798      	b.n	800d51e <_printf_float+0xae>
 800d5ec:	9a06      	ldr	r2, [sp, #24]
 800d5ee:	2a47      	cmp	r2, #71	; 0x47
 800d5f0:	d1be      	bne.n	800d570 <_printf_float+0x100>
 800d5f2:	2b00      	cmp	r3, #0
 800d5f4:	d1bc      	bne.n	800d570 <_printf_float+0x100>
 800d5f6:	2301      	movs	r3, #1
 800d5f8:	e7b9      	b.n	800d56e <_printf_float+0xfe>
 800d5fa:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 800d5fe:	d118      	bne.n	800d632 <_printf_float+0x1c2>
 800d600:	2900      	cmp	r1, #0
 800d602:	6863      	ldr	r3, [r4, #4]
 800d604:	dd0b      	ble.n	800d61e <_printf_float+0x1ae>
 800d606:	6121      	str	r1, [r4, #16]
 800d608:	b913      	cbnz	r3, 800d610 <_printf_float+0x1a0>
 800d60a:	6822      	ldr	r2, [r4, #0]
 800d60c:	07d0      	lsls	r0, r2, #31
 800d60e:	d502      	bpl.n	800d616 <_printf_float+0x1a6>
 800d610:	3301      	adds	r3, #1
 800d612:	440b      	add	r3, r1
 800d614:	6123      	str	r3, [r4, #16]
 800d616:	65a1      	str	r1, [r4, #88]	; 0x58
 800d618:	f04f 0900 	mov.w	r9, #0
 800d61c:	e7de      	b.n	800d5dc <_printf_float+0x16c>
 800d61e:	b913      	cbnz	r3, 800d626 <_printf_float+0x1b6>
 800d620:	6822      	ldr	r2, [r4, #0]
 800d622:	07d2      	lsls	r2, r2, #31
 800d624:	d501      	bpl.n	800d62a <_printf_float+0x1ba>
 800d626:	3302      	adds	r3, #2
 800d628:	e7f4      	b.n	800d614 <_printf_float+0x1a4>
 800d62a:	2301      	movs	r3, #1
 800d62c:	e7f2      	b.n	800d614 <_printf_float+0x1a4>
 800d62e:	f04f 0b67 	mov.w	fp, #103	; 0x67
 800d632:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d634:	4299      	cmp	r1, r3
 800d636:	db05      	blt.n	800d644 <_printf_float+0x1d4>
 800d638:	6823      	ldr	r3, [r4, #0]
 800d63a:	6121      	str	r1, [r4, #16]
 800d63c:	07d8      	lsls	r0, r3, #31
 800d63e:	d5ea      	bpl.n	800d616 <_printf_float+0x1a6>
 800d640:	1c4b      	adds	r3, r1, #1
 800d642:	e7e7      	b.n	800d614 <_printf_float+0x1a4>
 800d644:	2900      	cmp	r1, #0
 800d646:	bfd4      	ite	le
 800d648:	f1c1 0202 	rsble	r2, r1, #2
 800d64c:	2201      	movgt	r2, #1
 800d64e:	4413      	add	r3, r2
 800d650:	e7e0      	b.n	800d614 <_printf_float+0x1a4>
 800d652:	6823      	ldr	r3, [r4, #0]
 800d654:	055a      	lsls	r2, r3, #21
 800d656:	d407      	bmi.n	800d668 <_printf_float+0x1f8>
 800d658:	6923      	ldr	r3, [r4, #16]
 800d65a:	4642      	mov	r2, r8
 800d65c:	4631      	mov	r1, r6
 800d65e:	4628      	mov	r0, r5
 800d660:	47b8      	blx	r7
 800d662:	3001      	adds	r0, #1
 800d664:	d12c      	bne.n	800d6c0 <_printf_float+0x250>
 800d666:	e764      	b.n	800d532 <_printf_float+0xc2>
 800d668:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800d66c:	f240 80e0 	bls.w	800d830 <_printf_float+0x3c0>
 800d670:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800d674:	2200      	movs	r2, #0
 800d676:	2300      	movs	r3, #0
 800d678:	f7f3 fa46 	bl	8000b08 <__aeabi_dcmpeq>
 800d67c:	2800      	cmp	r0, #0
 800d67e:	d034      	beq.n	800d6ea <_printf_float+0x27a>
 800d680:	4a37      	ldr	r2, [pc, #220]	; (800d760 <_printf_float+0x2f0>)
 800d682:	2301      	movs	r3, #1
 800d684:	4631      	mov	r1, r6
 800d686:	4628      	mov	r0, r5
 800d688:	47b8      	blx	r7
 800d68a:	3001      	adds	r0, #1
 800d68c:	f43f af51 	beq.w	800d532 <_printf_float+0xc2>
 800d690:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800d694:	429a      	cmp	r2, r3
 800d696:	db02      	blt.n	800d69e <_printf_float+0x22e>
 800d698:	6823      	ldr	r3, [r4, #0]
 800d69a:	07d8      	lsls	r0, r3, #31
 800d69c:	d510      	bpl.n	800d6c0 <_printf_float+0x250>
 800d69e:	ee18 3a10 	vmov	r3, s16
 800d6a2:	4652      	mov	r2, sl
 800d6a4:	4631      	mov	r1, r6
 800d6a6:	4628      	mov	r0, r5
 800d6a8:	47b8      	blx	r7
 800d6aa:	3001      	adds	r0, #1
 800d6ac:	f43f af41 	beq.w	800d532 <_printf_float+0xc2>
 800d6b0:	f04f 0800 	mov.w	r8, #0
 800d6b4:	f104 091a 	add.w	r9, r4, #26
 800d6b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d6ba:	3b01      	subs	r3, #1
 800d6bc:	4543      	cmp	r3, r8
 800d6be:	dc09      	bgt.n	800d6d4 <_printf_float+0x264>
 800d6c0:	6823      	ldr	r3, [r4, #0]
 800d6c2:	079b      	lsls	r3, r3, #30
 800d6c4:	f100 8105 	bmi.w	800d8d2 <_printf_float+0x462>
 800d6c8:	68e0      	ldr	r0, [r4, #12]
 800d6ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d6cc:	4298      	cmp	r0, r3
 800d6ce:	bfb8      	it	lt
 800d6d0:	4618      	movlt	r0, r3
 800d6d2:	e730      	b.n	800d536 <_printf_float+0xc6>
 800d6d4:	2301      	movs	r3, #1
 800d6d6:	464a      	mov	r2, r9
 800d6d8:	4631      	mov	r1, r6
 800d6da:	4628      	mov	r0, r5
 800d6dc:	47b8      	blx	r7
 800d6de:	3001      	adds	r0, #1
 800d6e0:	f43f af27 	beq.w	800d532 <_printf_float+0xc2>
 800d6e4:	f108 0801 	add.w	r8, r8, #1
 800d6e8:	e7e6      	b.n	800d6b8 <_printf_float+0x248>
 800d6ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d6ec:	2b00      	cmp	r3, #0
 800d6ee:	dc39      	bgt.n	800d764 <_printf_float+0x2f4>
 800d6f0:	4a1b      	ldr	r2, [pc, #108]	; (800d760 <_printf_float+0x2f0>)
 800d6f2:	2301      	movs	r3, #1
 800d6f4:	4631      	mov	r1, r6
 800d6f6:	4628      	mov	r0, r5
 800d6f8:	47b8      	blx	r7
 800d6fa:	3001      	adds	r0, #1
 800d6fc:	f43f af19 	beq.w	800d532 <_printf_float+0xc2>
 800d700:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800d704:	4313      	orrs	r3, r2
 800d706:	d102      	bne.n	800d70e <_printf_float+0x29e>
 800d708:	6823      	ldr	r3, [r4, #0]
 800d70a:	07d9      	lsls	r1, r3, #31
 800d70c:	d5d8      	bpl.n	800d6c0 <_printf_float+0x250>
 800d70e:	ee18 3a10 	vmov	r3, s16
 800d712:	4652      	mov	r2, sl
 800d714:	4631      	mov	r1, r6
 800d716:	4628      	mov	r0, r5
 800d718:	47b8      	blx	r7
 800d71a:	3001      	adds	r0, #1
 800d71c:	f43f af09 	beq.w	800d532 <_printf_float+0xc2>
 800d720:	f04f 0900 	mov.w	r9, #0
 800d724:	f104 0a1a 	add.w	sl, r4, #26
 800d728:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d72a:	425b      	negs	r3, r3
 800d72c:	454b      	cmp	r3, r9
 800d72e:	dc01      	bgt.n	800d734 <_printf_float+0x2c4>
 800d730:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d732:	e792      	b.n	800d65a <_printf_float+0x1ea>
 800d734:	2301      	movs	r3, #1
 800d736:	4652      	mov	r2, sl
 800d738:	4631      	mov	r1, r6
 800d73a:	4628      	mov	r0, r5
 800d73c:	47b8      	blx	r7
 800d73e:	3001      	adds	r0, #1
 800d740:	f43f aef7 	beq.w	800d532 <_printf_float+0xc2>
 800d744:	f109 0901 	add.w	r9, r9, #1
 800d748:	e7ee      	b.n	800d728 <_printf_float+0x2b8>
 800d74a:	bf00      	nop
 800d74c:	7fefffff 	.word	0x7fefffff
 800d750:	08011720 	.word	0x08011720
 800d754:	08011724 	.word	0x08011724
 800d758:	0801172c 	.word	0x0801172c
 800d75c:	08011728 	.word	0x08011728
 800d760:	08011730 	.word	0x08011730
 800d764:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d766:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800d768:	429a      	cmp	r2, r3
 800d76a:	bfa8      	it	ge
 800d76c:	461a      	movge	r2, r3
 800d76e:	2a00      	cmp	r2, #0
 800d770:	4691      	mov	r9, r2
 800d772:	dc37      	bgt.n	800d7e4 <_printf_float+0x374>
 800d774:	f04f 0b00 	mov.w	fp, #0
 800d778:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800d77c:	f104 021a 	add.w	r2, r4, #26
 800d780:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800d782:	9305      	str	r3, [sp, #20]
 800d784:	eba3 0309 	sub.w	r3, r3, r9
 800d788:	455b      	cmp	r3, fp
 800d78a:	dc33      	bgt.n	800d7f4 <_printf_float+0x384>
 800d78c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800d790:	429a      	cmp	r2, r3
 800d792:	db3b      	blt.n	800d80c <_printf_float+0x39c>
 800d794:	6823      	ldr	r3, [r4, #0]
 800d796:	07da      	lsls	r2, r3, #31
 800d798:	d438      	bmi.n	800d80c <_printf_float+0x39c>
 800d79a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d79c:	9a05      	ldr	r2, [sp, #20]
 800d79e:	9909      	ldr	r1, [sp, #36]	; 0x24
 800d7a0:	1a9a      	subs	r2, r3, r2
 800d7a2:	eba3 0901 	sub.w	r9, r3, r1
 800d7a6:	4591      	cmp	r9, r2
 800d7a8:	bfa8      	it	ge
 800d7aa:	4691      	movge	r9, r2
 800d7ac:	f1b9 0f00 	cmp.w	r9, #0
 800d7b0:	dc35      	bgt.n	800d81e <_printf_float+0x3ae>
 800d7b2:	f04f 0800 	mov.w	r8, #0
 800d7b6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800d7ba:	f104 0a1a 	add.w	sl, r4, #26
 800d7be:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800d7c2:	1a9b      	subs	r3, r3, r2
 800d7c4:	eba3 0309 	sub.w	r3, r3, r9
 800d7c8:	4543      	cmp	r3, r8
 800d7ca:	f77f af79 	ble.w	800d6c0 <_printf_float+0x250>
 800d7ce:	2301      	movs	r3, #1
 800d7d0:	4652      	mov	r2, sl
 800d7d2:	4631      	mov	r1, r6
 800d7d4:	4628      	mov	r0, r5
 800d7d6:	47b8      	blx	r7
 800d7d8:	3001      	adds	r0, #1
 800d7da:	f43f aeaa 	beq.w	800d532 <_printf_float+0xc2>
 800d7de:	f108 0801 	add.w	r8, r8, #1
 800d7e2:	e7ec      	b.n	800d7be <_printf_float+0x34e>
 800d7e4:	4613      	mov	r3, r2
 800d7e6:	4631      	mov	r1, r6
 800d7e8:	4642      	mov	r2, r8
 800d7ea:	4628      	mov	r0, r5
 800d7ec:	47b8      	blx	r7
 800d7ee:	3001      	adds	r0, #1
 800d7f0:	d1c0      	bne.n	800d774 <_printf_float+0x304>
 800d7f2:	e69e      	b.n	800d532 <_printf_float+0xc2>
 800d7f4:	2301      	movs	r3, #1
 800d7f6:	4631      	mov	r1, r6
 800d7f8:	4628      	mov	r0, r5
 800d7fa:	9205      	str	r2, [sp, #20]
 800d7fc:	47b8      	blx	r7
 800d7fe:	3001      	adds	r0, #1
 800d800:	f43f ae97 	beq.w	800d532 <_printf_float+0xc2>
 800d804:	9a05      	ldr	r2, [sp, #20]
 800d806:	f10b 0b01 	add.w	fp, fp, #1
 800d80a:	e7b9      	b.n	800d780 <_printf_float+0x310>
 800d80c:	ee18 3a10 	vmov	r3, s16
 800d810:	4652      	mov	r2, sl
 800d812:	4631      	mov	r1, r6
 800d814:	4628      	mov	r0, r5
 800d816:	47b8      	blx	r7
 800d818:	3001      	adds	r0, #1
 800d81a:	d1be      	bne.n	800d79a <_printf_float+0x32a>
 800d81c:	e689      	b.n	800d532 <_printf_float+0xc2>
 800d81e:	9a05      	ldr	r2, [sp, #20]
 800d820:	464b      	mov	r3, r9
 800d822:	4442      	add	r2, r8
 800d824:	4631      	mov	r1, r6
 800d826:	4628      	mov	r0, r5
 800d828:	47b8      	blx	r7
 800d82a:	3001      	adds	r0, #1
 800d82c:	d1c1      	bne.n	800d7b2 <_printf_float+0x342>
 800d82e:	e680      	b.n	800d532 <_printf_float+0xc2>
 800d830:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d832:	2a01      	cmp	r2, #1
 800d834:	dc01      	bgt.n	800d83a <_printf_float+0x3ca>
 800d836:	07db      	lsls	r3, r3, #31
 800d838:	d538      	bpl.n	800d8ac <_printf_float+0x43c>
 800d83a:	2301      	movs	r3, #1
 800d83c:	4642      	mov	r2, r8
 800d83e:	4631      	mov	r1, r6
 800d840:	4628      	mov	r0, r5
 800d842:	47b8      	blx	r7
 800d844:	3001      	adds	r0, #1
 800d846:	f43f ae74 	beq.w	800d532 <_printf_float+0xc2>
 800d84a:	ee18 3a10 	vmov	r3, s16
 800d84e:	4652      	mov	r2, sl
 800d850:	4631      	mov	r1, r6
 800d852:	4628      	mov	r0, r5
 800d854:	47b8      	blx	r7
 800d856:	3001      	adds	r0, #1
 800d858:	f43f ae6b 	beq.w	800d532 <_printf_float+0xc2>
 800d85c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800d860:	2200      	movs	r2, #0
 800d862:	2300      	movs	r3, #0
 800d864:	f7f3 f950 	bl	8000b08 <__aeabi_dcmpeq>
 800d868:	b9d8      	cbnz	r0, 800d8a2 <_printf_float+0x432>
 800d86a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d86c:	f108 0201 	add.w	r2, r8, #1
 800d870:	3b01      	subs	r3, #1
 800d872:	4631      	mov	r1, r6
 800d874:	4628      	mov	r0, r5
 800d876:	47b8      	blx	r7
 800d878:	3001      	adds	r0, #1
 800d87a:	d10e      	bne.n	800d89a <_printf_float+0x42a>
 800d87c:	e659      	b.n	800d532 <_printf_float+0xc2>
 800d87e:	2301      	movs	r3, #1
 800d880:	4652      	mov	r2, sl
 800d882:	4631      	mov	r1, r6
 800d884:	4628      	mov	r0, r5
 800d886:	47b8      	blx	r7
 800d888:	3001      	adds	r0, #1
 800d88a:	f43f ae52 	beq.w	800d532 <_printf_float+0xc2>
 800d88e:	f108 0801 	add.w	r8, r8, #1
 800d892:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d894:	3b01      	subs	r3, #1
 800d896:	4543      	cmp	r3, r8
 800d898:	dcf1      	bgt.n	800d87e <_printf_float+0x40e>
 800d89a:	464b      	mov	r3, r9
 800d89c:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800d8a0:	e6dc      	b.n	800d65c <_printf_float+0x1ec>
 800d8a2:	f04f 0800 	mov.w	r8, #0
 800d8a6:	f104 0a1a 	add.w	sl, r4, #26
 800d8aa:	e7f2      	b.n	800d892 <_printf_float+0x422>
 800d8ac:	2301      	movs	r3, #1
 800d8ae:	4642      	mov	r2, r8
 800d8b0:	e7df      	b.n	800d872 <_printf_float+0x402>
 800d8b2:	2301      	movs	r3, #1
 800d8b4:	464a      	mov	r2, r9
 800d8b6:	4631      	mov	r1, r6
 800d8b8:	4628      	mov	r0, r5
 800d8ba:	47b8      	blx	r7
 800d8bc:	3001      	adds	r0, #1
 800d8be:	f43f ae38 	beq.w	800d532 <_printf_float+0xc2>
 800d8c2:	f108 0801 	add.w	r8, r8, #1
 800d8c6:	68e3      	ldr	r3, [r4, #12]
 800d8c8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800d8ca:	1a5b      	subs	r3, r3, r1
 800d8cc:	4543      	cmp	r3, r8
 800d8ce:	dcf0      	bgt.n	800d8b2 <_printf_float+0x442>
 800d8d0:	e6fa      	b.n	800d6c8 <_printf_float+0x258>
 800d8d2:	f04f 0800 	mov.w	r8, #0
 800d8d6:	f104 0919 	add.w	r9, r4, #25
 800d8da:	e7f4      	b.n	800d8c6 <_printf_float+0x456>

0800d8dc <_printf_common>:
 800d8dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d8e0:	4616      	mov	r6, r2
 800d8e2:	4699      	mov	r9, r3
 800d8e4:	688a      	ldr	r2, [r1, #8]
 800d8e6:	690b      	ldr	r3, [r1, #16]
 800d8e8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800d8ec:	4293      	cmp	r3, r2
 800d8ee:	bfb8      	it	lt
 800d8f0:	4613      	movlt	r3, r2
 800d8f2:	6033      	str	r3, [r6, #0]
 800d8f4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800d8f8:	4607      	mov	r7, r0
 800d8fa:	460c      	mov	r4, r1
 800d8fc:	b10a      	cbz	r2, 800d902 <_printf_common+0x26>
 800d8fe:	3301      	adds	r3, #1
 800d900:	6033      	str	r3, [r6, #0]
 800d902:	6823      	ldr	r3, [r4, #0]
 800d904:	0699      	lsls	r1, r3, #26
 800d906:	bf42      	ittt	mi
 800d908:	6833      	ldrmi	r3, [r6, #0]
 800d90a:	3302      	addmi	r3, #2
 800d90c:	6033      	strmi	r3, [r6, #0]
 800d90e:	6825      	ldr	r5, [r4, #0]
 800d910:	f015 0506 	ands.w	r5, r5, #6
 800d914:	d106      	bne.n	800d924 <_printf_common+0x48>
 800d916:	f104 0a19 	add.w	sl, r4, #25
 800d91a:	68e3      	ldr	r3, [r4, #12]
 800d91c:	6832      	ldr	r2, [r6, #0]
 800d91e:	1a9b      	subs	r3, r3, r2
 800d920:	42ab      	cmp	r3, r5
 800d922:	dc26      	bgt.n	800d972 <_printf_common+0x96>
 800d924:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800d928:	1e13      	subs	r3, r2, #0
 800d92a:	6822      	ldr	r2, [r4, #0]
 800d92c:	bf18      	it	ne
 800d92e:	2301      	movne	r3, #1
 800d930:	0692      	lsls	r2, r2, #26
 800d932:	d42b      	bmi.n	800d98c <_printf_common+0xb0>
 800d934:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800d938:	4649      	mov	r1, r9
 800d93a:	4638      	mov	r0, r7
 800d93c:	47c0      	blx	r8
 800d93e:	3001      	adds	r0, #1
 800d940:	d01e      	beq.n	800d980 <_printf_common+0xa4>
 800d942:	6823      	ldr	r3, [r4, #0]
 800d944:	68e5      	ldr	r5, [r4, #12]
 800d946:	6832      	ldr	r2, [r6, #0]
 800d948:	f003 0306 	and.w	r3, r3, #6
 800d94c:	2b04      	cmp	r3, #4
 800d94e:	bf08      	it	eq
 800d950:	1aad      	subeq	r5, r5, r2
 800d952:	68a3      	ldr	r3, [r4, #8]
 800d954:	6922      	ldr	r2, [r4, #16]
 800d956:	bf0c      	ite	eq
 800d958:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800d95c:	2500      	movne	r5, #0
 800d95e:	4293      	cmp	r3, r2
 800d960:	bfc4      	itt	gt
 800d962:	1a9b      	subgt	r3, r3, r2
 800d964:	18ed      	addgt	r5, r5, r3
 800d966:	2600      	movs	r6, #0
 800d968:	341a      	adds	r4, #26
 800d96a:	42b5      	cmp	r5, r6
 800d96c:	d11a      	bne.n	800d9a4 <_printf_common+0xc8>
 800d96e:	2000      	movs	r0, #0
 800d970:	e008      	b.n	800d984 <_printf_common+0xa8>
 800d972:	2301      	movs	r3, #1
 800d974:	4652      	mov	r2, sl
 800d976:	4649      	mov	r1, r9
 800d978:	4638      	mov	r0, r7
 800d97a:	47c0      	blx	r8
 800d97c:	3001      	adds	r0, #1
 800d97e:	d103      	bne.n	800d988 <_printf_common+0xac>
 800d980:	f04f 30ff 	mov.w	r0, #4294967295
 800d984:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d988:	3501      	adds	r5, #1
 800d98a:	e7c6      	b.n	800d91a <_printf_common+0x3e>
 800d98c:	18e1      	adds	r1, r4, r3
 800d98e:	1c5a      	adds	r2, r3, #1
 800d990:	2030      	movs	r0, #48	; 0x30
 800d992:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800d996:	4422      	add	r2, r4
 800d998:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800d99c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800d9a0:	3302      	adds	r3, #2
 800d9a2:	e7c7      	b.n	800d934 <_printf_common+0x58>
 800d9a4:	2301      	movs	r3, #1
 800d9a6:	4622      	mov	r2, r4
 800d9a8:	4649      	mov	r1, r9
 800d9aa:	4638      	mov	r0, r7
 800d9ac:	47c0      	blx	r8
 800d9ae:	3001      	adds	r0, #1
 800d9b0:	d0e6      	beq.n	800d980 <_printf_common+0xa4>
 800d9b2:	3601      	adds	r6, #1
 800d9b4:	e7d9      	b.n	800d96a <_printf_common+0x8e>
	...

0800d9b8 <_printf_i>:
 800d9b8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800d9bc:	7e0f      	ldrb	r7, [r1, #24]
 800d9be:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800d9c0:	2f78      	cmp	r7, #120	; 0x78
 800d9c2:	4691      	mov	r9, r2
 800d9c4:	4680      	mov	r8, r0
 800d9c6:	460c      	mov	r4, r1
 800d9c8:	469a      	mov	sl, r3
 800d9ca:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800d9ce:	d807      	bhi.n	800d9e0 <_printf_i+0x28>
 800d9d0:	2f62      	cmp	r7, #98	; 0x62
 800d9d2:	d80a      	bhi.n	800d9ea <_printf_i+0x32>
 800d9d4:	2f00      	cmp	r7, #0
 800d9d6:	f000 80d8 	beq.w	800db8a <_printf_i+0x1d2>
 800d9da:	2f58      	cmp	r7, #88	; 0x58
 800d9dc:	f000 80a3 	beq.w	800db26 <_printf_i+0x16e>
 800d9e0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800d9e4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800d9e8:	e03a      	b.n	800da60 <_printf_i+0xa8>
 800d9ea:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800d9ee:	2b15      	cmp	r3, #21
 800d9f0:	d8f6      	bhi.n	800d9e0 <_printf_i+0x28>
 800d9f2:	a101      	add	r1, pc, #4	; (adr r1, 800d9f8 <_printf_i+0x40>)
 800d9f4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800d9f8:	0800da51 	.word	0x0800da51
 800d9fc:	0800da65 	.word	0x0800da65
 800da00:	0800d9e1 	.word	0x0800d9e1
 800da04:	0800d9e1 	.word	0x0800d9e1
 800da08:	0800d9e1 	.word	0x0800d9e1
 800da0c:	0800d9e1 	.word	0x0800d9e1
 800da10:	0800da65 	.word	0x0800da65
 800da14:	0800d9e1 	.word	0x0800d9e1
 800da18:	0800d9e1 	.word	0x0800d9e1
 800da1c:	0800d9e1 	.word	0x0800d9e1
 800da20:	0800d9e1 	.word	0x0800d9e1
 800da24:	0800db71 	.word	0x0800db71
 800da28:	0800da95 	.word	0x0800da95
 800da2c:	0800db53 	.word	0x0800db53
 800da30:	0800d9e1 	.word	0x0800d9e1
 800da34:	0800d9e1 	.word	0x0800d9e1
 800da38:	0800db93 	.word	0x0800db93
 800da3c:	0800d9e1 	.word	0x0800d9e1
 800da40:	0800da95 	.word	0x0800da95
 800da44:	0800d9e1 	.word	0x0800d9e1
 800da48:	0800d9e1 	.word	0x0800d9e1
 800da4c:	0800db5b 	.word	0x0800db5b
 800da50:	682b      	ldr	r3, [r5, #0]
 800da52:	1d1a      	adds	r2, r3, #4
 800da54:	681b      	ldr	r3, [r3, #0]
 800da56:	602a      	str	r2, [r5, #0]
 800da58:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800da5c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800da60:	2301      	movs	r3, #1
 800da62:	e0a3      	b.n	800dbac <_printf_i+0x1f4>
 800da64:	6820      	ldr	r0, [r4, #0]
 800da66:	6829      	ldr	r1, [r5, #0]
 800da68:	0606      	lsls	r6, r0, #24
 800da6a:	f101 0304 	add.w	r3, r1, #4
 800da6e:	d50a      	bpl.n	800da86 <_printf_i+0xce>
 800da70:	680e      	ldr	r6, [r1, #0]
 800da72:	602b      	str	r3, [r5, #0]
 800da74:	2e00      	cmp	r6, #0
 800da76:	da03      	bge.n	800da80 <_printf_i+0xc8>
 800da78:	232d      	movs	r3, #45	; 0x2d
 800da7a:	4276      	negs	r6, r6
 800da7c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800da80:	485e      	ldr	r0, [pc, #376]	; (800dbfc <_printf_i+0x244>)
 800da82:	230a      	movs	r3, #10
 800da84:	e019      	b.n	800daba <_printf_i+0x102>
 800da86:	680e      	ldr	r6, [r1, #0]
 800da88:	602b      	str	r3, [r5, #0]
 800da8a:	f010 0f40 	tst.w	r0, #64	; 0x40
 800da8e:	bf18      	it	ne
 800da90:	b236      	sxthne	r6, r6
 800da92:	e7ef      	b.n	800da74 <_printf_i+0xbc>
 800da94:	682b      	ldr	r3, [r5, #0]
 800da96:	6820      	ldr	r0, [r4, #0]
 800da98:	1d19      	adds	r1, r3, #4
 800da9a:	6029      	str	r1, [r5, #0]
 800da9c:	0601      	lsls	r1, r0, #24
 800da9e:	d501      	bpl.n	800daa4 <_printf_i+0xec>
 800daa0:	681e      	ldr	r6, [r3, #0]
 800daa2:	e002      	b.n	800daaa <_printf_i+0xf2>
 800daa4:	0646      	lsls	r6, r0, #25
 800daa6:	d5fb      	bpl.n	800daa0 <_printf_i+0xe8>
 800daa8:	881e      	ldrh	r6, [r3, #0]
 800daaa:	4854      	ldr	r0, [pc, #336]	; (800dbfc <_printf_i+0x244>)
 800daac:	2f6f      	cmp	r7, #111	; 0x6f
 800daae:	bf0c      	ite	eq
 800dab0:	2308      	moveq	r3, #8
 800dab2:	230a      	movne	r3, #10
 800dab4:	2100      	movs	r1, #0
 800dab6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800daba:	6865      	ldr	r5, [r4, #4]
 800dabc:	60a5      	str	r5, [r4, #8]
 800dabe:	2d00      	cmp	r5, #0
 800dac0:	bfa2      	ittt	ge
 800dac2:	6821      	ldrge	r1, [r4, #0]
 800dac4:	f021 0104 	bicge.w	r1, r1, #4
 800dac8:	6021      	strge	r1, [r4, #0]
 800daca:	b90e      	cbnz	r6, 800dad0 <_printf_i+0x118>
 800dacc:	2d00      	cmp	r5, #0
 800dace:	d04d      	beq.n	800db6c <_printf_i+0x1b4>
 800dad0:	4615      	mov	r5, r2
 800dad2:	fbb6 f1f3 	udiv	r1, r6, r3
 800dad6:	fb03 6711 	mls	r7, r3, r1, r6
 800dada:	5dc7      	ldrb	r7, [r0, r7]
 800dadc:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800dae0:	4637      	mov	r7, r6
 800dae2:	42bb      	cmp	r3, r7
 800dae4:	460e      	mov	r6, r1
 800dae6:	d9f4      	bls.n	800dad2 <_printf_i+0x11a>
 800dae8:	2b08      	cmp	r3, #8
 800daea:	d10b      	bne.n	800db04 <_printf_i+0x14c>
 800daec:	6823      	ldr	r3, [r4, #0]
 800daee:	07de      	lsls	r6, r3, #31
 800daf0:	d508      	bpl.n	800db04 <_printf_i+0x14c>
 800daf2:	6923      	ldr	r3, [r4, #16]
 800daf4:	6861      	ldr	r1, [r4, #4]
 800daf6:	4299      	cmp	r1, r3
 800daf8:	bfde      	ittt	le
 800dafa:	2330      	movle	r3, #48	; 0x30
 800dafc:	f805 3c01 	strble.w	r3, [r5, #-1]
 800db00:	f105 35ff 	addle.w	r5, r5, #4294967295
 800db04:	1b52      	subs	r2, r2, r5
 800db06:	6122      	str	r2, [r4, #16]
 800db08:	f8cd a000 	str.w	sl, [sp]
 800db0c:	464b      	mov	r3, r9
 800db0e:	aa03      	add	r2, sp, #12
 800db10:	4621      	mov	r1, r4
 800db12:	4640      	mov	r0, r8
 800db14:	f7ff fee2 	bl	800d8dc <_printf_common>
 800db18:	3001      	adds	r0, #1
 800db1a:	d14c      	bne.n	800dbb6 <_printf_i+0x1fe>
 800db1c:	f04f 30ff 	mov.w	r0, #4294967295
 800db20:	b004      	add	sp, #16
 800db22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800db26:	4835      	ldr	r0, [pc, #212]	; (800dbfc <_printf_i+0x244>)
 800db28:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800db2c:	6829      	ldr	r1, [r5, #0]
 800db2e:	6823      	ldr	r3, [r4, #0]
 800db30:	f851 6b04 	ldr.w	r6, [r1], #4
 800db34:	6029      	str	r1, [r5, #0]
 800db36:	061d      	lsls	r5, r3, #24
 800db38:	d514      	bpl.n	800db64 <_printf_i+0x1ac>
 800db3a:	07df      	lsls	r7, r3, #31
 800db3c:	bf44      	itt	mi
 800db3e:	f043 0320 	orrmi.w	r3, r3, #32
 800db42:	6023      	strmi	r3, [r4, #0]
 800db44:	b91e      	cbnz	r6, 800db4e <_printf_i+0x196>
 800db46:	6823      	ldr	r3, [r4, #0]
 800db48:	f023 0320 	bic.w	r3, r3, #32
 800db4c:	6023      	str	r3, [r4, #0]
 800db4e:	2310      	movs	r3, #16
 800db50:	e7b0      	b.n	800dab4 <_printf_i+0xfc>
 800db52:	6823      	ldr	r3, [r4, #0]
 800db54:	f043 0320 	orr.w	r3, r3, #32
 800db58:	6023      	str	r3, [r4, #0]
 800db5a:	2378      	movs	r3, #120	; 0x78
 800db5c:	4828      	ldr	r0, [pc, #160]	; (800dc00 <_printf_i+0x248>)
 800db5e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800db62:	e7e3      	b.n	800db2c <_printf_i+0x174>
 800db64:	0659      	lsls	r1, r3, #25
 800db66:	bf48      	it	mi
 800db68:	b2b6      	uxthmi	r6, r6
 800db6a:	e7e6      	b.n	800db3a <_printf_i+0x182>
 800db6c:	4615      	mov	r5, r2
 800db6e:	e7bb      	b.n	800dae8 <_printf_i+0x130>
 800db70:	682b      	ldr	r3, [r5, #0]
 800db72:	6826      	ldr	r6, [r4, #0]
 800db74:	6961      	ldr	r1, [r4, #20]
 800db76:	1d18      	adds	r0, r3, #4
 800db78:	6028      	str	r0, [r5, #0]
 800db7a:	0635      	lsls	r5, r6, #24
 800db7c:	681b      	ldr	r3, [r3, #0]
 800db7e:	d501      	bpl.n	800db84 <_printf_i+0x1cc>
 800db80:	6019      	str	r1, [r3, #0]
 800db82:	e002      	b.n	800db8a <_printf_i+0x1d2>
 800db84:	0670      	lsls	r0, r6, #25
 800db86:	d5fb      	bpl.n	800db80 <_printf_i+0x1c8>
 800db88:	8019      	strh	r1, [r3, #0]
 800db8a:	2300      	movs	r3, #0
 800db8c:	6123      	str	r3, [r4, #16]
 800db8e:	4615      	mov	r5, r2
 800db90:	e7ba      	b.n	800db08 <_printf_i+0x150>
 800db92:	682b      	ldr	r3, [r5, #0]
 800db94:	1d1a      	adds	r2, r3, #4
 800db96:	602a      	str	r2, [r5, #0]
 800db98:	681d      	ldr	r5, [r3, #0]
 800db9a:	6862      	ldr	r2, [r4, #4]
 800db9c:	2100      	movs	r1, #0
 800db9e:	4628      	mov	r0, r5
 800dba0:	f7f2 fb3e 	bl	8000220 <memchr>
 800dba4:	b108      	cbz	r0, 800dbaa <_printf_i+0x1f2>
 800dba6:	1b40      	subs	r0, r0, r5
 800dba8:	6060      	str	r0, [r4, #4]
 800dbaa:	6863      	ldr	r3, [r4, #4]
 800dbac:	6123      	str	r3, [r4, #16]
 800dbae:	2300      	movs	r3, #0
 800dbb0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800dbb4:	e7a8      	b.n	800db08 <_printf_i+0x150>
 800dbb6:	6923      	ldr	r3, [r4, #16]
 800dbb8:	462a      	mov	r2, r5
 800dbba:	4649      	mov	r1, r9
 800dbbc:	4640      	mov	r0, r8
 800dbbe:	47d0      	blx	sl
 800dbc0:	3001      	adds	r0, #1
 800dbc2:	d0ab      	beq.n	800db1c <_printf_i+0x164>
 800dbc4:	6823      	ldr	r3, [r4, #0]
 800dbc6:	079b      	lsls	r3, r3, #30
 800dbc8:	d413      	bmi.n	800dbf2 <_printf_i+0x23a>
 800dbca:	68e0      	ldr	r0, [r4, #12]
 800dbcc:	9b03      	ldr	r3, [sp, #12]
 800dbce:	4298      	cmp	r0, r3
 800dbd0:	bfb8      	it	lt
 800dbd2:	4618      	movlt	r0, r3
 800dbd4:	e7a4      	b.n	800db20 <_printf_i+0x168>
 800dbd6:	2301      	movs	r3, #1
 800dbd8:	4632      	mov	r2, r6
 800dbda:	4649      	mov	r1, r9
 800dbdc:	4640      	mov	r0, r8
 800dbde:	47d0      	blx	sl
 800dbe0:	3001      	adds	r0, #1
 800dbe2:	d09b      	beq.n	800db1c <_printf_i+0x164>
 800dbe4:	3501      	adds	r5, #1
 800dbe6:	68e3      	ldr	r3, [r4, #12]
 800dbe8:	9903      	ldr	r1, [sp, #12]
 800dbea:	1a5b      	subs	r3, r3, r1
 800dbec:	42ab      	cmp	r3, r5
 800dbee:	dcf2      	bgt.n	800dbd6 <_printf_i+0x21e>
 800dbf0:	e7eb      	b.n	800dbca <_printf_i+0x212>
 800dbf2:	2500      	movs	r5, #0
 800dbf4:	f104 0619 	add.w	r6, r4, #25
 800dbf8:	e7f5      	b.n	800dbe6 <_printf_i+0x22e>
 800dbfa:	bf00      	nop
 800dbfc:	08011732 	.word	0x08011732
 800dc00:	08011743 	.word	0x08011743

0800dc04 <siprintf>:
 800dc04:	b40e      	push	{r1, r2, r3}
 800dc06:	b500      	push	{lr}
 800dc08:	b09c      	sub	sp, #112	; 0x70
 800dc0a:	ab1d      	add	r3, sp, #116	; 0x74
 800dc0c:	9002      	str	r0, [sp, #8]
 800dc0e:	9006      	str	r0, [sp, #24]
 800dc10:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800dc14:	4809      	ldr	r0, [pc, #36]	; (800dc3c <siprintf+0x38>)
 800dc16:	9107      	str	r1, [sp, #28]
 800dc18:	9104      	str	r1, [sp, #16]
 800dc1a:	4909      	ldr	r1, [pc, #36]	; (800dc40 <siprintf+0x3c>)
 800dc1c:	f853 2b04 	ldr.w	r2, [r3], #4
 800dc20:	9105      	str	r1, [sp, #20]
 800dc22:	6800      	ldr	r0, [r0, #0]
 800dc24:	9301      	str	r3, [sp, #4]
 800dc26:	a902      	add	r1, sp, #8
 800dc28:	f001 fb78 	bl	800f31c <_svfiprintf_r>
 800dc2c:	9b02      	ldr	r3, [sp, #8]
 800dc2e:	2200      	movs	r2, #0
 800dc30:	701a      	strb	r2, [r3, #0]
 800dc32:	b01c      	add	sp, #112	; 0x70
 800dc34:	f85d eb04 	ldr.w	lr, [sp], #4
 800dc38:	b003      	add	sp, #12
 800dc3a:	4770      	bx	lr
 800dc3c:	2000013c 	.word	0x2000013c
 800dc40:	ffff0208 	.word	0xffff0208

0800dc44 <quorem>:
 800dc44:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc48:	6903      	ldr	r3, [r0, #16]
 800dc4a:	690c      	ldr	r4, [r1, #16]
 800dc4c:	42a3      	cmp	r3, r4
 800dc4e:	4607      	mov	r7, r0
 800dc50:	f2c0 8081 	blt.w	800dd56 <quorem+0x112>
 800dc54:	3c01      	subs	r4, #1
 800dc56:	f101 0814 	add.w	r8, r1, #20
 800dc5a:	f100 0514 	add.w	r5, r0, #20
 800dc5e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800dc62:	9301      	str	r3, [sp, #4]
 800dc64:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800dc68:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800dc6c:	3301      	adds	r3, #1
 800dc6e:	429a      	cmp	r2, r3
 800dc70:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800dc74:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800dc78:	fbb2 f6f3 	udiv	r6, r2, r3
 800dc7c:	d331      	bcc.n	800dce2 <quorem+0x9e>
 800dc7e:	f04f 0e00 	mov.w	lr, #0
 800dc82:	4640      	mov	r0, r8
 800dc84:	46ac      	mov	ip, r5
 800dc86:	46f2      	mov	sl, lr
 800dc88:	f850 2b04 	ldr.w	r2, [r0], #4
 800dc8c:	b293      	uxth	r3, r2
 800dc8e:	fb06 e303 	mla	r3, r6, r3, lr
 800dc92:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800dc96:	b29b      	uxth	r3, r3
 800dc98:	ebaa 0303 	sub.w	r3, sl, r3
 800dc9c:	f8dc a000 	ldr.w	sl, [ip]
 800dca0:	0c12      	lsrs	r2, r2, #16
 800dca2:	fa13 f38a 	uxtah	r3, r3, sl
 800dca6:	fb06 e202 	mla	r2, r6, r2, lr
 800dcaa:	9300      	str	r3, [sp, #0]
 800dcac:	9b00      	ldr	r3, [sp, #0]
 800dcae:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800dcb2:	b292      	uxth	r2, r2
 800dcb4:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800dcb8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800dcbc:	f8bd 3000 	ldrh.w	r3, [sp]
 800dcc0:	4581      	cmp	r9, r0
 800dcc2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800dcc6:	f84c 3b04 	str.w	r3, [ip], #4
 800dcca:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800dcce:	d2db      	bcs.n	800dc88 <quorem+0x44>
 800dcd0:	f855 300b 	ldr.w	r3, [r5, fp]
 800dcd4:	b92b      	cbnz	r3, 800dce2 <quorem+0x9e>
 800dcd6:	9b01      	ldr	r3, [sp, #4]
 800dcd8:	3b04      	subs	r3, #4
 800dcda:	429d      	cmp	r5, r3
 800dcdc:	461a      	mov	r2, r3
 800dcde:	d32e      	bcc.n	800dd3e <quorem+0xfa>
 800dce0:	613c      	str	r4, [r7, #16]
 800dce2:	4638      	mov	r0, r7
 800dce4:	f001 f8c6 	bl	800ee74 <__mcmp>
 800dce8:	2800      	cmp	r0, #0
 800dcea:	db24      	blt.n	800dd36 <quorem+0xf2>
 800dcec:	3601      	adds	r6, #1
 800dcee:	4628      	mov	r0, r5
 800dcf0:	f04f 0c00 	mov.w	ip, #0
 800dcf4:	f858 2b04 	ldr.w	r2, [r8], #4
 800dcf8:	f8d0 e000 	ldr.w	lr, [r0]
 800dcfc:	b293      	uxth	r3, r2
 800dcfe:	ebac 0303 	sub.w	r3, ip, r3
 800dd02:	0c12      	lsrs	r2, r2, #16
 800dd04:	fa13 f38e 	uxtah	r3, r3, lr
 800dd08:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800dd0c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800dd10:	b29b      	uxth	r3, r3
 800dd12:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800dd16:	45c1      	cmp	r9, r8
 800dd18:	f840 3b04 	str.w	r3, [r0], #4
 800dd1c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800dd20:	d2e8      	bcs.n	800dcf4 <quorem+0xb0>
 800dd22:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800dd26:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800dd2a:	b922      	cbnz	r2, 800dd36 <quorem+0xf2>
 800dd2c:	3b04      	subs	r3, #4
 800dd2e:	429d      	cmp	r5, r3
 800dd30:	461a      	mov	r2, r3
 800dd32:	d30a      	bcc.n	800dd4a <quorem+0x106>
 800dd34:	613c      	str	r4, [r7, #16]
 800dd36:	4630      	mov	r0, r6
 800dd38:	b003      	add	sp, #12
 800dd3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd3e:	6812      	ldr	r2, [r2, #0]
 800dd40:	3b04      	subs	r3, #4
 800dd42:	2a00      	cmp	r2, #0
 800dd44:	d1cc      	bne.n	800dce0 <quorem+0x9c>
 800dd46:	3c01      	subs	r4, #1
 800dd48:	e7c7      	b.n	800dcda <quorem+0x96>
 800dd4a:	6812      	ldr	r2, [r2, #0]
 800dd4c:	3b04      	subs	r3, #4
 800dd4e:	2a00      	cmp	r2, #0
 800dd50:	d1f0      	bne.n	800dd34 <quorem+0xf0>
 800dd52:	3c01      	subs	r4, #1
 800dd54:	e7eb      	b.n	800dd2e <quorem+0xea>
 800dd56:	2000      	movs	r0, #0
 800dd58:	e7ee      	b.n	800dd38 <quorem+0xf4>
 800dd5a:	0000      	movs	r0, r0
 800dd5c:	0000      	movs	r0, r0
	...

0800dd60 <_dtoa_r>:
 800dd60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd64:	ed2d 8b04 	vpush	{d8-d9}
 800dd68:	ec57 6b10 	vmov	r6, r7, d0
 800dd6c:	b093      	sub	sp, #76	; 0x4c
 800dd6e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800dd70:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 800dd74:	9106      	str	r1, [sp, #24]
 800dd76:	ee10 aa10 	vmov	sl, s0
 800dd7a:	4604      	mov	r4, r0
 800dd7c:	9209      	str	r2, [sp, #36]	; 0x24
 800dd7e:	930c      	str	r3, [sp, #48]	; 0x30
 800dd80:	46bb      	mov	fp, r7
 800dd82:	b975      	cbnz	r5, 800dda2 <_dtoa_r+0x42>
 800dd84:	2010      	movs	r0, #16
 800dd86:	f000 fddd 	bl	800e944 <malloc>
 800dd8a:	4602      	mov	r2, r0
 800dd8c:	6260      	str	r0, [r4, #36]	; 0x24
 800dd8e:	b920      	cbnz	r0, 800dd9a <_dtoa_r+0x3a>
 800dd90:	4ba7      	ldr	r3, [pc, #668]	; (800e030 <_dtoa_r+0x2d0>)
 800dd92:	21ea      	movs	r1, #234	; 0xea
 800dd94:	48a7      	ldr	r0, [pc, #668]	; (800e034 <_dtoa_r+0x2d4>)
 800dd96:	f001 fbd1 	bl	800f53c <__assert_func>
 800dd9a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800dd9e:	6005      	str	r5, [r0, #0]
 800dda0:	60c5      	str	r5, [r0, #12]
 800dda2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dda4:	6819      	ldr	r1, [r3, #0]
 800dda6:	b151      	cbz	r1, 800ddbe <_dtoa_r+0x5e>
 800dda8:	685a      	ldr	r2, [r3, #4]
 800ddaa:	604a      	str	r2, [r1, #4]
 800ddac:	2301      	movs	r3, #1
 800ddae:	4093      	lsls	r3, r2
 800ddb0:	608b      	str	r3, [r1, #8]
 800ddb2:	4620      	mov	r0, r4
 800ddb4:	f000 fe1c 	bl	800e9f0 <_Bfree>
 800ddb8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ddba:	2200      	movs	r2, #0
 800ddbc:	601a      	str	r2, [r3, #0]
 800ddbe:	1e3b      	subs	r3, r7, #0
 800ddc0:	bfaa      	itet	ge
 800ddc2:	2300      	movge	r3, #0
 800ddc4:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 800ddc8:	f8c8 3000 	strge.w	r3, [r8]
 800ddcc:	4b9a      	ldr	r3, [pc, #616]	; (800e038 <_dtoa_r+0x2d8>)
 800ddce:	bfbc      	itt	lt
 800ddd0:	2201      	movlt	r2, #1
 800ddd2:	f8c8 2000 	strlt.w	r2, [r8]
 800ddd6:	ea33 030b 	bics.w	r3, r3, fp
 800ddda:	d11b      	bne.n	800de14 <_dtoa_r+0xb4>
 800dddc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800ddde:	f242 730f 	movw	r3, #9999	; 0x270f
 800dde2:	6013      	str	r3, [r2, #0]
 800dde4:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800dde8:	4333      	orrs	r3, r6
 800ddea:	f000 8592 	beq.w	800e912 <_dtoa_r+0xbb2>
 800ddee:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800ddf0:	b963      	cbnz	r3, 800de0c <_dtoa_r+0xac>
 800ddf2:	4b92      	ldr	r3, [pc, #584]	; (800e03c <_dtoa_r+0x2dc>)
 800ddf4:	e022      	b.n	800de3c <_dtoa_r+0xdc>
 800ddf6:	4b92      	ldr	r3, [pc, #584]	; (800e040 <_dtoa_r+0x2e0>)
 800ddf8:	9301      	str	r3, [sp, #4]
 800ddfa:	3308      	adds	r3, #8
 800ddfc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800ddfe:	6013      	str	r3, [r2, #0]
 800de00:	9801      	ldr	r0, [sp, #4]
 800de02:	b013      	add	sp, #76	; 0x4c
 800de04:	ecbd 8b04 	vpop	{d8-d9}
 800de08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800de0c:	4b8b      	ldr	r3, [pc, #556]	; (800e03c <_dtoa_r+0x2dc>)
 800de0e:	9301      	str	r3, [sp, #4]
 800de10:	3303      	adds	r3, #3
 800de12:	e7f3      	b.n	800ddfc <_dtoa_r+0x9c>
 800de14:	2200      	movs	r2, #0
 800de16:	2300      	movs	r3, #0
 800de18:	4650      	mov	r0, sl
 800de1a:	4659      	mov	r1, fp
 800de1c:	f7f2 fe74 	bl	8000b08 <__aeabi_dcmpeq>
 800de20:	ec4b ab19 	vmov	d9, sl, fp
 800de24:	4680      	mov	r8, r0
 800de26:	b158      	cbz	r0, 800de40 <_dtoa_r+0xe0>
 800de28:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800de2a:	2301      	movs	r3, #1
 800de2c:	6013      	str	r3, [r2, #0]
 800de2e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800de30:	2b00      	cmp	r3, #0
 800de32:	f000 856b 	beq.w	800e90c <_dtoa_r+0xbac>
 800de36:	4883      	ldr	r0, [pc, #524]	; (800e044 <_dtoa_r+0x2e4>)
 800de38:	6018      	str	r0, [r3, #0]
 800de3a:	1e43      	subs	r3, r0, #1
 800de3c:	9301      	str	r3, [sp, #4]
 800de3e:	e7df      	b.n	800de00 <_dtoa_r+0xa0>
 800de40:	ec4b ab10 	vmov	d0, sl, fp
 800de44:	aa10      	add	r2, sp, #64	; 0x40
 800de46:	a911      	add	r1, sp, #68	; 0x44
 800de48:	4620      	mov	r0, r4
 800de4a:	f001 f8b9 	bl	800efc0 <__d2b>
 800de4e:	f3cb 550a 	ubfx	r5, fp, #20, #11
 800de52:	ee08 0a10 	vmov	s16, r0
 800de56:	2d00      	cmp	r5, #0
 800de58:	f000 8084 	beq.w	800df64 <_dtoa_r+0x204>
 800de5c:	ee19 3a90 	vmov	r3, s19
 800de60:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800de64:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 800de68:	4656      	mov	r6, sl
 800de6a:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 800de6e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800de72:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 800de76:	4b74      	ldr	r3, [pc, #464]	; (800e048 <_dtoa_r+0x2e8>)
 800de78:	2200      	movs	r2, #0
 800de7a:	4630      	mov	r0, r6
 800de7c:	4639      	mov	r1, r7
 800de7e:	f7f2 fa23 	bl	80002c8 <__aeabi_dsub>
 800de82:	a365      	add	r3, pc, #404	; (adr r3, 800e018 <_dtoa_r+0x2b8>)
 800de84:	e9d3 2300 	ldrd	r2, r3, [r3]
 800de88:	f7f2 fbd6 	bl	8000638 <__aeabi_dmul>
 800de8c:	a364      	add	r3, pc, #400	; (adr r3, 800e020 <_dtoa_r+0x2c0>)
 800de8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800de92:	f7f2 fa1b 	bl	80002cc <__adddf3>
 800de96:	4606      	mov	r6, r0
 800de98:	4628      	mov	r0, r5
 800de9a:	460f      	mov	r7, r1
 800de9c:	f7f2 fb62 	bl	8000564 <__aeabi_i2d>
 800dea0:	a361      	add	r3, pc, #388	; (adr r3, 800e028 <_dtoa_r+0x2c8>)
 800dea2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dea6:	f7f2 fbc7 	bl	8000638 <__aeabi_dmul>
 800deaa:	4602      	mov	r2, r0
 800deac:	460b      	mov	r3, r1
 800deae:	4630      	mov	r0, r6
 800deb0:	4639      	mov	r1, r7
 800deb2:	f7f2 fa0b 	bl	80002cc <__adddf3>
 800deb6:	4606      	mov	r6, r0
 800deb8:	460f      	mov	r7, r1
 800deba:	f7f2 fe6d 	bl	8000b98 <__aeabi_d2iz>
 800debe:	2200      	movs	r2, #0
 800dec0:	9000      	str	r0, [sp, #0]
 800dec2:	2300      	movs	r3, #0
 800dec4:	4630      	mov	r0, r6
 800dec6:	4639      	mov	r1, r7
 800dec8:	f7f2 fe28 	bl	8000b1c <__aeabi_dcmplt>
 800decc:	b150      	cbz	r0, 800dee4 <_dtoa_r+0x184>
 800dece:	9800      	ldr	r0, [sp, #0]
 800ded0:	f7f2 fb48 	bl	8000564 <__aeabi_i2d>
 800ded4:	4632      	mov	r2, r6
 800ded6:	463b      	mov	r3, r7
 800ded8:	f7f2 fe16 	bl	8000b08 <__aeabi_dcmpeq>
 800dedc:	b910      	cbnz	r0, 800dee4 <_dtoa_r+0x184>
 800dede:	9b00      	ldr	r3, [sp, #0]
 800dee0:	3b01      	subs	r3, #1
 800dee2:	9300      	str	r3, [sp, #0]
 800dee4:	9b00      	ldr	r3, [sp, #0]
 800dee6:	2b16      	cmp	r3, #22
 800dee8:	d85a      	bhi.n	800dfa0 <_dtoa_r+0x240>
 800deea:	9a00      	ldr	r2, [sp, #0]
 800deec:	4b57      	ldr	r3, [pc, #348]	; (800e04c <_dtoa_r+0x2ec>)
 800deee:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800def2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800def6:	ec51 0b19 	vmov	r0, r1, d9
 800defa:	f7f2 fe0f 	bl	8000b1c <__aeabi_dcmplt>
 800defe:	2800      	cmp	r0, #0
 800df00:	d050      	beq.n	800dfa4 <_dtoa_r+0x244>
 800df02:	9b00      	ldr	r3, [sp, #0]
 800df04:	3b01      	subs	r3, #1
 800df06:	9300      	str	r3, [sp, #0]
 800df08:	2300      	movs	r3, #0
 800df0a:	930b      	str	r3, [sp, #44]	; 0x2c
 800df0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800df0e:	1b5d      	subs	r5, r3, r5
 800df10:	1e6b      	subs	r3, r5, #1
 800df12:	9305      	str	r3, [sp, #20]
 800df14:	bf45      	ittet	mi
 800df16:	f1c5 0301 	rsbmi	r3, r5, #1
 800df1a:	9304      	strmi	r3, [sp, #16]
 800df1c:	2300      	movpl	r3, #0
 800df1e:	2300      	movmi	r3, #0
 800df20:	bf4c      	ite	mi
 800df22:	9305      	strmi	r3, [sp, #20]
 800df24:	9304      	strpl	r3, [sp, #16]
 800df26:	9b00      	ldr	r3, [sp, #0]
 800df28:	2b00      	cmp	r3, #0
 800df2a:	db3d      	blt.n	800dfa8 <_dtoa_r+0x248>
 800df2c:	9b05      	ldr	r3, [sp, #20]
 800df2e:	9a00      	ldr	r2, [sp, #0]
 800df30:	920a      	str	r2, [sp, #40]	; 0x28
 800df32:	4413      	add	r3, r2
 800df34:	9305      	str	r3, [sp, #20]
 800df36:	2300      	movs	r3, #0
 800df38:	9307      	str	r3, [sp, #28]
 800df3a:	9b06      	ldr	r3, [sp, #24]
 800df3c:	2b09      	cmp	r3, #9
 800df3e:	f200 8089 	bhi.w	800e054 <_dtoa_r+0x2f4>
 800df42:	2b05      	cmp	r3, #5
 800df44:	bfc4      	itt	gt
 800df46:	3b04      	subgt	r3, #4
 800df48:	9306      	strgt	r3, [sp, #24]
 800df4a:	9b06      	ldr	r3, [sp, #24]
 800df4c:	f1a3 0302 	sub.w	r3, r3, #2
 800df50:	bfcc      	ite	gt
 800df52:	2500      	movgt	r5, #0
 800df54:	2501      	movle	r5, #1
 800df56:	2b03      	cmp	r3, #3
 800df58:	f200 8087 	bhi.w	800e06a <_dtoa_r+0x30a>
 800df5c:	e8df f003 	tbb	[pc, r3]
 800df60:	59383a2d 	.word	0x59383a2d
 800df64:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 800df68:	441d      	add	r5, r3
 800df6a:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800df6e:	2b20      	cmp	r3, #32
 800df70:	bfc1      	itttt	gt
 800df72:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800df76:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 800df7a:	fa0b f303 	lslgt.w	r3, fp, r3
 800df7e:	fa26 f000 	lsrgt.w	r0, r6, r0
 800df82:	bfda      	itte	le
 800df84:	f1c3 0320 	rsble	r3, r3, #32
 800df88:	fa06 f003 	lslle.w	r0, r6, r3
 800df8c:	4318      	orrgt	r0, r3
 800df8e:	f7f2 fad9 	bl	8000544 <__aeabi_ui2d>
 800df92:	2301      	movs	r3, #1
 800df94:	4606      	mov	r6, r0
 800df96:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 800df9a:	3d01      	subs	r5, #1
 800df9c:	930e      	str	r3, [sp, #56]	; 0x38
 800df9e:	e76a      	b.n	800de76 <_dtoa_r+0x116>
 800dfa0:	2301      	movs	r3, #1
 800dfa2:	e7b2      	b.n	800df0a <_dtoa_r+0x1aa>
 800dfa4:	900b      	str	r0, [sp, #44]	; 0x2c
 800dfa6:	e7b1      	b.n	800df0c <_dtoa_r+0x1ac>
 800dfa8:	9b04      	ldr	r3, [sp, #16]
 800dfaa:	9a00      	ldr	r2, [sp, #0]
 800dfac:	1a9b      	subs	r3, r3, r2
 800dfae:	9304      	str	r3, [sp, #16]
 800dfb0:	4253      	negs	r3, r2
 800dfb2:	9307      	str	r3, [sp, #28]
 800dfb4:	2300      	movs	r3, #0
 800dfb6:	930a      	str	r3, [sp, #40]	; 0x28
 800dfb8:	e7bf      	b.n	800df3a <_dtoa_r+0x1da>
 800dfba:	2300      	movs	r3, #0
 800dfbc:	9308      	str	r3, [sp, #32]
 800dfbe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dfc0:	2b00      	cmp	r3, #0
 800dfc2:	dc55      	bgt.n	800e070 <_dtoa_r+0x310>
 800dfc4:	2301      	movs	r3, #1
 800dfc6:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800dfca:	461a      	mov	r2, r3
 800dfcc:	9209      	str	r2, [sp, #36]	; 0x24
 800dfce:	e00c      	b.n	800dfea <_dtoa_r+0x28a>
 800dfd0:	2301      	movs	r3, #1
 800dfd2:	e7f3      	b.n	800dfbc <_dtoa_r+0x25c>
 800dfd4:	2300      	movs	r3, #0
 800dfd6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800dfd8:	9308      	str	r3, [sp, #32]
 800dfda:	9b00      	ldr	r3, [sp, #0]
 800dfdc:	4413      	add	r3, r2
 800dfde:	9302      	str	r3, [sp, #8]
 800dfe0:	3301      	adds	r3, #1
 800dfe2:	2b01      	cmp	r3, #1
 800dfe4:	9303      	str	r3, [sp, #12]
 800dfe6:	bfb8      	it	lt
 800dfe8:	2301      	movlt	r3, #1
 800dfea:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800dfec:	2200      	movs	r2, #0
 800dfee:	6042      	str	r2, [r0, #4]
 800dff0:	2204      	movs	r2, #4
 800dff2:	f102 0614 	add.w	r6, r2, #20
 800dff6:	429e      	cmp	r6, r3
 800dff8:	6841      	ldr	r1, [r0, #4]
 800dffa:	d93d      	bls.n	800e078 <_dtoa_r+0x318>
 800dffc:	4620      	mov	r0, r4
 800dffe:	f000 fcb7 	bl	800e970 <_Balloc>
 800e002:	9001      	str	r0, [sp, #4]
 800e004:	2800      	cmp	r0, #0
 800e006:	d13b      	bne.n	800e080 <_dtoa_r+0x320>
 800e008:	4b11      	ldr	r3, [pc, #68]	; (800e050 <_dtoa_r+0x2f0>)
 800e00a:	4602      	mov	r2, r0
 800e00c:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800e010:	e6c0      	b.n	800dd94 <_dtoa_r+0x34>
 800e012:	2301      	movs	r3, #1
 800e014:	e7df      	b.n	800dfd6 <_dtoa_r+0x276>
 800e016:	bf00      	nop
 800e018:	636f4361 	.word	0x636f4361
 800e01c:	3fd287a7 	.word	0x3fd287a7
 800e020:	8b60c8b3 	.word	0x8b60c8b3
 800e024:	3fc68a28 	.word	0x3fc68a28
 800e028:	509f79fb 	.word	0x509f79fb
 800e02c:	3fd34413 	.word	0x3fd34413
 800e030:	08011761 	.word	0x08011761
 800e034:	08011778 	.word	0x08011778
 800e038:	7ff00000 	.word	0x7ff00000
 800e03c:	0801175d 	.word	0x0801175d
 800e040:	08011754 	.word	0x08011754
 800e044:	08011731 	.word	0x08011731
 800e048:	3ff80000 	.word	0x3ff80000
 800e04c:	08011868 	.word	0x08011868
 800e050:	080117d3 	.word	0x080117d3
 800e054:	2501      	movs	r5, #1
 800e056:	2300      	movs	r3, #0
 800e058:	9306      	str	r3, [sp, #24]
 800e05a:	9508      	str	r5, [sp, #32]
 800e05c:	f04f 33ff 	mov.w	r3, #4294967295
 800e060:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800e064:	2200      	movs	r2, #0
 800e066:	2312      	movs	r3, #18
 800e068:	e7b0      	b.n	800dfcc <_dtoa_r+0x26c>
 800e06a:	2301      	movs	r3, #1
 800e06c:	9308      	str	r3, [sp, #32]
 800e06e:	e7f5      	b.n	800e05c <_dtoa_r+0x2fc>
 800e070:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e072:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800e076:	e7b8      	b.n	800dfea <_dtoa_r+0x28a>
 800e078:	3101      	adds	r1, #1
 800e07a:	6041      	str	r1, [r0, #4]
 800e07c:	0052      	lsls	r2, r2, #1
 800e07e:	e7b8      	b.n	800dff2 <_dtoa_r+0x292>
 800e080:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e082:	9a01      	ldr	r2, [sp, #4]
 800e084:	601a      	str	r2, [r3, #0]
 800e086:	9b03      	ldr	r3, [sp, #12]
 800e088:	2b0e      	cmp	r3, #14
 800e08a:	f200 809d 	bhi.w	800e1c8 <_dtoa_r+0x468>
 800e08e:	2d00      	cmp	r5, #0
 800e090:	f000 809a 	beq.w	800e1c8 <_dtoa_r+0x468>
 800e094:	9b00      	ldr	r3, [sp, #0]
 800e096:	2b00      	cmp	r3, #0
 800e098:	dd32      	ble.n	800e100 <_dtoa_r+0x3a0>
 800e09a:	4ab7      	ldr	r2, [pc, #732]	; (800e378 <_dtoa_r+0x618>)
 800e09c:	f003 030f 	and.w	r3, r3, #15
 800e0a0:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800e0a4:	e9d3 8900 	ldrd	r8, r9, [r3]
 800e0a8:	9b00      	ldr	r3, [sp, #0]
 800e0aa:	05d8      	lsls	r0, r3, #23
 800e0ac:	ea4f 1723 	mov.w	r7, r3, asr #4
 800e0b0:	d516      	bpl.n	800e0e0 <_dtoa_r+0x380>
 800e0b2:	4bb2      	ldr	r3, [pc, #712]	; (800e37c <_dtoa_r+0x61c>)
 800e0b4:	ec51 0b19 	vmov	r0, r1, d9
 800e0b8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800e0bc:	f7f2 fbe6 	bl	800088c <__aeabi_ddiv>
 800e0c0:	f007 070f 	and.w	r7, r7, #15
 800e0c4:	4682      	mov	sl, r0
 800e0c6:	468b      	mov	fp, r1
 800e0c8:	2503      	movs	r5, #3
 800e0ca:	4eac      	ldr	r6, [pc, #688]	; (800e37c <_dtoa_r+0x61c>)
 800e0cc:	b957      	cbnz	r7, 800e0e4 <_dtoa_r+0x384>
 800e0ce:	4642      	mov	r2, r8
 800e0d0:	464b      	mov	r3, r9
 800e0d2:	4650      	mov	r0, sl
 800e0d4:	4659      	mov	r1, fp
 800e0d6:	f7f2 fbd9 	bl	800088c <__aeabi_ddiv>
 800e0da:	4682      	mov	sl, r0
 800e0dc:	468b      	mov	fp, r1
 800e0de:	e028      	b.n	800e132 <_dtoa_r+0x3d2>
 800e0e0:	2502      	movs	r5, #2
 800e0e2:	e7f2      	b.n	800e0ca <_dtoa_r+0x36a>
 800e0e4:	07f9      	lsls	r1, r7, #31
 800e0e6:	d508      	bpl.n	800e0fa <_dtoa_r+0x39a>
 800e0e8:	4640      	mov	r0, r8
 800e0ea:	4649      	mov	r1, r9
 800e0ec:	e9d6 2300 	ldrd	r2, r3, [r6]
 800e0f0:	f7f2 faa2 	bl	8000638 <__aeabi_dmul>
 800e0f4:	3501      	adds	r5, #1
 800e0f6:	4680      	mov	r8, r0
 800e0f8:	4689      	mov	r9, r1
 800e0fa:	107f      	asrs	r7, r7, #1
 800e0fc:	3608      	adds	r6, #8
 800e0fe:	e7e5      	b.n	800e0cc <_dtoa_r+0x36c>
 800e100:	f000 809b 	beq.w	800e23a <_dtoa_r+0x4da>
 800e104:	9b00      	ldr	r3, [sp, #0]
 800e106:	4f9d      	ldr	r7, [pc, #628]	; (800e37c <_dtoa_r+0x61c>)
 800e108:	425e      	negs	r6, r3
 800e10a:	4b9b      	ldr	r3, [pc, #620]	; (800e378 <_dtoa_r+0x618>)
 800e10c:	f006 020f 	and.w	r2, r6, #15
 800e110:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800e114:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e118:	ec51 0b19 	vmov	r0, r1, d9
 800e11c:	f7f2 fa8c 	bl	8000638 <__aeabi_dmul>
 800e120:	1136      	asrs	r6, r6, #4
 800e122:	4682      	mov	sl, r0
 800e124:	468b      	mov	fp, r1
 800e126:	2300      	movs	r3, #0
 800e128:	2502      	movs	r5, #2
 800e12a:	2e00      	cmp	r6, #0
 800e12c:	d17a      	bne.n	800e224 <_dtoa_r+0x4c4>
 800e12e:	2b00      	cmp	r3, #0
 800e130:	d1d3      	bne.n	800e0da <_dtoa_r+0x37a>
 800e132:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e134:	2b00      	cmp	r3, #0
 800e136:	f000 8082 	beq.w	800e23e <_dtoa_r+0x4de>
 800e13a:	4b91      	ldr	r3, [pc, #580]	; (800e380 <_dtoa_r+0x620>)
 800e13c:	2200      	movs	r2, #0
 800e13e:	4650      	mov	r0, sl
 800e140:	4659      	mov	r1, fp
 800e142:	f7f2 fceb 	bl	8000b1c <__aeabi_dcmplt>
 800e146:	2800      	cmp	r0, #0
 800e148:	d079      	beq.n	800e23e <_dtoa_r+0x4de>
 800e14a:	9b03      	ldr	r3, [sp, #12]
 800e14c:	2b00      	cmp	r3, #0
 800e14e:	d076      	beq.n	800e23e <_dtoa_r+0x4de>
 800e150:	9b02      	ldr	r3, [sp, #8]
 800e152:	2b00      	cmp	r3, #0
 800e154:	dd36      	ble.n	800e1c4 <_dtoa_r+0x464>
 800e156:	9b00      	ldr	r3, [sp, #0]
 800e158:	4650      	mov	r0, sl
 800e15a:	4659      	mov	r1, fp
 800e15c:	1e5f      	subs	r7, r3, #1
 800e15e:	2200      	movs	r2, #0
 800e160:	4b88      	ldr	r3, [pc, #544]	; (800e384 <_dtoa_r+0x624>)
 800e162:	f7f2 fa69 	bl	8000638 <__aeabi_dmul>
 800e166:	9e02      	ldr	r6, [sp, #8]
 800e168:	4682      	mov	sl, r0
 800e16a:	468b      	mov	fp, r1
 800e16c:	3501      	adds	r5, #1
 800e16e:	4628      	mov	r0, r5
 800e170:	f7f2 f9f8 	bl	8000564 <__aeabi_i2d>
 800e174:	4652      	mov	r2, sl
 800e176:	465b      	mov	r3, fp
 800e178:	f7f2 fa5e 	bl	8000638 <__aeabi_dmul>
 800e17c:	4b82      	ldr	r3, [pc, #520]	; (800e388 <_dtoa_r+0x628>)
 800e17e:	2200      	movs	r2, #0
 800e180:	f7f2 f8a4 	bl	80002cc <__adddf3>
 800e184:	46d0      	mov	r8, sl
 800e186:	46d9      	mov	r9, fp
 800e188:	4682      	mov	sl, r0
 800e18a:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 800e18e:	2e00      	cmp	r6, #0
 800e190:	d158      	bne.n	800e244 <_dtoa_r+0x4e4>
 800e192:	4b7e      	ldr	r3, [pc, #504]	; (800e38c <_dtoa_r+0x62c>)
 800e194:	2200      	movs	r2, #0
 800e196:	4640      	mov	r0, r8
 800e198:	4649      	mov	r1, r9
 800e19a:	f7f2 f895 	bl	80002c8 <__aeabi_dsub>
 800e19e:	4652      	mov	r2, sl
 800e1a0:	465b      	mov	r3, fp
 800e1a2:	4680      	mov	r8, r0
 800e1a4:	4689      	mov	r9, r1
 800e1a6:	f7f2 fcd7 	bl	8000b58 <__aeabi_dcmpgt>
 800e1aa:	2800      	cmp	r0, #0
 800e1ac:	f040 8295 	bne.w	800e6da <_dtoa_r+0x97a>
 800e1b0:	4652      	mov	r2, sl
 800e1b2:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800e1b6:	4640      	mov	r0, r8
 800e1b8:	4649      	mov	r1, r9
 800e1ba:	f7f2 fcaf 	bl	8000b1c <__aeabi_dcmplt>
 800e1be:	2800      	cmp	r0, #0
 800e1c0:	f040 8289 	bne.w	800e6d6 <_dtoa_r+0x976>
 800e1c4:	ec5b ab19 	vmov	sl, fp, d9
 800e1c8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e1ca:	2b00      	cmp	r3, #0
 800e1cc:	f2c0 8148 	blt.w	800e460 <_dtoa_r+0x700>
 800e1d0:	9a00      	ldr	r2, [sp, #0]
 800e1d2:	2a0e      	cmp	r2, #14
 800e1d4:	f300 8144 	bgt.w	800e460 <_dtoa_r+0x700>
 800e1d8:	4b67      	ldr	r3, [pc, #412]	; (800e378 <_dtoa_r+0x618>)
 800e1da:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800e1de:	e9d3 8900 	ldrd	r8, r9, [r3]
 800e1e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e1e4:	2b00      	cmp	r3, #0
 800e1e6:	f280 80d5 	bge.w	800e394 <_dtoa_r+0x634>
 800e1ea:	9b03      	ldr	r3, [sp, #12]
 800e1ec:	2b00      	cmp	r3, #0
 800e1ee:	f300 80d1 	bgt.w	800e394 <_dtoa_r+0x634>
 800e1f2:	f040 826f 	bne.w	800e6d4 <_dtoa_r+0x974>
 800e1f6:	4b65      	ldr	r3, [pc, #404]	; (800e38c <_dtoa_r+0x62c>)
 800e1f8:	2200      	movs	r2, #0
 800e1fa:	4640      	mov	r0, r8
 800e1fc:	4649      	mov	r1, r9
 800e1fe:	f7f2 fa1b 	bl	8000638 <__aeabi_dmul>
 800e202:	4652      	mov	r2, sl
 800e204:	465b      	mov	r3, fp
 800e206:	f7f2 fc9d 	bl	8000b44 <__aeabi_dcmpge>
 800e20a:	9e03      	ldr	r6, [sp, #12]
 800e20c:	4637      	mov	r7, r6
 800e20e:	2800      	cmp	r0, #0
 800e210:	f040 8245 	bne.w	800e69e <_dtoa_r+0x93e>
 800e214:	9d01      	ldr	r5, [sp, #4]
 800e216:	2331      	movs	r3, #49	; 0x31
 800e218:	f805 3b01 	strb.w	r3, [r5], #1
 800e21c:	9b00      	ldr	r3, [sp, #0]
 800e21e:	3301      	adds	r3, #1
 800e220:	9300      	str	r3, [sp, #0]
 800e222:	e240      	b.n	800e6a6 <_dtoa_r+0x946>
 800e224:	07f2      	lsls	r2, r6, #31
 800e226:	d505      	bpl.n	800e234 <_dtoa_r+0x4d4>
 800e228:	e9d7 2300 	ldrd	r2, r3, [r7]
 800e22c:	f7f2 fa04 	bl	8000638 <__aeabi_dmul>
 800e230:	3501      	adds	r5, #1
 800e232:	2301      	movs	r3, #1
 800e234:	1076      	asrs	r6, r6, #1
 800e236:	3708      	adds	r7, #8
 800e238:	e777      	b.n	800e12a <_dtoa_r+0x3ca>
 800e23a:	2502      	movs	r5, #2
 800e23c:	e779      	b.n	800e132 <_dtoa_r+0x3d2>
 800e23e:	9f00      	ldr	r7, [sp, #0]
 800e240:	9e03      	ldr	r6, [sp, #12]
 800e242:	e794      	b.n	800e16e <_dtoa_r+0x40e>
 800e244:	9901      	ldr	r1, [sp, #4]
 800e246:	4b4c      	ldr	r3, [pc, #304]	; (800e378 <_dtoa_r+0x618>)
 800e248:	4431      	add	r1, r6
 800e24a:	910d      	str	r1, [sp, #52]	; 0x34
 800e24c:	9908      	ldr	r1, [sp, #32]
 800e24e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800e252:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800e256:	2900      	cmp	r1, #0
 800e258:	d043      	beq.n	800e2e2 <_dtoa_r+0x582>
 800e25a:	494d      	ldr	r1, [pc, #308]	; (800e390 <_dtoa_r+0x630>)
 800e25c:	2000      	movs	r0, #0
 800e25e:	f7f2 fb15 	bl	800088c <__aeabi_ddiv>
 800e262:	4652      	mov	r2, sl
 800e264:	465b      	mov	r3, fp
 800e266:	f7f2 f82f 	bl	80002c8 <__aeabi_dsub>
 800e26a:	9d01      	ldr	r5, [sp, #4]
 800e26c:	4682      	mov	sl, r0
 800e26e:	468b      	mov	fp, r1
 800e270:	4649      	mov	r1, r9
 800e272:	4640      	mov	r0, r8
 800e274:	f7f2 fc90 	bl	8000b98 <__aeabi_d2iz>
 800e278:	4606      	mov	r6, r0
 800e27a:	f7f2 f973 	bl	8000564 <__aeabi_i2d>
 800e27e:	4602      	mov	r2, r0
 800e280:	460b      	mov	r3, r1
 800e282:	4640      	mov	r0, r8
 800e284:	4649      	mov	r1, r9
 800e286:	f7f2 f81f 	bl	80002c8 <__aeabi_dsub>
 800e28a:	3630      	adds	r6, #48	; 0x30
 800e28c:	f805 6b01 	strb.w	r6, [r5], #1
 800e290:	4652      	mov	r2, sl
 800e292:	465b      	mov	r3, fp
 800e294:	4680      	mov	r8, r0
 800e296:	4689      	mov	r9, r1
 800e298:	f7f2 fc40 	bl	8000b1c <__aeabi_dcmplt>
 800e29c:	2800      	cmp	r0, #0
 800e29e:	d163      	bne.n	800e368 <_dtoa_r+0x608>
 800e2a0:	4642      	mov	r2, r8
 800e2a2:	464b      	mov	r3, r9
 800e2a4:	4936      	ldr	r1, [pc, #216]	; (800e380 <_dtoa_r+0x620>)
 800e2a6:	2000      	movs	r0, #0
 800e2a8:	f7f2 f80e 	bl	80002c8 <__aeabi_dsub>
 800e2ac:	4652      	mov	r2, sl
 800e2ae:	465b      	mov	r3, fp
 800e2b0:	f7f2 fc34 	bl	8000b1c <__aeabi_dcmplt>
 800e2b4:	2800      	cmp	r0, #0
 800e2b6:	f040 80b5 	bne.w	800e424 <_dtoa_r+0x6c4>
 800e2ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e2bc:	429d      	cmp	r5, r3
 800e2be:	d081      	beq.n	800e1c4 <_dtoa_r+0x464>
 800e2c0:	4b30      	ldr	r3, [pc, #192]	; (800e384 <_dtoa_r+0x624>)
 800e2c2:	2200      	movs	r2, #0
 800e2c4:	4650      	mov	r0, sl
 800e2c6:	4659      	mov	r1, fp
 800e2c8:	f7f2 f9b6 	bl	8000638 <__aeabi_dmul>
 800e2cc:	4b2d      	ldr	r3, [pc, #180]	; (800e384 <_dtoa_r+0x624>)
 800e2ce:	4682      	mov	sl, r0
 800e2d0:	468b      	mov	fp, r1
 800e2d2:	4640      	mov	r0, r8
 800e2d4:	4649      	mov	r1, r9
 800e2d6:	2200      	movs	r2, #0
 800e2d8:	f7f2 f9ae 	bl	8000638 <__aeabi_dmul>
 800e2dc:	4680      	mov	r8, r0
 800e2de:	4689      	mov	r9, r1
 800e2e0:	e7c6      	b.n	800e270 <_dtoa_r+0x510>
 800e2e2:	4650      	mov	r0, sl
 800e2e4:	4659      	mov	r1, fp
 800e2e6:	f7f2 f9a7 	bl	8000638 <__aeabi_dmul>
 800e2ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e2ec:	9d01      	ldr	r5, [sp, #4]
 800e2ee:	930f      	str	r3, [sp, #60]	; 0x3c
 800e2f0:	4682      	mov	sl, r0
 800e2f2:	468b      	mov	fp, r1
 800e2f4:	4649      	mov	r1, r9
 800e2f6:	4640      	mov	r0, r8
 800e2f8:	f7f2 fc4e 	bl	8000b98 <__aeabi_d2iz>
 800e2fc:	4606      	mov	r6, r0
 800e2fe:	f7f2 f931 	bl	8000564 <__aeabi_i2d>
 800e302:	3630      	adds	r6, #48	; 0x30
 800e304:	4602      	mov	r2, r0
 800e306:	460b      	mov	r3, r1
 800e308:	4640      	mov	r0, r8
 800e30a:	4649      	mov	r1, r9
 800e30c:	f7f1 ffdc 	bl	80002c8 <__aeabi_dsub>
 800e310:	f805 6b01 	strb.w	r6, [r5], #1
 800e314:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e316:	429d      	cmp	r5, r3
 800e318:	4680      	mov	r8, r0
 800e31a:	4689      	mov	r9, r1
 800e31c:	f04f 0200 	mov.w	r2, #0
 800e320:	d124      	bne.n	800e36c <_dtoa_r+0x60c>
 800e322:	4b1b      	ldr	r3, [pc, #108]	; (800e390 <_dtoa_r+0x630>)
 800e324:	4650      	mov	r0, sl
 800e326:	4659      	mov	r1, fp
 800e328:	f7f1 ffd0 	bl	80002cc <__adddf3>
 800e32c:	4602      	mov	r2, r0
 800e32e:	460b      	mov	r3, r1
 800e330:	4640      	mov	r0, r8
 800e332:	4649      	mov	r1, r9
 800e334:	f7f2 fc10 	bl	8000b58 <__aeabi_dcmpgt>
 800e338:	2800      	cmp	r0, #0
 800e33a:	d173      	bne.n	800e424 <_dtoa_r+0x6c4>
 800e33c:	4652      	mov	r2, sl
 800e33e:	465b      	mov	r3, fp
 800e340:	4913      	ldr	r1, [pc, #76]	; (800e390 <_dtoa_r+0x630>)
 800e342:	2000      	movs	r0, #0
 800e344:	f7f1 ffc0 	bl	80002c8 <__aeabi_dsub>
 800e348:	4602      	mov	r2, r0
 800e34a:	460b      	mov	r3, r1
 800e34c:	4640      	mov	r0, r8
 800e34e:	4649      	mov	r1, r9
 800e350:	f7f2 fbe4 	bl	8000b1c <__aeabi_dcmplt>
 800e354:	2800      	cmp	r0, #0
 800e356:	f43f af35 	beq.w	800e1c4 <_dtoa_r+0x464>
 800e35a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800e35c:	1e6b      	subs	r3, r5, #1
 800e35e:	930f      	str	r3, [sp, #60]	; 0x3c
 800e360:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800e364:	2b30      	cmp	r3, #48	; 0x30
 800e366:	d0f8      	beq.n	800e35a <_dtoa_r+0x5fa>
 800e368:	9700      	str	r7, [sp, #0]
 800e36a:	e049      	b.n	800e400 <_dtoa_r+0x6a0>
 800e36c:	4b05      	ldr	r3, [pc, #20]	; (800e384 <_dtoa_r+0x624>)
 800e36e:	f7f2 f963 	bl	8000638 <__aeabi_dmul>
 800e372:	4680      	mov	r8, r0
 800e374:	4689      	mov	r9, r1
 800e376:	e7bd      	b.n	800e2f4 <_dtoa_r+0x594>
 800e378:	08011868 	.word	0x08011868
 800e37c:	08011840 	.word	0x08011840
 800e380:	3ff00000 	.word	0x3ff00000
 800e384:	40240000 	.word	0x40240000
 800e388:	401c0000 	.word	0x401c0000
 800e38c:	40140000 	.word	0x40140000
 800e390:	3fe00000 	.word	0x3fe00000
 800e394:	9d01      	ldr	r5, [sp, #4]
 800e396:	4656      	mov	r6, sl
 800e398:	465f      	mov	r7, fp
 800e39a:	4642      	mov	r2, r8
 800e39c:	464b      	mov	r3, r9
 800e39e:	4630      	mov	r0, r6
 800e3a0:	4639      	mov	r1, r7
 800e3a2:	f7f2 fa73 	bl	800088c <__aeabi_ddiv>
 800e3a6:	f7f2 fbf7 	bl	8000b98 <__aeabi_d2iz>
 800e3aa:	4682      	mov	sl, r0
 800e3ac:	f7f2 f8da 	bl	8000564 <__aeabi_i2d>
 800e3b0:	4642      	mov	r2, r8
 800e3b2:	464b      	mov	r3, r9
 800e3b4:	f7f2 f940 	bl	8000638 <__aeabi_dmul>
 800e3b8:	4602      	mov	r2, r0
 800e3ba:	460b      	mov	r3, r1
 800e3bc:	4630      	mov	r0, r6
 800e3be:	4639      	mov	r1, r7
 800e3c0:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 800e3c4:	f7f1 ff80 	bl	80002c8 <__aeabi_dsub>
 800e3c8:	f805 6b01 	strb.w	r6, [r5], #1
 800e3cc:	9e01      	ldr	r6, [sp, #4]
 800e3ce:	9f03      	ldr	r7, [sp, #12]
 800e3d0:	1bae      	subs	r6, r5, r6
 800e3d2:	42b7      	cmp	r7, r6
 800e3d4:	4602      	mov	r2, r0
 800e3d6:	460b      	mov	r3, r1
 800e3d8:	d135      	bne.n	800e446 <_dtoa_r+0x6e6>
 800e3da:	f7f1 ff77 	bl	80002cc <__adddf3>
 800e3de:	4642      	mov	r2, r8
 800e3e0:	464b      	mov	r3, r9
 800e3e2:	4606      	mov	r6, r0
 800e3e4:	460f      	mov	r7, r1
 800e3e6:	f7f2 fbb7 	bl	8000b58 <__aeabi_dcmpgt>
 800e3ea:	b9d0      	cbnz	r0, 800e422 <_dtoa_r+0x6c2>
 800e3ec:	4642      	mov	r2, r8
 800e3ee:	464b      	mov	r3, r9
 800e3f0:	4630      	mov	r0, r6
 800e3f2:	4639      	mov	r1, r7
 800e3f4:	f7f2 fb88 	bl	8000b08 <__aeabi_dcmpeq>
 800e3f8:	b110      	cbz	r0, 800e400 <_dtoa_r+0x6a0>
 800e3fa:	f01a 0f01 	tst.w	sl, #1
 800e3fe:	d110      	bne.n	800e422 <_dtoa_r+0x6c2>
 800e400:	4620      	mov	r0, r4
 800e402:	ee18 1a10 	vmov	r1, s16
 800e406:	f000 faf3 	bl	800e9f0 <_Bfree>
 800e40a:	2300      	movs	r3, #0
 800e40c:	9800      	ldr	r0, [sp, #0]
 800e40e:	702b      	strb	r3, [r5, #0]
 800e410:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e412:	3001      	adds	r0, #1
 800e414:	6018      	str	r0, [r3, #0]
 800e416:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e418:	2b00      	cmp	r3, #0
 800e41a:	f43f acf1 	beq.w	800de00 <_dtoa_r+0xa0>
 800e41e:	601d      	str	r5, [r3, #0]
 800e420:	e4ee      	b.n	800de00 <_dtoa_r+0xa0>
 800e422:	9f00      	ldr	r7, [sp, #0]
 800e424:	462b      	mov	r3, r5
 800e426:	461d      	mov	r5, r3
 800e428:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800e42c:	2a39      	cmp	r2, #57	; 0x39
 800e42e:	d106      	bne.n	800e43e <_dtoa_r+0x6de>
 800e430:	9a01      	ldr	r2, [sp, #4]
 800e432:	429a      	cmp	r2, r3
 800e434:	d1f7      	bne.n	800e426 <_dtoa_r+0x6c6>
 800e436:	9901      	ldr	r1, [sp, #4]
 800e438:	2230      	movs	r2, #48	; 0x30
 800e43a:	3701      	adds	r7, #1
 800e43c:	700a      	strb	r2, [r1, #0]
 800e43e:	781a      	ldrb	r2, [r3, #0]
 800e440:	3201      	adds	r2, #1
 800e442:	701a      	strb	r2, [r3, #0]
 800e444:	e790      	b.n	800e368 <_dtoa_r+0x608>
 800e446:	4ba6      	ldr	r3, [pc, #664]	; (800e6e0 <_dtoa_r+0x980>)
 800e448:	2200      	movs	r2, #0
 800e44a:	f7f2 f8f5 	bl	8000638 <__aeabi_dmul>
 800e44e:	2200      	movs	r2, #0
 800e450:	2300      	movs	r3, #0
 800e452:	4606      	mov	r6, r0
 800e454:	460f      	mov	r7, r1
 800e456:	f7f2 fb57 	bl	8000b08 <__aeabi_dcmpeq>
 800e45a:	2800      	cmp	r0, #0
 800e45c:	d09d      	beq.n	800e39a <_dtoa_r+0x63a>
 800e45e:	e7cf      	b.n	800e400 <_dtoa_r+0x6a0>
 800e460:	9a08      	ldr	r2, [sp, #32]
 800e462:	2a00      	cmp	r2, #0
 800e464:	f000 80d7 	beq.w	800e616 <_dtoa_r+0x8b6>
 800e468:	9a06      	ldr	r2, [sp, #24]
 800e46a:	2a01      	cmp	r2, #1
 800e46c:	f300 80ba 	bgt.w	800e5e4 <_dtoa_r+0x884>
 800e470:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800e472:	2a00      	cmp	r2, #0
 800e474:	f000 80b2 	beq.w	800e5dc <_dtoa_r+0x87c>
 800e478:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800e47c:	9e07      	ldr	r6, [sp, #28]
 800e47e:	9d04      	ldr	r5, [sp, #16]
 800e480:	9a04      	ldr	r2, [sp, #16]
 800e482:	441a      	add	r2, r3
 800e484:	9204      	str	r2, [sp, #16]
 800e486:	9a05      	ldr	r2, [sp, #20]
 800e488:	2101      	movs	r1, #1
 800e48a:	441a      	add	r2, r3
 800e48c:	4620      	mov	r0, r4
 800e48e:	9205      	str	r2, [sp, #20]
 800e490:	f000 fb66 	bl	800eb60 <__i2b>
 800e494:	4607      	mov	r7, r0
 800e496:	2d00      	cmp	r5, #0
 800e498:	dd0c      	ble.n	800e4b4 <_dtoa_r+0x754>
 800e49a:	9b05      	ldr	r3, [sp, #20]
 800e49c:	2b00      	cmp	r3, #0
 800e49e:	dd09      	ble.n	800e4b4 <_dtoa_r+0x754>
 800e4a0:	42ab      	cmp	r3, r5
 800e4a2:	9a04      	ldr	r2, [sp, #16]
 800e4a4:	bfa8      	it	ge
 800e4a6:	462b      	movge	r3, r5
 800e4a8:	1ad2      	subs	r2, r2, r3
 800e4aa:	9204      	str	r2, [sp, #16]
 800e4ac:	9a05      	ldr	r2, [sp, #20]
 800e4ae:	1aed      	subs	r5, r5, r3
 800e4b0:	1ad3      	subs	r3, r2, r3
 800e4b2:	9305      	str	r3, [sp, #20]
 800e4b4:	9b07      	ldr	r3, [sp, #28]
 800e4b6:	b31b      	cbz	r3, 800e500 <_dtoa_r+0x7a0>
 800e4b8:	9b08      	ldr	r3, [sp, #32]
 800e4ba:	2b00      	cmp	r3, #0
 800e4bc:	f000 80af 	beq.w	800e61e <_dtoa_r+0x8be>
 800e4c0:	2e00      	cmp	r6, #0
 800e4c2:	dd13      	ble.n	800e4ec <_dtoa_r+0x78c>
 800e4c4:	4639      	mov	r1, r7
 800e4c6:	4632      	mov	r2, r6
 800e4c8:	4620      	mov	r0, r4
 800e4ca:	f000 fc09 	bl	800ece0 <__pow5mult>
 800e4ce:	ee18 2a10 	vmov	r2, s16
 800e4d2:	4601      	mov	r1, r0
 800e4d4:	4607      	mov	r7, r0
 800e4d6:	4620      	mov	r0, r4
 800e4d8:	f000 fb58 	bl	800eb8c <__multiply>
 800e4dc:	ee18 1a10 	vmov	r1, s16
 800e4e0:	4680      	mov	r8, r0
 800e4e2:	4620      	mov	r0, r4
 800e4e4:	f000 fa84 	bl	800e9f0 <_Bfree>
 800e4e8:	ee08 8a10 	vmov	s16, r8
 800e4ec:	9b07      	ldr	r3, [sp, #28]
 800e4ee:	1b9a      	subs	r2, r3, r6
 800e4f0:	d006      	beq.n	800e500 <_dtoa_r+0x7a0>
 800e4f2:	ee18 1a10 	vmov	r1, s16
 800e4f6:	4620      	mov	r0, r4
 800e4f8:	f000 fbf2 	bl	800ece0 <__pow5mult>
 800e4fc:	ee08 0a10 	vmov	s16, r0
 800e500:	2101      	movs	r1, #1
 800e502:	4620      	mov	r0, r4
 800e504:	f000 fb2c 	bl	800eb60 <__i2b>
 800e508:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e50a:	2b00      	cmp	r3, #0
 800e50c:	4606      	mov	r6, r0
 800e50e:	f340 8088 	ble.w	800e622 <_dtoa_r+0x8c2>
 800e512:	461a      	mov	r2, r3
 800e514:	4601      	mov	r1, r0
 800e516:	4620      	mov	r0, r4
 800e518:	f000 fbe2 	bl	800ece0 <__pow5mult>
 800e51c:	9b06      	ldr	r3, [sp, #24]
 800e51e:	2b01      	cmp	r3, #1
 800e520:	4606      	mov	r6, r0
 800e522:	f340 8081 	ble.w	800e628 <_dtoa_r+0x8c8>
 800e526:	f04f 0800 	mov.w	r8, #0
 800e52a:	6933      	ldr	r3, [r6, #16]
 800e52c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800e530:	6918      	ldr	r0, [r3, #16]
 800e532:	f000 fac5 	bl	800eac0 <__hi0bits>
 800e536:	f1c0 0020 	rsb	r0, r0, #32
 800e53a:	9b05      	ldr	r3, [sp, #20]
 800e53c:	4418      	add	r0, r3
 800e53e:	f010 001f 	ands.w	r0, r0, #31
 800e542:	f000 8092 	beq.w	800e66a <_dtoa_r+0x90a>
 800e546:	f1c0 0320 	rsb	r3, r0, #32
 800e54a:	2b04      	cmp	r3, #4
 800e54c:	f340 808a 	ble.w	800e664 <_dtoa_r+0x904>
 800e550:	f1c0 001c 	rsb	r0, r0, #28
 800e554:	9b04      	ldr	r3, [sp, #16]
 800e556:	4403      	add	r3, r0
 800e558:	9304      	str	r3, [sp, #16]
 800e55a:	9b05      	ldr	r3, [sp, #20]
 800e55c:	4403      	add	r3, r0
 800e55e:	4405      	add	r5, r0
 800e560:	9305      	str	r3, [sp, #20]
 800e562:	9b04      	ldr	r3, [sp, #16]
 800e564:	2b00      	cmp	r3, #0
 800e566:	dd07      	ble.n	800e578 <_dtoa_r+0x818>
 800e568:	ee18 1a10 	vmov	r1, s16
 800e56c:	461a      	mov	r2, r3
 800e56e:	4620      	mov	r0, r4
 800e570:	f000 fc10 	bl	800ed94 <__lshift>
 800e574:	ee08 0a10 	vmov	s16, r0
 800e578:	9b05      	ldr	r3, [sp, #20]
 800e57a:	2b00      	cmp	r3, #0
 800e57c:	dd05      	ble.n	800e58a <_dtoa_r+0x82a>
 800e57e:	4631      	mov	r1, r6
 800e580:	461a      	mov	r2, r3
 800e582:	4620      	mov	r0, r4
 800e584:	f000 fc06 	bl	800ed94 <__lshift>
 800e588:	4606      	mov	r6, r0
 800e58a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e58c:	2b00      	cmp	r3, #0
 800e58e:	d06e      	beq.n	800e66e <_dtoa_r+0x90e>
 800e590:	ee18 0a10 	vmov	r0, s16
 800e594:	4631      	mov	r1, r6
 800e596:	f000 fc6d 	bl	800ee74 <__mcmp>
 800e59a:	2800      	cmp	r0, #0
 800e59c:	da67      	bge.n	800e66e <_dtoa_r+0x90e>
 800e59e:	9b00      	ldr	r3, [sp, #0]
 800e5a0:	3b01      	subs	r3, #1
 800e5a2:	ee18 1a10 	vmov	r1, s16
 800e5a6:	9300      	str	r3, [sp, #0]
 800e5a8:	220a      	movs	r2, #10
 800e5aa:	2300      	movs	r3, #0
 800e5ac:	4620      	mov	r0, r4
 800e5ae:	f000 fa41 	bl	800ea34 <__multadd>
 800e5b2:	9b08      	ldr	r3, [sp, #32]
 800e5b4:	ee08 0a10 	vmov	s16, r0
 800e5b8:	2b00      	cmp	r3, #0
 800e5ba:	f000 81b1 	beq.w	800e920 <_dtoa_r+0xbc0>
 800e5be:	2300      	movs	r3, #0
 800e5c0:	4639      	mov	r1, r7
 800e5c2:	220a      	movs	r2, #10
 800e5c4:	4620      	mov	r0, r4
 800e5c6:	f000 fa35 	bl	800ea34 <__multadd>
 800e5ca:	9b02      	ldr	r3, [sp, #8]
 800e5cc:	2b00      	cmp	r3, #0
 800e5ce:	4607      	mov	r7, r0
 800e5d0:	f300 808e 	bgt.w	800e6f0 <_dtoa_r+0x990>
 800e5d4:	9b06      	ldr	r3, [sp, #24]
 800e5d6:	2b02      	cmp	r3, #2
 800e5d8:	dc51      	bgt.n	800e67e <_dtoa_r+0x91e>
 800e5da:	e089      	b.n	800e6f0 <_dtoa_r+0x990>
 800e5dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e5de:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800e5e2:	e74b      	b.n	800e47c <_dtoa_r+0x71c>
 800e5e4:	9b03      	ldr	r3, [sp, #12]
 800e5e6:	1e5e      	subs	r6, r3, #1
 800e5e8:	9b07      	ldr	r3, [sp, #28]
 800e5ea:	42b3      	cmp	r3, r6
 800e5ec:	bfbf      	itttt	lt
 800e5ee:	9b07      	ldrlt	r3, [sp, #28]
 800e5f0:	9607      	strlt	r6, [sp, #28]
 800e5f2:	1af2      	sublt	r2, r6, r3
 800e5f4:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800e5f6:	bfb6      	itet	lt
 800e5f8:	189b      	addlt	r3, r3, r2
 800e5fa:	1b9e      	subge	r6, r3, r6
 800e5fc:	930a      	strlt	r3, [sp, #40]	; 0x28
 800e5fe:	9b03      	ldr	r3, [sp, #12]
 800e600:	bfb8      	it	lt
 800e602:	2600      	movlt	r6, #0
 800e604:	2b00      	cmp	r3, #0
 800e606:	bfb7      	itett	lt
 800e608:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 800e60c:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 800e610:	1a9d      	sublt	r5, r3, r2
 800e612:	2300      	movlt	r3, #0
 800e614:	e734      	b.n	800e480 <_dtoa_r+0x720>
 800e616:	9e07      	ldr	r6, [sp, #28]
 800e618:	9d04      	ldr	r5, [sp, #16]
 800e61a:	9f08      	ldr	r7, [sp, #32]
 800e61c:	e73b      	b.n	800e496 <_dtoa_r+0x736>
 800e61e:	9a07      	ldr	r2, [sp, #28]
 800e620:	e767      	b.n	800e4f2 <_dtoa_r+0x792>
 800e622:	9b06      	ldr	r3, [sp, #24]
 800e624:	2b01      	cmp	r3, #1
 800e626:	dc18      	bgt.n	800e65a <_dtoa_r+0x8fa>
 800e628:	f1ba 0f00 	cmp.w	sl, #0
 800e62c:	d115      	bne.n	800e65a <_dtoa_r+0x8fa>
 800e62e:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800e632:	b993      	cbnz	r3, 800e65a <_dtoa_r+0x8fa>
 800e634:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800e638:	0d1b      	lsrs	r3, r3, #20
 800e63a:	051b      	lsls	r3, r3, #20
 800e63c:	b183      	cbz	r3, 800e660 <_dtoa_r+0x900>
 800e63e:	9b04      	ldr	r3, [sp, #16]
 800e640:	3301      	adds	r3, #1
 800e642:	9304      	str	r3, [sp, #16]
 800e644:	9b05      	ldr	r3, [sp, #20]
 800e646:	3301      	adds	r3, #1
 800e648:	9305      	str	r3, [sp, #20]
 800e64a:	f04f 0801 	mov.w	r8, #1
 800e64e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e650:	2b00      	cmp	r3, #0
 800e652:	f47f af6a 	bne.w	800e52a <_dtoa_r+0x7ca>
 800e656:	2001      	movs	r0, #1
 800e658:	e76f      	b.n	800e53a <_dtoa_r+0x7da>
 800e65a:	f04f 0800 	mov.w	r8, #0
 800e65e:	e7f6      	b.n	800e64e <_dtoa_r+0x8ee>
 800e660:	4698      	mov	r8, r3
 800e662:	e7f4      	b.n	800e64e <_dtoa_r+0x8ee>
 800e664:	f43f af7d 	beq.w	800e562 <_dtoa_r+0x802>
 800e668:	4618      	mov	r0, r3
 800e66a:	301c      	adds	r0, #28
 800e66c:	e772      	b.n	800e554 <_dtoa_r+0x7f4>
 800e66e:	9b03      	ldr	r3, [sp, #12]
 800e670:	2b00      	cmp	r3, #0
 800e672:	dc37      	bgt.n	800e6e4 <_dtoa_r+0x984>
 800e674:	9b06      	ldr	r3, [sp, #24]
 800e676:	2b02      	cmp	r3, #2
 800e678:	dd34      	ble.n	800e6e4 <_dtoa_r+0x984>
 800e67a:	9b03      	ldr	r3, [sp, #12]
 800e67c:	9302      	str	r3, [sp, #8]
 800e67e:	9b02      	ldr	r3, [sp, #8]
 800e680:	b96b      	cbnz	r3, 800e69e <_dtoa_r+0x93e>
 800e682:	4631      	mov	r1, r6
 800e684:	2205      	movs	r2, #5
 800e686:	4620      	mov	r0, r4
 800e688:	f000 f9d4 	bl	800ea34 <__multadd>
 800e68c:	4601      	mov	r1, r0
 800e68e:	4606      	mov	r6, r0
 800e690:	ee18 0a10 	vmov	r0, s16
 800e694:	f000 fbee 	bl	800ee74 <__mcmp>
 800e698:	2800      	cmp	r0, #0
 800e69a:	f73f adbb 	bgt.w	800e214 <_dtoa_r+0x4b4>
 800e69e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e6a0:	9d01      	ldr	r5, [sp, #4]
 800e6a2:	43db      	mvns	r3, r3
 800e6a4:	9300      	str	r3, [sp, #0]
 800e6a6:	f04f 0800 	mov.w	r8, #0
 800e6aa:	4631      	mov	r1, r6
 800e6ac:	4620      	mov	r0, r4
 800e6ae:	f000 f99f 	bl	800e9f0 <_Bfree>
 800e6b2:	2f00      	cmp	r7, #0
 800e6b4:	f43f aea4 	beq.w	800e400 <_dtoa_r+0x6a0>
 800e6b8:	f1b8 0f00 	cmp.w	r8, #0
 800e6bc:	d005      	beq.n	800e6ca <_dtoa_r+0x96a>
 800e6be:	45b8      	cmp	r8, r7
 800e6c0:	d003      	beq.n	800e6ca <_dtoa_r+0x96a>
 800e6c2:	4641      	mov	r1, r8
 800e6c4:	4620      	mov	r0, r4
 800e6c6:	f000 f993 	bl	800e9f0 <_Bfree>
 800e6ca:	4639      	mov	r1, r7
 800e6cc:	4620      	mov	r0, r4
 800e6ce:	f000 f98f 	bl	800e9f0 <_Bfree>
 800e6d2:	e695      	b.n	800e400 <_dtoa_r+0x6a0>
 800e6d4:	2600      	movs	r6, #0
 800e6d6:	4637      	mov	r7, r6
 800e6d8:	e7e1      	b.n	800e69e <_dtoa_r+0x93e>
 800e6da:	9700      	str	r7, [sp, #0]
 800e6dc:	4637      	mov	r7, r6
 800e6de:	e599      	b.n	800e214 <_dtoa_r+0x4b4>
 800e6e0:	40240000 	.word	0x40240000
 800e6e4:	9b08      	ldr	r3, [sp, #32]
 800e6e6:	2b00      	cmp	r3, #0
 800e6e8:	f000 80ca 	beq.w	800e880 <_dtoa_r+0xb20>
 800e6ec:	9b03      	ldr	r3, [sp, #12]
 800e6ee:	9302      	str	r3, [sp, #8]
 800e6f0:	2d00      	cmp	r5, #0
 800e6f2:	dd05      	ble.n	800e700 <_dtoa_r+0x9a0>
 800e6f4:	4639      	mov	r1, r7
 800e6f6:	462a      	mov	r2, r5
 800e6f8:	4620      	mov	r0, r4
 800e6fa:	f000 fb4b 	bl	800ed94 <__lshift>
 800e6fe:	4607      	mov	r7, r0
 800e700:	f1b8 0f00 	cmp.w	r8, #0
 800e704:	d05b      	beq.n	800e7be <_dtoa_r+0xa5e>
 800e706:	6879      	ldr	r1, [r7, #4]
 800e708:	4620      	mov	r0, r4
 800e70a:	f000 f931 	bl	800e970 <_Balloc>
 800e70e:	4605      	mov	r5, r0
 800e710:	b928      	cbnz	r0, 800e71e <_dtoa_r+0x9be>
 800e712:	4b87      	ldr	r3, [pc, #540]	; (800e930 <_dtoa_r+0xbd0>)
 800e714:	4602      	mov	r2, r0
 800e716:	f240 21ea 	movw	r1, #746	; 0x2ea
 800e71a:	f7ff bb3b 	b.w	800dd94 <_dtoa_r+0x34>
 800e71e:	693a      	ldr	r2, [r7, #16]
 800e720:	3202      	adds	r2, #2
 800e722:	0092      	lsls	r2, r2, #2
 800e724:	f107 010c 	add.w	r1, r7, #12
 800e728:	300c      	adds	r0, #12
 800e72a:	f000 f913 	bl	800e954 <memcpy>
 800e72e:	2201      	movs	r2, #1
 800e730:	4629      	mov	r1, r5
 800e732:	4620      	mov	r0, r4
 800e734:	f000 fb2e 	bl	800ed94 <__lshift>
 800e738:	9b01      	ldr	r3, [sp, #4]
 800e73a:	f103 0901 	add.w	r9, r3, #1
 800e73e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800e742:	4413      	add	r3, r2
 800e744:	9305      	str	r3, [sp, #20]
 800e746:	f00a 0301 	and.w	r3, sl, #1
 800e74a:	46b8      	mov	r8, r7
 800e74c:	9304      	str	r3, [sp, #16]
 800e74e:	4607      	mov	r7, r0
 800e750:	4631      	mov	r1, r6
 800e752:	ee18 0a10 	vmov	r0, s16
 800e756:	f7ff fa75 	bl	800dc44 <quorem>
 800e75a:	4641      	mov	r1, r8
 800e75c:	9002      	str	r0, [sp, #8]
 800e75e:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800e762:	ee18 0a10 	vmov	r0, s16
 800e766:	f000 fb85 	bl	800ee74 <__mcmp>
 800e76a:	463a      	mov	r2, r7
 800e76c:	9003      	str	r0, [sp, #12]
 800e76e:	4631      	mov	r1, r6
 800e770:	4620      	mov	r0, r4
 800e772:	f000 fb9b 	bl	800eeac <__mdiff>
 800e776:	68c2      	ldr	r2, [r0, #12]
 800e778:	f109 3bff 	add.w	fp, r9, #4294967295
 800e77c:	4605      	mov	r5, r0
 800e77e:	bb02      	cbnz	r2, 800e7c2 <_dtoa_r+0xa62>
 800e780:	4601      	mov	r1, r0
 800e782:	ee18 0a10 	vmov	r0, s16
 800e786:	f000 fb75 	bl	800ee74 <__mcmp>
 800e78a:	4602      	mov	r2, r0
 800e78c:	4629      	mov	r1, r5
 800e78e:	4620      	mov	r0, r4
 800e790:	9207      	str	r2, [sp, #28]
 800e792:	f000 f92d 	bl	800e9f0 <_Bfree>
 800e796:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800e79a:	ea43 0102 	orr.w	r1, r3, r2
 800e79e:	9b04      	ldr	r3, [sp, #16]
 800e7a0:	430b      	orrs	r3, r1
 800e7a2:	464d      	mov	r5, r9
 800e7a4:	d10f      	bne.n	800e7c6 <_dtoa_r+0xa66>
 800e7a6:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800e7aa:	d02a      	beq.n	800e802 <_dtoa_r+0xaa2>
 800e7ac:	9b03      	ldr	r3, [sp, #12]
 800e7ae:	2b00      	cmp	r3, #0
 800e7b0:	dd02      	ble.n	800e7b8 <_dtoa_r+0xa58>
 800e7b2:	9b02      	ldr	r3, [sp, #8]
 800e7b4:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 800e7b8:	f88b a000 	strb.w	sl, [fp]
 800e7bc:	e775      	b.n	800e6aa <_dtoa_r+0x94a>
 800e7be:	4638      	mov	r0, r7
 800e7c0:	e7ba      	b.n	800e738 <_dtoa_r+0x9d8>
 800e7c2:	2201      	movs	r2, #1
 800e7c4:	e7e2      	b.n	800e78c <_dtoa_r+0xa2c>
 800e7c6:	9b03      	ldr	r3, [sp, #12]
 800e7c8:	2b00      	cmp	r3, #0
 800e7ca:	db04      	blt.n	800e7d6 <_dtoa_r+0xa76>
 800e7cc:	9906      	ldr	r1, [sp, #24]
 800e7ce:	430b      	orrs	r3, r1
 800e7d0:	9904      	ldr	r1, [sp, #16]
 800e7d2:	430b      	orrs	r3, r1
 800e7d4:	d122      	bne.n	800e81c <_dtoa_r+0xabc>
 800e7d6:	2a00      	cmp	r2, #0
 800e7d8:	ddee      	ble.n	800e7b8 <_dtoa_r+0xa58>
 800e7da:	ee18 1a10 	vmov	r1, s16
 800e7de:	2201      	movs	r2, #1
 800e7e0:	4620      	mov	r0, r4
 800e7e2:	f000 fad7 	bl	800ed94 <__lshift>
 800e7e6:	4631      	mov	r1, r6
 800e7e8:	ee08 0a10 	vmov	s16, r0
 800e7ec:	f000 fb42 	bl	800ee74 <__mcmp>
 800e7f0:	2800      	cmp	r0, #0
 800e7f2:	dc03      	bgt.n	800e7fc <_dtoa_r+0xa9c>
 800e7f4:	d1e0      	bne.n	800e7b8 <_dtoa_r+0xa58>
 800e7f6:	f01a 0f01 	tst.w	sl, #1
 800e7fa:	d0dd      	beq.n	800e7b8 <_dtoa_r+0xa58>
 800e7fc:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800e800:	d1d7      	bne.n	800e7b2 <_dtoa_r+0xa52>
 800e802:	2339      	movs	r3, #57	; 0x39
 800e804:	f88b 3000 	strb.w	r3, [fp]
 800e808:	462b      	mov	r3, r5
 800e80a:	461d      	mov	r5, r3
 800e80c:	3b01      	subs	r3, #1
 800e80e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800e812:	2a39      	cmp	r2, #57	; 0x39
 800e814:	d071      	beq.n	800e8fa <_dtoa_r+0xb9a>
 800e816:	3201      	adds	r2, #1
 800e818:	701a      	strb	r2, [r3, #0]
 800e81a:	e746      	b.n	800e6aa <_dtoa_r+0x94a>
 800e81c:	2a00      	cmp	r2, #0
 800e81e:	dd07      	ble.n	800e830 <_dtoa_r+0xad0>
 800e820:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800e824:	d0ed      	beq.n	800e802 <_dtoa_r+0xaa2>
 800e826:	f10a 0301 	add.w	r3, sl, #1
 800e82a:	f88b 3000 	strb.w	r3, [fp]
 800e82e:	e73c      	b.n	800e6aa <_dtoa_r+0x94a>
 800e830:	9b05      	ldr	r3, [sp, #20]
 800e832:	f809 ac01 	strb.w	sl, [r9, #-1]
 800e836:	4599      	cmp	r9, r3
 800e838:	d047      	beq.n	800e8ca <_dtoa_r+0xb6a>
 800e83a:	ee18 1a10 	vmov	r1, s16
 800e83e:	2300      	movs	r3, #0
 800e840:	220a      	movs	r2, #10
 800e842:	4620      	mov	r0, r4
 800e844:	f000 f8f6 	bl	800ea34 <__multadd>
 800e848:	45b8      	cmp	r8, r7
 800e84a:	ee08 0a10 	vmov	s16, r0
 800e84e:	f04f 0300 	mov.w	r3, #0
 800e852:	f04f 020a 	mov.w	r2, #10
 800e856:	4641      	mov	r1, r8
 800e858:	4620      	mov	r0, r4
 800e85a:	d106      	bne.n	800e86a <_dtoa_r+0xb0a>
 800e85c:	f000 f8ea 	bl	800ea34 <__multadd>
 800e860:	4680      	mov	r8, r0
 800e862:	4607      	mov	r7, r0
 800e864:	f109 0901 	add.w	r9, r9, #1
 800e868:	e772      	b.n	800e750 <_dtoa_r+0x9f0>
 800e86a:	f000 f8e3 	bl	800ea34 <__multadd>
 800e86e:	4639      	mov	r1, r7
 800e870:	4680      	mov	r8, r0
 800e872:	2300      	movs	r3, #0
 800e874:	220a      	movs	r2, #10
 800e876:	4620      	mov	r0, r4
 800e878:	f000 f8dc 	bl	800ea34 <__multadd>
 800e87c:	4607      	mov	r7, r0
 800e87e:	e7f1      	b.n	800e864 <_dtoa_r+0xb04>
 800e880:	9b03      	ldr	r3, [sp, #12]
 800e882:	9302      	str	r3, [sp, #8]
 800e884:	9d01      	ldr	r5, [sp, #4]
 800e886:	ee18 0a10 	vmov	r0, s16
 800e88a:	4631      	mov	r1, r6
 800e88c:	f7ff f9da 	bl	800dc44 <quorem>
 800e890:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800e894:	9b01      	ldr	r3, [sp, #4]
 800e896:	f805 ab01 	strb.w	sl, [r5], #1
 800e89a:	1aea      	subs	r2, r5, r3
 800e89c:	9b02      	ldr	r3, [sp, #8]
 800e89e:	4293      	cmp	r3, r2
 800e8a0:	dd09      	ble.n	800e8b6 <_dtoa_r+0xb56>
 800e8a2:	ee18 1a10 	vmov	r1, s16
 800e8a6:	2300      	movs	r3, #0
 800e8a8:	220a      	movs	r2, #10
 800e8aa:	4620      	mov	r0, r4
 800e8ac:	f000 f8c2 	bl	800ea34 <__multadd>
 800e8b0:	ee08 0a10 	vmov	s16, r0
 800e8b4:	e7e7      	b.n	800e886 <_dtoa_r+0xb26>
 800e8b6:	9b02      	ldr	r3, [sp, #8]
 800e8b8:	2b00      	cmp	r3, #0
 800e8ba:	bfc8      	it	gt
 800e8bc:	461d      	movgt	r5, r3
 800e8be:	9b01      	ldr	r3, [sp, #4]
 800e8c0:	bfd8      	it	le
 800e8c2:	2501      	movle	r5, #1
 800e8c4:	441d      	add	r5, r3
 800e8c6:	f04f 0800 	mov.w	r8, #0
 800e8ca:	ee18 1a10 	vmov	r1, s16
 800e8ce:	2201      	movs	r2, #1
 800e8d0:	4620      	mov	r0, r4
 800e8d2:	f000 fa5f 	bl	800ed94 <__lshift>
 800e8d6:	4631      	mov	r1, r6
 800e8d8:	ee08 0a10 	vmov	s16, r0
 800e8dc:	f000 faca 	bl	800ee74 <__mcmp>
 800e8e0:	2800      	cmp	r0, #0
 800e8e2:	dc91      	bgt.n	800e808 <_dtoa_r+0xaa8>
 800e8e4:	d102      	bne.n	800e8ec <_dtoa_r+0xb8c>
 800e8e6:	f01a 0f01 	tst.w	sl, #1
 800e8ea:	d18d      	bne.n	800e808 <_dtoa_r+0xaa8>
 800e8ec:	462b      	mov	r3, r5
 800e8ee:	461d      	mov	r5, r3
 800e8f0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800e8f4:	2a30      	cmp	r2, #48	; 0x30
 800e8f6:	d0fa      	beq.n	800e8ee <_dtoa_r+0xb8e>
 800e8f8:	e6d7      	b.n	800e6aa <_dtoa_r+0x94a>
 800e8fa:	9a01      	ldr	r2, [sp, #4]
 800e8fc:	429a      	cmp	r2, r3
 800e8fe:	d184      	bne.n	800e80a <_dtoa_r+0xaaa>
 800e900:	9b00      	ldr	r3, [sp, #0]
 800e902:	3301      	adds	r3, #1
 800e904:	9300      	str	r3, [sp, #0]
 800e906:	2331      	movs	r3, #49	; 0x31
 800e908:	7013      	strb	r3, [r2, #0]
 800e90a:	e6ce      	b.n	800e6aa <_dtoa_r+0x94a>
 800e90c:	4b09      	ldr	r3, [pc, #36]	; (800e934 <_dtoa_r+0xbd4>)
 800e90e:	f7ff ba95 	b.w	800de3c <_dtoa_r+0xdc>
 800e912:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e914:	2b00      	cmp	r3, #0
 800e916:	f47f aa6e 	bne.w	800ddf6 <_dtoa_r+0x96>
 800e91a:	4b07      	ldr	r3, [pc, #28]	; (800e938 <_dtoa_r+0xbd8>)
 800e91c:	f7ff ba8e 	b.w	800de3c <_dtoa_r+0xdc>
 800e920:	9b02      	ldr	r3, [sp, #8]
 800e922:	2b00      	cmp	r3, #0
 800e924:	dcae      	bgt.n	800e884 <_dtoa_r+0xb24>
 800e926:	9b06      	ldr	r3, [sp, #24]
 800e928:	2b02      	cmp	r3, #2
 800e92a:	f73f aea8 	bgt.w	800e67e <_dtoa_r+0x91e>
 800e92e:	e7a9      	b.n	800e884 <_dtoa_r+0xb24>
 800e930:	080117d3 	.word	0x080117d3
 800e934:	08011730 	.word	0x08011730
 800e938:	08011754 	.word	0x08011754

0800e93c <_localeconv_r>:
 800e93c:	4800      	ldr	r0, [pc, #0]	; (800e940 <_localeconv_r+0x4>)
 800e93e:	4770      	bx	lr
 800e940:	20000290 	.word	0x20000290

0800e944 <malloc>:
 800e944:	4b02      	ldr	r3, [pc, #8]	; (800e950 <malloc+0xc>)
 800e946:	4601      	mov	r1, r0
 800e948:	6818      	ldr	r0, [r3, #0]
 800e94a:	f000 bc17 	b.w	800f17c <_malloc_r>
 800e94e:	bf00      	nop
 800e950:	2000013c 	.word	0x2000013c

0800e954 <memcpy>:
 800e954:	440a      	add	r2, r1
 800e956:	4291      	cmp	r1, r2
 800e958:	f100 33ff 	add.w	r3, r0, #4294967295
 800e95c:	d100      	bne.n	800e960 <memcpy+0xc>
 800e95e:	4770      	bx	lr
 800e960:	b510      	push	{r4, lr}
 800e962:	f811 4b01 	ldrb.w	r4, [r1], #1
 800e966:	f803 4f01 	strb.w	r4, [r3, #1]!
 800e96a:	4291      	cmp	r1, r2
 800e96c:	d1f9      	bne.n	800e962 <memcpy+0xe>
 800e96e:	bd10      	pop	{r4, pc}

0800e970 <_Balloc>:
 800e970:	b570      	push	{r4, r5, r6, lr}
 800e972:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800e974:	4604      	mov	r4, r0
 800e976:	460d      	mov	r5, r1
 800e978:	b976      	cbnz	r6, 800e998 <_Balloc+0x28>
 800e97a:	2010      	movs	r0, #16
 800e97c:	f7ff ffe2 	bl	800e944 <malloc>
 800e980:	4602      	mov	r2, r0
 800e982:	6260      	str	r0, [r4, #36]	; 0x24
 800e984:	b920      	cbnz	r0, 800e990 <_Balloc+0x20>
 800e986:	4b18      	ldr	r3, [pc, #96]	; (800e9e8 <_Balloc+0x78>)
 800e988:	4818      	ldr	r0, [pc, #96]	; (800e9ec <_Balloc+0x7c>)
 800e98a:	2166      	movs	r1, #102	; 0x66
 800e98c:	f000 fdd6 	bl	800f53c <__assert_func>
 800e990:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800e994:	6006      	str	r6, [r0, #0]
 800e996:	60c6      	str	r6, [r0, #12]
 800e998:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800e99a:	68f3      	ldr	r3, [r6, #12]
 800e99c:	b183      	cbz	r3, 800e9c0 <_Balloc+0x50>
 800e99e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e9a0:	68db      	ldr	r3, [r3, #12]
 800e9a2:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800e9a6:	b9b8      	cbnz	r0, 800e9d8 <_Balloc+0x68>
 800e9a8:	2101      	movs	r1, #1
 800e9aa:	fa01 f605 	lsl.w	r6, r1, r5
 800e9ae:	1d72      	adds	r2, r6, #5
 800e9b0:	0092      	lsls	r2, r2, #2
 800e9b2:	4620      	mov	r0, r4
 800e9b4:	f000 fb60 	bl	800f078 <_calloc_r>
 800e9b8:	b160      	cbz	r0, 800e9d4 <_Balloc+0x64>
 800e9ba:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800e9be:	e00e      	b.n	800e9de <_Balloc+0x6e>
 800e9c0:	2221      	movs	r2, #33	; 0x21
 800e9c2:	2104      	movs	r1, #4
 800e9c4:	4620      	mov	r0, r4
 800e9c6:	f000 fb57 	bl	800f078 <_calloc_r>
 800e9ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e9cc:	60f0      	str	r0, [r6, #12]
 800e9ce:	68db      	ldr	r3, [r3, #12]
 800e9d0:	2b00      	cmp	r3, #0
 800e9d2:	d1e4      	bne.n	800e99e <_Balloc+0x2e>
 800e9d4:	2000      	movs	r0, #0
 800e9d6:	bd70      	pop	{r4, r5, r6, pc}
 800e9d8:	6802      	ldr	r2, [r0, #0]
 800e9da:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800e9de:	2300      	movs	r3, #0
 800e9e0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800e9e4:	e7f7      	b.n	800e9d6 <_Balloc+0x66>
 800e9e6:	bf00      	nop
 800e9e8:	08011761 	.word	0x08011761
 800e9ec:	080117e4 	.word	0x080117e4

0800e9f0 <_Bfree>:
 800e9f0:	b570      	push	{r4, r5, r6, lr}
 800e9f2:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800e9f4:	4605      	mov	r5, r0
 800e9f6:	460c      	mov	r4, r1
 800e9f8:	b976      	cbnz	r6, 800ea18 <_Bfree+0x28>
 800e9fa:	2010      	movs	r0, #16
 800e9fc:	f7ff ffa2 	bl	800e944 <malloc>
 800ea00:	4602      	mov	r2, r0
 800ea02:	6268      	str	r0, [r5, #36]	; 0x24
 800ea04:	b920      	cbnz	r0, 800ea10 <_Bfree+0x20>
 800ea06:	4b09      	ldr	r3, [pc, #36]	; (800ea2c <_Bfree+0x3c>)
 800ea08:	4809      	ldr	r0, [pc, #36]	; (800ea30 <_Bfree+0x40>)
 800ea0a:	218a      	movs	r1, #138	; 0x8a
 800ea0c:	f000 fd96 	bl	800f53c <__assert_func>
 800ea10:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800ea14:	6006      	str	r6, [r0, #0]
 800ea16:	60c6      	str	r6, [r0, #12]
 800ea18:	b13c      	cbz	r4, 800ea2a <_Bfree+0x3a>
 800ea1a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800ea1c:	6862      	ldr	r2, [r4, #4]
 800ea1e:	68db      	ldr	r3, [r3, #12]
 800ea20:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800ea24:	6021      	str	r1, [r4, #0]
 800ea26:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800ea2a:	bd70      	pop	{r4, r5, r6, pc}
 800ea2c:	08011761 	.word	0x08011761
 800ea30:	080117e4 	.word	0x080117e4

0800ea34 <__multadd>:
 800ea34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ea38:	690d      	ldr	r5, [r1, #16]
 800ea3a:	4607      	mov	r7, r0
 800ea3c:	460c      	mov	r4, r1
 800ea3e:	461e      	mov	r6, r3
 800ea40:	f101 0c14 	add.w	ip, r1, #20
 800ea44:	2000      	movs	r0, #0
 800ea46:	f8dc 3000 	ldr.w	r3, [ip]
 800ea4a:	b299      	uxth	r1, r3
 800ea4c:	fb02 6101 	mla	r1, r2, r1, r6
 800ea50:	0c1e      	lsrs	r6, r3, #16
 800ea52:	0c0b      	lsrs	r3, r1, #16
 800ea54:	fb02 3306 	mla	r3, r2, r6, r3
 800ea58:	b289      	uxth	r1, r1
 800ea5a:	3001      	adds	r0, #1
 800ea5c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800ea60:	4285      	cmp	r5, r0
 800ea62:	f84c 1b04 	str.w	r1, [ip], #4
 800ea66:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800ea6a:	dcec      	bgt.n	800ea46 <__multadd+0x12>
 800ea6c:	b30e      	cbz	r6, 800eab2 <__multadd+0x7e>
 800ea6e:	68a3      	ldr	r3, [r4, #8]
 800ea70:	42ab      	cmp	r3, r5
 800ea72:	dc19      	bgt.n	800eaa8 <__multadd+0x74>
 800ea74:	6861      	ldr	r1, [r4, #4]
 800ea76:	4638      	mov	r0, r7
 800ea78:	3101      	adds	r1, #1
 800ea7a:	f7ff ff79 	bl	800e970 <_Balloc>
 800ea7e:	4680      	mov	r8, r0
 800ea80:	b928      	cbnz	r0, 800ea8e <__multadd+0x5a>
 800ea82:	4602      	mov	r2, r0
 800ea84:	4b0c      	ldr	r3, [pc, #48]	; (800eab8 <__multadd+0x84>)
 800ea86:	480d      	ldr	r0, [pc, #52]	; (800eabc <__multadd+0x88>)
 800ea88:	21b5      	movs	r1, #181	; 0xb5
 800ea8a:	f000 fd57 	bl	800f53c <__assert_func>
 800ea8e:	6922      	ldr	r2, [r4, #16]
 800ea90:	3202      	adds	r2, #2
 800ea92:	f104 010c 	add.w	r1, r4, #12
 800ea96:	0092      	lsls	r2, r2, #2
 800ea98:	300c      	adds	r0, #12
 800ea9a:	f7ff ff5b 	bl	800e954 <memcpy>
 800ea9e:	4621      	mov	r1, r4
 800eaa0:	4638      	mov	r0, r7
 800eaa2:	f7ff ffa5 	bl	800e9f0 <_Bfree>
 800eaa6:	4644      	mov	r4, r8
 800eaa8:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800eaac:	3501      	adds	r5, #1
 800eaae:	615e      	str	r6, [r3, #20]
 800eab0:	6125      	str	r5, [r4, #16]
 800eab2:	4620      	mov	r0, r4
 800eab4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eab8:	080117d3 	.word	0x080117d3
 800eabc:	080117e4 	.word	0x080117e4

0800eac0 <__hi0bits>:
 800eac0:	0c03      	lsrs	r3, r0, #16
 800eac2:	041b      	lsls	r3, r3, #16
 800eac4:	b9d3      	cbnz	r3, 800eafc <__hi0bits+0x3c>
 800eac6:	0400      	lsls	r0, r0, #16
 800eac8:	2310      	movs	r3, #16
 800eaca:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800eace:	bf04      	itt	eq
 800ead0:	0200      	lsleq	r0, r0, #8
 800ead2:	3308      	addeq	r3, #8
 800ead4:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800ead8:	bf04      	itt	eq
 800eada:	0100      	lsleq	r0, r0, #4
 800eadc:	3304      	addeq	r3, #4
 800eade:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800eae2:	bf04      	itt	eq
 800eae4:	0080      	lsleq	r0, r0, #2
 800eae6:	3302      	addeq	r3, #2
 800eae8:	2800      	cmp	r0, #0
 800eaea:	db05      	blt.n	800eaf8 <__hi0bits+0x38>
 800eaec:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800eaf0:	f103 0301 	add.w	r3, r3, #1
 800eaf4:	bf08      	it	eq
 800eaf6:	2320      	moveq	r3, #32
 800eaf8:	4618      	mov	r0, r3
 800eafa:	4770      	bx	lr
 800eafc:	2300      	movs	r3, #0
 800eafe:	e7e4      	b.n	800eaca <__hi0bits+0xa>

0800eb00 <__lo0bits>:
 800eb00:	6803      	ldr	r3, [r0, #0]
 800eb02:	f013 0207 	ands.w	r2, r3, #7
 800eb06:	4601      	mov	r1, r0
 800eb08:	d00b      	beq.n	800eb22 <__lo0bits+0x22>
 800eb0a:	07da      	lsls	r2, r3, #31
 800eb0c:	d423      	bmi.n	800eb56 <__lo0bits+0x56>
 800eb0e:	0798      	lsls	r0, r3, #30
 800eb10:	bf49      	itett	mi
 800eb12:	085b      	lsrmi	r3, r3, #1
 800eb14:	089b      	lsrpl	r3, r3, #2
 800eb16:	2001      	movmi	r0, #1
 800eb18:	600b      	strmi	r3, [r1, #0]
 800eb1a:	bf5c      	itt	pl
 800eb1c:	600b      	strpl	r3, [r1, #0]
 800eb1e:	2002      	movpl	r0, #2
 800eb20:	4770      	bx	lr
 800eb22:	b298      	uxth	r0, r3
 800eb24:	b9a8      	cbnz	r0, 800eb52 <__lo0bits+0x52>
 800eb26:	0c1b      	lsrs	r3, r3, #16
 800eb28:	2010      	movs	r0, #16
 800eb2a:	b2da      	uxtb	r2, r3
 800eb2c:	b90a      	cbnz	r2, 800eb32 <__lo0bits+0x32>
 800eb2e:	3008      	adds	r0, #8
 800eb30:	0a1b      	lsrs	r3, r3, #8
 800eb32:	071a      	lsls	r2, r3, #28
 800eb34:	bf04      	itt	eq
 800eb36:	091b      	lsreq	r3, r3, #4
 800eb38:	3004      	addeq	r0, #4
 800eb3a:	079a      	lsls	r2, r3, #30
 800eb3c:	bf04      	itt	eq
 800eb3e:	089b      	lsreq	r3, r3, #2
 800eb40:	3002      	addeq	r0, #2
 800eb42:	07da      	lsls	r2, r3, #31
 800eb44:	d403      	bmi.n	800eb4e <__lo0bits+0x4e>
 800eb46:	085b      	lsrs	r3, r3, #1
 800eb48:	f100 0001 	add.w	r0, r0, #1
 800eb4c:	d005      	beq.n	800eb5a <__lo0bits+0x5a>
 800eb4e:	600b      	str	r3, [r1, #0]
 800eb50:	4770      	bx	lr
 800eb52:	4610      	mov	r0, r2
 800eb54:	e7e9      	b.n	800eb2a <__lo0bits+0x2a>
 800eb56:	2000      	movs	r0, #0
 800eb58:	4770      	bx	lr
 800eb5a:	2020      	movs	r0, #32
 800eb5c:	4770      	bx	lr
	...

0800eb60 <__i2b>:
 800eb60:	b510      	push	{r4, lr}
 800eb62:	460c      	mov	r4, r1
 800eb64:	2101      	movs	r1, #1
 800eb66:	f7ff ff03 	bl	800e970 <_Balloc>
 800eb6a:	4602      	mov	r2, r0
 800eb6c:	b928      	cbnz	r0, 800eb7a <__i2b+0x1a>
 800eb6e:	4b05      	ldr	r3, [pc, #20]	; (800eb84 <__i2b+0x24>)
 800eb70:	4805      	ldr	r0, [pc, #20]	; (800eb88 <__i2b+0x28>)
 800eb72:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800eb76:	f000 fce1 	bl	800f53c <__assert_func>
 800eb7a:	2301      	movs	r3, #1
 800eb7c:	6144      	str	r4, [r0, #20]
 800eb7e:	6103      	str	r3, [r0, #16]
 800eb80:	bd10      	pop	{r4, pc}
 800eb82:	bf00      	nop
 800eb84:	080117d3 	.word	0x080117d3
 800eb88:	080117e4 	.word	0x080117e4

0800eb8c <__multiply>:
 800eb8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eb90:	4691      	mov	r9, r2
 800eb92:	690a      	ldr	r2, [r1, #16]
 800eb94:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800eb98:	429a      	cmp	r2, r3
 800eb9a:	bfb8      	it	lt
 800eb9c:	460b      	movlt	r3, r1
 800eb9e:	460c      	mov	r4, r1
 800eba0:	bfbc      	itt	lt
 800eba2:	464c      	movlt	r4, r9
 800eba4:	4699      	movlt	r9, r3
 800eba6:	6927      	ldr	r7, [r4, #16]
 800eba8:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800ebac:	68a3      	ldr	r3, [r4, #8]
 800ebae:	6861      	ldr	r1, [r4, #4]
 800ebb0:	eb07 060a 	add.w	r6, r7, sl
 800ebb4:	42b3      	cmp	r3, r6
 800ebb6:	b085      	sub	sp, #20
 800ebb8:	bfb8      	it	lt
 800ebba:	3101      	addlt	r1, #1
 800ebbc:	f7ff fed8 	bl	800e970 <_Balloc>
 800ebc0:	b930      	cbnz	r0, 800ebd0 <__multiply+0x44>
 800ebc2:	4602      	mov	r2, r0
 800ebc4:	4b44      	ldr	r3, [pc, #272]	; (800ecd8 <__multiply+0x14c>)
 800ebc6:	4845      	ldr	r0, [pc, #276]	; (800ecdc <__multiply+0x150>)
 800ebc8:	f240 115d 	movw	r1, #349	; 0x15d
 800ebcc:	f000 fcb6 	bl	800f53c <__assert_func>
 800ebd0:	f100 0514 	add.w	r5, r0, #20
 800ebd4:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800ebd8:	462b      	mov	r3, r5
 800ebda:	2200      	movs	r2, #0
 800ebdc:	4543      	cmp	r3, r8
 800ebde:	d321      	bcc.n	800ec24 <__multiply+0x98>
 800ebe0:	f104 0314 	add.w	r3, r4, #20
 800ebe4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800ebe8:	f109 0314 	add.w	r3, r9, #20
 800ebec:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800ebf0:	9202      	str	r2, [sp, #8]
 800ebf2:	1b3a      	subs	r2, r7, r4
 800ebf4:	3a15      	subs	r2, #21
 800ebf6:	f022 0203 	bic.w	r2, r2, #3
 800ebfa:	3204      	adds	r2, #4
 800ebfc:	f104 0115 	add.w	r1, r4, #21
 800ec00:	428f      	cmp	r7, r1
 800ec02:	bf38      	it	cc
 800ec04:	2204      	movcc	r2, #4
 800ec06:	9201      	str	r2, [sp, #4]
 800ec08:	9a02      	ldr	r2, [sp, #8]
 800ec0a:	9303      	str	r3, [sp, #12]
 800ec0c:	429a      	cmp	r2, r3
 800ec0e:	d80c      	bhi.n	800ec2a <__multiply+0x9e>
 800ec10:	2e00      	cmp	r6, #0
 800ec12:	dd03      	ble.n	800ec1c <__multiply+0x90>
 800ec14:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800ec18:	2b00      	cmp	r3, #0
 800ec1a:	d05a      	beq.n	800ecd2 <__multiply+0x146>
 800ec1c:	6106      	str	r6, [r0, #16]
 800ec1e:	b005      	add	sp, #20
 800ec20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec24:	f843 2b04 	str.w	r2, [r3], #4
 800ec28:	e7d8      	b.n	800ebdc <__multiply+0x50>
 800ec2a:	f8b3 a000 	ldrh.w	sl, [r3]
 800ec2e:	f1ba 0f00 	cmp.w	sl, #0
 800ec32:	d024      	beq.n	800ec7e <__multiply+0xf2>
 800ec34:	f104 0e14 	add.w	lr, r4, #20
 800ec38:	46a9      	mov	r9, r5
 800ec3a:	f04f 0c00 	mov.w	ip, #0
 800ec3e:	f85e 2b04 	ldr.w	r2, [lr], #4
 800ec42:	f8d9 1000 	ldr.w	r1, [r9]
 800ec46:	fa1f fb82 	uxth.w	fp, r2
 800ec4a:	b289      	uxth	r1, r1
 800ec4c:	fb0a 110b 	mla	r1, sl, fp, r1
 800ec50:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800ec54:	f8d9 2000 	ldr.w	r2, [r9]
 800ec58:	4461      	add	r1, ip
 800ec5a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800ec5e:	fb0a c20b 	mla	r2, sl, fp, ip
 800ec62:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800ec66:	b289      	uxth	r1, r1
 800ec68:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800ec6c:	4577      	cmp	r7, lr
 800ec6e:	f849 1b04 	str.w	r1, [r9], #4
 800ec72:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800ec76:	d8e2      	bhi.n	800ec3e <__multiply+0xb2>
 800ec78:	9a01      	ldr	r2, [sp, #4]
 800ec7a:	f845 c002 	str.w	ip, [r5, r2]
 800ec7e:	9a03      	ldr	r2, [sp, #12]
 800ec80:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800ec84:	3304      	adds	r3, #4
 800ec86:	f1b9 0f00 	cmp.w	r9, #0
 800ec8a:	d020      	beq.n	800ecce <__multiply+0x142>
 800ec8c:	6829      	ldr	r1, [r5, #0]
 800ec8e:	f104 0c14 	add.w	ip, r4, #20
 800ec92:	46ae      	mov	lr, r5
 800ec94:	f04f 0a00 	mov.w	sl, #0
 800ec98:	f8bc b000 	ldrh.w	fp, [ip]
 800ec9c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800eca0:	fb09 220b 	mla	r2, r9, fp, r2
 800eca4:	4492      	add	sl, r2
 800eca6:	b289      	uxth	r1, r1
 800eca8:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800ecac:	f84e 1b04 	str.w	r1, [lr], #4
 800ecb0:	f85c 2b04 	ldr.w	r2, [ip], #4
 800ecb4:	f8be 1000 	ldrh.w	r1, [lr]
 800ecb8:	0c12      	lsrs	r2, r2, #16
 800ecba:	fb09 1102 	mla	r1, r9, r2, r1
 800ecbe:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800ecc2:	4567      	cmp	r7, ip
 800ecc4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800ecc8:	d8e6      	bhi.n	800ec98 <__multiply+0x10c>
 800ecca:	9a01      	ldr	r2, [sp, #4]
 800eccc:	50a9      	str	r1, [r5, r2]
 800ecce:	3504      	adds	r5, #4
 800ecd0:	e79a      	b.n	800ec08 <__multiply+0x7c>
 800ecd2:	3e01      	subs	r6, #1
 800ecd4:	e79c      	b.n	800ec10 <__multiply+0x84>
 800ecd6:	bf00      	nop
 800ecd8:	080117d3 	.word	0x080117d3
 800ecdc:	080117e4 	.word	0x080117e4

0800ece0 <__pow5mult>:
 800ece0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ece4:	4615      	mov	r5, r2
 800ece6:	f012 0203 	ands.w	r2, r2, #3
 800ecea:	4606      	mov	r6, r0
 800ecec:	460f      	mov	r7, r1
 800ecee:	d007      	beq.n	800ed00 <__pow5mult+0x20>
 800ecf0:	4c25      	ldr	r4, [pc, #148]	; (800ed88 <__pow5mult+0xa8>)
 800ecf2:	3a01      	subs	r2, #1
 800ecf4:	2300      	movs	r3, #0
 800ecf6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800ecfa:	f7ff fe9b 	bl	800ea34 <__multadd>
 800ecfe:	4607      	mov	r7, r0
 800ed00:	10ad      	asrs	r5, r5, #2
 800ed02:	d03d      	beq.n	800ed80 <__pow5mult+0xa0>
 800ed04:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800ed06:	b97c      	cbnz	r4, 800ed28 <__pow5mult+0x48>
 800ed08:	2010      	movs	r0, #16
 800ed0a:	f7ff fe1b 	bl	800e944 <malloc>
 800ed0e:	4602      	mov	r2, r0
 800ed10:	6270      	str	r0, [r6, #36]	; 0x24
 800ed12:	b928      	cbnz	r0, 800ed20 <__pow5mult+0x40>
 800ed14:	4b1d      	ldr	r3, [pc, #116]	; (800ed8c <__pow5mult+0xac>)
 800ed16:	481e      	ldr	r0, [pc, #120]	; (800ed90 <__pow5mult+0xb0>)
 800ed18:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800ed1c:	f000 fc0e 	bl	800f53c <__assert_func>
 800ed20:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800ed24:	6004      	str	r4, [r0, #0]
 800ed26:	60c4      	str	r4, [r0, #12]
 800ed28:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800ed2c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800ed30:	b94c      	cbnz	r4, 800ed46 <__pow5mult+0x66>
 800ed32:	f240 2171 	movw	r1, #625	; 0x271
 800ed36:	4630      	mov	r0, r6
 800ed38:	f7ff ff12 	bl	800eb60 <__i2b>
 800ed3c:	2300      	movs	r3, #0
 800ed3e:	f8c8 0008 	str.w	r0, [r8, #8]
 800ed42:	4604      	mov	r4, r0
 800ed44:	6003      	str	r3, [r0, #0]
 800ed46:	f04f 0900 	mov.w	r9, #0
 800ed4a:	07eb      	lsls	r3, r5, #31
 800ed4c:	d50a      	bpl.n	800ed64 <__pow5mult+0x84>
 800ed4e:	4639      	mov	r1, r7
 800ed50:	4622      	mov	r2, r4
 800ed52:	4630      	mov	r0, r6
 800ed54:	f7ff ff1a 	bl	800eb8c <__multiply>
 800ed58:	4639      	mov	r1, r7
 800ed5a:	4680      	mov	r8, r0
 800ed5c:	4630      	mov	r0, r6
 800ed5e:	f7ff fe47 	bl	800e9f0 <_Bfree>
 800ed62:	4647      	mov	r7, r8
 800ed64:	106d      	asrs	r5, r5, #1
 800ed66:	d00b      	beq.n	800ed80 <__pow5mult+0xa0>
 800ed68:	6820      	ldr	r0, [r4, #0]
 800ed6a:	b938      	cbnz	r0, 800ed7c <__pow5mult+0x9c>
 800ed6c:	4622      	mov	r2, r4
 800ed6e:	4621      	mov	r1, r4
 800ed70:	4630      	mov	r0, r6
 800ed72:	f7ff ff0b 	bl	800eb8c <__multiply>
 800ed76:	6020      	str	r0, [r4, #0]
 800ed78:	f8c0 9000 	str.w	r9, [r0]
 800ed7c:	4604      	mov	r4, r0
 800ed7e:	e7e4      	b.n	800ed4a <__pow5mult+0x6a>
 800ed80:	4638      	mov	r0, r7
 800ed82:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ed86:	bf00      	nop
 800ed88:	08011930 	.word	0x08011930
 800ed8c:	08011761 	.word	0x08011761
 800ed90:	080117e4 	.word	0x080117e4

0800ed94 <__lshift>:
 800ed94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ed98:	460c      	mov	r4, r1
 800ed9a:	6849      	ldr	r1, [r1, #4]
 800ed9c:	6923      	ldr	r3, [r4, #16]
 800ed9e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800eda2:	68a3      	ldr	r3, [r4, #8]
 800eda4:	4607      	mov	r7, r0
 800eda6:	4691      	mov	r9, r2
 800eda8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800edac:	f108 0601 	add.w	r6, r8, #1
 800edb0:	42b3      	cmp	r3, r6
 800edb2:	db0b      	blt.n	800edcc <__lshift+0x38>
 800edb4:	4638      	mov	r0, r7
 800edb6:	f7ff fddb 	bl	800e970 <_Balloc>
 800edba:	4605      	mov	r5, r0
 800edbc:	b948      	cbnz	r0, 800edd2 <__lshift+0x3e>
 800edbe:	4602      	mov	r2, r0
 800edc0:	4b2a      	ldr	r3, [pc, #168]	; (800ee6c <__lshift+0xd8>)
 800edc2:	482b      	ldr	r0, [pc, #172]	; (800ee70 <__lshift+0xdc>)
 800edc4:	f240 11d9 	movw	r1, #473	; 0x1d9
 800edc8:	f000 fbb8 	bl	800f53c <__assert_func>
 800edcc:	3101      	adds	r1, #1
 800edce:	005b      	lsls	r3, r3, #1
 800edd0:	e7ee      	b.n	800edb0 <__lshift+0x1c>
 800edd2:	2300      	movs	r3, #0
 800edd4:	f100 0114 	add.w	r1, r0, #20
 800edd8:	f100 0210 	add.w	r2, r0, #16
 800eddc:	4618      	mov	r0, r3
 800edde:	4553      	cmp	r3, sl
 800ede0:	db37      	blt.n	800ee52 <__lshift+0xbe>
 800ede2:	6920      	ldr	r0, [r4, #16]
 800ede4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800ede8:	f104 0314 	add.w	r3, r4, #20
 800edec:	f019 091f 	ands.w	r9, r9, #31
 800edf0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800edf4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800edf8:	d02f      	beq.n	800ee5a <__lshift+0xc6>
 800edfa:	f1c9 0e20 	rsb	lr, r9, #32
 800edfe:	468a      	mov	sl, r1
 800ee00:	f04f 0c00 	mov.w	ip, #0
 800ee04:	681a      	ldr	r2, [r3, #0]
 800ee06:	fa02 f209 	lsl.w	r2, r2, r9
 800ee0a:	ea42 020c 	orr.w	r2, r2, ip
 800ee0e:	f84a 2b04 	str.w	r2, [sl], #4
 800ee12:	f853 2b04 	ldr.w	r2, [r3], #4
 800ee16:	4298      	cmp	r0, r3
 800ee18:	fa22 fc0e 	lsr.w	ip, r2, lr
 800ee1c:	d8f2      	bhi.n	800ee04 <__lshift+0x70>
 800ee1e:	1b03      	subs	r3, r0, r4
 800ee20:	3b15      	subs	r3, #21
 800ee22:	f023 0303 	bic.w	r3, r3, #3
 800ee26:	3304      	adds	r3, #4
 800ee28:	f104 0215 	add.w	r2, r4, #21
 800ee2c:	4290      	cmp	r0, r2
 800ee2e:	bf38      	it	cc
 800ee30:	2304      	movcc	r3, #4
 800ee32:	f841 c003 	str.w	ip, [r1, r3]
 800ee36:	f1bc 0f00 	cmp.w	ip, #0
 800ee3a:	d001      	beq.n	800ee40 <__lshift+0xac>
 800ee3c:	f108 0602 	add.w	r6, r8, #2
 800ee40:	3e01      	subs	r6, #1
 800ee42:	4638      	mov	r0, r7
 800ee44:	612e      	str	r6, [r5, #16]
 800ee46:	4621      	mov	r1, r4
 800ee48:	f7ff fdd2 	bl	800e9f0 <_Bfree>
 800ee4c:	4628      	mov	r0, r5
 800ee4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ee52:	f842 0f04 	str.w	r0, [r2, #4]!
 800ee56:	3301      	adds	r3, #1
 800ee58:	e7c1      	b.n	800edde <__lshift+0x4a>
 800ee5a:	3904      	subs	r1, #4
 800ee5c:	f853 2b04 	ldr.w	r2, [r3], #4
 800ee60:	f841 2f04 	str.w	r2, [r1, #4]!
 800ee64:	4298      	cmp	r0, r3
 800ee66:	d8f9      	bhi.n	800ee5c <__lshift+0xc8>
 800ee68:	e7ea      	b.n	800ee40 <__lshift+0xac>
 800ee6a:	bf00      	nop
 800ee6c:	080117d3 	.word	0x080117d3
 800ee70:	080117e4 	.word	0x080117e4

0800ee74 <__mcmp>:
 800ee74:	b530      	push	{r4, r5, lr}
 800ee76:	6902      	ldr	r2, [r0, #16]
 800ee78:	690c      	ldr	r4, [r1, #16]
 800ee7a:	1b12      	subs	r2, r2, r4
 800ee7c:	d10e      	bne.n	800ee9c <__mcmp+0x28>
 800ee7e:	f100 0314 	add.w	r3, r0, #20
 800ee82:	3114      	adds	r1, #20
 800ee84:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800ee88:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800ee8c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800ee90:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800ee94:	42a5      	cmp	r5, r4
 800ee96:	d003      	beq.n	800eea0 <__mcmp+0x2c>
 800ee98:	d305      	bcc.n	800eea6 <__mcmp+0x32>
 800ee9a:	2201      	movs	r2, #1
 800ee9c:	4610      	mov	r0, r2
 800ee9e:	bd30      	pop	{r4, r5, pc}
 800eea0:	4283      	cmp	r3, r0
 800eea2:	d3f3      	bcc.n	800ee8c <__mcmp+0x18>
 800eea4:	e7fa      	b.n	800ee9c <__mcmp+0x28>
 800eea6:	f04f 32ff 	mov.w	r2, #4294967295
 800eeaa:	e7f7      	b.n	800ee9c <__mcmp+0x28>

0800eeac <__mdiff>:
 800eeac:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eeb0:	460c      	mov	r4, r1
 800eeb2:	4606      	mov	r6, r0
 800eeb4:	4611      	mov	r1, r2
 800eeb6:	4620      	mov	r0, r4
 800eeb8:	4690      	mov	r8, r2
 800eeba:	f7ff ffdb 	bl	800ee74 <__mcmp>
 800eebe:	1e05      	subs	r5, r0, #0
 800eec0:	d110      	bne.n	800eee4 <__mdiff+0x38>
 800eec2:	4629      	mov	r1, r5
 800eec4:	4630      	mov	r0, r6
 800eec6:	f7ff fd53 	bl	800e970 <_Balloc>
 800eeca:	b930      	cbnz	r0, 800eeda <__mdiff+0x2e>
 800eecc:	4b3a      	ldr	r3, [pc, #232]	; (800efb8 <__mdiff+0x10c>)
 800eece:	4602      	mov	r2, r0
 800eed0:	f240 2132 	movw	r1, #562	; 0x232
 800eed4:	4839      	ldr	r0, [pc, #228]	; (800efbc <__mdiff+0x110>)
 800eed6:	f000 fb31 	bl	800f53c <__assert_func>
 800eeda:	2301      	movs	r3, #1
 800eedc:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800eee0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eee4:	bfa4      	itt	ge
 800eee6:	4643      	movge	r3, r8
 800eee8:	46a0      	movge	r8, r4
 800eeea:	4630      	mov	r0, r6
 800eeec:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800eef0:	bfa6      	itte	ge
 800eef2:	461c      	movge	r4, r3
 800eef4:	2500      	movge	r5, #0
 800eef6:	2501      	movlt	r5, #1
 800eef8:	f7ff fd3a 	bl	800e970 <_Balloc>
 800eefc:	b920      	cbnz	r0, 800ef08 <__mdiff+0x5c>
 800eefe:	4b2e      	ldr	r3, [pc, #184]	; (800efb8 <__mdiff+0x10c>)
 800ef00:	4602      	mov	r2, r0
 800ef02:	f44f 7110 	mov.w	r1, #576	; 0x240
 800ef06:	e7e5      	b.n	800eed4 <__mdiff+0x28>
 800ef08:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800ef0c:	6926      	ldr	r6, [r4, #16]
 800ef0e:	60c5      	str	r5, [r0, #12]
 800ef10:	f104 0914 	add.w	r9, r4, #20
 800ef14:	f108 0514 	add.w	r5, r8, #20
 800ef18:	f100 0e14 	add.w	lr, r0, #20
 800ef1c:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800ef20:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800ef24:	f108 0210 	add.w	r2, r8, #16
 800ef28:	46f2      	mov	sl, lr
 800ef2a:	2100      	movs	r1, #0
 800ef2c:	f859 3b04 	ldr.w	r3, [r9], #4
 800ef30:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800ef34:	fa1f f883 	uxth.w	r8, r3
 800ef38:	fa11 f18b 	uxtah	r1, r1, fp
 800ef3c:	0c1b      	lsrs	r3, r3, #16
 800ef3e:	eba1 0808 	sub.w	r8, r1, r8
 800ef42:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800ef46:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800ef4a:	fa1f f888 	uxth.w	r8, r8
 800ef4e:	1419      	asrs	r1, r3, #16
 800ef50:	454e      	cmp	r6, r9
 800ef52:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800ef56:	f84a 3b04 	str.w	r3, [sl], #4
 800ef5a:	d8e7      	bhi.n	800ef2c <__mdiff+0x80>
 800ef5c:	1b33      	subs	r3, r6, r4
 800ef5e:	3b15      	subs	r3, #21
 800ef60:	f023 0303 	bic.w	r3, r3, #3
 800ef64:	3304      	adds	r3, #4
 800ef66:	3415      	adds	r4, #21
 800ef68:	42a6      	cmp	r6, r4
 800ef6a:	bf38      	it	cc
 800ef6c:	2304      	movcc	r3, #4
 800ef6e:	441d      	add	r5, r3
 800ef70:	4473      	add	r3, lr
 800ef72:	469e      	mov	lr, r3
 800ef74:	462e      	mov	r6, r5
 800ef76:	4566      	cmp	r6, ip
 800ef78:	d30e      	bcc.n	800ef98 <__mdiff+0xec>
 800ef7a:	f10c 0203 	add.w	r2, ip, #3
 800ef7e:	1b52      	subs	r2, r2, r5
 800ef80:	f022 0203 	bic.w	r2, r2, #3
 800ef84:	3d03      	subs	r5, #3
 800ef86:	45ac      	cmp	ip, r5
 800ef88:	bf38      	it	cc
 800ef8a:	2200      	movcc	r2, #0
 800ef8c:	441a      	add	r2, r3
 800ef8e:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800ef92:	b17b      	cbz	r3, 800efb4 <__mdiff+0x108>
 800ef94:	6107      	str	r7, [r0, #16]
 800ef96:	e7a3      	b.n	800eee0 <__mdiff+0x34>
 800ef98:	f856 8b04 	ldr.w	r8, [r6], #4
 800ef9c:	fa11 f288 	uxtah	r2, r1, r8
 800efa0:	1414      	asrs	r4, r2, #16
 800efa2:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800efa6:	b292      	uxth	r2, r2
 800efa8:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800efac:	f84e 2b04 	str.w	r2, [lr], #4
 800efb0:	1421      	asrs	r1, r4, #16
 800efb2:	e7e0      	b.n	800ef76 <__mdiff+0xca>
 800efb4:	3f01      	subs	r7, #1
 800efb6:	e7ea      	b.n	800ef8e <__mdiff+0xe2>
 800efb8:	080117d3 	.word	0x080117d3
 800efbc:	080117e4 	.word	0x080117e4

0800efc0 <__d2b>:
 800efc0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800efc4:	4689      	mov	r9, r1
 800efc6:	2101      	movs	r1, #1
 800efc8:	ec57 6b10 	vmov	r6, r7, d0
 800efcc:	4690      	mov	r8, r2
 800efce:	f7ff fccf 	bl	800e970 <_Balloc>
 800efd2:	4604      	mov	r4, r0
 800efd4:	b930      	cbnz	r0, 800efe4 <__d2b+0x24>
 800efd6:	4602      	mov	r2, r0
 800efd8:	4b25      	ldr	r3, [pc, #148]	; (800f070 <__d2b+0xb0>)
 800efda:	4826      	ldr	r0, [pc, #152]	; (800f074 <__d2b+0xb4>)
 800efdc:	f240 310a 	movw	r1, #778	; 0x30a
 800efe0:	f000 faac 	bl	800f53c <__assert_func>
 800efe4:	f3c7 550a 	ubfx	r5, r7, #20, #11
 800efe8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800efec:	bb35      	cbnz	r5, 800f03c <__d2b+0x7c>
 800efee:	2e00      	cmp	r6, #0
 800eff0:	9301      	str	r3, [sp, #4]
 800eff2:	d028      	beq.n	800f046 <__d2b+0x86>
 800eff4:	4668      	mov	r0, sp
 800eff6:	9600      	str	r6, [sp, #0]
 800eff8:	f7ff fd82 	bl	800eb00 <__lo0bits>
 800effc:	9900      	ldr	r1, [sp, #0]
 800effe:	b300      	cbz	r0, 800f042 <__d2b+0x82>
 800f000:	9a01      	ldr	r2, [sp, #4]
 800f002:	f1c0 0320 	rsb	r3, r0, #32
 800f006:	fa02 f303 	lsl.w	r3, r2, r3
 800f00a:	430b      	orrs	r3, r1
 800f00c:	40c2      	lsrs	r2, r0
 800f00e:	6163      	str	r3, [r4, #20]
 800f010:	9201      	str	r2, [sp, #4]
 800f012:	9b01      	ldr	r3, [sp, #4]
 800f014:	61a3      	str	r3, [r4, #24]
 800f016:	2b00      	cmp	r3, #0
 800f018:	bf14      	ite	ne
 800f01a:	2202      	movne	r2, #2
 800f01c:	2201      	moveq	r2, #1
 800f01e:	6122      	str	r2, [r4, #16]
 800f020:	b1d5      	cbz	r5, 800f058 <__d2b+0x98>
 800f022:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800f026:	4405      	add	r5, r0
 800f028:	f8c9 5000 	str.w	r5, [r9]
 800f02c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800f030:	f8c8 0000 	str.w	r0, [r8]
 800f034:	4620      	mov	r0, r4
 800f036:	b003      	add	sp, #12
 800f038:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f03c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800f040:	e7d5      	b.n	800efee <__d2b+0x2e>
 800f042:	6161      	str	r1, [r4, #20]
 800f044:	e7e5      	b.n	800f012 <__d2b+0x52>
 800f046:	a801      	add	r0, sp, #4
 800f048:	f7ff fd5a 	bl	800eb00 <__lo0bits>
 800f04c:	9b01      	ldr	r3, [sp, #4]
 800f04e:	6163      	str	r3, [r4, #20]
 800f050:	2201      	movs	r2, #1
 800f052:	6122      	str	r2, [r4, #16]
 800f054:	3020      	adds	r0, #32
 800f056:	e7e3      	b.n	800f020 <__d2b+0x60>
 800f058:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800f05c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800f060:	f8c9 0000 	str.w	r0, [r9]
 800f064:	6918      	ldr	r0, [r3, #16]
 800f066:	f7ff fd2b 	bl	800eac0 <__hi0bits>
 800f06a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800f06e:	e7df      	b.n	800f030 <__d2b+0x70>
 800f070:	080117d3 	.word	0x080117d3
 800f074:	080117e4 	.word	0x080117e4

0800f078 <_calloc_r>:
 800f078:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f07a:	fba1 2402 	umull	r2, r4, r1, r2
 800f07e:	b94c      	cbnz	r4, 800f094 <_calloc_r+0x1c>
 800f080:	4611      	mov	r1, r2
 800f082:	9201      	str	r2, [sp, #4]
 800f084:	f000 f87a 	bl	800f17c <_malloc_r>
 800f088:	9a01      	ldr	r2, [sp, #4]
 800f08a:	4605      	mov	r5, r0
 800f08c:	b930      	cbnz	r0, 800f09c <_calloc_r+0x24>
 800f08e:	4628      	mov	r0, r5
 800f090:	b003      	add	sp, #12
 800f092:	bd30      	pop	{r4, r5, pc}
 800f094:	220c      	movs	r2, #12
 800f096:	6002      	str	r2, [r0, #0]
 800f098:	2500      	movs	r5, #0
 800f09a:	e7f8      	b.n	800f08e <_calloc_r+0x16>
 800f09c:	4621      	mov	r1, r4
 800f09e:	f7fe f93f 	bl	800d320 <memset>
 800f0a2:	e7f4      	b.n	800f08e <_calloc_r+0x16>

0800f0a4 <_free_r>:
 800f0a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f0a6:	2900      	cmp	r1, #0
 800f0a8:	d044      	beq.n	800f134 <_free_r+0x90>
 800f0aa:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800f0ae:	9001      	str	r0, [sp, #4]
 800f0b0:	2b00      	cmp	r3, #0
 800f0b2:	f1a1 0404 	sub.w	r4, r1, #4
 800f0b6:	bfb8      	it	lt
 800f0b8:	18e4      	addlt	r4, r4, r3
 800f0ba:	f000 fa9b 	bl	800f5f4 <__malloc_lock>
 800f0be:	4a1e      	ldr	r2, [pc, #120]	; (800f138 <_free_r+0x94>)
 800f0c0:	9801      	ldr	r0, [sp, #4]
 800f0c2:	6813      	ldr	r3, [r2, #0]
 800f0c4:	b933      	cbnz	r3, 800f0d4 <_free_r+0x30>
 800f0c6:	6063      	str	r3, [r4, #4]
 800f0c8:	6014      	str	r4, [r2, #0]
 800f0ca:	b003      	add	sp, #12
 800f0cc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800f0d0:	f000 ba96 	b.w	800f600 <__malloc_unlock>
 800f0d4:	42a3      	cmp	r3, r4
 800f0d6:	d908      	bls.n	800f0ea <_free_r+0x46>
 800f0d8:	6825      	ldr	r5, [r4, #0]
 800f0da:	1961      	adds	r1, r4, r5
 800f0dc:	428b      	cmp	r3, r1
 800f0de:	bf01      	itttt	eq
 800f0e0:	6819      	ldreq	r1, [r3, #0]
 800f0e2:	685b      	ldreq	r3, [r3, #4]
 800f0e4:	1949      	addeq	r1, r1, r5
 800f0e6:	6021      	streq	r1, [r4, #0]
 800f0e8:	e7ed      	b.n	800f0c6 <_free_r+0x22>
 800f0ea:	461a      	mov	r2, r3
 800f0ec:	685b      	ldr	r3, [r3, #4]
 800f0ee:	b10b      	cbz	r3, 800f0f4 <_free_r+0x50>
 800f0f0:	42a3      	cmp	r3, r4
 800f0f2:	d9fa      	bls.n	800f0ea <_free_r+0x46>
 800f0f4:	6811      	ldr	r1, [r2, #0]
 800f0f6:	1855      	adds	r5, r2, r1
 800f0f8:	42a5      	cmp	r5, r4
 800f0fa:	d10b      	bne.n	800f114 <_free_r+0x70>
 800f0fc:	6824      	ldr	r4, [r4, #0]
 800f0fe:	4421      	add	r1, r4
 800f100:	1854      	adds	r4, r2, r1
 800f102:	42a3      	cmp	r3, r4
 800f104:	6011      	str	r1, [r2, #0]
 800f106:	d1e0      	bne.n	800f0ca <_free_r+0x26>
 800f108:	681c      	ldr	r4, [r3, #0]
 800f10a:	685b      	ldr	r3, [r3, #4]
 800f10c:	6053      	str	r3, [r2, #4]
 800f10e:	4421      	add	r1, r4
 800f110:	6011      	str	r1, [r2, #0]
 800f112:	e7da      	b.n	800f0ca <_free_r+0x26>
 800f114:	d902      	bls.n	800f11c <_free_r+0x78>
 800f116:	230c      	movs	r3, #12
 800f118:	6003      	str	r3, [r0, #0]
 800f11a:	e7d6      	b.n	800f0ca <_free_r+0x26>
 800f11c:	6825      	ldr	r5, [r4, #0]
 800f11e:	1961      	adds	r1, r4, r5
 800f120:	428b      	cmp	r3, r1
 800f122:	bf04      	itt	eq
 800f124:	6819      	ldreq	r1, [r3, #0]
 800f126:	685b      	ldreq	r3, [r3, #4]
 800f128:	6063      	str	r3, [r4, #4]
 800f12a:	bf04      	itt	eq
 800f12c:	1949      	addeq	r1, r1, r5
 800f12e:	6021      	streq	r1, [r4, #0]
 800f130:	6054      	str	r4, [r2, #4]
 800f132:	e7ca      	b.n	800f0ca <_free_r+0x26>
 800f134:	b003      	add	sp, #12
 800f136:	bd30      	pop	{r4, r5, pc}
 800f138:	20000c94 	.word	0x20000c94

0800f13c <sbrk_aligned>:
 800f13c:	b570      	push	{r4, r5, r6, lr}
 800f13e:	4e0e      	ldr	r6, [pc, #56]	; (800f178 <sbrk_aligned+0x3c>)
 800f140:	460c      	mov	r4, r1
 800f142:	6831      	ldr	r1, [r6, #0]
 800f144:	4605      	mov	r5, r0
 800f146:	b911      	cbnz	r1, 800f14e <sbrk_aligned+0x12>
 800f148:	f000 f9e8 	bl	800f51c <_sbrk_r>
 800f14c:	6030      	str	r0, [r6, #0]
 800f14e:	4621      	mov	r1, r4
 800f150:	4628      	mov	r0, r5
 800f152:	f000 f9e3 	bl	800f51c <_sbrk_r>
 800f156:	1c43      	adds	r3, r0, #1
 800f158:	d00a      	beq.n	800f170 <sbrk_aligned+0x34>
 800f15a:	1cc4      	adds	r4, r0, #3
 800f15c:	f024 0403 	bic.w	r4, r4, #3
 800f160:	42a0      	cmp	r0, r4
 800f162:	d007      	beq.n	800f174 <sbrk_aligned+0x38>
 800f164:	1a21      	subs	r1, r4, r0
 800f166:	4628      	mov	r0, r5
 800f168:	f000 f9d8 	bl	800f51c <_sbrk_r>
 800f16c:	3001      	adds	r0, #1
 800f16e:	d101      	bne.n	800f174 <sbrk_aligned+0x38>
 800f170:	f04f 34ff 	mov.w	r4, #4294967295
 800f174:	4620      	mov	r0, r4
 800f176:	bd70      	pop	{r4, r5, r6, pc}
 800f178:	20000c98 	.word	0x20000c98

0800f17c <_malloc_r>:
 800f17c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f180:	1ccd      	adds	r5, r1, #3
 800f182:	f025 0503 	bic.w	r5, r5, #3
 800f186:	3508      	adds	r5, #8
 800f188:	2d0c      	cmp	r5, #12
 800f18a:	bf38      	it	cc
 800f18c:	250c      	movcc	r5, #12
 800f18e:	2d00      	cmp	r5, #0
 800f190:	4607      	mov	r7, r0
 800f192:	db01      	blt.n	800f198 <_malloc_r+0x1c>
 800f194:	42a9      	cmp	r1, r5
 800f196:	d905      	bls.n	800f1a4 <_malloc_r+0x28>
 800f198:	230c      	movs	r3, #12
 800f19a:	603b      	str	r3, [r7, #0]
 800f19c:	2600      	movs	r6, #0
 800f19e:	4630      	mov	r0, r6
 800f1a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f1a4:	4e2e      	ldr	r6, [pc, #184]	; (800f260 <_malloc_r+0xe4>)
 800f1a6:	f000 fa25 	bl	800f5f4 <__malloc_lock>
 800f1aa:	6833      	ldr	r3, [r6, #0]
 800f1ac:	461c      	mov	r4, r3
 800f1ae:	bb34      	cbnz	r4, 800f1fe <_malloc_r+0x82>
 800f1b0:	4629      	mov	r1, r5
 800f1b2:	4638      	mov	r0, r7
 800f1b4:	f7ff ffc2 	bl	800f13c <sbrk_aligned>
 800f1b8:	1c43      	adds	r3, r0, #1
 800f1ba:	4604      	mov	r4, r0
 800f1bc:	d14d      	bne.n	800f25a <_malloc_r+0xde>
 800f1be:	6834      	ldr	r4, [r6, #0]
 800f1c0:	4626      	mov	r6, r4
 800f1c2:	2e00      	cmp	r6, #0
 800f1c4:	d140      	bne.n	800f248 <_malloc_r+0xcc>
 800f1c6:	6823      	ldr	r3, [r4, #0]
 800f1c8:	4631      	mov	r1, r6
 800f1ca:	4638      	mov	r0, r7
 800f1cc:	eb04 0803 	add.w	r8, r4, r3
 800f1d0:	f000 f9a4 	bl	800f51c <_sbrk_r>
 800f1d4:	4580      	cmp	r8, r0
 800f1d6:	d13a      	bne.n	800f24e <_malloc_r+0xd2>
 800f1d8:	6821      	ldr	r1, [r4, #0]
 800f1da:	3503      	adds	r5, #3
 800f1dc:	1a6d      	subs	r5, r5, r1
 800f1de:	f025 0503 	bic.w	r5, r5, #3
 800f1e2:	3508      	adds	r5, #8
 800f1e4:	2d0c      	cmp	r5, #12
 800f1e6:	bf38      	it	cc
 800f1e8:	250c      	movcc	r5, #12
 800f1ea:	4629      	mov	r1, r5
 800f1ec:	4638      	mov	r0, r7
 800f1ee:	f7ff ffa5 	bl	800f13c <sbrk_aligned>
 800f1f2:	3001      	adds	r0, #1
 800f1f4:	d02b      	beq.n	800f24e <_malloc_r+0xd2>
 800f1f6:	6823      	ldr	r3, [r4, #0]
 800f1f8:	442b      	add	r3, r5
 800f1fa:	6023      	str	r3, [r4, #0]
 800f1fc:	e00e      	b.n	800f21c <_malloc_r+0xa0>
 800f1fe:	6822      	ldr	r2, [r4, #0]
 800f200:	1b52      	subs	r2, r2, r5
 800f202:	d41e      	bmi.n	800f242 <_malloc_r+0xc6>
 800f204:	2a0b      	cmp	r2, #11
 800f206:	d916      	bls.n	800f236 <_malloc_r+0xba>
 800f208:	1961      	adds	r1, r4, r5
 800f20a:	42a3      	cmp	r3, r4
 800f20c:	6025      	str	r5, [r4, #0]
 800f20e:	bf18      	it	ne
 800f210:	6059      	strne	r1, [r3, #4]
 800f212:	6863      	ldr	r3, [r4, #4]
 800f214:	bf08      	it	eq
 800f216:	6031      	streq	r1, [r6, #0]
 800f218:	5162      	str	r2, [r4, r5]
 800f21a:	604b      	str	r3, [r1, #4]
 800f21c:	4638      	mov	r0, r7
 800f21e:	f104 060b 	add.w	r6, r4, #11
 800f222:	f000 f9ed 	bl	800f600 <__malloc_unlock>
 800f226:	f026 0607 	bic.w	r6, r6, #7
 800f22a:	1d23      	adds	r3, r4, #4
 800f22c:	1af2      	subs	r2, r6, r3
 800f22e:	d0b6      	beq.n	800f19e <_malloc_r+0x22>
 800f230:	1b9b      	subs	r3, r3, r6
 800f232:	50a3      	str	r3, [r4, r2]
 800f234:	e7b3      	b.n	800f19e <_malloc_r+0x22>
 800f236:	6862      	ldr	r2, [r4, #4]
 800f238:	42a3      	cmp	r3, r4
 800f23a:	bf0c      	ite	eq
 800f23c:	6032      	streq	r2, [r6, #0]
 800f23e:	605a      	strne	r2, [r3, #4]
 800f240:	e7ec      	b.n	800f21c <_malloc_r+0xa0>
 800f242:	4623      	mov	r3, r4
 800f244:	6864      	ldr	r4, [r4, #4]
 800f246:	e7b2      	b.n	800f1ae <_malloc_r+0x32>
 800f248:	4634      	mov	r4, r6
 800f24a:	6876      	ldr	r6, [r6, #4]
 800f24c:	e7b9      	b.n	800f1c2 <_malloc_r+0x46>
 800f24e:	230c      	movs	r3, #12
 800f250:	603b      	str	r3, [r7, #0]
 800f252:	4638      	mov	r0, r7
 800f254:	f000 f9d4 	bl	800f600 <__malloc_unlock>
 800f258:	e7a1      	b.n	800f19e <_malloc_r+0x22>
 800f25a:	6025      	str	r5, [r4, #0]
 800f25c:	e7de      	b.n	800f21c <_malloc_r+0xa0>
 800f25e:	bf00      	nop
 800f260:	20000c94 	.word	0x20000c94

0800f264 <__ssputs_r>:
 800f264:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f268:	688e      	ldr	r6, [r1, #8]
 800f26a:	429e      	cmp	r6, r3
 800f26c:	4682      	mov	sl, r0
 800f26e:	460c      	mov	r4, r1
 800f270:	4690      	mov	r8, r2
 800f272:	461f      	mov	r7, r3
 800f274:	d838      	bhi.n	800f2e8 <__ssputs_r+0x84>
 800f276:	898a      	ldrh	r2, [r1, #12]
 800f278:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800f27c:	d032      	beq.n	800f2e4 <__ssputs_r+0x80>
 800f27e:	6825      	ldr	r5, [r4, #0]
 800f280:	6909      	ldr	r1, [r1, #16]
 800f282:	eba5 0901 	sub.w	r9, r5, r1
 800f286:	6965      	ldr	r5, [r4, #20]
 800f288:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800f28c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800f290:	3301      	adds	r3, #1
 800f292:	444b      	add	r3, r9
 800f294:	106d      	asrs	r5, r5, #1
 800f296:	429d      	cmp	r5, r3
 800f298:	bf38      	it	cc
 800f29a:	461d      	movcc	r5, r3
 800f29c:	0553      	lsls	r3, r2, #21
 800f29e:	d531      	bpl.n	800f304 <__ssputs_r+0xa0>
 800f2a0:	4629      	mov	r1, r5
 800f2a2:	f7ff ff6b 	bl	800f17c <_malloc_r>
 800f2a6:	4606      	mov	r6, r0
 800f2a8:	b950      	cbnz	r0, 800f2c0 <__ssputs_r+0x5c>
 800f2aa:	230c      	movs	r3, #12
 800f2ac:	f8ca 3000 	str.w	r3, [sl]
 800f2b0:	89a3      	ldrh	r3, [r4, #12]
 800f2b2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f2b6:	81a3      	strh	r3, [r4, #12]
 800f2b8:	f04f 30ff 	mov.w	r0, #4294967295
 800f2bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f2c0:	6921      	ldr	r1, [r4, #16]
 800f2c2:	464a      	mov	r2, r9
 800f2c4:	f7ff fb46 	bl	800e954 <memcpy>
 800f2c8:	89a3      	ldrh	r3, [r4, #12]
 800f2ca:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800f2ce:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800f2d2:	81a3      	strh	r3, [r4, #12]
 800f2d4:	6126      	str	r6, [r4, #16]
 800f2d6:	6165      	str	r5, [r4, #20]
 800f2d8:	444e      	add	r6, r9
 800f2da:	eba5 0509 	sub.w	r5, r5, r9
 800f2de:	6026      	str	r6, [r4, #0]
 800f2e0:	60a5      	str	r5, [r4, #8]
 800f2e2:	463e      	mov	r6, r7
 800f2e4:	42be      	cmp	r6, r7
 800f2e6:	d900      	bls.n	800f2ea <__ssputs_r+0x86>
 800f2e8:	463e      	mov	r6, r7
 800f2ea:	6820      	ldr	r0, [r4, #0]
 800f2ec:	4632      	mov	r2, r6
 800f2ee:	4641      	mov	r1, r8
 800f2f0:	f000 f966 	bl	800f5c0 <memmove>
 800f2f4:	68a3      	ldr	r3, [r4, #8]
 800f2f6:	1b9b      	subs	r3, r3, r6
 800f2f8:	60a3      	str	r3, [r4, #8]
 800f2fa:	6823      	ldr	r3, [r4, #0]
 800f2fc:	4433      	add	r3, r6
 800f2fe:	6023      	str	r3, [r4, #0]
 800f300:	2000      	movs	r0, #0
 800f302:	e7db      	b.n	800f2bc <__ssputs_r+0x58>
 800f304:	462a      	mov	r2, r5
 800f306:	f000 f981 	bl	800f60c <_realloc_r>
 800f30a:	4606      	mov	r6, r0
 800f30c:	2800      	cmp	r0, #0
 800f30e:	d1e1      	bne.n	800f2d4 <__ssputs_r+0x70>
 800f310:	6921      	ldr	r1, [r4, #16]
 800f312:	4650      	mov	r0, sl
 800f314:	f7ff fec6 	bl	800f0a4 <_free_r>
 800f318:	e7c7      	b.n	800f2aa <__ssputs_r+0x46>
	...

0800f31c <_svfiprintf_r>:
 800f31c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f320:	4698      	mov	r8, r3
 800f322:	898b      	ldrh	r3, [r1, #12]
 800f324:	061b      	lsls	r3, r3, #24
 800f326:	b09d      	sub	sp, #116	; 0x74
 800f328:	4607      	mov	r7, r0
 800f32a:	460d      	mov	r5, r1
 800f32c:	4614      	mov	r4, r2
 800f32e:	d50e      	bpl.n	800f34e <_svfiprintf_r+0x32>
 800f330:	690b      	ldr	r3, [r1, #16]
 800f332:	b963      	cbnz	r3, 800f34e <_svfiprintf_r+0x32>
 800f334:	2140      	movs	r1, #64	; 0x40
 800f336:	f7ff ff21 	bl	800f17c <_malloc_r>
 800f33a:	6028      	str	r0, [r5, #0]
 800f33c:	6128      	str	r0, [r5, #16]
 800f33e:	b920      	cbnz	r0, 800f34a <_svfiprintf_r+0x2e>
 800f340:	230c      	movs	r3, #12
 800f342:	603b      	str	r3, [r7, #0]
 800f344:	f04f 30ff 	mov.w	r0, #4294967295
 800f348:	e0d1      	b.n	800f4ee <_svfiprintf_r+0x1d2>
 800f34a:	2340      	movs	r3, #64	; 0x40
 800f34c:	616b      	str	r3, [r5, #20]
 800f34e:	2300      	movs	r3, #0
 800f350:	9309      	str	r3, [sp, #36]	; 0x24
 800f352:	2320      	movs	r3, #32
 800f354:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800f358:	f8cd 800c 	str.w	r8, [sp, #12]
 800f35c:	2330      	movs	r3, #48	; 0x30
 800f35e:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 800f508 <_svfiprintf_r+0x1ec>
 800f362:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800f366:	f04f 0901 	mov.w	r9, #1
 800f36a:	4623      	mov	r3, r4
 800f36c:	469a      	mov	sl, r3
 800f36e:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f372:	b10a      	cbz	r2, 800f378 <_svfiprintf_r+0x5c>
 800f374:	2a25      	cmp	r2, #37	; 0x25
 800f376:	d1f9      	bne.n	800f36c <_svfiprintf_r+0x50>
 800f378:	ebba 0b04 	subs.w	fp, sl, r4
 800f37c:	d00b      	beq.n	800f396 <_svfiprintf_r+0x7a>
 800f37e:	465b      	mov	r3, fp
 800f380:	4622      	mov	r2, r4
 800f382:	4629      	mov	r1, r5
 800f384:	4638      	mov	r0, r7
 800f386:	f7ff ff6d 	bl	800f264 <__ssputs_r>
 800f38a:	3001      	adds	r0, #1
 800f38c:	f000 80aa 	beq.w	800f4e4 <_svfiprintf_r+0x1c8>
 800f390:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f392:	445a      	add	r2, fp
 800f394:	9209      	str	r2, [sp, #36]	; 0x24
 800f396:	f89a 3000 	ldrb.w	r3, [sl]
 800f39a:	2b00      	cmp	r3, #0
 800f39c:	f000 80a2 	beq.w	800f4e4 <_svfiprintf_r+0x1c8>
 800f3a0:	2300      	movs	r3, #0
 800f3a2:	f04f 32ff 	mov.w	r2, #4294967295
 800f3a6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800f3aa:	f10a 0a01 	add.w	sl, sl, #1
 800f3ae:	9304      	str	r3, [sp, #16]
 800f3b0:	9307      	str	r3, [sp, #28]
 800f3b2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800f3b6:	931a      	str	r3, [sp, #104]	; 0x68
 800f3b8:	4654      	mov	r4, sl
 800f3ba:	2205      	movs	r2, #5
 800f3bc:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f3c0:	4851      	ldr	r0, [pc, #324]	; (800f508 <_svfiprintf_r+0x1ec>)
 800f3c2:	f7f0 ff2d 	bl	8000220 <memchr>
 800f3c6:	9a04      	ldr	r2, [sp, #16]
 800f3c8:	b9d8      	cbnz	r0, 800f402 <_svfiprintf_r+0xe6>
 800f3ca:	06d0      	lsls	r0, r2, #27
 800f3cc:	bf44      	itt	mi
 800f3ce:	2320      	movmi	r3, #32
 800f3d0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800f3d4:	0711      	lsls	r1, r2, #28
 800f3d6:	bf44      	itt	mi
 800f3d8:	232b      	movmi	r3, #43	; 0x2b
 800f3da:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800f3de:	f89a 3000 	ldrb.w	r3, [sl]
 800f3e2:	2b2a      	cmp	r3, #42	; 0x2a
 800f3e4:	d015      	beq.n	800f412 <_svfiprintf_r+0xf6>
 800f3e6:	9a07      	ldr	r2, [sp, #28]
 800f3e8:	4654      	mov	r4, sl
 800f3ea:	2000      	movs	r0, #0
 800f3ec:	f04f 0c0a 	mov.w	ip, #10
 800f3f0:	4621      	mov	r1, r4
 800f3f2:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f3f6:	3b30      	subs	r3, #48	; 0x30
 800f3f8:	2b09      	cmp	r3, #9
 800f3fa:	d94e      	bls.n	800f49a <_svfiprintf_r+0x17e>
 800f3fc:	b1b0      	cbz	r0, 800f42c <_svfiprintf_r+0x110>
 800f3fe:	9207      	str	r2, [sp, #28]
 800f400:	e014      	b.n	800f42c <_svfiprintf_r+0x110>
 800f402:	eba0 0308 	sub.w	r3, r0, r8
 800f406:	fa09 f303 	lsl.w	r3, r9, r3
 800f40a:	4313      	orrs	r3, r2
 800f40c:	9304      	str	r3, [sp, #16]
 800f40e:	46a2      	mov	sl, r4
 800f410:	e7d2      	b.n	800f3b8 <_svfiprintf_r+0x9c>
 800f412:	9b03      	ldr	r3, [sp, #12]
 800f414:	1d19      	adds	r1, r3, #4
 800f416:	681b      	ldr	r3, [r3, #0]
 800f418:	9103      	str	r1, [sp, #12]
 800f41a:	2b00      	cmp	r3, #0
 800f41c:	bfbb      	ittet	lt
 800f41e:	425b      	neglt	r3, r3
 800f420:	f042 0202 	orrlt.w	r2, r2, #2
 800f424:	9307      	strge	r3, [sp, #28]
 800f426:	9307      	strlt	r3, [sp, #28]
 800f428:	bfb8      	it	lt
 800f42a:	9204      	strlt	r2, [sp, #16]
 800f42c:	7823      	ldrb	r3, [r4, #0]
 800f42e:	2b2e      	cmp	r3, #46	; 0x2e
 800f430:	d10c      	bne.n	800f44c <_svfiprintf_r+0x130>
 800f432:	7863      	ldrb	r3, [r4, #1]
 800f434:	2b2a      	cmp	r3, #42	; 0x2a
 800f436:	d135      	bne.n	800f4a4 <_svfiprintf_r+0x188>
 800f438:	9b03      	ldr	r3, [sp, #12]
 800f43a:	1d1a      	adds	r2, r3, #4
 800f43c:	681b      	ldr	r3, [r3, #0]
 800f43e:	9203      	str	r2, [sp, #12]
 800f440:	2b00      	cmp	r3, #0
 800f442:	bfb8      	it	lt
 800f444:	f04f 33ff 	movlt.w	r3, #4294967295
 800f448:	3402      	adds	r4, #2
 800f44a:	9305      	str	r3, [sp, #20]
 800f44c:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800f518 <_svfiprintf_r+0x1fc>
 800f450:	7821      	ldrb	r1, [r4, #0]
 800f452:	2203      	movs	r2, #3
 800f454:	4650      	mov	r0, sl
 800f456:	f7f0 fee3 	bl	8000220 <memchr>
 800f45a:	b140      	cbz	r0, 800f46e <_svfiprintf_r+0x152>
 800f45c:	2340      	movs	r3, #64	; 0x40
 800f45e:	eba0 000a 	sub.w	r0, r0, sl
 800f462:	fa03 f000 	lsl.w	r0, r3, r0
 800f466:	9b04      	ldr	r3, [sp, #16]
 800f468:	4303      	orrs	r3, r0
 800f46a:	3401      	adds	r4, #1
 800f46c:	9304      	str	r3, [sp, #16]
 800f46e:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f472:	4826      	ldr	r0, [pc, #152]	; (800f50c <_svfiprintf_r+0x1f0>)
 800f474:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800f478:	2206      	movs	r2, #6
 800f47a:	f7f0 fed1 	bl	8000220 <memchr>
 800f47e:	2800      	cmp	r0, #0
 800f480:	d038      	beq.n	800f4f4 <_svfiprintf_r+0x1d8>
 800f482:	4b23      	ldr	r3, [pc, #140]	; (800f510 <_svfiprintf_r+0x1f4>)
 800f484:	bb1b      	cbnz	r3, 800f4ce <_svfiprintf_r+0x1b2>
 800f486:	9b03      	ldr	r3, [sp, #12]
 800f488:	3307      	adds	r3, #7
 800f48a:	f023 0307 	bic.w	r3, r3, #7
 800f48e:	3308      	adds	r3, #8
 800f490:	9303      	str	r3, [sp, #12]
 800f492:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f494:	4433      	add	r3, r6
 800f496:	9309      	str	r3, [sp, #36]	; 0x24
 800f498:	e767      	b.n	800f36a <_svfiprintf_r+0x4e>
 800f49a:	fb0c 3202 	mla	r2, ip, r2, r3
 800f49e:	460c      	mov	r4, r1
 800f4a0:	2001      	movs	r0, #1
 800f4a2:	e7a5      	b.n	800f3f0 <_svfiprintf_r+0xd4>
 800f4a4:	2300      	movs	r3, #0
 800f4a6:	3401      	adds	r4, #1
 800f4a8:	9305      	str	r3, [sp, #20]
 800f4aa:	4619      	mov	r1, r3
 800f4ac:	f04f 0c0a 	mov.w	ip, #10
 800f4b0:	4620      	mov	r0, r4
 800f4b2:	f810 2b01 	ldrb.w	r2, [r0], #1
 800f4b6:	3a30      	subs	r2, #48	; 0x30
 800f4b8:	2a09      	cmp	r2, #9
 800f4ba:	d903      	bls.n	800f4c4 <_svfiprintf_r+0x1a8>
 800f4bc:	2b00      	cmp	r3, #0
 800f4be:	d0c5      	beq.n	800f44c <_svfiprintf_r+0x130>
 800f4c0:	9105      	str	r1, [sp, #20]
 800f4c2:	e7c3      	b.n	800f44c <_svfiprintf_r+0x130>
 800f4c4:	fb0c 2101 	mla	r1, ip, r1, r2
 800f4c8:	4604      	mov	r4, r0
 800f4ca:	2301      	movs	r3, #1
 800f4cc:	e7f0      	b.n	800f4b0 <_svfiprintf_r+0x194>
 800f4ce:	ab03      	add	r3, sp, #12
 800f4d0:	9300      	str	r3, [sp, #0]
 800f4d2:	462a      	mov	r2, r5
 800f4d4:	4b0f      	ldr	r3, [pc, #60]	; (800f514 <_svfiprintf_r+0x1f8>)
 800f4d6:	a904      	add	r1, sp, #16
 800f4d8:	4638      	mov	r0, r7
 800f4da:	f7fd ffc9 	bl	800d470 <_printf_float>
 800f4de:	1c42      	adds	r2, r0, #1
 800f4e0:	4606      	mov	r6, r0
 800f4e2:	d1d6      	bne.n	800f492 <_svfiprintf_r+0x176>
 800f4e4:	89ab      	ldrh	r3, [r5, #12]
 800f4e6:	065b      	lsls	r3, r3, #25
 800f4e8:	f53f af2c 	bmi.w	800f344 <_svfiprintf_r+0x28>
 800f4ec:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f4ee:	b01d      	add	sp, #116	; 0x74
 800f4f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f4f4:	ab03      	add	r3, sp, #12
 800f4f6:	9300      	str	r3, [sp, #0]
 800f4f8:	462a      	mov	r2, r5
 800f4fa:	4b06      	ldr	r3, [pc, #24]	; (800f514 <_svfiprintf_r+0x1f8>)
 800f4fc:	a904      	add	r1, sp, #16
 800f4fe:	4638      	mov	r0, r7
 800f500:	f7fe fa5a 	bl	800d9b8 <_printf_i>
 800f504:	e7eb      	b.n	800f4de <_svfiprintf_r+0x1c2>
 800f506:	bf00      	nop
 800f508:	0801193c 	.word	0x0801193c
 800f50c:	08011946 	.word	0x08011946
 800f510:	0800d471 	.word	0x0800d471
 800f514:	0800f265 	.word	0x0800f265
 800f518:	08011942 	.word	0x08011942

0800f51c <_sbrk_r>:
 800f51c:	b538      	push	{r3, r4, r5, lr}
 800f51e:	4d06      	ldr	r5, [pc, #24]	; (800f538 <_sbrk_r+0x1c>)
 800f520:	2300      	movs	r3, #0
 800f522:	4604      	mov	r4, r0
 800f524:	4608      	mov	r0, r1
 800f526:	602b      	str	r3, [r5, #0]
 800f528:	f7f8 f932 	bl	8007790 <_sbrk>
 800f52c:	1c43      	adds	r3, r0, #1
 800f52e:	d102      	bne.n	800f536 <_sbrk_r+0x1a>
 800f530:	682b      	ldr	r3, [r5, #0]
 800f532:	b103      	cbz	r3, 800f536 <_sbrk_r+0x1a>
 800f534:	6023      	str	r3, [r4, #0]
 800f536:	bd38      	pop	{r3, r4, r5, pc}
 800f538:	20000c9c 	.word	0x20000c9c

0800f53c <__assert_func>:
 800f53c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f53e:	4614      	mov	r4, r2
 800f540:	461a      	mov	r2, r3
 800f542:	4b09      	ldr	r3, [pc, #36]	; (800f568 <__assert_func+0x2c>)
 800f544:	681b      	ldr	r3, [r3, #0]
 800f546:	4605      	mov	r5, r0
 800f548:	68d8      	ldr	r0, [r3, #12]
 800f54a:	b14c      	cbz	r4, 800f560 <__assert_func+0x24>
 800f54c:	4b07      	ldr	r3, [pc, #28]	; (800f56c <__assert_func+0x30>)
 800f54e:	9100      	str	r1, [sp, #0]
 800f550:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f554:	4906      	ldr	r1, [pc, #24]	; (800f570 <__assert_func+0x34>)
 800f556:	462b      	mov	r3, r5
 800f558:	f000 f80e 	bl	800f578 <fiprintf>
 800f55c:	f000 faac 	bl	800fab8 <abort>
 800f560:	4b04      	ldr	r3, [pc, #16]	; (800f574 <__assert_func+0x38>)
 800f562:	461c      	mov	r4, r3
 800f564:	e7f3      	b.n	800f54e <__assert_func+0x12>
 800f566:	bf00      	nop
 800f568:	2000013c 	.word	0x2000013c
 800f56c:	0801194d 	.word	0x0801194d
 800f570:	0801195a 	.word	0x0801195a
 800f574:	08011988 	.word	0x08011988

0800f578 <fiprintf>:
 800f578:	b40e      	push	{r1, r2, r3}
 800f57a:	b503      	push	{r0, r1, lr}
 800f57c:	4601      	mov	r1, r0
 800f57e:	ab03      	add	r3, sp, #12
 800f580:	4805      	ldr	r0, [pc, #20]	; (800f598 <fiprintf+0x20>)
 800f582:	f853 2b04 	ldr.w	r2, [r3], #4
 800f586:	6800      	ldr	r0, [r0, #0]
 800f588:	9301      	str	r3, [sp, #4]
 800f58a:	f000 f897 	bl	800f6bc <_vfiprintf_r>
 800f58e:	b002      	add	sp, #8
 800f590:	f85d eb04 	ldr.w	lr, [sp], #4
 800f594:	b003      	add	sp, #12
 800f596:	4770      	bx	lr
 800f598:	2000013c 	.word	0x2000013c

0800f59c <__ascii_mbtowc>:
 800f59c:	b082      	sub	sp, #8
 800f59e:	b901      	cbnz	r1, 800f5a2 <__ascii_mbtowc+0x6>
 800f5a0:	a901      	add	r1, sp, #4
 800f5a2:	b142      	cbz	r2, 800f5b6 <__ascii_mbtowc+0x1a>
 800f5a4:	b14b      	cbz	r3, 800f5ba <__ascii_mbtowc+0x1e>
 800f5a6:	7813      	ldrb	r3, [r2, #0]
 800f5a8:	600b      	str	r3, [r1, #0]
 800f5aa:	7812      	ldrb	r2, [r2, #0]
 800f5ac:	1e10      	subs	r0, r2, #0
 800f5ae:	bf18      	it	ne
 800f5b0:	2001      	movne	r0, #1
 800f5b2:	b002      	add	sp, #8
 800f5b4:	4770      	bx	lr
 800f5b6:	4610      	mov	r0, r2
 800f5b8:	e7fb      	b.n	800f5b2 <__ascii_mbtowc+0x16>
 800f5ba:	f06f 0001 	mvn.w	r0, #1
 800f5be:	e7f8      	b.n	800f5b2 <__ascii_mbtowc+0x16>

0800f5c0 <memmove>:
 800f5c0:	4288      	cmp	r0, r1
 800f5c2:	b510      	push	{r4, lr}
 800f5c4:	eb01 0402 	add.w	r4, r1, r2
 800f5c8:	d902      	bls.n	800f5d0 <memmove+0x10>
 800f5ca:	4284      	cmp	r4, r0
 800f5cc:	4623      	mov	r3, r4
 800f5ce:	d807      	bhi.n	800f5e0 <memmove+0x20>
 800f5d0:	1e43      	subs	r3, r0, #1
 800f5d2:	42a1      	cmp	r1, r4
 800f5d4:	d008      	beq.n	800f5e8 <memmove+0x28>
 800f5d6:	f811 2b01 	ldrb.w	r2, [r1], #1
 800f5da:	f803 2f01 	strb.w	r2, [r3, #1]!
 800f5de:	e7f8      	b.n	800f5d2 <memmove+0x12>
 800f5e0:	4402      	add	r2, r0
 800f5e2:	4601      	mov	r1, r0
 800f5e4:	428a      	cmp	r2, r1
 800f5e6:	d100      	bne.n	800f5ea <memmove+0x2a>
 800f5e8:	bd10      	pop	{r4, pc}
 800f5ea:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800f5ee:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800f5f2:	e7f7      	b.n	800f5e4 <memmove+0x24>

0800f5f4 <__malloc_lock>:
 800f5f4:	4801      	ldr	r0, [pc, #4]	; (800f5fc <__malloc_lock+0x8>)
 800f5f6:	f000 bc1f 	b.w	800fe38 <__retarget_lock_acquire_recursive>
 800f5fa:	bf00      	nop
 800f5fc:	20000ca0 	.word	0x20000ca0

0800f600 <__malloc_unlock>:
 800f600:	4801      	ldr	r0, [pc, #4]	; (800f608 <__malloc_unlock+0x8>)
 800f602:	f000 bc1a 	b.w	800fe3a <__retarget_lock_release_recursive>
 800f606:	bf00      	nop
 800f608:	20000ca0 	.word	0x20000ca0

0800f60c <_realloc_r>:
 800f60c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f610:	4680      	mov	r8, r0
 800f612:	4614      	mov	r4, r2
 800f614:	460e      	mov	r6, r1
 800f616:	b921      	cbnz	r1, 800f622 <_realloc_r+0x16>
 800f618:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f61c:	4611      	mov	r1, r2
 800f61e:	f7ff bdad 	b.w	800f17c <_malloc_r>
 800f622:	b92a      	cbnz	r2, 800f630 <_realloc_r+0x24>
 800f624:	f7ff fd3e 	bl	800f0a4 <_free_r>
 800f628:	4625      	mov	r5, r4
 800f62a:	4628      	mov	r0, r5
 800f62c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f630:	f000 fc6a 	bl	800ff08 <_malloc_usable_size_r>
 800f634:	4284      	cmp	r4, r0
 800f636:	4607      	mov	r7, r0
 800f638:	d802      	bhi.n	800f640 <_realloc_r+0x34>
 800f63a:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800f63e:	d812      	bhi.n	800f666 <_realloc_r+0x5a>
 800f640:	4621      	mov	r1, r4
 800f642:	4640      	mov	r0, r8
 800f644:	f7ff fd9a 	bl	800f17c <_malloc_r>
 800f648:	4605      	mov	r5, r0
 800f64a:	2800      	cmp	r0, #0
 800f64c:	d0ed      	beq.n	800f62a <_realloc_r+0x1e>
 800f64e:	42bc      	cmp	r4, r7
 800f650:	4622      	mov	r2, r4
 800f652:	4631      	mov	r1, r6
 800f654:	bf28      	it	cs
 800f656:	463a      	movcs	r2, r7
 800f658:	f7ff f97c 	bl	800e954 <memcpy>
 800f65c:	4631      	mov	r1, r6
 800f65e:	4640      	mov	r0, r8
 800f660:	f7ff fd20 	bl	800f0a4 <_free_r>
 800f664:	e7e1      	b.n	800f62a <_realloc_r+0x1e>
 800f666:	4635      	mov	r5, r6
 800f668:	e7df      	b.n	800f62a <_realloc_r+0x1e>

0800f66a <__sfputc_r>:
 800f66a:	6893      	ldr	r3, [r2, #8]
 800f66c:	3b01      	subs	r3, #1
 800f66e:	2b00      	cmp	r3, #0
 800f670:	b410      	push	{r4}
 800f672:	6093      	str	r3, [r2, #8]
 800f674:	da08      	bge.n	800f688 <__sfputc_r+0x1e>
 800f676:	6994      	ldr	r4, [r2, #24]
 800f678:	42a3      	cmp	r3, r4
 800f67a:	db01      	blt.n	800f680 <__sfputc_r+0x16>
 800f67c:	290a      	cmp	r1, #10
 800f67e:	d103      	bne.n	800f688 <__sfputc_r+0x1e>
 800f680:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f684:	f000 b94a 	b.w	800f91c <__swbuf_r>
 800f688:	6813      	ldr	r3, [r2, #0]
 800f68a:	1c58      	adds	r0, r3, #1
 800f68c:	6010      	str	r0, [r2, #0]
 800f68e:	7019      	strb	r1, [r3, #0]
 800f690:	4608      	mov	r0, r1
 800f692:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f696:	4770      	bx	lr

0800f698 <__sfputs_r>:
 800f698:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f69a:	4606      	mov	r6, r0
 800f69c:	460f      	mov	r7, r1
 800f69e:	4614      	mov	r4, r2
 800f6a0:	18d5      	adds	r5, r2, r3
 800f6a2:	42ac      	cmp	r4, r5
 800f6a4:	d101      	bne.n	800f6aa <__sfputs_r+0x12>
 800f6a6:	2000      	movs	r0, #0
 800f6a8:	e007      	b.n	800f6ba <__sfputs_r+0x22>
 800f6aa:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f6ae:	463a      	mov	r2, r7
 800f6b0:	4630      	mov	r0, r6
 800f6b2:	f7ff ffda 	bl	800f66a <__sfputc_r>
 800f6b6:	1c43      	adds	r3, r0, #1
 800f6b8:	d1f3      	bne.n	800f6a2 <__sfputs_r+0xa>
 800f6ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f6bc <_vfiprintf_r>:
 800f6bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f6c0:	460d      	mov	r5, r1
 800f6c2:	b09d      	sub	sp, #116	; 0x74
 800f6c4:	4614      	mov	r4, r2
 800f6c6:	4698      	mov	r8, r3
 800f6c8:	4606      	mov	r6, r0
 800f6ca:	b118      	cbz	r0, 800f6d4 <_vfiprintf_r+0x18>
 800f6cc:	6983      	ldr	r3, [r0, #24]
 800f6ce:	b90b      	cbnz	r3, 800f6d4 <_vfiprintf_r+0x18>
 800f6d0:	f000 fb14 	bl	800fcfc <__sinit>
 800f6d4:	4b89      	ldr	r3, [pc, #548]	; (800f8fc <_vfiprintf_r+0x240>)
 800f6d6:	429d      	cmp	r5, r3
 800f6d8:	d11b      	bne.n	800f712 <_vfiprintf_r+0x56>
 800f6da:	6875      	ldr	r5, [r6, #4]
 800f6dc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800f6de:	07d9      	lsls	r1, r3, #31
 800f6e0:	d405      	bmi.n	800f6ee <_vfiprintf_r+0x32>
 800f6e2:	89ab      	ldrh	r3, [r5, #12]
 800f6e4:	059a      	lsls	r2, r3, #22
 800f6e6:	d402      	bmi.n	800f6ee <_vfiprintf_r+0x32>
 800f6e8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800f6ea:	f000 fba5 	bl	800fe38 <__retarget_lock_acquire_recursive>
 800f6ee:	89ab      	ldrh	r3, [r5, #12]
 800f6f0:	071b      	lsls	r3, r3, #28
 800f6f2:	d501      	bpl.n	800f6f8 <_vfiprintf_r+0x3c>
 800f6f4:	692b      	ldr	r3, [r5, #16]
 800f6f6:	b9eb      	cbnz	r3, 800f734 <_vfiprintf_r+0x78>
 800f6f8:	4629      	mov	r1, r5
 800f6fa:	4630      	mov	r0, r6
 800f6fc:	f000 f96e 	bl	800f9dc <__swsetup_r>
 800f700:	b1c0      	cbz	r0, 800f734 <_vfiprintf_r+0x78>
 800f702:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800f704:	07dc      	lsls	r4, r3, #31
 800f706:	d50e      	bpl.n	800f726 <_vfiprintf_r+0x6a>
 800f708:	f04f 30ff 	mov.w	r0, #4294967295
 800f70c:	b01d      	add	sp, #116	; 0x74
 800f70e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f712:	4b7b      	ldr	r3, [pc, #492]	; (800f900 <_vfiprintf_r+0x244>)
 800f714:	429d      	cmp	r5, r3
 800f716:	d101      	bne.n	800f71c <_vfiprintf_r+0x60>
 800f718:	68b5      	ldr	r5, [r6, #8]
 800f71a:	e7df      	b.n	800f6dc <_vfiprintf_r+0x20>
 800f71c:	4b79      	ldr	r3, [pc, #484]	; (800f904 <_vfiprintf_r+0x248>)
 800f71e:	429d      	cmp	r5, r3
 800f720:	bf08      	it	eq
 800f722:	68f5      	ldreq	r5, [r6, #12]
 800f724:	e7da      	b.n	800f6dc <_vfiprintf_r+0x20>
 800f726:	89ab      	ldrh	r3, [r5, #12]
 800f728:	0598      	lsls	r0, r3, #22
 800f72a:	d4ed      	bmi.n	800f708 <_vfiprintf_r+0x4c>
 800f72c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800f72e:	f000 fb84 	bl	800fe3a <__retarget_lock_release_recursive>
 800f732:	e7e9      	b.n	800f708 <_vfiprintf_r+0x4c>
 800f734:	2300      	movs	r3, #0
 800f736:	9309      	str	r3, [sp, #36]	; 0x24
 800f738:	2320      	movs	r3, #32
 800f73a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800f73e:	f8cd 800c 	str.w	r8, [sp, #12]
 800f742:	2330      	movs	r3, #48	; 0x30
 800f744:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800f908 <_vfiprintf_r+0x24c>
 800f748:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800f74c:	f04f 0901 	mov.w	r9, #1
 800f750:	4623      	mov	r3, r4
 800f752:	469a      	mov	sl, r3
 800f754:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f758:	b10a      	cbz	r2, 800f75e <_vfiprintf_r+0xa2>
 800f75a:	2a25      	cmp	r2, #37	; 0x25
 800f75c:	d1f9      	bne.n	800f752 <_vfiprintf_r+0x96>
 800f75e:	ebba 0b04 	subs.w	fp, sl, r4
 800f762:	d00b      	beq.n	800f77c <_vfiprintf_r+0xc0>
 800f764:	465b      	mov	r3, fp
 800f766:	4622      	mov	r2, r4
 800f768:	4629      	mov	r1, r5
 800f76a:	4630      	mov	r0, r6
 800f76c:	f7ff ff94 	bl	800f698 <__sfputs_r>
 800f770:	3001      	adds	r0, #1
 800f772:	f000 80aa 	beq.w	800f8ca <_vfiprintf_r+0x20e>
 800f776:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f778:	445a      	add	r2, fp
 800f77a:	9209      	str	r2, [sp, #36]	; 0x24
 800f77c:	f89a 3000 	ldrb.w	r3, [sl]
 800f780:	2b00      	cmp	r3, #0
 800f782:	f000 80a2 	beq.w	800f8ca <_vfiprintf_r+0x20e>
 800f786:	2300      	movs	r3, #0
 800f788:	f04f 32ff 	mov.w	r2, #4294967295
 800f78c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800f790:	f10a 0a01 	add.w	sl, sl, #1
 800f794:	9304      	str	r3, [sp, #16]
 800f796:	9307      	str	r3, [sp, #28]
 800f798:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800f79c:	931a      	str	r3, [sp, #104]	; 0x68
 800f79e:	4654      	mov	r4, sl
 800f7a0:	2205      	movs	r2, #5
 800f7a2:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f7a6:	4858      	ldr	r0, [pc, #352]	; (800f908 <_vfiprintf_r+0x24c>)
 800f7a8:	f7f0 fd3a 	bl	8000220 <memchr>
 800f7ac:	9a04      	ldr	r2, [sp, #16]
 800f7ae:	b9d8      	cbnz	r0, 800f7e8 <_vfiprintf_r+0x12c>
 800f7b0:	06d1      	lsls	r1, r2, #27
 800f7b2:	bf44      	itt	mi
 800f7b4:	2320      	movmi	r3, #32
 800f7b6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800f7ba:	0713      	lsls	r3, r2, #28
 800f7bc:	bf44      	itt	mi
 800f7be:	232b      	movmi	r3, #43	; 0x2b
 800f7c0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800f7c4:	f89a 3000 	ldrb.w	r3, [sl]
 800f7c8:	2b2a      	cmp	r3, #42	; 0x2a
 800f7ca:	d015      	beq.n	800f7f8 <_vfiprintf_r+0x13c>
 800f7cc:	9a07      	ldr	r2, [sp, #28]
 800f7ce:	4654      	mov	r4, sl
 800f7d0:	2000      	movs	r0, #0
 800f7d2:	f04f 0c0a 	mov.w	ip, #10
 800f7d6:	4621      	mov	r1, r4
 800f7d8:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f7dc:	3b30      	subs	r3, #48	; 0x30
 800f7de:	2b09      	cmp	r3, #9
 800f7e0:	d94e      	bls.n	800f880 <_vfiprintf_r+0x1c4>
 800f7e2:	b1b0      	cbz	r0, 800f812 <_vfiprintf_r+0x156>
 800f7e4:	9207      	str	r2, [sp, #28]
 800f7e6:	e014      	b.n	800f812 <_vfiprintf_r+0x156>
 800f7e8:	eba0 0308 	sub.w	r3, r0, r8
 800f7ec:	fa09 f303 	lsl.w	r3, r9, r3
 800f7f0:	4313      	orrs	r3, r2
 800f7f2:	9304      	str	r3, [sp, #16]
 800f7f4:	46a2      	mov	sl, r4
 800f7f6:	e7d2      	b.n	800f79e <_vfiprintf_r+0xe2>
 800f7f8:	9b03      	ldr	r3, [sp, #12]
 800f7fa:	1d19      	adds	r1, r3, #4
 800f7fc:	681b      	ldr	r3, [r3, #0]
 800f7fe:	9103      	str	r1, [sp, #12]
 800f800:	2b00      	cmp	r3, #0
 800f802:	bfbb      	ittet	lt
 800f804:	425b      	neglt	r3, r3
 800f806:	f042 0202 	orrlt.w	r2, r2, #2
 800f80a:	9307      	strge	r3, [sp, #28]
 800f80c:	9307      	strlt	r3, [sp, #28]
 800f80e:	bfb8      	it	lt
 800f810:	9204      	strlt	r2, [sp, #16]
 800f812:	7823      	ldrb	r3, [r4, #0]
 800f814:	2b2e      	cmp	r3, #46	; 0x2e
 800f816:	d10c      	bne.n	800f832 <_vfiprintf_r+0x176>
 800f818:	7863      	ldrb	r3, [r4, #1]
 800f81a:	2b2a      	cmp	r3, #42	; 0x2a
 800f81c:	d135      	bne.n	800f88a <_vfiprintf_r+0x1ce>
 800f81e:	9b03      	ldr	r3, [sp, #12]
 800f820:	1d1a      	adds	r2, r3, #4
 800f822:	681b      	ldr	r3, [r3, #0]
 800f824:	9203      	str	r2, [sp, #12]
 800f826:	2b00      	cmp	r3, #0
 800f828:	bfb8      	it	lt
 800f82a:	f04f 33ff 	movlt.w	r3, #4294967295
 800f82e:	3402      	adds	r4, #2
 800f830:	9305      	str	r3, [sp, #20]
 800f832:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800f918 <_vfiprintf_r+0x25c>
 800f836:	7821      	ldrb	r1, [r4, #0]
 800f838:	2203      	movs	r2, #3
 800f83a:	4650      	mov	r0, sl
 800f83c:	f7f0 fcf0 	bl	8000220 <memchr>
 800f840:	b140      	cbz	r0, 800f854 <_vfiprintf_r+0x198>
 800f842:	2340      	movs	r3, #64	; 0x40
 800f844:	eba0 000a 	sub.w	r0, r0, sl
 800f848:	fa03 f000 	lsl.w	r0, r3, r0
 800f84c:	9b04      	ldr	r3, [sp, #16]
 800f84e:	4303      	orrs	r3, r0
 800f850:	3401      	adds	r4, #1
 800f852:	9304      	str	r3, [sp, #16]
 800f854:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f858:	482c      	ldr	r0, [pc, #176]	; (800f90c <_vfiprintf_r+0x250>)
 800f85a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800f85e:	2206      	movs	r2, #6
 800f860:	f7f0 fcde 	bl	8000220 <memchr>
 800f864:	2800      	cmp	r0, #0
 800f866:	d03f      	beq.n	800f8e8 <_vfiprintf_r+0x22c>
 800f868:	4b29      	ldr	r3, [pc, #164]	; (800f910 <_vfiprintf_r+0x254>)
 800f86a:	bb1b      	cbnz	r3, 800f8b4 <_vfiprintf_r+0x1f8>
 800f86c:	9b03      	ldr	r3, [sp, #12]
 800f86e:	3307      	adds	r3, #7
 800f870:	f023 0307 	bic.w	r3, r3, #7
 800f874:	3308      	adds	r3, #8
 800f876:	9303      	str	r3, [sp, #12]
 800f878:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f87a:	443b      	add	r3, r7
 800f87c:	9309      	str	r3, [sp, #36]	; 0x24
 800f87e:	e767      	b.n	800f750 <_vfiprintf_r+0x94>
 800f880:	fb0c 3202 	mla	r2, ip, r2, r3
 800f884:	460c      	mov	r4, r1
 800f886:	2001      	movs	r0, #1
 800f888:	e7a5      	b.n	800f7d6 <_vfiprintf_r+0x11a>
 800f88a:	2300      	movs	r3, #0
 800f88c:	3401      	adds	r4, #1
 800f88e:	9305      	str	r3, [sp, #20]
 800f890:	4619      	mov	r1, r3
 800f892:	f04f 0c0a 	mov.w	ip, #10
 800f896:	4620      	mov	r0, r4
 800f898:	f810 2b01 	ldrb.w	r2, [r0], #1
 800f89c:	3a30      	subs	r2, #48	; 0x30
 800f89e:	2a09      	cmp	r2, #9
 800f8a0:	d903      	bls.n	800f8aa <_vfiprintf_r+0x1ee>
 800f8a2:	2b00      	cmp	r3, #0
 800f8a4:	d0c5      	beq.n	800f832 <_vfiprintf_r+0x176>
 800f8a6:	9105      	str	r1, [sp, #20]
 800f8a8:	e7c3      	b.n	800f832 <_vfiprintf_r+0x176>
 800f8aa:	fb0c 2101 	mla	r1, ip, r1, r2
 800f8ae:	4604      	mov	r4, r0
 800f8b0:	2301      	movs	r3, #1
 800f8b2:	e7f0      	b.n	800f896 <_vfiprintf_r+0x1da>
 800f8b4:	ab03      	add	r3, sp, #12
 800f8b6:	9300      	str	r3, [sp, #0]
 800f8b8:	462a      	mov	r2, r5
 800f8ba:	4b16      	ldr	r3, [pc, #88]	; (800f914 <_vfiprintf_r+0x258>)
 800f8bc:	a904      	add	r1, sp, #16
 800f8be:	4630      	mov	r0, r6
 800f8c0:	f7fd fdd6 	bl	800d470 <_printf_float>
 800f8c4:	4607      	mov	r7, r0
 800f8c6:	1c78      	adds	r0, r7, #1
 800f8c8:	d1d6      	bne.n	800f878 <_vfiprintf_r+0x1bc>
 800f8ca:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800f8cc:	07d9      	lsls	r1, r3, #31
 800f8ce:	d405      	bmi.n	800f8dc <_vfiprintf_r+0x220>
 800f8d0:	89ab      	ldrh	r3, [r5, #12]
 800f8d2:	059a      	lsls	r2, r3, #22
 800f8d4:	d402      	bmi.n	800f8dc <_vfiprintf_r+0x220>
 800f8d6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800f8d8:	f000 faaf 	bl	800fe3a <__retarget_lock_release_recursive>
 800f8dc:	89ab      	ldrh	r3, [r5, #12]
 800f8de:	065b      	lsls	r3, r3, #25
 800f8e0:	f53f af12 	bmi.w	800f708 <_vfiprintf_r+0x4c>
 800f8e4:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f8e6:	e711      	b.n	800f70c <_vfiprintf_r+0x50>
 800f8e8:	ab03      	add	r3, sp, #12
 800f8ea:	9300      	str	r3, [sp, #0]
 800f8ec:	462a      	mov	r2, r5
 800f8ee:	4b09      	ldr	r3, [pc, #36]	; (800f914 <_vfiprintf_r+0x258>)
 800f8f0:	a904      	add	r1, sp, #16
 800f8f2:	4630      	mov	r0, r6
 800f8f4:	f7fe f860 	bl	800d9b8 <_printf_i>
 800f8f8:	e7e4      	b.n	800f8c4 <_vfiprintf_r+0x208>
 800f8fa:	bf00      	nop
 800f8fc:	08011ab4 	.word	0x08011ab4
 800f900:	08011ad4 	.word	0x08011ad4
 800f904:	08011a94 	.word	0x08011a94
 800f908:	0801193c 	.word	0x0801193c
 800f90c:	08011946 	.word	0x08011946
 800f910:	0800d471 	.word	0x0800d471
 800f914:	0800f699 	.word	0x0800f699
 800f918:	08011942 	.word	0x08011942

0800f91c <__swbuf_r>:
 800f91c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f91e:	460e      	mov	r6, r1
 800f920:	4614      	mov	r4, r2
 800f922:	4605      	mov	r5, r0
 800f924:	b118      	cbz	r0, 800f92e <__swbuf_r+0x12>
 800f926:	6983      	ldr	r3, [r0, #24]
 800f928:	b90b      	cbnz	r3, 800f92e <__swbuf_r+0x12>
 800f92a:	f000 f9e7 	bl	800fcfc <__sinit>
 800f92e:	4b21      	ldr	r3, [pc, #132]	; (800f9b4 <__swbuf_r+0x98>)
 800f930:	429c      	cmp	r4, r3
 800f932:	d12b      	bne.n	800f98c <__swbuf_r+0x70>
 800f934:	686c      	ldr	r4, [r5, #4]
 800f936:	69a3      	ldr	r3, [r4, #24]
 800f938:	60a3      	str	r3, [r4, #8]
 800f93a:	89a3      	ldrh	r3, [r4, #12]
 800f93c:	071a      	lsls	r2, r3, #28
 800f93e:	d52f      	bpl.n	800f9a0 <__swbuf_r+0x84>
 800f940:	6923      	ldr	r3, [r4, #16]
 800f942:	b36b      	cbz	r3, 800f9a0 <__swbuf_r+0x84>
 800f944:	6923      	ldr	r3, [r4, #16]
 800f946:	6820      	ldr	r0, [r4, #0]
 800f948:	1ac0      	subs	r0, r0, r3
 800f94a:	6963      	ldr	r3, [r4, #20]
 800f94c:	b2f6      	uxtb	r6, r6
 800f94e:	4283      	cmp	r3, r0
 800f950:	4637      	mov	r7, r6
 800f952:	dc04      	bgt.n	800f95e <__swbuf_r+0x42>
 800f954:	4621      	mov	r1, r4
 800f956:	4628      	mov	r0, r5
 800f958:	f000 f93c 	bl	800fbd4 <_fflush_r>
 800f95c:	bb30      	cbnz	r0, 800f9ac <__swbuf_r+0x90>
 800f95e:	68a3      	ldr	r3, [r4, #8]
 800f960:	3b01      	subs	r3, #1
 800f962:	60a3      	str	r3, [r4, #8]
 800f964:	6823      	ldr	r3, [r4, #0]
 800f966:	1c5a      	adds	r2, r3, #1
 800f968:	6022      	str	r2, [r4, #0]
 800f96a:	701e      	strb	r6, [r3, #0]
 800f96c:	6963      	ldr	r3, [r4, #20]
 800f96e:	3001      	adds	r0, #1
 800f970:	4283      	cmp	r3, r0
 800f972:	d004      	beq.n	800f97e <__swbuf_r+0x62>
 800f974:	89a3      	ldrh	r3, [r4, #12]
 800f976:	07db      	lsls	r3, r3, #31
 800f978:	d506      	bpl.n	800f988 <__swbuf_r+0x6c>
 800f97a:	2e0a      	cmp	r6, #10
 800f97c:	d104      	bne.n	800f988 <__swbuf_r+0x6c>
 800f97e:	4621      	mov	r1, r4
 800f980:	4628      	mov	r0, r5
 800f982:	f000 f927 	bl	800fbd4 <_fflush_r>
 800f986:	b988      	cbnz	r0, 800f9ac <__swbuf_r+0x90>
 800f988:	4638      	mov	r0, r7
 800f98a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f98c:	4b0a      	ldr	r3, [pc, #40]	; (800f9b8 <__swbuf_r+0x9c>)
 800f98e:	429c      	cmp	r4, r3
 800f990:	d101      	bne.n	800f996 <__swbuf_r+0x7a>
 800f992:	68ac      	ldr	r4, [r5, #8]
 800f994:	e7cf      	b.n	800f936 <__swbuf_r+0x1a>
 800f996:	4b09      	ldr	r3, [pc, #36]	; (800f9bc <__swbuf_r+0xa0>)
 800f998:	429c      	cmp	r4, r3
 800f99a:	bf08      	it	eq
 800f99c:	68ec      	ldreq	r4, [r5, #12]
 800f99e:	e7ca      	b.n	800f936 <__swbuf_r+0x1a>
 800f9a0:	4621      	mov	r1, r4
 800f9a2:	4628      	mov	r0, r5
 800f9a4:	f000 f81a 	bl	800f9dc <__swsetup_r>
 800f9a8:	2800      	cmp	r0, #0
 800f9aa:	d0cb      	beq.n	800f944 <__swbuf_r+0x28>
 800f9ac:	f04f 37ff 	mov.w	r7, #4294967295
 800f9b0:	e7ea      	b.n	800f988 <__swbuf_r+0x6c>
 800f9b2:	bf00      	nop
 800f9b4:	08011ab4 	.word	0x08011ab4
 800f9b8:	08011ad4 	.word	0x08011ad4
 800f9bc:	08011a94 	.word	0x08011a94

0800f9c0 <__ascii_wctomb>:
 800f9c0:	b149      	cbz	r1, 800f9d6 <__ascii_wctomb+0x16>
 800f9c2:	2aff      	cmp	r2, #255	; 0xff
 800f9c4:	bf85      	ittet	hi
 800f9c6:	238a      	movhi	r3, #138	; 0x8a
 800f9c8:	6003      	strhi	r3, [r0, #0]
 800f9ca:	700a      	strbls	r2, [r1, #0]
 800f9cc:	f04f 30ff 	movhi.w	r0, #4294967295
 800f9d0:	bf98      	it	ls
 800f9d2:	2001      	movls	r0, #1
 800f9d4:	4770      	bx	lr
 800f9d6:	4608      	mov	r0, r1
 800f9d8:	4770      	bx	lr
	...

0800f9dc <__swsetup_r>:
 800f9dc:	4b32      	ldr	r3, [pc, #200]	; (800faa8 <__swsetup_r+0xcc>)
 800f9de:	b570      	push	{r4, r5, r6, lr}
 800f9e0:	681d      	ldr	r5, [r3, #0]
 800f9e2:	4606      	mov	r6, r0
 800f9e4:	460c      	mov	r4, r1
 800f9e6:	b125      	cbz	r5, 800f9f2 <__swsetup_r+0x16>
 800f9e8:	69ab      	ldr	r3, [r5, #24]
 800f9ea:	b913      	cbnz	r3, 800f9f2 <__swsetup_r+0x16>
 800f9ec:	4628      	mov	r0, r5
 800f9ee:	f000 f985 	bl	800fcfc <__sinit>
 800f9f2:	4b2e      	ldr	r3, [pc, #184]	; (800faac <__swsetup_r+0xd0>)
 800f9f4:	429c      	cmp	r4, r3
 800f9f6:	d10f      	bne.n	800fa18 <__swsetup_r+0x3c>
 800f9f8:	686c      	ldr	r4, [r5, #4]
 800f9fa:	89a3      	ldrh	r3, [r4, #12]
 800f9fc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800fa00:	0719      	lsls	r1, r3, #28
 800fa02:	d42c      	bmi.n	800fa5e <__swsetup_r+0x82>
 800fa04:	06dd      	lsls	r5, r3, #27
 800fa06:	d411      	bmi.n	800fa2c <__swsetup_r+0x50>
 800fa08:	2309      	movs	r3, #9
 800fa0a:	6033      	str	r3, [r6, #0]
 800fa0c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800fa10:	81a3      	strh	r3, [r4, #12]
 800fa12:	f04f 30ff 	mov.w	r0, #4294967295
 800fa16:	e03e      	b.n	800fa96 <__swsetup_r+0xba>
 800fa18:	4b25      	ldr	r3, [pc, #148]	; (800fab0 <__swsetup_r+0xd4>)
 800fa1a:	429c      	cmp	r4, r3
 800fa1c:	d101      	bne.n	800fa22 <__swsetup_r+0x46>
 800fa1e:	68ac      	ldr	r4, [r5, #8]
 800fa20:	e7eb      	b.n	800f9fa <__swsetup_r+0x1e>
 800fa22:	4b24      	ldr	r3, [pc, #144]	; (800fab4 <__swsetup_r+0xd8>)
 800fa24:	429c      	cmp	r4, r3
 800fa26:	bf08      	it	eq
 800fa28:	68ec      	ldreq	r4, [r5, #12]
 800fa2a:	e7e6      	b.n	800f9fa <__swsetup_r+0x1e>
 800fa2c:	0758      	lsls	r0, r3, #29
 800fa2e:	d512      	bpl.n	800fa56 <__swsetup_r+0x7a>
 800fa30:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800fa32:	b141      	cbz	r1, 800fa46 <__swsetup_r+0x6a>
 800fa34:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800fa38:	4299      	cmp	r1, r3
 800fa3a:	d002      	beq.n	800fa42 <__swsetup_r+0x66>
 800fa3c:	4630      	mov	r0, r6
 800fa3e:	f7ff fb31 	bl	800f0a4 <_free_r>
 800fa42:	2300      	movs	r3, #0
 800fa44:	6363      	str	r3, [r4, #52]	; 0x34
 800fa46:	89a3      	ldrh	r3, [r4, #12]
 800fa48:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800fa4c:	81a3      	strh	r3, [r4, #12]
 800fa4e:	2300      	movs	r3, #0
 800fa50:	6063      	str	r3, [r4, #4]
 800fa52:	6923      	ldr	r3, [r4, #16]
 800fa54:	6023      	str	r3, [r4, #0]
 800fa56:	89a3      	ldrh	r3, [r4, #12]
 800fa58:	f043 0308 	orr.w	r3, r3, #8
 800fa5c:	81a3      	strh	r3, [r4, #12]
 800fa5e:	6923      	ldr	r3, [r4, #16]
 800fa60:	b94b      	cbnz	r3, 800fa76 <__swsetup_r+0x9a>
 800fa62:	89a3      	ldrh	r3, [r4, #12]
 800fa64:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800fa68:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800fa6c:	d003      	beq.n	800fa76 <__swsetup_r+0x9a>
 800fa6e:	4621      	mov	r1, r4
 800fa70:	4630      	mov	r0, r6
 800fa72:	f000 fa09 	bl	800fe88 <__smakebuf_r>
 800fa76:	89a0      	ldrh	r0, [r4, #12]
 800fa78:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800fa7c:	f010 0301 	ands.w	r3, r0, #1
 800fa80:	d00a      	beq.n	800fa98 <__swsetup_r+0xbc>
 800fa82:	2300      	movs	r3, #0
 800fa84:	60a3      	str	r3, [r4, #8]
 800fa86:	6963      	ldr	r3, [r4, #20]
 800fa88:	425b      	negs	r3, r3
 800fa8a:	61a3      	str	r3, [r4, #24]
 800fa8c:	6923      	ldr	r3, [r4, #16]
 800fa8e:	b943      	cbnz	r3, 800faa2 <__swsetup_r+0xc6>
 800fa90:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800fa94:	d1ba      	bne.n	800fa0c <__swsetup_r+0x30>
 800fa96:	bd70      	pop	{r4, r5, r6, pc}
 800fa98:	0781      	lsls	r1, r0, #30
 800fa9a:	bf58      	it	pl
 800fa9c:	6963      	ldrpl	r3, [r4, #20]
 800fa9e:	60a3      	str	r3, [r4, #8]
 800faa0:	e7f4      	b.n	800fa8c <__swsetup_r+0xb0>
 800faa2:	2000      	movs	r0, #0
 800faa4:	e7f7      	b.n	800fa96 <__swsetup_r+0xba>
 800faa6:	bf00      	nop
 800faa8:	2000013c 	.word	0x2000013c
 800faac:	08011ab4 	.word	0x08011ab4
 800fab0:	08011ad4 	.word	0x08011ad4
 800fab4:	08011a94 	.word	0x08011a94

0800fab8 <abort>:
 800fab8:	b508      	push	{r3, lr}
 800faba:	2006      	movs	r0, #6
 800fabc:	f000 fa54 	bl	800ff68 <raise>
 800fac0:	2001      	movs	r0, #1
 800fac2:	f7f7 fded 	bl	80076a0 <_exit>
	...

0800fac8 <__sflush_r>:
 800fac8:	898a      	ldrh	r2, [r1, #12]
 800faca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800face:	4605      	mov	r5, r0
 800fad0:	0710      	lsls	r0, r2, #28
 800fad2:	460c      	mov	r4, r1
 800fad4:	d458      	bmi.n	800fb88 <__sflush_r+0xc0>
 800fad6:	684b      	ldr	r3, [r1, #4]
 800fad8:	2b00      	cmp	r3, #0
 800fada:	dc05      	bgt.n	800fae8 <__sflush_r+0x20>
 800fadc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800fade:	2b00      	cmp	r3, #0
 800fae0:	dc02      	bgt.n	800fae8 <__sflush_r+0x20>
 800fae2:	2000      	movs	r0, #0
 800fae4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fae8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800faea:	2e00      	cmp	r6, #0
 800faec:	d0f9      	beq.n	800fae2 <__sflush_r+0x1a>
 800faee:	2300      	movs	r3, #0
 800faf0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800faf4:	682f      	ldr	r7, [r5, #0]
 800faf6:	602b      	str	r3, [r5, #0]
 800faf8:	d032      	beq.n	800fb60 <__sflush_r+0x98>
 800fafa:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800fafc:	89a3      	ldrh	r3, [r4, #12]
 800fafe:	075a      	lsls	r2, r3, #29
 800fb00:	d505      	bpl.n	800fb0e <__sflush_r+0x46>
 800fb02:	6863      	ldr	r3, [r4, #4]
 800fb04:	1ac0      	subs	r0, r0, r3
 800fb06:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800fb08:	b10b      	cbz	r3, 800fb0e <__sflush_r+0x46>
 800fb0a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800fb0c:	1ac0      	subs	r0, r0, r3
 800fb0e:	2300      	movs	r3, #0
 800fb10:	4602      	mov	r2, r0
 800fb12:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800fb14:	6a21      	ldr	r1, [r4, #32]
 800fb16:	4628      	mov	r0, r5
 800fb18:	47b0      	blx	r6
 800fb1a:	1c43      	adds	r3, r0, #1
 800fb1c:	89a3      	ldrh	r3, [r4, #12]
 800fb1e:	d106      	bne.n	800fb2e <__sflush_r+0x66>
 800fb20:	6829      	ldr	r1, [r5, #0]
 800fb22:	291d      	cmp	r1, #29
 800fb24:	d82c      	bhi.n	800fb80 <__sflush_r+0xb8>
 800fb26:	4a2a      	ldr	r2, [pc, #168]	; (800fbd0 <__sflush_r+0x108>)
 800fb28:	40ca      	lsrs	r2, r1
 800fb2a:	07d6      	lsls	r6, r2, #31
 800fb2c:	d528      	bpl.n	800fb80 <__sflush_r+0xb8>
 800fb2e:	2200      	movs	r2, #0
 800fb30:	6062      	str	r2, [r4, #4]
 800fb32:	04d9      	lsls	r1, r3, #19
 800fb34:	6922      	ldr	r2, [r4, #16]
 800fb36:	6022      	str	r2, [r4, #0]
 800fb38:	d504      	bpl.n	800fb44 <__sflush_r+0x7c>
 800fb3a:	1c42      	adds	r2, r0, #1
 800fb3c:	d101      	bne.n	800fb42 <__sflush_r+0x7a>
 800fb3e:	682b      	ldr	r3, [r5, #0]
 800fb40:	b903      	cbnz	r3, 800fb44 <__sflush_r+0x7c>
 800fb42:	6560      	str	r0, [r4, #84]	; 0x54
 800fb44:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800fb46:	602f      	str	r7, [r5, #0]
 800fb48:	2900      	cmp	r1, #0
 800fb4a:	d0ca      	beq.n	800fae2 <__sflush_r+0x1a>
 800fb4c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800fb50:	4299      	cmp	r1, r3
 800fb52:	d002      	beq.n	800fb5a <__sflush_r+0x92>
 800fb54:	4628      	mov	r0, r5
 800fb56:	f7ff faa5 	bl	800f0a4 <_free_r>
 800fb5a:	2000      	movs	r0, #0
 800fb5c:	6360      	str	r0, [r4, #52]	; 0x34
 800fb5e:	e7c1      	b.n	800fae4 <__sflush_r+0x1c>
 800fb60:	6a21      	ldr	r1, [r4, #32]
 800fb62:	2301      	movs	r3, #1
 800fb64:	4628      	mov	r0, r5
 800fb66:	47b0      	blx	r6
 800fb68:	1c41      	adds	r1, r0, #1
 800fb6a:	d1c7      	bne.n	800fafc <__sflush_r+0x34>
 800fb6c:	682b      	ldr	r3, [r5, #0]
 800fb6e:	2b00      	cmp	r3, #0
 800fb70:	d0c4      	beq.n	800fafc <__sflush_r+0x34>
 800fb72:	2b1d      	cmp	r3, #29
 800fb74:	d001      	beq.n	800fb7a <__sflush_r+0xb2>
 800fb76:	2b16      	cmp	r3, #22
 800fb78:	d101      	bne.n	800fb7e <__sflush_r+0xb6>
 800fb7a:	602f      	str	r7, [r5, #0]
 800fb7c:	e7b1      	b.n	800fae2 <__sflush_r+0x1a>
 800fb7e:	89a3      	ldrh	r3, [r4, #12]
 800fb80:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800fb84:	81a3      	strh	r3, [r4, #12]
 800fb86:	e7ad      	b.n	800fae4 <__sflush_r+0x1c>
 800fb88:	690f      	ldr	r7, [r1, #16]
 800fb8a:	2f00      	cmp	r7, #0
 800fb8c:	d0a9      	beq.n	800fae2 <__sflush_r+0x1a>
 800fb8e:	0793      	lsls	r3, r2, #30
 800fb90:	680e      	ldr	r6, [r1, #0]
 800fb92:	bf08      	it	eq
 800fb94:	694b      	ldreq	r3, [r1, #20]
 800fb96:	600f      	str	r7, [r1, #0]
 800fb98:	bf18      	it	ne
 800fb9a:	2300      	movne	r3, #0
 800fb9c:	eba6 0807 	sub.w	r8, r6, r7
 800fba0:	608b      	str	r3, [r1, #8]
 800fba2:	f1b8 0f00 	cmp.w	r8, #0
 800fba6:	dd9c      	ble.n	800fae2 <__sflush_r+0x1a>
 800fba8:	6a21      	ldr	r1, [r4, #32]
 800fbaa:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800fbac:	4643      	mov	r3, r8
 800fbae:	463a      	mov	r2, r7
 800fbb0:	4628      	mov	r0, r5
 800fbb2:	47b0      	blx	r6
 800fbb4:	2800      	cmp	r0, #0
 800fbb6:	dc06      	bgt.n	800fbc6 <__sflush_r+0xfe>
 800fbb8:	89a3      	ldrh	r3, [r4, #12]
 800fbba:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800fbbe:	81a3      	strh	r3, [r4, #12]
 800fbc0:	f04f 30ff 	mov.w	r0, #4294967295
 800fbc4:	e78e      	b.n	800fae4 <__sflush_r+0x1c>
 800fbc6:	4407      	add	r7, r0
 800fbc8:	eba8 0800 	sub.w	r8, r8, r0
 800fbcc:	e7e9      	b.n	800fba2 <__sflush_r+0xda>
 800fbce:	bf00      	nop
 800fbd0:	20400001 	.word	0x20400001

0800fbd4 <_fflush_r>:
 800fbd4:	b538      	push	{r3, r4, r5, lr}
 800fbd6:	690b      	ldr	r3, [r1, #16]
 800fbd8:	4605      	mov	r5, r0
 800fbda:	460c      	mov	r4, r1
 800fbdc:	b913      	cbnz	r3, 800fbe4 <_fflush_r+0x10>
 800fbde:	2500      	movs	r5, #0
 800fbe0:	4628      	mov	r0, r5
 800fbe2:	bd38      	pop	{r3, r4, r5, pc}
 800fbe4:	b118      	cbz	r0, 800fbee <_fflush_r+0x1a>
 800fbe6:	6983      	ldr	r3, [r0, #24]
 800fbe8:	b90b      	cbnz	r3, 800fbee <_fflush_r+0x1a>
 800fbea:	f000 f887 	bl	800fcfc <__sinit>
 800fbee:	4b14      	ldr	r3, [pc, #80]	; (800fc40 <_fflush_r+0x6c>)
 800fbf0:	429c      	cmp	r4, r3
 800fbf2:	d11b      	bne.n	800fc2c <_fflush_r+0x58>
 800fbf4:	686c      	ldr	r4, [r5, #4]
 800fbf6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800fbfa:	2b00      	cmp	r3, #0
 800fbfc:	d0ef      	beq.n	800fbde <_fflush_r+0xa>
 800fbfe:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800fc00:	07d0      	lsls	r0, r2, #31
 800fc02:	d404      	bmi.n	800fc0e <_fflush_r+0x3a>
 800fc04:	0599      	lsls	r1, r3, #22
 800fc06:	d402      	bmi.n	800fc0e <_fflush_r+0x3a>
 800fc08:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800fc0a:	f000 f915 	bl	800fe38 <__retarget_lock_acquire_recursive>
 800fc0e:	4628      	mov	r0, r5
 800fc10:	4621      	mov	r1, r4
 800fc12:	f7ff ff59 	bl	800fac8 <__sflush_r>
 800fc16:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800fc18:	07da      	lsls	r2, r3, #31
 800fc1a:	4605      	mov	r5, r0
 800fc1c:	d4e0      	bmi.n	800fbe0 <_fflush_r+0xc>
 800fc1e:	89a3      	ldrh	r3, [r4, #12]
 800fc20:	059b      	lsls	r3, r3, #22
 800fc22:	d4dd      	bmi.n	800fbe0 <_fflush_r+0xc>
 800fc24:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800fc26:	f000 f908 	bl	800fe3a <__retarget_lock_release_recursive>
 800fc2a:	e7d9      	b.n	800fbe0 <_fflush_r+0xc>
 800fc2c:	4b05      	ldr	r3, [pc, #20]	; (800fc44 <_fflush_r+0x70>)
 800fc2e:	429c      	cmp	r4, r3
 800fc30:	d101      	bne.n	800fc36 <_fflush_r+0x62>
 800fc32:	68ac      	ldr	r4, [r5, #8]
 800fc34:	e7df      	b.n	800fbf6 <_fflush_r+0x22>
 800fc36:	4b04      	ldr	r3, [pc, #16]	; (800fc48 <_fflush_r+0x74>)
 800fc38:	429c      	cmp	r4, r3
 800fc3a:	bf08      	it	eq
 800fc3c:	68ec      	ldreq	r4, [r5, #12]
 800fc3e:	e7da      	b.n	800fbf6 <_fflush_r+0x22>
 800fc40:	08011ab4 	.word	0x08011ab4
 800fc44:	08011ad4 	.word	0x08011ad4
 800fc48:	08011a94 	.word	0x08011a94

0800fc4c <std>:
 800fc4c:	2300      	movs	r3, #0
 800fc4e:	b510      	push	{r4, lr}
 800fc50:	4604      	mov	r4, r0
 800fc52:	e9c0 3300 	strd	r3, r3, [r0]
 800fc56:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800fc5a:	6083      	str	r3, [r0, #8]
 800fc5c:	8181      	strh	r1, [r0, #12]
 800fc5e:	6643      	str	r3, [r0, #100]	; 0x64
 800fc60:	81c2      	strh	r2, [r0, #14]
 800fc62:	6183      	str	r3, [r0, #24]
 800fc64:	4619      	mov	r1, r3
 800fc66:	2208      	movs	r2, #8
 800fc68:	305c      	adds	r0, #92	; 0x5c
 800fc6a:	f7fd fb59 	bl	800d320 <memset>
 800fc6e:	4b05      	ldr	r3, [pc, #20]	; (800fc84 <std+0x38>)
 800fc70:	6263      	str	r3, [r4, #36]	; 0x24
 800fc72:	4b05      	ldr	r3, [pc, #20]	; (800fc88 <std+0x3c>)
 800fc74:	62a3      	str	r3, [r4, #40]	; 0x28
 800fc76:	4b05      	ldr	r3, [pc, #20]	; (800fc8c <std+0x40>)
 800fc78:	62e3      	str	r3, [r4, #44]	; 0x2c
 800fc7a:	4b05      	ldr	r3, [pc, #20]	; (800fc90 <std+0x44>)
 800fc7c:	6224      	str	r4, [r4, #32]
 800fc7e:	6323      	str	r3, [r4, #48]	; 0x30
 800fc80:	bd10      	pop	{r4, pc}
 800fc82:	bf00      	nop
 800fc84:	0800ffa1 	.word	0x0800ffa1
 800fc88:	0800ffc3 	.word	0x0800ffc3
 800fc8c:	0800fffb 	.word	0x0800fffb
 800fc90:	0801001f 	.word	0x0801001f

0800fc94 <_cleanup_r>:
 800fc94:	4901      	ldr	r1, [pc, #4]	; (800fc9c <_cleanup_r+0x8>)
 800fc96:	f000 b8af 	b.w	800fdf8 <_fwalk_reent>
 800fc9a:	bf00      	nop
 800fc9c:	0800fbd5 	.word	0x0800fbd5

0800fca0 <__sfmoreglue>:
 800fca0:	b570      	push	{r4, r5, r6, lr}
 800fca2:	2268      	movs	r2, #104	; 0x68
 800fca4:	1e4d      	subs	r5, r1, #1
 800fca6:	4355      	muls	r5, r2
 800fca8:	460e      	mov	r6, r1
 800fcaa:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800fcae:	f7ff fa65 	bl	800f17c <_malloc_r>
 800fcb2:	4604      	mov	r4, r0
 800fcb4:	b140      	cbz	r0, 800fcc8 <__sfmoreglue+0x28>
 800fcb6:	2100      	movs	r1, #0
 800fcb8:	e9c0 1600 	strd	r1, r6, [r0]
 800fcbc:	300c      	adds	r0, #12
 800fcbe:	60a0      	str	r0, [r4, #8]
 800fcc0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800fcc4:	f7fd fb2c 	bl	800d320 <memset>
 800fcc8:	4620      	mov	r0, r4
 800fcca:	bd70      	pop	{r4, r5, r6, pc}

0800fccc <__sfp_lock_acquire>:
 800fccc:	4801      	ldr	r0, [pc, #4]	; (800fcd4 <__sfp_lock_acquire+0x8>)
 800fcce:	f000 b8b3 	b.w	800fe38 <__retarget_lock_acquire_recursive>
 800fcd2:	bf00      	nop
 800fcd4:	20000ca1 	.word	0x20000ca1

0800fcd8 <__sfp_lock_release>:
 800fcd8:	4801      	ldr	r0, [pc, #4]	; (800fce0 <__sfp_lock_release+0x8>)
 800fcda:	f000 b8ae 	b.w	800fe3a <__retarget_lock_release_recursive>
 800fcde:	bf00      	nop
 800fce0:	20000ca1 	.word	0x20000ca1

0800fce4 <__sinit_lock_acquire>:
 800fce4:	4801      	ldr	r0, [pc, #4]	; (800fcec <__sinit_lock_acquire+0x8>)
 800fce6:	f000 b8a7 	b.w	800fe38 <__retarget_lock_acquire_recursive>
 800fcea:	bf00      	nop
 800fcec:	20000ca2 	.word	0x20000ca2

0800fcf0 <__sinit_lock_release>:
 800fcf0:	4801      	ldr	r0, [pc, #4]	; (800fcf8 <__sinit_lock_release+0x8>)
 800fcf2:	f000 b8a2 	b.w	800fe3a <__retarget_lock_release_recursive>
 800fcf6:	bf00      	nop
 800fcf8:	20000ca2 	.word	0x20000ca2

0800fcfc <__sinit>:
 800fcfc:	b510      	push	{r4, lr}
 800fcfe:	4604      	mov	r4, r0
 800fd00:	f7ff fff0 	bl	800fce4 <__sinit_lock_acquire>
 800fd04:	69a3      	ldr	r3, [r4, #24]
 800fd06:	b11b      	cbz	r3, 800fd10 <__sinit+0x14>
 800fd08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fd0c:	f7ff bff0 	b.w	800fcf0 <__sinit_lock_release>
 800fd10:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800fd14:	6523      	str	r3, [r4, #80]	; 0x50
 800fd16:	4b13      	ldr	r3, [pc, #76]	; (800fd64 <__sinit+0x68>)
 800fd18:	4a13      	ldr	r2, [pc, #76]	; (800fd68 <__sinit+0x6c>)
 800fd1a:	681b      	ldr	r3, [r3, #0]
 800fd1c:	62a2      	str	r2, [r4, #40]	; 0x28
 800fd1e:	42a3      	cmp	r3, r4
 800fd20:	bf04      	itt	eq
 800fd22:	2301      	moveq	r3, #1
 800fd24:	61a3      	streq	r3, [r4, #24]
 800fd26:	4620      	mov	r0, r4
 800fd28:	f000 f820 	bl	800fd6c <__sfp>
 800fd2c:	6060      	str	r0, [r4, #4]
 800fd2e:	4620      	mov	r0, r4
 800fd30:	f000 f81c 	bl	800fd6c <__sfp>
 800fd34:	60a0      	str	r0, [r4, #8]
 800fd36:	4620      	mov	r0, r4
 800fd38:	f000 f818 	bl	800fd6c <__sfp>
 800fd3c:	2200      	movs	r2, #0
 800fd3e:	60e0      	str	r0, [r4, #12]
 800fd40:	2104      	movs	r1, #4
 800fd42:	6860      	ldr	r0, [r4, #4]
 800fd44:	f7ff ff82 	bl	800fc4c <std>
 800fd48:	68a0      	ldr	r0, [r4, #8]
 800fd4a:	2201      	movs	r2, #1
 800fd4c:	2109      	movs	r1, #9
 800fd4e:	f7ff ff7d 	bl	800fc4c <std>
 800fd52:	68e0      	ldr	r0, [r4, #12]
 800fd54:	2202      	movs	r2, #2
 800fd56:	2112      	movs	r1, #18
 800fd58:	f7ff ff78 	bl	800fc4c <std>
 800fd5c:	2301      	movs	r3, #1
 800fd5e:	61a3      	str	r3, [r4, #24]
 800fd60:	e7d2      	b.n	800fd08 <__sinit+0xc>
 800fd62:	bf00      	nop
 800fd64:	0801171c 	.word	0x0801171c
 800fd68:	0800fc95 	.word	0x0800fc95

0800fd6c <__sfp>:
 800fd6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fd6e:	4607      	mov	r7, r0
 800fd70:	f7ff ffac 	bl	800fccc <__sfp_lock_acquire>
 800fd74:	4b1e      	ldr	r3, [pc, #120]	; (800fdf0 <__sfp+0x84>)
 800fd76:	681e      	ldr	r6, [r3, #0]
 800fd78:	69b3      	ldr	r3, [r6, #24]
 800fd7a:	b913      	cbnz	r3, 800fd82 <__sfp+0x16>
 800fd7c:	4630      	mov	r0, r6
 800fd7e:	f7ff ffbd 	bl	800fcfc <__sinit>
 800fd82:	3648      	adds	r6, #72	; 0x48
 800fd84:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800fd88:	3b01      	subs	r3, #1
 800fd8a:	d503      	bpl.n	800fd94 <__sfp+0x28>
 800fd8c:	6833      	ldr	r3, [r6, #0]
 800fd8e:	b30b      	cbz	r3, 800fdd4 <__sfp+0x68>
 800fd90:	6836      	ldr	r6, [r6, #0]
 800fd92:	e7f7      	b.n	800fd84 <__sfp+0x18>
 800fd94:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800fd98:	b9d5      	cbnz	r5, 800fdd0 <__sfp+0x64>
 800fd9a:	4b16      	ldr	r3, [pc, #88]	; (800fdf4 <__sfp+0x88>)
 800fd9c:	60e3      	str	r3, [r4, #12]
 800fd9e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800fda2:	6665      	str	r5, [r4, #100]	; 0x64
 800fda4:	f000 f847 	bl	800fe36 <__retarget_lock_init_recursive>
 800fda8:	f7ff ff96 	bl	800fcd8 <__sfp_lock_release>
 800fdac:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800fdb0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800fdb4:	6025      	str	r5, [r4, #0]
 800fdb6:	61a5      	str	r5, [r4, #24]
 800fdb8:	2208      	movs	r2, #8
 800fdba:	4629      	mov	r1, r5
 800fdbc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800fdc0:	f7fd faae 	bl	800d320 <memset>
 800fdc4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800fdc8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800fdcc:	4620      	mov	r0, r4
 800fdce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fdd0:	3468      	adds	r4, #104	; 0x68
 800fdd2:	e7d9      	b.n	800fd88 <__sfp+0x1c>
 800fdd4:	2104      	movs	r1, #4
 800fdd6:	4638      	mov	r0, r7
 800fdd8:	f7ff ff62 	bl	800fca0 <__sfmoreglue>
 800fddc:	4604      	mov	r4, r0
 800fdde:	6030      	str	r0, [r6, #0]
 800fde0:	2800      	cmp	r0, #0
 800fde2:	d1d5      	bne.n	800fd90 <__sfp+0x24>
 800fde4:	f7ff ff78 	bl	800fcd8 <__sfp_lock_release>
 800fde8:	230c      	movs	r3, #12
 800fdea:	603b      	str	r3, [r7, #0]
 800fdec:	e7ee      	b.n	800fdcc <__sfp+0x60>
 800fdee:	bf00      	nop
 800fdf0:	0801171c 	.word	0x0801171c
 800fdf4:	ffff0001 	.word	0xffff0001

0800fdf8 <_fwalk_reent>:
 800fdf8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fdfc:	4606      	mov	r6, r0
 800fdfe:	4688      	mov	r8, r1
 800fe00:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800fe04:	2700      	movs	r7, #0
 800fe06:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800fe0a:	f1b9 0901 	subs.w	r9, r9, #1
 800fe0e:	d505      	bpl.n	800fe1c <_fwalk_reent+0x24>
 800fe10:	6824      	ldr	r4, [r4, #0]
 800fe12:	2c00      	cmp	r4, #0
 800fe14:	d1f7      	bne.n	800fe06 <_fwalk_reent+0xe>
 800fe16:	4638      	mov	r0, r7
 800fe18:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800fe1c:	89ab      	ldrh	r3, [r5, #12]
 800fe1e:	2b01      	cmp	r3, #1
 800fe20:	d907      	bls.n	800fe32 <_fwalk_reent+0x3a>
 800fe22:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800fe26:	3301      	adds	r3, #1
 800fe28:	d003      	beq.n	800fe32 <_fwalk_reent+0x3a>
 800fe2a:	4629      	mov	r1, r5
 800fe2c:	4630      	mov	r0, r6
 800fe2e:	47c0      	blx	r8
 800fe30:	4307      	orrs	r7, r0
 800fe32:	3568      	adds	r5, #104	; 0x68
 800fe34:	e7e9      	b.n	800fe0a <_fwalk_reent+0x12>

0800fe36 <__retarget_lock_init_recursive>:
 800fe36:	4770      	bx	lr

0800fe38 <__retarget_lock_acquire_recursive>:
 800fe38:	4770      	bx	lr

0800fe3a <__retarget_lock_release_recursive>:
 800fe3a:	4770      	bx	lr

0800fe3c <__swhatbuf_r>:
 800fe3c:	b570      	push	{r4, r5, r6, lr}
 800fe3e:	460e      	mov	r6, r1
 800fe40:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800fe44:	2900      	cmp	r1, #0
 800fe46:	b096      	sub	sp, #88	; 0x58
 800fe48:	4614      	mov	r4, r2
 800fe4a:	461d      	mov	r5, r3
 800fe4c:	da08      	bge.n	800fe60 <__swhatbuf_r+0x24>
 800fe4e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800fe52:	2200      	movs	r2, #0
 800fe54:	602a      	str	r2, [r5, #0]
 800fe56:	061a      	lsls	r2, r3, #24
 800fe58:	d410      	bmi.n	800fe7c <__swhatbuf_r+0x40>
 800fe5a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800fe5e:	e00e      	b.n	800fe7e <__swhatbuf_r+0x42>
 800fe60:	466a      	mov	r2, sp
 800fe62:	f000 f903 	bl	801006c <_fstat_r>
 800fe66:	2800      	cmp	r0, #0
 800fe68:	dbf1      	blt.n	800fe4e <__swhatbuf_r+0x12>
 800fe6a:	9a01      	ldr	r2, [sp, #4]
 800fe6c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800fe70:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800fe74:	425a      	negs	r2, r3
 800fe76:	415a      	adcs	r2, r3
 800fe78:	602a      	str	r2, [r5, #0]
 800fe7a:	e7ee      	b.n	800fe5a <__swhatbuf_r+0x1e>
 800fe7c:	2340      	movs	r3, #64	; 0x40
 800fe7e:	2000      	movs	r0, #0
 800fe80:	6023      	str	r3, [r4, #0]
 800fe82:	b016      	add	sp, #88	; 0x58
 800fe84:	bd70      	pop	{r4, r5, r6, pc}
	...

0800fe88 <__smakebuf_r>:
 800fe88:	898b      	ldrh	r3, [r1, #12]
 800fe8a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fe8c:	079d      	lsls	r5, r3, #30
 800fe8e:	4606      	mov	r6, r0
 800fe90:	460c      	mov	r4, r1
 800fe92:	d507      	bpl.n	800fea4 <__smakebuf_r+0x1c>
 800fe94:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800fe98:	6023      	str	r3, [r4, #0]
 800fe9a:	6123      	str	r3, [r4, #16]
 800fe9c:	2301      	movs	r3, #1
 800fe9e:	6163      	str	r3, [r4, #20]
 800fea0:	b002      	add	sp, #8
 800fea2:	bd70      	pop	{r4, r5, r6, pc}
 800fea4:	ab01      	add	r3, sp, #4
 800fea6:	466a      	mov	r2, sp
 800fea8:	f7ff ffc8 	bl	800fe3c <__swhatbuf_r>
 800feac:	9900      	ldr	r1, [sp, #0]
 800feae:	4605      	mov	r5, r0
 800feb0:	4630      	mov	r0, r6
 800feb2:	f7ff f963 	bl	800f17c <_malloc_r>
 800feb6:	b948      	cbnz	r0, 800fecc <__smakebuf_r+0x44>
 800feb8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800febc:	059a      	lsls	r2, r3, #22
 800febe:	d4ef      	bmi.n	800fea0 <__smakebuf_r+0x18>
 800fec0:	f023 0303 	bic.w	r3, r3, #3
 800fec4:	f043 0302 	orr.w	r3, r3, #2
 800fec8:	81a3      	strh	r3, [r4, #12]
 800feca:	e7e3      	b.n	800fe94 <__smakebuf_r+0xc>
 800fecc:	4b0d      	ldr	r3, [pc, #52]	; (800ff04 <__smakebuf_r+0x7c>)
 800fece:	62b3      	str	r3, [r6, #40]	; 0x28
 800fed0:	89a3      	ldrh	r3, [r4, #12]
 800fed2:	6020      	str	r0, [r4, #0]
 800fed4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800fed8:	81a3      	strh	r3, [r4, #12]
 800feda:	9b00      	ldr	r3, [sp, #0]
 800fedc:	6163      	str	r3, [r4, #20]
 800fede:	9b01      	ldr	r3, [sp, #4]
 800fee0:	6120      	str	r0, [r4, #16]
 800fee2:	b15b      	cbz	r3, 800fefc <__smakebuf_r+0x74>
 800fee4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800fee8:	4630      	mov	r0, r6
 800feea:	f000 f8d1 	bl	8010090 <_isatty_r>
 800feee:	b128      	cbz	r0, 800fefc <__smakebuf_r+0x74>
 800fef0:	89a3      	ldrh	r3, [r4, #12]
 800fef2:	f023 0303 	bic.w	r3, r3, #3
 800fef6:	f043 0301 	orr.w	r3, r3, #1
 800fefa:	81a3      	strh	r3, [r4, #12]
 800fefc:	89a0      	ldrh	r0, [r4, #12]
 800fefe:	4305      	orrs	r5, r0
 800ff00:	81a5      	strh	r5, [r4, #12]
 800ff02:	e7cd      	b.n	800fea0 <__smakebuf_r+0x18>
 800ff04:	0800fc95 	.word	0x0800fc95

0800ff08 <_malloc_usable_size_r>:
 800ff08:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800ff0c:	1f18      	subs	r0, r3, #4
 800ff0e:	2b00      	cmp	r3, #0
 800ff10:	bfbc      	itt	lt
 800ff12:	580b      	ldrlt	r3, [r1, r0]
 800ff14:	18c0      	addlt	r0, r0, r3
 800ff16:	4770      	bx	lr

0800ff18 <_raise_r>:
 800ff18:	291f      	cmp	r1, #31
 800ff1a:	b538      	push	{r3, r4, r5, lr}
 800ff1c:	4604      	mov	r4, r0
 800ff1e:	460d      	mov	r5, r1
 800ff20:	d904      	bls.n	800ff2c <_raise_r+0x14>
 800ff22:	2316      	movs	r3, #22
 800ff24:	6003      	str	r3, [r0, #0]
 800ff26:	f04f 30ff 	mov.w	r0, #4294967295
 800ff2a:	bd38      	pop	{r3, r4, r5, pc}
 800ff2c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800ff2e:	b112      	cbz	r2, 800ff36 <_raise_r+0x1e>
 800ff30:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800ff34:	b94b      	cbnz	r3, 800ff4a <_raise_r+0x32>
 800ff36:	4620      	mov	r0, r4
 800ff38:	f000 f830 	bl	800ff9c <_getpid_r>
 800ff3c:	462a      	mov	r2, r5
 800ff3e:	4601      	mov	r1, r0
 800ff40:	4620      	mov	r0, r4
 800ff42:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ff46:	f000 b817 	b.w	800ff78 <_kill_r>
 800ff4a:	2b01      	cmp	r3, #1
 800ff4c:	d00a      	beq.n	800ff64 <_raise_r+0x4c>
 800ff4e:	1c59      	adds	r1, r3, #1
 800ff50:	d103      	bne.n	800ff5a <_raise_r+0x42>
 800ff52:	2316      	movs	r3, #22
 800ff54:	6003      	str	r3, [r0, #0]
 800ff56:	2001      	movs	r0, #1
 800ff58:	e7e7      	b.n	800ff2a <_raise_r+0x12>
 800ff5a:	2400      	movs	r4, #0
 800ff5c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800ff60:	4628      	mov	r0, r5
 800ff62:	4798      	blx	r3
 800ff64:	2000      	movs	r0, #0
 800ff66:	e7e0      	b.n	800ff2a <_raise_r+0x12>

0800ff68 <raise>:
 800ff68:	4b02      	ldr	r3, [pc, #8]	; (800ff74 <raise+0xc>)
 800ff6a:	4601      	mov	r1, r0
 800ff6c:	6818      	ldr	r0, [r3, #0]
 800ff6e:	f7ff bfd3 	b.w	800ff18 <_raise_r>
 800ff72:	bf00      	nop
 800ff74:	2000013c 	.word	0x2000013c

0800ff78 <_kill_r>:
 800ff78:	b538      	push	{r3, r4, r5, lr}
 800ff7a:	4d07      	ldr	r5, [pc, #28]	; (800ff98 <_kill_r+0x20>)
 800ff7c:	2300      	movs	r3, #0
 800ff7e:	4604      	mov	r4, r0
 800ff80:	4608      	mov	r0, r1
 800ff82:	4611      	mov	r1, r2
 800ff84:	602b      	str	r3, [r5, #0]
 800ff86:	f7f7 fb7b 	bl	8007680 <_kill>
 800ff8a:	1c43      	adds	r3, r0, #1
 800ff8c:	d102      	bne.n	800ff94 <_kill_r+0x1c>
 800ff8e:	682b      	ldr	r3, [r5, #0]
 800ff90:	b103      	cbz	r3, 800ff94 <_kill_r+0x1c>
 800ff92:	6023      	str	r3, [r4, #0]
 800ff94:	bd38      	pop	{r3, r4, r5, pc}
 800ff96:	bf00      	nop
 800ff98:	20000c9c 	.word	0x20000c9c

0800ff9c <_getpid_r>:
 800ff9c:	f7f7 bb68 	b.w	8007670 <_getpid>

0800ffa0 <__sread>:
 800ffa0:	b510      	push	{r4, lr}
 800ffa2:	460c      	mov	r4, r1
 800ffa4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800ffa8:	f000 f894 	bl	80100d4 <_read_r>
 800ffac:	2800      	cmp	r0, #0
 800ffae:	bfab      	itete	ge
 800ffb0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800ffb2:	89a3      	ldrhlt	r3, [r4, #12]
 800ffb4:	181b      	addge	r3, r3, r0
 800ffb6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800ffba:	bfac      	ite	ge
 800ffbc:	6563      	strge	r3, [r4, #84]	; 0x54
 800ffbe:	81a3      	strhlt	r3, [r4, #12]
 800ffc0:	bd10      	pop	{r4, pc}

0800ffc2 <__swrite>:
 800ffc2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ffc6:	461f      	mov	r7, r3
 800ffc8:	898b      	ldrh	r3, [r1, #12]
 800ffca:	05db      	lsls	r3, r3, #23
 800ffcc:	4605      	mov	r5, r0
 800ffce:	460c      	mov	r4, r1
 800ffd0:	4616      	mov	r6, r2
 800ffd2:	d505      	bpl.n	800ffe0 <__swrite+0x1e>
 800ffd4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800ffd8:	2302      	movs	r3, #2
 800ffda:	2200      	movs	r2, #0
 800ffdc:	f000 f868 	bl	80100b0 <_lseek_r>
 800ffe0:	89a3      	ldrh	r3, [r4, #12]
 800ffe2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800ffe6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800ffea:	81a3      	strh	r3, [r4, #12]
 800ffec:	4632      	mov	r2, r6
 800ffee:	463b      	mov	r3, r7
 800fff0:	4628      	mov	r0, r5
 800fff2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800fff6:	f000 b817 	b.w	8010028 <_write_r>

0800fffa <__sseek>:
 800fffa:	b510      	push	{r4, lr}
 800fffc:	460c      	mov	r4, r1
 800fffe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8010002:	f000 f855 	bl	80100b0 <_lseek_r>
 8010006:	1c43      	adds	r3, r0, #1
 8010008:	89a3      	ldrh	r3, [r4, #12]
 801000a:	bf15      	itete	ne
 801000c:	6560      	strne	r0, [r4, #84]	; 0x54
 801000e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8010012:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8010016:	81a3      	strheq	r3, [r4, #12]
 8010018:	bf18      	it	ne
 801001a:	81a3      	strhne	r3, [r4, #12]
 801001c:	bd10      	pop	{r4, pc}

0801001e <__sclose>:
 801001e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8010022:	f000 b813 	b.w	801004c <_close_r>
	...

08010028 <_write_r>:
 8010028:	b538      	push	{r3, r4, r5, lr}
 801002a:	4d07      	ldr	r5, [pc, #28]	; (8010048 <_write_r+0x20>)
 801002c:	4604      	mov	r4, r0
 801002e:	4608      	mov	r0, r1
 8010030:	4611      	mov	r1, r2
 8010032:	2200      	movs	r2, #0
 8010034:	602a      	str	r2, [r5, #0]
 8010036:	461a      	mov	r2, r3
 8010038:	f7f7 fb59 	bl	80076ee <_write>
 801003c:	1c43      	adds	r3, r0, #1
 801003e:	d102      	bne.n	8010046 <_write_r+0x1e>
 8010040:	682b      	ldr	r3, [r5, #0]
 8010042:	b103      	cbz	r3, 8010046 <_write_r+0x1e>
 8010044:	6023      	str	r3, [r4, #0]
 8010046:	bd38      	pop	{r3, r4, r5, pc}
 8010048:	20000c9c 	.word	0x20000c9c

0801004c <_close_r>:
 801004c:	b538      	push	{r3, r4, r5, lr}
 801004e:	4d06      	ldr	r5, [pc, #24]	; (8010068 <_close_r+0x1c>)
 8010050:	2300      	movs	r3, #0
 8010052:	4604      	mov	r4, r0
 8010054:	4608      	mov	r0, r1
 8010056:	602b      	str	r3, [r5, #0]
 8010058:	f7f7 fb65 	bl	8007726 <_close>
 801005c:	1c43      	adds	r3, r0, #1
 801005e:	d102      	bne.n	8010066 <_close_r+0x1a>
 8010060:	682b      	ldr	r3, [r5, #0]
 8010062:	b103      	cbz	r3, 8010066 <_close_r+0x1a>
 8010064:	6023      	str	r3, [r4, #0]
 8010066:	bd38      	pop	{r3, r4, r5, pc}
 8010068:	20000c9c 	.word	0x20000c9c

0801006c <_fstat_r>:
 801006c:	b538      	push	{r3, r4, r5, lr}
 801006e:	4d07      	ldr	r5, [pc, #28]	; (801008c <_fstat_r+0x20>)
 8010070:	2300      	movs	r3, #0
 8010072:	4604      	mov	r4, r0
 8010074:	4608      	mov	r0, r1
 8010076:	4611      	mov	r1, r2
 8010078:	602b      	str	r3, [r5, #0]
 801007a:	f7f7 fb60 	bl	800773e <_fstat>
 801007e:	1c43      	adds	r3, r0, #1
 8010080:	d102      	bne.n	8010088 <_fstat_r+0x1c>
 8010082:	682b      	ldr	r3, [r5, #0]
 8010084:	b103      	cbz	r3, 8010088 <_fstat_r+0x1c>
 8010086:	6023      	str	r3, [r4, #0]
 8010088:	bd38      	pop	{r3, r4, r5, pc}
 801008a:	bf00      	nop
 801008c:	20000c9c 	.word	0x20000c9c

08010090 <_isatty_r>:
 8010090:	b538      	push	{r3, r4, r5, lr}
 8010092:	4d06      	ldr	r5, [pc, #24]	; (80100ac <_isatty_r+0x1c>)
 8010094:	2300      	movs	r3, #0
 8010096:	4604      	mov	r4, r0
 8010098:	4608      	mov	r0, r1
 801009a:	602b      	str	r3, [r5, #0]
 801009c:	f7f7 fb5f 	bl	800775e <_isatty>
 80100a0:	1c43      	adds	r3, r0, #1
 80100a2:	d102      	bne.n	80100aa <_isatty_r+0x1a>
 80100a4:	682b      	ldr	r3, [r5, #0]
 80100a6:	b103      	cbz	r3, 80100aa <_isatty_r+0x1a>
 80100a8:	6023      	str	r3, [r4, #0]
 80100aa:	bd38      	pop	{r3, r4, r5, pc}
 80100ac:	20000c9c 	.word	0x20000c9c

080100b0 <_lseek_r>:
 80100b0:	b538      	push	{r3, r4, r5, lr}
 80100b2:	4d07      	ldr	r5, [pc, #28]	; (80100d0 <_lseek_r+0x20>)
 80100b4:	4604      	mov	r4, r0
 80100b6:	4608      	mov	r0, r1
 80100b8:	4611      	mov	r1, r2
 80100ba:	2200      	movs	r2, #0
 80100bc:	602a      	str	r2, [r5, #0]
 80100be:	461a      	mov	r2, r3
 80100c0:	f7f7 fb58 	bl	8007774 <_lseek>
 80100c4:	1c43      	adds	r3, r0, #1
 80100c6:	d102      	bne.n	80100ce <_lseek_r+0x1e>
 80100c8:	682b      	ldr	r3, [r5, #0]
 80100ca:	b103      	cbz	r3, 80100ce <_lseek_r+0x1e>
 80100cc:	6023      	str	r3, [r4, #0]
 80100ce:	bd38      	pop	{r3, r4, r5, pc}
 80100d0:	20000c9c 	.word	0x20000c9c

080100d4 <_read_r>:
 80100d4:	b538      	push	{r3, r4, r5, lr}
 80100d6:	4d07      	ldr	r5, [pc, #28]	; (80100f4 <_read_r+0x20>)
 80100d8:	4604      	mov	r4, r0
 80100da:	4608      	mov	r0, r1
 80100dc:	4611      	mov	r1, r2
 80100de:	2200      	movs	r2, #0
 80100e0:	602a      	str	r2, [r5, #0]
 80100e2:	461a      	mov	r2, r3
 80100e4:	f7f7 fae6 	bl	80076b4 <_read>
 80100e8:	1c43      	adds	r3, r0, #1
 80100ea:	d102      	bne.n	80100f2 <_read_r+0x1e>
 80100ec:	682b      	ldr	r3, [r5, #0]
 80100ee:	b103      	cbz	r3, 80100f2 <_read_r+0x1e>
 80100f0:	6023      	str	r3, [r4, #0]
 80100f2:	bd38      	pop	{r3, r4, r5, pc}
 80100f4:	20000c9c 	.word	0x20000c9c

080100f8 <atan>:
 80100f8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80100fc:	ec55 4b10 	vmov	r4, r5, d0
 8010100:	4bc3      	ldr	r3, [pc, #780]	; (8010410 <atan+0x318>)
 8010102:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 8010106:	429e      	cmp	r6, r3
 8010108:	46ab      	mov	fp, r5
 801010a:	dd18      	ble.n	801013e <atan+0x46>
 801010c:	4bc1      	ldr	r3, [pc, #772]	; (8010414 <atan+0x31c>)
 801010e:	429e      	cmp	r6, r3
 8010110:	dc01      	bgt.n	8010116 <atan+0x1e>
 8010112:	d109      	bne.n	8010128 <atan+0x30>
 8010114:	b144      	cbz	r4, 8010128 <atan+0x30>
 8010116:	4622      	mov	r2, r4
 8010118:	462b      	mov	r3, r5
 801011a:	4620      	mov	r0, r4
 801011c:	4629      	mov	r1, r5
 801011e:	f7f0 f8d5 	bl	80002cc <__adddf3>
 8010122:	4604      	mov	r4, r0
 8010124:	460d      	mov	r5, r1
 8010126:	e006      	b.n	8010136 <atan+0x3e>
 8010128:	f1bb 0f00 	cmp.w	fp, #0
 801012c:	f300 8131 	bgt.w	8010392 <atan+0x29a>
 8010130:	a59b      	add	r5, pc, #620	; (adr r5, 80103a0 <atan+0x2a8>)
 8010132:	e9d5 4500 	ldrd	r4, r5, [r5]
 8010136:	ec45 4b10 	vmov	d0, r4, r5
 801013a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801013e:	4bb6      	ldr	r3, [pc, #728]	; (8010418 <atan+0x320>)
 8010140:	429e      	cmp	r6, r3
 8010142:	dc14      	bgt.n	801016e <atan+0x76>
 8010144:	f1a3 73de 	sub.w	r3, r3, #29097984	; 0x1bc0000
 8010148:	429e      	cmp	r6, r3
 801014a:	dc0d      	bgt.n	8010168 <atan+0x70>
 801014c:	a396      	add	r3, pc, #600	; (adr r3, 80103a8 <atan+0x2b0>)
 801014e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010152:	ee10 0a10 	vmov	r0, s0
 8010156:	4629      	mov	r1, r5
 8010158:	f7f0 f8b8 	bl	80002cc <__adddf3>
 801015c:	4baf      	ldr	r3, [pc, #700]	; (801041c <atan+0x324>)
 801015e:	2200      	movs	r2, #0
 8010160:	f7f0 fcfa 	bl	8000b58 <__aeabi_dcmpgt>
 8010164:	2800      	cmp	r0, #0
 8010166:	d1e6      	bne.n	8010136 <atan+0x3e>
 8010168:	f04f 3aff 	mov.w	sl, #4294967295
 801016c:	e02b      	b.n	80101c6 <atan+0xce>
 801016e:	f000 f963 	bl	8010438 <fabs>
 8010172:	4bab      	ldr	r3, [pc, #684]	; (8010420 <atan+0x328>)
 8010174:	429e      	cmp	r6, r3
 8010176:	ec55 4b10 	vmov	r4, r5, d0
 801017a:	f300 80bf 	bgt.w	80102fc <atan+0x204>
 801017e:	f5a3 2350 	sub.w	r3, r3, #851968	; 0xd0000
 8010182:	429e      	cmp	r6, r3
 8010184:	f300 80a0 	bgt.w	80102c8 <atan+0x1d0>
 8010188:	ee10 2a10 	vmov	r2, s0
 801018c:	ee10 0a10 	vmov	r0, s0
 8010190:	462b      	mov	r3, r5
 8010192:	4629      	mov	r1, r5
 8010194:	f7f0 f89a 	bl	80002cc <__adddf3>
 8010198:	4ba0      	ldr	r3, [pc, #640]	; (801041c <atan+0x324>)
 801019a:	2200      	movs	r2, #0
 801019c:	f7f0 f894 	bl	80002c8 <__aeabi_dsub>
 80101a0:	2200      	movs	r2, #0
 80101a2:	4606      	mov	r6, r0
 80101a4:	460f      	mov	r7, r1
 80101a6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80101aa:	4620      	mov	r0, r4
 80101ac:	4629      	mov	r1, r5
 80101ae:	f7f0 f88d 	bl	80002cc <__adddf3>
 80101b2:	4602      	mov	r2, r0
 80101b4:	460b      	mov	r3, r1
 80101b6:	4630      	mov	r0, r6
 80101b8:	4639      	mov	r1, r7
 80101ba:	f7f0 fb67 	bl	800088c <__aeabi_ddiv>
 80101be:	f04f 0a00 	mov.w	sl, #0
 80101c2:	4604      	mov	r4, r0
 80101c4:	460d      	mov	r5, r1
 80101c6:	4622      	mov	r2, r4
 80101c8:	462b      	mov	r3, r5
 80101ca:	4620      	mov	r0, r4
 80101cc:	4629      	mov	r1, r5
 80101ce:	f7f0 fa33 	bl	8000638 <__aeabi_dmul>
 80101d2:	4602      	mov	r2, r0
 80101d4:	460b      	mov	r3, r1
 80101d6:	4680      	mov	r8, r0
 80101d8:	4689      	mov	r9, r1
 80101da:	f7f0 fa2d 	bl	8000638 <__aeabi_dmul>
 80101de:	a374      	add	r3, pc, #464	; (adr r3, 80103b0 <atan+0x2b8>)
 80101e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80101e4:	4606      	mov	r6, r0
 80101e6:	460f      	mov	r7, r1
 80101e8:	f7f0 fa26 	bl	8000638 <__aeabi_dmul>
 80101ec:	a372      	add	r3, pc, #456	; (adr r3, 80103b8 <atan+0x2c0>)
 80101ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80101f2:	f7f0 f86b 	bl	80002cc <__adddf3>
 80101f6:	4632      	mov	r2, r6
 80101f8:	463b      	mov	r3, r7
 80101fa:	f7f0 fa1d 	bl	8000638 <__aeabi_dmul>
 80101fe:	a370      	add	r3, pc, #448	; (adr r3, 80103c0 <atan+0x2c8>)
 8010200:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010204:	f7f0 f862 	bl	80002cc <__adddf3>
 8010208:	4632      	mov	r2, r6
 801020a:	463b      	mov	r3, r7
 801020c:	f7f0 fa14 	bl	8000638 <__aeabi_dmul>
 8010210:	a36d      	add	r3, pc, #436	; (adr r3, 80103c8 <atan+0x2d0>)
 8010212:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010216:	f7f0 f859 	bl	80002cc <__adddf3>
 801021a:	4632      	mov	r2, r6
 801021c:	463b      	mov	r3, r7
 801021e:	f7f0 fa0b 	bl	8000638 <__aeabi_dmul>
 8010222:	a36b      	add	r3, pc, #428	; (adr r3, 80103d0 <atan+0x2d8>)
 8010224:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010228:	f7f0 f850 	bl	80002cc <__adddf3>
 801022c:	4632      	mov	r2, r6
 801022e:	463b      	mov	r3, r7
 8010230:	f7f0 fa02 	bl	8000638 <__aeabi_dmul>
 8010234:	a368      	add	r3, pc, #416	; (adr r3, 80103d8 <atan+0x2e0>)
 8010236:	e9d3 2300 	ldrd	r2, r3, [r3]
 801023a:	f7f0 f847 	bl	80002cc <__adddf3>
 801023e:	4642      	mov	r2, r8
 8010240:	464b      	mov	r3, r9
 8010242:	f7f0 f9f9 	bl	8000638 <__aeabi_dmul>
 8010246:	a366      	add	r3, pc, #408	; (adr r3, 80103e0 <atan+0x2e8>)
 8010248:	e9d3 2300 	ldrd	r2, r3, [r3]
 801024c:	4680      	mov	r8, r0
 801024e:	4689      	mov	r9, r1
 8010250:	4630      	mov	r0, r6
 8010252:	4639      	mov	r1, r7
 8010254:	f7f0 f9f0 	bl	8000638 <__aeabi_dmul>
 8010258:	a363      	add	r3, pc, #396	; (adr r3, 80103e8 <atan+0x2f0>)
 801025a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801025e:	f7f0 f833 	bl	80002c8 <__aeabi_dsub>
 8010262:	4632      	mov	r2, r6
 8010264:	463b      	mov	r3, r7
 8010266:	f7f0 f9e7 	bl	8000638 <__aeabi_dmul>
 801026a:	a361      	add	r3, pc, #388	; (adr r3, 80103f0 <atan+0x2f8>)
 801026c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010270:	f7f0 f82a 	bl	80002c8 <__aeabi_dsub>
 8010274:	4632      	mov	r2, r6
 8010276:	463b      	mov	r3, r7
 8010278:	f7f0 f9de 	bl	8000638 <__aeabi_dmul>
 801027c:	a35e      	add	r3, pc, #376	; (adr r3, 80103f8 <atan+0x300>)
 801027e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010282:	f7f0 f821 	bl	80002c8 <__aeabi_dsub>
 8010286:	4632      	mov	r2, r6
 8010288:	463b      	mov	r3, r7
 801028a:	f7f0 f9d5 	bl	8000638 <__aeabi_dmul>
 801028e:	a35c      	add	r3, pc, #368	; (adr r3, 8010400 <atan+0x308>)
 8010290:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010294:	f7f0 f818 	bl	80002c8 <__aeabi_dsub>
 8010298:	4632      	mov	r2, r6
 801029a:	463b      	mov	r3, r7
 801029c:	f7f0 f9cc 	bl	8000638 <__aeabi_dmul>
 80102a0:	4602      	mov	r2, r0
 80102a2:	460b      	mov	r3, r1
 80102a4:	4640      	mov	r0, r8
 80102a6:	4649      	mov	r1, r9
 80102a8:	f7f0 f810 	bl	80002cc <__adddf3>
 80102ac:	4622      	mov	r2, r4
 80102ae:	462b      	mov	r3, r5
 80102b0:	f7f0 f9c2 	bl	8000638 <__aeabi_dmul>
 80102b4:	f1ba 3fff 	cmp.w	sl, #4294967295
 80102b8:	4602      	mov	r2, r0
 80102ba:	460b      	mov	r3, r1
 80102bc:	d14b      	bne.n	8010356 <atan+0x25e>
 80102be:	4620      	mov	r0, r4
 80102c0:	4629      	mov	r1, r5
 80102c2:	f7f0 f801 	bl	80002c8 <__aeabi_dsub>
 80102c6:	e72c      	b.n	8010122 <atan+0x2a>
 80102c8:	ee10 0a10 	vmov	r0, s0
 80102cc:	4b53      	ldr	r3, [pc, #332]	; (801041c <atan+0x324>)
 80102ce:	2200      	movs	r2, #0
 80102d0:	4629      	mov	r1, r5
 80102d2:	f7ef fff9 	bl	80002c8 <__aeabi_dsub>
 80102d6:	4b51      	ldr	r3, [pc, #324]	; (801041c <atan+0x324>)
 80102d8:	4606      	mov	r6, r0
 80102da:	460f      	mov	r7, r1
 80102dc:	2200      	movs	r2, #0
 80102de:	4620      	mov	r0, r4
 80102e0:	4629      	mov	r1, r5
 80102e2:	f7ef fff3 	bl	80002cc <__adddf3>
 80102e6:	4602      	mov	r2, r0
 80102e8:	460b      	mov	r3, r1
 80102ea:	4630      	mov	r0, r6
 80102ec:	4639      	mov	r1, r7
 80102ee:	f7f0 facd 	bl	800088c <__aeabi_ddiv>
 80102f2:	f04f 0a01 	mov.w	sl, #1
 80102f6:	4604      	mov	r4, r0
 80102f8:	460d      	mov	r5, r1
 80102fa:	e764      	b.n	80101c6 <atan+0xce>
 80102fc:	4b49      	ldr	r3, [pc, #292]	; (8010424 <atan+0x32c>)
 80102fe:	429e      	cmp	r6, r3
 8010300:	da1d      	bge.n	801033e <atan+0x246>
 8010302:	ee10 0a10 	vmov	r0, s0
 8010306:	4b48      	ldr	r3, [pc, #288]	; (8010428 <atan+0x330>)
 8010308:	2200      	movs	r2, #0
 801030a:	4629      	mov	r1, r5
 801030c:	f7ef ffdc 	bl	80002c8 <__aeabi_dsub>
 8010310:	4b45      	ldr	r3, [pc, #276]	; (8010428 <atan+0x330>)
 8010312:	4606      	mov	r6, r0
 8010314:	460f      	mov	r7, r1
 8010316:	2200      	movs	r2, #0
 8010318:	4620      	mov	r0, r4
 801031a:	4629      	mov	r1, r5
 801031c:	f7f0 f98c 	bl	8000638 <__aeabi_dmul>
 8010320:	4b3e      	ldr	r3, [pc, #248]	; (801041c <atan+0x324>)
 8010322:	2200      	movs	r2, #0
 8010324:	f7ef ffd2 	bl	80002cc <__adddf3>
 8010328:	4602      	mov	r2, r0
 801032a:	460b      	mov	r3, r1
 801032c:	4630      	mov	r0, r6
 801032e:	4639      	mov	r1, r7
 8010330:	f7f0 faac 	bl	800088c <__aeabi_ddiv>
 8010334:	f04f 0a02 	mov.w	sl, #2
 8010338:	4604      	mov	r4, r0
 801033a:	460d      	mov	r5, r1
 801033c:	e743      	b.n	80101c6 <atan+0xce>
 801033e:	462b      	mov	r3, r5
 8010340:	ee10 2a10 	vmov	r2, s0
 8010344:	4939      	ldr	r1, [pc, #228]	; (801042c <atan+0x334>)
 8010346:	2000      	movs	r0, #0
 8010348:	f7f0 faa0 	bl	800088c <__aeabi_ddiv>
 801034c:	f04f 0a03 	mov.w	sl, #3
 8010350:	4604      	mov	r4, r0
 8010352:	460d      	mov	r5, r1
 8010354:	e737      	b.n	80101c6 <atan+0xce>
 8010356:	4b36      	ldr	r3, [pc, #216]	; (8010430 <atan+0x338>)
 8010358:	4e36      	ldr	r6, [pc, #216]	; (8010434 <atan+0x33c>)
 801035a:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 801035e:	eb03 0aca 	add.w	sl, r3, sl, lsl #3
 8010362:	e9da 2300 	ldrd	r2, r3, [sl]
 8010366:	f7ef ffaf 	bl	80002c8 <__aeabi_dsub>
 801036a:	4622      	mov	r2, r4
 801036c:	462b      	mov	r3, r5
 801036e:	f7ef ffab 	bl	80002c8 <__aeabi_dsub>
 8010372:	4602      	mov	r2, r0
 8010374:	460b      	mov	r3, r1
 8010376:	e9d6 0100 	ldrd	r0, r1, [r6]
 801037a:	f7ef ffa5 	bl	80002c8 <__aeabi_dsub>
 801037e:	f1bb 0f00 	cmp.w	fp, #0
 8010382:	4604      	mov	r4, r0
 8010384:	460d      	mov	r5, r1
 8010386:	f6bf aed6 	bge.w	8010136 <atan+0x3e>
 801038a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 801038e:	461d      	mov	r5, r3
 8010390:	e6d1      	b.n	8010136 <atan+0x3e>
 8010392:	a51d      	add	r5, pc, #116	; (adr r5, 8010408 <atan+0x310>)
 8010394:	e9d5 4500 	ldrd	r4, r5, [r5]
 8010398:	e6cd      	b.n	8010136 <atan+0x3e>
 801039a:	bf00      	nop
 801039c:	f3af 8000 	nop.w
 80103a0:	54442d18 	.word	0x54442d18
 80103a4:	bff921fb 	.word	0xbff921fb
 80103a8:	8800759c 	.word	0x8800759c
 80103ac:	7e37e43c 	.word	0x7e37e43c
 80103b0:	e322da11 	.word	0xe322da11
 80103b4:	3f90ad3a 	.word	0x3f90ad3a
 80103b8:	24760deb 	.word	0x24760deb
 80103bc:	3fa97b4b 	.word	0x3fa97b4b
 80103c0:	a0d03d51 	.word	0xa0d03d51
 80103c4:	3fb10d66 	.word	0x3fb10d66
 80103c8:	c54c206e 	.word	0xc54c206e
 80103cc:	3fb745cd 	.word	0x3fb745cd
 80103d0:	920083ff 	.word	0x920083ff
 80103d4:	3fc24924 	.word	0x3fc24924
 80103d8:	5555550d 	.word	0x5555550d
 80103dc:	3fd55555 	.word	0x3fd55555
 80103e0:	2c6a6c2f 	.word	0x2c6a6c2f
 80103e4:	bfa2b444 	.word	0xbfa2b444
 80103e8:	52defd9a 	.word	0x52defd9a
 80103ec:	3fadde2d 	.word	0x3fadde2d
 80103f0:	af749a6d 	.word	0xaf749a6d
 80103f4:	3fb3b0f2 	.word	0x3fb3b0f2
 80103f8:	fe231671 	.word	0xfe231671
 80103fc:	3fbc71c6 	.word	0x3fbc71c6
 8010400:	9998ebc4 	.word	0x9998ebc4
 8010404:	3fc99999 	.word	0x3fc99999
 8010408:	54442d18 	.word	0x54442d18
 801040c:	3ff921fb 	.word	0x3ff921fb
 8010410:	440fffff 	.word	0x440fffff
 8010414:	7ff00000 	.word	0x7ff00000
 8010418:	3fdbffff 	.word	0x3fdbffff
 801041c:	3ff00000 	.word	0x3ff00000
 8010420:	3ff2ffff 	.word	0x3ff2ffff
 8010424:	40038000 	.word	0x40038000
 8010428:	3ff80000 	.word	0x3ff80000
 801042c:	bff00000 	.word	0xbff00000
 8010430:	08011b18 	.word	0x08011b18
 8010434:	08011af8 	.word	0x08011af8

08010438 <fabs>:
 8010438:	ec51 0b10 	vmov	r0, r1, d0
 801043c:	ee10 2a10 	vmov	r2, s0
 8010440:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8010444:	ec43 2b10 	vmov	d0, r2, r3
 8010448:	4770      	bx	lr
 801044a:	0000      	movs	r0, r0
 801044c:	0000      	movs	r0, r0
	...

08010450 <tan>:
 8010450:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010452:	ec53 2b10 	vmov	r2, r3, d0
 8010456:	4816      	ldr	r0, [pc, #88]	; (80104b0 <tan+0x60>)
 8010458:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 801045c:	4281      	cmp	r1, r0
 801045e:	dc07      	bgt.n	8010470 <tan+0x20>
 8010460:	ed9f 1b11 	vldr	d1, [pc, #68]	; 80104a8 <tan+0x58>
 8010464:	2001      	movs	r0, #1
 8010466:	b005      	add	sp, #20
 8010468:	f85d eb04 	ldr.w	lr, [sp], #4
 801046c:	f000 bd80 	b.w	8010f70 <__kernel_tan>
 8010470:	4810      	ldr	r0, [pc, #64]	; (80104b4 <tan+0x64>)
 8010472:	4281      	cmp	r1, r0
 8010474:	dd09      	ble.n	801048a <tan+0x3a>
 8010476:	ee10 0a10 	vmov	r0, s0
 801047a:	4619      	mov	r1, r3
 801047c:	f7ef ff24 	bl	80002c8 <__aeabi_dsub>
 8010480:	ec41 0b10 	vmov	d0, r0, r1
 8010484:	b005      	add	sp, #20
 8010486:	f85d fb04 	ldr.w	pc, [sp], #4
 801048a:	4668      	mov	r0, sp
 801048c:	f000 f814 	bl	80104b8 <__ieee754_rem_pio2>
 8010490:	0040      	lsls	r0, r0, #1
 8010492:	f000 0002 	and.w	r0, r0, #2
 8010496:	ed9d 1b02 	vldr	d1, [sp, #8]
 801049a:	ed9d 0b00 	vldr	d0, [sp]
 801049e:	f1c0 0001 	rsb	r0, r0, #1
 80104a2:	f000 fd65 	bl	8010f70 <__kernel_tan>
 80104a6:	e7ed      	b.n	8010484 <tan+0x34>
	...
 80104b0:	3fe921fb 	.word	0x3fe921fb
 80104b4:	7fefffff 	.word	0x7fefffff

080104b8 <__ieee754_rem_pio2>:
 80104b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80104bc:	ed2d 8b02 	vpush	{d8}
 80104c0:	ec55 4b10 	vmov	r4, r5, d0
 80104c4:	4bca      	ldr	r3, [pc, #808]	; (80107f0 <__ieee754_rem_pio2+0x338>)
 80104c6:	b08b      	sub	sp, #44	; 0x2c
 80104c8:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 80104cc:	4598      	cmp	r8, r3
 80104ce:	4682      	mov	sl, r0
 80104d0:	9502      	str	r5, [sp, #8]
 80104d2:	dc08      	bgt.n	80104e6 <__ieee754_rem_pio2+0x2e>
 80104d4:	2200      	movs	r2, #0
 80104d6:	2300      	movs	r3, #0
 80104d8:	ed80 0b00 	vstr	d0, [r0]
 80104dc:	e9c0 2302 	strd	r2, r3, [r0, #8]
 80104e0:	f04f 0b00 	mov.w	fp, #0
 80104e4:	e028      	b.n	8010538 <__ieee754_rem_pio2+0x80>
 80104e6:	4bc3      	ldr	r3, [pc, #780]	; (80107f4 <__ieee754_rem_pio2+0x33c>)
 80104e8:	4598      	cmp	r8, r3
 80104ea:	dc78      	bgt.n	80105de <__ieee754_rem_pio2+0x126>
 80104ec:	9b02      	ldr	r3, [sp, #8]
 80104ee:	4ec2      	ldr	r6, [pc, #776]	; (80107f8 <__ieee754_rem_pio2+0x340>)
 80104f0:	2b00      	cmp	r3, #0
 80104f2:	ee10 0a10 	vmov	r0, s0
 80104f6:	a3b0      	add	r3, pc, #704	; (adr r3, 80107b8 <__ieee754_rem_pio2+0x300>)
 80104f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80104fc:	4629      	mov	r1, r5
 80104fe:	dd39      	ble.n	8010574 <__ieee754_rem_pio2+0xbc>
 8010500:	f7ef fee2 	bl	80002c8 <__aeabi_dsub>
 8010504:	45b0      	cmp	r8, r6
 8010506:	4604      	mov	r4, r0
 8010508:	460d      	mov	r5, r1
 801050a:	d01b      	beq.n	8010544 <__ieee754_rem_pio2+0x8c>
 801050c:	a3ac      	add	r3, pc, #688	; (adr r3, 80107c0 <__ieee754_rem_pio2+0x308>)
 801050e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010512:	f7ef fed9 	bl	80002c8 <__aeabi_dsub>
 8010516:	4602      	mov	r2, r0
 8010518:	460b      	mov	r3, r1
 801051a:	e9ca 2300 	strd	r2, r3, [sl]
 801051e:	4620      	mov	r0, r4
 8010520:	4629      	mov	r1, r5
 8010522:	f7ef fed1 	bl	80002c8 <__aeabi_dsub>
 8010526:	a3a6      	add	r3, pc, #664	; (adr r3, 80107c0 <__ieee754_rem_pio2+0x308>)
 8010528:	e9d3 2300 	ldrd	r2, r3, [r3]
 801052c:	f7ef fecc 	bl	80002c8 <__aeabi_dsub>
 8010530:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8010534:	f04f 0b01 	mov.w	fp, #1
 8010538:	4658      	mov	r0, fp
 801053a:	b00b      	add	sp, #44	; 0x2c
 801053c:	ecbd 8b02 	vpop	{d8}
 8010540:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010544:	a3a0      	add	r3, pc, #640	; (adr r3, 80107c8 <__ieee754_rem_pio2+0x310>)
 8010546:	e9d3 2300 	ldrd	r2, r3, [r3]
 801054a:	f7ef febd 	bl	80002c8 <__aeabi_dsub>
 801054e:	a3a0      	add	r3, pc, #640	; (adr r3, 80107d0 <__ieee754_rem_pio2+0x318>)
 8010550:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010554:	4604      	mov	r4, r0
 8010556:	460d      	mov	r5, r1
 8010558:	f7ef feb6 	bl	80002c8 <__aeabi_dsub>
 801055c:	4602      	mov	r2, r0
 801055e:	460b      	mov	r3, r1
 8010560:	e9ca 2300 	strd	r2, r3, [sl]
 8010564:	4620      	mov	r0, r4
 8010566:	4629      	mov	r1, r5
 8010568:	f7ef feae 	bl	80002c8 <__aeabi_dsub>
 801056c:	a398      	add	r3, pc, #608	; (adr r3, 80107d0 <__ieee754_rem_pio2+0x318>)
 801056e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010572:	e7db      	b.n	801052c <__ieee754_rem_pio2+0x74>
 8010574:	f7ef feaa 	bl	80002cc <__adddf3>
 8010578:	45b0      	cmp	r8, r6
 801057a:	4604      	mov	r4, r0
 801057c:	460d      	mov	r5, r1
 801057e:	d016      	beq.n	80105ae <__ieee754_rem_pio2+0xf6>
 8010580:	a38f      	add	r3, pc, #572	; (adr r3, 80107c0 <__ieee754_rem_pio2+0x308>)
 8010582:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010586:	f7ef fea1 	bl	80002cc <__adddf3>
 801058a:	4602      	mov	r2, r0
 801058c:	460b      	mov	r3, r1
 801058e:	e9ca 2300 	strd	r2, r3, [sl]
 8010592:	4620      	mov	r0, r4
 8010594:	4629      	mov	r1, r5
 8010596:	f7ef fe97 	bl	80002c8 <__aeabi_dsub>
 801059a:	a389      	add	r3, pc, #548	; (adr r3, 80107c0 <__ieee754_rem_pio2+0x308>)
 801059c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80105a0:	f7ef fe94 	bl	80002cc <__adddf3>
 80105a4:	f04f 3bff 	mov.w	fp, #4294967295
 80105a8:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80105ac:	e7c4      	b.n	8010538 <__ieee754_rem_pio2+0x80>
 80105ae:	a386      	add	r3, pc, #536	; (adr r3, 80107c8 <__ieee754_rem_pio2+0x310>)
 80105b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80105b4:	f7ef fe8a 	bl	80002cc <__adddf3>
 80105b8:	a385      	add	r3, pc, #532	; (adr r3, 80107d0 <__ieee754_rem_pio2+0x318>)
 80105ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80105be:	4604      	mov	r4, r0
 80105c0:	460d      	mov	r5, r1
 80105c2:	f7ef fe83 	bl	80002cc <__adddf3>
 80105c6:	4602      	mov	r2, r0
 80105c8:	460b      	mov	r3, r1
 80105ca:	e9ca 2300 	strd	r2, r3, [sl]
 80105ce:	4620      	mov	r0, r4
 80105d0:	4629      	mov	r1, r5
 80105d2:	f7ef fe79 	bl	80002c8 <__aeabi_dsub>
 80105d6:	a37e      	add	r3, pc, #504	; (adr r3, 80107d0 <__ieee754_rem_pio2+0x318>)
 80105d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80105dc:	e7e0      	b.n	80105a0 <__ieee754_rem_pio2+0xe8>
 80105de:	4b87      	ldr	r3, [pc, #540]	; (80107fc <__ieee754_rem_pio2+0x344>)
 80105e0:	4598      	cmp	r8, r3
 80105e2:	f300 80d9 	bgt.w	8010798 <__ieee754_rem_pio2+0x2e0>
 80105e6:	f7ff ff27 	bl	8010438 <fabs>
 80105ea:	ec55 4b10 	vmov	r4, r5, d0
 80105ee:	ee10 0a10 	vmov	r0, s0
 80105f2:	a379      	add	r3, pc, #484	; (adr r3, 80107d8 <__ieee754_rem_pio2+0x320>)
 80105f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80105f8:	4629      	mov	r1, r5
 80105fa:	f7f0 f81d 	bl	8000638 <__aeabi_dmul>
 80105fe:	4b80      	ldr	r3, [pc, #512]	; (8010800 <__ieee754_rem_pio2+0x348>)
 8010600:	2200      	movs	r2, #0
 8010602:	f7ef fe63 	bl	80002cc <__adddf3>
 8010606:	f7f0 fac7 	bl	8000b98 <__aeabi_d2iz>
 801060a:	4683      	mov	fp, r0
 801060c:	f7ef ffaa 	bl	8000564 <__aeabi_i2d>
 8010610:	4602      	mov	r2, r0
 8010612:	460b      	mov	r3, r1
 8010614:	ec43 2b18 	vmov	d8, r2, r3
 8010618:	a367      	add	r3, pc, #412	; (adr r3, 80107b8 <__ieee754_rem_pio2+0x300>)
 801061a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801061e:	f7f0 f80b 	bl	8000638 <__aeabi_dmul>
 8010622:	4602      	mov	r2, r0
 8010624:	460b      	mov	r3, r1
 8010626:	4620      	mov	r0, r4
 8010628:	4629      	mov	r1, r5
 801062a:	f7ef fe4d 	bl	80002c8 <__aeabi_dsub>
 801062e:	a364      	add	r3, pc, #400	; (adr r3, 80107c0 <__ieee754_rem_pio2+0x308>)
 8010630:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010634:	4606      	mov	r6, r0
 8010636:	460f      	mov	r7, r1
 8010638:	ec51 0b18 	vmov	r0, r1, d8
 801063c:	f7ef fffc 	bl	8000638 <__aeabi_dmul>
 8010640:	f1bb 0f1f 	cmp.w	fp, #31
 8010644:	4604      	mov	r4, r0
 8010646:	460d      	mov	r5, r1
 8010648:	dc0d      	bgt.n	8010666 <__ieee754_rem_pio2+0x1ae>
 801064a:	4b6e      	ldr	r3, [pc, #440]	; (8010804 <__ieee754_rem_pio2+0x34c>)
 801064c:	f10b 32ff 	add.w	r2, fp, #4294967295
 8010650:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8010654:	4543      	cmp	r3, r8
 8010656:	d006      	beq.n	8010666 <__ieee754_rem_pio2+0x1ae>
 8010658:	4622      	mov	r2, r4
 801065a:	462b      	mov	r3, r5
 801065c:	4630      	mov	r0, r6
 801065e:	4639      	mov	r1, r7
 8010660:	f7ef fe32 	bl	80002c8 <__aeabi_dsub>
 8010664:	e00f      	b.n	8010686 <__ieee754_rem_pio2+0x1ce>
 8010666:	462b      	mov	r3, r5
 8010668:	4622      	mov	r2, r4
 801066a:	4630      	mov	r0, r6
 801066c:	4639      	mov	r1, r7
 801066e:	f7ef fe2b 	bl	80002c8 <__aeabi_dsub>
 8010672:	ea4f 5328 	mov.w	r3, r8, asr #20
 8010676:	9303      	str	r3, [sp, #12]
 8010678:	f3c1 530a 	ubfx	r3, r1, #20, #11
 801067c:	ebc3 5818 	rsb	r8, r3, r8, lsr #20
 8010680:	f1b8 0f10 	cmp.w	r8, #16
 8010684:	dc02      	bgt.n	801068c <__ieee754_rem_pio2+0x1d4>
 8010686:	e9ca 0100 	strd	r0, r1, [sl]
 801068a:	e039      	b.n	8010700 <__ieee754_rem_pio2+0x248>
 801068c:	a34e      	add	r3, pc, #312	; (adr r3, 80107c8 <__ieee754_rem_pio2+0x310>)
 801068e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010692:	ec51 0b18 	vmov	r0, r1, d8
 8010696:	f7ef ffcf 	bl	8000638 <__aeabi_dmul>
 801069a:	4604      	mov	r4, r0
 801069c:	460d      	mov	r5, r1
 801069e:	4602      	mov	r2, r0
 80106a0:	460b      	mov	r3, r1
 80106a2:	4630      	mov	r0, r6
 80106a4:	4639      	mov	r1, r7
 80106a6:	f7ef fe0f 	bl	80002c8 <__aeabi_dsub>
 80106aa:	4602      	mov	r2, r0
 80106ac:	460b      	mov	r3, r1
 80106ae:	4680      	mov	r8, r0
 80106b0:	4689      	mov	r9, r1
 80106b2:	4630      	mov	r0, r6
 80106b4:	4639      	mov	r1, r7
 80106b6:	f7ef fe07 	bl	80002c8 <__aeabi_dsub>
 80106ba:	4622      	mov	r2, r4
 80106bc:	462b      	mov	r3, r5
 80106be:	f7ef fe03 	bl	80002c8 <__aeabi_dsub>
 80106c2:	a343      	add	r3, pc, #268	; (adr r3, 80107d0 <__ieee754_rem_pio2+0x318>)
 80106c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80106c8:	4604      	mov	r4, r0
 80106ca:	460d      	mov	r5, r1
 80106cc:	ec51 0b18 	vmov	r0, r1, d8
 80106d0:	f7ef ffb2 	bl	8000638 <__aeabi_dmul>
 80106d4:	4622      	mov	r2, r4
 80106d6:	462b      	mov	r3, r5
 80106d8:	f7ef fdf6 	bl	80002c8 <__aeabi_dsub>
 80106dc:	4602      	mov	r2, r0
 80106de:	460b      	mov	r3, r1
 80106e0:	4604      	mov	r4, r0
 80106e2:	460d      	mov	r5, r1
 80106e4:	4640      	mov	r0, r8
 80106e6:	4649      	mov	r1, r9
 80106e8:	f7ef fdee 	bl	80002c8 <__aeabi_dsub>
 80106ec:	9a03      	ldr	r2, [sp, #12]
 80106ee:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80106f2:	1ad3      	subs	r3, r2, r3
 80106f4:	2b31      	cmp	r3, #49	; 0x31
 80106f6:	dc24      	bgt.n	8010742 <__ieee754_rem_pio2+0x28a>
 80106f8:	e9ca 0100 	strd	r0, r1, [sl]
 80106fc:	4646      	mov	r6, r8
 80106fe:	464f      	mov	r7, r9
 8010700:	e9da 8900 	ldrd	r8, r9, [sl]
 8010704:	4630      	mov	r0, r6
 8010706:	4642      	mov	r2, r8
 8010708:	464b      	mov	r3, r9
 801070a:	4639      	mov	r1, r7
 801070c:	f7ef fddc 	bl	80002c8 <__aeabi_dsub>
 8010710:	462b      	mov	r3, r5
 8010712:	4622      	mov	r2, r4
 8010714:	f7ef fdd8 	bl	80002c8 <__aeabi_dsub>
 8010718:	9b02      	ldr	r3, [sp, #8]
 801071a:	2b00      	cmp	r3, #0
 801071c:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8010720:	f6bf af0a 	bge.w	8010538 <__ieee754_rem_pio2+0x80>
 8010724:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8010728:	f8ca 3004 	str.w	r3, [sl, #4]
 801072c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010730:	f8ca 8000 	str.w	r8, [sl]
 8010734:	f8ca 0008 	str.w	r0, [sl, #8]
 8010738:	f8ca 300c 	str.w	r3, [sl, #12]
 801073c:	f1cb 0b00 	rsb	fp, fp, #0
 8010740:	e6fa      	b.n	8010538 <__ieee754_rem_pio2+0x80>
 8010742:	a327      	add	r3, pc, #156	; (adr r3, 80107e0 <__ieee754_rem_pio2+0x328>)
 8010744:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010748:	ec51 0b18 	vmov	r0, r1, d8
 801074c:	f7ef ff74 	bl	8000638 <__aeabi_dmul>
 8010750:	4604      	mov	r4, r0
 8010752:	460d      	mov	r5, r1
 8010754:	4602      	mov	r2, r0
 8010756:	460b      	mov	r3, r1
 8010758:	4640      	mov	r0, r8
 801075a:	4649      	mov	r1, r9
 801075c:	f7ef fdb4 	bl	80002c8 <__aeabi_dsub>
 8010760:	4602      	mov	r2, r0
 8010762:	460b      	mov	r3, r1
 8010764:	4606      	mov	r6, r0
 8010766:	460f      	mov	r7, r1
 8010768:	4640      	mov	r0, r8
 801076a:	4649      	mov	r1, r9
 801076c:	f7ef fdac 	bl	80002c8 <__aeabi_dsub>
 8010770:	4622      	mov	r2, r4
 8010772:	462b      	mov	r3, r5
 8010774:	f7ef fda8 	bl	80002c8 <__aeabi_dsub>
 8010778:	a31b      	add	r3, pc, #108	; (adr r3, 80107e8 <__ieee754_rem_pio2+0x330>)
 801077a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801077e:	4604      	mov	r4, r0
 8010780:	460d      	mov	r5, r1
 8010782:	ec51 0b18 	vmov	r0, r1, d8
 8010786:	f7ef ff57 	bl	8000638 <__aeabi_dmul>
 801078a:	4622      	mov	r2, r4
 801078c:	462b      	mov	r3, r5
 801078e:	f7ef fd9b 	bl	80002c8 <__aeabi_dsub>
 8010792:	4604      	mov	r4, r0
 8010794:	460d      	mov	r5, r1
 8010796:	e75f      	b.n	8010658 <__ieee754_rem_pio2+0x1a0>
 8010798:	4b1b      	ldr	r3, [pc, #108]	; (8010808 <__ieee754_rem_pio2+0x350>)
 801079a:	4598      	cmp	r8, r3
 801079c:	dd36      	ble.n	801080c <__ieee754_rem_pio2+0x354>
 801079e:	ee10 2a10 	vmov	r2, s0
 80107a2:	462b      	mov	r3, r5
 80107a4:	4620      	mov	r0, r4
 80107a6:	4629      	mov	r1, r5
 80107a8:	f7ef fd8e 	bl	80002c8 <__aeabi_dsub>
 80107ac:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80107b0:	e9ca 0100 	strd	r0, r1, [sl]
 80107b4:	e694      	b.n	80104e0 <__ieee754_rem_pio2+0x28>
 80107b6:	bf00      	nop
 80107b8:	54400000 	.word	0x54400000
 80107bc:	3ff921fb 	.word	0x3ff921fb
 80107c0:	1a626331 	.word	0x1a626331
 80107c4:	3dd0b461 	.word	0x3dd0b461
 80107c8:	1a600000 	.word	0x1a600000
 80107cc:	3dd0b461 	.word	0x3dd0b461
 80107d0:	2e037073 	.word	0x2e037073
 80107d4:	3ba3198a 	.word	0x3ba3198a
 80107d8:	6dc9c883 	.word	0x6dc9c883
 80107dc:	3fe45f30 	.word	0x3fe45f30
 80107e0:	2e000000 	.word	0x2e000000
 80107e4:	3ba3198a 	.word	0x3ba3198a
 80107e8:	252049c1 	.word	0x252049c1
 80107ec:	397b839a 	.word	0x397b839a
 80107f0:	3fe921fb 	.word	0x3fe921fb
 80107f4:	4002d97b 	.word	0x4002d97b
 80107f8:	3ff921fb 	.word	0x3ff921fb
 80107fc:	413921fb 	.word	0x413921fb
 8010800:	3fe00000 	.word	0x3fe00000
 8010804:	08011b38 	.word	0x08011b38
 8010808:	7fefffff 	.word	0x7fefffff
 801080c:	ea4f 5428 	mov.w	r4, r8, asr #20
 8010810:	f2a4 4416 	subw	r4, r4, #1046	; 0x416
 8010814:	ee10 0a10 	vmov	r0, s0
 8010818:	eba8 5104 	sub.w	r1, r8, r4, lsl #20
 801081c:	ee10 6a10 	vmov	r6, s0
 8010820:	460f      	mov	r7, r1
 8010822:	f7f0 f9b9 	bl	8000b98 <__aeabi_d2iz>
 8010826:	f7ef fe9d 	bl	8000564 <__aeabi_i2d>
 801082a:	4602      	mov	r2, r0
 801082c:	460b      	mov	r3, r1
 801082e:	4630      	mov	r0, r6
 8010830:	4639      	mov	r1, r7
 8010832:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8010836:	f7ef fd47 	bl	80002c8 <__aeabi_dsub>
 801083a:	4b23      	ldr	r3, [pc, #140]	; (80108c8 <__ieee754_rem_pio2+0x410>)
 801083c:	2200      	movs	r2, #0
 801083e:	f7ef fefb 	bl	8000638 <__aeabi_dmul>
 8010842:	460f      	mov	r7, r1
 8010844:	4606      	mov	r6, r0
 8010846:	f7f0 f9a7 	bl	8000b98 <__aeabi_d2iz>
 801084a:	f7ef fe8b 	bl	8000564 <__aeabi_i2d>
 801084e:	4602      	mov	r2, r0
 8010850:	460b      	mov	r3, r1
 8010852:	4630      	mov	r0, r6
 8010854:	4639      	mov	r1, r7
 8010856:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801085a:	f7ef fd35 	bl	80002c8 <__aeabi_dsub>
 801085e:	4b1a      	ldr	r3, [pc, #104]	; (80108c8 <__ieee754_rem_pio2+0x410>)
 8010860:	2200      	movs	r2, #0
 8010862:	f7ef fee9 	bl	8000638 <__aeabi_dmul>
 8010866:	e9cd 0108 	strd	r0, r1, [sp, #32]
 801086a:	ad04      	add	r5, sp, #16
 801086c:	f04f 0803 	mov.w	r8, #3
 8010870:	46a9      	mov	r9, r5
 8010872:	2600      	movs	r6, #0
 8010874:	2700      	movs	r7, #0
 8010876:	4632      	mov	r2, r6
 8010878:	463b      	mov	r3, r7
 801087a:	e9d5 0104 	ldrd	r0, r1, [r5, #16]
 801087e:	46c3      	mov	fp, r8
 8010880:	3d08      	subs	r5, #8
 8010882:	f108 38ff 	add.w	r8, r8, #4294967295
 8010886:	f7f0 f93f 	bl	8000b08 <__aeabi_dcmpeq>
 801088a:	2800      	cmp	r0, #0
 801088c:	d1f3      	bne.n	8010876 <__ieee754_rem_pio2+0x3be>
 801088e:	4b0f      	ldr	r3, [pc, #60]	; (80108cc <__ieee754_rem_pio2+0x414>)
 8010890:	9301      	str	r3, [sp, #4]
 8010892:	2302      	movs	r3, #2
 8010894:	9300      	str	r3, [sp, #0]
 8010896:	4622      	mov	r2, r4
 8010898:	465b      	mov	r3, fp
 801089a:	4651      	mov	r1, sl
 801089c:	4648      	mov	r0, r9
 801089e:	f000 f817 	bl	80108d0 <__kernel_rem_pio2>
 80108a2:	9b02      	ldr	r3, [sp, #8]
 80108a4:	2b00      	cmp	r3, #0
 80108a6:	4683      	mov	fp, r0
 80108a8:	f6bf ae46 	bge.w	8010538 <__ieee754_rem_pio2+0x80>
 80108ac:	e9da 2100 	ldrd	r2, r1, [sl]
 80108b0:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80108b4:	e9ca 2300 	strd	r2, r3, [sl]
 80108b8:	e9da 2102 	ldrd	r2, r1, [sl, #8]
 80108bc:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80108c0:	e9ca 2302 	strd	r2, r3, [sl, #8]
 80108c4:	e73a      	b.n	801073c <__ieee754_rem_pio2+0x284>
 80108c6:	bf00      	nop
 80108c8:	41700000 	.word	0x41700000
 80108cc:	08011bb8 	.word	0x08011bb8

080108d0 <__kernel_rem_pio2>:
 80108d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80108d4:	ed2d 8b02 	vpush	{d8}
 80108d8:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
 80108dc:	f112 0f14 	cmn.w	r2, #20
 80108e0:	9308      	str	r3, [sp, #32]
 80108e2:	9101      	str	r1, [sp, #4]
 80108e4:	4bc4      	ldr	r3, [pc, #784]	; (8010bf8 <__kernel_rem_pio2+0x328>)
 80108e6:	99a6      	ldr	r1, [sp, #664]	; 0x298
 80108e8:	900b      	str	r0, [sp, #44]	; 0x2c
 80108ea:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80108ee:	9302      	str	r3, [sp, #8]
 80108f0:	9b08      	ldr	r3, [sp, #32]
 80108f2:	f103 33ff 	add.w	r3, r3, #4294967295
 80108f6:	bfa8      	it	ge
 80108f8:	1ed4      	subge	r4, r2, #3
 80108fa:	9306      	str	r3, [sp, #24]
 80108fc:	bfb2      	itee	lt
 80108fe:	2400      	movlt	r4, #0
 8010900:	2318      	movge	r3, #24
 8010902:	fb94 f4f3 	sdivge	r4, r4, r3
 8010906:	f06f 0317 	mvn.w	r3, #23
 801090a:	fb04 3303 	mla	r3, r4, r3, r3
 801090e:	eb03 0a02 	add.w	sl, r3, r2
 8010912:	9b02      	ldr	r3, [sp, #8]
 8010914:	9a06      	ldr	r2, [sp, #24]
 8010916:	ed9f 8bb4 	vldr	d8, [pc, #720]	; 8010be8 <__kernel_rem_pio2+0x318>
 801091a:	eb03 0802 	add.w	r8, r3, r2
 801091e:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8010920:	1aa7      	subs	r7, r4, r2
 8010922:	ae22      	add	r6, sp, #136	; 0x88
 8010924:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8010928:	2500      	movs	r5, #0
 801092a:	4545      	cmp	r5, r8
 801092c:	dd13      	ble.n	8010956 <__kernel_rem_pio2+0x86>
 801092e:	9b08      	ldr	r3, [sp, #32]
 8010930:	ed9f 8bad 	vldr	d8, [pc, #692]	; 8010be8 <__kernel_rem_pio2+0x318>
 8010934:	aa22      	add	r2, sp, #136	; 0x88
 8010936:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 801093a:	f50d 7be4 	add.w	fp, sp, #456	; 0x1c8
 801093e:	f04f 0800 	mov.w	r8, #0
 8010942:	9b02      	ldr	r3, [sp, #8]
 8010944:	4598      	cmp	r8, r3
 8010946:	dc2f      	bgt.n	80109a8 <__kernel_rem_pio2+0xd8>
 8010948:	ed8d 8b04 	vstr	d8, [sp, #16]
 801094c:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 8010950:	462f      	mov	r7, r5
 8010952:	2600      	movs	r6, #0
 8010954:	e01b      	b.n	801098e <__kernel_rem_pio2+0xbe>
 8010956:	42ef      	cmn	r7, r5
 8010958:	d407      	bmi.n	801096a <__kernel_rem_pio2+0x9a>
 801095a:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 801095e:	f7ef fe01 	bl	8000564 <__aeabi_i2d>
 8010962:	e8e6 0102 	strd	r0, r1, [r6], #8
 8010966:	3501      	adds	r5, #1
 8010968:	e7df      	b.n	801092a <__kernel_rem_pio2+0x5a>
 801096a:	ec51 0b18 	vmov	r0, r1, d8
 801096e:	e7f8      	b.n	8010962 <__kernel_rem_pio2+0x92>
 8010970:	e9d7 2300 	ldrd	r2, r3, [r7]
 8010974:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8010978:	f7ef fe5e 	bl	8000638 <__aeabi_dmul>
 801097c:	4602      	mov	r2, r0
 801097e:	460b      	mov	r3, r1
 8010980:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8010984:	f7ef fca2 	bl	80002cc <__adddf3>
 8010988:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801098c:	3601      	adds	r6, #1
 801098e:	9b06      	ldr	r3, [sp, #24]
 8010990:	429e      	cmp	r6, r3
 8010992:	f1a7 0708 	sub.w	r7, r7, #8
 8010996:	ddeb      	ble.n	8010970 <__kernel_rem_pio2+0xa0>
 8010998:	ed9d 7b04 	vldr	d7, [sp, #16]
 801099c:	f108 0801 	add.w	r8, r8, #1
 80109a0:	ecab 7b02 	vstmia	fp!, {d7}
 80109a4:	3508      	adds	r5, #8
 80109a6:	e7cc      	b.n	8010942 <__kernel_rem_pio2+0x72>
 80109a8:	9b02      	ldr	r3, [sp, #8]
 80109aa:	aa0e      	add	r2, sp, #56	; 0x38
 80109ac:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80109b0:	930d      	str	r3, [sp, #52]	; 0x34
 80109b2:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 80109b4:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 80109b8:	9c02      	ldr	r4, [sp, #8]
 80109ba:	930c      	str	r3, [sp, #48]	; 0x30
 80109bc:	00e3      	lsls	r3, r4, #3
 80109be:	930a      	str	r3, [sp, #40]	; 0x28
 80109c0:	ab9a      	add	r3, sp, #616	; 0x268
 80109c2:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80109c6:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 80109ca:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80109ce:	ab72      	add	r3, sp, #456	; 0x1c8
 80109d0:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 80109d4:	46c3      	mov	fp, r8
 80109d6:	46a1      	mov	r9, r4
 80109d8:	f1b9 0f00 	cmp.w	r9, #0
 80109dc:	f1a5 0508 	sub.w	r5, r5, #8
 80109e0:	dc77      	bgt.n	8010ad2 <__kernel_rem_pio2+0x202>
 80109e2:	ec47 6b10 	vmov	d0, r6, r7
 80109e6:	4650      	mov	r0, sl
 80109e8:	f000 fd4e 	bl	8011488 <scalbn>
 80109ec:	ec57 6b10 	vmov	r6, r7, d0
 80109f0:	2200      	movs	r2, #0
 80109f2:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 80109f6:	ee10 0a10 	vmov	r0, s0
 80109fa:	4639      	mov	r1, r7
 80109fc:	f7ef fe1c 	bl	8000638 <__aeabi_dmul>
 8010a00:	ec41 0b10 	vmov	d0, r0, r1
 8010a04:	f000 fcc0 	bl	8011388 <floor>
 8010a08:	4b7c      	ldr	r3, [pc, #496]	; (8010bfc <__kernel_rem_pio2+0x32c>)
 8010a0a:	ec51 0b10 	vmov	r0, r1, d0
 8010a0e:	2200      	movs	r2, #0
 8010a10:	f7ef fe12 	bl	8000638 <__aeabi_dmul>
 8010a14:	4602      	mov	r2, r0
 8010a16:	460b      	mov	r3, r1
 8010a18:	4630      	mov	r0, r6
 8010a1a:	4639      	mov	r1, r7
 8010a1c:	f7ef fc54 	bl	80002c8 <__aeabi_dsub>
 8010a20:	460f      	mov	r7, r1
 8010a22:	4606      	mov	r6, r0
 8010a24:	f7f0 f8b8 	bl	8000b98 <__aeabi_d2iz>
 8010a28:	9004      	str	r0, [sp, #16]
 8010a2a:	f7ef fd9b 	bl	8000564 <__aeabi_i2d>
 8010a2e:	4602      	mov	r2, r0
 8010a30:	460b      	mov	r3, r1
 8010a32:	4630      	mov	r0, r6
 8010a34:	4639      	mov	r1, r7
 8010a36:	f7ef fc47 	bl	80002c8 <__aeabi_dsub>
 8010a3a:	f1ba 0f00 	cmp.w	sl, #0
 8010a3e:	4606      	mov	r6, r0
 8010a40:	460f      	mov	r7, r1
 8010a42:	dd6d      	ble.n	8010b20 <__kernel_rem_pio2+0x250>
 8010a44:	1e62      	subs	r2, r4, #1
 8010a46:	ab0e      	add	r3, sp, #56	; 0x38
 8010a48:	9d04      	ldr	r5, [sp, #16]
 8010a4a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8010a4e:	f1ca 0118 	rsb	r1, sl, #24
 8010a52:	fa40 f301 	asr.w	r3, r0, r1
 8010a56:	441d      	add	r5, r3
 8010a58:	408b      	lsls	r3, r1
 8010a5a:	1ac0      	subs	r0, r0, r3
 8010a5c:	ab0e      	add	r3, sp, #56	; 0x38
 8010a5e:	9504      	str	r5, [sp, #16]
 8010a60:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 8010a64:	f1ca 0317 	rsb	r3, sl, #23
 8010a68:	fa40 fb03 	asr.w	fp, r0, r3
 8010a6c:	f1bb 0f00 	cmp.w	fp, #0
 8010a70:	dd65      	ble.n	8010b3e <__kernel_rem_pio2+0x26e>
 8010a72:	9b04      	ldr	r3, [sp, #16]
 8010a74:	2200      	movs	r2, #0
 8010a76:	3301      	adds	r3, #1
 8010a78:	9304      	str	r3, [sp, #16]
 8010a7a:	4615      	mov	r5, r2
 8010a7c:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 8010a80:	4294      	cmp	r4, r2
 8010a82:	f300 809c 	bgt.w	8010bbe <__kernel_rem_pio2+0x2ee>
 8010a86:	f1ba 0f00 	cmp.w	sl, #0
 8010a8a:	dd07      	ble.n	8010a9c <__kernel_rem_pio2+0x1cc>
 8010a8c:	f1ba 0f01 	cmp.w	sl, #1
 8010a90:	f000 80c0 	beq.w	8010c14 <__kernel_rem_pio2+0x344>
 8010a94:	f1ba 0f02 	cmp.w	sl, #2
 8010a98:	f000 80c6 	beq.w	8010c28 <__kernel_rem_pio2+0x358>
 8010a9c:	f1bb 0f02 	cmp.w	fp, #2
 8010aa0:	d14d      	bne.n	8010b3e <__kernel_rem_pio2+0x26e>
 8010aa2:	4632      	mov	r2, r6
 8010aa4:	463b      	mov	r3, r7
 8010aa6:	4956      	ldr	r1, [pc, #344]	; (8010c00 <__kernel_rem_pio2+0x330>)
 8010aa8:	2000      	movs	r0, #0
 8010aaa:	f7ef fc0d 	bl	80002c8 <__aeabi_dsub>
 8010aae:	4606      	mov	r6, r0
 8010ab0:	460f      	mov	r7, r1
 8010ab2:	2d00      	cmp	r5, #0
 8010ab4:	d043      	beq.n	8010b3e <__kernel_rem_pio2+0x26e>
 8010ab6:	4650      	mov	r0, sl
 8010ab8:	ed9f 0b4d 	vldr	d0, [pc, #308]	; 8010bf0 <__kernel_rem_pio2+0x320>
 8010abc:	f000 fce4 	bl	8011488 <scalbn>
 8010ac0:	4630      	mov	r0, r6
 8010ac2:	4639      	mov	r1, r7
 8010ac4:	ec53 2b10 	vmov	r2, r3, d0
 8010ac8:	f7ef fbfe 	bl	80002c8 <__aeabi_dsub>
 8010acc:	4606      	mov	r6, r0
 8010ace:	460f      	mov	r7, r1
 8010ad0:	e035      	b.n	8010b3e <__kernel_rem_pio2+0x26e>
 8010ad2:	4b4c      	ldr	r3, [pc, #304]	; (8010c04 <__kernel_rem_pio2+0x334>)
 8010ad4:	2200      	movs	r2, #0
 8010ad6:	4630      	mov	r0, r6
 8010ad8:	4639      	mov	r1, r7
 8010ada:	f7ef fdad 	bl	8000638 <__aeabi_dmul>
 8010ade:	f7f0 f85b 	bl	8000b98 <__aeabi_d2iz>
 8010ae2:	f7ef fd3f 	bl	8000564 <__aeabi_i2d>
 8010ae6:	4602      	mov	r2, r0
 8010ae8:	460b      	mov	r3, r1
 8010aea:	ec43 2b18 	vmov	d8, r2, r3
 8010aee:	4b46      	ldr	r3, [pc, #280]	; (8010c08 <__kernel_rem_pio2+0x338>)
 8010af0:	2200      	movs	r2, #0
 8010af2:	f7ef fda1 	bl	8000638 <__aeabi_dmul>
 8010af6:	4602      	mov	r2, r0
 8010af8:	460b      	mov	r3, r1
 8010afa:	4630      	mov	r0, r6
 8010afc:	4639      	mov	r1, r7
 8010afe:	f7ef fbe3 	bl	80002c8 <__aeabi_dsub>
 8010b02:	f7f0 f849 	bl	8000b98 <__aeabi_d2iz>
 8010b06:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010b0a:	f84b 0b04 	str.w	r0, [fp], #4
 8010b0e:	ec51 0b18 	vmov	r0, r1, d8
 8010b12:	f7ef fbdb 	bl	80002cc <__adddf3>
 8010b16:	f109 39ff 	add.w	r9, r9, #4294967295
 8010b1a:	4606      	mov	r6, r0
 8010b1c:	460f      	mov	r7, r1
 8010b1e:	e75b      	b.n	80109d8 <__kernel_rem_pio2+0x108>
 8010b20:	d106      	bne.n	8010b30 <__kernel_rem_pio2+0x260>
 8010b22:	1e63      	subs	r3, r4, #1
 8010b24:	aa0e      	add	r2, sp, #56	; 0x38
 8010b26:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8010b2a:	ea4f 5be0 	mov.w	fp, r0, asr #23
 8010b2e:	e79d      	b.n	8010a6c <__kernel_rem_pio2+0x19c>
 8010b30:	4b36      	ldr	r3, [pc, #216]	; (8010c0c <__kernel_rem_pio2+0x33c>)
 8010b32:	2200      	movs	r2, #0
 8010b34:	f7f0 f806 	bl	8000b44 <__aeabi_dcmpge>
 8010b38:	2800      	cmp	r0, #0
 8010b3a:	d13d      	bne.n	8010bb8 <__kernel_rem_pio2+0x2e8>
 8010b3c:	4683      	mov	fp, r0
 8010b3e:	2200      	movs	r2, #0
 8010b40:	2300      	movs	r3, #0
 8010b42:	4630      	mov	r0, r6
 8010b44:	4639      	mov	r1, r7
 8010b46:	f7ef ffdf 	bl	8000b08 <__aeabi_dcmpeq>
 8010b4a:	2800      	cmp	r0, #0
 8010b4c:	f000 80c0 	beq.w	8010cd0 <__kernel_rem_pio2+0x400>
 8010b50:	1e65      	subs	r5, r4, #1
 8010b52:	462b      	mov	r3, r5
 8010b54:	2200      	movs	r2, #0
 8010b56:	9902      	ldr	r1, [sp, #8]
 8010b58:	428b      	cmp	r3, r1
 8010b5a:	da6c      	bge.n	8010c36 <__kernel_rem_pio2+0x366>
 8010b5c:	2a00      	cmp	r2, #0
 8010b5e:	f000 8089 	beq.w	8010c74 <__kernel_rem_pio2+0x3a4>
 8010b62:	ab0e      	add	r3, sp, #56	; 0x38
 8010b64:	f1aa 0a18 	sub.w	sl, sl, #24
 8010b68:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8010b6c:	2b00      	cmp	r3, #0
 8010b6e:	f000 80ad 	beq.w	8010ccc <__kernel_rem_pio2+0x3fc>
 8010b72:	4650      	mov	r0, sl
 8010b74:	ed9f 0b1e 	vldr	d0, [pc, #120]	; 8010bf0 <__kernel_rem_pio2+0x320>
 8010b78:	f000 fc86 	bl	8011488 <scalbn>
 8010b7c:	ab9a      	add	r3, sp, #616	; 0x268
 8010b7e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010b82:	ec57 6b10 	vmov	r6, r7, d0
 8010b86:	00ec      	lsls	r4, r5, #3
 8010b88:	f1a3 0898 	sub.w	r8, r3, #152	; 0x98
 8010b8c:	46aa      	mov	sl, r5
 8010b8e:	f1ba 0f00 	cmp.w	sl, #0
 8010b92:	f280 80d6 	bge.w	8010d42 <__kernel_rem_pio2+0x472>
 8010b96:	ed9f 8b14 	vldr	d8, [pc, #80]	; 8010be8 <__kernel_rem_pio2+0x318>
 8010b9a:	462e      	mov	r6, r5
 8010b9c:	2e00      	cmp	r6, #0
 8010b9e:	f2c0 8104 	blt.w	8010daa <__kernel_rem_pio2+0x4da>
 8010ba2:	ab72      	add	r3, sp, #456	; 0x1c8
 8010ba4:	ed8d 8b06 	vstr	d8, [sp, #24]
 8010ba8:	f8df a064 	ldr.w	sl, [pc, #100]	; 8010c10 <__kernel_rem_pio2+0x340>
 8010bac:	eb03 09c6 	add.w	r9, r3, r6, lsl #3
 8010bb0:	f04f 0800 	mov.w	r8, #0
 8010bb4:	1baf      	subs	r7, r5, r6
 8010bb6:	e0ea      	b.n	8010d8e <__kernel_rem_pio2+0x4be>
 8010bb8:	f04f 0b02 	mov.w	fp, #2
 8010bbc:	e759      	b.n	8010a72 <__kernel_rem_pio2+0x1a2>
 8010bbe:	f8d8 3000 	ldr.w	r3, [r8]
 8010bc2:	b955      	cbnz	r5, 8010bda <__kernel_rem_pio2+0x30a>
 8010bc4:	b123      	cbz	r3, 8010bd0 <__kernel_rem_pio2+0x300>
 8010bc6:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 8010bca:	f8c8 3000 	str.w	r3, [r8]
 8010bce:	2301      	movs	r3, #1
 8010bd0:	3201      	adds	r2, #1
 8010bd2:	f108 0804 	add.w	r8, r8, #4
 8010bd6:	461d      	mov	r5, r3
 8010bd8:	e752      	b.n	8010a80 <__kernel_rem_pio2+0x1b0>
 8010bda:	1acb      	subs	r3, r1, r3
 8010bdc:	f8c8 3000 	str.w	r3, [r8]
 8010be0:	462b      	mov	r3, r5
 8010be2:	e7f5      	b.n	8010bd0 <__kernel_rem_pio2+0x300>
 8010be4:	f3af 8000 	nop.w
	...
 8010bf4:	3ff00000 	.word	0x3ff00000
 8010bf8:	08011d00 	.word	0x08011d00
 8010bfc:	40200000 	.word	0x40200000
 8010c00:	3ff00000 	.word	0x3ff00000
 8010c04:	3e700000 	.word	0x3e700000
 8010c08:	41700000 	.word	0x41700000
 8010c0c:	3fe00000 	.word	0x3fe00000
 8010c10:	08011cc0 	.word	0x08011cc0
 8010c14:	1e62      	subs	r2, r4, #1
 8010c16:	ab0e      	add	r3, sp, #56	; 0x38
 8010c18:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8010c1c:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8010c20:	a90e      	add	r1, sp, #56	; 0x38
 8010c22:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8010c26:	e739      	b.n	8010a9c <__kernel_rem_pio2+0x1cc>
 8010c28:	1e62      	subs	r2, r4, #1
 8010c2a:	ab0e      	add	r3, sp, #56	; 0x38
 8010c2c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8010c30:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8010c34:	e7f4      	b.n	8010c20 <__kernel_rem_pio2+0x350>
 8010c36:	a90e      	add	r1, sp, #56	; 0x38
 8010c38:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8010c3c:	3b01      	subs	r3, #1
 8010c3e:	430a      	orrs	r2, r1
 8010c40:	e789      	b.n	8010b56 <__kernel_rem_pio2+0x286>
 8010c42:	3301      	adds	r3, #1
 8010c44:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 8010c48:	2900      	cmp	r1, #0
 8010c4a:	d0fa      	beq.n	8010c42 <__kernel_rem_pio2+0x372>
 8010c4c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010c4e:	f502 721a 	add.w	r2, r2, #616	; 0x268
 8010c52:	446a      	add	r2, sp
 8010c54:	3a98      	subs	r2, #152	; 0x98
 8010c56:	920a      	str	r2, [sp, #40]	; 0x28
 8010c58:	9a08      	ldr	r2, [sp, #32]
 8010c5a:	18e3      	adds	r3, r4, r3
 8010c5c:	18a5      	adds	r5, r4, r2
 8010c5e:	aa22      	add	r2, sp, #136	; 0x88
 8010c60:	f104 0801 	add.w	r8, r4, #1
 8010c64:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 8010c68:	9304      	str	r3, [sp, #16]
 8010c6a:	9b04      	ldr	r3, [sp, #16]
 8010c6c:	4543      	cmp	r3, r8
 8010c6e:	da04      	bge.n	8010c7a <__kernel_rem_pio2+0x3aa>
 8010c70:	461c      	mov	r4, r3
 8010c72:	e6a3      	b.n	80109bc <__kernel_rem_pio2+0xec>
 8010c74:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010c76:	2301      	movs	r3, #1
 8010c78:	e7e4      	b.n	8010c44 <__kernel_rem_pio2+0x374>
 8010c7a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010c7c:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 8010c80:	f7ef fc70 	bl	8000564 <__aeabi_i2d>
 8010c84:	e8e5 0102 	strd	r0, r1, [r5], #8
 8010c88:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8010c8a:	46ab      	mov	fp, r5
 8010c8c:	461c      	mov	r4, r3
 8010c8e:	f04f 0900 	mov.w	r9, #0
 8010c92:	2600      	movs	r6, #0
 8010c94:	2700      	movs	r7, #0
 8010c96:	9b06      	ldr	r3, [sp, #24]
 8010c98:	4599      	cmp	r9, r3
 8010c9a:	dd06      	ble.n	8010caa <__kernel_rem_pio2+0x3da>
 8010c9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010c9e:	e8e3 6702 	strd	r6, r7, [r3], #8
 8010ca2:	f108 0801 	add.w	r8, r8, #1
 8010ca6:	930a      	str	r3, [sp, #40]	; 0x28
 8010ca8:	e7df      	b.n	8010c6a <__kernel_rem_pio2+0x39a>
 8010caa:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 8010cae:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 8010cb2:	f7ef fcc1 	bl	8000638 <__aeabi_dmul>
 8010cb6:	4602      	mov	r2, r0
 8010cb8:	460b      	mov	r3, r1
 8010cba:	4630      	mov	r0, r6
 8010cbc:	4639      	mov	r1, r7
 8010cbe:	f7ef fb05 	bl	80002cc <__adddf3>
 8010cc2:	f109 0901 	add.w	r9, r9, #1
 8010cc6:	4606      	mov	r6, r0
 8010cc8:	460f      	mov	r7, r1
 8010cca:	e7e4      	b.n	8010c96 <__kernel_rem_pio2+0x3c6>
 8010ccc:	3d01      	subs	r5, #1
 8010cce:	e748      	b.n	8010b62 <__kernel_rem_pio2+0x292>
 8010cd0:	ec47 6b10 	vmov	d0, r6, r7
 8010cd4:	f1ca 0000 	rsb	r0, sl, #0
 8010cd8:	f000 fbd6 	bl	8011488 <scalbn>
 8010cdc:	ec57 6b10 	vmov	r6, r7, d0
 8010ce0:	4ba0      	ldr	r3, [pc, #640]	; (8010f64 <__kernel_rem_pio2+0x694>)
 8010ce2:	ee10 0a10 	vmov	r0, s0
 8010ce6:	2200      	movs	r2, #0
 8010ce8:	4639      	mov	r1, r7
 8010cea:	f7ef ff2b 	bl	8000b44 <__aeabi_dcmpge>
 8010cee:	b1f8      	cbz	r0, 8010d30 <__kernel_rem_pio2+0x460>
 8010cf0:	4b9d      	ldr	r3, [pc, #628]	; (8010f68 <__kernel_rem_pio2+0x698>)
 8010cf2:	2200      	movs	r2, #0
 8010cf4:	4630      	mov	r0, r6
 8010cf6:	4639      	mov	r1, r7
 8010cf8:	f7ef fc9e 	bl	8000638 <__aeabi_dmul>
 8010cfc:	f7ef ff4c 	bl	8000b98 <__aeabi_d2iz>
 8010d00:	4680      	mov	r8, r0
 8010d02:	f7ef fc2f 	bl	8000564 <__aeabi_i2d>
 8010d06:	4b97      	ldr	r3, [pc, #604]	; (8010f64 <__kernel_rem_pio2+0x694>)
 8010d08:	2200      	movs	r2, #0
 8010d0a:	f7ef fc95 	bl	8000638 <__aeabi_dmul>
 8010d0e:	460b      	mov	r3, r1
 8010d10:	4602      	mov	r2, r0
 8010d12:	4639      	mov	r1, r7
 8010d14:	4630      	mov	r0, r6
 8010d16:	f7ef fad7 	bl	80002c8 <__aeabi_dsub>
 8010d1a:	f7ef ff3d 	bl	8000b98 <__aeabi_d2iz>
 8010d1e:	1c65      	adds	r5, r4, #1
 8010d20:	ab0e      	add	r3, sp, #56	; 0x38
 8010d22:	f10a 0a18 	add.w	sl, sl, #24
 8010d26:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8010d2a:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 8010d2e:	e720      	b.n	8010b72 <__kernel_rem_pio2+0x2a2>
 8010d30:	4630      	mov	r0, r6
 8010d32:	4639      	mov	r1, r7
 8010d34:	f7ef ff30 	bl	8000b98 <__aeabi_d2iz>
 8010d38:	ab0e      	add	r3, sp, #56	; 0x38
 8010d3a:	4625      	mov	r5, r4
 8010d3c:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8010d40:	e717      	b.n	8010b72 <__kernel_rem_pio2+0x2a2>
 8010d42:	ab0e      	add	r3, sp, #56	; 0x38
 8010d44:	f853 002a 	ldr.w	r0, [r3, sl, lsl #2]
 8010d48:	f7ef fc0c 	bl	8000564 <__aeabi_i2d>
 8010d4c:	4632      	mov	r2, r6
 8010d4e:	463b      	mov	r3, r7
 8010d50:	f7ef fc72 	bl	8000638 <__aeabi_dmul>
 8010d54:	4b84      	ldr	r3, [pc, #528]	; (8010f68 <__kernel_rem_pio2+0x698>)
 8010d56:	e968 0102 	strd	r0, r1, [r8, #-8]!
 8010d5a:	2200      	movs	r2, #0
 8010d5c:	4630      	mov	r0, r6
 8010d5e:	4639      	mov	r1, r7
 8010d60:	f7ef fc6a 	bl	8000638 <__aeabi_dmul>
 8010d64:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010d68:	4606      	mov	r6, r0
 8010d6a:	460f      	mov	r7, r1
 8010d6c:	e70f      	b.n	8010b8e <__kernel_rem_pio2+0x2be>
 8010d6e:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 8010d72:	e8fa 0102 	ldrd	r0, r1, [sl], #8
 8010d76:	f7ef fc5f 	bl	8000638 <__aeabi_dmul>
 8010d7a:	4602      	mov	r2, r0
 8010d7c:	460b      	mov	r3, r1
 8010d7e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8010d82:	f7ef faa3 	bl	80002cc <__adddf3>
 8010d86:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8010d8a:	f108 0801 	add.w	r8, r8, #1
 8010d8e:	9b02      	ldr	r3, [sp, #8]
 8010d90:	4598      	cmp	r8, r3
 8010d92:	dc01      	bgt.n	8010d98 <__kernel_rem_pio2+0x4c8>
 8010d94:	45b8      	cmp	r8, r7
 8010d96:	ddea      	ble.n	8010d6e <__kernel_rem_pio2+0x49e>
 8010d98:	ed9d 7b06 	vldr	d7, [sp, #24]
 8010d9c:	ab4a      	add	r3, sp, #296	; 0x128
 8010d9e:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 8010da2:	ed87 7b00 	vstr	d7, [r7]
 8010da6:	3e01      	subs	r6, #1
 8010da8:	e6f8      	b.n	8010b9c <__kernel_rem_pio2+0x2cc>
 8010daa:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 8010dac:	2b02      	cmp	r3, #2
 8010dae:	dc0b      	bgt.n	8010dc8 <__kernel_rem_pio2+0x4f8>
 8010db0:	2b00      	cmp	r3, #0
 8010db2:	dc35      	bgt.n	8010e20 <__kernel_rem_pio2+0x550>
 8010db4:	d059      	beq.n	8010e6a <__kernel_rem_pio2+0x59a>
 8010db6:	9b04      	ldr	r3, [sp, #16]
 8010db8:	f003 0007 	and.w	r0, r3, #7
 8010dbc:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
 8010dc0:	ecbd 8b02 	vpop	{d8}
 8010dc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010dc8:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 8010dca:	2b03      	cmp	r3, #3
 8010dcc:	d1f3      	bne.n	8010db6 <__kernel_rem_pio2+0x4e6>
 8010dce:	ab4a      	add	r3, sp, #296	; 0x128
 8010dd0:	4423      	add	r3, r4
 8010dd2:	9306      	str	r3, [sp, #24]
 8010dd4:	461c      	mov	r4, r3
 8010dd6:	469a      	mov	sl, r3
 8010dd8:	9502      	str	r5, [sp, #8]
 8010dda:	9b02      	ldr	r3, [sp, #8]
 8010ddc:	2b00      	cmp	r3, #0
 8010dde:	f1aa 0a08 	sub.w	sl, sl, #8
 8010de2:	dc6b      	bgt.n	8010ebc <__kernel_rem_pio2+0x5ec>
 8010de4:	46aa      	mov	sl, r5
 8010de6:	f1ba 0f01 	cmp.w	sl, #1
 8010dea:	f1a4 0408 	sub.w	r4, r4, #8
 8010dee:	f300 8085 	bgt.w	8010efc <__kernel_rem_pio2+0x62c>
 8010df2:	9c06      	ldr	r4, [sp, #24]
 8010df4:	2000      	movs	r0, #0
 8010df6:	3408      	adds	r4, #8
 8010df8:	2100      	movs	r1, #0
 8010dfa:	2d01      	cmp	r5, #1
 8010dfc:	f300 809d 	bgt.w	8010f3a <__kernel_rem_pio2+0x66a>
 8010e00:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	; 0x128
 8010e04:	e9dd 784c 	ldrd	r7, r8, [sp, #304]	; 0x130
 8010e08:	f1bb 0f00 	cmp.w	fp, #0
 8010e0c:	f040 809b 	bne.w	8010f46 <__kernel_rem_pio2+0x676>
 8010e10:	9b01      	ldr	r3, [sp, #4]
 8010e12:	e9c3 5600 	strd	r5, r6, [r3]
 8010e16:	e9c3 7802 	strd	r7, r8, [r3, #8]
 8010e1a:	e9c3 0104 	strd	r0, r1, [r3, #16]
 8010e1e:	e7ca      	b.n	8010db6 <__kernel_rem_pio2+0x4e6>
 8010e20:	3408      	adds	r4, #8
 8010e22:	ab4a      	add	r3, sp, #296	; 0x128
 8010e24:	441c      	add	r4, r3
 8010e26:	462e      	mov	r6, r5
 8010e28:	2000      	movs	r0, #0
 8010e2a:	2100      	movs	r1, #0
 8010e2c:	2e00      	cmp	r6, #0
 8010e2e:	da36      	bge.n	8010e9e <__kernel_rem_pio2+0x5ce>
 8010e30:	f1bb 0f00 	cmp.w	fp, #0
 8010e34:	d039      	beq.n	8010eaa <__kernel_rem_pio2+0x5da>
 8010e36:	4602      	mov	r2, r0
 8010e38:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010e3c:	9c01      	ldr	r4, [sp, #4]
 8010e3e:	e9c4 2300 	strd	r2, r3, [r4]
 8010e42:	4602      	mov	r2, r0
 8010e44:	460b      	mov	r3, r1
 8010e46:	e9dd 014a 	ldrd	r0, r1, [sp, #296]	; 0x128
 8010e4a:	f7ef fa3d 	bl	80002c8 <__aeabi_dsub>
 8010e4e:	ae4c      	add	r6, sp, #304	; 0x130
 8010e50:	2401      	movs	r4, #1
 8010e52:	42a5      	cmp	r5, r4
 8010e54:	da2c      	bge.n	8010eb0 <__kernel_rem_pio2+0x5e0>
 8010e56:	f1bb 0f00 	cmp.w	fp, #0
 8010e5a:	d002      	beq.n	8010e62 <__kernel_rem_pio2+0x592>
 8010e5c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010e60:	4619      	mov	r1, r3
 8010e62:	9b01      	ldr	r3, [sp, #4]
 8010e64:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8010e68:	e7a5      	b.n	8010db6 <__kernel_rem_pio2+0x4e6>
 8010e6a:	f504 731a 	add.w	r3, r4, #616	; 0x268
 8010e6e:	eb0d 0403 	add.w	r4, sp, r3
 8010e72:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
 8010e76:	2000      	movs	r0, #0
 8010e78:	2100      	movs	r1, #0
 8010e7a:	2d00      	cmp	r5, #0
 8010e7c:	da09      	bge.n	8010e92 <__kernel_rem_pio2+0x5c2>
 8010e7e:	f1bb 0f00 	cmp.w	fp, #0
 8010e82:	d002      	beq.n	8010e8a <__kernel_rem_pio2+0x5ba>
 8010e84:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010e88:	4619      	mov	r1, r3
 8010e8a:	9b01      	ldr	r3, [sp, #4]
 8010e8c:	e9c3 0100 	strd	r0, r1, [r3]
 8010e90:	e791      	b.n	8010db6 <__kernel_rem_pio2+0x4e6>
 8010e92:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8010e96:	f7ef fa19 	bl	80002cc <__adddf3>
 8010e9a:	3d01      	subs	r5, #1
 8010e9c:	e7ed      	b.n	8010e7a <__kernel_rem_pio2+0x5aa>
 8010e9e:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8010ea2:	f7ef fa13 	bl	80002cc <__adddf3>
 8010ea6:	3e01      	subs	r6, #1
 8010ea8:	e7c0      	b.n	8010e2c <__kernel_rem_pio2+0x55c>
 8010eaa:	4602      	mov	r2, r0
 8010eac:	460b      	mov	r3, r1
 8010eae:	e7c5      	b.n	8010e3c <__kernel_rem_pio2+0x56c>
 8010eb0:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 8010eb4:	f7ef fa0a 	bl	80002cc <__adddf3>
 8010eb8:	3401      	adds	r4, #1
 8010eba:	e7ca      	b.n	8010e52 <__kernel_rem_pio2+0x582>
 8010ebc:	e9da 8900 	ldrd	r8, r9, [sl]
 8010ec0:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 8010ec4:	9b02      	ldr	r3, [sp, #8]
 8010ec6:	3b01      	subs	r3, #1
 8010ec8:	9302      	str	r3, [sp, #8]
 8010eca:	4632      	mov	r2, r6
 8010ecc:	463b      	mov	r3, r7
 8010ece:	4640      	mov	r0, r8
 8010ed0:	4649      	mov	r1, r9
 8010ed2:	f7ef f9fb 	bl	80002cc <__adddf3>
 8010ed6:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8010eda:	4602      	mov	r2, r0
 8010edc:	460b      	mov	r3, r1
 8010ede:	4640      	mov	r0, r8
 8010ee0:	4649      	mov	r1, r9
 8010ee2:	f7ef f9f1 	bl	80002c8 <__aeabi_dsub>
 8010ee6:	4632      	mov	r2, r6
 8010ee8:	463b      	mov	r3, r7
 8010eea:	f7ef f9ef 	bl	80002cc <__adddf3>
 8010eee:	ed9d 7b08 	vldr	d7, [sp, #32]
 8010ef2:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8010ef6:	ed8a 7b00 	vstr	d7, [sl]
 8010efa:	e76e      	b.n	8010dda <__kernel_rem_pio2+0x50a>
 8010efc:	e9d4 8900 	ldrd	r8, r9, [r4]
 8010f00:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
 8010f04:	4640      	mov	r0, r8
 8010f06:	4632      	mov	r2, r6
 8010f08:	463b      	mov	r3, r7
 8010f0a:	4649      	mov	r1, r9
 8010f0c:	f7ef f9de 	bl	80002cc <__adddf3>
 8010f10:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8010f14:	4602      	mov	r2, r0
 8010f16:	460b      	mov	r3, r1
 8010f18:	4640      	mov	r0, r8
 8010f1a:	4649      	mov	r1, r9
 8010f1c:	f7ef f9d4 	bl	80002c8 <__aeabi_dsub>
 8010f20:	4632      	mov	r2, r6
 8010f22:	463b      	mov	r3, r7
 8010f24:	f7ef f9d2 	bl	80002cc <__adddf3>
 8010f28:	ed9d 7b02 	vldr	d7, [sp, #8]
 8010f2c:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8010f30:	ed84 7b00 	vstr	d7, [r4]
 8010f34:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010f38:	e755      	b.n	8010de6 <__kernel_rem_pio2+0x516>
 8010f3a:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8010f3e:	f7ef f9c5 	bl	80002cc <__adddf3>
 8010f42:	3d01      	subs	r5, #1
 8010f44:	e759      	b.n	8010dfa <__kernel_rem_pio2+0x52a>
 8010f46:	9b01      	ldr	r3, [sp, #4]
 8010f48:	9a01      	ldr	r2, [sp, #4]
 8010f4a:	601d      	str	r5, [r3, #0]
 8010f4c:	f106 4400 	add.w	r4, r6, #2147483648	; 0x80000000
 8010f50:	605c      	str	r4, [r3, #4]
 8010f52:	609f      	str	r7, [r3, #8]
 8010f54:	f108 4300 	add.w	r3, r8, #2147483648	; 0x80000000
 8010f58:	60d3      	str	r3, [r2, #12]
 8010f5a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010f5e:	6110      	str	r0, [r2, #16]
 8010f60:	6153      	str	r3, [r2, #20]
 8010f62:	e728      	b.n	8010db6 <__kernel_rem_pio2+0x4e6>
 8010f64:	41700000 	.word	0x41700000
 8010f68:	3e700000 	.word	0x3e700000
 8010f6c:	00000000 	.word	0x00000000

08010f70 <__kernel_tan>:
 8010f70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f74:	ed2d 8b06 	vpush	{d8-d10}
 8010f78:	ec5b ab10 	vmov	sl, fp, d0
 8010f7c:	4be0      	ldr	r3, [pc, #896]	; (8011300 <__kernel_tan+0x390>)
 8010f7e:	b083      	sub	sp, #12
 8010f80:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
 8010f84:	429f      	cmp	r7, r3
 8010f86:	ec59 8b11 	vmov	r8, r9, d1
 8010f8a:	4606      	mov	r6, r0
 8010f8c:	f8cd b000 	str.w	fp, [sp]
 8010f90:	dc61      	bgt.n	8011056 <__kernel_tan+0xe6>
 8010f92:	ee10 0a10 	vmov	r0, s0
 8010f96:	4659      	mov	r1, fp
 8010f98:	f7ef fdfe 	bl	8000b98 <__aeabi_d2iz>
 8010f9c:	4605      	mov	r5, r0
 8010f9e:	2800      	cmp	r0, #0
 8010fa0:	f040 8083 	bne.w	80110aa <__kernel_tan+0x13a>
 8010fa4:	1c73      	adds	r3, r6, #1
 8010fa6:	4652      	mov	r2, sl
 8010fa8:	4313      	orrs	r3, r2
 8010faa:	433b      	orrs	r3, r7
 8010fac:	d112      	bne.n	8010fd4 <__kernel_tan+0x64>
 8010fae:	ec4b ab10 	vmov	d0, sl, fp
 8010fb2:	f7ff fa41 	bl	8010438 <fabs>
 8010fb6:	49d3      	ldr	r1, [pc, #844]	; (8011304 <__kernel_tan+0x394>)
 8010fb8:	ec53 2b10 	vmov	r2, r3, d0
 8010fbc:	2000      	movs	r0, #0
 8010fbe:	f7ef fc65 	bl	800088c <__aeabi_ddiv>
 8010fc2:	4682      	mov	sl, r0
 8010fc4:	468b      	mov	fp, r1
 8010fc6:	ec4b ab10 	vmov	d0, sl, fp
 8010fca:	b003      	add	sp, #12
 8010fcc:	ecbd 8b06 	vpop	{d8-d10}
 8010fd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010fd4:	2e01      	cmp	r6, #1
 8010fd6:	d0f6      	beq.n	8010fc6 <__kernel_tan+0x56>
 8010fd8:	4642      	mov	r2, r8
 8010fda:	464b      	mov	r3, r9
 8010fdc:	4650      	mov	r0, sl
 8010fde:	4659      	mov	r1, fp
 8010fe0:	f7ef f974 	bl	80002cc <__adddf3>
 8010fe4:	4602      	mov	r2, r0
 8010fe6:	460b      	mov	r3, r1
 8010fe8:	460f      	mov	r7, r1
 8010fea:	2000      	movs	r0, #0
 8010fec:	49c6      	ldr	r1, [pc, #792]	; (8011308 <__kernel_tan+0x398>)
 8010fee:	f7ef fc4d 	bl	800088c <__aeabi_ddiv>
 8010ff2:	e9cd 0100 	strd	r0, r1, [sp]
 8010ff6:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010ffa:	462e      	mov	r6, r5
 8010ffc:	4652      	mov	r2, sl
 8010ffe:	462c      	mov	r4, r5
 8011000:	4630      	mov	r0, r6
 8011002:	461d      	mov	r5, r3
 8011004:	4639      	mov	r1, r7
 8011006:	465b      	mov	r3, fp
 8011008:	f7ef f95e 	bl	80002c8 <__aeabi_dsub>
 801100c:	4602      	mov	r2, r0
 801100e:	460b      	mov	r3, r1
 8011010:	4640      	mov	r0, r8
 8011012:	4649      	mov	r1, r9
 8011014:	f7ef f958 	bl	80002c8 <__aeabi_dsub>
 8011018:	4632      	mov	r2, r6
 801101a:	462b      	mov	r3, r5
 801101c:	f7ef fb0c 	bl	8000638 <__aeabi_dmul>
 8011020:	4632      	mov	r2, r6
 8011022:	4680      	mov	r8, r0
 8011024:	4689      	mov	r9, r1
 8011026:	462b      	mov	r3, r5
 8011028:	4630      	mov	r0, r6
 801102a:	4639      	mov	r1, r7
 801102c:	f7ef fb04 	bl	8000638 <__aeabi_dmul>
 8011030:	4bb4      	ldr	r3, [pc, #720]	; (8011304 <__kernel_tan+0x394>)
 8011032:	2200      	movs	r2, #0
 8011034:	f7ef f94a 	bl	80002cc <__adddf3>
 8011038:	4602      	mov	r2, r0
 801103a:	460b      	mov	r3, r1
 801103c:	4640      	mov	r0, r8
 801103e:	4649      	mov	r1, r9
 8011040:	f7ef f944 	bl	80002cc <__adddf3>
 8011044:	e9dd 2300 	ldrd	r2, r3, [sp]
 8011048:	f7ef faf6 	bl	8000638 <__aeabi_dmul>
 801104c:	4622      	mov	r2, r4
 801104e:	462b      	mov	r3, r5
 8011050:	f7ef f93c 	bl	80002cc <__adddf3>
 8011054:	e7b5      	b.n	8010fc2 <__kernel_tan+0x52>
 8011056:	4bad      	ldr	r3, [pc, #692]	; (801130c <__kernel_tan+0x39c>)
 8011058:	429f      	cmp	r7, r3
 801105a:	dd26      	ble.n	80110aa <__kernel_tan+0x13a>
 801105c:	9b00      	ldr	r3, [sp, #0]
 801105e:	2b00      	cmp	r3, #0
 8011060:	da09      	bge.n	8011076 <__kernel_tan+0x106>
 8011062:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 8011066:	469b      	mov	fp, r3
 8011068:	ee10 aa10 	vmov	sl, s0
 801106c:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8011070:	ee11 8a10 	vmov	r8, s2
 8011074:	4699      	mov	r9, r3
 8011076:	4652      	mov	r2, sl
 8011078:	465b      	mov	r3, fp
 801107a:	a183      	add	r1, pc, #524	; (adr r1, 8011288 <__kernel_tan+0x318>)
 801107c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8011080:	f7ef f922 	bl	80002c8 <__aeabi_dsub>
 8011084:	4642      	mov	r2, r8
 8011086:	464b      	mov	r3, r9
 8011088:	4604      	mov	r4, r0
 801108a:	460d      	mov	r5, r1
 801108c:	a180      	add	r1, pc, #512	; (adr r1, 8011290 <__kernel_tan+0x320>)
 801108e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8011092:	f7ef f919 	bl	80002c8 <__aeabi_dsub>
 8011096:	4622      	mov	r2, r4
 8011098:	462b      	mov	r3, r5
 801109a:	f7ef f917 	bl	80002cc <__adddf3>
 801109e:	f04f 0800 	mov.w	r8, #0
 80110a2:	4682      	mov	sl, r0
 80110a4:	468b      	mov	fp, r1
 80110a6:	f04f 0900 	mov.w	r9, #0
 80110aa:	4652      	mov	r2, sl
 80110ac:	465b      	mov	r3, fp
 80110ae:	4650      	mov	r0, sl
 80110b0:	4659      	mov	r1, fp
 80110b2:	f7ef fac1 	bl	8000638 <__aeabi_dmul>
 80110b6:	4602      	mov	r2, r0
 80110b8:	460b      	mov	r3, r1
 80110ba:	ec43 2b18 	vmov	d8, r2, r3
 80110be:	f7ef fabb 	bl	8000638 <__aeabi_dmul>
 80110c2:	ec53 2b18 	vmov	r2, r3, d8
 80110c6:	4604      	mov	r4, r0
 80110c8:	460d      	mov	r5, r1
 80110ca:	4650      	mov	r0, sl
 80110cc:	4659      	mov	r1, fp
 80110ce:	f7ef fab3 	bl	8000638 <__aeabi_dmul>
 80110d2:	a371      	add	r3, pc, #452	; (adr r3, 8011298 <__kernel_tan+0x328>)
 80110d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80110d8:	ec41 0b19 	vmov	d9, r0, r1
 80110dc:	4620      	mov	r0, r4
 80110de:	4629      	mov	r1, r5
 80110e0:	f7ef faaa 	bl	8000638 <__aeabi_dmul>
 80110e4:	a36e      	add	r3, pc, #440	; (adr r3, 80112a0 <__kernel_tan+0x330>)
 80110e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80110ea:	f7ef f8ef 	bl	80002cc <__adddf3>
 80110ee:	4622      	mov	r2, r4
 80110f0:	462b      	mov	r3, r5
 80110f2:	f7ef faa1 	bl	8000638 <__aeabi_dmul>
 80110f6:	a36c      	add	r3, pc, #432	; (adr r3, 80112a8 <__kernel_tan+0x338>)
 80110f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80110fc:	f7ef f8e6 	bl	80002cc <__adddf3>
 8011100:	4622      	mov	r2, r4
 8011102:	462b      	mov	r3, r5
 8011104:	f7ef fa98 	bl	8000638 <__aeabi_dmul>
 8011108:	a369      	add	r3, pc, #420	; (adr r3, 80112b0 <__kernel_tan+0x340>)
 801110a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801110e:	f7ef f8dd 	bl	80002cc <__adddf3>
 8011112:	4622      	mov	r2, r4
 8011114:	462b      	mov	r3, r5
 8011116:	f7ef fa8f 	bl	8000638 <__aeabi_dmul>
 801111a:	a367      	add	r3, pc, #412	; (adr r3, 80112b8 <__kernel_tan+0x348>)
 801111c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011120:	f7ef f8d4 	bl	80002cc <__adddf3>
 8011124:	4622      	mov	r2, r4
 8011126:	462b      	mov	r3, r5
 8011128:	f7ef fa86 	bl	8000638 <__aeabi_dmul>
 801112c:	a364      	add	r3, pc, #400	; (adr r3, 80112c0 <__kernel_tan+0x350>)
 801112e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011132:	f7ef f8cb 	bl	80002cc <__adddf3>
 8011136:	ec53 2b18 	vmov	r2, r3, d8
 801113a:	f7ef fa7d 	bl	8000638 <__aeabi_dmul>
 801113e:	a362      	add	r3, pc, #392	; (adr r3, 80112c8 <__kernel_tan+0x358>)
 8011140:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011144:	ec41 0b1a 	vmov	d10, r0, r1
 8011148:	4620      	mov	r0, r4
 801114a:	4629      	mov	r1, r5
 801114c:	f7ef fa74 	bl	8000638 <__aeabi_dmul>
 8011150:	a35f      	add	r3, pc, #380	; (adr r3, 80112d0 <__kernel_tan+0x360>)
 8011152:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011156:	f7ef f8b9 	bl	80002cc <__adddf3>
 801115a:	4622      	mov	r2, r4
 801115c:	462b      	mov	r3, r5
 801115e:	f7ef fa6b 	bl	8000638 <__aeabi_dmul>
 8011162:	a35d      	add	r3, pc, #372	; (adr r3, 80112d8 <__kernel_tan+0x368>)
 8011164:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011168:	f7ef f8b0 	bl	80002cc <__adddf3>
 801116c:	4622      	mov	r2, r4
 801116e:	462b      	mov	r3, r5
 8011170:	f7ef fa62 	bl	8000638 <__aeabi_dmul>
 8011174:	a35a      	add	r3, pc, #360	; (adr r3, 80112e0 <__kernel_tan+0x370>)
 8011176:	e9d3 2300 	ldrd	r2, r3, [r3]
 801117a:	f7ef f8a7 	bl	80002cc <__adddf3>
 801117e:	4622      	mov	r2, r4
 8011180:	462b      	mov	r3, r5
 8011182:	f7ef fa59 	bl	8000638 <__aeabi_dmul>
 8011186:	a358      	add	r3, pc, #352	; (adr r3, 80112e8 <__kernel_tan+0x378>)
 8011188:	e9d3 2300 	ldrd	r2, r3, [r3]
 801118c:	f7ef f89e 	bl	80002cc <__adddf3>
 8011190:	4622      	mov	r2, r4
 8011192:	462b      	mov	r3, r5
 8011194:	f7ef fa50 	bl	8000638 <__aeabi_dmul>
 8011198:	a355      	add	r3, pc, #340	; (adr r3, 80112f0 <__kernel_tan+0x380>)
 801119a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801119e:	f7ef f895 	bl	80002cc <__adddf3>
 80111a2:	4602      	mov	r2, r0
 80111a4:	460b      	mov	r3, r1
 80111a6:	ec51 0b1a 	vmov	r0, r1, d10
 80111aa:	f7ef f88f 	bl	80002cc <__adddf3>
 80111ae:	ec53 2b19 	vmov	r2, r3, d9
 80111b2:	f7ef fa41 	bl	8000638 <__aeabi_dmul>
 80111b6:	4642      	mov	r2, r8
 80111b8:	464b      	mov	r3, r9
 80111ba:	f7ef f887 	bl	80002cc <__adddf3>
 80111be:	ec53 2b18 	vmov	r2, r3, d8
 80111c2:	f7ef fa39 	bl	8000638 <__aeabi_dmul>
 80111c6:	4642      	mov	r2, r8
 80111c8:	464b      	mov	r3, r9
 80111ca:	f7ef f87f 	bl	80002cc <__adddf3>
 80111ce:	a34a      	add	r3, pc, #296	; (adr r3, 80112f8 <__kernel_tan+0x388>)
 80111d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80111d4:	4604      	mov	r4, r0
 80111d6:	460d      	mov	r5, r1
 80111d8:	ec51 0b19 	vmov	r0, r1, d9
 80111dc:	f7ef fa2c 	bl	8000638 <__aeabi_dmul>
 80111e0:	4622      	mov	r2, r4
 80111e2:	462b      	mov	r3, r5
 80111e4:	f7ef f872 	bl	80002cc <__adddf3>
 80111e8:	460b      	mov	r3, r1
 80111ea:	ec41 0b18 	vmov	d8, r0, r1
 80111ee:	4602      	mov	r2, r0
 80111f0:	4659      	mov	r1, fp
 80111f2:	4650      	mov	r0, sl
 80111f4:	f7ef f86a 	bl	80002cc <__adddf3>
 80111f8:	4b44      	ldr	r3, [pc, #272]	; (801130c <__kernel_tan+0x39c>)
 80111fa:	429f      	cmp	r7, r3
 80111fc:	4604      	mov	r4, r0
 80111fe:	460d      	mov	r5, r1
 8011200:	f340 8086 	ble.w	8011310 <__kernel_tan+0x3a0>
 8011204:	4630      	mov	r0, r6
 8011206:	f7ef f9ad 	bl	8000564 <__aeabi_i2d>
 801120a:	4622      	mov	r2, r4
 801120c:	4680      	mov	r8, r0
 801120e:	4689      	mov	r9, r1
 8011210:	462b      	mov	r3, r5
 8011212:	4620      	mov	r0, r4
 8011214:	4629      	mov	r1, r5
 8011216:	f7ef fa0f 	bl	8000638 <__aeabi_dmul>
 801121a:	4642      	mov	r2, r8
 801121c:	4606      	mov	r6, r0
 801121e:	460f      	mov	r7, r1
 8011220:	464b      	mov	r3, r9
 8011222:	4620      	mov	r0, r4
 8011224:	4629      	mov	r1, r5
 8011226:	f7ef f851 	bl	80002cc <__adddf3>
 801122a:	4602      	mov	r2, r0
 801122c:	460b      	mov	r3, r1
 801122e:	4630      	mov	r0, r6
 8011230:	4639      	mov	r1, r7
 8011232:	f7ef fb2b 	bl	800088c <__aeabi_ddiv>
 8011236:	ec53 2b18 	vmov	r2, r3, d8
 801123a:	f7ef f845 	bl	80002c8 <__aeabi_dsub>
 801123e:	4602      	mov	r2, r0
 8011240:	460b      	mov	r3, r1
 8011242:	4650      	mov	r0, sl
 8011244:	4659      	mov	r1, fp
 8011246:	f7ef f83f 	bl	80002c8 <__aeabi_dsub>
 801124a:	4602      	mov	r2, r0
 801124c:	460b      	mov	r3, r1
 801124e:	f7ef f83d 	bl	80002cc <__adddf3>
 8011252:	4602      	mov	r2, r0
 8011254:	460b      	mov	r3, r1
 8011256:	4640      	mov	r0, r8
 8011258:	4649      	mov	r1, r9
 801125a:	f7ef f835 	bl	80002c8 <__aeabi_dsub>
 801125e:	9b00      	ldr	r3, [sp, #0]
 8011260:	ea4f 7aa3 	mov.w	sl, r3, asr #30
 8011264:	f00a 0a02 	and.w	sl, sl, #2
 8011268:	4604      	mov	r4, r0
 801126a:	f1ca 0001 	rsb	r0, sl, #1
 801126e:	460d      	mov	r5, r1
 8011270:	f7ef f978 	bl	8000564 <__aeabi_i2d>
 8011274:	4602      	mov	r2, r0
 8011276:	460b      	mov	r3, r1
 8011278:	4620      	mov	r0, r4
 801127a:	4629      	mov	r1, r5
 801127c:	f7ef f9dc 	bl	8000638 <__aeabi_dmul>
 8011280:	e69f      	b.n	8010fc2 <__kernel_tan+0x52>
 8011282:	bf00      	nop
 8011284:	f3af 8000 	nop.w
 8011288:	54442d18 	.word	0x54442d18
 801128c:	3fe921fb 	.word	0x3fe921fb
 8011290:	33145c07 	.word	0x33145c07
 8011294:	3c81a626 	.word	0x3c81a626
 8011298:	74bf7ad4 	.word	0x74bf7ad4
 801129c:	3efb2a70 	.word	0x3efb2a70
 80112a0:	32f0a7e9 	.word	0x32f0a7e9
 80112a4:	3f12b80f 	.word	0x3f12b80f
 80112a8:	1a8d1068 	.word	0x1a8d1068
 80112ac:	3f3026f7 	.word	0x3f3026f7
 80112b0:	fee08315 	.word	0xfee08315
 80112b4:	3f57dbc8 	.word	0x3f57dbc8
 80112b8:	e96e8493 	.word	0xe96e8493
 80112bc:	3f8226e3 	.word	0x3f8226e3
 80112c0:	1bb341fe 	.word	0x1bb341fe
 80112c4:	3faba1ba 	.word	0x3faba1ba
 80112c8:	db605373 	.word	0xdb605373
 80112cc:	bef375cb 	.word	0xbef375cb
 80112d0:	a03792a6 	.word	0xa03792a6
 80112d4:	3f147e88 	.word	0x3f147e88
 80112d8:	f2f26501 	.word	0xf2f26501
 80112dc:	3f4344d8 	.word	0x3f4344d8
 80112e0:	c9560328 	.word	0xc9560328
 80112e4:	3f6d6d22 	.word	0x3f6d6d22
 80112e8:	8406d637 	.word	0x8406d637
 80112ec:	3f9664f4 	.word	0x3f9664f4
 80112f0:	1110fe7a 	.word	0x1110fe7a
 80112f4:	3fc11111 	.word	0x3fc11111
 80112f8:	55555563 	.word	0x55555563
 80112fc:	3fd55555 	.word	0x3fd55555
 8011300:	3e2fffff 	.word	0x3e2fffff
 8011304:	3ff00000 	.word	0x3ff00000
 8011308:	bff00000 	.word	0xbff00000
 801130c:	3fe59427 	.word	0x3fe59427
 8011310:	2e01      	cmp	r6, #1
 8011312:	d02f      	beq.n	8011374 <__kernel_tan+0x404>
 8011314:	460f      	mov	r7, r1
 8011316:	4602      	mov	r2, r0
 8011318:	460b      	mov	r3, r1
 801131a:	4689      	mov	r9, r1
 801131c:	2000      	movs	r0, #0
 801131e:	4917      	ldr	r1, [pc, #92]	; (801137c <__kernel_tan+0x40c>)
 8011320:	f7ef fab4 	bl	800088c <__aeabi_ddiv>
 8011324:	2600      	movs	r6, #0
 8011326:	e9cd 0100 	strd	r0, r1, [sp]
 801132a:	4652      	mov	r2, sl
 801132c:	465b      	mov	r3, fp
 801132e:	4630      	mov	r0, r6
 8011330:	4639      	mov	r1, r7
 8011332:	f7ee ffc9 	bl	80002c8 <__aeabi_dsub>
 8011336:	e9dd 4500 	ldrd	r4, r5, [sp]
 801133a:	4602      	mov	r2, r0
 801133c:	460b      	mov	r3, r1
 801133e:	ec51 0b18 	vmov	r0, r1, d8
 8011342:	f7ee ffc1 	bl	80002c8 <__aeabi_dsub>
 8011346:	4632      	mov	r2, r6
 8011348:	462b      	mov	r3, r5
 801134a:	f7ef f975 	bl	8000638 <__aeabi_dmul>
 801134e:	46b0      	mov	r8, r6
 8011350:	460f      	mov	r7, r1
 8011352:	4642      	mov	r2, r8
 8011354:	462b      	mov	r3, r5
 8011356:	4634      	mov	r4, r6
 8011358:	4649      	mov	r1, r9
 801135a:	4606      	mov	r6, r0
 801135c:	4640      	mov	r0, r8
 801135e:	f7ef f96b 	bl	8000638 <__aeabi_dmul>
 8011362:	4b07      	ldr	r3, [pc, #28]	; (8011380 <__kernel_tan+0x410>)
 8011364:	2200      	movs	r2, #0
 8011366:	f7ee ffb1 	bl	80002cc <__adddf3>
 801136a:	4602      	mov	r2, r0
 801136c:	460b      	mov	r3, r1
 801136e:	4630      	mov	r0, r6
 8011370:	4639      	mov	r1, r7
 8011372:	e665      	b.n	8011040 <__kernel_tan+0xd0>
 8011374:	4682      	mov	sl, r0
 8011376:	468b      	mov	fp, r1
 8011378:	e625      	b.n	8010fc6 <__kernel_tan+0x56>
 801137a:	bf00      	nop
 801137c:	bff00000 	.word	0xbff00000
 8011380:	3ff00000 	.word	0x3ff00000
 8011384:	00000000 	.word	0x00000000

08011388 <floor>:
 8011388:	ec51 0b10 	vmov	r0, r1, d0
 801138c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011390:	f3c1 570a 	ubfx	r7, r1, #20, #11
 8011394:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 8011398:	2e13      	cmp	r6, #19
 801139a:	ee10 5a10 	vmov	r5, s0
 801139e:	ee10 8a10 	vmov	r8, s0
 80113a2:	460c      	mov	r4, r1
 80113a4:	dc32      	bgt.n	801140c <floor+0x84>
 80113a6:	2e00      	cmp	r6, #0
 80113a8:	da14      	bge.n	80113d4 <floor+0x4c>
 80113aa:	a333      	add	r3, pc, #204	; (adr r3, 8011478 <floor+0xf0>)
 80113ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80113b0:	f7ee ff8c 	bl	80002cc <__adddf3>
 80113b4:	2200      	movs	r2, #0
 80113b6:	2300      	movs	r3, #0
 80113b8:	f7ef fbce 	bl	8000b58 <__aeabi_dcmpgt>
 80113bc:	b138      	cbz	r0, 80113ce <floor+0x46>
 80113be:	2c00      	cmp	r4, #0
 80113c0:	da57      	bge.n	8011472 <floor+0xea>
 80113c2:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 80113c6:	431d      	orrs	r5, r3
 80113c8:	d001      	beq.n	80113ce <floor+0x46>
 80113ca:	4c2d      	ldr	r4, [pc, #180]	; (8011480 <floor+0xf8>)
 80113cc:	2500      	movs	r5, #0
 80113ce:	4621      	mov	r1, r4
 80113d0:	4628      	mov	r0, r5
 80113d2:	e025      	b.n	8011420 <floor+0x98>
 80113d4:	4f2b      	ldr	r7, [pc, #172]	; (8011484 <floor+0xfc>)
 80113d6:	4137      	asrs	r7, r6
 80113d8:	ea01 0307 	and.w	r3, r1, r7
 80113dc:	4303      	orrs	r3, r0
 80113de:	d01f      	beq.n	8011420 <floor+0x98>
 80113e0:	a325      	add	r3, pc, #148	; (adr r3, 8011478 <floor+0xf0>)
 80113e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80113e6:	f7ee ff71 	bl	80002cc <__adddf3>
 80113ea:	2200      	movs	r2, #0
 80113ec:	2300      	movs	r3, #0
 80113ee:	f7ef fbb3 	bl	8000b58 <__aeabi_dcmpgt>
 80113f2:	2800      	cmp	r0, #0
 80113f4:	d0eb      	beq.n	80113ce <floor+0x46>
 80113f6:	2c00      	cmp	r4, #0
 80113f8:	bfbe      	ittt	lt
 80113fa:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 80113fe:	fa43 f606 	asrlt.w	r6, r3, r6
 8011402:	19a4      	addlt	r4, r4, r6
 8011404:	ea24 0407 	bic.w	r4, r4, r7
 8011408:	2500      	movs	r5, #0
 801140a:	e7e0      	b.n	80113ce <floor+0x46>
 801140c:	2e33      	cmp	r6, #51	; 0x33
 801140e:	dd0b      	ble.n	8011428 <floor+0xa0>
 8011410:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8011414:	d104      	bne.n	8011420 <floor+0x98>
 8011416:	ee10 2a10 	vmov	r2, s0
 801141a:	460b      	mov	r3, r1
 801141c:	f7ee ff56 	bl	80002cc <__adddf3>
 8011420:	ec41 0b10 	vmov	d0, r0, r1
 8011424:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011428:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 801142c:	f04f 33ff 	mov.w	r3, #4294967295
 8011430:	fa23 f707 	lsr.w	r7, r3, r7
 8011434:	4207      	tst	r7, r0
 8011436:	d0f3      	beq.n	8011420 <floor+0x98>
 8011438:	a30f      	add	r3, pc, #60	; (adr r3, 8011478 <floor+0xf0>)
 801143a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801143e:	f7ee ff45 	bl	80002cc <__adddf3>
 8011442:	2200      	movs	r2, #0
 8011444:	2300      	movs	r3, #0
 8011446:	f7ef fb87 	bl	8000b58 <__aeabi_dcmpgt>
 801144a:	2800      	cmp	r0, #0
 801144c:	d0bf      	beq.n	80113ce <floor+0x46>
 801144e:	2c00      	cmp	r4, #0
 8011450:	da02      	bge.n	8011458 <floor+0xd0>
 8011452:	2e14      	cmp	r6, #20
 8011454:	d103      	bne.n	801145e <floor+0xd6>
 8011456:	3401      	adds	r4, #1
 8011458:	ea25 0507 	bic.w	r5, r5, r7
 801145c:	e7b7      	b.n	80113ce <floor+0x46>
 801145e:	2301      	movs	r3, #1
 8011460:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 8011464:	fa03 f606 	lsl.w	r6, r3, r6
 8011468:	4435      	add	r5, r6
 801146a:	4545      	cmp	r5, r8
 801146c:	bf38      	it	cc
 801146e:	18e4      	addcc	r4, r4, r3
 8011470:	e7f2      	b.n	8011458 <floor+0xd0>
 8011472:	2500      	movs	r5, #0
 8011474:	462c      	mov	r4, r5
 8011476:	e7aa      	b.n	80113ce <floor+0x46>
 8011478:	8800759c 	.word	0x8800759c
 801147c:	7e37e43c 	.word	0x7e37e43c
 8011480:	bff00000 	.word	0xbff00000
 8011484:	000fffff 	.word	0x000fffff

08011488 <scalbn>:
 8011488:	b570      	push	{r4, r5, r6, lr}
 801148a:	ec55 4b10 	vmov	r4, r5, d0
 801148e:	f3c5 520a 	ubfx	r2, r5, #20, #11
 8011492:	4606      	mov	r6, r0
 8011494:	462b      	mov	r3, r5
 8011496:	b99a      	cbnz	r2, 80114c0 <scalbn+0x38>
 8011498:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 801149c:	4323      	orrs	r3, r4
 801149e:	d036      	beq.n	801150e <scalbn+0x86>
 80114a0:	4b39      	ldr	r3, [pc, #228]	; (8011588 <scalbn+0x100>)
 80114a2:	4629      	mov	r1, r5
 80114a4:	ee10 0a10 	vmov	r0, s0
 80114a8:	2200      	movs	r2, #0
 80114aa:	f7ef f8c5 	bl	8000638 <__aeabi_dmul>
 80114ae:	4b37      	ldr	r3, [pc, #220]	; (801158c <scalbn+0x104>)
 80114b0:	429e      	cmp	r6, r3
 80114b2:	4604      	mov	r4, r0
 80114b4:	460d      	mov	r5, r1
 80114b6:	da10      	bge.n	80114da <scalbn+0x52>
 80114b8:	a32b      	add	r3, pc, #172	; (adr r3, 8011568 <scalbn+0xe0>)
 80114ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80114be:	e03a      	b.n	8011536 <scalbn+0xae>
 80114c0:	f240 71ff 	movw	r1, #2047	; 0x7ff
 80114c4:	428a      	cmp	r2, r1
 80114c6:	d10c      	bne.n	80114e2 <scalbn+0x5a>
 80114c8:	ee10 2a10 	vmov	r2, s0
 80114cc:	4620      	mov	r0, r4
 80114ce:	4629      	mov	r1, r5
 80114d0:	f7ee fefc 	bl	80002cc <__adddf3>
 80114d4:	4604      	mov	r4, r0
 80114d6:	460d      	mov	r5, r1
 80114d8:	e019      	b.n	801150e <scalbn+0x86>
 80114da:	f3c1 520a 	ubfx	r2, r1, #20, #11
 80114de:	460b      	mov	r3, r1
 80114e0:	3a36      	subs	r2, #54	; 0x36
 80114e2:	4432      	add	r2, r6
 80114e4:	f240 71fe 	movw	r1, #2046	; 0x7fe
 80114e8:	428a      	cmp	r2, r1
 80114ea:	dd08      	ble.n	80114fe <scalbn+0x76>
 80114ec:	2d00      	cmp	r5, #0
 80114ee:	a120      	add	r1, pc, #128	; (adr r1, 8011570 <scalbn+0xe8>)
 80114f0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80114f4:	da1c      	bge.n	8011530 <scalbn+0xa8>
 80114f6:	a120      	add	r1, pc, #128	; (adr r1, 8011578 <scalbn+0xf0>)
 80114f8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80114fc:	e018      	b.n	8011530 <scalbn+0xa8>
 80114fe:	2a00      	cmp	r2, #0
 8011500:	dd08      	ble.n	8011514 <scalbn+0x8c>
 8011502:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8011506:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 801150a:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 801150e:	ec45 4b10 	vmov	d0, r4, r5
 8011512:	bd70      	pop	{r4, r5, r6, pc}
 8011514:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8011518:	da19      	bge.n	801154e <scalbn+0xc6>
 801151a:	f24c 3350 	movw	r3, #50000	; 0xc350
 801151e:	429e      	cmp	r6, r3
 8011520:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 8011524:	dd0a      	ble.n	801153c <scalbn+0xb4>
 8011526:	a112      	add	r1, pc, #72	; (adr r1, 8011570 <scalbn+0xe8>)
 8011528:	e9d1 0100 	ldrd	r0, r1, [r1]
 801152c:	2b00      	cmp	r3, #0
 801152e:	d1e2      	bne.n	80114f6 <scalbn+0x6e>
 8011530:	a30f      	add	r3, pc, #60	; (adr r3, 8011570 <scalbn+0xe8>)
 8011532:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011536:	f7ef f87f 	bl	8000638 <__aeabi_dmul>
 801153a:	e7cb      	b.n	80114d4 <scalbn+0x4c>
 801153c:	a10a      	add	r1, pc, #40	; (adr r1, 8011568 <scalbn+0xe0>)
 801153e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8011542:	2b00      	cmp	r3, #0
 8011544:	d0b8      	beq.n	80114b8 <scalbn+0x30>
 8011546:	a10e      	add	r1, pc, #56	; (adr r1, 8011580 <scalbn+0xf8>)
 8011548:	e9d1 0100 	ldrd	r0, r1, [r1]
 801154c:	e7b4      	b.n	80114b8 <scalbn+0x30>
 801154e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8011552:	3236      	adds	r2, #54	; 0x36
 8011554:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8011558:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 801155c:	4620      	mov	r0, r4
 801155e:	4b0c      	ldr	r3, [pc, #48]	; (8011590 <scalbn+0x108>)
 8011560:	2200      	movs	r2, #0
 8011562:	e7e8      	b.n	8011536 <scalbn+0xae>
 8011564:	f3af 8000 	nop.w
 8011568:	c2f8f359 	.word	0xc2f8f359
 801156c:	01a56e1f 	.word	0x01a56e1f
 8011570:	8800759c 	.word	0x8800759c
 8011574:	7e37e43c 	.word	0x7e37e43c
 8011578:	8800759c 	.word	0x8800759c
 801157c:	fe37e43c 	.word	0xfe37e43c
 8011580:	c2f8f359 	.word	0xc2f8f359
 8011584:	81a56e1f 	.word	0x81a56e1f
 8011588:	43500000 	.word	0x43500000
 801158c:	ffff3cb0 	.word	0xffff3cb0
 8011590:	3c900000 	.word	0x3c900000

08011594 <_init>:
 8011594:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011596:	bf00      	nop
 8011598:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801159a:	bc08      	pop	{r3}
 801159c:	469e      	mov	lr, r3
 801159e:	4770      	bx	lr

080115a0 <_fini>:
 80115a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80115a2:	bf00      	nop
 80115a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80115a6:	bc08      	pop	{r3}
 80115a8:	469e      	mov	lr, r3
 80115aa:	4770      	bx	lr
