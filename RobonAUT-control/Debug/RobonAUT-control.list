
RobonAUT-control.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001031c  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000750  080104f0  080104f0  000204f0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08010c40  08010c40  00030270  2**0
                  CONTENTS
  4 .ARM          00000008  08010c40  08010c40  00020c40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08010c48  08010c48  00030270  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08010c48  08010c48  00020c48  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08010c4c  08010c4c  00020c4c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000270  20000000  08010c50  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000008d8  20000270  08010ec0  00030270  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000b48  08010ec0  00030b48  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00030270  2**0
                  CONTENTS, READONLY
 12 .debug_info   00017f4e  00000000  00000000  000302a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000037ed  00000000  00000000  000481ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000012a0  00000000  00000000  0004b9e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001180  00000000  00000000  0004cc80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000263d7  00000000  00000000  0004de00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000193d9  00000000  00000000  000741d7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000e14d0  00000000  00000000  0008d5b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0016ea80  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00006088  00000000  00000000  0016ead0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000270 	.word	0x20000270
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080104d4 	.word	0x080104d4

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000274 	.word	0x20000274
 800020c:	080104d4 	.word	0x080104d4

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295
 8000c9c:	f000 b974 	b.w	8000f88 <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f806 	bl	8000cb8 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__udivmoddi4>:
 8000cb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cbc:	9d08      	ldr	r5, [sp, #32]
 8000cbe:	4604      	mov	r4, r0
 8000cc0:	468e      	mov	lr, r1
 8000cc2:	2b00      	cmp	r3, #0
 8000cc4:	d14d      	bne.n	8000d62 <__udivmoddi4+0xaa>
 8000cc6:	428a      	cmp	r2, r1
 8000cc8:	4694      	mov	ip, r2
 8000cca:	d969      	bls.n	8000da0 <__udivmoddi4+0xe8>
 8000ccc:	fab2 f282 	clz	r2, r2
 8000cd0:	b152      	cbz	r2, 8000ce8 <__udivmoddi4+0x30>
 8000cd2:	fa01 f302 	lsl.w	r3, r1, r2
 8000cd6:	f1c2 0120 	rsb	r1, r2, #32
 8000cda:	fa20 f101 	lsr.w	r1, r0, r1
 8000cde:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ce2:	ea41 0e03 	orr.w	lr, r1, r3
 8000ce6:	4094      	lsls	r4, r2
 8000ce8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000cec:	0c21      	lsrs	r1, r4, #16
 8000cee:	fbbe f6f8 	udiv	r6, lr, r8
 8000cf2:	fa1f f78c 	uxth.w	r7, ip
 8000cf6:	fb08 e316 	mls	r3, r8, r6, lr
 8000cfa:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000cfe:	fb06 f107 	mul.w	r1, r6, r7
 8000d02:	4299      	cmp	r1, r3
 8000d04:	d90a      	bls.n	8000d1c <__udivmoddi4+0x64>
 8000d06:	eb1c 0303 	adds.w	r3, ip, r3
 8000d0a:	f106 30ff 	add.w	r0, r6, #4294967295
 8000d0e:	f080 811f 	bcs.w	8000f50 <__udivmoddi4+0x298>
 8000d12:	4299      	cmp	r1, r3
 8000d14:	f240 811c 	bls.w	8000f50 <__udivmoddi4+0x298>
 8000d18:	3e02      	subs	r6, #2
 8000d1a:	4463      	add	r3, ip
 8000d1c:	1a5b      	subs	r3, r3, r1
 8000d1e:	b2a4      	uxth	r4, r4
 8000d20:	fbb3 f0f8 	udiv	r0, r3, r8
 8000d24:	fb08 3310 	mls	r3, r8, r0, r3
 8000d28:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000d2c:	fb00 f707 	mul.w	r7, r0, r7
 8000d30:	42a7      	cmp	r7, r4
 8000d32:	d90a      	bls.n	8000d4a <__udivmoddi4+0x92>
 8000d34:	eb1c 0404 	adds.w	r4, ip, r4
 8000d38:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d3c:	f080 810a 	bcs.w	8000f54 <__udivmoddi4+0x29c>
 8000d40:	42a7      	cmp	r7, r4
 8000d42:	f240 8107 	bls.w	8000f54 <__udivmoddi4+0x29c>
 8000d46:	4464      	add	r4, ip
 8000d48:	3802      	subs	r0, #2
 8000d4a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d4e:	1be4      	subs	r4, r4, r7
 8000d50:	2600      	movs	r6, #0
 8000d52:	b11d      	cbz	r5, 8000d5c <__udivmoddi4+0xa4>
 8000d54:	40d4      	lsrs	r4, r2
 8000d56:	2300      	movs	r3, #0
 8000d58:	e9c5 4300 	strd	r4, r3, [r5]
 8000d5c:	4631      	mov	r1, r6
 8000d5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d62:	428b      	cmp	r3, r1
 8000d64:	d909      	bls.n	8000d7a <__udivmoddi4+0xc2>
 8000d66:	2d00      	cmp	r5, #0
 8000d68:	f000 80ef 	beq.w	8000f4a <__udivmoddi4+0x292>
 8000d6c:	2600      	movs	r6, #0
 8000d6e:	e9c5 0100 	strd	r0, r1, [r5]
 8000d72:	4630      	mov	r0, r6
 8000d74:	4631      	mov	r1, r6
 8000d76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d7a:	fab3 f683 	clz	r6, r3
 8000d7e:	2e00      	cmp	r6, #0
 8000d80:	d14a      	bne.n	8000e18 <__udivmoddi4+0x160>
 8000d82:	428b      	cmp	r3, r1
 8000d84:	d302      	bcc.n	8000d8c <__udivmoddi4+0xd4>
 8000d86:	4282      	cmp	r2, r0
 8000d88:	f200 80f9 	bhi.w	8000f7e <__udivmoddi4+0x2c6>
 8000d8c:	1a84      	subs	r4, r0, r2
 8000d8e:	eb61 0303 	sbc.w	r3, r1, r3
 8000d92:	2001      	movs	r0, #1
 8000d94:	469e      	mov	lr, r3
 8000d96:	2d00      	cmp	r5, #0
 8000d98:	d0e0      	beq.n	8000d5c <__udivmoddi4+0xa4>
 8000d9a:	e9c5 4e00 	strd	r4, lr, [r5]
 8000d9e:	e7dd      	b.n	8000d5c <__udivmoddi4+0xa4>
 8000da0:	b902      	cbnz	r2, 8000da4 <__udivmoddi4+0xec>
 8000da2:	deff      	udf	#255	; 0xff
 8000da4:	fab2 f282 	clz	r2, r2
 8000da8:	2a00      	cmp	r2, #0
 8000daa:	f040 8092 	bne.w	8000ed2 <__udivmoddi4+0x21a>
 8000dae:	eba1 010c 	sub.w	r1, r1, ip
 8000db2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000db6:	fa1f fe8c 	uxth.w	lr, ip
 8000dba:	2601      	movs	r6, #1
 8000dbc:	0c20      	lsrs	r0, r4, #16
 8000dbe:	fbb1 f3f7 	udiv	r3, r1, r7
 8000dc2:	fb07 1113 	mls	r1, r7, r3, r1
 8000dc6:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000dca:	fb0e f003 	mul.w	r0, lr, r3
 8000dce:	4288      	cmp	r0, r1
 8000dd0:	d908      	bls.n	8000de4 <__udivmoddi4+0x12c>
 8000dd2:	eb1c 0101 	adds.w	r1, ip, r1
 8000dd6:	f103 38ff 	add.w	r8, r3, #4294967295
 8000dda:	d202      	bcs.n	8000de2 <__udivmoddi4+0x12a>
 8000ddc:	4288      	cmp	r0, r1
 8000dde:	f200 80cb 	bhi.w	8000f78 <__udivmoddi4+0x2c0>
 8000de2:	4643      	mov	r3, r8
 8000de4:	1a09      	subs	r1, r1, r0
 8000de6:	b2a4      	uxth	r4, r4
 8000de8:	fbb1 f0f7 	udiv	r0, r1, r7
 8000dec:	fb07 1110 	mls	r1, r7, r0, r1
 8000df0:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000df4:	fb0e fe00 	mul.w	lr, lr, r0
 8000df8:	45a6      	cmp	lr, r4
 8000dfa:	d908      	bls.n	8000e0e <__udivmoddi4+0x156>
 8000dfc:	eb1c 0404 	adds.w	r4, ip, r4
 8000e00:	f100 31ff 	add.w	r1, r0, #4294967295
 8000e04:	d202      	bcs.n	8000e0c <__udivmoddi4+0x154>
 8000e06:	45a6      	cmp	lr, r4
 8000e08:	f200 80bb 	bhi.w	8000f82 <__udivmoddi4+0x2ca>
 8000e0c:	4608      	mov	r0, r1
 8000e0e:	eba4 040e 	sub.w	r4, r4, lr
 8000e12:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000e16:	e79c      	b.n	8000d52 <__udivmoddi4+0x9a>
 8000e18:	f1c6 0720 	rsb	r7, r6, #32
 8000e1c:	40b3      	lsls	r3, r6
 8000e1e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000e22:	ea4c 0c03 	orr.w	ip, ip, r3
 8000e26:	fa20 f407 	lsr.w	r4, r0, r7
 8000e2a:	fa01 f306 	lsl.w	r3, r1, r6
 8000e2e:	431c      	orrs	r4, r3
 8000e30:	40f9      	lsrs	r1, r7
 8000e32:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000e36:	fa00 f306 	lsl.w	r3, r0, r6
 8000e3a:	fbb1 f8f9 	udiv	r8, r1, r9
 8000e3e:	0c20      	lsrs	r0, r4, #16
 8000e40:	fa1f fe8c 	uxth.w	lr, ip
 8000e44:	fb09 1118 	mls	r1, r9, r8, r1
 8000e48:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e4c:	fb08 f00e 	mul.w	r0, r8, lr
 8000e50:	4288      	cmp	r0, r1
 8000e52:	fa02 f206 	lsl.w	r2, r2, r6
 8000e56:	d90b      	bls.n	8000e70 <__udivmoddi4+0x1b8>
 8000e58:	eb1c 0101 	adds.w	r1, ip, r1
 8000e5c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000e60:	f080 8088 	bcs.w	8000f74 <__udivmoddi4+0x2bc>
 8000e64:	4288      	cmp	r0, r1
 8000e66:	f240 8085 	bls.w	8000f74 <__udivmoddi4+0x2bc>
 8000e6a:	f1a8 0802 	sub.w	r8, r8, #2
 8000e6e:	4461      	add	r1, ip
 8000e70:	1a09      	subs	r1, r1, r0
 8000e72:	b2a4      	uxth	r4, r4
 8000e74:	fbb1 f0f9 	udiv	r0, r1, r9
 8000e78:	fb09 1110 	mls	r1, r9, r0, r1
 8000e7c:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000e80:	fb00 fe0e 	mul.w	lr, r0, lr
 8000e84:	458e      	cmp	lr, r1
 8000e86:	d908      	bls.n	8000e9a <__udivmoddi4+0x1e2>
 8000e88:	eb1c 0101 	adds.w	r1, ip, r1
 8000e8c:	f100 34ff 	add.w	r4, r0, #4294967295
 8000e90:	d26c      	bcs.n	8000f6c <__udivmoddi4+0x2b4>
 8000e92:	458e      	cmp	lr, r1
 8000e94:	d96a      	bls.n	8000f6c <__udivmoddi4+0x2b4>
 8000e96:	3802      	subs	r0, #2
 8000e98:	4461      	add	r1, ip
 8000e9a:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000e9e:	fba0 9402 	umull	r9, r4, r0, r2
 8000ea2:	eba1 010e 	sub.w	r1, r1, lr
 8000ea6:	42a1      	cmp	r1, r4
 8000ea8:	46c8      	mov	r8, r9
 8000eaa:	46a6      	mov	lr, r4
 8000eac:	d356      	bcc.n	8000f5c <__udivmoddi4+0x2a4>
 8000eae:	d053      	beq.n	8000f58 <__udivmoddi4+0x2a0>
 8000eb0:	b15d      	cbz	r5, 8000eca <__udivmoddi4+0x212>
 8000eb2:	ebb3 0208 	subs.w	r2, r3, r8
 8000eb6:	eb61 010e 	sbc.w	r1, r1, lr
 8000eba:	fa01 f707 	lsl.w	r7, r1, r7
 8000ebe:	fa22 f306 	lsr.w	r3, r2, r6
 8000ec2:	40f1      	lsrs	r1, r6
 8000ec4:	431f      	orrs	r7, r3
 8000ec6:	e9c5 7100 	strd	r7, r1, [r5]
 8000eca:	2600      	movs	r6, #0
 8000ecc:	4631      	mov	r1, r6
 8000ece:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ed2:	f1c2 0320 	rsb	r3, r2, #32
 8000ed6:	40d8      	lsrs	r0, r3
 8000ed8:	fa0c fc02 	lsl.w	ip, ip, r2
 8000edc:	fa21 f303 	lsr.w	r3, r1, r3
 8000ee0:	4091      	lsls	r1, r2
 8000ee2:	4301      	orrs	r1, r0
 8000ee4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ee8:	fa1f fe8c 	uxth.w	lr, ip
 8000eec:	fbb3 f0f7 	udiv	r0, r3, r7
 8000ef0:	fb07 3610 	mls	r6, r7, r0, r3
 8000ef4:	0c0b      	lsrs	r3, r1, #16
 8000ef6:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000efa:	fb00 f60e 	mul.w	r6, r0, lr
 8000efe:	429e      	cmp	r6, r3
 8000f00:	fa04 f402 	lsl.w	r4, r4, r2
 8000f04:	d908      	bls.n	8000f18 <__udivmoddi4+0x260>
 8000f06:	eb1c 0303 	adds.w	r3, ip, r3
 8000f0a:	f100 38ff 	add.w	r8, r0, #4294967295
 8000f0e:	d22f      	bcs.n	8000f70 <__udivmoddi4+0x2b8>
 8000f10:	429e      	cmp	r6, r3
 8000f12:	d92d      	bls.n	8000f70 <__udivmoddi4+0x2b8>
 8000f14:	3802      	subs	r0, #2
 8000f16:	4463      	add	r3, ip
 8000f18:	1b9b      	subs	r3, r3, r6
 8000f1a:	b289      	uxth	r1, r1
 8000f1c:	fbb3 f6f7 	udiv	r6, r3, r7
 8000f20:	fb07 3316 	mls	r3, r7, r6, r3
 8000f24:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f28:	fb06 f30e 	mul.w	r3, r6, lr
 8000f2c:	428b      	cmp	r3, r1
 8000f2e:	d908      	bls.n	8000f42 <__udivmoddi4+0x28a>
 8000f30:	eb1c 0101 	adds.w	r1, ip, r1
 8000f34:	f106 38ff 	add.w	r8, r6, #4294967295
 8000f38:	d216      	bcs.n	8000f68 <__udivmoddi4+0x2b0>
 8000f3a:	428b      	cmp	r3, r1
 8000f3c:	d914      	bls.n	8000f68 <__udivmoddi4+0x2b0>
 8000f3e:	3e02      	subs	r6, #2
 8000f40:	4461      	add	r1, ip
 8000f42:	1ac9      	subs	r1, r1, r3
 8000f44:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000f48:	e738      	b.n	8000dbc <__udivmoddi4+0x104>
 8000f4a:	462e      	mov	r6, r5
 8000f4c:	4628      	mov	r0, r5
 8000f4e:	e705      	b.n	8000d5c <__udivmoddi4+0xa4>
 8000f50:	4606      	mov	r6, r0
 8000f52:	e6e3      	b.n	8000d1c <__udivmoddi4+0x64>
 8000f54:	4618      	mov	r0, r3
 8000f56:	e6f8      	b.n	8000d4a <__udivmoddi4+0x92>
 8000f58:	454b      	cmp	r3, r9
 8000f5a:	d2a9      	bcs.n	8000eb0 <__udivmoddi4+0x1f8>
 8000f5c:	ebb9 0802 	subs.w	r8, r9, r2
 8000f60:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000f64:	3801      	subs	r0, #1
 8000f66:	e7a3      	b.n	8000eb0 <__udivmoddi4+0x1f8>
 8000f68:	4646      	mov	r6, r8
 8000f6a:	e7ea      	b.n	8000f42 <__udivmoddi4+0x28a>
 8000f6c:	4620      	mov	r0, r4
 8000f6e:	e794      	b.n	8000e9a <__udivmoddi4+0x1e2>
 8000f70:	4640      	mov	r0, r8
 8000f72:	e7d1      	b.n	8000f18 <__udivmoddi4+0x260>
 8000f74:	46d0      	mov	r8, sl
 8000f76:	e77b      	b.n	8000e70 <__udivmoddi4+0x1b8>
 8000f78:	3b02      	subs	r3, #2
 8000f7a:	4461      	add	r1, ip
 8000f7c:	e732      	b.n	8000de4 <__udivmoddi4+0x12c>
 8000f7e:	4630      	mov	r0, r6
 8000f80:	e709      	b.n	8000d96 <__udivmoddi4+0xde>
 8000f82:	4464      	add	r4, ip
 8000f84:	3802      	subs	r0, #2
 8000f86:	e742      	b.n	8000e0e <__udivmoddi4+0x156>

08000f88 <__aeabi_idiv0>:
 8000f88:	4770      	bx	lr
 8000f8a:	bf00      	nop

08000f8c <__NVIC_SystemReset>:
/**
  \brief   System Reset
  \details Initiates a system reset request to reset the MCU.
 */
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
 8000f8c:	b480      	push	{r7}
 8000f8e:	af00      	add	r7, sp, #0
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000f90:	f3bf 8f4f 	dsb	sy
}
 8000f94:	bf00      	nop
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 8000f96:	4b06      	ldr	r3, [pc, #24]	; (8000fb0 <__NVIC_SystemReset+0x24>)
 8000f98:	68db      	ldr	r3, [r3, #12]
 8000f9a:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 8000f9e:	4904      	ldr	r1, [pc, #16]	; (8000fb0 <__NVIC_SystemReset+0x24>)
 8000fa0:	4b04      	ldr	r3, [pc, #16]	; (8000fb4 <__NVIC_SystemReset+0x28>)
 8000fa2:	4313      	orrs	r3, r2
 8000fa4:	60cb      	str	r3, [r1, #12]
  __ASM volatile ("dsb 0xF":::"memory");
 8000fa6:	f3bf 8f4f 	dsb	sy
}
 8000faa:	bf00      	nop
                            SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchanged */
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
 8000fac:	bf00      	nop
 8000fae:	e7fd      	b.n	8000fac <__NVIC_SystemReset+0x20>
 8000fb0:	e000ed00 	.word	0xe000ed00
 8000fb4:	05fa0004 	.word	0x05fa0004

08000fb8 <F4_Basic_Init>:
uint8_t mode;
float v_ref; //mm/s
uint8_t leaveLineEnabled;

void F4_Basic_Init(UART_HandleTypeDef *huart_debugg,TIM_HandleTypeDef *htim_scheduler,TIM_HandleTypeDef *htim_motor,TIM_HandleTypeDef *htim_servo1,TIM_HandleTypeDef *htim_servo2, TIM_HandleTypeDef *htim_encoder,TIM_HandleTypeDef *htim_delay,TIM_HandleTypeDef *htim_rand)
{
 8000fb8:	b580      	push	{r7, lr}
 8000fba:	b08e      	sub	sp, #56	; 0x38
 8000fbc:	af00      	add	r7, sp, #0
 8000fbe:	60f8      	str	r0, [r7, #12]
 8000fc0:	60b9      	str	r1, [r7, #8]
 8000fc2:	607a      	str	r2, [r7, #4]
 8000fc4:	603b      	str	r3, [r7, #0]
	char buf[40];
	LED_R(0);
 8000fc6:	2201      	movs	r2, #1
 8000fc8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000fcc:	4851      	ldr	r0, [pc, #324]	; (8001114 <F4_Basic_Init+0x15c>)
 8000fce:	f007 faff 	bl	80085d0 <HAL_GPIO_WritePin>
	LED_B(0);
 8000fd2:	2201      	movs	r2, #1
 8000fd4:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000fd8:	484e      	ldr	r0, [pc, #312]	; (8001114 <F4_Basic_Init+0x15c>)
 8000fda:	f007 faf9 	bl	80085d0 <HAL_GPIO_WritePin>
	LED_G(0);
 8000fde:	2201      	movs	r2, #1
 8000fe0:	2102      	movs	r1, #2
 8000fe2:	484c      	ldr	r0, [pc, #304]	; (8001114 <F4_Basic_Init+0x15c>)
 8000fe4:	f007 faf4 	bl	80085d0 <HAL_GPIO_WritePin>
	LED_Y(0);
 8000fe8:	2201      	movs	r2, #1
 8000fea:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000fee:	4849      	ldr	r0, [pc, #292]	; (8001114 <F4_Basic_Init+0x15c>)
 8000ff0:	f007 faee 	bl	80085d0 <HAL_GPIO_WritePin>
	LED_NUCLEO(0);
 8000ff4:	2200      	movs	r2, #0
 8000ff6:	2120      	movs	r1, #32
 8000ff8:	4847      	ldr	r0, [pc, #284]	; (8001118 <F4_Basic_Init+0x160>)
 8000ffa:	f007 fae9 	bl	80085d0 <HAL_GPIO_WritePin>
	sprintf(buf,"\r\nRobonAUT 2023 Bit Bangers F4\r\n");// a buff tömb-be beleírom (stringprint) a string-emet. 1 karakter = 1 byte = 1 tömbelem
 8000ffe:	f107 0310 	add.w	r3, r7, #16
 8001002:	4946      	ldr	r1, [pc, #280]	; (800111c <F4_Basic_Init+0x164>)
 8001004:	4618      	mov	r0, r3
 8001006:	f00b fd9f 	bl	800cb48 <siprintf>
	HAL_UART_Transmit(huart_debugg,(uint8_t*) buf, strlen(buf), 100);// A UART2-őn (ide van kötve a programozó) kiküldöm a buf karaktertömböt (string) és maximum 10-ms -ot várok hogy ezt elvégezze a periféria
 800100a:	f107 0310 	add.w	r3, r7, #16
 800100e:	4618      	mov	r0, r3
 8001010:	f7ff f8fe 	bl	8000210 <strlen>
 8001014:	4603      	mov	r3, r0
 8001016:	b29a      	uxth	r2, r3
 8001018:	f107 0110 	add.w	r1, r7, #16
 800101c:	2364      	movs	r3, #100	; 0x64
 800101e:	68f8      	ldr	r0, [r7, #12]
 8001020:	f00a f829 	bl	800b076 <HAL_UART_Transmit>

	//MotorEnable engedélyezése
	motorEnRemote=0;//csak akkor ha megnyomtuk a ravaszt
 8001024:	4b3e      	ldr	r3, [pc, #248]	; (8001120 <F4_Basic_Init+0x168>)
 8001026:	2200      	movs	r2, #0
 8001028:	701a      	strb	r2, [r3, #0]
	motorEnLineOk=1;
 800102a:	4b3e      	ldr	r3, [pc, #248]	; (8001124 <F4_Basic_Init+0x16c>)
 800102c:	2201      	movs	r2, #1
 800102e:	701a      	strb	r2, [r3, #0]
	leaveLineEnabled=0;
 8001030:	4b3d      	ldr	r3, [pc, #244]	; (8001128 <F4_Basic_Init+0x170>)
 8001032:	2200      	movs	r2, #0
 8001034:	701a      	strb	r2, [r3, #0]

	swState[0] = SW1;
 8001036:	f44f 7180 	mov.w	r1, #256	; 0x100
 800103a:	4837      	ldr	r0, [pc, #220]	; (8001118 <F4_Basic_Init+0x160>)
 800103c:	f007 fab0 	bl	80085a0 <HAL_GPIO_ReadPin>
 8001040:	4603      	mov	r3, r0
 8001042:	461a      	mov	r2, r3
 8001044:	4b39      	ldr	r3, [pc, #228]	; (800112c <F4_Basic_Init+0x174>)
 8001046:	701a      	strb	r2, [r3, #0]
	swState[1] = SW2;
 8001048:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800104c:	4831      	ldr	r0, [pc, #196]	; (8001114 <F4_Basic_Init+0x15c>)
 800104e:	f007 faa7 	bl	80085a0 <HAL_GPIO_ReadPin>
 8001052:	4603      	mov	r3, r0
 8001054:	461a      	mov	r2, r3
 8001056:	4b35      	ldr	r3, [pc, #212]	; (800112c <F4_Basic_Init+0x174>)
 8001058:	705a      	strb	r2, [r3, #1]
	if(SW2)LED_R(1);
 800105a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800105e:	482d      	ldr	r0, [pc, #180]	; (8001114 <F4_Basic_Init+0x15c>)
 8001060:	f007 fa9e 	bl	80085a0 <HAL_GPIO_ReadPin>
 8001064:	4603      	mov	r3, r0
 8001066:	2b00      	cmp	r3, #0
 8001068:	d006      	beq.n	8001078 <F4_Basic_Init+0xc0>
 800106a:	2200      	movs	r2, #0
 800106c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001070:	4828      	ldr	r0, [pc, #160]	; (8001114 <F4_Basic_Init+0x15c>)
 8001072:	f007 faad 	bl	80085d0 <HAL_GPIO_WritePin>
 8001076:	e005      	b.n	8001084 <F4_Basic_Init+0xcc>
	else LED_R(0);
 8001078:	2201      	movs	r2, #1
 800107a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800107e:	4825      	ldr	r0, [pc, #148]	; (8001114 <F4_Basic_Init+0x15c>)
 8001080:	f007 faa6 	bl	80085d0 <HAL_GPIO_WritePin>

	bFlag[0] = bFlag[1] = bFlag[2] = 0;
 8001084:	2200      	movs	r2, #0
 8001086:	4b2a      	ldr	r3, [pc, #168]	; (8001130 <F4_Basic_Init+0x178>)
 8001088:	4611      	mov	r1, r2
 800108a:	7099      	strb	r1, [r3, #2]
 800108c:	4b28      	ldr	r3, [pc, #160]	; (8001130 <F4_Basic_Init+0x178>)
 800108e:	4611      	mov	r1, r2
 8001090:	7059      	strb	r1, [r3, #1]
 8001092:	4b27      	ldr	r3, [pc, #156]	; (8001130 <F4_Basic_Init+0x178>)
 8001094:	701a      	strb	r2, [r3, #0]
	fromPC[0]=150;
 8001096:	4b27      	ldr	r3, [pc, #156]	; (8001134 <F4_Basic_Init+0x17c>)
 8001098:	2296      	movs	r2, #150	; 0x96
 800109a:	701a      	strb	r2, [r3, #0]
	fromPC[1]=150;
 800109c:	4b25      	ldr	r3, [pc, #148]	; (8001134 <F4_Basic_Init+0x17c>)
 800109e:	2296      	movs	r2, #150	; 0x96
 80010a0:	705a      	strb	r2, [r3, #1]
	mode=SKILL;
 80010a2:	4b25      	ldr	r3, [pc, #148]	; (8001138 <F4_Basic_Init+0x180>)
 80010a4:	2252      	movs	r2, #82	; 0x52
 80010a6:	701a      	strb	r2, [r3, #0]
	v_ref = 1000;
 80010a8:	4b24      	ldr	r3, [pc, #144]	; (800113c <F4_Basic_Init+0x184>)
 80010aa:	4a25      	ldr	r2, [pc, #148]	; (8001140 <F4_Basic_Init+0x188>)
 80010ac:	601a      	str	r2, [r3, #0]
	v=0;
 80010ae:	4b25      	ldr	r3, [pc, #148]	; (8001144 <F4_Basic_Init+0x18c>)
 80010b0:	f04f 0200 	mov.w	r2, #0
 80010b4:	601a      	str	r2, [r3, #0]

	//timerek elindítása
	TIM1->CCR4=SERVO_REAR_CCR_MIDDLE;
 80010b6:	4b24      	ldr	r3, [pc, #144]	; (8001148 <F4_Basic_Init+0x190>)
 80010b8:	f44f 7212 	mov.w	r2, #584	; 0x248
 80010bc:	641a      	str	r2, [r3, #64]	; 0x40
	TIM2->CCR1=SERVO_FRONT_CCR_MIDDLE;
 80010be:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80010c2:	f44f 722c 	mov.w	r2, #688	; 0x2b0
 80010c6:	635a      	str	r2, [r3, #52]	; 0x34
	//TIM2->CCR1=684; //servot középre
	//TIM3->CCR1=499; //0 kitöltési tényező a motorra
	//TIM3->CCR2=499;
	HAL_TIM_Base_Start(htim_scheduler);//heart beat timer tick start
 80010c8:	68b8      	ldr	r0, [r7, #8]
 80010ca:	f008 f955 	bl	8009378 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(htim_delay);//heart beat timer tick start
 80010ce:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 80010d0:	f008 f952 	bl	8009378 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(htim_rand);//heart beat timer tick start
 80010d4:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 80010d6:	f008 f94f 	bl	8009378 <HAL_TIM_Base_Start>
	HAL_TIM_PWM_Start(htim_motor, TIM_CHANNEL_1);//motor PWM-ek elindítása
 80010da:	2100      	movs	r1, #0
 80010dc:	6878      	ldr	r0, [r7, #4]
 80010de:	f008 fa0d 	bl	80094fc <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim_motor, TIM_CHANNEL_2);
 80010e2:	2104      	movs	r1, #4
 80010e4:	6878      	ldr	r0, [r7, #4]
 80010e6:	f008 fa09 	bl	80094fc <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim_servo1, TIM_CHANNEL_1); //servo RC pwm elindítása
 80010ea:	2100      	movs	r1, #0
 80010ec:	6838      	ldr	r0, [r7, #0]
 80010ee:	f008 fa05 	bl	80094fc <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(htim_servo2, TIM_CHANNEL_4); //servo RC pwm elindítása
 80010f2:	210c      	movs	r1, #12
 80010f4:	6c38      	ldr	r0, [r7, #64]	; 0x40
 80010f6:	f008 fa01 	bl	80094fc <HAL_TIM_PWM_Start>
	HAL_TIM_Encoder_Start(htim_encoder,TIM_CHANNEL_ALL);
 80010fa:	213c      	movs	r1, #60	; 0x3c
 80010fc:	6c78      	ldr	r0, [r7, #68]	; 0x44
 80010fe:	f008 fd6f 	bl	8009be0 <HAL_TIM_Encoder_Start>

	//Ha a PC-ről küldünk vmit azt fogadjuk
	HAL_UART_Receive_IT(huart_debugg, fromPC, 2);
 8001102:	2202      	movs	r2, #2
 8001104:	490b      	ldr	r1, [pc, #44]	; (8001134 <F4_Basic_Init+0x17c>)
 8001106:	68f8      	ldr	r0, [r7, #12]
 8001108:	f00a f8e9 	bl	800b2de <HAL_UART_Receive_IT>
}
 800110c:	bf00      	nop
 800110e:	3738      	adds	r7, #56	; 0x38
 8001110:	46bd      	mov	sp, r7
 8001112:	bd80      	pop	{r7, pc}
 8001114:	40020400 	.word	0x40020400
 8001118:	40020000 	.word	0x40020000
 800111c:	080104f0 	.word	0x080104f0
 8001120:	20000afc 	.word	0x20000afc
 8001124:	20000afd 	.word	0x20000afd
 8001128:	2000029c 	.word	0x2000029c
 800112c:	2000028c 	.word	0x2000028c
 8001130:	20000290 	.word	0x20000290
 8001134:	20000294 	.word	0x20000294
 8001138:	20000296 	.word	0x20000296
 800113c:	20000298 	.word	0x20000298
 8001140:	447a0000 	.word	0x447a0000
 8001144:	2000061c 	.word	0x2000061c
 8001148:	40010000 	.word	0x40010000

0800114c <HDI_Read_Task>:


void HDI_Read_Task(UART_HandleTypeDef *huart_debugg,TIM_HandleTypeDef *htim_servo,uint32_t tick, uint32_t period)
{
 800114c:	b580      	push	{r7, lr}
 800114e:	b084      	sub	sp, #16
 8001150:	af00      	add	r7, sp, #0
 8001152:	60f8      	str	r0, [r7, #12]
 8001154:	60b9      	str	r1, [r7, #8]
 8001156:	607a      	str	r2, [r7, #4]
 8001158:	603b      	str	r3, [r7, #0]
	static uint32_t hdi_read_task_tick=0;

	if(hdi_read_task_tick>tick) return;
 800115a:	4b29      	ldr	r3, [pc, #164]	; (8001200 <HDI_Read_Task+0xb4>)
 800115c:	681b      	ldr	r3, [r3, #0]
 800115e:	687a      	ldr	r2, [r7, #4]
 8001160:	429a      	cmp	r2, r3
 8001162:	d349      	bcc.n	80011f8 <HDI_Read_Task+0xac>
	hdi_read_task_tick = tick + period;
 8001164:	687a      	ldr	r2, [r7, #4]
 8001166:	683b      	ldr	r3, [r7, #0]
 8001168:	4413      	add	r3, r2
 800116a:	4a25      	ldr	r2, [pc, #148]	; (8001200 <HDI_Read_Task+0xb4>)
 800116c:	6013      	str	r3, [r2, #0]

	swState[0]=SW1;
 800116e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001172:	4824      	ldr	r0, [pc, #144]	; (8001204 <HDI_Read_Task+0xb8>)
 8001174:	f007 fa14 	bl	80085a0 <HAL_GPIO_ReadPin>
 8001178:	4603      	mov	r3, r0
 800117a:	461a      	mov	r2, r3
 800117c:	4b22      	ldr	r3, [pc, #136]	; (8001208 <HDI_Read_Task+0xbc>)
 800117e:	701a      	strb	r2, [r3, #0]
	swState[1]=SW2;
 8001180:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001184:	4821      	ldr	r0, [pc, #132]	; (800120c <HDI_Read_Task+0xc0>)
 8001186:	f007 fa0b 	bl	80085a0 <HAL_GPIO_ReadPin>
 800118a:	4603      	mov	r3, r0
 800118c:	461a      	mov	r2, r3
 800118e:	4b1e      	ldr	r3, [pc, #120]	; (8001208 <HDI_Read_Task+0xbc>)
 8001190:	705a      	strb	r2, [r3, #1]

	if(swState[0] && mode==FAST) LED_G(1);
 8001192:	4b1d      	ldr	r3, [pc, #116]	; (8001208 <HDI_Read_Task+0xbc>)
 8001194:	781b      	ldrb	r3, [r3, #0]
 8001196:	2b00      	cmp	r3, #0
 8001198:	d008      	beq.n	80011ac <HDI_Read_Task+0x60>
 800119a:	4b1d      	ldr	r3, [pc, #116]	; (8001210 <HDI_Read_Task+0xc4>)
 800119c:	781b      	ldrb	r3, [r3, #0]
 800119e:	2b3f      	cmp	r3, #63	; 0x3f
 80011a0:	d104      	bne.n	80011ac <HDI_Read_Task+0x60>
 80011a2:	2200      	movs	r2, #0
 80011a4:	2102      	movs	r1, #2
 80011a6:	4819      	ldr	r0, [pc, #100]	; (800120c <HDI_Read_Task+0xc0>)
 80011a8:	f007 fa12 	bl	80085d0 <HAL_GPIO_WritePin>
	if(!swState[0] && mode==FAST) LED_G(0);
 80011ac:	4b16      	ldr	r3, [pc, #88]	; (8001208 <HDI_Read_Task+0xbc>)
 80011ae:	781b      	ldrb	r3, [r3, #0]
 80011b0:	2b00      	cmp	r3, #0
 80011b2:	d108      	bne.n	80011c6 <HDI_Read_Task+0x7a>
 80011b4:	4b16      	ldr	r3, [pc, #88]	; (8001210 <HDI_Read_Task+0xc4>)
 80011b6:	781b      	ldrb	r3, [r3, #0]
 80011b8:	2b3f      	cmp	r3, #63	; 0x3f
 80011ba:	d104      	bne.n	80011c6 <HDI_Read_Task+0x7a>
 80011bc:	2201      	movs	r2, #1
 80011be:	2102      	movs	r1, #2
 80011c0:	4812      	ldr	r0, [pc, #72]	; (800120c <HDI_Read_Task+0xc0>)
 80011c2:	f007 fa05 	bl	80085d0 <HAL_GPIO_WritePin>
	if(swState[1]) LED_R(1);
 80011c6:	4b10      	ldr	r3, [pc, #64]	; (8001208 <HDI_Read_Task+0xbc>)
 80011c8:	785b      	ldrb	r3, [r3, #1]
 80011ca:	2b00      	cmp	r3, #0
 80011cc:	d005      	beq.n	80011da <HDI_Read_Task+0x8e>
 80011ce:	2200      	movs	r2, #0
 80011d0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011d4:	480d      	ldr	r0, [pc, #52]	; (800120c <HDI_Read_Task+0xc0>)
 80011d6:	f007 f9fb 	bl	80085d0 <HAL_GPIO_WritePin>
	if(!swState[1]) LED_R(0);
 80011da:	4b0b      	ldr	r3, [pc, #44]	; (8001208 <HDI_Read_Task+0xbc>)
 80011dc:	785b      	ldrb	r3, [r3, #1]
 80011de:	2b00      	cmp	r3, #0
 80011e0:	d105      	bne.n	80011ee <HDI_Read_Task+0xa2>
 80011e2:	2201      	movs	r2, #1
 80011e4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011e8:	4808      	ldr	r0, [pc, #32]	; (800120c <HDI_Read_Task+0xc0>)
 80011ea:	f007 f9f1 	bl	80085d0 <HAL_GPIO_WritePin>

	if(bFlag[0]);
 80011ee:	4b09      	ldr	r3, [pc, #36]	; (8001214 <HDI_Read_Task+0xc8>)
 80011f0:	781b      	ldrb	r3, [r3, #0]
	if(bFlag[1]);
 80011f2:	4b08      	ldr	r3, [pc, #32]	; (8001214 <HDI_Read_Task+0xc8>)
 80011f4:	785b      	ldrb	r3, [r3, #1]
 80011f6:	e000      	b.n	80011fa <HDI_Read_Task+0xae>
	if(hdi_read_task_tick>tick) return;
 80011f8:	bf00      	nop

}
 80011fa:	3710      	adds	r7, #16
 80011fc:	46bd      	mov	sp, r7
 80011fe:	bd80      	pop	{r7, pc}
 8001200:	200002a0 	.word	0x200002a0
 8001204:	40020000 	.word	0x40020000
 8001208:	2000028c 	.word	0x2000028c
 800120c:	40020400 	.word	0x40020400
 8001210:	20000296 	.word	0x20000296
 8001214:	20000290 	.word	0x20000290

08001218 <Uart_Receive_From_PC_ISR>:

void Uart_Receive_From_PC_ISR(UART_HandleTypeDef *huart)
{
 8001218:	b580      	push	{r7, lr}
 800121a:	b082      	sub	sp, #8
 800121c:	af00      	add	r7, sp, #0
 800121e:	6078      	str	r0, [r7, #4]
	LED_Y_TOGGLE;
 8001220:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001224:	480c      	ldr	r0, [pc, #48]	; (8001258 <Uart_Receive_From_PC_ISR+0x40>)
 8001226:	f007 f9ec 	bl	8008602 <HAL_GPIO_TogglePin>
	HAL_UART_Receive_IT(huart, (uint8_t*)fromPC, 2);
 800122a:	2202      	movs	r2, #2
 800122c:	490b      	ldr	r1, [pc, #44]	; (800125c <Uart_Receive_From_PC_ISR+0x44>)
 800122e:	6878      	ldr	r0, [r7, #4]
 8001230:	f00a f855 	bl	800b2de <HAL_UART_Receive_IT>
	TIM2->CCR1 = 4*fromPC[0];
 8001234:	4b09      	ldr	r3, [pc, #36]	; (800125c <Uart_Receive_From_PC_ISR+0x44>)
 8001236:	781b      	ldrb	r3, [r3, #0]
 8001238:	b2db      	uxtb	r3, r3
 800123a:	009a      	lsls	r2, r3, #2
 800123c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001240:	635a      	str	r2, [r3, #52]	; 0x34
	TIM1->CCR4 = 4*fromPC[1];
 8001242:	4b06      	ldr	r3, [pc, #24]	; (800125c <Uart_Receive_From_PC_ISR+0x44>)
 8001244:	785b      	ldrb	r3, [r3, #1]
 8001246:	b2db      	uxtb	r3, r3
 8001248:	009a      	lsls	r2, r3, #2
 800124a:	4b05      	ldr	r3, [pc, #20]	; (8001260 <Uart_Receive_From_PC_ISR+0x48>)
 800124c:	641a      	str	r2, [r3, #64]	; 0x40
}
 800124e:	bf00      	nop
 8001250:	3708      	adds	r7, #8
 8001252:	46bd      	mov	sp, r7
 8001254:	bd80      	pop	{r7, pc}
 8001256:	bf00      	nop
 8001258:	40020400 	.word	0x40020400
 800125c:	20000294 	.word	0x20000294
 8001260:	40010000 	.word	0x40010000

08001264 <B1_ISR>:

void B1_ISR(UART_HandleTypeDef *huart_debugg)
{
 8001264:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8001268:	b084      	sub	sp, #16
 800126a:	af00      	add	r7, sp, #0
 800126c:	6078      	str	r0, [r7, #4]
		HAL_FLASH_Unlock();
 800126e:	f006 fe49 	bl	8007f04 <HAL_FLASH_Unlock>
		Delay(50);
 8001272:	2032      	movs	r0, #50	; 0x32
 8001274:	f004 fcbe 	bl	8005bf4 <Delay>
		FLASH_Erase_Sector(6, FLASH_VOLTAGE_RANGE_3);
 8001278:	2102      	movs	r1, #2
 800127a:	2006      	movs	r0, #6
 800127c:	f006 ffb4 	bl	80081e8 <FLASH_Erase_Sector>
		Delay(50);
 8001280:	2032      	movs	r0, #50	; 0x32
 8001282:	f004 fcb7 	bl	8005bf4 <Delay>
		HAL_FLASH_Lock();
 8001286:	f006 fe5f 	bl	8007f48 <HAL_FLASH_Lock>

		int i;
		for(i=0;i<8;i++)
 800128a:	2300      	movs	r3, #0
 800128c:	60fb      	str	r3, [r7, #12]
 800128e:	e00a      	b.n	80012a6 <B1_ISR+0x42>
		{
			LED_R_TOGGLE;
 8001290:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001294:	4826      	ldr	r0, [pc, #152]	; (8001330 <B1_ISR+0xcc>)
 8001296:	f007 f9b4 	bl	8008602 <HAL_GPIO_TogglePin>
			Delay(150);
 800129a:	2096      	movs	r0, #150	; 0x96
 800129c:	f004 fcaa 	bl	8005bf4 <Delay>
		for(i=0;i<8;i++)
 80012a0:	68fb      	ldr	r3, [r7, #12]
 80012a2:	3301      	adds	r3, #1
 80012a4:	60fb      	str	r3, [r7, #12]
 80012a6:	68fb      	ldr	r3, [r7, #12]
 80012a8:	2b07      	cmp	r3, #7
 80012aa:	ddf1      	ble.n	8001290 <B1_ISR+0x2c>
		}
		LED_R(0);
 80012ac:	2201      	movs	r2, #1
 80012ae:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80012b2:	481f      	ldr	r0, [pc, #124]	; (8001330 <B1_ISR+0xcc>)
 80012b4:	f007 f98c 	bl	80085d0 <HAL_GPIO_WritePin>

		HAL_FLASH_Unlock();
 80012b8:	f006 fe24 	bl	8007f04 <HAL_FLASH_Unlock>
		Delay(50);
 80012bc:	2032      	movs	r0, #50	; 0x32
 80012be:	f004 fc99 	bl	8005bf4 <Delay>
		for(i=0;i<25;i++)
 80012c2:	2300      	movs	r3, #0
 80012c4:	60fb      	str	r3, [r7, #12]
 80012c6:	e016      	b.n	80012f6 <B1_ISR+0x92>
		{
			HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+i, Nodes[i].worth);
 80012c8:	68fb      	ldr	r3, [r7, #12]
 80012ca:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 80012ce:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
 80012d2:	4619      	mov	r1, r3
 80012d4:	4a17      	ldr	r2, [pc, #92]	; (8001334 <B1_ISR+0xd0>)
 80012d6:	68fb      	ldr	r3, [r7, #12]
 80012d8:	015b      	lsls	r3, r3, #5
 80012da:	4413      	add	r3, r2
 80012dc:	3304      	adds	r3, #4
 80012de:	681b      	ldr	r3, [r3, #0]
 80012e0:	17da      	asrs	r2, r3, #31
 80012e2:	4698      	mov	r8, r3
 80012e4:	4691      	mov	r9, r2
 80012e6:	4642      	mov	r2, r8
 80012e8:	464b      	mov	r3, r9
 80012ea:	2000      	movs	r0, #0
 80012ec:	f006 fdb6 	bl	8007e5c <HAL_FLASH_Program>
		for(i=0;i<25;i++)
 80012f0:	68fb      	ldr	r3, [r7, #12]
 80012f2:	3301      	adds	r3, #1
 80012f4:	60fb      	str	r3, [r7, #12]
 80012f6:	68fb      	ldr	r3, [r7, #12]
 80012f8:	2b18      	cmp	r3, #24
 80012fa:	dde5      	ble.n	80012c8 <B1_ISR+0x64>
		}
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+25, collectedPoints);
 80012fc:	4b0e      	ldr	r3, [pc, #56]	; (8001338 <B1_ISR+0xd4>)
 80012fe:	781b      	ldrb	r3, [r3, #0]
 8001300:	b2db      	uxtb	r3, r3
 8001302:	2200      	movs	r2, #0
 8001304:	461c      	mov	r4, r3
 8001306:	4615      	mov	r5, r2
 8001308:	4622      	mov	r2, r4
 800130a:	462b      	mov	r3, r5
 800130c:	490b      	ldr	r1, [pc, #44]	; (800133c <B1_ISR+0xd8>)
 800130e:	2000      	movs	r0, #0
 8001310:	f006 fda4 	bl	8007e5c <HAL_FLASH_Program>
		Delay(50);
 8001314:	2032      	movs	r0, #50	; 0x32
 8001316:	f004 fc6d 	bl	8005bf4 <Delay>
		HAL_FLASH_Lock();
 800131a:	f006 fe15 	bl	8007f48 <HAL_FLASH_Lock>
		HAL_UART_Transmit(huart_debugg,(uint8_t*) "\n\rBackup save!\n\r", 16, 10);
 800131e:	230a      	movs	r3, #10
 8001320:	2210      	movs	r2, #16
 8001322:	4907      	ldr	r1, [pc, #28]	; (8001340 <B1_ISR+0xdc>)
 8001324:	6878      	ldr	r0, [r7, #4]
 8001326:	f009 fea6 	bl	800b076 <HAL_UART_Transmit>
		NVIC_SystemReset(); //SW reseteljük a mikorvezérlőt
 800132a:	f7ff fe2f 	bl	8000f8c <__NVIC_SystemReset>
 800132e:	bf00      	nop
 8001330:	40020400 	.word	0x40020400
 8001334:	200002b8 	.word	0x200002b8
 8001338:	200002a7 	.word	0x200002a7
 800133c:	08040019 	.word	0x08040019
 8001340:	08010514 	.word	0x08010514

08001344 <B_NUCLEO_ISR>:
}

void B_NUCLEO_ISR(UART_HandleTypeDef *huart_debugg)
{
 8001344:	b580      	push	{r7, lr}
 8001346:	b084      	sub	sp, #16
 8001348:	af00      	add	r7, sp, #0
 800134a:	6078      	str	r0, [r7, #4]
	//Milyen módban voltunk eddig?
	uint8_t tmp= *(__IO uint8_t *) FLASH_ADDRESS_MODESELECTOR;
 800134c:	4b41      	ldr	r3, [pc, #260]	; (8001454 <B_NUCLEO_ISR+0x110>)
 800134e:	781b      	ldrb	r3, [r3, #0]
 8001350:	72fb      	strb	r3, [r7, #11]
	if(tmp==SKILL || tmp==FAST)mode=tmp;
 8001352:	7afb      	ldrb	r3, [r7, #11]
 8001354:	2b52      	cmp	r3, #82	; 0x52
 8001356:	d002      	beq.n	800135e <B_NUCLEO_ISR+0x1a>
 8001358:	7afb      	ldrb	r3, [r7, #11]
 800135a:	2b3f      	cmp	r3, #63	; 0x3f
 800135c:	d103      	bne.n	8001366 <B_NUCLEO_ISR+0x22>
 800135e:	4a3e      	ldr	r2, [pc, #248]	; (8001458 <B_NUCLEO_ISR+0x114>)
 8001360:	7afb      	ldrb	r3, [r7, #11]
 8001362:	7013      	strb	r3, [r2, #0]
 8001364:	e002      	b.n	800136c <B_NUCLEO_ISR+0x28>
	else mode=SKILL;
 8001366:	4b3c      	ldr	r3, [pc, #240]	; (8001458 <B_NUCLEO_ISR+0x114>)
 8001368:	2252      	movs	r2, #82	; 0x52
 800136a:	701a      	strb	r2, [r3, #0]

	//section 7 törlése, hogy újraírhassuk a módot jelző bytot
	HAL_FLASH_Unlock();
 800136c:	f006 fdca 	bl	8007f04 <HAL_FLASH_Unlock>
	Delay(50);
 8001370:	2032      	movs	r0, #50	; 0x32
 8001372:	f004 fc3f 	bl	8005bf4 <Delay>
	FLASH_Erase_Sector(7, FLASH_VOLTAGE_RANGE_3);
 8001376:	2102      	movs	r1, #2
 8001378:	2007      	movs	r0, #7
 800137a:	f006 ff35 	bl	80081e8 <FLASH_Erase_Sector>
	Delay(50);
 800137e:	2032      	movs	r0, #50	; 0x32
 8001380:	f004 fc38 	bl	8005bf4 <Delay>
	HAL_FLASH_Lock();
 8001384:	f006 fde0 	bl	8007f48 <HAL_FLASH_Lock>

	LED_NUCLEO(0);
 8001388:	2200      	movs	r2, #0
 800138a:	2120      	movs	r1, #32
 800138c:	4833      	ldr	r0, [pc, #204]	; (800145c <B_NUCLEO_ISR+0x118>)
 800138e:	f007 f91f 	bl	80085d0 <HAL_GPIO_WritePin>
	LED_Y(0);
 8001392:	2201      	movs	r2, #1
 8001394:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001398:	4831      	ldr	r0, [pc, #196]	; (8001460 <B_NUCLEO_ISR+0x11c>)
 800139a:	f007 f919 	bl	80085d0 <HAL_GPIO_WritePin>
	LED_G(0);
 800139e:	2201      	movs	r2, #1
 80013a0:	2102      	movs	r1, #2
 80013a2:	482f      	ldr	r0, [pc, #188]	; (8001460 <B_NUCLEO_ISR+0x11c>)
 80013a4:	f007 f914 	bl	80085d0 <HAL_GPIO_WritePin>
	LED_B(0);
 80013a8:	2201      	movs	r2, #1
 80013aa:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80013ae:	482c      	ldr	r0, [pc, #176]	; (8001460 <B_NUCLEO_ISR+0x11c>)
 80013b0:	f007 f90e 	bl	80085d0 <HAL_GPIO_WritePin>
	LED_R(0);
 80013b4:	2201      	movs	r2, #1
 80013b6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013ba:	4829      	ldr	r0, [pc, #164]	; (8001460 <B_NUCLEO_ISR+0x11c>)
 80013bc:	f007 f908 	bl	80085d0 <HAL_GPIO_WritePin>
	int i;
	for(i=0;i<8;i++)
 80013c0:	2300      	movs	r3, #0
 80013c2:	60fb      	str	r3, [r7, #12]
 80013c4:	e01c      	b.n	8001400 <B_NUCLEO_ISR+0xbc>
	{
		LED_NUCLEO_TOGGLE;
 80013c6:	2120      	movs	r1, #32
 80013c8:	4824      	ldr	r0, [pc, #144]	; (800145c <B_NUCLEO_ISR+0x118>)
 80013ca:	f007 f91a 	bl	8008602 <HAL_GPIO_TogglePin>
		LED_Y_TOGGLE;
 80013ce:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80013d2:	4823      	ldr	r0, [pc, #140]	; (8001460 <B_NUCLEO_ISR+0x11c>)
 80013d4:	f007 f915 	bl	8008602 <HAL_GPIO_TogglePin>
		LED_G_TOGGLE;
 80013d8:	2102      	movs	r1, #2
 80013da:	4821      	ldr	r0, [pc, #132]	; (8001460 <B_NUCLEO_ISR+0x11c>)
 80013dc:	f007 f911 	bl	8008602 <HAL_GPIO_TogglePin>
		LED_B_TOGGLE;
 80013e0:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80013e4:	481e      	ldr	r0, [pc, #120]	; (8001460 <B_NUCLEO_ISR+0x11c>)
 80013e6:	f007 f90c 	bl	8008602 <HAL_GPIO_TogglePin>
		LED_R_TOGGLE;
 80013ea:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013ee:	481c      	ldr	r0, [pc, #112]	; (8001460 <B_NUCLEO_ISR+0x11c>)
 80013f0:	f007 f907 	bl	8008602 <HAL_GPIO_TogglePin>
		Delay(150);
 80013f4:	2096      	movs	r0, #150	; 0x96
 80013f6:	f004 fbfd 	bl	8005bf4 <Delay>
	for(i=0;i<8;i++)
 80013fa:	68fb      	ldr	r3, [r7, #12]
 80013fc:	3301      	adds	r3, #1
 80013fe:	60fb      	str	r3, [r7, #12]
 8001400:	68fb      	ldr	r3, [r7, #12]
 8001402:	2b07      	cmp	r3, #7
 8001404:	dddf      	ble.n	80013c6 <B_NUCLEO_ISR+0x82>
	}

	//Állítsuk át a módot
	HAL_FLASH_Unlock();
 8001406:	f006 fd7d 	bl	8007f04 <HAL_FLASH_Unlock>
	Delay(50);
 800140a:	2032      	movs	r0, #50	; 0x32
 800140c:	f004 fbf2 	bl	8005bf4 <Delay>
	if(mode==SKILL) HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_MODESELECTOR, FAST); //ha eddig skill mód volt akor msot gyors lesz
 8001410:	4b11      	ldr	r3, [pc, #68]	; (8001458 <B_NUCLEO_ISR+0x114>)
 8001412:	781b      	ldrb	r3, [r3, #0]
 8001414:	2b52      	cmp	r3, #82	; 0x52
 8001416:	d108      	bne.n	800142a <B_NUCLEO_ISR+0xe6>
 8001418:	f04f 023f 	mov.w	r2, #63	; 0x3f
 800141c:	f04f 0300 	mov.w	r3, #0
 8001420:	490c      	ldr	r1, [pc, #48]	; (8001454 <B_NUCLEO_ISR+0x110>)
 8001422:	2000      	movs	r0, #0
 8001424:	f006 fd1a 	bl	8007e5c <HAL_FLASH_Program>
 8001428:	e007      	b.n	800143a <B_NUCLEO_ISR+0xf6>
	else HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_MODESELECTOR, SKILL); //ha eddig gyors mód vagy memóriaszemét volt akkor msot skil lesz
 800142a:	f04f 0252 	mov.w	r2, #82	; 0x52
 800142e:	f04f 0300 	mov.w	r3, #0
 8001432:	4908      	ldr	r1, [pc, #32]	; (8001454 <B_NUCLEO_ISR+0x110>)
 8001434:	2000      	movs	r0, #0
 8001436:	f006 fd11 	bl	8007e5c <HAL_FLASH_Program>
	Delay(50);
 800143a:	2032      	movs	r0, #50	; 0x32
 800143c:	f004 fbda 	bl	8005bf4 <Delay>
	HAL_FLASH_Lock();
 8001440:	f006 fd82 	bl	8007f48 <HAL_FLASH_Lock>
	HAL_UART_Transmit(huart_debugg, (uint8_t*)"\n\rMode change!\n\r", 16, 10);
 8001444:	230a      	movs	r3, #10
 8001446:	2210      	movs	r2, #16
 8001448:	4906      	ldr	r1, [pc, #24]	; (8001464 <B_NUCLEO_ISR+0x120>)
 800144a:	6878      	ldr	r0, [r7, #4]
 800144c:	f009 fe13 	bl	800b076 <HAL_UART_Transmit>
	NVIC_SystemReset(); //SW reseteljük a mikorvezérlőt
 8001450:	f7ff fd9c 	bl	8000f8c <__NVIC_SystemReset>
 8001454:	08060000 	.word	0x08060000
 8001458:	20000296 	.word	0x20000296
 800145c:	40020000 	.word	0x40020000
 8001460:	40020400 	.word	0x40020400
 8001464:	08010528 	.word	0x08010528

08001468 <Create_Nodes>:
uint8_t piratePos[4];

node Nodes[25];

void Create_Nodes(UART_HandleTypeDef *huart_debugg)
{
 8001468:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800146c:	b09c      	sub	sp, #112	; 0x70
 800146e:	af00      	add	r7, sp, #0
 8001470:	6078      	str	r0, [r7, #4]
	int i;
	orientation=FORWARD;
 8001472:	4b0b      	ldr	r3, [pc, #44]	; (80014a0 <Create_Nodes+0x38>)
 8001474:	2200      	movs	r2, #0
 8001476:	701a      	strb	r2, [r3, #0]
	nodeDetected=1;
 8001478:	4b0a      	ldr	r3, [pc, #40]	; (80014a4 <Create_Nodes+0x3c>)
 800147a:	2201      	movs	r2, #1
 800147c:	701a      	strb	r2, [r3, #0]
	collectedPoints=0;
 800147e:	4b0a      	ldr	r3, [pc, #40]	; (80014a8 <Create_Nodes+0x40>)
 8001480:	2200      	movs	r2, #0
 8001482:	701a      	strb	r2, [r3, #0]
	laneChange=0;
 8001484:	4b09      	ldr	r3, [pc, #36]	; (80014ac <Create_Nodes+0x44>)
 8001486:	2200      	movs	r2, #0
 8001488:	701a      	strb	r2, [r3, #0]
	v_control=NORMAL_VEL;
 800148a:	4b09      	ldr	r3, [pc, #36]	; (80014b0 <Create_Nodes+0x48>)
 800148c:	2202      	movs	r2, #2
 800148e:	701a      	strb	r2, [r3, #0]

	if(mode!=SKILL)return;
 8001490:	4b08      	ldr	r3, [pc, #32]	; (80014b4 <Create_Nodes+0x4c>)
 8001492:	781b      	ldrb	r3, [r3, #0]
 8001494:	2b52      	cmp	r3, #82	; 0x52
 8001496:	f040 873a 	bne.w	800230e <Create_Nodes+0xea6>

	for(i=0;i<25;i++)
 800149a:	2300      	movs	r3, #0
 800149c:	66fb      	str	r3, [r7, #108]	; 0x6c
 800149e:	e07a      	b.n	8001596 <Create_Nodes+0x12e>
 80014a0:	200002a4 	.word	0x200002a4
 80014a4:	200002a5 	.word	0x200002a5
 80014a8:	200002a7 	.word	0x200002a7
 80014ac:	200002a8 	.word	0x200002a8
 80014b0:	200002a9 	.word	0x200002a9
 80014b4:	20000296 	.word	0x20000296
	{
		Nodes[i].id=65+i;
 80014b8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80014ba:	b2db      	uxtb	r3, r3
 80014bc:	3341      	adds	r3, #65	; 0x41
 80014be:	b2d9      	uxtb	r1, r3
 80014c0:	4abc      	ldr	r2, [pc, #752]	; (80017b4 <Create_Nodes+0x34c>)
 80014c2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80014c4:	015b      	lsls	r3, r3, #5
 80014c6:	4413      	add	r3, r2
 80014c8:	460a      	mov	r2, r1
 80014ca:	701a      	strb	r2, [r3, #0]
		Nodes[i].worth=0;
 80014cc:	4ab9      	ldr	r2, [pc, #740]	; (80017b4 <Create_Nodes+0x34c>)
 80014ce:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80014d0:	015b      	lsls	r3, r3, #5
 80014d2:	4413      	add	r3, r2
 80014d4:	3304      	adds	r3, #4
 80014d6:	2200      	movs	r2, #0
 80014d8:	601a      	str	r2, [r3, #0]
		Nodes[i].type=0;
 80014da:	4ab6      	ldr	r2, [pc, #728]	; (80017b4 <Create_Nodes+0x34c>)
 80014dc:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80014de:	015b      	lsls	r3, r3, #5
 80014e0:	4413      	add	r3, r2
 80014e2:	3308      	adds	r3, #8
 80014e4:	2200      	movs	r2, #0
 80014e6:	601a      	str	r2, [r3, #0]
		VALUE(Nodes[i].neighbours,0,0,0,0);
 80014e8:	4ab2      	ldr	r2, [pc, #712]	; (80017b4 <Create_Nodes+0x34c>)
 80014ea:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80014ec:	015b      	lsls	r3, r3, #5
 80014ee:	4413      	add	r3, r2
 80014f0:	330c      	adds	r3, #12
 80014f2:	2200      	movs	r2, #0
 80014f4:	701a      	strb	r2, [r3, #0]
 80014f6:	4aaf      	ldr	r2, [pc, #700]	; (80017b4 <Create_Nodes+0x34c>)
 80014f8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80014fa:	015b      	lsls	r3, r3, #5
 80014fc:	4413      	add	r3, r2
 80014fe:	330d      	adds	r3, #13
 8001500:	2200      	movs	r2, #0
 8001502:	701a      	strb	r2, [r3, #0]
 8001504:	4aab      	ldr	r2, [pc, #684]	; (80017b4 <Create_Nodes+0x34c>)
 8001506:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001508:	015b      	lsls	r3, r3, #5
 800150a:	4413      	add	r3, r2
 800150c:	330e      	adds	r3, #14
 800150e:	2200      	movs	r2, #0
 8001510:	701a      	strb	r2, [r3, #0]
 8001512:	4aa8      	ldr	r2, [pc, #672]	; (80017b4 <Create_Nodes+0x34c>)
 8001514:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001516:	015b      	lsls	r3, r3, #5
 8001518:	4413      	add	r3, r2
 800151a:	330f      	adds	r3, #15
 800151c:	2200      	movs	r2, #0
 800151e:	701a      	strb	r2, [r3, #0]
		VALUE(Nodes[i].directions,0,0,0,0);
 8001520:	4aa4      	ldr	r2, [pc, #656]	; (80017b4 <Create_Nodes+0x34c>)
 8001522:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001524:	015b      	lsls	r3, r3, #5
 8001526:	4413      	add	r3, r2
 8001528:	3310      	adds	r3, #16
 800152a:	2200      	movs	r2, #0
 800152c:	701a      	strb	r2, [r3, #0]
 800152e:	4aa1      	ldr	r2, [pc, #644]	; (80017b4 <Create_Nodes+0x34c>)
 8001530:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001532:	015b      	lsls	r3, r3, #5
 8001534:	4413      	add	r3, r2
 8001536:	3311      	adds	r3, #17
 8001538:	2200      	movs	r2, #0
 800153a:	701a      	strb	r2, [r3, #0]
 800153c:	4a9d      	ldr	r2, [pc, #628]	; (80017b4 <Create_Nodes+0x34c>)
 800153e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001540:	015b      	lsls	r3, r3, #5
 8001542:	4413      	add	r3, r2
 8001544:	3312      	adds	r3, #18
 8001546:	2200      	movs	r2, #0
 8001548:	701a      	strb	r2, [r3, #0]
 800154a:	4a9a      	ldr	r2, [pc, #616]	; (80017b4 <Create_Nodes+0x34c>)
 800154c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800154e:	015b      	lsls	r3, r3, #5
 8001550:	4413      	add	r3, r2
 8001552:	3313      	adds	r3, #19
 8001554:	2200      	movs	r2, #0
 8001556:	701a      	strb	r2, [r3, #0]
		VALUE(Nodes[i].distance,0,0,0,0);
 8001558:	4a96      	ldr	r2, [pc, #600]	; (80017b4 <Create_Nodes+0x34c>)
 800155a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800155c:	015b      	lsls	r3, r3, #5
 800155e:	4413      	add	r3, r2
 8001560:	3314      	adds	r3, #20
 8001562:	2200      	movs	r2, #0
 8001564:	801a      	strh	r2, [r3, #0]
 8001566:	4a93      	ldr	r2, [pc, #588]	; (80017b4 <Create_Nodes+0x34c>)
 8001568:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800156a:	015b      	lsls	r3, r3, #5
 800156c:	4413      	add	r3, r2
 800156e:	3316      	adds	r3, #22
 8001570:	2200      	movs	r2, #0
 8001572:	801a      	strh	r2, [r3, #0]
 8001574:	4a8f      	ldr	r2, [pc, #572]	; (80017b4 <Create_Nodes+0x34c>)
 8001576:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001578:	015b      	lsls	r3, r3, #5
 800157a:	4413      	add	r3, r2
 800157c:	3318      	adds	r3, #24
 800157e:	2200      	movs	r2, #0
 8001580:	801a      	strh	r2, [r3, #0]
 8001582:	4a8c      	ldr	r2, [pc, #560]	; (80017b4 <Create_Nodes+0x34c>)
 8001584:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001586:	015b      	lsls	r3, r3, #5
 8001588:	4413      	add	r3, r2
 800158a:	331a      	adds	r3, #26
 800158c:	2200      	movs	r2, #0
 800158e:	801a      	strh	r2, [r3, #0]
	for(i=0;i<25;i++)
 8001590:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001592:	3301      	adds	r3, #1
 8001594:	66fb      	str	r3, [r7, #108]	; 0x6c
 8001596:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001598:	2b18      	cmp	r3, #24
 800159a:	dd8d      	ble.n	80014b8 <Create_Nodes+0x50>
	}
	//A node
	N('A').worth=0;
 800159c:	4b85      	ldr	r3, [pc, #532]	; (80017b4 <Create_Nodes+0x34c>)
 800159e:	2200      	movs	r2, #0
 80015a0:	605a      	str	r2, [r3, #4]
	N('A').type=1;
 80015a2:	4b84      	ldr	r3, [pc, #528]	; (80017b4 <Create_Nodes+0x34c>)
 80015a4:	2201      	movs	r2, #1
 80015a6:	609a      	str	r2, [r3, #8]
	VALUE(N('A').neighbours,0,0,0,'C');
 80015a8:	4b82      	ldr	r3, [pc, #520]	; (80017b4 <Create_Nodes+0x34c>)
 80015aa:	2200      	movs	r2, #0
 80015ac:	731a      	strb	r2, [r3, #12]
 80015ae:	4b81      	ldr	r3, [pc, #516]	; (80017b4 <Create_Nodes+0x34c>)
 80015b0:	2200      	movs	r2, #0
 80015b2:	735a      	strb	r2, [r3, #13]
 80015b4:	4b7f      	ldr	r3, [pc, #508]	; (80017b4 <Create_Nodes+0x34c>)
 80015b6:	2200      	movs	r2, #0
 80015b8:	739a      	strb	r2, [r3, #14]
 80015ba:	4b7e      	ldr	r3, [pc, #504]	; (80017b4 <Create_Nodes+0x34c>)
 80015bc:	2243      	movs	r2, #67	; 0x43
 80015be:	73da      	strb	r2, [r3, #15]
	VALUE(N('A').directions,0,0,0,2);
 80015c0:	4b7c      	ldr	r3, [pc, #496]	; (80017b4 <Create_Nodes+0x34c>)
 80015c2:	2200      	movs	r2, #0
 80015c4:	741a      	strb	r2, [r3, #16]
 80015c6:	4b7b      	ldr	r3, [pc, #492]	; (80017b4 <Create_Nodes+0x34c>)
 80015c8:	2200      	movs	r2, #0
 80015ca:	745a      	strb	r2, [r3, #17]
 80015cc:	4b79      	ldr	r3, [pc, #484]	; (80017b4 <Create_Nodes+0x34c>)
 80015ce:	2200      	movs	r2, #0
 80015d0:	749a      	strb	r2, [r3, #18]
 80015d2:	4b78      	ldr	r3, [pc, #480]	; (80017b4 <Create_Nodes+0x34c>)
 80015d4:	2202      	movs	r2, #2
 80015d6:	74da      	strb	r2, [r3, #19]
	VALUE(N('A').distance,0,0,0,365);
 80015d8:	4b76      	ldr	r3, [pc, #472]	; (80017b4 <Create_Nodes+0x34c>)
 80015da:	2200      	movs	r2, #0
 80015dc:	829a      	strh	r2, [r3, #20]
 80015de:	4b75      	ldr	r3, [pc, #468]	; (80017b4 <Create_Nodes+0x34c>)
 80015e0:	2200      	movs	r2, #0
 80015e2:	82da      	strh	r2, [r3, #22]
 80015e4:	4b73      	ldr	r3, [pc, #460]	; (80017b4 <Create_Nodes+0x34c>)
 80015e6:	2200      	movs	r2, #0
 80015e8:	831a      	strh	r2, [r3, #24]
 80015ea:	4b72      	ldr	r3, [pc, #456]	; (80017b4 <Create_Nodes+0x34c>)
 80015ec:	f240 126d 	movw	r2, #365	; 0x16d
 80015f0:	835a      	strh	r2, [r3, #26]
	N('A').middle=NEIGHBOUR4;
 80015f2:	4b70      	ldr	r3, [pc, #448]	; (80017b4 <Create_Nodes+0x34c>)
 80015f4:	2203      	movs	r2, #3
 80015f6:	771a      	strb	r2, [r3, #28]

	//B node
	N('B').worth=2;
 80015f8:	4b6e      	ldr	r3, [pc, #440]	; (80017b4 <Create_Nodes+0x34c>)
 80015fa:	2202      	movs	r2, #2
 80015fc:	625a      	str	r2, [r3, #36]	; 0x24
	N('B').type=2;
 80015fe:	4b6d      	ldr	r3, [pc, #436]	; (80017b4 <Create_Nodes+0x34c>)
 8001600:	2202      	movs	r2, #2
 8001602:	629a      	str	r2, [r3, #40]	; 0x28
	VALUE(N('B').neighbours,'D',0,'C',0);
 8001604:	4b6b      	ldr	r3, [pc, #428]	; (80017b4 <Create_Nodes+0x34c>)
 8001606:	2244      	movs	r2, #68	; 0x44
 8001608:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800160c:	4b69      	ldr	r3, [pc, #420]	; (80017b4 <Create_Nodes+0x34c>)
 800160e:	2200      	movs	r2, #0
 8001610:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 8001614:	4b67      	ldr	r3, [pc, #412]	; (80017b4 <Create_Nodes+0x34c>)
 8001616:	2243      	movs	r2, #67	; 0x43
 8001618:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
 800161c:	4b65      	ldr	r3, [pc, #404]	; (80017b4 <Create_Nodes+0x34c>)
 800161e:	2200      	movs	r2, #0
 8001620:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
	VALUE(N('B').directions,2,0,2,0);
 8001624:	4b63      	ldr	r3, [pc, #396]	; (80017b4 <Create_Nodes+0x34c>)
 8001626:	2202      	movs	r2, #2
 8001628:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
 800162c:	4b61      	ldr	r3, [pc, #388]	; (80017b4 <Create_Nodes+0x34c>)
 800162e:	2200      	movs	r2, #0
 8001630:	f883 2031 	strb.w	r2, [r3, #49]	; 0x31
 8001634:	4b5f      	ldr	r3, [pc, #380]	; (80017b4 <Create_Nodes+0x34c>)
 8001636:	2202      	movs	r2, #2
 8001638:	f883 2032 	strb.w	r2, [r3, #50]	; 0x32
 800163c:	4b5d      	ldr	r3, [pc, #372]	; (80017b4 <Create_Nodes+0x34c>)
 800163e:	2200      	movs	r2, #0
 8001640:	f883 2033 	strb.w	r2, [r3, #51]	; 0x33
	VALUE(N('B').distance,452,0,218,0);
 8001644:	4b5b      	ldr	r3, [pc, #364]	; (80017b4 <Create_Nodes+0x34c>)
 8001646:	f44f 72e2 	mov.w	r2, #452	; 0x1c4
 800164a:	869a      	strh	r2, [r3, #52]	; 0x34
 800164c:	4b59      	ldr	r3, [pc, #356]	; (80017b4 <Create_Nodes+0x34c>)
 800164e:	2200      	movs	r2, #0
 8001650:	86da      	strh	r2, [r3, #54]	; 0x36
 8001652:	4b58      	ldr	r3, [pc, #352]	; (80017b4 <Create_Nodes+0x34c>)
 8001654:	22da      	movs	r2, #218	; 0xda
 8001656:	871a      	strh	r2, [r3, #56]	; 0x38
 8001658:	4b56      	ldr	r3, [pc, #344]	; (80017b4 <Create_Nodes+0x34c>)
 800165a:	2200      	movs	r2, #0
 800165c:	875a      	strh	r2, [r3, #58]	; 0x3a
	N('B').middle=NEIGHBOUR3;
 800165e:	4b55      	ldr	r3, [pc, #340]	; (80017b4 <Create_Nodes+0x34c>)
 8001660:	2202      	movs	r2, #2
 8001662:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

	//C node
	N('C').worth=0; //beragadás ellen
 8001666:	4b53      	ldr	r3, [pc, #332]	; (80017b4 <Create_Nodes+0x34c>)
 8001668:	2200      	movs	r2, #0
 800166a:	645a      	str	r2, [r3, #68]	; 0x44
	N('C').type=3;
 800166c:	4b51      	ldr	r3, [pc, #324]	; (80017b4 <Create_Nodes+0x34c>)
 800166e:	2203      	movs	r2, #3
 8001670:	649a      	str	r2, [r3, #72]	; 0x48
	VALUE(N('C').neighbours,0,'B','E',0);
 8001672:	4b50      	ldr	r3, [pc, #320]	; (80017b4 <Create_Nodes+0x34c>)
 8001674:	2200      	movs	r2, #0
 8001676:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 800167a:	4b4e      	ldr	r3, [pc, #312]	; (80017b4 <Create_Nodes+0x34c>)
 800167c:	2242      	movs	r2, #66	; 0x42
 800167e:	f883 204d 	strb.w	r2, [r3, #77]	; 0x4d
 8001682:	4b4c      	ldr	r3, [pc, #304]	; (80017b4 <Create_Nodes+0x34c>)
 8001684:	2245      	movs	r2, #69	; 0x45
 8001686:	f883 204e 	strb.w	r2, [r3, #78]	; 0x4e
 800168a:	4b4a      	ldr	r3, [pc, #296]	; (80017b4 <Create_Nodes+0x34c>)
 800168c:	2200      	movs	r2, #0
 800168e:	f883 204f 	strb.w	r2, [r3, #79]	; 0x4f
	VALUE(N('C').directions,0,1,2,0);
 8001692:	4b48      	ldr	r3, [pc, #288]	; (80017b4 <Create_Nodes+0x34c>)
 8001694:	2200      	movs	r2, #0
 8001696:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800169a:	4b46      	ldr	r3, [pc, #280]	; (80017b4 <Create_Nodes+0x34c>)
 800169c:	2201      	movs	r2, #1
 800169e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80016a2:	4b44      	ldr	r3, [pc, #272]	; (80017b4 <Create_Nodes+0x34c>)
 80016a4:	2202      	movs	r2, #2
 80016a6:	f883 2052 	strb.w	r2, [r3, #82]	; 0x52
 80016aa:	4b42      	ldr	r3, [pc, #264]	; (80017b4 <Create_Nodes+0x34c>)
 80016ac:	2200      	movs	r2, #0
 80016ae:	f883 2053 	strb.w	r2, [r3, #83]	; 0x53
	VALUE(N('C').distance,0,218,160-25,0);
 80016b2:	4b40      	ldr	r3, [pc, #256]	; (80017b4 <Create_Nodes+0x34c>)
 80016b4:	2200      	movs	r2, #0
 80016b6:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
 80016ba:	4b3e      	ldr	r3, [pc, #248]	; (80017b4 <Create_Nodes+0x34c>)
 80016bc:	22da      	movs	r2, #218	; 0xda
 80016be:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 80016c2:	4b3c      	ldr	r3, [pc, #240]	; (80017b4 <Create_Nodes+0x34c>)
 80016c4:	2287      	movs	r2, #135	; 0x87
 80016c6:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
 80016ca:	4b3a      	ldr	r3, [pc, #232]	; (80017b4 <Create_Nodes+0x34c>)
 80016cc:	2200      	movs	r2, #0
 80016ce:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
	N('C').middle=NEIGHBOUR3;
 80016d2:	4b38      	ldr	r3, [pc, #224]	; (80017b4 <Create_Nodes+0x34c>)
 80016d4:	2202      	movs	r2, #2
 80016d6:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

	//D node
	N('D').worth=2;
 80016da:	4b36      	ldr	r3, [pc, #216]	; (80017b4 <Create_Nodes+0x34c>)
 80016dc:	2202      	movs	r2, #2
 80016de:	665a      	str	r2, [r3, #100]	; 0x64
	N('D').type=1;
 80016e0:	4b34      	ldr	r3, [pc, #208]	; (80017b4 <Create_Nodes+0x34c>)
 80016e2:	2201      	movs	r2, #1
 80016e4:	669a      	str	r2, [r3, #104]	; 0x68
	VALUE(N('D').neighbours,'B',0,'F',0);
 80016e6:	4b33      	ldr	r3, [pc, #204]	; (80017b4 <Create_Nodes+0x34c>)
 80016e8:	2242      	movs	r2, #66	; 0x42
 80016ea:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 80016ee:	4b31      	ldr	r3, [pc, #196]	; (80017b4 <Create_Nodes+0x34c>)
 80016f0:	2200      	movs	r2, #0
 80016f2:	f883 206d 	strb.w	r2, [r3, #109]	; 0x6d
 80016f6:	4b2f      	ldr	r3, [pc, #188]	; (80017b4 <Create_Nodes+0x34c>)
 80016f8:	2246      	movs	r2, #70	; 0x46
 80016fa:	f883 206e 	strb.w	r2, [r3, #110]	; 0x6e
 80016fe:	4b2d      	ldr	r3, [pc, #180]	; (80017b4 <Create_Nodes+0x34c>)
 8001700:	2200      	movs	r2, #0
 8001702:	f883 206f 	strb.w	r2, [r3, #111]	; 0x6f
	VALUE(N('D').directions,2,0,2,0);
 8001706:	4b2b      	ldr	r3, [pc, #172]	; (80017b4 <Create_Nodes+0x34c>)
 8001708:	2202      	movs	r2, #2
 800170a:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800170e:	4b29      	ldr	r3, [pc, #164]	; (80017b4 <Create_Nodes+0x34c>)
 8001710:	2200      	movs	r2, #0
 8001712:	f883 2071 	strb.w	r2, [r3, #113]	; 0x71
 8001716:	4b27      	ldr	r3, [pc, #156]	; (80017b4 <Create_Nodes+0x34c>)
 8001718:	2202      	movs	r2, #2
 800171a:	f883 2072 	strb.w	r2, [r3, #114]	; 0x72
 800171e:	4b25      	ldr	r3, [pc, #148]	; (80017b4 <Create_Nodes+0x34c>)
 8001720:	2200      	movs	r2, #0
 8001722:	f883 2073 	strb.w	r2, [r3, #115]	; 0x73
	VALUE(N('D').distance,452,0,316,0);
 8001726:	4b23      	ldr	r3, [pc, #140]	; (80017b4 <Create_Nodes+0x34c>)
 8001728:	f44f 72e2 	mov.w	r2, #452	; 0x1c4
 800172c:	f8a3 2074 	strh.w	r2, [r3, #116]	; 0x74
 8001730:	4b20      	ldr	r3, [pc, #128]	; (80017b4 <Create_Nodes+0x34c>)
 8001732:	2200      	movs	r2, #0
 8001734:	f8a3 2076 	strh.w	r2, [r3, #118]	; 0x76
 8001738:	4b1e      	ldr	r3, [pc, #120]	; (80017b4 <Create_Nodes+0x34c>)
 800173a:	f44f 729e 	mov.w	r2, #316	; 0x13c
 800173e:	f8a3 2078 	strh.w	r2, [r3, #120]	; 0x78
 8001742:	4b1c      	ldr	r3, [pc, #112]	; (80017b4 <Create_Nodes+0x34c>)
 8001744:	2200      	movs	r2, #0
 8001746:	f8a3 207a 	strh.w	r2, [r3, #122]	; 0x7a
	N('D').middle=NEIGHBOUR3;
 800174a:	4b1a      	ldr	r3, [pc, #104]	; (80017b4 <Create_Nodes+0x34c>)
 800174c:	2202      	movs	r2, #2
 800174e:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c

	//E node
	N('E').worth=0; //beragadás ellen
 8001752:	4b18      	ldr	r3, [pc, #96]	; (80017b4 <Create_Nodes+0x34c>)
 8001754:	2200      	movs	r2, #0
 8001756:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
	N('E').type=3;
 800175a:	4b16      	ldr	r3, [pc, #88]	; (80017b4 <Create_Nodes+0x34c>)
 800175c:	2203      	movs	r2, #3
 800175e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
	VALUE(N('E').neighbours,'C',0,'F','G');
 8001762:	4b14      	ldr	r3, [pc, #80]	; (80017b4 <Create_Nodes+0x34c>)
 8001764:	2243      	movs	r2, #67	; 0x43
 8001766:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
 800176a:	4b12      	ldr	r3, [pc, #72]	; (80017b4 <Create_Nodes+0x34c>)
 800176c:	2200      	movs	r2, #0
 800176e:	f883 208d 	strb.w	r2, [r3, #141]	; 0x8d
 8001772:	4b10      	ldr	r3, [pc, #64]	; (80017b4 <Create_Nodes+0x34c>)
 8001774:	2246      	movs	r2, #70	; 0x46
 8001776:	f883 208e 	strb.w	r2, [r3, #142]	; 0x8e
 800177a:	4b0e      	ldr	r3, [pc, #56]	; (80017b4 <Create_Nodes+0x34c>)
 800177c:	2247      	movs	r2, #71	; 0x47
 800177e:	f883 208f 	strb.w	r2, [r3, #143]	; 0x8f
	VALUE(N('E').directions,1,0,2,2);
 8001782:	4b0c      	ldr	r3, [pc, #48]	; (80017b4 <Create_Nodes+0x34c>)
 8001784:	2201      	movs	r2, #1
 8001786:	f883 2090 	strb.w	r2, [r3, #144]	; 0x90
 800178a:	4b0a      	ldr	r3, [pc, #40]	; (80017b4 <Create_Nodes+0x34c>)
 800178c:	2200      	movs	r2, #0
 800178e:	f883 2091 	strb.w	r2, [r3, #145]	; 0x91
 8001792:	4b08      	ldr	r3, [pc, #32]	; (80017b4 <Create_Nodes+0x34c>)
 8001794:	2202      	movs	r2, #2
 8001796:	f883 2092 	strb.w	r2, [r3, #146]	; 0x92
 800179a:	4b06      	ldr	r3, [pc, #24]	; (80017b4 <Create_Nodes+0x34c>)
 800179c:	2202      	movs	r2, #2
 800179e:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
	VALUE(N('E').distance,160-25,0,428,385);
 80017a2:	4b04      	ldr	r3, [pc, #16]	; (80017b4 <Create_Nodes+0x34c>)
 80017a4:	2287      	movs	r2, #135	; 0x87
 80017a6:	f8a3 2094 	strh.w	r2, [r3, #148]	; 0x94
 80017aa:	4b02      	ldr	r3, [pc, #8]	; (80017b4 <Create_Nodes+0x34c>)
 80017ac:	2200      	movs	r2, #0
 80017ae:	f8a3 2096 	strh.w	r2, [r3, #150]	; 0x96
 80017b2:	e001      	b.n	80017b8 <Create_Nodes+0x350>
 80017b4:	200002b8 	.word	0x200002b8
 80017b8:	4bcd      	ldr	r3, [pc, #820]	; (8001af0 <Create_Nodes+0x688>)
 80017ba:	f44f 72d6 	mov.w	r2, #428	; 0x1ac
 80017be:	f8a3 2098 	strh.w	r2, [r3, #152]	; 0x98
 80017c2:	4bcb      	ldr	r3, [pc, #812]	; (8001af0 <Create_Nodes+0x688>)
 80017c4:	f240 1281 	movw	r2, #385	; 0x181
 80017c8:	f8a3 209a 	strh.w	r2, [r3, #154]	; 0x9a
	N('E').middle=NEIGHBOUR4;
 80017cc:	4bc8      	ldr	r3, [pc, #800]	; (8001af0 <Create_Nodes+0x688>)
 80017ce:	2203      	movs	r2, #3
 80017d0:	f883 209c 	strb.w	r2, [r3, #156]	; 0x9c

	//F node
	N('F').worth=2;
 80017d4:	4bc6      	ldr	r3, [pc, #792]	; (8001af0 <Create_Nodes+0x688>)
 80017d6:	2202      	movs	r2, #2
 80017d8:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
	N('F').type=1;
 80017dc:	4bc4      	ldr	r3, [pc, #784]	; (8001af0 <Create_Nodes+0x688>)
 80017de:	2201      	movs	r2, #1
 80017e0:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
	VALUE(N('F').neighbours,'E','D','H','I');
 80017e4:	4bc2      	ldr	r3, [pc, #776]	; (8001af0 <Create_Nodes+0x688>)
 80017e6:	2245      	movs	r2, #69	; 0x45
 80017e8:	f883 20ac 	strb.w	r2, [r3, #172]	; 0xac
 80017ec:	4bc0      	ldr	r3, [pc, #768]	; (8001af0 <Create_Nodes+0x688>)
 80017ee:	2244      	movs	r2, #68	; 0x44
 80017f0:	f883 20ad 	strb.w	r2, [r3, #173]	; 0xad
 80017f4:	4bbe      	ldr	r3, [pc, #760]	; (8001af0 <Create_Nodes+0x688>)
 80017f6:	2248      	movs	r2, #72	; 0x48
 80017f8:	f883 20ae 	strb.w	r2, [r3, #174]	; 0xae
 80017fc:	4bbc      	ldr	r3, [pc, #752]	; (8001af0 <Create_Nodes+0x688>)
 80017fe:	2249      	movs	r2, #73	; 0x49
 8001800:	f883 20af 	strb.w	r2, [r3, #175]	; 0xaf
	VALUE(N('F').directions,1,1,2,2);
 8001804:	4bba      	ldr	r3, [pc, #744]	; (8001af0 <Create_Nodes+0x688>)
 8001806:	2201      	movs	r2, #1
 8001808:	f883 20b0 	strb.w	r2, [r3, #176]	; 0xb0
 800180c:	4bb8      	ldr	r3, [pc, #736]	; (8001af0 <Create_Nodes+0x688>)
 800180e:	2201      	movs	r2, #1
 8001810:	f883 20b1 	strb.w	r2, [r3, #177]	; 0xb1
 8001814:	4bb6      	ldr	r3, [pc, #728]	; (8001af0 <Create_Nodes+0x688>)
 8001816:	2202      	movs	r2, #2
 8001818:	f883 20b2 	strb.w	r2, [r3, #178]	; 0xb2
 800181c:	4bb4      	ldr	r3, [pc, #720]	; (8001af0 <Create_Nodes+0x688>)
 800181e:	2202      	movs	r2, #2
 8001820:	f883 20b3 	strb.w	r2, [r3, #179]	; 0xb3
	VALUE(N('F').distance,428,316,284,335);
 8001824:	4bb2      	ldr	r3, [pc, #712]	; (8001af0 <Create_Nodes+0x688>)
 8001826:	f44f 72d6 	mov.w	r2, #428	; 0x1ac
 800182a:	f8a3 20b4 	strh.w	r2, [r3, #180]	; 0xb4
 800182e:	4bb0      	ldr	r3, [pc, #704]	; (8001af0 <Create_Nodes+0x688>)
 8001830:	f44f 729e 	mov.w	r2, #316	; 0x13c
 8001834:	f8a3 20b6 	strh.w	r2, [r3, #182]	; 0xb6
 8001838:	4bad      	ldr	r3, [pc, #692]	; (8001af0 <Create_Nodes+0x688>)
 800183a:	f44f 728e 	mov.w	r2, #284	; 0x11c
 800183e:	f8a3 20b8 	strh.w	r2, [r3, #184]	; 0xb8
 8001842:	4bab      	ldr	r3, [pc, #684]	; (8001af0 <Create_Nodes+0x688>)
 8001844:	f240 124f 	movw	r2, #335	; 0x14f
 8001848:	f8a3 20ba 	strh.w	r2, [r3, #186]	; 0xba
	N('F').middle=NEIGHBOUR3;
 800184c:	4ba8      	ldr	r3, [pc, #672]	; (8001af0 <Create_Nodes+0x688>)
 800184e:	2202      	movs	r2, #2
 8001850:	f883 20bc 	strb.w	r2, [r3, #188]	; 0xbc

	//G node
	N('G').worth=2;
 8001854:	4ba6      	ldr	r3, [pc, #664]	; (8001af0 <Create_Nodes+0x688>)
 8001856:	2202      	movs	r2, #2
 8001858:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
	N('G').type=1;
 800185c:	4ba4      	ldr	r3, [pc, #656]	; (8001af0 <Create_Nodes+0x688>)
 800185e:	2201      	movs	r2, #1
 8001860:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
	VALUE(N('G').neighbours,'E',0,'H','I');
 8001864:	4ba2      	ldr	r3, [pc, #648]	; (8001af0 <Create_Nodes+0x688>)
 8001866:	2245      	movs	r2, #69	; 0x45
 8001868:	f883 20cc 	strb.w	r2, [r3, #204]	; 0xcc
 800186c:	4ba0      	ldr	r3, [pc, #640]	; (8001af0 <Create_Nodes+0x688>)
 800186e:	2200      	movs	r2, #0
 8001870:	f883 20cd 	strb.w	r2, [r3, #205]	; 0xcd
 8001874:	4b9e      	ldr	r3, [pc, #632]	; (8001af0 <Create_Nodes+0x688>)
 8001876:	2248      	movs	r2, #72	; 0x48
 8001878:	f883 20ce 	strb.w	r2, [r3, #206]	; 0xce
 800187c:	4b9c      	ldr	r3, [pc, #624]	; (8001af0 <Create_Nodes+0x688>)
 800187e:	2249      	movs	r2, #73	; 0x49
 8001880:	f883 20cf 	strb.w	r2, [r3, #207]	; 0xcf
	VALUE(N('G').directions,1,0,2,2);
 8001884:	4b9a      	ldr	r3, [pc, #616]	; (8001af0 <Create_Nodes+0x688>)
 8001886:	2201      	movs	r2, #1
 8001888:	f883 20d0 	strb.w	r2, [r3, #208]	; 0xd0
 800188c:	4b98      	ldr	r3, [pc, #608]	; (8001af0 <Create_Nodes+0x688>)
 800188e:	2200      	movs	r2, #0
 8001890:	f883 20d1 	strb.w	r2, [r3, #209]	; 0xd1
 8001894:	4b96      	ldr	r3, [pc, #600]	; (8001af0 <Create_Nodes+0x688>)
 8001896:	2202      	movs	r2, #2
 8001898:	f883 20d2 	strb.w	r2, [r3, #210]	; 0xd2
 800189c:	4b94      	ldr	r3, [pc, #592]	; (8001af0 <Create_Nodes+0x688>)
 800189e:	2202      	movs	r2, #2
 80018a0:	f883 20d3 	strb.w	r2, [r3, #211]	; 0xd3
	VALUE(N('G').distance,385,0,336,284);
 80018a4:	4b92      	ldr	r3, [pc, #584]	; (8001af0 <Create_Nodes+0x688>)
 80018a6:	f240 1281 	movw	r2, #385	; 0x181
 80018aa:	f8a3 20d4 	strh.w	r2, [r3, #212]	; 0xd4
 80018ae:	4b90      	ldr	r3, [pc, #576]	; (8001af0 <Create_Nodes+0x688>)
 80018b0:	2200      	movs	r2, #0
 80018b2:	f8a3 20d6 	strh.w	r2, [r3, #214]	; 0xd6
 80018b6:	4b8e      	ldr	r3, [pc, #568]	; (8001af0 <Create_Nodes+0x688>)
 80018b8:	f44f 72a8 	mov.w	r2, #336	; 0x150
 80018bc:	f8a3 20d8 	strh.w	r2, [r3, #216]	; 0xd8
 80018c0:	4b8b      	ldr	r3, [pc, #556]	; (8001af0 <Create_Nodes+0x688>)
 80018c2:	f44f 728e 	mov.w	r2, #284	; 0x11c
 80018c6:	f8a3 20da 	strh.w	r2, [r3, #218]	; 0xda
	N('G').middle=NEIGHBOUR3;
 80018ca:	4b89      	ldr	r3, [pc, #548]	; (8001af0 <Create_Nodes+0x688>)
 80018cc:	2202      	movs	r2, #2
 80018ce:	f883 20dc 	strb.w	r2, [r3, #220]	; 0xdc

	//H node
	N('H').worth=2;
 80018d2:	4b87      	ldr	r3, [pc, #540]	; (8001af0 <Create_Nodes+0x688>)
 80018d4:	2202      	movs	r2, #2
 80018d6:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
	N('H').type=1;
 80018da:	4b85      	ldr	r3, [pc, #532]	; (8001af0 <Create_Nodes+0x688>)
 80018dc:	2201      	movs	r2, #1
 80018de:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
	VALUE(N('H').neighbours,'G','F','K','J');
 80018e2:	4b83      	ldr	r3, [pc, #524]	; (8001af0 <Create_Nodes+0x688>)
 80018e4:	2247      	movs	r2, #71	; 0x47
 80018e6:	f883 20ec 	strb.w	r2, [r3, #236]	; 0xec
 80018ea:	4b81      	ldr	r3, [pc, #516]	; (8001af0 <Create_Nodes+0x688>)
 80018ec:	2246      	movs	r2, #70	; 0x46
 80018ee:	f883 20ed 	strb.w	r2, [r3, #237]	; 0xed
 80018f2:	4b7f      	ldr	r3, [pc, #508]	; (8001af0 <Create_Nodes+0x688>)
 80018f4:	224b      	movs	r2, #75	; 0x4b
 80018f6:	f883 20ee 	strb.w	r2, [r3, #238]	; 0xee
 80018fa:	4b7d      	ldr	r3, [pc, #500]	; (8001af0 <Create_Nodes+0x688>)
 80018fc:	224a      	movs	r2, #74	; 0x4a
 80018fe:	f883 20ef 	strb.w	r2, [r3, #239]	; 0xef
	VALUE(N('H').directions,1,1,2,2);
 8001902:	4b7b      	ldr	r3, [pc, #492]	; (8001af0 <Create_Nodes+0x688>)
 8001904:	2201      	movs	r2, #1
 8001906:	f883 20f0 	strb.w	r2, [r3, #240]	; 0xf0
 800190a:	4b79      	ldr	r3, [pc, #484]	; (8001af0 <Create_Nodes+0x688>)
 800190c:	2201      	movs	r2, #1
 800190e:	f883 20f1 	strb.w	r2, [r3, #241]	; 0xf1
 8001912:	4b77      	ldr	r3, [pc, #476]	; (8001af0 <Create_Nodes+0x688>)
 8001914:	2202      	movs	r2, #2
 8001916:	f883 20f2 	strb.w	r2, [r3, #242]	; 0xf2
 800191a:	4b75      	ldr	r3, [pc, #468]	; (8001af0 <Create_Nodes+0x688>)
 800191c:	2202      	movs	r2, #2
 800191e:	f883 20f3 	strb.w	r2, [r3, #243]	; 0xf3
	VALUE(N('H').distance,336,284,407,230);
 8001922:	4b73      	ldr	r3, [pc, #460]	; (8001af0 <Create_Nodes+0x688>)
 8001924:	f44f 72a8 	mov.w	r2, #336	; 0x150
 8001928:	f8a3 20f4 	strh.w	r2, [r3, #244]	; 0xf4
 800192c:	4b70      	ldr	r3, [pc, #448]	; (8001af0 <Create_Nodes+0x688>)
 800192e:	f44f 728e 	mov.w	r2, #284	; 0x11c
 8001932:	f8a3 20f6 	strh.w	r2, [r3, #246]	; 0xf6
 8001936:	4b6e      	ldr	r3, [pc, #440]	; (8001af0 <Create_Nodes+0x688>)
 8001938:	f240 1297 	movw	r2, #407	; 0x197
 800193c:	f8a3 20f8 	strh.w	r2, [r3, #248]	; 0xf8
 8001940:	4b6b      	ldr	r3, [pc, #428]	; (8001af0 <Create_Nodes+0x688>)
 8001942:	22e6      	movs	r2, #230	; 0xe6
 8001944:	f8a3 20fa 	strh.w	r2, [r3, #250]	; 0xfa
	N('H').middle=NEIGHBOUR4;
 8001948:	4b69      	ldr	r3, [pc, #420]	; (8001af0 <Create_Nodes+0x688>)
 800194a:	2203      	movs	r2, #3
 800194c:	f883 20fc 	strb.w	r2, [r3, #252]	; 0xfc

	//I node
	N('I').worth=0;
 8001950:	4b67      	ldr	r3, [pc, #412]	; (8001af0 <Create_Nodes+0x688>)
 8001952:	2200      	movs	r2, #0
 8001954:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	N('I').type=3;
 8001958:	4b65      	ldr	r3, [pc, #404]	; (8001af0 <Create_Nodes+0x688>)
 800195a:	2203      	movs	r2, #3
 800195c:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
	VALUE(N('I').neighbours,'G','F',0,'L');
 8001960:	4b63      	ldr	r3, [pc, #396]	; (8001af0 <Create_Nodes+0x688>)
 8001962:	2247      	movs	r2, #71	; 0x47
 8001964:	f883 210c 	strb.w	r2, [r3, #268]	; 0x10c
 8001968:	4b61      	ldr	r3, [pc, #388]	; (8001af0 <Create_Nodes+0x688>)
 800196a:	2246      	movs	r2, #70	; 0x46
 800196c:	f883 210d 	strb.w	r2, [r3, #269]	; 0x10d
 8001970:	4b5f      	ldr	r3, [pc, #380]	; (8001af0 <Create_Nodes+0x688>)
 8001972:	2200      	movs	r2, #0
 8001974:	f883 210e 	strb.w	r2, [r3, #270]	; 0x10e
 8001978:	4b5d      	ldr	r3, [pc, #372]	; (8001af0 <Create_Nodes+0x688>)
 800197a:	224c      	movs	r2, #76	; 0x4c
 800197c:	f883 210f 	strb.w	r2, [r3, #271]	; 0x10f
	VALUE(N('I').directions,1,1,0,2);
 8001980:	4b5b      	ldr	r3, [pc, #364]	; (8001af0 <Create_Nodes+0x688>)
 8001982:	2201      	movs	r2, #1
 8001984:	f883 2110 	strb.w	r2, [r3, #272]	; 0x110
 8001988:	4b59      	ldr	r3, [pc, #356]	; (8001af0 <Create_Nodes+0x688>)
 800198a:	2201      	movs	r2, #1
 800198c:	f883 2111 	strb.w	r2, [r3, #273]	; 0x111
 8001990:	4b57      	ldr	r3, [pc, #348]	; (8001af0 <Create_Nodes+0x688>)
 8001992:	2200      	movs	r2, #0
 8001994:	f883 2112 	strb.w	r2, [r3, #274]	; 0x112
 8001998:	4b55      	ldr	r3, [pc, #340]	; (8001af0 <Create_Nodes+0x688>)
 800199a:	2202      	movs	r2, #2
 800199c:	f883 2113 	strb.w	r2, [r3, #275]	; 0x113
	VALUE(N('I').distance,284,335,0,418);
 80019a0:	4b53      	ldr	r3, [pc, #332]	; (8001af0 <Create_Nodes+0x688>)
 80019a2:	f44f 728e 	mov.w	r2, #284	; 0x11c
 80019a6:	f8a3 2114 	strh.w	r2, [r3, #276]	; 0x114
 80019aa:	4b51      	ldr	r3, [pc, #324]	; (8001af0 <Create_Nodes+0x688>)
 80019ac:	f240 124f 	movw	r2, #335	; 0x14f
 80019b0:	f8a3 2116 	strh.w	r2, [r3, #278]	; 0x116
 80019b4:	4b4e      	ldr	r3, [pc, #312]	; (8001af0 <Create_Nodes+0x688>)
 80019b6:	2200      	movs	r2, #0
 80019b8:	f8a3 2118 	strh.w	r2, [r3, #280]	; 0x118
 80019bc:	4b4c      	ldr	r3, [pc, #304]	; (8001af0 <Create_Nodes+0x688>)
 80019be:	f44f 72d1 	mov.w	r2, #418	; 0x1a2
 80019c2:	f8a3 211a 	strh.w	r2, [r3, #282]	; 0x11a
	N('I').middle=NEIGHBOUR4;
 80019c6:	4b4a      	ldr	r3, [pc, #296]	; (8001af0 <Create_Nodes+0x688>)
 80019c8:	2203      	movs	r2, #3
 80019ca:	f883 211c 	strb.w	r2, [r3, #284]	; 0x11c

	//J node
	N('J').worth=0;
 80019ce:	4b48      	ldr	r3, [pc, #288]	; (8001af0 <Create_Nodes+0x688>)
 80019d0:	2200      	movs	r2, #0
 80019d2:	f8c3 2124 	str.w	r2, [r3, #292]	; 0x124
	N('J').type=3;
 80019d6:	4b46      	ldr	r3, [pc, #280]	; (8001af0 <Create_Nodes+0x688>)
 80019d8:	2203      	movs	r2, #3
 80019da:	f8c3 2128 	str.w	r2, [r3, #296]	; 0x128
	VALUE(N('J').neighbours,'H',0,'K','L');
 80019de:	4b44      	ldr	r3, [pc, #272]	; (8001af0 <Create_Nodes+0x688>)
 80019e0:	2248      	movs	r2, #72	; 0x48
 80019e2:	f883 212c 	strb.w	r2, [r3, #300]	; 0x12c
 80019e6:	4b42      	ldr	r3, [pc, #264]	; (8001af0 <Create_Nodes+0x688>)
 80019e8:	2200      	movs	r2, #0
 80019ea:	f883 212d 	strb.w	r2, [r3, #301]	; 0x12d
 80019ee:	4b40      	ldr	r3, [pc, #256]	; (8001af0 <Create_Nodes+0x688>)
 80019f0:	224b      	movs	r2, #75	; 0x4b
 80019f2:	f883 212e 	strb.w	r2, [r3, #302]	; 0x12e
 80019f6:	4b3e      	ldr	r3, [pc, #248]	; (8001af0 <Create_Nodes+0x688>)
 80019f8:	224c      	movs	r2, #76	; 0x4c
 80019fa:	f883 212f 	strb.w	r2, [r3, #303]	; 0x12f
	VALUE(N('J').directions,1,0,2,2);
 80019fe:	4b3c      	ldr	r3, [pc, #240]	; (8001af0 <Create_Nodes+0x688>)
 8001a00:	2201      	movs	r2, #1
 8001a02:	f883 2130 	strb.w	r2, [r3, #304]	; 0x130
 8001a06:	4b3a      	ldr	r3, [pc, #232]	; (8001af0 <Create_Nodes+0x688>)
 8001a08:	2200      	movs	r2, #0
 8001a0a:	f883 2131 	strb.w	r2, [r3, #305]	; 0x131
 8001a0e:	4b38      	ldr	r3, [pc, #224]	; (8001af0 <Create_Nodes+0x688>)
 8001a10:	2202      	movs	r2, #2
 8001a12:	f883 2132 	strb.w	r2, [r3, #306]	; 0x132
 8001a16:	4b36      	ldr	r3, [pc, #216]	; (8001af0 <Create_Nodes+0x688>)
 8001a18:	2202      	movs	r2, #2
 8001a1a:	f883 2133 	strb.w	r2, [r3, #307]	; 0x133
	VALUE(N('J').distance,230,0,204,229);
 8001a1e:	4b34      	ldr	r3, [pc, #208]	; (8001af0 <Create_Nodes+0x688>)
 8001a20:	22e6      	movs	r2, #230	; 0xe6
 8001a22:	f8a3 2134 	strh.w	r2, [r3, #308]	; 0x134
 8001a26:	4b32      	ldr	r3, [pc, #200]	; (8001af0 <Create_Nodes+0x688>)
 8001a28:	2200      	movs	r2, #0
 8001a2a:	f8a3 2136 	strh.w	r2, [r3, #310]	; 0x136
 8001a2e:	4b30      	ldr	r3, [pc, #192]	; (8001af0 <Create_Nodes+0x688>)
 8001a30:	22cc      	movs	r2, #204	; 0xcc
 8001a32:	f8a3 2138 	strh.w	r2, [r3, #312]	; 0x138
 8001a36:	4b2e      	ldr	r3, [pc, #184]	; (8001af0 <Create_Nodes+0x688>)
 8001a38:	22e5      	movs	r2, #229	; 0xe5
 8001a3a:	f8a3 213a 	strh.w	r2, [r3, #314]	; 0x13a
	N('J').middle=NEIGHBOUR4;
 8001a3e:	4b2c      	ldr	r3, [pc, #176]	; (8001af0 <Create_Nodes+0x688>)
 8001a40:	2203      	movs	r2, #3
 8001a42:	f883 213c 	strb.w	r2, [r3, #316]	; 0x13c

	//K node
	N('K').worth=2;
 8001a46:	4b2a      	ldr	r3, [pc, #168]	; (8001af0 <Create_Nodes+0x688>)
 8001a48:	2202      	movs	r2, #2
 8001a4a:	f8c3 2144 	str.w	r2, [r3, #324]	; 0x144
	N('K').type=1;
 8001a4e:	4b28      	ldr	r3, [pc, #160]	; (8001af0 <Create_Nodes+0x688>)
 8001a50:	2201      	movs	r2, #1
 8001a52:	f8c3 2148 	str.w	r2, [r3, #328]	; 0x148
	VALUE(N('K').neighbours,'J','H','M','N');
 8001a56:	4b26      	ldr	r3, [pc, #152]	; (8001af0 <Create_Nodes+0x688>)
 8001a58:	224a      	movs	r2, #74	; 0x4a
 8001a5a:	f883 214c 	strb.w	r2, [r3, #332]	; 0x14c
 8001a5e:	4b24      	ldr	r3, [pc, #144]	; (8001af0 <Create_Nodes+0x688>)
 8001a60:	2248      	movs	r2, #72	; 0x48
 8001a62:	f883 214d 	strb.w	r2, [r3, #333]	; 0x14d
 8001a66:	4b22      	ldr	r3, [pc, #136]	; (8001af0 <Create_Nodes+0x688>)
 8001a68:	224d      	movs	r2, #77	; 0x4d
 8001a6a:	f883 214e 	strb.w	r2, [r3, #334]	; 0x14e
 8001a6e:	4b20      	ldr	r3, [pc, #128]	; (8001af0 <Create_Nodes+0x688>)
 8001a70:	224e      	movs	r2, #78	; 0x4e
 8001a72:	f883 214f 	strb.w	r2, [r3, #335]	; 0x14f
	VALUE(N('K').directions,1,1,2,2);
 8001a76:	4b1e      	ldr	r3, [pc, #120]	; (8001af0 <Create_Nodes+0x688>)
 8001a78:	2201      	movs	r2, #1
 8001a7a:	f883 2150 	strb.w	r2, [r3, #336]	; 0x150
 8001a7e:	4b1c      	ldr	r3, [pc, #112]	; (8001af0 <Create_Nodes+0x688>)
 8001a80:	2201      	movs	r2, #1
 8001a82:	f883 2151 	strb.w	r2, [r3, #337]	; 0x151
 8001a86:	4b1a      	ldr	r3, [pc, #104]	; (8001af0 <Create_Nodes+0x688>)
 8001a88:	2202      	movs	r2, #2
 8001a8a:	f883 2152 	strb.w	r2, [r3, #338]	; 0x152
 8001a8e:	4b18      	ldr	r3, [pc, #96]	; (8001af0 <Create_Nodes+0x688>)
 8001a90:	2202      	movs	r2, #2
 8001a92:	f883 2153 	strb.w	r2, [r3, #339]	; 0x153
	VALUE(N('K').distance,204,407,288,319);
 8001a96:	4b16      	ldr	r3, [pc, #88]	; (8001af0 <Create_Nodes+0x688>)
 8001a98:	22cc      	movs	r2, #204	; 0xcc
 8001a9a:	f8a3 2154 	strh.w	r2, [r3, #340]	; 0x154
 8001a9e:	4b14      	ldr	r3, [pc, #80]	; (8001af0 <Create_Nodes+0x688>)
 8001aa0:	f240 1297 	movw	r2, #407	; 0x197
 8001aa4:	f8a3 2156 	strh.w	r2, [r3, #342]	; 0x156
 8001aa8:	4b11      	ldr	r3, [pc, #68]	; (8001af0 <Create_Nodes+0x688>)
 8001aaa:	f44f 7290 	mov.w	r2, #288	; 0x120
 8001aae:	f8a3 2158 	strh.w	r2, [r3, #344]	; 0x158
 8001ab2:	4b0f      	ldr	r3, [pc, #60]	; (8001af0 <Create_Nodes+0x688>)
 8001ab4:	f240 123f 	movw	r2, #319	; 0x13f
 8001ab8:	f8a3 215a 	strh.w	r2, [r3, #346]	; 0x15a
	N('K').middle=NEIGHBOUR1;
 8001abc:	4b0c      	ldr	r3, [pc, #48]	; (8001af0 <Create_Nodes+0x688>)
 8001abe:	2200      	movs	r2, #0
 8001ac0:	f883 215c 	strb.w	r2, [r3, #348]	; 0x15c

	//L node
	N('L').worth=2;
 8001ac4:	4b0a      	ldr	r3, [pc, #40]	; (8001af0 <Create_Nodes+0x688>)
 8001ac6:	2202      	movs	r2, #2
 8001ac8:	f8c3 2164 	str.w	r2, [r3, #356]	; 0x164
	N('L').type=1;
 8001acc:	4b08      	ldr	r3, [pc, #32]	; (8001af0 <Create_Nodes+0x688>)
 8001ace:	2201      	movs	r2, #1
 8001ad0:	f8c3 2168 	str.w	r2, [r3, #360]	; 0x168
	VALUE(N('L').neighbours,'I','J','M','N');
 8001ad4:	4b06      	ldr	r3, [pc, #24]	; (8001af0 <Create_Nodes+0x688>)
 8001ad6:	2249      	movs	r2, #73	; 0x49
 8001ad8:	f883 216c 	strb.w	r2, [r3, #364]	; 0x16c
 8001adc:	4b04      	ldr	r3, [pc, #16]	; (8001af0 <Create_Nodes+0x688>)
 8001ade:	224a      	movs	r2, #74	; 0x4a
 8001ae0:	f883 216d 	strb.w	r2, [r3, #365]	; 0x16d
 8001ae4:	4b02      	ldr	r3, [pc, #8]	; (8001af0 <Create_Nodes+0x688>)
 8001ae6:	224d      	movs	r2, #77	; 0x4d
 8001ae8:	f883 216e 	strb.w	r2, [r3, #366]	; 0x16e
 8001aec:	e002      	b.n	8001af4 <Create_Nodes+0x68c>
 8001aee:	bf00      	nop
 8001af0:	200002b8 	.word	0x200002b8
 8001af4:	4bcd      	ldr	r3, [pc, #820]	; (8001e2c <Create_Nodes+0x9c4>)
 8001af6:	224e      	movs	r2, #78	; 0x4e
 8001af8:	f883 216f 	strb.w	r2, [r3, #367]	; 0x16f
	VALUE(N('L').directions,1,1,2,2);
 8001afc:	4bcb      	ldr	r3, [pc, #812]	; (8001e2c <Create_Nodes+0x9c4>)
 8001afe:	2201      	movs	r2, #1
 8001b00:	f883 2170 	strb.w	r2, [r3, #368]	; 0x170
 8001b04:	4bc9      	ldr	r3, [pc, #804]	; (8001e2c <Create_Nodes+0x9c4>)
 8001b06:	2201      	movs	r2, #1
 8001b08:	f883 2171 	strb.w	r2, [r3, #369]	; 0x171
 8001b0c:	4bc7      	ldr	r3, [pc, #796]	; (8001e2c <Create_Nodes+0x9c4>)
 8001b0e:	2202      	movs	r2, #2
 8001b10:	f883 2172 	strb.w	r2, [r3, #370]	; 0x172
 8001b14:	4bc5      	ldr	r3, [pc, #788]	; (8001e2c <Create_Nodes+0x9c4>)
 8001b16:	2202      	movs	r2, #2
 8001b18:	f883 2173 	strb.w	r2, [r3, #371]	; 0x173
	VALUE(N('L').distance,418,229,329,258);
 8001b1c:	4bc3      	ldr	r3, [pc, #780]	; (8001e2c <Create_Nodes+0x9c4>)
 8001b1e:	f44f 72d1 	mov.w	r2, #418	; 0x1a2
 8001b22:	f8a3 2174 	strh.w	r2, [r3, #372]	; 0x174
 8001b26:	4bc1      	ldr	r3, [pc, #772]	; (8001e2c <Create_Nodes+0x9c4>)
 8001b28:	22e5      	movs	r2, #229	; 0xe5
 8001b2a:	f8a3 2176 	strh.w	r2, [r3, #374]	; 0x176
 8001b2e:	4bbf      	ldr	r3, [pc, #764]	; (8001e2c <Create_Nodes+0x9c4>)
 8001b30:	f240 1249 	movw	r2, #329	; 0x149
 8001b34:	f8a3 2178 	strh.w	r2, [r3, #376]	; 0x178
 8001b38:	4bbc      	ldr	r3, [pc, #752]	; (8001e2c <Create_Nodes+0x9c4>)
 8001b3a:	f44f 7281 	mov.w	r2, #258	; 0x102
 8001b3e:	f8a3 217a 	strh.w	r2, [r3, #378]	; 0x17a
	N('L').middle=NEIGHBOUR2;
 8001b42:	4bba      	ldr	r3, [pc, #744]	; (8001e2c <Create_Nodes+0x9c4>)
 8001b44:	2201      	movs	r2, #1
 8001b46:	f883 217c 	strb.w	r2, [r3, #380]	; 0x17c

	//M node
	N('M').worth=2;
 8001b4a:	4bb8      	ldr	r3, [pc, #736]	; (8001e2c <Create_Nodes+0x9c4>)
 8001b4c:	2202      	movs	r2, #2
 8001b4e:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
	N('M').type=1;
 8001b52:	4bb6      	ldr	r3, [pc, #728]	; (8001e2c <Create_Nodes+0x9c4>)
 8001b54:	2201      	movs	r2, #1
 8001b56:	f8c3 2188 	str.w	r2, [r3, #392]	; 0x188
	VALUE(N('M').neighbours,'L','K','P','O');
 8001b5a:	4bb4      	ldr	r3, [pc, #720]	; (8001e2c <Create_Nodes+0x9c4>)
 8001b5c:	224c      	movs	r2, #76	; 0x4c
 8001b5e:	f883 218c 	strb.w	r2, [r3, #396]	; 0x18c
 8001b62:	4bb2      	ldr	r3, [pc, #712]	; (8001e2c <Create_Nodes+0x9c4>)
 8001b64:	224b      	movs	r2, #75	; 0x4b
 8001b66:	f883 218d 	strb.w	r2, [r3, #397]	; 0x18d
 8001b6a:	4bb0      	ldr	r3, [pc, #704]	; (8001e2c <Create_Nodes+0x9c4>)
 8001b6c:	2250      	movs	r2, #80	; 0x50
 8001b6e:	f883 218e 	strb.w	r2, [r3, #398]	; 0x18e
 8001b72:	4bae      	ldr	r3, [pc, #696]	; (8001e2c <Create_Nodes+0x9c4>)
 8001b74:	224f      	movs	r2, #79	; 0x4f
 8001b76:	f883 218f 	strb.w	r2, [r3, #399]	; 0x18f
	VALUE(N('M').directions,1,1,2,2);
 8001b7a:	4bac      	ldr	r3, [pc, #688]	; (8001e2c <Create_Nodes+0x9c4>)
 8001b7c:	2201      	movs	r2, #1
 8001b7e:	f883 2190 	strb.w	r2, [r3, #400]	; 0x190
 8001b82:	4baa      	ldr	r3, [pc, #680]	; (8001e2c <Create_Nodes+0x9c4>)
 8001b84:	2201      	movs	r2, #1
 8001b86:	f883 2191 	strb.w	r2, [r3, #401]	; 0x191
 8001b8a:	4ba8      	ldr	r3, [pc, #672]	; (8001e2c <Create_Nodes+0x9c4>)
 8001b8c:	2202      	movs	r2, #2
 8001b8e:	f883 2192 	strb.w	r2, [r3, #402]	; 0x192
 8001b92:	4ba6      	ldr	r3, [pc, #664]	; (8001e2c <Create_Nodes+0x9c4>)
 8001b94:	2202      	movs	r2, #2
 8001b96:	f883 2193 	strb.w	r2, [r3, #403]	; 0x193
	VALUE(N('M').distance,329,288,416,198);
 8001b9a:	4ba4      	ldr	r3, [pc, #656]	; (8001e2c <Create_Nodes+0x9c4>)
 8001b9c:	f240 1249 	movw	r2, #329	; 0x149
 8001ba0:	f8a3 2194 	strh.w	r2, [r3, #404]	; 0x194
 8001ba4:	4ba1      	ldr	r3, [pc, #644]	; (8001e2c <Create_Nodes+0x9c4>)
 8001ba6:	f44f 7290 	mov.w	r2, #288	; 0x120
 8001baa:	f8a3 2196 	strh.w	r2, [r3, #406]	; 0x196
 8001bae:	4b9f      	ldr	r3, [pc, #636]	; (8001e2c <Create_Nodes+0x9c4>)
 8001bb0:	f44f 72d0 	mov.w	r2, #416	; 0x1a0
 8001bb4:	f8a3 2198 	strh.w	r2, [r3, #408]	; 0x198
 8001bb8:	4b9c      	ldr	r3, [pc, #624]	; (8001e2c <Create_Nodes+0x9c4>)
 8001bba:	22c6      	movs	r2, #198	; 0xc6
 8001bbc:	f8a3 219a 	strh.w	r2, [r3, #410]	; 0x19a
	N('M').middle=NEIGHBOUR1;
 8001bc0:	4b9a      	ldr	r3, [pc, #616]	; (8001e2c <Create_Nodes+0x9c4>)
 8001bc2:	2200      	movs	r2, #0
 8001bc4:	f883 219c 	strb.w	r2, [r3, #412]	; 0x19c

	//N node
	N('N').worth=0;
 8001bc8:	4b98      	ldr	r3, [pc, #608]	; (8001e2c <Create_Nodes+0x9c4>)
 8001bca:	2200      	movs	r2, #0
 8001bcc:	f8c3 21a4 	str.w	r2, [r3, #420]	; 0x1a4
	N('N').type=3;
 8001bd0:	4b96      	ldr	r3, [pc, #600]	; (8001e2c <Create_Nodes+0x9c4>)
 8001bd2:	2203      	movs	r2, #3
 8001bd4:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
	VALUE(N('N').neighbours,'L','K','O','Q');
 8001bd8:	4b94      	ldr	r3, [pc, #592]	; (8001e2c <Create_Nodes+0x9c4>)
 8001bda:	224c      	movs	r2, #76	; 0x4c
 8001bdc:	f883 21ac 	strb.w	r2, [r3, #428]	; 0x1ac
 8001be0:	4b92      	ldr	r3, [pc, #584]	; (8001e2c <Create_Nodes+0x9c4>)
 8001be2:	224b      	movs	r2, #75	; 0x4b
 8001be4:	f883 21ad 	strb.w	r2, [r3, #429]	; 0x1ad
 8001be8:	4b90      	ldr	r3, [pc, #576]	; (8001e2c <Create_Nodes+0x9c4>)
 8001bea:	224f      	movs	r2, #79	; 0x4f
 8001bec:	f883 21ae 	strb.w	r2, [r3, #430]	; 0x1ae
 8001bf0:	4b8e      	ldr	r3, [pc, #568]	; (8001e2c <Create_Nodes+0x9c4>)
 8001bf2:	2251      	movs	r2, #81	; 0x51
 8001bf4:	f883 21af 	strb.w	r2, [r3, #431]	; 0x1af
	VALUE(N('N').directions,1,1,2,2);
 8001bf8:	4b8c      	ldr	r3, [pc, #560]	; (8001e2c <Create_Nodes+0x9c4>)
 8001bfa:	2201      	movs	r2, #1
 8001bfc:	f883 21b0 	strb.w	r2, [r3, #432]	; 0x1b0
 8001c00:	4b8a      	ldr	r3, [pc, #552]	; (8001e2c <Create_Nodes+0x9c4>)
 8001c02:	2201      	movs	r2, #1
 8001c04:	f883 21b1 	strb.w	r2, [r3, #433]	; 0x1b1
 8001c08:	4b88      	ldr	r3, [pc, #544]	; (8001e2c <Create_Nodes+0x9c4>)
 8001c0a:	2202      	movs	r2, #2
 8001c0c:	f883 21b2 	strb.w	r2, [r3, #434]	; 0x1b2
 8001c10:	4b86      	ldr	r3, [pc, #536]	; (8001e2c <Create_Nodes+0x9c4>)
 8001c12:	2202      	movs	r2, #2
 8001c14:	f883 21b3 	strb.w	r2, [r3, #435]	; 0x1b3
	VALUE(N('N').distance,258,318,228,447);
 8001c18:	4b84      	ldr	r3, [pc, #528]	; (8001e2c <Create_Nodes+0x9c4>)
 8001c1a:	f44f 7281 	mov.w	r2, #258	; 0x102
 8001c1e:	f8a3 21b4 	strh.w	r2, [r3, #436]	; 0x1b4
 8001c22:	4b82      	ldr	r3, [pc, #520]	; (8001e2c <Create_Nodes+0x9c4>)
 8001c24:	f44f 729f 	mov.w	r2, #318	; 0x13e
 8001c28:	f8a3 21b6 	strh.w	r2, [r3, #438]	; 0x1b6
 8001c2c:	4b7f      	ldr	r3, [pc, #508]	; (8001e2c <Create_Nodes+0x9c4>)
 8001c2e:	22e4      	movs	r2, #228	; 0xe4
 8001c30:	f8a3 21b8 	strh.w	r2, [r3, #440]	; 0x1b8
 8001c34:	4b7d      	ldr	r3, [pc, #500]	; (8001e2c <Create_Nodes+0x9c4>)
 8001c36:	f240 12bf 	movw	r2, #447	; 0x1bf
 8001c3a:	f8a3 21ba 	strh.w	r2, [r3, #442]	; 0x1ba
	N('N').middle=NEIGHBOUR2;
 8001c3e:	4b7b      	ldr	r3, [pc, #492]	; (8001e2c <Create_Nodes+0x9c4>)
 8001c40:	2201      	movs	r2, #1
 8001c42:	f883 21bc 	strb.w	r2, [r3, #444]	; 0x1bc

	//O node
	N('O').worth=2;
 8001c46:	4b79      	ldr	r3, [pc, #484]	; (8001e2c <Create_Nodes+0x9c4>)
 8001c48:	2202      	movs	r2, #2
 8001c4a:	f8c3 21c4 	str.w	r2, [r3, #452]	; 0x1c4
	N('O').type=1;
 8001c4e:	4b77      	ldr	r3, [pc, #476]	; (8001e2c <Create_Nodes+0x9c4>)
 8001c50:	2201      	movs	r2, #1
 8001c52:	f8c3 21c8 	str.w	r2, [r3, #456]	; 0x1c8
	VALUE(N('O').neighbours,'N','M','P',0);
 8001c56:	4b75      	ldr	r3, [pc, #468]	; (8001e2c <Create_Nodes+0x9c4>)
 8001c58:	224e      	movs	r2, #78	; 0x4e
 8001c5a:	f883 21cc 	strb.w	r2, [r3, #460]	; 0x1cc
 8001c5e:	4b73      	ldr	r3, [pc, #460]	; (8001e2c <Create_Nodes+0x9c4>)
 8001c60:	224d      	movs	r2, #77	; 0x4d
 8001c62:	f883 21cd 	strb.w	r2, [r3, #461]	; 0x1cd
 8001c66:	4b71      	ldr	r3, [pc, #452]	; (8001e2c <Create_Nodes+0x9c4>)
 8001c68:	2250      	movs	r2, #80	; 0x50
 8001c6a:	f883 21ce 	strb.w	r2, [r3, #462]	; 0x1ce
 8001c6e:	4b6f      	ldr	r3, [pc, #444]	; (8001e2c <Create_Nodes+0x9c4>)
 8001c70:	2200      	movs	r2, #0
 8001c72:	f883 21cf 	strb.w	r2, [r3, #463]	; 0x1cf
	VALUE(N('O').directions,1,1,2,0);
 8001c76:	4b6d      	ldr	r3, [pc, #436]	; (8001e2c <Create_Nodes+0x9c4>)
 8001c78:	2201      	movs	r2, #1
 8001c7a:	f883 21d0 	strb.w	r2, [r3, #464]	; 0x1d0
 8001c7e:	4b6b      	ldr	r3, [pc, #428]	; (8001e2c <Create_Nodes+0x9c4>)
 8001c80:	2201      	movs	r2, #1
 8001c82:	f883 21d1 	strb.w	r2, [r3, #465]	; 0x1d1
 8001c86:	4b69      	ldr	r3, [pc, #420]	; (8001e2c <Create_Nodes+0x9c4>)
 8001c88:	2202      	movs	r2, #2
 8001c8a:	f883 21d2 	strb.w	r2, [r3, #466]	; 0x1d2
 8001c8e:	4b67      	ldr	r3, [pc, #412]	; (8001e2c <Create_Nodes+0x9c4>)
 8001c90:	2200      	movs	r2, #0
 8001c92:	f883 21d3 	strb.w	r2, [r3, #467]	; 0x1d3
	VALUE(N('O').distance,228,198,248,0);
 8001c96:	4b65      	ldr	r3, [pc, #404]	; (8001e2c <Create_Nodes+0x9c4>)
 8001c98:	22e4      	movs	r2, #228	; 0xe4
 8001c9a:	f8a3 21d4 	strh.w	r2, [r3, #468]	; 0x1d4
 8001c9e:	4b63      	ldr	r3, [pc, #396]	; (8001e2c <Create_Nodes+0x9c4>)
 8001ca0:	22c6      	movs	r2, #198	; 0xc6
 8001ca2:	f8a3 21d6 	strh.w	r2, [r3, #470]	; 0x1d6
 8001ca6:	4b61      	ldr	r3, [pc, #388]	; (8001e2c <Create_Nodes+0x9c4>)
 8001ca8:	22f8      	movs	r2, #248	; 0xf8
 8001caa:	f8a3 21d8 	strh.w	r2, [r3, #472]	; 0x1d8
 8001cae:	4b5f      	ldr	r3, [pc, #380]	; (8001e2c <Create_Nodes+0x9c4>)
 8001cb0:	2200      	movs	r2, #0
 8001cb2:	f8a3 21da 	strh.w	r2, [r3, #474]	; 0x1da
	N('O').middle=NEIGHBOUR2;
 8001cb6:	4b5d      	ldr	r3, [pc, #372]	; (8001e2c <Create_Nodes+0x9c4>)
 8001cb8:	2201      	movs	r2, #1
 8001cba:	f883 21dc 	strb.w	r2, [r3, #476]	; 0x1dc

	//P node
	N('P').worth=2;
 8001cbe:	4b5b      	ldr	r3, [pc, #364]	; (8001e2c <Create_Nodes+0x9c4>)
 8001cc0:	2202      	movs	r2, #2
 8001cc2:	f8c3 21e4 	str.w	r2, [r3, #484]	; 0x1e4
	N('P').type=1;
 8001cc6:	4b59      	ldr	r3, [pc, #356]	; (8001e2c <Create_Nodes+0x9c4>)
 8001cc8:	2201      	movs	r2, #1
 8001cca:	f8c3 21e8 	str.w	r2, [r3, #488]	; 0x1e8
	VALUE(N('P').neighbours,'O','M','R','S');
 8001cce:	4b57      	ldr	r3, [pc, #348]	; (8001e2c <Create_Nodes+0x9c4>)
 8001cd0:	224f      	movs	r2, #79	; 0x4f
 8001cd2:	f883 21ec 	strb.w	r2, [r3, #492]	; 0x1ec
 8001cd6:	4b55      	ldr	r3, [pc, #340]	; (8001e2c <Create_Nodes+0x9c4>)
 8001cd8:	224d      	movs	r2, #77	; 0x4d
 8001cda:	f883 21ed 	strb.w	r2, [r3, #493]	; 0x1ed
 8001cde:	4b53      	ldr	r3, [pc, #332]	; (8001e2c <Create_Nodes+0x9c4>)
 8001ce0:	2252      	movs	r2, #82	; 0x52
 8001ce2:	f883 21ee 	strb.w	r2, [r3, #494]	; 0x1ee
 8001ce6:	4b51      	ldr	r3, [pc, #324]	; (8001e2c <Create_Nodes+0x9c4>)
 8001ce8:	2253      	movs	r2, #83	; 0x53
 8001cea:	f883 21ef 	strb.w	r2, [r3, #495]	; 0x1ef
	VALUE(N('P').directions,1,1,2,2);
 8001cee:	4b4f      	ldr	r3, [pc, #316]	; (8001e2c <Create_Nodes+0x9c4>)
 8001cf0:	2201      	movs	r2, #1
 8001cf2:	f883 21f0 	strb.w	r2, [r3, #496]	; 0x1f0
 8001cf6:	4b4d      	ldr	r3, [pc, #308]	; (8001e2c <Create_Nodes+0x9c4>)
 8001cf8:	2201      	movs	r2, #1
 8001cfa:	f883 21f1 	strb.w	r2, [r3, #497]	; 0x1f1
 8001cfe:	4b4b      	ldr	r3, [pc, #300]	; (8001e2c <Create_Nodes+0x9c4>)
 8001d00:	2202      	movs	r2, #2
 8001d02:	f883 21f2 	strb.w	r2, [r3, #498]	; 0x1f2
 8001d06:	4b49      	ldr	r3, [pc, #292]	; (8001e2c <Create_Nodes+0x9c4>)
 8001d08:	2202      	movs	r2, #2
 8001d0a:	f883 21f3 	strb.w	r2, [r3, #499]	; 0x1f3
	VALUE(N('P').distance,248,416,305,346);
 8001d0e:	4b47      	ldr	r3, [pc, #284]	; (8001e2c <Create_Nodes+0x9c4>)
 8001d10:	22f8      	movs	r2, #248	; 0xf8
 8001d12:	f8a3 21f4 	strh.w	r2, [r3, #500]	; 0x1f4
 8001d16:	4b45      	ldr	r3, [pc, #276]	; (8001e2c <Create_Nodes+0x9c4>)
 8001d18:	f44f 72d0 	mov.w	r2, #416	; 0x1a0
 8001d1c:	f8a3 21f6 	strh.w	r2, [r3, #502]	; 0x1f6
 8001d20:	4b42      	ldr	r3, [pc, #264]	; (8001e2c <Create_Nodes+0x9c4>)
 8001d22:	f240 1231 	movw	r2, #305	; 0x131
 8001d26:	f8a3 21f8 	strh.w	r2, [r3, #504]	; 0x1f8
 8001d2a:	4b40      	ldr	r3, [pc, #256]	; (8001e2c <Create_Nodes+0x9c4>)
 8001d2c:	f44f 72ad 	mov.w	r2, #346	; 0x15a
 8001d30:	f8a3 21fa 	strh.w	r2, [r3, #506]	; 0x1fa
	N('P').middle=NEIGHBOUR2;
 8001d34:	4b3d      	ldr	r3, [pc, #244]	; (8001e2c <Create_Nodes+0x9c4>)
 8001d36:	2201      	movs	r2, #1
 8001d38:	f883 21fc 	strb.w	r2, [r3, #508]	; 0x1fc

	//Q node
	N('Q').worth=2;
 8001d3c:	4b3b      	ldr	r3, [pc, #236]	; (8001e2c <Create_Nodes+0x9c4>)
 8001d3e:	2202      	movs	r2, #2
 8001d40:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
	N('Q').type=1;
 8001d44:	4b39      	ldr	r3, [pc, #228]	; (8001e2c <Create_Nodes+0x9c4>)
 8001d46:	2201      	movs	r2, #1
 8001d48:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
	VALUE(N('Q').neighbours,'N',0,'R','S');
 8001d4c:	4b37      	ldr	r3, [pc, #220]	; (8001e2c <Create_Nodes+0x9c4>)
 8001d4e:	224e      	movs	r2, #78	; 0x4e
 8001d50:	f883 220c 	strb.w	r2, [r3, #524]	; 0x20c
 8001d54:	4b35      	ldr	r3, [pc, #212]	; (8001e2c <Create_Nodes+0x9c4>)
 8001d56:	2200      	movs	r2, #0
 8001d58:	f883 220d 	strb.w	r2, [r3, #525]	; 0x20d
 8001d5c:	4b33      	ldr	r3, [pc, #204]	; (8001e2c <Create_Nodes+0x9c4>)
 8001d5e:	2252      	movs	r2, #82	; 0x52
 8001d60:	f883 220e 	strb.w	r2, [r3, #526]	; 0x20e
 8001d64:	4b31      	ldr	r3, [pc, #196]	; (8001e2c <Create_Nodes+0x9c4>)
 8001d66:	2253      	movs	r2, #83	; 0x53
 8001d68:	f883 220f 	strb.w	r2, [r3, #527]	; 0x20f
	VALUE(N('Q').directions,1,0,2,2);
 8001d6c:	4b2f      	ldr	r3, [pc, #188]	; (8001e2c <Create_Nodes+0x9c4>)
 8001d6e:	2201      	movs	r2, #1
 8001d70:	f883 2210 	strb.w	r2, [r3, #528]	; 0x210
 8001d74:	4b2d      	ldr	r3, [pc, #180]	; (8001e2c <Create_Nodes+0x9c4>)
 8001d76:	2200      	movs	r2, #0
 8001d78:	f883 2211 	strb.w	r2, [r3, #529]	; 0x211
 8001d7c:	4b2b      	ldr	r3, [pc, #172]	; (8001e2c <Create_Nodes+0x9c4>)
 8001d7e:	2202      	movs	r2, #2
 8001d80:	f883 2212 	strb.w	r2, [r3, #530]	; 0x212
 8001d84:	4b29      	ldr	r3, [pc, #164]	; (8001e2c <Create_Nodes+0x9c4>)
 8001d86:	2202      	movs	r2, #2
 8001d88:	f883 2213 	strb.w	r2, [r3, #531]	; 0x213
	VALUE(N('Q').distance,447,0,346,284);
 8001d8c:	4b27      	ldr	r3, [pc, #156]	; (8001e2c <Create_Nodes+0x9c4>)
 8001d8e:	f240 12bf 	movw	r2, #447	; 0x1bf
 8001d92:	f8a3 2214 	strh.w	r2, [r3, #532]	; 0x214
 8001d96:	4b25      	ldr	r3, [pc, #148]	; (8001e2c <Create_Nodes+0x9c4>)
 8001d98:	2200      	movs	r2, #0
 8001d9a:	f8a3 2216 	strh.w	r2, [r3, #534]	; 0x216
 8001d9e:	4b23      	ldr	r3, [pc, #140]	; (8001e2c <Create_Nodes+0x9c4>)
 8001da0:	f44f 72ad 	mov.w	r2, #346	; 0x15a
 8001da4:	f8a3 2218 	strh.w	r2, [r3, #536]	; 0x218
 8001da8:	4b20      	ldr	r3, [pc, #128]	; (8001e2c <Create_Nodes+0x9c4>)
 8001daa:	f44f 728e 	mov.w	r2, #284	; 0x11c
 8001dae:	f8a3 221a 	strh.w	r2, [r3, #538]	; 0x21a
	N('Q').middle=NEIGHBOUR1;
 8001db2:	4b1e      	ldr	r3, [pc, #120]	; (8001e2c <Create_Nodes+0x9c4>)
 8001db4:	2200      	movs	r2, #0
 8001db6:	f883 221c 	strb.w	r2, [r3, #540]	; 0x21c

	//R node
	N('R').worth=2;
 8001dba:	4b1c      	ldr	r3, [pc, #112]	; (8001e2c <Create_Nodes+0x9c4>)
 8001dbc:	2202      	movs	r2, #2
 8001dbe:	f8c3 2224 	str.w	r2, [r3, #548]	; 0x224
	N('R').type=1;
 8001dc2:	4b1a      	ldr	r3, [pc, #104]	; (8001e2c <Create_Nodes+0x9c4>)
 8001dc4:	2201      	movs	r2, #1
 8001dc6:	f8c3 2228 	str.w	r2, [r3, #552]	; 0x228
	VALUE(N('R').neighbours,'Q','P','U','T');
 8001dca:	4b18      	ldr	r3, [pc, #96]	; (8001e2c <Create_Nodes+0x9c4>)
 8001dcc:	2251      	movs	r2, #81	; 0x51
 8001dce:	f883 222c 	strb.w	r2, [r3, #556]	; 0x22c
 8001dd2:	4b16      	ldr	r3, [pc, #88]	; (8001e2c <Create_Nodes+0x9c4>)
 8001dd4:	2250      	movs	r2, #80	; 0x50
 8001dd6:	f883 222d 	strb.w	r2, [r3, #557]	; 0x22d
 8001dda:	4b14      	ldr	r3, [pc, #80]	; (8001e2c <Create_Nodes+0x9c4>)
 8001ddc:	2255      	movs	r2, #85	; 0x55
 8001dde:	f883 222e 	strb.w	r2, [r3, #558]	; 0x22e
 8001de2:	4b12      	ldr	r3, [pc, #72]	; (8001e2c <Create_Nodes+0x9c4>)
 8001de4:	2254      	movs	r2, #84	; 0x54
 8001de6:	f883 222f 	strb.w	r2, [r3, #559]	; 0x22f
	VALUE(N('R').directions,1,1,2,2);
 8001dea:	4b10      	ldr	r3, [pc, #64]	; (8001e2c <Create_Nodes+0x9c4>)
 8001dec:	2201      	movs	r2, #1
 8001dee:	f883 2230 	strb.w	r2, [r3, #560]	; 0x230
 8001df2:	4b0e      	ldr	r3, [pc, #56]	; (8001e2c <Create_Nodes+0x9c4>)
 8001df4:	2201      	movs	r2, #1
 8001df6:	f883 2231 	strb.w	r2, [r3, #561]	; 0x231
 8001dfa:	4b0c      	ldr	r3, [pc, #48]	; (8001e2c <Create_Nodes+0x9c4>)
 8001dfc:	2202      	movs	r2, #2
 8001dfe:	f883 2232 	strb.w	r2, [r3, #562]	; 0x232
 8001e02:	4b0a      	ldr	r3, [pc, #40]	; (8001e2c <Create_Nodes+0x9c4>)
 8001e04:	2202      	movs	r2, #2
 8001e06:	f883 2233 	strb.w	r2, [r3, #563]	; 0x233
	VALUE(N('R').distance,346,305,366,204);
 8001e0a:	4b08      	ldr	r3, [pc, #32]	; (8001e2c <Create_Nodes+0x9c4>)
 8001e0c:	f44f 72ad 	mov.w	r2, #346	; 0x15a
 8001e10:	f8a3 2234 	strh.w	r2, [r3, #564]	; 0x234
 8001e14:	4b05      	ldr	r3, [pc, #20]	; (8001e2c <Create_Nodes+0x9c4>)
 8001e16:	f240 1231 	movw	r2, #305	; 0x131
 8001e1a:	f8a3 2236 	strh.w	r2, [r3, #566]	; 0x236
 8001e1e:	4b03      	ldr	r3, [pc, #12]	; (8001e2c <Create_Nodes+0x9c4>)
 8001e20:	f44f 72b7 	mov.w	r2, #366	; 0x16e
 8001e24:	f8a3 2238 	strh.w	r2, [r3, #568]	; 0x238
 8001e28:	e002      	b.n	8001e30 <Create_Nodes+0x9c8>
 8001e2a:	bf00      	nop
 8001e2c:	200002b8 	.word	0x200002b8
 8001e30:	4bcb      	ldr	r3, [pc, #812]	; (8002160 <Create_Nodes+0xcf8>)
 8001e32:	22cc      	movs	r2, #204	; 0xcc
 8001e34:	f8a3 223a 	strh.w	r2, [r3, #570]	; 0x23a
	N('R').middle=NEIGHBOUR2;
 8001e38:	4bc9      	ldr	r3, [pc, #804]	; (8002160 <Create_Nodes+0xcf8>)
 8001e3a:	2201      	movs	r2, #1
 8001e3c:	f883 223c 	strb.w	r2, [r3, #572]	; 0x23c

	//S node
	N('S').worth=2;
 8001e40:	4bc7      	ldr	r3, [pc, #796]	; (8002160 <Create_Nodes+0xcf8>)
 8001e42:	2202      	movs	r2, #2
 8001e44:	f8c3 2244 	str.w	r2, [r3, #580]	; 0x244
	N('S').type=1;
 8001e48:	4bc5      	ldr	r3, [pc, #788]	; (8002160 <Create_Nodes+0xcf8>)
 8001e4a:	2201      	movs	r2, #1
 8001e4c:	f8c3 2248 	str.w	r2, [r3, #584]	; 0x248
	VALUE(N('S').neighbours,'Q','P','T','V');
 8001e50:	4bc3      	ldr	r3, [pc, #780]	; (8002160 <Create_Nodes+0xcf8>)
 8001e52:	2251      	movs	r2, #81	; 0x51
 8001e54:	f883 224c 	strb.w	r2, [r3, #588]	; 0x24c
 8001e58:	4bc1      	ldr	r3, [pc, #772]	; (8002160 <Create_Nodes+0xcf8>)
 8001e5a:	2250      	movs	r2, #80	; 0x50
 8001e5c:	f883 224d 	strb.w	r2, [r3, #589]	; 0x24d
 8001e60:	4bbf      	ldr	r3, [pc, #764]	; (8002160 <Create_Nodes+0xcf8>)
 8001e62:	2254      	movs	r2, #84	; 0x54
 8001e64:	f883 224e 	strb.w	r2, [r3, #590]	; 0x24e
 8001e68:	4bbd      	ldr	r3, [pc, #756]	; (8002160 <Create_Nodes+0xcf8>)
 8001e6a:	2256      	movs	r2, #86	; 0x56
 8001e6c:	f883 224f 	strb.w	r2, [r3, #591]	; 0x24f
	VALUE(N('S').directions,1,1,2,2);
 8001e70:	4bbb      	ldr	r3, [pc, #748]	; (8002160 <Create_Nodes+0xcf8>)
 8001e72:	2201      	movs	r2, #1
 8001e74:	f883 2250 	strb.w	r2, [r3, #592]	; 0x250
 8001e78:	4bb9      	ldr	r3, [pc, #740]	; (8002160 <Create_Nodes+0xcf8>)
 8001e7a:	2201      	movs	r2, #1
 8001e7c:	f883 2251 	strb.w	r2, [r3, #593]	; 0x251
 8001e80:	4bb7      	ldr	r3, [pc, #732]	; (8002160 <Create_Nodes+0xcf8>)
 8001e82:	2202      	movs	r2, #2
 8001e84:	f883 2252 	strb.w	r2, [r3, #594]	; 0x252
 8001e88:	4bb5      	ldr	r3, [pc, #724]	; (8002160 <Create_Nodes+0xcf8>)
 8001e8a:	2202      	movs	r2, #2
 8001e8c:	f883 2253 	strb.w	r2, [r3, #595]	; 0x253
	VALUE(N('S').distance,284,346,223,406);
 8001e90:	4bb3      	ldr	r3, [pc, #716]	; (8002160 <Create_Nodes+0xcf8>)
 8001e92:	f44f 728e 	mov.w	r2, #284	; 0x11c
 8001e96:	f8a3 2254 	strh.w	r2, [r3, #596]	; 0x254
 8001e9a:	4bb1      	ldr	r3, [pc, #708]	; (8002160 <Create_Nodes+0xcf8>)
 8001e9c:	f44f 72ad 	mov.w	r2, #346	; 0x15a
 8001ea0:	f8a3 2256 	strh.w	r2, [r3, #598]	; 0x256
 8001ea4:	4bae      	ldr	r3, [pc, #696]	; (8002160 <Create_Nodes+0xcf8>)
 8001ea6:	22df      	movs	r2, #223	; 0xdf
 8001ea8:	f8a3 2258 	strh.w	r2, [r3, #600]	; 0x258
 8001eac:	4bac      	ldr	r3, [pc, #688]	; (8002160 <Create_Nodes+0xcf8>)
 8001eae:	f44f 72cb 	mov.w	r2, #406	; 0x196
 8001eb2:	f8a3 225a 	strh.w	r2, [r3, #602]	; 0x25a
	N('S').middle=NEIGHBOUR2;
 8001eb6:	4baa      	ldr	r3, [pc, #680]	; (8002160 <Create_Nodes+0xcf8>)
 8001eb8:	2201      	movs	r2, #1
 8001eba:	f883 225c 	strb.w	r2, [r3, #604]	; 0x25c

	//T node
	N('T').worth=2;
 8001ebe:	4ba8      	ldr	r3, [pc, #672]	; (8002160 <Create_Nodes+0xcf8>)
 8001ec0:	2202      	movs	r2, #2
 8001ec2:	f8c3 2264 	str.w	r2, [r3, #612]	; 0x264
	N('T').type=1;
 8001ec6:	4ba6      	ldr	r3, [pc, #664]	; (8002160 <Create_Nodes+0xcf8>)
 8001ec8:	2201      	movs	r2, #1
 8001eca:	f8c3 2268 	str.w	r2, [r3, #616]	; 0x268
	VALUE(N('T').neighbours,'S','R','U','V');
 8001ece:	4ba4      	ldr	r3, [pc, #656]	; (8002160 <Create_Nodes+0xcf8>)
 8001ed0:	2253      	movs	r2, #83	; 0x53
 8001ed2:	f883 226c 	strb.w	r2, [r3, #620]	; 0x26c
 8001ed6:	4ba2      	ldr	r3, [pc, #648]	; (8002160 <Create_Nodes+0xcf8>)
 8001ed8:	2252      	movs	r2, #82	; 0x52
 8001eda:	f883 226d 	strb.w	r2, [r3, #621]	; 0x26d
 8001ede:	4ba0      	ldr	r3, [pc, #640]	; (8002160 <Create_Nodes+0xcf8>)
 8001ee0:	2255      	movs	r2, #85	; 0x55
 8001ee2:	f883 226e 	strb.w	r2, [r3, #622]	; 0x26e
 8001ee6:	4b9e      	ldr	r3, [pc, #632]	; (8002160 <Create_Nodes+0xcf8>)
 8001ee8:	2256      	movs	r2, #86	; 0x56
 8001eea:	f883 226f 	strb.w	r2, [r3, #623]	; 0x26f
	VALUE(N('T').directions,1,1,2,2);
 8001eee:	4b9c      	ldr	r3, [pc, #624]	; (8002160 <Create_Nodes+0xcf8>)
 8001ef0:	2201      	movs	r2, #1
 8001ef2:	f883 2270 	strb.w	r2, [r3, #624]	; 0x270
 8001ef6:	4b9a      	ldr	r3, [pc, #616]	; (8002160 <Create_Nodes+0xcf8>)
 8001ef8:	2201      	movs	r2, #1
 8001efa:	f883 2271 	strb.w	r2, [r3, #625]	; 0x271
 8001efe:	4b98      	ldr	r3, [pc, #608]	; (8002160 <Create_Nodes+0xcf8>)
 8001f00:	2202      	movs	r2, #2
 8001f02:	f883 2272 	strb.w	r2, [r3, #626]	; 0x272
 8001f06:	4b96      	ldr	r3, [pc, #600]	; (8002160 <Create_Nodes+0xcf8>)
 8001f08:	2202      	movs	r2, #2
 8001f0a:	f883 2273 	strb.w	r2, [r3, #627]	; 0x273
	VALUE(N('T').distance,223,204,192,233);
 8001f0e:	4b94      	ldr	r3, [pc, #592]	; (8002160 <Create_Nodes+0xcf8>)
 8001f10:	22df      	movs	r2, #223	; 0xdf
 8001f12:	f8a3 2274 	strh.w	r2, [r3, #628]	; 0x274
 8001f16:	4b92      	ldr	r3, [pc, #584]	; (8002160 <Create_Nodes+0xcf8>)
 8001f18:	22cc      	movs	r2, #204	; 0xcc
 8001f1a:	f8a3 2276 	strh.w	r2, [r3, #630]	; 0x276
 8001f1e:	4b90      	ldr	r3, [pc, #576]	; (8002160 <Create_Nodes+0xcf8>)
 8001f20:	22c0      	movs	r2, #192	; 0xc0
 8001f22:	f8a3 2278 	strh.w	r2, [r3, #632]	; 0x278
 8001f26:	4b8e      	ldr	r3, [pc, #568]	; (8002160 <Create_Nodes+0xcf8>)
 8001f28:	22e9      	movs	r2, #233	; 0xe9
 8001f2a:	f8a3 227a 	strh.w	r2, [r3, #634]	; 0x27a
	N('T').middle=NEIGHBOUR2;
 8001f2e:	4b8c      	ldr	r3, [pc, #560]	; (8002160 <Create_Nodes+0xcf8>)
 8001f30:	2201      	movs	r2, #1
 8001f32:	f883 227c 	strb.w	r2, [r3, #636]	; 0x27c

	//U node
	N('U').worth=2;
 8001f36:	4b8a      	ldr	r3, [pc, #552]	; (8002160 <Create_Nodes+0xcf8>)
 8001f38:	2202      	movs	r2, #2
 8001f3a:	f8c3 2284 	str.w	r2, [r3, #644]	; 0x284
	N('U').type=1;
 8001f3e:	4b88      	ldr	r3, [pc, #544]	; (8002160 <Create_Nodes+0xcf8>)
 8001f40:	2201      	movs	r2, #1
 8001f42:	f8c3 2288 	str.w	r2, [r3, #648]	; 0x288
	VALUE(N('U').neighbours,'T','R','X',0);
 8001f46:	4b86      	ldr	r3, [pc, #536]	; (8002160 <Create_Nodes+0xcf8>)
 8001f48:	2254      	movs	r2, #84	; 0x54
 8001f4a:	f883 228c 	strb.w	r2, [r3, #652]	; 0x28c
 8001f4e:	4b84      	ldr	r3, [pc, #528]	; (8002160 <Create_Nodes+0xcf8>)
 8001f50:	2252      	movs	r2, #82	; 0x52
 8001f52:	f883 228d 	strb.w	r2, [r3, #653]	; 0x28d
 8001f56:	4b82      	ldr	r3, [pc, #520]	; (8002160 <Create_Nodes+0xcf8>)
 8001f58:	2258      	movs	r2, #88	; 0x58
 8001f5a:	f883 228e 	strb.w	r2, [r3, #654]	; 0x28e
 8001f5e:	4b80      	ldr	r3, [pc, #512]	; (8002160 <Create_Nodes+0xcf8>)
 8001f60:	2200      	movs	r2, #0
 8001f62:	f883 228f 	strb.w	r2, [r3, #655]	; 0x28f
	VALUE(N('U').directions,1,1,2,0);
 8001f66:	4b7e      	ldr	r3, [pc, #504]	; (8002160 <Create_Nodes+0xcf8>)
 8001f68:	2201      	movs	r2, #1
 8001f6a:	f883 2290 	strb.w	r2, [r3, #656]	; 0x290
 8001f6e:	4b7c      	ldr	r3, [pc, #496]	; (8002160 <Create_Nodes+0xcf8>)
 8001f70:	2201      	movs	r2, #1
 8001f72:	f883 2291 	strb.w	r2, [r3, #657]	; 0x291
 8001f76:	4b7a      	ldr	r3, [pc, #488]	; (8002160 <Create_Nodes+0xcf8>)
 8001f78:	2202      	movs	r2, #2
 8001f7a:	f883 2292 	strb.w	r2, [r3, #658]	; 0x292
 8001f7e:	4b78      	ldr	r3, [pc, #480]	; (8002160 <Create_Nodes+0xcf8>)
 8001f80:	2200      	movs	r2, #0
 8001f82:	f883 2293 	strb.w	r2, [r3, #659]	; 0x293
	VALUE(N('U').distance,192,366,371,0);
 8001f86:	4b76      	ldr	r3, [pc, #472]	; (8002160 <Create_Nodes+0xcf8>)
 8001f88:	22c0      	movs	r2, #192	; 0xc0
 8001f8a:	f8a3 2294 	strh.w	r2, [r3, #660]	; 0x294
 8001f8e:	4b74      	ldr	r3, [pc, #464]	; (8002160 <Create_Nodes+0xcf8>)
 8001f90:	f44f 72b7 	mov.w	r2, #366	; 0x16e
 8001f94:	f8a3 2296 	strh.w	r2, [r3, #662]	; 0x296
 8001f98:	4b71      	ldr	r3, [pc, #452]	; (8002160 <Create_Nodes+0xcf8>)
 8001f9a:	f240 1273 	movw	r2, #371	; 0x173
 8001f9e:	f8a3 2298 	strh.w	r2, [r3, #664]	; 0x298
 8001fa2:	4b6f      	ldr	r3, [pc, #444]	; (8002160 <Create_Nodes+0xcf8>)
 8001fa4:	2200      	movs	r2, #0
 8001fa6:	f8a3 229a 	strh.w	r2, [r3, #666]	; 0x29a
	N('U').middle=NEIGHBOUR1;
 8001faa:	4b6d      	ldr	r3, [pc, #436]	; (8002160 <Create_Nodes+0xcf8>)
 8001fac:	2200      	movs	r2, #0
 8001fae:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c

	//V node
	N('V').worth=2;
 8001fb2:	4b6b      	ldr	r3, [pc, #428]	; (8002160 <Create_Nodes+0xcf8>)
 8001fb4:	2202      	movs	r2, #2
 8001fb6:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
	N('V').type=1;
 8001fba:	4b69      	ldr	r3, [pc, #420]	; (8002160 <Create_Nodes+0xcf8>)
 8001fbc:	2201      	movs	r2, #1
 8001fbe:	f8c3 22a8 	str.w	r2, [r3, #680]	; 0x2a8
	VALUE(N('V').neighbours,'S','T','W',0);
 8001fc2:	4b67      	ldr	r3, [pc, #412]	; (8002160 <Create_Nodes+0xcf8>)
 8001fc4:	2253      	movs	r2, #83	; 0x53
 8001fc6:	f883 22ac 	strb.w	r2, [r3, #684]	; 0x2ac
 8001fca:	4b65      	ldr	r3, [pc, #404]	; (8002160 <Create_Nodes+0xcf8>)
 8001fcc:	2254      	movs	r2, #84	; 0x54
 8001fce:	f883 22ad 	strb.w	r2, [r3, #685]	; 0x2ad
 8001fd2:	4b63      	ldr	r3, [pc, #396]	; (8002160 <Create_Nodes+0xcf8>)
 8001fd4:	2257      	movs	r2, #87	; 0x57
 8001fd6:	f883 22ae 	strb.w	r2, [r3, #686]	; 0x2ae
 8001fda:	4b61      	ldr	r3, [pc, #388]	; (8002160 <Create_Nodes+0xcf8>)
 8001fdc:	2200      	movs	r2, #0
 8001fde:	f883 22af 	strb.w	r2, [r3, #687]	; 0x2af
	VALUE(N('V').directions,1,1,2,0);
 8001fe2:	4b5f      	ldr	r3, [pc, #380]	; (8002160 <Create_Nodes+0xcf8>)
 8001fe4:	2201      	movs	r2, #1
 8001fe6:	f883 22b0 	strb.w	r2, [r3, #688]	; 0x2b0
 8001fea:	4b5d      	ldr	r3, [pc, #372]	; (8002160 <Create_Nodes+0xcf8>)
 8001fec:	2201      	movs	r2, #1
 8001fee:	f883 22b1 	strb.w	r2, [r3, #689]	; 0x2b1
 8001ff2:	4b5b      	ldr	r3, [pc, #364]	; (8002160 <Create_Nodes+0xcf8>)
 8001ff4:	2202      	movs	r2, #2
 8001ff6:	f883 22b2 	strb.w	r2, [r3, #690]	; 0x2b2
 8001ffa:	4b59      	ldr	r3, [pc, #356]	; (8002160 <Create_Nodes+0xcf8>)
 8001ffc:	2200      	movs	r2, #0
 8001ffe:	f883 22b3 	strb.w	r2, [r3, #691]	; 0x2b3
	VALUE(N('V').distance,406,233,149,0);
 8002002:	4b57      	ldr	r3, [pc, #348]	; (8002160 <Create_Nodes+0xcf8>)
 8002004:	f44f 72cb 	mov.w	r2, #406	; 0x196
 8002008:	f8a3 22b4 	strh.w	r2, [r3, #692]	; 0x2b4
 800200c:	4b54      	ldr	r3, [pc, #336]	; (8002160 <Create_Nodes+0xcf8>)
 800200e:	22e9      	movs	r2, #233	; 0xe9
 8002010:	f8a3 22b6 	strh.w	r2, [r3, #694]	; 0x2b6
 8002014:	4b52      	ldr	r3, [pc, #328]	; (8002160 <Create_Nodes+0xcf8>)
 8002016:	2295      	movs	r2, #149	; 0x95
 8002018:	f8a3 22b8 	strh.w	r2, [r3, #696]	; 0x2b8
 800201c:	4b50      	ldr	r3, [pc, #320]	; (8002160 <Create_Nodes+0xcf8>)
 800201e:	2200      	movs	r2, #0
 8002020:	f8a3 22ba 	strh.w	r2, [r3, #698]	; 0x2ba
	N('V').middle=NEIGHBOUR2;
 8002024:	4b4e      	ldr	r3, [pc, #312]	; (8002160 <Create_Nodes+0xcf8>)
 8002026:	2201      	movs	r2, #1
 8002028:	f883 22bc 	strb.w	r2, [r3, #700]	; 0x2bc

	//W node
	N('W').worth=0;
 800202c:	4b4c      	ldr	r3, [pc, #304]	; (8002160 <Create_Nodes+0xcf8>)
 800202e:	2200      	movs	r2, #0
 8002030:	f8c3 22c4 	str.w	r2, [r3, #708]	; 0x2c4
	N('W').type=3;
 8002034:	4b4a      	ldr	r3, [pc, #296]	; (8002160 <Create_Nodes+0xcf8>)
 8002036:	2203      	movs	r2, #3
 8002038:	f8c3 22c8 	str.w	r2, [r3, #712]	; 0x2c8
	VALUE(N('W').neighbours,'V',0,'X',0);
 800203c:	4b48      	ldr	r3, [pc, #288]	; (8002160 <Create_Nodes+0xcf8>)
 800203e:	2256      	movs	r2, #86	; 0x56
 8002040:	f883 22cc 	strb.w	r2, [r3, #716]	; 0x2cc
 8002044:	4b46      	ldr	r3, [pc, #280]	; (8002160 <Create_Nodes+0xcf8>)
 8002046:	2200      	movs	r2, #0
 8002048:	f883 22cd 	strb.w	r2, [r3, #717]	; 0x2cd
 800204c:	4b44      	ldr	r3, [pc, #272]	; (8002160 <Create_Nodes+0xcf8>)
 800204e:	2258      	movs	r2, #88	; 0x58
 8002050:	f883 22ce 	strb.w	r2, [r3, #718]	; 0x2ce
 8002054:	4b42      	ldr	r3, [pc, #264]	; (8002160 <Create_Nodes+0xcf8>)
 8002056:	2200      	movs	r2, #0
 8002058:	f883 22cf 	strb.w	r2, [r3, #719]	; 0x2cf
	VALUE(N('W').directions,1,0,1,0);
 800205c:	4b40      	ldr	r3, [pc, #256]	; (8002160 <Create_Nodes+0xcf8>)
 800205e:	2201      	movs	r2, #1
 8002060:	f883 22d0 	strb.w	r2, [r3, #720]	; 0x2d0
 8002064:	4b3e      	ldr	r3, [pc, #248]	; (8002160 <Create_Nodes+0xcf8>)
 8002066:	2200      	movs	r2, #0
 8002068:	f883 22d1 	strb.w	r2, [r3, #721]	; 0x2d1
 800206c:	4b3c      	ldr	r3, [pc, #240]	; (8002160 <Create_Nodes+0xcf8>)
 800206e:	2201      	movs	r2, #1
 8002070:	f883 22d2 	strb.w	r2, [r3, #722]	; 0x2d2
 8002074:	4b3a      	ldr	r3, [pc, #232]	; (8002160 <Create_Nodes+0xcf8>)
 8002076:	2200      	movs	r2, #0
 8002078:	f883 22d3 	strb.w	r2, [r3, #723]	; 0x2d3
	VALUE(N('W').distance,149,0,189,0);
 800207c:	4b38      	ldr	r3, [pc, #224]	; (8002160 <Create_Nodes+0xcf8>)
 800207e:	2295      	movs	r2, #149	; 0x95
 8002080:	f8a3 22d4 	strh.w	r2, [r3, #724]	; 0x2d4
 8002084:	4b36      	ldr	r3, [pc, #216]	; (8002160 <Create_Nodes+0xcf8>)
 8002086:	2200      	movs	r2, #0
 8002088:	f8a3 22d6 	strh.w	r2, [r3, #726]	; 0x2d6
 800208c:	4b34      	ldr	r3, [pc, #208]	; (8002160 <Create_Nodes+0xcf8>)
 800208e:	22bd      	movs	r2, #189	; 0xbd
 8002090:	f8a3 22d8 	strh.w	r2, [r3, #728]	; 0x2d8
 8002094:	4b32      	ldr	r3, [pc, #200]	; (8002160 <Create_Nodes+0xcf8>)
 8002096:	2200      	movs	r2, #0
 8002098:	f8a3 22da 	strh.w	r2, [r3, #730]	; 0x2da
	N('W').middle=NEIGHBOUR1;
 800209c:	4b30      	ldr	r3, [pc, #192]	; (8002160 <Create_Nodes+0xcf8>)
 800209e:	2200      	movs	r2, #0
 80020a0:	f883 22dc 	strb.w	r2, [r3, #732]	; 0x2dc

	//X node
	N('X').worth=2;
 80020a4:	4b2e      	ldr	r3, [pc, #184]	; (8002160 <Create_Nodes+0xcf8>)
 80020a6:	2202      	movs	r2, #2
 80020a8:	f8c3 22e4 	str.w	r2, [r3, #740]	; 0x2e4
	N('X').type=2;
 80020ac:	4b2c      	ldr	r3, [pc, #176]	; (8002160 <Create_Nodes+0xcf8>)
 80020ae:	2202      	movs	r2, #2
 80020b0:	f8c3 22e8 	str.w	r2, [r3, #744]	; 0x2e8
	VALUE(N('X').neighbours,'U',0,0,'W');
 80020b4:	4b2a      	ldr	r3, [pc, #168]	; (8002160 <Create_Nodes+0xcf8>)
 80020b6:	2255      	movs	r2, #85	; 0x55
 80020b8:	f883 22ec 	strb.w	r2, [r3, #748]	; 0x2ec
 80020bc:	4b28      	ldr	r3, [pc, #160]	; (8002160 <Create_Nodes+0xcf8>)
 80020be:	2200      	movs	r2, #0
 80020c0:	f883 22ed 	strb.w	r2, [r3, #749]	; 0x2ed
 80020c4:	4b26      	ldr	r3, [pc, #152]	; (8002160 <Create_Nodes+0xcf8>)
 80020c6:	2200      	movs	r2, #0
 80020c8:	f883 22ee 	strb.w	r2, [r3, #750]	; 0x2ee
 80020cc:	4b24      	ldr	r3, [pc, #144]	; (8002160 <Create_Nodes+0xcf8>)
 80020ce:	2257      	movs	r2, #87	; 0x57
 80020d0:	f883 22ef 	strb.w	r2, [r3, #751]	; 0x2ef
	VALUE(N('X').directions,1,0,0,1);
 80020d4:	4b22      	ldr	r3, [pc, #136]	; (8002160 <Create_Nodes+0xcf8>)
 80020d6:	2201      	movs	r2, #1
 80020d8:	f883 22f0 	strb.w	r2, [r3, #752]	; 0x2f0
 80020dc:	4b20      	ldr	r3, [pc, #128]	; (8002160 <Create_Nodes+0xcf8>)
 80020de:	2200      	movs	r2, #0
 80020e0:	f883 22f1 	strb.w	r2, [r3, #753]	; 0x2f1
 80020e4:	4b1e      	ldr	r3, [pc, #120]	; (8002160 <Create_Nodes+0xcf8>)
 80020e6:	2200      	movs	r2, #0
 80020e8:	f883 22f2 	strb.w	r2, [r3, #754]	; 0x2f2
 80020ec:	4b1c      	ldr	r3, [pc, #112]	; (8002160 <Create_Nodes+0xcf8>)
 80020ee:	2201      	movs	r2, #1
 80020f0:	f883 22f3 	strb.w	r2, [r3, #755]	; 0x2f3
	VALUE(N('X').distance,371,0,0,189);
 80020f4:	4b1a      	ldr	r3, [pc, #104]	; (8002160 <Create_Nodes+0xcf8>)
 80020f6:	f240 1273 	movw	r2, #371	; 0x173
 80020fa:	f8a3 22f4 	strh.w	r2, [r3, #756]	; 0x2f4
 80020fe:	4b18      	ldr	r3, [pc, #96]	; (8002160 <Create_Nodes+0xcf8>)
 8002100:	2200      	movs	r2, #0
 8002102:	f8a3 22f6 	strh.w	r2, [r3, #758]	; 0x2f6
 8002106:	4b16      	ldr	r3, [pc, #88]	; (8002160 <Create_Nodes+0xcf8>)
 8002108:	2200      	movs	r2, #0
 800210a:	f8a3 22f8 	strh.w	r2, [r3, #760]	; 0x2f8
 800210e:	4b14      	ldr	r3, [pc, #80]	; (8002160 <Create_Nodes+0xcf8>)
 8002110:	22bd      	movs	r2, #189	; 0xbd
 8002112:	f8a3 22fa 	strh.w	r2, [r3, #762]	; 0x2fa
	N('X').middle=NEIGHBOUR1;
 8002116:	4b12      	ldr	r3, [pc, #72]	; (8002160 <Create_Nodes+0xcf8>)
 8002118:	2200      	movs	r2, #0
 800211a:	f883 22fc 	strb.w	r2, [r3, #764]	; 0x2fc

	//Y node
	/**/N('Y').worth=0;
 800211e:	4b10      	ldr	r3, [pc, #64]	; (8002160 <Create_Nodes+0xcf8>)
 8002120:	2200      	movs	r2, #0
 8002122:	f8c3 2304 	str.w	r2, [r3, #772]	; 0x304
	N('Y').type=1;
 8002126:	4b0e      	ldr	r3, [pc, #56]	; (8002160 <Create_Nodes+0xcf8>)
 8002128:	2201      	movs	r2, #1
 800212a:	f8c3 2308 	str.w	r2, [r3, #776]	; 0x308
	VALUE(N('Y').neighbours,'W',0,0,0);
 800212e:	4b0c      	ldr	r3, [pc, #48]	; (8002160 <Create_Nodes+0xcf8>)
 8002130:	2257      	movs	r2, #87	; 0x57
 8002132:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
 8002136:	4b0a      	ldr	r3, [pc, #40]	; (8002160 <Create_Nodes+0xcf8>)
 8002138:	2200      	movs	r2, #0
 800213a:	f883 230d 	strb.w	r2, [r3, #781]	; 0x30d
 800213e:	4b08      	ldr	r3, [pc, #32]	; (8002160 <Create_Nodes+0xcf8>)
 8002140:	2200      	movs	r2, #0
 8002142:	f883 230e 	strb.w	r2, [r3, #782]	; 0x30e
 8002146:	4b06      	ldr	r3, [pc, #24]	; (8002160 <Create_Nodes+0xcf8>)
 8002148:	2200      	movs	r2, #0
 800214a:	f883 230f 	strb.w	r2, [r3, #783]	; 0x30f
	VALUE(N('Y').directions,1,0,0,0);
 800214e:	4b04      	ldr	r3, [pc, #16]	; (8002160 <Create_Nodes+0xcf8>)
 8002150:	2201      	movs	r2, #1
 8002152:	f883 2310 	strb.w	r2, [r3, #784]	; 0x310
 8002156:	4b02      	ldr	r3, [pc, #8]	; (8002160 <Create_Nodes+0xcf8>)
 8002158:	2200      	movs	r2, #0
 800215a:	f883 2311 	strb.w	r2, [r3, #785]	; 0x311
 800215e:	e001      	b.n	8002164 <Create_Nodes+0xcfc>
 8002160:	200002b8 	.word	0x200002b8
 8002164:	4b6c      	ldr	r3, [pc, #432]	; (8002318 <Create_Nodes+0xeb0>)
 8002166:	2200      	movs	r2, #0
 8002168:	f883 2312 	strb.w	r2, [r3, #786]	; 0x312
 800216c:	4b6a      	ldr	r3, [pc, #424]	; (8002318 <Create_Nodes+0xeb0>)
 800216e:	2200      	movs	r2, #0
 8002170:	f883 2313 	strb.w	r2, [r3, #787]	; 0x313
	VALUE(N('Y').distance,351,0,0,0);
 8002174:	4b68      	ldr	r3, [pc, #416]	; (8002318 <Create_Nodes+0xeb0>)
 8002176:	f240 125f 	movw	r2, #351	; 0x15f
 800217a:	f8a3 2314 	strh.w	r2, [r3, #788]	; 0x314
 800217e:	4b66      	ldr	r3, [pc, #408]	; (8002318 <Create_Nodes+0xeb0>)
 8002180:	2200      	movs	r2, #0
 8002182:	f8a3 2316 	strh.w	r2, [r3, #790]	; 0x316
 8002186:	4b64      	ldr	r3, [pc, #400]	; (8002318 <Create_Nodes+0xeb0>)
 8002188:	2200      	movs	r2, #0
 800218a:	f8a3 2318 	strh.w	r2, [r3, #792]	; 0x318
 800218e:	4b62      	ldr	r3, [pc, #392]	; (8002318 <Create_Nodes+0xeb0>)
 8002190:	2200      	movs	r2, #0
 8002192:	f8a3 231a 	strh.w	r2, [r3, #794]	; 0x31a
	N('Y').middle=NEIGHBOUR1;
 8002196:	4b60      	ldr	r3, [pc, #384]	; (8002318 <Create_Nodes+0xeb0>)
 8002198:	2200      	movs	r2, #0
 800219a:	f883 231c 	strb.w	r2, [r3, #796]	; 0x31c

	//Nodeértékek backup mentésből való visszatöltése
	if(SW2)//ha a kacsapoló2 a megfelelő állapotban van (világít a sárga LED)
 800219e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80021a2:	485e      	ldr	r0, [pc, #376]	; (800231c <Create_Nodes+0xeb4>)
 80021a4:	f006 f9fc 	bl	80085a0 <HAL_GPIO_ReadPin>
 80021a8:	4603      	mov	r3, r0
 80021aa:	2b00      	cmp	r3, #0
 80021ac:	f000 8099 	beq.w	80022e2 <Create_Nodes+0xe7a>
	{
		uint32_t check_flash = *(__IO uint32_t *) FLASH_ADDRESS_NODEWORTH; //tényleg ottvanak  flashbena megfelelő helyen a worth értékek?
 80021b0:	4b5b      	ldr	r3, [pc, #364]	; (8002320 <Create_Nodes+0xeb8>)
 80021b2:	681b      	ldr	r3, [r3, #0]
 80021b4:	66bb      	str	r3, [r7, #104]	; 0x68

		if(check_flash==0xffffffff)//nincs semmi a flashben
 80021b6:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80021b8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80021bc:	d15d      	bne.n	800227a <Create_Nodes+0xe12>
		{
			char str[]="Default worths because of FLASH ERROR!\n\r";
 80021be:	4b59      	ldr	r3, [pc, #356]	; (8002324 <Create_Nodes+0xebc>)
 80021c0:	f107 040c 	add.w	r4, r7, #12
 80021c4:	461d      	mov	r5, r3
 80021c6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80021c8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80021ca:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80021cc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80021ce:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80021d2:	c403      	stmia	r4!, {r0, r1}
 80021d4:	7022      	strb	r2, [r4, #0]
			HAL_UART_Transmit(huart_debugg,(uint8_t*) str, strlen(str), 10);
 80021d6:	f107 030c 	add.w	r3, r7, #12
 80021da:	4618      	mov	r0, r3
 80021dc:	f7fe f818 	bl	8000210 <strlen>
 80021e0:	4603      	mov	r3, r0
 80021e2:	b29a      	uxth	r2, r3
 80021e4:	f107 010c 	add.w	r1, r7, #12
 80021e8:	230a      	movs	r3, #10
 80021ea:	6878      	ldr	r0, [r7, #4]
 80021ec:	f008 ff43 	bl	800b076 <HAL_UART_Transmit>
			HAL_FLASH_Unlock();
 80021f0:	f005 fe88 	bl	8007f04 <HAL_FLASH_Unlock>
			HAL_Delay(50);
 80021f4:	2032      	movs	r0, #50	; 0x32
 80021f6:	f004 fb51 	bl	800689c <HAL_Delay>
			FLASH_Erase_Sector(6, FLASH_VOLTAGE_RANGE_3);
 80021fa:	2102      	movs	r1, #2
 80021fc:	2006      	movs	r0, #6
 80021fe:	f005 fff3 	bl	80081e8 <FLASH_Erase_Sector>
			HAL_Delay(50);
 8002202:	2032      	movs	r0, #50	; 0x32
 8002204:	f004 fb4a 	bl	800689c <HAL_Delay>
			HAL_FLASH_Lock();
 8002208:	f005 fe9e 	bl	8007f48 <HAL_FLASH_Lock>
			HAL_Delay(50);
 800220c:	2032      	movs	r0, #50	; 0x32
 800220e:	f004 fb45 	bl	800689c <HAL_Delay>
			HAL_FLASH_Unlock();
 8002212:	f005 fe77 	bl	8007f04 <HAL_FLASH_Unlock>
			HAL_Delay(50);
 8002216:	2032      	movs	r0, #50	; 0x32
 8002218:	f004 fb40 	bl	800689c <HAL_Delay>
			for(i=0;i<25;i++)
 800221c:	2300      	movs	r3, #0
 800221e:	66fb      	str	r3, [r7, #108]	; 0x6c
 8002220:	e016      	b.n	8002250 <Create_Nodes+0xde8>
			{
				HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+i, Nodes[i].worth);
 8002222:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002224:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 8002228:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
 800222c:	4619      	mov	r1, r3
 800222e:	4a3a      	ldr	r2, [pc, #232]	; (8002318 <Create_Nodes+0xeb0>)
 8002230:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002232:	015b      	lsls	r3, r3, #5
 8002234:	4413      	add	r3, r2
 8002236:	3304      	adds	r3, #4
 8002238:	681b      	ldr	r3, [r3, #0]
 800223a:	17da      	asrs	r2, r3, #31
 800223c:	469a      	mov	sl, r3
 800223e:	4693      	mov	fp, r2
 8002240:	4652      	mov	r2, sl
 8002242:	465b      	mov	r3, fp
 8002244:	2000      	movs	r0, #0
 8002246:	f005 fe09 	bl	8007e5c <HAL_FLASH_Program>
			for(i=0;i<25;i++)
 800224a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800224c:	3301      	adds	r3, #1
 800224e:	66fb      	str	r3, [r7, #108]	; 0x6c
 8002250:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002252:	2b18      	cmp	r3, #24
 8002254:	dde5      	ble.n	8002222 <Create_Nodes+0xdba>
			}
			HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_NODEWORTH+25, collectedPoints);
 8002256:	4b34      	ldr	r3, [pc, #208]	; (8002328 <Create_Nodes+0xec0>)
 8002258:	781b      	ldrb	r3, [r3, #0]
 800225a:	b2db      	uxtb	r3, r3
 800225c:	2200      	movs	r2, #0
 800225e:	4698      	mov	r8, r3
 8002260:	4691      	mov	r9, r2
 8002262:	4642      	mov	r2, r8
 8002264:	464b      	mov	r3, r9
 8002266:	4931      	ldr	r1, [pc, #196]	; (800232c <Create_Nodes+0xec4>)
 8002268:	2000      	movs	r0, #0
 800226a:	f005 fdf7 	bl	8007e5c <HAL_FLASH_Program>
			HAL_Delay(50);
 800226e:	2032      	movs	r0, #50	; 0x32
 8002270:	f004 fb14 	bl	800689c <HAL_Delay>
			HAL_FLASH_Lock();
 8002274:	f005 fe68 	bl	8007f48 <HAL_FLASH_Lock>
 8002278:	e04a      	b.n	8002310 <Create_Nodes+0xea8>
			return; //ha nem akkor használjuk a default értékeket
		}
		for(i=0;i<25;i++)
 800227a:	2300      	movs	r3, #0
 800227c:	66fb      	str	r3, [r7, #108]	; 0x6c
 800227e:	e010      	b.n	80022a2 <Create_Nodes+0xe3a>
		{
			Nodes[i].worth=*(__IO uint8_t *) (FLASH_ADDRESS_NODEWORTH+i); //ha igen akkor töltsük be a backup mentést
 8002280:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002282:	f103 6300 	add.w	r3, r3, #134217728	; 0x8000000
 8002286:	f503 2380 	add.w	r3, r3, #262144	; 0x40000
 800228a:	781b      	ldrb	r3, [r3, #0]
 800228c:	b2db      	uxtb	r3, r3
 800228e:	4619      	mov	r1, r3
 8002290:	4a21      	ldr	r2, [pc, #132]	; (8002318 <Create_Nodes+0xeb0>)
 8002292:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002294:	015b      	lsls	r3, r3, #5
 8002296:	4413      	add	r3, r2
 8002298:	3304      	adds	r3, #4
 800229a:	6019      	str	r1, [r3, #0]
		for(i=0;i<25;i++)
 800229c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800229e:	3301      	adds	r3, #1
 80022a0:	66fb      	str	r3, [r7, #108]	; 0x6c
 80022a2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80022a4:	2b18      	cmp	r3, #24
 80022a6:	ddeb      	ble.n	8002280 <Create_Nodes+0xe18>
		}
		collectedPoints=*(__IO uint8_t *) (FLASH_ADDRESS_NODEWORTH+25);
 80022a8:	4b20      	ldr	r3, [pc, #128]	; (800232c <Create_Nodes+0xec4>)
 80022aa:	781b      	ldrb	r3, [r3, #0]
 80022ac:	b2da      	uxtb	r2, r3
 80022ae:	4b1e      	ldr	r3, [pc, #120]	; (8002328 <Create_Nodes+0xec0>)
 80022b0:	701a      	strb	r2, [r3, #0]
		char str[]="Worths from FLASH backup!\n\r";
 80022b2:	4b1f      	ldr	r3, [pc, #124]	; (8002330 <Create_Nodes+0xec8>)
 80022b4:	f107 044c 	add.w	r4, r7, #76	; 0x4c
 80022b8:	461d      	mov	r5, r3
 80022ba:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80022bc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80022be:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80022c2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
		HAL_UART_Transmit(huart_debugg,(uint8_t*) str, strlen(str), 10);
 80022c6:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 80022ca:	4618      	mov	r0, r3
 80022cc:	f7fd ffa0 	bl	8000210 <strlen>
 80022d0:	4603      	mov	r3, r0
 80022d2:	b29a      	uxth	r2, r3
 80022d4:	f107 014c 	add.w	r1, r7, #76	; 0x4c
 80022d8:	230a      	movs	r3, #10
 80022da:	6878      	ldr	r0, [r7, #4]
 80022dc:	f008 fecb 	bl	800b076 <HAL_UART_Transmit>
 80022e0:	e016      	b.n	8002310 <Create_Nodes+0xea8>
	}
	else
	{
		char str[]="Default worths!\n\r";
 80022e2:	4b14      	ldr	r3, [pc, #80]	; (8002334 <Create_Nodes+0xecc>)
 80022e4:	f107 0438 	add.w	r4, r7, #56	; 0x38
 80022e8:	461d      	mov	r5, r3
 80022ea:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80022ec:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80022ee:	682b      	ldr	r3, [r5, #0]
 80022f0:	8023      	strh	r3, [r4, #0]
		HAL_UART_Transmit(huart_debugg,(uint8_t*) str, strlen(str), 10);
 80022f2:	f107 0338 	add.w	r3, r7, #56	; 0x38
 80022f6:	4618      	mov	r0, r3
 80022f8:	f7fd ff8a 	bl	8000210 <strlen>
 80022fc:	4603      	mov	r3, r0
 80022fe:	b29a      	uxth	r2, r3
 8002300:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8002304:	230a      	movs	r3, #10
 8002306:	6878      	ldr	r0, [r7, #4]
 8002308:	f008 feb5 	bl	800b076 <HAL_UART_Transmit>
 800230c:	e000      	b.n	8002310 <Create_Nodes+0xea8>
	if(mode!=SKILL)return;
 800230e:	bf00      	nop
	}
}
 8002310:	3770      	adds	r7, #112	; 0x70
 8002312:	46bd      	mov	sp, r7
 8002314:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8002318:	200002b8 	.word	0x200002b8
 800231c:	40020400 	.word	0x40020400
 8002320:	08040000 	.word	0x08040000
 8002324:	0801053c 	.word	0x0801053c
 8002328:	200002a7 	.word	0x200002a7
 800232c:	08040019 	.word	0x08040019
 8002330:	08010568 	.word	0x08010568
 8002334:	08010584 	.word	0x08010584

08002338 <Control_Task>:


void Control_Task(UART_HandleTypeDef *huart_debugg,TIM_HandleTypeDef *htim_rand,uint32_t tick, uint32_t period)
{
 8002338:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 800233c:	b08a      	sub	sp, #40	; 0x28
 800233e:	af02      	add	r7, sp, #8
 8002340:	60f8      	str	r0, [r7, #12]
 8002342:	60b9      	str	r1, [r7, #8]
 8002344:	607a      	str	r2, [r7, #4]
 8002346:	603b      	str	r3, [r7, #0]

	static uint32_t control_task_tick = 0;
	static uint8_t control_task_state=NEIGHBOUR1;//5 db állapot ->5.után megint 1.jön
	//szomszéd1,szomszéd2,szomszéd3,szomszéd4,kiértékelés

	uint8_t nID=0;
 8002348:	2300      	movs	r3, #0
 800234a:	76fb      	strb	r3, [r7, #27]

	if(control_task_tick>tick)return;
 800234c:	4b92      	ldr	r3, [pc, #584]	; (8002598 <Control_Task+0x260>)
 800234e:	681b      	ldr	r3, [r3, #0]
 8002350:	687a      	ldr	r2, [r7, #4]
 8002352:	429a      	cmp	r2, r3
 8002354:	f0c0 8378 	bcc.w	8002a48 <Control_Task+0x710>
	control_task_tick=tick+period;
 8002358:	687a      	ldr	r2, [r7, #4]
 800235a:	683b      	ldr	r3, [r7, #0]
 800235c:	4413      	add	r3, r2
 800235e:	4a8e      	ldr	r2, [pc, #568]	; (8002598 <Control_Task+0x260>)
 8002360:	6013      	str	r3, [r2, #0]
	if(mode!=SKILL)return;
 8002362:	4b8e      	ldr	r3, [pc, #568]	; (800259c <Control_Task+0x264>)
 8002364:	781b      	ldrb	r3, [r3, #0]
 8002366:	2b52      	cmp	r3, #82	; 0x52
 8002368:	f040 8370 	bne.w	8002a4c <Control_Task+0x714>
	//if(!readytorace)return;

	//ha kapu nélküli nodeba tartunk éppen, akkor időzítéssel "detektáljuk" a nodot
	if(N(pos[MY]).type>2)
 800236c:	4b8c      	ldr	r3, [pc, #560]	; (80025a0 <Control_Task+0x268>)
 800236e:	781b      	ldrb	r3, [r3, #0]
 8002370:	3b41      	subs	r3, #65	; 0x41
 8002372:	4a8c      	ldr	r2, [pc, #560]	; (80025a4 <Control_Task+0x26c>)
 8002374:	015b      	lsls	r3, r3, #5
 8002376:	4413      	add	r3, r2
 8002378:	3308      	adds	r3, #8
 800237a:	681b      	ldr	r3, [r3, #0]
 800237c:	2b02      	cmp	r3, #2
 800237e:	d94c      	bls.n	800241a <Control_Task+0xe2>
	{
		s += (float)(tick-tick_prev)*fabs(v)/10000;
 8002380:	4b89      	ldr	r3, [pc, #548]	; (80025a8 <Control_Task+0x270>)
 8002382:	681b      	ldr	r3, [r3, #0]
 8002384:	4618      	mov	r0, r3
 8002386:	f7fe f8ff 	bl	8000588 <__aeabi_f2d>
 800238a:	4604      	mov	r4, r0
 800238c:	460d      	mov	r5, r1
 800238e:	4b87      	ldr	r3, [pc, #540]	; (80025ac <Control_Task+0x274>)
 8002390:	681b      	ldr	r3, [r3, #0]
 8002392:	687a      	ldr	r2, [r7, #4]
 8002394:	1ad3      	subs	r3, r2, r3
 8002396:	ee07 3a90 	vmov	s15, r3
 800239a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800239e:	ee17 0a90 	vmov	r0, s15
 80023a2:	f7fe f8f1 	bl	8000588 <__aeabi_f2d>
 80023a6:	4680      	mov	r8, r0
 80023a8:	4689      	mov	r9, r1
 80023aa:	4b81      	ldr	r3, [pc, #516]	; (80025b0 <Control_Task+0x278>)
 80023ac:	edd3 7a00 	vldr	s15, [r3]
 80023b0:	eef0 7ae7 	vabs.f32	s15, s15
 80023b4:	ee17 0a90 	vmov	r0, s15
 80023b8:	f7fe f8e6 	bl	8000588 <__aeabi_f2d>
 80023bc:	4602      	mov	r2, r0
 80023be:	460b      	mov	r3, r1
 80023c0:	4640      	mov	r0, r8
 80023c2:	4649      	mov	r1, r9
 80023c4:	f7fe f938 	bl	8000638 <__aeabi_dmul>
 80023c8:	4602      	mov	r2, r0
 80023ca:	460b      	mov	r3, r1
 80023cc:	4610      	mov	r0, r2
 80023ce:	4619      	mov	r1, r3
 80023d0:	a36f      	add	r3, pc, #444	; (adr r3, 8002590 <Control_Task+0x258>)
 80023d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023d6:	f7fe fa59 	bl	800088c <__aeabi_ddiv>
 80023da:	4602      	mov	r2, r0
 80023dc:	460b      	mov	r3, r1
 80023de:	4620      	mov	r0, r4
 80023e0:	4629      	mov	r1, r5
 80023e2:	f7fd ff73 	bl	80002cc <__adddf3>
 80023e6:	4602      	mov	r2, r0
 80023e8:	460b      	mov	r3, r1
 80023ea:	4610      	mov	r0, r2
 80023ec:	4619      	mov	r1, r3
 80023ee:	f7fe fbfb 	bl	8000be8 <__aeabi_d2f>
 80023f2:	4603      	mov	r3, r0
 80023f4:	4a6c      	ldr	r2, [pc, #432]	; (80025a8 <Control_Task+0x270>)
 80023f6:	6013      	str	r3, [r2, #0]
		if(s>sMAX)nodeDetected=1;
 80023f8:	4b6e      	ldr	r3, [pc, #440]	; (80025b4 <Control_Task+0x27c>)
 80023fa:	681b      	ldr	r3, [r3, #0]
 80023fc:	ee07 3a90 	vmov	s15, r3
 8002400:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8002404:	4b68      	ldr	r3, [pc, #416]	; (80025a8 <Control_Task+0x270>)
 8002406:	edd3 7a00 	vldr	s15, [r3]
 800240a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800240e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002412:	d502      	bpl.n	800241a <Control_Task+0xe2>
 8002414:	4b68      	ldr	r3, [pc, #416]	; (80025b8 <Control_Task+0x280>)
 8002416:	2201      	movs	r2, #1
 8002418:	701a      	strb	r2, [r3, #0]

	}
	tick_prev=tick;//mostantól mérjük az időt
 800241a:	4a64      	ldr	r2, [pc, #400]	; (80025ac <Control_Task+0x274>)
 800241c:	687b      	ldr	r3, [r7, #4]
 800241e:	6013      	str	r3, [r2, #0]

	//ha odaértünk a myPositionbe, akkor indulhat a mozgás a nextPosition felé
	if(nodeDetected)
 8002420:	4b65      	ldr	r3, [pc, #404]	; (80025b8 <Control_Task+0x280>)
 8002422:	781b      	ldrb	r3, [r3, #0]
 8002424:	2b00      	cmp	r3, #0
 8002426:	f000 80e5 	beq.w	80025f4 <Control_Task+0x2bc>
	{
		LED_B_TOGGLE;
 800242a:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800242e:	4863      	ldr	r0, [pc, #396]	; (80025bc <Control_Task+0x284>)
 8002430:	f006 f8e7 	bl	8008602 <HAL_GPIO_TogglePin>
		if(N(pos[NEXT]).type>2)//ha a kövi node-on nincs kapu
 8002434:	4b5a      	ldr	r3, [pc, #360]	; (80025a0 <Control_Task+0x268>)
 8002436:	785b      	ldrb	r3, [r3, #1]
 8002438:	3b41      	subs	r3, #65	; 0x41
 800243a:	4a5a      	ldr	r2, [pc, #360]	; (80025a4 <Control_Task+0x26c>)
 800243c:	015b      	lsls	r3, r3, #5
 800243e:	4413      	add	r3, r2
 8002440:	3308      	adds	r3, #8
 8002442:	681b      	ldr	r3, [r3, #0]
 8002444:	2b02      	cmp	r3, #2
 8002446:	d914      	bls.n	8002472 <Control_Task+0x13a>
		{
			s=0;
 8002448:	4b57      	ldr	r3, [pc, #348]	; (80025a8 <Control_Task+0x270>)
 800244a:	f04f 0200 	mov.w	r2, #0
 800244e:	601a      	str	r2, [r3, #0]
			sMAX=N(pos[MY]).distance[bestNb[NEXT]]+25;
 8002450:	4b53      	ldr	r3, [pc, #332]	; (80025a0 <Control_Task+0x268>)
 8002452:	781b      	ldrb	r3, [r3, #0]
 8002454:	3b41      	subs	r3, #65	; 0x41
 8002456:	4a5a      	ldr	r2, [pc, #360]	; (80025c0 <Control_Task+0x288>)
 8002458:	7852      	ldrb	r2, [r2, #1]
 800245a:	4611      	mov	r1, r2
 800245c:	4a51      	ldr	r2, [pc, #324]	; (80025a4 <Control_Task+0x26c>)
 800245e:	011b      	lsls	r3, r3, #4
 8002460:	440b      	add	r3, r1
 8002462:	3308      	adds	r3, #8
 8002464:	005b      	lsls	r3, r3, #1
 8002466:	4413      	add	r3, r2
 8002468:	889b      	ldrh	r3, [r3, #4]
 800246a:	3319      	adds	r3, #25
 800246c:	461a      	mov	r2, r3
 800246e:	4b51      	ldr	r3, [pc, #324]	; (80025b4 <Control_Task+0x27c>)
 8002470:	601a      	str	r2, [r3, #0]
		}

		//pontok nyugtázása
		if(!laneChange)//ha nem sávváltó üzemmódban vagyunk pontotszámolunk és felszedett kapukat nullázzuk
 8002472:	4b54      	ldr	r3, [pc, #336]	; (80025c4 <Control_Task+0x28c>)
 8002474:	781b      	ldrb	r3, [r3, #0]
 8002476:	2b00      	cmp	r3, #0
 8002478:	d117      	bne.n	80024aa <Control_Task+0x172>
		{
			collectedPoints +=N(pos[MY]).worth;//sávváltás módik vizsgáljuk az össezgyűjtött kapuk számát
 800247a:	4b49      	ldr	r3, [pc, #292]	; (80025a0 <Control_Task+0x268>)
 800247c:	781b      	ldrb	r3, [r3, #0]
 800247e:	3b41      	subs	r3, #65	; 0x41
 8002480:	4a48      	ldr	r2, [pc, #288]	; (80025a4 <Control_Task+0x26c>)
 8002482:	015b      	lsls	r3, r3, #5
 8002484:	4413      	add	r3, r2
 8002486:	3304      	adds	r3, #4
 8002488:	681b      	ldr	r3, [r3, #0]
 800248a:	b2da      	uxtb	r2, r3
 800248c:	4b4e      	ldr	r3, [pc, #312]	; (80025c8 <Control_Task+0x290>)
 800248e:	781b      	ldrb	r3, [r3, #0]
 8002490:	4413      	add	r3, r2
 8002492:	b2da      	uxtb	r2, r3
 8002494:	4b4c      	ldr	r3, [pc, #304]	; (80025c8 <Control_Task+0x290>)
 8002496:	701a      	strb	r2, [r3, #0]
			N(pos[MY]).worth=0;//ez a kapu már nem ér pontot
 8002498:	4b41      	ldr	r3, [pc, #260]	; (80025a0 <Control_Task+0x268>)
 800249a:	781b      	ldrb	r3, [r3, #0]
 800249c:	3b41      	subs	r3, #65	; 0x41
 800249e:	4a41      	ldr	r2, [pc, #260]	; (80025a4 <Control_Task+0x26c>)
 80024a0:	015b      	lsls	r3, r3, #5
 80024a2:	4413      	add	r3, r2
 80024a4:	3304      	adds	r3, #4
 80024a6:	2200      	movs	r2, #0
 80024a8:	601a      	str	r2, [r3, #0]
		}

		if(collectedPoints >= 40 && !laneChange) //átváltás lane change módba
 80024aa:	4b47      	ldr	r3, [pc, #284]	; (80025c8 <Control_Task+0x290>)
 80024ac:	781b      	ldrb	r3, [r3, #0]
 80024ae:	2b27      	cmp	r3, #39	; 0x27
 80024b0:	d90e      	bls.n	80024d0 <Control_Task+0x198>
 80024b2:	4b44      	ldr	r3, [pc, #272]	; (80025c4 <Control_Task+0x28c>)
 80024b4:	781b      	ldrb	r3, [r3, #0]
 80024b6:	2b00      	cmp	r3, #0
 80024b8:	d10a      	bne.n	80024d0 <Control_Task+0x198>
		{
			laneChange=1; //flag állítás
 80024ba:	4b42      	ldr	r3, [pc, #264]	; (80025c4 <Control_Task+0x28c>)
 80024bc:	2201      	movs	r2, #1
 80024be:	701a      	strb	r2, [r3, #0]
			Lane_Change_Init(); //a sávváltóhely felé nőnek a rewardok
 80024c0:	f000 fca8 	bl	8002e14 <Lane_Change_Init>
			LED_Y(1); //sárga led világít
 80024c4:	2200      	movs	r2, #0
 80024c6:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80024ca:	483c      	ldr	r0, [pc, #240]	; (80025bc <Control_Task+0x284>)
 80024cc:	f006 f880 	bl	80085d0 <HAL_GPIO_WritePin>
		}

		if(laneChange==1 && pos[MY]=='N' && pos[NEXT]=='Q')//ha a tett színhelyén vagyunk
 80024d0:	4b3c      	ldr	r3, [pc, #240]	; (80025c4 <Control_Task+0x28c>)
 80024d2:	781b      	ldrb	r3, [r3, #0]
 80024d4:	2b01      	cmp	r3, #1
 80024d6:	d10a      	bne.n	80024ee <Control_Task+0x1b6>
 80024d8:	4b31      	ldr	r3, [pc, #196]	; (80025a0 <Control_Task+0x268>)
 80024da:	781b      	ldrb	r3, [r3, #0]
 80024dc:	2b4e      	cmp	r3, #78	; 0x4e
 80024de:	d106      	bne.n	80024ee <Control_Task+0x1b6>
 80024e0:	4b2f      	ldr	r3, [pc, #188]	; (80025a0 <Control_Task+0x268>)
 80024e2:	785b      	ldrb	r3, [r3, #1]
 80024e4:	2b51      	cmp	r3, #81	; 0x51
 80024e6:	d102      	bne.n	80024ee <Control_Task+0x1b6>
		{
			laneChange=2;
 80024e8:	4b36      	ldr	r3, [pc, #216]	; (80025c4 <Control_Task+0x28c>)
 80024ea:	2202      	movs	r2, #2
 80024ec:	701a      	strb	r2, [r3, #0]
		}

		static char str[20]; //kiiratás
		sprintf(str,"d,d,%2d,%3.2f\n\r",(int)collectedPoints, bestFitness);
 80024ee:	4b36      	ldr	r3, [pc, #216]	; (80025c8 <Control_Task+0x290>)
 80024f0:	781b      	ldrb	r3, [r3, #0]
 80024f2:	461c      	mov	r4, r3
 80024f4:	4b35      	ldr	r3, [pc, #212]	; (80025cc <Control_Task+0x294>)
 80024f6:	681b      	ldr	r3, [r3, #0]
 80024f8:	4618      	mov	r0, r3
 80024fa:	f7fe f845 	bl	8000588 <__aeabi_f2d>
 80024fe:	4602      	mov	r2, r0
 8002500:	460b      	mov	r3, r1
 8002502:	e9cd 2300 	strd	r2, r3, [sp]
 8002506:	4622      	mov	r2, r4
 8002508:	4931      	ldr	r1, [pc, #196]	; (80025d0 <Control_Task+0x298>)
 800250a:	4832      	ldr	r0, [pc, #200]	; (80025d4 <Control_Task+0x29c>)
 800250c:	f00a fb1c 	bl	800cb48 <siprintf>
		str[0]=pos[MY];
 8002510:	4b23      	ldr	r3, [pc, #140]	; (80025a0 <Control_Task+0x268>)
 8002512:	781a      	ldrb	r2, [r3, #0]
 8002514:	4b2f      	ldr	r3, [pc, #188]	; (80025d4 <Control_Task+0x29c>)
 8002516:	701a      	strb	r2, [r3, #0]
		str[2]=pos[NEXT];
 8002518:	4b21      	ldr	r3, [pc, #132]	; (80025a0 <Control_Task+0x268>)
 800251a:	785a      	ldrb	r2, [r3, #1]
 800251c:	4b2d      	ldr	r3, [pc, #180]	; (80025d4 <Control_Task+0x29c>)
 800251e:	709a      	strb	r2, [r3, #2]
		HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 2);
 8002520:	482c      	ldr	r0, [pc, #176]	; (80025d4 <Control_Task+0x29c>)
 8002522:	f7fd fe75 	bl	8000210 <strlen>
 8002526:	4603      	mov	r3, r0
 8002528:	b29a      	uxth	r2, r3
 800252a:	2302      	movs	r3, #2
 800252c:	4929      	ldr	r1, [pc, #164]	; (80025d4 <Control_Task+0x29c>)
 800252e:	68f8      	ldr	r0, [r7, #12]
 8002530:	f008 fda1 	bl	800b076 <HAL_UART_Transmit>

		if(Cross_Collision(pos[MY], pos[NEXT]))
 8002534:	4b1a      	ldr	r3, [pc, #104]	; (80025a0 <Control_Task+0x268>)
 8002536:	781b      	ldrb	r3, [r3, #0]
 8002538:	4a19      	ldr	r2, [pc, #100]	; (80025a0 <Control_Task+0x268>)
 800253a:	7852      	ldrb	r2, [r2, #1]
 800253c:	4611      	mov	r1, r2
 800253e:	4618      	mov	r0, r3
 8002540:	f000 fcf4 	bl	8002f2c <Cross_Collision>
 8002544:	4603      	mov	r3, r0
 8002546:	2b00      	cmp	r3, #0
 8002548:	d00b      	beq.n	8002562 <Control_Task+0x22a>
		{
			control_task_state = WAIT;
 800254a:	4b23      	ldr	r3, [pc, #140]	; (80025d8 <Control_Task+0x2a0>)
 800254c:	2205      	movs	r2, #5
 800254e:	701a      	strb	r2, [r3, #0]
			t_stamp=tick;
 8002550:	4a22      	ldr	r2, [pc, #136]	; (80025dc <Control_Task+0x2a4>)
 8002552:	687b      	ldr	r3, [r7, #4]
 8002554:	6013      	str	r3, [r2, #0]
			LED_G(1);
 8002556:	2200      	movs	r2, #0
 8002558:	2102      	movs	r1, #2
 800255a:	4818      	ldr	r0, [pc, #96]	; (80025bc <Control_Task+0x284>)
 800255c:	f006 f838 	bl	80085d0 <HAL_GPIO_WritePin>
 8002560:	e002      	b.n	8002568 <Control_Task+0x230>
		}
		else control_task_state = NEIGHBOUR1;
 8002562:	4b1d      	ldr	r3, [pc, #116]	; (80025d8 <Control_Task+0x2a0>)
 8002564:	2200      	movs	r2, #0
 8002566:	701a      	strb	r2, [r3, #0]

		pos[MY]=pos[NEXT];
 8002568:	4b0d      	ldr	r3, [pc, #52]	; (80025a0 <Control_Task+0x268>)
 800256a:	785a      	ldrb	r2, [r3, #1]
 800256c:	4b0c      	ldr	r3, [pc, #48]	; (80025a0 <Control_Task+0x268>)
 800256e:	701a      	strb	r2, [r3, #0]
		path=nextPath;
 8002570:	4b1b      	ldr	r3, [pc, #108]	; (80025e0 <Control_Task+0x2a8>)
 8002572:	781a      	ldrb	r2, [r3, #0]
 8002574:	4b1b      	ldr	r3, [pc, #108]	; (80025e4 <Control_Task+0x2ac>)
 8002576:	701a      	strb	r2, [r3, #0]
		dir[MY]=dir[NEXT];
 8002578:	4b1b      	ldr	r3, [pc, #108]	; (80025e8 <Control_Task+0x2b0>)
 800257a:	785a      	ldrb	r2, [r3, #1]
 800257c:	4b1a      	ldr	r3, [pc, #104]	; (80025e8 <Control_Task+0x2b0>)
 800257e:	701a      	strb	r2, [r3, #0]
		orientation=nextOri;//FORWARD
 8002580:	4b1a      	ldr	r3, [pc, #104]	; (80025ec <Control_Task+0x2b4>)
 8002582:	781a      	ldrb	r2, [r3, #0]
 8002584:	4b1a      	ldr	r3, [pc, #104]	; (80025f0 <Control_Task+0x2b8>)
 8002586:	701a      	strb	r2, [r3, #0]

		nodeDetected=0;
 8002588:	4b0b      	ldr	r3, [pc, #44]	; (80025b8 <Control_Task+0x280>)
 800258a:	2200      	movs	r2, #0
 800258c:	701a      	strb	r2, [r3, #0]
		return;
 800258e:	e260      	b.n	8002a52 <Control_Task+0x71a>
 8002590:	00000000 	.word	0x00000000
 8002594:	40c38800 	.word	0x40c38800
 8002598:	200005d8 	.word	0x200005d8
 800259c:	20000296 	.word	0x20000296
 80025a0:	20000000 	.word	0x20000000
 80025a4:	200002b8 	.word	0x200002b8
 80025a8:	200005dc 	.word	0x200005dc
 80025ac:	200005e0 	.word	0x200005e0
 80025b0:	2000061c 	.word	0x2000061c
 80025b4:	20000004 	.word	0x20000004
 80025b8:	200002a5 	.word	0x200002a5
 80025bc:	40020400 	.word	0x40020400
 80025c0:	200005e4 	.word	0x200005e4
 80025c4:	200002a8 	.word	0x200002a8
 80025c8:	200002a7 	.word	0x200002a7
 80025cc:	20000008 	.word	0x20000008
 80025d0:	08010598 	.word	0x08010598
 80025d4:	200005e8 	.word	0x200005e8
 80025d8:	200005fc 	.word	0x200005fc
 80025dc:	20000600 	.word	0x20000600
 80025e0:	20000604 	.word	0x20000604
 80025e4:	200002a6 	.word	0x200002a6
 80025e8:	2000000c 	.word	0x2000000c
 80025ec:	20000605 	.word	0x20000605
 80025f0:	200002a4 	.word	0x200002a4
	}

	if(thunderboardFlag)//ha új kalózpozíció jött a TB-től ujrakezdjük a számolást (első szomszéd vizsgálata jön)
 80025f4:	4b9a      	ldr	r3, [pc, #616]	; (8002860 <Control_Task+0x528>)
 80025f6:	781b      	ldrb	r3, [r3, #0]
 80025f8:	b2db      	uxtb	r3, r3
 80025fa:	2b00      	cmp	r3, #0
 80025fc:	d04b      	beq.n	8002696 <Control_Task+0x35e>
	{
		if(piratePos_prev[1]!=piratePos[1] && !laneChange)//a kalóz átment egy Node-on
 80025fe:	4b99      	ldr	r3, [pc, #612]	; (8002864 <Control_Task+0x52c>)
 8002600:	785a      	ldrb	r2, [r3, #1]
 8002602:	4b99      	ldr	r3, [pc, #612]	; (8002868 <Control_Task+0x530>)
 8002604:	785b      	ldrb	r3, [r3, #1]
 8002606:	429a      	cmp	r2, r3
 8002608:	d02b      	beq.n	8002662 <Control_Task+0x32a>
 800260a:	4b98      	ldr	r3, [pc, #608]	; (800286c <Control_Task+0x534>)
 800260c:	781b      	ldrb	r3, [r3, #0]
 800260e:	2b00      	cmp	r3, #0
 8002610:	d127      	bne.n	8002662 <Control_Task+0x32a>
		{
			if(N(piratePos[0]).worth > 0)
 8002612:	4b95      	ldr	r3, [pc, #596]	; (8002868 <Control_Task+0x530>)
 8002614:	781b      	ldrb	r3, [r3, #0]
 8002616:	3b41      	subs	r3, #65	; 0x41
 8002618:	4a95      	ldr	r2, [pc, #596]	; (8002870 <Control_Task+0x538>)
 800261a:	015b      	lsls	r3, r3, #5
 800261c:	4413      	add	r3, r2
 800261e:	3304      	adds	r3, #4
 8002620:	681b      	ldr	r3, [r3, #0]
 8002622:	2b00      	cmp	r3, #0
 8002624:	dd14      	ble.n	8002650 <Control_Task+0x318>
			{
				N(piratePos[0]).worth--; //az a node már kevesebbet ér
 8002626:	4b90      	ldr	r3, [pc, #576]	; (8002868 <Control_Task+0x530>)
 8002628:	781b      	ldrb	r3, [r3, #0]
 800262a:	3b41      	subs	r3, #65	; 0x41
 800262c:	4990      	ldr	r1, [pc, #576]	; (8002870 <Control_Task+0x538>)
 800262e:	015a      	lsls	r2, r3, #5
 8002630:	440a      	add	r2, r1
 8002632:	3204      	adds	r2, #4
 8002634:	6812      	ldr	r2, [r2, #0]
 8002636:	3a01      	subs	r2, #1
 8002638:	498d      	ldr	r1, [pc, #564]	; (8002870 <Control_Task+0x538>)
 800263a:	015b      	lsls	r3, r3, #5
 800263c:	440b      	add	r3, r1
 800263e:	3304      	adds	r3, #4
 8002640:	601a      	str	r2, [r3, #0]
				collectedPoints ++;
 8002642:	4b8c      	ldr	r3, [pc, #560]	; (8002874 <Control_Task+0x53c>)
 8002644:	781b      	ldrb	r3, [r3, #0]
 8002646:	3301      	adds	r3, #1
 8002648:	b2da      	uxtb	r2, r3
 800264a:	4b8a      	ldr	r3, [pc, #552]	; (8002874 <Control_Task+0x53c>)
 800264c:	701a      	strb	r2, [r3, #0]
 800264e:	e008      	b.n	8002662 <Control_Task+0x32a>
			}
			else N(piratePos[0]).worth=0;
 8002650:	4b85      	ldr	r3, [pc, #532]	; (8002868 <Control_Task+0x530>)
 8002652:	781b      	ldrb	r3, [r3, #0]
 8002654:	3b41      	subs	r3, #65	; 0x41
 8002656:	4a86      	ldr	r2, [pc, #536]	; (8002870 <Control_Task+0x538>)
 8002658:	015b      	lsls	r3, r3, #5
 800265a:	4413      	add	r3, r2
 800265c:	3304      	adds	r3, #4
 800265e:	2200      	movs	r2, #0
 8002660:	601a      	str	r2, [r3, #0]
		}
		if(control_task_state!=WAIT)//wait állapotból nem tud mindekt kibillenteni az új kalózrobot pozíció
 8002662:	4b85      	ldr	r3, [pc, #532]	; (8002878 <Control_Task+0x540>)
 8002664:	781b      	ldrb	r3, [r3, #0]
 8002666:	2b05      	cmp	r3, #5
 8002668:	d002      	beq.n	8002670 <Control_Task+0x338>
			control_task_state=NEIGHBOUR1;//kezdjük előrröl a fitneszérték számítást az 1. szomszédtól
 800266a:	4b83      	ldr	r3, [pc, #524]	; (8002878 <Control_Task+0x540>)
 800266c:	2200      	movs	r2, #0
 800266e:	701a      	strb	r2, [r3, #0]

		piratePos_prev[0]=piratePos[0];//előző kalozpozíció frissítése
 8002670:	4b7d      	ldr	r3, [pc, #500]	; (8002868 <Control_Task+0x530>)
 8002672:	781a      	ldrb	r2, [r3, #0]
 8002674:	4b7b      	ldr	r3, [pc, #492]	; (8002864 <Control_Task+0x52c>)
 8002676:	701a      	strb	r2, [r3, #0]
		piratePos_prev[1]=piratePos[1];
 8002678:	4b7b      	ldr	r3, [pc, #492]	; (8002868 <Control_Task+0x530>)
 800267a:	785a      	ldrb	r2, [r3, #1]
 800267c:	4b79      	ldr	r3, [pc, #484]	; (8002864 <Control_Task+0x52c>)
 800267e:	705a      	strb	r2, [r3, #1]
		piratePos_prev[2]=piratePos[2];
 8002680:	4b79      	ldr	r3, [pc, #484]	; (8002868 <Control_Task+0x530>)
 8002682:	789a      	ldrb	r2, [r3, #2]
 8002684:	4b77      	ldr	r3, [pc, #476]	; (8002864 <Control_Task+0x52c>)
 8002686:	709a      	strb	r2, [r3, #2]
		piratePos_prev[3]=piratePos[3];
 8002688:	4b77      	ldr	r3, [pc, #476]	; (8002868 <Control_Task+0x530>)
 800268a:	78da      	ldrb	r2, [r3, #3]
 800268c:	4b75      	ldr	r3, [pc, #468]	; (8002864 <Control_Task+0x52c>)
 800268e:	70da      	strb	r2, [r3, #3]

		thunderboardFlag=0; //várjuk az újabb kalózrobot pozíciókat a thunderboardtól
 8002690:	4b73      	ldr	r3, [pc, #460]	; (8002860 <Control_Task+0x528>)
 8002692:	2200      	movs	r2, #0
 8002694:	701a      	strb	r2, [r3, #0]
	str[15]=control_task_state+0x30;
	HAL_UART_Transmit(huart_debugg, (uint8_t*)str, strlen(str), 2);
#endif

	/******************LEGJOBB SZOMSZÉD KIVÁLASZTÁSA (első 4 állapot)******************/
	if(control_task_state < EVALUATE)//1.szomszéd/2.szomszéd/3.szomszéd/4.szomszéd
 8002696:	4b78      	ldr	r3, [pc, #480]	; (8002878 <Control_Task+0x540>)
 8002698:	781b      	ldrb	r3, [r3, #0]
 800269a:	2b03      	cmp	r3, #3
 800269c:	f200 8127 	bhi.w	80028ee <Control_Task+0x5b6>
	{
		if(control_task_state==NEIGHBOUR1)
 80026a0:	4b75      	ldr	r3, [pc, #468]	; (8002878 <Control_Task+0x540>)
 80026a2:	781b      	ldrb	r3, [r3, #0]
 80026a4:	2b00      	cmp	r3, #0
 80026a6:	d102      	bne.n	80026ae <Control_Task+0x376>
		{
			bestFitness=-200.0;//az előző számolás legjob fitneszértéke volt még benne
 80026a8:	4b74      	ldr	r3, [pc, #464]	; (800287c <Control_Task+0x544>)
 80026aa:	4a75      	ldr	r2, [pc, #468]	; (8002880 <Control_Task+0x548>)
 80026ac:	601a      	str	r2, [r3, #0]
		}
		nID=N(pos[MY]).neighbours[control_task_state]; //a vizsgált 1.rendű szomszéd azonosítója
 80026ae:	4b75      	ldr	r3, [pc, #468]	; (8002884 <Control_Task+0x54c>)
 80026b0:	781b      	ldrb	r3, [r3, #0]
 80026b2:	3b41      	subs	r3, #65	; 0x41
 80026b4:	4a70      	ldr	r2, [pc, #448]	; (8002878 <Control_Task+0x540>)
 80026b6:	7812      	ldrb	r2, [r2, #0]
 80026b8:	4611      	mov	r1, r2
 80026ba:	4a6d      	ldr	r2, [pc, #436]	; (8002870 <Control_Task+0x538>)
 80026bc:	015b      	lsls	r3, r3, #5
 80026be:	4413      	add	r3, r2
 80026c0:	440b      	add	r3, r1
 80026c2:	330c      	adds	r3, #12
 80026c4:	781b      	ldrb	r3, [r3, #0]
 80026c6:	76fb      	strb	r3, [r7, #27]
		if(nID) //ha létezik a szomszéd
 80026c8:	7efb      	ldrb	r3, [r7, #27]
 80026ca:	2b00      	cmp	r3, #0
 80026cc:	f000 80e6 	beq.w	800289c <Control_Task+0x564>
		{
			fitness[control_task_state]=(float)N(nID).worth; //fitneszérték 1.rendű szomszéd alapján
 80026d0:	7efb      	ldrb	r3, [r7, #27]
 80026d2:	3b41      	subs	r3, #65	; 0x41
 80026d4:	4a66      	ldr	r2, [pc, #408]	; (8002870 <Control_Task+0x538>)
 80026d6:	015b      	lsls	r3, r3, #5
 80026d8:	4413      	add	r3, r2
 80026da:	3304      	adds	r3, #4
 80026dc:	681a      	ldr	r2, [r3, #0]
 80026de:	4b66      	ldr	r3, [pc, #408]	; (8002878 <Control_Task+0x540>)
 80026e0:	781b      	ldrb	r3, [r3, #0]
 80026e2:	ee07 2a90 	vmov	s15, r2
 80026e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80026ea:	4a67      	ldr	r2, [pc, #412]	; (8002888 <Control_Task+0x550>)
 80026ec:	009b      	lsls	r3, r3, #2
 80026ee:	4413      	add	r3, r2
 80026f0:	edc3 7a00 	vstr	s15, [r3]
			//kalozrobot hatása az 1.rendű szomszéd esetén
			if(piratePos[1]==nID) fitness[control_task_state] -= 80/*P*/;//ha a kalóz is ebbe az 1.rendű tart éppen akkor kerüljük el az ütközést
 80026f4:	4b5c      	ldr	r3, [pc, #368]	; (8002868 <Control_Task+0x530>)
 80026f6:	785b      	ldrb	r3, [r3, #1]
 80026f8:	7efa      	ldrb	r2, [r7, #27]
 80026fa:	429a      	cmp	r2, r3
 80026fc:	d112      	bne.n	8002724 <Control_Task+0x3ec>
 80026fe:	4b5e      	ldr	r3, [pc, #376]	; (8002878 <Control_Task+0x540>)
 8002700:	781b      	ldrb	r3, [r3, #0]
 8002702:	4a61      	ldr	r2, [pc, #388]	; (8002888 <Control_Task+0x550>)
 8002704:	009b      	lsls	r3, r3, #2
 8002706:	4413      	add	r3, r2
 8002708:	edd3 7a00 	vldr	s15, [r3]
 800270c:	4b5a      	ldr	r3, [pc, #360]	; (8002878 <Control_Task+0x540>)
 800270e:	781b      	ldrb	r3, [r3, #0]
 8002710:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 800288c <Control_Task+0x554>
 8002714:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002718:	4a5b      	ldr	r2, [pc, #364]	; (8002888 <Control_Task+0x550>)
 800271a:	009b      	lsls	r3, r3, #2
 800271c:	4413      	add	r3, r2
 800271e:	edc3 7a00 	vstr	s15, [r3]
 8002722:	e016      	b.n	8002752 <Control_Task+0x41a>
			else if(piratePos[2]==nID) fitness[control_task_state] -= 60/*P*/;//ha még csak tervezi, hogy odamegy, akkor is kerüljük a pontot
 8002724:	4b50      	ldr	r3, [pc, #320]	; (8002868 <Control_Task+0x530>)
 8002726:	789b      	ldrb	r3, [r3, #2]
 8002728:	7efa      	ldrb	r2, [r7, #27]
 800272a:	429a      	cmp	r2, r3
 800272c:	d111      	bne.n	8002752 <Control_Task+0x41a>
 800272e:	4b52      	ldr	r3, [pc, #328]	; (8002878 <Control_Task+0x540>)
 8002730:	781b      	ldrb	r3, [r3, #0]
 8002732:	4a55      	ldr	r2, [pc, #340]	; (8002888 <Control_Task+0x550>)
 8002734:	009b      	lsls	r3, r3, #2
 8002736:	4413      	add	r3, r2
 8002738:	edd3 7a00 	vldr	s15, [r3]
 800273c:	4b4e      	ldr	r3, [pc, #312]	; (8002878 <Control_Task+0x540>)
 800273e:	781b      	ldrb	r3, [r3, #0]
 8002740:	ed9f 7a53 	vldr	s14, [pc, #332]	; 8002890 <Control_Task+0x558>
 8002744:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002748:	4a4f      	ldr	r2, [pc, #316]	; (8002888 <Control_Task+0x550>)
 800274a:	009b      	lsls	r3, r3, #2
 800274c:	4413      	add	r3, r2
 800274e:	edc3 7a00 	vstr	s15, [r3]

			///////////////////////////////////////////////////////////////////////////////
			int i;
			uint8_t nnID;
			float nnFit;
			for(i=0;i<4;i++)//2.rednű szomszédok
 8002752:	2300      	movs	r3, #0
 8002754:	61fb      	str	r3, [r7, #28]
 8002756:	e060      	b.n	800281a <Control_Task+0x4e2>
			{
				nnFit=0.0;
 8002758:	f04f 0300 	mov.w	r3, #0
 800275c:	617b      	str	r3, [r7, #20]
				nnID=N(nID).neighbours[i]; //2.rednű szomszéd ID-ja
 800275e:	7efb      	ldrb	r3, [r7, #27]
 8002760:	3b41      	subs	r3, #65	; 0x41
 8002762:	4a43      	ldr	r2, [pc, #268]	; (8002870 <Control_Task+0x538>)
 8002764:	015b      	lsls	r3, r3, #5
 8002766:	441a      	add	r2, r3
 8002768:	69fb      	ldr	r3, [r7, #28]
 800276a:	4413      	add	r3, r2
 800276c:	330c      	adds	r3, #12
 800276e:	781b      	ldrb	r3, [r3, #0]
 8002770:	74fb      	strb	r3, [r7, #19]
				if(nnID && nnID!=pos[MY])//ha létezik a 2.rendű szomszéd (és nem a myposition az)
 8002772:	7cfb      	ldrb	r3, [r7, #19]
 8002774:	2b00      	cmp	r3, #0
 8002776:	d04d      	beq.n	8002814 <Control_Task+0x4dc>
 8002778:	4b42      	ldr	r3, [pc, #264]	; (8002884 <Control_Task+0x54c>)
 800277a:	781b      	ldrb	r3, [r3, #0]
 800277c:	7cfa      	ldrb	r2, [r7, #19]
 800277e:	429a      	cmp	r2, r3
 8002780:	d048      	beq.n	8002814 <Control_Task+0x4dc>
				{
					////////////////////////////////////////////
					if((N(pos[MY]).directions[control_task_state]==1 && i<=NEIGHBOUR2) || (N(pos[MY]).directions[control_task_state]==2 && i>=NEIGHBOUR3))
 8002782:	4b40      	ldr	r3, [pc, #256]	; (8002884 <Control_Task+0x54c>)
 8002784:	781b      	ldrb	r3, [r3, #0]
 8002786:	3b41      	subs	r3, #65	; 0x41
 8002788:	4a3b      	ldr	r2, [pc, #236]	; (8002878 <Control_Task+0x540>)
 800278a:	7812      	ldrb	r2, [r2, #0]
 800278c:	4611      	mov	r1, r2
 800278e:	4a38      	ldr	r2, [pc, #224]	; (8002870 <Control_Task+0x538>)
 8002790:	015b      	lsls	r3, r3, #5
 8002792:	4413      	add	r3, r2
 8002794:	440b      	add	r3, r1
 8002796:	3310      	adds	r3, #16
 8002798:	781b      	ldrb	r3, [r3, #0]
 800279a:	2b01      	cmp	r3, #1
 800279c:	d102      	bne.n	80027a4 <Control_Task+0x46c>
 800279e:	69fb      	ldr	r3, [r7, #28]
 80027a0:	2b01      	cmp	r3, #1
 80027a2:	dd10      	ble.n	80027c6 <Control_Task+0x48e>
 80027a4:	4b37      	ldr	r3, [pc, #220]	; (8002884 <Control_Task+0x54c>)
 80027a6:	781b      	ldrb	r3, [r3, #0]
 80027a8:	3b41      	subs	r3, #65	; 0x41
 80027aa:	4a33      	ldr	r2, [pc, #204]	; (8002878 <Control_Task+0x540>)
 80027ac:	7812      	ldrb	r2, [r2, #0]
 80027ae:	4611      	mov	r1, r2
 80027b0:	4a2f      	ldr	r2, [pc, #188]	; (8002870 <Control_Task+0x538>)
 80027b2:	015b      	lsls	r3, r3, #5
 80027b4:	4413      	add	r3, r2
 80027b6:	440b      	add	r3, r1
 80027b8:	3310      	adds	r3, #16
 80027ba:	781b      	ldrb	r3, [r3, #0]
 80027bc:	2b02      	cmp	r3, #2
 80027be:	d129      	bne.n	8002814 <Control_Task+0x4dc>
 80027c0:	69fb      	ldr	r3, [r7, #28]
 80027c2:	2b01      	cmp	r3, #1
 80027c4:	dd26      	ble.n	8002814 <Control_Task+0x4dc>
					{
						nnFit += (float)N(nnID).worth;
 80027c6:	7cfb      	ldrb	r3, [r7, #19]
 80027c8:	3b41      	subs	r3, #65	; 0x41
 80027ca:	4a29      	ldr	r2, [pc, #164]	; (8002870 <Control_Task+0x538>)
 80027cc:	015b      	lsls	r3, r3, #5
 80027ce:	4413      	add	r3, r2
 80027d0:	3304      	adds	r3, #4
 80027d2:	681b      	ldr	r3, [r3, #0]
 80027d4:	ee07 3a90 	vmov	s15, r3
 80027d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80027dc:	ed97 7a05 	vldr	s14, [r7, #20]
 80027e0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80027e4:	edc7 7a05 	vstr	s15, [r7, #20]
						//if(piratePos[1]==nnID) nnFit -= 0.5/*P*/;//ha a kalóz is ebbe a pontba tart éppen akkor kerüljük el az ütközést
						//else if(piratePos[2]==nnID) fitness[control_task_state] -= 0.25/*P*/;//ha még csak tervezi, hogy odamegy, akkor se fogjuk tudni megelőnzi, mert mi 3 nodnyira vagyunk ő pedig csak 2
						//if(!lane_change)nnFit = nnFit * (float)DIST_AVG/N(nID).distance[i];//a 2.rendű szomszédhoz tartozó fitneszérték jobb ha az közelebb van az 1.rendű szomszédjához
						//ha a sávváltó szakaszt keressük akkor viszont nem díjazzuk a közelséget
						fitness[control_task_state] += nnFit/4/*P*/;
 80027e8:	4b23      	ldr	r3, [pc, #140]	; (8002878 <Control_Task+0x540>)
 80027ea:	781b      	ldrb	r3, [r3, #0]
 80027ec:	4a26      	ldr	r2, [pc, #152]	; (8002888 <Control_Task+0x550>)
 80027ee:	009b      	lsls	r3, r3, #2
 80027f0:	4413      	add	r3, r2
 80027f2:	ed93 7a00 	vldr	s14, [r3]
 80027f6:	edd7 6a05 	vldr	s13, [r7, #20]
 80027fa:	eeb1 6a00 	vmov.f32	s12, #16	; 0x40800000  4.0
 80027fe:	eec6 7a86 	vdiv.f32	s15, s13, s12
 8002802:	4b1d      	ldr	r3, [pc, #116]	; (8002878 <Control_Task+0x540>)
 8002804:	781b      	ldrb	r3, [r3, #0]
 8002806:	ee77 7a27 	vadd.f32	s15, s14, s15
 800280a:	4a1f      	ldr	r2, [pc, #124]	; (8002888 <Control_Task+0x550>)
 800280c:	009b      	lsls	r3, r3, #2
 800280e:	4413      	add	r3, r2
 8002810:	edc3 7a00 	vstr	s15, [r3]
			for(i=0;i<4;i++)//2.rednű szomszédok
 8002814:	69fb      	ldr	r3, [r7, #28]
 8002816:	3301      	adds	r3, #1
 8002818:	61fb      	str	r3, [r7, #28]
 800281a:	69fb      	ldr	r3, [r7, #28]
 800281c:	2b03      	cmp	r3, #3
 800281e:	dd9b      	ble.n	8002758 <Control_Task+0x420>

				}
			}
			//if(!lane_change) fitness[control_task_state] =fitness[control_task_state] * (float)DIST_AVG/N(pos[MY]).distance[control_task_state]; //minél közelebb van a szomszéd annál jobb
			//ha a sávváltó szakaszt keressük akkor viszont nem díjazzuk a közelséget
			if(control_task_state<=NEIGHBOUR2 && dir[MY]==2)
 8002820:	4b15      	ldr	r3, [pc, #84]	; (8002878 <Control_Task+0x540>)
 8002822:	781b      	ldrb	r3, [r3, #0]
 8002824:	2b01      	cmp	r3, #1
 8002826:	d80b      	bhi.n	8002840 <Control_Task+0x508>
 8002828:	4b1a      	ldr	r3, [pc, #104]	; (8002894 <Control_Task+0x55c>)
 800282a:	781b      	ldrb	r3, [r3, #0]
 800282c:	2b02      	cmp	r3, #2
 800282e:	d107      	bne.n	8002840 <Control_Task+0x508>
			{
				fitness[control_task_state]=-160;
 8002830:	4b11      	ldr	r3, [pc, #68]	; (8002878 <Control_Task+0x540>)
 8002832:	781b      	ldrb	r3, [r3, #0]
 8002834:	4a14      	ldr	r2, [pc, #80]	; (8002888 <Control_Task+0x550>)
 8002836:	009b      	lsls	r3, r3, #2
 8002838:	4413      	add	r3, r2
 800283a:	4a17      	ldr	r2, [pc, #92]	; (8002898 <Control_Task+0x560>)
 800283c:	601a      	str	r2, [r3, #0]
 800283e:	e034      	b.n	80028aa <Control_Task+0x572>
			}
			else if(control_task_state >= NEIGHBOUR3 && dir[MY]==1)
 8002840:	4b0d      	ldr	r3, [pc, #52]	; (8002878 <Control_Task+0x540>)
 8002842:	781b      	ldrb	r3, [r3, #0]
 8002844:	2b01      	cmp	r3, #1
 8002846:	d930      	bls.n	80028aa <Control_Task+0x572>
 8002848:	4b12      	ldr	r3, [pc, #72]	; (8002894 <Control_Task+0x55c>)
 800284a:	781b      	ldrb	r3, [r3, #0]
 800284c:	2b01      	cmp	r3, #1
 800284e:	d12c      	bne.n	80028aa <Control_Task+0x572>
			{
				fitness[control_task_state]=-160;
 8002850:	4b09      	ldr	r3, [pc, #36]	; (8002878 <Control_Task+0x540>)
 8002852:	781b      	ldrb	r3, [r3, #0]
 8002854:	4a0c      	ldr	r2, [pc, #48]	; (8002888 <Control_Task+0x550>)
 8002856:	009b      	lsls	r3, r3, #2
 8002858:	4413      	add	r3, r2
 800285a:	4a0f      	ldr	r2, [pc, #60]	; (8002898 <Control_Task+0x560>)
 800285c:	601a      	str	r2, [r3, #0]
 800285e:	e024      	b.n	80028aa <Control_Task+0x572>
 8002860:	200002aa 	.word	0x200002aa
 8002864:	20000010 	.word	0x20000010
 8002868:	200002b4 	.word	0x200002b4
 800286c:	200002a8 	.word	0x200002a8
 8002870:	200002b8 	.word	0x200002b8
 8002874:	200002a7 	.word	0x200002a7
 8002878:	200005fc 	.word	0x200005fc
 800287c:	20000008 	.word	0x20000008
 8002880:	c3480000 	.word	0xc3480000
 8002884:	20000000 	.word	0x20000000
 8002888:	20000608 	.word	0x20000608
 800288c:	42a00000 	.word	0x42a00000
 8002890:	42700000 	.word	0x42700000
 8002894:	2000000c 	.word	0x2000000c
 8002898:	c3200000 	.word	0xc3200000
			}
		}
		else fitness[control_task_state]=-150.0;//ha nem létezik a szomszéd erre tuti ne menjünk
 800289c:	4b6f      	ldr	r3, [pc, #444]	; (8002a5c <Control_Task+0x724>)
 800289e:	781b      	ldrb	r3, [r3, #0]
 80028a0:	4a6f      	ldr	r2, [pc, #444]	; (8002a60 <Control_Task+0x728>)
 80028a2:	009b      	lsls	r3, r3, #2
 80028a4:	4413      	add	r3, r2
 80028a6:	4a6f      	ldr	r2, [pc, #444]	; (8002a64 <Control_Task+0x72c>)
 80028a8:	601a      	str	r2, [r3, #0]
		//uint16_t tmp= __HAL_TIM_GET_COUNTER(htim_rand)%2;
		if(fitness[control_task_state]>=bestFitness) //ha ez a fitness jobb mint az eddigi legjobb, akkor mostantól ez a legjobb
 80028aa:	4b6c      	ldr	r3, [pc, #432]	; (8002a5c <Control_Task+0x724>)
 80028ac:	781b      	ldrb	r3, [r3, #0]
 80028ae:	4a6c      	ldr	r2, [pc, #432]	; (8002a60 <Control_Task+0x728>)
 80028b0:	009b      	lsls	r3, r3, #2
 80028b2:	4413      	add	r3, r2
 80028b4:	ed93 7a00 	vldr	s14, [r3]
 80028b8:	4b6b      	ldr	r3, [pc, #428]	; (8002a68 <Control_Task+0x730>)
 80028ba:	edd3 7a00 	vldr	s15, [r3]
 80028be:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80028c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80028c6:	db0b      	blt.n	80028e0 <Control_Task+0x5a8>
		{
			bestFitness=fitness[control_task_state];
 80028c8:	4b64      	ldr	r3, [pc, #400]	; (8002a5c <Control_Task+0x724>)
 80028ca:	781b      	ldrb	r3, [r3, #0]
 80028cc:	4a64      	ldr	r2, [pc, #400]	; (8002a60 <Control_Task+0x728>)
 80028ce:	009b      	lsls	r3, r3, #2
 80028d0:	4413      	add	r3, r2
 80028d2:	681b      	ldr	r3, [r3, #0]
 80028d4:	4a64      	ldr	r2, [pc, #400]	; (8002a68 <Control_Task+0x730>)
 80028d6:	6013      	str	r3, [r2, #0]
			bestNb[TMP] = control_task_state;//ez az egy érték amivel a task első 4 (fitnesszámoló) álapota kommunikál a kiértékelő álapottal
 80028d8:	4b60      	ldr	r3, [pc, #384]	; (8002a5c <Control_Task+0x724>)
 80028da:	781a      	ldrb	r2, [r3, #0]
 80028dc:	4b63      	ldr	r3, [pc, #396]	; (8002a6c <Control_Task+0x734>)
 80028de:	701a      	strb	r2, [r3, #0]
		}
		control_task_state++;
 80028e0:	4b5e      	ldr	r3, [pc, #376]	; (8002a5c <Control_Task+0x724>)
 80028e2:	781b      	ldrb	r3, [r3, #0]
 80028e4:	3301      	adds	r3, #1
 80028e6:	b2da      	uxtb	r2, r3
 80028e8:	4b5c      	ldr	r3, [pc, #368]	; (8002a5c <Control_Task+0x724>)
 80028ea:	701a      	strb	r2, [r3, #0]
		return; //ha csak valamelyik szomszédot vizsgáltuk még akkor eddig tartott ez a task futás, itt kilépünk
 80028ec:	e0b1      	b.n	8002a52 <Control_Task+0x71a>
	}
	/**************************************************************************************/
	//ide csak akkor jutunk el ha control_task_state>NEIGHBOUR4

	/**********************KIÉRTÉKELÉS (control_task_state=EVALUATE ->5.állapot)**********************/
	else if(control_task_state==EVALUATE)
 80028ee:	4b5b      	ldr	r3, [pc, #364]	; (8002a5c <Control_Task+0x724>)
 80028f0:	781b      	ldrb	r3, [r3, #0]
 80028f2:	2b04      	cmp	r3, #4
 80028f4:	f040 808a 	bne.w	8002a0c <Control_Task+0x6d4>
	{
		if(bestFitness==0.0 && fitness[N(pos[MY]).middle]==0.0) bestNb[TMP]=N(pos[MY]).middle;
 80028f8:	4b5b      	ldr	r3, [pc, #364]	; (8002a68 <Control_Task+0x730>)
 80028fa:	edd3 7a00 	vldr	s15, [r3]
 80028fe:	eef5 7a40 	vcmp.f32	s15, #0.0
 8002902:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002906:	d11b      	bne.n	8002940 <Control_Task+0x608>
 8002908:	4b59      	ldr	r3, [pc, #356]	; (8002a70 <Control_Task+0x738>)
 800290a:	781b      	ldrb	r3, [r3, #0]
 800290c:	3b41      	subs	r3, #65	; 0x41
 800290e:	4a59      	ldr	r2, [pc, #356]	; (8002a74 <Control_Task+0x73c>)
 8002910:	015b      	lsls	r3, r3, #5
 8002912:	4413      	add	r3, r2
 8002914:	331c      	adds	r3, #28
 8002916:	781b      	ldrb	r3, [r3, #0]
 8002918:	4a51      	ldr	r2, [pc, #324]	; (8002a60 <Control_Task+0x728>)
 800291a:	009b      	lsls	r3, r3, #2
 800291c:	4413      	add	r3, r2
 800291e:	edd3 7a00 	vldr	s15, [r3]
 8002922:	eef5 7a40 	vcmp.f32	s15, #0.0
 8002926:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800292a:	d109      	bne.n	8002940 <Control_Task+0x608>
 800292c:	4b50      	ldr	r3, [pc, #320]	; (8002a70 <Control_Task+0x738>)
 800292e:	781b      	ldrb	r3, [r3, #0]
 8002930:	3b41      	subs	r3, #65	; 0x41
 8002932:	4a50      	ldr	r2, [pc, #320]	; (8002a74 <Control_Task+0x73c>)
 8002934:	015b      	lsls	r3, r3, #5
 8002936:	4413      	add	r3, r2
 8002938:	331c      	adds	r3, #28
 800293a:	781a      	ldrb	r2, [r3, #0]
 800293c:	4b4b      	ldr	r3, [pc, #300]	; (8002a6c <Control_Task+0x734>)
 800293e:	701a      	strb	r2, [r3, #0]
		bestNb[NEXT]=bestNb[TMP];
 8002940:	4b4a      	ldr	r3, [pc, #296]	; (8002a6c <Control_Task+0x734>)
 8002942:	781a      	ldrb	r2, [r3, #0]
 8002944:	4b49      	ldr	r3, [pc, #292]	; (8002a6c <Control_Task+0x734>)
 8002946:	705a      	strb	r2, [r3, #1]
		pos[NEXT]=N(pos[MY]).neighbours[bestNb[NEXT]];//a következő poziciónk a legjobb szomszéd lesz
 8002948:	4b49      	ldr	r3, [pc, #292]	; (8002a70 <Control_Task+0x738>)
 800294a:	781b      	ldrb	r3, [r3, #0]
 800294c:	3b41      	subs	r3, #65	; 0x41
 800294e:	4a47      	ldr	r2, [pc, #284]	; (8002a6c <Control_Task+0x734>)
 8002950:	7852      	ldrb	r2, [r2, #1]
 8002952:	4611      	mov	r1, r2
 8002954:	4a47      	ldr	r2, [pc, #284]	; (8002a74 <Control_Task+0x73c>)
 8002956:	015b      	lsls	r3, r3, #5
 8002958:	4413      	add	r3, r2
 800295a:	440b      	add	r3, r1
 800295c:	330c      	adds	r3, #12
 800295e:	781a      	ldrb	r2, [r3, #0]
 8002960:	4b43      	ldr	r3, [pc, #268]	; (8002a70 <Control_Task+0x738>)
 8002962:	705a      	strb	r2, [r3, #1]
		dir[NEXT]=N(pos[MY]).directions[bestNb[NEXT]];//már most tudjuk, mi lesz az irányunk, ha odaértünk
 8002964:	4b42      	ldr	r3, [pc, #264]	; (8002a70 <Control_Task+0x738>)
 8002966:	781b      	ldrb	r3, [r3, #0]
 8002968:	3b41      	subs	r3, #65	; 0x41
 800296a:	4a40      	ldr	r2, [pc, #256]	; (8002a6c <Control_Task+0x734>)
 800296c:	7852      	ldrb	r2, [r2, #1]
 800296e:	4611      	mov	r1, r2
 8002970:	4a40      	ldr	r2, [pc, #256]	; (8002a74 <Control_Task+0x73c>)
 8002972:	015b      	lsls	r3, r3, #5
 8002974:	4413      	add	r3, r2
 8002976:	440b      	add	r3, r1
 8002978:	3310      	adds	r3, #16
 800297a:	781a      	ldrb	r2, [r3, #0]
 800297c:	4b3e      	ldr	r3, [pc, #248]	; (8002a78 <Control_Task+0x740>)
 800297e:	705a      	strb	r2, [r3, #1]

		//a kocsi az egyik node-ból átmegy egy másikba-> az irányok segítségével meghatározzu az új orientationt
		if(bestNb[NEXT] <= NEIGHBOUR2) //ha balra/le kell majd mennünk a nextPosition -höz
 8002980:	4b3a      	ldr	r3, [pc, #232]	; (8002a6c <Control_Task+0x734>)
 8002982:	785b      	ldrb	r3, [r3, #1]
 8002984:	2b01      	cmp	r3, #1
 8002986:	d813      	bhi.n	80029b0 <Control_Task+0x678>
		{
			if(dir[MY]==2)//és eddig jobbra/fel mentünk,
 8002988:	4b3b      	ldr	r3, [pc, #236]	; (8002a78 <Control_Task+0x740>)
 800298a:	781b      	ldrb	r3, [r3, #0]
 800298c:	2b02      	cmp	r3, #2
 800298e:	d10a      	bne.n	80029a6 <Control_Task+0x66e>
				nextOri = !orientation;//akkor most orientációt kell váltanunk
 8002990:	4b3a      	ldr	r3, [pc, #232]	; (8002a7c <Control_Task+0x744>)
 8002992:	781b      	ldrb	r3, [r3, #0]
 8002994:	2b00      	cmp	r3, #0
 8002996:	bf0c      	ite	eq
 8002998:	2301      	moveq	r3, #1
 800299a:	2300      	movne	r3, #0
 800299c:	b2db      	uxtb	r3, r3
 800299e:	461a      	mov	r2, r3
 80029a0:	4b37      	ldr	r3, [pc, #220]	; (8002a80 <Control_Task+0x748>)
 80029a2:	701a      	strb	r2, [r3, #0]
 80029a4:	e017      	b.n	80029d6 <Control_Task+0x69e>
			else nextOri = orientation; //különben nem kell
 80029a6:	4b35      	ldr	r3, [pc, #212]	; (8002a7c <Control_Task+0x744>)
 80029a8:	781a      	ldrb	r2, [r3, #0]
 80029aa:	4b35      	ldr	r3, [pc, #212]	; (8002a80 <Control_Task+0x748>)
 80029ac:	701a      	strb	r2, [r3, #0]
 80029ae:	e012      	b.n	80029d6 <Control_Task+0x69e>
		}
		else //ha jobbra kell majd mennünk
		{
			if(dir[MY]==1)//és eddig jobbra/fel mentünk,
 80029b0:	4b31      	ldr	r3, [pc, #196]	; (8002a78 <Control_Task+0x740>)
 80029b2:	781b      	ldrb	r3, [r3, #0]
 80029b4:	2b01      	cmp	r3, #1
 80029b6:	d10a      	bne.n	80029ce <Control_Task+0x696>
				nextOri =! orientation;//akkor most irányt kell váltanunk
 80029b8:	4b30      	ldr	r3, [pc, #192]	; (8002a7c <Control_Task+0x744>)
 80029ba:	781b      	ldrb	r3, [r3, #0]
 80029bc:	2b00      	cmp	r3, #0
 80029be:	bf0c      	ite	eq
 80029c0:	2301      	moveq	r3, #1
 80029c2:	2300      	movne	r3, #0
 80029c4:	b2db      	uxtb	r3, r3
 80029c6:	461a      	mov	r2, r3
 80029c8:	4b2d      	ldr	r3, [pc, #180]	; (8002a80 <Control_Task+0x748>)
 80029ca:	701a      	strb	r2, [r3, #0]
 80029cc:	e003      	b.n	80029d6 <Control_Task+0x69e>
			else nextOri = orientation; //különben nem kell
 80029ce:	4b2b      	ldr	r3, [pc, #172]	; (8002a7c <Control_Task+0x744>)
 80029d0:	781a      	ldrb	r2, [r3, #0]
 80029d2:	4b2b      	ldr	r3, [pc, #172]	; (8002a80 <Control_Task+0x748>)
 80029d4:	701a      	strb	r2, [r3, #0]
		}

		//path kiválasztás -> az orientációt mostmár tudjuk (tolatás/előre), már csak az ösvény kell kivákasztani, hogy a megfelelő szomszédhoz jussunk

		if(bestNb[NEXT]==NEIGHBOUR1 || bestNb[NEXT]==NEIGHBOUR3)nextPath=LEFT;
 80029d6:	4b25      	ldr	r3, [pc, #148]	; (8002a6c <Control_Task+0x734>)
 80029d8:	785b      	ldrb	r3, [r3, #1]
 80029da:	2b00      	cmp	r3, #0
 80029dc:	d003      	beq.n	80029e6 <Control_Task+0x6ae>
 80029de:	4b23      	ldr	r3, [pc, #140]	; (8002a6c <Control_Task+0x734>)
 80029e0:	785b      	ldrb	r3, [r3, #1]
 80029e2:	2b02      	cmp	r3, #2
 80029e4:	d103      	bne.n	80029ee <Control_Task+0x6b6>
 80029e6:	4b27      	ldr	r3, [pc, #156]	; (8002a84 <Control_Task+0x74c>)
 80029e8:	2200      	movs	r2, #0
 80029ea:	701a      	strb	r2, [r3, #0]
 80029ec:	e00a      	b.n	8002a04 <Control_Task+0x6cc>
		else if(bestNb[NEXT]==NEIGHBOUR2 || bestNb[NEXT]==NEIGHBOUR4)nextPath=RIGHT;
 80029ee:	4b1f      	ldr	r3, [pc, #124]	; (8002a6c <Control_Task+0x734>)
 80029f0:	785b      	ldrb	r3, [r3, #1]
 80029f2:	2b01      	cmp	r3, #1
 80029f4:	d003      	beq.n	80029fe <Control_Task+0x6c6>
 80029f6:	4b1d      	ldr	r3, [pc, #116]	; (8002a6c <Control_Task+0x734>)
 80029f8:	785b      	ldrb	r3, [r3, #1]
 80029fa:	2b03      	cmp	r3, #3
 80029fc:	d102      	bne.n	8002a04 <Control_Task+0x6cc>
 80029fe:	4b21      	ldr	r3, [pc, #132]	; (8002a84 <Control_Task+0x74c>)
 8002a00:	2202      	movs	r2, #2
 8002a02:	701a      	strb	r2, [r3, #0]
		control_task_state=NEIGHBOUR1;
 8002a04:	4b15      	ldr	r3, [pc, #84]	; (8002a5c <Control_Task+0x724>)
 8002a06:	2200      	movs	r2, #0
 8002a08:	701a      	strb	r2, [r3, #0]
		return;
 8002a0a:	e022      	b.n	8002a52 <Control_Task+0x71a>
	}

	/**************************************************************************************/

	/**********ÜTKÖZÉSELKERÜLÉS VÁRAKOZÁSSAL (control_task_state=EVALUATE ->6.állapot)***********/
	else if(control_task_state==WAIT)
 8002a0c:	4b13      	ldr	r3, [pc, #76]	; (8002a5c <Control_Task+0x724>)
 8002a0e:	781b      	ldrb	r3, [r3, #0]
 8002a10:	2b05      	cmp	r3, #5
 8002a12:	d11d      	bne.n	8002a50 <Control_Task+0x718>
	{
		if(tick-t_stamp<4000)
 8002a14:	4b1c      	ldr	r3, [pc, #112]	; (8002a88 <Control_Task+0x750>)
 8002a16:	681b      	ldr	r3, [r3, #0]
 8002a18:	687a      	ldr	r2, [r7, #4]
 8002a1a:	1ad3      	subs	r3, r2, r3
 8002a1c:	f5b3 6f7a 	cmp.w	r3, #4000	; 0xfa0
 8002a20:	d206      	bcs.n	8002a30 <Control_Task+0x6f8>
		{
			v_control=STOP;
 8002a22:	4b1a      	ldr	r3, [pc, #104]	; (8002a8c <Control_Task+0x754>)
 8002a24:	2200      	movs	r2, #0
 8002a26:	701a      	strb	r2, [r3, #0]
			control_task_state=WAIT;
 8002a28:	4b0c      	ldr	r3, [pc, #48]	; (8002a5c <Control_Task+0x724>)
 8002a2a:	2205      	movs	r2, #5
 8002a2c:	701a      	strb	r2, [r3, #0]
			v_control=NORMAL_VEL;
			control_task_state=NEIGHBOUR1;
		}
	}
	/**************************************************************************************/
	return;
 8002a2e:	e00f      	b.n	8002a50 <Control_Task+0x718>
			LED_G(0);
 8002a30:	2201      	movs	r2, #1
 8002a32:	2102      	movs	r1, #2
 8002a34:	4816      	ldr	r0, [pc, #88]	; (8002a90 <Control_Task+0x758>)
 8002a36:	f005 fdcb 	bl	80085d0 <HAL_GPIO_WritePin>
			v_control=NORMAL_VEL;
 8002a3a:	4b14      	ldr	r3, [pc, #80]	; (8002a8c <Control_Task+0x754>)
 8002a3c:	2202      	movs	r2, #2
 8002a3e:	701a      	strb	r2, [r3, #0]
			control_task_state=NEIGHBOUR1;
 8002a40:	4b06      	ldr	r3, [pc, #24]	; (8002a5c <Control_Task+0x724>)
 8002a42:	2200      	movs	r2, #0
 8002a44:	701a      	strb	r2, [r3, #0]
	return;
 8002a46:	e003      	b.n	8002a50 <Control_Task+0x718>
	if(control_task_tick>tick)return;
 8002a48:	bf00      	nop
 8002a4a:	e002      	b.n	8002a52 <Control_Task+0x71a>
	if(mode!=SKILL)return;
 8002a4c:	bf00      	nop
 8002a4e:	e000      	b.n	8002a52 <Control_Task+0x71a>
	return;
 8002a50:	bf00      	nop
}
 8002a52:	3720      	adds	r7, #32
 8002a54:	46bd      	mov	sp, r7
 8002a56:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8002a5a:	bf00      	nop
 8002a5c:	200005fc 	.word	0x200005fc
 8002a60:	20000608 	.word	0x20000608
 8002a64:	c3160000 	.word	0xc3160000
 8002a68:	20000008 	.word	0x20000008
 8002a6c:	200005e4 	.word	0x200005e4
 8002a70:	20000000 	.word	0x20000000
 8002a74:	200002b8 	.word	0x200002b8
 8002a78:	2000000c 	.word	0x2000000c
 8002a7c:	200002a4 	.word	0x200002a4
 8002a80:	20000605 	.word	0x20000605
 8002a84:	20000604 	.word	0x20000604
 8002a88:	20000600 	.word	0x20000600
 8002a8c:	200002a9 	.word	0x200002a9
 8002a90:	40020400 	.word	0x40020400

08002a94 <Mode_Selector>:


void Mode_Selector(UART_HandleTypeDef *huart_debugg, UART_HandleTypeDef *huart_stm)
{
 8002a94:	b580      	push	{r7, lr}
 8002a96:	b08e      	sub	sp, #56	; 0x38
 8002a98:	af00      	add	r7, sp, #0
 8002a9a:	6078      	str	r0, [r7, #4]
 8002a9c:	6039      	str	r1, [r7, #0]
	//Milyen módban kell működni?
	uint8_t buffer[40];
	uint8_t tmp=*(__IO uint8_t *) FLASH_ADDRESS_MODESELECTOR; //FLASH-ből kiolvassuk, hogy milyen módban vagyunk
 8002a9e:	4b5f      	ldr	r3, [pc, #380]	; (8002c1c <Mode_Selector+0x188>)
 8002aa0:	781b      	ldrb	r3, [r3, #0]
 8002aa2:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37

	if(tmp==SKILL || tmp==FAST) mode = tmp;
 8002aa6:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8002aaa:	2b52      	cmp	r3, #82	; 0x52
 8002aac:	d003      	beq.n	8002ab6 <Mode_Selector+0x22>
 8002aae:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8002ab2:	2b3f      	cmp	r3, #63	; 0x3f
 8002ab4:	d104      	bne.n	8002ac0 <Mode_Selector+0x2c>
 8002ab6:	4a5a      	ldr	r2, [pc, #360]	; (8002c20 <Mode_Selector+0x18c>)
 8002ab8:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8002abc:	7013      	strb	r3, [r2, #0]
 8002abe:	e022      	b.n	8002b06 <Mode_Selector+0x72>
	else
	{
		HAL_FLASH_Unlock();
 8002ac0:	f005 fa20 	bl	8007f04 <HAL_FLASH_Unlock>
		HAL_Delay(50);
 8002ac4:	2032      	movs	r0, #50	; 0x32
 8002ac6:	f003 fee9 	bl	800689c <HAL_Delay>
		FLASH_Erase_Sector(7, FLASH_VOLTAGE_RANGE_3);
 8002aca:	2102      	movs	r1, #2
 8002acc:	2007      	movs	r0, #7
 8002ace:	f005 fb8b 	bl	80081e8 <FLASH_Erase_Sector>
		HAL_Delay(50);
 8002ad2:	2032      	movs	r0, #50	; 0x32
 8002ad4:	f003 fee2 	bl	800689c <HAL_Delay>
		HAL_FLASH_Lock();
 8002ad8:	f005 fa36 	bl	8007f48 <HAL_FLASH_Lock>
		HAL_FLASH_Unlock();
 8002adc:	f005 fa12 	bl	8007f04 <HAL_FLASH_Unlock>
		HAL_Delay(50);
 8002ae0:	2032      	movs	r0, #50	; 0x32
 8002ae2:	f003 fedb 	bl	800689c <HAL_Delay>
		HAL_FLASH_Program(FLASH_TYPEPROGRAM_BYTE, FLASH_ADDRESS_MODESELECTOR, SKILL); //ha eddig skill mód volt akor msot gyors lesz
 8002ae6:	f04f 0252 	mov.w	r2, #82	; 0x52
 8002aea:	f04f 0300 	mov.w	r3, #0
 8002aee:	494b      	ldr	r1, [pc, #300]	; (8002c1c <Mode_Selector+0x188>)
 8002af0:	2000      	movs	r0, #0
 8002af2:	f005 f9b3 	bl	8007e5c <HAL_FLASH_Program>
		HAL_Delay(50);
 8002af6:	2032      	movs	r0, #50	; 0x32
 8002af8:	f003 fed0 	bl	800689c <HAL_Delay>
		HAL_FLASH_Lock();
 8002afc:	f005 fa24 	bl	8007f48 <HAL_FLASH_Lock>

		mode=SKILL;
 8002b00:	4b47      	ldr	r3, [pc, #284]	; (8002c20 <Mode_Selector+0x18c>)
 8002b02:	2252      	movs	r2, #82	; 0x52
 8002b04:	701a      	strb	r2, [r3, #0]
	}

	if(mode==SKILL)
 8002b06:	4b46      	ldr	r3, [pc, #280]	; (8002c20 <Mode_Selector+0x18c>)
 8002b08:	781b      	ldrb	r3, [r3, #0]
 8002b0a:	2b52      	cmp	r3, #82	; 0x52
 8002b0c:	d135      	bne.n	8002b7a <Mode_Selector+0xe6>
	{
		buffer[0] = CMD_MODE_SKILL; //szólunk a g0-nak, hogy ügyességi módban vagyunk
 8002b0e:	2352      	movs	r3, #82	; 0x52
 8002b10:	733b      	strb	r3, [r7, #12]
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 8002b12:	f107 010c 	add.w	r1, r7, #12
 8002b16:	230a      	movs	r3, #10
 8002b18:	2201      	movs	r2, #1
 8002b1a:	6838      	ldr	r0, [r7, #0]
 8002b1c:	f008 faab 	bl	800b076 <HAL_UART_Transmit>
		HAL_Delay(10);
 8002b20:	200a      	movs	r0, #10
 8002b22:	f003 febb 	bl	800689c <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);//3 szór is szólunk neki, hogy tuti megkapja a módváltásról az üzenetet
 8002b26:	f107 010c 	add.w	r1, r7, #12
 8002b2a:	230a      	movs	r3, #10
 8002b2c:	2201      	movs	r2, #1
 8002b2e:	6838      	ldr	r0, [r7, #0]
 8002b30:	f008 faa1 	bl	800b076 <HAL_UART_Transmit>
		HAL_Delay(10);
 8002b34:	200a      	movs	r0, #10
 8002b36:	f003 feb1 	bl	800689c <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 8002b3a:	f107 010c 	add.w	r1, r7, #12
 8002b3e:	230a      	movs	r3, #10
 8002b40:	2201      	movs	r2, #1
 8002b42:	6838      	ldr	r0, [r7, #0]
 8002b44:	f008 fa97 	bl	800b076 <HAL_UART_Transmit>

		sprintf((char*)buffer,"Skill mode!\n\r"); //Debugg uart-ra is kiküldjük, hogy milyen módban vagyunk
 8002b48:	f107 030c 	add.w	r3, r7, #12
 8002b4c:	4935      	ldr	r1, [pc, #212]	; (8002c24 <Mode_Selector+0x190>)
 8002b4e:	4618      	mov	r0, r3
 8002b50:	f009 fffa 	bl	800cb48 <siprintf>
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
 8002b54:	f107 030c 	add.w	r3, r7, #12
 8002b58:	4618      	mov	r0, r3
 8002b5a:	f7fd fb59 	bl	8000210 <strlen>
 8002b5e:	4603      	mov	r3, r0
 8002b60:	b29a      	uxth	r2, r3
 8002b62:	f107 010c 	add.w	r1, r7, #12
 8002b66:	2364      	movs	r3, #100	; 0x64
 8002b68:	6878      	ldr	r0, [r7, #4]
 8002b6a:	f008 fa84 	bl	800b076 <HAL_UART_Transmit>
		LED_NUCLEO(1); //A NUCLEO zöld LED-je világít, ha ügyeségi üzemmódban vagyunk
 8002b6e:	2201      	movs	r2, #1
 8002b70:	2120      	movs	r1, #32
 8002b72:	482d      	ldr	r0, [pc, #180]	; (8002c28 <Mode_Selector+0x194>)
 8002b74:	f005 fd2c 	bl	80085d0 <HAL_GPIO_WritePin>
	else
	{
		sprintf((char*)buffer,"Flash error! Press blue button!\n\r");
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
	}
}
 8002b78:	e04c      	b.n	8002c14 <Mode_Selector+0x180>
	else if(mode==FAST)
 8002b7a:	4b29      	ldr	r3, [pc, #164]	; (8002c20 <Mode_Selector+0x18c>)
 8002b7c:	781b      	ldrb	r3, [r3, #0]
 8002b7e:	2b3f      	cmp	r3, #63	; 0x3f
 8002b80:	d135      	bne.n	8002bee <Mode_Selector+0x15a>
		buffer[0] = CMD_MODE_FAST;
 8002b82:	233f      	movs	r3, #63	; 0x3f
 8002b84:	733b      	strb	r3, [r7, #12]
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 8002b86:	f107 010c 	add.w	r1, r7, #12
 8002b8a:	230a      	movs	r3, #10
 8002b8c:	2201      	movs	r2, #1
 8002b8e:	6838      	ldr	r0, [r7, #0]
 8002b90:	f008 fa71 	bl	800b076 <HAL_UART_Transmit>
		HAL_Delay(10);
 8002b94:	200a      	movs	r0, #10
 8002b96:	f003 fe81 	bl	800689c <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 8002b9a:	f107 010c 	add.w	r1, r7, #12
 8002b9e:	230a      	movs	r3, #10
 8002ba0:	2201      	movs	r2, #1
 8002ba2:	6838      	ldr	r0, [r7, #0]
 8002ba4:	f008 fa67 	bl	800b076 <HAL_UART_Transmit>
		HAL_Delay(10);
 8002ba8:	200a      	movs	r0, #10
 8002baa:	f003 fe77 	bl	800689c <HAL_Delay>
		HAL_UART_Transmit(huart_stm, buffer,1, 10);
 8002bae:	f107 010c 	add.w	r1, r7, #12
 8002bb2:	230a      	movs	r3, #10
 8002bb4:	2201      	movs	r2, #1
 8002bb6:	6838      	ldr	r0, [r7, #0]
 8002bb8:	f008 fa5d 	bl	800b076 <HAL_UART_Transmit>
		sprintf((char*)buffer,"Fast mode!\n\r");
 8002bbc:	f107 030c 	add.w	r3, r7, #12
 8002bc0:	491a      	ldr	r1, [pc, #104]	; (8002c2c <Mode_Selector+0x198>)
 8002bc2:	4618      	mov	r0, r3
 8002bc4:	f009 ffc0 	bl	800cb48 <siprintf>
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
 8002bc8:	f107 030c 	add.w	r3, r7, #12
 8002bcc:	4618      	mov	r0, r3
 8002bce:	f7fd fb1f 	bl	8000210 <strlen>
 8002bd2:	4603      	mov	r3, r0
 8002bd4:	b29a      	uxth	r2, r3
 8002bd6:	f107 010c 	add.w	r1, r7, #12
 8002bda:	2364      	movs	r3, #100	; 0x64
 8002bdc:	6878      	ldr	r0, [r7, #4]
 8002bde:	f008 fa4a 	bl	800b076 <HAL_UART_Transmit>
		LED_NUCLEO(0);
 8002be2:	2200      	movs	r2, #0
 8002be4:	2120      	movs	r1, #32
 8002be6:	4810      	ldr	r0, [pc, #64]	; (8002c28 <Mode_Selector+0x194>)
 8002be8:	f005 fcf2 	bl	80085d0 <HAL_GPIO_WritePin>
}
 8002bec:	e012      	b.n	8002c14 <Mode_Selector+0x180>
		sprintf((char*)buffer,"Flash error! Press blue button!\n\r");
 8002bee:	f107 030c 	add.w	r3, r7, #12
 8002bf2:	490f      	ldr	r1, [pc, #60]	; (8002c30 <Mode_Selector+0x19c>)
 8002bf4:	4618      	mov	r0, r3
 8002bf6:	f009 ffa7 	bl	800cb48 <siprintf>
		HAL_UART_Transmit(huart_debugg, buffer, strlen((char*)buffer), 100);
 8002bfa:	f107 030c 	add.w	r3, r7, #12
 8002bfe:	4618      	mov	r0, r3
 8002c00:	f7fd fb06 	bl	8000210 <strlen>
 8002c04:	4603      	mov	r3, r0
 8002c06:	b29a      	uxth	r2, r3
 8002c08:	f107 010c 	add.w	r1, r7, #12
 8002c0c:	2364      	movs	r3, #100	; 0x64
 8002c0e:	6878      	ldr	r0, [r7, #4]
 8002c10:	f008 fa31 	bl	800b076 <HAL_UART_Transmit>
}
 8002c14:	bf00      	nop
 8002c16:	3738      	adds	r7, #56	; 0x38
 8002c18:	46bd      	mov	sp, r7
 8002c1a:	bd80      	pop	{r7, pc}
 8002c1c:	08060000 	.word	0x08060000
 8002c20:	20000296 	.word	0x20000296
 8002c24:	080105a8 	.word	0x080105a8
 8002c28:	40020000 	.word	0x40020000
 8002c2c:	080105b8 	.word	0x080105b8
 8002c30:	080105c8 	.word	0x080105c8

08002c34 <Wait_For_Start_Sigal>:
	HAL_UART_Transmit(huart_monitoring, data, 11, 4);
}


void Wait_For_Start_Sigal(UART_HandleTypeDef *huart_TB, UART_HandleTypeDef *huart_debugg)
{
 8002c34:	b580      	push	{r7, lr}
 8002c36:	b084      	sub	sp, #16
 8002c38:	af00      	add	r7, sp, #0
 8002c3a:	6078      	str	r0, [r7, #4]
 8002c3c:	6039      	str	r1, [r7, #0]
	uint8_t rcv[]={0};
 8002c3e:	2300      	movs	r3, #0
 8002c40:	723b      	strb	r3, [r7, #8]
	static uint8_t cnt=5;
	if(mode!=SKILL)return;
 8002c42:	4b2f      	ldr	r3, [pc, #188]	; (8002d00 <Wait_For_Start_Sigal+0xcc>)
 8002c44:	781b      	ldrb	r3, [r3, #0]
 8002c46:	2b52      	cmp	r3, #82	; 0x52
 8002c48:	d156      	bne.n	8002cf8 <Wait_For_Start_Sigal+0xc4>
	while(1)
	{
		//Bluetooth-on érkezika  start jel
		HAL_UART_Receive(huart_TB, rcv, 1, 7000);
 8002c4a:	f107 0108 	add.w	r1, r7, #8
 8002c4e:	f641 3358 	movw	r3, #7000	; 0x1b58
 8002c52:	2201      	movs	r2, #1
 8002c54:	6878      	ldr	r0, [r7, #4]
 8002c56:	f008 faa0 	bl	800b19a <HAL_UART_Receive>
		if(rcv[0]==cnt+0x30)
 8002c5a:	7a3b      	ldrb	r3, [r7, #8]
 8002c5c:	461a      	mov	r2, r3
 8002c5e:	4b29      	ldr	r3, [pc, #164]	; (8002d04 <Wait_For_Start_Sigal+0xd0>)
 8002c60:	781b      	ldrb	r3, [r3, #0]
 8002c62:	3330      	adds	r3, #48	; 0x30
 8002c64:	429a      	cmp	r2, r3
 8002c66:	d11a      	bne.n	8002c9e <Wait_For_Start_Sigal+0x6a>
		{
			if(cnt<4)
 8002c68:	4b26      	ldr	r3, [pc, #152]	; (8002d04 <Wait_For_Start_Sigal+0xd0>)
 8002c6a:	781b      	ldrb	r3, [r3, #0]
 8002c6c:	2b03      	cmp	r3, #3
 8002c6e:	d80c      	bhi.n	8002c8a <Wait_For_Start_Sigal+0x56>
			{
				HAL_UART_Transmit(huart_debugg, rcv, 1, 2);
 8002c70:	f107 0108 	add.w	r1, r7, #8
 8002c74:	2302      	movs	r3, #2
 8002c76:	2201      	movs	r2, #1
 8002c78:	6838      	ldr	r0, [r7, #0]
 8002c7a:	f008 f9fc 	bl	800b076 <HAL_UART_Transmit>
				HAL_UART_Transmit(huart_debugg, (uint8_t*)"\n\r", 2, 2);
 8002c7e:	2302      	movs	r3, #2
 8002c80:	2202      	movs	r2, #2
 8002c82:	4921      	ldr	r1, [pc, #132]	; (8002d08 <Wait_For_Start_Sigal+0xd4>)
 8002c84:	6838      	ldr	r0, [r7, #0]
 8002c86:	f008 f9f6 	bl	800b076 <HAL_UART_Transmit>
			}
			if(rcv[0]=='0')break;
 8002c8a:	7a3b      	ldrb	r3, [r7, #8]
 8002c8c:	2b30      	cmp	r3, #48	; 0x30
 8002c8e:	d026      	beq.n	8002cde <Wait_For_Start_Sigal+0xaa>
			cnt--;
 8002c90:	4b1c      	ldr	r3, [pc, #112]	; (8002d04 <Wait_For_Start_Sigal+0xd0>)
 8002c92:	781b      	ldrb	r3, [r3, #0]
 8002c94:	3b01      	subs	r3, #1
 8002c96:	b2da      	uxtb	r2, r3
 8002c98:	4b1a      	ldr	r3, [pc, #104]	; (8002d04 <Wait_For_Start_Sigal+0xd0>)
 8002c9a:	701a      	strb	r2, [r3, #0]
 8002c9c:	e002      	b.n	8002ca4 <Wait_For_Start_Sigal+0x70>
		}
		else cnt=5;
 8002c9e:	4b19      	ldr	r3, [pc, #100]	; (8002d04 <Wait_For_Start_Sigal+0xd0>)
 8002ca0:	2205      	movs	r2, #5
 8002ca2:	701a      	strb	r2, [r3, #0]

		//Kézi próbaindítás
		if(B2)
 8002ca4:	2120      	movs	r1, #32
 8002ca6:	4819      	ldr	r0, [pc, #100]	; (8002d0c <Wait_For_Start_Sigal+0xd8>)
 8002ca8:	f005 fc7a 	bl	80085a0 <HAL_GPIO_ReadPin>
 8002cac:	4603      	mov	r3, r0
 8002cae:	2b00      	cmp	r3, #0
 8002cb0:	d0cb      	beq.n	8002c4a <Wait_For_Start_Sigal+0x16>
		{
			int i;
			for(i=0;i<10;i++)
 8002cb2:	2300      	movs	r3, #0
 8002cb4:	60fb      	str	r3, [r7, #12]
 8002cb6:	e009      	b.n	8002ccc <Wait_For_Start_Sigal+0x98>
			{
				LED_G_TOGGLE;
 8002cb8:	2102      	movs	r1, #2
 8002cba:	4814      	ldr	r0, [pc, #80]	; (8002d0c <Wait_For_Start_Sigal+0xd8>)
 8002cbc:	f005 fca1 	bl	8008602 <HAL_GPIO_TogglePin>
				Delay(200);
 8002cc0:	20c8      	movs	r0, #200	; 0xc8
 8002cc2:	f002 ff97 	bl	8005bf4 <Delay>
			for(i=0;i<10;i++)
 8002cc6:	68fb      	ldr	r3, [r7, #12]
 8002cc8:	3301      	adds	r3, #1
 8002cca:	60fb      	str	r3, [r7, #12]
 8002ccc:	68fb      	ldr	r3, [r7, #12]
 8002cce:	2b09      	cmp	r3, #9
 8002cd0:	ddf2      	ble.n	8002cb8 <Wait_For_Start_Sigal+0x84>
			}
			LED_G(0);
 8002cd2:	2201      	movs	r2, #1
 8002cd4:	2102      	movs	r1, #2
 8002cd6:	480d      	ldr	r0, [pc, #52]	; (8002d0c <Wait_For_Start_Sigal+0xd8>)
 8002cd8:	f005 fc7a 	bl	80085d0 <HAL_GPIO_WritePin>
			break;//ha megnyomtuka 2-es gombot kiugrunk a while ciklusból
 8002cdc:	e000      	b.n	8002ce0 <Wait_For_Start_Sigal+0xac>
			if(rcv[0]=='0')break;
 8002cde:	bf00      	nop
		}

	}
	HAL_UART_Receive_IT(huart_TB, tb_msg, 6);
 8002ce0:	2206      	movs	r2, #6
 8002ce2:	490b      	ldr	r1, [pc, #44]	; (8002d10 <Wait_For_Start_Sigal+0xdc>)
 8002ce4:	6878      	ldr	r0, [r7, #4]
 8002ce6:	f008 fafa 	bl	800b2de <HAL_UART_Receive_IT>
	HAL_UART_Transmit(huart_debugg, (uint8_t*)"START!\n\r",8, 3);
 8002cea:	2303      	movs	r3, #3
 8002cec:	2208      	movs	r2, #8
 8002cee:	4909      	ldr	r1, [pc, #36]	; (8002d14 <Wait_For_Start_Sigal+0xe0>)
 8002cf0:	6838      	ldr	r0, [r7, #0]
 8002cf2:	f008 f9c0 	bl	800b076 <HAL_UART_Transmit>
 8002cf6:	e000      	b.n	8002cfa <Wait_For_Start_Sigal+0xc6>
	if(mode!=SKILL)return;
 8002cf8:	bf00      	nop
}
 8002cfa:	3710      	adds	r7, #16
 8002cfc:	46bd      	mov	sp, r7
 8002cfe:	bd80      	pop	{r7, pc}
 8002d00:	20000296 	.word	0x20000296
 8002d04:	20000014 	.word	0x20000014
 8002d08:	080105ec 	.word	0x080105ec
 8002d0c:	40020400 	.word	0x40020400
 8002d10:	200002ac 	.word	0x200002ac
 8002d14:	080105f0 	.word	0x080105f0

08002d18 <Uart_Receive_Thunderboard_ISR>:
void Uart_Receive_Thunderboard_ISR(UART_HandleTypeDef *huart_TB, UART_HandleTypeDef *huart_debugg)
{
 8002d18:	b580      	push	{r7, lr}
 8002d1a:	b082      	sub	sp, #8
 8002d1c:	af00      	add	r7, sp, #0
 8002d1e:	6078      	str	r0, [r7, #4]
 8002d20:	6039      	str	r1, [r7, #0]
	static uint8_t sp[]={0};//slip protection
	static uint8_t cnt=0;
	if(tb_msg[0]>='A' && tb_msg[0]<='Z' && tb_msg[5]>='0' && tb_msg[5]<='9')
 8002d22:	4b37      	ldr	r3, [pc, #220]	; (8002e00 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8002d24:	781b      	ldrb	r3, [r3, #0]
 8002d26:	2b40      	cmp	r3, #64	; 0x40
 8002d28:	d93d      	bls.n	8002da6 <Uart_Receive_Thunderboard_ISR+0x8e>
 8002d2a:	4b35      	ldr	r3, [pc, #212]	; (8002e00 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8002d2c:	781b      	ldrb	r3, [r3, #0]
 8002d2e:	2b5a      	cmp	r3, #90	; 0x5a
 8002d30:	d839      	bhi.n	8002da6 <Uart_Receive_Thunderboard_ISR+0x8e>
 8002d32:	4b33      	ldr	r3, [pc, #204]	; (8002e00 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8002d34:	795b      	ldrb	r3, [r3, #5]
 8002d36:	2b2f      	cmp	r3, #47	; 0x2f
 8002d38:	d935      	bls.n	8002da6 <Uart_Receive_Thunderboard_ISR+0x8e>
 8002d3a:	4b31      	ldr	r3, [pc, #196]	; (8002e00 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8002d3c:	795b      	ldrb	r3, [r3, #5]
 8002d3e:	2b39      	cmp	r3, #57	; 0x39
 8002d40:	d831      	bhi.n	8002da6 <Uart_Receive_Thunderboard_ISR+0x8e>
	{
		piratePos[0]=tb_msg[0];	piratePos[1]=tb_msg[1];	piratePos[2]=tb_msg[2];
 8002d42:	4b2f      	ldr	r3, [pc, #188]	; (8002e00 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8002d44:	781a      	ldrb	r2, [r3, #0]
 8002d46:	4b2f      	ldr	r3, [pc, #188]	; (8002e04 <Uart_Receive_Thunderboard_ISR+0xec>)
 8002d48:	701a      	strb	r2, [r3, #0]
 8002d4a:	4b2d      	ldr	r3, [pc, #180]	; (8002e00 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8002d4c:	785a      	ldrb	r2, [r3, #1]
 8002d4e:	4b2d      	ldr	r3, [pc, #180]	; (8002e04 <Uart_Receive_Thunderboard_ISR+0xec>)
 8002d50:	705a      	strb	r2, [r3, #1]
 8002d52:	4b2b      	ldr	r3, [pc, #172]	; (8002e00 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8002d54:	789a      	ldrb	r2, [r3, #2]
 8002d56:	4b2b      	ldr	r3, [pc, #172]	; (8002e04 <Uart_Receive_Thunderboard_ISR+0xec>)
 8002d58:	709a      	strb	r2, [r3, #2]
		piratePos[3]=100*(tb_msg[3]-0x30) + 10*(tb_msg[4]-0x30) + (tb_msg[5]-0x30);
 8002d5a:	4b29      	ldr	r3, [pc, #164]	; (8002e00 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8002d5c:	78db      	ldrb	r3, [r3, #3]
 8002d5e:	461a      	mov	r2, r3
 8002d60:	0092      	lsls	r2, r2, #2
 8002d62:	4413      	add	r3, r2
 8002d64:	461a      	mov	r2, r3
 8002d66:	0091      	lsls	r1, r2, #2
 8002d68:	461a      	mov	r2, r3
 8002d6a:	460b      	mov	r3, r1
 8002d6c:	4413      	add	r3, r2
 8002d6e:	009b      	lsls	r3, r3, #2
 8002d70:	b2da      	uxtb	r2, r3
 8002d72:	4b23      	ldr	r3, [pc, #140]	; (8002e00 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8002d74:	791b      	ldrb	r3, [r3, #4]
 8002d76:	4619      	mov	r1, r3
 8002d78:	0089      	lsls	r1, r1, #2
 8002d7a:	440b      	add	r3, r1
 8002d7c:	005b      	lsls	r3, r3, #1
 8002d7e:	b2db      	uxtb	r3, r3
 8002d80:	4413      	add	r3, r2
 8002d82:	b2da      	uxtb	r2, r3
 8002d84:	4b1e      	ldr	r3, [pc, #120]	; (8002e00 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8002d86:	795b      	ldrb	r3, [r3, #5]
 8002d88:	4413      	add	r3, r2
 8002d8a:	b2db      	uxtb	r3, r3
 8002d8c:	3330      	adds	r3, #48	; 0x30
 8002d8e:	b2da      	uxtb	r2, r3
 8002d90:	4b1c      	ldr	r3, [pc, #112]	; (8002e04 <Uart_Receive_Thunderboard_ISR+0xec>)
 8002d92:	70da      	strb	r2, [r3, #3]
		thunderboardFlag=1;
 8002d94:	4b1c      	ldr	r3, [pc, #112]	; (8002e08 <Uart_Receive_Thunderboard_ISR+0xf0>)
 8002d96:	2201      	movs	r2, #1
 8002d98:	701a      	strb	r2, [r3, #0]
		HAL_UART_Receive_IT(huart_TB, tb_msg, 6);
 8002d9a:	2206      	movs	r2, #6
 8002d9c:	4918      	ldr	r1, [pc, #96]	; (8002e00 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8002d9e:	6878      	ldr	r0, [r7, #4]
 8002da0:	f008 fa9d 	bl	800b2de <HAL_UART_Receive_IT>
#ifdef TB_DEBUGG
		HAL_UART_Transmit(huart_debugg, tb_msg, 6, 2);
		HAL_UART_Transmit(huart_debugg, (uint8_t*)"\n\r", 2, 2);
#endif
		return;
 8002da4:	e029      	b.n	8002dfa <Uart_Receive_Thunderboard_ISR+0xe2>
	}
	//SLIP PROTECTION
	if(sp[0]>='0' && sp[0]<='9')cnt++;
 8002da6:	4b19      	ldr	r3, [pc, #100]	; (8002e0c <Uart_Receive_Thunderboard_ISR+0xf4>)
 8002da8:	781b      	ldrb	r3, [r3, #0]
 8002daa:	2b2f      	cmp	r3, #47	; 0x2f
 8002dac:	d90a      	bls.n	8002dc4 <Uart_Receive_Thunderboard_ISR+0xac>
 8002dae:	4b17      	ldr	r3, [pc, #92]	; (8002e0c <Uart_Receive_Thunderboard_ISR+0xf4>)
 8002db0:	781b      	ldrb	r3, [r3, #0]
 8002db2:	2b39      	cmp	r3, #57	; 0x39
 8002db4:	d806      	bhi.n	8002dc4 <Uart_Receive_Thunderboard_ISR+0xac>
 8002db6:	4b16      	ldr	r3, [pc, #88]	; (8002e10 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8002db8:	781b      	ldrb	r3, [r3, #0]
 8002dba:	3301      	adds	r3, #1
 8002dbc:	b2da      	uxtb	r2, r3
 8002dbe:	4b14      	ldr	r3, [pc, #80]	; (8002e10 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8002dc0:	701a      	strb	r2, [r3, #0]
 8002dc2:	e002      	b.n	8002dca <Uart_Receive_Thunderboard_ISR+0xb2>
	else cnt=0;
 8002dc4:	4b12      	ldr	r3, [pc, #72]	; (8002e10 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8002dc6:	2200      	movs	r2, #0
 8002dc8:	701a      	strb	r2, [r3, #0]

	if(cnt<3) //3 darab ASCI számnak össze kell gyűlnie egymás után
 8002dca:	4b11      	ldr	r3, [pc, #68]	; (8002e10 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8002dcc:	781b      	ldrb	r3, [r3, #0]
 8002dce:	2b02      	cmp	r3, #2
 8002dd0:	d805      	bhi.n	8002dde <Uart_Receive_Thunderboard_ISR+0xc6>
	{
		HAL_UART_Receive_IT(huart_TB, sp, 1);//amig ez nincs meg addig cask egyesével olvasunk
 8002dd2:	2201      	movs	r2, #1
 8002dd4:	490d      	ldr	r1, [pc, #52]	; (8002e0c <Uart_Receive_Thunderboard_ISR+0xf4>)
 8002dd6:	6878      	ldr	r0, [r7, #4]
 8002dd8:	f008 fa81 	bl	800b2de <HAL_UART_Receive_IT>
 8002ddc:	e00d      	b.n	8002dfa <Uart_Receive_Thunderboard_ISR+0xe2>
	}
	else//ha megvan megint 6-ossával olvasunk
	{
		sp[0]=0;
 8002dde:	4b0b      	ldr	r3, [pc, #44]	; (8002e0c <Uart_Receive_Thunderboard_ISR+0xf4>)
 8002de0:	2200      	movs	r2, #0
 8002de2:	701a      	strb	r2, [r3, #0]
		cnt=0;
 8002de4:	4b0a      	ldr	r3, [pc, #40]	; (8002e10 <Uart_Receive_Thunderboard_ISR+0xf8>)
 8002de6:	2200      	movs	r2, #0
 8002de8:	701a      	strb	r2, [r3, #0]
		HAL_UART_Receive_IT(huart_TB, tb_msg, 6);
 8002dea:	2206      	movs	r2, #6
 8002dec:	4904      	ldr	r1, [pc, #16]	; (8002e00 <Uart_Receive_Thunderboard_ISR+0xe8>)
 8002dee:	6878      	ldr	r0, [r7, #4]
 8002df0:	f008 fa75 	bl	800b2de <HAL_UART_Receive_IT>
		thunderboardFlag=1;
 8002df4:	4b04      	ldr	r3, [pc, #16]	; (8002e08 <Uart_Receive_Thunderboard_ISR+0xf0>)
 8002df6:	2201      	movs	r2, #1
 8002df8:	701a      	strb	r2, [r3, #0]
	}
}
 8002dfa:	3708      	adds	r7, #8
 8002dfc:	46bd      	mov	sp, r7
 8002dfe:	bd80      	pop	{r7, pc}
 8002e00:	200002ac 	.word	0x200002ac
 8002e04:	200002b4 	.word	0x200002b4
 8002e08:	200002aa 	.word	0x200002aa
 8002e0c:	20000618 	.word	0x20000618
 8002e10:	20000619 	.word	0x20000619

08002e14 <Lane_Change_Init>:


void Lane_Change_Init(void)
{
 8002e14:	b480      	push	{r7}
 8002e16:	af00      	add	r7, sp, #0
	N('A').worth = N('B').worth = N('C').worth = N('Y').worth = 0;
 8002e18:	4b43      	ldr	r3, [pc, #268]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e1a:	2200      	movs	r2, #0
 8002e1c:	f8c3 2304 	str.w	r2, [r3, #772]	; 0x304
 8002e20:	4b41      	ldr	r3, [pc, #260]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e22:	f8d3 3304 	ldr.w	r3, [r3, #772]	; 0x304
 8002e26:	4a40      	ldr	r2, [pc, #256]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e28:	6453      	str	r3, [r2, #68]	; 0x44
 8002e2a:	4b3f      	ldr	r3, [pc, #252]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e2c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002e2e:	4a3e      	ldr	r2, [pc, #248]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e30:	6253      	str	r3, [r2, #36]	; 0x24
 8002e32:	4b3d      	ldr	r3, [pc, #244]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e36:	4a3c      	ldr	r2, [pc, #240]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e38:	6053      	str	r3, [r2, #4]
	N('D').worth = N('E').worth=1;
 8002e3a:	4b3b      	ldr	r3, [pc, #236]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e3c:	2201      	movs	r2, #1
 8002e3e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8002e42:	4b39      	ldr	r3, [pc, #228]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e44:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8002e48:	4a37      	ldr	r2, [pc, #220]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e4a:	6653      	str	r3, [r2, #100]	; 0x64
	N('F').worth = N('G').worth = N('W').worth = N('X').worth = 2;
 8002e4c:	4b36      	ldr	r3, [pc, #216]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e4e:	2202      	movs	r2, #2
 8002e50:	f8c3 22e4 	str.w	r2, [r3, #740]	; 0x2e4
 8002e54:	4b34      	ldr	r3, [pc, #208]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e56:	f8d3 32e4 	ldr.w	r3, [r3, #740]	; 0x2e4
 8002e5a:	4a33      	ldr	r2, [pc, #204]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e5c:	f8c2 32c4 	str.w	r3, [r2, #708]	; 0x2c4
 8002e60:	4b31      	ldr	r3, [pc, #196]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e62:	f8d3 32c4 	ldr.w	r3, [r3, #708]	; 0x2c4
 8002e66:	4a30      	ldr	r2, [pc, #192]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e68:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
 8002e6c:	4b2e      	ldr	r3, [pc, #184]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e6e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8002e72:	4a2d      	ldr	r2, [pc, #180]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e74:	f8c2 30a4 	str.w	r3, [r2, #164]	; 0xa4
	N('H').worth = N('I').worth = N('J').worth = N('M').worth = N('P').worth = N('T').worth = N('V').worth = N('U').worth = 4;
 8002e78:	4b2b      	ldr	r3, [pc, #172]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e7a:	2204      	movs	r2, #4
 8002e7c:	f8c3 2284 	str.w	r2, [r3, #644]	; 0x284
 8002e80:	4b29      	ldr	r3, [pc, #164]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e82:	f8d3 3284 	ldr.w	r3, [r3, #644]	; 0x284
 8002e86:	4a28      	ldr	r2, [pc, #160]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e88:	f8c2 32a4 	str.w	r3, [r2, #676]	; 0x2a4
 8002e8c:	4b26      	ldr	r3, [pc, #152]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e8e:	f8d3 32a4 	ldr.w	r3, [r3, #676]	; 0x2a4
 8002e92:	4a25      	ldr	r2, [pc, #148]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e94:	f8c2 3264 	str.w	r3, [r2, #612]	; 0x264
 8002e98:	4b23      	ldr	r3, [pc, #140]	; (8002f28 <Lane_Change_Init+0x114>)
 8002e9a:	f8d3 3264 	ldr.w	r3, [r3, #612]	; 0x264
 8002e9e:	4a22      	ldr	r2, [pc, #136]	; (8002f28 <Lane_Change_Init+0x114>)
 8002ea0:	f8c2 31e4 	str.w	r3, [r2, #484]	; 0x1e4
 8002ea4:	4b20      	ldr	r3, [pc, #128]	; (8002f28 <Lane_Change_Init+0x114>)
 8002ea6:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8002eaa:	4a1f      	ldr	r2, [pc, #124]	; (8002f28 <Lane_Change_Init+0x114>)
 8002eac:	f8c2 3184 	str.w	r3, [r2, #388]	; 0x184
 8002eb0:	4b1d      	ldr	r3, [pc, #116]	; (8002f28 <Lane_Change_Init+0x114>)
 8002eb2:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8002eb6:	4a1c      	ldr	r2, [pc, #112]	; (8002f28 <Lane_Change_Init+0x114>)
 8002eb8:	f8c2 3124 	str.w	r3, [r2, #292]	; 0x124
 8002ebc:	4b1a      	ldr	r3, [pc, #104]	; (8002f28 <Lane_Change_Init+0x114>)
 8002ebe:	f8d3 3124 	ldr.w	r3, [r3, #292]	; 0x124
 8002ec2:	4a19      	ldr	r2, [pc, #100]	; (8002f28 <Lane_Change_Init+0x114>)
 8002ec4:	f8c2 3104 	str.w	r3, [r2, #260]	; 0x104
 8002ec8:	4b17      	ldr	r3, [pc, #92]	; (8002f28 <Lane_Change_Init+0x114>)
 8002eca:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 8002ece:	4a16      	ldr	r2, [pc, #88]	; (8002f28 <Lane_Change_Init+0x114>)
 8002ed0:	f8c2 30e4 	str.w	r3, [r2, #228]	; 0xe4
	N('L').worth = N('K').worth = N('O').worth = N('R').worth = N('S').worth = 8;
 8002ed4:	4b14      	ldr	r3, [pc, #80]	; (8002f28 <Lane_Change_Init+0x114>)
 8002ed6:	2208      	movs	r2, #8
 8002ed8:	f8c3 2244 	str.w	r2, [r3, #580]	; 0x244
 8002edc:	4b12      	ldr	r3, [pc, #72]	; (8002f28 <Lane_Change_Init+0x114>)
 8002ede:	f8d3 3244 	ldr.w	r3, [r3, #580]	; 0x244
 8002ee2:	4a11      	ldr	r2, [pc, #68]	; (8002f28 <Lane_Change_Init+0x114>)
 8002ee4:	f8c2 3224 	str.w	r3, [r2, #548]	; 0x224
 8002ee8:	4b0f      	ldr	r3, [pc, #60]	; (8002f28 <Lane_Change_Init+0x114>)
 8002eea:	f8d3 3224 	ldr.w	r3, [r3, #548]	; 0x224
 8002eee:	4a0e      	ldr	r2, [pc, #56]	; (8002f28 <Lane_Change_Init+0x114>)
 8002ef0:	f8c2 31c4 	str.w	r3, [r2, #452]	; 0x1c4
 8002ef4:	4b0c      	ldr	r3, [pc, #48]	; (8002f28 <Lane_Change_Init+0x114>)
 8002ef6:	f8d3 31c4 	ldr.w	r3, [r3, #452]	; 0x1c4
 8002efa:	4a0b      	ldr	r2, [pc, #44]	; (8002f28 <Lane_Change_Init+0x114>)
 8002efc:	f8c2 3144 	str.w	r3, [r2, #324]	; 0x144
 8002f00:	4b09      	ldr	r3, [pc, #36]	; (8002f28 <Lane_Change_Init+0x114>)
 8002f02:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 8002f06:	4a08      	ldr	r2, [pc, #32]	; (8002f28 <Lane_Change_Init+0x114>)
 8002f08:	f8c2 3164 	str.w	r3, [r2, #356]	; 0x164
	N('Q').worth = 16;
 8002f0c:	4b06      	ldr	r3, [pc, #24]	; (8002f28 <Lane_Change_Init+0x114>)
 8002f0e:	2210      	movs	r2, #16
 8002f10:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
	N('N').worth = 32;
 8002f14:	4b04      	ldr	r3, [pc, #16]	; (8002f28 <Lane_Change_Init+0x114>)
 8002f16:	2220      	movs	r2, #32
 8002f18:	f8c3 21a4 	str.w	r2, [r3, #420]	; 0x1a4
}
 8002f1c:	bf00      	nop
 8002f1e:	46bd      	mov	sp, r7
 8002f20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f24:	4770      	bx	lr
 8002f26:	bf00      	nop
 8002f28:	200002b8 	.word	0x200002b8

08002f2c <Cross_Collision>:

uint8_t Cross_Collision(uint8_t myPos, uint8_t nextPos)
{
 8002f2c:	b480      	push	{r7}
 8002f2e:	b083      	sub	sp, #12
 8002f30:	af00      	add	r7, sp, #0
 8002f32:	4603      	mov	r3, r0
 8002f34:	460a      	mov	r2, r1
 8002f36:	71fb      	strb	r3, [r7, #7]
 8002f38:	4613      	mov	r3, r2
 8002f3a:	71bb      	strb	r3, [r7, #6]
	/********************************FI, HG kereszteződés**********************/
	if((myPos=='F' && nextPos=='I') || (myPos=='I' && nextPos=='F'))
 8002f3c:	79fb      	ldrb	r3, [r7, #7]
 8002f3e:	2b46      	cmp	r3, #70	; 0x46
 8002f40:	d102      	bne.n	8002f48 <Cross_Collision+0x1c>
 8002f42:	79bb      	ldrb	r3, [r7, #6]
 8002f44:	2b49      	cmp	r3, #73	; 0x49
 8002f46:	d005      	beq.n	8002f54 <Cross_Collision+0x28>
 8002f48:	79fb      	ldrb	r3, [r7, #7]
 8002f4a:	2b49      	cmp	r3, #73	; 0x49
 8002f4c:	d132      	bne.n	8002fb4 <Cross_Collision+0x88>
 8002f4e:	79bb      	ldrb	r3, [r7, #6]
 8002f50:	2b46      	cmp	r3, #70	; 0x46
 8002f52:	d12f      	bne.n	8002fb4 <Cross_Collision+0x88>
	{
		if((piratePos[0]=='G' && piratePos[1]=='H') || (piratePos[0]=='H' && piratePos[1]=='G')){ if(piratePos[3]<60) return 1;}
 8002f54:	4b7e      	ldr	r3, [pc, #504]	; (8003150 <Cross_Collision+0x224>)
 8002f56:	781b      	ldrb	r3, [r3, #0]
 8002f58:	2b47      	cmp	r3, #71	; 0x47
 8002f5a:	d103      	bne.n	8002f64 <Cross_Collision+0x38>
 8002f5c:	4b7c      	ldr	r3, [pc, #496]	; (8003150 <Cross_Collision+0x224>)
 8002f5e:	785b      	ldrb	r3, [r3, #1]
 8002f60:	2b48      	cmp	r3, #72	; 0x48
 8002f62:	d007      	beq.n	8002f74 <Cross_Collision+0x48>
 8002f64:	4b7a      	ldr	r3, [pc, #488]	; (8003150 <Cross_Collision+0x224>)
 8002f66:	781b      	ldrb	r3, [r3, #0]
 8002f68:	2b48      	cmp	r3, #72	; 0x48
 8002f6a:	d109      	bne.n	8002f80 <Cross_Collision+0x54>
 8002f6c:	4b78      	ldr	r3, [pc, #480]	; (8003150 <Cross_Collision+0x224>)
 8002f6e:	785b      	ldrb	r3, [r3, #1]
 8002f70:	2b47      	cmp	r3, #71	; 0x47
 8002f72:	d105      	bne.n	8002f80 <Cross_Collision+0x54>
 8002f74:	4b76      	ldr	r3, [pc, #472]	; (8003150 <Cross_Collision+0x224>)
 8002f76:	78db      	ldrb	r3, [r3, #3]
 8002f78:	2b3b      	cmp	r3, #59	; 0x3b
 8002f7a:	d81a      	bhi.n	8002fb2 <Cross_Collision+0x86>
 8002f7c:	2301      	movs	r3, #1
 8002f7e:	e111      	b.n	80031a4 <Cross_Collision+0x278>
		else if((piratePos[1]=='G' && piratePos[2]=='H') || (piratePos[1]=='H' && piratePos[2]=='G')){ if(piratePos[3]>50) return 1;}
 8002f80:	4b73      	ldr	r3, [pc, #460]	; (8003150 <Cross_Collision+0x224>)
 8002f82:	785b      	ldrb	r3, [r3, #1]
 8002f84:	2b47      	cmp	r3, #71	; 0x47
 8002f86:	d103      	bne.n	8002f90 <Cross_Collision+0x64>
 8002f88:	4b71      	ldr	r3, [pc, #452]	; (8003150 <Cross_Collision+0x224>)
 8002f8a:	789b      	ldrb	r3, [r3, #2]
 8002f8c:	2b48      	cmp	r3, #72	; 0x48
 8002f8e:	d009      	beq.n	8002fa4 <Cross_Collision+0x78>
 8002f90:	4b6f      	ldr	r3, [pc, #444]	; (8003150 <Cross_Collision+0x224>)
 8002f92:	785b      	ldrb	r3, [r3, #1]
 8002f94:	2b48      	cmp	r3, #72	; 0x48
 8002f96:	f040 80fb 	bne.w	8003190 <Cross_Collision+0x264>
 8002f9a:	4b6d      	ldr	r3, [pc, #436]	; (8003150 <Cross_Collision+0x224>)
 8002f9c:	789b      	ldrb	r3, [r3, #2]
 8002f9e:	2b47      	cmp	r3, #71	; 0x47
 8002fa0:	f040 80f6 	bne.w	8003190 <Cross_Collision+0x264>
 8002fa4:	4b6a      	ldr	r3, [pc, #424]	; (8003150 <Cross_Collision+0x224>)
 8002fa6:	78db      	ldrb	r3, [r3, #3]
 8002fa8:	2b32      	cmp	r3, #50	; 0x32
 8002faa:	f240 80f1 	bls.w	8003190 <Cross_Collision+0x264>
 8002fae:	2301      	movs	r3, #1
 8002fb0:	e0f8      	b.n	80031a4 <Cross_Collision+0x278>
		if((piratePos[0]=='G' && piratePos[1]=='H') || (piratePos[0]=='H' && piratePos[1]=='G')){ if(piratePos[3]<60) return 1;}
 8002fb2:	e0ed      	b.n	8003190 <Cross_Collision+0x264>
	}
	else if((myPos=='G' && nextPos=='H') || (myPos=='H' && nextPos=='G'))
 8002fb4:	79fb      	ldrb	r3, [r7, #7]
 8002fb6:	2b47      	cmp	r3, #71	; 0x47
 8002fb8:	d102      	bne.n	8002fc0 <Cross_Collision+0x94>
 8002fba:	79bb      	ldrb	r3, [r7, #6]
 8002fbc:	2b48      	cmp	r3, #72	; 0x48
 8002fbe:	d005      	beq.n	8002fcc <Cross_Collision+0xa0>
 8002fc0:	79fb      	ldrb	r3, [r7, #7]
 8002fc2:	2b48      	cmp	r3, #72	; 0x48
 8002fc4:	d132      	bne.n	800302c <Cross_Collision+0x100>
 8002fc6:	79bb      	ldrb	r3, [r7, #6]
 8002fc8:	2b47      	cmp	r3, #71	; 0x47
 8002fca:	d12f      	bne.n	800302c <Cross_Collision+0x100>
	{
		if((piratePos[0]=='F' && piratePos[1]=='I') || (piratePos[0]=='I' && piratePos[1]=='F')){ if(piratePos[3]<60) return 1;}
 8002fcc:	4b60      	ldr	r3, [pc, #384]	; (8003150 <Cross_Collision+0x224>)
 8002fce:	781b      	ldrb	r3, [r3, #0]
 8002fd0:	2b46      	cmp	r3, #70	; 0x46
 8002fd2:	d103      	bne.n	8002fdc <Cross_Collision+0xb0>
 8002fd4:	4b5e      	ldr	r3, [pc, #376]	; (8003150 <Cross_Collision+0x224>)
 8002fd6:	785b      	ldrb	r3, [r3, #1]
 8002fd8:	2b49      	cmp	r3, #73	; 0x49
 8002fda:	d007      	beq.n	8002fec <Cross_Collision+0xc0>
 8002fdc:	4b5c      	ldr	r3, [pc, #368]	; (8003150 <Cross_Collision+0x224>)
 8002fde:	781b      	ldrb	r3, [r3, #0]
 8002fe0:	2b49      	cmp	r3, #73	; 0x49
 8002fe2:	d109      	bne.n	8002ff8 <Cross_Collision+0xcc>
 8002fe4:	4b5a      	ldr	r3, [pc, #360]	; (8003150 <Cross_Collision+0x224>)
 8002fe6:	785b      	ldrb	r3, [r3, #1]
 8002fe8:	2b46      	cmp	r3, #70	; 0x46
 8002fea:	d105      	bne.n	8002ff8 <Cross_Collision+0xcc>
 8002fec:	4b58      	ldr	r3, [pc, #352]	; (8003150 <Cross_Collision+0x224>)
 8002fee:	78db      	ldrb	r3, [r3, #3]
 8002ff0:	2b3b      	cmp	r3, #59	; 0x3b
 8002ff2:	d81a      	bhi.n	800302a <Cross_Collision+0xfe>
 8002ff4:	2301      	movs	r3, #1
 8002ff6:	e0d5      	b.n	80031a4 <Cross_Collision+0x278>
		else if((piratePos[1]=='F' && piratePos[2]=='I') || (piratePos[1]=='I' && piratePos[2]=='F')){ if(piratePos[3]>50) return 1;}
 8002ff8:	4b55      	ldr	r3, [pc, #340]	; (8003150 <Cross_Collision+0x224>)
 8002ffa:	785b      	ldrb	r3, [r3, #1]
 8002ffc:	2b46      	cmp	r3, #70	; 0x46
 8002ffe:	d103      	bne.n	8003008 <Cross_Collision+0xdc>
 8003000:	4b53      	ldr	r3, [pc, #332]	; (8003150 <Cross_Collision+0x224>)
 8003002:	789b      	ldrb	r3, [r3, #2]
 8003004:	2b49      	cmp	r3, #73	; 0x49
 8003006:	d009      	beq.n	800301c <Cross_Collision+0xf0>
 8003008:	4b51      	ldr	r3, [pc, #324]	; (8003150 <Cross_Collision+0x224>)
 800300a:	785b      	ldrb	r3, [r3, #1]
 800300c:	2b49      	cmp	r3, #73	; 0x49
 800300e:	f040 80c1 	bne.w	8003194 <Cross_Collision+0x268>
 8003012:	4b4f      	ldr	r3, [pc, #316]	; (8003150 <Cross_Collision+0x224>)
 8003014:	789b      	ldrb	r3, [r3, #2]
 8003016:	2b46      	cmp	r3, #70	; 0x46
 8003018:	f040 80bc 	bne.w	8003194 <Cross_Collision+0x268>
 800301c:	4b4c      	ldr	r3, [pc, #304]	; (8003150 <Cross_Collision+0x224>)
 800301e:	78db      	ldrb	r3, [r3, #3]
 8003020:	2b32      	cmp	r3, #50	; 0x32
 8003022:	f240 80b7 	bls.w	8003194 <Cross_Collision+0x268>
 8003026:	2301      	movs	r3, #1
 8003028:	e0bc      	b.n	80031a4 <Cross_Collision+0x278>
		if((piratePos[0]=='F' && piratePos[1]=='I') || (piratePos[0]=='I' && piratePos[1]=='F')){ if(piratePos[3]<60) return 1;}
 800302a:	e0b3      	b.n	8003194 <Cross_Collision+0x268>
	}
	/**************************************************************************/


	/********************************KN, LM kereszteződés**********************/
	else if((myPos=='K' && nextPos=='N') || (myPos=='N' && nextPos=='K'))
 800302c:	79fb      	ldrb	r3, [r7, #7]
 800302e:	2b4b      	cmp	r3, #75	; 0x4b
 8003030:	d102      	bne.n	8003038 <Cross_Collision+0x10c>
 8003032:	79bb      	ldrb	r3, [r7, #6]
 8003034:	2b4e      	cmp	r3, #78	; 0x4e
 8003036:	d005      	beq.n	8003044 <Cross_Collision+0x118>
 8003038:	79fb      	ldrb	r3, [r7, #7]
 800303a:	2b4e      	cmp	r3, #78	; 0x4e
 800303c:	d131      	bne.n	80030a2 <Cross_Collision+0x176>
 800303e:	79bb      	ldrb	r3, [r7, #6]
 8003040:	2b4b      	cmp	r3, #75	; 0x4b
 8003042:	d12e      	bne.n	80030a2 <Cross_Collision+0x176>
	{
		if((piratePos[0]=='L' && piratePos[1]=='M') || (piratePos[0]=='M' && piratePos[1]=='L')){ if(piratePos[3]<60) return 1;}
 8003044:	4b42      	ldr	r3, [pc, #264]	; (8003150 <Cross_Collision+0x224>)
 8003046:	781b      	ldrb	r3, [r3, #0]
 8003048:	2b4c      	cmp	r3, #76	; 0x4c
 800304a:	d103      	bne.n	8003054 <Cross_Collision+0x128>
 800304c:	4b40      	ldr	r3, [pc, #256]	; (8003150 <Cross_Collision+0x224>)
 800304e:	785b      	ldrb	r3, [r3, #1]
 8003050:	2b4d      	cmp	r3, #77	; 0x4d
 8003052:	d007      	beq.n	8003064 <Cross_Collision+0x138>
 8003054:	4b3e      	ldr	r3, [pc, #248]	; (8003150 <Cross_Collision+0x224>)
 8003056:	781b      	ldrb	r3, [r3, #0]
 8003058:	2b4d      	cmp	r3, #77	; 0x4d
 800305a:	d109      	bne.n	8003070 <Cross_Collision+0x144>
 800305c:	4b3c      	ldr	r3, [pc, #240]	; (8003150 <Cross_Collision+0x224>)
 800305e:	785b      	ldrb	r3, [r3, #1]
 8003060:	2b4c      	cmp	r3, #76	; 0x4c
 8003062:	d105      	bne.n	8003070 <Cross_Collision+0x144>
 8003064:	4b3a      	ldr	r3, [pc, #232]	; (8003150 <Cross_Collision+0x224>)
 8003066:	78db      	ldrb	r3, [r3, #3]
 8003068:	2b3b      	cmp	r3, #59	; 0x3b
 800306a:	d819      	bhi.n	80030a0 <Cross_Collision+0x174>
 800306c:	2301      	movs	r3, #1
 800306e:	e099      	b.n	80031a4 <Cross_Collision+0x278>
		else if((piratePos[1]=='L' && piratePos[2]=='M') || (piratePos[1]=='M' && piratePos[2]=='L')){ if(piratePos[3]>50) return 1;}
 8003070:	4b37      	ldr	r3, [pc, #220]	; (8003150 <Cross_Collision+0x224>)
 8003072:	785b      	ldrb	r3, [r3, #1]
 8003074:	2b4c      	cmp	r3, #76	; 0x4c
 8003076:	d103      	bne.n	8003080 <Cross_Collision+0x154>
 8003078:	4b35      	ldr	r3, [pc, #212]	; (8003150 <Cross_Collision+0x224>)
 800307a:	789b      	ldrb	r3, [r3, #2]
 800307c:	2b4d      	cmp	r3, #77	; 0x4d
 800307e:	d009      	beq.n	8003094 <Cross_Collision+0x168>
 8003080:	4b33      	ldr	r3, [pc, #204]	; (8003150 <Cross_Collision+0x224>)
 8003082:	785b      	ldrb	r3, [r3, #1]
 8003084:	2b4d      	cmp	r3, #77	; 0x4d
 8003086:	f040 8087 	bne.w	8003198 <Cross_Collision+0x26c>
 800308a:	4b31      	ldr	r3, [pc, #196]	; (8003150 <Cross_Collision+0x224>)
 800308c:	789b      	ldrb	r3, [r3, #2]
 800308e:	2b4c      	cmp	r3, #76	; 0x4c
 8003090:	f040 8082 	bne.w	8003198 <Cross_Collision+0x26c>
 8003094:	4b2e      	ldr	r3, [pc, #184]	; (8003150 <Cross_Collision+0x224>)
 8003096:	78db      	ldrb	r3, [r3, #3]
 8003098:	2b32      	cmp	r3, #50	; 0x32
 800309a:	d97d      	bls.n	8003198 <Cross_Collision+0x26c>
 800309c:	2301      	movs	r3, #1
 800309e:	e081      	b.n	80031a4 <Cross_Collision+0x278>
		if((piratePos[0]=='L' && piratePos[1]=='M') || (piratePos[0]=='M' && piratePos[1]=='L')){ if(piratePos[3]<60) return 1;}
 80030a0:	e07a      	b.n	8003198 <Cross_Collision+0x26c>
	}
	else if((myPos=='L' && nextPos=='M') || (myPos=='M' && nextPos=='L'))
 80030a2:	79fb      	ldrb	r3, [r7, #7]
 80030a4:	2b4c      	cmp	r3, #76	; 0x4c
 80030a6:	d102      	bne.n	80030ae <Cross_Collision+0x182>
 80030a8:	79bb      	ldrb	r3, [r7, #6]
 80030aa:	2b4d      	cmp	r3, #77	; 0x4d
 80030ac:	d005      	beq.n	80030ba <Cross_Collision+0x18e>
 80030ae:	79fb      	ldrb	r3, [r7, #7]
 80030b0:	2b4d      	cmp	r3, #77	; 0x4d
 80030b2:	d12f      	bne.n	8003114 <Cross_Collision+0x1e8>
 80030b4:	79bb      	ldrb	r3, [r7, #6]
 80030b6:	2b4c      	cmp	r3, #76	; 0x4c
 80030b8:	d12c      	bne.n	8003114 <Cross_Collision+0x1e8>
	{
		if((piratePos[0]=='K' && piratePos[1]=='N') || (piratePos[0]=='N' && piratePos[1]=='K')){ if(piratePos[3]<60) return 1;}
 80030ba:	4b25      	ldr	r3, [pc, #148]	; (8003150 <Cross_Collision+0x224>)
 80030bc:	781b      	ldrb	r3, [r3, #0]
 80030be:	2b4b      	cmp	r3, #75	; 0x4b
 80030c0:	d103      	bne.n	80030ca <Cross_Collision+0x19e>
 80030c2:	4b23      	ldr	r3, [pc, #140]	; (8003150 <Cross_Collision+0x224>)
 80030c4:	785b      	ldrb	r3, [r3, #1]
 80030c6:	2b4e      	cmp	r3, #78	; 0x4e
 80030c8:	d007      	beq.n	80030da <Cross_Collision+0x1ae>
 80030ca:	4b21      	ldr	r3, [pc, #132]	; (8003150 <Cross_Collision+0x224>)
 80030cc:	781b      	ldrb	r3, [r3, #0]
 80030ce:	2b4e      	cmp	r3, #78	; 0x4e
 80030d0:	d109      	bne.n	80030e6 <Cross_Collision+0x1ba>
 80030d2:	4b1f      	ldr	r3, [pc, #124]	; (8003150 <Cross_Collision+0x224>)
 80030d4:	785b      	ldrb	r3, [r3, #1]
 80030d6:	2b4b      	cmp	r3, #75	; 0x4b
 80030d8:	d105      	bne.n	80030e6 <Cross_Collision+0x1ba>
 80030da:	4b1d      	ldr	r3, [pc, #116]	; (8003150 <Cross_Collision+0x224>)
 80030dc:	78db      	ldrb	r3, [r3, #3]
 80030de:	2b3b      	cmp	r3, #59	; 0x3b
 80030e0:	d817      	bhi.n	8003112 <Cross_Collision+0x1e6>
 80030e2:	2301      	movs	r3, #1
 80030e4:	e05e      	b.n	80031a4 <Cross_Collision+0x278>
		else if((piratePos[1]=='K' && piratePos[2]=='N') || (piratePos[1]=='N' && piratePos[12]=='K')){ if(piratePos[3]>50) return 1;}
 80030e6:	4b1a      	ldr	r3, [pc, #104]	; (8003150 <Cross_Collision+0x224>)
 80030e8:	785b      	ldrb	r3, [r3, #1]
 80030ea:	2b4b      	cmp	r3, #75	; 0x4b
 80030ec:	d103      	bne.n	80030f6 <Cross_Collision+0x1ca>
 80030ee:	4b18      	ldr	r3, [pc, #96]	; (8003150 <Cross_Collision+0x224>)
 80030f0:	789b      	ldrb	r3, [r3, #2]
 80030f2:	2b4e      	cmp	r3, #78	; 0x4e
 80030f4:	d007      	beq.n	8003106 <Cross_Collision+0x1da>
 80030f6:	4b16      	ldr	r3, [pc, #88]	; (8003150 <Cross_Collision+0x224>)
 80030f8:	785b      	ldrb	r3, [r3, #1]
 80030fa:	2b4e      	cmp	r3, #78	; 0x4e
 80030fc:	d14e      	bne.n	800319c <Cross_Collision+0x270>
 80030fe:	4b14      	ldr	r3, [pc, #80]	; (8003150 <Cross_Collision+0x224>)
 8003100:	7b1b      	ldrb	r3, [r3, #12]
 8003102:	2b4b      	cmp	r3, #75	; 0x4b
 8003104:	d14a      	bne.n	800319c <Cross_Collision+0x270>
 8003106:	4b12      	ldr	r3, [pc, #72]	; (8003150 <Cross_Collision+0x224>)
 8003108:	78db      	ldrb	r3, [r3, #3]
 800310a:	2b32      	cmp	r3, #50	; 0x32
 800310c:	d946      	bls.n	800319c <Cross_Collision+0x270>
 800310e:	2301      	movs	r3, #1
 8003110:	e048      	b.n	80031a4 <Cross_Collision+0x278>
		if((piratePos[0]=='K' && piratePos[1]=='N') || (piratePos[0]=='N' && piratePos[1]=='K')){ if(piratePos[3]<60) return 1;}
 8003112:	e043      	b.n	800319c <Cross_Collision+0x270>
	}
	/**************************************************************************/


	/********************************PS, QR kereszteződés**********************/
	else if((myPos=='P' && nextPos=='S') || (myPos=='S' && nextPos=='P'))
 8003114:	79fb      	ldrb	r3, [r7, #7]
 8003116:	2b50      	cmp	r3, #80	; 0x50
 8003118:	d102      	bne.n	8003120 <Cross_Collision+0x1f4>
 800311a:	79bb      	ldrb	r3, [r7, #6]
 800311c:	2b53      	cmp	r3, #83	; 0x53
 800311e:	d005      	beq.n	800312c <Cross_Collision+0x200>
 8003120:	79fb      	ldrb	r3, [r7, #7]
 8003122:	2b53      	cmp	r3, #83	; 0x53
 8003124:	d116      	bne.n	8003154 <Cross_Collision+0x228>
 8003126:	79bb      	ldrb	r3, [r7, #6]
 8003128:	2b50      	cmp	r3, #80	; 0x50
 800312a:	d113      	bne.n	8003154 <Cross_Collision+0x228>
	{
		if((piratePos[0]=='Q' && piratePos[1]=='R') || (piratePos[0]=='R' && piratePos[1]=='Q')) return 1;
 800312c:	4b08      	ldr	r3, [pc, #32]	; (8003150 <Cross_Collision+0x224>)
 800312e:	781b      	ldrb	r3, [r3, #0]
 8003130:	2b51      	cmp	r3, #81	; 0x51
 8003132:	d103      	bne.n	800313c <Cross_Collision+0x210>
 8003134:	4b06      	ldr	r3, [pc, #24]	; (8003150 <Cross_Collision+0x224>)
 8003136:	785b      	ldrb	r3, [r3, #1]
 8003138:	2b52      	cmp	r3, #82	; 0x52
 800313a:	d007      	beq.n	800314c <Cross_Collision+0x220>
 800313c:	4b04      	ldr	r3, [pc, #16]	; (8003150 <Cross_Collision+0x224>)
 800313e:	781b      	ldrb	r3, [r3, #0]
 8003140:	2b52      	cmp	r3, #82	; 0x52
 8003142:	d12d      	bne.n	80031a0 <Cross_Collision+0x274>
 8003144:	4b02      	ldr	r3, [pc, #8]	; (8003150 <Cross_Collision+0x224>)
 8003146:	785b      	ldrb	r3, [r3, #1]
 8003148:	2b51      	cmp	r3, #81	; 0x51
 800314a:	d129      	bne.n	80031a0 <Cross_Collision+0x274>
 800314c:	2301      	movs	r3, #1
 800314e:	e029      	b.n	80031a4 <Cross_Collision+0x278>
 8003150:	200002b4 	.word	0x200002b4
	}
	else if((myPos=='Q' && nextPos=='R') || (myPos=='R' && nextPos=='Q'))
 8003154:	79fb      	ldrb	r3, [r7, #7]
 8003156:	2b51      	cmp	r3, #81	; 0x51
 8003158:	d102      	bne.n	8003160 <Cross_Collision+0x234>
 800315a:	79bb      	ldrb	r3, [r7, #6]
 800315c:	2b52      	cmp	r3, #82	; 0x52
 800315e:	d005      	beq.n	800316c <Cross_Collision+0x240>
 8003160:	79fb      	ldrb	r3, [r7, #7]
 8003162:	2b52      	cmp	r3, #82	; 0x52
 8003164:	d11d      	bne.n	80031a2 <Cross_Collision+0x276>
 8003166:	79bb      	ldrb	r3, [r7, #6]
 8003168:	2b51      	cmp	r3, #81	; 0x51
 800316a:	d11a      	bne.n	80031a2 <Cross_Collision+0x276>
	{
		if((piratePos[0]=='P' && piratePos[1]=='S') || (piratePos[0]=='S' && piratePos[1]=='P')) return 1;
 800316c:	4b10      	ldr	r3, [pc, #64]	; (80031b0 <Cross_Collision+0x284>)
 800316e:	781b      	ldrb	r3, [r3, #0]
 8003170:	2b50      	cmp	r3, #80	; 0x50
 8003172:	d103      	bne.n	800317c <Cross_Collision+0x250>
 8003174:	4b0e      	ldr	r3, [pc, #56]	; (80031b0 <Cross_Collision+0x284>)
 8003176:	785b      	ldrb	r3, [r3, #1]
 8003178:	2b53      	cmp	r3, #83	; 0x53
 800317a:	d007      	beq.n	800318c <Cross_Collision+0x260>
 800317c:	4b0c      	ldr	r3, [pc, #48]	; (80031b0 <Cross_Collision+0x284>)
 800317e:	781b      	ldrb	r3, [r3, #0]
 8003180:	2b53      	cmp	r3, #83	; 0x53
 8003182:	d10e      	bne.n	80031a2 <Cross_Collision+0x276>
 8003184:	4b0a      	ldr	r3, [pc, #40]	; (80031b0 <Cross_Collision+0x284>)
 8003186:	785b      	ldrb	r3, [r3, #1]
 8003188:	2b50      	cmp	r3, #80	; 0x50
 800318a:	d10a      	bne.n	80031a2 <Cross_Collision+0x276>
 800318c:	2301      	movs	r3, #1
 800318e:	e009      	b.n	80031a4 <Cross_Collision+0x278>
		if((piratePos[0]=='G' && piratePos[1]=='H') || (piratePos[0]=='H' && piratePos[1]=='G')){ if(piratePos[3]<60) return 1;}
 8003190:	bf00      	nop
 8003192:	e006      	b.n	80031a2 <Cross_Collision+0x276>
		if((piratePos[0]=='F' && piratePos[1]=='I') || (piratePos[0]=='I' && piratePos[1]=='F')){ if(piratePos[3]<60) return 1;}
 8003194:	bf00      	nop
 8003196:	e004      	b.n	80031a2 <Cross_Collision+0x276>
		if((piratePos[0]=='L' && piratePos[1]=='M') || (piratePos[0]=='M' && piratePos[1]=='L')){ if(piratePos[3]<60) return 1;}
 8003198:	bf00      	nop
 800319a:	e002      	b.n	80031a2 <Cross_Collision+0x276>
		if((piratePos[0]=='K' && piratePos[1]=='N') || (piratePos[0]=='N' && piratePos[1]=='K')){ if(piratePos[3]<60) return 1;}
 800319c:	bf00      	nop
 800319e:	e000      	b.n	80031a2 <Cross_Collision+0x276>
		if((piratePos[0]=='Q' && piratePos[1]=='R') || (piratePos[0]=='R' && piratePos[1]=='Q')) return 1;
 80031a0:	bf00      	nop
	}
	/**************************************************************************/
	return 0;
 80031a2:	2300      	movs	r3, #0
}
 80031a4:	4618      	mov	r0, r3
 80031a6:	370c      	adds	r7, #12
 80031a8:	46bd      	mov	sp, r7
 80031aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031ae:	4770      	bx	lr
 80031b0:	200002b4 	.word	0x200002b4
 80031b4:	00000000 	.word	0x00000000

080031b8 <Battery_Voltage_Compensate>:
float v=0;
//ha 1000 akkor a motor full csutkán megy előre
//ha -1000 akkor a motor full csutkán megy hátra

void Battery_Voltage_Compensate(ADC_HandleTypeDef *hadc_UNiMh,ADC_HandleTypeDef *hadc_ULiPo,UART_HandleTypeDef *huart_debugg)
{
 80031b8:	b580      	push	{r7, lr}
 80031ba:	b090      	sub	sp, #64	; 0x40
 80031bc:	af00      	add	r7, sp, #0
 80031be:	60f8      	str	r0, [r7, #12]
 80031c0:	60b9      	str	r1, [r7, #8]
 80031c2:	607a      	str	r2, [r7, #4]
	char msg[30];
	uint32_t raw=0;
 80031c4:	2300      	movs	r3, #0
 80031c6:	63fb      	str	r3, [r7, #60]	; 0x3c
	float bat;
	int i;

	//NiMh akku mérése
	for(i=0;i<20;i++)
 80031c8:	2300      	movs	r3, #0
 80031ca:	63bb      	str	r3, [r7, #56]	; 0x38
 80031cc:	e016      	b.n	80031fc <Battery_Voltage_Compensate+0x44>
	{
		HAL_ADC_Start(hadc_UNiMh);
 80031ce:	68f8      	ldr	r0, [r7, #12]
 80031d0:	f003 fbcc 	bl	800696c <HAL_ADC_Start>
		HAL_Delay(10);
 80031d4:	200a      	movs	r0, #10
 80031d6:	f003 fb61 	bl	800689c <HAL_Delay>
		HAL_ADC_PollForConversion(hadc_UNiMh,20);
 80031da:	2114      	movs	r1, #20
 80031dc:	68f8      	ldr	r0, [r7, #12]
 80031de:	f003 fc97 	bl	8006b10 <HAL_ADC_PollForConversion>
		HAL_Delay(10);
 80031e2:	200a      	movs	r0, #10
 80031e4:	f003 fb5a 	bl	800689c <HAL_Delay>
		raw += HAL_ADC_GetValue(hadc_UNiMh);
 80031e8:	68f8      	ldr	r0, [r7, #12]
 80031ea:	f003 fd1c 	bl	8006c26 <HAL_ADC_GetValue>
 80031ee:	4602      	mov	r2, r0
 80031f0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80031f2:	4413      	add	r3, r2
 80031f4:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(i=0;i<20;i++)
 80031f6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80031f8:	3301      	adds	r3, #1
 80031fa:	63bb      	str	r3, [r7, #56]	; 0x38
 80031fc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80031fe:	2b13      	cmp	r3, #19
 8003200:	dde5      	ble.n	80031ce <Battery_Voltage_Compensate+0x16>
	}
	bat=(float)raw * 0.00460575 / 20.0;//ez a mi feszültségünk V-ban
 8003202:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003204:	ee07 3a90 	vmov	s15, r3
 8003208:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800320c:	ee17 0a90 	vmov	r0, s15
 8003210:	f7fd f9ba 	bl	8000588 <__aeabi_f2d>
 8003214:	a37b      	add	r3, pc, #492	; (adr r3, 8003404 <Battery_Voltage_Compensate+0x24c>)
 8003216:	e9d3 2300 	ldrd	r2, r3, [r3]
 800321a:	f7fd fa0d 	bl	8000638 <__aeabi_dmul>
 800321e:	4602      	mov	r2, r0
 8003220:	460b      	mov	r3, r1
 8003222:	4610      	mov	r0, r2
 8003224:	4619      	mov	r1, r3
 8003226:	f04f 0200 	mov.w	r2, #0
 800322a:	4b71      	ldr	r3, [pc, #452]	; (80033f0 <Battery_Voltage_Compensate+0x238>)
 800322c:	f7fd fb2e 	bl	800088c <__aeabi_ddiv>
 8003230:	4602      	mov	r2, r0
 8003232:	460b      	mov	r3, r1
 8003234:	4610      	mov	r0, r2
 8003236:	4619      	mov	r1, r3
 8003238:	f7fd fcd6 	bl	8000be8 <__aeabi_d2f>
 800323c:	4603      	mov	r3, r0
 800323e:	637b      	str	r3, [r7, #52]	; 0x34
	sprintf(msg,"NiMh charge: %2.2f V \r\n", bat);
 8003240:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8003242:	f7fd f9a1 	bl	8000588 <__aeabi_f2d>
 8003246:	4602      	mov	r2, r0
 8003248:	460b      	mov	r3, r1
 800324a:	f107 0014 	add.w	r0, r7, #20
 800324e:	4969      	ldr	r1, [pc, #420]	; (80033f4 <Battery_Voltage_Compensate+0x23c>)
 8003250:	f009 fc7a 	bl	800cb48 <siprintf>
	HAL_UART_Transmit(huart_debugg, (uint8_t*) msg, strlen(msg),10);
 8003254:	f107 0314 	add.w	r3, r7, #20
 8003258:	4618      	mov	r0, r3
 800325a:	f7fc ffd9 	bl	8000210 <strlen>
 800325e:	4603      	mov	r3, r0
 8003260:	b29a      	uxth	r2, r3
 8003262:	f107 0114 	add.w	r1, r7, #20
 8003266:	230a      	movs	r3, #10
 8003268:	6878      	ldr	r0, [r7, #4]
 800326a:	f007 ff04 	bl	800b076 <HAL_UART_Transmit>

	if(bat)compensation=7.75/bat;
 800326e:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8003272:	eef5 7a40 	vcmp.f32	s15, #0.0
 8003276:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800327a:	d009      	beq.n	8003290 <Battery_Voltage_Compensate+0xd8>
 800327c:	eef1 6a0f 	vmov.f32	s13, #31	; 0x40f80000  7.750
 8003280:	ed97 7a0d 	vldr	s14, [r7, #52]	; 0x34
 8003284:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003288:	4b5b      	ldr	r3, [pc, #364]	; (80033f8 <Battery_Voltage_Compensate+0x240>)
 800328a:	edc3 7a00 	vstr	s15, [r3]
 800328e:	e003      	b.n	8003298 <Battery_Voltage_Compensate+0xe0>
	else compensation=1;
 8003290:	4b59      	ldr	r3, [pc, #356]	; (80033f8 <Battery_Voltage_Compensate+0x240>)
 8003292:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8003296:	601a      	str	r2, [r3, #0]

	if(bat < 7.2)
 8003298:	6b78      	ldr	r0, [r7, #52]	; 0x34
 800329a:	f7fd f975 	bl	8000588 <__aeabi_f2d>
 800329e:	a34e      	add	r3, pc, #312	; (adr r3, 80033d8 <Battery_Voltage_Compensate+0x220>)
 80032a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032a4:	f7fd fc3a 	bl	8000b1c <__aeabi_dcmplt>
 80032a8:	4603      	mov	r3, r0
 80032aa:	2b00      	cmp	r3, #0
 80032ac:	d010      	beq.n	80032d0 <Battery_Voltage_Compensate+0x118>
	{
		for(i=0;i<10;i++)
 80032ae:	2300      	movs	r3, #0
 80032b0:	63bb      	str	r3, [r7, #56]	; 0x38
 80032b2:	e00a      	b.n	80032ca <Battery_Voltage_Compensate+0x112>
		{
			LED_Y_TOGGLE;
 80032b4:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80032b8:	4850      	ldr	r0, [pc, #320]	; (80033fc <Battery_Voltage_Compensate+0x244>)
 80032ba:	f005 f9a2 	bl	8008602 <HAL_GPIO_TogglePin>
			HAL_Delay(200);
 80032be:	20c8      	movs	r0, #200	; 0xc8
 80032c0:	f003 faec 	bl	800689c <HAL_Delay>
		for(i=0;i<10;i++)
 80032c4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80032c6:	3301      	adds	r3, #1
 80032c8:	63bb      	str	r3, [r7, #56]	; 0x38
 80032ca:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80032cc:	2b09      	cmp	r3, #9
 80032ce:	ddf1      	ble.n	80032b4 <Battery_Voltage_Compensate+0xfc>
		}
	}

	//LiPo akku mérése
	raw=0;
 80032d0:	2300      	movs	r3, #0
 80032d2:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(i=0;i<20;i++)
 80032d4:	2300      	movs	r3, #0
 80032d6:	63bb      	str	r3, [r7, #56]	; 0x38
 80032d8:	e016      	b.n	8003308 <Battery_Voltage_Compensate+0x150>
	{
		HAL_ADC_Start(hadc_ULiPo);
 80032da:	68b8      	ldr	r0, [r7, #8]
 80032dc:	f003 fb46 	bl	800696c <HAL_ADC_Start>
		HAL_Delay(10);
 80032e0:	200a      	movs	r0, #10
 80032e2:	f003 fadb 	bl	800689c <HAL_Delay>
		HAL_ADC_PollForConversion(hadc_ULiPo,20);
 80032e6:	2114      	movs	r1, #20
 80032e8:	68b8      	ldr	r0, [r7, #8]
 80032ea:	f003 fc11 	bl	8006b10 <HAL_ADC_PollForConversion>
		HAL_Delay(10);
 80032ee:	200a      	movs	r0, #10
 80032f0:	f003 fad4 	bl	800689c <HAL_Delay>
		raw += HAL_ADC_GetValue(hadc_ULiPo);
 80032f4:	68b8      	ldr	r0, [r7, #8]
 80032f6:	f003 fc96 	bl	8006c26 <HAL_ADC_GetValue>
 80032fa:	4602      	mov	r2, r0
 80032fc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80032fe:	4413      	add	r3, r2
 8003300:	63fb      	str	r3, [r7, #60]	; 0x3c
	for(i=0;i<20;i++)
 8003302:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003304:	3301      	adds	r3, #1
 8003306:	63bb      	str	r3, [r7, #56]	; 0x38
 8003308:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800330a:	2b13      	cmp	r3, #19
 800330c:	dde5      	ble.n	80032da <Battery_Voltage_Compensate+0x122>

	}
	bat = (float)raw * 0.003241242 / 20.0 + 0.02;//ez a mi feszültségünk V-ban
 800330e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003310:	ee07 3a90 	vmov	s15, r3
 8003314:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003318:	ee17 0a90 	vmov	r0, s15
 800331c:	f7fd f934 	bl	8000588 <__aeabi_f2d>
 8003320:	a32f      	add	r3, pc, #188	; (adr r3, 80033e0 <Battery_Voltage_Compensate+0x228>)
 8003322:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003326:	f7fd f987 	bl	8000638 <__aeabi_dmul>
 800332a:	4602      	mov	r2, r0
 800332c:	460b      	mov	r3, r1
 800332e:	4610      	mov	r0, r2
 8003330:	4619      	mov	r1, r3
 8003332:	f04f 0200 	mov.w	r2, #0
 8003336:	4b2e      	ldr	r3, [pc, #184]	; (80033f0 <Battery_Voltage_Compensate+0x238>)
 8003338:	f7fd faa8 	bl	800088c <__aeabi_ddiv>
 800333c:	4602      	mov	r2, r0
 800333e:	460b      	mov	r3, r1
 8003340:	4610      	mov	r0, r2
 8003342:	4619      	mov	r1, r3
 8003344:	a328      	add	r3, pc, #160	; (adr r3, 80033e8 <Battery_Voltage_Compensate+0x230>)
 8003346:	e9d3 2300 	ldrd	r2, r3, [r3]
 800334a:	f7fc ffbf 	bl	80002cc <__adddf3>
 800334e:	4602      	mov	r2, r0
 8003350:	460b      	mov	r3, r1
 8003352:	4610      	mov	r0, r2
 8003354:	4619      	mov	r1, r3
 8003356:	f7fd fc47 	bl	8000be8 <__aeabi_d2f>
 800335a:	4603      	mov	r3, r0
 800335c:	637b      	str	r3, [r7, #52]	; 0x34
	sprintf(msg,"LiPo charge: %2.2f V \r\n", bat);
 800335e:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8003360:	f7fd f912 	bl	8000588 <__aeabi_f2d>
 8003364:	4602      	mov	r2, r0
 8003366:	460b      	mov	r3, r1
 8003368:	f107 0014 	add.w	r0, r7, #20
 800336c:	4924      	ldr	r1, [pc, #144]	; (8003400 <Battery_Voltage_Compensate+0x248>)
 800336e:	f009 fbeb 	bl	800cb48 <siprintf>
	HAL_UART_Transmit(huart_debugg, (uint8_t*)msg, strlen(msg),10);
 8003372:	f107 0314 	add.w	r3, r7, #20
 8003376:	4618      	mov	r0, r3
 8003378:	f7fc ff4a 	bl	8000210 <strlen>
 800337c:	4603      	mov	r3, r0
 800337e:	b29a      	uxth	r2, r3
 8003380:	f107 0114 	add.w	r1, r7, #20
 8003384:	230a      	movs	r3, #10
 8003386:	6878      	ldr	r0, [r7, #4]
 8003388:	f007 fe75 	bl	800b076 <HAL_UART_Transmit>

	/**/
	if(bat < 10)
 800338c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8003390:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8003394:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003398:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800339c:	d510      	bpl.n	80033c0 <Battery_Voltage_Compensate+0x208>
	{
		for(i=0;i<20;i++)
 800339e:	2300      	movs	r3, #0
 80033a0:	63bb      	str	r3, [r7, #56]	; 0x38
 80033a2:	e00a      	b.n	80033ba <Battery_Voltage_Compensate+0x202>
		{
			LED_Y_TOGGLE;
 80033a4:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80033a8:	4814      	ldr	r0, [pc, #80]	; (80033fc <Battery_Voltage_Compensate+0x244>)
 80033aa:	f005 f92a 	bl	8008602 <HAL_GPIO_TogglePin>
			HAL_Delay(200);
 80033ae:	20c8      	movs	r0, #200	; 0xc8
 80033b0:	f003 fa74 	bl	800689c <HAL_Delay>
		for(i=0;i<20;i++)
 80033b4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80033b6:	3301      	adds	r3, #1
 80033b8:	63bb      	str	r3, [r7, #56]	; 0x38
 80033ba:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80033bc:	2b13      	cmp	r3, #19
 80033be:	ddf1      	ble.n	80033a4 <Battery_Voltage_Compensate+0x1ec>
		}
	}

	LED_Y(0);
 80033c0:	2201      	movs	r2, #1
 80033c2:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80033c6:	480d      	ldr	r0, [pc, #52]	; (80033fc <Battery_Voltage_Compensate+0x244>)
 80033c8:	f005 f902 	bl	80085d0 <HAL_GPIO_WritePin>

}
 80033cc:	bf00      	nop
 80033ce:	3740      	adds	r7, #64	; 0x40
 80033d0:	46bd      	mov	sp, r7
 80033d2:	bd80      	pop	{r7, pc}
 80033d4:	f3af 8000 	nop.w
 80033d8:	cccccccd 	.word	0xcccccccd
 80033dc:	401ccccc 	.word	0x401ccccc
 80033e0:	8c6df334 	.word	0x8c6df334
 80033e4:	3f6a8d60 	.word	0x3f6a8d60
 80033e8:	47ae147b 	.word	0x47ae147b
 80033ec:	3f947ae1 	.word	0x3f947ae1
 80033f0:	40340000 	.word	0x40340000
 80033f4:	080105fc 	.word	0x080105fc
 80033f8:	20000018 	.word	0x20000018
 80033fc:	40020400 	.word	0x40020400
 8003400:	08010614 	.word	0x08010614
 8003404:	99fa11a9 	.word	0x99fa11a9
 8003408:	3f72dd7a 	.word	0x3f72dd7a
 800340c:	00000000 	.word	0x00000000

08003410 <Measure_Velocity_Task>:

void Measure_Velocity_Task(TIM_HandleTypeDef *htim_encoder,uint32_t tick, uint32_t period)
{
 8003410:	b5b0      	push	{r4, r5, r7, lr}
 8003412:	b086      	sub	sp, #24
 8003414:	af00      	add	r7, sp, #0
 8003416:	60f8      	str	r0, [r7, #12]
 8003418:	60b9      	str	r1, [r7, #8]
 800341a:	607a      	str	r2, [r7, #4]
	static uint32_t tick_prev=0;
	static uint32_t measure_v_task_tick=4;
	static float alpha=0.3;
	static float invalpha=0.7;
	float v_uj=0;
 800341c:	f04f 0300 	mov.w	r3, #0
 8003420:	617b      	str	r3, [r7, #20]

	if(measure_v_task_tick>tick) return;
 8003422:	4b31      	ldr	r3, [pc, #196]	; (80034e8 <Measure_Velocity_Task+0xd8>)
 8003424:	681b      	ldr	r3, [r3, #0]
 8003426:	68ba      	ldr	r2, [r7, #8]
 8003428:	429a      	cmp	r2, r3
 800342a:	d354      	bcc.n	80034d6 <Measure_Velocity_Task+0xc6>
	measure_v_task_tick= tick + period;
 800342c:	68ba      	ldr	r2, [r7, #8]
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	4413      	add	r3, r2
 8003432:	4a2d      	ldr	r2, [pc, #180]	; (80034e8 <Measure_Velocity_Task+0xd8>)
 8003434:	6013      	str	r3, [r2, #0]
	if(!tick_prev)
 8003436:	4b2d      	ldr	r3, [pc, #180]	; (80034ec <Measure_Velocity_Task+0xdc>)
 8003438:	681b      	ldr	r3, [r3, #0]
 800343a:	2b00      	cmp	r3, #0
 800343c:	d103      	bne.n	8003446 <Measure_Velocity_Task+0x36>
	{
		tick_prev=tick;
 800343e:	4a2b      	ldr	r2, [pc, #172]	; (80034ec <Measure_Velocity_Task+0xdc>)
 8003440:	68bb      	ldr	r3, [r7, #8]
 8003442:	6013      	str	r3, [r2, #0]
		return;
 8003444:	e048      	b.n	80034d8 <Measure_Velocity_Task+0xc8>
	}
	v_uj =((float) 0x8000 - (float) __HAL_TIM_GET_COUNTER(htim_encoder))*7.49/(float)period; //mm/s dimenzió
 8003446:	68fb      	ldr	r3, [r7, #12]
 8003448:	681b      	ldr	r3, [r3, #0]
 800344a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800344c:	ee07 3a90 	vmov	s15, r3
 8003450:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003454:	ed9f 7a26 	vldr	s14, [pc, #152]	; 80034f0 <Measure_Velocity_Task+0xe0>
 8003458:	ee77 7a67 	vsub.f32	s15, s14, s15
 800345c:	ee17 0a90 	vmov	r0, s15
 8003460:	f7fd f892 	bl	8000588 <__aeabi_f2d>
 8003464:	a31e      	add	r3, pc, #120	; (adr r3, 80034e0 <Measure_Velocity_Task+0xd0>)
 8003466:	e9d3 2300 	ldrd	r2, r3, [r3]
 800346a:	f7fd f8e5 	bl	8000638 <__aeabi_dmul>
 800346e:	4602      	mov	r2, r0
 8003470:	460b      	mov	r3, r1
 8003472:	4614      	mov	r4, r2
 8003474:	461d      	mov	r5, r3
 8003476:	687b      	ldr	r3, [r7, #4]
 8003478:	ee07 3a90 	vmov	s15, r3
 800347c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003480:	ee17 0a90 	vmov	r0, s15
 8003484:	f7fd f880 	bl	8000588 <__aeabi_f2d>
 8003488:	4602      	mov	r2, r0
 800348a:	460b      	mov	r3, r1
 800348c:	4620      	mov	r0, r4
 800348e:	4629      	mov	r1, r5
 8003490:	f7fd f9fc 	bl	800088c <__aeabi_ddiv>
 8003494:	4602      	mov	r2, r0
 8003496:	460b      	mov	r3, r1
 8003498:	4610      	mov	r0, r2
 800349a:	4619      	mov	r1, r3
 800349c:	f7fd fba4 	bl	8000be8 <__aeabi_d2f>
 80034a0:	4603      	mov	r3, r0
 80034a2:	617b      	str	r3, [r7, #20]
	TIM8->CNT=0x8000;
 80034a4:	4b13      	ldr	r3, [pc, #76]	; (80034f4 <Measure_Velocity_Task+0xe4>)
 80034a6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80034aa:	625a      	str	r2, [r3, #36]	; 0x24
	//tick_prev=tick;
	//exponenciális szűrés
	v = alpha*(float)v_uj + invalpha*v;
 80034ac:	4b12      	ldr	r3, [pc, #72]	; (80034f8 <Measure_Velocity_Task+0xe8>)
 80034ae:	ed93 7a00 	vldr	s14, [r3]
 80034b2:	edd7 7a05 	vldr	s15, [r7, #20]
 80034b6:	ee27 7a27 	vmul.f32	s14, s14, s15
 80034ba:	4b10      	ldr	r3, [pc, #64]	; (80034fc <Measure_Velocity_Task+0xec>)
 80034bc:	edd3 6a00 	vldr	s13, [r3]
 80034c0:	4b0f      	ldr	r3, [pc, #60]	; (8003500 <Measure_Velocity_Task+0xf0>)
 80034c2:	edd3 7a00 	vldr	s15, [r3]
 80034c6:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80034ca:	ee77 7a27 	vadd.f32	s15, s14, s15
 80034ce:	4b0c      	ldr	r3, [pc, #48]	; (8003500 <Measure_Velocity_Task+0xf0>)
 80034d0:	edc3 7a00 	vstr	s15, [r3]
 80034d4:	e000      	b.n	80034d8 <Measure_Velocity_Task+0xc8>
	if(measure_v_task_tick>tick) return;
 80034d6:	bf00      	nop
}
 80034d8:	3718      	adds	r7, #24
 80034da:	46bd      	mov	sp, r7
 80034dc:	bdb0      	pop	{r4, r5, r7, pc}
 80034de:	bf00      	nop
 80034e0:	8f5c28f6 	.word	0x8f5c28f6
 80034e4:	401df5c2 	.word	0x401df5c2
 80034e8:	2000001c 	.word	0x2000001c
 80034ec:	20000620 	.word	0x20000620
 80034f0:	47000000 	.word	0x47000000
 80034f4:	40010400 	.word	0x40010400
 80034f8:	20000020 	.word	0x20000020
 80034fc:	20000024 	.word	0x20000024
 8003500:	2000061c 	.word	0x2000061c
 8003504:	00000000 	.word	0x00000000

08003508 <Motor_Drive_Task>:

void Motor_Drive_Task(TIM_HandleTypeDef *htim_motor, UART_HandleTypeDef *huart, uint32_t tick, uint32_t period) //DUTY paramtert kiszedtem -> változtassuk a globális változót
{
 8003508:	b5b0      	push	{r4, r5, r7, lr}
 800350a:	b086      	sub	sp, #24
 800350c:	af00      	add	r7, sp, #0
 800350e:	60f8      	str	r0, [r7, #12]
 8003510:	60b9      	str	r1, [r7, #8]
 8003512:	607a      	str	r2, [r7, #4]
 8003514:	603b      	str	r3, [r7, #0]
	static uint32_t motor_drive_task_tick=5;
	static float f,u=0;

	int32_t ccr1;
	int32_t ccr2;
	if(motor_drive_task_tick>tick) return;
 8003516:	4ba4      	ldr	r3, [pc, #656]	; (80037a8 <Motor_Drive_Task+0x2a0>)
 8003518:	681b      	ldr	r3, [r3, #0]
 800351a:	687a      	ldr	r2, [r7, #4]
 800351c:	429a      	cmp	r2, r3
 800351e:	f0c0 8133 	bcc.w	8003788 <Motor_Drive_Task+0x280>
	motor_drive_task_tick= tick + period;
 8003522:	687a      	ldr	r2, [r7, #4]
 8003524:	683b      	ldr	r3, [r7, #0]
 8003526:	4413      	add	r3, r2
 8003528:	4a9f      	ldr	r2, [pc, #636]	; (80037a8 <Motor_Drive_Task+0x2a0>)
 800352a:	6013      	str	r3, [r2, #0]

	if(motorEnRemote && motorEnLineOk) //ha nem nyomtunk vészstopot és az akkuk is rendben vannak akkor pöröghet a motor
 800352c:	4b9f      	ldr	r3, [pc, #636]	; (80037ac <Motor_Drive_Task+0x2a4>)
 800352e:	781b      	ldrb	r3, [r3, #0]
 8003530:	2b00      	cmp	r3, #0
 8003532:	f000 80da 	beq.w	80036ea <Motor_Drive_Task+0x1e2>
 8003536:	4b9e      	ldr	r3, [pc, #632]	; (80037b0 <Motor_Drive_Task+0x2a8>)
 8003538:	781b      	ldrb	r3, [r3, #0]
 800353a:	2b00      	cmp	r3, #0
 800353c:	f000 80d5 	beq.w	80036ea <Motor_Drive_Task+0x1e2>
	{
		//az u paraméter a bevatkozó jel minusz holtásávot adja meg
		u= KC * (v_ref - v) * compensation + f;
 8003540:	4b9c      	ldr	r3, [pc, #624]	; (80037b4 <Motor_Drive_Task+0x2ac>)
 8003542:	ed93 7a00 	vldr	s14, [r3]
 8003546:	4b9c      	ldr	r3, [pc, #624]	; (80037b8 <Motor_Drive_Task+0x2b0>)
 8003548:	edd3 7a00 	vldr	s15, [r3]
 800354c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8003550:	ee17 0a90 	vmov	r0, s15
 8003554:	f7fd f818 	bl	8000588 <__aeabi_f2d>
 8003558:	a38d      	add	r3, pc, #564	; (adr r3, 8003790 <Motor_Drive_Task+0x288>)
 800355a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800355e:	f7fd f86b 	bl	8000638 <__aeabi_dmul>
 8003562:	4602      	mov	r2, r0
 8003564:	460b      	mov	r3, r1
 8003566:	4614      	mov	r4, r2
 8003568:	461d      	mov	r5, r3
 800356a:	4b94      	ldr	r3, [pc, #592]	; (80037bc <Motor_Drive_Task+0x2b4>)
 800356c:	681b      	ldr	r3, [r3, #0]
 800356e:	4618      	mov	r0, r3
 8003570:	f7fd f80a 	bl	8000588 <__aeabi_f2d>
 8003574:	4602      	mov	r2, r0
 8003576:	460b      	mov	r3, r1
 8003578:	4620      	mov	r0, r4
 800357a:	4629      	mov	r1, r5
 800357c:	f7fd f85c 	bl	8000638 <__aeabi_dmul>
 8003580:	4602      	mov	r2, r0
 8003582:	460b      	mov	r3, r1
 8003584:	4614      	mov	r4, r2
 8003586:	461d      	mov	r5, r3
 8003588:	4b8d      	ldr	r3, [pc, #564]	; (80037c0 <Motor_Drive_Task+0x2b8>)
 800358a:	681b      	ldr	r3, [r3, #0]
 800358c:	4618      	mov	r0, r3
 800358e:	f7fc fffb 	bl	8000588 <__aeabi_f2d>
 8003592:	4602      	mov	r2, r0
 8003594:	460b      	mov	r3, r1
 8003596:	4620      	mov	r0, r4
 8003598:	4629      	mov	r1, r5
 800359a:	f7fc fe97 	bl	80002cc <__adddf3>
 800359e:	4602      	mov	r2, r0
 80035a0:	460b      	mov	r3, r1
 80035a2:	4610      	mov	r0, r2
 80035a4:	4619      	mov	r1, r3
 80035a6:	f7fd fb1f 	bl	8000be8 <__aeabi_d2f>
 80035aa:	4603      	mov	r3, r0
 80035ac:	4a85      	ldr	r2, [pc, #532]	; (80037c4 <Motor_Drive_Task+0x2bc>)
 80035ae:	6013      	str	r3, [r2, #0]
		if(u>880) u=880;
 80035b0:	4b84      	ldr	r3, [pc, #528]	; (80037c4 <Motor_Drive_Task+0x2bc>)
 80035b2:	edd3 7a00 	vldr	s15, [r3]
 80035b6:	ed9f 7a84 	vldr	s14, [pc, #528]	; 80037c8 <Motor_Drive_Task+0x2c0>
 80035ba:	eef4 7ac7 	vcmpe.f32	s15, s14
 80035be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80035c2:	dd03      	ble.n	80035cc <Motor_Drive_Task+0xc4>
 80035c4:	4b7f      	ldr	r3, [pc, #508]	; (80037c4 <Motor_Drive_Task+0x2bc>)
 80035c6:	4a81      	ldr	r2, [pc, #516]	; (80037cc <Motor_Drive_Task+0x2c4>)
 80035c8:	601a      	str	r2, [r3, #0]
 80035ca:	e00c      	b.n	80035e6 <Motor_Drive_Task+0xde>
		else if(u<-500)u=-500;
 80035cc:	4b7d      	ldr	r3, [pc, #500]	; (80037c4 <Motor_Drive_Task+0x2bc>)
 80035ce:	edd3 7a00 	vldr	s15, [r3]
 80035d2:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 80037d0 <Motor_Drive_Task+0x2c8>
 80035d6:	eef4 7ac7 	vcmpe.f32	s15, s14
 80035da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80035de:	d502      	bpl.n	80035e6 <Motor_Drive_Task+0xde>
 80035e0:	4b78      	ldr	r3, [pc, #480]	; (80037c4 <Motor_Drive_Task+0x2bc>)
 80035e2:	4a7c      	ldr	r2, [pc, #496]	; (80037d4 <Motor_Drive_Task+0x2cc>)
 80035e4:	601a      	str	r2, [r3, #0]
		f = ZD*f + (1-ZD)*u;
 80035e6:	4b76      	ldr	r3, [pc, #472]	; (80037c0 <Motor_Drive_Task+0x2b8>)
 80035e8:	681b      	ldr	r3, [r3, #0]
 80035ea:	4618      	mov	r0, r3
 80035ec:	f7fc ffcc 	bl	8000588 <__aeabi_f2d>
 80035f0:	a369      	add	r3, pc, #420	; (adr r3, 8003798 <Motor_Drive_Task+0x290>)
 80035f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80035f6:	f7fd f81f 	bl	8000638 <__aeabi_dmul>
 80035fa:	4602      	mov	r2, r0
 80035fc:	460b      	mov	r3, r1
 80035fe:	4614      	mov	r4, r2
 8003600:	461d      	mov	r5, r3
 8003602:	4b70      	ldr	r3, [pc, #448]	; (80037c4 <Motor_Drive_Task+0x2bc>)
 8003604:	681b      	ldr	r3, [r3, #0]
 8003606:	4618      	mov	r0, r3
 8003608:	f7fc ffbe 	bl	8000588 <__aeabi_f2d>
 800360c:	a364      	add	r3, pc, #400	; (adr r3, 80037a0 <Motor_Drive_Task+0x298>)
 800360e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003612:	f7fd f811 	bl	8000638 <__aeabi_dmul>
 8003616:	4602      	mov	r2, r0
 8003618:	460b      	mov	r3, r1
 800361a:	4620      	mov	r0, r4
 800361c:	4629      	mov	r1, r5
 800361e:	f7fc fe55 	bl	80002cc <__adddf3>
 8003622:	4602      	mov	r2, r0
 8003624:	460b      	mov	r3, r1
 8003626:	4610      	mov	r0, r2
 8003628:	4619      	mov	r1, r3
 800362a:	f7fd fadd 	bl	8000be8 <__aeabi_d2f>
 800362e:	4603      	mov	r3, r0
 8003630:	4a63      	ldr	r2, [pc, #396]	; (80037c0 <Motor_Drive_Task+0x2b8>)
 8003632:	6013      	str	r3, [r2, #0]
		//ez alapján a kiadandó kitöltési tényező
		if(u>0) motorDuty=(int)u+70;
 8003634:	4b63      	ldr	r3, [pc, #396]	; (80037c4 <Motor_Drive_Task+0x2bc>)
 8003636:	edd3 7a00 	vldr	s15, [r3]
 800363a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800363e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003642:	dd0a      	ble.n	800365a <Motor_Drive_Task+0x152>
 8003644:	4b5f      	ldr	r3, [pc, #380]	; (80037c4 <Motor_Drive_Task+0x2bc>)
 8003646:	edd3 7a00 	vldr	s15, [r3]
 800364a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800364e:	ee17 3a90 	vmov	r3, s15
 8003652:	3346      	adds	r3, #70	; 0x46
 8003654:	4a60      	ldr	r2, [pc, #384]	; (80037d8 <Motor_Drive_Task+0x2d0>)
 8003656:	6013      	str	r3, [r2, #0]
 8003658:	e01b      	b.n	8003692 <Motor_Drive_Task+0x18a>
		else if(u<0) motorDuty=(int)u-70;
 800365a:	4b5a      	ldr	r3, [pc, #360]	; (80037c4 <Motor_Drive_Task+0x2bc>)
 800365c:	edd3 7a00 	vldr	s15, [r3]
 8003660:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8003664:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003668:	d50a      	bpl.n	8003680 <Motor_Drive_Task+0x178>
 800366a:	4b56      	ldr	r3, [pc, #344]	; (80037c4 <Motor_Drive_Task+0x2bc>)
 800366c:	edd3 7a00 	vldr	s15, [r3]
 8003670:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003674:	ee17 3a90 	vmov	r3, s15
 8003678:	3b46      	subs	r3, #70	; 0x46
 800367a:	4a57      	ldr	r2, [pc, #348]	; (80037d8 <Motor_Drive_Task+0x2d0>)
 800367c:	6013      	str	r3, [r2, #0]
 800367e:	e008      	b.n	8003692 <Motor_Drive_Task+0x18a>
		else motorDuty=(int)u;
 8003680:	4b50      	ldr	r3, [pc, #320]	; (80037c4 <Motor_Drive_Task+0x2bc>)
 8003682:	edd3 7a00 	vldr	s15, [r3]
 8003686:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800368a:	ee17 2a90 	vmov	r2, s15
 800368e:	4b52      	ldr	r3, [pc, #328]	; (80037d8 <Motor_Drive_Task+0x2d0>)
 8003690:	601a      	str	r2, [r3, #0]
		MOTOR_EN(1);
 8003692:	2201      	movs	r2, #1
 8003694:	2140      	movs	r1, #64	; 0x40
 8003696:	4851      	ldr	r0, [pc, #324]	; (80037dc <Motor_Drive_Task+0x2d4>)
 8003698:	f004 ff9a 	bl	80085d0 <HAL_GPIO_WritePin>
		if(fabs(v_ref)<70 && fabs(v)<70)
 800369c:	4b45      	ldr	r3, [pc, #276]	; (80037b4 <Motor_Drive_Task+0x2ac>)
 800369e:	edd3 7a00 	vldr	s15, [r3]
 80036a2:	eef0 7ae7 	vabs.f32	s15, s15
 80036a6:	ed9f 7a4e 	vldr	s14, [pc, #312]	; 80037e0 <Motor_Drive_Task+0x2d8>
 80036aa:	eef4 7ac7 	vcmpe.f32	s15, s14
 80036ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036b2:	d527      	bpl.n	8003704 <Motor_Drive_Task+0x1fc>
 80036b4:	4b40      	ldr	r3, [pc, #256]	; (80037b8 <Motor_Drive_Task+0x2b0>)
 80036b6:	edd3 7a00 	vldr	s15, [r3]
 80036ba:	eef0 7ae7 	vabs.f32	s15, s15
 80036be:	ed9f 7a48 	vldr	s14, [pc, #288]	; 80037e0 <Motor_Drive_Task+0x2d8>
 80036c2:	eef4 7ac7 	vcmpe.f32	s15, s14
 80036c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036ca:	d400      	bmi.n	80036ce <Motor_Drive_Task+0x1c6>
 80036cc:	e01a      	b.n	8003704 <Motor_Drive_Task+0x1fc>
		{
			f=u=0;
 80036ce:	4b3d      	ldr	r3, [pc, #244]	; (80037c4 <Motor_Drive_Task+0x2bc>)
 80036d0:	f04f 0200 	mov.w	r2, #0
 80036d4:	601a      	str	r2, [r3, #0]
 80036d6:	4b3b      	ldr	r3, [pc, #236]	; (80037c4 <Motor_Drive_Task+0x2bc>)
 80036d8:	681b      	ldr	r3, [r3, #0]
 80036da:	4a39      	ldr	r2, [pc, #228]	; (80037c0 <Motor_Drive_Task+0x2b8>)
 80036dc:	6013      	str	r3, [r2, #0]
			MOTOR_EN(0); //amugy stop
 80036de:	2200      	movs	r2, #0
 80036e0:	2140      	movs	r1, #64	; 0x40
 80036e2:	483e      	ldr	r0, [pc, #248]	; (80037dc <Motor_Drive_Task+0x2d4>)
 80036e4:	f004 ff74 	bl	80085d0 <HAL_GPIO_WritePin>
		if(fabs(v_ref)<70 && fabs(v)<70)
 80036e8:	e00c      	b.n	8003704 <Motor_Drive_Task+0x1fc>
		}
	}
	else
	{	f=u=0;
 80036ea:	4b36      	ldr	r3, [pc, #216]	; (80037c4 <Motor_Drive_Task+0x2bc>)
 80036ec:	f04f 0200 	mov.w	r2, #0
 80036f0:	601a      	str	r2, [r3, #0]
 80036f2:	4b34      	ldr	r3, [pc, #208]	; (80037c4 <Motor_Drive_Task+0x2bc>)
 80036f4:	681b      	ldr	r3, [r3, #0]
 80036f6:	4a32      	ldr	r2, [pc, #200]	; (80037c0 <Motor_Drive_Task+0x2b8>)
 80036f8:	6013      	str	r3, [r2, #0]
		MOTOR_EN(0); //amugy stop
 80036fa:	2200      	movs	r2, #0
 80036fc:	2140      	movs	r1, #64	; 0x40
 80036fe:	4837      	ldr	r0, [pc, #220]	; (80037dc <Motor_Drive_Task+0x2d4>)
 8003700:	f004 ff66 	bl	80085d0 <HAL_GPIO_WritePin>
	}
	//A két érték amit irogatsz (TIM3->CCR1,CCR2) konkrét timer periféria regiszterek, nem feltétlen jó őket folyamatosan újraírni 10ms enként
	/**/
	if(mode==FAST && rxBuf[1]<1 && !leaveLineEnabled)
 8003704:	4b37      	ldr	r3, [pc, #220]	; (80037e4 <Motor_Drive_Task+0x2dc>)
 8003706:	781b      	ldrb	r3, [r3, #0]
 8003708:	2b3f      	cmp	r3, #63	; 0x3f
 800370a:	d110      	bne.n	800372e <Motor_Drive_Task+0x226>
 800370c:	4b36      	ldr	r3, [pc, #216]	; (80037e8 <Motor_Drive_Task+0x2e0>)
 800370e:	785b      	ldrb	r3, [r3, #1]
 8003710:	2b00      	cmp	r3, #0
 8003712:	d10c      	bne.n	800372e <Motor_Drive_Task+0x226>
 8003714:	4b35      	ldr	r3, [pc, #212]	; (80037ec <Motor_Drive_Task+0x2e4>)
 8003716:	781b      	ldrb	r3, [r3, #0]
 8003718:	2b00      	cmp	r3, #0
 800371a:	d108      	bne.n	800372e <Motor_Drive_Task+0x226>
	{
		TIM3->CCR1=499;
 800371c:	4b34      	ldr	r3, [pc, #208]	; (80037f0 <Motor_Drive_Task+0x2e8>)
 800371e:	f240 12f3 	movw	r2, #499	; 0x1f3
 8003722:	635a      	str	r2, [r3, #52]	; 0x34
		TIM3->CCR2=499;
 8003724:	4b32      	ldr	r3, [pc, #200]	; (80037f0 <Motor_Drive_Task+0x2e8>)
 8003726:	f240 12f3 	movw	r2, #499	; 0x1f3
 800372a:	639a      	str	r2, [r3, #56]	; 0x38
 800372c:	e027      	b.n	800377e <Motor_Drive_Task+0x276>
		//LED_Y_TOGGLE;
	}
	else if(motorDuty!=motorDutyPrev)//csak akkor írjuk át őket ha tényleg muszáj (ha változtak az előző taskhívás óta)
 800372e:	4b2a      	ldr	r3, [pc, #168]	; (80037d8 <Motor_Drive_Task+0x2d0>)
 8003730:	681a      	ldr	r2, [r3, #0]
 8003732:	4b30      	ldr	r3, [pc, #192]	; (80037f4 <Motor_Drive_Task+0x2ec>)
 8003734:	681b      	ldr	r3, [r3, #0]
 8003736:	429a      	cmp	r2, r3
 8003738:	d021      	beq.n	800377e <Motor_Drive_Task+0x276>
	{
		ccr2 = (motorDuty + 1000)/2-1;
 800373a:	4b27      	ldr	r3, [pc, #156]	; (80037d8 <Motor_Drive_Task+0x2d0>)
 800373c:	681b      	ldr	r3, [r3, #0]
 800373e:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8003742:	0fda      	lsrs	r2, r3, #31
 8003744:	4413      	add	r3, r2
 8003746:	105b      	asrs	r3, r3, #1
 8003748:	3b01      	subs	r3, #1
 800374a:	617b      	str	r3, [r7, #20]
		if(ccr2>950)ccr2=950;
 800374c:	697b      	ldr	r3, [r7, #20]
 800374e:	f240 32b6 	movw	r2, #950	; 0x3b6
 8003752:	4293      	cmp	r3, r2
 8003754:	dd02      	ble.n	800375c <Motor_Drive_Task+0x254>
 8003756:	f240 33b6 	movw	r3, #950	; 0x3b6
 800375a:	617b      	str	r3, [r7, #20]
		if(ccr2<-950)ccr2=-950;
 800375c:	697b      	ldr	r3, [r7, #20]
 800375e:	4a26      	ldr	r2, [pc, #152]	; (80037f8 <Motor_Drive_Task+0x2f0>)
 8003760:	4293      	cmp	r3, r2
 8003762:	da01      	bge.n	8003768 <Motor_Drive_Task+0x260>
 8003764:	4b24      	ldr	r3, [pc, #144]	; (80037f8 <Motor_Drive_Task+0x2f0>)
 8003766:	617b      	str	r3, [r7, #20]
		ccr1= 998-ccr2;
 8003768:	697b      	ldr	r3, [r7, #20]
 800376a:	f5c3 7379 	rsb	r3, r3, #996	; 0x3e4
 800376e:	3302      	adds	r3, #2
 8003770:	613b      	str	r3, [r7, #16]

		//2 Referencia megadása
		//Ezeket a loopba kéne változtatni folyamatosan, pwm-elinditas mashova kell majd

		TIM3->CCR1=ccr1;
 8003772:	4a1f      	ldr	r2, [pc, #124]	; (80037f0 <Motor_Drive_Task+0x2e8>)
 8003774:	693b      	ldr	r3, [r7, #16]
 8003776:	6353      	str	r3, [r2, #52]	; 0x34
		TIM3->CCR2=ccr2;
 8003778:	4a1d      	ldr	r2, [pc, #116]	; (80037f0 <Motor_Drive_Task+0x2e8>)
 800377a:	697b      	ldr	r3, [r7, #20]
 800377c:	6393      	str	r3, [r2, #56]	; 0x38
	}
	motorDutyPrev=motorDuty;
 800377e:	4b16      	ldr	r3, [pc, #88]	; (80037d8 <Motor_Drive_Task+0x2d0>)
 8003780:	681b      	ldr	r3, [r3, #0]
 8003782:	4a1c      	ldr	r2, [pc, #112]	; (80037f4 <Motor_Drive_Task+0x2ec>)
 8003784:	6013      	str	r3, [r2, #0]
 8003786:	e000      	b.n	800378a <Motor_Drive_Task+0x282>
	if(motor_drive_task_tick>tick) return;
 8003788:	bf00      	nop
}
 800378a:	3718      	adds	r7, #24
 800378c:	46bd      	mov	sp, r7
 800378e:	bdb0      	pop	{r4, r5, r7, pc}
 8003790:	30be0ded 	.word	0x30be0ded
 8003794:	3fd02a99 	.word	0x3fd02a99
 8003798:	9b3d07c8 	.word	0x9b3d07c8
 800379c:	3fef9f55 	.word	0x3fef9f55
 80037a0:	30be0e00 	.word	0x30be0e00
 80037a4:	3f882a99 	.word	0x3f882a99
 80037a8:	20000028 	.word	0x20000028
 80037ac:	20000afc 	.word	0x20000afc
 80037b0:	20000afd 	.word	0x20000afd
 80037b4:	20000298 	.word	0x20000298
 80037b8:	2000061c 	.word	0x2000061c
 80037bc:	20000018 	.word	0x20000018
 80037c0:	20000624 	.word	0x20000624
 80037c4:	20000628 	.word	0x20000628
 80037c8:	445c0000 	.word	0x445c0000
 80037cc:	445c0000 	.word	0x445c0000
 80037d0:	c3fa0000 	.word	0xc3fa0000
 80037d4:	c3fa0000 	.word	0xc3fa0000
 80037d8:	2000062c 	.word	0x2000062c
 80037dc:	40020400 	.word	0x40020400
 80037e0:	428c0000 	.word	0x428c0000
 80037e4:	20000296 	.word	0x20000296
 80037e8:	20000634 	.word	0x20000634
 80037ec:	2000029c 	.word	0x2000029c
 80037f0:	40000400 	.word	0x40000400
 80037f4:	20000630 	.word	0x20000630
 80037f8:	fffffc4a 	.word	0xfffffc4a

080037fc <G0_Read_Fast>:

uint16_t boostCnt=0;


uint8_t G0_Read_Fast(UART_HandleTypeDef *huart_stm,UART_HandleTypeDef *huart_debugg)
{
 80037fc:	b580      	push	{r7, lr}
 80037fe:	b084      	sub	sp, #16
 8003800:	af00      	add	r7, sp, #0
 8003802:	6078      	str	r0, [r7, #4]
 8003804:	6039      	str	r1, [r7, #0]

	uint8_t state=0;
 8003806:	2300      	movs	r3, #0
 8003808:	73fb      	strb	r3, [r7, #15]
	txBuf[0]=CMD_READ_FAST;
 800380a:	4b13      	ldr	r3, [pc, #76]	; (8003858 <G0_Read_Fast+0x5c>)
 800380c:	222a      	movs	r2, #42	; 0x2a
 800380e:	701a      	strb	r2, [r3, #0]
	HAL_UART_Transmit(huart_stm, txBuf,1, 2);
 8003810:	2302      	movs	r3, #2
 8003812:	2201      	movs	r2, #1
 8003814:	4910      	ldr	r1, [pc, #64]	; (8003858 <G0_Read_Fast+0x5c>)
 8003816:	6878      	ldr	r0, [r7, #4]
 8003818:	f007 fc2d 	bl	800b076 <HAL_UART_Transmit>
	state=HAL_UART_Receive(huart_stm, rxBuf, 8, 4);
 800381c:	2304      	movs	r3, #4
 800381e:	2208      	movs	r2, #8
 8003820:	490e      	ldr	r1, [pc, #56]	; (800385c <G0_Read_Fast+0x60>)
 8003822:	6878      	ldr	r0, [r7, #4]
 8003824:	f007 fcb9 	bl	800b19a <HAL_UART_Receive>
 8003828:	4603      	mov	r3, r0
 800382a:	73fb      	strb	r3, [r7, #15]
	motorEnLineOk=1; //ha van akkor mehet a szabályozás
 800382c:	4b0c      	ldr	r3, [pc, #48]	; (8003860 <G0_Read_Fast+0x64>)
 800382e:	2201      	movs	r2, #1
 8003830:	701a      	strb	r2, [r3, #0]
	if((state==HAL_OK)&&(rxBuf[0]==START_BYTE_FAST) && (rxBuf[7]==STOP_BYTE))//jöt adat a G0 tól és a keret is megfelelő
 8003832:	7bfb      	ldrb	r3, [r7, #15]
 8003834:	2b00      	cmp	r3, #0
 8003836:	d109      	bne.n	800384c <G0_Read_Fast+0x50>
 8003838:	4b08      	ldr	r3, [pc, #32]	; (800385c <G0_Read_Fast+0x60>)
 800383a:	781b      	ldrb	r3, [r3, #0]
 800383c:	2b41      	cmp	r3, #65	; 0x41
 800383e:	d105      	bne.n	800384c <G0_Read_Fast+0x50>
 8003840:	4b06      	ldr	r3, [pc, #24]	; (800385c <G0_Read_Fast+0x60>)
 8003842:	79db      	ldrb	r3, [r3, #7]
 8003844:	2b12      	cmp	r3, #18
 8003846:	d101      	bne.n	800384c <G0_Read_Fast+0x50>
	{
		return 0;
 8003848:	2300      	movs	r3, #0
 800384a:	e000      	b.n	800384e <G0_Read_Fast+0x52>
	}
	else //nem jött szabályos adat a G0-tól
	{
		return 1;
 800384c:	2301      	movs	r3, #1
	}
}
 800384e:	4618      	mov	r0, r3
 8003850:	3710      	adds	r7, #16
 8003852:	46bd      	mov	sp, r7
 8003854:	bd80      	pop	{r7, pc}
 8003856:	bf00      	nop
 8003858:	2000002c 	.word	0x2000002c
 800385c:	20000634 	.word	0x20000634
 8003860:	20000afd 	.word	0x20000afd

08003864 <G0_Read_Skill>:

uint8_t G0_Read_Skill(UART_HandleTypeDef *huart_stm,UART_HandleTypeDef *huart_debugg, uint8_t command)
{
 8003864:	b580      	push	{r7, lr}
 8003866:	b086      	sub	sp, #24
 8003868:	af00      	add	r7, sp, #0
 800386a:	60f8      	str	r0, [r7, #12]
 800386c:	60b9      	str	r1, [r7, #8]
 800386e:	4613      	mov	r3, r2
 8003870:	71fb      	strb	r3, [r7, #7]
	uint8_t state=0;
 8003872:	2300      	movs	r3, #0
 8003874:	75fb      	strb	r3, [r7, #23]
	txBuf[0]=command;
 8003876:	4a15      	ldr	r2, [pc, #84]	; (80038cc <G0_Read_Skill+0x68>)
 8003878:	79fb      	ldrb	r3, [r7, #7]
 800387a:	7013      	strb	r3, [r2, #0]
	HAL_UART_Transmit(huart_stm, txBuf,1, 2);
 800387c:	2302      	movs	r3, #2
 800387e:	2201      	movs	r2, #1
 8003880:	4912      	ldr	r1, [pc, #72]	; (80038cc <G0_Read_Skill+0x68>)
 8003882:	68f8      	ldr	r0, [r7, #12]
 8003884:	f007 fbf7 	bl	800b076 <HAL_UART_Transmit>
	state = HAL_UART_Receive(huart_stm, rxBuf, 10, 4);
 8003888:	2304      	movs	r3, #4
 800388a:	220a      	movs	r2, #10
 800388c:	4910      	ldr	r1, [pc, #64]	; (80038d0 <G0_Read_Skill+0x6c>)
 800388e:	68f8      	ldr	r0, [r7, #12]
 8003890:	f007 fc83 	bl	800b19a <HAL_UART_Receive>
 8003894:	4603      	mov	r3, r0
 8003896:	75fb      	strb	r3, [r7, #23]
	motorEnLineOk=1; //ha van akkor mehet a szabályozás
 8003898:	4b0e      	ldr	r3, [pc, #56]	; (80038d4 <G0_Read_Skill+0x70>)
 800389a:	2201      	movs	r2, #1
 800389c:	701a      	strb	r2, [r3, #0]
	if((state==HAL_OK)&&(rxBuf[0]==START_BYTE_SKILL_FORWARD || rxBuf[0]==START_BYTE_SKILL_REVERSE) && (rxBuf[9]==STOP_BYTE))//jöt adat a G0 tól és a keret is megfelelő
 800389e:	7dfb      	ldrb	r3, [r7, #23]
 80038a0:	2b00      	cmp	r3, #0
 80038a2:	d10d      	bne.n	80038c0 <G0_Read_Skill+0x5c>
 80038a4:	4b0a      	ldr	r3, [pc, #40]	; (80038d0 <G0_Read_Skill+0x6c>)
 80038a6:	781b      	ldrb	r3, [r3, #0]
 80038a8:	2b50      	cmp	r3, #80	; 0x50
 80038aa:	d003      	beq.n	80038b4 <G0_Read_Skill+0x50>
 80038ac:	4b08      	ldr	r3, [pc, #32]	; (80038d0 <G0_Read_Skill+0x6c>)
 80038ae:	781b      	ldrb	r3, [r3, #0]
 80038b0:	2ba8      	cmp	r3, #168	; 0xa8
 80038b2:	d105      	bne.n	80038c0 <G0_Read_Skill+0x5c>
 80038b4:	4b06      	ldr	r3, [pc, #24]	; (80038d0 <G0_Read_Skill+0x6c>)
 80038b6:	7a5b      	ldrb	r3, [r3, #9]
 80038b8:	2b12      	cmp	r3, #18
 80038ba:	d101      	bne.n	80038c0 <G0_Read_Skill+0x5c>
	{
		return 0;
 80038bc:	2300      	movs	r3, #0
 80038be:	e000      	b.n	80038c2 <G0_Read_Skill+0x5e>
	}
	else //nem jött szabályos adat a G0-tól
	{
		return 1;
 80038c0:	2301      	movs	r3, #1
	}
}
 80038c2:	4618      	mov	r0, r3
 80038c4:	3718      	adds	r7, #24
 80038c6:	46bd      	mov	sp, r7
 80038c8:	bd80      	pop	{r7, pc}
 80038ca:	bf00      	nop
 80038cc:	2000002c 	.word	0x2000002c
 80038d0:	20000634 	.word	0x20000634
 80038d4:	20000afd 	.word	0x20000afd

080038d8 <Line_Track_Task>:


void Line_Track_Task(UART_HandleTypeDef *huart_stm,UART_HandleTypeDef *huart_debugg, uint32_t tick, uint32_t period)
{
 80038d8:	b580      	push	{r7, lr}
 80038da:	b086      	sub	sp, #24
 80038dc:	af00      	add	r7, sp, #0
 80038de:	60f8      	str	r0, [r7, #12]
 80038e0:	60b9      	str	r1, [r7, #8]
 80038e2:	607a      	str	r2, [r7, #4]
 80038e4:	603b      	str	r3, [r7, #0]
	static float PHI;
	static float gamma=0;
	static uint32_t ccr_rear_prev=0;
	static uint32_t tick_prev=0;

	if(line_track_task_tick>tick) return;
 80038e6:	4b96      	ldr	r3, [pc, #600]	; (8003b40 <Line_Track_Task+0x268>)
 80038e8:	681b      	ldr	r3, [r3, #0]
 80038ea:	687a      	ldr	r2, [r7, #4]
 80038ec:	429a      	cmp	r2, r3
 80038ee:	f0c0 83ed 	bcc.w	80040cc <Line_Track_Task+0x7f4>
	line_track_task_tick = tick + period;
 80038f2:	687a      	ldr	r2, [r7, #4]
 80038f4:	683b      	ldr	r3, [r7, #0]
 80038f6:	4413      	add	r3, r2
 80038f8:	4a91      	ldr	r2, [pc, #580]	; (8003b40 <Line_Track_Task+0x268>)
 80038fa:	6013      	str	r3, [r2, #0]

	if(mode == SKILL)
 80038fc:	4b91      	ldr	r3, [pc, #580]	; (8003b44 <Line_Track_Task+0x26c>)
 80038fe:	781b      	ldrb	r3, [r3, #0]
 8003900:	2b52      	cmp	r3, #82	; 0x52
 8003902:	f040 8212 	bne.w	8003d2a <Line_Track_Task+0x452>
	{
		if(orientation==FORWARD)
 8003906:	4b90      	ldr	r3, [pc, #576]	; (8003b48 <Line_Track_Task+0x270>)
 8003908:	781b      	ldrb	r3, [r3, #0]
 800390a:	2b00      	cmp	r3, #0
 800390c:	f040 80eb 	bne.w	8003ae6 <Line_Track_Task+0x20e>
		{
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_FORWARD))return;
 8003910:	2239      	movs	r2, #57	; 0x39
 8003912:	68b9      	ldr	r1, [r7, #8]
 8003914:	68f8      	ldr	r0, [r7, #12]
 8003916:	f7ff ffa5 	bl	8003864 <G0_Read_Skill>
 800391a:	4603      	mov	r3, r0
 800391c:	2b00      	cmp	r3, #0
 800391e:	f040 83d7 	bne.w	80040d0 <Line_Track_Task+0x7f8>

			uint8_t tmp=Lane_Changer(tick);
 8003922:	6878      	ldr	r0, [r7, #4]
 8003924:	f001 f984 	bl	8004c30 <Lane_Changer>
 8003928:	4603      	mov	r3, r0
 800392a:	75bb      	strb	r3, [r7, #22]
			if(v_control==NORMAL_VEL)v_ref=1100;
 800392c:	4b87      	ldr	r3, [pc, #540]	; (8003b4c <Line_Track_Task+0x274>)
 800392e:	781b      	ldrb	r3, [r3, #0]
 8003930:	2b02      	cmp	r3, #2
 8003932:	d103      	bne.n	800393c <Line_Track_Task+0x64>
 8003934:	4b86      	ldr	r3, [pc, #536]	; (8003b50 <Line_Track_Task+0x278>)
 8003936:	4a87      	ldr	r2, [pc, #540]	; (8003b54 <Line_Track_Task+0x27c>)
 8003938:	601a      	str	r2, [r3, #0]
 800393a:	e00e      	b.n	800395a <Line_Track_Task+0x82>
			else if(v_control==SLOW_DOWN)v_ref=600;
 800393c:	4b83      	ldr	r3, [pc, #524]	; (8003b4c <Line_Track_Task+0x274>)
 800393e:	781b      	ldrb	r3, [r3, #0]
 8003940:	2b01      	cmp	r3, #1
 8003942:	d103      	bne.n	800394c <Line_Track_Task+0x74>
 8003944:	4b82      	ldr	r3, [pc, #520]	; (8003b50 <Line_Track_Task+0x278>)
 8003946:	4a84      	ldr	r2, [pc, #528]	; (8003b58 <Line_Track_Task+0x280>)
 8003948:	601a      	str	r2, [r3, #0]
 800394a:	e006      	b.n	800395a <Line_Track_Task+0x82>
			else if(v_control==STOP)v_ref=100;
 800394c:	4b7f      	ldr	r3, [pc, #508]	; (8003b4c <Line_Track_Task+0x274>)
 800394e:	781b      	ldrb	r3, [r3, #0]
 8003950:	2b00      	cmp	r3, #0
 8003952:	d102      	bne.n	800395a <Line_Track_Task+0x82>
 8003954:	4b7e      	ldr	r3, [pc, #504]	; (8003b50 <Line_Track_Task+0x278>)
 8003956:	4a81      	ldr	r2, [pc, #516]	; (8003b5c <Line_Track_Task+0x284>)
 8003958:	601a      	str	r2, [r3, #0]

			if(tmp)return;
 800395a:	7dbb      	ldrb	r3, [r7, #22]
 800395c:	2b00      	cmp	r3, #0
 800395e:	f040 83b9 	bne.w	80040d4 <Line_Track_Task+0x7fc>

			Detect_Node4(huart_debugg, tick);
 8003962:	6879      	ldr	r1, [r7, #4]
 8003964:	68b8      	ldr	r0, [r7, #8]
 8003966:	f001 f8cf 	bl	8004b08 <Detect_Node4>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 800396a:	4b7d      	ldr	r3, [pc, #500]	; (8003b60 <Line_Track_Task+0x288>)
 800396c:	785b      	ldrb	r3, [r3, #1]
 800396e:	2b00      	cmp	r3, #0
 8003970:	f000 83b2 	beq.w	80040d8 <Line_Track_Task+0x800>
 8003974:	4b7a      	ldr	r3, [pc, #488]	; (8003b60 <Line_Track_Task+0x288>)
 8003976:	785b      	ldrb	r3, [r3, #1]
 8003978:	2b04      	cmp	r3, #4
 800397a:	f200 83ad 	bhi.w	80040d8 <Line_Track_Task+0x800>
			gamma = Skill_Mode(huart_debugg, 0.004, 0.004, tick); //kD 4ms -es futáshoz hangolva
 800397e:	6879      	ldr	r1, [r7, #4]
 8003980:	eddf 0a78 	vldr	s1, [pc, #480]	; 8003b64 <Line_Track_Task+0x28c>
 8003984:	ed9f 0a77 	vldr	s0, [pc, #476]	; 8003b64 <Line_Track_Task+0x28c>
 8003988:	68b8      	ldr	r0, [r7, #8]
 800398a:	f000 ff19 	bl	80047c0 <Skill_Mode>
 800398e:	eef0 7a40 	vmov.f32	s15, s0
 8003992:	4b75      	ldr	r3, [pc, #468]	; (8003b68 <Line_Track_Task+0x290>)
 8003994:	edc3 7a00 	vstr	s15, [r3]

			//ELSŐSZERVÓ ELŐREMENETBEN
			PHI = atan((L/(L+D_FRONT))*tan(gamma));
 8003998:	4b73      	ldr	r3, [pc, #460]	; (8003b68 <Line_Track_Task+0x290>)
 800399a:	681b      	ldr	r3, [r3, #0]
 800399c:	4618      	mov	r0, r3
 800399e:	f7fc fdf3 	bl	8000588 <__aeabi_f2d>
 80039a2:	4602      	mov	r2, r0
 80039a4:	460b      	mov	r3, r1
 80039a6:	ec43 2b10 	vmov	d0, r2, r3
 80039aa:	f00b fcf1 	bl	800f390 <tan>
 80039ae:	ec51 0b10 	vmov	r0, r1, d0
 80039b2:	a35f      	add	r3, pc, #380	; (adr r3, 8003b30 <Line_Track_Task+0x258>)
 80039b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80039b8:	f7fc fe3e 	bl	8000638 <__aeabi_dmul>
 80039bc:	4602      	mov	r2, r0
 80039be:	460b      	mov	r3, r1
 80039c0:	ec43 2b17 	vmov	d7, r2, r3
 80039c4:	eeb0 0a47 	vmov.f32	s0, s14
 80039c8:	eef0 0a67 	vmov.f32	s1, s15
 80039cc:	f00b fb34 	bl	800f038 <atan>
 80039d0:	ec53 2b10 	vmov	r2, r3, d0
 80039d4:	4610      	mov	r0, r2
 80039d6:	4619      	mov	r1, r3
 80039d8:	f7fd f906 	bl	8000be8 <__aeabi_d2f>
 80039dc:	4603      	mov	r3, r0
 80039de:	4a63      	ldr	r2, [pc, #396]	; (8003b6c <Line_Track_Task+0x294>)
 80039e0:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_FRONT_CCR_MIDDLE);//balra kanyarodás
 80039e2:	4b62      	ldr	r3, [pc, #392]	; (8003b6c <Line_Track_Task+0x294>)
 80039e4:	edd3 7a00 	vldr	s15, [r3]
 80039e8:	ed9f 7a61 	vldr	s14, [pc, #388]	; 8003b70 <Line_Track_Task+0x298>
 80039ec:	ee67 7a87 	vmul.f32	s15, s15, s14
 80039f0:	ed9f 7a60 	vldr	s14, [pc, #384]	; 8003b74 <Line_Track_Task+0x29c>
 80039f4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80039f8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80039fc:	ee17 3a90 	vmov	r3, s15
 8003a00:	b29b      	uxth	r3, r3
 8003a02:	461a      	mov	r2, r3
 8003a04:	4b5c      	ldr	r3, [pc, #368]	; (8003b78 <Line_Track_Task+0x2a0>)
 8003a06:	601a      	str	r2, [r3, #0]
			if(ccr > CCR_FRONT_MAX)//ne feszítsük neki a mechanikai határnak a szervót
 8003a08:	4b5b      	ldr	r3, [pc, #364]	; (8003b78 <Line_Track_Task+0x2a0>)
 8003a0a:	681b      	ldr	r3, [r3, #0]
 8003a0c:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8003a10:	dd04      	ble.n	8003a1c <Line_Track_Task+0x144>
			{
				ccr = CCR_FRONT_MAX;
 8003a12:	4b59      	ldr	r3, [pc, #356]	; (8003b78 <Line_Track_Task+0x2a0>)
 8003a14:	f44f 7261 	mov.w	r2, #900	; 0x384
 8003a18:	601a      	str	r2, [r3, #0]
 8003a1a:	e008      	b.n	8003a2e <Line_Track_Task+0x156>
			}
			else if(ccr < CCR_FRONT_MIN)//egyik irányba se
 8003a1c:	4b56      	ldr	r3, [pc, #344]	; (8003b78 <Line_Track_Task+0x2a0>)
 8003a1e:	681b      	ldr	r3, [r3, #0]
 8003a20:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8003a24:	da03      	bge.n	8003a2e <Line_Track_Task+0x156>
			{
				ccr = CCR_FRONT_MIN;
 8003a26:	4b54      	ldr	r3, [pc, #336]	; (8003b78 <Line_Track_Task+0x2a0>)
 8003a28:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8003a2c:	601a      	str	r2, [r3, #0]
			}
			TIM2->CCR1 = ccr;
 8003a2e:	4b52      	ldr	r3, [pc, #328]	; (8003b78 <Line_Track_Task+0x2a0>)
 8003a30:	681a      	ldr	r2, [r3, #0]
 8003a32:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003a36:	635a      	str	r2, [r3, #52]	; 0x34
			//HÁTSÓSZERVÓ ELŐREMENETBEN
			PHI = atan((L/(L+D_REAR))*tan(gamma))/3;
 8003a38:	4b4b      	ldr	r3, [pc, #300]	; (8003b68 <Line_Track_Task+0x290>)
 8003a3a:	681b      	ldr	r3, [r3, #0]
 8003a3c:	4618      	mov	r0, r3
 8003a3e:	f7fc fda3 	bl	8000588 <__aeabi_f2d>
 8003a42:	4602      	mov	r2, r0
 8003a44:	460b      	mov	r3, r1
 8003a46:	ec43 2b10 	vmov	d0, r2, r3
 8003a4a:	f00b fca1 	bl	800f390 <tan>
 8003a4e:	ec51 0b10 	vmov	r0, r1, d0
 8003a52:	a339      	add	r3, pc, #228	; (adr r3, 8003b38 <Line_Track_Task+0x260>)
 8003a54:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003a58:	f7fc fdee 	bl	8000638 <__aeabi_dmul>
 8003a5c:	4602      	mov	r2, r0
 8003a5e:	460b      	mov	r3, r1
 8003a60:	ec43 2b17 	vmov	d7, r2, r3
 8003a64:	eeb0 0a47 	vmov.f32	s0, s14
 8003a68:	eef0 0a67 	vmov.f32	s1, s15
 8003a6c:	f00b fae4 	bl	800f038 <atan>
 8003a70:	ec51 0b10 	vmov	r0, r1, d0
 8003a74:	f04f 0200 	mov.w	r2, #0
 8003a78:	4b40      	ldr	r3, [pc, #256]	; (8003b7c <Line_Track_Task+0x2a4>)
 8003a7a:	f7fc ff07 	bl	800088c <__aeabi_ddiv>
 8003a7e:	4602      	mov	r2, r0
 8003a80:	460b      	mov	r3, r1
 8003a82:	4610      	mov	r0, r2
 8003a84:	4619      	mov	r1, r3
 8003a86:	f7fd f8af 	bl	8000be8 <__aeabi_d2f>
 8003a8a:	4603      	mov	r3, r0
 8003a8c:	4a37      	ldr	r2, [pc, #220]	; (8003b6c <Line_Track_Task+0x294>)
 8003a8e:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_REAR_CCR_MIDDLE);//balra kanyarodás
 8003a90:	4b36      	ldr	r3, [pc, #216]	; (8003b6c <Line_Track_Task+0x294>)
 8003a92:	edd3 7a00 	vldr	s15, [r3]
 8003a96:	ed9f 7a36 	vldr	s14, [pc, #216]	; 8003b70 <Line_Track_Task+0x298>
 8003a9a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003a9e:	ed9f 7a38 	vldr	s14, [pc, #224]	; 8003b80 <Line_Track_Task+0x2a8>
 8003aa2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003aa6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003aaa:	ee17 3a90 	vmov	r3, s15
 8003aae:	b29b      	uxth	r3, r3
 8003ab0:	461a      	mov	r2, r3
 8003ab2:	4b31      	ldr	r3, [pc, #196]	; (8003b78 <Line_Track_Task+0x2a0>)
 8003ab4:	601a      	str	r2, [r3, #0]
			if(ccr > CCR_REAR_MAX)//ne feszítsük neki a mechanikai határnak a szervót
 8003ab6:	4b30      	ldr	r3, [pc, #192]	; (8003b78 <Line_Track_Task+0x2a0>)
 8003ab8:	681b      	ldr	r3, [r3, #0]
 8003aba:	f5b3 7f39 	cmp.w	r3, #740	; 0x2e4
 8003abe:	dd04      	ble.n	8003aca <Line_Track_Task+0x1f2>
			{
				ccr = CCR_REAR_MAX;
 8003ac0:	4b2d      	ldr	r3, [pc, #180]	; (8003b78 <Line_Track_Task+0x2a0>)
 8003ac2:	f44f 7239 	mov.w	r2, #740	; 0x2e4
 8003ac6:	601a      	str	r2, [r3, #0]
 8003ac8:	e008      	b.n	8003adc <Line_Track_Task+0x204>
			}
			else if(ccr < CCR_REAR_MIN)//egyik irányba se
 8003aca:	4b2b      	ldr	r3, [pc, #172]	; (8003b78 <Line_Track_Task+0x2a0>)
 8003acc:	681b      	ldr	r3, [r3, #0]
 8003ace:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 8003ad2:	da03      	bge.n	8003adc <Line_Track_Task+0x204>
			{
				ccr = CCR_REAR_MIN;
 8003ad4:	4b28      	ldr	r3, [pc, #160]	; (8003b78 <Line_Track_Task+0x2a0>)
 8003ad6:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8003ada:	601a      	str	r2, [r3, #0]
			}
			TIM1->CCR4 = ccr;
 8003adc:	4b26      	ldr	r3, [pc, #152]	; (8003b78 <Line_Track_Task+0x2a0>)
 8003ade:	681a      	ldr	r2, [r3, #0]
 8003ae0:	4b28      	ldr	r3, [pc, #160]	; (8003b84 <Line_Track_Task+0x2ac>)
 8003ae2:	641a      	str	r2, [r3, #64]	; 0x40
 8003ae4:	e2ee      	b.n	80040c4 <Line_Track_Task+0x7ec>
		}
		else if(orientation==REVERSE)//TOLATÁS
 8003ae6:	4b18      	ldr	r3, [pc, #96]	; (8003b48 <Line_Track_Task+0x270>)
 8003ae8:	781b      	ldrb	r3, [r3, #0]
 8003aea:	2b01      	cmp	r3, #1
 8003aec:	f040 82ea 	bne.w	80040c4 <Line_Track_Task+0x7ec>
		{
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_REVERSE))return;
 8003af0:	2291      	movs	r2, #145	; 0x91
 8003af2:	68b9      	ldr	r1, [r7, #8]
 8003af4:	68f8      	ldr	r0, [r7, #12]
 8003af6:	f7ff feb5 	bl	8003864 <G0_Read_Skill>
 8003afa:	4603      	mov	r3, r0
 8003afc:	2b00      	cmp	r3, #0
 8003afe:	f040 82ed 	bne.w	80040dc <Line_Track_Task+0x804>

			uint8_t tmp=Lane_Changer(tick);
 8003b02:	6878      	ldr	r0, [r7, #4]
 8003b04:	f001 f894 	bl	8004c30 <Lane_Changer>
 8003b08:	4603      	mov	r3, r0
 8003b0a:	75fb      	strb	r3, [r7, #23]
			if(v_control==NORMAL_VEL)v_ref=-1100;
 8003b0c:	4b0f      	ldr	r3, [pc, #60]	; (8003b4c <Line_Track_Task+0x274>)
 8003b0e:	781b      	ldrb	r3, [r3, #0]
 8003b10:	2b02      	cmp	r3, #2
 8003b12:	d103      	bne.n	8003b1c <Line_Track_Task+0x244>
 8003b14:	4b0e      	ldr	r3, [pc, #56]	; (8003b50 <Line_Track_Task+0x278>)
 8003b16:	4a1c      	ldr	r2, [pc, #112]	; (8003b88 <Line_Track_Task+0x2b0>)
 8003b18:	601a      	str	r2, [r3, #0]
 8003b1a:	e040      	b.n	8003b9e <Line_Track_Task+0x2c6>
			else if(v_control==SLOW_DOWN)v_ref=-600;
 8003b1c:	4b0b      	ldr	r3, [pc, #44]	; (8003b4c <Line_Track_Task+0x274>)
 8003b1e:	781b      	ldrb	r3, [r3, #0]
 8003b20:	2b01      	cmp	r3, #1
 8003b22:	d135      	bne.n	8003b90 <Line_Track_Task+0x2b8>
 8003b24:	4b0a      	ldr	r3, [pc, #40]	; (8003b50 <Line_Track_Task+0x278>)
 8003b26:	4a19      	ldr	r2, [pc, #100]	; (8003b8c <Line_Track_Task+0x2b4>)
 8003b28:	601a      	str	r2, [r3, #0]
 8003b2a:	e038      	b.n	8003b9e <Line_Track_Task+0x2c6>
 8003b2c:	f3af 8000 	nop.w
 8003b30:	c4830201 	.word	0xc4830201
 8003b34:	3fe73a26 	.word	0x3fe73a26
 8003b38:	a3f47e90 	.word	0xa3f47e90
 8003b3c:	3fe8fd1f 	.word	0x3fe8fd1f
 8003b40:	20000030 	.word	0x20000030
 8003b44:	20000296 	.word	0x20000296
 8003b48:	200002a4 	.word	0x200002a4
 8003b4c:	200002a9 	.word	0x200002a9
 8003b50:	20000298 	.word	0x20000298
 8003b54:	44898000 	.word	0x44898000
 8003b58:	44160000 	.word	0x44160000
 8003b5c:	42c80000 	.word	0x42c80000
 8003b60:	20000634 	.word	0x20000634
 8003b64:	3b83126f 	.word	0x3b83126f
 8003b68:	20000644 	.word	0x20000644
 8003b6c:	20000648 	.word	0x20000648
 8003b70:	44af0000 	.word	0x44af0000
 8003b74:	442c0000 	.word	0x442c0000
 8003b78:	20000034 	.word	0x20000034
 8003b7c:	40080000 	.word	0x40080000
 8003b80:	44120000 	.word	0x44120000
 8003b84:	40010000 	.word	0x40010000
 8003b88:	c4898000 	.word	0xc4898000
 8003b8c:	c4160000 	.word	0xc4160000
			else if(v_control==STOP)v_ref=-100;
 8003b90:	4baf      	ldr	r3, [pc, #700]	; (8003e50 <Line_Track_Task+0x578>)
 8003b92:	781b      	ldrb	r3, [r3, #0]
 8003b94:	2b00      	cmp	r3, #0
 8003b96:	d102      	bne.n	8003b9e <Line_Track_Task+0x2c6>
 8003b98:	4bae      	ldr	r3, [pc, #696]	; (8003e54 <Line_Track_Task+0x57c>)
 8003b9a:	4aaf      	ldr	r2, [pc, #700]	; (8003e58 <Line_Track_Task+0x580>)
 8003b9c:	601a      	str	r2, [r3, #0]

			if(tmp)return;
 8003b9e:	7dfb      	ldrb	r3, [r7, #23]
 8003ba0:	2b00      	cmp	r3, #0
 8003ba2:	f040 829d 	bne.w	80040e0 <Line_Track_Task+0x808>

			Detect_Node4(huart_debugg, tick);
 8003ba6:	6879      	ldr	r1, [r7, #4]
 8003ba8:	68b8      	ldr	r0, [r7, #8]
 8003baa:	f000 ffad 	bl	8004b08 <Detect_Node4>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 8003bae:	4bab      	ldr	r3, [pc, #684]	; (8003e5c <Line_Track_Task+0x584>)
 8003bb0:	785b      	ldrb	r3, [r3, #1]
 8003bb2:	2b00      	cmp	r3, #0
 8003bb4:	f000 8296 	beq.w	80040e4 <Line_Track_Task+0x80c>
 8003bb8:	4ba8      	ldr	r3, [pc, #672]	; (8003e5c <Line_Track_Task+0x584>)
 8003bba:	785b      	ldrb	r3, [r3, #1]
 8003bbc:	2b04      	cmp	r3, #4
 8003bbe:	f200 8291 	bhi.w	80040e4 <Line_Track_Task+0x80c>
			gamma = Skill_Mode(huart_debugg, 0.003, 0.032, tick);
 8003bc2:	6879      	ldr	r1, [r7, #4]
 8003bc4:	eddf 0aa6 	vldr	s1, [pc, #664]	; 8003e60 <Line_Track_Task+0x588>
 8003bc8:	ed9f 0aa6 	vldr	s0, [pc, #664]	; 8003e64 <Line_Track_Task+0x58c>
 8003bcc:	68b8      	ldr	r0, [r7, #8]
 8003bce:	f000 fdf7 	bl	80047c0 <Skill_Mode>
 8003bd2:	eef0 7a40 	vmov.f32	s15, s0
 8003bd6:	4ba4      	ldr	r3, [pc, #656]	; (8003e68 <Line_Track_Task+0x590>)
 8003bd8:	edc3 7a00 	vstr	s15, [r3]

			//HÁTSÓ SZERVÓ HÁTRAMENETBEN
			PHI = atan((L/(L+D_REAR))*tan(gamma));////////////////////kiszámolni kézzel
 8003bdc:	4ba2      	ldr	r3, [pc, #648]	; (8003e68 <Line_Track_Task+0x590>)
 8003bde:	681b      	ldr	r3, [r3, #0]
 8003be0:	4618      	mov	r0, r3
 8003be2:	f7fc fcd1 	bl	8000588 <__aeabi_f2d>
 8003be6:	4602      	mov	r2, r0
 8003be8:	460b      	mov	r3, r1
 8003bea:	ec43 2b10 	vmov	d0, r2, r3
 8003bee:	f00b fbcf 	bl	800f390 <tan>
 8003bf2:	ec51 0b10 	vmov	r0, r1, d0
 8003bf6:	a392      	add	r3, pc, #584	; (adr r3, 8003e40 <Line_Track_Task+0x568>)
 8003bf8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003bfc:	f7fc fd1c 	bl	8000638 <__aeabi_dmul>
 8003c00:	4602      	mov	r2, r0
 8003c02:	460b      	mov	r3, r1
 8003c04:	ec43 2b17 	vmov	d7, r2, r3
 8003c08:	eeb0 0a47 	vmov.f32	s0, s14
 8003c0c:	eef0 0a67 	vmov.f32	s1, s15
 8003c10:	f00b fa12 	bl	800f038 <atan>
 8003c14:	ec53 2b10 	vmov	r2, r3, d0
 8003c18:	4610      	mov	r0, r2
 8003c1a:	4619      	mov	r1, r3
 8003c1c:	f7fc ffe4 	bl	8000be8 <__aeabi_d2f>
 8003c20:	4603      	mov	r3, r0
 8003c22:	4a92      	ldr	r2, [pc, #584]	; (8003e6c <Line_Track_Task+0x594>)
 8003c24:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_REAR_CCR_MIDDLE);
 8003c26:	4b91      	ldr	r3, [pc, #580]	; (8003e6c <Line_Track_Task+0x594>)
 8003c28:	edd3 7a00 	vldr	s15, [r3]
 8003c2c:	ed9f 7a90 	vldr	s14, [pc, #576]	; 8003e70 <Line_Track_Task+0x598>
 8003c30:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003c34:	ed9f 7a8f 	vldr	s14, [pc, #572]	; 8003e74 <Line_Track_Task+0x59c>
 8003c38:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003c3c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c40:	ee17 3a90 	vmov	r3, s15
 8003c44:	b29b      	uxth	r3, r3
 8003c46:	461a      	mov	r2, r3
 8003c48:	4b8b      	ldr	r3, [pc, #556]	; (8003e78 <Line_Track_Task+0x5a0>)
 8003c4a:	601a      	str	r2, [r3, #0]
			if(ccr > CCR_REAR_MAX)//ne feszítsük neki a mechanikai határnak a szervót
 8003c4c:	4b8a      	ldr	r3, [pc, #552]	; (8003e78 <Line_Track_Task+0x5a0>)
 8003c4e:	681b      	ldr	r3, [r3, #0]
 8003c50:	f5b3 7f39 	cmp.w	r3, #740	; 0x2e4
 8003c54:	dd04      	ble.n	8003c60 <Line_Track_Task+0x388>
			{
				ccr = CCR_REAR_MAX;
 8003c56:	4b88      	ldr	r3, [pc, #544]	; (8003e78 <Line_Track_Task+0x5a0>)
 8003c58:	f44f 7239 	mov.w	r2, #740	; 0x2e4
 8003c5c:	601a      	str	r2, [r3, #0]
 8003c5e:	e008      	b.n	8003c72 <Line_Track_Task+0x39a>
			}
			else if(ccr < CCR_REAR_MIN)//egyik irányba se
 8003c60:	4b85      	ldr	r3, [pc, #532]	; (8003e78 <Line_Track_Task+0x5a0>)
 8003c62:	681b      	ldr	r3, [r3, #0]
 8003c64:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 8003c68:	da03      	bge.n	8003c72 <Line_Track_Task+0x39a>
			{
				ccr = CCR_REAR_MIN;
 8003c6a:	4b83      	ldr	r3, [pc, #524]	; (8003e78 <Line_Track_Task+0x5a0>)
 8003c6c:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8003c70:	601a      	str	r2, [r3, #0]
			}
			TIM1->CCR4 = ccr;
 8003c72:	4b81      	ldr	r3, [pc, #516]	; (8003e78 <Line_Track_Task+0x5a0>)
 8003c74:	681a      	ldr	r2, [r3, #0]
 8003c76:	4b81      	ldr	r3, [pc, #516]	; (8003e7c <Line_Track_Task+0x5a4>)
 8003c78:	641a      	str	r2, [r3, #64]	; 0x40
			//ELSŐSZERVÓ HÁTRAMENETBEN
			PHI = atan((L/(L+D_FRONT))*tan(gamma))/3;
 8003c7a:	4b7b      	ldr	r3, [pc, #492]	; (8003e68 <Line_Track_Task+0x590>)
 8003c7c:	681b      	ldr	r3, [r3, #0]
 8003c7e:	4618      	mov	r0, r3
 8003c80:	f7fc fc82 	bl	8000588 <__aeabi_f2d>
 8003c84:	4602      	mov	r2, r0
 8003c86:	460b      	mov	r3, r1
 8003c88:	ec43 2b10 	vmov	d0, r2, r3
 8003c8c:	f00b fb80 	bl	800f390 <tan>
 8003c90:	ec51 0b10 	vmov	r0, r1, d0
 8003c94:	a36c      	add	r3, pc, #432	; (adr r3, 8003e48 <Line_Track_Task+0x570>)
 8003c96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003c9a:	f7fc fccd 	bl	8000638 <__aeabi_dmul>
 8003c9e:	4602      	mov	r2, r0
 8003ca0:	460b      	mov	r3, r1
 8003ca2:	ec43 2b17 	vmov	d7, r2, r3
 8003ca6:	eeb0 0a47 	vmov.f32	s0, s14
 8003caa:	eef0 0a67 	vmov.f32	s1, s15
 8003cae:	f00b f9c3 	bl	800f038 <atan>
 8003cb2:	ec51 0b10 	vmov	r0, r1, d0
 8003cb6:	f04f 0200 	mov.w	r2, #0
 8003cba:	4b71      	ldr	r3, [pc, #452]	; (8003e80 <Line_Track_Task+0x5a8>)
 8003cbc:	f7fc fde6 	bl	800088c <__aeabi_ddiv>
 8003cc0:	4602      	mov	r2, r0
 8003cc2:	460b      	mov	r3, r1
 8003cc4:	4610      	mov	r0, r2
 8003cc6:	4619      	mov	r1, r3
 8003cc8:	f7fc ff8e 	bl	8000be8 <__aeabi_d2f>
 8003ccc:	4603      	mov	r3, r0
 8003cce:	4a67      	ldr	r2, [pc, #412]	; (8003e6c <Line_Track_Task+0x594>)
 8003cd0:	6013      	str	r3, [r2, #0]
			ccr = (uint16_t)(SERVO_M * PHI + SERVO_FRONT_CCR_MIDDLE);//balra kanyarodás
 8003cd2:	4b66      	ldr	r3, [pc, #408]	; (8003e6c <Line_Track_Task+0x594>)
 8003cd4:	edd3 7a00 	vldr	s15, [r3]
 8003cd8:	ed9f 7a65 	vldr	s14, [pc, #404]	; 8003e70 <Line_Track_Task+0x598>
 8003cdc:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003ce0:	ed9f 7a68 	vldr	s14, [pc, #416]	; 8003e84 <Line_Track_Task+0x5ac>
 8003ce4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003ce8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003cec:	ee17 3a90 	vmov	r3, s15
 8003cf0:	b29b      	uxth	r3, r3
 8003cf2:	461a      	mov	r2, r3
 8003cf4:	4b60      	ldr	r3, [pc, #384]	; (8003e78 <Line_Track_Task+0x5a0>)
 8003cf6:	601a      	str	r2, [r3, #0]
			if(ccr > CCR_FRONT_MAX)//ne feszítsük neki a mechanikai határnak a szervót
 8003cf8:	4b5f      	ldr	r3, [pc, #380]	; (8003e78 <Line_Track_Task+0x5a0>)
 8003cfa:	681b      	ldr	r3, [r3, #0]
 8003cfc:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8003d00:	dd04      	ble.n	8003d0c <Line_Track_Task+0x434>
			{
				ccr = CCR_FRONT_MAX;
 8003d02:	4b5d      	ldr	r3, [pc, #372]	; (8003e78 <Line_Track_Task+0x5a0>)
 8003d04:	f44f 7261 	mov.w	r2, #900	; 0x384
 8003d08:	601a      	str	r2, [r3, #0]
 8003d0a:	e008      	b.n	8003d1e <Line_Track_Task+0x446>
			}
			else if(ccr < CCR_FRONT_MIN)//egyik irányba se
 8003d0c:	4b5a      	ldr	r3, [pc, #360]	; (8003e78 <Line_Track_Task+0x5a0>)
 8003d0e:	681b      	ldr	r3, [r3, #0]
 8003d10:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8003d14:	da03      	bge.n	8003d1e <Line_Track_Task+0x446>
			{
				ccr = CCR_FRONT_MIN;
 8003d16:	4b58      	ldr	r3, [pc, #352]	; (8003e78 <Line_Track_Task+0x5a0>)
 8003d18:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8003d1c:	601a      	str	r2, [r3, #0]
			}
			TIM2->CCR1 = ccr;
 8003d1e:	4b56      	ldr	r3, [pc, #344]	; (8003e78 <Line_Track_Task+0x5a0>)
 8003d20:	681a      	ldr	r2, [r3, #0]
 8003d22:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003d26:	635a      	str	r2, [r3, #52]	; 0x34
 8003d28:	e1cc      	b.n	80040c4 <Line_Track_Task+0x7ec>
		}

	}
	/*****Gyorsasági pálya üzemmód******/
	else if(mode == FAST)
 8003d2a:	4b57      	ldr	r3, [pc, #348]	; (8003e88 <Line_Track_Task+0x5b0>)
 8003d2c:	781b      	ldrb	r3, [r3, #0]
 8003d2e:	2b3f      	cmp	r3, #63	; 0x3f
 8003d30:	f040 81c8 	bne.w	80040c4 <Line_Track_Task+0x7ec>
	{
		static uint8_t fast_mode_state=SC_MODE;

		if(G0_Read_Fast(huart_stm, huart_debugg)) return; //ha sikertelen az olvasás a G0 ból akkor nincs értelme az egésznek
 8003d34:	68b9      	ldr	r1, [r7, #8]
 8003d36:	68f8      	ldr	r0, [r7, #12]
 8003d38:	f7ff fd60 	bl	80037fc <G0_Read_Fast>
 8003d3c:	4603      	mov	r3, r0
 8003d3e:	2b00      	cmp	r3, #0
 8003d40:	f040 81d2 	bne.w	80040e8 <Line_Track_Task+0x810>
		if((LINE_CNT<1 || LINE_CNT > 3) && !leaveLineEnabled) return;//ha nincs vonal a kocsi alatt
 8003d44:	4b45      	ldr	r3, [pc, #276]	; (8003e5c <Line_Track_Task+0x584>)
 8003d46:	785b      	ldrb	r3, [r3, #1]
 8003d48:	2b00      	cmp	r3, #0
 8003d4a:	d003      	beq.n	8003d54 <Line_Track_Task+0x47c>
 8003d4c:	4b43      	ldr	r3, [pc, #268]	; (8003e5c <Line_Track_Task+0x584>)
 8003d4e:	785b      	ldrb	r3, [r3, #1]
 8003d50:	2b03      	cmp	r3, #3
 8003d52:	d904      	bls.n	8003d5e <Line_Track_Task+0x486>
 8003d54:	4b4d      	ldr	r3, [pc, #308]	; (8003e8c <Line_Track_Task+0x5b4>)
 8003d56:	781b      	ldrb	r3, [r3, #0]
 8003d58:	2b00      	cmp	r3, #0
 8003d5a:	f000 81c7 	beq.w	80040ec <Line_Track_Task+0x814>
		gamma = Fast_Mode(huart_debugg, &fast_mode_state, tick);
 8003d5e:	687a      	ldr	r2, [r7, #4]
 8003d60:	494b      	ldr	r1, [pc, #300]	; (8003e90 <Line_Track_Task+0x5b8>)
 8003d62:	68b8      	ldr	r0, [r7, #8]
 8003d64:	f000 f9e8 	bl	8004138 <Fast_Mode>
 8003d68:	eef0 7a40 	vmov.f32	s15, s0
 8003d6c:	4b3e      	ldr	r3, [pc, #248]	; (8003e68 <Line_Track_Task+0x590>)
 8003d6e:	edc3 7a00 	vstr	s15, [r3]
		PHI = atan((L/(L+D_FRONT))*tan(gamma));
 8003d72:	4b3d      	ldr	r3, [pc, #244]	; (8003e68 <Line_Track_Task+0x590>)
 8003d74:	681b      	ldr	r3, [r3, #0]
 8003d76:	4618      	mov	r0, r3
 8003d78:	f7fc fc06 	bl	8000588 <__aeabi_f2d>
 8003d7c:	4602      	mov	r2, r0
 8003d7e:	460b      	mov	r3, r1
 8003d80:	ec43 2b10 	vmov	d0, r2, r3
 8003d84:	f00b fb04 	bl	800f390 <tan>
 8003d88:	ec51 0b10 	vmov	r0, r1, d0
 8003d8c:	a32e      	add	r3, pc, #184	; (adr r3, 8003e48 <Line_Track_Task+0x570>)
 8003d8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d92:	f7fc fc51 	bl	8000638 <__aeabi_dmul>
 8003d96:	4602      	mov	r2, r0
 8003d98:	460b      	mov	r3, r1
 8003d9a:	ec43 2b17 	vmov	d7, r2, r3
 8003d9e:	eeb0 0a47 	vmov.f32	s0, s14
 8003da2:	eef0 0a67 	vmov.f32	s1, s15
 8003da6:	f00b f947 	bl	800f038 <atan>
 8003daa:	ec53 2b10 	vmov	r2, r3, d0
 8003dae:	4610      	mov	r0, r2
 8003db0:	4619      	mov	r1, r3
 8003db2:	f7fc ff19 	bl	8000be8 <__aeabi_d2f>
 8003db6:	4603      	mov	r3, r0
 8003db8:	4a2c      	ldr	r2, [pc, #176]	; (8003e6c <Line_Track_Task+0x594>)
 8003dba:	6013      	str	r3, [r2, #0]

		if(fast_mode_state==FREERUN_MODE)
 8003dbc:	4b34      	ldr	r3, [pc, #208]	; (8003e90 <Line_Track_Task+0x5b8>)
 8003dbe:	781b      	ldrb	r3, [r3, #0]
 8003dc0:	2b01      	cmp	r3, #1
 8003dc2:	f040 80cd 	bne.w	8003f60 <Line_Track_Task+0x688>
		{
			if(v>2000)//egyenes
 8003dc6:	4b33      	ldr	r3, [pc, #204]	; (8003e94 <Line_Track_Task+0x5bc>)
 8003dc8:	edd3 7a00 	vldr	s15, [r3]
 8003dcc:	ed9f 7a32 	vldr	s14, [pc, #200]	; 8003e98 <Line_Track_Task+0x5c0>
 8003dd0:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003dd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003dd8:	dd62      	ble.n	8003ea0 <Line_Track_Task+0x5c8>
			{
				ccr = (uint16_t)(-SERVO_M_STRAIGHT * PHI + SERVO_FRONT_CCR_MIDDLE);
 8003dda:	4b24      	ldr	r3, [pc, #144]	; (8003e6c <Line_Track_Task+0x594>)
 8003ddc:	edd3 7a00 	vldr	s15, [r3]
 8003de0:	ed9f 7a2e 	vldr	s14, [pc, #184]	; 8003e9c <Line_Track_Task+0x5c4>
 8003de4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003de8:	ed9f 7a26 	vldr	s14, [pc, #152]	; 8003e84 <Line_Track_Task+0x5ac>
 8003dec:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003df0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003df4:	ee17 3a90 	vmov	r3, s15
 8003df8:	b29b      	uxth	r3, r3
 8003dfa:	461a      	mov	r2, r3
 8003dfc:	4b1e      	ldr	r3, [pc, #120]	; (8003e78 <Line_Track_Task+0x5a0>)
 8003dfe:	601a      	str	r2, [r3, #0]
				if(ccr > CCR_FRONT_MAX)//ne feszítsük neki a mechanikai határnak a szervót
 8003e00:	4b1d      	ldr	r3, [pc, #116]	; (8003e78 <Line_Track_Task+0x5a0>)
 8003e02:	681b      	ldr	r3, [r3, #0]
 8003e04:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8003e08:	dd04      	ble.n	8003e14 <Line_Track_Task+0x53c>
				{
					ccr = CCR_FRONT_MAX;
 8003e0a:	4b1b      	ldr	r3, [pc, #108]	; (8003e78 <Line_Track_Task+0x5a0>)
 8003e0c:	f44f 7261 	mov.w	r2, #900	; 0x384
 8003e10:	601a      	str	r2, [r3, #0]
 8003e12:	e008      	b.n	8003e26 <Line_Track_Task+0x54e>
				}
				else if(ccr < CCR_FRONT_MIN)//egyik irányba se
 8003e14:	4b18      	ldr	r3, [pc, #96]	; (8003e78 <Line_Track_Task+0x5a0>)
 8003e16:	681b      	ldr	r3, [r3, #0]
 8003e18:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8003e1c:	da03      	bge.n	8003e26 <Line_Track_Task+0x54e>
				{
					ccr = CCR_FRONT_MIN;
 8003e1e:	4b16      	ldr	r3, [pc, #88]	; (8003e78 <Line_Track_Task+0x5a0>)
 8003e20:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8003e24:	601a      	str	r2, [r3, #0]
				}
				TIM2->CCR1 = ccr; //első állít
 8003e26:	4b14      	ldr	r3, [pc, #80]	; (8003e78 <Line_Track_Task+0x5a0>)
 8003e28:	681a      	ldr	r2, [r3, #0]
 8003e2a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003e2e:	635a      	str	r2, [r3, #52]	; 0x34
				TIM1->CCR4 = SERVO_REAR_CCR_MIDDLE;//hátsó fix
 8003e30:	4b12      	ldr	r3, [pc, #72]	; (8003e7c <Line_Track_Task+0x5a4>)
 8003e32:	f44f 7212 	mov.w	r2, #584	; 0x248
 8003e36:	641a      	str	r2, [r3, #64]	; 0x40
 8003e38:	e144      	b.n	80040c4 <Line_Track_Task+0x7ec>
 8003e3a:	bf00      	nop
 8003e3c:	f3af 8000 	nop.w
 8003e40:	a3f47e90 	.word	0xa3f47e90
 8003e44:	3fe8fd1f 	.word	0x3fe8fd1f
 8003e48:	c4830201 	.word	0xc4830201
 8003e4c:	3fe73a26 	.word	0x3fe73a26
 8003e50:	200002a9 	.word	0x200002a9
 8003e54:	20000298 	.word	0x20000298
 8003e58:	c2c80000 	.word	0xc2c80000
 8003e5c:	20000634 	.word	0x20000634
 8003e60:	3d03126f 	.word	0x3d03126f
 8003e64:	3b449ba6 	.word	0x3b449ba6
 8003e68:	20000644 	.word	0x20000644
 8003e6c:	20000648 	.word	0x20000648
 8003e70:	44af0000 	.word	0x44af0000
 8003e74:	44120000 	.word	0x44120000
 8003e78:	20000034 	.word	0x20000034
 8003e7c:	40010000 	.word	0x40010000
 8003e80:	40080000 	.word	0x40080000
 8003e84:	442c0000 	.word	0x442c0000
 8003e88:	20000296 	.word	0x20000296
 8003e8c:	2000029c 	.word	0x2000029c
 8003e90:	2000064c 	.word	0x2000064c
 8003e94:	2000061c 	.word	0x2000061c
 8003e98:	44fa0000 	.word	0x44fa0000
 8003e9c:	c4610000 	.word	0xc4610000
			}
			else//kanyar
			{
				//első szervó
				ccr =(uint16_t)(-SERVO_M_CORNER * PHI + SERVO_FRONT_CCR_MIDDLE);
 8003ea0:	4b94      	ldr	r3, [pc, #592]	; (80040f4 <Line_Track_Task+0x81c>)
 8003ea2:	edd3 7a00 	vldr	s15, [r3]
 8003ea6:	ed9f 7a94 	vldr	s14, [pc, #592]	; 80040f8 <Line_Track_Task+0x820>
 8003eaa:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003eae:	ed9f 7a93 	vldr	s14, [pc, #588]	; 80040fc <Line_Track_Task+0x824>
 8003eb2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003eb6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003eba:	ee17 3a90 	vmov	r3, s15
 8003ebe:	b29b      	uxth	r3, r3
 8003ec0:	461a      	mov	r2, r3
 8003ec2:	4b8f      	ldr	r3, [pc, #572]	; (8004100 <Line_Track_Task+0x828>)
 8003ec4:	601a      	str	r2, [r3, #0]
				if(ccr > CCR_FRONT_MAX)//ne feszítsük neki a mechanikai határnak a szervót
 8003ec6:	4b8e      	ldr	r3, [pc, #568]	; (8004100 <Line_Track_Task+0x828>)
 8003ec8:	681b      	ldr	r3, [r3, #0]
 8003eca:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8003ece:	dd04      	ble.n	8003eda <Line_Track_Task+0x602>
				{
					ccr = CCR_FRONT_MAX;
 8003ed0:	4b8b      	ldr	r3, [pc, #556]	; (8004100 <Line_Track_Task+0x828>)
 8003ed2:	f44f 7261 	mov.w	r2, #900	; 0x384
 8003ed6:	601a      	str	r2, [r3, #0]
 8003ed8:	e008      	b.n	8003eec <Line_Track_Task+0x614>
				}
				else if(ccr < CCR_FRONT_MIN)//egyik irányba se
 8003eda:	4b89      	ldr	r3, [pc, #548]	; (8004100 <Line_Track_Task+0x828>)
 8003edc:	681b      	ldr	r3, [r3, #0]
 8003ede:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8003ee2:	da03      	bge.n	8003eec <Line_Track_Task+0x614>
				{
					ccr = CCR_FRONT_MIN;
 8003ee4:	4b86      	ldr	r3, [pc, #536]	; (8004100 <Line_Track_Task+0x828>)
 8003ee6:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8003eea:	601a      	str	r2, [r3, #0]
				}
				TIM2->CCR1 = ccr;
 8003eec:	4b84      	ldr	r3, [pc, #528]	; (8004100 <Line_Track_Task+0x828>)
 8003eee:	681a      	ldr	r2, [r3, #0]
 8003ef0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003ef4:	635a      	str	r2, [r3, #52]	; 0x34

				//Hátsó szervó
				PHI/= 3;
 8003ef6:	4b7f      	ldr	r3, [pc, #508]	; (80040f4 <Line_Track_Task+0x81c>)
 8003ef8:	ed93 7a00 	vldr	s14, [r3]
 8003efc:	eef0 6a08 	vmov.f32	s13, #8	; 0x40400000  3.0
 8003f00:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8003f04:	4b7b      	ldr	r3, [pc, #492]	; (80040f4 <Line_Track_Task+0x81c>)
 8003f06:	edc3 7a00 	vstr	s15, [r3]
				ccr = (uint16_t)(-SERVO_M_CORNER * PHI + SERVO_REAR_CCR_MIDDLE);
 8003f0a:	4b7a      	ldr	r3, [pc, #488]	; (80040f4 <Line_Track_Task+0x81c>)
 8003f0c:	edd3 7a00 	vldr	s15, [r3]
 8003f10:	ed9f 7a79 	vldr	s14, [pc, #484]	; 80040f8 <Line_Track_Task+0x820>
 8003f14:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003f18:	ed9f 7a7a 	vldr	s14, [pc, #488]	; 8004104 <Line_Track_Task+0x82c>
 8003f1c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003f20:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003f24:	ee17 3a90 	vmov	r3, s15
 8003f28:	b29b      	uxth	r3, r3
 8003f2a:	461a      	mov	r2, r3
 8003f2c:	4b74      	ldr	r3, [pc, #464]	; (8004100 <Line_Track_Task+0x828>)
 8003f2e:	601a      	str	r2, [r3, #0]
				if(ccr > CCR_REAR_MAX)//ne feszítsük neki a mechanikai határnak a szervót
 8003f30:	4b73      	ldr	r3, [pc, #460]	; (8004100 <Line_Track_Task+0x828>)
 8003f32:	681b      	ldr	r3, [r3, #0]
 8003f34:	f5b3 7f39 	cmp.w	r3, #740	; 0x2e4
 8003f38:	dd04      	ble.n	8003f44 <Line_Track_Task+0x66c>
				{
					ccr = CCR_REAR_MAX;
 8003f3a:	4b71      	ldr	r3, [pc, #452]	; (8004100 <Line_Track_Task+0x828>)
 8003f3c:	f44f 7239 	mov.w	r2, #740	; 0x2e4
 8003f40:	601a      	str	r2, [r3, #0]
 8003f42:	e008      	b.n	8003f56 <Line_Track_Task+0x67e>
				}
				else if(ccr < CCR_REAR_MIN)//egyik irányba se
 8003f44:	4b6e      	ldr	r3, [pc, #440]	; (8004100 <Line_Track_Task+0x828>)
 8003f46:	681b      	ldr	r3, [r3, #0]
 8003f48:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 8003f4c:	da03      	bge.n	8003f56 <Line_Track_Task+0x67e>
				{
					ccr = CCR_REAR_MIN;
 8003f4e:	4b6c      	ldr	r3, [pc, #432]	; (8004100 <Line_Track_Task+0x828>)
 8003f50:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8003f54:	601a      	str	r2, [r3, #0]
				}
				TIM1->CCR4=ccr;
 8003f56:	4b6a      	ldr	r3, [pc, #424]	; (8004100 <Line_Track_Task+0x828>)
 8003f58:	681a      	ldr	r2, [r3, #0]
 8003f5a:	4b6b      	ldr	r3, [pc, #428]	; (8004108 <Line_Track_Task+0x830>)
 8003f5c:	641a      	str	r2, [r3, #64]	; 0x40
 8003f5e:	e0b1      	b.n	80040c4 <Line_Track_Task+0x7ec>
			}

		}
		else if(fast_mode_state==SC_MODE)
 8003f60:	4b6a      	ldr	r3, [pc, #424]	; (800410c <Line_Track_Task+0x834>)
 8003f62:	781b      	ldrb	r3, [r3, #0]
 8003f64:	2b00      	cmp	r3, #0
 8003f66:	d15f      	bne.n	8004028 <Line_Track_Task+0x750>
		{
			//első szervó
			ccr = (uint16_t)(-SERVO_M_SC * PHI + SERVO_FRONT_CCR_MIDDLE);
 8003f68:	4b62      	ldr	r3, [pc, #392]	; (80040f4 <Line_Track_Task+0x81c>)
 8003f6a:	edd3 7a00 	vldr	s15, [r3]
 8003f6e:	ed9f 7a68 	vldr	s14, [pc, #416]	; 8004110 <Line_Track_Task+0x838>
 8003f72:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003f76:	ed9f 7a61 	vldr	s14, [pc, #388]	; 80040fc <Line_Track_Task+0x824>
 8003f7a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003f7e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003f82:	ee17 3a90 	vmov	r3, s15
 8003f86:	b29b      	uxth	r3, r3
 8003f88:	461a      	mov	r2, r3
 8003f8a:	4b5d      	ldr	r3, [pc, #372]	; (8004100 <Line_Track_Task+0x828>)
 8003f8c:	601a      	str	r2, [r3, #0]
			if(ccr > CCR_FRONT_MAX)//ne feszítsük neki a mechanikai határnak a szervót
 8003f8e:	4b5c      	ldr	r3, [pc, #368]	; (8004100 <Line_Track_Task+0x828>)
 8003f90:	681b      	ldr	r3, [r3, #0]
 8003f92:	f5b3 7f61 	cmp.w	r3, #900	; 0x384
 8003f96:	dd04      	ble.n	8003fa2 <Line_Track_Task+0x6ca>
			{
				ccr = CCR_FRONT_MAX;
 8003f98:	4b59      	ldr	r3, [pc, #356]	; (8004100 <Line_Track_Task+0x828>)
 8003f9a:	f44f 7261 	mov.w	r2, #900	; 0x384
 8003f9e:	601a      	str	r2, [r3, #0]
 8003fa0:	e008      	b.n	8003fb4 <Line_Track_Task+0x6dc>
			}
			else if(ccr < CCR_FRONT_MIN)//egyik irányba se
 8003fa2:	4b57      	ldr	r3, [pc, #348]	; (8004100 <Line_Track_Task+0x828>)
 8003fa4:	681b      	ldr	r3, [r3, #0]
 8003fa6:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8003faa:	da03      	bge.n	8003fb4 <Line_Track_Task+0x6dc>
			{
				ccr = CCR_FRONT_MIN;
 8003fac:	4b54      	ldr	r3, [pc, #336]	; (8004100 <Line_Track_Task+0x828>)
 8003fae:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8003fb2:	601a      	str	r2, [r3, #0]
			}
			TIM2->CCR1 = ccr;
 8003fb4:	4b52      	ldr	r3, [pc, #328]	; (8004100 <Line_Track_Task+0x828>)
 8003fb6:	681a      	ldr	r2, [r3, #0]
 8003fb8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003fbc:	635a      	str	r2, [r3, #52]	; 0x34
			//Hátsó szervó
			PHI/= 3;
 8003fbe:	4b4d      	ldr	r3, [pc, #308]	; (80040f4 <Line_Track_Task+0x81c>)
 8003fc0:	ed93 7a00 	vldr	s14, [r3]
 8003fc4:	eef0 6a08 	vmov.f32	s13, #8	; 0x40400000  3.0
 8003fc8:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8003fcc:	4b49      	ldr	r3, [pc, #292]	; (80040f4 <Line_Track_Task+0x81c>)
 8003fce:	edc3 7a00 	vstr	s15, [r3]
			ccr = (uint16_t)(-SERVO_M_SC * PHI + SERVO_REAR_CCR_MIDDLE);
 8003fd2:	4b48      	ldr	r3, [pc, #288]	; (80040f4 <Line_Track_Task+0x81c>)
 8003fd4:	edd3 7a00 	vldr	s15, [r3]
 8003fd8:	ed9f 7a4d 	vldr	s14, [pc, #308]	; 8004110 <Line_Track_Task+0x838>
 8003fdc:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003fe0:	ed9f 7a48 	vldr	s14, [pc, #288]	; 8004104 <Line_Track_Task+0x82c>
 8003fe4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003fe8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003fec:	ee17 3a90 	vmov	r3, s15
 8003ff0:	b29b      	uxth	r3, r3
 8003ff2:	461a      	mov	r2, r3
 8003ff4:	4b42      	ldr	r3, [pc, #264]	; (8004100 <Line_Track_Task+0x828>)
 8003ff6:	601a      	str	r2, [r3, #0]
			if(ccr > CCR_REAR_MAX)//ne feszítsük neki a mechanikai határnak a szervót
 8003ff8:	4b41      	ldr	r3, [pc, #260]	; (8004100 <Line_Track_Task+0x828>)
 8003ffa:	681b      	ldr	r3, [r3, #0]
 8003ffc:	f5b3 7f39 	cmp.w	r3, #740	; 0x2e4
 8004000:	dd04      	ble.n	800400c <Line_Track_Task+0x734>
			{
				ccr = CCR_REAR_MAX;
 8004002:	4b3f      	ldr	r3, [pc, #252]	; (8004100 <Line_Track_Task+0x828>)
 8004004:	f44f 7239 	mov.w	r2, #740	; 0x2e4
 8004008:	601a      	str	r2, [r3, #0]
 800400a:	e008      	b.n	800401e <Line_Track_Task+0x746>
			}
			else if(ccr < CCR_REAR_MIN)//egyik irányba se
 800400c:	4b3c      	ldr	r3, [pc, #240]	; (8004100 <Line_Track_Task+0x828>)
 800400e:	681b      	ldr	r3, [r3, #0]
 8004010:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 8004014:	da03      	bge.n	800401e <Line_Track_Task+0x746>
			{
				ccr = CCR_REAR_MIN;
 8004016:	4b3a      	ldr	r3, [pc, #232]	; (8004100 <Line_Track_Task+0x828>)
 8004018:	f44f 72c8 	mov.w	r2, #400	; 0x190
 800401c:	601a      	str	r2, [r3, #0]
			}
			TIM1->CCR4=ccr;
 800401e:	4b38      	ldr	r3, [pc, #224]	; (8004100 <Line_Track_Task+0x828>)
 8004020:	681a      	ldr	r2, [r3, #0]
 8004022:	4b39      	ldr	r3, [pc, #228]	; (8004108 <Line_Track_Task+0x830>)
 8004024:	641a      	str	r2, [r3, #64]	; 0x40
 8004026:	e04d      	b.n	80040c4 <Line_Track_Task+0x7ec>
		}
		else if(fast_mode_state==OVERTAKE_MODE)
 8004028:	4b38      	ldr	r3, [pc, #224]	; (800410c <Line_Track_Task+0x834>)
 800402a:	781b      	ldrb	r3, [r3, #0]
 800402c:	2b02      	cmp	r3, #2
 800402e:	d149      	bne.n	80040c4 <Line_Track_Task+0x7ec>
		{
			static uint8_t overtake_state=0;
			static uint32_t t_stamp_overtake=0;
			if(overtake_state==0)
 8004030:	4b38      	ldr	r3, [pc, #224]	; (8004114 <Line_Track_Task+0x83c>)
 8004032:	781b      	ldrb	r3, [r3, #0]
 8004034:	2b00      	cmp	r3, #0
 8004036:	d115      	bne.n	8004064 <Line_Track_Task+0x78c>
			{
				v_ref=1000;
 8004038:	4b37      	ldr	r3, [pc, #220]	; (8004118 <Line_Track_Task+0x840>)
 800403a:	4a38      	ldr	r2, [pc, #224]	; (800411c <Line_Track_Task+0x844>)
 800403c:	601a      	str	r2, [r3, #0]
				t_stamp_overtake=tick;
 800403e:	4a38      	ldr	r2, [pc, #224]	; (8004120 <Line_Track_Task+0x848>)
 8004040:	687b      	ldr	r3, [r7, #4]
 8004042:	6013      	str	r3, [r2, #0]
				leaveLineEnabled=1;
 8004044:	4b37      	ldr	r3, [pc, #220]	; (8004124 <Line_Track_Task+0x84c>)
 8004046:	2201      	movs	r2, #1
 8004048:	701a      	strb	r2, [r3, #0]
				TIM2->CCR1=SERVO_FRONT_CCR_MIDDLE+130;
 800404a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800404e:	f240 3232 	movw	r2, #818	; 0x332
 8004052:	635a      	str	r2, [r3, #52]	; 0x34
				TIM1->CCR4=SERVO_REAR_CCR_MIDDLE-130;
 8004054:	4b2c      	ldr	r3, [pc, #176]	; (8004108 <Line_Track_Task+0x830>)
 8004056:	f44f 72e3 	mov.w	r2, #454	; 0x1c6
 800405a:	641a      	str	r2, [r3, #64]	; 0x40
				overtake_state=1;
 800405c:	4b2d      	ldr	r3, [pc, #180]	; (8004114 <Line_Track_Task+0x83c>)
 800405e:	2201      	movs	r2, #1
 8004060:	701a      	strb	r2, [r3, #0]
 8004062:	e02f      	b.n	80040c4 <Line_Track_Task+0x7ec>
			}
			else if(overtake_state==1 && (tick-t_stamp_overtake)>2500)
 8004064:	4b2b      	ldr	r3, [pc, #172]	; (8004114 <Line_Track_Task+0x83c>)
 8004066:	781b      	ldrb	r3, [r3, #0]
 8004068:	2b01      	cmp	r3, #1
 800406a:	d117      	bne.n	800409c <Line_Track_Task+0x7c4>
 800406c:	4b2c      	ldr	r3, [pc, #176]	; (8004120 <Line_Track_Task+0x848>)
 800406e:	681b      	ldr	r3, [r3, #0]
 8004070:	687a      	ldr	r2, [r7, #4]
 8004072:	1ad3      	subs	r3, r2, r3
 8004074:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8004078:	4293      	cmp	r3, r2
 800407a:	d90f      	bls.n	800409c <Line_Track_Task+0x7c4>
			{
				v_ref=3000;
 800407c:	4b26      	ldr	r3, [pc, #152]	; (8004118 <Line_Track_Task+0x840>)
 800407e:	4a2a      	ldr	r2, [pc, #168]	; (8004128 <Line_Track_Task+0x850>)
 8004080:	601a      	str	r2, [r3, #0]
				TIM2->CCR1=SERVO_FRONT_CCR_MIDDLE-20;
 8004082:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004086:	f44f 7227 	mov.w	r2, #668	; 0x29c
 800408a:	635a      	str	r2, [r3, #52]	; 0x34
				TIM1->CCR4=SERVO_REAR_CCR_MIDDLE+20;
 800408c:	4b1e      	ldr	r3, [pc, #120]	; (8004108 <Line_Track_Task+0x830>)
 800408e:	f44f 7217 	mov.w	r2, #604	; 0x25c
 8004092:	641a      	str	r2, [r3, #64]	; 0x40
				overtake_state=2;
 8004094:	4b1f      	ldr	r3, [pc, #124]	; (8004114 <Line_Track_Task+0x83c>)
 8004096:	2202      	movs	r2, #2
 8004098:	701a      	strb	r2, [r3, #0]
 800409a:	e013      	b.n	80040c4 <Line_Track_Task+0x7ec>
			}
			else if(overtake_state==2 && LINE_CNT>0)
 800409c:	4b1d      	ldr	r3, [pc, #116]	; (8004114 <Line_Track_Task+0x83c>)
 800409e:	781b      	ldrb	r3, [r3, #0]
 80040a0:	2b02      	cmp	r3, #2
 80040a2:	d10f      	bne.n	80040c4 <Line_Track_Task+0x7ec>
 80040a4:	4b21      	ldr	r3, [pc, #132]	; (800412c <Line_Track_Task+0x854>)
 80040a6:	785b      	ldrb	r3, [r3, #1]
 80040a8:	2b00      	cmp	r3, #0
 80040aa:	d00b      	beq.n	80040c4 <Line_Track_Task+0x7ec>
			{
				v_ref=1200;
 80040ac:	4b1a      	ldr	r3, [pc, #104]	; (8004118 <Line_Track_Task+0x840>)
 80040ae:	4a20      	ldr	r2, [pc, #128]	; (8004130 <Line_Track_Task+0x858>)
 80040b0:	601a      	str	r2, [r3, #0]
				overtake_state=0;
 80040b2:	4b18      	ldr	r3, [pc, #96]	; (8004114 <Line_Track_Task+0x83c>)
 80040b4:	2200      	movs	r2, #0
 80040b6:	701a      	strb	r2, [r3, #0]
				fast_mode_state=FREERUN_MODE;
 80040b8:	4b14      	ldr	r3, [pc, #80]	; (800410c <Line_Track_Task+0x834>)
 80040ba:	2201      	movs	r2, #1
 80040bc:	701a      	strb	r2, [r3, #0]
				leaveLineEnabled=0;
 80040be:	4b19      	ldr	r3, [pc, #100]	; (8004124 <Line_Track_Task+0x84c>)
 80040c0:	2200      	movs	r2, #0
 80040c2:	701a      	strb	r2, [r3, #0]
			}

		}
	}

	tick_prev=tick;
 80040c4:	4a1b      	ldr	r2, [pc, #108]	; (8004134 <Line_Track_Task+0x85c>)
 80040c6:	687b      	ldr	r3, [r7, #4]
 80040c8:	6013      	str	r3, [r2, #0]
 80040ca:	e010      	b.n	80040ee <Line_Track_Task+0x816>
	if(line_track_task_tick>tick) return;
 80040cc:	bf00      	nop
 80040ce:	e00e      	b.n	80040ee <Line_Track_Task+0x816>
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_FORWARD))return;
 80040d0:	bf00      	nop
 80040d2:	e00c      	b.n	80040ee <Line_Track_Task+0x816>
			if(tmp)return;
 80040d4:	bf00      	nop
 80040d6:	e00a      	b.n	80040ee <Line_Track_Task+0x816>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 80040d8:	bf00      	nop
 80040da:	e008      	b.n	80040ee <Line_Track_Task+0x816>
			if(G0_Read_Skill(huart_stm, huart_debugg, CMD_READ_SKILL_REVERSE))return;
 80040dc:	bf00      	nop
 80040de:	e006      	b.n	80040ee <Line_Track_Task+0x816>
			if(tmp)return;
 80040e0:	bf00      	nop
 80040e2:	e004      	b.n	80040ee <Line_Track_Task+0x816>
			if (LINE_CNT<1 || LINE_CNT > 4) return;//ha nincs vonal a kocsi alatt
 80040e4:	bf00      	nop
 80040e6:	e002      	b.n	80040ee <Line_Track_Task+0x816>
		if(G0_Read_Fast(huart_stm, huart_debugg)) return; //ha sikertelen az olvasás a G0 ból akkor nincs értelme az egésznek
 80040e8:	bf00      	nop
 80040ea:	e000      	b.n	80040ee <Line_Track_Task+0x816>
		if((LINE_CNT<1 || LINE_CNT > 3) && !leaveLineEnabled) return;//ha nincs vonal a kocsi alatt
 80040ec:	bf00      	nop
}
 80040ee:	3718      	adds	r7, #24
 80040f0:	46bd      	mov	sp, r7
 80040f2:	bd80      	pop	{r7, pc}
 80040f4:	20000648 	.word	0x20000648
 80040f8:	c4c1c000 	.word	0xc4c1c000
 80040fc:	442c0000 	.word	0x442c0000
 8004100:	20000034 	.word	0x20000034
 8004104:	44120000 	.word	0x44120000
 8004108:	40010000 	.word	0x40010000
 800410c:	2000064c 	.word	0x2000064c
 8004110:	c4a28000 	.word	0xc4a28000
 8004114:	2000064d 	.word	0x2000064d
 8004118:	20000298 	.word	0x20000298
 800411c:	447a0000 	.word	0x447a0000
 8004120:	20000650 	.word	0x20000650
 8004124:	2000029c 	.word	0x2000029c
 8004128:	453b8000 	.word	0x453b8000
 800412c:	20000634 	.word	0x20000634
 8004130:	44960000 	.word	0x44960000
 8004134:	20000654 	.word	0x20000654

08004138 <Fast_Mode>:

float Fast_Mode(UART_HandleTypeDef *huart_debugg,uint8_t* state_pointer, uint32_t t)
{
 8004138:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 800413c:	b088      	sub	sp, #32
 800413e:	af00      	add	r7, sp, #0
 8004140:	60f8      	str	r0, [r7, #12]
 8004142:	60b9      	str	r1, [r7, #8]
 8004144:	607a      	str	r2, [r7, #4]
	static float x_elso_prev=0;
	static float x_hatso;
	static float delta;
	static float gamma;

	uint8_t state = *state_pointer;
 8004146:	68bb      	ldr	r3, [r7, #8]
 8004148:	781b      	ldrb	r3, [r3, #0]
 800414a:	77fb      	strb	r3, [r7, #31]

	if(state==OVERTAKE_MODE)return 0;
 800414c:	7ffb      	ldrb	r3, [r7, #31]
 800414e:	2b02      	cmp	r3, #2
 8004150:	d102      	bne.n	8004158 <Fast_Mode+0x20>
 8004152:	f04f 0300 	mov.w	r3, #0
 8004156:	e317      	b.n	8004788 <Fast_Mode+0x650>
/**/
	//BOOST detect
	if(LINE_CNT != lineCnt_prev && (LINE_CNT==1 || LINE_CNT==3)) //ha változik az alattunk lévő vonalak száma
 8004158:	4b95      	ldr	r3, [pc, #596]	; (80043b0 <Fast_Mode+0x278>)
 800415a:	785a      	ldrb	r2, [r3, #1]
 800415c:	4b95      	ldr	r3, [pc, #596]	; (80043b4 <Fast_Mode+0x27c>)
 800415e:	781b      	ldrb	r3, [r3, #0]
 8004160:	429a      	cmp	r2, r3
 8004162:	f000 80ae 	beq.w	80042c2 <Fast_Mode+0x18a>
 8004166:	4b92      	ldr	r3, [pc, #584]	; (80043b0 <Fast_Mode+0x278>)
 8004168:	785b      	ldrb	r3, [r3, #1]
 800416a:	2b01      	cmp	r3, #1
 800416c:	d004      	beq.n	8004178 <Fast_Mode+0x40>
 800416e:	4b90      	ldr	r3, [pc, #576]	; (80043b0 <Fast_Mode+0x278>)
 8004170:	785b      	ldrb	r3, [r3, #1]
 8004172:	2b03      	cmp	r3, #3
 8004174:	f040 80a5 	bne.w	80042c2 <Fast_Mode+0x18a>
	{
		ds[index]=fabs(v)*(t-t_stamp_boost)/1000;
 8004178:	4b8f      	ldr	r3, [pc, #572]	; (80043b8 <Fast_Mode+0x280>)
 800417a:	edd3 7a00 	vldr	s15, [r3]
 800417e:	eef0 7ae7 	vabs.f32	s15, s15
 8004182:	ee17 0a90 	vmov	r0, s15
 8004186:	f7fc f9ff 	bl	8000588 <__aeabi_f2d>
 800418a:	4604      	mov	r4, r0
 800418c:	460d      	mov	r5, r1
 800418e:	4b8b      	ldr	r3, [pc, #556]	; (80043bc <Fast_Mode+0x284>)
 8004190:	681b      	ldr	r3, [r3, #0]
 8004192:	687a      	ldr	r2, [r7, #4]
 8004194:	1ad3      	subs	r3, r2, r3
 8004196:	4618      	mov	r0, r3
 8004198:	f7fc f9d4 	bl	8000544 <__aeabi_ui2d>
 800419c:	4602      	mov	r2, r0
 800419e:	460b      	mov	r3, r1
 80041a0:	4620      	mov	r0, r4
 80041a2:	4629      	mov	r1, r5
 80041a4:	f7fc fa48 	bl	8000638 <__aeabi_dmul>
 80041a8:	4602      	mov	r2, r0
 80041aa:	460b      	mov	r3, r1
 80041ac:	4610      	mov	r0, r2
 80041ae:	4619      	mov	r1, r3
 80041b0:	f04f 0200 	mov.w	r2, #0
 80041b4:	4b82      	ldr	r3, [pc, #520]	; (80043c0 <Fast_Mode+0x288>)
 80041b6:	f7fc fb69 	bl	800088c <__aeabi_ddiv>
 80041ba:	4602      	mov	r2, r0
 80041bc:	460b      	mov	r3, r1
 80041be:	4981      	ldr	r1, [pc, #516]	; (80043c4 <Fast_Mode+0x28c>)
 80041c0:	7809      	ldrb	r1, [r1, #0]
 80041c2:	460c      	mov	r4, r1
 80041c4:	4610      	mov	r0, r2
 80041c6:	4619      	mov	r1, r3
 80041c8:	f7fc fd0e 	bl	8000be8 <__aeabi_d2f>
 80041cc:	4602      	mov	r2, r0
 80041ce:	497e      	ldr	r1, [pc, #504]	; (80043c8 <Fast_Mode+0x290>)
 80041d0:	00a3      	lsls	r3, r4, #2
 80041d2:	440b      	add	r3, r1
 80041d4:	601a      	str	r2, [r3, #0]
		float s_boost = ds[0]+ds[1]+ds[2]+ds[3]+ds[4]+ds[5]+ds[6]+ds[7];
 80041d6:	4b7c      	ldr	r3, [pc, #496]	; (80043c8 <Fast_Mode+0x290>)
 80041d8:	ed93 7a00 	vldr	s14, [r3]
 80041dc:	4b7a      	ldr	r3, [pc, #488]	; (80043c8 <Fast_Mode+0x290>)
 80041de:	edd3 7a01 	vldr	s15, [r3, #4]
 80041e2:	ee37 7a27 	vadd.f32	s14, s14, s15
 80041e6:	4b78      	ldr	r3, [pc, #480]	; (80043c8 <Fast_Mode+0x290>)
 80041e8:	edd3 7a02 	vldr	s15, [r3, #8]
 80041ec:	ee37 7a27 	vadd.f32	s14, s14, s15
 80041f0:	4b75      	ldr	r3, [pc, #468]	; (80043c8 <Fast_Mode+0x290>)
 80041f2:	edd3 7a03 	vldr	s15, [r3, #12]
 80041f6:	ee37 7a27 	vadd.f32	s14, s14, s15
 80041fa:	4b73      	ldr	r3, [pc, #460]	; (80043c8 <Fast_Mode+0x290>)
 80041fc:	edd3 7a04 	vldr	s15, [r3, #16]
 8004200:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004204:	4b70      	ldr	r3, [pc, #448]	; (80043c8 <Fast_Mode+0x290>)
 8004206:	edd3 7a05 	vldr	s15, [r3, #20]
 800420a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800420e:	4b6e      	ldr	r3, [pc, #440]	; (80043c8 <Fast_Mode+0x290>)
 8004210:	edd3 7a06 	vldr	s15, [r3, #24]
 8004214:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004218:	4b6b      	ldr	r3, [pc, #428]	; (80043c8 <Fast_Mode+0x290>)
 800421a:	edd3 7a07 	vldr	s15, [r3, #28]
 800421e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004222:	edc7 7a06 	vstr	s15, [r7, #24]
		if(s_boost>300.0 && s_boost<800.0 && boostOrBrake==1) // ha 70 és 80 cm közt bekövetkezik 8 vonalszámváltás
 8004226:	edd7 7a06 	vldr	s15, [r7, #24]
 800422a:	ed9f 7a68 	vldr	s14, [pc, #416]	; 80043cc <Fast_Mode+0x294>
 800422e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004232:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004236:	dd34      	ble.n	80042a2 <Fast_Mode+0x16a>
 8004238:	edd7 7a06 	vldr	s15, [r7, #24]
 800423c:	ed9f 7a64 	vldr	s14, [pc, #400]	; 80043d0 <Fast_Mode+0x298>
 8004240:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004244:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004248:	d52b      	bpl.n	80042a2 <Fast_Mode+0x16a>
 800424a:	4b62      	ldr	r3, [pc, #392]	; (80043d4 <Fast_Mode+0x29c>)
 800424c:	781b      	ldrb	r3, [r3, #0]
 800424e:	2b01      	cmp	r3, #1
 8004250:	d127      	bne.n	80042a2 <Fast_Mode+0x16a>
		{
			boostOrBrake=2;
 8004252:	4b60      	ldr	r3, [pc, #384]	; (80043d4 <Fast_Mode+0x29c>)
 8004254:	2202      	movs	r2, #2
 8004256:	701a      	strb	r2, [r3, #0]
			boostCnt++;
 8004258:	4b5f      	ldr	r3, [pc, #380]	; (80043d8 <Fast_Mode+0x2a0>)
 800425a:	881b      	ldrh	r3, [r3, #0]
 800425c:	3301      	adds	r3, #1
 800425e:	b29a      	uxth	r2, r3
 8004260:	4b5d      	ldr	r3, [pc, #372]	; (80043d8 <Fast_Mode+0x2a0>)
 8004262:	801a      	strh	r2, [r3, #0]
			if(boostCnt>1 && state==SC_MODE)
 8004264:	4b5c      	ldr	r3, [pc, #368]	; (80043d8 <Fast_Mode+0x2a0>)
 8004266:	881b      	ldrh	r3, [r3, #0]
 8004268:	2b01      	cmp	r3, #1
 800426a:	d908      	bls.n	800427e <Fast_Mode+0x146>
 800426c:	7ffb      	ldrb	r3, [r7, #31]
 800426e:	2b00      	cmp	r3, #0
 8004270:	d105      	bne.n	800427e <Fast_Mode+0x146>
			{
				*state_pointer=OVERTAKE_MODE;
 8004272:	68bb      	ldr	r3, [r7, #8]
 8004274:	2202      	movs	r2, #2
 8004276:	701a      	strb	r2, [r3, #0]
				return 0;
 8004278:	f04f 0300 	mov.w	r3, #0
 800427c:	e284      	b.n	8004788 <Fast_Mode+0x650>
			}
			if(state==FREERUN_MODE)
 800427e:	7ffb      	ldrb	r3, [r7, #31]
 8004280:	2b01      	cmp	r3, #1
 8004282:	d109      	bne.n	8004298 <Fast_Mode+0x160>
			{
				//v_ref = 5000;
				v_ref=2500;
 8004284:	4b55      	ldr	r3, [pc, #340]	; (80043dc <Fast_Mode+0x2a4>)
 8004286:	4a56      	ldr	r2, [pc, #344]	; (80043e0 <Fast_Mode+0x2a8>)
 8004288:	601a      	str	r2, [r3, #0]
				LED_B(1);
 800428a:	2200      	movs	r2, #0
 800428c:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8004290:	4854      	ldr	r0, [pc, #336]	; (80043e4 <Fast_Mode+0x2ac>)
 8004292:	f004 f99d 	bl	80085d0 <HAL_GPIO_WritePin>
 8004296:	e004      	b.n	80042a2 <Fast_Mode+0x16a>
			}
			else LED_B_TOGGLE;
 8004298:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800429c:	4851      	ldr	r0, [pc, #324]	; (80043e4 <Fast_Mode+0x2ac>)
 800429e:	f004 f9b0 	bl	8008602 <HAL_GPIO_TogglePin>
		}

		index++;
 80042a2:	4b48      	ldr	r3, [pc, #288]	; (80043c4 <Fast_Mode+0x28c>)
 80042a4:	781b      	ldrb	r3, [r3, #0]
 80042a6:	3301      	adds	r3, #1
 80042a8:	b2da      	uxtb	r2, r3
 80042aa:	4b46      	ldr	r3, [pc, #280]	; (80043c4 <Fast_Mode+0x28c>)
 80042ac:	701a      	strb	r2, [r3, #0]
		if(index>7) index=0;
 80042ae:	4b45      	ldr	r3, [pc, #276]	; (80043c4 <Fast_Mode+0x28c>)
 80042b0:	781b      	ldrb	r3, [r3, #0]
 80042b2:	2b07      	cmp	r3, #7
 80042b4:	d902      	bls.n	80042bc <Fast_Mode+0x184>
 80042b6:	4b43      	ldr	r3, [pc, #268]	; (80043c4 <Fast_Mode+0x28c>)
 80042b8:	2200      	movs	r2, #0
 80042ba:	701a      	strb	r2, [r3, #0]
		t_stamp_boost = t;
 80042bc:	4a3f      	ldr	r2, [pc, #252]	; (80043bc <Fast_Mode+0x284>)
 80042be:	687b      	ldr	r3, [r7, #4]
 80042c0:	6013      	str	r3, [r2, #0]
	}
	lineCnt_prev = LINE_CNT; //az előző értéket a jelenlegihez hangoljuk
 80042c2:	4b3b      	ldr	r3, [pc, #236]	; (80043b0 <Fast_Mode+0x278>)
 80042c4:	785a      	ldrb	r2, [r3, #1]
 80042c6:	4b3b      	ldr	r3, [pc, #236]	; (80043b4 <Fast_Mode+0x27c>)
 80042c8:	701a      	strb	r2, [r3, #0]

	//BRAKING detect -> erre csak gyors üzemmódban van szükség
	if(LINE_CNT > 1) //ha 3 vonalat érzékelünk
 80042ca:	4b39      	ldr	r3, [pc, #228]	; (80043b0 <Fast_Mode+0x278>)
 80042cc:	785b      	ldrb	r3, [r3, #1]
 80042ce:	2b01      	cmp	r3, #1
 80042d0:	d950      	bls.n	8004374 <Fast_Mode+0x23c>
	{
		s_brake += fabs(v)*(t-t_prev)/1000;
 80042d2:	4b45      	ldr	r3, [pc, #276]	; (80043e8 <Fast_Mode+0x2b0>)
 80042d4:	681b      	ldr	r3, [r3, #0]
 80042d6:	4618      	mov	r0, r3
 80042d8:	f7fc f956 	bl	8000588 <__aeabi_f2d>
 80042dc:	4604      	mov	r4, r0
 80042de:	460d      	mov	r5, r1
 80042e0:	4b35      	ldr	r3, [pc, #212]	; (80043b8 <Fast_Mode+0x280>)
 80042e2:	edd3 7a00 	vldr	s15, [r3]
 80042e6:	eef0 7ae7 	vabs.f32	s15, s15
 80042ea:	ee17 0a90 	vmov	r0, s15
 80042ee:	f7fc f94b 	bl	8000588 <__aeabi_f2d>
 80042f2:	4680      	mov	r8, r0
 80042f4:	4689      	mov	r9, r1
 80042f6:	4b3d      	ldr	r3, [pc, #244]	; (80043ec <Fast_Mode+0x2b4>)
 80042f8:	681b      	ldr	r3, [r3, #0]
 80042fa:	687a      	ldr	r2, [r7, #4]
 80042fc:	1ad3      	subs	r3, r2, r3
 80042fe:	4618      	mov	r0, r3
 8004300:	f7fc f920 	bl	8000544 <__aeabi_ui2d>
 8004304:	4602      	mov	r2, r0
 8004306:	460b      	mov	r3, r1
 8004308:	4640      	mov	r0, r8
 800430a:	4649      	mov	r1, r9
 800430c:	f7fc f994 	bl	8000638 <__aeabi_dmul>
 8004310:	4602      	mov	r2, r0
 8004312:	460b      	mov	r3, r1
 8004314:	4610      	mov	r0, r2
 8004316:	4619      	mov	r1, r3
 8004318:	f04f 0200 	mov.w	r2, #0
 800431c:	4b28      	ldr	r3, [pc, #160]	; (80043c0 <Fast_Mode+0x288>)
 800431e:	f7fc fab5 	bl	800088c <__aeabi_ddiv>
 8004322:	4602      	mov	r2, r0
 8004324:	460b      	mov	r3, r1
 8004326:	4620      	mov	r0, r4
 8004328:	4629      	mov	r1, r5
 800432a:	f7fb ffcf 	bl	80002cc <__adddf3>
 800432e:	4602      	mov	r2, r0
 8004330:	460b      	mov	r3, r1
 8004332:	4610      	mov	r0, r2
 8004334:	4619      	mov	r1, r3
 8004336:	f7fc fc57 	bl	8000be8 <__aeabi_d2f>
 800433a:	4603      	mov	r3, r0
 800433c:	4a2a      	ldr	r2, [pc, #168]	; (80043e8 <Fast_Mode+0x2b0>)
 800433e:	6013      	str	r3, [r2, #0]
		if(s_brake>400) //ha már legalább 30cm óta folyamatosan 3 vonal van alattunk
 8004340:	4b29      	ldr	r3, [pc, #164]	; (80043e8 <Fast_Mode+0x2b0>)
 8004342:	edd3 7a00 	vldr	s15, [r3]
 8004346:	ed9f 7a2c 	vldr	s14, [pc, #176]	; 80043f8 <Fast_Mode+0x2c0>
 800434a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800434e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004352:	dd13      	ble.n	800437c <Fast_Mode+0x244>
		{
			boostOrBrake=1;
 8004354:	4b1f      	ldr	r3, [pc, #124]	; (80043d4 <Fast_Mode+0x29c>)
 8004356:	2201      	movs	r2, #1
 8004358:	701a      	strb	r2, [r3, #0]
			if(state == FREERUN_MODE)
 800435a:	7ffb      	ldrb	r3, [r7, #31]
 800435c:	2b01      	cmp	r3, #1
 800435e:	d10d      	bne.n	800437c <Fast_Mode+0x244>
			{
				v_ref = 1200;
 8004360:	4b1e      	ldr	r3, [pc, #120]	; (80043dc <Fast_Mode+0x2a4>)
 8004362:	4a23      	ldr	r2, [pc, #140]	; (80043f0 <Fast_Mode+0x2b8>)
 8004364:	601a      	str	r2, [r3, #0]
				LED_B(0);
 8004366:	2201      	movs	r2, #1
 8004368:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800436c:	481d      	ldr	r0, [pc, #116]	; (80043e4 <Fast_Mode+0x2ac>)
 800436e:	f004 f92f 	bl	80085d0 <HAL_GPIO_WritePin>
 8004372:	e003      	b.n	800437c <Fast_Mode+0x244>
			}
		}
	}
	else //ha 1 vonalat érzékelünk
	{
		s_brake=0;
 8004374:	4b1c      	ldr	r3, [pc, #112]	; (80043e8 <Fast_Mode+0x2b0>)
 8004376:	f04f 0200 	mov.w	r2, #0
 800437a:	601a      	str	r2, [r3, #0]
	}
	t_prev=t;
 800437c:	4a1b      	ldr	r2, [pc, #108]	; (80043ec <Fast_Mode+0x2b4>)
 800437e:	687b      	ldr	r3, [r7, #4]
 8004380:	6013      	str	r3, [r2, #0]

	/*****SC üzemmód******/
	if(state==SC_MODE)
 8004382:	7ffb      	ldrb	r3, [r7, #31]
 8004384:	2b00      	cmp	r3, #0
 8004386:	d147      	bne.n	8004418 <Fast_Mode+0x2e0>
	{
		uint32_t dist=(((uint16_t)rxBuf[5])<<8) | ((uint16_t)rxBuf[6]);
 8004388:	4b09      	ldr	r3, [pc, #36]	; (80043b0 <Fast_Mode+0x278>)
 800438a:	795b      	ldrb	r3, [r3, #5]
 800438c:	021b      	lsls	r3, r3, #8
 800438e:	4a08      	ldr	r2, [pc, #32]	; (80043b0 <Fast_Mode+0x278>)
 8004390:	7992      	ldrb	r2, [r2, #6]
 8004392:	4313      	orrs	r3, r2
 8004394:	617b      	str	r3, [r7, #20]
		if(dist>1000 || rxBuf[4]) v_ref=1500; //ha tul messze vana  SC vagy érvénytelen az olvasás
 8004396:	697b      	ldr	r3, [r7, #20]
 8004398:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800439c:	d803      	bhi.n	80043a6 <Fast_Mode+0x26e>
 800439e:	4b04      	ldr	r3, [pc, #16]	; (80043b0 <Fast_Mode+0x278>)
 80043a0:	791b      	ldrb	r3, [r3, #4]
 80043a2:	2b00      	cmp	r3, #0
 80043a4:	d02a      	beq.n	80043fc <Fast_Mode+0x2c4>
 80043a6:	4b0d      	ldr	r3, [pc, #52]	; (80043dc <Fast_Mode+0x2a4>)
 80043a8:	4a12      	ldr	r2, [pc, #72]	; (80043f4 <Fast_Mode+0x2bc>)
 80043aa:	601a      	str	r2, [r3, #0]
 80043ac:	e034      	b.n	8004418 <Fast_Mode+0x2e0>
 80043ae:	bf00      	nop
 80043b0:	20000634 	.word	0x20000634
 80043b4:	20000038 	.word	0x20000038
 80043b8:	2000061c 	.word	0x2000061c
 80043bc:	20000658 	.word	0x20000658
 80043c0:	408f4000 	.word	0x408f4000
 80043c4:	2000065c 	.word	0x2000065c
 80043c8:	2000003c 	.word	0x2000003c
 80043cc:	43960000 	.word	0x43960000
 80043d0:	44480000 	.word	0x44480000
 80043d4:	2000005c 	.word	0x2000005c
 80043d8:	20000640 	.word	0x20000640
 80043dc:	20000298 	.word	0x20000298
 80043e0:	451c4000 	.word	0x451c4000
 80043e4:	40020400 	.word	0x40020400
 80043e8:	20000660 	.word	0x20000660
 80043ec:	20000664 	.word	0x20000664
 80043f0:	44960000 	.word	0x44960000
 80043f4:	44bb8000 	.word	0x44bb8000
 80043f8:	43c80000 	.word	0x43c80000
		else v_ref = 2*(float)dist-400;
 80043fc:	697b      	ldr	r3, [r7, #20]
 80043fe:	ee07 3a90 	vmov	s15, r3
 8004402:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004406:	ee77 7aa7 	vadd.f32	s15, s15, s15
 800440a:	ed1f 7a05 	vldr	s14, [pc, #-20]	; 80043f8 <Fast_Mode+0x2c0>
 800440e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8004412:	4baf      	ldr	r3, [pc, #700]	; (80046d0 <Fast_Mode+0x598>)
 8004414:	edc3 7a00 	vstr	s15, [r3]
	}

	x_elso=(float)rxBuf[2]*204/255.0-102;//248
 8004418:	4bae      	ldr	r3, [pc, #696]	; (80046d4 <Fast_Mode+0x59c>)
 800441a:	789b      	ldrb	r3, [r3, #2]
 800441c:	ee07 3a90 	vmov	s15, r3
 8004420:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8004424:	ed9f 7aac 	vldr	s14, [pc, #688]	; 80046d8 <Fast_Mode+0x5a0>
 8004428:	ee67 7a87 	vmul.f32	s15, s15, s14
 800442c:	ee17 0a90 	vmov	r0, s15
 8004430:	f7fc f8aa 	bl	8000588 <__aeabi_f2d>
 8004434:	a39e      	add	r3, pc, #632	; (adr r3, 80046b0 <Fast_Mode+0x578>)
 8004436:	e9d3 2300 	ldrd	r2, r3, [r3]
 800443a:	f7fc fa27 	bl	800088c <__aeabi_ddiv>
 800443e:	4602      	mov	r2, r0
 8004440:	460b      	mov	r3, r1
 8004442:	4610      	mov	r0, r2
 8004444:	4619      	mov	r1, r3
 8004446:	f04f 0200 	mov.w	r2, #0
 800444a:	4ba4      	ldr	r3, [pc, #656]	; (80046dc <Fast_Mode+0x5a4>)
 800444c:	f7fb ff3c 	bl	80002c8 <__aeabi_dsub>
 8004450:	4602      	mov	r2, r0
 8004452:	460b      	mov	r3, r1
 8004454:	4610      	mov	r0, r2
 8004456:	4619      	mov	r1, r3
 8004458:	f7fc fbc6 	bl	8000be8 <__aeabi_d2f>
 800445c:	4603      	mov	r3, r0
 800445e:	4aa0      	ldr	r2, [pc, #640]	; (80046e0 <Fast_Mode+0x5a8>)
 8004460:	6013      	str	r3, [r2, #0]
	x_hatso=(float)rxBuf[3]*204/255.0-102; //244
 8004462:	4b9c      	ldr	r3, [pc, #624]	; (80046d4 <Fast_Mode+0x59c>)
 8004464:	78db      	ldrb	r3, [r3, #3]
 8004466:	ee07 3a90 	vmov	s15, r3
 800446a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800446e:	ed9f 7a9a 	vldr	s14, [pc, #616]	; 80046d8 <Fast_Mode+0x5a0>
 8004472:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004476:	ee17 0a90 	vmov	r0, s15
 800447a:	f7fc f885 	bl	8000588 <__aeabi_f2d>
 800447e:	a38c      	add	r3, pc, #560	; (adr r3, 80046b0 <Fast_Mode+0x578>)
 8004480:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004484:	f7fc fa02 	bl	800088c <__aeabi_ddiv>
 8004488:	4602      	mov	r2, r0
 800448a:	460b      	mov	r3, r1
 800448c:	4610      	mov	r0, r2
 800448e:	4619      	mov	r1, r3
 8004490:	f04f 0200 	mov.w	r2, #0
 8004494:	4b91      	ldr	r3, [pc, #580]	; (80046dc <Fast_Mode+0x5a4>)
 8004496:	f7fb ff17 	bl	80002c8 <__aeabi_dsub>
 800449a:	4602      	mov	r2, r0
 800449c:	460b      	mov	r3, r1
 800449e:	4610      	mov	r0, r2
 80044a0:	4619      	mov	r1, r3
 80044a2:	f7fc fba1 	bl	8000be8 <__aeabi_d2f>
 80044a6:	4603      	mov	r3, r0
 80044a8:	4a8e      	ldr	r2, [pc, #568]	; (80046e4 <Fast_Mode+0x5ac>)
 80044aa:	6013      	str	r3, [r2, #0]
	delta=atan((float)(x_elso-x_hatso)/L_SENSOR);
 80044ac:	4b8c      	ldr	r3, [pc, #560]	; (80046e0 <Fast_Mode+0x5a8>)
 80044ae:	ed93 7a00 	vldr	s14, [r3]
 80044b2:	4b8c      	ldr	r3, [pc, #560]	; (80046e4 <Fast_Mode+0x5ac>)
 80044b4:	edd3 7a00 	vldr	s15, [r3]
 80044b8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80044bc:	ee17 0a90 	vmov	r0, s15
 80044c0:	f7fc f862 	bl	8000588 <__aeabi_f2d>
 80044c4:	f04f 0200 	mov.w	r2, #0
 80044c8:	4b87      	ldr	r3, [pc, #540]	; (80046e8 <Fast_Mode+0x5b0>)
 80044ca:	f7fc f9df 	bl	800088c <__aeabi_ddiv>
 80044ce:	4602      	mov	r2, r0
 80044d0:	460b      	mov	r3, r1
 80044d2:	ec43 2b17 	vmov	d7, r2, r3
 80044d6:	eeb0 0a47 	vmov.f32	s0, s14
 80044da:	eef0 0a67 	vmov.f32	s1, s15
 80044de:	f00a fdab 	bl	800f038 <atan>
 80044e2:	ec53 2b10 	vmov	r2, r3, d0
 80044e6:	4610      	mov	r0, r2
 80044e8:	4619      	mov	r1, r3
 80044ea:	f7fc fb7d 	bl	8000be8 <__aeabi_d2f>
 80044ee:	4603      	mov	r3, r0
 80044f0:	4a7e      	ldr	r2, [pc, #504]	; (80046ec <Fast_Mode+0x5b4>)
 80044f2:	6013      	str	r3, [r2, #0]
	/**/
	//szabályozóparaméterek ujraszámolása az aktuális sebesség alapján
	if(state==SC_MODE)
 80044f4:	7ffb      	ldrb	r3, [r7, #31]
 80044f6:	2b00      	cmp	r3, #0
 80044f8:	d10a      	bne.n	8004510 <Fast_Mode+0x3d8>
	{
		k_p = -0.004;
 80044fa:	4b7d      	ldr	r3, [pc, #500]	; (80046f0 <Fast_Mode+0x5b8>)
 80044fc:	4a7d      	ldr	r2, [pc, #500]	; (80046f4 <Fast_Mode+0x5bc>)
 80044fe:	601a      	str	r2, [r3, #0]
		kD = -0.004;
 8004500:	4b7d      	ldr	r3, [pc, #500]	; (80046f8 <Fast_Mode+0x5c0>)
 8004502:	4a7c      	ldr	r2, [pc, #496]	; (80046f4 <Fast_Mode+0x5bc>)
 8004504:	601a      	str	r2, [r3, #0]
		k_delta = 0;
 8004506:	4b7d      	ldr	r3, [pc, #500]	; (80046fc <Fast_Mode+0x5c4>)
 8004508:	f04f 0200 	mov.w	r2, #0
 800450c:	601a      	str	r2, [r3, #0]
 800450e:	e10c      	b.n	800472a <Fast_Mode+0x5f2>
	}

	else //FREERUN modes
	{
		if(v>150 || v<-150)
 8004510:	4b7b      	ldr	r3, [pc, #492]	; (8004700 <Fast_Mode+0x5c8>)
 8004512:	edd3 7a00 	vldr	s15, [r3]
 8004516:	ed9f 7a7b 	vldr	s14, [pc, #492]	; 8004704 <Fast_Mode+0x5cc>
 800451a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800451e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004522:	dc0a      	bgt.n	800453a <Fast_Mode+0x402>
 8004524:	4b76      	ldr	r3, [pc, #472]	; (8004700 <Fast_Mode+0x5c8>)
 8004526:	edd3 7a00 	vldr	s15, [r3]
 800452a:	ed9f 7a77 	vldr	s14, [pc, #476]	; 8004708 <Fast_Mode+0x5d0>
 800452e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004532:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004536:	f140 80ef 	bpl.w	8004718 <Fast_Mode+0x5e0>
		{
			if(v<2000) //kanyar
 800453a:	4b71      	ldr	r3, [pc, #452]	; (8004700 <Fast_Mode+0x5c8>)
 800453c:	edd3 7a00 	vldr	s15, [r3]
 8004540:	ed9f 7a72 	vldr	s14, [pc, #456]	; 800470c <Fast_Mode+0x5d4>
 8004544:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004548:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800454c:	d557      	bpl.n	80045fe <Fast_Mode+0x4c6>
			{
				k_p = -L/(v*v)*S1MULTS2_SLOW;
 800454e:	4b6c      	ldr	r3, [pc, #432]	; (8004700 <Fast_Mode+0x5c8>)
 8004550:	ed93 7a00 	vldr	s14, [r3]
 8004554:	4b6a      	ldr	r3, [pc, #424]	; (8004700 <Fast_Mode+0x5c8>)
 8004556:	edd3 7a00 	vldr	s15, [r3]
 800455a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800455e:	ee17 0a90 	vmov	r0, s15
 8004562:	f7fc f811 	bl	8000588 <__aeabi_f2d>
 8004566:	4602      	mov	r2, r0
 8004568:	460b      	mov	r3, r1
 800456a:	a153      	add	r1, pc, #332	; (adr r1, 80046b8 <Fast_Mode+0x580>)
 800456c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004570:	f7fc f98c 	bl	800088c <__aeabi_ddiv>
 8004574:	4602      	mov	r2, r0
 8004576:	460b      	mov	r3, r1
 8004578:	4610      	mov	r0, r2
 800457a:	4619      	mov	r1, r3
 800457c:	a350      	add	r3, pc, #320	; (adr r3, 80046c0 <Fast_Mode+0x588>)
 800457e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004582:	f7fc f859 	bl	8000638 <__aeabi_dmul>
 8004586:	4602      	mov	r2, r0
 8004588:	460b      	mov	r3, r1
 800458a:	4610      	mov	r0, r2
 800458c:	4619      	mov	r1, r3
 800458e:	f7fc fb2b 	bl	8000be8 <__aeabi_d2f>
 8004592:	4603      	mov	r3, r0
 8004594:	4a56      	ldr	r2, [pc, #344]	; (80046f0 <Fast_Mode+0x5b8>)
 8004596:	6013      	str	r3, [r2, #0]
				k_delta = L/v*(S1ADDS2_SLOW-v*k_p);
 8004598:	4b59      	ldr	r3, [pc, #356]	; (8004700 <Fast_Mode+0x5c8>)
 800459a:	681b      	ldr	r3, [r3, #0]
 800459c:	4618      	mov	r0, r3
 800459e:	f7fb fff3 	bl	8000588 <__aeabi_f2d>
 80045a2:	4602      	mov	r2, r0
 80045a4:	460b      	mov	r3, r1
 80045a6:	a148      	add	r1, pc, #288	; (adr r1, 80046c8 <Fast_Mode+0x590>)
 80045a8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80045ac:	f7fc f96e 	bl	800088c <__aeabi_ddiv>
 80045b0:	4602      	mov	r2, r0
 80045b2:	460b      	mov	r3, r1
 80045b4:	4614      	mov	r4, r2
 80045b6:	461d      	mov	r5, r3
 80045b8:	4b51      	ldr	r3, [pc, #324]	; (8004700 <Fast_Mode+0x5c8>)
 80045ba:	ed93 7a00 	vldr	s14, [r3]
 80045be:	4b4c      	ldr	r3, [pc, #304]	; (80046f0 <Fast_Mode+0x5b8>)
 80045c0:	edd3 7a00 	vldr	s15, [r3]
 80045c4:	ee67 7a27 	vmul.f32	s15, s14, s15
 80045c8:	eeb9 7a08 	vmov.f32	s14, #152	; 0xc0c00000 -6.0
 80045cc:	ee77 7a67 	vsub.f32	s15, s14, s15
 80045d0:	ee17 0a90 	vmov	r0, s15
 80045d4:	f7fb ffd8 	bl	8000588 <__aeabi_f2d>
 80045d8:	4602      	mov	r2, r0
 80045da:	460b      	mov	r3, r1
 80045dc:	4620      	mov	r0, r4
 80045de:	4629      	mov	r1, r5
 80045e0:	f7fc f82a 	bl	8000638 <__aeabi_dmul>
 80045e4:	4602      	mov	r2, r0
 80045e6:	460b      	mov	r3, r1
 80045e8:	4610      	mov	r0, r2
 80045ea:	4619      	mov	r1, r3
 80045ec:	f7fc fafc 	bl	8000be8 <__aeabi_d2f>
 80045f0:	4603      	mov	r3, r0
 80045f2:	4a42      	ldr	r2, [pc, #264]	; (80046fc <Fast_Mode+0x5c4>)
 80045f4:	6013      	str	r3, [r2, #0]
				kD=-0.06;
 80045f6:	4b40      	ldr	r3, [pc, #256]	; (80046f8 <Fast_Mode+0x5c0>)
 80045f8:	4a45      	ldr	r2, [pc, #276]	; (8004710 <Fast_Mode+0x5d8>)
 80045fa:	601a      	str	r2, [r3, #0]
			if(v<2000) //kanyar
 80045fc:	e095      	b.n	800472a <Fast_Mode+0x5f2>
				//kD=0;
			}
			else //egyenes
			{
				k_p = -L/(v*v)*S1MULTS2_SLOW;
 80045fe:	4b40      	ldr	r3, [pc, #256]	; (8004700 <Fast_Mode+0x5c8>)
 8004600:	ed93 7a00 	vldr	s14, [r3]
 8004604:	4b3e      	ldr	r3, [pc, #248]	; (8004700 <Fast_Mode+0x5c8>)
 8004606:	edd3 7a00 	vldr	s15, [r3]
 800460a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800460e:	ee17 0a90 	vmov	r0, s15
 8004612:	f7fb ffb9 	bl	8000588 <__aeabi_f2d>
 8004616:	4602      	mov	r2, r0
 8004618:	460b      	mov	r3, r1
 800461a:	a127      	add	r1, pc, #156	; (adr r1, 80046b8 <Fast_Mode+0x580>)
 800461c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004620:	f7fc f934 	bl	800088c <__aeabi_ddiv>
 8004624:	4602      	mov	r2, r0
 8004626:	460b      	mov	r3, r1
 8004628:	4610      	mov	r0, r2
 800462a:	4619      	mov	r1, r3
 800462c:	a324      	add	r3, pc, #144	; (adr r3, 80046c0 <Fast_Mode+0x588>)
 800462e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004632:	f7fc f801 	bl	8000638 <__aeabi_dmul>
 8004636:	4602      	mov	r2, r0
 8004638:	460b      	mov	r3, r1
 800463a:	4610      	mov	r0, r2
 800463c:	4619      	mov	r1, r3
 800463e:	f7fc fad3 	bl	8000be8 <__aeabi_d2f>
 8004642:	4603      	mov	r3, r0
 8004644:	4a2a      	ldr	r2, [pc, #168]	; (80046f0 <Fast_Mode+0x5b8>)
 8004646:	6013      	str	r3, [r2, #0]
				k_delta = L/v*(S1ADDS2_SLOW-v*k_p);
 8004648:	4b2d      	ldr	r3, [pc, #180]	; (8004700 <Fast_Mode+0x5c8>)
 800464a:	681b      	ldr	r3, [r3, #0]
 800464c:	4618      	mov	r0, r3
 800464e:	f7fb ff9b 	bl	8000588 <__aeabi_f2d>
 8004652:	4602      	mov	r2, r0
 8004654:	460b      	mov	r3, r1
 8004656:	a11c      	add	r1, pc, #112	; (adr r1, 80046c8 <Fast_Mode+0x590>)
 8004658:	e9d1 0100 	ldrd	r0, r1, [r1]
 800465c:	f7fc f916 	bl	800088c <__aeabi_ddiv>
 8004660:	4602      	mov	r2, r0
 8004662:	460b      	mov	r3, r1
 8004664:	4614      	mov	r4, r2
 8004666:	461d      	mov	r5, r3
 8004668:	4b25      	ldr	r3, [pc, #148]	; (8004700 <Fast_Mode+0x5c8>)
 800466a:	ed93 7a00 	vldr	s14, [r3]
 800466e:	4b20      	ldr	r3, [pc, #128]	; (80046f0 <Fast_Mode+0x5b8>)
 8004670:	edd3 7a00 	vldr	s15, [r3]
 8004674:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004678:	eeb9 7a08 	vmov.f32	s14, #152	; 0xc0c00000 -6.0
 800467c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004680:	ee17 0a90 	vmov	r0, s15
 8004684:	f7fb ff80 	bl	8000588 <__aeabi_f2d>
 8004688:	4602      	mov	r2, r0
 800468a:	460b      	mov	r3, r1
 800468c:	4620      	mov	r0, r4
 800468e:	4629      	mov	r1, r5
 8004690:	f7fb ffd2 	bl	8000638 <__aeabi_dmul>
 8004694:	4602      	mov	r2, r0
 8004696:	460b      	mov	r3, r1
 8004698:	4610      	mov	r0, r2
 800469a:	4619      	mov	r1, r3
 800469c:	f7fc faa4 	bl	8000be8 <__aeabi_d2f>
 80046a0:	4603      	mov	r3, r0
 80046a2:	4a16      	ldr	r2, [pc, #88]	; (80046fc <Fast_Mode+0x5c4>)
 80046a4:	6013      	str	r3, [r2, #0]
				kD=-0.05;
 80046a6:	4b14      	ldr	r3, [pc, #80]	; (80046f8 <Fast_Mode+0x5c0>)
 80046a8:	4a1a      	ldr	r2, [pc, #104]	; (8004714 <Fast_Mode+0x5dc>)
 80046aa:	601a      	str	r2, [r3, #0]
			if(v<2000) //kanyar
 80046ac:	e03d      	b.n	800472a <Fast_Mode+0x5f2>
 80046ae:	bf00      	nop
 80046b0:	00000000 	.word	0x00000000
 80046b4:	406fe000 	.word	0x406fe000
 80046b8:	00000000 	.word	0x00000000
 80046bc:	c0716000 	.word	0xc0716000
 80046c0:	fd21ff2e 	.word	0xfd21ff2e
 80046c4:	402275f6 	.word	0x402275f6
 80046c8:	00000000 	.word	0x00000000
 80046cc:	40716000 	.word	0x40716000
 80046d0:	20000298 	.word	0x20000298
 80046d4:	20000634 	.word	0x20000634
 80046d8:	434c0000 	.word	0x434c0000
 80046dc:	40598000 	.word	0x40598000
 80046e0:	20000668 	.word	0x20000668
 80046e4:	2000066c 	.word	0x2000066c
 80046e8:	407c4000 	.word	0x407c4000
 80046ec:	20000670 	.word	0x20000670
 80046f0:	20000060 	.word	0x20000060
 80046f4:	bb83126f 	.word	0xbb83126f
 80046f8:	20000064 	.word	0x20000064
 80046fc:	20000068 	.word	0x20000068
 8004700:	2000061c 	.word	0x2000061c
 8004704:	43160000 	.word	0x43160000
 8004708:	c3160000 	.word	0xc3160000
 800470c:	44fa0000 	.word	0x44fa0000
 8004710:	bd75c28f 	.word	0xbd75c28f
 8004714:	bd4ccccd 	.word	0xbd4ccccd
			}
		}
		else
		{
			k_p=K_P_200;
 8004718:	4b1f      	ldr	r3, [pc, #124]	; (8004798 <Fast_Mode+0x660>)
 800471a:	4a20      	ldr	r2, [pc, #128]	; (800479c <Fast_Mode+0x664>)
 800471c:	601a      	str	r2, [r3, #0]
			k_delta=K_DELTA_200;
 800471e:	4b20      	ldr	r3, [pc, #128]	; (80047a0 <Fast_Mode+0x668>)
 8004720:	4a20      	ldr	r2, [pc, #128]	; (80047a4 <Fast_Mode+0x66c>)
 8004722:	601a      	str	r2, [r3, #0]
			kD=-0.06;
 8004724:	4b20      	ldr	r3, [pc, #128]	; (80047a8 <Fast_Mode+0x670>)
 8004726:	4a21      	ldr	r2, [pc, #132]	; (80047ac <Fast_Mode+0x674>)
 8004728:	601a      	str	r2, [r3, #0]
		}
	}
	gamma = -k_p * x_elso -k_delta * delta - kD * (x_elso-x_elso_prev);
 800472a:	4b1b      	ldr	r3, [pc, #108]	; (8004798 <Fast_Mode+0x660>)
 800472c:	edd3 7a00 	vldr	s15, [r3]
 8004730:	eeb1 7a67 	vneg.f32	s14, s15
 8004734:	4b1e      	ldr	r3, [pc, #120]	; (80047b0 <Fast_Mode+0x678>)
 8004736:	edd3 7a00 	vldr	s15, [r3]
 800473a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800473e:	4b18      	ldr	r3, [pc, #96]	; (80047a0 <Fast_Mode+0x668>)
 8004740:	edd3 6a00 	vldr	s13, [r3]
 8004744:	4b1b      	ldr	r3, [pc, #108]	; (80047b4 <Fast_Mode+0x67c>)
 8004746:	edd3 7a00 	vldr	s15, [r3]
 800474a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800474e:	ee37 7a67 	vsub.f32	s14, s14, s15
 8004752:	4b17      	ldr	r3, [pc, #92]	; (80047b0 <Fast_Mode+0x678>)
 8004754:	edd3 6a00 	vldr	s13, [r3]
 8004758:	4b17      	ldr	r3, [pc, #92]	; (80047b8 <Fast_Mode+0x680>)
 800475a:	edd3 7a00 	vldr	s15, [r3]
 800475e:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8004762:	4b11      	ldr	r3, [pc, #68]	; (80047a8 <Fast_Mode+0x670>)
 8004764:	edd3 7a00 	vldr	s15, [r3]
 8004768:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800476c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004770:	4b12      	ldr	r3, [pc, #72]	; (80047bc <Fast_Mode+0x684>)
 8004772:	edc3 7a00 	vstr	s15, [r3]
	x_elso_prev = x_elso;
 8004776:	4b0e      	ldr	r3, [pc, #56]	; (80047b0 <Fast_Mode+0x678>)
 8004778:	681b      	ldr	r3, [r3, #0]
 800477a:	4a0f      	ldr	r2, [pc, #60]	; (80047b8 <Fast_Mode+0x680>)
 800477c:	6013      	str	r3, [r2, #0]

	*state_pointer=state;
 800477e:	68bb      	ldr	r3, [r7, #8]
 8004780:	7ffa      	ldrb	r2, [r7, #31]
 8004782:	701a      	strb	r2, [r3, #0]
	return gamma;
 8004784:	4b0d      	ldr	r3, [pc, #52]	; (80047bc <Fast_Mode+0x684>)
 8004786:	681b      	ldr	r3, [r3, #0]
}
 8004788:	ee07 3a90 	vmov	s15, r3
 800478c:	eeb0 0a67 	vmov.f32	s0, s15
 8004790:	3720      	adds	r7, #32
 8004792:	46bd      	mov	sp, r7
 8004794:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8004798:	20000060 	.word	0x20000060
 800479c:	ba30dc42 	.word	0xba30dc42
 80047a0:	20000068 	.word	0x20000068
 80047a4:	bf21eadf 	.word	0xbf21eadf
 80047a8:	20000064 	.word	0x20000064
 80047ac:	bd75c28f 	.word	0xbd75c28f
 80047b0:	20000668 	.word	0x20000668
 80047b4:	20000670 	.word	0x20000670
 80047b8:	20000674 	.word	0x20000674
 80047bc:	20000678 	.word	0x20000678

080047c0 <Skill_Mode>:

float Skill_Mode(UART_HandleTypeDef *huart_debugg, float kP, float kD, uint32_t t)
{
 80047c0:	b580      	push	{r7, lr}
 80047c2:	b088      	sub	sp, #32
 80047c4:	af00      	add	r7, sp, #0
 80047c6:	60f8      	str	r0, [r7, #12]
 80047c8:	ed87 0a02 	vstr	s0, [r7, #8]
 80047cc:	edc7 0a01 	vstr	s1, [r7, #4]
 80047d0:	6039      	str	r1, [r7, #0]
	static uint32_t t_prev=0;
	int byte=0;
 80047d2:	2300      	movs	r3, #0
 80047d4:	61fb      	str	r3, [r7, #28]
	static int byte_prev=0;
	int delta_byte;
	float p=0;
 80047d6:	f04f 0300 	mov.w	r3, #0
 80047da:	617b      	str	r3, [r7, #20]
/*	uint8_t str[40];
	sprintf(str,"%d,  %d,  %d,  %d,  %d\n\r",rxBuf[1],rxBuf[2],rxBuf[3],rxBuf[4],rxBuf[5]);
	HAL_UART_Transmit(huart_debugg, str, strlen(str), 10);
*/

	if(LINE_CNT>3 || ignore)//ha éppen node-on vagyunk, akkor az átlagot követjük
 80047dc:	4b8f      	ldr	r3, [pc, #572]	; (8004a1c <Skill_Mode+0x25c>)
 80047de:	785b      	ldrb	r3, [r3, #1]
 80047e0:	2b03      	cmp	r3, #3
 80047e2:	d803      	bhi.n	80047ec <Skill_Mode+0x2c>
 80047e4:	4b8e      	ldr	r3, [pc, #568]	; (8004a20 <Skill_Mode+0x260>)
 80047e6:	781b      	ldrb	r3, [r3, #0]
 80047e8:	2b00      	cmp	r3, #0
 80047ea:	d022      	beq.n	8004832 <Skill_Mode+0x72>
	{
		byte=0;
 80047ec:	2300      	movs	r3, #0
 80047ee:	61fb      	str	r3, [r7, #28]
		for(i=0;i<LINE_CNT;i++)
 80047f0:	2300      	movs	r3, #0
 80047f2:	61bb      	str	r3, [r7, #24]
 80047f4:	e00a      	b.n	800480c <Skill_Mode+0x4c>
		{
			byte += rxBuf[i+2];
 80047f6:	69bb      	ldr	r3, [r7, #24]
 80047f8:	3302      	adds	r3, #2
 80047fa:	4a88      	ldr	r2, [pc, #544]	; (8004a1c <Skill_Mode+0x25c>)
 80047fc:	5cd3      	ldrb	r3, [r2, r3]
 80047fe:	461a      	mov	r2, r3
 8004800:	69fb      	ldr	r3, [r7, #28]
 8004802:	4413      	add	r3, r2
 8004804:	61fb      	str	r3, [r7, #28]
		for(i=0;i<LINE_CNT;i++)
 8004806:	69bb      	ldr	r3, [r7, #24]
 8004808:	3301      	adds	r3, #1
 800480a:	61bb      	str	r3, [r7, #24]
 800480c:	4b83      	ldr	r3, [pc, #524]	; (8004a1c <Skill_Mode+0x25c>)
 800480e:	785b      	ldrb	r3, [r3, #1]
 8004810:	461a      	mov	r2, r3
 8004812:	69bb      	ldr	r3, [r7, #24]
 8004814:	4293      	cmp	r3, r2
 8004816:	dbee      	blt.n	80047f6 <Skill_Mode+0x36>
		}

		if(LINE_CNT) byte /= LINE_CNT;
 8004818:	4b80      	ldr	r3, [pc, #512]	; (8004a1c <Skill_Mode+0x25c>)
 800481a:	785b      	ldrb	r3, [r3, #1]
 800481c:	2b00      	cmp	r3, #0
 800481e:	f000 8112 	beq.w	8004a46 <Skill_Mode+0x286>
 8004822:	4b7e      	ldr	r3, [pc, #504]	; (8004a1c <Skill_Mode+0x25c>)
 8004824:	785b      	ldrb	r3, [r3, #1]
 8004826:	461a      	mov	r2, r3
 8004828:	69fb      	ldr	r3, [r7, #28]
 800482a:	fb93 f3f2 	sdiv	r3, r3, r2
 800482e:	61fb      	str	r3, [r7, #28]
 8004830:	e109      	b.n	8004a46 <Skill_Mode+0x286>
	}
	else if((path==LEFT && orientation==FORWARD) || (path==RIGHT && orientation==REVERSE))
 8004832:	4b7c      	ldr	r3, [pc, #496]	; (8004a24 <Skill_Mode+0x264>)
 8004834:	781b      	ldrb	r3, [r3, #0]
 8004836:	2b00      	cmp	r3, #0
 8004838:	d103      	bne.n	8004842 <Skill_Mode+0x82>
 800483a:	4b7b      	ldr	r3, [pc, #492]	; (8004a28 <Skill_Mode+0x268>)
 800483c:	781b      	ldrb	r3, [r3, #0]
 800483e:	2b00      	cmp	r3, #0
 8004840:	d007      	beq.n	8004852 <Skill_Mode+0x92>
 8004842:	4b78      	ldr	r3, [pc, #480]	; (8004a24 <Skill_Mode+0x264>)
 8004844:	781b      	ldrb	r3, [r3, #0]
 8004846:	2b02      	cmp	r3, #2
 8004848:	d152      	bne.n	80048f0 <Skill_Mode+0x130>
 800484a:	4b77      	ldr	r3, [pc, #476]	; (8004a28 <Skill_Mode+0x268>)
 800484c:	781b      	ldrb	r3, [r3, #0]
 800484e:	2b01      	cmp	r3, #1
 8004850:	d14e      	bne.n	80048f0 <Skill_Mode+0x130>
	{
		byte = LINE1; //az első vonalt kell követni
 8004852:	4b72      	ldr	r3, [pc, #456]	; (8004a1c <Skill_Mode+0x25c>)
 8004854:	789b      	ldrb	r3, [r3, #2]
 8004856:	61fb      	str	r3, [r7, #28]
		delta_byte=abs((int)byte-byte_prev);
 8004858:	4b74      	ldr	r3, [pc, #464]	; (8004a2c <Skill_Mode+0x26c>)
 800485a:	681b      	ldr	r3, [r3, #0]
 800485c:	69fa      	ldr	r2, [r7, #28]
 800485e:	1ad3      	subs	r3, r2, r3
 8004860:	2b00      	cmp	r3, #0
 8004862:	bfb8      	it	lt
 8004864:	425b      	neglt	r3, r3
 8004866:	613b      	str	r3, [r7, #16]
		/**/
		if((delta_byte>ESTUARY_TH && estuary!=ESTUARY_MODE_INIT)|| estuary==ESTUARY_MODE_ON) //torkolatkompenzálás
 8004868:	693b      	ldr	r3, [r7, #16]
 800486a:	2b46      	cmp	r3, #70	; 0x46
 800486c:	dd03      	ble.n	8004876 <Skill_Mode+0xb6>
 800486e:	4b70      	ldr	r3, [pc, #448]	; (8004a30 <Skill_Mode+0x270>)
 8004870:	781b      	ldrb	r3, [r3, #0]
 8004872:	2b00      	cmp	r3, #0
 8004874:	d103      	bne.n	800487e <Skill_Mode+0xbe>
 8004876:	4b6e      	ldr	r3, [pc, #440]	; (8004a30 <Skill_Mode+0x270>)
 8004878:	781b      	ldrb	r3, [r3, #0]
 800487a:	2b02      	cmp	r3, #2
 800487c:	d125      	bne.n	80048ca <Skill_Mode+0x10a>
		{

			if(estuary==ESTUARY_MODE_OFF)t_prev=t;//ha most kapcsoltuk be a torkolatkompenzálást, akkor mostantól mérjük az eltelt időt
 800487e:	4b6c      	ldr	r3, [pc, #432]	; (8004a30 <Skill_Mode+0x270>)
 8004880:	781b      	ldrb	r3, [r3, #0]
 8004882:	2b01      	cmp	r3, #1
 8004884:	d102      	bne.n	800488c <Skill_Mode+0xcc>
 8004886:	4a6b      	ldr	r2, [pc, #428]	; (8004a34 <Skill_Mode+0x274>)
 8004888:	683b      	ldr	r3, [r7, #0]
 800488a:	6013      	str	r3, [r2, #0]
			if((t-t_prev)>ESTURAY_TIMEOUT)//400ms után mindenképpen kilépünk a kompenzálásból
 800488c:	4b69      	ldr	r3, [pc, #420]	; (8004a34 <Skill_Mode+0x274>)
 800488e:	681b      	ldr	r3, [r3, #0]
 8004890:	683a      	ldr	r2, [r7, #0]
 8004892:	1ad3      	subs	r3, r2, r3
 8004894:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8004898:	d908      	bls.n	80048ac <Skill_Mode+0xec>
			{
				estuary=ESTUARY_MODE_OFF; //ha letelt a timeout kilépünk a kompenzálásból
 800489a:	4b65      	ldr	r3, [pc, #404]	; (8004a30 <Skill_Mode+0x270>)
 800489c:	2201      	movs	r2, #1
 800489e:	701a      	strb	r2, [r3, #0]
				LED_G(0);
 80048a0:	2201      	movs	r2, #1
 80048a2:	2102      	movs	r1, #2
 80048a4:	4864      	ldr	r0, [pc, #400]	; (8004a38 <Skill_Mode+0x278>)
 80048a6:	f003 fe93 	bl	80085d0 <HAL_GPIO_WritePin>
			if((t-t_prev)>ESTURAY_TIMEOUT)//400ms után mindenképpen kilépünk a kompenzálásból
 80048aa:	e020      	b.n	80048ee <Skill_Mode+0x12e>
			}
			else //ha még nem telt le az timout idő
			{
				byte = rxBuf[1+LINE_CNT]; //ilyenkor az utolsó vonalat nézzük az első helyett
 80048ac:	4b5b      	ldr	r3, [pc, #364]	; (8004a1c <Skill_Mode+0x25c>)
 80048ae:	785b      	ldrb	r3, [r3, #1]
 80048b0:	3301      	adds	r3, #1
 80048b2:	4a5a      	ldr	r2, [pc, #360]	; (8004a1c <Skill_Mode+0x25c>)
 80048b4:	5cd3      	ldrb	r3, [r2, r3]
 80048b6:	61fb      	str	r3, [r7, #28]
				estuary=ESTUARY_MODE_ON; //öntartás
 80048b8:	4b5d      	ldr	r3, [pc, #372]	; (8004a30 <Skill_Mode+0x270>)
 80048ba:	2202      	movs	r2, #2
 80048bc:	701a      	strb	r2, [r3, #0]
				LED_G(1);
 80048be:	2200      	movs	r2, #0
 80048c0:	2102      	movs	r1, #2
 80048c2:	485d      	ldr	r0, [pc, #372]	; (8004a38 <Skill_Mode+0x278>)
 80048c4:	f003 fe84 	bl	80085d0 <HAL_GPIO_WritePin>
			if((t-t_prev)>ESTURAY_TIMEOUT)//400ms után mindenképpen kilépünk a kompenzálásból
 80048c8:	e011      	b.n	80048ee <Skill_Mode+0x12e>
			}
		}
		else if(delta_byte<ESTUARY_EXIT && estuary==ESTUARY_MODE_ON) //ha már eléggé összeszűkült a torkolat, akkor nem kell kompenzálni
 80048ca:	693b      	ldr	r3, [r7, #16]
 80048cc:	2b2c      	cmp	r3, #44	; 0x2c
 80048ce:	f300 80a2 	bgt.w	8004a16 <Skill_Mode+0x256>
 80048d2:	4b57      	ldr	r3, [pc, #348]	; (8004a30 <Skill_Mode+0x270>)
 80048d4:	781b      	ldrb	r3, [r3, #0]
 80048d6:	2b02      	cmp	r3, #2
 80048d8:	f040 809d 	bne.w	8004a16 <Skill_Mode+0x256>
		{
			estuary=ESTUARY_MODE_OFF;
 80048dc:	4b54      	ldr	r3, [pc, #336]	; (8004a30 <Skill_Mode+0x270>)
 80048de:	2201      	movs	r2, #1
 80048e0:	701a      	strb	r2, [r3, #0]
			LED_G(0);
 80048e2:	2201      	movs	r2, #1
 80048e4:	2102      	movs	r1, #2
 80048e6:	4854      	ldr	r0, [pc, #336]	; (8004a38 <Skill_Mode+0x278>)
 80048e8:	f003 fe72 	bl	80085d0 <HAL_GPIO_WritePin>
		if((delta_byte>ESTUARY_TH && estuary!=ESTUARY_MODE_INIT)|| estuary==ESTUARY_MODE_ON) //torkolatkompenzálás
 80048ec:	e093      	b.n	8004a16 <Skill_Mode+0x256>
 80048ee:	e092      	b.n	8004a16 <Skill_Mode+0x256>
		}

	}
	else if((path==RIGHT && orientation==FORWARD) || (path==LEFT && orientation==REVERSE))
 80048f0:	4b4c      	ldr	r3, [pc, #304]	; (8004a24 <Skill_Mode+0x264>)
 80048f2:	781b      	ldrb	r3, [r3, #0]
 80048f4:	2b02      	cmp	r3, #2
 80048f6:	d103      	bne.n	8004900 <Skill_Mode+0x140>
 80048f8:	4b4b      	ldr	r3, [pc, #300]	; (8004a28 <Skill_Mode+0x268>)
 80048fa:	781b      	ldrb	r3, [r3, #0]
 80048fc:	2b00      	cmp	r3, #0
 80048fe:	d007      	beq.n	8004910 <Skill_Mode+0x150>
 8004900:	4b48      	ldr	r3, [pc, #288]	; (8004a24 <Skill_Mode+0x264>)
 8004902:	781b      	ldrb	r3, [r3, #0]
 8004904:	2b00      	cmp	r3, #0
 8004906:	d150      	bne.n	80049aa <Skill_Mode+0x1ea>
 8004908:	4b47      	ldr	r3, [pc, #284]	; (8004a28 <Skill_Mode+0x268>)
 800490a:	781b      	ldrb	r3, [r3, #0]
 800490c:	2b01      	cmp	r3, #1
 800490e:	d14c      	bne.n	80049aa <Skill_Mode+0x1ea>
	{
		byte = rxBuf[1+LINE_CNT];//az utolsó vonalat kell követni
 8004910:	4b42      	ldr	r3, [pc, #264]	; (8004a1c <Skill_Mode+0x25c>)
 8004912:	785b      	ldrb	r3, [r3, #1]
 8004914:	3301      	adds	r3, #1
 8004916:	4a41      	ldr	r2, [pc, #260]	; (8004a1c <Skill_Mode+0x25c>)
 8004918:	5cd3      	ldrb	r3, [r2, r3]
 800491a:	61fb      	str	r3, [r7, #28]
		delta_byte=abs((int)byte-byte_prev);
 800491c:	4b43      	ldr	r3, [pc, #268]	; (8004a2c <Skill_Mode+0x26c>)
 800491e:	681b      	ldr	r3, [r3, #0]
 8004920:	69fa      	ldr	r2, [r7, #28]
 8004922:	1ad3      	subs	r3, r2, r3
 8004924:	2b00      	cmp	r3, #0
 8004926:	bfb8      	it	lt
 8004928:	425b      	neglt	r3, r3
 800492a:	613b      	str	r3, [r7, #16]
		/**/
		if((delta_byte>ESTUARY_TH && estuary!=ESTUARY_MODE_INIT)|| estuary==ESTUARY_MODE_ON) //torkolatkompenzálás
 800492c:	693b      	ldr	r3, [r7, #16]
 800492e:	2b46      	cmp	r3, #70	; 0x46
 8004930:	dd03      	ble.n	800493a <Skill_Mode+0x17a>
 8004932:	4b3f      	ldr	r3, [pc, #252]	; (8004a30 <Skill_Mode+0x270>)
 8004934:	781b      	ldrb	r3, [r3, #0]
 8004936:	2b00      	cmp	r3, #0
 8004938:	d103      	bne.n	8004942 <Skill_Mode+0x182>
 800493a:	4b3d      	ldr	r3, [pc, #244]	; (8004a30 <Skill_Mode+0x270>)
 800493c:	781b      	ldrb	r3, [r3, #0]
 800493e:	2b02      	cmp	r3, #2
 8004940:	d122      	bne.n	8004988 <Skill_Mode+0x1c8>
		{
				if(estuary==ESTUARY_MODE_OFF)t_prev=t;//ha most kapcsoltuk be a torkolatkompenzálást, akkor mostantól mérjük az eltelt időt
 8004942:	4b3b      	ldr	r3, [pc, #236]	; (8004a30 <Skill_Mode+0x270>)
 8004944:	781b      	ldrb	r3, [r3, #0]
 8004946:	2b01      	cmp	r3, #1
 8004948:	d102      	bne.n	8004950 <Skill_Mode+0x190>
 800494a:	4a3a      	ldr	r2, [pc, #232]	; (8004a34 <Skill_Mode+0x274>)
 800494c:	683b      	ldr	r3, [r7, #0]
 800494e:	6013      	str	r3, [r2, #0]
				if((t-t_prev)>ESTURAY_TIMEOUT)//400ms után mindenképpen kilépünk a kompenzálásból
 8004950:	4b38      	ldr	r3, [pc, #224]	; (8004a34 <Skill_Mode+0x274>)
 8004952:	681b      	ldr	r3, [r3, #0]
 8004954:	683a      	ldr	r2, [r7, #0]
 8004956:	1ad3      	subs	r3, r2, r3
 8004958:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800495c:	d908      	bls.n	8004970 <Skill_Mode+0x1b0>
				{
					estuary=ESTUARY_MODE_OFF; //ha letelt a timeout kilépünk a kompenzálásból
 800495e:	4b34      	ldr	r3, [pc, #208]	; (8004a30 <Skill_Mode+0x270>)
 8004960:	2201      	movs	r2, #1
 8004962:	701a      	strb	r2, [r3, #0]
					LED_G(0);
 8004964:	2201      	movs	r2, #1
 8004966:	2102      	movs	r1, #2
 8004968:	4833      	ldr	r0, [pc, #204]	; (8004a38 <Skill_Mode+0x278>)
 800496a:	f003 fe31 	bl	80085d0 <HAL_GPIO_WritePin>
				if((t-t_prev)>ESTURAY_TIMEOUT)//400ms után mindenképpen kilépünk a kompenzálásból
 800496e:	e01b      	b.n	80049a8 <Skill_Mode+0x1e8>
				}
				else //ha még nem telt le az idő
				{
					byte = rxBuf[2]; //ilyenkor az első vonalat nézzük az utolsó helyett
 8004970:	4b2a      	ldr	r3, [pc, #168]	; (8004a1c <Skill_Mode+0x25c>)
 8004972:	789b      	ldrb	r3, [r3, #2]
 8004974:	61fb      	str	r3, [r7, #28]
					estuary=ESTUARY_MODE_ON; //öntartás
 8004976:	4b2e      	ldr	r3, [pc, #184]	; (8004a30 <Skill_Mode+0x270>)
 8004978:	2202      	movs	r2, #2
 800497a:	701a      	strb	r2, [r3, #0]
					LED_G(1);
 800497c:	2200      	movs	r2, #0
 800497e:	2102      	movs	r1, #2
 8004980:	482d      	ldr	r0, [pc, #180]	; (8004a38 <Skill_Mode+0x278>)
 8004982:	f003 fe25 	bl	80085d0 <HAL_GPIO_WritePin>
				if((t-t_prev)>ESTURAY_TIMEOUT)//400ms után mindenképpen kilépünk a kompenzálásból
 8004986:	e00f      	b.n	80049a8 <Skill_Mode+0x1e8>
				}
		}
		else if(delta_byte<ESTUARY_EXIT && estuary==ESTUARY_MODE_ON) //ha már eléggé összeszűkült a torkolat, akkor nem kell kompenzálni
 8004988:	693b      	ldr	r3, [r7, #16]
 800498a:	2b2c      	cmp	r3, #44	; 0x2c
 800498c:	dc5a      	bgt.n	8004a44 <Skill_Mode+0x284>
 800498e:	4b28      	ldr	r3, [pc, #160]	; (8004a30 <Skill_Mode+0x270>)
 8004990:	781b      	ldrb	r3, [r3, #0]
 8004992:	2b02      	cmp	r3, #2
 8004994:	d156      	bne.n	8004a44 <Skill_Mode+0x284>
		{
			estuary=ESTUARY_MODE_OFF;
 8004996:	4b26      	ldr	r3, [pc, #152]	; (8004a30 <Skill_Mode+0x270>)
 8004998:	2201      	movs	r2, #1
 800499a:	701a      	strb	r2, [r3, #0]
			LED_G(0);
 800499c:	2201      	movs	r2, #1
 800499e:	2102      	movs	r1, #2
 80049a0:	4825      	ldr	r0, [pc, #148]	; (8004a38 <Skill_Mode+0x278>)
 80049a2:	f003 fe15 	bl	80085d0 <HAL_GPIO_WritePin>
		if((delta_byte>ESTUARY_TH && estuary!=ESTUARY_MODE_INIT)|| estuary==ESTUARY_MODE_ON) //torkolatkompenzálás
 80049a6:	e04d      	b.n	8004a44 <Skill_Mode+0x284>
 80049a8:	e04c      	b.n	8004a44 <Skill_Mode+0x284>
		}

	}

	else if(path==MIDDLE)
 80049aa:	4b1e      	ldr	r3, [pc, #120]	; (8004a24 <Skill_Mode+0x264>)
 80049ac:	781b      	ldrb	r3, [r3, #0]
 80049ae:	2b01      	cmp	r3, #1
 80049b0:	d149      	bne.n	8004a46 <Skill_Mode+0x286>
	{
		if(LINE_CNT==1)byte = LINE1;//ha csak 1 vonal van, akkor azt követjük
 80049b2:	4b1a      	ldr	r3, [pc, #104]	; (8004a1c <Skill_Mode+0x25c>)
 80049b4:	785b      	ldrb	r3, [r3, #1]
 80049b6:	2b01      	cmp	r3, #1
 80049b8:	d103      	bne.n	80049c2 <Skill_Mode+0x202>
 80049ba:	4b18      	ldr	r3, [pc, #96]	; (8004a1c <Skill_Mode+0x25c>)
 80049bc:	789b      	ldrb	r3, [r3, #2]
 80049be:	61fb      	str	r3, [r7, #28]
 80049c0:	e041      	b.n	8004a46 <Skill_Mode+0x286>
		else if(LINE_CNT==3)//ha 3 vonal van
 80049c2:	4b16      	ldr	r3, [pc, #88]	; (8004a1c <Skill_Mode+0x25c>)
 80049c4:	785b      	ldrb	r3, [r3, #1]
 80049c6:	2b03      	cmp	r3, #3
 80049c8:	d113      	bne.n	80049f2 <Skill_Mode+0x232>
		{
			byte = rxBuf[3];//a középsőt követjük
 80049ca:	4b14      	ldr	r3, [pc, #80]	; (8004a1c <Skill_Mode+0x25c>)
 80049cc:	78db      	ldrb	r3, [r3, #3]
 80049ce:	61fb      	str	r3, [r7, #28]
			//folyamatosan nézzük, hogy az 1. és 3.vonal milyen messze van a vonalszenor középontjától
			tmp1=abs((int)LINE1-123);
 80049d0:	4b12      	ldr	r3, [pc, #72]	; (8004a1c <Skill_Mode+0x25c>)
 80049d2:	789b      	ldrb	r3, [r3, #2]
 80049d4:	3b7b      	subs	r3, #123	; 0x7b
 80049d6:	2b00      	cmp	r3, #0
 80049d8:	bfb8      	it	lt
 80049da:	425b      	neglt	r3, r3
 80049dc:	4a17      	ldr	r2, [pc, #92]	; (8004a3c <Skill_Mode+0x27c>)
 80049de:	6013      	str	r3, [r2, #0]
			tmp2=abs((int)LINE3-123);
 80049e0:	4b0e      	ldr	r3, [pc, #56]	; (8004a1c <Skill_Mode+0x25c>)
 80049e2:	791b      	ldrb	r3, [r3, #4]
 80049e4:	3b7b      	subs	r3, #123	; 0x7b
 80049e6:	2b00      	cmp	r3, #0
 80049e8:	bfb8      	it	lt
 80049ea:	425b      	neglt	r3, r3
 80049ec:	4a14      	ldr	r2, [pc, #80]	; (8004a40 <Skill_Mode+0x280>)
 80049ee:	6013      	str	r3, [r2, #0]
 80049f0:	e029      	b.n	8004a46 <Skill_Mode+0x286>
		}
		else if(LINE_CNT==2)//ha 2 vonal van, az azt jelenti, hogy az elágazás már annyira szétgáazott, hogy csak 2-t látunk a 3 vonalból
 80049f2:	4b0a      	ldr	r3, [pc, #40]	; (8004a1c <Skill_Mode+0x25c>)
 80049f4:	785b      	ldrb	r3, [r3, #1]
 80049f6:	2b02      	cmp	r3, #2
 80049f8:	d125      	bne.n	8004a46 <Skill_Mode+0x286>
		{
			if(tmp1<tmp2) byte = LINE1; //ha a jobboldali vonalat veszítettük el
 80049fa:	4b10      	ldr	r3, [pc, #64]	; (8004a3c <Skill_Mode+0x27c>)
 80049fc:	681a      	ldr	r2, [r3, #0]
 80049fe:	4b10      	ldr	r3, [pc, #64]	; (8004a40 <Skill_Mode+0x280>)
 8004a00:	681b      	ldr	r3, [r3, #0]
 8004a02:	429a      	cmp	r2, r3
 8004a04:	da03      	bge.n	8004a0e <Skill_Mode+0x24e>
 8004a06:	4b05      	ldr	r3, [pc, #20]	; (8004a1c <Skill_Mode+0x25c>)
 8004a08:	789b      	ldrb	r3, [r3, #2]
 8004a0a:	61fb      	str	r3, [r7, #28]
 8004a0c:	e01b      	b.n	8004a46 <Skill_Mode+0x286>
			else byte = LINE2; //ha a baloldali vonalat veszítettük el
 8004a0e:	4b03      	ldr	r3, [pc, #12]	; (8004a1c <Skill_Mode+0x25c>)
 8004a10:	78db      	ldrb	r3, [r3, #3]
 8004a12:	61fb      	str	r3, [r7, #28]
 8004a14:	e017      	b.n	8004a46 <Skill_Mode+0x286>
		if((delta_byte>ESTUARY_TH && estuary!=ESTUARY_MODE_INIT)|| estuary==ESTUARY_MODE_ON) //torkolatkompenzálás
 8004a16:	bf00      	nop
 8004a18:	e015      	b.n	8004a46 <Skill_Mode+0x286>
 8004a1a:	bf00      	nop
 8004a1c:	20000634 	.word	0x20000634
 8004a20:	2000063e 	.word	0x2000063e
 8004a24:	200002a6 	.word	0x200002a6
 8004a28:	200002a4 	.word	0x200002a4
 8004a2c:	2000067c 	.word	0x2000067c
 8004a30:	20000680 	.word	0x20000680
 8004a34:	20000684 	.word	0x20000684
 8004a38:	40020400 	.word	0x40020400
 8004a3c:	20000688 	.word	0x20000688
 8004a40:	2000068c 	.word	0x2000068c
		if((delta_byte>ESTUARY_TH && estuary!=ESTUARY_MODE_INIT)|| estuary==ESTUARY_MODE_ON) //torkolatkompenzálás
 8004a44:	bf00      	nop
		}
	}
	if(estuary==ESTUARY_MODE_INIT)estuary=ESTUARY_MODE_OFF;
 8004a46:	4b2a      	ldr	r3, [pc, #168]	; (8004af0 <Skill_Mode+0x330>)
 8004a48:	781b      	ldrb	r3, [r3, #0]
 8004a4a:	2b00      	cmp	r3, #0
 8004a4c:	d102      	bne.n	8004a54 <Skill_Mode+0x294>
 8004a4e:	4b28      	ldr	r3, [pc, #160]	; (8004af0 <Skill_Mode+0x330>)
 8004a50:	2201      	movs	r2, #1
 8004a52:	701a      	strb	r2, [r3, #0]
	//p = (float)byte * 204/248.0-102;
	p = (float)byte * 204/255.0-102;
 8004a54:	69fb      	ldr	r3, [r7, #28]
 8004a56:	ee07 3a90 	vmov	s15, r3
 8004a5a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004a5e:	ed9f 7a25 	vldr	s14, [pc, #148]	; 8004af4 <Skill_Mode+0x334>
 8004a62:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004a66:	ee17 0a90 	vmov	r0, s15
 8004a6a:	f7fb fd8d 	bl	8000588 <__aeabi_f2d>
 8004a6e:	a31e      	add	r3, pc, #120	; (adr r3, 8004ae8 <Skill_Mode+0x328>)
 8004a70:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004a74:	f7fb ff0a 	bl	800088c <__aeabi_ddiv>
 8004a78:	4602      	mov	r2, r0
 8004a7a:	460b      	mov	r3, r1
 8004a7c:	4610      	mov	r0, r2
 8004a7e:	4619      	mov	r1, r3
 8004a80:	f04f 0200 	mov.w	r2, #0
 8004a84:	4b1c      	ldr	r3, [pc, #112]	; (8004af8 <Skill_Mode+0x338>)
 8004a86:	f7fb fc1f 	bl	80002c8 <__aeabi_dsub>
 8004a8a:	4602      	mov	r2, r0
 8004a8c:	460b      	mov	r3, r1
 8004a8e:	4610      	mov	r0, r2
 8004a90:	4619      	mov	r1, r3
 8004a92:	f7fc f8a9 	bl	8000be8 <__aeabi_d2f>
 8004a96:	4603      	mov	r3, r0
 8004a98:	617b      	str	r3, [r7, #20]
	gamma = -kP * p  - kD*(p-p_prev);
 8004a9a:	edd7 7a02 	vldr	s15, [r7, #8]
 8004a9e:	eeb1 7a67 	vneg.f32	s14, s15
 8004aa2:	edd7 7a05 	vldr	s15, [r7, #20]
 8004aa6:	ee27 7a27 	vmul.f32	s14, s14, s15
 8004aaa:	4b14      	ldr	r3, [pc, #80]	; (8004afc <Skill_Mode+0x33c>)
 8004aac:	edd3 7a00 	vldr	s15, [r3]
 8004ab0:	edd7 6a05 	vldr	s13, [r7, #20]
 8004ab4:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8004ab8:	edd7 7a01 	vldr	s15, [r7, #4]
 8004abc:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8004ac0:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004ac4:	4b0e      	ldr	r3, [pc, #56]	; (8004b00 <Skill_Mode+0x340>)
 8004ac6:	edc3 7a00 	vstr	s15, [r3]
	p_prev = p;
 8004aca:	4a0c      	ldr	r2, [pc, #48]	; (8004afc <Skill_Mode+0x33c>)
 8004acc:	697b      	ldr	r3, [r7, #20]
 8004ace:	6013      	str	r3, [r2, #0]
	byte_prev=byte;
 8004ad0:	4a0c      	ldr	r2, [pc, #48]	; (8004b04 <Skill_Mode+0x344>)
 8004ad2:	69fb      	ldr	r3, [r7, #28]
 8004ad4:	6013      	str	r3, [r2, #0]

	return gamma;
 8004ad6:	4b0a      	ldr	r3, [pc, #40]	; (8004b00 <Skill_Mode+0x340>)
 8004ad8:	681b      	ldr	r3, [r3, #0]
 8004ada:	ee07 3a90 	vmov	s15, r3
}
 8004ade:	eeb0 0a67 	vmov.f32	s0, s15
 8004ae2:	3720      	adds	r7, #32
 8004ae4:	46bd      	mov	sp, r7
 8004ae6:	bd80      	pop	{r7, pc}
 8004ae8:	00000000 	.word	0x00000000
 8004aec:	406fe000 	.word	0x406fe000
 8004af0:	20000680 	.word	0x20000680
 8004af4:	434c0000 	.word	0x434c0000
 8004af8:	40598000 	.word	0x40598000
 8004afc:	20000690 	.word	0x20000690
 8004b00:	20000694 	.word	0x20000694
 8004b04:	2000067c 	.word	0x2000067c

08004b08 <Detect_Node4>:
		ignore=0;
	}
}

void Detect_Node4(UART_HandleTypeDef *huart_debugg, uint32_t t)
{
 8004b08:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8004b0c:	b082      	sub	sp, #8
 8004b0e:	af00      	add	r7, sp, #0
 8004b10:	6078      	str	r0, [r7, #4]
 8004b12:	6039      	str	r1, [r7, #0]
	static uint32_t t_prev=0;
	static uint32_t t_stamp=0;
	static uint8_t detect_node_state=0;
	static float s=0;

	if(LINE_CNT==4 && !detect_node_state)
 8004b14:	4b3c      	ldr	r3, [pc, #240]	; (8004c08 <Detect_Node4+0x100>)
 8004b16:	785b      	ldrb	r3, [r3, #1]
 8004b18:	2b04      	cmp	r3, #4
 8004b1a:	d111      	bne.n	8004b40 <Detect_Node4+0x38>
 8004b1c:	4b3b      	ldr	r3, [pc, #236]	; (8004c0c <Detect_Node4+0x104>)
 8004b1e:	781b      	ldrb	r3, [r3, #0]
 8004b20:	2b00      	cmp	r3, #0
 8004b22:	d10d      	bne.n	8004b40 <Detect_Node4+0x38>
	{
		s=0;
 8004b24:	4b3a      	ldr	r3, [pc, #232]	; (8004c10 <Detect_Node4+0x108>)
 8004b26:	f04f 0200 	mov.w	r2, #0
 8004b2a:	601a      	str	r2, [r3, #0]
		detect_node_state=1;//innentől mérünk
 8004b2c:	4b37      	ldr	r3, [pc, #220]	; (8004c0c <Detect_Node4+0x104>)
 8004b2e:	2201      	movs	r2, #1
 8004b30:	701a      	strb	r2, [r3, #0]
		ignore=1;
 8004b32:	4b38      	ldr	r3, [pc, #224]	; (8004c14 <Detect_Node4+0x10c>)
 8004b34:	2201      	movs	r2, #1
 8004b36:	701a      	strb	r2, [r3, #0]
		t_stamp=t;
 8004b38:	4a37      	ldr	r2, [pc, #220]	; (8004c18 <Detect_Node4+0x110>)
 8004b3a:	683b      	ldr	r3, [r7, #0]
 8004b3c:	6013      	str	r3, [r2, #0]
 8004b3e:	e03e      	b.n	8004bbe <Detect_Node4+0xb6>

	}
	else if(LINE_CNT==4 && detect_node_state)
 8004b40:	4b31      	ldr	r3, [pc, #196]	; (8004c08 <Detect_Node4+0x100>)
 8004b42:	785b      	ldrb	r3, [r3, #1]
 8004b44:	2b04      	cmp	r3, #4
 8004b46:	d13a      	bne.n	8004bbe <Detect_Node4+0xb6>
 8004b48:	4b30      	ldr	r3, [pc, #192]	; (8004c0c <Detect_Node4+0x104>)
 8004b4a:	781b      	ldrb	r3, [r3, #0]
 8004b4c:	2b00      	cmp	r3, #0
 8004b4e:	d036      	beq.n	8004bbe <Detect_Node4+0xb6>
	{
		s+=fabs(v)*(t-t_prev)/1000;
 8004b50:	4b2f      	ldr	r3, [pc, #188]	; (8004c10 <Detect_Node4+0x108>)
 8004b52:	681b      	ldr	r3, [r3, #0]
 8004b54:	4618      	mov	r0, r3
 8004b56:	f7fb fd17 	bl	8000588 <__aeabi_f2d>
 8004b5a:	4604      	mov	r4, r0
 8004b5c:	460d      	mov	r5, r1
 8004b5e:	4b2f      	ldr	r3, [pc, #188]	; (8004c1c <Detect_Node4+0x114>)
 8004b60:	edd3 7a00 	vldr	s15, [r3]
 8004b64:	eef0 7ae7 	vabs.f32	s15, s15
 8004b68:	ee17 0a90 	vmov	r0, s15
 8004b6c:	f7fb fd0c 	bl	8000588 <__aeabi_f2d>
 8004b70:	4680      	mov	r8, r0
 8004b72:	4689      	mov	r9, r1
 8004b74:	4b2a      	ldr	r3, [pc, #168]	; (8004c20 <Detect_Node4+0x118>)
 8004b76:	681b      	ldr	r3, [r3, #0]
 8004b78:	683a      	ldr	r2, [r7, #0]
 8004b7a:	1ad3      	subs	r3, r2, r3
 8004b7c:	4618      	mov	r0, r3
 8004b7e:	f7fb fce1 	bl	8000544 <__aeabi_ui2d>
 8004b82:	4602      	mov	r2, r0
 8004b84:	460b      	mov	r3, r1
 8004b86:	4640      	mov	r0, r8
 8004b88:	4649      	mov	r1, r9
 8004b8a:	f7fb fd55 	bl	8000638 <__aeabi_dmul>
 8004b8e:	4602      	mov	r2, r0
 8004b90:	460b      	mov	r3, r1
 8004b92:	4610      	mov	r0, r2
 8004b94:	4619      	mov	r1, r3
 8004b96:	f04f 0200 	mov.w	r2, #0
 8004b9a:	4b22      	ldr	r3, [pc, #136]	; (8004c24 <Detect_Node4+0x11c>)
 8004b9c:	f7fb fe76 	bl	800088c <__aeabi_ddiv>
 8004ba0:	4602      	mov	r2, r0
 8004ba2:	460b      	mov	r3, r1
 8004ba4:	4620      	mov	r0, r4
 8004ba6:	4629      	mov	r1, r5
 8004ba8:	f7fb fb90 	bl	80002cc <__adddf3>
 8004bac:	4602      	mov	r2, r0
 8004bae:	460b      	mov	r3, r1
 8004bb0:	4610      	mov	r0, r2
 8004bb2:	4619      	mov	r1, r3
 8004bb4:	f7fc f818 	bl	8000be8 <__aeabi_d2f>
 8004bb8:	4603      	mov	r3, r0
 8004bba:	4a15      	ldr	r2, [pc, #84]	; (8004c10 <Detect_Node4+0x108>)
 8004bbc:	6013      	str	r3, [r2, #0]
	}
	if((t-t_stamp)>230 && detect_node_state)
 8004bbe:	4b16      	ldr	r3, [pc, #88]	; (8004c18 <Detect_Node4+0x110>)
 8004bc0:	681b      	ldr	r3, [r3, #0]
 8004bc2:	683a      	ldr	r2, [r7, #0]
 8004bc4:	1ad3      	subs	r3, r2, r3
 8004bc6:	2be6      	cmp	r3, #230	; 0xe6
 8004bc8:	d916      	bls.n	8004bf8 <Detect_Node4+0xf0>
 8004bca:	4b10      	ldr	r3, [pc, #64]	; (8004c0c <Detect_Node4+0x104>)
 8004bcc:	781b      	ldrb	r3, [r3, #0]
 8004bce:	2b00      	cmp	r3, #0
 8004bd0:	d012      	beq.n	8004bf8 <Detect_Node4+0xf0>
	{
		detect_node_state=0;
 8004bd2:	4b0e      	ldr	r3, [pc, #56]	; (8004c0c <Detect_Node4+0x104>)
 8004bd4:	2200      	movs	r2, #0
 8004bd6:	701a      	strb	r2, [r3, #0]
		ignore=0;
 8004bd8:	4b0e      	ldr	r3, [pc, #56]	; (8004c14 <Detect_Node4+0x10c>)
 8004bda:	2200      	movs	r2, #0
 8004bdc:	701a      	strb	r2, [r3, #0]
		if(s>140)//vertical node
		{
			nodeDetected=1; //horizont node

		}
		else*/ if(s>50)//horizontal node
 8004bde:	4b0c      	ldr	r3, [pc, #48]	; (8004c10 <Detect_Node4+0x108>)
 8004be0:	edd3 7a00 	vldr	s15, [r3]
 8004be4:	ed9f 7a10 	vldr	s14, [pc, #64]	; 8004c28 <Detect_Node4+0x120>
 8004be8:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004bec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004bf0:	dd02      	ble.n	8004bf8 <Detect_Node4+0xf0>
		{
			nodeDetected=1; //horizont node
 8004bf2:	4b0e      	ldr	r3, [pc, #56]	; (8004c2c <Detect_Node4+0x124>)
 8004bf4:	2201      	movs	r2, #1
 8004bf6:	701a      	strb	r2, [r3, #0]
		}
	}
	t_prev=t;
 8004bf8:	4a09      	ldr	r2, [pc, #36]	; (8004c20 <Detect_Node4+0x118>)
 8004bfa:	683b      	ldr	r3, [r7, #0]
 8004bfc:	6013      	str	r3, [r2, #0]
}
 8004bfe:	bf00      	nop
 8004c00:	3708      	adds	r7, #8
 8004c02:	46bd      	mov	sp, r7
 8004c04:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8004c08:	20000634 	.word	0x20000634
 8004c0c:	20000698 	.word	0x20000698
 8004c10:	2000069c 	.word	0x2000069c
 8004c14:	2000063e 	.word	0x2000063e
 8004c18:	200006a0 	.word	0x200006a0
 8004c1c:	2000061c 	.word	0x2000061c
 8004c20:	200006a4 	.word	0x200006a4
 8004c24:	408f4000 	.word	0x408f4000
 8004c28:	42480000 	.word	0x42480000
 8004c2c:	200002a5 	.word	0x200002a5

08004c30 <Lane_Changer>:

uint8_t Lane_Changer(uint32_t t)
{
 8004c30:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8004c34:	b084      	sub	sp, #16
 8004c36:	af00      	add	r7, sp, #0
 8004c38:	6078      	str	r0, [r7, #4]
	static uint8_t lineCnt_prev=1;
	static float s=0;
	static int i=0;
	static uint32_t dt[5]={1000,1000,1000,1000,1000};

	if(laneChange<2)return 0;
 8004c3a:	4b79      	ldr	r3, [pc, #484]	; (8004e20 <Lane_Changer+0x1f0>)
 8004c3c:	781b      	ldrb	r3, [r3, #0]
 8004c3e:	2b01      	cmp	r3, #1
 8004c40:	d801      	bhi.n	8004c46 <Lane_Changer+0x16>
 8004c42:	2300      	movs	r3, #0
 8004c44:	e0e6      	b.n	8004e14 <Lane_Changer+0x1e4>
	if(LINE_CNT != lineCnt_prev && (LINE_CNT==1 || LINE_CNT==2) && laneChange==2) //ha változik az alattunk lévő vonalak száma
 8004c46:	4b77      	ldr	r3, [pc, #476]	; (8004e24 <Lane_Changer+0x1f4>)
 8004c48:	785a      	ldrb	r2, [r3, #1]
 8004c4a:	4b77      	ldr	r3, [pc, #476]	; (8004e28 <Lane_Changer+0x1f8>)
 8004c4c:	781b      	ldrb	r3, [r3, #0]
 8004c4e:	429a      	cmp	r2, r3
 8004c50:	d041      	beq.n	8004cd6 <Lane_Changer+0xa6>
 8004c52:	4b74      	ldr	r3, [pc, #464]	; (8004e24 <Lane_Changer+0x1f4>)
 8004c54:	785b      	ldrb	r3, [r3, #1]
 8004c56:	2b01      	cmp	r3, #1
 8004c58:	d003      	beq.n	8004c62 <Lane_Changer+0x32>
 8004c5a:	4b72      	ldr	r3, [pc, #456]	; (8004e24 <Lane_Changer+0x1f4>)
 8004c5c:	785b      	ldrb	r3, [r3, #1]
 8004c5e:	2b02      	cmp	r3, #2
 8004c60:	d139      	bne.n	8004cd6 <Lane_Changer+0xa6>
 8004c62:	4b6f      	ldr	r3, [pc, #444]	; (8004e20 <Lane_Changer+0x1f0>)
 8004c64:	781b      	ldrb	r3, [r3, #0]
 8004c66:	2b02      	cmp	r3, #2
 8004c68:	d135      	bne.n	8004cd6 <Lane_Changer+0xa6>
	{
		dt[i] = t - t_stamp;
 8004c6a:	4b70      	ldr	r3, [pc, #448]	; (8004e2c <Lane_Changer+0x1fc>)
 8004c6c:	681a      	ldr	r2, [r3, #0]
 8004c6e:	4b70      	ldr	r3, [pc, #448]	; (8004e30 <Lane_Changer+0x200>)
 8004c70:	681b      	ldr	r3, [r3, #0]
 8004c72:	6879      	ldr	r1, [r7, #4]
 8004c74:	1a8a      	subs	r2, r1, r2
 8004c76:	496f      	ldr	r1, [pc, #444]	; (8004e34 <Lane_Changer+0x204>)
 8004c78:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		uint32_t sum=dt[0] + dt[1] + dt[2] + dt[3]+ dt[4];
 8004c7c:	4b6d      	ldr	r3, [pc, #436]	; (8004e34 <Lane_Changer+0x204>)
 8004c7e:	681a      	ldr	r2, [r3, #0]
 8004c80:	4b6c      	ldr	r3, [pc, #432]	; (8004e34 <Lane_Changer+0x204>)
 8004c82:	685b      	ldr	r3, [r3, #4]
 8004c84:	441a      	add	r2, r3
 8004c86:	4b6b      	ldr	r3, [pc, #428]	; (8004e34 <Lane_Changer+0x204>)
 8004c88:	689b      	ldr	r3, [r3, #8]
 8004c8a:	441a      	add	r2, r3
 8004c8c:	4b69      	ldr	r3, [pc, #420]	; (8004e34 <Lane_Changer+0x204>)
 8004c8e:	68db      	ldr	r3, [r3, #12]
 8004c90:	441a      	add	r2, r3
 8004c92:	4b68      	ldr	r3, [pc, #416]	; (8004e34 <Lane_Changer+0x204>)
 8004c94:	691b      	ldr	r3, [r3, #16]
 8004c96:	4413      	add	r3, r2
 8004c98:	60fb      	str	r3, [r7, #12]
		if((sum > 250) && (sum < 1000))//ha másfél másodpercen belül van8 váltás
 8004c9a:	68fb      	ldr	r3, [r7, #12]
 8004c9c:	2bfa      	cmp	r3, #250	; 0xfa
 8004c9e:	d90a      	bls.n	8004cb6 <Lane_Changer+0x86>
 8004ca0:	68fb      	ldr	r3, [r7, #12]
 8004ca2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8004ca6:	d206      	bcs.n	8004cb6 <Lane_Changer+0x86>
		{
			s=0;
 8004ca8:	4b63      	ldr	r3, [pc, #396]	; (8004e38 <Lane_Changer+0x208>)
 8004caa:	f04f 0200 	mov.w	r2, #0
 8004cae:	601a      	str	r2, [r3, #0]
			laneChange=3;
 8004cb0:	4b5b      	ldr	r3, [pc, #364]	; (8004e20 <Lane_Changer+0x1f0>)
 8004cb2:	2203      	movs	r2, #3
 8004cb4:	701a      	strb	r2, [r3, #0]
		}
		i++;
 8004cb6:	4b5e      	ldr	r3, [pc, #376]	; (8004e30 <Lane_Changer+0x200>)
 8004cb8:	681b      	ldr	r3, [r3, #0]
 8004cba:	3301      	adds	r3, #1
 8004cbc:	4a5c      	ldr	r2, [pc, #368]	; (8004e30 <Lane_Changer+0x200>)
 8004cbe:	6013      	str	r3, [r2, #0]
		if(i>4) i=0;
 8004cc0:	4b5b      	ldr	r3, [pc, #364]	; (8004e30 <Lane_Changer+0x200>)
 8004cc2:	681b      	ldr	r3, [r3, #0]
 8004cc4:	2b04      	cmp	r3, #4
 8004cc6:	dd02      	ble.n	8004cce <Lane_Changer+0x9e>
 8004cc8:	4b59      	ldr	r3, [pc, #356]	; (8004e30 <Lane_Changer+0x200>)
 8004cca:	2200      	movs	r2, #0
 8004ccc:	601a      	str	r2, [r3, #0]
		t_stamp = t;
 8004cce:	4a57      	ldr	r2, [pc, #348]	; (8004e2c <Lane_Changer+0x1fc>)
 8004cd0:	687b      	ldr	r3, [r7, #4]
 8004cd2:	6013      	str	r3, [r2, #0]
	{
 8004cd4:	e096      	b.n	8004e04 <Lane_Changer+0x1d4>
	}
	else if(laneChange==3)
 8004cd6:	4b52      	ldr	r3, [pc, #328]	; (8004e20 <Lane_Changer+0x1f0>)
 8004cd8:	781b      	ldrb	r3, [r3, #0]
 8004cda:	2b03      	cmp	r3, #3
 8004cdc:	d172      	bne.n	8004dc4 <Lane_Changer+0x194>
	{
		s+=fabs(v)*(t-t_prev)/1000;
 8004cde:	4b56      	ldr	r3, [pc, #344]	; (8004e38 <Lane_Changer+0x208>)
 8004ce0:	681b      	ldr	r3, [r3, #0]
 8004ce2:	4618      	mov	r0, r3
 8004ce4:	f7fb fc50 	bl	8000588 <__aeabi_f2d>
 8004ce8:	4604      	mov	r4, r0
 8004cea:	460d      	mov	r5, r1
 8004cec:	4b53      	ldr	r3, [pc, #332]	; (8004e3c <Lane_Changer+0x20c>)
 8004cee:	edd3 7a00 	vldr	s15, [r3]
 8004cf2:	eef0 7ae7 	vabs.f32	s15, s15
 8004cf6:	ee17 0a90 	vmov	r0, s15
 8004cfa:	f7fb fc45 	bl	8000588 <__aeabi_f2d>
 8004cfe:	4680      	mov	r8, r0
 8004d00:	4689      	mov	r9, r1
 8004d02:	4b4f      	ldr	r3, [pc, #316]	; (8004e40 <Lane_Changer+0x210>)
 8004d04:	681b      	ldr	r3, [r3, #0]
 8004d06:	687a      	ldr	r2, [r7, #4]
 8004d08:	1ad3      	subs	r3, r2, r3
 8004d0a:	4618      	mov	r0, r3
 8004d0c:	f7fb fc1a 	bl	8000544 <__aeabi_ui2d>
 8004d10:	4602      	mov	r2, r0
 8004d12:	460b      	mov	r3, r1
 8004d14:	4640      	mov	r0, r8
 8004d16:	4649      	mov	r1, r9
 8004d18:	f7fb fc8e 	bl	8000638 <__aeabi_dmul>
 8004d1c:	4602      	mov	r2, r0
 8004d1e:	460b      	mov	r3, r1
 8004d20:	4610      	mov	r0, r2
 8004d22:	4619      	mov	r1, r3
 8004d24:	f04f 0200 	mov.w	r2, #0
 8004d28:	4b46      	ldr	r3, [pc, #280]	; (8004e44 <Lane_Changer+0x214>)
 8004d2a:	f7fb fdaf 	bl	800088c <__aeabi_ddiv>
 8004d2e:	4602      	mov	r2, r0
 8004d30:	460b      	mov	r3, r1
 8004d32:	4620      	mov	r0, r4
 8004d34:	4629      	mov	r1, r5
 8004d36:	f7fb fac9 	bl	80002cc <__adddf3>
 8004d3a:	4602      	mov	r2, r0
 8004d3c:	460b      	mov	r3, r1
 8004d3e:	4610      	mov	r0, r2
 8004d40:	4619      	mov	r1, r3
 8004d42:	f7fb ff51 	bl	8000be8 <__aeabi_d2f>
 8004d46:	4603      	mov	r3, r0
 8004d48:	4a3b      	ldr	r2, [pc, #236]	; (8004e38 <Lane_Changer+0x208>)
 8004d4a:	6013      	str	r3, [r2, #0]
		if(orientation==FORWARD)
 8004d4c:	4b3e      	ldr	r3, [pc, #248]	; (8004e48 <Lane_Changer+0x218>)
 8004d4e:	781b      	ldrb	r3, [r3, #0]
 8004d50:	2b00      	cmp	r3, #0
 8004d52:	d114      	bne.n	8004d7e <Lane_Changer+0x14e>
		{
			TIM2->CCR1=CCR_FRONT_MAX-40;
 8004d54:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004d58:	f44f 7257 	mov.w	r2, #860	; 0x35c
 8004d5c:	635a      	str	r2, [r3, #52]	; 0x34
			TIM1->CCR4=CCR_REAR_MIN;
 8004d5e:	4b3b      	ldr	r3, [pc, #236]	; (8004e4c <Lane_Changer+0x21c>)
 8004d60:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8004d64:	641a      	str	r2, [r3, #64]	; 0x40
			timeout=1000;
 8004d66:	4b3a      	ldr	r3, [pc, #232]	; (8004e50 <Lane_Changer+0x220>)
 8004d68:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004d6c:	601a      	str	r2, [r3, #0]
			laneChange=4;
 8004d6e:	4b2c      	ldr	r3, [pc, #176]	; (8004e20 <Lane_Changer+0x1f0>)
 8004d70:	2204      	movs	r2, #4
 8004d72:	701a      	strb	r2, [r3, #0]
			t_stamp=t;
 8004d74:	4a2d      	ldr	r2, [pc, #180]	; (8004e2c <Lane_Changer+0x1fc>)
 8004d76:	687b      	ldr	r3, [r7, #4]
 8004d78:	6013      	str	r3, [r2, #0]
			return 1;
 8004d7a:	2301      	movs	r3, #1
 8004d7c:	e04a      	b.n	8004e14 <Lane_Changer+0x1e4>
		}
		else if(orientation==REVERSE && s>2000)
 8004d7e:	4b32      	ldr	r3, [pc, #200]	; (8004e48 <Lane_Changer+0x218>)
 8004d80:	781b      	ldrb	r3, [r3, #0]
 8004d82:	2b01      	cmp	r3, #1
 8004d84:	d13e      	bne.n	8004e04 <Lane_Changer+0x1d4>
 8004d86:	4b2c      	ldr	r3, [pc, #176]	; (8004e38 <Lane_Changer+0x208>)
 8004d88:	edd3 7a00 	vldr	s15, [r3]
 8004d8c:	ed9f 7a31 	vldr	s14, [pc, #196]	; 8004e54 <Lane_Changer+0x224>
 8004d90:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004d94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004d98:	dd34      	ble.n	8004e04 <Lane_Changer+0x1d4>
		{
			TIM2->CCR1=CCR_FRONT_MIN;
 8004d9a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004d9e:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8004da2:	635a      	str	r2, [r3, #52]	; 0x34
			TIM1->CCR4=CCR_REAR_MIN;
 8004da4:	4b29      	ldr	r3, [pc, #164]	; (8004e4c <Lane_Changer+0x21c>)
 8004da6:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8004daa:	641a      	str	r2, [r3, #64]	; 0x40
			timeout=3000;
 8004dac:	4b28      	ldr	r3, [pc, #160]	; (8004e50 <Lane_Changer+0x220>)
 8004dae:	f640 32b8 	movw	r2, #3000	; 0xbb8
 8004db2:	601a      	str	r2, [r3, #0]
			laneChange=4;
 8004db4:	4b1a      	ldr	r3, [pc, #104]	; (8004e20 <Lane_Changer+0x1f0>)
 8004db6:	2204      	movs	r2, #4
 8004db8:	701a      	strb	r2, [r3, #0]
			t_stamp=t;
 8004dba:	4a1c      	ldr	r2, [pc, #112]	; (8004e2c <Lane_Changer+0x1fc>)
 8004dbc:	687b      	ldr	r3, [r7, #4]
 8004dbe:	6013      	str	r3, [r2, #0]
			return 1;
 8004dc0:	2301      	movs	r3, #1
 8004dc2:	e027      	b.n	8004e14 <Lane_Changer+0x1e4>
		}
	}
	else if(laneChange==4)
 8004dc4:	4b16      	ldr	r3, [pc, #88]	; (8004e20 <Lane_Changer+0x1f0>)
 8004dc6:	781b      	ldrb	r3, [r3, #0]
 8004dc8:	2b04      	cmp	r3, #4
 8004dca:	d11b      	bne.n	8004e04 <Lane_Changer+0x1d4>
	{
		LED_Y(0);
 8004dcc:	2201      	movs	r2, #1
 8004dce:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8004dd2:	4821      	ldr	r0, [pc, #132]	; (8004e58 <Lane_Changer+0x228>)
 8004dd4:	f003 fbfc 	bl	80085d0 <HAL_GPIO_WritePin>
		v_control=SLOW_DOWN;
 8004dd8:	4b20      	ldr	r3, [pc, #128]	; (8004e5c <Lane_Changer+0x22c>)
 8004dda:	2201      	movs	r2, #1
 8004ddc:	701a      	strb	r2, [r3, #0]
		if((t-t_stamp)>timeout && LINE_CNT>0)
 8004dde:	4b13      	ldr	r3, [pc, #76]	; (8004e2c <Lane_Changer+0x1fc>)
 8004de0:	681b      	ldr	r3, [r3, #0]
 8004de2:	687a      	ldr	r2, [r7, #4]
 8004de4:	1ad2      	subs	r2, r2, r3
 8004de6:	4b1a      	ldr	r3, [pc, #104]	; (8004e50 <Lane_Changer+0x220>)
 8004de8:	681b      	ldr	r3, [r3, #0]
 8004dea:	429a      	cmp	r2, r3
 8004dec:	d908      	bls.n	8004e00 <Lane_Changer+0x1d0>
 8004dee:	4b0d      	ldr	r3, [pc, #52]	; (8004e24 <Lane_Changer+0x1f4>)
 8004df0:	785b      	ldrb	r3, [r3, #1]
 8004df2:	2b00      	cmp	r3, #0
 8004df4:	d004      	beq.n	8004e00 <Lane_Changer+0x1d0>
		{
			ignore=1;
 8004df6:	4b1a      	ldr	r3, [pc, #104]	; (8004e60 <Lane_Changer+0x230>)
 8004df8:	2201      	movs	r2, #1
 8004dfa:	701a      	strb	r2, [r3, #0]
			return 0;
 8004dfc:	2300      	movs	r3, #0
 8004dfe:	e009      	b.n	8004e14 <Lane_Changer+0x1e4>
		}
		else return 1;
 8004e00:	2301      	movs	r3, #1
 8004e02:	e007      	b.n	8004e14 <Lane_Changer+0x1e4>
	}
	lineCnt_prev=LINE_CNT;
 8004e04:	4b07      	ldr	r3, [pc, #28]	; (8004e24 <Lane_Changer+0x1f4>)
 8004e06:	785a      	ldrb	r2, [r3, #1]
 8004e08:	4b07      	ldr	r3, [pc, #28]	; (8004e28 <Lane_Changer+0x1f8>)
 8004e0a:	701a      	strb	r2, [r3, #0]
	t_prev=t;
 8004e0c:	4a0c      	ldr	r2, [pc, #48]	; (8004e40 <Lane_Changer+0x210>)
 8004e0e:	687b      	ldr	r3, [r7, #4]
 8004e10:	6013      	str	r3, [r2, #0]
	return 0;
 8004e12:	2300      	movs	r3, #0
}
 8004e14:	4618      	mov	r0, r3
 8004e16:	3710      	adds	r7, #16
 8004e18:	46bd      	mov	sp, r7
 8004e1a:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8004e1e:	bf00      	nop
 8004e20:	200002a8 	.word	0x200002a8
 8004e24:	20000634 	.word	0x20000634
 8004e28:	2000006c 	.word	0x2000006c
 8004e2c:	200006a8 	.word	0x200006a8
 8004e30:	200006ac 	.word	0x200006ac
 8004e34:	20000070 	.word	0x20000070
 8004e38:	200006b0 	.word	0x200006b0
 8004e3c:	2000061c 	.word	0x2000061c
 8004e40:	200006b4 	.word	0x200006b4
 8004e44:	408f4000 	.word	0x408f4000
 8004e48:	200002a4 	.word	0x200002a4
 8004e4c:	40010000 	.word	0x40010000
 8004e50:	200006b8 	.word	0x200006b8
 8004e54:	44fa0000 	.word	0x44fa0000
 8004e58:	40020400 	.word	0x40020400
 8004e5c:	200002a9 	.word	0x200002a9
 8004e60:	2000063e 	.word	0x2000063e

08004e64 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8004e64:	b580      	push	{r7, lr}
 8004e66:	b084      	sub	sp, #16
 8004e68:	af04      	add	r7, sp, #16
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8004e6a:	f001 fca5 	bl	80067b8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8004e6e:	f000 f88f 	bl	8004f90 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8004e72:	f000 fdad 	bl	80059d0 <MX_GPIO_Init>
  MX_DMA_Init();
 8004e76:	f000 fd8b 	bl	8005990 <MX_DMA_Init>
  MX_TIM2_Init();
 8004e7a:	f000 fa7f 	bl	800537c <MX_TIM2_Init>
  MX_USART1_UART_Init();
 8004e7e:	f000 fd09 	bl	8005894 <MX_USART1_UART_Init>
  MX_TIM4_Init();
 8004e82:	f000 fb73 	bl	800556c <MX_TIM4_Init>
  MX_ADC2_Init();
 8004e86:	f000 f987 	bl	8005198 <MX_ADC2_Init>
  MX_TIM3_Init();
 8004e8a:	f000 faed 	bl	8005468 <MX_TIM3_Init>
  MX_UART5_Init();
 8004e8e:	f000 fcd7 	bl	8005840 <MX_UART5_Init>
  MX_USART2_UART_Init();
 8004e92:	f000 fd29 	bl	80058e8 <MX_USART2_UART_Init>
  MX_TIM8_Init();
 8004e96:	f000 fc33 	bl	8005700 <MX_TIM8_Init>
  MX_ADC1_Init();
 8004e9a:	f000 f8eb 	bl	8005074 <MX_ADC1_Init>
  MX_USART3_UART_Init();
 8004e9e:	f000 fd4d 	bl	800593c <MX_USART3_UART_Init>
  MX_TIM5_Init();
 8004ea2:	f000 fbdf 	bl	8005664 <MX_TIM5_Init>
  MX_TIM1_Init();
 8004ea6:	f000 f9c9 	bl	800523c <MX_TIM1_Init>
  MX_TIM14_Init();
 8004eaa:	f000 fca5 	bl	80057f8 <MX_TIM14_Init>
  MX_TIM13_Init();
 8004eae:	f000 fc7f 	bl	80057b0 <MX_TIM13_Init>
  /* USER CODE BEGIN 2 */
  F4_Basic_Init(&huart1, &htim5, &htim3, &htim2, &htim1, &htim8,&htim13,&htim14);
 8004eb2:	4b2a      	ldr	r3, [pc, #168]	; (8004f5c <main+0xf8>)
 8004eb4:	9303      	str	r3, [sp, #12]
 8004eb6:	4b2a      	ldr	r3, [pc, #168]	; (8004f60 <main+0xfc>)
 8004eb8:	9302      	str	r3, [sp, #8]
 8004eba:	4b2a      	ldr	r3, [pc, #168]	; (8004f64 <main+0x100>)
 8004ebc:	9301      	str	r3, [sp, #4]
 8004ebe:	4b2a      	ldr	r3, [pc, #168]	; (8004f68 <main+0x104>)
 8004ec0:	9300      	str	r3, [sp, #0]
 8004ec2:	4b2a      	ldr	r3, [pc, #168]	; (8004f6c <main+0x108>)
 8004ec4:	4a2a      	ldr	r2, [pc, #168]	; (8004f70 <main+0x10c>)
 8004ec6:	492b      	ldr	r1, [pc, #172]	; (8004f74 <main+0x110>)
 8004ec8:	482b      	ldr	r0, [pc, #172]	; (8004f78 <main+0x114>)
 8004eca:	f7fc f875 	bl	8000fb8 <F4_Basic_Init>
  Remote_Control_Init(&htim4, TIM_CHANNEL_3);
 8004ece:	2108      	movs	r1, #8
 8004ed0:	482a      	ldr	r0, [pc, #168]	; (8004f7c <main+0x118>)
 8004ed2:	f000 feaf 	bl	8005c34 <Remote_Control_Init>
  Battery_Voltage_Compensate(&hadc2, &hadc1, &huart1);
 8004ed6:	4a28      	ldr	r2, [pc, #160]	; (8004f78 <main+0x114>)
 8004ed8:	4929      	ldr	r1, [pc, #164]	; (8004f80 <main+0x11c>)
 8004eda:	482a      	ldr	r0, [pc, #168]	; (8004f84 <main+0x120>)
 8004edc:	f7fe f96c 	bl	80031b8 <Battery_Voltage_Compensate>
/*
  leaveLineEnabled=1;
  v_ref=1000;
*/
  Mode_Selector(&huart1, &huart5);
 8004ee0:	4929      	ldr	r1, [pc, #164]	; (8004f88 <main+0x124>)
 8004ee2:	4825      	ldr	r0, [pc, #148]	; (8004f78 <main+0x114>)
 8004ee4:	f7fd fdd6 	bl	8002a94 <Mode_Selector>
  Create_Nodes(&huart1);
 8004ee8:	4823      	ldr	r0, [pc, #140]	; (8004f78 <main+0x114>)
 8004eea:	f7fc fabd 	bl	8001468 <Create_Nodes>
  Wait_For_Start_Sigal(&huart3,&huart1);
 8004eee:	4922      	ldr	r1, [pc, #136]	; (8004f78 <main+0x114>)
 8004ef0:	4826      	ldr	r0, [pc, #152]	; (8004f8c <main+0x128>)
 8004ef2:	f7fd fe9f 	bl	8002c34 <Wait_For_Start_Sigal>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {/**/
	  Measure_Velocity_Task(&htim8,TICK, 4);
 8004ef6:	4b1f      	ldr	r3, [pc, #124]	; (8004f74 <main+0x110>)
 8004ef8:	681b      	ldr	r3, [r3, #0]
 8004efa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004efc:	2204      	movs	r2, #4
 8004efe:	4619      	mov	r1, r3
 8004f00:	4818      	ldr	r0, [pc, #96]	; (8004f64 <main+0x100>)
 8004f02:	f7fe fa85 	bl	8003410 <Measure_Velocity_Task>
	  Motor_Drive_Task(&htim3, &huart1, TICK, 10);
 8004f06:	4b1b      	ldr	r3, [pc, #108]	; (8004f74 <main+0x110>)
 8004f08:	681b      	ldr	r3, [r3, #0]
 8004f0a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004f0c:	230a      	movs	r3, #10
 8004f0e:	491a      	ldr	r1, [pc, #104]	; (8004f78 <main+0x114>)
 8004f10:	4817      	ldr	r0, [pc, #92]	; (8004f70 <main+0x10c>)
 8004f12:	f7fe faf9 	bl	8003508 <Motor_Drive_Task>
	  Line_Track_Task(&huart5, &huart1, TICK, 4);
 8004f16:	4b17      	ldr	r3, [pc, #92]	; (8004f74 <main+0x110>)
 8004f18:	681b      	ldr	r3, [r3, #0]
 8004f1a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004f1c:	2304      	movs	r3, #4
 8004f1e:	4916      	ldr	r1, [pc, #88]	; (8004f78 <main+0x114>)
 8004f20:	4819      	ldr	r0, [pc, #100]	; (8004f88 <main+0x124>)
 8004f22:	f7fe fcd9 	bl	80038d8 <Line_Track_Task>
	  Remote_Control_Task(&htim4, TIM_CHANNEL_3, &huart1, TICK, 43);
 8004f26:	4b13      	ldr	r3, [pc, #76]	; (8004f74 <main+0x110>)
 8004f28:	681b      	ldr	r3, [r3, #0]
 8004f2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f2c:	222b      	movs	r2, #43	; 0x2b
 8004f2e:	9200      	str	r2, [sp, #0]
 8004f30:	4a11      	ldr	r2, [pc, #68]	; (8004f78 <main+0x114>)
 8004f32:	2108      	movs	r1, #8
 8004f34:	4811      	ldr	r0, [pc, #68]	; (8004f7c <main+0x118>)
 8004f36:	f000 fe99 	bl	8005c6c <Remote_Control_Task>
	  HDI_Read_Task(&huart1,&htim2,TICK, 200);
 8004f3a:	4b0e      	ldr	r3, [pc, #56]	; (8004f74 <main+0x110>)
 8004f3c:	681b      	ldr	r3, [r3, #0]
 8004f3e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004f40:	23c8      	movs	r3, #200	; 0xc8
 8004f42:	490a      	ldr	r1, [pc, #40]	; (8004f6c <main+0x108>)
 8004f44:	480c      	ldr	r0, [pc, #48]	; (8004f78 <main+0x114>)
 8004f46:	f7fc f901 	bl	800114c <HDI_Read_Task>
	  Control_Task(&huart1,&htim14,TICK, 29);
 8004f4a:	4b0a      	ldr	r3, [pc, #40]	; (8004f74 <main+0x110>)
 8004f4c:	681b      	ldr	r3, [r3, #0]
 8004f4e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004f50:	231d      	movs	r3, #29
 8004f52:	4902      	ldr	r1, [pc, #8]	; (8004f5c <main+0xf8>)
 8004f54:	4808      	ldr	r0, [pc, #32]	; (8004f78 <main+0x114>)
 8004f56:	f7fd f9ef 	bl	8002338 <Control_Task>
	  Measure_Velocity_Task(&htim8,TICK, 4);
 8004f5a:	e7cc      	b.n	8004ef6 <main+0x92>
 8004f5c:	20000944 	.word	0x20000944
 8004f60:	200008fc 	.word	0x200008fc
 8004f64:	200008b4 	.word	0x200008b4
 8004f68:	2000074c 	.word	0x2000074c
 8004f6c:	20000794 	.word	0x20000794
 8004f70:	200007dc 	.word	0x200007dc
 8004f74:	2000086c 	.word	0x2000086c
 8004f78:	20000a30 	.word	0x20000a30
 8004f7c:	20000824 	.word	0x20000824
 8004f80:	200006bc 	.word	0x200006bc
 8004f84:	20000704 	.word	0x20000704
 8004f88:	200009ec 	.word	0x200009ec
 8004f8c:	20000ab8 	.word	0x20000ab8

08004f90 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8004f90:	b580      	push	{r7, lr}
 8004f92:	b094      	sub	sp, #80	; 0x50
 8004f94:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8004f96:	f107 031c 	add.w	r3, r7, #28
 8004f9a:	2234      	movs	r2, #52	; 0x34
 8004f9c:	2100      	movs	r1, #0
 8004f9e:	4618      	mov	r0, r3
 8004fa0:	f007 f960 	bl	800c264 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8004fa4:	f107 0308 	add.w	r3, r7, #8
 8004fa8:	2200      	movs	r2, #0
 8004faa:	601a      	str	r2, [r3, #0]
 8004fac:	605a      	str	r2, [r3, #4]
 8004fae:	609a      	str	r2, [r3, #8]
 8004fb0:	60da      	str	r2, [r3, #12]
 8004fb2:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8004fb4:	2300      	movs	r3, #0
 8004fb6:	607b      	str	r3, [r7, #4]
 8004fb8:	4b2c      	ldr	r3, [pc, #176]	; (800506c <SystemClock_Config+0xdc>)
 8004fba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004fbc:	4a2b      	ldr	r2, [pc, #172]	; (800506c <SystemClock_Config+0xdc>)
 8004fbe:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004fc2:	6413      	str	r3, [r2, #64]	; 0x40
 8004fc4:	4b29      	ldr	r3, [pc, #164]	; (800506c <SystemClock_Config+0xdc>)
 8004fc6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004fc8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004fcc:	607b      	str	r3, [r7, #4]
 8004fce:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8004fd0:	2300      	movs	r3, #0
 8004fd2:	603b      	str	r3, [r7, #0]
 8004fd4:	4b26      	ldr	r3, [pc, #152]	; (8005070 <SystemClock_Config+0xe0>)
 8004fd6:	681b      	ldr	r3, [r3, #0]
 8004fd8:	4a25      	ldr	r2, [pc, #148]	; (8005070 <SystemClock_Config+0xe0>)
 8004fda:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8004fde:	6013      	str	r3, [r2, #0]
 8004fe0:	4b23      	ldr	r3, [pc, #140]	; (8005070 <SystemClock_Config+0xe0>)
 8004fe2:	681b      	ldr	r3, [r3, #0]
 8004fe4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8004fe8:	603b      	str	r3, [r7, #0]
 8004fea:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8004fec:	2301      	movs	r3, #1
 8004fee:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8004ff0:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8004ff4:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8004ff6:	2302      	movs	r3, #2
 8004ff8:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8004ffa:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8004ffe:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 4;
 8005000:	2304      	movs	r3, #4
 8005002:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 180;
 8005004:	23b4      	movs	r3, #180	; 0xb4
 8005006:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8005008:	2302      	movs	r3, #2
 800500a:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 800500c:	2302      	movs	r3, #2
 800500e:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8005010:	2302      	movs	r3, #2
 8005012:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8005014:	f107 031c 	add.w	r3, r7, #28
 8005018:	4618      	mov	r0, r3
 800501a:	f003 febf 	bl	8008d9c <HAL_RCC_OscConfig>
 800501e:	4603      	mov	r3, r0
 8005020:	2b00      	cmp	r3, #0
 8005022:	d001      	beq.n	8005028 <SystemClock_Config+0x98>
  {
    Error_Handler();
 8005024:	f000 fe00 	bl	8005c28 <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8005028:	f003 fb1e 	bl	8008668 <HAL_PWREx_EnableOverDrive>
 800502c:	4603      	mov	r3, r0
 800502e:	2b00      	cmp	r3, #0
 8005030:	d001      	beq.n	8005036 <SystemClock_Config+0xa6>
  {
    Error_Handler();
 8005032:	f000 fdf9 	bl	8005c28 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8005036:	230f      	movs	r3, #15
 8005038:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800503a:	2302      	movs	r3, #2
 800503c:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800503e:	2300      	movs	r3, #0
 8005040:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 8005042:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 8005046:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8005048:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800504c:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800504e:	f107 0308 	add.w	r3, r7, #8
 8005052:	2105      	movs	r1, #5
 8005054:	4618      	mov	r0, r3
 8005056:	f003 fb57 	bl	8008708 <HAL_RCC_ClockConfig>
 800505a:	4603      	mov	r3, r0
 800505c:	2b00      	cmp	r3, #0
 800505e:	d001      	beq.n	8005064 <SystemClock_Config+0xd4>
  {
    Error_Handler();
 8005060:	f000 fde2 	bl	8005c28 <Error_Handler>
  }
}
 8005064:	bf00      	nop
 8005066:	3750      	adds	r7, #80	; 0x50
 8005068:	46bd      	mov	sp, r7
 800506a:	bd80      	pop	{r7, pc}
 800506c:	40023800 	.word	0x40023800
 8005070:	40007000 	.word	0x40007000

08005074 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8005074:	b580      	push	{r7, lr}
 8005076:	b08c      	sub	sp, #48	; 0x30
 8005078:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 800507a:	f107 0320 	add.w	r3, r7, #32
 800507e:	2200      	movs	r2, #0
 8005080:	601a      	str	r2, [r3, #0]
 8005082:	605a      	str	r2, [r3, #4]
 8005084:	609a      	str	r2, [r3, #8]
 8005086:	60da      	str	r2, [r3, #12]
  ADC_InjectionConfTypeDef sConfigInjected = {0};
 8005088:	463b      	mov	r3, r7
 800508a:	2220      	movs	r2, #32
 800508c:	2100      	movs	r1, #0
 800508e:	4618      	mov	r0, r3
 8005090:	f007 f8e8 	bl	800c264 <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8005094:	4b3c      	ldr	r3, [pc, #240]	; (8005188 <MX_ADC1_Init+0x114>)
 8005096:	4a3d      	ldr	r2, [pc, #244]	; (800518c <MX_ADC1_Init+0x118>)
 8005098:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV6;
 800509a:	4b3b      	ldr	r3, [pc, #236]	; (8005188 <MX_ADC1_Init+0x114>)
 800509c:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 80050a0:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80050a2:	4b39      	ldr	r3, [pc, #228]	; (8005188 <MX_ADC1_Init+0x114>)
 80050a4:	2200      	movs	r2, #0
 80050a6:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ENABLE;
 80050a8:	4b37      	ldr	r3, [pc, #220]	; (8005188 <MX_ADC1_Init+0x114>)
 80050aa:	2201      	movs	r2, #1
 80050ac:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 80050ae:	4b36      	ldr	r3, [pc, #216]	; (8005188 <MX_ADC1_Init+0x114>)
 80050b0:	2200      	movs	r2, #0
 80050b2:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80050b4:	4b34      	ldr	r3, [pc, #208]	; (8005188 <MX_ADC1_Init+0x114>)
 80050b6:	2200      	movs	r2, #0
 80050b8:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80050bc:	4b32      	ldr	r3, [pc, #200]	; (8005188 <MX_ADC1_Init+0x114>)
 80050be:	2200      	movs	r2, #0
 80050c0:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80050c2:	4b31      	ldr	r3, [pc, #196]	; (8005188 <MX_ADC1_Init+0x114>)
 80050c4:	4a32      	ldr	r2, [pc, #200]	; (8005190 <MX_ADC1_Init+0x11c>)
 80050c6:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80050c8:	4b2f      	ldr	r3, [pc, #188]	; (8005188 <MX_ADC1_Init+0x114>)
 80050ca:	2200      	movs	r2, #0
 80050cc:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 3;
 80050ce:	4b2e      	ldr	r3, [pc, #184]	; (8005188 <MX_ADC1_Init+0x114>)
 80050d0:	2203      	movs	r2, #3
 80050d2:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 80050d4:	4b2c      	ldr	r3, [pc, #176]	; (8005188 <MX_ADC1_Init+0x114>)
 80050d6:	2200      	movs	r2, #0
 80050d8:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80050dc:	4b2a      	ldr	r3, [pc, #168]	; (8005188 <MX_ADC1_Init+0x114>)
 80050de:	2201      	movs	r2, #1
 80050e0:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80050e2:	4829      	ldr	r0, [pc, #164]	; (8005188 <MX_ADC1_Init+0x114>)
 80050e4:	f001 fbfe 	bl	80068e4 <HAL_ADC_Init>
 80050e8:	4603      	mov	r3, r0
 80050ea:	2b00      	cmp	r3, #0
 80050ec:	d001      	beq.n	80050f2 <MX_ADC1_Init+0x7e>
  {
    Error_Handler();
 80050ee:	f000 fd9b 	bl	8005c28 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_8;
 80050f2:	2308      	movs	r3, #8
 80050f4:	623b      	str	r3, [r7, #32]
  sConfig.Rank = 1;
 80050f6:	2301      	movs	r3, #1
 80050f8:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 80050fa:	2307      	movs	r3, #7
 80050fc:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80050fe:	f107 0320 	add.w	r3, r7, #32
 8005102:	4619      	mov	r1, r3
 8005104:	4820      	ldr	r0, [pc, #128]	; (8005188 <MX_ADC1_Init+0x114>)
 8005106:	f001 fd9b 	bl	8006c40 <HAL_ADC_ConfigChannel>
 800510a:	4603      	mov	r3, r0
 800510c:	2b00      	cmp	r3, #0
 800510e:	d001      	beq.n	8005114 <MX_ADC1_Init+0xa0>
  {
    Error_Handler();
 8005110:	f000 fd8a 	bl	8005c28 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Rank = 2;
 8005114:	2302      	movs	r3, #2
 8005116:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8005118:	f107 0320 	add.w	r3, r7, #32
 800511c:	4619      	mov	r1, r3
 800511e:	481a      	ldr	r0, [pc, #104]	; (8005188 <MX_ADC1_Init+0x114>)
 8005120:	f001 fd8e 	bl	8006c40 <HAL_ADC_ConfigChannel>
 8005124:	4603      	mov	r3, r0
 8005126:	2b00      	cmp	r3, #0
 8005128:	d001      	beq.n	800512e <MX_ADC1_Init+0xba>
  {
    Error_Handler();
 800512a:	f000 fd7d 	bl	8005c28 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Rank = 3;
 800512e:	2303      	movs	r3, #3
 8005130:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8005132:	f107 0320 	add.w	r3, r7, #32
 8005136:	4619      	mov	r1, r3
 8005138:	4813      	ldr	r0, [pc, #76]	; (8005188 <MX_ADC1_Init+0x114>)
 800513a:	f001 fd81 	bl	8006c40 <HAL_ADC_ConfigChannel>
 800513e:	4603      	mov	r3, r0
 8005140:	2b00      	cmp	r3, #0
 8005142:	d001      	beq.n	8005148 <MX_ADC1_Init+0xd4>
  {
    Error_Handler();
 8005144:	f000 fd70 	bl	8005c28 <Error_Handler>
  }

  /** Configures for the selected ADC injected channel its corresponding rank in the sequencer and its sample time
  */
  sConfigInjected.InjectedChannel = ADC_CHANNEL_8;
 8005148:	2308      	movs	r3, #8
 800514a:	603b      	str	r3, [r7, #0]
  sConfigInjected.InjectedRank = 1;
 800514c:	2301      	movs	r3, #1
 800514e:	607b      	str	r3, [r7, #4]
  sConfigInjected.InjectedNbrOfConversion = 1;
 8005150:	2301      	movs	r3, #1
 8005152:	613b      	str	r3, [r7, #16]
  sConfigInjected.InjectedSamplingTime = ADC_SAMPLETIME_3CYCLES;
 8005154:	2300      	movs	r3, #0
 8005156:	60bb      	str	r3, [r7, #8]
  sConfigInjected.ExternalTrigInjecConvEdge = ADC_EXTERNALTRIGINJECCONVEDGE_NONE;
 8005158:	2300      	movs	r3, #0
 800515a:	61fb      	str	r3, [r7, #28]
  sConfigInjected.ExternalTrigInjecConv = ADC_INJECTED_SOFTWARE_START;
 800515c:	4b0d      	ldr	r3, [pc, #52]	; (8005194 <MX_ADC1_Init+0x120>)
 800515e:	61bb      	str	r3, [r7, #24]
  sConfigInjected.AutoInjectedConv = DISABLE;
 8005160:	2300      	movs	r3, #0
 8005162:	757b      	strb	r3, [r7, #21]
  sConfigInjected.InjectedDiscontinuousConvMode = DISABLE;
 8005164:	2300      	movs	r3, #0
 8005166:	753b      	strb	r3, [r7, #20]
  sConfigInjected.InjectedOffset = 0;
 8005168:	2300      	movs	r3, #0
 800516a:	60fb      	str	r3, [r7, #12]
  if (HAL_ADCEx_InjectedConfigChannel(&hadc1, &sConfigInjected) != HAL_OK)
 800516c:	463b      	mov	r3, r7
 800516e:	4619      	mov	r1, r3
 8005170:	4805      	ldr	r0, [pc, #20]	; (8005188 <MX_ADC1_Init+0x114>)
 8005172:	f001 ff93 	bl	800709c <HAL_ADCEx_InjectedConfigChannel>
 8005176:	4603      	mov	r3, r0
 8005178:	2b00      	cmp	r3, #0
 800517a:	d001      	beq.n	8005180 <MX_ADC1_Init+0x10c>
  {
    Error_Handler();
 800517c:	f000 fd54 	bl	8005c28 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8005180:	bf00      	nop
 8005182:	3730      	adds	r7, #48	; 0x30
 8005184:	46bd      	mov	sp, r7
 8005186:	bd80      	pop	{r7, pc}
 8005188:	200006bc 	.word	0x200006bc
 800518c:	40012000 	.word	0x40012000
 8005190:	0f000001 	.word	0x0f000001
 8005194:	000f0001 	.word	0x000f0001

08005198 <MX_ADC2_Init>:
  * @brief ADC2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC2_Init(void)
{
 8005198:	b580      	push	{r7, lr}
 800519a:	b084      	sub	sp, #16
 800519c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 800519e:	463b      	mov	r3, r7
 80051a0:	2200      	movs	r2, #0
 80051a2:	601a      	str	r2, [r3, #0]
 80051a4:	605a      	str	r2, [r3, #4]
 80051a6:	609a      	str	r2, [r3, #8]
 80051a8:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC2_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc2.Instance = ADC2;
 80051aa:	4b21      	ldr	r3, [pc, #132]	; (8005230 <MX_ADC2_Init+0x98>)
 80051ac:	4a21      	ldr	r2, [pc, #132]	; (8005234 <MX_ADC2_Init+0x9c>)
 80051ae:	601a      	str	r2, [r3, #0]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV6;
 80051b0:	4b1f      	ldr	r3, [pc, #124]	; (8005230 <MX_ADC2_Init+0x98>)
 80051b2:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 80051b6:	605a      	str	r2, [r3, #4]
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 80051b8:	4b1d      	ldr	r3, [pc, #116]	; (8005230 <MX_ADC2_Init+0x98>)
 80051ba:	2200      	movs	r2, #0
 80051bc:	609a      	str	r2, [r3, #8]
  hadc2.Init.ScanConvMode = DISABLE;
 80051be:	4b1c      	ldr	r3, [pc, #112]	; (8005230 <MX_ADC2_Init+0x98>)
 80051c0:	2200      	movs	r2, #0
 80051c2:	611a      	str	r2, [r3, #16]
  hadc2.Init.ContinuousConvMode = DISABLE;
 80051c4:	4b1a      	ldr	r3, [pc, #104]	; (8005230 <MX_ADC2_Init+0x98>)
 80051c6:	2200      	movs	r2, #0
 80051c8:	761a      	strb	r2, [r3, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 80051ca:	4b19      	ldr	r3, [pc, #100]	; (8005230 <MX_ADC2_Init+0x98>)
 80051cc:	2200      	movs	r2, #0
 80051ce:	f883 2020 	strb.w	r2, [r3, #32]
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80051d2:	4b17      	ldr	r3, [pc, #92]	; (8005230 <MX_ADC2_Init+0x98>)
 80051d4:	2200      	movs	r2, #0
 80051d6:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80051d8:	4b15      	ldr	r3, [pc, #84]	; (8005230 <MX_ADC2_Init+0x98>)
 80051da:	4a17      	ldr	r2, [pc, #92]	; (8005238 <MX_ADC2_Init+0xa0>)
 80051dc:	629a      	str	r2, [r3, #40]	; 0x28
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80051de:	4b14      	ldr	r3, [pc, #80]	; (8005230 <MX_ADC2_Init+0x98>)
 80051e0:	2200      	movs	r2, #0
 80051e2:	60da      	str	r2, [r3, #12]
  hadc2.Init.NbrOfConversion = 1;
 80051e4:	4b12      	ldr	r3, [pc, #72]	; (8005230 <MX_ADC2_Init+0x98>)
 80051e6:	2201      	movs	r2, #1
 80051e8:	61da      	str	r2, [r3, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 80051ea:	4b11      	ldr	r3, [pc, #68]	; (8005230 <MX_ADC2_Init+0x98>)
 80051ec:	2200      	movs	r2, #0
 80051ee:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80051f2:	4b0f      	ldr	r3, [pc, #60]	; (8005230 <MX_ADC2_Init+0x98>)
 80051f4:	2201      	movs	r2, #1
 80051f6:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 80051f8:	480d      	ldr	r0, [pc, #52]	; (8005230 <MX_ADC2_Init+0x98>)
 80051fa:	f001 fb73 	bl	80068e4 <HAL_ADC_Init>
 80051fe:	4603      	mov	r3, r0
 8005200:	2b00      	cmp	r3, #0
 8005202:	d001      	beq.n	8005208 <MX_ADC2_Init+0x70>
  {
    Error_Handler();
 8005204:	f000 fd10 	bl	8005c28 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_13;
 8005208:	230d      	movs	r3, #13
 800520a:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 800520c:	2301      	movs	r3, #1
 800520e:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8005210:	2307      	movs	r3, #7
 8005212:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8005214:	463b      	mov	r3, r7
 8005216:	4619      	mov	r1, r3
 8005218:	4805      	ldr	r0, [pc, #20]	; (8005230 <MX_ADC2_Init+0x98>)
 800521a:	f001 fd11 	bl	8006c40 <HAL_ADC_ConfigChannel>
 800521e:	4603      	mov	r3, r0
 8005220:	2b00      	cmp	r3, #0
 8005222:	d001      	beq.n	8005228 <MX_ADC2_Init+0x90>
  {
    Error_Handler();
 8005224:	f000 fd00 	bl	8005c28 <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */

  /* USER CODE END ADC2_Init 2 */

}
 8005228:	bf00      	nop
 800522a:	3710      	adds	r7, #16
 800522c:	46bd      	mov	sp, r7
 800522e:	bd80      	pop	{r7, pc}
 8005230:	20000704 	.word	0x20000704
 8005234:	40012100 	.word	0x40012100
 8005238:	0f000001 	.word	0x0f000001

0800523c <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 800523c:	b580      	push	{r7, lr}
 800523e:	b096      	sub	sp, #88	; 0x58
 8005240:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8005242:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8005246:	2200      	movs	r2, #0
 8005248:	601a      	str	r2, [r3, #0]
 800524a:	605a      	str	r2, [r3, #4]
 800524c:	609a      	str	r2, [r3, #8]
 800524e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005250:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8005254:	2200      	movs	r2, #0
 8005256:	601a      	str	r2, [r3, #0]
 8005258:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800525a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800525e:	2200      	movs	r2, #0
 8005260:	601a      	str	r2, [r3, #0]
 8005262:	605a      	str	r2, [r3, #4]
 8005264:	609a      	str	r2, [r3, #8]
 8005266:	60da      	str	r2, [r3, #12]
 8005268:	611a      	str	r2, [r3, #16]
 800526a:	615a      	str	r2, [r3, #20]
 800526c:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 800526e:	1d3b      	adds	r3, r7, #4
 8005270:	2220      	movs	r2, #32
 8005272:	2100      	movs	r1, #0
 8005274:	4618      	mov	r0, r3
 8005276:	f006 fff5 	bl	800c264 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 800527a:	4b3e      	ldr	r3, [pc, #248]	; (8005374 <MX_TIM1_Init+0x138>)
 800527c:	4a3e      	ldr	r2, [pc, #248]	; (8005378 <MX_TIM1_Init+0x13c>)
 800527e:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 360-1;
 8005280:	4b3c      	ldr	r3, [pc, #240]	; (8005374 <MX_TIM1_Init+0x138>)
 8005282:	f240 1267 	movw	r2, #359	; 0x167
 8005286:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8005288:	4b3a      	ldr	r3, [pc, #232]	; (8005374 <MX_TIM1_Init+0x138>)
 800528a:	2200      	movs	r2, #0
 800528c:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 10000-1;
 800528e:	4b39      	ldr	r3, [pc, #228]	; (8005374 <MX_TIM1_Init+0x138>)
 8005290:	f242 720f 	movw	r2, #9999	; 0x270f
 8005294:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8005296:	4b37      	ldr	r3, [pc, #220]	; (8005374 <MX_TIM1_Init+0x138>)
 8005298:	2200      	movs	r2, #0
 800529a:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 800529c:	4b35      	ldr	r3, [pc, #212]	; (8005374 <MX_TIM1_Init+0x138>)
 800529e:	2200      	movs	r2, #0
 80052a0:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80052a2:	4b34      	ldr	r3, [pc, #208]	; (8005374 <MX_TIM1_Init+0x138>)
 80052a4:	2280      	movs	r2, #128	; 0x80
 80052a6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 80052a8:	4832      	ldr	r0, [pc, #200]	; (8005374 <MX_TIM1_Init+0x138>)
 80052aa:	f004 f815 	bl	80092d8 <HAL_TIM_Base_Init>
 80052ae:	4603      	mov	r3, r0
 80052b0:	2b00      	cmp	r3, #0
 80052b2:	d001      	beq.n	80052b8 <MX_TIM1_Init+0x7c>
  {
    Error_Handler();
 80052b4:	f000 fcb8 	bl	8005c28 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80052b8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80052bc:	64bb      	str	r3, [r7, #72]	; 0x48
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 80052be:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80052c2:	4619      	mov	r1, r3
 80052c4:	482b      	ldr	r0, [pc, #172]	; (8005374 <MX_TIM1_Init+0x138>)
 80052c6:	f004 ff7f 	bl	800a1c8 <HAL_TIM_ConfigClockSource>
 80052ca:	4603      	mov	r3, r0
 80052cc:	2b00      	cmp	r3, #0
 80052ce:	d001      	beq.n	80052d4 <MX_TIM1_Init+0x98>
  {
    Error_Handler();
 80052d0:	f000 fcaa 	bl	8005c28 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 80052d4:	4827      	ldr	r0, [pc, #156]	; (8005374 <MX_TIM1_Init+0x138>)
 80052d6:	f004 f8b7 	bl	8009448 <HAL_TIM_PWM_Init>
 80052da:	4603      	mov	r3, r0
 80052dc:	2b00      	cmp	r3, #0
 80052de:	d001      	beq.n	80052e4 <MX_TIM1_Init+0xa8>
  {
    Error_Handler();
 80052e0:	f000 fca2 	bl	8005c28 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80052e4:	2300      	movs	r3, #0
 80052e6:	643b      	str	r3, [r7, #64]	; 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80052e8:	2300      	movs	r3, #0
 80052ea:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80052ec:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80052f0:	4619      	mov	r1, r3
 80052f2:	4820      	ldr	r0, [pc, #128]	; (8005374 <MX_TIM1_Init+0x138>)
 80052f4:	f005 fd90 	bl	800ae18 <HAL_TIMEx_MasterConfigSynchronization>
 80052f8:	4603      	mov	r3, r0
 80052fa:	2b00      	cmp	r3, #0
 80052fc:	d001      	beq.n	8005302 <MX_TIM1_Init+0xc6>
  {
    Error_Handler();
 80052fe:	f000 fc93 	bl	8005c28 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8005302:	2360      	movs	r3, #96	; 0x60
 8005304:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigOC.Pulse = 750-1;
 8005306:	f240 23ed 	movw	r3, #749	; 0x2ed
 800530a:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800530c:	2300      	movs	r3, #0
 800530e:	62fb      	str	r3, [r7, #44]	; 0x2c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8005310:	2300      	movs	r3, #0
 8005312:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8005314:	2300      	movs	r3, #0
 8005316:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8005318:	2300      	movs	r3, #0
 800531a:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 800531c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005320:	220c      	movs	r2, #12
 8005322:	4619      	mov	r1, r3
 8005324:	4813      	ldr	r0, [pc, #76]	; (8005374 <MX_TIM1_Init+0x138>)
 8005326:	f004 fe8d 	bl	800a044 <HAL_TIM_PWM_ConfigChannel>
 800532a:	4603      	mov	r3, r0
 800532c:	2b00      	cmp	r3, #0
 800532e:	d001      	beq.n	8005334 <MX_TIM1_Init+0xf8>
  {
    Error_Handler();
 8005330:	f000 fc7a 	bl	8005c28 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8005334:	2300      	movs	r3, #0
 8005336:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8005338:	2300      	movs	r3, #0
 800533a:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 800533c:	2300      	movs	r3, #0
 800533e:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8005340:	2300      	movs	r3, #0
 8005342:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8005344:	2300      	movs	r3, #0
 8005346:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8005348:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800534c:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 800534e:	2300      	movs	r3, #0
 8005350:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8005352:	1d3b      	adds	r3, r7, #4
 8005354:	4619      	mov	r1, r3
 8005356:	4807      	ldr	r0, [pc, #28]	; (8005374 <MX_TIM1_Init+0x138>)
 8005358:	f005 fdda 	bl	800af10 <HAL_TIMEx_ConfigBreakDeadTime>
 800535c:	4603      	mov	r3, r0
 800535e:	2b00      	cmp	r3, #0
 8005360:	d001      	beq.n	8005366 <MX_TIM1_Init+0x12a>
  {
    Error_Handler();
 8005362:	f000 fc61 	bl	8005c28 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8005366:	4803      	ldr	r0, [pc, #12]	; (8005374 <MX_TIM1_Init+0x138>)
 8005368:	f000 ff24 	bl	80061b4 <HAL_TIM_MspPostInit>

}
 800536c:	bf00      	nop
 800536e:	3758      	adds	r7, #88	; 0x58
 8005370:	46bd      	mov	sp, r7
 8005372:	bd80      	pop	{r7, pc}
 8005374:	2000074c 	.word	0x2000074c
 8005378:	40010000 	.word	0x40010000

0800537c <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 800537c:	b580      	push	{r7, lr}
 800537e:	b08e      	sub	sp, #56	; 0x38
 8005380:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8005382:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8005386:	2200      	movs	r2, #0
 8005388:	601a      	str	r2, [r3, #0]
 800538a:	605a      	str	r2, [r3, #4]
 800538c:	609a      	str	r2, [r3, #8]
 800538e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005390:	f107 0320 	add.w	r3, r7, #32
 8005394:	2200      	movs	r2, #0
 8005396:	601a      	str	r2, [r3, #0]
 8005398:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800539a:	1d3b      	adds	r3, r7, #4
 800539c:	2200      	movs	r2, #0
 800539e:	601a      	str	r2, [r3, #0]
 80053a0:	605a      	str	r2, [r3, #4]
 80053a2:	609a      	str	r2, [r3, #8]
 80053a4:	60da      	str	r2, [r3, #12]
 80053a6:	611a      	str	r2, [r3, #16]
 80053a8:	615a      	str	r2, [r3, #20]
 80053aa:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80053ac:	4b2d      	ldr	r3, [pc, #180]	; (8005464 <MX_TIM2_Init+0xe8>)
 80053ae:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80053b2:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 90-1;
 80053b4:	4b2b      	ldr	r3, [pc, #172]	; (8005464 <MX_TIM2_Init+0xe8>)
 80053b6:	2259      	movs	r2, #89	; 0x59
 80053b8:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80053ba:	4b2a      	ldr	r3, [pc, #168]	; (8005464 <MX_TIM2_Init+0xe8>)
 80053bc:	2200      	movs	r2, #0
 80053be:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 10000-1;
 80053c0:	4b28      	ldr	r3, [pc, #160]	; (8005464 <MX_TIM2_Init+0xe8>)
 80053c2:	f242 720f 	movw	r2, #9999	; 0x270f
 80053c6:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80053c8:	4b26      	ldr	r3, [pc, #152]	; (8005464 <MX_TIM2_Init+0xe8>)
 80053ca:	2200      	movs	r2, #0
 80053cc:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80053ce:	4b25      	ldr	r3, [pc, #148]	; (8005464 <MX_TIM2_Init+0xe8>)
 80053d0:	2280      	movs	r2, #128	; 0x80
 80053d2:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80053d4:	4823      	ldr	r0, [pc, #140]	; (8005464 <MX_TIM2_Init+0xe8>)
 80053d6:	f003 ff7f 	bl	80092d8 <HAL_TIM_Base_Init>
 80053da:	4603      	mov	r3, r0
 80053dc:	2b00      	cmp	r3, #0
 80053de:	d001      	beq.n	80053e4 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 80053e0:	f000 fc22 	bl	8005c28 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80053e4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80053e8:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80053ea:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80053ee:	4619      	mov	r1, r3
 80053f0:	481c      	ldr	r0, [pc, #112]	; (8005464 <MX_TIM2_Init+0xe8>)
 80053f2:	f004 fee9 	bl	800a1c8 <HAL_TIM_ConfigClockSource>
 80053f6:	4603      	mov	r3, r0
 80053f8:	2b00      	cmp	r3, #0
 80053fa:	d001      	beq.n	8005400 <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 80053fc:	f000 fc14 	bl	8005c28 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8005400:	4818      	ldr	r0, [pc, #96]	; (8005464 <MX_TIM2_Init+0xe8>)
 8005402:	f004 f821 	bl	8009448 <HAL_TIM_PWM_Init>
 8005406:	4603      	mov	r3, r0
 8005408:	2b00      	cmp	r3, #0
 800540a:	d001      	beq.n	8005410 <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 800540c:	f000 fc0c 	bl	8005c28 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8005410:	2300      	movs	r3, #0
 8005412:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8005414:	2300      	movs	r3, #0
 8005416:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8005418:	f107 0320 	add.w	r3, r7, #32
 800541c:	4619      	mov	r1, r3
 800541e:	4811      	ldr	r0, [pc, #68]	; (8005464 <MX_TIM2_Init+0xe8>)
 8005420:	f005 fcfa 	bl	800ae18 <HAL_TIMEx_MasterConfigSynchronization>
 8005424:	4603      	mov	r3, r0
 8005426:	2b00      	cmp	r3, #0
 8005428:	d001      	beq.n	800542e <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 800542a:	f000 fbfd 	bl	8005c28 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800542e:	2360      	movs	r3, #96	; 0x60
 8005430:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 750-1;
 8005432:	f240 23ed 	movw	r3, #749	; 0x2ed
 8005436:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8005438:	2300      	movs	r3, #0
 800543a:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800543c:	2300      	movs	r3, #0
 800543e:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8005440:	1d3b      	adds	r3, r7, #4
 8005442:	2200      	movs	r2, #0
 8005444:	4619      	mov	r1, r3
 8005446:	4807      	ldr	r0, [pc, #28]	; (8005464 <MX_TIM2_Init+0xe8>)
 8005448:	f004 fdfc 	bl	800a044 <HAL_TIM_PWM_ConfigChannel>
 800544c:	4603      	mov	r3, r0
 800544e:	2b00      	cmp	r3, #0
 8005450:	d001      	beq.n	8005456 <MX_TIM2_Init+0xda>
  {
    Error_Handler();
 8005452:	f000 fbe9 	bl	8005c28 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8005456:	4803      	ldr	r0, [pc, #12]	; (8005464 <MX_TIM2_Init+0xe8>)
 8005458:	f000 feac 	bl	80061b4 <HAL_TIM_MspPostInit>

}
 800545c:	bf00      	nop
 800545e:	3738      	adds	r7, #56	; 0x38
 8005460:	46bd      	mov	sp, r7
 8005462:	bd80      	pop	{r7, pc}
 8005464:	20000794 	.word	0x20000794

08005468 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8005468:	b580      	push	{r7, lr}
 800546a:	b08e      	sub	sp, #56	; 0x38
 800546c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800546e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8005472:	2200      	movs	r2, #0
 8005474:	601a      	str	r2, [r3, #0]
 8005476:	605a      	str	r2, [r3, #4]
 8005478:	609a      	str	r2, [r3, #8]
 800547a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800547c:	f107 0320 	add.w	r3, r7, #32
 8005480:	2200      	movs	r2, #0
 8005482:	601a      	str	r2, [r3, #0]
 8005484:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8005486:	1d3b      	adds	r3, r7, #4
 8005488:	2200      	movs	r2, #0
 800548a:	601a      	str	r2, [r3, #0]
 800548c:	605a      	str	r2, [r3, #4]
 800548e:	609a      	str	r2, [r3, #8]
 8005490:	60da      	str	r2, [r3, #12]
 8005492:	611a      	str	r2, [r3, #16]
 8005494:	615a      	str	r2, [r3, #20]
 8005496:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8005498:	4b32      	ldr	r3, [pc, #200]	; (8005564 <MX_TIM3_Init+0xfc>)
 800549a:	4a33      	ldr	r2, [pc, #204]	; (8005568 <MX_TIM3_Init+0x100>)
 800549c:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 2-1;
 800549e:	4b31      	ldr	r3, [pc, #196]	; (8005564 <MX_TIM3_Init+0xfc>)
 80054a0:	2201      	movs	r2, #1
 80054a2:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED3;
 80054a4:	4b2f      	ldr	r3, [pc, #188]	; (8005564 <MX_TIM3_Init+0xfc>)
 80054a6:	2260      	movs	r2, #96	; 0x60
 80054a8:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 1000-1;
 80054aa:	4b2e      	ldr	r3, [pc, #184]	; (8005564 <MX_TIM3_Init+0xfc>)
 80054ac:	f240 32e7 	movw	r2, #999	; 0x3e7
 80054b0:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80054b2:	4b2c      	ldr	r3, [pc, #176]	; (8005564 <MX_TIM3_Init+0xfc>)
 80054b4:	2200      	movs	r2, #0
 80054b6:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80054b8:	4b2a      	ldr	r3, [pc, #168]	; (8005564 <MX_TIM3_Init+0xfc>)
 80054ba:	2200      	movs	r2, #0
 80054bc:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80054be:	4829      	ldr	r0, [pc, #164]	; (8005564 <MX_TIM3_Init+0xfc>)
 80054c0:	f003 ff0a 	bl	80092d8 <HAL_TIM_Base_Init>
 80054c4:	4603      	mov	r3, r0
 80054c6:	2b00      	cmp	r3, #0
 80054c8:	d001      	beq.n	80054ce <MX_TIM3_Init+0x66>
  {
    Error_Handler();
 80054ca:	f000 fbad 	bl	8005c28 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80054ce:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80054d2:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80054d4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80054d8:	4619      	mov	r1, r3
 80054da:	4822      	ldr	r0, [pc, #136]	; (8005564 <MX_TIM3_Init+0xfc>)
 80054dc:	f004 fe74 	bl	800a1c8 <HAL_TIM_ConfigClockSource>
 80054e0:	4603      	mov	r3, r0
 80054e2:	2b00      	cmp	r3, #0
 80054e4:	d001      	beq.n	80054ea <MX_TIM3_Init+0x82>
  {
    Error_Handler();
 80054e6:	f000 fb9f 	bl	8005c28 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 80054ea:	481e      	ldr	r0, [pc, #120]	; (8005564 <MX_TIM3_Init+0xfc>)
 80054ec:	f003 ffac 	bl	8009448 <HAL_TIM_PWM_Init>
 80054f0:	4603      	mov	r3, r0
 80054f2:	2b00      	cmp	r3, #0
 80054f4:	d001      	beq.n	80054fa <MX_TIM3_Init+0x92>
  {
    Error_Handler();
 80054f6:	f000 fb97 	bl	8005c28 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80054fa:	2300      	movs	r3, #0
 80054fc:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80054fe:	2300      	movs	r3, #0
 8005500:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8005502:	f107 0320 	add.w	r3, r7, #32
 8005506:	4619      	mov	r1, r3
 8005508:	4816      	ldr	r0, [pc, #88]	; (8005564 <MX_TIM3_Init+0xfc>)
 800550a:	f005 fc85 	bl	800ae18 <HAL_TIMEx_MasterConfigSynchronization>
 800550e:	4603      	mov	r3, r0
 8005510:	2b00      	cmp	r3, #0
 8005512:	d001      	beq.n	8005518 <MX_TIM3_Init+0xb0>
  {
    Error_Handler();
 8005514:	f000 fb88 	bl	8005c28 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8005518:	2360      	movs	r3, #96	; 0x60
 800551a:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 800551c:	2300      	movs	r3, #0
 800551e:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8005520:	2300      	movs	r3, #0
 8005522:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8005524:	2300      	movs	r3, #0
 8005526:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8005528:	1d3b      	adds	r3, r7, #4
 800552a:	2200      	movs	r2, #0
 800552c:	4619      	mov	r1, r3
 800552e:	480d      	ldr	r0, [pc, #52]	; (8005564 <MX_TIM3_Init+0xfc>)
 8005530:	f004 fd88 	bl	800a044 <HAL_TIM_PWM_ConfigChannel>
 8005534:	4603      	mov	r3, r0
 8005536:	2b00      	cmp	r3, #0
 8005538:	d001      	beq.n	800553e <MX_TIM3_Init+0xd6>
  {
    Error_Handler();
 800553a:	f000 fb75 	bl	8005c28 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 800553e:	1d3b      	adds	r3, r7, #4
 8005540:	2204      	movs	r2, #4
 8005542:	4619      	mov	r1, r3
 8005544:	4807      	ldr	r0, [pc, #28]	; (8005564 <MX_TIM3_Init+0xfc>)
 8005546:	f004 fd7d 	bl	800a044 <HAL_TIM_PWM_ConfigChannel>
 800554a:	4603      	mov	r3, r0
 800554c:	2b00      	cmp	r3, #0
 800554e:	d001      	beq.n	8005554 <MX_TIM3_Init+0xec>
  {
    Error_Handler();
 8005550:	f000 fb6a 	bl	8005c28 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8005554:	4803      	ldr	r0, [pc, #12]	; (8005564 <MX_TIM3_Init+0xfc>)
 8005556:	f000 fe2d 	bl	80061b4 <HAL_TIM_MspPostInit>

}
 800555a:	bf00      	nop
 800555c:	3738      	adds	r7, #56	; 0x38
 800555e:	46bd      	mov	sp, r7
 8005560:	bd80      	pop	{r7, pc}
 8005562:	bf00      	nop
 8005564:	200007dc 	.word	0x200007dc
 8005568:	40000400 	.word	0x40000400

0800556c <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 800556c:	b580      	push	{r7, lr}
 800556e:	b08a      	sub	sp, #40	; 0x28
 8005570:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8005572:	f107 0318 	add.w	r3, r7, #24
 8005576:	2200      	movs	r2, #0
 8005578:	601a      	str	r2, [r3, #0]
 800557a:	605a      	str	r2, [r3, #4]
 800557c:	609a      	str	r2, [r3, #8]
 800557e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005580:	f107 0310 	add.w	r3, r7, #16
 8005584:	2200      	movs	r2, #0
 8005586:	601a      	str	r2, [r3, #0]
 8005588:	605a      	str	r2, [r3, #4]
  TIM_IC_InitTypeDef sConfigIC = {0};
 800558a:	463b      	mov	r3, r7
 800558c:	2200      	movs	r2, #0
 800558e:	601a      	str	r2, [r3, #0]
 8005590:	605a      	str	r2, [r3, #4]
 8005592:	609a      	str	r2, [r3, #8]
 8005594:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8005596:	4b31      	ldr	r3, [pc, #196]	; (800565c <MX_TIM4_Init+0xf0>)
 8005598:	4a31      	ldr	r2, [pc, #196]	; (8005660 <MX_TIM4_Init+0xf4>)
 800559a:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 800-1;
 800559c:	4b2f      	ldr	r3, [pc, #188]	; (800565c <MX_TIM4_Init+0xf0>)
 800559e:	f240 321f 	movw	r2, #799	; 0x31f
 80055a2:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 80055a4:	4b2d      	ldr	r3, [pc, #180]	; (800565c <MX_TIM4_Init+0xf0>)
 80055a6:	2200      	movs	r2, #0
 80055a8:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65536-1;
 80055aa:	4b2c      	ldr	r3, [pc, #176]	; (800565c <MX_TIM4_Init+0xf0>)
 80055ac:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80055b0:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80055b2:	4b2a      	ldr	r3, [pc, #168]	; (800565c <MX_TIM4_Init+0xf0>)
 80055b4:	2200      	movs	r2, #0
 80055b6:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80055b8:	4b28      	ldr	r3, [pc, #160]	; (800565c <MX_TIM4_Init+0xf0>)
 80055ba:	2280      	movs	r2, #128	; 0x80
 80055bc:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 80055be:	4827      	ldr	r0, [pc, #156]	; (800565c <MX_TIM4_Init+0xf0>)
 80055c0:	f003 fe8a 	bl	80092d8 <HAL_TIM_Base_Init>
 80055c4:	4603      	mov	r3, r0
 80055c6:	2b00      	cmp	r3, #0
 80055c8:	d001      	beq.n	80055ce <MX_TIM4_Init+0x62>
  {
    Error_Handler();
 80055ca:	f000 fb2d 	bl	8005c28 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80055ce:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80055d2:	61bb      	str	r3, [r7, #24]
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 80055d4:	f107 0318 	add.w	r3, r7, #24
 80055d8:	4619      	mov	r1, r3
 80055da:	4820      	ldr	r0, [pc, #128]	; (800565c <MX_TIM4_Init+0xf0>)
 80055dc:	f004 fdf4 	bl	800a1c8 <HAL_TIM_ConfigClockSource>
 80055e0:	4603      	mov	r3, r0
 80055e2:	2b00      	cmp	r3, #0
 80055e4:	d001      	beq.n	80055ea <MX_TIM4_Init+0x7e>
  {
    Error_Handler();
 80055e6:	f000 fb1f 	bl	8005c28 <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim4) != HAL_OK)
 80055ea:	481c      	ldr	r0, [pc, #112]	; (800565c <MX_TIM4_Init+0xf0>)
 80055ec:	f004 f84e 	bl	800968c <HAL_TIM_IC_Init>
 80055f0:	4603      	mov	r3, r0
 80055f2:	2b00      	cmp	r3, #0
 80055f4:	d001      	beq.n	80055fa <MX_TIM4_Init+0x8e>
  {
    Error_Handler();
 80055f6:	f000 fb17 	bl	8005c28 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80055fa:	2300      	movs	r3, #0
 80055fc:	613b      	str	r3, [r7, #16]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80055fe:	2300      	movs	r3, #0
 8005600:	617b      	str	r3, [r7, #20]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8005602:	f107 0310 	add.w	r3, r7, #16
 8005606:	4619      	mov	r1, r3
 8005608:	4814      	ldr	r0, [pc, #80]	; (800565c <MX_TIM4_Init+0xf0>)
 800560a:	f005 fc05 	bl	800ae18 <HAL_TIMEx_MasterConfigSynchronization>
 800560e:	4603      	mov	r3, r0
 8005610:	2b00      	cmp	r3, #0
 8005612:	d001      	beq.n	8005618 <MX_TIM4_Init+0xac>
  {
    Error_Handler();
 8005614:	f000 fb08 	bl	8005c28 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_BOTHEDGE;
 8005618:	230a      	movs	r3, #10
 800561a:	603b      	str	r3, [r7, #0]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 800561c:	2301      	movs	r3, #1
 800561e:	607b      	str	r3, [r7, #4]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 8005620:	2300      	movs	r3, #0
 8005622:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICFilter = 0;
 8005624:	2300      	movs	r3, #0
 8005626:	60fb      	str	r3, [r7, #12]
  if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_3) != HAL_OK)
 8005628:	463b      	mov	r3, r7
 800562a:	2208      	movs	r2, #8
 800562c:	4619      	mov	r1, r3
 800562e:	480b      	ldr	r0, [pc, #44]	; (800565c <MX_TIM4_Init+0xf0>)
 8005630:	f004 fc6c 	bl	8009f0c <HAL_TIM_IC_ConfigChannel>
 8005634:	4603      	mov	r3, r0
 8005636:	2b00      	cmp	r3, #0
 8005638:	d001      	beq.n	800563e <MX_TIM4_Init+0xd2>
  {
    Error_Handler();
 800563a:	f000 faf5 	bl	8005c28 <Error_Handler>
  }
  if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_4) != HAL_OK)
 800563e:	463b      	mov	r3, r7
 8005640:	220c      	movs	r2, #12
 8005642:	4619      	mov	r1, r3
 8005644:	4805      	ldr	r0, [pc, #20]	; (800565c <MX_TIM4_Init+0xf0>)
 8005646:	f004 fc61 	bl	8009f0c <HAL_TIM_IC_ConfigChannel>
 800564a:	4603      	mov	r3, r0
 800564c:	2b00      	cmp	r3, #0
 800564e:	d001      	beq.n	8005654 <MX_TIM4_Init+0xe8>
  {
    Error_Handler();
 8005650:	f000 faea 	bl	8005c28 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 8005654:	bf00      	nop
 8005656:	3728      	adds	r7, #40	; 0x28
 8005658:	46bd      	mov	sp, r7
 800565a:	bd80      	pop	{r7, pc}
 800565c:	20000824 	.word	0x20000824
 8005660:	40000800 	.word	0x40000800

08005664 <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 8005664:	b580      	push	{r7, lr}
 8005666:	b086      	sub	sp, #24
 8005668:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800566a:	f107 0308 	add.w	r3, r7, #8
 800566e:	2200      	movs	r2, #0
 8005670:	601a      	str	r2, [r3, #0]
 8005672:	605a      	str	r2, [r3, #4]
 8005674:	609a      	str	r2, [r3, #8]
 8005676:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005678:	463b      	mov	r3, r7
 800567a:	2200      	movs	r2, #0
 800567c:	601a      	str	r2, [r3, #0]
 800567e:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 8005680:	4b1d      	ldr	r3, [pc, #116]	; (80056f8 <MX_TIM5_Init+0x94>)
 8005682:	4a1e      	ldr	r2, [pc, #120]	; (80056fc <MX_TIM5_Init+0x98>)
 8005684:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 45000-1;
 8005686:	4b1c      	ldr	r3, [pc, #112]	; (80056f8 <MX_TIM5_Init+0x94>)
 8005688:	f64a 72c7 	movw	r2, #44999	; 0xafc7
 800568c:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 800568e:	4b1a      	ldr	r3, [pc, #104]	; (80056f8 <MX_TIM5_Init+0x94>)
 8005690:	2200      	movs	r2, #0
 8005692:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 8005694:	4b18      	ldr	r3, [pc, #96]	; (80056f8 <MX_TIM5_Init+0x94>)
 8005696:	f04f 32ff 	mov.w	r2, #4294967295
 800569a:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800569c:	4b16      	ldr	r3, [pc, #88]	; (80056f8 <MX_TIM5_Init+0x94>)
 800569e:	2200      	movs	r2, #0
 80056a0:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80056a2:	4b15      	ldr	r3, [pc, #84]	; (80056f8 <MX_TIM5_Init+0x94>)
 80056a4:	2280      	movs	r2, #128	; 0x80
 80056a6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 80056a8:	4813      	ldr	r0, [pc, #76]	; (80056f8 <MX_TIM5_Init+0x94>)
 80056aa:	f003 fe15 	bl	80092d8 <HAL_TIM_Base_Init>
 80056ae:	4603      	mov	r3, r0
 80056b0:	2b00      	cmp	r3, #0
 80056b2:	d001      	beq.n	80056b8 <MX_TIM5_Init+0x54>
  {
    Error_Handler();
 80056b4:	f000 fab8 	bl	8005c28 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80056b8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80056bc:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 80056be:	f107 0308 	add.w	r3, r7, #8
 80056c2:	4619      	mov	r1, r3
 80056c4:	480c      	ldr	r0, [pc, #48]	; (80056f8 <MX_TIM5_Init+0x94>)
 80056c6:	f004 fd7f 	bl	800a1c8 <HAL_TIM_ConfigClockSource>
 80056ca:	4603      	mov	r3, r0
 80056cc:	2b00      	cmp	r3, #0
 80056ce:	d001      	beq.n	80056d4 <MX_TIM5_Init+0x70>
  {
    Error_Handler();
 80056d0:	f000 faaa 	bl	8005c28 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80056d4:	2300      	movs	r3, #0
 80056d6:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80056d8:	2300      	movs	r3, #0
 80056da:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 80056dc:	463b      	mov	r3, r7
 80056de:	4619      	mov	r1, r3
 80056e0:	4805      	ldr	r0, [pc, #20]	; (80056f8 <MX_TIM5_Init+0x94>)
 80056e2:	f005 fb99 	bl	800ae18 <HAL_TIMEx_MasterConfigSynchronization>
 80056e6:	4603      	mov	r3, r0
 80056e8:	2b00      	cmp	r3, #0
 80056ea:	d001      	beq.n	80056f0 <MX_TIM5_Init+0x8c>
  {
    Error_Handler();
 80056ec:	f000 fa9c 	bl	8005c28 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 80056f0:	bf00      	nop
 80056f2:	3718      	adds	r7, #24
 80056f4:	46bd      	mov	sp, r7
 80056f6:	bd80      	pop	{r7, pc}
 80056f8:	2000086c 	.word	0x2000086c
 80056fc:	40000c00 	.word	0x40000c00

08005700 <MX_TIM8_Init>:
  * @brief TIM8 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM8_Init(void)
{
 8005700:	b580      	push	{r7, lr}
 8005702:	b08c      	sub	sp, #48	; 0x30
 8005704:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM8_Init 0 */

  /* USER CODE END TIM8_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8005706:	f107 030c 	add.w	r3, r7, #12
 800570a:	2224      	movs	r2, #36	; 0x24
 800570c:	2100      	movs	r1, #0
 800570e:	4618      	mov	r0, r3
 8005710:	f006 fda8 	bl	800c264 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005714:	1d3b      	adds	r3, r7, #4
 8005716:	2200      	movs	r2, #0
 8005718:	601a      	str	r2, [r3, #0]
 800571a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM8_Init 1 */

  /* USER CODE END TIM8_Init 1 */
  htim8.Instance = TIM8;
 800571c:	4b22      	ldr	r3, [pc, #136]	; (80057a8 <MX_TIM8_Init+0xa8>)
 800571e:	4a23      	ldr	r2, [pc, #140]	; (80057ac <MX_TIM8_Init+0xac>)
 8005720:	601a      	str	r2, [r3, #0]
  htim8.Init.Prescaler = 0;
 8005722:	4b21      	ldr	r3, [pc, #132]	; (80057a8 <MX_TIM8_Init+0xa8>)
 8005724:	2200      	movs	r2, #0
 8005726:	605a      	str	r2, [r3, #4]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8005728:	4b1f      	ldr	r3, [pc, #124]	; (80057a8 <MX_TIM8_Init+0xa8>)
 800572a:	2200      	movs	r2, #0
 800572c:	609a      	str	r2, [r3, #8]
  htim8.Init.Period = 65535;
 800572e:	4b1e      	ldr	r3, [pc, #120]	; (80057a8 <MX_TIM8_Init+0xa8>)
 8005730:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005734:	60da      	str	r2, [r3, #12]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8005736:	4b1c      	ldr	r3, [pc, #112]	; (80057a8 <MX_TIM8_Init+0xa8>)
 8005738:	2200      	movs	r2, #0
 800573a:	611a      	str	r2, [r3, #16]
  htim8.Init.RepetitionCounter = 0;
 800573c:	4b1a      	ldr	r3, [pc, #104]	; (80057a8 <MX_TIM8_Init+0xa8>)
 800573e:	2200      	movs	r2, #0
 8005740:	615a      	str	r2, [r3, #20]
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8005742:	4b19      	ldr	r3, [pc, #100]	; (80057a8 <MX_TIM8_Init+0xa8>)
 8005744:	2280      	movs	r2, #128	; 0x80
 8005746:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 8005748:	2303      	movs	r3, #3
 800574a:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 800574c:	2300      	movs	r3, #0
 800574e:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8005750:	2301      	movs	r3, #1
 8005752:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8005754:	2300      	movs	r3, #0
 8005756:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 12;
 8005758:	230c      	movs	r3, #12
 800575a:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 800575c:	2300      	movs	r3, #0
 800575e:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8005760:	2301      	movs	r3, #1
 8005762:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8005764:	2300      	movs	r3, #0
 8005766:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 12;
 8005768:	230c      	movs	r3, #12
 800576a:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim8, &sConfig) != HAL_OK)
 800576c:	f107 030c 	add.w	r3, r7, #12
 8005770:	4619      	mov	r1, r3
 8005772:	480d      	ldr	r0, [pc, #52]	; (80057a8 <MX_TIM8_Init+0xa8>)
 8005774:	f004 f98e 	bl	8009a94 <HAL_TIM_Encoder_Init>
 8005778:	4603      	mov	r3, r0
 800577a:	2b00      	cmp	r3, #0
 800577c:	d001      	beq.n	8005782 <MX_TIM8_Init+0x82>
  {
    Error_Handler();
 800577e:	f000 fa53 	bl	8005c28 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8005782:	2300      	movs	r3, #0
 8005784:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8005786:	2300      	movs	r3, #0
 8005788:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 800578a:	1d3b      	adds	r3, r7, #4
 800578c:	4619      	mov	r1, r3
 800578e:	4806      	ldr	r0, [pc, #24]	; (80057a8 <MX_TIM8_Init+0xa8>)
 8005790:	f005 fb42 	bl	800ae18 <HAL_TIMEx_MasterConfigSynchronization>
 8005794:	4603      	mov	r3, r0
 8005796:	2b00      	cmp	r3, #0
 8005798:	d001      	beq.n	800579e <MX_TIM8_Init+0x9e>
  {
    Error_Handler();
 800579a:	f000 fa45 	bl	8005c28 <Error_Handler>
  }
  /* USER CODE BEGIN TIM8_Init 2 */

  /* USER CODE END TIM8_Init 2 */

}
 800579e:	bf00      	nop
 80057a0:	3730      	adds	r7, #48	; 0x30
 80057a2:	46bd      	mov	sp, r7
 80057a4:	bd80      	pop	{r7, pc}
 80057a6:	bf00      	nop
 80057a8:	200008b4 	.word	0x200008b4
 80057ac:	40010400 	.word	0x40010400

080057b0 <MX_TIM13_Init>:
  * @brief TIM13 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM13_Init(void)
{
 80057b0:	b580      	push	{r7, lr}
 80057b2:	af00      	add	r7, sp, #0
  /* USER CODE END TIM13_Init 0 */

  /* USER CODE BEGIN TIM13_Init 1 */

  /* USER CODE END TIM13_Init 1 */
  htim13.Instance = TIM13;
 80057b4:	4b0e      	ldr	r3, [pc, #56]	; (80057f0 <MX_TIM13_Init+0x40>)
 80057b6:	4a0f      	ldr	r2, [pc, #60]	; (80057f4 <MX_TIM13_Init+0x44>)
 80057b8:	601a      	str	r2, [r3, #0]
  htim13.Init.Prescaler = 45000-1;
 80057ba:	4b0d      	ldr	r3, [pc, #52]	; (80057f0 <MX_TIM13_Init+0x40>)
 80057bc:	f64a 72c7 	movw	r2, #44999	; 0xafc7
 80057c0:	605a      	str	r2, [r3, #4]
  htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 80057c2:	4b0b      	ldr	r3, [pc, #44]	; (80057f0 <MX_TIM13_Init+0x40>)
 80057c4:	2200      	movs	r2, #0
 80057c6:	609a      	str	r2, [r3, #8]
  htim13.Init.Period = 65535;
 80057c8:	4b09      	ldr	r3, [pc, #36]	; (80057f0 <MX_TIM13_Init+0x40>)
 80057ca:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80057ce:	60da      	str	r2, [r3, #12]
  htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80057d0:	4b07      	ldr	r3, [pc, #28]	; (80057f0 <MX_TIM13_Init+0x40>)
 80057d2:	2200      	movs	r2, #0
 80057d4:	611a      	str	r2, [r3, #16]
  htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80057d6:	4b06      	ldr	r3, [pc, #24]	; (80057f0 <MX_TIM13_Init+0x40>)
 80057d8:	2280      	movs	r2, #128	; 0x80
 80057da:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 80057dc:	4804      	ldr	r0, [pc, #16]	; (80057f0 <MX_TIM13_Init+0x40>)
 80057de:	f003 fd7b 	bl	80092d8 <HAL_TIM_Base_Init>
 80057e2:	4603      	mov	r3, r0
 80057e4:	2b00      	cmp	r3, #0
 80057e6:	d001      	beq.n	80057ec <MX_TIM13_Init+0x3c>
  {
    Error_Handler();
 80057e8:	f000 fa1e 	bl	8005c28 <Error_Handler>
  }
  /* USER CODE BEGIN TIM13_Init 2 */

  /* USER CODE END TIM13_Init 2 */

}
 80057ec:	bf00      	nop
 80057ee:	bd80      	pop	{r7, pc}
 80057f0:	200008fc 	.word	0x200008fc
 80057f4:	40001c00 	.word	0x40001c00

080057f8 <MX_TIM14_Init>:
  * @brief TIM14 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM14_Init(void)
{
 80057f8:	b580      	push	{r7, lr}
 80057fa:	af00      	add	r7, sp, #0
  /* USER CODE END TIM14_Init 0 */

  /* USER CODE BEGIN TIM14_Init 1 */

  /* USER CODE END TIM14_Init 1 */
  htim14.Instance = TIM14;
 80057fc:	4b0e      	ldr	r3, [pc, #56]	; (8005838 <MX_TIM14_Init+0x40>)
 80057fe:	4a0f      	ldr	r2, [pc, #60]	; (800583c <MX_TIM14_Init+0x44>)
 8005800:	601a      	str	r2, [r3, #0]
  htim14.Init.Prescaler = 0;
 8005802:	4b0d      	ldr	r3, [pc, #52]	; (8005838 <MX_TIM14_Init+0x40>)
 8005804:	2200      	movs	r2, #0
 8005806:	605a      	str	r2, [r3, #4]
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8005808:	4b0b      	ldr	r3, [pc, #44]	; (8005838 <MX_TIM14_Init+0x40>)
 800580a:	2200      	movs	r2, #0
 800580c:	609a      	str	r2, [r3, #8]
  htim14.Init.Period = 1000;
 800580e:	4b0a      	ldr	r3, [pc, #40]	; (8005838 <MX_TIM14_Init+0x40>)
 8005810:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8005814:	60da      	str	r2, [r3, #12]
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8005816:	4b08      	ldr	r3, [pc, #32]	; (8005838 <MX_TIM14_Init+0x40>)
 8005818:	2200      	movs	r2, #0
 800581a:	611a      	str	r2, [r3, #16]
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800581c:	4b06      	ldr	r3, [pc, #24]	; (8005838 <MX_TIM14_Init+0x40>)
 800581e:	2280      	movs	r2, #128	; 0x80
 8005820:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8005822:	4805      	ldr	r0, [pc, #20]	; (8005838 <MX_TIM14_Init+0x40>)
 8005824:	f003 fd58 	bl	80092d8 <HAL_TIM_Base_Init>
 8005828:	4603      	mov	r3, r0
 800582a:	2b00      	cmp	r3, #0
 800582c:	d001      	beq.n	8005832 <MX_TIM14_Init+0x3a>
  {
    Error_Handler();
 800582e:	f000 f9fb 	bl	8005c28 <Error_Handler>
  }
  /* USER CODE BEGIN TIM14_Init 2 */

  /* USER CODE END TIM14_Init 2 */

}
 8005832:	bf00      	nop
 8005834:	bd80      	pop	{r7, pc}
 8005836:	bf00      	nop
 8005838:	20000944 	.word	0x20000944
 800583c:	40002000 	.word	0x40002000

08005840 <MX_UART5_Init>:
  * @brief UART5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART5_Init(void)
{
 8005840:	b580      	push	{r7, lr}
 8005842:	af00      	add	r7, sp, #0
  /* USER CODE END UART5_Init 0 */

  /* USER CODE BEGIN UART5_Init 1 */

  /* USER CODE END UART5_Init 1 */
  huart5.Instance = UART5;
 8005844:	4b11      	ldr	r3, [pc, #68]	; (800588c <MX_UART5_Init+0x4c>)
 8005846:	4a12      	ldr	r2, [pc, #72]	; (8005890 <MX_UART5_Init+0x50>)
 8005848:	601a      	str	r2, [r3, #0]
  huart5.Init.BaudRate = 460800;
 800584a:	4b10      	ldr	r3, [pc, #64]	; (800588c <MX_UART5_Init+0x4c>)
 800584c:	f44f 22e1 	mov.w	r2, #460800	; 0x70800
 8005850:	605a      	str	r2, [r3, #4]
  huart5.Init.WordLength = UART_WORDLENGTH_8B;
 8005852:	4b0e      	ldr	r3, [pc, #56]	; (800588c <MX_UART5_Init+0x4c>)
 8005854:	2200      	movs	r2, #0
 8005856:	609a      	str	r2, [r3, #8]
  huart5.Init.StopBits = UART_STOPBITS_1;
 8005858:	4b0c      	ldr	r3, [pc, #48]	; (800588c <MX_UART5_Init+0x4c>)
 800585a:	2200      	movs	r2, #0
 800585c:	60da      	str	r2, [r3, #12]
  huart5.Init.Parity = UART_PARITY_NONE;
 800585e:	4b0b      	ldr	r3, [pc, #44]	; (800588c <MX_UART5_Init+0x4c>)
 8005860:	2200      	movs	r2, #0
 8005862:	611a      	str	r2, [r3, #16]
  huart5.Init.Mode = UART_MODE_TX_RX;
 8005864:	4b09      	ldr	r3, [pc, #36]	; (800588c <MX_UART5_Init+0x4c>)
 8005866:	220c      	movs	r2, #12
 8005868:	615a      	str	r2, [r3, #20]
  huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800586a:	4b08      	ldr	r3, [pc, #32]	; (800588c <MX_UART5_Init+0x4c>)
 800586c:	2200      	movs	r2, #0
 800586e:	619a      	str	r2, [r3, #24]
  huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 8005870:	4b06      	ldr	r3, [pc, #24]	; (800588c <MX_UART5_Init+0x4c>)
 8005872:	2200      	movs	r2, #0
 8005874:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart5) != HAL_OK)
 8005876:	4805      	ldr	r0, [pc, #20]	; (800588c <MX_UART5_Init+0x4c>)
 8005878:	f005 fbb0 	bl	800afdc <HAL_UART_Init>
 800587c:	4603      	mov	r3, r0
 800587e:	2b00      	cmp	r3, #0
 8005880:	d001      	beq.n	8005886 <MX_UART5_Init+0x46>
  {
    Error_Handler();
 8005882:	f000 f9d1 	bl	8005c28 <Error_Handler>
  }
  /* USER CODE BEGIN UART5_Init 2 */

  /* USER CODE END UART5_Init 2 */

}
 8005886:	bf00      	nop
 8005888:	bd80      	pop	{r7, pc}
 800588a:	bf00      	nop
 800588c:	200009ec 	.word	0x200009ec
 8005890:	40005000 	.word	0x40005000

08005894 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8005894:	b580      	push	{r7, lr}
 8005896:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8005898:	4b11      	ldr	r3, [pc, #68]	; (80058e0 <MX_USART1_UART_Init+0x4c>)
 800589a:	4a12      	ldr	r2, [pc, #72]	; (80058e4 <MX_USART1_UART_Init+0x50>)
 800589c:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 800589e:	4b10      	ldr	r3, [pc, #64]	; (80058e0 <MX_USART1_UART_Init+0x4c>)
 80058a0:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80058a4:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80058a6:	4b0e      	ldr	r3, [pc, #56]	; (80058e0 <MX_USART1_UART_Init+0x4c>)
 80058a8:	2200      	movs	r2, #0
 80058aa:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80058ac:	4b0c      	ldr	r3, [pc, #48]	; (80058e0 <MX_USART1_UART_Init+0x4c>)
 80058ae:	2200      	movs	r2, #0
 80058b0:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80058b2:	4b0b      	ldr	r3, [pc, #44]	; (80058e0 <MX_USART1_UART_Init+0x4c>)
 80058b4:	2200      	movs	r2, #0
 80058b6:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80058b8:	4b09      	ldr	r3, [pc, #36]	; (80058e0 <MX_USART1_UART_Init+0x4c>)
 80058ba:	220c      	movs	r2, #12
 80058bc:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80058be:	4b08      	ldr	r3, [pc, #32]	; (80058e0 <MX_USART1_UART_Init+0x4c>)
 80058c0:	2200      	movs	r2, #0
 80058c2:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80058c4:	4b06      	ldr	r3, [pc, #24]	; (80058e0 <MX_USART1_UART_Init+0x4c>)
 80058c6:	2200      	movs	r2, #0
 80058c8:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80058ca:	4805      	ldr	r0, [pc, #20]	; (80058e0 <MX_USART1_UART_Init+0x4c>)
 80058cc:	f005 fb86 	bl	800afdc <HAL_UART_Init>
 80058d0:	4603      	mov	r3, r0
 80058d2:	2b00      	cmp	r3, #0
 80058d4:	d001      	beq.n	80058da <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 80058d6:	f000 f9a7 	bl	8005c28 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80058da:	bf00      	nop
 80058dc:	bd80      	pop	{r7, pc}
 80058de:	bf00      	nop
 80058e0:	20000a30 	.word	0x20000a30
 80058e4:	40011000 	.word	0x40011000

080058e8 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80058e8:	b580      	push	{r7, lr}
 80058ea:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80058ec:	4b11      	ldr	r3, [pc, #68]	; (8005934 <MX_USART2_UART_Init+0x4c>)
 80058ee:	4a12      	ldr	r2, [pc, #72]	; (8005938 <MX_USART2_UART_Init+0x50>)
 80058f0:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80058f2:	4b10      	ldr	r3, [pc, #64]	; (8005934 <MX_USART2_UART_Init+0x4c>)
 80058f4:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80058f8:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80058fa:	4b0e      	ldr	r3, [pc, #56]	; (8005934 <MX_USART2_UART_Init+0x4c>)
 80058fc:	2200      	movs	r2, #0
 80058fe:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8005900:	4b0c      	ldr	r3, [pc, #48]	; (8005934 <MX_USART2_UART_Init+0x4c>)
 8005902:	2200      	movs	r2, #0
 8005904:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8005906:	4b0b      	ldr	r3, [pc, #44]	; (8005934 <MX_USART2_UART_Init+0x4c>)
 8005908:	2200      	movs	r2, #0
 800590a:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 800590c:	4b09      	ldr	r3, [pc, #36]	; (8005934 <MX_USART2_UART_Init+0x4c>)
 800590e:	220c      	movs	r2, #12
 8005910:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8005912:	4b08      	ldr	r3, [pc, #32]	; (8005934 <MX_USART2_UART_Init+0x4c>)
 8005914:	2200      	movs	r2, #0
 8005916:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8005918:	4b06      	ldr	r3, [pc, #24]	; (8005934 <MX_USART2_UART_Init+0x4c>)
 800591a:	2200      	movs	r2, #0
 800591c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800591e:	4805      	ldr	r0, [pc, #20]	; (8005934 <MX_USART2_UART_Init+0x4c>)
 8005920:	f005 fb5c 	bl	800afdc <HAL_UART_Init>
 8005924:	4603      	mov	r3, r0
 8005926:	2b00      	cmp	r3, #0
 8005928:	d001      	beq.n	800592e <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 800592a:	f000 f97d 	bl	8005c28 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800592e:	bf00      	nop
 8005930:	bd80      	pop	{r7, pc}
 8005932:	bf00      	nop
 8005934:	20000a74 	.word	0x20000a74
 8005938:	40004400 	.word	0x40004400

0800593c <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 800593c:	b580      	push	{r7, lr}
 800593e:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8005940:	4b11      	ldr	r3, [pc, #68]	; (8005988 <MX_USART3_UART_Init+0x4c>)
 8005942:	4a12      	ldr	r2, [pc, #72]	; (800598c <MX_USART3_UART_Init+0x50>)
 8005944:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 8005946:	4b10      	ldr	r3, [pc, #64]	; (8005988 <MX_USART3_UART_Init+0x4c>)
 8005948:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 800594c:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 800594e:	4b0e      	ldr	r3, [pc, #56]	; (8005988 <MX_USART3_UART_Init+0x4c>)
 8005950:	2200      	movs	r2, #0
 8005952:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8005954:	4b0c      	ldr	r3, [pc, #48]	; (8005988 <MX_USART3_UART_Init+0x4c>)
 8005956:	2200      	movs	r2, #0
 8005958:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 800595a:	4b0b      	ldr	r3, [pc, #44]	; (8005988 <MX_USART3_UART_Init+0x4c>)
 800595c:	2200      	movs	r2, #0
 800595e:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8005960:	4b09      	ldr	r3, [pc, #36]	; (8005988 <MX_USART3_UART_Init+0x4c>)
 8005962:	220c      	movs	r2, #12
 8005964:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8005966:	4b08      	ldr	r3, [pc, #32]	; (8005988 <MX_USART3_UART_Init+0x4c>)
 8005968:	2200      	movs	r2, #0
 800596a:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 800596c:	4b06      	ldr	r3, [pc, #24]	; (8005988 <MX_USART3_UART_Init+0x4c>)
 800596e:	2200      	movs	r2, #0
 8005970:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8005972:	4805      	ldr	r0, [pc, #20]	; (8005988 <MX_USART3_UART_Init+0x4c>)
 8005974:	f005 fb32 	bl	800afdc <HAL_UART_Init>
 8005978:	4603      	mov	r3, r0
 800597a:	2b00      	cmp	r3, #0
 800597c:	d001      	beq.n	8005982 <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 800597e:	f000 f953 	bl	8005c28 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 8005982:	bf00      	nop
 8005984:	bd80      	pop	{r7, pc}
 8005986:	bf00      	nop
 8005988:	20000ab8 	.word	0x20000ab8
 800598c:	40004800 	.word	0x40004800

08005990 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8005990:	b580      	push	{r7, lr}
 8005992:	b082      	sub	sp, #8
 8005994:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8005996:	2300      	movs	r3, #0
 8005998:	607b      	str	r3, [r7, #4]
 800599a:	4b0c      	ldr	r3, [pc, #48]	; (80059cc <MX_DMA_Init+0x3c>)
 800599c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800599e:	4a0b      	ldr	r2, [pc, #44]	; (80059cc <MX_DMA_Init+0x3c>)
 80059a0:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80059a4:	6313      	str	r3, [r2, #48]	; 0x30
 80059a6:	4b09      	ldr	r3, [pc, #36]	; (80059cc <MX_DMA_Init+0x3c>)
 80059a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80059aa:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80059ae:	607b      	str	r3, [r7, #4]
 80059b0:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream7_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream7_IRQn, 0, 0);
 80059b2:	2200      	movs	r2, #0
 80059b4:	2100      	movs	r1, #0
 80059b6:	202f      	movs	r0, #47	; 0x2f
 80059b8:	f001 fe09 	bl	80075ce <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 80059bc:	202f      	movs	r0, #47	; 0x2f
 80059be:	f001 fe22 	bl	8007606 <HAL_NVIC_EnableIRQ>

}
 80059c2:	bf00      	nop
 80059c4:	3708      	adds	r7, #8
 80059c6:	46bd      	mov	sp, r7
 80059c8:	bd80      	pop	{r7, pc}
 80059ca:	bf00      	nop
 80059cc:	40023800 	.word	0x40023800

080059d0 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80059d0:	b580      	push	{r7, lr}
 80059d2:	b08a      	sub	sp, #40	; 0x28
 80059d4:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80059d6:	f107 0314 	add.w	r3, r7, #20
 80059da:	2200      	movs	r2, #0
 80059dc:	601a      	str	r2, [r3, #0]
 80059de:	605a      	str	r2, [r3, #4]
 80059e0:	609a      	str	r2, [r3, #8]
 80059e2:	60da      	str	r2, [r3, #12]
 80059e4:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80059e6:	2300      	movs	r3, #0
 80059e8:	613b      	str	r3, [r7, #16]
 80059ea:	4b64      	ldr	r3, [pc, #400]	; (8005b7c <MX_GPIO_Init+0x1ac>)
 80059ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80059ee:	4a63      	ldr	r2, [pc, #396]	; (8005b7c <MX_GPIO_Init+0x1ac>)
 80059f0:	f043 0304 	orr.w	r3, r3, #4
 80059f4:	6313      	str	r3, [r2, #48]	; 0x30
 80059f6:	4b61      	ldr	r3, [pc, #388]	; (8005b7c <MX_GPIO_Init+0x1ac>)
 80059f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80059fa:	f003 0304 	and.w	r3, r3, #4
 80059fe:	613b      	str	r3, [r7, #16]
 8005a00:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8005a02:	2300      	movs	r3, #0
 8005a04:	60fb      	str	r3, [r7, #12]
 8005a06:	4b5d      	ldr	r3, [pc, #372]	; (8005b7c <MX_GPIO_Init+0x1ac>)
 8005a08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a0a:	4a5c      	ldr	r2, [pc, #368]	; (8005b7c <MX_GPIO_Init+0x1ac>)
 8005a0c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005a10:	6313      	str	r3, [r2, #48]	; 0x30
 8005a12:	4b5a      	ldr	r3, [pc, #360]	; (8005b7c <MX_GPIO_Init+0x1ac>)
 8005a14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a16:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005a1a:	60fb      	str	r3, [r7, #12]
 8005a1c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8005a1e:	2300      	movs	r3, #0
 8005a20:	60bb      	str	r3, [r7, #8]
 8005a22:	4b56      	ldr	r3, [pc, #344]	; (8005b7c <MX_GPIO_Init+0x1ac>)
 8005a24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a26:	4a55      	ldr	r2, [pc, #340]	; (8005b7c <MX_GPIO_Init+0x1ac>)
 8005a28:	f043 0301 	orr.w	r3, r3, #1
 8005a2c:	6313      	str	r3, [r2, #48]	; 0x30
 8005a2e:	4b53      	ldr	r3, [pc, #332]	; (8005b7c <MX_GPIO_Init+0x1ac>)
 8005a30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a32:	f003 0301 	and.w	r3, r3, #1
 8005a36:	60bb      	str	r3, [r7, #8]
 8005a38:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8005a3a:	2300      	movs	r3, #0
 8005a3c:	607b      	str	r3, [r7, #4]
 8005a3e:	4b4f      	ldr	r3, [pc, #316]	; (8005b7c <MX_GPIO_Init+0x1ac>)
 8005a40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a42:	4a4e      	ldr	r2, [pc, #312]	; (8005b7c <MX_GPIO_Init+0x1ac>)
 8005a44:	f043 0302 	orr.w	r3, r3, #2
 8005a48:	6313      	str	r3, [r2, #48]	; 0x30
 8005a4a:	4b4c      	ldr	r3, [pc, #304]	; (8005b7c <MX_GPIO_Init+0x1ac>)
 8005a4c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a4e:	f003 0302 	and.w	r3, r3, #2
 8005a52:	607b      	str	r3, [r7, #4]
 8005a54:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8005a56:	2300      	movs	r3, #0
 8005a58:	603b      	str	r3, [r7, #0]
 8005a5a:	4b48      	ldr	r3, [pc, #288]	; (8005b7c <MX_GPIO_Init+0x1ac>)
 8005a5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a5e:	4a47      	ldr	r2, [pc, #284]	; (8005b7c <MX_GPIO_Init+0x1ac>)
 8005a60:	f043 0308 	orr.w	r3, r3, #8
 8005a64:	6313      	str	r3, [r2, #48]	; 0x30
 8005a66:	4b45      	ldr	r3, [pc, #276]	; (8005b7c <MX_GPIO_Init+0x1ac>)
 8005a68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a6a:	f003 0308 	and.w	r3, r3, #8
 8005a6e:	603b      	str	r3, [r7, #0]
 8005a70:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TEL_GPIO4_GPIO_Port, TEL_GPIO4_Pin, GPIO_PIN_RESET);
 8005a72:	2200      	movs	r2, #0
 8005a74:	2102      	movs	r1, #2
 8005a76:	4842      	ldr	r0, [pc, #264]	; (8005b80 <MX_GPIO_Init+0x1b0>)
 8005a78:	f002 fdaa 	bl	80085d0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, TEL_GPIO7_Pin|On_Board_LED_Pin, GPIO_PIN_RESET);
 8005a7c:	2200      	movs	r2, #0
 8005a7e:	2122      	movs	r1, #34	; 0x22
 8005a80:	4840      	ldr	r0, [pc, #256]	; (8005b84 <MX_GPIO_Init+0x1b4>)
 8005a82:	f002 fda5 	bl	80085d0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LED4_Pin|LED1_Pin|LED2_Pin|LED3_Pin
 8005a86:	2200      	movs	r2, #0
 8005a88:	f24e 0142 	movw	r1, #57410	; 0xe042
 8005a8c:	483e      	ldr	r0, [pc, #248]	; (8005b88 <MX_GPIO_Init+0x1b8>)
 8005a8e:	f002 fd9f 	bl	80085d0 <HAL_GPIO_WritePin>
                          |Motor_EN_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin : On_Board_Button_Pin */
  GPIO_InitStruct.Pin = On_Board_Button_Pin;
 8005a92:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8005a96:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8005a98:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8005a9c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005a9e:	2300      	movs	r3, #0
 8005aa0:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(On_Board_Button_GPIO_Port, &GPIO_InitStruct);
 8005aa2:	f107 0314 	add.w	r3, r7, #20
 8005aa6:	4619      	mov	r1, r3
 8005aa8:	4835      	ldr	r0, [pc, #212]	; (8005b80 <MX_GPIO_Init+0x1b0>)
 8005aaa:	f002 fbe5 	bl	8008278 <HAL_GPIO_Init>

  /*Configure GPIO pin : TEL_GPIO4_Pin */
  GPIO_InitStruct.Pin = TEL_GPIO4_Pin;
 8005aae:	2302      	movs	r3, #2
 8005ab0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8005ab2:	2301      	movs	r3, #1
 8005ab4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005ab6:	2300      	movs	r3, #0
 8005ab8:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8005aba:	2300      	movs	r3, #0
 8005abc:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(TEL_GPIO4_GPIO_Port, &GPIO_InitStruct);
 8005abe:	f107 0314 	add.w	r3, r7, #20
 8005ac2:	4619      	mov	r1, r3
 8005ac4:	482e      	ldr	r0, [pc, #184]	; (8005b80 <MX_GPIO_Init+0x1b0>)
 8005ac6:	f002 fbd7 	bl	8008278 <HAL_GPIO_Init>

  /*Configure GPIO pins : TEL_GPIO7_Pin On_Board_LED_Pin */
  GPIO_InitStruct.Pin = TEL_GPIO7_Pin|On_Board_LED_Pin;
 8005aca:	2322      	movs	r3, #34	; 0x22
 8005acc:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8005ace:	2301      	movs	r3, #1
 8005ad0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005ad2:	2300      	movs	r3, #0
 8005ad4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8005ad6:	2300      	movs	r3, #0
 8005ad8:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8005ada:	f107 0314 	add.w	r3, r7, #20
 8005ade:	4619      	mov	r1, r3
 8005ae0:	4828      	ldr	r0, [pc, #160]	; (8005b84 <MX_GPIO_Init+0x1b4>)
 8005ae2:	f002 fbc9 	bl	8008278 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED4_Pin LED1_Pin LED2_Pin LED3_Pin
                           Motor_EN_Pin */
  GPIO_InitStruct.Pin = LED4_Pin|LED1_Pin|LED2_Pin|LED3_Pin
 8005ae6:	f24e 0342 	movw	r3, #57410	; 0xe042
 8005aea:	617b      	str	r3, [r7, #20]
                          |Motor_EN_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8005aec:	2301      	movs	r3, #1
 8005aee:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005af0:	2300      	movs	r3, #0
 8005af2:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8005af4:	2300      	movs	r3, #0
 8005af6:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8005af8:	f107 0314 	add.w	r3, r7, #20
 8005afc:	4619      	mov	r1, r3
 8005afe:	4822      	ldr	r0, [pc, #136]	; (8005b88 <MX_GPIO_Init+0x1b8>)
 8005b00:	f002 fbba 	bl	8008278 <HAL_GPIO_Init>

  /*Configure GPIO pins : SW2_Pin B2_Pin Motor_Feedback_Pin */
  GPIO_InitStruct.Pin = SW2_Pin|B2_Pin|Motor_Feedback_Pin;
 8005b04:	f44f 6394 	mov.w	r3, #1184	; 0x4a0
 8005b08:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8005b0a:	2300      	movs	r3, #0
 8005b0c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005b0e:	2300      	movs	r3, #0
 8005b10:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8005b12:	f107 0314 	add.w	r3, r7, #20
 8005b16:	4619      	mov	r1, r3
 8005b18:	481b      	ldr	r0, [pc, #108]	; (8005b88 <MX_GPIO_Init+0x1b8>)
 8005b1a:	f002 fbad 	bl	8008278 <HAL_GPIO_Init>

  /*Configure GPIO pin : SW1_Pin */
  GPIO_InitStruct.Pin = SW1_Pin;
 8005b1e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005b22:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8005b24:	2300      	movs	r3, #0
 8005b26:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005b28:	2300      	movs	r3, #0
 8005b2a:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(SW1_GPIO_Port, &GPIO_InitStruct);
 8005b2c:	f107 0314 	add.w	r3, r7, #20
 8005b30:	4619      	mov	r1, r3
 8005b32:	4814      	ldr	r0, [pc, #80]	; (8005b84 <MX_GPIO_Init+0x1b4>)
 8005b34:	f002 fba0 	bl	8008278 <HAL_GPIO_Init>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8005b38:	2310      	movs	r3, #16
 8005b3a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8005b3c:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8005b40:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005b42:	2300      	movs	r3, #0
 8005b44:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8005b46:	f107 0314 	add.w	r3, r7, #20
 8005b4a:	4619      	mov	r1, r3
 8005b4c:	480e      	ldr	r0, [pc, #56]	; (8005b88 <MX_GPIO_Init+0x1b8>)
 8005b4e:	f002 fb93 	bl	8008278 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI4_IRQn, 0, 0);
 8005b52:	2200      	movs	r2, #0
 8005b54:	2100      	movs	r1, #0
 8005b56:	200a      	movs	r0, #10
 8005b58:	f001 fd39 	bl	80075ce <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 8005b5c:	200a      	movs	r0, #10
 8005b5e:	f001 fd52 	bl	8007606 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8005b62:	2200      	movs	r2, #0
 8005b64:	2100      	movs	r1, #0
 8005b66:	2028      	movs	r0, #40	; 0x28
 8005b68:	f001 fd31 	bl	80075ce <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8005b6c:	2028      	movs	r0, #40	; 0x28
 8005b6e:	f001 fd4a 	bl	8007606 <HAL_NVIC_EnableIRQ>

}
 8005b72:	bf00      	nop
 8005b74:	3728      	adds	r7, #40	; 0x28
 8005b76:	46bd      	mov	sp, r7
 8005b78:	bd80      	pop	{r7, pc}
 8005b7a:	bf00      	nop
 8005b7c:	40023800 	.word	0x40023800
 8005b80:	40020800 	.word	0x40020800
 8005b84:	40020000 	.word	0x40020000
 8005b88:	40020400 	.word	0x40020400

08005b8c <HAL_GPIO_EXTI_Callback>:

/* USER CODE BEGIN 4 */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8005b8c:	b580      	push	{r7, lr}
 8005b8e:	b082      	sub	sp, #8
 8005b90:	af00      	add	r7, sp, #0
 8005b92:	4603      	mov	r3, r0
 8005b94:	80fb      	strh	r3, [r7, #6]
	//ha meg lett nyomva a nucleon a kék gomb
	if(GPIO_Pin == On_Board_Button_Pin)B_NUCLEO_ISR(&huart1);
 8005b96:	88fb      	ldrh	r3, [r7, #6]
 8005b98:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005b9c:	d102      	bne.n	8005ba4 <HAL_GPIO_EXTI_Callback+0x18>
 8005b9e:	4806      	ldr	r0, [pc, #24]	; (8005bb8 <HAL_GPIO_EXTI_Callback+0x2c>)
 8005ba0:	f7fb fbd0 	bl	8001344 <B_NUCLEO_ISR>
	if(GPIO_Pin == B1_Pin) B1_ISR(&huart1);
 8005ba4:	88fb      	ldrh	r3, [r7, #6]
 8005ba6:	2b10      	cmp	r3, #16
 8005ba8:	d102      	bne.n	8005bb0 <HAL_GPIO_EXTI_Callback+0x24>
 8005baa:	4803      	ldr	r0, [pc, #12]	; (8005bb8 <HAL_GPIO_EXTI_Callback+0x2c>)
 8005bac:	f7fb fb5a 	bl	8001264 <B1_ISR>
}
 8005bb0:	bf00      	nop
 8005bb2:	3708      	adds	r7, #8
 8005bb4:	46bd      	mov	sp, r7
 8005bb6:	bd80      	pop	{r7, pc}
 8005bb8:	20000a30 	.word	0x20000a30

08005bbc <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8005bbc:	b580      	push	{r7, lr}
 8005bbe:	b082      	sub	sp, #8
 8005bc0:	af00      	add	r7, sp, #0
 8005bc2:	6078      	str	r0, [r7, #4]
	if(huart == &huart1)Uart_Receive_From_PC_ISR(&huart1);
 8005bc4:	687b      	ldr	r3, [r7, #4]
 8005bc6:	4a09      	ldr	r2, [pc, #36]	; (8005bec <HAL_UART_RxCpltCallback+0x30>)
 8005bc8:	4293      	cmp	r3, r2
 8005bca:	d103      	bne.n	8005bd4 <HAL_UART_RxCpltCallback+0x18>
 8005bcc:	4807      	ldr	r0, [pc, #28]	; (8005bec <HAL_UART_RxCpltCallback+0x30>)
 8005bce:	f7fb fb23 	bl	8001218 <Uart_Receive_From_PC_ISR>
	else if(huart==&huart3)Uart_Receive_Thunderboard_ISR(&huart3, &huart1);
}
 8005bd2:	e007      	b.n	8005be4 <HAL_UART_RxCpltCallback+0x28>
	else if(huart==&huart3)Uart_Receive_Thunderboard_ISR(&huart3, &huart1);
 8005bd4:	687b      	ldr	r3, [r7, #4]
 8005bd6:	4a06      	ldr	r2, [pc, #24]	; (8005bf0 <HAL_UART_RxCpltCallback+0x34>)
 8005bd8:	4293      	cmp	r3, r2
 8005bda:	d103      	bne.n	8005be4 <HAL_UART_RxCpltCallback+0x28>
 8005bdc:	4903      	ldr	r1, [pc, #12]	; (8005bec <HAL_UART_RxCpltCallback+0x30>)
 8005bde:	4804      	ldr	r0, [pc, #16]	; (8005bf0 <HAL_UART_RxCpltCallback+0x34>)
 8005be0:	f7fd f89a 	bl	8002d18 <Uart_Receive_Thunderboard_ISR>
}
 8005be4:	bf00      	nop
 8005be6:	3708      	adds	r7, #8
 8005be8:	46bd      	mov	sp, r7
 8005bea:	bd80      	pop	{r7, pc}
 8005bec:	20000a30 	.word	0x20000a30
 8005bf0:	20000ab8 	.word	0x20000ab8

08005bf4 <Delay>:

void Delay(uint16_t ms)
{
 8005bf4:	b480      	push	{r7}
 8005bf6:	b083      	sub	sp, #12
 8005bf8:	af00      	add	r7, sp, #0
 8005bfa:	4603      	mov	r3, r0
 8005bfc:	80fb      	strh	r3, [r7, #6]
	TIM13->CNT=0;
 8005bfe:	4b08      	ldr	r3, [pc, #32]	; (8005c20 <Delay+0x2c>)
 8005c00:	2200      	movs	r2, #0
 8005c02:	625a      	str	r2, [r3, #36]	; 0x24
	while(1)
	{
		if(__HAL_TIM_GET_COUNTER(&htim13)>ms)break;
 8005c04:	4b07      	ldr	r3, [pc, #28]	; (8005c24 <Delay+0x30>)
 8005c06:	681b      	ldr	r3, [r3, #0]
 8005c08:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005c0a:	88fb      	ldrh	r3, [r7, #6]
 8005c0c:	429a      	cmp	r2, r3
 8005c0e:	d800      	bhi.n	8005c12 <Delay+0x1e>
 8005c10:	e7f8      	b.n	8005c04 <Delay+0x10>
 8005c12:	bf00      	nop
	}

}
 8005c14:	bf00      	nop
 8005c16:	370c      	adds	r7, #12
 8005c18:	46bd      	mov	sp, r7
 8005c1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c1e:	4770      	bx	lr
 8005c20:	40001c00 	.word	0x40001c00
 8005c24:	200008fc 	.word	0x200008fc

08005c28 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8005c28:	b480      	push	{r7}
 8005c2a:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 8005c2c:	b672      	cpsid	i
}
 8005c2e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8005c30:	e7fe      	b.n	8005c30 <Error_Handler+0x8>
	...

08005c34 <Remote_Control_Init>:
#include <stdlib.h>

uint32_t tEdge[3];

void Remote_Control_Init(TIM_HandleTypeDef *htim, uint32_t channel)
{
 8005c34:	b580      	push	{r7, lr}
 8005c36:	b082      	sub	sp, #8
 8005c38:	af00      	add	r7, sp, #0
 8005c3a:	6078      	str	r0, [r7, #4]
 8005c3c:	6039      	str	r1, [r7, #0]
	tEdge[0] = 1000;
 8005c3e:	4b0a      	ldr	r3, [pc, #40]	; (8005c68 <Remote_Control_Init+0x34>)
 8005c40:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8005c44:	601a      	str	r2, [r3, #0]
	tEdge[1] = 500;
 8005c46:	4b08      	ldr	r3, [pc, #32]	; (8005c68 <Remote_Control_Init+0x34>)
 8005c48:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8005c4c:	605a      	str	r2, [r3, #4]
	tEdge[2] = 0;
 8005c4e:	4b06      	ldr	r3, [pc, #24]	; (8005c68 <Remote_Control_Init+0x34>)
 8005c50:	2200      	movs	r2, #0
 8005c52:	609a      	str	r2, [r3, #8]
	HAL_TIM_IC_Start_DMA(htim, channel, tEdge, 3);
 8005c54:	2303      	movs	r3, #3
 8005c56:	4a04      	ldr	r2, [pc, #16]	; (8005c68 <Remote_Control_Init+0x34>)
 8005c58:	6839      	ldr	r1, [r7, #0]
 8005c5a:	6878      	ldr	r0, [r7, #4]
 8005c5c:	f003 fd70 	bl	8009740 <HAL_TIM_IC_Start_DMA>
}
 8005c60:	bf00      	nop
 8005c62:	3708      	adds	r7, #8
 8005c64:	46bd      	mov	sp, r7
 8005c66:	bd80      	pop	{r7, pc}
 8005c68:	20000b00 	.word	0x20000b00

08005c6c <Remote_Control_Task>:
void Remote_Control_Task(TIM_HandleTypeDef *htim, uint32_t channel,UART_HandleTypeDef *huart, uint32_t tick, uint32_t period)
{
 8005c6c:	b580      	push	{r7, lr}
 8005c6e:	b084      	sub	sp, #16
 8005c70:	af00      	add	r7, sp, #0
 8005c72:	60f8      	str	r0, [r7, #12]
 8005c74:	60b9      	str	r1, [r7, #8]
 8005c76:	607a      	str	r2, [r7, #4]
 8005c78:	603b      	str	r3, [r7, #0]
	static int32_t dt1=85;
	static int32_t dt2=85;
	static uint32_t tLow=85;
	static uint32_t remote_control_tick=0;

	if(remote_control_tick>tick) return;
 8005c7a:	4b50      	ldr	r3, [pc, #320]	; (8005dbc <Remote_Control_Task+0x150>)
 8005c7c:	681b      	ldr	r3, [r3, #0]
 8005c7e:	683a      	ldr	r2, [r7, #0]
 8005c80:	429a      	cmp	r2, r3
 8005c82:	f0c0 8096 	bcc.w	8005db2 <Remote_Control_Task+0x146>
	remote_control_tick = tick + period;
 8005c86:	683a      	ldr	r2, [r7, #0]
 8005c88:	69bb      	ldr	r3, [r7, #24]
 8005c8a:	4413      	add	r3, r2
 8005c8c:	4a4b      	ldr	r2, [pc, #300]	; (8005dbc <Remote_Control_Task+0x150>)
 8005c8e:	6013      	str	r3, [r2, #0]

	//a három időkülönbésgből egy a T_s, egy a D*T_s és egy az (1-D)*T_s, de nem tudjuk melyik melyik a cirkuláris buffer miatt
	HAL_NVIC_DisableIRQ(TIM4_IRQn);  //atomivá tesszük ezt a két műveletet
 8005c90:	201e      	movs	r0, #30
 8005c92:	f001 fcc6 	bl	8007622 <HAL_NVIC_DisableIRQ>
	dt0=abs((int)tEdge[1]-tEdge[0]);
 8005c96:	4b4a      	ldr	r3, [pc, #296]	; (8005dc0 <Remote_Control_Task+0x154>)
 8005c98:	685a      	ldr	r2, [r3, #4]
 8005c9a:	4b49      	ldr	r3, [pc, #292]	; (8005dc0 <Remote_Control_Task+0x154>)
 8005c9c:	681b      	ldr	r3, [r3, #0]
 8005c9e:	1ad3      	subs	r3, r2, r3
 8005ca0:	2b00      	cmp	r3, #0
 8005ca2:	bfb8      	it	lt
 8005ca4:	425b      	neglt	r3, r3
 8005ca6:	4a47      	ldr	r2, [pc, #284]	; (8005dc4 <Remote_Control_Task+0x158>)
 8005ca8:	6013      	str	r3, [r2, #0]
	dt1=abs((int)tEdge[2]-tEdge[1]);
 8005caa:	4b45      	ldr	r3, [pc, #276]	; (8005dc0 <Remote_Control_Task+0x154>)
 8005cac:	689a      	ldr	r2, [r3, #8]
 8005cae:	4b44      	ldr	r3, [pc, #272]	; (8005dc0 <Remote_Control_Task+0x154>)
 8005cb0:	685b      	ldr	r3, [r3, #4]
 8005cb2:	1ad3      	subs	r3, r2, r3
 8005cb4:	2b00      	cmp	r3, #0
 8005cb6:	bfb8      	it	lt
 8005cb8:	425b      	neglt	r3, r3
 8005cba:	4a43      	ldr	r2, [pc, #268]	; (8005dc8 <Remote_Control_Task+0x15c>)
 8005cbc:	6013      	str	r3, [r2, #0]
	dt2=abs((int)tEdge[0]-tEdge[2]);
 8005cbe:	4b40      	ldr	r3, [pc, #256]	; (8005dc0 <Remote_Control_Task+0x154>)
 8005cc0:	681a      	ldr	r2, [r3, #0]
 8005cc2:	4b3f      	ldr	r3, [pc, #252]	; (8005dc0 <Remote_Control_Task+0x154>)
 8005cc4:	689b      	ldr	r3, [r3, #8]
 8005cc6:	1ad3      	subs	r3, r2, r3
 8005cc8:	2b00      	cmp	r3, #0
 8005cca:	bfb8      	it	lt
 8005ccc:	425b      	neglt	r3, r3
 8005cce:	4a3f      	ldr	r2, [pc, #252]	; (8005dcc <Remote_Control_Task+0x160>)
 8005cd0:	6013      	str	r3, [r2, #0]
	HAL_NVIC_EnableIRQ(TIM4_IRQn);   // mostmár fogadhatjuk az új pwm periodusokat
 8005cd2:	201e      	movs	r0, #30
 8005cd4:	f001 fc97 	bl	8007606 <HAL_NVIC_EnableIRQ>

	//lehet hogy a kövi fűrészjelen vagyunk, ezt ki kell kompenzálni
	if(dt0>5000)dt0=0xffff-dt0;
 8005cd8:	4b3a      	ldr	r3, [pc, #232]	; (8005dc4 <Remote_Control_Task+0x158>)
 8005cda:	681b      	ldr	r3, [r3, #0]
 8005cdc:	f241 3288 	movw	r2, #5000	; 0x1388
 8005ce0:	4293      	cmp	r3, r2
 8005ce2:	dd06      	ble.n	8005cf2 <Remote_Control_Task+0x86>
 8005ce4:	4b37      	ldr	r3, [pc, #220]	; (8005dc4 <Remote_Control_Task+0x158>)
 8005ce6:	681b      	ldr	r3, [r3, #0]
 8005ce8:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 8005cec:	33ff      	adds	r3, #255	; 0xff
 8005cee:	4a35      	ldr	r2, [pc, #212]	; (8005dc4 <Remote_Control_Task+0x158>)
 8005cf0:	6013      	str	r3, [r2, #0]
	if(dt1>5000)dt1=0xffff-dt1;
 8005cf2:	4b35      	ldr	r3, [pc, #212]	; (8005dc8 <Remote_Control_Task+0x15c>)
 8005cf4:	681b      	ldr	r3, [r3, #0]
 8005cf6:	f241 3288 	movw	r2, #5000	; 0x1388
 8005cfa:	4293      	cmp	r3, r2
 8005cfc:	dd06      	ble.n	8005d0c <Remote_Control_Task+0xa0>
 8005cfe:	4b32      	ldr	r3, [pc, #200]	; (8005dc8 <Remote_Control_Task+0x15c>)
 8005d00:	681b      	ldr	r3, [r3, #0]
 8005d02:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 8005d06:	33ff      	adds	r3, #255	; 0xff
 8005d08:	4a2f      	ldr	r2, [pc, #188]	; (8005dc8 <Remote_Control_Task+0x15c>)
 8005d0a:	6013      	str	r3, [r2, #0]
	if(dt2>5000)dt2=0xffff-dt2;
 8005d0c:	4b2f      	ldr	r3, [pc, #188]	; (8005dcc <Remote_Control_Task+0x160>)
 8005d0e:	681b      	ldr	r3, [r3, #0]
 8005d10:	f241 3288 	movw	r2, #5000	; 0x1388
 8005d14:	4293      	cmp	r3, r2
 8005d16:	dd06      	ble.n	8005d26 <Remote_Control_Task+0xba>
 8005d18:	4b2c      	ldr	r3, [pc, #176]	; (8005dcc <Remote_Control_Task+0x160>)
 8005d1a:	681b      	ldr	r3, [r3, #0]
 8005d1c:	f5c3 437f 	rsb	r3, r3, #65280	; 0xff00
 8005d20:	33ff      	adds	r3, #255	; 0xff
 8005d22:	4a2a      	ldr	r2, [pc, #168]	; (8005dcc <Remote_Control_Task+0x160>)
 8005d24:	6013      	str	r3, [r2, #0]

	//mostmár tényleges időkülönbségeink vannak
	//a három különbéség közül a legkisebb kell nekünk ->
	if(dt0<dt1 && dt0<dt2) //a 4 különbésg közül a legkisebb adja a magasan töltött időt
 8005d26:	4b27      	ldr	r3, [pc, #156]	; (8005dc4 <Remote_Control_Task+0x158>)
 8005d28:	681a      	ldr	r2, [r3, #0]
 8005d2a:	4b27      	ldr	r3, [pc, #156]	; (8005dc8 <Remote_Control_Task+0x15c>)
 8005d2c:	681b      	ldr	r3, [r3, #0]
 8005d2e:	429a      	cmp	r2, r3
 8005d30:	da0b      	bge.n	8005d4a <Remote_Control_Task+0xde>
 8005d32:	4b24      	ldr	r3, [pc, #144]	; (8005dc4 <Remote_Control_Task+0x158>)
 8005d34:	681a      	ldr	r2, [r3, #0]
 8005d36:	4b25      	ldr	r3, [pc, #148]	; (8005dcc <Remote_Control_Task+0x160>)
 8005d38:	681b      	ldr	r3, [r3, #0]
 8005d3a:	429a      	cmp	r2, r3
 8005d3c:	da05      	bge.n	8005d4a <Remote_Control_Task+0xde>
	{
		tLow=dt0;
 8005d3e:	4b21      	ldr	r3, [pc, #132]	; (8005dc4 <Remote_Control_Task+0x158>)
 8005d40:	681b      	ldr	r3, [r3, #0]
 8005d42:	461a      	mov	r2, r3
 8005d44:	4b22      	ldr	r3, [pc, #136]	; (8005dd0 <Remote_Control_Task+0x164>)
 8005d46:	601a      	str	r2, [r3, #0]
 8005d48:	e016      	b.n	8005d78 <Remote_Control_Task+0x10c>
	}
	else if(dt1<dt0 && dt1<dt2)
 8005d4a:	4b1f      	ldr	r3, [pc, #124]	; (8005dc8 <Remote_Control_Task+0x15c>)
 8005d4c:	681a      	ldr	r2, [r3, #0]
 8005d4e:	4b1d      	ldr	r3, [pc, #116]	; (8005dc4 <Remote_Control_Task+0x158>)
 8005d50:	681b      	ldr	r3, [r3, #0]
 8005d52:	429a      	cmp	r2, r3
 8005d54:	da0b      	bge.n	8005d6e <Remote_Control_Task+0x102>
 8005d56:	4b1c      	ldr	r3, [pc, #112]	; (8005dc8 <Remote_Control_Task+0x15c>)
 8005d58:	681a      	ldr	r2, [r3, #0]
 8005d5a:	4b1c      	ldr	r3, [pc, #112]	; (8005dcc <Remote_Control_Task+0x160>)
 8005d5c:	681b      	ldr	r3, [r3, #0]
 8005d5e:	429a      	cmp	r2, r3
 8005d60:	da05      	bge.n	8005d6e <Remote_Control_Task+0x102>
	{
		tLow=dt1;
 8005d62:	4b19      	ldr	r3, [pc, #100]	; (8005dc8 <Remote_Control_Task+0x15c>)
 8005d64:	681b      	ldr	r3, [r3, #0]
 8005d66:	461a      	mov	r2, r3
 8005d68:	4b19      	ldr	r3, [pc, #100]	; (8005dd0 <Remote_Control_Task+0x164>)
 8005d6a:	601a      	str	r2, [r3, #0]
 8005d6c:	e004      	b.n	8005d78 <Remote_Control_Task+0x10c>
	}
	else
	{
		tLow=dt2;
 8005d6e:	4b17      	ldr	r3, [pc, #92]	; (8005dcc <Remote_Control_Task+0x160>)
 8005d70:	681b      	ldr	r3, [r3, #0]
 8005d72:	461a      	mov	r2, r3
 8005d74:	4b16      	ldr	r3, [pc, #88]	; (8005dd0 <Remote_Control_Task+0x164>)
 8005d76:	601a      	str	r2, [r3, #0]
	sprintf(string,"%d\n\r",tLow);
	HAL_UART_Transmit(huart, string, strlen(string), 10);
	remote_control_tick = tick + 1000;
#endif

	if((tLow>70 && tLow<100) || tLow==1000)
 8005d78:	4b15      	ldr	r3, [pc, #84]	; (8005dd0 <Remote_Control_Task+0x164>)
 8005d7a:	681b      	ldr	r3, [r3, #0]
 8005d7c:	2b46      	cmp	r3, #70	; 0x46
 8005d7e:	d903      	bls.n	8005d88 <Remote_Control_Task+0x11c>
 8005d80:	4b13      	ldr	r3, [pc, #76]	; (8005dd0 <Remote_Control_Task+0x164>)
 8005d82:	681b      	ldr	r3, [r3, #0]
 8005d84:	2b63      	cmp	r3, #99	; 0x63
 8005d86:	d904      	bls.n	8005d92 <Remote_Control_Task+0x126>
 8005d88:	4b11      	ldr	r3, [pc, #68]	; (8005dd0 <Remote_Control_Task+0x164>)
 8005d8a:	681b      	ldr	r3, [r3, #0]
 8005d8c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005d90:	d103      	bne.n	8005d9a <Remote_Control_Task+0x12e>
	{
		//LED_R(1); //ha nincs meghuzva a ravasz tLow kb 87, ha meg van huzva kb 55, ha előre van nyomva kb 118
		motorEnRemote=0;//állítsuk le a motort ha meghuzzuk a ravaszt
 8005d92:	4b10      	ldr	r3, [pc, #64]	; (8005dd4 <Remote_Control_Task+0x168>)
 8005d94:	2200      	movs	r2, #0
 8005d96:	701a      	strb	r2, [r3, #0]
 8005d98:	e00c      	b.n	8005db4 <Remote_Control_Task+0x148>
	}
	else
	{
		//LED_R(0);
		if(tLow <= 70) motorEnRemote=1;
 8005d9a:	4b0d      	ldr	r3, [pc, #52]	; (8005dd0 <Remote_Control_Task+0x164>)
 8005d9c:	681b      	ldr	r3, [r3, #0]
 8005d9e:	2b46      	cmp	r3, #70	; 0x46
 8005da0:	d803      	bhi.n	8005daa <Remote_Control_Task+0x13e>
 8005da2:	4b0c      	ldr	r3, [pc, #48]	; (8005dd4 <Remote_Control_Task+0x168>)
 8005da4:	2201      	movs	r2, #1
 8005da6:	701a      	strb	r2, [r3, #0]
 8005da8:	e004      	b.n	8005db4 <Remote_Control_Task+0x148>
		else motorEnRemote=2;
 8005daa:	4b0a      	ldr	r3, [pc, #40]	; (8005dd4 <Remote_Control_Task+0x168>)
 8005dac:	2202      	movs	r2, #2
 8005dae:	701a      	strb	r2, [r3, #0]
 8005db0:	e000      	b.n	8005db4 <Remote_Control_Task+0x148>
	if(remote_control_tick>tick) return;
 8005db2:	bf00      	nop
	}
}
 8005db4:	3710      	adds	r7, #16
 8005db6:	46bd      	mov	sp, r7
 8005db8:	bd80      	pop	{r7, pc}
 8005dba:	bf00      	nop
 8005dbc:	20000b0c 	.word	0x20000b0c
 8005dc0:	20000b00 	.word	0x20000b00
 8005dc4:	20000084 	.word	0x20000084
 8005dc8:	20000088 	.word	0x20000088
 8005dcc:	2000008c 	.word	0x2000008c
 8005dd0:	20000090 	.word	0x20000090
 8005dd4:	20000afc 	.word	0x20000afc

08005dd8 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                                            /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8005dd8:	b580      	push	{r7, lr}
 8005dda:	b082      	sub	sp, #8
 8005ddc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005dde:	2300      	movs	r3, #0
 8005de0:	607b      	str	r3, [r7, #4]
 8005de2:	4b10      	ldr	r3, [pc, #64]	; (8005e24 <HAL_MspInit+0x4c>)
 8005de4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005de6:	4a0f      	ldr	r2, [pc, #60]	; (8005e24 <HAL_MspInit+0x4c>)
 8005de8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005dec:	6453      	str	r3, [r2, #68]	; 0x44
 8005dee:	4b0d      	ldr	r3, [pc, #52]	; (8005e24 <HAL_MspInit+0x4c>)
 8005df0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005df2:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8005df6:	607b      	str	r3, [r7, #4]
 8005df8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8005dfa:	2300      	movs	r3, #0
 8005dfc:	603b      	str	r3, [r7, #0]
 8005dfe:	4b09      	ldr	r3, [pc, #36]	; (8005e24 <HAL_MspInit+0x4c>)
 8005e00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005e02:	4a08      	ldr	r2, [pc, #32]	; (8005e24 <HAL_MspInit+0x4c>)
 8005e04:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005e08:	6413      	str	r3, [r2, #64]	; 0x40
 8005e0a:	4b06      	ldr	r3, [pc, #24]	; (8005e24 <HAL_MspInit+0x4c>)
 8005e0c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005e0e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005e12:	603b      	str	r3, [r7, #0]
 8005e14:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 8005e16:	2007      	movs	r0, #7
 8005e18:	f001 fbce 	bl	80075b8 <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8005e1c:	bf00      	nop
 8005e1e:	3708      	adds	r7, #8
 8005e20:	46bd      	mov	sp, r7
 8005e22:	bd80      	pop	{r7, pc}
 8005e24:	40023800 	.word	0x40023800

08005e28 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8005e28:	b580      	push	{r7, lr}
 8005e2a:	b08c      	sub	sp, #48	; 0x30
 8005e2c:	af00      	add	r7, sp, #0
 8005e2e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8005e30:	f107 031c 	add.w	r3, r7, #28
 8005e34:	2200      	movs	r2, #0
 8005e36:	601a      	str	r2, [r3, #0]
 8005e38:	605a      	str	r2, [r3, #4]
 8005e3a:	609a      	str	r2, [r3, #8]
 8005e3c:	60da      	str	r2, [r3, #12]
 8005e3e:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8005e40:	687b      	ldr	r3, [r7, #4]
 8005e42:	681b      	ldr	r3, [r3, #0]
 8005e44:	4a2e      	ldr	r2, [pc, #184]	; (8005f00 <HAL_ADC_MspInit+0xd8>)
 8005e46:	4293      	cmp	r3, r2
 8005e48:	d128      	bne.n	8005e9c <HAL_ADC_MspInit+0x74>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8005e4a:	2300      	movs	r3, #0
 8005e4c:	61bb      	str	r3, [r7, #24]
 8005e4e:	4b2d      	ldr	r3, [pc, #180]	; (8005f04 <HAL_ADC_MspInit+0xdc>)
 8005e50:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005e52:	4a2c      	ldr	r2, [pc, #176]	; (8005f04 <HAL_ADC_MspInit+0xdc>)
 8005e54:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005e58:	6453      	str	r3, [r2, #68]	; 0x44
 8005e5a:	4b2a      	ldr	r3, [pc, #168]	; (8005f04 <HAL_ADC_MspInit+0xdc>)
 8005e5c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005e5e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005e62:	61bb      	str	r3, [r7, #24]
 8005e64:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8005e66:	2300      	movs	r3, #0
 8005e68:	617b      	str	r3, [r7, #20]
 8005e6a:	4b26      	ldr	r3, [pc, #152]	; (8005f04 <HAL_ADC_MspInit+0xdc>)
 8005e6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005e6e:	4a25      	ldr	r2, [pc, #148]	; (8005f04 <HAL_ADC_MspInit+0xdc>)
 8005e70:	f043 0302 	orr.w	r3, r3, #2
 8005e74:	6313      	str	r3, [r2, #48]	; 0x30
 8005e76:	4b23      	ldr	r3, [pc, #140]	; (8005f04 <HAL_ADC_MspInit+0xdc>)
 8005e78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005e7a:	f003 0302 	and.w	r3, r3, #2
 8005e7e:	617b      	str	r3, [r7, #20]
 8005e80:	697b      	ldr	r3, [r7, #20]
    /**ADC1 GPIO Configuration
    PB0     ------> ADC1_IN8
    */
    GPIO_InitStruct.Pin = Bat_Meas_Pin;
 8005e82:	2301      	movs	r3, #1
 8005e84:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8005e86:	2303      	movs	r3, #3
 8005e88:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005e8a:	2300      	movs	r3, #0
 8005e8c:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(Bat_Meas_GPIO_Port, &GPIO_InitStruct);
 8005e8e:	f107 031c 	add.w	r3, r7, #28
 8005e92:	4619      	mov	r1, r3
 8005e94:	481c      	ldr	r0, [pc, #112]	; (8005f08 <HAL_ADC_MspInit+0xe0>)
 8005e96:	f002 f9ef 	bl	8008278 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC2_MspInit 1 */

  /* USER CODE END ADC2_MspInit 1 */
  }

}
 8005e9a:	e02c      	b.n	8005ef6 <HAL_ADC_MspInit+0xce>
  else if(hadc->Instance==ADC2)
 8005e9c:	687b      	ldr	r3, [r7, #4]
 8005e9e:	681b      	ldr	r3, [r3, #0]
 8005ea0:	4a1a      	ldr	r2, [pc, #104]	; (8005f0c <HAL_ADC_MspInit+0xe4>)
 8005ea2:	4293      	cmp	r3, r2
 8005ea4:	d127      	bne.n	8005ef6 <HAL_ADC_MspInit+0xce>
    __HAL_RCC_ADC2_CLK_ENABLE();
 8005ea6:	2300      	movs	r3, #0
 8005ea8:	613b      	str	r3, [r7, #16]
 8005eaa:	4b16      	ldr	r3, [pc, #88]	; (8005f04 <HAL_ADC_MspInit+0xdc>)
 8005eac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005eae:	4a15      	ldr	r2, [pc, #84]	; (8005f04 <HAL_ADC_MspInit+0xdc>)
 8005eb0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005eb4:	6453      	str	r3, [r2, #68]	; 0x44
 8005eb6:	4b13      	ldr	r3, [pc, #76]	; (8005f04 <HAL_ADC_MspInit+0xdc>)
 8005eb8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005eba:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8005ebe:	613b      	str	r3, [r7, #16]
 8005ec0:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8005ec2:	2300      	movs	r3, #0
 8005ec4:	60fb      	str	r3, [r7, #12]
 8005ec6:	4b0f      	ldr	r3, [pc, #60]	; (8005f04 <HAL_ADC_MspInit+0xdc>)
 8005ec8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005eca:	4a0e      	ldr	r2, [pc, #56]	; (8005f04 <HAL_ADC_MspInit+0xdc>)
 8005ecc:	f043 0304 	orr.w	r3, r3, #4
 8005ed0:	6313      	str	r3, [r2, #48]	; 0x30
 8005ed2:	4b0c      	ldr	r3, [pc, #48]	; (8005f04 <HAL_ADC_MspInit+0xdc>)
 8005ed4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005ed6:	f003 0304 	and.w	r3, r3, #4
 8005eda:	60fb      	str	r3, [r7, #12]
 8005edc:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = Motor_Bat_Pin;
 8005ede:	2308      	movs	r3, #8
 8005ee0:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8005ee2:	2303      	movs	r3, #3
 8005ee4:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005ee6:	2300      	movs	r3, #0
 8005ee8:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(Motor_Bat_GPIO_Port, &GPIO_InitStruct);
 8005eea:	f107 031c 	add.w	r3, r7, #28
 8005eee:	4619      	mov	r1, r3
 8005ef0:	4807      	ldr	r0, [pc, #28]	; (8005f10 <HAL_ADC_MspInit+0xe8>)
 8005ef2:	f002 f9c1 	bl	8008278 <HAL_GPIO_Init>
}
 8005ef6:	bf00      	nop
 8005ef8:	3730      	adds	r7, #48	; 0x30
 8005efa:	46bd      	mov	sp, r7
 8005efc:	bd80      	pop	{r7, pc}
 8005efe:	bf00      	nop
 8005f00:	40012000 	.word	0x40012000
 8005f04:	40023800 	.word	0x40023800
 8005f08:	40020400 	.word	0x40020400
 8005f0c:	40012100 	.word	0x40012100
 8005f10:	40020800 	.word	0x40020800

08005f14 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8005f14:	b580      	push	{r7, lr}
 8005f16:	b090      	sub	sp, #64	; 0x40
 8005f18:	af00      	add	r7, sp, #0
 8005f1a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8005f1c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8005f20:	2200      	movs	r2, #0
 8005f22:	601a      	str	r2, [r3, #0]
 8005f24:	605a      	str	r2, [r3, #4]
 8005f26:	609a      	str	r2, [r3, #8]
 8005f28:	60da      	str	r2, [r3, #12]
 8005f2a:	611a      	str	r2, [r3, #16]
  if(htim_base->Instance==TIM1)
 8005f2c:	687b      	ldr	r3, [r7, #4]
 8005f2e:	681b      	ldr	r3, [r3, #0]
 8005f30:	4a72      	ldr	r2, [pc, #456]	; (80060fc <HAL_TIM_Base_MspInit+0x1e8>)
 8005f32:	4293      	cmp	r3, r2
 8005f34:	d10e      	bne.n	8005f54 <HAL_TIM_Base_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8005f36:	2300      	movs	r3, #0
 8005f38:	62bb      	str	r3, [r7, #40]	; 0x28
 8005f3a:	4b71      	ldr	r3, [pc, #452]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 8005f3c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005f3e:	4a70      	ldr	r2, [pc, #448]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 8005f40:	f043 0301 	orr.w	r3, r3, #1
 8005f44:	6453      	str	r3, [r2, #68]	; 0x44
 8005f46:	4b6e      	ldr	r3, [pc, #440]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 8005f48:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005f4a:	f003 0301 	and.w	r3, r3, #1
 8005f4e:	62bb      	str	r3, [r7, #40]	; 0x28
 8005f50:	6abb      	ldr	r3, [r7, #40]	; 0x28
  /* USER CODE BEGIN TIM14_MspInit 1 */

  /* USER CODE END TIM14_MspInit 1 */
  }

}
 8005f52:	e0cf      	b.n	80060f4 <HAL_TIM_Base_MspInit+0x1e0>
  else if(htim_base->Instance==TIM2)
 8005f54:	687b      	ldr	r3, [r7, #4]
 8005f56:	681b      	ldr	r3, [r3, #0]
 8005f58:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005f5c:	d116      	bne.n	8005f8c <HAL_TIM_Base_MspInit+0x78>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8005f5e:	2300      	movs	r3, #0
 8005f60:	627b      	str	r3, [r7, #36]	; 0x24
 8005f62:	4b67      	ldr	r3, [pc, #412]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 8005f64:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005f66:	4a66      	ldr	r2, [pc, #408]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 8005f68:	f043 0301 	orr.w	r3, r3, #1
 8005f6c:	6413      	str	r3, [r2, #64]	; 0x40
 8005f6e:	4b64      	ldr	r3, [pc, #400]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 8005f70:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005f72:	f003 0301 	and.w	r3, r3, #1
 8005f76:	627b      	str	r3, [r7, #36]	; 0x24
 8005f78:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8005f7a:	2200      	movs	r2, #0
 8005f7c:	2100      	movs	r1, #0
 8005f7e:	201c      	movs	r0, #28
 8005f80:	f001 fb25 	bl	80075ce <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8005f84:	201c      	movs	r0, #28
 8005f86:	f001 fb3e 	bl	8007606 <HAL_NVIC_EnableIRQ>
}
 8005f8a:	e0b3      	b.n	80060f4 <HAL_TIM_Base_MspInit+0x1e0>
  else if(htim_base->Instance==TIM3)
 8005f8c:	687b      	ldr	r3, [r7, #4]
 8005f8e:	681b      	ldr	r3, [r3, #0]
 8005f90:	4a5c      	ldr	r2, [pc, #368]	; (8006104 <HAL_TIM_Base_MspInit+0x1f0>)
 8005f92:	4293      	cmp	r3, r2
 8005f94:	d10e      	bne.n	8005fb4 <HAL_TIM_Base_MspInit+0xa0>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8005f96:	2300      	movs	r3, #0
 8005f98:	623b      	str	r3, [r7, #32]
 8005f9a:	4b59      	ldr	r3, [pc, #356]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 8005f9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005f9e:	4a58      	ldr	r2, [pc, #352]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 8005fa0:	f043 0302 	orr.w	r3, r3, #2
 8005fa4:	6413      	str	r3, [r2, #64]	; 0x40
 8005fa6:	4b56      	ldr	r3, [pc, #344]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 8005fa8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005faa:	f003 0302 	and.w	r3, r3, #2
 8005fae:	623b      	str	r3, [r7, #32]
 8005fb0:	6a3b      	ldr	r3, [r7, #32]
}
 8005fb2:	e09f      	b.n	80060f4 <HAL_TIM_Base_MspInit+0x1e0>
  else if(htim_base->Instance==TIM4)
 8005fb4:	687b      	ldr	r3, [r7, #4]
 8005fb6:	681b      	ldr	r3, [r3, #0]
 8005fb8:	4a53      	ldr	r2, [pc, #332]	; (8006108 <HAL_TIM_Base_MspInit+0x1f4>)
 8005fba:	4293      	cmp	r3, r2
 8005fbc:	d15f      	bne.n	800607e <HAL_TIM_Base_MspInit+0x16a>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8005fbe:	2300      	movs	r3, #0
 8005fc0:	61fb      	str	r3, [r7, #28]
 8005fc2:	4b4f      	ldr	r3, [pc, #316]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 8005fc4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005fc6:	4a4e      	ldr	r2, [pc, #312]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 8005fc8:	f043 0304 	orr.w	r3, r3, #4
 8005fcc:	6413      	str	r3, [r2, #64]	; 0x40
 8005fce:	4b4c      	ldr	r3, [pc, #304]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 8005fd0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005fd2:	f003 0304 	and.w	r3, r3, #4
 8005fd6:	61fb      	str	r3, [r7, #28]
 8005fd8:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8005fda:	2300      	movs	r3, #0
 8005fdc:	61bb      	str	r3, [r7, #24]
 8005fde:	4b48      	ldr	r3, [pc, #288]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 8005fe0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005fe2:	4a47      	ldr	r2, [pc, #284]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 8005fe4:	f043 0302 	orr.w	r3, r3, #2
 8005fe8:	6313      	str	r3, [r2, #48]	; 0x30
 8005fea:	4b45      	ldr	r3, [pc, #276]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 8005fec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005fee:	f003 0302 	and.w	r3, r3, #2
 8005ff2:	61bb      	str	r3, [r7, #24]
 8005ff4:	69bb      	ldr	r3, [r7, #24]
    GPIO_InitStruct.Pin = RC_PWM1_Pin|GPIO_PIN_9;
 8005ff6:	f44f 7340 	mov.w	r3, #768	; 0x300
 8005ffa:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8005ffc:	2302      	movs	r3, #2
 8005ffe:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006000:	2300      	movs	r3, #0
 8006002:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006004:	2300      	movs	r3, #0
 8006006:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8006008:	2302      	movs	r3, #2
 800600a:	63fb      	str	r3, [r7, #60]	; 0x3c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800600c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006010:	4619      	mov	r1, r3
 8006012:	483e      	ldr	r0, [pc, #248]	; (800610c <HAL_TIM_Base_MspInit+0x1f8>)
 8006014:	f002 f930 	bl	8008278 <HAL_GPIO_Init>
    hdma_tim4_ch3.Instance = DMA1_Stream7;
 8006018:	4b3d      	ldr	r3, [pc, #244]	; (8006110 <HAL_TIM_Base_MspInit+0x1fc>)
 800601a:	4a3e      	ldr	r2, [pc, #248]	; (8006114 <HAL_TIM_Base_MspInit+0x200>)
 800601c:	601a      	str	r2, [r3, #0]
    hdma_tim4_ch3.Init.Channel = DMA_CHANNEL_2;
 800601e:	4b3c      	ldr	r3, [pc, #240]	; (8006110 <HAL_TIM_Base_MspInit+0x1fc>)
 8006020:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8006024:	605a      	str	r2, [r3, #4]
    hdma_tim4_ch3.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8006026:	4b3a      	ldr	r3, [pc, #232]	; (8006110 <HAL_TIM_Base_MspInit+0x1fc>)
 8006028:	2200      	movs	r2, #0
 800602a:	609a      	str	r2, [r3, #8]
    hdma_tim4_ch3.Init.PeriphInc = DMA_PINC_DISABLE;
 800602c:	4b38      	ldr	r3, [pc, #224]	; (8006110 <HAL_TIM_Base_MspInit+0x1fc>)
 800602e:	2200      	movs	r2, #0
 8006030:	60da      	str	r2, [r3, #12]
    hdma_tim4_ch3.Init.MemInc = DMA_MINC_ENABLE;
 8006032:	4b37      	ldr	r3, [pc, #220]	; (8006110 <HAL_TIM_Base_MspInit+0x1fc>)
 8006034:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8006038:	611a      	str	r2, [r3, #16]
    hdma_tim4_ch3.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 800603a:	4b35      	ldr	r3, [pc, #212]	; (8006110 <HAL_TIM_Base_MspInit+0x1fc>)
 800603c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8006040:	615a      	str	r2, [r3, #20]
    hdma_tim4_ch3.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 8006042:	4b33      	ldr	r3, [pc, #204]	; (8006110 <HAL_TIM_Base_MspInit+0x1fc>)
 8006044:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8006048:	619a      	str	r2, [r3, #24]
    hdma_tim4_ch3.Init.Mode = DMA_CIRCULAR;
 800604a:	4b31      	ldr	r3, [pc, #196]	; (8006110 <HAL_TIM_Base_MspInit+0x1fc>)
 800604c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006050:	61da      	str	r2, [r3, #28]
    hdma_tim4_ch3.Init.Priority = DMA_PRIORITY_MEDIUM;
 8006052:	4b2f      	ldr	r3, [pc, #188]	; (8006110 <HAL_TIM_Base_MspInit+0x1fc>)
 8006054:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8006058:	621a      	str	r2, [r3, #32]
    hdma_tim4_ch3.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 800605a:	4b2d      	ldr	r3, [pc, #180]	; (8006110 <HAL_TIM_Base_MspInit+0x1fc>)
 800605c:	2200      	movs	r2, #0
 800605e:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_tim4_ch3) != HAL_OK)
 8006060:	482b      	ldr	r0, [pc, #172]	; (8006110 <HAL_TIM_Base_MspInit+0x1fc>)
 8006062:	f001 faf9 	bl	8007658 <HAL_DMA_Init>
 8006066:	4603      	mov	r3, r0
 8006068:	2b00      	cmp	r3, #0
 800606a:	d001      	beq.n	8006070 <HAL_TIM_Base_MspInit+0x15c>
      Error_Handler();
 800606c:	f7ff fddc 	bl	8005c28 <Error_Handler>
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC3],hdma_tim4_ch3);
 8006070:	687b      	ldr	r3, [r7, #4]
 8006072:	4a27      	ldr	r2, [pc, #156]	; (8006110 <HAL_TIM_Base_MspInit+0x1fc>)
 8006074:	62da      	str	r2, [r3, #44]	; 0x2c
 8006076:	4a26      	ldr	r2, [pc, #152]	; (8006110 <HAL_TIM_Base_MspInit+0x1fc>)
 8006078:	687b      	ldr	r3, [r7, #4]
 800607a:	6393      	str	r3, [r2, #56]	; 0x38
}
 800607c:	e03a      	b.n	80060f4 <HAL_TIM_Base_MspInit+0x1e0>
  else if(htim_base->Instance==TIM5)
 800607e:	687b      	ldr	r3, [r7, #4]
 8006080:	681b      	ldr	r3, [r3, #0]
 8006082:	4a25      	ldr	r2, [pc, #148]	; (8006118 <HAL_TIM_Base_MspInit+0x204>)
 8006084:	4293      	cmp	r3, r2
 8006086:	d10e      	bne.n	80060a6 <HAL_TIM_Base_MspInit+0x192>
    __HAL_RCC_TIM5_CLK_ENABLE();
 8006088:	2300      	movs	r3, #0
 800608a:	617b      	str	r3, [r7, #20]
 800608c:	4b1c      	ldr	r3, [pc, #112]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 800608e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006090:	4a1b      	ldr	r2, [pc, #108]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 8006092:	f043 0308 	orr.w	r3, r3, #8
 8006096:	6413      	str	r3, [r2, #64]	; 0x40
 8006098:	4b19      	ldr	r3, [pc, #100]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 800609a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800609c:	f003 0308 	and.w	r3, r3, #8
 80060a0:	617b      	str	r3, [r7, #20]
 80060a2:	697b      	ldr	r3, [r7, #20]
}
 80060a4:	e026      	b.n	80060f4 <HAL_TIM_Base_MspInit+0x1e0>
  else if(htim_base->Instance==TIM13)
 80060a6:	687b      	ldr	r3, [r7, #4]
 80060a8:	681b      	ldr	r3, [r3, #0]
 80060aa:	4a1c      	ldr	r2, [pc, #112]	; (800611c <HAL_TIM_Base_MspInit+0x208>)
 80060ac:	4293      	cmp	r3, r2
 80060ae:	d10e      	bne.n	80060ce <HAL_TIM_Base_MspInit+0x1ba>
    __HAL_RCC_TIM13_CLK_ENABLE();
 80060b0:	2300      	movs	r3, #0
 80060b2:	613b      	str	r3, [r7, #16]
 80060b4:	4b12      	ldr	r3, [pc, #72]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 80060b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80060b8:	4a11      	ldr	r2, [pc, #68]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 80060ba:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80060be:	6413      	str	r3, [r2, #64]	; 0x40
 80060c0:	4b0f      	ldr	r3, [pc, #60]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 80060c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80060c4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80060c8:	613b      	str	r3, [r7, #16]
 80060ca:	693b      	ldr	r3, [r7, #16]
}
 80060cc:	e012      	b.n	80060f4 <HAL_TIM_Base_MspInit+0x1e0>
  else if(htim_base->Instance==TIM14)
 80060ce:	687b      	ldr	r3, [r7, #4]
 80060d0:	681b      	ldr	r3, [r3, #0]
 80060d2:	4a13      	ldr	r2, [pc, #76]	; (8006120 <HAL_TIM_Base_MspInit+0x20c>)
 80060d4:	4293      	cmp	r3, r2
 80060d6:	d10d      	bne.n	80060f4 <HAL_TIM_Base_MspInit+0x1e0>
    __HAL_RCC_TIM14_CLK_ENABLE();
 80060d8:	2300      	movs	r3, #0
 80060da:	60fb      	str	r3, [r7, #12]
 80060dc:	4b08      	ldr	r3, [pc, #32]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 80060de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80060e0:	4a07      	ldr	r2, [pc, #28]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 80060e2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80060e6:	6413      	str	r3, [r2, #64]	; 0x40
 80060e8:	4b05      	ldr	r3, [pc, #20]	; (8006100 <HAL_TIM_Base_MspInit+0x1ec>)
 80060ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80060ec:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80060f0:	60fb      	str	r3, [r7, #12]
 80060f2:	68fb      	ldr	r3, [r7, #12]
}
 80060f4:	bf00      	nop
 80060f6:	3740      	adds	r7, #64	; 0x40
 80060f8:	46bd      	mov	sp, r7
 80060fa:	bd80      	pop	{r7, pc}
 80060fc:	40010000 	.word	0x40010000
 8006100:	40023800 	.word	0x40023800
 8006104:	40000400 	.word	0x40000400
 8006108:	40000800 	.word	0x40000800
 800610c:	40020400 	.word	0x40020400
 8006110:	2000098c 	.word	0x2000098c
 8006114:	400260b8 	.word	0x400260b8
 8006118:	40000c00 	.word	0x40000c00
 800611c:	40001c00 	.word	0x40001c00
 8006120:	40002000 	.word	0x40002000

08006124 <HAL_TIM_Encoder_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_encoder: TIM_Encoder handle pointer
* @retval None
*/
void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* htim_encoder)
{
 8006124:	b580      	push	{r7, lr}
 8006126:	b08a      	sub	sp, #40	; 0x28
 8006128:	af00      	add	r7, sp, #0
 800612a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800612c:	f107 0314 	add.w	r3, r7, #20
 8006130:	2200      	movs	r2, #0
 8006132:	601a      	str	r2, [r3, #0]
 8006134:	605a      	str	r2, [r3, #4]
 8006136:	609a      	str	r2, [r3, #8]
 8006138:	60da      	str	r2, [r3, #12]
 800613a:	611a      	str	r2, [r3, #16]
  if(htim_encoder->Instance==TIM8)
 800613c:	687b      	ldr	r3, [r7, #4]
 800613e:	681b      	ldr	r3, [r3, #0]
 8006140:	4a19      	ldr	r2, [pc, #100]	; (80061a8 <HAL_TIM_Encoder_MspInit+0x84>)
 8006142:	4293      	cmp	r3, r2
 8006144:	d12b      	bne.n	800619e <HAL_TIM_Encoder_MspInit+0x7a>
  {
  /* USER CODE BEGIN TIM8_MspInit 0 */

  /* USER CODE END TIM8_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM8_CLK_ENABLE();
 8006146:	2300      	movs	r3, #0
 8006148:	613b      	str	r3, [r7, #16]
 800614a:	4b18      	ldr	r3, [pc, #96]	; (80061ac <HAL_TIM_Encoder_MspInit+0x88>)
 800614c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800614e:	4a17      	ldr	r2, [pc, #92]	; (80061ac <HAL_TIM_Encoder_MspInit+0x88>)
 8006150:	f043 0302 	orr.w	r3, r3, #2
 8006154:	6453      	str	r3, [r2, #68]	; 0x44
 8006156:	4b15      	ldr	r3, [pc, #84]	; (80061ac <HAL_TIM_Encoder_MspInit+0x88>)
 8006158:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800615a:	f003 0302 	and.w	r3, r3, #2
 800615e:	613b      	str	r3, [r7, #16]
 8006160:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8006162:	2300      	movs	r3, #0
 8006164:	60fb      	str	r3, [r7, #12]
 8006166:	4b11      	ldr	r3, [pc, #68]	; (80061ac <HAL_TIM_Encoder_MspInit+0x88>)
 8006168:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800616a:	4a10      	ldr	r2, [pc, #64]	; (80061ac <HAL_TIM_Encoder_MspInit+0x88>)
 800616c:	f043 0304 	orr.w	r3, r3, #4
 8006170:	6313      	str	r3, [r2, #48]	; 0x30
 8006172:	4b0e      	ldr	r3, [pc, #56]	; (80061ac <HAL_TIM_Encoder_MspInit+0x88>)
 8006174:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006176:	f003 0304 	and.w	r3, r3, #4
 800617a:	60fb      	str	r3, [r7, #12]
 800617c:	68fb      	ldr	r3, [r7, #12]
    /**TIM8 GPIO Configuration
    PC6     ------> TIM8_CH1
    PC7     ------> TIM8_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800617e:	23c0      	movs	r3, #192	; 0xc0
 8006180:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8006182:	2302      	movs	r3, #2
 8006184:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006186:	2300      	movs	r3, #0
 8006188:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800618a:	2300      	movs	r3, #0
 800618c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 800618e:	2303      	movs	r3, #3
 8006190:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8006192:	f107 0314 	add.w	r3, r7, #20
 8006196:	4619      	mov	r1, r3
 8006198:	4805      	ldr	r0, [pc, #20]	; (80061b0 <HAL_TIM_Encoder_MspInit+0x8c>)
 800619a:	f002 f86d 	bl	8008278 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM8_MspInit 1 */

  /* USER CODE END TIM8_MspInit 1 */
  }

}
 800619e:	bf00      	nop
 80061a0:	3728      	adds	r7, #40	; 0x28
 80061a2:	46bd      	mov	sp, r7
 80061a4:	bd80      	pop	{r7, pc}
 80061a6:	bf00      	nop
 80061a8:	40010400 	.word	0x40010400
 80061ac:	40023800 	.word	0x40023800
 80061b0:	40020800 	.word	0x40020800

080061b4 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80061b4:	b580      	push	{r7, lr}
 80061b6:	b08a      	sub	sp, #40	; 0x28
 80061b8:	af00      	add	r7, sp, #0
 80061ba:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80061bc:	f107 0314 	add.w	r3, r7, #20
 80061c0:	2200      	movs	r2, #0
 80061c2:	601a      	str	r2, [r3, #0]
 80061c4:	605a      	str	r2, [r3, #4]
 80061c6:	609a      	str	r2, [r3, #8]
 80061c8:	60da      	str	r2, [r3, #12]
 80061ca:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 80061cc:	687b      	ldr	r3, [r7, #4]
 80061ce:	681b      	ldr	r3, [r3, #0]
 80061d0:	4a37      	ldr	r2, [pc, #220]	; (80062b0 <HAL_TIM_MspPostInit+0xfc>)
 80061d2:	4293      	cmp	r3, r2
 80061d4:	d11f      	bne.n	8006216 <HAL_TIM_MspPostInit+0x62>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80061d6:	2300      	movs	r3, #0
 80061d8:	613b      	str	r3, [r7, #16]
 80061da:	4b36      	ldr	r3, [pc, #216]	; (80062b4 <HAL_TIM_MspPostInit+0x100>)
 80061dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80061de:	4a35      	ldr	r2, [pc, #212]	; (80062b4 <HAL_TIM_MspPostInit+0x100>)
 80061e0:	f043 0301 	orr.w	r3, r3, #1
 80061e4:	6313      	str	r3, [r2, #48]	; 0x30
 80061e6:	4b33      	ldr	r3, [pc, #204]	; (80062b4 <HAL_TIM_MspPostInit+0x100>)
 80061e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80061ea:	f003 0301 	and.w	r3, r3, #1
 80061ee:	613b      	str	r3, [r7, #16]
 80061f0:	693b      	ldr	r3, [r7, #16]
    /**TIM1 GPIO Configuration
    PA11     ------> TIM1_CH4
    */
    GPIO_InitStruct.Pin = Servo2_PWM_Pin;
 80061f2:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80061f6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80061f8:	2302      	movs	r3, #2
 80061fa:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80061fc:	2300      	movs	r3, #0
 80061fe:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006200:	2300      	movs	r3, #0
 8006202:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8006204:	2301      	movs	r3, #1
 8006206:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(Servo2_PWM_GPIO_Port, &GPIO_InitStruct);
 8006208:	f107 0314 	add.w	r3, r7, #20
 800620c:	4619      	mov	r1, r3
 800620e:	482a      	ldr	r0, [pc, #168]	; (80062b8 <HAL_TIM_MspPostInit+0x104>)
 8006210:	f002 f832 	bl	8008278 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 8006214:	e047      	b.n	80062a6 <HAL_TIM_MspPostInit+0xf2>
  else if(htim->Instance==TIM2)
 8006216:	687b      	ldr	r3, [r7, #4]
 8006218:	681b      	ldr	r3, [r3, #0]
 800621a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800621e:	d11f      	bne.n	8006260 <HAL_TIM_MspPostInit+0xac>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8006220:	2300      	movs	r3, #0
 8006222:	60fb      	str	r3, [r7, #12]
 8006224:	4b23      	ldr	r3, [pc, #140]	; (80062b4 <HAL_TIM_MspPostInit+0x100>)
 8006226:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006228:	4a22      	ldr	r2, [pc, #136]	; (80062b4 <HAL_TIM_MspPostInit+0x100>)
 800622a:	f043 0301 	orr.w	r3, r3, #1
 800622e:	6313      	str	r3, [r2, #48]	; 0x30
 8006230:	4b20      	ldr	r3, [pc, #128]	; (80062b4 <HAL_TIM_MspPostInit+0x100>)
 8006232:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006234:	f003 0301 	and.w	r3, r3, #1
 8006238:	60fb      	str	r3, [r7, #12]
 800623a:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = Servo1_PWM_Pin;
 800623c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8006240:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8006242:	2302      	movs	r3, #2
 8006244:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006246:	2300      	movs	r3, #0
 8006248:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800624a:	2300      	movs	r3, #0
 800624c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 800624e:	2301      	movs	r3, #1
 8006250:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(Servo1_PWM_GPIO_Port, &GPIO_InitStruct);
 8006252:	f107 0314 	add.w	r3, r7, #20
 8006256:	4619      	mov	r1, r3
 8006258:	4817      	ldr	r0, [pc, #92]	; (80062b8 <HAL_TIM_MspPostInit+0x104>)
 800625a:	f002 f80d 	bl	8008278 <HAL_GPIO_Init>
}
 800625e:	e022      	b.n	80062a6 <HAL_TIM_MspPostInit+0xf2>
  else if(htim->Instance==TIM3)
 8006260:	687b      	ldr	r3, [r7, #4]
 8006262:	681b      	ldr	r3, [r3, #0]
 8006264:	4a15      	ldr	r2, [pc, #84]	; (80062bc <HAL_TIM_MspPostInit+0x108>)
 8006266:	4293      	cmp	r3, r2
 8006268:	d11d      	bne.n	80062a6 <HAL_TIM_MspPostInit+0xf2>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800626a:	2300      	movs	r3, #0
 800626c:	60bb      	str	r3, [r7, #8]
 800626e:	4b11      	ldr	r3, [pc, #68]	; (80062b4 <HAL_TIM_MspPostInit+0x100>)
 8006270:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006272:	4a10      	ldr	r2, [pc, #64]	; (80062b4 <HAL_TIM_MspPostInit+0x100>)
 8006274:	f043 0301 	orr.w	r3, r3, #1
 8006278:	6313      	str	r3, [r2, #48]	; 0x30
 800627a:	4b0e      	ldr	r3, [pc, #56]	; (80062b4 <HAL_TIM_MspPostInit+0x100>)
 800627c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800627e:	f003 0301 	and.w	r3, r3, #1
 8006282:	60bb      	str	r3, [r7, #8]
 8006284:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = MotorPWM1_Pin|MotorPWM2_Pin;
 8006286:	23c0      	movs	r3, #192	; 0xc0
 8006288:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800628a:	2302      	movs	r3, #2
 800628c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800628e:	2300      	movs	r3, #0
 8006290:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006292:	2300      	movs	r3, #0
 8006294:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8006296:	2302      	movs	r3, #2
 8006298:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800629a:	f107 0314 	add.w	r3, r7, #20
 800629e:	4619      	mov	r1, r3
 80062a0:	4805      	ldr	r0, [pc, #20]	; (80062b8 <HAL_TIM_MspPostInit+0x104>)
 80062a2:	f001 ffe9 	bl	8008278 <HAL_GPIO_Init>
}
 80062a6:	bf00      	nop
 80062a8:	3728      	adds	r7, #40	; 0x28
 80062aa:	46bd      	mov	sp, r7
 80062ac:	bd80      	pop	{r7, pc}
 80062ae:	bf00      	nop
 80062b0:	40010000 	.word	0x40010000
 80062b4:	40023800 	.word	0x40023800
 80062b8:	40020000 	.word	0x40020000
 80062bc:	40000400 	.word	0x40000400

080062c0 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80062c0:	b580      	push	{r7, lr}
 80062c2:	b090      	sub	sp, #64	; 0x40
 80062c4:	af00      	add	r7, sp, #0
 80062c6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80062c8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80062cc:	2200      	movs	r2, #0
 80062ce:	601a      	str	r2, [r3, #0]
 80062d0:	605a      	str	r2, [r3, #4]
 80062d2:	609a      	str	r2, [r3, #8]
 80062d4:	60da      	str	r2, [r3, #12]
 80062d6:	611a      	str	r2, [r3, #16]
  if(huart->Instance==UART5)
 80062d8:	687b      	ldr	r3, [r7, #4]
 80062da:	681b      	ldr	r3, [r3, #0]
 80062dc:	4a7c      	ldr	r2, [pc, #496]	; (80064d0 <HAL_UART_MspInit+0x210>)
 80062de:	4293      	cmp	r3, r2
 80062e0:	d14b      	bne.n	800637a <HAL_UART_MspInit+0xba>
  {
  /* USER CODE BEGIN UART5_MspInit 0 */

  /* USER CODE END UART5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_UART5_CLK_ENABLE();
 80062e2:	2300      	movs	r3, #0
 80062e4:	62bb      	str	r3, [r7, #40]	; 0x28
 80062e6:	4b7b      	ldr	r3, [pc, #492]	; (80064d4 <HAL_UART_MspInit+0x214>)
 80062e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80062ea:	4a7a      	ldr	r2, [pc, #488]	; (80064d4 <HAL_UART_MspInit+0x214>)
 80062ec:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80062f0:	6413      	str	r3, [r2, #64]	; 0x40
 80062f2:	4b78      	ldr	r3, [pc, #480]	; (80064d4 <HAL_UART_MspInit+0x214>)
 80062f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80062f6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80062fa:	62bb      	str	r3, [r7, #40]	; 0x28
 80062fc:	6abb      	ldr	r3, [r7, #40]	; 0x28

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80062fe:	2300      	movs	r3, #0
 8006300:	627b      	str	r3, [r7, #36]	; 0x24
 8006302:	4b74      	ldr	r3, [pc, #464]	; (80064d4 <HAL_UART_MspInit+0x214>)
 8006304:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006306:	4a73      	ldr	r2, [pc, #460]	; (80064d4 <HAL_UART_MspInit+0x214>)
 8006308:	f043 0304 	orr.w	r3, r3, #4
 800630c:	6313      	str	r3, [r2, #48]	; 0x30
 800630e:	4b71      	ldr	r3, [pc, #452]	; (80064d4 <HAL_UART_MspInit+0x214>)
 8006310:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006312:	f003 0304 	and.w	r3, r3, #4
 8006316:	627b      	str	r3, [r7, #36]	; 0x24
 8006318:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800631a:	2300      	movs	r3, #0
 800631c:	623b      	str	r3, [r7, #32]
 800631e:	4b6d      	ldr	r3, [pc, #436]	; (80064d4 <HAL_UART_MspInit+0x214>)
 8006320:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006322:	4a6c      	ldr	r2, [pc, #432]	; (80064d4 <HAL_UART_MspInit+0x214>)
 8006324:	f043 0308 	orr.w	r3, r3, #8
 8006328:	6313      	str	r3, [r2, #48]	; 0x30
 800632a:	4b6a      	ldr	r3, [pc, #424]	; (80064d4 <HAL_UART_MspInit+0x214>)
 800632c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800632e:	f003 0308 	and.w	r3, r3, #8
 8006332:	623b      	str	r3, [r7, #32]
 8006334:	6a3b      	ldr	r3, [r7, #32]
    /**UART5 GPIO Configuration
    PC12     ------> UART5_TX
    PD2     ------> UART5_RX
    */
    GPIO_InitStruct.Pin = NUCLEO_TX_Pin;
 8006336:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800633a:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800633c:	2302      	movs	r3, #2
 800633e:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006340:	2300      	movs	r3, #0
 8006342:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8006344:	2303      	movs	r3, #3
 8006346:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 8006348:	2308      	movs	r3, #8
 800634a:	63fb      	str	r3, [r7, #60]	; 0x3c
    HAL_GPIO_Init(NUCLEO_TX_GPIO_Port, &GPIO_InitStruct);
 800634c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006350:	4619      	mov	r1, r3
 8006352:	4861      	ldr	r0, [pc, #388]	; (80064d8 <HAL_UART_MspInit+0x218>)
 8006354:	f001 ff90 	bl	8008278 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = NUCLEO_RX_Pin;
 8006358:	2304      	movs	r3, #4
 800635a:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800635c:	2302      	movs	r3, #2
 800635e:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006360:	2300      	movs	r3, #0
 8006362:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8006364:	2303      	movs	r3, #3
 8006366:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 8006368:	2308      	movs	r3, #8
 800636a:	63fb      	str	r3, [r7, #60]	; 0x3c
    HAL_GPIO_Init(NUCLEO_RX_GPIO_Port, &GPIO_InitStruct);
 800636c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006370:	4619      	mov	r1, r3
 8006372:	485a      	ldr	r0, [pc, #360]	; (80064dc <HAL_UART_MspInit+0x21c>)
 8006374:	f001 ff80 	bl	8008278 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }

}
 8006378:	e0a6      	b.n	80064c8 <HAL_UART_MspInit+0x208>
  else if(huart->Instance==USART1)
 800637a:	687b      	ldr	r3, [r7, #4]
 800637c:	681b      	ldr	r3, [r3, #0]
 800637e:	4a58      	ldr	r2, [pc, #352]	; (80064e0 <HAL_UART_MspInit+0x220>)
 8006380:	4293      	cmp	r3, r2
 8006382:	d135      	bne.n	80063f0 <HAL_UART_MspInit+0x130>
    __HAL_RCC_USART1_CLK_ENABLE();
 8006384:	2300      	movs	r3, #0
 8006386:	61fb      	str	r3, [r7, #28]
 8006388:	4b52      	ldr	r3, [pc, #328]	; (80064d4 <HAL_UART_MspInit+0x214>)
 800638a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800638c:	4a51      	ldr	r2, [pc, #324]	; (80064d4 <HAL_UART_MspInit+0x214>)
 800638e:	f043 0310 	orr.w	r3, r3, #16
 8006392:	6453      	str	r3, [r2, #68]	; 0x44
 8006394:	4b4f      	ldr	r3, [pc, #316]	; (80064d4 <HAL_UART_MspInit+0x214>)
 8006396:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006398:	f003 0310 	and.w	r3, r3, #16
 800639c:	61fb      	str	r3, [r7, #28]
 800639e:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80063a0:	2300      	movs	r3, #0
 80063a2:	61bb      	str	r3, [r7, #24]
 80063a4:	4b4b      	ldr	r3, [pc, #300]	; (80064d4 <HAL_UART_MspInit+0x214>)
 80063a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80063a8:	4a4a      	ldr	r2, [pc, #296]	; (80064d4 <HAL_UART_MspInit+0x214>)
 80063aa:	f043 0301 	orr.w	r3, r3, #1
 80063ae:	6313      	str	r3, [r2, #48]	; 0x30
 80063b0:	4b48      	ldr	r3, [pc, #288]	; (80064d4 <HAL_UART_MspInit+0x214>)
 80063b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80063b4:	f003 0301 	and.w	r3, r3, #1
 80063b8:	61bb      	str	r3, [r7, #24]
 80063ba:	69bb      	ldr	r3, [r7, #24]
    GPIO_InitStruct.Pin = TEL_TX_Pin|TEL_RX_Pin;
 80063bc:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 80063c0:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80063c2:	2302      	movs	r3, #2
 80063c4:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80063c6:	2300      	movs	r3, #0
 80063c8:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80063ca:	2303      	movs	r3, #3
 80063cc:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80063ce:	2307      	movs	r3, #7
 80063d0:	63fb      	str	r3, [r7, #60]	; 0x3c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80063d2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80063d6:	4619      	mov	r1, r3
 80063d8:	4842      	ldr	r0, [pc, #264]	; (80064e4 <HAL_UART_MspInit+0x224>)
 80063da:	f001 ff4d 	bl	8008278 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 80063de:	2200      	movs	r2, #0
 80063e0:	2100      	movs	r1, #0
 80063e2:	2025      	movs	r0, #37	; 0x25
 80063e4:	f001 f8f3 	bl	80075ce <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 80063e8:	2025      	movs	r0, #37	; 0x25
 80063ea:	f001 f90c 	bl	8007606 <HAL_NVIC_EnableIRQ>
}
 80063ee:	e06b      	b.n	80064c8 <HAL_UART_MspInit+0x208>
  else if(huart->Instance==USART2)
 80063f0:	687b      	ldr	r3, [r7, #4]
 80063f2:	681b      	ldr	r3, [r3, #0]
 80063f4:	4a3c      	ldr	r2, [pc, #240]	; (80064e8 <HAL_UART_MspInit+0x228>)
 80063f6:	4293      	cmp	r3, r2
 80063f8:	d12c      	bne.n	8006454 <HAL_UART_MspInit+0x194>
    __HAL_RCC_USART2_CLK_ENABLE();
 80063fa:	2300      	movs	r3, #0
 80063fc:	617b      	str	r3, [r7, #20]
 80063fe:	4b35      	ldr	r3, [pc, #212]	; (80064d4 <HAL_UART_MspInit+0x214>)
 8006400:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006402:	4a34      	ldr	r2, [pc, #208]	; (80064d4 <HAL_UART_MspInit+0x214>)
 8006404:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006408:	6413      	str	r3, [r2, #64]	; 0x40
 800640a:	4b32      	ldr	r3, [pc, #200]	; (80064d4 <HAL_UART_MspInit+0x214>)
 800640c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800640e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006412:	617b      	str	r3, [r7, #20]
 8006414:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8006416:	2300      	movs	r3, #0
 8006418:	613b      	str	r3, [r7, #16]
 800641a:	4b2e      	ldr	r3, [pc, #184]	; (80064d4 <HAL_UART_MspInit+0x214>)
 800641c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800641e:	4a2d      	ldr	r2, [pc, #180]	; (80064d4 <HAL_UART_MspInit+0x214>)
 8006420:	f043 0301 	orr.w	r3, r3, #1
 8006424:	6313      	str	r3, [r2, #48]	; 0x30
 8006426:	4b2b      	ldr	r3, [pc, #172]	; (80064d4 <HAL_UART_MspInit+0x214>)
 8006428:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800642a:	f003 0301 	and.w	r3, r3, #1
 800642e:	613b      	str	r3, [r7, #16]
 8006430:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = STLINK_TX_Pin|STLINK_RX_Pin;
 8006432:	230c      	movs	r3, #12
 8006434:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8006436:	2302      	movs	r3, #2
 8006438:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800643a:	2300      	movs	r3, #0
 800643c:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800643e:	2303      	movs	r3, #3
 8006440:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8006442:	2307      	movs	r3, #7
 8006444:	63fb      	str	r3, [r7, #60]	; 0x3c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8006446:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800644a:	4619      	mov	r1, r3
 800644c:	4825      	ldr	r0, [pc, #148]	; (80064e4 <HAL_UART_MspInit+0x224>)
 800644e:	f001 ff13 	bl	8008278 <HAL_GPIO_Init>
}
 8006452:	e039      	b.n	80064c8 <HAL_UART_MspInit+0x208>
  else if(huart->Instance==USART3)
 8006454:	687b      	ldr	r3, [r7, #4]
 8006456:	681b      	ldr	r3, [r3, #0]
 8006458:	4a24      	ldr	r2, [pc, #144]	; (80064ec <HAL_UART_MspInit+0x22c>)
 800645a:	4293      	cmp	r3, r2
 800645c:	d134      	bne.n	80064c8 <HAL_UART_MspInit+0x208>
    __HAL_RCC_USART3_CLK_ENABLE();
 800645e:	2300      	movs	r3, #0
 8006460:	60fb      	str	r3, [r7, #12]
 8006462:	4b1c      	ldr	r3, [pc, #112]	; (80064d4 <HAL_UART_MspInit+0x214>)
 8006464:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006466:	4a1b      	ldr	r2, [pc, #108]	; (80064d4 <HAL_UART_MspInit+0x214>)
 8006468:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800646c:	6413      	str	r3, [r2, #64]	; 0x40
 800646e:	4b19      	ldr	r3, [pc, #100]	; (80064d4 <HAL_UART_MspInit+0x214>)
 8006470:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006472:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8006476:	60fb      	str	r3, [r7, #12]
 8006478:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800647a:	2300      	movs	r3, #0
 800647c:	60bb      	str	r3, [r7, #8]
 800647e:	4b15      	ldr	r3, [pc, #84]	; (80064d4 <HAL_UART_MspInit+0x214>)
 8006480:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006482:	4a14      	ldr	r2, [pc, #80]	; (80064d4 <HAL_UART_MspInit+0x214>)
 8006484:	f043 0304 	orr.w	r3, r3, #4
 8006488:	6313      	str	r3, [r2, #48]	; 0x30
 800648a:	4b12      	ldr	r3, [pc, #72]	; (80064d4 <HAL_UART_MspInit+0x214>)
 800648c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800648e:	f003 0304 	and.w	r3, r3, #4
 8006492:	60bb      	str	r3, [r7, #8]
 8006494:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = TB_TX_Pin|TB_RX_Pin;
 8006496:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 800649a:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800649c:	2302      	movs	r3, #2
 800649e:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80064a0:	2300      	movs	r3, #0
 80064a2:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80064a4:	2303      	movs	r3, #3
 80064a6:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 80064a8:	2307      	movs	r3, #7
 80064aa:	63fb      	str	r3, [r7, #60]	; 0x3c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80064ac:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80064b0:	4619      	mov	r1, r3
 80064b2:	4809      	ldr	r0, [pc, #36]	; (80064d8 <HAL_UART_MspInit+0x218>)
 80064b4:	f001 fee0 	bl	8008278 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 80064b8:	2200      	movs	r2, #0
 80064ba:	2100      	movs	r1, #0
 80064bc:	2027      	movs	r0, #39	; 0x27
 80064be:	f001 f886 	bl	80075ce <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
 80064c2:	2027      	movs	r0, #39	; 0x27
 80064c4:	f001 f89f 	bl	8007606 <HAL_NVIC_EnableIRQ>
}
 80064c8:	bf00      	nop
 80064ca:	3740      	adds	r7, #64	; 0x40
 80064cc:	46bd      	mov	sp, r7
 80064ce:	bd80      	pop	{r7, pc}
 80064d0:	40005000 	.word	0x40005000
 80064d4:	40023800 	.word	0x40023800
 80064d8:	40020800 	.word	0x40020800
 80064dc:	40020c00 	.word	0x40020c00
 80064e0:	40011000 	.word	0x40011000
 80064e4:	40020000 	.word	0x40020000
 80064e8:	40004400 	.word	0x40004400
 80064ec:	40004800 	.word	0x40004800

080064f0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80064f0:	b480      	push	{r7}
 80064f2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80064f4:	e7fe      	b.n	80064f4 <NMI_Handler+0x4>

080064f6 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80064f6:	b480      	push	{r7}
 80064f8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80064fa:	e7fe      	b.n	80064fa <HardFault_Handler+0x4>

080064fc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80064fc:	b480      	push	{r7}
 80064fe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8006500:	e7fe      	b.n	8006500 <MemManage_Handler+0x4>

08006502 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8006502:	b480      	push	{r7}
 8006504:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8006506:	e7fe      	b.n	8006506 <BusFault_Handler+0x4>

08006508 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8006508:	b480      	push	{r7}
 800650a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800650c:	e7fe      	b.n	800650c <UsageFault_Handler+0x4>

0800650e <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800650e:	b480      	push	{r7}
 8006510:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8006512:	bf00      	nop
 8006514:	46bd      	mov	sp, r7
 8006516:	f85d 7b04 	ldr.w	r7, [sp], #4
 800651a:	4770      	bx	lr

0800651c <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800651c:	b480      	push	{r7}
 800651e:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8006520:	bf00      	nop
 8006522:	46bd      	mov	sp, r7
 8006524:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006528:	4770      	bx	lr

0800652a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800652a:	b480      	push	{r7}
 800652c:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800652e:	bf00      	nop
 8006530:	46bd      	mov	sp, r7
 8006532:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006536:	4770      	bx	lr

08006538 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8006538:	b580      	push	{r7, lr}
 800653a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800653c:	f000 f98e 	bl	800685c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8006540:	bf00      	nop
 8006542:	bd80      	pop	{r7, pc}

08006544 <EXTI4_IRQHandler>:

/**
  * @brief This function handles EXTI line 4 interrupt.
  */
void EXTI4_IRQHandler(void)
{
 8006544:	b580      	push	{r7, lr}
 8006546:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI4_IRQn 0 */

  /* USER CODE END EXTI4_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(B1_Pin);
 8006548:	2010      	movs	r0, #16
 800654a:	f002 f875 	bl	8008638 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI4_IRQn 1 */

  /* USER CODE END EXTI4_IRQn 1 */
}
 800654e:	bf00      	nop
 8006550:	bd80      	pop	{r7, pc}
	...

08006554 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8006554:	b580      	push	{r7, lr}
 8006556:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8006558:	4802      	ldr	r0, [pc, #8]	; (8006564 <TIM2_IRQHandler+0x10>)
 800655a:	f003 fbcf 	bl	8009cfc <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 800655e:	bf00      	nop
 8006560:	bd80      	pop	{r7, pc}
 8006562:	bf00      	nop
 8006564:	20000794 	.word	0x20000794

08006568 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 8006568:	b580      	push	{r7, lr}
 800656a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 800656c:	4802      	ldr	r0, [pc, #8]	; (8006578 <USART1_IRQHandler+0x10>)
 800656e:	f004 fee7 	bl	800b340 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8006572:	bf00      	nop
 8006574:	bd80      	pop	{r7, pc}
 8006576:	bf00      	nop
 8006578:	20000a30 	.word	0x20000a30

0800657c <USART3_IRQHandler>:

/**
  * @brief This function handles USART3 global interrupt.
  */
void USART3_IRQHandler(void)
{
 800657c:	b580      	push	{r7, lr}
 800657e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART3_IRQn 0 */

  /* USER CODE END USART3_IRQn 0 */
  HAL_UART_IRQHandler(&huart3);
 8006580:	4802      	ldr	r0, [pc, #8]	; (800658c <USART3_IRQHandler+0x10>)
 8006582:	f004 fedd 	bl	800b340 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART3_IRQn 1 */

  /* USER CODE END USART3_IRQn 1 */
}
 8006586:	bf00      	nop
 8006588:	bd80      	pop	{r7, pc}
 800658a:	bf00      	nop
 800658c:	20000ab8 	.word	0x20000ab8

08006590 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8006590:	b580      	push	{r7, lr}
 8006592:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(On_Board_Button_Pin);
 8006594:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8006598:	f002 f84e 	bl	8008638 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 800659c:	bf00      	nop
 800659e:	bd80      	pop	{r7, pc}

080065a0 <DMA1_Stream7_IRQHandler>:

/**
  * @brief This function handles DMA1 stream7 global interrupt.
  */
void DMA1_Stream7_IRQHandler(void)
{
 80065a0:	b580      	push	{r7, lr}
 80065a2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream7_IRQn 0 */

  /* USER CODE END DMA1_Stream7_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_tim4_ch3);
 80065a4:	4802      	ldr	r0, [pc, #8]	; (80065b0 <DMA1_Stream7_IRQHandler+0x10>)
 80065a6:	f001 f9ef 	bl	8007988 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream7_IRQn 1 */

  /* USER CODE END DMA1_Stream7_IRQn 1 */
}
 80065aa:	bf00      	nop
 80065ac:	bd80      	pop	{r7, pc}
 80065ae:	bf00      	nop
 80065b0:	2000098c 	.word	0x2000098c

080065b4 <_getpid>:
 80065b4:	b480      	push	{r7}
 80065b6:	af00      	add	r7, sp, #0
 80065b8:	2301      	movs	r3, #1
 80065ba:	4618      	mov	r0, r3
 80065bc:	46bd      	mov	sp, r7
 80065be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065c2:	4770      	bx	lr

080065c4 <_kill>:
 80065c4:	b580      	push	{r7, lr}
 80065c6:	b082      	sub	sp, #8
 80065c8:	af00      	add	r7, sp, #0
 80065ca:	6078      	str	r0, [r7, #4]
 80065cc:	6039      	str	r1, [r7, #0]
 80065ce:	f005 fe1f 	bl	800c210 <__errno>
 80065d2:	4603      	mov	r3, r0
 80065d4:	2216      	movs	r2, #22
 80065d6:	601a      	str	r2, [r3, #0]
 80065d8:	f04f 33ff 	mov.w	r3, #4294967295
 80065dc:	4618      	mov	r0, r3
 80065de:	3708      	adds	r7, #8
 80065e0:	46bd      	mov	sp, r7
 80065e2:	bd80      	pop	{r7, pc}

080065e4 <_exit>:
 80065e4:	b580      	push	{r7, lr}
 80065e6:	b082      	sub	sp, #8
 80065e8:	af00      	add	r7, sp, #0
 80065ea:	6078      	str	r0, [r7, #4]
 80065ec:	f04f 31ff 	mov.w	r1, #4294967295
 80065f0:	6878      	ldr	r0, [r7, #4]
 80065f2:	f7ff ffe7 	bl	80065c4 <_kill>
 80065f6:	e7fe      	b.n	80065f6 <_exit+0x12>

080065f8 <_read>:
 80065f8:	b580      	push	{r7, lr}
 80065fa:	b086      	sub	sp, #24
 80065fc:	af00      	add	r7, sp, #0
 80065fe:	60f8      	str	r0, [r7, #12]
 8006600:	60b9      	str	r1, [r7, #8]
 8006602:	607a      	str	r2, [r7, #4]
 8006604:	2300      	movs	r3, #0
 8006606:	617b      	str	r3, [r7, #20]
 8006608:	e00a      	b.n	8006620 <_read+0x28>
 800660a:	f3af 8000 	nop.w
 800660e:	4601      	mov	r1, r0
 8006610:	68bb      	ldr	r3, [r7, #8]
 8006612:	1c5a      	adds	r2, r3, #1
 8006614:	60ba      	str	r2, [r7, #8]
 8006616:	b2ca      	uxtb	r2, r1
 8006618:	701a      	strb	r2, [r3, #0]
 800661a:	697b      	ldr	r3, [r7, #20]
 800661c:	3301      	adds	r3, #1
 800661e:	617b      	str	r3, [r7, #20]
 8006620:	697a      	ldr	r2, [r7, #20]
 8006622:	687b      	ldr	r3, [r7, #4]
 8006624:	429a      	cmp	r2, r3
 8006626:	dbf0      	blt.n	800660a <_read+0x12>
 8006628:	687b      	ldr	r3, [r7, #4]
 800662a:	4618      	mov	r0, r3
 800662c:	3718      	adds	r7, #24
 800662e:	46bd      	mov	sp, r7
 8006630:	bd80      	pop	{r7, pc}

08006632 <_write>:
 8006632:	b580      	push	{r7, lr}
 8006634:	b086      	sub	sp, #24
 8006636:	af00      	add	r7, sp, #0
 8006638:	60f8      	str	r0, [r7, #12]
 800663a:	60b9      	str	r1, [r7, #8]
 800663c:	607a      	str	r2, [r7, #4]
 800663e:	2300      	movs	r3, #0
 8006640:	617b      	str	r3, [r7, #20]
 8006642:	e009      	b.n	8006658 <_write+0x26>
 8006644:	68bb      	ldr	r3, [r7, #8]
 8006646:	1c5a      	adds	r2, r3, #1
 8006648:	60ba      	str	r2, [r7, #8]
 800664a:	781b      	ldrb	r3, [r3, #0]
 800664c:	4618      	mov	r0, r3
 800664e:	f3af 8000 	nop.w
 8006652:	697b      	ldr	r3, [r7, #20]
 8006654:	3301      	adds	r3, #1
 8006656:	617b      	str	r3, [r7, #20]
 8006658:	697a      	ldr	r2, [r7, #20]
 800665a:	687b      	ldr	r3, [r7, #4]
 800665c:	429a      	cmp	r2, r3
 800665e:	dbf1      	blt.n	8006644 <_write+0x12>
 8006660:	687b      	ldr	r3, [r7, #4]
 8006662:	4618      	mov	r0, r3
 8006664:	3718      	adds	r7, #24
 8006666:	46bd      	mov	sp, r7
 8006668:	bd80      	pop	{r7, pc}

0800666a <_close>:
 800666a:	b480      	push	{r7}
 800666c:	b083      	sub	sp, #12
 800666e:	af00      	add	r7, sp, #0
 8006670:	6078      	str	r0, [r7, #4]
 8006672:	f04f 33ff 	mov.w	r3, #4294967295
 8006676:	4618      	mov	r0, r3
 8006678:	370c      	adds	r7, #12
 800667a:	46bd      	mov	sp, r7
 800667c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006680:	4770      	bx	lr

08006682 <_fstat>:
 8006682:	b480      	push	{r7}
 8006684:	b083      	sub	sp, #12
 8006686:	af00      	add	r7, sp, #0
 8006688:	6078      	str	r0, [r7, #4]
 800668a:	6039      	str	r1, [r7, #0]
 800668c:	683b      	ldr	r3, [r7, #0]
 800668e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8006692:	605a      	str	r2, [r3, #4]
 8006694:	2300      	movs	r3, #0
 8006696:	4618      	mov	r0, r3
 8006698:	370c      	adds	r7, #12
 800669a:	46bd      	mov	sp, r7
 800669c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066a0:	4770      	bx	lr

080066a2 <_isatty>:
 80066a2:	b480      	push	{r7}
 80066a4:	b083      	sub	sp, #12
 80066a6:	af00      	add	r7, sp, #0
 80066a8:	6078      	str	r0, [r7, #4]
 80066aa:	2301      	movs	r3, #1
 80066ac:	4618      	mov	r0, r3
 80066ae:	370c      	adds	r7, #12
 80066b0:	46bd      	mov	sp, r7
 80066b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066b6:	4770      	bx	lr

080066b8 <_lseek>:
 80066b8:	b480      	push	{r7}
 80066ba:	b085      	sub	sp, #20
 80066bc:	af00      	add	r7, sp, #0
 80066be:	60f8      	str	r0, [r7, #12]
 80066c0:	60b9      	str	r1, [r7, #8]
 80066c2:	607a      	str	r2, [r7, #4]
 80066c4:	2300      	movs	r3, #0
 80066c6:	4618      	mov	r0, r3
 80066c8:	3714      	adds	r7, #20
 80066ca:	46bd      	mov	sp, r7
 80066cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066d0:	4770      	bx	lr
	...

080066d4 <_sbrk>:
 80066d4:	b580      	push	{r7, lr}
 80066d6:	b086      	sub	sp, #24
 80066d8:	af00      	add	r7, sp, #0
 80066da:	6078      	str	r0, [r7, #4]
 80066dc:	4a14      	ldr	r2, [pc, #80]	; (8006730 <_sbrk+0x5c>)
 80066de:	4b15      	ldr	r3, [pc, #84]	; (8006734 <_sbrk+0x60>)
 80066e0:	1ad3      	subs	r3, r2, r3
 80066e2:	617b      	str	r3, [r7, #20]
 80066e4:	697b      	ldr	r3, [r7, #20]
 80066e6:	613b      	str	r3, [r7, #16]
 80066e8:	4b13      	ldr	r3, [pc, #76]	; (8006738 <_sbrk+0x64>)
 80066ea:	681b      	ldr	r3, [r3, #0]
 80066ec:	2b00      	cmp	r3, #0
 80066ee:	d102      	bne.n	80066f6 <_sbrk+0x22>
 80066f0:	4b11      	ldr	r3, [pc, #68]	; (8006738 <_sbrk+0x64>)
 80066f2:	4a12      	ldr	r2, [pc, #72]	; (800673c <_sbrk+0x68>)
 80066f4:	601a      	str	r2, [r3, #0]
 80066f6:	4b10      	ldr	r3, [pc, #64]	; (8006738 <_sbrk+0x64>)
 80066f8:	681a      	ldr	r2, [r3, #0]
 80066fa:	687b      	ldr	r3, [r7, #4]
 80066fc:	4413      	add	r3, r2
 80066fe:	693a      	ldr	r2, [r7, #16]
 8006700:	429a      	cmp	r2, r3
 8006702:	d207      	bcs.n	8006714 <_sbrk+0x40>
 8006704:	f005 fd84 	bl	800c210 <__errno>
 8006708:	4603      	mov	r3, r0
 800670a:	220c      	movs	r2, #12
 800670c:	601a      	str	r2, [r3, #0]
 800670e:	f04f 33ff 	mov.w	r3, #4294967295
 8006712:	e009      	b.n	8006728 <_sbrk+0x54>
 8006714:	4b08      	ldr	r3, [pc, #32]	; (8006738 <_sbrk+0x64>)
 8006716:	681b      	ldr	r3, [r3, #0]
 8006718:	60fb      	str	r3, [r7, #12]
 800671a:	4b07      	ldr	r3, [pc, #28]	; (8006738 <_sbrk+0x64>)
 800671c:	681a      	ldr	r2, [r3, #0]
 800671e:	687b      	ldr	r3, [r7, #4]
 8006720:	4413      	add	r3, r2
 8006722:	4a05      	ldr	r2, [pc, #20]	; (8006738 <_sbrk+0x64>)
 8006724:	6013      	str	r3, [r2, #0]
 8006726:	68fb      	ldr	r3, [r7, #12]
 8006728:	4618      	mov	r0, r3
 800672a:	3718      	adds	r7, #24
 800672c:	46bd      	mov	sp, r7
 800672e:	bd80      	pop	{r7, pc}
 8006730:	20020000 	.word	0x20020000
 8006734:	00000400 	.word	0x00000400
 8006738:	20000b10 	.word	0x20000b10
 800673c:	20000b48 	.word	0x20000b48

08006740 <SystemInit>:
 8006740:	b480      	push	{r7}
 8006742:	af00      	add	r7, sp, #0
 8006744:	4b06      	ldr	r3, [pc, #24]	; (8006760 <SystemInit+0x20>)
 8006746:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800674a:	4a05      	ldr	r2, [pc, #20]	; (8006760 <SystemInit+0x20>)
 800674c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8006750:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8006754:	bf00      	nop
 8006756:	46bd      	mov	sp, r7
 8006758:	f85d 7b04 	ldr.w	r7, [sp], #4
 800675c:	4770      	bx	lr
 800675e:	bf00      	nop
 8006760:	e000ed00 	.word	0xe000ed00

08006764 <Reset_Handler>:
 8006764:	f8df d034 	ldr.w	sp, [pc, #52]	; 800679c <LoopFillZerobss+0x12>
 8006768:	480d      	ldr	r0, [pc, #52]	; (80067a0 <LoopFillZerobss+0x16>)
 800676a:	490e      	ldr	r1, [pc, #56]	; (80067a4 <LoopFillZerobss+0x1a>)
 800676c:	4a0e      	ldr	r2, [pc, #56]	; (80067a8 <LoopFillZerobss+0x1e>)
 800676e:	2300      	movs	r3, #0
 8006770:	e002      	b.n	8006778 <LoopCopyDataInit>

08006772 <CopyDataInit>:
 8006772:	58d4      	ldr	r4, [r2, r3]
 8006774:	50c4      	str	r4, [r0, r3]
 8006776:	3304      	adds	r3, #4

08006778 <LoopCopyDataInit>:
 8006778:	18c4      	adds	r4, r0, r3
 800677a:	428c      	cmp	r4, r1
 800677c:	d3f9      	bcc.n	8006772 <CopyDataInit>
 800677e:	4a0b      	ldr	r2, [pc, #44]	; (80067ac <LoopFillZerobss+0x22>)
 8006780:	4c0b      	ldr	r4, [pc, #44]	; (80067b0 <LoopFillZerobss+0x26>)
 8006782:	2300      	movs	r3, #0
 8006784:	e001      	b.n	800678a <LoopFillZerobss>

08006786 <FillZerobss>:
 8006786:	6013      	str	r3, [r2, #0]
 8006788:	3204      	adds	r2, #4

0800678a <LoopFillZerobss>:
 800678a:	42a2      	cmp	r2, r4
 800678c:	d3fb      	bcc.n	8006786 <FillZerobss>
 800678e:	f7ff ffd7 	bl	8006740 <SystemInit>
 8006792:	f005 fd43 	bl	800c21c <__libc_init_array>
 8006796:	f7fe fb65 	bl	8004e64 <main>
 800679a:	4770      	bx	lr
 800679c:	20020000 	.word	0x20020000
 80067a0:	20000000 	.word	0x20000000
 80067a4:	20000270 	.word	0x20000270
 80067a8:	08010c50 	.word	0x08010c50
 80067ac:	20000270 	.word	0x20000270
 80067b0:	20000b48 	.word	0x20000b48

080067b4 <ADC_IRQHandler>:
 80067b4:	e7fe      	b.n	80067b4 <ADC_IRQHandler>
	...

080067b8 <HAL_Init>:
 80067b8:	b580      	push	{r7, lr}
 80067ba:	af00      	add	r7, sp, #0
 80067bc:	4b0e      	ldr	r3, [pc, #56]	; (80067f8 <HAL_Init+0x40>)
 80067be:	681b      	ldr	r3, [r3, #0]
 80067c0:	4a0d      	ldr	r2, [pc, #52]	; (80067f8 <HAL_Init+0x40>)
 80067c2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80067c6:	6013      	str	r3, [r2, #0]
 80067c8:	4b0b      	ldr	r3, [pc, #44]	; (80067f8 <HAL_Init+0x40>)
 80067ca:	681b      	ldr	r3, [r3, #0]
 80067cc:	4a0a      	ldr	r2, [pc, #40]	; (80067f8 <HAL_Init+0x40>)
 80067ce:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80067d2:	6013      	str	r3, [r2, #0]
 80067d4:	4b08      	ldr	r3, [pc, #32]	; (80067f8 <HAL_Init+0x40>)
 80067d6:	681b      	ldr	r3, [r3, #0]
 80067d8:	4a07      	ldr	r2, [pc, #28]	; (80067f8 <HAL_Init+0x40>)
 80067da:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80067de:	6013      	str	r3, [r2, #0]
 80067e0:	2003      	movs	r0, #3
 80067e2:	f000 fee9 	bl	80075b8 <HAL_NVIC_SetPriorityGrouping>
 80067e6:	2000      	movs	r0, #0
 80067e8:	f000 f808 	bl	80067fc <HAL_InitTick>
 80067ec:	f7ff faf4 	bl	8005dd8 <HAL_MspInit>
 80067f0:	2300      	movs	r3, #0
 80067f2:	4618      	mov	r0, r3
 80067f4:	bd80      	pop	{r7, pc}
 80067f6:	bf00      	nop
 80067f8:	40023c00 	.word	0x40023c00

080067fc <HAL_InitTick>:
 80067fc:	b580      	push	{r7, lr}
 80067fe:	b082      	sub	sp, #8
 8006800:	af00      	add	r7, sp, #0
 8006802:	6078      	str	r0, [r7, #4]
 8006804:	4b12      	ldr	r3, [pc, #72]	; (8006850 <HAL_InitTick+0x54>)
 8006806:	681a      	ldr	r2, [r3, #0]
 8006808:	4b12      	ldr	r3, [pc, #72]	; (8006854 <HAL_InitTick+0x58>)
 800680a:	781b      	ldrb	r3, [r3, #0]
 800680c:	4619      	mov	r1, r3
 800680e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006812:	fbb3 f3f1 	udiv	r3, r3, r1
 8006816:	fbb2 f3f3 	udiv	r3, r2, r3
 800681a:	4618      	mov	r0, r3
 800681c:	f000 ff0f 	bl	800763e <HAL_SYSTICK_Config>
 8006820:	4603      	mov	r3, r0
 8006822:	2b00      	cmp	r3, #0
 8006824:	d001      	beq.n	800682a <HAL_InitTick+0x2e>
 8006826:	2301      	movs	r3, #1
 8006828:	e00e      	b.n	8006848 <HAL_InitTick+0x4c>
 800682a:	687b      	ldr	r3, [r7, #4]
 800682c:	2b0f      	cmp	r3, #15
 800682e:	d80a      	bhi.n	8006846 <HAL_InitTick+0x4a>
 8006830:	2200      	movs	r2, #0
 8006832:	6879      	ldr	r1, [r7, #4]
 8006834:	f04f 30ff 	mov.w	r0, #4294967295
 8006838:	f000 fec9 	bl	80075ce <HAL_NVIC_SetPriority>
 800683c:	4a06      	ldr	r2, [pc, #24]	; (8006858 <HAL_InitTick+0x5c>)
 800683e:	687b      	ldr	r3, [r7, #4]
 8006840:	6013      	str	r3, [r2, #0]
 8006842:	2300      	movs	r3, #0
 8006844:	e000      	b.n	8006848 <HAL_InitTick+0x4c>
 8006846:	2301      	movs	r3, #1
 8006848:	4618      	mov	r0, r3
 800684a:	3708      	adds	r7, #8
 800684c:	46bd      	mov	sp, r7
 800684e:	bd80      	pop	{r7, pc}
 8006850:	20000094 	.word	0x20000094
 8006854:	2000009c 	.word	0x2000009c
 8006858:	20000098 	.word	0x20000098

0800685c <HAL_IncTick>:
 800685c:	b480      	push	{r7}
 800685e:	af00      	add	r7, sp, #0
 8006860:	4b06      	ldr	r3, [pc, #24]	; (800687c <HAL_IncTick+0x20>)
 8006862:	781b      	ldrb	r3, [r3, #0]
 8006864:	461a      	mov	r2, r3
 8006866:	4b06      	ldr	r3, [pc, #24]	; (8006880 <HAL_IncTick+0x24>)
 8006868:	681b      	ldr	r3, [r3, #0]
 800686a:	4413      	add	r3, r2
 800686c:	4a04      	ldr	r2, [pc, #16]	; (8006880 <HAL_IncTick+0x24>)
 800686e:	6013      	str	r3, [r2, #0]
 8006870:	bf00      	nop
 8006872:	46bd      	mov	sp, r7
 8006874:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006878:	4770      	bx	lr
 800687a:	bf00      	nop
 800687c:	2000009c 	.word	0x2000009c
 8006880:	20000b14 	.word	0x20000b14

08006884 <HAL_GetTick>:
 8006884:	b480      	push	{r7}
 8006886:	af00      	add	r7, sp, #0
 8006888:	4b03      	ldr	r3, [pc, #12]	; (8006898 <HAL_GetTick+0x14>)
 800688a:	681b      	ldr	r3, [r3, #0]
 800688c:	4618      	mov	r0, r3
 800688e:	46bd      	mov	sp, r7
 8006890:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006894:	4770      	bx	lr
 8006896:	bf00      	nop
 8006898:	20000b14 	.word	0x20000b14

0800689c <HAL_Delay>:
 800689c:	b580      	push	{r7, lr}
 800689e:	b084      	sub	sp, #16
 80068a0:	af00      	add	r7, sp, #0
 80068a2:	6078      	str	r0, [r7, #4]
 80068a4:	f7ff ffee 	bl	8006884 <HAL_GetTick>
 80068a8:	60b8      	str	r0, [r7, #8]
 80068aa:	687b      	ldr	r3, [r7, #4]
 80068ac:	60fb      	str	r3, [r7, #12]
 80068ae:	68fb      	ldr	r3, [r7, #12]
 80068b0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80068b4:	d005      	beq.n	80068c2 <HAL_Delay+0x26>
 80068b6:	4b0a      	ldr	r3, [pc, #40]	; (80068e0 <HAL_Delay+0x44>)
 80068b8:	781b      	ldrb	r3, [r3, #0]
 80068ba:	461a      	mov	r2, r3
 80068bc:	68fb      	ldr	r3, [r7, #12]
 80068be:	4413      	add	r3, r2
 80068c0:	60fb      	str	r3, [r7, #12]
 80068c2:	bf00      	nop
 80068c4:	f7ff ffde 	bl	8006884 <HAL_GetTick>
 80068c8:	4602      	mov	r2, r0
 80068ca:	68bb      	ldr	r3, [r7, #8]
 80068cc:	1ad3      	subs	r3, r2, r3
 80068ce:	68fa      	ldr	r2, [r7, #12]
 80068d0:	429a      	cmp	r2, r3
 80068d2:	d8f7      	bhi.n	80068c4 <HAL_Delay+0x28>
 80068d4:	bf00      	nop
 80068d6:	bf00      	nop
 80068d8:	3710      	adds	r7, #16
 80068da:	46bd      	mov	sp, r7
 80068dc:	bd80      	pop	{r7, pc}
 80068de:	bf00      	nop
 80068e0:	2000009c 	.word	0x2000009c

080068e4 <HAL_ADC_Init>:
 80068e4:	b580      	push	{r7, lr}
 80068e6:	b084      	sub	sp, #16
 80068e8:	af00      	add	r7, sp, #0
 80068ea:	6078      	str	r0, [r7, #4]
 80068ec:	2300      	movs	r3, #0
 80068ee:	73fb      	strb	r3, [r7, #15]
 80068f0:	687b      	ldr	r3, [r7, #4]
 80068f2:	2b00      	cmp	r3, #0
 80068f4:	d101      	bne.n	80068fa <HAL_ADC_Init+0x16>
 80068f6:	2301      	movs	r3, #1
 80068f8:	e033      	b.n	8006962 <HAL_ADC_Init+0x7e>
 80068fa:	687b      	ldr	r3, [r7, #4]
 80068fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80068fe:	2b00      	cmp	r3, #0
 8006900:	d109      	bne.n	8006916 <HAL_ADC_Init+0x32>
 8006902:	6878      	ldr	r0, [r7, #4]
 8006904:	f7ff fa90 	bl	8005e28 <HAL_ADC_MspInit>
 8006908:	687b      	ldr	r3, [r7, #4]
 800690a:	2200      	movs	r2, #0
 800690c:	645a      	str	r2, [r3, #68]	; 0x44
 800690e:	687b      	ldr	r3, [r7, #4]
 8006910:	2200      	movs	r2, #0
 8006912:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006916:	687b      	ldr	r3, [r7, #4]
 8006918:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800691a:	f003 0310 	and.w	r3, r3, #16
 800691e:	2b00      	cmp	r3, #0
 8006920:	d118      	bne.n	8006954 <HAL_ADC_Init+0x70>
 8006922:	687b      	ldr	r3, [r7, #4]
 8006924:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006926:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800692a:	f023 0302 	bic.w	r3, r3, #2
 800692e:	f043 0202 	orr.w	r2, r3, #2
 8006932:	687b      	ldr	r3, [r7, #4]
 8006934:	641a      	str	r2, [r3, #64]	; 0x40
 8006936:	6878      	ldr	r0, [r7, #4]
 8006938:	f000 fab4 	bl	8006ea4 <ADC_Init>
 800693c:	687b      	ldr	r3, [r7, #4]
 800693e:	2200      	movs	r2, #0
 8006940:	645a      	str	r2, [r3, #68]	; 0x44
 8006942:	687b      	ldr	r3, [r7, #4]
 8006944:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006946:	f023 0303 	bic.w	r3, r3, #3
 800694a:	f043 0201 	orr.w	r2, r3, #1
 800694e:	687b      	ldr	r3, [r7, #4]
 8006950:	641a      	str	r2, [r3, #64]	; 0x40
 8006952:	e001      	b.n	8006958 <HAL_ADC_Init+0x74>
 8006954:	2301      	movs	r3, #1
 8006956:	73fb      	strb	r3, [r7, #15]
 8006958:	687b      	ldr	r3, [r7, #4]
 800695a:	2200      	movs	r2, #0
 800695c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006960:	7bfb      	ldrb	r3, [r7, #15]
 8006962:	4618      	mov	r0, r3
 8006964:	3710      	adds	r7, #16
 8006966:	46bd      	mov	sp, r7
 8006968:	bd80      	pop	{r7, pc}
	...

0800696c <HAL_ADC_Start>:
 800696c:	b480      	push	{r7}
 800696e:	b085      	sub	sp, #20
 8006970:	af00      	add	r7, sp, #0
 8006972:	6078      	str	r0, [r7, #4]
 8006974:	2300      	movs	r3, #0
 8006976:	60bb      	str	r3, [r7, #8]
 8006978:	687b      	ldr	r3, [r7, #4]
 800697a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800697e:	2b01      	cmp	r3, #1
 8006980:	d101      	bne.n	8006986 <HAL_ADC_Start+0x1a>
 8006982:	2302      	movs	r3, #2
 8006984:	e0b2      	b.n	8006aec <HAL_ADC_Start+0x180>
 8006986:	687b      	ldr	r3, [r7, #4]
 8006988:	2201      	movs	r2, #1
 800698a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800698e:	687b      	ldr	r3, [r7, #4]
 8006990:	681b      	ldr	r3, [r3, #0]
 8006992:	689b      	ldr	r3, [r3, #8]
 8006994:	f003 0301 	and.w	r3, r3, #1
 8006998:	2b01      	cmp	r3, #1
 800699a:	d018      	beq.n	80069ce <HAL_ADC_Start+0x62>
 800699c:	687b      	ldr	r3, [r7, #4]
 800699e:	681b      	ldr	r3, [r3, #0]
 80069a0:	689a      	ldr	r2, [r3, #8]
 80069a2:	687b      	ldr	r3, [r7, #4]
 80069a4:	681b      	ldr	r3, [r3, #0]
 80069a6:	f042 0201 	orr.w	r2, r2, #1
 80069aa:	609a      	str	r2, [r3, #8]
 80069ac:	4b52      	ldr	r3, [pc, #328]	; (8006af8 <HAL_ADC_Start+0x18c>)
 80069ae:	681b      	ldr	r3, [r3, #0]
 80069b0:	4a52      	ldr	r2, [pc, #328]	; (8006afc <HAL_ADC_Start+0x190>)
 80069b2:	fba2 2303 	umull	r2, r3, r2, r3
 80069b6:	0c9a      	lsrs	r2, r3, #18
 80069b8:	4613      	mov	r3, r2
 80069ba:	005b      	lsls	r3, r3, #1
 80069bc:	4413      	add	r3, r2
 80069be:	60bb      	str	r3, [r7, #8]
 80069c0:	e002      	b.n	80069c8 <HAL_ADC_Start+0x5c>
 80069c2:	68bb      	ldr	r3, [r7, #8]
 80069c4:	3b01      	subs	r3, #1
 80069c6:	60bb      	str	r3, [r7, #8]
 80069c8:	68bb      	ldr	r3, [r7, #8]
 80069ca:	2b00      	cmp	r3, #0
 80069cc:	d1f9      	bne.n	80069c2 <HAL_ADC_Start+0x56>
 80069ce:	687b      	ldr	r3, [r7, #4]
 80069d0:	681b      	ldr	r3, [r3, #0]
 80069d2:	689b      	ldr	r3, [r3, #8]
 80069d4:	f003 0301 	and.w	r3, r3, #1
 80069d8:	2b01      	cmp	r3, #1
 80069da:	d17a      	bne.n	8006ad2 <HAL_ADC_Start+0x166>
 80069dc:	687b      	ldr	r3, [r7, #4]
 80069de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80069e0:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 80069e4:	f023 0301 	bic.w	r3, r3, #1
 80069e8:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 80069ec:	687b      	ldr	r3, [r7, #4]
 80069ee:	641a      	str	r2, [r3, #64]	; 0x40
 80069f0:	687b      	ldr	r3, [r7, #4]
 80069f2:	681b      	ldr	r3, [r3, #0]
 80069f4:	685b      	ldr	r3, [r3, #4]
 80069f6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80069fa:	2b00      	cmp	r3, #0
 80069fc:	d007      	beq.n	8006a0e <HAL_ADC_Start+0xa2>
 80069fe:	687b      	ldr	r3, [r7, #4]
 8006a00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a02:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8006a06:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 8006a0a:	687b      	ldr	r3, [r7, #4]
 8006a0c:	641a      	str	r2, [r3, #64]	; 0x40
 8006a0e:	687b      	ldr	r3, [r7, #4]
 8006a10:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a12:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8006a16:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006a1a:	d106      	bne.n	8006a2a <HAL_ADC_Start+0xbe>
 8006a1c:	687b      	ldr	r3, [r7, #4]
 8006a1e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006a20:	f023 0206 	bic.w	r2, r3, #6
 8006a24:	687b      	ldr	r3, [r7, #4]
 8006a26:	645a      	str	r2, [r3, #68]	; 0x44
 8006a28:	e002      	b.n	8006a30 <HAL_ADC_Start+0xc4>
 8006a2a:	687b      	ldr	r3, [r7, #4]
 8006a2c:	2200      	movs	r2, #0
 8006a2e:	645a      	str	r2, [r3, #68]	; 0x44
 8006a30:	687b      	ldr	r3, [r7, #4]
 8006a32:	2200      	movs	r2, #0
 8006a34:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006a38:	4b31      	ldr	r3, [pc, #196]	; (8006b00 <HAL_ADC_Start+0x194>)
 8006a3a:	60fb      	str	r3, [r7, #12]
 8006a3c:	687b      	ldr	r3, [r7, #4]
 8006a3e:	681b      	ldr	r3, [r3, #0]
 8006a40:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8006a44:	601a      	str	r2, [r3, #0]
 8006a46:	68fb      	ldr	r3, [r7, #12]
 8006a48:	685b      	ldr	r3, [r3, #4]
 8006a4a:	f003 031f 	and.w	r3, r3, #31
 8006a4e:	2b00      	cmp	r3, #0
 8006a50:	d12a      	bne.n	8006aa8 <HAL_ADC_Start+0x13c>
 8006a52:	687b      	ldr	r3, [r7, #4]
 8006a54:	681b      	ldr	r3, [r3, #0]
 8006a56:	4a2b      	ldr	r2, [pc, #172]	; (8006b04 <HAL_ADC_Start+0x198>)
 8006a58:	4293      	cmp	r3, r2
 8006a5a:	d015      	beq.n	8006a88 <HAL_ADC_Start+0x11c>
 8006a5c:	687b      	ldr	r3, [r7, #4]
 8006a5e:	681b      	ldr	r3, [r3, #0]
 8006a60:	4a29      	ldr	r2, [pc, #164]	; (8006b08 <HAL_ADC_Start+0x19c>)
 8006a62:	4293      	cmp	r3, r2
 8006a64:	d105      	bne.n	8006a72 <HAL_ADC_Start+0x106>
 8006a66:	4b26      	ldr	r3, [pc, #152]	; (8006b00 <HAL_ADC_Start+0x194>)
 8006a68:	685b      	ldr	r3, [r3, #4]
 8006a6a:	f003 031f 	and.w	r3, r3, #31
 8006a6e:	2b00      	cmp	r3, #0
 8006a70:	d00a      	beq.n	8006a88 <HAL_ADC_Start+0x11c>
 8006a72:	687b      	ldr	r3, [r7, #4]
 8006a74:	681b      	ldr	r3, [r3, #0]
 8006a76:	4a25      	ldr	r2, [pc, #148]	; (8006b0c <HAL_ADC_Start+0x1a0>)
 8006a78:	4293      	cmp	r3, r2
 8006a7a:	d136      	bne.n	8006aea <HAL_ADC_Start+0x17e>
 8006a7c:	4b20      	ldr	r3, [pc, #128]	; (8006b00 <HAL_ADC_Start+0x194>)
 8006a7e:	685b      	ldr	r3, [r3, #4]
 8006a80:	f003 0310 	and.w	r3, r3, #16
 8006a84:	2b00      	cmp	r3, #0
 8006a86:	d130      	bne.n	8006aea <HAL_ADC_Start+0x17e>
 8006a88:	687b      	ldr	r3, [r7, #4]
 8006a8a:	681b      	ldr	r3, [r3, #0]
 8006a8c:	689b      	ldr	r3, [r3, #8]
 8006a8e:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8006a92:	2b00      	cmp	r3, #0
 8006a94:	d129      	bne.n	8006aea <HAL_ADC_Start+0x17e>
 8006a96:	687b      	ldr	r3, [r7, #4]
 8006a98:	681b      	ldr	r3, [r3, #0]
 8006a9a:	689a      	ldr	r2, [r3, #8]
 8006a9c:	687b      	ldr	r3, [r7, #4]
 8006a9e:	681b      	ldr	r3, [r3, #0]
 8006aa0:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8006aa4:	609a      	str	r2, [r3, #8]
 8006aa6:	e020      	b.n	8006aea <HAL_ADC_Start+0x17e>
 8006aa8:	687b      	ldr	r3, [r7, #4]
 8006aaa:	681b      	ldr	r3, [r3, #0]
 8006aac:	4a15      	ldr	r2, [pc, #84]	; (8006b04 <HAL_ADC_Start+0x198>)
 8006aae:	4293      	cmp	r3, r2
 8006ab0:	d11b      	bne.n	8006aea <HAL_ADC_Start+0x17e>
 8006ab2:	687b      	ldr	r3, [r7, #4]
 8006ab4:	681b      	ldr	r3, [r3, #0]
 8006ab6:	689b      	ldr	r3, [r3, #8]
 8006ab8:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8006abc:	2b00      	cmp	r3, #0
 8006abe:	d114      	bne.n	8006aea <HAL_ADC_Start+0x17e>
 8006ac0:	687b      	ldr	r3, [r7, #4]
 8006ac2:	681b      	ldr	r3, [r3, #0]
 8006ac4:	689a      	ldr	r2, [r3, #8]
 8006ac6:	687b      	ldr	r3, [r7, #4]
 8006ac8:	681b      	ldr	r3, [r3, #0]
 8006aca:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8006ace:	609a      	str	r2, [r3, #8]
 8006ad0:	e00b      	b.n	8006aea <HAL_ADC_Start+0x17e>
 8006ad2:	687b      	ldr	r3, [r7, #4]
 8006ad4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006ad6:	f043 0210 	orr.w	r2, r3, #16
 8006ada:	687b      	ldr	r3, [r7, #4]
 8006adc:	641a      	str	r2, [r3, #64]	; 0x40
 8006ade:	687b      	ldr	r3, [r7, #4]
 8006ae0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006ae2:	f043 0201 	orr.w	r2, r3, #1
 8006ae6:	687b      	ldr	r3, [r7, #4]
 8006ae8:	645a      	str	r2, [r3, #68]	; 0x44
 8006aea:	2300      	movs	r3, #0
 8006aec:	4618      	mov	r0, r3
 8006aee:	3714      	adds	r7, #20
 8006af0:	46bd      	mov	sp, r7
 8006af2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006af6:	4770      	bx	lr
 8006af8:	20000094 	.word	0x20000094
 8006afc:	431bde83 	.word	0x431bde83
 8006b00:	40012300 	.word	0x40012300
 8006b04:	40012000 	.word	0x40012000
 8006b08:	40012100 	.word	0x40012100
 8006b0c:	40012200 	.word	0x40012200

08006b10 <HAL_ADC_PollForConversion>:
 8006b10:	b580      	push	{r7, lr}
 8006b12:	b084      	sub	sp, #16
 8006b14:	af00      	add	r7, sp, #0
 8006b16:	6078      	str	r0, [r7, #4]
 8006b18:	6039      	str	r1, [r7, #0]
 8006b1a:	2300      	movs	r3, #0
 8006b1c:	60fb      	str	r3, [r7, #12]
 8006b1e:	687b      	ldr	r3, [r7, #4]
 8006b20:	681b      	ldr	r3, [r3, #0]
 8006b22:	689b      	ldr	r3, [r3, #8]
 8006b24:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8006b28:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8006b2c:	d113      	bne.n	8006b56 <HAL_ADC_PollForConversion+0x46>
 8006b2e:	687b      	ldr	r3, [r7, #4]
 8006b30:	681b      	ldr	r3, [r3, #0]
 8006b32:	689b      	ldr	r3, [r3, #8]
 8006b34:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006b38:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8006b3c:	d10b      	bne.n	8006b56 <HAL_ADC_PollForConversion+0x46>
 8006b3e:	687b      	ldr	r3, [r7, #4]
 8006b40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006b42:	f043 0220 	orr.w	r2, r3, #32
 8006b46:	687b      	ldr	r3, [r7, #4]
 8006b48:	641a      	str	r2, [r3, #64]	; 0x40
 8006b4a:	687b      	ldr	r3, [r7, #4]
 8006b4c:	2200      	movs	r2, #0
 8006b4e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006b52:	2301      	movs	r3, #1
 8006b54:	e063      	b.n	8006c1e <HAL_ADC_PollForConversion+0x10e>
 8006b56:	f7ff fe95 	bl	8006884 <HAL_GetTick>
 8006b5a:	60f8      	str	r0, [r7, #12]
 8006b5c:	e021      	b.n	8006ba2 <HAL_ADC_PollForConversion+0x92>
 8006b5e:	683b      	ldr	r3, [r7, #0]
 8006b60:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006b64:	d01d      	beq.n	8006ba2 <HAL_ADC_PollForConversion+0x92>
 8006b66:	683b      	ldr	r3, [r7, #0]
 8006b68:	2b00      	cmp	r3, #0
 8006b6a:	d007      	beq.n	8006b7c <HAL_ADC_PollForConversion+0x6c>
 8006b6c:	f7ff fe8a 	bl	8006884 <HAL_GetTick>
 8006b70:	4602      	mov	r2, r0
 8006b72:	68fb      	ldr	r3, [r7, #12]
 8006b74:	1ad3      	subs	r3, r2, r3
 8006b76:	683a      	ldr	r2, [r7, #0]
 8006b78:	429a      	cmp	r2, r3
 8006b7a:	d212      	bcs.n	8006ba2 <HAL_ADC_PollForConversion+0x92>
 8006b7c:	687b      	ldr	r3, [r7, #4]
 8006b7e:	681b      	ldr	r3, [r3, #0]
 8006b80:	681b      	ldr	r3, [r3, #0]
 8006b82:	f003 0302 	and.w	r3, r3, #2
 8006b86:	2b02      	cmp	r3, #2
 8006b88:	d00b      	beq.n	8006ba2 <HAL_ADC_PollForConversion+0x92>
 8006b8a:	687b      	ldr	r3, [r7, #4]
 8006b8c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006b8e:	f043 0204 	orr.w	r2, r3, #4
 8006b92:	687b      	ldr	r3, [r7, #4]
 8006b94:	641a      	str	r2, [r3, #64]	; 0x40
 8006b96:	687b      	ldr	r3, [r7, #4]
 8006b98:	2200      	movs	r2, #0
 8006b9a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006b9e:	2303      	movs	r3, #3
 8006ba0:	e03d      	b.n	8006c1e <HAL_ADC_PollForConversion+0x10e>
 8006ba2:	687b      	ldr	r3, [r7, #4]
 8006ba4:	681b      	ldr	r3, [r3, #0]
 8006ba6:	681b      	ldr	r3, [r3, #0]
 8006ba8:	f003 0302 	and.w	r3, r3, #2
 8006bac:	2b02      	cmp	r3, #2
 8006bae:	d1d6      	bne.n	8006b5e <HAL_ADC_PollForConversion+0x4e>
 8006bb0:	687b      	ldr	r3, [r7, #4]
 8006bb2:	681b      	ldr	r3, [r3, #0]
 8006bb4:	f06f 0212 	mvn.w	r2, #18
 8006bb8:	601a      	str	r2, [r3, #0]
 8006bba:	687b      	ldr	r3, [r7, #4]
 8006bbc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006bbe:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8006bc2:	687b      	ldr	r3, [r7, #4]
 8006bc4:	641a      	str	r2, [r3, #64]	; 0x40
 8006bc6:	687b      	ldr	r3, [r7, #4]
 8006bc8:	681b      	ldr	r3, [r3, #0]
 8006bca:	689b      	ldr	r3, [r3, #8]
 8006bcc:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8006bd0:	2b00      	cmp	r3, #0
 8006bd2:	d123      	bne.n	8006c1c <HAL_ADC_PollForConversion+0x10c>
 8006bd4:	687b      	ldr	r3, [r7, #4]
 8006bd6:	7e1b      	ldrb	r3, [r3, #24]
 8006bd8:	2b00      	cmp	r3, #0
 8006bda:	d11f      	bne.n	8006c1c <HAL_ADC_PollForConversion+0x10c>
 8006bdc:	687b      	ldr	r3, [r7, #4]
 8006bde:	681b      	ldr	r3, [r3, #0]
 8006be0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006be2:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 8006be6:	2b00      	cmp	r3, #0
 8006be8:	d006      	beq.n	8006bf8 <HAL_ADC_PollForConversion+0xe8>
 8006bea:	687b      	ldr	r3, [r7, #4]
 8006bec:	681b      	ldr	r3, [r3, #0]
 8006bee:	689b      	ldr	r3, [r3, #8]
 8006bf0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8006bf4:	2b00      	cmp	r3, #0
 8006bf6:	d111      	bne.n	8006c1c <HAL_ADC_PollForConversion+0x10c>
 8006bf8:	687b      	ldr	r3, [r7, #4]
 8006bfa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006bfc:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8006c00:	687b      	ldr	r3, [r7, #4]
 8006c02:	641a      	str	r2, [r3, #64]	; 0x40
 8006c04:	687b      	ldr	r3, [r7, #4]
 8006c06:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c08:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8006c0c:	2b00      	cmp	r3, #0
 8006c0e:	d105      	bne.n	8006c1c <HAL_ADC_PollForConversion+0x10c>
 8006c10:	687b      	ldr	r3, [r7, #4]
 8006c12:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c14:	f043 0201 	orr.w	r2, r3, #1
 8006c18:	687b      	ldr	r3, [r7, #4]
 8006c1a:	641a      	str	r2, [r3, #64]	; 0x40
 8006c1c:	2300      	movs	r3, #0
 8006c1e:	4618      	mov	r0, r3
 8006c20:	3710      	adds	r7, #16
 8006c22:	46bd      	mov	sp, r7
 8006c24:	bd80      	pop	{r7, pc}

08006c26 <HAL_ADC_GetValue>:
 8006c26:	b480      	push	{r7}
 8006c28:	b083      	sub	sp, #12
 8006c2a:	af00      	add	r7, sp, #0
 8006c2c:	6078      	str	r0, [r7, #4]
 8006c2e:	687b      	ldr	r3, [r7, #4]
 8006c30:	681b      	ldr	r3, [r3, #0]
 8006c32:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006c34:	4618      	mov	r0, r3
 8006c36:	370c      	adds	r7, #12
 8006c38:	46bd      	mov	sp, r7
 8006c3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c3e:	4770      	bx	lr

08006c40 <HAL_ADC_ConfigChannel>:
 8006c40:	b480      	push	{r7}
 8006c42:	b085      	sub	sp, #20
 8006c44:	af00      	add	r7, sp, #0
 8006c46:	6078      	str	r0, [r7, #4]
 8006c48:	6039      	str	r1, [r7, #0]
 8006c4a:	2300      	movs	r3, #0
 8006c4c:	60bb      	str	r3, [r7, #8]
 8006c4e:	687b      	ldr	r3, [r7, #4]
 8006c50:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006c54:	2b01      	cmp	r3, #1
 8006c56:	d101      	bne.n	8006c5c <HAL_ADC_ConfigChannel+0x1c>
 8006c58:	2302      	movs	r3, #2
 8006c5a:	e113      	b.n	8006e84 <HAL_ADC_ConfigChannel+0x244>
 8006c5c:	687b      	ldr	r3, [r7, #4]
 8006c5e:	2201      	movs	r2, #1
 8006c60:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006c64:	683b      	ldr	r3, [r7, #0]
 8006c66:	681b      	ldr	r3, [r3, #0]
 8006c68:	2b09      	cmp	r3, #9
 8006c6a:	d925      	bls.n	8006cb8 <HAL_ADC_ConfigChannel+0x78>
 8006c6c:	687b      	ldr	r3, [r7, #4]
 8006c6e:	681b      	ldr	r3, [r3, #0]
 8006c70:	68d9      	ldr	r1, [r3, #12]
 8006c72:	683b      	ldr	r3, [r7, #0]
 8006c74:	681b      	ldr	r3, [r3, #0]
 8006c76:	b29b      	uxth	r3, r3
 8006c78:	461a      	mov	r2, r3
 8006c7a:	4613      	mov	r3, r2
 8006c7c:	005b      	lsls	r3, r3, #1
 8006c7e:	4413      	add	r3, r2
 8006c80:	3b1e      	subs	r3, #30
 8006c82:	2207      	movs	r2, #7
 8006c84:	fa02 f303 	lsl.w	r3, r2, r3
 8006c88:	43da      	mvns	r2, r3
 8006c8a:	687b      	ldr	r3, [r7, #4]
 8006c8c:	681b      	ldr	r3, [r3, #0]
 8006c8e:	400a      	ands	r2, r1
 8006c90:	60da      	str	r2, [r3, #12]
 8006c92:	687b      	ldr	r3, [r7, #4]
 8006c94:	681b      	ldr	r3, [r3, #0]
 8006c96:	68d9      	ldr	r1, [r3, #12]
 8006c98:	683b      	ldr	r3, [r7, #0]
 8006c9a:	689a      	ldr	r2, [r3, #8]
 8006c9c:	683b      	ldr	r3, [r7, #0]
 8006c9e:	681b      	ldr	r3, [r3, #0]
 8006ca0:	b29b      	uxth	r3, r3
 8006ca2:	4618      	mov	r0, r3
 8006ca4:	4603      	mov	r3, r0
 8006ca6:	005b      	lsls	r3, r3, #1
 8006ca8:	4403      	add	r3, r0
 8006caa:	3b1e      	subs	r3, #30
 8006cac:	409a      	lsls	r2, r3
 8006cae:	687b      	ldr	r3, [r7, #4]
 8006cb0:	681b      	ldr	r3, [r3, #0]
 8006cb2:	430a      	orrs	r2, r1
 8006cb4:	60da      	str	r2, [r3, #12]
 8006cb6:	e022      	b.n	8006cfe <HAL_ADC_ConfigChannel+0xbe>
 8006cb8:	687b      	ldr	r3, [r7, #4]
 8006cba:	681b      	ldr	r3, [r3, #0]
 8006cbc:	6919      	ldr	r1, [r3, #16]
 8006cbe:	683b      	ldr	r3, [r7, #0]
 8006cc0:	681b      	ldr	r3, [r3, #0]
 8006cc2:	b29b      	uxth	r3, r3
 8006cc4:	461a      	mov	r2, r3
 8006cc6:	4613      	mov	r3, r2
 8006cc8:	005b      	lsls	r3, r3, #1
 8006cca:	4413      	add	r3, r2
 8006ccc:	2207      	movs	r2, #7
 8006cce:	fa02 f303 	lsl.w	r3, r2, r3
 8006cd2:	43da      	mvns	r2, r3
 8006cd4:	687b      	ldr	r3, [r7, #4]
 8006cd6:	681b      	ldr	r3, [r3, #0]
 8006cd8:	400a      	ands	r2, r1
 8006cda:	611a      	str	r2, [r3, #16]
 8006cdc:	687b      	ldr	r3, [r7, #4]
 8006cde:	681b      	ldr	r3, [r3, #0]
 8006ce0:	6919      	ldr	r1, [r3, #16]
 8006ce2:	683b      	ldr	r3, [r7, #0]
 8006ce4:	689a      	ldr	r2, [r3, #8]
 8006ce6:	683b      	ldr	r3, [r7, #0]
 8006ce8:	681b      	ldr	r3, [r3, #0]
 8006cea:	b29b      	uxth	r3, r3
 8006cec:	4618      	mov	r0, r3
 8006cee:	4603      	mov	r3, r0
 8006cf0:	005b      	lsls	r3, r3, #1
 8006cf2:	4403      	add	r3, r0
 8006cf4:	409a      	lsls	r2, r3
 8006cf6:	687b      	ldr	r3, [r7, #4]
 8006cf8:	681b      	ldr	r3, [r3, #0]
 8006cfa:	430a      	orrs	r2, r1
 8006cfc:	611a      	str	r2, [r3, #16]
 8006cfe:	683b      	ldr	r3, [r7, #0]
 8006d00:	685b      	ldr	r3, [r3, #4]
 8006d02:	2b06      	cmp	r3, #6
 8006d04:	d824      	bhi.n	8006d50 <HAL_ADC_ConfigChannel+0x110>
 8006d06:	687b      	ldr	r3, [r7, #4]
 8006d08:	681b      	ldr	r3, [r3, #0]
 8006d0a:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8006d0c:	683b      	ldr	r3, [r7, #0]
 8006d0e:	685a      	ldr	r2, [r3, #4]
 8006d10:	4613      	mov	r3, r2
 8006d12:	009b      	lsls	r3, r3, #2
 8006d14:	4413      	add	r3, r2
 8006d16:	3b05      	subs	r3, #5
 8006d18:	221f      	movs	r2, #31
 8006d1a:	fa02 f303 	lsl.w	r3, r2, r3
 8006d1e:	43da      	mvns	r2, r3
 8006d20:	687b      	ldr	r3, [r7, #4]
 8006d22:	681b      	ldr	r3, [r3, #0]
 8006d24:	400a      	ands	r2, r1
 8006d26:	635a      	str	r2, [r3, #52]	; 0x34
 8006d28:	687b      	ldr	r3, [r7, #4]
 8006d2a:	681b      	ldr	r3, [r3, #0]
 8006d2c:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8006d2e:	683b      	ldr	r3, [r7, #0]
 8006d30:	681b      	ldr	r3, [r3, #0]
 8006d32:	b29b      	uxth	r3, r3
 8006d34:	4618      	mov	r0, r3
 8006d36:	683b      	ldr	r3, [r7, #0]
 8006d38:	685a      	ldr	r2, [r3, #4]
 8006d3a:	4613      	mov	r3, r2
 8006d3c:	009b      	lsls	r3, r3, #2
 8006d3e:	4413      	add	r3, r2
 8006d40:	3b05      	subs	r3, #5
 8006d42:	fa00 f203 	lsl.w	r2, r0, r3
 8006d46:	687b      	ldr	r3, [r7, #4]
 8006d48:	681b      	ldr	r3, [r3, #0]
 8006d4a:	430a      	orrs	r2, r1
 8006d4c:	635a      	str	r2, [r3, #52]	; 0x34
 8006d4e:	e04c      	b.n	8006dea <HAL_ADC_ConfigChannel+0x1aa>
 8006d50:	683b      	ldr	r3, [r7, #0]
 8006d52:	685b      	ldr	r3, [r3, #4]
 8006d54:	2b0c      	cmp	r3, #12
 8006d56:	d824      	bhi.n	8006da2 <HAL_ADC_ConfigChannel+0x162>
 8006d58:	687b      	ldr	r3, [r7, #4]
 8006d5a:	681b      	ldr	r3, [r3, #0]
 8006d5c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8006d5e:	683b      	ldr	r3, [r7, #0]
 8006d60:	685a      	ldr	r2, [r3, #4]
 8006d62:	4613      	mov	r3, r2
 8006d64:	009b      	lsls	r3, r3, #2
 8006d66:	4413      	add	r3, r2
 8006d68:	3b23      	subs	r3, #35	; 0x23
 8006d6a:	221f      	movs	r2, #31
 8006d6c:	fa02 f303 	lsl.w	r3, r2, r3
 8006d70:	43da      	mvns	r2, r3
 8006d72:	687b      	ldr	r3, [r7, #4]
 8006d74:	681b      	ldr	r3, [r3, #0]
 8006d76:	400a      	ands	r2, r1
 8006d78:	631a      	str	r2, [r3, #48]	; 0x30
 8006d7a:	687b      	ldr	r3, [r7, #4]
 8006d7c:	681b      	ldr	r3, [r3, #0]
 8006d7e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8006d80:	683b      	ldr	r3, [r7, #0]
 8006d82:	681b      	ldr	r3, [r3, #0]
 8006d84:	b29b      	uxth	r3, r3
 8006d86:	4618      	mov	r0, r3
 8006d88:	683b      	ldr	r3, [r7, #0]
 8006d8a:	685a      	ldr	r2, [r3, #4]
 8006d8c:	4613      	mov	r3, r2
 8006d8e:	009b      	lsls	r3, r3, #2
 8006d90:	4413      	add	r3, r2
 8006d92:	3b23      	subs	r3, #35	; 0x23
 8006d94:	fa00 f203 	lsl.w	r2, r0, r3
 8006d98:	687b      	ldr	r3, [r7, #4]
 8006d9a:	681b      	ldr	r3, [r3, #0]
 8006d9c:	430a      	orrs	r2, r1
 8006d9e:	631a      	str	r2, [r3, #48]	; 0x30
 8006da0:	e023      	b.n	8006dea <HAL_ADC_ConfigChannel+0x1aa>
 8006da2:	687b      	ldr	r3, [r7, #4]
 8006da4:	681b      	ldr	r3, [r3, #0]
 8006da6:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006da8:	683b      	ldr	r3, [r7, #0]
 8006daa:	685a      	ldr	r2, [r3, #4]
 8006dac:	4613      	mov	r3, r2
 8006dae:	009b      	lsls	r3, r3, #2
 8006db0:	4413      	add	r3, r2
 8006db2:	3b41      	subs	r3, #65	; 0x41
 8006db4:	221f      	movs	r2, #31
 8006db6:	fa02 f303 	lsl.w	r3, r2, r3
 8006dba:	43da      	mvns	r2, r3
 8006dbc:	687b      	ldr	r3, [r7, #4]
 8006dbe:	681b      	ldr	r3, [r3, #0]
 8006dc0:	400a      	ands	r2, r1
 8006dc2:	62da      	str	r2, [r3, #44]	; 0x2c
 8006dc4:	687b      	ldr	r3, [r7, #4]
 8006dc6:	681b      	ldr	r3, [r3, #0]
 8006dc8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006dca:	683b      	ldr	r3, [r7, #0]
 8006dcc:	681b      	ldr	r3, [r3, #0]
 8006dce:	b29b      	uxth	r3, r3
 8006dd0:	4618      	mov	r0, r3
 8006dd2:	683b      	ldr	r3, [r7, #0]
 8006dd4:	685a      	ldr	r2, [r3, #4]
 8006dd6:	4613      	mov	r3, r2
 8006dd8:	009b      	lsls	r3, r3, #2
 8006dda:	4413      	add	r3, r2
 8006ddc:	3b41      	subs	r3, #65	; 0x41
 8006dde:	fa00 f203 	lsl.w	r2, r0, r3
 8006de2:	687b      	ldr	r3, [r7, #4]
 8006de4:	681b      	ldr	r3, [r3, #0]
 8006de6:	430a      	orrs	r2, r1
 8006de8:	62da      	str	r2, [r3, #44]	; 0x2c
 8006dea:	4b29      	ldr	r3, [pc, #164]	; (8006e90 <HAL_ADC_ConfigChannel+0x250>)
 8006dec:	60fb      	str	r3, [r7, #12]
 8006dee:	687b      	ldr	r3, [r7, #4]
 8006df0:	681b      	ldr	r3, [r3, #0]
 8006df2:	4a28      	ldr	r2, [pc, #160]	; (8006e94 <HAL_ADC_ConfigChannel+0x254>)
 8006df4:	4293      	cmp	r3, r2
 8006df6:	d10f      	bne.n	8006e18 <HAL_ADC_ConfigChannel+0x1d8>
 8006df8:	683b      	ldr	r3, [r7, #0]
 8006dfa:	681b      	ldr	r3, [r3, #0]
 8006dfc:	2b12      	cmp	r3, #18
 8006dfe:	d10b      	bne.n	8006e18 <HAL_ADC_ConfigChannel+0x1d8>
 8006e00:	68fb      	ldr	r3, [r7, #12]
 8006e02:	685b      	ldr	r3, [r3, #4]
 8006e04:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 8006e08:	68fb      	ldr	r3, [r7, #12]
 8006e0a:	605a      	str	r2, [r3, #4]
 8006e0c:	68fb      	ldr	r3, [r7, #12]
 8006e0e:	685b      	ldr	r3, [r3, #4]
 8006e10:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8006e14:	68fb      	ldr	r3, [r7, #12]
 8006e16:	605a      	str	r2, [r3, #4]
 8006e18:	687b      	ldr	r3, [r7, #4]
 8006e1a:	681b      	ldr	r3, [r3, #0]
 8006e1c:	4a1d      	ldr	r2, [pc, #116]	; (8006e94 <HAL_ADC_ConfigChannel+0x254>)
 8006e1e:	4293      	cmp	r3, r2
 8006e20:	d12b      	bne.n	8006e7a <HAL_ADC_ConfigChannel+0x23a>
 8006e22:	683b      	ldr	r3, [r7, #0]
 8006e24:	681b      	ldr	r3, [r3, #0]
 8006e26:	4a1c      	ldr	r2, [pc, #112]	; (8006e98 <HAL_ADC_ConfigChannel+0x258>)
 8006e28:	4293      	cmp	r3, r2
 8006e2a:	d003      	beq.n	8006e34 <HAL_ADC_ConfigChannel+0x1f4>
 8006e2c:	683b      	ldr	r3, [r7, #0]
 8006e2e:	681b      	ldr	r3, [r3, #0]
 8006e30:	2b11      	cmp	r3, #17
 8006e32:	d122      	bne.n	8006e7a <HAL_ADC_ConfigChannel+0x23a>
 8006e34:	68fb      	ldr	r3, [r7, #12]
 8006e36:	685b      	ldr	r3, [r3, #4]
 8006e38:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 8006e3c:	68fb      	ldr	r3, [r7, #12]
 8006e3e:	605a      	str	r2, [r3, #4]
 8006e40:	68fb      	ldr	r3, [r7, #12]
 8006e42:	685b      	ldr	r3, [r3, #4]
 8006e44:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8006e48:	68fb      	ldr	r3, [r7, #12]
 8006e4a:	605a      	str	r2, [r3, #4]
 8006e4c:	683b      	ldr	r3, [r7, #0]
 8006e4e:	681b      	ldr	r3, [r3, #0]
 8006e50:	4a11      	ldr	r2, [pc, #68]	; (8006e98 <HAL_ADC_ConfigChannel+0x258>)
 8006e52:	4293      	cmp	r3, r2
 8006e54:	d111      	bne.n	8006e7a <HAL_ADC_ConfigChannel+0x23a>
 8006e56:	4b11      	ldr	r3, [pc, #68]	; (8006e9c <HAL_ADC_ConfigChannel+0x25c>)
 8006e58:	681b      	ldr	r3, [r3, #0]
 8006e5a:	4a11      	ldr	r2, [pc, #68]	; (8006ea0 <HAL_ADC_ConfigChannel+0x260>)
 8006e5c:	fba2 2303 	umull	r2, r3, r2, r3
 8006e60:	0c9a      	lsrs	r2, r3, #18
 8006e62:	4613      	mov	r3, r2
 8006e64:	009b      	lsls	r3, r3, #2
 8006e66:	4413      	add	r3, r2
 8006e68:	005b      	lsls	r3, r3, #1
 8006e6a:	60bb      	str	r3, [r7, #8]
 8006e6c:	e002      	b.n	8006e74 <HAL_ADC_ConfigChannel+0x234>
 8006e6e:	68bb      	ldr	r3, [r7, #8]
 8006e70:	3b01      	subs	r3, #1
 8006e72:	60bb      	str	r3, [r7, #8]
 8006e74:	68bb      	ldr	r3, [r7, #8]
 8006e76:	2b00      	cmp	r3, #0
 8006e78:	d1f9      	bne.n	8006e6e <HAL_ADC_ConfigChannel+0x22e>
 8006e7a:	687b      	ldr	r3, [r7, #4]
 8006e7c:	2200      	movs	r2, #0
 8006e7e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006e82:	2300      	movs	r3, #0
 8006e84:	4618      	mov	r0, r3
 8006e86:	3714      	adds	r7, #20
 8006e88:	46bd      	mov	sp, r7
 8006e8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e8e:	4770      	bx	lr
 8006e90:	40012300 	.word	0x40012300
 8006e94:	40012000 	.word	0x40012000
 8006e98:	10000012 	.word	0x10000012
 8006e9c:	20000094 	.word	0x20000094
 8006ea0:	431bde83 	.word	0x431bde83

08006ea4 <ADC_Init>:
 8006ea4:	b480      	push	{r7}
 8006ea6:	b085      	sub	sp, #20
 8006ea8:	af00      	add	r7, sp, #0
 8006eaa:	6078      	str	r0, [r7, #4]
 8006eac:	4b79      	ldr	r3, [pc, #484]	; (8007094 <ADC_Init+0x1f0>)
 8006eae:	60fb      	str	r3, [r7, #12]
 8006eb0:	68fb      	ldr	r3, [r7, #12]
 8006eb2:	685b      	ldr	r3, [r3, #4]
 8006eb4:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8006eb8:	68fb      	ldr	r3, [r7, #12]
 8006eba:	605a      	str	r2, [r3, #4]
 8006ebc:	68fb      	ldr	r3, [r7, #12]
 8006ebe:	685a      	ldr	r2, [r3, #4]
 8006ec0:	687b      	ldr	r3, [r7, #4]
 8006ec2:	685b      	ldr	r3, [r3, #4]
 8006ec4:	431a      	orrs	r2, r3
 8006ec6:	68fb      	ldr	r3, [r7, #12]
 8006ec8:	605a      	str	r2, [r3, #4]
 8006eca:	687b      	ldr	r3, [r7, #4]
 8006ecc:	681b      	ldr	r3, [r3, #0]
 8006ece:	685a      	ldr	r2, [r3, #4]
 8006ed0:	687b      	ldr	r3, [r7, #4]
 8006ed2:	681b      	ldr	r3, [r3, #0]
 8006ed4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006ed8:	605a      	str	r2, [r3, #4]
 8006eda:	687b      	ldr	r3, [r7, #4]
 8006edc:	681b      	ldr	r3, [r3, #0]
 8006ede:	6859      	ldr	r1, [r3, #4]
 8006ee0:	687b      	ldr	r3, [r7, #4]
 8006ee2:	691b      	ldr	r3, [r3, #16]
 8006ee4:	021a      	lsls	r2, r3, #8
 8006ee6:	687b      	ldr	r3, [r7, #4]
 8006ee8:	681b      	ldr	r3, [r3, #0]
 8006eea:	430a      	orrs	r2, r1
 8006eec:	605a      	str	r2, [r3, #4]
 8006eee:	687b      	ldr	r3, [r7, #4]
 8006ef0:	681b      	ldr	r3, [r3, #0]
 8006ef2:	685a      	ldr	r2, [r3, #4]
 8006ef4:	687b      	ldr	r3, [r7, #4]
 8006ef6:	681b      	ldr	r3, [r3, #0]
 8006ef8:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8006efc:	605a      	str	r2, [r3, #4]
 8006efe:	687b      	ldr	r3, [r7, #4]
 8006f00:	681b      	ldr	r3, [r3, #0]
 8006f02:	6859      	ldr	r1, [r3, #4]
 8006f04:	687b      	ldr	r3, [r7, #4]
 8006f06:	689a      	ldr	r2, [r3, #8]
 8006f08:	687b      	ldr	r3, [r7, #4]
 8006f0a:	681b      	ldr	r3, [r3, #0]
 8006f0c:	430a      	orrs	r2, r1
 8006f0e:	605a      	str	r2, [r3, #4]
 8006f10:	687b      	ldr	r3, [r7, #4]
 8006f12:	681b      	ldr	r3, [r3, #0]
 8006f14:	689a      	ldr	r2, [r3, #8]
 8006f16:	687b      	ldr	r3, [r7, #4]
 8006f18:	681b      	ldr	r3, [r3, #0]
 8006f1a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006f1e:	609a      	str	r2, [r3, #8]
 8006f20:	687b      	ldr	r3, [r7, #4]
 8006f22:	681b      	ldr	r3, [r3, #0]
 8006f24:	6899      	ldr	r1, [r3, #8]
 8006f26:	687b      	ldr	r3, [r7, #4]
 8006f28:	68da      	ldr	r2, [r3, #12]
 8006f2a:	687b      	ldr	r3, [r7, #4]
 8006f2c:	681b      	ldr	r3, [r3, #0]
 8006f2e:	430a      	orrs	r2, r1
 8006f30:	609a      	str	r2, [r3, #8]
 8006f32:	687b      	ldr	r3, [r7, #4]
 8006f34:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006f36:	4a58      	ldr	r2, [pc, #352]	; (8007098 <ADC_Init+0x1f4>)
 8006f38:	4293      	cmp	r3, r2
 8006f3a:	d022      	beq.n	8006f82 <ADC_Init+0xde>
 8006f3c:	687b      	ldr	r3, [r7, #4]
 8006f3e:	681b      	ldr	r3, [r3, #0]
 8006f40:	689a      	ldr	r2, [r3, #8]
 8006f42:	687b      	ldr	r3, [r7, #4]
 8006f44:	681b      	ldr	r3, [r3, #0]
 8006f46:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8006f4a:	609a      	str	r2, [r3, #8]
 8006f4c:	687b      	ldr	r3, [r7, #4]
 8006f4e:	681b      	ldr	r3, [r3, #0]
 8006f50:	6899      	ldr	r1, [r3, #8]
 8006f52:	687b      	ldr	r3, [r7, #4]
 8006f54:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8006f56:	687b      	ldr	r3, [r7, #4]
 8006f58:	681b      	ldr	r3, [r3, #0]
 8006f5a:	430a      	orrs	r2, r1
 8006f5c:	609a      	str	r2, [r3, #8]
 8006f5e:	687b      	ldr	r3, [r7, #4]
 8006f60:	681b      	ldr	r3, [r3, #0]
 8006f62:	689a      	ldr	r2, [r3, #8]
 8006f64:	687b      	ldr	r3, [r7, #4]
 8006f66:	681b      	ldr	r3, [r3, #0]
 8006f68:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8006f6c:	609a      	str	r2, [r3, #8]
 8006f6e:	687b      	ldr	r3, [r7, #4]
 8006f70:	681b      	ldr	r3, [r3, #0]
 8006f72:	6899      	ldr	r1, [r3, #8]
 8006f74:	687b      	ldr	r3, [r7, #4]
 8006f76:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006f78:	687b      	ldr	r3, [r7, #4]
 8006f7a:	681b      	ldr	r3, [r3, #0]
 8006f7c:	430a      	orrs	r2, r1
 8006f7e:	609a      	str	r2, [r3, #8]
 8006f80:	e00f      	b.n	8006fa2 <ADC_Init+0xfe>
 8006f82:	687b      	ldr	r3, [r7, #4]
 8006f84:	681b      	ldr	r3, [r3, #0]
 8006f86:	689a      	ldr	r2, [r3, #8]
 8006f88:	687b      	ldr	r3, [r7, #4]
 8006f8a:	681b      	ldr	r3, [r3, #0]
 8006f8c:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8006f90:	609a      	str	r2, [r3, #8]
 8006f92:	687b      	ldr	r3, [r7, #4]
 8006f94:	681b      	ldr	r3, [r3, #0]
 8006f96:	689a      	ldr	r2, [r3, #8]
 8006f98:	687b      	ldr	r3, [r7, #4]
 8006f9a:	681b      	ldr	r3, [r3, #0]
 8006f9c:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8006fa0:	609a      	str	r2, [r3, #8]
 8006fa2:	687b      	ldr	r3, [r7, #4]
 8006fa4:	681b      	ldr	r3, [r3, #0]
 8006fa6:	689a      	ldr	r2, [r3, #8]
 8006fa8:	687b      	ldr	r3, [r7, #4]
 8006faa:	681b      	ldr	r3, [r3, #0]
 8006fac:	f022 0202 	bic.w	r2, r2, #2
 8006fb0:	609a      	str	r2, [r3, #8]
 8006fb2:	687b      	ldr	r3, [r7, #4]
 8006fb4:	681b      	ldr	r3, [r3, #0]
 8006fb6:	6899      	ldr	r1, [r3, #8]
 8006fb8:	687b      	ldr	r3, [r7, #4]
 8006fba:	7e1b      	ldrb	r3, [r3, #24]
 8006fbc:	005a      	lsls	r2, r3, #1
 8006fbe:	687b      	ldr	r3, [r7, #4]
 8006fc0:	681b      	ldr	r3, [r3, #0]
 8006fc2:	430a      	orrs	r2, r1
 8006fc4:	609a      	str	r2, [r3, #8]
 8006fc6:	687b      	ldr	r3, [r7, #4]
 8006fc8:	f893 3020 	ldrb.w	r3, [r3, #32]
 8006fcc:	2b00      	cmp	r3, #0
 8006fce:	d01b      	beq.n	8007008 <ADC_Init+0x164>
 8006fd0:	687b      	ldr	r3, [r7, #4]
 8006fd2:	681b      	ldr	r3, [r3, #0]
 8006fd4:	685a      	ldr	r2, [r3, #4]
 8006fd6:	687b      	ldr	r3, [r7, #4]
 8006fd8:	681b      	ldr	r3, [r3, #0]
 8006fda:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006fde:	605a      	str	r2, [r3, #4]
 8006fe0:	687b      	ldr	r3, [r7, #4]
 8006fe2:	681b      	ldr	r3, [r3, #0]
 8006fe4:	685a      	ldr	r2, [r3, #4]
 8006fe6:	687b      	ldr	r3, [r7, #4]
 8006fe8:	681b      	ldr	r3, [r3, #0]
 8006fea:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8006fee:	605a      	str	r2, [r3, #4]
 8006ff0:	687b      	ldr	r3, [r7, #4]
 8006ff2:	681b      	ldr	r3, [r3, #0]
 8006ff4:	6859      	ldr	r1, [r3, #4]
 8006ff6:	687b      	ldr	r3, [r7, #4]
 8006ff8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006ffa:	3b01      	subs	r3, #1
 8006ffc:	035a      	lsls	r2, r3, #13
 8006ffe:	687b      	ldr	r3, [r7, #4]
 8007000:	681b      	ldr	r3, [r3, #0]
 8007002:	430a      	orrs	r2, r1
 8007004:	605a      	str	r2, [r3, #4]
 8007006:	e007      	b.n	8007018 <ADC_Init+0x174>
 8007008:	687b      	ldr	r3, [r7, #4]
 800700a:	681b      	ldr	r3, [r3, #0]
 800700c:	685a      	ldr	r2, [r3, #4]
 800700e:	687b      	ldr	r3, [r7, #4]
 8007010:	681b      	ldr	r3, [r3, #0]
 8007012:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007016:	605a      	str	r2, [r3, #4]
 8007018:	687b      	ldr	r3, [r7, #4]
 800701a:	681b      	ldr	r3, [r3, #0]
 800701c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800701e:	687b      	ldr	r3, [r7, #4]
 8007020:	681b      	ldr	r3, [r3, #0]
 8007022:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8007026:	62da      	str	r2, [r3, #44]	; 0x2c
 8007028:	687b      	ldr	r3, [r7, #4]
 800702a:	681b      	ldr	r3, [r3, #0]
 800702c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800702e:	687b      	ldr	r3, [r7, #4]
 8007030:	69db      	ldr	r3, [r3, #28]
 8007032:	3b01      	subs	r3, #1
 8007034:	051a      	lsls	r2, r3, #20
 8007036:	687b      	ldr	r3, [r7, #4]
 8007038:	681b      	ldr	r3, [r3, #0]
 800703a:	430a      	orrs	r2, r1
 800703c:	62da      	str	r2, [r3, #44]	; 0x2c
 800703e:	687b      	ldr	r3, [r7, #4]
 8007040:	681b      	ldr	r3, [r3, #0]
 8007042:	689a      	ldr	r2, [r3, #8]
 8007044:	687b      	ldr	r3, [r7, #4]
 8007046:	681b      	ldr	r3, [r3, #0]
 8007048:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800704c:	609a      	str	r2, [r3, #8]
 800704e:	687b      	ldr	r3, [r7, #4]
 8007050:	681b      	ldr	r3, [r3, #0]
 8007052:	6899      	ldr	r1, [r3, #8]
 8007054:	687b      	ldr	r3, [r7, #4]
 8007056:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 800705a:	025a      	lsls	r2, r3, #9
 800705c:	687b      	ldr	r3, [r7, #4]
 800705e:	681b      	ldr	r3, [r3, #0]
 8007060:	430a      	orrs	r2, r1
 8007062:	609a      	str	r2, [r3, #8]
 8007064:	687b      	ldr	r3, [r7, #4]
 8007066:	681b      	ldr	r3, [r3, #0]
 8007068:	689a      	ldr	r2, [r3, #8]
 800706a:	687b      	ldr	r3, [r7, #4]
 800706c:	681b      	ldr	r3, [r3, #0]
 800706e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007072:	609a      	str	r2, [r3, #8]
 8007074:	687b      	ldr	r3, [r7, #4]
 8007076:	681b      	ldr	r3, [r3, #0]
 8007078:	6899      	ldr	r1, [r3, #8]
 800707a:	687b      	ldr	r3, [r7, #4]
 800707c:	695b      	ldr	r3, [r3, #20]
 800707e:	029a      	lsls	r2, r3, #10
 8007080:	687b      	ldr	r3, [r7, #4]
 8007082:	681b      	ldr	r3, [r3, #0]
 8007084:	430a      	orrs	r2, r1
 8007086:	609a      	str	r2, [r3, #8]
 8007088:	bf00      	nop
 800708a:	3714      	adds	r7, #20
 800708c:	46bd      	mov	sp, r7
 800708e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007092:	4770      	bx	lr
 8007094:	40012300 	.word	0x40012300
 8007098:	0f000001 	.word	0x0f000001

0800709c <HAL_ADCEx_InjectedConfigChannel>:
 800709c:	b480      	push	{r7}
 800709e:	b085      	sub	sp, #20
 80070a0:	af00      	add	r7, sp, #0
 80070a2:	6078      	str	r0, [r7, #4]
 80070a4:	6039      	str	r1, [r7, #0]
 80070a6:	687b      	ldr	r3, [r7, #4]
 80070a8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80070ac:	2b01      	cmp	r3, #1
 80070ae:	d101      	bne.n	80070b4 <HAL_ADCEx_InjectedConfigChannel+0x18>
 80070b0:	2302      	movs	r3, #2
 80070b2:	e17e      	b.n	80073b2 <HAL_ADCEx_InjectedConfigChannel+0x316>
 80070b4:	687b      	ldr	r3, [r7, #4]
 80070b6:	2201      	movs	r2, #1
 80070b8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80070bc:	683b      	ldr	r3, [r7, #0]
 80070be:	681b      	ldr	r3, [r3, #0]
 80070c0:	2b09      	cmp	r3, #9
 80070c2:	d925      	bls.n	8007110 <HAL_ADCEx_InjectedConfigChannel+0x74>
 80070c4:	687b      	ldr	r3, [r7, #4]
 80070c6:	681b      	ldr	r3, [r3, #0]
 80070c8:	68d9      	ldr	r1, [r3, #12]
 80070ca:	683b      	ldr	r3, [r7, #0]
 80070cc:	681b      	ldr	r3, [r3, #0]
 80070ce:	b29b      	uxth	r3, r3
 80070d0:	461a      	mov	r2, r3
 80070d2:	4613      	mov	r3, r2
 80070d4:	005b      	lsls	r3, r3, #1
 80070d6:	4413      	add	r3, r2
 80070d8:	3b1e      	subs	r3, #30
 80070da:	2207      	movs	r2, #7
 80070dc:	fa02 f303 	lsl.w	r3, r2, r3
 80070e0:	43da      	mvns	r2, r3
 80070e2:	687b      	ldr	r3, [r7, #4]
 80070e4:	681b      	ldr	r3, [r3, #0]
 80070e6:	400a      	ands	r2, r1
 80070e8:	60da      	str	r2, [r3, #12]
 80070ea:	687b      	ldr	r3, [r7, #4]
 80070ec:	681b      	ldr	r3, [r3, #0]
 80070ee:	68d9      	ldr	r1, [r3, #12]
 80070f0:	683b      	ldr	r3, [r7, #0]
 80070f2:	689a      	ldr	r2, [r3, #8]
 80070f4:	683b      	ldr	r3, [r7, #0]
 80070f6:	681b      	ldr	r3, [r3, #0]
 80070f8:	b29b      	uxth	r3, r3
 80070fa:	4618      	mov	r0, r3
 80070fc:	4603      	mov	r3, r0
 80070fe:	005b      	lsls	r3, r3, #1
 8007100:	4403      	add	r3, r0
 8007102:	3b1e      	subs	r3, #30
 8007104:	409a      	lsls	r2, r3
 8007106:	687b      	ldr	r3, [r7, #4]
 8007108:	681b      	ldr	r3, [r3, #0]
 800710a:	430a      	orrs	r2, r1
 800710c:	60da      	str	r2, [r3, #12]
 800710e:	e022      	b.n	8007156 <HAL_ADCEx_InjectedConfigChannel+0xba>
 8007110:	687b      	ldr	r3, [r7, #4]
 8007112:	681b      	ldr	r3, [r3, #0]
 8007114:	6919      	ldr	r1, [r3, #16]
 8007116:	683b      	ldr	r3, [r7, #0]
 8007118:	681b      	ldr	r3, [r3, #0]
 800711a:	b29b      	uxth	r3, r3
 800711c:	461a      	mov	r2, r3
 800711e:	4613      	mov	r3, r2
 8007120:	005b      	lsls	r3, r3, #1
 8007122:	4413      	add	r3, r2
 8007124:	2207      	movs	r2, #7
 8007126:	fa02 f303 	lsl.w	r3, r2, r3
 800712a:	43da      	mvns	r2, r3
 800712c:	687b      	ldr	r3, [r7, #4]
 800712e:	681b      	ldr	r3, [r3, #0]
 8007130:	400a      	ands	r2, r1
 8007132:	611a      	str	r2, [r3, #16]
 8007134:	687b      	ldr	r3, [r7, #4]
 8007136:	681b      	ldr	r3, [r3, #0]
 8007138:	6919      	ldr	r1, [r3, #16]
 800713a:	683b      	ldr	r3, [r7, #0]
 800713c:	689a      	ldr	r2, [r3, #8]
 800713e:	683b      	ldr	r3, [r7, #0]
 8007140:	681b      	ldr	r3, [r3, #0]
 8007142:	b29b      	uxth	r3, r3
 8007144:	4618      	mov	r0, r3
 8007146:	4603      	mov	r3, r0
 8007148:	005b      	lsls	r3, r3, #1
 800714a:	4403      	add	r3, r0
 800714c:	409a      	lsls	r2, r3
 800714e:	687b      	ldr	r3, [r7, #4]
 8007150:	681b      	ldr	r3, [r3, #0]
 8007152:	430a      	orrs	r2, r1
 8007154:	611a      	str	r2, [r3, #16]
 8007156:	687b      	ldr	r3, [r7, #4]
 8007158:	681b      	ldr	r3, [r3, #0]
 800715a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800715c:	687b      	ldr	r3, [r7, #4]
 800715e:	681b      	ldr	r3, [r3, #0]
 8007160:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8007164:	639a      	str	r2, [r3, #56]	; 0x38
 8007166:	687b      	ldr	r3, [r7, #4]
 8007168:	681b      	ldr	r3, [r3, #0]
 800716a:	6b99      	ldr	r1, [r3, #56]	; 0x38
 800716c:	683b      	ldr	r3, [r7, #0]
 800716e:	691b      	ldr	r3, [r3, #16]
 8007170:	3b01      	subs	r3, #1
 8007172:	051a      	lsls	r2, r3, #20
 8007174:	687b      	ldr	r3, [r7, #4]
 8007176:	681b      	ldr	r3, [r3, #0]
 8007178:	430a      	orrs	r2, r1
 800717a:	639a      	str	r2, [r3, #56]	; 0x38
 800717c:	687b      	ldr	r3, [r7, #4]
 800717e:	681b      	ldr	r3, [r3, #0]
 8007180:	6b99      	ldr	r1, [r3, #56]	; 0x38
 8007182:	683b      	ldr	r3, [r7, #0]
 8007184:	685b      	ldr	r3, [r3, #4]
 8007186:	b2da      	uxtb	r2, r3
 8007188:	683b      	ldr	r3, [r7, #0]
 800718a:	691b      	ldr	r3, [r3, #16]
 800718c:	b2db      	uxtb	r3, r3
 800718e:	1ad3      	subs	r3, r2, r3
 8007190:	b2db      	uxtb	r3, r3
 8007192:	3303      	adds	r3, #3
 8007194:	b2db      	uxtb	r3, r3
 8007196:	461a      	mov	r2, r3
 8007198:	4613      	mov	r3, r2
 800719a:	009b      	lsls	r3, r3, #2
 800719c:	4413      	add	r3, r2
 800719e:	221f      	movs	r2, #31
 80071a0:	fa02 f303 	lsl.w	r3, r2, r3
 80071a4:	43da      	mvns	r2, r3
 80071a6:	687b      	ldr	r3, [r7, #4]
 80071a8:	681b      	ldr	r3, [r3, #0]
 80071aa:	400a      	ands	r2, r1
 80071ac:	639a      	str	r2, [r3, #56]	; 0x38
 80071ae:	687b      	ldr	r3, [r7, #4]
 80071b0:	681b      	ldr	r3, [r3, #0]
 80071b2:	6b99      	ldr	r1, [r3, #56]	; 0x38
 80071b4:	683b      	ldr	r3, [r7, #0]
 80071b6:	681b      	ldr	r3, [r3, #0]
 80071b8:	b29b      	uxth	r3, r3
 80071ba:	4618      	mov	r0, r3
 80071bc:	683b      	ldr	r3, [r7, #0]
 80071be:	685b      	ldr	r3, [r3, #4]
 80071c0:	b2da      	uxtb	r2, r3
 80071c2:	683b      	ldr	r3, [r7, #0]
 80071c4:	691b      	ldr	r3, [r3, #16]
 80071c6:	b2db      	uxtb	r3, r3
 80071c8:	1ad3      	subs	r3, r2, r3
 80071ca:	b2db      	uxtb	r3, r3
 80071cc:	3303      	adds	r3, #3
 80071ce:	b2db      	uxtb	r3, r3
 80071d0:	461a      	mov	r2, r3
 80071d2:	4613      	mov	r3, r2
 80071d4:	009b      	lsls	r3, r3, #2
 80071d6:	4413      	add	r3, r2
 80071d8:	fa00 f203 	lsl.w	r2, r0, r3
 80071dc:	687b      	ldr	r3, [r7, #4]
 80071de:	681b      	ldr	r3, [r3, #0]
 80071e0:	430a      	orrs	r2, r1
 80071e2:	639a      	str	r2, [r3, #56]	; 0x38
 80071e4:	683b      	ldr	r3, [r7, #0]
 80071e6:	699b      	ldr	r3, [r3, #24]
 80071e8:	4a75      	ldr	r2, [pc, #468]	; (80073c0 <HAL_ADCEx_InjectedConfigChannel+0x324>)
 80071ea:	4293      	cmp	r3, r2
 80071ec:	d022      	beq.n	8007234 <HAL_ADCEx_InjectedConfigChannel+0x198>
 80071ee:	687b      	ldr	r3, [r7, #4]
 80071f0:	681b      	ldr	r3, [r3, #0]
 80071f2:	689a      	ldr	r2, [r3, #8]
 80071f4:	687b      	ldr	r3, [r7, #4]
 80071f6:	681b      	ldr	r3, [r3, #0]
 80071f8:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 80071fc:	609a      	str	r2, [r3, #8]
 80071fe:	687b      	ldr	r3, [r7, #4]
 8007200:	681b      	ldr	r3, [r3, #0]
 8007202:	6899      	ldr	r1, [r3, #8]
 8007204:	683b      	ldr	r3, [r7, #0]
 8007206:	699a      	ldr	r2, [r3, #24]
 8007208:	687b      	ldr	r3, [r7, #4]
 800720a:	681b      	ldr	r3, [r3, #0]
 800720c:	430a      	orrs	r2, r1
 800720e:	609a      	str	r2, [r3, #8]
 8007210:	687b      	ldr	r3, [r7, #4]
 8007212:	681b      	ldr	r3, [r3, #0]
 8007214:	689a      	ldr	r2, [r3, #8]
 8007216:	687b      	ldr	r3, [r7, #4]
 8007218:	681b      	ldr	r3, [r3, #0]
 800721a:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 800721e:	609a      	str	r2, [r3, #8]
 8007220:	687b      	ldr	r3, [r7, #4]
 8007222:	681b      	ldr	r3, [r3, #0]
 8007224:	6899      	ldr	r1, [r3, #8]
 8007226:	683b      	ldr	r3, [r7, #0]
 8007228:	69da      	ldr	r2, [r3, #28]
 800722a:	687b      	ldr	r3, [r7, #4]
 800722c:	681b      	ldr	r3, [r3, #0]
 800722e:	430a      	orrs	r2, r1
 8007230:	609a      	str	r2, [r3, #8]
 8007232:	e00f      	b.n	8007254 <HAL_ADCEx_InjectedConfigChannel+0x1b8>
 8007234:	687b      	ldr	r3, [r7, #4]
 8007236:	681b      	ldr	r3, [r3, #0]
 8007238:	689a      	ldr	r2, [r3, #8]
 800723a:	687b      	ldr	r3, [r7, #4]
 800723c:	681b      	ldr	r3, [r3, #0]
 800723e:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8007242:	609a      	str	r2, [r3, #8]
 8007244:	687b      	ldr	r3, [r7, #4]
 8007246:	681b      	ldr	r3, [r3, #0]
 8007248:	689a      	ldr	r2, [r3, #8]
 800724a:	687b      	ldr	r3, [r7, #4]
 800724c:	681b      	ldr	r3, [r3, #0]
 800724e:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8007252:	609a      	str	r2, [r3, #8]
 8007254:	683b      	ldr	r3, [r7, #0]
 8007256:	7d5b      	ldrb	r3, [r3, #21]
 8007258:	2b00      	cmp	r3, #0
 800725a:	d008      	beq.n	800726e <HAL_ADCEx_InjectedConfigChannel+0x1d2>
 800725c:	687b      	ldr	r3, [r7, #4]
 800725e:	681b      	ldr	r3, [r3, #0]
 8007260:	685a      	ldr	r2, [r3, #4]
 8007262:	687b      	ldr	r3, [r7, #4]
 8007264:	681b      	ldr	r3, [r3, #0]
 8007266:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800726a:	605a      	str	r2, [r3, #4]
 800726c:	e007      	b.n	800727e <HAL_ADCEx_InjectedConfigChannel+0x1e2>
 800726e:	687b      	ldr	r3, [r7, #4]
 8007270:	681b      	ldr	r3, [r3, #0]
 8007272:	685a      	ldr	r2, [r3, #4]
 8007274:	687b      	ldr	r3, [r7, #4]
 8007276:	681b      	ldr	r3, [r3, #0]
 8007278:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800727c:	605a      	str	r2, [r3, #4]
 800727e:	683b      	ldr	r3, [r7, #0]
 8007280:	7d1b      	ldrb	r3, [r3, #20]
 8007282:	2b00      	cmp	r3, #0
 8007284:	d008      	beq.n	8007298 <HAL_ADCEx_InjectedConfigChannel+0x1fc>
 8007286:	687b      	ldr	r3, [r7, #4]
 8007288:	681b      	ldr	r3, [r3, #0]
 800728a:	685a      	ldr	r2, [r3, #4]
 800728c:	687b      	ldr	r3, [r7, #4]
 800728e:	681b      	ldr	r3, [r3, #0]
 8007290:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8007294:	605a      	str	r2, [r3, #4]
 8007296:	e007      	b.n	80072a8 <HAL_ADCEx_InjectedConfigChannel+0x20c>
 8007298:	687b      	ldr	r3, [r7, #4]
 800729a:	681b      	ldr	r3, [r3, #0]
 800729c:	685a      	ldr	r2, [r3, #4]
 800729e:	687b      	ldr	r3, [r7, #4]
 80072a0:	681b      	ldr	r3, [r3, #0]
 80072a2:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80072a6:	605a      	str	r2, [r3, #4]
 80072a8:	683b      	ldr	r3, [r7, #0]
 80072aa:	685b      	ldr	r3, [r3, #4]
 80072ac:	2b03      	cmp	r3, #3
 80072ae:	d02e      	beq.n	800730e <HAL_ADCEx_InjectedConfigChannel+0x272>
 80072b0:	2b03      	cmp	r3, #3
 80072b2:	d840      	bhi.n	8007336 <HAL_ADCEx_InjectedConfigChannel+0x29a>
 80072b4:	2b01      	cmp	r3, #1
 80072b6:	d002      	beq.n	80072be <HAL_ADCEx_InjectedConfigChannel+0x222>
 80072b8:	2b02      	cmp	r3, #2
 80072ba:	d014      	beq.n	80072e6 <HAL_ADCEx_InjectedConfigChannel+0x24a>
 80072bc:	e03b      	b.n	8007336 <HAL_ADCEx_InjectedConfigChannel+0x29a>
 80072be:	687b      	ldr	r3, [r7, #4]
 80072c0:	681b      	ldr	r3, [r3, #0]
 80072c2:	695b      	ldr	r3, [r3, #20]
 80072c4:	687a      	ldr	r2, [r7, #4]
 80072c6:	6812      	ldr	r2, [r2, #0]
 80072c8:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 80072cc:	f023 030f 	bic.w	r3, r3, #15
 80072d0:	6153      	str	r3, [r2, #20]
 80072d2:	687b      	ldr	r3, [r7, #4]
 80072d4:	681b      	ldr	r3, [r3, #0]
 80072d6:	6959      	ldr	r1, [r3, #20]
 80072d8:	683b      	ldr	r3, [r7, #0]
 80072da:	68da      	ldr	r2, [r3, #12]
 80072dc:	687b      	ldr	r3, [r7, #4]
 80072de:	681b      	ldr	r3, [r3, #0]
 80072e0:	430a      	orrs	r2, r1
 80072e2:	615a      	str	r2, [r3, #20]
 80072e4:	e03b      	b.n	800735e <HAL_ADCEx_InjectedConfigChannel+0x2c2>
 80072e6:	687b      	ldr	r3, [r7, #4]
 80072e8:	681b      	ldr	r3, [r3, #0]
 80072ea:	699b      	ldr	r3, [r3, #24]
 80072ec:	687a      	ldr	r2, [r7, #4]
 80072ee:	6812      	ldr	r2, [r2, #0]
 80072f0:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 80072f4:	f023 030f 	bic.w	r3, r3, #15
 80072f8:	6193      	str	r3, [r2, #24]
 80072fa:	687b      	ldr	r3, [r7, #4]
 80072fc:	681b      	ldr	r3, [r3, #0]
 80072fe:	6999      	ldr	r1, [r3, #24]
 8007300:	683b      	ldr	r3, [r7, #0]
 8007302:	68da      	ldr	r2, [r3, #12]
 8007304:	687b      	ldr	r3, [r7, #4]
 8007306:	681b      	ldr	r3, [r3, #0]
 8007308:	430a      	orrs	r2, r1
 800730a:	619a      	str	r2, [r3, #24]
 800730c:	e027      	b.n	800735e <HAL_ADCEx_InjectedConfigChannel+0x2c2>
 800730e:	687b      	ldr	r3, [r7, #4]
 8007310:	681b      	ldr	r3, [r3, #0]
 8007312:	69db      	ldr	r3, [r3, #28]
 8007314:	687a      	ldr	r2, [r7, #4]
 8007316:	6812      	ldr	r2, [r2, #0]
 8007318:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 800731c:	f023 030f 	bic.w	r3, r3, #15
 8007320:	61d3      	str	r3, [r2, #28]
 8007322:	687b      	ldr	r3, [r7, #4]
 8007324:	681b      	ldr	r3, [r3, #0]
 8007326:	69d9      	ldr	r1, [r3, #28]
 8007328:	683b      	ldr	r3, [r7, #0]
 800732a:	68da      	ldr	r2, [r3, #12]
 800732c:	687b      	ldr	r3, [r7, #4]
 800732e:	681b      	ldr	r3, [r3, #0]
 8007330:	430a      	orrs	r2, r1
 8007332:	61da      	str	r2, [r3, #28]
 8007334:	e013      	b.n	800735e <HAL_ADCEx_InjectedConfigChannel+0x2c2>
 8007336:	687b      	ldr	r3, [r7, #4]
 8007338:	681b      	ldr	r3, [r3, #0]
 800733a:	6a1b      	ldr	r3, [r3, #32]
 800733c:	687a      	ldr	r2, [r7, #4]
 800733e:	6812      	ldr	r2, [r2, #0]
 8007340:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8007344:	f023 030f 	bic.w	r3, r3, #15
 8007348:	6213      	str	r3, [r2, #32]
 800734a:	687b      	ldr	r3, [r7, #4]
 800734c:	681b      	ldr	r3, [r3, #0]
 800734e:	6a19      	ldr	r1, [r3, #32]
 8007350:	683b      	ldr	r3, [r7, #0]
 8007352:	68da      	ldr	r2, [r3, #12]
 8007354:	687b      	ldr	r3, [r7, #4]
 8007356:	681b      	ldr	r3, [r3, #0]
 8007358:	430a      	orrs	r2, r1
 800735a:	621a      	str	r2, [r3, #32]
 800735c:	bf00      	nop
 800735e:	4b19      	ldr	r3, [pc, #100]	; (80073c4 <HAL_ADCEx_InjectedConfigChannel+0x328>)
 8007360:	60fb      	str	r3, [r7, #12]
 8007362:	687b      	ldr	r3, [r7, #4]
 8007364:	681b      	ldr	r3, [r3, #0]
 8007366:	4a18      	ldr	r2, [pc, #96]	; (80073c8 <HAL_ADCEx_InjectedConfigChannel+0x32c>)
 8007368:	4293      	cmp	r3, r2
 800736a:	d109      	bne.n	8007380 <HAL_ADCEx_InjectedConfigChannel+0x2e4>
 800736c:	683b      	ldr	r3, [r7, #0]
 800736e:	681b      	ldr	r3, [r3, #0]
 8007370:	2b12      	cmp	r3, #18
 8007372:	d105      	bne.n	8007380 <HAL_ADCEx_InjectedConfigChannel+0x2e4>
 8007374:	68fb      	ldr	r3, [r7, #12]
 8007376:	685b      	ldr	r3, [r3, #4]
 8007378:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 800737c:	68fb      	ldr	r3, [r7, #12]
 800737e:	605a      	str	r2, [r3, #4]
 8007380:	687b      	ldr	r3, [r7, #4]
 8007382:	681b      	ldr	r3, [r3, #0]
 8007384:	4a10      	ldr	r2, [pc, #64]	; (80073c8 <HAL_ADCEx_InjectedConfigChannel+0x32c>)
 8007386:	4293      	cmp	r3, r2
 8007388:	d10e      	bne.n	80073a8 <HAL_ADCEx_InjectedConfigChannel+0x30c>
 800738a:	683b      	ldr	r3, [r7, #0]
 800738c:	681b      	ldr	r3, [r3, #0]
 800738e:	4a0f      	ldr	r2, [pc, #60]	; (80073cc <HAL_ADCEx_InjectedConfigChannel+0x330>)
 8007390:	4293      	cmp	r3, r2
 8007392:	d003      	beq.n	800739c <HAL_ADCEx_InjectedConfigChannel+0x300>
 8007394:	683b      	ldr	r3, [r7, #0]
 8007396:	681b      	ldr	r3, [r3, #0]
 8007398:	2b11      	cmp	r3, #17
 800739a:	d105      	bne.n	80073a8 <HAL_ADCEx_InjectedConfigChannel+0x30c>
 800739c:	68fb      	ldr	r3, [r7, #12]
 800739e:	685b      	ldr	r3, [r3, #4]
 80073a0:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 80073a4:	68fb      	ldr	r3, [r7, #12]
 80073a6:	605a      	str	r2, [r3, #4]
 80073a8:	687b      	ldr	r3, [r7, #4]
 80073aa:	2200      	movs	r2, #0
 80073ac:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80073b0:	2300      	movs	r3, #0
 80073b2:	4618      	mov	r0, r3
 80073b4:	3714      	adds	r7, #20
 80073b6:	46bd      	mov	sp, r7
 80073b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073bc:	4770      	bx	lr
 80073be:	bf00      	nop
 80073c0:	000f0001 	.word	0x000f0001
 80073c4:	40012300 	.word	0x40012300
 80073c8:	40012000 	.word	0x40012000
 80073cc:	10000012 	.word	0x10000012

080073d0 <__NVIC_SetPriorityGrouping>:
 80073d0:	b480      	push	{r7}
 80073d2:	b085      	sub	sp, #20
 80073d4:	af00      	add	r7, sp, #0
 80073d6:	6078      	str	r0, [r7, #4]
 80073d8:	687b      	ldr	r3, [r7, #4]
 80073da:	f003 0307 	and.w	r3, r3, #7
 80073de:	60fb      	str	r3, [r7, #12]
 80073e0:	4b0c      	ldr	r3, [pc, #48]	; (8007414 <__NVIC_SetPriorityGrouping+0x44>)
 80073e2:	68db      	ldr	r3, [r3, #12]
 80073e4:	60bb      	str	r3, [r7, #8]
 80073e6:	68ba      	ldr	r2, [r7, #8]
 80073e8:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80073ec:	4013      	ands	r3, r2
 80073ee:	60bb      	str	r3, [r7, #8]
 80073f0:	68fb      	ldr	r3, [r7, #12]
 80073f2:	021a      	lsls	r2, r3, #8
 80073f4:	68bb      	ldr	r3, [r7, #8]
 80073f6:	4313      	orrs	r3, r2
 80073f8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80073fc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007400:	60bb      	str	r3, [r7, #8]
 8007402:	4a04      	ldr	r2, [pc, #16]	; (8007414 <__NVIC_SetPriorityGrouping+0x44>)
 8007404:	68bb      	ldr	r3, [r7, #8]
 8007406:	60d3      	str	r3, [r2, #12]
 8007408:	bf00      	nop
 800740a:	3714      	adds	r7, #20
 800740c:	46bd      	mov	sp, r7
 800740e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007412:	4770      	bx	lr
 8007414:	e000ed00 	.word	0xe000ed00

08007418 <__NVIC_GetPriorityGrouping>:
 8007418:	b480      	push	{r7}
 800741a:	af00      	add	r7, sp, #0
 800741c:	4b04      	ldr	r3, [pc, #16]	; (8007430 <__NVIC_GetPriorityGrouping+0x18>)
 800741e:	68db      	ldr	r3, [r3, #12]
 8007420:	0a1b      	lsrs	r3, r3, #8
 8007422:	f003 0307 	and.w	r3, r3, #7
 8007426:	4618      	mov	r0, r3
 8007428:	46bd      	mov	sp, r7
 800742a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800742e:	4770      	bx	lr
 8007430:	e000ed00 	.word	0xe000ed00

08007434 <__NVIC_EnableIRQ>:
 8007434:	b480      	push	{r7}
 8007436:	b083      	sub	sp, #12
 8007438:	af00      	add	r7, sp, #0
 800743a:	4603      	mov	r3, r0
 800743c:	71fb      	strb	r3, [r7, #7]
 800743e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007442:	2b00      	cmp	r3, #0
 8007444:	db0b      	blt.n	800745e <__NVIC_EnableIRQ+0x2a>
 8007446:	79fb      	ldrb	r3, [r7, #7]
 8007448:	f003 021f 	and.w	r2, r3, #31
 800744c:	4907      	ldr	r1, [pc, #28]	; (800746c <__NVIC_EnableIRQ+0x38>)
 800744e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007452:	095b      	lsrs	r3, r3, #5
 8007454:	2001      	movs	r0, #1
 8007456:	fa00 f202 	lsl.w	r2, r0, r2
 800745a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800745e:	bf00      	nop
 8007460:	370c      	adds	r7, #12
 8007462:	46bd      	mov	sp, r7
 8007464:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007468:	4770      	bx	lr
 800746a:	bf00      	nop
 800746c:	e000e100 	.word	0xe000e100

08007470 <__NVIC_DisableIRQ>:
 8007470:	b480      	push	{r7}
 8007472:	b083      	sub	sp, #12
 8007474:	af00      	add	r7, sp, #0
 8007476:	4603      	mov	r3, r0
 8007478:	71fb      	strb	r3, [r7, #7]
 800747a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800747e:	2b00      	cmp	r3, #0
 8007480:	db12      	blt.n	80074a8 <__NVIC_DisableIRQ+0x38>
 8007482:	79fb      	ldrb	r3, [r7, #7]
 8007484:	f003 021f 	and.w	r2, r3, #31
 8007488:	490a      	ldr	r1, [pc, #40]	; (80074b4 <__NVIC_DisableIRQ+0x44>)
 800748a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800748e:	095b      	lsrs	r3, r3, #5
 8007490:	2001      	movs	r0, #1
 8007492:	fa00 f202 	lsl.w	r2, r0, r2
 8007496:	3320      	adds	r3, #32
 8007498:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800749c:	f3bf 8f4f 	dsb	sy
 80074a0:	bf00      	nop
 80074a2:	f3bf 8f6f 	isb	sy
 80074a6:	bf00      	nop
 80074a8:	bf00      	nop
 80074aa:	370c      	adds	r7, #12
 80074ac:	46bd      	mov	sp, r7
 80074ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074b2:	4770      	bx	lr
 80074b4:	e000e100 	.word	0xe000e100

080074b8 <__NVIC_SetPriority>:
 80074b8:	b480      	push	{r7}
 80074ba:	b083      	sub	sp, #12
 80074bc:	af00      	add	r7, sp, #0
 80074be:	4603      	mov	r3, r0
 80074c0:	6039      	str	r1, [r7, #0]
 80074c2:	71fb      	strb	r3, [r7, #7]
 80074c4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80074c8:	2b00      	cmp	r3, #0
 80074ca:	db0a      	blt.n	80074e2 <__NVIC_SetPriority+0x2a>
 80074cc:	683b      	ldr	r3, [r7, #0]
 80074ce:	b2da      	uxtb	r2, r3
 80074d0:	490c      	ldr	r1, [pc, #48]	; (8007504 <__NVIC_SetPriority+0x4c>)
 80074d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80074d6:	0112      	lsls	r2, r2, #4
 80074d8:	b2d2      	uxtb	r2, r2
 80074da:	440b      	add	r3, r1
 80074dc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80074e0:	e00a      	b.n	80074f8 <__NVIC_SetPriority+0x40>
 80074e2:	683b      	ldr	r3, [r7, #0]
 80074e4:	b2da      	uxtb	r2, r3
 80074e6:	4908      	ldr	r1, [pc, #32]	; (8007508 <__NVIC_SetPriority+0x50>)
 80074e8:	79fb      	ldrb	r3, [r7, #7]
 80074ea:	f003 030f 	and.w	r3, r3, #15
 80074ee:	3b04      	subs	r3, #4
 80074f0:	0112      	lsls	r2, r2, #4
 80074f2:	b2d2      	uxtb	r2, r2
 80074f4:	440b      	add	r3, r1
 80074f6:	761a      	strb	r2, [r3, #24]
 80074f8:	bf00      	nop
 80074fa:	370c      	adds	r7, #12
 80074fc:	46bd      	mov	sp, r7
 80074fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007502:	4770      	bx	lr
 8007504:	e000e100 	.word	0xe000e100
 8007508:	e000ed00 	.word	0xe000ed00

0800750c <NVIC_EncodePriority>:
 800750c:	b480      	push	{r7}
 800750e:	b089      	sub	sp, #36	; 0x24
 8007510:	af00      	add	r7, sp, #0
 8007512:	60f8      	str	r0, [r7, #12]
 8007514:	60b9      	str	r1, [r7, #8]
 8007516:	607a      	str	r2, [r7, #4]
 8007518:	68fb      	ldr	r3, [r7, #12]
 800751a:	f003 0307 	and.w	r3, r3, #7
 800751e:	61fb      	str	r3, [r7, #28]
 8007520:	69fb      	ldr	r3, [r7, #28]
 8007522:	f1c3 0307 	rsb	r3, r3, #7
 8007526:	2b04      	cmp	r3, #4
 8007528:	bf28      	it	cs
 800752a:	2304      	movcs	r3, #4
 800752c:	61bb      	str	r3, [r7, #24]
 800752e:	69fb      	ldr	r3, [r7, #28]
 8007530:	3304      	adds	r3, #4
 8007532:	2b06      	cmp	r3, #6
 8007534:	d902      	bls.n	800753c <NVIC_EncodePriority+0x30>
 8007536:	69fb      	ldr	r3, [r7, #28]
 8007538:	3b03      	subs	r3, #3
 800753a:	e000      	b.n	800753e <NVIC_EncodePriority+0x32>
 800753c:	2300      	movs	r3, #0
 800753e:	617b      	str	r3, [r7, #20]
 8007540:	f04f 32ff 	mov.w	r2, #4294967295
 8007544:	69bb      	ldr	r3, [r7, #24]
 8007546:	fa02 f303 	lsl.w	r3, r2, r3
 800754a:	43da      	mvns	r2, r3
 800754c:	68bb      	ldr	r3, [r7, #8]
 800754e:	401a      	ands	r2, r3
 8007550:	697b      	ldr	r3, [r7, #20]
 8007552:	409a      	lsls	r2, r3
 8007554:	f04f 31ff 	mov.w	r1, #4294967295
 8007558:	697b      	ldr	r3, [r7, #20]
 800755a:	fa01 f303 	lsl.w	r3, r1, r3
 800755e:	43d9      	mvns	r1, r3
 8007560:	687b      	ldr	r3, [r7, #4]
 8007562:	400b      	ands	r3, r1
 8007564:	4313      	orrs	r3, r2
 8007566:	4618      	mov	r0, r3
 8007568:	3724      	adds	r7, #36	; 0x24
 800756a:	46bd      	mov	sp, r7
 800756c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007570:	4770      	bx	lr
	...

08007574 <SysTick_Config>:
 8007574:	b580      	push	{r7, lr}
 8007576:	b082      	sub	sp, #8
 8007578:	af00      	add	r7, sp, #0
 800757a:	6078      	str	r0, [r7, #4]
 800757c:	687b      	ldr	r3, [r7, #4]
 800757e:	3b01      	subs	r3, #1
 8007580:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8007584:	d301      	bcc.n	800758a <SysTick_Config+0x16>
 8007586:	2301      	movs	r3, #1
 8007588:	e00f      	b.n	80075aa <SysTick_Config+0x36>
 800758a:	4a0a      	ldr	r2, [pc, #40]	; (80075b4 <SysTick_Config+0x40>)
 800758c:	687b      	ldr	r3, [r7, #4]
 800758e:	3b01      	subs	r3, #1
 8007590:	6053      	str	r3, [r2, #4]
 8007592:	210f      	movs	r1, #15
 8007594:	f04f 30ff 	mov.w	r0, #4294967295
 8007598:	f7ff ff8e 	bl	80074b8 <__NVIC_SetPriority>
 800759c:	4b05      	ldr	r3, [pc, #20]	; (80075b4 <SysTick_Config+0x40>)
 800759e:	2200      	movs	r2, #0
 80075a0:	609a      	str	r2, [r3, #8]
 80075a2:	4b04      	ldr	r3, [pc, #16]	; (80075b4 <SysTick_Config+0x40>)
 80075a4:	2207      	movs	r2, #7
 80075a6:	601a      	str	r2, [r3, #0]
 80075a8:	2300      	movs	r3, #0
 80075aa:	4618      	mov	r0, r3
 80075ac:	3708      	adds	r7, #8
 80075ae:	46bd      	mov	sp, r7
 80075b0:	bd80      	pop	{r7, pc}
 80075b2:	bf00      	nop
 80075b4:	e000e010 	.word	0xe000e010

080075b8 <HAL_NVIC_SetPriorityGrouping>:
 80075b8:	b580      	push	{r7, lr}
 80075ba:	b082      	sub	sp, #8
 80075bc:	af00      	add	r7, sp, #0
 80075be:	6078      	str	r0, [r7, #4]
 80075c0:	6878      	ldr	r0, [r7, #4]
 80075c2:	f7ff ff05 	bl	80073d0 <__NVIC_SetPriorityGrouping>
 80075c6:	bf00      	nop
 80075c8:	3708      	adds	r7, #8
 80075ca:	46bd      	mov	sp, r7
 80075cc:	bd80      	pop	{r7, pc}

080075ce <HAL_NVIC_SetPriority>:
 80075ce:	b580      	push	{r7, lr}
 80075d0:	b086      	sub	sp, #24
 80075d2:	af00      	add	r7, sp, #0
 80075d4:	4603      	mov	r3, r0
 80075d6:	60b9      	str	r1, [r7, #8]
 80075d8:	607a      	str	r2, [r7, #4]
 80075da:	73fb      	strb	r3, [r7, #15]
 80075dc:	2300      	movs	r3, #0
 80075de:	617b      	str	r3, [r7, #20]
 80075e0:	f7ff ff1a 	bl	8007418 <__NVIC_GetPriorityGrouping>
 80075e4:	6178      	str	r0, [r7, #20]
 80075e6:	687a      	ldr	r2, [r7, #4]
 80075e8:	68b9      	ldr	r1, [r7, #8]
 80075ea:	6978      	ldr	r0, [r7, #20]
 80075ec:	f7ff ff8e 	bl	800750c <NVIC_EncodePriority>
 80075f0:	4602      	mov	r2, r0
 80075f2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80075f6:	4611      	mov	r1, r2
 80075f8:	4618      	mov	r0, r3
 80075fa:	f7ff ff5d 	bl	80074b8 <__NVIC_SetPriority>
 80075fe:	bf00      	nop
 8007600:	3718      	adds	r7, #24
 8007602:	46bd      	mov	sp, r7
 8007604:	bd80      	pop	{r7, pc}

08007606 <HAL_NVIC_EnableIRQ>:
 8007606:	b580      	push	{r7, lr}
 8007608:	b082      	sub	sp, #8
 800760a:	af00      	add	r7, sp, #0
 800760c:	4603      	mov	r3, r0
 800760e:	71fb      	strb	r3, [r7, #7]
 8007610:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007614:	4618      	mov	r0, r3
 8007616:	f7ff ff0d 	bl	8007434 <__NVIC_EnableIRQ>
 800761a:	bf00      	nop
 800761c:	3708      	adds	r7, #8
 800761e:	46bd      	mov	sp, r7
 8007620:	bd80      	pop	{r7, pc}

08007622 <HAL_NVIC_DisableIRQ>:
 8007622:	b580      	push	{r7, lr}
 8007624:	b082      	sub	sp, #8
 8007626:	af00      	add	r7, sp, #0
 8007628:	4603      	mov	r3, r0
 800762a:	71fb      	strb	r3, [r7, #7]
 800762c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007630:	4618      	mov	r0, r3
 8007632:	f7ff ff1d 	bl	8007470 <__NVIC_DisableIRQ>
 8007636:	bf00      	nop
 8007638:	3708      	adds	r7, #8
 800763a:	46bd      	mov	sp, r7
 800763c:	bd80      	pop	{r7, pc}

0800763e <HAL_SYSTICK_Config>:
 800763e:	b580      	push	{r7, lr}
 8007640:	b082      	sub	sp, #8
 8007642:	af00      	add	r7, sp, #0
 8007644:	6078      	str	r0, [r7, #4]
 8007646:	6878      	ldr	r0, [r7, #4]
 8007648:	f7ff ff94 	bl	8007574 <SysTick_Config>
 800764c:	4603      	mov	r3, r0
 800764e:	4618      	mov	r0, r3
 8007650:	3708      	adds	r7, #8
 8007652:	46bd      	mov	sp, r7
 8007654:	bd80      	pop	{r7, pc}
	...

08007658 <HAL_DMA_Init>:
 8007658:	b580      	push	{r7, lr}
 800765a:	b086      	sub	sp, #24
 800765c:	af00      	add	r7, sp, #0
 800765e:	6078      	str	r0, [r7, #4]
 8007660:	2300      	movs	r3, #0
 8007662:	617b      	str	r3, [r7, #20]
 8007664:	f7ff f90e 	bl	8006884 <HAL_GetTick>
 8007668:	6138      	str	r0, [r7, #16]
 800766a:	687b      	ldr	r3, [r7, #4]
 800766c:	2b00      	cmp	r3, #0
 800766e:	d101      	bne.n	8007674 <HAL_DMA_Init+0x1c>
 8007670:	2301      	movs	r3, #1
 8007672:	e099      	b.n	80077a8 <HAL_DMA_Init+0x150>
 8007674:	687b      	ldr	r3, [r7, #4]
 8007676:	2202      	movs	r2, #2
 8007678:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800767c:	687b      	ldr	r3, [r7, #4]
 800767e:	2200      	movs	r2, #0
 8007680:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8007684:	687b      	ldr	r3, [r7, #4]
 8007686:	681b      	ldr	r3, [r3, #0]
 8007688:	681a      	ldr	r2, [r3, #0]
 800768a:	687b      	ldr	r3, [r7, #4]
 800768c:	681b      	ldr	r3, [r3, #0]
 800768e:	f022 0201 	bic.w	r2, r2, #1
 8007692:	601a      	str	r2, [r3, #0]
 8007694:	e00f      	b.n	80076b6 <HAL_DMA_Init+0x5e>
 8007696:	f7ff f8f5 	bl	8006884 <HAL_GetTick>
 800769a:	4602      	mov	r2, r0
 800769c:	693b      	ldr	r3, [r7, #16]
 800769e:	1ad3      	subs	r3, r2, r3
 80076a0:	2b05      	cmp	r3, #5
 80076a2:	d908      	bls.n	80076b6 <HAL_DMA_Init+0x5e>
 80076a4:	687b      	ldr	r3, [r7, #4]
 80076a6:	2220      	movs	r2, #32
 80076a8:	655a      	str	r2, [r3, #84]	; 0x54
 80076aa:	687b      	ldr	r3, [r7, #4]
 80076ac:	2203      	movs	r2, #3
 80076ae:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80076b2:	2303      	movs	r3, #3
 80076b4:	e078      	b.n	80077a8 <HAL_DMA_Init+0x150>
 80076b6:	687b      	ldr	r3, [r7, #4]
 80076b8:	681b      	ldr	r3, [r3, #0]
 80076ba:	681b      	ldr	r3, [r3, #0]
 80076bc:	f003 0301 	and.w	r3, r3, #1
 80076c0:	2b00      	cmp	r3, #0
 80076c2:	d1e8      	bne.n	8007696 <HAL_DMA_Init+0x3e>
 80076c4:	687b      	ldr	r3, [r7, #4]
 80076c6:	681b      	ldr	r3, [r3, #0]
 80076c8:	681b      	ldr	r3, [r3, #0]
 80076ca:	617b      	str	r3, [r7, #20]
 80076cc:	697a      	ldr	r2, [r7, #20]
 80076ce:	4b38      	ldr	r3, [pc, #224]	; (80077b0 <HAL_DMA_Init+0x158>)
 80076d0:	4013      	ands	r3, r2
 80076d2:	617b      	str	r3, [r7, #20]
 80076d4:	687b      	ldr	r3, [r7, #4]
 80076d6:	685a      	ldr	r2, [r3, #4]
 80076d8:	687b      	ldr	r3, [r7, #4]
 80076da:	689b      	ldr	r3, [r3, #8]
 80076dc:	431a      	orrs	r2, r3
 80076de:	687b      	ldr	r3, [r7, #4]
 80076e0:	68db      	ldr	r3, [r3, #12]
 80076e2:	431a      	orrs	r2, r3
 80076e4:	687b      	ldr	r3, [r7, #4]
 80076e6:	691b      	ldr	r3, [r3, #16]
 80076e8:	431a      	orrs	r2, r3
 80076ea:	687b      	ldr	r3, [r7, #4]
 80076ec:	695b      	ldr	r3, [r3, #20]
 80076ee:	431a      	orrs	r2, r3
 80076f0:	687b      	ldr	r3, [r7, #4]
 80076f2:	699b      	ldr	r3, [r3, #24]
 80076f4:	431a      	orrs	r2, r3
 80076f6:	687b      	ldr	r3, [r7, #4]
 80076f8:	69db      	ldr	r3, [r3, #28]
 80076fa:	431a      	orrs	r2, r3
 80076fc:	687b      	ldr	r3, [r7, #4]
 80076fe:	6a1b      	ldr	r3, [r3, #32]
 8007700:	4313      	orrs	r3, r2
 8007702:	697a      	ldr	r2, [r7, #20]
 8007704:	4313      	orrs	r3, r2
 8007706:	617b      	str	r3, [r7, #20]
 8007708:	687b      	ldr	r3, [r7, #4]
 800770a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800770c:	2b04      	cmp	r3, #4
 800770e:	d107      	bne.n	8007720 <HAL_DMA_Init+0xc8>
 8007710:	687b      	ldr	r3, [r7, #4]
 8007712:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007714:	687b      	ldr	r3, [r7, #4]
 8007716:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007718:	4313      	orrs	r3, r2
 800771a:	697a      	ldr	r2, [r7, #20]
 800771c:	4313      	orrs	r3, r2
 800771e:	617b      	str	r3, [r7, #20]
 8007720:	687b      	ldr	r3, [r7, #4]
 8007722:	681b      	ldr	r3, [r3, #0]
 8007724:	697a      	ldr	r2, [r7, #20]
 8007726:	601a      	str	r2, [r3, #0]
 8007728:	687b      	ldr	r3, [r7, #4]
 800772a:	681b      	ldr	r3, [r3, #0]
 800772c:	695b      	ldr	r3, [r3, #20]
 800772e:	617b      	str	r3, [r7, #20]
 8007730:	697b      	ldr	r3, [r7, #20]
 8007732:	f023 0307 	bic.w	r3, r3, #7
 8007736:	617b      	str	r3, [r7, #20]
 8007738:	687b      	ldr	r3, [r7, #4]
 800773a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800773c:	697a      	ldr	r2, [r7, #20]
 800773e:	4313      	orrs	r3, r2
 8007740:	617b      	str	r3, [r7, #20]
 8007742:	687b      	ldr	r3, [r7, #4]
 8007744:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007746:	2b04      	cmp	r3, #4
 8007748:	d117      	bne.n	800777a <HAL_DMA_Init+0x122>
 800774a:	687b      	ldr	r3, [r7, #4]
 800774c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800774e:	697a      	ldr	r2, [r7, #20]
 8007750:	4313      	orrs	r3, r2
 8007752:	617b      	str	r3, [r7, #20]
 8007754:	687b      	ldr	r3, [r7, #4]
 8007756:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007758:	2b00      	cmp	r3, #0
 800775a:	d00e      	beq.n	800777a <HAL_DMA_Init+0x122>
 800775c:	6878      	ldr	r0, [r7, #4]
 800775e:	f000 fb01 	bl	8007d64 <DMA_CheckFifoParam>
 8007762:	4603      	mov	r3, r0
 8007764:	2b00      	cmp	r3, #0
 8007766:	d008      	beq.n	800777a <HAL_DMA_Init+0x122>
 8007768:	687b      	ldr	r3, [r7, #4]
 800776a:	2240      	movs	r2, #64	; 0x40
 800776c:	655a      	str	r2, [r3, #84]	; 0x54
 800776e:	687b      	ldr	r3, [r7, #4]
 8007770:	2201      	movs	r2, #1
 8007772:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007776:	2301      	movs	r3, #1
 8007778:	e016      	b.n	80077a8 <HAL_DMA_Init+0x150>
 800777a:	687b      	ldr	r3, [r7, #4]
 800777c:	681b      	ldr	r3, [r3, #0]
 800777e:	697a      	ldr	r2, [r7, #20]
 8007780:	615a      	str	r2, [r3, #20]
 8007782:	6878      	ldr	r0, [r7, #4]
 8007784:	f000 fab8 	bl	8007cf8 <DMA_CalcBaseAndBitshift>
 8007788:	4603      	mov	r3, r0
 800778a:	60fb      	str	r3, [r7, #12]
 800778c:	687b      	ldr	r3, [r7, #4]
 800778e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007790:	223f      	movs	r2, #63	; 0x3f
 8007792:	409a      	lsls	r2, r3
 8007794:	68fb      	ldr	r3, [r7, #12]
 8007796:	609a      	str	r2, [r3, #8]
 8007798:	687b      	ldr	r3, [r7, #4]
 800779a:	2200      	movs	r2, #0
 800779c:	655a      	str	r2, [r3, #84]	; 0x54
 800779e:	687b      	ldr	r3, [r7, #4]
 80077a0:	2201      	movs	r2, #1
 80077a2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80077a6:	2300      	movs	r3, #0
 80077a8:	4618      	mov	r0, r3
 80077aa:	3718      	adds	r7, #24
 80077ac:	46bd      	mov	sp, r7
 80077ae:	bd80      	pop	{r7, pc}
 80077b0:	f010803f 	.word	0xf010803f

080077b4 <HAL_DMA_Start_IT>:
 80077b4:	b580      	push	{r7, lr}
 80077b6:	b086      	sub	sp, #24
 80077b8:	af00      	add	r7, sp, #0
 80077ba:	60f8      	str	r0, [r7, #12]
 80077bc:	60b9      	str	r1, [r7, #8]
 80077be:	607a      	str	r2, [r7, #4]
 80077c0:	603b      	str	r3, [r7, #0]
 80077c2:	2300      	movs	r3, #0
 80077c4:	75fb      	strb	r3, [r7, #23]
 80077c6:	68fb      	ldr	r3, [r7, #12]
 80077c8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80077ca:	613b      	str	r3, [r7, #16]
 80077cc:	68fb      	ldr	r3, [r7, #12]
 80077ce:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 80077d2:	2b01      	cmp	r3, #1
 80077d4:	d101      	bne.n	80077da <HAL_DMA_Start_IT+0x26>
 80077d6:	2302      	movs	r3, #2
 80077d8:	e040      	b.n	800785c <HAL_DMA_Start_IT+0xa8>
 80077da:	68fb      	ldr	r3, [r7, #12]
 80077dc:	2201      	movs	r2, #1
 80077de:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80077e2:	68fb      	ldr	r3, [r7, #12]
 80077e4:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80077e8:	b2db      	uxtb	r3, r3
 80077ea:	2b01      	cmp	r3, #1
 80077ec:	d12f      	bne.n	800784e <HAL_DMA_Start_IT+0x9a>
 80077ee:	68fb      	ldr	r3, [r7, #12]
 80077f0:	2202      	movs	r2, #2
 80077f2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80077f6:	68fb      	ldr	r3, [r7, #12]
 80077f8:	2200      	movs	r2, #0
 80077fa:	655a      	str	r2, [r3, #84]	; 0x54
 80077fc:	683b      	ldr	r3, [r7, #0]
 80077fe:	687a      	ldr	r2, [r7, #4]
 8007800:	68b9      	ldr	r1, [r7, #8]
 8007802:	68f8      	ldr	r0, [r7, #12]
 8007804:	f000 fa4a 	bl	8007c9c <DMA_SetConfig>
 8007808:	68fb      	ldr	r3, [r7, #12]
 800780a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800780c:	223f      	movs	r2, #63	; 0x3f
 800780e:	409a      	lsls	r2, r3
 8007810:	693b      	ldr	r3, [r7, #16]
 8007812:	609a      	str	r2, [r3, #8]
 8007814:	68fb      	ldr	r3, [r7, #12]
 8007816:	681b      	ldr	r3, [r3, #0]
 8007818:	681a      	ldr	r2, [r3, #0]
 800781a:	68fb      	ldr	r3, [r7, #12]
 800781c:	681b      	ldr	r3, [r3, #0]
 800781e:	f042 0216 	orr.w	r2, r2, #22
 8007822:	601a      	str	r2, [r3, #0]
 8007824:	68fb      	ldr	r3, [r7, #12]
 8007826:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007828:	2b00      	cmp	r3, #0
 800782a:	d007      	beq.n	800783c <HAL_DMA_Start_IT+0x88>
 800782c:	68fb      	ldr	r3, [r7, #12]
 800782e:	681b      	ldr	r3, [r3, #0]
 8007830:	681a      	ldr	r2, [r3, #0]
 8007832:	68fb      	ldr	r3, [r7, #12]
 8007834:	681b      	ldr	r3, [r3, #0]
 8007836:	f042 0208 	orr.w	r2, r2, #8
 800783a:	601a      	str	r2, [r3, #0]
 800783c:	68fb      	ldr	r3, [r7, #12]
 800783e:	681b      	ldr	r3, [r3, #0]
 8007840:	681a      	ldr	r2, [r3, #0]
 8007842:	68fb      	ldr	r3, [r7, #12]
 8007844:	681b      	ldr	r3, [r3, #0]
 8007846:	f042 0201 	orr.w	r2, r2, #1
 800784a:	601a      	str	r2, [r3, #0]
 800784c:	e005      	b.n	800785a <HAL_DMA_Start_IT+0xa6>
 800784e:	68fb      	ldr	r3, [r7, #12]
 8007850:	2200      	movs	r2, #0
 8007852:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8007856:	2302      	movs	r3, #2
 8007858:	75fb      	strb	r3, [r7, #23]
 800785a:	7dfb      	ldrb	r3, [r7, #23]
 800785c:	4618      	mov	r0, r3
 800785e:	3718      	adds	r7, #24
 8007860:	46bd      	mov	sp, r7
 8007862:	bd80      	pop	{r7, pc}

08007864 <HAL_DMA_Abort>:
 8007864:	b580      	push	{r7, lr}
 8007866:	b084      	sub	sp, #16
 8007868:	af00      	add	r7, sp, #0
 800786a:	6078      	str	r0, [r7, #4]
 800786c:	687b      	ldr	r3, [r7, #4]
 800786e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007870:	60fb      	str	r3, [r7, #12]
 8007872:	f7ff f807 	bl	8006884 <HAL_GetTick>
 8007876:	60b8      	str	r0, [r7, #8]
 8007878:	687b      	ldr	r3, [r7, #4]
 800787a:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800787e:	b2db      	uxtb	r3, r3
 8007880:	2b02      	cmp	r3, #2
 8007882:	d008      	beq.n	8007896 <HAL_DMA_Abort+0x32>
 8007884:	687b      	ldr	r3, [r7, #4]
 8007886:	2280      	movs	r2, #128	; 0x80
 8007888:	655a      	str	r2, [r3, #84]	; 0x54
 800788a:	687b      	ldr	r3, [r7, #4]
 800788c:	2200      	movs	r2, #0
 800788e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8007892:	2301      	movs	r3, #1
 8007894:	e052      	b.n	800793c <HAL_DMA_Abort+0xd8>
 8007896:	687b      	ldr	r3, [r7, #4]
 8007898:	681b      	ldr	r3, [r3, #0]
 800789a:	681a      	ldr	r2, [r3, #0]
 800789c:	687b      	ldr	r3, [r7, #4]
 800789e:	681b      	ldr	r3, [r3, #0]
 80078a0:	f022 0216 	bic.w	r2, r2, #22
 80078a4:	601a      	str	r2, [r3, #0]
 80078a6:	687b      	ldr	r3, [r7, #4]
 80078a8:	681b      	ldr	r3, [r3, #0]
 80078aa:	695a      	ldr	r2, [r3, #20]
 80078ac:	687b      	ldr	r3, [r7, #4]
 80078ae:	681b      	ldr	r3, [r3, #0]
 80078b0:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80078b4:	615a      	str	r2, [r3, #20]
 80078b6:	687b      	ldr	r3, [r7, #4]
 80078b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80078ba:	2b00      	cmp	r3, #0
 80078bc:	d103      	bne.n	80078c6 <HAL_DMA_Abort+0x62>
 80078be:	687b      	ldr	r3, [r7, #4]
 80078c0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80078c2:	2b00      	cmp	r3, #0
 80078c4:	d007      	beq.n	80078d6 <HAL_DMA_Abort+0x72>
 80078c6:	687b      	ldr	r3, [r7, #4]
 80078c8:	681b      	ldr	r3, [r3, #0]
 80078ca:	681a      	ldr	r2, [r3, #0]
 80078cc:	687b      	ldr	r3, [r7, #4]
 80078ce:	681b      	ldr	r3, [r3, #0]
 80078d0:	f022 0208 	bic.w	r2, r2, #8
 80078d4:	601a      	str	r2, [r3, #0]
 80078d6:	687b      	ldr	r3, [r7, #4]
 80078d8:	681b      	ldr	r3, [r3, #0]
 80078da:	681a      	ldr	r2, [r3, #0]
 80078dc:	687b      	ldr	r3, [r7, #4]
 80078de:	681b      	ldr	r3, [r3, #0]
 80078e0:	f022 0201 	bic.w	r2, r2, #1
 80078e4:	601a      	str	r2, [r3, #0]
 80078e6:	e013      	b.n	8007910 <HAL_DMA_Abort+0xac>
 80078e8:	f7fe ffcc 	bl	8006884 <HAL_GetTick>
 80078ec:	4602      	mov	r2, r0
 80078ee:	68bb      	ldr	r3, [r7, #8]
 80078f0:	1ad3      	subs	r3, r2, r3
 80078f2:	2b05      	cmp	r3, #5
 80078f4:	d90c      	bls.n	8007910 <HAL_DMA_Abort+0xac>
 80078f6:	687b      	ldr	r3, [r7, #4]
 80078f8:	2220      	movs	r2, #32
 80078fa:	655a      	str	r2, [r3, #84]	; 0x54
 80078fc:	687b      	ldr	r3, [r7, #4]
 80078fe:	2203      	movs	r2, #3
 8007900:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007904:	687b      	ldr	r3, [r7, #4]
 8007906:	2200      	movs	r2, #0
 8007908:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800790c:	2303      	movs	r3, #3
 800790e:	e015      	b.n	800793c <HAL_DMA_Abort+0xd8>
 8007910:	687b      	ldr	r3, [r7, #4]
 8007912:	681b      	ldr	r3, [r3, #0]
 8007914:	681b      	ldr	r3, [r3, #0]
 8007916:	f003 0301 	and.w	r3, r3, #1
 800791a:	2b00      	cmp	r3, #0
 800791c:	d1e4      	bne.n	80078e8 <HAL_DMA_Abort+0x84>
 800791e:	687b      	ldr	r3, [r7, #4]
 8007920:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007922:	223f      	movs	r2, #63	; 0x3f
 8007924:	409a      	lsls	r2, r3
 8007926:	68fb      	ldr	r3, [r7, #12]
 8007928:	609a      	str	r2, [r3, #8]
 800792a:	687b      	ldr	r3, [r7, #4]
 800792c:	2201      	movs	r2, #1
 800792e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007932:	687b      	ldr	r3, [r7, #4]
 8007934:	2200      	movs	r2, #0
 8007936:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800793a:	2300      	movs	r3, #0
 800793c:	4618      	mov	r0, r3
 800793e:	3710      	adds	r7, #16
 8007940:	46bd      	mov	sp, r7
 8007942:	bd80      	pop	{r7, pc}

08007944 <HAL_DMA_Abort_IT>:
 8007944:	b480      	push	{r7}
 8007946:	b083      	sub	sp, #12
 8007948:	af00      	add	r7, sp, #0
 800794a:	6078      	str	r0, [r7, #4]
 800794c:	687b      	ldr	r3, [r7, #4]
 800794e:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8007952:	b2db      	uxtb	r3, r3
 8007954:	2b02      	cmp	r3, #2
 8007956:	d004      	beq.n	8007962 <HAL_DMA_Abort_IT+0x1e>
 8007958:	687b      	ldr	r3, [r7, #4]
 800795a:	2280      	movs	r2, #128	; 0x80
 800795c:	655a      	str	r2, [r3, #84]	; 0x54
 800795e:	2301      	movs	r3, #1
 8007960:	e00c      	b.n	800797c <HAL_DMA_Abort_IT+0x38>
 8007962:	687b      	ldr	r3, [r7, #4]
 8007964:	2205      	movs	r2, #5
 8007966:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800796a:	687b      	ldr	r3, [r7, #4]
 800796c:	681b      	ldr	r3, [r3, #0]
 800796e:	681a      	ldr	r2, [r3, #0]
 8007970:	687b      	ldr	r3, [r7, #4]
 8007972:	681b      	ldr	r3, [r3, #0]
 8007974:	f022 0201 	bic.w	r2, r2, #1
 8007978:	601a      	str	r2, [r3, #0]
 800797a:	2300      	movs	r3, #0
 800797c:	4618      	mov	r0, r3
 800797e:	370c      	adds	r7, #12
 8007980:	46bd      	mov	sp, r7
 8007982:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007986:	4770      	bx	lr

08007988 <HAL_DMA_IRQHandler>:
 8007988:	b580      	push	{r7, lr}
 800798a:	b086      	sub	sp, #24
 800798c:	af00      	add	r7, sp, #0
 800798e:	6078      	str	r0, [r7, #4]
 8007990:	2300      	movs	r3, #0
 8007992:	60bb      	str	r3, [r7, #8]
 8007994:	4b8e      	ldr	r3, [pc, #568]	; (8007bd0 <HAL_DMA_IRQHandler+0x248>)
 8007996:	681b      	ldr	r3, [r3, #0]
 8007998:	4a8e      	ldr	r2, [pc, #568]	; (8007bd4 <HAL_DMA_IRQHandler+0x24c>)
 800799a:	fba2 2303 	umull	r2, r3, r2, r3
 800799e:	0a9b      	lsrs	r3, r3, #10
 80079a0:	617b      	str	r3, [r7, #20]
 80079a2:	687b      	ldr	r3, [r7, #4]
 80079a4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80079a6:	613b      	str	r3, [r7, #16]
 80079a8:	693b      	ldr	r3, [r7, #16]
 80079aa:	681b      	ldr	r3, [r3, #0]
 80079ac:	60fb      	str	r3, [r7, #12]
 80079ae:	687b      	ldr	r3, [r7, #4]
 80079b0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80079b2:	2208      	movs	r2, #8
 80079b4:	409a      	lsls	r2, r3
 80079b6:	68fb      	ldr	r3, [r7, #12]
 80079b8:	4013      	ands	r3, r2
 80079ba:	2b00      	cmp	r3, #0
 80079bc:	d01a      	beq.n	80079f4 <HAL_DMA_IRQHandler+0x6c>
 80079be:	687b      	ldr	r3, [r7, #4]
 80079c0:	681b      	ldr	r3, [r3, #0]
 80079c2:	681b      	ldr	r3, [r3, #0]
 80079c4:	f003 0304 	and.w	r3, r3, #4
 80079c8:	2b00      	cmp	r3, #0
 80079ca:	d013      	beq.n	80079f4 <HAL_DMA_IRQHandler+0x6c>
 80079cc:	687b      	ldr	r3, [r7, #4]
 80079ce:	681b      	ldr	r3, [r3, #0]
 80079d0:	681a      	ldr	r2, [r3, #0]
 80079d2:	687b      	ldr	r3, [r7, #4]
 80079d4:	681b      	ldr	r3, [r3, #0]
 80079d6:	f022 0204 	bic.w	r2, r2, #4
 80079da:	601a      	str	r2, [r3, #0]
 80079dc:	687b      	ldr	r3, [r7, #4]
 80079de:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80079e0:	2208      	movs	r2, #8
 80079e2:	409a      	lsls	r2, r3
 80079e4:	693b      	ldr	r3, [r7, #16]
 80079e6:	609a      	str	r2, [r3, #8]
 80079e8:	687b      	ldr	r3, [r7, #4]
 80079ea:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80079ec:	f043 0201 	orr.w	r2, r3, #1
 80079f0:	687b      	ldr	r3, [r7, #4]
 80079f2:	655a      	str	r2, [r3, #84]	; 0x54
 80079f4:	687b      	ldr	r3, [r7, #4]
 80079f6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80079f8:	2201      	movs	r2, #1
 80079fa:	409a      	lsls	r2, r3
 80079fc:	68fb      	ldr	r3, [r7, #12]
 80079fe:	4013      	ands	r3, r2
 8007a00:	2b00      	cmp	r3, #0
 8007a02:	d012      	beq.n	8007a2a <HAL_DMA_IRQHandler+0xa2>
 8007a04:	687b      	ldr	r3, [r7, #4]
 8007a06:	681b      	ldr	r3, [r3, #0]
 8007a08:	695b      	ldr	r3, [r3, #20]
 8007a0a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007a0e:	2b00      	cmp	r3, #0
 8007a10:	d00b      	beq.n	8007a2a <HAL_DMA_IRQHandler+0xa2>
 8007a12:	687b      	ldr	r3, [r7, #4]
 8007a14:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007a16:	2201      	movs	r2, #1
 8007a18:	409a      	lsls	r2, r3
 8007a1a:	693b      	ldr	r3, [r7, #16]
 8007a1c:	609a      	str	r2, [r3, #8]
 8007a1e:	687b      	ldr	r3, [r7, #4]
 8007a20:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007a22:	f043 0202 	orr.w	r2, r3, #2
 8007a26:	687b      	ldr	r3, [r7, #4]
 8007a28:	655a      	str	r2, [r3, #84]	; 0x54
 8007a2a:	687b      	ldr	r3, [r7, #4]
 8007a2c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007a2e:	2204      	movs	r2, #4
 8007a30:	409a      	lsls	r2, r3
 8007a32:	68fb      	ldr	r3, [r7, #12]
 8007a34:	4013      	ands	r3, r2
 8007a36:	2b00      	cmp	r3, #0
 8007a38:	d012      	beq.n	8007a60 <HAL_DMA_IRQHandler+0xd8>
 8007a3a:	687b      	ldr	r3, [r7, #4]
 8007a3c:	681b      	ldr	r3, [r3, #0]
 8007a3e:	681b      	ldr	r3, [r3, #0]
 8007a40:	f003 0302 	and.w	r3, r3, #2
 8007a44:	2b00      	cmp	r3, #0
 8007a46:	d00b      	beq.n	8007a60 <HAL_DMA_IRQHandler+0xd8>
 8007a48:	687b      	ldr	r3, [r7, #4]
 8007a4a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007a4c:	2204      	movs	r2, #4
 8007a4e:	409a      	lsls	r2, r3
 8007a50:	693b      	ldr	r3, [r7, #16]
 8007a52:	609a      	str	r2, [r3, #8]
 8007a54:	687b      	ldr	r3, [r7, #4]
 8007a56:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007a58:	f043 0204 	orr.w	r2, r3, #4
 8007a5c:	687b      	ldr	r3, [r7, #4]
 8007a5e:	655a      	str	r2, [r3, #84]	; 0x54
 8007a60:	687b      	ldr	r3, [r7, #4]
 8007a62:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007a64:	2210      	movs	r2, #16
 8007a66:	409a      	lsls	r2, r3
 8007a68:	68fb      	ldr	r3, [r7, #12]
 8007a6a:	4013      	ands	r3, r2
 8007a6c:	2b00      	cmp	r3, #0
 8007a6e:	d043      	beq.n	8007af8 <HAL_DMA_IRQHandler+0x170>
 8007a70:	687b      	ldr	r3, [r7, #4]
 8007a72:	681b      	ldr	r3, [r3, #0]
 8007a74:	681b      	ldr	r3, [r3, #0]
 8007a76:	f003 0308 	and.w	r3, r3, #8
 8007a7a:	2b00      	cmp	r3, #0
 8007a7c:	d03c      	beq.n	8007af8 <HAL_DMA_IRQHandler+0x170>
 8007a7e:	687b      	ldr	r3, [r7, #4]
 8007a80:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007a82:	2210      	movs	r2, #16
 8007a84:	409a      	lsls	r2, r3
 8007a86:	693b      	ldr	r3, [r7, #16]
 8007a88:	609a      	str	r2, [r3, #8]
 8007a8a:	687b      	ldr	r3, [r7, #4]
 8007a8c:	681b      	ldr	r3, [r3, #0]
 8007a8e:	681b      	ldr	r3, [r3, #0]
 8007a90:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8007a94:	2b00      	cmp	r3, #0
 8007a96:	d018      	beq.n	8007aca <HAL_DMA_IRQHandler+0x142>
 8007a98:	687b      	ldr	r3, [r7, #4]
 8007a9a:	681b      	ldr	r3, [r3, #0]
 8007a9c:	681b      	ldr	r3, [r3, #0]
 8007a9e:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8007aa2:	2b00      	cmp	r3, #0
 8007aa4:	d108      	bne.n	8007ab8 <HAL_DMA_IRQHandler+0x130>
 8007aa6:	687b      	ldr	r3, [r7, #4]
 8007aa8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007aaa:	2b00      	cmp	r3, #0
 8007aac:	d024      	beq.n	8007af8 <HAL_DMA_IRQHandler+0x170>
 8007aae:	687b      	ldr	r3, [r7, #4]
 8007ab0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007ab2:	6878      	ldr	r0, [r7, #4]
 8007ab4:	4798      	blx	r3
 8007ab6:	e01f      	b.n	8007af8 <HAL_DMA_IRQHandler+0x170>
 8007ab8:	687b      	ldr	r3, [r7, #4]
 8007aba:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007abc:	2b00      	cmp	r3, #0
 8007abe:	d01b      	beq.n	8007af8 <HAL_DMA_IRQHandler+0x170>
 8007ac0:	687b      	ldr	r3, [r7, #4]
 8007ac2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007ac4:	6878      	ldr	r0, [r7, #4]
 8007ac6:	4798      	blx	r3
 8007ac8:	e016      	b.n	8007af8 <HAL_DMA_IRQHandler+0x170>
 8007aca:	687b      	ldr	r3, [r7, #4]
 8007acc:	681b      	ldr	r3, [r3, #0]
 8007ace:	681b      	ldr	r3, [r3, #0]
 8007ad0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007ad4:	2b00      	cmp	r3, #0
 8007ad6:	d107      	bne.n	8007ae8 <HAL_DMA_IRQHandler+0x160>
 8007ad8:	687b      	ldr	r3, [r7, #4]
 8007ada:	681b      	ldr	r3, [r3, #0]
 8007adc:	681a      	ldr	r2, [r3, #0]
 8007ade:	687b      	ldr	r3, [r7, #4]
 8007ae0:	681b      	ldr	r3, [r3, #0]
 8007ae2:	f022 0208 	bic.w	r2, r2, #8
 8007ae6:	601a      	str	r2, [r3, #0]
 8007ae8:	687b      	ldr	r3, [r7, #4]
 8007aea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007aec:	2b00      	cmp	r3, #0
 8007aee:	d003      	beq.n	8007af8 <HAL_DMA_IRQHandler+0x170>
 8007af0:	687b      	ldr	r3, [r7, #4]
 8007af2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007af4:	6878      	ldr	r0, [r7, #4]
 8007af6:	4798      	blx	r3
 8007af8:	687b      	ldr	r3, [r7, #4]
 8007afa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007afc:	2220      	movs	r2, #32
 8007afe:	409a      	lsls	r2, r3
 8007b00:	68fb      	ldr	r3, [r7, #12]
 8007b02:	4013      	ands	r3, r2
 8007b04:	2b00      	cmp	r3, #0
 8007b06:	f000 808f 	beq.w	8007c28 <HAL_DMA_IRQHandler+0x2a0>
 8007b0a:	687b      	ldr	r3, [r7, #4]
 8007b0c:	681b      	ldr	r3, [r3, #0]
 8007b0e:	681b      	ldr	r3, [r3, #0]
 8007b10:	f003 0310 	and.w	r3, r3, #16
 8007b14:	2b00      	cmp	r3, #0
 8007b16:	f000 8087 	beq.w	8007c28 <HAL_DMA_IRQHandler+0x2a0>
 8007b1a:	687b      	ldr	r3, [r7, #4]
 8007b1c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007b1e:	2220      	movs	r2, #32
 8007b20:	409a      	lsls	r2, r3
 8007b22:	693b      	ldr	r3, [r7, #16]
 8007b24:	609a      	str	r2, [r3, #8]
 8007b26:	687b      	ldr	r3, [r7, #4]
 8007b28:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8007b2c:	b2db      	uxtb	r3, r3
 8007b2e:	2b05      	cmp	r3, #5
 8007b30:	d136      	bne.n	8007ba0 <HAL_DMA_IRQHandler+0x218>
 8007b32:	687b      	ldr	r3, [r7, #4]
 8007b34:	681b      	ldr	r3, [r3, #0]
 8007b36:	681a      	ldr	r2, [r3, #0]
 8007b38:	687b      	ldr	r3, [r7, #4]
 8007b3a:	681b      	ldr	r3, [r3, #0]
 8007b3c:	f022 0216 	bic.w	r2, r2, #22
 8007b40:	601a      	str	r2, [r3, #0]
 8007b42:	687b      	ldr	r3, [r7, #4]
 8007b44:	681b      	ldr	r3, [r3, #0]
 8007b46:	695a      	ldr	r2, [r3, #20]
 8007b48:	687b      	ldr	r3, [r7, #4]
 8007b4a:	681b      	ldr	r3, [r3, #0]
 8007b4c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8007b50:	615a      	str	r2, [r3, #20]
 8007b52:	687b      	ldr	r3, [r7, #4]
 8007b54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007b56:	2b00      	cmp	r3, #0
 8007b58:	d103      	bne.n	8007b62 <HAL_DMA_IRQHandler+0x1da>
 8007b5a:	687b      	ldr	r3, [r7, #4]
 8007b5c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007b5e:	2b00      	cmp	r3, #0
 8007b60:	d007      	beq.n	8007b72 <HAL_DMA_IRQHandler+0x1ea>
 8007b62:	687b      	ldr	r3, [r7, #4]
 8007b64:	681b      	ldr	r3, [r3, #0]
 8007b66:	681a      	ldr	r2, [r3, #0]
 8007b68:	687b      	ldr	r3, [r7, #4]
 8007b6a:	681b      	ldr	r3, [r3, #0]
 8007b6c:	f022 0208 	bic.w	r2, r2, #8
 8007b70:	601a      	str	r2, [r3, #0]
 8007b72:	687b      	ldr	r3, [r7, #4]
 8007b74:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007b76:	223f      	movs	r2, #63	; 0x3f
 8007b78:	409a      	lsls	r2, r3
 8007b7a:	693b      	ldr	r3, [r7, #16]
 8007b7c:	609a      	str	r2, [r3, #8]
 8007b7e:	687b      	ldr	r3, [r7, #4]
 8007b80:	2201      	movs	r2, #1
 8007b82:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007b86:	687b      	ldr	r3, [r7, #4]
 8007b88:	2200      	movs	r2, #0
 8007b8a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8007b8e:	687b      	ldr	r3, [r7, #4]
 8007b90:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007b92:	2b00      	cmp	r3, #0
 8007b94:	d07e      	beq.n	8007c94 <HAL_DMA_IRQHandler+0x30c>
 8007b96:	687b      	ldr	r3, [r7, #4]
 8007b98:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007b9a:	6878      	ldr	r0, [r7, #4]
 8007b9c:	4798      	blx	r3
 8007b9e:	e079      	b.n	8007c94 <HAL_DMA_IRQHandler+0x30c>
 8007ba0:	687b      	ldr	r3, [r7, #4]
 8007ba2:	681b      	ldr	r3, [r3, #0]
 8007ba4:	681b      	ldr	r3, [r3, #0]
 8007ba6:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8007baa:	2b00      	cmp	r3, #0
 8007bac:	d01d      	beq.n	8007bea <HAL_DMA_IRQHandler+0x262>
 8007bae:	687b      	ldr	r3, [r7, #4]
 8007bb0:	681b      	ldr	r3, [r3, #0]
 8007bb2:	681b      	ldr	r3, [r3, #0]
 8007bb4:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8007bb8:	2b00      	cmp	r3, #0
 8007bba:	d10d      	bne.n	8007bd8 <HAL_DMA_IRQHandler+0x250>
 8007bbc:	687b      	ldr	r3, [r7, #4]
 8007bbe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007bc0:	2b00      	cmp	r3, #0
 8007bc2:	d031      	beq.n	8007c28 <HAL_DMA_IRQHandler+0x2a0>
 8007bc4:	687b      	ldr	r3, [r7, #4]
 8007bc6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007bc8:	6878      	ldr	r0, [r7, #4]
 8007bca:	4798      	blx	r3
 8007bcc:	e02c      	b.n	8007c28 <HAL_DMA_IRQHandler+0x2a0>
 8007bce:	bf00      	nop
 8007bd0:	20000094 	.word	0x20000094
 8007bd4:	1b4e81b5 	.word	0x1b4e81b5
 8007bd8:	687b      	ldr	r3, [r7, #4]
 8007bda:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007bdc:	2b00      	cmp	r3, #0
 8007bde:	d023      	beq.n	8007c28 <HAL_DMA_IRQHandler+0x2a0>
 8007be0:	687b      	ldr	r3, [r7, #4]
 8007be2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007be4:	6878      	ldr	r0, [r7, #4]
 8007be6:	4798      	blx	r3
 8007be8:	e01e      	b.n	8007c28 <HAL_DMA_IRQHandler+0x2a0>
 8007bea:	687b      	ldr	r3, [r7, #4]
 8007bec:	681b      	ldr	r3, [r3, #0]
 8007bee:	681b      	ldr	r3, [r3, #0]
 8007bf0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007bf4:	2b00      	cmp	r3, #0
 8007bf6:	d10f      	bne.n	8007c18 <HAL_DMA_IRQHandler+0x290>
 8007bf8:	687b      	ldr	r3, [r7, #4]
 8007bfa:	681b      	ldr	r3, [r3, #0]
 8007bfc:	681a      	ldr	r2, [r3, #0]
 8007bfe:	687b      	ldr	r3, [r7, #4]
 8007c00:	681b      	ldr	r3, [r3, #0]
 8007c02:	f022 0210 	bic.w	r2, r2, #16
 8007c06:	601a      	str	r2, [r3, #0]
 8007c08:	687b      	ldr	r3, [r7, #4]
 8007c0a:	2201      	movs	r2, #1
 8007c0c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007c10:	687b      	ldr	r3, [r7, #4]
 8007c12:	2200      	movs	r2, #0
 8007c14:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8007c18:	687b      	ldr	r3, [r7, #4]
 8007c1a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007c1c:	2b00      	cmp	r3, #0
 8007c1e:	d003      	beq.n	8007c28 <HAL_DMA_IRQHandler+0x2a0>
 8007c20:	687b      	ldr	r3, [r7, #4]
 8007c22:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007c24:	6878      	ldr	r0, [r7, #4]
 8007c26:	4798      	blx	r3
 8007c28:	687b      	ldr	r3, [r7, #4]
 8007c2a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007c2c:	2b00      	cmp	r3, #0
 8007c2e:	d032      	beq.n	8007c96 <HAL_DMA_IRQHandler+0x30e>
 8007c30:	687b      	ldr	r3, [r7, #4]
 8007c32:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007c34:	f003 0301 	and.w	r3, r3, #1
 8007c38:	2b00      	cmp	r3, #0
 8007c3a:	d022      	beq.n	8007c82 <HAL_DMA_IRQHandler+0x2fa>
 8007c3c:	687b      	ldr	r3, [r7, #4]
 8007c3e:	2205      	movs	r2, #5
 8007c40:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007c44:	687b      	ldr	r3, [r7, #4]
 8007c46:	681b      	ldr	r3, [r3, #0]
 8007c48:	681a      	ldr	r2, [r3, #0]
 8007c4a:	687b      	ldr	r3, [r7, #4]
 8007c4c:	681b      	ldr	r3, [r3, #0]
 8007c4e:	f022 0201 	bic.w	r2, r2, #1
 8007c52:	601a      	str	r2, [r3, #0]
 8007c54:	68bb      	ldr	r3, [r7, #8]
 8007c56:	3301      	adds	r3, #1
 8007c58:	60bb      	str	r3, [r7, #8]
 8007c5a:	697a      	ldr	r2, [r7, #20]
 8007c5c:	429a      	cmp	r2, r3
 8007c5e:	d307      	bcc.n	8007c70 <HAL_DMA_IRQHandler+0x2e8>
 8007c60:	687b      	ldr	r3, [r7, #4]
 8007c62:	681b      	ldr	r3, [r3, #0]
 8007c64:	681b      	ldr	r3, [r3, #0]
 8007c66:	f003 0301 	and.w	r3, r3, #1
 8007c6a:	2b00      	cmp	r3, #0
 8007c6c:	d1f2      	bne.n	8007c54 <HAL_DMA_IRQHandler+0x2cc>
 8007c6e:	e000      	b.n	8007c72 <HAL_DMA_IRQHandler+0x2ea>
 8007c70:	bf00      	nop
 8007c72:	687b      	ldr	r3, [r7, #4]
 8007c74:	2201      	movs	r2, #1
 8007c76:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007c7a:	687b      	ldr	r3, [r7, #4]
 8007c7c:	2200      	movs	r2, #0
 8007c7e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8007c82:	687b      	ldr	r3, [r7, #4]
 8007c84:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007c86:	2b00      	cmp	r3, #0
 8007c88:	d005      	beq.n	8007c96 <HAL_DMA_IRQHandler+0x30e>
 8007c8a:	687b      	ldr	r3, [r7, #4]
 8007c8c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007c8e:	6878      	ldr	r0, [r7, #4]
 8007c90:	4798      	blx	r3
 8007c92:	e000      	b.n	8007c96 <HAL_DMA_IRQHandler+0x30e>
 8007c94:	bf00      	nop
 8007c96:	3718      	adds	r7, #24
 8007c98:	46bd      	mov	sp, r7
 8007c9a:	bd80      	pop	{r7, pc}

08007c9c <DMA_SetConfig>:
 8007c9c:	b480      	push	{r7}
 8007c9e:	b085      	sub	sp, #20
 8007ca0:	af00      	add	r7, sp, #0
 8007ca2:	60f8      	str	r0, [r7, #12]
 8007ca4:	60b9      	str	r1, [r7, #8]
 8007ca6:	607a      	str	r2, [r7, #4]
 8007ca8:	603b      	str	r3, [r7, #0]
 8007caa:	68fb      	ldr	r3, [r7, #12]
 8007cac:	681b      	ldr	r3, [r3, #0]
 8007cae:	681a      	ldr	r2, [r3, #0]
 8007cb0:	68fb      	ldr	r3, [r7, #12]
 8007cb2:	681b      	ldr	r3, [r3, #0]
 8007cb4:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8007cb8:	601a      	str	r2, [r3, #0]
 8007cba:	68fb      	ldr	r3, [r7, #12]
 8007cbc:	681b      	ldr	r3, [r3, #0]
 8007cbe:	683a      	ldr	r2, [r7, #0]
 8007cc0:	605a      	str	r2, [r3, #4]
 8007cc2:	68fb      	ldr	r3, [r7, #12]
 8007cc4:	689b      	ldr	r3, [r3, #8]
 8007cc6:	2b40      	cmp	r3, #64	; 0x40
 8007cc8:	d108      	bne.n	8007cdc <DMA_SetConfig+0x40>
 8007cca:	68fb      	ldr	r3, [r7, #12]
 8007ccc:	681b      	ldr	r3, [r3, #0]
 8007cce:	687a      	ldr	r2, [r7, #4]
 8007cd0:	609a      	str	r2, [r3, #8]
 8007cd2:	68fb      	ldr	r3, [r7, #12]
 8007cd4:	681b      	ldr	r3, [r3, #0]
 8007cd6:	68ba      	ldr	r2, [r7, #8]
 8007cd8:	60da      	str	r2, [r3, #12]
 8007cda:	e007      	b.n	8007cec <DMA_SetConfig+0x50>
 8007cdc:	68fb      	ldr	r3, [r7, #12]
 8007cde:	681b      	ldr	r3, [r3, #0]
 8007ce0:	68ba      	ldr	r2, [r7, #8]
 8007ce2:	609a      	str	r2, [r3, #8]
 8007ce4:	68fb      	ldr	r3, [r7, #12]
 8007ce6:	681b      	ldr	r3, [r3, #0]
 8007ce8:	687a      	ldr	r2, [r7, #4]
 8007cea:	60da      	str	r2, [r3, #12]
 8007cec:	bf00      	nop
 8007cee:	3714      	adds	r7, #20
 8007cf0:	46bd      	mov	sp, r7
 8007cf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cf6:	4770      	bx	lr

08007cf8 <DMA_CalcBaseAndBitshift>:
 8007cf8:	b480      	push	{r7}
 8007cfa:	b085      	sub	sp, #20
 8007cfc:	af00      	add	r7, sp, #0
 8007cfe:	6078      	str	r0, [r7, #4]
 8007d00:	687b      	ldr	r3, [r7, #4]
 8007d02:	681b      	ldr	r3, [r3, #0]
 8007d04:	b2db      	uxtb	r3, r3
 8007d06:	3b10      	subs	r3, #16
 8007d08:	4a14      	ldr	r2, [pc, #80]	; (8007d5c <DMA_CalcBaseAndBitshift+0x64>)
 8007d0a:	fba2 2303 	umull	r2, r3, r2, r3
 8007d0e:	091b      	lsrs	r3, r3, #4
 8007d10:	60fb      	str	r3, [r7, #12]
 8007d12:	4a13      	ldr	r2, [pc, #76]	; (8007d60 <DMA_CalcBaseAndBitshift+0x68>)
 8007d14:	68fb      	ldr	r3, [r7, #12]
 8007d16:	4413      	add	r3, r2
 8007d18:	781b      	ldrb	r3, [r3, #0]
 8007d1a:	461a      	mov	r2, r3
 8007d1c:	687b      	ldr	r3, [r7, #4]
 8007d1e:	65da      	str	r2, [r3, #92]	; 0x5c
 8007d20:	68fb      	ldr	r3, [r7, #12]
 8007d22:	2b03      	cmp	r3, #3
 8007d24:	d909      	bls.n	8007d3a <DMA_CalcBaseAndBitshift+0x42>
 8007d26:	687b      	ldr	r3, [r7, #4]
 8007d28:	681b      	ldr	r3, [r3, #0]
 8007d2a:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8007d2e:	f023 0303 	bic.w	r3, r3, #3
 8007d32:	1d1a      	adds	r2, r3, #4
 8007d34:	687b      	ldr	r3, [r7, #4]
 8007d36:	659a      	str	r2, [r3, #88]	; 0x58
 8007d38:	e007      	b.n	8007d4a <DMA_CalcBaseAndBitshift+0x52>
 8007d3a:	687b      	ldr	r3, [r7, #4]
 8007d3c:	681b      	ldr	r3, [r3, #0]
 8007d3e:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8007d42:	f023 0303 	bic.w	r3, r3, #3
 8007d46:	687a      	ldr	r2, [r7, #4]
 8007d48:	6593      	str	r3, [r2, #88]	; 0x58
 8007d4a:	687b      	ldr	r3, [r7, #4]
 8007d4c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007d4e:	4618      	mov	r0, r3
 8007d50:	3714      	adds	r7, #20
 8007d52:	46bd      	mov	sp, r7
 8007d54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d58:	4770      	bx	lr
 8007d5a:	bf00      	nop
 8007d5c:	aaaaaaab 	.word	0xaaaaaaab
 8007d60:	08010644 	.word	0x08010644

08007d64 <DMA_CheckFifoParam>:
 8007d64:	b480      	push	{r7}
 8007d66:	b085      	sub	sp, #20
 8007d68:	af00      	add	r7, sp, #0
 8007d6a:	6078      	str	r0, [r7, #4]
 8007d6c:	2300      	movs	r3, #0
 8007d6e:	73fb      	strb	r3, [r7, #15]
 8007d70:	687b      	ldr	r3, [r7, #4]
 8007d72:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007d74:	60bb      	str	r3, [r7, #8]
 8007d76:	687b      	ldr	r3, [r7, #4]
 8007d78:	699b      	ldr	r3, [r3, #24]
 8007d7a:	2b00      	cmp	r3, #0
 8007d7c:	d11f      	bne.n	8007dbe <DMA_CheckFifoParam+0x5a>
 8007d7e:	68bb      	ldr	r3, [r7, #8]
 8007d80:	2b03      	cmp	r3, #3
 8007d82:	d856      	bhi.n	8007e32 <DMA_CheckFifoParam+0xce>
 8007d84:	a201      	add	r2, pc, #4	; (adr r2, 8007d8c <DMA_CheckFifoParam+0x28>)
 8007d86:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007d8a:	bf00      	nop
 8007d8c:	08007d9d 	.word	0x08007d9d
 8007d90:	08007daf 	.word	0x08007daf
 8007d94:	08007d9d 	.word	0x08007d9d
 8007d98:	08007e33 	.word	0x08007e33
 8007d9c:	687b      	ldr	r3, [r7, #4]
 8007d9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007da0:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8007da4:	2b00      	cmp	r3, #0
 8007da6:	d046      	beq.n	8007e36 <DMA_CheckFifoParam+0xd2>
 8007da8:	2301      	movs	r3, #1
 8007daa:	73fb      	strb	r3, [r7, #15]
 8007dac:	e043      	b.n	8007e36 <DMA_CheckFifoParam+0xd2>
 8007dae:	687b      	ldr	r3, [r7, #4]
 8007db0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007db2:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8007db6:	d140      	bne.n	8007e3a <DMA_CheckFifoParam+0xd6>
 8007db8:	2301      	movs	r3, #1
 8007dba:	73fb      	strb	r3, [r7, #15]
 8007dbc:	e03d      	b.n	8007e3a <DMA_CheckFifoParam+0xd6>
 8007dbe:	687b      	ldr	r3, [r7, #4]
 8007dc0:	699b      	ldr	r3, [r3, #24]
 8007dc2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007dc6:	d121      	bne.n	8007e0c <DMA_CheckFifoParam+0xa8>
 8007dc8:	68bb      	ldr	r3, [r7, #8]
 8007dca:	2b03      	cmp	r3, #3
 8007dcc:	d837      	bhi.n	8007e3e <DMA_CheckFifoParam+0xda>
 8007dce:	a201      	add	r2, pc, #4	; (adr r2, 8007dd4 <DMA_CheckFifoParam+0x70>)
 8007dd0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007dd4:	08007de5 	.word	0x08007de5
 8007dd8:	08007deb 	.word	0x08007deb
 8007ddc:	08007de5 	.word	0x08007de5
 8007de0:	08007dfd 	.word	0x08007dfd
 8007de4:	2301      	movs	r3, #1
 8007de6:	73fb      	strb	r3, [r7, #15]
 8007de8:	e030      	b.n	8007e4c <DMA_CheckFifoParam+0xe8>
 8007dea:	687b      	ldr	r3, [r7, #4]
 8007dec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007dee:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8007df2:	2b00      	cmp	r3, #0
 8007df4:	d025      	beq.n	8007e42 <DMA_CheckFifoParam+0xde>
 8007df6:	2301      	movs	r3, #1
 8007df8:	73fb      	strb	r3, [r7, #15]
 8007dfa:	e022      	b.n	8007e42 <DMA_CheckFifoParam+0xde>
 8007dfc:	687b      	ldr	r3, [r7, #4]
 8007dfe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007e00:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8007e04:	d11f      	bne.n	8007e46 <DMA_CheckFifoParam+0xe2>
 8007e06:	2301      	movs	r3, #1
 8007e08:	73fb      	strb	r3, [r7, #15]
 8007e0a:	e01c      	b.n	8007e46 <DMA_CheckFifoParam+0xe2>
 8007e0c:	68bb      	ldr	r3, [r7, #8]
 8007e0e:	2b02      	cmp	r3, #2
 8007e10:	d903      	bls.n	8007e1a <DMA_CheckFifoParam+0xb6>
 8007e12:	68bb      	ldr	r3, [r7, #8]
 8007e14:	2b03      	cmp	r3, #3
 8007e16:	d003      	beq.n	8007e20 <DMA_CheckFifoParam+0xbc>
 8007e18:	e018      	b.n	8007e4c <DMA_CheckFifoParam+0xe8>
 8007e1a:	2301      	movs	r3, #1
 8007e1c:	73fb      	strb	r3, [r7, #15]
 8007e1e:	e015      	b.n	8007e4c <DMA_CheckFifoParam+0xe8>
 8007e20:	687b      	ldr	r3, [r7, #4]
 8007e22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007e24:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8007e28:	2b00      	cmp	r3, #0
 8007e2a:	d00e      	beq.n	8007e4a <DMA_CheckFifoParam+0xe6>
 8007e2c:	2301      	movs	r3, #1
 8007e2e:	73fb      	strb	r3, [r7, #15]
 8007e30:	e00b      	b.n	8007e4a <DMA_CheckFifoParam+0xe6>
 8007e32:	bf00      	nop
 8007e34:	e00a      	b.n	8007e4c <DMA_CheckFifoParam+0xe8>
 8007e36:	bf00      	nop
 8007e38:	e008      	b.n	8007e4c <DMA_CheckFifoParam+0xe8>
 8007e3a:	bf00      	nop
 8007e3c:	e006      	b.n	8007e4c <DMA_CheckFifoParam+0xe8>
 8007e3e:	bf00      	nop
 8007e40:	e004      	b.n	8007e4c <DMA_CheckFifoParam+0xe8>
 8007e42:	bf00      	nop
 8007e44:	e002      	b.n	8007e4c <DMA_CheckFifoParam+0xe8>
 8007e46:	bf00      	nop
 8007e48:	e000      	b.n	8007e4c <DMA_CheckFifoParam+0xe8>
 8007e4a:	bf00      	nop
 8007e4c:	7bfb      	ldrb	r3, [r7, #15]
 8007e4e:	4618      	mov	r0, r3
 8007e50:	3714      	adds	r7, #20
 8007e52:	46bd      	mov	sp, r7
 8007e54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e58:	4770      	bx	lr
 8007e5a:	bf00      	nop

08007e5c <HAL_FLASH_Program>:
 8007e5c:	b580      	push	{r7, lr}
 8007e5e:	b086      	sub	sp, #24
 8007e60:	af00      	add	r7, sp, #0
 8007e62:	60f8      	str	r0, [r7, #12]
 8007e64:	60b9      	str	r1, [r7, #8]
 8007e66:	e9c7 2300 	strd	r2, r3, [r7]
 8007e6a:	2301      	movs	r3, #1
 8007e6c:	75fb      	strb	r3, [r7, #23]
 8007e6e:	4b23      	ldr	r3, [pc, #140]	; (8007efc <HAL_FLASH_Program+0xa0>)
 8007e70:	7e1b      	ldrb	r3, [r3, #24]
 8007e72:	2b01      	cmp	r3, #1
 8007e74:	d101      	bne.n	8007e7a <HAL_FLASH_Program+0x1e>
 8007e76:	2302      	movs	r3, #2
 8007e78:	e03b      	b.n	8007ef2 <HAL_FLASH_Program+0x96>
 8007e7a:	4b20      	ldr	r3, [pc, #128]	; (8007efc <HAL_FLASH_Program+0xa0>)
 8007e7c:	2201      	movs	r2, #1
 8007e7e:	761a      	strb	r2, [r3, #24]
 8007e80:	f24c 3050 	movw	r0, #50000	; 0xc350
 8007e84:	f000 f870 	bl	8007f68 <FLASH_WaitForLastOperation>
 8007e88:	4603      	mov	r3, r0
 8007e8a:	75fb      	strb	r3, [r7, #23]
 8007e8c:	7dfb      	ldrb	r3, [r7, #23]
 8007e8e:	2b00      	cmp	r3, #0
 8007e90:	d12b      	bne.n	8007eea <HAL_FLASH_Program+0x8e>
 8007e92:	68fb      	ldr	r3, [r7, #12]
 8007e94:	2b00      	cmp	r3, #0
 8007e96:	d105      	bne.n	8007ea4 <HAL_FLASH_Program+0x48>
 8007e98:	783b      	ldrb	r3, [r7, #0]
 8007e9a:	4619      	mov	r1, r3
 8007e9c:	68b8      	ldr	r0, [r7, #8]
 8007e9e:	f000 f91b 	bl	80080d8 <FLASH_Program_Byte>
 8007ea2:	e016      	b.n	8007ed2 <HAL_FLASH_Program+0x76>
 8007ea4:	68fb      	ldr	r3, [r7, #12]
 8007ea6:	2b01      	cmp	r3, #1
 8007ea8:	d105      	bne.n	8007eb6 <HAL_FLASH_Program+0x5a>
 8007eaa:	883b      	ldrh	r3, [r7, #0]
 8007eac:	4619      	mov	r1, r3
 8007eae:	68b8      	ldr	r0, [r7, #8]
 8007eb0:	f000 f8ee 	bl	8008090 <FLASH_Program_HalfWord>
 8007eb4:	e00d      	b.n	8007ed2 <HAL_FLASH_Program+0x76>
 8007eb6:	68fb      	ldr	r3, [r7, #12]
 8007eb8:	2b02      	cmp	r3, #2
 8007eba:	d105      	bne.n	8007ec8 <HAL_FLASH_Program+0x6c>
 8007ebc:	683b      	ldr	r3, [r7, #0]
 8007ebe:	4619      	mov	r1, r3
 8007ec0:	68b8      	ldr	r0, [r7, #8]
 8007ec2:	f000 f8c3 	bl	800804c <FLASH_Program_Word>
 8007ec6:	e004      	b.n	8007ed2 <HAL_FLASH_Program+0x76>
 8007ec8:	e9d7 2300 	ldrd	r2, r3, [r7]
 8007ecc:	68b8      	ldr	r0, [r7, #8]
 8007ece:	f000 f88b 	bl	8007fe8 <FLASH_Program_DoubleWord>
 8007ed2:	f24c 3050 	movw	r0, #50000	; 0xc350
 8007ed6:	f000 f847 	bl	8007f68 <FLASH_WaitForLastOperation>
 8007eda:	4603      	mov	r3, r0
 8007edc:	75fb      	strb	r3, [r7, #23]
 8007ede:	4b08      	ldr	r3, [pc, #32]	; (8007f00 <HAL_FLASH_Program+0xa4>)
 8007ee0:	691b      	ldr	r3, [r3, #16]
 8007ee2:	4a07      	ldr	r2, [pc, #28]	; (8007f00 <HAL_FLASH_Program+0xa4>)
 8007ee4:	f023 0301 	bic.w	r3, r3, #1
 8007ee8:	6113      	str	r3, [r2, #16]
 8007eea:	4b04      	ldr	r3, [pc, #16]	; (8007efc <HAL_FLASH_Program+0xa0>)
 8007eec:	2200      	movs	r2, #0
 8007eee:	761a      	strb	r2, [r3, #24]
 8007ef0:	7dfb      	ldrb	r3, [r7, #23]
 8007ef2:	4618      	mov	r0, r3
 8007ef4:	3718      	adds	r7, #24
 8007ef6:	46bd      	mov	sp, r7
 8007ef8:	bd80      	pop	{r7, pc}
 8007efa:	bf00      	nop
 8007efc:	20000b18 	.word	0x20000b18
 8007f00:	40023c00 	.word	0x40023c00

08007f04 <HAL_FLASH_Unlock>:
 8007f04:	b480      	push	{r7}
 8007f06:	b083      	sub	sp, #12
 8007f08:	af00      	add	r7, sp, #0
 8007f0a:	2300      	movs	r3, #0
 8007f0c:	71fb      	strb	r3, [r7, #7]
 8007f0e:	4b0b      	ldr	r3, [pc, #44]	; (8007f3c <HAL_FLASH_Unlock+0x38>)
 8007f10:	691b      	ldr	r3, [r3, #16]
 8007f12:	2b00      	cmp	r3, #0
 8007f14:	da0b      	bge.n	8007f2e <HAL_FLASH_Unlock+0x2a>
 8007f16:	4b09      	ldr	r3, [pc, #36]	; (8007f3c <HAL_FLASH_Unlock+0x38>)
 8007f18:	4a09      	ldr	r2, [pc, #36]	; (8007f40 <HAL_FLASH_Unlock+0x3c>)
 8007f1a:	605a      	str	r2, [r3, #4]
 8007f1c:	4b07      	ldr	r3, [pc, #28]	; (8007f3c <HAL_FLASH_Unlock+0x38>)
 8007f1e:	4a09      	ldr	r2, [pc, #36]	; (8007f44 <HAL_FLASH_Unlock+0x40>)
 8007f20:	605a      	str	r2, [r3, #4]
 8007f22:	4b06      	ldr	r3, [pc, #24]	; (8007f3c <HAL_FLASH_Unlock+0x38>)
 8007f24:	691b      	ldr	r3, [r3, #16]
 8007f26:	2b00      	cmp	r3, #0
 8007f28:	da01      	bge.n	8007f2e <HAL_FLASH_Unlock+0x2a>
 8007f2a:	2301      	movs	r3, #1
 8007f2c:	71fb      	strb	r3, [r7, #7]
 8007f2e:	79fb      	ldrb	r3, [r7, #7]
 8007f30:	4618      	mov	r0, r3
 8007f32:	370c      	adds	r7, #12
 8007f34:	46bd      	mov	sp, r7
 8007f36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f3a:	4770      	bx	lr
 8007f3c:	40023c00 	.word	0x40023c00
 8007f40:	45670123 	.word	0x45670123
 8007f44:	cdef89ab 	.word	0xcdef89ab

08007f48 <HAL_FLASH_Lock>:
 8007f48:	b480      	push	{r7}
 8007f4a:	af00      	add	r7, sp, #0
 8007f4c:	4b05      	ldr	r3, [pc, #20]	; (8007f64 <HAL_FLASH_Lock+0x1c>)
 8007f4e:	691b      	ldr	r3, [r3, #16]
 8007f50:	4a04      	ldr	r2, [pc, #16]	; (8007f64 <HAL_FLASH_Lock+0x1c>)
 8007f52:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8007f56:	6113      	str	r3, [r2, #16]
 8007f58:	2300      	movs	r3, #0
 8007f5a:	4618      	mov	r0, r3
 8007f5c:	46bd      	mov	sp, r7
 8007f5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f62:	4770      	bx	lr
 8007f64:	40023c00 	.word	0x40023c00

08007f68 <FLASH_WaitForLastOperation>:
 8007f68:	b580      	push	{r7, lr}
 8007f6a:	b084      	sub	sp, #16
 8007f6c:	af00      	add	r7, sp, #0
 8007f6e:	6078      	str	r0, [r7, #4]
 8007f70:	2300      	movs	r3, #0
 8007f72:	60fb      	str	r3, [r7, #12]
 8007f74:	4b1a      	ldr	r3, [pc, #104]	; (8007fe0 <FLASH_WaitForLastOperation+0x78>)
 8007f76:	2200      	movs	r2, #0
 8007f78:	61da      	str	r2, [r3, #28]
 8007f7a:	f7fe fc83 	bl	8006884 <HAL_GetTick>
 8007f7e:	60f8      	str	r0, [r7, #12]
 8007f80:	e010      	b.n	8007fa4 <FLASH_WaitForLastOperation+0x3c>
 8007f82:	687b      	ldr	r3, [r7, #4]
 8007f84:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007f88:	d00c      	beq.n	8007fa4 <FLASH_WaitForLastOperation+0x3c>
 8007f8a:	687b      	ldr	r3, [r7, #4]
 8007f8c:	2b00      	cmp	r3, #0
 8007f8e:	d007      	beq.n	8007fa0 <FLASH_WaitForLastOperation+0x38>
 8007f90:	f7fe fc78 	bl	8006884 <HAL_GetTick>
 8007f94:	4602      	mov	r2, r0
 8007f96:	68fb      	ldr	r3, [r7, #12]
 8007f98:	1ad3      	subs	r3, r2, r3
 8007f9a:	687a      	ldr	r2, [r7, #4]
 8007f9c:	429a      	cmp	r2, r3
 8007f9e:	d201      	bcs.n	8007fa4 <FLASH_WaitForLastOperation+0x3c>
 8007fa0:	2303      	movs	r3, #3
 8007fa2:	e019      	b.n	8007fd8 <FLASH_WaitForLastOperation+0x70>
 8007fa4:	4b0f      	ldr	r3, [pc, #60]	; (8007fe4 <FLASH_WaitForLastOperation+0x7c>)
 8007fa6:	68db      	ldr	r3, [r3, #12]
 8007fa8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8007fac:	2b00      	cmp	r3, #0
 8007fae:	d1e8      	bne.n	8007f82 <FLASH_WaitForLastOperation+0x1a>
 8007fb0:	4b0c      	ldr	r3, [pc, #48]	; (8007fe4 <FLASH_WaitForLastOperation+0x7c>)
 8007fb2:	68db      	ldr	r3, [r3, #12]
 8007fb4:	f003 0301 	and.w	r3, r3, #1
 8007fb8:	2b00      	cmp	r3, #0
 8007fba:	d002      	beq.n	8007fc2 <FLASH_WaitForLastOperation+0x5a>
 8007fbc:	4b09      	ldr	r3, [pc, #36]	; (8007fe4 <FLASH_WaitForLastOperation+0x7c>)
 8007fbe:	2201      	movs	r2, #1
 8007fc0:	60da      	str	r2, [r3, #12]
 8007fc2:	4b08      	ldr	r3, [pc, #32]	; (8007fe4 <FLASH_WaitForLastOperation+0x7c>)
 8007fc4:	68db      	ldr	r3, [r3, #12]
 8007fc6:	f403 73f9 	and.w	r3, r3, #498	; 0x1f2
 8007fca:	2b00      	cmp	r3, #0
 8007fcc:	d003      	beq.n	8007fd6 <FLASH_WaitForLastOperation+0x6e>
 8007fce:	f000 f8a5 	bl	800811c <FLASH_SetErrorCode>
 8007fd2:	2301      	movs	r3, #1
 8007fd4:	e000      	b.n	8007fd8 <FLASH_WaitForLastOperation+0x70>
 8007fd6:	2300      	movs	r3, #0
 8007fd8:	4618      	mov	r0, r3
 8007fda:	3710      	adds	r7, #16
 8007fdc:	46bd      	mov	sp, r7
 8007fde:	bd80      	pop	{r7, pc}
 8007fe0:	20000b18 	.word	0x20000b18
 8007fe4:	40023c00 	.word	0x40023c00

08007fe8 <FLASH_Program_DoubleWord>:
 8007fe8:	b480      	push	{r7}
 8007fea:	b085      	sub	sp, #20
 8007fec:	af00      	add	r7, sp, #0
 8007fee:	60f8      	str	r0, [r7, #12]
 8007ff0:	e9c7 2300 	strd	r2, r3, [r7]
 8007ff4:	4b14      	ldr	r3, [pc, #80]	; (8008048 <FLASH_Program_DoubleWord+0x60>)
 8007ff6:	691b      	ldr	r3, [r3, #16]
 8007ff8:	4a13      	ldr	r2, [pc, #76]	; (8008048 <FLASH_Program_DoubleWord+0x60>)
 8007ffa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007ffe:	6113      	str	r3, [r2, #16]
 8008000:	4b11      	ldr	r3, [pc, #68]	; (8008048 <FLASH_Program_DoubleWord+0x60>)
 8008002:	691b      	ldr	r3, [r3, #16]
 8008004:	4a10      	ldr	r2, [pc, #64]	; (8008048 <FLASH_Program_DoubleWord+0x60>)
 8008006:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 800800a:	6113      	str	r3, [r2, #16]
 800800c:	4b0e      	ldr	r3, [pc, #56]	; (8008048 <FLASH_Program_DoubleWord+0x60>)
 800800e:	691b      	ldr	r3, [r3, #16]
 8008010:	4a0d      	ldr	r2, [pc, #52]	; (8008048 <FLASH_Program_DoubleWord+0x60>)
 8008012:	f043 0301 	orr.w	r3, r3, #1
 8008016:	6113      	str	r3, [r2, #16]
 8008018:	68fb      	ldr	r3, [r7, #12]
 800801a:	683a      	ldr	r2, [r7, #0]
 800801c:	601a      	str	r2, [r3, #0]
 800801e:	f3bf 8f6f 	isb	sy
 8008022:	bf00      	nop
 8008024:	e9d7 0100 	ldrd	r0, r1, [r7]
 8008028:	f04f 0200 	mov.w	r2, #0
 800802c:	f04f 0300 	mov.w	r3, #0
 8008030:	000a      	movs	r2, r1
 8008032:	2300      	movs	r3, #0
 8008034:	68f9      	ldr	r1, [r7, #12]
 8008036:	3104      	adds	r1, #4
 8008038:	4613      	mov	r3, r2
 800803a:	600b      	str	r3, [r1, #0]
 800803c:	bf00      	nop
 800803e:	3714      	adds	r7, #20
 8008040:	46bd      	mov	sp, r7
 8008042:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008046:	4770      	bx	lr
 8008048:	40023c00 	.word	0x40023c00

0800804c <FLASH_Program_Word>:
 800804c:	b480      	push	{r7}
 800804e:	b083      	sub	sp, #12
 8008050:	af00      	add	r7, sp, #0
 8008052:	6078      	str	r0, [r7, #4]
 8008054:	6039      	str	r1, [r7, #0]
 8008056:	4b0d      	ldr	r3, [pc, #52]	; (800808c <FLASH_Program_Word+0x40>)
 8008058:	691b      	ldr	r3, [r3, #16]
 800805a:	4a0c      	ldr	r2, [pc, #48]	; (800808c <FLASH_Program_Word+0x40>)
 800805c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008060:	6113      	str	r3, [r2, #16]
 8008062:	4b0a      	ldr	r3, [pc, #40]	; (800808c <FLASH_Program_Word+0x40>)
 8008064:	691b      	ldr	r3, [r3, #16]
 8008066:	4a09      	ldr	r2, [pc, #36]	; (800808c <FLASH_Program_Word+0x40>)
 8008068:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800806c:	6113      	str	r3, [r2, #16]
 800806e:	4b07      	ldr	r3, [pc, #28]	; (800808c <FLASH_Program_Word+0x40>)
 8008070:	691b      	ldr	r3, [r3, #16]
 8008072:	4a06      	ldr	r2, [pc, #24]	; (800808c <FLASH_Program_Word+0x40>)
 8008074:	f043 0301 	orr.w	r3, r3, #1
 8008078:	6113      	str	r3, [r2, #16]
 800807a:	687b      	ldr	r3, [r7, #4]
 800807c:	683a      	ldr	r2, [r7, #0]
 800807e:	601a      	str	r2, [r3, #0]
 8008080:	bf00      	nop
 8008082:	370c      	adds	r7, #12
 8008084:	46bd      	mov	sp, r7
 8008086:	f85d 7b04 	ldr.w	r7, [sp], #4
 800808a:	4770      	bx	lr
 800808c:	40023c00 	.word	0x40023c00

08008090 <FLASH_Program_HalfWord>:
 8008090:	b480      	push	{r7}
 8008092:	b083      	sub	sp, #12
 8008094:	af00      	add	r7, sp, #0
 8008096:	6078      	str	r0, [r7, #4]
 8008098:	460b      	mov	r3, r1
 800809a:	807b      	strh	r3, [r7, #2]
 800809c:	4b0d      	ldr	r3, [pc, #52]	; (80080d4 <FLASH_Program_HalfWord+0x44>)
 800809e:	691b      	ldr	r3, [r3, #16]
 80080a0:	4a0c      	ldr	r2, [pc, #48]	; (80080d4 <FLASH_Program_HalfWord+0x44>)
 80080a2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80080a6:	6113      	str	r3, [r2, #16]
 80080a8:	4b0a      	ldr	r3, [pc, #40]	; (80080d4 <FLASH_Program_HalfWord+0x44>)
 80080aa:	691b      	ldr	r3, [r3, #16]
 80080ac:	4a09      	ldr	r2, [pc, #36]	; (80080d4 <FLASH_Program_HalfWord+0x44>)
 80080ae:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80080b2:	6113      	str	r3, [r2, #16]
 80080b4:	4b07      	ldr	r3, [pc, #28]	; (80080d4 <FLASH_Program_HalfWord+0x44>)
 80080b6:	691b      	ldr	r3, [r3, #16]
 80080b8:	4a06      	ldr	r2, [pc, #24]	; (80080d4 <FLASH_Program_HalfWord+0x44>)
 80080ba:	f043 0301 	orr.w	r3, r3, #1
 80080be:	6113      	str	r3, [r2, #16]
 80080c0:	687b      	ldr	r3, [r7, #4]
 80080c2:	887a      	ldrh	r2, [r7, #2]
 80080c4:	801a      	strh	r2, [r3, #0]
 80080c6:	bf00      	nop
 80080c8:	370c      	adds	r7, #12
 80080ca:	46bd      	mov	sp, r7
 80080cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080d0:	4770      	bx	lr
 80080d2:	bf00      	nop
 80080d4:	40023c00 	.word	0x40023c00

080080d8 <FLASH_Program_Byte>:
 80080d8:	b480      	push	{r7}
 80080da:	b083      	sub	sp, #12
 80080dc:	af00      	add	r7, sp, #0
 80080de:	6078      	str	r0, [r7, #4]
 80080e0:	460b      	mov	r3, r1
 80080e2:	70fb      	strb	r3, [r7, #3]
 80080e4:	4b0c      	ldr	r3, [pc, #48]	; (8008118 <FLASH_Program_Byte+0x40>)
 80080e6:	691b      	ldr	r3, [r3, #16]
 80080e8:	4a0b      	ldr	r2, [pc, #44]	; (8008118 <FLASH_Program_Byte+0x40>)
 80080ea:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80080ee:	6113      	str	r3, [r2, #16]
 80080f0:	4b09      	ldr	r3, [pc, #36]	; (8008118 <FLASH_Program_Byte+0x40>)
 80080f2:	4a09      	ldr	r2, [pc, #36]	; (8008118 <FLASH_Program_Byte+0x40>)
 80080f4:	691b      	ldr	r3, [r3, #16]
 80080f6:	6113      	str	r3, [r2, #16]
 80080f8:	4b07      	ldr	r3, [pc, #28]	; (8008118 <FLASH_Program_Byte+0x40>)
 80080fa:	691b      	ldr	r3, [r3, #16]
 80080fc:	4a06      	ldr	r2, [pc, #24]	; (8008118 <FLASH_Program_Byte+0x40>)
 80080fe:	f043 0301 	orr.w	r3, r3, #1
 8008102:	6113      	str	r3, [r2, #16]
 8008104:	687b      	ldr	r3, [r7, #4]
 8008106:	78fa      	ldrb	r2, [r7, #3]
 8008108:	701a      	strb	r2, [r3, #0]
 800810a:	bf00      	nop
 800810c:	370c      	adds	r7, #12
 800810e:	46bd      	mov	sp, r7
 8008110:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008114:	4770      	bx	lr
 8008116:	bf00      	nop
 8008118:	40023c00 	.word	0x40023c00

0800811c <FLASH_SetErrorCode>:
 800811c:	b480      	push	{r7}
 800811e:	af00      	add	r7, sp, #0
 8008120:	4b2f      	ldr	r3, [pc, #188]	; (80081e0 <FLASH_SetErrorCode+0xc4>)
 8008122:	68db      	ldr	r3, [r3, #12]
 8008124:	f003 0310 	and.w	r3, r3, #16
 8008128:	2b00      	cmp	r3, #0
 800812a:	d008      	beq.n	800813e <FLASH_SetErrorCode+0x22>
 800812c:	4b2d      	ldr	r3, [pc, #180]	; (80081e4 <FLASH_SetErrorCode+0xc8>)
 800812e:	69db      	ldr	r3, [r3, #28]
 8008130:	f043 0310 	orr.w	r3, r3, #16
 8008134:	4a2b      	ldr	r2, [pc, #172]	; (80081e4 <FLASH_SetErrorCode+0xc8>)
 8008136:	61d3      	str	r3, [r2, #28]
 8008138:	4b29      	ldr	r3, [pc, #164]	; (80081e0 <FLASH_SetErrorCode+0xc4>)
 800813a:	2210      	movs	r2, #16
 800813c:	60da      	str	r2, [r3, #12]
 800813e:	4b28      	ldr	r3, [pc, #160]	; (80081e0 <FLASH_SetErrorCode+0xc4>)
 8008140:	68db      	ldr	r3, [r3, #12]
 8008142:	f003 0320 	and.w	r3, r3, #32
 8008146:	2b00      	cmp	r3, #0
 8008148:	d008      	beq.n	800815c <FLASH_SetErrorCode+0x40>
 800814a:	4b26      	ldr	r3, [pc, #152]	; (80081e4 <FLASH_SetErrorCode+0xc8>)
 800814c:	69db      	ldr	r3, [r3, #28]
 800814e:	f043 0308 	orr.w	r3, r3, #8
 8008152:	4a24      	ldr	r2, [pc, #144]	; (80081e4 <FLASH_SetErrorCode+0xc8>)
 8008154:	61d3      	str	r3, [r2, #28]
 8008156:	4b22      	ldr	r3, [pc, #136]	; (80081e0 <FLASH_SetErrorCode+0xc4>)
 8008158:	2220      	movs	r2, #32
 800815a:	60da      	str	r2, [r3, #12]
 800815c:	4b20      	ldr	r3, [pc, #128]	; (80081e0 <FLASH_SetErrorCode+0xc4>)
 800815e:	68db      	ldr	r3, [r3, #12]
 8008160:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008164:	2b00      	cmp	r3, #0
 8008166:	d008      	beq.n	800817a <FLASH_SetErrorCode+0x5e>
 8008168:	4b1e      	ldr	r3, [pc, #120]	; (80081e4 <FLASH_SetErrorCode+0xc8>)
 800816a:	69db      	ldr	r3, [r3, #28]
 800816c:	f043 0304 	orr.w	r3, r3, #4
 8008170:	4a1c      	ldr	r2, [pc, #112]	; (80081e4 <FLASH_SetErrorCode+0xc8>)
 8008172:	61d3      	str	r3, [r2, #28]
 8008174:	4b1a      	ldr	r3, [pc, #104]	; (80081e0 <FLASH_SetErrorCode+0xc4>)
 8008176:	2240      	movs	r2, #64	; 0x40
 8008178:	60da      	str	r2, [r3, #12]
 800817a:	4b19      	ldr	r3, [pc, #100]	; (80081e0 <FLASH_SetErrorCode+0xc4>)
 800817c:	68db      	ldr	r3, [r3, #12]
 800817e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008182:	2b00      	cmp	r3, #0
 8008184:	d008      	beq.n	8008198 <FLASH_SetErrorCode+0x7c>
 8008186:	4b17      	ldr	r3, [pc, #92]	; (80081e4 <FLASH_SetErrorCode+0xc8>)
 8008188:	69db      	ldr	r3, [r3, #28]
 800818a:	f043 0302 	orr.w	r3, r3, #2
 800818e:	4a15      	ldr	r2, [pc, #84]	; (80081e4 <FLASH_SetErrorCode+0xc8>)
 8008190:	61d3      	str	r3, [r2, #28]
 8008192:	4b13      	ldr	r3, [pc, #76]	; (80081e0 <FLASH_SetErrorCode+0xc4>)
 8008194:	2280      	movs	r2, #128	; 0x80
 8008196:	60da      	str	r2, [r3, #12]
 8008198:	4b11      	ldr	r3, [pc, #68]	; (80081e0 <FLASH_SetErrorCode+0xc4>)
 800819a:	68db      	ldr	r3, [r3, #12]
 800819c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80081a0:	2b00      	cmp	r3, #0
 80081a2:	d009      	beq.n	80081b8 <FLASH_SetErrorCode+0x9c>
 80081a4:	4b0f      	ldr	r3, [pc, #60]	; (80081e4 <FLASH_SetErrorCode+0xc8>)
 80081a6:	69db      	ldr	r3, [r3, #28]
 80081a8:	f043 0301 	orr.w	r3, r3, #1
 80081ac:	4a0d      	ldr	r2, [pc, #52]	; (80081e4 <FLASH_SetErrorCode+0xc8>)
 80081ae:	61d3      	str	r3, [r2, #28]
 80081b0:	4b0b      	ldr	r3, [pc, #44]	; (80081e0 <FLASH_SetErrorCode+0xc4>)
 80081b2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80081b6:	60da      	str	r2, [r3, #12]
 80081b8:	4b09      	ldr	r3, [pc, #36]	; (80081e0 <FLASH_SetErrorCode+0xc4>)
 80081ba:	68db      	ldr	r3, [r3, #12]
 80081bc:	f003 0302 	and.w	r3, r3, #2
 80081c0:	2b00      	cmp	r3, #0
 80081c2:	d008      	beq.n	80081d6 <FLASH_SetErrorCode+0xba>
 80081c4:	4b07      	ldr	r3, [pc, #28]	; (80081e4 <FLASH_SetErrorCode+0xc8>)
 80081c6:	69db      	ldr	r3, [r3, #28]
 80081c8:	f043 0320 	orr.w	r3, r3, #32
 80081cc:	4a05      	ldr	r2, [pc, #20]	; (80081e4 <FLASH_SetErrorCode+0xc8>)
 80081ce:	61d3      	str	r3, [r2, #28]
 80081d0:	4b03      	ldr	r3, [pc, #12]	; (80081e0 <FLASH_SetErrorCode+0xc4>)
 80081d2:	2202      	movs	r2, #2
 80081d4:	60da      	str	r2, [r3, #12]
 80081d6:	bf00      	nop
 80081d8:	46bd      	mov	sp, r7
 80081da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081de:	4770      	bx	lr
 80081e0:	40023c00 	.word	0x40023c00
 80081e4:	20000b18 	.word	0x20000b18

080081e8 <FLASH_Erase_Sector>:
 80081e8:	b480      	push	{r7}
 80081ea:	b085      	sub	sp, #20
 80081ec:	af00      	add	r7, sp, #0
 80081ee:	6078      	str	r0, [r7, #4]
 80081f0:	460b      	mov	r3, r1
 80081f2:	70fb      	strb	r3, [r7, #3]
 80081f4:	2300      	movs	r3, #0
 80081f6:	60fb      	str	r3, [r7, #12]
 80081f8:	78fb      	ldrb	r3, [r7, #3]
 80081fa:	2b00      	cmp	r3, #0
 80081fc:	d102      	bne.n	8008204 <FLASH_Erase_Sector+0x1c>
 80081fe:	2300      	movs	r3, #0
 8008200:	60fb      	str	r3, [r7, #12]
 8008202:	e010      	b.n	8008226 <FLASH_Erase_Sector+0x3e>
 8008204:	78fb      	ldrb	r3, [r7, #3]
 8008206:	2b01      	cmp	r3, #1
 8008208:	d103      	bne.n	8008212 <FLASH_Erase_Sector+0x2a>
 800820a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800820e:	60fb      	str	r3, [r7, #12]
 8008210:	e009      	b.n	8008226 <FLASH_Erase_Sector+0x3e>
 8008212:	78fb      	ldrb	r3, [r7, #3]
 8008214:	2b02      	cmp	r3, #2
 8008216:	d103      	bne.n	8008220 <FLASH_Erase_Sector+0x38>
 8008218:	f44f 7300 	mov.w	r3, #512	; 0x200
 800821c:	60fb      	str	r3, [r7, #12]
 800821e:	e002      	b.n	8008226 <FLASH_Erase_Sector+0x3e>
 8008220:	f44f 7340 	mov.w	r3, #768	; 0x300
 8008224:	60fb      	str	r3, [r7, #12]
 8008226:	4b13      	ldr	r3, [pc, #76]	; (8008274 <FLASH_Erase_Sector+0x8c>)
 8008228:	691b      	ldr	r3, [r3, #16]
 800822a:	4a12      	ldr	r2, [pc, #72]	; (8008274 <FLASH_Erase_Sector+0x8c>)
 800822c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008230:	6113      	str	r3, [r2, #16]
 8008232:	4b10      	ldr	r3, [pc, #64]	; (8008274 <FLASH_Erase_Sector+0x8c>)
 8008234:	691a      	ldr	r2, [r3, #16]
 8008236:	490f      	ldr	r1, [pc, #60]	; (8008274 <FLASH_Erase_Sector+0x8c>)
 8008238:	68fb      	ldr	r3, [r7, #12]
 800823a:	4313      	orrs	r3, r2
 800823c:	610b      	str	r3, [r1, #16]
 800823e:	4b0d      	ldr	r3, [pc, #52]	; (8008274 <FLASH_Erase_Sector+0x8c>)
 8008240:	691b      	ldr	r3, [r3, #16]
 8008242:	4a0c      	ldr	r2, [pc, #48]	; (8008274 <FLASH_Erase_Sector+0x8c>)
 8008244:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8008248:	6113      	str	r3, [r2, #16]
 800824a:	4b0a      	ldr	r3, [pc, #40]	; (8008274 <FLASH_Erase_Sector+0x8c>)
 800824c:	691a      	ldr	r2, [r3, #16]
 800824e:	687b      	ldr	r3, [r7, #4]
 8008250:	00db      	lsls	r3, r3, #3
 8008252:	4313      	orrs	r3, r2
 8008254:	4a07      	ldr	r2, [pc, #28]	; (8008274 <FLASH_Erase_Sector+0x8c>)
 8008256:	f043 0302 	orr.w	r3, r3, #2
 800825a:	6113      	str	r3, [r2, #16]
 800825c:	4b05      	ldr	r3, [pc, #20]	; (8008274 <FLASH_Erase_Sector+0x8c>)
 800825e:	691b      	ldr	r3, [r3, #16]
 8008260:	4a04      	ldr	r2, [pc, #16]	; (8008274 <FLASH_Erase_Sector+0x8c>)
 8008262:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008266:	6113      	str	r3, [r2, #16]
 8008268:	bf00      	nop
 800826a:	3714      	adds	r7, #20
 800826c:	46bd      	mov	sp, r7
 800826e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008272:	4770      	bx	lr
 8008274:	40023c00 	.word	0x40023c00

08008278 <HAL_GPIO_Init>:
 8008278:	b480      	push	{r7}
 800827a:	b089      	sub	sp, #36	; 0x24
 800827c:	af00      	add	r7, sp, #0
 800827e:	6078      	str	r0, [r7, #4]
 8008280:	6039      	str	r1, [r7, #0]
 8008282:	2300      	movs	r3, #0
 8008284:	617b      	str	r3, [r7, #20]
 8008286:	2300      	movs	r3, #0
 8008288:	613b      	str	r3, [r7, #16]
 800828a:	2300      	movs	r3, #0
 800828c:	61bb      	str	r3, [r7, #24]
 800828e:	2300      	movs	r3, #0
 8008290:	61fb      	str	r3, [r7, #28]
 8008292:	e165      	b.n	8008560 <HAL_GPIO_Init+0x2e8>
 8008294:	2201      	movs	r2, #1
 8008296:	69fb      	ldr	r3, [r7, #28]
 8008298:	fa02 f303 	lsl.w	r3, r2, r3
 800829c:	617b      	str	r3, [r7, #20]
 800829e:	683b      	ldr	r3, [r7, #0]
 80082a0:	681b      	ldr	r3, [r3, #0]
 80082a2:	697a      	ldr	r2, [r7, #20]
 80082a4:	4013      	ands	r3, r2
 80082a6:	613b      	str	r3, [r7, #16]
 80082a8:	693a      	ldr	r2, [r7, #16]
 80082aa:	697b      	ldr	r3, [r7, #20]
 80082ac:	429a      	cmp	r2, r3
 80082ae:	f040 8154 	bne.w	800855a <HAL_GPIO_Init+0x2e2>
 80082b2:	683b      	ldr	r3, [r7, #0]
 80082b4:	685b      	ldr	r3, [r3, #4]
 80082b6:	f003 0303 	and.w	r3, r3, #3
 80082ba:	2b01      	cmp	r3, #1
 80082bc:	d005      	beq.n	80082ca <HAL_GPIO_Init+0x52>
 80082be:	683b      	ldr	r3, [r7, #0]
 80082c0:	685b      	ldr	r3, [r3, #4]
 80082c2:	f003 0303 	and.w	r3, r3, #3
 80082c6:	2b02      	cmp	r3, #2
 80082c8:	d130      	bne.n	800832c <HAL_GPIO_Init+0xb4>
 80082ca:	687b      	ldr	r3, [r7, #4]
 80082cc:	689b      	ldr	r3, [r3, #8]
 80082ce:	61bb      	str	r3, [r7, #24]
 80082d0:	69fb      	ldr	r3, [r7, #28]
 80082d2:	005b      	lsls	r3, r3, #1
 80082d4:	2203      	movs	r2, #3
 80082d6:	fa02 f303 	lsl.w	r3, r2, r3
 80082da:	43db      	mvns	r3, r3
 80082dc:	69ba      	ldr	r2, [r7, #24]
 80082de:	4013      	ands	r3, r2
 80082e0:	61bb      	str	r3, [r7, #24]
 80082e2:	683b      	ldr	r3, [r7, #0]
 80082e4:	68da      	ldr	r2, [r3, #12]
 80082e6:	69fb      	ldr	r3, [r7, #28]
 80082e8:	005b      	lsls	r3, r3, #1
 80082ea:	fa02 f303 	lsl.w	r3, r2, r3
 80082ee:	69ba      	ldr	r2, [r7, #24]
 80082f0:	4313      	orrs	r3, r2
 80082f2:	61bb      	str	r3, [r7, #24]
 80082f4:	687b      	ldr	r3, [r7, #4]
 80082f6:	69ba      	ldr	r2, [r7, #24]
 80082f8:	609a      	str	r2, [r3, #8]
 80082fa:	687b      	ldr	r3, [r7, #4]
 80082fc:	685b      	ldr	r3, [r3, #4]
 80082fe:	61bb      	str	r3, [r7, #24]
 8008300:	2201      	movs	r2, #1
 8008302:	69fb      	ldr	r3, [r7, #28]
 8008304:	fa02 f303 	lsl.w	r3, r2, r3
 8008308:	43db      	mvns	r3, r3
 800830a:	69ba      	ldr	r2, [r7, #24]
 800830c:	4013      	ands	r3, r2
 800830e:	61bb      	str	r3, [r7, #24]
 8008310:	683b      	ldr	r3, [r7, #0]
 8008312:	685b      	ldr	r3, [r3, #4]
 8008314:	091b      	lsrs	r3, r3, #4
 8008316:	f003 0201 	and.w	r2, r3, #1
 800831a:	69fb      	ldr	r3, [r7, #28]
 800831c:	fa02 f303 	lsl.w	r3, r2, r3
 8008320:	69ba      	ldr	r2, [r7, #24]
 8008322:	4313      	orrs	r3, r2
 8008324:	61bb      	str	r3, [r7, #24]
 8008326:	687b      	ldr	r3, [r7, #4]
 8008328:	69ba      	ldr	r2, [r7, #24]
 800832a:	605a      	str	r2, [r3, #4]
 800832c:	683b      	ldr	r3, [r7, #0]
 800832e:	685b      	ldr	r3, [r3, #4]
 8008330:	f003 0303 	and.w	r3, r3, #3
 8008334:	2b03      	cmp	r3, #3
 8008336:	d017      	beq.n	8008368 <HAL_GPIO_Init+0xf0>
 8008338:	687b      	ldr	r3, [r7, #4]
 800833a:	68db      	ldr	r3, [r3, #12]
 800833c:	61bb      	str	r3, [r7, #24]
 800833e:	69fb      	ldr	r3, [r7, #28]
 8008340:	005b      	lsls	r3, r3, #1
 8008342:	2203      	movs	r2, #3
 8008344:	fa02 f303 	lsl.w	r3, r2, r3
 8008348:	43db      	mvns	r3, r3
 800834a:	69ba      	ldr	r2, [r7, #24]
 800834c:	4013      	ands	r3, r2
 800834e:	61bb      	str	r3, [r7, #24]
 8008350:	683b      	ldr	r3, [r7, #0]
 8008352:	689a      	ldr	r2, [r3, #8]
 8008354:	69fb      	ldr	r3, [r7, #28]
 8008356:	005b      	lsls	r3, r3, #1
 8008358:	fa02 f303 	lsl.w	r3, r2, r3
 800835c:	69ba      	ldr	r2, [r7, #24]
 800835e:	4313      	orrs	r3, r2
 8008360:	61bb      	str	r3, [r7, #24]
 8008362:	687b      	ldr	r3, [r7, #4]
 8008364:	69ba      	ldr	r2, [r7, #24]
 8008366:	60da      	str	r2, [r3, #12]
 8008368:	683b      	ldr	r3, [r7, #0]
 800836a:	685b      	ldr	r3, [r3, #4]
 800836c:	f003 0303 	and.w	r3, r3, #3
 8008370:	2b02      	cmp	r3, #2
 8008372:	d123      	bne.n	80083bc <HAL_GPIO_Init+0x144>
 8008374:	69fb      	ldr	r3, [r7, #28]
 8008376:	08da      	lsrs	r2, r3, #3
 8008378:	687b      	ldr	r3, [r7, #4]
 800837a:	3208      	adds	r2, #8
 800837c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008380:	61bb      	str	r3, [r7, #24]
 8008382:	69fb      	ldr	r3, [r7, #28]
 8008384:	f003 0307 	and.w	r3, r3, #7
 8008388:	009b      	lsls	r3, r3, #2
 800838a:	220f      	movs	r2, #15
 800838c:	fa02 f303 	lsl.w	r3, r2, r3
 8008390:	43db      	mvns	r3, r3
 8008392:	69ba      	ldr	r2, [r7, #24]
 8008394:	4013      	ands	r3, r2
 8008396:	61bb      	str	r3, [r7, #24]
 8008398:	683b      	ldr	r3, [r7, #0]
 800839a:	691a      	ldr	r2, [r3, #16]
 800839c:	69fb      	ldr	r3, [r7, #28]
 800839e:	f003 0307 	and.w	r3, r3, #7
 80083a2:	009b      	lsls	r3, r3, #2
 80083a4:	fa02 f303 	lsl.w	r3, r2, r3
 80083a8:	69ba      	ldr	r2, [r7, #24]
 80083aa:	4313      	orrs	r3, r2
 80083ac:	61bb      	str	r3, [r7, #24]
 80083ae:	69fb      	ldr	r3, [r7, #28]
 80083b0:	08da      	lsrs	r2, r3, #3
 80083b2:	687b      	ldr	r3, [r7, #4]
 80083b4:	3208      	adds	r2, #8
 80083b6:	69b9      	ldr	r1, [r7, #24]
 80083b8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80083bc:	687b      	ldr	r3, [r7, #4]
 80083be:	681b      	ldr	r3, [r3, #0]
 80083c0:	61bb      	str	r3, [r7, #24]
 80083c2:	69fb      	ldr	r3, [r7, #28]
 80083c4:	005b      	lsls	r3, r3, #1
 80083c6:	2203      	movs	r2, #3
 80083c8:	fa02 f303 	lsl.w	r3, r2, r3
 80083cc:	43db      	mvns	r3, r3
 80083ce:	69ba      	ldr	r2, [r7, #24]
 80083d0:	4013      	ands	r3, r2
 80083d2:	61bb      	str	r3, [r7, #24]
 80083d4:	683b      	ldr	r3, [r7, #0]
 80083d6:	685b      	ldr	r3, [r3, #4]
 80083d8:	f003 0203 	and.w	r2, r3, #3
 80083dc:	69fb      	ldr	r3, [r7, #28]
 80083de:	005b      	lsls	r3, r3, #1
 80083e0:	fa02 f303 	lsl.w	r3, r2, r3
 80083e4:	69ba      	ldr	r2, [r7, #24]
 80083e6:	4313      	orrs	r3, r2
 80083e8:	61bb      	str	r3, [r7, #24]
 80083ea:	687b      	ldr	r3, [r7, #4]
 80083ec:	69ba      	ldr	r2, [r7, #24]
 80083ee:	601a      	str	r2, [r3, #0]
 80083f0:	683b      	ldr	r3, [r7, #0]
 80083f2:	685b      	ldr	r3, [r3, #4]
 80083f4:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80083f8:	2b00      	cmp	r3, #0
 80083fa:	f000 80ae 	beq.w	800855a <HAL_GPIO_Init+0x2e2>
 80083fe:	2300      	movs	r3, #0
 8008400:	60fb      	str	r3, [r7, #12]
 8008402:	4b5d      	ldr	r3, [pc, #372]	; (8008578 <HAL_GPIO_Init+0x300>)
 8008404:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008406:	4a5c      	ldr	r2, [pc, #368]	; (8008578 <HAL_GPIO_Init+0x300>)
 8008408:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800840c:	6453      	str	r3, [r2, #68]	; 0x44
 800840e:	4b5a      	ldr	r3, [pc, #360]	; (8008578 <HAL_GPIO_Init+0x300>)
 8008410:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008412:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8008416:	60fb      	str	r3, [r7, #12]
 8008418:	68fb      	ldr	r3, [r7, #12]
 800841a:	4a58      	ldr	r2, [pc, #352]	; (800857c <HAL_GPIO_Init+0x304>)
 800841c:	69fb      	ldr	r3, [r7, #28]
 800841e:	089b      	lsrs	r3, r3, #2
 8008420:	3302      	adds	r3, #2
 8008422:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008426:	61bb      	str	r3, [r7, #24]
 8008428:	69fb      	ldr	r3, [r7, #28]
 800842a:	f003 0303 	and.w	r3, r3, #3
 800842e:	009b      	lsls	r3, r3, #2
 8008430:	220f      	movs	r2, #15
 8008432:	fa02 f303 	lsl.w	r3, r2, r3
 8008436:	43db      	mvns	r3, r3
 8008438:	69ba      	ldr	r2, [r7, #24]
 800843a:	4013      	ands	r3, r2
 800843c:	61bb      	str	r3, [r7, #24]
 800843e:	687b      	ldr	r3, [r7, #4]
 8008440:	4a4f      	ldr	r2, [pc, #316]	; (8008580 <HAL_GPIO_Init+0x308>)
 8008442:	4293      	cmp	r3, r2
 8008444:	d025      	beq.n	8008492 <HAL_GPIO_Init+0x21a>
 8008446:	687b      	ldr	r3, [r7, #4]
 8008448:	4a4e      	ldr	r2, [pc, #312]	; (8008584 <HAL_GPIO_Init+0x30c>)
 800844a:	4293      	cmp	r3, r2
 800844c:	d01f      	beq.n	800848e <HAL_GPIO_Init+0x216>
 800844e:	687b      	ldr	r3, [r7, #4]
 8008450:	4a4d      	ldr	r2, [pc, #308]	; (8008588 <HAL_GPIO_Init+0x310>)
 8008452:	4293      	cmp	r3, r2
 8008454:	d019      	beq.n	800848a <HAL_GPIO_Init+0x212>
 8008456:	687b      	ldr	r3, [r7, #4]
 8008458:	4a4c      	ldr	r2, [pc, #304]	; (800858c <HAL_GPIO_Init+0x314>)
 800845a:	4293      	cmp	r3, r2
 800845c:	d013      	beq.n	8008486 <HAL_GPIO_Init+0x20e>
 800845e:	687b      	ldr	r3, [r7, #4]
 8008460:	4a4b      	ldr	r2, [pc, #300]	; (8008590 <HAL_GPIO_Init+0x318>)
 8008462:	4293      	cmp	r3, r2
 8008464:	d00d      	beq.n	8008482 <HAL_GPIO_Init+0x20a>
 8008466:	687b      	ldr	r3, [r7, #4]
 8008468:	4a4a      	ldr	r2, [pc, #296]	; (8008594 <HAL_GPIO_Init+0x31c>)
 800846a:	4293      	cmp	r3, r2
 800846c:	d007      	beq.n	800847e <HAL_GPIO_Init+0x206>
 800846e:	687b      	ldr	r3, [r7, #4]
 8008470:	4a49      	ldr	r2, [pc, #292]	; (8008598 <HAL_GPIO_Init+0x320>)
 8008472:	4293      	cmp	r3, r2
 8008474:	d101      	bne.n	800847a <HAL_GPIO_Init+0x202>
 8008476:	2306      	movs	r3, #6
 8008478:	e00c      	b.n	8008494 <HAL_GPIO_Init+0x21c>
 800847a:	2307      	movs	r3, #7
 800847c:	e00a      	b.n	8008494 <HAL_GPIO_Init+0x21c>
 800847e:	2305      	movs	r3, #5
 8008480:	e008      	b.n	8008494 <HAL_GPIO_Init+0x21c>
 8008482:	2304      	movs	r3, #4
 8008484:	e006      	b.n	8008494 <HAL_GPIO_Init+0x21c>
 8008486:	2303      	movs	r3, #3
 8008488:	e004      	b.n	8008494 <HAL_GPIO_Init+0x21c>
 800848a:	2302      	movs	r3, #2
 800848c:	e002      	b.n	8008494 <HAL_GPIO_Init+0x21c>
 800848e:	2301      	movs	r3, #1
 8008490:	e000      	b.n	8008494 <HAL_GPIO_Init+0x21c>
 8008492:	2300      	movs	r3, #0
 8008494:	69fa      	ldr	r2, [r7, #28]
 8008496:	f002 0203 	and.w	r2, r2, #3
 800849a:	0092      	lsls	r2, r2, #2
 800849c:	4093      	lsls	r3, r2
 800849e:	69ba      	ldr	r2, [r7, #24]
 80084a0:	4313      	orrs	r3, r2
 80084a2:	61bb      	str	r3, [r7, #24]
 80084a4:	4935      	ldr	r1, [pc, #212]	; (800857c <HAL_GPIO_Init+0x304>)
 80084a6:	69fb      	ldr	r3, [r7, #28]
 80084a8:	089b      	lsrs	r3, r3, #2
 80084aa:	3302      	adds	r3, #2
 80084ac:	69ba      	ldr	r2, [r7, #24]
 80084ae:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80084b2:	4b3a      	ldr	r3, [pc, #232]	; (800859c <HAL_GPIO_Init+0x324>)
 80084b4:	689b      	ldr	r3, [r3, #8]
 80084b6:	61bb      	str	r3, [r7, #24]
 80084b8:	693b      	ldr	r3, [r7, #16]
 80084ba:	43db      	mvns	r3, r3
 80084bc:	69ba      	ldr	r2, [r7, #24]
 80084be:	4013      	ands	r3, r2
 80084c0:	61bb      	str	r3, [r7, #24]
 80084c2:	683b      	ldr	r3, [r7, #0]
 80084c4:	685b      	ldr	r3, [r3, #4]
 80084c6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80084ca:	2b00      	cmp	r3, #0
 80084cc:	d003      	beq.n	80084d6 <HAL_GPIO_Init+0x25e>
 80084ce:	69ba      	ldr	r2, [r7, #24]
 80084d0:	693b      	ldr	r3, [r7, #16]
 80084d2:	4313      	orrs	r3, r2
 80084d4:	61bb      	str	r3, [r7, #24]
 80084d6:	4a31      	ldr	r2, [pc, #196]	; (800859c <HAL_GPIO_Init+0x324>)
 80084d8:	69bb      	ldr	r3, [r7, #24]
 80084da:	6093      	str	r3, [r2, #8]
 80084dc:	4b2f      	ldr	r3, [pc, #188]	; (800859c <HAL_GPIO_Init+0x324>)
 80084de:	68db      	ldr	r3, [r3, #12]
 80084e0:	61bb      	str	r3, [r7, #24]
 80084e2:	693b      	ldr	r3, [r7, #16]
 80084e4:	43db      	mvns	r3, r3
 80084e6:	69ba      	ldr	r2, [r7, #24]
 80084e8:	4013      	ands	r3, r2
 80084ea:	61bb      	str	r3, [r7, #24]
 80084ec:	683b      	ldr	r3, [r7, #0]
 80084ee:	685b      	ldr	r3, [r3, #4]
 80084f0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80084f4:	2b00      	cmp	r3, #0
 80084f6:	d003      	beq.n	8008500 <HAL_GPIO_Init+0x288>
 80084f8:	69ba      	ldr	r2, [r7, #24]
 80084fa:	693b      	ldr	r3, [r7, #16]
 80084fc:	4313      	orrs	r3, r2
 80084fe:	61bb      	str	r3, [r7, #24]
 8008500:	4a26      	ldr	r2, [pc, #152]	; (800859c <HAL_GPIO_Init+0x324>)
 8008502:	69bb      	ldr	r3, [r7, #24]
 8008504:	60d3      	str	r3, [r2, #12]
 8008506:	4b25      	ldr	r3, [pc, #148]	; (800859c <HAL_GPIO_Init+0x324>)
 8008508:	685b      	ldr	r3, [r3, #4]
 800850a:	61bb      	str	r3, [r7, #24]
 800850c:	693b      	ldr	r3, [r7, #16]
 800850e:	43db      	mvns	r3, r3
 8008510:	69ba      	ldr	r2, [r7, #24]
 8008512:	4013      	ands	r3, r2
 8008514:	61bb      	str	r3, [r7, #24]
 8008516:	683b      	ldr	r3, [r7, #0]
 8008518:	685b      	ldr	r3, [r3, #4]
 800851a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800851e:	2b00      	cmp	r3, #0
 8008520:	d003      	beq.n	800852a <HAL_GPIO_Init+0x2b2>
 8008522:	69ba      	ldr	r2, [r7, #24]
 8008524:	693b      	ldr	r3, [r7, #16]
 8008526:	4313      	orrs	r3, r2
 8008528:	61bb      	str	r3, [r7, #24]
 800852a:	4a1c      	ldr	r2, [pc, #112]	; (800859c <HAL_GPIO_Init+0x324>)
 800852c:	69bb      	ldr	r3, [r7, #24]
 800852e:	6053      	str	r3, [r2, #4]
 8008530:	4b1a      	ldr	r3, [pc, #104]	; (800859c <HAL_GPIO_Init+0x324>)
 8008532:	681b      	ldr	r3, [r3, #0]
 8008534:	61bb      	str	r3, [r7, #24]
 8008536:	693b      	ldr	r3, [r7, #16]
 8008538:	43db      	mvns	r3, r3
 800853a:	69ba      	ldr	r2, [r7, #24]
 800853c:	4013      	ands	r3, r2
 800853e:	61bb      	str	r3, [r7, #24]
 8008540:	683b      	ldr	r3, [r7, #0]
 8008542:	685b      	ldr	r3, [r3, #4]
 8008544:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8008548:	2b00      	cmp	r3, #0
 800854a:	d003      	beq.n	8008554 <HAL_GPIO_Init+0x2dc>
 800854c:	69ba      	ldr	r2, [r7, #24]
 800854e:	693b      	ldr	r3, [r7, #16]
 8008550:	4313      	orrs	r3, r2
 8008552:	61bb      	str	r3, [r7, #24]
 8008554:	4a11      	ldr	r2, [pc, #68]	; (800859c <HAL_GPIO_Init+0x324>)
 8008556:	69bb      	ldr	r3, [r7, #24]
 8008558:	6013      	str	r3, [r2, #0]
 800855a:	69fb      	ldr	r3, [r7, #28]
 800855c:	3301      	adds	r3, #1
 800855e:	61fb      	str	r3, [r7, #28]
 8008560:	69fb      	ldr	r3, [r7, #28]
 8008562:	2b0f      	cmp	r3, #15
 8008564:	f67f ae96 	bls.w	8008294 <HAL_GPIO_Init+0x1c>
 8008568:	bf00      	nop
 800856a:	bf00      	nop
 800856c:	3724      	adds	r7, #36	; 0x24
 800856e:	46bd      	mov	sp, r7
 8008570:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008574:	4770      	bx	lr
 8008576:	bf00      	nop
 8008578:	40023800 	.word	0x40023800
 800857c:	40013800 	.word	0x40013800
 8008580:	40020000 	.word	0x40020000
 8008584:	40020400 	.word	0x40020400
 8008588:	40020800 	.word	0x40020800
 800858c:	40020c00 	.word	0x40020c00
 8008590:	40021000 	.word	0x40021000
 8008594:	40021400 	.word	0x40021400
 8008598:	40021800 	.word	0x40021800
 800859c:	40013c00 	.word	0x40013c00

080085a0 <HAL_GPIO_ReadPin>:
 80085a0:	b480      	push	{r7}
 80085a2:	b085      	sub	sp, #20
 80085a4:	af00      	add	r7, sp, #0
 80085a6:	6078      	str	r0, [r7, #4]
 80085a8:	460b      	mov	r3, r1
 80085aa:	807b      	strh	r3, [r7, #2]
 80085ac:	687b      	ldr	r3, [r7, #4]
 80085ae:	691a      	ldr	r2, [r3, #16]
 80085b0:	887b      	ldrh	r3, [r7, #2]
 80085b2:	4013      	ands	r3, r2
 80085b4:	2b00      	cmp	r3, #0
 80085b6:	d002      	beq.n	80085be <HAL_GPIO_ReadPin+0x1e>
 80085b8:	2301      	movs	r3, #1
 80085ba:	73fb      	strb	r3, [r7, #15]
 80085bc:	e001      	b.n	80085c2 <HAL_GPIO_ReadPin+0x22>
 80085be:	2300      	movs	r3, #0
 80085c0:	73fb      	strb	r3, [r7, #15]
 80085c2:	7bfb      	ldrb	r3, [r7, #15]
 80085c4:	4618      	mov	r0, r3
 80085c6:	3714      	adds	r7, #20
 80085c8:	46bd      	mov	sp, r7
 80085ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085ce:	4770      	bx	lr

080085d0 <HAL_GPIO_WritePin>:
 80085d0:	b480      	push	{r7}
 80085d2:	b083      	sub	sp, #12
 80085d4:	af00      	add	r7, sp, #0
 80085d6:	6078      	str	r0, [r7, #4]
 80085d8:	460b      	mov	r3, r1
 80085da:	807b      	strh	r3, [r7, #2]
 80085dc:	4613      	mov	r3, r2
 80085de:	707b      	strb	r3, [r7, #1]
 80085e0:	787b      	ldrb	r3, [r7, #1]
 80085e2:	2b00      	cmp	r3, #0
 80085e4:	d003      	beq.n	80085ee <HAL_GPIO_WritePin+0x1e>
 80085e6:	887a      	ldrh	r2, [r7, #2]
 80085e8:	687b      	ldr	r3, [r7, #4]
 80085ea:	619a      	str	r2, [r3, #24]
 80085ec:	e003      	b.n	80085f6 <HAL_GPIO_WritePin+0x26>
 80085ee:	887b      	ldrh	r3, [r7, #2]
 80085f0:	041a      	lsls	r2, r3, #16
 80085f2:	687b      	ldr	r3, [r7, #4]
 80085f4:	619a      	str	r2, [r3, #24]
 80085f6:	bf00      	nop
 80085f8:	370c      	adds	r7, #12
 80085fa:	46bd      	mov	sp, r7
 80085fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008600:	4770      	bx	lr

08008602 <HAL_GPIO_TogglePin>:
 8008602:	b480      	push	{r7}
 8008604:	b085      	sub	sp, #20
 8008606:	af00      	add	r7, sp, #0
 8008608:	6078      	str	r0, [r7, #4]
 800860a:	460b      	mov	r3, r1
 800860c:	807b      	strh	r3, [r7, #2]
 800860e:	687b      	ldr	r3, [r7, #4]
 8008610:	695b      	ldr	r3, [r3, #20]
 8008612:	60fb      	str	r3, [r7, #12]
 8008614:	887a      	ldrh	r2, [r7, #2]
 8008616:	68fb      	ldr	r3, [r7, #12]
 8008618:	4013      	ands	r3, r2
 800861a:	041a      	lsls	r2, r3, #16
 800861c:	68fb      	ldr	r3, [r7, #12]
 800861e:	43d9      	mvns	r1, r3
 8008620:	887b      	ldrh	r3, [r7, #2]
 8008622:	400b      	ands	r3, r1
 8008624:	431a      	orrs	r2, r3
 8008626:	687b      	ldr	r3, [r7, #4]
 8008628:	619a      	str	r2, [r3, #24]
 800862a:	bf00      	nop
 800862c:	3714      	adds	r7, #20
 800862e:	46bd      	mov	sp, r7
 8008630:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008634:	4770      	bx	lr
	...

08008638 <HAL_GPIO_EXTI_IRQHandler>:
 8008638:	b580      	push	{r7, lr}
 800863a:	b082      	sub	sp, #8
 800863c:	af00      	add	r7, sp, #0
 800863e:	4603      	mov	r3, r0
 8008640:	80fb      	strh	r3, [r7, #6]
 8008642:	4b08      	ldr	r3, [pc, #32]	; (8008664 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8008644:	695a      	ldr	r2, [r3, #20]
 8008646:	88fb      	ldrh	r3, [r7, #6]
 8008648:	4013      	ands	r3, r2
 800864a:	2b00      	cmp	r3, #0
 800864c:	d006      	beq.n	800865c <HAL_GPIO_EXTI_IRQHandler+0x24>
 800864e:	4a05      	ldr	r2, [pc, #20]	; (8008664 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8008650:	88fb      	ldrh	r3, [r7, #6]
 8008652:	6153      	str	r3, [r2, #20]
 8008654:	88fb      	ldrh	r3, [r7, #6]
 8008656:	4618      	mov	r0, r3
 8008658:	f7fd fa98 	bl	8005b8c <HAL_GPIO_EXTI_Callback>
 800865c:	bf00      	nop
 800865e:	3708      	adds	r7, #8
 8008660:	46bd      	mov	sp, r7
 8008662:	bd80      	pop	{r7, pc}
 8008664:	40013c00 	.word	0x40013c00

08008668 <HAL_PWREx_EnableOverDrive>:
 8008668:	b580      	push	{r7, lr}
 800866a:	b082      	sub	sp, #8
 800866c:	af00      	add	r7, sp, #0
 800866e:	2300      	movs	r3, #0
 8008670:	607b      	str	r3, [r7, #4]
 8008672:	2300      	movs	r3, #0
 8008674:	603b      	str	r3, [r7, #0]
 8008676:	4b20      	ldr	r3, [pc, #128]	; (80086f8 <HAL_PWREx_EnableOverDrive+0x90>)
 8008678:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800867a:	4a1f      	ldr	r2, [pc, #124]	; (80086f8 <HAL_PWREx_EnableOverDrive+0x90>)
 800867c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8008680:	6413      	str	r3, [r2, #64]	; 0x40
 8008682:	4b1d      	ldr	r3, [pc, #116]	; (80086f8 <HAL_PWREx_EnableOverDrive+0x90>)
 8008684:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008686:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800868a:	603b      	str	r3, [r7, #0]
 800868c:	683b      	ldr	r3, [r7, #0]
 800868e:	4b1b      	ldr	r3, [pc, #108]	; (80086fc <HAL_PWREx_EnableOverDrive+0x94>)
 8008690:	2201      	movs	r2, #1
 8008692:	601a      	str	r2, [r3, #0]
 8008694:	f7fe f8f6 	bl	8006884 <HAL_GetTick>
 8008698:	6078      	str	r0, [r7, #4]
 800869a:	e009      	b.n	80086b0 <HAL_PWREx_EnableOverDrive+0x48>
 800869c:	f7fe f8f2 	bl	8006884 <HAL_GetTick>
 80086a0:	4602      	mov	r2, r0
 80086a2:	687b      	ldr	r3, [r7, #4]
 80086a4:	1ad3      	subs	r3, r2, r3
 80086a6:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80086aa:	d901      	bls.n	80086b0 <HAL_PWREx_EnableOverDrive+0x48>
 80086ac:	2303      	movs	r3, #3
 80086ae:	e01f      	b.n	80086f0 <HAL_PWREx_EnableOverDrive+0x88>
 80086b0:	4b13      	ldr	r3, [pc, #76]	; (8008700 <HAL_PWREx_EnableOverDrive+0x98>)
 80086b2:	685b      	ldr	r3, [r3, #4]
 80086b4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80086b8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80086bc:	d1ee      	bne.n	800869c <HAL_PWREx_EnableOverDrive+0x34>
 80086be:	4b11      	ldr	r3, [pc, #68]	; (8008704 <HAL_PWREx_EnableOverDrive+0x9c>)
 80086c0:	2201      	movs	r2, #1
 80086c2:	601a      	str	r2, [r3, #0]
 80086c4:	f7fe f8de 	bl	8006884 <HAL_GetTick>
 80086c8:	6078      	str	r0, [r7, #4]
 80086ca:	e009      	b.n	80086e0 <HAL_PWREx_EnableOverDrive+0x78>
 80086cc:	f7fe f8da 	bl	8006884 <HAL_GetTick>
 80086d0:	4602      	mov	r2, r0
 80086d2:	687b      	ldr	r3, [r7, #4]
 80086d4:	1ad3      	subs	r3, r2, r3
 80086d6:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80086da:	d901      	bls.n	80086e0 <HAL_PWREx_EnableOverDrive+0x78>
 80086dc:	2303      	movs	r3, #3
 80086de:	e007      	b.n	80086f0 <HAL_PWREx_EnableOverDrive+0x88>
 80086e0:	4b07      	ldr	r3, [pc, #28]	; (8008700 <HAL_PWREx_EnableOverDrive+0x98>)
 80086e2:	685b      	ldr	r3, [r3, #4]
 80086e4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80086e8:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80086ec:	d1ee      	bne.n	80086cc <HAL_PWREx_EnableOverDrive+0x64>
 80086ee:	2300      	movs	r3, #0
 80086f0:	4618      	mov	r0, r3
 80086f2:	3708      	adds	r7, #8
 80086f4:	46bd      	mov	sp, r7
 80086f6:	bd80      	pop	{r7, pc}
 80086f8:	40023800 	.word	0x40023800
 80086fc:	420e0040 	.word	0x420e0040
 8008700:	40007000 	.word	0x40007000
 8008704:	420e0044 	.word	0x420e0044

08008708 <HAL_RCC_ClockConfig>:
 8008708:	b580      	push	{r7, lr}
 800870a:	b084      	sub	sp, #16
 800870c:	af00      	add	r7, sp, #0
 800870e:	6078      	str	r0, [r7, #4]
 8008710:	6039      	str	r1, [r7, #0]
 8008712:	687b      	ldr	r3, [r7, #4]
 8008714:	2b00      	cmp	r3, #0
 8008716:	d101      	bne.n	800871c <HAL_RCC_ClockConfig+0x14>
 8008718:	2301      	movs	r3, #1
 800871a:	e0cc      	b.n	80088b6 <HAL_RCC_ClockConfig+0x1ae>
 800871c:	4b68      	ldr	r3, [pc, #416]	; (80088c0 <HAL_RCC_ClockConfig+0x1b8>)
 800871e:	681b      	ldr	r3, [r3, #0]
 8008720:	f003 030f 	and.w	r3, r3, #15
 8008724:	683a      	ldr	r2, [r7, #0]
 8008726:	429a      	cmp	r2, r3
 8008728:	d90c      	bls.n	8008744 <HAL_RCC_ClockConfig+0x3c>
 800872a:	4b65      	ldr	r3, [pc, #404]	; (80088c0 <HAL_RCC_ClockConfig+0x1b8>)
 800872c:	683a      	ldr	r2, [r7, #0]
 800872e:	b2d2      	uxtb	r2, r2
 8008730:	701a      	strb	r2, [r3, #0]
 8008732:	4b63      	ldr	r3, [pc, #396]	; (80088c0 <HAL_RCC_ClockConfig+0x1b8>)
 8008734:	681b      	ldr	r3, [r3, #0]
 8008736:	f003 030f 	and.w	r3, r3, #15
 800873a:	683a      	ldr	r2, [r7, #0]
 800873c:	429a      	cmp	r2, r3
 800873e:	d001      	beq.n	8008744 <HAL_RCC_ClockConfig+0x3c>
 8008740:	2301      	movs	r3, #1
 8008742:	e0b8      	b.n	80088b6 <HAL_RCC_ClockConfig+0x1ae>
 8008744:	687b      	ldr	r3, [r7, #4]
 8008746:	681b      	ldr	r3, [r3, #0]
 8008748:	f003 0302 	and.w	r3, r3, #2
 800874c:	2b00      	cmp	r3, #0
 800874e:	d020      	beq.n	8008792 <HAL_RCC_ClockConfig+0x8a>
 8008750:	687b      	ldr	r3, [r7, #4]
 8008752:	681b      	ldr	r3, [r3, #0]
 8008754:	f003 0304 	and.w	r3, r3, #4
 8008758:	2b00      	cmp	r3, #0
 800875a:	d005      	beq.n	8008768 <HAL_RCC_ClockConfig+0x60>
 800875c:	4b59      	ldr	r3, [pc, #356]	; (80088c4 <HAL_RCC_ClockConfig+0x1bc>)
 800875e:	689b      	ldr	r3, [r3, #8]
 8008760:	4a58      	ldr	r2, [pc, #352]	; (80088c4 <HAL_RCC_ClockConfig+0x1bc>)
 8008762:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8008766:	6093      	str	r3, [r2, #8]
 8008768:	687b      	ldr	r3, [r7, #4]
 800876a:	681b      	ldr	r3, [r3, #0]
 800876c:	f003 0308 	and.w	r3, r3, #8
 8008770:	2b00      	cmp	r3, #0
 8008772:	d005      	beq.n	8008780 <HAL_RCC_ClockConfig+0x78>
 8008774:	4b53      	ldr	r3, [pc, #332]	; (80088c4 <HAL_RCC_ClockConfig+0x1bc>)
 8008776:	689b      	ldr	r3, [r3, #8]
 8008778:	4a52      	ldr	r2, [pc, #328]	; (80088c4 <HAL_RCC_ClockConfig+0x1bc>)
 800877a:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 800877e:	6093      	str	r3, [r2, #8]
 8008780:	4b50      	ldr	r3, [pc, #320]	; (80088c4 <HAL_RCC_ClockConfig+0x1bc>)
 8008782:	689b      	ldr	r3, [r3, #8]
 8008784:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8008788:	687b      	ldr	r3, [r7, #4]
 800878a:	689b      	ldr	r3, [r3, #8]
 800878c:	494d      	ldr	r1, [pc, #308]	; (80088c4 <HAL_RCC_ClockConfig+0x1bc>)
 800878e:	4313      	orrs	r3, r2
 8008790:	608b      	str	r3, [r1, #8]
 8008792:	687b      	ldr	r3, [r7, #4]
 8008794:	681b      	ldr	r3, [r3, #0]
 8008796:	f003 0301 	and.w	r3, r3, #1
 800879a:	2b00      	cmp	r3, #0
 800879c:	d044      	beq.n	8008828 <HAL_RCC_ClockConfig+0x120>
 800879e:	687b      	ldr	r3, [r7, #4]
 80087a0:	685b      	ldr	r3, [r3, #4]
 80087a2:	2b01      	cmp	r3, #1
 80087a4:	d107      	bne.n	80087b6 <HAL_RCC_ClockConfig+0xae>
 80087a6:	4b47      	ldr	r3, [pc, #284]	; (80088c4 <HAL_RCC_ClockConfig+0x1bc>)
 80087a8:	681b      	ldr	r3, [r3, #0]
 80087aa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80087ae:	2b00      	cmp	r3, #0
 80087b0:	d119      	bne.n	80087e6 <HAL_RCC_ClockConfig+0xde>
 80087b2:	2301      	movs	r3, #1
 80087b4:	e07f      	b.n	80088b6 <HAL_RCC_ClockConfig+0x1ae>
 80087b6:	687b      	ldr	r3, [r7, #4]
 80087b8:	685b      	ldr	r3, [r3, #4]
 80087ba:	2b02      	cmp	r3, #2
 80087bc:	d003      	beq.n	80087c6 <HAL_RCC_ClockConfig+0xbe>
 80087be:	687b      	ldr	r3, [r7, #4]
 80087c0:	685b      	ldr	r3, [r3, #4]
 80087c2:	2b03      	cmp	r3, #3
 80087c4:	d107      	bne.n	80087d6 <HAL_RCC_ClockConfig+0xce>
 80087c6:	4b3f      	ldr	r3, [pc, #252]	; (80088c4 <HAL_RCC_ClockConfig+0x1bc>)
 80087c8:	681b      	ldr	r3, [r3, #0]
 80087ca:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80087ce:	2b00      	cmp	r3, #0
 80087d0:	d109      	bne.n	80087e6 <HAL_RCC_ClockConfig+0xde>
 80087d2:	2301      	movs	r3, #1
 80087d4:	e06f      	b.n	80088b6 <HAL_RCC_ClockConfig+0x1ae>
 80087d6:	4b3b      	ldr	r3, [pc, #236]	; (80088c4 <HAL_RCC_ClockConfig+0x1bc>)
 80087d8:	681b      	ldr	r3, [r3, #0]
 80087da:	f003 0302 	and.w	r3, r3, #2
 80087de:	2b00      	cmp	r3, #0
 80087e0:	d101      	bne.n	80087e6 <HAL_RCC_ClockConfig+0xde>
 80087e2:	2301      	movs	r3, #1
 80087e4:	e067      	b.n	80088b6 <HAL_RCC_ClockConfig+0x1ae>
 80087e6:	4b37      	ldr	r3, [pc, #220]	; (80088c4 <HAL_RCC_ClockConfig+0x1bc>)
 80087e8:	689b      	ldr	r3, [r3, #8]
 80087ea:	f023 0203 	bic.w	r2, r3, #3
 80087ee:	687b      	ldr	r3, [r7, #4]
 80087f0:	685b      	ldr	r3, [r3, #4]
 80087f2:	4934      	ldr	r1, [pc, #208]	; (80088c4 <HAL_RCC_ClockConfig+0x1bc>)
 80087f4:	4313      	orrs	r3, r2
 80087f6:	608b      	str	r3, [r1, #8]
 80087f8:	f7fe f844 	bl	8006884 <HAL_GetTick>
 80087fc:	60f8      	str	r0, [r7, #12]
 80087fe:	e00a      	b.n	8008816 <HAL_RCC_ClockConfig+0x10e>
 8008800:	f7fe f840 	bl	8006884 <HAL_GetTick>
 8008804:	4602      	mov	r2, r0
 8008806:	68fb      	ldr	r3, [r7, #12]
 8008808:	1ad3      	subs	r3, r2, r3
 800880a:	f241 3288 	movw	r2, #5000	; 0x1388
 800880e:	4293      	cmp	r3, r2
 8008810:	d901      	bls.n	8008816 <HAL_RCC_ClockConfig+0x10e>
 8008812:	2303      	movs	r3, #3
 8008814:	e04f      	b.n	80088b6 <HAL_RCC_ClockConfig+0x1ae>
 8008816:	4b2b      	ldr	r3, [pc, #172]	; (80088c4 <HAL_RCC_ClockConfig+0x1bc>)
 8008818:	689b      	ldr	r3, [r3, #8]
 800881a:	f003 020c 	and.w	r2, r3, #12
 800881e:	687b      	ldr	r3, [r7, #4]
 8008820:	685b      	ldr	r3, [r3, #4]
 8008822:	009b      	lsls	r3, r3, #2
 8008824:	429a      	cmp	r2, r3
 8008826:	d1eb      	bne.n	8008800 <HAL_RCC_ClockConfig+0xf8>
 8008828:	4b25      	ldr	r3, [pc, #148]	; (80088c0 <HAL_RCC_ClockConfig+0x1b8>)
 800882a:	681b      	ldr	r3, [r3, #0]
 800882c:	f003 030f 	and.w	r3, r3, #15
 8008830:	683a      	ldr	r2, [r7, #0]
 8008832:	429a      	cmp	r2, r3
 8008834:	d20c      	bcs.n	8008850 <HAL_RCC_ClockConfig+0x148>
 8008836:	4b22      	ldr	r3, [pc, #136]	; (80088c0 <HAL_RCC_ClockConfig+0x1b8>)
 8008838:	683a      	ldr	r2, [r7, #0]
 800883a:	b2d2      	uxtb	r2, r2
 800883c:	701a      	strb	r2, [r3, #0]
 800883e:	4b20      	ldr	r3, [pc, #128]	; (80088c0 <HAL_RCC_ClockConfig+0x1b8>)
 8008840:	681b      	ldr	r3, [r3, #0]
 8008842:	f003 030f 	and.w	r3, r3, #15
 8008846:	683a      	ldr	r2, [r7, #0]
 8008848:	429a      	cmp	r2, r3
 800884a:	d001      	beq.n	8008850 <HAL_RCC_ClockConfig+0x148>
 800884c:	2301      	movs	r3, #1
 800884e:	e032      	b.n	80088b6 <HAL_RCC_ClockConfig+0x1ae>
 8008850:	687b      	ldr	r3, [r7, #4]
 8008852:	681b      	ldr	r3, [r3, #0]
 8008854:	f003 0304 	and.w	r3, r3, #4
 8008858:	2b00      	cmp	r3, #0
 800885a:	d008      	beq.n	800886e <HAL_RCC_ClockConfig+0x166>
 800885c:	4b19      	ldr	r3, [pc, #100]	; (80088c4 <HAL_RCC_ClockConfig+0x1bc>)
 800885e:	689b      	ldr	r3, [r3, #8]
 8008860:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8008864:	687b      	ldr	r3, [r7, #4]
 8008866:	68db      	ldr	r3, [r3, #12]
 8008868:	4916      	ldr	r1, [pc, #88]	; (80088c4 <HAL_RCC_ClockConfig+0x1bc>)
 800886a:	4313      	orrs	r3, r2
 800886c:	608b      	str	r3, [r1, #8]
 800886e:	687b      	ldr	r3, [r7, #4]
 8008870:	681b      	ldr	r3, [r3, #0]
 8008872:	f003 0308 	and.w	r3, r3, #8
 8008876:	2b00      	cmp	r3, #0
 8008878:	d009      	beq.n	800888e <HAL_RCC_ClockConfig+0x186>
 800887a:	4b12      	ldr	r3, [pc, #72]	; (80088c4 <HAL_RCC_ClockConfig+0x1bc>)
 800887c:	689b      	ldr	r3, [r3, #8]
 800887e:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8008882:	687b      	ldr	r3, [r7, #4]
 8008884:	691b      	ldr	r3, [r3, #16]
 8008886:	00db      	lsls	r3, r3, #3
 8008888:	490e      	ldr	r1, [pc, #56]	; (80088c4 <HAL_RCC_ClockConfig+0x1bc>)
 800888a:	4313      	orrs	r3, r2
 800888c:	608b      	str	r3, [r1, #8]
 800888e:	f000 f855 	bl	800893c <HAL_RCC_GetSysClockFreq>
 8008892:	4602      	mov	r2, r0
 8008894:	4b0b      	ldr	r3, [pc, #44]	; (80088c4 <HAL_RCC_ClockConfig+0x1bc>)
 8008896:	689b      	ldr	r3, [r3, #8]
 8008898:	091b      	lsrs	r3, r3, #4
 800889a:	f003 030f 	and.w	r3, r3, #15
 800889e:	490a      	ldr	r1, [pc, #40]	; (80088c8 <HAL_RCC_ClockConfig+0x1c0>)
 80088a0:	5ccb      	ldrb	r3, [r1, r3]
 80088a2:	fa22 f303 	lsr.w	r3, r2, r3
 80088a6:	4a09      	ldr	r2, [pc, #36]	; (80088cc <HAL_RCC_ClockConfig+0x1c4>)
 80088a8:	6013      	str	r3, [r2, #0]
 80088aa:	4b09      	ldr	r3, [pc, #36]	; (80088d0 <HAL_RCC_ClockConfig+0x1c8>)
 80088ac:	681b      	ldr	r3, [r3, #0]
 80088ae:	4618      	mov	r0, r3
 80088b0:	f7fd ffa4 	bl	80067fc <HAL_InitTick>
 80088b4:	2300      	movs	r3, #0
 80088b6:	4618      	mov	r0, r3
 80088b8:	3710      	adds	r7, #16
 80088ba:	46bd      	mov	sp, r7
 80088bc:	bd80      	pop	{r7, pc}
 80088be:	bf00      	nop
 80088c0:	40023c00 	.word	0x40023c00
 80088c4:	40023800 	.word	0x40023800
 80088c8:	0801062c 	.word	0x0801062c
 80088cc:	20000094 	.word	0x20000094
 80088d0:	20000098 	.word	0x20000098

080088d4 <HAL_RCC_GetHCLKFreq>:
 80088d4:	b480      	push	{r7}
 80088d6:	af00      	add	r7, sp, #0
 80088d8:	4b03      	ldr	r3, [pc, #12]	; (80088e8 <HAL_RCC_GetHCLKFreq+0x14>)
 80088da:	681b      	ldr	r3, [r3, #0]
 80088dc:	4618      	mov	r0, r3
 80088de:	46bd      	mov	sp, r7
 80088e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088e4:	4770      	bx	lr
 80088e6:	bf00      	nop
 80088e8:	20000094 	.word	0x20000094

080088ec <HAL_RCC_GetPCLK1Freq>:
 80088ec:	b580      	push	{r7, lr}
 80088ee:	af00      	add	r7, sp, #0
 80088f0:	f7ff fff0 	bl	80088d4 <HAL_RCC_GetHCLKFreq>
 80088f4:	4602      	mov	r2, r0
 80088f6:	4b05      	ldr	r3, [pc, #20]	; (800890c <HAL_RCC_GetPCLK1Freq+0x20>)
 80088f8:	689b      	ldr	r3, [r3, #8]
 80088fa:	0a9b      	lsrs	r3, r3, #10
 80088fc:	f003 0307 	and.w	r3, r3, #7
 8008900:	4903      	ldr	r1, [pc, #12]	; (8008910 <HAL_RCC_GetPCLK1Freq+0x24>)
 8008902:	5ccb      	ldrb	r3, [r1, r3]
 8008904:	fa22 f303 	lsr.w	r3, r2, r3
 8008908:	4618      	mov	r0, r3
 800890a:	bd80      	pop	{r7, pc}
 800890c:	40023800 	.word	0x40023800
 8008910:	0801063c 	.word	0x0801063c

08008914 <HAL_RCC_GetPCLK2Freq>:
 8008914:	b580      	push	{r7, lr}
 8008916:	af00      	add	r7, sp, #0
 8008918:	f7ff ffdc 	bl	80088d4 <HAL_RCC_GetHCLKFreq>
 800891c:	4602      	mov	r2, r0
 800891e:	4b05      	ldr	r3, [pc, #20]	; (8008934 <HAL_RCC_GetPCLK2Freq+0x20>)
 8008920:	689b      	ldr	r3, [r3, #8]
 8008922:	0b5b      	lsrs	r3, r3, #13
 8008924:	f003 0307 	and.w	r3, r3, #7
 8008928:	4903      	ldr	r1, [pc, #12]	; (8008938 <HAL_RCC_GetPCLK2Freq+0x24>)
 800892a:	5ccb      	ldrb	r3, [r1, r3]
 800892c:	fa22 f303 	lsr.w	r3, r2, r3
 8008930:	4618      	mov	r0, r3
 8008932:	bd80      	pop	{r7, pc}
 8008934:	40023800 	.word	0x40023800
 8008938:	0801063c 	.word	0x0801063c

0800893c <HAL_RCC_GetSysClockFreq>:
 800893c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8008940:	b0ae      	sub	sp, #184	; 0xb8
 8008942:	af00      	add	r7, sp, #0
 8008944:	2300      	movs	r3, #0
 8008946:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800894a:	2300      	movs	r3, #0
 800894c:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8008950:	2300      	movs	r3, #0
 8008952:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8008956:	2300      	movs	r3, #0
 8008958:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800895c:	2300      	movs	r3, #0
 800895e:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8008962:	4bcb      	ldr	r3, [pc, #812]	; (8008c90 <HAL_RCC_GetSysClockFreq+0x354>)
 8008964:	689b      	ldr	r3, [r3, #8]
 8008966:	f003 030c 	and.w	r3, r3, #12
 800896a:	2b0c      	cmp	r3, #12
 800896c:	f200 8206 	bhi.w	8008d7c <HAL_RCC_GetSysClockFreq+0x440>
 8008970:	a201      	add	r2, pc, #4	; (adr r2, 8008978 <HAL_RCC_GetSysClockFreq+0x3c>)
 8008972:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008976:	bf00      	nop
 8008978:	080089ad 	.word	0x080089ad
 800897c:	08008d7d 	.word	0x08008d7d
 8008980:	08008d7d 	.word	0x08008d7d
 8008984:	08008d7d 	.word	0x08008d7d
 8008988:	080089b5 	.word	0x080089b5
 800898c:	08008d7d 	.word	0x08008d7d
 8008990:	08008d7d 	.word	0x08008d7d
 8008994:	08008d7d 	.word	0x08008d7d
 8008998:	080089bd 	.word	0x080089bd
 800899c:	08008d7d 	.word	0x08008d7d
 80089a0:	08008d7d 	.word	0x08008d7d
 80089a4:	08008d7d 	.word	0x08008d7d
 80089a8:	08008bad 	.word	0x08008bad
 80089ac:	4bb9      	ldr	r3, [pc, #740]	; (8008c94 <HAL_RCC_GetSysClockFreq+0x358>)
 80089ae:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80089b2:	e1e7      	b.n	8008d84 <HAL_RCC_GetSysClockFreq+0x448>
 80089b4:	4bb8      	ldr	r3, [pc, #736]	; (8008c98 <HAL_RCC_GetSysClockFreq+0x35c>)
 80089b6:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80089ba:	e1e3      	b.n	8008d84 <HAL_RCC_GetSysClockFreq+0x448>
 80089bc:	4bb4      	ldr	r3, [pc, #720]	; (8008c90 <HAL_RCC_GetSysClockFreq+0x354>)
 80089be:	685b      	ldr	r3, [r3, #4]
 80089c0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80089c4:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 80089c8:	4bb1      	ldr	r3, [pc, #708]	; (8008c90 <HAL_RCC_GetSysClockFreq+0x354>)
 80089ca:	685b      	ldr	r3, [r3, #4]
 80089cc:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80089d0:	2b00      	cmp	r3, #0
 80089d2:	d071      	beq.n	8008ab8 <HAL_RCC_GetSysClockFreq+0x17c>
 80089d4:	4bae      	ldr	r3, [pc, #696]	; (8008c90 <HAL_RCC_GetSysClockFreq+0x354>)
 80089d6:	685b      	ldr	r3, [r3, #4]
 80089d8:	099b      	lsrs	r3, r3, #6
 80089da:	2200      	movs	r2, #0
 80089dc:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 80089e0:	f8c7 209c 	str.w	r2, [r7, #156]	; 0x9c
 80089e4:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80089e8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80089ec:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 80089f0:	2300      	movs	r3, #0
 80089f2:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 80089f6:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 80089fa:	4622      	mov	r2, r4
 80089fc:	462b      	mov	r3, r5
 80089fe:	f04f 0000 	mov.w	r0, #0
 8008a02:	f04f 0100 	mov.w	r1, #0
 8008a06:	0159      	lsls	r1, r3, #5
 8008a08:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8008a0c:	0150      	lsls	r0, r2, #5
 8008a0e:	4602      	mov	r2, r0
 8008a10:	460b      	mov	r3, r1
 8008a12:	4621      	mov	r1, r4
 8008a14:	1a51      	subs	r1, r2, r1
 8008a16:	6439      	str	r1, [r7, #64]	; 0x40
 8008a18:	4629      	mov	r1, r5
 8008a1a:	eb63 0301 	sbc.w	r3, r3, r1
 8008a1e:	647b      	str	r3, [r7, #68]	; 0x44
 8008a20:	f04f 0200 	mov.w	r2, #0
 8008a24:	f04f 0300 	mov.w	r3, #0
 8008a28:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	; 0x40
 8008a2c:	4649      	mov	r1, r9
 8008a2e:	018b      	lsls	r3, r1, #6
 8008a30:	4641      	mov	r1, r8
 8008a32:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8008a36:	4641      	mov	r1, r8
 8008a38:	018a      	lsls	r2, r1, #6
 8008a3a:	4641      	mov	r1, r8
 8008a3c:	1a51      	subs	r1, r2, r1
 8008a3e:	63b9      	str	r1, [r7, #56]	; 0x38
 8008a40:	4649      	mov	r1, r9
 8008a42:	eb63 0301 	sbc.w	r3, r3, r1
 8008a46:	63fb      	str	r3, [r7, #60]	; 0x3c
 8008a48:	f04f 0200 	mov.w	r2, #0
 8008a4c:	f04f 0300 	mov.w	r3, #0
 8008a50:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	; 0x38
 8008a54:	4649      	mov	r1, r9
 8008a56:	00cb      	lsls	r3, r1, #3
 8008a58:	4641      	mov	r1, r8
 8008a5a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8008a5e:	4641      	mov	r1, r8
 8008a60:	00ca      	lsls	r2, r1, #3
 8008a62:	4610      	mov	r0, r2
 8008a64:	4619      	mov	r1, r3
 8008a66:	4603      	mov	r3, r0
 8008a68:	4622      	mov	r2, r4
 8008a6a:	189b      	adds	r3, r3, r2
 8008a6c:	633b      	str	r3, [r7, #48]	; 0x30
 8008a6e:	462b      	mov	r3, r5
 8008a70:	460a      	mov	r2, r1
 8008a72:	eb42 0303 	adc.w	r3, r2, r3
 8008a76:	637b      	str	r3, [r7, #52]	; 0x34
 8008a78:	f04f 0200 	mov.w	r2, #0
 8008a7c:	f04f 0300 	mov.w	r3, #0
 8008a80:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8008a84:	4629      	mov	r1, r5
 8008a86:	024b      	lsls	r3, r1, #9
 8008a88:	4621      	mov	r1, r4
 8008a8a:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8008a8e:	4621      	mov	r1, r4
 8008a90:	024a      	lsls	r2, r1, #9
 8008a92:	4610      	mov	r0, r2
 8008a94:	4619      	mov	r1, r3
 8008a96:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8008a9a:	2200      	movs	r2, #0
 8008a9c:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8008aa0:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8008aa4:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	; 0x88
 8008aa8:	f7f8 f8ee 	bl	8000c88 <__aeabi_uldivmod>
 8008aac:	4602      	mov	r2, r0
 8008aae:	460b      	mov	r3, r1
 8008ab0:	4613      	mov	r3, r2
 8008ab2:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8008ab6:	e067      	b.n	8008b88 <HAL_RCC_GetSysClockFreq+0x24c>
 8008ab8:	4b75      	ldr	r3, [pc, #468]	; (8008c90 <HAL_RCC_GetSysClockFreq+0x354>)
 8008aba:	685b      	ldr	r3, [r3, #4]
 8008abc:	099b      	lsrs	r3, r3, #6
 8008abe:	2200      	movs	r2, #0
 8008ac0:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8008ac4:	f8c7 2084 	str.w	r2, [r7, #132]	; 0x84
 8008ac8:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8008acc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008ad0:	67bb      	str	r3, [r7, #120]	; 0x78
 8008ad2:	2300      	movs	r3, #0
 8008ad4:	67fb      	str	r3, [r7, #124]	; 0x7c
 8008ad6:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	; 0x78
 8008ada:	4622      	mov	r2, r4
 8008adc:	462b      	mov	r3, r5
 8008ade:	f04f 0000 	mov.w	r0, #0
 8008ae2:	f04f 0100 	mov.w	r1, #0
 8008ae6:	0159      	lsls	r1, r3, #5
 8008ae8:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8008aec:	0150      	lsls	r0, r2, #5
 8008aee:	4602      	mov	r2, r0
 8008af0:	460b      	mov	r3, r1
 8008af2:	4621      	mov	r1, r4
 8008af4:	1a51      	subs	r1, r2, r1
 8008af6:	62b9      	str	r1, [r7, #40]	; 0x28
 8008af8:	4629      	mov	r1, r5
 8008afa:	eb63 0301 	sbc.w	r3, r3, r1
 8008afe:	62fb      	str	r3, [r7, #44]	; 0x2c
 8008b00:	f04f 0200 	mov.w	r2, #0
 8008b04:	f04f 0300 	mov.w	r3, #0
 8008b08:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	; 0x28
 8008b0c:	4649      	mov	r1, r9
 8008b0e:	018b      	lsls	r3, r1, #6
 8008b10:	4641      	mov	r1, r8
 8008b12:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8008b16:	4641      	mov	r1, r8
 8008b18:	018a      	lsls	r2, r1, #6
 8008b1a:	4641      	mov	r1, r8
 8008b1c:	ebb2 0a01 	subs.w	sl, r2, r1
 8008b20:	4649      	mov	r1, r9
 8008b22:	eb63 0b01 	sbc.w	fp, r3, r1
 8008b26:	f04f 0200 	mov.w	r2, #0
 8008b2a:	f04f 0300 	mov.w	r3, #0
 8008b2e:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8008b32:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8008b36:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8008b3a:	4692      	mov	sl, r2
 8008b3c:	469b      	mov	fp, r3
 8008b3e:	4623      	mov	r3, r4
 8008b40:	eb1a 0303 	adds.w	r3, sl, r3
 8008b44:	623b      	str	r3, [r7, #32]
 8008b46:	462b      	mov	r3, r5
 8008b48:	eb4b 0303 	adc.w	r3, fp, r3
 8008b4c:	627b      	str	r3, [r7, #36]	; 0x24
 8008b4e:	f04f 0200 	mov.w	r2, #0
 8008b52:	f04f 0300 	mov.w	r3, #0
 8008b56:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 8008b5a:	4629      	mov	r1, r5
 8008b5c:	028b      	lsls	r3, r1, #10
 8008b5e:	4621      	mov	r1, r4
 8008b60:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8008b64:	4621      	mov	r1, r4
 8008b66:	028a      	lsls	r2, r1, #10
 8008b68:	4610      	mov	r0, r2
 8008b6a:	4619      	mov	r1, r3
 8008b6c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8008b70:	2200      	movs	r2, #0
 8008b72:	673b      	str	r3, [r7, #112]	; 0x70
 8008b74:	677a      	str	r2, [r7, #116]	; 0x74
 8008b76:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 8008b7a:	f7f8 f885 	bl	8000c88 <__aeabi_uldivmod>
 8008b7e:	4602      	mov	r2, r0
 8008b80:	460b      	mov	r3, r1
 8008b82:	4613      	mov	r3, r2
 8008b84:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8008b88:	4b41      	ldr	r3, [pc, #260]	; (8008c90 <HAL_RCC_GetSysClockFreq+0x354>)
 8008b8a:	685b      	ldr	r3, [r3, #4]
 8008b8c:	0c1b      	lsrs	r3, r3, #16
 8008b8e:	f003 0303 	and.w	r3, r3, #3
 8008b92:	3301      	adds	r3, #1
 8008b94:	005b      	lsls	r3, r3, #1
 8008b96:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8008b9a:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8008b9e:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8008ba2:	fbb2 f3f3 	udiv	r3, r2, r3
 8008ba6:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8008baa:	e0eb      	b.n	8008d84 <HAL_RCC_GetSysClockFreq+0x448>
 8008bac:	4b38      	ldr	r3, [pc, #224]	; (8008c90 <HAL_RCC_GetSysClockFreq+0x354>)
 8008bae:	685b      	ldr	r3, [r3, #4]
 8008bb0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8008bb4:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8008bb8:	4b35      	ldr	r3, [pc, #212]	; (8008c90 <HAL_RCC_GetSysClockFreq+0x354>)
 8008bba:	685b      	ldr	r3, [r3, #4]
 8008bbc:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8008bc0:	2b00      	cmp	r3, #0
 8008bc2:	d06b      	beq.n	8008c9c <HAL_RCC_GetSysClockFreq+0x360>
 8008bc4:	4b32      	ldr	r3, [pc, #200]	; (8008c90 <HAL_RCC_GetSysClockFreq+0x354>)
 8008bc6:	685b      	ldr	r3, [r3, #4]
 8008bc8:	099b      	lsrs	r3, r3, #6
 8008bca:	2200      	movs	r2, #0
 8008bcc:	66bb      	str	r3, [r7, #104]	; 0x68
 8008bce:	66fa      	str	r2, [r7, #108]	; 0x6c
 8008bd0:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8008bd2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008bd6:	663b      	str	r3, [r7, #96]	; 0x60
 8008bd8:	2300      	movs	r3, #0
 8008bda:	667b      	str	r3, [r7, #100]	; 0x64
 8008bdc:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	; 0x60
 8008be0:	4622      	mov	r2, r4
 8008be2:	462b      	mov	r3, r5
 8008be4:	f04f 0000 	mov.w	r0, #0
 8008be8:	f04f 0100 	mov.w	r1, #0
 8008bec:	0159      	lsls	r1, r3, #5
 8008bee:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8008bf2:	0150      	lsls	r0, r2, #5
 8008bf4:	4602      	mov	r2, r0
 8008bf6:	460b      	mov	r3, r1
 8008bf8:	4621      	mov	r1, r4
 8008bfa:	1a51      	subs	r1, r2, r1
 8008bfc:	61b9      	str	r1, [r7, #24]
 8008bfe:	4629      	mov	r1, r5
 8008c00:	eb63 0301 	sbc.w	r3, r3, r1
 8008c04:	61fb      	str	r3, [r7, #28]
 8008c06:	f04f 0200 	mov.w	r2, #0
 8008c0a:	f04f 0300 	mov.w	r3, #0
 8008c0e:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 8008c12:	4659      	mov	r1, fp
 8008c14:	018b      	lsls	r3, r1, #6
 8008c16:	4651      	mov	r1, sl
 8008c18:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8008c1c:	4651      	mov	r1, sl
 8008c1e:	018a      	lsls	r2, r1, #6
 8008c20:	4651      	mov	r1, sl
 8008c22:	ebb2 0801 	subs.w	r8, r2, r1
 8008c26:	4659      	mov	r1, fp
 8008c28:	eb63 0901 	sbc.w	r9, r3, r1
 8008c2c:	f04f 0200 	mov.w	r2, #0
 8008c30:	f04f 0300 	mov.w	r3, #0
 8008c34:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8008c38:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8008c3c:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8008c40:	4690      	mov	r8, r2
 8008c42:	4699      	mov	r9, r3
 8008c44:	4623      	mov	r3, r4
 8008c46:	eb18 0303 	adds.w	r3, r8, r3
 8008c4a:	613b      	str	r3, [r7, #16]
 8008c4c:	462b      	mov	r3, r5
 8008c4e:	eb49 0303 	adc.w	r3, r9, r3
 8008c52:	617b      	str	r3, [r7, #20]
 8008c54:	f04f 0200 	mov.w	r2, #0
 8008c58:	f04f 0300 	mov.w	r3, #0
 8008c5c:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8008c60:	4629      	mov	r1, r5
 8008c62:	024b      	lsls	r3, r1, #9
 8008c64:	4621      	mov	r1, r4
 8008c66:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8008c6a:	4621      	mov	r1, r4
 8008c6c:	024a      	lsls	r2, r1, #9
 8008c6e:	4610      	mov	r0, r2
 8008c70:	4619      	mov	r1, r3
 8008c72:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8008c76:	2200      	movs	r2, #0
 8008c78:	65bb      	str	r3, [r7, #88]	; 0x58
 8008c7a:	65fa      	str	r2, [r7, #92]	; 0x5c
 8008c7c:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8008c80:	f7f8 f802 	bl	8000c88 <__aeabi_uldivmod>
 8008c84:	4602      	mov	r2, r0
 8008c86:	460b      	mov	r3, r1
 8008c88:	4613      	mov	r3, r2
 8008c8a:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8008c8e:	e065      	b.n	8008d5c <HAL_RCC_GetSysClockFreq+0x420>
 8008c90:	40023800 	.word	0x40023800
 8008c94:	00f42400 	.word	0x00f42400
 8008c98:	007a1200 	.word	0x007a1200
 8008c9c:	4b3d      	ldr	r3, [pc, #244]	; (8008d94 <HAL_RCC_GetSysClockFreq+0x458>)
 8008c9e:	685b      	ldr	r3, [r3, #4]
 8008ca0:	099b      	lsrs	r3, r3, #6
 8008ca2:	2200      	movs	r2, #0
 8008ca4:	4618      	mov	r0, r3
 8008ca6:	4611      	mov	r1, r2
 8008ca8:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8008cac:	653b      	str	r3, [r7, #80]	; 0x50
 8008cae:	2300      	movs	r3, #0
 8008cb0:	657b      	str	r3, [r7, #84]	; 0x54
 8008cb2:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	; 0x50
 8008cb6:	4642      	mov	r2, r8
 8008cb8:	464b      	mov	r3, r9
 8008cba:	f04f 0000 	mov.w	r0, #0
 8008cbe:	f04f 0100 	mov.w	r1, #0
 8008cc2:	0159      	lsls	r1, r3, #5
 8008cc4:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8008cc8:	0150      	lsls	r0, r2, #5
 8008cca:	4602      	mov	r2, r0
 8008ccc:	460b      	mov	r3, r1
 8008cce:	4641      	mov	r1, r8
 8008cd0:	1a51      	subs	r1, r2, r1
 8008cd2:	60b9      	str	r1, [r7, #8]
 8008cd4:	4649      	mov	r1, r9
 8008cd6:	eb63 0301 	sbc.w	r3, r3, r1
 8008cda:	60fb      	str	r3, [r7, #12]
 8008cdc:	f04f 0200 	mov.w	r2, #0
 8008ce0:	f04f 0300 	mov.w	r3, #0
 8008ce4:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 8008ce8:	4659      	mov	r1, fp
 8008cea:	018b      	lsls	r3, r1, #6
 8008cec:	4651      	mov	r1, sl
 8008cee:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8008cf2:	4651      	mov	r1, sl
 8008cf4:	018a      	lsls	r2, r1, #6
 8008cf6:	4651      	mov	r1, sl
 8008cf8:	1a54      	subs	r4, r2, r1
 8008cfa:	4659      	mov	r1, fp
 8008cfc:	eb63 0501 	sbc.w	r5, r3, r1
 8008d00:	f04f 0200 	mov.w	r2, #0
 8008d04:	f04f 0300 	mov.w	r3, #0
 8008d08:	00eb      	lsls	r3, r5, #3
 8008d0a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8008d0e:	00e2      	lsls	r2, r4, #3
 8008d10:	4614      	mov	r4, r2
 8008d12:	461d      	mov	r5, r3
 8008d14:	4643      	mov	r3, r8
 8008d16:	18e3      	adds	r3, r4, r3
 8008d18:	603b      	str	r3, [r7, #0]
 8008d1a:	464b      	mov	r3, r9
 8008d1c:	eb45 0303 	adc.w	r3, r5, r3
 8008d20:	607b      	str	r3, [r7, #4]
 8008d22:	f04f 0200 	mov.w	r2, #0
 8008d26:	f04f 0300 	mov.w	r3, #0
 8008d2a:	e9d7 4500 	ldrd	r4, r5, [r7]
 8008d2e:	4629      	mov	r1, r5
 8008d30:	028b      	lsls	r3, r1, #10
 8008d32:	4621      	mov	r1, r4
 8008d34:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8008d38:	4621      	mov	r1, r4
 8008d3a:	028a      	lsls	r2, r1, #10
 8008d3c:	4610      	mov	r0, r2
 8008d3e:	4619      	mov	r1, r3
 8008d40:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8008d44:	2200      	movs	r2, #0
 8008d46:	64bb      	str	r3, [r7, #72]	; 0x48
 8008d48:	64fa      	str	r2, [r7, #76]	; 0x4c
 8008d4a:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8008d4e:	f7f7 ff9b 	bl	8000c88 <__aeabi_uldivmod>
 8008d52:	4602      	mov	r2, r0
 8008d54:	460b      	mov	r3, r1
 8008d56:	4613      	mov	r3, r2
 8008d58:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8008d5c:	4b0d      	ldr	r3, [pc, #52]	; (8008d94 <HAL_RCC_GetSysClockFreq+0x458>)
 8008d5e:	685b      	ldr	r3, [r3, #4]
 8008d60:	0f1b      	lsrs	r3, r3, #28
 8008d62:	f003 0307 	and.w	r3, r3, #7
 8008d66:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8008d6a:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8008d6e:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 8008d72:	fbb2 f3f3 	udiv	r3, r2, r3
 8008d76:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8008d7a:	e003      	b.n	8008d84 <HAL_RCC_GetSysClockFreq+0x448>
 8008d7c:	4b06      	ldr	r3, [pc, #24]	; (8008d98 <HAL_RCC_GetSysClockFreq+0x45c>)
 8008d7e:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8008d82:	bf00      	nop
 8008d84:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 8008d88:	4618      	mov	r0, r3
 8008d8a:	37b8      	adds	r7, #184	; 0xb8
 8008d8c:	46bd      	mov	sp, r7
 8008d8e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8008d92:	bf00      	nop
 8008d94:	40023800 	.word	0x40023800
 8008d98:	00f42400 	.word	0x00f42400

08008d9c <HAL_RCC_OscConfig>:
 8008d9c:	b580      	push	{r7, lr}
 8008d9e:	b086      	sub	sp, #24
 8008da0:	af00      	add	r7, sp, #0
 8008da2:	6078      	str	r0, [r7, #4]
 8008da4:	687b      	ldr	r3, [r7, #4]
 8008da6:	2b00      	cmp	r3, #0
 8008da8:	d101      	bne.n	8008dae <HAL_RCC_OscConfig+0x12>
 8008daa:	2301      	movs	r3, #1
 8008dac:	e28d      	b.n	80092ca <HAL_RCC_OscConfig+0x52e>
 8008dae:	687b      	ldr	r3, [r7, #4]
 8008db0:	681b      	ldr	r3, [r3, #0]
 8008db2:	f003 0301 	and.w	r3, r3, #1
 8008db6:	2b00      	cmp	r3, #0
 8008db8:	f000 8083 	beq.w	8008ec2 <HAL_RCC_OscConfig+0x126>
 8008dbc:	4b94      	ldr	r3, [pc, #592]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008dbe:	689b      	ldr	r3, [r3, #8]
 8008dc0:	f003 030c 	and.w	r3, r3, #12
 8008dc4:	2b04      	cmp	r3, #4
 8008dc6:	d019      	beq.n	8008dfc <HAL_RCC_OscConfig+0x60>
 8008dc8:	4b91      	ldr	r3, [pc, #580]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008dca:	689b      	ldr	r3, [r3, #8]
 8008dcc:	f003 030c 	and.w	r3, r3, #12
 8008dd0:	2b08      	cmp	r3, #8
 8008dd2:	d106      	bne.n	8008de2 <HAL_RCC_OscConfig+0x46>
 8008dd4:	4b8e      	ldr	r3, [pc, #568]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008dd6:	685b      	ldr	r3, [r3, #4]
 8008dd8:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8008ddc:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8008de0:	d00c      	beq.n	8008dfc <HAL_RCC_OscConfig+0x60>
 8008de2:	4b8b      	ldr	r3, [pc, #556]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008de4:	689b      	ldr	r3, [r3, #8]
 8008de6:	f003 030c 	and.w	r3, r3, #12
 8008dea:	2b0c      	cmp	r3, #12
 8008dec:	d112      	bne.n	8008e14 <HAL_RCC_OscConfig+0x78>
 8008dee:	4b88      	ldr	r3, [pc, #544]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008df0:	685b      	ldr	r3, [r3, #4]
 8008df2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8008df6:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8008dfa:	d10b      	bne.n	8008e14 <HAL_RCC_OscConfig+0x78>
 8008dfc:	4b84      	ldr	r3, [pc, #528]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008dfe:	681b      	ldr	r3, [r3, #0]
 8008e00:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008e04:	2b00      	cmp	r3, #0
 8008e06:	d05b      	beq.n	8008ec0 <HAL_RCC_OscConfig+0x124>
 8008e08:	687b      	ldr	r3, [r7, #4]
 8008e0a:	685b      	ldr	r3, [r3, #4]
 8008e0c:	2b00      	cmp	r3, #0
 8008e0e:	d157      	bne.n	8008ec0 <HAL_RCC_OscConfig+0x124>
 8008e10:	2301      	movs	r3, #1
 8008e12:	e25a      	b.n	80092ca <HAL_RCC_OscConfig+0x52e>
 8008e14:	687b      	ldr	r3, [r7, #4]
 8008e16:	685b      	ldr	r3, [r3, #4]
 8008e18:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008e1c:	d106      	bne.n	8008e2c <HAL_RCC_OscConfig+0x90>
 8008e1e:	4b7c      	ldr	r3, [pc, #496]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008e20:	681b      	ldr	r3, [r3, #0]
 8008e22:	4a7b      	ldr	r2, [pc, #492]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008e24:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008e28:	6013      	str	r3, [r2, #0]
 8008e2a:	e01d      	b.n	8008e68 <HAL_RCC_OscConfig+0xcc>
 8008e2c:	687b      	ldr	r3, [r7, #4]
 8008e2e:	685b      	ldr	r3, [r3, #4]
 8008e30:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8008e34:	d10c      	bne.n	8008e50 <HAL_RCC_OscConfig+0xb4>
 8008e36:	4b76      	ldr	r3, [pc, #472]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008e38:	681b      	ldr	r3, [r3, #0]
 8008e3a:	4a75      	ldr	r2, [pc, #468]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008e3c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8008e40:	6013      	str	r3, [r2, #0]
 8008e42:	4b73      	ldr	r3, [pc, #460]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008e44:	681b      	ldr	r3, [r3, #0]
 8008e46:	4a72      	ldr	r2, [pc, #456]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008e48:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008e4c:	6013      	str	r3, [r2, #0]
 8008e4e:	e00b      	b.n	8008e68 <HAL_RCC_OscConfig+0xcc>
 8008e50:	4b6f      	ldr	r3, [pc, #444]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008e52:	681b      	ldr	r3, [r3, #0]
 8008e54:	4a6e      	ldr	r2, [pc, #440]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008e56:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8008e5a:	6013      	str	r3, [r2, #0]
 8008e5c:	4b6c      	ldr	r3, [pc, #432]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008e5e:	681b      	ldr	r3, [r3, #0]
 8008e60:	4a6b      	ldr	r2, [pc, #428]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008e62:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8008e66:	6013      	str	r3, [r2, #0]
 8008e68:	687b      	ldr	r3, [r7, #4]
 8008e6a:	685b      	ldr	r3, [r3, #4]
 8008e6c:	2b00      	cmp	r3, #0
 8008e6e:	d013      	beq.n	8008e98 <HAL_RCC_OscConfig+0xfc>
 8008e70:	f7fd fd08 	bl	8006884 <HAL_GetTick>
 8008e74:	6138      	str	r0, [r7, #16]
 8008e76:	e008      	b.n	8008e8a <HAL_RCC_OscConfig+0xee>
 8008e78:	f7fd fd04 	bl	8006884 <HAL_GetTick>
 8008e7c:	4602      	mov	r2, r0
 8008e7e:	693b      	ldr	r3, [r7, #16]
 8008e80:	1ad3      	subs	r3, r2, r3
 8008e82:	2b64      	cmp	r3, #100	; 0x64
 8008e84:	d901      	bls.n	8008e8a <HAL_RCC_OscConfig+0xee>
 8008e86:	2303      	movs	r3, #3
 8008e88:	e21f      	b.n	80092ca <HAL_RCC_OscConfig+0x52e>
 8008e8a:	4b61      	ldr	r3, [pc, #388]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008e8c:	681b      	ldr	r3, [r3, #0]
 8008e8e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008e92:	2b00      	cmp	r3, #0
 8008e94:	d0f0      	beq.n	8008e78 <HAL_RCC_OscConfig+0xdc>
 8008e96:	e014      	b.n	8008ec2 <HAL_RCC_OscConfig+0x126>
 8008e98:	f7fd fcf4 	bl	8006884 <HAL_GetTick>
 8008e9c:	6138      	str	r0, [r7, #16]
 8008e9e:	e008      	b.n	8008eb2 <HAL_RCC_OscConfig+0x116>
 8008ea0:	f7fd fcf0 	bl	8006884 <HAL_GetTick>
 8008ea4:	4602      	mov	r2, r0
 8008ea6:	693b      	ldr	r3, [r7, #16]
 8008ea8:	1ad3      	subs	r3, r2, r3
 8008eaa:	2b64      	cmp	r3, #100	; 0x64
 8008eac:	d901      	bls.n	8008eb2 <HAL_RCC_OscConfig+0x116>
 8008eae:	2303      	movs	r3, #3
 8008eb0:	e20b      	b.n	80092ca <HAL_RCC_OscConfig+0x52e>
 8008eb2:	4b57      	ldr	r3, [pc, #348]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008eb4:	681b      	ldr	r3, [r3, #0]
 8008eb6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008eba:	2b00      	cmp	r3, #0
 8008ebc:	d1f0      	bne.n	8008ea0 <HAL_RCC_OscConfig+0x104>
 8008ebe:	e000      	b.n	8008ec2 <HAL_RCC_OscConfig+0x126>
 8008ec0:	bf00      	nop
 8008ec2:	687b      	ldr	r3, [r7, #4]
 8008ec4:	681b      	ldr	r3, [r3, #0]
 8008ec6:	f003 0302 	and.w	r3, r3, #2
 8008eca:	2b00      	cmp	r3, #0
 8008ecc:	d06f      	beq.n	8008fae <HAL_RCC_OscConfig+0x212>
 8008ece:	4b50      	ldr	r3, [pc, #320]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008ed0:	689b      	ldr	r3, [r3, #8]
 8008ed2:	f003 030c 	and.w	r3, r3, #12
 8008ed6:	2b00      	cmp	r3, #0
 8008ed8:	d017      	beq.n	8008f0a <HAL_RCC_OscConfig+0x16e>
 8008eda:	4b4d      	ldr	r3, [pc, #308]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008edc:	689b      	ldr	r3, [r3, #8]
 8008ede:	f003 030c 	and.w	r3, r3, #12
 8008ee2:	2b08      	cmp	r3, #8
 8008ee4:	d105      	bne.n	8008ef2 <HAL_RCC_OscConfig+0x156>
 8008ee6:	4b4a      	ldr	r3, [pc, #296]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008ee8:	685b      	ldr	r3, [r3, #4]
 8008eea:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8008eee:	2b00      	cmp	r3, #0
 8008ef0:	d00b      	beq.n	8008f0a <HAL_RCC_OscConfig+0x16e>
 8008ef2:	4b47      	ldr	r3, [pc, #284]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008ef4:	689b      	ldr	r3, [r3, #8]
 8008ef6:	f003 030c 	and.w	r3, r3, #12
 8008efa:	2b0c      	cmp	r3, #12
 8008efc:	d11c      	bne.n	8008f38 <HAL_RCC_OscConfig+0x19c>
 8008efe:	4b44      	ldr	r3, [pc, #272]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008f00:	685b      	ldr	r3, [r3, #4]
 8008f02:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8008f06:	2b00      	cmp	r3, #0
 8008f08:	d116      	bne.n	8008f38 <HAL_RCC_OscConfig+0x19c>
 8008f0a:	4b41      	ldr	r3, [pc, #260]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008f0c:	681b      	ldr	r3, [r3, #0]
 8008f0e:	f003 0302 	and.w	r3, r3, #2
 8008f12:	2b00      	cmp	r3, #0
 8008f14:	d005      	beq.n	8008f22 <HAL_RCC_OscConfig+0x186>
 8008f16:	687b      	ldr	r3, [r7, #4]
 8008f18:	68db      	ldr	r3, [r3, #12]
 8008f1a:	2b01      	cmp	r3, #1
 8008f1c:	d001      	beq.n	8008f22 <HAL_RCC_OscConfig+0x186>
 8008f1e:	2301      	movs	r3, #1
 8008f20:	e1d3      	b.n	80092ca <HAL_RCC_OscConfig+0x52e>
 8008f22:	4b3b      	ldr	r3, [pc, #236]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008f24:	681b      	ldr	r3, [r3, #0]
 8008f26:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8008f2a:	687b      	ldr	r3, [r7, #4]
 8008f2c:	691b      	ldr	r3, [r3, #16]
 8008f2e:	00db      	lsls	r3, r3, #3
 8008f30:	4937      	ldr	r1, [pc, #220]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008f32:	4313      	orrs	r3, r2
 8008f34:	600b      	str	r3, [r1, #0]
 8008f36:	e03a      	b.n	8008fae <HAL_RCC_OscConfig+0x212>
 8008f38:	687b      	ldr	r3, [r7, #4]
 8008f3a:	68db      	ldr	r3, [r3, #12]
 8008f3c:	2b00      	cmp	r3, #0
 8008f3e:	d020      	beq.n	8008f82 <HAL_RCC_OscConfig+0x1e6>
 8008f40:	4b34      	ldr	r3, [pc, #208]	; (8009014 <HAL_RCC_OscConfig+0x278>)
 8008f42:	2201      	movs	r2, #1
 8008f44:	601a      	str	r2, [r3, #0]
 8008f46:	f7fd fc9d 	bl	8006884 <HAL_GetTick>
 8008f4a:	6138      	str	r0, [r7, #16]
 8008f4c:	e008      	b.n	8008f60 <HAL_RCC_OscConfig+0x1c4>
 8008f4e:	f7fd fc99 	bl	8006884 <HAL_GetTick>
 8008f52:	4602      	mov	r2, r0
 8008f54:	693b      	ldr	r3, [r7, #16]
 8008f56:	1ad3      	subs	r3, r2, r3
 8008f58:	2b02      	cmp	r3, #2
 8008f5a:	d901      	bls.n	8008f60 <HAL_RCC_OscConfig+0x1c4>
 8008f5c:	2303      	movs	r3, #3
 8008f5e:	e1b4      	b.n	80092ca <HAL_RCC_OscConfig+0x52e>
 8008f60:	4b2b      	ldr	r3, [pc, #172]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008f62:	681b      	ldr	r3, [r3, #0]
 8008f64:	f003 0302 	and.w	r3, r3, #2
 8008f68:	2b00      	cmp	r3, #0
 8008f6a:	d0f0      	beq.n	8008f4e <HAL_RCC_OscConfig+0x1b2>
 8008f6c:	4b28      	ldr	r3, [pc, #160]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008f6e:	681b      	ldr	r3, [r3, #0]
 8008f70:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8008f74:	687b      	ldr	r3, [r7, #4]
 8008f76:	691b      	ldr	r3, [r3, #16]
 8008f78:	00db      	lsls	r3, r3, #3
 8008f7a:	4925      	ldr	r1, [pc, #148]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008f7c:	4313      	orrs	r3, r2
 8008f7e:	600b      	str	r3, [r1, #0]
 8008f80:	e015      	b.n	8008fae <HAL_RCC_OscConfig+0x212>
 8008f82:	4b24      	ldr	r3, [pc, #144]	; (8009014 <HAL_RCC_OscConfig+0x278>)
 8008f84:	2200      	movs	r2, #0
 8008f86:	601a      	str	r2, [r3, #0]
 8008f88:	f7fd fc7c 	bl	8006884 <HAL_GetTick>
 8008f8c:	6138      	str	r0, [r7, #16]
 8008f8e:	e008      	b.n	8008fa2 <HAL_RCC_OscConfig+0x206>
 8008f90:	f7fd fc78 	bl	8006884 <HAL_GetTick>
 8008f94:	4602      	mov	r2, r0
 8008f96:	693b      	ldr	r3, [r7, #16]
 8008f98:	1ad3      	subs	r3, r2, r3
 8008f9a:	2b02      	cmp	r3, #2
 8008f9c:	d901      	bls.n	8008fa2 <HAL_RCC_OscConfig+0x206>
 8008f9e:	2303      	movs	r3, #3
 8008fa0:	e193      	b.n	80092ca <HAL_RCC_OscConfig+0x52e>
 8008fa2:	4b1b      	ldr	r3, [pc, #108]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008fa4:	681b      	ldr	r3, [r3, #0]
 8008fa6:	f003 0302 	and.w	r3, r3, #2
 8008faa:	2b00      	cmp	r3, #0
 8008fac:	d1f0      	bne.n	8008f90 <HAL_RCC_OscConfig+0x1f4>
 8008fae:	687b      	ldr	r3, [r7, #4]
 8008fb0:	681b      	ldr	r3, [r3, #0]
 8008fb2:	f003 0308 	and.w	r3, r3, #8
 8008fb6:	2b00      	cmp	r3, #0
 8008fb8:	d036      	beq.n	8009028 <HAL_RCC_OscConfig+0x28c>
 8008fba:	687b      	ldr	r3, [r7, #4]
 8008fbc:	695b      	ldr	r3, [r3, #20]
 8008fbe:	2b00      	cmp	r3, #0
 8008fc0:	d016      	beq.n	8008ff0 <HAL_RCC_OscConfig+0x254>
 8008fc2:	4b15      	ldr	r3, [pc, #84]	; (8009018 <HAL_RCC_OscConfig+0x27c>)
 8008fc4:	2201      	movs	r2, #1
 8008fc6:	601a      	str	r2, [r3, #0]
 8008fc8:	f7fd fc5c 	bl	8006884 <HAL_GetTick>
 8008fcc:	6138      	str	r0, [r7, #16]
 8008fce:	e008      	b.n	8008fe2 <HAL_RCC_OscConfig+0x246>
 8008fd0:	f7fd fc58 	bl	8006884 <HAL_GetTick>
 8008fd4:	4602      	mov	r2, r0
 8008fd6:	693b      	ldr	r3, [r7, #16]
 8008fd8:	1ad3      	subs	r3, r2, r3
 8008fda:	2b02      	cmp	r3, #2
 8008fdc:	d901      	bls.n	8008fe2 <HAL_RCC_OscConfig+0x246>
 8008fde:	2303      	movs	r3, #3
 8008fe0:	e173      	b.n	80092ca <HAL_RCC_OscConfig+0x52e>
 8008fe2:	4b0b      	ldr	r3, [pc, #44]	; (8009010 <HAL_RCC_OscConfig+0x274>)
 8008fe4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008fe6:	f003 0302 	and.w	r3, r3, #2
 8008fea:	2b00      	cmp	r3, #0
 8008fec:	d0f0      	beq.n	8008fd0 <HAL_RCC_OscConfig+0x234>
 8008fee:	e01b      	b.n	8009028 <HAL_RCC_OscConfig+0x28c>
 8008ff0:	4b09      	ldr	r3, [pc, #36]	; (8009018 <HAL_RCC_OscConfig+0x27c>)
 8008ff2:	2200      	movs	r2, #0
 8008ff4:	601a      	str	r2, [r3, #0]
 8008ff6:	f7fd fc45 	bl	8006884 <HAL_GetTick>
 8008ffa:	6138      	str	r0, [r7, #16]
 8008ffc:	e00e      	b.n	800901c <HAL_RCC_OscConfig+0x280>
 8008ffe:	f7fd fc41 	bl	8006884 <HAL_GetTick>
 8009002:	4602      	mov	r2, r0
 8009004:	693b      	ldr	r3, [r7, #16]
 8009006:	1ad3      	subs	r3, r2, r3
 8009008:	2b02      	cmp	r3, #2
 800900a:	d907      	bls.n	800901c <HAL_RCC_OscConfig+0x280>
 800900c:	2303      	movs	r3, #3
 800900e:	e15c      	b.n	80092ca <HAL_RCC_OscConfig+0x52e>
 8009010:	40023800 	.word	0x40023800
 8009014:	42470000 	.word	0x42470000
 8009018:	42470e80 	.word	0x42470e80
 800901c:	4b8a      	ldr	r3, [pc, #552]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 800901e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009020:	f003 0302 	and.w	r3, r3, #2
 8009024:	2b00      	cmp	r3, #0
 8009026:	d1ea      	bne.n	8008ffe <HAL_RCC_OscConfig+0x262>
 8009028:	687b      	ldr	r3, [r7, #4]
 800902a:	681b      	ldr	r3, [r3, #0]
 800902c:	f003 0304 	and.w	r3, r3, #4
 8009030:	2b00      	cmp	r3, #0
 8009032:	f000 8097 	beq.w	8009164 <HAL_RCC_OscConfig+0x3c8>
 8009036:	2300      	movs	r3, #0
 8009038:	75fb      	strb	r3, [r7, #23]
 800903a:	4b83      	ldr	r3, [pc, #524]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 800903c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800903e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009042:	2b00      	cmp	r3, #0
 8009044:	d10f      	bne.n	8009066 <HAL_RCC_OscConfig+0x2ca>
 8009046:	2300      	movs	r3, #0
 8009048:	60bb      	str	r3, [r7, #8]
 800904a:	4b7f      	ldr	r3, [pc, #508]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 800904c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800904e:	4a7e      	ldr	r2, [pc, #504]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 8009050:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8009054:	6413      	str	r3, [r2, #64]	; 0x40
 8009056:	4b7c      	ldr	r3, [pc, #496]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 8009058:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800905a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800905e:	60bb      	str	r3, [r7, #8]
 8009060:	68bb      	ldr	r3, [r7, #8]
 8009062:	2301      	movs	r3, #1
 8009064:	75fb      	strb	r3, [r7, #23]
 8009066:	4b79      	ldr	r3, [pc, #484]	; (800924c <HAL_RCC_OscConfig+0x4b0>)
 8009068:	681b      	ldr	r3, [r3, #0]
 800906a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800906e:	2b00      	cmp	r3, #0
 8009070:	d118      	bne.n	80090a4 <HAL_RCC_OscConfig+0x308>
 8009072:	4b76      	ldr	r3, [pc, #472]	; (800924c <HAL_RCC_OscConfig+0x4b0>)
 8009074:	681b      	ldr	r3, [r3, #0]
 8009076:	4a75      	ldr	r2, [pc, #468]	; (800924c <HAL_RCC_OscConfig+0x4b0>)
 8009078:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800907c:	6013      	str	r3, [r2, #0]
 800907e:	f7fd fc01 	bl	8006884 <HAL_GetTick>
 8009082:	6138      	str	r0, [r7, #16]
 8009084:	e008      	b.n	8009098 <HAL_RCC_OscConfig+0x2fc>
 8009086:	f7fd fbfd 	bl	8006884 <HAL_GetTick>
 800908a:	4602      	mov	r2, r0
 800908c:	693b      	ldr	r3, [r7, #16]
 800908e:	1ad3      	subs	r3, r2, r3
 8009090:	2b02      	cmp	r3, #2
 8009092:	d901      	bls.n	8009098 <HAL_RCC_OscConfig+0x2fc>
 8009094:	2303      	movs	r3, #3
 8009096:	e118      	b.n	80092ca <HAL_RCC_OscConfig+0x52e>
 8009098:	4b6c      	ldr	r3, [pc, #432]	; (800924c <HAL_RCC_OscConfig+0x4b0>)
 800909a:	681b      	ldr	r3, [r3, #0]
 800909c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80090a0:	2b00      	cmp	r3, #0
 80090a2:	d0f0      	beq.n	8009086 <HAL_RCC_OscConfig+0x2ea>
 80090a4:	687b      	ldr	r3, [r7, #4]
 80090a6:	689b      	ldr	r3, [r3, #8]
 80090a8:	2b01      	cmp	r3, #1
 80090aa:	d106      	bne.n	80090ba <HAL_RCC_OscConfig+0x31e>
 80090ac:	4b66      	ldr	r3, [pc, #408]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 80090ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80090b0:	4a65      	ldr	r2, [pc, #404]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 80090b2:	f043 0301 	orr.w	r3, r3, #1
 80090b6:	6713      	str	r3, [r2, #112]	; 0x70
 80090b8:	e01c      	b.n	80090f4 <HAL_RCC_OscConfig+0x358>
 80090ba:	687b      	ldr	r3, [r7, #4]
 80090bc:	689b      	ldr	r3, [r3, #8]
 80090be:	2b05      	cmp	r3, #5
 80090c0:	d10c      	bne.n	80090dc <HAL_RCC_OscConfig+0x340>
 80090c2:	4b61      	ldr	r3, [pc, #388]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 80090c4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80090c6:	4a60      	ldr	r2, [pc, #384]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 80090c8:	f043 0304 	orr.w	r3, r3, #4
 80090cc:	6713      	str	r3, [r2, #112]	; 0x70
 80090ce:	4b5e      	ldr	r3, [pc, #376]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 80090d0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80090d2:	4a5d      	ldr	r2, [pc, #372]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 80090d4:	f043 0301 	orr.w	r3, r3, #1
 80090d8:	6713      	str	r3, [r2, #112]	; 0x70
 80090da:	e00b      	b.n	80090f4 <HAL_RCC_OscConfig+0x358>
 80090dc:	4b5a      	ldr	r3, [pc, #360]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 80090de:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80090e0:	4a59      	ldr	r2, [pc, #356]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 80090e2:	f023 0301 	bic.w	r3, r3, #1
 80090e6:	6713      	str	r3, [r2, #112]	; 0x70
 80090e8:	4b57      	ldr	r3, [pc, #348]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 80090ea:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80090ec:	4a56      	ldr	r2, [pc, #344]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 80090ee:	f023 0304 	bic.w	r3, r3, #4
 80090f2:	6713      	str	r3, [r2, #112]	; 0x70
 80090f4:	687b      	ldr	r3, [r7, #4]
 80090f6:	689b      	ldr	r3, [r3, #8]
 80090f8:	2b00      	cmp	r3, #0
 80090fa:	d015      	beq.n	8009128 <HAL_RCC_OscConfig+0x38c>
 80090fc:	f7fd fbc2 	bl	8006884 <HAL_GetTick>
 8009100:	6138      	str	r0, [r7, #16]
 8009102:	e00a      	b.n	800911a <HAL_RCC_OscConfig+0x37e>
 8009104:	f7fd fbbe 	bl	8006884 <HAL_GetTick>
 8009108:	4602      	mov	r2, r0
 800910a:	693b      	ldr	r3, [r7, #16]
 800910c:	1ad3      	subs	r3, r2, r3
 800910e:	f241 3288 	movw	r2, #5000	; 0x1388
 8009112:	4293      	cmp	r3, r2
 8009114:	d901      	bls.n	800911a <HAL_RCC_OscConfig+0x37e>
 8009116:	2303      	movs	r3, #3
 8009118:	e0d7      	b.n	80092ca <HAL_RCC_OscConfig+0x52e>
 800911a:	4b4b      	ldr	r3, [pc, #300]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 800911c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800911e:	f003 0302 	and.w	r3, r3, #2
 8009122:	2b00      	cmp	r3, #0
 8009124:	d0ee      	beq.n	8009104 <HAL_RCC_OscConfig+0x368>
 8009126:	e014      	b.n	8009152 <HAL_RCC_OscConfig+0x3b6>
 8009128:	f7fd fbac 	bl	8006884 <HAL_GetTick>
 800912c:	6138      	str	r0, [r7, #16]
 800912e:	e00a      	b.n	8009146 <HAL_RCC_OscConfig+0x3aa>
 8009130:	f7fd fba8 	bl	8006884 <HAL_GetTick>
 8009134:	4602      	mov	r2, r0
 8009136:	693b      	ldr	r3, [r7, #16]
 8009138:	1ad3      	subs	r3, r2, r3
 800913a:	f241 3288 	movw	r2, #5000	; 0x1388
 800913e:	4293      	cmp	r3, r2
 8009140:	d901      	bls.n	8009146 <HAL_RCC_OscConfig+0x3aa>
 8009142:	2303      	movs	r3, #3
 8009144:	e0c1      	b.n	80092ca <HAL_RCC_OscConfig+0x52e>
 8009146:	4b40      	ldr	r3, [pc, #256]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 8009148:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800914a:	f003 0302 	and.w	r3, r3, #2
 800914e:	2b00      	cmp	r3, #0
 8009150:	d1ee      	bne.n	8009130 <HAL_RCC_OscConfig+0x394>
 8009152:	7dfb      	ldrb	r3, [r7, #23]
 8009154:	2b01      	cmp	r3, #1
 8009156:	d105      	bne.n	8009164 <HAL_RCC_OscConfig+0x3c8>
 8009158:	4b3b      	ldr	r3, [pc, #236]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 800915a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800915c:	4a3a      	ldr	r2, [pc, #232]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 800915e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8009162:	6413      	str	r3, [r2, #64]	; 0x40
 8009164:	687b      	ldr	r3, [r7, #4]
 8009166:	699b      	ldr	r3, [r3, #24]
 8009168:	2b00      	cmp	r3, #0
 800916a:	f000 80ad 	beq.w	80092c8 <HAL_RCC_OscConfig+0x52c>
 800916e:	4b36      	ldr	r3, [pc, #216]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 8009170:	689b      	ldr	r3, [r3, #8]
 8009172:	f003 030c 	and.w	r3, r3, #12
 8009176:	2b08      	cmp	r3, #8
 8009178:	d060      	beq.n	800923c <HAL_RCC_OscConfig+0x4a0>
 800917a:	687b      	ldr	r3, [r7, #4]
 800917c:	699b      	ldr	r3, [r3, #24]
 800917e:	2b02      	cmp	r3, #2
 8009180:	d145      	bne.n	800920e <HAL_RCC_OscConfig+0x472>
 8009182:	4b33      	ldr	r3, [pc, #204]	; (8009250 <HAL_RCC_OscConfig+0x4b4>)
 8009184:	2200      	movs	r2, #0
 8009186:	601a      	str	r2, [r3, #0]
 8009188:	f7fd fb7c 	bl	8006884 <HAL_GetTick>
 800918c:	6138      	str	r0, [r7, #16]
 800918e:	e008      	b.n	80091a2 <HAL_RCC_OscConfig+0x406>
 8009190:	f7fd fb78 	bl	8006884 <HAL_GetTick>
 8009194:	4602      	mov	r2, r0
 8009196:	693b      	ldr	r3, [r7, #16]
 8009198:	1ad3      	subs	r3, r2, r3
 800919a:	2b02      	cmp	r3, #2
 800919c:	d901      	bls.n	80091a2 <HAL_RCC_OscConfig+0x406>
 800919e:	2303      	movs	r3, #3
 80091a0:	e093      	b.n	80092ca <HAL_RCC_OscConfig+0x52e>
 80091a2:	4b29      	ldr	r3, [pc, #164]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 80091a4:	681b      	ldr	r3, [r3, #0]
 80091a6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80091aa:	2b00      	cmp	r3, #0
 80091ac:	d1f0      	bne.n	8009190 <HAL_RCC_OscConfig+0x3f4>
 80091ae:	687b      	ldr	r3, [r7, #4]
 80091b0:	69da      	ldr	r2, [r3, #28]
 80091b2:	687b      	ldr	r3, [r7, #4]
 80091b4:	6a1b      	ldr	r3, [r3, #32]
 80091b6:	431a      	orrs	r2, r3
 80091b8:	687b      	ldr	r3, [r7, #4]
 80091ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80091bc:	019b      	lsls	r3, r3, #6
 80091be:	431a      	orrs	r2, r3
 80091c0:	687b      	ldr	r3, [r7, #4]
 80091c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80091c4:	085b      	lsrs	r3, r3, #1
 80091c6:	3b01      	subs	r3, #1
 80091c8:	041b      	lsls	r3, r3, #16
 80091ca:	431a      	orrs	r2, r3
 80091cc:	687b      	ldr	r3, [r7, #4]
 80091ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80091d0:	061b      	lsls	r3, r3, #24
 80091d2:	431a      	orrs	r2, r3
 80091d4:	687b      	ldr	r3, [r7, #4]
 80091d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80091d8:	071b      	lsls	r3, r3, #28
 80091da:	491b      	ldr	r1, [pc, #108]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 80091dc:	4313      	orrs	r3, r2
 80091de:	604b      	str	r3, [r1, #4]
 80091e0:	4b1b      	ldr	r3, [pc, #108]	; (8009250 <HAL_RCC_OscConfig+0x4b4>)
 80091e2:	2201      	movs	r2, #1
 80091e4:	601a      	str	r2, [r3, #0]
 80091e6:	f7fd fb4d 	bl	8006884 <HAL_GetTick>
 80091ea:	6138      	str	r0, [r7, #16]
 80091ec:	e008      	b.n	8009200 <HAL_RCC_OscConfig+0x464>
 80091ee:	f7fd fb49 	bl	8006884 <HAL_GetTick>
 80091f2:	4602      	mov	r2, r0
 80091f4:	693b      	ldr	r3, [r7, #16]
 80091f6:	1ad3      	subs	r3, r2, r3
 80091f8:	2b02      	cmp	r3, #2
 80091fa:	d901      	bls.n	8009200 <HAL_RCC_OscConfig+0x464>
 80091fc:	2303      	movs	r3, #3
 80091fe:	e064      	b.n	80092ca <HAL_RCC_OscConfig+0x52e>
 8009200:	4b11      	ldr	r3, [pc, #68]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 8009202:	681b      	ldr	r3, [r3, #0]
 8009204:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009208:	2b00      	cmp	r3, #0
 800920a:	d0f0      	beq.n	80091ee <HAL_RCC_OscConfig+0x452>
 800920c:	e05c      	b.n	80092c8 <HAL_RCC_OscConfig+0x52c>
 800920e:	4b10      	ldr	r3, [pc, #64]	; (8009250 <HAL_RCC_OscConfig+0x4b4>)
 8009210:	2200      	movs	r2, #0
 8009212:	601a      	str	r2, [r3, #0]
 8009214:	f7fd fb36 	bl	8006884 <HAL_GetTick>
 8009218:	6138      	str	r0, [r7, #16]
 800921a:	e008      	b.n	800922e <HAL_RCC_OscConfig+0x492>
 800921c:	f7fd fb32 	bl	8006884 <HAL_GetTick>
 8009220:	4602      	mov	r2, r0
 8009222:	693b      	ldr	r3, [r7, #16]
 8009224:	1ad3      	subs	r3, r2, r3
 8009226:	2b02      	cmp	r3, #2
 8009228:	d901      	bls.n	800922e <HAL_RCC_OscConfig+0x492>
 800922a:	2303      	movs	r3, #3
 800922c:	e04d      	b.n	80092ca <HAL_RCC_OscConfig+0x52e>
 800922e:	4b06      	ldr	r3, [pc, #24]	; (8009248 <HAL_RCC_OscConfig+0x4ac>)
 8009230:	681b      	ldr	r3, [r3, #0]
 8009232:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009236:	2b00      	cmp	r3, #0
 8009238:	d1f0      	bne.n	800921c <HAL_RCC_OscConfig+0x480>
 800923a:	e045      	b.n	80092c8 <HAL_RCC_OscConfig+0x52c>
 800923c:	687b      	ldr	r3, [r7, #4]
 800923e:	699b      	ldr	r3, [r3, #24]
 8009240:	2b01      	cmp	r3, #1
 8009242:	d107      	bne.n	8009254 <HAL_RCC_OscConfig+0x4b8>
 8009244:	2301      	movs	r3, #1
 8009246:	e040      	b.n	80092ca <HAL_RCC_OscConfig+0x52e>
 8009248:	40023800 	.word	0x40023800
 800924c:	40007000 	.word	0x40007000
 8009250:	42470060 	.word	0x42470060
 8009254:	4b1f      	ldr	r3, [pc, #124]	; (80092d4 <HAL_RCC_OscConfig+0x538>)
 8009256:	685b      	ldr	r3, [r3, #4]
 8009258:	60fb      	str	r3, [r7, #12]
 800925a:	687b      	ldr	r3, [r7, #4]
 800925c:	699b      	ldr	r3, [r3, #24]
 800925e:	2b01      	cmp	r3, #1
 8009260:	d030      	beq.n	80092c4 <HAL_RCC_OscConfig+0x528>
 8009262:	68fb      	ldr	r3, [r7, #12]
 8009264:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8009268:	687b      	ldr	r3, [r7, #4]
 800926a:	69db      	ldr	r3, [r3, #28]
 800926c:	429a      	cmp	r2, r3
 800926e:	d129      	bne.n	80092c4 <HAL_RCC_OscConfig+0x528>
 8009270:	68fb      	ldr	r3, [r7, #12]
 8009272:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8009276:	687b      	ldr	r3, [r7, #4]
 8009278:	6a1b      	ldr	r3, [r3, #32]
 800927a:	429a      	cmp	r2, r3
 800927c:	d122      	bne.n	80092c4 <HAL_RCC_OscConfig+0x528>
 800927e:	68fa      	ldr	r2, [r7, #12]
 8009280:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8009284:	4013      	ands	r3, r2
 8009286:	687a      	ldr	r2, [r7, #4]
 8009288:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800928a:	0192      	lsls	r2, r2, #6
 800928c:	4293      	cmp	r3, r2
 800928e:	d119      	bne.n	80092c4 <HAL_RCC_OscConfig+0x528>
 8009290:	68fb      	ldr	r3, [r7, #12]
 8009292:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8009296:	687b      	ldr	r3, [r7, #4]
 8009298:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800929a:	085b      	lsrs	r3, r3, #1
 800929c:	3b01      	subs	r3, #1
 800929e:	041b      	lsls	r3, r3, #16
 80092a0:	429a      	cmp	r2, r3
 80092a2:	d10f      	bne.n	80092c4 <HAL_RCC_OscConfig+0x528>
 80092a4:	68fb      	ldr	r3, [r7, #12]
 80092a6:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80092aa:	687b      	ldr	r3, [r7, #4]
 80092ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80092ae:	061b      	lsls	r3, r3, #24
 80092b0:	429a      	cmp	r2, r3
 80092b2:	d107      	bne.n	80092c4 <HAL_RCC_OscConfig+0x528>
 80092b4:	68fb      	ldr	r3, [r7, #12]
 80092b6:	f003 42e0 	and.w	r2, r3, #1879048192	; 0x70000000
 80092ba:	687b      	ldr	r3, [r7, #4]
 80092bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80092be:	071b      	lsls	r3, r3, #28
 80092c0:	429a      	cmp	r2, r3
 80092c2:	d001      	beq.n	80092c8 <HAL_RCC_OscConfig+0x52c>
 80092c4:	2301      	movs	r3, #1
 80092c6:	e000      	b.n	80092ca <HAL_RCC_OscConfig+0x52e>
 80092c8:	2300      	movs	r3, #0
 80092ca:	4618      	mov	r0, r3
 80092cc:	3718      	adds	r7, #24
 80092ce:	46bd      	mov	sp, r7
 80092d0:	bd80      	pop	{r7, pc}
 80092d2:	bf00      	nop
 80092d4:	40023800 	.word	0x40023800

080092d8 <HAL_TIM_Base_Init>:
 80092d8:	b580      	push	{r7, lr}
 80092da:	b082      	sub	sp, #8
 80092dc:	af00      	add	r7, sp, #0
 80092de:	6078      	str	r0, [r7, #4]
 80092e0:	687b      	ldr	r3, [r7, #4]
 80092e2:	2b00      	cmp	r3, #0
 80092e4:	d101      	bne.n	80092ea <HAL_TIM_Base_Init+0x12>
 80092e6:	2301      	movs	r3, #1
 80092e8:	e041      	b.n	800936e <HAL_TIM_Base_Init+0x96>
 80092ea:	687b      	ldr	r3, [r7, #4]
 80092ec:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80092f0:	b2db      	uxtb	r3, r3
 80092f2:	2b00      	cmp	r3, #0
 80092f4:	d106      	bne.n	8009304 <HAL_TIM_Base_Init+0x2c>
 80092f6:	687b      	ldr	r3, [r7, #4]
 80092f8:	2200      	movs	r2, #0
 80092fa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80092fe:	6878      	ldr	r0, [r7, #4]
 8009300:	f7fc fe08 	bl	8005f14 <HAL_TIM_Base_MspInit>
 8009304:	687b      	ldr	r3, [r7, #4]
 8009306:	2202      	movs	r2, #2
 8009308:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800930c:	687b      	ldr	r3, [r7, #4]
 800930e:	681a      	ldr	r2, [r3, #0]
 8009310:	687b      	ldr	r3, [r7, #4]
 8009312:	3304      	adds	r3, #4
 8009314:	4619      	mov	r1, r3
 8009316:	4610      	mov	r0, r2
 8009318:	f001 f944 	bl	800a5a4 <TIM_Base_SetConfig>
 800931c:	687b      	ldr	r3, [r7, #4]
 800931e:	2201      	movs	r2, #1
 8009320:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8009324:	687b      	ldr	r3, [r7, #4]
 8009326:	2201      	movs	r2, #1
 8009328:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800932c:	687b      	ldr	r3, [r7, #4]
 800932e:	2201      	movs	r2, #1
 8009330:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8009334:	687b      	ldr	r3, [r7, #4]
 8009336:	2201      	movs	r2, #1
 8009338:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800933c:	687b      	ldr	r3, [r7, #4]
 800933e:	2201      	movs	r2, #1
 8009340:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8009344:	687b      	ldr	r3, [r7, #4]
 8009346:	2201      	movs	r2, #1
 8009348:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800934c:	687b      	ldr	r3, [r7, #4]
 800934e:	2201      	movs	r2, #1
 8009350:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8009354:	687b      	ldr	r3, [r7, #4]
 8009356:	2201      	movs	r2, #1
 8009358:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800935c:	687b      	ldr	r3, [r7, #4]
 800935e:	2201      	movs	r2, #1
 8009360:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8009364:	687b      	ldr	r3, [r7, #4]
 8009366:	2201      	movs	r2, #1
 8009368:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800936c:	2300      	movs	r3, #0
 800936e:	4618      	mov	r0, r3
 8009370:	3708      	adds	r7, #8
 8009372:	46bd      	mov	sp, r7
 8009374:	bd80      	pop	{r7, pc}
	...

08009378 <HAL_TIM_Base_Start>:
 8009378:	b480      	push	{r7}
 800937a:	b085      	sub	sp, #20
 800937c:	af00      	add	r7, sp, #0
 800937e:	6078      	str	r0, [r7, #4]
 8009380:	687b      	ldr	r3, [r7, #4]
 8009382:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8009386:	b2db      	uxtb	r3, r3
 8009388:	2b01      	cmp	r3, #1
 800938a:	d001      	beq.n	8009390 <HAL_TIM_Base_Start+0x18>
 800938c:	2301      	movs	r3, #1
 800938e:	e046      	b.n	800941e <HAL_TIM_Base_Start+0xa6>
 8009390:	687b      	ldr	r3, [r7, #4]
 8009392:	2202      	movs	r2, #2
 8009394:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009398:	687b      	ldr	r3, [r7, #4]
 800939a:	681b      	ldr	r3, [r3, #0]
 800939c:	4a23      	ldr	r2, [pc, #140]	; (800942c <HAL_TIM_Base_Start+0xb4>)
 800939e:	4293      	cmp	r3, r2
 80093a0:	d022      	beq.n	80093e8 <HAL_TIM_Base_Start+0x70>
 80093a2:	687b      	ldr	r3, [r7, #4]
 80093a4:	681b      	ldr	r3, [r3, #0]
 80093a6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80093aa:	d01d      	beq.n	80093e8 <HAL_TIM_Base_Start+0x70>
 80093ac:	687b      	ldr	r3, [r7, #4]
 80093ae:	681b      	ldr	r3, [r3, #0]
 80093b0:	4a1f      	ldr	r2, [pc, #124]	; (8009430 <HAL_TIM_Base_Start+0xb8>)
 80093b2:	4293      	cmp	r3, r2
 80093b4:	d018      	beq.n	80093e8 <HAL_TIM_Base_Start+0x70>
 80093b6:	687b      	ldr	r3, [r7, #4]
 80093b8:	681b      	ldr	r3, [r3, #0]
 80093ba:	4a1e      	ldr	r2, [pc, #120]	; (8009434 <HAL_TIM_Base_Start+0xbc>)
 80093bc:	4293      	cmp	r3, r2
 80093be:	d013      	beq.n	80093e8 <HAL_TIM_Base_Start+0x70>
 80093c0:	687b      	ldr	r3, [r7, #4]
 80093c2:	681b      	ldr	r3, [r3, #0]
 80093c4:	4a1c      	ldr	r2, [pc, #112]	; (8009438 <HAL_TIM_Base_Start+0xc0>)
 80093c6:	4293      	cmp	r3, r2
 80093c8:	d00e      	beq.n	80093e8 <HAL_TIM_Base_Start+0x70>
 80093ca:	687b      	ldr	r3, [r7, #4]
 80093cc:	681b      	ldr	r3, [r3, #0]
 80093ce:	4a1b      	ldr	r2, [pc, #108]	; (800943c <HAL_TIM_Base_Start+0xc4>)
 80093d0:	4293      	cmp	r3, r2
 80093d2:	d009      	beq.n	80093e8 <HAL_TIM_Base_Start+0x70>
 80093d4:	687b      	ldr	r3, [r7, #4]
 80093d6:	681b      	ldr	r3, [r3, #0]
 80093d8:	4a19      	ldr	r2, [pc, #100]	; (8009440 <HAL_TIM_Base_Start+0xc8>)
 80093da:	4293      	cmp	r3, r2
 80093dc:	d004      	beq.n	80093e8 <HAL_TIM_Base_Start+0x70>
 80093de:	687b      	ldr	r3, [r7, #4]
 80093e0:	681b      	ldr	r3, [r3, #0]
 80093e2:	4a18      	ldr	r2, [pc, #96]	; (8009444 <HAL_TIM_Base_Start+0xcc>)
 80093e4:	4293      	cmp	r3, r2
 80093e6:	d111      	bne.n	800940c <HAL_TIM_Base_Start+0x94>
 80093e8:	687b      	ldr	r3, [r7, #4]
 80093ea:	681b      	ldr	r3, [r3, #0]
 80093ec:	689b      	ldr	r3, [r3, #8]
 80093ee:	f003 0307 	and.w	r3, r3, #7
 80093f2:	60fb      	str	r3, [r7, #12]
 80093f4:	68fb      	ldr	r3, [r7, #12]
 80093f6:	2b06      	cmp	r3, #6
 80093f8:	d010      	beq.n	800941c <HAL_TIM_Base_Start+0xa4>
 80093fa:	687b      	ldr	r3, [r7, #4]
 80093fc:	681b      	ldr	r3, [r3, #0]
 80093fe:	681a      	ldr	r2, [r3, #0]
 8009400:	687b      	ldr	r3, [r7, #4]
 8009402:	681b      	ldr	r3, [r3, #0]
 8009404:	f042 0201 	orr.w	r2, r2, #1
 8009408:	601a      	str	r2, [r3, #0]
 800940a:	e007      	b.n	800941c <HAL_TIM_Base_Start+0xa4>
 800940c:	687b      	ldr	r3, [r7, #4]
 800940e:	681b      	ldr	r3, [r3, #0]
 8009410:	681a      	ldr	r2, [r3, #0]
 8009412:	687b      	ldr	r3, [r7, #4]
 8009414:	681b      	ldr	r3, [r3, #0]
 8009416:	f042 0201 	orr.w	r2, r2, #1
 800941a:	601a      	str	r2, [r3, #0]
 800941c:	2300      	movs	r3, #0
 800941e:	4618      	mov	r0, r3
 8009420:	3714      	adds	r7, #20
 8009422:	46bd      	mov	sp, r7
 8009424:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009428:	4770      	bx	lr
 800942a:	bf00      	nop
 800942c:	40010000 	.word	0x40010000
 8009430:	40000400 	.word	0x40000400
 8009434:	40000800 	.word	0x40000800
 8009438:	40000c00 	.word	0x40000c00
 800943c:	40010400 	.word	0x40010400
 8009440:	40014000 	.word	0x40014000
 8009444:	40001800 	.word	0x40001800

08009448 <HAL_TIM_PWM_Init>:
 8009448:	b580      	push	{r7, lr}
 800944a:	b082      	sub	sp, #8
 800944c:	af00      	add	r7, sp, #0
 800944e:	6078      	str	r0, [r7, #4]
 8009450:	687b      	ldr	r3, [r7, #4]
 8009452:	2b00      	cmp	r3, #0
 8009454:	d101      	bne.n	800945a <HAL_TIM_PWM_Init+0x12>
 8009456:	2301      	movs	r3, #1
 8009458:	e041      	b.n	80094de <HAL_TIM_PWM_Init+0x96>
 800945a:	687b      	ldr	r3, [r7, #4]
 800945c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8009460:	b2db      	uxtb	r3, r3
 8009462:	2b00      	cmp	r3, #0
 8009464:	d106      	bne.n	8009474 <HAL_TIM_PWM_Init+0x2c>
 8009466:	687b      	ldr	r3, [r7, #4]
 8009468:	2200      	movs	r2, #0
 800946a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800946e:	6878      	ldr	r0, [r7, #4]
 8009470:	f000 f839 	bl	80094e6 <HAL_TIM_PWM_MspInit>
 8009474:	687b      	ldr	r3, [r7, #4]
 8009476:	2202      	movs	r2, #2
 8009478:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800947c:	687b      	ldr	r3, [r7, #4]
 800947e:	681a      	ldr	r2, [r3, #0]
 8009480:	687b      	ldr	r3, [r7, #4]
 8009482:	3304      	adds	r3, #4
 8009484:	4619      	mov	r1, r3
 8009486:	4610      	mov	r0, r2
 8009488:	f001 f88c 	bl	800a5a4 <TIM_Base_SetConfig>
 800948c:	687b      	ldr	r3, [r7, #4]
 800948e:	2201      	movs	r2, #1
 8009490:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8009494:	687b      	ldr	r3, [r7, #4]
 8009496:	2201      	movs	r2, #1
 8009498:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800949c:	687b      	ldr	r3, [r7, #4]
 800949e:	2201      	movs	r2, #1
 80094a0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80094a4:	687b      	ldr	r3, [r7, #4]
 80094a6:	2201      	movs	r2, #1
 80094a8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80094ac:	687b      	ldr	r3, [r7, #4]
 80094ae:	2201      	movs	r2, #1
 80094b0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80094b4:	687b      	ldr	r3, [r7, #4]
 80094b6:	2201      	movs	r2, #1
 80094b8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80094bc:	687b      	ldr	r3, [r7, #4]
 80094be:	2201      	movs	r2, #1
 80094c0:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80094c4:	687b      	ldr	r3, [r7, #4]
 80094c6:	2201      	movs	r2, #1
 80094c8:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80094cc:	687b      	ldr	r3, [r7, #4]
 80094ce:	2201      	movs	r2, #1
 80094d0:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80094d4:	687b      	ldr	r3, [r7, #4]
 80094d6:	2201      	movs	r2, #1
 80094d8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80094dc:	2300      	movs	r3, #0
 80094de:	4618      	mov	r0, r3
 80094e0:	3708      	adds	r7, #8
 80094e2:	46bd      	mov	sp, r7
 80094e4:	bd80      	pop	{r7, pc}

080094e6 <HAL_TIM_PWM_MspInit>:
 80094e6:	b480      	push	{r7}
 80094e8:	b083      	sub	sp, #12
 80094ea:	af00      	add	r7, sp, #0
 80094ec:	6078      	str	r0, [r7, #4]
 80094ee:	bf00      	nop
 80094f0:	370c      	adds	r7, #12
 80094f2:	46bd      	mov	sp, r7
 80094f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094f8:	4770      	bx	lr
	...

080094fc <HAL_TIM_PWM_Start>:
 80094fc:	b580      	push	{r7, lr}
 80094fe:	b084      	sub	sp, #16
 8009500:	af00      	add	r7, sp, #0
 8009502:	6078      	str	r0, [r7, #4]
 8009504:	6039      	str	r1, [r7, #0]
 8009506:	683b      	ldr	r3, [r7, #0]
 8009508:	2b00      	cmp	r3, #0
 800950a:	d109      	bne.n	8009520 <HAL_TIM_PWM_Start+0x24>
 800950c:	687b      	ldr	r3, [r7, #4]
 800950e:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8009512:	b2db      	uxtb	r3, r3
 8009514:	2b01      	cmp	r3, #1
 8009516:	bf14      	ite	ne
 8009518:	2301      	movne	r3, #1
 800951a:	2300      	moveq	r3, #0
 800951c:	b2db      	uxtb	r3, r3
 800951e:	e022      	b.n	8009566 <HAL_TIM_PWM_Start+0x6a>
 8009520:	683b      	ldr	r3, [r7, #0]
 8009522:	2b04      	cmp	r3, #4
 8009524:	d109      	bne.n	800953a <HAL_TIM_PWM_Start+0x3e>
 8009526:	687b      	ldr	r3, [r7, #4]
 8009528:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800952c:	b2db      	uxtb	r3, r3
 800952e:	2b01      	cmp	r3, #1
 8009530:	bf14      	ite	ne
 8009532:	2301      	movne	r3, #1
 8009534:	2300      	moveq	r3, #0
 8009536:	b2db      	uxtb	r3, r3
 8009538:	e015      	b.n	8009566 <HAL_TIM_PWM_Start+0x6a>
 800953a:	683b      	ldr	r3, [r7, #0]
 800953c:	2b08      	cmp	r3, #8
 800953e:	d109      	bne.n	8009554 <HAL_TIM_PWM_Start+0x58>
 8009540:	687b      	ldr	r3, [r7, #4]
 8009542:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8009546:	b2db      	uxtb	r3, r3
 8009548:	2b01      	cmp	r3, #1
 800954a:	bf14      	ite	ne
 800954c:	2301      	movne	r3, #1
 800954e:	2300      	moveq	r3, #0
 8009550:	b2db      	uxtb	r3, r3
 8009552:	e008      	b.n	8009566 <HAL_TIM_PWM_Start+0x6a>
 8009554:	687b      	ldr	r3, [r7, #4]
 8009556:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800955a:	b2db      	uxtb	r3, r3
 800955c:	2b01      	cmp	r3, #1
 800955e:	bf14      	ite	ne
 8009560:	2301      	movne	r3, #1
 8009562:	2300      	moveq	r3, #0
 8009564:	b2db      	uxtb	r3, r3
 8009566:	2b00      	cmp	r3, #0
 8009568:	d001      	beq.n	800956e <HAL_TIM_PWM_Start+0x72>
 800956a:	2301      	movs	r3, #1
 800956c:	e07c      	b.n	8009668 <HAL_TIM_PWM_Start+0x16c>
 800956e:	683b      	ldr	r3, [r7, #0]
 8009570:	2b00      	cmp	r3, #0
 8009572:	d104      	bne.n	800957e <HAL_TIM_PWM_Start+0x82>
 8009574:	687b      	ldr	r3, [r7, #4]
 8009576:	2202      	movs	r2, #2
 8009578:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800957c:	e013      	b.n	80095a6 <HAL_TIM_PWM_Start+0xaa>
 800957e:	683b      	ldr	r3, [r7, #0]
 8009580:	2b04      	cmp	r3, #4
 8009582:	d104      	bne.n	800958e <HAL_TIM_PWM_Start+0x92>
 8009584:	687b      	ldr	r3, [r7, #4]
 8009586:	2202      	movs	r2, #2
 8009588:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800958c:	e00b      	b.n	80095a6 <HAL_TIM_PWM_Start+0xaa>
 800958e:	683b      	ldr	r3, [r7, #0]
 8009590:	2b08      	cmp	r3, #8
 8009592:	d104      	bne.n	800959e <HAL_TIM_PWM_Start+0xa2>
 8009594:	687b      	ldr	r3, [r7, #4]
 8009596:	2202      	movs	r2, #2
 8009598:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800959c:	e003      	b.n	80095a6 <HAL_TIM_PWM_Start+0xaa>
 800959e:	687b      	ldr	r3, [r7, #4]
 80095a0:	2202      	movs	r2, #2
 80095a2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80095a6:	687b      	ldr	r3, [r7, #4]
 80095a8:	681b      	ldr	r3, [r3, #0]
 80095aa:	2201      	movs	r2, #1
 80095ac:	6839      	ldr	r1, [r7, #0]
 80095ae:	4618      	mov	r0, r3
 80095b0:	f001 fc0c 	bl	800adcc <TIM_CCxChannelCmd>
 80095b4:	687b      	ldr	r3, [r7, #4]
 80095b6:	681b      	ldr	r3, [r3, #0]
 80095b8:	4a2d      	ldr	r2, [pc, #180]	; (8009670 <HAL_TIM_PWM_Start+0x174>)
 80095ba:	4293      	cmp	r3, r2
 80095bc:	d004      	beq.n	80095c8 <HAL_TIM_PWM_Start+0xcc>
 80095be:	687b      	ldr	r3, [r7, #4]
 80095c0:	681b      	ldr	r3, [r3, #0]
 80095c2:	4a2c      	ldr	r2, [pc, #176]	; (8009674 <HAL_TIM_PWM_Start+0x178>)
 80095c4:	4293      	cmp	r3, r2
 80095c6:	d101      	bne.n	80095cc <HAL_TIM_PWM_Start+0xd0>
 80095c8:	2301      	movs	r3, #1
 80095ca:	e000      	b.n	80095ce <HAL_TIM_PWM_Start+0xd2>
 80095cc:	2300      	movs	r3, #0
 80095ce:	2b00      	cmp	r3, #0
 80095d0:	d007      	beq.n	80095e2 <HAL_TIM_PWM_Start+0xe6>
 80095d2:	687b      	ldr	r3, [r7, #4]
 80095d4:	681b      	ldr	r3, [r3, #0]
 80095d6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80095d8:	687b      	ldr	r3, [r7, #4]
 80095da:	681b      	ldr	r3, [r3, #0]
 80095dc:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80095e0:	645a      	str	r2, [r3, #68]	; 0x44
 80095e2:	687b      	ldr	r3, [r7, #4]
 80095e4:	681b      	ldr	r3, [r3, #0]
 80095e6:	4a22      	ldr	r2, [pc, #136]	; (8009670 <HAL_TIM_PWM_Start+0x174>)
 80095e8:	4293      	cmp	r3, r2
 80095ea:	d022      	beq.n	8009632 <HAL_TIM_PWM_Start+0x136>
 80095ec:	687b      	ldr	r3, [r7, #4]
 80095ee:	681b      	ldr	r3, [r3, #0]
 80095f0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80095f4:	d01d      	beq.n	8009632 <HAL_TIM_PWM_Start+0x136>
 80095f6:	687b      	ldr	r3, [r7, #4]
 80095f8:	681b      	ldr	r3, [r3, #0]
 80095fa:	4a1f      	ldr	r2, [pc, #124]	; (8009678 <HAL_TIM_PWM_Start+0x17c>)
 80095fc:	4293      	cmp	r3, r2
 80095fe:	d018      	beq.n	8009632 <HAL_TIM_PWM_Start+0x136>
 8009600:	687b      	ldr	r3, [r7, #4]
 8009602:	681b      	ldr	r3, [r3, #0]
 8009604:	4a1d      	ldr	r2, [pc, #116]	; (800967c <HAL_TIM_PWM_Start+0x180>)
 8009606:	4293      	cmp	r3, r2
 8009608:	d013      	beq.n	8009632 <HAL_TIM_PWM_Start+0x136>
 800960a:	687b      	ldr	r3, [r7, #4]
 800960c:	681b      	ldr	r3, [r3, #0]
 800960e:	4a1c      	ldr	r2, [pc, #112]	; (8009680 <HAL_TIM_PWM_Start+0x184>)
 8009610:	4293      	cmp	r3, r2
 8009612:	d00e      	beq.n	8009632 <HAL_TIM_PWM_Start+0x136>
 8009614:	687b      	ldr	r3, [r7, #4]
 8009616:	681b      	ldr	r3, [r3, #0]
 8009618:	4a16      	ldr	r2, [pc, #88]	; (8009674 <HAL_TIM_PWM_Start+0x178>)
 800961a:	4293      	cmp	r3, r2
 800961c:	d009      	beq.n	8009632 <HAL_TIM_PWM_Start+0x136>
 800961e:	687b      	ldr	r3, [r7, #4]
 8009620:	681b      	ldr	r3, [r3, #0]
 8009622:	4a18      	ldr	r2, [pc, #96]	; (8009684 <HAL_TIM_PWM_Start+0x188>)
 8009624:	4293      	cmp	r3, r2
 8009626:	d004      	beq.n	8009632 <HAL_TIM_PWM_Start+0x136>
 8009628:	687b      	ldr	r3, [r7, #4]
 800962a:	681b      	ldr	r3, [r3, #0]
 800962c:	4a16      	ldr	r2, [pc, #88]	; (8009688 <HAL_TIM_PWM_Start+0x18c>)
 800962e:	4293      	cmp	r3, r2
 8009630:	d111      	bne.n	8009656 <HAL_TIM_PWM_Start+0x15a>
 8009632:	687b      	ldr	r3, [r7, #4]
 8009634:	681b      	ldr	r3, [r3, #0]
 8009636:	689b      	ldr	r3, [r3, #8]
 8009638:	f003 0307 	and.w	r3, r3, #7
 800963c:	60fb      	str	r3, [r7, #12]
 800963e:	68fb      	ldr	r3, [r7, #12]
 8009640:	2b06      	cmp	r3, #6
 8009642:	d010      	beq.n	8009666 <HAL_TIM_PWM_Start+0x16a>
 8009644:	687b      	ldr	r3, [r7, #4]
 8009646:	681b      	ldr	r3, [r3, #0]
 8009648:	681a      	ldr	r2, [r3, #0]
 800964a:	687b      	ldr	r3, [r7, #4]
 800964c:	681b      	ldr	r3, [r3, #0]
 800964e:	f042 0201 	orr.w	r2, r2, #1
 8009652:	601a      	str	r2, [r3, #0]
 8009654:	e007      	b.n	8009666 <HAL_TIM_PWM_Start+0x16a>
 8009656:	687b      	ldr	r3, [r7, #4]
 8009658:	681b      	ldr	r3, [r3, #0]
 800965a:	681a      	ldr	r2, [r3, #0]
 800965c:	687b      	ldr	r3, [r7, #4]
 800965e:	681b      	ldr	r3, [r3, #0]
 8009660:	f042 0201 	orr.w	r2, r2, #1
 8009664:	601a      	str	r2, [r3, #0]
 8009666:	2300      	movs	r3, #0
 8009668:	4618      	mov	r0, r3
 800966a:	3710      	adds	r7, #16
 800966c:	46bd      	mov	sp, r7
 800966e:	bd80      	pop	{r7, pc}
 8009670:	40010000 	.word	0x40010000
 8009674:	40010400 	.word	0x40010400
 8009678:	40000400 	.word	0x40000400
 800967c:	40000800 	.word	0x40000800
 8009680:	40000c00 	.word	0x40000c00
 8009684:	40014000 	.word	0x40014000
 8009688:	40001800 	.word	0x40001800

0800968c <HAL_TIM_IC_Init>:
 800968c:	b580      	push	{r7, lr}
 800968e:	b082      	sub	sp, #8
 8009690:	af00      	add	r7, sp, #0
 8009692:	6078      	str	r0, [r7, #4]
 8009694:	687b      	ldr	r3, [r7, #4]
 8009696:	2b00      	cmp	r3, #0
 8009698:	d101      	bne.n	800969e <HAL_TIM_IC_Init+0x12>
 800969a:	2301      	movs	r3, #1
 800969c:	e041      	b.n	8009722 <HAL_TIM_IC_Init+0x96>
 800969e:	687b      	ldr	r3, [r7, #4]
 80096a0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80096a4:	b2db      	uxtb	r3, r3
 80096a6:	2b00      	cmp	r3, #0
 80096a8:	d106      	bne.n	80096b8 <HAL_TIM_IC_Init+0x2c>
 80096aa:	687b      	ldr	r3, [r7, #4]
 80096ac:	2200      	movs	r2, #0
 80096ae:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80096b2:	6878      	ldr	r0, [r7, #4]
 80096b4:	f000 f839 	bl	800972a <HAL_TIM_IC_MspInit>
 80096b8:	687b      	ldr	r3, [r7, #4]
 80096ba:	2202      	movs	r2, #2
 80096bc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80096c0:	687b      	ldr	r3, [r7, #4]
 80096c2:	681a      	ldr	r2, [r3, #0]
 80096c4:	687b      	ldr	r3, [r7, #4]
 80096c6:	3304      	adds	r3, #4
 80096c8:	4619      	mov	r1, r3
 80096ca:	4610      	mov	r0, r2
 80096cc:	f000 ff6a 	bl	800a5a4 <TIM_Base_SetConfig>
 80096d0:	687b      	ldr	r3, [r7, #4]
 80096d2:	2201      	movs	r2, #1
 80096d4:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80096d8:	687b      	ldr	r3, [r7, #4]
 80096da:	2201      	movs	r2, #1
 80096dc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80096e0:	687b      	ldr	r3, [r7, #4]
 80096e2:	2201      	movs	r2, #1
 80096e4:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80096e8:	687b      	ldr	r3, [r7, #4]
 80096ea:	2201      	movs	r2, #1
 80096ec:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80096f0:	687b      	ldr	r3, [r7, #4]
 80096f2:	2201      	movs	r2, #1
 80096f4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80096f8:	687b      	ldr	r3, [r7, #4]
 80096fa:	2201      	movs	r2, #1
 80096fc:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009700:	687b      	ldr	r3, [r7, #4]
 8009702:	2201      	movs	r2, #1
 8009704:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8009708:	687b      	ldr	r3, [r7, #4]
 800970a:	2201      	movs	r2, #1
 800970c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8009710:	687b      	ldr	r3, [r7, #4]
 8009712:	2201      	movs	r2, #1
 8009714:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8009718:	687b      	ldr	r3, [r7, #4]
 800971a:	2201      	movs	r2, #1
 800971c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009720:	2300      	movs	r3, #0
 8009722:	4618      	mov	r0, r3
 8009724:	3708      	adds	r7, #8
 8009726:	46bd      	mov	sp, r7
 8009728:	bd80      	pop	{r7, pc}

0800972a <HAL_TIM_IC_MspInit>:
 800972a:	b480      	push	{r7}
 800972c:	b083      	sub	sp, #12
 800972e:	af00      	add	r7, sp, #0
 8009730:	6078      	str	r0, [r7, #4]
 8009732:	bf00      	nop
 8009734:	370c      	adds	r7, #12
 8009736:	46bd      	mov	sp, r7
 8009738:	f85d 7b04 	ldr.w	r7, [sp], #4
 800973c:	4770      	bx	lr
	...

08009740 <HAL_TIM_IC_Start_DMA>:
 8009740:	b580      	push	{r7, lr}
 8009742:	b086      	sub	sp, #24
 8009744:	af00      	add	r7, sp, #0
 8009746:	60f8      	str	r0, [r7, #12]
 8009748:	60b9      	str	r1, [r7, #8]
 800974a:	607a      	str	r2, [r7, #4]
 800974c:	807b      	strh	r3, [r7, #2]
 800974e:	2300      	movs	r3, #0
 8009750:	75fb      	strb	r3, [r7, #23]
 8009752:	68bb      	ldr	r3, [r7, #8]
 8009754:	2b00      	cmp	r3, #0
 8009756:	d104      	bne.n	8009762 <HAL_TIM_IC_Start_DMA+0x22>
 8009758:	68fb      	ldr	r3, [r7, #12]
 800975a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800975e:	b2db      	uxtb	r3, r3
 8009760:	e013      	b.n	800978a <HAL_TIM_IC_Start_DMA+0x4a>
 8009762:	68bb      	ldr	r3, [r7, #8]
 8009764:	2b04      	cmp	r3, #4
 8009766:	d104      	bne.n	8009772 <HAL_TIM_IC_Start_DMA+0x32>
 8009768:	68fb      	ldr	r3, [r7, #12]
 800976a:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800976e:	b2db      	uxtb	r3, r3
 8009770:	e00b      	b.n	800978a <HAL_TIM_IC_Start_DMA+0x4a>
 8009772:	68bb      	ldr	r3, [r7, #8]
 8009774:	2b08      	cmp	r3, #8
 8009776:	d104      	bne.n	8009782 <HAL_TIM_IC_Start_DMA+0x42>
 8009778:	68fb      	ldr	r3, [r7, #12]
 800977a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800977e:	b2db      	uxtb	r3, r3
 8009780:	e003      	b.n	800978a <HAL_TIM_IC_Start_DMA+0x4a>
 8009782:	68fb      	ldr	r3, [r7, #12]
 8009784:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8009788:	b2db      	uxtb	r3, r3
 800978a:	75bb      	strb	r3, [r7, #22]
 800978c:	68bb      	ldr	r3, [r7, #8]
 800978e:	2b00      	cmp	r3, #0
 8009790:	d104      	bne.n	800979c <HAL_TIM_IC_Start_DMA+0x5c>
 8009792:	68fb      	ldr	r3, [r7, #12]
 8009794:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8009798:	b2db      	uxtb	r3, r3
 800979a:	e013      	b.n	80097c4 <HAL_TIM_IC_Start_DMA+0x84>
 800979c:	68bb      	ldr	r3, [r7, #8]
 800979e:	2b04      	cmp	r3, #4
 80097a0:	d104      	bne.n	80097ac <HAL_TIM_IC_Start_DMA+0x6c>
 80097a2:	68fb      	ldr	r3, [r7, #12]
 80097a4:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 80097a8:	b2db      	uxtb	r3, r3
 80097aa:	e00b      	b.n	80097c4 <HAL_TIM_IC_Start_DMA+0x84>
 80097ac:	68bb      	ldr	r3, [r7, #8]
 80097ae:	2b08      	cmp	r3, #8
 80097b0:	d104      	bne.n	80097bc <HAL_TIM_IC_Start_DMA+0x7c>
 80097b2:	68fb      	ldr	r3, [r7, #12]
 80097b4:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 80097b8:	b2db      	uxtb	r3, r3
 80097ba:	e003      	b.n	80097c4 <HAL_TIM_IC_Start_DMA+0x84>
 80097bc:	68fb      	ldr	r3, [r7, #12]
 80097be:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 80097c2:	b2db      	uxtb	r3, r3
 80097c4:	757b      	strb	r3, [r7, #21]
 80097c6:	7dbb      	ldrb	r3, [r7, #22]
 80097c8:	2b02      	cmp	r3, #2
 80097ca:	d002      	beq.n	80097d2 <HAL_TIM_IC_Start_DMA+0x92>
 80097cc:	7d7b      	ldrb	r3, [r7, #21]
 80097ce:	2b02      	cmp	r3, #2
 80097d0:	d101      	bne.n	80097d6 <HAL_TIM_IC_Start_DMA+0x96>
 80097d2:	2302      	movs	r3, #2
 80097d4:	e146      	b.n	8009a64 <HAL_TIM_IC_Start_DMA+0x324>
 80097d6:	7dbb      	ldrb	r3, [r7, #22]
 80097d8:	2b01      	cmp	r3, #1
 80097da:	d143      	bne.n	8009864 <HAL_TIM_IC_Start_DMA+0x124>
 80097dc:	7d7b      	ldrb	r3, [r7, #21]
 80097de:	2b01      	cmp	r3, #1
 80097e0:	d140      	bne.n	8009864 <HAL_TIM_IC_Start_DMA+0x124>
 80097e2:	687b      	ldr	r3, [r7, #4]
 80097e4:	2b00      	cmp	r3, #0
 80097e6:	d104      	bne.n	80097f2 <HAL_TIM_IC_Start_DMA+0xb2>
 80097e8:	887b      	ldrh	r3, [r7, #2]
 80097ea:	2b00      	cmp	r3, #0
 80097ec:	d001      	beq.n	80097f2 <HAL_TIM_IC_Start_DMA+0xb2>
 80097ee:	2301      	movs	r3, #1
 80097f0:	e138      	b.n	8009a64 <HAL_TIM_IC_Start_DMA+0x324>
 80097f2:	68bb      	ldr	r3, [r7, #8]
 80097f4:	2b00      	cmp	r3, #0
 80097f6:	d104      	bne.n	8009802 <HAL_TIM_IC_Start_DMA+0xc2>
 80097f8:	68fb      	ldr	r3, [r7, #12]
 80097fa:	2202      	movs	r2, #2
 80097fc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009800:	e013      	b.n	800982a <HAL_TIM_IC_Start_DMA+0xea>
 8009802:	68bb      	ldr	r3, [r7, #8]
 8009804:	2b04      	cmp	r3, #4
 8009806:	d104      	bne.n	8009812 <HAL_TIM_IC_Start_DMA+0xd2>
 8009808:	68fb      	ldr	r3, [r7, #12]
 800980a:	2202      	movs	r2, #2
 800980c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8009810:	e00b      	b.n	800982a <HAL_TIM_IC_Start_DMA+0xea>
 8009812:	68bb      	ldr	r3, [r7, #8]
 8009814:	2b08      	cmp	r3, #8
 8009816:	d104      	bne.n	8009822 <HAL_TIM_IC_Start_DMA+0xe2>
 8009818:	68fb      	ldr	r3, [r7, #12]
 800981a:	2202      	movs	r2, #2
 800981c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009820:	e003      	b.n	800982a <HAL_TIM_IC_Start_DMA+0xea>
 8009822:	68fb      	ldr	r3, [r7, #12]
 8009824:	2202      	movs	r2, #2
 8009826:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800982a:	68bb      	ldr	r3, [r7, #8]
 800982c:	2b00      	cmp	r3, #0
 800982e:	d104      	bne.n	800983a <HAL_TIM_IC_Start_DMA+0xfa>
 8009830:	68fb      	ldr	r3, [r7, #12]
 8009832:	2202      	movs	r2, #2
 8009834:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009838:	e016      	b.n	8009868 <HAL_TIM_IC_Start_DMA+0x128>
 800983a:	68bb      	ldr	r3, [r7, #8]
 800983c:	2b04      	cmp	r3, #4
 800983e:	d104      	bne.n	800984a <HAL_TIM_IC_Start_DMA+0x10a>
 8009840:	68fb      	ldr	r3, [r7, #12]
 8009842:	2202      	movs	r2, #2
 8009844:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8009848:	e00e      	b.n	8009868 <HAL_TIM_IC_Start_DMA+0x128>
 800984a:	68bb      	ldr	r3, [r7, #8]
 800984c:	2b08      	cmp	r3, #8
 800984e:	d104      	bne.n	800985a <HAL_TIM_IC_Start_DMA+0x11a>
 8009850:	68fb      	ldr	r3, [r7, #12]
 8009852:	2202      	movs	r2, #2
 8009854:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8009858:	e006      	b.n	8009868 <HAL_TIM_IC_Start_DMA+0x128>
 800985a:	68fb      	ldr	r3, [r7, #12]
 800985c:	2202      	movs	r2, #2
 800985e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8009862:	e001      	b.n	8009868 <HAL_TIM_IC_Start_DMA+0x128>
 8009864:	2301      	movs	r3, #1
 8009866:	e0fd      	b.n	8009a64 <HAL_TIM_IC_Start_DMA+0x324>
 8009868:	68fb      	ldr	r3, [r7, #12]
 800986a:	681b      	ldr	r3, [r3, #0]
 800986c:	2201      	movs	r2, #1
 800986e:	68b9      	ldr	r1, [r7, #8]
 8009870:	4618      	mov	r0, r3
 8009872:	f001 faab 	bl	800adcc <TIM_CCxChannelCmd>
 8009876:	68bb      	ldr	r3, [r7, #8]
 8009878:	2b0c      	cmp	r3, #12
 800987a:	f200 80ad 	bhi.w	80099d8 <HAL_TIM_IC_Start_DMA+0x298>
 800987e:	a201      	add	r2, pc, #4	; (adr r2, 8009884 <HAL_TIM_IC_Start_DMA+0x144>)
 8009880:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009884:	080098b9 	.word	0x080098b9
 8009888:	080099d9 	.word	0x080099d9
 800988c:	080099d9 	.word	0x080099d9
 8009890:	080099d9 	.word	0x080099d9
 8009894:	08009901 	.word	0x08009901
 8009898:	080099d9 	.word	0x080099d9
 800989c:	080099d9 	.word	0x080099d9
 80098a0:	080099d9 	.word	0x080099d9
 80098a4:	08009949 	.word	0x08009949
 80098a8:	080099d9 	.word	0x080099d9
 80098ac:	080099d9 	.word	0x080099d9
 80098b0:	080099d9 	.word	0x080099d9
 80098b4:	08009991 	.word	0x08009991
 80098b8:	68fb      	ldr	r3, [r7, #12]
 80098ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80098bc:	4a6b      	ldr	r2, [pc, #428]	; (8009a6c <HAL_TIM_IC_Start_DMA+0x32c>)
 80098be:	63da      	str	r2, [r3, #60]	; 0x3c
 80098c0:	68fb      	ldr	r3, [r7, #12]
 80098c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80098c4:	4a6a      	ldr	r2, [pc, #424]	; (8009a70 <HAL_TIM_IC_Start_DMA+0x330>)
 80098c6:	641a      	str	r2, [r3, #64]	; 0x40
 80098c8:	68fb      	ldr	r3, [r7, #12]
 80098ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80098cc:	4a69      	ldr	r2, [pc, #420]	; (8009a74 <HAL_TIM_IC_Start_DMA+0x334>)
 80098ce:	64da      	str	r2, [r3, #76]	; 0x4c
 80098d0:	68fb      	ldr	r3, [r7, #12]
 80098d2:	6a58      	ldr	r0, [r3, #36]	; 0x24
 80098d4:	68fb      	ldr	r3, [r7, #12]
 80098d6:	681b      	ldr	r3, [r3, #0]
 80098d8:	3334      	adds	r3, #52	; 0x34
 80098da:	4619      	mov	r1, r3
 80098dc:	687a      	ldr	r2, [r7, #4]
 80098de:	887b      	ldrh	r3, [r7, #2]
 80098e0:	f7fd ff68 	bl	80077b4 <HAL_DMA_Start_IT>
 80098e4:	4603      	mov	r3, r0
 80098e6:	2b00      	cmp	r3, #0
 80098e8:	d001      	beq.n	80098ee <HAL_TIM_IC_Start_DMA+0x1ae>
 80098ea:	2301      	movs	r3, #1
 80098ec:	e0ba      	b.n	8009a64 <HAL_TIM_IC_Start_DMA+0x324>
 80098ee:	68fb      	ldr	r3, [r7, #12]
 80098f0:	681b      	ldr	r3, [r3, #0]
 80098f2:	68da      	ldr	r2, [r3, #12]
 80098f4:	68fb      	ldr	r3, [r7, #12]
 80098f6:	681b      	ldr	r3, [r3, #0]
 80098f8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80098fc:	60da      	str	r2, [r3, #12]
 80098fe:	e06e      	b.n	80099de <HAL_TIM_IC_Start_DMA+0x29e>
 8009900:	68fb      	ldr	r3, [r7, #12]
 8009902:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009904:	4a59      	ldr	r2, [pc, #356]	; (8009a6c <HAL_TIM_IC_Start_DMA+0x32c>)
 8009906:	63da      	str	r2, [r3, #60]	; 0x3c
 8009908:	68fb      	ldr	r3, [r7, #12]
 800990a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800990c:	4a58      	ldr	r2, [pc, #352]	; (8009a70 <HAL_TIM_IC_Start_DMA+0x330>)
 800990e:	641a      	str	r2, [r3, #64]	; 0x40
 8009910:	68fb      	ldr	r3, [r7, #12]
 8009912:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009914:	4a57      	ldr	r2, [pc, #348]	; (8009a74 <HAL_TIM_IC_Start_DMA+0x334>)
 8009916:	64da      	str	r2, [r3, #76]	; 0x4c
 8009918:	68fb      	ldr	r3, [r7, #12]
 800991a:	6a98      	ldr	r0, [r3, #40]	; 0x28
 800991c:	68fb      	ldr	r3, [r7, #12]
 800991e:	681b      	ldr	r3, [r3, #0]
 8009920:	3338      	adds	r3, #56	; 0x38
 8009922:	4619      	mov	r1, r3
 8009924:	687a      	ldr	r2, [r7, #4]
 8009926:	887b      	ldrh	r3, [r7, #2]
 8009928:	f7fd ff44 	bl	80077b4 <HAL_DMA_Start_IT>
 800992c:	4603      	mov	r3, r0
 800992e:	2b00      	cmp	r3, #0
 8009930:	d001      	beq.n	8009936 <HAL_TIM_IC_Start_DMA+0x1f6>
 8009932:	2301      	movs	r3, #1
 8009934:	e096      	b.n	8009a64 <HAL_TIM_IC_Start_DMA+0x324>
 8009936:	68fb      	ldr	r3, [r7, #12]
 8009938:	681b      	ldr	r3, [r3, #0]
 800993a:	68da      	ldr	r2, [r3, #12]
 800993c:	68fb      	ldr	r3, [r7, #12]
 800993e:	681b      	ldr	r3, [r3, #0]
 8009940:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009944:	60da      	str	r2, [r3, #12]
 8009946:	e04a      	b.n	80099de <HAL_TIM_IC_Start_DMA+0x29e>
 8009948:	68fb      	ldr	r3, [r7, #12]
 800994a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800994c:	4a47      	ldr	r2, [pc, #284]	; (8009a6c <HAL_TIM_IC_Start_DMA+0x32c>)
 800994e:	63da      	str	r2, [r3, #60]	; 0x3c
 8009950:	68fb      	ldr	r3, [r7, #12]
 8009952:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009954:	4a46      	ldr	r2, [pc, #280]	; (8009a70 <HAL_TIM_IC_Start_DMA+0x330>)
 8009956:	641a      	str	r2, [r3, #64]	; 0x40
 8009958:	68fb      	ldr	r3, [r7, #12]
 800995a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800995c:	4a45      	ldr	r2, [pc, #276]	; (8009a74 <HAL_TIM_IC_Start_DMA+0x334>)
 800995e:	64da      	str	r2, [r3, #76]	; 0x4c
 8009960:	68fb      	ldr	r3, [r7, #12]
 8009962:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8009964:	68fb      	ldr	r3, [r7, #12]
 8009966:	681b      	ldr	r3, [r3, #0]
 8009968:	333c      	adds	r3, #60	; 0x3c
 800996a:	4619      	mov	r1, r3
 800996c:	687a      	ldr	r2, [r7, #4]
 800996e:	887b      	ldrh	r3, [r7, #2]
 8009970:	f7fd ff20 	bl	80077b4 <HAL_DMA_Start_IT>
 8009974:	4603      	mov	r3, r0
 8009976:	2b00      	cmp	r3, #0
 8009978:	d001      	beq.n	800997e <HAL_TIM_IC_Start_DMA+0x23e>
 800997a:	2301      	movs	r3, #1
 800997c:	e072      	b.n	8009a64 <HAL_TIM_IC_Start_DMA+0x324>
 800997e:	68fb      	ldr	r3, [r7, #12]
 8009980:	681b      	ldr	r3, [r3, #0]
 8009982:	68da      	ldr	r2, [r3, #12]
 8009984:	68fb      	ldr	r3, [r7, #12]
 8009986:	681b      	ldr	r3, [r3, #0]
 8009988:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800998c:	60da      	str	r2, [r3, #12]
 800998e:	e026      	b.n	80099de <HAL_TIM_IC_Start_DMA+0x29e>
 8009990:	68fb      	ldr	r3, [r7, #12]
 8009992:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009994:	4a35      	ldr	r2, [pc, #212]	; (8009a6c <HAL_TIM_IC_Start_DMA+0x32c>)
 8009996:	63da      	str	r2, [r3, #60]	; 0x3c
 8009998:	68fb      	ldr	r3, [r7, #12]
 800999a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800999c:	4a34      	ldr	r2, [pc, #208]	; (8009a70 <HAL_TIM_IC_Start_DMA+0x330>)
 800999e:	641a      	str	r2, [r3, #64]	; 0x40
 80099a0:	68fb      	ldr	r3, [r7, #12]
 80099a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80099a4:	4a33      	ldr	r2, [pc, #204]	; (8009a74 <HAL_TIM_IC_Start_DMA+0x334>)
 80099a6:	64da      	str	r2, [r3, #76]	; 0x4c
 80099a8:	68fb      	ldr	r3, [r7, #12]
 80099aa:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80099ac:	68fb      	ldr	r3, [r7, #12]
 80099ae:	681b      	ldr	r3, [r3, #0]
 80099b0:	3340      	adds	r3, #64	; 0x40
 80099b2:	4619      	mov	r1, r3
 80099b4:	687a      	ldr	r2, [r7, #4]
 80099b6:	887b      	ldrh	r3, [r7, #2]
 80099b8:	f7fd fefc 	bl	80077b4 <HAL_DMA_Start_IT>
 80099bc:	4603      	mov	r3, r0
 80099be:	2b00      	cmp	r3, #0
 80099c0:	d001      	beq.n	80099c6 <HAL_TIM_IC_Start_DMA+0x286>
 80099c2:	2301      	movs	r3, #1
 80099c4:	e04e      	b.n	8009a64 <HAL_TIM_IC_Start_DMA+0x324>
 80099c6:	68fb      	ldr	r3, [r7, #12]
 80099c8:	681b      	ldr	r3, [r3, #0]
 80099ca:	68da      	ldr	r2, [r3, #12]
 80099cc:	68fb      	ldr	r3, [r7, #12]
 80099ce:	681b      	ldr	r3, [r3, #0]
 80099d0:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80099d4:	60da      	str	r2, [r3, #12]
 80099d6:	e002      	b.n	80099de <HAL_TIM_IC_Start_DMA+0x29e>
 80099d8:	2301      	movs	r3, #1
 80099da:	75fb      	strb	r3, [r7, #23]
 80099dc:	bf00      	nop
 80099de:	68fb      	ldr	r3, [r7, #12]
 80099e0:	681b      	ldr	r3, [r3, #0]
 80099e2:	4a25      	ldr	r2, [pc, #148]	; (8009a78 <HAL_TIM_IC_Start_DMA+0x338>)
 80099e4:	4293      	cmp	r3, r2
 80099e6:	d022      	beq.n	8009a2e <HAL_TIM_IC_Start_DMA+0x2ee>
 80099e8:	68fb      	ldr	r3, [r7, #12]
 80099ea:	681b      	ldr	r3, [r3, #0]
 80099ec:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80099f0:	d01d      	beq.n	8009a2e <HAL_TIM_IC_Start_DMA+0x2ee>
 80099f2:	68fb      	ldr	r3, [r7, #12]
 80099f4:	681b      	ldr	r3, [r3, #0]
 80099f6:	4a21      	ldr	r2, [pc, #132]	; (8009a7c <HAL_TIM_IC_Start_DMA+0x33c>)
 80099f8:	4293      	cmp	r3, r2
 80099fa:	d018      	beq.n	8009a2e <HAL_TIM_IC_Start_DMA+0x2ee>
 80099fc:	68fb      	ldr	r3, [r7, #12]
 80099fe:	681b      	ldr	r3, [r3, #0]
 8009a00:	4a1f      	ldr	r2, [pc, #124]	; (8009a80 <HAL_TIM_IC_Start_DMA+0x340>)
 8009a02:	4293      	cmp	r3, r2
 8009a04:	d013      	beq.n	8009a2e <HAL_TIM_IC_Start_DMA+0x2ee>
 8009a06:	68fb      	ldr	r3, [r7, #12]
 8009a08:	681b      	ldr	r3, [r3, #0]
 8009a0a:	4a1e      	ldr	r2, [pc, #120]	; (8009a84 <HAL_TIM_IC_Start_DMA+0x344>)
 8009a0c:	4293      	cmp	r3, r2
 8009a0e:	d00e      	beq.n	8009a2e <HAL_TIM_IC_Start_DMA+0x2ee>
 8009a10:	68fb      	ldr	r3, [r7, #12]
 8009a12:	681b      	ldr	r3, [r3, #0]
 8009a14:	4a1c      	ldr	r2, [pc, #112]	; (8009a88 <HAL_TIM_IC_Start_DMA+0x348>)
 8009a16:	4293      	cmp	r3, r2
 8009a18:	d009      	beq.n	8009a2e <HAL_TIM_IC_Start_DMA+0x2ee>
 8009a1a:	68fb      	ldr	r3, [r7, #12]
 8009a1c:	681b      	ldr	r3, [r3, #0]
 8009a1e:	4a1b      	ldr	r2, [pc, #108]	; (8009a8c <HAL_TIM_IC_Start_DMA+0x34c>)
 8009a20:	4293      	cmp	r3, r2
 8009a22:	d004      	beq.n	8009a2e <HAL_TIM_IC_Start_DMA+0x2ee>
 8009a24:	68fb      	ldr	r3, [r7, #12]
 8009a26:	681b      	ldr	r3, [r3, #0]
 8009a28:	4a19      	ldr	r2, [pc, #100]	; (8009a90 <HAL_TIM_IC_Start_DMA+0x350>)
 8009a2a:	4293      	cmp	r3, r2
 8009a2c:	d111      	bne.n	8009a52 <HAL_TIM_IC_Start_DMA+0x312>
 8009a2e:	68fb      	ldr	r3, [r7, #12]
 8009a30:	681b      	ldr	r3, [r3, #0]
 8009a32:	689b      	ldr	r3, [r3, #8]
 8009a34:	f003 0307 	and.w	r3, r3, #7
 8009a38:	613b      	str	r3, [r7, #16]
 8009a3a:	693b      	ldr	r3, [r7, #16]
 8009a3c:	2b06      	cmp	r3, #6
 8009a3e:	d010      	beq.n	8009a62 <HAL_TIM_IC_Start_DMA+0x322>
 8009a40:	68fb      	ldr	r3, [r7, #12]
 8009a42:	681b      	ldr	r3, [r3, #0]
 8009a44:	681a      	ldr	r2, [r3, #0]
 8009a46:	68fb      	ldr	r3, [r7, #12]
 8009a48:	681b      	ldr	r3, [r3, #0]
 8009a4a:	f042 0201 	orr.w	r2, r2, #1
 8009a4e:	601a      	str	r2, [r3, #0]
 8009a50:	e007      	b.n	8009a62 <HAL_TIM_IC_Start_DMA+0x322>
 8009a52:	68fb      	ldr	r3, [r7, #12]
 8009a54:	681b      	ldr	r3, [r3, #0]
 8009a56:	681a      	ldr	r2, [r3, #0]
 8009a58:	68fb      	ldr	r3, [r7, #12]
 8009a5a:	681b      	ldr	r3, [r3, #0]
 8009a5c:	f042 0201 	orr.w	r2, r2, #1
 8009a60:	601a      	str	r2, [r3, #0]
 8009a62:	7dfb      	ldrb	r3, [r7, #23]
 8009a64:	4618      	mov	r0, r3
 8009a66:	3718      	adds	r7, #24
 8009a68:	46bd      	mov	sp, r7
 8009a6a:	bd80      	pop	{r7, pc}
 8009a6c:	0800a475 	.word	0x0800a475
 8009a70:	0800a53d 	.word	0x0800a53d
 8009a74:	0800a3e3 	.word	0x0800a3e3
 8009a78:	40010000 	.word	0x40010000
 8009a7c:	40000400 	.word	0x40000400
 8009a80:	40000800 	.word	0x40000800
 8009a84:	40000c00 	.word	0x40000c00
 8009a88:	40010400 	.word	0x40010400
 8009a8c:	40014000 	.word	0x40014000
 8009a90:	40001800 	.word	0x40001800

08009a94 <HAL_TIM_Encoder_Init>:
 8009a94:	b580      	push	{r7, lr}
 8009a96:	b086      	sub	sp, #24
 8009a98:	af00      	add	r7, sp, #0
 8009a9a:	6078      	str	r0, [r7, #4]
 8009a9c:	6039      	str	r1, [r7, #0]
 8009a9e:	687b      	ldr	r3, [r7, #4]
 8009aa0:	2b00      	cmp	r3, #0
 8009aa2:	d101      	bne.n	8009aa8 <HAL_TIM_Encoder_Init+0x14>
 8009aa4:	2301      	movs	r3, #1
 8009aa6:	e097      	b.n	8009bd8 <HAL_TIM_Encoder_Init+0x144>
 8009aa8:	687b      	ldr	r3, [r7, #4]
 8009aaa:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8009aae:	b2db      	uxtb	r3, r3
 8009ab0:	2b00      	cmp	r3, #0
 8009ab2:	d106      	bne.n	8009ac2 <HAL_TIM_Encoder_Init+0x2e>
 8009ab4:	687b      	ldr	r3, [r7, #4]
 8009ab6:	2200      	movs	r2, #0
 8009ab8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009abc:	6878      	ldr	r0, [r7, #4]
 8009abe:	f7fc fb31 	bl	8006124 <HAL_TIM_Encoder_MspInit>
 8009ac2:	687b      	ldr	r3, [r7, #4]
 8009ac4:	2202      	movs	r2, #2
 8009ac6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009aca:	687b      	ldr	r3, [r7, #4]
 8009acc:	681b      	ldr	r3, [r3, #0]
 8009ace:	689b      	ldr	r3, [r3, #8]
 8009ad0:	687a      	ldr	r2, [r7, #4]
 8009ad2:	6812      	ldr	r2, [r2, #0]
 8009ad4:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8009ad8:	f023 0307 	bic.w	r3, r3, #7
 8009adc:	6093      	str	r3, [r2, #8]
 8009ade:	687b      	ldr	r3, [r7, #4]
 8009ae0:	681a      	ldr	r2, [r3, #0]
 8009ae2:	687b      	ldr	r3, [r7, #4]
 8009ae4:	3304      	adds	r3, #4
 8009ae6:	4619      	mov	r1, r3
 8009ae8:	4610      	mov	r0, r2
 8009aea:	f000 fd5b 	bl	800a5a4 <TIM_Base_SetConfig>
 8009aee:	687b      	ldr	r3, [r7, #4]
 8009af0:	681b      	ldr	r3, [r3, #0]
 8009af2:	689b      	ldr	r3, [r3, #8]
 8009af4:	617b      	str	r3, [r7, #20]
 8009af6:	687b      	ldr	r3, [r7, #4]
 8009af8:	681b      	ldr	r3, [r3, #0]
 8009afa:	699b      	ldr	r3, [r3, #24]
 8009afc:	613b      	str	r3, [r7, #16]
 8009afe:	687b      	ldr	r3, [r7, #4]
 8009b00:	681b      	ldr	r3, [r3, #0]
 8009b02:	6a1b      	ldr	r3, [r3, #32]
 8009b04:	60fb      	str	r3, [r7, #12]
 8009b06:	683b      	ldr	r3, [r7, #0]
 8009b08:	681b      	ldr	r3, [r3, #0]
 8009b0a:	697a      	ldr	r2, [r7, #20]
 8009b0c:	4313      	orrs	r3, r2
 8009b0e:	617b      	str	r3, [r7, #20]
 8009b10:	693b      	ldr	r3, [r7, #16]
 8009b12:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009b16:	f023 0303 	bic.w	r3, r3, #3
 8009b1a:	613b      	str	r3, [r7, #16]
 8009b1c:	683b      	ldr	r3, [r7, #0]
 8009b1e:	689a      	ldr	r2, [r3, #8]
 8009b20:	683b      	ldr	r3, [r7, #0]
 8009b22:	699b      	ldr	r3, [r3, #24]
 8009b24:	021b      	lsls	r3, r3, #8
 8009b26:	4313      	orrs	r3, r2
 8009b28:	693a      	ldr	r2, [r7, #16]
 8009b2a:	4313      	orrs	r3, r2
 8009b2c:	613b      	str	r3, [r7, #16]
 8009b2e:	693b      	ldr	r3, [r7, #16]
 8009b30:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8009b34:	f023 030c 	bic.w	r3, r3, #12
 8009b38:	613b      	str	r3, [r7, #16]
 8009b3a:	693b      	ldr	r3, [r7, #16]
 8009b3c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8009b40:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8009b44:	613b      	str	r3, [r7, #16]
 8009b46:	683b      	ldr	r3, [r7, #0]
 8009b48:	68da      	ldr	r2, [r3, #12]
 8009b4a:	683b      	ldr	r3, [r7, #0]
 8009b4c:	69db      	ldr	r3, [r3, #28]
 8009b4e:	021b      	lsls	r3, r3, #8
 8009b50:	4313      	orrs	r3, r2
 8009b52:	693a      	ldr	r2, [r7, #16]
 8009b54:	4313      	orrs	r3, r2
 8009b56:	613b      	str	r3, [r7, #16]
 8009b58:	683b      	ldr	r3, [r7, #0]
 8009b5a:	691b      	ldr	r3, [r3, #16]
 8009b5c:	011a      	lsls	r2, r3, #4
 8009b5e:	683b      	ldr	r3, [r7, #0]
 8009b60:	6a1b      	ldr	r3, [r3, #32]
 8009b62:	031b      	lsls	r3, r3, #12
 8009b64:	4313      	orrs	r3, r2
 8009b66:	693a      	ldr	r2, [r7, #16]
 8009b68:	4313      	orrs	r3, r2
 8009b6a:	613b      	str	r3, [r7, #16]
 8009b6c:	68fb      	ldr	r3, [r7, #12]
 8009b6e:	f023 0322 	bic.w	r3, r3, #34	; 0x22
 8009b72:	60fb      	str	r3, [r7, #12]
 8009b74:	68fb      	ldr	r3, [r7, #12]
 8009b76:	f023 0388 	bic.w	r3, r3, #136	; 0x88
 8009b7a:	60fb      	str	r3, [r7, #12]
 8009b7c:	683b      	ldr	r3, [r7, #0]
 8009b7e:	685a      	ldr	r2, [r3, #4]
 8009b80:	683b      	ldr	r3, [r7, #0]
 8009b82:	695b      	ldr	r3, [r3, #20]
 8009b84:	011b      	lsls	r3, r3, #4
 8009b86:	4313      	orrs	r3, r2
 8009b88:	68fa      	ldr	r2, [r7, #12]
 8009b8a:	4313      	orrs	r3, r2
 8009b8c:	60fb      	str	r3, [r7, #12]
 8009b8e:	687b      	ldr	r3, [r7, #4]
 8009b90:	681b      	ldr	r3, [r3, #0]
 8009b92:	697a      	ldr	r2, [r7, #20]
 8009b94:	609a      	str	r2, [r3, #8]
 8009b96:	687b      	ldr	r3, [r7, #4]
 8009b98:	681b      	ldr	r3, [r3, #0]
 8009b9a:	693a      	ldr	r2, [r7, #16]
 8009b9c:	619a      	str	r2, [r3, #24]
 8009b9e:	687b      	ldr	r3, [r7, #4]
 8009ba0:	681b      	ldr	r3, [r3, #0]
 8009ba2:	68fa      	ldr	r2, [r7, #12]
 8009ba4:	621a      	str	r2, [r3, #32]
 8009ba6:	687b      	ldr	r3, [r7, #4]
 8009ba8:	2201      	movs	r2, #1
 8009baa:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8009bae:	687b      	ldr	r3, [r7, #4]
 8009bb0:	2201      	movs	r2, #1
 8009bb2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009bb6:	687b      	ldr	r3, [r7, #4]
 8009bb8:	2201      	movs	r2, #1
 8009bba:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8009bbe:	687b      	ldr	r3, [r7, #4]
 8009bc0:	2201      	movs	r2, #1
 8009bc2:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009bc6:	687b      	ldr	r3, [r7, #4]
 8009bc8:	2201      	movs	r2, #1
 8009bca:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8009bce:	687b      	ldr	r3, [r7, #4]
 8009bd0:	2201      	movs	r2, #1
 8009bd2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009bd6:	2300      	movs	r3, #0
 8009bd8:	4618      	mov	r0, r3
 8009bda:	3718      	adds	r7, #24
 8009bdc:	46bd      	mov	sp, r7
 8009bde:	bd80      	pop	{r7, pc}

08009be0 <HAL_TIM_Encoder_Start>:
 8009be0:	b580      	push	{r7, lr}
 8009be2:	b084      	sub	sp, #16
 8009be4:	af00      	add	r7, sp, #0
 8009be6:	6078      	str	r0, [r7, #4]
 8009be8:	6039      	str	r1, [r7, #0]
 8009bea:	687b      	ldr	r3, [r7, #4]
 8009bec:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8009bf0:	73fb      	strb	r3, [r7, #15]
 8009bf2:	687b      	ldr	r3, [r7, #4]
 8009bf4:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8009bf8:	73bb      	strb	r3, [r7, #14]
 8009bfa:	687b      	ldr	r3, [r7, #4]
 8009bfc:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8009c00:	737b      	strb	r3, [r7, #13]
 8009c02:	687b      	ldr	r3, [r7, #4]
 8009c04:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 8009c08:	733b      	strb	r3, [r7, #12]
 8009c0a:	683b      	ldr	r3, [r7, #0]
 8009c0c:	2b00      	cmp	r3, #0
 8009c0e:	d110      	bne.n	8009c32 <HAL_TIM_Encoder_Start+0x52>
 8009c10:	7bfb      	ldrb	r3, [r7, #15]
 8009c12:	2b01      	cmp	r3, #1
 8009c14:	d102      	bne.n	8009c1c <HAL_TIM_Encoder_Start+0x3c>
 8009c16:	7b7b      	ldrb	r3, [r7, #13]
 8009c18:	2b01      	cmp	r3, #1
 8009c1a:	d001      	beq.n	8009c20 <HAL_TIM_Encoder_Start+0x40>
 8009c1c:	2301      	movs	r3, #1
 8009c1e:	e069      	b.n	8009cf4 <HAL_TIM_Encoder_Start+0x114>
 8009c20:	687b      	ldr	r3, [r7, #4]
 8009c22:	2202      	movs	r2, #2
 8009c24:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009c28:	687b      	ldr	r3, [r7, #4]
 8009c2a:	2202      	movs	r2, #2
 8009c2c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009c30:	e031      	b.n	8009c96 <HAL_TIM_Encoder_Start+0xb6>
 8009c32:	683b      	ldr	r3, [r7, #0]
 8009c34:	2b04      	cmp	r3, #4
 8009c36:	d110      	bne.n	8009c5a <HAL_TIM_Encoder_Start+0x7a>
 8009c38:	7bbb      	ldrb	r3, [r7, #14]
 8009c3a:	2b01      	cmp	r3, #1
 8009c3c:	d102      	bne.n	8009c44 <HAL_TIM_Encoder_Start+0x64>
 8009c3e:	7b3b      	ldrb	r3, [r7, #12]
 8009c40:	2b01      	cmp	r3, #1
 8009c42:	d001      	beq.n	8009c48 <HAL_TIM_Encoder_Start+0x68>
 8009c44:	2301      	movs	r3, #1
 8009c46:	e055      	b.n	8009cf4 <HAL_TIM_Encoder_Start+0x114>
 8009c48:	687b      	ldr	r3, [r7, #4]
 8009c4a:	2202      	movs	r2, #2
 8009c4c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8009c50:	687b      	ldr	r3, [r7, #4]
 8009c52:	2202      	movs	r2, #2
 8009c54:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8009c58:	e01d      	b.n	8009c96 <HAL_TIM_Encoder_Start+0xb6>
 8009c5a:	7bfb      	ldrb	r3, [r7, #15]
 8009c5c:	2b01      	cmp	r3, #1
 8009c5e:	d108      	bne.n	8009c72 <HAL_TIM_Encoder_Start+0x92>
 8009c60:	7bbb      	ldrb	r3, [r7, #14]
 8009c62:	2b01      	cmp	r3, #1
 8009c64:	d105      	bne.n	8009c72 <HAL_TIM_Encoder_Start+0x92>
 8009c66:	7b7b      	ldrb	r3, [r7, #13]
 8009c68:	2b01      	cmp	r3, #1
 8009c6a:	d102      	bne.n	8009c72 <HAL_TIM_Encoder_Start+0x92>
 8009c6c:	7b3b      	ldrb	r3, [r7, #12]
 8009c6e:	2b01      	cmp	r3, #1
 8009c70:	d001      	beq.n	8009c76 <HAL_TIM_Encoder_Start+0x96>
 8009c72:	2301      	movs	r3, #1
 8009c74:	e03e      	b.n	8009cf4 <HAL_TIM_Encoder_Start+0x114>
 8009c76:	687b      	ldr	r3, [r7, #4]
 8009c78:	2202      	movs	r2, #2
 8009c7a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009c7e:	687b      	ldr	r3, [r7, #4]
 8009c80:	2202      	movs	r2, #2
 8009c82:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8009c86:	687b      	ldr	r3, [r7, #4]
 8009c88:	2202      	movs	r2, #2
 8009c8a:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009c8e:	687b      	ldr	r3, [r7, #4]
 8009c90:	2202      	movs	r2, #2
 8009c92:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8009c96:	683b      	ldr	r3, [r7, #0]
 8009c98:	2b00      	cmp	r3, #0
 8009c9a:	d003      	beq.n	8009ca4 <HAL_TIM_Encoder_Start+0xc4>
 8009c9c:	683b      	ldr	r3, [r7, #0]
 8009c9e:	2b04      	cmp	r3, #4
 8009ca0:	d008      	beq.n	8009cb4 <HAL_TIM_Encoder_Start+0xd4>
 8009ca2:	e00f      	b.n	8009cc4 <HAL_TIM_Encoder_Start+0xe4>
 8009ca4:	687b      	ldr	r3, [r7, #4]
 8009ca6:	681b      	ldr	r3, [r3, #0]
 8009ca8:	2201      	movs	r2, #1
 8009caa:	2100      	movs	r1, #0
 8009cac:	4618      	mov	r0, r3
 8009cae:	f001 f88d 	bl	800adcc <TIM_CCxChannelCmd>
 8009cb2:	e016      	b.n	8009ce2 <HAL_TIM_Encoder_Start+0x102>
 8009cb4:	687b      	ldr	r3, [r7, #4]
 8009cb6:	681b      	ldr	r3, [r3, #0]
 8009cb8:	2201      	movs	r2, #1
 8009cba:	2104      	movs	r1, #4
 8009cbc:	4618      	mov	r0, r3
 8009cbe:	f001 f885 	bl	800adcc <TIM_CCxChannelCmd>
 8009cc2:	e00e      	b.n	8009ce2 <HAL_TIM_Encoder_Start+0x102>
 8009cc4:	687b      	ldr	r3, [r7, #4]
 8009cc6:	681b      	ldr	r3, [r3, #0]
 8009cc8:	2201      	movs	r2, #1
 8009cca:	2100      	movs	r1, #0
 8009ccc:	4618      	mov	r0, r3
 8009cce:	f001 f87d 	bl	800adcc <TIM_CCxChannelCmd>
 8009cd2:	687b      	ldr	r3, [r7, #4]
 8009cd4:	681b      	ldr	r3, [r3, #0]
 8009cd6:	2201      	movs	r2, #1
 8009cd8:	2104      	movs	r1, #4
 8009cda:	4618      	mov	r0, r3
 8009cdc:	f001 f876 	bl	800adcc <TIM_CCxChannelCmd>
 8009ce0:	bf00      	nop
 8009ce2:	687b      	ldr	r3, [r7, #4]
 8009ce4:	681b      	ldr	r3, [r3, #0]
 8009ce6:	681a      	ldr	r2, [r3, #0]
 8009ce8:	687b      	ldr	r3, [r7, #4]
 8009cea:	681b      	ldr	r3, [r3, #0]
 8009cec:	f042 0201 	orr.w	r2, r2, #1
 8009cf0:	601a      	str	r2, [r3, #0]
 8009cf2:	2300      	movs	r3, #0
 8009cf4:	4618      	mov	r0, r3
 8009cf6:	3710      	adds	r7, #16
 8009cf8:	46bd      	mov	sp, r7
 8009cfa:	bd80      	pop	{r7, pc}

08009cfc <HAL_TIM_IRQHandler>:
 8009cfc:	b580      	push	{r7, lr}
 8009cfe:	b082      	sub	sp, #8
 8009d00:	af00      	add	r7, sp, #0
 8009d02:	6078      	str	r0, [r7, #4]
 8009d04:	687b      	ldr	r3, [r7, #4]
 8009d06:	681b      	ldr	r3, [r3, #0]
 8009d08:	691b      	ldr	r3, [r3, #16]
 8009d0a:	f003 0302 	and.w	r3, r3, #2
 8009d0e:	2b02      	cmp	r3, #2
 8009d10:	d122      	bne.n	8009d58 <HAL_TIM_IRQHandler+0x5c>
 8009d12:	687b      	ldr	r3, [r7, #4]
 8009d14:	681b      	ldr	r3, [r3, #0]
 8009d16:	68db      	ldr	r3, [r3, #12]
 8009d18:	f003 0302 	and.w	r3, r3, #2
 8009d1c:	2b02      	cmp	r3, #2
 8009d1e:	d11b      	bne.n	8009d58 <HAL_TIM_IRQHandler+0x5c>
 8009d20:	687b      	ldr	r3, [r7, #4]
 8009d22:	681b      	ldr	r3, [r3, #0]
 8009d24:	f06f 0202 	mvn.w	r2, #2
 8009d28:	611a      	str	r2, [r3, #16]
 8009d2a:	687b      	ldr	r3, [r7, #4]
 8009d2c:	2201      	movs	r2, #1
 8009d2e:	771a      	strb	r2, [r3, #28]
 8009d30:	687b      	ldr	r3, [r7, #4]
 8009d32:	681b      	ldr	r3, [r3, #0]
 8009d34:	699b      	ldr	r3, [r3, #24]
 8009d36:	f003 0303 	and.w	r3, r3, #3
 8009d3a:	2b00      	cmp	r3, #0
 8009d3c:	d003      	beq.n	8009d46 <HAL_TIM_IRQHandler+0x4a>
 8009d3e:	6878      	ldr	r0, [r7, #4]
 8009d40:	f000 fb1d 	bl	800a37e <HAL_TIM_IC_CaptureCallback>
 8009d44:	e005      	b.n	8009d52 <HAL_TIM_IRQHandler+0x56>
 8009d46:	6878      	ldr	r0, [r7, #4]
 8009d48:	f000 fb0f 	bl	800a36a <HAL_TIM_OC_DelayElapsedCallback>
 8009d4c:	6878      	ldr	r0, [r7, #4]
 8009d4e:	f000 fb2a 	bl	800a3a6 <HAL_TIM_PWM_PulseFinishedCallback>
 8009d52:	687b      	ldr	r3, [r7, #4]
 8009d54:	2200      	movs	r2, #0
 8009d56:	771a      	strb	r2, [r3, #28]
 8009d58:	687b      	ldr	r3, [r7, #4]
 8009d5a:	681b      	ldr	r3, [r3, #0]
 8009d5c:	691b      	ldr	r3, [r3, #16]
 8009d5e:	f003 0304 	and.w	r3, r3, #4
 8009d62:	2b04      	cmp	r3, #4
 8009d64:	d122      	bne.n	8009dac <HAL_TIM_IRQHandler+0xb0>
 8009d66:	687b      	ldr	r3, [r7, #4]
 8009d68:	681b      	ldr	r3, [r3, #0]
 8009d6a:	68db      	ldr	r3, [r3, #12]
 8009d6c:	f003 0304 	and.w	r3, r3, #4
 8009d70:	2b04      	cmp	r3, #4
 8009d72:	d11b      	bne.n	8009dac <HAL_TIM_IRQHandler+0xb0>
 8009d74:	687b      	ldr	r3, [r7, #4]
 8009d76:	681b      	ldr	r3, [r3, #0]
 8009d78:	f06f 0204 	mvn.w	r2, #4
 8009d7c:	611a      	str	r2, [r3, #16]
 8009d7e:	687b      	ldr	r3, [r7, #4]
 8009d80:	2202      	movs	r2, #2
 8009d82:	771a      	strb	r2, [r3, #28]
 8009d84:	687b      	ldr	r3, [r7, #4]
 8009d86:	681b      	ldr	r3, [r3, #0]
 8009d88:	699b      	ldr	r3, [r3, #24]
 8009d8a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009d8e:	2b00      	cmp	r3, #0
 8009d90:	d003      	beq.n	8009d9a <HAL_TIM_IRQHandler+0x9e>
 8009d92:	6878      	ldr	r0, [r7, #4]
 8009d94:	f000 faf3 	bl	800a37e <HAL_TIM_IC_CaptureCallback>
 8009d98:	e005      	b.n	8009da6 <HAL_TIM_IRQHandler+0xaa>
 8009d9a:	6878      	ldr	r0, [r7, #4]
 8009d9c:	f000 fae5 	bl	800a36a <HAL_TIM_OC_DelayElapsedCallback>
 8009da0:	6878      	ldr	r0, [r7, #4]
 8009da2:	f000 fb00 	bl	800a3a6 <HAL_TIM_PWM_PulseFinishedCallback>
 8009da6:	687b      	ldr	r3, [r7, #4]
 8009da8:	2200      	movs	r2, #0
 8009daa:	771a      	strb	r2, [r3, #28]
 8009dac:	687b      	ldr	r3, [r7, #4]
 8009dae:	681b      	ldr	r3, [r3, #0]
 8009db0:	691b      	ldr	r3, [r3, #16]
 8009db2:	f003 0308 	and.w	r3, r3, #8
 8009db6:	2b08      	cmp	r3, #8
 8009db8:	d122      	bne.n	8009e00 <HAL_TIM_IRQHandler+0x104>
 8009dba:	687b      	ldr	r3, [r7, #4]
 8009dbc:	681b      	ldr	r3, [r3, #0]
 8009dbe:	68db      	ldr	r3, [r3, #12]
 8009dc0:	f003 0308 	and.w	r3, r3, #8
 8009dc4:	2b08      	cmp	r3, #8
 8009dc6:	d11b      	bne.n	8009e00 <HAL_TIM_IRQHandler+0x104>
 8009dc8:	687b      	ldr	r3, [r7, #4]
 8009dca:	681b      	ldr	r3, [r3, #0]
 8009dcc:	f06f 0208 	mvn.w	r2, #8
 8009dd0:	611a      	str	r2, [r3, #16]
 8009dd2:	687b      	ldr	r3, [r7, #4]
 8009dd4:	2204      	movs	r2, #4
 8009dd6:	771a      	strb	r2, [r3, #28]
 8009dd8:	687b      	ldr	r3, [r7, #4]
 8009dda:	681b      	ldr	r3, [r3, #0]
 8009ddc:	69db      	ldr	r3, [r3, #28]
 8009dde:	f003 0303 	and.w	r3, r3, #3
 8009de2:	2b00      	cmp	r3, #0
 8009de4:	d003      	beq.n	8009dee <HAL_TIM_IRQHandler+0xf2>
 8009de6:	6878      	ldr	r0, [r7, #4]
 8009de8:	f000 fac9 	bl	800a37e <HAL_TIM_IC_CaptureCallback>
 8009dec:	e005      	b.n	8009dfa <HAL_TIM_IRQHandler+0xfe>
 8009dee:	6878      	ldr	r0, [r7, #4]
 8009df0:	f000 fabb 	bl	800a36a <HAL_TIM_OC_DelayElapsedCallback>
 8009df4:	6878      	ldr	r0, [r7, #4]
 8009df6:	f000 fad6 	bl	800a3a6 <HAL_TIM_PWM_PulseFinishedCallback>
 8009dfa:	687b      	ldr	r3, [r7, #4]
 8009dfc:	2200      	movs	r2, #0
 8009dfe:	771a      	strb	r2, [r3, #28]
 8009e00:	687b      	ldr	r3, [r7, #4]
 8009e02:	681b      	ldr	r3, [r3, #0]
 8009e04:	691b      	ldr	r3, [r3, #16]
 8009e06:	f003 0310 	and.w	r3, r3, #16
 8009e0a:	2b10      	cmp	r3, #16
 8009e0c:	d122      	bne.n	8009e54 <HAL_TIM_IRQHandler+0x158>
 8009e0e:	687b      	ldr	r3, [r7, #4]
 8009e10:	681b      	ldr	r3, [r3, #0]
 8009e12:	68db      	ldr	r3, [r3, #12]
 8009e14:	f003 0310 	and.w	r3, r3, #16
 8009e18:	2b10      	cmp	r3, #16
 8009e1a:	d11b      	bne.n	8009e54 <HAL_TIM_IRQHandler+0x158>
 8009e1c:	687b      	ldr	r3, [r7, #4]
 8009e1e:	681b      	ldr	r3, [r3, #0]
 8009e20:	f06f 0210 	mvn.w	r2, #16
 8009e24:	611a      	str	r2, [r3, #16]
 8009e26:	687b      	ldr	r3, [r7, #4]
 8009e28:	2208      	movs	r2, #8
 8009e2a:	771a      	strb	r2, [r3, #28]
 8009e2c:	687b      	ldr	r3, [r7, #4]
 8009e2e:	681b      	ldr	r3, [r3, #0]
 8009e30:	69db      	ldr	r3, [r3, #28]
 8009e32:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009e36:	2b00      	cmp	r3, #0
 8009e38:	d003      	beq.n	8009e42 <HAL_TIM_IRQHandler+0x146>
 8009e3a:	6878      	ldr	r0, [r7, #4]
 8009e3c:	f000 fa9f 	bl	800a37e <HAL_TIM_IC_CaptureCallback>
 8009e40:	e005      	b.n	8009e4e <HAL_TIM_IRQHandler+0x152>
 8009e42:	6878      	ldr	r0, [r7, #4]
 8009e44:	f000 fa91 	bl	800a36a <HAL_TIM_OC_DelayElapsedCallback>
 8009e48:	6878      	ldr	r0, [r7, #4]
 8009e4a:	f000 faac 	bl	800a3a6 <HAL_TIM_PWM_PulseFinishedCallback>
 8009e4e:	687b      	ldr	r3, [r7, #4]
 8009e50:	2200      	movs	r2, #0
 8009e52:	771a      	strb	r2, [r3, #28]
 8009e54:	687b      	ldr	r3, [r7, #4]
 8009e56:	681b      	ldr	r3, [r3, #0]
 8009e58:	691b      	ldr	r3, [r3, #16]
 8009e5a:	f003 0301 	and.w	r3, r3, #1
 8009e5e:	2b01      	cmp	r3, #1
 8009e60:	d10e      	bne.n	8009e80 <HAL_TIM_IRQHandler+0x184>
 8009e62:	687b      	ldr	r3, [r7, #4]
 8009e64:	681b      	ldr	r3, [r3, #0]
 8009e66:	68db      	ldr	r3, [r3, #12]
 8009e68:	f003 0301 	and.w	r3, r3, #1
 8009e6c:	2b01      	cmp	r3, #1
 8009e6e:	d107      	bne.n	8009e80 <HAL_TIM_IRQHandler+0x184>
 8009e70:	687b      	ldr	r3, [r7, #4]
 8009e72:	681b      	ldr	r3, [r3, #0]
 8009e74:	f06f 0201 	mvn.w	r2, #1
 8009e78:	611a      	str	r2, [r3, #16]
 8009e7a:	6878      	ldr	r0, [r7, #4]
 8009e7c:	f000 fa6b 	bl	800a356 <HAL_TIM_PeriodElapsedCallback>
 8009e80:	687b      	ldr	r3, [r7, #4]
 8009e82:	681b      	ldr	r3, [r3, #0]
 8009e84:	691b      	ldr	r3, [r3, #16]
 8009e86:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009e8a:	2b80      	cmp	r3, #128	; 0x80
 8009e8c:	d10e      	bne.n	8009eac <HAL_TIM_IRQHandler+0x1b0>
 8009e8e:	687b      	ldr	r3, [r7, #4]
 8009e90:	681b      	ldr	r3, [r3, #0]
 8009e92:	68db      	ldr	r3, [r3, #12]
 8009e94:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009e98:	2b80      	cmp	r3, #128	; 0x80
 8009e9a:	d107      	bne.n	8009eac <HAL_TIM_IRQHandler+0x1b0>
 8009e9c:	687b      	ldr	r3, [r7, #4]
 8009e9e:	681b      	ldr	r3, [r3, #0]
 8009ea0:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8009ea4:	611a      	str	r2, [r3, #16]
 8009ea6:	6878      	ldr	r0, [r7, #4]
 8009ea8:	f001 f88e 	bl	800afc8 <HAL_TIMEx_BreakCallback>
 8009eac:	687b      	ldr	r3, [r7, #4]
 8009eae:	681b      	ldr	r3, [r3, #0]
 8009eb0:	691b      	ldr	r3, [r3, #16]
 8009eb2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009eb6:	2b40      	cmp	r3, #64	; 0x40
 8009eb8:	d10e      	bne.n	8009ed8 <HAL_TIM_IRQHandler+0x1dc>
 8009eba:	687b      	ldr	r3, [r7, #4]
 8009ebc:	681b      	ldr	r3, [r3, #0]
 8009ebe:	68db      	ldr	r3, [r3, #12]
 8009ec0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009ec4:	2b40      	cmp	r3, #64	; 0x40
 8009ec6:	d107      	bne.n	8009ed8 <HAL_TIM_IRQHandler+0x1dc>
 8009ec8:	687b      	ldr	r3, [r7, #4]
 8009eca:	681b      	ldr	r3, [r3, #0]
 8009ecc:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8009ed0:	611a      	str	r2, [r3, #16]
 8009ed2:	6878      	ldr	r0, [r7, #4]
 8009ed4:	f000 fa71 	bl	800a3ba <HAL_TIM_TriggerCallback>
 8009ed8:	687b      	ldr	r3, [r7, #4]
 8009eda:	681b      	ldr	r3, [r3, #0]
 8009edc:	691b      	ldr	r3, [r3, #16]
 8009ede:	f003 0320 	and.w	r3, r3, #32
 8009ee2:	2b20      	cmp	r3, #32
 8009ee4:	d10e      	bne.n	8009f04 <HAL_TIM_IRQHandler+0x208>
 8009ee6:	687b      	ldr	r3, [r7, #4]
 8009ee8:	681b      	ldr	r3, [r3, #0]
 8009eea:	68db      	ldr	r3, [r3, #12]
 8009eec:	f003 0320 	and.w	r3, r3, #32
 8009ef0:	2b20      	cmp	r3, #32
 8009ef2:	d107      	bne.n	8009f04 <HAL_TIM_IRQHandler+0x208>
 8009ef4:	687b      	ldr	r3, [r7, #4]
 8009ef6:	681b      	ldr	r3, [r3, #0]
 8009ef8:	f06f 0220 	mvn.w	r2, #32
 8009efc:	611a      	str	r2, [r3, #16]
 8009efe:	6878      	ldr	r0, [r7, #4]
 8009f00:	f001 f858 	bl	800afb4 <HAL_TIMEx_CommutCallback>
 8009f04:	bf00      	nop
 8009f06:	3708      	adds	r7, #8
 8009f08:	46bd      	mov	sp, r7
 8009f0a:	bd80      	pop	{r7, pc}

08009f0c <HAL_TIM_IC_ConfigChannel>:
 8009f0c:	b580      	push	{r7, lr}
 8009f0e:	b086      	sub	sp, #24
 8009f10:	af00      	add	r7, sp, #0
 8009f12:	60f8      	str	r0, [r7, #12]
 8009f14:	60b9      	str	r1, [r7, #8]
 8009f16:	607a      	str	r2, [r7, #4]
 8009f18:	2300      	movs	r3, #0
 8009f1a:	75fb      	strb	r3, [r7, #23]
 8009f1c:	68fb      	ldr	r3, [r7, #12]
 8009f1e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8009f22:	2b01      	cmp	r3, #1
 8009f24:	d101      	bne.n	8009f2a <HAL_TIM_IC_ConfigChannel+0x1e>
 8009f26:	2302      	movs	r3, #2
 8009f28:	e088      	b.n	800a03c <HAL_TIM_IC_ConfigChannel+0x130>
 8009f2a:	68fb      	ldr	r3, [r7, #12]
 8009f2c:	2201      	movs	r2, #1
 8009f2e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009f32:	687b      	ldr	r3, [r7, #4]
 8009f34:	2b00      	cmp	r3, #0
 8009f36:	d11b      	bne.n	8009f70 <HAL_TIM_IC_ConfigChannel+0x64>
 8009f38:	68fb      	ldr	r3, [r7, #12]
 8009f3a:	6818      	ldr	r0, [r3, #0]
 8009f3c:	68bb      	ldr	r3, [r7, #8]
 8009f3e:	6819      	ldr	r1, [r3, #0]
 8009f40:	68bb      	ldr	r3, [r7, #8]
 8009f42:	685a      	ldr	r2, [r3, #4]
 8009f44:	68bb      	ldr	r3, [r7, #8]
 8009f46:	68db      	ldr	r3, [r3, #12]
 8009f48:	f000 fd7c 	bl	800aa44 <TIM_TI1_SetConfig>
 8009f4c:	68fb      	ldr	r3, [r7, #12]
 8009f4e:	681b      	ldr	r3, [r3, #0]
 8009f50:	699a      	ldr	r2, [r3, #24]
 8009f52:	68fb      	ldr	r3, [r7, #12]
 8009f54:	681b      	ldr	r3, [r3, #0]
 8009f56:	f022 020c 	bic.w	r2, r2, #12
 8009f5a:	619a      	str	r2, [r3, #24]
 8009f5c:	68fb      	ldr	r3, [r7, #12]
 8009f5e:	681b      	ldr	r3, [r3, #0]
 8009f60:	6999      	ldr	r1, [r3, #24]
 8009f62:	68bb      	ldr	r3, [r7, #8]
 8009f64:	689a      	ldr	r2, [r3, #8]
 8009f66:	68fb      	ldr	r3, [r7, #12]
 8009f68:	681b      	ldr	r3, [r3, #0]
 8009f6a:	430a      	orrs	r2, r1
 8009f6c:	619a      	str	r2, [r3, #24]
 8009f6e:	e060      	b.n	800a032 <HAL_TIM_IC_ConfigChannel+0x126>
 8009f70:	687b      	ldr	r3, [r7, #4]
 8009f72:	2b04      	cmp	r3, #4
 8009f74:	d11c      	bne.n	8009fb0 <HAL_TIM_IC_ConfigChannel+0xa4>
 8009f76:	68fb      	ldr	r3, [r7, #12]
 8009f78:	6818      	ldr	r0, [r3, #0]
 8009f7a:	68bb      	ldr	r3, [r7, #8]
 8009f7c:	6819      	ldr	r1, [r3, #0]
 8009f7e:	68bb      	ldr	r3, [r7, #8]
 8009f80:	685a      	ldr	r2, [r3, #4]
 8009f82:	68bb      	ldr	r3, [r7, #8]
 8009f84:	68db      	ldr	r3, [r3, #12]
 8009f86:	f000 fe00 	bl	800ab8a <TIM_TI2_SetConfig>
 8009f8a:	68fb      	ldr	r3, [r7, #12]
 8009f8c:	681b      	ldr	r3, [r3, #0]
 8009f8e:	699a      	ldr	r2, [r3, #24]
 8009f90:	68fb      	ldr	r3, [r7, #12]
 8009f92:	681b      	ldr	r3, [r3, #0]
 8009f94:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8009f98:	619a      	str	r2, [r3, #24]
 8009f9a:	68fb      	ldr	r3, [r7, #12]
 8009f9c:	681b      	ldr	r3, [r3, #0]
 8009f9e:	6999      	ldr	r1, [r3, #24]
 8009fa0:	68bb      	ldr	r3, [r7, #8]
 8009fa2:	689b      	ldr	r3, [r3, #8]
 8009fa4:	021a      	lsls	r2, r3, #8
 8009fa6:	68fb      	ldr	r3, [r7, #12]
 8009fa8:	681b      	ldr	r3, [r3, #0]
 8009faa:	430a      	orrs	r2, r1
 8009fac:	619a      	str	r2, [r3, #24]
 8009fae:	e040      	b.n	800a032 <HAL_TIM_IC_ConfigChannel+0x126>
 8009fb0:	687b      	ldr	r3, [r7, #4]
 8009fb2:	2b08      	cmp	r3, #8
 8009fb4:	d11b      	bne.n	8009fee <HAL_TIM_IC_ConfigChannel+0xe2>
 8009fb6:	68fb      	ldr	r3, [r7, #12]
 8009fb8:	6818      	ldr	r0, [r3, #0]
 8009fba:	68bb      	ldr	r3, [r7, #8]
 8009fbc:	6819      	ldr	r1, [r3, #0]
 8009fbe:	68bb      	ldr	r3, [r7, #8]
 8009fc0:	685a      	ldr	r2, [r3, #4]
 8009fc2:	68bb      	ldr	r3, [r7, #8]
 8009fc4:	68db      	ldr	r3, [r3, #12]
 8009fc6:	f000 fe4d 	bl	800ac64 <TIM_TI3_SetConfig>
 8009fca:	68fb      	ldr	r3, [r7, #12]
 8009fcc:	681b      	ldr	r3, [r3, #0]
 8009fce:	69da      	ldr	r2, [r3, #28]
 8009fd0:	68fb      	ldr	r3, [r7, #12]
 8009fd2:	681b      	ldr	r3, [r3, #0]
 8009fd4:	f022 020c 	bic.w	r2, r2, #12
 8009fd8:	61da      	str	r2, [r3, #28]
 8009fda:	68fb      	ldr	r3, [r7, #12]
 8009fdc:	681b      	ldr	r3, [r3, #0]
 8009fde:	69d9      	ldr	r1, [r3, #28]
 8009fe0:	68bb      	ldr	r3, [r7, #8]
 8009fe2:	689a      	ldr	r2, [r3, #8]
 8009fe4:	68fb      	ldr	r3, [r7, #12]
 8009fe6:	681b      	ldr	r3, [r3, #0]
 8009fe8:	430a      	orrs	r2, r1
 8009fea:	61da      	str	r2, [r3, #28]
 8009fec:	e021      	b.n	800a032 <HAL_TIM_IC_ConfigChannel+0x126>
 8009fee:	687b      	ldr	r3, [r7, #4]
 8009ff0:	2b0c      	cmp	r3, #12
 8009ff2:	d11c      	bne.n	800a02e <HAL_TIM_IC_ConfigChannel+0x122>
 8009ff4:	68fb      	ldr	r3, [r7, #12]
 8009ff6:	6818      	ldr	r0, [r3, #0]
 8009ff8:	68bb      	ldr	r3, [r7, #8]
 8009ffa:	6819      	ldr	r1, [r3, #0]
 8009ffc:	68bb      	ldr	r3, [r7, #8]
 8009ffe:	685a      	ldr	r2, [r3, #4]
 800a000:	68bb      	ldr	r3, [r7, #8]
 800a002:	68db      	ldr	r3, [r3, #12]
 800a004:	f000 fe6a 	bl	800acdc <TIM_TI4_SetConfig>
 800a008:	68fb      	ldr	r3, [r7, #12]
 800a00a:	681b      	ldr	r3, [r3, #0]
 800a00c:	69da      	ldr	r2, [r3, #28]
 800a00e:	68fb      	ldr	r3, [r7, #12]
 800a010:	681b      	ldr	r3, [r3, #0]
 800a012:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 800a016:	61da      	str	r2, [r3, #28]
 800a018:	68fb      	ldr	r3, [r7, #12]
 800a01a:	681b      	ldr	r3, [r3, #0]
 800a01c:	69d9      	ldr	r1, [r3, #28]
 800a01e:	68bb      	ldr	r3, [r7, #8]
 800a020:	689b      	ldr	r3, [r3, #8]
 800a022:	021a      	lsls	r2, r3, #8
 800a024:	68fb      	ldr	r3, [r7, #12]
 800a026:	681b      	ldr	r3, [r3, #0]
 800a028:	430a      	orrs	r2, r1
 800a02a:	61da      	str	r2, [r3, #28]
 800a02c:	e001      	b.n	800a032 <HAL_TIM_IC_ConfigChannel+0x126>
 800a02e:	2301      	movs	r3, #1
 800a030:	75fb      	strb	r3, [r7, #23]
 800a032:	68fb      	ldr	r3, [r7, #12]
 800a034:	2200      	movs	r2, #0
 800a036:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a03a:	7dfb      	ldrb	r3, [r7, #23]
 800a03c:	4618      	mov	r0, r3
 800a03e:	3718      	adds	r7, #24
 800a040:	46bd      	mov	sp, r7
 800a042:	bd80      	pop	{r7, pc}

0800a044 <HAL_TIM_PWM_ConfigChannel>:
 800a044:	b580      	push	{r7, lr}
 800a046:	b086      	sub	sp, #24
 800a048:	af00      	add	r7, sp, #0
 800a04a:	60f8      	str	r0, [r7, #12]
 800a04c:	60b9      	str	r1, [r7, #8]
 800a04e:	607a      	str	r2, [r7, #4]
 800a050:	2300      	movs	r3, #0
 800a052:	75fb      	strb	r3, [r7, #23]
 800a054:	68fb      	ldr	r3, [r7, #12]
 800a056:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800a05a:	2b01      	cmp	r3, #1
 800a05c:	d101      	bne.n	800a062 <HAL_TIM_PWM_ConfigChannel+0x1e>
 800a05e:	2302      	movs	r3, #2
 800a060:	e0ae      	b.n	800a1c0 <HAL_TIM_PWM_ConfigChannel+0x17c>
 800a062:	68fb      	ldr	r3, [r7, #12]
 800a064:	2201      	movs	r2, #1
 800a066:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a06a:	687b      	ldr	r3, [r7, #4]
 800a06c:	2b0c      	cmp	r3, #12
 800a06e:	f200 809f 	bhi.w	800a1b0 <HAL_TIM_PWM_ConfigChannel+0x16c>
 800a072:	a201      	add	r2, pc, #4	; (adr r2, 800a078 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800a074:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a078:	0800a0ad 	.word	0x0800a0ad
 800a07c:	0800a1b1 	.word	0x0800a1b1
 800a080:	0800a1b1 	.word	0x0800a1b1
 800a084:	0800a1b1 	.word	0x0800a1b1
 800a088:	0800a0ed 	.word	0x0800a0ed
 800a08c:	0800a1b1 	.word	0x0800a1b1
 800a090:	0800a1b1 	.word	0x0800a1b1
 800a094:	0800a1b1 	.word	0x0800a1b1
 800a098:	0800a12f 	.word	0x0800a12f
 800a09c:	0800a1b1 	.word	0x0800a1b1
 800a0a0:	0800a1b1 	.word	0x0800a1b1
 800a0a4:	0800a1b1 	.word	0x0800a1b1
 800a0a8:	0800a16f 	.word	0x0800a16f
 800a0ac:	68fb      	ldr	r3, [r7, #12]
 800a0ae:	681b      	ldr	r3, [r3, #0]
 800a0b0:	68b9      	ldr	r1, [r7, #8]
 800a0b2:	4618      	mov	r0, r3
 800a0b4:	f000 fb16 	bl	800a6e4 <TIM_OC1_SetConfig>
 800a0b8:	68fb      	ldr	r3, [r7, #12]
 800a0ba:	681b      	ldr	r3, [r3, #0]
 800a0bc:	699a      	ldr	r2, [r3, #24]
 800a0be:	68fb      	ldr	r3, [r7, #12]
 800a0c0:	681b      	ldr	r3, [r3, #0]
 800a0c2:	f042 0208 	orr.w	r2, r2, #8
 800a0c6:	619a      	str	r2, [r3, #24]
 800a0c8:	68fb      	ldr	r3, [r7, #12]
 800a0ca:	681b      	ldr	r3, [r3, #0]
 800a0cc:	699a      	ldr	r2, [r3, #24]
 800a0ce:	68fb      	ldr	r3, [r7, #12]
 800a0d0:	681b      	ldr	r3, [r3, #0]
 800a0d2:	f022 0204 	bic.w	r2, r2, #4
 800a0d6:	619a      	str	r2, [r3, #24]
 800a0d8:	68fb      	ldr	r3, [r7, #12]
 800a0da:	681b      	ldr	r3, [r3, #0]
 800a0dc:	6999      	ldr	r1, [r3, #24]
 800a0de:	68bb      	ldr	r3, [r7, #8]
 800a0e0:	691a      	ldr	r2, [r3, #16]
 800a0e2:	68fb      	ldr	r3, [r7, #12]
 800a0e4:	681b      	ldr	r3, [r3, #0]
 800a0e6:	430a      	orrs	r2, r1
 800a0e8:	619a      	str	r2, [r3, #24]
 800a0ea:	e064      	b.n	800a1b6 <HAL_TIM_PWM_ConfigChannel+0x172>
 800a0ec:	68fb      	ldr	r3, [r7, #12]
 800a0ee:	681b      	ldr	r3, [r3, #0]
 800a0f0:	68b9      	ldr	r1, [r7, #8]
 800a0f2:	4618      	mov	r0, r3
 800a0f4:	f000 fb66 	bl	800a7c4 <TIM_OC2_SetConfig>
 800a0f8:	68fb      	ldr	r3, [r7, #12]
 800a0fa:	681b      	ldr	r3, [r3, #0]
 800a0fc:	699a      	ldr	r2, [r3, #24]
 800a0fe:	68fb      	ldr	r3, [r7, #12]
 800a100:	681b      	ldr	r3, [r3, #0]
 800a102:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a106:	619a      	str	r2, [r3, #24]
 800a108:	68fb      	ldr	r3, [r7, #12]
 800a10a:	681b      	ldr	r3, [r3, #0]
 800a10c:	699a      	ldr	r2, [r3, #24]
 800a10e:	68fb      	ldr	r3, [r7, #12]
 800a110:	681b      	ldr	r3, [r3, #0]
 800a112:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a116:	619a      	str	r2, [r3, #24]
 800a118:	68fb      	ldr	r3, [r7, #12]
 800a11a:	681b      	ldr	r3, [r3, #0]
 800a11c:	6999      	ldr	r1, [r3, #24]
 800a11e:	68bb      	ldr	r3, [r7, #8]
 800a120:	691b      	ldr	r3, [r3, #16]
 800a122:	021a      	lsls	r2, r3, #8
 800a124:	68fb      	ldr	r3, [r7, #12]
 800a126:	681b      	ldr	r3, [r3, #0]
 800a128:	430a      	orrs	r2, r1
 800a12a:	619a      	str	r2, [r3, #24]
 800a12c:	e043      	b.n	800a1b6 <HAL_TIM_PWM_ConfigChannel+0x172>
 800a12e:	68fb      	ldr	r3, [r7, #12]
 800a130:	681b      	ldr	r3, [r3, #0]
 800a132:	68b9      	ldr	r1, [r7, #8]
 800a134:	4618      	mov	r0, r3
 800a136:	f000 fbbb 	bl	800a8b0 <TIM_OC3_SetConfig>
 800a13a:	68fb      	ldr	r3, [r7, #12]
 800a13c:	681b      	ldr	r3, [r3, #0]
 800a13e:	69da      	ldr	r2, [r3, #28]
 800a140:	68fb      	ldr	r3, [r7, #12]
 800a142:	681b      	ldr	r3, [r3, #0]
 800a144:	f042 0208 	orr.w	r2, r2, #8
 800a148:	61da      	str	r2, [r3, #28]
 800a14a:	68fb      	ldr	r3, [r7, #12]
 800a14c:	681b      	ldr	r3, [r3, #0]
 800a14e:	69da      	ldr	r2, [r3, #28]
 800a150:	68fb      	ldr	r3, [r7, #12]
 800a152:	681b      	ldr	r3, [r3, #0]
 800a154:	f022 0204 	bic.w	r2, r2, #4
 800a158:	61da      	str	r2, [r3, #28]
 800a15a:	68fb      	ldr	r3, [r7, #12]
 800a15c:	681b      	ldr	r3, [r3, #0]
 800a15e:	69d9      	ldr	r1, [r3, #28]
 800a160:	68bb      	ldr	r3, [r7, #8]
 800a162:	691a      	ldr	r2, [r3, #16]
 800a164:	68fb      	ldr	r3, [r7, #12]
 800a166:	681b      	ldr	r3, [r3, #0]
 800a168:	430a      	orrs	r2, r1
 800a16a:	61da      	str	r2, [r3, #28]
 800a16c:	e023      	b.n	800a1b6 <HAL_TIM_PWM_ConfigChannel+0x172>
 800a16e:	68fb      	ldr	r3, [r7, #12]
 800a170:	681b      	ldr	r3, [r3, #0]
 800a172:	68b9      	ldr	r1, [r7, #8]
 800a174:	4618      	mov	r0, r3
 800a176:	f000 fc0f 	bl	800a998 <TIM_OC4_SetConfig>
 800a17a:	68fb      	ldr	r3, [r7, #12]
 800a17c:	681b      	ldr	r3, [r3, #0]
 800a17e:	69da      	ldr	r2, [r3, #28]
 800a180:	68fb      	ldr	r3, [r7, #12]
 800a182:	681b      	ldr	r3, [r3, #0]
 800a184:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a188:	61da      	str	r2, [r3, #28]
 800a18a:	68fb      	ldr	r3, [r7, #12]
 800a18c:	681b      	ldr	r3, [r3, #0]
 800a18e:	69da      	ldr	r2, [r3, #28]
 800a190:	68fb      	ldr	r3, [r7, #12]
 800a192:	681b      	ldr	r3, [r3, #0]
 800a194:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a198:	61da      	str	r2, [r3, #28]
 800a19a:	68fb      	ldr	r3, [r7, #12]
 800a19c:	681b      	ldr	r3, [r3, #0]
 800a19e:	69d9      	ldr	r1, [r3, #28]
 800a1a0:	68bb      	ldr	r3, [r7, #8]
 800a1a2:	691b      	ldr	r3, [r3, #16]
 800a1a4:	021a      	lsls	r2, r3, #8
 800a1a6:	68fb      	ldr	r3, [r7, #12]
 800a1a8:	681b      	ldr	r3, [r3, #0]
 800a1aa:	430a      	orrs	r2, r1
 800a1ac:	61da      	str	r2, [r3, #28]
 800a1ae:	e002      	b.n	800a1b6 <HAL_TIM_PWM_ConfigChannel+0x172>
 800a1b0:	2301      	movs	r3, #1
 800a1b2:	75fb      	strb	r3, [r7, #23]
 800a1b4:	bf00      	nop
 800a1b6:	68fb      	ldr	r3, [r7, #12]
 800a1b8:	2200      	movs	r2, #0
 800a1ba:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a1be:	7dfb      	ldrb	r3, [r7, #23]
 800a1c0:	4618      	mov	r0, r3
 800a1c2:	3718      	adds	r7, #24
 800a1c4:	46bd      	mov	sp, r7
 800a1c6:	bd80      	pop	{r7, pc}

0800a1c8 <HAL_TIM_ConfigClockSource>:
 800a1c8:	b580      	push	{r7, lr}
 800a1ca:	b084      	sub	sp, #16
 800a1cc:	af00      	add	r7, sp, #0
 800a1ce:	6078      	str	r0, [r7, #4]
 800a1d0:	6039      	str	r1, [r7, #0]
 800a1d2:	2300      	movs	r3, #0
 800a1d4:	73fb      	strb	r3, [r7, #15]
 800a1d6:	687b      	ldr	r3, [r7, #4]
 800a1d8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800a1dc:	2b01      	cmp	r3, #1
 800a1de:	d101      	bne.n	800a1e4 <HAL_TIM_ConfigClockSource+0x1c>
 800a1e0:	2302      	movs	r3, #2
 800a1e2:	e0b4      	b.n	800a34e <HAL_TIM_ConfigClockSource+0x186>
 800a1e4:	687b      	ldr	r3, [r7, #4]
 800a1e6:	2201      	movs	r2, #1
 800a1e8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a1ec:	687b      	ldr	r3, [r7, #4]
 800a1ee:	2202      	movs	r2, #2
 800a1f0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a1f4:	687b      	ldr	r3, [r7, #4]
 800a1f6:	681b      	ldr	r3, [r3, #0]
 800a1f8:	689b      	ldr	r3, [r3, #8]
 800a1fa:	60bb      	str	r3, [r7, #8]
 800a1fc:	68bb      	ldr	r3, [r7, #8]
 800a1fe:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800a202:	60bb      	str	r3, [r7, #8]
 800a204:	68bb      	ldr	r3, [r7, #8]
 800a206:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800a20a:	60bb      	str	r3, [r7, #8]
 800a20c:	687b      	ldr	r3, [r7, #4]
 800a20e:	681b      	ldr	r3, [r3, #0]
 800a210:	68ba      	ldr	r2, [r7, #8]
 800a212:	609a      	str	r2, [r3, #8]
 800a214:	683b      	ldr	r3, [r7, #0]
 800a216:	681b      	ldr	r3, [r3, #0]
 800a218:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800a21c:	d03e      	beq.n	800a29c <HAL_TIM_ConfigClockSource+0xd4>
 800a21e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800a222:	f200 8087 	bhi.w	800a334 <HAL_TIM_ConfigClockSource+0x16c>
 800a226:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800a22a:	f000 8086 	beq.w	800a33a <HAL_TIM_ConfigClockSource+0x172>
 800a22e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800a232:	d87f      	bhi.n	800a334 <HAL_TIM_ConfigClockSource+0x16c>
 800a234:	2b70      	cmp	r3, #112	; 0x70
 800a236:	d01a      	beq.n	800a26e <HAL_TIM_ConfigClockSource+0xa6>
 800a238:	2b70      	cmp	r3, #112	; 0x70
 800a23a:	d87b      	bhi.n	800a334 <HAL_TIM_ConfigClockSource+0x16c>
 800a23c:	2b60      	cmp	r3, #96	; 0x60
 800a23e:	d050      	beq.n	800a2e2 <HAL_TIM_ConfigClockSource+0x11a>
 800a240:	2b60      	cmp	r3, #96	; 0x60
 800a242:	d877      	bhi.n	800a334 <HAL_TIM_ConfigClockSource+0x16c>
 800a244:	2b50      	cmp	r3, #80	; 0x50
 800a246:	d03c      	beq.n	800a2c2 <HAL_TIM_ConfigClockSource+0xfa>
 800a248:	2b50      	cmp	r3, #80	; 0x50
 800a24a:	d873      	bhi.n	800a334 <HAL_TIM_ConfigClockSource+0x16c>
 800a24c:	2b40      	cmp	r3, #64	; 0x40
 800a24e:	d058      	beq.n	800a302 <HAL_TIM_ConfigClockSource+0x13a>
 800a250:	2b40      	cmp	r3, #64	; 0x40
 800a252:	d86f      	bhi.n	800a334 <HAL_TIM_ConfigClockSource+0x16c>
 800a254:	2b30      	cmp	r3, #48	; 0x30
 800a256:	d064      	beq.n	800a322 <HAL_TIM_ConfigClockSource+0x15a>
 800a258:	2b30      	cmp	r3, #48	; 0x30
 800a25a:	d86b      	bhi.n	800a334 <HAL_TIM_ConfigClockSource+0x16c>
 800a25c:	2b20      	cmp	r3, #32
 800a25e:	d060      	beq.n	800a322 <HAL_TIM_ConfigClockSource+0x15a>
 800a260:	2b20      	cmp	r3, #32
 800a262:	d867      	bhi.n	800a334 <HAL_TIM_ConfigClockSource+0x16c>
 800a264:	2b00      	cmp	r3, #0
 800a266:	d05c      	beq.n	800a322 <HAL_TIM_ConfigClockSource+0x15a>
 800a268:	2b10      	cmp	r3, #16
 800a26a:	d05a      	beq.n	800a322 <HAL_TIM_ConfigClockSource+0x15a>
 800a26c:	e062      	b.n	800a334 <HAL_TIM_ConfigClockSource+0x16c>
 800a26e:	687b      	ldr	r3, [r7, #4]
 800a270:	6818      	ldr	r0, [r3, #0]
 800a272:	683b      	ldr	r3, [r7, #0]
 800a274:	6899      	ldr	r1, [r3, #8]
 800a276:	683b      	ldr	r3, [r7, #0]
 800a278:	685a      	ldr	r2, [r3, #4]
 800a27a:	683b      	ldr	r3, [r7, #0]
 800a27c:	68db      	ldr	r3, [r3, #12]
 800a27e:	f000 fd85 	bl	800ad8c <TIM_ETR_SetConfig>
 800a282:	687b      	ldr	r3, [r7, #4]
 800a284:	681b      	ldr	r3, [r3, #0]
 800a286:	689b      	ldr	r3, [r3, #8]
 800a288:	60bb      	str	r3, [r7, #8]
 800a28a:	68bb      	ldr	r3, [r7, #8]
 800a28c:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800a290:	60bb      	str	r3, [r7, #8]
 800a292:	687b      	ldr	r3, [r7, #4]
 800a294:	681b      	ldr	r3, [r3, #0]
 800a296:	68ba      	ldr	r2, [r7, #8]
 800a298:	609a      	str	r2, [r3, #8]
 800a29a:	e04f      	b.n	800a33c <HAL_TIM_ConfigClockSource+0x174>
 800a29c:	687b      	ldr	r3, [r7, #4]
 800a29e:	6818      	ldr	r0, [r3, #0]
 800a2a0:	683b      	ldr	r3, [r7, #0]
 800a2a2:	6899      	ldr	r1, [r3, #8]
 800a2a4:	683b      	ldr	r3, [r7, #0]
 800a2a6:	685a      	ldr	r2, [r3, #4]
 800a2a8:	683b      	ldr	r3, [r7, #0]
 800a2aa:	68db      	ldr	r3, [r3, #12]
 800a2ac:	f000 fd6e 	bl	800ad8c <TIM_ETR_SetConfig>
 800a2b0:	687b      	ldr	r3, [r7, #4]
 800a2b2:	681b      	ldr	r3, [r3, #0]
 800a2b4:	689a      	ldr	r2, [r3, #8]
 800a2b6:	687b      	ldr	r3, [r7, #4]
 800a2b8:	681b      	ldr	r3, [r3, #0]
 800a2ba:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800a2be:	609a      	str	r2, [r3, #8]
 800a2c0:	e03c      	b.n	800a33c <HAL_TIM_ConfigClockSource+0x174>
 800a2c2:	687b      	ldr	r3, [r7, #4]
 800a2c4:	6818      	ldr	r0, [r3, #0]
 800a2c6:	683b      	ldr	r3, [r7, #0]
 800a2c8:	6859      	ldr	r1, [r3, #4]
 800a2ca:	683b      	ldr	r3, [r7, #0]
 800a2cc:	68db      	ldr	r3, [r3, #12]
 800a2ce:	461a      	mov	r2, r3
 800a2d0:	f000 fc2c 	bl	800ab2c <TIM_TI1_ConfigInputStage>
 800a2d4:	687b      	ldr	r3, [r7, #4]
 800a2d6:	681b      	ldr	r3, [r3, #0]
 800a2d8:	2150      	movs	r1, #80	; 0x50
 800a2da:	4618      	mov	r0, r3
 800a2dc:	f000 fd3b 	bl	800ad56 <TIM_ITRx_SetConfig>
 800a2e0:	e02c      	b.n	800a33c <HAL_TIM_ConfigClockSource+0x174>
 800a2e2:	687b      	ldr	r3, [r7, #4]
 800a2e4:	6818      	ldr	r0, [r3, #0]
 800a2e6:	683b      	ldr	r3, [r7, #0]
 800a2e8:	6859      	ldr	r1, [r3, #4]
 800a2ea:	683b      	ldr	r3, [r7, #0]
 800a2ec:	68db      	ldr	r3, [r3, #12]
 800a2ee:	461a      	mov	r2, r3
 800a2f0:	f000 fc88 	bl	800ac04 <TIM_TI2_ConfigInputStage>
 800a2f4:	687b      	ldr	r3, [r7, #4]
 800a2f6:	681b      	ldr	r3, [r3, #0]
 800a2f8:	2160      	movs	r1, #96	; 0x60
 800a2fa:	4618      	mov	r0, r3
 800a2fc:	f000 fd2b 	bl	800ad56 <TIM_ITRx_SetConfig>
 800a300:	e01c      	b.n	800a33c <HAL_TIM_ConfigClockSource+0x174>
 800a302:	687b      	ldr	r3, [r7, #4]
 800a304:	6818      	ldr	r0, [r3, #0]
 800a306:	683b      	ldr	r3, [r7, #0]
 800a308:	6859      	ldr	r1, [r3, #4]
 800a30a:	683b      	ldr	r3, [r7, #0]
 800a30c:	68db      	ldr	r3, [r3, #12]
 800a30e:	461a      	mov	r2, r3
 800a310:	f000 fc0c 	bl	800ab2c <TIM_TI1_ConfigInputStage>
 800a314:	687b      	ldr	r3, [r7, #4]
 800a316:	681b      	ldr	r3, [r3, #0]
 800a318:	2140      	movs	r1, #64	; 0x40
 800a31a:	4618      	mov	r0, r3
 800a31c:	f000 fd1b 	bl	800ad56 <TIM_ITRx_SetConfig>
 800a320:	e00c      	b.n	800a33c <HAL_TIM_ConfigClockSource+0x174>
 800a322:	687b      	ldr	r3, [r7, #4]
 800a324:	681a      	ldr	r2, [r3, #0]
 800a326:	683b      	ldr	r3, [r7, #0]
 800a328:	681b      	ldr	r3, [r3, #0]
 800a32a:	4619      	mov	r1, r3
 800a32c:	4610      	mov	r0, r2
 800a32e:	f000 fd12 	bl	800ad56 <TIM_ITRx_SetConfig>
 800a332:	e003      	b.n	800a33c <HAL_TIM_ConfigClockSource+0x174>
 800a334:	2301      	movs	r3, #1
 800a336:	73fb      	strb	r3, [r7, #15]
 800a338:	e000      	b.n	800a33c <HAL_TIM_ConfigClockSource+0x174>
 800a33a:	bf00      	nop
 800a33c:	687b      	ldr	r3, [r7, #4]
 800a33e:	2201      	movs	r2, #1
 800a340:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a344:	687b      	ldr	r3, [r7, #4]
 800a346:	2200      	movs	r2, #0
 800a348:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a34c:	7bfb      	ldrb	r3, [r7, #15]
 800a34e:	4618      	mov	r0, r3
 800a350:	3710      	adds	r7, #16
 800a352:	46bd      	mov	sp, r7
 800a354:	bd80      	pop	{r7, pc}

0800a356 <HAL_TIM_PeriodElapsedCallback>:
 800a356:	b480      	push	{r7}
 800a358:	b083      	sub	sp, #12
 800a35a:	af00      	add	r7, sp, #0
 800a35c:	6078      	str	r0, [r7, #4]
 800a35e:	bf00      	nop
 800a360:	370c      	adds	r7, #12
 800a362:	46bd      	mov	sp, r7
 800a364:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a368:	4770      	bx	lr

0800a36a <HAL_TIM_OC_DelayElapsedCallback>:
 800a36a:	b480      	push	{r7}
 800a36c:	b083      	sub	sp, #12
 800a36e:	af00      	add	r7, sp, #0
 800a370:	6078      	str	r0, [r7, #4]
 800a372:	bf00      	nop
 800a374:	370c      	adds	r7, #12
 800a376:	46bd      	mov	sp, r7
 800a378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a37c:	4770      	bx	lr

0800a37e <HAL_TIM_IC_CaptureCallback>:
 800a37e:	b480      	push	{r7}
 800a380:	b083      	sub	sp, #12
 800a382:	af00      	add	r7, sp, #0
 800a384:	6078      	str	r0, [r7, #4]
 800a386:	bf00      	nop
 800a388:	370c      	adds	r7, #12
 800a38a:	46bd      	mov	sp, r7
 800a38c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a390:	4770      	bx	lr

0800a392 <HAL_TIM_IC_CaptureHalfCpltCallback>:
 800a392:	b480      	push	{r7}
 800a394:	b083      	sub	sp, #12
 800a396:	af00      	add	r7, sp, #0
 800a398:	6078      	str	r0, [r7, #4]
 800a39a:	bf00      	nop
 800a39c:	370c      	adds	r7, #12
 800a39e:	46bd      	mov	sp, r7
 800a3a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3a4:	4770      	bx	lr

0800a3a6 <HAL_TIM_PWM_PulseFinishedCallback>:
 800a3a6:	b480      	push	{r7}
 800a3a8:	b083      	sub	sp, #12
 800a3aa:	af00      	add	r7, sp, #0
 800a3ac:	6078      	str	r0, [r7, #4]
 800a3ae:	bf00      	nop
 800a3b0:	370c      	adds	r7, #12
 800a3b2:	46bd      	mov	sp, r7
 800a3b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3b8:	4770      	bx	lr

0800a3ba <HAL_TIM_TriggerCallback>:
 800a3ba:	b480      	push	{r7}
 800a3bc:	b083      	sub	sp, #12
 800a3be:	af00      	add	r7, sp, #0
 800a3c0:	6078      	str	r0, [r7, #4]
 800a3c2:	bf00      	nop
 800a3c4:	370c      	adds	r7, #12
 800a3c6:	46bd      	mov	sp, r7
 800a3c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3cc:	4770      	bx	lr

0800a3ce <HAL_TIM_ErrorCallback>:
 800a3ce:	b480      	push	{r7}
 800a3d0:	b083      	sub	sp, #12
 800a3d2:	af00      	add	r7, sp, #0
 800a3d4:	6078      	str	r0, [r7, #4]
 800a3d6:	bf00      	nop
 800a3d8:	370c      	adds	r7, #12
 800a3da:	46bd      	mov	sp, r7
 800a3dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3e0:	4770      	bx	lr

0800a3e2 <TIM_DMAError>:
 800a3e2:	b580      	push	{r7, lr}
 800a3e4:	b084      	sub	sp, #16
 800a3e6:	af00      	add	r7, sp, #0
 800a3e8:	6078      	str	r0, [r7, #4]
 800a3ea:	687b      	ldr	r3, [r7, #4]
 800a3ec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a3ee:	60fb      	str	r3, [r7, #12]
 800a3f0:	68fb      	ldr	r3, [r7, #12]
 800a3f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a3f4:	687a      	ldr	r2, [r7, #4]
 800a3f6:	429a      	cmp	r2, r3
 800a3f8:	d107      	bne.n	800a40a <TIM_DMAError+0x28>
 800a3fa:	68fb      	ldr	r3, [r7, #12]
 800a3fc:	2201      	movs	r2, #1
 800a3fe:	771a      	strb	r2, [r3, #28]
 800a400:	68fb      	ldr	r3, [r7, #12]
 800a402:	2201      	movs	r2, #1
 800a404:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a408:	e02a      	b.n	800a460 <TIM_DMAError+0x7e>
 800a40a:	68fb      	ldr	r3, [r7, #12]
 800a40c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a40e:	687a      	ldr	r2, [r7, #4]
 800a410:	429a      	cmp	r2, r3
 800a412:	d107      	bne.n	800a424 <TIM_DMAError+0x42>
 800a414:	68fb      	ldr	r3, [r7, #12]
 800a416:	2202      	movs	r2, #2
 800a418:	771a      	strb	r2, [r3, #28]
 800a41a:	68fb      	ldr	r3, [r7, #12]
 800a41c:	2201      	movs	r2, #1
 800a41e:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a422:	e01d      	b.n	800a460 <TIM_DMAError+0x7e>
 800a424:	68fb      	ldr	r3, [r7, #12]
 800a426:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a428:	687a      	ldr	r2, [r7, #4]
 800a42a:	429a      	cmp	r2, r3
 800a42c:	d107      	bne.n	800a43e <TIM_DMAError+0x5c>
 800a42e:	68fb      	ldr	r3, [r7, #12]
 800a430:	2204      	movs	r2, #4
 800a432:	771a      	strb	r2, [r3, #28]
 800a434:	68fb      	ldr	r3, [r7, #12]
 800a436:	2201      	movs	r2, #1
 800a438:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a43c:	e010      	b.n	800a460 <TIM_DMAError+0x7e>
 800a43e:	68fb      	ldr	r3, [r7, #12]
 800a440:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a442:	687a      	ldr	r2, [r7, #4]
 800a444:	429a      	cmp	r2, r3
 800a446:	d107      	bne.n	800a458 <TIM_DMAError+0x76>
 800a448:	68fb      	ldr	r3, [r7, #12]
 800a44a:	2208      	movs	r2, #8
 800a44c:	771a      	strb	r2, [r3, #28]
 800a44e:	68fb      	ldr	r3, [r7, #12]
 800a450:	2201      	movs	r2, #1
 800a452:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a456:	e003      	b.n	800a460 <TIM_DMAError+0x7e>
 800a458:	68fb      	ldr	r3, [r7, #12]
 800a45a:	2201      	movs	r2, #1
 800a45c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a460:	68f8      	ldr	r0, [r7, #12]
 800a462:	f7ff ffb4 	bl	800a3ce <HAL_TIM_ErrorCallback>
 800a466:	68fb      	ldr	r3, [r7, #12]
 800a468:	2200      	movs	r2, #0
 800a46a:	771a      	strb	r2, [r3, #28]
 800a46c:	bf00      	nop
 800a46e:	3710      	adds	r7, #16
 800a470:	46bd      	mov	sp, r7
 800a472:	bd80      	pop	{r7, pc}

0800a474 <TIM_DMACaptureCplt>:
 800a474:	b580      	push	{r7, lr}
 800a476:	b084      	sub	sp, #16
 800a478:	af00      	add	r7, sp, #0
 800a47a:	6078      	str	r0, [r7, #4]
 800a47c:	687b      	ldr	r3, [r7, #4]
 800a47e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a480:	60fb      	str	r3, [r7, #12]
 800a482:	68fb      	ldr	r3, [r7, #12]
 800a484:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a486:	687a      	ldr	r2, [r7, #4]
 800a488:	429a      	cmp	r2, r3
 800a48a:	d10f      	bne.n	800a4ac <TIM_DMACaptureCplt+0x38>
 800a48c:	68fb      	ldr	r3, [r7, #12]
 800a48e:	2201      	movs	r2, #1
 800a490:	771a      	strb	r2, [r3, #28]
 800a492:	687b      	ldr	r3, [r7, #4]
 800a494:	69db      	ldr	r3, [r3, #28]
 800a496:	2b00      	cmp	r3, #0
 800a498:	d146      	bne.n	800a528 <TIM_DMACaptureCplt+0xb4>
 800a49a:	68fb      	ldr	r3, [r7, #12]
 800a49c:	2201      	movs	r2, #1
 800a49e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a4a2:	68fb      	ldr	r3, [r7, #12]
 800a4a4:	2201      	movs	r2, #1
 800a4a6:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a4aa:	e03d      	b.n	800a528 <TIM_DMACaptureCplt+0xb4>
 800a4ac:	68fb      	ldr	r3, [r7, #12]
 800a4ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a4b0:	687a      	ldr	r2, [r7, #4]
 800a4b2:	429a      	cmp	r2, r3
 800a4b4:	d10f      	bne.n	800a4d6 <TIM_DMACaptureCplt+0x62>
 800a4b6:	68fb      	ldr	r3, [r7, #12]
 800a4b8:	2202      	movs	r2, #2
 800a4ba:	771a      	strb	r2, [r3, #28]
 800a4bc:	687b      	ldr	r3, [r7, #4]
 800a4be:	69db      	ldr	r3, [r3, #28]
 800a4c0:	2b00      	cmp	r3, #0
 800a4c2:	d131      	bne.n	800a528 <TIM_DMACaptureCplt+0xb4>
 800a4c4:	68fb      	ldr	r3, [r7, #12]
 800a4c6:	2201      	movs	r2, #1
 800a4c8:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a4cc:	68fb      	ldr	r3, [r7, #12]
 800a4ce:	2201      	movs	r2, #1
 800a4d0:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a4d4:	e028      	b.n	800a528 <TIM_DMACaptureCplt+0xb4>
 800a4d6:	68fb      	ldr	r3, [r7, #12]
 800a4d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a4da:	687a      	ldr	r2, [r7, #4]
 800a4dc:	429a      	cmp	r2, r3
 800a4de:	d10f      	bne.n	800a500 <TIM_DMACaptureCplt+0x8c>
 800a4e0:	68fb      	ldr	r3, [r7, #12]
 800a4e2:	2204      	movs	r2, #4
 800a4e4:	771a      	strb	r2, [r3, #28]
 800a4e6:	687b      	ldr	r3, [r7, #4]
 800a4e8:	69db      	ldr	r3, [r3, #28]
 800a4ea:	2b00      	cmp	r3, #0
 800a4ec:	d11c      	bne.n	800a528 <TIM_DMACaptureCplt+0xb4>
 800a4ee:	68fb      	ldr	r3, [r7, #12]
 800a4f0:	2201      	movs	r2, #1
 800a4f2:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a4f6:	68fb      	ldr	r3, [r7, #12]
 800a4f8:	2201      	movs	r2, #1
 800a4fa:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a4fe:	e013      	b.n	800a528 <TIM_DMACaptureCplt+0xb4>
 800a500:	68fb      	ldr	r3, [r7, #12]
 800a502:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a504:	687a      	ldr	r2, [r7, #4]
 800a506:	429a      	cmp	r2, r3
 800a508:	d10e      	bne.n	800a528 <TIM_DMACaptureCplt+0xb4>
 800a50a:	68fb      	ldr	r3, [r7, #12]
 800a50c:	2208      	movs	r2, #8
 800a50e:	771a      	strb	r2, [r3, #28]
 800a510:	687b      	ldr	r3, [r7, #4]
 800a512:	69db      	ldr	r3, [r3, #28]
 800a514:	2b00      	cmp	r3, #0
 800a516:	d107      	bne.n	800a528 <TIM_DMACaptureCplt+0xb4>
 800a518:	68fb      	ldr	r3, [r7, #12]
 800a51a:	2201      	movs	r2, #1
 800a51c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a520:	68fb      	ldr	r3, [r7, #12]
 800a522:	2201      	movs	r2, #1
 800a524:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a528:	68f8      	ldr	r0, [r7, #12]
 800a52a:	f7ff ff28 	bl	800a37e <HAL_TIM_IC_CaptureCallback>
 800a52e:	68fb      	ldr	r3, [r7, #12]
 800a530:	2200      	movs	r2, #0
 800a532:	771a      	strb	r2, [r3, #28]
 800a534:	bf00      	nop
 800a536:	3710      	adds	r7, #16
 800a538:	46bd      	mov	sp, r7
 800a53a:	bd80      	pop	{r7, pc}

0800a53c <TIM_DMACaptureHalfCplt>:
 800a53c:	b580      	push	{r7, lr}
 800a53e:	b084      	sub	sp, #16
 800a540:	af00      	add	r7, sp, #0
 800a542:	6078      	str	r0, [r7, #4]
 800a544:	687b      	ldr	r3, [r7, #4]
 800a546:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a548:	60fb      	str	r3, [r7, #12]
 800a54a:	68fb      	ldr	r3, [r7, #12]
 800a54c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a54e:	687a      	ldr	r2, [r7, #4]
 800a550:	429a      	cmp	r2, r3
 800a552:	d103      	bne.n	800a55c <TIM_DMACaptureHalfCplt+0x20>
 800a554:	68fb      	ldr	r3, [r7, #12]
 800a556:	2201      	movs	r2, #1
 800a558:	771a      	strb	r2, [r3, #28]
 800a55a:	e019      	b.n	800a590 <TIM_DMACaptureHalfCplt+0x54>
 800a55c:	68fb      	ldr	r3, [r7, #12]
 800a55e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a560:	687a      	ldr	r2, [r7, #4]
 800a562:	429a      	cmp	r2, r3
 800a564:	d103      	bne.n	800a56e <TIM_DMACaptureHalfCplt+0x32>
 800a566:	68fb      	ldr	r3, [r7, #12]
 800a568:	2202      	movs	r2, #2
 800a56a:	771a      	strb	r2, [r3, #28]
 800a56c:	e010      	b.n	800a590 <TIM_DMACaptureHalfCplt+0x54>
 800a56e:	68fb      	ldr	r3, [r7, #12]
 800a570:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a572:	687a      	ldr	r2, [r7, #4]
 800a574:	429a      	cmp	r2, r3
 800a576:	d103      	bne.n	800a580 <TIM_DMACaptureHalfCplt+0x44>
 800a578:	68fb      	ldr	r3, [r7, #12]
 800a57a:	2204      	movs	r2, #4
 800a57c:	771a      	strb	r2, [r3, #28]
 800a57e:	e007      	b.n	800a590 <TIM_DMACaptureHalfCplt+0x54>
 800a580:	68fb      	ldr	r3, [r7, #12]
 800a582:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a584:	687a      	ldr	r2, [r7, #4]
 800a586:	429a      	cmp	r2, r3
 800a588:	d102      	bne.n	800a590 <TIM_DMACaptureHalfCplt+0x54>
 800a58a:	68fb      	ldr	r3, [r7, #12]
 800a58c:	2208      	movs	r2, #8
 800a58e:	771a      	strb	r2, [r3, #28]
 800a590:	68f8      	ldr	r0, [r7, #12]
 800a592:	f7ff fefe 	bl	800a392 <HAL_TIM_IC_CaptureHalfCpltCallback>
 800a596:	68fb      	ldr	r3, [r7, #12]
 800a598:	2200      	movs	r2, #0
 800a59a:	771a      	strb	r2, [r3, #28]
 800a59c:	bf00      	nop
 800a59e:	3710      	adds	r7, #16
 800a5a0:	46bd      	mov	sp, r7
 800a5a2:	bd80      	pop	{r7, pc}

0800a5a4 <TIM_Base_SetConfig>:
 800a5a4:	b480      	push	{r7}
 800a5a6:	b085      	sub	sp, #20
 800a5a8:	af00      	add	r7, sp, #0
 800a5aa:	6078      	str	r0, [r7, #4]
 800a5ac:	6039      	str	r1, [r7, #0]
 800a5ae:	687b      	ldr	r3, [r7, #4]
 800a5b0:	681b      	ldr	r3, [r3, #0]
 800a5b2:	60fb      	str	r3, [r7, #12]
 800a5b4:	687b      	ldr	r3, [r7, #4]
 800a5b6:	4a40      	ldr	r2, [pc, #256]	; (800a6b8 <TIM_Base_SetConfig+0x114>)
 800a5b8:	4293      	cmp	r3, r2
 800a5ba:	d013      	beq.n	800a5e4 <TIM_Base_SetConfig+0x40>
 800a5bc:	687b      	ldr	r3, [r7, #4]
 800a5be:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a5c2:	d00f      	beq.n	800a5e4 <TIM_Base_SetConfig+0x40>
 800a5c4:	687b      	ldr	r3, [r7, #4]
 800a5c6:	4a3d      	ldr	r2, [pc, #244]	; (800a6bc <TIM_Base_SetConfig+0x118>)
 800a5c8:	4293      	cmp	r3, r2
 800a5ca:	d00b      	beq.n	800a5e4 <TIM_Base_SetConfig+0x40>
 800a5cc:	687b      	ldr	r3, [r7, #4]
 800a5ce:	4a3c      	ldr	r2, [pc, #240]	; (800a6c0 <TIM_Base_SetConfig+0x11c>)
 800a5d0:	4293      	cmp	r3, r2
 800a5d2:	d007      	beq.n	800a5e4 <TIM_Base_SetConfig+0x40>
 800a5d4:	687b      	ldr	r3, [r7, #4]
 800a5d6:	4a3b      	ldr	r2, [pc, #236]	; (800a6c4 <TIM_Base_SetConfig+0x120>)
 800a5d8:	4293      	cmp	r3, r2
 800a5da:	d003      	beq.n	800a5e4 <TIM_Base_SetConfig+0x40>
 800a5dc:	687b      	ldr	r3, [r7, #4]
 800a5de:	4a3a      	ldr	r2, [pc, #232]	; (800a6c8 <TIM_Base_SetConfig+0x124>)
 800a5e0:	4293      	cmp	r3, r2
 800a5e2:	d108      	bne.n	800a5f6 <TIM_Base_SetConfig+0x52>
 800a5e4:	68fb      	ldr	r3, [r7, #12]
 800a5e6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800a5ea:	60fb      	str	r3, [r7, #12]
 800a5ec:	683b      	ldr	r3, [r7, #0]
 800a5ee:	685b      	ldr	r3, [r3, #4]
 800a5f0:	68fa      	ldr	r2, [r7, #12]
 800a5f2:	4313      	orrs	r3, r2
 800a5f4:	60fb      	str	r3, [r7, #12]
 800a5f6:	687b      	ldr	r3, [r7, #4]
 800a5f8:	4a2f      	ldr	r2, [pc, #188]	; (800a6b8 <TIM_Base_SetConfig+0x114>)
 800a5fa:	4293      	cmp	r3, r2
 800a5fc:	d02b      	beq.n	800a656 <TIM_Base_SetConfig+0xb2>
 800a5fe:	687b      	ldr	r3, [r7, #4]
 800a600:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a604:	d027      	beq.n	800a656 <TIM_Base_SetConfig+0xb2>
 800a606:	687b      	ldr	r3, [r7, #4]
 800a608:	4a2c      	ldr	r2, [pc, #176]	; (800a6bc <TIM_Base_SetConfig+0x118>)
 800a60a:	4293      	cmp	r3, r2
 800a60c:	d023      	beq.n	800a656 <TIM_Base_SetConfig+0xb2>
 800a60e:	687b      	ldr	r3, [r7, #4]
 800a610:	4a2b      	ldr	r2, [pc, #172]	; (800a6c0 <TIM_Base_SetConfig+0x11c>)
 800a612:	4293      	cmp	r3, r2
 800a614:	d01f      	beq.n	800a656 <TIM_Base_SetConfig+0xb2>
 800a616:	687b      	ldr	r3, [r7, #4]
 800a618:	4a2a      	ldr	r2, [pc, #168]	; (800a6c4 <TIM_Base_SetConfig+0x120>)
 800a61a:	4293      	cmp	r3, r2
 800a61c:	d01b      	beq.n	800a656 <TIM_Base_SetConfig+0xb2>
 800a61e:	687b      	ldr	r3, [r7, #4]
 800a620:	4a29      	ldr	r2, [pc, #164]	; (800a6c8 <TIM_Base_SetConfig+0x124>)
 800a622:	4293      	cmp	r3, r2
 800a624:	d017      	beq.n	800a656 <TIM_Base_SetConfig+0xb2>
 800a626:	687b      	ldr	r3, [r7, #4]
 800a628:	4a28      	ldr	r2, [pc, #160]	; (800a6cc <TIM_Base_SetConfig+0x128>)
 800a62a:	4293      	cmp	r3, r2
 800a62c:	d013      	beq.n	800a656 <TIM_Base_SetConfig+0xb2>
 800a62e:	687b      	ldr	r3, [r7, #4]
 800a630:	4a27      	ldr	r2, [pc, #156]	; (800a6d0 <TIM_Base_SetConfig+0x12c>)
 800a632:	4293      	cmp	r3, r2
 800a634:	d00f      	beq.n	800a656 <TIM_Base_SetConfig+0xb2>
 800a636:	687b      	ldr	r3, [r7, #4]
 800a638:	4a26      	ldr	r2, [pc, #152]	; (800a6d4 <TIM_Base_SetConfig+0x130>)
 800a63a:	4293      	cmp	r3, r2
 800a63c:	d00b      	beq.n	800a656 <TIM_Base_SetConfig+0xb2>
 800a63e:	687b      	ldr	r3, [r7, #4]
 800a640:	4a25      	ldr	r2, [pc, #148]	; (800a6d8 <TIM_Base_SetConfig+0x134>)
 800a642:	4293      	cmp	r3, r2
 800a644:	d007      	beq.n	800a656 <TIM_Base_SetConfig+0xb2>
 800a646:	687b      	ldr	r3, [r7, #4]
 800a648:	4a24      	ldr	r2, [pc, #144]	; (800a6dc <TIM_Base_SetConfig+0x138>)
 800a64a:	4293      	cmp	r3, r2
 800a64c:	d003      	beq.n	800a656 <TIM_Base_SetConfig+0xb2>
 800a64e:	687b      	ldr	r3, [r7, #4]
 800a650:	4a23      	ldr	r2, [pc, #140]	; (800a6e0 <TIM_Base_SetConfig+0x13c>)
 800a652:	4293      	cmp	r3, r2
 800a654:	d108      	bne.n	800a668 <TIM_Base_SetConfig+0xc4>
 800a656:	68fb      	ldr	r3, [r7, #12]
 800a658:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800a65c:	60fb      	str	r3, [r7, #12]
 800a65e:	683b      	ldr	r3, [r7, #0]
 800a660:	68db      	ldr	r3, [r3, #12]
 800a662:	68fa      	ldr	r2, [r7, #12]
 800a664:	4313      	orrs	r3, r2
 800a666:	60fb      	str	r3, [r7, #12]
 800a668:	68fb      	ldr	r3, [r7, #12]
 800a66a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800a66e:	683b      	ldr	r3, [r7, #0]
 800a670:	695b      	ldr	r3, [r3, #20]
 800a672:	4313      	orrs	r3, r2
 800a674:	60fb      	str	r3, [r7, #12]
 800a676:	687b      	ldr	r3, [r7, #4]
 800a678:	68fa      	ldr	r2, [r7, #12]
 800a67a:	601a      	str	r2, [r3, #0]
 800a67c:	683b      	ldr	r3, [r7, #0]
 800a67e:	689a      	ldr	r2, [r3, #8]
 800a680:	687b      	ldr	r3, [r7, #4]
 800a682:	62da      	str	r2, [r3, #44]	; 0x2c
 800a684:	683b      	ldr	r3, [r7, #0]
 800a686:	681a      	ldr	r2, [r3, #0]
 800a688:	687b      	ldr	r3, [r7, #4]
 800a68a:	629a      	str	r2, [r3, #40]	; 0x28
 800a68c:	687b      	ldr	r3, [r7, #4]
 800a68e:	4a0a      	ldr	r2, [pc, #40]	; (800a6b8 <TIM_Base_SetConfig+0x114>)
 800a690:	4293      	cmp	r3, r2
 800a692:	d003      	beq.n	800a69c <TIM_Base_SetConfig+0xf8>
 800a694:	687b      	ldr	r3, [r7, #4]
 800a696:	4a0c      	ldr	r2, [pc, #48]	; (800a6c8 <TIM_Base_SetConfig+0x124>)
 800a698:	4293      	cmp	r3, r2
 800a69a:	d103      	bne.n	800a6a4 <TIM_Base_SetConfig+0x100>
 800a69c:	683b      	ldr	r3, [r7, #0]
 800a69e:	691a      	ldr	r2, [r3, #16]
 800a6a0:	687b      	ldr	r3, [r7, #4]
 800a6a2:	631a      	str	r2, [r3, #48]	; 0x30
 800a6a4:	687b      	ldr	r3, [r7, #4]
 800a6a6:	2201      	movs	r2, #1
 800a6a8:	615a      	str	r2, [r3, #20]
 800a6aa:	bf00      	nop
 800a6ac:	3714      	adds	r7, #20
 800a6ae:	46bd      	mov	sp, r7
 800a6b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6b4:	4770      	bx	lr
 800a6b6:	bf00      	nop
 800a6b8:	40010000 	.word	0x40010000
 800a6bc:	40000400 	.word	0x40000400
 800a6c0:	40000800 	.word	0x40000800
 800a6c4:	40000c00 	.word	0x40000c00
 800a6c8:	40010400 	.word	0x40010400
 800a6cc:	40014000 	.word	0x40014000
 800a6d0:	40014400 	.word	0x40014400
 800a6d4:	40014800 	.word	0x40014800
 800a6d8:	40001800 	.word	0x40001800
 800a6dc:	40001c00 	.word	0x40001c00
 800a6e0:	40002000 	.word	0x40002000

0800a6e4 <TIM_OC1_SetConfig>:
 800a6e4:	b480      	push	{r7}
 800a6e6:	b087      	sub	sp, #28
 800a6e8:	af00      	add	r7, sp, #0
 800a6ea:	6078      	str	r0, [r7, #4]
 800a6ec:	6039      	str	r1, [r7, #0]
 800a6ee:	687b      	ldr	r3, [r7, #4]
 800a6f0:	6a1b      	ldr	r3, [r3, #32]
 800a6f2:	f023 0201 	bic.w	r2, r3, #1
 800a6f6:	687b      	ldr	r3, [r7, #4]
 800a6f8:	621a      	str	r2, [r3, #32]
 800a6fa:	687b      	ldr	r3, [r7, #4]
 800a6fc:	6a1b      	ldr	r3, [r3, #32]
 800a6fe:	617b      	str	r3, [r7, #20]
 800a700:	687b      	ldr	r3, [r7, #4]
 800a702:	685b      	ldr	r3, [r3, #4]
 800a704:	613b      	str	r3, [r7, #16]
 800a706:	687b      	ldr	r3, [r7, #4]
 800a708:	699b      	ldr	r3, [r3, #24]
 800a70a:	60fb      	str	r3, [r7, #12]
 800a70c:	68fb      	ldr	r3, [r7, #12]
 800a70e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800a712:	60fb      	str	r3, [r7, #12]
 800a714:	68fb      	ldr	r3, [r7, #12]
 800a716:	f023 0303 	bic.w	r3, r3, #3
 800a71a:	60fb      	str	r3, [r7, #12]
 800a71c:	683b      	ldr	r3, [r7, #0]
 800a71e:	681b      	ldr	r3, [r3, #0]
 800a720:	68fa      	ldr	r2, [r7, #12]
 800a722:	4313      	orrs	r3, r2
 800a724:	60fb      	str	r3, [r7, #12]
 800a726:	697b      	ldr	r3, [r7, #20]
 800a728:	f023 0302 	bic.w	r3, r3, #2
 800a72c:	617b      	str	r3, [r7, #20]
 800a72e:	683b      	ldr	r3, [r7, #0]
 800a730:	689b      	ldr	r3, [r3, #8]
 800a732:	697a      	ldr	r2, [r7, #20]
 800a734:	4313      	orrs	r3, r2
 800a736:	617b      	str	r3, [r7, #20]
 800a738:	687b      	ldr	r3, [r7, #4]
 800a73a:	4a20      	ldr	r2, [pc, #128]	; (800a7bc <TIM_OC1_SetConfig+0xd8>)
 800a73c:	4293      	cmp	r3, r2
 800a73e:	d003      	beq.n	800a748 <TIM_OC1_SetConfig+0x64>
 800a740:	687b      	ldr	r3, [r7, #4]
 800a742:	4a1f      	ldr	r2, [pc, #124]	; (800a7c0 <TIM_OC1_SetConfig+0xdc>)
 800a744:	4293      	cmp	r3, r2
 800a746:	d10c      	bne.n	800a762 <TIM_OC1_SetConfig+0x7e>
 800a748:	697b      	ldr	r3, [r7, #20]
 800a74a:	f023 0308 	bic.w	r3, r3, #8
 800a74e:	617b      	str	r3, [r7, #20]
 800a750:	683b      	ldr	r3, [r7, #0]
 800a752:	68db      	ldr	r3, [r3, #12]
 800a754:	697a      	ldr	r2, [r7, #20]
 800a756:	4313      	orrs	r3, r2
 800a758:	617b      	str	r3, [r7, #20]
 800a75a:	697b      	ldr	r3, [r7, #20]
 800a75c:	f023 0304 	bic.w	r3, r3, #4
 800a760:	617b      	str	r3, [r7, #20]
 800a762:	687b      	ldr	r3, [r7, #4]
 800a764:	4a15      	ldr	r2, [pc, #84]	; (800a7bc <TIM_OC1_SetConfig+0xd8>)
 800a766:	4293      	cmp	r3, r2
 800a768:	d003      	beq.n	800a772 <TIM_OC1_SetConfig+0x8e>
 800a76a:	687b      	ldr	r3, [r7, #4]
 800a76c:	4a14      	ldr	r2, [pc, #80]	; (800a7c0 <TIM_OC1_SetConfig+0xdc>)
 800a76e:	4293      	cmp	r3, r2
 800a770:	d111      	bne.n	800a796 <TIM_OC1_SetConfig+0xb2>
 800a772:	693b      	ldr	r3, [r7, #16]
 800a774:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800a778:	613b      	str	r3, [r7, #16]
 800a77a:	693b      	ldr	r3, [r7, #16]
 800a77c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800a780:	613b      	str	r3, [r7, #16]
 800a782:	683b      	ldr	r3, [r7, #0]
 800a784:	695b      	ldr	r3, [r3, #20]
 800a786:	693a      	ldr	r2, [r7, #16]
 800a788:	4313      	orrs	r3, r2
 800a78a:	613b      	str	r3, [r7, #16]
 800a78c:	683b      	ldr	r3, [r7, #0]
 800a78e:	699b      	ldr	r3, [r3, #24]
 800a790:	693a      	ldr	r2, [r7, #16]
 800a792:	4313      	orrs	r3, r2
 800a794:	613b      	str	r3, [r7, #16]
 800a796:	687b      	ldr	r3, [r7, #4]
 800a798:	693a      	ldr	r2, [r7, #16]
 800a79a:	605a      	str	r2, [r3, #4]
 800a79c:	687b      	ldr	r3, [r7, #4]
 800a79e:	68fa      	ldr	r2, [r7, #12]
 800a7a0:	619a      	str	r2, [r3, #24]
 800a7a2:	683b      	ldr	r3, [r7, #0]
 800a7a4:	685a      	ldr	r2, [r3, #4]
 800a7a6:	687b      	ldr	r3, [r7, #4]
 800a7a8:	635a      	str	r2, [r3, #52]	; 0x34
 800a7aa:	687b      	ldr	r3, [r7, #4]
 800a7ac:	697a      	ldr	r2, [r7, #20]
 800a7ae:	621a      	str	r2, [r3, #32]
 800a7b0:	bf00      	nop
 800a7b2:	371c      	adds	r7, #28
 800a7b4:	46bd      	mov	sp, r7
 800a7b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7ba:	4770      	bx	lr
 800a7bc:	40010000 	.word	0x40010000
 800a7c0:	40010400 	.word	0x40010400

0800a7c4 <TIM_OC2_SetConfig>:
 800a7c4:	b480      	push	{r7}
 800a7c6:	b087      	sub	sp, #28
 800a7c8:	af00      	add	r7, sp, #0
 800a7ca:	6078      	str	r0, [r7, #4]
 800a7cc:	6039      	str	r1, [r7, #0]
 800a7ce:	687b      	ldr	r3, [r7, #4]
 800a7d0:	6a1b      	ldr	r3, [r3, #32]
 800a7d2:	f023 0210 	bic.w	r2, r3, #16
 800a7d6:	687b      	ldr	r3, [r7, #4]
 800a7d8:	621a      	str	r2, [r3, #32]
 800a7da:	687b      	ldr	r3, [r7, #4]
 800a7dc:	6a1b      	ldr	r3, [r3, #32]
 800a7de:	617b      	str	r3, [r7, #20]
 800a7e0:	687b      	ldr	r3, [r7, #4]
 800a7e2:	685b      	ldr	r3, [r3, #4]
 800a7e4:	613b      	str	r3, [r7, #16]
 800a7e6:	687b      	ldr	r3, [r7, #4]
 800a7e8:	699b      	ldr	r3, [r3, #24]
 800a7ea:	60fb      	str	r3, [r7, #12]
 800a7ec:	68fb      	ldr	r3, [r7, #12]
 800a7ee:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800a7f2:	60fb      	str	r3, [r7, #12]
 800a7f4:	68fb      	ldr	r3, [r7, #12]
 800a7f6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800a7fa:	60fb      	str	r3, [r7, #12]
 800a7fc:	683b      	ldr	r3, [r7, #0]
 800a7fe:	681b      	ldr	r3, [r3, #0]
 800a800:	021b      	lsls	r3, r3, #8
 800a802:	68fa      	ldr	r2, [r7, #12]
 800a804:	4313      	orrs	r3, r2
 800a806:	60fb      	str	r3, [r7, #12]
 800a808:	697b      	ldr	r3, [r7, #20]
 800a80a:	f023 0320 	bic.w	r3, r3, #32
 800a80e:	617b      	str	r3, [r7, #20]
 800a810:	683b      	ldr	r3, [r7, #0]
 800a812:	689b      	ldr	r3, [r3, #8]
 800a814:	011b      	lsls	r3, r3, #4
 800a816:	697a      	ldr	r2, [r7, #20]
 800a818:	4313      	orrs	r3, r2
 800a81a:	617b      	str	r3, [r7, #20]
 800a81c:	687b      	ldr	r3, [r7, #4]
 800a81e:	4a22      	ldr	r2, [pc, #136]	; (800a8a8 <TIM_OC2_SetConfig+0xe4>)
 800a820:	4293      	cmp	r3, r2
 800a822:	d003      	beq.n	800a82c <TIM_OC2_SetConfig+0x68>
 800a824:	687b      	ldr	r3, [r7, #4]
 800a826:	4a21      	ldr	r2, [pc, #132]	; (800a8ac <TIM_OC2_SetConfig+0xe8>)
 800a828:	4293      	cmp	r3, r2
 800a82a:	d10d      	bne.n	800a848 <TIM_OC2_SetConfig+0x84>
 800a82c:	697b      	ldr	r3, [r7, #20]
 800a82e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800a832:	617b      	str	r3, [r7, #20]
 800a834:	683b      	ldr	r3, [r7, #0]
 800a836:	68db      	ldr	r3, [r3, #12]
 800a838:	011b      	lsls	r3, r3, #4
 800a83a:	697a      	ldr	r2, [r7, #20]
 800a83c:	4313      	orrs	r3, r2
 800a83e:	617b      	str	r3, [r7, #20]
 800a840:	697b      	ldr	r3, [r7, #20]
 800a842:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a846:	617b      	str	r3, [r7, #20]
 800a848:	687b      	ldr	r3, [r7, #4]
 800a84a:	4a17      	ldr	r2, [pc, #92]	; (800a8a8 <TIM_OC2_SetConfig+0xe4>)
 800a84c:	4293      	cmp	r3, r2
 800a84e:	d003      	beq.n	800a858 <TIM_OC2_SetConfig+0x94>
 800a850:	687b      	ldr	r3, [r7, #4]
 800a852:	4a16      	ldr	r2, [pc, #88]	; (800a8ac <TIM_OC2_SetConfig+0xe8>)
 800a854:	4293      	cmp	r3, r2
 800a856:	d113      	bne.n	800a880 <TIM_OC2_SetConfig+0xbc>
 800a858:	693b      	ldr	r3, [r7, #16]
 800a85a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a85e:	613b      	str	r3, [r7, #16]
 800a860:	693b      	ldr	r3, [r7, #16]
 800a862:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800a866:	613b      	str	r3, [r7, #16]
 800a868:	683b      	ldr	r3, [r7, #0]
 800a86a:	695b      	ldr	r3, [r3, #20]
 800a86c:	009b      	lsls	r3, r3, #2
 800a86e:	693a      	ldr	r2, [r7, #16]
 800a870:	4313      	orrs	r3, r2
 800a872:	613b      	str	r3, [r7, #16]
 800a874:	683b      	ldr	r3, [r7, #0]
 800a876:	699b      	ldr	r3, [r3, #24]
 800a878:	009b      	lsls	r3, r3, #2
 800a87a:	693a      	ldr	r2, [r7, #16]
 800a87c:	4313      	orrs	r3, r2
 800a87e:	613b      	str	r3, [r7, #16]
 800a880:	687b      	ldr	r3, [r7, #4]
 800a882:	693a      	ldr	r2, [r7, #16]
 800a884:	605a      	str	r2, [r3, #4]
 800a886:	687b      	ldr	r3, [r7, #4]
 800a888:	68fa      	ldr	r2, [r7, #12]
 800a88a:	619a      	str	r2, [r3, #24]
 800a88c:	683b      	ldr	r3, [r7, #0]
 800a88e:	685a      	ldr	r2, [r3, #4]
 800a890:	687b      	ldr	r3, [r7, #4]
 800a892:	639a      	str	r2, [r3, #56]	; 0x38
 800a894:	687b      	ldr	r3, [r7, #4]
 800a896:	697a      	ldr	r2, [r7, #20]
 800a898:	621a      	str	r2, [r3, #32]
 800a89a:	bf00      	nop
 800a89c:	371c      	adds	r7, #28
 800a89e:	46bd      	mov	sp, r7
 800a8a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8a4:	4770      	bx	lr
 800a8a6:	bf00      	nop
 800a8a8:	40010000 	.word	0x40010000
 800a8ac:	40010400 	.word	0x40010400

0800a8b0 <TIM_OC3_SetConfig>:
 800a8b0:	b480      	push	{r7}
 800a8b2:	b087      	sub	sp, #28
 800a8b4:	af00      	add	r7, sp, #0
 800a8b6:	6078      	str	r0, [r7, #4]
 800a8b8:	6039      	str	r1, [r7, #0]
 800a8ba:	687b      	ldr	r3, [r7, #4]
 800a8bc:	6a1b      	ldr	r3, [r3, #32]
 800a8be:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800a8c2:	687b      	ldr	r3, [r7, #4]
 800a8c4:	621a      	str	r2, [r3, #32]
 800a8c6:	687b      	ldr	r3, [r7, #4]
 800a8c8:	6a1b      	ldr	r3, [r3, #32]
 800a8ca:	617b      	str	r3, [r7, #20]
 800a8cc:	687b      	ldr	r3, [r7, #4]
 800a8ce:	685b      	ldr	r3, [r3, #4]
 800a8d0:	613b      	str	r3, [r7, #16]
 800a8d2:	687b      	ldr	r3, [r7, #4]
 800a8d4:	69db      	ldr	r3, [r3, #28]
 800a8d6:	60fb      	str	r3, [r7, #12]
 800a8d8:	68fb      	ldr	r3, [r7, #12]
 800a8da:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800a8de:	60fb      	str	r3, [r7, #12]
 800a8e0:	68fb      	ldr	r3, [r7, #12]
 800a8e2:	f023 0303 	bic.w	r3, r3, #3
 800a8e6:	60fb      	str	r3, [r7, #12]
 800a8e8:	683b      	ldr	r3, [r7, #0]
 800a8ea:	681b      	ldr	r3, [r3, #0]
 800a8ec:	68fa      	ldr	r2, [r7, #12]
 800a8ee:	4313      	orrs	r3, r2
 800a8f0:	60fb      	str	r3, [r7, #12]
 800a8f2:	697b      	ldr	r3, [r7, #20]
 800a8f4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800a8f8:	617b      	str	r3, [r7, #20]
 800a8fa:	683b      	ldr	r3, [r7, #0]
 800a8fc:	689b      	ldr	r3, [r3, #8]
 800a8fe:	021b      	lsls	r3, r3, #8
 800a900:	697a      	ldr	r2, [r7, #20]
 800a902:	4313      	orrs	r3, r2
 800a904:	617b      	str	r3, [r7, #20]
 800a906:	687b      	ldr	r3, [r7, #4]
 800a908:	4a21      	ldr	r2, [pc, #132]	; (800a990 <TIM_OC3_SetConfig+0xe0>)
 800a90a:	4293      	cmp	r3, r2
 800a90c:	d003      	beq.n	800a916 <TIM_OC3_SetConfig+0x66>
 800a90e:	687b      	ldr	r3, [r7, #4]
 800a910:	4a20      	ldr	r2, [pc, #128]	; (800a994 <TIM_OC3_SetConfig+0xe4>)
 800a912:	4293      	cmp	r3, r2
 800a914:	d10d      	bne.n	800a932 <TIM_OC3_SetConfig+0x82>
 800a916:	697b      	ldr	r3, [r7, #20]
 800a918:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800a91c:	617b      	str	r3, [r7, #20]
 800a91e:	683b      	ldr	r3, [r7, #0]
 800a920:	68db      	ldr	r3, [r3, #12]
 800a922:	021b      	lsls	r3, r3, #8
 800a924:	697a      	ldr	r2, [r7, #20]
 800a926:	4313      	orrs	r3, r2
 800a928:	617b      	str	r3, [r7, #20]
 800a92a:	697b      	ldr	r3, [r7, #20]
 800a92c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a930:	617b      	str	r3, [r7, #20]
 800a932:	687b      	ldr	r3, [r7, #4]
 800a934:	4a16      	ldr	r2, [pc, #88]	; (800a990 <TIM_OC3_SetConfig+0xe0>)
 800a936:	4293      	cmp	r3, r2
 800a938:	d003      	beq.n	800a942 <TIM_OC3_SetConfig+0x92>
 800a93a:	687b      	ldr	r3, [r7, #4]
 800a93c:	4a15      	ldr	r2, [pc, #84]	; (800a994 <TIM_OC3_SetConfig+0xe4>)
 800a93e:	4293      	cmp	r3, r2
 800a940:	d113      	bne.n	800a96a <TIM_OC3_SetConfig+0xba>
 800a942:	693b      	ldr	r3, [r7, #16]
 800a944:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800a948:	613b      	str	r3, [r7, #16]
 800a94a:	693b      	ldr	r3, [r7, #16]
 800a94c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800a950:	613b      	str	r3, [r7, #16]
 800a952:	683b      	ldr	r3, [r7, #0]
 800a954:	695b      	ldr	r3, [r3, #20]
 800a956:	011b      	lsls	r3, r3, #4
 800a958:	693a      	ldr	r2, [r7, #16]
 800a95a:	4313      	orrs	r3, r2
 800a95c:	613b      	str	r3, [r7, #16]
 800a95e:	683b      	ldr	r3, [r7, #0]
 800a960:	699b      	ldr	r3, [r3, #24]
 800a962:	011b      	lsls	r3, r3, #4
 800a964:	693a      	ldr	r2, [r7, #16]
 800a966:	4313      	orrs	r3, r2
 800a968:	613b      	str	r3, [r7, #16]
 800a96a:	687b      	ldr	r3, [r7, #4]
 800a96c:	693a      	ldr	r2, [r7, #16]
 800a96e:	605a      	str	r2, [r3, #4]
 800a970:	687b      	ldr	r3, [r7, #4]
 800a972:	68fa      	ldr	r2, [r7, #12]
 800a974:	61da      	str	r2, [r3, #28]
 800a976:	683b      	ldr	r3, [r7, #0]
 800a978:	685a      	ldr	r2, [r3, #4]
 800a97a:	687b      	ldr	r3, [r7, #4]
 800a97c:	63da      	str	r2, [r3, #60]	; 0x3c
 800a97e:	687b      	ldr	r3, [r7, #4]
 800a980:	697a      	ldr	r2, [r7, #20]
 800a982:	621a      	str	r2, [r3, #32]
 800a984:	bf00      	nop
 800a986:	371c      	adds	r7, #28
 800a988:	46bd      	mov	sp, r7
 800a98a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a98e:	4770      	bx	lr
 800a990:	40010000 	.word	0x40010000
 800a994:	40010400 	.word	0x40010400

0800a998 <TIM_OC4_SetConfig>:
 800a998:	b480      	push	{r7}
 800a99a:	b087      	sub	sp, #28
 800a99c:	af00      	add	r7, sp, #0
 800a99e:	6078      	str	r0, [r7, #4]
 800a9a0:	6039      	str	r1, [r7, #0]
 800a9a2:	687b      	ldr	r3, [r7, #4]
 800a9a4:	6a1b      	ldr	r3, [r3, #32]
 800a9a6:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800a9aa:	687b      	ldr	r3, [r7, #4]
 800a9ac:	621a      	str	r2, [r3, #32]
 800a9ae:	687b      	ldr	r3, [r7, #4]
 800a9b0:	6a1b      	ldr	r3, [r3, #32]
 800a9b2:	613b      	str	r3, [r7, #16]
 800a9b4:	687b      	ldr	r3, [r7, #4]
 800a9b6:	685b      	ldr	r3, [r3, #4]
 800a9b8:	617b      	str	r3, [r7, #20]
 800a9ba:	687b      	ldr	r3, [r7, #4]
 800a9bc:	69db      	ldr	r3, [r3, #28]
 800a9be:	60fb      	str	r3, [r7, #12]
 800a9c0:	68fb      	ldr	r3, [r7, #12]
 800a9c2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800a9c6:	60fb      	str	r3, [r7, #12]
 800a9c8:	68fb      	ldr	r3, [r7, #12]
 800a9ca:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800a9ce:	60fb      	str	r3, [r7, #12]
 800a9d0:	683b      	ldr	r3, [r7, #0]
 800a9d2:	681b      	ldr	r3, [r3, #0]
 800a9d4:	021b      	lsls	r3, r3, #8
 800a9d6:	68fa      	ldr	r2, [r7, #12]
 800a9d8:	4313      	orrs	r3, r2
 800a9da:	60fb      	str	r3, [r7, #12]
 800a9dc:	693b      	ldr	r3, [r7, #16]
 800a9de:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800a9e2:	613b      	str	r3, [r7, #16]
 800a9e4:	683b      	ldr	r3, [r7, #0]
 800a9e6:	689b      	ldr	r3, [r3, #8]
 800a9e8:	031b      	lsls	r3, r3, #12
 800a9ea:	693a      	ldr	r2, [r7, #16]
 800a9ec:	4313      	orrs	r3, r2
 800a9ee:	613b      	str	r3, [r7, #16]
 800a9f0:	687b      	ldr	r3, [r7, #4]
 800a9f2:	4a12      	ldr	r2, [pc, #72]	; (800aa3c <TIM_OC4_SetConfig+0xa4>)
 800a9f4:	4293      	cmp	r3, r2
 800a9f6:	d003      	beq.n	800aa00 <TIM_OC4_SetConfig+0x68>
 800a9f8:	687b      	ldr	r3, [r7, #4]
 800a9fa:	4a11      	ldr	r2, [pc, #68]	; (800aa40 <TIM_OC4_SetConfig+0xa8>)
 800a9fc:	4293      	cmp	r3, r2
 800a9fe:	d109      	bne.n	800aa14 <TIM_OC4_SetConfig+0x7c>
 800aa00:	697b      	ldr	r3, [r7, #20]
 800aa02:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800aa06:	617b      	str	r3, [r7, #20]
 800aa08:	683b      	ldr	r3, [r7, #0]
 800aa0a:	695b      	ldr	r3, [r3, #20]
 800aa0c:	019b      	lsls	r3, r3, #6
 800aa0e:	697a      	ldr	r2, [r7, #20]
 800aa10:	4313      	orrs	r3, r2
 800aa12:	617b      	str	r3, [r7, #20]
 800aa14:	687b      	ldr	r3, [r7, #4]
 800aa16:	697a      	ldr	r2, [r7, #20]
 800aa18:	605a      	str	r2, [r3, #4]
 800aa1a:	687b      	ldr	r3, [r7, #4]
 800aa1c:	68fa      	ldr	r2, [r7, #12]
 800aa1e:	61da      	str	r2, [r3, #28]
 800aa20:	683b      	ldr	r3, [r7, #0]
 800aa22:	685a      	ldr	r2, [r3, #4]
 800aa24:	687b      	ldr	r3, [r7, #4]
 800aa26:	641a      	str	r2, [r3, #64]	; 0x40
 800aa28:	687b      	ldr	r3, [r7, #4]
 800aa2a:	693a      	ldr	r2, [r7, #16]
 800aa2c:	621a      	str	r2, [r3, #32]
 800aa2e:	bf00      	nop
 800aa30:	371c      	adds	r7, #28
 800aa32:	46bd      	mov	sp, r7
 800aa34:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa38:	4770      	bx	lr
 800aa3a:	bf00      	nop
 800aa3c:	40010000 	.word	0x40010000
 800aa40:	40010400 	.word	0x40010400

0800aa44 <TIM_TI1_SetConfig>:
 800aa44:	b480      	push	{r7}
 800aa46:	b087      	sub	sp, #28
 800aa48:	af00      	add	r7, sp, #0
 800aa4a:	60f8      	str	r0, [r7, #12]
 800aa4c:	60b9      	str	r1, [r7, #8]
 800aa4e:	607a      	str	r2, [r7, #4]
 800aa50:	603b      	str	r3, [r7, #0]
 800aa52:	68fb      	ldr	r3, [r7, #12]
 800aa54:	6a1b      	ldr	r3, [r3, #32]
 800aa56:	f023 0201 	bic.w	r2, r3, #1
 800aa5a:	68fb      	ldr	r3, [r7, #12]
 800aa5c:	621a      	str	r2, [r3, #32]
 800aa5e:	68fb      	ldr	r3, [r7, #12]
 800aa60:	699b      	ldr	r3, [r3, #24]
 800aa62:	617b      	str	r3, [r7, #20]
 800aa64:	68fb      	ldr	r3, [r7, #12]
 800aa66:	6a1b      	ldr	r3, [r3, #32]
 800aa68:	613b      	str	r3, [r7, #16]
 800aa6a:	68fb      	ldr	r3, [r7, #12]
 800aa6c:	4a28      	ldr	r2, [pc, #160]	; (800ab10 <TIM_TI1_SetConfig+0xcc>)
 800aa6e:	4293      	cmp	r3, r2
 800aa70:	d01b      	beq.n	800aaaa <TIM_TI1_SetConfig+0x66>
 800aa72:	68fb      	ldr	r3, [r7, #12]
 800aa74:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800aa78:	d017      	beq.n	800aaaa <TIM_TI1_SetConfig+0x66>
 800aa7a:	68fb      	ldr	r3, [r7, #12]
 800aa7c:	4a25      	ldr	r2, [pc, #148]	; (800ab14 <TIM_TI1_SetConfig+0xd0>)
 800aa7e:	4293      	cmp	r3, r2
 800aa80:	d013      	beq.n	800aaaa <TIM_TI1_SetConfig+0x66>
 800aa82:	68fb      	ldr	r3, [r7, #12]
 800aa84:	4a24      	ldr	r2, [pc, #144]	; (800ab18 <TIM_TI1_SetConfig+0xd4>)
 800aa86:	4293      	cmp	r3, r2
 800aa88:	d00f      	beq.n	800aaaa <TIM_TI1_SetConfig+0x66>
 800aa8a:	68fb      	ldr	r3, [r7, #12]
 800aa8c:	4a23      	ldr	r2, [pc, #140]	; (800ab1c <TIM_TI1_SetConfig+0xd8>)
 800aa8e:	4293      	cmp	r3, r2
 800aa90:	d00b      	beq.n	800aaaa <TIM_TI1_SetConfig+0x66>
 800aa92:	68fb      	ldr	r3, [r7, #12]
 800aa94:	4a22      	ldr	r2, [pc, #136]	; (800ab20 <TIM_TI1_SetConfig+0xdc>)
 800aa96:	4293      	cmp	r3, r2
 800aa98:	d007      	beq.n	800aaaa <TIM_TI1_SetConfig+0x66>
 800aa9a:	68fb      	ldr	r3, [r7, #12]
 800aa9c:	4a21      	ldr	r2, [pc, #132]	; (800ab24 <TIM_TI1_SetConfig+0xe0>)
 800aa9e:	4293      	cmp	r3, r2
 800aaa0:	d003      	beq.n	800aaaa <TIM_TI1_SetConfig+0x66>
 800aaa2:	68fb      	ldr	r3, [r7, #12]
 800aaa4:	4a20      	ldr	r2, [pc, #128]	; (800ab28 <TIM_TI1_SetConfig+0xe4>)
 800aaa6:	4293      	cmp	r3, r2
 800aaa8:	d101      	bne.n	800aaae <TIM_TI1_SetConfig+0x6a>
 800aaaa:	2301      	movs	r3, #1
 800aaac:	e000      	b.n	800aab0 <TIM_TI1_SetConfig+0x6c>
 800aaae:	2300      	movs	r3, #0
 800aab0:	2b00      	cmp	r3, #0
 800aab2:	d008      	beq.n	800aac6 <TIM_TI1_SetConfig+0x82>
 800aab4:	697b      	ldr	r3, [r7, #20]
 800aab6:	f023 0303 	bic.w	r3, r3, #3
 800aaba:	617b      	str	r3, [r7, #20]
 800aabc:	697a      	ldr	r2, [r7, #20]
 800aabe:	687b      	ldr	r3, [r7, #4]
 800aac0:	4313      	orrs	r3, r2
 800aac2:	617b      	str	r3, [r7, #20]
 800aac4:	e003      	b.n	800aace <TIM_TI1_SetConfig+0x8a>
 800aac6:	697b      	ldr	r3, [r7, #20]
 800aac8:	f043 0301 	orr.w	r3, r3, #1
 800aacc:	617b      	str	r3, [r7, #20]
 800aace:	697b      	ldr	r3, [r7, #20]
 800aad0:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800aad4:	617b      	str	r3, [r7, #20]
 800aad6:	683b      	ldr	r3, [r7, #0]
 800aad8:	011b      	lsls	r3, r3, #4
 800aada:	b2db      	uxtb	r3, r3
 800aadc:	697a      	ldr	r2, [r7, #20]
 800aade:	4313      	orrs	r3, r2
 800aae0:	617b      	str	r3, [r7, #20]
 800aae2:	693b      	ldr	r3, [r7, #16]
 800aae4:	f023 030a 	bic.w	r3, r3, #10
 800aae8:	613b      	str	r3, [r7, #16]
 800aaea:	68bb      	ldr	r3, [r7, #8]
 800aaec:	f003 030a 	and.w	r3, r3, #10
 800aaf0:	693a      	ldr	r2, [r7, #16]
 800aaf2:	4313      	orrs	r3, r2
 800aaf4:	613b      	str	r3, [r7, #16]
 800aaf6:	68fb      	ldr	r3, [r7, #12]
 800aaf8:	697a      	ldr	r2, [r7, #20]
 800aafa:	619a      	str	r2, [r3, #24]
 800aafc:	68fb      	ldr	r3, [r7, #12]
 800aafe:	693a      	ldr	r2, [r7, #16]
 800ab00:	621a      	str	r2, [r3, #32]
 800ab02:	bf00      	nop
 800ab04:	371c      	adds	r7, #28
 800ab06:	46bd      	mov	sp, r7
 800ab08:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab0c:	4770      	bx	lr
 800ab0e:	bf00      	nop
 800ab10:	40010000 	.word	0x40010000
 800ab14:	40000400 	.word	0x40000400
 800ab18:	40000800 	.word	0x40000800
 800ab1c:	40000c00 	.word	0x40000c00
 800ab20:	40010400 	.word	0x40010400
 800ab24:	40014000 	.word	0x40014000
 800ab28:	40001800 	.word	0x40001800

0800ab2c <TIM_TI1_ConfigInputStage>:
 800ab2c:	b480      	push	{r7}
 800ab2e:	b087      	sub	sp, #28
 800ab30:	af00      	add	r7, sp, #0
 800ab32:	60f8      	str	r0, [r7, #12]
 800ab34:	60b9      	str	r1, [r7, #8]
 800ab36:	607a      	str	r2, [r7, #4]
 800ab38:	68fb      	ldr	r3, [r7, #12]
 800ab3a:	6a1b      	ldr	r3, [r3, #32]
 800ab3c:	617b      	str	r3, [r7, #20]
 800ab3e:	68fb      	ldr	r3, [r7, #12]
 800ab40:	6a1b      	ldr	r3, [r3, #32]
 800ab42:	f023 0201 	bic.w	r2, r3, #1
 800ab46:	68fb      	ldr	r3, [r7, #12]
 800ab48:	621a      	str	r2, [r3, #32]
 800ab4a:	68fb      	ldr	r3, [r7, #12]
 800ab4c:	699b      	ldr	r3, [r3, #24]
 800ab4e:	613b      	str	r3, [r7, #16]
 800ab50:	693b      	ldr	r3, [r7, #16]
 800ab52:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800ab56:	613b      	str	r3, [r7, #16]
 800ab58:	687b      	ldr	r3, [r7, #4]
 800ab5a:	011b      	lsls	r3, r3, #4
 800ab5c:	693a      	ldr	r2, [r7, #16]
 800ab5e:	4313      	orrs	r3, r2
 800ab60:	613b      	str	r3, [r7, #16]
 800ab62:	697b      	ldr	r3, [r7, #20]
 800ab64:	f023 030a 	bic.w	r3, r3, #10
 800ab68:	617b      	str	r3, [r7, #20]
 800ab6a:	697a      	ldr	r2, [r7, #20]
 800ab6c:	68bb      	ldr	r3, [r7, #8]
 800ab6e:	4313      	orrs	r3, r2
 800ab70:	617b      	str	r3, [r7, #20]
 800ab72:	68fb      	ldr	r3, [r7, #12]
 800ab74:	693a      	ldr	r2, [r7, #16]
 800ab76:	619a      	str	r2, [r3, #24]
 800ab78:	68fb      	ldr	r3, [r7, #12]
 800ab7a:	697a      	ldr	r2, [r7, #20]
 800ab7c:	621a      	str	r2, [r3, #32]
 800ab7e:	bf00      	nop
 800ab80:	371c      	adds	r7, #28
 800ab82:	46bd      	mov	sp, r7
 800ab84:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab88:	4770      	bx	lr

0800ab8a <TIM_TI2_SetConfig>:
 800ab8a:	b480      	push	{r7}
 800ab8c:	b087      	sub	sp, #28
 800ab8e:	af00      	add	r7, sp, #0
 800ab90:	60f8      	str	r0, [r7, #12]
 800ab92:	60b9      	str	r1, [r7, #8]
 800ab94:	607a      	str	r2, [r7, #4]
 800ab96:	603b      	str	r3, [r7, #0]
 800ab98:	68fb      	ldr	r3, [r7, #12]
 800ab9a:	6a1b      	ldr	r3, [r3, #32]
 800ab9c:	f023 0210 	bic.w	r2, r3, #16
 800aba0:	68fb      	ldr	r3, [r7, #12]
 800aba2:	621a      	str	r2, [r3, #32]
 800aba4:	68fb      	ldr	r3, [r7, #12]
 800aba6:	699b      	ldr	r3, [r3, #24]
 800aba8:	617b      	str	r3, [r7, #20]
 800abaa:	68fb      	ldr	r3, [r7, #12]
 800abac:	6a1b      	ldr	r3, [r3, #32]
 800abae:	613b      	str	r3, [r7, #16]
 800abb0:	697b      	ldr	r3, [r7, #20]
 800abb2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800abb6:	617b      	str	r3, [r7, #20]
 800abb8:	687b      	ldr	r3, [r7, #4]
 800abba:	021b      	lsls	r3, r3, #8
 800abbc:	697a      	ldr	r2, [r7, #20]
 800abbe:	4313      	orrs	r3, r2
 800abc0:	617b      	str	r3, [r7, #20]
 800abc2:	697b      	ldr	r3, [r7, #20]
 800abc4:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800abc8:	617b      	str	r3, [r7, #20]
 800abca:	683b      	ldr	r3, [r7, #0]
 800abcc:	031b      	lsls	r3, r3, #12
 800abce:	b29b      	uxth	r3, r3
 800abd0:	697a      	ldr	r2, [r7, #20]
 800abd2:	4313      	orrs	r3, r2
 800abd4:	617b      	str	r3, [r7, #20]
 800abd6:	693b      	ldr	r3, [r7, #16]
 800abd8:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800abdc:	613b      	str	r3, [r7, #16]
 800abde:	68bb      	ldr	r3, [r7, #8]
 800abe0:	011b      	lsls	r3, r3, #4
 800abe2:	f003 03a0 	and.w	r3, r3, #160	; 0xa0
 800abe6:	693a      	ldr	r2, [r7, #16]
 800abe8:	4313      	orrs	r3, r2
 800abea:	613b      	str	r3, [r7, #16]
 800abec:	68fb      	ldr	r3, [r7, #12]
 800abee:	697a      	ldr	r2, [r7, #20]
 800abf0:	619a      	str	r2, [r3, #24]
 800abf2:	68fb      	ldr	r3, [r7, #12]
 800abf4:	693a      	ldr	r2, [r7, #16]
 800abf6:	621a      	str	r2, [r3, #32]
 800abf8:	bf00      	nop
 800abfa:	371c      	adds	r7, #28
 800abfc:	46bd      	mov	sp, r7
 800abfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac02:	4770      	bx	lr

0800ac04 <TIM_TI2_ConfigInputStage>:
 800ac04:	b480      	push	{r7}
 800ac06:	b087      	sub	sp, #28
 800ac08:	af00      	add	r7, sp, #0
 800ac0a:	60f8      	str	r0, [r7, #12]
 800ac0c:	60b9      	str	r1, [r7, #8]
 800ac0e:	607a      	str	r2, [r7, #4]
 800ac10:	68fb      	ldr	r3, [r7, #12]
 800ac12:	6a1b      	ldr	r3, [r3, #32]
 800ac14:	f023 0210 	bic.w	r2, r3, #16
 800ac18:	68fb      	ldr	r3, [r7, #12]
 800ac1a:	621a      	str	r2, [r3, #32]
 800ac1c:	68fb      	ldr	r3, [r7, #12]
 800ac1e:	699b      	ldr	r3, [r3, #24]
 800ac20:	617b      	str	r3, [r7, #20]
 800ac22:	68fb      	ldr	r3, [r7, #12]
 800ac24:	6a1b      	ldr	r3, [r3, #32]
 800ac26:	613b      	str	r3, [r7, #16]
 800ac28:	697b      	ldr	r3, [r7, #20]
 800ac2a:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800ac2e:	617b      	str	r3, [r7, #20]
 800ac30:	687b      	ldr	r3, [r7, #4]
 800ac32:	031b      	lsls	r3, r3, #12
 800ac34:	697a      	ldr	r2, [r7, #20]
 800ac36:	4313      	orrs	r3, r2
 800ac38:	617b      	str	r3, [r7, #20]
 800ac3a:	693b      	ldr	r3, [r7, #16]
 800ac3c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800ac40:	613b      	str	r3, [r7, #16]
 800ac42:	68bb      	ldr	r3, [r7, #8]
 800ac44:	011b      	lsls	r3, r3, #4
 800ac46:	693a      	ldr	r2, [r7, #16]
 800ac48:	4313      	orrs	r3, r2
 800ac4a:	613b      	str	r3, [r7, #16]
 800ac4c:	68fb      	ldr	r3, [r7, #12]
 800ac4e:	697a      	ldr	r2, [r7, #20]
 800ac50:	619a      	str	r2, [r3, #24]
 800ac52:	68fb      	ldr	r3, [r7, #12]
 800ac54:	693a      	ldr	r2, [r7, #16]
 800ac56:	621a      	str	r2, [r3, #32]
 800ac58:	bf00      	nop
 800ac5a:	371c      	adds	r7, #28
 800ac5c:	46bd      	mov	sp, r7
 800ac5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac62:	4770      	bx	lr

0800ac64 <TIM_TI3_SetConfig>:
 800ac64:	b480      	push	{r7}
 800ac66:	b087      	sub	sp, #28
 800ac68:	af00      	add	r7, sp, #0
 800ac6a:	60f8      	str	r0, [r7, #12]
 800ac6c:	60b9      	str	r1, [r7, #8]
 800ac6e:	607a      	str	r2, [r7, #4]
 800ac70:	603b      	str	r3, [r7, #0]
 800ac72:	68fb      	ldr	r3, [r7, #12]
 800ac74:	6a1b      	ldr	r3, [r3, #32]
 800ac76:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800ac7a:	68fb      	ldr	r3, [r7, #12]
 800ac7c:	621a      	str	r2, [r3, #32]
 800ac7e:	68fb      	ldr	r3, [r7, #12]
 800ac80:	69db      	ldr	r3, [r3, #28]
 800ac82:	617b      	str	r3, [r7, #20]
 800ac84:	68fb      	ldr	r3, [r7, #12]
 800ac86:	6a1b      	ldr	r3, [r3, #32]
 800ac88:	613b      	str	r3, [r7, #16]
 800ac8a:	697b      	ldr	r3, [r7, #20]
 800ac8c:	f023 0303 	bic.w	r3, r3, #3
 800ac90:	617b      	str	r3, [r7, #20]
 800ac92:	697a      	ldr	r2, [r7, #20]
 800ac94:	687b      	ldr	r3, [r7, #4]
 800ac96:	4313      	orrs	r3, r2
 800ac98:	617b      	str	r3, [r7, #20]
 800ac9a:	697b      	ldr	r3, [r7, #20]
 800ac9c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800aca0:	617b      	str	r3, [r7, #20]
 800aca2:	683b      	ldr	r3, [r7, #0]
 800aca4:	011b      	lsls	r3, r3, #4
 800aca6:	b2db      	uxtb	r3, r3
 800aca8:	697a      	ldr	r2, [r7, #20]
 800acaa:	4313      	orrs	r3, r2
 800acac:	617b      	str	r3, [r7, #20]
 800acae:	693b      	ldr	r3, [r7, #16]
 800acb0:	f423 6320 	bic.w	r3, r3, #2560	; 0xa00
 800acb4:	613b      	str	r3, [r7, #16]
 800acb6:	68bb      	ldr	r3, [r7, #8]
 800acb8:	021b      	lsls	r3, r3, #8
 800acba:	f403 6320 	and.w	r3, r3, #2560	; 0xa00
 800acbe:	693a      	ldr	r2, [r7, #16]
 800acc0:	4313      	orrs	r3, r2
 800acc2:	613b      	str	r3, [r7, #16]
 800acc4:	68fb      	ldr	r3, [r7, #12]
 800acc6:	697a      	ldr	r2, [r7, #20]
 800acc8:	61da      	str	r2, [r3, #28]
 800acca:	68fb      	ldr	r3, [r7, #12]
 800accc:	693a      	ldr	r2, [r7, #16]
 800acce:	621a      	str	r2, [r3, #32]
 800acd0:	bf00      	nop
 800acd2:	371c      	adds	r7, #28
 800acd4:	46bd      	mov	sp, r7
 800acd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acda:	4770      	bx	lr

0800acdc <TIM_TI4_SetConfig>:
 800acdc:	b480      	push	{r7}
 800acde:	b087      	sub	sp, #28
 800ace0:	af00      	add	r7, sp, #0
 800ace2:	60f8      	str	r0, [r7, #12]
 800ace4:	60b9      	str	r1, [r7, #8]
 800ace6:	607a      	str	r2, [r7, #4]
 800ace8:	603b      	str	r3, [r7, #0]
 800acea:	68fb      	ldr	r3, [r7, #12]
 800acec:	6a1b      	ldr	r3, [r3, #32]
 800acee:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800acf2:	68fb      	ldr	r3, [r7, #12]
 800acf4:	621a      	str	r2, [r3, #32]
 800acf6:	68fb      	ldr	r3, [r7, #12]
 800acf8:	69db      	ldr	r3, [r3, #28]
 800acfa:	617b      	str	r3, [r7, #20]
 800acfc:	68fb      	ldr	r3, [r7, #12]
 800acfe:	6a1b      	ldr	r3, [r3, #32]
 800ad00:	613b      	str	r3, [r7, #16]
 800ad02:	697b      	ldr	r3, [r7, #20]
 800ad04:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800ad08:	617b      	str	r3, [r7, #20]
 800ad0a:	687b      	ldr	r3, [r7, #4]
 800ad0c:	021b      	lsls	r3, r3, #8
 800ad0e:	697a      	ldr	r2, [r7, #20]
 800ad10:	4313      	orrs	r3, r2
 800ad12:	617b      	str	r3, [r7, #20]
 800ad14:	697b      	ldr	r3, [r7, #20]
 800ad16:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800ad1a:	617b      	str	r3, [r7, #20]
 800ad1c:	683b      	ldr	r3, [r7, #0]
 800ad1e:	031b      	lsls	r3, r3, #12
 800ad20:	b29b      	uxth	r3, r3
 800ad22:	697a      	ldr	r2, [r7, #20]
 800ad24:	4313      	orrs	r3, r2
 800ad26:	617b      	str	r3, [r7, #20]
 800ad28:	693b      	ldr	r3, [r7, #16]
 800ad2a:	f423 4320 	bic.w	r3, r3, #40960	; 0xa000
 800ad2e:	613b      	str	r3, [r7, #16]
 800ad30:	68bb      	ldr	r3, [r7, #8]
 800ad32:	031b      	lsls	r3, r3, #12
 800ad34:	f403 4320 	and.w	r3, r3, #40960	; 0xa000
 800ad38:	693a      	ldr	r2, [r7, #16]
 800ad3a:	4313      	orrs	r3, r2
 800ad3c:	613b      	str	r3, [r7, #16]
 800ad3e:	68fb      	ldr	r3, [r7, #12]
 800ad40:	697a      	ldr	r2, [r7, #20]
 800ad42:	61da      	str	r2, [r3, #28]
 800ad44:	68fb      	ldr	r3, [r7, #12]
 800ad46:	693a      	ldr	r2, [r7, #16]
 800ad48:	621a      	str	r2, [r3, #32]
 800ad4a:	bf00      	nop
 800ad4c:	371c      	adds	r7, #28
 800ad4e:	46bd      	mov	sp, r7
 800ad50:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad54:	4770      	bx	lr

0800ad56 <TIM_ITRx_SetConfig>:
 800ad56:	b480      	push	{r7}
 800ad58:	b085      	sub	sp, #20
 800ad5a:	af00      	add	r7, sp, #0
 800ad5c:	6078      	str	r0, [r7, #4]
 800ad5e:	6039      	str	r1, [r7, #0]
 800ad60:	687b      	ldr	r3, [r7, #4]
 800ad62:	689b      	ldr	r3, [r3, #8]
 800ad64:	60fb      	str	r3, [r7, #12]
 800ad66:	68fb      	ldr	r3, [r7, #12]
 800ad68:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800ad6c:	60fb      	str	r3, [r7, #12]
 800ad6e:	683a      	ldr	r2, [r7, #0]
 800ad70:	68fb      	ldr	r3, [r7, #12]
 800ad72:	4313      	orrs	r3, r2
 800ad74:	f043 0307 	orr.w	r3, r3, #7
 800ad78:	60fb      	str	r3, [r7, #12]
 800ad7a:	687b      	ldr	r3, [r7, #4]
 800ad7c:	68fa      	ldr	r2, [r7, #12]
 800ad7e:	609a      	str	r2, [r3, #8]
 800ad80:	bf00      	nop
 800ad82:	3714      	adds	r7, #20
 800ad84:	46bd      	mov	sp, r7
 800ad86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad8a:	4770      	bx	lr

0800ad8c <TIM_ETR_SetConfig>:
 800ad8c:	b480      	push	{r7}
 800ad8e:	b087      	sub	sp, #28
 800ad90:	af00      	add	r7, sp, #0
 800ad92:	60f8      	str	r0, [r7, #12]
 800ad94:	60b9      	str	r1, [r7, #8]
 800ad96:	607a      	str	r2, [r7, #4]
 800ad98:	603b      	str	r3, [r7, #0]
 800ad9a:	68fb      	ldr	r3, [r7, #12]
 800ad9c:	689b      	ldr	r3, [r3, #8]
 800ad9e:	617b      	str	r3, [r7, #20]
 800ada0:	697b      	ldr	r3, [r7, #20]
 800ada2:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800ada6:	617b      	str	r3, [r7, #20]
 800ada8:	683b      	ldr	r3, [r7, #0]
 800adaa:	021a      	lsls	r2, r3, #8
 800adac:	687b      	ldr	r3, [r7, #4]
 800adae:	431a      	orrs	r2, r3
 800adb0:	68bb      	ldr	r3, [r7, #8]
 800adb2:	4313      	orrs	r3, r2
 800adb4:	697a      	ldr	r2, [r7, #20]
 800adb6:	4313      	orrs	r3, r2
 800adb8:	617b      	str	r3, [r7, #20]
 800adba:	68fb      	ldr	r3, [r7, #12]
 800adbc:	697a      	ldr	r2, [r7, #20]
 800adbe:	609a      	str	r2, [r3, #8]
 800adc0:	bf00      	nop
 800adc2:	371c      	adds	r7, #28
 800adc4:	46bd      	mov	sp, r7
 800adc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adca:	4770      	bx	lr

0800adcc <TIM_CCxChannelCmd>:
 800adcc:	b480      	push	{r7}
 800adce:	b087      	sub	sp, #28
 800add0:	af00      	add	r7, sp, #0
 800add2:	60f8      	str	r0, [r7, #12]
 800add4:	60b9      	str	r1, [r7, #8]
 800add6:	607a      	str	r2, [r7, #4]
 800add8:	68bb      	ldr	r3, [r7, #8]
 800adda:	f003 031f 	and.w	r3, r3, #31
 800adde:	2201      	movs	r2, #1
 800ade0:	fa02 f303 	lsl.w	r3, r2, r3
 800ade4:	617b      	str	r3, [r7, #20]
 800ade6:	68fb      	ldr	r3, [r7, #12]
 800ade8:	6a1a      	ldr	r2, [r3, #32]
 800adea:	697b      	ldr	r3, [r7, #20]
 800adec:	43db      	mvns	r3, r3
 800adee:	401a      	ands	r2, r3
 800adf0:	68fb      	ldr	r3, [r7, #12]
 800adf2:	621a      	str	r2, [r3, #32]
 800adf4:	68fb      	ldr	r3, [r7, #12]
 800adf6:	6a1a      	ldr	r2, [r3, #32]
 800adf8:	68bb      	ldr	r3, [r7, #8]
 800adfa:	f003 031f 	and.w	r3, r3, #31
 800adfe:	6879      	ldr	r1, [r7, #4]
 800ae00:	fa01 f303 	lsl.w	r3, r1, r3
 800ae04:	431a      	orrs	r2, r3
 800ae06:	68fb      	ldr	r3, [r7, #12]
 800ae08:	621a      	str	r2, [r3, #32]
 800ae0a:	bf00      	nop
 800ae0c:	371c      	adds	r7, #28
 800ae0e:	46bd      	mov	sp, r7
 800ae10:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae14:	4770      	bx	lr
	...

0800ae18 <HAL_TIMEx_MasterConfigSynchronization>:
 800ae18:	b480      	push	{r7}
 800ae1a:	b085      	sub	sp, #20
 800ae1c:	af00      	add	r7, sp, #0
 800ae1e:	6078      	str	r0, [r7, #4]
 800ae20:	6039      	str	r1, [r7, #0]
 800ae22:	687b      	ldr	r3, [r7, #4]
 800ae24:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800ae28:	2b01      	cmp	r3, #1
 800ae2a:	d101      	bne.n	800ae30 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800ae2c:	2302      	movs	r3, #2
 800ae2e:	e05a      	b.n	800aee6 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 800ae30:	687b      	ldr	r3, [r7, #4]
 800ae32:	2201      	movs	r2, #1
 800ae34:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ae38:	687b      	ldr	r3, [r7, #4]
 800ae3a:	2202      	movs	r2, #2
 800ae3c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800ae40:	687b      	ldr	r3, [r7, #4]
 800ae42:	681b      	ldr	r3, [r3, #0]
 800ae44:	685b      	ldr	r3, [r3, #4]
 800ae46:	60fb      	str	r3, [r7, #12]
 800ae48:	687b      	ldr	r3, [r7, #4]
 800ae4a:	681b      	ldr	r3, [r3, #0]
 800ae4c:	689b      	ldr	r3, [r3, #8]
 800ae4e:	60bb      	str	r3, [r7, #8]
 800ae50:	68fb      	ldr	r3, [r7, #12]
 800ae52:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800ae56:	60fb      	str	r3, [r7, #12]
 800ae58:	683b      	ldr	r3, [r7, #0]
 800ae5a:	681b      	ldr	r3, [r3, #0]
 800ae5c:	68fa      	ldr	r2, [r7, #12]
 800ae5e:	4313      	orrs	r3, r2
 800ae60:	60fb      	str	r3, [r7, #12]
 800ae62:	687b      	ldr	r3, [r7, #4]
 800ae64:	681b      	ldr	r3, [r3, #0]
 800ae66:	68fa      	ldr	r2, [r7, #12]
 800ae68:	605a      	str	r2, [r3, #4]
 800ae6a:	687b      	ldr	r3, [r7, #4]
 800ae6c:	681b      	ldr	r3, [r3, #0]
 800ae6e:	4a21      	ldr	r2, [pc, #132]	; (800aef4 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 800ae70:	4293      	cmp	r3, r2
 800ae72:	d022      	beq.n	800aeba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800ae74:	687b      	ldr	r3, [r7, #4]
 800ae76:	681b      	ldr	r3, [r3, #0]
 800ae78:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ae7c:	d01d      	beq.n	800aeba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800ae7e:	687b      	ldr	r3, [r7, #4]
 800ae80:	681b      	ldr	r3, [r3, #0]
 800ae82:	4a1d      	ldr	r2, [pc, #116]	; (800aef8 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 800ae84:	4293      	cmp	r3, r2
 800ae86:	d018      	beq.n	800aeba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800ae88:	687b      	ldr	r3, [r7, #4]
 800ae8a:	681b      	ldr	r3, [r3, #0]
 800ae8c:	4a1b      	ldr	r2, [pc, #108]	; (800aefc <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800ae8e:	4293      	cmp	r3, r2
 800ae90:	d013      	beq.n	800aeba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800ae92:	687b      	ldr	r3, [r7, #4]
 800ae94:	681b      	ldr	r3, [r3, #0]
 800ae96:	4a1a      	ldr	r2, [pc, #104]	; (800af00 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 800ae98:	4293      	cmp	r3, r2
 800ae9a:	d00e      	beq.n	800aeba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800ae9c:	687b      	ldr	r3, [r7, #4]
 800ae9e:	681b      	ldr	r3, [r3, #0]
 800aea0:	4a18      	ldr	r2, [pc, #96]	; (800af04 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 800aea2:	4293      	cmp	r3, r2
 800aea4:	d009      	beq.n	800aeba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800aea6:	687b      	ldr	r3, [r7, #4]
 800aea8:	681b      	ldr	r3, [r3, #0]
 800aeaa:	4a17      	ldr	r2, [pc, #92]	; (800af08 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 800aeac:	4293      	cmp	r3, r2
 800aeae:	d004      	beq.n	800aeba <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800aeb0:	687b      	ldr	r3, [r7, #4]
 800aeb2:	681b      	ldr	r3, [r3, #0]
 800aeb4:	4a15      	ldr	r2, [pc, #84]	; (800af0c <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800aeb6:	4293      	cmp	r3, r2
 800aeb8:	d10c      	bne.n	800aed4 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 800aeba:	68bb      	ldr	r3, [r7, #8]
 800aebc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800aec0:	60bb      	str	r3, [r7, #8]
 800aec2:	683b      	ldr	r3, [r7, #0]
 800aec4:	685b      	ldr	r3, [r3, #4]
 800aec6:	68ba      	ldr	r2, [r7, #8]
 800aec8:	4313      	orrs	r3, r2
 800aeca:	60bb      	str	r3, [r7, #8]
 800aecc:	687b      	ldr	r3, [r7, #4]
 800aece:	681b      	ldr	r3, [r3, #0]
 800aed0:	68ba      	ldr	r2, [r7, #8]
 800aed2:	609a      	str	r2, [r3, #8]
 800aed4:	687b      	ldr	r3, [r7, #4]
 800aed6:	2201      	movs	r2, #1
 800aed8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800aedc:	687b      	ldr	r3, [r7, #4]
 800aede:	2200      	movs	r2, #0
 800aee0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800aee4:	2300      	movs	r3, #0
 800aee6:	4618      	mov	r0, r3
 800aee8:	3714      	adds	r7, #20
 800aeea:	46bd      	mov	sp, r7
 800aeec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aef0:	4770      	bx	lr
 800aef2:	bf00      	nop
 800aef4:	40010000 	.word	0x40010000
 800aef8:	40000400 	.word	0x40000400
 800aefc:	40000800 	.word	0x40000800
 800af00:	40000c00 	.word	0x40000c00
 800af04:	40010400 	.word	0x40010400
 800af08:	40014000 	.word	0x40014000
 800af0c:	40001800 	.word	0x40001800

0800af10 <HAL_TIMEx_ConfigBreakDeadTime>:
 800af10:	b480      	push	{r7}
 800af12:	b085      	sub	sp, #20
 800af14:	af00      	add	r7, sp, #0
 800af16:	6078      	str	r0, [r7, #4]
 800af18:	6039      	str	r1, [r7, #0]
 800af1a:	2300      	movs	r3, #0
 800af1c:	60fb      	str	r3, [r7, #12]
 800af1e:	687b      	ldr	r3, [r7, #4]
 800af20:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800af24:	2b01      	cmp	r3, #1
 800af26:	d101      	bne.n	800af2c <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 800af28:	2302      	movs	r3, #2
 800af2a:	e03d      	b.n	800afa8 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 800af2c:	687b      	ldr	r3, [r7, #4]
 800af2e:	2201      	movs	r2, #1
 800af30:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800af34:	68fb      	ldr	r3, [r7, #12]
 800af36:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 800af3a:	683b      	ldr	r3, [r7, #0]
 800af3c:	68db      	ldr	r3, [r3, #12]
 800af3e:	4313      	orrs	r3, r2
 800af40:	60fb      	str	r3, [r7, #12]
 800af42:	68fb      	ldr	r3, [r7, #12]
 800af44:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800af48:	683b      	ldr	r3, [r7, #0]
 800af4a:	689b      	ldr	r3, [r3, #8]
 800af4c:	4313      	orrs	r3, r2
 800af4e:	60fb      	str	r3, [r7, #12]
 800af50:	68fb      	ldr	r3, [r7, #12]
 800af52:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 800af56:	683b      	ldr	r3, [r7, #0]
 800af58:	685b      	ldr	r3, [r3, #4]
 800af5a:	4313      	orrs	r3, r2
 800af5c:	60fb      	str	r3, [r7, #12]
 800af5e:	68fb      	ldr	r3, [r7, #12]
 800af60:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 800af64:	683b      	ldr	r3, [r7, #0]
 800af66:	681b      	ldr	r3, [r3, #0]
 800af68:	4313      	orrs	r3, r2
 800af6a:	60fb      	str	r3, [r7, #12]
 800af6c:	68fb      	ldr	r3, [r7, #12]
 800af6e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800af72:	683b      	ldr	r3, [r7, #0]
 800af74:	691b      	ldr	r3, [r3, #16]
 800af76:	4313      	orrs	r3, r2
 800af78:	60fb      	str	r3, [r7, #12]
 800af7a:	68fb      	ldr	r3, [r7, #12]
 800af7c:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 800af80:	683b      	ldr	r3, [r7, #0]
 800af82:	695b      	ldr	r3, [r3, #20]
 800af84:	4313      	orrs	r3, r2
 800af86:	60fb      	str	r3, [r7, #12]
 800af88:	68fb      	ldr	r3, [r7, #12]
 800af8a:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 800af8e:	683b      	ldr	r3, [r7, #0]
 800af90:	69db      	ldr	r3, [r3, #28]
 800af92:	4313      	orrs	r3, r2
 800af94:	60fb      	str	r3, [r7, #12]
 800af96:	687b      	ldr	r3, [r7, #4]
 800af98:	681b      	ldr	r3, [r3, #0]
 800af9a:	68fa      	ldr	r2, [r7, #12]
 800af9c:	645a      	str	r2, [r3, #68]	; 0x44
 800af9e:	687b      	ldr	r3, [r7, #4]
 800afa0:	2200      	movs	r2, #0
 800afa2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800afa6:	2300      	movs	r3, #0
 800afa8:	4618      	mov	r0, r3
 800afaa:	3714      	adds	r7, #20
 800afac:	46bd      	mov	sp, r7
 800afae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afb2:	4770      	bx	lr

0800afb4 <HAL_TIMEx_CommutCallback>:
 800afb4:	b480      	push	{r7}
 800afb6:	b083      	sub	sp, #12
 800afb8:	af00      	add	r7, sp, #0
 800afba:	6078      	str	r0, [r7, #4]
 800afbc:	bf00      	nop
 800afbe:	370c      	adds	r7, #12
 800afc0:	46bd      	mov	sp, r7
 800afc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afc6:	4770      	bx	lr

0800afc8 <HAL_TIMEx_BreakCallback>:
 800afc8:	b480      	push	{r7}
 800afca:	b083      	sub	sp, #12
 800afcc:	af00      	add	r7, sp, #0
 800afce:	6078      	str	r0, [r7, #4]
 800afd0:	bf00      	nop
 800afd2:	370c      	adds	r7, #12
 800afd4:	46bd      	mov	sp, r7
 800afd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afda:	4770      	bx	lr

0800afdc <HAL_UART_Init>:
 800afdc:	b580      	push	{r7, lr}
 800afde:	b082      	sub	sp, #8
 800afe0:	af00      	add	r7, sp, #0
 800afe2:	6078      	str	r0, [r7, #4]
 800afe4:	687b      	ldr	r3, [r7, #4]
 800afe6:	2b00      	cmp	r3, #0
 800afe8:	d101      	bne.n	800afee <HAL_UART_Init+0x12>
 800afea:	2301      	movs	r3, #1
 800afec:	e03f      	b.n	800b06e <HAL_UART_Init+0x92>
 800afee:	687b      	ldr	r3, [r7, #4]
 800aff0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800aff4:	b2db      	uxtb	r3, r3
 800aff6:	2b00      	cmp	r3, #0
 800aff8:	d106      	bne.n	800b008 <HAL_UART_Init+0x2c>
 800affa:	687b      	ldr	r3, [r7, #4]
 800affc:	2200      	movs	r2, #0
 800affe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b002:	6878      	ldr	r0, [r7, #4]
 800b004:	f7fb f95c 	bl	80062c0 <HAL_UART_MspInit>
 800b008:	687b      	ldr	r3, [r7, #4]
 800b00a:	2224      	movs	r2, #36	; 0x24
 800b00c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b010:	687b      	ldr	r3, [r7, #4]
 800b012:	681b      	ldr	r3, [r3, #0]
 800b014:	68da      	ldr	r2, [r3, #12]
 800b016:	687b      	ldr	r3, [r7, #4]
 800b018:	681b      	ldr	r3, [r3, #0]
 800b01a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800b01e:	60da      	str	r2, [r3, #12]
 800b020:	6878      	ldr	r0, [r7, #4]
 800b022:	f000 fe81 	bl	800bd28 <UART_SetConfig>
 800b026:	687b      	ldr	r3, [r7, #4]
 800b028:	681b      	ldr	r3, [r3, #0]
 800b02a:	691a      	ldr	r2, [r3, #16]
 800b02c:	687b      	ldr	r3, [r7, #4]
 800b02e:	681b      	ldr	r3, [r3, #0]
 800b030:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800b034:	611a      	str	r2, [r3, #16]
 800b036:	687b      	ldr	r3, [r7, #4]
 800b038:	681b      	ldr	r3, [r3, #0]
 800b03a:	695a      	ldr	r2, [r3, #20]
 800b03c:	687b      	ldr	r3, [r7, #4]
 800b03e:	681b      	ldr	r3, [r3, #0]
 800b040:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800b044:	615a      	str	r2, [r3, #20]
 800b046:	687b      	ldr	r3, [r7, #4]
 800b048:	681b      	ldr	r3, [r3, #0]
 800b04a:	68da      	ldr	r2, [r3, #12]
 800b04c:	687b      	ldr	r3, [r7, #4]
 800b04e:	681b      	ldr	r3, [r3, #0]
 800b050:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800b054:	60da      	str	r2, [r3, #12]
 800b056:	687b      	ldr	r3, [r7, #4]
 800b058:	2200      	movs	r2, #0
 800b05a:	641a      	str	r2, [r3, #64]	; 0x40
 800b05c:	687b      	ldr	r3, [r7, #4]
 800b05e:	2220      	movs	r2, #32
 800b060:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b064:	687b      	ldr	r3, [r7, #4]
 800b066:	2220      	movs	r2, #32
 800b068:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b06c:	2300      	movs	r3, #0
 800b06e:	4618      	mov	r0, r3
 800b070:	3708      	adds	r7, #8
 800b072:	46bd      	mov	sp, r7
 800b074:	bd80      	pop	{r7, pc}

0800b076 <HAL_UART_Transmit>:
 800b076:	b580      	push	{r7, lr}
 800b078:	b08a      	sub	sp, #40	; 0x28
 800b07a:	af02      	add	r7, sp, #8
 800b07c:	60f8      	str	r0, [r7, #12]
 800b07e:	60b9      	str	r1, [r7, #8]
 800b080:	603b      	str	r3, [r7, #0]
 800b082:	4613      	mov	r3, r2
 800b084:	80fb      	strh	r3, [r7, #6]
 800b086:	2300      	movs	r3, #0
 800b088:	617b      	str	r3, [r7, #20]
 800b08a:	68fb      	ldr	r3, [r7, #12]
 800b08c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800b090:	b2db      	uxtb	r3, r3
 800b092:	2b20      	cmp	r3, #32
 800b094:	d17c      	bne.n	800b190 <HAL_UART_Transmit+0x11a>
 800b096:	68bb      	ldr	r3, [r7, #8]
 800b098:	2b00      	cmp	r3, #0
 800b09a:	d002      	beq.n	800b0a2 <HAL_UART_Transmit+0x2c>
 800b09c:	88fb      	ldrh	r3, [r7, #6]
 800b09e:	2b00      	cmp	r3, #0
 800b0a0:	d101      	bne.n	800b0a6 <HAL_UART_Transmit+0x30>
 800b0a2:	2301      	movs	r3, #1
 800b0a4:	e075      	b.n	800b192 <HAL_UART_Transmit+0x11c>
 800b0a6:	68fb      	ldr	r3, [r7, #12]
 800b0a8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b0ac:	2b01      	cmp	r3, #1
 800b0ae:	d101      	bne.n	800b0b4 <HAL_UART_Transmit+0x3e>
 800b0b0:	2302      	movs	r3, #2
 800b0b2:	e06e      	b.n	800b192 <HAL_UART_Transmit+0x11c>
 800b0b4:	68fb      	ldr	r3, [r7, #12]
 800b0b6:	2201      	movs	r2, #1
 800b0b8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b0bc:	68fb      	ldr	r3, [r7, #12]
 800b0be:	2200      	movs	r2, #0
 800b0c0:	641a      	str	r2, [r3, #64]	; 0x40
 800b0c2:	68fb      	ldr	r3, [r7, #12]
 800b0c4:	2221      	movs	r2, #33	; 0x21
 800b0c6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b0ca:	f7fb fbdb 	bl	8006884 <HAL_GetTick>
 800b0ce:	6178      	str	r0, [r7, #20]
 800b0d0:	68fb      	ldr	r3, [r7, #12]
 800b0d2:	88fa      	ldrh	r2, [r7, #6]
 800b0d4:	849a      	strh	r2, [r3, #36]	; 0x24
 800b0d6:	68fb      	ldr	r3, [r7, #12]
 800b0d8:	88fa      	ldrh	r2, [r7, #6]
 800b0da:	84da      	strh	r2, [r3, #38]	; 0x26
 800b0dc:	68fb      	ldr	r3, [r7, #12]
 800b0de:	689b      	ldr	r3, [r3, #8]
 800b0e0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b0e4:	d108      	bne.n	800b0f8 <HAL_UART_Transmit+0x82>
 800b0e6:	68fb      	ldr	r3, [r7, #12]
 800b0e8:	691b      	ldr	r3, [r3, #16]
 800b0ea:	2b00      	cmp	r3, #0
 800b0ec:	d104      	bne.n	800b0f8 <HAL_UART_Transmit+0x82>
 800b0ee:	2300      	movs	r3, #0
 800b0f0:	61fb      	str	r3, [r7, #28]
 800b0f2:	68bb      	ldr	r3, [r7, #8]
 800b0f4:	61bb      	str	r3, [r7, #24]
 800b0f6:	e003      	b.n	800b100 <HAL_UART_Transmit+0x8a>
 800b0f8:	68bb      	ldr	r3, [r7, #8]
 800b0fa:	61fb      	str	r3, [r7, #28]
 800b0fc:	2300      	movs	r3, #0
 800b0fe:	61bb      	str	r3, [r7, #24]
 800b100:	68fb      	ldr	r3, [r7, #12]
 800b102:	2200      	movs	r2, #0
 800b104:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b108:	e02a      	b.n	800b160 <HAL_UART_Transmit+0xea>
 800b10a:	683b      	ldr	r3, [r7, #0]
 800b10c:	9300      	str	r3, [sp, #0]
 800b10e:	697b      	ldr	r3, [r7, #20]
 800b110:	2200      	movs	r2, #0
 800b112:	2180      	movs	r1, #128	; 0x80
 800b114:	68f8      	ldr	r0, [r7, #12]
 800b116:	f000 fbc1 	bl	800b89c <UART_WaitOnFlagUntilTimeout>
 800b11a:	4603      	mov	r3, r0
 800b11c:	2b00      	cmp	r3, #0
 800b11e:	d001      	beq.n	800b124 <HAL_UART_Transmit+0xae>
 800b120:	2303      	movs	r3, #3
 800b122:	e036      	b.n	800b192 <HAL_UART_Transmit+0x11c>
 800b124:	69fb      	ldr	r3, [r7, #28]
 800b126:	2b00      	cmp	r3, #0
 800b128:	d10b      	bne.n	800b142 <HAL_UART_Transmit+0xcc>
 800b12a:	69bb      	ldr	r3, [r7, #24]
 800b12c:	881b      	ldrh	r3, [r3, #0]
 800b12e:	461a      	mov	r2, r3
 800b130:	68fb      	ldr	r3, [r7, #12]
 800b132:	681b      	ldr	r3, [r3, #0]
 800b134:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800b138:	605a      	str	r2, [r3, #4]
 800b13a:	69bb      	ldr	r3, [r7, #24]
 800b13c:	3302      	adds	r3, #2
 800b13e:	61bb      	str	r3, [r7, #24]
 800b140:	e007      	b.n	800b152 <HAL_UART_Transmit+0xdc>
 800b142:	69fb      	ldr	r3, [r7, #28]
 800b144:	781a      	ldrb	r2, [r3, #0]
 800b146:	68fb      	ldr	r3, [r7, #12]
 800b148:	681b      	ldr	r3, [r3, #0]
 800b14a:	605a      	str	r2, [r3, #4]
 800b14c:	69fb      	ldr	r3, [r7, #28]
 800b14e:	3301      	adds	r3, #1
 800b150:	61fb      	str	r3, [r7, #28]
 800b152:	68fb      	ldr	r3, [r7, #12]
 800b154:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800b156:	b29b      	uxth	r3, r3
 800b158:	3b01      	subs	r3, #1
 800b15a:	b29a      	uxth	r2, r3
 800b15c:	68fb      	ldr	r3, [r7, #12]
 800b15e:	84da      	strh	r2, [r3, #38]	; 0x26
 800b160:	68fb      	ldr	r3, [r7, #12]
 800b162:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800b164:	b29b      	uxth	r3, r3
 800b166:	2b00      	cmp	r3, #0
 800b168:	d1cf      	bne.n	800b10a <HAL_UART_Transmit+0x94>
 800b16a:	683b      	ldr	r3, [r7, #0]
 800b16c:	9300      	str	r3, [sp, #0]
 800b16e:	697b      	ldr	r3, [r7, #20]
 800b170:	2200      	movs	r2, #0
 800b172:	2140      	movs	r1, #64	; 0x40
 800b174:	68f8      	ldr	r0, [r7, #12]
 800b176:	f000 fb91 	bl	800b89c <UART_WaitOnFlagUntilTimeout>
 800b17a:	4603      	mov	r3, r0
 800b17c:	2b00      	cmp	r3, #0
 800b17e:	d001      	beq.n	800b184 <HAL_UART_Transmit+0x10e>
 800b180:	2303      	movs	r3, #3
 800b182:	e006      	b.n	800b192 <HAL_UART_Transmit+0x11c>
 800b184:	68fb      	ldr	r3, [r7, #12]
 800b186:	2220      	movs	r2, #32
 800b188:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b18c:	2300      	movs	r3, #0
 800b18e:	e000      	b.n	800b192 <HAL_UART_Transmit+0x11c>
 800b190:	2302      	movs	r3, #2
 800b192:	4618      	mov	r0, r3
 800b194:	3720      	adds	r7, #32
 800b196:	46bd      	mov	sp, r7
 800b198:	bd80      	pop	{r7, pc}

0800b19a <HAL_UART_Receive>:
 800b19a:	b580      	push	{r7, lr}
 800b19c:	b08a      	sub	sp, #40	; 0x28
 800b19e:	af02      	add	r7, sp, #8
 800b1a0:	60f8      	str	r0, [r7, #12]
 800b1a2:	60b9      	str	r1, [r7, #8]
 800b1a4:	603b      	str	r3, [r7, #0]
 800b1a6:	4613      	mov	r3, r2
 800b1a8:	80fb      	strh	r3, [r7, #6]
 800b1aa:	2300      	movs	r3, #0
 800b1ac:	617b      	str	r3, [r7, #20]
 800b1ae:	68fb      	ldr	r3, [r7, #12]
 800b1b0:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800b1b4:	b2db      	uxtb	r3, r3
 800b1b6:	2b20      	cmp	r3, #32
 800b1b8:	f040 808c 	bne.w	800b2d4 <HAL_UART_Receive+0x13a>
 800b1bc:	68bb      	ldr	r3, [r7, #8]
 800b1be:	2b00      	cmp	r3, #0
 800b1c0:	d002      	beq.n	800b1c8 <HAL_UART_Receive+0x2e>
 800b1c2:	88fb      	ldrh	r3, [r7, #6]
 800b1c4:	2b00      	cmp	r3, #0
 800b1c6:	d101      	bne.n	800b1cc <HAL_UART_Receive+0x32>
 800b1c8:	2301      	movs	r3, #1
 800b1ca:	e084      	b.n	800b2d6 <HAL_UART_Receive+0x13c>
 800b1cc:	68fb      	ldr	r3, [r7, #12]
 800b1ce:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b1d2:	2b01      	cmp	r3, #1
 800b1d4:	d101      	bne.n	800b1da <HAL_UART_Receive+0x40>
 800b1d6:	2302      	movs	r3, #2
 800b1d8:	e07d      	b.n	800b2d6 <HAL_UART_Receive+0x13c>
 800b1da:	68fb      	ldr	r3, [r7, #12]
 800b1dc:	2201      	movs	r2, #1
 800b1de:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b1e2:	68fb      	ldr	r3, [r7, #12]
 800b1e4:	2200      	movs	r2, #0
 800b1e6:	641a      	str	r2, [r3, #64]	; 0x40
 800b1e8:	68fb      	ldr	r3, [r7, #12]
 800b1ea:	2222      	movs	r2, #34	; 0x22
 800b1ec:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b1f0:	68fb      	ldr	r3, [r7, #12]
 800b1f2:	2200      	movs	r2, #0
 800b1f4:	631a      	str	r2, [r3, #48]	; 0x30
 800b1f6:	f7fb fb45 	bl	8006884 <HAL_GetTick>
 800b1fa:	6178      	str	r0, [r7, #20]
 800b1fc:	68fb      	ldr	r3, [r7, #12]
 800b1fe:	88fa      	ldrh	r2, [r7, #6]
 800b200:	859a      	strh	r2, [r3, #44]	; 0x2c
 800b202:	68fb      	ldr	r3, [r7, #12]
 800b204:	88fa      	ldrh	r2, [r7, #6]
 800b206:	85da      	strh	r2, [r3, #46]	; 0x2e
 800b208:	68fb      	ldr	r3, [r7, #12]
 800b20a:	689b      	ldr	r3, [r3, #8]
 800b20c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b210:	d108      	bne.n	800b224 <HAL_UART_Receive+0x8a>
 800b212:	68fb      	ldr	r3, [r7, #12]
 800b214:	691b      	ldr	r3, [r3, #16]
 800b216:	2b00      	cmp	r3, #0
 800b218:	d104      	bne.n	800b224 <HAL_UART_Receive+0x8a>
 800b21a:	2300      	movs	r3, #0
 800b21c:	61fb      	str	r3, [r7, #28]
 800b21e:	68bb      	ldr	r3, [r7, #8]
 800b220:	61bb      	str	r3, [r7, #24]
 800b222:	e003      	b.n	800b22c <HAL_UART_Receive+0x92>
 800b224:	68bb      	ldr	r3, [r7, #8]
 800b226:	61fb      	str	r3, [r7, #28]
 800b228:	2300      	movs	r3, #0
 800b22a:	61bb      	str	r3, [r7, #24]
 800b22c:	68fb      	ldr	r3, [r7, #12]
 800b22e:	2200      	movs	r2, #0
 800b230:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b234:	e043      	b.n	800b2be <HAL_UART_Receive+0x124>
 800b236:	683b      	ldr	r3, [r7, #0]
 800b238:	9300      	str	r3, [sp, #0]
 800b23a:	697b      	ldr	r3, [r7, #20]
 800b23c:	2200      	movs	r2, #0
 800b23e:	2120      	movs	r1, #32
 800b240:	68f8      	ldr	r0, [r7, #12]
 800b242:	f000 fb2b 	bl	800b89c <UART_WaitOnFlagUntilTimeout>
 800b246:	4603      	mov	r3, r0
 800b248:	2b00      	cmp	r3, #0
 800b24a:	d001      	beq.n	800b250 <HAL_UART_Receive+0xb6>
 800b24c:	2303      	movs	r3, #3
 800b24e:	e042      	b.n	800b2d6 <HAL_UART_Receive+0x13c>
 800b250:	69fb      	ldr	r3, [r7, #28]
 800b252:	2b00      	cmp	r3, #0
 800b254:	d10c      	bne.n	800b270 <HAL_UART_Receive+0xd6>
 800b256:	68fb      	ldr	r3, [r7, #12]
 800b258:	681b      	ldr	r3, [r3, #0]
 800b25a:	685b      	ldr	r3, [r3, #4]
 800b25c:	b29b      	uxth	r3, r3
 800b25e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800b262:	b29a      	uxth	r2, r3
 800b264:	69bb      	ldr	r3, [r7, #24]
 800b266:	801a      	strh	r2, [r3, #0]
 800b268:	69bb      	ldr	r3, [r7, #24]
 800b26a:	3302      	adds	r3, #2
 800b26c:	61bb      	str	r3, [r7, #24]
 800b26e:	e01f      	b.n	800b2b0 <HAL_UART_Receive+0x116>
 800b270:	68fb      	ldr	r3, [r7, #12]
 800b272:	689b      	ldr	r3, [r3, #8]
 800b274:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b278:	d007      	beq.n	800b28a <HAL_UART_Receive+0xf0>
 800b27a:	68fb      	ldr	r3, [r7, #12]
 800b27c:	689b      	ldr	r3, [r3, #8]
 800b27e:	2b00      	cmp	r3, #0
 800b280:	d10a      	bne.n	800b298 <HAL_UART_Receive+0xfe>
 800b282:	68fb      	ldr	r3, [r7, #12]
 800b284:	691b      	ldr	r3, [r3, #16]
 800b286:	2b00      	cmp	r3, #0
 800b288:	d106      	bne.n	800b298 <HAL_UART_Receive+0xfe>
 800b28a:	68fb      	ldr	r3, [r7, #12]
 800b28c:	681b      	ldr	r3, [r3, #0]
 800b28e:	685b      	ldr	r3, [r3, #4]
 800b290:	b2da      	uxtb	r2, r3
 800b292:	69fb      	ldr	r3, [r7, #28]
 800b294:	701a      	strb	r2, [r3, #0]
 800b296:	e008      	b.n	800b2aa <HAL_UART_Receive+0x110>
 800b298:	68fb      	ldr	r3, [r7, #12]
 800b29a:	681b      	ldr	r3, [r3, #0]
 800b29c:	685b      	ldr	r3, [r3, #4]
 800b29e:	b2db      	uxtb	r3, r3
 800b2a0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800b2a4:	b2da      	uxtb	r2, r3
 800b2a6:	69fb      	ldr	r3, [r7, #28]
 800b2a8:	701a      	strb	r2, [r3, #0]
 800b2aa:	69fb      	ldr	r3, [r7, #28]
 800b2ac:	3301      	adds	r3, #1
 800b2ae:	61fb      	str	r3, [r7, #28]
 800b2b0:	68fb      	ldr	r3, [r7, #12]
 800b2b2:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800b2b4:	b29b      	uxth	r3, r3
 800b2b6:	3b01      	subs	r3, #1
 800b2b8:	b29a      	uxth	r2, r3
 800b2ba:	68fb      	ldr	r3, [r7, #12]
 800b2bc:	85da      	strh	r2, [r3, #46]	; 0x2e
 800b2be:	68fb      	ldr	r3, [r7, #12]
 800b2c0:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800b2c2:	b29b      	uxth	r3, r3
 800b2c4:	2b00      	cmp	r3, #0
 800b2c6:	d1b6      	bne.n	800b236 <HAL_UART_Receive+0x9c>
 800b2c8:	68fb      	ldr	r3, [r7, #12]
 800b2ca:	2220      	movs	r2, #32
 800b2cc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b2d0:	2300      	movs	r3, #0
 800b2d2:	e000      	b.n	800b2d6 <HAL_UART_Receive+0x13c>
 800b2d4:	2302      	movs	r3, #2
 800b2d6:	4618      	mov	r0, r3
 800b2d8:	3720      	adds	r7, #32
 800b2da:	46bd      	mov	sp, r7
 800b2dc:	bd80      	pop	{r7, pc}

0800b2de <HAL_UART_Receive_IT>:
 800b2de:	b580      	push	{r7, lr}
 800b2e0:	b084      	sub	sp, #16
 800b2e2:	af00      	add	r7, sp, #0
 800b2e4:	60f8      	str	r0, [r7, #12]
 800b2e6:	60b9      	str	r1, [r7, #8]
 800b2e8:	4613      	mov	r3, r2
 800b2ea:	80fb      	strh	r3, [r7, #6]
 800b2ec:	68fb      	ldr	r3, [r7, #12]
 800b2ee:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800b2f2:	b2db      	uxtb	r3, r3
 800b2f4:	2b20      	cmp	r3, #32
 800b2f6:	d11d      	bne.n	800b334 <HAL_UART_Receive_IT+0x56>
 800b2f8:	68bb      	ldr	r3, [r7, #8]
 800b2fa:	2b00      	cmp	r3, #0
 800b2fc:	d002      	beq.n	800b304 <HAL_UART_Receive_IT+0x26>
 800b2fe:	88fb      	ldrh	r3, [r7, #6]
 800b300:	2b00      	cmp	r3, #0
 800b302:	d101      	bne.n	800b308 <HAL_UART_Receive_IT+0x2a>
 800b304:	2301      	movs	r3, #1
 800b306:	e016      	b.n	800b336 <HAL_UART_Receive_IT+0x58>
 800b308:	68fb      	ldr	r3, [r7, #12]
 800b30a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b30e:	2b01      	cmp	r3, #1
 800b310:	d101      	bne.n	800b316 <HAL_UART_Receive_IT+0x38>
 800b312:	2302      	movs	r3, #2
 800b314:	e00f      	b.n	800b336 <HAL_UART_Receive_IT+0x58>
 800b316:	68fb      	ldr	r3, [r7, #12]
 800b318:	2201      	movs	r2, #1
 800b31a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b31e:	68fb      	ldr	r3, [r7, #12]
 800b320:	2200      	movs	r2, #0
 800b322:	631a      	str	r2, [r3, #48]	; 0x30
 800b324:	88fb      	ldrh	r3, [r7, #6]
 800b326:	461a      	mov	r2, r3
 800b328:	68b9      	ldr	r1, [r7, #8]
 800b32a:	68f8      	ldr	r0, [r7, #12]
 800b32c:	f000 fb24 	bl	800b978 <UART_Start_Receive_IT>
 800b330:	4603      	mov	r3, r0
 800b332:	e000      	b.n	800b336 <HAL_UART_Receive_IT+0x58>
 800b334:	2302      	movs	r3, #2
 800b336:	4618      	mov	r0, r3
 800b338:	3710      	adds	r7, #16
 800b33a:	46bd      	mov	sp, r7
 800b33c:	bd80      	pop	{r7, pc}
	...

0800b340 <HAL_UART_IRQHandler>:
 800b340:	b580      	push	{r7, lr}
 800b342:	b0ba      	sub	sp, #232	; 0xe8
 800b344:	af00      	add	r7, sp, #0
 800b346:	6078      	str	r0, [r7, #4]
 800b348:	687b      	ldr	r3, [r7, #4]
 800b34a:	681b      	ldr	r3, [r3, #0]
 800b34c:	681b      	ldr	r3, [r3, #0]
 800b34e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800b352:	687b      	ldr	r3, [r7, #4]
 800b354:	681b      	ldr	r3, [r3, #0]
 800b356:	68db      	ldr	r3, [r3, #12]
 800b358:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800b35c:	687b      	ldr	r3, [r7, #4]
 800b35e:	681b      	ldr	r3, [r3, #0]
 800b360:	695b      	ldr	r3, [r3, #20]
 800b362:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800b366:	2300      	movs	r3, #0
 800b368:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800b36c:	2300      	movs	r3, #0
 800b36e:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800b372:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b376:	f003 030f 	and.w	r3, r3, #15
 800b37a:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800b37e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800b382:	2b00      	cmp	r3, #0
 800b384:	d10f      	bne.n	800b3a6 <HAL_UART_IRQHandler+0x66>
 800b386:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b38a:	f003 0320 	and.w	r3, r3, #32
 800b38e:	2b00      	cmp	r3, #0
 800b390:	d009      	beq.n	800b3a6 <HAL_UART_IRQHandler+0x66>
 800b392:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800b396:	f003 0320 	and.w	r3, r3, #32
 800b39a:	2b00      	cmp	r3, #0
 800b39c:	d003      	beq.n	800b3a6 <HAL_UART_IRQHandler+0x66>
 800b39e:	6878      	ldr	r0, [r7, #4]
 800b3a0:	f000 fc07 	bl	800bbb2 <UART_Receive_IT>
 800b3a4:	e256      	b.n	800b854 <HAL_UART_IRQHandler+0x514>
 800b3a6:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800b3aa:	2b00      	cmp	r3, #0
 800b3ac:	f000 80de 	beq.w	800b56c <HAL_UART_IRQHandler+0x22c>
 800b3b0:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800b3b4:	f003 0301 	and.w	r3, r3, #1
 800b3b8:	2b00      	cmp	r3, #0
 800b3ba:	d106      	bne.n	800b3ca <HAL_UART_IRQHandler+0x8a>
 800b3bc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800b3c0:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800b3c4:	2b00      	cmp	r3, #0
 800b3c6:	f000 80d1 	beq.w	800b56c <HAL_UART_IRQHandler+0x22c>
 800b3ca:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b3ce:	f003 0301 	and.w	r3, r3, #1
 800b3d2:	2b00      	cmp	r3, #0
 800b3d4:	d00b      	beq.n	800b3ee <HAL_UART_IRQHandler+0xae>
 800b3d6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800b3da:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800b3de:	2b00      	cmp	r3, #0
 800b3e0:	d005      	beq.n	800b3ee <HAL_UART_IRQHandler+0xae>
 800b3e2:	687b      	ldr	r3, [r7, #4]
 800b3e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b3e6:	f043 0201 	orr.w	r2, r3, #1
 800b3ea:	687b      	ldr	r3, [r7, #4]
 800b3ec:	641a      	str	r2, [r3, #64]	; 0x40
 800b3ee:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b3f2:	f003 0304 	and.w	r3, r3, #4
 800b3f6:	2b00      	cmp	r3, #0
 800b3f8:	d00b      	beq.n	800b412 <HAL_UART_IRQHandler+0xd2>
 800b3fa:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800b3fe:	f003 0301 	and.w	r3, r3, #1
 800b402:	2b00      	cmp	r3, #0
 800b404:	d005      	beq.n	800b412 <HAL_UART_IRQHandler+0xd2>
 800b406:	687b      	ldr	r3, [r7, #4]
 800b408:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b40a:	f043 0202 	orr.w	r2, r3, #2
 800b40e:	687b      	ldr	r3, [r7, #4]
 800b410:	641a      	str	r2, [r3, #64]	; 0x40
 800b412:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b416:	f003 0302 	and.w	r3, r3, #2
 800b41a:	2b00      	cmp	r3, #0
 800b41c:	d00b      	beq.n	800b436 <HAL_UART_IRQHandler+0xf6>
 800b41e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800b422:	f003 0301 	and.w	r3, r3, #1
 800b426:	2b00      	cmp	r3, #0
 800b428:	d005      	beq.n	800b436 <HAL_UART_IRQHandler+0xf6>
 800b42a:	687b      	ldr	r3, [r7, #4]
 800b42c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b42e:	f043 0204 	orr.w	r2, r3, #4
 800b432:	687b      	ldr	r3, [r7, #4]
 800b434:	641a      	str	r2, [r3, #64]	; 0x40
 800b436:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b43a:	f003 0308 	and.w	r3, r3, #8
 800b43e:	2b00      	cmp	r3, #0
 800b440:	d011      	beq.n	800b466 <HAL_UART_IRQHandler+0x126>
 800b442:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800b446:	f003 0320 	and.w	r3, r3, #32
 800b44a:	2b00      	cmp	r3, #0
 800b44c:	d105      	bne.n	800b45a <HAL_UART_IRQHandler+0x11a>
 800b44e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800b452:	f003 0301 	and.w	r3, r3, #1
 800b456:	2b00      	cmp	r3, #0
 800b458:	d005      	beq.n	800b466 <HAL_UART_IRQHandler+0x126>
 800b45a:	687b      	ldr	r3, [r7, #4]
 800b45c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b45e:	f043 0208 	orr.w	r2, r3, #8
 800b462:	687b      	ldr	r3, [r7, #4]
 800b464:	641a      	str	r2, [r3, #64]	; 0x40
 800b466:	687b      	ldr	r3, [r7, #4]
 800b468:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b46a:	2b00      	cmp	r3, #0
 800b46c:	f000 81ed 	beq.w	800b84a <HAL_UART_IRQHandler+0x50a>
 800b470:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b474:	f003 0320 	and.w	r3, r3, #32
 800b478:	2b00      	cmp	r3, #0
 800b47a:	d008      	beq.n	800b48e <HAL_UART_IRQHandler+0x14e>
 800b47c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800b480:	f003 0320 	and.w	r3, r3, #32
 800b484:	2b00      	cmp	r3, #0
 800b486:	d002      	beq.n	800b48e <HAL_UART_IRQHandler+0x14e>
 800b488:	6878      	ldr	r0, [r7, #4]
 800b48a:	f000 fb92 	bl	800bbb2 <UART_Receive_IT>
 800b48e:	687b      	ldr	r3, [r7, #4]
 800b490:	681b      	ldr	r3, [r3, #0]
 800b492:	695b      	ldr	r3, [r3, #20]
 800b494:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b498:	2b40      	cmp	r3, #64	; 0x40
 800b49a:	bf0c      	ite	eq
 800b49c:	2301      	moveq	r3, #1
 800b49e:	2300      	movne	r3, #0
 800b4a0:	b2db      	uxtb	r3, r3
 800b4a2:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800b4a6:	687b      	ldr	r3, [r7, #4]
 800b4a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b4aa:	f003 0308 	and.w	r3, r3, #8
 800b4ae:	2b00      	cmp	r3, #0
 800b4b0:	d103      	bne.n	800b4ba <HAL_UART_IRQHandler+0x17a>
 800b4b2:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800b4b6:	2b00      	cmp	r3, #0
 800b4b8:	d04f      	beq.n	800b55a <HAL_UART_IRQHandler+0x21a>
 800b4ba:	6878      	ldr	r0, [r7, #4]
 800b4bc:	f000 fa9a 	bl	800b9f4 <UART_EndRxTransfer>
 800b4c0:	687b      	ldr	r3, [r7, #4]
 800b4c2:	681b      	ldr	r3, [r3, #0]
 800b4c4:	695b      	ldr	r3, [r3, #20]
 800b4c6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b4ca:	2b40      	cmp	r3, #64	; 0x40
 800b4cc:	d141      	bne.n	800b552 <HAL_UART_IRQHandler+0x212>
 800b4ce:	687b      	ldr	r3, [r7, #4]
 800b4d0:	681b      	ldr	r3, [r3, #0]
 800b4d2:	3314      	adds	r3, #20
 800b4d4:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800b4d8:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800b4dc:	e853 3f00 	ldrex	r3, [r3]
 800b4e0:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800b4e4:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800b4e8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b4ec:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800b4f0:	687b      	ldr	r3, [r7, #4]
 800b4f2:	681b      	ldr	r3, [r3, #0]
 800b4f4:	3314      	adds	r3, #20
 800b4f6:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 800b4fa:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800b4fe:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800b502:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 800b506:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 800b50a:	e841 2300 	strex	r3, r2, [r1]
 800b50e:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800b512:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800b516:	2b00      	cmp	r3, #0
 800b518:	d1d9      	bne.n	800b4ce <HAL_UART_IRQHandler+0x18e>
 800b51a:	687b      	ldr	r3, [r7, #4]
 800b51c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b51e:	2b00      	cmp	r3, #0
 800b520:	d013      	beq.n	800b54a <HAL_UART_IRQHandler+0x20a>
 800b522:	687b      	ldr	r3, [r7, #4]
 800b524:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b526:	4a7d      	ldr	r2, [pc, #500]	; (800b71c <HAL_UART_IRQHandler+0x3dc>)
 800b528:	651a      	str	r2, [r3, #80]	; 0x50
 800b52a:	687b      	ldr	r3, [r7, #4]
 800b52c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b52e:	4618      	mov	r0, r3
 800b530:	f7fc fa08 	bl	8007944 <HAL_DMA_Abort_IT>
 800b534:	4603      	mov	r3, r0
 800b536:	2b00      	cmp	r3, #0
 800b538:	d016      	beq.n	800b568 <HAL_UART_IRQHandler+0x228>
 800b53a:	687b      	ldr	r3, [r7, #4]
 800b53c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b53e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800b540:	687a      	ldr	r2, [r7, #4]
 800b542:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800b544:	4610      	mov	r0, r2
 800b546:	4798      	blx	r3
 800b548:	e00e      	b.n	800b568 <HAL_UART_IRQHandler+0x228>
 800b54a:	6878      	ldr	r0, [r7, #4]
 800b54c:	f000 f990 	bl	800b870 <HAL_UART_ErrorCallback>
 800b550:	e00a      	b.n	800b568 <HAL_UART_IRQHandler+0x228>
 800b552:	6878      	ldr	r0, [r7, #4]
 800b554:	f000 f98c 	bl	800b870 <HAL_UART_ErrorCallback>
 800b558:	e006      	b.n	800b568 <HAL_UART_IRQHandler+0x228>
 800b55a:	6878      	ldr	r0, [r7, #4]
 800b55c:	f000 f988 	bl	800b870 <HAL_UART_ErrorCallback>
 800b560:	687b      	ldr	r3, [r7, #4]
 800b562:	2200      	movs	r2, #0
 800b564:	641a      	str	r2, [r3, #64]	; 0x40
 800b566:	e170      	b.n	800b84a <HAL_UART_IRQHandler+0x50a>
 800b568:	bf00      	nop
 800b56a:	e16e      	b.n	800b84a <HAL_UART_IRQHandler+0x50a>
 800b56c:	687b      	ldr	r3, [r7, #4]
 800b56e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b570:	2b01      	cmp	r3, #1
 800b572:	f040 814a 	bne.w	800b80a <HAL_UART_IRQHandler+0x4ca>
 800b576:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b57a:	f003 0310 	and.w	r3, r3, #16
 800b57e:	2b00      	cmp	r3, #0
 800b580:	f000 8143 	beq.w	800b80a <HAL_UART_IRQHandler+0x4ca>
 800b584:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800b588:	f003 0310 	and.w	r3, r3, #16
 800b58c:	2b00      	cmp	r3, #0
 800b58e:	f000 813c 	beq.w	800b80a <HAL_UART_IRQHandler+0x4ca>
 800b592:	2300      	movs	r3, #0
 800b594:	60bb      	str	r3, [r7, #8]
 800b596:	687b      	ldr	r3, [r7, #4]
 800b598:	681b      	ldr	r3, [r3, #0]
 800b59a:	681b      	ldr	r3, [r3, #0]
 800b59c:	60bb      	str	r3, [r7, #8]
 800b59e:	687b      	ldr	r3, [r7, #4]
 800b5a0:	681b      	ldr	r3, [r3, #0]
 800b5a2:	685b      	ldr	r3, [r3, #4]
 800b5a4:	60bb      	str	r3, [r7, #8]
 800b5a6:	68bb      	ldr	r3, [r7, #8]
 800b5a8:	687b      	ldr	r3, [r7, #4]
 800b5aa:	681b      	ldr	r3, [r3, #0]
 800b5ac:	695b      	ldr	r3, [r3, #20]
 800b5ae:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b5b2:	2b40      	cmp	r3, #64	; 0x40
 800b5b4:	f040 80b4 	bne.w	800b720 <HAL_UART_IRQHandler+0x3e0>
 800b5b8:	687b      	ldr	r3, [r7, #4]
 800b5ba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b5bc:	681b      	ldr	r3, [r3, #0]
 800b5be:	685b      	ldr	r3, [r3, #4]
 800b5c0:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 800b5c4:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 800b5c8:	2b00      	cmp	r3, #0
 800b5ca:	f000 8140 	beq.w	800b84e <HAL_UART_IRQHandler+0x50e>
 800b5ce:	687b      	ldr	r3, [r7, #4]
 800b5d0:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800b5d2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800b5d6:	429a      	cmp	r2, r3
 800b5d8:	f080 8139 	bcs.w	800b84e <HAL_UART_IRQHandler+0x50e>
 800b5dc:	687b      	ldr	r3, [r7, #4]
 800b5de:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800b5e2:	85da      	strh	r2, [r3, #46]	; 0x2e
 800b5e4:	687b      	ldr	r3, [r7, #4]
 800b5e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b5e8:	69db      	ldr	r3, [r3, #28]
 800b5ea:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b5ee:	f000 8088 	beq.w	800b702 <HAL_UART_IRQHandler+0x3c2>
 800b5f2:	687b      	ldr	r3, [r7, #4]
 800b5f4:	681b      	ldr	r3, [r3, #0]
 800b5f6:	330c      	adds	r3, #12
 800b5f8:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800b5fc:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800b600:	e853 3f00 	ldrex	r3, [r3]
 800b604:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800b608:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800b60c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800b610:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800b614:	687b      	ldr	r3, [r7, #4]
 800b616:	681b      	ldr	r3, [r3, #0]
 800b618:	330c      	adds	r3, #12
 800b61a:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 800b61e:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800b622:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800b626:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800b62a:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800b62e:	e841 2300 	strex	r3, r2, [r1]
 800b632:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800b636:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800b63a:	2b00      	cmp	r3, #0
 800b63c:	d1d9      	bne.n	800b5f2 <HAL_UART_IRQHandler+0x2b2>
 800b63e:	687b      	ldr	r3, [r7, #4]
 800b640:	681b      	ldr	r3, [r3, #0]
 800b642:	3314      	adds	r3, #20
 800b644:	677b      	str	r3, [r7, #116]	; 0x74
 800b646:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800b648:	e853 3f00 	ldrex	r3, [r3]
 800b64c:	673b      	str	r3, [r7, #112]	; 0x70
 800b64e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800b650:	f023 0301 	bic.w	r3, r3, #1
 800b654:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800b658:	687b      	ldr	r3, [r7, #4]
 800b65a:	681b      	ldr	r3, [r3, #0]
 800b65c:	3314      	adds	r3, #20
 800b65e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800b662:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 800b666:	67fb      	str	r3, [r7, #124]	; 0x7c
 800b668:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800b66a:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800b66e:	e841 2300 	strex	r3, r2, [r1]
 800b672:	67bb      	str	r3, [r7, #120]	; 0x78
 800b674:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800b676:	2b00      	cmp	r3, #0
 800b678:	d1e1      	bne.n	800b63e <HAL_UART_IRQHandler+0x2fe>
 800b67a:	687b      	ldr	r3, [r7, #4]
 800b67c:	681b      	ldr	r3, [r3, #0]
 800b67e:	3314      	adds	r3, #20
 800b680:	663b      	str	r3, [r7, #96]	; 0x60
 800b682:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800b684:	e853 3f00 	ldrex	r3, [r3]
 800b688:	65fb      	str	r3, [r7, #92]	; 0x5c
 800b68a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800b68c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b690:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800b694:	687b      	ldr	r3, [r7, #4]
 800b696:	681b      	ldr	r3, [r3, #0]
 800b698:	3314      	adds	r3, #20
 800b69a:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800b69e:	66fa      	str	r2, [r7, #108]	; 0x6c
 800b6a0:	66bb      	str	r3, [r7, #104]	; 0x68
 800b6a2:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800b6a4:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800b6a6:	e841 2300 	strex	r3, r2, [r1]
 800b6aa:	667b      	str	r3, [r7, #100]	; 0x64
 800b6ac:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800b6ae:	2b00      	cmp	r3, #0
 800b6b0:	d1e3      	bne.n	800b67a <HAL_UART_IRQHandler+0x33a>
 800b6b2:	687b      	ldr	r3, [r7, #4]
 800b6b4:	2220      	movs	r2, #32
 800b6b6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b6ba:	687b      	ldr	r3, [r7, #4]
 800b6bc:	2200      	movs	r2, #0
 800b6be:	631a      	str	r2, [r3, #48]	; 0x30
 800b6c0:	687b      	ldr	r3, [r7, #4]
 800b6c2:	681b      	ldr	r3, [r3, #0]
 800b6c4:	330c      	adds	r3, #12
 800b6c6:	64fb      	str	r3, [r7, #76]	; 0x4c
 800b6c8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800b6ca:	e853 3f00 	ldrex	r3, [r3]
 800b6ce:	64bb      	str	r3, [r7, #72]	; 0x48
 800b6d0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800b6d2:	f023 0310 	bic.w	r3, r3, #16
 800b6d6:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800b6da:	687b      	ldr	r3, [r7, #4]
 800b6dc:	681b      	ldr	r3, [r3, #0]
 800b6de:	330c      	adds	r3, #12
 800b6e0:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 800b6e4:	65ba      	str	r2, [r7, #88]	; 0x58
 800b6e6:	657b      	str	r3, [r7, #84]	; 0x54
 800b6e8:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800b6ea:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800b6ec:	e841 2300 	strex	r3, r2, [r1]
 800b6f0:	653b      	str	r3, [r7, #80]	; 0x50
 800b6f2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800b6f4:	2b00      	cmp	r3, #0
 800b6f6:	d1e3      	bne.n	800b6c0 <HAL_UART_IRQHandler+0x380>
 800b6f8:	687b      	ldr	r3, [r7, #4]
 800b6fa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b6fc:	4618      	mov	r0, r3
 800b6fe:	f7fc f8b1 	bl	8007864 <HAL_DMA_Abort>
 800b702:	687b      	ldr	r3, [r7, #4]
 800b704:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800b706:	687b      	ldr	r3, [r7, #4]
 800b708:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800b70a:	b29b      	uxth	r3, r3
 800b70c:	1ad3      	subs	r3, r2, r3
 800b70e:	b29b      	uxth	r3, r3
 800b710:	4619      	mov	r1, r3
 800b712:	6878      	ldr	r0, [r7, #4]
 800b714:	f000 f8b6 	bl	800b884 <HAL_UARTEx_RxEventCallback>
 800b718:	e099      	b.n	800b84e <HAL_UART_IRQHandler+0x50e>
 800b71a:	bf00      	nop
 800b71c:	0800babb 	.word	0x0800babb
 800b720:	687b      	ldr	r3, [r7, #4]
 800b722:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800b724:	687b      	ldr	r3, [r7, #4]
 800b726:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800b728:	b29b      	uxth	r3, r3
 800b72a:	1ad3      	subs	r3, r2, r3
 800b72c:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 800b730:	687b      	ldr	r3, [r7, #4]
 800b732:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800b734:	b29b      	uxth	r3, r3
 800b736:	2b00      	cmp	r3, #0
 800b738:	f000 808b 	beq.w	800b852 <HAL_UART_IRQHandler+0x512>
 800b73c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800b740:	2b00      	cmp	r3, #0
 800b742:	f000 8086 	beq.w	800b852 <HAL_UART_IRQHandler+0x512>
 800b746:	687b      	ldr	r3, [r7, #4]
 800b748:	681b      	ldr	r3, [r3, #0]
 800b74a:	330c      	adds	r3, #12
 800b74c:	63bb      	str	r3, [r7, #56]	; 0x38
 800b74e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800b750:	e853 3f00 	ldrex	r3, [r3]
 800b754:	637b      	str	r3, [r7, #52]	; 0x34
 800b756:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b758:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800b75c:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800b760:	687b      	ldr	r3, [r7, #4]
 800b762:	681b      	ldr	r3, [r3, #0]
 800b764:	330c      	adds	r3, #12
 800b766:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 800b76a:	647a      	str	r2, [r7, #68]	; 0x44
 800b76c:	643b      	str	r3, [r7, #64]	; 0x40
 800b76e:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800b770:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800b772:	e841 2300 	strex	r3, r2, [r1]
 800b776:	63fb      	str	r3, [r7, #60]	; 0x3c
 800b778:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800b77a:	2b00      	cmp	r3, #0
 800b77c:	d1e3      	bne.n	800b746 <HAL_UART_IRQHandler+0x406>
 800b77e:	687b      	ldr	r3, [r7, #4]
 800b780:	681b      	ldr	r3, [r3, #0]
 800b782:	3314      	adds	r3, #20
 800b784:	627b      	str	r3, [r7, #36]	; 0x24
 800b786:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b788:	e853 3f00 	ldrex	r3, [r3]
 800b78c:	623b      	str	r3, [r7, #32]
 800b78e:	6a3b      	ldr	r3, [r7, #32]
 800b790:	f023 0301 	bic.w	r3, r3, #1
 800b794:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800b798:	687b      	ldr	r3, [r7, #4]
 800b79a:	681b      	ldr	r3, [r3, #0]
 800b79c:	3314      	adds	r3, #20
 800b79e:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800b7a2:	633a      	str	r2, [r7, #48]	; 0x30
 800b7a4:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b7a6:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800b7a8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800b7aa:	e841 2300 	strex	r3, r2, [r1]
 800b7ae:	62bb      	str	r3, [r7, #40]	; 0x28
 800b7b0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b7b2:	2b00      	cmp	r3, #0
 800b7b4:	d1e3      	bne.n	800b77e <HAL_UART_IRQHandler+0x43e>
 800b7b6:	687b      	ldr	r3, [r7, #4]
 800b7b8:	2220      	movs	r2, #32
 800b7ba:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b7be:	687b      	ldr	r3, [r7, #4]
 800b7c0:	2200      	movs	r2, #0
 800b7c2:	631a      	str	r2, [r3, #48]	; 0x30
 800b7c4:	687b      	ldr	r3, [r7, #4]
 800b7c6:	681b      	ldr	r3, [r3, #0]
 800b7c8:	330c      	adds	r3, #12
 800b7ca:	613b      	str	r3, [r7, #16]
 800b7cc:	693b      	ldr	r3, [r7, #16]
 800b7ce:	e853 3f00 	ldrex	r3, [r3]
 800b7d2:	60fb      	str	r3, [r7, #12]
 800b7d4:	68fb      	ldr	r3, [r7, #12]
 800b7d6:	f023 0310 	bic.w	r3, r3, #16
 800b7da:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800b7de:	687b      	ldr	r3, [r7, #4]
 800b7e0:	681b      	ldr	r3, [r3, #0]
 800b7e2:	330c      	adds	r3, #12
 800b7e4:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 800b7e8:	61fa      	str	r2, [r7, #28]
 800b7ea:	61bb      	str	r3, [r7, #24]
 800b7ec:	69b9      	ldr	r1, [r7, #24]
 800b7ee:	69fa      	ldr	r2, [r7, #28]
 800b7f0:	e841 2300 	strex	r3, r2, [r1]
 800b7f4:	617b      	str	r3, [r7, #20]
 800b7f6:	697b      	ldr	r3, [r7, #20]
 800b7f8:	2b00      	cmp	r3, #0
 800b7fa:	d1e3      	bne.n	800b7c4 <HAL_UART_IRQHandler+0x484>
 800b7fc:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800b800:	4619      	mov	r1, r3
 800b802:	6878      	ldr	r0, [r7, #4]
 800b804:	f000 f83e 	bl	800b884 <HAL_UARTEx_RxEventCallback>
 800b808:	e023      	b.n	800b852 <HAL_UART_IRQHandler+0x512>
 800b80a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b80e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800b812:	2b00      	cmp	r3, #0
 800b814:	d009      	beq.n	800b82a <HAL_UART_IRQHandler+0x4ea>
 800b816:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800b81a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800b81e:	2b00      	cmp	r3, #0
 800b820:	d003      	beq.n	800b82a <HAL_UART_IRQHandler+0x4ea>
 800b822:	6878      	ldr	r0, [r7, #4]
 800b824:	f000 f95d 	bl	800bae2 <UART_Transmit_IT>
 800b828:	e014      	b.n	800b854 <HAL_UART_IRQHandler+0x514>
 800b82a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800b82e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b832:	2b00      	cmp	r3, #0
 800b834:	d00e      	beq.n	800b854 <HAL_UART_IRQHandler+0x514>
 800b836:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800b83a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b83e:	2b00      	cmp	r3, #0
 800b840:	d008      	beq.n	800b854 <HAL_UART_IRQHandler+0x514>
 800b842:	6878      	ldr	r0, [r7, #4]
 800b844:	f000 f99d 	bl	800bb82 <UART_EndTransmit_IT>
 800b848:	e004      	b.n	800b854 <HAL_UART_IRQHandler+0x514>
 800b84a:	bf00      	nop
 800b84c:	e002      	b.n	800b854 <HAL_UART_IRQHandler+0x514>
 800b84e:	bf00      	nop
 800b850:	e000      	b.n	800b854 <HAL_UART_IRQHandler+0x514>
 800b852:	bf00      	nop
 800b854:	37e8      	adds	r7, #232	; 0xe8
 800b856:	46bd      	mov	sp, r7
 800b858:	bd80      	pop	{r7, pc}
 800b85a:	bf00      	nop

0800b85c <HAL_UART_TxCpltCallback>:
 800b85c:	b480      	push	{r7}
 800b85e:	b083      	sub	sp, #12
 800b860:	af00      	add	r7, sp, #0
 800b862:	6078      	str	r0, [r7, #4]
 800b864:	bf00      	nop
 800b866:	370c      	adds	r7, #12
 800b868:	46bd      	mov	sp, r7
 800b86a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b86e:	4770      	bx	lr

0800b870 <HAL_UART_ErrorCallback>:
 800b870:	b480      	push	{r7}
 800b872:	b083      	sub	sp, #12
 800b874:	af00      	add	r7, sp, #0
 800b876:	6078      	str	r0, [r7, #4]
 800b878:	bf00      	nop
 800b87a:	370c      	adds	r7, #12
 800b87c:	46bd      	mov	sp, r7
 800b87e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b882:	4770      	bx	lr

0800b884 <HAL_UARTEx_RxEventCallback>:
 800b884:	b480      	push	{r7}
 800b886:	b083      	sub	sp, #12
 800b888:	af00      	add	r7, sp, #0
 800b88a:	6078      	str	r0, [r7, #4]
 800b88c:	460b      	mov	r3, r1
 800b88e:	807b      	strh	r3, [r7, #2]
 800b890:	bf00      	nop
 800b892:	370c      	adds	r7, #12
 800b894:	46bd      	mov	sp, r7
 800b896:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b89a:	4770      	bx	lr

0800b89c <UART_WaitOnFlagUntilTimeout>:
 800b89c:	b580      	push	{r7, lr}
 800b89e:	b090      	sub	sp, #64	; 0x40
 800b8a0:	af00      	add	r7, sp, #0
 800b8a2:	60f8      	str	r0, [r7, #12]
 800b8a4:	60b9      	str	r1, [r7, #8]
 800b8a6:	603b      	str	r3, [r7, #0]
 800b8a8:	4613      	mov	r3, r2
 800b8aa:	71fb      	strb	r3, [r7, #7]
 800b8ac:	e050      	b.n	800b950 <UART_WaitOnFlagUntilTimeout+0xb4>
 800b8ae:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800b8b0:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b8b4:	d04c      	beq.n	800b950 <UART_WaitOnFlagUntilTimeout+0xb4>
 800b8b6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800b8b8:	2b00      	cmp	r3, #0
 800b8ba:	d007      	beq.n	800b8cc <UART_WaitOnFlagUntilTimeout+0x30>
 800b8bc:	f7fa ffe2 	bl	8006884 <HAL_GetTick>
 800b8c0:	4602      	mov	r2, r0
 800b8c2:	683b      	ldr	r3, [r7, #0]
 800b8c4:	1ad3      	subs	r3, r2, r3
 800b8c6:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800b8c8:	429a      	cmp	r2, r3
 800b8ca:	d241      	bcs.n	800b950 <UART_WaitOnFlagUntilTimeout+0xb4>
 800b8cc:	68fb      	ldr	r3, [r7, #12]
 800b8ce:	681b      	ldr	r3, [r3, #0]
 800b8d0:	330c      	adds	r3, #12
 800b8d2:	62bb      	str	r3, [r7, #40]	; 0x28
 800b8d4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b8d6:	e853 3f00 	ldrex	r3, [r3]
 800b8da:	627b      	str	r3, [r7, #36]	; 0x24
 800b8dc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b8de:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800b8e2:	63fb      	str	r3, [r7, #60]	; 0x3c
 800b8e4:	68fb      	ldr	r3, [r7, #12]
 800b8e6:	681b      	ldr	r3, [r3, #0]
 800b8e8:	330c      	adds	r3, #12
 800b8ea:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800b8ec:	637a      	str	r2, [r7, #52]	; 0x34
 800b8ee:	633b      	str	r3, [r7, #48]	; 0x30
 800b8f0:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800b8f2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800b8f4:	e841 2300 	strex	r3, r2, [r1]
 800b8f8:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b8fa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b8fc:	2b00      	cmp	r3, #0
 800b8fe:	d1e5      	bne.n	800b8cc <UART_WaitOnFlagUntilTimeout+0x30>
 800b900:	68fb      	ldr	r3, [r7, #12]
 800b902:	681b      	ldr	r3, [r3, #0]
 800b904:	3314      	adds	r3, #20
 800b906:	617b      	str	r3, [r7, #20]
 800b908:	697b      	ldr	r3, [r7, #20]
 800b90a:	e853 3f00 	ldrex	r3, [r3]
 800b90e:	613b      	str	r3, [r7, #16]
 800b910:	693b      	ldr	r3, [r7, #16]
 800b912:	f023 0301 	bic.w	r3, r3, #1
 800b916:	63bb      	str	r3, [r7, #56]	; 0x38
 800b918:	68fb      	ldr	r3, [r7, #12]
 800b91a:	681b      	ldr	r3, [r3, #0]
 800b91c:	3314      	adds	r3, #20
 800b91e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800b920:	623a      	str	r2, [r7, #32]
 800b922:	61fb      	str	r3, [r7, #28]
 800b924:	69f9      	ldr	r1, [r7, #28]
 800b926:	6a3a      	ldr	r2, [r7, #32]
 800b928:	e841 2300 	strex	r3, r2, [r1]
 800b92c:	61bb      	str	r3, [r7, #24]
 800b92e:	69bb      	ldr	r3, [r7, #24]
 800b930:	2b00      	cmp	r3, #0
 800b932:	d1e5      	bne.n	800b900 <UART_WaitOnFlagUntilTimeout+0x64>
 800b934:	68fb      	ldr	r3, [r7, #12]
 800b936:	2220      	movs	r2, #32
 800b938:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b93c:	68fb      	ldr	r3, [r7, #12]
 800b93e:	2220      	movs	r2, #32
 800b940:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b944:	68fb      	ldr	r3, [r7, #12]
 800b946:	2200      	movs	r2, #0
 800b948:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b94c:	2303      	movs	r3, #3
 800b94e:	e00f      	b.n	800b970 <UART_WaitOnFlagUntilTimeout+0xd4>
 800b950:	68fb      	ldr	r3, [r7, #12]
 800b952:	681b      	ldr	r3, [r3, #0]
 800b954:	681a      	ldr	r2, [r3, #0]
 800b956:	68bb      	ldr	r3, [r7, #8]
 800b958:	4013      	ands	r3, r2
 800b95a:	68ba      	ldr	r2, [r7, #8]
 800b95c:	429a      	cmp	r2, r3
 800b95e:	bf0c      	ite	eq
 800b960:	2301      	moveq	r3, #1
 800b962:	2300      	movne	r3, #0
 800b964:	b2db      	uxtb	r3, r3
 800b966:	461a      	mov	r2, r3
 800b968:	79fb      	ldrb	r3, [r7, #7]
 800b96a:	429a      	cmp	r2, r3
 800b96c:	d09f      	beq.n	800b8ae <UART_WaitOnFlagUntilTimeout+0x12>
 800b96e:	2300      	movs	r3, #0
 800b970:	4618      	mov	r0, r3
 800b972:	3740      	adds	r7, #64	; 0x40
 800b974:	46bd      	mov	sp, r7
 800b976:	bd80      	pop	{r7, pc}

0800b978 <UART_Start_Receive_IT>:
 800b978:	b480      	push	{r7}
 800b97a:	b085      	sub	sp, #20
 800b97c:	af00      	add	r7, sp, #0
 800b97e:	60f8      	str	r0, [r7, #12]
 800b980:	60b9      	str	r1, [r7, #8]
 800b982:	4613      	mov	r3, r2
 800b984:	80fb      	strh	r3, [r7, #6]
 800b986:	68fb      	ldr	r3, [r7, #12]
 800b988:	68ba      	ldr	r2, [r7, #8]
 800b98a:	629a      	str	r2, [r3, #40]	; 0x28
 800b98c:	68fb      	ldr	r3, [r7, #12]
 800b98e:	88fa      	ldrh	r2, [r7, #6]
 800b990:	859a      	strh	r2, [r3, #44]	; 0x2c
 800b992:	68fb      	ldr	r3, [r7, #12]
 800b994:	88fa      	ldrh	r2, [r7, #6]
 800b996:	85da      	strh	r2, [r3, #46]	; 0x2e
 800b998:	68fb      	ldr	r3, [r7, #12]
 800b99a:	2200      	movs	r2, #0
 800b99c:	641a      	str	r2, [r3, #64]	; 0x40
 800b99e:	68fb      	ldr	r3, [r7, #12]
 800b9a0:	2222      	movs	r2, #34	; 0x22
 800b9a2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b9a6:	68fb      	ldr	r3, [r7, #12]
 800b9a8:	2200      	movs	r2, #0
 800b9aa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b9ae:	68fb      	ldr	r3, [r7, #12]
 800b9b0:	691b      	ldr	r3, [r3, #16]
 800b9b2:	2b00      	cmp	r3, #0
 800b9b4:	d007      	beq.n	800b9c6 <UART_Start_Receive_IT+0x4e>
 800b9b6:	68fb      	ldr	r3, [r7, #12]
 800b9b8:	681b      	ldr	r3, [r3, #0]
 800b9ba:	68da      	ldr	r2, [r3, #12]
 800b9bc:	68fb      	ldr	r3, [r7, #12]
 800b9be:	681b      	ldr	r3, [r3, #0]
 800b9c0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b9c4:	60da      	str	r2, [r3, #12]
 800b9c6:	68fb      	ldr	r3, [r7, #12]
 800b9c8:	681b      	ldr	r3, [r3, #0]
 800b9ca:	695a      	ldr	r2, [r3, #20]
 800b9cc:	68fb      	ldr	r3, [r7, #12]
 800b9ce:	681b      	ldr	r3, [r3, #0]
 800b9d0:	f042 0201 	orr.w	r2, r2, #1
 800b9d4:	615a      	str	r2, [r3, #20]
 800b9d6:	68fb      	ldr	r3, [r7, #12]
 800b9d8:	681b      	ldr	r3, [r3, #0]
 800b9da:	68da      	ldr	r2, [r3, #12]
 800b9dc:	68fb      	ldr	r3, [r7, #12]
 800b9de:	681b      	ldr	r3, [r3, #0]
 800b9e0:	f042 0220 	orr.w	r2, r2, #32
 800b9e4:	60da      	str	r2, [r3, #12]
 800b9e6:	2300      	movs	r3, #0
 800b9e8:	4618      	mov	r0, r3
 800b9ea:	3714      	adds	r7, #20
 800b9ec:	46bd      	mov	sp, r7
 800b9ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9f2:	4770      	bx	lr

0800b9f4 <UART_EndRxTransfer>:
 800b9f4:	b480      	push	{r7}
 800b9f6:	b095      	sub	sp, #84	; 0x54
 800b9f8:	af00      	add	r7, sp, #0
 800b9fa:	6078      	str	r0, [r7, #4]
 800b9fc:	687b      	ldr	r3, [r7, #4]
 800b9fe:	681b      	ldr	r3, [r3, #0]
 800ba00:	330c      	adds	r3, #12
 800ba02:	637b      	str	r3, [r7, #52]	; 0x34
 800ba04:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ba06:	e853 3f00 	ldrex	r3, [r3]
 800ba0a:	633b      	str	r3, [r7, #48]	; 0x30
 800ba0c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800ba0e:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800ba12:	64fb      	str	r3, [r7, #76]	; 0x4c
 800ba14:	687b      	ldr	r3, [r7, #4]
 800ba16:	681b      	ldr	r3, [r3, #0]
 800ba18:	330c      	adds	r3, #12
 800ba1a:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800ba1c:	643a      	str	r2, [r7, #64]	; 0x40
 800ba1e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ba20:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800ba22:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800ba24:	e841 2300 	strex	r3, r2, [r1]
 800ba28:	63bb      	str	r3, [r7, #56]	; 0x38
 800ba2a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800ba2c:	2b00      	cmp	r3, #0
 800ba2e:	d1e5      	bne.n	800b9fc <UART_EndRxTransfer+0x8>
 800ba30:	687b      	ldr	r3, [r7, #4]
 800ba32:	681b      	ldr	r3, [r3, #0]
 800ba34:	3314      	adds	r3, #20
 800ba36:	623b      	str	r3, [r7, #32]
 800ba38:	6a3b      	ldr	r3, [r7, #32]
 800ba3a:	e853 3f00 	ldrex	r3, [r3]
 800ba3e:	61fb      	str	r3, [r7, #28]
 800ba40:	69fb      	ldr	r3, [r7, #28]
 800ba42:	f023 0301 	bic.w	r3, r3, #1
 800ba46:	64bb      	str	r3, [r7, #72]	; 0x48
 800ba48:	687b      	ldr	r3, [r7, #4]
 800ba4a:	681b      	ldr	r3, [r3, #0]
 800ba4c:	3314      	adds	r3, #20
 800ba4e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800ba50:	62fa      	str	r2, [r7, #44]	; 0x2c
 800ba52:	62bb      	str	r3, [r7, #40]	; 0x28
 800ba54:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800ba56:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800ba58:	e841 2300 	strex	r3, r2, [r1]
 800ba5c:	627b      	str	r3, [r7, #36]	; 0x24
 800ba5e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ba60:	2b00      	cmp	r3, #0
 800ba62:	d1e5      	bne.n	800ba30 <UART_EndRxTransfer+0x3c>
 800ba64:	687b      	ldr	r3, [r7, #4]
 800ba66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ba68:	2b01      	cmp	r3, #1
 800ba6a:	d119      	bne.n	800baa0 <UART_EndRxTransfer+0xac>
 800ba6c:	687b      	ldr	r3, [r7, #4]
 800ba6e:	681b      	ldr	r3, [r3, #0]
 800ba70:	330c      	adds	r3, #12
 800ba72:	60fb      	str	r3, [r7, #12]
 800ba74:	68fb      	ldr	r3, [r7, #12]
 800ba76:	e853 3f00 	ldrex	r3, [r3]
 800ba7a:	60bb      	str	r3, [r7, #8]
 800ba7c:	68bb      	ldr	r3, [r7, #8]
 800ba7e:	f023 0310 	bic.w	r3, r3, #16
 800ba82:	647b      	str	r3, [r7, #68]	; 0x44
 800ba84:	687b      	ldr	r3, [r7, #4]
 800ba86:	681b      	ldr	r3, [r3, #0]
 800ba88:	330c      	adds	r3, #12
 800ba8a:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800ba8c:	61ba      	str	r2, [r7, #24]
 800ba8e:	617b      	str	r3, [r7, #20]
 800ba90:	6979      	ldr	r1, [r7, #20]
 800ba92:	69ba      	ldr	r2, [r7, #24]
 800ba94:	e841 2300 	strex	r3, r2, [r1]
 800ba98:	613b      	str	r3, [r7, #16]
 800ba9a:	693b      	ldr	r3, [r7, #16]
 800ba9c:	2b00      	cmp	r3, #0
 800ba9e:	d1e5      	bne.n	800ba6c <UART_EndRxTransfer+0x78>
 800baa0:	687b      	ldr	r3, [r7, #4]
 800baa2:	2220      	movs	r2, #32
 800baa4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800baa8:	687b      	ldr	r3, [r7, #4]
 800baaa:	2200      	movs	r2, #0
 800baac:	631a      	str	r2, [r3, #48]	; 0x30
 800baae:	bf00      	nop
 800bab0:	3754      	adds	r7, #84	; 0x54
 800bab2:	46bd      	mov	sp, r7
 800bab4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bab8:	4770      	bx	lr

0800baba <UART_DMAAbortOnError>:
 800baba:	b580      	push	{r7, lr}
 800babc:	b084      	sub	sp, #16
 800babe:	af00      	add	r7, sp, #0
 800bac0:	6078      	str	r0, [r7, #4]
 800bac2:	687b      	ldr	r3, [r7, #4]
 800bac4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bac6:	60fb      	str	r3, [r7, #12]
 800bac8:	68fb      	ldr	r3, [r7, #12]
 800baca:	2200      	movs	r2, #0
 800bacc:	85da      	strh	r2, [r3, #46]	; 0x2e
 800bace:	68fb      	ldr	r3, [r7, #12]
 800bad0:	2200      	movs	r2, #0
 800bad2:	84da      	strh	r2, [r3, #38]	; 0x26
 800bad4:	68f8      	ldr	r0, [r7, #12]
 800bad6:	f7ff fecb 	bl	800b870 <HAL_UART_ErrorCallback>
 800bada:	bf00      	nop
 800badc:	3710      	adds	r7, #16
 800bade:	46bd      	mov	sp, r7
 800bae0:	bd80      	pop	{r7, pc}

0800bae2 <UART_Transmit_IT>:
 800bae2:	b480      	push	{r7}
 800bae4:	b085      	sub	sp, #20
 800bae6:	af00      	add	r7, sp, #0
 800bae8:	6078      	str	r0, [r7, #4]
 800baea:	687b      	ldr	r3, [r7, #4]
 800baec:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800baf0:	b2db      	uxtb	r3, r3
 800baf2:	2b21      	cmp	r3, #33	; 0x21
 800baf4:	d13e      	bne.n	800bb74 <UART_Transmit_IT+0x92>
 800baf6:	687b      	ldr	r3, [r7, #4]
 800baf8:	689b      	ldr	r3, [r3, #8]
 800bafa:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800bafe:	d114      	bne.n	800bb2a <UART_Transmit_IT+0x48>
 800bb00:	687b      	ldr	r3, [r7, #4]
 800bb02:	691b      	ldr	r3, [r3, #16]
 800bb04:	2b00      	cmp	r3, #0
 800bb06:	d110      	bne.n	800bb2a <UART_Transmit_IT+0x48>
 800bb08:	687b      	ldr	r3, [r7, #4]
 800bb0a:	6a1b      	ldr	r3, [r3, #32]
 800bb0c:	60fb      	str	r3, [r7, #12]
 800bb0e:	68fb      	ldr	r3, [r7, #12]
 800bb10:	881b      	ldrh	r3, [r3, #0]
 800bb12:	461a      	mov	r2, r3
 800bb14:	687b      	ldr	r3, [r7, #4]
 800bb16:	681b      	ldr	r3, [r3, #0]
 800bb18:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800bb1c:	605a      	str	r2, [r3, #4]
 800bb1e:	687b      	ldr	r3, [r7, #4]
 800bb20:	6a1b      	ldr	r3, [r3, #32]
 800bb22:	1c9a      	adds	r2, r3, #2
 800bb24:	687b      	ldr	r3, [r7, #4]
 800bb26:	621a      	str	r2, [r3, #32]
 800bb28:	e008      	b.n	800bb3c <UART_Transmit_IT+0x5a>
 800bb2a:	687b      	ldr	r3, [r7, #4]
 800bb2c:	6a1b      	ldr	r3, [r3, #32]
 800bb2e:	1c59      	adds	r1, r3, #1
 800bb30:	687a      	ldr	r2, [r7, #4]
 800bb32:	6211      	str	r1, [r2, #32]
 800bb34:	781a      	ldrb	r2, [r3, #0]
 800bb36:	687b      	ldr	r3, [r7, #4]
 800bb38:	681b      	ldr	r3, [r3, #0]
 800bb3a:	605a      	str	r2, [r3, #4]
 800bb3c:	687b      	ldr	r3, [r7, #4]
 800bb3e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800bb40:	b29b      	uxth	r3, r3
 800bb42:	3b01      	subs	r3, #1
 800bb44:	b29b      	uxth	r3, r3
 800bb46:	687a      	ldr	r2, [r7, #4]
 800bb48:	4619      	mov	r1, r3
 800bb4a:	84d1      	strh	r1, [r2, #38]	; 0x26
 800bb4c:	2b00      	cmp	r3, #0
 800bb4e:	d10f      	bne.n	800bb70 <UART_Transmit_IT+0x8e>
 800bb50:	687b      	ldr	r3, [r7, #4]
 800bb52:	681b      	ldr	r3, [r3, #0]
 800bb54:	68da      	ldr	r2, [r3, #12]
 800bb56:	687b      	ldr	r3, [r7, #4]
 800bb58:	681b      	ldr	r3, [r3, #0]
 800bb5a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800bb5e:	60da      	str	r2, [r3, #12]
 800bb60:	687b      	ldr	r3, [r7, #4]
 800bb62:	681b      	ldr	r3, [r3, #0]
 800bb64:	68da      	ldr	r2, [r3, #12]
 800bb66:	687b      	ldr	r3, [r7, #4]
 800bb68:	681b      	ldr	r3, [r3, #0]
 800bb6a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800bb6e:	60da      	str	r2, [r3, #12]
 800bb70:	2300      	movs	r3, #0
 800bb72:	e000      	b.n	800bb76 <UART_Transmit_IT+0x94>
 800bb74:	2302      	movs	r3, #2
 800bb76:	4618      	mov	r0, r3
 800bb78:	3714      	adds	r7, #20
 800bb7a:	46bd      	mov	sp, r7
 800bb7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb80:	4770      	bx	lr

0800bb82 <UART_EndTransmit_IT>:
 800bb82:	b580      	push	{r7, lr}
 800bb84:	b082      	sub	sp, #8
 800bb86:	af00      	add	r7, sp, #0
 800bb88:	6078      	str	r0, [r7, #4]
 800bb8a:	687b      	ldr	r3, [r7, #4]
 800bb8c:	681b      	ldr	r3, [r3, #0]
 800bb8e:	68da      	ldr	r2, [r3, #12]
 800bb90:	687b      	ldr	r3, [r7, #4]
 800bb92:	681b      	ldr	r3, [r3, #0]
 800bb94:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800bb98:	60da      	str	r2, [r3, #12]
 800bb9a:	687b      	ldr	r3, [r7, #4]
 800bb9c:	2220      	movs	r2, #32
 800bb9e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bba2:	6878      	ldr	r0, [r7, #4]
 800bba4:	f7ff fe5a 	bl	800b85c <HAL_UART_TxCpltCallback>
 800bba8:	2300      	movs	r3, #0
 800bbaa:	4618      	mov	r0, r3
 800bbac:	3708      	adds	r7, #8
 800bbae:	46bd      	mov	sp, r7
 800bbb0:	bd80      	pop	{r7, pc}

0800bbb2 <UART_Receive_IT>:
 800bbb2:	b580      	push	{r7, lr}
 800bbb4:	b08c      	sub	sp, #48	; 0x30
 800bbb6:	af00      	add	r7, sp, #0
 800bbb8:	6078      	str	r0, [r7, #4]
 800bbba:	687b      	ldr	r3, [r7, #4]
 800bbbc:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800bbc0:	b2db      	uxtb	r3, r3
 800bbc2:	2b22      	cmp	r3, #34	; 0x22
 800bbc4:	f040 80ab 	bne.w	800bd1e <UART_Receive_IT+0x16c>
 800bbc8:	687b      	ldr	r3, [r7, #4]
 800bbca:	689b      	ldr	r3, [r3, #8]
 800bbcc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800bbd0:	d117      	bne.n	800bc02 <UART_Receive_IT+0x50>
 800bbd2:	687b      	ldr	r3, [r7, #4]
 800bbd4:	691b      	ldr	r3, [r3, #16]
 800bbd6:	2b00      	cmp	r3, #0
 800bbd8:	d113      	bne.n	800bc02 <UART_Receive_IT+0x50>
 800bbda:	2300      	movs	r3, #0
 800bbdc:	62fb      	str	r3, [r7, #44]	; 0x2c
 800bbde:	687b      	ldr	r3, [r7, #4]
 800bbe0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bbe2:	62bb      	str	r3, [r7, #40]	; 0x28
 800bbe4:	687b      	ldr	r3, [r7, #4]
 800bbe6:	681b      	ldr	r3, [r3, #0]
 800bbe8:	685b      	ldr	r3, [r3, #4]
 800bbea:	b29b      	uxth	r3, r3
 800bbec:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800bbf0:	b29a      	uxth	r2, r3
 800bbf2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bbf4:	801a      	strh	r2, [r3, #0]
 800bbf6:	687b      	ldr	r3, [r7, #4]
 800bbf8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bbfa:	1c9a      	adds	r2, r3, #2
 800bbfc:	687b      	ldr	r3, [r7, #4]
 800bbfe:	629a      	str	r2, [r3, #40]	; 0x28
 800bc00:	e026      	b.n	800bc50 <UART_Receive_IT+0x9e>
 800bc02:	687b      	ldr	r3, [r7, #4]
 800bc04:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bc06:	62fb      	str	r3, [r7, #44]	; 0x2c
 800bc08:	2300      	movs	r3, #0
 800bc0a:	62bb      	str	r3, [r7, #40]	; 0x28
 800bc0c:	687b      	ldr	r3, [r7, #4]
 800bc0e:	689b      	ldr	r3, [r3, #8]
 800bc10:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800bc14:	d007      	beq.n	800bc26 <UART_Receive_IT+0x74>
 800bc16:	687b      	ldr	r3, [r7, #4]
 800bc18:	689b      	ldr	r3, [r3, #8]
 800bc1a:	2b00      	cmp	r3, #0
 800bc1c:	d10a      	bne.n	800bc34 <UART_Receive_IT+0x82>
 800bc1e:	687b      	ldr	r3, [r7, #4]
 800bc20:	691b      	ldr	r3, [r3, #16]
 800bc22:	2b00      	cmp	r3, #0
 800bc24:	d106      	bne.n	800bc34 <UART_Receive_IT+0x82>
 800bc26:	687b      	ldr	r3, [r7, #4]
 800bc28:	681b      	ldr	r3, [r3, #0]
 800bc2a:	685b      	ldr	r3, [r3, #4]
 800bc2c:	b2da      	uxtb	r2, r3
 800bc2e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bc30:	701a      	strb	r2, [r3, #0]
 800bc32:	e008      	b.n	800bc46 <UART_Receive_IT+0x94>
 800bc34:	687b      	ldr	r3, [r7, #4]
 800bc36:	681b      	ldr	r3, [r3, #0]
 800bc38:	685b      	ldr	r3, [r3, #4]
 800bc3a:	b2db      	uxtb	r3, r3
 800bc3c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800bc40:	b2da      	uxtb	r2, r3
 800bc42:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bc44:	701a      	strb	r2, [r3, #0]
 800bc46:	687b      	ldr	r3, [r7, #4]
 800bc48:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bc4a:	1c5a      	adds	r2, r3, #1
 800bc4c:	687b      	ldr	r3, [r7, #4]
 800bc4e:	629a      	str	r2, [r3, #40]	; 0x28
 800bc50:	687b      	ldr	r3, [r7, #4]
 800bc52:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800bc54:	b29b      	uxth	r3, r3
 800bc56:	3b01      	subs	r3, #1
 800bc58:	b29b      	uxth	r3, r3
 800bc5a:	687a      	ldr	r2, [r7, #4]
 800bc5c:	4619      	mov	r1, r3
 800bc5e:	85d1      	strh	r1, [r2, #46]	; 0x2e
 800bc60:	2b00      	cmp	r3, #0
 800bc62:	d15a      	bne.n	800bd1a <UART_Receive_IT+0x168>
 800bc64:	687b      	ldr	r3, [r7, #4]
 800bc66:	681b      	ldr	r3, [r3, #0]
 800bc68:	68da      	ldr	r2, [r3, #12]
 800bc6a:	687b      	ldr	r3, [r7, #4]
 800bc6c:	681b      	ldr	r3, [r3, #0]
 800bc6e:	f022 0220 	bic.w	r2, r2, #32
 800bc72:	60da      	str	r2, [r3, #12]
 800bc74:	687b      	ldr	r3, [r7, #4]
 800bc76:	681b      	ldr	r3, [r3, #0]
 800bc78:	68da      	ldr	r2, [r3, #12]
 800bc7a:	687b      	ldr	r3, [r7, #4]
 800bc7c:	681b      	ldr	r3, [r3, #0]
 800bc7e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800bc82:	60da      	str	r2, [r3, #12]
 800bc84:	687b      	ldr	r3, [r7, #4]
 800bc86:	681b      	ldr	r3, [r3, #0]
 800bc88:	695a      	ldr	r2, [r3, #20]
 800bc8a:	687b      	ldr	r3, [r7, #4]
 800bc8c:	681b      	ldr	r3, [r3, #0]
 800bc8e:	f022 0201 	bic.w	r2, r2, #1
 800bc92:	615a      	str	r2, [r3, #20]
 800bc94:	687b      	ldr	r3, [r7, #4]
 800bc96:	2220      	movs	r2, #32
 800bc98:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800bc9c:	687b      	ldr	r3, [r7, #4]
 800bc9e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bca0:	2b01      	cmp	r3, #1
 800bca2:	d135      	bne.n	800bd10 <UART_Receive_IT+0x15e>
 800bca4:	687b      	ldr	r3, [r7, #4]
 800bca6:	2200      	movs	r2, #0
 800bca8:	631a      	str	r2, [r3, #48]	; 0x30
 800bcaa:	687b      	ldr	r3, [r7, #4]
 800bcac:	681b      	ldr	r3, [r3, #0]
 800bcae:	330c      	adds	r3, #12
 800bcb0:	617b      	str	r3, [r7, #20]
 800bcb2:	697b      	ldr	r3, [r7, #20]
 800bcb4:	e853 3f00 	ldrex	r3, [r3]
 800bcb8:	613b      	str	r3, [r7, #16]
 800bcba:	693b      	ldr	r3, [r7, #16]
 800bcbc:	f023 0310 	bic.w	r3, r3, #16
 800bcc0:	627b      	str	r3, [r7, #36]	; 0x24
 800bcc2:	687b      	ldr	r3, [r7, #4]
 800bcc4:	681b      	ldr	r3, [r3, #0]
 800bcc6:	330c      	adds	r3, #12
 800bcc8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800bcca:	623a      	str	r2, [r7, #32]
 800bccc:	61fb      	str	r3, [r7, #28]
 800bcce:	69f9      	ldr	r1, [r7, #28]
 800bcd0:	6a3a      	ldr	r2, [r7, #32]
 800bcd2:	e841 2300 	strex	r3, r2, [r1]
 800bcd6:	61bb      	str	r3, [r7, #24]
 800bcd8:	69bb      	ldr	r3, [r7, #24]
 800bcda:	2b00      	cmp	r3, #0
 800bcdc:	d1e5      	bne.n	800bcaa <UART_Receive_IT+0xf8>
 800bcde:	687b      	ldr	r3, [r7, #4]
 800bce0:	681b      	ldr	r3, [r3, #0]
 800bce2:	681b      	ldr	r3, [r3, #0]
 800bce4:	f003 0310 	and.w	r3, r3, #16
 800bce8:	2b10      	cmp	r3, #16
 800bcea:	d10a      	bne.n	800bd02 <UART_Receive_IT+0x150>
 800bcec:	2300      	movs	r3, #0
 800bcee:	60fb      	str	r3, [r7, #12]
 800bcf0:	687b      	ldr	r3, [r7, #4]
 800bcf2:	681b      	ldr	r3, [r3, #0]
 800bcf4:	681b      	ldr	r3, [r3, #0]
 800bcf6:	60fb      	str	r3, [r7, #12]
 800bcf8:	687b      	ldr	r3, [r7, #4]
 800bcfa:	681b      	ldr	r3, [r3, #0]
 800bcfc:	685b      	ldr	r3, [r3, #4]
 800bcfe:	60fb      	str	r3, [r7, #12]
 800bd00:	68fb      	ldr	r3, [r7, #12]
 800bd02:	687b      	ldr	r3, [r7, #4]
 800bd04:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800bd06:	4619      	mov	r1, r3
 800bd08:	6878      	ldr	r0, [r7, #4]
 800bd0a:	f7ff fdbb 	bl	800b884 <HAL_UARTEx_RxEventCallback>
 800bd0e:	e002      	b.n	800bd16 <UART_Receive_IT+0x164>
 800bd10:	6878      	ldr	r0, [r7, #4]
 800bd12:	f7f9 ff53 	bl	8005bbc <HAL_UART_RxCpltCallback>
 800bd16:	2300      	movs	r3, #0
 800bd18:	e002      	b.n	800bd20 <UART_Receive_IT+0x16e>
 800bd1a:	2300      	movs	r3, #0
 800bd1c:	e000      	b.n	800bd20 <UART_Receive_IT+0x16e>
 800bd1e:	2302      	movs	r3, #2
 800bd20:	4618      	mov	r0, r3
 800bd22:	3730      	adds	r7, #48	; 0x30
 800bd24:	46bd      	mov	sp, r7
 800bd26:	bd80      	pop	{r7, pc}

0800bd28 <UART_SetConfig>:
 800bd28:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800bd2c:	b0c0      	sub	sp, #256	; 0x100
 800bd2e:	af00      	add	r7, sp, #0
 800bd30:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 800bd34:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bd38:	681b      	ldr	r3, [r3, #0]
 800bd3a:	691b      	ldr	r3, [r3, #16]
 800bd3c:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 800bd40:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bd44:	68d9      	ldr	r1, [r3, #12]
 800bd46:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bd4a:	681a      	ldr	r2, [r3, #0]
 800bd4c:	ea40 0301 	orr.w	r3, r0, r1
 800bd50:	6113      	str	r3, [r2, #16]
 800bd52:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bd56:	689a      	ldr	r2, [r3, #8]
 800bd58:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bd5c:	691b      	ldr	r3, [r3, #16]
 800bd5e:	431a      	orrs	r2, r3
 800bd60:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bd64:	695b      	ldr	r3, [r3, #20]
 800bd66:	431a      	orrs	r2, r3
 800bd68:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bd6c:	69db      	ldr	r3, [r3, #28]
 800bd6e:	4313      	orrs	r3, r2
 800bd70:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 800bd74:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bd78:	681b      	ldr	r3, [r3, #0]
 800bd7a:	68db      	ldr	r3, [r3, #12]
 800bd7c:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 800bd80:	f021 010c 	bic.w	r1, r1, #12
 800bd84:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bd88:	681a      	ldr	r2, [r3, #0]
 800bd8a:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 800bd8e:	430b      	orrs	r3, r1
 800bd90:	60d3      	str	r3, [r2, #12]
 800bd92:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bd96:	681b      	ldr	r3, [r3, #0]
 800bd98:	695b      	ldr	r3, [r3, #20]
 800bd9a:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 800bd9e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bda2:	6999      	ldr	r1, [r3, #24]
 800bda4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bda8:	681a      	ldr	r2, [r3, #0]
 800bdaa:	ea40 0301 	orr.w	r3, r0, r1
 800bdae:	6153      	str	r3, [r2, #20]
 800bdb0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bdb4:	681a      	ldr	r2, [r3, #0]
 800bdb6:	4b8f      	ldr	r3, [pc, #572]	; (800bff4 <UART_SetConfig+0x2cc>)
 800bdb8:	429a      	cmp	r2, r3
 800bdba:	d005      	beq.n	800bdc8 <UART_SetConfig+0xa0>
 800bdbc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bdc0:	681a      	ldr	r2, [r3, #0]
 800bdc2:	4b8d      	ldr	r3, [pc, #564]	; (800bff8 <UART_SetConfig+0x2d0>)
 800bdc4:	429a      	cmp	r2, r3
 800bdc6:	d104      	bne.n	800bdd2 <UART_SetConfig+0xaa>
 800bdc8:	f7fc fda4 	bl	8008914 <HAL_RCC_GetPCLK2Freq>
 800bdcc:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800bdd0:	e003      	b.n	800bdda <UART_SetConfig+0xb2>
 800bdd2:	f7fc fd8b 	bl	80088ec <HAL_RCC_GetPCLK1Freq>
 800bdd6:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800bdda:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bdde:	69db      	ldr	r3, [r3, #28]
 800bde0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800bde4:	f040 810c 	bne.w	800c000 <UART_SetConfig+0x2d8>
 800bde8:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800bdec:	2200      	movs	r2, #0
 800bdee:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800bdf2:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 800bdf6:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 800bdfa:	4622      	mov	r2, r4
 800bdfc:	462b      	mov	r3, r5
 800bdfe:	1891      	adds	r1, r2, r2
 800be00:	65b9      	str	r1, [r7, #88]	; 0x58
 800be02:	415b      	adcs	r3, r3
 800be04:	65fb      	str	r3, [r7, #92]	; 0x5c
 800be06:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800be0a:	4621      	mov	r1, r4
 800be0c:	eb12 0801 	adds.w	r8, r2, r1
 800be10:	4629      	mov	r1, r5
 800be12:	eb43 0901 	adc.w	r9, r3, r1
 800be16:	f04f 0200 	mov.w	r2, #0
 800be1a:	f04f 0300 	mov.w	r3, #0
 800be1e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800be22:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800be26:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800be2a:	4690      	mov	r8, r2
 800be2c:	4699      	mov	r9, r3
 800be2e:	4623      	mov	r3, r4
 800be30:	eb18 0303 	adds.w	r3, r8, r3
 800be34:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800be38:	462b      	mov	r3, r5
 800be3a:	eb49 0303 	adc.w	r3, r9, r3
 800be3e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800be42:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800be46:	685b      	ldr	r3, [r3, #4]
 800be48:	2200      	movs	r2, #0
 800be4a:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800be4e:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 800be52:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 800be56:	460b      	mov	r3, r1
 800be58:	18db      	adds	r3, r3, r3
 800be5a:	653b      	str	r3, [r7, #80]	; 0x50
 800be5c:	4613      	mov	r3, r2
 800be5e:	eb42 0303 	adc.w	r3, r2, r3
 800be62:	657b      	str	r3, [r7, #84]	; 0x54
 800be64:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800be68:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800be6c:	f7f4 ff0c 	bl	8000c88 <__aeabi_uldivmod>
 800be70:	4602      	mov	r2, r0
 800be72:	460b      	mov	r3, r1
 800be74:	4b61      	ldr	r3, [pc, #388]	; (800bffc <UART_SetConfig+0x2d4>)
 800be76:	fba3 2302 	umull	r2, r3, r3, r2
 800be7a:	095b      	lsrs	r3, r3, #5
 800be7c:	011c      	lsls	r4, r3, #4
 800be7e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800be82:	2200      	movs	r2, #0
 800be84:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800be88:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 800be8c:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 800be90:	4642      	mov	r2, r8
 800be92:	464b      	mov	r3, r9
 800be94:	1891      	adds	r1, r2, r2
 800be96:	64b9      	str	r1, [r7, #72]	; 0x48
 800be98:	415b      	adcs	r3, r3
 800be9a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800be9c:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 800bea0:	4641      	mov	r1, r8
 800bea2:	eb12 0a01 	adds.w	sl, r2, r1
 800bea6:	4649      	mov	r1, r9
 800bea8:	eb43 0b01 	adc.w	fp, r3, r1
 800beac:	f04f 0200 	mov.w	r2, #0
 800beb0:	f04f 0300 	mov.w	r3, #0
 800beb4:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800beb8:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800bebc:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800bec0:	4692      	mov	sl, r2
 800bec2:	469b      	mov	fp, r3
 800bec4:	4643      	mov	r3, r8
 800bec6:	eb1a 0303 	adds.w	r3, sl, r3
 800beca:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800bece:	464b      	mov	r3, r9
 800bed0:	eb4b 0303 	adc.w	r3, fp, r3
 800bed4:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 800bed8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bedc:	685b      	ldr	r3, [r3, #4]
 800bede:	2200      	movs	r2, #0
 800bee0:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800bee4:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 800bee8:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 800beec:	460b      	mov	r3, r1
 800beee:	18db      	adds	r3, r3, r3
 800bef0:	643b      	str	r3, [r7, #64]	; 0x40
 800bef2:	4613      	mov	r3, r2
 800bef4:	eb42 0303 	adc.w	r3, r2, r3
 800bef8:	647b      	str	r3, [r7, #68]	; 0x44
 800befa:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800befe:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 800bf02:	f7f4 fec1 	bl	8000c88 <__aeabi_uldivmod>
 800bf06:	4602      	mov	r2, r0
 800bf08:	460b      	mov	r3, r1
 800bf0a:	4611      	mov	r1, r2
 800bf0c:	4b3b      	ldr	r3, [pc, #236]	; (800bffc <UART_SetConfig+0x2d4>)
 800bf0e:	fba3 2301 	umull	r2, r3, r3, r1
 800bf12:	095b      	lsrs	r3, r3, #5
 800bf14:	2264      	movs	r2, #100	; 0x64
 800bf16:	fb02 f303 	mul.w	r3, r2, r3
 800bf1a:	1acb      	subs	r3, r1, r3
 800bf1c:	00db      	lsls	r3, r3, #3
 800bf1e:	f103 0232 	add.w	r2, r3, #50	; 0x32
 800bf22:	4b36      	ldr	r3, [pc, #216]	; (800bffc <UART_SetConfig+0x2d4>)
 800bf24:	fba3 2302 	umull	r2, r3, r3, r2
 800bf28:	095b      	lsrs	r3, r3, #5
 800bf2a:	005b      	lsls	r3, r3, #1
 800bf2c:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800bf30:	441c      	add	r4, r3
 800bf32:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800bf36:	2200      	movs	r2, #0
 800bf38:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800bf3c:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 800bf40:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 800bf44:	4642      	mov	r2, r8
 800bf46:	464b      	mov	r3, r9
 800bf48:	1891      	adds	r1, r2, r2
 800bf4a:	63b9      	str	r1, [r7, #56]	; 0x38
 800bf4c:	415b      	adcs	r3, r3
 800bf4e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800bf50:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800bf54:	4641      	mov	r1, r8
 800bf56:	1851      	adds	r1, r2, r1
 800bf58:	6339      	str	r1, [r7, #48]	; 0x30
 800bf5a:	4649      	mov	r1, r9
 800bf5c:	414b      	adcs	r3, r1
 800bf5e:	637b      	str	r3, [r7, #52]	; 0x34
 800bf60:	f04f 0200 	mov.w	r2, #0
 800bf64:	f04f 0300 	mov.w	r3, #0
 800bf68:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 800bf6c:	4659      	mov	r1, fp
 800bf6e:	00cb      	lsls	r3, r1, #3
 800bf70:	4651      	mov	r1, sl
 800bf72:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800bf76:	4651      	mov	r1, sl
 800bf78:	00ca      	lsls	r2, r1, #3
 800bf7a:	4610      	mov	r0, r2
 800bf7c:	4619      	mov	r1, r3
 800bf7e:	4603      	mov	r3, r0
 800bf80:	4642      	mov	r2, r8
 800bf82:	189b      	adds	r3, r3, r2
 800bf84:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800bf88:	464b      	mov	r3, r9
 800bf8a:	460a      	mov	r2, r1
 800bf8c:	eb42 0303 	adc.w	r3, r2, r3
 800bf90:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800bf94:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bf98:	685b      	ldr	r3, [r3, #4]
 800bf9a:	2200      	movs	r2, #0
 800bf9c:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800bfa0:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 800bfa4:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 800bfa8:	460b      	mov	r3, r1
 800bfaa:	18db      	adds	r3, r3, r3
 800bfac:	62bb      	str	r3, [r7, #40]	; 0x28
 800bfae:	4613      	mov	r3, r2
 800bfb0:	eb42 0303 	adc.w	r3, r2, r3
 800bfb4:	62fb      	str	r3, [r7, #44]	; 0x2c
 800bfb6:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800bfba:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 800bfbe:	f7f4 fe63 	bl	8000c88 <__aeabi_uldivmod>
 800bfc2:	4602      	mov	r2, r0
 800bfc4:	460b      	mov	r3, r1
 800bfc6:	4b0d      	ldr	r3, [pc, #52]	; (800bffc <UART_SetConfig+0x2d4>)
 800bfc8:	fba3 1302 	umull	r1, r3, r3, r2
 800bfcc:	095b      	lsrs	r3, r3, #5
 800bfce:	2164      	movs	r1, #100	; 0x64
 800bfd0:	fb01 f303 	mul.w	r3, r1, r3
 800bfd4:	1ad3      	subs	r3, r2, r3
 800bfd6:	00db      	lsls	r3, r3, #3
 800bfd8:	3332      	adds	r3, #50	; 0x32
 800bfda:	4a08      	ldr	r2, [pc, #32]	; (800bffc <UART_SetConfig+0x2d4>)
 800bfdc:	fba2 2303 	umull	r2, r3, r2, r3
 800bfe0:	095b      	lsrs	r3, r3, #5
 800bfe2:	f003 0207 	and.w	r2, r3, #7
 800bfe6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800bfea:	681b      	ldr	r3, [r3, #0]
 800bfec:	4422      	add	r2, r4
 800bfee:	609a      	str	r2, [r3, #8]
 800bff0:	e105      	b.n	800c1fe <UART_SetConfig+0x4d6>
 800bff2:	bf00      	nop
 800bff4:	40011000 	.word	0x40011000
 800bff8:	40011400 	.word	0x40011400
 800bffc:	51eb851f 	.word	0x51eb851f
 800c000:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800c004:	2200      	movs	r2, #0
 800c006:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800c00a:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800c00e:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 800c012:	4642      	mov	r2, r8
 800c014:	464b      	mov	r3, r9
 800c016:	1891      	adds	r1, r2, r2
 800c018:	6239      	str	r1, [r7, #32]
 800c01a:	415b      	adcs	r3, r3
 800c01c:	627b      	str	r3, [r7, #36]	; 0x24
 800c01e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800c022:	4641      	mov	r1, r8
 800c024:	1854      	adds	r4, r2, r1
 800c026:	4649      	mov	r1, r9
 800c028:	eb43 0501 	adc.w	r5, r3, r1
 800c02c:	f04f 0200 	mov.w	r2, #0
 800c030:	f04f 0300 	mov.w	r3, #0
 800c034:	00eb      	lsls	r3, r5, #3
 800c036:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800c03a:	00e2      	lsls	r2, r4, #3
 800c03c:	4614      	mov	r4, r2
 800c03e:	461d      	mov	r5, r3
 800c040:	4643      	mov	r3, r8
 800c042:	18e3      	adds	r3, r4, r3
 800c044:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800c048:	464b      	mov	r3, r9
 800c04a:	eb45 0303 	adc.w	r3, r5, r3
 800c04e:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800c052:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800c056:	685b      	ldr	r3, [r3, #4]
 800c058:	2200      	movs	r2, #0
 800c05a:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800c05e:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800c062:	f04f 0200 	mov.w	r2, #0
 800c066:	f04f 0300 	mov.w	r3, #0
 800c06a:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 800c06e:	4629      	mov	r1, r5
 800c070:	008b      	lsls	r3, r1, #2
 800c072:	4621      	mov	r1, r4
 800c074:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800c078:	4621      	mov	r1, r4
 800c07a:	008a      	lsls	r2, r1, #2
 800c07c:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 800c080:	f7f4 fe02 	bl	8000c88 <__aeabi_uldivmod>
 800c084:	4602      	mov	r2, r0
 800c086:	460b      	mov	r3, r1
 800c088:	4b60      	ldr	r3, [pc, #384]	; (800c20c <UART_SetConfig+0x4e4>)
 800c08a:	fba3 2302 	umull	r2, r3, r3, r2
 800c08e:	095b      	lsrs	r3, r3, #5
 800c090:	011c      	lsls	r4, r3, #4
 800c092:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800c096:	2200      	movs	r2, #0
 800c098:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800c09c:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800c0a0:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 800c0a4:	4642      	mov	r2, r8
 800c0a6:	464b      	mov	r3, r9
 800c0a8:	1891      	adds	r1, r2, r2
 800c0aa:	61b9      	str	r1, [r7, #24]
 800c0ac:	415b      	adcs	r3, r3
 800c0ae:	61fb      	str	r3, [r7, #28]
 800c0b0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800c0b4:	4641      	mov	r1, r8
 800c0b6:	1851      	adds	r1, r2, r1
 800c0b8:	6139      	str	r1, [r7, #16]
 800c0ba:	4649      	mov	r1, r9
 800c0bc:	414b      	adcs	r3, r1
 800c0be:	617b      	str	r3, [r7, #20]
 800c0c0:	f04f 0200 	mov.w	r2, #0
 800c0c4:	f04f 0300 	mov.w	r3, #0
 800c0c8:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800c0cc:	4659      	mov	r1, fp
 800c0ce:	00cb      	lsls	r3, r1, #3
 800c0d0:	4651      	mov	r1, sl
 800c0d2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800c0d6:	4651      	mov	r1, sl
 800c0d8:	00ca      	lsls	r2, r1, #3
 800c0da:	4610      	mov	r0, r2
 800c0dc:	4619      	mov	r1, r3
 800c0de:	4603      	mov	r3, r0
 800c0e0:	4642      	mov	r2, r8
 800c0e2:	189b      	adds	r3, r3, r2
 800c0e4:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800c0e8:	464b      	mov	r3, r9
 800c0ea:	460a      	mov	r2, r1
 800c0ec:	eb42 0303 	adc.w	r3, r2, r3
 800c0f0:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800c0f4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800c0f8:	685b      	ldr	r3, [r3, #4]
 800c0fa:	2200      	movs	r2, #0
 800c0fc:	67bb      	str	r3, [r7, #120]	; 0x78
 800c0fe:	67fa      	str	r2, [r7, #124]	; 0x7c
 800c100:	f04f 0200 	mov.w	r2, #0
 800c104:	f04f 0300 	mov.w	r3, #0
 800c108:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 800c10c:	4649      	mov	r1, r9
 800c10e:	008b      	lsls	r3, r1, #2
 800c110:	4641      	mov	r1, r8
 800c112:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800c116:	4641      	mov	r1, r8
 800c118:	008a      	lsls	r2, r1, #2
 800c11a:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800c11e:	f7f4 fdb3 	bl	8000c88 <__aeabi_uldivmod>
 800c122:	4602      	mov	r2, r0
 800c124:	460b      	mov	r3, r1
 800c126:	4b39      	ldr	r3, [pc, #228]	; (800c20c <UART_SetConfig+0x4e4>)
 800c128:	fba3 1302 	umull	r1, r3, r3, r2
 800c12c:	095b      	lsrs	r3, r3, #5
 800c12e:	2164      	movs	r1, #100	; 0x64
 800c130:	fb01 f303 	mul.w	r3, r1, r3
 800c134:	1ad3      	subs	r3, r2, r3
 800c136:	011b      	lsls	r3, r3, #4
 800c138:	3332      	adds	r3, #50	; 0x32
 800c13a:	4a34      	ldr	r2, [pc, #208]	; (800c20c <UART_SetConfig+0x4e4>)
 800c13c:	fba2 2303 	umull	r2, r3, r2, r3
 800c140:	095b      	lsrs	r3, r3, #5
 800c142:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800c146:	441c      	add	r4, r3
 800c148:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800c14c:	2200      	movs	r2, #0
 800c14e:	673b      	str	r3, [r7, #112]	; 0x70
 800c150:	677a      	str	r2, [r7, #116]	; 0x74
 800c152:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 800c156:	4642      	mov	r2, r8
 800c158:	464b      	mov	r3, r9
 800c15a:	1891      	adds	r1, r2, r2
 800c15c:	60b9      	str	r1, [r7, #8]
 800c15e:	415b      	adcs	r3, r3
 800c160:	60fb      	str	r3, [r7, #12]
 800c162:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800c166:	4641      	mov	r1, r8
 800c168:	1851      	adds	r1, r2, r1
 800c16a:	6039      	str	r1, [r7, #0]
 800c16c:	4649      	mov	r1, r9
 800c16e:	414b      	adcs	r3, r1
 800c170:	607b      	str	r3, [r7, #4]
 800c172:	f04f 0200 	mov.w	r2, #0
 800c176:	f04f 0300 	mov.w	r3, #0
 800c17a:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800c17e:	4659      	mov	r1, fp
 800c180:	00cb      	lsls	r3, r1, #3
 800c182:	4651      	mov	r1, sl
 800c184:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800c188:	4651      	mov	r1, sl
 800c18a:	00ca      	lsls	r2, r1, #3
 800c18c:	4610      	mov	r0, r2
 800c18e:	4619      	mov	r1, r3
 800c190:	4603      	mov	r3, r0
 800c192:	4642      	mov	r2, r8
 800c194:	189b      	adds	r3, r3, r2
 800c196:	66bb      	str	r3, [r7, #104]	; 0x68
 800c198:	464b      	mov	r3, r9
 800c19a:	460a      	mov	r2, r1
 800c19c:	eb42 0303 	adc.w	r3, r2, r3
 800c1a0:	66fb      	str	r3, [r7, #108]	; 0x6c
 800c1a2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800c1a6:	685b      	ldr	r3, [r3, #4]
 800c1a8:	2200      	movs	r2, #0
 800c1aa:	663b      	str	r3, [r7, #96]	; 0x60
 800c1ac:	667a      	str	r2, [r7, #100]	; 0x64
 800c1ae:	f04f 0200 	mov.w	r2, #0
 800c1b2:	f04f 0300 	mov.w	r3, #0
 800c1b6:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 800c1ba:	4649      	mov	r1, r9
 800c1bc:	008b      	lsls	r3, r1, #2
 800c1be:	4641      	mov	r1, r8
 800c1c0:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800c1c4:	4641      	mov	r1, r8
 800c1c6:	008a      	lsls	r2, r1, #2
 800c1c8:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800c1cc:	f7f4 fd5c 	bl	8000c88 <__aeabi_uldivmod>
 800c1d0:	4602      	mov	r2, r0
 800c1d2:	460b      	mov	r3, r1
 800c1d4:	4b0d      	ldr	r3, [pc, #52]	; (800c20c <UART_SetConfig+0x4e4>)
 800c1d6:	fba3 1302 	umull	r1, r3, r3, r2
 800c1da:	095b      	lsrs	r3, r3, #5
 800c1dc:	2164      	movs	r1, #100	; 0x64
 800c1de:	fb01 f303 	mul.w	r3, r1, r3
 800c1e2:	1ad3      	subs	r3, r2, r3
 800c1e4:	011b      	lsls	r3, r3, #4
 800c1e6:	3332      	adds	r3, #50	; 0x32
 800c1e8:	4a08      	ldr	r2, [pc, #32]	; (800c20c <UART_SetConfig+0x4e4>)
 800c1ea:	fba2 2303 	umull	r2, r3, r2, r3
 800c1ee:	095b      	lsrs	r3, r3, #5
 800c1f0:	f003 020f 	and.w	r2, r3, #15
 800c1f4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800c1f8:	681b      	ldr	r3, [r3, #0]
 800c1fa:	4422      	add	r2, r4
 800c1fc:	609a      	str	r2, [r3, #8]
 800c1fe:	bf00      	nop
 800c200:	f507 7780 	add.w	r7, r7, #256	; 0x100
 800c204:	46bd      	mov	sp, r7
 800c206:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800c20a:	bf00      	nop
 800c20c:	51eb851f 	.word	0x51eb851f

0800c210 <__errno>:
 800c210:	4b01      	ldr	r3, [pc, #4]	; (800c218 <__errno+0x8>)
 800c212:	6818      	ldr	r0, [r3, #0]
 800c214:	4770      	bx	lr
 800c216:	bf00      	nop
 800c218:	200000a0 	.word	0x200000a0

0800c21c <__libc_init_array>:
 800c21c:	b570      	push	{r4, r5, r6, lr}
 800c21e:	4d0d      	ldr	r5, [pc, #52]	; (800c254 <__libc_init_array+0x38>)
 800c220:	4c0d      	ldr	r4, [pc, #52]	; (800c258 <__libc_init_array+0x3c>)
 800c222:	1b64      	subs	r4, r4, r5
 800c224:	10a4      	asrs	r4, r4, #2
 800c226:	2600      	movs	r6, #0
 800c228:	42a6      	cmp	r6, r4
 800c22a:	d109      	bne.n	800c240 <__libc_init_array+0x24>
 800c22c:	4d0b      	ldr	r5, [pc, #44]	; (800c25c <__libc_init_array+0x40>)
 800c22e:	4c0c      	ldr	r4, [pc, #48]	; (800c260 <__libc_init_array+0x44>)
 800c230:	f004 f950 	bl	80104d4 <_init>
 800c234:	1b64      	subs	r4, r4, r5
 800c236:	10a4      	asrs	r4, r4, #2
 800c238:	2600      	movs	r6, #0
 800c23a:	42a6      	cmp	r6, r4
 800c23c:	d105      	bne.n	800c24a <__libc_init_array+0x2e>
 800c23e:	bd70      	pop	{r4, r5, r6, pc}
 800c240:	f855 3b04 	ldr.w	r3, [r5], #4
 800c244:	4798      	blx	r3
 800c246:	3601      	adds	r6, #1
 800c248:	e7ee      	b.n	800c228 <__libc_init_array+0xc>
 800c24a:	f855 3b04 	ldr.w	r3, [r5], #4
 800c24e:	4798      	blx	r3
 800c250:	3601      	adds	r6, #1
 800c252:	e7f2      	b.n	800c23a <__libc_init_array+0x1e>
 800c254:	08010c48 	.word	0x08010c48
 800c258:	08010c48 	.word	0x08010c48
 800c25c:	08010c48 	.word	0x08010c48
 800c260:	08010c4c 	.word	0x08010c4c

0800c264 <memset>:
 800c264:	4402      	add	r2, r0
 800c266:	4603      	mov	r3, r0
 800c268:	4293      	cmp	r3, r2
 800c26a:	d100      	bne.n	800c26e <memset+0xa>
 800c26c:	4770      	bx	lr
 800c26e:	f803 1b01 	strb.w	r1, [r3], #1
 800c272:	e7f9      	b.n	800c268 <memset+0x4>

0800c274 <__cvt>:
 800c274:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c278:	ec55 4b10 	vmov	r4, r5, d0
 800c27c:	2d00      	cmp	r5, #0
 800c27e:	460e      	mov	r6, r1
 800c280:	4619      	mov	r1, r3
 800c282:	462b      	mov	r3, r5
 800c284:	bfbb      	ittet	lt
 800c286:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 800c28a:	461d      	movlt	r5, r3
 800c28c:	2300      	movge	r3, #0
 800c28e:	232d      	movlt	r3, #45	; 0x2d
 800c290:	700b      	strb	r3, [r1, #0]
 800c292:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c294:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800c298:	4691      	mov	r9, r2
 800c29a:	f023 0820 	bic.w	r8, r3, #32
 800c29e:	bfbc      	itt	lt
 800c2a0:	4622      	movlt	r2, r4
 800c2a2:	4614      	movlt	r4, r2
 800c2a4:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800c2a8:	d005      	beq.n	800c2b6 <__cvt+0x42>
 800c2aa:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800c2ae:	d100      	bne.n	800c2b2 <__cvt+0x3e>
 800c2b0:	3601      	adds	r6, #1
 800c2b2:	2102      	movs	r1, #2
 800c2b4:	e000      	b.n	800c2b8 <__cvt+0x44>
 800c2b6:	2103      	movs	r1, #3
 800c2b8:	ab03      	add	r3, sp, #12
 800c2ba:	9301      	str	r3, [sp, #4]
 800c2bc:	ab02      	add	r3, sp, #8
 800c2be:	9300      	str	r3, [sp, #0]
 800c2c0:	ec45 4b10 	vmov	d0, r4, r5
 800c2c4:	4653      	mov	r3, sl
 800c2c6:	4632      	mov	r2, r6
 800c2c8:	f000 fcea 	bl	800cca0 <_dtoa_r>
 800c2cc:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800c2d0:	4607      	mov	r7, r0
 800c2d2:	d102      	bne.n	800c2da <__cvt+0x66>
 800c2d4:	f019 0f01 	tst.w	r9, #1
 800c2d8:	d022      	beq.n	800c320 <__cvt+0xac>
 800c2da:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800c2de:	eb07 0906 	add.w	r9, r7, r6
 800c2e2:	d110      	bne.n	800c306 <__cvt+0x92>
 800c2e4:	783b      	ldrb	r3, [r7, #0]
 800c2e6:	2b30      	cmp	r3, #48	; 0x30
 800c2e8:	d10a      	bne.n	800c300 <__cvt+0x8c>
 800c2ea:	2200      	movs	r2, #0
 800c2ec:	2300      	movs	r3, #0
 800c2ee:	4620      	mov	r0, r4
 800c2f0:	4629      	mov	r1, r5
 800c2f2:	f7f4 fc09 	bl	8000b08 <__aeabi_dcmpeq>
 800c2f6:	b918      	cbnz	r0, 800c300 <__cvt+0x8c>
 800c2f8:	f1c6 0601 	rsb	r6, r6, #1
 800c2fc:	f8ca 6000 	str.w	r6, [sl]
 800c300:	f8da 3000 	ldr.w	r3, [sl]
 800c304:	4499      	add	r9, r3
 800c306:	2200      	movs	r2, #0
 800c308:	2300      	movs	r3, #0
 800c30a:	4620      	mov	r0, r4
 800c30c:	4629      	mov	r1, r5
 800c30e:	f7f4 fbfb 	bl	8000b08 <__aeabi_dcmpeq>
 800c312:	b108      	cbz	r0, 800c318 <__cvt+0xa4>
 800c314:	f8cd 900c 	str.w	r9, [sp, #12]
 800c318:	2230      	movs	r2, #48	; 0x30
 800c31a:	9b03      	ldr	r3, [sp, #12]
 800c31c:	454b      	cmp	r3, r9
 800c31e:	d307      	bcc.n	800c330 <__cvt+0xbc>
 800c320:	9b03      	ldr	r3, [sp, #12]
 800c322:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800c324:	1bdb      	subs	r3, r3, r7
 800c326:	4638      	mov	r0, r7
 800c328:	6013      	str	r3, [r2, #0]
 800c32a:	b004      	add	sp, #16
 800c32c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c330:	1c59      	adds	r1, r3, #1
 800c332:	9103      	str	r1, [sp, #12]
 800c334:	701a      	strb	r2, [r3, #0]
 800c336:	e7f0      	b.n	800c31a <__cvt+0xa6>

0800c338 <__exponent>:
 800c338:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c33a:	4603      	mov	r3, r0
 800c33c:	2900      	cmp	r1, #0
 800c33e:	bfb8      	it	lt
 800c340:	4249      	neglt	r1, r1
 800c342:	f803 2b02 	strb.w	r2, [r3], #2
 800c346:	bfb4      	ite	lt
 800c348:	222d      	movlt	r2, #45	; 0x2d
 800c34a:	222b      	movge	r2, #43	; 0x2b
 800c34c:	2909      	cmp	r1, #9
 800c34e:	7042      	strb	r2, [r0, #1]
 800c350:	dd2a      	ble.n	800c3a8 <__exponent+0x70>
 800c352:	f10d 0407 	add.w	r4, sp, #7
 800c356:	46a4      	mov	ip, r4
 800c358:	270a      	movs	r7, #10
 800c35a:	46a6      	mov	lr, r4
 800c35c:	460a      	mov	r2, r1
 800c35e:	fb91 f6f7 	sdiv	r6, r1, r7
 800c362:	fb07 1516 	mls	r5, r7, r6, r1
 800c366:	3530      	adds	r5, #48	; 0x30
 800c368:	2a63      	cmp	r2, #99	; 0x63
 800c36a:	f104 34ff 	add.w	r4, r4, #4294967295
 800c36e:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800c372:	4631      	mov	r1, r6
 800c374:	dcf1      	bgt.n	800c35a <__exponent+0x22>
 800c376:	3130      	adds	r1, #48	; 0x30
 800c378:	f1ae 0502 	sub.w	r5, lr, #2
 800c37c:	f804 1c01 	strb.w	r1, [r4, #-1]
 800c380:	1c44      	adds	r4, r0, #1
 800c382:	4629      	mov	r1, r5
 800c384:	4561      	cmp	r1, ip
 800c386:	d30a      	bcc.n	800c39e <__exponent+0x66>
 800c388:	f10d 0209 	add.w	r2, sp, #9
 800c38c:	eba2 020e 	sub.w	r2, r2, lr
 800c390:	4565      	cmp	r5, ip
 800c392:	bf88      	it	hi
 800c394:	2200      	movhi	r2, #0
 800c396:	4413      	add	r3, r2
 800c398:	1a18      	subs	r0, r3, r0
 800c39a:	b003      	add	sp, #12
 800c39c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c39e:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c3a2:	f804 2f01 	strb.w	r2, [r4, #1]!
 800c3a6:	e7ed      	b.n	800c384 <__exponent+0x4c>
 800c3a8:	2330      	movs	r3, #48	; 0x30
 800c3aa:	3130      	adds	r1, #48	; 0x30
 800c3ac:	7083      	strb	r3, [r0, #2]
 800c3ae:	70c1      	strb	r1, [r0, #3]
 800c3b0:	1d03      	adds	r3, r0, #4
 800c3b2:	e7f1      	b.n	800c398 <__exponent+0x60>

0800c3b4 <_printf_float>:
 800c3b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c3b8:	ed2d 8b02 	vpush	{d8}
 800c3bc:	b08d      	sub	sp, #52	; 0x34
 800c3be:	460c      	mov	r4, r1
 800c3c0:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 800c3c4:	4616      	mov	r6, r2
 800c3c6:	461f      	mov	r7, r3
 800c3c8:	4605      	mov	r5, r0
 800c3ca:	f001 fa57 	bl	800d87c <_localeconv_r>
 800c3ce:	f8d0 a000 	ldr.w	sl, [r0]
 800c3d2:	4650      	mov	r0, sl
 800c3d4:	f7f3 ff1c 	bl	8000210 <strlen>
 800c3d8:	2300      	movs	r3, #0
 800c3da:	930a      	str	r3, [sp, #40]	; 0x28
 800c3dc:	6823      	ldr	r3, [r4, #0]
 800c3de:	9305      	str	r3, [sp, #20]
 800c3e0:	f8d8 3000 	ldr.w	r3, [r8]
 800c3e4:	f894 b018 	ldrb.w	fp, [r4, #24]
 800c3e8:	3307      	adds	r3, #7
 800c3ea:	f023 0307 	bic.w	r3, r3, #7
 800c3ee:	f103 0208 	add.w	r2, r3, #8
 800c3f2:	f8c8 2000 	str.w	r2, [r8]
 800c3f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c3fa:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800c3fe:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 800c402:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800c406:	9307      	str	r3, [sp, #28]
 800c408:	f8cd 8018 	str.w	r8, [sp, #24]
 800c40c:	ee08 0a10 	vmov	s16, r0
 800c410:	4b9f      	ldr	r3, [pc, #636]	; (800c690 <_printf_float+0x2dc>)
 800c412:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800c416:	f04f 32ff 	mov.w	r2, #4294967295
 800c41a:	f7f4 fba7 	bl	8000b6c <__aeabi_dcmpun>
 800c41e:	bb88      	cbnz	r0, 800c484 <_printf_float+0xd0>
 800c420:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800c424:	4b9a      	ldr	r3, [pc, #616]	; (800c690 <_printf_float+0x2dc>)
 800c426:	f04f 32ff 	mov.w	r2, #4294967295
 800c42a:	f7f4 fb81 	bl	8000b30 <__aeabi_dcmple>
 800c42e:	bb48      	cbnz	r0, 800c484 <_printf_float+0xd0>
 800c430:	2200      	movs	r2, #0
 800c432:	2300      	movs	r3, #0
 800c434:	4640      	mov	r0, r8
 800c436:	4649      	mov	r1, r9
 800c438:	f7f4 fb70 	bl	8000b1c <__aeabi_dcmplt>
 800c43c:	b110      	cbz	r0, 800c444 <_printf_float+0x90>
 800c43e:	232d      	movs	r3, #45	; 0x2d
 800c440:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c444:	4b93      	ldr	r3, [pc, #588]	; (800c694 <_printf_float+0x2e0>)
 800c446:	4894      	ldr	r0, [pc, #592]	; (800c698 <_printf_float+0x2e4>)
 800c448:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 800c44c:	bf94      	ite	ls
 800c44e:	4698      	movls	r8, r3
 800c450:	4680      	movhi	r8, r0
 800c452:	2303      	movs	r3, #3
 800c454:	6123      	str	r3, [r4, #16]
 800c456:	9b05      	ldr	r3, [sp, #20]
 800c458:	f023 0204 	bic.w	r2, r3, #4
 800c45c:	6022      	str	r2, [r4, #0]
 800c45e:	f04f 0900 	mov.w	r9, #0
 800c462:	9700      	str	r7, [sp, #0]
 800c464:	4633      	mov	r3, r6
 800c466:	aa0b      	add	r2, sp, #44	; 0x2c
 800c468:	4621      	mov	r1, r4
 800c46a:	4628      	mov	r0, r5
 800c46c:	f000 f9d8 	bl	800c820 <_printf_common>
 800c470:	3001      	adds	r0, #1
 800c472:	f040 8090 	bne.w	800c596 <_printf_float+0x1e2>
 800c476:	f04f 30ff 	mov.w	r0, #4294967295
 800c47a:	b00d      	add	sp, #52	; 0x34
 800c47c:	ecbd 8b02 	vpop	{d8}
 800c480:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c484:	4642      	mov	r2, r8
 800c486:	464b      	mov	r3, r9
 800c488:	4640      	mov	r0, r8
 800c48a:	4649      	mov	r1, r9
 800c48c:	f7f4 fb6e 	bl	8000b6c <__aeabi_dcmpun>
 800c490:	b140      	cbz	r0, 800c4a4 <_printf_float+0xf0>
 800c492:	464b      	mov	r3, r9
 800c494:	2b00      	cmp	r3, #0
 800c496:	bfbc      	itt	lt
 800c498:	232d      	movlt	r3, #45	; 0x2d
 800c49a:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800c49e:	487f      	ldr	r0, [pc, #508]	; (800c69c <_printf_float+0x2e8>)
 800c4a0:	4b7f      	ldr	r3, [pc, #508]	; (800c6a0 <_printf_float+0x2ec>)
 800c4a2:	e7d1      	b.n	800c448 <_printf_float+0x94>
 800c4a4:	6863      	ldr	r3, [r4, #4]
 800c4a6:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 800c4aa:	9206      	str	r2, [sp, #24]
 800c4ac:	1c5a      	adds	r2, r3, #1
 800c4ae:	d13f      	bne.n	800c530 <_printf_float+0x17c>
 800c4b0:	2306      	movs	r3, #6
 800c4b2:	6063      	str	r3, [r4, #4]
 800c4b4:	9b05      	ldr	r3, [sp, #20]
 800c4b6:	6861      	ldr	r1, [r4, #4]
 800c4b8:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 800c4bc:	2300      	movs	r3, #0
 800c4be:	9303      	str	r3, [sp, #12]
 800c4c0:	ab0a      	add	r3, sp, #40	; 0x28
 800c4c2:	e9cd b301 	strd	fp, r3, [sp, #4]
 800c4c6:	ab09      	add	r3, sp, #36	; 0x24
 800c4c8:	ec49 8b10 	vmov	d0, r8, r9
 800c4cc:	9300      	str	r3, [sp, #0]
 800c4ce:	6022      	str	r2, [r4, #0]
 800c4d0:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 800c4d4:	4628      	mov	r0, r5
 800c4d6:	f7ff fecd 	bl	800c274 <__cvt>
 800c4da:	9b06      	ldr	r3, [sp, #24]
 800c4dc:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c4de:	2b47      	cmp	r3, #71	; 0x47
 800c4e0:	4680      	mov	r8, r0
 800c4e2:	d108      	bne.n	800c4f6 <_printf_float+0x142>
 800c4e4:	1cc8      	adds	r0, r1, #3
 800c4e6:	db02      	blt.n	800c4ee <_printf_float+0x13a>
 800c4e8:	6863      	ldr	r3, [r4, #4]
 800c4ea:	4299      	cmp	r1, r3
 800c4ec:	dd41      	ble.n	800c572 <_printf_float+0x1be>
 800c4ee:	f1ab 0b02 	sub.w	fp, fp, #2
 800c4f2:	fa5f fb8b 	uxtb.w	fp, fp
 800c4f6:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800c4fa:	d820      	bhi.n	800c53e <_printf_float+0x18a>
 800c4fc:	3901      	subs	r1, #1
 800c4fe:	465a      	mov	r2, fp
 800c500:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800c504:	9109      	str	r1, [sp, #36]	; 0x24
 800c506:	f7ff ff17 	bl	800c338 <__exponent>
 800c50a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c50c:	1813      	adds	r3, r2, r0
 800c50e:	2a01      	cmp	r2, #1
 800c510:	4681      	mov	r9, r0
 800c512:	6123      	str	r3, [r4, #16]
 800c514:	dc02      	bgt.n	800c51c <_printf_float+0x168>
 800c516:	6822      	ldr	r2, [r4, #0]
 800c518:	07d2      	lsls	r2, r2, #31
 800c51a:	d501      	bpl.n	800c520 <_printf_float+0x16c>
 800c51c:	3301      	adds	r3, #1
 800c51e:	6123      	str	r3, [r4, #16]
 800c520:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 800c524:	2b00      	cmp	r3, #0
 800c526:	d09c      	beq.n	800c462 <_printf_float+0xae>
 800c528:	232d      	movs	r3, #45	; 0x2d
 800c52a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c52e:	e798      	b.n	800c462 <_printf_float+0xae>
 800c530:	9a06      	ldr	r2, [sp, #24]
 800c532:	2a47      	cmp	r2, #71	; 0x47
 800c534:	d1be      	bne.n	800c4b4 <_printf_float+0x100>
 800c536:	2b00      	cmp	r3, #0
 800c538:	d1bc      	bne.n	800c4b4 <_printf_float+0x100>
 800c53a:	2301      	movs	r3, #1
 800c53c:	e7b9      	b.n	800c4b2 <_printf_float+0xfe>
 800c53e:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 800c542:	d118      	bne.n	800c576 <_printf_float+0x1c2>
 800c544:	2900      	cmp	r1, #0
 800c546:	6863      	ldr	r3, [r4, #4]
 800c548:	dd0b      	ble.n	800c562 <_printf_float+0x1ae>
 800c54a:	6121      	str	r1, [r4, #16]
 800c54c:	b913      	cbnz	r3, 800c554 <_printf_float+0x1a0>
 800c54e:	6822      	ldr	r2, [r4, #0]
 800c550:	07d0      	lsls	r0, r2, #31
 800c552:	d502      	bpl.n	800c55a <_printf_float+0x1a6>
 800c554:	3301      	adds	r3, #1
 800c556:	440b      	add	r3, r1
 800c558:	6123      	str	r3, [r4, #16]
 800c55a:	65a1      	str	r1, [r4, #88]	; 0x58
 800c55c:	f04f 0900 	mov.w	r9, #0
 800c560:	e7de      	b.n	800c520 <_printf_float+0x16c>
 800c562:	b913      	cbnz	r3, 800c56a <_printf_float+0x1b6>
 800c564:	6822      	ldr	r2, [r4, #0]
 800c566:	07d2      	lsls	r2, r2, #31
 800c568:	d501      	bpl.n	800c56e <_printf_float+0x1ba>
 800c56a:	3302      	adds	r3, #2
 800c56c:	e7f4      	b.n	800c558 <_printf_float+0x1a4>
 800c56e:	2301      	movs	r3, #1
 800c570:	e7f2      	b.n	800c558 <_printf_float+0x1a4>
 800c572:	f04f 0b67 	mov.w	fp, #103	; 0x67
 800c576:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c578:	4299      	cmp	r1, r3
 800c57a:	db05      	blt.n	800c588 <_printf_float+0x1d4>
 800c57c:	6823      	ldr	r3, [r4, #0]
 800c57e:	6121      	str	r1, [r4, #16]
 800c580:	07d8      	lsls	r0, r3, #31
 800c582:	d5ea      	bpl.n	800c55a <_printf_float+0x1a6>
 800c584:	1c4b      	adds	r3, r1, #1
 800c586:	e7e7      	b.n	800c558 <_printf_float+0x1a4>
 800c588:	2900      	cmp	r1, #0
 800c58a:	bfd4      	ite	le
 800c58c:	f1c1 0202 	rsble	r2, r1, #2
 800c590:	2201      	movgt	r2, #1
 800c592:	4413      	add	r3, r2
 800c594:	e7e0      	b.n	800c558 <_printf_float+0x1a4>
 800c596:	6823      	ldr	r3, [r4, #0]
 800c598:	055a      	lsls	r2, r3, #21
 800c59a:	d407      	bmi.n	800c5ac <_printf_float+0x1f8>
 800c59c:	6923      	ldr	r3, [r4, #16]
 800c59e:	4642      	mov	r2, r8
 800c5a0:	4631      	mov	r1, r6
 800c5a2:	4628      	mov	r0, r5
 800c5a4:	47b8      	blx	r7
 800c5a6:	3001      	adds	r0, #1
 800c5a8:	d12c      	bne.n	800c604 <_printf_float+0x250>
 800c5aa:	e764      	b.n	800c476 <_printf_float+0xc2>
 800c5ac:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800c5b0:	f240 80e0 	bls.w	800c774 <_printf_float+0x3c0>
 800c5b4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800c5b8:	2200      	movs	r2, #0
 800c5ba:	2300      	movs	r3, #0
 800c5bc:	f7f4 faa4 	bl	8000b08 <__aeabi_dcmpeq>
 800c5c0:	2800      	cmp	r0, #0
 800c5c2:	d034      	beq.n	800c62e <_printf_float+0x27a>
 800c5c4:	4a37      	ldr	r2, [pc, #220]	; (800c6a4 <_printf_float+0x2f0>)
 800c5c6:	2301      	movs	r3, #1
 800c5c8:	4631      	mov	r1, r6
 800c5ca:	4628      	mov	r0, r5
 800c5cc:	47b8      	blx	r7
 800c5ce:	3001      	adds	r0, #1
 800c5d0:	f43f af51 	beq.w	800c476 <_printf_float+0xc2>
 800c5d4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c5d8:	429a      	cmp	r2, r3
 800c5da:	db02      	blt.n	800c5e2 <_printf_float+0x22e>
 800c5dc:	6823      	ldr	r3, [r4, #0]
 800c5de:	07d8      	lsls	r0, r3, #31
 800c5e0:	d510      	bpl.n	800c604 <_printf_float+0x250>
 800c5e2:	ee18 3a10 	vmov	r3, s16
 800c5e6:	4652      	mov	r2, sl
 800c5e8:	4631      	mov	r1, r6
 800c5ea:	4628      	mov	r0, r5
 800c5ec:	47b8      	blx	r7
 800c5ee:	3001      	adds	r0, #1
 800c5f0:	f43f af41 	beq.w	800c476 <_printf_float+0xc2>
 800c5f4:	f04f 0800 	mov.w	r8, #0
 800c5f8:	f104 091a 	add.w	r9, r4, #26
 800c5fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c5fe:	3b01      	subs	r3, #1
 800c600:	4543      	cmp	r3, r8
 800c602:	dc09      	bgt.n	800c618 <_printf_float+0x264>
 800c604:	6823      	ldr	r3, [r4, #0]
 800c606:	079b      	lsls	r3, r3, #30
 800c608:	f100 8105 	bmi.w	800c816 <_printf_float+0x462>
 800c60c:	68e0      	ldr	r0, [r4, #12]
 800c60e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c610:	4298      	cmp	r0, r3
 800c612:	bfb8      	it	lt
 800c614:	4618      	movlt	r0, r3
 800c616:	e730      	b.n	800c47a <_printf_float+0xc6>
 800c618:	2301      	movs	r3, #1
 800c61a:	464a      	mov	r2, r9
 800c61c:	4631      	mov	r1, r6
 800c61e:	4628      	mov	r0, r5
 800c620:	47b8      	blx	r7
 800c622:	3001      	adds	r0, #1
 800c624:	f43f af27 	beq.w	800c476 <_printf_float+0xc2>
 800c628:	f108 0801 	add.w	r8, r8, #1
 800c62c:	e7e6      	b.n	800c5fc <_printf_float+0x248>
 800c62e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c630:	2b00      	cmp	r3, #0
 800c632:	dc39      	bgt.n	800c6a8 <_printf_float+0x2f4>
 800c634:	4a1b      	ldr	r2, [pc, #108]	; (800c6a4 <_printf_float+0x2f0>)
 800c636:	2301      	movs	r3, #1
 800c638:	4631      	mov	r1, r6
 800c63a:	4628      	mov	r0, r5
 800c63c:	47b8      	blx	r7
 800c63e:	3001      	adds	r0, #1
 800c640:	f43f af19 	beq.w	800c476 <_printf_float+0xc2>
 800c644:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c648:	4313      	orrs	r3, r2
 800c64a:	d102      	bne.n	800c652 <_printf_float+0x29e>
 800c64c:	6823      	ldr	r3, [r4, #0]
 800c64e:	07d9      	lsls	r1, r3, #31
 800c650:	d5d8      	bpl.n	800c604 <_printf_float+0x250>
 800c652:	ee18 3a10 	vmov	r3, s16
 800c656:	4652      	mov	r2, sl
 800c658:	4631      	mov	r1, r6
 800c65a:	4628      	mov	r0, r5
 800c65c:	47b8      	blx	r7
 800c65e:	3001      	adds	r0, #1
 800c660:	f43f af09 	beq.w	800c476 <_printf_float+0xc2>
 800c664:	f04f 0900 	mov.w	r9, #0
 800c668:	f104 0a1a 	add.w	sl, r4, #26
 800c66c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c66e:	425b      	negs	r3, r3
 800c670:	454b      	cmp	r3, r9
 800c672:	dc01      	bgt.n	800c678 <_printf_float+0x2c4>
 800c674:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c676:	e792      	b.n	800c59e <_printf_float+0x1ea>
 800c678:	2301      	movs	r3, #1
 800c67a:	4652      	mov	r2, sl
 800c67c:	4631      	mov	r1, r6
 800c67e:	4628      	mov	r0, r5
 800c680:	47b8      	blx	r7
 800c682:	3001      	adds	r0, #1
 800c684:	f43f aef7 	beq.w	800c476 <_printf_float+0xc2>
 800c688:	f109 0901 	add.w	r9, r9, #1
 800c68c:	e7ee      	b.n	800c66c <_printf_float+0x2b8>
 800c68e:	bf00      	nop
 800c690:	7fefffff 	.word	0x7fefffff
 800c694:	08010650 	.word	0x08010650
 800c698:	08010654 	.word	0x08010654
 800c69c:	0801065c 	.word	0x0801065c
 800c6a0:	08010658 	.word	0x08010658
 800c6a4:	08010660 	.word	0x08010660
 800c6a8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c6aa:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800c6ac:	429a      	cmp	r2, r3
 800c6ae:	bfa8      	it	ge
 800c6b0:	461a      	movge	r2, r3
 800c6b2:	2a00      	cmp	r2, #0
 800c6b4:	4691      	mov	r9, r2
 800c6b6:	dc37      	bgt.n	800c728 <_printf_float+0x374>
 800c6b8:	f04f 0b00 	mov.w	fp, #0
 800c6bc:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800c6c0:	f104 021a 	add.w	r2, r4, #26
 800c6c4:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800c6c6:	9305      	str	r3, [sp, #20]
 800c6c8:	eba3 0309 	sub.w	r3, r3, r9
 800c6cc:	455b      	cmp	r3, fp
 800c6ce:	dc33      	bgt.n	800c738 <_printf_float+0x384>
 800c6d0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c6d4:	429a      	cmp	r2, r3
 800c6d6:	db3b      	blt.n	800c750 <_printf_float+0x39c>
 800c6d8:	6823      	ldr	r3, [r4, #0]
 800c6da:	07da      	lsls	r2, r3, #31
 800c6dc:	d438      	bmi.n	800c750 <_printf_float+0x39c>
 800c6de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c6e0:	9a05      	ldr	r2, [sp, #20]
 800c6e2:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c6e4:	1a9a      	subs	r2, r3, r2
 800c6e6:	eba3 0901 	sub.w	r9, r3, r1
 800c6ea:	4591      	cmp	r9, r2
 800c6ec:	bfa8      	it	ge
 800c6ee:	4691      	movge	r9, r2
 800c6f0:	f1b9 0f00 	cmp.w	r9, #0
 800c6f4:	dc35      	bgt.n	800c762 <_printf_float+0x3ae>
 800c6f6:	f04f 0800 	mov.w	r8, #0
 800c6fa:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800c6fe:	f104 0a1a 	add.w	sl, r4, #26
 800c702:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800c706:	1a9b      	subs	r3, r3, r2
 800c708:	eba3 0309 	sub.w	r3, r3, r9
 800c70c:	4543      	cmp	r3, r8
 800c70e:	f77f af79 	ble.w	800c604 <_printf_float+0x250>
 800c712:	2301      	movs	r3, #1
 800c714:	4652      	mov	r2, sl
 800c716:	4631      	mov	r1, r6
 800c718:	4628      	mov	r0, r5
 800c71a:	47b8      	blx	r7
 800c71c:	3001      	adds	r0, #1
 800c71e:	f43f aeaa 	beq.w	800c476 <_printf_float+0xc2>
 800c722:	f108 0801 	add.w	r8, r8, #1
 800c726:	e7ec      	b.n	800c702 <_printf_float+0x34e>
 800c728:	4613      	mov	r3, r2
 800c72a:	4631      	mov	r1, r6
 800c72c:	4642      	mov	r2, r8
 800c72e:	4628      	mov	r0, r5
 800c730:	47b8      	blx	r7
 800c732:	3001      	adds	r0, #1
 800c734:	d1c0      	bne.n	800c6b8 <_printf_float+0x304>
 800c736:	e69e      	b.n	800c476 <_printf_float+0xc2>
 800c738:	2301      	movs	r3, #1
 800c73a:	4631      	mov	r1, r6
 800c73c:	4628      	mov	r0, r5
 800c73e:	9205      	str	r2, [sp, #20]
 800c740:	47b8      	blx	r7
 800c742:	3001      	adds	r0, #1
 800c744:	f43f ae97 	beq.w	800c476 <_printf_float+0xc2>
 800c748:	9a05      	ldr	r2, [sp, #20]
 800c74a:	f10b 0b01 	add.w	fp, fp, #1
 800c74e:	e7b9      	b.n	800c6c4 <_printf_float+0x310>
 800c750:	ee18 3a10 	vmov	r3, s16
 800c754:	4652      	mov	r2, sl
 800c756:	4631      	mov	r1, r6
 800c758:	4628      	mov	r0, r5
 800c75a:	47b8      	blx	r7
 800c75c:	3001      	adds	r0, #1
 800c75e:	d1be      	bne.n	800c6de <_printf_float+0x32a>
 800c760:	e689      	b.n	800c476 <_printf_float+0xc2>
 800c762:	9a05      	ldr	r2, [sp, #20]
 800c764:	464b      	mov	r3, r9
 800c766:	4442      	add	r2, r8
 800c768:	4631      	mov	r1, r6
 800c76a:	4628      	mov	r0, r5
 800c76c:	47b8      	blx	r7
 800c76e:	3001      	adds	r0, #1
 800c770:	d1c1      	bne.n	800c6f6 <_printf_float+0x342>
 800c772:	e680      	b.n	800c476 <_printf_float+0xc2>
 800c774:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c776:	2a01      	cmp	r2, #1
 800c778:	dc01      	bgt.n	800c77e <_printf_float+0x3ca>
 800c77a:	07db      	lsls	r3, r3, #31
 800c77c:	d538      	bpl.n	800c7f0 <_printf_float+0x43c>
 800c77e:	2301      	movs	r3, #1
 800c780:	4642      	mov	r2, r8
 800c782:	4631      	mov	r1, r6
 800c784:	4628      	mov	r0, r5
 800c786:	47b8      	blx	r7
 800c788:	3001      	adds	r0, #1
 800c78a:	f43f ae74 	beq.w	800c476 <_printf_float+0xc2>
 800c78e:	ee18 3a10 	vmov	r3, s16
 800c792:	4652      	mov	r2, sl
 800c794:	4631      	mov	r1, r6
 800c796:	4628      	mov	r0, r5
 800c798:	47b8      	blx	r7
 800c79a:	3001      	adds	r0, #1
 800c79c:	f43f ae6b 	beq.w	800c476 <_printf_float+0xc2>
 800c7a0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800c7a4:	2200      	movs	r2, #0
 800c7a6:	2300      	movs	r3, #0
 800c7a8:	f7f4 f9ae 	bl	8000b08 <__aeabi_dcmpeq>
 800c7ac:	b9d8      	cbnz	r0, 800c7e6 <_printf_float+0x432>
 800c7ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c7b0:	f108 0201 	add.w	r2, r8, #1
 800c7b4:	3b01      	subs	r3, #1
 800c7b6:	4631      	mov	r1, r6
 800c7b8:	4628      	mov	r0, r5
 800c7ba:	47b8      	blx	r7
 800c7bc:	3001      	adds	r0, #1
 800c7be:	d10e      	bne.n	800c7de <_printf_float+0x42a>
 800c7c0:	e659      	b.n	800c476 <_printf_float+0xc2>
 800c7c2:	2301      	movs	r3, #1
 800c7c4:	4652      	mov	r2, sl
 800c7c6:	4631      	mov	r1, r6
 800c7c8:	4628      	mov	r0, r5
 800c7ca:	47b8      	blx	r7
 800c7cc:	3001      	adds	r0, #1
 800c7ce:	f43f ae52 	beq.w	800c476 <_printf_float+0xc2>
 800c7d2:	f108 0801 	add.w	r8, r8, #1
 800c7d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c7d8:	3b01      	subs	r3, #1
 800c7da:	4543      	cmp	r3, r8
 800c7dc:	dcf1      	bgt.n	800c7c2 <_printf_float+0x40e>
 800c7de:	464b      	mov	r3, r9
 800c7e0:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800c7e4:	e6dc      	b.n	800c5a0 <_printf_float+0x1ec>
 800c7e6:	f04f 0800 	mov.w	r8, #0
 800c7ea:	f104 0a1a 	add.w	sl, r4, #26
 800c7ee:	e7f2      	b.n	800c7d6 <_printf_float+0x422>
 800c7f0:	2301      	movs	r3, #1
 800c7f2:	4642      	mov	r2, r8
 800c7f4:	e7df      	b.n	800c7b6 <_printf_float+0x402>
 800c7f6:	2301      	movs	r3, #1
 800c7f8:	464a      	mov	r2, r9
 800c7fa:	4631      	mov	r1, r6
 800c7fc:	4628      	mov	r0, r5
 800c7fe:	47b8      	blx	r7
 800c800:	3001      	adds	r0, #1
 800c802:	f43f ae38 	beq.w	800c476 <_printf_float+0xc2>
 800c806:	f108 0801 	add.w	r8, r8, #1
 800c80a:	68e3      	ldr	r3, [r4, #12]
 800c80c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800c80e:	1a5b      	subs	r3, r3, r1
 800c810:	4543      	cmp	r3, r8
 800c812:	dcf0      	bgt.n	800c7f6 <_printf_float+0x442>
 800c814:	e6fa      	b.n	800c60c <_printf_float+0x258>
 800c816:	f04f 0800 	mov.w	r8, #0
 800c81a:	f104 0919 	add.w	r9, r4, #25
 800c81e:	e7f4      	b.n	800c80a <_printf_float+0x456>

0800c820 <_printf_common>:
 800c820:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c824:	4616      	mov	r6, r2
 800c826:	4699      	mov	r9, r3
 800c828:	688a      	ldr	r2, [r1, #8]
 800c82a:	690b      	ldr	r3, [r1, #16]
 800c82c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800c830:	4293      	cmp	r3, r2
 800c832:	bfb8      	it	lt
 800c834:	4613      	movlt	r3, r2
 800c836:	6033      	str	r3, [r6, #0]
 800c838:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800c83c:	4607      	mov	r7, r0
 800c83e:	460c      	mov	r4, r1
 800c840:	b10a      	cbz	r2, 800c846 <_printf_common+0x26>
 800c842:	3301      	adds	r3, #1
 800c844:	6033      	str	r3, [r6, #0]
 800c846:	6823      	ldr	r3, [r4, #0]
 800c848:	0699      	lsls	r1, r3, #26
 800c84a:	bf42      	ittt	mi
 800c84c:	6833      	ldrmi	r3, [r6, #0]
 800c84e:	3302      	addmi	r3, #2
 800c850:	6033      	strmi	r3, [r6, #0]
 800c852:	6825      	ldr	r5, [r4, #0]
 800c854:	f015 0506 	ands.w	r5, r5, #6
 800c858:	d106      	bne.n	800c868 <_printf_common+0x48>
 800c85a:	f104 0a19 	add.w	sl, r4, #25
 800c85e:	68e3      	ldr	r3, [r4, #12]
 800c860:	6832      	ldr	r2, [r6, #0]
 800c862:	1a9b      	subs	r3, r3, r2
 800c864:	42ab      	cmp	r3, r5
 800c866:	dc26      	bgt.n	800c8b6 <_printf_common+0x96>
 800c868:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800c86c:	1e13      	subs	r3, r2, #0
 800c86e:	6822      	ldr	r2, [r4, #0]
 800c870:	bf18      	it	ne
 800c872:	2301      	movne	r3, #1
 800c874:	0692      	lsls	r2, r2, #26
 800c876:	d42b      	bmi.n	800c8d0 <_printf_common+0xb0>
 800c878:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800c87c:	4649      	mov	r1, r9
 800c87e:	4638      	mov	r0, r7
 800c880:	47c0      	blx	r8
 800c882:	3001      	adds	r0, #1
 800c884:	d01e      	beq.n	800c8c4 <_printf_common+0xa4>
 800c886:	6823      	ldr	r3, [r4, #0]
 800c888:	68e5      	ldr	r5, [r4, #12]
 800c88a:	6832      	ldr	r2, [r6, #0]
 800c88c:	f003 0306 	and.w	r3, r3, #6
 800c890:	2b04      	cmp	r3, #4
 800c892:	bf08      	it	eq
 800c894:	1aad      	subeq	r5, r5, r2
 800c896:	68a3      	ldr	r3, [r4, #8]
 800c898:	6922      	ldr	r2, [r4, #16]
 800c89a:	bf0c      	ite	eq
 800c89c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800c8a0:	2500      	movne	r5, #0
 800c8a2:	4293      	cmp	r3, r2
 800c8a4:	bfc4      	itt	gt
 800c8a6:	1a9b      	subgt	r3, r3, r2
 800c8a8:	18ed      	addgt	r5, r5, r3
 800c8aa:	2600      	movs	r6, #0
 800c8ac:	341a      	adds	r4, #26
 800c8ae:	42b5      	cmp	r5, r6
 800c8b0:	d11a      	bne.n	800c8e8 <_printf_common+0xc8>
 800c8b2:	2000      	movs	r0, #0
 800c8b4:	e008      	b.n	800c8c8 <_printf_common+0xa8>
 800c8b6:	2301      	movs	r3, #1
 800c8b8:	4652      	mov	r2, sl
 800c8ba:	4649      	mov	r1, r9
 800c8bc:	4638      	mov	r0, r7
 800c8be:	47c0      	blx	r8
 800c8c0:	3001      	adds	r0, #1
 800c8c2:	d103      	bne.n	800c8cc <_printf_common+0xac>
 800c8c4:	f04f 30ff 	mov.w	r0, #4294967295
 800c8c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c8cc:	3501      	adds	r5, #1
 800c8ce:	e7c6      	b.n	800c85e <_printf_common+0x3e>
 800c8d0:	18e1      	adds	r1, r4, r3
 800c8d2:	1c5a      	adds	r2, r3, #1
 800c8d4:	2030      	movs	r0, #48	; 0x30
 800c8d6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800c8da:	4422      	add	r2, r4
 800c8dc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800c8e0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800c8e4:	3302      	adds	r3, #2
 800c8e6:	e7c7      	b.n	800c878 <_printf_common+0x58>
 800c8e8:	2301      	movs	r3, #1
 800c8ea:	4622      	mov	r2, r4
 800c8ec:	4649      	mov	r1, r9
 800c8ee:	4638      	mov	r0, r7
 800c8f0:	47c0      	blx	r8
 800c8f2:	3001      	adds	r0, #1
 800c8f4:	d0e6      	beq.n	800c8c4 <_printf_common+0xa4>
 800c8f6:	3601      	adds	r6, #1
 800c8f8:	e7d9      	b.n	800c8ae <_printf_common+0x8e>
	...

0800c8fc <_printf_i>:
 800c8fc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c900:	7e0f      	ldrb	r7, [r1, #24]
 800c902:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800c904:	2f78      	cmp	r7, #120	; 0x78
 800c906:	4691      	mov	r9, r2
 800c908:	4680      	mov	r8, r0
 800c90a:	460c      	mov	r4, r1
 800c90c:	469a      	mov	sl, r3
 800c90e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800c912:	d807      	bhi.n	800c924 <_printf_i+0x28>
 800c914:	2f62      	cmp	r7, #98	; 0x62
 800c916:	d80a      	bhi.n	800c92e <_printf_i+0x32>
 800c918:	2f00      	cmp	r7, #0
 800c91a:	f000 80d8 	beq.w	800cace <_printf_i+0x1d2>
 800c91e:	2f58      	cmp	r7, #88	; 0x58
 800c920:	f000 80a3 	beq.w	800ca6a <_printf_i+0x16e>
 800c924:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800c928:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800c92c:	e03a      	b.n	800c9a4 <_printf_i+0xa8>
 800c92e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800c932:	2b15      	cmp	r3, #21
 800c934:	d8f6      	bhi.n	800c924 <_printf_i+0x28>
 800c936:	a101      	add	r1, pc, #4	; (adr r1, 800c93c <_printf_i+0x40>)
 800c938:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800c93c:	0800c995 	.word	0x0800c995
 800c940:	0800c9a9 	.word	0x0800c9a9
 800c944:	0800c925 	.word	0x0800c925
 800c948:	0800c925 	.word	0x0800c925
 800c94c:	0800c925 	.word	0x0800c925
 800c950:	0800c925 	.word	0x0800c925
 800c954:	0800c9a9 	.word	0x0800c9a9
 800c958:	0800c925 	.word	0x0800c925
 800c95c:	0800c925 	.word	0x0800c925
 800c960:	0800c925 	.word	0x0800c925
 800c964:	0800c925 	.word	0x0800c925
 800c968:	0800cab5 	.word	0x0800cab5
 800c96c:	0800c9d9 	.word	0x0800c9d9
 800c970:	0800ca97 	.word	0x0800ca97
 800c974:	0800c925 	.word	0x0800c925
 800c978:	0800c925 	.word	0x0800c925
 800c97c:	0800cad7 	.word	0x0800cad7
 800c980:	0800c925 	.word	0x0800c925
 800c984:	0800c9d9 	.word	0x0800c9d9
 800c988:	0800c925 	.word	0x0800c925
 800c98c:	0800c925 	.word	0x0800c925
 800c990:	0800ca9f 	.word	0x0800ca9f
 800c994:	682b      	ldr	r3, [r5, #0]
 800c996:	1d1a      	adds	r2, r3, #4
 800c998:	681b      	ldr	r3, [r3, #0]
 800c99a:	602a      	str	r2, [r5, #0]
 800c99c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800c9a0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800c9a4:	2301      	movs	r3, #1
 800c9a6:	e0a3      	b.n	800caf0 <_printf_i+0x1f4>
 800c9a8:	6820      	ldr	r0, [r4, #0]
 800c9aa:	6829      	ldr	r1, [r5, #0]
 800c9ac:	0606      	lsls	r6, r0, #24
 800c9ae:	f101 0304 	add.w	r3, r1, #4
 800c9b2:	d50a      	bpl.n	800c9ca <_printf_i+0xce>
 800c9b4:	680e      	ldr	r6, [r1, #0]
 800c9b6:	602b      	str	r3, [r5, #0]
 800c9b8:	2e00      	cmp	r6, #0
 800c9ba:	da03      	bge.n	800c9c4 <_printf_i+0xc8>
 800c9bc:	232d      	movs	r3, #45	; 0x2d
 800c9be:	4276      	negs	r6, r6
 800c9c0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c9c4:	485e      	ldr	r0, [pc, #376]	; (800cb40 <_printf_i+0x244>)
 800c9c6:	230a      	movs	r3, #10
 800c9c8:	e019      	b.n	800c9fe <_printf_i+0x102>
 800c9ca:	680e      	ldr	r6, [r1, #0]
 800c9cc:	602b      	str	r3, [r5, #0]
 800c9ce:	f010 0f40 	tst.w	r0, #64	; 0x40
 800c9d2:	bf18      	it	ne
 800c9d4:	b236      	sxthne	r6, r6
 800c9d6:	e7ef      	b.n	800c9b8 <_printf_i+0xbc>
 800c9d8:	682b      	ldr	r3, [r5, #0]
 800c9da:	6820      	ldr	r0, [r4, #0]
 800c9dc:	1d19      	adds	r1, r3, #4
 800c9de:	6029      	str	r1, [r5, #0]
 800c9e0:	0601      	lsls	r1, r0, #24
 800c9e2:	d501      	bpl.n	800c9e8 <_printf_i+0xec>
 800c9e4:	681e      	ldr	r6, [r3, #0]
 800c9e6:	e002      	b.n	800c9ee <_printf_i+0xf2>
 800c9e8:	0646      	lsls	r6, r0, #25
 800c9ea:	d5fb      	bpl.n	800c9e4 <_printf_i+0xe8>
 800c9ec:	881e      	ldrh	r6, [r3, #0]
 800c9ee:	4854      	ldr	r0, [pc, #336]	; (800cb40 <_printf_i+0x244>)
 800c9f0:	2f6f      	cmp	r7, #111	; 0x6f
 800c9f2:	bf0c      	ite	eq
 800c9f4:	2308      	moveq	r3, #8
 800c9f6:	230a      	movne	r3, #10
 800c9f8:	2100      	movs	r1, #0
 800c9fa:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800c9fe:	6865      	ldr	r5, [r4, #4]
 800ca00:	60a5      	str	r5, [r4, #8]
 800ca02:	2d00      	cmp	r5, #0
 800ca04:	bfa2      	ittt	ge
 800ca06:	6821      	ldrge	r1, [r4, #0]
 800ca08:	f021 0104 	bicge.w	r1, r1, #4
 800ca0c:	6021      	strge	r1, [r4, #0]
 800ca0e:	b90e      	cbnz	r6, 800ca14 <_printf_i+0x118>
 800ca10:	2d00      	cmp	r5, #0
 800ca12:	d04d      	beq.n	800cab0 <_printf_i+0x1b4>
 800ca14:	4615      	mov	r5, r2
 800ca16:	fbb6 f1f3 	udiv	r1, r6, r3
 800ca1a:	fb03 6711 	mls	r7, r3, r1, r6
 800ca1e:	5dc7      	ldrb	r7, [r0, r7]
 800ca20:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800ca24:	4637      	mov	r7, r6
 800ca26:	42bb      	cmp	r3, r7
 800ca28:	460e      	mov	r6, r1
 800ca2a:	d9f4      	bls.n	800ca16 <_printf_i+0x11a>
 800ca2c:	2b08      	cmp	r3, #8
 800ca2e:	d10b      	bne.n	800ca48 <_printf_i+0x14c>
 800ca30:	6823      	ldr	r3, [r4, #0]
 800ca32:	07de      	lsls	r6, r3, #31
 800ca34:	d508      	bpl.n	800ca48 <_printf_i+0x14c>
 800ca36:	6923      	ldr	r3, [r4, #16]
 800ca38:	6861      	ldr	r1, [r4, #4]
 800ca3a:	4299      	cmp	r1, r3
 800ca3c:	bfde      	ittt	le
 800ca3e:	2330      	movle	r3, #48	; 0x30
 800ca40:	f805 3c01 	strble.w	r3, [r5, #-1]
 800ca44:	f105 35ff 	addle.w	r5, r5, #4294967295
 800ca48:	1b52      	subs	r2, r2, r5
 800ca4a:	6122      	str	r2, [r4, #16]
 800ca4c:	f8cd a000 	str.w	sl, [sp]
 800ca50:	464b      	mov	r3, r9
 800ca52:	aa03      	add	r2, sp, #12
 800ca54:	4621      	mov	r1, r4
 800ca56:	4640      	mov	r0, r8
 800ca58:	f7ff fee2 	bl	800c820 <_printf_common>
 800ca5c:	3001      	adds	r0, #1
 800ca5e:	d14c      	bne.n	800cafa <_printf_i+0x1fe>
 800ca60:	f04f 30ff 	mov.w	r0, #4294967295
 800ca64:	b004      	add	sp, #16
 800ca66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ca6a:	4835      	ldr	r0, [pc, #212]	; (800cb40 <_printf_i+0x244>)
 800ca6c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800ca70:	6829      	ldr	r1, [r5, #0]
 800ca72:	6823      	ldr	r3, [r4, #0]
 800ca74:	f851 6b04 	ldr.w	r6, [r1], #4
 800ca78:	6029      	str	r1, [r5, #0]
 800ca7a:	061d      	lsls	r5, r3, #24
 800ca7c:	d514      	bpl.n	800caa8 <_printf_i+0x1ac>
 800ca7e:	07df      	lsls	r7, r3, #31
 800ca80:	bf44      	itt	mi
 800ca82:	f043 0320 	orrmi.w	r3, r3, #32
 800ca86:	6023      	strmi	r3, [r4, #0]
 800ca88:	b91e      	cbnz	r6, 800ca92 <_printf_i+0x196>
 800ca8a:	6823      	ldr	r3, [r4, #0]
 800ca8c:	f023 0320 	bic.w	r3, r3, #32
 800ca90:	6023      	str	r3, [r4, #0]
 800ca92:	2310      	movs	r3, #16
 800ca94:	e7b0      	b.n	800c9f8 <_printf_i+0xfc>
 800ca96:	6823      	ldr	r3, [r4, #0]
 800ca98:	f043 0320 	orr.w	r3, r3, #32
 800ca9c:	6023      	str	r3, [r4, #0]
 800ca9e:	2378      	movs	r3, #120	; 0x78
 800caa0:	4828      	ldr	r0, [pc, #160]	; (800cb44 <_printf_i+0x248>)
 800caa2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800caa6:	e7e3      	b.n	800ca70 <_printf_i+0x174>
 800caa8:	0659      	lsls	r1, r3, #25
 800caaa:	bf48      	it	mi
 800caac:	b2b6      	uxthmi	r6, r6
 800caae:	e7e6      	b.n	800ca7e <_printf_i+0x182>
 800cab0:	4615      	mov	r5, r2
 800cab2:	e7bb      	b.n	800ca2c <_printf_i+0x130>
 800cab4:	682b      	ldr	r3, [r5, #0]
 800cab6:	6826      	ldr	r6, [r4, #0]
 800cab8:	6961      	ldr	r1, [r4, #20]
 800caba:	1d18      	adds	r0, r3, #4
 800cabc:	6028      	str	r0, [r5, #0]
 800cabe:	0635      	lsls	r5, r6, #24
 800cac0:	681b      	ldr	r3, [r3, #0]
 800cac2:	d501      	bpl.n	800cac8 <_printf_i+0x1cc>
 800cac4:	6019      	str	r1, [r3, #0]
 800cac6:	e002      	b.n	800cace <_printf_i+0x1d2>
 800cac8:	0670      	lsls	r0, r6, #25
 800caca:	d5fb      	bpl.n	800cac4 <_printf_i+0x1c8>
 800cacc:	8019      	strh	r1, [r3, #0]
 800cace:	2300      	movs	r3, #0
 800cad0:	6123      	str	r3, [r4, #16]
 800cad2:	4615      	mov	r5, r2
 800cad4:	e7ba      	b.n	800ca4c <_printf_i+0x150>
 800cad6:	682b      	ldr	r3, [r5, #0]
 800cad8:	1d1a      	adds	r2, r3, #4
 800cada:	602a      	str	r2, [r5, #0]
 800cadc:	681d      	ldr	r5, [r3, #0]
 800cade:	6862      	ldr	r2, [r4, #4]
 800cae0:	2100      	movs	r1, #0
 800cae2:	4628      	mov	r0, r5
 800cae4:	f7f3 fb9c 	bl	8000220 <memchr>
 800cae8:	b108      	cbz	r0, 800caee <_printf_i+0x1f2>
 800caea:	1b40      	subs	r0, r0, r5
 800caec:	6060      	str	r0, [r4, #4]
 800caee:	6863      	ldr	r3, [r4, #4]
 800caf0:	6123      	str	r3, [r4, #16]
 800caf2:	2300      	movs	r3, #0
 800caf4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800caf8:	e7a8      	b.n	800ca4c <_printf_i+0x150>
 800cafa:	6923      	ldr	r3, [r4, #16]
 800cafc:	462a      	mov	r2, r5
 800cafe:	4649      	mov	r1, r9
 800cb00:	4640      	mov	r0, r8
 800cb02:	47d0      	blx	sl
 800cb04:	3001      	adds	r0, #1
 800cb06:	d0ab      	beq.n	800ca60 <_printf_i+0x164>
 800cb08:	6823      	ldr	r3, [r4, #0]
 800cb0a:	079b      	lsls	r3, r3, #30
 800cb0c:	d413      	bmi.n	800cb36 <_printf_i+0x23a>
 800cb0e:	68e0      	ldr	r0, [r4, #12]
 800cb10:	9b03      	ldr	r3, [sp, #12]
 800cb12:	4298      	cmp	r0, r3
 800cb14:	bfb8      	it	lt
 800cb16:	4618      	movlt	r0, r3
 800cb18:	e7a4      	b.n	800ca64 <_printf_i+0x168>
 800cb1a:	2301      	movs	r3, #1
 800cb1c:	4632      	mov	r2, r6
 800cb1e:	4649      	mov	r1, r9
 800cb20:	4640      	mov	r0, r8
 800cb22:	47d0      	blx	sl
 800cb24:	3001      	adds	r0, #1
 800cb26:	d09b      	beq.n	800ca60 <_printf_i+0x164>
 800cb28:	3501      	adds	r5, #1
 800cb2a:	68e3      	ldr	r3, [r4, #12]
 800cb2c:	9903      	ldr	r1, [sp, #12]
 800cb2e:	1a5b      	subs	r3, r3, r1
 800cb30:	42ab      	cmp	r3, r5
 800cb32:	dcf2      	bgt.n	800cb1a <_printf_i+0x21e>
 800cb34:	e7eb      	b.n	800cb0e <_printf_i+0x212>
 800cb36:	2500      	movs	r5, #0
 800cb38:	f104 0619 	add.w	r6, r4, #25
 800cb3c:	e7f5      	b.n	800cb2a <_printf_i+0x22e>
 800cb3e:	bf00      	nop
 800cb40:	08010662 	.word	0x08010662
 800cb44:	08010673 	.word	0x08010673

0800cb48 <siprintf>:
 800cb48:	b40e      	push	{r1, r2, r3}
 800cb4a:	b500      	push	{lr}
 800cb4c:	b09c      	sub	sp, #112	; 0x70
 800cb4e:	ab1d      	add	r3, sp, #116	; 0x74
 800cb50:	9002      	str	r0, [sp, #8]
 800cb52:	9006      	str	r0, [sp, #24]
 800cb54:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800cb58:	4809      	ldr	r0, [pc, #36]	; (800cb80 <siprintf+0x38>)
 800cb5a:	9107      	str	r1, [sp, #28]
 800cb5c:	9104      	str	r1, [sp, #16]
 800cb5e:	4909      	ldr	r1, [pc, #36]	; (800cb84 <siprintf+0x3c>)
 800cb60:	f853 2b04 	ldr.w	r2, [r3], #4
 800cb64:	9105      	str	r1, [sp, #20]
 800cb66:	6800      	ldr	r0, [r0, #0]
 800cb68:	9301      	str	r3, [sp, #4]
 800cb6a:	a902      	add	r1, sp, #8
 800cb6c:	f001 fb76 	bl	800e25c <_svfiprintf_r>
 800cb70:	9b02      	ldr	r3, [sp, #8]
 800cb72:	2200      	movs	r2, #0
 800cb74:	701a      	strb	r2, [r3, #0]
 800cb76:	b01c      	add	sp, #112	; 0x70
 800cb78:	f85d eb04 	ldr.w	lr, [sp], #4
 800cb7c:	b003      	add	sp, #12
 800cb7e:	4770      	bx	lr
 800cb80:	200000a0 	.word	0x200000a0
 800cb84:	ffff0208 	.word	0xffff0208

0800cb88 <quorem>:
 800cb88:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cb8c:	6903      	ldr	r3, [r0, #16]
 800cb8e:	690c      	ldr	r4, [r1, #16]
 800cb90:	42a3      	cmp	r3, r4
 800cb92:	4607      	mov	r7, r0
 800cb94:	f2c0 8081 	blt.w	800cc9a <quorem+0x112>
 800cb98:	3c01      	subs	r4, #1
 800cb9a:	f101 0814 	add.w	r8, r1, #20
 800cb9e:	f100 0514 	add.w	r5, r0, #20
 800cba2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800cba6:	9301      	str	r3, [sp, #4]
 800cba8:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800cbac:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800cbb0:	3301      	adds	r3, #1
 800cbb2:	429a      	cmp	r2, r3
 800cbb4:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800cbb8:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800cbbc:	fbb2 f6f3 	udiv	r6, r2, r3
 800cbc0:	d331      	bcc.n	800cc26 <quorem+0x9e>
 800cbc2:	f04f 0e00 	mov.w	lr, #0
 800cbc6:	4640      	mov	r0, r8
 800cbc8:	46ac      	mov	ip, r5
 800cbca:	46f2      	mov	sl, lr
 800cbcc:	f850 2b04 	ldr.w	r2, [r0], #4
 800cbd0:	b293      	uxth	r3, r2
 800cbd2:	fb06 e303 	mla	r3, r6, r3, lr
 800cbd6:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800cbda:	b29b      	uxth	r3, r3
 800cbdc:	ebaa 0303 	sub.w	r3, sl, r3
 800cbe0:	f8dc a000 	ldr.w	sl, [ip]
 800cbe4:	0c12      	lsrs	r2, r2, #16
 800cbe6:	fa13 f38a 	uxtah	r3, r3, sl
 800cbea:	fb06 e202 	mla	r2, r6, r2, lr
 800cbee:	9300      	str	r3, [sp, #0]
 800cbf0:	9b00      	ldr	r3, [sp, #0]
 800cbf2:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800cbf6:	b292      	uxth	r2, r2
 800cbf8:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800cbfc:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800cc00:	f8bd 3000 	ldrh.w	r3, [sp]
 800cc04:	4581      	cmp	r9, r0
 800cc06:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800cc0a:	f84c 3b04 	str.w	r3, [ip], #4
 800cc0e:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800cc12:	d2db      	bcs.n	800cbcc <quorem+0x44>
 800cc14:	f855 300b 	ldr.w	r3, [r5, fp]
 800cc18:	b92b      	cbnz	r3, 800cc26 <quorem+0x9e>
 800cc1a:	9b01      	ldr	r3, [sp, #4]
 800cc1c:	3b04      	subs	r3, #4
 800cc1e:	429d      	cmp	r5, r3
 800cc20:	461a      	mov	r2, r3
 800cc22:	d32e      	bcc.n	800cc82 <quorem+0xfa>
 800cc24:	613c      	str	r4, [r7, #16]
 800cc26:	4638      	mov	r0, r7
 800cc28:	f001 f8c4 	bl	800ddb4 <__mcmp>
 800cc2c:	2800      	cmp	r0, #0
 800cc2e:	db24      	blt.n	800cc7a <quorem+0xf2>
 800cc30:	3601      	adds	r6, #1
 800cc32:	4628      	mov	r0, r5
 800cc34:	f04f 0c00 	mov.w	ip, #0
 800cc38:	f858 2b04 	ldr.w	r2, [r8], #4
 800cc3c:	f8d0 e000 	ldr.w	lr, [r0]
 800cc40:	b293      	uxth	r3, r2
 800cc42:	ebac 0303 	sub.w	r3, ip, r3
 800cc46:	0c12      	lsrs	r2, r2, #16
 800cc48:	fa13 f38e 	uxtah	r3, r3, lr
 800cc4c:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800cc50:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800cc54:	b29b      	uxth	r3, r3
 800cc56:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800cc5a:	45c1      	cmp	r9, r8
 800cc5c:	f840 3b04 	str.w	r3, [r0], #4
 800cc60:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800cc64:	d2e8      	bcs.n	800cc38 <quorem+0xb0>
 800cc66:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800cc6a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800cc6e:	b922      	cbnz	r2, 800cc7a <quorem+0xf2>
 800cc70:	3b04      	subs	r3, #4
 800cc72:	429d      	cmp	r5, r3
 800cc74:	461a      	mov	r2, r3
 800cc76:	d30a      	bcc.n	800cc8e <quorem+0x106>
 800cc78:	613c      	str	r4, [r7, #16]
 800cc7a:	4630      	mov	r0, r6
 800cc7c:	b003      	add	sp, #12
 800cc7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cc82:	6812      	ldr	r2, [r2, #0]
 800cc84:	3b04      	subs	r3, #4
 800cc86:	2a00      	cmp	r2, #0
 800cc88:	d1cc      	bne.n	800cc24 <quorem+0x9c>
 800cc8a:	3c01      	subs	r4, #1
 800cc8c:	e7c7      	b.n	800cc1e <quorem+0x96>
 800cc8e:	6812      	ldr	r2, [r2, #0]
 800cc90:	3b04      	subs	r3, #4
 800cc92:	2a00      	cmp	r2, #0
 800cc94:	d1f0      	bne.n	800cc78 <quorem+0xf0>
 800cc96:	3c01      	subs	r4, #1
 800cc98:	e7eb      	b.n	800cc72 <quorem+0xea>
 800cc9a:	2000      	movs	r0, #0
 800cc9c:	e7ee      	b.n	800cc7c <quorem+0xf4>
	...

0800cca0 <_dtoa_r>:
 800cca0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cca4:	ed2d 8b04 	vpush	{d8-d9}
 800cca8:	ec57 6b10 	vmov	r6, r7, d0
 800ccac:	b093      	sub	sp, #76	; 0x4c
 800ccae:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800ccb0:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 800ccb4:	9106      	str	r1, [sp, #24]
 800ccb6:	ee10 aa10 	vmov	sl, s0
 800ccba:	4604      	mov	r4, r0
 800ccbc:	9209      	str	r2, [sp, #36]	; 0x24
 800ccbe:	930c      	str	r3, [sp, #48]	; 0x30
 800ccc0:	46bb      	mov	fp, r7
 800ccc2:	b975      	cbnz	r5, 800cce2 <_dtoa_r+0x42>
 800ccc4:	2010      	movs	r0, #16
 800ccc6:	f000 fddd 	bl	800d884 <malloc>
 800ccca:	4602      	mov	r2, r0
 800cccc:	6260      	str	r0, [r4, #36]	; 0x24
 800ccce:	b920      	cbnz	r0, 800ccda <_dtoa_r+0x3a>
 800ccd0:	4ba7      	ldr	r3, [pc, #668]	; (800cf70 <_dtoa_r+0x2d0>)
 800ccd2:	21ea      	movs	r1, #234	; 0xea
 800ccd4:	48a7      	ldr	r0, [pc, #668]	; (800cf74 <_dtoa_r+0x2d4>)
 800ccd6:	f001 fbd1 	bl	800e47c <__assert_func>
 800ccda:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800ccde:	6005      	str	r5, [r0, #0]
 800cce0:	60c5      	str	r5, [r0, #12]
 800cce2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cce4:	6819      	ldr	r1, [r3, #0]
 800cce6:	b151      	cbz	r1, 800ccfe <_dtoa_r+0x5e>
 800cce8:	685a      	ldr	r2, [r3, #4]
 800ccea:	604a      	str	r2, [r1, #4]
 800ccec:	2301      	movs	r3, #1
 800ccee:	4093      	lsls	r3, r2
 800ccf0:	608b      	str	r3, [r1, #8]
 800ccf2:	4620      	mov	r0, r4
 800ccf4:	f000 fe1c 	bl	800d930 <_Bfree>
 800ccf8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ccfa:	2200      	movs	r2, #0
 800ccfc:	601a      	str	r2, [r3, #0]
 800ccfe:	1e3b      	subs	r3, r7, #0
 800cd00:	bfaa      	itet	ge
 800cd02:	2300      	movge	r3, #0
 800cd04:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 800cd08:	f8c8 3000 	strge.w	r3, [r8]
 800cd0c:	4b9a      	ldr	r3, [pc, #616]	; (800cf78 <_dtoa_r+0x2d8>)
 800cd0e:	bfbc      	itt	lt
 800cd10:	2201      	movlt	r2, #1
 800cd12:	f8c8 2000 	strlt.w	r2, [r8]
 800cd16:	ea33 030b 	bics.w	r3, r3, fp
 800cd1a:	d11b      	bne.n	800cd54 <_dtoa_r+0xb4>
 800cd1c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800cd1e:	f242 730f 	movw	r3, #9999	; 0x270f
 800cd22:	6013      	str	r3, [r2, #0]
 800cd24:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800cd28:	4333      	orrs	r3, r6
 800cd2a:	f000 8592 	beq.w	800d852 <_dtoa_r+0xbb2>
 800cd2e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800cd30:	b963      	cbnz	r3, 800cd4c <_dtoa_r+0xac>
 800cd32:	4b92      	ldr	r3, [pc, #584]	; (800cf7c <_dtoa_r+0x2dc>)
 800cd34:	e022      	b.n	800cd7c <_dtoa_r+0xdc>
 800cd36:	4b92      	ldr	r3, [pc, #584]	; (800cf80 <_dtoa_r+0x2e0>)
 800cd38:	9301      	str	r3, [sp, #4]
 800cd3a:	3308      	adds	r3, #8
 800cd3c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800cd3e:	6013      	str	r3, [r2, #0]
 800cd40:	9801      	ldr	r0, [sp, #4]
 800cd42:	b013      	add	sp, #76	; 0x4c
 800cd44:	ecbd 8b04 	vpop	{d8-d9}
 800cd48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cd4c:	4b8b      	ldr	r3, [pc, #556]	; (800cf7c <_dtoa_r+0x2dc>)
 800cd4e:	9301      	str	r3, [sp, #4]
 800cd50:	3303      	adds	r3, #3
 800cd52:	e7f3      	b.n	800cd3c <_dtoa_r+0x9c>
 800cd54:	2200      	movs	r2, #0
 800cd56:	2300      	movs	r3, #0
 800cd58:	4650      	mov	r0, sl
 800cd5a:	4659      	mov	r1, fp
 800cd5c:	f7f3 fed4 	bl	8000b08 <__aeabi_dcmpeq>
 800cd60:	ec4b ab19 	vmov	d9, sl, fp
 800cd64:	4680      	mov	r8, r0
 800cd66:	b158      	cbz	r0, 800cd80 <_dtoa_r+0xe0>
 800cd68:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800cd6a:	2301      	movs	r3, #1
 800cd6c:	6013      	str	r3, [r2, #0]
 800cd6e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800cd70:	2b00      	cmp	r3, #0
 800cd72:	f000 856b 	beq.w	800d84c <_dtoa_r+0xbac>
 800cd76:	4883      	ldr	r0, [pc, #524]	; (800cf84 <_dtoa_r+0x2e4>)
 800cd78:	6018      	str	r0, [r3, #0]
 800cd7a:	1e43      	subs	r3, r0, #1
 800cd7c:	9301      	str	r3, [sp, #4]
 800cd7e:	e7df      	b.n	800cd40 <_dtoa_r+0xa0>
 800cd80:	ec4b ab10 	vmov	d0, sl, fp
 800cd84:	aa10      	add	r2, sp, #64	; 0x40
 800cd86:	a911      	add	r1, sp, #68	; 0x44
 800cd88:	4620      	mov	r0, r4
 800cd8a:	f001 f8b9 	bl	800df00 <__d2b>
 800cd8e:	f3cb 550a 	ubfx	r5, fp, #20, #11
 800cd92:	ee08 0a10 	vmov	s16, r0
 800cd96:	2d00      	cmp	r5, #0
 800cd98:	f000 8084 	beq.w	800cea4 <_dtoa_r+0x204>
 800cd9c:	ee19 3a90 	vmov	r3, s19
 800cda0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800cda4:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 800cda8:	4656      	mov	r6, sl
 800cdaa:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 800cdae:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800cdb2:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 800cdb6:	4b74      	ldr	r3, [pc, #464]	; (800cf88 <_dtoa_r+0x2e8>)
 800cdb8:	2200      	movs	r2, #0
 800cdba:	4630      	mov	r0, r6
 800cdbc:	4639      	mov	r1, r7
 800cdbe:	f7f3 fa83 	bl	80002c8 <__aeabi_dsub>
 800cdc2:	a365      	add	r3, pc, #404	; (adr r3, 800cf58 <_dtoa_r+0x2b8>)
 800cdc4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cdc8:	f7f3 fc36 	bl	8000638 <__aeabi_dmul>
 800cdcc:	a364      	add	r3, pc, #400	; (adr r3, 800cf60 <_dtoa_r+0x2c0>)
 800cdce:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cdd2:	f7f3 fa7b 	bl	80002cc <__adddf3>
 800cdd6:	4606      	mov	r6, r0
 800cdd8:	4628      	mov	r0, r5
 800cdda:	460f      	mov	r7, r1
 800cddc:	f7f3 fbc2 	bl	8000564 <__aeabi_i2d>
 800cde0:	a361      	add	r3, pc, #388	; (adr r3, 800cf68 <_dtoa_r+0x2c8>)
 800cde2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cde6:	f7f3 fc27 	bl	8000638 <__aeabi_dmul>
 800cdea:	4602      	mov	r2, r0
 800cdec:	460b      	mov	r3, r1
 800cdee:	4630      	mov	r0, r6
 800cdf0:	4639      	mov	r1, r7
 800cdf2:	f7f3 fa6b 	bl	80002cc <__adddf3>
 800cdf6:	4606      	mov	r6, r0
 800cdf8:	460f      	mov	r7, r1
 800cdfa:	f7f3 fecd 	bl	8000b98 <__aeabi_d2iz>
 800cdfe:	2200      	movs	r2, #0
 800ce00:	9000      	str	r0, [sp, #0]
 800ce02:	2300      	movs	r3, #0
 800ce04:	4630      	mov	r0, r6
 800ce06:	4639      	mov	r1, r7
 800ce08:	f7f3 fe88 	bl	8000b1c <__aeabi_dcmplt>
 800ce0c:	b150      	cbz	r0, 800ce24 <_dtoa_r+0x184>
 800ce0e:	9800      	ldr	r0, [sp, #0]
 800ce10:	f7f3 fba8 	bl	8000564 <__aeabi_i2d>
 800ce14:	4632      	mov	r2, r6
 800ce16:	463b      	mov	r3, r7
 800ce18:	f7f3 fe76 	bl	8000b08 <__aeabi_dcmpeq>
 800ce1c:	b910      	cbnz	r0, 800ce24 <_dtoa_r+0x184>
 800ce1e:	9b00      	ldr	r3, [sp, #0]
 800ce20:	3b01      	subs	r3, #1
 800ce22:	9300      	str	r3, [sp, #0]
 800ce24:	9b00      	ldr	r3, [sp, #0]
 800ce26:	2b16      	cmp	r3, #22
 800ce28:	d85a      	bhi.n	800cee0 <_dtoa_r+0x240>
 800ce2a:	9a00      	ldr	r2, [sp, #0]
 800ce2c:	4b57      	ldr	r3, [pc, #348]	; (800cf8c <_dtoa_r+0x2ec>)
 800ce2e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800ce32:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ce36:	ec51 0b19 	vmov	r0, r1, d9
 800ce3a:	f7f3 fe6f 	bl	8000b1c <__aeabi_dcmplt>
 800ce3e:	2800      	cmp	r0, #0
 800ce40:	d050      	beq.n	800cee4 <_dtoa_r+0x244>
 800ce42:	9b00      	ldr	r3, [sp, #0]
 800ce44:	3b01      	subs	r3, #1
 800ce46:	9300      	str	r3, [sp, #0]
 800ce48:	2300      	movs	r3, #0
 800ce4a:	930b      	str	r3, [sp, #44]	; 0x2c
 800ce4c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ce4e:	1b5d      	subs	r5, r3, r5
 800ce50:	1e6b      	subs	r3, r5, #1
 800ce52:	9305      	str	r3, [sp, #20]
 800ce54:	bf45      	ittet	mi
 800ce56:	f1c5 0301 	rsbmi	r3, r5, #1
 800ce5a:	9304      	strmi	r3, [sp, #16]
 800ce5c:	2300      	movpl	r3, #0
 800ce5e:	2300      	movmi	r3, #0
 800ce60:	bf4c      	ite	mi
 800ce62:	9305      	strmi	r3, [sp, #20]
 800ce64:	9304      	strpl	r3, [sp, #16]
 800ce66:	9b00      	ldr	r3, [sp, #0]
 800ce68:	2b00      	cmp	r3, #0
 800ce6a:	db3d      	blt.n	800cee8 <_dtoa_r+0x248>
 800ce6c:	9b05      	ldr	r3, [sp, #20]
 800ce6e:	9a00      	ldr	r2, [sp, #0]
 800ce70:	920a      	str	r2, [sp, #40]	; 0x28
 800ce72:	4413      	add	r3, r2
 800ce74:	9305      	str	r3, [sp, #20]
 800ce76:	2300      	movs	r3, #0
 800ce78:	9307      	str	r3, [sp, #28]
 800ce7a:	9b06      	ldr	r3, [sp, #24]
 800ce7c:	2b09      	cmp	r3, #9
 800ce7e:	f200 8089 	bhi.w	800cf94 <_dtoa_r+0x2f4>
 800ce82:	2b05      	cmp	r3, #5
 800ce84:	bfc4      	itt	gt
 800ce86:	3b04      	subgt	r3, #4
 800ce88:	9306      	strgt	r3, [sp, #24]
 800ce8a:	9b06      	ldr	r3, [sp, #24]
 800ce8c:	f1a3 0302 	sub.w	r3, r3, #2
 800ce90:	bfcc      	ite	gt
 800ce92:	2500      	movgt	r5, #0
 800ce94:	2501      	movle	r5, #1
 800ce96:	2b03      	cmp	r3, #3
 800ce98:	f200 8087 	bhi.w	800cfaa <_dtoa_r+0x30a>
 800ce9c:	e8df f003 	tbb	[pc, r3]
 800cea0:	59383a2d 	.word	0x59383a2d
 800cea4:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 800cea8:	441d      	add	r5, r3
 800ceaa:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800ceae:	2b20      	cmp	r3, #32
 800ceb0:	bfc1      	itttt	gt
 800ceb2:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800ceb6:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 800ceba:	fa0b f303 	lslgt.w	r3, fp, r3
 800cebe:	fa26 f000 	lsrgt.w	r0, r6, r0
 800cec2:	bfda      	itte	le
 800cec4:	f1c3 0320 	rsble	r3, r3, #32
 800cec8:	fa06 f003 	lslle.w	r0, r6, r3
 800cecc:	4318      	orrgt	r0, r3
 800cece:	f7f3 fb39 	bl	8000544 <__aeabi_ui2d>
 800ced2:	2301      	movs	r3, #1
 800ced4:	4606      	mov	r6, r0
 800ced6:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 800ceda:	3d01      	subs	r5, #1
 800cedc:	930e      	str	r3, [sp, #56]	; 0x38
 800cede:	e76a      	b.n	800cdb6 <_dtoa_r+0x116>
 800cee0:	2301      	movs	r3, #1
 800cee2:	e7b2      	b.n	800ce4a <_dtoa_r+0x1aa>
 800cee4:	900b      	str	r0, [sp, #44]	; 0x2c
 800cee6:	e7b1      	b.n	800ce4c <_dtoa_r+0x1ac>
 800cee8:	9b04      	ldr	r3, [sp, #16]
 800ceea:	9a00      	ldr	r2, [sp, #0]
 800ceec:	1a9b      	subs	r3, r3, r2
 800ceee:	9304      	str	r3, [sp, #16]
 800cef0:	4253      	negs	r3, r2
 800cef2:	9307      	str	r3, [sp, #28]
 800cef4:	2300      	movs	r3, #0
 800cef6:	930a      	str	r3, [sp, #40]	; 0x28
 800cef8:	e7bf      	b.n	800ce7a <_dtoa_r+0x1da>
 800cefa:	2300      	movs	r3, #0
 800cefc:	9308      	str	r3, [sp, #32]
 800cefe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cf00:	2b00      	cmp	r3, #0
 800cf02:	dc55      	bgt.n	800cfb0 <_dtoa_r+0x310>
 800cf04:	2301      	movs	r3, #1
 800cf06:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800cf0a:	461a      	mov	r2, r3
 800cf0c:	9209      	str	r2, [sp, #36]	; 0x24
 800cf0e:	e00c      	b.n	800cf2a <_dtoa_r+0x28a>
 800cf10:	2301      	movs	r3, #1
 800cf12:	e7f3      	b.n	800cefc <_dtoa_r+0x25c>
 800cf14:	2300      	movs	r3, #0
 800cf16:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800cf18:	9308      	str	r3, [sp, #32]
 800cf1a:	9b00      	ldr	r3, [sp, #0]
 800cf1c:	4413      	add	r3, r2
 800cf1e:	9302      	str	r3, [sp, #8]
 800cf20:	3301      	adds	r3, #1
 800cf22:	2b01      	cmp	r3, #1
 800cf24:	9303      	str	r3, [sp, #12]
 800cf26:	bfb8      	it	lt
 800cf28:	2301      	movlt	r3, #1
 800cf2a:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800cf2c:	2200      	movs	r2, #0
 800cf2e:	6042      	str	r2, [r0, #4]
 800cf30:	2204      	movs	r2, #4
 800cf32:	f102 0614 	add.w	r6, r2, #20
 800cf36:	429e      	cmp	r6, r3
 800cf38:	6841      	ldr	r1, [r0, #4]
 800cf3a:	d93d      	bls.n	800cfb8 <_dtoa_r+0x318>
 800cf3c:	4620      	mov	r0, r4
 800cf3e:	f000 fcb7 	bl	800d8b0 <_Balloc>
 800cf42:	9001      	str	r0, [sp, #4]
 800cf44:	2800      	cmp	r0, #0
 800cf46:	d13b      	bne.n	800cfc0 <_dtoa_r+0x320>
 800cf48:	4b11      	ldr	r3, [pc, #68]	; (800cf90 <_dtoa_r+0x2f0>)
 800cf4a:	4602      	mov	r2, r0
 800cf4c:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800cf50:	e6c0      	b.n	800ccd4 <_dtoa_r+0x34>
 800cf52:	2301      	movs	r3, #1
 800cf54:	e7df      	b.n	800cf16 <_dtoa_r+0x276>
 800cf56:	bf00      	nop
 800cf58:	636f4361 	.word	0x636f4361
 800cf5c:	3fd287a7 	.word	0x3fd287a7
 800cf60:	8b60c8b3 	.word	0x8b60c8b3
 800cf64:	3fc68a28 	.word	0x3fc68a28
 800cf68:	509f79fb 	.word	0x509f79fb
 800cf6c:	3fd34413 	.word	0x3fd34413
 800cf70:	08010691 	.word	0x08010691
 800cf74:	080106a8 	.word	0x080106a8
 800cf78:	7ff00000 	.word	0x7ff00000
 800cf7c:	0801068d 	.word	0x0801068d
 800cf80:	08010684 	.word	0x08010684
 800cf84:	08010661 	.word	0x08010661
 800cf88:	3ff80000 	.word	0x3ff80000
 800cf8c:	08010798 	.word	0x08010798
 800cf90:	08010703 	.word	0x08010703
 800cf94:	2501      	movs	r5, #1
 800cf96:	2300      	movs	r3, #0
 800cf98:	9306      	str	r3, [sp, #24]
 800cf9a:	9508      	str	r5, [sp, #32]
 800cf9c:	f04f 33ff 	mov.w	r3, #4294967295
 800cfa0:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800cfa4:	2200      	movs	r2, #0
 800cfa6:	2312      	movs	r3, #18
 800cfa8:	e7b0      	b.n	800cf0c <_dtoa_r+0x26c>
 800cfaa:	2301      	movs	r3, #1
 800cfac:	9308      	str	r3, [sp, #32]
 800cfae:	e7f5      	b.n	800cf9c <_dtoa_r+0x2fc>
 800cfb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cfb2:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800cfb6:	e7b8      	b.n	800cf2a <_dtoa_r+0x28a>
 800cfb8:	3101      	adds	r1, #1
 800cfba:	6041      	str	r1, [r0, #4]
 800cfbc:	0052      	lsls	r2, r2, #1
 800cfbe:	e7b8      	b.n	800cf32 <_dtoa_r+0x292>
 800cfc0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cfc2:	9a01      	ldr	r2, [sp, #4]
 800cfc4:	601a      	str	r2, [r3, #0]
 800cfc6:	9b03      	ldr	r3, [sp, #12]
 800cfc8:	2b0e      	cmp	r3, #14
 800cfca:	f200 809d 	bhi.w	800d108 <_dtoa_r+0x468>
 800cfce:	2d00      	cmp	r5, #0
 800cfd0:	f000 809a 	beq.w	800d108 <_dtoa_r+0x468>
 800cfd4:	9b00      	ldr	r3, [sp, #0]
 800cfd6:	2b00      	cmp	r3, #0
 800cfd8:	dd32      	ble.n	800d040 <_dtoa_r+0x3a0>
 800cfda:	4ab7      	ldr	r2, [pc, #732]	; (800d2b8 <_dtoa_r+0x618>)
 800cfdc:	f003 030f 	and.w	r3, r3, #15
 800cfe0:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800cfe4:	e9d3 8900 	ldrd	r8, r9, [r3]
 800cfe8:	9b00      	ldr	r3, [sp, #0]
 800cfea:	05d8      	lsls	r0, r3, #23
 800cfec:	ea4f 1723 	mov.w	r7, r3, asr #4
 800cff0:	d516      	bpl.n	800d020 <_dtoa_r+0x380>
 800cff2:	4bb2      	ldr	r3, [pc, #712]	; (800d2bc <_dtoa_r+0x61c>)
 800cff4:	ec51 0b19 	vmov	r0, r1, d9
 800cff8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800cffc:	f7f3 fc46 	bl	800088c <__aeabi_ddiv>
 800d000:	f007 070f 	and.w	r7, r7, #15
 800d004:	4682      	mov	sl, r0
 800d006:	468b      	mov	fp, r1
 800d008:	2503      	movs	r5, #3
 800d00a:	4eac      	ldr	r6, [pc, #688]	; (800d2bc <_dtoa_r+0x61c>)
 800d00c:	b957      	cbnz	r7, 800d024 <_dtoa_r+0x384>
 800d00e:	4642      	mov	r2, r8
 800d010:	464b      	mov	r3, r9
 800d012:	4650      	mov	r0, sl
 800d014:	4659      	mov	r1, fp
 800d016:	f7f3 fc39 	bl	800088c <__aeabi_ddiv>
 800d01a:	4682      	mov	sl, r0
 800d01c:	468b      	mov	fp, r1
 800d01e:	e028      	b.n	800d072 <_dtoa_r+0x3d2>
 800d020:	2502      	movs	r5, #2
 800d022:	e7f2      	b.n	800d00a <_dtoa_r+0x36a>
 800d024:	07f9      	lsls	r1, r7, #31
 800d026:	d508      	bpl.n	800d03a <_dtoa_r+0x39a>
 800d028:	4640      	mov	r0, r8
 800d02a:	4649      	mov	r1, r9
 800d02c:	e9d6 2300 	ldrd	r2, r3, [r6]
 800d030:	f7f3 fb02 	bl	8000638 <__aeabi_dmul>
 800d034:	3501      	adds	r5, #1
 800d036:	4680      	mov	r8, r0
 800d038:	4689      	mov	r9, r1
 800d03a:	107f      	asrs	r7, r7, #1
 800d03c:	3608      	adds	r6, #8
 800d03e:	e7e5      	b.n	800d00c <_dtoa_r+0x36c>
 800d040:	f000 809b 	beq.w	800d17a <_dtoa_r+0x4da>
 800d044:	9b00      	ldr	r3, [sp, #0]
 800d046:	4f9d      	ldr	r7, [pc, #628]	; (800d2bc <_dtoa_r+0x61c>)
 800d048:	425e      	negs	r6, r3
 800d04a:	4b9b      	ldr	r3, [pc, #620]	; (800d2b8 <_dtoa_r+0x618>)
 800d04c:	f006 020f 	and.w	r2, r6, #15
 800d050:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800d054:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d058:	ec51 0b19 	vmov	r0, r1, d9
 800d05c:	f7f3 faec 	bl	8000638 <__aeabi_dmul>
 800d060:	1136      	asrs	r6, r6, #4
 800d062:	4682      	mov	sl, r0
 800d064:	468b      	mov	fp, r1
 800d066:	2300      	movs	r3, #0
 800d068:	2502      	movs	r5, #2
 800d06a:	2e00      	cmp	r6, #0
 800d06c:	d17a      	bne.n	800d164 <_dtoa_r+0x4c4>
 800d06e:	2b00      	cmp	r3, #0
 800d070:	d1d3      	bne.n	800d01a <_dtoa_r+0x37a>
 800d072:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d074:	2b00      	cmp	r3, #0
 800d076:	f000 8082 	beq.w	800d17e <_dtoa_r+0x4de>
 800d07a:	4b91      	ldr	r3, [pc, #580]	; (800d2c0 <_dtoa_r+0x620>)
 800d07c:	2200      	movs	r2, #0
 800d07e:	4650      	mov	r0, sl
 800d080:	4659      	mov	r1, fp
 800d082:	f7f3 fd4b 	bl	8000b1c <__aeabi_dcmplt>
 800d086:	2800      	cmp	r0, #0
 800d088:	d079      	beq.n	800d17e <_dtoa_r+0x4de>
 800d08a:	9b03      	ldr	r3, [sp, #12]
 800d08c:	2b00      	cmp	r3, #0
 800d08e:	d076      	beq.n	800d17e <_dtoa_r+0x4de>
 800d090:	9b02      	ldr	r3, [sp, #8]
 800d092:	2b00      	cmp	r3, #0
 800d094:	dd36      	ble.n	800d104 <_dtoa_r+0x464>
 800d096:	9b00      	ldr	r3, [sp, #0]
 800d098:	4650      	mov	r0, sl
 800d09a:	4659      	mov	r1, fp
 800d09c:	1e5f      	subs	r7, r3, #1
 800d09e:	2200      	movs	r2, #0
 800d0a0:	4b88      	ldr	r3, [pc, #544]	; (800d2c4 <_dtoa_r+0x624>)
 800d0a2:	f7f3 fac9 	bl	8000638 <__aeabi_dmul>
 800d0a6:	9e02      	ldr	r6, [sp, #8]
 800d0a8:	4682      	mov	sl, r0
 800d0aa:	468b      	mov	fp, r1
 800d0ac:	3501      	adds	r5, #1
 800d0ae:	4628      	mov	r0, r5
 800d0b0:	f7f3 fa58 	bl	8000564 <__aeabi_i2d>
 800d0b4:	4652      	mov	r2, sl
 800d0b6:	465b      	mov	r3, fp
 800d0b8:	f7f3 fabe 	bl	8000638 <__aeabi_dmul>
 800d0bc:	4b82      	ldr	r3, [pc, #520]	; (800d2c8 <_dtoa_r+0x628>)
 800d0be:	2200      	movs	r2, #0
 800d0c0:	f7f3 f904 	bl	80002cc <__adddf3>
 800d0c4:	46d0      	mov	r8, sl
 800d0c6:	46d9      	mov	r9, fp
 800d0c8:	4682      	mov	sl, r0
 800d0ca:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 800d0ce:	2e00      	cmp	r6, #0
 800d0d0:	d158      	bne.n	800d184 <_dtoa_r+0x4e4>
 800d0d2:	4b7e      	ldr	r3, [pc, #504]	; (800d2cc <_dtoa_r+0x62c>)
 800d0d4:	2200      	movs	r2, #0
 800d0d6:	4640      	mov	r0, r8
 800d0d8:	4649      	mov	r1, r9
 800d0da:	f7f3 f8f5 	bl	80002c8 <__aeabi_dsub>
 800d0de:	4652      	mov	r2, sl
 800d0e0:	465b      	mov	r3, fp
 800d0e2:	4680      	mov	r8, r0
 800d0e4:	4689      	mov	r9, r1
 800d0e6:	f7f3 fd37 	bl	8000b58 <__aeabi_dcmpgt>
 800d0ea:	2800      	cmp	r0, #0
 800d0ec:	f040 8295 	bne.w	800d61a <_dtoa_r+0x97a>
 800d0f0:	4652      	mov	r2, sl
 800d0f2:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800d0f6:	4640      	mov	r0, r8
 800d0f8:	4649      	mov	r1, r9
 800d0fa:	f7f3 fd0f 	bl	8000b1c <__aeabi_dcmplt>
 800d0fe:	2800      	cmp	r0, #0
 800d100:	f040 8289 	bne.w	800d616 <_dtoa_r+0x976>
 800d104:	ec5b ab19 	vmov	sl, fp, d9
 800d108:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d10a:	2b00      	cmp	r3, #0
 800d10c:	f2c0 8148 	blt.w	800d3a0 <_dtoa_r+0x700>
 800d110:	9a00      	ldr	r2, [sp, #0]
 800d112:	2a0e      	cmp	r2, #14
 800d114:	f300 8144 	bgt.w	800d3a0 <_dtoa_r+0x700>
 800d118:	4b67      	ldr	r3, [pc, #412]	; (800d2b8 <_dtoa_r+0x618>)
 800d11a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800d11e:	e9d3 8900 	ldrd	r8, r9, [r3]
 800d122:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d124:	2b00      	cmp	r3, #0
 800d126:	f280 80d5 	bge.w	800d2d4 <_dtoa_r+0x634>
 800d12a:	9b03      	ldr	r3, [sp, #12]
 800d12c:	2b00      	cmp	r3, #0
 800d12e:	f300 80d1 	bgt.w	800d2d4 <_dtoa_r+0x634>
 800d132:	f040 826f 	bne.w	800d614 <_dtoa_r+0x974>
 800d136:	4b65      	ldr	r3, [pc, #404]	; (800d2cc <_dtoa_r+0x62c>)
 800d138:	2200      	movs	r2, #0
 800d13a:	4640      	mov	r0, r8
 800d13c:	4649      	mov	r1, r9
 800d13e:	f7f3 fa7b 	bl	8000638 <__aeabi_dmul>
 800d142:	4652      	mov	r2, sl
 800d144:	465b      	mov	r3, fp
 800d146:	f7f3 fcfd 	bl	8000b44 <__aeabi_dcmpge>
 800d14a:	9e03      	ldr	r6, [sp, #12]
 800d14c:	4637      	mov	r7, r6
 800d14e:	2800      	cmp	r0, #0
 800d150:	f040 8245 	bne.w	800d5de <_dtoa_r+0x93e>
 800d154:	9d01      	ldr	r5, [sp, #4]
 800d156:	2331      	movs	r3, #49	; 0x31
 800d158:	f805 3b01 	strb.w	r3, [r5], #1
 800d15c:	9b00      	ldr	r3, [sp, #0]
 800d15e:	3301      	adds	r3, #1
 800d160:	9300      	str	r3, [sp, #0]
 800d162:	e240      	b.n	800d5e6 <_dtoa_r+0x946>
 800d164:	07f2      	lsls	r2, r6, #31
 800d166:	d505      	bpl.n	800d174 <_dtoa_r+0x4d4>
 800d168:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d16c:	f7f3 fa64 	bl	8000638 <__aeabi_dmul>
 800d170:	3501      	adds	r5, #1
 800d172:	2301      	movs	r3, #1
 800d174:	1076      	asrs	r6, r6, #1
 800d176:	3708      	adds	r7, #8
 800d178:	e777      	b.n	800d06a <_dtoa_r+0x3ca>
 800d17a:	2502      	movs	r5, #2
 800d17c:	e779      	b.n	800d072 <_dtoa_r+0x3d2>
 800d17e:	9f00      	ldr	r7, [sp, #0]
 800d180:	9e03      	ldr	r6, [sp, #12]
 800d182:	e794      	b.n	800d0ae <_dtoa_r+0x40e>
 800d184:	9901      	ldr	r1, [sp, #4]
 800d186:	4b4c      	ldr	r3, [pc, #304]	; (800d2b8 <_dtoa_r+0x618>)
 800d188:	4431      	add	r1, r6
 800d18a:	910d      	str	r1, [sp, #52]	; 0x34
 800d18c:	9908      	ldr	r1, [sp, #32]
 800d18e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800d192:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800d196:	2900      	cmp	r1, #0
 800d198:	d043      	beq.n	800d222 <_dtoa_r+0x582>
 800d19a:	494d      	ldr	r1, [pc, #308]	; (800d2d0 <_dtoa_r+0x630>)
 800d19c:	2000      	movs	r0, #0
 800d19e:	f7f3 fb75 	bl	800088c <__aeabi_ddiv>
 800d1a2:	4652      	mov	r2, sl
 800d1a4:	465b      	mov	r3, fp
 800d1a6:	f7f3 f88f 	bl	80002c8 <__aeabi_dsub>
 800d1aa:	9d01      	ldr	r5, [sp, #4]
 800d1ac:	4682      	mov	sl, r0
 800d1ae:	468b      	mov	fp, r1
 800d1b0:	4649      	mov	r1, r9
 800d1b2:	4640      	mov	r0, r8
 800d1b4:	f7f3 fcf0 	bl	8000b98 <__aeabi_d2iz>
 800d1b8:	4606      	mov	r6, r0
 800d1ba:	f7f3 f9d3 	bl	8000564 <__aeabi_i2d>
 800d1be:	4602      	mov	r2, r0
 800d1c0:	460b      	mov	r3, r1
 800d1c2:	4640      	mov	r0, r8
 800d1c4:	4649      	mov	r1, r9
 800d1c6:	f7f3 f87f 	bl	80002c8 <__aeabi_dsub>
 800d1ca:	3630      	adds	r6, #48	; 0x30
 800d1cc:	f805 6b01 	strb.w	r6, [r5], #1
 800d1d0:	4652      	mov	r2, sl
 800d1d2:	465b      	mov	r3, fp
 800d1d4:	4680      	mov	r8, r0
 800d1d6:	4689      	mov	r9, r1
 800d1d8:	f7f3 fca0 	bl	8000b1c <__aeabi_dcmplt>
 800d1dc:	2800      	cmp	r0, #0
 800d1de:	d163      	bne.n	800d2a8 <_dtoa_r+0x608>
 800d1e0:	4642      	mov	r2, r8
 800d1e2:	464b      	mov	r3, r9
 800d1e4:	4936      	ldr	r1, [pc, #216]	; (800d2c0 <_dtoa_r+0x620>)
 800d1e6:	2000      	movs	r0, #0
 800d1e8:	f7f3 f86e 	bl	80002c8 <__aeabi_dsub>
 800d1ec:	4652      	mov	r2, sl
 800d1ee:	465b      	mov	r3, fp
 800d1f0:	f7f3 fc94 	bl	8000b1c <__aeabi_dcmplt>
 800d1f4:	2800      	cmp	r0, #0
 800d1f6:	f040 80b5 	bne.w	800d364 <_dtoa_r+0x6c4>
 800d1fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d1fc:	429d      	cmp	r5, r3
 800d1fe:	d081      	beq.n	800d104 <_dtoa_r+0x464>
 800d200:	4b30      	ldr	r3, [pc, #192]	; (800d2c4 <_dtoa_r+0x624>)
 800d202:	2200      	movs	r2, #0
 800d204:	4650      	mov	r0, sl
 800d206:	4659      	mov	r1, fp
 800d208:	f7f3 fa16 	bl	8000638 <__aeabi_dmul>
 800d20c:	4b2d      	ldr	r3, [pc, #180]	; (800d2c4 <_dtoa_r+0x624>)
 800d20e:	4682      	mov	sl, r0
 800d210:	468b      	mov	fp, r1
 800d212:	4640      	mov	r0, r8
 800d214:	4649      	mov	r1, r9
 800d216:	2200      	movs	r2, #0
 800d218:	f7f3 fa0e 	bl	8000638 <__aeabi_dmul>
 800d21c:	4680      	mov	r8, r0
 800d21e:	4689      	mov	r9, r1
 800d220:	e7c6      	b.n	800d1b0 <_dtoa_r+0x510>
 800d222:	4650      	mov	r0, sl
 800d224:	4659      	mov	r1, fp
 800d226:	f7f3 fa07 	bl	8000638 <__aeabi_dmul>
 800d22a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d22c:	9d01      	ldr	r5, [sp, #4]
 800d22e:	930f      	str	r3, [sp, #60]	; 0x3c
 800d230:	4682      	mov	sl, r0
 800d232:	468b      	mov	fp, r1
 800d234:	4649      	mov	r1, r9
 800d236:	4640      	mov	r0, r8
 800d238:	f7f3 fcae 	bl	8000b98 <__aeabi_d2iz>
 800d23c:	4606      	mov	r6, r0
 800d23e:	f7f3 f991 	bl	8000564 <__aeabi_i2d>
 800d242:	3630      	adds	r6, #48	; 0x30
 800d244:	4602      	mov	r2, r0
 800d246:	460b      	mov	r3, r1
 800d248:	4640      	mov	r0, r8
 800d24a:	4649      	mov	r1, r9
 800d24c:	f7f3 f83c 	bl	80002c8 <__aeabi_dsub>
 800d250:	f805 6b01 	strb.w	r6, [r5], #1
 800d254:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d256:	429d      	cmp	r5, r3
 800d258:	4680      	mov	r8, r0
 800d25a:	4689      	mov	r9, r1
 800d25c:	f04f 0200 	mov.w	r2, #0
 800d260:	d124      	bne.n	800d2ac <_dtoa_r+0x60c>
 800d262:	4b1b      	ldr	r3, [pc, #108]	; (800d2d0 <_dtoa_r+0x630>)
 800d264:	4650      	mov	r0, sl
 800d266:	4659      	mov	r1, fp
 800d268:	f7f3 f830 	bl	80002cc <__adddf3>
 800d26c:	4602      	mov	r2, r0
 800d26e:	460b      	mov	r3, r1
 800d270:	4640      	mov	r0, r8
 800d272:	4649      	mov	r1, r9
 800d274:	f7f3 fc70 	bl	8000b58 <__aeabi_dcmpgt>
 800d278:	2800      	cmp	r0, #0
 800d27a:	d173      	bne.n	800d364 <_dtoa_r+0x6c4>
 800d27c:	4652      	mov	r2, sl
 800d27e:	465b      	mov	r3, fp
 800d280:	4913      	ldr	r1, [pc, #76]	; (800d2d0 <_dtoa_r+0x630>)
 800d282:	2000      	movs	r0, #0
 800d284:	f7f3 f820 	bl	80002c8 <__aeabi_dsub>
 800d288:	4602      	mov	r2, r0
 800d28a:	460b      	mov	r3, r1
 800d28c:	4640      	mov	r0, r8
 800d28e:	4649      	mov	r1, r9
 800d290:	f7f3 fc44 	bl	8000b1c <__aeabi_dcmplt>
 800d294:	2800      	cmp	r0, #0
 800d296:	f43f af35 	beq.w	800d104 <_dtoa_r+0x464>
 800d29a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800d29c:	1e6b      	subs	r3, r5, #1
 800d29e:	930f      	str	r3, [sp, #60]	; 0x3c
 800d2a0:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800d2a4:	2b30      	cmp	r3, #48	; 0x30
 800d2a6:	d0f8      	beq.n	800d29a <_dtoa_r+0x5fa>
 800d2a8:	9700      	str	r7, [sp, #0]
 800d2aa:	e049      	b.n	800d340 <_dtoa_r+0x6a0>
 800d2ac:	4b05      	ldr	r3, [pc, #20]	; (800d2c4 <_dtoa_r+0x624>)
 800d2ae:	f7f3 f9c3 	bl	8000638 <__aeabi_dmul>
 800d2b2:	4680      	mov	r8, r0
 800d2b4:	4689      	mov	r9, r1
 800d2b6:	e7bd      	b.n	800d234 <_dtoa_r+0x594>
 800d2b8:	08010798 	.word	0x08010798
 800d2bc:	08010770 	.word	0x08010770
 800d2c0:	3ff00000 	.word	0x3ff00000
 800d2c4:	40240000 	.word	0x40240000
 800d2c8:	401c0000 	.word	0x401c0000
 800d2cc:	40140000 	.word	0x40140000
 800d2d0:	3fe00000 	.word	0x3fe00000
 800d2d4:	9d01      	ldr	r5, [sp, #4]
 800d2d6:	4656      	mov	r6, sl
 800d2d8:	465f      	mov	r7, fp
 800d2da:	4642      	mov	r2, r8
 800d2dc:	464b      	mov	r3, r9
 800d2de:	4630      	mov	r0, r6
 800d2e0:	4639      	mov	r1, r7
 800d2e2:	f7f3 fad3 	bl	800088c <__aeabi_ddiv>
 800d2e6:	f7f3 fc57 	bl	8000b98 <__aeabi_d2iz>
 800d2ea:	4682      	mov	sl, r0
 800d2ec:	f7f3 f93a 	bl	8000564 <__aeabi_i2d>
 800d2f0:	4642      	mov	r2, r8
 800d2f2:	464b      	mov	r3, r9
 800d2f4:	f7f3 f9a0 	bl	8000638 <__aeabi_dmul>
 800d2f8:	4602      	mov	r2, r0
 800d2fa:	460b      	mov	r3, r1
 800d2fc:	4630      	mov	r0, r6
 800d2fe:	4639      	mov	r1, r7
 800d300:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 800d304:	f7f2 ffe0 	bl	80002c8 <__aeabi_dsub>
 800d308:	f805 6b01 	strb.w	r6, [r5], #1
 800d30c:	9e01      	ldr	r6, [sp, #4]
 800d30e:	9f03      	ldr	r7, [sp, #12]
 800d310:	1bae      	subs	r6, r5, r6
 800d312:	42b7      	cmp	r7, r6
 800d314:	4602      	mov	r2, r0
 800d316:	460b      	mov	r3, r1
 800d318:	d135      	bne.n	800d386 <_dtoa_r+0x6e6>
 800d31a:	f7f2 ffd7 	bl	80002cc <__adddf3>
 800d31e:	4642      	mov	r2, r8
 800d320:	464b      	mov	r3, r9
 800d322:	4606      	mov	r6, r0
 800d324:	460f      	mov	r7, r1
 800d326:	f7f3 fc17 	bl	8000b58 <__aeabi_dcmpgt>
 800d32a:	b9d0      	cbnz	r0, 800d362 <_dtoa_r+0x6c2>
 800d32c:	4642      	mov	r2, r8
 800d32e:	464b      	mov	r3, r9
 800d330:	4630      	mov	r0, r6
 800d332:	4639      	mov	r1, r7
 800d334:	f7f3 fbe8 	bl	8000b08 <__aeabi_dcmpeq>
 800d338:	b110      	cbz	r0, 800d340 <_dtoa_r+0x6a0>
 800d33a:	f01a 0f01 	tst.w	sl, #1
 800d33e:	d110      	bne.n	800d362 <_dtoa_r+0x6c2>
 800d340:	4620      	mov	r0, r4
 800d342:	ee18 1a10 	vmov	r1, s16
 800d346:	f000 faf3 	bl	800d930 <_Bfree>
 800d34a:	2300      	movs	r3, #0
 800d34c:	9800      	ldr	r0, [sp, #0]
 800d34e:	702b      	strb	r3, [r5, #0]
 800d350:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d352:	3001      	adds	r0, #1
 800d354:	6018      	str	r0, [r3, #0]
 800d356:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800d358:	2b00      	cmp	r3, #0
 800d35a:	f43f acf1 	beq.w	800cd40 <_dtoa_r+0xa0>
 800d35e:	601d      	str	r5, [r3, #0]
 800d360:	e4ee      	b.n	800cd40 <_dtoa_r+0xa0>
 800d362:	9f00      	ldr	r7, [sp, #0]
 800d364:	462b      	mov	r3, r5
 800d366:	461d      	mov	r5, r3
 800d368:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800d36c:	2a39      	cmp	r2, #57	; 0x39
 800d36e:	d106      	bne.n	800d37e <_dtoa_r+0x6de>
 800d370:	9a01      	ldr	r2, [sp, #4]
 800d372:	429a      	cmp	r2, r3
 800d374:	d1f7      	bne.n	800d366 <_dtoa_r+0x6c6>
 800d376:	9901      	ldr	r1, [sp, #4]
 800d378:	2230      	movs	r2, #48	; 0x30
 800d37a:	3701      	adds	r7, #1
 800d37c:	700a      	strb	r2, [r1, #0]
 800d37e:	781a      	ldrb	r2, [r3, #0]
 800d380:	3201      	adds	r2, #1
 800d382:	701a      	strb	r2, [r3, #0]
 800d384:	e790      	b.n	800d2a8 <_dtoa_r+0x608>
 800d386:	4ba6      	ldr	r3, [pc, #664]	; (800d620 <_dtoa_r+0x980>)
 800d388:	2200      	movs	r2, #0
 800d38a:	f7f3 f955 	bl	8000638 <__aeabi_dmul>
 800d38e:	2200      	movs	r2, #0
 800d390:	2300      	movs	r3, #0
 800d392:	4606      	mov	r6, r0
 800d394:	460f      	mov	r7, r1
 800d396:	f7f3 fbb7 	bl	8000b08 <__aeabi_dcmpeq>
 800d39a:	2800      	cmp	r0, #0
 800d39c:	d09d      	beq.n	800d2da <_dtoa_r+0x63a>
 800d39e:	e7cf      	b.n	800d340 <_dtoa_r+0x6a0>
 800d3a0:	9a08      	ldr	r2, [sp, #32]
 800d3a2:	2a00      	cmp	r2, #0
 800d3a4:	f000 80d7 	beq.w	800d556 <_dtoa_r+0x8b6>
 800d3a8:	9a06      	ldr	r2, [sp, #24]
 800d3aa:	2a01      	cmp	r2, #1
 800d3ac:	f300 80ba 	bgt.w	800d524 <_dtoa_r+0x884>
 800d3b0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d3b2:	2a00      	cmp	r2, #0
 800d3b4:	f000 80b2 	beq.w	800d51c <_dtoa_r+0x87c>
 800d3b8:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800d3bc:	9e07      	ldr	r6, [sp, #28]
 800d3be:	9d04      	ldr	r5, [sp, #16]
 800d3c0:	9a04      	ldr	r2, [sp, #16]
 800d3c2:	441a      	add	r2, r3
 800d3c4:	9204      	str	r2, [sp, #16]
 800d3c6:	9a05      	ldr	r2, [sp, #20]
 800d3c8:	2101      	movs	r1, #1
 800d3ca:	441a      	add	r2, r3
 800d3cc:	4620      	mov	r0, r4
 800d3ce:	9205      	str	r2, [sp, #20]
 800d3d0:	f000 fb66 	bl	800daa0 <__i2b>
 800d3d4:	4607      	mov	r7, r0
 800d3d6:	2d00      	cmp	r5, #0
 800d3d8:	dd0c      	ble.n	800d3f4 <_dtoa_r+0x754>
 800d3da:	9b05      	ldr	r3, [sp, #20]
 800d3dc:	2b00      	cmp	r3, #0
 800d3de:	dd09      	ble.n	800d3f4 <_dtoa_r+0x754>
 800d3e0:	42ab      	cmp	r3, r5
 800d3e2:	9a04      	ldr	r2, [sp, #16]
 800d3e4:	bfa8      	it	ge
 800d3e6:	462b      	movge	r3, r5
 800d3e8:	1ad2      	subs	r2, r2, r3
 800d3ea:	9204      	str	r2, [sp, #16]
 800d3ec:	9a05      	ldr	r2, [sp, #20]
 800d3ee:	1aed      	subs	r5, r5, r3
 800d3f0:	1ad3      	subs	r3, r2, r3
 800d3f2:	9305      	str	r3, [sp, #20]
 800d3f4:	9b07      	ldr	r3, [sp, #28]
 800d3f6:	b31b      	cbz	r3, 800d440 <_dtoa_r+0x7a0>
 800d3f8:	9b08      	ldr	r3, [sp, #32]
 800d3fa:	2b00      	cmp	r3, #0
 800d3fc:	f000 80af 	beq.w	800d55e <_dtoa_r+0x8be>
 800d400:	2e00      	cmp	r6, #0
 800d402:	dd13      	ble.n	800d42c <_dtoa_r+0x78c>
 800d404:	4639      	mov	r1, r7
 800d406:	4632      	mov	r2, r6
 800d408:	4620      	mov	r0, r4
 800d40a:	f000 fc09 	bl	800dc20 <__pow5mult>
 800d40e:	ee18 2a10 	vmov	r2, s16
 800d412:	4601      	mov	r1, r0
 800d414:	4607      	mov	r7, r0
 800d416:	4620      	mov	r0, r4
 800d418:	f000 fb58 	bl	800dacc <__multiply>
 800d41c:	ee18 1a10 	vmov	r1, s16
 800d420:	4680      	mov	r8, r0
 800d422:	4620      	mov	r0, r4
 800d424:	f000 fa84 	bl	800d930 <_Bfree>
 800d428:	ee08 8a10 	vmov	s16, r8
 800d42c:	9b07      	ldr	r3, [sp, #28]
 800d42e:	1b9a      	subs	r2, r3, r6
 800d430:	d006      	beq.n	800d440 <_dtoa_r+0x7a0>
 800d432:	ee18 1a10 	vmov	r1, s16
 800d436:	4620      	mov	r0, r4
 800d438:	f000 fbf2 	bl	800dc20 <__pow5mult>
 800d43c:	ee08 0a10 	vmov	s16, r0
 800d440:	2101      	movs	r1, #1
 800d442:	4620      	mov	r0, r4
 800d444:	f000 fb2c 	bl	800daa0 <__i2b>
 800d448:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d44a:	2b00      	cmp	r3, #0
 800d44c:	4606      	mov	r6, r0
 800d44e:	f340 8088 	ble.w	800d562 <_dtoa_r+0x8c2>
 800d452:	461a      	mov	r2, r3
 800d454:	4601      	mov	r1, r0
 800d456:	4620      	mov	r0, r4
 800d458:	f000 fbe2 	bl	800dc20 <__pow5mult>
 800d45c:	9b06      	ldr	r3, [sp, #24]
 800d45e:	2b01      	cmp	r3, #1
 800d460:	4606      	mov	r6, r0
 800d462:	f340 8081 	ble.w	800d568 <_dtoa_r+0x8c8>
 800d466:	f04f 0800 	mov.w	r8, #0
 800d46a:	6933      	ldr	r3, [r6, #16]
 800d46c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800d470:	6918      	ldr	r0, [r3, #16]
 800d472:	f000 fac5 	bl	800da00 <__hi0bits>
 800d476:	f1c0 0020 	rsb	r0, r0, #32
 800d47a:	9b05      	ldr	r3, [sp, #20]
 800d47c:	4418      	add	r0, r3
 800d47e:	f010 001f 	ands.w	r0, r0, #31
 800d482:	f000 8092 	beq.w	800d5aa <_dtoa_r+0x90a>
 800d486:	f1c0 0320 	rsb	r3, r0, #32
 800d48a:	2b04      	cmp	r3, #4
 800d48c:	f340 808a 	ble.w	800d5a4 <_dtoa_r+0x904>
 800d490:	f1c0 001c 	rsb	r0, r0, #28
 800d494:	9b04      	ldr	r3, [sp, #16]
 800d496:	4403      	add	r3, r0
 800d498:	9304      	str	r3, [sp, #16]
 800d49a:	9b05      	ldr	r3, [sp, #20]
 800d49c:	4403      	add	r3, r0
 800d49e:	4405      	add	r5, r0
 800d4a0:	9305      	str	r3, [sp, #20]
 800d4a2:	9b04      	ldr	r3, [sp, #16]
 800d4a4:	2b00      	cmp	r3, #0
 800d4a6:	dd07      	ble.n	800d4b8 <_dtoa_r+0x818>
 800d4a8:	ee18 1a10 	vmov	r1, s16
 800d4ac:	461a      	mov	r2, r3
 800d4ae:	4620      	mov	r0, r4
 800d4b0:	f000 fc10 	bl	800dcd4 <__lshift>
 800d4b4:	ee08 0a10 	vmov	s16, r0
 800d4b8:	9b05      	ldr	r3, [sp, #20]
 800d4ba:	2b00      	cmp	r3, #0
 800d4bc:	dd05      	ble.n	800d4ca <_dtoa_r+0x82a>
 800d4be:	4631      	mov	r1, r6
 800d4c0:	461a      	mov	r2, r3
 800d4c2:	4620      	mov	r0, r4
 800d4c4:	f000 fc06 	bl	800dcd4 <__lshift>
 800d4c8:	4606      	mov	r6, r0
 800d4ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d4cc:	2b00      	cmp	r3, #0
 800d4ce:	d06e      	beq.n	800d5ae <_dtoa_r+0x90e>
 800d4d0:	ee18 0a10 	vmov	r0, s16
 800d4d4:	4631      	mov	r1, r6
 800d4d6:	f000 fc6d 	bl	800ddb4 <__mcmp>
 800d4da:	2800      	cmp	r0, #0
 800d4dc:	da67      	bge.n	800d5ae <_dtoa_r+0x90e>
 800d4de:	9b00      	ldr	r3, [sp, #0]
 800d4e0:	3b01      	subs	r3, #1
 800d4e2:	ee18 1a10 	vmov	r1, s16
 800d4e6:	9300      	str	r3, [sp, #0]
 800d4e8:	220a      	movs	r2, #10
 800d4ea:	2300      	movs	r3, #0
 800d4ec:	4620      	mov	r0, r4
 800d4ee:	f000 fa41 	bl	800d974 <__multadd>
 800d4f2:	9b08      	ldr	r3, [sp, #32]
 800d4f4:	ee08 0a10 	vmov	s16, r0
 800d4f8:	2b00      	cmp	r3, #0
 800d4fa:	f000 81b1 	beq.w	800d860 <_dtoa_r+0xbc0>
 800d4fe:	2300      	movs	r3, #0
 800d500:	4639      	mov	r1, r7
 800d502:	220a      	movs	r2, #10
 800d504:	4620      	mov	r0, r4
 800d506:	f000 fa35 	bl	800d974 <__multadd>
 800d50a:	9b02      	ldr	r3, [sp, #8]
 800d50c:	2b00      	cmp	r3, #0
 800d50e:	4607      	mov	r7, r0
 800d510:	f300 808e 	bgt.w	800d630 <_dtoa_r+0x990>
 800d514:	9b06      	ldr	r3, [sp, #24]
 800d516:	2b02      	cmp	r3, #2
 800d518:	dc51      	bgt.n	800d5be <_dtoa_r+0x91e>
 800d51a:	e089      	b.n	800d630 <_dtoa_r+0x990>
 800d51c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d51e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800d522:	e74b      	b.n	800d3bc <_dtoa_r+0x71c>
 800d524:	9b03      	ldr	r3, [sp, #12]
 800d526:	1e5e      	subs	r6, r3, #1
 800d528:	9b07      	ldr	r3, [sp, #28]
 800d52a:	42b3      	cmp	r3, r6
 800d52c:	bfbf      	itttt	lt
 800d52e:	9b07      	ldrlt	r3, [sp, #28]
 800d530:	9607      	strlt	r6, [sp, #28]
 800d532:	1af2      	sublt	r2, r6, r3
 800d534:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800d536:	bfb6      	itet	lt
 800d538:	189b      	addlt	r3, r3, r2
 800d53a:	1b9e      	subge	r6, r3, r6
 800d53c:	930a      	strlt	r3, [sp, #40]	; 0x28
 800d53e:	9b03      	ldr	r3, [sp, #12]
 800d540:	bfb8      	it	lt
 800d542:	2600      	movlt	r6, #0
 800d544:	2b00      	cmp	r3, #0
 800d546:	bfb7      	itett	lt
 800d548:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 800d54c:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 800d550:	1a9d      	sublt	r5, r3, r2
 800d552:	2300      	movlt	r3, #0
 800d554:	e734      	b.n	800d3c0 <_dtoa_r+0x720>
 800d556:	9e07      	ldr	r6, [sp, #28]
 800d558:	9d04      	ldr	r5, [sp, #16]
 800d55a:	9f08      	ldr	r7, [sp, #32]
 800d55c:	e73b      	b.n	800d3d6 <_dtoa_r+0x736>
 800d55e:	9a07      	ldr	r2, [sp, #28]
 800d560:	e767      	b.n	800d432 <_dtoa_r+0x792>
 800d562:	9b06      	ldr	r3, [sp, #24]
 800d564:	2b01      	cmp	r3, #1
 800d566:	dc18      	bgt.n	800d59a <_dtoa_r+0x8fa>
 800d568:	f1ba 0f00 	cmp.w	sl, #0
 800d56c:	d115      	bne.n	800d59a <_dtoa_r+0x8fa>
 800d56e:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800d572:	b993      	cbnz	r3, 800d59a <_dtoa_r+0x8fa>
 800d574:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800d578:	0d1b      	lsrs	r3, r3, #20
 800d57a:	051b      	lsls	r3, r3, #20
 800d57c:	b183      	cbz	r3, 800d5a0 <_dtoa_r+0x900>
 800d57e:	9b04      	ldr	r3, [sp, #16]
 800d580:	3301      	adds	r3, #1
 800d582:	9304      	str	r3, [sp, #16]
 800d584:	9b05      	ldr	r3, [sp, #20]
 800d586:	3301      	adds	r3, #1
 800d588:	9305      	str	r3, [sp, #20]
 800d58a:	f04f 0801 	mov.w	r8, #1
 800d58e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d590:	2b00      	cmp	r3, #0
 800d592:	f47f af6a 	bne.w	800d46a <_dtoa_r+0x7ca>
 800d596:	2001      	movs	r0, #1
 800d598:	e76f      	b.n	800d47a <_dtoa_r+0x7da>
 800d59a:	f04f 0800 	mov.w	r8, #0
 800d59e:	e7f6      	b.n	800d58e <_dtoa_r+0x8ee>
 800d5a0:	4698      	mov	r8, r3
 800d5a2:	e7f4      	b.n	800d58e <_dtoa_r+0x8ee>
 800d5a4:	f43f af7d 	beq.w	800d4a2 <_dtoa_r+0x802>
 800d5a8:	4618      	mov	r0, r3
 800d5aa:	301c      	adds	r0, #28
 800d5ac:	e772      	b.n	800d494 <_dtoa_r+0x7f4>
 800d5ae:	9b03      	ldr	r3, [sp, #12]
 800d5b0:	2b00      	cmp	r3, #0
 800d5b2:	dc37      	bgt.n	800d624 <_dtoa_r+0x984>
 800d5b4:	9b06      	ldr	r3, [sp, #24]
 800d5b6:	2b02      	cmp	r3, #2
 800d5b8:	dd34      	ble.n	800d624 <_dtoa_r+0x984>
 800d5ba:	9b03      	ldr	r3, [sp, #12]
 800d5bc:	9302      	str	r3, [sp, #8]
 800d5be:	9b02      	ldr	r3, [sp, #8]
 800d5c0:	b96b      	cbnz	r3, 800d5de <_dtoa_r+0x93e>
 800d5c2:	4631      	mov	r1, r6
 800d5c4:	2205      	movs	r2, #5
 800d5c6:	4620      	mov	r0, r4
 800d5c8:	f000 f9d4 	bl	800d974 <__multadd>
 800d5cc:	4601      	mov	r1, r0
 800d5ce:	4606      	mov	r6, r0
 800d5d0:	ee18 0a10 	vmov	r0, s16
 800d5d4:	f000 fbee 	bl	800ddb4 <__mcmp>
 800d5d8:	2800      	cmp	r0, #0
 800d5da:	f73f adbb 	bgt.w	800d154 <_dtoa_r+0x4b4>
 800d5de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d5e0:	9d01      	ldr	r5, [sp, #4]
 800d5e2:	43db      	mvns	r3, r3
 800d5e4:	9300      	str	r3, [sp, #0]
 800d5e6:	f04f 0800 	mov.w	r8, #0
 800d5ea:	4631      	mov	r1, r6
 800d5ec:	4620      	mov	r0, r4
 800d5ee:	f000 f99f 	bl	800d930 <_Bfree>
 800d5f2:	2f00      	cmp	r7, #0
 800d5f4:	f43f aea4 	beq.w	800d340 <_dtoa_r+0x6a0>
 800d5f8:	f1b8 0f00 	cmp.w	r8, #0
 800d5fc:	d005      	beq.n	800d60a <_dtoa_r+0x96a>
 800d5fe:	45b8      	cmp	r8, r7
 800d600:	d003      	beq.n	800d60a <_dtoa_r+0x96a>
 800d602:	4641      	mov	r1, r8
 800d604:	4620      	mov	r0, r4
 800d606:	f000 f993 	bl	800d930 <_Bfree>
 800d60a:	4639      	mov	r1, r7
 800d60c:	4620      	mov	r0, r4
 800d60e:	f000 f98f 	bl	800d930 <_Bfree>
 800d612:	e695      	b.n	800d340 <_dtoa_r+0x6a0>
 800d614:	2600      	movs	r6, #0
 800d616:	4637      	mov	r7, r6
 800d618:	e7e1      	b.n	800d5de <_dtoa_r+0x93e>
 800d61a:	9700      	str	r7, [sp, #0]
 800d61c:	4637      	mov	r7, r6
 800d61e:	e599      	b.n	800d154 <_dtoa_r+0x4b4>
 800d620:	40240000 	.word	0x40240000
 800d624:	9b08      	ldr	r3, [sp, #32]
 800d626:	2b00      	cmp	r3, #0
 800d628:	f000 80ca 	beq.w	800d7c0 <_dtoa_r+0xb20>
 800d62c:	9b03      	ldr	r3, [sp, #12]
 800d62e:	9302      	str	r3, [sp, #8]
 800d630:	2d00      	cmp	r5, #0
 800d632:	dd05      	ble.n	800d640 <_dtoa_r+0x9a0>
 800d634:	4639      	mov	r1, r7
 800d636:	462a      	mov	r2, r5
 800d638:	4620      	mov	r0, r4
 800d63a:	f000 fb4b 	bl	800dcd4 <__lshift>
 800d63e:	4607      	mov	r7, r0
 800d640:	f1b8 0f00 	cmp.w	r8, #0
 800d644:	d05b      	beq.n	800d6fe <_dtoa_r+0xa5e>
 800d646:	6879      	ldr	r1, [r7, #4]
 800d648:	4620      	mov	r0, r4
 800d64a:	f000 f931 	bl	800d8b0 <_Balloc>
 800d64e:	4605      	mov	r5, r0
 800d650:	b928      	cbnz	r0, 800d65e <_dtoa_r+0x9be>
 800d652:	4b87      	ldr	r3, [pc, #540]	; (800d870 <_dtoa_r+0xbd0>)
 800d654:	4602      	mov	r2, r0
 800d656:	f240 21ea 	movw	r1, #746	; 0x2ea
 800d65a:	f7ff bb3b 	b.w	800ccd4 <_dtoa_r+0x34>
 800d65e:	693a      	ldr	r2, [r7, #16]
 800d660:	3202      	adds	r2, #2
 800d662:	0092      	lsls	r2, r2, #2
 800d664:	f107 010c 	add.w	r1, r7, #12
 800d668:	300c      	adds	r0, #12
 800d66a:	f000 f913 	bl	800d894 <memcpy>
 800d66e:	2201      	movs	r2, #1
 800d670:	4629      	mov	r1, r5
 800d672:	4620      	mov	r0, r4
 800d674:	f000 fb2e 	bl	800dcd4 <__lshift>
 800d678:	9b01      	ldr	r3, [sp, #4]
 800d67a:	f103 0901 	add.w	r9, r3, #1
 800d67e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800d682:	4413      	add	r3, r2
 800d684:	9305      	str	r3, [sp, #20]
 800d686:	f00a 0301 	and.w	r3, sl, #1
 800d68a:	46b8      	mov	r8, r7
 800d68c:	9304      	str	r3, [sp, #16]
 800d68e:	4607      	mov	r7, r0
 800d690:	4631      	mov	r1, r6
 800d692:	ee18 0a10 	vmov	r0, s16
 800d696:	f7ff fa77 	bl	800cb88 <quorem>
 800d69a:	4641      	mov	r1, r8
 800d69c:	9002      	str	r0, [sp, #8]
 800d69e:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800d6a2:	ee18 0a10 	vmov	r0, s16
 800d6a6:	f000 fb85 	bl	800ddb4 <__mcmp>
 800d6aa:	463a      	mov	r2, r7
 800d6ac:	9003      	str	r0, [sp, #12]
 800d6ae:	4631      	mov	r1, r6
 800d6b0:	4620      	mov	r0, r4
 800d6b2:	f000 fb9b 	bl	800ddec <__mdiff>
 800d6b6:	68c2      	ldr	r2, [r0, #12]
 800d6b8:	f109 3bff 	add.w	fp, r9, #4294967295
 800d6bc:	4605      	mov	r5, r0
 800d6be:	bb02      	cbnz	r2, 800d702 <_dtoa_r+0xa62>
 800d6c0:	4601      	mov	r1, r0
 800d6c2:	ee18 0a10 	vmov	r0, s16
 800d6c6:	f000 fb75 	bl	800ddb4 <__mcmp>
 800d6ca:	4602      	mov	r2, r0
 800d6cc:	4629      	mov	r1, r5
 800d6ce:	4620      	mov	r0, r4
 800d6d0:	9207      	str	r2, [sp, #28]
 800d6d2:	f000 f92d 	bl	800d930 <_Bfree>
 800d6d6:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800d6da:	ea43 0102 	orr.w	r1, r3, r2
 800d6de:	9b04      	ldr	r3, [sp, #16]
 800d6e0:	430b      	orrs	r3, r1
 800d6e2:	464d      	mov	r5, r9
 800d6e4:	d10f      	bne.n	800d706 <_dtoa_r+0xa66>
 800d6e6:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800d6ea:	d02a      	beq.n	800d742 <_dtoa_r+0xaa2>
 800d6ec:	9b03      	ldr	r3, [sp, #12]
 800d6ee:	2b00      	cmp	r3, #0
 800d6f0:	dd02      	ble.n	800d6f8 <_dtoa_r+0xa58>
 800d6f2:	9b02      	ldr	r3, [sp, #8]
 800d6f4:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 800d6f8:	f88b a000 	strb.w	sl, [fp]
 800d6fc:	e775      	b.n	800d5ea <_dtoa_r+0x94a>
 800d6fe:	4638      	mov	r0, r7
 800d700:	e7ba      	b.n	800d678 <_dtoa_r+0x9d8>
 800d702:	2201      	movs	r2, #1
 800d704:	e7e2      	b.n	800d6cc <_dtoa_r+0xa2c>
 800d706:	9b03      	ldr	r3, [sp, #12]
 800d708:	2b00      	cmp	r3, #0
 800d70a:	db04      	blt.n	800d716 <_dtoa_r+0xa76>
 800d70c:	9906      	ldr	r1, [sp, #24]
 800d70e:	430b      	orrs	r3, r1
 800d710:	9904      	ldr	r1, [sp, #16]
 800d712:	430b      	orrs	r3, r1
 800d714:	d122      	bne.n	800d75c <_dtoa_r+0xabc>
 800d716:	2a00      	cmp	r2, #0
 800d718:	ddee      	ble.n	800d6f8 <_dtoa_r+0xa58>
 800d71a:	ee18 1a10 	vmov	r1, s16
 800d71e:	2201      	movs	r2, #1
 800d720:	4620      	mov	r0, r4
 800d722:	f000 fad7 	bl	800dcd4 <__lshift>
 800d726:	4631      	mov	r1, r6
 800d728:	ee08 0a10 	vmov	s16, r0
 800d72c:	f000 fb42 	bl	800ddb4 <__mcmp>
 800d730:	2800      	cmp	r0, #0
 800d732:	dc03      	bgt.n	800d73c <_dtoa_r+0xa9c>
 800d734:	d1e0      	bne.n	800d6f8 <_dtoa_r+0xa58>
 800d736:	f01a 0f01 	tst.w	sl, #1
 800d73a:	d0dd      	beq.n	800d6f8 <_dtoa_r+0xa58>
 800d73c:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800d740:	d1d7      	bne.n	800d6f2 <_dtoa_r+0xa52>
 800d742:	2339      	movs	r3, #57	; 0x39
 800d744:	f88b 3000 	strb.w	r3, [fp]
 800d748:	462b      	mov	r3, r5
 800d74a:	461d      	mov	r5, r3
 800d74c:	3b01      	subs	r3, #1
 800d74e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800d752:	2a39      	cmp	r2, #57	; 0x39
 800d754:	d071      	beq.n	800d83a <_dtoa_r+0xb9a>
 800d756:	3201      	adds	r2, #1
 800d758:	701a      	strb	r2, [r3, #0]
 800d75a:	e746      	b.n	800d5ea <_dtoa_r+0x94a>
 800d75c:	2a00      	cmp	r2, #0
 800d75e:	dd07      	ble.n	800d770 <_dtoa_r+0xad0>
 800d760:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800d764:	d0ed      	beq.n	800d742 <_dtoa_r+0xaa2>
 800d766:	f10a 0301 	add.w	r3, sl, #1
 800d76a:	f88b 3000 	strb.w	r3, [fp]
 800d76e:	e73c      	b.n	800d5ea <_dtoa_r+0x94a>
 800d770:	9b05      	ldr	r3, [sp, #20]
 800d772:	f809 ac01 	strb.w	sl, [r9, #-1]
 800d776:	4599      	cmp	r9, r3
 800d778:	d047      	beq.n	800d80a <_dtoa_r+0xb6a>
 800d77a:	ee18 1a10 	vmov	r1, s16
 800d77e:	2300      	movs	r3, #0
 800d780:	220a      	movs	r2, #10
 800d782:	4620      	mov	r0, r4
 800d784:	f000 f8f6 	bl	800d974 <__multadd>
 800d788:	45b8      	cmp	r8, r7
 800d78a:	ee08 0a10 	vmov	s16, r0
 800d78e:	f04f 0300 	mov.w	r3, #0
 800d792:	f04f 020a 	mov.w	r2, #10
 800d796:	4641      	mov	r1, r8
 800d798:	4620      	mov	r0, r4
 800d79a:	d106      	bne.n	800d7aa <_dtoa_r+0xb0a>
 800d79c:	f000 f8ea 	bl	800d974 <__multadd>
 800d7a0:	4680      	mov	r8, r0
 800d7a2:	4607      	mov	r7, r0
 800d7a4:	f109 0901 	add.w	r9, r9, #1
 800d7a8:	e772      	b.n	800d690 <_dtoa_r+0x9f0>
 800d7aa:	f000 f8e3 	bl	800d974 <__multadd>
 800d7ae:	4639      	mov	r1, r7
 800d7b0:	4680      	mov	r8, r0
 800d7b2:	2300      	movs	r3, #0
 800d7b4:	220a      	movs	r2, #10
 800d7b6:	4620      	mov	r0, r4
 800d7b8:	f000 f8dc 	bl	800d974 <__multadd>
 800d7bc:	4607      	mov	r7, r0
 800d7be:	e7f1      	b.n	800d7a4 <_dtoa_r+0xb04>
 800d7c0:	9b03      	ldr	r3, [sp, #12]
 800d7c2:	9302      	str	r3, [sp, #8]
 800d7c4:	9d01      	ldr	r5, [sp, #4]
 800d7c6:	ee18 0a10 	vmov	r0, s16
 800d7ca:	4631      	mov	r1, r6
 800d7cc:	f7ff f9dc 	bl	800cb88 <quorem>
 800d7d0:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800d7d4:	9b01      	ldr	r3, [sp, #4]
 800d7d6:	f805 ab01 	strb.w	sl, [r5], #1
 800d7da:	1aea      	subs	r2, r5, r3
 800d7dc:	9b02      	ldr	r3, [sp, #8]
 800d7de:	4293      	cmp	r3, r2
 800d7e0:	dd09      	ble.n	800d7f6 <_dtoa_r+0xb56>
 800d7e2:	ee18 1a10 	vmov	r1, s16
 800d7e6:	2300      	movs	r3, #0
 800d7e8:	220a      	movs	r2, #10
 800d7ea:	4620      	mov	r0, r4
 800d7ec:	f000 f8c2 	bl	800d974 <__multadd>
 800d7f0:	ee08 0a10 	vmov	s16, r0
 800d7f4:	e7e7      	b.n	800d7c6 <_dtoa_r+0xb26>
 800d7f6:	9b02      	ldr	r3, [sp, #8]
 800d7f8:	2b00      	cmp	r3, #0
 800d7fa:	bfc8      	it	gt
 800d7fc:	461d      	movgt	r5, r3
 800d7fe:	9b01      	ldr	r3, [sp, #4]
 800d800:	bfd8      	it	le
 800d802:	2501      	movle	r5, #1
 800d804:	441d      	add	r5, r3
 800d806:	f04f 0800 	mov.w	r8, #0
 800d80a:	ee18 1a10 	vmov	r1, s16
 800d80e:	2201      	movs	r2, #1
 800d810:	4620      	mov	r0, r4
 800d812:	f000 fa5f 	bl	800dcd4 <__lshift>
 800d816:	4631      	mov	r1, r6
 800d818:	ee08 0a10 	vmov	s16, r0
 800d81c:	f000 faca 	bl	800ddb4 <__mcmp>
 800d820:	2800      	cmp	r0, #0
 800d822:	dc91      	bgt.n	800d748 <_dtoa_r+0xaa8>
 800d824:	d102      	bne.n	800d82c <_dtoa_r+0xb8c>
 800d826:	f01a 0f01 	tst.w	sl, #1
 800d82a:	d18d      	bne.n	800d748 <_dtoa_r+0xaa8>
 800d82c:	462b      	mov	r3, r5
 800d82e:	461d      	mov	r5, r3
 800d830:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800d834:	2a30      	cmp	r2, #48	; 0x30
 800d836:	d0fa      	beq.n	800d82e <_dtoa_r+0xb8e>
 800d838:	e6d7      	b.n	800d5ea <_dtoa_r+0x94a>
 800d83a:	9a01      	ldr	r2, [sp, #4]
 800d83c:	429a      	cmp	r2, r3
 800d83e:	d184      	bne.n	800d74a <_dtoa_r+0xaaa>
 800d840:	9b00      	ldr	r3, [sp, #0]
 800d842:	3301      	adds	r3, #1
 800d844:	9300      	str	r3, [sp, #0]
 800d846:	2331      	movs	r3, #49	; 0x31
 800d848:	7013      	strb	r3, [r2, #0]
 800d84a:	e6ce      	b.n	800d5ea <_dtoa_r+0x94a>
 800d84c:	4b09      	ldr	r3, [pc, #36]	; (800d874 <_dtoa_r+0xbd4>)
 800d84e:	f7ff ba95 	b.w	800cd7c <_dtoa_r+0xdc>
 800d852:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800d854:	2b00      	cmp	r3, #0
 800d856:	f47f aa6e 	bne.w	800cd36 <_dtoa_r+0x96>
 800d85a:	4b07      	ldr	r3, [pc, #28]	; (800d878 <_dtoa_r+0xbd8>)
 800d85c:	f7ff ba8e 	b.w	800cd7c <_dtoa_r+0xdc>
 800d860:	9b02      	ldr	r3, [sp, #8]
 800d862:	2b00      	cmp	r3, #0
 800d864:	dcae      	bgt.n	800d7c4 <_dtoa_r+0xb24>
 800d866:	9b06      	ldr	r3, [sp, #24]
 800d868:	2b02      	cmp	r3, #2
 800d86a:	f73f aea8 	bgt.w	800d5be <_dtoa_r+0x91e>
 800d86e:	e7a9      	b.n	800d7c4 <_dtoa_r+0xb24>
 800d870:	08010703 	.word	0x08010703
 800d874:	08010660 	.word	0x08010660
 800d878:	08010684 	.word	0x08010684

0800d87c <_localeconv_r>:
 800d87c:	4800      	ldr	r0, [pc, #0]	; (800d880 <_localeconv_r+0x4>)
 800d87e:	4770      	bx	lr
 800d880:	200001f4 	.word	0x200001f4

0800d884 <malloc>:
 800d884:	4b02      	ldr	r3, [pc, #8]	; (800d890 <malloc+0xc>)
 800d886:	4601      	mov	r1, r0
 800d888:	6818      	ldr	r0, [r3, #0]
 800d88a:	f000 bc17 	b.w	800e0bc <_malloc_r>
 800d88e:	bf00      	nop
 800d890:	200000a0 	.word	0x200000a0

0800d894 <memcpy>:
 800d894:	440a      	add	r2, r1
 800d896:	4291      	cmp	r1, r2
 800d898:	f100 33ff 	add.w	r3, r0, #4294967295
 800d89c:	d100      	bne.n	800d8a0 <memcpy+0xc>
 800d89e:	4770      	bx	lr
 800d8a0:	b510      	push	{r4, lr}
 800d8a2:	f811 4b01 	ldrb.w	r4, [r1], #1
 800d8a6:	f803 4f01 	strb.w	r4, [r3, #1]!
 800d8aa:	4291      	cmp	r1, r2
 800d8ac:	d1f9      	bne.n	800d8a2 <memcpy+0xe>
 800d8ae:	bd10      	pop	{r4, pc}

0800d8b0 <_Balloc>:
 800d8b0:	b570      	push	{r4, r5, r6, lr}
 800d8b2:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800d8b4:	4604      	mov	r4, r0
 800d8b6:	460d      	mov	r5, r1
 800d8b8:	b976      	cbnz	r6, 800d8d8 <_Balloc+0x28>
 800d8ba:	2010      	movs	r0, #16
 800d8bc:	f7ff ffe2 	bl	800d884 <malloc>
 800d8c0:	4602      	mov	r2, r0
 800d8c2:	6260      	str	r0, [r4, #36]	; 0x24
 800d8c4:	b920      	cbnz	r0, 800d8d0 <_Balloc+0x20>
 800d8c6:	4b18      	ldr	r3, [pc, #96]	; (800d928 <_Balloc+0x78>)
 800d8c8:	4818      	ldr	r0, [pc, #96]	; (800d92c <_Balloc+0x7c>)
 800d8ca:	2166      	movs	r1, #102	; 0x66
 800d8cc:	f000 fdd6 	bl	800e47c <__assert_func>
 800d8d0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800d8d4:	6006      	str	r6, [r0, #0]
 800d8d6:	60c6      	str	r6, [r0, #12]
 800d8d8:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800d8da:	68f3      	ldr	r3, [r6, #12]
 800d8dc:	b183      	cbz	r3, 800d900 <_Balloc+0x50>
 800d8de:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d8e0:	68db      	ldr	r3, [r3, #12]
 800d8e2:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800d8e6:	b9b8      	cbnz	r0, 800d918 <_Balloc+0x68>
 800d8e8:	2101      	movs	r1, #1
 800d8ea:	fa01 f605 	lsl.w	r6, r1, r5
 800d8ee:	1d72      	adds	r2, r6, #5
 800d8f0:	0092      	lsls	r2, r2, #2
 800d8f2:	4620      	mov	r0, r4
 800d8f4:	f000 fb60 	bl	800dfb8 <_calloc_r>
 800d8f8:	b160      	cbz	r0, 800d914 <_Balloc+0x64>
 800d8fa:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800d8fe:	e00e      	b.n	800d91e <_Balloc+0x6e>
 800d900:	2221      	movs	r2, #33	; 0x21
 800d902:	2104      	movs	r1, #4
 800d904:	4620      	mov	r0, r4
 800d906:	f000 fb57 	bl	800dfb8 <_calloc_r>
 800d90a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d90c:	60f0      	str	r0, [r6, #12]
 800d90e:	68db      	ldr	r3, [r3, #12]
 800d910:	2b00      	cmp	r3, #0
 800d912:	d1e4      	bne.n	800d8de <_Balloc+0x2e>
 800d914:	2000      	movs	r0, #0
 800d916:	bd70      	pop	{r4, r5, r6, pc}
 800d918:	6802      	ldr	r2, [r0, #0]
 800d91a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800d91e:	2300      	movs	r3, #0
 800d920:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800d924:	e7f7      	b.n	800d916 <_Balloc+0x66>
 800d926:	bf00      	nop
 800d928:	08010691 	.word	0x08010691
 800d92c:	08010714 	.word	0x08010714

0800d930 <_Bfree>:
 800d930:	b570      	push	{r4, r5, r6, lr}
 800d932:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800d934:	4605      	mov	r5, r0
 800d936:	460c      	mov	r4, r1
 800d938:	b976      	cbnz	r6, 800d958 <_Bfree+0x28>
 800d93a:	2010      	movs	r0, #16
 800d93c:	f7ff ffa2 	bl	800d884 <malloc>
 800d940:	4602      	mov	r2, r0
 800d942:	6268      	str	r0, [r5, #36]	; 0x24
 800d944:	b920      	cbnz	r0, 800d950 <_Bfree+0x20>
 800d946:	4b09      	ldr	r3, [pc, #36]	; (800d96c <_Bfree+0x3c>)
 800d948:	4809      	ldr	r0, [pc, #36]	; (800d970 <_Bfree+0x40>)
 800d94a:	218a      	movs	r1, #138	; 0x8a
 800d94c:	f000 fd96 	bl	800e47c <__assert_func>
 800d950:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800d954:	6006      	str	r6, [r0, #0]
 800d956:	60c6      	str	r6, [r0, #12]
 800d958:	b13c      	cbz	r4, 800d96a <_Bfree+0x3a>
 800d95a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800d95c:	6862      	ldr	r2, [r4, #4]
 800d95e:	68db      	ldr	r3, [r3, #12]
 800d960:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800d964:	6021      	str	r1, [r4, #0]
 800d966:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800d96a:	bd70      	pop	{r4, r5, r6, pc}
 800d96c:	08010691 	.word	0x08010691
 800d970:	08010714 	.word	0x08010714

0800d974 <__multadd>:
 800d974:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d978:	690d      	ldr	r5, [r1, #16]
 800d97a:	4607      	mov	r7, r0
 800d97c:	460c      	mov	r4, r1
 800d97e:	461e      	mov	r6, r3
 800d980:	f101 0c14 	add.w	ip, r1, #20
 800d984:	2000      	movs	r0, #0
 800d986:	f8dc 3000 	ldr.w	r3, [ip]
 800d98a:	b299      	uxth	r1, r3
 800d98c:	fb02 6101 	mla	r1, r2, r1, r6
 800d990:	0c1e      	lsrs	r6, r3, #16
 800d992:	0c0b      	lsrs	r3, r1, #16
 800d994:	fb02 3306 	mla	r3, r2, r6, r3
 800d998:	b289      	uxth	r1, r1
 800d99a:	3001      	adds	r0, #1
 800d99c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800d9a0:	4285      	cmp	r5, r0
 800d9a2:	f84c 1b04 	str.w	r1, [ip], #4
 800d9a6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800d9aa:	dcec      	bgt.n	800d986 <__multadd+0x12>
 800d9ac:	b30e      	cbz	r6, 800d9f2 <__multadd+0x7e>
 800d9ae:	68a3      	ldr	r3, [r4, #8]
 800d9b0:	42ab      	cmp	r3, r5
 800d9b2:	dc19      	bgt.n	800d9e8 <__multadd+0x74>
 800d9b4:	6861      	ldr	r1, [r4, #4]
 800d9b6:	4638      	mov	r0, r7
 800d9b8:	3101      	adds	r1, #1
 800d9ba:	f7ff ff79 	bl	800d8b0 <_Balloc>
 800d9be:	4680      	mov	r8, r0
 800d9c0:	b928      	cbnz	r0, 800d9ce <__multadd+0x5a>
 800d9c2:	4602      	mov	r2, r0
 800d9c4:	4b0c      	ldr	r3, [pc, #48]	; (800d9f8 <__multadd+0x84>)
 800d9c6:	480d      	ldr	r0, [pc, #52]	; (800d9fc <__multadd+0x88>)
 800d9c8:	21b5      	movs	r1, #181	; 0xb5
 800d9ca:	f000 fd57 	bl	800e47c <__assert_func>
 800d9ce:	6922      	ldr	r2, [r4, #16]
 800d9d0:	3202      	adds	r2, #2
 800d9d2:	f104 010c 	add.w	r1, r4, #12
 800d9d6:	0092      	lsls	r2, r2, #2
 800d9d8:	300c      	adds	r0, #12
 800d9da:	f7ff ff5b 	bl	800d894 <memcpy>
 800d9de:	4621      	mov	r1, r4
 800d9e0:	4638      	mov	r0, r7
 800d9e2:	f7ff ffa5 	bl	800d930 <_Bfree>
 800d9e6:	4644      	mov	r4, r8
 800d9e8:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800d9ec:	3501      	adds	r5, #1
 800d9ee:	615e      	str	r6, [r3, #20]
 800d9f0:	6125      	str	r5, [r4, #16]
 800d9f2:	4620      	mov	r0, r4
 800d9f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d9f8:	08010703 	.word	0x08010703
 800d9fc:	08010714 	.word	0x08010714

0800da00 <__hi0bits>:
 800da00:	0c03      	lsrs	r3, r0, #16
 800da02:	041b      	lsls	r3, r3, #16
 800da04:	b9d3      	cbnz	r3, 800da3c <__hi0bits+0x3c>
 800da06:	0400      	lsls	r0, r0, #16
 800da08:	2310      	movs	r3, #16
 800da0a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800da0e:	bf04      	itt	eq
 800da10:	0200      	lsleq	r0, r0, #8
 800da12:	3308      	addeq	r3, #8
 800da14:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800da18:	bf04      	itt	eq
 800da1a:	0100      	lsleq	r0, r0, #4
 800da1c:	3304      	addeq	r3, #4
 800da1e:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800da22:	bf04      	itt	eq
 800da24:	0080      	lsleq	r0, r0, #2
 800da26:	3302      	addeq	r3, #2
 800da28:	2800      	cmp	r0, #0
 800da2a:	db05      	blt.n	800da38 <__hi0bits+0x38>
 800da2c:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800da30:	f103 0301 	add.w	r3, r3, #1
 800da34:	bf08      	it	eq
 800da36:	2320      	moveq	r3, #32
 800da38:	4618      	mov	r0, r3
 800da3a:	4770      	bx	lr
 800da3c:	2300      	movs	r3, #0
 800da3e:	e7e4      	b.n	800da0a <__hi0bits+0xa>

0800da40 <__lo0bits>:
 800da40:	6803      	ldr	r3, [r0, #0]
 800da42:	f013 0207 	ands.w	r2, r3, #7
 800da46:	4601      	mov	r1, r0
 800da48:	d00b      	beq.n	800da62 <__lo0bits+0x22>
 800da4a:	07da      	lsls	r2, r3, #31
 800da4c:	d423      	bmi.n	800da96 <__lo0bits+0x56>
 800da4e:	0798      	lsls	r0, r3, #30
 800da50:	bf49      	itett	mi
 800da52:	085b      	lsrmi	r3, r3, #1
 800da54:	089b      	lsrpl	r3, r3, #2
 800da56:	2001      	movmi	r0, #1
 800da58:	600b      	strmi	r3, [r1, #0]
 800da5a:	bf5c      	itt	pl
 800da5c:	600b      	strpl	r3, [r1, #0]
 800da5e:	2002      	movpl	r0, #2
 800da60:	4770      	bx	lr
 800da62:	b298      	uxth	r0, r3
 800da64:	b9a8      	cbnz	r0, 800da92 <__lo0bits+0x52>
 800da66:	0c1b      	lsrs	r3, r3, #16
 800da68:	2010      	movs	r0, #16
 800da6a:	b2da      	uxtb	r2, r3
 800da6c:	b90a      	cbnz	r2, 800da72 <__lo0bits+0x32>
 800da6e:	3008      	adds	r0, #8
 800da70:	0a1b      	lsrs	r3, r3, #8
 800da72:	071a      	lsls	r2, r3, #28
 800da74:	bf04      	itt	eq
 800da76:	091b      	lsreq	r3, r3, #4
 800da78:	3004      	addeq	r0, #4
 800da7a:	079a      	lsls	r2, r3, #30
 800da7c:	bf04      	itt	eq
 800da7e:	089b      	lsreq	r3, r3, #2
 800da80:	3002      	addeq	r0, #2
 800da82:	07da      	lsls	r2, r3, #31
 800da84:	d403      	bmi.n	800da8e <__lo0bits+0x4e>
 800da86:	085b      	lsrs	r3, r3, #1
 800da88:	f100 0001 	add.w	r0, r0, #1
 800da8c:	d005      	beq.n	800da9a <__lo0bits+0x5a>
 800da8e:	600b      	str	r3, [r1, #0]
 800da90:	4770      	bx	lr
 800da92:	4610      	mov	r0, r2
 800da94:	e7e9      	b.n	800da6a <__lo0bits+0x2a>
 800da96:	2000      	movs	r0, #0
 800da98:	4770      	bx	lr
 800da9a:	2020      	movs	r0, #32
 800da9c:	4770      	bx	lr
	...

0800daa0 <__i2b>:
 800daa0:	b510      	push	{r4, lr}
 800daa2:	460c      	mov	r4, r1
 800daa4:	2101      	movs	r1, #1
 800daa6:	f7ff ff03 	bl	800d8b0 <_Balloc>
 800daaa:	4602      	mov	r2, r0
 800daac:	b928      	cbnz	r0, 800daba <__i2b+0x1a>
 800daae:	4b05      	ldr	r3, [pc, #20]	; (800dac4 <__i2b+0x24>)
 800dab0:	4805      	ldr	r0, [pc, #20]	; (800dac8 <__i2b+0x28>)
 800dab2:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800dab6:	f000 fce1 	bl	800e47c <__assert_func>
 800daba:	2301      	movs	r3, #1
 800dabc:	6144      	str	r4, [r0, #20]
 800dabe:	6103      	str	r3, [r0, #16]
 800dac0:	bd10      	pop	{r4, pc}
 800dac2:	bf00      	nop
 800dac4:	08010703 	.word	0x08010703
 800dac8:	08010714 	.word	0x08010714

0800dacc <__multiply>:
 800dacc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dad0:	4691      	mov	r9, r2
 800dad2:	690a      	ldr	r2, [r1, #16]
 800dad4:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800dad8:	429a      	cmp	r2, r3
 800dada:	bfb8      	it	lt
 800dadc:	460b      	movlt	r3, r1
 800dade:	460c      	mov	r4, r1
 800dae0:	bfbc      	itt	lt
 800dae2:	464c      	movlt	r4, r9
 800dae4:	4699      	movlt	r9, r3
 800dae6:	6927      	ldr	r7, [r4, #16]
 800dae8:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800daec:	68a3      	ldr	r3, [r4, #8]
 800daee:	6861      	ldr	r1, [r4, #4]
 800daf0:	eb07 060a 	add.w	r6, r7, sl
 800daf4:	42b3      	cmp	r3, r6
 800daf6:	b085      	sub	sp, #20
 800daf8:	bfb8      	it	lt
 800dafa:	3101      	addlt	r1, #1
 800dafc:	f7ff fed8 	bl	800d8b0 <_Balloc>
 800db00:	b930      	cbnz	r0, 800db10 <__multiply+0x44>
 800db02:	4602      	mov	r2, r0
 800db04:	4b44      	ldr	r3, [pc, #272]	; (800dc18 <__multiply+0x14c>)
 800db06:	4845      	ldr	r0, [pc, #276]	; (800dc1c <__multiply+0x150>)
 800db08:	f240 115d 	movw	r1, #349	; 0x15d
 800db0c:	f000 fcb6 	bl	800e47c <__assert_func>
 800db10:	f100 0514 	add.w	r5, r0, #20
 800db14:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800db18:	462b      	mov	r3, r5
 800db1a:	2200      	movs	r2, #0
 800db1c:	4543      	cmp	r3, r8
 800db1e:	d321      	bcc.n	800db64 <__multiply+0x98>
 800db20:	f104 0314 	add.w	r3, r4, #20
 800db24:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800db28:	f109 0314 	add.w	r3, r9, #20
 800db2c:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800db30:	9202      	str	r2, [sp, #8]
 800db32:	1b3a      	subs	r2, r7, r4
 800db34:	3a15      	subs	r2, #21
 800db36:	f022 0203 	bic.w	r2, r2, #3
 800db3a:	3204      	adds	r2, #4
 800db3c:	f104 0115 	add.w	r1, r4, #21
 800db40:	428f      	cmp	r7, r1
 800db42:	bf38      	it	cc
 800db44:	2204      	movcc	r2, #4
 800db46:	9201      	str	r2, [sp, #4]
 800db48:	9a02      	ldr	r2, [sp, #8]
 800db4a:	9303      	str	r3, [sp, #12]
 800db4c:	429a      	cmp	r2, r3
 800db4e:	d80c      	bhi.n	800db6a <__multiply+0x9e>
 800db50:	2e00      	cmp	r6, #0
 800db52:	dd03      	ble.n	800db5c <__multiply+0x90>
 800db54:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800db58:	2b00      	cmp	r3, #0
 800db5a:	d05a      	beq.n	800dc12 <__multiply+0x146>
 800db5c:	6106      	str	r6, [r0, #16]
 800db5e:	b005      	add	sp, #20
 800db60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800db64:	f843 2b04 	str.w	r2, [r3], #4
 800db68:	e7d8      	b.n	800db1c <__multiply+0x50>
 800db6a:	f8b3 a000 	ldrh.w	sl, [r3]
 800db6e:	f1ba 0f00 	cmp.w	sl, #0
 800db72:	d024      	beq.n	800dbbe <__multiply+0xf2>
 800db74:	f104 0e14 	add.w	lr, r4, #20
 800db78:	46a9      	mov	r9, r5
 800db7a:	f04f 0c00 	mov.w	ip, #0
 800db7e:	f85e 2b04 	ldr.w	r2, [lr], #4
 800db82:	f8d9 1000 	ldr.w	r1, [r9]
 800db86:	fa1f fb82 	uxth.w	fp, r2
 800db8a:	b289      	uxth	r1, r1
 800db8c:	fb0a 110b 	mla	r1, sl, fp, r1
 800db90:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800db94:	f8d9 2000 	ldr.w	r2, [r9]
 800db98:	4461      	add	r1, ip
 800db9a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800db9e:	fb0a c20b 	mla	r2, sl, fp, ip
 800dba2:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800dba6:	b289      	uxth	r1, r1
 800dba8:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800dbac:	4577      	cmp	r7, lr
 800dbae:	f849 1b04 	str.w	r1, [r9], #4
 800dbb2:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800dbb6:	d8e2      	bhi.n	800db7e <__multiply+0xb2>
 800dbb8:	9a01      	ldr	r2, [sp, #4]
 800dbba:	f845 c002 	str.w	ip, [r5, r2]
 800dbbe:	9a03      	ldr	r2, [sp, #12]
 800dbc0:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800dbc4:	3304      	adds	r3, #4
 800dbc6:	f1b9 0f00 	cmp.w	r9, #0
 800dbca:	d020      	beq.n	800dc0e <__multiply+0x142>
 800dbcc:	6829      	ldr	r1, [r5, #0]
 800dbce:	f104 0c14 	add.w	ip, r4, #20
 800dbd2:	46ae      	mov	lr, r5
 800dbd4:	f04f 0a00 	mov.w	sl, #0
 800dbd8:	f8bc b000 	ldrh.w	fp, [ip]
 800dbdc:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800dbe0:	fb09 220b 	mla	r2, r9, fp, r2
 800dbe4:	4492      	add	sl, r2
 800dbe6:	b289      	uxth	r1, r1
 800dbe8:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800dbec:	f84e 1b04 	str.w	r1, [lr], #4
 800dbf0:	f85c 2b04 	ldr.w	r2, [ip], #4
 800dbf4:	f8be 1000 	ldrh.w	r1, [lr]
 800dbf8:	0c12      	lsrs	r2, r2, #16
 800dbfa:	fb09 1102 	mla	r1, r9, r2, r1
 800dbfe:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800dc02:	4567      	cmp	r7, ip
 800dc04:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800dc08:	d8e6      	bhi.n	800dbd8 <__multiply+0x10c>
 800dc0a:	9a01      	ldr	r2, [sp, #4]
 800dc0c:	50a9      	str	r1, [r5, r2]
 800dc0e:	3504      	adds	r5, #4
 800dc10:	e79a      	b.n	800db48 <__multiply+0x7c>
 800dc12:	3e01      	subs	r6, #1
 800dc14:	e79c      	b.n	800db50 <__multiply+0x84>
 800dc16:	bf00      	nop
 800dc18:	08010703 	.word	0x08010703
 800dc1c:	08010714 	.word	0x08010714

0800dc20 <__pow5mult>:
 800dc20:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dc24:	4615      	mov	r5, r2
 800dc26:	f012 0203 	ands.w	r2, r2, #3
 800dc2a:	4606      	mov	r6, r0
 800dc2c:	460f      	mov	r7, r1
 800dc2e:	d007      	beq.n	800dc40 <__pow5mult+0x20>
 800dc30:	4c25      	ldr	r4, [pc, #148]	; (800dcc8 <__pow5mult+0xa8>)
 800dc32:	3a01      	subs	r2, #1
 800dc34:	2300      	movs	r3, #0
 800dc36:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800dc3a:	f7ff fe9b 	bl	800d974 <__multadd>
 800dc3e:	4607      	mov	r7, r0
 800dc40:	10ad      	asrs	r5, r5, #2
 800dc42:	d03d      	beq.n	800dcc0 <__pow5mult+0xa0>
 800dc44:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800dc46:	b97c      	cbnz	r4, 800dc68 <__pow5mult+0x48>
 800dc48:	2010      	movs	r0, #16
 800dc4a:	f7ff fe1b 	bl	800d884 <malloc>
 800dc4e:	4602      	mov	r2, r0
 800dc50:	6270      	str	r0, [r6, #36]	; 0x24
 800dc52:	b928      	cbnz	r0, 800dc60 <__pow5mult+0x40>
 800dc54:	4b1d      	ldr	r3, [pc, #116]	; (800dccc <__pow5mult+0xac>)
 800dc56:	481e      	ldr	r0, [pc, #120]	; (800dcd0 <__pow5mult+0xb0>)
 800dc58:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800dc5c:	f000 fc0e 	bl	800e47c <__assert_func>
 800dc60:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800dc64:	6004      	str	r4, [r0, #0]
 800dc66:	60c4      	str	r4, [r0, #12]
 800dc68:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800dc6c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800dc70:	b94c      	cbnz	r4, 800dc86 <__pow5mult+0x66>
 800dc72:	f240 2171 	movw	r1, #625	; 0x271
 800dc76:	4630      	mov	r0, r6
 800dc78:	f7ff ff12 	bl	800daa0 <__i2b>
 800dc7c:	2300      	movs	r3, #0
 800dc7e:	f8c8 0008 	str.w	r0, [r8, #8]
 800dc82:	4604      	mov	r4, r0
 800dc84:	6003      	str	r3, [r0, #0]
 800dc86:	f04f 0900 	mov.w	r9, #0
 800dc8a:	07eb      	lsls	r3, r5, #31
 800dc8c:	d50a      	bpl.n	800dca4 <__pow5mult+0x84>
 800dc8e:	4639      	mov	r1, r7
 800dc90:	4622      	mov	r2, r4
 800dc92:	4630      	mov	r0, r6
 800dc94:	f7ff ff1a 	bl	800dacc <__multiply>
 800dc98:	4639      	mov	r1, r7
 800dc9a:	4680      	mov	r8, r0
 800dc9c:	4630      	mov	r0, r6
 800dc9e:	f7ff fe47 	bl	800d930 <_Bfree>
 800dca2:	4647      	mov	r7, r8
 800dca4:	106d      	asrs	r5, r5, #1
 800dca6:	d00b      	beq.n	800dcc0 <__pow5mult+0xa0>
 800dca8:	6820      	ldr	r0, [r4, #0]
 800dcaa:	b938      	cbnz	r0, 800dcbc <__pow5mult+0x9c>
 800dcac:	4622      	mov	r2, r4
 800dcae:	4621      	mov	r1, r4
 800dcb0:	4630      	mov	r0, r6
 800dcb2:	f7ff ff0b 	bl	800dacc <__multiply>
 800dcb6:	6020      	str	r0, [r4, #0]
 800dcb8:	f8c0 9000 	str.w	r9, [r0]
 800dcbc:	4604      	mov	r4, r0
 800dcbe:	e7e4      	b.n	800dc8a <__pow5mult+0x6a>
 800dcc0:	4638      	mov	r0, r7
 800dcc2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800dcc6:	bf00      	nop
 800dcc8:	08010860 	.word	0x08010860
 800dccc:	08010691 	.word	0x08010691
 800dcd0:	08010714 	.word	0x08010714

0800dcd4 <__lshift>:
 800dcd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dcd8:	460c      	mov	r4, r1
 800dcda:	6849      	ldr	r1, [r1, #4]
 800dcdc:	6923      	ldr	r3, [r4, #16]
 800dcde:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800dce2:	68a3      	ldr	r3, [r4, #8]
 800dce4:	4607      	mov	r7, r0
 800dce6:	4691      	mov	r9, r2
 800dce8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800dcec:	f108 0601 	add.w	r6, r8, #1
 800dcf0:	42b3      	cmp	r3, r6
 800dcf2:	db0b      	blt.n	800dd0c <__lshift+0x38>
 800dcf4:	4638      	mov	r0, r7
 800dcf6:	f7ff fddb 	bl	800d8b0 <_Balloc>
 800dcfa:	4605      	mov	r5, r0
 800dcfc:	b948      	cbnz	r0, 800dd12 <__lshift+0x3e>
 800dcfe:	4602      	mov	r2, r0
 800dd00:	4b2a      	ldr	r3, [pc, #168]	; (800ddac <__lshift+0xd8>)
 800dd02:	482b      	ldr	r0, [pc, #172]	; (800ddb0 <__lshift+0xdc>)
 800dd04:	f240 11d9 	movw	r1, #473	; 0x1d9
 800dd08:	f000 fbb8 	bl	800e47c <__assert_func>
 800dd0c:	3101      	adds	r1, #1
 800dd0e:	005b      	lsls	r3, r3, #1
 800dd10:	e7ee      	b.n	800dcf0 <__lshift+0x1c>
 800dd12:	2300      	movs	r3, #0
 800dd14:	f100 0114 	add.w	r1, r0, #20
 800dd18:	f100 0210 	add.w	r2, r0, #16
 800dd1c:	4618      	mov	r0, r3
 800dd1e:	4553      	cmp	r3, sl
 800dd20:	db37      	blt.n	800dd92 <__lshift+0xbe>
 800dd22:	6920      	ldr	r0, [r4, #16]
 800dd24:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800dd28:	f104 0314 	add.w	r3, r4, #20
 800dd2c:	f019 091f 	ands.w	r9, r9, #31
 800dd30:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800dd34:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800dd38:	d02f      	beq.n	800dd9a <__lshift+0xc6>
 800dd3a:	f1c9 0e20 	rsb	lr, r9, #32
 800dd3e:	468a      	mov	sl, r1
 800dd40:	f04f 0c00 	mov.w	ip, #0
 800dd44:	681a      	ldr	r2, [r3, #0]
 800dd46:	fa02 f209 	lsl.w	r2, r2, r9
 800dd4a:	ea42 020c 	orr.w	r2, r2, ip
 800dd4e:	f84a 2b04 	str.w	r2, [sl], #4
 800dd52:	f853 2b04 	ldr.w	r2, [r3], #4
 800dd56:	4298      	cmp	r0, r3
 800dd58:	fa22 fc0e 	lsr.w	ip, r2, lr
 800dd5c:	d8f2      	bhi.n	800dd44 <__lshift+0x70>
 800dd5e:	1b03      	subs	r3, r0, r4
 800dd60:	3b15      	subs	r3, #21
 800dd62:	f023 0303 	bic.w	r3, r3, #3
 800dd66:	3304      	adds	r3, #4
 800dd68:	f104 0215 	add.w	r2, r4, #21
 800dd6c:	4290      	cmp	r0, r2
 800dd6e:	bf38      	it	cc
 800dd70:	2304      	movcc	r3, #4
 800dd72:	f841 c003 	str.w	ip, [r1, r3]
 800dd76:	f1bc 0f00 	cmp.w	ip, #0
 800dd7a:	d001      	beq.n	800dd80 <__lshift+0xac>
 800dd7c:	f108 0602 	add.w	r6, r8, #2
 800dd80:	3e01      	subs	r6, #1
 800dd82:	4638      	mov	r0, r7
 800dd84:	612e      	str	r6, [r5, #16]
 800dd86:	4621      	mov	r1, r4
 800dd88:	f7ff fdd2 	bl	800d930 <_Bfree>
 800dd8c:	4628      	mov	r0, r5
 800dd8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800dd92:	f842 0f04 	str.w	r0, [r2, #4]!
 800dd96:	3301      	adds	r3, #1
 800dd98:	e7c1      	b.n	800dd1e <__lshift+0x4a>
 800dd9a:	3904      	subs	r1, #4
 800dd9c:	f853 2b04 	ldr.w	r2, [r3], #4
 800dda0:	f841 2f04 	str.w	r2, [r1, #4]!
 800dda4:	4298      	cmp	r0, r3
 800dda6:	d8f9      	bhi.n	800dd9c <__lshift+0xc8>
 800dda8:	e7ea      	b.n	800dd80 <__lshift+0xac>
 800ddaa:	bf00      	nop
 800ddac:	08010703 	.word	0x08010703
 800ddb0:	08010714 	.word	0x08010714

0800ddb4 <__mcmp>:
 800ddb4:	b530      	push	{r4, r5, lr}
 800ddb6:	6902      	ldr	r2, [r0, #16]
 800ddb8:	690c      	ldr	r4, [r1, #16]
 800ddba:	1b12      	subs	r2, r2, r4
 800ddbc:	d10e      	bne.n	800dddc <__mcmp+0x28>
 800ddbe:	f100 0314 	add.w	r3, r0, #20
 800ddc2:	3114      	adds	r1, #20
 800ddc4:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800ddc8:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800ddcc:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800ddd0:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800ddd4:	42a5      	cmp	r5, r4
 800ddd6:	d003      	beq.n	800dde0 <__mcmp+0x2c>
 800ddd8:	d305      	bcc.n	800dde6 <__mcmp+0x32>
 800ddda:	2201      	movs	r2, #1
 800dddc:	4610      	mov	r0, r2
 800ddde:	bd30      	pop	{r4, r5, pc}
 800dde0:	4283      	cmp	r3, r0
 800dde2:	d3f3      	bcc.n	800ddcc <__mcmp+0x18>
 800dde4:	e7fa      	b.n	800dddc <__mcmp+0x28>
 800dde6:	f04f 32ff 	mov.w	r2, #4294967295
 800ddea:	e7f7      	b.n	800dddc <__mcmp+0x28>

0800ddec <__mdiff>:
 800ddec:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ddf0:	460c      	mov	r4, r1
 800ddf2:	4606      	mov	r6, r0
 800ddf4:	4611      	mov	r1, r2
 800ddf6:	4620      	mov	r0, r4
 800ddf8:	4690      	mov	r8, r2
 800ddfa:	f7ff ffdb 	bl	800ddb4 <__mcmp>
 800ddfe:	1e05      	subs	r5, r0, #0
 800de00:	d110      	bne.n	800de24 <__mdiff+0x38>
 800de02:	4629      	mov	r1, r5
 800de04:	4630      	mov	r0, r6
 800de06:	f7ff fd53 	bl	800d8b0 <_Balloc>
 800de0a:	b930      	cbnz	r0, 800de1a <__mdiff+0x2e>
 800de0c:	4b3a      	ldr	r3, [pc, #232]	; (800def8 <__mdiff+0x10c>)
 800de0e:	4602      	mov	r2, r0
 800de10:	f240 2132 	movw	r1, #562	; 0x232
 800de14:	4839      	ldr	r0, [pc, #228]	; (800defc <__mdiff+0x110>)
 800de16:	f000 fb31 	bl	800e47c <__assert_func>
 800de1a:	2301      	movs	r3, #1
 800de1c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800de20:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800de24:	bfa4      	itt	ge
 800de26:	4643      	movge	r3, r8
 800de28:	46a0      	movge	r8, r4
 800de2a:	4630      	mov	r0, r6
 800de2c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800de30:	bfa6      	itte	ge
 800de32:	461c      	movge	r4, r3
 800de34:	2500      	movge	r5, #0
 800de36:	2501      	movlt	r5, #1
 800de38:	f7ff fd3a 	bl	800d8b0 <_Balloc>
 800de3c:	b920      	cbnz	r0, 800de48 <__mdiff+0x5c>
 800de3e:	4b2e      	ldr	r3, [pc, #184]	; (800def8 <__mdiff+0x10c>)
 800de40:	4602      	mov	r2, r0
 800de42:	f44f 7110 	mov.w	r1, #576	; 0x240
 800de46:	e7e5      	b.n	800de14 <__mdiff+0x28>
 800de48:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800de4c:	6926      	ldr	r6, [r4, #16]
 800de4e:	60c5      	str	r5, [r0, #12]
 800de50:	f104 0914 	add.w	r9, r4, #20
 800de54:	f108 0514 	add.w	r5, r8, #20
 800de58:	f100 0e14 	add.w	lr, r0, #20
 800de5c:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800de60:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800de64:	f108 0210 	add.w	r2, r8, #16
 800de68:	46f2      	mov	sl, lr
 800de6a:	2100      	movs	r1, #0
 800de6c:	f859 3b04 	ldr.w	r3, [r9], #4
 800de70:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800de74:	fa1f f883 	uxth.w	r8, r3
 800de78:	fa11 f18b 	uxtah	r1, r1, fp
 800de7c:	0c1b      	lsrs	r3, r3, #16
 800de7e:	eba1 0808 	sub.w	r8, r1, r8
 800de82:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800de86:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800de8a:	fa1f f888 	uxth.w	r8, r8
 800de8e:	1419      	asrs	r1, r3, #16
 800de90:	454e      	cmp	r6, r9
 800de92:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800de96:	f84a 3b04 	str.w	r3, [sl], #4
 800de9a:	d8e7      	bhi.n	800de6c <__mdiff+0x80>
 800de9c:	1b33      	subs	r3, r6, r4
 800de9e:	3b15      	subs	r3, #21
 800dea0:	f023 0303 	bic.w	r3, r3, #3
 800dea4:	3304      	adds	r3, #4
 800dea6:	3415      	adds	r4, #21
 800dea8:	42a6      	cmp	r6, r4
 800deaa:	bf38      	it	cc
 800deac:	2304      	movcc	r3, #4
 800deae:	441d      	add	r5, r3
 800deb0:	4473      	add	r3, lr
 800deb2:	469e      	mov	lr, r3
 800deb4:	462e      	mov	r6, r5
 800deb6:	4566      	cmp	r6, ip
 800deb8:	d30e      	bcc.n	800ded8 <__mdiff+0xec>
 800deba:	f10c 0203 	add.w	r2, ip, #3
 800debe:	1b52      	subs	r2, r2, r5
 800dec0:	f022 0203 	bic.w	r2, r2, #3
 800dec4:	3d03      	subs	r5, #3
 800dec6:	45ac      	cmp	ip, r5
 800dec8:	bf38      	it	cc
 800deca:	2200      	movcc	r2, #0
 800decc:	441a      	add	r2, r3
 800dece:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800ded2:	b17b      	cbz	r3, 800def4 <__mdiff+0x108>
 800ded4:	6107      	str	r7, [r0, #16]
 800ded6:	e7a3      	b.n	800de20 <__mdiff+0x34>
 800ded8:	f856 8b04 	ldr.w	r8, [r6], #4
 800dedc:	fa11 f288 	uxtah	r2, r1, r8
 800dee0:	1414      	asrs	r4, r2, #16
 800dee2:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800dee6:	b292      	uxth	r2, r2
 800dee8:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800deec:	f84e 2b04 	str.w	r2, [lr], #4
 800def0:	1421      	asrs	r1, r4, #16
 800def2:	e7e0      	b.n	800deb6 <__mdiff+0xca>
 800def4:	3f01      	subs	r7, #1
 800def6:	e7ea      	b.n	800dece <__mdiff+0xe2>
 800def8:	08010703 	.word	0x08010703
 800defc:	08010714 	.word	0x08010714

0800df00 <__d2b>:
 800df00:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800df04:	4689      	mov	r9, r1
 800df06:	2101      	movs	r1, #1
 800df08:	ec57 6b10 	vmov	r6, r7, d0
 800df0c:	4690      	mov	r8, r2
 800df0e:	f7ff fccf 	bl	800d8b0 <_Balloc>
 800df12:	4604      	mov	r4, r0
 800df14:	b930      	cbnz	r0, 800df24 <__d2b+0x24>
 800df16:	4602      	mov	r2, r0
 800df18:	4b25      	ldr	r3, [pc, #148]	; (800dfb0 <__d2b+0xb0>)
 800df1a:	4826      	ldr	r0, [pc, #152]	; (800dfb4 <__d2b+0xb4>)
 800df1c:	f240 310a 	movw	r1, #778	; 0x30a
 800df20:	f000 faac 	bl	800e47c <__assert_func>
 800df24:	f3c7 550a 	ubfx	r5, r7, #20, #11
 800df28:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800df2c:	bb35      	cbnz	r5, 800df7c <__d2b+0x7c>
 800df2e:	2e00      	cmp	r6, #0
 800df30:	9301      	str	r3, [sp, #4]
 800df32:	d028      	beq.n	800df86 <__d2b+0x86>
 800df34:	4668      	mov	r0, sp
 800df36:	9600      	str	r6, [sp, #0]
 800df38:	f7ff fd82 	bl	800da40 <__lo0bits>
 800df3c:	9900      	ldr	r1, [sp, #0]
 800df3e:	b300      	cbz	r0, 800df82 <__d2b+0x82>
 800df40:	9a01      	ldr	r2, [sp, #4]
 800df42:	f1c0 0320 	rsb	r3, r0, #32
 800df46:	fa02 f303 	lsl.w	r3, r2, r3
 800df4a:	430b      	orrs	r3, r1
 800df4c:	40c2      	lsrs	r2, r0
 800df4e:	6163      	str	r3, [r4, #20]
 800df50:	9201      	str	r2, [sp, #4]
 800df52:	9b01      	ldr	r3, [sp, #4]
 800df54:	61a3      	str	r3, [r4, #24]
 800df56:	2b00      	cmp	r3, #0
 800df58:	bf14      	ite	ne
 800df5a:	2202      	movne	r2, #2
 800df5c:	2201      	moveq	r2, #1
 800df5e:	6122      	str	r2, [r4, #16]
 800df60:	b1d5      	cbz	r5, 800df98 <__d2b+0x98>
 800df62:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800df66:	4405      	add	r5, r0
 800df68:	f8c9 5000 	str.w	r5, [r9]
 800df6c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800df70:	f8c8 0000 	str.w	r0, [r8]
 800df74:	4620      	mov	r0, r4
 800df76:	b003      	add	sp, #12
 800df78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800df7c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800df80:	e7d5      	b.n	800df2e <__d2b+0x2e>
 800df82:	6161      	str	r1, [r4, #20]
 800df84:	e7e5      	b.n	800df52 <__d2b+0x52>
 800df86:	a801      	add	r0, sp, #4
 800df88:	f7ff fd5a 	bl	800da40 <__lo0bits>
 800df8c:	9b01      	ldr	r3, [sp, #4]
 800df8e:	6163      	str	r3, [r4, #20]
 800df90:	2201      	movs	r2, #1
 800df92:	6122      	str	r2, [r4, #16]
 800df94:	3020      	adds	r0, #32
 800df96:	e7e3      	b.n	800df60 <__d2b+0x60>
 800df98:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800df9c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800dfa0:	f8c9 0000 	str.w	r0, [r9]
 800dfa4:	6918      	ldr	r0, [r3, #16]
 800dfa6:	f7ff fd2b 	bl	800da00 <__hi0bits>
 800dfaa:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800dfae:	e7df      	b.n	800df70 <__d2b+0x70>
 800dfb0:	08010703 	.word	0x08010703
 800dfb4:	08010714 	.word	0x08010714

0800dfb8 <_calloc_r>:
 800dfb8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dfba:	fba1 2402 	umull	r2, r4, r1, r2
 800dfbe:	b94c      	cbnz	r4, 800dfd4 <_calloc_r+0x1c>
 800dfc0:	4611      	mov	r1, r2
 800dfc2:	9201      	str	r2, [sp, #4]
 800dfc4:	f000 f87a 	bl	800e0bc <_malloc_r>
 800dfc8:	9a01      	ldr	r2, [sp, #4]
 800dfca:	4605      	mov	r5, r0
 800dfcc:	b930      	cbnz	r0, 800dfdc <_calloc_r+0x24>
 800dfce:	4628      	mov	r0, r5
 800dfd0:	b003      	add	sp, #12
 800dfd2:	bd30      	pop	{r4, r5, pc}
 800dfd4:	220c      	movs	r2, #12
 800dfd6:	6002      	str	r2, [r0, #0]
 800dfd8:	2500      	movs	r5, #0
 800dfda:	e7f8      	b.n	800dfce <_calloc_r+0x16>
 800dfdc:	4621      	mov	r1, r4
 800dfde:	f7fe f941 	bl	800c264 <memset>
 800dfe2:	e7f4      	b.n	800dfce <_calloc_r+0x16>

0800dfe4 <_free_r>:
 800dfe4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dfe6:	2900      	cmp	r1, #0
 800dfe8:	d044      	beq.n	800e074 <_free_r+0x90>
 800dfea:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800dfee:	9001      	str	r0, [sp, #4]
 800dff0:	2b00      	cmp	r3, #0
 800dff2:	f1a1 0404 	sub.w	r4, r1, #4
 800dff6:	bfb8      	it	lt
 800dff8:	18e4      	addlt	r4, r4, r3
 800dffa:	f000 fa9b 	bl	800e534 <__malloc_lock>
 800dffe:	4a1e      	ldr	r2, [pc, #120]	; (800e078 <_free_r+0x94>)
 800e000:	9801      	ldr	r0, [sp, #4]
 800e002:	6813      	ldr	r3, [r2, #0]
 800e004:	b933      	cbnz	r3, 800e014 <_free_r+0x30>
 800e006:	6063      	str	r3, [r4, #4]
 800e008:	6014      	str	r4, [r2, #0]
 800e00a:	b003      	add	sp, #12
 800e00c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800e010:	f000 ba96 	b.w	800e540 <__malloc_unlock>
 800e014:	42a3      	cmp	r3, r4
 800e016:	d908      	bls.n	800e02a <_free_r+0x46>
 800e018:	6825      	ldr	r5, [r4, #0]
 800e01a:	1961      	adds	r1, r4, r5
 800e01c:	428b      	cmp	r3, r1
 800e01e:	bf01      	itttt	eq
 800e020:	6819      	ldreq	r1, [r3, #0]
 800e022:	685b      	ldreq	r3, [r3, #4]
 800e024:	1949      	addeq	r1, r1, r5
 800e026:	6021      	streq	r1, [r4, #0]
 800e028:	e7ed      	b.n	800e006 <_free_r+0x22>
 800e02a:	461a      	mov	r2, r3
 800e02c:	685b      	ldr	r3, [r3, #4]
 800e02e:	b10b      	cbz	r3, 800e034 <_free_r+0x50>
 800e030:	42a3      	cmp	r3, r4
 800e032:	d9fa      	bls.n	800e02a <_free_r+0x46>
 800e034:	6811      	ldr	r1, [r2, #0]
 800e036:	1855      	adds	r5, r2, r1
 800e038:	42a5      	cmp	r5, r4
 800e03a:	d10b      	bne.n	800e054 <_free_r+0x70>
 800e03c:	6824      	ldr	r4, [r4, #0]
 800e03e:	4421      	add	r1, r4
 800e040:	1854      	adds	r4, r2, r1
 800e042:	42a3      	cmp	r3, r4
 800e044:	6011      	str	r1, [r2, #0]
 800e046:	d1e0      	bne.n	800e00a <_free_r+0x26>
 800e048:	681c      	ldr	r4, [r3, #0]
 800e04a:	685b      	ldr	r3, [r3, #4]
 800e04c:	6053      	str	r3, [r2, #4]
 800e04e:	4421      	add	r1, r4
 800e050:	6011      	str	r1, [r2, #0]
 800e052:	e7da      	b.n	800e00a <_free_r+0x26>
 800e054:	d902      	bls.n	800e05c <_free_r+0x78>
 800e056:	230c      	movs	r3, #12
 800e058:	6003      	str	r3, [r0, #0]
 800e05a:	e7d6      	b.n	800e00a <_free_r+0x26>
 800e05c:	6825      	ldr	r5, [r4, #0]
 800e05e:	1961      	adds	r1, r4, r5
 800e060:	428b      	cmp	r3, r1
 800e062:	bf04      	itt	eq
 800e064:	6819      	ldreq	r1, [r3, #0]
 800e066:	685b      	ldreq	r3, [r3, #4]
 800e068:	6063      	str	r3, [r4, #4]
 800e06a:	bf04      	itt	eq
 800e06c:	1949      	addeq	r1, r1, r5
 800e06e:	6021      	streq	r1, [r4, #0]
 800e070:	6054      	str	r4, [r2, #4]
 800e072:	e7ca      	b.n	800e00a <_free_r+0x26>
 800e074:	b003      	add	sp, #12
 800e076:	bd30      	pop	{r4, r5, pc}
 800e078:	20000b38 	.word	0x20000b38

0800e07c <sbrk_aligned>:
 800e07c:	b570      	push	{r4, r5, r6, lr}
 800e07e:	4e0e      	ldr	r6, [pc, #56]	; (800e0b8 <sbrk_aligned+0x3c>)
 800e080:	460c      	mov	r4, r1
 800e082:	6831      	ldr	r1, [r6, #0]
 800e084:	4605      	mov	r5, r0
 800e086:	b911      	cbnz	r1, 800e08e <sbrk_aligned+0x12>
 800e088:	f000 f9e8 	bl	800e45c <_sbrk_r>
 800e08c:	6030      	str	r0, [r6, #0]
 800e08e:	4621      	mov	r1, r4
 800e090:	4628      	mov	r0, r5
 800e092:	f000 f9e3 	bl	800e45c <_sbrk_r>
 800e096:	1c43      	adds	r3, r0, #1
 800e098:	d00a      	beq.n	800e0b0 <sbrk_aligned+0x34>
 800e09a:	1cc4      	adds	r4, r0, #3
 800e09c:	f024 0403 	bic.w	r4, r4, #3
 800e0a0:	42a0      	cmp	r0, r4
 800e0a2:	d007      	beq.n	800e0b4 <sbrk_aligned+0x38>
 800e0a4:	1a21      	subs	r1, r4, r0
 800e0a6:	4628      	mov	r0, r5
 800e0a8:	f000 f9d8 	bl	800e45c <_sbrk_r>
 800e0ac:	3001      	adds	r0, #1
 800e0ae:	d101      	bne.n	800e0b4 <sbrk_aligned+0x38>
 800e0b0:	f04f 34ff 	mov.w	r4, #4294967295
 800e0b4:	4620      	mov	r0, r4
 800e0b6:	bd70      	pop	{r4, r5, r6, pc}
 800e0b8:	20000b3c 	.word	0x20000b3c

0800e0bc <_malloc_r>:
 800e0bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e0c0:	1ccd      	adds	r5, r1, #3
 800e0c2:	f025 0503 	bic.w	r5, r5, #3
 800e0c6:	3508      	adds	r5, #8
 800e0c8:	2d0c      	cmp	r5, #12
 800e0ca:	bf38      	it	cc
 800e0cc:	250c      	movcc	r5, #12
 800e0ce:	2d00      	cmp	r5, #0
 800e0d0:	4607      	mov	r7, r0
 800e0d2:	db01      	blt.n	800e0d8 <_malloc_r+0x1c>
 800e0d4:	42a9      	cmp	r1, r5
 800e0d6:	d905      	bls.n	800e0e4 <_malloc_r+0x28>
 800e0d8:	230c      	movs	r3, #12
 800e0da:	603b      	str	r3, [r7, #0]
 800e0dc:	2600      	movs	r6, #0
 800e0de:	4630      	mov	r0, r6
 800e0e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e0e4:	4e2e      	ldr	r6, [pc, #184]	; (800e1a0 <_malloc_r+0xe4>)
 800e0e6:	f000 fa25 	bl	800e534 <__malloc_lock>
 800e0ea:	6833      	ldr	r3, [r6, #0]
 800e0ec:	461c      	mov	r4, r3
 800e0ee:	bb34      	cbnz	r4, 800e13e <_malloc_r+0x82>
 800e0f0:	4629      	mov	r1, r5
 800e0f2:	4638      	mov	r0, r7
 800e0f4:	f7ff ffc2 	bl	800e07c <sbrk_aligned>
 800e0f8:	1c43      	adds	r3, r0, #1
 800e0fa:	4604      	mov	r4, r0
 800e0fc:	d14d      	bne.n	800e19a <_malloc_r+0xde>
 800e0fe:	6834      	ldr	r4, [r6, #0]
 800e100:	4626      	mov	r6, r4
 800e102:	2e00      	cmp	r6, #0
 800e104:	d140      	bne.n	800e188 <_malloc_r+0xcc>
 800e106:	6823      	ldr	r3, [r4, #0]
 800e108:	4631      	mov	r1, r6
 800e10a:	4638      	mov	r0, r7
 800e10c:	eb04 0803 	add.w	r8, r4, r3
 800e110:	f000 f9a4 	bl	800e45c <_sbrk_r>
 800e114:	4580      	cmp	r8, r0
 800e116:	d13a      	bne.n	800e18e <_malloc_r+0xd2>
 800e118:	6821      	ldr	r1, [r4, #0]
 800e11a:	3503      	adds	r5, #3
 800e11c:	1a6d      	subs	r5, r5, r1
 800e11e:	f025 0503 	bic.w	r5, r5, #3
 800e122:	3508      	adds	r5, #8
 800e124:	2d0c      	cmp	r5, #12
 800e126:	bf38      	it	cc
 800e128:	250c      	movcc	r5, #12
 800e12a:	4629      	mov	r1, r5
 800e12c:	4638      	mov	r0, r7
 800e12e:	f7ff ffa5 	bl	800e07c <sbrk_aligned>
 800e132:	3001      	adds	r0, #1
 800e134:	d02b      	beq.n	800e18e <_malloc_r+0xd2>
 800e136:	6823      	ldr	r3, [r4, #0]
 800e138:	442b      	add	r3, r5
 800e13a:	6023      	str	r3, [r4, #0]
 800e13c:	e00e      	b.n	800e15c <_malloc_r+0xa0>
 800e13e:	6822      	ldr	r2, [r4, #0]
 800e140:	1b52      	subs	r2, r2, r5
 800e142:	d41e      	bmi.n	800e182 <_malloc_r+0xc6>
 800e144:	2a0b      	cmp	r2, #11
 800e146:	d916      	bls.n	800e176 <_malloc_r+0xba>
 800e148:	1961      	adds	r1, r4, r5
 800e14a:	42a3      	cmp	r3, r4
 800e14c:	6025      	str	r5, [r4, #0]
 800e14e:	bf18      	it	ne
 800e150:	6059      	strne	r1, [r3, #4]
 800e152:	6863      	ldr	r3, [r4, #4]
 800e154:	bf08      	it	eq
 800e156:	6031      	streq	r1, [r6, #0]
 800e158:	5162      	str	r2, [r4, r5]
 800e15a:	604b      	str	r3, [r1, #4]
 800e15c:	4638      	mov	r0, r7
 800e15e:	f104 060b 	add.w	r6, r4, #11
 800e162:	f000 f9ed 	bl	800e540 <__malloc_unlock>
 800e166:	f026 0607 	bic.w	r6, r6, #7
 800e16a:	1d23      	adds	r3, r4, #4
 800e16c:	1af2      	subs	r2, r6, r3
 800e16e:	d0b6      	beq.n	800e0de <_malloc_r+0x22>
 800e170:	1b9b      	subs	r3, r3, r6
 800e172:	50a3      	str	r3, [r4, r2]
 800e174:	e7b3      	b.n	800e0de <_malloc_r+0x22>
 800e176:	6862      	ldr	r2, [r4, #4]
 800e178:	42a3      	cmp	r3, r4
 800e17a:	bf0c      	ite	eq
 800e17c:	6032      	streq	r2, [r6, #0]
 800e17e:	605a      	strne	r2, [r3, #4]
 800e180:	e7ec      	b.n	800e15c <_malloc_r+0xa0>
 800e182:	4623      	mov	r3, r4
 800e184:	6864      	ldr	r4, [r4, #4]
 800e186:	e7b2      	b.n	800e0ee <_malloc_r+0x32>
 800e188:	4634      	mov	r4, r6
 800e18a:	6876      	ldr	r6, [r6, #4]
 800e18c:	e7b9      	b.n	800e102 <_malloc_r+0x46>
 800e18e:	230c      	movs	r3, #12
 800e190:	603b      	str	r3, [r7, #0]
 800e192:	4638      	mov	r0, r7
 800e194:	f000 f9d4 	bl	800e540 <__malloc_unlock>
 800e198:	e7a1      	b.n	800e0de <_malloc_r+0x22>
 800e19a:	6025      	str	r5, [r4, #0]
 800e19c:	e7de      	b.n	800e15c <_malloc_r+0xa0>
 800e19e:	bf00      	nop
 800e1a0:	20000b38 	.word	0x20000b38

0800e1a4 <__ssputs_r>:
 800e1a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e1a8:	688e      	ldr	r6, [r1, #8]
 800e1aa:	429e      	cmp	r6, r3
 800e1ac:	4682      	mov	sl, r0
 800e1ae:	460c      	mov	r4, r1
 800e1b0:	4690      	mov	r8, r2
 800e1b2:	461f      	mov	r7, r3
 800e1b4:	d838      	bhi.n	800e228 <__ssputs_r+0x84>
 800e1b6:	898a      	ldrh	r2, [r1, #12]
 800e1b8:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800e1bc:	d032      	beq.n	800e224 <__ssputs_r+0x80>
 800e1be:	6825      	ldr	r5, [r4, #0]
 800e1c0:	6909      	ldr	r1, [r1, #16]
 800e1c2:	eba5 0901 	sub.w	r9, r5, r1
 800e1c6:	6965      	ldr	r5, [r4, #20]
 800e1c8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800e1cc:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800e1d0:	3301      	adds	r3, #1
 800e1d2:	444b      	add	r3, r9
 800e1d4:	106d      	asrs	r5, r5, #1
 800e1d6:	429d      	cmp	r5, r3
 800e1d8:	bf38      	it	cc
 800e1da:	461d      	movcc	r5, r3
 800e1dc:	0553      	lsls	r3, r2, #21
 800e1de:	d531      	bpl.n	800e244 <__ssputs_r+0xa0>
 800e1e0:	4629      	mov	r1, r5
 800e1e2:	f7ff ff6b 	bl	800e0bc <_malloc_r>
 800e1e6:	4606      	mov	r6, r0
 800e1e8:	b950      	cbnz	r0, 800e200 <__ssputs_r+0x5c>
 800e1ea:	230c      	movs	r3, #12
 800e1ec:	f8ca 3000 	str.w	r3, [sl]
 800e1f0:	89a3      	ldrh	r3, [r4, #12]
 800e1f2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e1f6:	81a3      	strh	r3, [r4, #12]
 800e1f8:	f04f 30ff 	mov.w	r0, #4294967295
 800e1fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e200:	6921      	ldr	r1, [r4, #16]
 800e202:	464a      	mov	r2, r9
 800e204:	f7ff fb46 	bl	800d894 <memcpy>
 800e208:	89a3      	ldrh	r3, [r4, #12]
 800e20a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800e20e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800e212:	81a3      	strh	r3, [r4, #12]
 800e214:	6126      	str	r6, [r4, #16]
 800e216:	6165      	str	r5, [r4, #20]
 800e218:	444e      	add	r6, r9
 800e21a:	eba5 0509 	sub.w	r5, r5, r9
 800e21e:	6026      	str	r6, [r4, #0]
 800e220:	60a5      	str	r5, [r4, #8]
 800e222:	463e      	mov	r6, r7
 800e224:	42be      	cmp	r6, r7
 800e226:	d900      	bls.n	800e22a <__ssputs_r+0x86>
 800e228:	463e      	mov	r6, r7
 800e22a:	6820      	ldr	r0, [r4, #0]
 800e22c:	4632      	mov	r2, r6
 800e22e:	4641      	mov	r1, r8
 800e230:	f000 f966 	bl	800e500 <memmove>
 800e234:	68a3      	ldr	r3, [r4, #8]
 800e236:	1b9b      	subs	r3, r3, r6
 800e238:	60a3      	str	r3, [r4, #8]
 800e23a:	6823      	ldr	r3, [r4, #0]
 800e23c:	4433      	add	r3, r6
 800e23e:	6023      	str	r3, [r4, #0]
 800e240:	2000      	movs	r0, #0
 800e242:	e7db      	b.n	800e1fc <__ssputs_r+0x58>
 800e244:	462a      	mov	r2, r5
 800e246:	f000 f981 	bl	800e54c <_realloc_r>
 800e24a:	4606      	mov	r6, r0
 800e24c:	2800      	cmp	r0, #0
 800e24e:	d1e1      	bne.n	800e214 <__ssputs_r+0x70>
 800e250:	6921      	ldr	r1, [r4, #16]
 800e252:	4650      	mov	r0, sl
 800e254:	f7ff fec6 	bl	800dfe4 <_free_r>
 800e258:	e7c7      	b.n	800e1ea <__ssputs_r+0x46>
	...

0800e25c <_svfiprintf_r>:
 800e25c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e260:	4698      	mov	r8, r3
 800e262:	898b      	ldrh	r3, [r1, #12]
 800e264:	061b      	lsls	r3, r3, #24
 800e266:	b09d      	sub	sp, #116	; 0x74
 800e268:	4607      	mov	r7, r0
 800e26a:	460d      	mov	r5, r1
 800e26c:	4614      	mov	r4, r2
 800e26e:	d50e      	bpl.n	800e28e <_svfiprintf_r+0x32>
 800e270:	690b      	ldr	r3, [r1, #16]
 800e272:	b963      	cbnz	r3, 800e28e <_svfiprintf_r+0x32>
 800e274:	2140      	movs	r1, #64	; 0x40
 800e276:	f7ff ff21 	bl	800e0bc <_malloc_r>
 800e27a:	6028      	str	r0, [r5, #0]
 800e27c:	6128      	str	r0, [r5, #16]
 800e27e:	b920      	cbnz	r0, 800e28a <_svfiprintf_r+0x2e>
 800e280:	230c      	movs	r3, #12
 800e282:	603b      	str	r3, [r7, #0]
 800e284:	f04f 30ff 	mov.w	r0, #4294967295
 800e288:	e0d1      	b.n	800e42e <_svfiprintf_r+0x1d2>
 800e28a:	2340      	movs	r3, #64	; 0x40
 800e28c:	616b      	str	r3, [r5, #20]
 800e28e:	2300      	movs	r3, #0
 800e290:	9309      	str	r3, [sp, #36]	; 0x24
 800e292:	2320      	movs	r3, #32
 800e294:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e298:	f8cd 800c 	str.w	r8, [sp, #12]
 800e29c:	2330      	movs	r3, #48	; 0x30
 800e29e:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 800e448 <_svfiprintf_r+0x1ec>
 800e2a2:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800e2a6:	f04f 0901 	mov.w	r9, #1
 800e2aa:	4623      	mov	r3, r4
 800e2ac:	469a      	mov	sl, r3
 800e2ae:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e2b2:	b10a      	cbz	r2, 800e2b8 <_svfiprintf_r+0x5c>
 800e2b4:	2a25      	cmp	r2, #37	; 0x25
 800e2b6:	d1f9      	bne.n	800e2ac <_svfiprintf_r+0x50>
 800e2b8:	ebba 0b04 	subs.w	fp, sl, r4
 800e2bc:	d00b      	beq.n	800e2d6 <_svfiprintf_r+0x7a>
 800e2be:	465b      	mov	r3, fp
 800e2c0:	4622      	mov	r2, r4
 800e2c2:	4629      	mov	r1, r5
 800e2c4:	4638      	mov	r0, r7
 800e2c6:	f7ff ff6d 	bl	800e1a4 <__ssputs_r>
 800e2ca:	3001      	adds	r0, #1
 800e2cc:	f000 80aa 	beq.w	800e424 <_svfiprintf_r+0x1c8>
 800e2d0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e2d2:	445a      	add	r2, fp
 800e2d4:	9209      	str	r2, [sp, #36]	; 0x24
 800e2d6:	f89a 3000 	ldrb.w	r3, [sl]
 800e2da:	2b00      	cmp	r3, #0
 800e2dc:	f000 80a2 	beq.w	800e424 <_svfiprintf_r+0x1c8>
 800e2e0:	2300      	movs	r3, #0
 800e2e2:	f04f 32ff 	mov.w	r2, #4294967295
 800e2e6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800e2ea:	f10a 0a01 	add.w	sl, sl, #1
 800e2ee:	9304      	str	r3, [sp, #16]
 800e2f0:	9307      	str	r3, [sp, #28]
 800e2f2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800e2f6:	931a      	str	r3, [sp, #104]	; 0x68
 800e2f8:	4654      	mov	r4, sl
 800e2fa:	2205      	movs	r2, #5
 800e2fc:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e300:	4851      	ldr	r0, [pc, #324]	; (800e448 <_svfiprintf_r+0x1ec>)
 800e302:	f7f1 ff8d 	bl	8000220 <memchr>
 800e306:	9a04      	ldr	r2, [sp, #16]
 800e308:	b9d8      	cbnz	r0, 800e342 <_svfiprintf_r+0xe6>
 800e30a:	06d0      	lsls	r0, r2, #27
 800e30c:	bf44      	itt	mi
 800e30e:	2320      	movmi	r3, #32
 800e310:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e314:	0711      	lsls	r1, r2, #28
 800e316:	bf44      	itt	mi
 800e318:	232b      	movmi	r3, #43	; 0x2b
 800e31a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e31e:	f89a 3000 	ldrb.w	r3, [sl]
 800e322:	2b2a      	cmp	r3, #42	; 0x2a
 800e324:	d015      	beq.n	800e352 <_svfiprintf_r+0xf6>
 800e326:	9a07      	ldr	r2, [sp, #28]
 800e328:	4654      	mov	r4, sl
 800e32a:	2000      	movs	r0, #0
 800e32c:	f04f 0c0a 	mov.w	ip, #10
 800e330:	4621      	mov	r1, r4
 800e332:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e336:	3b30      	subs	r3, #48	; 0x30
 800e338:	2b09      	cmp	r3, #9
 800e33a:	d94e      	bls.n	800e3da <_svfiprintf_r+0x17e>
 800e33c:	b1b0      	cbz	r0, 800e36c <_svfiprintf_r+0x110>
 800e33e:	9207      	str	r2, [sp, #28]
 800e340:	e014      	b.n	800e36c <_svfiprintf_r+0x110>
 800e342:	eba0 0308 	sub.w	r3, r0, r8
 800e346:	fa09 f303 	lsl.w	r3, r9, r3
 800e34a:	4313      	orrs	r3, r2
 800e34c:	9304      	str	r3, [sp, #16]
 800e34e:	46a2      	mov	sl, r4
 800e350:	e7d2      	b.n	800e2f8 <_svfiprintf_r+0x9c>
 800e352:	9b03      	ldr	r3, [sp, #12]
 800e354:	1d19      	adds	r1, r3, #4
 800e356:	681b      	ldr	r3, [r3, #0]
 800e358:	9103      	str	r1, [sp, #12]
 800e35a:	2b00      	cmp	r3, #0
 800e35c:	bfbb      	ittet	lt
 800e35e:	425b      	neglt	r3, r3
 800e360:	f042 0202 	orrlt.w	r2, r2, #2
 800e364:	9307      	strge	r3, [sp, #28]
 800e366:	9307      	strlt	r3, [sp, #28]
 800e368:	bfb8      	it	lt
 800e36a:	9204      	strlt	r2, [sp, #16]
 800e36c:	7823      	ldrb	r3, [r4, #0]
 800e36e:	2b2e      	cmp	r3, #46	; 0x2e
 800e370:	d10c      	bne.n	800e38c <_svfiprintf_r+0x130>
 800e372:	7863      	ldrb	r3, [r4, #1]
 800e374:	2b2a      	cmp	r3, #42	; 0x2a
 800e376:	d135      	bne.n	800e3e4 <_svfiprintf_r+0x188>
 800e378:	9b03      	ldr	r3, [sp, #12]
 800e37a:	1d1a      	adds	r2, r3, #4
 800e37c:	681b      	ldr	r3, [r3, #0]
 800e37e:	9203      	str	r2, [sp, #12]
 800e380:	2b00      	cmp	r3, #0
 800e382:	bfb8      	it	lt
 800e384:	f04f 33ff 	movlt.w	r3, #4294967295
 800e388:	3402      	adds	r4, #2
 800e38a:	9305      	str	r3, [sp, #20]
 800e38c:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800e458 <_svfiprintf_r+0x1fc>
 800e390:	7821      	ldrb	r1, [r4, #0]
 800e392:	2203      	movs	r2, #3
 800e394:	4650      	mov	r0, sl
 800e396:	f7f1 ff43 	bl	8000220 <memchr>
 800e39a:	b140      	cbz	r0, 800e3ae <_svfiprintf_r+0x152>
 800e39c:	2340      	movs	r3, #64	; 0x40
 800e39e:	eba0 000a 	sub.w	r0, r0, sl
 800e3a2:	fa03 f000 	lsl.w	r0, r3, r0
 800e3a6:	9b04      	ldr	r3, [sp, #16]
 800e3a8:	4303      	orrs	r3, r0
 800e3aa:	3401      	adds	r4, #1
 800e3ac:	9304      	str	r3, [sp, #16]
 800e3ae:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e3b2:	4826      	ldr	r0, [pc, #152]	; (800e44c <_svfiprintf_r+0x1f0>)
 800e3b4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800e3b8:	2206      	movs	r2, #6
 800e3ba:	f7f1 ff31 	bl	8000220 <memchr>
 800e3be:	2800      	cmp	r0, #0
 800e3c0:	d038      	beq.n	800e434 <_svfiprintf_r+0x1d8>
 800e3c2:	4b23      	ldr	r3, [pc, #140]	; (800e450 <_svfiprintf_r+0x1f4>)
 800e3c4:	bb1b      	cbnz	r3, 800e40e <_svfiprintf_r+0x1b2>
 800e3c6:	9b03      	ldr	r3, [sp, #12]
 800e3c8:	3307      	adds	r3, #7
 800e3ca:	f023 0307 	bic.w	r3, r3, #7
 800e3ce:	3308      	adds	r3, #8
 800e3d0:	9303      	str	r3, [sp, #12]
 800e3d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e3d4:	4433      	add	r3, r6
 800e3d6:	9309      	str	r3, [sp, #36]	; 0x24
 800e3d8:	e767      	b.n	800e2aa <_svfiprintf_r+0x4e>
 800e3da:	fb0c 3202 	mla	r2, ip, r2, r3
 800e3de:	460c      	mov	r4, r1
 800e3e0:	2001      	movs	r0, #1
 800e3e2:	e7a5      	b.n	800e330 <_svfiprintf_r+0xd4>
 800e3e4:	2300      	movs	r3, #0
 800e3e6:	3401      	adds	r4, #1
 800e3e8:	9305      	str	r3, [sp, #20]
 800e3ea:	4619      	mov	r1, r3
 800e3ec:	f04f 0c0a 	mov.w	ip, #10
 800e3f0:	4620      	mov	r0, r4
 800e3f2:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e3f6:	3a30      	subs	r2, #48	; 0x30
 800e3f8:	2a09      	cmp	r2, #9
 800e3fa:	d903      	bls.n	800e404 <_svfiprintf_r+0x1a8>
 800e3fc:	2b00      	cmp	r3, #0
 800e3fe:	d0c5      	beq.n	800e38c <_svfiprintf_r+0x130>
 800e400:	9105      	str	r1, [sp, #20]
 800e402:	e7c3      	b.n	800e38c <_svfiprintf_r+0x130>
 800e404:	fb0c 2101 	mla	r1, ip, r1, r2
 800e408:	4604      	mov	r4, r0
 800e40a:	2301      	movs	r3, #1
 800e40c:	e7f0      	b.n	800e3f0 <_svfiprintf_r+0x194>
 800e40e:	ab03      	add	r3, sp, #12
 800e410:	9300      	str	r3, [sp, #0]
 800e412:	462a      	mov	r2, r5
 800e414:	4b0f      	ldr	r3, [pc, #60]	; (800e454 <_svfiprintf_r+0x1f8>)
 800e416:	a904      	add	r1, sp, #16
 800e418:	4638      	mov	r0, r7
 800e41a:	f7fd ffcb 	bl	800c3b4 <_printf_float>
 800e41e:	1c42      	adds	r2, r0, #1
 800e420:	4606      	mov	r6, r0
 800e422:	d1d6      	bne.n	800e3d2 <_svfiprintf_r+0x176>
 800e424:	89ab      	ldrh	r3, [r5, #12]
 800e426:	065b      	lsls	r3, r3, #25
 800e428:	f53f af2c 	bmi.w	800e284 <_svfiprintf_r+0x28>
 800e42c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e42e:	b01d      	add	sp, #116	; 0x74
 800e430:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e434:	ab03      	add	r3, sp, #12
 800e436:	9300      	str	r3, [sp, #0]
 800e438:	462a      	mov	r2, r5
 800e43a:	4b06      	ldr	r3, [pc, #24]	; (800e454 <_svfiprintf_r+0x1f8>)
 800e43c:	a904      	add	r1, sp, #16
 800e43e:	4638      	mov	r0, r7
 800e440:	f7fe fa5c 	bl	800c8fc <_printf_i>
 800e444:	e7eb      	b.n	800e41e <_svfiprintf_r+0x1c2>
 800e446:	bf00      	nop
 800e448:	0801086c 	.word	0x0801086c
 800e44c:	08010876 	.word	0x08010876
 800e450:	0800c3b5 	.word	0x0800c3b5
 800e454:	0800e1a5 	.word	0x0800e1a5
 800e458:	08010872 	.word	0x08010872

0800e45c <_sbrk_r>:
 800e45c:	b538      	push	{r3, r4, r5, lr}
 800e45e:	4d06      	ldr	r5, [pc, #24]	; (800e478 <_sbrk_r+0x1c>)
 800e460:	2300      	movs	r3, #0
 800e462:	4604      	mov	r4, r0
 800e464:	4608      	mov	r0, r1
 800e466:	602b      	str	r3, [r5, #0]
 800e468:	f7f8 f934 	bl	80066d4 <_sbrk>
 800e46c:	1c43      	adds	r3, r0, #1
 800e46e:	d102      	bne.n	800e476 <_sbrk_r+0x1a>
 800e470:	682b      	ldr	r3, [r5, #0]
 800e472:	b103      	cbz	r3, 800e476 <_sbrk_r+0x1a>
 800e474:	6023      	str	r3, [r4, #0]
 800e476:	bd38      	pop	{r3, r4, r5, pc}
 800e478:	20000b40 	.word	0x20000b40

0800e47c <__assert_func>:
 800e47c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e47e:	4614      	mov	r4, r2
 800e480:	461a      	mov	r2, r3
 800e482:	4b09      	ldr	r3, [pc, #36]	; (800e4a8 <__assert_func+0x2c>)
 800e484:	681b      	ldr	r3, [r3, #0]
 800e486:	4605      	mov	r5, r0
 800e488:	68d8      	ldr	r0, [r3, #12]
 800e48a:	b14c      	cbz	r4, 800e4a0 <__assert_func+0x24>
 800e48c:	4b07      	ldr	r3, [pc, #28]	; (800e4ac <__assert_func+0x30>)
 800e48e:	9100      	str	r1, [sp, #0]
 800e490:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800e494:	4906      	ldr	r1, [pc, #24]	; (800e4b0 <__assert_func+0x34>)
 800e496:	462b      	mov	r3, r5
 800e498:	f000 f80e 	bl	800e4b8 <fiprintf>
 800e49c:	f000 faac 	bl	800e9f8 <abort>
 800e4a0:	4b04      	ldr	r3, [pc, #16]	; (800e4b4 <__assert_func+0x38>)
 800e4a2:	461c      	mov	r4, r3
 800e4a4:	e7f3      	b.n	800e48e <__assert_func+0x12>
 800e4a6:	bf00      	nop
 800e4a8:	200000a0 	.word	0x200000a0
 800e4ac:	0801087d 	.word	0x0801087d
 800e4b0:	0801088a 	.word	0x0801088a
 800e4b4:	080108b8 	.word	0x080108b8

0800e4b8 <fiprintf>:
 800e4b8:	b40e      	push	{r1, r2, r3}
 800e4ba:	b503      	push	{r0, r1, lr}
 800e4bc:	4601      	mov	r1, r0
 800e4be:	ab03      	add	r3, sp, #12
 800e4c0:	4805      	ldr	r0, [pc, #20]	; (800e4d8 <fiprintf+0x20>)
 800e4c2:	f853 2b04 	ldr.w	r2, [r3], #4
 800e4c6:	6800      	ldr	r0, [r0, #0]
 800e4c8:	9301      	str	r3, [sp, #4]
 800e4ca:	f000 f897 	bl	800e5fc <_vfiprintf_r>
 800e4ce:	b002      	add	sp, #8
 800e4d0:	f85d eb04 	ldr.w	lr, [sp], #4
 800e4d4:	b003      	add	sp, #12
 800e4d6:	4770      	bx	lr
 800e4d8:	200000a0 	.word	0x200000a0

0800e4dc <__ascii_mbtowc>:
 800e4dc:	b082      	sub	sp, #8
 800e4de:	b901      	cbnz	r1, 800e4e2 <__ascii_mbtowc+0x6>
 800e4e0:	a901      	add	r1, sp, #4
 800e4e2:	b142      	cbz	r2, 800e4f6 <__ascii_mbtowc+0x1a>
 800e4e4:	b14b      	cbz	r3, 800e4fa <__ascii_mbtowc+0x1e>
 800e4e6:	7813      	ldrb	r3, [r2, #0]
 800e4e8:	600b      	str	r3, [r1, #0]
 800e4ea:	7812      	ldrb	r2, [r2, #0]
 800e4ec:	1e10      	subs	r0, r2, #0
 800e4ee:	bf18      	it	ne
 800e4f0:	2001      	movne	r0, #1
 800e4f2:	b002      	add	sp, #8
 800e4f4:	4770      	bx	lr
 800e4f6:	4610      	mov	r0, r2
 800e4f8:	e7fb      	b.n	800e4f2 <__ascii_mbtowc+0x16>
 800e4fa:	f06f 0001 	mvn.w	r0, #1
 800e4fe:	e7f8      	b.n	800e4f2 <__ascii_mbtowc+0x16>

0800e500 <memmove>:
 800e500:	4288      	cmp	r0, r1
 800e502:	b510      	push	{r4, lr}
 800e504:	eb01 0402 	add.w	r4, r1, r2
 800e508:	d902      	bls.n	800e510 <memmove+0x10>
 800e50a:	4284      	cmp	r4, r0
 800e50c:	4623      	mov	r3, r4
 800e50e:	d807      	bhi.n	800e520 <memmove+0x20>
 800e510:	1e43      	subs	r3, r0, #1
 800e512:	42a1      	cmp	r1, r4
 800e514:	d008      	beq.n	800e528 <memmove+0x28>
 800e516:	f811 2b01 	ldrb.w	r2, [r1], #1
 800e51a:	f803 2f01 	strb.w	r2, [r3, #1]!
 800e51e:	e7f8      	b.n	800e512 <memmove+0x12>
 800e520:	4402      	add	r2, r0
 800e522:	4601      	mov	r1, r0
 800e524:	428a      	cmp	r2, r1
 800e526:	d100      	bne.n	800e52a <memmove+0x2a>
 800e528:	bd10      	pop	{r4, pc}
 800e52a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800e52e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800e532:	e7f7      	b.n	800e524 <memmove+0x24>

0800e534 <__malloc_lock>:
 800e534:	4801      	ldr	r0, [pc, #4]	; (800e53c <__malloc_lock+0x8>)
 800e536:	f000 bc1f 	b.w	800ed78 <__retarget_lock_acquire_recursive>
 800e53a:	bf00      	nop
 800e53c:	20000b44 	.word	0x20000b44

0800e540 <__malloc_unlock>:
 800e540:	4801      	ldr	r0, [pc, #4]	; (800e548 <__malloc_unlock+0x8>)
 800e542:	f000 bc1a 	b.w	800ed7a <__retarget_lock_release_recursive>
 800e546:	bf00      	nop
 800e548:	20000b44 	.word	0x20000b44

0800e54c <_realloc_r>:
 800e54c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e550:	4680      	mov	r8, r0
 800e552:	4614      	mov	r4, r2
 800e554:	460e      	mov	r6, r1
 800e556:	b921      	cbnz	r1, 800e562 <_realloc_r+0x16>
 800e558:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800e55c:	4611      	mov	r1, r2
 800e55e:	f7ff bdad 	b.w	800e0bc <_malloc_r>
 800e562:	b92a      	cbnz	r2, 800e570 <_realloc_r+0x24>
 800e564:	f7ff fd3e 	bl	800dfe4 <_free_r>
 800e568:	4625      	mov	r5, r4
 800e56a:	4628      	mov	r0, r5
 800e56c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e570:	f000 fc6a 	bl	800ee48 <_malloc_usable_size_r>
 800e574:	4284      	cmp	r4, r0
 800e576:	4607      	mov	r7, r0
 800e578:	d802      	bhi.n	800e580 <_realloc_r+0x34>
 800e57a:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800e57e:	d812      	bhi.n	800e5a6 <_realloc_r+0x5a>
 800e580:	4621      	mov	r1, r4
 800e582:	4640      	mov	r0, r8
 800e584:	f7ff fd9a 	bl	800e0bc <_malloc_r>
 800e588:	4605      	mov	r5, r0
 800e58a:	2800      	cmp	r0, #0
 800e58c:	d0ed      	beq.n	800e56a <_realloc_r+0x1e>
 800e58e:	42bc      	cmp	r4, r7
 800e590:	4622      	mov	r2, r4
 800e592:	4631      	mov	r1, r6
 800e594:	bf28      	it	cs
 800e596:	463a      	movcs	r2, r7
 800e598:	f7ff f97c 	bl	800d894 <memcpy>
 800e59c:	4631      	mov	r1, r6
 800e59e:	4640      	mov	r0, r8
 800e5a0:	f7ff fd20 	bl	800dfe4 <_free_r>
 800e5a4:	e7e1      	b.n	800e56a <_realloc_r+0x1e>
 800e5a6:	4635      	mov	r5, r6
 800e5a8:	e7df      	b.n	800e56a <_realloc_r+0x1e>

0800e5aa <__sfputc_r>:
 800e5aa:	6893      	ldr	r3, [r2, #8]
 800e5ac:	3b01      	subs	r3, #1
 800e5ae:	2b00      	cmp	r3, #0
 800e5b0:	b410      	push	{r4}
 800e5b2:	6093      	str	r3, [r2, #8]
 800e5b4:	da08      	bge.n	800e5c8 <__sfputc_r+0x1e>
 800e5b6:	6994      	ldr	r4, [r2, #24]
 800e5b8:	42a3      	cmp	r3, r4
 800e5ba:	db01      	blt.n	800e5c0 <__sfputc_r+0x16>
 800e5bc:	290a      	cmp	r1, #10
 800e5be:	d103      	bne.n	800e5c8 <__sfputc_r+0x1e>
 800e5c0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e5c4:	f000 b94a 	b.w	800e85c <__swbuf_r>
 800e5c8:	6813      	ldr	r3, [r2, #0]
 800e5ca:	1c58      	adds	r0, r3, #1
 800e5cc:	6010      	str	r0, [r2, #0]
 800e5ce:	7019      	strb	r1, [r3, #0]
 800e5d0:	4608      	mov	r0, r1
 800e5d2:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e5d6:	4770      	bx	lr

0800e5d8 <__sfputs_r>:
 800e5d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e5da:	4606      	mov	r6, r0
 800e5dc:	460f      	mov	r7, r1
 800e5de:	4614      	mov	r4, r2
 800e5e0:	18d5      	adds	r5, r2, r3
 800e5e2:	42ac      	cmp	r4, r5
 800e5e4:	d101      	bne.n	800e5ea <__sfputs_r+0x12>
 800e5e6:	2000      	movs	r0, #0
 800e5e8:	e007      	b.n	800e5fa <__sfputs_r+0x22>
 800e5ea:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e5ee:	463a      	mov	r2, r7
 800e5f0:	4630      	mov	r0, r6
 800e5f2:	f7ff ffda 	bl	800e5aa <__sfputc_r>
 800e5f6:	1c43      	adds	r3, r0, #1
 800e5f8:	d1f3      	bne.n	800e5e2 <__sfputs_r+0xa>
 800e5fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e5fc <_vfiprintf_r>:
 800e5fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e600:	460d      	mov	r5, r1
 800e602:	b09d      	sub	sp, #116	; 0x74
 800e604:	4614      	mov	r4, r2
 800e606:	4698      	mov	r8, r3
 800e608:	4606      	mov	r6, r0
 800e60a:	b118      	cbz	r0, 800e614 <_vfiprintf_r+0x18>
 800e60c:	6983      	ldr	r3, [r0, #24]
 800e60e:	b90b      	cbnz	r3, 800e614 <_vfiprintf_r+0x18>
 800e610:	f000 fb14 	bl	800ec3c <__sinit>
 800e614:	4b89      	ldr	r3, [pc, #548]	; (800e83c <_vfiprintf_r+0x240>)
 800e616:	429d      	cmp	r5, r3
 800e618:	d11b      	bne.n	800e652 <_vfiprintf_r+0x56>
 800e61a:	6875      	ldr	r5, [r6, #4]
 800e61c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800e61e:	07d9      	lsls	r1, r3, #31
 800e620:	d405      	bmi.n	800e62e <_vfiprintf_r+0x32>
 800e622:	89ab      	ldrh	r3, [r5, #12]
 800e624:	059a      	lsls	r2, r3, #22
 800e626:	d402      	bmi.n	800e62e <_vfiprintf_r+0x32>
 800e628:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800e62a:	f000 fba5 	bl	800ed78 <__retarget_lock_acquire_recursive>
 800e62e:	89ab      	ldrh	r3, [r5, #12]
 800e630:	071b      	lsls	r3, r3, #28
 800e632:	d501      	bpl.n	800e638 <_vfiprintf_r+0x3c>
 800e634:	692b      	ldr	r3, [r5, #16]
 800e636:	b9eb      	cbnz	r3, 800e674 <_vfiprintf_r+0x78>
 800e638:	4629      	mov	r1, r5
 800e63a:	4630      	mov	r0, r6
 800e63c:	f000 f96e 	bl	800e91c <__swsetup_r>
 800e640:	b1c0      	cbz	r0, 800e674 <_vfiprintf_r+0x78>
 800e642:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800e644:	07dc      	lsls	r4, r3, #31
 800e646:	d50e      	bpl.n	800e666 <_vfiprintf_r+0x6a>
 800e648:	f04f 30ff 	mov.w	r0, #4294967295
 800e64c:	b01d      	add	sp, #116	; 0x74
 800e64e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e652:	4b7b      	ldr	r3, [pc, #492]	; (800e840 <_vfiprintf_r+0x244>)
 800e654:	429d      	cmp	r5, r3
 800e656:	d101      	bne.n	800e65c <_vfiprintf_r+0x60>
 800e658:	68b5      	ldr	r5, [r6, #8]
 800e65a:	e7df      	b.n	800e61c <_vfiprintf_r+0x20>
 800e65c:	4b79      	ldr	r3, [pc, #484]	; (800e844 <_vfiprintf_r+0x248>)
 800e65e:	429d      	cmp	r5, r3
 800e660:	bf08      	it	eq
 800e662:	68f5      	ldreq	r5, [r6, #12]
 800e664:	e7da      	b.n	800e61c <_vfiprintf_r+0x20>
 800e666:	89ab      	ldrh	r3, [r5, #12]
 800e668:	0598      	lsls	r0, r3, #22
 800e66a:	d4ed      	bmi.n	800e648 <_vfiprintf_r+0x4c>
 800e66c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800e66e:	f000 fb84 	bl	800ed7a <__retarget_lock_release_recursive>
 800e672:	e7e9      	b.n	800e648 <_vfiprintf_r+0x4c>
 800e674:	2300      	movs	r3, #0
 800e676:	9309      	str	r3, [sp, #36]	; 0x24
 800e678:	2320      	movs	r3, #32
 800e67a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e67e:	f8cd 800c 	str.w	r8, [sp, #12]
 800e682:	2330      	movs	r3, #48	; 0x30
 800e684:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800e848 <_vfiprintf_r+0x24c>
 800e688:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800e68c:	f04f 0901 	mov.w	r9, #1
 800e690:	4623      	mov	r3, r4
 800e692:	469a      	mov	sl, r3
 800e694:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e698:	b10a      	cbz	r2, 800e69e <_vfiprintf_r+0xa2>
 800e69a:	2a25      	cmp	r2, #37	; 0x25
 800e69c:	d1f9      	bne.n	800e692 <_vfiprintf_r+0x96>
 800e69e:	ebba 0b04 	subs.w	fp, sl, r4
 800e6a2:	d00b      	beq.n	800e6bc <_vfiprintf_r+0xc0>
 800e6a4:	465b      	mov	r3, fp
 800e6a6:	4622      	mov	r2, r4
 800e6a8:	4629      	mov	r1, r5
 800e6aa:	4630      	mov	r0, r6
 800e6ac:	f7ff ff94 	bl	800e5d8 <__sfputs_r>
 800e6b0:	3001      	adds	r0, #1
 800e6b2:	f000 80aa 	beq.w	800e80a <_vfiprintf_r+0x20e>
 800e6b6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e6b8:	445a      	add	r2, fp
 800e6ba:	9209      	str	r2, [sp, #36]	; 0x24
 800e6bc:	f89a 3000 	ldrb.w	r3, [sl]
 800e6c0:	2b00      	cmp	r3, #0
 800e6c2:	f000 80a2 	beq.w	800e80a <_vfiprintf_r+0x20e>
 800e6c6:	2300      	movs	r3, #0
 800e6c8:	f04f 32ff 	mov.w	r2, #4294967295
 800e6cc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800e6d0:	f10a 0a01 	add.w	sl, sl, #1
 800e6d4:	9304      	str	r3, [sp, #16]
 800e6d6:	9307      	str	r3, [sp, #28]
 800e6d8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800e6dc:	931a      	str	r3, [sp, #104]	; 0x68
 800e6de:	4654      	mov	r4, sl
 800e6e0:	2205      	movs	r2, #5
 800e6e2:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e6e6:	4858      	ldr	r0, [pc, #352]	; (800e848 <_vfiprintf_r+0x24c>)
 800e6e8:	f7f1 fd9a 	bl	8000220 <memchr>
 800e6ec:	9a04      	ldr	r2, [sp, #16]
 800e6ee:	b9d8      	cbnz	r0, 800e728 <_vfiprintf_r+0x12c>
 800e6f0:	06d1      	lsls	r1, r2, #27
 800e6f2:	bf44      	itt	mi
 800e6f4:	2320      	movmi	r3, #32
 800e6f6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e6fa:	0713      	lsls	r3, r2, #28
 800e6fc:	bf44      	itt	mi
 800e6fe:	232b      	movmi	r3, #43	; 0x2b
 800e700:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e704:	f89a 3000 	ldrb.w	r3, [sl]
 800e708:	2b2a      	cmp	r3, #42	; 0x2a
 800e70a:	d015      	beq.n	800e738 <_vfiprintf_r+0x13c>
 800e70c:	9a07      	ldr	r2, [sp, #28]
 800e70e:	4654      	mov	r4, sl
 800e710:	2000      	movs	r0, #0
 800e712:	f04f 0c0a 	mov.w	ip, #10
 800e716:	4621      	mov	r1, r4
 800e718:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e71c:	3b30      	subs	r3, #48	; 0x30
 800e71e:	2b09      	cmp	r3, #9
 800e720:	d94e      	bls.n	800e7c0 <_vfiprintf_r+0x1c4>
 800e722:	b1b0      	cbz	r0, 800e752 <_vfiprintf_r+0x156>
 800e724:	9207      	str	r2, [sp, #28]
 800e726:	e014      	b.n	800e752 <_vfiprintf_r+0x156>
 800e728:	eba0 0308 	sub.w	r3, r0, r8
 800e72c:	fa09 f303 	lsl.w	r3, r9, r3
 800e730:	4313      	orrs	r3, r2
 800e732:	9304      	str	r3, [sp, #16]
 800e734:	46a2      	mov	sl, r4
 800e736:	e7d2      	b.n	800e6de <_vfiprintf_r+0xe2>
 800e738:	9b03      	ldr	r3, [sp, #12]
 800e73a:	1d19      	adds	r1, r3, #4
 800e73c:	681b      	ldr	r3, [r3, #0]
 800e73e:	9103      	str	r1, [sp, #12]
 800e740:	2b00      	cmp	r3, #0
 800e742:	bfbb      	ittet	lt
 800e744:	425b      	neglt	r3, r3
 800e746:	f042 0202 	orrlt.w	r2, r2, #2
 800e74a:	9307      	strge	r3, [sp, #28]
 800e74c:	9307      	strlt	r3, [sp, #28]
 800e74e:	bfb8      	it	lt
 800e750:	9204      	strlt	r2, [sp, #16]
 800e752:	7823      	ldrb	r3, [r4, #0]
 800e754:	2b2e      	cmp	r3, #46	; 0x2e
 800e756:	d10c      	bne.n	800e772 <_vfiprintf_r+0x176>
 800e758:	7863      	ldrb	r3, [r4, #1]
 800e75a:	2b2a      	cmp	r3, #42	; 0x2a
 800e75c:	d135      	bne.n	800e7ca <_vfiprintf_r+0x1ce>
 800e75e:	9b03      	ldr	r3, [sp, #12]
 800e760:	1d1a      	adds	r2, r3, #4
 800e762:	681b      	ldr	r3, [r3, #0]
 800e764:	9203      	str	r2, [sp, #12]
 800e766:	2b00      	cmp	r3, #0
 800e768:	bfb8      	it	lt
 800e76a:	f04f 33ff 	movlt.w	r3, #4294967295
 800e76e:	3402      	adds	r4, #2
 800e770:	9305      	str	r3, [sp, #20]
 800e772:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800e858 <_vfiprintf_r+0x25c>
 800e776:	7821      	ldrb	r1, [r4, #0]
 800e778:	2203      	movs	r2, #3
 800e77a:	4650      	mov	r0, sl
 800e77c:	f7f1 fd50 	bl	8000220 <memchr>
 800e780:	b140      	cbz	r0, 800e794 <_vfiprintf_r+0x198>
 800e782:	2340      	movs	r3, #64	; 0x40
 800e784:	eba0 000a 	sub.w	r0, r0, sl
 800e788:	fa03 f000 	lsl.w	r0, r3, r0
 800e78c:	9b04      	ldr	r3, [sp, #16]
 800e78e:	4303      	orrs	r3, r0
 800e790:	3401      	adds	r4, #1
 800e792:	9304      	str	r3, [sp, #16]
 800e794:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e798:	482c      	ldr	r0, [pc, #176]	; (800e84c <_vfiprintf_r+0x250>)
 800e79a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800e79e:	2206      	movs	r2, #6
 800e7a0:	f7f1 fd3e 	bl	8000220 <memchr>
 800e7a4:	2800      	cmp	r0, #0
 800e7a6:	d03f      	beq.n	800e828 <_vfiprintf_r+0x22c>
 800e7a8:	4b29      	ldr	r3, [pc, #164]	; (800e850 <_vfiprintf_r+0x254>)
 800e7aa:	bb1b      	cbnz	r3, 800e7f4 <_vfiprintf_r+0x1f8>
 800e7ac:	9b03      	ldr	r3, [sp, #12]
 800e7ae:	3307      	adds	r3, #7
 800e7b0:	f023 0307 	bic.w	r3, r3, #7
 800e7b4:	3308      	adds	r3, #8
 800e7b6:	9303      	str	r3, [sp, #12]
 800e7b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e7ba:	443b      	add	r3, r7
 800e7bc:	9309      	str	r3, [sp, #36]	; 0x24
 800e7be:	e767      	b.n	800e690 <_vfiprintf_r+0x94>
 800e7c0:	fb0c 3202 	mla	r2, ip, r2, r3
 800e7c4:	460c      	mov	r4, r1
 800e7c6:	2001      	movs	r0, #1
 800e7c8:	e7a5      	b.n	800e716 <_vfiprintf_r+0x11a>
 800e7ca:	2300      	movs	r3, #0
 800e7cc:	3401      	adds	r4, #1
 800e7ce:	9305      	str	r3, [sp, #20]
 800e7d0:	4619      	mov	r1, r3
 800e7d2:	f04f 0c0a 	mov.w	ip, #10
 800e7d6:	4620      	mov	r0, r4
 800e7d8:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e7dc:	3a30      	subs	r2, #48	; 0x30
 800e7de:	2a09      	cmp	r2, #9
 800e7e0:	d903      	bls.n	800e7ea <_vfiprintf_r+0x1ee>
 800e7e2:	2b00      	cmp	r3, #0
 800e7e4:	d0c5      	beq.n	800e772 <_vfiprintf_r+0x176>
 800e7e6:	9105      	str	r1, [sp, #20]
 800e7e8:	e7c3      	b.n	800e772 <_vfiprintf_r+0x176>
 800e7ea:	fb0c 2101 	mla	r1, ip, r1, r2
 800e7ee:	4604      	mov	r4, r0
 800e7f0:	2301      	movs	r3, #1
 800e7f2:	e7f0      	b.n	800e7d6 <_vfiprintf_r+0x1da>
 800e7f4:	ab03      	add	r3, sp, #12
 800e7f6:	9300      	str	r3, [sp, #0]
 800e7f8:	462a      	mov	r2, r5
 800e7fa:	4b16      	ldr	r3, [pc, #88]	; (800e854 <_vfiprintf_r+0x258>)
 800e7fc:	a904      	add	r1, sp, #16
 800e7fe:	4630      	mov	r0, r6
 800e800:	f7fd fdd8 	bl	800c3b4 <_printf_float>
 800e804:	4607      	mov	r7, r0
 800e806:	1c78      	adds	r0, r7, #1
 800e808:	d1d6      	bne.n	800e7b8 <_vfiprintf_r+0x1bc>
 800e80a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800e80c:	07d9      	lsls	r1, r3, #31
 800e80e:	d405      	bmi.n	800e81c <_vfiprintf_r+0x220>
 800e810:	89ab      	ldrh	r3, [r5, #12]
 800e812:	059a      	lsls	r2, r3, #22
 800e814:	d402      	bmi.n	800e81c <_vfiprintf_r+0x220>
 800e816:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800e818:	f000 faaf 	bl	800ed7a <__retarget_lock_release_recursive>
 800e81c:	89ab      	ldrh	r3, [r5, #12]
 800e81e:	065b      	lsls	r3, r3, #25
 800e820:	f53f af12 	bmi.w	800e648 <_vfiprintf_r+0x4c>
 800e824:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e826:	e711      	b.n	800e64c <_vfiprintf_r+0x50>
 800e828:	ab03      	add	r3, sp, #12
 800e82a:	9300      	str	r3, [sp, #0]
 800e82c:	462a      	mov	r2, r5
 800e82e:	4b09      	ldr	r3, [pc, #36]	; (800e854 <_vfiprintf_r+0x258>)
 800e830:	a904      	add	r1, sp, #16
 800e832:	4630      	mov	r0, r6
 800e834:	f7fe f862 	bl	800c8fc <_printf_i>
 800e838:	e7e4      	b.n	800e804 <_vfiprintf_r+0x208>
 800e83a:	bf00      	nop
 800e83c:	080109e4 	.word	0x080109e4
 800e840:	08010a04 	.word	0x08010a04
 800e844:	080109c4 	.word	0x080109c4
 800e848:	0801086c 	.word	0x0801086c
 800e84c:	08010876 	.word	0x08010876
 800e850:	0800c3b5 	.word	0x0800c3b5
 800e854:	0800e5d9 	.word	0x0800e5d9
 800e858:	08010872 	.word	0x08010872

0800e85c <__swbuf_r>:
 800e85c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e85e:	460e      	mov	r6, r1
 800e860:	4614      	mov	r4, r2
 800e862:	4605      	mov	r5, r0
 800e864:	b118      	cbz	r0, 800e86e <__swbuf_r+0x12>
 800e866:	6983      	ldr	r3, [r0, #24]
 800e868:	b90b      	cbnz	r3, 800e86e <__swbuf_r+0x12>
 800e86a:	f000 f9e7 	bl	800ec3c <__sinit>
 800e86e:	4b21      	ldr	r3, [pc, #132]	; (800e8f4 <__swbuf_r+0x98>)
 800e870:	429c      	cmp	r4, r3
 800e872:	d12b      	bne.n	800e8cc <__swbuf_r+0x70>
 800e874:	686c      	ldr	r4, [r5, #4]
 800e876:	69a3      	ldr	r3, [r4, #24]
 800e878:	60a3      	str	r3, [r4, #8]
 800e87a:	89a3      	ldrh	r3, [r4, #12]
 800e87c:	071a      	lsls	r2, r3, #28
 800e87e:	d52f      	bpl.n	800e8e0 <__swbuf_r+0x84>
 800e880:	6923      	ldr	r3, [r4, #16]
 800e882:	b36b      	cbz	r3, 800e8e0 <__swbuf_r+0x84>
 800e884:	6923      	ldr	r3, [r4, #16]
 800e886:	6820      	ldr	r0, [r4, #0]
 800e888:	1ac0      	subs	r0, r0, r3
 800e88a:	6963      	ldr	r3, [r4, #20]
 800e88c:	b2f6      	uxtb	r6, r6
 800e88e:	4283      	cmp	r3, r0
 800e890:	4637      	mov	r7, r6
 800e892:	dc04      	bgt.n	800e89e <__swbuf_r+0x42>
 800e894:	4621      	mov	r1, r4
 800e896:	4628      	mov	r0, r5
 800e898:	f000 f93c 	bl	800eb14 <_fflush_r>
 800e89c:	bb30      	cbnz	r0, 800e8ec <__swbuf_r+0x90>
 800e89e:	68a3      	ldr	r3, [r4, #8]
 800e8a0:	3b01      	subs	r3, #1
 800e8a2:	60a3      	str	r3, [r4, #8]
 800e8a4:	6823      	ldr	r3, [r4, #0]
 800e8a6:	1c5a      	adds	r2, r3, #1
 800e8a8:	6022      	str	r2, [r4, #0]
 800e8aa:	701e      	strb	r6, [r3, #0]
 800e8ac:	6963      	ldr	r3, [r4, #20]
 800e8ae:	3001      	adds	r0, #1
 800e8b0:	4283      	cmp	r3, r0
 800e8b2:	d004      	beq.n	800e8be <__swbuf_r+0x62>
 800e8b4:	89a3      	ldrh	r3, [r4, #12]
 800e8b6:	07db      	lsls	r3, r3, #31
 800e8b8:	d506      	bpl.n	800e8c8 <__swbuf_r+0x6c>
 800e8ba:	2e0a      	cmp	r6, #10
 800e8bc:	d104      	bne.n	800e8c8 <__swbuf_r+0x6c>
 800e8be:	4621      	mov	r1, r4
 800e8c0:	4628      	mov	r0, r5
 800e8c2:	f000 f927 	bl	800eb14 <_fflush_r>
 800e8c6:	b988      	cbnz	r0, 800e8ec <__swbuf_r+0x90>
 800e8c8:	4638      	mov	r0, r7
 800e8ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e8cc:	4b0a      	ldr	r3, [pc, #40]	; (800e8f8 <__swbuf_r+0x9c>)
 800e8ce:	429c      	cmp	r4, r3
 800e8d0:	d101      	bne.n	800e8d6 <__swbuf_r+0x7a>
 800e8d2:	68ac      	ldr	r4, [r5, #8]
 800e8d4:	e7cf      	b.n	800e876 <__swbuf_r+0x1a>
 800e8d6:	4b09      	ldr	r3, [pc, #36]	; (800e8fc <__swbuf_r+0xa0>)
 800e8d8:	429c      	cmp	r4, r3
 800e8da:	bf08      	it	eq
 800e8dc:	68ec      	ldreq	r4, [r5, #12]
 800e8de:	e7ca      	b.n	800e876 <__swbuf_r+0x1a>
 800e8e0:	4621      	mov	r1, r4
 800e8e2:	4628      	mov	r0, r5
 800e8e4:	f000 f81a 	bl	800e91c <__swsetup_r>
 800e8e8:	2800      	cmp	r0, #0
 800e8ea:	d0cb      	beq.n	800e884 <__swbuf_r+0x28>
 800e8ec:	f04f 37ff 	mov.w	r7, #4294967295
 800e8f0:	e7ea      	b.n	800e8c8 <__swbuf_r+0x6c>
 800e8f2:	bf00      	nop
 800e8f4:	080109e4 	.word	0x080109e4
 800e8f8:	08010a04 	.word	0x08010a04
 800e8fc:	080109c4 	.word	0x080109c4

0800e900 <__ascii_wctomb>:
 800e900:	b149      	cbz	r1, 800e916 <__ascii_wctomb+0x16>
 800e902:	2aff      	cmp	r2, #255	; 0xff
 800e904:	bf85      	ittet	hi
 800e906:	238a      	movhi	r3, #138	; 0x8a
 800e908:	6003      	strhi	r3, [r0, #0]
 800e90a:	700a      	strbls	r2, [r1, #0]
 800e90c:	f04f 30ff 	movhi.w	r0, #4294967295
 800e910:	bf98      	it	ls
 800e912:	2001      	movls	r0, #1
 800e914:	4770      	bx	lr
 800e916:	4608      	mov	r0, r1
 800e918:	4770      	bx	lr
	...

0800e91c <__swsetup_r>:
 800e91c:	4b32      	ldr	r3, [pc, #200]	; (800e9e8 <__swsetup_r+0xcc>)
 800e91e:	b570      	push	{r4, r5, r6, lr}
 800e920:	681d      	ldr	r5, [r3, #0]
 800e922:	4606      	mov	r6, r0
 800e924:	460c      	mov	r4, r1
 800e926:	b125      	cbz	r5, 800e932 <__swsetup_r+0x16>
 800e928:	69ab      	ldr	r3, [r5, #24]
 800e92a:	b913      	cbnz	r3, 800e932 <__swsetup_r+0x16>
 800e92c:	4628      	mov	r0, r5
 800e92e:	f000 f985 	bl	800ec3c <__sinit>
 800e932:	4b2e      	ldr	r3, [pc, #184]	; (800e9ec <__swsetup_r+0xd0>)
 800e934:	429c      	cmp	r4, r3
 800e936:	d10f      	bne.n	800e958 <__swsetup_r+0x3c>
 800e938:	686c      	ldr	r4, [r5, #4]
 800e93a:	89a3      	ldrh	r3, [r4, #12]
 800e93c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800e940:	0719      	lsls	r1, r3, #28
 800e942:	d42c      	bmi.n	800e99e <__swsetup_r+0x82>
 800e944:	06dd      	lsls	r5, r3, #27
 800e946:	d411      	bmi.n	800e96c <__swsetup_r+0x50>
 800e948:	2309      	movs	r3, #9
 800e94a:	6033      	str	r3, [r6, #0]
 800e94c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800e950:	81a3      	strh	r3, [r4, #12]
 800e952:	f04f 30ff 	mov.w	r0, #4294967295
 800e956:	e03e      	b.n	800e9d6 <__swsetup_r+0xba>
 800e958:	4b25      	ldr	r3, [pc, #148]	; (800e9f0 <__swsetup_r+0xd4>)
 800e95a:	429c      	cmp	r4, r3
 800e95c:	d101      	bne.n	800e962 <__swsetup_r+0x46>
 800e95e:	68ac      	ldr	r4, [r5, #8]
 800e960:	e7eb      	b.n	800e93a <__swsetup_r+0x1e>
 800e962:	4b24      	ldr	r3, [pc, #144]	; (800e9f4 <__swsetup_r+0xd8>)
 800e964:	429c      	cmp	r4, r3
 800e966:	bf08      	it	eq
 800e968:	68ec      	ldreq	r4, [r5, #12]
 800e96a:	e7e6      	b.n	800e93a <__swsetup_r+0x1e>
 800e96c:	0758      	lsls	r0, r3, #29
 800e96e:	d512      	bpl.n	800e996 <__swsetup_r+0x7a>
 800e970:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800e972:	b141      	cbz	r1, 800e986 <__swsetup_r+0x6a>
 800e974:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800e978:	4299      	cmp	r1, r3
 800e97a:	d002      	beq.n	800e982 <__swsetup_r+0x66>
 800e97c:	4630      	mov	r0, r6
 800e97e:	f7ff fb31 	bl	800dfe4 <_free_r>
 800e982:	2300      	movs	r3, #0
 800e984:	6363      	str	r3, [r4, #52]	; 0x34
 800e986:	89a3      	ldrh	r3, [r4, #12]
 800e988:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800e98c:	81a3      	strh	r3, [r4, #12]
 800e98e:	2300      	movs	r3, #0
 800e990:	6063      	str	r3, [r4, #4]
 800e992:	6923      	ldr	r3, [r4, #16]
 800e994:	6023      	str	r3, [r4, #0]
 800e996:	89a3      	ldrh	r3, [r4, #12]
 800e998:	f043 0308 	orr.w	r3, r3, #8
 800e99c:	81a3      	strh	r3, [r4, #12]
 800e99e:	6923      	ldr	r3, [r4, #16]
 800e9a0:	b94b      	cbnz	r3, 800e9b6 <__swsetup_r+0x9a>
 800e9a2:	89a3      	ldrh	r3, [r4, #12]
 800e9a4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800e9a8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800e9ac:	d003      	beq.n	800e9b6 <__swsetup_r+0x9a>
 800e9ae:	4621      	mov	r1, r4
 800e9b0:	4630      	mov	r0, r6
 800e9b2:	f000 fa09 	bl	800edc8 <__smakebuf_r>
 800e9b6:	89a0      	ldrh	r0, [r4, #12]
 800e9b8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800e9bc:	f010 0301 	ands.w	r3, r0, #1
 800e9c0:	d00a      	beq.n	800e9d8 <__swsetup_r+0xbc>
 800e9c2:	2300      	movs	r3, #0
 800e9c4:	60a3      	str	r3, [r4, #8]
 800e9c6:	6963      	ldr	r3, [r4, #20]
 800e9c8:	425b      	negs	r3, r3
 800e9ca:	61a3      	str	r3, [r4, #24]
 800e9cc:	6923      	ldr	r3, [r4, #16]
 800e9ce:	b943      	cbnz	r3, 800e9e2 <__swsetup_r+0xc6>
 800e9d0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800e9d4:	d1ba      	bne.n	800e94c <__swsetup_r+0x30>
 800e9d6:	bd70      	pop	{r4, r5, r6, pc}
 800e9d8:	0781      	lsls	r1, r0, #30
 800e9da:	bf58      	it	pl
 800e9dc:	6963      	ldrpl	r3, [r4, #20]
 800e9de:	60a3      	str	r3, [r4, #8]
 800e9e0:	e7f4      	b.n	800e9cc <__swsetup_r+0xb0>
 800e9e2:	2000      	movs	r0, #0
 800e9e4:	e7f7      	b.n	800e9d6 <__swsetup_r+0xba>
 800e9e6:	bf00      	nop
 800e9e8:	200000a0 	.word	0x200000a0
 800e9ec:	080109e4 	.word	0x080109e4
 800e9f0:	08010a04 	.word	0x08010a04
 800e9f4:	080109c4 	.word	0x080109c4

0800e9f8 <abort>:
 800e9f8:	b508      	push	{r3, lr}
 800e9fa:	2006      	movs	r0, #6
 800e9fc:	f000 fa54 	bl	800eea8 <raise>
 800ea00:	2001      	movs	r0, #1
 800ea02:	f7f7 fdef 	bl	80065e4 <_exit>
	...

0800ea08 <__sflush_r>:
 800ea08:	898a      	ldrh	r2, [r1, #12]
 800ea0a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ea0e:	4605      	mov	r5, r0
 800ea10:	0710      	lsls	r0, r2, #28
 800ea12:	460c      	mov	r4, r1
 800ea14:	d458      	bmi.n	800eac8 <__sflush_r+0xc0>
 800ea16:	684b      	ldr	r3, [r1, #4]
 800ea18:	2b00      	cmp	r3, #0
 800ea1a:	dc05      	bgt.n	800ea28 <__sflush_r+0x20>
 800ea1c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800ea1e:	2b00      	cmp	r3, #0
 800ea20:	dc02      	bgt.n	800ea28 <__sflush_r+0x20>
 800ea22:	2000      	movs	r0, #0
 800ea24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ea28:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800ea2a:	2e00      	cmp	r6, #0
 800ea2c:	d0f9      	beq.n	800ea22 <__sflush_r+0x1a>
 800ea2e:	2300      	movs	r3, #0
 800ea30:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800ea34:	682f      	ldr	r7, [r5, #0]
 800ea36:	602b      	str	r3, [r5, #0]
 800ea38:	d032      	beq.n	800eaa0 <__sflush_r+0x98>
 800ea3a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800ea3c:	89a3      	ldrh	r3, [r4, #12]
 800ea3e:	075a      	lsls	r2, r3, #29
 800ea40:	d505      	bpl.n	800ea4e <__sflush_r+0x46>
 800ea42:	6863      	ldr	r3, [r4, #4]
 800ea44:	1ac0      	subs	r0, r0, r3
 800ea46:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800ea48:	b10b      	cbz	r3, 800ea4e <__sflush_r+0x46>
 800ea4a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ea4c:	1ac0      	subs	r0, r0, r3
 800ea4e:	2300      	movs	r3, #0
 800ea50:	4602      	mov	r2, r0
 800ea52:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800ea54:	6a21      	ldr	r1, [r4, #32]
 800ea56:	4628      	mov	r0, r5
 800ea58:	47b0      	blx	r6
 800ea5a:	1c43      	adds	r3, r0, #1
 800ea5c:	89a3      	ldrh	r3, [r4, #12]
 800ea5e:	d106      	bne.n	800ea6e <__sflush_r+0x66>
 800ea60:	6829      	ldr	r1, [r5, #0]
 800ea62:	291d      	cmp	r1, #29
 800ea64:	d82c      	bhi.n	800eac0 <__sflush_r+0xb8>
 800ea66:	4a2a      	ldr	r2, [pc, #168]	; (800eb10 <__sflush_r+0x108>)
 800ea68:	40ca      	lsrs	r2, r1
 800ea6a:	07d6      	lsls	r6, r2, #31
 800ea6c:	d528      	bpl.n	800eac0 <__sflush_r+0xb8>
 800ea6e:	2200      	movs	r2, #0
 800ea70:	6062      	str	r2, [r4, #4]
 800ea72:	04d9      	lsls	r1, r3, #19
 800ea74:	6922      	ldr	r2, [r4, #16]
 800ea76:	6022      	str	r2, [r4, #0]
 800ea78:	d504      	bpl.n	800ea84 <__sflush_r+0x7c>
 800ea7a:	1c42      	adds	r2, r0, #1
 800ea7c:	d101      	bne.n	800ea82 <__sflush_r+0x7a>
 800ea7e:	682b      	ldr	r3, [r5, #0]
 800ea80:	b903      	cbnz	r3, 800ea84 <__sflush_r+0x7c>
 800ea82:	6560      	str	r0, [r4, #84]	; 0x54
 800ea84:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800ea86:	602f      	str	r7, [r5, #0]
 800ea88:	2900      	cmp	r1, #0
 800ea8a:	d0ca      	beq.n	800ea22 <__sflush_r+0x1a>
 800ea8c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800ea90:	4299      	cmp	r1, r3
 800ea92:	d002      	beq.n	800ea9a <__sflush_r+0x92>
 800ea94:	4628      	mov	r0, r5
 800ea96:	f7ff faa5 	bl	800dfe4 <_free_r>
 800ea9a:	2000      	movs	r0, #0
 800ea9c:	6360      	str	r0, [r4, #52]	; 0x34
 800ea9e:	e7c1      	b.n	800ea24 <__sflush_r+0x1c>
 800eaa0:	6a21      	ldr	r1, [r4, #32]
 800eaa2:	2301      	movs	r3, #1
 800eaa4:	4628      	mov	r0, r5
 800eaa6:	47b0      	blx	r6
 800eaa8:	1c41      	adds	r1, r0, #1
 800eaaa:	d1c7      	bne.n	800ea3c <__sflush_r+0x34>
 800eaac:	682b      	ldr	r3, [r5, #0]
 800eaae:	2b00      	cmp	r3, #0
 800eab0:	d0c4      	beq.n	800ea3c <__sflush_r+0x34>
 800eab2:	2b1d      	cmp	r3, #29
 800eab4:	d001      	beq.n	800eaba <__sflush_r+0xb2>
 800eab6:	2b16      	cmp	r3, #22
 800eab8:	d101      	bne.n	800eabe <__sflush_r+0xb6>
 800eaba:	602f      	str	r7, [r5, #0]
 800eabc:	e7b1      	b.n	800ea22 <__sflush_r+0x1a>
 800eabe:	89a3      	ldrh	r3, [r4, #12]
 800eac0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800eac4:	81a3      	strh	r3, [r4, #12]
 800eac6:	e7ad      	b.n	800ea24 <__sflush_r+0x1c>
 800eac8:	690f      	ldr	r7, [r1, #16]
 800eaca:	2f00      	cmp	r7, #0
 800eacc:	d0a9      	beq.n	800ea22 <__sflush_r+0x1a>
 800eace:	0793      	lsls	r3, r2, #30
 800ead0:	680e      	ldr	r6, [r1, #0]
 800ead2:	bf08      	it	eq
 800ead4:	694b      	ldreq	r3, [r1, #20]
 800ead6:	600f      	str	r7, [r1, #0]
 800ead8:	bf18      	it	ne
 800eada:	2300      	movne	r3, #0
 800eadc:	eba6 0807 	sub.w	r8, r6, r7
 800eae0:	608b      	str	r3, [r1, #8]
 800eae2:	f1b8 0f00 	cmp.w	r8, #0
 800eae6:	dd9c      	ble.n	800ea22 <__sflush_r+0x1a>
 800eae8:	6a21      	ldr	r1, [r4, #32]
 800eaea:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800eaec:	4643      	mov	r3, r8
 800eaee:	463a      	mov	r2, r7
 800eaf0:	4628      	mov	r0, r5
 800eaf2:	47b0      	blx	r6
 800eaf4:	2800      	cmp	r0, #0
 800eaf6:	dc06      	bgt.n	800eb06 <__sflush_r+0xfe>
 800eaf8:	89a3      	ldrh	r3, [r4, #12]
 800eafa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800eafe:	81a3      	strh	r3, [r4, #12]
 800eb00:	f04f 30ff 	mov.w	r0, #4294967295
 800eb04:	e78e      	b.n	800ea24 <__sflush_r+0x1c>
 800eb06:	4407      	add	r7, r0
 800eb08:	eba8 0800 	sub.w	r8, r8, r0
 800eb0c:	e7e9      	b.n	800eae2 <__sflush_r+0xda>
 800eb0e:	bf00      	nop
 800eb10:	20400001 	.word	0x20400001

0800eb14 <_fflush_r>:
 800eb14:	b538      	push	{r3, r4, r5, lr}
 800eb16:	690b      	ldr	r3, [r1, #16]
 800eb18:	4605      	mov	r5, r0
 800eb1a:	460c      	mov	r4, r1
 800eb1c:	b913      	cbnz	r3, 800eb24 <_fflush_r+0x10>
 800eb1e:	2500      	movs	r5, #0
 800eb20:	4628      	mov	r0, r5
 800eb22:	bd38      	pop	{r3, r4, r5, pc}
 800eb24:	b118      	cbz	r0, 800eb2e <_fflush_r+0x1a>
 800eb26:	6983      	ldr	r3, [r0, #24]
 800eb28:	b90b      	cbnz	r3, 800eb2e <_fflush_r+0x1a>
 800eb2a:	f000 f887 	bl	800ec3c <__sinit>
 800eb2e:	4b14      	ldr	r3, [pc, #80]	; (800eb80 <_fflush_r+0x6c>)
 800eb30:	429c      	cmp	r4, r3
 800eb32:	d11b      	bne.n	800eb6c <_fflush_r+0x58>
 800eb34:	686c      	ldr	r4, [r5, #4]
 800eb36:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800eb3a:	2b00      	cmp	r3, #0
 800eb3c:	d0ef      	beq.n	800eb1e <_fflush_r+0xa>
 800eb3e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800eb40:	07d0      	lsls	r0, r2, #31
 800eb42:	d404      	bmi.n	800eb4e <_fflush_r+0x3a>
 800eb44:	0599      	lsls	r1, r3, #22
 800eb46:	d402      	bmi.n	800eb4e <_fflush_r+0x3a>
 800eb48:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800eb4a:	f000 f915 	bl	800ed78 <__retarget_lock_acquire_recursive>
 800eb4e:	4628      	mov	r0, r5
 800eb50:	4621      	mov	r1, r4
 800eb52:	f7ff ff59 	bl	800ea08 <__sflush_r>
 800eb56:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800eb58:	07da      	lsls	r2, r3, #31
 800eb5a:	4605      	mov	r5, r0
 800eb5c:	d4e0      	bmi.n	800eb20 <_fflush_r+0xc>
 800eb5e:	89a3      	ldrh	r3, [r4, #12]
 800eb60:	059b      	lsls	r3, r3, #22
 800eb62:	d4dd      	bmi.n	800eb20 <_fflush_r+0xc>
 800eb64:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800eb66:	f000 f908 	bl	800ed7a <__retarget_lock_release_recursive>
 800eb6a:	e7d9      	b.n	800eb20 <_fflush_r+0xc>
 800eb6c:	4b05      	ldr	r3, [pc, #20]	; (800eb84 <_fflush_r+0x70>)
 800eb6e:	429c      	cmp	r4, r3
 800eb70:	d101      	bne.n	800eb76 <_fflush_r+0x62>
 800eb72:	68ac      	ldr	r4, [r5, #8]
 800eb74:	e7df      	b.n	800eb36 <_fflush_r+0x22>
 800eb76:	4b04      	ldr	r3, [pc, #16]	; (800eb88 <_fflush_r+0x74>)
 800eb78:	429c      	cmp	r4, r3
 800eb7a:	bf08      	it	eq
 800eb7c:	68ec      	ldreq	r4, [r5, #12]
 800eb7e:	e7da      	b.n	800eb36 <_fflush_r+0x22>
 800eb80:	080109e4 	.word	0x080109e4
 800eb84:	08010a04 	.word	0x08010a04
 800eb88:	080109c4 	.word	0x080109c4

0800eb8c <std>:
 800eb8c:	2300      	movs	r3, #0
 800eb8e:	b510      	push	{r4, lr}
 800eb90:	4604      	mov	r4, r0
 800eb92:	e9c0 3300 	strd	r3, r3, [r0]
 800eb96:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800eb9a:	6083      	str	r3, [r0, #8]
 800eb9c:	8181      	strh	r1, [r0, #12]
 800eb9e:	6643      	str	r3, [r0, #100]	; 0x64
 800eba0:	81c2      	strh	r2, [r0, #14]
 800eba2:	6183      	str	r3, [r0, #24]
 800eba4:	4619      	mov	r1, r3
 800eba6:	2208      	movs	r2, #8
 800eba8:	305c      	adds	r0, #92	; 0x5c
 800ebaa:	f7fd fb5b 	bl	800c264 <memset>
 800ebae:	4b05      	ldr	r3, [pc, #20]	; (800ebc4 <std+0x38>)
 800ebb0:	6263      	str	r3, [r4, #36]	; 0x24
 800ebb2:	4b05      	ldr	r3, [pc, #20]	; (800ebc8 <std+0x3c>)
 800ebb4:	62a3      	str	r3, [r4, #40]	; 0x28
 800ebb6:	4b05      	ldr	r3, [pc, #20]	; (800ebcc <std+0x40>)
 800ebb8:	62e3      	str	r3, [r4, #44]	; 0x2c
 800ebba:	4b05      	ldr	r3, [pc, #20]	; (800ebd0 <std+0x44>)
 800ebbc:	6224      	str	r4, [r4, #32]
 800ebbe:	6323      	str	r3, [r4, #48]	; 0x30
 800ebc0:	bd10      	pop	{r4, pc}
 800ebc2:	bf00      	nop
 800ebc4:	0800eee1 	.word	0x0800eee1
 800ebc8:	0800ef03 	.word	0x0800ef03
 800ebcc:	0800ef3b 	.word	0x0800ef3b
 800ebd0:	0800ef5f 	.word	0x0800ef5f

0800ebd4 <_cleanup_r>:
 800ebd4:	4901      	ldr	r1, [pc, #4]	; (800ebdc <_cleanup_r+0x8>)
 800ebd6:	f000 b8af 	b.w	800ed38 <_fwalk_reent>
 800ebda:	bf00      	nop
 800ebdc:	0800eb15 	.word	0x0800eb15

0800ebe0 <__sfmoreglue>:
 800ebe0:	b570      	push	{r4, r5, r6, lr}
 800ebe2:	2268      	movs	r2, #104	; 0x68
 800ebe4:	1e4d      	subs	r5, r1, #1
 800ebe6:	4355      	muls	r5, r2
 800ebe8:	460e      	mov	r6, r1
 800ebea:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800ebee:	f7ff fa65 	bl	800e0bc <_malloc_r>
 800ebf2:	4604      	mov	r4, r0
 800ebf4:	b140      	cbz	r0, 800ec08 <__sfmoreglue+0x28>
 800ebf6:	2100      	movs	r1, #0
 800ebf8:	e9c0 1600 	strd	r1, r6, [r0]
 800ebfc:	300c      	adds	r0, #12
 800ebfe:	60a0      	str	r0, [r4, #8]
 800ec00:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800ec04:	f7fd fb2e 	bl	800c264 <memset>
 800ec08:	4620      	mov	r0, r4
 800ec0a:	bd70      	pop	{r4, r5, r6, pc}

0800ec0c <__sfp_lock_acquire>:
 800ec0c:	4801      	ldr	r0, [pc, #4]	; (800ec14 <__sfp_lock_acquire+0x8>)
 800ec0e:	f000 b8b3 	b.w	800ed78 <__retarget_lock_acquire_recursive>
 800ec12:	bf00      	nop
 800ec14:	20000b45 	.word	0x20000b45

0800ec18 <__sfp_lock_release>:
 800ec18:	4801      	ldr	r0, [pc, #4]	; (800ec20 <__sfp_lock_release+0x8>)
 800ec1a:	f000 b8ae 	b.w	800ed7a <__retarget_lock_release_recursive>
 800ec1e:	bf00      	nop
 800ec20:	20000b45 	.word	0x20000b45

0800ec24 <__sinit_lock_acquire>:
 800ec24:	4801      	ldr	r0, [pc, #4]	; (800ec2c <__sinit_lock_acquire+0x8>)
 800ec26:	f000 b8a7 	b.w	800ed78 <__retarget_lock_acquire_recursive>
 800ec2a:	bf00      	nop
 800ec2c:	20000b46 	.word	0x20000b46

0800ec30 <__sinit_lock_release>:
 800ec30:	4801      	ldr	r0, [pc, #4]	; (800ec38 <__sinit_lock_release+0x8>)
 800ec32:	f000 b8a2 	b.w	800ed7a <__retarget_lock_release_recursive>
 800ec36:	bf00      	nop
 800ec38:	20000b46 	.word	0x20000b46

0800ec3c <__sinit>:
 800ec3c:	b510      	push	{r4, lr}
 800ec3e:	4604      	mov	r4, r0
 800ec40:	f7ff fff0 	bl	800ec24 <__sinit_lock_acquire>
 800ec44:	69a3      	ldr	r3, [r4, #24]
 800ec46:	b11b      	cbz	r3, 800ec50 <__sinit+0x14>
 800ec48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ec4c:	f7ff bff0 	b.w	800ec30 <__sinit_lock_release>
 800ec50:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800ec54:	6523      	str	r3, [r4, #80]	; 0x50
 800ec56:	4b13      	ldr	r3, [pc, #76]	; (800eca4 <__sinit+0x68>)
 800ec58:	4a13      	ldr	r2, [pc, #76]	; (800eca8 <__sinit+0x6c>)
 800ec5a:	681b      	ldr	r3, [r3, #0]
 800ec5c:	62a2      	str	r2, [r4, #40]	; 0x28
 800ec5e:	42a3      	cmp	r3, r4
 800ec60:	bf04      	itt	eq
 800ec62:	2301      	moveq	r3, #1
 800ec64:	61a3      	streq	r3, [r4, #24]
 800ec66:	4620      	mov	r0, r4
 800ec68:	f000 f820 	bl	800ecac <__sfp>
 800ec6c:	6060      	str	r0, [r4, #4]
 800ec6e:	4620      	mov	r0, r4
 800ec70:	f000 f81c 	bl	800ecac <__sfp>
 800ec74:	60a0      	str	r0, [r4, #8]
 800ec76:	4620      	mov	r0, r4
 800ec78:	f000 f818 	bl	800ecac <__sfp>
 800ec7c:	2200      	movs	r2, #0
 800ec7e:	60e0      	str	r0, [r4, #12]
 800ec80:	2104      	movs	r1, #4
 800ec82:	6860      	ldr	r0, [r4, #4]
 800ec84:	f7ff ff82 	bl	800eb8c <std>
 800ec88:	68a0      	ldr	r0, [r4, #8]
 800ec8a:	2201      	movs	r2, #1
 800ec8c:	2109      	movs	r1, #9
 800ec8e:	f7ff ff7d 	bl	800eb8c <std>
 800ec92:	68e0      	ldr	r0, [r4, #12]
 800ec94:	2202      	movs	r2, #2
 800ec96:	2112      	movs	r1, #18
 800ec98:	f7ff ff78 	bl	800eb8c <std>
 800ec9c:	2301      	movs	r3, #1
 800ec9e:	61a3      	str	r3, [r4, #24]
 800eca0:	e7d2      	b.n	800ec48 <__sinit+0xc>
 800eca2:	bf00      	nop
 800eca4:	0801064c 	.word	0x0801064c
 800eca8:	0800ebd5 	.word	0x0800ebd5

0800ecac <__sfp>:
 800ecac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ecae:	4607      	mov	r7, r0
 800ecb0:	f7ff ffac 	bl	800ec0c <__sfp_lock_acquire>
 800ecb4:	4b1e      	ldr	r3, [pc, #120]	; (800ed30 <__sfp+0x84>)
 800ecb6:	681e      	ldr	r6, [r3, #0]
 800ecb8:	69b3      	ldr	r3, [r6, #24]
 800ecba:	b913      	cbnz	r3, 800ecc2 <__sfp+0x16>
 800ecbc:	4630      	mov	r0, r6
 800ecbe:	f7ff ffbd 	bl	800ec3c <__sinit>
 800ecc2:	3648      	adds	r6, #72	; 0x48
 800ecc4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800ecc8:	3b01      	subs	r3, #1
 800ecca:	d503      	bpl.n	800ecd4 <__sfp+0x28>
 800eccc:	6833      	ldr	r3, [r6, #0]
 800ecce:	b30b      	cbz	r3, 800ed14 <__sfp+0x68>
 800ecd0:	6836      	ldr	r6, [r6, #0]
 800ecd2:	e7f7      	b.n	800ecc4 <__sfp+0x18>
 800ecd4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800ecd8:	b9d5      	cbnz	r5, 800ed10 <__sfp+0x64>
 800ecda:	4b16      	ldr	r3, [pc, #88]	; (800ed34 <__sfp+0x88>)
 800ecdc:	60e3      	str	r3, [r4, #12]
 800ecde:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800ece2:	6665      	str	r5, [r4, #100]	; 0x64
 800ece4:	f000 f847 	bl	800ed76 <__retarget_lock_init_recursive>
 800ece8:	f7ff ff96 	bl	800ec18 <__sfp_lock_release>
 800ecec:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800ecf0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800ecf4:	6025      	str	r5, [r4, #0]
 800ecf6:	61a5      	str	r5, [r4, #24]
 800ecf8:	2208      	movs	r2, #8
 800ecfa:	4629      	mov	r1, r5
 800ecfc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800ed00:	f7fd fab0 	bl	800c264 <memset>
 800ed04:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800ed08:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800ed0c:	4620      	mov	r0, r4
 800ed0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ed10:	3468      	adds	r4, #104	; 0x68
 800ed12:	e7d9      	b.n	800ecc8 <__sfp+0x1c>
 800ed14:	2104      	movs	r1, #4
 800ed16:	4638      	mov	r0, r7
 800ed18:	f7ff ff62 	bl	800ebe0 <__sfmoreglue>
 800ed1c:	4604      	mov	r4, r0
 800ed1e:	6030      	str	r0, [r6, #0]
 800ed20:	2800      	cmp	r0, #0
 800ed22:	d1d5      	bne.n	800ecd0 <__sfp+0x24>
 800ed24:	f7ff ff78 	bl	800ec18 <__sfp_lock_release>
 800ed28:	230c      	movs	r3, #12
 800ed2a:	603b      	str	r3, [r7, #0]
 800ed2c:	e7ee      	b.n	800ed0c <__sfp+0x60>
 800ed2e:	bf00      	nop
 800ed30:	0801064c 	.word	0x0801064c
 800ed34:	ffff0001 	.word	0xffff0001

0800ed38 <_fwalk_reent>:
 800ed38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ed3c:	4606      	mov	r6, r0
 800ed3e:	4688      	mov	r8, r1
 800ed40:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800ed44:	2700      	movs	r7, #0
 800ed46:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800ed4a:	f1b9 0901 	subs.w	r9, r9, #1
 800ed4e:	d505      	bpl.n	800ed5c <_fwalk_reent+0x24>
 800ed50:	6824      	ldr	r4, [r4, #0]
 800ed52:	2c00      	cmp	r4, #0
 800ed54:	d1f7      	bne.n	800ed46 <_fwalk_reent+0xe>
 800ed56:	4638      	mov	r0, r7
 800ed58:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ed5c:	89ab      	ldrh	r3, [r5, #12]
 800ed5e:	2b01      	cmp	r3, #1
 800ed60:	d907      	bls.n	800ed72 <_fwalk_reent+0x3a>
 800ed62:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800ed66:	3301      	adds	r3, #1
 800ed68:	d003      	beq.n	800ed72 <_fwalk_reent+0x3a>
 800ed6a:	4629      	mov	r1, r5
 800ed6c:	4630      	mov	r0, r6
 800ed6e:	47c0      	blx	r8
 800ed70:	4307      	orrs	r7, r0
 800ed72:	3568      	adds	r5, #104	; 0x68
 800ed74:	e7e9      	b.n	800ed4a <_fwalk_reent+0x12>

0800ed76 <__retarget_lock_init_recursive>:
 800ed76:	4770      	bx	lr

0800ed78 <__retarget_lock_acquire_recursive>:
 800ed78:	4770      	bx	lr

0800ed7a <__retarget_lock_release_recursive>:
 800ed7a:	4770      	bx	lr

0800ed7c <__swhatbuf_r>:
 800ed7c:	b570      	push	{r4, r5, r6, lr}
 800ed7e:	460e      	mov	r6, r1
 800ed80:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800ed84:	2900      	cmp	r1, #0
 800ed86:	b096      	sub	sp, #88	; 0x58
 800ed88:	4614      	mov	r4, r2
 800ed8a:	461d      	mov	r5, r3
 800ed8c:	da08      	bge.n	800eda0 <__swhatbuf_r+0x24>
 800ed8e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800ed92:	2200      	movs	r2, #0
 800ed94:	602a      	str	r2, [r5, #0]
 800ed96:	061a      	lsls	r2, r3, #24
 800ed98:	d410      	bmi.n	800edbc <__swhatbuf_r+0x40>
 800ed9a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800ed9e:	e00e      	b.n	800edbe <__swhatbuf_r+0x42>
 800eda0:	466a      	mov	r2, sp
 800eda2:	f000 f903 	bl	800efac <_fstat_r>
 800eda6:	2800      	cmp	r0, #0
 800eda8:	dbf1      	blt.n	800ed8e <__swhatbuf_r+0x12>
 800edaa:	9a01      	ldr	r2, [sp, #4]
 800edac:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800edb0:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800edb4:	425a      	negs	r2, r3
 800edb6:	415a      	adcs	r2, r3
 800edb8:	602a      	str	r2, [r5, #0]
 800edba:	e7ee      	b.n	800ed9a <__swhatbuf_r+0x1e>
 800edbc:	2340      	movs	r3, #64	; 0x40
 800edbe:	2000      	movs	r0, #0
 800edc0:	6023      	str	r3, [r4, #0]
 800edc2:	b016      	add	sp, #88	; 0x58
 800edc4:	bd70      	pop	{r4, r5, r6, pc}
	...

0800edc8 <__smakebuf_r>:
 800edc8:	898b      	ldrh	r3, [r1, #12]
 800edca:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800edcc:	079d      	lsls	r5, r3, #30
 800edce:	4606      	mov	r6, r0
 800edd0:	460c      	mov	r4, r1
 800edd2:	d507      	bpl.n	800ede4 <__smakebuf_r+0x1c>
 800edd4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800edd8:	6023      	str	r3, [r4, #0]
 800edda:	6123      	str	r3, [r4, #16]
 800eddc:	2301      	movs	r3, #1
 800edde:	6163      	str	r3, [r4, #20]
 800ede0:	b002      	add	sp, #8
 800ede2:	bd70      	pop	{r4, r5, r6, pc}
 800ede4:	ab01      	add	r3, sp, #4
 800ede6:	466a      	mov	r2, sp
 800ede8:	f7ff ffc8 	bl	800ed7c <__swhatbuf_r>
 800edec:	9900      	ldr	r1, [sp, #0]
 800edee:	4605      	mov	r5, r0
 800edf0:	4630      	mov	r0, r6
 800edf2:	f7ff f963 	bl	800e0bc <_malloc_r>
 800edf6:	b948      	cbnz	r0, 800ee0c <__smakebuf_r+0x44>
 800edf8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800edfc:	059a      	lsls	r2, r3, #22
 800edfe:	d4ef      	bmi.n	800ede0 <__smakebuf_r+0x18>
 800ee00:	f023 0303 	bic.w	r3, r3, #3
 800ee04:	f043 0302 	orr.w	r3, r3, #2
 800ee08:	81a3      	strh	r3, [r4, #12]
 800ee0a:	e7e3      	b.n	800edd4 <__smakebuf_r+0xc>
 800ee0c:	4b0d      	ldr	r3, [pc, #52]	; (800ee44 <__smakebuf_r+0x7c>)
 800ee0e:	62b3      	str	r3, [r6, #40]	; 0x28
 800ee10:	89a3      	ldrh	r3, [r4, #12]
 800ee12:	6020      	str	r0, [r4, #0]
 800ee14:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800ee18:	81a3      	strh	r3, [r4, #12]
 800ee1a:	9b00      	ldr	r3, [sp, #0]
 800ee1c:	6163      	str	r3, [r4, #20]
 800ee1e:	9b01      	ldr	r3, [sp, #4]
 800ee20:	6120      	str	r0, [r4, #16]
 800ee22:	b15b      	cbz	r3, 800ee3c <__smakebuf_r+0x74>
 800ee24:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800ee28:	4630      	mov	r0, r6
 800ee2a:	f000 f8d1 	bl	800efd0 <_isatty_r>
 800ee2e:	b128      	cbz	r0, 800ee3c <__smakebuf_r+0x74>
 800ee30:	89a3      	ldrh	r3, [r4, #12]
 800ee32:	f023 0303 	bic.w	r3, r3, #3
 800ee36:	f043 0301 	orr.w	r3, r3, #1
 800ee3a:	81a3      	strh	r3, [r4, #12]
 800ee3c:	89a0      	ldrh	r0, [r4, #12]
 800ee3e:	4305      	orrs	r5, r0
 800ee40:	81a5      	strh	r5, [r4, #12]
 800ee42:	e7cd      	b.n	800ede0 <__smakebuf_r+0x18>
 800ee44:	0800ebd5 	.word	0x0800ebd5

0800ee48 <_malloc_usable_size_r>:
 800ee48:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800ee4c:	1f18      	subs	r0, r3, #4
 800ee4e:	2b00      	cmp	r3, #0
 800ee50:	bfbc      	itt	lt
 800ee52:	580b      	ldrlt	r3, [r1, r0]
 800ee54:	18c0      	addlt	r0, r0, r3
 800ee56:	4770      	bx	lr

0800ee58 <_raise_r>:
 800ee58:	291f      	cmp	r1, #31
 800ee5a:	b538      	push	{r3, r4, r5, lr}
 800ee5c:	4604      	mov	r4, r0
 800ee5e:	460d      	mov	r5, r1
 800ee60:	d904      	bls.n	800ee6c <_raise_r+0x14>
 800ee62:	2316      	movs	r3, #22
 800ee64:	6003      	str	r3, [r0, #0]
 800ee66:	f04f 30ff 	mov.w	r0, #4294967295
 800ee6a:	bd38      	pop	{r3, r4, r5, pc}
 800ee6c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800ee6e:	b112      	cbz	r2, 800ee76 <_raise_r+0x1e>
 800ee70:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800ee74:	b94b      	cbnz	r3, 800ee8a <_raise_r+0x32>
 800ee76:	4620      	mov	r0, r4
 800ee78:	f000 f830 	bl	800eedc <_getpid_r>
 800ee7c:	462a      	mov	r2, r5
 800ee7e:	4601      	mov	r1, r0
 800ee80:	4620      	mov	r0, r4
 800ee82:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ee86:	f000 b817 	b.w	800eeb8 <_kill_r>
 800ee8a:	2b01      	cmp	r3, #1
 800ee8c:	d00a      	beq.n	800eea4 <_raise_r+0x4c>
 800ee8e:	1c59      	adds	r1, r3, #1
 800ee90:	d103      	bne.n	800ee9a <_raise_r+0x42>
 800ee92:	2316      	movs	r3, #22
 800ee94:	6003      	str	r3, [r0, #0]
 800ee96:	2001      	movs	r0, #1
 800ee98:	e7e7      	b.n	800ee6a <_raise_r+0x12>
 800ee9a:	2400      	movs	r4, #0
 800ee9c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800eea0:	4628      	mov	r0, r5
 800eea2:	4798      	blx	r3
 800eea4:	2000      	movs	r0, #0
 800eea6:	e7e0      	b.n	800ee6a <_raise_r+0x12>

0800eea8 <raise>:
 800eea8:	4b02      	ldr	r3, [pc, #8]	; (800eeb4 <raise+0xc>)
 800eeaa:	4601      	mov	r1, r0
 800eeac:	6818      	ldr	r0, [r3, #0]
 800eeae:	f7ff bfd3 	b.w	800ee58 <_raise_r>
 800eeb2:	bf00      	nop
 800eeb4:	200000a0 	.word	0x200000a0

0800eeb8 <_kill_r>:
 800eeb8:	b538      	push	{r3, r4, r5, lr}
 800eeba:	4d07      	ldr	r5, [pc, #28]	; (800eed8 <_kill_r+0x20>)
 800eebc:	2300      	movs	r3, #0
 800eebe:	4604      	mov	r4, r0
 800eec0:	4608      	mov	r0, r1
 800eec2:	4611      	mov	r1, r2
 800eec4:	602b      	str	r3, [r5, #0]
 800eec6:	f7f7 fb7d 	bl	80065c4 <_kill>
 800eeca:	1c43      	adds	r3, r0, #1
 800eecc:	d102      	bne.n	800eed4 <_kill_r+0x1c>
 800eece:	682b      	ldr	r3, [r5, #0]
 800eed0:	b103      	cbz	r3, 800eed4 <_kill_r+0x1c>
 800eed2:	6023      	str	r3, [r4, #0]
 800eed4:	bd38      	pop	{r3, r4, r5, pc}
 800eed6:	bf00      	nop
 800eed8:	20000b40 	.word	0x20000b40

0800eedc <_getpid_r>:
 800eedc:	f7f7 bb6a 	b.w	80065b4 <_getpid>

0800eee0 <__sread>:
 800eee0:	b510      	push	{r4, lr}
 800eee2:	460c      	mov	r4, r1
 800eee4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800eee8:	f000 f894 	bl	800f014 <_read_r>
 800eeec:	2800      	cmp	r0, #0
 800eeee:	bfab      	itete	ge
 800eef0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800eef2:	89a3      	ldrhlt	r3, [r4, #12]
 800eef4:	181b      	addge	r3, r3, r0
 800eef6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800eefa:	bfac      	ite	ge
 800eefc:	6563      	strge	r3, [r4, #84]	; 0x54
 800eefe:	81a3      	strhlt	r3, [r4, #12]
 800ef00:	bd10      	pop	{r4, pc}

0800ef02 <__swrite>:
 800ef02:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ef06:	461f      	mov	r7, r3
 800ef08:	898b      	ldrh	r3, [r1, #12]
 800ef0a:	05db      	lsls	r3, r3, #23
 800ef0c:	4605      	mov	r5, r0
 800ef0e:	460c      	mov	r4, r1
 800ef10:	4616      	mov	r6, r2
 800ef12:	d505      	bpl.n	800ef20 <__swrite+0x1e>
 800ef14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800ef18:	2302      	movs	r3, #2
 800ef1a:	2200      	movs	r2, #0
 800ef1c:	f000 f868 	bl	800eff0 <_lseek_r>
 800ef20:	89a3      	ldrh	r3, [r4, #12]
 800ef22:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800ef26:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800ef2a:	81a3      	strh	r3, [r4, #12]
 800ef2c:	4632      	mov	r2, r6
 800ef2e:	463b      	mov	r3, r7
 800ef30:	4628      	mov	r0, r5
 800ef32:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ef36:	f000 b817 	b.w	800ef68 <_write_r>

0800ef3a <__sseek>:
 800ef3a:	b510      	push	{r4, lr}
 800ef3c:	460c      	mov	r4, r1
 800ef3e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800ef42:	f000 f855 	bl	800eff0 <_lseek_r>
 800ef46:	1c43      	adds	r3, r0, #1
 800ef48:	89a3      	ldrh	r3, [r4, #12]
 800ef4a:	bf15      	itete	ne
 800ef4c:	6560      	strne	r0, [r4, #84]	; 0x54
 800ef4e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800ef52:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800ef56:	81a3      	strheq	r3, [r4, #12]
 800ef58:	bf18      	it	ne
 800ef5a:	81a3      	strhne	r3, [r4, #12]
 800ef5c:	bd10      	pop	{r4, pc}

0800ef5e <__sclose>:
 800ef5e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800ef62:	f000 b813 	b.w	800ef8c <_close_r>
	...

0800ef68 <_write_r>:
 800ef68:	b538      	push	{r3, r4, r5, lr}
 800ef6a:	4d07      	ldr	r5, [pc, #28]	; (800ef88 <_write_r+0x20>)
 800ef6c:	4604      	mov	r4, r0
 800ef6e:	4608      	mov	r0, r1
 800ef70:	4611      	mov	r1, r2
 800ef72:	2200      	movs	r2, #0
 800ef74:	602a      	str	r2, [r5, #0]
 800ef76:	461a      	mov	r2, r3
 800ef78:	f7f7 fb5b 	bl	8006632 <_write>
 800ef7c:	1c43      	adds	r3, r0, #1
 800ef7e:	d102      	bne.n	800ef86 <_write_r+0x1e>
 800ef80:	682b      	ldr	r3, [r5, #0]
 800ef82:	b103      	cbz	r3, 800ef86 <_write_r+0x1e>
 800ef84:	6023      	str	r3, [r4, #0]
 800ef86:	bd38      	pop	{r3, r4, r5, pc}
 800ef88:	20000b40 	.word	0x20000b40

0800ef8c <_close_r>:
 800ef8c:	b538      	push	{r3, r4, r5, lr}
 800ef8e:	4d06      	ldr	r5, [pc, #24]	; (800efa8 <_close_r+0x1c>)
 800ef90:	2300      	movs	r3, #0
 800ef92:	4604      	mov	r4, r0
 800ef94:	4608      	mov	r0, r1
 800ef96:	602b      	str	r3, [r5, #0]
 800ef98:	f7f7 fb67 	bl	800666a <_close>
 800ef9c:	1c43      	adds	r3, r0, #1
 800ef9e:	d102      	bne.n	800efa6 <_close_r+0x1a>
 800efa0:	682b      	ldr	r3, [r5, #0]
 800efa2:	b103      	cbz	r3, 800efa6 <_close_r+0x1a>
 800efa4:	6023      	str	r3, [r4, #0]
 800efa6:	bd38      	pop	{r3, r4, r5, pc}
 800efa8:	20000b40 	.word	0x20000b40

0800efac <_fstat_r>:
 800efac:	b538      	push	{r3, r4, r5, lr}
 800efae:	4d07      	ldr	r5, [pc, #28]	; (800efcc <_fstat_r+0x20>)
 800efb0:	2300      	movs	r3, #0
 800efb2:	4604      	mov	r4, r0
 800efb4:	4608      	mov	r0, r1
 800efb6:	4611      	mov	r1, r2
 800efb8:	602b      	str	r3, [r5, #0]
 800efba:	f7f7 fb62 	bl	8006682 <_fstat>
 800efbe:	1c43      	adds	r3, r0, #1
 800efc0:	d102      	bne.n	800efc8 <_fstat_r+0x1c>
 800efc2:	682b      	ldr	r3, [r5, #0]
 800efc4:	b103      	cbz	r3, 800efc8 <_fstat_r+0x1c>
 800efc6:	6023      	str	r3, [r4, #0]
 800efc8:	bd38      	pop	{r3, r4, r5, pc}
 800efca:	bf00      	nop
 800efcc:	20000b40 	.word	0x20000b40

0800efd0 <_isatty_r>:
 800efd0:	b538      	push	{r3, r4, r5, lr}
 800efd2:	4d06      	ldr	r5, [pc, #24]	; (800efec <_isatty_r+0x1c>)
 800efd4:	2300      	movs	r3, #0
 800efd6:	4604      	mov	r4, r0
 800efd8:	4608      	mov	r0, r1
 800efda:	602b      	str	r3, [r5, #0]
 800efdc:	f7f7 fb61 	bl	80066a2 <_isatty>
 800efe0:	1c43      	adds	r3, r0, #1
 800efe2:	d102      	bne.n	800efea <_isatty_r+0x1a>
 800efe4:	682b      	ldr	r3, [r5, #0]
 800efe6:	b103      	cbz	r3, 800efea <_isatty_r+0x1a>
 800efe8:	6023      	str	r3, [r4, #0]
 800efea:	bd38      	pop	{r3, r4, r5, pc}
 800efec:	20000b40 	.word	0x20000b40

0800eff0 <_lseek_r>:
 800eff0:	b538      	push	{r3, r4, r5, lr}
 800eff2:	4d07      	ldr	r5, [pc, #28]	; (800f010 <_lseek_r+0x20>)
 800eff4:	4604      	mov	r4, r0
 800eff6:	4608      	mov	r0, r1
 800eff8:	4611      	mov	r1, r2
 800effa:	2200      	movs	r2, #0
 800effc:	602a      	str	r2, [r5, #0]
 800effe:	461a      	mov	r2, r3
 800f000:	f7f7 fb5a 	bl	80066b8 <_lseek>
 800f004:	1c43      	adds	r3, r0, #1
 800f006:	d102      	bne.n	800f00e <_lseek_r+0x1e>
 800f008:	682b      	ldr	r3, [r5, #0]
 800f00a:	b103      	cbz	r3, 800f00e <_lseek_r+0x1e>
 800f00c:	6023      	str	r3, [r4, #0]
 800f00e:	bd38      	pop	{r3, r4, r5, pc}
 800f010:	20000b40 	.word	0x20000b40

0800f014 <_read_r>:
 800f014:	b538      	push	{r3, r4, r5, lr}
 800f016:	4d07      	ldr	r5, [pc, #28]	; (800f034 <_read_r+0x20>)
 800f018:	4604      	mov	r4, r0
 800f01a:	4608      	mov	r0, r1
 800f01c:	4611      	mov	r1, r2
 800f01e:	2200      	movs	r2, #0
 800f020:	602a      	str	r2, [r5, #0]
 800f022:	461a      	mov	r2, r3
 800f024:	f7f7 fae8 	bl	80065f8 <_read>
 800f028:	1c43      	adds	r3, r0, #1
 800f02a:	d102      	bne.n	800f032 <_read_r+0x1e>
 800f02c:	682b      	ldr	r3, [r5, #0]
 800f02e:	b103      	cbz	r3, 800f032 <_read_r+0x1e>
 800f030:	6023      	str	r3, [r4, #0]
 800f032:	bd38      	pop	{r3, r4, r5, pc}
 800f034:	20000b40 	.word	0x20000b40

0800f038 <atan>:
 800f038:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f03c:	ec55 4b10 	vmov	r4, r5, d0
 800f040:	4bc3      	ldr	r3, [pc, #780]	; (800f350 <atan+0x318>)
 800f042:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 800f046:	429e      	cmp	r6, r3
 800f048:	46ab      	mov	fp, r5
 800f04a:	dd18      	ble.n	800f07e <atan+0x46>
 800f04c:	4bc1      	ldr	r3, [pc, #772]	; (800f354 <atan+0x31c>)
 800f04e:	429e      	cmp	r6, r3
 800f050:	dc01      	bgt.n	800f056 <atan+0x1e>
 800f052:	d109      	bne.n	800f068 <atan+0x30>
 800f054:	b144      	cbz	r4, 800f068 <atan+0x30>
 800f056:	4622      	mov	r2, r4
 800f058:	462b      	mov	r3, r5
 800f05a:	4620      	mov	r0, r4
 800f05c:	4629      	mov	r1, r5
 800f05e:	f7f1 f935 	bl	80002cc <__adddf3>
 800f062:	4604      	mov	r4, r0
 800f064:	460d      	mov	r5, r1
 800f066:	e006      	b.n	800f076 <atan+0x3e>
 800f068:	f1bb 0f00 	cmp.w	fp, #0
 800f06c:	f300 8131 	bgt.w	800f2d2 <atan+0x29a>
 800f070:	a59b      	add	r5, pc, #620	; (adr r5, 800f2e0 <atan+0x2a8>)
 800f072:	e9d5 4500 	ldrd	r4, r5, [r5]
 800f076:	ec45 4b10 	vmov	d0, r4, r5
 800f07a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f07e:	4bb6      	ldr	r3, [pc, #728]	; (800f358 <atan+0x320>)
 800f080:	429e      	cmp	r6, r3
 800f082:	dc14      	bgt.n	800f0ae <atan+0x76>
 800f084:	f1a3 73de 	sub.w	r3, r3, #29097984	; 0x1bc0000
 800f088:	429e      	cmp	r6, r3
 800f08a:	dc0d      	bgt.n	800f0a8 <atan+0x70>
 800f08c:	a396      	add	r3, pc, #600	; (adr r3, 800f2e8 <atan+0x2b0>)
 800f08e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f092:	ee10 0a10 	vmov	r0, s0
 800f096:	4629      	mov	r1, r5
 800f098:	f7f1 f918 	bl	80002cc <__adddf3>
 800f09c:	4baf      	ldr	r3, [pc, #700]	; (800f35c <atan+0x324>)
 800f09e:	2200      	movs	r2, #0
 800f0a0:	f7f1 fd5a 	bl	8000b58 <__aeabi_dcmpgt>
 800f0a4:	2800      	cmp	r0, #0
 800f0a6:	d1e6      	bne.n	800f076 <atan+0x3e>
 800f0a8:	f04f 3aff 	mov.w	sl, #4294967295
 800f0ac:	e02b      	b.n	800f106 <atan+0xce>
 800f0ae:	f000 f963 	bl	800f378 <fabs>
 800f0b2:	4bab      	ldr	r3, [pc, #684]	; (800f360 <atan+0x328>)
 800f0b4:	429e      	cmp	r6, r3
 800f0b6:	ec55 4b10 	vmov	r4, r5, d0
 800f0ba:	f300 80bf 	bgt.w	800f23c <atan+0x204>
 800f0be:	f5a3 2350 	sub.w	r3, r3, #851968	; 0xd0000
 800f0c2:	429e      	cmp	r6, r3
 800f0c4:	f300 80a0 	bgt.w	800f208 <atan+0x1d0>
 800f0c8:	ee10 2a10 	vmov	r2, s0
 800f0cc:	ee10 0a10 	vmov	r0, s0
 800f0d0:	462b      	mov	r3, r5
 800f0d2:	4629      	mov	r1, r5
 800f0d4:	f7f1 f8fa 	bl	80002cc <__adddf3>
 800f0d8:	4ba0      	ldr	r3, [pc, #640]	; (800f35c <atan+0x324>)
 800f0da:	2200      	movs	r2, #0
 800f0dc:	f7f1 f8f4 	bl	80002c8 <__aeabi_dsub>
 800f0e0:	2200      	movs	r2, #0
 800f0e2:	4606      	mov	r6, r0
 800f0e4:	460f      	mov	r7, r1
 800f0e6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800f0ea:	4620      	mov	r0, r4
 800f0ec:	4629      	mov	r1, r5
 800f0ee:	f7f1 f8ed 	bl	80002cc <__adddf3>
 800f0f2:	4602      	mov	r2, r0
 800f0f4:	460b      	mov	r3, r1
 800f0f6:	4630      	mov	r0, r6
 800f0f8:	4639      	mov	r1, r7
 800f0fa:	f7f1 fbc7 	bl	800088c <__aeabi_ddiv>
 800f0fe:	f04f 0a00 	mov.w	sl, #0
 800f102:	4604      	mov	r4, r0
 800f104:	460d      	mov	r5, r1
 800f106:	4622      	mov	r2, r4
 800f108:	462b      	mov	r3, r5
 800f10a:	4620      	mov	r0, r4
 800f10c:	4629      	mov	r1, r5
 800f10e:	f7f1 fa93 	bl	8000638 <__aeabi_dmul>
 800f112:	4602      	mov	r2, r0
 800f114:	460b      	mov	r3, r1
 800f116:	4680      	mov	r8, r0
 800f118:	4689      	mov	r9, r1
 800f11a:	f7f1 fa8d 	bl	8000638 <__aeabi_dmul>
 800f11e:	a374      	add	r3, pc, #464	; (adr r3, 800f2f0 <atan+0x2b8>)
 800f120:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f124:	4606      	mov	r6, r0
 800f126:	460f      	mov	r7, r1
 800f128:	f7f1 fa86 	bl	8000638 <__aeabi_dmul>
 800f12c:	a372      	add	r3, pc, #456	; (adr r3, 800f2f8 <atan+0x2c0>)
 800f12e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f132:	f7f1 f8cb 	bl	80002cc <__adddf3>
 800f136:	4632      	mov	r2, r6
 800f138:	463b      	mov	r3, r7
 800f13a:	f7f1 fa7d 	bl	8000638 <__aeabi_dmul>
 800f13e:	a370      	add	r3, pc, #448	; (adr r3, 800f300 <atan+0x2c8>)
 800f140:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f144:	f7f1 f8c2 	bl	80002cc <__adddf3>
 800f148:	4632      	mov	r2, r6
 800f14a:	463b      	mov	r3, r7
 800f14c:	f7f1 fa74 	bl	8000638 <__aeabi_dmul>
 800f150:	a36d      	add	r3, pc, #436	; (adr r3, 800f308 <atan+0x2d0>)
 800f152:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f156:	f7f1 f8b9 	bl	80002cc <__adddf3>
 800f15a:	4632      	mov	r2, r6
 800f15c:	463b      	mov	r3, r7
 800f15e:	f7f1 fa6b 	bl	8000638 <__aeabi_dmul>
 800f162:	a36b      	add	r3, pc, #428	; (adr r3, 800f310 <atan+0x2d8>)
 800f164:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f168:	f7f1 f8b0 	bl	80002cc <__adddf3>
 800f16c:	4632      	mov	r2, r6
 800f16e:	463b      	mov	r3, r7
 800f170:	f7f1 fa62 	bl	8000638 <__aeabi_dmul>
 800f174:	a368      	add	r3, pc, #416	; (adr r3, 800f318 <atan+0x2e0>)
 800f176:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f17a:	f7f1 f8a7 	bl	80002cc <__adddf3>
 800f17e:	4642      	mov	r2, r8
 800f180:	464b      	mov	r3, r9
 800f182:	f7f1 fa59 	bl	8000638 <__aeabi_dmul>
 800f186:	a366      	add	r3, pc, #408	; (adr r3, 800f320 <atan+0x2e8>)
 800f188:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f18c:	4680      	mov	r8, r0
 800f18e:	4689      	mov	r9, r1
 800f190:	4630      	mov	r0, r6
 800f192:	4639      	mov	r1, r7
 800f194:	f7f1 fa50 	bl	8000638 <__aeabi_dmul>
 800f198:	a363      	add	r3, pc, #396	; (adr r3, 800f328 <atan+0x2f0>)
 800f19a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f19e:	f7f1 f893 	bl	80002c8 <__aeabi_dsub>
 800f1a2:	4632      	mov	r2, r6
 800f1a4:	463b      	mov	r3, r7
 800f1a6:	f7f1 fa47 	bl	8000638 <__aeabi_dmul>
 800f1aa:	a361      	add	r3, pc, #388	; (adr r3, 800f330 <atan+0x2f8>)
 800f1ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f1b0:	f7f1 f88a 	bl	80002c8 <__aeabi_dsub>
 800f1b4:	4632      	mov	r2, r6
 800f1b6:	463b      	mov	r3, r7
 800f1b8:	f7f1 fa3e 	bl	8000638 <__aeabi_dmul>
 800f1bc:	a35e      	add	r3, pc, #376	; (adr r3, 800f338 <atan+0x300>)
 800f1be:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f1c2:	f7f1 f881 	bl	80002c8 <__aeabi_dsub>
 800f1c6:	4632      	mov	r2, r6
 800f1c8:	463b      	mov	r3, r7
 800f1ca:	f7f1 fa35 	bl	8000638 <__aeabi_dmul>
 800f1ce:	a35c      	add	r3, pc, #368	; (adr r3, 800f340 <atan+0x308>)
 800f1d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f1d4:	f7f1 f878 	bl	80002c8 <__aeabi_dsub>
 800f1d8:	4632      	mov	r2, r6
 800f1da:	463b      	mov	r3, r7
 800f1dc:	f7f1 fa2c 	bl	8000638 <__aeabi_dmul>
 800f1e0:	4602      	mov	r2, r0
 800f1e2:	460b      	mov	r3, r1
 800f1e4:	4640      	mov	r0, r8
 800f1e6:	4649      	mov	r1, r9
 800f1e8:	f7f1 f870 	bl	80002cc <__adddf3>
 800f1ec:	4622      	mov	r2, r4
 800f1ee:	462b      	mov	r3, r5
 800f1f0:	f7f1 fa22 	bl	8000638 <__aeabi_dmul>
 800f1f4:	f1ba 3fff 	cmp.w	sl, #4294967295
 800f1f8:	4602      	mov	r2, r0
 800f1fa:	460b      	mov	r3, r1
 800f1fc:	d14b      	bne.n	800f296 <atan+0x25e>
 800f1fe:	4620      	mov	r0, r4
 800f200:	4629      	mov	r1, r5
 800f202:	f7f1 f861 	bl	80002c8 <__aeabi_dsub>
 800f206:	e72c      	b.n	800f062 <atan+0x2a>
 800f208:	ee10 0a10 	vmov	r0, s0
 800f20c:	4b53      	ldr	r3, [pc, #332]	; (800f35c <atan+0x324>)
 800f20e:	2200      	movs	r2, #0
 800f210:	4629      	mov	r1, r5
 800f212:	f7f1 f859 	bl	80002c8 <__aeabi_dsub>
 800f216:	4b51      	ldr	r3, [pc, #324]	; (800f35c <atan+0x324>)
 800f218:	4606      	mov	r6, r0
 800f21a:	460f      	mov	r7, r1
 800f21c:	2200      	movs	r2, #0
 800f21e:	4620      	mov	r0, r4
 800f220:	4629      	mov	r1, r5
 800f222:	f7f1 f853 	bl	80002cc <__adddf3>
 800f226:	4602      	mov	r2, r0
 800f228:	460b      	mov	r3, r1
 800f22a:	4630      	mov	r0, r6
 800f22c:	4639      	mov	r1, r7
 800f22e:	f7f1 fb2d 	bl	800088c <__aeabi_ddiv>
 800f232:	f04f 0a01 	mov.w	sl, #1
 800f236:	4604      	mov	r4, r0
 800f238:	460d      	mov	r5, r1
 800f23a:	e764      	b.n	800f106 <atan+0xce>
 800f23c:	4b49      	ldr	r3, [pc, #292]	; (800f364 <atan+0x32c>)
 800f23e:	429e      	cmp	r6, r3
 800f240:	da1d      	bge.n	800f27e <atan+0x246>
 800f242:	ee10 0a10 	vmov	r0, s0
 800f246:	4b48      	ldr	r3, [pc, #288]	; (800f368 <atan+0x330>)
 800f248:	2200      	movs	r2, #0
 800f24a:	4629      	mov	r1, r5
 800f24c:	f7f1 f83c 	bl	80002c8 <__aeabi_dsub>
 800f250:	4b45      	ldr	r3, [pc, #276]	; (800f368 <atan+0x330>)
 800f252:	4606      	mov	r6, r0
 800f254:	460f      	mov	r7, r1
 800f256:	2200      	movs	r2, #0
 800f258:	4620      	mov	r0, r4
 800f25a:	4629      	mov	r1, r5
 800f25c:	f7f1 f9ec 	bl	8000638 <__aeabi_dmul>
 800f260:	4b3e      	ldr	r3, [pc, #248]	; (800f35c <atan+0x324>)
 800f262:	2200      	movs	r2, #0
 800f264:	f7f1 f832 	bl	80002cc <__adddf3>
 800f268:	4602      	mov	r2, r0
 800f26a:	460b      	mov	r3, r1
 800f26c:	4630      	mov	r0, r6
 800f26e:	4639      	mov	r1, r7
 800f270:	f7f1 fb0c 	bl	800088c <__aeabi_ddiv>
 800f274:	f04f 0a02 	mov.w	sl, #2
 800f278:	4604      	mov	r4, r0
 800f27a:	460d      	mov	r5, r1
 800f27c:	e743      	b.n	800f106 <atan+0xce>
 800f27e:	462b      	mov	r3, r5
 800f280:	ee10 2a10 	vmov	r2, s0
 800f284:	4939      	ldr	r1, [pc, #228]	; (800f36c <atan+0x334>)
 800f286:	2000      	movs	r0, #0
 800f288:	f7f1 fb00 	bl	800088c <__aeabi_ddiv>
 800f28c:	f04f 0a03 	mov.w	sl, #3
 800f290:	4604      	mov	r4, r0
 800f292:	460d      	mov	r5, r1
 800f294:	e737      	b.n	800f106 <atan+0xce>
 800f296:	4b36      	ldr	r3, [pc, #216]	; (800f370 <atan+0x338>)
 800f298:	4e36      	ldr	r6, [pc, #216]	; (800f374 <atan+0x33c>)
 800f29a:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 800f29e:	eb03 0aca 	add.w	sl, r3, sl, lsl #3
 800f2a2:	e9da 2300 	ldrd	r2, r3, [sl]
 800f2a6:	f7f1 f80f 	bl	80002c8 <__aeabi_dsub>
 800f2aa:	4622      	mov	r2, r4
 800f2ac:	462b      	mov	r3, r5
 800f2ae:	f7f1 f80b 	bl	80002c8 <__aeabi_dsub>
 800f2b2:	4602      	mov	r2, r0
 800f2b4:	460b      	mov	r3, r1
 800f2b6:	e9d6 0100 	ldrd	r0, r1, [r6]
 800f2ba:	f7f1 f805 	bl	80002c8 <__aeabi_dsub>
 800f2be:	f1bb 0f00 	cmp.w	fp, #0
 800f2c2:	4604      	mov	r4, r0
 800f2c4:	460d      	mov	r5, r1
 800f2c6:	f6bf aed6 	bge.w	800f076 <atan+0x3e>
 800f2ca:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800f2ce:	461d      	mov	r5, r3
 800f2d0:	e6d1      	b.n	800f076 <atan+0x3e>
 800f2d2:	a51d      	add	r5, pc, #116	; (adr r5, 800f348 <atan+0x310>)
 800f2d4:	e9d5 4500 	ldrd	r4, r5, [r5]
 800f2d8:	e6cd      	b.n	800f076 <atan+0x3e>
 800f2da:	bf00      	nop
 800f2dc:	f3af 8000 	nop.w
 800f2e0:	54442d18 	.word	0x54442d18
 800f2e4:	bff921fb 	.word	0xbff921fb
 800f2e8:	8800759c 	.word	0x8800759c
 800f2ec:	7e37e43c 	.word	0x7e37e43c
 800f2f0:	e322da11 	.word	0xe322da11
 800f2f4:	3f90ad3a 	.word	0x3f90ad3a
 800f2f8:	24760deb 	.word	0x24760deb
 800f2fc:	3fa97b4b 	.word	0x3fa97b4b
 800f300:	a0d03d51 	.word	0xa0d03d51
 800f304:	3fb10d66 	.word	0x3fb10d66
 800f308:	c54c206e 	.word	0xc54c206e
 800f30c:	3fb745cd 	.word	0x3fb745cd
 800f310:	920083ff 	.word	0x920083ff
 800f314:	3fc24924 	.word	0x3fc24924
 800f318:	5555550d 	.word	0x5555550d
 800f31c:	3fd55555 	.word	0x3fd55555
 800f320:	2c6a6c2f 	.word	0x2c6a6c2f
 800f324:	bfa2b444 	.word	0xbfa2b444
 800f328:	52defd9a 	.word	0x52defd9a
 800f32c:	3fadde2d 	.word	0x3fadde2d
 800f330:	af749a6d 	.word	0xaf749a6d
 800f334:	3fb3b0f2 	.word	0x3fb3b0f2
 800f338:	fe231671 	.word	0xfe231671
 800f33c:	3fbc71c6 	.word	0x3fbc71c6
 800f340:	9998ebc4 	.word	0x9998ebc4
 800f344:	3fc99999 	.word	0x3fc99999
 800f348:	54442d18 	.word	0x54442d18
 800f34c:	3ff921fb 	.word	0x3ff921fb
 800f350:	440fffff 	.word	0x440fffff
 800f354:	7ff00000 	.word	0x7ff00000
 800f358:	3fdbffff 	.word	0x3fdbffff
 800f35c:	3ff00000 	.word	0x3ff00000
 800f360:	3ff2ffff 	.word	0x3ff2ffff
 800f364:	40038000 	.word	0x40038000
 800f368:	3ff80000 	.word	0x3ff80000
 800f36c:	bff00000 	.word	0xbff00000
 800f370:	08010a48 	.word	0x08010a48
 800f374:	08010a28 	.word	0x08010a28

0800f378 <fabs>:
 800f378:	ec51 0b10 	vmov	r0, r1, d0
 800f37c:	ee10 2a10 	vmov	r2, s0
 800f380:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 800f384:	ec43 2b10 	vmov	d0, r2, r3
 800f388:	4770      	bx	lr
 800f38a:	0000      	movs	r0, r0
 800f38c:	0000      	movs	r0, r0
	...

0800f390 <tan>:
 800f390:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f392:	ec53 2b10 	vmov	r2, r3, d0
 800f396:	4816      	ldr	r0, [pc, #88]	; (800f3f0 <tan+0x60>)
 800f398:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 800f39c:	4281      	cmp	r1, r0
 800f39e:	dc07      	bgt.n	800f3b0 <tan+0x20>
 800f3a0:	ed9f 1b11 	vldr	d1, [pc, #68]	; 800f3e8 <tan+0x58>
 800f3a4:	2001      	movs	r0, #1
 800f3a6:	b005      	add	sp, #20
 800f3a8:	f85d eb04 	ldr.w	lr, [sp], #4
 800f3ac:	f000 bd80 	b.w	800feb0 <__kernel_tan>
 800f3b0:	4810      	ldr	r0, [pc, #64]	; (800f3f4 <tan+0x64>)
 800f3b2:	4281      	cmp	r1, r0
 800f3b4:	dd09      	ble.n	800f3ca <tan+0x3a>
 800f3b6:	ee10 0a10 	vmov	r0, s0
 800f3ba:	4619      	mov	r1, r3
 800f3bc:	f7f0 ff84 	bl	80002c8 <__aeabi_dsub>
 800f3c0:	ec41 0b10 	vmov	d0, r0, r1
 800f3c4:	b005      	add	sp, #20
 800f3c6:	f85d fb04 	ldr.w	pc, [sp], #4
 800f3ca:	4668      	mov	r0, sp
 800f3cc:	f000 f814 	bl	800f3f8 <__ieee754_rem_pio2>
 800f3d0:	0040      	lsls	r0, r0, #1
 800f3d2:	f000 0002 	and.w	r0, r0, #2
 800f3d6:	ed9d 1b02 	vldr	d1, [sp, #8]
 800f3da:	ed9d 0b00 	vldr	d0, [sp]
 800f3de:	f1c0 0001 	rsb	r0, r0, #1
 800f3e2:	f000 fd65 	bl	800feb0 <__kernel_tan>
 800f3e6:	e7ed      	b.n	800f3c4 <tan+0x34>
	...
 800f3f0:	3fe921fb 	.word	0x3fe921fb
 800f3f4:	7fefffff 	.word	0x7fefffff

0800f3f8 <__ieee754_rem_pio2>:
 800f3f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f3fc:	ed2d 8b02 	vpush	{d8}
 800f400:	ec55 4b10 	vmov	r4, r5, d0
 800f404:	4bca      	ldr	r3, [pc, #808]	; (800f730 <__ieee754_rem_pio2+0x338>)
 800f406:	b08b      	sub	sp, #44	; 0x2c
 800f408:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 800f40c:	4598      	cmp	r8, r3
 800f40e:	4682      	mov	sl, r0
 800f410:	9502      	str	r5, [sp, #8]
 800f412:	dc08      	bgt.n	800f426 <__ieee754_rem_pio2+0x2e>
 800f414:	2200      	movs	r2, #0
 800f416:	2300      	movs	r3, #0
 800f418:	ed80 0b00 	vstr	d0, [r0]
 800f41c:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800f420:	f04f 0b00 	mov.w	fp, #0
 800f424:	e028      	b.n	800f478 <__ieee754_rem_pio2+0x80>
 800f426:	4bc3      	ldr	r3, [pc, #780]	; (800f734 <__ieee754_rem_pio2+0x33c>)
 800f428:	4598      	cmp	r8, r3
 800f42a:	dc78      	bgt.n	800f51e <__ieee754_rem_pio2+0x126>
 800f42c:	9b02      	ldr	r3, [sp, #8]
 800f42e:	4ec2      	ldr	r6, [pc, #776]	; (800f738 <__ieee754_rem_pio2+0x340>)
 800f430:	2b00      	cmp	r3, #0
 800f432:	ee10 0a10 	vmov	r0, s0
 800f436:	a3b0      	add	r3, pc, #704	; (adr r3, 800f6f8 <__ieee754_rem_pio2+0x300>)
 800f438:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f43c:	4629      	mov	r1, r5
 800f43e:	dd39      	ble.n	800f4b4 <__ieee754_rem_pio2+0xbc>
 800f440:	f7f0 ff42 	bl	80002c8 <__aeabi_dsub>
 800f444:	45b0      	cmp	r8, r6
 800f446:	4604      	mov	r4, r0
 800f448:	460d      	mov	r5, r1
 800f44a:	d01b      	beq.n	800f484 <__ieee754_rem_pio2+0x8c>
 800f44c:	a3ac      	add	r3, pc, #688	; (adr r3, 800f700 <__ieee754_rem_pio2+0x308>)
 800f44e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f452:	f7f0 ff39 	bl	80002c8 <__aeabi_dsub>
 800f456:	4602      	mov	r2, r0
 800f458:	460b      	mov	r3, r1
 800f45a:	e9ca 2300 	strd	r2, r3, [sl]
 800f45e:	4620      	mov	r0, r4
 800f460:	4629      	mov	r1, r5
 800f462:	f7f0 ff31 	bl	80002c8 <__aeabi_dsub>
 800f466:	a3a6      	add	r3, pc, #664	; (adr r3, 800f700 <__ieee754_rem_pio2+0x308>)
 800f468:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f46c:	f7f0 ff2c 	bl	80002c8 <__aeabi_dsub>
 800f470:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800f474:	f04f 0b01 	mov.w	fp, #1
 800f478:	4658      	mov	r0, fp
 800f47a:	b00b      	add	sp, #44	; 0x2c
 800f47c:	ecbd 8b02 	vpop	{d8}
 800f480:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f484:	a3a0      	add	r3, pc, #640	; (adr r3, 800f708 <__ieee754_rem_pio2+0x310>)
 800f486:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f48a:	f7f0 ff1d 	bl	80002c8 <__aeabi_dsub>
 800f48e:	a3a0      	add	r3, pc, #640	; (adr r3, 800f710 <__ieee754_rem_pio2+0x318>)
 800f490:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f494:	4604      	mov	r4, r0
 800f496:	460d      	mov	r5, r1
 800f498:	f7f0 ff16 	bl	80002c8 <__aeabi_dsub>
 800f49c:	4602      	mov	r2, r0
 800f49e:	460b      	mov	r3, r1
 800f4a0:	e9ca 2300 	strd	r2, r3, [sl]
 800f4a4:	4620      	mov	r0, r4
 800f4a6:	4629      	mov	r1, r5
 800f4a8:	f7f0 ff0e 	bl	80002c8 <__aeabi_dsub>
 800f4ac:	a398      	add	r3, pc, #608	; (adr r3, 800f710 <__ieee754_rem_pio2+0x318>)
 800f4ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f4b2:	e7db      	b.n	800f46c <__ieee754_rem_pio2+0x74>
 800f4b4:	f7f0 ff0a 	bl	80002cc <__adddf3>
 800f4b8:	45b0      	cmp	r8, r6
 800f4ba:	4604      	mov	r4, r0
 800f4bc:	460d      	mov	r5, r1
 800f4be:	d016      	beq.n	800f4ee <__ieee754_rem_pio2+0xf6>
 800f4c0:	a38f      	add	r3, pc, #572	; (adr r3, 800f700 <__ieee754_rem_pio2+0x308>)
 800f4c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f4c6:	f7f0 ff01 	bl	80002cc <__adddf3>
 800f4ca:	4602      	mov	r2, r0
 800f4cc:	460b      	mov	r3, r1
 800f4ce:	e9ca 2300 	strd	r2, r3, [sl]
 800f4d2:	4620      	mov	r0, r4
 800f4d4:	4629      	mov	r1, r5
 800f4d6:	f7f0 fef7 	bl	80002c8 <__aeabi_dsub>
 800f4da:	a389      	add	r3, pc, #548	; (adr r3, 800f700 <__ieee754_rem_pio2+0x308>)
 800f4dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f4e0:	f7f0 fef4 	bl	80002cc <__adddf3>
 800f4e4:	f04f 3bff 	mov.w	fp, #4294967295
 800f4e8:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800f4ec:	e7c4      	b.n	800f478 <__ieee754_rem_pio2+0x80>
 800f4ee:	a386      	add	r3, pc, #536	; (adr r3, 800f708 <__ieee754_rem_pio2+0x310>)
 800f4f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f4f4:	f7f0 feea 	bl	80002cc <__adddf3>
 800f4f8:	a385      	add	r3, pc, #532	; (adr r3, 800f710 <__ieee754_rem_pio2+0x318>)
 800f4fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f4fe:	4604      	mov	r4, r0
 800f500:	460d      	mov	r5, r1
 800f502:	f7f0 fee3 	bl	80002cc <__adddf3>
 800f506:	4602      	mov	r2, r0
 800f508:	460b      	mov	r3, r1
 800f50a:	e9ca 2300 	strd	r2, r3, [sl]
 800f50e:	4620      	mov	r0, r4
 800f510:	4629      	mov	r1, r5
 800f512:	f7f0 fed9 	bl	80002c8 <__aeabi_dsub>
 800f516:	a37e      	add	r3, pc, #504	; (adr r3, 800f710 <__ieee754_rem_pio2+0x318>)
 800f518:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f51c:	e7e0      	b.n	800f4e0 <__ieee754_rem_pio2+0xe8>
 800f51e:	4b87      	ldr	r3, [pc, #540]	; (800f73c <__ieee754_rem_pio2+0x344>)
 800f520:	4598      	cmp	r8, r3
 800f522:	f300 80d9 	bgt.w	800f6d8 <__ieee754_rem_pio2+0x2e0>
 800f526:	f7ff ff27 	bl	800f378 <fabs>
 800f52a:	ec55 4b10 	vmov	r4, r5, d0
 800f52e:	ee10 0a10 	vmov	r0, s0
 800f532:	a379      	add	r3, pc, #484	; (adr r3, 800f718 <__ieee754_rem_pio2+0x320>)
 800f534:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f538:	4629      	mov	r1, r5
 800f53a:	f7f1 f87d 	bl	8000638 <__aeabi_dmul>
 800f53e:	4b80      	ldr	r3, [pc, #512]	; (800f740 <__ieee754_rem_pio2+0x348>)
 800f540:	2200      	movs	r2, #0
 800f542:	f7f0 fec3 	bl	80002cc <__adddf3>
 800f546:	f7f1 fb27 	bl	8000b98 <__aeabi_d2iz>
 800f54a:	4683      	mov	fp, r0
 800f54c:	f7f1 f80a 	bl	8000564 <__aeabi_i2d>
 800f550:	4602      	mov	r2, r0
 800f552:	460b      	mov	r3, r1
 800f554:	ec43 2b18 	vmov	d8, r2, r3
 800f558:	a367      	add	r3, pc, #412	; (adr r3, 800f6f8 <__ieee754_rem_pio2+0x300>)
 800f55a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f55e:	f7f1 f86b 	bl	8000638 <__aeabi_dmul>
 800f562:	4602      	mov	r2, r0
 800f564:	460b      	mov	r3, r1
 800f566:	4620      	mov	r0, r4
 800f568:	4629      	mov	r1, r5
 800f56a:	f7f0 fead 	bl	80002c8 <__aeabi_dsub>
 800f56e:	a364      	add	r3, pc, #400	; (adr r3, 800f700 <__ieee754_rem_pio2+0x308>)
 800f570:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f574:	4606      	mov	r6, r0
 800f576:	460f      	mov	r7, r1
 800f578:	ec51 0b18 	vmov	r0, r1, d8
 800f57c:	f7f1 f85c 	bl	8000638 <__aeabi_dmul>
 800f580:	f1bb 0f1f 	cmp.w	fp, #31
 800f584:	4604      	mov	r4, r0
 800f586:	460d      	mov	r5, r1
 800f588:	dc0d      	bgt.n	800f5a6 <__ieee754_rem_pio2+0x1ae>
 800f58a:	4b6e      	ldr	r3, [pc, #440]	; (800f744 <__ieee754_rem_pio2+0x34c>)
 800f58c:	f10b 32ff 	add.w	r2, fp, #4294967295
 800f590:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800f594:	4543      	cmp	r3, r8
 800f596:	d006      	beq.n	800f5a6 <__ieee754_rem_pio2+0x1ae>
 800f598:	4622      	mov	r2, r4
 800f59a:	462b      	mov	r3, r5
 800f59c:	4630      	mov	r0, r6
 800f59e:	4639      	mov	r1, r7
 800f5a0:	f7f0 fe92 	bl	80002c8 <__aeabi_dsub>
 800f5a4:	e00f      	b.n	800f5c6 <__ieee754_rem_pio2+0x1ce>
 800f5a6:	462b      	mov	r3, r5
 800f5a8:	4622      	mov	r2, r4
 800f5aa:	4630      	mov	r0, r6
 800f5ac:	4639      	mov	r1, r7
 800f5ae:	f7f0 fe8b 	bl	80002c8 <__aeabi_dsub>
 800f5b2:	ea4f 5328 	mov.w	r3, r8, asr #20
 800f5b6:	9303      	str	r3, [sp, #12]
 800f5b8:	f3c1 530a 	ubfx	r3, r1, #20, #11
 800f5bc:	ebc3 5818 	rsb	r8, r3, r8, lsr #20
 800f5c0:	f1b8 0f10 	cmp.w	r8, #16
 800f5c4:	dc02      	bgt.n	800f5cc <__ieee754_rem_pio2+0x1d4>
 800f5c6:	e9ca 0100 	strd	r0, r1, [sl]
 800f5ca:	e039      	b.n	800f640 <__ieee754_rem_pio2+0x248>
 800f5cc:	a34e      	add	r3, pc, #312	; (adr r3, 800f708 <__ieee754_rem_pio2+0x310>)
 800f5ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f5d2:	ec51 0b18 	vmov	r0, r1, d8
 800f5d6:	f7f1 f82f 	bl	8000638 <__aeabi_dmul>
 800f5da:	4604      	mov	r4, r0
 800f5dc:	460d      	mov	r5, r1
 800f5de:	4602      	mov	r2, r0
 800f5e0:	460b      	mov	r3, r1
 800f5e2:	4630      	mov	r0, r6
 800f5e4:	4639      	mov	r1, r7
 800f5e6:	f7f0 fe6f 	bl	80002c8 <__aeabi_dsub>
 800f5ea:	4602      	mov	r2, r0
 800f5ec:	460b      	mov	r3, r1
 800f5ee:	4680      	mov	r8, r0
 800f5f0:	4689      	mov	r9, r1
 800f5f2:	4630      	mov	r0, r6
 800f5f4:	4639      	mov	r1, r7
 800f5f6:	f7f0 fe67 	bl	80002c8 <__aeabi_dsub>
 800f5fa:	4622      	mov	r2, r4
 800f5fc:	462b      	mov	r3, r5
 800f5fe:	f7f0 fe63 	bl	80002c8 <__aeabi_dsub>
 800f602:	a343      	add	r3, pc, #268	; (adr r3, 800f710 <__ieee754_rem_pio2+0x318>)
 800f604:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f608:	4604      	mov	r4, r0
 800f60a:	460d      	mov	r5, r1
 800f60c:	ec51 0b18 	vmov	r0, r1, d8
 800f610:	f7f1 f812 	bl	8000638 <__aeabi_dmul>
 800f614:	4622      	mov	r2, r4
 800f616:	462b      	mov	r3, r5
 800f618:	f7f0 fe56 	bl	80002c8 <__aeabi_dsub>
 800f61c:	4602      	mov	r2, r0
 800f61e:	460b      	mov	r3, r1
 800f620:	4604      	mov	r4, r0
 800f622:	460d      	mov	r5, r1
 800f624:	4640      	mov	r0, r8
 800f626:	4649      	mov	r1, r9
 800f628:	f7f0 fe4e 	bl	80002c8 <__aeabi_dsub>
 800f62c:	9a03      	ldr	r2, [sp, #12]
 800f62e:	f3c1 530a 	ubfx	r3, r1, #20, #11
 800f632:	1ad3      	subs	r3, r2, r3
 800f634:	2b31      	cmp	r3, #49	; 0x31
 800f636:	dc24      	bgt.n	800f682 <__ieee754_rem_pio2+0x28a>
 800f638:	e9ca 0100 	strd	r0, r1, [sl]
 800f63c:	4646      	mov	r6, r8
 800f63e:	464f      	mov	r7, r9
 800f640:	e9da 8900 	ldrd	r8, r9, [sl]
 800f644:	4630      	mov	r0, r6
 800f646:	4642      	mov	r2, r8
 800f648:	464b      	mov	r3, r9
 800f64a:	4639      	mov	r1, r7
 800f64c:	f7f0 fe3c 	bl	80002c8 <__aeabi_dsub>
 800f650:	462b      	mov	r3, r5
 800f652:	4622      	mov	r2, r4
 800f654:	f7f0 fe38 	bl	80002c8 <__aeabi_dsub>
 800f658:	9b02      	ldr	r3, [sp, #8]
 800f65a:	2b00      	cmp	r3, #0
 800f65c:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800f660:	f6bf af0a 	bge.w	800f478 <__ieee754_rem_pio2+0x80>
 800f664:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800f668:	f8ca 3004 	str.w	r3, [sl, #4]
 800f66c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800f670:	f8ca 8000 	str.w	r8, [sl]
 800f674:	f8ca 0008 	str.w	r0, [sl, #8]
 800f678:	f8ca 300c 	str.w	r3, [sl, #12]
 800f67c:	f1cb 0b00 	rsb	fp, fp, #0
 800f680:	e6fa      	b.n	800f478 <__ieee754_rem_pio2+0x80>
 800f682:	a327      	add	r3, pc, #156	; (adr r3, 800f720 <__ieee754_rem_pio2+0x328>)
 800f684:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f688:	ec51 0b18 	vmov	r0, r1, d8
 800f68c:	f7f0 ffd4 	bl	8000638 <__aeabi_dmul>
 800f690:	4604      	mov	r4, r0
 800f692:	460d      	mov	r5, r1
 800f694:	4602      	mov	r2, r0
 800f696:	460b      	mov	r3, r1
 800f698:	4640      	mov	r0, r8
 800f69a:	4649      	mov	r1, r9
 800f69c:	f7f0 fe14 	bl	80002c8 <__aeabi_dsub>
 800f6a0:	4602      	mov	r2, r0
 800f6a2:	460b      	mov	r3, r1
 800f6a4:	4606      	mov	r6, r0
 800f6a6:	460f      	mov	r7, r1
 800f6a8:	4640      	mov	r0, r8
 800f6aa:	4649      	mov	r1, r9
 800f6ac:	f7f0 fe0c 	bl	80002c8 <__aeabi_dsub>
 800f6b0:	4622      	mov	r2, r4
 800f6b2:	462b      	mov	r3, r5
 800f6b4:	f7f0 fe08 	bl	80002c8 <__aeabi_dsub>
 800f6b8:	a31b      	add	r3, pc, #108	; (adr r3, 800f728 <__ieee754_rem_pio2+0x330>)
 800f6ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f6be:	4604      	mov	r4, r0
 800f6c0:	460d      	mov	r5, r1
 800f6c2:	ec51 0b18 	vmov	r0, r1, d8
 800f6c6:	f7f0 ffb7 	bl	8000638 <__aeabi_dmul>
 800f6ca:	4622      	mov	r2, r4
 800f6cc:	462b      	mov	r3, r5
 800f6ce:	f7f0 fdfb 	bl	80002c8 <__aeabi_dsub>
 800f6d2:	4604      	mov	r4, r0
 800f6d4:	460d      	mov	r5, r1
 800f6d6:	e75f      	b.n	800f598 <__ieee754_rem_pio2+0x1a0>
 800f6d8:	4b1b      	ldr	r3, [pc, #108]	; (800f748 <__ieee754_rem_pio2+0x350>)
 800f6da:	4598      	cmp	r8, r3
 800f6dc:	dd36      	ble.n	800f74c <__ieee754_rem_pio2+0x354>
 800f6de:	ee10 2a10 	vmov	r2, s0
 800f6e2:	462b      	mov	r3, r5
 800f6e4:	4620      	mov	r0, r4
 800f6e6:	4629      	mov	r1, r5
 800f6e8:	f7f0 fdee 	bl	80002c8 <__aeabi_dsub>
 800f6ec:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800f6f0:	e9ca 0100 	strd	r0, r1, [sl]
 800f6f4:	e694      	b.n	800f420 <__ieee754_rem_pio2+0x28>
 800f6f6:	bf00      	nop
 800f6f8:	54400000 	.word	0x54400000
 800f6fc:	3ff921fb 	.word	0x3ff921fb
 800f700:	1a626331 	.word	0x1a626331
 800f704:	3dd0b461 	.word	0x3dd0b461
 800f708:	1a600000 	.word	0x1a600000
 800f70c:	3dd0b461 	.word	0x3dd0b461
 800f710:	2e037073 	.word	0x2e037073
 800f714:	3ba3198a 	.word	0x3ba3198a
 800f718:	6dc9c883 	.word	0x6dc9c883
 800f71c:	3fe45f30 	.word	0x3fe45f30
 800f720:	2e000000 	.word	0x2e000000
 800f724:	3ba3198a 	.word	0x3ba3198a
 800f728:	252049c1 	.word	0x252049c1
 800f72c:	397b839a 	.word	0x397b839a
 800f730:	3fe921fb 	.word	0x3fe921fb
 800f734:	4002d97b 	.word	0x4002d97b
 800f738:	3ff921fb 	.word	0x3ff921fb
 800f73c:	413921fb 	.word	0x413921fb
 800f740:	3fe00000 	.word	0x3fe00000
 800f744:	08010a68 	.word	0x08010a68
 800f748:	7fefffff 	.word	0x7fefffff
 800f74c:	ea4f 5428 	mov.w	r4, r8, asr #20
 800f750:	f2a4 4416 	subw	r4, r4, #1046	; 0x416
 800f754:	ee10 0a10 	vmov	r0, s0
 800f758:	eba8 5104 	sub.w	r1, r8, r4, lsl #20
 800f75c:	ee10 6a10 	vmov	r6, s0
 800f760:	460f      	mov	r7, r1
 800f762:	f7f1 fa19 	bl	8000b98 <__aeabi_d2iz>
 800f766:	f7f0 fefd 	bl	8000564 <__aeabi_i2d>
 800f76a:	4602      	mov	r2, r0
 800f76c:	460b      	mov	r3, r1
 800f76e:	4630      	mov	r0, r6
 800f770:	4639      	mov	r1, r7
 800f772:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800f776:	f7f0 fda7 	bl	80002c8 <__aeabi_dsub>
 800f77a:	4b23      	ldr	r3, [pc, #140]	; (800f808 <__ieee754_rem_pio2+0x410>)
 800f77c:	2200      	movs	r2, #0
 800f77e:	f7f0 ff5b 	bl	8000638 <__aeabi_dmul>
 800f782:	460f      	mov	r7, r1
 800f784:	4606      	mov	r6, r0
 800f786:	f7f1 fa07 	bl	8000b98 <__aeabi_d2iz>
 800f78a:	f7f0 feeb 	bl	8000564 <__aeabi_i2d>
 800f78e:	4602      	mov	r2, r0
 800f790:	460b      	mov	r3, r1
 800f792:	4630      	mov	r0, r6
 800f794:	4639      	mov	r1, r7
 800f796:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800f79a:	f7f0 fd95 	bl	80002c8 <__aeabi_dsub>
 800f79e:	4b1a      	ldr	r3, [pc, #104]	; (800f808 <__ieee754_rem_pio2+0x410>)
 800f7a0:	2200      	movs	r2, #0
 800f7a2:	f7f0 ff49 	bl	8000638 <__aeabi_dmul>
 800f7a6:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800f7aa:	ad04      	add	r5, sp, #16
 800f7ac:	f04f 0803 	mov.w	r8, #3
 800f7b0:	46a9      	mov	r9, r5
 800f7b2:	2600      	movs	r6, #0
 800f7b4:	2700      	movs	r7, #0
 800f7b6:	4632      	mov	r2, r6
 800f7b8:	463b      	mov	r3, r7
 800f7ba:	e9d5 0104 	ldrd	r0, r1, [r5, #16]
 800f7be:	46c3      	mov	fp, r8
 800f7c0:	3d08      	subs	r5, #8
 800f7c2:	f108 38ff 	add.w	r8, r8, #4294967295
 800f7c6:	f7f1 f99f 	bl	8000b08 <__aeabi_dcmpeq>
 800f7ca:	2800      	cmp	r0, #0
 800f7cc:	d1f3      	bne.n	800f7b6 <__ieee754_rem_pio2+0x3be>
 800f7ce:	4b0f      	ldr	r3, [pc, #60]	; (800f80c <__ieee754_rem_pio2+0x414>)
 800f7d0:	9301      	str	r3, [sp, #4]
 800f7d2:	2302      	movs	r3, #2
 800f7d4:	9300      	str	r3, [sp, #0]
 800f7d6:	4622      	mov	r2, r4
 800f7d8:	465b      	mov	r3, fp
 800f7da:	4651      	mov	r1, sl
 800f7dc:	4648      	mov	r0, r9
 800f7de:	f000 f817 	bl	800f810 <__kernel_rem_pio2>
 800f7e2:	9b02      	ldr	r3, [sp, #8]
 800f7e4:	2b00      	cmp	r3, #0
 800f7e6:	4683      	mov	fp, r0
 800f7e8:	f6bf ae46 	bge.w	800f478 <__ieee754_rem_pio2+0x80>
 800f7ec:	e9da 2100 	ldrd	r2, r1, [sl]
 800f7f0:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800f7f4:	e9ca 2300 	strd	r2, r3, [sl]
 800f7f8:	e9da 2102 	ldrd	r2, r1, [sl, #8]
 800f7fc:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800f800:	e9ca 2302 	strd	r2, r3, [sl, #8]
 800f804:	e73a      	b.n	800f67c <__ieee754_rem_pio2+0x284>
 800f806:	bf00      	nop
 800f808:	41700000 	.word	0x41700000
 800f80c:	08010ae8 	.word	0x08010ae8

0800f810 <__kernel_rem_pio2>:
 800f810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f814:	ed2d 8b02 	vpush	{d8}
 800f818:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
 800f81c:	f112 0f14 	cmn.w	r2, #20
 800f820:	9308      	str	r3, [sp, #32]
 800f822:	9101      	str	r1, [sp, #4]
 800f824:	4bc4      	ldr	r3, [pc, #784]	; (800fb38 <__kernel_rem_pio2+0x328>)
 800f826:	99a6      	ldr	r1, [sp, #664]	; 0x298
 800f828:	900b      	str	r0, [sp, #44]	; 0x2c
 800f82a:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800f82e:	9302      	str	r3, [sp, #8]
 800f830:	9b08      	ldr	r3, [sp, #32]
 800f832:	f103 33ff 	add.w	r3, r3, #4294967295
 800f836:	bfa8      	it	ge
 800f838:	1ed4      	subge	r4, r2, #3
 800f83a:	9306      	str	r3, [sp, #24]
 800f83c:	bfb2      	itee	lt
 800f83e:	2400      	movlt	r4, #0
 800f840:	2318      	movge	r3, #24
 800f842:	fb94 f4f3 	sdivge	r4, r4, r3
 800f846:	f06f 0317 	mvn.w	r3, #23
 800f84a:	fb04 3303 	mla	r3, r4, r3, r3
 800f84e:	eb03 0a02 	add.w	sl, r3, r2
 800f852:	9b02      	ldr	r3, [sp, #8]
 800f854:	9a06      	ldr	r2, [sp, #24]
 800f856:	ed9f 8bb4 	vldr	d8, [pc, #720]	; 800fb28 <__kernel_rem_pio2+0x318>
 800f85a:	eb03 0802 	add.w	r8, r3, r2
 800f85e:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 800f860:	1aa7      	subs	r7, r4, r2
 800f862:	ae22      	add	r6, sp, #136	; 0x88
 800f864:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 800f868:	2500      	movs	r5, #0
 800f86a:	4545      	cmp	r5, r8
 800f86c:	dd13      	ble.n	800f896 <__kernel_rem_pio2+0x86>
 800f86e:	9b08      	ldr	r3, [sp, #32]
 800f870:	ed9f 8bad 	vldr	d8, [pc, #692]	; 800fb28 <__kernel_rem_pio2+0x318>
 800f874:	aa22      	add	r2, sp, #136	; 0x88
 800f876:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 800f87a:	f50d 7be4 	add.w	fp, sp, #456	; 0x1c8
 800f87e:	f04f 0800 	mov.w	r8, #0
 800f882:	9b02      	ldr	r3, [sp, #8]
 800f884:	4598      	cmp	r8, r3
 800f886:	dc2f      	bgt.n	800f8e8 <__kernel_rem_pio2+0xd8>
 800f888:	ed8d 8b04 	vstr	d8, [sp, #16]
 800f88c:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 800f890:	462f      	mov	r7, r5
 800f892:	2600      	movs	r6, #0
 800f894:	e01b      	b.n	800f8ce <__kernel_rem_pio2+0xbe>
 800f896:	42ef      	cmn	r7, r5
 800f898:	d407      	bmi.n	800f8aa <__kernel_rem_pio2+0x9a>
 800f89a:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 800f89e:	f7f0 fe61 	bl	8000564 <__aeabi_i2d>
 800f8a2:	e8e6 0102 	strd	r0, r1, [r6], #8
 800f8a6:	3501      	adds	r5, #1
 800f8a8:	e7df      	b.n	800f86a <__kernel_rem_pio2+0x5a>
 800f8aa:	ec51 0b18 	vmov	r0, r1, d8
 800f8ae:	e7f8      	b.n	800f8a2 <__kernel_rem_pio2+0x92>
 800f8b0:	e9d7 2300 	ldrd	r2, r3, [r7]
 800f8b4:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 800f8b8:	f7f0 febe 	bl	8000638 <__aeabi_dmul>
 800f8bc:	4602      	mov	r2, r0
 800f8be:	460b      	mov	r3, r1
 800f8c0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800f8c4:	f7f0 fd02 	bl	80002cc <__adddf3>
 800f8c8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800f8cc:	3601      	adds	r6, #1
 800f8ce:	9b06      	ldr	r3, [sp, #24]
 800f8d0:	429e      	cmp	r6, r3
 800f8d2:	f1a7 0708 	sub.w	r7, r7, #8
 800f8d6:	ddeb      	ble.n	800f8b0 <__kernel_rem_pio2+0xa0>
 800f8d8:	ed9d 7b04 	vldr	d7, [sp, #16]
 800f8dc:	f108 0801 	add.w	r8, r8, #1
 800f8e0:	ecab 7b02 	vstmia	fp!, {d7}
 800f8e4:	3508      	adds	r5, #8
 800f8e6:	e7cc      	b.n	800f882 <__kernel_rem_pio2+0x72>
 800f8e8:	9b02      	ldr	r3, [sp, #8]
 800f8ea:	aa0e      	add	r2, sp, #56	; 0x38
 800f8ec:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800f8f0:	930d      	str	r3, [sp, #52]	; 0x34
 800f8f2:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 800f8f4:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 800f8f8:	9c02      	ldr	r4, [sp, #8]
 800f8fa:	930c      	str	r3, [sp, #48]	; 0x30
 800f8fc:	00e3      	lsls	r3, r4, #3
 800f8fe:	930a      	str	r3, [sp, #40]	; 0x28
 800f900:	ab9a      	add	r3, sp, #616	; 0x268
 800f902:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800f906:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 800f90a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800f90e:	ab72      	add	r3, sp, #456	; 0x1c8
 800f910:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 800f914:	46c3      	mov	fp, r8
 800f916:	46a1      	mov	r9, r4
 800f918:	f1b9 0f00 	cmp.w	r9, #0
 800f91c:	f1a5 0508 	sub.w	r5, r5, #8
 800f920:	dc77      	bgt.n	800fa12 <__kernel_rem_pio2+0x202>
 800f922:	ec47 6b10 	vmov	d0, r6, r7
 800f926:	4650      	mov	r0, sl
 800f928:	f000 fd4e 	bl	80103c8 <scalbn>
 800f92c:	ec57 6b10 	vmov	r6, r7, d0
 800f930:	2200      	movs	r2, #0
 800f932:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 800f936:	ee10 0a10 	vmov	r0, s0
 800f93a:	4639      	mov	r1, r7
 800f93c:	f7f0 fe7c 	bl	8000638 <__aeabi_dmul>
 800f940:	ec41 0b10 	vmov	d0, r0, r1
 800f944:	f000 fcc0 	bl	80102c8 <floor>
 800f948:	4b7c      	ldr	r3, [pc, #496]	; (800fb3c <__kernel_rem_pio2+0x32c>)
 800f94a:	ec51 0b10 	vmov	r0, r1, d0
 800f94e:	2200      	movs	r2, #0
 800f950:	f7f0 fe72 	bl	8000638 <__aeabi_dmul>
 800f954:	4602      	mov	r2, r0
 800f956:	460b      	mov	r3, r1
 800f958:	4630      	mov	r0, r6
 800f95a:	4639      	mov	r1, r7
 800f95c:	f7f0 fcb4 	bl	80002c8 <__aeabi_dsub>
 800f960:	460f      	mov	r7, r1
 800f962:	4606      	mov	r6, r0
 800f964:	f7f1 f918 	bl	8000b98 <__aeabi_d2iz>
 800f968:	9004      	str	r0, [sp, #16]
 800f96a:	f7f0 fdfb 	bl	8000564 <__aeabi_i2d>
 800f96e:	4602      	mov	r2, r0
 800f970:	460b      	mov	r3, r1
 800f972:	4630      	mov	r0, r6
 800f974:	4639      	mov	r1, r7
 800f976:	f7f0 fca7 	bl	80002c8 <__aeabi_dsub>
 800f97a:	f1ba 0f00 	cmp.w	sl, #0
 800f97e:	4606      	mov	r6, r0
 800f980:	460f      	mov	r7, r1
 800f982:	dd6d      	ble.n	800fa60 <__kernel_rem_pio2+0x250>
 800f984:	1e62      	subs	r2, r4, #1
 800f986:	ab0e      	add	r3, sp, #56	; 0x38
 800f988:	9d04      	ldr	r5, [sp, #16]
 800f98a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800f98e:	f1ca 0118 	rsb	r1, sl, #24
 800f992:	fa40 f301 	asr.w	r3, r0, r1
 800f996:	441d      	add	r5, r3
 800f998:	408b      	lsls	r3, r1
 800f99a:	1ac0      	subs	r0, r0, r3
 800f99c:	ab0e      	add	r3, sp, #56	; 0x38
 800f99e:	9504      	str	r5, [sp, #16]
 800f9a0:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 800f9a4:	f1ca 0317 	rsb	r3, sl, #23
 800f9a8:	fa40 fb03 	asr.w	fp, r0, r3
 800f9ac:	f1bb 0f00 	cmp.w	fp, #0
 800f9b0:	dd65      	ble.n	800fa7e <__kernel_rem_pio2+0x26e>
 800f9b2:	9b04      	ldr	r3, [sp, #16]
 800f9b4:	2200      	movs	r2, #0
 800f9b6:	3301      	adds	r3, #1
 800f9b8:	9304      	str	r3, [sp, #16]
 800f9ba:	4615      	mov	r5, r2
 800f9bc:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 800f9c0:	4294      	cmp	r4, r2
 800f9c2:	f300 809c 	bgt.w	800fafe <__kernel_rem_pio2+0x2ee>
 800f9c6:	f1ba 0f00 	cmp.w	sl, #0
 800f9ca:	dd07      	ble.n	800f9dc <__kernel_rem_pio2+0x1cc>
 800f9cc:	f1ba 0f01 	cmp.w	sl, #1
 800f9d0:	f000 80c0 	beq.w	800fb54 <__kernel_rem_pio2+0x344>
 800f9d4:	f1ba 0f02 	cmp.w	sl, #2
 800f9d8:	f000 80c6 	beq.w	800fb68 <__kernel_rem_pio2+0x358>
 800f9dc:	f1bb 0f02 	cmp.w	fp, #2
 800f9e0:	d14d      	bne.n	800fa7e <__kernel_rem_pio2+0x26e>
 800f9e2:	4632      	mov	r2, r6
 800f9e4:	463b      	mov	r3, r7
 800f9e6:	4956      	ldr	r1, [pc, #344]	; (800fb40 <__kernel_rem_pio2+0x330>)
 800f9e8:	2000      	movs	r0, #0
 800f9ea:	f7f0 fc6d 	bl	80002c8 <__aeabi_dsub>
 800f9ee:	4606      	mov	r6, r0
 800f9f0:	460f      	mov	r7, r1
 800f9f2:	2d00      	cmp	r5, #0
 800f9f4:	d043      	beq.n	800fa7e <__kernel_rem_pio2+0x26e>
 800f9f6:	4650      	mov	r0, sl
 800f9f8:	ed9f 0b4d 	vldr	d0, [pc, #308]	; 800fb30 <__kernel_rem_pio2+0x320>
 800f9fc:	f000 fce4 	bl	80103c8 <scalbn>
 800fa00:	4630      	mov	r0, r6
 800fa02:	4639      	mov	r1, r7
 800fa04:	ec53 2b10 	vmov	r2, r3, d0
 800fa08:	f7f0 fc5e 	bl	80002c8 <__aeabi_dsub>
 800fa0c:	4606      	mov	r6, r0
 800fa0e:	460f      	mov	r7, r1
 800fa10:	e035      	b.n	800fa7e <__kernel_rem_pio2+0x26e>
 800fa12:	4b4c      	ldr	r3, [pc, #304]	; (800fb44 <__kernel_rem_pio2+0x334>)
 800fa14:	2200      	movs	r2, #0
 800fa16:	4630      	mov	r0, r6
 800fa18:	4639      	mov	r1, r7
 800fa1a:	f7f0 fe0d 	bl	8000638 <__aeabi_dmul>
 800fa1e:	f7f1 f8bb 	bl	8000b98 <__aeabi_d2iz>
 800fa22:	f7f0 fd9f 	bl	8000564 <__aeabi_i2d>
 800fa26:	4602      	mov	r2, r0
 800fa28:	460b      	mov	r3, r1
 800fa2a:	ec43 2b18 	vmov	d8, r2, r3
 800fa2e:	4b46      	ldr	r3, [pc, #280]	; (800fb48 <__kernel_rem_pio2+0x338>)
 800fa30:	2200      	movs	r2, #0
 800fa32:	f7f0 fe01 	bl	8000638 <__aeabi_dmul>
 800fa36:	4602      	mov	r2, r0
 800fa38:	460b      	mov	r3, r1
 800fa3a:	4630      	mov	r0, r6
 800fa3c:	4639      	mov	r1, r7
 800fa3e:	f7f0 fc43 	bl	80002c8 <__aeabi_dsub>
 800fa42:	f7f1 f8a9 	bl	8000b98 <__aeabi_d2iz>
 800fa46:	e9d5 2300 	ldrd	r2, r3, [r5]
 800fa4a:	f84b 0b04 	str.w	r0, [fp], #4
 800fa4e:	ec51 0b18 	vmov	r0, r1, d8
 800fa52:	f7f0 fc3b 	bl	80002cc <__adddf3>
 800fa56:	f109 39ff 	add.w	r9, r9, #4294967295
 800fa5a:	4606      	mov	r6, r0
 800fa5c:	460f      	mov	r7, r1
 800fa5e:	e75b      	b.n	800f918 <__kernel_rem_pio2+0x108>
 800fa60:	d106      	bne.n	800fa70 <__kernel_rem_pio2+0x260>
 800fa62:	1e63      	subs	r3, r4, #1
 800fa64:	aa0e      	add	r2, sp, #56	; 0x38
 800fa66:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800fa6a:	ea4f 5be0 	mov.w	fp, r0, asr #23
 800fa6e:	e79d      	b.n	800f9ac <__kernel_rem_pio2+0x19c>
 800fa70:	4b36      	ldr	r3, [pc, #216]	; (800fb4c <__kernel_rem_pio2+0x33c>)
 800fa72:	2200      	movs	r2, #0
 800fa74:	f7f1 f866 	bl	8000b44 <__aeabi_dcmpge>
 800fa78:	2800      	cmp	r0, #0
 800fa7a:	d13d      	bne.n	800faf8 <__kernel_rem_pio2+0x2e8>
 800fa7c:	4683      	mov	fp, r0
 800fa7e:	2200      	movs	r2, #0
 800fa80:	2300      	movs	r3, #0
 800fa82:	4630      	mov	r0, r6
 800fa84:	4639      	mov	r1, r7
 800fa86:	f7f1 f83f 	bl	8000b08 <__aeabi_dcmpeq>
 800fa8a:	2800      	cmp	r0, #0
 800fa8c:	f000 80c0 	beq.w	800fc10 <__kernel_rem_pio2+0x400>
 800fa90:	1e65      	subs	r5, r4, #1
 800fa92:	462b      	mov	r3, r5
 800fa94:	2200      	movs	r2, #0
 800fa96:	9902      	ldr	r1, [sp, #8]
 800fa98:	428b      	cmp	r3, r1
 800fa9a:	da6c      	bge.n	800fb76 <__kernel_rem_pio2+0x366>
 800fa9c:	2a00      	cmp	r2, #0
 800fa9e:	f000 8089 	beq.w	800fbb4 <__kernel_rem_pio2+0x3a4>
 800faa2:	ab0e      	add	r3, sp, #56	; 0x38
 800faa4:	f1aa 0a18 	sub.w	sl, sl, #24
 800faa8:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800faac:	2b00      	cmp	r3, #0
 800faae:	f000 80ad 	beq.w	800fc0c <__kernel_rem_pio2+0x3fc>
 800fab2:	4650      	mov	r0, sl
 800fab4:	ed9f 0b1e 	vldr	d0, [pc, #120]	; 800fb30 <__kernel_rem_pio2+0x320>
 800fab8:	f000 fc86 	bl	80103c8 <scalbn>
 800fabc:	ab9a      	add	r3, sp, #616	; 0x268
 800fabe:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800fac2:	ec57 6b10 	vmov	r6, r7, d0
 800fac6:	00ec      	lsls	r4, r5, #3
 800fac8:	f1a3 0898 	sub.w	r8, r3, #152	; 0x98
 800facc:	46aa      	mov	sl, r5
 800face:	f1ba 0f00 	cmp.w	sl, #0
 800fad2:	f280 80d6 	bge.w	800fc82 <__kernel_rem_pio2+0x472>
 800fad6:	ed9f 8b14 	vldr	d8, [pc, #80]	; 800fb28 <__kernel_rem_pio2+0x318>
 800fada:	462e      	mov	r6, r5
 800fadc:	2e00      	cmp	r6, #0
 800fade:	f2c0 8104 	blt.w	800fcea <__kernel_rem_pio2+0x4da>
 800fae2:	ab72      	add	r3, sp, #456	; 0x1c8
 800fae4:	ed8d 8b06 	vstr	d8, [sp, #24]
 800fae8:	f8df a064 	ldr.w	sl, [pc, #100]	; 800fb50 <__kernel_rem_pio2+0x340>
 800faec:	eb03 09c6 	add.w	r9, r3, r6, lsl #3
 800faf0:	f04f 0800 	mov.w	r8, #0
 800faf4:	1baf      	subs	r7, r5, r6
 800faf6:	e0ea      	b.n	800fcce <__kernel_rem_pio2+0x4be>
 800faf8:	f04f 0b02 	mov.w	fp, #2
 800fafc:	e759      	b.n	800f9b2 <__kernel_rem_pio2+0x1a2>
 800fafe:	f8d8 3000 	ldr.w	r3, [r8]
 800fb02:	b955      	cbnz	r5, 800fb1a <__kernel_rem_pio2+0x30a>
 800fb04:	b123      	cbz	r3, 800fb10 <__kernel_rem_pio2+0x300>
 800fb06:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 800fb0a:	f8c8 3000 	str.w	r3, [r8]
 800fb0e:	2301      	movs	r3, #1
 800fb10:	3201      	adds	r2, #1
 800fb12:	f108 0804 	add.w	r8, r8, #4
 800fb16:	461d      	mov	r5, r3
 800fb18:	e752      	b.n	800f9c0 <__kernel_rem_pio2+0x1b0>
 800fb1a:	1acb      	subs	r3, r1, r3
 800fb1c:	f8c8 3000 	str.w	r3, [r8]
 800fb20:	462b      	mov	r3, r5
 800fb22:	e7f5      	b.n	800fb10 <__kernel_rem_pio2+0x300>
 800fb24:	f3af 8000 	nop.w
	...
 800fb34:	3ff00000 	.word	0x3ff00000
 800fb38:	08010c30 	.word	0x08010c30
 800fb3c:	40200000 	.word	0x40200000
 800fb40:	3ff00000 	.word	0x3ff00000
 800fb44:	3e700000 	.word	0x3e700000
 800fb48:	41700000 	.word	0x41700000
 800fb4c:	3fe00000 	.word	0x3fe00000
 800fb50:	08010bf0 	.word	0x08010bf0
 800fb54:	1e62      	subs	r2, r4, #1
 800fb56:	ab0e      	add	r3, sp, #56	; 0x38
 800fb58:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800fb5c:	f3c3 0316 	ubfx	r3, r3, #0, #23
 800fb60:	a90e      	add	r1, sp, #56	; 0x38
 800fb62:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 800fb66:	e739      	b.n	800f9dc <__kernel_rem_pio2+0x1cc>
 800fb68:	1e62      	subs	r2, r4, #1
 800fb6a:	ab0e      	add	r3, sp, #56	; 0x38
 800fb6c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800fb70:	f3c3 0315 	ubfx	r3, r3, #0, #22
 800fb74:	e7f4      	b.n	800fb60 <__kernel_rem_pio2+0x350>
 800fb76:	a90e      	add	r1, sp, #56	; 0x38
 800fb78:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 800fb7c:	3b01      	subs	r3, #1
 800fb7e:	430a      	orrs	r2, r1
 800fb80:	e789      	b.n	800fa96 <__kernel_rem_pio2+0x286>
 800fb82:	3301      	adds	r3, #1
 800fb84:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 800fb88:	2900      	cmp	r1, #0
 800fb8a:	d0fa      	beq.n	800fb82 <__kernel_rem_pio2+0x372>
 800fb8c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fb8e:	f502 721a 	add.w	r2, r2, #616	; 0x268
 800fb92:	446a      	add	r2, sp
 800fb94:	3a98      	subs	r2, #152	; 0x98
 800fb96:	920a      	str	r2, [sp, #40]	; 0x28
 800fb98:	9a08      	ldr	r2, [sp, #32]
 800fb9a:	18e3      	adds	r3, r4, r3
 800fb9c:	18a5      	adds	r5, r4, r2
 800fb9e:	aa22      	add	r2, sp, #136	; 0x88
 800fba0:	f104 0801 	add.w	r8, r4, #1
 800fba4:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 800fba8:	9304      	str	r3, [sp, #16]
 800fbaa:	9b04      	ldr	r3, [sp, #16]
 800fbac:	4543      	cmp	r3, r8
 800fbae:	da04      	bge.n	800fbba <__kernel_rem_pio2+0x3aa>
 800fbb0:	461c      	mov	r4, r3
 800fbb2:	e6a3      	b.n	800f8fc <__kernel_rem_pio2+0xec>
 800fbb4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fbb6:	2301      	movs	r3, #1
 800fbb8:	e7e4      	b.n	800fb84 <__kernel_rem_pio2+0x374>
 800fbba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fbbc:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 800fbc0:	f7f0 fcd0 	bl	8000564 <__aeabi_i2d>
 800fbc4:	e8e5 0102 	strd	r0, r1, [r5], #8
 800fbc8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800fbca:	46ab      	mov	fp, r5
 800fbcc:	461c      	mov	r4, r3
 800fbce:	f04f 0900 	mov.w	r9, #0
 800fbd2:	2600      	movs	r6, #0
 800fbd4:	2700      	movs	r7, #0
 800fbd6:	9b06      	ldr	r3, [sp, #24]
 800fbd8:	4599      	cmp	r9, r3
 800fbda:	dd06      	ble.n	800fbea <__kernel_rem_pio2+0x3da>
 800fbdc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fbde:	e8e3 6702 	strd	r6, r7, [r3], #8
 800fbe2:	f108 0801 	add.w	r8, r8, #1
 800fbe6:	930a      	str	r3, [sp, #40]	; 0x28
 800fbe8:	e7df      	b.n	800fbaa <__kernel_rem_pio2+0x39a>
 800fbea:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 800fbee:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 800fbf2:	f7f0 fd21 	bl	8000638 <__aeabi_dmul>
 800fbf6:	4602      	mov	r2, r0
 800fbf8:	460b      	mov	r3, r1
 800fbfa:	4630      	mov	r0, r6
 800fbfc:	4639      	mov	r1, r7
 800fbfe:	f7f0 fb65 	bl	80002cc <__adddf3>
 800fc02:	f109 0901 	add.w	r9, r9, #1
 800fc06:	4606      	mov	r6, r0
 800fc08:	460f      	mov	r7, r1
 800fc0a:	e7e4      	b.n	800fbd6 <__kernel_rem_pio2+0x3c6>
 800fc0c:	3d01      	subs	r5, #1
 800fc0e:	e748      	b.n	800faa2 <__kernel_rem_pio2+0x292>
 800fc10:	ec47 6b10 	vmov	d0, r6, r7
 800fc14:	f1ca 0000 	rsb	r0, sl, #0
 800fc18:	f000 fbd6 	bl	80103c8 <scalbn>
 800fc1c:	ec57 6b10 	vmov	r6, r7, d0
 800fc20:	4ba0      	ldr	r3, [pc, #640]	; (800fea4 <__kernel_rem_pio2+0x694>)
 800fc22:	ee10 0a10 	vmov	r0, s0
 800fc26:	2200      	movs	r2, #0
 800fc28:	4639      	mov	r1, r7
 800fc2a:	f7f0 ff8b 	bl	8000b44 <__aeabi_dcmpge>
 800fc2e:	b1f8      	cbz	r0, 800fc70 <__kernel_rem_pio2+0x460>
 800fc30:	4b9d      	ldr	r3, [pc, #628]	; (800fea8 <__kernel_rem_pio2+0x698>)
 800fc32:	2200      	movs	r2, #0
 800fc34:	4630      	mov	r0, r6
 800fc36:	4639      	mov	r1, r7
 800fc38:	f7f0 fcfe 	bl	8000638 <__aeabi_dmul>
 800fc3c:	f7f0 ffac 	bl	8000b98 <__aeabi_d2iz>
 800fc40:	4680      	mov	r8, r0
 800fc42:	f7f0 fc8f 	bl	8000564 <__aeabi_i2d>
 800fc46:	4b97      	ldr	r3, [pc, #604]	; (800fea4 <__kernel_rem_pio2+0x694>)
 800fc48:	2200      	movs	r2, #0
 800fc4a:	f7f0 fcf5 	bl	8000638 <__aeabi_dmul>
 800fc4e:	460b      	mov	r3, r1
 800fc50:	4602      	mov	r2, r0
 800fc52:	4639      	mov	r1, r7
 800fc54:	4630      	mov	r0, r6
 800fc56:	f7f0 fb37 	bl	80002c8 <__aeabi_dsub>
 800fc5a:	f7f0 ff9d 	bl	8000b98 <__aeabi_d2iz>
 800fc5e:	1c65      	adds	r5, r4, #1
 800fc60:	ab0e      	add	r3, sp, #56	; 0x38
 800fc62:	f10a 0a18 	add.w	sl, sl, #24
 800fc66:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 800fc6a:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 800fc6e:	e720      	b.n	800fab2 <__kernel_rem_pio2+0x2a2>
 800fc70:	4630      	mov	r0, r6
 800fc72:	4639      	mov	r1, r7
 800fc74:	f7f0 ff90 	bl	8000b98 <__aeabi_d2iz>
 800fc78:	ab0e      	add	r3, sp, #56	; 0x38
 800fc7a:	4625      	mov	r5, r4
 800fc7c:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 800fc80:	e717      	b.n	800fab2 <__kernel_rem_pio2+0x2a2>
 800fc82:	ab0e      	add	r3, sp, #56	; 0x38
 800fc84:	f853 002a 	ldr.w	r0, [r3, sl, lsl #2]
 800fc88:	f7f0 fc6c 	bl	8000564 <__aeabi_i2d>
 800fc8c:	4632      	mov	r2, r6
 800fc8e:	463b      	mov	r3, r7
 800fc90:	f7f0 fcd2 	bl	8000638 <__aeabi_dmul>
 800fc94:	4b84      	ldr	r3, [pc, #528]	; (800fea8 <__kernel_rem_pio2+0x698>)
 800fc96:	e968 0102 	strd	r0, r1, [r8, #-8]!
 800fc9a:	2200      	movs	r2, #0
 800fc9c:	4630      	mov	r0, r6
 800fc9e:	4639      	mov	r1, r7
 800fca0:	f7f0 fcca 	bl	8000638 <__aeabi_dmul>
 800fca4:	f10a 3aff 	add.w	sl, sl, #4294967295
 800fca8:	4606      	mov	r6, r0
 800fcaa:	460f      	mov	r7, r1
 800fcac:	e70f      	b.n	800face <__kernel_rem_pio2+0x2be>
 800fcae:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 800fcb2:	e8fa 0102 	ldrd	r0, r1, [sl], #8
 800fcb6:	f7f0 fcbf 	bl	8000638 <__aeabi_dmul>
 800fcba:	4602      	mov	r2, r0
 800fcbc:	460b      	mov	r3, r1
 800fcbe:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800fcc2:	f7f0 fb03 	bl	80002cc <__adddf3>
 800fcc6:	e9cd 0106 	strd	r0, r1, [sp, #24]
 800fcca:	f108 0801 	add.w	r8, r8, #1
 800fcce:	9b02      	ldr	r3, [sp, #8]
 800fcd0:	4598      	cmp	r8, r3
 800fcd2:	dc01      	bgt.n	800fcd8 <__kernel_rem_pio2+0x4c8>
 800fcd4:	45b8      	cmp	r8, r7
 800fcd6:	ddea      	ble.n	800fcae <__kernel_rem_pio2+0x49e>
 800fcd8:	ed9d 7b06 	vldr	d7, [sp, #24]
 800fcdc:	ab4a      	add	r3, sp, #296	; 0x128
 800fcde:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 800fce2:	ed87 7b00 	vstr	d7, [r7]
 800fce6:	3e01      	subs	r6, #1
 800fce8:	e6f8      	b.n	800fadc <__kernel_rem_pio2+0x2cc>
 800fcea:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 800fcec:	2b02      	cmp	r3, #2
 800fcee:	dc0b      	bgt.n	800fd08 <__kernel_rem_pio2+0x4f8>
 800fcf0:	2b00      	cmp	r3, #0
 800fcf2:	dc35      	bgt.n	800fd60 <__kernel_rem_pio2+0x550>
 800fcf4:	d059      	beq.n	800fdaa <__kernel_rem_pio2+0x59a>
 800fcf6:	9b04      	ldr	r3, [sp, #16]
 800fcf8:	f003 0007 	and.w	r0, r3, #7
 800fcfc:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
 800fd00:	ecbd 8b02 	vpop	{d8}
 800fd04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fd08:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 800fd0a:	2b03      	cmp	r3, #3
 800fd0c:	d1f3      	bne.n	800fcf6 <__kernel_rem_pio2+0x4e6>
 800fd0e:	ab4a      	add	r3, sp, #296	; 0x128
 800fd10:	4423      	add	r3, r4
 800fd12:	9306      	str	r3, [sp, #24]
 800fd14:	461c      	mov	r4, r3
 800fd16:	469a      	mov	sl, r3
 800fd18:	9502      	str	r5, [sp, #8]
 800fd1a:	9b02      	ldr	r3, [sp, #8]
 800fd1c:	2b00      	cmp	r3, #0
 800fd1e:	f1aa 0a08 	sub.w	sl, sl, #8
 800fd22:	dc6b      	bgt.n	800fdfc <__kernel_rem_pio2+0x5ec>
 800fd24:	46aa      	mov	sl, r5
 800fd26:	f1ba 0f01 	cmp.w	sl, #1
 800fd2a:	f1a4 0408 	sub.w	r4, r4, #8
 800fd2e:	f300 8085 	bgt.w	800fe3c <__kernel_rem_pio2+0x62c>
 800fd32:	9c06      	ldr	r4, [sp, #24]
 800fd34:	2000      	movs	r0, #0
 800fd36:	3408      	adds	r4, #8
 800fd38:	2100      	movs	r1, #0
 800fd3a:	2d01      	cmp	r5, #1
 800fd3c:	f300 809d 	bgt.w	800fe7a <__kernel_rem_pio2+0x66a>
 800fd40:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	; 0x128
 800fd44:	e9dd 784c 	ldrd	r7, r8, [sp, #304]	; 0x130
 800fd48:	f1bb 0f00 	cmp.w	fp, #0
 800fd4c:	f040 809b 	bne.w	800fe86 <__kernel_rem_pio2+0x676>
 800fd50:	9b01      	ldr	r3, [sp, #4]
 800fd52:	e9c3 5600 	strd	r5, r6, [r3]
 800fd56:	e9c3 7802 	strd	r7, r8, [r3, #8]
 800fd5a:	e9c3 0104 	strd	r0, r1, [r3, #16]
 800fd5e:	e7ca      	b.n	800fcf6 <__kernel_rem_pio2+0x4e6>
 800fd60:	3408      	adds	r4, #8
 800fd62:	ab4a      	add	r3, sp, #296	; 0x128
 800fd64:	441c      	add	r4, r3
 800fd66:	462e      	mov	r6, r5
 800fd68:	2000      	movs	r0, #0
 800fd6a:	2100      	movs	r1, #0
 800fd6c:	2e00      	cmp	r6, #0
 800fd6e:	da36      	bge.n	800fdde <__kernel_rem_pio2+0x5ce>
 800fd70:	f1bb 0f00 	cmp.w	fp, #0
 800fd74:	d039      	beq.n	800fdea <__kernel_rem_pio2+0x5da>
 800fd76:	4602      	mov	r2, r0
 800fd78:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800fd7c:	9c01      	ldr	r4, [sp, #4]
 800fd7e:	e9c4 2300 	strd	r2, r3, [r4]
 800fd82:	4602      	mov	r2, r0
 800fd84:	460b      	mov	r3, r1
 800fd86:	e9dd 014a 	ldrd	r0, r1, [sp, #296]	; 0x128
 800fd8a:	f7f0 fa9d 	bl	80002c8 <__aeabi_dsub>
 800fd8e:	ae4c      	add	r6, sp, #304	; 0x130
 800fd90:	2401      	movs	r4, #1
 800fd92:	42a5      	cmp	r5, r4
 800fd94:	da2c      	bge.n	800fdf0 <__kernel_rem_pio2+0x5e0>
 800fd96:	f1bb 0f00 	cmp.w	fp, #0
 800fd9a:	d002      	beq.n	800fda2 <__kernel_rem_pio2+0x592>
 800fd9c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800fda0:	4619      	mov	r1, r3
 800fda2:	9b01      	ldr	r3, [sp, #4]
 800fda4:	e9c3 0102 	strd	r0, r1, [r3, #8]
 800fda8:	e7a5      	b.n	800fcf6 <__kernel_rem_pio2+0x4e6>
 800fdaa:	f504 731a 	add.w	r3, r4, #616	; 0x268
 800fdae:	eb0d 0403 	add.w	r4, sp, r3
 800fdb2:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
 800fdb6:	2000      	movs	r0, #0
 800fdb8:	2100      	movs	r1, #0
 800fdba:	2d00      	cmp	r5, #0
 800fdbc:	da09      	bge.n	800fdd2 <__kernel_rem_pio2+0x5c2>
 800fdbe:	f1bb 0f00 	cmp.w	fp, #0
 800fdc2:	d002      	beq.n	800fdca <__kernel_rem_pio2+0x5ba>
 800fdc4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800fdc8:	4619      	mov	r1, r3
 800fdca:	9b01      	ldr	r3, [sp, #4]
 800fdcc:	e9c3 0100 	strd	r0, r1, [r3]
 800fdd0:	e791      	b.n	800fcf6 <__kernel_rem_pio2+0x4e6>
 800fdd2:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 800fdd6:	f7f0 fa79 	bl	80002cc <__adddf3>
 800fdda:	3d01      	subs	r5, #1
 800fddc:	e7ed      	b.n	800fdba <__kernel_rem_pio2+0x5aa>
 800fdde:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 800fde2:	f7f0 fa73 	bl	80002cc <__adddf3>
 800fde6:	3e01      	subs	r6, #1
 800fde8:	e7c0      	b.n	800fd6c <__kernel_rem_pio2+0x55c>
 800fdea:	4602      	mov	r2, r0
 800fdec:	460b      	mov	r3, r1
 800fdee:	e7c5      	b.n	800fd7c <__kernel_rem_pio2+0x56c>
 800fdf0:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 800fdf4:	f7f0 fa6a 	bl	80002cc <__adddf3>
 800fdf8:	3401      	adds	r4, #1
 800fdfa:	e7ca      	b.n	800fd92 <__kernel_rem_pio2+0x582>
 800fdfc:	e9da 8900 	ldrd	r8, r9, [sl]
 800fe00:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 800fe04:	9b02      	ldr	r3, [sp, #8]
 800fe06:	3b01      	subs	r3, #1
 800fe08:	9302      	str	r3, [sp, #8]
 800fe0a:	4632      	mov	r2, r6
 800fe0c:	463b      	mov	r3, r7
 800fe0e:	4640      	mov	r0, r8
 800fe10:	4649      	mov	r1, r9
 800fe12:	f7f0 fa5b 	bl	80002cc <__adddf3>
 800fe16:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800fe1a:	4602      	mov	r2, r0
 800fe1c:	460b      	mov	r3, r1
 800fe1e:	4640      	mov	r0, r8
 800fe20:	4649      	mov	r1, r9
 800fe22:	f7f0 fa51 	bl	80002c8 <__aeabi_dsub>
 800fe26:	4632      	mov	r2, r6
 800fe28:	463b      	mov	r3, r7
 800fe2a:	f7f0 fa4f 	bl	80002cc <__adddf3>
 800fe2e:	ed9d 7b08 	vldr	d7, [sp, #32]
 800fe32:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800fe36:	ed8a 7b00 	vstr	d7, [sl]
 800fe3a:	e76e      	b.n	800fd1a <__kernel_rem_pio2+0x50a>
 800fe3c:	e9d4 8900 	ldrd	r8, r9, [r4]
 800fe40:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
 800fe44:	4640      	mov	r0, r8
 800fe46:	4632      	mov	r2, r6
 800fe48:	463b      	mov	r3, r7
 800fe4a:	4649      	mov	r1, r9
 800fe4c:	f7f0 fa3e 	bl	80002cc <__adddf3>
 800fe50:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800fe54:	4602      	mov	r2, r0
 800fe56:	460b      	mov	r3, r1
 800fe58:	4640      	mov	r0, r8
 800fe5a:	4649      	mov	r1, r9
 800fe5c:	f7f0 fa34 	bl	80002c8 <__aeabi_dsub>
 800fe60:	4632      	mov	r2, r6
 800fe62:	463b      	mov	r3, r7
 800fe64:	f7f0 fa32 	bl	80002cc <__adddf3>
 800fe68:	ed9d 7b02 	vldr	d7, [sp, #8]
 800fe6c:	e9c4 0102 	strd	r0, r1, [r4, #8]
 800fe70:	ed84 7b00 	vstr	d7, [r4]
 800fe74:	f10a 3aff 	add.w	sl, sl, #4294967295
 800fe78:	e755      	b.n	800fd26 <__kernel_rem_pio2+0x516>
 800fe7a:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 800fe7e:	f7f0 fa25 	bl	80002cc <__adddf3>
 800fe82:	3d01      	subs	r5, #1
 800fe84:	e759      	b.n	800fd3a <__kernel_rem_pio2+0x52a>
 800fe86:	9b01      	ldr	r3, [sp, #4]
 800fe88:	9a01      	ldr	r2, [sp, #4]
 800fe8a:	601d      	str	r5, [r3, #0]
 800fe8c:	f106 4400 	add.w	r4, r6, #2147483648	; 0x80000000
 800fe90:	605c      	str	r4, [r3, #4]
 800fe92:	609f      	str	r7, [r3, #8]
 800fe94:	f108 4300 	add.w	r3, r8, #2147483648	; 0x80000000
 800fe98:	60d3      	str	r3, [r2, #12]
 800fe9a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800fe9e:	6110      	str	r0, [r2, #16]
 800fea0:	6153      	str	r3, [r2, #20]
 800fea2:	e728      	b.n	800fcf6 <__kernel_rem_pio2+0x4e6>
 800fea4:	41700000 	.word	0x41700000
 800fea8:	3e700000 	.word	0x3e700000
 800feac:	00000000 	.word	0x00000000

0800feb0 <__kernel_tan>:
 800feb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800feb4:	ed2d 8b06 	vpush	{d8-d10}
 800feb8:	ec5b ab10 	vmov	sl, fp, d0
 800febc:	4be0      	ldr	r3, [pc, #896]	; (8010240 <__kernel_tan+0x390>)
 800febe:	b083      	sub	sp, #12
 800fec0:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
 800fec4:	429f      	cmp	r7, r3
 800fec6:	ec59 8b11 	vmov	r8, r9, d1
 800feca:	4606      	mov	r6, r0
 800fecc:	f8cd b000 	str.w	fp, [sp]
 800fed0:	dc61      	bgt.n	800ff96 <__kernel_tan+0xe6>
 800fed2:	ee10 0a10 	vmov	r0, s0
 800fed6:	4659      	mov	r1, fp
 800fed8:	f7f0 fe5e 	bl	8000b98 <__aeabi_d2iz>
 800fedc:	4605      	mov	r5, r0
 800fede:	2800      	cmp	r0, #0
 800fee0:	f040 8083 	bne.w	800ffea <__kernel_tan+0x13a>
 800fee4:	1c73      	adds	r3, r6, #1
 800fee6:	4652      	mov	r2, sl
 800fee8:	4313      	orrs	r3, r2
 800feea:	433b      	orrs	r3, r7
 800feec:	d112      	bne.n	800ff14 <__kernel_tan+0x64>
 800feee:	ec4b ab10 	vmov	d0, sl, fp
 800fef2:	f7ff fa41 	bl	800f378 <fabs>
 800fef6:	49d3      	ldr	r1, [pc, #844]	; (8010244 <__kernel_tan+0x394>)
 800fef8:	ec53 2b10 	vmov	r2, r3, d0
 800fefc:	2000      	movs	r0, #0
 800fefe:	f7f0 fcc5 	bl	800088c <__aeabi_ddiv>
 800ff02:	4682      	mov	sl, r0
 800ff04:	468b      	mov	fp, r1
 800ff06:	ec4b ab10 	vmov	d0, sl, fp
 800ff0a:	b003      	add	sp, #12
 800ff0c:	ecbd 8b06 	vpop	{d8-d10}
 800ff10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ff14:	2e01      	cmp	r6, #1
 800ff16:	d0f6      	beq.n	800ff06 <__kernel_tan+0x56>
 800ff18:	4642      	mov	r2, r8
 800ff1a:	464b      	mov	r3, r9
 800ff1c:	4650      	mov	r0, sl
 800ff1e:	4659      	mov	r1, fp
 800ff20:	f7f0 f9d4 	bl	80002cc <__adddf3>
 800ff24:	4602      	mov	r2, r0
 800ff26:	460b      	mov	r3, r1
 800ff28:	460f      	mov	r7, r1
 800ff2a:	2000      	movs	r0, #0
 800ff2c:	49c6      	ldr	r1, [pc, #792]	; (8010248 <__kernel_tan+0x398>)
 800ff2e:	f7f0 fcad 	bl	800088c <__aeabi_ddiv>
 800ff32:	e9cd 0100 	strd	r0, r1, [sp]
 800ff36:	e9dd 2300 	ldrd	r2, r3, [sp]
 800ff3a:	462e      	mov	r6, r5
 800ff3c:	4652      	mov	r2, sl
 800ff3e:	462c      	mov	r4, r5
 800ff40:	4630      	mov	r0, r6
 800ff42:	461d      	mov	r5, r3
 800ff44:	4639      	mov	r1, r7
 800ff46:	465b      	mov	r3, fp
 800ff48:	f7f0 f9be 	bl	80002c8 <__aeabi_dsub>
 800ff4c:	4602      	mov	r2, r0
 800ff4e:	460b      	mov	r3, r1
 800ff50:	4640      	mov	r0, r8
 800ff52:	4649      	mov	r1, r9
 800ff54:	f7f0 f9b8 	bl	80002c8 <__aeabi_dsub>
 800ff58:	4632      	mov	r2, r6
 800ff5a:	462b      	mov	r3, r5
 800ff5c:	f7f0 fb6c 	bl	8000638 <__aeabi_dmul>
 800ff60:	4632      	mov	r2, r6
 800ff62:	4680      	mov	r8, r0
 800ff64:	4689      	mov	r9, r1
 800ff66:	462b      	mov	r3, r5
 800ff68:	4630      	mov	r0, r6
 800ff6a:	4639      	mov	r1, r7
 800ff6c:	f7f0 fb64 	bl	8000638 <__aeabi_dmul>
 800ff70:	4bb4      	ldr	r3, [pc, #720]	; (8010244 <__kernel_tan+0x394>)
 800ff72:	2200      	movs	r2, #0
 800ff74:	f7f0 f9aa 	bl	80002cc <__adddf3>
 800ff78:	4602      	mov	r2, r0
 800ff7a:	460b      	mov	r3, r1
 800ff7c:	4640      	mov	r0, r8
 800ff7e:	4649      	mov	r1, r9
 800ff80:	f7f0 f9a4 	bl	80002cc <__adddf3>
 800ff84:	e9dd 2300 	ldrd	r2, r3, [sp]
 800ff88:	f7f0 fb56 	bl	8000638 <__aeabi_dmul>
 800ff8c:	4622      	mov	r2, r4
 800ff8e:	462b      	mov	r3, r5
 800ff90:	f7f0 f99c 	bl	80002cc <__adddf3>
 800ff94:	e7b5      	b.n	800ff02 <__kernel_tan+0x52>
 800ff96:	4bad      	ldr	r3, [pc, #692]	; (801024c <__kernel_tan+0x39c>)
 800ff98:	429f      	cmp	r7, r3
 800ff9a:	dd26      	ble.n	800ffea <__kernel_tan+0x13a>
 800ff9c:	9b00      	ldr	r3, [sp, #0]
 800ff9e:	2b00      	cmp	r3, #0
 800ffa0:	da09      	bge.n	800ffb6 <__kernel_tan+0x106>
 800ffa2:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800ffa6:	469b      	mov	fp, r3
 800ffa8:	ee10 aa10 	vmov	sl, s0
 800ffac:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800ffb0:	ee11 8a10 	vmov	r8, s2
 800ffb4:	4699      	mov	r9, r3
 800ffb6:	4652      	mov	r2, sl
 800ffb8:	465b      	mov	r3, fp
 800ffba:	a183      	add	r1, pc, #524	; (adr r1, 80101c8 <__kernel_tan+0x318>)
 800ffbc:	e9d1 0100 	ldrd	r0, r1, [r1]
 800ffc0:	f7f0 f982 	bl	80002c8 <__aeabi_dsub>
 800ffc4:	4642      	mov	r2, r8
 800ffc6:	464b      	mov	r3, r9
 800ffc8:	4604      	mov	r4, r0
 800ffca:	460d      	mov	r5, r1
 800ffcc:	a180      	add	r1, pc, #512	; (adr r1, 80101d0 <__kernel_tan+0x320>)
 800ffce:	e9d1 0100 	ldrd	r0, r1, [r1]
 800ffd2:	f7f0 f979 	bl	80002c8 <__aeabi_dsub>
 800ffd6:	4622      	mov	r2, r4
 800ffd8:	462b      	mov	r3, r5
 800ffda:	f7f0 f977 	bl	80002cc <__adddf3>
 800ffde:	f04f 0800 	mov.w	r8, #0
 800ffe2:	4682      	mov	sl, r0
 800ffe4:	468b      	mov	fp, r1
 800ffe6:	f04f 0900 	mov.w	r9, #0
 800ffea:	4652      	mov	r2, sl
 800ffec:	465b      	mov	r3, fp
 800ffee:	4650      	mov	r0, sl
 800fff0:	4659      	mov	r1, fp
 800fff2:	f7f0 fb21 	bl	8000638 <__aeabi_dmul>
 800fff6:	4602      	mov	r2, r0
 800fff8:	460b      	mov	r3, r1
 800fffa:	ec43 2b18 	vmov	d8, r2, r3
 800fffe:	f7f0 fb1b 	bl	8000638 <__aeabi_dmul>
 8010002:	ec53 2b18 	vmov	r2, r3, d8
 8010006:	4604      	mov	r4, r0
 8010008:	460d      	mov	r5, r1
 801000a:	4650      	mov	r0, sl
 801000c:	4659      	mov	r1, fp
 801000e:	f7f0 fb13 	bl	8000638 <__aeabi_dmul>
 8010012:	a371      	add	r3, pc, #452	; (adr r3, 80101d8 <__kernel_tan+0x328>)
 8010014:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010018:	ec41 0b19 	vmov	d9, r0, r1
 801001c:	4620      	mov	r0, r4
 801001e:	4629      	mov	r1, r5
 8010020:	f7f0 fb0a 	bl	8000638 <__aeabi_dmul>
 8010024:	a36e      	add	r3, pc, #440	; (adr r3, 80101e0 <__kernel_tan+0x330>)
 8010026:	e9d3 2300 	ldrd	r2, r3, [r3]
 801002a:	f7f0 f94f 	bl	80002cc <__adddf3>
 801002e:	4622      	mov	r2, r4
 8010030:	462b      	mov	r3, r5
 8010032:	f7f0 fb01 	bl	8000638 <__aeabi_dmul>
 8010036:	a36c      	add	r3, pc, #432	; (adr r3, 80101e8 <__kernel_tan+0x338>)
 8010038:	e9d3 2300 	ldrd	r2, r3, [r3]
 801003c:	f7f0 f946 	bl	80002cc <__adddf3>
 8010040:	4622      	mov	r2, r4
 8010042:	462b      	mov	r3, r5
 8010044:	f7f0 faf8 	bl	8000638 <__aeabi_dmul>
 8010048:	a369      	add	r3, pc, #420	; (adr r3, 80101f0 <__kernel_tan+0x340>)
 801004a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801004e:	f7f0 f93d 	bl	80002cc <__adddf3>
 8010052:	4622      	mov	r2, r4
 8010054:	462b      	mov	r3, r5
 8010056:	f7f0 faef 	bl	8000638 <__aeabi_dmul>
 801005a:	a367      	add	r3, pc, #412	; (adr r3, 80101f8 <__kernel_tan+0x348>)
 801005c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010060:	f7f0 f934 	bl	80002cc <__adddf3>
 8010064:	4622      	mov	r2, r4
 8010066:	462b      	mov	r3, r5
 8010068:	f7f0 fae6 	bl	8000638 <__aeabi_dmul>
 801006c:	a364      	add	r3, pc, #400	; (adr r3, 8010200 <__kernel_tan+0x350>)
 801006e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010072:	f7f0 f92b 	bl	80002cc <__adddf3>
 8010076:	ec53 2b18 	vmov	r2, r3, d8
 801007a:	f7f0 fadd 	bl	8000638 <__aeabi_dmul>
 801007e:	a362      	add	r3, pc, #392	; (adr r3, 8010208 <__kernel_tan+0x358>)
 8010080:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010084:	ec41 0b1a 	vmov	d10, r0, r1
 8010088:	4620      	mov	r0, r4
 801008a:	4629      	mov	r1, r5
 801008c:	f7f0 fad4 	bl	8000638 <__aeabi_dmul>
 8010090:	a35f      	add	r3, pc, #380	; (adr r3, 8010210 <__kernel_tan+0x360>)
 8010092:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010096:	f7f0 f919 	bl	80002cc <__adddf3>
 801009a:	4622      	mov	r2, r4
 801009c:	462b      	mov	r3, r5
 801009e:	f7f0 facb 	bl	8000638 <__aeabi_dmul>
 80100a2:	a35d      	add	r3, pc, #372	; (adr r3, 8010218 <__kernel_tan+0x368>)
 80100a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100a8:	f7f0 f910 	bl	80002cc <__adddf3>
 80100ac:	4622      	mov	r2, r4
 80100ae:	462b      	mov	r3, r5
 80100b0:	f7f0 fac2 	bl	8000638 <__aeabi_dmul>
 80100b4:	a35a      	add	r3, pc, #360	; (adr r3, 8010220 <__kernel_tan+0x370>)
 80100b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100ba:	f7f0 f907 	bl	80002cc <__adddf3>
 80100be:	4622      	mov	r2, r4
 80100c0:	462b      	mov	r3, r5
 80100c2:	f7f0 fab9 	bl	8000638 <__aeabi_dmul>
 80100c6:	a358      	add	r3, pc, #352	; (adr r3, 8010228 <__kernel_tan+0x378>)
 80100c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100cc:	f7f0 f8fe 	bl	80002cc <__adddf3>
 80100d0:	4622      	mov	r2, r4
 80100d2:	462b      	mov	r3, r5
 80100d4:	f7f0 fab0 	bl	8000638 <__aeabi_dmul>
 80100d8:	a355      	add	r3, pc, #340	; (adr r3, 8010230 <__kernel_tan+0x380>)
 80100da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100de:	f7f0 f8f5 	bl	80002cc <__adddf3>
 80100e2:	4602      	mov	r2, r0
 80100e4:	460b      	mov	r3, r1
 80100e6:	ec51 0b1a 	vmov	r0, r1, d10
 80100ea:	f7f0 f8ef 	bl	80002cc <__adddf3>
 80100ee:	ec53 2b19 	vmov	r2, r3, d9
 80100f2:	f7f0 faa1 	bl	8000638 <__aeabi_dmul>
 80100f6:	4642      	mov	r2, r8
 80100f8:	464b      	mov	r3, r9
 80100fa:	f7f0 f8e7 	bl	80002cc <__adddf3>
 80100fe:	ec53 2b18 	vmov	r2, r3, d8
 8010102:	f7f0 fa99 	bl	8000638 <__aeabi_dmul>
 8010106:	4642      	mov	r2, r8
 8010108:	464b      	mov	r3, r9
 801010a:	f7f0 f8df 	bl	80002cc <__adddf3>
 801010e:	a34a      	add	r3, pc, #296	; (adr r3, 8010238 <__kernel_tan+0x388>)
 8010110:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010114:	4604      	mov	r4, r0
 8010116:	460d      	mov	r5, r1
 8010118:	ec51 0b19 	vmov	r0, r1, d9
 801011c:	f7f0 fa8c 	bl	8000638 <__aeabi_dmul>
 8010120:	4622      	mov	r2, r4
 8010122:	462b      	mov	r3, r5
 8010124:	f7f0 f8d2 	bl	80002cc <__adddf3>
 8010128:	460b      	mov	r3, r1
 801012a:	ec41 0b18 	vmov	d8, r0, r1
 801012e:	4602      	mov	r2, r0
 8010130:	4659      	mov	r1, fp
 8010132:	4650      	mov	r0, sl
 8010134:	f7f0 f8ca 	bl	80002cc <__adddf3>
 8010138:	4b44      	ldr	r3, [pc, #272]	; (801024c <__kernel_tan+0x39c>)
 801013a:	429f      	cmp	r7, r3
 801013c:	4604      	mov	r4, r0
 801013e:	460d      	mov	r5, r1
 8010140:	f340 8086 	ble.w	8010250 <__kernel_tan+0x3a0>
 8010144:	4630      	mov	r0, r6
 8010146:	f7f0 fa0d 	bl	8000564 <__aeabi_i2d>
 801014a:	4622      	mov	r2, r4
 801014c:	4680      	mov	r8, r0
 801014e:	4689      	mov	r9, r1
 8010150:	462b      	mov	r3, r5
 8010152:	4620      	mov	r0, r4
 8010154:	4629      	mov	r1, r5
 8010156:	f7f0 fa6f 	bl	8000638 <__aeabi_dmul>
 801015a:	4642      	mov	r2, r8
 801015c:	4606      	mov	r6, r0
 801015e:	460f      	mov	r7, r1
 8010160:	464b      	mov	r3, r9
 8010162:	4620      	mov	r0, r4
 8010164:	4629      	mov	r1, r5
 8010166:	f7f0 f8b1 	bl	80002cc <__adddf3>
 801016a:	4602      	mov	r2, r0
 801016c:	460b      	mov	r3, r1
 801016e:	4630      	mov	r0, r6
 8010170:	4639      	mov	r1, r7
 8010172:	f7f0 fb8b 	bl	800088c <__aeabi_ddiv>
 8010176:	ec53 2b18 	vmov	r2, r3, d8
 801017a:	f7f0 f8a5 	bl	80002c8 <__aeabi_dsub>
 801017e:	4602      	mov	r2, r0
 8010180:	460b      	mov	r3, r1
 8010182:	4650      	mov	r0, sl
 8010184:	4659      	mov	r1, fp
 8010186:	f7f0 f89f 	bl	80002c8 <__aeabi_dsub>
 801018a:	4602      	mov	r2, r0
 801018c:	460b      	mov	r3, r1
 801018e:	f7f0 f89d 	bl	80002cc <__adddf3>
 8010192:	4602      	mov	r2, r0
 8010194:	460b      	mov	r3, r1
 8010196:	4640      	mov	r0, r8
 8010198:	4649      	mov	r1, r9
 801019a:	f7f0 f895 	bl	80002c8 <__aeabi_dsub>
 801019e:	9b00      	ldr	r3, [sp, #0]
 80101a0:	ea4f 7aa3 	mov.w	sl, r3, asr #30
 80101a4:	f00a 0a02 	and.w	sl, sl, #2
 80101a8:	4604      	mov	r4, r0
 80101aa:	f1ca 0001 	rsb	r0, sl, #1
 80101ae:	460d      	mov	r5, r1
 80101b0:	f7f0 f9d8 	bl	8000564 <__aeabi_i2d>
 80101b4:	4602      	mov	r2, r0
 80101b6:	460b      	mov	r3, r1
 80101b8:	4620      	mov	r0, r4
 80101ba:	4629      	mov	r1, r5
 80101bc:	f7f0 fa3c 	bl	8000638 <__aeabi_dmul>
 80101c0:	e69f      	b.n	800ff02 <__kernel_tan+0x52>
 80101c2:	bf00      	nop
 80101c4:	f3af 8000 	nop.w
 80101c8:	54442d18 	.word	0x54442d18
 80101cc:	3fe921fb 	.word	0x3fe921fb
 80101d0:	33145c07 	.word	0x33145c07
 80101d4:	3c81a626 	.word	0x3c81a626
 80101d8:	74bf7ad4 	.word	0x74bf7ad4
 80101dc:	3efb2a70 	.word	0x3efb2a70
 80101e0:	32f0a7e9 	.word	0x32f0a7e9
 80101e4:	3f12b80f 	.word	0x3f12b80f
 80101e8:	1a8d1068 	.word	0x1a8d1068
 80101ec:	3f3026f7 	.word	0x3f3026f7
 80101f0:	fee08315 	.word	0xfee08315
 80101f4:	3f57dbc8 	.word	0x3f57dbc8
 80101f8:	e96e8493 	.word	0xe96e8493
 80101fc:	3f8226e3 	.word	0x3f8226e3
 8010200:	1bb341fe 	.word	0x1bb341fe
 8010204:	3faba1ba 	.word	0x3faba1ba
 8010208:	db605373 	.word	0xdb605373
 801020c:	bef375cb 	.word	0xbef375cb
 8010210:	a03792a6 	.word	0xa03792a6
 8010214:	3f147e88 	.word	0x3f147e88
 8010218:	f2f26501 	.word	0xf2f26501
 801021c:	3f4344d8 	.word	0x3f4344d8
 8010220:	c9560328 	.word	0xc9560328
 8010224:	3f6d6d22 	.word	0x3f6d6d22
 8010228:	8406d637 	.word	0x8406d637
 801022c:	3f9664f4 	.word	0x3f9664f4
 8010230:	1110fe7a 	.word	0x1110fe7a
 8010234:	3fc11111 	.word	0x3fc11111
 8010238:	55555563 	.word	0x55555563
 801023c:	3fd55555 	.word	0x3fd55555
 8010240:	3e2fffff 	.word	0x3e2fffff
 8010244:	3ff00000 	.word	0x3ff00000
 8010248:	bff00000 	.word	0xbff00000
 801024c:	3fe59427 	.word	0x3fe59427
 8010250:	2e01      	cmp	r6, #1
 8010252:	d02f      	beq.n	80102b4 <__kernel_tan+0x404>
 8010254:	460f      	mov	r7, r1
 8010256:	4602      	mov	r2, r0
 8010258:	460b      	mov	r3, r1
 801025a:	4689      	mov	r9, r1
 801025c:	2000      	movs	r0, #0
 801025e:	4917      	ldr	r1, [pc, #92]	; (80102bc <__kernel_tan+0x40c>)
 8010260:	f7f0 fb14 	bl	800088c <__aeabi_ddiv>
 8010264:	2600      	movs	r6, #0
 8010266:	e9cd 0100 	strd	r0, r1, [sp]
 801026a:	4652      	mov	r2, sl
 801026c:	465b      	mov	r3, fp
 801026e:	4630      	mov	r0, r6
 8010270:	4639      	mov	r1, r7
 8010272:	f7f0 f829 	bl	80002c8 <__aeabi_dsub>
 8010276:	e9dd 4500 	ldrd	r4, r5, [sp]
 801027a:	4602      	mov	r2, r0
 801027c:	460b      	mov	r3, r1
 801027e:	ec51 0b18 	vmov	r0, r1, d8
 8010282:	f7f0 f821 	bl	80002c8 <__aeabi_dsub>
 8010286:	4632      	mov	r2, r6
 8010288:	462b      	mov	r3, r5
 801028a:	f7f0 f9d5 	bl	8000638 <__aeabi_dmul>
 801028e:	46b0      	mov	r8, r6
 8010290:	460f      	mov	r7, r1
 8010292:	4642      	mov	r2, r8
 8010294:	462b      	mov	r3, r5
 8010296:	4634      	mov	r4, r6
 8010298:	4649      	mov	r1, r9
 801029a:	4606      	mov	r6, r0
 801029c:	4640      	mov	r0, r8
 801029e:	f7f0 f9cb 	bl	8000638 <__aeabi_dmul>
 80102a2:	4b07      	ldr	r3, [pc, #28]	; (80102c0 <__kernel_tan+0x410>)
 80102a4:	2200      	movs	r2, #0
 80102a6:	f7f0 f811 	bl	80002cc <__adddf3>
 80102aa:	4602      	mov	r2, r0
 80102ac:	460b      	mov	r3, r1
 80102ae:	4630      	mov	r0, r6
 80102b0:	4639      	mov	r1, r7
 80102b2:	e665      	b.n	800ff80 <__kernel_tan+0xd0>
 80102b4:	4682      	mov	sl, r0
 80102b6:	468b      	mov	fp, r1
 80102b8:	e625      	b.n	800ff06 <__kernel_tan+0x56>
 80102ba:	bf00      	nop
 80102bc:	bff00000 	.word	0xbff00000
 80102c0:	3ff00000 	.word	0x3ff00000
 80102c4:	00000000 	.word	0x00000000

080102c8 <floor>:
 80102c8:	ec51 0b10 	vmov	r0, r1, d0
 80102cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80102d0:	f3c1 570a 	ubfx	r7, r1, #20, #11
 80102d4:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 80102d8:	2e13      	cmp	r6, #19
 80102da:	ee10 5a10 	vmov	r5, s0
 80102de:	ee10 8a10 	vmov	r8, s0
 80102e2:	460c      	mov	r4, r1
 80102e4:	dc32      	bgt.n	801034c <floor+0x84>
 80102e6:	2e00      	cmp	r6, #0
 80102e8:	da14      	bge.n	8010314 <floor+0x4c>
 80102ea:	a333      	add	r3, pc, #204	; (adr r3, 80103b8 <floor+0xf0>)
 80102ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80102f0:	f7ef ffec 	bl	80002cc <__adddf3>
 80102f4:	2200      	movs	r2, #0
 80102f6:	2300      	movs	r3, #0
 80102f8:	f7f0 fc2e 	bl	8000b58 <__aeabi_dcmpgt>
 80102fc:	b138      	cbz	r0, 801030e <floor+0x46>
 80102fe:	2c00      	cmp	r4, #0
 8010300:	da57      	bge.n	80103b2 <floor+0xea>
 8010302:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 8010306:	431d      	orrs	r5, r3
 8010308:	d001      	beq.n	801030e <floor+0x46>
 801030a:	4c2d      	ldr	r4, [pc, #180]	; (80103c0 <floor+0xf8>)
 801030c:	2500      	movs	r5, #0
 801030e:	4621      	mov	r1, r4
 8010310:	4628      	mov	r0, r5
 8010312:	e025      	b.n	8010360 <floor+0x98>
 8010314:	4f2b      	ldr	r7, [pc, #172]	; (80103c4 <floor+0xfc>)
 8010316:	4137      	asrs	r7, r6
 8010318:	ea01 0307 	and.w	r3, r1, r7
 801031c:	4303      	orrs	r3, r0
 801031e:	d01f      	beq.n	8010360 <floor+0x98>
 8010320:	a325      	add	r3, pc, #148	; (adr r3, 80103b8 <floor+0xf0>)
 8010322:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010326:	f7ef ffd1 	bl	80002cc <__adddf3>
 801032a:	2200      	movs	r2, #0
 801032c:	2300      	movs	r3, #0
 801032e:	f7f0 fc13 	bl	8000b58 <__aeabi_dcmpgt>
 8010332:	2800      	cmp	r0, #0
 8010334:	d0eb      	beq.n	801030e <floor+0x46>
 8010336:	2c00      	cmp	r4, #0
 8010338:	bfbe      	ittt	lt
 801033a:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 801033e:	fa43 f606 	asrlt.w	r6, r3, r6
 8010342:	19a4      	addlt	r4, r4, r6
 8010344:	ea24 0407 	bic.w	r4, r4, r7
 8010348:	2500      	movs	r5, #0
 801034a:	e7e0      	b.n	801030e <floor+0x46>
 801034c:	2e33      	cmp	r6, #51	; 0x33
 801034e:	dd0b      	ble.n	8010368 <floor+0xa0>
 8010350:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8010354:	d104      	bne.n	8010360 <floor+0x98>
 8010356:	ee10 2a10 	vmov	r2, s0
 801035a:	460b      	mov	r3, r1
 801035c:	f7ef ffb6 	bl	80002cc <__adddf3>
 8010360:	ec41 0b10 	vmov	d0, r0, r1
 8010364:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010368:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 801036c:	f04f 33ff 	mov.w	r3, #4294967295
 8010370:	fa23 f707 	lsr.w	r7, r3, r7
 8010374:	4207      	tst	r7, r0
 8010376:	d0f3      	beq.n	8010360 <floor+0x98>
 8010378:	a30f      	add	r3, pc, #60	; (adr r3, 80103b8 <floor+0xf0>)
 801037a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801037e:	f7ef ffa5 	bl	80002cc <__adddf3>
 8010382:	2200      	movs	r2, #0
 8010384:	2300      	movs	r3, #0
 8010386:	f7f0 fbe7 	bl	8000b58 <__aeabi_dcmpgt>
 801038a:	2800      	cmp	r0, #0
 801038c:	d0bf      	beq.n	801030e <floor+0x46>
 801038e:	2c00      	cmp	r4, #0
 8010390:	da02      	bge.n	8010398 <floor+0xd0>
 8010392:	2e14      	cmp	r6, #20
 8010394:	d103      	bne.n	801039e <floor+0xd6>
 8010396:	3401      	adds	r4, #1
 8010398:	ea25 0507 	bic.w	r5, r5, r7
 801039c:	e7b7      	b.n	801030e <floor+0x46>
 801039e:	2301      	movs	r3, #1
 80103a0:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 80103a4:	fa03 f606 	lsl.w	r6, r3, r6
 80103a8:	4435      	add	r5, r6
 80103aa:	4545      	cmp	r5, r8
 80103ac:	bf38      	it	cc
 80103ae:	18e4      	addcc	r4, r4, r3
 80103b0:	e7f2      	b.n	8010398 <floor+0xd0>
 80103b2:	2500      	movs	r5, #0
 80103b4:	462c      	mov	r4, r5
 80103b6:	e7aa      	b.n	801030e <floor+0x46>
 80103b8:	8800759c 	.word	0x8800759c
 80103bc:	7e37e43c 	.word	0x7e37e43c
 80103c0:	bff00000 	.word	0xbff00000
 80103c4:	000fffff 	.word	0x000fffff

080103c8 <scalbn>:
 80103c8:	b570      	push	{r4, r5, r6, lr}
 80103ca:	ec55 4b10 	vmov	r4, r5, d0
 80103ce:	f3c5 520a 	ubfx	r2, r5, #20, #11
 80103d2:	4606      	mov	r6, r0
 80103d4:	462b      	mov	r3, r5
 80103d6:	b99a      	cbnz	r2, 8010400 <scalbn+0x38>
 80103d8:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 80103dc:	4323      	orrs	r3, r4
 80103de:	d036      	beq.n	801044e <scalbn+0x86>
 80103e0:	4b39      	ldr	r3, [pc, #228]	; (80104c8 <scalbn+0x100>)
 80103e2:	4629      	mov	r1, r5
 80103e4:	ee10 0a10 	vmov	r0, s0
 80103e8:	2200      	movs	r2, #0
 80103ea:	f7f0 f925 	bl	8000638 <__aeabi_dmul>
 80103ee:	4b37      	ldr	r3, [pc, #220]	; (80104cc <scalbn+0x104>)
 80103f0:	429e      	cmp	r6, r3
 80103f2:	4604      	mov	r4, r0
 80103f4:	460d      	mov	r5, r1
 80103f6:	da10      	bge.n	801041a <scalbn+0x52>
 80103f8:	a32b      	add	r3, pc, #172	; (adr r3, 80104a8 <scalbn+0xe0>)
 80103fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80103fe:	e03a      	b.n	8010476 <scalbn+0xae>
 8010400:	f240 71ff 	movw	r1, #2047	; 0x7ff
 8010404:	428a      	cmp	r2, r1
 8010406:	d10c      	bne.n	8010422 <scalbn+0x5a>
 8010408:	ee10 2a10 	vmov	r2, s0
 801040c:	4620      	mov	r0, r4
 801040e:	4629      	mov	r1, r5
 8010410:	f7ef ff5c 	bl	80002cc <__adddf3>
 8010414:	4604      	mov	r4, r0
 8010416:	460d      	mov	r5, r1
 8010418:	e019      	b.n	801044e <scalbn+0x86>
 801041a:	f3c1 520a 	ubfx	r2, r1, #20, #11
 801041e:	460b      	mov	r3, r1
 8010420:	3a36      	subs	r2, #54	; 0x36
 8010422:	4432      	add	r2, r6
 8010424:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8010428:	428a      	cmp	r2, r1
 801042a:	dd08      	ble.n	801043e <scalbn+0x76>
 801042c:	2d00      	cmp	r5, #0
 801042e:	a120      	add	r1, pc, #128	; (adr r1, 80104b0 <scalbn+0xe8>)
 8010430:	e9d1 0100 	ldrd	r0, r1, [r1]
 8010434:	da1c      	bge.n	8010470 <scalbn+0xa8>
 8010436:	a120      	add	r1, pc, #128	; (adr r1, 80104b8 <scalbn+0xf0>)
 8010438:	e9d1 0100 	ldrd	r0, r1, [r1]
 801043c:	e018      	b.n	8010470 <scalbn+0xa8>
 801043e:	2a00      	cmp	r2, #0
 8010440:	dd08      	ble.n	8010454 <scalbn+0x8c>
 8010442:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8010446:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 801044a:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 801044e:	ec45 4b10 	vmov	d0, r4, r5
 8010452:	bd70      	pop	{r4, r5, r6, pc}
 8010454:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8010458:	da19      	bge.n	801048e <scalbn+0xc6>
 801045a:	f24c 3350 	movw	r3, #50000	; 0xc350
 801045e:	429e      	cmp	r6, r3
 8010460:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 8010464:	dd0a      	ble.n	801047c <scalbn+0xb4>
 8010466:	a112      	add	r1, pc, #72	; (adr r1, 80104b0 <scalbn+0xe8>)
 8010468:	e9d1 0100 	ldrd	r0, r1, [r1]
 801046c:	2b00      	cmp	r3, #0
 801046e:	d1e2      	bne.n	8010436 <scalbn+0x6e>
 8010470:	a30f      	add	r3, pc, #60	; (adr r3, 80104b0 <scalbn+0xe8>)
 8010472:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010476:	f7f0 f8df 	bl	8000638 <__aeabi_dmul>
 801047a:	e7cb      	b.n	8010414 <scalbn+0x4c>
 801047c:	a10a      	add	r1, pc, #40	; (adr r1, 80104a8 <scalbn+0xe0>)
 801047e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8010482:	2b00      	cmp	r3, #0
 8010484:	d0b8      	beq.n	80103f8 <scalbn+0x30>
 8010486:	a10e      	add	r1, pc, #56	; (adr r1, 80104c0 <scalbn+0xf8>)
 8010488:	e9d1 0100 	ldrd	r0, r1, [r1]
 801048c:	e7b4      	b.n	80103f8 <scalbn+0x30>
 801048e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8010492:	3236      	adds	r2, #54	; 0x36
 8010494:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8010498:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 801049c:	4620      	mov	r0, r4
 801049e:	4b0c      	ldr	r3, [pc, #48]	; (80104d0 <scalbn+0x108>)
 80104a0:	2200      	movs	r2, #0
 80104a2:	e7e8      	b.n	8010476 <scalbn+0xae>
 80104a4:	f3af 8000 	nop.w
 80104a8:	c2f8f359 	.word	0xc2f8f359
 80104ac:	01a56e1f 	.word	0x01a56e1f
 80104b0:	8800759c 	.word	0x8800759c
 80104b4:	7e37e43c 	.word	0x7e37e43c
 80104b8:	8800759c 	.word	0x8800759c
 80104bc:	fe37e43c 	.word	0xfe37e43c
 80104c0:	c2f8f359 	.word	0xc2f8f359
 80104c4:	81a56e1f 	.word	0x81a56e1f
 80104c8:	43500000 	.word	0x43500000
 80104cc:	ffff3cb0 	.word	0xffff3cb0
 80104d0:	3c900000 	.word	0x3c900000

080104d4 <_init>:
 80104d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80104d6:	bf00      	nop
 80104d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80104da:	bc08      	pop	{r3}
 80104dc:	469e      	mov	lr, r3
 80104de:	4770      	bx	lr

080104e0 <_fini>:
 80104e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80104e2:	bf00      	nop
 80104e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80104e6:	bc08      	pop	{r3}
 80104e8:	469e      	mov	lr, r3
 80104ea:	4770      	bx	lr
